Id,PostTypeId,AcceptedAnswerId,ParentId,Score,ViewCount,Body,OwnerUserId,OwnerDisplayName,LastEditorUserId,LastEditDate,LastActivityDate,Title,Tags,AnswerCount,CommentCount,FavoriteCount,CreationDate
20976527,2,,20597388,0,,<p>Are you sure your sending the stomp COMMIT frame?  Receivers wont get transacted SEND frames until the related transaction commits.</p>&#xA;,305364,,,,2014-01-07 16:15:34,"",,0,0,0,2014-01-07 16:15:34
32350219,2,,32349022,1,,"<p>This github example fulfill my needs perfectly.</p>&#xA;&#xA;<p><a href=""https://github.com/sayden/graphql-mongodb-example"" rel=""nofollow"">https://github.com/sayden/graphql-mongodb-example</a></p>&#xA;",5291262,,,,2015-09-02 10:03:54,"",,0,0,0,2015-09-02 10:03:54
32507381,1,32515680,,0,2597,"<p>I am new to Swift. I want to parse a graphql webservice where i need to send the content type to header as &quot;application/graphql&quot;. In general in Objective-C if we are using AFNetworking we can set up the content type as below.</p>&#xA;<pre><code>[requestSerializer setValue:@&quot;application/json&quot; forHTTPHeaderField:@&quot;Accept&quot;];&#xA;</code></pre>&#xA;<p>In Swift i am using Alamofire, i don't have any idea regarding this, that how to set the content type. Being a new comer for Swift, please advised me without hesitation.</p>&#xA;<p>One more thing is graphql service don't accept a proper JSON, Please refer <a href=""https://facebook.github.io/react/blog/2015/05/01/graphql-introduction.html"" rel=""nofollow noreferrer"">here</a></p>&#xA;<p>Please suggest me how to post the values to server? by preparing a string is only an answer? (Sorry if i misunderstood graphql). But please don't hesitate. Give your valuable suggestions.Thanks.</p>&#xA;",1090798,,-1,2020-06-20 09:12:55,2015-09-11 04:50:08,How to send content type in a request while doing parsing using Alamofire networking in Swift?,<swift><parsing><afnetworking><alamofire><graphql>,1,0,0,2015-09-10 16:40:49
34186397,2,,33819658,11,,"<p>You have two options.</p>&#xA;&#xA;<h1>1. Interface</h1>&#xA;&#xA;<p>If the <code>editOptions</code> may vary based on the type, but are consistent for that particular type, you can use an <a href=""http://facebook.github.io/graphql/#sec-Interfaces"" rel=""noreferrer"">Interface</a> (<a href=""http://graphql.org/docs/api-reference-type-system/#graphqlinterfacetype"" rel=""noreferrer"">node.js example</a>).</p>&#xA;&#xA;<p>Let's say you have two objects, a box and a sphere. You can define an object interface that both implement:</p>&#xA;&#xA;<pre><code>interface Object&#xA;type Box implements Object {&#xA;  editOptions: BoxOptions&#xA;}&#xA;type BoxOptions {&#xA;  boxes: Int,&#xA;  size: ...,&#xA;  color: ...&#xA;}&#xA;type Sphere implements Object {&#xA;  editOptions: SphereOptions&#xA;}&#xA;type SphereOptions {&#xA;  spheres: Int,&#xA;  ...&#xA;}&#xA;type Query {&#xA;  objects: [Object]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In your query, you'd then return an <code>Object</code>, and the requested options based for each type:</p>&#xA;&#xA;<pre><code>query Query {&#xA;  objects(filter: ""..."") {&#xA;    ... on Box {&#xA;      editOptions {&#xA;        boxes&#xA;        size&#xA;      }&#xA;    }&#xA;    ... on Sphere {&#xA;      editOptions {&#xA;        spheres&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In the returned JSON, boxes will have <code>boxes</code> and <code>size</code> fields under <code>editOptions</code>, and spheres will have <code>spheres</code>.</p>&#xA;&#xA;<blockquote>&#xA;  <p>sometimes not be useful to have the color</p>&#xA;</blockquote>&#xA;&#xA;<p>If for some of the boxes you don't have the color, the field would simply be empty (but still exist in the schema).</p>&#xA;&#xA;<h1>2. JSON</h1>&#xA;&#xA;<p>If the <code>editOptions</code> can be really variable, you can just define the field as String, and send over serialized JSON. You'll lose all the type validations but the structure can be totally arbitrary for each object. Just make sure your client understands what to do with it.</p>&#xA;",384349,,,,2015-12-09 18:30:28,"",,0,1,0,2015-12-09 18:30:28
34952792,1,35004335,,13,4266,"<p>I was thinking of writing an API that does the following things:</p>&#xA;&#xA;<ul>&#xA;<li>Sign-up and sign-in users which provide the user with an authentication token</li>&#xA;<li>Create maps (data example: <code>{ name: “Quotes”, attributes: [“quote”, “author""] }</code>)</li>&#xA;<li>Create map items (data example: <code>{ quote: ""..."", author: ""..."" }</code>)</li>&#xA;</ul>&#xA;&#xA;<p>I would build the queries somewhat like this:</p>&#xA;&#xA;<pre><code>// return the name and id of all the user's maps&#xA;maps(authToken=""…"") {&#xA;  name,&#xA;  id&#xA;}&#xA;&#xA;// return all the items of a single map&#xA;maps(authToken=""…"") {&#xA;  map(name=“Quotes"") {&#xA;    items&#xA;  }&#xA;}&#xA;&#xA;// OR by using the map_id&#xA;maps(authToken=""…"") {&#xA;  map(id=“…"") {&#xA;    items&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>So, my question is, is this correct or would I need to structure it differently?</strong></p>&#xA;",331402,,,,2017-01-06 10:03:15,How do I structure authenticated queries with GraphQL?,<api><authentication><graphql>,2,0,0,2016-01-22 17:37:35
35968581,1,35973445,,12,8481,"<p>I was wondering what the significance of the string that follows the query type, in this case ""ProvisionQueues"", it seems removing this from the string doesn't affect anything - is it just for logging or something. meta data?</p>&#xA;&#xA;<pre><code>mutation ProvisionQueues {&#xA; createQueue(name: ""new-queue"") {&#xA;    url&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1650757,,,,2021-07-05 05:08:08,The significance of the string immediately after query type (query / mutation) GraphQL,<graphql><graphql-js>,2,0,0,2016-03-13 09:21:56
36272143,1,36276824,,2,576,"<p>Last time I checked, Relay.js did not support session-based NetworkLayer (only one NetworkLayer could be used at the same time).</p>&#xA;&#xA;<p>Thus, queue-hack (<a href=""https://github.com/codefoundries/isomorphic-material-relay-starter-kit/blob/master/webapp/renderOnServer.js#L66"" rel=""nofollow"">https://github.com/codefoundries/isomorphic-material-relay-starter-kit/blob/master/webapp/renderOnServer.js#L66</a>) was required to support multiple sessions. It cannot be used in production as each render is completely blocking another render (including data fetching).</p>&#xA;&#xA;<p>What's the current status on this issue?&#xA;Where can I follow the progress (github issues) and possibly help?</p>&#xA;",692528,,2266855,2016-09-23 15:18:44,2016-09-23 15:18:44,Does Relay.js support isomorphic server-side rendering with multiple sessions?,<graphql><relayjs><isomorphic-javascript><isomorphic-relay>,3,0,0,2016-03-28 22:14:52
36981025,2,,36978916,6,,"<p>AST is ""Abstract Syntax Tree"". AST is what parsers often outputs as a result, it's a machine-readable structure that represents the actual code (GraphQL query in this case). Thus <code>fieldASTs</code> are parsed fields of the current selection, represented as their Abstract Syntax Trees.</p>&#xA;",68544,,,,2016-05-02 11:09:59,"",,0,2,0,2016-05-02 11:09:59
37059523,1,37103686,,21,27703,"<p>I'm putting a GraphQL wrapper over an exiting REST API as described in <a href=""https://www.youtube.com/watch?v=UBGzsb2UkeY"" rel=""noreferrer"">Zero to GraphQL in 30 minutes</a>. I've got an API endpoint for a product with one property that points to a nested object:</p>&#xA;&#xA;<pre><code>// API Response&#xA;{&#xA;  entity_id: 1,&#xA;  nested_object: {&#xA;    key1: val1,&#xA;    key2: val2,&#xA;    ...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is it possible to define the schema so that I can get this entire nested object without explicitly defining the nested object and all of its properties? I want my query to just specify that I want the nested object, and not need to specify all the properties I want from the nested object:</p>&#xA;&#xA;<pre><code>// What I want&#xA;{&#xA;  product(id: ""1"") {&#xA;    entityId&#xA;    nestedObject&#xA;  }&#xA;}&#xA;&#xA;// What I don't want&#xA;{&#xA;  product(id: ""1"") {&#xA;    entityId&#xA;    nestedObject {&#xA;      key1&#xA;      key2&#xA;      ...&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I can do the second version, but it requires lots of extra code, including creating a <code>NestedObjectType</code> and specifying all the nested properties. I've also figured out how to automatically get a list of all the keys, like so:</p>&#xA;&#xA;<pre><code>const ProductType = new GraphQLObjectType({&#xA;  ...&#xA;&#xA;  fields: () =&gt; ({&#xA;    nestedObject: {&#xA;      type: new GraphQLList(GraphQLString),&#xA;      resolve: product =&gt; Object.keys(product.nested_object)&#xA;    }&#xA;  })&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>I haven't figured out a way to automatically return the entire object, though.</p>&#xA;",4175836,,,,2019-07-06 05:43:09,GraphQL - Get all fields from nested JSON object,<graphql>,2,5,0,2016-05-05 20:18:20
37820696,2,,37800555,0,,"<p>I resolved the issue in the root query. I noted that posts in the <a href=""http://docs.apollostack.com/apollo-server/guide.html#Schema"" rel=""nofollow"">docs</a> returned a post array, [Post] and applied that concept. </p>&#xA;&#xA;<p>In schema.js, I changed Query to an array with [Biz]:</p>&#xA;&#xA;<pre><code>type Query {&#xA;  biz(name: String, address: String): [Biz]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>then in resolvers.js I changed the resolvers.Query return statement syntax to the following: </p>&#xA;&#xA;<pre><code>Query: {&#xA;        biz(_, {name, address}) {&#xA;            return Biz.find();&#xA;        }&#xA;    } &#xA;</code></pre>&#xA;",2336356,,,,2016-06-14 19:37:58,"",,0,0,0,2016-06-14 19:37:58
38861408,2,,38753200,2,,"<p>No, you can't!</p>&#xA;&#xA;<p>Once you define a field as <code>GraphQLList</code>, you always get an array. There is no chance that you suddenly get an <code>object</code> instead of <code>array of</code>. &#xA;Same apply to other case when you define field as <code>GraphQLObjectType</code> (or any other scalar type) and you want get an array as result.</p>&#xA;&#xA;<p>Those two fields have really different purposes. </p>&#xA;&#xA;<p>Anyway, you can always add a limit logic to your <code>allPosts</code> field and limit the result to one. But, nevertheless you get always array with only one post</p>&#xA;",3042366,,,,2016-08-09 22:26:21,"",,0,0,0,2016-08-09 22:26:21
39227587,2,,39227457,5,,"<p>That's because async function is getting data, but you are trying to display it before it is fetched, therefore, you are iterating through an empty array. You can solve this problem easily by not initializing array (change <code>bankAccounts: any[] = [];</code> to <code>bankAccounts: any[];</code>) and surrounding your <code>&lt;ul&gt;</code> tags with <code>&lt;div *ngIf=""bankAccounts""&gt;&lt;/div&gt;</code>. That way, <code>bankAccounts</code> array will be undefined until data is fetched and your <code>*ngFor</code> loop will be executed right after array is populated thanks to <code>*ngIf</code> directive.</p>&#xA;",6677986,,6677986,2016-08-30 12:45:36,2016-08-30 12:45:36,"",,0,3,0,2016-08-30 12:31:21
39310994,2,,38575742,0,,<p>I am not sure using '/' is possible when declaring enumeration values.</p>&#xA;&#xA;<p>Try switching the name of 'Dog/Cat' to somthing like 'Animal'</p>&#xA;,6752498,,,,2016-09-03 20:19:40,"",,0,0,0,2016-09-03 20:19:40
39550394,1,39550564,,3,2793,"<p>How can I get info about specific user or specific repo using github GraphQL? I've try this query:</p>&#xA;&#xA;<pre><code>{&#xA;  search (query: ""torvalds"", type: USER, first: 1){&#xA;    edges {&#xA;      node {&#xA;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>but autocomplete for node show only __typename which return string ""User"". </p>&#xA;&#xA;<p><a href=""https://graphql-explorer.githubapp.com/?variables=%7B%7D&amp;query=%7B%0A%20%20search%20(query%3A%20%22torvalds%22%2C%20type%3A%20USER%2C%20first%3A%201)%7B%0A%20%20%20%20%0A%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20__typename%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D"" rel=""nofollow"">DEMO</a></p>&#xA;",387194,,,,2016-09-17 18:58:51,How to get info about specific user using github graphQL?,<github><graphql>,2,0,0,2016-09-17 18:36:48
39550480,2,,39550394,8,,"<p><code>search</code> returns a <code>SearchResultItem</code>, which is an interface. In order to access fields on it, you need to use a fragment on a concrete type like so:</p>&#xA;&#xA;<pre><code>{&#xA;  search (query: ""torvalds"", type: USER, first: 1){&#xA;    edges {&#xA;      node {&#xA;        ... on User {&#xA;          login&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I made a short video tour of GitHub's GraphQL API which you might find useful: <a href=""https://youtu.be/6xO87LlijoQ"" rel=""noreferrer"">https://youtu.be/6xO87LlijoQ</a></p>&#xA;&#xA;<p>EDIT: If you're just looking for a user or org and know the exact name, @stubailo's answer is actually better. You'll still need to use a fragment for most fields, but you'll get just one result of type <code>RepositoryOwner</code>.</p>&#xA;",6268377,,6268377,2016-09-17 18:58:51,2016-09-17 18:58:51,"",,0,1,0,2016-09-17 18:45:31
39551325,1,39551431,,41,39827,"<p>I have a GraphQL query.&#xA;I cannot understand why it is not working.</p>&#xA;&#xA;<pre><code>{&#xA;  repositoryOwner(login: ""Naramsim"") {&#xA;    login&#xA;    repositories(first: 3, isFork: true, orderBy: {field: CREATED_AT}) {&#xA;      edges {&#xA;        node {&#xA;          description&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://graphql-explorer.githubapp.com/?variables=%7B%7D&amp;query=%7B%0A%20%20repositoryOwner(login%3A%20%22Naramsim%22)%20%7B%0A%20%20%20%20login%0A%20%20%20%20repositories(first%3A%203%2C%20isFork%3A%20true%2C%20orderBy%3A%20%7Bfield%3A%20CREATED_AT%7D)%20%7B%0A%20%20%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20%20%20description%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""noreferrer"">Link</a></p>&#xA;",3482533,,3997521,2019-03-18 19:31:49,2019-03-18 19:31:49,Github graphQL OrderBy,<github><graphql><github-graphql>,1,0,0,2016-09-17 20:19:36
39551431,2,,39551325,83,,"<p>You've got an error</p>&#xA;&#xA;<pre><code>Argument 'orderBy' on Field 'repositories' has an invalid value.&#xA;Expected type 'RepositoryOrder'.&#xA;</code></pre>&#xA;&#xA;<p>You forget to specify direction which is marked as mandatory. This will work:</p>&#xA;&#xA;<pre><code>{&#xA;  repositoryOwner(login: ""Naramsim"") {&#xA;    login&#xA;    repositories(first: 3, isFork: true,  orderBy: {field: CREATED_AT, direction: ASC}) {&#xA;      edges {&#xA;        node {&#xA;          description&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4492137,,,,2016-09-17 20:30:39,"",,0,4,0,2016-09-17 20:30:39
39579506,2,,39579416,6,,"<p>When you need to make a circular reference.</p>&#xA;&#xA;<p>Look for my similiar answer here</p>&#xA;&#xA;<p><a href=""https://stackoverflow.com/questions/39256942/dynamically-creating-graphql-schema-with-circular-references/39290345#39290345"">Dynamically creating graphql schema with circular references</a></p>&#xA;",3042366,,-1,2017-05-23 10:34:12,2016-09-19 18:07:56,"",,0,2,0,2016-09-19 18:07:56
39666940,1,39674310,,4,2244,"<p>How can multiple queries be batched into a single request to GitHub's GraphQL API?</p>&#xA;&#xA;<p>For example, how would you batch these 2 queries into a single request and receive a single response? And would this technique work with many more queries (say 200)?</p>&#xA;&#xA;<pre><code>{&#xA;  repositoryOwner(login:""rails"") {&#xA;    repository(name:""rails"") {&#xA;      description&#xA;      homepageURL&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;{&#xA;  repositoryOwner(login:""github"") {&#xA;    repository(name:""graphql-client"") {&#xA;      description&#xA;      homepageURL&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>(The GitHub GraphQL API can be experimented with at <a href=""https://developer.github.com/early-access/graphql/explorer/"" rel=""nofollow"">https://developer.github.com/early-access/graphql/explorer/</a>)</p>&#xA;",67834,,,,2018-08-22 15:18:11,How to batch GitHub GraphQL API queries?,<github-api><graphql>,1,0,0,2016-09-23 18:01:48
39674310,2,,39666940,13,,"<p>You need to wrap the calls to both fields in one query:</p>&#xA;&#xA;<pre><code>{&#xA;  repositoryOwner(login:""rails"") {&#xA;    repository(name:""rails"") {&#xA;      description&#xA;      homepageURL&#xA;    }&#xA;  } &#xA;  repositoryOwner(login:""github"") {&#xA;    repository(name:""graphql-client"") {&#xA;      description&#xA;      homepageURL&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This will still fail though, as there are now two fields in the output with the same name (repositoryOwner), so you need to alias them:</p>&#xA;&#xA;<pre><code>{&#xA;   rails: repositoryOwner(login:""rails"") {&#xA;     repository(name:""rails"") {&#xA;       description&#xA;       homepageURL&#xA;     }&#xA;   } &#xA;   graphql_client: repositoryOwner(login:""github"") {&#xA;     repository(name:""graphql-client"") {&#xA;       description&#xA;       homepageURL&#xA;     }&#xA;   }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>See <a href=""https://github.com/mugli/learning-graphql/blob/master/3.%20Querying%20with%20Field%20Aliases%20and%20Fragments.md"" rel=""noreferrer"">this explanation</a>.</p>&#xA;&#xA;<p>If you could generate a unique alias for every one of your queries, then yes this technique should work fine.</p>&#xA;",139404,,,,2016-09-24 08:36:20,"",,0,0,0,2016-09-24 08:36:20
40012959,2,,40011181,4,,"<p>There is a <code>data</code> field because in addition there can be an <code>errors</code> field, too. In fact, if the query errored, there may only be an <code>errors</code> field and no data. In addition to those two, it's also possible to have a third key called <code>extensions</code> for - you guessed it - custom extensions.</p>&#xA;&#xA;<p>For more information, read section 7.2  of the <a href=""https://facebook.github.io/graphql/#sec-Response-Format"" rel=""nofollow"">GraphQL Draft Specification</a>.</p>&#xA;",6268377,,,,2016-10-13 05:30:26,"",,0,1,0,2016-10-13 05:30:26
40297436,1,40297712,,1,1413,"<p>The graphQL server is set up. It works properly when the values are hardcoded. Here is my invocation request:</p>&#xA;&#xA;<pre><code>""query"": ""mutation{&#xA;    createEvent(name: ""+ name +"", purpose: ""+ purpose +"", googleUserName: ""+ googleUserName +"", dateArray: ""+ JSON.stringify(dateArray) +"", attendees: [])&#xA;    {&#xA;      eventId&#xA;      name&#xA;      purpose&#xA;      googleUserName &#xA;      dateArray &#xA;      attendees{&#xA;         attendeeName&#xA;         personalizedDateSelection&#xA;         }&#xA;      }&#xA;   }""&#xA;</code></pre>&#xA;&#xA;<p>This gives the error: </p>&#xA;&#xA;<pre><code>{""errors"":&#xA;   [{""message"":&#xA;     ""Syntax Error GraphQL request (1:88) Expected :, found Name \""dateArray\""\n\n1: mutation{createEvent(name: lakshman, purpose: test, googleUserName: Diwaakartg Ganesh, dateArray: [\""Wed, Nov 9th 2016\"",\""Thu, Nov 10th 2016\"",\""Thu, Nov 3rd 2016\"",\""Wed, Nov 2nd 2016\""], attendees: [])&#xA;      {eventId&#xA;       name&#xA;       purpose&#xA;       googleUserName&#xA;       dateArray&#xA;       attendees{&#xA;          attendeeName &#xA;          personalizedDateSelection&#xA;          }&#xA;       }&#xA;    }\n}]}                                                                                      &#xA;</code></pre>&#xA;&#xA;<p><strong>There is no alignment error. I have made it so to enhance the readability</strong>&#xA;But, the above mutation works properly when hardcoded the arguments. I find it pretty difficult to find what is the cause of the error. I have tried both <strong>JSON.stringify(dateArray)</strong> and just the <strong>dateArray</strong> alone. </p>&#xA;&#xA;<p>Or is there a better approach to query GraphQL from react-redux app?</p>&#xA;",3477322,,3280944,2016-10-29 06:27:13,2016-10-29 06:27:13,sending an array to graphQL endpoint,<graphql><graphql-js>,1,0,0,2016-10-28 03:05:59
40424142,2,,40381957,0,,"<p>You can use a Union for that:</p>&#xA;&#xA;<p><a href=""http://graphql.org/graphql-js/type/#graphqluniontype"" rel=""nofollow noreferrer"">http://graphql.org/graphql-js/type/#graphqluniontype</a></p>&#xA;&#xA;<p>But as griffith_joel suggested - look closer at what you're trying to do by overloading that one field and think if it would be better off as two distinct fields. Not knowing your intent, but perhaps a non-null ""success"" field and an optional ""username"" field.</p>&#xA;",778060,,,,2016-11-04 13:39:40,"",,0,0,0,2016-11-04 13:39:40
40427609,1,40429930,,5,4774,"<p>I just started using apollo client on a React application and I'm stuck on caching.&#xA;I have a home page with a list of products where I do a query to get the id and name of those products and a product page where I do query for the ID, name, description and image.</p>&#xA;&#xA;<p>I would like that if a user visits the home page fist then a specific product page to only do a query for that product's description and image, also display the name during the loading (since I should have cached it already).&#xA;I followed ""Controlling the Store"" part of the documentation (<a href=""http://dev.apollodata.com/react/cache-updates.html"" rel=""noreferrer"">http://dev.apollodata.com/react/cache-updates.html</a>) but still couldn't resolve it.</p>&#xA;&#xA;<p>The query that is done when we go to the product page still asks for both the product's id and name whereas they should be cached since I already asked for them.</p>&#xA;&#xA;<p>I think I'm missing something but I can't figure it out.&#xA;Here is a bit of the code:</p>&#xA;&#xA;<pre><code>// Create the apollo graphql client.&#xA;const apolloClient = new ApolloClient({&#xA;    networkInterface: createNetworkInterface({&#xA;        uri: `${process.env.GRAPHQL_ENDPOINT}`&#xA;    }),&#xA;    queryTransformer: addTypename,&#xA;    dataIdFromObject: (result) =&gt; {&#xA;        if (result.id &amp;&amp; result.__typename) {&#xA;&#xA;            console.log(result.id, result.__typename); //can see this on console, seems okey&#xA;            return result.__typename + result.id;&#xA;        }&#xA;&#xA;        // Make sure to return null if this object doesn't have an ID&#xA;        return null;&#xA;    },&#xA;});&#xA;&#xA;// home page query&#xA;// return an array of objects (Product)&#xA;export default  graphql(gql`&#xA;   query ProductsQuery {&#xA;        products {&#xA;            id, name&#xA;        }&#xA;    }&#xA;`)(Home);&#xA;&#xA;//product page query&#xA;//return an object (Product)&#xA;export default graphql(gql`&#xA;   query ProductQuery($productId: ID!) {&#xA;        product(id: $productId) {&#xA;            id, name, description, image&#xA;        }&#xA;    }&#xA;`,{&#xA;    options: props =&gt; ({ variables: { productId:  props.params.id } }),&#xA;    props: ({ data: { loading, product } }) =&gt; ({&#xA;        loading,&#xA;        product,})&#xA;})(Product);&#xA;</code></pre>&#xA;&#xA;<p>And my console output:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/7VAE6.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/7VAE6.png"" alt=""console output""></a></p>&#xA;",3235577,,,,2020-01-29 13:41:36,Apollo Client cache,<reactjs><graphql><apollo>,2,0,0,2016-11-04 16:32:28
40539819,2,,37665539,0,,"<p>If you are using Apollo, you can easily multiplex the errors array in the graphql response for both graphql errors AND custom errors that are machine readable using this package:</p>&#xA;&#xA;<p><a href=""https://github.com/thebigredgeek/apollo-errors"" rel=""nofollow noreferrer"">https://github.com/thebigredgeek/apollo-errors</a></p>&#xA;",1707160,,,,2016-11-11 01:27:54,"",,0,0,0,2016-11-11 01:27:54
40539826,2,,40124494,5,,"<p>With Apollo, you can easily multiplex the errors array in the graphql response for both graphql errors AND custom errors that are machine readable using this package:</p>&#xA;&#xA;<p><a href=""https://github.com/thebigredgeek/apollo-errors"" rel=""noreferrer"">https://github.com/thebigredgeek/apollo-errors</a></p>&#xA;",1707160,,,,2016-11-11 01:29:09,"",,0,0,0,2016-11-11 01:29:09
40655390,1,,,0,1416,"<p>My data is </p>&#xA;&#xA;<pre><code>Array[3]&#xA;  0: Object&#xA;    time: ""0:00"",&#xA;    value: 4&#xA;  1: Object&#xA;    time: ""0:00"",&#xA;    value: 7&#xA;  2: Object&#xA;    time: ""0:02""&#xA;    value: -6&#xA;</code></pre>&#xA;&#xA;<p>I need to push this array of data to mongodb using graphql with <strong>mutation</strong>..please give me some ideas or sample code to finish. &#xA;Thanks in Advance</p>&#xA;",7172906,,,,2016-11-17 20:57:29,I need to push array data to mongodb using graphql,<graphql><mongoose-schema>,1,0,0,2016-11-17 12:50:27
40697597,1,41481089,,34,75238,<p>I need to be able to create a user and add it's favourite movies (An array of objects with a reference to the Movies collection and his personal rating for each movie) in a single request.</p>&#xA;&#xA;<p>Something that could look like this (pseudocode)</p>&#xA;&#xA;<pre><code>var exSchema = `&#xA; type Mutation {&#xA;    addUser(&#xA;        name: String!&#xA;        favMovies: [{ movie: String! #ref to movies coll&#xA;                      personal_rating: Int! # this is different for every movie&#xA;                   }]&#xA;    ) : User&#xA; }&#xA;...&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>What is the graphql way of doing this in a single request? I know I can achieve the result with multiple mutations/requests but I would like to do it in a single one.</p>&#xA;,2284676,,,,2021-10-11 14:47:17,GraphQL mutation that accepts an array of dynamic size and common scalar types in one request,<javascript><graphql><apollostack>,6,3,0,2016-11-19 20:31:39
40743273,1,40743407,,9,4807,"<p>What is wrong here?</p>&#xA;<pre><code>query='{ repositoryOwner(login : &quot;ALEXSSS&quot;) { login repositories (first : 30){ edges { node { name } } } } }'&#xA;&#xA;headers = {'Authorization': 'token xxx'}&#xA;&#xA;r2=requests.post('https://api.github.com/graphql', '{&quot;query&quot;: \&quot;'+query+'\&quot;}',headers=headers)&#xA;&#xA;print (r2.json())&#xA;</code></pre>&#xA;<p>I've got</p>&#xA;<pre><code>{'message': 'Problems parsing JSON', 'documentation_url': 'https://developer.github.com/v3'}&#xA;</code></pre>&#xA;<p>but this snippet of code below works correctly</p>&#xA;<pre><code>query1= '''{ viewer { login name } }'''  &#xA;&#xA;headers = {'Authorization': 'token xxx'} &#xA;&#xA;r2=requests.post('https://api.github.com/graphql', '{&quot;query&quot;: \&quot;'+query1+'\&quot;}',headers=headers) &#xA;&#xA;print (r2.json())&#xA;</code></pre>&#xA;<p>I've tried out to change quotes (from &quot; into ' or with &quot; and so on)  but it doesn't work.</p>&#xA;",5993278,,5993278,2022-02-14 09:29:06,2022-02-14 09:29:06,GitHub GraphQL API Problems parsing JSON,<python><python-requests><github-api><graphql>,1,0,0,2016-11-22 13:36:08
40743407,2,,40743273,13,,"<p>The problem is related with the double quotes ("").&#xA;On the first snippet, when you join the <code>'{""query"": \""'+query+'\""}'</code> with the query variable, you get the following result:</p>&#xA;&#xA;<pre><code>{""query"": ""{ repositoryOwner(login : ""ALEXSSS"") { login repositories (first : 30){ edges { node { name } } } } }""}&#xA;</code></pre>&#xA;&#xA;<p>Notice how the double quote from <code>""ALEXSSS""</code> are not escaped, therefore the resultant string is not a json valid format.</p>&#xA;&#xA;<p>When you run the second snippet, the resultant string is:</p>&#xA;&#xA;<pre><code>{""query"": ""{ viewer { login name } }""}&#xA;</code></pre>&#xA;&#xA;<p>which is a valid json string.</p>&#xA;&#xA;<p>The easiest and best solution is simply use the JSON library instead of trying to do it manually, so you won't need to worry about escaping characters.</p>&#xA;&#xA;<pre><code>import json&#xA;&#xA;query='{ repositoryOwner(login : ""ALEXSSS"") { login repositories (first : 30){ edges { node { name } } } } }'&#xA;headers = {'Authorization': 'token xxx'}&#xA;&#xA;r2=requests.post('https://api.github.com/graphql', json.dumps({""query"": query}), headers=headers)&#xA;&#xA;print (r2.json())&#xA;</code></pre>&#xA;&#xA;<p>But remember that you could also just escape the characters on the query manually:</p>&#xA;&#xA;<pre><code>query='{ repositoryOwner(login : \""ALEXSSS\"") { login repositories (first : 30){ edges { node { name } } } } }'&#xA;headers = {'Authorization': 'token xxx'}&#xA;&#xA;r2=requests.post('https://api.github.com/graphql', '{""query"": ""'+query1+'""}', headers=headers)&#xA;&#xA;print (r2.json())&#xA;</code></pre>&#xA;&#xA;<p>it works as expected :)</p>&#xA;",3097900,,3097900,2017-02-07 14:16:56,2017-02-07 14:16:56,"",,0,3,0,2016-11-22 13:41:54
40898691,1,40904108,,2,692,"<p>I have probably overlooked something in the docs, but I have seem to run into a problem with being able to get a single object from my graphql queries.</p>&#xA;&#xA;<p>Here is the schema:</p>&#xA;&#xA;<pre><code>type Query {&#xA;    product(name: String!): Product&#xA;}&#xA;&#xA;type Product {&#xA;    _id: String&#xA;    name: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the resolver:</p>&#xA;&#xA;<pre><code>Query: {&#xA;   product (_, args) {&#xA;       return Products.find({where: args})&#xA;   },&#xA;   products () {&#xA;       return Products.find().fetch()&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the Query:</p>&#xA;&#xA;<pre><code>query {&#xA;    product(name: ""burgers"") {&#xA;        name&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get a result of this:</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;        ""product"": {&#xA;          ""name"": null&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Am I just forgetting to add something to this, and if so could you point me the right direction.</p>&#xA;",3119898,,,,2016-12-01 06:38:43,"When querying for a single item in graphql, meteor, and apollo i get null values returned",<meteor><graphql><apollo>,1,2,0,2016-11-30 21:37:01
40904108,2,,40898691,1,,"<p>If <code>Products</code> is a Meteor Collection, then <code>.find</code> returns a cursor, so the right thing to return would be <code>Products.findOne({name: args.name})</code></p>&#xA;&#xA;<p><a href=""http://docs.meteor.com/api/collections.html#Mongo-Collection-findOne"" rel=""nofollow noreferrer"">http://docs.meteor.com/api/collections.html#Mongo-Collection-findOne</a></p>&#xA;",627729,,,,2016-12-01 06:38:43,"",,0,0,0,2016-12-01 06:38:43
41007510,2,,36010618,1,,"<p>I know this is old but had similar problem, when querying for list returns null.</p>&#xA;&#xA;<p>When querying for arrays you'll get an object {key: yourArray}, so it should be:</p>&#xA;&#xA;<pre><code>return ListingModel.find({}, projection).then(listing =&gt; {&#xA; console.log(listing)&#xA; return {listing: listing}&#xA;</code></pre>&#xA;",5994645,,13302,2016-12-08 11:31:28,2016-12-08 11:31:28,"",,0,0,0,2016-12-07 00:41:58
41213242,2,,41212653,1,,"<p>You need to use a batching network layer. See either <a href=""https://www.npmjs.com/package/react-relay-network-layer"" rel=""nofollow noreferrer"">react-relay-network-layer</a> or <a href=""https://www.npmjs.com/package/@taion/relay-network-layer"" rel=""nofollow noreferrer"">my fork of the stock network layer</a> (which requires <a href=""https://www.npmjs.com/package/@taion/express-graphql"" rel=""nofollow noreferrer"">my express-graphql fork</a> as well).</p>&#xA;",5319173,,,,2016-12-18 21:48:37,"",,0,0,0,2016-12-18 21:48:37
41259454,1,41261260,,4,1050,"<p>Assume I have a GraphQL Schema like this:</p>&#xA;&#xA;<pre><code>Schema {&#xA;  user($id: ID) {&#xA;    id: ID&#xA;    name: String&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I know how to query for one user by his ID, and I could use aliases to query for several users like so:</p>&#xA;&#xA;<pre><code>GetSomeMore {&#xA;  john: user(id: ""123"") {&#xA;    name&#xA;  }&#xA;  mary: user(id: ""321"") {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, assume I just have a list of user IDs, and would like to query for the names of each one of them. How would I write a query like that?</p>&#xA;&#xA;<p>The approaches I can come up with is ether dynamically generating a query with aliases like <code>user1</code>, <code>user2</code>, etc., or implementing a <code>users(ids: [ID])</code> edge on the server. But I feel like there should be a better solution. Is there?</p>&#xA;&#xA;<p><em>(PS: my code examples might have syntax errors, I'm writing it more as pseudocode, to get my point across.)</em></p>&#xA;",2059662,,2059662,2016-12-21 12:03:53,2016-12-21 19:36:41,How to query for dynamic amount of aliases?,<javascript><node.js><graphql><graphql-js>,2,0,0,2016-12-21 09:36:49
41306580,1,41311497,,0,93,"<p>I’ve just gotten my first relational database schema/query/resolver working in apollo/postgres/sequelize, up to the point where it’s time for the resolver to return data to the client. Evidently I don’t have the data in the correct shape yet, as it comes up null on the client. </p>&#xA;&#xA;<p><strong>QUERY</strong></p>&#xA;&#xA;<pre><code>const CREATE_APPT_MUTATION = gql`&#xA;            mutation createAPPT ($originatingUserID: String!, $apptWithUserID: String!, $apptDateTime: String!, $apptNotes: String!, $apptTitle: String!){&#xA;                createAPPT(originatingUserID: $originatingUserID, apptWithUserID: $apptWithUserID, apptDateTime: $apptDateTime, apptNotes: $apptNotes, apptTitle: $apptTitle){&#xA;                    originatingUserID&#xA;                    apptWithUserID&#xA;                    apptDateTime&#xA;                    apptNotes&#xA;                    apptTitle&#xA;                }&#xA;            }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p><strong>CURRENT SHAPE OF RESPONSE FROM RESOLVER</strong></p>&#xA;&#xA;<p>Via console.log running on the server, before being sent to client:</p>&#xA;&#xA;<pre><code>{ data: &#xA;   { __typename: 'Mutation',&#xA;     createAPPT: &#xA;      { id: '76',&#xA;        originatingUserID: 'DsmkoaYPeAumREsqC',&#xA;        apptWithUserID: '9W95z8A7Y6i34buk7',&#xA;        apptDateTime: '2016-12-24T02:48:50.000Z',&#xA;        apptTitle: 'Appointment with Benedict Sama',&#xA;        apptNotes: 'asdf',&#xA;        createdAt: Fri Dec 23 2016 10:49:12 GMT-0800 (PST),&#xA;        updatedAt: Fri Dec 23 2016 10:49:12 GMT-0800 (PST),&#xA;        UserData: [Object],&#xA;        __typename: 'Appts' &#xA;        } &#xA;    } &#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>HOW IT LOOKS IN CHROME DEV TOOLS WHEN IT COMES BACK TO THE CLIENT</strong></p>&#xA;&#xA;<pre><code>mutationResult: Object&#xA;    data: Object&#xA;        createAPPT: Object&#xA;            __typename: ""Appts""&#xA;            apptDateTime: null&#xA;            apptNotes: null&#xA;            apptTitle: null&#xA;            apptWithUserID: null&#xA;            originatingUserID: null&#xA;        __proto__: Object&#xA;    __proto__: Object&#xA;__proto__: Object&#xA;</code></pre>&#xA;&#xA;<p><strong>FINAL <code>THEN</code> BLOCK IN RESOLVER</strong></p>&#xA;&#xA;<pre><code>.then(apptWithJoinedData =&gt; {&#xA;        //package up the results in the way that the client is expecting&#xA;        const apptDataValues = apptWithJoinedData[0].dataValues;&#xA;        apptDataValues.__typename = ""Appts"";&#xA;        var serverResponse = {};&#xA;        serverResponse.data = {};&#xA;        serverResponse.data.__typename = 'Mutation';&#xA;        serverResponse.data.createAPPT = apptDataValues;&#xA;&#xA;        // publish subscription notification&#xA;        debugger;&#xA;        console.log(serverResponse);&#xA;        pubsub.publish('APPTAdded', serverResponse);&#xA;        return serverResponse;&#xA;    })&#xA;</code></pre>&#xA;&#xA;<p>Can someone point me in the direction of seeing what's wrong with the shape of the server response?</p>&#xA;",364966,,364966,2016-12-23 21:15:07,2016-12-24 08:01:27,Apollo: Required Shape of Server Response?,<apollostack><apollo-server>,1,0,0,2016-12-23 18:56:11
41398613,1,,,0,393,"<p>Using the type <code>Text</code> defined in <a href=""https://scaphold.io/docs/#scalars"" rel=""nofollow noreferrer"">scaphold.io API</a>, I'm trying to make the following mutation where <code>content</code> is of type ""Text"", but I'm getting the following error: ""BadRequestError: Invalid input values.""&#xA;Does anyone know why is that happening? It works when the content type is string.</p>&#xA;&#xA;<pre><code>mutation {&#xA;   createPost (input: {&#xA;      content: ""d""&#xA;   }) &#xA;   {&#xA;      changedPost {&#xA;         content&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;",5017238,,2821632,2016-12-31 12:33:22,2016-12-31 12:33:22,GraphQL Text Type invalid argument,<graphql>,1,2,0,2016-12-30 15:26:14
41478124,2,,41354765,0,,"<p>You are right on the money in your first approach. The <code>id</code> field can not be null (<code>id: ID!</code>) and it can not have a value when you need to create the user, so you need to have another input type for it.</p>&#xA;&#xA;<p>As <a href=""https://stackoverflow.com/users/3084511/mattdionis"">mattdionis</a> also pointed out, there's a very similiar sample in the <a href=""http://graphql.org/graphql-js/mutations-and-input-types/"" rel=""nofollow noreferrer"">docs</a>.</p>&#xA;",1317053,,-1,2017-05-23 12:09:33,2017-01-05 05:53:21,"",,0,0,0,2017-01-05 05:53:21
41481089,2,,40697597,60,,"<p>You can pass an array like this</p>&#xA;&#xA;<pre><code>var MovieSchema = `&#xA;  type Movie {&#xA;   name: String&#xA;  }&#xA;  input MovieInput {&#xA;   name: String&#xA;  }&#xA;  mutation {&#xA;   addMovies(movies: [MovieInput]): [Movie]&#xA;  }&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>Then in your mutation, you can pass an array like</p>&#xA;&#xA;<pre><code>mutation {&#xA;  addMovies(movies: [{name: 'name1'}, {name: 'name2'}]) {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Haven't tested the code but you get the idea</p>&#xA;",2284676,,2284676,2017-01-05 11:22:19,2017-01-05 11:22:19,"",,0,3,0,2017-01-05 09:15:03
41496775,2,,41486401,1,,"<p>Are you using the <code>graphql-express</code> npm package?</p>&#xA;&#xA;<p>If so then the issue is likely this line:&#xA;<a href=""https://github.com/graphql/express-graphql/blob/master/src/parseBody.js#L112"" rel=""nofollow noreferrer"">https://github.com/graphql/express-graphql/blob/master/src/parseBody.js#L112</a></p>&#xA;&#xA;<p>As you can see this sets a max size of 100kb for the request.</p>&#xA;&#xA;<p>We ran into the same issue and fixed it by forking the repository and manually increased the max request size.</p>&#xA;&#xA;<p>This might be a nice opportunity to contribute to the package though!&#xA;It would be nice if the limit were configurable.</p>&#xA;",2088684,,502381,2017-01-06 10:10:46,2017-01-06 10:10:46,"",,0,3,0,2017-01-05 23:56:04
41632152,1,41637065,,4,3942,"<p>I am trying to use Apollo graphql in a Meteor blaze project. </p>&#xA;&#xA;<p>I am using the package from <code>swydo:blaze-apollo</code>.&#xA;It is fine to get the data from mongoDB by using graphql query.</p>&#xA;&#xA;<pre><code>// Using this one can get data&#xA;const LOCATION_COUNTRY_QUERY = gql`&#xA;{&#xA;    locations(location_type: ""Country""){&#xA;        location_id&#xA;        name&#xA;        iso_code&#xA;    }&#xA;}&#xA;`;&#xA;&#xA;Template.home.onCreated(function(){&#xA;    const country = this.gqlQuery({query: LOCATION_COUNTRY_QUERY}).get();&#xA;    console.log(country.locations); // Which will show an array list of country.&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>However, I don't want to hard code ""Country"" in the query. I want to pass the String into the query then get the data with other location_type. But I cannot find any article about it and the gql syntax just blocking any parameter.</p>&#xA;&#xA;<p>Anyone has similar experience and can give any suggestions?</p>&#xA;",7414131,,2417043,2017-01-13 10:39:18,2017-01-13 14:39:44,How to pass parameter to graphql query?,<meteor><meteor-blaze><graphql><apollo>,1,0,0,2017-01-13 10:15:05
41967007,1,,,0,529,"<p>I am just starting to use <a href=""https://github.com/vazco/uniforms/"" rel=""nofollow noreferrer"">Vazco ""Uniforms""</a> in my <a href=""https://github.com/warehouseman/meteor-mantra-kickstarter"" rel=""nofollow noreferrer"">Meteor Mantra Kickstarter</a>, but I've hit a hard to solve puzzle : </p>&#xA;&#xA;<pre><code>&lt;section class=""field form-group""&gt;&#xA;  &lt;label for=""uniforms-0000-0002"" class=""control-label""&gt;&#xA;    Content&#xA;  &lt;/label&gt;&#xA;  &lt;textarea class=""form-control"" id=""uniforms-0000-0002"" name=""content"" placeholder=""""&gt;&#xA;  &lt;/textarea&gt;&#xA;&lt;/section&gt;&#xA;</code></pre>&#xA;&#xA;<p>That <code>textarea</code>, for example , as well as <strong>all</strong> other fields of all kinds on my form, is <strong>not write-able</strong>.</p>&#xA;&#xA;<p><strong>Is there some mistake I might be making that blocks me from being able to write to the fields in the form?</strong></p>&#xA;&#xA;<p>The JSX for it looks like this: </p>&#xA;&#xA;<pre><code>&lt;BaseForm disabled={false}  placeholder={false} schema={this.bridge} &gt;&#xA;  &lt;div className=""row-fluid""&gt;&#xA;    &lt;div className=""col-md-4""&gt;&#xA;      &lt;NumField grid={6} name=""pages"" label=""# Pages"" value=""0""/&gt;&#xA;      &lt;TextField name=""title"" label=""Title"" /&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div className=""col-md-8""&gt;&#xA;      &lt;LongTextField name=""content"" label=""Content""&#xA;                     disabled={false} placeholder={false} /&gt;&#xA;     &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;ErrorsField /&gt;&#xA; &lt;/BaseForm&gt;&#xA;</code></pre>&#xA;&#xA;<p>I set up the bridge definitions like this : </p>&#xA;&#xA;<pre><code>            : &#xA;            : &#xA;  this.schemaType = API_AST.getType('Book');&#xA;&#xA;  this.schemaValidator = model =&gt; {&#xA;    const details = [];&#xA;  };&#xA;&#xA;  this.schemaData = {&#xA;  };&#xA;&#xA;  console.log(""Book schema : "", this.schemaType);&#xA;  console.log(""Schema validator : "", this.schemaValidator);&#xA;  console.log(""Schema data : "", this.schemaData);&#xA;&#xA;  this.bridge = new GraphQLBridge(&#xA;                         this.schemaType&#xA;                       , this.schemaValidator&#xA;                       , this.schemaData&#xA;  );&#xA;  console.log(""The bridge : "", this.bridge);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The various <code>console.log( ""..."" )</code> instructions show : </p>&#xA;&#xA;<pre><code>Book schema :  GraphQLObjectType&#xA;     _fields:  Object&#xA;        _id:  Object&#xA;        author:  Object&#xA;        content:  Object&#xA;        pages:  Object&#xA;        title:  Object&#xA;        __proto__: Object&#xA;    _interfaces: Array[0]&#xA;    _typeConfig: Object,&#xA;        description: """"&#xA;        isTypeOf: undefined,&#xA;        name: ""Book"",&#xA;    __proto__: Object&#xA;</code></pre>&#xA;&#xA;<p>... then ...</p>&#xA;&#xA;<pre><code>Schema validator :  function (model) {             // 39&#xA;  var details = [];&#xA;</code></pre>&#xA;&#xA;<p>... then ...</p>&#xA;&#xA;<pre><code>Schema data :  Object&#xA;                __proto__: Object&#xA;</code></pre>&#xA;&#xA;<p>... then ...</p>&#xA;&#xA;<pre><code>The bridge :  GraphQLBridge&#xA;                 extras: Object&#xA;                 schema: GraphQLObjectType&#xA;                   _fields: Object&#xA;                     _id: Object&#xA;                     author: Object&#xA;                     content: Object&#xA;                     pages: Object&#xA;                     title: Object&#xA;                     __proto__: Object&#xA;                   _interfaces: Array[0]&#xA;                   _typeConfig: Object&#xA;                      description: """"&#xA;                      isTypeOf: undefined&#xA;                      name: ""Book""&#xA;                    __proto__: Onject&#xA;                 validator: (model)&#xA;                 __proto__: Bridge&#xA;</code></pre>&#xA;&#xA;<p>Please let me know if the listings here are insufficient.</p>&#xA;",1544075,,,,2017-01-31 20:44:26,"Using Vazco ""Uniforms"" in React-Meteor with Apollo GraphQL",<forms><graphql><meteor-react><react-apollo><mantrajs>,1,0,0,2017-01-31 20:34:48
42021113,1,42021388,,41,33991,"<p>After referring this <a href=""https://developer.github.com/early-access/graphql/guides/accessing-graphql/"" rel=""noreferrer"">guide</a> I needed to access the github <code>graphql</code> by using <code>curl</code> for a testing purpose. I tried this simple command </p>&#xA;&#xA;<pre><code>curl -i -H ""Authorization: bearer myGithubAccessToken"" -X POST -d '{""query"": ""query {repository(owner: ""wso2"", name: ""product-is"") {description}}""}' https://api.github.com/graphql&#xA;</code></pre>&#xA;&#xA;<p>but it gives me</p>&#xA;&#xA;<blockquote>&#xA;  <p>problems parsing JSON</p>&#xA;</blockquote>&#xA;&#xA;<p>what I am doing wrong. I spent nearly 2 hours trying to figure it and tried different examples but none of them worked. Can you please be kind enough help me resolve this</p>&#xA;",5105305,,,,2021-05-11 18:04:02,How to use curl to access the github graphql API,<curl><github><graphql>,4,0,0,2017-02-03 09:38:32
42021388,2,,42021113,45,,"<p>You just need to escape the double quotes that are inside the JSON as the query</p>&#xA;&#xA;<pre><code>$ curl -i -H 'Content-Type: application/json' -H ""Authorization: bearer myGithubAccessToken"" -X POST -d '{""query"": ""query {repository(owner: \""wso2\"", name: \""product-is\"") {description}}""}' https://api.github.com/graphql&#xA;&#xA;</code></pre>&#xA;",1542667,,3708153,2019-02-17 19:57:30,2019-02-17 19:57:30,"",,0,1,0,2017-02-03 09:52:33
42024158,1,42133065,,2,6208,"<p>I need to access the <code>github graphql API</code> to get some data about a certain repository. The following <code>curl</code> command is works fine</p>&#xA;&#xA;<pre><code>curl -i -H ""Authorization: bearer myGithubToken"" -X POST -d '{""query"": ""query { repository(owner: \""wso2-extensions\"", name: \""identity-inbound-auth-oauth\"") { object(expression:\""83253ce50f189db30c54f13afa5d99021e2d7ece\"") { ... on Commit { blame(path: \""components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java\"") { ranges { startingLine endingLine age commit { message url history(first: 2) { edges { node {  message url } } } author { name email } } } } } } } }""}' https://api.github.com/graphql&#xA;</code></pre>&#xA;&#xA;<p>now I need to call the same in <code>Java</code> as I need to manipulate the outputs. Here is the code that I have tried,</p>&#xA;&#xA;<pre><code>  public void callGraphqlApi(){&#xA;    CloseableHttpClient httpClientForGraphql = null;&#xA;    CloseableHttpResponse httpResponseFromGraphql= null;&#xA;&#xA;    httpClientForGraphql=HttpClients.createDefault();&#xA;    HttpPost httpPost= new HttpPost(""https://api.github.com/graphql"");&#xA;&#xA;    String query= ""query\"":\""query { repository(owner: \""wso2-extensions\"", name:\""identity-inbound-auth-oauth\"") { object(expression: \""83253ce50f189db30c54f13afa5d99021e2d7ece\"") { ... on Commit { blame(path: \""components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java\"") { ranges { startingLine endingLine age commit { message url history(first: 2) { edges { node { message url } } } author { name email } } } } } } } }"";&#xA;&#xA;&#xA;    httpPost.addHeader(""Authorization"",""Bearer myGithubToken"");&#xA;&#xA;    try {&#xA;&#xA;        StringEntity params= new StringEntity(query);&#xA;&#xA;        httpPost.addHeader(""content-type"",""application/x-www-form-urlencoded"");&#xA;        httpPost.setEntity(params);&#xA;        httpResponseFromGraphql= httpClientForGraphql.execute(httpPost);&#xA;&#xA;    } catch (UnsupportedEncodingException e) {&#xA;        // TODO Auto-generated catch block&#xA;        e.printStackTrace();&#xA;    }&#xA;&#xA;&#xA;    catch (ClientProtocolException e) {&#xA;        // TODO Auto-generated catch block&#xA;        e.printStackTrace();&#xA;    } catch (IOException e) {&#xA;        // TODO Auto-generated catch block&#xA;        e.printStackTrace();&#xA;    }&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I debug the code, it showed me this error,</p>&#xA;&#xA;<blockquote>&#xA;  <p>HttpResponseProxy{HTTP/1.1 400 Bad Request [Server: GitHub.com, Date: Fri, 03 Feb 2017 12:14:58 GMT, Content-Type: application/json; charset=utf-8, Content-Length: 89, Status: 400 Bad Request, X-RateLimit-Limit: 200, X-RateLimit-Remaining: 187, X-RateLimit-Reset: 1486125149, X-OAuth-Scopes: repo, user, X-Accepted-OAuth-Scopes: repo, X-GitHub-Media-Type: github.v3; format=json, Access-Control-Expose-Headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, Access-Control-Allow-Origin: *, Content-Security-Policy: default-src 'none', Strict-Transport-Security: max-age=31536000; includeSubdomains; preload, X-Content-Type-Options: nosniff, X-Frame-Options: deny, X-XSS-Protection: 1; mode=block, X-GitHub-Request-Id: CF0A:0EE1:B057F26:EBCB8DF:58947441] ResponseEntityProxy{[Content-Type: application/json; charset=utf-8,Content-Length: 89,Chunked: false]}}</p>&#xA;</blockquote>&#xA;&#xA;<p>what I am doing wrong? Can you please be kind enough to help me fix this.&#xA;Thanks in advance</p>&#xA;",5105305,,,,2017-02-09 09:40:13,how to access github graphql API using java,<java><post><github><https><graphql>,1,2,0,2017-02-03 12:18:31
42061099,1,,,3,3532,"<p>I am using apollographql/graphql-server. The server responses look like:</p>&#xA;&#xA;<pre><code>{""data"":{...},""errors"":[{""message"":""..."",""locations"":...}]}&#xA;</code></pre>&#xA;&#xA;<p>I have two questions:</p>&#xA;&#xA;<ol>&#xA;<li><p>I find that I can throw or return an Error object and it will be pushed to the response's errors array, but the response is sent as soon as I do so. How can I return more than one error?</p></li>&#xA;<li><p>Is the errors array supposed for application or server errors like bugs only? Should data checking and validation errors be placed inside data object?</p></li>&#xA;</ol>&#xA;&#xA;<p>Thanks in advance!</p>&#xA;",7521378,,,,2017-10-11 01:24:56,Apollo GraphQL error handling,<graphql><apollostack><apollo-server>,2,0,0,2017-02-06 05:49:12
42063825,1,42089652,,3,1543,"<p>Pardon me for the long question as I am a beginner to <code>graphql</code>. I need to access the <code>github graphql API</code> to get the blame details on a certain file, as upto now there is no blame <code>REST API</code> available in <a href=""https://developer.github.com/v3/"" rel=""nofollow noreferrer"">github API version 3</a>. I can get output for the below <code>graphql</code> query which runs in <a href=""https://developer.github.com/early-access/graphql/explorer/"" rel=""nofollow noreferrer"">here</a></p>&#xA;&#xA;<pre><code>  query {&#xA;  repository(owner: ""wso2-extensions"", name: ""identity-inbound-auth-oauth"") {&#xA;    object(expression: ""83253ce50f189db30c54f13afa5d99021e2d7ece"") {&#xA;      ... on Commit {&#xA;        blame(path: ""components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java"") {&#xA;          ranges {&#xA;            startingLine&#xA;            endingLine&#xA;            age&#xA;            commit {&#xA;              message&#xA;              url&#xA;              history(first: 2) {&#xA;                edges {&#xA;                  node {&#xA;                    message&#xA;                    url&#xA;                  }&#xA;                }&#xA;              }&#xA;              author {&#xA;                name&#xA;                email&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>from running the following <code>curl</code> command in the terminal </p>&#xA;&#xA;<pre><code>curl -i -H ""Authorization: bearer myGitHubToken"" -X POST -d '{""query"": ""query { repository(owner: \""wso2-extensions\"", name: \""identity-inbound-auth-oauth\"") { object(expression:\""83253ce50f189db30c54f13afa5d99021e2d7ece\"") { ... on Commit { blame(path: \""components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java\"") { ranges { startingLine endingLine age commit { message url history(first: 2) { edges { node { message url } } } author { name email } } } } } } } }""}' https://api.github.com/graphql&#xA;</code></pre>&#xA;&#xA;<p>and running the same <code>curl</code> command inside Java as below</p>&#xA;&#xA;<pre><code>import java.io.BufferedReader;&#xA;import java.io.IOException;&#xA;import java.io.InputStreamReader;&#xA;&#xA;public class Demo {&#xA;    public static void main(String[] args) {&#xA;&#xA;        String url=""https://api.github.com/graphql"";&#xA;           String[] command = {""curl"", ""-H"" ,""Authorization: Bearer myGitHubToken"",""-H"",""Accept:application/json"",""-X"", ""POST"", ""-d"", ""{\""query\"": \""query { repository(owner: \\\""wso2-extensions\\\"", name: \\\""identity-inbound-auth-oauth\\\"") { object(expression:\\\""83253ce50f189db30c54f13afa5d99021e2d7ece\\\"") { ... on Commit { blame(path: \\\""components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java\\\"") { ranges { startingLine endingLine age commit { message url history(first: 2) { edges { node { message url } } } author { name email } } } } } } } }\""}"" , url};&#xA;            ProcessBuilder process = new ProcessBuilder(command); &#xA;            Process p;&#xA;            try&#xA;            {&#xA;                p = process.start();&#xA;                 BufferedReader reader =  new BufferedReader(new InputStreamReader(p.getInputStream()));&#xA;                    StringBuilder builder = new StringBuilder();&#xA;                    String line = null;&#xA;                    while ( (line = reader.readLine()) != null) {&#xA;                            builder.append(line);&#xA;                            builder.append(System.getProperty(""line.separator""));&#xA;                    }&#xA;                    String result = builder.toString();&#xA;                    System.out.print(result);&#xA;&#xA;            }&#xA;            catch (IOException e)&#xA;            {   System.out.print(""error"");&#xA;                e.printStackTrace();&#xA;            }&#xA;    }&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>is there any other way that I can get the same output in <code>java</code> without running curl commands, as running <code>curl</code> commands inside <code>java</code> is not a good practice (according to my view). Thanks in advance</p>&#xA;&#xA;<p><strong>Update with a httpClient code</strong></p>&#xA;&#xA;<p>here is the code I tried with <code>apache httpClient</code> </p>&#xA;&#xA;<pre><code>public void callingGraph(){&#xA;        CloseableHttpClient client= null;&#xA;        CloseableHttpResponse response= null;&#xA;&#xA;        client= HttpClients.createDefault();&#xA;        HttpPost httpPost= new HttpPost(""https://api.github.com/graphql"");&#xA;&#xA;        httpPost.addHeader(""Authorization"",""Bearer myToken"");&#xA;        httpPost.addHeader(""Accept"",""application/json"");&#xA;&#xA;&#xA;        String temp=""{repository(owner: \""wso2-extensions\"", name: \""identity-inbound-auth-oauth\"") { object(expression: \""83253ce50f189db30c54f13afa5d99021e2d7ece\"") { ... on Commit { blame(path: \""components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java\"") { ranges { startingLine, endingLine, age, commit { message url history(first: 2) { edges { node {  message, url } } } author { name, email } } } } } } } }"";&#xA;&#xA;//        String temp=""{repository(owner:\""wso2\"",name:\""product-is\""){description}}"";&#xA;&#xA;        try {&#xA;&#xA;           StringEntity entity= new StringEntity(""{\""query\"":\""query ""+temp+""\""}"");&#xA;&#xA;            httpPost.setEntity(entity);&#xA;            response= client.execute(httpPost);&#xA;&#xA;        }&#xA;&#xA;        catch(UnsupportedEncodingException e){&#xA;            e.printStackTrace();&#xA;        }&#xA;        catch(ClientProtocolException e){&#xA;            e.printStackTrace();&#xA;        }&#xA;        catch(IOException e){&#xA;            e.printStackTrace();&#xA;        }&#xA;&#xA;        try{&#xA;            BufferedReader reader= new BufferedReader(new InputStreamReader(response.getEntity().getContent()));&#xA;            String line= null;&#xA;            StringBuilder builder= new StringBuilder();&#xA;            while((line=reader.readLine())!= null){&#xA;&#xA;                builder.append(line);&#xA;&#xA;            }&#xA;            System.out.println(builder.toString());&#xA;        }&#xA;        catch(Exception e){&#xA;            e.printStackTrace();&#xA;        }&#xA;&#xA;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>but it gives me even with the small query of <code>{repository(owner:\""wso2\"",name:\""product-is\""){description}}</code></p>&#xA;&#xA;<blockquote>&#xA;  <p>{""message"":""Problems parsing JSON"",""documentation_url"":""<a href=""https://developer.github.com/v3"" rel=""nofollow noreferrer"">https://developer.github.com/v3</a>""}</p>&#xA;</blockquote>&#xA;&#xA;<p>but when simple query like this is passed <code>String temp=""{viewer {email login }}"";</code> it works. What is wrong with my code. Please help</p>&#xA;",5105305,,5105305,2017-02-07 05:39:02,2018-02-09 21:11:05,how to access the github graphql API from java without running curl commands inside java,<java><github><graphql>,3,0,0,2017-02-06 09:00:54
42132848,2,,42063825,1,,"<p>@AdrianoMartins answer is correct, but I was able to get my program working by simply modifying the line </p>&#xA;&#xA;<pre><code>String temp=""{repository(owner: \""wso2-extensions\"", name: \""identity-inbound-auth-oauth\"") { object(expression: \""83253ce50f189db30c54f13afa5d99021e2d7ece\"") { ... on Commit { blame(path: \""components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java\"") { ranges { startingLine, endingLine, age, commit { message url history(first: 2) { edges { node {  message, url } } } author { name, email } } } } } } } }"";&#xA;</code></pre>&#xA;&#xA;<p>to</p>&#xA;&#xA;<pre><code>String temp=""{repository(owner: \\\""wso2-extensions\\\"", name: \\\""identity-inbound-auth-oauth\\\"") { object(expression: \\\""83253ce50f189db30c54f13afa5d99021e2d7ece\\\"") { ... on Commit { blame(path: \\\""components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java\\\"") { ranges { startingLine, endingLine, age, commit { message url history(first: 2) { edges { node {  message, url } } } author { name, email } } } } } } } }"";&#xA;</code></pre>&#xA;&#xA;<p>So the total program will be as</p>&#xA;&#xA;<pre><code>    public void callingGraph(){&#xA;        CloseableHttpClient client= null;&#xA;        CloseableHttpResponse response= null;&#xA;&#xA;        client= HttpClients.createDefault();&#xA;        HttpPost httpPost= new HttpPost(""https://api.github.com/graphql"");&#xA;&#xA;        httpPost.addHeader(""Authorization"",""Bearer myToken"");&#xA;        httpPost.addHeader(""Accept"",""application/json"");&#xA;&#xA;&#xA;        String temp=""{repository(owner: \\\""wso2-extensions\\\"", name: \\\""identity-inbound-auth-oauth\\\"") { object(expression: \\\""83253ce50f189db30c54f13afa5d99021e2d7ece\\\"") { ... on Commit { blame(path: \\\""components/org.wso2.carbon.identity.oauth.endpoint/src/main/java/org/wso2/carbon/identity/oauth/endpoint/authz/OAuth2AuthzEndpoint.java\\\"") { ranges { startingLine, endingLine, age, commit { message url history(first: 2) { edges { node {  message, url } } } author { name, email } } } } } } } }"";&#xA;&#xA;//        String temp=""{repository(owner:\""wso2\"",name:\""product-is\""){description}}"";&#xA;&#xA;        try {&#xA;&#xA;           StringEntity entity= new StringEntity(""{\""query\"":\""query ""+temp+""\""}"");&#xA;&#xA;            httpPost.setEntity(entity);&#xA;            response= client.execute(httpPost);&#xA;&#xA;        }&#xA;&#xA;        catch(UnsupportedEncodingException e){&#xA;            e.printStackTrace();&#xA;        }&#xA;        catch(ClientProtocolException e){&#xA;            e.printStackTrace();&#xA;        }&#xA;        catch(IOException e){&#xA;            e.printStackTrace();&#xA;        }&#xA;&#xA;        try{&#xA;            BufferedReader reader= new BufferedReader(new InputStreamReader(response.getEntity().getContent()));&#xA;            String line= null;&#xA;            StringBuilder builder= new StringBuilder();&#xA;            while((line=reader.readLine())!= null){&#xA;&#xA;                builder.append(line);&#xA;&#xA;            }&#xA;            System.out.println(builder.toString());&#xA;        }&#xA;        catch(Exception e){&#xA;            e.printStackTrace();&#xA;        }&#xA;&#xA;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>as Adriano Martins has also suggested it is better to use a <code>JSON</code> library than hardcoding a <code>JSON</code></p>&#xA;",5105305,,,,2017-02-09 09:30:15,"",,0,0,0,2017-02-09 09:30:15
42266500,1,42270136,,2,3396,"<p>I came to know about  Faceted Search  and Lucene search and getting confusion regarding the same.&#xA;Any one please give an idea regarding the difference between Faceted Search  and Lucene search ,which scenario can apply both serach .</p>&#xA;&#xA;<p>I am working with graphQL ,is there any graphLQ client to provide Faceted search feature ? </p>&#xA;&#xA;<p>Thanks in advance</p>&#xA;",2707254,,2707254,2017-02-16 12:15:08,2022-10-14 07:17:18,Difference between Faceted Search and Lucene search?,<search><lucene><graphql><faceted-search><graphql-js>,1,0,0,2017-02-16 06:28:41
42267298,2,,42266679,1,,"<p>I removed the graphql file extensions from my moduleNameMapper and it worked. For anyone else having a similar issue, take a look at the question above and make yours look like:</p>&#xA;&#xA;<pre><code>""moduleNameMapper"": {&#xA;      ""\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga|yml)$"": ""&lt;rootDir&gt;/src/__mocks__/fileMock.js"",&#xA;      ...&#xA;    }&#xA;</code></pre>&#xA;",444871,,,,2017-02-16 07:17:04,"",,0,0,0,2017-02-16 07:17:04
42270136,2,,42266500,2,,"<p>Faceted search is a kind of search provided by Lucene that searches through a particular dataset. They also provide 'normal' query searching, that searches through all the documents without bias and provides results.</p>&#xA;<p>Two good posts that explain faceted search well -</p>&#xA;<p><a href=""https://lucidworks.com/2009/09/02/faceted-search-with-solr/"" rel=""nofollow noreferrer"">Faceted Search with Solr</a></p>&#xA;<p><a href=""http://lucene.apache.org/core/4_0_0/facet/org/apache/lucene/facet/doc-files/userguide.html"" rel=""nofollow noreferrer"">Faceted Search - User's Guide</a></p>&#xA;<blockquote>&#xA;<p>Faceted search is the dynamic clustering of items or search results into categories that let users drill into search results (or even skip searching entirely) by any value in any field. Each facet displayed also shows the number of hits within the search that match that category. Users can then “drill down” by applying specific constraints to the search results. - Lucidworks</p>&#xA;</blockquote>&#xA;<p>Also, check out these <a href=""https://lucene.apache.org/core/6_4_1/demo/org/apache/lucene/demo/facet/package-summary.html"" rel=""nofollow noreferrer"">examples</a> that are provided by the lucene devs.</p>&#xA;<p>If you want to go in-depth into lucene architecture or even as a reference, this is a good paper - <a href=""https://pdfslide.net/download/link/architecture-and-implementation-of-apache-lucene"" rel=""nofollow noreferrer"">Architecture and Implementation of Apache Lucene</a>. See the search section (ie. 2.2.7) for Index Searching. Here is a bit more concept about Lucene's Index Searching -</p>&#xA;<p><a href=""https://i.stack.imgur.com/LN5tT.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LN5tT.jpg"" alt=""Taken from the paper Architecture and Implementation of Apache Lucene"" /></a></p>&#xA;<p>Lucene is able to achieve fast search responses because, instead of searching the text directly, it searches an index instead. This would be the equivalent of retrieving pages in a book related to a keyword by searching the index at the back of a book, as opposed to searching the words in each page of the book.</p>&#xA;<p>This type of index is called an inverted index, because it inverts a page-centric data structure (page-&gt;words) to a keyword-centric data structure (word-&gt;pages).</p>&#xA;<p>Generally Lucene supplies components to search inside the index and to obtain hits on the searched query. QueryParser and indexSearcher are the main components involved in most Lucene based search engines. After the Index have been constructed with postings lists , the search application will retrieve the user query in the index. It first analyzes the user query using the same analyzer as in the indexing process, then transform the user query in to a Query object with respect to the Lucene query language.</p>&#xA;",6003362,,336184,2022-10-14 07:17:18,2022-10-14 07:17:18,"",,0,1,0,2017-02-16 09:41:30
42517009,1,,,1,114,<p>Trying to wrap a RESTAPI with a graphQL but not able to put the response of API (an array of objects) in a graphQL Type. Can anyone help me with how to put an array of object in graphQL type and then resolve?</p>&#xA;,7637423,,5052733,2019-10-21 13:37:49,2019-10-21 13:37:49,Array of objects from REST in a GraphQL,<graphql-js>,0,1,0,2017-02-28 19:16:59
42587388,1,,,1,293,"<p>I have been trying to learn about Graph-QL interpolation recently, however the <a href=""http://graphql.org/learn/introspection/"" rel=""nofollow noreferrer"">official documentation</a> was not helpful enough for me. Is there any way to find all the fields(its subfields), the argument it takes and various other input that could be passed into Graph-QL endpoint ?</p>&#xA;",4907070,,,,2017-03-04 18:52:22,How to use Use Graph QL introspection effectively?,<api><facebook-graph-api><graphql><graphql-js>,1,1,0,2017-03-03 19:57:22
42936996,2,,42936147,2,,"<p>Checkout this Apollo and MongoDB <a href=""https://github.com/DeligenceTechnologies/Meteor-Apollo-with-MongoDB-MySQL"" rel=""nofollow noreferrer"">example</a>.</p>&#xA;",7581592,,,,2017-03-21 19:56:22,"",,0,0,0,2017-03-21 19:56:22
43110078,2,,43109563,1,,"<p>The GraphQL input type for your data object could look like this:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>...&#xD;&#xA;&#xD;&#xA;`&#xD;&#xA;input SalePropertyInput {&#xD;&#xA;  value: String!&#xD;&#xA;  relatedProperty: String!&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;input SaleInput {&#xD;&#xA;  companyId: ID!&#xD;&#xA;  source: String!&#xD;&#xA;  properties: [SalePropertyInput!]!&#xD;&#xA;}&#xD;&#xA;`&#xD;&#xA;&#xD;&#xA;...</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>But i think before you start the mutation you should map the values from the form to the data you really need on the server. E.g. you don't need the <code>formDataId</code>. And i suggest you check the form you're using on the client that the field path can be mapped to some sort of sale property. Which can be used to differentiate the input on the server</p>&#xA;",4500001,,,,2017-03-30 06:25:24,"",,0,0,0,2017-03-30 06:25:24
43144565,2,,43123309,1,,"<p>Your GraphQL syntax is wrong. That is why its not being encoded. If your syntax was right all you need to do is push the whole String into a URL/URI encoder and thats it. Heres the corrected syntax, you're missing brackets.</p>&#xA;&#xA;<pre><code>{&#xA; search(firstName:""bob"",lastName:""Smith"", num: 0, max: 10)&#xA;    {&#xA;        age, &#xA;        height,&#xA;        email,&#xA;        country,&#xA;        occupation&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is some additional documentation with some examples at the bottom&#xA;<a href=""http://dev.apollodata.com/tools/graphql-server/requests.html"" rel=""nofollow noreferrer"">http://dev.apollodata.com/tools/graphql-server/requests.html</a></p>&#xA;",975649,,,,2017-03-31 15:35:08,"",,0,0,0,2017-03-31 15:35:08
43220532,1,43287971,,1,111,"<p>Here is a GitHub GraphQL query:</p>&#xA;&#xA;<pre><code>query Foo($login:String!) {&#xA;  repositoryOwner(login: $login){&#xA;    repositories(first: 3){&#xA;      totalCount,&#xA;      nodes{&#xA;        name&#xA;        pushedAt&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there a way to modify this query so that results that come back are already filtered (limited) by <code>pushedAt</code> date? <code>pushedAt</code> exists on the node, and I can fetch it, but I would like to get only the subset of the organization's repositories that were <code>pushedAt</code> at a certain date. I hope to be able to limit the results by <code>pushedAt</code> date, and not sort it. Thank you.</p>&#xA;",2414556,,2414556,2017-04-06 01:37:52,2017-04-07 22:28:39,How to limit repositories of an organization by pushedAt date?,<github><github-api><graphql>,1,0,0,2017-04-05 01:55:07
43287971,2,,43220532,0,,"<p>Here is a solution:</p>&#xA;&#xA;<pre><code>{&#xA;  search(first: 3, type: REPOSITORY, query: ""user:MyOrg pushed:&gt;2017-04-01T06:00:00Z"") {&#xA;    edges {&#xA;      node {&#xA;        ... on Repository{&#xA;          name&#xA;          pushedAt&#xA;        }&#xA;      }&#xA;    }&#xA;    repositoryCount&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2414556,,,,2017-04-07 22:28:39,"",,0,0,0,2017-04-07 22:28:39
43288660,2,,43287088,-3,,"<p>Since you want to run multiple mutations in a single request, you can use GraphQL aliases to accomplish that. More information here: <a href=""https://github.com/mugli/learning-graphql/blob/master/3.%20Querying%20with%20Field%20Aliases%20and%20Fragments.md"" rel=""nofollow noreferrer"">https://github.com/mugli/learning-graphql/blob/master/3.%20Querying%20with%20Field%20Aliases%20and%20Fragments.md</a></p>&#xA;&#xA;<p>Essentially, what you can do is run a mutation like this:</p>&#xA;&#xA;<pre><code>mutation updateCardOrder($card1: UpdateCardInput!, $card2: UpdateCardInput!, $card3: UpdateCardInput!) {&#xA;  update1: updateCard(input: $card1) {&#xA;    changedCard {&#xA;      id&#xA;      order&#xA;    }&#xA;  }&#xA;  update2: updateCard(input: $card2) {&#xA;    changedCard {&#xA;      id&#xA;      order&#xA;    }&#xA;  }&#xA;  update3: updateCard(input: $card3) {&#xA;    changedCard {&#xA;      id&#xA;      order&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the variables would look something like this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""card1"": {&#xA;    ""id"": ""Q2FyZDo4Mjk="",&#xA;    ""order"": ""1""&#xA;  },&#xA;  ""card2"": {&#xA;    ""id"": ""Q2FyZDo4MzA="",&#xA;    ""order"": ""2""&#xA;  },&#xA;  ""card3"": {&#xA;    ""id"": ""Q2FyZDo4MzA="",&#xA;    ""order"": ""3""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Hope that helps!</p>&#xA;",6452097,,,,2017-04-07 23:53:52,"",,0,2,0,2017-04-07 23:53:52
43454825,1,45341646,,1,636,"<p>I have freebase dump in a distributed environment in Dgraph.</p>&#xA;&#xA;<p>I also have 4.5 Million node addresses and want to iterate over the edges of those nodes.</p>&#xA;&#xA;<p>I am using GraphQL. Can you point me in the right direction as to how I can (enumerate?) over the edges and reach the neighbor nodes?</p>&#xA;&#xA;<p>Note: I don't know the edge types.</p>&#xA;&#xA;<p>Is this relevant? <a href=""http://graphql.org/learn/pagination/"" rel=""nofollow noreferrer"">http://graphql.org/learn/pagination/</a></p>&#xA;",3425162,,6622587,2019-05-31 22:31:53,2019-05-31 22:31:53,List all outgoing edges using GraphQL in DGraph,<graphql><dgraph>,1,0,0,2017-04-17 15:52:49
43805747,2,,43804288,0,,"<p>AST == Abstract Syntax Tree</p>&#xA;&#xA;<p>All GraphQL queries are converted in a AST datastructure. AST is the base of the Graph QL internal query processing.</p>&#xA;&#xA;<p>see <a href=""https://mikewilliamson.wordpress.com/2016/09/15/graphql-and-security/"" rel=""nofollow noreferrer"">https://mikewilliamson.wordpress.com/2016/09/15/graphql-and-security/</a></p>&#xA;&#xA;<p>I assume ""(valueAST: Value) => ?InternalType;"" mean: valueAST is an interal GraphQL type.</p>&#xA;",1514029,,,,2017-05-05 13:05:13,"",,0,0,0,2017-05-05 13:05:13
43944608,2,,43939730,3,,"<p>Long story short, that's something that should actually be handled by your server if you want to optimize for as few requests as possible.</p>&#xA;&#xA;<p><strong>Problem:</strong> The issue here is that you have a dependency. You need the product to be created first and then with that product's ID, relate that to a new price.</p>&#xA;&#xA;<p><strong>Solution:</strong> The best way to implement this on the server is by adding another field to Product in your mutation input that allows you to input the details for Price as well in the same request input. This is called a <a href=""https://docs.scaphold.io/coredata/mutations/#nested-create"" rel=""nofollow noreferrer"">""nested create""</a> on Scaphold.</p>&#xA;&#xA;<p>For example:</p>&#xA;&#xA;<pre><code>// Mutation&#xA;mutation CreateProduct ($input: CreateProductInput!) {&#xA;  createProduct(input: $input) {&#xA;    changedProduct {&#xA;      id&#xA;      name&#xA;      price {&#xA;        id&#xA;        amount&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;// Variables&#xA;{&#xA;  input: {&#xA;    name: ""My First Product"",&#xA;    price: {&#xA;      amount: 1000&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then, on the server, you can parse out the price object in your resolver arguments and create the new price object while creating the product. Meanwhile, you can also relate them in one go on the server as well.</p>&#xA;&#xA;<p>Hope this helps!</p>&#xA;",6452097,,,,2017-05-12 18:45:37,"",,0,1,0,2017-05-12 18:45:37
43986263,1,,,7,6655,"<p>Im using the Shopify storefront API to query for a list of products and add a selected item to the cart.</p>&#xA;&#xA;<p>I am able to use API to list all the products, and returns the variantID for the product found</p>&#xA;&#xA;<p>Here is the GraphQL query to return a product </p>&#xA;&#xA;<pre><code>{&#xA;  shop {&#xA;    name&#xA;    products(first: 1, query:""title=configurable-handmade-concrete-ball"") {&#xA;      edges {&#xA;        cursor&#xA;        node {&#xA;          id&#xA;          title&#xA;          handle&#xA;          variants(first:1) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;                title&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and the result</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""shop"": {&#xA;      ""name"": ""VonageTest"",&#xA;      ""products"": {&#xA;        ""edges"": [&#xA;          {&#xA;            ""cursor"": ""eyJvZmZzZXQiOjF9"",&#xA;            ""node"": {&#xA;              ""id"": ""Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0LzEwNTU2MjYxNTE4"",&#xA;              ""title"": ""Configurable Handmade Concrete Ball"",&#xA;              ""handle"": ""configurable-handmade-concrete-ball"",&#xA;              ""variants"": {&#xA;                ""edges"": [&#xA;                  {&#xA;                    ""node"": {&#xA;                      ""id"": ""Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC80MDIwOTc1NjQzMA=="",&#xA;                      ""title"": ""Default Title""&#xA;                    }&#xA;                  }&#xA;                ]&#xA;              }&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In order to add items to the cart, you can make a POST request that contains the following</p>&#xA;&#xA;<p>https://{store_name}.myshopify.com/cart/{variant_id}</p>&#xA;&#xA;<p>performing this call using the variant_id from the graphQL response returns a 404. But if you get the variant_id from the page, you can inspect the xml page and use the variant_id there&#xA;This shows how that is done&#xA;<a href=""https://help.shopify.com/themes/customization/cart/use-permalinks-to-preload-cart"" rel=""noreferrer"">https://help.shopify.com/themes/customization/cart/use-permalinks-to-preload-cart</a></p>&#xA;&#xA;<p>so why does the variant_id from the storefront API different from the variant_id on the page?</p>&#xA;",457901,,,,2020-03-24 10:34:42,Shopify Storefront API. adding item to cart,<shopify><graphql>,2,0,0,2017-05-15 18:16:05
44015309,1,,,8,13374,"<p>I've this kind of mutation:</p>&#xA;&#xA;<pre><code>mutation updateProducts($input1 : ProductInput!, $id1: ID!, $input2 : ProductInput!, $id2: ID!){&#xA;  p1: updateProduct(productInput: $input1, id: $id1){&#xA;      product{&#xA;      id&#xA;      showcaseOrder&#xA;    }&#xA;&#xA;  }&#xA;enter code here&#xA;  p2: updateProduct(productInput: $input2, id: $id2){&#xA;      product{&#xA;      id&#xA;      showcaseOrder&#xA;    }&#xA;  }     &#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am setting this variables:</p>&#xA;&#xA;<pre><code>{&#xA;  ""input1"": {&#xA;    ""showcaseOrder"": 2&#xA;  },&#xA;  ""id1"": ""363"",&#xA;  ""input2"": {&#xA;    ""showcaseOrder"": 1&#xA;  },&#xA;  ""id2"": ""364""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I would like to pass an array with all information to the query instead of pass one by one.</p>&#xA;",312444,,,,2018-09-02 19:38:40,Passing array on GraphQL,<graphql>,1,0,0,2017-05-17 04:01:12
44030785,1,,,0,479,"<p>I'm making a simple shopping cart using Apollo Client and React, but the total price I'm showing thats retrieved from the server its not making reference to the last request sent but to the last request received. Its there a way to make the requests synchronous or something like that? Or even how to know whats the return from the last mutation sent?</p>&#xA;&#xA;<p>My code: </p>&#xA;&#xA;<pre><code>  this.props.mutate({ variables: { input: {&#xA;    lineItems: this.productCart&#xA;  }}})&#xA;  .then(({ data }) =&gt; {&#xA;    this.setState({&#xA;      subtotalPrice : data.manageCheckout.checkout.subtotalPrice&#xA;    })&#xA;  }).catch((error) =&gt; {&#xA;    console.warn('there was an error sending the query', error)&#xA;  })&#xA;</code></pre>&#xA;",4897880,,,,2017-05-18 06:33:01,Checking the return of Multiple mutations requests using Apollo Client,<reactjs><graphql><apollo><react-apollo><apollo-client>,1,0,0,2017-05-17 16:55:00
44090284,2,,44069982,0,,<p>Could you please provide the stack trace.&#xA;And are you sure that you get back not empty response?</p>&#xA;&#xA;<p>You get NPE probably because the requested node by id doesn't exist.</p>&#xA;,7887204,,,,2017-05-20 19:59:31,"",,0,0,0,2017-05-20 19:59:31
44137710,1,44282072,,32,5201,"<p>Does GitHub's <a href=""https://developer.github.com/early-access/graphql/explorer/"" rel=""noreferrer"">GraphQL API</a> have an equivalent to the <a href=""https://developer.github.com/v3/repos/contents/#get-contents"" rel=""noreferrer"">contents API</a>?</p>&#xA;&#xA;<p>I can't seem to come up with a query that accepts repo owner, repo name and file path and returns the contents of the file. I'm guessing it has something to do with the <a href=""https://developer.github.com/v4/reference/object/tree/"" rel=""noreferrer"">tree</a> object?</p>&#xA;&#xA;<p><a href=""https://developer.github.com/early-access/graphql/explorer/"" rel=""noreferrer"">https://developer.github.com/early-access/graphql/explorer/</a></p>&#xA;",725866,,725866,2017-05-31 03:24:59,2019-02-28 02:04:45,GitHub GraphQL equivalent of the contents API,<github><github-api><graphql>,1,0,0,2017-05-23 14:32:26
44159753,1,,,5,7221,<p>I am looking to pass a field value to a resolved field using another object type.</p>&#xA;&#xA;<p>Another way to put it if I have `Customer > User > Profile' - how can I pass the CustomerID field value that would be in customer to Profile as an argument or variable in order to resolve correctly?</p>&#xA;,610168,,,,2022-11-28 01:03:40,Java GraphQL - Pass field values to resolver for objects,<java><graphql><graphql-java>,1,1,0,2017-05-24 13:26:17
44170603,1,,,19,5655,"<p>If I have a union type like this: </p>&#xA;&#xA;<pre><code>union AllOnboardingQuestionTypes = StepFinal | TimeRangesQuestion | PercentQuestion | SingleSelectQuestion | MultiSelectQuestion | InformationOnly&#xA;</code></pre>&#xA;&#xA;<p>where some of the types have the same field names but different types (e.g. answer for <code>PercentAnswer</code> is <code>float</code> whereas SingleSelect's answer is a <code>string</code>), is this the right way to do the query?</p>&#xA;&#xA;<pre><code>query OnboardingQuestionsQuery {&#xA;     onboardingQuestions {&#xA;       ... on InformationOnly {&#xA;         title&#xA;         description&#xA;         questionID&#xA;         inputType&#xA;       }&#xA;       ... on StepFinal {&#xA;          title&#xA;          description&#xA;       }&#xA;       ... on TimeRangesQuestion {&#xA;          title&#xA;          description&#xA;          timePeriods {&#xA;            timePeriod&#xA;            estimatedEnd&#xA;            estimatedStart&#xA;          }&#xA;       }&#xA;       ... on SingleSelectQuestion {&#xA;         title&#xA;         description&#xA;         questionID&#xA;         inputType&#xA;         singleSelectAnswer: answer&#xA;         singleSelectOptions: options {&#xA;           value&#xA;           label&#xA;         }&#xA;       }&#xA;       ... on MultiSelectQuestion {&#xA;         title&#xA;         description&#xA;         questionID&#xA;         inputType&#xA;         multiSelectAnswer: answer&#xA;         multiSelectOptions: options&#xA;       }&#xA;       ... on PercentQuestion {&#xA;         title&#xA;         description&#xA;         questionID&#xA;         inputType&#xA;         percentAnswer: answer&#xA;         min&#xA;         max&#xA;       }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The aliases seem cumbersome to me and will make things tricky as I'll have to dealias when mutating data&#xA;my hope was that I could just use <code>answer</code> instead of <code>singleSelectAnswer</code>.</p>&#xA;&#xA;<p>But when I try that, I get this error:</p>&#xA;&#xA;<pre><code>{""errors"":[{""message"":""Fields \""answer\"" conflict because they return conflicting types String! and [Boolean!]!. Use different aliases on the fields to fetch both if this was intentional."",""locations"":[{""line"":64,""column"":7},{""line"":69,""column"":7}]},{""message"":""Fields \""answer\"" conflict because they return conflicting types String! and Float!. Use different aliases on the fields to fetch both if this was intentional."",""locations"":[{""line"":64,""column"":7},{""line"":74,""column"":7}]},{""message"":""Fields \""answer\"" conflict because they return conflicting types [Boolean!]! and Float!. Use different aliases on the fields to fetch both if this was intentional."",""locations"":[{""line"":69,""column"":7},{""line"":74,""column"":7}]}]}&#xA;</code></pre>&#xA;&#xA;<p>I'm new to GraphQL and don't know if this is the correct way to handle it. In my head I was hoping to follow a polymorphism approach but maybe that's not the way it's done.</p>&#xA;",1884846,,1480391,2019-10-16 08:14:39,2020-11-25 13:12:13,GraphQL - Using same field names in different types within union,<graphql>,2,1,0,2017-05-25 00:47:00
44193106,1,,,0,408,"<p>I'm trying to sort out how to make a call to Github's API to get a hold of my pinned repos but I can't seem to find anything from Github's documentation using a REST call.</p>&#xA;&#xA;<p>I did find <a href=""https://stackoverflow.com/questions/43352056/how-do-i-make-an-api-call-to-github-for-a-users-pinned-repositories"">this</a> which uses graphql and does what I want but I'm not looking to spin up another server for this project.</p>&#xA;&#xA;<p>so far I'm using <code>https://api.github.com/users/USERNAME/repos</code>. Has a good amount of what I want but nothing for pinned repos.</p>&#xA;&#xA;<p>anyone know?</p>&#xA;",4987587,,,,2017-05-31 12:19:23,Github Pinned Repositories REST call without using graphQl,<rest><github-api><graphql>,1,3,0,2017-05-26 03:24:17
44246290,1,44246494,,4,2344,"<p>Here is how I am using a GraphQL schema string to create a schema and attach it to my Express server:</p>&#xA;&#xA;<pre><code>var graphql = require('graphql');&#xA;var graphqlHTTP = require('express-graphql');&#xA;[...]&#xA;    return graphqlHTTP({&#xA;      schema: graphql.buildSchema(schemaText),&#xA;      rootValue: resolvers,&#xA;      graphiql: true,&#xA;    });&#xA;</code></pre>&#xA;&#xA;<p>This is all very basic use of the modules. It works well and is quite convenient until I want to define a union:</p>&#xA;&#xA;<pre><code>union MediaContents = Photo|Youtube&#xA;&#xA;type Media {&#xA;  Id: String&#xA;  Type: String&#xA;  Contents: MediaContents&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have found no way to make this work, querying Contents does what it has to do, returns the correct object but fails with the message <code>Generated Schema cannot use Interface or Union types for execution</code>. </p>&#xA;&#xA;<p>Is it at all possible to use unions when using buildSchema ?</p>&#xA;",4218623,,3280944,2017-05-29 15:59:58,2018-06-07 10:25:13,How to use unions with GraphQL buildSchema,<graphql><graphql-js>,2,0,0,2017-05-29 15:45:16
44282072,2,,44137710,66,,"<p>After some digging, found it:</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(name: ""repoName"", owner: ""repoOwner"") {&#xA;    object(expression: ""branch:path/to/file"") {&#xA;      ... on Blob {&#xA;        text&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The argument passed to <code>expression</code> on the <code>object</code> field is actually a git revision expression suitable for <code>rev-parse</code>, so I guess you can have fun with it to do advanced querying.</p>&#xA;&#xA;<p>Documentation:</p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://developer.github.com/v4/object/repository/"" rel=""noreferrer"">Repository object on GitHub API</a></li>&#xA;<li><a href=""https://git-scm.com/docs/git-rev-parse"" rel=""noreferrer"">rev-parse</a></li>&#xA;</ul>&#xA;",3076424,,3362993,2019-02-28 02:04:45,2019-02-28 02:04:45,"",,0,6,0,2017-05-31 10:19:33
44391918,2,,44377518,5,,"<p>What you want to do is not supported by GraphQL. In the Graphcool APIs we approach this kind of situation with what we call <em>nested mutations</em>. I've also heard it being referred to as <em>complex mutations</em>.</p>&#xA;<p>A nested create mutation is characterized by a nested <em>input object argument</em>. If you add an input object <code>author</code> to the <code>affiliateCreate</code> mutation, you could use it like that:</p>&#xA;<pre><code>mutation createAffiliateAndUser {&#xA;  affiliateCreate(&#xA;    company: &quot;test company&quot;&#xA;    author: {&#xA;      name: &quot;test user&quot;&#xA;    }&#xA;  ) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This would create an affiliate, a user and then link the two together. Similarily, if you add an input object <code>affiliates</code> to the <code>userCreate</code> mutation, it could look like this:</p>&#xA;<pre><code>mutation createUserAndAffiliates {&#xA;  userCreate(&#xA;    name: &quot;test user&quot;&#xA;    affiliates: [{&#xA;      company: &quot;first company&quot;&#xA;    }, {&#xA;      company: &quot;second company&quot;&#xA;    }]&#xA;  ) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1176596,,1176596,2020-07-17 19:51:46,2020-07-17 19:51:46,"",,0,2,0,2017-06-06 13:51:31
44398301,1,44400935,,3,6107,"<p>I am having the hardest time figuring out how to properly format a graphql api mutation POST request in php.</p>&#xA;&#xA;<p>If I hard code the string and use it as the data in my POST request it works like this:&#xA;<code>'{""query"":""mutation{addPlay(input: {title: \""two\""}){ properties { title } } }""}'</code></p>&#xA;&#xA;<p>But if I have a php array of the input values:</p>&#xA;&#xA;<pre><code>$test_data = array(&#xA;  'title' =&gt; 'two'&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>I can't seem to format it correctly. json_encode also puts double quotes around the keys which graphql is rejecting with the error <code>Syntax Error GraphQL request (1:26) Expected Name, found String</code>.</p>&#xA;&#xA;<p>I ultimately need a solution that will convert a larger more complex array to something usable. </p>&#xA;",2773595,,2773595,2017-06-06 19:51:36,2022-06-22 17:43:45,How to construct a graphql mutation query request in php,<php><graphql><apollo><apollo-server>,1,0,0,2017-06-06 19:26:19
44400935,2,,44398301,7,,"<p>Reformatting the query allowed me to use JSON directly.</p>&#xA;&#xA;<p>So my new query looks like this:</p>&#xA;&#xA;<pre><code>$test_data = array(&#xA;  'title' =&gt; 'two'&#xA;);&#xA;&#xA;$request_data = array(&#xA;  'query' =&gt; 'mutation ($input: PlayInput) { addPlay(input: $input) { properties { title } }}',&#xA;  'variables' =&gt; array(&#xA;    'input' =&gt; $test_data,&#xA;  ),&#xA;);&#xA;&#xA;$request_data_json = json_encode($request_data);&#xA;</code></pre>&#xA;&#xA;<p>Then the <code>$request_data_json</code> is used in a POST http request.</p>&#xA;",2773595,,,,2017-06-06 22:55:29,"",,0,1,0,2017-06-06 22:55:29
44435510,1,44453601,,9,3992,"<p>Can I fetch more than one element in a GraphQL query? I have many products list data and I want to fetch, for example, three products in my component. I have an array of needed product IDs, can I pass it to query? This is my query for one product:</p>&#xA;&#xA;<pre><code>query ProductInCartQuery($id: ID!){&#xA;  Product(id: $id) { &#xA;   id&#xA;   name&#xA;   price&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I don't think I can just put it in a function and execute it for example three times for three products.</p>&#xA;",7622056,,1176596,2017-06-09 09:14:28,2017-06-09 09:14:28,Apollo (GraphQL) fetch more than one element in a query,<reactjs><graphql><apollo>,2,3,0,2017-06-08 12:14:25
44438933,2,,44435510,1,,"<p>For adding the product ids to the query you could define a <code>input</code> type. See the <a href=""https://github.com/sogko/graphql-schema-language-cheat-sheet"" rel=""nofollow noreferrer"">cheat sheet</a>.</p>&#xA;&#xA;<p>So the query on the client could look like:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>query ProductsInCartQuery($productIds: ProductIds!) {&#xD;&#xA;  Products(productIds: $productIds) {&#xD;&#xA;    id&#xD;&#xA;    name&#xD;&#xA;    price&#xD;&#xA;  }&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>On the server you define the schema with the <code>input</code> type as follows:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>input ProductIds {&#xD;&#xA;  ids: [ID!]&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;type Query {&#xD;&#xA;  Products(productIds: ProductIds!) {&#xD;&#xA;    id&#xD;&#xA;    name&#xD;&#xA;    price&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;schema {&#xD;&#xA;  query: Query&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",4500001,,,,2017-06-08 14:48:16,"",,0,0,0,2017-06-08 14:48:16
44453601,2,,44435510,13,,"<p>It's common and very useful to offer two kind of queries for every type you have:</p>&#xA;&#xA;<ol>&#xA;<li><p>a query to fetch a single node with an <code>id</code> or other unique fields, that's in your case <code>Product</code> (you already have this).</p></li>&#xA;<li><p>a query to fetch many nodes depending on different filter conditions, let's call it <code>allProducts</code>.</p></li>&#xA;</ol>&#xA;&#xA;<p>Then you have two options to fetch multiple products in one query.</p>&#xA;&#xA;<p>First, you can use the <code>Product</code> query multiple times and use <a href=""http://graphql.org/learn/queries/#aliases"" rel=""noreferrer"">GraphQL Aliases</a> to avoid a name clash in the response data:</p>&#xA;&#xA;<pre><code>query ProductInCartQuery($firstId: ID!, $secondId: ID!){&#xA;  firstProduct: Product(id: $firstId) { &#xA;    id&#xA;    ... ProductInfo&#xA;  }&#xA;&#xA;  secondProduct: Product(id: $secondId) { &#xA;    id&#xA;    ... ProductInfo&#xA;  }&#xA;&#xA;  fragment ProductInfo on Product {&#xA;    name&#xA;    price&#xA;  }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>You could build this query string dynamically depending on the ids you want to query. However, it's probably best to use the <code>allProducts</code> query with the necessary filter setup if the number of differents ids is dynamic:</p>&#xA;&#xA;<pre><code>query filteredProducts($ids: [ID!]!) {&#xA;  allProducts(filter: {&#xA;    id_in: $ids&#xA;  }) {&#xA;    ... ProductInfo&#xA;  }&#xA;}&#xA;&#xA;fragment ProductInfo on Product {&#xA;  name&#xA;  price&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can try it out yourself in <a href=""https://api.graph.cool/simple/v1/cj3omdwtfhqil0198icmyw9k5?query=query%20ProductInCartQuery%20%7B%0A%20%20firstProduct%3A%20Product(id%3A%20%22cj3omj91a6eli0198aqe0d9j3%22)%20%7B%20%0A%20%20%20%20...%20ProductInfo%0A%20%20%7D%0A%0A%20%20secondProduct%3A%20Product(id%3A%20%22cj3omjmxh5ddi0197ndrr9t1v%22)%20%7B%20%0A%20%20%20%20...%20ProductInfo%0A%20%20%7D%0A%7D%0A%0Aquery%20filteredProducts%20%7B%0A%20%20allProducts(filter%3A%20%7B%0A%20%20%20%20id_in%3A%20%5B%22cj3omj91a6eli0198aqe0d9j3%22%2C%20%22cj3omjmxh5ddi0197ndrr9t1v%22%5D%0A%20%20%7D)%20%7B%0A%20%20%20%20...%20ProductInfo%0A%20%20%7D%0A%7D%0A%0Afragment%20ProductInfo%20on%20Product%20%7B%0A%20%20id%0A%20%20name%0A%20%20price%0A%7D%0A%0A"" rel=""noreferrer"">this GraphQL Playground</a> I prepared for you. More background information can be found <a href=""https://www.graph.cool/docs/tutorials/designing-powerful-apis-with-graphql-query-parameters-aing7uech3/"" rel=""noreferrer"">in this article</a>.</p>&#xA;",1176596,,,,2017-06-09 09:00:09,"",,0,1,0,2017-06-09 09:00:09
44539223,2,,44534644,11,,"<p>GraphQL doesn't support this type of data flattening.<br>&#xA;You must change the data structure in your code or work with the returned data structure.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>EDIT:</strong> I just came across <a href=""https://github.com/APIs-guru/graphql-lodash"" rel=""noreferrer"">this repository (graphql-lodash)</a> that could help you achieve what you want.</p>&#xA;",3076424,,,,2017-06-14 08:16:56,"",,0,0,0,2017-06-14 08:16:56
44579877,1,,,17,2091,"<p>I have been looking through the Github V4 API docs and I cannot seem to find a way to query total contributions for the year (as displayed on your github profile). Has anyone managed to use the new API to grab some statistics from your personal profile?</p>&#xA;&#xA;<p>I am using graphQL and a Personal Access Token on github, and managed to get minimal user profile data; username, profile name etc.</p>&#xA;",5216559,,,,2021-08-15 13:41:05,How do you get total contributions with Githubs API v4,<api><github><github-api><graphql><apollo>,2,1,0,2017-06-16 02:30:35
44624236,2,,44624069,2,,<p>You should apply check . If the item already exists in the cart then only increase the quantity&#xA;Try it like this.</p>&#xA;&#xA;<pre><code>private boolean isAlreadyInCart(int targetItemId) {&#xA;    boolean isAlreadyInCart = false;&#xA;    for (int i = 0; i &lt; itemIds.length; i++) {&#xA;        if (targetItemId == itemIds[i]) {&#xA;            isAlreadyInCart = true;&#xA;            break;&#xA;        }&#xA;    }&#xA;    return isAlreadyInCart;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now call use this method like this.</p>&#xA;&#xA;<pre><code>if (!isAlreadyInCart(itemId)) {&#xA;    // TODO: add item to cart&#xA;} else {&#xA;    // TODO: increase quantity&#xA;}&#xA;</code></pre>&#xA;,4781136,,5175197,2019-01-04 00:21:32,2019-01-04 00:21:32,"",,0,0,0,2017-06-19 07:06:29
44642934,1,,,1,333,"<p>i'm currently working on an ecommerce project, and start to implement graphql ruby with my solidus, now i'm about to build on faceted search using solidus searchkick</p>&#xA;&#xA;<p>there is a custom function provided by solidus_searchkick</p>&#xA;&#xA;<pre><code>searcher = build_searcher(params.merge(fields: fields))&#xA;@products = searcher.retrieve_products   &#xA;</code></pre>&#xA;&#xA;<p>my idea was to pass the params to graphql query and perform the search while return the products list</p>&#xA;&#xA;<pre><code>query facetQuery($params: String){&#xA;  viewer {&#xA;    facetProduct(params: $params){ ... }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However if i put</p>&#xA;&#xA;<pre><code>connection :facetProduct, Types::ProductType.connection_type do&#xA;    resolve -&gt; (obj, args, context) {&#xA;      searcher = build_searcher(params)&#xA;      searcher.retrieve_products&#xA;    }&#xA;  end&#xA;</code></pre>&#xA;&#xA;<p>i got a problem build_search is not defined, is there a way to integrate this function directly to graphql, currently i solved this problem over api, via httparty which is not very elegant solution</p>&#xA;",2184988,,,,2017-06-20 02:38:38,GraphQL Ruby integrate with solidus searchkick,<ruby-on-rails><graphql><searchkick><solidus><graphql-ruby>,0,0,0,2017-06-20 02:38:38
44723678,1,48316206,,2,674,"<p>Can someone tell me - is where are a way to get all commits of specific repository with stats using graphql api?&#xA;For now i end with query like this:</p>&#xA;&#xA;<pre><code>query {&#xA;  viewer {&#xA;&#xA;  repository(name: ""CRM_system"") {&#xA;    ref(qualifiedName: ""master"") {&#xA;      target {&#xA;        ... on Commit {&#xA;          id&#xA;          history(since: my_date_time) {&#xA;            edges {&#xA;              node {&#xA;                messageHeadline&#xA;                oid&#xA;                message&#xA;                author {&#xA;                  name&#xA;                  email&#xA;                  date&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>But it show commits only from 'master' and doesnt show stats at all, i want to see something similar to github rest api:</p>&#xA;&#xA;<pre><code>stats: {&#xA;total: 27&#xA;additions: 27&#xA;deletions: 0}&#xA;</code></pre>&#xA;",4227169,,,,2018-01-18 07:50:11,Commits stats from github using graphql,<github-api><graphql>,1,2,0,2017-06-23 14:18:57
44823151,2,,44822915,0,,"<p>It depends on method which receiving this data, but this is correct format for you as given in question</p>&#xA;&#xA;<pre><code>queryParam= { element : { id: ""0000"" , name: ""name"" }; &#xA;</code></pre>&#xA;&#xA;<p>you may need to stringy your solution </p>&#xA;",1259502,,,,2017-06-29 10:52:18,"",,0,0,0,2017-06-29 10:52:18
44919773,1,,,4,1178,"<p>How do I query the <a href=""https://developer.github.com/v4/reference/"" rel=""nofollow noreferrer"">GitHub API v4</a> for the contents of a certain directory of a repository at a certain tag?</p>&#xA;&#xA;<p>This is the best I've come up with so far:</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner:""example"", name:""example"") {&#xA;    refs(refPrefix: ""tags"") {&#xA;    }&#xA;  } &#xA;}&#xA;</code></pre>&#xA;",265261,,2614364,2017-11-11 15:02:56,2017-11-11 15:02:56,How do I query the GitHub v4 API for directory contents at a certain tag?,<graphql><github-api><github-graphql>,1,0,0,2017-07-05 07:34:52
44934363,2,,44919773,3,,"<p>From <a href=""https://stackoverflow.com/questions/44137710/github-graphql-equivalent-of-the-contents-api"">this post</a>, you can get the <code>GitObject</code> with <code>object</code> to filter on <code>branch:/path/folder</code> and print the <code>Tree</code>. The following will get the tree from <code>gson</code> folder from tag <code>gson-2.4</code> and print <code>name</code>, <code>type</code> and <code>mode</code> : </p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner:""google"", name:""gson"") {&#xA;      object(expression: ""gson-2.4:gson"") {&#xA;      ... on Tree{&#xA;        entries{&#xA;          name&#xA;          type&#xA;          mode&#xA;        }&#xA;      }&#xA;    }&#xA;  } &#xA;}&#xA;</code></pre>&#xA;",2614364,,,,2017-07-05 19:18:32,"",,0,1,0,2017-07-05 19:18:32
44969490,1,44973663,,2,829,"<p>I have a GraphQL query that returns an array of items. I can run the query in <em>GraphiQL</em> and get the result I expected.</p>&#xA;&#xA;<p>I have a react application that uses <code>react-apollo</code> and the <code>@graphql</code> decorator to resolve the very same query to component props. When running the query via <code>react-apollo</code>, every item in the returned array is the same - each item has been 'overwritten' by the last item.</p>&#xA;&#xA;<p>I can see in the dev-tools network tab that the correct array items were sent over the network, so the issue seems to relate to react-apollo. What could be causing react-apollo to overwrite array elements?</p>&#xA;",3252835,,,,2017-07-07 14:44:42,GraphQL: react-apollo client overwrites array elements,<node.js><reactjs><graphql><react-apollo>,1,3,0,2017-07-07 11:19:53
44973525,1,,,0,79,"<p>I'm trying to use aor-simple-graphql-client with my apollo server. I have an array with few elements and admin on rest show only the last element many times. When I do the same request with graphiql I can see all elements.</p>&#xA;&#xA;<p>Here is my repo : <a href=""https://github.com/JeresB/cuistot-aor"" rel=""nofollow noreferrer"">https://github.com/JeresB/cuistot-aor</a>&#xA;Here a picture to explain the error.&#xA;<a href=""https://i.stack.imgur.com/eevxo.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;",8263806,,8263806,2017-07-10 15:45:23,2017-08-02 15:12:27,aor-simple-graphql-client : Error when loading data,<graphql><admin-on-rest><apollo-server>,1,2,0,2017-07-07 14:37:49
44984800,1,,,0,390,"<p>I have a mutation like this: </p>&#xA;&#xA;<pre><code>orderAdd(products: [ProductInput],restaurant: RestaurantInput)&#xA;</code></pre>&#xA;&#xA;<p>in <strong>graphql</strong> and i want to pass parameter to it in <strong>Apollo</strong> in <strong>react js</strong>&#xA;like this:</p>&#xA;&#xA;<pre><code> mutation orderAdd ($products: [ProductInput]!, $restaurant: RestaurantInput!)&#xA;{&#xA;    orderAdd(products: $products, restaurant: $restaurant)&#xA;      {&#xA;        errors&#xA;        order {&#xA;          id&#xA;          createdAt&#xA;          products {&#xA;            id&#xA;            name&#xA;            price&#xA;            quantity&#xA;            totalPrice&#xA;          }&#xA;          rate {&#xA;            speed&#xA;            service&#xA;            flavor&#xA;          }&#xA;       }&#xA;    }&#xA;  }&#xA;;&#xA;</code></pre>&#xA;&#xA;<p>but it does not work i think the problem with <strong>graphql</strong> list because the parameter products is type of &#xA; <code>products: { type: new GraphQLList(productInputType) }</code>,&#xA;please can you tell me how to pass <strong>graphql</strong> list to mutation in <strong>apollo</strong>?</p>&#xA;",7605316,,7605316,2017-07-09 06:29:18,2017-07-10 09:04:11,how to pass graphql list to mutation in apollo in react js,<reactjs><graphql><apollo><mutation>,1,1,0,2017-07-08 09:49:16
45007861,2,,44984800,0,,"<p>You can pass list in mutation like this</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>orderAdd(products: [{ProductInput1},{ProductInput2}],restaurant: RestaurantInput){.. }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>Hope, this will help you.</p>&#xA;",6414472,,,,2017-07-10 09:04:11,"",,0,1,0,2017-07-10 09:04:11
45050971,1,,,0,874,"<p>Hi I have integrated shopify sdk into my app, now version has been changed so i have to migrate my api v2 into v3 for my android app. Here they have been using GraphQL Concepts Instead of REST APIs using for webservice call to fetch products and collections details.</p>&#xA;&#xA;<p>here my code.</p>&#xA;&#xA;<pre><code>graphClient = GraphClient.builder(getActivity())&#xA;                    .shopDomain(shopUrl)&#xA;                    .accessToken(shopifyAPIKey)&#xA;                    //   .httpClient(httpClient) // optional&#xA;                    .httpCache(new File(getActivity().getCacheDir(), ""/http""), 10 * 1024 * 1024) // 10mb for http cache&#xA;                    .defaultHttpCachePolicy(HttpCachePolicy.CACHE_FIRST.expireAfter(5, TimeUnit.MINUTES)) // cached response valid by default for 5 minutes&#xA;                    .build();&#xA;&#xA;&#xA;            query = Storefront.query(rootQuery -&gt; rootQuery&#xA;                    .shop(shopQuery -&gt; shopQuery&#xA;                            .name()&#xA;                            .currencyCode()&#xA;                            .refundPolicy(refundPolicyQuery -&gt; refundPolicyQuery&#xA;                                    .title()&#xA;                                    .url()&#xA;                            )&#xA;                    )&#xA;            );&#xA;&#xA;&#xA;            graphClient.queryGraph(query).enqueue(new GraphCall.Callback&lt;Storefront.QueryRoot&gt;() {&#xA;                @Override&#xA;                public void onResponse(@NonNull GraphResponse&lt;Storefront.QueryRoot&gt; response) {&#xA;&#xA;                    String name = response.data().getShop().getName();&#xA;&#xA;                    System.out.println(""Response of Shopify : "" + response.data().toString());&#xA;&#xA;                    System.out.println(""Shop Name : "" + name);&#xA;&#xA;&#xA;                }&#xA;&#xA;                @Override&#xA;                public void onFailure(@NonNull GraphError error) {&#xA;&#xA;                    error.printStackTrace();&#xA;&#xA;                    System.out.println(""Shopify Error : "" + error.getMessage());&#xA;&#xA;                    if (progressDialog != null &amp;&amp; progressDialog.isShowing()) {&#xA;                        progressDialog.dismiss();&#xA;                    }&#xA;&#xA;                }&#xA;            });&#xA;</code></pre>&#xA;&#xA;<p>This code for querying to fetch collections and products</p>&#xA;&#xA;<pre><code>query = Storefront.query(rootQuery -&gt; rootQuery&#xA;            .shop(shopQuery -&gt; shopQuery&#xA;                    .collections(collectionCount, collectionConnectionQuery -&gt; collectionConnectionQuery&#xA;                            .edges(collectionEdgeQuery -&gt; collectionEdgeQuery&#xA;                                    .node(collectionQuery -&gt; collectionQuery&#xA;                                            .title()&#xA;                                            .products(productCount, productConnectionQuery -&gt; productConnectionQuery&#xA;                                                    .edges(productEdgeQuery -&gt; productEdgeQuery&#xA;                                                            .node(productQuery -&gt; productQuery&#xA;                                                                    .title()&#xA;                                                                    .productType()&#xA;                                                                    .description()&#xA;                                                                    .images(2, imageConnectionQuery -&gt; imageConnectionQuery&#xA;                                                                            .edges(imageEdgeQuery -&gt; imageEdgeQuery&#xA;                                                                                    .node(imageQuery -&gt; imageQuery&#xA;                                                                                            .src()&#xA;                                                                                    )&#xA;                                                                            )&#xA;                                                                    )&#xA;                                                                    .variants(2, variantConnectionQuery -&gt; variantConnectionQuery&#xA;                                                                            .edges(variantEdgeQuery -&gt; variantEdgeQuery&#xA;                                                                                    .node(productVariantQuery -&gt; productVariantQuery&#xA;                                                                                            .price()&#xA;                                                                                            .title()&#xA;                                                                                            .available()&#xA;&#xA;&#xA;                                                                                    )&#xA;&#xA;&#xA;                                                                            )&#xA;                                                                    )&#xA;                                                            )&#xA;                                                    )&#xA;                                            )&#xA;                                    )&#xA;                            )&#xA;                    )));&#xA;</code></pre>&#xA;&#xA;<p>Here i am new to GraphQL concept, so how can i get the product image url,price and other details? Please guide me to get the data whatever want about product and other details using this GraphQL</p>&#xA;",2122548,,294657,2017-07-24 13:39:34,2017-08-21 12:49:43,Shopify Integration in android,<android><shopify><graphql>,1,1,0,2017-07-12 07:21:24
45100167,1,45101093,,11,2780,"<p>I'm constructing a GraphQL query using <code>vue-apollo</code> and <code>graphql-tag</code>.</p>&#xA;&#xA;<p>If I hardcode the ID I want, it works, but I'd like to pass the current route ID to Vue Apollo as a variable.</p>&#xA;&#xA;<p><strong>Does work</strong> (hardcoded ID):</p>&#xA;&#xA;<pre><code>  apollo: {&#xA;    Property: {&#xA;      query: PropertyQuery,&#xA;      loadingKey: 'loading',&#xA;      variables: {&#xA;        id: 'my-long-id-example'&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>However, I'm unable to do this:</p>&#xA;&#xA;<p><strong>Doesn't work</strong> (trying to access this.$route for the ID):</p>&#xA;&#xA;<pre><code>  apollo: {&#xA;    Property: {&#xA;      query: PropertyQuery,&#xA;      loadingKey: 'loading',&#xA;      variables: {&#xA;        id: this.$route.params.id&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>I get the error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Uncaught TypeError: Cannot read property 'params' of undefined</p>&#xA;</blockquote>&#xA;&#xA;<p>Is there any way to do this? </p>&#xA;&#xA;<p><strong>EDIT</strong>: Full script block to make it easier to see what's going on:</p>&#xA;&#xA;<pre><code>&lt;script&gt;&#xA;import gql from 'graphql-tag'&#xA;&#xA;const PropertyQuery = gql`&#xA;  query Property($id: ID!) {&#xA;    Property(id: $id) {&#xA;      id&#xA;      slug&#xA;      title&#xA;      description&#xA;      price&#xA;      area&#xA;      available&#xA;      image&#xA;      createdAt&#xA;      user {&#xA;        id&#xA;        firstName&#xA;        lastName&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;&#xA;export default {&#xA;  name: 'Property',&#xA;  data () {&#xA;    return {&#xA;      title: 'Property',&#xA;      property: {}&#xA;    }&#xA;  },&#xA;  apollo: {&#xA;    Property: {&#xA;      query: PropertyQuery,&#xA;      loadingKey: 'loading',&#xA;      variables: {&#xA;        id: this.$route.params.id // Error here!&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;",695749,,695749,2017-07-14 10:32:52,2019-09-10 19:21:23,How can I access this.$route from within vue-apollo?,<javascript><vue.js><graphql><vue-apollo>,3,1,0,2017-07-14 10:02:23
45125148,1,45125401,,2,1696,"<p>I'm currently customising a Shopify App, allowing users to edit their profiles. </p>&#xA;&#xA;<p>I am using the Shopify Webfront API with GraphQL, specifically the ""CustomerUpdate"" mutation:&#xA;<a href=""https://help.shopify.com/api/storefront-api/reference/mutation/customerupdate"" rel=""nofollow noreferrer"">https://help.shopify.com/api/storefront-api/reference/mutation/customerupdate</a></p>&#xA;&#xA;<p>Calling the GraphQL end point using jQuery AJAX.</p>&#xA;&#xA;<p>However, the method requires a CustomerAccessToken parameter but I am unsure how is this generated; the Customer Shopify Liquid class does not have it, &#xA;and the main searches for Shopify CustomerAccessTokens end up revolving around Shopify API Tokens.</p>&#xA;&#xA;<p>Any help would be greatly appreciated.</p>&#xA;&#xA;<p>TLDR: Unsure how to generate the CustomerAccessToken for the GraphQL CustomerUpdate mutation.</p>&#xA;&#xA;<p>Cheers&#xA;Xavier</p>&#xA;",2621021,,2621021,2017-07-16 05:06:27,2017-07-16 05:45:07,Shopify GraphQL CustomerAccessToken,<javascript><jquery><ajax><shopify><graphql>,1,0,0,2017-07-16 04:56:24
45133643,1,45133816,,0,135,"<p>I am trying to define my schema for my API. I am running into an issue where each resource has many different sections. Ideally I would like to just be able to say sections is a JSON object rather than define all the different modules within the sections. Is there a way I can do this? As far as I can tell, there doesn't seem to be a <code>JSON</code> type definition using <code>graphql-tools</code></p>&#xA;&#xA;<pre><code>// Define your types here.&#xA;const typeDefs = `&#xA;&#xA;  type Resource {&#xA;    id: ID,&#xA;      title: String!,&#xA;        slug: String!,&#xA;      path: String!,&#xA;      template: String!,&#xA;      published: String!,&#xA;      sections: Sections&#xA;    }&#xA;&#xA;    type Sections {&#xA;      // ...&#xA;    }&#xA;&#xA;    type Query {&#xA;      allLinks(filter: LinkFilter): [Link!]!&#xA;      findResource(filter: ResourceFilter): [Resource!]!&#xA;    }&#xA;&#xA;`;&#xA;</code></pre>&#xA;",3528590,,,,2017-07-16 22:26:05,Defining Schema with graphql-tools,<node.js><graphql>,1,1,0,2017-07-16 21:56:14
45133939,2,,45133546,0,,"<p>Fixed it. <code>{params}</code> (in curly braces) had to be changed to <code>props</code> (no curly braces):</p>&#xA;&#xA;<pre><code>const withData = graphql(GETIMS_QUERY, {&#xA;    options: (props) =&gt; {&#xA;        console.log(props);&#xA;&#xA;        return {&#xA;            variables: {&#xA;                ""fromID"": Meteor.userId(),&#xA;                ""toID"": props.toID,&#xA;            },&#xA;        };&#xA;    },&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>What I don't yet understand is, why does the Githunt-React Apollo demo code, have it in curly braces?</p>&#xA;&#xA;<p>If you know, please post your response as an answer, and upon confirmation I will mark it as the accepted answer to this question. :)</p>&#xA;",364966,,364966,2017-07-17 00:05:09,2017-07-17 00:05:09,"",,0,0,0,2017-07-16 22:44:25
45192428,2,,38165609,-2,,"<p>If you think implementing &amp; maintaining Graphql services (mainly their schemas), please have a look at <a href=""https://github.com/anhldbk/graphqly"" rel=""nofollow noreferrer"">graphqly</a>. Here's a sample code to define Graphql schemas:</p>&#xA;&#xA;<pre><code>import graphly from ""graphqly"";&#xA;&#xA;const gBuilder = graphly.createBuilder();&#xA;&#xA;// define types, inputs ... (in any order)&#xA;gBuilder.type(""Products"").implements(""List"").def(`&#xA;    products: [Product]!&#xA;`);&#xA;&#xA;gBuilder.type(""Product"").def(`&#xA;    id: ID!&#xA;    name: String!&#xA;    link: String&#xA;    price: Int&#xA;`);&#xA;&#xA;// we're too lazy to define a separate input, so we can `extend` other structure&#xA;gBuilder.input(""ProductInput"").ext(""Product"");&#xA;&#xA;gBuilder.enum(""ProductOrder"").def(`&#xA;    PRICE_DESCENDING&#xA;    PRICE_ASCENDING&#xA;    NEWEST&#xA;`);&#xA;</code></pre>&#xA;",197896,,,,2017-07-19 13:42:10,"",,0,0,0,2017-07-19 13:42:10
45192511,2,,40931824,1,,"<p>May be you should have a look at <a href=""https://github.com/anhldbk/graphqly"" rel=""nofollow noreferrer"">graphqly</a>. It's an abstraction built on top of <code>graphql-tools</code> that help you develop Graphql services easier. Here's the sample code with <code>graphqly</code>:</p>&#xA;&#xA;<pre><code>import graphly from ""graphqly"";&#xA;&#xA;const gBuilder = graphly.createBuilder();&#xA;&#xA;// define types, inputs ... (in any order)&#xA;gBuilder.type(""Products"").implements(""List"").def(`&#xA;    products: [Product]!&#xA;`);&#xA;&#xA;gBuilder.type(""Product"").def(`&#xA;    id: ID!&#xA;    name: String!&#xA;    link: String&#xA;    price: Int&#xA;`);&#xA;&#xA;gBuilder&#xA;.query(`&#xA;    products(limit: Int = 20, offset: Int = 0, filter: ProductFilter): Products&#xA;`)&#xA;.resolve((root, args, context) =&gt; {&#xA;    // your resolver here&#xA;});&#xA;</code></pre>&#xA;",197896,,,,2017-07-19 13:45:33,"",,0,0,0,2017-07-19 13:45:33
45281988,2,,43986263,8,,"<p>I just encountered the same problem and was finally able to track down the answer in the Shopify GraphQL docs - <a href=""https://help.shopify.com/api/storefront-api/reference/scalar/id"" rel=""noreferrer"">https://help.shopify.com/api/storefront-api/reference/scalar/id</a></p>&#xA;&#xA;<p>Basically, the <code>id</code> returned in Shopify GraphQL responses is a base64-encoded representation of the actual Shopify <code>id</code>. So if you base64-decode the variant <code>id</code> from the result you posted, the value is <code>gid://shopify/ProductVariant/40209756430</code></p>&#xA;&#xA;<p>You would need to parse the numerical <code>id</code> from the end of that value and that would be the <code>id</code> that Shopify uses for all other APIs.</p>&#xA;",9324,,9324,2017-07-24 13:37:51,2017-07-24 13:37:51,"",,0,0,0,2017-07-24 13:30:11
45382069,1,46317804,,30,4631,"<p>I am using the GitHub's GraphQL API to search for files/code containing a particular word.  A simple (contrived) example of a search which in this case is to find the term ""beef"" in files located in ""recipes"" (the repo) for ""someuser"" (the owner for the repo) is shown below:</p>&#xA;&#xA;<pre><code>{&#xA;  search(query: ""beef repo:someuser/recipes"", type: REPOSITORY, first: 10) {&#xA;    repositoryCount&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I tried this in GitHub's GraphQL Explorer (<a href=""https://developer.github.com/v4/explorer/"" rel=""noreferrer"">https://developer.github.com/v4/explorer/</a>) and receive zero results from the search which is incorrect as I can confirm that the word (""beef"" in the example above) is in the files in the repo:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""search"": {&#xA;      ""repositoryCount"": 0,&#xA;      ""edges"": []&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I try this using GitHub's REST API (v3) via curl, I definitely get results:</p>&#xA;&#xA;<pre><code>curl --header 'Accept: application/vnd.github.v3.raw' https://api.github.com/search/code?q=beef+repo:someuser/recipes&#xA;</code></pre>&#xA;&#xA;<p>... So I know that the query (REST v3 API) is valid, and my understanding is that the query string in the GraphQL (v4) API is identical to that for the REST (v3) API.</p>&#xA;&#xA;<p>My questions are:</p>&#xA;&#xA;<ol>&#xA;<li>Am I incorrectly using the GitHub GraphQL (v4) API or am I specifying the query string improperly, or am I trying to use functionality that is not yet supported?</li>&#xA;<li>Is there an example of how to do this that someone can provide (or link to) that illustrates how to search code for specific words?</li>&#xA;</ol>&#xA;",3011570,,,,2019-05-23 11:32:52,Search for code in GitHub using GraphQL (v4 API),<github><graphql><github-api>,2,0,0,2017-07-28 20:40:51
45382368,2,,45381895,4,,"<p>In the <code>query</code> parameter you can use the same format as <a href=""https://help.github.com/articles/searching-repositories/"" rel=""nofollow noreferrer"">Github search</a>, filter language with <code>language:LANGUAGE</code> : </p>&#xA;&#xA;<pre><code>{&#xA;  search(query: ""language:java"", type: REPOSITORY, first: 10) {&#xA;    repositoryCount&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          nameWithOwner&#xA;        }&#xA;      }&#xA;    }&#xA;  } &#xA;}&#xA;</code></pre>&#xA;",2614364,,,,2017-07-28 21:02:18,"",,0,2,0,2017-07-28 21:02:18
45384878,2,,45384163,8,,"<p>If you're using <code>Object.assign()</code>, your Query and Mutation properties shouldn't end up empty, but you will run into an issue because, unlike lodash's <code>merge()</code>, it's not recursive. <code>Object.assign()</code> only compares the ""direct"" properties of the objects it's passed -- overriding properties of previous sources as it moves through the list. </p>&#xA;&#xA;<p>Because <code>Query</code> and <code>Mutation</code> are properties of the objects being passed, each subsequent resolver override the previous object's <code>Query</code> and <code>Mutation</code>, with the resulting object only holding the Query and Mutation properties of the last object passed into <code>Object.assign()</code>.</p>&#xA;&#xA;<p>It's a lot less neat, but if you're bent on avoiding importing lodash, you could get the expected behavior this way:</p>&#xA;&#xA;<pre><code>const productResolver = {&#xA;  Query: { ... ✂ ... },&#xA;  Mutation: { ... ✂ ... }&#xA;}&#xA;&#xA;const widgetResolver = {&#xA;  Query: { ... ✂ ... },&#xA;  Mutation: { ... ✂ ... }&#xA;}&#xA;&#xA;const resolvers = {&#xA;  Query: Object.assign({}, widgetResolver.Query, productResolver.Query),&#xA;  Mutation: Object.assign({}, widgetResolver.Mutation, productResolver.Mutation)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Got type resolvers too? No problem:</p>&#xA;&#xA;<pre><code>const Widget = { ... ✂ ... }&#xA;const Product = { ... ✂ ... }&#xA;&#xA;const resolvers = Object.assign(&#xA;  {&#xA;    Query: Object.assign({}, widgetResolver.Query, productResolver.Query),&#xA;    Mutation: Object.assign({}, widgetResolver.Mutation, productResolver.Mutation)&#xA;  },&#xA;  Widget,&#xA;  Product)&#xA;</code></pre>&#xA;",6024220,,,,2017-07-29 03:16:40,"",,0,3,0,2017-07-29 03:16:40
45390795,2,,45390076,6,,"<p>You have to escape nested double quotes in <code>query</code> JSON field, your actual body would be : </p>&#xA;&#xA;<pre><code>{&#xA; ""query"": ""query { repositoryOwner(login: \""brianzelip\"") { id } }""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So replace <code>\""brianzelip\""</code> with <code>\\\""brianzelip\\\""</code> :</p>&#xA;&#xA;<pre class=""lang-sh prettyprint-override""><code>curl -H ""Authorization: bearer token"" -d "" \&#xA; { \&#xA;   \""query\"": \""query { repositoryOwner(login: \\\""brianzelip\\\"") { id } }\"" \&#xA; } \&#xA;"" https://api.github.com/graphql&#xA;</code></pre>&#xA;&#xA;<p>You can also use single quotes instead of double quotes to wrap the body : </p>&#xA;&#xA;<pre class=""lang-sh prettyprint-override""><code>curl -H ""Authorization: bearer token"" -d '&#xA; {&#xA;   ""query"": ""query { repositoryOwner(login: \""brianzelip\"") { id } }""&#xA; }&#xA;' https://api.github.com/graphql&#xA;</code></pre>&#xA;&#xA;<p>You could also use <a href=""https://en.wikipedia.org/wiki/Here_document#Unix_shells"" rel=""noreferrer"">heredoc</a> : </p>&#xA;&#xA;<pre class=""lang-sh prettyprint-override""><code>curl -H ""Authorization: bearer token"" -d @- https://api.github.com/graphql &lt;&lt;EOF&#xA;{&#xA;    ""query"": ""query { repositoryOwner(login: \""brianzelip\"") { id } }""&#xA;}&#xA;EOF&#xA;</code></pre>&#xA;",2614364,,2614364,2017-07-29 15:18:26,2017-07-29 15:18:26,"",,0,1,0,2017-07-29 15:11:42
45397333,1,45414976,,10,3286,"<p>I'm trying to use the new Github GraphQL api (v4) and I don't seem to be able to figure out how to get the last x commits for <strong>master</strong>. I've used <strong>repository</strong> and <strong>ref</strong> but they still don't give me what I need.</p>&#xA;&#xA;<p>The query below almost gives me what I need:</p>&#xA;&#xA;<pre><code>query{&#xA;  repository(owner: ""typelevel"", name: ""cats"") {&#xA;    refs(refPrefix:""refs/heads/"", last: 5) {&#xA;      edges{&#xA;        node {&#xA;          associatedPullRequests(states: MERGED, last: 5) {&#xA;            edges{&#xA;              node {&#xA;                title&#xA;                baseRef {&#xA;                  name&#xA;                  prefix&#xA;                }&#xA;                baseRefName&#xA;                commits(last: 10) {&#xA;                  edges {&#xA;                    node {&#xA;                      commit {&#xA;                        abbreviatedOid&#xA;                        message&#xA;&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>but:</p>&#xA;&#xA;<ol>&#xA;<li>doesn't seems to exactly match what is in the repo </li>&#xA;<li>limited to PRs</li>&#xA;<li>seems too unwieldy</li>&#xA;</ol>&#xA;&#xA;<p>I also tried using <strong>defaultBranchRef</strong> but that didn't work either:</p>&#xA;&#xA;<pre><code>query{&#xA;  repository(owner: ""typelevel"", name: ""cats"") {&#xA;    defaultBranchRef {&#xA;      name&#xA;      prefix&#xA;      associatedPullRequests(states: [MERGED], last: 5) {&#xA;        edges {&#xA;          node {&#xA;            title&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I've been testing the queries using the <a href=""https://developer.github.com/v4/explorer/"" rel=""noreferrer"" title=""explorer app"">explorer app</a> on the Github api page.</p>&#xA;&#xA;<p>Any ideas?</p>&#xA;",408237,,,,2022-07-19 10:38:28,Get last x commits from Github repo using Github Api V4,<github><graphql><github-api>,3,0,0,2017-07-30 07:15:33
45397661,2,,45397333,2,,"<p>Would using <code>history</code> be better in this case?</p>&#xA;<p>See <a href=""https://platform.github.community/t/how-to-fetch-commits-from-repos/643/2"" rel=""nofollow noreferrer"">this thread</a></p>&#xA;<blockquote>&#xA;<p>A &quot;<code>ref</code>&quot; (short for reference) is anything that points to a git commit. This could be a local branch, a tag, a remote branch, etc. So <code>master</code>, for example, would be considered a ref.</p>&#xA;<p>In that vein, you can use the <code>ref</code> field on the <code>Repository</code> type to get a reference that targets a commit.<br />&#xA;From that commit, you can get all of the commit's parents. If you target <code>master</code>, you can get the main <code>history</code> of the git repository.</p>&#xA;</blockquote>&#xA;<pre><code>query {&#xA;  node(id: &quot;MDEwOlJlcG9zaXRvcnk4NDM5MTQ3&quot;) {&#xA;    ... on Repository {&#xA;      ref(qualifiedName: &quot;master&quot;) {&#xA;        target {&#xA;          ... on Commit {&#xA;            id&#xA;            history(first: 30) {&#xA;              totalCount&#xA;              pageInfo {&#xA;                hasNextPage&#xA;              }&#xA;&#xA;              edges {&#xA;                node {&#xA;                  oid&#xA;                  message&#xA;                  author {&#xA;                    name&#xA;                    email&#xA;                    date&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6309,,-1,2020-06-20 09:12:55,2017-07-30 07:58:54,"",,0,2,0,2017-07-30 07:58:54
45414976,2,,45397333,15,,"<p>I was able to get this working with:</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner: ""typelevel"", name: ""cats"") {&#xA;    ref(qualifiedName: ""master"") {&#xA;      target {&#xA;        ... on Commit {&#xA;          history(first: 10) {&#xA;            pageInfo {&#xA;              hasNextPage&#xA;              endCursor&#xA;            }&#xA;            edges {&#xA;              node {&#xA;                oid&#xA;                messageHeadline&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>by modifying <a href=""https://platform.github.community/t/getting-commits-parents/1965"" rel=""noreferrer"">this</a> query linked to on the <a href=""https://platform.github.community/"" rel=""noreferrer"">Github Platform Community</a>.</p>&#xA;",408237,,,,2017-07-31 11:40:58,"",,0,3,0,2017-07-31 11:40:58
45416176,1,,,1,1167,"<p>I'm testing using the shopify storefront api, and want to access it using an ajax call. This api uses graphql, so I'm loosely following instructions for that from <a href=""https://www.graph.cool/docs/tutorials/graphql-and-jquery-kohj2aengo/"" rel=""nofollow noreferrer"">https://www.graph.cool/docs/tutorials/graphql-and-jquery-kohj2aengo/</a></p>&#xA;&#xA;<pre><code>$.ajax({&#xA;    type:""POST"",&#xA;    url: 'https://my-test-shopify-store.myshopify.com/api/graphql',&#xA;    dataType: 'json',&#xA;    headers: {""X-Shopify-Storefront-Access-Token"": ""my_storefront_access_token""},&#xA;    data: JSON.stringify({""query"":""{shop{name}}""}),&#xA;    contentType: 'application/json',&#xA;    success: function(data){&#xA;        console.log(""successful post"");&#xA;    },&#xA;    error: function(data){&#xA;        console.log(data);&#xA;        console.log('errors');&#xA;    }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I expect this to return a json string ""My Test Shopify Store"", but am getting nothing. Anything obvious I'm doing wrong? </p>&#xA;",7067334,,1817690,2017-07-31 12:39:59,2021-02-06 00:45:04,Making calls to the shopify storefront api in jquery,<jquery><ajax><shopify><graphql>,1,3,0,2017-07-31 12:38:38
45464108,2,,45434545,0,,"<p>I think <a href=""https://github.com/anhldbk/graphqly"" rel=""nofollow noreferrer"">graphqly</a> is the answer for you.</p>&#xA;&#xA;<pre><code>import graphly from ""graphqly"";&#xA;&#xA;const gBuilder = graphly.createBuilder();&#xA;&#xA;// define types, inputs ... (in any order)&#xA;gBuilder.type(""Products"").implements(""List"").def(`&#xA;  products: [Product]!&#xA;`);&#xA;&#xA;gBuilder.type(""Product"").def(`&#xA;  id: ID!&#xA;  name: String!&#xA;  link: String&#xA;  price: Int&#xA;`);&#xA;&#xA;// we're too lazy to define a separate input, so we can `extend` other structure&#xA;gBuilder.input(""ProductInput"").ext(""Product"");&#xA;&#xA;gBuilder.enum(""ProductOrder"").def(`&#xA;  PRICE_DESCENDING&#xA;  PRICE_ASCENDING&#xA;  NEWEST&#xA;`);&#xA;&#xA;// define interface `List`&#xA;gBuilder.iface(""List"").def(`&#xA;  total: Int!,&#xA;  offset: Int!,&#xA;  limit: Int!,&#xA;  # number of items actually in this window&#xA;  size: Int!&#xA;`);&#xA;&#xA;&#xA;gBuilder.query(`&#xA;  products(limit: Int = 20, offset: Int = 0, filter: ProductFilter): Products&#xA;`)&#xA;.resolve((root, args, context) =&gt; {&#xA;  // your resolver here&#xA;  // `this` is binded to the current Query instance&#xA;});&#xA;</code></pre>&#xA;",197896,,,,2017-08-02 14:48:23,"",,0,1,0,2017-08-02 14:48:23
45494375,1,45508522,,1,294,"<p>In one of my Django models I have this field:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>version = models.PositiveSmallIntegerField(blank=True, null=True)</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>To test it, I manually created a new record via the DBBrowser for SQLite and left the field blank.</p>&#xA;&#xA;<p>When I then issued a GraphQL query on the object, I received this error message back:</p>&#xA;&#xA;<pre><code>""errors"": [ { ""message"": ""could not convert string to float: "" } ]&#xA;</code></pre>&#xA;&#xA;<p>Updating the empty field to 0 or 1 or 2, etc., the error message disappeared.</p>&#xA;&#xA;<p>I don't consider an empty field to be an error, especially because I specifically stated in the field definition that it could be empty.  Short of having a default value of 0 (zero), how do I fix this to get rid of the error message?</p>&#xA;&#xA;<p>Robert</p>&#xA;",8202482,,,,2017-08-04 13:47:26,Empty Integer Field in Django Model returns error in GraphQL,<django-models><graphql>,1,0,0,2017-08-03 20:57:24
45513813,1,45513982,,0,1805,"<p>At this momement I have something like that</p>&#xA;&#xA;<pre><code>return this._http.get('https://api.github.com/users/' + this.username + '/repos?client_id=' + this.client_id + '&amp;client_secret=' + this.client_secret)&#xA;.map(res =&gt; res.json());&#xA;</code></pre>&#xA;&#xA;<p>to get a list of repositories for the chosen user (without using GraphQL).</p>&#xA;&#xA;<p>How can I get a list of issues but by using GraphQL?&#xA;Here is an example grom GitHub API documentation:</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner:""octocat"", name:""Hello-World"") {&#xA;    issues(last:20, states:CLOSED) {&#xA;      edges {&#xA;        node {&#xA;          title&#xA;          url&#xA;          labels(first:5) {&#xA;            edges {&#xA;              node {&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can I implement it in Angular 4?</p>&#xA;",6908215,,,,2017-08-04 19:13:33,Angular 4 and GitHub GraphQL API,<angular><graphql><github-api>,1,0,0,2017-08-04 18:59:54
45513982,2,,45513813,6,,"<p>There are at least two ways:</p>&#xA;&#xA;<ul>&#xA;<li>Using GraphQL client like <code>apollo-angular</code></li>&#xA;<li>Fetching data from GraphQL API using a simple HTTP request</li>&#xA;</ul>&#xA;&#xA;<p><strong>Use HTTP</strong></p>&#xA;&#xA;<pre><code>const query = `query {&#xA;  repository(owner:""octocat"", name:""Hello-World"") {&#xA;    issues(last:20, states:CLOSED) {&#xA;      edges {&#xA;        node {&#xA;          title&#xA;          url&#xA;          labels(first:5) {&#xA;            edges {&#xA;              node {&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}`;&#xA;&#xA;this._http.get(LINK_TO_API + '?query=' + query);&#xA;</code></pre>&#xA;&#xA;<p><strong>Use <code>apollo-angular</code></strong></p>&#xA;&#xA;<p><a href=""https://github.com/apollographql/apollo-angular"" rel=""noreferrer"">https://github.com/apollographql/apollo-angular</a></p>&#xA;&#xA;<p>Apollo is a GraphQL client.</p>&#xA;&#xA;<p>Here are the docs:</p>&#xA;&#xA;<p><a href=""http://dev.apollodata.com/angular2/"" rel=""noreferrer"">http://dev.apollodata.com/angular2/</a></p>&#xA;&#xA;<p>An example:</p>&#xA;&#xA;<pre><code>import { Apollo } from 'apollo-angular';&#xA;import gql from 'graphql-tag';&#xA;&#xA;@Component({&#xA;    /* ... */&#xA;})&#xA;class UsersComponent implements OnInit {&#xA;&#xA;    constructor(&#xA;        private apollo: Apollo&#xA;    ) {}&#xA;&#xA;    ngOnInit() {&#xA;        // or this.apollo.watchQuery() - read the docs&#xA;        this.apollo.query({&#xA;            query: gql`&#xA;                {&#xA;                    repository(owner: ""octocat"", name: ""Hello-World"") {&#xA;                        issues(last:20, states:CLOSED) {&#xA;                            edges {&#xA;                                node {&#xA;                                    title&#xA;                                    url&#xA;                                    labels(first:5) {&#xA;                                        edges {&#xA;                                            node {&#xA;                                                name&#xA;                                            }&#xA;                                        }&#xA;                                    }&#xA;                                }&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            `&#xA;        }).subscribe(response =&gt; {&#xA;            console.log('data', response.data);&#xA;        });&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>A working examples:</p>&#xA;&#xA;<p><a href=""https://github.com/kamilkisiela/apollo-angular-reproduction/blob/master/client/app/post/post-list.component.ts"" rel=""noreferrer"">https://github.com/kamilkisiela/apollo-angular-reproduction/blob/master/client/app/post/post-list.component.ts</a></p>&#xA;&#xA;<p><a href=""https://github.com/apollographql/githunt-angular"" rel=""noreferrer"">https://github.com/apollographql/githunt-angular</a></p>&#xA;",4035768,,,,2017-08-04 19:13:33,"",,0,2,0,2017-08-04 19:13:33
45516743,1,,,5,14266,"<p>I am trying to make an API call to GitHub using GraphQL, I have been able to successfully call data with a static graphQL call, however I am having trouble putting a variable (var entry) in my call so that I can change the call based on an input a user would provide in the web app.</p>&#xA;&#xA;<p>I am using AJAX to be able to pass the authorization token. Additionally, the call does not work unless the query is JSON stringified (gets 400 error otherwise).</p>&#xA;&#xA;<p>The JSON Stringify seems to turn the name of the variable 'superQuery' into a string rather than turning the value of 'superQuery' into a string.</p>&#xA;&#xA;<p>How can I send a graphQL query with a variable that can change based on user input?</p>&#xA;&#xA;<p>P.S. Relative noob to web development, apologies for any super obvious mistakes.</p>&#xA;&#xA;<p>Here is what I have so far:</p>&#xA;&#xA;<pre><code>var entry = $('#entry').val()&#xA;&#xA;  var superQuery = `{&#xA;    repository(name: entry, owner: ""******"") {&#xA;      pullRequests(last: 100) {&#xA;        nodes {&#xA;          state&#xA;          headRepository {&#xA;            owner {&#xA;             login&#xA;            }&#xA;           }&#xA;          }&#xA;         }&#xA;        }&#xA;       }`&#xA;&#xA;.ajax({&#xA;  method: ""POST"",&#xA;  url: ""https://api.github.com/graphql"",&#xA;  contentType: ""application/json"",&#xA;  headers: {&#xA;    Authorization: ""bearer **********************************""&#xA;  },&#xA;  data: JSON.stringify({&#xA;    query: superQuery&#xA;  })&#xA;})&#xA;</code></pre>&#xA;",8419641,,8419641,2017-08-06 23:20:15,2021-07-02 19:21:48,How can I send a GraphQL AJAX query with a variable?,<jquery><json><graphql><github-api>,2,0,0,2017-08-04 23:23:22
45518354,2,,45516743,0,,"<p>If I understand your question correctly, I believe you want to do the following (assuming entry is a string):</p>&#xA;<pre><code> var superQuery = `query repository($entry: String)&#xA;         repository(entry: $entry) {&#xA;            pullRequests(last: 100) {&#xA;               nodes {&#xA;                 state&#xA;                 headRepository {&#xA;                   owner {&#xA;                     login&#xA;                    } &#xA;                  } &#xA;                } &#xA;             }&#xA;          }`&#xA;</code></pre>&#xA;<p>And then for your data:</p>&#xA;<pre><code>data: JSON.stringify({&#xA;   query: superQuery,&#xA;   variables: { &quot;entry&quot;: $('#entry').val() }&#xA;})&#xA;</code></pre>&#xA;",7740878,,11002705,2021-07-02 19:21:48,2021-07-02 19:21:48,"",,0,6,0,2017-08-05 04:54:28
45518465,1,,,0,780,"<p>I am new to Typescript/Javascript/Angular 2 and I am having great trouble getting data to bind to PrimeNG's data table component.</p>&#xA;&#xA;<p>This is complicated by trying to pass data between components. I have something like the following tree:</p>&#xA;&#xA;<ol>&#xA;<li>Student Details Component (Parent)</li>&#xA;<li>Search Component (When an ID is entered it filters up as output to the parent)</li>&#xA;<li>Student Service (takes the ID from the search and performs a GraphQL query that is passed back to the parent)</li>&#xA;<li>Student Requests Component (takes as input an array of request objects to bind to data table that is passed from the parent) - this is the component that doesn't seem to be working</li>&#xA;</ol>&#xA;&#xA;<p>The parent is coordinating all the components and services:</p>&#xA;&#xA;<pre><code>export class StudentDetailsComponent {&#xA;    requests: Array&lt;RequestModel&gt;;&#xA;    studentSearch: SearchModel;&#xA;&#xA;    constructor(private toaster: ToasterService, private studentS: StudentService) { };&#xA;&#xA;    searchStudent(event) {&#xA;        this.studentSearch = event;&#xA;        this.requests = this.studentS.getStudentRequests(this.studentSearch.studentId);&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Assume for the purposes of this example that the search component is working (it is providing an ID for the service to use, so I think it is fine).</p>&#xA;&#xA;<p>The service then makes a GraphQL query using Apollo:</p>&#xA;&#xA;<pre><code>getStudentRequests(studentId: number): Array&lt;RequestModel&gt; {&#xA;        try {&#xA;            this.apollo.watchQuery&lt;StudentRequestQueryResponse&gt;({&#xA;                query: StudentRequestQ,&#xA;                variables: {&#xA;                    studentId: studentId&#xA;                }&#xA;            }).subscribe(({ data }) =&gt; {&#xA;                try {&#xA;                    this.loading = data.loading;&#xA;                    data.allApplicationRequests.nodes.forEach((element, index) =&gt; {&#xA;                        // console.log(data.allApplicationRequests.nodes);&#xA;                        this.requestPackages.push({&#xA;                            applicationRequestId: data.allApplicationRequests.nodes[index].applicationRequestPk,&#xA;                            studentId: data.allApplicationRequests.nodes[index].studentId,&#xA;                            visaTypeId: data.allApplicationRequests.nodes[index].metaVisaTypeByVisaTypeId.visaTypePk,&#xA;                            visaTypeName: data.allApplicationRequests.nodes[index].metaVisaTypeByVisaTypeId.visaTypeName,&#xA;                            applicationOriginCountryId: data.allApplicationRequests.nodes[index].metaCountryByCountryRequestLodgedId.countryPk,&#xA;                            applicationOriginCountry: data.allApplicationRequests.nodes[index].metaCountryByCountryRequestLodgedId.countryName,&#xA;                            passportCountryId: data.allApplicationRequests.nodes[index].studentDetailByStudentId.metaCountryByPassportCountryId.countryPk,&#xA;                            passportCountry: data.allApplicationRequests.nodes[index].studentDetailByStudentId.metaCountryByPassportCountryId.countryName,&#xA;                            healthInsuranceTypeId: data.allApplicationRequests.nodes[index].metaHealthInsuranceTypeByHealthInsuranceId.healthInsuranceTypePk,&#xA;                            healthInsuranceTypeName: data.allApplicationRequests.nodes[index].metaHealthInsuranceTypeByHealthInsuranceId.healthInsuranceType,&#xA;                            healthInsuranceProviderId: data.allApplicationRequests.nodes[index].metaHealthInsuranceTypeByHealthInsuranceId.metaHealthInsuranceProviderByHealthInsuranceProviderId.healthInsuranceProviderPk,&#xA;                            healthInsuranceProviderName: data.allApplicationRequests.nodes[index].metaHealthInsuranceTypeByHealthInsuranceId.metaHealthInsuranceProviderByHealthInsuranceProviderId.providerName,&#xA;                            universityCourseId: data.allApplicationRequests.nodes[index].metaUniversityCourseByUniversityCourseId.universityCoursePk,&#xA;                            universityCourseName: data.allApplicationRequests.nodes[index].metaUniversityCourseByUniversityCourseId.courseName,&#xA;                            universityFacultyId: data.allApplicationRequests.nodes[index].metaUniversityCourseByUniversityCourseId.metaUniversityFacultyByUniversityFacultyId.universityFacultyPk,&#xA;                            universityFacultyName: data.allApplicationRequests.nodes[index].metaUniversityCourseByUniversityCourseId.metaUniversityFacultyByUniversityFacultyId.facultyName,&#xA;                            universityPeriodId: data.allApplicationRequests.nodes[index].metaUniversityPeriodByUniversityPeriodId.universityPeriodPk,&#xA;                            universityPeriodCode: data.allApplicationRequests.nodes[index].metaUniversityPeriodByUniversityPeriodId.metaUniversityPeriodCodeByUniversityPeriodCodeId.universityPeriodCode,&#xA;                            universityPeriodName: data.allApplicationRequests.nodes[index].metaUniversityPeriodByUniversityPeriodId.metaUniversityPeriodCodeByUniversityPeriodCodeId.universityPeriodName,&#xA;                            universityPeriodStartDate: data.allApplicationRequests.nodes[index].metaUniversityPeriodByUniversityPeriodId.universityPeriodStartDate,&#xA;                            universityPeriodEndDate: data.allApplicationRequests.nodes[index].metaUniversityPeriodByUniversityPeriodId.universityPeriodEndDate,&#xA;                            sourceBranchId: data.allApplicationRequests.nodes[index].metaSourceBranchOrganisationBySourceBranchId.sourceBranchOrganisationPk,&#xA;                            sourceBranchName: data.allApplicationRequests.nodes[index].metaSourceBranchOrganisationBySourceBranchId.sourceBranchName,&#xA;                            sourceCompanyId: data.allApplicationRequests.nodes[index].metaSourceBranchOrganisationBySourceBranchId.metaSourceCompanyOrganisationBySourceId.sourceOrganisationPk,&#xA;                            sourceCompanyName: data.allApplicationRequests.nodes[index].metaSourceBranchOrganisationBySourceBranchId.metaSourceCompanyOrganisationBySourceId.sourceName,&#xA;                            requestOwner: data.allApplicationRequests.nodes[index].requestOwner,&#xA;                            requestStatusId: data.allApplicationRequests.nodes[index].metaRequestActionTypeByRequestActionId.requestActionPk,&#xA;                            requestStatus: data.allApplicationRequests.nodes[index].metaRequestActionTypeByRequestActionId.requestStatus,&#xA;                            requestCloseTime: data.allApplicationRequests.nodes[index].requestClosedTime&#xA;                        });&#xA;                    });&#xA;                    // console.log(this.requestPackages);&#xA;                }&#xA;                catch (err) {&#xA;                    if (err instanceof TypeError) {&#xA;                        console.log(err);&#xA;                        throw new StandardErrorModel('info', '', 'We cannot find any records with those parameters.', err.message);&#xA;                    } else {&#xA;                        console.log(err);&#xA;                        throw new StandardErrorModel('error', '', 'We are having trouble connecting to the database.', err.message);&#xA;                    }&#xA;                }&#xA;            })&#xA;        } catch (err) {&#xA;            console.log(err);&#xA;            throw new StandardErrorModel('error', '', 'We are having trouble connecting to the database.', err.message);&#xA;        }&#xA;        return this.requestPackages;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Then I have this code in my Student Requests Component listening for changes to the <code>@Input()</code> to make sure it is working.</p>&#xA;&#xA;<pre><code>export class StudentRequestComponent implements OnInit, OnChanges {&#xA;&#xA;    @Input()&#xA;    requests: Array&lt;RequestModel&gt;;&#xA;&#xA;    ngOnChanges(changes: any) {&#xA;        console.log(""INPUT"");&#xA;        console.log(this.requests);&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am then getting a nice array printed out with one object on the Chrome console:&#xA;<a href=""https://i.stack.imgur.com/hd4SV.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hd4SV.png"" alt=""Screenshot Chrome Console""></a></p>&#xA;&#xA;<p>But no data are appearing in my component which has the following HTML:</p>&#xA;&#xA;<pre><code>&lt;div class=""card card-w-title""&gt;&#xA;    &lt;p-dataTable [value]=""requests"" [editable]=""true"" sortMode=""multiple"" expandableRows=""false""&gt;&#xA;        &lt;p-header&gt;Requests&lt;/p-header&gt;&#xA;        &lt;p-column field=""applicationOriginCountry"" header=""Application Origin Country"" [editable]=""false"" sortable=true&gt;&lt;/p-column&gt;&#xA;        &lt;p-column field=""passportCountry"" header=""Passport Country"" [editable]=""false"" sortable=true&gt;&lt;/p-column&gt;&#xA;        &lt;p-column field=""requestOwner"" header=""Request Owner"" [editable]=""true"" sortable=true&gt;&lt;/p-column&gt;&#xA;        &lt;p-column field=""requestStatus"" header=""Request Status"" [editable]=""true"" sortable=true&gt;&lt;/p-column&gt;&#xA;        &lt;p-column field=""requestCloseTime"" header=""Request Close Time"" [editable]=""false"" sortable=true&gt;&lt;/p-column&gt;&#xA;    &lt;/p-dataTable&gt;&#xA;&lt;/div&gt;&#xA;</code></pre>&#xA;&#xA;<p>Please help, as I am about to flip my lid with how annoying this problem is - I have tried a bunch of variations but I cannot get it to work.</p>&#xA;&#xA;<p>EDIT:</p>&#xA;&#xA;<p>Bizarrely, records appear in my component if I navigate to another route, come back, and search again i.e. more objects are added to the array. Once two objects are in the array, the data table seems to bind the first record (object 0 in the array).&#xA;<a href=""https://i.stack.imgur.com/QWUBl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QWUBl.png"" alt=""enter image description here""></a><a href=""https://i.stack.imgur.com/NBkm7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NBkm7.png"" alt=""enter image description here""></a></p>&#xA;",2836841,,2836841,2017-08-05 05:22:12,2017-08-05 05:22:12,Cannot Get Array to Bind to PrimeNG Data Table,<arrays><angular><typescript><primeng><apollo>,0,5,0,2017-08-05 05:10:49
45546382,2,,45546283,1,,"<p>You can use the bracket notation</p>&#xA;&#xA;<pre><code>renderHelper(node: MooQuery['wines']['edges'][0]['node']) { // this should work&#xA;  //                                         ^^^ Don't forget the 0 for the array&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Although in your case I'd just edit the type (You generate it only once for starting out, I hope?)</p>&#xA;&#xA;<pre><code>export type MooQuery = {&#xA;  wines:  {&#xA;    edges:  Array&lt;{node: MooNode} | null &gt; | null,&#xA;  } | null,&#xA;};&#xA;&#xA;export type MooNode = {&#xA;    nodeId: string,&#xA;    wineName: string | null,&#xA;    wineryId: number | null,&#xA;    vintageId: number | null,&#xA;    uomId: number | null&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then just <code>MooNode</code></p>&#xA;",871050,,,,2017-08-07 11:58:38,"",,0,2,0,2017-08-07 11:58:38
45713704,1,,,1,42,"<p>I have mock data and GraphQL server setup as shown below</p>&#xA;&#xA;<p>Please guide how to write resolver function with sub type e.g. data kept in JSON (database) as customerId but i want data to be return as Customer type</p>&#xA;&#xA;<p>Thanks</p>&#xA;&#xA;<h3>Mock Order Type JSON Data</h3>&#xA;&#xA;<pre><code>[&#xA;    {&#xA;        ""id"": 1,&#xA;        ""customerId"": 145,&#xA;        ""productIds"": [&#xA;            136,&#xA;            148,&#xA;            102&#xA;        ]&#xA;    }&#xA;]&#xA;</code></pre>&#xA;&#xA;<h3>GraphQL Server</h3>&#xA;&#xA;<pre><code>const express = require('express')&#xA;const fs = require('fs')&#xA;const graphQLHTTP = require('express-graphql')&#xA;const { buildSchema } = require('graphql')&#xA;&#xA;const db = require('./db.json')&#xA;const app = express()&#xA;&#xA;const schema = buildSchema(`&#xA;    type Customer {&#xA;        id: Int&#xA;        firstName: String&#xA;        lastName: String&#xA;    }&#xA;&#xA;    type Product {&#xA;        id: Int&#xA;        productName: String&#xA;    }&#xA;&#xA;    type Order {&#xA;        id: Int&#xA;        customer: Customer&#xA;        products: [Product]&#xA;    }&#xA;&#xA;    type Query {&#xA;        orders: [Order]&#xA;    }&#xA;`)&#xA;&#xA;const resolver = {&#xA;    orders() {&#xA;        return db['orders']&#xA;            .map(order =&gt; {&#xA;                const customer = db['customers'].find(c =&gt; c.id == order.customerId)&#xA;&#xA;                const products = order.productIds&#xA;                    .map(id =&gt; db['products'].find(p =&gt; p.id == id))&#xA;&#xA;                return { ...order, customer, products }&#xA;            })&#xA;    }&#xA;}&#xA;&#xA;app.use(graphQLHTTP({&#xA;    schema,&#xA;    rootValue: resolver,&#xA;    graphiql: true&#xA;}))&#xA;&#xA;app.listen(3000)&#xA;</code></pre>&#xA;",1536973,,,,2017-08-16 12:35:36,Need guide for writing function to resolve root data type with nested sub type,<graphql><graphql-js>,0,0,0,2017-08-16 12:35:36
45797591,2,,45050971,0,,"<p>Though late here is the solution.</p>&#xA;&#xA;<p>In the given code, you have created a graph client, provided your domain and API key. Next, you just have mentioned what all data you need via a query. </p>&#xA;&#xA;<p>Now a call is required to the Shopify endpoint so that you can get the desired data.</p>&#xA;&#xA;<pre><code>QueryGraphCall call_products = graphClient.queryGraph(query);&#xA;&#xA;        call_products.enqueue(new GraphCall.Callback&lt;Storefront.QueryRoot&gt;() {&#xA;            @Override&#xA;            public void onResponse(@NonNull GraphResponse&lt;Storefront.QueryRoot&gt; response) {&#xA;&#xA;                List&lt;Storefront.ProductEdge&gt; list_edge = response.data().getShop().getProducts().getEdges(); //List of products that you have in your store.&#xA;&#xA;                for(int i=0;i&lt;list_edge.size();i++){&#xA;                    Log.d(TAG,""product title: ""+response.data().getShop().getProducts().getEdges().get(i).getNode().getTitle());&#xA;                    Log.d(TAG,""product id: ""+response.data().getShop().getProducts().getEdges().get(i).getNode().getId());&#xA;                    Log.d(TAG,""product description: ""+response.data().getShop().getProducts().getEdges().get(i).getNode().getDescription());&#xA;                }&#xA;            }&#xA;&#xA;            @Override&#xA;            public void onFailure(@NonNull GraphError error) {&#xA;                Log.e(TAG, ""onFailure: "" + error.toString());&#xA;            }&#xA;        });&#xA;</code></pre>&#xA;&#xA;<p>Hope it works :)</p>&#xA;",5130133,,,,2017-08-21 12:49:43,"",,0,1,0,2017-08-21 12:49:43
45830784,2,,45819094,0,,"<p>I recommend that you should use <strong>react starter kit</strong></p>&#xA;&#xA;<p><a href=""https://github.com/kriasoft/react-starter-kit"" rel=""nofollow noreferrer"">https://github.com/kriasoft/react-starter-kit</a></p>&#xA;&#xA;<p>checkout the branch: <strong>feature/apollo</strong></p>&#xA;&#xA;<p>There are both server and client.</p>&#xA;",4637809,,,,2017-08-23 04:42:50,"",,0,1,0,2017-08-23 04:42:50
45852831,1,45933215,,0,1134,"<p>I'm just starting to use GraphQL with Apollo and Vue, so it might be a ""stupid"" question but I can't figure how to do.</p>&#xA;&#xA;<p>How can I do inside the same view, a query to fetch one object, and update it using a mutation</p>&#xA;&#xA;<p>Let's say I have a simple schema</p>&#xA;&#xA;<pre><code>type Product {&#xA;   id: ID!&#xA;   title: String!&#xA;   description: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And a vue component</p>&#xA;&#xA;<pre><code>&lt;script&gt;&#xA;&#xA;  // GraphQL query&#xA;  const ProductQuery = gql `&#xA;    query($id: ID){&#xA;      Product(id: $id) &#xA;      {&#xA;        id&#xA;        title&#xA;        description&#xA;      }&#xA;    }&#xA;  `;&#xA;&#xA;  const UpdateProductQuery = gql `&#xA;    mutation updateProduct($id: ID!, $title: String!, $description: String) {&#xA;      updateProduct(&#xA;        id: $id,&#xA;        title: $title,&#xA;        description: $description,&#xA;      ) {&#xA;        id&#xA;      }&#xA;    }&#xA;  `;&#xA;&#xA;export default {&#xA;    data() {&#xA;      return {&#xA;        Product: {},&#xA;      };&#xA;    },&#xA;    apollo: {&#xA;        Product: {&#xA;            query: ProductQuery,&#xA;            variables() {&#xA;                  id: 1234,&#xA;           };&#xA;        },&#xA;    },&#xA;    methods: {&#xA;        updateProduct() {&#xA;&#xA;          this.$apollo.mutate({&#xA;             mutation: UpdateProductQuery,&#xA;             variables: {&#xA;                id: this.Product.id,&#xA;                title: this.Product.title,&#xA;                description: this.Product.description,&#xA;            },&#xA;          })&#xA;        }&#xA;   }&#xA;};&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;&#xA;<p>Now how am I supposed to write the template part ? Can I link the Product object to a v-model inside an input ?</p>&#xA;&#xA;<pre><code>&lt;template&gt;&#xA;   &lt;section&gt;&#xA;       &lt;input v-model=""product.title""&gt;&lt;/input&gt;&#xA;       &lt;input v-model=""product.description""&gt;&lt;/input&gt;&#xA;      &lt;button @click=""updateProduct""&gt;Update&lt;/button&gt;&#xA;   &lt;/section&gt;&#xA;&lt;/template&gt;&#xA;</code></pre>&#xA;&#xA;<p>Thanks for your help.</p>&#xA;",2285361,,,,2017-08-29 14:05:08,GraphQL vue apollo query and mutation same view,<vue.js><vuejs2><graphql><apollo><vue-apollo>,2,0,0,2017-08-24 04:13:10
45865262,2,,45533730,2,,"<p>I have found 2 solutions:</p>&#xA;&#xA;<p>for a query of:</p>&#xA;&#xA;<pre><code>stores {&#xA; products {&#xA;  totalCount&#xA;  list {&#xA;  }&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>**if you know the exact variables: **</p>&#xA;&#xA;<pre><code>const query = gql(query);&#xA;    const data = apolloClient.readQuery({ query, variables:{limit:100, offset: 0} });&#xA;&#xA;    let removedProduct = _.remove(data.stores.products.list, function(product: IProduct) { return product.id === productId; })&#xA;    data.stores.products.totalCount = data.stores.products.list.length;&#xA;&#xA;    apolloClient.writeQuery({&#xA;        query,&#xA;        variables:{limit:100, offset: 0},&#xA;        data: data&#xA;    });&#xA;</code></pre>&#xA;&#xA;<p><strong>if you want to remove everywhere</strong></p>&#xA;&#xA;<pre><code>let dataStore = apolloClient.store.getState().apollo.data;&#xA;    let productsStore = dataStore[dataStore['ROOT_QUERY'].stores.id];&#xA;    let product = dataStore[productId];&#xA;&#xA;    //remove product from cache index&#xA;    Object.keys(productsStore)&#xA;        .map((key: any) =&gt; dataStore[productsStore[key].id])&#xA;        .forEach((products: any) =&gt; {&#xA;            _.remove(products.list, (product) =&gt; product.id === productId);&#xA;            products.totalCount = products.list.length;&#xA;        });&#xA;&#xA;    //remove product's complex fields (array/objects) from cache&#xA;    Object.keys(product).map((key: any) =&gt; {&#xA;        if (Array.isArray(product[key])) {&#xA;            return product[key].map((item) =&gt; item.id);&#xA;        } else if (typeof product[key] === 'object') {&#xA;            return product[key].id;&#xA;        }&#xA;        return null;&#xA;    }).forEach((productField) =&gt; {&#xA;        if (Array.isArray(productField)) {&#xA;            productField.forEach((key) =&gt; delete dataStore[key]);&#xA;        } else if (productField) {&#xA;            delete dataStore[productField];&#xA;        }&#xA;    });&#xA;&#xA;    //remove product from cache&#xA;    delete dataStore[productId];&#xA;</code></pre>&#xA;",1560178,,,,2017-08-24 15:15:27,"",,0,1,0,2017-08-24 15:15:27
45868684,2,,45864529,1,,"<p>The problem is in your resolver, specifically you are returning the result of <code>result.records.map()</code> from the resolver. <code>map()</code> evaluates to an Array (applying the inner function to each element of <code>result</code> in this case. </p>&#xA;&#xA;<p>Instead you can just grab the first <code>Record</code> in the <code>Result</code> stream:</p>&#xA;&#xA;<pre><code>.then( result =&gt; {&#xA;   return result.records[0].get(""a"").properties&#xA;   }&#xA; )&#xA;</code></pre>&#xA;",2954199,,,,2017-08-24 18:32:19,"",,0,2,0,2017-08-24 18:32:19
45872465,2,,45870184,1,,"<p><code>GraphQLSchemaConfig</code> is defined and exported in the <code>type/schema.d.ts</code> file. The <code>index.d.ts</code> file, though, only re-exports <code>GraphQLSchema</code>. We can work around this by  doing...</p>&#xA;<pre><code> import { GraphQLSchemaConfig } from &quot;graphql/type/schema&quot;;&#xA;</code></pre>&#xA;<p>There are details in the <a href=""https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/graphql"" rel=""nofollow noreferrer"">definitely typed repository graphql directory.</a></p>&#xA;<ul>&#xA;<li><code>index.d.ts</code> contains <code>export * from './type';</code></li>&#xA;<li><code>type/index.d.ts</code> contains <code>export { GraphQLSchema } from './schema';</code></li>&#xA;<li><code>type/schema.d.ts</code> contains <code>export interface GraphQLSchemaConfig { /* ... */ )</code></li>&#xA;</ul>&#xA;<p>It's this last file that we need to reference in order to import <code>GraphQLSchemaConfig</code>.</p>&#xA;",1108891,,-1,2020-06-20 09:12:55,2017-08-25 05:30:49,"",,0,0,0,2017-08-24 23:43:52
45878748,1,45884968,,0,1107,<p>Lets say I have a union type and an interface:</p>&#xA;&#xA;<pre><code>union WidgetType = A | B | C&#xA;interface WidgetInterface {&#xA;    id: ID!&#xA;    name: String!&#xA;    type: WidgetType!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can I define a widget where the type is one of the unions?</p>&#xA;&#xA;<pre><code>type WidgetA implements WidgetInterface {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;    type: ???&#xA;}&#xA;</code></pre>&#xA;,184883,,184883,2017-08-25 13:40:30,2017-08-25 15:38:15,How to use union types with interfaces in graphql,<graphql>,1,2,0,2017-08-25 09:48:20
45884968,2,,45878748,1,,"<p>The type can be the union (<code>type: WidgetType</code>) or the specific type (<code>type: A</code>) -- either one is valid.</p>&#xA;&#xA;<p>Here's a simple example of how that might look like if you're using the union for the type:</p>&#xA;&#xA;<pre><code>import { makeExecutableSchema } from 'graphql-tools';&#xA;&#xA;const typeDefs = `&#xA;  type Query {&#xA;    hello: String&#xA;    widgets: [WidgetInterface]&#xA;  }&#xA;  union WidgetType = A | B | C&#xA;  interface WidgetInterface {&#xA;    id: ID!&#xA;    name: String!&#xA;    type: WidgetType!&#xA;  }&#xA;  type A {&#xA;    foo: String&#xA;  }&#xA;  type B {&#xA;    bar: String&#xA;  }&#xA;  type C {&#xA;    baz: String&#xA;  }&#xA;  type WidgetA implements WidgetInterface {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;    type: WidgetType!&#xA;  }&#xA;`;&#xA;&#xA;const widgets = [&#xA;  {&#xA;    id: 1,&#xA;    name: 'Foo',&#xA;    description: '',&#xA;    type: {&#xA;      baz: 'Baz'&#xA;    }&#xA;  }&#xA;]&#xA;&#xA;const resolvers = {&#xA;  Query: {&#xA;    hello: (root, args, context) =&gt; {&#xA;      return 'Hello world!';&#xA;    },&#xA;    widgets: () =&gt; {&#xA;      return widgets;&#xA;    },&#xA;  },&#xA;  WidgetInterface: {&#xA;    __resolveType: () =&gt; 'WidgetA'&#xA;  },&#xA;  WidgetType: {&#xA;    __resolveType: (obj) =&gt; {&#xA;      if (obj.foo) return 'A'&#xA;      if (obj.bar) return 'B'&#xA;      if (obj.baz) return 'C'&#xA;    }&#xA;  }&#xA;};&#xA;&#xA;export const schema = makeExecutableSchema({&#xA;  typeDefs,&#xA;  resolvers,&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>You can <a href=""https://launchpad.graphql.com/"" rel=""nofollow noreferrer"">copy and paste this into Launchpad</a> to see it in action.</p>&#xA;",6024220,,,,2017-08-25 15:38:15,"",,0,3,0,2017-08-25 15:38:15
45910230,1,,,3,1650,"<p>How can I structure the query parameters a graphQL mutation when one of the fields is an array of objects? When I hard-code the mutation this is valid and works:</p>&#xA;&#xA;<pre><code>mutation{&#xA;  submitResponse(user: ""1234"", responses: [{ answerId: ""wmtBCWtkSeDs5meBe"", selected: false}, { answerId: ""wmtBCWtkSeDs5meBz"", selected: true}]) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I can't for the life of me figure out how to pass in query parameters for the responses array of objects. How can I define the type of each field in the object. This is what it would like for the user id and that works fine but I can't figure out the responses piece of it.</p>&#xA;&#xA;<pre><code>mutation submitResponse($user: ID!){&#xA;  submitResponse(user: $user, responses: [{ answerId: ""wmtBCWtkSeDs5meBe"", selected: false}, { answerId: ""wmtBCWtkSeDs5meBz"", selected: true}]) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Thanks!</p>&#xA;",2232620,,,,2018-03-26 18:42:53,Submit an array of objects as a query variable in graphQL,<graphql><graphql-js>,1,0,0,2017-08-27 23:35:58
45922085,1,,,0,48,"<p>I'm following this tutorial,</p>&#xA;&#xA;<p><a href=""https://dev-blog.apollodata.com/tutorial-building-a-graphql-server-cddaa023c035"" rel=""nofollow noreferrer"">https://dev-blog.apollodata.com/tutorial-building-a-graphql-server-cddaa023c035</a></p>&#xA;&#xA;<p>but my question is not about apollo server, it's just a small part that use javascript object; i'd like to know the theory of javascript, what is this block define inside an object:</p>&#xA;&#xA;<pre><code>author(root, args){&#xA;  return { id: 1, firstName: 'Hello', lastName: 'World' };&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>previous block is in this object, but i don't know the theory about this definition in javascript, what is exactly?</p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;  Query: {&#xA;    author(root, args){&#xA;      return { id: 1, firstName: 'Hello', lastName: 'World' };&#xA;    },&#xA;  },&#xA;  Author: {&#xA;    posts(author){&#xA;      return [&#xA;        { id: 1, title: 'A post', text: 'Some text', views: 2},&#xA;        { id: 2, title: 'Another post', text: 'Some other text', views: 200}&#xA;      ];&#xA;    },&#xA;  },&#xA;  Post: {&#xA;    author(post){&#xA;      return { id: 1, firstName: 'Hello', lastName: 'World' };&#xA;    },&#xA;  },&#xA;};&#xA;&#xA;export default resolvers;&#xA;</code></pre>&#xA;",8055073,,8332700,2017-08-28 15:40:04,2017-08-28 15:40:04,function with parameters inside an object,<javascript><ecmascript-6><apollo-server>,1,2,0,2017-08-28 15:06:00
45950243,2,,45948368,6,,"<p>Your meta field is a type, so you can still use a fragment for it:</p>&#xA;&#xA;<pre><code>const metaFragment = gql`&#xA;  fragment MetaFields on MetaType {&#xA;    total&#xA;    per_page&#xA;    current_page  &#xA;    # other fields    &#xA;  }`&#xA;</code></pre>&#xA;&#xA;<p>It can then be included in your queries as a using template literal place holder syntax:</p>&#xA;&#xA;<pre><code>const usersQuery = gql`&#xA;  query getUsers {&#xA;    users {&#xA;      meta {&#xA;        ...MetaFields&#xA;      }&#xA;      # other fields&#xA;    }&#xA;  }&#xA;  ${metaFragment}&#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>Just make sure the name of the fragment (<code>MetaFields</code> in this example) matches. <strong>Alternatively,</strong> if you have some shared fields that aren't necessarily a fragment and you're bent on staying as DRY as possible, you can just use a plain template literal:</p>&#xA;&#xA;<pre><code>const sharedFields = `&#xA;  bar&#xA;  baz&#xA;  qux&#xA;`&#xA;const usersQuery = gql`&#xA;  query getFoo {&#xA;    foo {&#xA;      ${sharedFields}&#xA;      # other fields&#xA;    }&#xA;  }&#xA;}`&#xA;</code></pre>&#xA;",6024220,,,,2017-08-30 00:43:23,"",,0,1,0,2017-08-30 00:43:23
45957784,1,,,21,22460,"<p>I want to access details from Github using Github GraphQl v4 API. I found <a href=""https://github.com/graphql-python/graphene"" rel=""noreferrer"">Graphene</a> library, but I'm not sure how to authenticate with a personal access token in Python.<br>&#xA;I tried to search on Google but couldn't found any example. It's Python library that can create graphical schema's and are not for consuming them, I tried with `requests' but failed. How can i authenticate and can find list of repositories?</p>&#xA;&#xA;<p>I have used Github GraphQl explorer to find list of repositories via this code:</p>&#xA;&#xA;<pre><code>viewer {&#xA;repositories(first: 30) {&#xA;  totalCount&#xA;  pageInfo {&#xA;    hasNextPage&#xA;    endCursor&#xA;  }&#xA;  edges {&#xA;    node {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6208617,,,,2021-05-28 02:15:53,How to consume the Github GraphQL API using Python?,<python><python-2.7><python-3.x><graphql><graphene-python>,4,0,0,2017-08-30 10:18:00
46013277,2,,45654328,5,,"<p>This is possible using the special meta field <code>__typename</code>, which is available on all Graphql objects and returns the object's Graphql type name. See <a href=""http://graphql.org/learn/queries/#meta-fields"" rel=""noreferrer"">http://graphql.org/learn/queries/#meta-fields</a> for more info.</p>&#xA;&#xA;<p>PS: it looks like <code>__typename</code> is the only meta field that can be called outside of an introspection query.</p>&#xA;&#xA;<p>Used like:</p>&#xA;&#xA;<pre><code>{&#xA;  search(text: ""an"") {&#xA;    __typename&#xA;    ... on Human {&#xA;      name&#xA;    }&#xA;    ... on Droid {&#xA;      name&#xA;    }&#xA;    ... on Starship {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",5490505,,,,2017-09-02 11:24:31,"",,0,0,0,2017-09-02 11:24:31
46022405,1,46027465,,19,11541,"<p>I'm using GitHub API v 4 to learn GraphQL. Here is a broken query to fetch blobs (files) and their text content for a given branch:</p>&#xA;&#xA;<pre><code>query GetTree($branch: String = ""master"") {&#xA;  repository(name: ""blog-content"", owner: ""lzrski"") {&#xA;    branch: ref(qualifiedName: ""refs/heads/${branch}"") {&#xA;      name&#xA;      target {&#xA;        ... on Commit {&#xA;          tree {&#xA;            entries {&#xA;              name&#xA;              object {&#xA;                ... on Blob {&#xA;                  isBinary&#xA;                  text&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As you see on line 3 there is my attempt of guessing interpolation syntax, but it does not work - I leave it as an illustration of my intention.</p>&#xA;&#xA;<p>I could provide a fully qualified name for a revision, but that doesn't seem particularly elegant. Is there any GraphQL native way of manipulating strings?</p>&#xA;",1151982,,,,2017-09-03 20:16:50,GraphQL string concatenation or interpolation,<string><graphql>,1,0,0,2017-09-03 10:19:11
46044150,2,,46043035,3,,"<p><strong>Yes and no.</strong></p>&#xA;&#xA;<p>When you specify the return type for your query (let's call it <code>getProduct</code>), you can only specify one type (or a union or interface... more on that later). That type (<code>Product</code>) will have an immutable list of fields. When you make a request to your server, you will have to identify a subset of those fields to have the server return. With this in mind, it's not possible (at least natively) to send a query have the server return a different subset of fields depending on those arguments.</p>&#xA;&#xA;<p>That said, what you <strong>can</strong> do is define a type that includes all the possible fields, like this:</p>&#xA;&#xA;<pre><code>type Product {&#xA;  id: ID!&#xA;  name: String&#xA;  description: String&#xA;  translations: [Translation!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then within your resolver for <code>getProduct</code>, you can fetch the product from the table and then check whether <code>language</code> was provided as an argument. If it wasn't, fetch the list of translations and set your product's translations property to it. If language was provided, fetch just that translation, use it to populate the name and description properties of the product, and set translations to an empty array.</p>&#xA;&#xA;<p>In this way, depending on whether language is passed in as an argument, your returned Product will contain either A) null for name and description and a populated list of translations; or B) a name and description and an empty array for translations.</p>&#xA;&#xA;<p>There is, IMHO, also a more <em>elegant</em> alternative: <strong>unions and interfaces</strong>.</p>&#xA;&#xA;<p>As before, you'd need to construct your returned object appropriately based on whether the language argument is present. But instead of a type, you return a Union or Interface and then utilize the <code>__resolveType</code> field to return a specific type (each with different fields).</p>&#xA;&#xA;<p>There's two advantages to this approach: One, you avoid returning unnecessary null fields. And two, if you use Apollo as a client, it automatically tacks on a <code>__typename</code> field that you can use on the client-side to easily determine the type that was actually returned by a query.</p>&#xA;&#xA;<p>Here's an example you can plug right into <a href=""https://launchpad.graphql.com/"" rel=""nofollow noreferrer"">Launchpad</a> to play around with:</p>&#xA;&#xA;<pre><code>import { makeExecutableSchema } from 'graphql-tools';&#xA;&#xA;const typeDefs = `&#xA;  type Query {&#xA;    getProduct (id: ID, language: ID):  ProductInterface&#xA;  },&#xA;  type Product  implements ProductInterface {&#xA;    id: ID&#xA;    translations: [Translation!]!&#xA;  },&#xA;  type TranslatedProduct implements ProductInterface {&#xA;    id: ID&#xA;    name: String&#xA;    description: String&#xA;  },&#xA;  type Translation {&#xA;    language: ID&#xA;    name: String&#xA;    description: String&#xA;  },&#xA;  interface ProductInterface {&#xA;    id: ID&#xA;  }&#xA;`;&#xA;&#xA;const products = [&#xA;  {&#xA;    id: '1',&#xA;    translations: [ &#xA;      {&#xA;        language: '100',&#xA;        name: 'Foo',&#xA;        description: 'Foo!'&#xA;      },&#xA;      {&#xA;        language: '200',&#xA;        name: 'Qux',&#xA;        description: 'Qux!'&#xA;      }&#xA;    ]&#xA;  }&#xA;]&#xA;&#xA;const resolvers = {&#xA;  Query: {&#xA;    getProduct: (root, {id, language}, context) =&gt; {&#xA;      const product = products.find(p =&gt; p.id === id)&#xA;      if (language) {&#xA;        product.translation = product.translations.find(t =&gt; t.language === language)&#xA;      }&#xA;      return product&#xA;    },&#xA;  },&#xA;  ProductInterface: {&#xA;    __resolveType: (root) =&gt; {&#xA;      if (root.translation) return 'TranslatedProduct'&#xA;      return 'Product'&#xA;    }&#xA;  },&#xA;  TranslatedProduct: {&#xA;    name: (root) =&gt; root.translation.name,&#xA;    description: (root) =&gt; root.translation.description&#xA;  }&#xA;};&#xA;&#xA;export const schema = makeExecutableSchema({&#xA;  typeDefs,&#xA;  resolvers,&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>You can then request a query like this:</p>&#xA;&#xA;<pre><code>{&#xA;  getProduct (id: ""1"", language: ""200"") {&#xA;    __typename&#xA;    ... on Product {&#xA;      translations {&#xA;        language&#xA;        name&#xA;        description&#xA;      }&#xA;    }&#xA;    ... on TranslatedProduct {&#xA;      name&#xA;      description&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6024220,,,,2017-09-04 21:20:30,"",,0,0,0,2017-09-04 21:20:30
46105076,2,,46076759,1,,"<p>The current default branch for this repository (<code>master</code>) targets <a href=""https://github.com/neo4j-graphql/neo4j-graphql/blob/master/pom.xml#L23"" rel=""nofollow noreferrer"">Neo4j version 3.1.3</a>. For a version of the plugin targeting Neo4j 3.2.x be sure to checkout out the <code>3.2</code> branch of the repo before building:</p>&#xA;&#xA;<pre><code>git fetch&#xA;git checkout 3.2&#xA;mvn clean package &#xA;</code></pre>&#xA;",2954199,,,,2017-09-07 21:04:42,"",,0,3,0,2017-09-07 21:04:42
46133654,1,,,4,386,"<p>I am trying to update an ANTLR grammar that follows the following spec</p>&#xA;&#xA;<p><a href=""https://github.com/facebook/graphql/pull/327/files"" rel=""nofollow noreferrer"">https://github.com/facebook/graphql/pull/327/files</a></p>&#xA;&#xA;<p>In logical terms its defined as</p>&#xA;&#xA;<pre><code>StringValue ::&#xA;   - `""` StringCharacter* `""`&#xA;   - `""""""` MultiLineStringCharacter* `""""""`&#xA;&#xA;StringCharacter ::&#xA;  - SourceCharacter but not `""` or \ or LineTerminator&#xA;  - \u EscapedUnicode&#xA;  - \ EscapedCharacter&#xA;&#xA;MultiLineStringCharacter ::&#xA;  - SourceCharacter but not `""""""` or `\""""""`&#xA;  - `\""""""`&#xA;</code></pre>&#xA;&#xA;<p>(Not the above is logical - not ANTLR syntax) </p>&#xA;&#xA;<p>I tried the follow in ANTRL 4 but it wont recognize more than 1 character inside a triple quoted string</p>&#xA;&#xA;<pre><code>string : triplequotedstring | StringValue ;&#xA;&#xA;triplequotedstring: '""""""' triplequotedstringpart?  '""""""';&#xA;&#xA;triplequotedstringpart : EscapedTripleQuote* | SourceCharacter*;&#xA;&#xA;EscapedTripleQuote : '\\""""""';&#xA;&#xA;SourceCharacter :[\u0009\u000A\u000D\u0020-\uFFFF];&#xA;&#xA;StringValue: '""' (~([""\\\n\r\u2028\u2029])|EscapedChar)* '""';&#xA;</code></pre>&#xA;&#xA;<p>With these rules it will recognize '""""""a""""""' but as soon as I add more characters it fails</p>&#xA;&#xA;<p>eg: '""""""abc""""""' wont parse and the IntelliJ plugin for ANTLR says </p>&#xA;&#xA;<pre><code>line 1:14 extraneous input 'abc' expecting {'""""""', '\\""""""', SourceCharacter}&#xA;</code></pre>&#xA;&#xA;<p>How do I do triple quoted strings in ANTLR with '\""""""' escaping?</p>&#xA;",8585027,,,,2017-09-11 05:04:53,antlr grammar for triple quoted string,<java><antlr><antlr4><graphql><graphql-java>,1,0,0,2017-09-09 18:06:49
46136596,2,,46134158,3,,"<p><code>gql</code> is an example of a <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals"" rel=""nofollow noreferrer"">template tag</a>. From the docs:</p>&#xA;&#xA;<blockquote>&#xA;  <p>A more advanced form of template literals are tagged template&#xA;  literals. Tags allow you to parse template literals with a function.</p>&#xA;</blockquote>&#xA;&#xA;<p>Tags are a new feature introduced with ES6, but their really just functions that take the template literal as a parameter and return something else. The <code>gql</code> tag takes the template literal with your query and parses it into Abstract Syntax Tree (AST) format, which is what the Apollo client uses under the hood.</p>&#xA;",6024220,,,,2017-09-10 01:50:15,"",,0,2,0,2017-09-10 01:50:15
46163036,1,46164403,,37,12713,<p>What is AST in graphql ? I am using graphql-js. How does it help with anything?</p>&#xA;&#xA;<p>Nothing in any documentation seems to explain what AST is</p>&#xA;,2405589,,,,2021-01-21 18:59:17,What is AST in graphql?,<graphql><graphql-js>,1,2,0,2017-09-11 19:23:42
46164403,2,,46163036,61,,"<p>GraphQL is two things:</p>&#xA;<ol>&#xA;<li>A query language</li>&#xA;<li>A Type System</li>&#xA;</ol>&#xA;<p>When a GraphQL server receives a query to process it generally comes in as a single String. This string must be split into meaningful sub-strings (<a href=""https://en.wikipedia.org/wiki/Lexical_analysis#Tokenization"" rel=""noreferrer"">tokenization</a>) and parsed into a representation that the machine understands. This representation is called an abstract syntax tree, or AST.</p>&#xA;<p>When GraphQL Processes the query, it walks the tree executing each part against the schema.</p>&#xA;<p>Converting raw strings to an AST is the first step of every compiler from C++ to Chrome's JavaScript's VM to Babel.</p>&#xA;<p>As for what GraphQL does and how it helps, here is a video that may explain it in a bit more detail.&#xA;<a href=""https://www.youtube.com/watch?v=PmWho45WmQY"" rel=""noreferrer"">https://www.youtube.com/watch?v=PmWho45WmQY</a></p>&#xA;",856873,,856873,2021-01-21 18:59:17,2021-01-21 18:59:17,"",,0,1,0,2017-09-11 21:08:10
46175832,1,46179244,,2,1037,"<p>I'm new to GraphQL and I'm stuck on a rather simple problem which I've yet to find documentation for.</p>&#xA;&#xA;<p>The only thing I'm trying to do is get a list of users from a JSON that have their <code>age</code> key set to <code>31</code>. I can easily get all the users by doing:</p>&#xA;&#xA;<pre><code>{&#xA;  user {&#xA;    name&#xA;    age&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I only want users that are aged 31 and what I think I need to do, which doesn't work, is:</p>&#xA;&#xA;<pre><code>{&#xA;  user(age: 31) {&#xA;    name&#xA;    age&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I just get the same results, so what do I need to do to enable the <code>age: 31</code> ""filter""?</p>&#xA;&#xA;<h2>Schema</h2>&#xA;&#xA;<pre><code>var MyGraphQLSchema = buildSchema(`&#xA;  type Query {&#xA;    user(age: Int): [User]&#xA;  }&#xA;  type User {&#xA;    id: Int&#xA;    name: String&#xA;    age: Int&#xA;  }&#xA;`);&#xA;</code></pre>&#xA;&#xA;<h2>JSON Data</h2>&#xA;&#xA;<pre><code>var root = {&#xA;  ""user"": [&#xA;    {&#xA;      ""id"": 1,&#xA;      ""name"": ""binni"",&#xA;      ""age"": 31&#xA;    },&#xA;    {&#xA;      ""id"": 2,&#xA;      ""name"": ""viddi"",&#xA;      ""age"": 31&#xA;    },&#xA;    {&#xA;      ""id"": 3,&#xA;      ""name"": ""mási"",&#xA;      ""age"": 32&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<h2>GraphQL Server</h2>&#xA;&#xA;<pre><code>graphqlHTTP({&#xA;  schema: MyGraphQLSchema,&#xA;  rootValue: root,&#xA;  graphiql: true&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>I'm using <a href=""https://github.com/graphql/graphql-js"" rel=""nofollow noreferrer"">graphql.js</a> and <a href=""https://github.com/chentsulin/koa-graphql"" rel=""nofollow noreferrer"">koa-graphql</a> (which is similiar to <a href=""https://github.com/graphql/express-graphql"" rel=""nofollow noreferrer"">express-graphql</a>).</p>&#xA;&#xA;<h2>Query Results</h2>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""user"": [&#xA;      {&#xA;        ""name"": ""binni"",&#xA;        ""age"": 31&#xA;      },&#xA;      {&#xA;        ""name"": ""viddi"",&#xA;        ""age"": 31&#xA;      },&#xA;      {&#xA;        ""name"": ""mási"",&#xA;        ""age"": 32&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",473368,,,,2017-09-12 14:36:11,GraphQL filter data by key values (e.g. users age must be 31),<json><graphql><graphql-js>,1,0,0,2017-09-12 12:01:09
46190903,1,46195445,,-2,201,"<p>If I have a model Customer which used to have methods to get the customer balance (i.e. <code>getBalance()</code>), maximum Credit (i.e. <code>maxCredit()</code>), number of Orders (i.e. <code>noOfOrders()</code>), how would you implement such a scenario?</p>&#xA;",7803628,,119775,2017-09-13 07:10:07,2017-09-13 10:44:32,GraphQL multiple queries on model,<javascript><python><graphql>,1,0,0,2017-09-13 07:00:53
46212494,1,,,1,2202,"<p>I'm looking for an example to i18n a graphql-response: I do not want to pass in the language into every query, but I have only found very sparse documentation on how to put the language into the context to have it available for the resolve. </p>&#xA;&#xA;<p>I'm using node and graphql-express, every hint using either this combination or any other is highly appreciated!</p>&#xA;",7199572,,,,2020-06-27 15:50:34,How to i18n an express-graphql-App?,<express><internationalization><graphql>,2,1,0,2017-09-14 06:58:18
46227669,1,46257849,,1,1023,"<p>I'm looking for a way to use the GitHub GraphQL to read repository contents (paths) and then provide a second query to grab the contents of the full path. I started heading down this path for the second query, and it's failing. The former is the more important issue for me right now.</p>&#xA;&#xA;<pre><code>query{&#xA;  viewer {&#xA;    login&#xA;    name&#xA;    repository(name:""myrepo"") {&#xA;      id&#xA;      descriptionHTML&#xA;        object(expression: ""branch:readme.md"") {&#xA;          id&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",21318,,,,2017-09-16 19:47:41,GitHub GraphQL to Read Repository Contents,<github><graphql><github-api><github-graphql>,1,0,0,2017-09-14 20:23:44
46248607,1,46254836,,6,2713,"<p>The v3 has a specific API for retrieving the readme.md file. But in the new V4 GraphQL, there is no such field in the Repository Object. </p>&#xA;&#xA;<p>Does anyone know how to retrieve the readme file?</p>&#xA;&#xA;<p>Thanks!</p>&#xA;",5435999,,,,2021-02-16 20:17:55,How to get Readme.MD from Github Graphql API?,<github><github-api><github-graphql>,2,0,0,2017-09-15 23:25:43
46254836,2,,46248607,14,,"<p>There is not yet a specific entity to get the README.md file, but you can retrieve it as you would normally retrieve any other file:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""gitpoint"", name: ""git-point"") {&#xA;    object(expression: ""master:README.md"") {&#xA;      ... on Blob {&#xA;        text&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",732772,,,,2017-09-16 14:13:58,"",,0,6,0,2017-09-16 14:13:58
46257849,2,,46227669,5,,"<p>You had an extra } in your query, this is why it was failing.&#xA;You also want to replace ""branch"" with the actual branch name (""master"" for example)</p>&#xA;&#xA;<p>Here's a complete example that will also get you the file contents:</p>&#xA;&#xA;<pre><code>{&#xA;  viewer {&#xA;    login&#xA;    name&#xA;    repository(name: ""git-point-playground"") {&#xA;      id&#xA;      descriptionHTML&#xA;      object(expression: ""master:README.md"") {&#xA;        id&#xA;        ... on Blob {&#xA;          text&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",732772,,,,2017-09-16 19:47:41,"",,0,2,0,2017-09-16 19:47:41
46271487,2,,45957784,34,,"<p>Unlike rest, graphql has only one end point. You just need to do a <code>POST</code> with your query as a json object. You should provide your <code>api_token</code> you get from <a href=""https://github.com/blog/1509-personal-api-tokens"" rel=""noreferrer"">github</a> as part of the headers.</p>&#xA;&#xA;<pre><code>import requests&#xA;&#xA;url = 'https://api.github.com/graphql'&#xA;json = { 'query' : '{ viewer { repositories(first: 30) { totalCount pageInfo { hasNextPage endCursor } edges { node { name } } } } }' }&#xA;api_token = ""your api token here...""&#xA;headers = {'Authorization': 'token %s' % api_token}&#xA;&#xA;r = requests.post(url=url, json=json, headers=headers)&#xA;print (r.text)&#xA;</code></pre>&#xA;",2654256,,2654256,2017-09-18 04:55:08,2017-09-18 04:55:08,"",,0,3,0,2017-09-18 04:10:31
46306830,2,,32304486,6,,"<p>I ran into the same problem - I did not know how to specify array of objects in the input definition. So for those who wants to see a ""text"" schema solution:</p>&#xA;&#xA;<pre><code>type Book {&#xA;  title: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>to have an array of Books in your input type</p>&#xA;&#xA;<pre><code>input AuthorInput {&#xA;  name: String!&#xA;  age: Int!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>you can not just add <code>books: [Book!]</code> inside the input statement, you will need deliberately create input type containing needed fields (duplicate if you like):</p>&#xA;&#xA;<pre><code>input BookInput {&#xA;  title: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and then you can:</p>&#xA;&#xA;<pre><code>input AuthorInput {&#xA;  name: String!&#xA;  age: Int!&#xA;  books: [BookInput!]&#xA;}&#xA;</code></pre>&#xA;",1006703,,,,2017-09-19 17:48:21,"",,0,0,0,2017-09-19 17:48:21
46309272,1,46317157,,7,2162,"<p>I want to query using GitHub Graphql api for project contributors, can anyone give me any hints how to make it? Just been trying for some time, and I guess that I am missing some small element. </p>&#xA;&#xA;<p>I'd like to get sth like <a href=""https://api.github.com/repos/facebook/react/contributors?page=15"" rel=""noreferrer"">https://api.github.com/repos/facebook/react/contributors?page=15</a> but only for amount of conttributions </p>&#xA;&#xA;<p>Greetings!</p>&#xA;",7063479,,,,2022-11-23 13:51:30,github graphql query for project contributors,<github><graph><graphql><github-graphql>,3,1,0,2017-09-19 20:28:40
46317157,2,,46309272,2,,"<p>updated: May, 2020.</p>&#xA;&#xA;<p>Github GraphQL API currently don't support getting <code>contributors</code> of a repo.</p>&#xA;&#xA;<p>You can get the <code>collaborators</code> though....</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner: ""peek"", name: ""peek"") {&#xA;    id&#xA;    name&#xA;&#xA;    collaborators(first: 10, affiliation: ALL) {&#xA;      edges {&#xA;        permission&#xA;        node {&#xA;          id&#xA;          login&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;  rateLimit {&#xA;    cost&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You need to have push rights to the repository to view the collaborators.</p>&#xA;",2654256,,2654256,2020-05-01 01:37:42,2020-05-01 01:37:42,"",,0,3,0,2017-09-20 08:36:14
46317804,2,,45382069,29,,"<p><code>Type: CODE</code> is not supported yet. There is no way you can search the code using graphql right now. </p>&#xA;&#xA;<p>Your understanding is right. Just that you are missing one piece. &#xA;The search you are doing is happening against the <code>type: REPOSITORY</code>.&#xA;if you replace your search with</p>&#xA;&#xA;<p><code>search(query: ""beef"", type: REPOSITORY, first: 10) {</code></p>&#xA;&#xA;<p>you will get all the repos having beef in their name.</p>&#xA;",2654256,,2654256,2017-10-01 09:57:51,2017-10-01 09:57:51,"",,0,5,0,2017-09-20 09:08:37
46330060,1,46335485,,0,1566,"<p>I have multiple user nodes (around 45 users) and I want to return the total users count as well as the User's details too in a single query. (Similar to <a href=""https://stackoverflow.com/questions/41434241/how-to-design-the-following-resolver-for-graphql-server"">How to design the following resolver for GraphQL server?</a>)</p>&#xA;&#xA;<p>My schema:</p>&#xA;&#xA;<pre><code>type User {&#xA;    ID: Int&#xA;    name: String&#xA;}&#xA;&#xA;type Query {&#xA;  users: [User]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And after running the resolver for <strong>users</strong> query, I want to pull the total count as well as the users details too like below:</p>&#xA;&#xA;<pre><code>    {&#xA;      ""data"": {&#xA;        ""users"": {&#xA;          ""total"": 45&#xA;          ""users"": [&#xA;            {&#xA;              ""ID"": 1,&#xA;              ""name"": ""User A""&#xA;            },&#xA;            {&#xA;              ""ID"": 2,&#xA;              ""name"": ""User B""&#xA;            },&#xA;            ...&#xA;          ]&#xA;        }&#xA;</code></pre>&#xA;&#xA;<p>But I am confused how to use Promise.all in neo4j. I tried to look how the promise works in neo4j but I did not find any desired info.&#xA;So, could you please let me know how should I write my resolver for this case ? Any help would be appreciable !!</p>&#xA;",3213011,,,,2017-09-21 08:14:25,How to use Promise.all in graphql resolver for neo4j?,<neo4j><apollo-server>,1,0,0,2017-09-20 19:12:56
46366138,1,46367177,,0,480,"<p>In the Apollo Developers documentation there is an example for a valid body of a post request in GraphQL</p>&#xA;&#xA;<pre><code>{&#xA;    ""query"": ""query aTest($arg1: String!) { test(who: $arg1) }""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>From what I have seen in Apollo Server this query would also work with:</p>&#xA;&#xA;<pre><code>{&#xA;    ""query"": ""aTest($arg1: String!) { test(who: $arg1) }""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Could someone please explain why ""query"" appears twice in the first example? What does the GraphQL server interpret from this?</p>&#xA;&#xA;<p>Is the second example a standardised format?</p>&#xA;&#xA;<p>Ref: <a href=""http://dev.apollodata.com/tools/graphql-server/requests.html"" rel=""nofollow noreferrer"">http://dev.apollodata.com/tools/graphql-server/requests.html</a></p>&#xA;",259477,,3857002,2017-09-23 01:04:08,2017-09-23 01:04:08,Can you explain the terminology in a GraphQL POST request,<graphql><graphql-js><apollo>,1,0,0,2017-09-22 13:36:19
46370492,2,,46364232,2,,"<p>This should probably be controlled within the <code>Shop</code> type, to return <code>null</code> when the user does not have the right permissions. Otherwise if a <code>Shop</code> were accessed from a second field, you'd have to duplicate the check.</p>&#xA;",3857002,,,,2017-09-22 17:47:19,"",,0,1,0,2017-09-22 17:47:19
46383219,2,,46383110,2,,"<p>I see it. What is happening here is your code is trying to destructure <code>gql</code> off of the object that is exported out of graphql-tag, but the error is telling you there is no exported member of this name, meaning the exported object doesn't have a method of that name, or there are more than one object exported.</p>&#xA;&#xA;<p>If you were to look in the code for graphql-tag, you would see it probably has a few export objects or it only has one that doesnt have a method called gql, so what you need to do is take <code>gql</code> directly, ie: without destructuring it, ie: without the { }.</p>&#xA;&#xA;<p>This will be correct: <code>import gql from 'graphql-tag'</code></p>&#xA;&#xA;<p>You can see this all the time depending how you export and import things from modules.</p>&#xA;&#xA;<p>Commit to memory that every time you see { something }, it is pulling <code>something</code> off an object.</p>&#xA;&#xA;<p>Here is some sample code to illustrate:</p>&#xA;&#xA;<pre><code>const object = {&#xA;    test: { name = 'Locohost' }&#xA;}&#xA;&#xA;const { name } = object.test&#xA;&#xA;console.log(name)&#xA;</code></pre>&#xA;",6141025,,,,2017-09-23 18:57:08,"",,0,1,0,2017-09-23 18:57:08
46402182,1,,,22,17812,"<p>I'm a newbie for the graphene and I'm trying to map the following structure into a Object Type and having no success at all</p>&#xA;&#xA;<pre><code>    {&#xA;  ""details"": {&#xA;    ""12345"": {&#xA;      ""txt1"": ""9"",&#xA;      ""txt2"": ""0""&#xA;    },&#xA;    ""76788"": {&#xA;      ""txt1"": ""6"",&#xA;      ""txt2"": ""7""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any guidance is highly appreciated<br>&#xA;Thanks</p>&#xA;",2579201,,178800,2018-04-28 02:16:40,2021-12-08 13:25:03,graphene graphql dictionary as a type,<python><graphql><graphene-python>,2,2,0,2017-09-25 09:46:38
46479025,1,,,3,1145,"<p>I'm failing to set a value in this constant:</p>&#xA;&#xA;<pre><code>const targetedMessageTemplate = { &#xA;    ""query"": createTargetedMessage(input: {&#xA;         conversationId: '',&#xA;         targetUserId: '',&#xA;         targetDialogId: '',&#xA;         annotations: [{&#xA;             genericAnnotation: {&#xA;                 title: '',&#xA;                 text: ''&#xA;             }&#xA;         }]&#xA;    }) &#xA;};&#xA;</code></pre>&#xA;&#xA;<p>When calling this:</p>&#xA;&#xA;<pre><code>var test= targetedMessageTemplate;&#xA;&#xA;test.annotations[0].title = 'Test title';&#xA;</code></pre>&#xA;&#xA;<p>Returns:</p>&#xA;&#xA;<pre><code>TypeError: cannot read '0' of undefined.&#xA;</code></pre>&#xA;&#xA;<p>Setting the value of the conversationId variable works fine, however accessing the annotations array seems to be an issue.</p>&#xA;&#xA;<p>Any hint appreciated on what I'm missing is highly appreciated.&#xA;Thank you</p>&#xA;",8692524,,1034105,2017-09-28 22:19:23,2017-09-28 22:34:58,javascript cannot read property '0' of undefined in graphql query,<javascript><undefined><graphql>,1,1,0,2017-09-28 22:09:34
46479134,2,,46479025,1,,<p><strong>genericAnnotation</strong> object key is not written.</p>&#xA;&#xA;<pre><code>test.annotations[0].genericAnnotation.title = 'Test title';&#xA;</code></pre>&#xA;&#xA;<p>But error is different. Are you sure <strong>annotations</strong> isn't an empty array?</p>&#xA;,8574166,,8574166,2017-09-28 22:34:58,2017-09-28 22:34:58,"",,0,2,0,2017-09-28 22:24:04
46486265,1,,,1,115,"<p>i am trying to render a table using react, there are three entities, Criteria(Row), Rating(Col), and explanation (at their intersection).&#xA;Row/col can be added</p>&#xA;&#xA;<p>i am able to render criteria, rating and explanation, but i want to add a /Popover button if the explanation does not exist.</p>&#xA;&#xA;<p>For ex use case </p>&#xA;&#xA;<pre><code>      R1   R2    R3    R+&#xA;C1    E1   E2     &#xA;C2         E3&#xA;C+&#xA;</code></pre>&#xA;&#xA;<p>At all the empty places i want to add a popover to add Explanation.</p>&#xA;&#xA;<p>I am using reactjs, graphql, ant-d, Following is the code for looping</p>&#xA;&#xA;<pre><code>return (&#xA;  &lt;div&gt;&#xA;&#xA;    {&#xA;      &lt;FlexRow&gt;&#xA;        {"" ""}&#xA;        &lt;FlexCol key={""rating.id""} span={24 / (ratings.length + 2)}&gt;&#xA;          &lt;CriteriaRatingBox&gt;&#xA;            &lt;CriteriaRatingTitle&gt;{""index""}&lt;/CriteriaRatingTitle&gt;&#xA;          &lt;/CriteriaRatingBox&gt;&#xA;          {ratings.map((rating, i) =&gt; (&#xA;            &lt;CriteriaRatingBox&gt;&#xA;              &lt;CriteriaRatingTitle&gt;{rating.title}&lt;/CriteriaRatingTitle&gt;&#xA;            &lt;/CriteriaRatingBox&gt;&#xA;          ))}&#xA;          &lt;CriteriaRatingBox&gt;&#xA;            &lt;Popover&#xA;              content={&#xA;                &lt;RubricRatingsForm&#xA;                  requirementId={this.props.requirementContextId}&#xA;                  handleMcAddRubricRating={&#xA;                    this.props.handleMcAddRubricRating&#xA;                  }&#xA;                /&gt;&#xA;              }&#xA;            &gt;&#xA;              &lt;CriteriaRatingTitle&gt;{""+Add Rating""}&lt;/CriteriaRatingTitle&gt;&#xA;            &lt;/Popover&gt;&#xA;          &lt;/CriteriaRatingBox&gt;&#xA;        &lt;/FlexCol&gt;&#xA;      &lt;/FlexRow&gt;&#xA;    }&#xA;    {criteria.map((criteria, i) =&gt; (&#xA;      &lt;FlexRow&gt;&#xA;        &lt;FlexCol key={criteria.id}&gt;&#xA;          &lt;CriteriaBox&gt;{criteria.description}&lt;/CriteriaBox&gt;&#xA;        &lt;/FlexCol&gt;&#xA;&#xA;        {ratings.map((rating, i) =&gt; (&#xA;          &lt;div&gt;&#xA;            &lt;FlexCol key={rating.id} span={24 / ratings.length + 1}&gt;&#xA;              &lt;CriteriaRatingBox&gt;&#xA;                {criteria.explanations.map((explanation, i) =&gt; (&#xA;                  &lt;Popover&#xA;                    content={&#xA;                      &lt;EditRubricExplanationForm&#xA;                        handleEditRubricExplanation={&#xA;                          this.props&#xA;                            .handleMcRequirementEditRubricExplanation&#xA;                        }&#xA;                        rubricExplanation={explanation.description}&#xA;                        rubricExplanationId={explanation.id}&#xA;                        toggleEditRubricExplanationOpen={&#xA;                          this.toggleEditRubricExplanationOpen&#xA;                        }&#xA;                      /&gt;&#xA;                    }&#xA;                  &gt;&#xA;                    &lt;CriteriaExplanation&gt;&#xA;                      {explanation.rating.id === rating.id &amp;&amp;&#xA;                      explanation.criteria.id === criteria.id &amp;&amp; (&#xA;                        &lt;RichTextEditor rawData={explanation.description} /&gt;&#xA;                      )}&#xA;                    &lt;/CriteriaExplanation&gt;&#xA;                  &lt;/Popover&gt;&#xA;                ))}&#xA;              &lt;/CriteriaRatingBox&gt;&#xA;            &lt;/FlexCol&gt;&#xA;          &lt;/div&gt;&#xA;        ))}&#xA;      &lt;/FlexRow&gt;&#xA;    ))}&#xA;&#xA;    &lt;FlexRow&gt;&#xA;      &lt;FlexCol&gt;&#xA;        &lt;Popover&#xA;          content={&#xA;            &lt;RubricCriteriaForm&#xA;              requirementId={this.props.requirementContextId}&#xA;              handleMcAddRubricCriteria={&#xA;                this.props.handleMcAddRubricCriteria&#xA;              }&#xA;            /&gt;&#xA;          }&#xA;        &gt;&#xA;          &lt;CriteriaBox&gt;{""+ Add-Criteria""}&lt;/CriteriaBox&gt;&#xA;        &lt;/Popover&gt;&#xA;      &lt;/FlexCol&gt;&#xA;    &lt;/FlexRow&gt;&#xA;  &lt;/div&gt;&#xA;);&#xA;</code></pre>&#xA;",6875489,,1925257,2017-09-29 10:18:33,2017-09-29 10:18:33,how to create dynamic Row/Col table in reactjs,<reactjs><ecmascript-6><graphql>,0,1,0,2017-09-29 09:51:15
46488163,1,46498835,,6,5498,"<p>I'm trying to fetch Shopify products on the basis of search keyword.</p>&#xA;&#xA;<p>I tested this query by passing hard coded value in the query it works fine but I need to pass variable value so in that case it gives an error that</p>&#xA;&#xA;<blockquote>&#xA;  <p>Grapghql query error searchKeyword is declared but not used.</p>&#xA;</blockquote>&#xA;&#xA;<p>Here is my query to search products on the basis of <code>title</code>, <code>tag</code> and <code>product_type</code>.</p>&#xA;&#xA;<p>Unsuccessful case: </p>&#xA;&#xA;<pre><code>export const searchProductsQuery = gql` query($searchKeyword: String!){&#xA;    shop {&#xA;        products(first: 10, query:""title:'$searchKeyword' OR tag:'$searchKeyword' OR product_type:'$searchKeyword'"") {&#xA;            edges {&#xA;                cursor&#xA;                node {&#xA;                    id&#xA;                    title&#xA;                    handle&#xA;                    description&#xA;                    productType&#xA;                    images(first: 5) {&#xA;                        edges {&#xA;                            node {&#xA;                                id&#xA;                                src&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                    variants(first: 5) {&#xA;                        edges {&#xA;                            node {&#xA;                                id&#xA;                                title&#xA;                                price&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}`;&#xA;</code></pre>&#xA;&#xA;<p>Successful case:</p>&#xA;&#xA;<pre><code>export const searchProductsQuery = gql` query{&#xA;shop {&#xA;     products(first: 10, query:""title:'games' OR tag:'games' OR product_type:'games'"") {&#xA;    ...&#xA;};&#xA;</code></pre>&#xA;",8602911,,354577,2017-09-29 12:33:39,2017-09-30 01:48:28,Graphql query error ! variable is declared but never used,<javascript><react-native><shopify><graphql-js><react-apollo>,1,0,0,2017-09-29 11:47:16
46498143,1,47898239,,6,1717,"<p>I'm wrestling with Github's graphql api (while learning graphql) trying to get it to list all issues in a certain milestone. I can't figure out how to do that from the API docs.</p>&#xA;&#xA;<p>I can query issues and see what milestone they're in (sorry, names redacted):</p>&#xA;&#xA;<pre><code>query {&#xA;    repository(owner:""me"", name:""repo"") {&#xA;        issues(last:10) {&#xA;            nodes {&#xA;                milestone {&#xA;                    id&#xA;                    title&#xA;                }&#xA;            }&#xA;         }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I wish there was a way to say something like <code>issues(milestoneID:""xyz"")</code>, or perhaps if <a href=""https://developer.github.com/v4/reference/object/issue/"" rel=""nofollow noreferrer"">Issue</a> would define a <code>MilestoneConnection</code> (doesn't appear to exist).</p>&#xA;&#xA;<p>In my reading / learning about GraphQL thus far, I haven't found a way to build arbitrary filters of fields if an explicit parameter is not defined in the schema (am I right about that?).</p>&#xA;&#xA;<p>I guess I can query all of issues in the repository and post-process the JSON response to filter out the milestone I want, but is there a better way to do this with github + graphql?</p>&#xA;",4648046,,2614364,2017-11-11 15:00:33,2017-12-20 03:09:39,Github Graphql Filter issues by Milestone,<github><graphql><github-api><github-graphql>,2,0,0,2017-09-29 23:37:24
46498835,2,,46488163,4,,"<p>The variables you define for your operation are just that -- variables. They cannot be used like a template literal placeholder, which is what you are trying to do.</p>&#xA;&#xA;<p>In GraphQL, variables can only be used as input for an argument. For example, <code>query</code> is an argument that takes a (non-null) String. So, we can create a variable like <code>$mySearchQuery</code>, set it to <code>""title:'games' OR tag:'games' OR product_type:'games'""</code> and then use it like this:</p>&#xA;&#xA;<pre><code>products(query:$mySearchQuery)&#xA;</code></pre>&#xA;&#xA;<p>If you have a javascript variable that you want to use as part of <code>$mySearchQuery</code>, you can set the value you pass in for <code>$mySearchQuery</code> inside your javascript code by using a template literal:</p>&#xA;&#xA;<pre><code>const options = {&#xA;  variables: {&#xA;    mySearchQuery: `title:'${keyword}' OR tag:'${keyword}' OR product_type:'${keyword}'`&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You are seeing an error that your variable was declared and never used because it never was -- the references to it inside your query are part of a string and therefore are parsed literally.</p>&#xA;",6024220,,,,2017-09-30 01:48:28,"",,0,1,0,2017-09-30 01:48:28
46519893,1,46618907,,4,2337,"<p>Is it currently possible in Gatsby to build reusable components that have their own graphql query? If not, currently what is the least ""coupled"" way to pass data to reusable components? I can't seem to find any examples that do this and I can't find anything in the documentation.</p>&#xA;&#xA;<p>Say, for example, you want to make a tag cloud component for a blog that would show up in the side bar of all ""post"" pages as well as on a single ""/tag-cloud"" page. You could use like <code>&lt;TagCloud limit={20} /&gt;</code> or <code>&lt;TagCloud tags={uniqueTags} /&gt;</code>. For this, you would need to query all edges, map-reduce/extract each <code>tags</code> array down to a unique, ordered set of unique tag strings. </p>&#xA;&#xA;<p>Or, say you wanted an ""other products"" component for a catalog page that excludes the current product. Here, you might have <code>&lt;ProductsList exclude={currentProduct} /&gt;</code>. This would be a straight-forward filtered query at build-time.</p>&#xA;&#xA;<p>The only way I can see doing this is either to monkey-patch the query results from <code>createPages()</code> or to pass data through <code>context</code> in <code>createPage({path, component, context})</code>. Should this take place in <code>gatsby-node.js</code>? Are there any other ways?</p>&#xA;",279608,,,,2018-01-21 19:55:08,Gatsby reusable components with own query,<javascript><graphql><gatsby>,2,3,0,2017-10-02 05:20:48
46531236,1,,,0,3204,"<p>I am trying to <strong>nest</strong> fragments (no-recursion or unbounded expansion) in my graphql query. But, either the graphql schema doesn't consider my query as valid, or the fragment definition seems redundant. My desired graphql response-structure is:</p>&#xA;&#xA;<pre><code>`&#xA;{  &#xA;    ""data"":{  &#xA;        ""availability"":{  &#xA;            ""mon"":{  &#xA;                ""open"":""5.00 a.m."",&#xA;                ""close"":""10.00 p.m."",&#xA;                ""allday"":false,&#xA;                ""closed"":false&#xA;            },&#xA;            ""tue"":{  &#xA;                ""open"":""5.00 a.m."",&#xA;                ""close"":""10.00 p.m."",&#xA;                ""allday"":false,&#xA;                ""closed"":false&#xA;            },&#xA;            ""wed"":{  &#xA;                ""open"":""5.00 a.m."",&#xA;                ""close"":""10.00 p.m."",&#xA;                ""allday"":false,&#xA;                ""closed"":false&#xA;            },&#xA;            ""thu"":{  &#xA;                ""open"":""5.00 a.m."",&#xA;                ""close"":""10.00 p.m."",&#xA;                ""allday"":false,&#xA;                ""closed"":false&#xA;            },&#xA;            ""fri"":{  &#xA;                ""open"":""5.00 a.m."",&#xA;                ""close"":""10.00 p.m."",&#xA;                ""allday"":false,&#xA;                ""closed"":false&#xA;            },&#xA;            ""sat"":{  &#xA;                ""open"":""5.00 a.m."",&#xA;                ""close"":""10.00 p.m."",&#xA;                ""allday"":false,&#xA;                ""closed"":false&#xA;            },&#xA;            ""sun"":{  &#xA;                ""open"":""5.00 a.m."",&#xA;                ""close"":""10.00 p.m."",&#xA;                ""allday"":false,&#xA;                ""closed"":false&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>where availability has type <strong>Availability</strong> and&#xA;mon, tue, etc. have type <strong>Day</strong></p>&#xA;&#xA;<p>Approach 1: This is not a valid syntax in graphql. graphql throws error (doesn't allow nesting this way)</p>&#xA;&#xA;<pre><code>`&#xA;fragment Hours on Day {&#xA;    open&#xA;    close&#xA;    allday&#xA;    closed&#xA;}&#xA;&#xA;fragment DailyAvailability on Availability {&#xA;    mon &#xA;    tue &#xA;    wed &#xA;    thu &#xA;    fri &#xA;    sat &#xA;    sun&#xA;}&#xA;&#xA;query {&#xA;    availability {&#xA;        ... DailyAvailability {&#xA;            ... Hours&#xA;        }&#xA;    }&#xA;}&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>Approach 2: This works, but seems redundant as I have to spread Hours on each Day separately.</p>&#xA;&#xA;<pre><code>`&#xA;fragment Hours on Day {&#xA;    open&#xA;    close&#xA;    allday&#xA;    closed&#xA;}&#xA;&#xA;fragment DailyAvailability on Availability {&#xA;    mon {... Hours}&#xA;    tue {... Hours}&#xA;    wed {... Hours}&#xA;    thu {... Hours}&#xA;    fri {... Hours}&#xA;    sat {... Hours}&#xA;    sun {... Hours}&#xA;}&#xA;&#xA;query {&#xA;    availability {&#xA;        ... DailyAvailability&#xA;    }&#xA;}&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>Please suggest if there is a way to nest fragments as I intend to do in my first approach.</p>&#xA;",2759694,,6024220,2017-10-03 02:04:14,2017-10-03 08:08:55,Nesting fragments in graphql,<graphql><graphql-js>,1,0,0,2017-10-02 18:10:40
46539937,2,,46531236,1,,"<p>This looks like you want to use field-requests with ""aliases"". Your schema would look something like:</p>&#xA;&#xA;<pre><code>type QueryRoot {&#xA;  availability: Availability&#xA;}&#xA;&#xA;type Availability {&#xA;  openingHours(forDay: WeekDay): Day&#xA;}&#xA;&#xA;enum WeekDay {&#xA;  mon &#xA;  tue &#xA;  wed &#xA;  thu &#xA;  fri &#xA;  sat &#xA;  sun&#xA;}&#xA;&#xA;type Day {&#xA;  open: String&#xA;  close: String&#xA;  allday: Boolean&#xA;  closed: Boolean&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then this query would give you what you asked for:</p>&#xA;&#xA;<pre><code>query q {&#xA;  availability {&#xA;    mon: openingHours(forDay: mon) { ... DailyAvailability }&#xA;    tue: openingHours(forDay: tue) { ... DailyAvailability }&#xA;    wed: openingHours(forDay: wed) { ... DailyAvailability }&#xA;    thu: openingHours(forDay: thu) { ... DailyAvailability }&#xA;    fri: openingHours(forDay: fri) { ... DailyAvailability }&#xA;    sat: openingHours(forDay: sat) { ... DailyAvailability }&#xA;    sun: openingHours(forDay: sun) { ... DailyAvailability }&#xA;  }&#xA;}&#xA;fragment DailyAvailability on Day {&#xA;  open&#xA;  close&#xA;  allday&#xA;  closed&#xA;}&#xA;</code></pre>&#xA;",3857002,,,,2017-10-03 08:08:55,"",,0,0,0,2017-10-03 08:08:55
46546908,1,46553568,,1,378,"<p>The goal I want to achieve is to read and later write <strong>issues</strong> and <strong>labels</strong> within a github repository using javascript.</p>&#xA;&#xA;<p>So far I have been able to get authenticated and retrieve some data on the repository, but I do not find the way to retrieve data neither on one single, nor on a set of issues.</p>&#xA;&#xA;<p>This is the code I am using.</p>&#xA;&#xA;<pre><code>var request = require(""request"");&#xA;&#xA;var url = 'https://api.github.com/graphql';&#xA;var headers = {&#xA;    Authorization:'token XXXXXXXXXXXXXXXXXXXXXXXXXXX',&#xA;    Accept: 'application/json',&#xA;    'User-Agent': 'request',&#xA;    'Content-Type': 'application/json'&#xA;};&#xA;&#xA;var options = {&#xA;  method: 'post',&#xA;  body: undefined,&#xA;  json: true,&#xA;  url: url,&#xA;  headers: headers&#xA;};&#xA;&#xA;&#xA;function makeRequest(options){ &#xA;    request(options, function (error, response, body) {&#xA;      if (error) {&#xA;        console.error('error posting json: ', error);&#xA;        throw error;&#xA;      }&#xA;      var responseHeaders = response.headers;&#xA;      var statusCode = response.statusCode;&#xA;      console.log('Status code: ', statusCode);&#xA;      console.log('Body: ', body);&#xA;    });&#xA;};&#xA;&#xA;options.body = {&#xA;query: '{repository(owner:""TonyEdelweiss"", name:""hello-world"") {createdAt name projectsUrl}}'&#xA;};&#xA;makeRequest(options);&#xA;&#xA;options.body = {&#xA;query: '{repository(owner:""TonyEdelweiss"", name:""hello-world""){issues(first: 2){edges{cursor node{id}}}}}'&#xA;};&#xA;makeRequest(options);&#xA;</code></pre>&#xA;&#xA;<p>On the first makeRequest() I get the following, which is okay:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Status code:  200 Body:  { data:     { repository: &#xA;        { createdAt: '2017-09-29T17:01:25Z',&#xA;          name: 'hello-world',&#xA;          projectsUrl: '<a href=""https://github.com/TonyEdelweiss/hello-world/projects"" rel=""nofollow noreferrer"">https://github.com/TonyEdelweiss/hello-world/projects</a>' } } }</p>&#xA;</blockquote>&#xA;&#xA;<p>On te second one I only get an '[Object]'  )-:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Status code:  200 Body:  { data: { repository: { issues: [Object] } }&#xA;  }</p>&#xA;</blockquote>&#xA;&#xA;<p>Can anybody give a hint?</p>&#xA;&#xA;<p>Also I have found this in github API v4 documentation: ""All GraphQL operations must specify their selections down to fields which return scalar values to ensure an unambiguously shaped response."" This might explain why I am not getting the data, but gives no further guidance.</p>&#xA;",8714250,,,,2017-10-03 21:16:53,How to retrieve multiple issues on github graphql api (using javascript)?,<javascript><api><github><graphql>,1,0,0,2017-10-03 14:23:09
46562561,1,46563788,,46,30168,"<p>Let's say my graphql server wants to fetch the following data as JSON where <code>person3</code> and <code>person5</code> are some id's:</p>&#xA;&#xA;<pre><code>""persons"": {&#xA;  ""person3"": {&#xA;    ""id"": ""person3"",&#xA;    ""name"": ""Mike""&#xA;  },&#xA;  ""person5"": {&#xA;    ""id"": ""person5"",&#xA;    ""name"": ""Lisa""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Question</strong>: How to create the schema type definition with apollo?</p>&#xA;&#xA;<p>The keys <code>person3</code> and <code>person5</code> here are dynamically generated depending on my query (i.e. the <code>area</code> used in the query). So at another time I might get <code>person1</code>, <code>person2</code>, <code>person3</code> returned.&#xA;As you see <code>persons</code> is not an Iterable, so the following won't work as a graphql type definition I did with apollo:</p>&#xA;&#xA;<pre><code>type Person {&#xA;  id: String&#xA;  name: String&#xA;}&#xA;type Query {&#xA;  persons(area: String): [Person]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The keys in the <code>persons</code> object may always be different.</p>&#xA;&#xA;<p>One solution of course would be to transform the incoming JSON data to use an array for <code>persons</code>, but is there no way to work with the data as such?</p>&#xA;",3210677,,3210677,2017-10-04 11:09:47,2021-07-26 01:58:07,Apollo/GraphQL field type for object with dynamic keys,<graphql><apollo><apollo-server>,3,4,0,2017-10-04 10:24:38
46645104,1,46646242,,0,696,"<p>I just started to get into GraphQL. I am using GraphQL.js and express. Right now I am trying to build a simple example using a hardcoded JSON as the data in my javascript file. I then want to use express middleware to listen to HTTP requests via curl or insomnia.  In the middleware I want to extract the query using body-parser. Right now I am having trouble with resolvers. </p>&#xA;&#xA;<p>Please have a look at my code. </p>&#xA;&#xA;<pre><code>var express = require('express');&#xA;var graphqlHTTP = require('express-graphql');&#xA;var { buildSchema, graphql } = require('graphql');&#xA;var bodyParser = require('body-parser');&#xA;&#xA;var schema = buildSchema(`&#xA;  type Product {&#xA;    name: String!&#xA;    price: Int!&#xA;  }&#xA;&#xA;  type Query {&#xA;    product(name: String): Product&#xA;  }&#xA;`);&#xA;&#xA;var products = {&#xA;  'Mango': {&#xA;    name: 'Mango',&#xA;    price: 12,&#xA;  },&#xA;  'Apfel': {&#xA;    name: 'Apfel',&#xA;    price: 3,&#xA;  },&#xA;};&#xA;&#xA;resolvers = {&#xA;  Query: {&#xA;    product: (root, { name}) =&gt; {&#xA;      return products[name];&#xA;    },&#xA;  },&#xA;};&#xA;&#xA;var app = express();&#xA;app.use(bodyParser.text({ type: 'application/graphql' }));&#xA;&#xA;app.post('/graphql', (req, res) =&gt; {&#xA;  graphql(schema, req.body)&#xA;  .then((result) =&gt; {&#xA;    res.send(JSON.stringify(result, null, 2));&#xA;  });&#xA;});&#xA;&#xA;app.listen(4000);&#xA;</code></pre>&#xA;&#xA;<p>This does not work. When I post a query using curl with </p>&#xA;&#xA;<blockquote>&#xA;  <p>curl -XPOST -H ""Content-Type: application/graphql"" -d ""{product(name: \""Apfel\""){name price}}"" <a href=""http://localhost:4000/graphql"" rel=""nofollow noreferrer"">http://localhost:4000/graphql</a></p>&#xA;</blockquote>&#xA;&#xA;<p>I get the response {""data"". {""product"": null}}. The resolver doesn't get called. How can I do this correctly?</p>&#xA;",5508129,,,,2017-10-09 23:36:27,GraphQL. How to write resolver,<express><graphql-js><express-graphql>,2,0,0,2017-10-09 11:13:45
46646242,2,,46645104,1,,"<p>Can you try this?</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>var resolvers = {&#xD;&#xA;&#xD;&#xA;  product: (args) =&gt; {&#xD;&#xA;    return products[args.name];&#xD;&#xA;  },&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;};&#xD;&#xA;app.post('/graphql', (req, res) =&gt; {&#xD;&#xA;  graphql(schema, req.body, resolvers)&#xD;&#xA;    .then((result) =&gt; {&#xD;&#xA;      res.send(JSON.stringify(result, null, 2));&#xD;&#xA;    });&#xD;&#xA;});</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>I think this can solve your issue</p>&#xA;",6414472,,6414472,2017-10-09 12:35:58,2017-10-09 12:35:58,"",,0,0,0,2017-10-09 12:15:59
46669560,1,46683303,,13,5185,"<p>I want to use the GraphQL Github API to recursively list all files contained in the directory. Right now my query looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;  search(first:1, type: REPOSITORY, query: ""language:C"") {&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          name&#xA;          descriptionHTML&#xA;          stargazers {&#xA;            totalCount&#xA;          }&#xA;          forks {&#xA;            totalCount&#xA;          }&#xA;          object(expression: ""master:"") {&#xA;            ... on Tree {&#xA;              entries {&#xA;                name&#xA;                type&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, this only gives me only the first level of directory contents, in particular some of the resulting objects are again trees. Is there a way to adjust the query, such that it recursively list the contents of tree again?</p>&#xA;",4102371,,2125837,2018-03-18 13:11:08,2020-04-17 18:04:58,Github GraphQL to recursively list all files in the directory,<github><graphql><github-api>,3,1,0,2017-10-10 14:41:44
46683303,2,,46669560,11,,"<p>There is no way to recursively iterate in GraphQL. However, you can do so programmatically using a query variable:</p>&#xA;&#xA;<pre><code>query TestQuery($branch: GitObjectID) {&#xA; search(first: 1, type: REPOSITORY, query: ""language:C"") {&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          object(expression: ""master:"", oid: $branch) {&#xA;            ... on Tree {&#xA;              entries {&#xA;                oid&#xA;                name&#xA;                type&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Start with a value of <code>null</code> and go from there.</p>&#xA;",1456997,,,,2017-10-11 08:23:54,"",,0,0,0,2017-10-11 08:23:54
46697150,1,,,2,1436,"<p>I'm attempting to read some data out of GitHub with their v4 (GraphQL) API. I've written a Java client that is working fine up until I start replacing some of the query with GraphQL fragments.</p>&#xA;&#xA;<p>I was using GraphiQL to initially test my queries, and adding fragments was pretty simple in there. However, when translating to JSON, I haven't figured out the correct format. I've tried:</p>&#xA;&#xA;<p><code>{ ""query"": ""{ ... body_of_query ... } fragment fragname on Blob { byteSize text }"" }</code></p>&#xA;&#xA;<p><code>{ ""query"": ""{ ... body_of_query ... }, fragment fragname on Blob { byteSize text }"" }</code></p>&#xA;&#xA;<p><code>{ ""query"": ""{ ... body_of_query ... }"", ""fragment"": ""{fragname on Blob { byteSize text } }"" }</code></p>&#xA;&#xA;<p>EDIT: Adding for @Scriptonomy:</p>&#xA;&#xA;<pre><code>{&#xA; query {&#xA;   search(first:3, type: REPOSITORY, query: \""language:HCL\"") {&#xA;     edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          name&#xA;          descriptionHTML&#xA;          object(expression: \""master:\"") {&#xA;            ... on Tree {&#xA;              ...recurseTree&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;      cursor&#xA;    }&#xA;    pageInfo {&#xA;      endCursor&#xA;      hasNextPage&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;fragment recurseTree on Tree {&#xA;  entries {&#xA;    name&#xA;    type&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm <em>sure</em> it would be fun and all to keep throwing random variations on this, and my morning has been huge fun searching various GraphQL docs and blogs on fragments, and I may have even actually guessed the correct answer but had mismatched parens (I'm just using hardcoded JSON until I know the format -- perhaps not the wisest choice looking back on it).</p>&#xA;&#xA;<p>I'm hoping that someone may know the correct format and set me on the correct course before I keel over from GraphQL-doc over-exposure.</p>&#xA;",683340,,1176596,2017-10-12 21:35:00,2019-05-15 07:29:50,GraphQL fragment JSON format,<graphql>,3,1,0,2017-10-11 20:39:43
46701027,2,,46697150,0,,"<p>There is no need to translate GraphQL Query to JSON. This would be your query:</p>&#xA;&#xA;<pre><code>""{ query { ... body_of_query ... } fragment fragname on Blob { byteSize text } }""&#xA;</code></pre>&#xA;",1456997,,,,2017-10-12 03:40:28,"",,0,1,0,2017-10-12 03:40:28
46718844,1,46719402,,2,623,"<p>I am trying to send queries to a Shopify site using the Storefront API provided. The API in question requires I use GraphQL, which is just JSON POSTed to a url endpoint. Given a query like this:</p>&#xA;&#xA;<pre><code>query {&#xA;  shop{&#xA;    products(first: 2) {&#xA;      edges {&#xA;        node {&#xA;          variants(first: 2) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How do I form the proper JSON such that the site responds appropriately? </p>&#xA;",6945953,,,,2017-10-12 21:55:12,How to configure JSON for graphql query?,<python><json><python-3.x><shopify><graphql>,1,0,0,2017-10-12 21:03:14
46719327,2,,46697150,2,,"<p>Fragments are sent in the same property of the JSON body as the query itself. You can see an example for using fragments <a href=""https://www.graph.cool/docs/faq/using-graphql-fragments-cae2ahz0ne/"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;&#xA;<p>A valid GraphQL request is usually either a GET request that encodes the query as URL query parameter, or a POST request with a JSON body. The JSON body has one required key, <code>query</code> and one optional field, <code>variables</code>. In your case, the JSON needs to look like this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""query"": ""{\n query {\n   search(first:3, type: REPOSITORY, query: \""language:HCL\"") {\n     edges {\n      node {\n        ... on Repository {\n          name\n          descriptionHTML\n          object(expression: \""master:\"") {\n            ... on Tree {\n              ...recurseTree\n            }\n          }\n        }\n      }\n      cursor\n    }\n    pageInfo {\n      endCursor\n      hasNextPage\n    }\n  }\n}\n\nfragment recurseTree on Tree {\n  entries {\n    name\n    type\n  }\n}""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That is the <code>JSON.stringify</code> version of the verbatim query string in your question.</p>&#xA;&#xA;<p>I recommend you to run queries from a GraphiQL instance connected to your GitHub GraphQL API and look into the network request. You can copy the GraphQL request as cuRL to see how the JSON body needs to look like.</p>&#xA;&#xA;<p>If you still obtain a 400, please share some code, because that means your request was malformed, so it probably never hit the GraphQL parser in the first place.</p>&#xA;",1176596,,,,2017-10-12 21:42:43,"",,0,3,0,2017-10-12 21:42:43
46721074,2,,46721015,2,,<p>Looks like you need to change your ajax call to include the full URL.</p>&#xA;&#xA;<p>Change</p>&#xA;&#xA;<pre><code>url: 'localhost:8000/graphql/'&#xA;</code></pre>&#xA;&#xA;<p>To</p>&#xA;&#xA;<pre><code>url: 'http://localhost:8000/graphql/'&#xA;</code></pre>&#xA;,511203,,,,2017-10-13 01:08:53,"",,0,1,0,2017-10-13 01:08:53
46753738,1,,,13,7450,"<p>I wanna query all repositories in my organization on github private, i try to use </p>&#xA;&#xA;<pre><code>query {&#xA;&#xA;  organization(login:""my-org-name"") {&#xA;    id&#xA;    name&#xA;    url&#xA;&#xA;    repositories(first:100) {&#xA;        nodes {&#xA;        id&#xA;        name&#xA;      }&#xA;&#xA;    }&#xA;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However it returns</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""organization"": {&#xA;      ""id"": ""MDEyOk*********************U4ODUw"",&#xA;      ""name"": ""my-org-name"",&#xA;      ""url"": ""https://github.com/my-org-name"",&#xA;      ""repositories"": {&#xA;        ""nodes"": []&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>can't find any repositories. &#xA;I test it on Github Developer, <a href=""https://developer.github.com/v4/explorer/"" rel=""noreferrer"">https://developer.github.com/v4/explorer/</a></p>&#xA;",2083361,,,,2022-01-06 16:21:52,How to use github graphql v4 api to query all repositories in my organization?,<github><graphql>,3,0,0,2017-10-15 09:51:33
46759547,1,,,2,1216,"<p>Apollo <code>graphql-tools</code> now have Schema Stitching, which is great.&#xA;I want to merge multiple endpoints to generate a schema similar to <a href=""https://www.graphqlhub.com/playground?query=%7B%0A%20%20github%20%7B%0A%20%20%20%20repo(ownerUsername%3A%20%22facebook%22%2C%20name%3A%20%22react-native%22)%20%7B%0A%20%20%20%20%20%20name%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20twitter%20%7B%0A%20%20%20%20user(identifier%3A%20name%2C%20identity%3A%20%22brunolemos%22)%20%7B%0A%20%20%20%20%20%20name%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A&amp;variables="" rel=""nofollow noreferrer"">GraphQL Hub</a>, like this:</p>&#xA;&#xA;<p><code>query {&#xA;  github: { ... } # GitHub Schema&#xA;  twitter: { ... } # Twitter Schema&#xA;  myOwnGraphqlSchema: { ... }&#xA;}&#xA;</code></p>&#xA;&#xA;<p>How is the best approach to do that?</p>&#xA;&#xA;<p>GitHub issue: <a href=""https://github.com/apollographql/graphql-tools/issues/439"" rel=""nofollow noreferrer"">https://github.com/apollographql/graphql-tools/issues/439</a></p>&#xA;&#xA;<p>Fork here for testing: <a href=""https://launchpad.graphql.com/3xlrn31pv"" rel=""nofollow noreferrer"">https://launchpad.graphql.com/3xlrn31pv</a></p>&#xA;&#xA;<p>Thank you.</p>&#xA;",2228575,,2228575,2018-05-12 18:17:01,2019-10-04 02:45:43,How to wrap a remote schema in another query field?,<graphql><apollo>,2,0,0,2017-10-15 20:14:29
46809122,1,,,3,3699,"<p>I am using the following graphql to list all products in all collections, I am trying to modify this now to only list products in a single collection, I know the collection ID already but I cannot figure out where to put it in order to filter on the collection ID.</p>&#xA;&#xA;<pre><code>{&#xA;  shop {&#xA;    collections(first: 10) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          description&#xA;          products(first: 250) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;                description&#xA;                variants(first: 10) {&#xA;                  edges {&#xA;                    node {&#xA;                      id&#xA;                      sku&#xA;                      price&#xA;                      selectedOptions {&#xA;                        name&#xA;                        value&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;        cursor&#xA;      }&#xA;      pageInfo {&#xA;        hasNextPage&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",7194276,,7194276,2017-10-18 11:35:08,2021-04-19 13:13:59,shopify storefront api how to list products in a single collection,<shopify><graphql><shopify-app>,2,0,0,2017-10-18 11:28:42
46829721,1,,,0,843,"<p>My goal is to POST mutation to graphQL API within React-app. While doing so I had a bug: <strong>POST <a href=""http://urlhere/graphiql"" rel=""nofollow noreferrer"">http://urlhere/graphiql</a> 405 (Method Not Allowed)</strong>&#xA;My function to send data:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>getRating = (e, id) =&gt; {&#xD;&#xA;        e.preventDefault();&#xD;&#xA;        let value = 2;&#xD;&#xA;            const uri = '//hereIputAddress/graphiql';&#xD;&#xA;    &#xD;&#xA;            const query = `&#xD;&#xA;            mutation{&#xD;&#xA;                rating(group_id: 3, product_id: $product_id, value: $value, name: $name, phone: $phone, email: $email, content:$content) {&#xD;&#xA;                product_id,&#xD;&#xA;                value,&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            `;&#xD;&#xA;&#xD;&#xA;            const variables = {&#xD;&#xA;                product_id: id,&#xD;&#xA;                value: value,&#xD;&#xA;                name: ""wq"",&#xD;&#xA;                phone: ""601654654"",&#xD;&#xA;                email: ""goto@gmail.com"",&#xD;&#xA;                content: ""some content""&#xD;&#xA;            };&#xD;&#xA;&#xD;&#xA;            const apolloFetch = createApolloFetch({ uri });&#xD;&#xA;            &#xD;&#xA;            apolloFetch.use(({ request, options }, next) =&gt; {&#xD;&#xA;                if (!options.headers) {&#xD;&#xA;                options.headers = {};&#xD;&#xA;                console.log(options.headers);&#xD;&#xA;                }&#xD;&#xA;            &#xD;&#xA;                next();&#xD;&#xA;            });&#xD;&#xA;            &#xD;&#xA;            apolloFetch({ query, variables }).then(res =&gt;{&#xD;&#xA;&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;    }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>After some searching I realized it may be caused be lack of headers, so i changed the code to:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>getRating = (e, id) =&gt; {&#xD;&#xA;        e.preventDefault();&#xD;&#xA;        let value = 2;&#xD;&#xA;            const uri = '//hereIputAddress/graphiql';&#xD;&#xA;    &#xD;&#xA;            const query = `&#xD;&#xA;            mutation{&#xD;&#xA;                rating(group_id: 3, product_id: $product_id, value: $value, name: $name, phone: $phone, email: $email, content:$content) {&#xD;&#xA;                product_id,&#xD;&#xA;                value,&#xD;&#xA;                }&#xD;&#xA;            }&#xD;&#xA;            `;&#xD;&#xA;&#xD;&#xA;            const variables = {&#xD;&#xA;                product_id: id,&#xD;&#xA;                value: value,&#xD;&#xA;                name: ""wq"",&#xD;&#xA;                phone: ""601654654"",&#xD;&#xA;                email: ""goto@gmail.com"",&#xD;&#xA;                content: ""some content""&#xD;&#xA;            };&#xD;&#xA;&#xD;&#xA;            const apolloFetch = createApolloFetch({ uri });&#xD;&#xA;            &#xD;&#xA;            apolloFetch.use(({ request, options }, next) =&gt; {&#xD;&#xA;                if (!options.headers) {&#xD;&#xA;                options.headers = {};&#xD;&#xA;                console.log(options.headers);&#xD;&#xA;                }&#xD;&#xA;&#xD;&#xA;                options.headers['Access-Control-Allow-Credentials'] = 'true';&#xD;&#xA;                options.headers['Access-Control-Allow-Origin'] = 'http://localhost:3000';&#xD;&#xA;                options.headers['Access-Control-Max-Age:1728000`'] = '1728000'; &#xD;&#xA;                options.headers['authorization'] = 'created token';&#xD;&#xA;            &#xD;&#xA;                next();&#xD;&#xA;            });&#xD;&#xA;            &#xD;&#xA;            apolloFetch({ query, variables }).then(res =&gt;{&#xD;&#xA;&#xD;&#xA;            });&#xD;&#xA;        }&#xD;&#xA;    }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>Now I have the error: <code>Failed to execute 'fetch' on 'Window': Invalid name</code></p>&#xA;&#xA;<p>I'm totally new to fetching data so I have completely no idea what is going on. It may be worth noting, that when I tried fetching data with GET from that server I had response: <code>No 'Access-Control-Allow-Origin' header is present on the requested resource</code>. I 'fixed' that with downloading Allow-Cors-Allow-Origin plugin to chrome, however it doesn't seem like the best solution. My function was: </p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const url = 'http://188.116.11.87/graphql?query=%23%20Welcome%20to%20GraphiQL%0A%23%0A%23%20GraphiQL%20is%20an%20in-browser%20IDE%20for%20writing%2C%20validating%2C%20and%0A%23%20testing%20GraphQL%20queries.%0A%23%0A%23%20Type%20queries%20into%20this%20side%20of%20the%20screen%2C%20and%20you%20will%0A%23%20see%20intelligent%20typeaheads%20aware%20of%20the%20current%20GraphQL%20type%20schema%20and%0A%23%20live%20syntax%20and%20validation%20errors%20highlighted%20within%20the%20text.%0A%23%0A%23%20To%20bring%20up%20the%20auto-complete%20at%20any%20point%2C%20just%20press%20Ctrl-Space.%0A%23%0A%23%20Press%20the%20run%20button%20above%2C%20or%20Cmd-Enter%20to%20execute%20the%20query%2C%20and%20the%20result%0A%23%20will%20appear%20in%20the%20pane%20to%20the%20right.%0A%0A%0Aquery%7B%0A%20%20product%7B%0A%20%20%20%20id%0A%20%20%20%20name%0A%20%20%20%20description%0A%20%20%20%20keywords%0A%20%20%20%20is_published%0A%20%20%20%20author%0A%20%20%20%20attributes%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20basket%20%7B%0A%20%20%20%20id%0A%20%20%7D%0A%20%20post%20%7B%0A%20%20%20%20id%0A%20%20%20%20publication_date%0A%20%20%7D%0A%20%23%20last_comments(data%3A%226%22)%0A%20%20%0A%7D%0A%0A'&#xD;&#xA;    return fetch(url).then(function(response){&#xD;&#xA;    console.log(response);&#xD;&#xA;      return response.json();&#xD;&#xA;    }).then((data) =&gt;{//doing stuff with data here&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>Here is what I found in console:&#xA;<a href=""https://s1.postimg.org/2e35egfbbj/Zrzut_ekranu_2017-10-18_o_21.12.33.png"" rel=""nofollow noreferrer"">https://s1.postimg.org/2e35egfbbj/Zrzut_ekranu_2017-10-18_o_21.12.33.png</a></p>&#xA;&#xA;<p><strong>---EDIT---</strong> <br/>&#xA;I tried adding headers this way:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const headers = new Headers()&#xD;&#xA;    headers.append('Access-Control-Allow-Origin', 'http://localhost:3000')&#xD;&#xA;    headers.append('Access-Control-Allow-Credentials', 'true')&#xD;&#xA;    headers.append('Content-Type','application/json');&#xD;&#xA;    //headers.append('Content-Type','text/plain;charset=UTF-8');&#xD;&#xA;&#xD;&#xA;    const url = 'http://myurl/graphql?&#xD;&#xA;    const fetchInit = {&#xD;&#xA;      method: 'GET',&#xD;&#xA;      headers: headers,&#xD;&#xA;      mode: 'cors',&#xD;&#xA;      cache: 'default'&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    return fetch(url, fetchInit)&#xD;&#xA;    .then(function(response){&#xD;&#xA;      return response.json();&#xD;&#xA;    }).then((data) =&gt; {...stuff here}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>However I have bug: <code>Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.</code></p>&#xA;&#xA;<p>However, if I add <code>no-cors</code> mode to <code>fetchInit</code>, I get bug <code>Unexpected end of input</code> at line containing: <code>return response.json();</code></p>&#xA;",8375948,,8375948,2017-10-19 16:14:10,2017-10-20 12:47:08,How do I properly set headers for GET/POST fetch to avoid CORS,<reactjs><webpack><cors><fetch><graphql>,2,0,0,2017-10-19 12:20:40
46909235,1,46944351,,0,556,"<p>I have set up a GraphQL database using GraphQL.js and Express that fetches the data from a hardcoded JSON-Object. My JSON-Object looks like this:</p>&#xA;&#xA;<pre><code>exports.store = {&#xA;""categories"": &#xA; { ... },&#xA;""customers"":&#xA; { ... },&#xA;""vendors"":&#xA; { ... },&#xA;""items"":&#xA; { ... },&#xA;""products"": &#xA; { ... },&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>With multiple entries for every category and subfields for every entry depending on the category. I have written resolvers for all the categories and can for example get the data for a specific customer by id. </p>&#xA;&#xA;<p>What I want to do now is something similiar to a WHERE-Clause in SQL. An entry for products looks like this: </p>&#xA;&#xA;<pre><code>""1"": {&#xA;             ""id"":1,&#xA;             ""name"":""Coconut"",&#xA;             ""category"":{&#xA;                 ""id"":1,&#xA;                 ""name"":""Fruits""&#xA;             },&#xA;             ""vendor"":{&#xA;                 ""id"":32,&#xA;                 ""name"":""Exotic Fruits Company""&#xA;             }&#xA;         },&#xA;</code></pre>&#xA;&#xA;<p>So now I would like to be able to do a query, that gives me all products  that have a certain vendor specified by it's id. Can I somehow reuse the resolvers I have already written for this? Is it even possible to have an argument on a subfield that specified which of it's parents are to be returned?</p>&#xA;",5508129,,3265362,2019-10-22 16:18:41,2019-10-22 16:18:41,"GraphQL.js, Arguments on Subfield",<json><express><graphql><graphql-js>,1,0,0,2017-10-24 11:21:10
46938885,1,,,6,1765,"<p>Our GraphQL server responds to a query with data that includes an array of objects each of which shares the same <code>id</code> and different values for a different key. For instance, we might have an array that looks like:</p>&#xA;&#xA;<pre><code>[&#xA;  { id: 123, name: 'foo', type: 'bar', cost: 5 },&#xA;  { id: 123, name: 'foo', type: 'bar', cost: 6 },&#xA;  { id: 123, name: 'foo', type: 'bar', cost: 7 },&#xA;  { id: 123, name: 'foo', type: 'bar', cost: 8 }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>We can see in the Network tab that the response from the server has the correct data in it. However, by the time it goes through processing by the Apollo Client module the array has been transformed into something that might look like this:</p>&#xA;&#xA;<pre><code>[&#xA;  { id: 123, name: 'foo', type: 'bar', cost: 5 },&#xA;  { id: 123, name: 'foo', type: 'bar', cost: 5 },&#xA;  { id: 123, name: 'foo', type: 'bar', cost: 5 },&#xA;  { id: 123, name: 'foo', type: 'bar', cost: 5 }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>Essentially what we're seeing is that if all of the objects in an array share the same value for <code>id</code> then all objects in the array become copies of the first object in the array.</p>&#xA;&#xA;<p>Is this the intended behavior of Apollo Client? We thought maybe it had something to do with incorrect caching, but we were also wondering if maybe Apollo Client assumed that subsequent array members with the same <code>id</code> were the same object.</p>&#xA;",415258,,,,2022-07-26 08:55:41,Apollo Client replaces an array of objects with the same id and different values with an array of copies of the first object,<javascript><graphql><apollo-client>,4,0,0,2017-10-25 17:45:05
46944351,2,,46909235,1,,"<p>I don't understand what you meant with <code>to have an argument on a subfield that specified which of it's parents are to be returned</code>. </p>&#xA;&#xA;<p>I read you want to have a resolver that returns only products with a specific <code>vendorId</code>, this should work:</p>&#xA;&#xA;<pre><code>type Query {&#xA;  products($vendorId: Int): [Product]&#xA;}&#xA;&#xA;&#xA;const resolvers = {&#xA;  ...&#xA;  products: ({ vendorId }) =&gt; {&#xA;    return store.products.values().filter(product =&gt; product.vendor.id === vendorId);&#xA;  },&#xA;  ...&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Please elaborate if that wasn't the case ;)</p>&#xA;",3076424,,,,2017-10-26 01:16:46,"",,0,1,0,2017-10-26 01:16:46
46981341,2,,46981091,0,,"<p>Ah, figured it out. I neglected to add </p>&#xA;&#xA;<p><code>import sangria.marshalling.json4s.jackson._</code></p>&#xA;&#xA;<p>to the trait defining the route. Adding it does the trick.</p>&#xA;",258869,,,,2017-10-27 18:28:27,"",,0,0,0,2017-10-27 18:28:27
46981941,1,,,0,252,"<p><a href=""https://github.com/zbloss/graphql"" rel=""nofollow noreferrer"">Github Repo</a></p>&#xA;&#xA;<p>I am fetching data from <a href=""http://games.espn.com/ffl/api/v2/boxscore?leagueId=1150587&amp;seasonId=2017&amp;teamId=5&amp;scoringPeriodId=7"" rel=""nofollow noreferrer"">this espn endpoint</a>&#xA;I am also brand new to GraphQL and am not super familiar with fetching nested information.</p>&#xA;&#xA;<p>In the above github repo, I'm currently working in on the ""schema1.js"" file and when I run it the console throws Error: Boxscore.teams field type must be Output Type but got: undefined.</p>&#xA;&#xA;<p>Normally I would post the schema1.js below but it is too large to format correctly.</p>&#xA;&#xA;<p>Any help is appreciated!</p>&#xA;",8806961,,,,2017-10-27 19:35:43,Why is my Graphql project throwing Error: field type must be Output Type but got: undefined,<node.js><express><graphql><graphql-js><apollo>,1,0,0,2017-10-27 19:11:48
46992669,1,46993002,,0,1354,"<p>I have an react-apollo HoC wrapped component and data fetched from github graphql api.</p>&#xA;<p>say our wrapped component props will have data that looks like this:</p>&#xA;<p><a href=""https://i.stack.imgur.com/lZifw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lZifw.png"" alt=""enter image description here"" /></a></p>&#xA;<p>how do I get to edges by desctructuring??</p>&#xA;<p>I know i can get to the <code>search</code> field like this:</p>&#xA;<p><code>({ data: { search }} ) =&gt; &lt;Component data={search.edges} /&gt;</code></p>&#xA;<p>but is something like this possible?</p>&#xA;<p><code>({ data: { search: { edges} }} ) =&gt; &lt;Component data={edges} /&gt;</code></p>&#xA;<p>Thank you!</p>&#xA;",7015414,,-1,2020-06-20 09:12:55,2017-10-28 18:21:28,How can I destructure data props more than 2 levels deeper in a react component,<reactjs><react-native><apollo><react-apollo><apollo-client>,1,0,0,2017-10-28 17:45:33
47050863,2,,46309272,2,,"<p>The Github graphql v4 API does not seem to support contributor nodes unless you have push access to a repo.</p>&#xA;&#xA;<p>I get this error when i try to get a list of a repo's collaborators</p>&#xA;&#xA;<pre><code>""errors"": [&#xA;{&#xA;  ""message"": ""Must have push access to view repository collaborators."",&#xA;  ""type"": ""FORBIDDEN"",&#xA;</code></pre>&#xA;",7015414,,,,2017-11-01 08:29:25,"",,0,0,0,2017-11-01 08:29:25
47062082,1,47063069,,1,30,"<p>I have a mutation defined as such:</p>&#xA;&#xA;<pre><code># POST a new Translation&#xA;    createTranslation(&#xA;      name: String!&#xA;      options: [OptionInput!]!&#xA;    ): Translation&#xA;</code></pre>&#xA;&#xA;<p>From my understanding, using the two quotation marks for <code>[OptionInput!]!</code> <a href=""http://graphql.org/learn/schema/#lists-and-non-null"" rel=""nofollow noreferrer"">means that an array is REQUIRED, and an object of the type OptionInput is also REQUIRED.</a></p>&#xA;&#xA;<p>However, from my client-side, I am able to POST successfully without <em>any</em> objects in the Options array:</p>&#xA;&#xA;<pre><code>const createTranslation = gql`&#xA;  mutation createTranslation(&#xA;    $name: String!,&#xA;    $options: [OptionInput!]!&#xA;  ) {&#xA;    createTranslation(&#xA;      name: $name,&#xA;      options: $options&#xA;    ) {&#xA;      _id&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>Even though I'm expecting validation errors out of the box (sample response):</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""translations"": [&#xA;      {&#xA;        ""_id"": ""59fa1b7a3d4d4805ed6f7539"",&#xA;        ""name"": ""Sample Translation Name!!!"",&#xA;        ""options"": []&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What's the proper way to ensure a subfield that uses an array of objects doesn't contain any null values?</p>&#xA;&#xA;<p>PS: Here's my input OptionInput</p>&#xA;&#xA;<pre><code>input OptionInput {&#xA;    text: String!&#xA;    value: String!&#xA;  }&#xA;</code></pre>&#xA;",3552872,,554021,2017-11-01 19:20:18,2017-11-01 20:23:13,GraphQL POST passes even though parts of required schema are missing,<javascript><ecmascript-6><graphql>,1,0,0,2017-11-01 19:14:14
47088722,1,,,6,347,<p>I would like to find a way to get git diff on a single file on a single commit.&#xA;Now I can use this GitHub RESTful API to search a commit of all files diff.</p>&#xA;&#xA;<pre><code>GET /repos/:owner/:repo/commits/:sha&#xA;</code></pre>&#xA;&#xA;<p>But now I would like to get a single file diff out of a commit. And I searched and found we cannot get a single file diff use GitHub API v3. So I was wondering is there any way we can use graphql API to fix this? Thanks!!</p>&#xA;,6191521,,,,2017-11-03 04:56:10,Github Graphql API Single Commit single diff,<github-api><github-graphql>,0,0,0,2017-11-03 04:56:10
47117158,2,,45122831,0,,"<p>Haven't worked with GraphQL/Apollo myself, but I guess it would hold to the principle of not mutating the data, hence the object not being extensible. What you can do in your mutations is to assign the data to the state like this:</p>&#xA;<pre><code>Vue.set(state, 'comments', payload.data.comments)&#xA;</code></pre>&#xA;<p>This will make sure that the object is initially deep copied and afterwards updated in a Vue friendly way in order to support reactivity. You can read more <a href=""https://v2.vuejs.org/v2/guide/reactivity.html#Change-Detection-Caveats"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;",8876827,,6277151,2022-07-16 04:10:51,2022-07-16 04:10:51,"",,0,0,0,2017-11-05 00:55:29
47129458,1,47898260,,1,44,"<p>Is there a way to query reactions filtering on issue number and user?</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""w3c"", name: ""webcomponents"") {&#xA;    issue(number: 688) {&#xA;      title&#xA;      reactions(last: 100) {    &lt;--- I want to filter on user here&#xA;        edges {&#xA;          node {&#xA;            user {&#xA;              login&#xA;            }&#xA;            content&#xA;            id&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">https://developer.github.com/v4/explorer/</a></p>&#xA;",725866,,,,2017-12-20 03:13:07,Query reactions by issue number and user,<graphql><github-api><github-graphql>,2,0,0,2017-11-06 03:46:03
47193664,2,,45122831,-1,,<p>I've faced the exact same problem.</p>&#xA;&#xA;<p>What I ended up doing is doing a _.cloneDeep before I send the data in to Vue commit.</p>&#xA;,528917,,,,2017-11-09 03:57:37,"",,0,0,0,2017-11-09 03:57:37
47222415,1,,,1,392,"<p>I'm newbie to GraphQL and I've a complicated json object in which I've a random field which I would like to ignore and get it's inner/next level object?</p>&#xA;&#xA;<p>Suppose I've the following json returned by an external api that I'm trying to call and I would like to only extract list of <code>user</code> keys</p>&#xA;&#xA;<pre><code>{&#xA;  ""users"": {  &#xA;       ""123321"": { &lt;!-- is a random number which can be any number --&gt;&#xA;            ""user"": {&#xA;                ""id"": ""123321"",&#xA;                 ""name"": ""Bob""&#xA;                 ...&#xA;             }   &#xA;       },&#xA;      ""456654"": {&#xA;           ""user"": {&#xA;               ""id"": ""456654"",&#xA;               ""name"": ""Foo""&#xA;            }&#xA;      }&#xA;     ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Ideally, when I define a query, I would like to extract and construct a map of all the <code>user</code> objects. If possible, can someone show me how this can be achieved, an example would be appreciated. </p>&#xA;&#xA;<p>Many thanks!</p>&#xA;",1257986,,,,2017-11-10 13:44:05,Is it possible in GraphQL to define an xpath to ignore/skip a random field and extract inner object?,<graphql><graphql-java>,1,0,0,2017-11-10 12:05:54
47224193,2,,47222415,0,,"<p>The way I’ve solved this is to convert that object into an array before handing it off to the resolvers:</p>&#xA;&#xA;<pre><code>const users = {&#xA;  users: [&#xA;    {&#xA;      id: ""123321"",&#xA;      name: ""Bob"",&#xA;    },&#xA;    {&#xA;      id: ""456654"",&#xA;      name: ""Foo"",&#xA;    }&#xA;  ]&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>This allows you to make direct queries:</p>&#xA;&#xA;<pre><code>query {&#xA;  user {&#xA;    id &#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Basically, use JavaScript to change the data into the shape you need so GraphQL doesn’t need to do anything special. </p>&#xA;",463471,,,,2017-11-10 13:44:05,"",,0,0,0,2017-11-10 13:44:05
47226125,2,,47223668,1,,"<p>This should work, I think:</p>&#xA;&#xA;<pre><code>type episode = {. ""id"": string, ""title"": string, ""episode"": string};&#xA;type data = {. ""allEpisodes"": array(episode)};&#xA;&#xA;...&#xA;&#xA;(response) =&gt; {&#xA;  let episodeItems =&#xA;    response##data##allEpisodes&#xA;    |&gt; Array.map((episode) =&gt;&#xA;       &lt;Episode key=episode##id&#xA;                episode=episode##episode /&gt;);&#xA;&#xA;  &lt;div&gt;&#xA;    &lt;h1&gt; (ReasonReact.stringToElement(""Episodes!"")) &lt;/h1&gt;&#xA;    (ReasonReact.arrayToElement(episodeItems))&#xA;  &lt;/div&gt;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Let me know if it doesn't, or if any of this confuses you I'll happily explain.</p>&#xA;&#xA;<p>Edit: You've also typed <code>data##allEpisodes</code> as <code>list(episode)</code> when it's actually <code>array(episode)</code>. Updated the code block above. A <code>list</code> is not the same as an <code>array</code>, the former is a linked list type while the latter is equivalent to a JavaScript array.</p>&#xA;&#xA;<p>Edit 2: Fixed JSX</p>&#xA;",7943564,,7943564,2017-11-10 18:45:11,2017-11-10 18:45:11,"",,0,11,0,2017-11-10 15:26:40
47231290,1,47231979,,10,2122,"<p>I'm trying to get repositories of user with login name ""somelogin"".</p>&#xA;&#xA;<p>It returns all repositories but I'm trying to get repositories owned by him only. Because new API uses GraphQL I couldn't did it.</p>&#xA;&#xA;<p>Currently I'm using:</p>&#xA;&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;   ""query"": ""query { user(login:\""furknyavuz\"") {repositories(first: 50) { nodes { name url }}}}""&#xA;}&#xA;</code></pre>&#xA;",4988996,,4988996,2019-10-27 19:03:01,2021-03-06 10:02:32,Github GraphQL API: How can I gather specific user's repositories?,<rest><github><graphql><github-api><github-graphql>,2,2,0,2017-11-10 21:20:26
47231979,2,,47231290,6,,"<p>You can use <code>isFork: false</code> to exclude fork. In the <a href=""https://developer.github.com/v4/explorer/"" rel=""noreferrer"">explorer</a> : </p>&#xA;&#xA;<pre><code>{&#xA;  user(login: ""furknyavuz"") {&#xA;    repositories(first: 50, isFork: false) {&#xA;      nodes {&#xA;        name&#xA;        url&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>With curl : </p>&#xA;&#xA;<pre><code>curl -H ""Authorization: bearer token"" -d '&#xA; {&#xA;   ""query"": ""query { user(login: \""furknyavuz\"") { repositories(first: 50, isFork: false) { nodes { name url } } } }""&#xA; }&#xA;' https://api.github.com/graphql&#xA;</code></pre>&#xA;",2614364,,,,2017-11-10 22:17:13,"",,0,0,0,2017-11-10 22:17:13
47239735,1,47241186,,1,1062,"<p>When I run the query:</p>&#xA;&#xA;<pre><code>{&#xA;   ""query"": ""{user(login: \""furknyavuz\"") {repositories(first: 50, isPrivate: false) {nodes {name url}}}}""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I getting the following error:</p>&#xA;&#xA;<pre><code>{&#xA;""data"": null,&#xA;""errors"": [&#xA;    {&#xA;        ""message"": ""Field 'repositories' doesn't accept argument 'isPrivate'"",&#xA;        ""locations"": [&#xA;            {&#xA;                ""line"": 1,&#xA;                ""column"": 51&#xA;            }&#xA;        ]&#xA;    }&#xA;]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I can see isPivate is field of Repository object but I'm unable to search with it.</p>&#xA;&#xA;<p>I'm not expecting to search with all fields of the object, but critical question is, how can I see which fields are searchable or indexable?</p>&#xA;",4988996,,,,2017-11-11 18:08:09,Github GraphQL API: How can I find out which fields are searchable?,<rest><github><graphql><github-api><github-graphql>,2,0,0,2017-11-11 15:44:17
47240085,1,47241014,,44,21809,<p>Imagine the following query:</p>&#xA;&#xA;<pre><code>query {&#xA;  user {&#xA;    id&#xA;  }&#xA;  SomeOtherStuff(id: &lt;--- I want to pass the id obtained from user) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How do you pass a parameter obtained from one query to another ?</p>&#xA;,1326271,,1326271,2020-12-11 13:48:20,2021-04-02 15:30:08,Pass obtained field to another (nested) query in GraphQL,<graphql>,3,4,0,2017-11-11 16:20:28
47241186,2,,47239735,3,,"<p><code>isPrivate</code> is a field of <code>Repository</code> object but <a href=""https://developer.github.com/v4/reference/object/user/#repositories"" rel=""nofollow noreferrer""><code>repositories</code></a> inside <a href=""https://developer.github.com/v4/reference/object/user/"" rel=""nofollow noreferrer"">User object</a> is of type <a href=""https://developer.github.com/v4/reference/object/repositoryconnection/"" rel=""nofollow noreferrer"">RepositoryConnection</a> and <a href=""https://developer.github.com/v4/reference/object/user/#repositories"" rel=""nofollow noreferrer""><code>repositories</code></a> connection item has the following argument/type : </p>&#xA;&#xA;<ul>&#xA;<li>affiliations  [RepositoryAffiliation] </li>&#xA;<li>after String  </li>&#xA;<li>before    String  </li>&#xA;<li>first Int </li>&#xA;<li>isFork    Boolean </li>&#xA;<li>isLocked  Boolean </li>&#xA;<li>last  Int </li>&#xA;<li>orderBy   RepositoryOrder </li>&#xA;<li>privacy   RepositoryPrivacy   </li>&#xA;</ul>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/reference/enum/repositoryprivacy/"" rel=""nofollow noreferrer""><code>RepositoryPrivacy</code></a> is an enum with two values : PUBLIC and PRIVATE.</p>&#xA;&#xA;<p>the following request will return private repo : </p>&#xA;&#xA;<pre><code>{&#xA;  user(login: ""furknyavuz"") {&#xA;    repositories(first: 50, privacy:PRIVATE) {&#xA;      nodes {&#xA;        name&#xA;        url&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Note that in <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">the explorer</a>, if you type <kbd>CTRL+space</kbd> you will have the schema listing with types : </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/xWSgv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xWSgv.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Also, <kbd>CTRL+space</kbd> again after "":"" will gives you the enum values :</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/WZlzX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WZlzX.png"" alt=""enter image description here""></a></p>&#xA;",2614364,,,,2017-11-11 18:08:09,"",,0,0,0,2017-11-11 18:08:09
47263641,1,47264353,,0,314,"<p>When I execute the below code in node server. I see an error that graphql-JS cannot resolve the field <strong>""product.productTax.""</strong></p>&#xA;&#xA;<p>Using graphql-express, visual studio code, I was trying to exactly mimic the following code from <a href=""http://graphql.org/graphql-js/object-types/"" rel=""nofollow noreferrer"">http://graphql.org/graphql-js/object-types/</a></p>&#xA;&#xA;<pre><code>&lt;!-- language: lang-js --&gt;&#xA;var express = require('express');&#xA;var graphqlHTTP = require('express-graphql');&#xA;var { buildSchema } = require('graphql');&#xA;&#xA;// Construct a schema, using GraphQL schema language&#xA;var schema = buildSchema(`&#xA;  type Product{&#xA;    product_id: Int!&#xA;    sku: String&#xA;    short_nm: String&#xA;    retl_price: Float!&#xA;    productTax(tax_rate: Float!): [Float!]&#xA;  }&#xA;&#xA;  type Query {&#xA;    getproduct(product_id: Int, sku: String, short_nm: String, retl_price: Float): Product&#xA;  }&#xA;`);&#xA;&#xA;// This class implements the Product GraphQL type&#xA;class Product {&#xA;&#xA;  constructor(product_id, sku, short_nm, retl_price) {&#xA;    this.product_id = product_id;&#xA;    this.sku = sku;&#xA;    this.short_nm = short_nm;&#xA;    this.retl_price = retl_price;&#xA;  }&#xA;&#xA;  productTax({tax_rate}){&#xA;    return this.retl_price * tax_rate / 100;&#xA;  }&#xA;&#xA;}&#xA;&#xA;// The root provides the top-level API endpoints&#xA;var root = {&#xA;  getproduct: function ({product_id, sku, short_nm, retl_price}) {&#xA;    return new Product(product_id, sku, short_nm, retl_price);&#xA;  }&#xA;}&#xA;&#xA;var app = express();&#xA;app.use('/graphql', graphqlHTTP({&#xA;  schema: schema,&#xA;  rootValue: root,&#xA;  graphiql: true,&#xA;}));&#xA;app.listen(4000);&#xA;console.log('Running a GraphQL API server at localhost:4000/graphql');&#xA;</code></pre>&#xA;&#xA;<p><strong>Response</strong>&#xA;<a href=""https://i.stack.imgur.com/dZIGd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/dZIGd.png"" alt=""Graphiql Response""></a></p>&#xA;",608252,,,,2017-11-13 12:55:11,graphql-JS Express cannot resolve a field,<javascript><node.js><graphql><express-graphql>,1,0,0,2017-11-13 11:49:10
47266238,1,47284619,,8,3392,"<p>My schema file is</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;createCustomer(name: String!, email: String!, product: [Product]): Customer&#xA;}&#xA;&#xA;input Product {&#xA;    id: ID!&#xA;    name: String!&#xA;    price: Int&#xA;}&#xA;&#xA;interface Person {&#xA;    id: ID!&#xA;    name: String!&#xA;    email: String!&#xA;}&#xA;&#xA;type Customer implements Person {&#xA;    id: ID!&#xA;    name: String!&#xA;    email: String!&#xA;    product: [Product] &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to insert customer detail here which has product list as input. My query is</p>&#xA;&#xA;<pre><code>mutation {&#xA;  createCustomer(&#xA;    name: ""kitte"", &#xA;    email: ""kitte@gmail.com"",&#xA;    product: [&#xA;      {&#xA;         name: ""soap"", &#xA;             price: 435,&#xA;      }&#xA;    ]&#xA;  ) &#xA;  {&#xA;    id&#xA;    name&#xA;    email&#xA;    product{name}&#xA;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I am getting exception</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": null,&#xA;  ""errors"": [&#xA;    {&#xA;      ""validationErrorType"": ""WrongType"",&#xA;      ""message"": ""Validation error of type WrongType: argument value ArrayValue{values=[ObjectValue{objectFields=[ObjectField{name='name', value=StringValue{value='dars76788hi'}}, ObjectField{name='price', value=IntValue{value=123}}]}, ObjectValue{objectFields=[ObjectField{name='name', value=StringValue{value='darr'}}, ObjectField{name='price', value=IntValue{value=145}}]}]} has wrong type"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 5,&#xA;          ""column"": 5&#xA;        }&#xA;      ],&#xA;      ""errorType"": ""ValidationError""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I don't understand what is the error. And how to pass list to mutation. I have referred some examples but not able to insert product as list.</p>&#xA;",4746251,,4746251,2017-11-14 09:07:21,2017-11-14 11:33:29,Graphql with mutation spring boot,<spring-boot><graphql>,1,2,0,2017-11-13 14:08:41
47284619,2,,47266238,7,,"<p>Make sure you are passing the right type of objects to your mutation. GraphQL needs separate types for input fields. In your schema, Product types should be something like this and you should change the mutation accordingly.</p>&#xA;&#xA;<pre><code>type Product {&#xA;    id: ID!&#xA;    name: String!&#xA;    price: Int&#xA;}&#xA;&#xA;input ProductInput {&#xA;    name: String!&#xA;    price: Int&#xA;}&#xA;&#xA;input CustomerInput {&#xA;    ...&#xA;    products: [ProductInput]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>There are couple of very useful examples in the docs, see <a href=""http://graphql.org/graphql-js/mutations-and-input-types/"" rel=""noreferrer"">Mutations and Input Types</a></p>&#xA;",2707017,,2707017,2017-11-14 11:33:29,2017-11-14 11:33:29,"",,0,5,0,2017-11-14 11:27:49
47331391,1,47480484,,12,4685,"<p><strong>Overview</strong> (simplified):</p>&#xA;&#xA;<p>In my NodeJS server I've implemented the following GraphQL schema:</p>&#xA;&#xA;<pre><code>type Item {&#xA;  name: String,&#xA;  value: Float&#xA;}&#xA;&#xA;&#xA;type Query {&#xA;  items(names: [String]!): [Item]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The client query then passes an array of names, as an argument:</p>&#xA;&#xA;<pre><code>{&#xA;  items(names: [""total"",""active""] ) {&#xA;    name&#xA;    value&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The backend API queries a mysql DB, for the ""<strong>total</strong>"" and ""<strong>active</strong>"" fields (columns on my DB table) and reduces the response like so:</p>&#xA;&#xA;<pre><code>[{""name"":""total"" , value:100} , {""name"":""active"" , value:50}]&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>I would like my graphQL API to support ""ratio"" Item, I.E: I would like to send the following query:  </p>&#xA;&#xA;<pre><code>{&#xA;  items(names: [""ratio""] ) {&#xA;    name&#xA;    value&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>or</p>&#xA;&#xA;<pre><code>{&#xA;  items(names: [""total"",""active"",""ratio""] ) {&#xA;    name&#xA;    value&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And return <strong>active / total</strong> as the calculated result of that new field (<code>[{""name"":""ratio"" , value:0.5}]</code>). What would be a generic way to handle the ""<strong>ratio</strong>"" field differently?  </p>&#xA;&#xA;<p>Should it be a new type in my schema or should I implement the logic in the reducer?</p>&#xA;",1115237,,1115237,2017-11-16 18:47:10,2017-11-24 22:29:11,GraphQL - return calculated type dependent on argument,<mysql><node.js><schema><graphql><reducers>,2,7,0,2017-11-16 13:50:14
47443858,1,,,17,10893,"<p>I am using the latest version of Apollo Client in a simple React app and I am trying to pull out a header value from the response that is being used to show the size of the record set being returned.</p>&#xA;&#xA;<p>I appreciate that this is not the most elegant way of providing the result set size, but that is how the API has currently been set up.</p>&#xA;&#xA;<p>I was hoping to use the the middleware type options to do this, but when I inspect the response object I can't seem to pull out any headers.</p>&#xA;&#xA;<p>The network trace does show that the response header is as expected so I suspect I am misunderstanding how to get at the underlying objects that I need.</p>&#xA;&#xA;<p>I have checked the documentation, but nothing stands out as obvious hence the question here ...</p>&#xA;",5144392,,5144392,2017-11-22 21:59:48,2022-02-15 13:29:00,Apollo Link response headers,<apollo-client>,2,0,0,2017-11-22 21:04:34
47445549,1,47487541,,0,182,"<p>I'm studying about GraphQL and I would like to understand how GraphlQL will perform a query lie:</p>&#xA;&#xA;<pre><code>  poc (id: $id) {&#xA;    tradingName&#xA;    id&#xA;    products{&#xA;      id&#xA;      title&#xA;      imageUrl&#xA;      productVariants {&#xA;        title &#xA;      }&#xA;      images{&#xA;         url&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>On <code>resolve_all_products</code> i will query only products for id.&#xA;e.g. <code>select * from products where poc_id=10</code></p>&#xA;&#xA;<p>On the <code>resolve_product_variants</code> node i will query for all product variants with a specific product id.&#xA;e.g. <code>select * from product_variants where product_id=X</code></p>&#xA;&#xA;<p>Now imagine that I have 20 products and each of them has 2 product variants.&#xA;So I will make one query to get all products (20) and then 20 more. Each of them will get all product variants (2) from a specific product.</p>&#xA;&#xA;<p>So instead of a single join query, I will do 21 queries. Am I right?&#xA;Is there anyway to prevent this?</p>&#xA;",312444,,,,2017-11-25 15:24:14,GraphQL - Overloading database?,<graphql><graphql-js>,1,0,0,2017-11-22 23:50:36
47458143,1,47478877,,4,818,"<p>I want to make some data researches and want to download repositories content from the search results with Github GraphQL API. </p>&#xA;&#xA;<p>What I already found is how to make simple search query, but the question is:&#xA;<strong>How to download repositories content from the search results?</strong></p>&#xA;&#xA;<p>Here is my current code that returns repositories name and description (<a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">try to run here</a>):</p>&#xA;&#xA;<pre><code>{&#xA;  search(query: ""example"", type: REPOSITORY, first: 20) {&#xA;    repositoryCount&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          name&#xA;          descriptionHTML&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",5922857,,5922857,2017-11-23 14:56:06,2019-11-07 12:37:34,How to download Github repositories via GraphQL API search?,<git><api><github><graphql><github-api>,2,0,0,2017-11-23 14:47:28
47478877,2,,47458143,10,,"<p>You can get the tarball/zipball url for the latest commit on the default branch of a repo with the following : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner: ""google"", name: ""gson"") {&#xA;&#xA;    defaultBranchRef {&#xA;      target {&#xA;        ... on Commit {&#xA;          tarballUrl&#xA;          zipballUrl&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Using a search query, you can use the following : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  search(query: ""example"", type: REPOSITORY, first: 20) {&#xA;    repositoryCount&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          defaultBranchRef {&#xA;            target {&#xA;              ... on Commit {&#xA;                zipballUrl&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>A script that download all zip of that search using <a href=""/questions/tagged/curl"" class=""post-tag"" title=""show questions tagged &#39;curl&#39;"" rel=""tag"">curl</a>,<a href=""/questions/tagged/jq"" class=""post-tag"" title=""show questions tagged &#39;jq&#39;"" rel=""tag"">jq</a> &amp; <a href=""/questions/tagged/xargs"" class=""post-tag"" title=""show questions tagged &#39;xargs&#39;"" rel=""tag"">xargs</a>  : </p>&#xA;&#xA;<pre class=""lang-bash prettyprint-override""><code>curl -s -H ""Authorization: bearer YOUR_TOKEN"" -d '&#xA;{&#xA;    ""query"": ""query { search(query: \""example\"", type: REPOSITORY, first: 20) { repositoryCount edges { node { ... on Repository { defaultBranchRef { target { ... on Commit { zipballUrl } }}}}}}}""&#xA;}&#xA;' https://api.github.com/graphql | jq -r '.data.search.edges[].node.defaultBranchRef.target.zipballUrl' | xargs -I{} curl -O {}&#xA;</code></pre>&#xA;",2614364,,,,2017-11-24 19:08:24,"",,0,1,0,2017-11-24 19:08:24
47480484,2,,47331391,5,,"<p>Joe's answer (append <code>{""name"":""ratio"" , value:data.active/data.total}</code> to the result once the result is fetched from database) would do it without making any schema changes.</p>&#xA;&#xA;<p>As an alternative method or as a more elegant way to do it in GraphQL, the field names can be specified in the type itself instead of passing them as arguments. And compute <code>ratio</code> by writing a resolver.</p>&#xA;&#xA;<p>So, the GraphQL schema would be:</p>&#xA;&#xA;<pre><code>Item {&#xA;  total: Int,&#xA;  active: Int,&#xA;  ratio: Float&#xA;}&#xA;&#xA;type Query {&#xA;  items: [Item]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The client specifies the fields:</p>&#xA;&#xA;<pre><code>{&#xA;  items {&#xA;    total &#xA;    active &#xA;    ratio&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And <code>ratio</code> can be calculated inside the resolver.</p>&#xA;&#xA;<p>Here is the code:</p>&#xA;&#xA;<pre><code>const express = require('express');&#xA;const graphqlHTTP = require('express-graphql');&#xA;const { graphql } = require('graphql');&#xA;const { makeExecutableSchema } = require('graphql-tools');&#xA;const getFieldNames = require('graphql-list-fields');&#xA;&#xA;const typeDefs = `&#xA;type Item {&#xA;  total: Int,&#xA;  active: Int,&#xA;  ratio: Float&#xA;}&#xA;&#xA;type Query {&#xA;  items: [Item]&#xA;}&#xA;`;&#xA;&#xA;const resolvers = {&#xA;  Query: {&#xA;    items(obj, args, context, info) {&#xA;      const fields = getFieldNames(info) // get the array of field names specified by the client&#xA;      return context.db.getItems(fields)&#xA;    }&#xA;  },&#xA;  Item: {&#xA;    ratio: (obj) =&gt; obj.active / obj.total // resolver for finding ratio&#xA;  }&#xA;};&#xA;&#xA;const schema = makeExecutableSchema({ typeDefs, resolvers });&#xA;&#xA;const db = {&#xA;  getItems: (fields) =&gt; // table.select(fields)&#xA;    [{total: 10, active: 5},{total: 5, active: 5},{total: 15, active: 5}] // dummy data&#xA;}&#xA;graphql(&#xA;  schema, &#xA;  `query{&#xA;    items{&#xA;      total,&#xA;      active,&#xA;      ratio&#xA;    }&#xA;  }`, &#xA;  {}, // rootValue&#xA;  { db } // context&#xA;).then(data =&gt; console.log(JSON.stringify(data)))&#xA;</code></pre>&#xA;",1421222,,1421222,2017-11-24 22:29:11,2017-11-24 22:29:11,"",,0,2,0,2017-11-24 21:58:29
47487541,2,,47445549,2,,"<p>Yes, you're right. It will be doing 21 queries. This is called N+1 query problem. </p>&#xA;&#xA;<p><a href=""https://github.com/facebook/dataloader"" rel=""nofollow noreferrer"">DataLoader</a> can be used to optimise this.</p>&#xA;&#xA;<p>First define a DataLoader</p>&#xA;&#xA;<pre><code>const DataLoader = require('dataloader');&#xA;const productVariantsLoader = new DataLoader((productIds) =&gt; // productIds will be an array of product ids&#xA;  sql.table.query(`select * from product_variants where product_id in $productIds`)&#xA;)&#xA;</code></pre>&#xA;&#xA;<p>Then in the resolver for <code>productVariants</code>, </p>&#xA;&#xA;<pre><code>function productVariants(product) { // Resolver for productVariants&#xA;  return productVariantsLoader.load(product.id)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That’s it. Now productVariants resolve might be called many times; but the passed product ids will be gathered by the DataLoader and the SQL query function will be called only once.</p>&#xA;",1421222,,,,2017-11-25 15:24:14,"",,0,0,0,2017-11-25 15:24:14
47517806,2,,47517705,2,,<p>You are mutating the state. You should keep the state immutate. Create a new array and then make the changes to that array. So convert</p>&#xA;&#xA;<pre><code>let newArray = this.state.checkedValues;&#xA;</code></pre>&#xA;&#xA;<p>to</p>&#xA;&#xA;<pre><code>let newArray = [...this.state.checkedValues]; &#xA;</code></pre>&#xA;,7232300,,,,2017-11-27 18:47:52,"",,0,1,0,2017-11-27 18:47:52
47585568,1,47612937,,0,1158,"<p>I am doing tutorials online and trying to make <code>mutation</code> works on <code>graphql</code> but I kept on getting errors which I have no idea what where the real error comes from and how to start debugging where I have done wrong.</p>&#xA;&#xA;<p>looking at this youtube for mutation&#xA;<a href=""https://www.youtube.com/watch?v=aB6c7UUMrPo&amp;t=1962s"" rel=""nofollow noreferrer"">https://www.youtube.com/watch?v=aB6c7UUMrPo&amp;t=1962s</a>&#xA;and the graphene documentation <a href=""http://docs.graphene-python.org/en/latest/types/mutations/"" rel=""nofollow noreferrer"">http://docs.graphene-python.org/en/latest/types/mutations/</a></p>&#xA;&#xA;<p>I noticed that because of different graphene version, that is why I have reading the documentation instead of following exactly as the <code>youtube</code></p>&#xA;&#xA;<p>I got things setup but then couldn't get it to work, when I execute the mutation query I get error.</p>&#xA;&#xA;<p>I have a model like this.</p>&#xA;&#xA;<pre><code>class Product(models.Model):&#xA;    sku = models.CharField(max_length=13, help_text=""Enter Product Stock Keeping Unit"", null=True, blank=True)&#xA;    barcode = models.CharField(max_length=13, help_text=""Enter Product Barcode (ISBN, UPC ...)"", null=True, blank=True)&#xA;&#xA;    title = models.CharField(max_length=200, help_text=""Enter Product Title"", null=True, blank=True)&#xA;    description = models.TextField(help_text=""Enter Product Description"", null=True, blank=True)&#xA;&#xA;    unitCost = models.FloatField(help_text=""Enter Product Unit Cost"", null=True, blank=True)&#xA;    unit = models.CharField(max_length=10, help_text=""Enter Product Unit "", null=True, blank=True)&#xA;&#xA;    quantity = models.FloatField(help_text=""Enter Product Quantity"", null=True, blank=True)&#xA;    minQuantity = models.FloatField(help_text=""Enter Product Min Quantity"", null=True, blank=True)&#xA;&#xA;    family = models.ForeignKey('Family', null=True, blank=True)&#xA;    location = models.ForeignKey('Location', null=True, blank=True)&#xA;&#xA;    def __str__(self):&#xA;        return self.title&#xA;</code></pre>&#xA;&#xA;<p>I have this for my Product <code>schema</code></p>&#xA;&#xA;<pre><code>class ProductType(DjangoObjectType):&#xA;    class Meta:&#xA;        model = Product&#xA;        filter_fields = {'description': ['icontains']}&#xA;        interfaces = (graphene.relay.Node,)&#xA;&#xA;&#xA;class CreateProduct(graphene.Mutation):&#xA;    class Argument:&#xA;        barcode = graphene.String()&#xA;&#xA;    # form_errors = graphene.String()&#xA;    product = graphene.Field(lambda: ProductType)&#xA;&#xA;    def mutate(self, info, barcode):&#xA;        product = Product(barcode=barcode)&#xA;        return CreateProduct(product=product)&#xA;&#xA;&#xA;class ProductMutation(graphene.AbstractType):&#xA;    create_product = CreateProduct.Field()&#xA;&#xA;class ProductQuery(object):&#xA;    product = relay.Node.Field(ProductType)&#xA;    all_products = DjangoFilterConnectionField(ProductType)&#xA;&#xA;    def resolve_all_products(self, info, **kwargs):&#xA;        return Product.objects.all()&#xA;</code></pre>&#xA;&#xA;<p>global schema looks like this</p>&#xA;&#xA;<pre><code>class Mutation(ProductMutation,&#xA;               graphene.ObjectType):&#xA;    pass&#xA;&#xA;&#xA;class Query(FamilyQuery,&#xA;            LocationQuery,&#xA;            ProductQuery,&#xA;            TransactionQuery,&#xA;&#xA;            graphene.ObjectType):&#xA;    # This class extends all abstract apps level Queries and graphene.ObjectType&#xA;    pass&#xA;&#xA;&#xA;allGraphQLSchema = graphene.Schema(query=Query, mutation=Mutation)&#xA;</code></pre>&#xA;&#xA;<p>as for trying out the querying...this is my query</p>&#xA;&#xA;<pre><code>mutation ProductMutation {&#xA;  createProduct(barcode:""abc""){&#xA;    product {&#xA;      id, unit, description&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>error returned</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Unknown argument \""barcode\"" on field \""createProduct\"" of type \""Mutation\""."",&#xA;      ""locations"": [&#xA;        {&#xA;          ""column"": 17,&#xA;          ""line"": 2&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Can someone please give me a hand on what I should try and do?</p>&#xA;&#xA;<p>Thanks in advance for any help</p>&#xA;",1850712,,,,2017-12-02 21:47:31,"mutation error, Unknown argument \""barcode\"" on field \""createProduct\"" of type \""Mutation\"" - django",<python><django><graphql><graphene-python>,1,0,0,2017-12-01 02:02:14
47625628,1,,,1,1183,"<p>I am learning to use <code>django-graphene</code> for graphql purpose.</p>&#xA;&#xA;<p>For mutation, all I know is it would return error message of its own.&#xA;Let's say if I have a token field, and checked if token field is bad, I only know how to <code>return None</code> which would give the front end a query result of <code>null</code> instead of a customized json response for status and error </p>&#xA;&#xA;<p>I have these codes</p>&#xA;&#xA;<pre><code>class ProductType(DjangoObjectType):&#xA;    class Meta:&#xA;        model = Product&#xA;        filter_fields = {'description': ['icontains']}&#xA;        interfaces = (graphene.relay.Node,)&#xA;&#xA;&#xA;class ProductInput(graphene.InputObjectType):&#xA;    token = graphene.String()&#xA;    title = graphene.String()&#xA;    barcode = graphene.String(required=True)&#xA;&#xA;&#xA;class CreateProduct(graphene.Mutation):&#xA;    class Arguments:&#xA;        product_input = ProductInput()&#xA;&#xA;    product = graphene.Field(ProductType)&#xA;&#xA;    def mutate(self, info, product_input=None):&#xA;        if not product_input.get('token'):&#xA;            return None  # instead of return None, I would like to return error code, status with message&#xA;        product = Product.objects.create(barcode=product_input.barcode, title=product_input.title)&#xA;&#xA;        return CreateProduct(product=product)&#xA;&#xA;&#xA;class ProductMutation(graphene.ObjectType):&#xA;    create_product = CreateProduct.Field()&#xA;</code></pre>&#xA;&#xA;<p>Thanks in advance</p>&#xA;",1850712,,178800,2017-12-11 21:35:51,2017-12-11 21:35:51,How to return customized JSON response for an error in django-graphene?,<django><error-handling><graphql><mutation><graphene-python>,1,0,0,2017-12-04 02:21:09
47741501,1,47741682,,0,2258,"<p>I am attempting to fetch some data from a GraphQL endpoint, however I keep getting the error ""Must provide query string"". I am sure I am providing the query string, where does this error come from?</p>&#xA;&#xA;<p>The endpoint is: <a href=""https://antserver-blocjgjbpw.now.sh/graphql"" rel=""nofollow noreferrer"">https://antserver-blocjgjbpw.now.sh/graphql</a> </p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const query = `{&#xD;&#xA;    ants {&#xD;&#xA;    name&#xD;&#xA;    color&#xD;&#xA;    length&#xD;&#xA;    weight&#xD;&#xA;    }&#xD;&#xA;}`&#xD;&#xA;&#xD;&#xA;document.getElementById(""basicFetchButton"").addEventListener(""click"", () =&gt; {&#xD;&#xA;	fetch(""https://antserver-blocjgjbpw.now.sh/graphql"", {&#xD;&#xA;  	method: 'POST',&#xD;&#xA;		'Content-Type': 'application/graphql',&#xD;&#xA;    body: JSON.stringify({query})&#xD;&#xA;  })&#xD;&#xA;  .then(res =&gt; res.json())&#xD;&#xA;  .then(data =&gt; console.log(data))&#xD;&#xA;})</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",2835005,,,,2017-12-10 17:48:23,Providing query string to fetch from a GraphQL API,<fetch><graphql><endpoint>,1,0,0,2017-12-10 17:30:46
47799108,1,,,0,51,"<p>Say I get a <code>user</code> object from a query in my props. How do I get all objects of <code>type User</code> to have certain methods, eg <code>.isAdmin()</code>?</p>&#xA;&#xA;<pre><code>isAdmin() {&#xA;  return this.groups.contains('admin');&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I know I could add <code>isAdmin</code> as a schema field with a resolver for it on the server, but I don't want to add load to server and add size to the response body.</p>&#xA;",627729,,,,2017-12-13 20:02:52,What's the best way to add methods to Apollo data objects?,<apollo><react-apollo><apollo-client>,1,0,0,2017-12-13 17:34:56
47808426,2,,47772662,1,,<p>I think the mutation should work without refetching the queries. You just need to add all the required data from the related queries in the mutation result body.</p>&#xA;&#xA;<p>Did you try to install the apollo client development tool extension for chrome? There you could easily see if the currentShop element in the different queries is related via the typename and id to a Shop type.&#xA;If this is the case apollo should update after the mutation.</p>&#xA;&#xA;<p>To get all required data for the mutation result to update correctly i suggest you add a fragments structure to your app. Meaning that all components which need data from the shop have a fragments field defining the requirements.&#xA;The fragments are collected and added to the mutation body. Of course doing this you have the same coupling between the other components and the mutation.</p>&#xA;&#xA;<p>Another option would be to add all possible data of the Shop type to the result of the mutation.</p>&#xA;,4500001,,,,2017-12-14 07:56:08,"",,0,8,0,2017-12-14 07:56:08
47840861,1,,,6,852,"<p>Is there a technique that would let me declare ADT like this in GraphQL?</p>&#xA;&#xA;<pre><code>// TypeScript&#xA;type SomeAlgebraicDataType = &#xA;  | { state: 'A', subState1: string }&#xA;  | { state: 'B', subState2: string, subState3: number }&#xA;  | { state: 'C', subState4: string, subState5: string, subState6: number }&#xA;</code></pre>&#xA;&#xA;<p>Note how based on the <code>state</code> discriminator, the rest of the structure can be inferred.</p>&#xA;&#xA;<p>Here's some pseudo code that illustrates the idea:</p>&#xA;&#xA;<pre><code>union AlgebraicDataType = StateA | StateB | StateC&#xA;&#xA;type StateA {state: StateDiscriminator.A, subState1: String }&#xA;type StateB {state: StateDiscriminator.B, subState2: String, subState3: Int }&#xA;type StateC {state: StateDiscriminator.C, subState4: String, subState5: String, subState6: Int}&#xA;&#xA;enum StateDiscriminator { A B C }&#xA;</code></pre>&#xA;",592641,,51428,2019-07-29 21:01:33,2019-07-29 23:16:04,Algebraic Data Types in GraphQL,<graphql><graphql-js><algebraic-data-types>,1,0,0,2017-12-15 22:49:40
47897516,1,47926198,,0,2011,"<p>This is quite a weird problem. </p>&#xA;&#xA;<p>I have a fairly simple query, which runs perfectly well in Graphiql no matter how many times I trigger it</p>&#xA;&#xA;<p>But in browsers the problem appears when I call <code>data.refetch()</code>. Most strange that in Chromium I get &#xA;<code>Network error: Converting circular structure to JSON</code>&#xA;when if FF the error is&#xA;<code>Network error: cyclic object value</code></p>&#xA;&#xA;<p>In Chrome, where I don't have redux-dev-tools installed, the error is the same as in Chromium</p>&#xA;&#xA;<p>Other queries refetch nicely, but this one is stuck! Of course I've restarted the server many times, cleared the cache, etc..</p>&#xA;&#xA;<p>I am using apollo v2 and the query is nothing special:</p>&#xA;&#xA;<pre><code>query ProductsListQuery($offset: Int!, $limit: Int!) {&#xA;  products(offset: $offset, limit: $limit) {&#xA;    items {&#xA;      id&#xA;      title&#xA;      shortDescription&#xA;      tags&#xA;      imagesIds&#xA;      __typename&#xA;    }&#xA;    total&#xA;    __typename&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Result:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""products"": {&#xA;      ""items"": [&#xA;        {&#xA;          ""id"": ""5a39b5469066625581a326c4"",&#xA;          ""title"": ""Test1"",&#xA;          ""shortDescription"": """",&#xA;          ""tags"": [],&#xA;          ""imagesIds"": {&#xA;            ""main"": null&#xA;          },&#xA;          ""__typename"": ""Product""&#xA;        },&#xA;        {&#xA;          ""id"": ""5a39b55b9066625581a3270b"",&#xA;          ""title"": ""Test2"",&#xA;          ""shortDescription"": """",&#xA;          ""tags"": [],&#xA;          ""imagesIds"": {&#xA;            ""main"": null&#xA;          },&#xA;          ""__typename"": ""Product""&#xA;        }&#xA;      ],&#xA;      ""total"": 2,&#xA;      ""__typename"": ""ProductsPaginated""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4598587,,,,2017-12-21 13:39:53,Network error: Converting circular structure to JSON on refetch,<react-apollo><apollostack>,1,2,0,2017-12-20 01:19:23
47898239,2,,46498143,5,,"<p>GitHub recently added the ability to see all issues that are associated with a given milestone. You should be able to fetch it with a query similar to:</p>&#xA;&#xA;<pre><code>query($id:ID!) {&#xA;  node(id:$id) {&#xA;    ... on Milestone {&#xA;      issues(last:10) {&#xA;        edges {&#xA;          node {&#xA;            title&#xA;            author {&#xA;              login&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Or if you don't know the node ID, you could do something like:</p>&#xA;&#xA;<pre><code>query($owner:String!,$name:String!,$milestoneNumber:Int!) {&#xA;  repository(owner:$owner,name:$name) {&#xA;    milestone(number:$milestoneNumber) {&#xA;      issues(last:10) {&#xA;        edges {&#xA;          node {&#xA;            title&#xA;            author {&#xA;              login&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",326111,,,,2017-12-20 03:09:39,"",,0,1,0,2017-12-20 03:09:39
47910822,1,,,1,5394,"<p>How does one get a list of orders from the shopify Graphql api? I can't even figure out how to get a single order. The nearest I can tell is that my query should look something like this:</p>&#xA;&#xA;<pre><code>query{&#xA;    node(id:$id){&#xA;    __typename&#xA;    ... on Order{&#xA;      id&#xA;        email&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Where <code>$id</code> is ""An object with an ID to support global identification"" according to the docs, but its not clear what that means. For a product, you can retrieve the id like so:</p>&#xA;&#xA;<pre><code>shop {&#xA;    productByHandle(handle: ""red-bicycle"") {&#xA;      id&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Which will then return a hash, like this:</p>&#xA;&#xA;<p><code>Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0Lzk4OTUyODE0NzU=</code></p>&#xA;&#xA;<p>You can then query a product using the node interface like this:</p>&#xA;&#xA;<pre><code>node(id: ""Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0Lzk4OTUyODE0NzU="") {&#xA;    id&#xA;    ... on Product {&#xA;      title&#xA;    }&#xA;  } &#xA;</code></pre>&#xA;&#xA;<p>But how is this done for an order? For a list of the most recent 5 orders? Why do you have to use the Node interface at all? Why not just query by handle or ID or something instead of using the hash?</p>&#xA;",3829998,,,,2018-01-04 16:47:59,Shopify Graphql get list of orders,<shopify><graphql>,1,0,0,2017-12-20 16:49:45
47918796,2,,43986263,8,,"<p>I have implemented the shopify shop and cart using GraphQL provided by shopify . Follow these steps - </p>&#xA;&#xA;<ol>&#xA;<li>Create Storefront.CheckoutCreateInput() object.</li>&#xA;<li>Add lineItems to it - <code>Storefront.CheckoutLineItemInput(quantity,new ID(productVariantId));</code>  Don't be confused with productId with productVariantID . You need to use productVariantId here</li>&#xA;<li><p>Now you need to mutate line items on CheckoutCreateInput object - </p>&#xA;&#xA;<pre><code>Storefront.MutationQuery query = Storefront.mutation(mutationQuery -&gt; mutationQuery&#xA;        .checkoutCreate(checkoutCreateInputObject, createPayloadQuery -&gt; createPayloadQuery&#xA;                .checkout(checkoutQuery -&gt; checkoutQuery&#xA;                        .webUrl()&#xA;                )&#xA;                .userErrors(userErrorQuery -&gt; userErrorQuery&#xA;                        .field()&#xA;                        .message()&#xA;                )&#xA;        )&#xA;);&#xA;</code></pre></li>&#xA;</ol>&#xA;&#xA;<p>You will get a checkout Id here , save it .</p>&#xA;&#xA;<p>4.Now you need to create  Storefront.MailingAddressInput() , taking inputs from user (city , state , email , name etc).Then you need to update this mailing address on  CheckoutCreateInput() object like this   checkoutCreateInputObj.setShippingAddress() .</p>&#xA;&#xA;<p>5.Now you need to fetch Shipping Rates - </p>&#xA;&#xA;<pre><code>            Storefront.QueryRootQuery query = Storefront.query(rootQuery -&gt; rootQuery&#xA;            .node(checkoutId, nodeQuery -&gt; nodeQuery&#xA;                    .onCheckout(checkoutQuery -&gt; checkoutQuery&#xA;                            .availableShippingRates(availableShippingRatesQuery -&gt; availableShippingRatesQuery&#xA;                                    .ready()&#xA;                                    .shippingRates(shippingRateQuery -&gt; shippingRateQuery&#xA;                                            .handle()&#xA;                                            .price()&#xA;                                            .title()&#xA;                                    )&#xA;                            )&#xA;                    )&#xA;            )&#xA;    );&#xA;</code></pre>&#xA;&#xA;<ol start=""6"">&#xA;<li><p>Fetch the total price user need to pay - </p>&#xA;&#xA;<pre><code>Storefront.QueryRootQuery query = Storefront.query(rootQuery -&gt; rootQuery&#xA;        .node(checkoutId, nodeQuery -&gt; nodeQuery&#xA;                .onCheckout(checkoutQuery -&gt; checkoutQuery&#xA;                        .subtotalPrice()&#xA;                        .totalPrice()&#xA;                        .availableShippingRates(availableShippingRateQuery -&gt; availableShippingRateQuery&#xA;                            .ready()&#xA;                                .shippingRates(shippingRateQuery -&gt; shippingRateQuery&#xA;                                        .price()&#xA;                                )&#xA;                        )&#xA;                )&#xA;        )&#xA;);&#xA;</code></pre></li>&#xA;<li><p>Apply coupons if any - </p>&#xA;&#xA;<pre><code>Storefront.MutationQuery query = Storefront.mutation(mutationQuery -&gt; mutationQuery&#xA;        .checkoutDiscountCodeApply(couponCode,checkoutId,discountQuery -&gt; discountQuery&#xA;                .userErrors(userErrorQuery -&gt; userErrorQuery&#xA;                        .message()&#xA;                        .field()&#xA;                )&#xA;                .checkout(checkoutQuery -&gt; checkoutQuery&#xA;                        .webUrl()&#xA;                        .totalPrice()&#xA;                        .appliedGiftCards(giftCardQuery -&gt; giftCardQuery&#xA;                            .amountUsed()&#xA;                                .balance()&#xA;                        )&#xA;                )&#xA;        )&#xA;);&#xA;</code></pre></li>&#xA;<li><p>Get the cardVaultURL - </p>&#xA;&#xA;<pre><code>Storefront.QueryRootQuery query = Storefront.query(rootQueryBuilder -&gt;&#xA;        rootQueryBuilder&#xA;                .shop(shopQueryBuilder -&gt;&#xA;                        shopQueryBuilder&#xA;                                .paymentSettings(paymentQueryBuilder -&gt; paymentQueryBuilder&#xA;                                        .cardVaultUrl()&#xA;                                )&#xA;                )&#xA;);&#xA;</code></pre></li>&#xA;<li><p>Get the payment token - </p>&#xA;&#xA;<pre><code>CardClient cardClient = new CardClient();&#xA;CreditCard creditCard = CreditCard.builder()&#xA;        .firstName(firstName)&#xA;        .lastName(lastName)&#xA;        .number(cardNumber)&#xA;        .expireMonth(expiryMonth)&#xA;        .expireYear(expiryYear)&#xA;        .verificationCode(cvv)&#xA;        .build();&#xA;</code></pre>&#xA;&#xA;<p>cardClient.vault(creditCard, cardVaultURL).enqueue(new CreditCardVaultCall.Callback() {&#xA;        @Override public void onResponse(@NonNull String token) {&#xA;            // proceed to complete checkout with token&#xA;            paymentToken = token;&#xA;        }</p>&#xA;&#xA;<pre><code>    @Override public void onFailure(@NonNull IOException error) {&#xA;        // handle error&#xA;        Log.d(""error occured are just "",error.toString());&#xA;    }&#xA;});&#xA;</code></pre></li>&#xA;<li><p>Charge amount - </p>&#xA;&#xA;<pre><code>String idempotencyKey = UUID.randomUUID().toString();&#xA;    Storefront.CreditCardPaymentInput input = new Storefront.CreditCardPaymentInput(amount, idempotencyKey, billingAddress,&#xA;            paymentToken);&#xA;&#xA;&#xA;&#xA;    Storefront.MutationQuery query = Storefront.mutation(mutationQuery -&gt; mutationQuery&#xA;            .checkoutCompleteWithCreditCard(shopifyHandler.checkoutId, input, payloadQuery -&gt; payloadQuery&#xA;                    .payment(paymentQuery -&gt; paymentQuery&#xA;                            .ready()&#xA;                            .errorMessage()&#xA;                    )&#xA;                    .checkout(checkoutQuery -&gt; checkoutQuery&#xA;                            .ready()&#xA;                    )&#xA;                    .userErrors(userErrorQuery -&gt; userErrorQuery&#xA;                            .field()&#xA;                            .message()&#xA;                    )&#xA;            )&#xA;    );&#xA;</code></pre></li>&#xA;</ol>&#xA;",3494194,,,,2017-12-21 05:59:08,"",,0,3,0,2017-12-21 05:59:08
47928218,1,,,0,966,"<p>I've been attempting to figure this out for a while, but how can i get historical data for post insights? For example, i need to get a ""snapshot"" of the insights for every day throughout the last five years.  Its easy to get the latest stats, just use period = lifetime, but i need to the lifetime stats on a day three years ago. Is this even possible using only the graph api?</p>&#xA;&#xA;<p>Thanks!</p>&#xA;",3339674,,2092392,2017-12-21 18:51:41,2018-01-08 22:50:39,Facebook Graph Api - How can i get historical POST likes?,<facebook><rest><facebook-graph-api><graphql><facebook-insights>,1,2,0,2017-12-21 15:38:50
47961101,2,,46327573,2,,"<p>It may be a good idea in your simplest case to just define <code>getRandom</code> resolver on the root-level Query type.</p>&#xA;&#xA;<p>Another approach, given that you say you already have a <code>Quote</code> type defined, would be to define a resolver inside it.</p>&#xA;&#xA;<p>Then, for the query from your example, the schema may resemble something like (I didn't test it):</p>&#xA;&#xA;<pre><code>type Quote {&#xA;  id: Int!&#xA;  text: String!&#xA;  getRandom(): Quote&#xA;}&#xA;&#xA;type Query {&#xA;  allQuotes(): [Quote]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>There is also a good example related to randomness in the official docs of GraphQL, try having a look at the <a href=""http://graphql.org/graphql-js/object-types/"" rel=""nofollow noreferrer"">Object Types</a> section.</p>&#xA;",725901,,,,2017-12-24 13:45:28,"",,0,0,0,2017-12-24 13:45:28
48030790,2,,48029321,1,,"<p>You can get follower count using <code>totalCount</code> under <code>followers</code> : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  user(login: ""parkerziegler"") {&#xA;    login&#xA;    name&#xA;    avatarUrl(size: 200)&#xA;    bio&#xA;    company&#xA;    location&#xA;    createdAt&#xA;    followers {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20user(login%3A%20%22parkerziegler%22)%20%7B%0A%20%20%20%20login%0A%20%20%20%20name%0A%20%20%20%20avatarUrl(size%3A%20200)%0A%20%20%20%20bio%0A%20%20%20%20company%0A%20%20%20%20location%0A%20%20%20%20createdAt%0A%20%20%20%20followers%20%7B%0A%20%20%20%20%20%20totalCount%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""nofollow noreferrer"">Try it in the explorer</a></p>&#xA;&#xA;<p>You can check <a href=""https://developer.github.com/v4/object/followerconnection/#followerconnection"" rel=""nofollow noreferrer"">FollowerConnection</a> object</p>&#xA;",2614364,,,,2017-12-30 03:58:52,"",,0,0,0,2017-12-30 03:58:52
48056793,2,,48052071,1,,"<p>The result of a mutation is defined within curly brackets in the mutation string.&#xA;I your case it could look like:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const SET_NAME_MUTATION = gql `&#xD;&#xA;  mutation ($name: String!) {&#xD;&#xA;    setName(name: $name) {&#xD;&#xA;      user {&#xD;&#xA;        id&#xD;&#xA;        title&#xD;&#xA;        photo_url&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;`;&#xD;&#xA;&#xD;&#xA;const withSetFullNameMutation = graphql(SET_NAME_MUTATION, {&#xD;&#xA;  name: 'setName',&#xD;&#xA;});</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>When you call the mutation the result can be retrieved like so:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>this.props.setName(name).then(response =&gt; {&#xD;&#xA;  const user = response.data.setName.user;&#xD;&#xA;}).catch(errors =&gt; {});</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>In this case the mutation itself on the server needs to deliver the correct data objects. So you also need to change the mutation on the server.</p>&#xA;",4500001,,,,2018-01-02 06:59:17,"",,0,0,0,2018-01-02 06:59:17
48064084,1,48071621,,1,203,"<p>I have an application that records the names of some GitHub repositories in database. Take the following 3 repos for example.</p>&#xA;&#xA;<ol>&#xA;<li><a href=""https://github.com/zhangkun-Jser/react-experience"" rel=""nofollow noreferrer"">https://github.com/zhangkun-Jser/react-experience</a></li>&#xA;<li><a href=""https://github.com/zhangkun-Jser/vue-plug"" rel=""nofollow noreferrer"">https://github.com/zhangkun-Jser/vue-plug</a></li>&#xA;<li><a href=""https://github.com/hsluoyz/casbin"" rel=""nofollow noreferrer"">https://github.com/hsluoyz/casbin</a></li>&#xA;</ol>&#xA;&#xA;<p>But the issue is the repos I recorded may be renamed. For example, the above three repos have been respectively renamed to:</p>&#xA;&#xA;<ol>&#xA;<li><a href=""https://github.com/zhangkun-Jser/react-kit"" rel=""nofollow noreferrer"">https://github.com/zhangkun-Jser/react-kit</a></li>&#xA;<li><a href=""https://github.com/zhangkun-Jser/FE-plugs"" rel=""nofollow noreferrer"">https://github.com/zhangkun-Jser/FE-plugs</a></li>&#xA;<li><a href=""https://github.com/casbin/casbin"" rel=""nofollow noreferrer"">https://github.com/casbin/casbin</a></li>&#xA;</ol>&#xA;&#xA;<p>I want to write some code to actively update any old repo names to new repo names in my database. For example, update <code>zhangkun-Jser/react-experience</code> to <code>zhangkun-Jser/react-kit</code>.</p>&#xA;&#xA;<p>I know I can use <code>GitHub V3 API</code> to get the repository info for every repo and then get the new name. But this requires to send a request for every repo. My question is <code>if there is any method to get the new names for a list of repos in one request</code>?</p>&#xA;&#xA;<p><strong>Note</strong>: The repos can be from different owners, like in the example.</p>&#xA;&#xA;<p>I tried to use the <code>GraphQL API v4</code> but I didn't know how to get the info of a list of repos. And the V4 API seems not to recognize the old names. For example, if I send the following request:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""zhangkun-Jser"" name: ""react-experience"") {&#xA;    name&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The response is:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Could not resolve to a Repository with the name 'react-experience'."",&#xA;      ""type"": ""NOT_FOUND"",&#xA;      ""path"": [&#xA;        ""repository""&#xA;      ],&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 2,&#xA;          ""column"": 3&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Anyone can help? Thanks.</p>&#xA;",1087890,,,,2018-01-03 05:22:59,How to know the new names that multiple repositories have been renamed to?,<github><graphql><github-api><github-graphql>,1,0,0,2018-01-02 16:01:53
48071621,2,,48064084,1,,"<p>You could store the Node ID of the Repository and look up the Node by ID:</p>&#xA;&#xA;<pre><code>query { &#xA;  repository (owner:""osowskit"", name:""about"") { &#xA;    id&#xA;  },&#xA;  node(id:""MDEwOlJlcG9zaXRvcnk1NjE2NzA2OQ"") {&#xA;  ... on Repository {&#xA;      id,&#xA;      name,&#xA;      nameWithOwner&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1375964,,,,2018-01-03 05:22:59,"",,0,2,0,2018-01-03 05:22:59
48087665,1,,,3,2640,"<p>I am trying to pass json field as input for my graphql mutation.&#xA;I have been trying and searching but just no luck.  I can pass array fine with I know by defining <code>graphene.List(graphene.String)</code> would work for passing array of strings.</p>&#xA;&#xA;<p>I figured there's a type named <code>graphene.JSONstring()</code> which I thought would work if I use it with <code>graphene.List(graphene.JSONstring)</code> but no luck, still getting errors saying type is not right.</p>&#xA;&#xA;<p>I have something like this during the mutation</p>&#xA;&#xA;<pre><code>    mutation {&#xA;        create(data:{&#xA;                field1: [&#xA;                    {&#xA;                        ""first"": ""first"",&#xA;                        ""last"": ""last""&#xA;                    },&#xA;                    {&#xA;                        ""first"":""first1"",&#xA;                        ""last"":""last1""&#xA;                    }&#xA;                ]&#xA;        })&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>as for input class</p>&#xA;&#xA;<pre><code>class NameInput(graphene.InputObjectType):&#xA;    # please ignore the same field names, just listing what I have tried&#xA;    field1 = graphene.JSONString()  &#xA;    field1 = graphene.List(graphene.JSONString)&#xA;    field1 = graphene.List(graphene.String)&#xA;</code></pre>&#xA;&#xA;<p>Does anyone has an idea how this would work?</p>&#xA;&#xA;<p>Thanks in advance</p>&#xA;",2128414,,,,2021-04-02 13:09:00,is there possible chance to pass array of objects (json) as input field for mutation? graphene-python,<python><json><object><graphql><graphene-python>,3,0,0,2018-01-04 01:56:49
48087982,1,,,0,484,"<p>I've been wondering about this for a long time. I did something questionable to solve this problem before. But I don't know how to get this to work with Graphql now. Let me show you what I mean.</p>&#xA;&#xA;<p>I've got a database query returning the following:</p>&#xA;&#xA;<pre><code>{edges: COLLECT(DISTINCT {source: id(endNode(r)), target: id(startNode(r))})} &#xA;</code></pre>&#xA;&#xA;<p>The object returned looks like this:</p>&#xA;&#xA;<pre><code>{ edges: [ { source: [Object], target: [Object] } }&#xA;</code></pre>&#xA;&#xA;<p>next, the source and target objects look like this:</p>&#xA;&#xA;<pre><code>[ { source: Integer { low: 38, high: 0 },&#xA;    target: Integer { low: 37, high: 0 } },&#xA;</code></pre>&#xA;&#xA;<p>I only need the low value. To get there, I went all this way:</p>&#xA;&#xA;<pre><code>.then(function (result) {&#xA;  return result.records.forEach (function (record) { &#xA;    return record._fields[0].edges.forEach (function (a) { &#xA;      return a.source.low&#xA;})})});&#xA;</code></pre>&#xA;&#xA;<p>I tried to figure out how to do this in a nice way for a very long time. I've spent days just trying to figure out this maze of undefined values. But now,&#xA;I need to get the same id numbers out of a Graphql resolver. This what my .then part of the resolver looks like:</p>&#xA;&#xA;<pre><code>.then(function (result) { return result.records.map(function (record) { return record.get(""{edges: COLLECT(DISTINCT {source: id(endNode(r)), target: id(startNode(r))})}"").edges })})&#xA;</code></pre>&#xA;&#xA;<p>This returns an array of objects that looks like this:</p>&#xA;&#xA;<pre><code>[ { source: Integer { low: 38, high: 0 },&#xA;    target: Integer { low: 37, high: 0 } }]&#xA;</code></pre>&#xA;&#xA;<p>This is where i'm stuck. No matter what I can think of, everything returns undefined. I want to do the following query in graphql: <code>{edges{source target}}</code>&#xA;But Graphql won't even get close to returning a result.</p>&#xA;&#xA;<p>if I try something like </p>&#xA;&#xA;<pre><code>.then(...).edges.source&#xA;</code></pre>&#xA;&#xA;<p>an undefined value will be returned. I've tried every combination I could think of, but I seem not able to make Graphql query these id numbers, let alone return a value that is not undefined.</p>&#xA;&#xA;<p>I can get the desired result like this:</p>&#xA;&#xA;<pre><code>var arr = [];&#xA;.then(function (result) {&#xA;   return result.records.forEach (function (record) {&#xA;      return record._fields[0].edges.forEach (function (a) {&#xA;         return arr.push({source: a.source.low, target: a.target.low})&#xA;    })})});&#xA;</code></pre>&#xA;&#xA;<p>But I've got no clue on how to return arr to graphql.</p>&#xA;&#xA;<p>To get an idea of the resolver functions. This is what a working resolver for a user query looks like:</p>&#xA;&#xA;<pre><code>user(_, { userID }) {&#xA;  let session = driver.session();&#xA;  let query = ""MATCH (a:user) WHERE a.userID = toInteger$userID RETURN a;"";&#xA;    return session.run(query, {userID})&#xA;      .then(function (result) { return result.records.map(function (record) { return record.get(""a"").properties })})&#xA;</code></pre>&#xA;&#xA;<p>Please help me out of this maze</p>&#xA;&#xA;<p><strong>EDIT:</strong></p>&#xA;&#xA;<p>The object I am trying to create looks like this:</p>&#xA;&#xA;<pre><code>Object&#xA;links:&#xA;Array(22)&#xA;0:{source: 36, target: 44}&#xA;1:{source: 44, target: 45}&#xA;2:{source: 44, target: 46}&#xA;3:{source: 44, target: 48}&#xA;4:{source: 44, target: 47}&#xA;5:{source: 44, target: 53}&#xA;6:{source: 44, target: 62}&#xA;7:{source: 36, target: 52}&#xA;8:{source: 52, target: 58}&#xA;9:{source: 36, target: 54}&#xA;10:{source: 54, target: 56}&#xA;11:{source: 54, target: 55}&#xA;12:{source: 55, target: 63}&#xA;13:{source: 55, target: 60}&#xA;14:{source: 54, target: 61}&#xA;15:{source: 36, target: 49}&#xA;16:{source: 49, target: 59}&#xA;17:{source: 49, target: 50}&#xA;18:{source: 49, target: 51}&#xA;19:{source: 49, target: 65}&#xA;20:{source: 52, target: 57}&#xA;21:{source: 52, target: 64}&#xA;length:22&#xA;__proto__:Array(0)&#xA;nodes:(23) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]&#xA;__proto__:Object&#xA;</code></pre>&#xA;&#xA;<p>I've got the nodes, but I'm seriously stuck with creating the array of objects for the links. The resolver for the link data looks like this:</p>&#xA;&#xA;<pre><code>const resolveFunctions = {&#xA;    Query: {&#xA;        nodes(_, {userID}) {&#xA;            let session = driver.session();&#xA;            let query = ""MATCH p=(w) -[*]- () WHERE id(w) = toInteger($userID) UNWIND nodes(p) AS n UNWIND relationships(p) AS r WITH n, r ORDER BY n.Name RETURN n, {nodes: COLLECT(DISTINCT n), edges: COLLECT(DISTINCT {source: id(endNode(r)), target: id(startNode(r))})};"";&#xA;            return session.run(query, {userID})&#xA;                .then(function (result) {&#xA;                    return result.records.map(function (record) {&#xA;                        return record.get(""n"").properties&#xA;                    })&#xA;                })&#xA;        },&#xA;    },&#xA;    Node: {&#xA;        source: (name, _) =&gt; {&#xA;            let session = driver.session();&#xA;            let params = {nameParam: name.Name};&#xA;            let query = ""MATCH p=(w) -[*]- ()  WHERE w.Name = $nameParam UNWIND relationships(p) AS r WITH r RETURN r, COLLECT(DISTINCT toString(id(endNode(r)))) as s"";&#xA;            return session.run(query, params)&#xA;                .then(function (result) {&#xA;                    return result.records.map(function (record) {&#xA;                        return record.get(""s"")&#xA;                    })&#xA;                })&#xA;        },&#xA;        target: (name, _) =&gt; {&#xA;            let session = driver.session();&#xA;            let params = {nameParam: name.Name};&#xA;            let query = ""MATCH p=(w) -[*]- () WHERE w.Name = $nameParam UNWIND relationships(p) AS r WITH r RETURN r, COLLECT(DISTINCT toString(id(startNode(r)))) as t"";&#xA;            return session.run(query, params)&#xA;                .then(function (result) {&#xA;                    return result.records.map(function (record) {&#xA;                        return record.get(""t"")&#xA;                    })&#xA;                })&#xA;        },&#xA;    },&#xA;};&#xA;&#xA;module.exports = resolveFunctions;&#xA;</code></pre>&#xA;&#xA;<p>This is the schema. I've tried a different query for only the link data and a nested query as the one above. When I try to make a query only for the link data, graphql will return null. I logged the result that gets returned in the resolver and it does display the data as needed. I am not sure why, but graphql still returns null.</p>&#xA;&#xA;<p>It helped to convert the id to strings after changing the Neo4j Query. But .then(...).edges.source.id / edges.source / edges.target all return undefined. at least it's shorter than .edges.source.id.low</p>&#xA;&#xA;<p>In the example below I managed to get the data in the query. But now it returns 4 id's for every single node. Only one target id and one source id should be returned together with a single node, not 4. Might this be solved by providing a different WHERE clause? I tried to solve this issue for another full day. I tried many different Neo4j queries and I tried to change the graphql schema in many ways too. I have a big lack of experience and I'm just a beginner, but I'm dying to figure this out.</p>&#xA;&#xA;<pre><code>type Node {&#xA;    id: Int&#xA;    Name: String&#xA;    user: User&#xA;    tag: String&#xA;    labels: String&#xA;    source: String&#xA;    target: String&#xA;}&#xA;&#xA;type Query {&#xA;    nodes(id:Int): [Node]&#xA;}&#xA;</code></pre>&#xA;",8374919,,8374919,2018-01-05 05:22:26,2018-01-05 05:22:26,How to properly get these records' values returned from a database query?,<javascript><node.js><neo4j><graphql>,2,0,0,2018-01-04 02:47:45
48088017,2,,48087982,0,,"<p>You're going to want to take a look at this section on <a href=""https://github.com/neo4j/neo4j-javascript-driver#a-note-on-numbers-and-the-integer-type"" rel=""nofollow noreferrer"">working with numbers in javascript</a>. Neo4j's integer values are 64-bit long values, but javascript can't address these, so you'll need to use the techniques in the linked section to get around this.</p>&#xA;",92359,,,,2018-01-04 02:52:00,"",,0,1,0,2018-01-04 02:52:00
48130222,2,,48122722,5,,"<p>You can access the <a href=""https://developer.github.com/v4/object/user/"" rel=""noreferrer""><code>User</code></a> or <a href=""https://developer.github.com/v4/object/organization/"" rel=""noreferrer""><code>Organization</code></a> interface in <a href=""https://developer.github.com/v4/interface/repositoryowner/"" rel=""noreferrer""><code>RepositoryOwner</code></a> using respectively <code>... on User</code> &amp; <code>... on Organization</code> :</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repositoryOwner(login: ""google"") {&#xA;    ... on User {&#xA;      avatarUrl&#xA;      bio&#xA;    }&#xA;    ... on Organization {&#xA;      name&#xA;      members {&#xA;        totalCount&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20repositoryOwner(login%3A%20%22google%22)%20%7B%0A%20%20%20%20...%20on%20User%20%7B%0A%20%20%20%20%20%20avatarUrl%0A%20%20%20%20%20%20bio%0A%20%20%20%20%7D%0A%20%20%20%20...%20on%20Organization%20%7B%0A%20%20%20%20%20%20name%0A%20%20%20%20%20%20members%20%7B%0A%20%20%20%20%20%20%20%20totalCount%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""noreferrer"">Try it in the explorer</a></p>&#xA;&#xA;<p>If the result is an organization it will only returns the fields you specifed in <code>... on Organization</code> block, if the result is a user it will return the fields specified in <code>... on User</code>, in this case as <code>google</code> is an organization :</p>&#xA;&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  ""data"": {&#xA;    ""repositoryOwner"": {&#xA;      ""name"": ""Google"",&#xA;      ""members"": {&#xA;        ""totalCount"": 1656&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2614364,,,,2018-01-06 17:58:21,"",,0,0,0,2018-01-06 17:58:21
48134671,2,,48132695,0,,"<p>Check out the <a href=""https://github.com/reactql/example-auth"" rel=""nofollow noreferrer"">ReactQL auth example</a> repo.</p>&#xA;&#xA;<p>It has showcases many of the features you're looking for, including 'posting' data with GraphQL mutations, and retrieving data with a GraphQL query, in the context of managing users and sessions.</p>&#xA;",216012,,,,2018-01-07 05:45:05,"",,0,1,0,2018-01-07 05:45:05
48140102,1,48154495,,0,1021,"<p>I have the following:</p>&#xA;&#xA;<pre><code>const typeDefs = `&#xA;type Request {&#xA;  id: ID!&#xA;  email: String!&#xA;  totalCount: Int&#xA;}&#xA;&#xA;type Mutation {&#xA;  createRequest(email: String!): Request!&#xA;}&#xA;`;&#xA;&#xA;export default typeDefs;&#xA;</code></pre>&#xA;&#xA;<p>Right now totalCount is returning null. Using GraphQL, what is the right way to return the TotalCount as the mutation's response. Should totalCount be included somehow in the Request model?</p>&#xA;",149080,,472495,2019-03-16 09:14:52,2019-03-16 09:14:52,"With GraphQL + Apollo Client, how to return a totalCount after mutating?",<reactjs><graphql><apollo>,1,0,0,2018-01-07 18:09:33
48140344,1,48140770,,0,1372,"<p>I have a GraphQL server using Node, Knew and Objection.</p>&#xA;&#xA;<p>I have the following in my model:</p>&#xA;&#xA;<pre><code>  totalCount = async () =&gt; {&#xA;    const totalCount = await Request&#xA;      .query()&#xA;      .count();&#xA;    console.log(totalCount);&#xA;    return totalCount;&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>The above is supposed to return an Int but is currently erroring with: <code>""Int cannot represent non 32-bit signed integer value: [object Object]"",</code></p>&#xA;&#xA;<p>The console.log:</p>&#xA;&#xA;<pre><code>[ Request { totalCount: [Function], count: 14 } ]&#xA;</code></pre>&#xA;&#xA;<p>The number 14 in the console log is correct. How can I get the func above to return an Int with the count?</p>&#xA;",149080,,472495,2019-03-16 09:14:18,2019-03-16 09:14:18,"Using Knex and Objection with GraphQL, how to return the count()?",<javascript><reactjs><graphql><knex.js><objection.js>,1,0,0,2018-01-07 18:38:35
48155693,1,48156721,,3,1349,"<p>I can query the <em>first</em> pull request like this:</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner: ""test_owner"", name: ""test_name"") {&#xA;    pullRequests(first: 1) {&#xA;      nodes {&#xA;        id&#xA;        number&#xA;        title&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But how do I query a certain pull request based on its <code>number</code>?</p>&#xA;&#xA;<p>The following doesn't work:</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner: ""test_owner"", name: ""test_name"") {&#xA;    pullRequests(first: 1, number: 50) { &lt;-- CANNOT FILTER BY `number`&#xA;      nodes {&#xA;        id&#xA;        number&#xA;        title&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Thanks for any help!</p>&#xA;",2869868,,2614364,2018-01-09 11:15:51,2018-01-09 11:15:51,"How to query pull request by number, using Github's v4 GraphQL API?",<github><graphql><github-api><github-graphql>,1,0,0,2018-01-08 18:02:42
48156721,2,,48155693,4,,"<p>Use <a href=""https://developer.github.com/v4/object/repository/#pullrequest"" rel=""nofollow noreferrer""><code>pullRequest</code></a> instead of <code>pullRequests</code> connection : </p>&#xA;&#xA;<blockquote>&#xA;  <p>Returns a single pull request from the current repository by number.</p>&#xA;</blockquote>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner: ""nodejs"", name: ""node"") {&#xA;    pullRequest(number: 2) {&#xA;      id&#xA;      number&#xA;      title&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20repository(owner%3A%20%22nodejs%22%2C%20name%3A%20%22node%22)%20%7B%0A%20%20%20%20pullRequest(number%3A%202)%20%7B%0A%20%20%20%20%20%20id%0A%20%20%20%20%20%20number%0A%20%20%20%20%20%20title%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""nofollow noreferrer"">Try it in the explorer</a></p>&#xA;",2614364,,,,2018-01-08 19:15:20,"",,0,1,0,2018-01-08 19:15:20
48166160,2,,37337466,2,,"<p>For the Query cost limiting you could use <a href=""https://github.com/pa-bru/graphql-cost-analysis"" rel=""nofollow noreferrer"">graphql-cost-analysis</a></p>&#xA;&#xA;<p>This is a validation rule which parses the query before executing it. In your GraphQL server you just have to assign a cost configuration for each field of your Schema Type Map you want.</p>&#xA;",7562964,,,,2018-01-09 10:30:16,"",,0,0,0,2018-01-09 10:30:16
48168129,2,,48166281,1,,"<p>As you can see, your ReactTable's data prop expects an array (or at least, in your example you're passing it an array of 1 object).</p>&#xA;&#xA;<p>Note also that the data object returned by your GraphQL is of the form</p>&#xA;&#xA;<pre><code>  {&#xA;    account&#xA;    {&#xA;      firstName,&#xA;      lastName,&#xA;      id&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>So you could have defined your ReactTable data with <code>data={[ data.account ]}</code> with the same result.</p>&#xA;&#xA;<p>Now let's say you perform your Toys query, then the data returned will be of the form</p>&#xA;&#xA;<pre><code>{&#xA;  allToy [&#xA;    {&#xA;      id,&#xA;      title&#xA;    },&#xA;    {&#xA;      id,&#xA;      title&#xA;    },&#xA;    ...&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>so if your definition of data remains the same (<code>const { data } = this.props;</code>), then <code>data.allToy</code> will be an array of <code>{ id, title }</code> objects.</p>&#xA;&#xA;<p>So you can define your Toy ReactTable as:</p>&#xA;&#xA;<pre><code>&lt;ReactTable&#xA;  data={ data.allToy }&#xA;  columns={columns}&#xA;  defaultPageSize={10}&#xA;/&gt;&#xA;</code></pre>&#xA;",5438616,,,,2018-01-09 12:20:36,"",,0,2,0,2018-01-09 12:20:36
48244950,1,48245999,,5,3726,"<p>I am trying to list public repositories in Github using <strong>GraphQL</strong> as it allows me to choose exactly which information from an <code>Object</code> I want. </p>&#xA;&#xA;<p>Using <strong>REST</strong> I could list public repositories simply by making requests to <code>https://api.github.com/repositories</code>. This is OK, but the response comes with a bunch of stuff I don't need. So, I was wondering if I could use <strong>GraphQL</strong> to do the same job.</p>&#xA;&#xA;<p>The problem is, I couldn't find any high level repositories <code>Object</code> I could use to list public repositories using <strong>GraphQL</strong>. For me it seems I can only use <strong>GraphQL</strong> to list repositories from organizations or from users. For example, like doing so:</p>&#xA;&#xA;<pre><code>query{&#xA;    user(login: ""someuser""){&#xA;        repositories(first: 50){&#xA;            nodes{&#xA;                name&#xA;            }&#xA;            pageInfo{&#xA;                hasNextPage&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So, how can I use (if at all) Github's GraphQL endpoint to list Github's public repositories?</p>&#xA;&#xA;<p>I have also tried something on this line, using <code>search</code>, but I doubt Github has only 54260 repositories as the <code>repositoryCount</code> variable returned me.</p>&#xA;&#xA;<pre><code>query{&#xA;    search(query:""name:*"", type:REPOSITORY, first:50){&#xA;        repositoryCount&#xA;        pageInfo{&#xA;            endCursor&#xA;            startCursor&#xA;        }&#xA;        edges{&#xA;            node{&#xA;                ... on Repository{&#xA;                    name&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",5753454,,5753454,2018-01-13 23:30:48,2022-05-03 13:39:37,Can I list Github's public repositories using GraphQL?,<github><graphql><github-api><github-graphql>,2,1,0,2018-01-13 22:39:40
48245999,2,,48244950,12,,"<p>You can use <code>is:public</code> in the search query : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  search(query: ""is:public"", type: REPOSITORY, first: 50) {&#xA;    repositoryCount&#xA;    pageInfo {&#xA;      endCursor&#xA;      startCursor&#xA;    }&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20search(query%3A%20%22is%3Apublic%22%2C%20type%3A%20REPOSITORY%2C%20first%3A%2050)%20%7B%0A%20%20%20%20repositoryCount%0A%20%20%20%20pageInfo%20%7B%0A%20%20%20%20%20%20endCursor%0A%20%20%20%20%20%20startCursor%0A%20%20%20%20%7D%0A%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20...%20on%20Repository%20%7B%0A%20%20%20%20%20%20%20%20%20%20name%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""noreferrer"">Try it in the explorer</a></p>&#xA;",2614364,,,,2018-01-14 01:49:36,"",,0,5,0,2018-01-14 01:49:36
48255711,2,,48255251,8,,"<p>You can get username from the user id and perform a search with <a href=""https://help.github.com/articles/searching-issues-and-pull-requests/#search-pull-requests-by-review-status"" rel=""noreferrer""><code>review-requested</code></a> to match a user requested for review :</p>&#xA;&#xA;<p>get username : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  node(id: ""MDQ6VXNlcjk2OTQ3"") {&#xA;    ... on User {&#xA;      login&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>get open PR where user is review requested :</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  search(query: ""type:pr state:open review-requested:refack"", type: ISSUE, first: 100) {&#xA;    issueCount&#xA;    pageInfo {&#xA;      endCursor&#xA;      startCursor&#xA;    }&#xA;    edges {&#xA;      node {&#xA;        ... on PullRequest {&#xA;          repository {&#xA;            nameWithOwner&#xA;          }&#xA;          number&#xA;          url&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can define the query string as a variable, <a href=""https://developer.github.com/v4/explorer/?query=query%20(%24query%3A%20String!)%20%7B%0A%20%20search(query%3A%20%24query%2C%20type%3A%20ISSUE%2C%20first%3A%20100)%20%7B%0A%20%20%20%20issueCount%0A%20%20%20%20pageInfo%20%7B%0A%20%20%20%20%20%20endCursor%0A%20%20%20%20%20%20startCursor%0A%20%20%20%20%7D%0A%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20...%20on%20PullRequest%20%7B%0A%20%20%20%20%20%20%20%20%20%20repository%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20nameWithOwner%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20number%0A%20%20%20%20%20%20%20%20%20%20url%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A&amp;variables=%7B%0A%20%20%22query%22%3A%20%22type%3Apr%20state%3Aopen%20review-requested%3Arefack%22%0A%7D"" rel=""noreferrer"">try it in the explorer</a></p>&#xA;",2614364,,,,2018-01-15 00:56:38,"",,0,1,0,2018-01-15 00:56:38
48271211,1,48271606,,1,47,<p>Take the following Github URL: <code>https://github.com/google</code></p>&#xA;&#xA;<p>How can I determine whether <code>google</code> is a user or an organization?</p>&#xA;&#xA;<p>I need to know to this for querying Github's graphql API in the correct way.</p>&#xA;,78297,,2614364,2018-01-15 22:52:49,2018-01-15 22:52:49,"In Github API, how can one distinguish a user from an organisation?",<github><github-api><github-graphql>,1,0,0,2018-01-15 21:57:49
48277765,1,48290524,,3,1433,"<p>I am using Github's GraphQL (v4) API to make some calls. I am trying to get commits information about a repository, but I am having issues with defining the <code>since</code> attribute of the <code>history</code> connection of the <code>Commit</code> object.</p>&#xA;&#xA;<p>I am getting the following error back:</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": null,&#xA;    ""errors"": [&#xA;        {&#xA;            ""message"": ""Argument 'since' on Field 'history' has an invalid value. Expected type 'GitTimestamp'."",&#xA;            ""locations"": [&#xA;                {&#xA;                    ""line"": 38,&#xA;                    ""column"": 9&#xA;                }&#xA;            ]&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And this is the extracted part of my GraphQL which is causing the error:</p>&#xA;&#xA;<pre><code>query {&#xA;    search(query:""is:public"", type:REPOSITORY, first:10){       &#xA;        edges{&#xA;            node{&#xA;                ... on Repository{&#xA;                    ref(qualifiedName: ""master""){&#xA;                        target{                         &#xA;                            ... on Commit{                              &#xA;                                history(first: 10, since:""2017-07-15""){                                 &#xA;                                    totalCount&#xA;                                    pageInfo{&#xA;                                        startCursor&#xA;                                        endCursor&#xA;                                    }&#xA;                                    edges{&#xA;                                        node{&#xA;                                            ... on Commit{&#xA;                                                committedDate&#xA;                                            }&#xA;                                        }&#xA;                                    }&#xA;                                }&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>According to the <a href=""https://developer.github.com/v4/scalar/gittimestamp/"" rel=""nofollow noreferrer"">documentation</a>, the <code>GitTimestamp</code> scalar is an <strong>ISO-8601</strong> encoded date string. So, what is the problem with my string <code>""2017-07-15""</code>? I have also tried the following strings, which none worked.</p>&#xA;&#xA;<ul>&#xA;<li>2017/01/01</li>&#xA;<li>2017.01.01</li>&#xA;<li>2017-01-01 01:01</li>&#xA;<li>2017-01-01T01:01</li>&#xA;<li>2017-01-01 01:01Z</li>&#xA;<li>2017-01-01T01:01Z</li>&#xA;</ul>&#xA;",5753454,,2614364,2020-06-12 01:38:10,2020-06-12 01:38:10,Argument 'since' on Field 'history' has an invalid value. Expected type 'GitTimestamp',<github><graphql><github-api><github-graphql>,1,3,0,2018-01-16 09:19:58
48285888,1,48286191,,13,7213,"<p>I am using GraphQL to get some data from a list of repositories using Github's GraphQL (v4) API. I want to get a list of the <strong>latest commits</strong> from a repository, no matter what is the commit's branch/tag/ref.</p>&#xA;&#xA;<p>For now I am doing the following to get the list of commits from a certain repository:</p>&#xA;&#xA;<pre><code>... on Repository{&#xA;    refs(refPrefix:""refs/"",orderBy:$refOrder,first:1){&#xA;        edges{&#xA;            node{&#xA;                ... on Ref{&#xA;                    target{&#xA;                        ... on Commit{&#xA;                            history(first:10){&#xA;                                totalCount&#xA;                                edges{&#xA;                                    node{&#xA;                                        ... on Commit{&#xA;                                            committedDate&#xA;                                        }&#xA;                                    }&#xA;                                }&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Where <code>$refOrder</code> is an object I am sending together with the request and it is defined below:</p>&#xA;&#xA;<pre><code>{&#xA;    ""refOrder"": {&#xA;        ""direction"": ""DESC"",&#xA;        ""field"": ""TAG_COMMIT_DATE""&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This piece of code is working, but not retrieving the results I want. The response comes back with a list of commits, <strong>but not necessarily the last commits from the repository</strong>. When I go to the repository page and click on ""Commits"", I usually see a list of commits that are more recent than what I got as results from my API call.</p>&#xA;&#xA;<p>What am I missing? Should I try a different <code>refPrefix</code> or <code>orderBy</code> argument? I have already tried ""master"" as the <code>refPrefix</code>, but faced the same problem.</p>&#xA;",5753454,,,,2021-02-11 05:24:35,Github GraphQL - Getting a repository's list of commits,<github><graphql><github-api><github-graphql>,2,1,0,2018-01-16 16:36:00
48286191,2,,48285888,21,,<p>Just realized that what I was looking for is a field which exists in the <code>Repository</code> object called <code>defaultBranchRef</code>. Using this field I was able to retrieve the data I was looking for.</p>&#xA;&#xA;<p>My query now looks like this:</p>&#xA;&#xA;<pre><code>... on Repository{&#xA;    defaultBranchRef{&#xA;        target{&#xA;            ... on Commit{&#xA;                history(first:10){&#xA;                    edges{&#xA;                        node{&#xA;                            ... on Commit{&#xA;                                committedDate&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;,5753454,,,,2018-01-16 16:53:45,"",,0,0,0,2018-01-16 16:53:45
48290524,2,,48277765,6,,"<p>You have to specify a date in the format <code>YYYY-MM-DDTHH:MM:SSZ</code>. The following will work : </p>&#xA;&#xA;<ul>&#xA;<li>2017-01-01T01:01:00</li>&#xA;<li>2017-01-01T01:01:00Z</li>&#xA;</ul>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20search(query%3A%20%22is%3Apublic%22%2C%20type%3A%20REPOSITORY%2C%20first%3A%2010)%20%7B%0A%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20...%20on%20Repository%20%7B%0A%20%20%20%20%20%20%20%20%20%20ref(qualifiedName%3A%20%22master%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20target%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20...%20on%20Commit%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20history(first%3A%2010%2C%20since%3A%20%222017-01-01T01%3A01%3A00%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20totalCount%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20pageInfo%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20startCursor%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20endCursor%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20...%20on%20Commit%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20committedDate%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""noreferrer"">Try it in the explorer</a></p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  search(query: ""is:public"", type: REPOSITORY, first: 10) {&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          ref(qualifiedName: ""master"") {&#xA;            target {&#xA;              ... on Commit {&#xA;                history(first: 10, since: ""2017-01-01T01:01:00"") {&#xA;                  totalCount&#xA;                  pageInfo {&#xA;                    startCursor&#xA;                    endCursor&#xA;                  }&#xA;                  edges {&#xA;                    node {&#xA;                      ... on Commit {&#xA;                        committedDate&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2614364,,,,2018-01-16 22:00:28,"",,0,0,0,2018-01-16 22:00:28
48290822,2,,48285888,12,,"<p>If you are also interested in getting the latest commits for all branches (not just the default branch), you can request reference with prefix <code>refs/heads/</code> :</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner: ""bertrandmartel"", name: ""callflow-workshop"") {&#xA;    refs(refPrefix: ""refs/heads/"", orderBy: {direction: DESC, field: TAG_COMMIT_DATE}, first: 100) {&#xA;      edges {&#xA;        node {&#xA;          ... on Ref {&#xA;            name&#xA;            target {&#xA;              ... on Commit {&#xA;                history(first: 2) {&#xA;                  edges {&#xA;                    node {&#xA;                      ... on Commit {&#xA;                        committedDate&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In your case using <code>refs/</code> also gave you tag ref.</p>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20repository(owner%3A%20%22bertrandmartel%22%2C%20name%3A%20%22callflow-workshop%22)%20%7B%0A%20%20%20%20refs(refPrefix%3A%20%22refs%2Fheads%2F%22%2C%20orderBy%3A%20%7Bdirection%3A%20DESC%2C%20field%3A%20TAG_COMMIT_DATE%7D%2C%20first%3A%20100)%20%7B%0A%20%20%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20%20%20...%20on%20Ref%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20name%0A%20%20%20%20%20%20%20%20%20%20%20%20target%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20...%20on%20Commit%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20history(first%3A%202)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20...%20on%20Commit%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20committedDate%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""noreferrer"">Try it in the explorer</a></p>&#xA;",2614364,,,,2018-01-16 22:26:56,"",,0,3,0,2018-01-16 22:26:56
48342002,2,,48340191,9,,"<p>First you would need to change the Query type definition</p>&#xA;&#xA;<pre><code>products(filter: String): [Product]&#xA;</code></pre>&#xA;&#xA;<p>Now it accepts a string filter and you can use it in the resolver</p>&#xA;&#xA;<pre><code>products: async (_, {filter}) =&gt; {&#xA;  const query = JSON.parse(filter)&#xA;  return (await Products.find(query).toArray()).map(prepare)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then you can call your query like:</p>&#xA;&#xA;<pre><code>query {&#xA;  products(filter: ""{\""price\"": {\""gt\"":2.0} }"") {&#xA;    name,&#xA;    price&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I do not know if there is a way to do this without changing the query itself.</p>&#xA;",7917915,,,,2018-01-19 13:16:06,"",,0,1,0,2018-01-19 13:16:06
48359015,1,,,2,504,"<p>I am trying to retrieve some data from Github's GraphQL API using graphql.js library.</p>&#xA;&#xA;<pre><code>var graph = graphql(""https://api.github.com/graphql"", {&#xA;  method: ""POST"",&#xA;  headers: {&#xA;    ""Authorization"": ""Bearer &lt;my-token-here&gt;"",&#xA;    ""Content-Type"": ""application/json""&#xA;  },&#xA;  fragments: {&#xA;    rateLimitInfo: ""on RateLimit {cost,remaining,resetAt}""&#xA;  }&#xA;});&#xA;graph(`&#xA;    query repo($name: String!, $owner: String!){&#xA;        repository(name:$name, owner:$owner){&#xA;            id      &#xA;        }&#xA;    }&#xA;`,{&#xA;    name: ""freeCodeCamp"",&#xA;    owner: ""freeCodeCamp""&#xA;}).then(function(response){&#xA;    console.log(response);&#xA;}).catch(function(error){&#xA;    console.log(error);&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>My promise is not being fulfilled and always failing. I am getting an HTTP response with code <strong>400 (Bad Request)</strong> and the <code>error</code> argument of the <code>catch</code> function reads:</p>&#xA;&#xA;<pre><code>{&#xA;    message: ""Problems parsing JSON"", &#xA;    documentation_url: ""https://developer.github.com/v3""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have already tried passing the variables as JSON, like so:</p>&#xA;&#xA;<pre><code>{&#xA;    ""name"": ""freeCodeCamp"",&#xA;    ""owner"": ""freeCodeCamp""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But it didn't help. I got the same bad request.</p>&#xA;&#xA;<p>Looking at the Network tab of Chrome's inspector I see what the request payload is. Adding it here in case it give any clues or help.</p>&#xA;&#xA;<pre><code>query=query%20repo(%24name%3A%20String!%2C%20%24owner%3A%20String!)%7Brepository(name%3A%24name%2C%20owner%3A%24owner)%7Bid%7D%7D&amp;variables=%7B%22name%22%3A%22freeCodeCamp%22%2C%22owner%22%3A%22freeCodeCamp%22%7D&#xA;</code></pre>&#xA;&#xA;<p>What am I doing wrong?</p>&#xA;",5753454,,2614364,2018-01-26 19:13:00,2018-01-26 19:13:00,Bad request while trying to access Github's v4 API with graphql.js,<javascript><graphql><github-api><graphql-js><github-graphql>,1,1,0,2018-01-20 17:23:12
48417960,2,,48204084,0,,"<h2>Yes, there is a simple way</h2>&#xA;&#xA;<p>It is possible to pass an array as an argument to a query.</p>&#xA;&#xA;<p>You can read more about <a href=""http://graphql.org/learn/schema/#lists-and-non-null"" rel=""nofollow noreferrer"" title=""GraphQL Lists and Non-Null"">""GraphQL - Lists and Non-Null"" here</a></p>&#xA;&#xA;<p>In your query operation, instead of a single <code>key</code> defined as <code>$key: String!</code> you can pass in an array of non-nullable keys like so <code>$keys: [String!]!</code></p>&#xA;&#xA;<p>You also need to update your resolver function to handle the array of keys and return an either a single <code>Translation</code> or an array of <code>Translation</code>.</p>&#xA;&#xA;<p>And lastly, make sure to update your schema.</p>&#xA;&#xA;<p>If you are executing the API call only once and expect to get a single <code>Translation</code>, it should look something like this:</p>&#xA;&#xA;<pre><code>type Query {&#xA;    translations(language: String!, keys: [String!]!): Translation!&#xA;}&#xA;&#xA;type Translation {&#xA;    key: String!&#xA;    value: String!&#xA;}&#xA;</code></pre>&#xA;",2805067,,,,2018-01-24 08:32:35,"",,0,6,0,2018-01-24 08:32:35
48468018,2,,48359015,1,,"<p>The default behaviour of <a href=""https://github.com/f/graphql.js"" rel=""nofollow noreferrer"">graphql.js</a> is to send the body in form-url-encoded format whereas Github GraphQL api accepts only JSON format. From <a href=""https://github.com/f/graphql.js#change-post-method"" rel=""nofollow noreferrer"">graphql.js readme</a> : </p>&#xA;&#xA;<blockquote>&#xA;  <p>As default, GraphQL.js makes a POST request. But you can change the&#xA;  behavior by setting asJSON.</p>&#xA;&#xA;<pre><code>var graph = graphql(""http://localhost:3000/graphql"", {   &#xA;    asJSON: true&#xA;});&#xA;</code></pre>&#xA;</blockquote>&#xA;&#xA;<p>You can see the difference <a href=""https://github.com/f/graphql.js/blob/c8631faac6c570720082ce5368a3d012f05e40a2/graphql.js#L38-L42"" rel=""nofollow noreferrer"">here</a></p>&#xA;&#xA;<p>The following will work as expected :</p>&#xA;&#xA;<pre><code>var graph = graphql(""https://api.github.com/graphql"", {&#xA;  headers: {&#xA;    ""Authorization"": ""Bearer YOUR_ACCESS_TOKEN""&#xA;  },&#xA;  asJSON: true&#xA;});&#xA;graph(`&#xA;    query repo($name: String!, $owner: String!){&#xA;        repository(name:$name, owner:$owner){&#xA;            id      &#xA;        }&#xA;    }&#xA;`, {&#xA;  name: ""freeCodeCamp"",&#xA;  owner: ""freeCodeCamp""&#xA;}).then(function(response) {&#xA;  console.log(response);&#xA;}).catch(function(error) {&#xA;  console.log(error);&#xA;});&#xA;</code></pre>&#xA;",2614364,,,,2018-01-26 19:10:46,"",,0,1,0,2018-01-26 19:10:46
48507757,1,,,0,352,"<p><code>createNode</code> will not create fields if its value is null. We have a ephemeral data feed that sometimes returns objects where some fields are null, although it is rare.</p>&#xA;&#xA;<p>We want to use this query, but because sometimes the <code>name</code> is null  gatsby will remove it and cause this query to error. </p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>{&#xD;&#xA;  allMyType {&#xD;&#xA;    edges {&#xD;&#xA;      node {&#xD;&#xA;        id&#xD;&#xA;        name&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  } &#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>Is there any way around this issue?</p>&#xA;&#xA;<p>This code simulates the usecase:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const crypto = require('crypto')&#xD;&#xA;exports.createPages = ({ boundActionCreators, graphql }) =&gt; {&#xD;&#xA;  const { createNode } = boundActionCreators&#xD;&#xA;  // Simulate an ephemeral data source that sometimes doesn't have all properties set&#xD;&#xA;  const data = {&#xD;&#xA;    id: '1',&#xD;&#xA;    name: Math.random() &lt; 0.5 ? null : 'Paul Serby' &#xD;&#xA;  }&#xD;&#xA;  createNode({&#xD;&#xA;    ...data,&#xD;&#xA;    id: data.id,&#xD;&#xA;    children: [],&#xD;&#xA;    parent: null,&#xD;&#xA;    internal: {&#xD;&#xA;      type: 'MyType',&#xD;&#xA;      contentDigest: crypto&#xD;&#xA;        .createHash(`md5`)&#xD;&#xA;        .update(JSON.stringify(data))&#xD;&#xA;        .digest(`hex`)&#xD;&#xA;    }&#xD;&#xA;  })&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",730098,,730098,2018-01-29 18:34:04,2018-02-15 13:31:12,How can you ensure a property is always present for a graphql query using createNode in Gatsby,<javascript><node.js><graphql><gatsby>,1,0,0,2018-01-29 18:28:52
48511798,2,,48371313,2,,"<p>Both the REST API and GraphQL API cap the number of items returned from a search query at 1,000 results: <a href=""https://developer.github.com/v3/search/#about-the-search-api"" rel=""nofollow noreferrer"">https://developer.github.com/v3/search/#about-the-search-api</a>.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Just like searching on Google, you sometimes want to see a few pages of search results so that you can find the item that best meets your needs. To satisfy that need, the GitHub Search API provides up to 1,000 results for each search.</p>&#xA;</blockquote>&#xA;",326111,,,,2018-01-29 23:41:11,"",,0,0,0,2018-01-29 23:41:11
48513855,2,,48513854,1,,"<p>The property ""createdAt"" is not included in the optimistic reply.</p>&#xA;&#xA;<pre><code>__typename: 'Comment',&#xA;postedBy: ownProps.currentUser,&#xA;content: commentContent,&#xA;</code></pre>&#xA;&#xA;<p>Should be:</p>&#xA;&#xA;<pre><code>__typename: 'Comment',&#xA;postedBy: ownProps.currentUser,&#xA;createdAt: Date(),&#xA;content: commentContent,&#xA;</code></pre>&#xA;&#xA;<p><strong>A missing field in an optimistic reply will silently fail to return anything to any queries that call that data.</strong></p>&#xA;",4305926,,,,2018-01-30 04:20:56,"",,0,0,0,2018-01-30 04:20:56
48515326,2,,48405163,5,,"<p><code>mainData</code> is most likely ""<a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal"" rel=""noreferrer"">sealed</a>"" so your <code>splice</code> operation is throwing the error:</p>&#xA;&#xA;<pre><code>let updatedList =  mainData.splice(post, 1);&#xA;</code></pre>&#xA;&#xA;<p>The solution is to make a copy of the array (using array destructuring here):</p>&#xA;&#xA;<pre><code>let updatedList = [...mainData].splice(post, 1);&#xA;</code></pre>&#xA;&#xA;<p>You can try this out in Chrome console like so:</p>&#xA;&#xA;<pre><code>a = [1, 2, 3];&#xA;Object.seal(a);&#xA;a.splice(1)&#xA;&#xA;// Uncaught TypeError: Cannot add/remove sealed array elements&#xA;//  at Array.splice (&lt;anonymous&gt;)&#xA;//  at &lt;anonymous&gt;:1:3&#xA;&#xA;[...a].splice(1)&#xA;&#xA;// [2, 3]&#xA;</code></pre>&#xA;",53653,,,,2018-01-30 06:36:40,"",,0,2,0,2018-01-30 06:36:40
48602257,1,48753296,,4,456,"<p>Example:</p>&#xA;&#xA;<pre><code>query {&#xA;  me {&#xA;    starredPosts {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can the server notice that only the ids are requested, and use the already-fetched <code>user.starredPosts</code> (an array of ids), instead of calling <code>Posts.findOne(id)</code> for each id?</p>&#xA;",627729,,,,2018-02-12 18:39:46,How can you prevent running a resolver based on the selection set?,<graphql><apollo-server>,2,0,0,2018-02-03 21:32:12
48715646,1,,,2,535,"<p>I have a Project in Github with some columns, and I'm trying to locate cards (Issues) that are in the closed state.</p>&#xA;&#xA;<p>With GraphQL I'm having trouble constructing a query that can filter the cards.  Currently I have this query:</p>&#xA;&#xA;<pre><code>query {&#xA;  organization(login:""org"") {&#xA;    project(number:3) {&#xA;      columns(first:1){&#xA;        nodes{&#xA;          id,&#xA;          name,&#xA;          cards(first:1){&#xA;            nodes{&#xA;              content {&#xA;                ... on Issue {&#xA;                  url,&#xA;                  state&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This returns the result:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""organization"": {&#xA;      ""project"": {&#xA;        ""columns"": {&#xA;          ""nodes"": [&#xA;            {&#xA;              ""id"": ""xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"",&#xA;              ""name"": ""On Deck"",&#xA;              ""cards"": {&#xA;                ""nodes"": [&#xA;                  {&#xA;                    ""content"": {&#xA;                      ""url"": ""https://github.com/org/repo/issues/606"",&#xA;                      ""state"": ""OPEN""&#xA;                    }&#xA;                  }&#xA;                ]&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What I have gathered thus far is that the ""Project Cards"" are ""UNION"" objects in GraphQL and I have no idea how to add filters to these unions.</p>&#xA;&#xA;<p>Any suggestions?</p>&#xA;&#xA;<p>Thank you!</p>&#xA;",703144,,,,2019-10-15 16:41:38,Querying github project cards with graphql,<github><graphql><querying>,1,1,0,2018-02-09 23:38:39
48752184,2,,48751480,1,,"<p>It looks like the query that silverstripe-graphql is producing is incorrect:</p>&#xA;&#xA;<pre><code>{readQuickPossessions{ID+Title+Address+SquareFeet}}&#xA;</code></pre>&#xA;&#xA;<p>There is no <code>+</code> <a href=""http://graphql.org/learn/queries/"" rel=""nofollow noreferrer"">syntax in GraphQL queries</a></p>&#xA;&#xA;<p>I would recommend trying <a href=""https://github.com/silverstripe/silverstripe-graphql#exposing-a-dataobject-to-graphql"" rel=""nofollow noreferrer"">the YAML method to scaffold an object</a> and seeing if there's a difference, and potentially there's an update that fixes this.</p>&#xA;&#xA;<p>If that doesn't work, and you've checked all the syntax, you should definitely <a href=""https://github.com/silverstripe/silverstripe-graphql/issues"" rel=""nofollow noreferrer"">report an issue</a>.</p>&#xA;",0,user9903,,,2018-02-12 17:29:47,"",,0,3,0,2018-02-12 17:29:47
48752724,2,,47804997,1,,"<p>Recently happened upon this issue myself when trying to edit a response from Apollo using <code>ngModel</code>. This issue is actually due to the fact that Apollo freezes the response objects (<a href=""https://github.com/apollographql/apollo-angular/issues/329"" rel=""nofollow noreferrer"">link</a>), thus you have to copy the object in order to edit it. That's why converting the JSON to a string and back again works. Alternatively you can use the spread operator to copy it (or <code>Object.assign</code>).</p>&#xA;&#xA;<pre><code>this.apollo.watchQuery&lt;any&gt;({&#xA;  query: GET_CONF,&#xA;  variables:{&#xA;      id: id&#xA;  }&#xA;}).valueChanges.subscribe(({ data }) =&gt; {&#xA;  this.conf = {...data.getConfiguration};&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>Note that, <code>Object.assign</code> and the spread operator only create shallow copies. If you have an object with nested objects then you'll to use something like lodash to perform a deep copy.</p>&#xA;",8171618,,8171618,2018-04-16 13:34:43,2018-04-16 13:34:43,"",,0,0,0,2018-02-12 18:03:56
48758494,1,,,4,585,"<p>I am trying to compare two repositories (one is a fork of another), the official way, using <code>compare</code> and going back to 2017-02-11:</p>&#xA;<p><a href=""https://github.com/bitcoin/bitcoin/compare/master@%7B2017-02-11%7D...UnitedBitcoin:master@%7B2017-02-11%7D"" rel=""nofollow noreferrer"">https://github.com/bitcoin/bitcoin/compare/master@{2017-02-11}...UnitedBitcoin:master@{2017-02-11}</a></p>&#xA;<p>Which returns:</p>&#xA;<pre><code>There isn’t anything to compare.&#xA;</code></pre>&#xA;<p>But when I use Github GraphQL to retrieve all commits from both repositories, and then measure the intersection I get 218 commits that share the same <code>sha</code>. Below the query I use to retrieve commits from one repo:</p>&#xA;<pre><code>{&#xA;      repository(owner: &quot;bitcoin&quot;, name: &quot;bitcoin&quot;) {&#xA;        defaultBranchRef {&#xA;          target {&#xA;            ... on Commit {&#xA;              history(first: 100, since: &quot;2017-02-11T00:00:00Z&quot;) {&#xA;                totalCount&#xA;                edges {&#xA;                  node {&#xA;                    committedDate&#xA;                    oid&#xA;                  }&#xA;                }&#xA;                pageInfo {&#xA;                      startCursor&#xA;                      endCursor&#xA;                      hasNextPage&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }   &#xA;</code></pre>&#xA;<p>How can this be explained? Why are both results different?</p>&#xA;<p>FYI: With &quot;measuring intersection&quot; I mean that I compare the IDs (<code>sha</code>) of each commit across both repositories.</p>&#xA;",78297,,-1,2020-06-20 09:12:55,2018-03-02 22:42:49,Github compare gives different results than GraphQL output,<github><github-api><github-graphql>,1,0,0,2018-02-13 02:18:37
48790196,1,,,0,495,"<p>How does one return a set of scalar values from an array in GraphQL? Everything else can be mapped with a key but unsure how to resolve the following: <code>all: [23,45,7,4]</code></p>&#xA;&#xA;<p>elsewhere retrieving data:</p>&#xA;&#xA;<pre><code>  axios.get(`${mostStarredRepoUrl}/stats/participation`)&#xA;       .then((p) =&gt; {&#xA;         console.log(p.data) // {all: [23,45,7,4,..etc..], owner: [0,0,0,..etc..]}&#xA;         return p.data;&#xA;</code></pre>&#xA;&#xA;<p>GraphQL custom object file</p>&#xA;&#xA;<pre><code>  module.exports = new GraphQLObjectType({&#xA;    name: 'GithubParticipations',&#xA;&#xA;    fields: () =&gt; ({&#xA;      all: { type: new GraphQLList(GraphQLFloat) },&#xA;      owner: { type: new GraphQLList(GraphQLFloat) }&#xA;    }),&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>in /graphiql, I get <code>activity: null</code> in the results from <code>query { activity { all } }</code>. Yet in the docs side tab, when i burrow down through my custom types, i get <code>all: [Float]</code></p>&#xA;",1341935,,1341935,2018-02-14 15:14:35,2018-02-14 15:14:35,Resolve an array of floats in GraphQL,<javascript><github-api><graphql-js><scalar>,0,3,0,2018-02-14 15:00:36
48801078,2,,46513476,10,,<p>I guess your <code>user</code> is an instance of <code>GraphQLList</code> that is why the field user is expecting to resolve to an iterable object.</p>&#xA;,5680419,,,,2018-02-15 06:24:23,"",,0,0,0,2018-02-15 06:24:23
48815358,1,,,0,298,"<p>I'm relatively new to GraphQL, and I'm having trouble joining data from two microservices.</p>&#xA;&#xA;<p>Let's say I have two microservices, one with Cars sizes, and other with Car stock.</p>&#xA;&#xA;<p>So the first one responds something like this:</p>&#xA;&#xA;<p><code>GET - /cars/sizes =&gt;</code></p>&#xA;&#xA;<pre><code>[&#xA;  {&#xA;    ""id"": 123,&#xA;    ""size"": ""big""&#xA;  },&#xA;  {&#xA;    ""id"": 456,&#xA;    ""size"": ""small""&#xA;  },&#xA;  ...&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>And the second, something like this</p>&#xA;&#xA;<p><code>GET - /cars/stock =&gt;</code></p>&#xA;&#xA;<pre><code>[&#xA;  {&#xA;    ""id"": 123,&#xA;    ""stock"": 27&#xA;  },&#xA;  {&#xA;    ""id"": 456,&#xA;    ""stock"": 12&#xA;  },&#xA;  ...&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>How can I implement the <code>cars</code> resolver at Apollo GraphQL so a query like this:</p>&#xA;&#xA;<pre><code>query {&#xA;  cars {&#xA;    id&#xA;    size&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Doesn't ask the second microservice, but:</p>&#xA;&#xA;<pre><code>query {&#xA;  cars {&#xA;    id&#xA;    size&#xA;    stock&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Does it only once? Thanks in advance!</p>&#xA;",4660706,,,,2018-02-16 15:39:35,Join two under-serving microservices in Apollo GraphQL,<node.js><graphql><apollo-server>,1,0,0,2018-02-15 20:03:03
48830155,2,,48815358,0,,"<p>Add stock lookup in the resolver for the stock field itself, rather than doing it as part of the car resolver. This way it'll only be executed if you actually query the stock field.</p>&#xA;",15687,,,,2018-02-16 15:39:35,"",,0,2,0,2018-02-16 15:39:35
48840223,1,48840245,,21,6920,<p>I am working on a react app with react-apollo&#xA;calling data through graphql when I check in browser network tab response it shows all elements of the array different&#xA;but what I get or <code>console.log()</code> in my app then all elements of array same as the first element.&#xA;I don't know how to fix please help</p>&#xA;,5174739,,5620913,2018-02-17 10:16:28,2021-03-22 20:09:38,Apollo duplicates first result to every node in array of edges,<apollo><react-apollo>,3,0,0,2018-02-17 10:14:35
48845641,1,48849056,,1,795,"<p>I am have two existing JSON files, one containing location information and the other post information, with location and post IDs joining them:</p>&#xA;&#xA;<p><code>locations.json</code>:</p>&#xA;&#xA;<pre><code>[&#xA;  {&#xA;    ""locationId"": ""location-id-1"",&#xA;    ""name"": ""name-2"",&#xA;    ""posts"": [""post-id-1"", ""post-id-2""]&#xA;  },&#xA;  {&#xA;    ""locationId"": ""location-id-2"",&#xA;    ""name"": ""name-2"",&#xA;    ""posts"": [""post-id-3"", ""post-id-4"", ""post-id-5""]&#xA;  },&#xA;  // ...&#xA;]&#xA;</code></pre>&#xA;&#xA;<p><code>posts.js</code>:</p>&#xA;&#xA;<pre><code>[&#xA;  {&#xA;    ""postId"": ""post-id-1"",&#xA;    ""title"": ""some-title-1"",&#xA;    ""locationId"": ""location-id-1"",&#xA;    ""text"": ""...""&#xA;  },&#xA;  {&#xA;    ""postId"": ""post-id-2"",&#xA;    ""title"": ""some-title-2"",&#xA;    ""locationId"": ""location-id-1"",&#xA;    ""text"": ""...""&#xA;  },&#xA;  // ...&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>I am using <a href=""https://www.gatsbyjs.org/packages/gatsby-transformer-json/"" rel=""nofollow noreferrer""><code>gatsby-transformer-json</code></a> which allows me to create GraphQL queries using <code>allLocationsJson</code> and <code>allPostsJson</code>. However, I don't know how to alter the GraphQL schema to allow for queries like this:</p>&#xA;&#xA;<pre><code>{&#xA;  allLocationsJson {&#xA;    edges {&#xA;      node {&#xA;        locationId&#xA;        name&#xA;        posts {&#xA;          postId&#xA;          title&#xA;          text&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The problem comes with the <code>posts</code> field because GraphQL doesn't realize I want <code>posts</code> to be a list of post objects, not just post IDs. Is there any way for me to accomplish this kind of query with my existing JSON structure?</p>&#xA;",2955366,,,,2018-02-18 06:25:13,Manually define schema using gatsby-transformer-json,<graphql><gatsby>,1,0,0,2018-02-17 20:28:59
48867461,2,,45895597,4,,"<p>You might be hitting <a href=""https://github.com/gatsbyjs/gatsby/issues/3913"" rel=""nofollow noreferrer"">this</a> bug where sometimes sparsely populated fields seem to be missed from GraphQL.</p>&#xA;&#xA;<p>However, to answer your specific question, how can you ensure that you always get <code>null</code> for empty fields. You could do that by using the <code>onCreateNode</code> hook. This hook gets called for every node.</p>&#xA;&#xA;<p>Something like the following pseudocode will achieve your goal:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>exports.onCreateNode = ({node, getNode, boundActionCreators}) =&gt; {&#xA;  const { createNodeField } = boundActionCreators&#xA;&#xA;  if (_.get(node, 'internal.type') === `MarkdownRemark`) {&#xA;&#xA;    // Repeat this for each field&#xA;    createNodeField({&#xA;      node,&#xA;      name: 'date',&#xA;      value: _.get(node, 'frontmatter.date', 'default date'),&#xA;    })&#xA;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This will copy values from <code>frontmatter</code> to <code>fields</code> and ensure that they are always present with some default value if they don't already exist. You can add tests on <code>node.internal.type</code> to filter for specific node types</p>&#xA;&#xA;<p>NOTE: This is totally untested, off the cuff, pseudocode, use at own risk!</p>&#xA;",198232,,,,2018-02-19 13:38:12,"",,0,1,0,2018-02-19 13:38:12
48923672,2,,48917863,3,,"<p>This is currently not possible in GraphQL, however there is an experimental package out there that might be useful for this purpose. </p>&#xA;&#xA;<p><a href=""https://github.com/Sydsvenskan/node-graphql-partials"" rel=""nofollow noreferrer"">https://github.com/Sydsvenskan/node-graphql-partials</a></p>&#xA;&#xA;<p>See example:</p>&#xA;&#xA;<pre><code>partial LinkFields {&#xA;  links(&#xA;    rel: String&#xA;    type: String&#xA;  ): [Link]&#xA;}&#xA;&#xA;partial DocumentFields using LinkFields {&#xA;  uuid: ID!&#xA;&#xA;  # The document type, such as x-im/article&#xA;  type: String&#xA;  # If specified, then a list of the products to which this document's availability is limited&#xA;  products: [String]&#xA;  # The human readable name of the document, often used publicly to identify the document&#xA;  title: String&#xA;&#xA;  # The specific path on the web page where this document is publicly available&#xA;  path: String&#xA;&#xA;  # A single metadata block&#xA;  metaBlock(&#xA;    # The specific metadata block type to get&#xA;    type: String&#xA;  ): MetadataBlock&#xA;}&#xA;&#xA;interface Document using DocumentFields {}&#xA;&#xA;type AuthorDocument implements Document using DocumentFields {}&#xA;</code></pre>&#xA;&#xA;<p>Which results in:</p>&#xA;&#xA;<pre><code>type AuthorDocument implements Document {&#xA;  links(&#xA;    rel: String&#xA;    type: String&#xA;  ): [Link]&#xA;&#xA;  uuid: ID!&#xA;&#xA;  # The document type, such as x-im/article&#xA;  type: String&#xA;  # If specified, then a list of the products to which this document's availability is limited&#xA;  products: [String]&#xA;  # The human readable name of the document, often used publicly to identify the document&#xA;  title: String&#xA;&#xA;  # The specific path on the web page where this document is publicly available&#xA;  path: String&#xA;&#xA;  # A single metadata block&#xA;  metaBlock(&#xA;    # The specific metadata block type to get&#xA;    type: String&#xA;  ): MetadataBlock&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What you can also do, since these are just strings is to create some helper functions that modify the string and insert the necessary fields.</p>&#xA;&#xA;<p>If you are intereseted in following the discussion on Github, you can have a look at the following issue.</p>&#xA;&#xA;<p><a href=""https://github.com/graphql/graphql-js/issues/703"" rel=""nofollow noreferrer"">https://github.com/graphql/graphql-js/issues/703</a></p>&#xA;",8218847,,,,2018-02-22 09:24:02,"",,0,1,0,2018-02-22 09:24:02
48935381,1,,,5,993,"<p>I have the following query:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""org"", name: ""name"") {&#xA;    name&#xA;    object(expression: ""master:package.json"") {&#xA;      ... on Blob {&#xA;        text&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>but as you can see I have to hardcode <code>master</code> in the object expression.  I'm wondering if there's a way to instead use the default branch in that query.  Is that possible without having to do 2 queries (1 to get the default branch, then another to get the file content)?</p>&#xA;",372405,,,,2018-02-26 22:07:33,github graphql api default branch in repository,<api><github><graphql>,1,0,0,2018-02-22 19:07:36
48963342,1,48966978,,1,1732,"<p>I'm a newbie to graphql / graphcool, so this might be simple, but haven't found a solution for this in the documentation or here.</p>&#xA;&#xA;<p>I have a ""Product"" model with one to many relations on ""Bid"" model I want to to get all the bids for at product, but only the bids where user is NOT null. How to do so? this is my none working solution:</p>&#xA;&#xA;<pre><code>query Product($slug: String) {&#xA;Product(slug: $slug) {&#xA;  id&#xA;  slug&#xA;  _bidsMeta {&#xA;    count&#xA;  }&#xA;  bids(filter:{user_not:null}, first:3, orderBy:price_DESC) {&#xA;    id&#xA;    price&#xA;    createdAt&#xA;    user {&#xA;      id&#xA;      email&#xA;    }&#xA;  }&#xA;}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>error::</p>&#xA;&#xA;<p>Argument 'filter' expected type 'BidFilter' but got: {user_not: null}. Reason: 'user_not' Field 'user_not' is not defined in the input type 'BidFilter'</p>&#xA;",425586,,425586,2018-02-24 19:22:42,2018-02-24 19:55:36,GraphQL/Graph.cool Query filter nested relation,<graphql><graphcool>,1,0,0,2018-02-24 13:23:11
48968833,2,,48758494,1,,"<p>The dates on both branches are supposed to define a time <em>period</em>, as explained in ""<a href=""https://help.github.com/articles/comparing-commits-across-time/#comparisons-across-time"" rel=""nofollow noreferrer"">Comparing commits across time</a>"".</p>&#xA;&#xA;<p>In your case though, the exact error message is:</p>&#xA;&#xA;<pre><code>There isn’t anything to compare.&#xA;&#xA;We couldn’t figure out how to compare these references, do they point to valid commits?&#xA;</code></pre>&#xA;&#xA;<p>That seems to indicate the fork did not exist in 2017-02-11.<br>&#xA;If you compare the <a href=""https://github.com/bitcoin/bitcoin/compare/master...UnitedBitcoin:master"" rel=""nofollow noreferrer"">fork against the original repo</a>, the oldest ""forked"" commit is from December 2017.<br>&#xA;There is no valid commit on the fork (ie specific to the fork) at this date.</p>&#xA;&#xA;<p>Between (since: ""2017-02-11T00:00:00Z"") and the beginning of the fork (early Dec. 2017), it is possible that you would still find 268 <em>common</em> commits (since the fork only started a month later)</p>&#xA;",6309,,,,2018-02-24 23:50:57,"",,0,0,0,2018-02-24 23:50:57
48997687,2,,48904526,2,,"<p>Best I can tell is you're parsing into <code>option(Js.Array.t)</code>, but when you go to render, you're referencing it as an <code>array(option(Js.t))</code>. One option to get you closer to resolving would be changing the <code>Array.map</code> to <code>Js.Array.map</code> in the render function.</p>&#xA;&#xA;<p>Since you mentioned alternatives, I'll share what I am doing below:</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>I am using <a href=""https://github.com/glennsl/bs-json"" rel=""nofollow noreferrer"">bs-json</a> to parse my GraphQL responses from the GitHub API.</p>&#xA;&#xA;<p>Here is the query:</p>&#xA;&#xA;<pre><code>let query = {|&#xA;  query {&#xA;    viewer {&#xA;      projects: repositories ( orderBy: { direction: DESC, field: STARGAZERS }, affiliations: [ OWNER ], first: 100, isFork: false ) {&#xA;        nodes {&#xA;          ...RepoFields&#xA;        }&#xA;      }&#xA;      contributions1: pullRequests( first: 100, states: [ MERGED ] ) {&#xA;        nodes {&#xA;          repository {&#xA;            ...RepoFields&#xA;          }&#xA;        }&#xA;      },&#xA;      contributions2: pullRequests( last: 100, states: [ MERGED ] ) {&#xA;        nodes {&#xA;          repository {&#xA;            ...RepoFields&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;  fragment RepoFields on Repository {&#xA;    name&#xA;    nameWithOwner&#xA;    shortDescriptionHTML( limit: 100 )&#xA;    stargazers {&#xA;      totalCount&#xA;    }&#xA;    url&#xA;  }&#xA;|};&#xA;</code></pre>&#xA;&#xA;<p>And then I build a little decoder module:</p>&#xA;&#xA;<pre><code>module Decode = {&#xA;  open Json.Decode;&#xA;&#xA;  let repo = ( ~nameField=""name"", json ) =&gt; {&#xA;    name: json |&gt; field(nameField, string),&#xA;    stars: json |&gt; at([ ""stargazers"", ""totalCount"" ], int),&#xA;    description: json |&gt; field(""shortDescriptionHTML"", string),&#xA;    url: json |&gt; field(""url"", string),&#xA;  };&#xA;&#xA;  let repo2 = json =&gt;&#xA;    json |&gt; field(""repository"", repo(~nameField=""nameWithOwner""));&#xA;&#xA;  let rec uniq = ( free, lst ) =&gt;&#xA;    switch lst {&#xA;    | [] =&gt; free&#xA;    | [ hd, ...tl ] =&gt;&#xA;      switch ( List.mem(hd, tl) ) {&#xA;      | true =&gt; uniq(free, tl)&#xA;      | false =&gt; uniq([ hd, ...free ], tl)&#xA;      }&#xA;    };&#xA;&#xA;  let all = json =&gt; {&#xA;    contributions: (&#xA;        (json |&gt; at([ ""data"", ""viewer"", ""contributions1"", ""nodes"" ], list(repo2))) @&#xA;        (json |&gt; at([ ""data"", ""viewer"", ""contributions2"", ""nodes"" ], list(repo2)))&#xA;      )&#xA;        |&gt; uniq([])&#xA;        |&gt; List.sort(( left, right ) =&gt; right.stars - left.stars),&#xA;    projects: json |&gt; at([ ""data"", ""viewer"", ""projects"", ""nodes"" ], list(repo)),&#xA;  };&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Which parses into a record type of:</p>&#xA;&#xA;<pre><code>type github = {&#xA;  description: string,&#xA;  name: string,&#xA;  stars: int,&#xA;  url: string,&#xA;};&#xA;&#xA;type gh = {&#xA;  contributions: list(github),&#xA;  projects: list(github),&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Here is my fetcher:</p>&#xA;&#xA;<pre><code>let get =&#xA;  Resync.(Refetch.(&#xA;    request(`POST, ""https://api.github.com/graphql"",&#xA;      ~headers=[&#xA;        `Authorization(`Bearer(""******"")),&#xA;        `ContentType(""application/graphql"")&#xA;      ],&#xA;      ~body=`Json(body))&#xA;    |&gt; fetch&#xA;      |&gt; Future.flatMap(&#xA;          fun | Response.Ok(_, response) =&gt; Response.json(response)&#xA;              | Response.Error({ reason }, _) =&gt; raise(FetchError(reason)))&#xA;      |&gt; Future.map(Decode.all)&#xA;  ));&#xA;</code></pre>&#xA;&#xA;<p>^ The decoding is done there on the <code>Future.map</code>. This is another library by Glenn, <a href=""https://github.com/glennsl/refetch"" rel=""nofollow noreferrer"">refetch</a>.</p>&#xA;&#xA;<p>And I am passing the <code>contributions</code> and <code>projects</code> above into my app as props.</p>&#xA;",1507905,,,,2018-02-26 21:50:09,"",,0,3,0,2018-02-26 21:50:09
48997787,2,,48904526,3,,"<p>The large types in the error message can make it hard to see what's going on, so it's helpful to boil it down to just the type differences. It's complaining about the <code>messages</code> field that it says has the type:</p>&#xA;&#xA;<p><code>option(Js.t({. edges : array(option(Js.t(...</code></p>&#xA;&#xA;<p>while it's actually used as:</p>&#xA;&#xA;<p><code>option(Js.t({.. edges : option(Js.Array.t(Js.t(...</code></p>&#xA;&#xA;<p>So <code>edges</code> is actually a non-optional array whereas you are using it as an <code>option(Js.Array.t)</code>. You do not need to check if it is <code>Some</code>, perhaps just if it is an empty array <code>[]</code>. Then you'll want to use <code>Array.map</code> to handle the non-empty case.</p>&#xA;&#xA;<p>Try going through and fixing your usage so that the inferred type matches the the type you're getting from your query until it compiles successfully.</p>&#xA;",65796,,65796,2018-02-26 23:36:00,2018-02-26 23:36:00,"",,0,0,0,2018-02-26 21:58:34
48997897,2,,48935381,3,,"<p>There was a <a href=""https://stackoverflow.com/a/44282072/6309"">related question</a> (with bounty too) on that, detailed <a href=""https://platform.github.community/t/query-repo-contents-with-graphql-api/1896/6"" rel=""nofollow noreferrer"">in this thread</a>... but it is the syntax you are using:</p>&#xA;&#xA;<blockquote>&#xA;  <p>The argument passed to expression on the <a href=""https://developer.github.com/v4/reference/object/repository/"" rel=""nofollow noreferrer""><code>object</code> field</a> is actually a git revision expression suitable for <strong><a href=""https://git-scm.com/docs/git-rev-parse"" rel=""nofollow noreferrer""><code>git rev-parse</code></a></strong>, so I guess you can have fun with it to do advanced querying. </p>&#xA;</blockquote>&#xA;&#xA;<p>So any way to <a href=""https://git-scm.com/docs/git-rev-parse#_specifying_revisions"" rel=""nofollow noreferrer""><strong>specify a revision</strong></a> should do, including HEAD, which would reference the default remote branch. But not the ""current branch"" though.</p>&#xA;",6309,,,,2018-02-26 22:07:33,"",,0,2,0,2018-02-26 22:07:33
49079005,1,,,3,2523,"<p>I'm writing a Vue app that uses vue-apollo to interact with graphql. I'm wondering if it's possible to stub the graphql requests. I thought this should work:</p>&#xA;&#xA;<pre><code>  it('should access a story', function() {&#xA;    cy.server();&#xA;    cy.route('http://localhost:3002/graphql', {&#xA;      data: {&#xA;        Story: { id: 2, title: 'story title', content: 'story content' }&#xA;      }&#xA;    });&#xA;&#xA;    cy.visit('/stories/2');&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>Unfortunately, I get an error from graphql complaining that <code>id</code> is an <code>Int</code> instead of an <code>ObjectId</code>. Am I missing something?</p>&#xA;",355567,,,,2020-08-27 16:36:27,How to stub a call to graphql using cypress?,<graphql><cypress>,2,0,0,2018-03-02 23:37:51
49124547,1,,,0,408,"<p>Im trying to export a named gql query to be used in another react component in order to call it to update the apollo cache. The code works if I use PRODUCTS_QUERY since I export const PRODUCTS_QUERY. However, I would prefer to use the named gql variable 'productsQuery' for better naming convention. However, when I use 'productsQuery' in place of PRODUCTS_QUERY, it will throw an error. Anyone has successfully used the named variable? Please advise. Thanks in advance</p>&#xA;&#xA;<p>In Home.js</p>&#xA;&#xA;<pre><code>export const PRODUCTS_QUERY = gql`&#xA;  {&#xA;    products {&#xA;      id&#xA;      price&#xA;      pictureUrl&#xA;      name&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;export default graphql(PRODUCTS_QUERY, { name: ""productsQuery"" })(Home);&#xA;</code></pre>&#xA;&#xA;<p>In AddProduct.js</p>&#xA;&#xA;<pre><code>// import { PRODUCTS_QUERY } from ""./Home"";&#xA;   import { productsQuery } from ""./Home"";&#xA;&#xA; try {&#xA;      let response = await this.props.mutate({&#xA;        variables: {&#xA;          name,&#xA;          price,&#xA;          picture&#xA;        },&#xA;&#xA;//  - - - - - - - - THIS PART WORKS - - - - - - -&#xA;        // update: (store, { data: { createProduct } }) =&gt; {&#xA;        //   const data = store.readQuery({ query: PRODUCTS_QUERY });&#xA;        //   data.products.push(createProduct);&#xA;        //   store.writeQuery({ query: PRODUCTS_QUERY, data });&#xA;        // }&#xA;&#xA;//  - - - - - - - - THIS PART FAILS - - - - - - -&#xA;        update: (store, { data: { createProduct } }) =&gt; {&#xA;          const data = store.readQuery({ query: productsQuery });&#xA;          data.products.push(createProduct);&#xA;          store.writeQuery({ query: productsQuery, data });&#xA;        }&#xA;      });&#xA;      console.log(""RESPONSE"", response);&#xA;    } catch (err) {&#xA;      console.log(""ERROR"", err);&#xA;    }&#xA;&#xA;    this.props.navigation.navigate(""Home"");&#xA;  };&#xA;</code></pre>&#xA;&#xA;<p>Any way I can export in a manner which allows me to use named variable 'productsQuery' rather than 'PRODUCTS_QUERY' since purpose of naming is to make naming convention standardized. Thanks in advance</p>&#xA;",7285771,,7285771,2018-03-08 11:33:17,2018-12-01 16:12:00,React Apollo using Named Variable,<graphql><graphql-js><react-apollo>,2,4,0,2018-03-06 06:21:56
49136171,2,,49078788,3,,"<p>Your <a href=""https://stackoverflow.com/a/49082397/326111"">answer</a> is probably the most efficient way in terms of pagination, but another approach you could take is to iterate over all of the user's owned repositories, and for each of those repositories fetch their issues with something like:</p>&#xA;&#xA;<pre><code>query($userLogin: String!) {&#xA;  user(login: $userLogin) {&#xA;    repositories(affiliations: [OWNER], last: 10) {&#xA;      edges {&#xA;        node {&#xA;          issues(states: [OPEN], last: 10) {&#xA;            edges {&#xA;              node {&#xA;                createdAt&#xA;                title&#xA;                url&#xA;                repository {&#xA;                  name&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",326111,,,,2018-03-06 16:57:13,"",,0,2,0,2018-03-06 16:57:13
49143973,1,49151845,,4,3674,"<p>I have a graphQL object defined here: </p>&#xA;&#xA;<pre><code>const graphql = require('graphql');&#xA;const { GraphQLObjectType } = require('graphql');&#xA;&#xA;const ProductType = new GraphQLObjectType({&#xA;    name: 'Product',&#xA;    description: 'Product GraphQL Object Schemal Model',&#xA;    fields: {&#xA;        productId: { type: graphql.GraphQLString },&#xA;        SKU: { type: graphql.GraphQLString },&#xA;        quantity: { type: graphql.GraphQLFloat },&#xA;        unitaryPrice:  { type: graphql.GraphQLFloat },&#xA;        subTotal: { type: graphql.GraphQLFloat },&#xA;        discount: { type: graphql.GraphQLFloat },&#xA;        totalBeforeTax: { type: graphql.GraphQLFloat },&#xA;        isTaxAplicable: { type: graphql.GraphQLBoolean },&#xA;        unitaryTax: { type: graphql.GraphQLFloat },&#xA;        totalTax: { type: graphql.GraphQLFloat }&#xA;    }&#xA;});&#xA;&#xA;module.exports.ProductType = { ProductType };&#xA;</code></pre>&#xA;&#xA;<p>And then, I want to use this ProductType inside another GraphQL object, but I need that object to be an array structure, something like this:</p>&#xA;&#xA;<pre><code>const graphql = require('graphql');&#xA;const { GraphQLObjectType } = require('graphql');&#xA;&#xA;const { ProductType } = require('./product');&#xA;&#xA;const ShoppingCartType = new GraphQLObjectType({&#xA;    name: 'ShoppingCart',&#xA;    description: 'Shopping Cart GraphQL Object Schema Model',&#xA;    fields: {&#xA;        cartId: { type: graphql.GraphQLString },&#xA;        userId: { type: graphql.GraphQLString },&#xA;        products: [{ type: ProductType }]&#xA;    }&#xA;});&#xA;&#xA;module.exports.ShoppingCartType = { ShoppingCartType };&#xA;</code></pre>&#xA;&#xA;<p>Is this possible?</p>&#xA;",2749095,,,,2018-09-01 21:45:36,GraphQL field of type graphql object within an array,<node.js><graphql><graphql-js>,1,0,0,2018-03-07 04:11:15
49198259,1,,,1,1030,"<p>fellow hackers! So, I'm fairly new to using React-Apollo and Graphql. I currently have a query that looks like this ...</p>&#xA;&#xA;<pre><code>query GET_USER($id: Int!) { &#xA;   getUser(id: $id) {&#xA;      id&#xA;      firstname&#xA;      lastname&#xA;      pets {&#xA;        id&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Feeding it into my props...</p>&#xA;&#xA;<p><code>const { data: { getUser = [] } } = this.props;</code></p>&#xA;&#xA;<p>And trying to map through pets using...</p>&#xA;&#xA;<pre><code>{getUser.pets.map(pet =&gt;&#xA;    &lt;div&gt;&#xA;        {pet.name}&#xA;    &lt;/div&gt;&#xA; )}&#xA;</code></pre>&#xA;&#xA;<p>After many attempts, I've had no luck in successfully rendering the data. Although, if I console.log(getUser.pets) I get back an array of objects.</p>&#xA;&#xA;<pre><code>(4) [{…}, {…}, {…}, {…}]&#xA;0: {id: 1, name: ""Ginger"", __typename: ""Pet"", Symbol(id): ""Pet:1""}&#xA;1:  {id: 2, name: ""Marco"", __typename: ""Pet"", Symbol(id): ""Pet:2""}&#xA;2: {id: 3, name: ""Bella"", __typename: ""Pet"", Symbol(id): ""Pet:3""}&#xA;3: {id: 4, name: ""Chiki"", __typename: ""Pet"", Symbol(id): ""Pet:4""}&#xA;length: 4&#xA;__proto__: Array(0)&#xA;</code></pre>&#xA;&#xA;<p>Here is the link to the file repo&#xA;<a href=""https://github.com/Jesus369/frendapet/blob/master/src/routes/userpage/UserRoute.js"" rel=""nofollow noreferrer"">https://github.com/Jesus369/frendapet/blob/master/src/routes/userpage/UserRoute.js</a></p>&#xA;&#xA;<p>Any suggestions on how to render the data to the client?</p>&#xA;",9468654,,5535040,2018-03-09 16:44:19,2018-03-09 16:44:19,react-apollo cannot read property map of undefined,<reactjs><graphql>,0,8,0,2018-03-09 16:36:43
49199360,2,,49034442,4,,"<p>Unfortunately a mutation to create issues (or labels) does not exist yet. You can submit a schema request at <a href=""https://platform.github.community/c/graphql-api"" rel=""nofollow noreferrer"">https://platform.github.community/c/graphql-api</a> and GitHub will prioritize the creation of that mutation.</p>&#xA;",326111,,,,2018-03-09 17:45:02,"",,0,3,0,2018-03-09 17:45:02
49201960,1,49202299,,1,79,"<pre><code>Products&#xA;-- id [int]&#xA;-- name [string]&#xA;-- views [int]&#xA;</code></pre>&#xA;&#xA;<p>Is it possible to write a query that would return <code>products</code> ordered by one or more fields (for example number of views and id) and make every 3rd item totally random?</p>&#xA;&#xA;<p>The general idea is that I have some products:</p>&#xA;&#xA;<pre><code>+----+-----------+-------+&#xA;| id |   name    | views |&#xA;+----+-----------+-------+&#xA;|  1 | Product 1 |    12 |&#xA;|  2 | Product 2 |    65 |&#xA;|  3 | Product 3 |    23 |&#xA;|  4 | Product 4 |    23 |&#xA;|  5 | Product 5 |    32 |&#xA;|  6 | Product 6 |    76 |&#xA;|  7 | Product 7 |    35 |&#xA;|  8 | Product 8 |    91 |&#xA;|  9 | Product 9 |    73 |&#xA;+----+-----------+-------+&#xA;</code></pre>&#xA;&#xA;<p>And I want to show the most popular products so I want to order them by views. However, products that are not popular will not be able to compete with other products if they will not get enough traction. It would be nice if I could occasionally show even the unpopular products among the popular products so that they could become popular too.</p>&#xA;&#xA;<p><strong>Database:</strong> I will use graphql and mysql but any solution will be helpful</p>&#xA;&#xA;<p><strong>Total items:</strong> Thousands</p>&#xA;&#xA;<p><strong>Pagination:</strong> 9 - 18 per page</p>&#xA;&#xA;<p><strong>Important thing is that I have to create the database structure only once. Any other column (property) that would help with the ordering can be set up. Only number of <code>views</code> will change over time.</strong></p>&#xA;",4766136,,5546267,2018-03-09 21:31:35,2018-03-09 21:31:35,SELECT all ORDER BY views and make every 3rd item random,<mysql><sql><database><graphql>,1,11,0,2018-03-09 20:51:25
49234296,1,,,2,548,"<p>I'm trying out Draft.js with my React application running with a GraphQL server. Currently I have a editor where I can type and add code blocks and submit it to the server. Here's the code for that:</p>&#xA;&#xA;<pre><code>const contentState = this.state.editorState.getCurrentContent()&#xA;&#xA;const { content } = this.state.values&#xA;console.log('raw', convertToRaw(contentState))&#xA;&#xA;let response;&#xA;try {&#xA;  response = await this.props.mutate({&#xA;    variables: {&#xA;      content: JSON.stringify(contentState)&#xA;    },&#xA;  })&#xA;  console.log(response)&#xA;</code></pre>&#xA;&#xA;<p><code>response</code> gives me </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/4Dbu2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4Dbu2.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>And that's no good. I rather have the <code>convertToRaw(contentState)</code> since that gives me:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/eTjfG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eTjfG.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>The reason why I'm not doing <code>convertToRaw(contentState)</code> at <code>mutate</code> is because it gives me this error:</p>&#xA;&#xA;<p><strong>contentState.getBlockMap is not a function</strong></p>&#xA;&#xA;<p>So my questions are how can I use the <code>convertToRaw</code> function when submitting the text to the server and how can I later parse the text on the frontend so it wont look like this:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/F1qhp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/F1qhp.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Thanks for reading my question. All help is appreciated!</p>&#xA;&#xA;<p>Have a great day.</p>&#xA;",7284779,,,,2018-03-12 11:37:23,Parsing the text with React from server with Draft.js,<javascript><reactjs><graphql><draftjs>,0,2,0,2018-03-12 11:37:23
49237159,1,49376618,,6,2274,"<p>I have tired pagination using endCursor and hasNextPage in github grpahQL API to get more than 100 data. Query I used is:</p>&#xA;&#xA;<pre><code>query {&#xA;      organization(login:""XXX"") {&#xA;                   repository(name:""XX"") {&#xA;                   pullRequests(first:100, states:[OPEN], after: ""XXX"" ) {&#xA;        pageInfo{&#xA;          hasNextPage&#xA;          endCursor&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>It is working. But in order to access further details,iterative pagination needs to be done. Can anyone provides an efficient alternative to traverse all pages programatically in GraphQL API?</p>&#xA;",3686193,,,,2021-11-19 18:42:20,Display more than 100 entries through GraphQL API,<graphql><github-api><github-graphql>,2,1,0,2018-03-12 14:01:57
49255240,1,49267642,,2,1568,"<p>I'm trying to do a GraphQL query to GitHub v4 API in a JS app but I'm having a ""Problem with JSON"" error.&#xA;So I'm trying to do it with cURL but it seems to have a problem I can't see.</p>&#xA;&#xA;<pre>&#xA;&#xA;    curl -H ""Authorization: token bearer"" -H  ""Content-Type:application/json"" -X POST -d '{ ""query"": ""query {&#xA;      viewer {                                                             &#xA;        watching(first: 3, orderBy: {field: UPDATED_AT, direction: DESC}) {&#xA;          nodes {                                                                                            &#xA;            refs(refPrefix: \""refs/heads/\"", orderBy: {direction: DESC, field: TAG_COMMIT_DATE}, last: 100) {&#xA;              nodes {   &#xA;                target {         &#xA;                  ... on Commit {       &#xA;                    history(first: 10) {&#xA;                      ...CommitFragment&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }          &#xA;      rateLimit {&#xA;        limit&#xA;        cost     &#xA;        remaining&#xA;        resetAt&#xA;      }&#xA;    }&#xA;&#xA;    fragment CommitFragment on CommitHistoryConnection {&#xA;      nodes {  &#xA;        message &#xA;        author {&#xA;          name               &#xA;          avatarUrl(size: 30)&#xA;        }&#xA;      }&#xA;    }                                  &#xA;&#xA;</pre>&#xA;&#xA;<p>I want to mention that the request is working on the <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">github.com/v4/explorer/</a> website.&#xA;And I have escaped the quotes...</p>&#xA;",7220557,,7220557,2018-03-13 11:47:07,2020-10-09 19:27:41,GraphQL complex cURL query (GitHub API v4),<json><curl><github><graphql><github-api>,1,0,0,2018-03-13 11:40:47
49267642,2,,49255240,1,,"<p>The problem is that the query is JSON stringified, in your request you add new lines in the JSON string field <code>query</code> which is not permitted :</p>&#xA;<pre class=""lang-bash prettyprint-override""><code>curl -H &quot;Authorization: token YOUR_TOKEN&quot; \&#xA;     -H  &quot;Content-Type:application/json&quot; \&#xA;     -d '{ &#xA;          &quot;query&quot;: &quot;{ viewer { watching(first: 3, orderBy: {field: UPDATED_AT, direction: DESC}) { nodes { refs(refPrefix: \&quot;refs/heads/\&quot;, orderBy: {direction: DESC, field: TAG_COMMIT_DATE}, last: 100) { nodes { target { ... on Commit { history(first: 10) { ...CommitFragment } }}}}}}} rateLimit { limit cost remaining resetAt}}fragment CommitFragment on CommitHistoryConnection { nodes { message author { name avatarUrl(size: 30) } } }&quot;&#xA;      }' https://api.github.com/graphql&#xA;</code></pre>&#xA;<p>You can also use <a href=""/questions/tagged/bash"" class=""post-tag"" title=""show questions tagged &#39;bash&#39;"" rel=""tag"">bash</a> <a href=""https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html"" rel=""nofollow noreferrer"">parameter expansion</a> to remove new lines and escape double quotes :</p>&#xA;<pre><code>token=&quot;YOUR_TOKEN&quot;&#xA;query='{&#xA;  viewer {&#xA;    watching(first: 3, orderBy: {field: UPDATED_AT, direction: DESC}) {&#xA;      nodes {&#xA;        refs(refPrefix: &quot;refs/heads/&quot;, orderBy: {direction: DESC, field: TAG_COMMIT_DATE}, last: 100) {&#xA;          nodes {&#xA;            target {&#xA;              ... on Commit {&#xA;                history(first: 10) {&#xA;                  ...CommitFragment&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;  rateLimit {&#xA;    limit&#xA;    cost&#xA;    remaining&#xA;    resetAt&#xA;  }&#xA;}&#xA;&#xA;fragment CommitFragment on CommitHistoryConnection {&#xA;  nodes {&#xA;    message&#xA;    author {&#xA;      name&#xA;      avatarUrl(size: 30)&#xA;    }&#xA;  }&#xA;}'&#xA;queryStr=&quot;${query//[$'\n|\r\n']}&quot;&#xA;&#xA;curl -s -H &quot;Authorization: token $token&quot; \&#xA;     -H  &quot;Content-Type:application/json&quot; \&#xA;     -d '{ &#xA;          &quot;query&quot;: &quot;'&quot;${queryStr//[\&quot;]/\\\&quot;}&quot;'&quot;&#xA;      }' https://api.github.com/graphql&#xA;</code></pre>&#xA;<p>In case of Javascript, if you use <code>XMLHttpRequest</code> :</p>&#xA;<pre class=""lang-javascript prettyprint-override""><code>var http = new XMLHttpRequest();&#xA;var url = &quot;https://api.github.com/graphql&quot;;&#xA;http.open(&quot;POST&quot;, url, true);&#xA;&#xA;http.setRequestHeader(&quot;Content-type&quot;, &quot;application/json&quot;);&#xA;http.setRequestHeader(&quot;Authorization&quot;, &quot;token YOUR_TOKEN&quot;);&#xA;&#xA;http.onreadystatechange = function() {&#xA;    if (http.readyState == 4 &amp;&amp; http.status == 200) {&#xA;        alert(http.responseText);&#xA;    }&#xA;}&#xA;&#xA;http.send(JSON.stringify({&#xA;    &quot;query&quot;: '{ viewer { watching(first: 3, orderBy: {field: UPDATED_AT, direction: DESC}) { nodes { refs(refPrefix: &quot;refs/heads/&quot;, orderBy: {direction: DESC, field: TAG_COMMIT_DATE}, last: 100) { nodes { target { ... on Commit { history(first: 10) { ...CommitFragment } }}}}}}} rateLimit { limit cost remaining resetAt}}fragment CommitFragment on CommitHistoryConnection { nodes { message author { name avatarUrl(size: 30) } } }'&#xA;}));&#xA;</code></pre>&#xA;<p>You can also find examples using <a href=""https://stackoverflow.com/a/48036597/2614364"">apollo-client</a> and <a href=""https://stackoverflow.com/a/48468018/2614364"">graphql.js</a></p>&#xA;",2614364,,2614364,2020-10-09 19:27:41,2020-10-09 19:27:41,"",,0,1,0,2018-03-13 23:43:14
49275814,2,,45787021,7,,"<p>This <code>query_id</code> code <code>https://www.instagram.com/graphql/query/?query_id=17851374694183129&amp;id=&lt;user_id&gt;&amp;first=1000&amp;after=&lt;end_cursor&gt;</code> is designed to return ONLY media data it does NOT include user profile data.</p>&#xA;<p>The simplest solution is to use what IG uses on initial page requests:</p>&#xA;<p><code>https://www.instagram.com/&lt;ig_username&gt;/?__a=1</code></p>&#xA;<p>Here is my RubyOnRails setup:</p>&#xA;<p><code>profile = JSON.parse(open(&quot;https://www.instagram.com/&lt;ig_username&gt;/?__a=1&quot;).read)</code></p>&#xA;<p>... now grab your variables:</p>&#xA;<pre class=""lang-rb prettyprint-override""><code>profile.['graphql']['user']['profile_pic_url']&#xA; &#xA;profile.['graphql']['user']['biography']&#xA;&#xA;profile.['graphql']['user']['external_url']&#xA;&#xA;profile.['graphql']['user']['edge_followed_by']['count']&#xA;&#xA;profile.['graphql']['user']['edge_follow']['count']&#xA;&#xA;profile.['graphql']['user']['id']&#xA;&#xA;profile.['graphql']['user']['edge_owner_to_timeline_media']['count']&#xA;&#xA;profile.['graphql']['user']['profile_pic_url']&#xA;&#xA;profile.['graphql']['user']['profile_pic_url_hd']&#xA;</code></pre>&#xA;<p>And your <code>followed_by_count</code> is now <code>['graphql']['user']['edge_followed_by']['count']</code></p>&#xA;",1368601,,6460856,2020-06-22 05:04:18,2020-06-22 05:04:18,"",,0,6,0,2018-03-14 10:52:30
49309139,1,,,2,500,"<p>I'm trying to make a list of GitHub issue titles within a project. To do that I'm using the GraphQL API. There was no trouble with this when I had &lt; 100 issues, (one page) but now that there are over 100, I need to get multiple pages, which means I need to recursively call the function.</p>&#xA;&#xA;<p>The problem is that since it's asynchronous I'm not sure how to make that final list. I need one array with all titles, so that I can alphabetize it and output it. The best I can do now is alphabetize each chunk.</p>&#xA;&#xA;<pre><code>function buildIssueList(cursor){&#xA;    var title_list = [];&#xA;    var url = graphqlapi;&#xA;    var query = """";&#xA;    if (cursor == """"){&#xA;        query = 'query { repository(owner:”me”, name:”myrepo”) { projects(first: 10) { edges { node { name columns(first: 10) { nodes { name cards(first: 100) { totalCount edges { node { content { ... on Issue { title } } } cursor } pageInfo { endCursor hasNextPage } } } } } } } } }';&#xA;    }&#xA;    else {&#xA;        query = 'query { repository(owner:""me"", name:""myrepo"") { projects(first: 10) { edges { node { name columns(first: 10) { nodes { name cards(first: 100, after:' + '\""' + cursor + '\""' + ') { totalCount edges { node { content { ... on Issue { title } } } cursor } pageInfo { endCursor hasNextPage } } } } } } } } }';&#xA;    } &#xA;    var data = {'query': query}&#xA;    var column_list = []&#xA;    var mresponse = $.ajax({&#xA;        headers: {&#xA;            Authorization: ""Bearer mytoken""&#xA;        },&#xA;        dataType: ""json"",&#xA;        type: 'POST',&#xA;        url: url,&#xA;        data: JSON.stringify(data)&#xA;        }).done(function(data) {&#xA;            data[""data""]['repository']['projects']['edges'].forEach(function(entry) {&#xA;                if (entry[""node""][""name""] == “myprojectname”){&#xA;                    column_list = entry[""node""][""columns""][""nodes""];&#xA;                }&#xA;            });&#xA;            column_list.forEach(function(column) {&#xA;                if (column[""cards""][""pageInfo""][""hasNextPage""] == true) {&#xA;                    var tempar = [];&#xA;                    column[""cards""][""edges""].forEach(function(node) {&#xA;                        tempar.push(node[""node""][""content""][""title""]);&#xA;                    });&#xA;                    addtoDropdown(tempar);&#xA;                    var next_cursor = column[""cards""][""pageInfo""][""endCursor""];&#xA;                    buildIssueList(next_cursor);&#xA;&#xA;                } else {&#xA;                    var ftempar = [];&#xA;                    column[""cards""][""edges""].forEach(function(node) {&#xA;                        ftempar.push(node[""node""][""content""][""title""]);&#xA;                    });&#xA;                    addtoDropdown(ftempar);&#xA;                }&#xA;            });&#xA;        });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>""addtoDropdown()"" alphabetizes the array it's passed and adds it to the master list. And, I don't want to just continuously alphabetize the master list for the duration of my program. I want to make my full list, and alphabetize it once.</p>&#xA;",2278676,,2278676,2018-03-16 19:23:03,2018-03-16 19:23:03,List all issues in a Github project (with GraphQL),<javascript><jquery><ajax><github><graphql>,0,0,0,2018-03-15 21:02:15
49327083,1,49327668,,5,1305,"<p>Given an issue or pull request number, I'd like to get the following information using a single query to the <a href=""https://developer.github.com/v4/"" rel=""noreferrer"">GitHub GraphQL API</a>:</p>&#xA;&#xA;<ul>&#xA;<li>Whether it is an issue or a pull request</li>&#xA;<li>The state of the issue (open, closed) or PR (open, closed, merged)</li>&#xA;<li>If the issue or PR is closed, who closed it and when</li>&#xA;<li>If the issue or PR was merged, who merged it and when</li>&#xA;</ul>&#xA;&#xA;<p>Using the following query, I have all of this working except for determining <strong>who</strong> closed the issue or PR:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""Automattic"", name: ""wp-calypso"") {&#xA;    issueOrPullRequest(number: 23226) {&#xA;      __typename&#xA;      ... on Closable {&#xA;        closed&#xA;        closedAt&#xA;        # TODO: How to get ClosedEvent { actor } ?&#xA;      }&#xA;      ... on Issue {&#xA;        issueState: state&#xA;        title&#xA;      }&#xA;      ... on PullRequest {&#xA;        prState: state&#xA;        title&#xA;        merged&#xA;        mergedAt&#xA;        mergeCommit {&#xA;          committer {&#xA;            user {&#xA;              login&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm running this query using GitHub's GraphQL Explorer tool:  <a href=""https://developer.github.com/v4/explorer/"" rel=""noreferrer"">https://developer.github.com/v4/explorer/</a></p>&#xA;&#xA;<p>I can see the issue or PR as a <a href=""https://developer.github.com/v4/interface/closable/"" rel=""noreferrer""><code>Closable</code></a> but I think I need to get from there to the last <a href=""https://developer.github.com/v4/object/closedevent/"" rel=""noreferrer""><code>ClosedEvent</code></a> that affected that object.  This is the part I haven't been able to figure out yet.</p>&#xA;&#xA;<p>In GitHub's v3 REST API, determining all of this information may require 2 requests.  For a pull request that was <strong>closed</strong> (not <strong>merged</strong>), the <code>closed_by</code> field only appears when requesting the pull request <strong>as an issue</strong> (via the <a href=""https://developer.github.com/v3/issues/"" rel=""noreferrer""><code>issues</code></a> API call).  All other pull request information is available via the <a href=""https://developer.github.com/v3/pulls/"" rel=""noreferrer""><code>pulls</code></a> API call.</p>&#xA;",106302,,,,2018-03-16 18:48:35,"Using GitHub's GraphQL API, how can I tell who closed an issue or pull request?",<graphql><github-api>,1,0,0,2018-03-16 18:09:55
49327668,2,,49327083,2,,"<p>One roundabout (and ugly) way for getting the actor who closed the issue is as follows (inspired by this <a href=""https://platform.github.community/t/get-the-assigned-and-closed-dates-of-an-issue/4101"" rel=""nofollow noreferrer"">answer</a>). I'm hoping there might be a better way but here's an approach as of now.</p>&#xA;&#xA;<p>The trick is to query for a considerable amount of events in a given timeline (if you are absolutely sure that there are no comments on an issue/PR after it is closed, you can say <code>timeline(last: 1)</code>), find the <code>ClosedEvent</code> or <code>MergedEvent</code> among them and extract the <code>actor</code></p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""Automattic"", name: ""wp-calypso"") {&#xA;    issueOrPullRequest(number: 23226) {&#xA;      __typename&#xA;      ... on Closable {&#xA;        closed&#xA;        closedAt&#xA;      }&#xA;      ... on Issue {&#xA;        timeline(last: 100) {&#xA;          edges {&#xA;            node {&#xA;              __typename&#xA;              ... on ClosedEvent {&#xA;                actor{&#xA;                  login&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;      ... on PullRequest {&#xA;        timeline(last: 100) {&#xA;          edges {&#xA;            node {&#xA;              __typename&#xA;              ... on MergedEvent {&#xA;                actor{&#xA;                  login&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2102114,,,,2018-03-16 18:48:35,"",,0,5,0,2018-03-16 18:48:35
49347775,1,49351248,,1,1350,"<p>When developing Gatsby pages/views, there's a <code>graphql</code> template literal available. Not sure exactly where it comes from.</p>&#xA;&#xA;<p>When creating pages with the Gatsby node api (<code>gatsby-node.js</code>), a <code>graphql</code> parser is injected into functions such as <code>createPages</code></p>&#xA;&#xA;<p>I'd like to know how can I share GraphQL fragments between the pages and the node part. Ideally, I want both to use the template literal <code>graphql</code> so that my IDE could understand it's GraphQL and wire syntax highlighting. Currently my node queries are plain strings passed to a graphql function, and I don't have autocomplete for that. And I end up with query duplication too.</p>&#xA;&#xA;<p>I tried to add/import official graphql parser, without great success, and not sure it's supposed to be done that way.</p>&#xA;&#xA;<p>Ideally I'd like to get rid of the global <code>graphql</code> template literal that is available in pages without any import, and have a solution that really imports (or require for older node versions) so that it can be shared safely.</p>&#xA;&#xA;<p>Any idea? </p>&#xA;",82609,,,,2018-03-18 18:07:01,How to share GraphQL fragments between node and Gatsby pages?,<webpack><graphql><gatsby>,1,0,0,2018-03-18 12:17:41
49348326,1,49349826,,9,11746,"<p>One of the advantage of Github Search v4 (GraphQL) over v3 is that it can selectively pick the fields that we want, instead of always getting them all. However, the problem I'm facing now is how to get certain fields. </p>&#xA;&#xA;<p>I tried the online help but it is more convolution to me than helpful. Till now, I'm still unable to find the fields for size, score and open issues for the returned repository(ies). </p>&#xA;&#xA;<p>That's why I'm wondering if there is a way to get them all, like <code>Select *</code> in SQL. Thx. </p>&#xA;",2125837,,,,2018-03-18 15:45:51,Select * for Github GraphQL Search,<github><field><graphql><github-api><github-graphql>,2,1,0,2018-03-18 13:20:14
49353150,2,,49344444,1,,"<p>This is not an answer but an update of what I've collected so far. </p>&#xA;&#xA;<ul>&#xA;<li><p>According to ""<a href=""https://stackoverflow.com/questions/49348326/"">Select * for Github GraphQL Search</a>"", not all above criteria might be available in the Repository edge. Namely, the ""total commit"", ""open issues"" and ""score"" might not be available. </p></li>&#xA;<li><p>The purpose of the question is obviously to find the valuable repositories and weed off the lower-quality ones. I've <a href=""https://gist.github.com/suntong/30ca6ef2a7c32c966a045118fc57de6c"" rel=""nofollow noreferrer""><strong>collected</strong></a> all the available fields that might be helpful for such assessment <a href=""https://gist.github.com/suntong/97a919c21e6adc53447f5059a34d334a"" rel=""nofollow noreferrer"">here</a>. </p></li>&#xA;</ul>&#xA;&#xA;<p>A copy of it as of 2018-03-18:</p>&#xA;&#xA;<pre><code>query SearchMostTop10Star($queryString: String!, $number_of_repos:Int!) {&#xA;  search(query: $queryString, type: REPOSITORY, first: $number_of_repos) {&#xA;    repositoryCount&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          name&#xA;          url&#xA;          description&#xA;#         shortDescriptionHTML&#xA;          repositoryTopics(first: 12) {nodes {topic {name}}}&#xA;          primaryLanguage {name}&#xA;          languages(first: 3) { nodes {name} }&#xA;          releases {totalCount}&#xA;          forkCount&#xA;          pullRequests {totalCount}&#xA;          stargazers {totalCount}&#xA;          issues {totalCount}&#xA;          createdAt&#xA;          pushedAt&#xA;          updatedAt&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;variables {&#xA;  ""queryString"": ""language:JavaScript stars:&gt;10000"", &#xA;  ""number_of_repos"": 3 &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Anyone can try it out <a href=""https://developer.github.com/v4/guides/using-the-explorer/"" rel=""nofollow noreferrer"">as per here</a>. </p>&#xA;",2125837,,2125837,2018-03-18 22:28:58,2018-03-18 22:28:58,"",,0,2,0,2018-03-18 21:46:51
49375717,2,,48861980,0,,"<p>You can see Declarative mutation in this repo..&#xA;<a href=""https://github.com/apollographql/GitHunt-React"" rel=""nofollow noreferrer"">https://github.com/apollographql/GitHunt-React</a></p>&#xA;",8323350,,,,2018-03-20 03:02:40,"",,0,0,0,2018-03-20 03:02:40
49398068,1,,,0,59,"<p>I'm trying to retrieve last commit and the number of releases for a public repo using Github API v4, following is my query:</p>&#xA;&#xA;<pre><code> {    &#xA;    repository(owner: ""tensorflow"", name: ""tensorflow"") {&#xA;       id&#xA;       name&#xA;       releases {&#xA;          totalCount&#xA;       }&#xA;      pushedAt&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>The output that I get is: </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""id"": ""MDEwOlJlcG9zaXRvcnk0NTcxNzI1MA=="",&#xA;      ""name"": ""tensorflow"",&#xA;      ""releases"": {&#xA;        ""totalCount"": 49&#xA;      },&#xA;      ""pushedAt"": ""2018-03-21T03:28:59Z""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The API returns number of releases as 49, but if you check the <a href=""http://github.com/tensorflow/tensorflow"" rel=""nofollow noreferrer"">repo page</a>, the number of releases at this time is 51.&#xA;Any idea why these two values are different? How do you retrieve the values seen in the repo page?</p>&#xA;&#xA;<p>Also the datetime returned by <code>pushedAt</code> gives a different time, is there a way to retrieve last commit time in default branch?</p>&#xA;",2035645,,,,2018-03-21 05:46:34,Github GraphQL API gives different values compared to what we see on the repo page,<graphql><github-api>,1,0,0,2018-03-21 04:13:12
49442317,1,49579559,,3,1764,"<p>How to search for Github Repositories using GraphQL, and get its <em>total commits count</em> as well in return? </p>&#xA;&#xA;<p>It looks strange to me that <a href=""https://stackoverflow.com/questions/49348326/"">all fields available describing Repositories</a> contains total count of commit <em>comments</em> but not total count of <em>commits</em>. </p>&#xA;",2125837,,2482441,2018-06-21 08:55:03,2019-08-26 08:17:08,"Github GraphQL Repository Query, commits totalCount",<search><github><repository><graphql><github-graphql>,1,1,0,2018-03-23 04:22:43
49451234,1,49453395,,1,2746,"<p>I've been trying to research on how to add another root property of a GraphQL response but found nothing after 1 hour.</p>&#xA;&#xA;<p>Normally, a GraphQL query looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;   myQuery() {&#xA;       name&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It responds with:</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;       ""myQuery"": []&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm curious if I can add another root property in this response say ""meta""</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;       ""myQuery"": []&#xA;    },&#xA;    ""meta"": {&#xA;       ""page"": 1,&#xA;       ""count"": 10,&#xA;       ""totalItems"": 90&#xA;     }&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is this possible, if not what's the best approach in tackling this with respect to GraphQL?</p>&#xA;&#xA;<p>Thanks!</p>&#xA;",2797942,,,,2019-12-11 21:53:26,Is it possible to add another field in the final response of GraphQL query?,<graphql>,3,2,0,2018-03-23 13:53:34
49513824,2,,48405163,1,,"<p>If your array has been sealed, you can make a copy of it and filter out the one you don't want like this:</p>&#xA;&#xA;<p><code>let updatedList = mainData.filter(post =&gt; post.id !== delPost.id);</code></p>&#xA;",1442982,,,,2018-03-27 13:11:28,"",,0,0,0,2018-03-27 13:11:28
49521548,1,49523451,,0,49,<p>I'm trying to assign a prop.data from graphql to a state.  The props.data is an array. I keep getting IMEIs as an empty array.  Any ideas?</p>&#xA;&#xA;<pre><code>this.state = {&#xA;    IMEIs: []&#xA;}&#xA;&#xA;&#xA;this.setState({IMEIs: this.props.data.checkIMEI})&#xA;</code></pre>&#xA;,7833839,,,,2018-03-27 22:33:07,Assign props.data to state,<reactjs><graphql>,1,3,0,2018-03-27 20:03:59
49527979,2,,49526091,4,,<p>Instead of using :</p>&#xA;&#xA;<pre><code>models.Recipe.find&#xA;</code></pre>&#xA;&#xA;<p>Use</p>&#xA;&#xA;<pre><code>models.Recipe.findAll // this will return single result in array&#xA;</code></pre>&#xA;,2349407,,,,2018-03-28 06:56:20,"",,0,2,0,2018-03-28 06:56:20
49554663,2,,49554224,0,,"<p>Isn't it cause you return an array instead of a of React element. Should be </p>&#xA;&#xA;<pre><code>return (&lt;div&gt;&#xA;  { &#xA;    data.searchOrganizations.map((organization, index) =&gt; (&#xA;        &lt;div key={index}&gt;&#xA;          &lt;p&gt;{`${organization.id}: ${organization.legalBusinessName}`}&lt;/p&gt;&#xA;        &lt;/div&gt;))}&#xA;   &lt;/div&gt;)&#xA;</code></pre>&#xA;",184883,,,,2018-03-29 11:14:47,"",,0,1,0,2018-03-29 11:14:47
49579559,2,,49442317,8,,"<p>Here's an example of how to get the total number of commits for the <code>master</code> branch in the <a href=""https://github.com/rails/rails"" rel=""noreferrer"">rails/rails</a> repository:</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner:""rails"", name:""rails"") {&#xA;    object(expression:""master"") {&#xA;      ... on Commit {&#xA;        history {&#xA;          totalCount&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",326111,,,,2018-03-30 18:30:52,"",,0,6,0,2018-03-30 18:30:52
49580617,1,49582681,,2,228,"<p>How to use more than one objects when querying Github GraphQL?</p>&#xA;&#xA;<p>The following will break if the 2nd object is uncommented:</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner:""rails"", name:""rails"") {&#xA;    object(expression:""master"") {&#xA;      ... on Commit {&#xA;        history {&#xA;          totalCount&#xA;        }&#xA;      }&#xA;    }&#xA;    # object(expression: ""master:README.md"") {... on Blob {byteSize}}&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How to make it working? Thx</p>&#xA;",2125837,,,,2018-03-30 23:26:56,"Github GraphQL Repository Query, using two objects",<graphql><github-graphql>,1,1,0,2018-03-30 19:54:49
49582681,2,,49580617,4,,"<p>Use <strong>alias</strong>:</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner:""rails"", name:""rails"") {&#xA;    object(expression:""master"") {&#xA;      ... on Commit {&#xA;        history {&#xA;          totalCount&#xA;        }&#xA;      }&#xA;    },&#xA;    second_object: object(expression: ""master:README.md"") {... on Blob {byteSize}}&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1415166,,,,2018-03-30 23:26:56,"",,0,0,0,2018-03-30 23:26:56
49585988,2,,49585944,1,,"<p>As mentioned in <a href=""https://reactjs.org/docs/lists-and-keys.html"" rel=""nofollow noreferrer"">React Documentation</a> :</p>&#xA;<blockquote>&#xA;<p>A good rule of thumb is that elements inside the map() call need keys.</p>&#xA;</blockquote>&#xA;<p>You need to make use of <code>key={ }</code> and give it any unique value</p>&#xA;<p><strong>When you don’t have stable IDs for rendered items, you may use the item index as a key as a last resort</strong></p>&#xA;<p>So in your case one of the ways (You can amend it accordingly):</p>&#xA;<pre><code>var badges = author.badges.map((badge, index) =&gt; &#xA;              &lt;span className=&quot;author__badge&quot; key={index}&gt;);&#xA;</code></pre>&#xA;",6748913,,-1,2020-06-20 09:12:55,2018-03-31 08:49:38,"",,0,1,0,2018-03-31 08:49:38
49611376,2,,48331103,54,,<p>This error occurs mostly when there are unclosed curly braces or when some fields are not properly defined while calling the query.</p>&#xA;,6599524,,,,2018-04-02 12:33:09,"",,0,0,0,2018-04-02 12:33:09
49617023,2,,46809122,5,,"<p>Instead of grabbing all collections and then filtering, you can just grab a collection by its handle.</p>&#xA;&#xA;<pre><code>{&#xA;  shop {&#xA;    collectionByHandle(handle: ""frontpage"") {&#xA;      id&#xA;      description&#xA;      products(first: 250) {&#xA;        edges {&#xA;          node {&#xA;            id&#xA;            description&#xA;            variants(first: 10) {&#xA;              edges {&#xA;                node {&#xA;                  id&#xA;                  sku&#xA;                  price&#xA;                  selectedOptions {&#xA;                    name&#xA;                    value&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;          cursor&#xA;        }&#xA;        pageInfo {&#xA;          hasNextPage&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Just replace <code>frontpage</code> with whatever your handle you like.</p>&#xA;",1152054,,,,2018-04-02 18:51:50,"",,0,0,0,2018-04-02 18:51:50
49653462,2,,49652327,5,,"<p>There are two different solutions, depending on what you want to achieve.</p>&#xA;&#xA;<p>For the simple case where the <code>value</code> array always contains 1 element, both options will work.</p>&#xA;&#xA;<p>I'll use this argument to show the difference: <code>[""3"", ""7""]</code></p>&#xA;&#xA;<h2>Option1: Field must contain any value</h2>&#xA;&#xA;<p>If you expect to get <strong>all 3 fields</strong> because at least one item in the array (<code>""3""</code> in this case) is found in the variable and in <code>customVal.value</code> then you should use <a href=""https://lodash.com/docs/4.17.5#intersection"" rel=""noreferrer"">lodash's intersection</a> and check if the result is not an empty array. Something like:</p>&#xA;&#xA;<pre><code>intersection(customVal.value, value).length &gt; 0&#xA;</code></pre>&#xA;&#xA;<p>This expression is true if <strong>at least one</strong> item is found both in <code>customVal.value</code> and in <code>value</code>.</p>&#xA;&#xA;<h2>Option2: Field must contain all values</h2>&#xA;&#xA;<p>If with my example you expect to get <strong>only the second field</strong> because all items in the array must be found in the variable and in <code>customVal.value</code> then you should use <a href=""https://lodash.com/docs/4.17.5#difference"" rel=""noreferrer"">lodash's difference</a> and check if the result is an empty array. Something like:</p>&#xA;&#xA;<pre><code>difference(value, customVal.value).length === 0&#xA;</code></pre>&#xA;&#xA;<p>In this case <strong>the order of the arguments is important.</strong></p>&#xA;&#xA;<p>This expression is true if <strong>all</strong> items that are in <code>value</code> are also found in <code>customVal.value</code>. Other values in <code>customVal.value</code> won't be returned by <code>difference</code> because we used <code>value</code> as the first argument.</p>&#xA;&#xA;<p>(This option can also be achieved with <code>intersection</code> and comparing the result's length to the argument's array length)</p>&#xA;",2805067,,,,2018-04-04 14:18:52,"",,0,1,0,2018-04-04 14:18:52
49673483,2,,49613627,0,,"<p>We identified that this problem only occurred with strings with accentuation.&#xA;So, after a little research, we <a href=""https://stackoverflow.com/a/19852134/5116676"">found a solution</a> (maybe not the most elegant) to replace ASCII characters to RFC 3986 specification (space turns into %20 instead of ""+"", for example), and we apply that function only in the variables that may have some accentuation:</p>&#xA;&#xA;<pre><code>sNome_Aluno       := '&amp;nome_aluno='       + fnstUrlEncodeUTF8('Some Student Name');&#xA;sNome_Responsavel := '&amp;nome_responsavel=' + fnstUrlEncodeUTF8('Another Name');&#xA;sDescricao        := '&amp;titulo='           + fnstUrlEncodeUTF8('Just a test');&#xA;</code></pre>&#xA;&#xA;<p>And it worked.</p>&#xA;&#xA;<p>Also, we removed the second instance of <code>TIdHTTP</code> mentioned by Remy Lebeau.</p>&#xA;&#xA;<p>Thanks.</p>&#xA;&#xA;<p>EDIT: I'm only the PHP developer, and I work with another dev that are Delphi developer. We work in a small company that doesn't want to acquire a newer Delphi, unfortunately.</p>&#xA;",5116676,,5116676,2018-04-05 13:27:53,2018-04-05 13:27:53,"",,0,0,0,2018-04-05 13:22:33
49700725,2,,49698206,1,,"<p>So I figured out a solution, but I'm still hoping for a better explanation.  In my mutation, I added a directive on returning product conditionally and passed in a boolean variable whether I wanted the product data to return with the mutation (Which I need when adding a unique product, but don't want when updating the amount of a product which exists in the items array.</p>&#xA;&#xA;<p>The mutation looks like:</p>&#xA;&#xA;<pre><code>mutation updateCart($basketId: ID!, $productId: ID!, $amount: Int!, $updateCart: Boolean!) {&#xA;    setOrderItem(&#xA;      basketId: $basketId,&#xA;      productId: $productId,&#xA;      amount: $amount&#xA;    ) {&#xA;      id&#xA;      amount&#xA;      product @skip(if: $updateCart)&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>and my addToCart function:</p>&#xA;&#xA;<pre><code>addToCart = async (product) =&gt; {&#xA;    const basketId = this.props.basketId&#xA;    const items = this.props.userCartQuery.User.basket.items&#xA;    let amount = 1&#xA;    let updateCart = false&#xA;&#xA;    for (const item of items) {&#xA;      if(item.product.id === product.id) {&#xA;        amount = item.amount + 1&#xA;        updateCart = true&#xA;      }&#xA;    }&#xA;&#xA;    await this.props.updateCartMutation({&#xA;      variables: {&#xA;        basketId: basketId,&#xA;        productId: product.id,&#xA;        amount: amount,&#xA;        updateCart: updateCart&#xA;      },&#xA;      optimisticResponse: {&#xA;        ...Rest of function...&#xA;</code></pre>&#xA;",4044540,,,,2018-04-06 20:42:39,"",,0,0,0,2018-04-06 20:42:39
49723385,2,,49722910,2,,"<p>From reading the above, it sounds like your original query is returning the correct results that you want but not in the response format that you would prefer, as you would like the ""StateName"" to be a top-level JSON key with the value being a JSON object of the state which you passed in as an argument. Is that accurate? If so then why not use the same query that already works but with a different response template. Something like:</p>&#xA;&#xA;<pre><code>#set($myresponse = {&#xA;  ""$ctx.args.StateName"": $ctx.result.items&#xA;})    &#xA;$util.toJson($myresponse)&#xA;</code></pre>&#xA;&#xA;<p>Note that <code>$myresponse</code> isn't exactly the same as you had above as your example with <code>""stateName"" : ""Delaware"" { ... }</code> wasn't completely valid JSON so I didn't want to make an assumption on what a good structure would be, but the point remains if you're already getting the proper results from your query I would just try to change the structure of your GraphQL results.</p>&#xA;&#xA;<p>Now if I misread the above and you're NOT getting the proper results from the query, the other way that I could read your statement of ""primary query to the subquery"" is that you're trying to apply an additional <code>""filter""</code> to your query results. If that is the case then you need something like this:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Query"",&#xA;    ""query"" : {&#xA;        ""expression"" : ""StateName = :StateName"",&#xA;        ""expressionValues"" : {&#xA;            "":StateName"" : { ""S"" : ""${context.arguments.StateName}"" },&#xA;        }&#xA;    },&#xA;    ""index"" : ""StateName-index-copy"",&#xA;    ""select"" : ""ALL_ATTRIBUTES"",&#xA;    ""filter"" : {&#xA;      ""expression"" : ""#population &gt;= :population"",&#xA;      ""expressionNames"" : {&#xA;        ""#population"" : ""population""&#xA;      },&#xA;      ""expressionValues"" : {&#xA;        "":population"" : $util.dynamodb.toDynamoDBJson($ctx.args.population)&#xA;      }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I used an example here where maybe your query also needed to filter by the population size in each county. This may not be representative of what you're looking for but hopefully it helps.</p>&#xA;&#xA;<p><strong>EDITED WITH MORE INFORMATION 4/16/18</strong></p>&#xA;&#xA;<p>I've written up more information on this in a step-by-step manner, to go through the concepts in pieces.</p>&#xA;&#xA;<p>The key here is not just the response template, but also the fields that you're requesting to be returned (as this is the nature of GraphQL). Let's walk through this by way of example. Now that you're returning an individual item with GraphQL (since your response template is converting an array to a single item) so you'll need to change the expected GraphQL query response type. Suppose you have a GraphQL type in your schema like this:</p>&#xA;&#xA;<pre><code>type State {&#xA;    id: ID!&#xA;    population: String!&#xA;    governor: String!&#xA;}&#xA;&#xA;type Query {&#xA;    allStates: [State]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If you just convert the response in the template as above you'll see an error like ""type mismatch error, expected type LIST"" if you run something like this:</p>&#xA;&#xA;<pre><code>query {&#xA;  allStates{&#xA;    id&#xA;    population&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That's because your response is no longer returning the individual items. Instead you'll need to change the GraphQL response type <code>[State]</code> to match what your template conversion is doing <code>State</code> like so:</p>&#xA;&#xA;<pre><code>type State {&#xA;    StateName: String&#xA;}&#xA;&#xA;type Query {&#xA;    allStates: State&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now if your resolver <strong>request</strong> template is doing something that returns a list of items (like a DynamoDB scan or Query) you can convert the list to a single item in the <strong>response</strong> template like so:</p>&#xA;&#xA;<pre><code>#set($convert = {""StateName"" : $ctx.result.items })&#xA;$util.toJson($convert)&#xA;</code></pre>&#xA;&#xA;<p>Then run the following GraphQL query:</p>&#xA;&#xA;<pre><code>query {&#xA;  allStates{&#xA;    StateName&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And you'll get a single object containing an array of your results back:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""allStates"": {&#xA;      ""StateName"": ""[{id=1, population=10000, governor=John Smith}]""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However while this might be pointing out the errors you are having, this is returning a <code>StateName</code> and from your original question I think you are looking to do a bit more by combining records in the response for some optimization, along with some potential filtering. One way to do this would be to create an array (or you could create a map {}) and populate it based on some conditional. For example modify your query to have a <code>StateName</code> as an argument:</p>&#xA;&#xA;<pre><code>type Query {&#xA;    allStates(StateName: String!): Post&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then you can filter on this in the resolver response template, by using a <code>#foreach</code> and an <code>#if()</code> conditional, then calling <code>.add()</code> only if items in the response are for the state which you requested:</p>&#xA;&#xA;<pre><code>#set($convert = {""StateName"" : [] })&#xA;#foreach($item in $ctx.result.items)&#xA;  #if($item[""StateName""]==""$ctx.args.StateName"")&#xA;    $util.qr($convert.get(""StateName"").add(""$item""))&#xA;  #end&#xA;#end&#xA;$util.toJson($convert)&#xA;</code></pre>&#xA;&#xA;<p>So now you could run something like this:</p>&#xA;&#xA;<pre><code>query {&#xA;  allStates(StateName:""Texas""){&#xA;    StateName&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And this will give you back just the results for that specific state which you passed as an argument. But you'll notice the selection set of the query is <code>StateName</code>. You could introduce a bit more flexibility by having the possible states listed in your GraphQL type:</p>&#xA;&#xA;<pre><code>type State {&#xA;    StateName: String&#xA;    Seattle: String&#xA;    Texas: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now you alter your resolver response template to use the argument for building up the return array since it can specify this in the selection set:</p>&#xA;&#xA;<pre><code>#set($convert = {""$ctx.args.StateName"" : [] })&#xA;#foreach($item in $ctx.result.items)&#xA;  #if($item[""StateName""]==""$ctx.args.StateName"")&#xA;    $util.qr($convert.get(""$ctx.args.StateName"").add(""$item""))&#xA;  #end&#xA;#end&#xA;$util.toJson($convert)&#xA;</code></pre>&#xA;&#xA;<p>So I can run this query:</p>&#xA;&#xA;<pre><code>query {&#xA;  allPosts(StateName:""Seattle""){&#xA;    Seattle&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And I get back my result. Note though that passing <code>Seattle</code> as the argument but requesting back <code>Texas</code>:</p>&#xA;&#xA;<pre><code>query {&#xA;  allPosts(StateName:""Seattle""){&#xA;    Texas&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This will not work as the response object you created in your map was <code>Seattle: [...]</code> but you had <code>Texas</code> as the selection set. </p>&#xA;&#xA;<p>The final thing that you might want to do is have multiple states returned, which you could do by building up one giant map keyed by the state name, or maybe it's done using the arguments or the selection set through adding state names to the return type as demonstrated above. That's up to you so I'm not sure how you'll want that but hopefully this demonstrates how you can manipulate the responses to meet your needs.</p>&#xA;",2733539,,2733539,2018-04-16 13:13:16,2018-04-16 13:13:16,"",,0,4,0,2018-04-08 22:32:11
49724540,1,,,0,422,"<p>Specifically I feel like I am looking for the answer to the question <a href=""https://stackoverflow.com/questions/45910230/submit-an-array-of-objects-as-a-query-variable-in-graphql"">asked here</a>, but it turns out the title of the question isn't a perfect match for the actual question.</p>&#xA;&#xA;<p>What I am looking to do involves Relay, React, and GraphQL (I suppose I could have stated Relay, and you could have figured out the other two).</p>&#xA;&#xA;<p>What I want to do, and what I can't seem to find an answer to, is to create a query that lists a variable list of query fragments based on some predefined JSON array.</p>&#xA;&#xA;<p>If you look at my home page, <a href=""http://www.jimmyvanveen.com"" rel=""nofollow noreferrer"">jimmyvanveen.com</a> you will see I have a list of projects I have worked on (or am working on), and each renders as a React component. I am pulling this data from Github through their REST API (v3) - but now I want to migrate to GraphQL (v4).</p>&#xA;&#xA;<p>I can make an array containing the repo name, and owner as required by the Schema of Github's API, but I don't know how to dynamically create a query based off a simple array such as:</p>&#xA;&#xA;<pre><code>repos: [&#xA;  {""name"": ""repo name"", ""owner"": ""Repo Owner""},&#xA;  {""name"": ""other repo"", ""ownder"": ""Other Owner""}&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>I know how to make a query that can find all of this information manually, but I was hoping there was a GraphQL way (perhaps by sending vars?) to run through the entire array in one query and return the array of repo data.</p>&#xA;&#xA;<p>I've been racking my brain for days trying to find the answer here, or anywhere, and I'm striking out.</p>&#xA;&#xA;<p>Thanks in advance for any help you can provide!</p>&#xA;",7898481,,,,2018-09-01 01:21:32,GraphQL: How to create a query with a curated list of parameters (a 2D array),<arrays><graphql><relaymodern>,1,1,0,2018-04-09 01:49:16
49746003,2,,49745422,1,,<p>Your are doing wrong here... your array is inside <code>data.counterparty</code>...&#xA;try this </p>&#xA;&#xA;<pre><code>var a= data.counterparty.map(x=&gt;{&#xA;                return x.name&#xA;            })&#xA;</code></pre>&#xA;,9602225,,,,2018-04-10 05:31:51,"",,0,1,0,2018-04-10 05:31:51
49790145,2,,44579877,4,,"<p>There is no API for this as such. So there are two ways to go about it. Simple data scraping the user url or looping through each repo user has forked and then count the contribution. The later one will be more time consuming. The first one is much more reliable as it is cached by github. Below is a python approach to fetch the same</p>&#xA;<pre><code>import json&#xA;import requests&#xA;from bs4 import BeautifulSoup&#xA;&#xA;GITHUB_URL = 'https://github.com/'&#xA;&#xA;&#xA;def get_contributions(usernames):&#xA;    &quot;&quot;&quot;&#xA;    Get a github user's public contributions.&#xA;    :param usernames: A string or sequence of github usernames.&#xA;    &quot;&quot;&quot;&#xA;    contributions = {'users': [], 'total': 0}&#xA;&#xA;    if isinstance(usernames, str) or isinstance(usernames, unicode):&#xA;        usernames = [usernames]&#xA;&#xA;    for username in usernames:&#xA;        response = requests.get('{0}{1}'.format(GITHUB_URL, username))&#xA;&#xA;        if not response.ok:&#xA;            contributions['users'].append({username: dict(total=0)})&#xA;            continue&#xA;&#xA;        bs = BeautifulSoup(response.content, &quot;html.parser&quot;)&#xA;        total = bs.find('div', {'class': 'js-yearly-contributions'}).findNext('h2')&#xA;        contributions['users'].append({username: dict(total=int(total.text.split()[0].replace(',', '')))})&#xA;        contributions['total'] += int(total.text.split()[0].replace(',', ''))&#xA;&#xA;    return json.dumps(contributions, indent=4)&#xA;</code></pre>&#xA;<p>PS: Taken from <a href=""https://github.com/garnertb/github-contributions"" rel=""nofollow noreferrer"">https://github.com/garnertb/github-contributions</a></p>&#xA;<p>For later approach there is a npm package</p>&#xA;<p><a href=""https://www.npmjs.com/package/github-user-contributions"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/github-user-contributions</a></p>&#xA;<p>But I would recommend using the scraping approach only</p>&#xA;",2830850,,13985440,2021-08-15 13:41:05,2021-08-15 13:41:05,"",,0,0,0,2018-04-12 07:09:45
49813653,2,,37796902,26,,"<p>Just for reference, I got here searching the same error just not with <code>undefined</code>, but with my own <code>Product</code> type: </p>&#xA;&#xA;<pre><code>... argument * must be Input Type but got Product&#xA;</code></pre>&#xA;&#xA;<p>Turned out that in GraphQL what you pass to a Mutation should be either scalar type (String, Integer, ...) or user defined <strong><code>input</code></strong> type, not <code>type</code> type. </p>&#xA;&#xA;<p><a href=""http://graphql.org/graphql-js/mutations-and-input-types/"" rel=""noreferrer"">http://graphql.org/graphql-js/mutations-and-input-types/</a></p>&#xA;&#xA;<pre><code>input ProductInput {&#xA;  id: ID&#xA;  name: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I was trying to pass in my Product <code>type</code>: </p>&#xA;&#xA;<pre><code>type Product {&#xA;  id: ID&#xA;  name: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This feels a bit redundant, but guess, I'll be glad for having it separated later. </p>&#xA;",336753,,,,2018-04-13 09:29:11,"",,0,3,0,2018-04-13 09:29:11
49829954,1,,,1,1520,"<p>I'm trying to build a query with the GitHub API v4 (GraphQL) to get the number of contributors.</p>&#xA;&#xA;<p>At the moment I have something of the likes of</p>&#xA;&#xA;<pre><code>query ($owner: String!, $name: String!) {&#xA;  repository(owner: $owner, name: $name) {&#xA;    ref(qualifiedName: ""master"") {&#xA;      target {&#xA;        ... on Commit {&#xA;          history(first: 100) {&#xA;            nodes {&#xA;              author {&#xA;                name&#xA;              }&#xA;            }&#xA;            pageInfo {&#xA;              hasNextPage&#xA;              endCursor&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>where I'm going through all the commits and get the name of the Authors (at the time I was trying to get the number of commits for contributor), but for repositories with a large amount of commits, this takes a lot of time.</p>&#xA;&#xA;<p>So back to my question, is the a way to get only the number of contributors in a repository?</p>&#xA;",9644870,,3134112,2018-04-14 11:11:41,2019-05-04 12:11:05,GitHub API v4 - Get contributors from specific repository,<graphql><github-api><github-graphql>,2,1,0,2018-04-14 09:27:34
49917593,1,,,5,6837,"<p>I am trying to fetch first five items of a set. My query is following:</p>&#xA;&#xA;<pre><code>query sequence($id: String) {&#xA;  sequence(id: $id) {&#xA;    items(first:1) {&#xA;            content&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How ever, I get response  </p>&#xA;&#xA;<blockquote>&#xA;  <p>""Unknown argument \""first\"" on field \""items\"" of type \""Sequence\"".""</p>&#xA;</blockquote>&#xA;&#xA;<p>As far as I understood from <a href=""http://graphql.org/learn/pagination/"" rel=""noreferrer"">the docs</a> this is how I am supposed to make query if I want to get a limited amount of items back.</p>&#xA;&#xA;<p>Do I need to define the argument somewhere in the schema? How do I limit the amount of returned items properly?</p>&#xA;",2641341,,,,2019-11-04 08:21:37,"Why graphQl returns ""Unknown argument 'first' on field..."" error when trying to slice on query?",<javascript><graphql>,1,0,0,2018-04-19 09:33:03
49923538,1,49924410,,3,8957,"<p>I'm following a tutorial on <a href=""https://www.howtographql.com"" rel=""nofollow noreferrer"">howtographql.com</a>, which creates a very basic GraphQL server with in-memory data and resolvers written in JavaScript. I keep having issues where I'd like to be able to just put a breakpoint in the resolver, but when I'm running the GraphQL playground GUI, I can't see anything in the DevTools' Sources panel, and putting a <code>debugger</code> line in the code doesn't stop it either.</p>&#xA;&#xA;<p>How do I debug my resolver?</p>&#xA;&#xA;<p><strong>Schema</strong></p>&#xA;&#xA;<pre><code>type Mutation {&#xA;  updateLink(id: ID!, url: String, description: String): Link&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Resolver</strong> (I'm using immutable.js's Map; perhaps not correctly)</p>&#xA;&#xA;<pre><code>let links = [&#xA;  {&#xA;    id: ""link-0"",&#xA;    url: ""www.howtographql.com"",&#xA;    description: ""Fullstack tutorial for GraphQL"",&#xA;  },&#xA;]&#xA;&#xA;const resolvers = {&#xA;  Mutation: {&#xA;    updateLink(root, args) {&#xA;      const linkIndex = links.findIndex(link =&gt; link.id === args.id);&#xA;      const state = links.map(link =&gt; {&#xA;        debugger;&#xA;        if (link.id === args.id) {&#xA;          const map = Map(link);&#xA;          return map&#xA;            .set(""url"", args.url || link.url)&#xA;            .set(""description"", args.description || link.description);&#xA;        }&#xA;        return link;&#xA;      });&#xA;      links = state;&#xA;      return state[linkIndex];&#xA;    },&#xA;}&#xA;</code></pre>&#xA;",3406483,,1000551,2018-04-19 14:33:49,2018-04-19 15:07:09,How do I debug a GraphQL resolver in JavaScript?,<javascript><debugging><graphql><resolver>,1,0,0,2018-04-19 14:25:04
49930506,2,,49897806,2,,"<p>You could use <a href=""https://github.com/graphql/graphiql"" rel=""nofollow noreferrer"">graphiql</a> - graphical interactive in-browser GraphQL IDE that is comes handy to explore API.</p>&#xA;",9671997,,,,2018-04-19 21:28:23,"",,0,3,0,2018-04-19 21:28:23
49972689,2,,49972688,4,,"<p>In GraphQL to add a union type in the typedefs you have to define the <strong>union</strong> </p>&#xA;&#xA;<p>i.e <code>union WorksheetOrError = Worksheet | ApiError</code></p>&#xA;&#xA;<pre><code>// typedefs.js&#xA;export default [&#xA;  `&#xA;  schema {&#xA;    query: Query&#xA;  }&#xA;&#xA;  type Query {&#xA;    worksheet(id: String!): WorksheetOrError&#xA;  }&#xA;&#xA;  union WorksheetOrError = Worksheet | ApiError &#xA;&#xA;  type Worksheet {&#xA;    id: String!&#xA;    name String&#xA;  }&#xA;&#xA;  type ApiError {&#xA;    code: String!&#xA;    message: String!&#xA;  }&#xA;`];&#xA;</code></pre>&#xA;&#xA;<p>In the resolvers you have to define a resolver for the union type that has the property <strong>__resolveType</strong>. This will help tell the GraphQL executor which type the result is. </p>&#xA;&#xA;<pre><code> // resolvers.js&#xA;export default {&#xA;  Query: {&#xA;    worksheet() {&#xA;      ... &#xA;    }&#xA;  },&#xA;  WorksheetOrError: {&#xA;    __resolveType(obj) {&#xA;      if (obj.id) {&#xA;        return 'Worksheet';&#xA;      }&#xA;&#xA;      if (obj.code) {&#xA;        return 'ApiError';&#xA;      }&#xA;&#xA;      return null;&#xA;    }&#xA;  },&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>To create a GraphQL Query in <strong>Apollo Client</strong></p>&#xA;&#xA;<pre><code>// Your application code. &#xA;&#xA;// This is my Worksheet Query in my React code.&#xA;const WorksheetQuery = gql`&#xA;  query GetWorksheet($worksheetId: String!) {&#xA;    worksheet(id: $worksheetId) {&#xA;      ... on Worksheet {&#xA;        id&#xA;        name&#xA;      }&#xA;      ... on ApiError {&#xA;        code&#xA;        message&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Now you can check the <code>__typename</code> to check what type is in the response.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Note: For those who are wondering why I'm not using <strong>GraphQL errors</strong>. It's because Apollo doesn't seem to handle errors well when it encounters a graphQL error. So for a work around I'm trying to return a custom <code>ApiError</code> in my response.</p>&#xA;</blockquote>&#xA;&#xA;<p>There a few reasons why using a union with an error type is nice. </p>&#xA;&#xA;<ol>&#xA;<li>Currently if you wanted a partial response with GraphQLError. Apollo does not cache the errors so if you wanted to re-use the cached response later you wouldn't have the complete response since the errors are removed. (Now you can't display the proper UI with errors)</li>&#xA;<li>Getting GraphQLError back in Apollo would return a flat list of errors with the path to where the error is in the data. So you would need to verify that which part of your schema did the error occur in. However if you follow the instructions above you would have the error within the schema already. That way you already know which part of the schema the error happened.</li>&#xA;</ol>&#xA;",2085190,,2085190,2019-03-24 06:03:05,2019-03-24 06:03:05,"",,0,0,0,2018-04-23 02:39:52
50003940,2,,49998806,0,,"<ul>&#xA;<li>As long as liquid requires a Ruby server, you must program it using&#xA;Ruby code.</li>&#xA;<li>GraphQL requires a Node.js server: you must use javascript to build&#xA;something using it. </li>&#xA;<li>Access liquid's opensource repository and clone it. </li>&#xA;<li>Access graphql's opensource repository and clone it.</li>&#xA;<li>Follow both documentations.</li>&#xA;</ul>&#xA;",3129604,,,,2018-04-24 14:14:45,"",,0,0,0,2018-04-24 14:14:45
50027305,2,,50026619,1,,"<p>I found the answer, inside movie_type.rb I needed this change:</p>&#xA;&#xA;<p><strong>type types[Types::ActorType]</strong></p>&#xA;&#xA;<p>I guess it must be due to setting it to return an array and not getting back a single entity.</p>&#xA;",4933098,,,,2018-04-25 16:38:15,"",,0,0,0,2018-04-25 16:38:15
50057369,2,,50055880,1,,"<p>When you call <code>this.setState({ names: newArray })</code>, <code>newArray</code> must be a newly constructed array (since you cannot mutate state directly), so it doesn't make a difference whether you construct this array based on the difference or just use the result from an API call.</p>&#xA;&#xA;<p>In other words, there's no difference between <code>setState({ names: [1, 2, 3] })</code> or <code>setState({ names: [...someOldState, 3] })</code> as you are still setting <code>names</code> to a newly built array in both cases, so your attempt at calculating the difference will not help your intention in any way.</p>&#xA;&#xA;<p>React does the optimisation of only re-rendering the components with changed keys so you just have to make sure an <a href=""https://reactjs.org/docs/lists-and-keys.html#keys"" rel=""nofollow noreferrer"">unique and stable</a> key is provided in the mapped component. </p>&#xA;&#xA;<p>This optimisation is done at the virtual DOM level though. If you want to avoid <code>render</code> being called in unchanged <code>Link</code> and <code>Node</code> components, they need to be declared as <code>PureComponent</code>, or with a <code>shouldComponentUpdate</code> function if the props are not shallow. </p>&#xA;",5648883,,,,2018-04-27 07:23:05,"",,0,3,0,2018-04-27 07:23:05
50065825,2,,49723220,3,,"<p>Since a few days the ?__a=1 way to get the last posts is blocked.</p>&#xA;&#xA;<p>To get the last 15 Post from a Instagram profile you have to get the url and extract the <strong>_sharedData</strong> JSON</p>&#xA;&#xA;<p><strong>Javascript</strong></p>&#xA;&#xA;<pre><code>let url = ""https://www.instagram.com/""+username;&#xA;$.ajax({&#xA;    type: 'GET',&#xA;    url: url,&#xA;    error: function () {&#xA;        //..&#xA;    },&#xA;    success: function (data) {&#xA;        data = JSON.parse(data.split(""window._sharedData = "")[1].split("";&lt;/script&gt;"")[0]).entry_data.ProfilePage[0].graphql;&#xA;        console.log(data);&#xA;    }&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>You can do this in client or server side without login.</p>&#xA;",9487894,,,,2018-04-27 15:36:28,"",,0,0,0,2018-04-27 15:36:28
50096287,1,,,1,503,"<p>I really need your help today.&#xA;Indeed, I'm currently discovering this cool tool named Graphql in order to recuperate some datas from Github, which are issues with specific labels in several github project. And the thing is there is no problem when I send my request online with Graphiql : <br><br> <a href=""https://i.stack.imgur.com/58cOg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/58cOg.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>But problems arrive when I try to send the same request from a NodeJs server, and I don't really know why.&#xA;Here is the code that I wrote, where I use graphql-request to send my request : <br></p>&#xA;&#xA;<pre><code>const { request } = require(""graphql-request"");&#xA;&#xA;const query = `query getIssues($nameOwner : String!, $labels : [String!], $repo1 : String!) {&#xA;  repo1 : repository(owner: $nameOwner, name: $repo1) {&#xA;    name&#xA;    url&#xA;    issues(labels:$labels, first:100, states:[OPEN]) {&#xA;      edges {&#xA;        node {&#xA;          title&#xA;          url&#xA;          labels(first:3) {&#xA;            edges {&#xA;              node {&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}`;&#xA;&#xA;const variables = {&#xA;  nameOwner: ""inextensodigital"",&#xA;&#xA;  repo1: ""emeabridge.eu"",&#xA;  repo2: ""deloittedirect.dk"",&#xA;  repo3: ""deloitteexperts.com"",&#xA;  repo4: ""easydeloitte.at"",&#xA;  repo5: ""inexweb.fr"",&#xA;  repo6: ""propelbydeloitte.com"",&#xA;&#xA;  repos: [&#xA;    ""emeabridge.eu"",&#xA;    ""deloittedirect.dk"",&#xA;    ""deloitteexperts.com"",&#xA;    ""easydeloitte.at"",&#xA;    ""inexweb.fr"",&#xA;    ""propelbydeloitte.com""&#xA;  ],&#xA;&#xA;  labels: [&#xA;    ""ideas"",&#xA;    ""backlog"",&#xA;    ""priorisation"",&#xA;    ""definiton"",&#xA;    ""proposal"",&#xA;    ""acceptance"",&#xA;    ""in progress""&#xA;  ]&#xA;};&#xA;&#xA;request(""https://api.graph.cool/simple/v1/movies"", query, variables).then(&#xA;  data =&gt; console.log(data)&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>And here Is the error I get on my console after launching the NodeJs server : <br><br>&#xA;<a href=""https://i.stack.imgur.com/qO8C2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qO8C2.png"" alt=""console error""></a></p>&#xA;&#xA;<p>Thanks in advance for your answers guys, and please understand that I'm currently learning Graphql, so I might do some terrible things in my code :) :)</p>&#xA;",9511464,,501739,2018-04-30 08:47:25,2018-04-30 10:20:18,"Cannot query field ""repository"" on type ""Query""",<node.js><graphql>,0,0,0,2018-04-30 07:59:54
50111920,1,50113263,,1,473,"<p>I'm trying to refresh/update my query whenever mutation happened. But for some reason it won't happened.</p>&#xA;&#xA;<p>I tried a couple of ways:</p>&#xA;&#xA;<ol>&#xA;<li>using pollInterval=""500"" on my <code>&lt;Query&gt;</code></li>&#xA;<li>declaring updateCache function on my <code>&lt;Mutation&gt;</code></li>&#xA;</ol>&#xA;&#xA;<p>Just wondering if anyone would be able to help me solve it.&#xA;I'm open for any suggestions</p>&#xA;&#xA;<p>Thanks a lot!</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const GET_FIELD_BY_FORM_ID = gql`&#xD;&#xA;  query field($formID: String!){&#xD;&#xA;    field(formID: $formID){&#xD;&#xA;      fieldID,&#xD;&#xA;      formID,&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;`;&#xD;&#xA;&#xD;&#xA;const CREATE_FIELD = gql `&#xD;&#xA;mutation fieldCreate($formID: String!, $order: Int, $value: String, $label: String, $section: String){&#xD;&#xA;  fieldCreate(formID:$formID, order: $order, value:$value, label:$label, section:$section){&#xD;&#xA;    value&#xD;&#xA;    order&#xD;&#xA;    fieldID&#xD;&#xA;    formID&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;`;&#xD;&#xA;&#xD;&#xA;const updateCache = (cache, { data: {fieldCreate}}) =&gt; {&#xD;&#xA;  const {field}  = cache.readQuery({ query: GET_FIELD_BY_FORM_ID, variables: {formID: ""da096d11-b725-4b67-b8ca-e50c48dd0bda""} })&#xD;&#xA;  cache.writeQuery({&#xD;&#xA;    query: GET_FIELD_BY_FORM_ID,&#xD;&#xA;    data:{&#xD;&#xA;      field: field.concat(fieldCreate)&#xD;&#xA;    }&#xD;&#xA;  })&#xD;&#xA;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;export default class NewEditor extends Component {&#xD;&#xA;render() {&#xD;&#xA;&#xD;&#xA;  return (&#xD;&#xA;    &lt;div&gt;&#xD;&#xA;      &lt;Query query={GET_FIELD_BY_FORM_ID} variables={{formID: this.props.match.params.formID}} pollInterval={500}&gt;&#xD;&#xA;      {({ loading, error, data , startPolling, stopPolling }) =&gt; {&#xD;&#xA;        if (loading) return ""Loading..."";&#xD;&#xA;        if (error) return `Error! ${error.message}`;&#xD;&#xA;        return (&#xD;&#xA;          &lt;div&gt;&#xD;&#xA;            {data.field.map(field =&gt; (&#xD;&#xA;            &lt;li key={field.fieldID}&gt;{field.fieldID}| {field.label} | {field.order}&lt;/li&gt;&#xD;&#xA;            ))}&#xD;&#xA;          &lt;/div&gt;&#xD;&#xA;        )&#xD;&#xA;      }}&#xD;&#xA;      &lt;/Query&gt;&#xD;&#xA;      &lt;Mutation mutation={CREATE_FIELD} update={updateCache}&gt;&#xD;&#xA;      {(createField, { data}) =&gt; (&#xD;&#xA;        &lt;div&gt;&#xD;&#xA;          &lt;form&#xD;&#xA;            onSubmit={async e =&gt; {&#xD;&#xA;              e.preventDefault();&#xD;&#xA;              await createField({ variables: { formID: this.props.match.params.formID, label:""newly generated"", section: ""header"", order: 9} });&#xD;&#xA;            }}&#xD;&#xA;            &gt;&#xD;&#xA;            &lt;button type=""submit""&gt;Add Todo&lt;/button&gt;&#xD;&#xA;          &lt;/form&gt;&#xD;&#xA;        &lt;/div&gt;&#xD;&#xA;      )}&#xD;&#xA;    &lt;/Mutation&gt;&#xD;&#xA;    &lt;/div&gt;&#xD;&#xA;)}};</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",516776,,516776,2018-05-01 06:52:13,2018-05-01 08:10:01,React Apollo Query and Mutation Component won't fetch fresh data,<javascript><reactjs><react-apollo><apollo-client>,1,1,0,2018-05-01 05:53:12
50123379,1,,,1,872,"<p>I'm building an Shopify Ionic 3 App using the Storefront API.&#xA;Fetching ID and Title works. But trying to access Image it fails.</p>&#xA;&#xA;<p>Using ""GraphiQL"" with this Query</p>&#xA;&#xA;<pre><code>{&#xA;  shop {&#xA;    collections(first: 1) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          title&#xA;          handle&#xA;          image {&#xA;            originalSrc&#xA;          }&#xA;        }&#xA;      }&#xA;      pageInfo {&#xA;        hasNextPage&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>will Result with</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""shop"": {&#xA;      ""collections"": {&#xA;        ""edges"": [&#xA;          {&#xA;            ""node"": {&#xA;              ""id"": ""Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzM2NTUwNjY5OQ=="",&#xA;              ""title"": ""Snacks"",&#xA;              ""handle"": ""snacks-co"",&#xA;              ""image"": {&#xA;                ""originalSrc"": ""https://cdn.shopify.com/s/files/1/2262/0831/collections/Snacks_Collection.jpg?v=1524511173""&#xA;              }&#xA;            }&#xA;          }&#xA;        ],&#xA;        ""pageInfo"": {&#xA;          ""hasNextPage"": true&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Using ""graphql-js-client"" with Ionic 3, Collection Image is not available.</p>&#xA;&#xA;<pre><code>// Service Provider Function&#xA;getCollectionsWithImage() {&#xA;  let query = this.client.query((root) =&gt; {&#xA;    root.add('shop', (shop) =&gt; {&#xA;      shop.addConnection('collections', {args: {first: 16}}, (collection) =&gt; {&#xA;        collection.add('id');&#xA;        collection.add('title');&#xA;&#xA;        // THIS does not work&#xA;        // collection.add('image', (image) =&gt; {&#xA;        //     image.add('originalSrc');&#xA;        // })&#xA;&#xA;       // THIS does not work&#xA;        // collection.addConnection('image', (image) =&gt; {&#xA;        //     image.add('originalSrc');&#xA;        // })                  &#xA;       })&#xA;    })&#xA;  });&#xA;&#xA;  return this.client.send(query).then(({model, data}) =&gt; {&#xA;    return model.shop.collections;&#xA;  });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Do you have any Idea?</p>&#xA;",1903653,,1903653,2018-05-01 22:10:59,2018-05-02 07:04:09,Using Shopify Storefront API to fetch Collection Image,<ionic3><shopify><graphql-js>,1,0,0,2018-05-01 20:29:43
50127471,1,50144398,,0,1712,"<p>I'm developing a graphql service using [com.graphql-java:graphql-java:8.0] dependencies. Basically, I need to fetch some conditional data based on parent schema response. e.g, If ResultOne response contentTypeId == 1 for which, I need to fetch and prepare additional response using Fish type schema, accordingly for contentTypeId == 2, I need to fetch and prepare response using Fruit type schema.</p>&#xA;&#xA;<pre><code>extend type Query {&#xA;    search(&#xA;        name: String,&#xA;        category: String&#xA;    ): [ResultOne]&#xA;}&#xA;&#xA;type ResultOne {&#xA;    contentTypeId: Int&#xA;    content: Content&#xA;}&#xA;&#xA;type Fish {&#xA;    name: String    &#xA;    weight: Float&#xA;}&#xA;&#xA;type Fruit {&#xA;    name: String&#xA;    Color: String&#xA;}&#xA;&#xA;type Toy {&#xA;    name: String&#xA;    description: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have tired with union but in that case, an exception occurred ""There is no type resolver defined for interface/union 'Content' type"".</p>&#xA;&#xA;<pre><code>union Content = Fish | Fruit |Toy&#xA;</code></pre>&#xA;&#xA;<p>Please, feel free to ask me your question, If my problem not clear. </p>&#xA;",3970878,,,,2018-05-02 22:21:44,GraphQL resolve multiple schema dynamically,<web-services><spring-boot><java-8><schema><graphql>,1,0,0,2018-05-02 05:07:25
50128509,2,,49902529,0,,<p>I figure out it by updating submodule to latest version.</p>&#xA;&#xA;<ol>&#xA;<li>cd Carthage/Checkouts/apollo-ios</li>&#xA;<li><p>git checkout master</p>&#xA;&#xA;<p>warning: unable to rmdir 'docs/themes/meteor': Directory not empty&#xA;Previous HEAD position was 6ced4b7... 0.8.0&#xA;Switched to branch 'master'&#xA;Your branch is up to date with 'origin/master'.</p></li>&#xA;</ol>&#xA;,3717333,,,,2018-05-02 06:39:00,"",,0,0,0,2018-05-02 06:39:00
50144398,2,,50127471,1,,"<p>It can be done with Unions - you are close and the error is quite helpful - ""There is no type resolver defined for interface/union 'Content' type"" - meaning that you have to write that Content resolver, that will match correct type to contentTypeId. I can't help you here, as I write my GrapQL APIs with Node.js.</p>&#xA;&#xA;<p>But I would suggest using Interface here. If you have a Searchable interface, you can easily write such schema:</p>&#xA;&#xA;<pre><code>extend type Query {&#xA;    search(&#xA;        name: String,&#xA;        category: String&#xA;    ): [Searchable]&#xA;}&#xA;&#xA;interface Searchable {&#xA;    contentTypeId: Int&#xA;    name: String&#xA;}&#xA;&#xA;type Fish implements Searchable {&#xA;    contentTypeId: Int&#xA;    name: String    &#xA;    weight: Float&#xA;}&#xA;&#xA;type Fruit implements Searchable {&#xA;    contentTypeId: Int&#xA;    name: String&#xA;    Color: String&#xA;}&#xA;&#xA;type Toy implements Searchable {&#xA;    contentTypeId: Int&#xA;    name: String&#xA;    description: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is a nice explanation on when to use Interfaces and Unions:</p>&#xA;&#xA;<p><a href=""https://medium.com/the-graphqlhub/graphql-tour-interfaces-and-unions-7dd5be35de0d"" rel=""nofollow noreferrer"">https://medium.com/the-graphqlhub/graphql-tour-interfaces-and-unions-7dd5be35de0d</a></p>&#xA;",9601266,,,,2018-05-02 22:21:44,"",,0,0,0,2018-05-02 22:21:44
50165068,1,,,0,463,"<p>I'm looking into GraphQL and got to a question I'm not even sure how to look for in the docs. Probably this isn't even supposed to work, but I'll ask anyway.</p>&#xA;&#xA;<p>I have this query: </p>&#xA;&#xA;<pre><code>query {&#xA;  organization(login: ""facebook"") {&#xA;    repositories(first: 5) {&#xA;      items: edges {&#xA;        repo: node {&#xA;          name&#xA;          owner {&#xA;            login&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now, in the response I would like a way to place the login next to name, instead of nested in owner login.</p>&#xA;&#xA;<p>So in the response instead of: </p>&#xA;&#xA;<pre><code>{&#xA;  ...&#xA;  ""name"": ""react-native"",&#xA;  ""owner"": {&#xA;     ""login"": ""facebook""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I would like to have: </p>&#xA;&#xA;<pre><code>{&#xA;...&#xA;""name"": ""react-native"",&#xA;""ownerName"": ""facebook""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Thank you. </p>&#xA;",919445,,919445,2021-06-16 20:41:07,2021-06-16 20:41:07,GraphQL Move a child property into parent,<graphql>,1,0,0,2018-05-03 23:23:52
50166929,2,,50161256,2,,"<p>i couldnt get any help on this anywhere. in case anyone runs into this error message here are the steps i took to fix it:</p>&#xA;&#xA;<ol>&#xA;<li>switched from <code>graphql-express</code> to <code>apollo-server-express</code> (this was not necessary but i found apollo to be a more robust library)</li>&#xA;<li>used the following packages: <code>graphql graphql-import graphql-tools</code></li>&#xA;<li>switched from javascript based Type defs to using the GraphQL SDL (<code>.graphql</code>) file type</li>&#xA;<li>step 3 is what corrected the circular import issue associated with one-to-many (and m2m) relationships</li>&#xA;</ol>&#xA;&#xA;<p>i committed every step of the refactor from dumping the old code to creating the new. i added plenty of notes and explicit naming so that it should be usable as a guide.</p>&#xA;&#xA;<p>you can see the commit history diffs through the links below. all of the work until the last few commits was done within the <code>graphql/</code> directory. if you click the title of the commit it will show you the diff so you can follow the refactor </p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://github.com/chingu-x/chingu-connect/tree/refactor/%2320_apollo"" rel=""nofollow noreferrer"">Last refactor with one-to-many relationship using apollo and GraphQL SDL Type defs</a></li>&#xA;<li><a href=""https://github.com/chingu-x/chingu-connect/commits/refactor/%2320_apollo"" rel=""nofollow noreferrer"">commit history, start at <code>Scrapped old GraphQL setup</code></a></li>&#xA;</ul>&#xA;&#xA;<p>after the refactor i now have cleaner resolvers, a better directory pattern, and, most importantly, fully functioning one-to-many relationships between User and Connection! ...only took my entire goddamn day.</p>&#xA;&#xA;<p>the relationship in this case is:&#xA;Connection belongs to an owner (User through owner_id) and partner (User through partner_id).</p>&#xA;&#xA;<p>we will be moving forward from here with the codebase but i locked the branch and its commits for anyone who needs a guide. </p>&#xA;",7542831,,,,2018-05-04 03:56:19,"",,0,1,0,2018-05-04 03:56:19
50180426,2,,50180381,1,,"<p>It's called a template literal.</p>&#xA;&#xA;<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals</a></p>&#xA;&#xA;<p>Not only does it allow you to do multi-line formatting like your example above, but it also makes it easier to mix expressions in with string content.</p>&#xA;",7361479,,1264804,2019-08-06 14:49:25,2019-08-06 14:49:25,"",,0,0,0,2018-05-04 17:40:46
50232575,1,50232717,,0,518,"<p>I am experimenting with graphql and have created a simple server using graphql-yoga. My Mongoose product model queries my database and both resolvers return data as expected. So far it all works and I am very happy with how easy that was. However, I have one problem. I am trying to add a way to paginate the results from graphQL. </p>&#xA;&#xA;<h3>What did I try?</h3>&#xA;&#xA;<p>1) Adding a limit parameter to the Query type. </p>&#xA;&#xA;<p>2) Accessing the parameter through args in the resolver </p>&#xA;&#xA;<h3>Expected behaviour</h3>&#xA;&#xA;<p>I can use the args.limit parameter in my resolver and use it to alter the Mongoose function</p>&#xA;&#xA;<h3>Actual behaviour</h3>&#xA;&#xA;<p>I can't read the arg object. </p>&#xA;&#xA;<p>Full code below. How do I reach this goal? </p>&#xA;&#xA;<pre><code>import { GraphQLServer } from 'graphql-yoga'&#xA;import mongoose from ""mongoose""&#xA;import {products} from ""./models/products.js""&#xA;&#xA;const connection = mongoose.connect('mongodb://myDB')&#xA;&#xA;const prepare = (o) =&gt; {&#xA;  o._id = o._id.toString()&#xA;  return o&#xA;}&#xA;&#xA;const typeDefs = `&#xA;  type Product {&#xA;    _id: String&#xA;    name: String&#xA;    description: String&#xA;    main_image: String&#xA;    images: [String]&#xA;  }&#xA;&#xA;  type Query {&#xA;    product(_id: String): Product&#xA;    products(limit: Int): [Product]&#xA;  }&#xA;`&#xA;&#xA;const resolvers = {&#xA;  Query: {&#xA;    product: async (_id) =&gt; {&#xA;      return (await products.findOne(_id))&#xA;    },&#xA;    products: async (args) =&gt; {&#xA;      console.log(args.name)&#xA;      return (await products.find({}).limit(args.limit))&#xA;    },&#xA;  },&#xA;}&#xA;&#xA;const server = new GraphQLServer({ &#xA;  typeDefs, &#xA;  resolvers &#xA;})&#xA;&#xA;server.start(() =&gt; console.log('Server is running on localhost:4000'))&#xA;</code></pre>&#xA;",4462086,,,,2018-05-08 11:40:06,Implementing pagination with Mongoose and graphql-yoga,<node.js><mongoose><graphql>,1,0,0,2018-05-08 11:31:31
50235872,2,,50125284,1,,"<p><strong>SOLUTION:</strong></p>&#xA;&#xA;<p>Garbage Id in the return value was caused by not working populate in the nested entity. The way I managed to solve the problem:</p>&#xA;&#xA;<pre><code>const allMappings = () =&gt;&#xA;    Mapping.find({})&#xA;        .populate('user')&#xA;        .populate('ctSegment')&#xA;        .populate({&#xA;            path: 'partnerSegment',&#xA;            populate: {&#xA;                path: 'partner'&#xA;            }&#xA;        })&#xA;        .exec(); &#xA;</code></pre>&#xA;",7110178,,7110178,2018-05-15 20:19:56,2018-05-15 20:19:56,"",,0,0,0,2018-05-08 14:18:25
50243699,2,,50242992,1,,"<p>No. That was the whole purpose of GraphQL. To have a single endoint and allow users to fetch different type/granularity of data by specifying the input in a query format as opposed to REST APIs and then map them onto the returned JSON output.</p>&#xA;&#xA;<p>'data' acts as a parent/root level container for different entities that you have queried. Without these keys in the returned JSON data, there won't be any way to segregate the corresponding data. e.g. </p>&#xA;&#xA;<p>Your above query can be modified to include another entity like Owner,</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>{&#xD;&#xA;  Client(accountId: ""5417727750494381532d735a"") {&#xD;&#xA;    id&#xD;&#xA;  }&#xD;&#xA;  Owner {&#xD;&#xA;    id&#xD;&#xA;  }&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>In which case, the output will be something like</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>{&#xD;&#xA;  ""data"": {&#xD;&#xA;    ""Client"": [&#xD;&#xA;      ...&#xD;&#xA;    ],&#xD;&#xA;    ""Owner"": [&#xD;&#xA;      ...&#xD;&#xA;    ]&#xD;&#xA;  }&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>Without the 'Client' and 'Owner' keys in the JSON outout, there is no way to separate the corresponding array values.</p>&#xA;&#xA;<p>In your case, you can get only the array by doing <code>data.Client</code> on the returned output.</p>&#xA;",5005874,,,,2018-05-08 23:52:32,"",,0,0,0,2018-05-08 23:52:32
50250950,1,,,0,1229,"<p>I’m trying to develop a spring boot graphQl service using graphql-java-8 library. I’m fetching data from a web-service, the response I get from the service is a bit like dynamic for which I have to introduce graphQl interface in my response graphQl schema.</p>&#xA;&#xA;<pre><code>extend type Query {&#xA;    search(&#xA;        name: String,&#xA;        category: String&#xA;    ): [ResultOne]&#xA;}&#xA;&#xA;interface ResultOne {&#xA;    name: String&#xA;    content: String&#xA;}&#xA;&#xA;type Fish implements ResultOne {&#xA;    name: String&#xA;    content: String&#xA;    weight: Float&#xA;}&#xA;&#xA;type Fruit implements ResultOne {&#xA;    name: String&#xA;    content: String&#xA;    Color: String&#xA;}&#xA;&#xA;type Toy implements ResultOne {&#xA;    name: String&#xA;    content: String&#xA;    description: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>To wiring my model with graphQl framework,</p>&#xA;&#xA;<pre><code>return RuntimeWiring.newRuntimeWiring()&#xA;    .wiringFactory(new WiringFactory() {})&#xA;    .type(&#xA;          TypeRuntimeWiring.newTypeWiring(""ResultOne"")&#xA;          .typeResolver(env -&gt; {&#xA;              if(env.getObject() instanceof Map) {&#xA;              Map object = env.getObject();&#xA;              if (object.containsKey(""name"") &amp;&amp; object.get(""name"").equals(""fish"")) {&#xA;                return (GraphQLObjectType) env.getSchema().getType(""Fish"");&#xA;              } else if (object.containsKey(""name"") &amp;&amp; object.get(""name"").equals(""fruit"")) {&#xA;                return (GraphQLObjectType) env.getSchema().getType(""Fruit"");            &#xA;              } else if(object.containsKey(""name"") &amp;&amp; object.get(""name"").equals(""toy"")) {&#xA;                return (GraphQLObjectType) env.getSchema().getType(""Toy"");  &#xA;              } else {&#xA;                return null;&#xA;              }&#xA;          } else {&#xA;             return null;&#xA;          }&#xA;      })&#xA;  )&#xA;  .build();&#xA;</code></pre>&#xA;&#xA;<p>So, type resolving issue is also fix a way, not sure it’s ideal or not. For data binding I’m not sure how do I do that in graphQl’s recommended way. I would like to add that, I’ve a single End-Point and single fetcher for the whole API. Data are fetched in a single request and don't want to call twice as I already have whole response. I had to resolve the type at runtime and wire the data for implemented model. So far data are fetched perfectly and the values are also coming till the interface against my query, but appeared null for interface implemented model part e.g: Fish, Fruit &amp; Toy in this example. My question is how do I manupulate dynamically resolved type data for the java library?</p>&#xA;&#xA;<p>Feel free to ask me any question regarding this issue.</p>&#xA;&#xA;<p>Sample query:</p>&#xA;&#xA;<pre><code>{&#xA;  search() {&#xA;    ResultOne {&#xA;      name&#xA;      content&#xA;      ... on Fish {&#xA;        weight  &#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Corresponding response that I'm currently getting:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""search"": [&#xA;     {  &#xA;     ""resultOne"": [&#xA;          {&#xA;            ""name"": ""Salmon"", &#xA;            ""content"": ""Frozen Food"",&#xA;            ""weight"": null&#xA;          }&#xA;        ]&#xA;      }&#xA;    ]&#xA;  },&#xA;  ""extensions"": {&#xA;    ""Total-ResponseTime"": 23020,&#xA;    ""resultOne-Time"": 22683&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3970878,,3970878,2018-05-22 01:27:39,2018-05-22 01:27:39,How do I resolve data for a schema type that implement an interface in GraphQL?,<web-services><spring-boot><java-8><graphql><graphql-java>,0,2,0,2018-05-09 10:19:21
50267875,2,,42569309,1,,"<p>After searching for best way to organize SailsJS + GraphQL app, and trying out multiple variants, the best one and the one we decided to use was to create a <code>graphql</code> folder, and inside of it create a folder for each entity in our app's model. We stored the queries and mutations, type and utils for the entity inside the entity folder.</p>&#xA;&#xA;<p><a href=""https://kolosek.com/sails-graphql-guide/"" rel=""nofollow noreferrer"">Here</a> you can take a look at how the structure of the app looks like in full, including how the tests are organized.</p>&#xA;",1660318,,,,2018-05-10 07:34:24,"",,0,0,0,2018-05-10 07:34:24
50277023,1,50501075,,1,845,"<p>Is there a way in Github v4 API to get all the commits after a given commit?</p>&#xA;&#xA;<p>I have tried this, but it doesn't give me any result.</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""karthikeayan"", name: ""puhar-petti"") {&#xA;    ref(qualifiedName: ""master"") {&#xA;      target {&#xA;        ... on Commit {&#xA;          history(last: 100, before: ""d1b7ccc044be72490525a3fe1b819440f4927cba 0"") {&#xA;            pageInfo {&#xA;              startCursor&#xA;              endCursor&#xA;            }&#xA;            edges {&#xA;              node {&#xA;                oid&#xA;                messageHeadline&#xA;                messageBody&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>With git log I can accomplish this by doing</p>&#xA;&#xA;<pre><code>git log d1b7ccc044be72490525a3fe1b819440f4927cba..HEAD&#xA;</code></pre>&#xA;",2436847,,2436847,2018-05-10 16:11:29,2019-01-16 11:15:43,GraphQL - How to get all the commits after a given commit?,<github><graphql><commit><github-api>,1,1,0,2018-05-10 16:03:31
50291479,2,,50289878,6,,"<p>This is by design. From the <a href=""https://github.com/apollographql/apollo-link/tree/master/packages/apollo-link-error"" rel=""noreferrer"">docs</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <ul>&#xA;  <li>graphQLErrors: An array of errors from the GraphQL endpoint</li>&#xA;  <li>networkError: Any error during the link execution or server response,&#xA;  that wasn't delivered as part of the errors field in the GraphQL result</li>&#xA;  </ul>&#xA;</blockquote>&#xA;&#xA;<p>In other words, if your query is malformed, you request a field that isn't valid (like in your example), or hit any other issue that results in status other than 200, the error will appear as part of the <code>networkError</code> property. On the other hand, if the request returns a 200, but the errors array inside the response is populated, those same errors will be returned as part of <code>graphQLErrors</code>.</p>&#xA;&#xA;<p>If you want to see an example of <code>graphQLErrors</code> being populated, format your query correctly but have one of your resolvers throw an error as soon as it's called. As long as the query doesn't hit any other issues, you should see the same error pop up inside <code>graphQLErrors</code>.</p>&#xA;",6024220,,,,2018-05-11 11:34:41,"",,0,0,0,2018-05-11 11:34:41
50300315,1,,,0,79,<p>I am typing out my <code>typedDefs</code> and for one property it can return either <code>String</code> or <code>Boolean</code>.</p>&#xA;&#xA;<pre><code>const typeDefs = `&#xA;    type Analysis {&#xA;    id: String&#xA;    analysisName: String&#xA;    creator: String&#xA;    description: String&#xA;    datesValid: String &#xA;}&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>I want <code>datesValid</code> to be either <code>String</code> or <code>Boolean</code>. I tried: </p>&#xA;&#xA;<pre><code>const typeDefs = `&#xA;    ...&#xA;    datesValid: boolString &#xA;}&#xA;&#xA;union boolString = String | Boolean&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>But this resulted in a <code>500</code> internal server error when trying to query via GraphiQL.</p>&#xA;&#xA;<p>My end goal here is to type it as either <code>String | Boolean</code></p>&#xA;,3330490,,,,2018-05-13 09:55:45,using Union types in GraphQL typedDefs,<graphql><apollo>,1,0,0,2018-05-11 21:11:15
50331808,2,,49939464,3,,"<p>It's the structure of your query. The query should be structured much like you would in GraphiQL such as:<br>&#xA;<code>mutation {&#xA;  updateUserName(id: 1, name: ""du"") {&#xA;          id&#xA;          name&#xA;        }&#xA;}</code></p>&#xA;&#xA;<p>Hence, your code should look something like this, with the <strong>mutation</strong> keyword as the first thing in your query before your opening brace <strong>{</strong> :</p>&#xA;&#xA;<pre><code>it('should update user name correctly', () =&gt; {&#xA;  mockserver&#xA;  .query(`mutation {&#xA;    updateUserName(id: 1, name: ""du"") {&#xA;      id&#xA;      name&#xA;    }&#xA;  }`)&#xA;  .then(res =&gt; {&#xA;    console.log(res);&#xA;    expect(1).to.be.equal(1);&#xA;  });&#xA;});&#xA;</code></pre>&#xA;",6356509,,,,2018-05-14 13:41:13,"",,0,0,0,2018-05-14 13:41:13
50334328,1,,,4,3987,"<p>I'm struggling with my GraphQL API because I need to take advantage of Enums while keeping their full description in the frontend.</p>&#xA;&#xA;<p>In short:&#xA;I have different states for a product: <code>""Has been sent""</code>, <code>""Not sent yet""</code>, <code>""Received""</code>.&#xA;So this is the right place to use Enums:</p>&#xA;&#xA;<pre><code>enum ProductState {&#xA;  HAS_BEEN_SENT&#xA;  NOT_SENT_YET&#xA;  RECEIVED&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I need to display the <strong>proper strings</strong> on the frontend (""<code>Has been sent</code>"", and not ""<code>HAS_BEEN_SENT</code>"").</p>&#xA;&#xA;<p>I can't use a simple solution as ""replace underscores with spaces and lowercase the string"" because my API is not in English but in French (so I have accents and special characters).</p>&#xA;&#xA;<p><strong>Can't an Enum return a string? Or an object?</strong>&#xA;I tried with directives but impossible to get it work...</p>&#xA;&#xA;<p>Actually I don't care how it is written in the database (the uppercase or lowercase form) nor in the GraphQL API. I just need my client to access to the different product states in their ""French"" form.</p>&#xA;",4936168,,,,2019-04-05 00:16:04,Can an enum return description (string) in GraphQL?,<graphql><graphql-js>,1,0,0,2018-05-14 15:47:24
50337185,1,50340581,,1,781,"<p>I'm trying to use the Github GraphQL to get a list of my organization's commits between this month and last month. I could just specify the first 100 commits and paginate backwards, </p>&#xA;&#xA;<pre><code>repository(owner: ""myOrg"", name: ""myRepo"") {&#xA;    ref(qualifiedName: ""master"") {&#xA;        target {&#xA;        ... on Commit {&#xA;            history(first: 100) {&#xA;</code></pre>&#xA;&#xA;<p>but it seems like the API should be set up to allow a more specific search so it doesn't have to do as much work. I know that you can query <a href=""https://developer.github.com/v4/enum/searchtype/"" rel=""nofollow noreferrer"">Repositories, Issues, and Users</a> using a <a href=""https://developer.github.com/v4/query/#search"" rel=""nofollow noreferrer"">search query</a> but this doesn't seem to do the same thing as just asking for the specific results I need. </p>&#xA;&#xA;<p>What is best way to filter specific commits, or any information really, using GraphQL without making a ton of unnecessary requests?</p>&#xA;&#xA;<p>Thanks!</p>&#xA;",2860010,,,,2018-05-15 00:00:16,How to use Github GraphQL search for my own commits?,<github><graphql><github-api>,1,0,0,2018-05-14 18:54:48
50340581,2,,50337185,2,,"<p>Did you try <code>since</code> and <code>until</code>?</p>&#xA;&#xA;<p>Like this:</p>&#xA;&#xA;<pre><code>repository(owner: ""myOrg"", name: ""myRepo"") {&#xA;    ref(qualifiedName: ""master"") {&#xA;        target {&#xA;        ... on Commit {&#xA;            history(since: ""2018-04-01T22:29:24+00:00"", until: ""2018-05-14T22:29:24+00:00"") {&#xA;</code></pre>&#xA;",6347417,,,,2018-05-15 00:00:16,"",,0,0,0,2018-05-15 00:00:16
50372676,2,,50370196,5,,"<p>Ok, so it is possible to query single-object files as long as they have a parent (folder).</p>&#xA;&#xA;<p>Let's take these parameters:</p>&#xA;&#xA;<ul>&#xA;<li><code>gatsby-source-filesystem</code> configured to <code>src/data</code></li>&#xA;<li><code>test.json</code> file positioned at <code>src/data/test.json</code> with <code>{ ""key"": ""value"" }</code> content in it</li>&#xA;</ul>&#xA;&#xA;<p>Now as the <code>test.json</code> file actually has a parent (<code>data</code> folder) - you can query the fields from <code>test.json</code> like this:</p>&#xA;&#xA;<pre><code>{&#xA;  dataJson {&#xA;    key&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But putting those directly in your root folder is a bad practice, because when you will store another json file, i.e. <code>secondtest.json</code> with <code>{ ""key2"": ""value2"" }</code> content, and will query it with the same query as above, you will get data only from a single node (not sure if it takes first, or last encountered node),</p>&#xA;&#xA;<p>So, the perfect solution for this case is to have your single-object json files stored in separate folders with just one json per folder.</p>&#xA;&#xA;<p>For example you have some ""About Me"" data:</p>&#xA;&#xA;<ol>&#xA;<li>create a <code>about</code> folder in your <code>src/data</code></li>&#xA;<li>create an <code>index.json</code> file with i.e. <code>{ ""name"": ""John"" }</code></li>&#xA;<li>query your data</li>&#xA;</ol>&#xA;&#xA;<p>Like this:</p>&#xA;&#xA;<pre><code>{&#xA;  aboutJson {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That's it.</p>&#xA;",4518022,,,,2018-05-16 13:47:32,"",,0,0,0,2018-05-16 13:47:32
50375893,1,50850790,,0,215,"<p>I'd like to know if there is a way to join two rest API on the <strong>name</strong> attribute using <strong>graphql</strong>. These are the response that I have</p>&#xA;&#xA;<pre><code>// products API&#xA;[&#xA; {&#xA;  id: ""0001"",&#xA;  name: ""a name"",&#xA;  color: ""black"",&#xA;  size: ""L""&#xA; },&#xA; {&#xA;  id: ""0002"",&#xA;  name: ""an other name"",&#xA;  color: ""red"",&#xA;  size: ""M""&#xA; }&#xA;]&#xA;&#xA;// price API&#xA;[&#xA; {&#xA;  id: ""xyz1"",&#xA;  name: ""a name"",&#xA;  price: 10&#xA; },&#xA; {&#xA;  id: ""xyz2"",&#xA;  name: ""an other name"",&#xA;  price: 20&#xA; }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>and I want to use graphql to combine them, so that </p>&#xA;&#xA;<pre><code>// response from graphql&#xA;[&#xA; {&#xA;  id: ""0001"",&#xA;  name: ""a name"",&#xA;  price: 10,&#xA;  color: ""black"",&#xA;  size: ""L""&#xA; },&#xA; {&#xA;  id: ""0002"",&#xA;  name: ""an other name"",&#xA;  price: 20,&#xA;  color: ""red"",&#xA;  size: ""M""&#xA; }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>Is graphql the right tool?</p>&#xA;",3849960,,3849960,2018-05-17 08:50:58,2018-06-14 06:17:58,graphql: rest API join,<node.js><graphql><apollo-server><express-graphql>,1,5,0,2018-05-16 16:30:55
50377419,1,50378432,,2,922,"<p>I am testing a basic aggregation function using counts from Sequelize and here's my type <strong>Counts</strong>:</p>&#xA;&#xA;<pre><code>type Creserve {&#xA;    id: ID!&#xA;    rDateStart: Date!&#xA;    rDateEnd: Date!&#xA;    grade: Int!&#xA;    section: String!&#xA;    currentStatus: String!&#xA;    user: User! &#xA;    cartlab: Cartlab! &#xA;}&#xA;type Counts {&#xA;    section: String!&#xA;    count: Int&#xA;}&#xA;type Query {&#xA;    getBooking(id: ID!): Creserve!&#xA;    allBookings: [Creserve]&#xA;    getBookingByUser(userId: ID): Creserve&#xA;    upcomingBookings: [Creserve]  &#xA;    countBookings: [Counts]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am using countBookings as my query for aggregate functions and here's my resolver for the query:</p>&#xA;&#xA;<pre><code>countBookings: async (parent, args, {models}) =&gt; &#xA;    {&#xA;      const res = await models.Creserve.findAndCountAll({&#xA;        group: 'section',&#xA;        attributes: ['section', [Sequelize.fn('COUNT', 'section'), 'count']]&#xA;      });&#xA;        return res.rows;&#xA;  },&#xA;</code></pre>&#xA;&#xA;<p>The query that it outputs is this:</p>&#xA;&#xA;<pre><code>Executing (default): SELECT ""section"", COUNT('section') AS ""count"" FROM ""Creserve"" AS ""Creserve"" GROUP BY ""section"";&#xA;</code></pre>&#xA;&#xA;<p>And tried this query in my psql shell and it's working fine:</p>&#xA;&#xA;<pre><code> section | count&#xA;---------+-------&#xA; A       |     2&#xA; R       |     2&#xA;</code></pre>&#xA;&#xA;<p>However, when I tried querying <strong>countBookings</strong> in my GraphQL Playground, section is returned but not the count:</p>&#xA;&#xA;<pre><code>    {&#xA;  ""data"": {&#xA;    ""countBookings"": [&#xA;      {&#xA;        ""section"": ""A"",&#xA;        ""count"": null&#xA;      },&#xA;      {&#xA;        ""section"": ""R"",&#xA;        ""count"": null&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there something I missed out? Or is this a bug? This is the answer I tried following to with this example: https://stackoverflow.com/a/45586121/9760036</p>&#xA;&#xA;<p>Thank you very much!</p>&#xA;&#xA;<p>edit: returning a console.log(res.rows) outputs something like this:</p>&#xA;&#xA;<pre><code>   [ Creserve {&#xA;    dataValues: { section: 'A', count: '2' },&#xA;    _previousDataValues: { section: 'A', count: '2' },&#xA;    _changed: {},&#xA;    _modelOptions:&#xA;     { timestamps: true,&#xA;       validate: {},&#xA;       freezeTableName: true,&#xA;       underscored: false,&#xA;       underscoredAll: false,&#xA;       paranoid: false,&#xA;       rejectOnEmpty: false,&#xA;       whereCollection: null,&#xA;       schema: null,&#xA;       schemaDelimiter: '',&#xA;       defaultScope: {},&#xA;       scopes: [],&#xA;       indexes: [],&#xA;       name: [Object],&#xA;       omitNull: false,&#xA;       hooks: [Object],&#xA;       sequelize: [Sequelize],&#xA;       uniqueKeys: {} },&#xA;    _options:&#xA;     { isNewRecord: false,&#xA;       _schema: null,&#xA;       _schemaDelimiter: '',&#xA;       raw: true,&#xA;       attributes: [Array] },&#xA;    __eagerlyLoadedAssociations: [],&#xA;    isNewRecord: false },&#xA;  Creserve {&#xA;    dataValues: { section: 'R', count: '2' },&#xA;    _previousDataValues: { section: 'R', count: '2' },&#xA;    _changed: {},&#xA;    _modelOptions:&#xA;     { timestamps: true,&#xA;       validate: {},&#xA;       freezeTableName: true,&#xA;       underscored: false,&#xA;       underscoredAll: false,&#xA;       paranoid: false,&#xA;       rejectOnEmpty: false,&#xA;       whereCollection: null,&#xA;       schema: null,&#xA;       schemaDelimiter: '',&#xA;       defaultScope: {},&#xA;       scopes: [],&#xA;       indexes: [],&#xA;       name: [Object],&#xA;       omitNull: false,&#xA;       hooks: [Object],&#xA;       sequelize: [Sequelize],&#xA;       uniqueKeys: {} },&#xA;    _options:&#xA;     { isNewRecord: false,&#xA;       _schema: null,&#xA;       _schemaDelimiter: '',&#xA;       raw: true,&#xA;       attributes: [Array] },&#xA;    __eagerlyLoadedAssociations: [],&#xA;    isNewRecord: false } ]&#xA;</code></pre>&#xA;&#xA;<p>Here's for res.count:</p>&#xA;&#xA;<pre><code>Executing (default): SELECT ""section"", COUNT('section') AS ""count"" FROM ""Creserve"" AS ""Creserve"" GROUP BY ""section"";&#xA;[ { count: '2' }, { count: '2' } ]&#xA;</code></pre>&#xA;",9760036,,9760036,2018-05-17 03:20:54,2018-05-17 17:43:36,Aggregate function returns null GraphQL,<node.js><express><graphql>,1,0,0,2018-05-16 18:05:55
50378432,2,,50377419,0,,"<p><strong>Problem</strong></p>&#xA;&#xA;<p>Actually you are doing everything right here... but what is happening here is the <code>sequlize</code> doesn't return plain object... It always returns the data in form of <code>instance</code> like that</p>&#xA;&#xA;<pre><code>[ Creserve {&#xA;    dataValues: { section: 'A', count: '2' },&#xA;    _previousDataValues: { section: 'A', count: '2' },&#xA;    _changed: {},&#xA;    _modelOptions:&#xA;     { timestamps: true,&#xA;</code></pre>&#xA;&#xA;<p><strong>Solution</strong></p>&#xA;&#xA;<blockquote>&#xA;  <p>I am not sure but there is no other way instead of looping and makes&#xA;  response to json object...</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>const array = []&#xA;res.rows.map((data) =&gt; {&#xA;  array.push(data.toJSON())&#xA;})&#xA;return array&#xA;</code></pre>&#xA;",7510657,,7510657,2018-05-17 17:43:36,2018-05-17 17:43:36,"",,0,7,0,2018-05-16 19:14:57
50382830,1,,,6,1920,"<p>How to make proper <strong>ShopifyAPI::GraphQL</strong> method in Rails.</p>&#xA;&#xA;<p>Trying the below code in <code>rails console</code> works fine.&#xA;But when I tried to put that code and make a method in Rails controller/model, i'm getting:</p>&#xA;&#xA;<p><code>GraphQL::Client::DynamicQueryError Expected definition to be assigned to a static constant</code></p>&#xA;&#xA;<pre><code>shopify_client&#xA;client = ShopifyAPI::GraphQL.new&#xA;&#xA;SHOP_NAME_QUERY = client.parse &lt;&lt;-'GRAPHQL'&#xA; {&#xA;  shop {&#xA;   name&#xA;  }&#xA; }&#xA;GRAPHQL&#xA;&#xA;result = client.query(SHOP_NAME_QUERY)&#xA;</code></pre>&#xA;&#xA;<p>I tried to play around with <code>variables</code>&#xA;following <code>https://github.com/github/graphql-client/blob/master/guides/dynamic-query-error.md</code> <strong>but no success</strong>.</p>&#xA;&#xA;<p>How to make a method using the above function that will not return the mentioned error above.</p>&#xA;&#xA;<p><strong>Sample Model method</strong>:</p>&#xA;&#xA;<pre><code>def trial&#xA;  shopify_client&#xA;  client = ShopifyAPI::GraphQL.new&#xA;  shop_query = client.parse &lt;&lt;-'GRAPHQL'&#xA;    {&#xA;     shop {&#xA;      name&#xA;     }&#xA;    }&#xA;  GRAPHQL&#xA;&#xA;  client.query(shop_query)&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>In <strong>Gemfile</strong>:  <code>gem 'shopify_api', git: 'https://github.com/Shopify/shopify_api', branch: 'graphql-support'</code></p>&#xA;",2534479,,2534479,2018-05-17 04:45:30,2020-05-13 03:24:50,GraphQL::Client::DynamicQueryError Expected definition to be assigned to a static constant,<ruby-on-rails><ruby><graphql><shopify-app>,3,4,0,2018-05-17 03:17:08
50383555,2,,50382830,1,,<p>Does it work if you use: </p>&#xA;&#xA;<pre><code>class MyModel&#xA;  ShopQuery = ShopifyAPI::GraphQL.new.parse &lt;&lt;-'GRAPHQL'&#xA;  {&#xA;    shop {&#xA;      name&#xA;      }&#xA;  }&#xA;  GRAPHQL&#xA;&#xA;  # ....&#xA;  def trial&#xA;    shopify_client&#xA;&#xA;    ShopifyAPI::GraphQL.new.query(ShopQuery)&#xA;  end&#xA;&#xA;end&#xA;</code></pre>&#xA;&#xA;<p><strong>Note:</strong> <code>shop_query -&gt; ShopQuery</code> because you need to use constant.</p>&#xA;,177154,,177154,2018-05-17 06:23:11,2018-05-17 06:23:11,"",,0,6,0,2018-05-17 04:53:44
50386053,1,,,1,1803,"<p>I have the following Union defined in my schema file:</p>&#xA;&#xA;<pre><code>union ContentUnion = Content | Setting | Page | Picture&#xA;</code></pre>&#xA;&#xA;<p>and for example this type defintion for <em>Setting</em></p>&#xA;&#xA;<pre><code>type Setting {&#xA;    id: String!&#xA;    doctype: String!&#xA;    name: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I also have a working Type resolver for <em>ContentUnion</em>.</p>&#xA;&#xA;<p>Using this query</p>&#xA;&#xA;<pre><code>{ &#xA; content(id: ""113804""){&#xA;  ... on Setting{&#xA;      id&#xA;  }&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am able to retrieve a value. But this feels weird for me because I do not understand why I have to explicitly tell that the Type is <em>Setting</em>. I thought that is what the TypeResolver is actually for?</p>&#xA;&#xA;<p>I would like to simply use this query</p>&#xA;&#xA;<pre><code>  { &#xA;     content(id: ""113804""){&#xA;      id&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>But the result therefore is:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": null,&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Validation error of type FieldUndefined: Field 'id' in type 'ContentUnion' is undefined @ 'content/id'"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 1,&#xA;          ""column"": 26&#xA;        }&#xA;      ],&#xA;      ""description"": ""Field 'id' in type 'ContentUnion' is undefined"",&#xA;      ""validationErrorType"": ""FieldUndefined"",&#xA;      ""queryPath"": [&#xA;        ""content"",&#xA;        ""id""&#xA;      ],&#xA;      ""errorType"": ""ValidationError"",&#xA;      ""path"": null,&#xA;      ""extensions"": null&#xA;    }&#xA;  ],&#xA;  ""extensions"": null,&#xA;  ""dataPresent"": false&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That is because the schema was not able to locate an <em>id</em> field on the <em>ContentUnion</em> union type since it is an union. I wonder if there is a way to get this to work maybe? Because it would remove a lot of headache for me in my implementation.</p>&#xA;",5967828,,,,2021-09-02 22:21:18,"GraphQL is there a way to get resolved Union type fields without explicit ""...on"" query?",<java><graphql-java>,2,0,0,2018-05-17 07:49:22
50402387,2,,50382830,3,,"<p><strong>Finally got a simple one working</strong>.</p>&#xA;&#xA;<pre><code>  Rails Model:&#xA;&#xA;  SHOP_NAME_QUERY = ShopifyGraphQLClient.parse &lt;&lt;~GRAPHQL&#xA;  {&#xA;    shop {&#xA;      name&#xA;    }&#xA;  }&#xA;  GRAPHQL&#xA;&#xA;  Rails Controller:&#xA;&#xA;  def get_shop_name&#xA;    @shop.shopify_client (* very important)&#xA;    # shopify_client (client_id) is something like {""User-Agent""=&gt;""xxx"", ""X-Shopify-Access-Token""=&gt;""xxx""}&#xA;    # on my side it saved in DB,&#xA;    # Client ID: Any app that wants access to a shop’s data. A user must grant permission before the client can access any data.&#xA;&#xA;    client = ShopifyAPI::GraphQL.new&#xA;    render json: client.query(Shop::SHOP_NAME_QUERY).data and return&#xA;  end&#xA;&#xA;&#xA;  Result like:&#xA;  {&#xA;    data: {&#xA;      shop: {&#xA;        name: ""sample-shop-name""&#xA;      }&#xA;    },&#xA;    casted_data: { },&#xA;    errors: [ ]&#xA;  }&#xA;&#xA;  References:&#xA;    https://github.com/mikeyhew/shopify_graphql_client&#xA;    https://github.com/Shopify/shopify_api&#xA;    https://shopify.dev/tutorials/authenticate-with-oauth#scopes&#xA;</code></pre>&#xA;&#xA;<p>I can now continue working with other requests...&#xA;Hope this help someone :) </p>&#xA;",2534479,,2534479,2020-05-13 03:24:50,2020-05-13 03:24:50,"",,0,2,0,2018-05-18 01:01:50
50407691,2,,50152094,1,,"<p>Unlike <a href=""https://graphql.org/graphql-js/utilities/#printschema"" rel=""nofollow noreferrer""><code>printSchema</code></a> it is not mentioned in the docs, but <a href=""https://github.com/graphql/graphql-js"" rel=""nofollow noreferrer"">graphql-js</a> exports <code>printType</code> method exactly for this! See in <a href=""https://github.com/graphql/graphql-js/blob/master/src/index.js#L346"" rel=""nofollow noreferrer"">the sources</a>. For example with <a href=""https://github.com/excitement-engineer/graphql-iso-date"" rel=""nofollow noreferrer"">graphql-iso-date</a>.</p>&#xA;&#xA;<pre><code>const { printType } = require('graphql');&#xA;const { GraphQLDate } = require('graphql-iso-date');&#xA;&#xA;console.log(printType(GraphQLDate));&#xA;</code></pre>&#xA;&#xA;<p>It prints: </p>&#xA;&#xA;<pre><code>""""""&#xA;A date string, such as 2007-12-03, compliant with the `full-date` format&#xA;outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for&#xA;representation of dates and times using the Gregorian calendar.&#xA;""""""&#xA;scalar Date&#xA;</code></pre>&#xA;&#xA;<p>Which can be simply put to <a href=""https://www.apollographql.com/docs/graphql-tools/generate-schema.html#makeExecutableSchema"" rel=""nofollow noreferrer""><code>makeExecutableSchema</code></a> functions <code>typeDefs</code> parameter. </p>&#xA;",336753,,336753,2018-05-18 09:15:04,2018-05-18 09:15:04,"",,0,0,0,2018-05-18 09:08:04
50440537,1,,,3,831,"<p>Before I have these:</p>&#xA;&#xA;<p><strong>Getting Products by product_ids</strong></p>&#xA;&#xA;<pre><code>shopify_client #shopify_session&#xA;ShopifyAPI::Product.all(:params =&gt; &#xA;{:page =&gt; 1, :limit =&gt; 250, :ids =&gt; product_ids})&#xA;</code></pre>&#xA;&#xA;<p><strong>Getting Collections, filter by product_id &amp; specific field</strong></p>&#xA;&#xA;<pre><code>ShopifyAPI::Collect.find(:all, &#xA;params:{product_id: product_id, fields: 'collection_id'})&#xA;</code></pre>&#xA;&#xA;<p>Now I'm migrating to GraphQL, how can I achieve the same result as REST?</p>&#xA;&#xA;<p>Here is sample GraphQL query:</p>&#xA;&#xA;<pre><code># Once your session is activated, simply construct a new graphql client and use `parse` and `query`&#xA;&#xA;&#xA;client = ShopifyAPI::GraphQL.new&#xA;&#xA;SHOP_NAME_QUERY = client.parse &lt;&lt;-'GRAPHQL'&#xA;  {&#xA;    shop {&#xA;      name&#xA;    }&#xA;  }&#xA;GRAPHQL&#xA;&#xA;result = client.query(SHOP_NAME_QUERY)&#xA;result.data.shop.name&#xA;</code></pre>&#xA;&#xA;<p><strong>Reference Gem:</strong> <a href=""https://github.com/Shopify/shopify_api/pull/431"" rel=""nofollow noreferrer"">https://github.com/Shopify/shopify_api/pull/431</a></p>&#xA;&#xA;<p>Thanks for help.</p>&#xA;",2534479,,2534479,2018-05-22 02:48:27,2018-05-22 02:48:27,How to get Products by ids & Collections with filter using ShopifyAPI::GraphQL,<ruby-on-rails><shopify><graphql>,0,4,0,2018-05-21 00:19:28
50462944,1,50463160,,33,11474,"<p>What I want to do is to query for a particular field multiple times with different arguments. Is that possible in GraphQL? </p>&#xA;&#xA;<p>Something like this:</p>&#xA;&#xA;<pre><code>query {&#xA;    myItem(size: 100, type: 2) {&#xA;        id,&#xA;        name&#xA;    }&#xA;    myItem(size: 150, type: 2) {&#xA;        id,&#xA;        name&#xA;    }&#xA;    myItem(size: 10, type: 1) {&#xA;        id,&#xA;        name&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",1807476,,,,2018-05-22 19:17:20,Is it possible to query the same field multiple times with graphql,<graphql>,1,0,0,2018-05-22 08:18:20
50463160,2,,50462944,63,,"<p>Yes, this is possible, but not in this form. GraphQL server will reject such query as a field with the same name used multiple times, but with different arguments.</p>&#xA;&#xA;<p>You need to use aliases:</p>&#xA;&#xA;<pre><code>query {&#xA;  item1: myItem(size: 100, type: 2) {&#xA;    id,&#xA;    name&#xA;  }&#xA;  item2: myItem(size: 150, type: 2) {&#xA;    id,&#xA;    name&#xA;  }&#xA;  item3: myItem(size: 10, type: 1) {&#xA;    id,&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can find more info on aliases here:</p>&#xA;&#xA;<p><a href=""http://graphql.org/learn/queries/#aliases"" rel=""noreferrer"">http://graphql.org/learn/queries/#aliases</a></p>&#xA;",576766,,576766,2018-05-22 19:17:20,2018-05-22 19:17:20,"",,0,0,0,2018-05-22 08:30:32
50501075,2,,50277023,0,,"<p>In my experiments, the <em>before</em> cursor is ignored.</p>&#xA;&#xA;<p>In v4 you can search forward by pages, as in this <a href=""https://gist.github.com/waseem/c71fa3c8b2b2824f2cdcb34bef51dcb3#file-query-graphql"" rel=""nofollow noreferrer"">query.graphql</a> gist.</p>&#xA;&#xA;<pre><code>history(first: 100, after: ""d1b7ccc044be72490525a3fe1b819440f4927cba 0"") {&#xA; ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In v3 you might be able to use the <a href=""https://developer.github.com/v3/search/#search-commits"" rel=""nofollow noreferrer"">Search Commits API</a> that is being previewed. However, it only searches the default branch.</p>&#xA;",901597,,,,2018-05-24 04:39:03,"",,0,0,0,2018-05-24 04:39:03
50579512,2,,50386053,0,,"<p>I'm sorry you have to use the query with typed fragments.</p>&#xA;&#xA;<p>Per <a href=""http://facebook.github.io/graphql/October2016/#sec-Unions"" rel=""nofollow noreferrer"">unions in the GraphQL specification</a>, GraphQL Unions represent an object that could be one of a list of GraphQL Object types, but provides for no guaranteed fields between those types. <strong>No</strong> fields may be queried on union without the use of typed fragments.</p>&#xA;",2353652,,,,2018-05-29 08:17:43,"",,0,0,0,2018-05-29 08:17:43
50662312,1,50663365,,3,1056,"<p>New to graphql and the Github API. I'm trying to get a list of commits back, sorted by date.  This is what I have so far:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""facebook"", name: ""create-react-app"") {&#xA;    ref(qualifiedName: ""master"") {&#xA;      target {&#xA;        ... on Commit {&#xA;          id&#xA;          history(first: 20) {&#xA;            pageInfo {&#xA;            hasNextPage&#xA;          }&#xA;          edges {&#xA;            node {&#xA;              messageHeadline&#xA;              oid&#xA;              message&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This just returns a flat list of the commit history.  Is there another object or connection that I can use to group the results by date?</p>&#xA;&#xA;<p>Thanks</p>&#xA;",4839382,,4839382,2018-06-03 00:39:59,2018-06-03 04:40:14,Github v4 GraphQL API. Get commits by date,<graphql><github-api>,1,0,0,2018-06-03 00:29:23
50663365,2,,50662312,2,,"<p>There is no notion of ""groupBy"" or ""GroupedBy"" in the <a href=""https://developer.github.com/v4/"" rel=""nofollow noreferrer"">GraphQL API v4 reference</a>.</p>&#xA;&#xA;<p>All you have is an <a href=""https://platform.github.community/t/ordering-of-tags/3311/8"" rel=""nofollow noreferrer""><code>orderBy</code> argument</a> for <a href=""https://developer.github.com/v4/reference/object/repository/"" rel=""nofollow noreferrer"">repository</a>.<br>&#xA;You can see an <a href=""https://platform.github.community/t/lack-of-documentation-on-ordering-options/1477"" rel=""nofollow noreferrer"">example here</a></p>&#xA;&#xA;<pre><code>{&#xA;  organization(login: ""lvtech"") {&#xA;    repositories(first: 3, orderBy: {field: PUSHED_AT, direction: DESC}) {&#xA;      edges {&#xA;        node {&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But again, that applies to repository attributes, not to commit attributes.</p>&#xA;",6309,,,,2018-06-03 04:40:14,"",,0,0,0,2018-06-03 04:40:14
50676383,2,,50675989,0,,<p>Please check the format of </p>&#xA;&#xA;<blockquote>&#xA;  <p>this.props.listMessagesQuery.listMessages</p>&#xA;</blockquote>&#xA;&#xA;<p>As the error defined that particular data or props you are passing are not an object. </p>&#xA;&#xA;<blockquote>&#xA;  <p>console.log(this.props.listMessagesQuery.listMessages) </p>&#xA;</blockquote>&#xA;&#xA;<p>check if you find it in current formate. If you don't find anything share you this console.log result. Hope it helps you </p>&#xA;,7369538,,,,2018-06-04 08:33:06,"",,0,0,0,2018-06-04 08:33:06
50747486,1,,,1,312,"<p>i used Apollo in ReactNative Project</p>&#xA;&#xA;<p>i want get some products from server with Query component in ApolloClient , my query schema is some thing like this</p>&#xA;&#xA;<pre><code> products(isExisting:true) {&#xA;    id&#xA;    name&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>this Query give me all available products and also i have this query too with different Argument</p>&#xA;&#xA;<pre><code>products(minPrice:$price)&#xA;   id&#xA;   name&#xA; } &#xA;</code></pre>&#xA;&#xA;<p>now i want create program for conditional for choose between 2 Arguments , in Plane [A] use (isExisting) arg and in Plane [B] use (minPrice)</p>&#xA;&#xA;<p>my first and stupid solution is create 2 different query component , is it any other way , for example set Variable for arguments like this</p>&#xA;&#xA;<pre><code> products($choose:$value)   &#xA;</code></pre>&#xA;&#xA;<p>also i know about directive in graphql <a href=""https://graphql.github.io/learn/queries/#directives"" rel=""nofollow noreferrer"">https://graphql.github.io/learn/queries/#directives</a></p>&#xA;&#xA;<p>but i think this is just for field</p>&#xA;&#xA;<p>also my second solution for resolve this put javascript variable in `` , like this</p>&#xA;&#xA;<pre><code>   render() {&#xA;&#xA;      const arg = 'minPrice';&#xA;&#xA;          return(&#xA;               &lt;Query&#xA;                  variables={{ }}&#xA;                    query={gql`&#xA;&#xA;                           query {&#xA;                              products(${arg}:100) {&#xA;                                 id&#xA;                                 name }&#xA;</code></pre>&#xA;&#xA;<p>i am checked this , working well for me , but i want know this is good and better way </p>&#xA;",7700503,,7700503,2018-06-07 18:15:10,2018-06-07 18:22:55,set $variable for Arguments Name ( NOT VALUE OF ARGUMENT) in graphql,<react-native><graphql><apollo><react-apollo>,1,0,0,2018-06-07 17:59:14
50760443,1,,,1,2489,"<p>Hi I defined rootQuery in Customer schema and then in Product schema I extended query. I wrote resolvers for product schema but then I got following error: <strong>Error: Query.products defined in resolvers, but not in schema.</strong> </p>&#xA;&#xA;<p>When I move product queries to customer query definition it works.  </p>&#xA;&#xA;<p>I dont understand why I'm getting this error. Do I need implement some rootQuery and insert it into typeDefs array and then extend queries in Customer and Product ? </p>&#xA;&#xA;<p><strong>Customer schema</strong></p>&#xA;&#xA;<pre><code>  import CustomerPhoto from ""./customerPhoto"";&#xA;&#xA;    const Customer = `&#xA;         type Customer {&#xA;          customerID: ID!&#xA;          firstname: String&#xA;          lastname: String&#xA;          phone: String&#xA;          email: String&#xA;          CustomerPhoto: CustomerPhoto&#xA;         } &#xA;         input CustomerInput {&#xA;          firstname: String!&#xA;          lastname: String!&#xA;          phone: String!&#xA;          email: String!&#xA;          } &#xA;          type Query {&#xA;          customers(cursor: Int!):[Customer]&#xA;          customer(id: Int!): Customer&#xA;          }&#xA;         type Mutation {&#xA;          createCustomer(photo: String!, input: CustomerInput): Customer&#xA;          updateCustomer(customerID: ID!, photo: String, input: CustomerInput): Customer&#xA;          deleteCustomer(customerID: ID!): Customer&#xA;          }&#xA;        `;&#xA;&#xA;export default [Customer, CustomerPhoto];&#xA;</code></pre>&#xA;&#xA;<p><strong>Product Schema</strong></p>&#xA;&#xA;<pre><code>  import ProductPhoto from ""./productPhoto"";&#xA;    const Product = ` &#xA;     type Product {&#xA;      productID: ID!&#xA;      name: String!&#xA;      description: String!&#xA;      pricewithoutdph: Float!&#xA;      pricewithdph: Float!&#xA;      barcode: Int!&#xA;      ProductPhoto: ProductPhoto&#xA;     }&#xA;     extend type Query {&#xA;      products: [Product]&#xA;      product(productID: ID!): Product&#xA;     }&#xA;    `;&#xA;    export default [Product, ProductPhoto]&#xA;</code></pre>&#xA;&#xA;<p>Here Im importing both schemas. <strong>Is there something missing ?</strong>  </p>&#xA;&#xA;<pre><code>const schema = makeExecutableSchema({&#xA;  typeDefs: [...Customer,...Product],&#xA;  resolvers: merge(CustomerResolvers, ProductResolvers),&#xA;  logger: {&#xA;    log: e =&gt; {&#xA;      console.log(""schemaError"", e);&#xA;    }&#xA;  },&#xA;  resolverValidationOptions: {&#xA;    requireResolversForNonScalar: true&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p><strong>Product Resolvers</strong> </p>&#xA;&#xA;<pre><code>const ProductResolvers = {&#xA;  Query: {&#xA;    products: (_, { cursor }) =&gt; {&#xA;      return models.Product.findAndCountAll({&#xA;        include: {&#xA;          model: models.ProductPhoto,&#xA;          attributes: [""productPhotoID"", ""photo""],&#xA;          required: true&#xA;        },&#xA;        offset: cursor,&#xA;        limit: 10,&#xA;        attributes: [""productID"", ""name"", ""description"", ""pricewithoutdph"", ""pricewithdph"", ""barcode""]&#xA;      }).then(response =&gt; {&#xA;        return response.rows;&#xA;      });&#xA;    }&#xA;};&#xA;&#xA;export default ProductResolvers;&#xA;</code></pre>&#xA;&#xA;<p><strong>Customer Resolvers</strong>    </p>&#xA;&#xA;<pre><code>const CustomerResolvers = {&#xA;      Query: {&#xA;        customers: (_, {cursor}) =&gt; {&#xA;         return models.Customer.findAndCountAll({&#xA;            include: {&#xA;              model: models.CustomerPhoto,&#xA;              attributes: [""customerPhotoID"", ""photo""],&#xA;              required: true&#xA;            },&#xA;            offset: cursor,&#xA;            limit: 10,&#xA;            attributes: [""customerID"", ""firstname"", ""lastname"", ""phone"", ""email""]&#xA;          }).then(response =&gt; {&#xA;            return response.rows;&#xA;          });&#xA;        }&#xA;    ......&#xA;    }&#xA;};&#xA;</code></pre>&#xA;",7434644,,7434644,2018-06-08 13:00:48,2018-06-08 13:00:48,Query.products is defined in resolvers but not in schema,<graphql><apollo>,0,2,0,2018-06-08 12:14:44
50806329,1,,,2,516,"<p>I'm trying to feed an array of objects from a React app to GraphQL. But I'm getting this error: </p>&#xA;&#xA;<pre><code>   Error: The type of Mutation.reorderFields(fieldsOrder:) must be Input Type but got: [orderField].&#xA;</code></pre>&#xA;&#xA;<p>This is my schema:</p>&#xA;&#xA;<pre><code>  reorderFields(&#xA;    fieldsOrder:[orderField]&#xA;  ):Boolean!&#xA;</code></pre>&#xA;&#xA;<p>Mutation:</p>&#xA;&#xA;<pre><code>  type orderField{&#xA;    order: Int,&#xA;    myform: String,&#xA;    id: String,&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Any help would be appreciated, thank you.</p>&#xA;",6028513,,,,2018-06-12 06:19:06,Sending an array of objects to GraphQL,<javascript><graphql><graphql-js>,1,2,0,2018-06-11 21:31:18
50809147,1,50811423,,31,41393,"<p>I want to create a graphql type that can return either an <code>Array of Integers</code> or <code>String</code>.</p>&#xA;&#xA;<p>I've already tried using union in the form&#xA;<code>union CustomVal = [Int] | String</code>, but this returns an error.</p>&#xA;&#xA;<p>The schema declaration is:</p>&#xA;&#xA;<pre><code>union CustomValues = [Int] | String&#xA;&#xA;type Data {&#xA;    name: String&#xA;    slug: String&#xA;    selected: Boolean&#xA;    values: CustomValues&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The error is:</p>&#xA;&#xA;<pre><code>node_modules/graphql/error/syntaxError.js:24&#xA;return new _GraphQLError.GraphQLError('Syntax Error: ' + description, undefined, source, [position]);&#xA;Syntax Error: Expected Name, found [&#xA;GraphQL request (81:23)&#xA;80: &#xA;81:     union CustomValues = [Int] | String&#xA;</code></pre>&#xA;&#xA;<p>Is this possible to do in graphql? If not, can you please suggest an alternative to do this.</p>&#xA;&#xA;<p>I ask this as the union documentation says that <code>Note that members of a union type need to be concrete object types; you can't create a union type out of interfaces or other unions.</code></p>&#xA;&#xA;<p>Any solutions would be highly helpful.</p>&#xA;",6034290,,,,2022-11-24 22:18:47,How do I specify a graphql type that takes multiple types?,<graphql><graphql-js>,2,4,0,2018-06-12 04:13:39
50811423,2,,50809147,43,,"<p>Follow this <a href=""https://github.com/facebook/graphql/issues/215"" rel=""noreferrer"">https://github.com/facebook/graphql/issues/215</a>, Graphql does not support scaler union types currently, you can do this </p>&#xA;&#xA;<pre><code>union IntOrString = IntBox | StringBox&#xA;&#xA;type IntBox {&#xA;  value: Int&#xA;}&#xA;&#xA;type StringBox {&#xA;  value: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>or you can have your custom type, see this <a href=""https://stackoverflow.com/questions/49897319/graphql-union-scalar-type"">graphql, union scalar type?</a></p>&#xA;",7137580,,,,2018-06-12 07:22:54,"",,0,0,0,2018-06-12 07:22:54
50825793,1,50827503,,1,134,"<p>The query </p>&#xA;&#xA;<pre><code>curl -H ""Accept: application/vnd.github.cloak-preview"" ""https://api.github.com/search/commits?q=java"" &#xA;</code></pre>&#xA;&#xA;<p>returns a list of commits for Java language. How can I get a number of committed lines for every item? </p>&#xA;",4643625,,4643625,2018-06-12 21:28:28,2018-06-13 00:17:25,Get number of commited lines via GitHub api,<github-api><github-graphql>,1,0,0,2018-06-12 21:02:22
50827274,1,,,1,814,"<p>I'm using <code>apollo-client@2.3.x</code> (&amp; <code>react-apollo@2.1.x</code>), with the standard <code>InMemoryCache</code>, to query a Shopify store via their GraphQL Storefront API. </p>&#xA;&#xA;<p>I have two queries: 1. <code>getProducts</code> (in <code>&lt;Home /&gt;</code>), and 2. <code>getProduct($id)</code> (in <code>&lt;ProductDetail /&gt;</code>). In the scenario starts on <code>&lt;Home /&gt;</code>, then clicks on a product, I'd like the <code>&lt;ProductDetail /&gt;</code> component to show the cached response from query 1 before query 2 runs.</p>&#xA;&#xA;<ul>&#xA;<li>Demo: <a href=""https://shopify-storefront-example-rdfwtslzng.now.sh/"" rel=""nofollow noreferrer"">https://shopify-storefront-example-rdfwtslzng.now.sh/</a></li>&#xA;<li>Source: <a href=""https://shopify-storefront-example-rdfwtslzng.now.sh/_src"" rel=""nofollow noreferrer"">https://shopify-storefront-example-rdfwtslzng.now.sh/_src</a></li>&#xA;</ul>&#xA;&#xA;<p>You can see in the demo, when clicking on the product, that <code>data</code> is an empty <code>{}</code> in the console, until the second network request is complete. I assumed that it would be cached, as the queries share the same <code>__typename</code>, and use the ""node"" structure.</p>&#xA;&#xA;<p>Can someone enlighten me here, (A) why it doesn't work, and (B) how can I make it so?</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Here's a summary of the two queries:</p>&#xA;&#xA;<p>1: ""<strong>getProducts</strong>"" (e.g. used in a <code>&lt;Home /&gt;</code> component)</p>&#xA;&#xA;<pre><code>query getProducts {&#xA;  shop {&#xA;    products(first: 20) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          ... on Product {&#xA;            title&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>2: ""<strong>getProduct</strong>"" (e.g. used in a <code>&lt;ProductDetail /&gt;</code> component)</p>&#xA;&#xA;<pre><code>query getProduct($id: ID!) {&#xA;  node(id: $id) {&#xA;    ... on Product {&#xA;      title&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",207937,,,,2018-06-13 16:14:46,How to share cached apollo-client data with another query,<reactjs><shopify><graphql><apollo><react-apollo>,1,0,0,2018-06-12 23:41:10
50827503,2,,50825793,1,,"<p>I don't see that kind of feature in the API, and I doubt it would be easily achievable, considering that involve inspecting the diff of each commit, in order to extract the committed lines (the one added/modified/removed).</p>&#xA;&#xA;<p>You <em>might</em> possibly have more data though <a href=""https://cloud.google.com/bigquery/"" rel=""nofollow noreferrer"">Google BigQueries</a>, as <a href=""https://cloud.google.com/blog/big-data/2016/09/using-bigquery-to-analyze-php-on-github"" rel=""nofollow noreferrer"">in this example</a>.</p>&#xA;",6309,,,,2018-06-13 00:17:25,"",,0,0,0,2018-06-13 00:17:25
50828213,1,50837144,,3,1288,"<p>Using GitHub GraphQL API (v.4) I would like to get all the branch names existing on a given repository.</p>&#xA;&#xA;<p>My attempt</p>&#xA;&#xA;<pre><code>{&#xA;  repository(name: ""my-repository"", owner: ""my-account"") {&#xA;    ... on Ref {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>returns error:</p>&#xA;&#xA;<pre><code>{'data': None, 'errors': [{'message': ""Fragment on Ref can't be spread inside Repository"", 'locations': [{'line': 4, 'column': 13}]}]}&#xA;</code></pre>&#xA;",2515265,,,,2021-01-30 15:26:01,How to fetch GitHub branch names using GraphQL,<branch><graphql><github-api><github-graphql>,1,0,0,2018-06-13 02:16:52
50832236,1,50834869,,1,2110,"<p>So basically im struggling to understand what my next step needs to be. </p>&#xA;&#xA;<ul>&#xA;<li><p>In <strong>productList.js</strong> have a simple select dropdown class component and it displays all data from <code>Products</code> (id, name, brand,vintage) using graphql(apollo) . It works and it displays my data.</p></li>&#xA;<li><p>In <strong>Form.js</strong> I just add the select component to an form. It works.</p></li>&#xA;<li><p>In <strong>DividendRow.js</strong> have a simple Product comment display which just displays all the comments of each Product using graphql(apollo).</p></li>&#xA;<li><p>In <strong>Dividend.js</strong> I add the form with the select and the comments section in one and display both.</p></li>&#xA;</ul>&#xA;&#xA;<p><strong>Outcome:</strong></p>&#xA;&#xA;<p>I would just like to know how would i be able to show the selected option comment? (on{select}Change) This would be based on the id value, so if select product option <code>id</code> value = 1, then display comment where product id = 1. Any any help on this would be much appreciated , been doing some research but cant find any good example how to approach this.</p>&#xA;&#xA;<p>My <strong>.js</strong> files: </p>&#xA;&#xA;<p><strong>ProductList.js</strong></p>&#xA;&#xA;<pre><code>// ProductList.js&#xA;&#xA;import React, { Component } from 'react';&#xA;import { graphql } from ""react-apollo"";&#xA;import { gql } from ""apollo-boost"";&#xA;&#xA;const getProductsQuery = gql`&#xA;  {&#xA;  Products {&#xA;        id&#xA;        name&#xA;        brand&#xA;        vintage&#xA;    }&#xA;  }&#xA;`&#xA;class ProductList extends Component {  &#xA;&#xA;  constructor(props) {&#xA;    super(props);&#xA;    this.state = {value: ''};&#xA;&#xA;    this.handleChange = this.handleChange.bind(this);&#xA;   // this.handleSubmit = this.handleSubmit.bind(this);&#xA;  }    &#xA;&#xA; handleChange = (event) =&gt; {&#xA;    this.setState({ value: event.target.value });&#xA;  };&#xA;&#xA;render() {&#xA;  const { data: { loading, error, Products, id } } = this.props;&#xA;&#xA;   if (loading) {&#xA;          return (&lt;div&gt;Loading Product Listing...&lt;/div&gt;);&#xA;   }else if(error) {&#xA;        return   (&lt;p&gt;Error! Stewart Error!&lt;/p&gt;);       &#xA;   }else{&#xA;       return (&#xA;           &lt;div&gt;       &#xA;            &lt;select name=""product"" value={this.state.value} onChange={this.handleChange} className=""custom-select form-control 3"" id=""listproducts""&gt;&#xA;                {Products.map(({ id, name, brand, vintage }) =&gt; (&#xA;                 &lt;option key={id} value={id}&gt;&#xA;                  {name} - {brand} - {vintage}  &#xA;                  &lt;/option&gt;&#xA;                ))} &#xA;            &lt;/select&gt;&#xA;            &lt;/div&gt;&#xA;               );&#xA;&#xA;   } &#xA;}&#xA;}&#xA;export default graphql(getProductsQuery)(ProductList); &#xA;</code></pre>&#xA;&#xA;<p><strong>Form.js</strong></p>&#xA;&#xA;<pre><code>// Form.js&#xA;&#xA;import React, { Component } from 'react';&#xA;&#xA;import   ProductList   from './ProductList';&#xA;import { ProductAddComment } from './ProductAddComment';&#xA;&#xA;export class Form extends Component {&#xA;  render() {&#xA;    return (&#xA;        &lt;form action="""" method=""GET"" id=""product-comments""&gt;&#xA;&#xA;      &lt;ProductList/&gt;&#xA;&#xA;     // &lt;ProductAddComment/&gt;&#xA;&#xA;            &lt;button type=""submit"" className=""btn btn-primary""&gt;Submit&lt;/button&gt;&#xA;        &lt;/form&gt;&#xA;    );&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>DividendRow.js</strong></p>&#xA;&#xA;<pre><code>// DividendRow.js&#xA;&#xA;import React, { Component } from 'react';&#xA;&#xA;import { graphql } from ""react-apollo"";&#xA;import { gql } from ""apollo-boost"";&#xA;&#xA;&#xA;const getProductsCommentsQuery = gql`&#xA;{&#xA;  Comments {&#xA;    id&#xA;    body&#xA;    date&#xA;    Product {&#xA;      complete_name&#xA;    }&#xA;  }&#xA;}&#xA;`&#xA;&#xA;class DividendRow extends Component {  &#xA;&#xA;render() {&#xA;  const { data: { loading, error, Comments } } = this.props;&#xA;   if (loading) {&#xA;          return (&lt;div&gt;Loading Product Listing...&lt;/div&gt;);&#xA;   }else if(error) {&#xA;        return   (&lt;p&gt;Error! Stewart Error!&lt;/p&gt;);       &#xA;   }else{&#xA;       return (&#xA;&#xA;&#xA;                Comments.map(({ id, body, date, Product }) =&gt; (            &#xA;                &lt;div  key={id} id={id} className=""contents""&gt;&#xA;                    &lt;span className=""date""&gt;{date}&lt;/span&gt;&#xA;                    &lt;h4 className=""product-name""&gt;{Product.complete_name}&lt;/h4&gt;&#xA;                    &lt;p className=""product-comment""&gt;{body}&lt;/p&gt;&#xA;                &lt;/div&gt; &#xA;              ))&#xA;&#xA;               );&#xA;&#xA;   } &#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Dividend.js</strong></p>&#xA;&#xA;<pre><code>// Dividend.js&#xA;&#xA;import React, { Component } from 'react';&#xA;import DividendRow from './DividendRow';&#xA;&#xA;&#xA;import { Form } from './Form';&#xA;&#xA;export class Dividend extends Component {&#xA;&#xA;  render() {&#xA;    return (&#xA;&#xA;&#xA;&lt;div className=""container""&gt; &#xA;&lt;div className=""row""&gt; &#xA;&lt;div className=""col-lg-12""&gt;&#xA;&#xA;    &lt;Form/&gt; &#xA;&#xA;    &lt;h1 className=""product""&gt;All Products&lt;/h1&gt;&#xA;&#xA;     &lt;DividendRow /&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&#xA;    );&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>index.js</strong></p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import ReactDOM from 'react-dom';&#xA;import ApolloClient from ""apollo-boost"";&#xA;import gql from ""graphql-tag"";&#xA;import { ApolloProvider } from ""react-apollo"";&#xA;//import './index.css';&#xA;import { Dividend } from './Dividend';&#xA;import registerServiceWorker from './registerServiceWorker';&#xA;&#xA;const client = new ApolloClient({&#xA;  uri: ""https://test.azurewebsites.net/graphql""&#xA;});&#xA;&#xA;function MyDividend() {&#xA;  return (&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;Dividend&#xA;      /&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  )&#xA;}&#xA;&#xA;ReactDOM.render(&lt;MyDividend  /&gt;, document.getElementById('root'));&#xA;registerServiceWorker();&#xA;</code></pre>&#xA;",6295433,,6295433,2018-06-13 08:25:37,2018-06-13 10:25:52,Displaying Data on select option between components on React using graphql,<javascript><reactjs><graphql><react-apollo>,1,2,0,2018-06-13 08:13:32
50837144,2,,50828213,10,,"<p>Here's how to retrieve 10 branches from a repo:</p>&#xA;<pre><code>{&#xA;  repository(name: &quot;git-point&quot;, owner: &quot;gitpoint&quot;) {&#xA;    refs(first: 10, , refPrefix:&quot;refs/heads/&quot;) {&#xA;      nodes {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>PS: You usually use spread when dealing with an Union type (like IssueTimeline for example, which is composed of different kind of objects, so you can spread on a particular object type to query specific fields.</p>&#xA;<hr />&#xA;<p>You might need to use <a href=""https://graphql.org/learn/pagination/"" rel=""nofollow noreferrer"">pagination</a> to get all branches</p>&#xA;",732772,,10871900,2021-01-30 15:26:01,2021-01-30 15:26:01,"",,0,1,0,2018-06-13 12:20:15
50837192,2,,49829954,1,,"<p>As far as I know, this is only possible with the REST API (v3), by requesting only one item per page, and extracting the total number of pages in the Response headers.</p>&#xA;",732772,,,,2018-06-13 12:22:34,"",,0,0,0,2018-06-13 12:22:34
50850790,2,,50375893,0,,"<p>GraphQL does not have support to join 2(or more) API's in some attributes. What you could do, is to fetch the data from both API's in the resolver and create an object with both results.</p>&#xA;&#xA;<p>Something like (pseudo-code):</p>&#xA;&#xA;<pre><code>const products: yourDefinedType = []&#xA;&#xA;fetch.productsAPI(productFromAPI&#xA;   fetch.pricesAPI(pricesFromAPI&#xA;      if (pricesFromAPI.name === productFromAPI.name) {&#xA;         product.push({&#xA;           id: productFromAPI.id,&#xA;           name: productFromAPI.name,&#xA;           color: productFromAPI.color,&#xA;           size: productFromAPI.size,&#xA;           price: pricesFromAPI.price&#xA;         })&#xA;      }&#xA;   )      &#xA;)&#xA;</code></pre>&#xA;&#xA;<p>Keep in mind that this would have performance issues as you'd make a fetch to all prices per each product. Another way would be to make your prices REST api to support get a price by name and fetch only the prices you need.</p>&#xA;",3708153,,,,2018-06-14 06:17:58,"",,0,0,0,2018-06-14 06:17:58
50875345,1,,,0,677,"<p>So in the below example, I want to change stat to a variable, but it appears that variables are not allowed as field names?  Is there a way to work around this?        </p>&#xA;&#xA;<pre><code>query={graphql`&#xA;              query PlayerQuery($condition:GamelogCondition!, $stat:String!) {&#xA;                   allGamelogs(condition:$condition){&#xA;                        nodes{&#xA;                          gameDate&#xA;                          stat&#xA;                        }&#xA;              }&#xA;                   }&#xA;            `}&#xA;</code></pre>&#xA;&#xA;<p>For example I want gameDate to remain constant, but stat could be any value of [MIN, FGA, FT, etc]. </p>&#xA;",5394651,,,,2018-06-15 13:03:39,Dynamically create fields in graphql query?,<reactjs><graphql><relay><relaymodern>,1,0,0,2018-06-15 12:10:35
50876237,2,,50875345,0,,"<p>Is it the input value $stat you talking about? or the response data?</p>&#xA;&#xA;<p>If it is the response data(<code>stat</code>): </p>&#xA;&#xA;<ul>&#xA;<li>Response data is resolved by the GraphQL server, so in order to change it, it should be the server responsibility to resolve <code>stat</code> according to the input data.</li>&#xA;</ul>&#xA;&#xA;<p>If it is the query <code>$stat</code>: </p>&#xA;&#xA;<ul>&#xA;<li>Then you can define the query type as <a href=""https://graphql.org/learn/schema/#enumeration-types"" rel=""nofollow noreferrer"">Enum Type</a>.</li>&#xA;</ul>&#xA;",3708153,,,,2018-06-15 13:03:39,"",,0,2,0,2018-06-15 13:03:39
50928400,2,,48163590,1,,"<p>Take a look at this Github issue: <a href=""https://github.com/Akryum/vue-apollo/issues/244"" rel=""nofollow noreferrer"">https://github.com/Akryum/vue-apollo/issues/244</a></p>&#xA;&#xA;<p>What I do is mock mutate using <code>vue-test-utils</code> module and in case of queries check the <code>vm</code> if it has the correct <code>apollo</code> property structure and also set the state as if Apollo would. Then you can use snapshot testing to see if the template is rendered correctly.</p>&#xA;",1134063,,,,2018-06-19 12:25:00,"",,0,0,0,2018-06-19 12:25:00
50934458,1,50935533,,0,384,"<p>I have two Models:</p>&#xA;&#xA;<pre><code>River.associate = models =&gt; {&#xA;  River.hasMany(models.Fish, { as: 'Fishes' });&#xA;};&#xA;&#xA;Fish.associate = models =&gt; {&#xA;  Fish.belongsTo(models.River);&#xA;};&#xA;&#xA;type River {&#xA;    id: ID!&#xA;    name: String!&#xA;    alternative: String!&#xA;    geojson: JSON&#xA;    fishes: [Fish]&#xA;}&#xA;&#xA;type Fish {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>How would I findAll Rivers given a list of Fish ID's?</strong> Im not sure how the query must look for this for graphql and sequelize?</p>&#xA;&#xA;<pre><code>type Query {&#xA;  river(id: ID!): River&#xA;  **rivers(fishIds: ARRAY): River ??????**&#xA;  fishes: [Fish]&#xA;}&#xA;&#xA;Query: {&#xA;rivers: (_, { fishIds }) =&gt; {&#xA;      return River.findAll({&#xA;        where: {&#xA;          fishes: fishIds&#xA;        }&#xA;      });&#xA;    },&#xA;}&#xA;</code></pre>&#xA;",228660,,228660,2018-06-19 18:15:55,2018-06-19 19:19:23,Sequelize and Graphql reverse lookup,<express><sequelize.js><graphql><apollo-server>,1,0,0,2018-06-19 18:00:58
50940105,1,,,2,770,"<p>I'm trying to figure out how to get the list of issues by author. I can get the list of issues but I don't know is how to filter 'by author'. </p>&#xA;&#xA;<p>The following returns a list of issues from the repo ""Hello-World"" of the owner ""octocat"". What I want to do is to filter issue author: ""yosuke-furukawa"" or any other author. How to do that?&#xA;You may try it out at the <a href=""https://developer.github.com/v4/explorer"" rel=""nofollow noreferrer"">explorer</a>.</p>&#xA;&#xA;<pre><code>  repository(owner:""octocat"", name:""Hello-World"") {&#xA;    issues(last:20, states:CLOSED) {&#xA;      edges {&#xA;        node {&#xA;          bodyText&#xA;          author{&#xA;            login&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1553014,,,,2019-08-08 19:34:12,Filter Github issues by author using their graphql API,<api><github><graphql>,1,0,0,2018-06-20 04:11:50
50958614,1,,,1,1560,"<p>Suppose I have two types, Comment and Query, that implement a common interface UserItem. I have a query that will return an array of UserItem objects that can be of either type, Comment or Query. The schema looks like:</p>&#xA;&#xA;<pre><code>enum ItemType {&#xA;  Comment&#xA;  Question&#xA;}&#xA;&#xA;interface UserItem {&#xA;  id: ID!&#xA;  __typename: ItemType&#xA;}&#xA;&#xA;type CommentContent {&#xA;  text: String!&#xA;}&#xA;&#xA;type Comment implements UserItem {&#xA;  id: ID!&#xA;  __typename: ItemType&#xA;  content: CommentContent!&#xA;}&#xA;&#xA;type QuestionContent {&#xA;  text: String!&#xA;  answer: String&#xA;}&#xA;&#xA;type Question implements UserItem {&#xA;  id: ID!&#xA;  __typename: ItemType&#xA;  content: QuestionContent!&#xA;}&#xA;&#xA;type Query {&#xA;  getUserItems(ids: [ID!]): [UserItem]&#xA;}&#xA;&#xA;schema {&#xA;  query: Query&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The query:</p>&#xA;&#xA;<pre><code>query getUserItems($ids: [ID!]) {&#xA;  getUserItems(ids: $ids) {&#xA;    id&#xA;    __typename&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>works fine and returns both type objects with no <code>content</code> field in either.</p>&#xA;&#xA;<p>The query:</p>&#xA;&#xA;<pre><code>query getUserItems($ids: [ID!]) {&#xA;  getUserItems(ids: $ids) {&#xA;    id&#xA;    __typename&#xA;    ... on Comment {&#xA;      content {&#xA;        text&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>works fine and returns <code>content</code> for Comment, but not Question. And the query:</p>&#xA;&#xA;<pre><code>query getUserItems($ids: [ID!]) {&#xA;  getUserItems(ids: $ids) {&#xA;    id&#xA;    __typename&#xA;    ... on Question {&#xA;      content {&#xA;        text&#xA;        answer&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>works fine and returns <code>content</code> for Question, but not Comment.</p>&#xA;&#xA;<p>But what I want is the appropriate <code>content</code> field on each, something like:</p>&#xA;&#xA;<pre><code>query getUserItems($ids: [ID!]) {&#xA;  getUserItems(ids: $ids) {&#xA;    id&#xA;    __typename&#xA;    ... on Comment {&#xA;      content {&#xA;        text&#xA;      }&#xA;    }&#xA;    ... on Question {&#xA;      content {&#xA;        text&#xA;        answer&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This query is not valid, and returns an error message like (this from AWS AppSync): <code>Validation error of type FieldsConflict: content: they return differing types null and null</code>.</p>&#xA;&#xA;<p>Is it possible to achieve my desire of getting object appropriate <code>context</code> for each type? Or is my schema approach doomed?</p>&#xA;",233514,,,,2018-06-20 23:59:15,GraphQL query fragments on interface type implementations,<graphql>,0,2,0,2018-06-20 23:59:15
50975993,1,,,0,75,"<p>Im trying to get list of repositories and pull requests where the author is selected user.</p>&#xA;&#xA;<p>I tried out this</p>&#xA;&#xA;<pre><code>{&#xA;  user(login:""s8sachin""){&#xA;    repositories(first: 100){&#xA;      nodes{&#xA;        name&#xA;        pullRequests{&#xA;          totalCount // this gives me count of PR from all collaborators &#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>since this gives me PR count for all collaborators, im trying to get count by only <code>""s8sachin""</code></p>&#xA;&#xA;<p>is there a way to achieve that ? please help me. thanks</p>&#xA;",7199345,,,,2020-12-13 23:21:55,Get list repositories of selected user with PR count for that particular repository?,<github><graphql><github-api><github-graphql>,1,0,0,2018-06-21 19:11:24
50978758,1,,,1,324,"<p>I have this simple search query</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>query test($name: String!) {&#xA;  search(query: $name, type: USER, last: 100) {&#xA;    edges {&#xA;      textMatches {&#xA;        fragment&#xA;        property&#xA;        highlights {&#xA;          text&#xA;        }&#xA;      }&#xA;    }&#xA;    userCount&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and say, for example, I would like to have the login information for all users from the search result. How would I do that? The results contain login or display names that matches the search text. Is there a way to find the login for those who only appear in the search because of their display name? </p>&#xA;",9975629,,2614364,2018-06-22 08:21:46,2018-06-22 16:35:00,How to use Github GraphQL search to return user profiles with similar name( including login and display name)?,<github-api><github-graphql>,1,0,0,2018-06-21 23:32:37
50992223,2,,50978758,1,,"<p>You were almost there! In ""edges"", you're dealing with an array of <a href=""https://developer.github.com/v4/reference/object/searchresultitemedge/"" rel=""nofollow noreferrer"">SearchResultItemEdge</a> which contains a ""node"" property at the same level as ""textMatches"".</p>&#xA;&#xA;<p>Since the node is a <a href=""https://developer.github.com/v4/reference/union/searchresultitem/"" rel=""nofollow noreferrer"">SearchResultItem</a>, and can be one of User, Issue, PullRequest, etc, you have to specifically spread your node as a ""User"" in order to be able to access the login.</p>&#xA;&#xA;<p>Give this query a try in the Explorer:</p>&#xA;&#xA;<pre><code>query test($name: String!) {&#xA;  search(query: $name, type: USER, last: 100) {&#xA;    edges {&#xA;      node {&#xA;        __typename&#xA;        ...on User {&#xA;          login&#xA;        }&#xA;      }&#xA;      textMatches {&#xA;        fragment&#xA;        property&#xA;        highlights {&#xA;          text&#xA;        }&#xA;&#xA;      }&#xA;    }&#xA;    userCount&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",732772,,,,2018-06-22 16:35:00,"",,0,0,0,2018-06-22 16:35:00
50994591,2,,50975993,0,,"<p>There's no way to do that right now, but you can make a schema request at <a href=""https://platform.github.community/c/graphql-api"" rel=""nofollow noreferrer"">https://platform.github.community/c/graphql-api</a> with the <code>schema-request</code> tag. Ideally it'd be an <code>authoredBy</code> argument on the <code>pullRequests</code> connection:</p>&#xA;&#xA;<pre><code>query($owner:String!,$name:String!,$authoredBy:String!) {&#xA;  repository(owner:$owner,name:$name) {&#xA;    pullRequests(authoredBy:$login) {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",326111,,,,2018-06-22 19:38:01,"",,0,0,0,2018-06-22 19:38:01
51047292,1,,,4,2588,"<p>I am trying to get from GitHub using graphQL multiple organizations &amp; repositories data. The code i wrote below get only 1 organization &amp; repository.&#xA;I thought using variables of two Array [String!] one for Organizations &amp; the second for Repositories.&#xA;So </p>&#xA;&#xA;<pre><code>organization(login:""javascript"") {...} &#xA;</code></pre>&#xA;&#xA;<p>should be </p>&#xA;&#xA;<pre><code>organization(login:$organization) {...}&#xA;</code></pre>&#xA;&#xA;<p>and </p>&#xA;&#xA;<pre><code>repository(owner:""javascript"", name:""sorted-array"") {...}&#xA;</code></pre>&#xA;&#xA;<p>should be </p>&#xA;&#xA;<pre><code>repository(owner:$organization, name:$repository) {...}&#xA;</code></pre>&#xA;&#xA;<p>But i couldn't find how to implement the variables into the below code.</p>&#xA;&#xA;<pre><code>query {&#xA;  rateLimit{&#xA;  cost&#xA;  remaining&#xA;  resetAt&#xA; }&#xA;organization(login:""javascript"") {&#xA;    repositories{&#xA;      totalCount&#xA;    }&#xA;  }&#xA;  repository(owner:""javascript"", name:""sorted-array"") {&#xA;    updatedAt&#xA;    branches: refs(refPrefix:""refs/heads/"") {&#xA;      totalCount&#xA;    }&#xA;    tags: refs(refPrefix:""refs/tags/"") {&#xA;      totalCount&#xA;    }&#xA;    releases {&#xA;      totalCount&#xA;    }&#xA;    object(expression:""master"") {&#xA;      ... on Commit {&#xA;        committedDate&#xA;        history {&#xA;          totalCount&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Will appreciate the help.&#xA;Thanks</p>&#xA;",1916416,,1916416,2018-06-26 16:17:25,2018-06-27 10:53:06,GitHub graphQL API multiple queries on organizations & repositories,<github><github-graphql>,2,0,0,2018-06-26 16:10:55
51054395,2,,51047292,4,,"<p>Here is the request updated to work with variables</p>&#xA;&#xA;<pre><code>query getOrg($owner: String!, $repo: String! ){&#xA;    organization(login:$owner) {&#xA;    repositories{&#xA;        totalCount&#xA;    }&#xA;  }&#xA;  repository(owner:$owner, name:$repo) {&#xA;    updatedAt&#xA;    branches: refs(refPrefix:""refs/heads/"") {&#xA;      totalCount&#xA;    }&#xA;    tags: refs(refPrefix:""refs/tags/"") {&#xA;      totalCount&#xA;    }&#xA;    releases {&#xA;      totalCount&#xA;    }&#xA;    object(expression:""master"") {&#xA;      ... on Commit {&#xA;        committedDate&#xA;        history {&#xA;          totalCount&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, you may be better served by using GraphQL Node IDs as an array of inputs. With the Node ID of the Organization or Repository, something along the lines of... </p>&#xA;&#xA;<pre><code>query inputArray($id: [ID!]!){&#xA;  nodes(ids: $id){&#xA;    ...on Repository{&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Note that GitHub V3 of the API supports returning the <a href=""https://developer.github.com/v3/?#graphql-global-node-ids"" rel=""nofollow noreferrer"">GraphQL Node IDs</a> to help transition to GraphQL queries.</p>&#xA;",1375964,,,,2018-06-27 04:06:04,"",,0,2,0,2018-06-27 04:06:04
51060705,1,,,4,915,"<p>I am building a Shopify app which needs to adjust inventory of products in Shopify. Shopify is about to deprecate its inventory adjustment POST call using <code>admin/product.json</code> and will updated to <code>/admin/inventory_levels/adjust.json</code>, but the new inventory adjustment POST call allows to update only single inventory level at a time.&#xA;But my app needs to update multiple inventory levels at some particular point of time, so doing POST call for every individual inventory level will be resource taking and time consuming. When I contacted a Shopify Expert, he recommended me to use GraphQL for the above purpose. I researched for GraphQL + Shoipfy implementation in Java but did not find satisfactory results, so I need help in implementing Client POST call of GraphQL in Java .&#xA;Below is my structure of GraphQL, I want to implement in Java</p>&#xA;&#xA;<pre><code>mutation {&#xA;  item1: inventoryAdjustQuantity(input: {inventoryLevelId: ""gid://shopify/InventoryLevel/9229566067?inventory_item_id=10588945219699"", availableDelta: 3}) {&#xA;    inventoryLevel {&#xA;      available&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;  item2: inventoryAdjustQuantity(input: {inventoryLevelId: ""gid://shopify/InventoryLevel/9229762675?inventory_item_id=10588945219699"", availableDelta: 3}) {&#xA;    inventoryLevel {&#xA;      available&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;  item3: inventoryAdjustQuantity(input: {inventoryLevelId: ""gid://shopify/InventoryLevel/9229926515?inventory_item_id=10588945219699"", availableDelta: 3}) {&#xA;    inventoryLevel {&#xA;      available&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;  item4: inventoryAdjustQuantity(input: {inventoryLevelId: ""gid://shopify/InventoryLevel/9645391987?inventory_item_id=10588945219699"", availableDelta: 3}) {&#xA;    inventoryLevel {&#xA;      available&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;  item5: inventoryAdjustQuantity(input: {inventoryLevelId: ""gid://shopify/InventoryLevel/9645457523?inventory_item_id=10588945219699"", availableDelta: 3}) {&#xA;    inventoryLevel {&#xA;      available&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;  item6: inventoryAdjustQuantity(input: {inventoryLevelId: ""gid://shopify/InventoryLevel/9645490291?inventory_item_id=10588945219699"", availableDelta: 3}) {&#xA;    inventoryLevel {&#xA;      available&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;  item7: inventoryAdjustQuantity(input: {inventoryLevelId: ""gid://shopify/InventoryLevel/9229566067?inventory_item_id=10588945252467"", availableDelta: 3}) {&#xA;    inventoryLevel {&#xA;      available&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;  item8: inventoryAdjustQuantity(input: {inventoryLevelId: ""gid://shopify/InventoryLevel/9229762675?inventory_item_id=10588945252467"", availableDelta: 3}) {&#xA;    inventoryLevel {&#xA;      available&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;  item9: inventoryAdjustQuantity(input: {inventoryLevelId: ""gid://shopify/InventoryLevel/9229926515?inventory_item_id=10588945252467"", availableDelta: 3}) {&#xA;    inventoryLevel {&#xA;      available&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;  item10: inventoryAdjustQuantity(input: {inventoryLevelId: ""gid://shopify/InventoryLevel/9645391987?inventory_item_id=10588945252467"", availableDelta: 3}) {&#xA;    inventoryLevel {&#xA;      available&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It would be great if you will help me with this issue or will guide me to some resourceful link.</p>&#xA;",6612717,,18333,2018-06-27 21:25:41,2019-08-28 10:25:31,GraphQL implimentation with Shopify using Java,<java><shopify><graphql><shopify-app><graphql-java>,1,2,0,2018-06-27 10:39:19
51072418,1,,,4,453,"<p>Using the GitHub GraphQL API, I can construct a timeline of when users starred any repo:</p>&#xA;&#xA;<pre><code>query { &#xA;  repository(owner:""danvk"", name:""source-map-explorer"") {&#xA;    stargazers(first:100) {&#xA;      edges {&#xA;        starredAt&#xA;        node {&#xA;          login&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here's the response:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""stargazers"": {&#xA;        ""edges"": [&#xA;          {&#xA;            ""starredAt"": ""2015-10-16T16:08:02Z"",&#xA;            ""node"": {&#xA;              ""login"": ""danvk""&#xA;            }&#xA;          },&#xA;          {&#xA;            ""starredAt"": ""2015-10-16T23:23:26Z"",&#xA;            ""node"": {&#xA;              ""login"": ""risq""&#xA;            }&#xA;          },&#xA;          ...&#xA;        ],&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If I want to construct a chart of the number of stars that a repo has over time, I also need the <em>unstar</em> events. Is it possible to get access to these using the GraphQL API?</p>&#xA;",388951,,,,2021-11-09 12:05:43,How can I determine when a user unstarred a repo using the GitHub GraphQL API?,<github><graphql><github-api><github-graphql>,0,0,0,2018-06-27 22:45:00
51098194,1,51109862,,1,511,<p>Thank you guys cause reading my question. The title is exactly what i wanna known.&#xA;Hope it do not cost your time much.</p>&#xA;,6543712,,,,2020-06-11 16:03:54,Is any library of nodejs work with GitHub API v4 exist?,<node.js><graphql><github-api>,1,1,0,2018-06-29 09:09:48
51106439,2,,49912068,1,,<p>to keep compatibility with graphql draft you make a schema like this:</p>&#xA;&#xA;<pre><code># schema.gql (shortly)&#xA;type Post {&#xA; id: ID!&#xA; title: TranlationConnection&#xA;}&#xA;type TranslationConnection {&#xA; count: Int&#xA; nodes: [TranslationNode]&#xA;}&#xA;type TranslationNode {&#xA; # eg. 'en' &#xA; lang: String!&#xA; # translated title in this eg.&#xA; msgstr: String!&#xA;}&#xA;&#xA;#query eg.&#xA;query post (id:1) {&#xA; id&#xA; title(lang:'en') {&#xA;  nodes {&#xA;   lang&#xA;   msgstr&#xA;  }&#xA; }&#xA;}&#xA;</code></pre>&#xA;,2416997,,,,2018-06-29 17:01:12,"",,0,0,0,2018-06-29 17:01:12
51109862,2,,51098194,3,,"<p>Some of the most common graphql client are <a href=""https://github.com/f/graphql.js"" rel=""nofollow noreferrer"">graphql.js</a> and <a href=""https://github.com/apollographql/apollo-client"" rel=""nofollow noreferrer"">apollo-client</a>. You can also use the popular <a href=""https://github.com/request/request"" rel=""nofollow noreferrer"">request</a> module. The graphql API is a single POST endpoint on <a href=""https://api.github.com/graphql"" rel=""nofollow noreferrer"">https://api.github.com/graphql</a> with a JSON body consisting of the <code>query</code> fields and the <code>variables</code> fields (if you have variables in the query)</p>&#xA;&#xA;<h3>Using <a href=""https://github.com/f/graphql.js"" rel=""nofollow noreferrer"">graphql.js</a></h3>&#xA;&#xA;<pre><code>const graphql = require('graphql.js');&#xA;&#xA;var graph = graphql(""https://api.github.com/graphql"", {&#xA;  headers: {&#xA;    ""Authorization"": ""Bearer &lt;Your Token&gt;"",&#xA;    'User-Agent': 'My Application'&#xA;  },&#xA;  asJSON: true&#xA;});&#xA;&#xA;graph(`&#xA;    query repo($name: String!, $owner: String!){&#xA;        repository(name:$name, owner:$owner){&#xA;            createdAt      &#xA;        }&#xA;    }&#xA;`)({&#xA;  name: ""linux"",&#xA;  owner: ""torvalds""&#xA;}).then(function(response) {&#xA;  console.log(JSON.stringify(response, null, 2));&#xA;}).catch(function(error) {&#xA;  console.log(error);&#xA;});&#xA;</code></pre>&#xA;&#xA;<h3>Using <a href=""https://github.com/apollographql/apollo-client"" rel=""nofollow noreferrer"">apollo-client</a></h3>&#xA;&#xA;<pre><code>fetch = require('node-fetch');&#xA;const ApolloClient = require('apollo-client').ApolloClient;&#xA;const HttpLink = require('apollo-link-http').HttpLink;&#xA;const setContext = require('apollo-link-context').setContext;&#xA;const InMemoryCache = require('apollo-cache-inmemory').InMemoryCache;&#xA;const gql = require('graphql-tag');&#xA;&#xA;const token = ""&lt;Your Token&gt;"";&#xA;&#xA;const authLink = setContext((_, {&#xA;    headers&#xA;}) =&gt; {&#xA;    return {&#xA;        headers: {&#xA;            ...headers,&#xA;            authorization: token ? `Bearer ${token}` : null,&#xA;        }&#xA;    }&#xA;});&#xA;&#xA;const client = new ApolloClient({&#xA;    link: authLink.concat(new HttpLink({&#xA;        uri: 'https://api.github.com/graphql'&#xA;    })),&#xA;    cache: new InMemoryCache()&#xA;});&#xA;&#xA;client.query({&#xA;        query: gql `&#xA;    query repo($name: String!, $owner: String!){&#xA;        repository(name:$name, owner:$owner){&#xA;            createdAt      &#xA;        }&#xA;    }&#xA;  `,&#xA;        variables: {&#xA;            name: ""linux"",&#xA;            owner: ""torvalds""&#xA;        }&#xA;    })&#xA;    .then(resp =&gt; console.log(JSON.stringify(resp.data, null, 2)))&#xA;    .catch(error =&gt; console.error(error));&#xA;</code></pre>&#xA;&#xA;<h3>Using <a href=""https://github.com/request/request"" rel=""nofollow noreferrer"">request</a></h3>&#xA;&#xA;<pre><code>const request = require('request');&#xA;&#xA;request({&#xA;    method: 'post',&#xA;    body: {&#xA;        query: `&#xA;    query repo($name: String!, $owner: String!){&#xA;        repository(name:$name, owner:$owner){&#xA;            createdAt      &#xA;        }&#xA;    } `,&#xA;        variables: {&#xA;            name: ""linux"",&#xA;            owner: ""torvalds""&#xA;        }&#xA;    },&#xA;    json: true,&#xA;    url: 'https://api.github.com/graphql',&#xA;    headers: {&#xA;        Authorization: 'Bearer &lt;Your Token&gt;',&#xA;        'User-Agent': 'My Application'&#xA;    }&#xA;}, function(error, response, body) {&#xA;    if (error) {&#xA;        console.error(error);&#xA;        throw error;&#xA;    }&#xA;    console.log(JSON.stringify(body, null, 2));&#xA;});&#xA;</code></pre>&#xA;",2614364,,2614364,2020-06-11 16:03:54,2020-06-11 16:03:54,"",,0,1,0,2018-06-29 21:54:33
51109979,1,51225549,,0,140,"<p>I want to do multiple POST request to the Github GraphQL API with pagination using 'endCursor'. </p>&#xA;&#xA;<pre><code>var unirest = require ('unirest');&#xA;var async = require('async');&#xA;const endpoint=""https://api.github.com/graphql""&#xA;const token = ""sometoken"";&#xA;&#xA;var search_query={&#xA;  ""query"": 'query($name: String!, $after: String){\&#xA;          search(query:$name, type: USER, first: 2, after: $after){\&#xA;                userCount\&#xA;                pageInfo{endCursor}\&#xA;                nodes{\&#xA;                   ...on User{\&#xA;                          id \&#xA;                          bio \&#xA;                          html_url:url \&#xA;                         }\&#xA;                       }\&#xA;                     }\&#xA;                   }',&#xA;     ""variable"": {""name"":""somename"", ""after"":null}&#xA;    };&#xA;unirest.post(endpoint)&#xA;.headers({""Content-Type"": ""text/html"" , ""Authorization"": ""bearer ""+token, 'user-agent': 'node.js'})&#xA;.send(JSON.stringify(search_query)) //creating requests&#xA;.end(function(response, request){&#xA;    console.log(response.body.data.search.pageInfo.endCursor);&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>I want to iterate this POST request for multiple times. Each time with the $after as the endCursor from last request. How would I do that? Thank you!</p>&#xA;",9975629,,,,2018-07-07 17:41:51,How to use part of a POST response as an argument for another post request? (pagination for GraphQL),<node.js><post><pagination><graphql>,1,0,0,2018-06-29 22:07:49
51133609,1,,,0,40,"<p>I have situation where I want to retrieve the product list in a order(sorting) based on price. But the price on which I have to make the list sort will be a update price i.e. the price from the product collection +/- the changes that are mentioned in the rules collection.</p>&#xA;&#xA;<p>That means:&#xA;For each product first I have to check the the whether any rule is matching with the product if yes then I have to change the price and then sort it.</p>&#xA;&#xA;<p>So far I tried this:</p>&#xA;&#xA;<pre><code>let prodArray = db.product.find().map(function(prod) {&#xA;    var rule = db.rules.findOne({target: ""product""});&#xA;    var newPrice = prod.price;&#xA;    if(!rule.children.length) {&#xA;        if(rule.check) {&#xA;            var checkValue = prod[rule.check];&#xA;            var isApplyModifier = false;&#xA;            if(rule.operator === 'equals') {&#xA;                if(checkValue == rule.value) {&#xA;                    isApplyModifier = true;&#xA;                }&#xA;            }&#xA;            if(isApplyModifier) {&#xA;                var effect = rule.modifiers[0].effects[0];&#xA;                if(effect.value.indexOf('%') !== '-1') {&#xA;                    var discountPercentage = effect.value.split('%')[0];&#xA;                    var originalPrice = prod.price;&#xA;                    newPrice = originalPrice - (originalPrice*discountPercentage)/100;&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;    prod.newPrice = newPrice;&#xA;    return prod;&#xA;});&#xA;&#xA;return prodArray.sort(function(a, b){&#xA;    return a.newPrice-b.newPrice&#xA;}); &#xA;</code></pre>&#xA;&#xA;<p>But I want some solution so that I can also able to use the cursor for the pagination.</p>&#xA;&#xA;<p>For sample, my product and rules collection will have these records:</p>&#xA;&#xA;<pre><code>db.product.insert({name: ""a"", price: 10});&#xA;db.product.insert({name: ""b"", price: 30});&#xA;db.product.insert({name: ""c"", price: 20});&#xA;db.product.insert({name: ""d"", price: 40});&#xA;db.product.insert({name: ""e"", price: 50});&#xA;&#xA;db.rules.insert({&#xA;    ""main"" : true,&#xA;    ""name"" : ""Rule no. 1"",&#xA;    ""active"" : true,&#xA;    ""children"" : [],&#xA;    ""type"" : ""and"",&#xA;    ""path"" : null,&#xA;    ""target"" : ""product"",&#xA;    ""modifiers"" : [{&#xA;        _id: '001',&#xA;        name: '10% discount',&#xA;        description: 'Apply 10% discount to price',&#xA;        effects: [&#xA;            {&#xA;                field: 'price',&#xA;                operation: 'subtract',&#xA;                value: '10%'&#xA;            }&#xA;        ]&#xA;    }],&#xA;    ""check"" : ""name"",&#xA;    ""operator"" : ""equals"",&#xA;    ""value"" : ""a""&#xA;}) &#xA;</code></pre>&#xA;",4064687,,,,2018-07-02 10:03:05,Query in MongoDB and sort the result after changing the price value based on some rules/,<mongodb><nosql><mongodb-query><graphql>,0,2,0,2018-07-02 10:03:05
51139342,2,,51135499,2,,"<p>This is the regexp for names in GraphQL: <code>/[_A-Za-z][_0-9A-Za-z]*/</code>. Anything that does not match is not allowed.</p>&#xA;<p>Sample URL:<br />&#xA;<a href=""http://facebook.github.io/graphql/June2018/#sec-Names"" rel=""nofollow noreferrer"">http://facebook.github.io/graphql/June2018/#sec-Names</a></p>&#xA;",2074840,,14267427,2022-08-13 09:43:50,2022-08-13 09:43:50,"",,0,0,0,2018-07-02 15:22:53
51165205,1,51188859,,0,2157,"<p>I just started looking at GraphQL and I am wondering if there is a way to filter results that don't have any nodes. Here is a relatively simple example query:</p>&#xA;&#xA;<pre><code>query { &#xA;  organization(login:""GitHub"") { &#xA;    repositories(first: 20) {&#xA;      edges {&#xA;        node {&#xA;          name&#xA;          pullRequests(first: 5, states: OPEN){&#xA;            edges {&#xA;              node {&#xA;                title&#xA;                author{&#xA;                  login&#xA;                }&#xA;                updatedAt&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and here is a subset of the results that query returns:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""organization"": {&#xA;      ""repositories"": {&#xA;        ""edges"": [&#xA;          {&#xA;            ""node"": {&#xA;              ""name"": ""gitignore"",&#xA;              ""pullRequests"": {&#xA;                ""edges"": [&#xA;                  {&#xA;                    ""node"": {&#xA;                      ""title"": ""Create new CodeComposerStudio.gitignore"",&#xA;                      ""author"": {&#xA;                        ""login"": ""wolf99""&#xA;                      },&#xA;                      ""updatedAt"": ""2017-07-26T20:31:53Z""&#xA;                    }&#xA;                  },&#xA;                  {&#xA;                    ""node"": {&#xA;                      ""title"": ""Create PVS.gitignore"",&#xA;                      ""author"": {&#xA;                        ""login"": ""cesaramh""&#xA;                      },&#xA;                      ""updatedAt"": ""2017-05-01T19:42:07Z""&#xA;                    }&#xA;                  },&#xA;                  {&#xA;                    ""node"": {&#xA;                      ""title"": ""gitignore for Magic Software Enterprises product xpa "",&#xA;                      ""author"": {&#xA;                        ""login"": ""tommes""&#xA;                      },&#xA;                      ""updatedAt"": ""2017-05-01T19:41:53Z""&#xA;                    }&#xA;                  },&#xA;                  {&#xA;                    ""node"": {&#xA;                      ""title"": ""Create PSoC.gitignore"",&#xA;                      ""author"": {&#xA;                        ""login"": ""dbrwn""&#xA;                      },&#xA;                      ""updatedAt"": ""2017-05-01T19:41:39Z""&#xA;                    }&#xA;                  },&#xA;                  {&#xA;                    ""node"": {&#xA;                      ""title"": ""add ThinkPHP gitignore file"",&#xA;                      ""author"": {&#xA;                        ""login"": ""swumao""&#xA;                      },&#xA;                      ""updatedAt"": ""2017-05-01T19:40:53Z""&#xA;                    }&#xA;                  }&#xA;                ]&#xA;              }&#xA;            }&#xA;          },&#xA;          {&#xA;            ""node"": {&#xA;              ""name"": ""dmca"",&#xA;              ""pullRequests"": {&#xA;                ""edges"": []&#xA;              }&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So I'd like to know if there is a way to modify my query so that it would not return the node named <code>dmca</code> since there are no edges on <code>pullRequests</code>.</p>&#xA;",288448,,288448,2018-07-04 03:10:13,2018-07-05 10:20:00,How to filter GraphQL results by a descendent without edges?,<graphql>,2,0,0,2018-07-04 03:03:33
51167118,2,,51165205,0,,"<p>According to GitHub <code>repositories</code> documentation does not allow that kind of filtering.</p>&#xA;&#xA;<pre><code>first: Int&#xA;Returns the first n elements from the list.&#xA;&#xA;after: String&#xA;Returns the elements in the list that come after the specified cursor.&#xA;&#xA;last: Int&#xA;Returns the last n elements from the list.&#xA;&#xA;before: String&#xA;Returns the elements in the list that come before the specified cursor.&#xA;&#xA;privacy: RepositoryPrivacy&#xA;If non-null, filters repositories according to privacy&#xA;&#xA;orderBy: RepositoryOrder&#xA;Ordering options for repositories returned from the connection&#xA;&#xA;affiliations: [RepositoryAffiliation]&#xA;Affiliation options for repositories returned from the connection&#xA;&#xA;isLocked: Boolean&#xA;If non-null, filters repositories according to whether they have been locked&#xA;&#xA;isFork: Boolean&#xA;If non-null, filters repositories according to whether they are forks of another repository&#xA;</code></pre>&#xA;&#xA;<p>So I don't think that can be done.</p>&#xA;",3708153,,,,2018-07-04 06:29:54,"",,0,2,0,2018-07-04 06:29:54
51189280,2,,51185766,0,,"<p>You can't query an array like in your first example,&#xA;But from what i see you want to retrieve sevral ""resize"" results based on different filters to a single array, </p>&#xA;&#xA;<p>the only possible way to do this is either giving aliases for different filter options like your second query example but then it'll be in sevral arrays, </p>&#xA;&#xA;<p>or to change the filter object on the ""resize"" resolver to retrieve an array of width, height and thus return the result in a single array</p>&#xA;",1368057,,,,2018-07-05 10:42:37,"",,0,0,0,2018-07-05 10:42:37
51193007,2,,51192576,0,,"<p>When you do <code>var out = this.events</code> the <code>out</code> var is now pointing to the same array of objects as <code>this.events</code>. </p>&#xA;&#xA;<p>So if <code>this.events</code> is read-only, you'll need to make a copy of the array and if each object in the array is read-only you'll need to make a copy of each object as well.</p>&#xA;&#xA;<p>Here's an example using the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax"" rel=""nofollow noreferrer"">spread operator</a> to copy the array and objects: </p>&#xA;&#xA;<pre><code>computed: {&#xA;  eventsFormatted() {&#xA;    let out = [...this.events];&#xA;    for (let i in out) {&#xA;      let item = {...out[i]};&#xA;      item.startDate = moment(item.startDate);&#xA;      item.endDate = moment(item.endDate);&#xA;      out[i] = item;&#xA;    }&#xA;    return out;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The above makes a shallow copy of each object in the array. If you need to make a deep copy because of the structure of <code>this.events</code>, <a href=""https://stackoverflow.com/questions/122102/what-is-the-most-efficient-way-to-deep-clone-an-object-in-javascript"">see this post</a>.</p>&#xA;",2678454,,,,2018-07-05 13:47:27,"",,0,0,0,2018-07-05 13:47:27
51213706,1,,,0,445,"<p>The Gatsby Source API Server is working pretty well. With this in my gatsby-config:</p>&#xA;&#xA;<pre><code>    {&#xA;        resolve: 'gatsby-source-apiserver',&#xA;        options: {&#xA;            typePrefix: 'community_education__',&#xA;            url: `https://spreadsheets.google.com/feeds/list/1DLAVN3q758sPohCFeZlVSVRZKXzEser1SIsQnH2mvrw/ogwtdyp/public/basic?hl=en_US&amp;alt=json`,&#xA;            method: 'get',&#xA;            name: `classes`,&#xA;            entityLevel: `feed.entry`,&#xA;            schemaType: classType,&#xA;            localSave: true,&#xA;            path: `${__dirname}/api/`,&#xA;            verboseOutput: true,&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>It is correctly pulling down the data that I want. The problem is that the API I am using (google) brings back properties like:</p>&#xA;&#xA;<pre><code>{&#xA;    ""title"": {&#xA;      ""type"": ""text"",&#xA;      ""$t"": ""Computer Coding for Kids""&#xA;    },&#xA;    ""content"": {&#xA;      ""type"": ""text"",&#xA;      ""$t"": ""district: Hopkins, days: Mon - Thurs, startdate: 6/11/2018, enddate: 6/14/2018, time: 9am - Noon, grades: 3rd, 4th, 5th, 6th Grades, description: Learn how to code through playing games and having fun! We'll learn the fundamentals of loops, if statements, and variables as we learn the blockly and python computer languages!  Please come with internet navigation skills (basic typing and mouse control) and a passion to work hard and have fun!, link: https://hopkins.ce.eleyo.com/course/6064/youth-summer-2018/computer-coding-for-kids""&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>When I go to make a GraphQL query, the properties available are <code>type</code> and <code>alternative__t</code> which would actually be ok, except that <code>alternative__t</code> is always returning <code>null</code>.</p>&#xA;&#xA;<p>This query:</p>&#xA;&#xA;<pre><code>{&#xA;  allCommunityEducationClasses {&#xA;    totalCount&#xA;    edges {&#xA;      node {&#xA;        title {&#xA;          type&#xA;          alternative__t&#xA;        }&#xA;        content {&#xA;          type&#xA;          alternative__t&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Returns this result:</p>&#xA;&#xA;<pre><code>    {&#xA;      ""node"": {&#xA;        ""title"": {&#xA;          ""type"": ""text"",&#xA;          ""alternative__t"": null&#xA;        },&#xA;        ""content"": {&#xA;          ""type"": ""text"",&#xA;          ""alternative__t"": null&#xA;        }&#xA;      }&#xA;    },&#xA;    {&#xA;      ""node"": {&#xA;        ""title"": {&#xA;          ""type"": ""text"",&#xA;          ""alternative__t"": null&#xA;        },&#xA;        ""content"": {&#xA;          ""type"": ""text"",&#xA;          ""alternative__t"": null&#xA;        }&#xA;      }&#xA;    },&#xA;</code></pre>&#xA;&#xA;<p>I know that the problem is the <code>$t</code>, and if it was my own API and I could change the response name property, I would, but this is the google API. Can I rename the property somehow? Is there a way to use an escape character to query for <code>$t</code>?</p>&#xA;",3644991,,,,2018-07-06 16:17:48,Gatsby Source API Server Converting Name of Property and not allowing GraphQL Query,<graphql><gatsby>,1,0,0,2018-07-06 15:37:02
51214289,2,,51213706,0,,"<p>It seems like the library is checking for special characters, but not for <code>$</code>. I was able to fix it in my code by changing the <code>.replace</code> to <code>.replace(/-|__|:|\$|\.|\s/g, '_');</code> in <code>normalize.js</code> and this fixed my issue.</p>&#xA;&#xA;<p>I made a Pull Request as well. <a href=""https://github.com/thinhle-agilityio/gatsby-source-apiserver/pull/1"" rel=""nofollow noreferrer"">https://github.com/thinhle-agilityio/gatsby-source-apiserver/pull/1</a></p>&#xA;",3644991,,,,2018-07-06 16:17:48,"",,0,0,0,2018-07-06 16:17:48
51230535,2,,51230360,1,,"<p>You can <a href=""https://flow.org/en/docs/types/modules/#importing-and-exporting-types-"" rel=""nofollow noreferrer"">import and export Flow types</a> with a syntax similar to importing and exporting real modules. For your case, you could extract <code>assignments</code> as another type and do something like the following:</p>&#xA;&#xA;<p><strong>Component1.js</strong>:</p>&#xA;&#xA;<pre><code>export type FetchModuleQueryAssignments = ?Array&lt;?{|&#xA;  // Created date&#xA;  createdAt: any,&#xA;  // ID&#xA;  id: string,&#xA;  // Name&#xA;  name: string&#xA;|}&gt;;&#xA;&#xA;export type FetchModuleQuery = {|&#xA;  ...,&#xA;  assignments: FetchModuleQueryAssignments,&#xA;|};&#xA;</code></pre>&#xA;&#xA;<p><strong>Component2.js</strong>:</p>&#xA;&#xA;<pre><code>import type { FetchModuleQueryAssignments } from './Component1';&#xA;</code></pre>&#xA;",368697,,368697,2018-07-08 12:18:57,2018-07-08 12:18:57,"",,0,2,0,2018-07-08 09:19:53
51299476,2,,51285621,23,,"<p>I don't think there is <strong>the best</strong> way to structure a GraphQL server. Your seems fine!</p>&#xA;&#xA;<p>Check this <a href=""https://github.com/APIs-guru/graphql-apis"" rel=""noreferrer"">GraphQL APIs repo</a> that contains several examples and repositories with many different implementations.</p>&#xA;&#xA;<p>In my TypeScript projects I usually use a structure like this:</p>&#xA;&#xA;<pre><code>src/&#xA;├── user/&#xA;│   ├── data.ts&#xA;│   ├── mutation.ts&#xA;│   ├── query.ts&#xA;│   └── type.ts&#xA;├── bananas/&#xA;│   ├── data.ts&#xA;│   ├── mutation.ts&#xA;│   ├── query.ts&#xA;│   └── type.ts&#xA;├── utils/&#xA;│   ├── database.ts&#xA;│   └── config.ts&#xA;├── index.ts&#xA;└── schema.ts&#xA;</code></pre>&#xA;",3708153,,,,2018-07-12 07:18:38,"",,0,4,0,2018-07-12 07:18:38
51319289,1,,,3,2813,"<p>I am using <a href=""https://developer.github.com/v4/"" rel=""nofollow noreferrer"">https://developer.github.com/v4/</a></p>&#xA;&#xA;<p>And I have a huge query like this: </p>&#xA;&#xA;<pre><code>query ($login: String!, $first: Int, $after: String) {&#xA;  user (login: $login){&#xA;    avatarUrl&#xA;    login&#xA;    name,&#xA;    followers(first: $first, after:$after) { &#xA;      edges{&#xA;        cursor&#xA;        node{&#xA;          id&#xA;          name&#xA;          login&#xA;          avatarUrl&#xA;        }&#xA;      }&#xA;      totalCount&#xA;    },&#xA;    repositories(first: $first) {&#xA;      edges{&#xA;        cursor&#xA;        node{&#xA;          id&#xA;          name&#xA;        }&#xA;      }&#xA;      totalCount&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I think it's bad to query huge data from server.</p>&#xA;&#xA;<p>I have <code>followers</code> and <code>repositories</code> pages. So I think split this huge query to small queries is better.</p>&#xA;&#xA;<p>Here is small queries: </p>&#xA;&#xA;<p>followers query: </p>&#xA;&#xA;<pre><code>query($login: String!, $first: Int, $after: String) {&#xA;    user(login: $login) {&#xA;      followers(first: $first, after: $after) {&#xA;        edges {&#xA;          cursor&#xA;          node {&#xA;            id&#xA;            name&#xA;            login&#xA;            avatarUrl&#xA;          }&#xA;        }&#xA;        totalCount&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>repositories query: </p>&#xA;&#xA;<pre><code>query($login: String!, $first: Int, $after: String) {&#xA;    user(login: $login) {&#xA;      repositories(first: $first, after: $after) {&#xA;        nodes {&#xA;          id&#xA;          name&#xA;        }&#xA;        totalCount&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>user query:  </p>&#xA;&#xA;<pre><code>query($login: String!, $first: Int) {&#xA;    user(login: $login) {&#xA;      avatarUrl&#xA;      login&#xA;      name&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Am I correctly? Is it necessary to do this? What's the best practice this situation? Is there any documentation for teaching people how to handle this or told people the best practice?</p>&#xA;",6463558,,,,2018-07-13 08:36:12,"graphql, split huge query to small queries",<graphql><graphql-js><github-graphql>,1,2,0,2018-07-13 06:54:57
51321018,2,,51319289,5,,"<p>You can spit your queries into <a href=""https://graphql.org/learn/queries/#fragments"" rel=""noreferrer"">Fragments</a> and in that way you would still only trigger one request and have smaller <code>""queries""</code>. Something like this:</p>&#xA;&#xA;<p>Fragment for followers:</p>&#xA;&#xA;<pre><code>fragment followers on User {&#xA;    followers(first: $first, after: $after) { &#xA;      edges{&#xA;        cursor&#xA;        node{&#xA;          id&#xA;          name&#xA;          login&#xA;          avatarUrl&#xA;        }&#xA;      }&#xA;      totalCount&#xA;    },&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Fragment for repositories:</p>&#xA;&#xA;<pre><code>fragment repositories on User {&#xA;  repositories(first: $first) {&#xA;      edges{&#xA;        cursor&#xA;        node{&#xA;          id&#xA;          name&#xA;        }&#xA;      }&#xA;      totalCount&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Put them all together in the query:</p>&#xA;&#xA;<pre><code>query ($login: String!, $first: Int, $after: String) {&#xA;  user (login: $login){&#xA;    avatarUrl&#xA;    login&#xA;    name&#xA;    ...followers&#xA;    ...repositories&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3708153,,,,2018-07-13 08:36:12,"",,0,0,0,2018-07-13 08:36:12
51322346,1,,,45,32517,"<p>I have a GraphQL server which is able to serve timeseries data for a specified source (for example, sensor data). An example query to fetch the data for a sensor might be:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>query fetchData {&#xA;    timeseriesData(sourceId: &quot;source1&quot;) {&#xA;      data {&#xA;        time&#xA;        value&#xA;      }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>In my frontend, I want to allow the user to select 1 or more sources and show a chart with a line for each one. It seems like this would be possible by using a query like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>query fetchData {&#xA;    series1: timeseriesData(sourceId: &quot;source1&quot;) {&#xA;      data {&#xA;        time&#xA;        value&#xA;      }&#xA;    }&#xA;    series2: timeseriesData(sourceId: &quot;source2&quot;) {&#xA;      data {&#xA;        time&#xA;        value&#xA;      }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Most GraphQL tutorials seem to focus on static queries (e.g. where the only thing that is changing is the variables, but not the actual shape of the request) - but in my case I need the <em>query itself</em> to be dynamic (one timeseriesData request for each of my selected ids).</p>&#xA;<p>I have the following constraints:</p>&#xA;<ol>&#xA;<li>Modifying the server's schema is not an option (so I can't pass an array of IDs to the resolver, for example)</li>&#xA;<li>My query is specified using a template string e.g. gql`...`</li>&#xA;<li>I don't want to have to manually build up the query as a string, because that seems like a recipe for disaster and would mean that I lose all tooling benefits (e.g. autocomplete, syntax highlighting, linting)</li>&#xA;</ol>&#xA;<p>The stack I'm using is:</p>&#xA;<ul>&#xA;<li>Apollo client (specifically apollo-angular)</li>&#xA;<li>Angular</li>&#xA;<li>TypeScript</li>&#xA;<li>graphql-tag (for defining queries)</li>&#xA;</ul>&#xA;<p>Ideally, what I want to do is have some way of merging two queries into one, so that I can define them as per the first example but then join them together in an abstraction layer so that I get a single query like the second example to be sent over the wire.</p>&#xA;<p>However I'm not sure how to achieve this because graphql-tag is parsing the query into an AST and I'm struggling to understand whether it's feasable to manipulate the query in this way.</p>&#xA;<p><strong>What techniques are there for generating a dynamic query like this, where the <em>shape</em> of the query is not known upfront?</strong></p>&#xA;",1145963,,19290081,2022-11-01 15:41:50,2022-11-01 16:14:13,GraphQL dynamic query building,<graphql><apollo><apollo-client><graphql-tag>,4,0,0,2018-07-13 09:48:15
51455263,1,51490820,,1,495,"<p>I am working on shopify project with GraphQL/Storefront SDK. Currently I am facing checkout response issue. As per documentation I have create input, query and finally NSURLSession Task. The query executes but the response for checkout and error both are showing null. I can't understand what's going wrong in the input.</p>&#xA;&#xA;<p>Here is the code snippet:</p>&#xA;&#xA;<pre><code>let inputCheckout = Storefront.CheckoutCreateInput.create(&#xA;   email: .value(Preferences.value(forKey: ""CustomerEmail"") as? String),&#xA;   lineItems: .value(lineItems),&#xA;   shippingAddress: .value(nil),&#xA;   note: .value(""This is a testing notes""),&#xA;   customAttributes: .value(nil),&#xA;   allowPartialAddresses: .value(true)&#xA;)&#xA;</code></pre>&#xA;&#xA;<p>Now I am creating mutation:</p>&#xA;&#xA;<pre><code> let mutation = Storefront.buildMutation {$0&#xA;            .checkoutCreate(input: inputCheckout) { $0&#xA;                .checkout { $0&#xA;                    .webUrl()&#xA;                }&#xA;                .userErrors { $0&#xA;                    .field()&#xA;                    .message()&#xA;                }&#xA;            }&#xA;        }&#xA;</code></pre>&#xA;&#xA;<p>and then </p>&#xA;&#xA;<pre><code> let task = kAppDelegate.client.mutateGraphWith(mutation) { response, error in&#xA;&#xA;       print(""error = \(error.debugDescription)"")&#xA;       print(""response = \(response?.checkoutCreate?.fields)"")&#xA;&#xA;  }&#xA;  task.resume()&#xA;</code></pre>&#xA;&#xA;<p>And here is response:</p>&#xA;&#xA;<pre><code>error = nil&#xA;response = Optional([""checkout"": &lt;null&gt;, ""userErrors"": &lt;__NSArray0 0x604000008960&gt;(&#xA;&#xA;)&#xA;])&#xA;</code></pre>&#xA;&#xA;<p>No error showing....also no response.... I searched a lot but no solution I got.</p>&#xA;",4395882,,4395882,2018-07-21 10:56:09,2018-07-24 05:06:02,How to resolve the checkout null issue which is showing in Shopify GraphQL Checkout response,<swift><graphql>,1,0,0,2018-07-21 10:43:34
51490820,2,,51455263,1,,"<p>After a lot of hit and trial cases, I got the answer:</p>&#xA;&#xA;<p>Only need to replace this method params:</p>&#xA;&#xA;<pre><code>let inputCheckout = Storefront.CheckoutCreateInput.create(&#xA;   email: .value(Preferences.value(forKey: ""CustomerEmail"") as? String),&#xA;   lineItems: .value(lineItems),&#xA;   shippingAddress: .value(nil),&#xA;   note: .value(""This is a testing notes""),&#xA;   customAttributes: .value(nil),&#xA;   allowPartialAddresses: .value(true)&#xA;)&#xA;</code></pre>&#xA;&#xA;<p>With this one:</p>&#xA;&#xA;<pre><code>let inputCheckout = Storefront.CheckoutCreateInput.create(&#xA;   lineItems: .value(lineItems),&#xA;   allowPartialAddresses: .value(true)&#xA;)&#xA;</code></pre>&#xA;&#xA;<p>And now the response is getting correct without any issue.</p>&#xA;",4395882,,,,2018-07-24 05:06:02,"",,0,0,0,2018-07-24 05:06:02
51504760,1,,,1,538,"<p>I have many repositories and some of them contain a branch that has the same name. I want to be able to fetch all the repositories that contain a specific branch name. This is what I have so far but I can't seem to figure out how to add the necessary query. </p>&#xA;&#xA;<pre><code>{&#xA;  repositoryOwner(login: ""dev"") {&#xA;    repositories(first: 1) {&#xA;      nodes {&#xA;        name&#xA;        refs(first: 15, refPrefix: ""refs/heads/"") {&#xA;          edges {&#xA;            node {&#xA;              name&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any help would be greatly appreciated.</p>&#xA;",2592461,,2592461,2018-07-24 18:17:36,2018-07-24 20:34:28,How to get all repos that contain a certain branch on Github's GraphQL API,<github><github-api><github-graphql>,1,0,0,2018-07-24 17:47:56
51507023,2,,51504760,0,,"<p>One way is to request all repositories which have a ref with <code>qualifiedName</code> as <code>&lt;branch_name&gt;</code>. Then in your client side remove all null results : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repositoryOwner(login: ""JakeWharton"") {&#xA;    repositories(first: 100) {&#xA;      nodes {&#xA;        ref(qualifiedName: ""gh-pages"") {&#xA;          repository {&#xA;            name&#xA;            description&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20repositoryOwner(login%3A%20%22JakeWharton%22)%20%7B%0A%20%20%20%20repositories(first%3A%20100)%20%7B%0A%20%20%20%20%20%20nodes%20%7B%0A%20%20%20%20%20%20%20%20ref(qualifiedName%3A%20%22gh-pages%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20repository%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20name%0A%20%20%20%20%20%20%20%20%20%20%20%20description%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""nofollow noreferrer"">Try it in the explorer</a></p>&#xA;&#xA;<p>With <a href=""/questions/tagged/curl"" class=""post-tag"" title=""show questions tagged &#39;curl&#39;"" rel=""tag"">curl</a> &amp; <a href=""/questions/tagged/jq"" class=""post-tag"" title=""show questions tagged &#39;jq&#39;"" rel=""tag"">jq</a> to exclude the <code>null</code> results it would be :</p>&#xA;&#xA;<pre class=""lang-bash prettyprint-override""><code>curl -s -H ""Authorization: token YOUR_TOKEN"" \&#xA;     -d '{ &#xA;          ""query"": ""{ repositoryOwner(login: \""JakeWharton\"") { repositories(first: 100) { nodes { ref(qualifiedName: \""gh-pages\"") { repository { name } } } } } }""&#xA;      }' https://api.github.com/graphql | \&#xA;      jq -r '.data.repositoryOwner.repositories.nodes[] | select(.ref != null) | .ref.repository.name'&#xA;</code></pre>&#xA;&#xA;<p>You will have to go <a href=""https://graphql.org/learn/pagination/"" rel=""nofollow noreferrer"">through pagination</a> if there are more than 100 repos</p>&#xA;&#xA;<p>You can also use <a href=""https://graphql.org/learn/queries/#aliases"" rel=""nofollow noreferrer"">aliases</a> in case you need to find a combination of branch name in a single repo (or one of them). For instance looking for branch <code>gh-pages</code> &amp; <code>1.0</code> : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repositoryOwner(login: ""JakeWharton"") {&#xA;    repositories(first: 100) {&#xA;      nodes {&#xA;        branch1: ref(qualifiedName: ""1.0"") {&#xA;          repository {&#xA;            name&#xA;            description&#xA;          }&#xA;        }&#xA;        branch2: ref(qualifiedName: ""gh-pages"") {&#xA;          repository {&#xA;            name&#xA;            description&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20repositoryOwner(login%3A%20%22JakeWharton%22)%20%7B%0A%20%20%20%20repositories(first%3A%20100)%20%7B%0A%20%20%20%20%20%20nodes%20%7B%0A%20%20%20%20%20%20%20%20branch1%3A%20ref(qualifiedName%3A%20%221.0%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20repository%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20name%0A%20%20%20%20%20%20%20%20%20%20%20%20description%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20branch2%3A%20ref(qualifiedName%3A%20%22gh-pages%22)%20%7B%0A%20%20%20%20%20%20%20%20%20%20repository%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20name%0A%20%20%20%20%20%20%20%20%20%20%20%20description%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""nofollow noreferrer"">Try it in the explorer</a></p>&#xA;",2614364,,2614364,2018-07-24 20:34:28,2018-07-24 20:34:28,"",,0,0,0,2018-07-24 20:28:26
51570553,2,,51569580,1,,"<p>That's not a legal GraphQL response.  As per <a href=""http://facebook.github.io/graphql/June2018/#sec-Response-Format"" rel=""nofollow noreferrer"">section 7.1 of the spec</a>, after describing the <code>data</code>, <code>errors</code>, and <code>extensions</code>: top-level keys:</p>&#xA;&#xA;<blockquote>&#xA;  <p>... the top level response map must not contain any entries other than the three described above.</p>&#xA;</blockquote>&#xA;&#xA;<p>You might put this data into <code>extensions</code>; or make it an explicit part of your GraphQL API; or simply let ""success"" be implied by the presence of a result and the lack of an error.</p>&#xA;",10008173,,,,2018-07-28 10:41:05,"",,0,0,0,2018-07-28 10:41:05
51581400,2,,51579476,3,,"<p><strong><em>Solved!</em></strong></p>&#xA;&#xA;<p>There is a problem in graphql-tag, I had to rewrite to be sure there is no non-breaking space!</p>&#xA;",9242442,,,,2018-07-29 14:38:36,"",,0,0,0,2018-07-29 14:38:36
51586593,1,,,0,272,"<p>the compplete error message in my console is the ff:</p>&#xA;&#xA;<p>bundle.js:6882 Uncaught (in promise) Error: GraphQL error: Unknown modifier: $pushAll&#xA;    at new ApolloError (bundle.js:6885)&#xA;    at bundle.js:15810</p>&#xA;&#xA;<p>Anybody can show me how to resolve this problem?</p>&#xA;&#xA;<p>I read in other threads or question that $pushAll is a mongoose version issue with nodejs.. is this the same $pushAll issue?</p>&#xA;&#xA;<p>Thank you in advance!</p>&#xA;&#xA;<p>Here is the graphql query:</p>&#xA;&#xA;<pre><code>mutation AddLyricToSong($content: String, $songId: ID) {&#xA;  addLyricToSong(content: $content, songId: $songId) {&#xA;    id&#xA;    title&#xA;    lyrics {&#xA;      content&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the query inside a js file..</p>&#xA;&#xA;<pre><code>import React, { Component } from 'react'&#xA;import gql from 'graphql-tag';&#xA;import { graphql } from 'react-apollo';&#xA;&#xA;class LyricCreate extends Component {&#xA;  constructor(props) {&#xA;    super(props);&#xA;&#xA;    this.state = { content: '' };&#xA;  }&#xA;&#xA;  onSubmithandler(event) {&#xA;    event.preventDefault();&#xA;&#xA;    this.props.mutate({&#xA;      variables: {&#xA;        content: this.state.content,&#xA;        songId: this.props.songId&#xA;      }&#xA;    })&#xA;  }&#xA;&#xA;  render() {&#xA;&#xA;    return (&#xA;&#xA;        &lt;form onSubmit={this.onSubmithandler.bind(this)}&gt;&#xA;          &lt;label&gt;Add a Lyric&lt;/label&gt;&#xA;          &lt;input &#xA;            value={this.state.content}&#xA;            onChange={(event) =&gt; this.setState({content: event.target.value})} &#xA;           type=""text""/&gt;&#xA;        &lt;/form&gt;&#xA;&#xA;    )&#xA;  }&#xA;}&#xA;&#xA;const mutation = gql`&#xA;mutation AddLyricToSong($content: String, $songId: ID) {&#xA;  addLyricToSong(content: $content, songId: $songId) {&#xA;    id&#xA;    title&#xA;    lyrics {&#xA;      content&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;`;&#xA;&#xA;export default graphql(mutation)(LyricCreate);&#xA;</code></pre>&#xA;",10034974,,10034974,2018-08-01 09:06:08,2018-08-01 09:06:08,How do I resolve the Error: GraphQL error: Unknown modifier: $pushAll in my react app?,<javascript><mongoose><graphql>,0,8,0,2018-07-30 03:24:13
51597223,2,,51593768,1,,"<p>You may be able to use <code>LIMIT 1</code> to get the first match:</p>&#xA;&#xA;<pre><code>MATCH (t: Timeline {timestamp: headTimestamp}) - [:PREV*] -&gt; (t1: Timeline)&#xA;WHERE t1.timestamp &lt; newTimestamp&#xA;WITH t1 LIMIT 1&#xA;RETURN t1&#xA;</code></pre>&#xA;&#xA;<p>You may want to test to ensure you're getting back the first hit, as usually ordering of results isn't defined unless you use ORDER BY, like so:</p>&#xA;&#xA;<pre><code>MATCH path = (t: Timeline {timestamp: headTimestamp}) - [:PREV*] -&gt; (t1: Timeline)&#xA;WHERE t1.timestamp &lt; newTimestamp&#xA;WITH t1 &#xA;ORDER BY length(path) ASC&#xA;LIMIT 1&#xA;RETURN t1&#xA;</code></pre>&#xA;",92359,,,,2018-07-30 15:17:44,"",,0,5,0,2018-07-30 15:17:44
51681184,1,51684882,,0,2567,"<p>I am using Apollo Client and trying to build a mutation that submits an object, part of that object is an array of a subtype, this array needs to be dynamic in size but I cannot find any documentation on how to correctly build this. </p>&#xA;&#xA;<p>This is my mutation with a manually typed array and this works fine.</p>&#xA;&#xA;<pre><code>const SET_TEMPLATE = gql`&#xA;mutation setTemplate( &#xA;    $id: String,&#xA;    $name: String, &#xA;    ) {&#xA;    setTemplate(&#xA;        id: $id&#xA;        input: {&#xA;            name: $name&#xA;        }&#xA;        data: [&#xA;            {&#xA;                name: ""Branded""&#xA;                format: ""String""&#xA;                canExpand: false&#xA;                data: {}&#xA;            },&#xA;            {&#xA;                name: ""Assigned User""&#xA;                format: ""String""&#xA;                canExpand: false&#xA;                data: {}&#xA;            },&#xA;            {&#xA;                name: ""Assigned Users""&#xA;                format: ""String""&#xA;                canExpand: false&#xA;                data: {}&#xA;            }&#xA;        ]) {&#xA;        name&#xA;        author&#xA;        data {&#xA;            name&#xA;            format&#xA;            data&#xA;        }&#xA;    }&#xA;}&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>The below is pseudo for what I want to achieve.</p>&#xA;&#xA;<pre><code>const SET_TEMPLATE = gql`&#xA;mutation setTemplate( &#xA;    $id: String,&#xA;    $name: String, &#xA;    $data: FieldInput &#xA;    ) {&#xA;    setTemplate(&#xA;        id: $id&#xA;        input: {&#xA;            name: $name&#xA;        }&#xA;        data: [&#xA;            $data&#xA;        ]) {&#xA;        name&#xA;        author&#xA;        data {&#xA;            name&#xA;            format&#xA;            data&#xA;        }&#xA;    }&#xA;}&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>Should I be following something like this, or is there an easier way? <a href=""https://stackoverflow.com/questions/41993034/dynamic-mutation-document-for-react-apollo"">Dynamic mutation document for react-apollo</a> </p>&#xA;",2952461,,,,2019-10-16 19:53:02,How to structure a GraphQL mutation when dealing with an array of objects,<javascript><graphql><apollo>,1,0,0,2018-08-03 23:31:47
51681530,2,,50382830,7,,"<p>I had a similar issue a few days ago, I had to use <code>const_set</code> for setting the constant dynamically. So, using your example that would translate to</p>&#xA;&#xA;<pre><code>class Foo&#xA;  def trial&#xA;   #code to initialize shopify session here &#xA;   set_query&#xA;   client.query(ProductQuery)&#xA;  end&#xA;&#xA;  private &#xA;&#xA;  def set_query &#xA;     query = &lt;&lt;-GRAPHQL&#xA;        {&#xA;          shop {&#xA;          name&#xA;        }&#xA;      }&#xA;    GRAPHQL&#xA;    Kernel.const_set(:ProductQuery, client.parse(query))&#xA;  end&#xA;&#xA;  def client&#xA;    ShopifyAPI::GraphQL.new&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>Shopify's GraphQL feature relies on the <a href=""https://github.com/github/graphql-client"" rel=""noreferrer"">Github GraphQL ruby client</a>, which mandates query be defined in a constant. Also, the <code>shopify_api gem</code> mandates the existence of a Shopify session before you can use this method, depending on your setup you may not have a session defined if the constant is on the class body as that get executed first by the ruby interpreter. The way around this is to set the constant dynamically </p>&#xA;",5045091,,,,2018-08-04 00:41:46,"",,0,3,0,2018-08-04 00:41:46
51693784,1,51694035,,2,1045,"<p>I have a simple query like this</p>&#xA;&#xA;<pre><code>import gql from ""graphql-tag"";&#xA;&#xA;export const GET_TODOS_BY_PRODUCT = gql`&#xA;  query getTodosByProduct(&#xA;    $id: ID!&#xA;    $completed: Boolean = false&#xA;    $limit: Int = 100&#xA;  ) {&#xA;    product(id: $id) {&#xA;      hashtag&#xA;      todos(completed: $completed, limit: $limit) {&#xA;        body&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>In GraphiQL, it returns results like -</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""product"": {&#xA;      ""todos"": [&#xA;        {&#xA;          ""body"": ""Remove Custom Font from Tweet #a2k"",&#xA;          ""product"": {&#xA;            ""id"": ""1439""&#xA;          },&#xA;          ""__typename"": ""Todo""&#xA;        },&#xA;        {&#xA;          ""body"": ""Make Site a PWA #a2k"",&#xA;          ""product"": {&#xA;            ""id"": ""1439""&#xA;          },&#xA;          ""__typename"": ""Todo""&#xA;        }&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But while using React Apollo's Query component, it returns the <code>hashtag</code> properly but returns <code>todos</code> as an empty array [] &amp; I can't seem to figure out what's wrong with the query. </p>&#xA;&#xA;<p>If I fetch additional parameters from the query outside of <code>todos</code> then it returns them properly but only <code>todos</code> returns empty array <code>[]</code>.</p>&#xA;&#xA;<p>I am requesting it like -</p>&#xA;&#xA;<pre><code>&lt;Query&#xA;      query={GET_TODOS_BY_PRODUCT}&#xA;      variables={{ id: state.get(""selectedProduct.id"") }}&#xA;    &gt;&#xA;      {({ data: { product } }) =&gt; {&#xA;        return &lt;Main todos={product.todos} hashtag={product.hashtag} /&gt;;&#xA;      }}&#xA;&lt;/Query&gt;&#xA;</code></pre>&#xA;&#xA;<p>And I can't seem to figure out why something's wrong? Any suggestions?</p>&#xA;",6141587,,,,2018-08-05 11:48:00,Query works in GraphiQL but returns empty array in Actual Code while using React Apollo,<javascript><reactjs><graphql><apollo><react-apollo>,1,7,0,2018-08-05 11:13:30
51709597,1,51709968,,0,99,"<p>I'm stuck in a situation, in a nested loop. The top loop iterating over the <code>Feeds</code> array and every <code>feed</code> in <code>Feeds</code> have <strong>comments</strong> array. This <strong>comments</strong> is used for inner loop.</p>&#xA;&#xA;<p>My problem is, I have  <strong>Comment button</strong> and on click of that button, I want to show the list of <strong>comments</strong> only for that feed post. But instead of showing comments on current feed post, it is showing comments for all other feeds also, that's because of use of only one <code>Boolean</code> variable <code>showComments</code> created inside <code>.ts</code> file.</p>&#xA;&#xA;<p>So how can make that work for only the given context <strong>Feed post</strong>?</p>&#xA;&#xA;<p><strong>HTML</strong></p>&#xA;&#xA;<pre><code>&lt;ng-container *ngFor=""let feed of feeds""&gt;&#xA;  &lt;div class=""ed-card ed-card-feed""&gt;&#xA;    &lt;div class=""ed-card-feed--footer""&gt;&#xA;      &lt;div class=""card-feed-values""&gt;&#xA;        &lt;a class=""mr-4""&gt;&lt;span&gt;{{feed.likes_count}}&lt;/span&gt; Likes&lt;/a&gt;&#xA;        &lt;a&gt;&lt;span&gt;{{feed.comments_count}}&lt;/span&gt; Comments&lt;/a&gt;&#xA;      &lt;/div&gt;&#xA;      &lt;div class=""card-feed-actions""&gt;&#xA;        &lt;a class=""mr-5"" (click)=""likePost(feed.id)""&gt;&lt;span&gt;&lt;/span&gt; Like&lt;/a&gt;&#xA;       &lt;a href=""javascript:void(0)"" class=""mr-5"" (click)=""showComments = true""&gt;&lt;span&gt;&lt;/span&gt; Comment button&lt;/a&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;    // Below  div needs to be open for that particular feed only&#xA;    &lt;div *ngIf=""showComments"" class=""ed-card-feed--comments""&gt;&#xA;      &lt;div class=""feed-comments-list""&gt;&#xA;        &lt;ng-container *ngFor=""let comment of feed.comments?.edges""&gt;&#xA;          &lt;div class=""comment-list-item""&gt;&#xA;            &lt;p class=""comment-box mt-1""&gt;&#xA;              {{comment.node?.body}}&#xA;            &lt;/p&gt;&#xA;          &lt;/div&gt;&#xA;        &lt;/ng-container&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/ng-container&gt;&#xA;</code></pre>&#xA;&#xA;<p>P.S. - Please don't confuse with <code>feed.comments?.edges</code> that's just because of <code>GraphQL</code>. It is just an array.</p>&#xA;&#xA;<p>Thanx</p>&#xA;",5893995,,1009922,2018-08-06 14:29:20,2021-11-11 12:03:56,How can I show comments of clicked feed only,<javascript><html><angular><graphql>,4,0,0,2018-08-06 14:09:51
51710774,2,,51708885,0,,"<p>I believe you need to use <code>image_url()</code>. <a href=""https://api.rubyonrails.org/classes/ActionView/Helpers/AssetUrlHelper.html"" rel=""nofollow noreferrer"">Have a glimpse at the docs</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Computes the full URL to an image asset. This will use image_path internally, so most of their behaviors will be the same. Since image_url is based on asset_url method you can set :host options. If :host options is set, it overwrites global config.action_controller.asset_host setting.</p>&#xA;  &#xA;  <p>image_url ""edit.png"", host: ""<a href=""http://stage.example.com"" rel=""nofollow noreferrer"">http://stage.example.com</a>"" # => <a href=""http://stage.example.com/assets/edit.png"" rel=""nofollow noreferrer"">http://stage.example.com/assets/edit.png</a></p>&#xA;</blockquote>&#xA;",2295410,,,,2018-08-06 15:13:07,"",,0,4,0,2018-08-06 15:13:07
51742384,1,51825524,,2,3880,"<p>I'm just getting started with the new Shopify GraphQL <strong>Admin API</strong>. I'm trying to retreive all products, where the <code>title</code> field contains a certain word.</p>&#xA;&#xA;<p>Currently I can successfully retrieve a product by including the full product title (exact match):</p>&#xA;&#xA;<pre><code>{&#xA;  shop {&#xA;    id&#xA;    name&#xA;  }&#xA;  products(first: 10, query:""title:'RAVEN DUSTY OLIVE/SILVER MESH'"") {&#xA;    edges {&#xA;      node {&#xA;        productType&#xA;        title&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, I want to partially match the title to display all products with the word ""Raven"" anywhere in the title, but the following returns no results:</p>&#xA;&#xA;<pre><code>{&#xA;  shop {&#xA;    id&#xA;    name&#xA;  }&#xA;  products(first: 10, query:""title:'RAVEN'"") {&#xA;    edges {&#xA;      node {&#xA;        productType&#xA;        title&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any ideas on how to get the partial matching working?</p>&#xA;",1619602,,,,2020-11-30 23:44:44,Shopify GraphQL partial matching on query filter,<graphql><shopify><shopify-app>,2,2,0,2018-08-08 08:48:34
51781695,1,,,0,1174,"<p>I am working on the following types, where the ""content"" of a ""Comment"" is a union type:</p>&#xA;&#xA;<pre><code>type TextContent {&#xA;  text: String&#xA;}&#xA;&#xA;type RichContent {&#xA;  participants: [String]&#xA;  startTime: String&#xA;}&#xA;&#xA;union Content = TextContent | RichContent&#xA;&#xA;type Comment {&#xA;  id: ID&#xA;  sender: String&#xA;  content: Content&#xA;}&#xA;&#xA;type Review {&#xA;  id: ID&#xA;  title: String&#xA;  lastComment: Comment&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In my Apollo query, I was trying to use conditional fragments on the 2 Content types:</p>&#xA;&#xA;<pre><code>query listOfReviews {&#xA;  reviews {&#xA;    ...reviewFields&#xA;  }&#xA;}&#xA;&#xA;fragment reviewFields on Review {&#xA;  id&#xA;  title&#xA;  lastComment {&#xA;    content {&#xA;      ... on TextContent {&#xA;        text&#xA;      }&#xA;      ... on RichContent {&#xA;        participants&#xA;        startTime&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I received a runtime error where Apollo seems trying to access ""participants"" field of ""undefined"", where the actual content object is:</p>&#xA;&#xA;<pre><code>{&#xA;  __typename: ""TextContent:,&#xA;  text: ""abc""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It looks the two types of the union Content are merged together.</p>&#xA;&#xA;<p>My question is: is it allowed to use type conditions on nested fields in Apollo queries? Or type conditions have to be used on the top level types returned by the queries? If it's allowed, how should I fix my types/queries?</p>&#xA;&#xA;<p>Thanks a lot!</p>&#xA;",6883470,,,,2018-08-13 19:11:28,Apollo graphql queries with type condition on nested fields,<graphql><apollo>,1,0,0,2018-08-10 07:55:43
51823630,1,,,1,745,"<p>The Shopify <a href=""https://github.com/Shopify/storefront-api-examples"" rel=""nofollow noreferrer"">Storefront API examples</a> show an App.js view listing all products on one page. In these examples, products are added to the cart from this index page, and there is no product detail page. Unlike the examples, I want to click through to a product details page from an index of products.</p>&#xA;&#xA;<p>The products index was easy. But I'm having <em>alot</em> of trouble understanding how to create a page per product.</p>&#xA;&#xA;<p>Seems I can't use a graphql query with a variable on Shopify Storefront. For example, this fails:</p>&#xA;&#xA;<p><code>query myQuery($id: ID!) {&#xA;  Product(id: $id) {&#xA;    id&#xA;    title&#xA;  }&#xA;}</code></p>&#xA;&#xA;<p>I'm using <a href=""https://nuxtjs.org/"" rel=""nofollow noreferrer"">nuxt</a> and <a href=""https://akryum.github.io/vue-apollo/guide/apollo/queries.html#simple-query"" rel=""nofollow noreferrer"">vue-apollo</a> to build the frontend.</p>&#xA;&#xA;<p>Any pointers appreciated.</p>&#xA;",1462487,,,,2018-08-15 22:30:12,Storefront API: querying for variable parameters?,<graphql><shopify><apollo><nuxt.js>,1,0,0,2018-08-13 13:33:23
51825524,2,,51742384,2,,"<p>Bjorn! This should work:</p>&#xA;&#xA;<pre><code>{&#xA;  shop {&#xA;    id&#xA;    name&#xA;  }&#xA;  products(first: 10, query:""title:RAVEN*"") {&#xA;    edges {&#xA;      node {&#xA;        productType&#xA;        title&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Check out the docs: <a href=""https://help.shopify.com/en/api/getting-started/search-syntax"" rel=""nofollow noreferrer"">https://help.shopify.com/en/api/getting-started/search-syntax</a></p>&#xA;",10220177,,,,2018-08-13 15:14:40,"",,0,2,0,2018-08-13 15:14:40
51831796,1,51852065,,0,465,"<p>I would like to set a resolver, on an individual field that returns a string.</p>&#xA;&#xA;<p>For this example. I want to take the <code>title</code> attribute, and make it <code>.toUpperCase</code></p>&#xA;&#xA;<h3>Schema</h3>&#xA;&#xA;<pre><code>type Product {&#xA;  title(uppercase:Boolean!): String!&#xA;}&#xA;type Query {&#xA;  products: [Product]&#xA;}&#xA;</code></pre>&#xA;&#xA;<h2>Resolver</h2>&#xA;&#xA;<pre><code>Query: {&#xA;    products: () =&gt; [{title:'foo'}],&#xA;    products.title: (stringToRtn, { action }) =&gt; {&#xA;    return action ? stringToRtn.toUpperCase : stringToRtn&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4064680,,4064680,2018-08-16 02:59:57,2021-11-08 19:21:33,Set resolver on individual field with GraphQL,<javascript><graphql>,1,0,0,2018-08-13 23:21:43
51885547,1,,,5,15019,"<p>I'm trying to figure out a way to pass an array of strings and embed it into a query (using React, GraphQL). The problem is it accepts the parameter as an array of strings, but converts it to a string when I embed it. </p>&#xA;&#xA;<p>Let's say I have this function that makes a call to get some data. (I hardcoded the argument for now but it will be a variable as soon as I figure this out).</p>&#xA;&#xA;<p>// here I'm calling the function</p>&#xA;&#xA;<pre><code> const query = getData.generate([""123"", ""456""]);&#xA;        return GraphqlClient.query(query)&#xA;        .then((e) =&gt; {&#xA;            return e.data.oneAppProviders;&#xA;        }) .......&#xA;</code></pre>&#xA;&#xA;<p>// and here is the query with the embedded parameter. (Backend expects an array of strings.)</p>&#xA;&#xA;<pre><code>export default {&#xA;generate(id) {&#xA;// console.log(id)        // output: [""123"", ""456""]&#xA;    return { query : gql`{&#xA;        oneAppProviders(id: ${id}) {&#xA;            id&#xA;            firstName&#xA;         }&#xA;    }&#xA;}}&#xA;</code></pre>&#xA;&#xA;<p>When I run it, I get this error:</p>&#xA;&#xA;<pre><code>GraphQLError {message: ""Syntax Error: Expected Name, found Int ""456""""&#xA;</code></pre>&#xA;&#xA;<p>I guess, when I embed it, it converts it to integers... &#xA;If my array is [""123""], I get the following error:</p>&#xA;&#xA;<pre><code>[GraphQL error]: Message: Expected type [String], found 123.&#xA;</code></pre>&#xA;&#xA;<p>I hope the question is clear enough. Thanks in advance.</p>&#xA;",10236473,,,,2019-06-05 17:57:42,"Passing array of strings to a GraphQL query, convers to integers when embedded",<javascript><reactjs><graphql><template-literals>,3,0,0,2018-08-16 21:25:54
51885554,1,,,5,3458,"<pre><code>class ProductQuery(graphene.ObjectType):&#xA;    products = graphene.List(Product)&#xA;&#xA;    def resolve_products(self, info):&#xA;        return get_all_products()&#xA;</code></pre>&#xA;&#xA;<p>Above are my code for query all product with no param. What is I want to query product by manufacture_id? How to do I do the resolver? </p>&#xA;&#xA;<p>There is no document on <a href=""http://docs.graphene-python.org/en/latest/types/schema/"" rel=""noreferrer"">their official site</a>.</p>&#xA;",887103,,,,2021-06-03 02:48:53,How to handle query with parameter in python graphene,<python><graphql>,1,0,0,2018-08-16 21:26:38
51895358,2,,42021113,32,,"<p>If you want your queries to stay nice and multiline, you may do like this:</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>script='query {&#xA;  repositoryOwner(login:\&quot;danbst\&quot;) {&#xA;    repositories(first: 100) {&#xA;      edges {&#xA;        node {&#xA;          nameWithOwner&#xA;          pullRequests(last: 100, states: OPEN) {&#xA;            edges {&#xA;              node {&#xA;                title&#xA;                url&#xA;                author {&#xA;                  login&#xA;                }&#xA;                labels(first: 20) {&#xA;                  edges {&#xA;                    node {&#xA;                      name&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}'&#xA;script=&quot;$(echo $script)&quot;   # the query should be a one-liner, without newlines&#xA;&#xA;curl -i -H 'Content-Type: application/json' \&#xA;   -H &quot;Authorization: bearer .........&quot; \&#xA;   -X POST -d &quot;{ \&quot;query\&quot;: \&quot;$script\&quot;}&quot; https://api.github.com/graphql&#xA;</code></pre>&#xA;",1190453,,2415524,2021-05-11 18:04:02,2021-05-11 18:04:02,"",,0,5,0,2018-08-17 12:21:06
51902567,2,,51893664,1,,"<p><code>Dataloader</code> is expecting you to return an array of the same length as the input to your loader.  So, if the <code>loader</code> gets <code>[4,5,6,7]</code> as an input, it will need to return an array with a length of <code>4</code>.  Also keep in mind that the results returned from the loader need to be in the same order as the input ids.  This may or may not be something you have to worry about depending on how the data is returned from your database.</p>&#xA;",3183170,,,,2018-08-17 20:39:09,"",,0,1,0,2018-08-17 20:39:09
51902792,2,,51893664,0,,<p>You should return an array for each id - array of arrays. You have to convert sql result - flat list with duplicates into 'groupped' arrays of records preserving input ids (amount and order).</p>&#xA;,6124657,,,,2018-08-17 20:59:26,"",,0,1,0,2018-08-17 20:59:26
51909282,1,51909609,,1,637,"<pre><code>import { makeExecutableSchema } from 'graphql-tools';&#xA;&#xA;const fish = { length:50 },&#xA;      rope = { length:100 };&#xA;&#xA;const typeDefs = `&#xA;    type Query {&#xA;        rope: Rope!&#xA;        fish: Fish!&#xA;    }&#xA;&#xA;    type Mutation {&#xA;        increase_fish_length: Fish!&#xA;        increase_rope_length: Rope!&#xA;    }&#xA;&#xA;    type Rope {&#xA;        length: Int!&#xA;    }&#xA;&#xA;    type Fish {&#xA;        length: Int!&#xA;    }&#xA;`;&#xA;&#xA;const resolvers = {&#xA;    Mutation: {&#xA;        increase_fish_length: (root, args, context) =&gt; {&#xA;            fish.length++;&#xA;            return fish;&#xA;        },&#xA;        increase_rope_length: (root, args, context) =&gt; {&#xA;            rope.length++;&#xA;            return rope;&#xA;        }&#xA;    }&#xA;};&#xA;&#xA;export const schema = makeExecutableSchema({ typeDefs, resolvers });&#xA;</code></pre>&#xA;&#xA;<p>Above example is working well, but I want to use a mutation name <em>increase_length</em> instead of <em>increase_fish_length</em> and <em>increase_rope_length</em>.</p>&#xA;&#xA;<p>I tried to name mutations <em>Fish/increase_length</em> and <em>Rope/increase_length</em> using slash, but it didn't work. (only /[_A-Za-z][_0-9A-Za-z]*/ are available.)</p>&#xA;&#xA;<p>Dose GraphQl support any solution for namespace?</p>&#xA;",4761970,,,,2018-08-21 01:08:59,How to solve naming conflict in GraphQL?,<javascript><graphql><graphql-tools>,2,0,0,2018-08-18 13:40:53
51914858,1,,,0,532,"<p>In <code>Review.js</code>, I'm trying to create a for loop so the <code>&lt;starIcon/&gt;</code> shows up multiple times based on the ratings it has. so if it has a rating of 4 stars, I would render 4 star icons in that review area. I'm trying to use for loops inside the JSX (I tried using this source: <a href=""https://stackoverflow.com/questions/22876978/loop-inside-react-jsx"">Loop-inside-react-jsx</a> but I'm not sure how I can use the database data to change the limit of the for loop. Like the for loop condition should basically be but I'm not sure how to implement that in this project.  </p>&#xA;&#xA;<p>(for i=0; i &lt; ({rating}-1); i++){</p>&#xA;&#xA;<p><strong>App.js</strong></p>&#xA;&#xA;<pre><code>   export default class App extends Component {&#xA;    constructor() {&#xA;        super();&#xA;    this.state = {&#xA;        language: ""english""&#xA;    };&#xA;}&#xA;&#xA;render() {&#xA;    return &lt;Fragment&gt;&#xA;        &lt;Overview /&gt;&#xA;        &lt;Reviews /&gt;&#xA;    &lt;/Fragment&gt;;&#xA;}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Reviews.js</strong></p>&#xA;&#xA;<pre><code>function Reviews({ reviews, getReviewsQuery }) {&#xA;const length = reviews.length;&#xA;return &lt;div className=""reviews""&gt;&#xA;    &lt;div className=""reviews__header""&gt;&#xA;        &lt;h2&gt;Reviews&lt;/h2&gt;&#xA;        &lt;div className=""reviews__header__stars""&gt;&#xA;            &lt;StarIcon /&gt;&#xA;            {`(${length} reviews)`}&#xA;        &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;    {length ? &lt;hr /&gt; : """"}&#xA;    &lt;table&gt;&#xA;        &lt;tbody&gt;&#xA;            {reviews.map(r =&gt; (&#xA;                &lt;Review key={r.id} review={r} getReviewsQuery={getReviewsQuery} /&gt;&#xA;            ))}&#xA;        &lt;/tbody&gt;&#xA;    &lt;/table&gt;&#xA;    &lt;hr /&gt;&#xA;    &lt;CreateReview getReviewsQuery={getReviewsQuery} /&gt;&#xA;&lt;/div&gt;;&#xA;}&#xA;const getReviews = gql`&#xA;query getReviews {&#xA;    reviews {&#xA;        id&#xA;        rating&#xA;        author&#xA;        comment&#xA;        created_at&#xA;    }&#xA;}&#xA;`;&#xA;&#xA;export default function ReviewsHOC(props) {&#xA;    return &lt;Query query={getReviews}&gt;&#xA;    {({ data }) =&gt; (&#xA;                &lt;Reviews&#xA;            {...props}&#xA;            getReviewsQuery={getReviews}&#xA;            reviews={data &amp;&amp; data.reviews || []} // eslint-disable-line no- &#xA;   mixed-operators&#xA;            /&gt;&#xA;        )}&#xA;    &lt;/Query&gt;;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p><strong>Review.js</strong></p>&#xA;&#xA;<pre><code>export default function Review({&#xA;onDeleteReview,&#xA;review: {&#xA;    id,&#xA;    rating,&#xA;    author,&#xA;    comment,&#xA;    created_at&#xA;} = {}&#xA;}) {&#xA;return &lt;tr className=""review""&gt;&#xA;    &lt;td className=""review__info""&gt;&#xA;        &lt;div className=""review__info__author""&gt;&#xA;            {author}&#xA;        &lt;/div&gt;&#xA;        &lt;div className=""review__info__date""&gt;&#xA;            {created_at}&#xA;        &lt;/div&gt;&#xA;    &lt;/td&gt;&#xA;    &lt;td className=""review__details""&gt;&#xA;        &lt;div className=""review__details__rating""&gt;&#xA;            {rating} &lt;StarIcon /&gt;&#xA;        &lt;/div&gt;&#xA;        &lt;div className=""review__details__comment""&gt;&#xA;            {comment}&#xA;        &lt;/div&gt;&#xA;    &lt;/td&gt;&#xA;    &lt;td className=""review__delete""&gt;&#xA;        &lt;TrashIcon /&gt;&#xA;    &lt;/td&gt;&#xA;&lt;/tr&gt;;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Star.js</strong></p>&#xA;&#xA;<pre><code>export default function StarIcon(props) {&#xA;    return &lt;svg className=""star-icon"" viewBox=""0 0 20 20"" {...props}&gt;&#xA;        &lt;path d=""M10 0L6.91 6.585 0 7.64l5 5.125L3.82 20 10 16.583 16.18 20 15 12.765l5-5.125-6.91-1.056z"" fillRule=""evenodd"" opacity="".5"" /&gt;&#xA;    &lt;/svg&gt;;&#xA;}&#xA;</code></pre>&#xA;",10245069,,6340959,2018-08-19 07:00:19,2018-08-19 07:00:19,How to create a for loop using database data in React,<javascript><reactjs><for-loop><graphql><jsx>,1,0,0,2018-08-19 05:49:09
51914974,2,,51914858,0,,"<p>JavaScript lacks a ""range"" method that some other languages have which prevents that declarative programming JSX loves. I'd say the two most common options are:</p>&#xA;&#xA;<p>a. Use the <code>[...Array(count)]</code> trick inside your render's return.</p>&#xA;&#xA;<pre><code>    &lt;div className=""review__details__rating""&gt;&#xA;        {[...Array(rating)].map(() =&gt; &lt;StarIcon /&gt;)}&#xA;    &lt;/div&gt;&#xA;</code></pre>&#xA;&#xA;<p>b. Do a loop <em>outside</em> the render's return, pushing each star into an array (like your linked post shows)</p>&#xA;&#xA;<pre><code>// before you `return`&#xA;let stars = [];&#xA;for (let i = 0; i &lt; rating; i++) {&#xA;  stars.push(&lt;StarIcon /&gt;);&#xA;}&#xA;&#xA;// ...somewhere inside render's return&#xA;    &lt;div className=""review__details__rating""&gt;&#xA;        &lt;div&gt;{stars}&lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;</code></pre>&#xA;",5812047,,5812047,2018-08-19 06:14:15,2018-08-19 06:14:15,"",,0,2,0,2018-08-19 06:09:00
51922935,2,,51913873,1,,"<p>In this case using <code>data.merchant</code> solved my problem. But the above suggested solution i.e., use of <code>JSON.parse(...)</code> might not be the best practice because if there are no object in JSON, then expected response might be as follows:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""merchant"": null&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Instead of fields to be <code>null</code>.</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""merchant"": {&#xA;      ""id"": null // even though merchant is null in JSON, &#xA;                 // I am getting a merchant object in response from GraphQL&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have updated my GitHub: <a href=""https://github.com/vishrantgupta/graphql"" rel=""nofollow noreferrer"">https://github.com/vishrantgupta/graphql</a> with working code.</p>&#xA;",2704032,,2704032,2018-08-21 17:19:20,2018-08-21 17:19:20,"",,0,0,0,2018-08-20 00:47:12
51935764,1,,,3,417,"<p>Is it possible to get details of a Git Commit using only the SHA-1 hash (without knowing the repository name and the respective branch) using the GitHub REST API or GraphQL API v4?</p>&#xA;&#xA;<p>As per <a href=""https://developer.github.com/v3/repos/commits/#get-a-single-commit"" rel=""nofollow noreferrer"">specification</a> of GitHub's REST API, it isn't possible. Currently, I am using the GitHub GraphQL API and I have not been successful in achieving this.</p>&#xA;",3477160,,,,2019-08-15 19:17:45,Get details of a Git Commit using only the SHA-1 hash through the GitHub REST API or GraphQL API v4,<git><graphql><github-api><github-graphql>,1,0,0,2018-08-20 17:26:18
51940310,2,,51909282,1,,"<p>I've been toying around with some ideas around namespaces. What if your typeDefinitions looked something like this:</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;    increase_length: IncreaseLengthMutation!&#xA;}&#xA;&#xA;type IncreaseLengthMutation {&#xA;    fish: Fish!&#xA;    rope: Rope!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and your resolvers looked like this:</p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;    Mutation: {&#xA;        increase_Length: () =&gt; {&#xA;            return {}&#xA;        }&#xA;    },&#xA;    IncreaseLengthMutation {&#xA;        fish: (root, args, context) =&gt; {&#xA;            fish.length++;&#xA;            return fish;&#xA;        },&#xA;        rope: (root, args, context) =&gt; {&#xA;            rope.length++;&#xA;            return rope;&#xA;        }&#xA;    }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>The biggest drawback is the wonky mutation resolver that returns an empty array. It has to exist so that it cascades down to the other mutations, though.</p>&#xA;",652728,,,,2018-08-21 01:08:59,"",,0,1,0,2018-08-21 01:08:59
51958018,1,,,6,5773,"<p>I am using Apollo server, trying to construct a nested query for an e-commerce application. I am querying an rest api to retrieve items in a shopping basket. </p>&#xA;&#xA;<p>However the response of this request does not contain all the product information we need. So I am trying to nest an additional query, using one of the returned parameters as a variable in to get the additional product information required.</p>&#xA;&#xA;<p>I have seen nested query examples and as far as I understand (I'm pretty new to GraphQL and Apollo in particular) this is one of the great things about GraphQL. But I haven't seen any examples where a nested query depends on the returned value from the parent query.</p>&#xA;&#xA;<pre><code>//typeDefs&#xA;const typeDefs = gql`&#xA;    type Product {&#xA;        id: ID&#xA;        name: String&#xA;        sku: String&#xA;        length: Float&#xA;    }&#xA;    type CartItem {&#xA;        id: ID&#xA;        product_id: ID&#xA;        quantity: Int&#xA;        product(product_id: ID!): Product&#xA;    }&#xA;    type Query {&#xA;        getProduct(id: ID!): Product&#xA;        getCartItems(id: ID!): [CartItem]&#xA;    }&#xA;`;&#xA;// resolvers&#xA;const processResponse = (resolved) =&gt; {&#xA;    try {&#xA;        const { data } = resolved;&#xA;        return data;&#xA;    } catch (error) {&#xA;        return error;&#xA;    }&#xA;};&#xA;const resolvers = {&#xA;    Query: {&#xA;        getProduct: async (parent, { id }, { ctx }) =&gt; {&#xA;            return processResponse(await ctx.get(`products/${id}`));&#xA;        },&#xA;        getCartItems: async (parent, { id }, { ctx }) =&gt; {&#xA;            return processResponse(await ctx.get(`carts/${id}/items`))&#xA;        }&#xA;    },&#xA;    CartItem: {&#xA;        product: async (parent, { product_id }, { ctx }) =&gt; {&#xA;            return processRequest(await ctx.get(`products/${product_id}`));&#xA;        }&#xA;    }&#xA;};&#xA;&#xA;// and query in the playground&#xA;query {&#xA;  getCartItems(id:""1234b11"") {&#xA;    id&#xA;    product_id&#xA;    quantity&#xA;    product(product_id: $product_id) {&#xA;      id&#xA;      name&#xA;      description&#xA;    }&#xA;  } &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the error I get is <code>Variable \""$product_id\"" is not defined.""</code> When I hardcode product_id with an actual product_id I get the sort of response I want, but of course this isn't dynamic. I have tried passing variables to the query like <code>query ($product_id: ID)</code> but I get an error <code>""Variable \""$product_id\"" of type \""ID\"" used in position expecting type \""String!\""."",</code>.</p>&#xA;&#xA;<p>Any help appreciated!</p>&#xA;",6780313,,,,2018-08-22 23:43:27,Nested query with variable in Apollo GraphQL,<graphql><apollo-server>,1,0,0,2018-08-21 23:32:07
51976571,2,,51958018,5,,"<p>Solved this using the parent argument and not passing any variables to the child query.</p>&#xA;&#xA;<pre><code>//typeDefs&#xA;type CartItem {&#xA;    id: ID&#xA;    product_id: ID&#xA;    quantity: Int&#xA;    product: Product&#xA;}&#xA;//resolver&#xA;getCartItems: async (parent, { id }, { ctx }) =&gt; {&#xA;    return processResponse(await ctx.get(`carts/${id}/items`))&#xA;        },&#xA;CartItem: {&#xA;    product: async (parent, args, { ctx }) =&gt; {&#xA;    const productId = parent.product_id;&#xA;    if (productId) {&#xA;      const { data } = processResponse(await ctx.get(`products/${productId}`));&#xA;      return data&#xA;    }&#xA;}&#xA;//query&#xA;query {&#xA;  getCartItems(id:""1234b11"") {&#xA;    id&#xA;    product_id&#xA;    quantity&#xA;    product {&#xA;      id&#xA;      name&#xA;      description&#xA;    }&#xA;  } &#xA;}&#xA;</code></pre>&#xA;",6780313,,,,2018-08-22 23:43:27,"",,0,0,0,2018-08-22 23:43:27
51985395,2,,51957008,4,,<p>Got it. <code>react-admin</code> expects an array of ids to match the resources. All I needed to do was to set the <code>&lt;ReferenceArrayInput /&gt;</code> <code>source</code> prop to <code>&lt;resource&gt;Ids</code>. That fixed the issue.</p>&#xA;,10256275,,10256275,2018-08-24 09:19:13,2018-08-24 09:19:13,"",,0,0,0,2018-08-23 12:02:41
52012359,2,,52009758,0,,"<p>You need to map over action, and not the keys of data.</p>&#xA;&#xA;<pre><code>{&#xA;  this.props.data.action.map((data, index) =&gt; (&#xA;    &lt;circle r={data.r} cx={data.x} cy={data.y} fill=""red"" key={index}/&gt;&#xA;  );&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is assuming those properties do exist inside of each action.</p>&#xA;&#xA;<p>If you are looking to use the map over action, try running this line in the top of your render</p>&#xA;&#xA;<pre><code>this.props.data.action.map(item =&gt; console.log(""this is an action: "", item));&#xA;</code></pre>&#xA;&#xA;<p>That will show you the information in each action, so that you can then manipulate it the way you are expecting to do so.</p>&#xA;",7729375,,7729375,2018-08-24 22:40:04,2018-08-24 22:40:04,"",,0,7,0,2018-08-24 22:17:05
52013427,2,,52009048,0,,<p>This was answered in github but basically the category field didn’t have a resolver!</p>&#xA;,6905830,,,,2018-08-25 01:52:20,"",,0,1,0,2018-08-25 01:52:20
52015223,2,,52014998,1,,"<p><strong>Incorrect JSON</strong></p>&#xA;<p>Your JSON file is not valid as your keys need to be enclosed in quotes. Use the <a href=""https://jsonlint.com/"" rel=""nofollow noreferrer"">JSON Validator</a> to ensure you have a correct JSON file.</p>&#xA;<hr />&#xA;<p><strong>Calling <code>.map()</code> on an <code>Object</code> causes a <code>TypeError</code></strong></p>&#xA;<p>When your data is loaded from the JSON file (and does not default to an empty array as set by your constructor), ensure that it's in the shape of an <code>Array</code>, because calling the <code>.map()</code> method on an <code>Object</code> instead of an <code>Array</code> causes a <code>TypeError</code>. This is because <code>.map()</code> is part of the <code>Array</code>'s prototype and <a href=""https://github.com/d3/d3-array#extent"" rel=""nofollow noreferrer""><code>d3.extent(array)</code></a> needs an <code>Array</code> as an argument.</p>&#xA;<blockquote>&#xA;<p>Read more about JavaScript's <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"" rel=""nofollow noreferrer""><code>Array</code></a></p>&#xA;<p>Read more about JavaScript's <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object"" rel=""nofollow noreferrer""><code>Object</code></a></p>&#xA;</blockquote>&#xA;<hr />&#xA;<p><strong>Correct Approach</strong></p>&#xA;<p>If your JSON is loaded in correctly into the <code>data</code> object, the following should work:</p>&#xA;<pre><code>d3.extent(data.action.action.map(action =&gt; action.timestamp))&#xA;</code></pre>&#xA;",5237070,,-1,2020-06-20 09:12:55,2018-08-25 08:03:24,"",,0,0,0,2018-08-25 07:59:50
52018573,1,52018588,,-1,166,"<p>I have tried everything I know about map functions and the syntax but I keep getting <code>TypeError: Cannot read property 'action' of undefined</code>.  I think the source of the problem is this line: <code>constructor(data=[])</code>. Firstly, I have never seen into inside the brackets of constructor other than props <code>constructor(props)</code>. So, not sure what is going on there.</p>&#xA;&#xA;<p>I am reading a book on React/D3 and the author renders a timeline of dots from a static array of key/value pairs. I am trying render the same graph but my data is coming from a DB. Can someone help me refactor my code below to account for a DB request to grab 'data' before rendering?</p>&#xA;&#xA;<p>Book COde:</p>&#xA;&#xA;<pre><code>constructor({data=[]}) {&#xA;        const times = d3.extent(data.map(d =&gt; d.year))&#xA;        const range = [50, 450]&#xA;        super({data})&#xA;        this.state = {data, times, range}&#xA;    }&#xA;&#xA;    componentDidMount() {&#xA;        let group&#xA;        const { data, times, range } = this.state&#xA;        const { target } = this.refs&#xA;        const scale = d3.time.scale().domain(times).range(range)&#xA;</code></pre>&#xA;&#xA;<p>My code:</p>&#xA;&#xA;<pre><code>    constructor(data=[]) {&#xA;&#xA;        const times = d3.extent(data.action.action.map(action =&gt; action.timestamp))&#xA;        const range = [50, 450]&#xA;        super({data})&#xA;        this.scale = d3.scaleTime().domain(times).range(range)&#xA;        this.state = {times, range}&#xA;        console.log('state' ,this.data);&#xA;    }&#xA;&#xA;render() {&#xA;    const { data } = this.state&#xA;    const { scale } = this&#xA;    return (&#xA;        &lt;div className=""timeline""&gt;&#xA;            &lt;h1&gt;{this.props.name} Timeline&lt;/h1&gt;&#xA;            &lt;Canvas&gt;&#xA;                {data.map((d, i) =&gt; &#xA;                    &lt;TimelineDot position={scale(d.year)} &#xA;                                 txt={`${d.year} - ${d.event}`}&#xA;                    /&gt;&#xA;                )}&#xA;            &lt;/Canvas&gt;&#xA;        &lt;/div&gt;&#xA;    )&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My data:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Mwov0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Mwov0.png"" alt=""enter image description here""></a></p>&#xA;",8326987,,,,2018-08-29 09:42:29,React/Javascript: Map function,<javascript><reactjs><graphql-js><map-function>,2,0,0,2018-08-25 15:11:50
52018588,2,,52018573,2,,<p>It would be <strong>data.action.map</strong> instead of <strong>data.action.action.map</strong></p>&#xA;,3994271,,,,2018-08-25 15:15:38,"",,0,2,0,2018-08-25 15:15:38
52020919,1,,,-1,180,"<p>I am having a problem with React when I try to render a graph with my data.  The page is blank but the console give me this error message:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Warning: React.createElement: type is invalid -- expected a string&#xA;  (for built-in components) or a class/function (for composite&#xA;  components) but got: object.</p>&#xA;</blockquote>&#xA;&#xA;<p>I am sending a query to a Neo4j DB with the help of Apollo and graphql and would like to display some of the results. The error above is coming from my Graph component (UserList.js)</p>&#xA;&#xA;<p><strong>UserList.js</strong></p>&#xA;&#xA;<pre><code>class Graph extends React.Component {&#xA;&#xA;    constructor({data}) {&#xA;        //console.log('construc data' ,data);&#xA;        const times = d3.extent(data.action.map(action =&gt; action.timestamp))&#xA;        console.log('construc data' ,times);&#xA;        const range = [50, 450]&#xA;        super({data})&#xA;        this.scale = d3.time.scale().domain(times).range(range)&#xA;        this.state = {data, times, range}&#xA;        //console.log('state' ,this.data);&#xA;    }&#xA;&#xA;    componentDidMount() {&#xA;        let group&#xA;        const { target } = this.refs&#xA;&#xA;        const Canvas = ({children}) =&gt; &#xA;    &lt;svg height=""200"" width=""500""&gt;&#xA;        {children}&#xA;    &lt;/svg&gt;&#xA;&#xA;&#xA;&#xA;        group.append('circle')&#xA;    .attr('cy', 160)&#xA;    .attr('r', 5)&#xA;    .style('fill', 'blue')&#xA;&#xA;group.append('text')&#xA;    .text(d =&gt; d.year + "" - "" + d.event)&#xA;    .style('font-size', 10)&#xA;    .attr('y', 115)&#xA;    .attr('x', -95)&#xA;    .attr('transform', 'rotate(-45)')&#xA;&#xA;&#xA;    const TimelineDot = ({position, txt}) =&gt;&#xA;    &lt;g transform={`translate(${position},0)`}&gt;&#xA;&#xA;        &lt;circle cy={160} &#xA;                r={5} &#xA;                style={{fill: 'blue'}} /&gt;&#xA;&#xA;        &lt;text y={115} &#xA;              x={-95} &#xA;              transform=""rotate(-45)"" &#xA;              style={{fontSize: '10px'}}&gt;{txt}&lt;/text&gt;&#xA;&#xA;    &lt;/g&gt;&#xA;    }&#xA;&#xA;    render() {&#xA;        const { data } = this.state&#xA;        const { scale } = this&#xA;        return (&#xA;            &lt;div className=""timeline""&gt;&#xA;                &lt;h1&gt;{this.props.name} Timeline&lt;/h1&gt;&#xA;                &lt;Canvas&gt;&#xA;                    {data.action.map((action, i) =&gt; &#xA;                        &lt;TimelineDot position={scale(action.timestamp)} &#xA;                                     txt={`${action.timestamp} - ${action.action}`}&#xA;                        /&gt;&#xA;                    )}&#xA;                &lt;/Canvas&gt;&#xA;            &lt;/div&gt;&#xA;        )&#xA;    }&#xA;&#xA;&#xA;}&#xA;&#xA;export default graphql(getObjectsQuery, &#xA;    { options: (ownProps) =&gt; { &#xA;      console.log(ownProps.startTime); &#xA;      return ({ second: { startTime: ownProps.startTime,&#xA;                              endTime: ownProps.endTime&#xA;       } }) &#xA;    } } )(Graph);&#xA;</code></pre>&#xA;",8326987,,7053679,2018-08-26 07:14:29,2018-08-29 09:56:02,ReactJS/Javascript: React.createElement expecting string but passed object,<javascript><neo4j><create-react-app><react-apollo><graphql-js>,2,10,0,2018-08-25 20:15:51
52059162,1,,,0,333,"<p>I'm trying to debug an issue that's occurring on our site with using Apollo Client/ GraphQl in Firefox. While the issue occurs in Firefox on my machine I believe it is also occurring for other users in different browsers like Safari. </p>&#xA;&#xA;<p>Specifically what i'm trying to understand is if one of my headers <code>content-length</code> on a <code>POST</code> request could be causing the issue. </p>&#xA;&#xA;<p>My request seems to work fine when I'm in private browsing mode however in normal browsing i'm getting a null response. </p>&#xA;&#xA;<p>When I compare the two requests side by side, the only issue I can see is a vast difference in the <code>content-length</code> value. </p>&#xA;&#xA;<p>The JSON body i'm sending across the 2 different requests is the exact same and looks something like this:</p>&#xA;&#xA;<pre><code>operationName: ""Checkout""&#xA;query: ""query Checkout($id: ID!) { node(id: $id) { ... on Checkout { id totalPrice webUrl customAttributes { key value __typename } lineItems(first: 100) { edges { node { id quantity title customAttributes { key value __typename } variant { id __typename } __typename } __typename } pageInfo { hasNextPage hasPreviousPage __typename } __typename } __typename } __typename } }""&#xA;variables:{&#xA;    id:""faw8fa8wfha9w8fh9898h8ahw8hdawf""&#xA;    service:""shopify""&#xA;    shopifyStoreUrl:""my-store-url.myshopify.com""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I have Firefox running normally (where it doesn't work) the <code>content-length</code> value is 21. When I run it in private browsing mode (where is does work) the value is 950.</p>&#xA;&#xA;<p>Is it safe to assume here that the request is not sending the entire body when Firefox is running normally and hence the culprit?</p>&#xA;",3955685,,,,2018-08-28 13:29:49,Issue with Apollo Client POST request - Possibly related to content length header,<javascript><http><graphql>,0,2,0,2018-08-28 13:29:49
52074321,2,,52018573,1,,"<p>You removed initial empty <code>data</code> property definition in constructor</p>&#xA;&#xA;<pre><code>this.state = {data, times, range} // book&#xA;this.state = {times, range}       // your code&#xA;</code></pre>&#xA;&#xA;<p>Empty <code>data</code> can be mapped w/o error. By removing it's undefined - how it could work?</p>&#xA;&#xA;<p><code>constructor({data=[]})</code> is just default props initialized with empty data array passed later to base class (by super({data}) where is probably set in state? W/o that <code>const { data } = this.state</code> should be undefined, unable to be used in map. In book code <code>data</code> is directly defined in state - is your code up to date?</p>&#xA;",6124657,,,,2018-08-29 09:42:29,"",,0,0,0,2018-08-29 09:42:29
52088172,1,,,11,6640,"<p>Let's say I have a page builder field that references many different types of content blocks.</p>&#xA;&#xA;<ul>&#xA;<li>Video</li>&#xA;<li>Quote</li>&#xA;<li>Advertisement</li>&#xA;</ul>&#xA;&#xA;<p>etc...</p>&#xA;&#xA;<p>From what I've read, having multiple types in an array is discouraged.</p>&#xA;&#xA;<p>But what else are you supposed to do in a case like this?</p>&#xA;&#xA;<p>Is there a way to handle this in GraphQL?</p>&#xA;&#xA;<p>Is there a better way to structure the data?</p>&#xA;",8333068,,,,2018-08-30 16:53:39,How do you handle an array of multiple types (ex: different content blocks) in GraphQL?,<graphql><contentful>,2,0,0,2018-08-30 01:49:05
52094690,2,,52088172,1,,"<p>i believe, that you can implement a list of interfaces or list of unions (based on the nature of data and if there are recurring fileds). And in that interface/union you will implement all these types (Video, Quote, Advertisement). However it will work for data fetching, but interfaces or unions are not avaialable as input types. If you would like to implement it as input type, you would need to use for example JSON custom scalar <a href=""https://github.com/taion/graphql-type-json"" rel=""nofollow noreferrer"">https://github.com/taion/graphql-type-json</a> for it. </p>&#xA;&#xA;<p>Edit: I do not thing that having multiple types in the list within interface is bad practice. You can take a look on nodes query or search on Github api <a href=""https://developer.github.com/v4/query/"" rel=""nofollow noreferrer"">https://developer.github.com/v4/query/</a></p>&#xA;",9518998,,9518998,2018-08-30 10:29:05,2018-08-30 10:29:05,"",,0,0,0,2018-08-30 10:23:25
52101534,1,52104282,,2,1153,"<p>I'm using <a href=""https://github.com/apollographql/graphql-tag"" rel=""nofollow noreferrer"">graphql-tag</a>. My files are like that.</p>&#xA;&#xA;<p>./operation.graphql</p>&#xA;&#xA;<pre><code>Query User {&#xA;   ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>./test.ts</p>&#xA;&#xA;<pre><code>import { User } from './operation.graphql'; /// Module ''*.graphql'' has no exported member 'User'.&#xA;</code></pre>&#xA;&#xA;<p>./index.d.ts</p>&#xA;&#xA;<pre><code>declare module '*.graphql' {&#xA;    import { DocumentNode } from 'graphql';&#xA;&#xA;    const value:DocumentNode;&#xA;&#xA;    export default value;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>A application is work well, but I want to prevent that error.</p>&#xA;&#xA;<p>When I do default import is work well, but as you see, I got an error at named imports.</p>&#xA;&#xA;<p>How to declare this? Thanks. :)</p>&#xA;",4761970,,,,2018-08-30 19:40:25,How to declare a module to do named imports?,<typescript><module><graphql><graphql-tag>,1,0,0,2018-08-30 16:19:05
52104282,2,,52101534,5,,"<p>If the name of the export you want is different for each GraphQL file, TypeScript won't parse your GraphQL file to figure it out automatically.  Either you need a separate module declaration for each GraphQL file (and you'll need to set your <code>baseUrl</code> and <code>paths</code> so you can use non-relative imports, or it might work to put a <code>d.ts</code> file alongside each GraphQL file instead of using <code>declare module</code>, I'm not sure):</p>&#xA;&#xA;<pre><code>declare module 'operation.graphql' {&#xA;    import { DocumentNode } from 'graphql';&#xA;&#xA;    export const User: DocumentNode;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Or you can give up and let all the GraphQL files be of type <code>any</code>:</p>&#xA;&#xA;<pre><code>declare module '*.graphql';&#xA;</code></pre>&#xA;",4468617,,,,2018-08-30 19:40:25,"",,0,1,0,2018-08-30 19:40:25
52124132,2,,49724540,0,,"<p>So, in the end I figured out I am in general just submitting the wrong information to Github in order to pull Repo info from a curated list.</p>&#xA;&#xA;<p>My objective above is still not possible exactly the way I wanted to solve the problem, however the method mentioned above is very similar to a usable method that DOES work. Simply put, supply Github with an array of unique node ID's, rather than Repo Name and Repo Owner, as I had been trying to do.</p>&#xA;&#xA;<p>This way, you are not trying to use a 2D array, and instead you are using a single array, with an equal amount of specificity as the 2D array.</p>&#xA;&#xA;<p>So formulating an array such as:</p>&#xA;&#xA;<pre><code>const repos = [&#xA;  'uniqueID1',&#xA;  'uniqueID2',&#xA;  'uniqueID3',&#xA;  ...&#xA;];&#xA;</code></pre>&#xA;&#xA;<p>...can then be passed through Relay (I had the QueryRenderer set to run on my App component) like so:</p>&#xA;&#xA;<pre><code>query AppQuery($repos:[ID!]!) {&#xA;   projects: nodes(ids:$repos){&#xA;     ...projects_projects&#xA;   }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>You can obtain the node ID's in multiple ways, but the way I did this was by pulling the repo info one by one in GraphiQL with a query such as this:</p>&#xA;&#xA;<pre><code>query { &#xA;  repository(owner:""JimmayVV"", name:""JimmyVanVeen.com"") {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I then consolidated all of these ID's into an array, and passed that through to Relay and got the desired results.</p>&#xA;&#xA;<p>I'm sure there are other ways, perhaps using a simple Node script to formulate the array for you, but this was simple enough for me, that I am happy with it.</p>&#xA;",7898481,,,,2018-09-01 01:21:32,"",,0,0,0,2018-09-01 01:21:32
52135571,2,,52133011,0,,"<p>i just published the <a href=""https://graphqlmastery.com/blog/graphql-list-how-to-use-arrays-in-graphql-schema"" rel=""nofollow noreferrer"">article</a> on that, so that you can take a look if you would like to know more detail. This is the repository with the examples, where the createUsers mutation is implemented <a href=""https://github.com/atherosai/express-graphql-demo/blob/feature/5-modifiers/server/graphql/users/userMutations.js"" rel=""nofollow noreferrer"">https://github.com/atherosai/express-graphql-demo/blob/feature/5-modifiers/server/graphql/users/userMutations.js</a>. You can take a look how it is implemented, but in general the above answer is correct. You can input as many objects as you would like to in the array (if you have not implemented some number of items limiting, but it is not there by default).</p>&#xA;",9518998,,,,2018-09-02 09:19:38,"",,0,0,0,2018-09-02 09:19:38
52144940,1,52145539,,1,354,"<p>I want to decrease number of requests to <strong>graphql server.</strong>&#xA;I have objects in an array like  </p>&#xA;&#xA;<pre><code> [{name: ""gokhan"", age: 20}, ...];&#xA;</code></pre>&#xA;&#xA;<p>I use graphql a mutation to add every item of an array. </p>&#xA;&#xA;<p>If The array has 50 items, I need to send <strong>50 requests</strong> to add all data. Is there any way to <strong>decrease</strong> the number of requests? </p>&#xA;",7696471,,7589751,2018-09-03 07:41:19,2018-09-03 08:02:56,How to decrease request numbers with GraphQL mutations?,<javascript><request><graphql><relay><relaymodern>,1,1,0,2018-09-03 07:23:46
52151530,1,52211615,,0,114,"<p>I am executing a simple query that returns correctly using the AppSync console, but when I execute the same query from within my application the data is returned incorrectly. Specifically, there is an array of a child type in the object being returned and while the number of instances in the array is correct, each instance is a copy of the first instance. </p>&#xA;&#xA;<p>I have disabled local caching on the client and removed the first instance from the array in the database and when I run the query in the console it works fine, but the problem persists in the application (though with the new first instance now being copied).</p>&#xA;&#xA;<p>Console output:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getTemplates"": [&#xA;      {&#xA;        ""name"": ""test template"",&#xA;        ""data"": [&#xA;          {&#xA;            ""name"": ""Assigned User"",&#xA;            ""format"": ""String""&#xA;          },&#xA;          {&#xA;            ""name"": ""Office"",&#xA;            ""format"": ""String""&#xA;          },&#xA;          {&#xA;            ""name"": ""Department"",&#xA;            ""format"": ""String""&#xA;          }&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Browser log output from the application:</p>&#xA;&#xA;<pre><code>0&#xA;:&#xA;{id: null, name: ""Assigned User"", format: ""String"", __typename: ""Field"", Symbol(id): ""Field:null""}&#xA;1&#xA;:&#xA;{id: null, name: ""Assigned User"", format: ""String"", __typename: ""Field"", Symbol(id): ""Field:null""}&#xA;2&#xA;:&#xA;{id: null, name: ""Assigned User"", format: ""String"", __typename: ""Field"", Symbol(id): ""Field:null""}&#xA;</code></pre>&#xA;&#xA;<p>Query and logging code:</p>&#xA;&#xA;<pre><code>&lt;Query query={getTemplatesQuery}&gt;&#xA;    {({ loading, error, data }) =&gt; {&#xA;        if (loading) return null;&#xA;        if (error) return `Error: ${error}`;&#xA;&#xA;        console.log(data);&#xA;        console.log(data.getTemplates);&#xA;        return (&#xA;            &lt;DataTable data={data.getTemplates} /&gt;&#xA;        );&#xA;    }}&#xA;&lt;/Query&gt;&#xA;</code></pre>&#xA;&#xA;<p>Query, copy pasted from application to console for testing:</p>&#xA;&#xA;<pre><code>{&#xA;    getTemplates {&#xA;        id&#xA;        name&#xA;        author&#xA;        data {&#xA;            id&#xA;            name&#xA;            format&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Can anyone tell me what is going on that could be causing this? Is there an easy way to test this from another client?</p>&#xA;",2952461,,,,2018-09-06 20:20:08,Apollo client / AWS AppSync JavaScript SDK altering query result,<graphql><apollo><aws-appsync>,1,0,0,2018-09-03 14:15:13
52153252,2,,52152094,1,,"<p>not sure what 0: 1: 2: etc. are, but i assume, that it is index in the array. If you would like to implement arrays of integers or ids you should use GraphQL modifiers. It is called GraphQL List and you can do in your schema something like this in graphql-js. </p>&#xA;&#xA;<pre><code>genreIds: {&#xA;  type: new GraphQLList(GraphQLID),&#xA;  resolve: () =&gt; { &#xA;   // your external api call&#xA;   return [ 16, 21, 46] &#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If you would like to know more detail. I have recently published <a href=""https://graphqlmastery.com/blog/graphql-list-how-to-use-arrays-in-graphql-schema"" rel=""nofollow noreferrer"">article</a> on implementing arrays in GraphQL schema. Here is the <a href=""https://github.com/atherosai/express-graphql-demo/blob/feature/5-modifiers/server/graphql/users/userQueries.js"" rel=""nofollow noreferrer"">full code</a> on how you can implement fetching array of users. Btw. not sure what you would like to do with these ids, but it is better schema architecture to replace it with GraphQL object type and fetche the genres list based on these ids. I hope that it helps.</p>&#xA;&#xA;<p>David</p>&#xA;",9518998,,,,2018-09-03 16:10:55,"",,0,2,0,2018-09-03 16:10:55
52192477,1,,,1,486,"<p>Is it possible to get an article(single entity) using the Url Alias (entityUrl.path)?  </p>&#xA;&#xA;<p>I am using <a href=""https://github.com/drupal-graphql/graphql"" rel=""nofollow noreferrer"">https://github.com/drupal-graphql/graphql</a></p>&#xA;&#xA;<p>I can do a bulk query for all the articles, do I then filter those results?</p>&#xA;&#xA;<p>Thanks</p>&#xA;&#xA;&#xA;&#xA;<pre><code>query GetArticles {&#xA;  nodeQuery(filter: {conditions: [{field: ""type"", value: ""article""}]}) {&#xA;    Articles: entities {&#xA;      entityId&#xA;      entityLabel&#xA;      entityUrl {&#xA;        path&#xA;        routed&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;&#xA;",10010257,,,,2019-03-19 12:53:05,Drupal GraphQL - Query Single Entity from URL,<graphql><drupal-8>,1,0,0,2018-09-05 19:49:39
52225936,2,,52224048,0,,<p>Turns out the API isn't in production yet. </p>&#xA;,2262777,,,,2018-09-07 15:51:03,"",,0,0,0,2018-09-07 15:51:03
52233630,2,,52233503,0,,"<p>I have managed to get it work with this folder organization</p>&#xA;&#xA;<p>For those looking for answers, u can check out my repo below</p>&#xA;&#xA;<p><a href=""https://github.com/myhendry/t-server/tree/master/src/graphql"" rel=""nofollow noreferrer"">myhendry gql github repo</a></p>&#xA;",7285771,,,,2018-09-08 08:53:57,"",,0,0,0,2018-09-08 08:53:57
52244912,1,52338015,,0,825,"<p>I am using angular 6 here with angular material and I'm trying to build a search component that uses graphQL with Apollo.</p>&#xA;&#xA;<p>well, the component works, but I would like to address these issues:</p>&#xA;&#xA;<ol>&#xA;<li>I want to add debounceTime and I can't find exactly where to add it.</li>&#xA;<li>I want that empty values won't be searched in the graphQL query</li>&#xA;<li>I don't use async filter for mat-autocomplete since I put the results inside an array. is that the correct way to go?</li>&#xA;</ol>&#xA;&#xA;<p>My product service that interacts with the graphQL server:</p>&#xA;&#xA;<pre><code>import { Injectable } from '@angular/core';&#xA;import {Apollo} from 'apollo-angular';&#xA;import gql from 'graphql-tag';&#xA;&#xA;@Injectable({&#xA;  providedIn: 'root'&#xA;})&#xA;export class ProductService {&#xA;&#xA;  constructor(private apollo: Apollo) { }&#xA;&#xA;  searchForProduct(productName: string) {&#xA;    return this.apollo.watchQuery&lt;any&gt;({&#xA;    query: gql`{products_by_p_name_search(lang_id:1,query:""${productName}"")&#xA;    {category_id,price,category_name,id,name,desc,quantity,year_manufacture,image_file}}`&#xA;    });&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>my search component html with the <code>mat-autocomplete</code> component:</p>&#xA;&#xA;<pre><code>&lt;form class=""example-form""&gt;&#xA;  &lt;mat-form-field class=""example-full-width""&gt;&#xA;    &lt;input matInput placeholder=""חפש מוצר"" aria-label=""חפש מוצר"" [matAutocomplete]=""auto"" [formControl]=""productCtrl""&gt;&#xA;    &lt;mat-autocomplete #auto=""matAutocomplete""&gt;&#xA;      &lt;mat-option *ngFor=""let product of products"" [value]=""product.name""&gt;&#xA;        &lt;img class=""example-option-img"" aria-hidden src=""../../assets/products/{{product.id}}/{{product.imgFile}}_t.jpg"" height=""25""&gt;&#xA;        &lt;span&gt;{{product.name}}&lt;/span&gt; |&#xA;        &lt;small&gt;Population: {{product.population}}&lt;/small&gt;&#xA;      &lt;/mat-option&gt;&#xA;    &lt;/mat-autocomplete&gt;&#xA;  &lt;/mat-form-field&gt;&#xA;&lt;/form&gt;&#xA;</code></pre>&#xA;&#xA;<p>And finally my search component (Typescript file):</p>&#xA;&#xA;<pre><code>import { Component, OnInit } from '@angular/core';&#xA;import {FormControl} from '@angular/forms';&#xA;import {Product} from '../product';&#xA;import {ProductService} from '../product.service';&#xA;&#xA;@Component({&#xA;  selector: 'app-search-product',&#xA;  templateUrl: './search-product.component.html',&#xA;  styleUrls: ['./search-product.component.scss']&#xA;})&#xA;export class SearchProductComponent implements OnInit {&#xA;  productCtrl = new FormControl();&#xA;  products: Product[] = [];&#xA;&#xA;  constructor(private productService: ProductService) {&#xA;&#xA;  }&#xA;&#xA;&#xA;  ngOnInit() {&#xA;    this.productCtrl.valueChanges&#xA;      .subscribe(v =&gt; {&#xA;        this.productService.searchForProduct(v.toString()).valueChanges.subscribe(&#xA;          ({data}) =&gt; {&#xA;            const productsResult: Product[] = [];&#xA;            data.products_by_p_name_search.forEach((productObj) =&gt; {&#xA;                const product = new Product();&#xA;                product.id = productObj.id;&#xA;                product.categoryName = productObj.category_name;&#xA;                product.name = productObj.name;&#xA;                product.desc = productObj.desc;&#xA;                product.quantity = productObj.quantity;&#xA;                product.yearManufacture = productObj.year_manufacture;&#xA;                product.imgFile = productObj.image_file;&#xA;                product.categoryId = productObj.category_id;&#xA;                product.price = productObj.price;&#xA;                productsResult.push(product);&#xA;              });&#xA;            this.products = productsResult;&#xA;          });&#xA;      });&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As far as i see, these lines of code can work, but it might not be the most optimized way to write it. so any information regarding the issues above would be greatly appreciated.</p>&#xA;",80932,,1150725,2018-09-10 05:14:56,2018-09-14 19:14:08,How to properly use mat-autocomplete with remote graphQL data?,<angular><graphql><ngrx><apollo><mat-autocomplete>,1,0,0,2018-09-09 13:17:37
52262418,1,52264765,,1,4026,"<p>I use angular 6 to write my website with Apollo for interaction with graphpl server. I'd like to be able to escape parameters that I get from the client before adding them to my <code>gql</code> query.</p>&#xA;&#xA;<p>this is  my service file:</p>&#xA;&#xA;<pre><code>import { Injectable } from '@angular/core';&#xA;import {Apollo} from 'apollo-angular';&#xA;import gql from 'graphql-tag';&#xA;&#xA;@Injectable({&#xA;  providedIn: 'root'&#xA;})&#xA;export class ProductService {&#xA;&#xA;  constructor(private apollo: Apollo) { }&#xA;&#xA;  searchForProduct(productName: string) {&#xA;    return this.apollo.watchQuery&lt;any&gt;({&#xA;    query: gql`{products_by_p_name_search(lang_id:1,query:""${productName}"")&#xA;    {category_id,price,category_name,id,name,desc,quantity,year_manufacture,image_file}}`&#xA;    });&#xA;  }&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>as you see here the function <code>searchForProduct</code> is receiving a <code>productName</code> parameter that I add to my <code>gql</code> query. how do I escape it properly so the query won't be broken if it contains special chars ?</p>&#xA;&#xA;<p>thanks!</p>&#xA;",80932,,,,2019-12-10 23:44:55,how to escape variables for graphql query,<angular><escaping><graphql><apollo>,2,0,0,2018-09-10 17:02:00
52264765,2,,52262418,4,,"<p>In GraphQL your queries should be static, that means the query string should not change at runtime <em>(I wish there was more best practice sharing out there, sorry about that)</em>. To achieve that GraphQL comes with support for variables. Variables are defined inside of the query string and then send to the server in a different property.</p>&#xA;&#xA;<p>Example for your query:</p>&#xA;&#xA;<pre><code>query getProducts($productName: String!) {&#xA;  products_by_p_name_search(lang_id:1,query: $productName) {&#xA;    category_id&#xA;    price&#xA;    category_name&#xA;    id&#xA;    name&#xA;    desc&#xA;    quantity&#xA;    year_manufacture&#xA;    image_file&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then add the variables to your client call:</p>&#xA;&#xA;<pre><code>return this.apollo.watchQuery&lt;any&gt;({&#xA;  query, //...&#xA;  variables: { productName }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>This way there is no escaping for GraphQL (!) needed.</p>&#xA;",3849167,,,,2018-09-10 20:06:37,"",,0,0,0,2018-09-10 20:06:37
52303602,1,,,0,105,"<p>I am creating my <code>stateLink</code> without providing a schema like this:</p>&#xA;&#xA;<pre><code>const stateLink = withClientState({&#xA;  cache,&#xA;  resolvers,&#xA;  defaults&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>I have a mutation that take an Object as parameter:</p>&#xA;&#xA;<pre><code>MY_MUTATION = gql`mutation myMutation($product: Product) {...}`&#xA;</code></pre>&#xA;&#xA;<p>Since there is no <code>typeDefs</code> (no <code>Product</code> object type), and there is no type checking anyway, how can I specify that the <code>$product</code> argument is an object and not a scalar type ?</p>&#xA;",2814580,,,,2018-09-12 21:17:33,apollo-link-state: How to specify object type parameter on typeDefs less state link?,<javascript><graphql><apollo-client>,0,4,0,2018-09-12 21:17:33
52304353,2,,52301379,0,,<p>You have declared a variable <code>$vitals</code> but are not providing that key in <code>variables</code>.  You are setting variables with <code>variables: initValues.vitals</code> where <code>initValues.vitals</code> is the array of inputs that you want. You need to change it to <code>variables: initValues</code> so <code>vitals</code> remains a top level key that GraphQL can then find and replace the <code>$vitals</code> variable with.</p>&#xA;&#xA;<p>Let me know if this fixes your issue.</p>&#xA;,2088684,,,,2018-09-12 22:35:35,"",,0,0,0,2018-09-12 22:35:35
52366794,1,52366998,,0,1476,<p>I have this fragment:</p>&#xA;&#xA;<pre><code>// product-info.js&#xA;module.exports = gql`fragment productInfo on Product {&#xA;  id&#xA;  name&#xA;  model&#xA;  color&#xA;  quantity&#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>And I have this query:</p>&#xA;&#xA;<pre><code>// get-products.js&#xA;const productInfo = require('./fragments/product-info')&#xA;&#xA;module.exports = gql`query getProducts {&#xA;  quote @client {&#xA;    items { ...productInfo }&#xA;  }&#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>This is not working because <code>...productInfo</code> is a simple literal here. &#xA;Even string interpolation is not working <code>${...productInfo}</code>.</p>&#xA;,2814580,,,,2018-09-17 11:45:15,apollo-client: How to insert a fragment in a gql template?,<javascript><graphql><apollo-client>,1,2,0,2018-09-17 11:34:16
52366998,2,,52366794,0,,"<p>You should include the string after the query, I don't know if it will work with <code>gql</code> tag, depends on your bundler settings:</p>&#xA;&#xA;<pre><code>module.exports = gql`query getProducts {&#xA;  quote @client {&#xA;    items { ...productInfo }&#xA;  }&#xA;}&#xA;fragment productInfo on Product {&#xA;  id&#xA;  name&#xA;  model&#xA;  color&#xA;  quantity&#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>Other options is include with string formatter:</p>&#xA;&#xA;<pre><code>const productInfo = require('./fragments/product-info')&#xA;&#xA;module.exports = gql`query getProducts {&#xA;  quote @client {&#xA;    items { ...productInfo }&#xA;  }&#xA;}&#xA;${productInfo}`&#xA;</code></pre>&#xA;",6465854,,,,2018-09-17 11:45:15,"",,0,1,0,2018-09-17 11:45:15
52375556,2,,43868169,2,,"<p>According to <a href=""https://stackoverflow.com/questions/43045639/graphql-get-full-sub-object-or-null-if-doesnt-exist"">Graphql - get full sub-object, or null if doesn&#39;t exist</a>, you get the error you describe when you return empty object (i.e. {}) instead of null from your GraphQL function.</p>&#xA;&#xA;<p>I had similar problem: I kept getting the ""error: lack the require field"" error in GraphQL response until I made sure I was actually returning null, not empty object.</p>&#xA;",349080,,,,2018-09-17 20:54:36,"",,0,0,0,2018-09-17 20:54:36
52417246,1,52425781,,3,3891,"<p>I am using <code>Apollo-Server</code> and trying to create a REST query against the <a href=""https://iextrading.com/developer/docs/#company"" rel=""nofollow noreferrer"">IEX REST API</a> which returns back data that looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""symbol"": ""AAPL"",&#xA;  ""companyName"": ""Apple Inc."",&#xA;  ""exchange"": ""Nasdaq Global Select"",&#xA;  ""industry"": ""Computer Hardware"",&#xA;  ""website"": ""http://www.apple.com"",&#xA;  ""description"": ""Apple Inc is an American multinational technology company. It designs, manufactures, and markets mobile communication and media devices, personal computers, and portable digital music players."",&#xA;  ""CEO"": ""Timothy D. Cook"",&#xA;  ""issueType"": ""cs"",&#xA;  ""sector"": ""Technology"",&#xA;  ""tags"": [&#xA;      ""Technology"",&#xA;      ""Consumer Electronics"",&#xA;      ""Computer Hardware""&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am using <a href=""https://www.apollographql.com/docs/apollo-server/features/data-sources.html"" rel=""nofollow noreferrer"">datasources</a>. My <code>typeDefs</code> and <code>resolvers</code> look something like this:</p>&#xA;&#xA;<pre><code>const typeDefs = gql`&#xA;    type Query{&#xA;        stock(symbol:String): Stock&#xA;    }&#xA;&#xA;    type Stock {&#xA;        companyName: String&#xA;        exchange: String&#xA;        industry: String&#xA;        tags: String!&#xA;    }&#xA;`;&#xA;const resolvers = {&#xA;    Query:{&#xA;        stock: async(root, {symbol}, {dataSources}) =&gt;{&#xA;            return dataSources.myApi.getSomeData(symbol)&#xA;        }&#xA;    }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>The Datasource file looks like this:</p>&#xA;&#xA;<pre><code>class MyApiextends RESTDataSource{&#xA;    constructor(){&#xA;        super();&#xA;        this.baseURL = 'https://api.iextrading.com/1.0';&#xA;    }&#xA;&#xA;    async getSomeData(symbol){&#xA;        return this.get(`/stock/${symbol}/company`)&#xA;    }&#xA;}&#xA;&#xA;module.exports = MyApi&#xA;</code></pre>&#xA;&#xA;<p>I can run a query and get data back, but it is not formatting in an array and is throwing an error when I run a query like so:</p>&#xA;&#xA;<pre><code>query{&#xA;  stock(symbol:""aapl""){&#xA;    tags&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Error:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""stock"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""String cannot represent value: [\""Technology\"", \""Consumer Electronics\"", \""Computer Hardware\""]"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 3,&#xA;          ""column"": 5&#xA;        }&#xA;      ],&#xA;      ""path"": [&#xA;        ""stock"",&#xA;        ""tags""&#xA;      ],&#xA;      ""extensions"": {&#xA;        ""code"": ""INTERNAL_SERVER_ERROR"",&#xA;        ""exception"": {&#xA;          ""stacktrace"": [&#xA;            ""TypeError: String cannot represent value: [\""Technology\"", \""Consumer Electronics\"", \""Computer Hardware\""]"",&#xA;</code></pre>&#xA;&#xA;<p>The data I am expecting (technology, consumer electronics, and computer hardware) are correct, but not returning in an array. I tried to make a new <code>type</code> for tags, and set the it with a tag property, but the value just returns <code>null</code>.</p>&#xA;&#xA;<p>I am very new to graphql, so any feedback is appreciated!</p>&#xA;",10373280,,10373280,2018-09-20 12:19:54,2018-09-20 13:01:21,Graphql Cant Return Array,<javascript><graphql><apollo><graphql-js><apollo-server>,1,2,0,2018-09-20 03:40:55
52436460,2,,52433490,2,,"<p>My Python's rusty, but I believe you want to use <code>json</code> instead of <code>data</code>. You're also not passing in the <code>inventory</code> variable you defined. Try something like:</p>&#xA;&#xA;<pre><code>json = {&#xA;  ""query"": '''   &#xA;    mutation save_inventory($inventory: [inventoryInput]!) {&#xA;      inventory {&#xA;        save(inventory: $inventory, dry_run: true) {&#xA;        handle&#xA;      }&#xA;    }&#xA;  }&#xA;  ''',&#xA;  ""variables"": {&#xA;    ""inventory"": inventory&#xA;  }&#xA;}&#xA;&#xA;response = requests.post(api_url, json=json, headers=headers)&#xA;</code></pre>&#xA;",6024220,,,,2018-09-21 04:07:32,"",,0,0,0,2018-09-21 04:07:32
52448889,1,,,0,1088,"<p>I am looking to combine the results from two queries into one for my GraphQL schema. I have a <code>stock</code> and <code>price</code> type, each of which resolves individually but I don't know how to combine the results.&#xA;Here is my <code>typedefs</code> and resolvers`:</p>&#xA;&#xA;<pre><code>const typeDefs = gql`&#xA;    type Query{&#xA;        stock(symbol: String!): Stock&#xA;        price(symbol: String!): Price&#xA;    }&#xA;&#xA;    type Stock {&#xA;        companyName: String&#xA;        exchange: String&#xA;        industry: String&#xA;        sector: String&#xA;        tags: [String]&#xA;        cost: Price&#xA;    }&#xA;&#xA;    type Price {&#xA;        cost: String&#xA;    }&#xA;&#xA;`;&#xA;&#xA;const resolvers = {&#xA;    Query:{&#xA;        stock: async(root, {symbol}, {dataSources}) =&gt;{&#xA;            return dataSources.myapi.getSomeData(symbol)&#xA;        },&#xA;        // dont have a name for your property? ADD ONE!&#xA;        price: async(root, {symbol}, {dataSources})=&gt;{&#xA;            return {'cost': dataSources.myapi.getAPrice(symbol)}&#xA;        }&#xA;    }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>If I run a query like so, I get <code>null</code> for stock price:</p>&#xA;&#xA;<pre><code>query{&#xA;  stock(symbol:""aapl""){&#xA;    tags&#xA;    cost{&#xA;      cost&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The result is like so:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""stock"": {&#xA;      ""tags"": [&#xA;        ""Technology"",&#xA;        ""Consumer Electronics"",&#xA;        ""Computer Hardware""&#xA;      ],&#xA;      ""cost"": null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, if I run a query for price, I get the expected outcome for the price:</p>&#xA;&#xA;<pre><code>query{&#xA;  price(symbol:""aapl""){&#xA;      cost&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am using <a href=""https://www.apollographql.com/docs/apollo-server/features/data-sources.html"" rel=""nofollow noreferrer"">datasources</a> and the file looks like so:</p>&#xA;&#xA;<pre><code>class MyApi extends RESTDataSource{&#xA;    constructor(){&#xA;        super();&#xA;        this.baseURL = 'https://api.iextrading.com/1.0';&#xA;    }&#xA;&#xA;    async getAPrice(symbol){&#xA;        return this.get(`/stock/${symbol}/price`);&#xA;    }&#xA;&#xA;    async getSomeData(symbol){&#xA;        return this.get(`/stock/${symbol}/company`)&#xA;    }&#xA;}&#xA;&#xA;module.exports = MyApi;&#xA;</code></pre>&#xA;&#xA;<p>I wanted to know why this is happening. Is there something that I am not doing well, or lack of understanding in a certain way GraphQL handles resolvers? </p>&#xA;&#xA;<p>Would it be recommended to return both queries in the resolver through a promise? I am not sure where to go from here.</p>&#xA;",10373280,,10373280,2018-09-22 04:00:45,2018-09-22 13:29:27,Return one result from two GraphQL Resolvers,<javascript><graphql><apollo><graphql-js><apollo-server>,2,0,0,2018-09-21 17:56:17
52451446,2,,52448889,0,,"<p>I believe what you have will work with the following adjustment to your resolvers:</p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;    Query: {&#xA;        stock: async(root, {symbol}, {dataSources}) =&gt; {&#xA;            const stock = await dataSources.myapi.getSomeData(symbol)&#xA;            return {...stock, symbol: symbol}&#xA;        },&#xA;        // dont have a name for your property? ADD ONE!&#xA;        price: async(root, {symbol}, {dataSources}) =&gt; {&#xA;            const cost = await dataSources.myapi.getAPrice(symbol)&#xA;            return {cost: cost}&#xA;        }&#xA;    },&#xA;    Stock: {&#xA;      cost: async (stockWithSymbol, args, {dataSources}) =&gt; {&#xA;        const cost = await dataSources.myapi.getAPrice(stockWithSymbol.symbol)&#xA;        return {cost: cost}&#xA;      }&#xA;    }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>The bottom <code>Stock</code> block tells GraphQL how to resolve the <code>cost</code> field on the <code>Stock</code> type. Notice that in the root stock query resolver, I'm also spreading the response with the symbol so that it is available in the first argument of the cost field resolver. You may have a better way of loading price given the stock information, but just going off the schema shown.</p>&#xA;",3071332,,3071332,2018-09-22 13:29:27,2018-09-22 13:29:27,"",,0,2,0,2018-09-21 21:52:23
52453368,2,,52448889,0,,"<p>I looked into this further and what you referred to as the ""bottom stock block"" is called a <code>nested resolver</code> in GraphQL terms. Here is what I came up with for my additional resolver:</p>&#xA;&#xA;<pre><code>Stock:{&#xA;    price: async(company, args, {dataSources})=&gt;{&#xA;        return {'cost': dataSources.myapi.getAPrice(company.symbol)}&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Does this seem to be the same thing?</p>&#xA;",10373280,,,,2018-09-22 04:00:28,"",,0,0,0,2018-09-22 04:00:28
52474605,1,,,10,3434,"<p>Is there a way (or a shortcut) to populate all fields of a Query?</p>&#xA;&#xA;<p>Let's take <a href=""https://graphql.org/swapi-graphql/"" rel=""noreferrer"">https://graphql.org/swapi-graphql/</a> as an example.</p>&#xA;&#xA;<p>I know that by <code>ctrl + space</code> I can invoke the autosuggest. &#xA;<a href=""https://i.stack.imgur.com/vniFy.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/vniFy.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>But what if I wanted to populate all of the fields (name, height etc..) without having to manually type them out?</p>&#xA;",5428205,,,,2022-09-26 21:36:42,GraphiQL: How to populate all fields,<graphql><graphiql>,3,1,0,2018-09-24 07:35:22
52491771,1,,,0,196,"<p>Trying to do a post on a graph query in rest assured and couldn't get the query right.</p>&#xA;&#xA;<p>Request:</p>&#xA;&#xA;<pre><code>""{query\"":inventoryPositions(productRef:\""SKU_3\""){edges{node{onHand quantities{edges{node{ref quantity type}}}}}}}"")&#xA;</code></pre>&#xA;&#xA;<p>Response:</p>&#xA;&#xA;<pre><code>{&#xA;    ""errors"": [&#xA;        {&#xA;            ""code"": ""400"",&#xA;            ""message"": ""Could not read document: Unexpected character ('q' (code 113)): was expecting double-quote to start field name\n &#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have also tried this but not working:</p>&#xA;&#xA;<pre><code>{""query"":""{inventoryPositions(productRef:\""SKU_3\""){edges{node{onHand quantities{edges{node{ref quantity type}}}}}}}""}&#xA;</code></pre>&#xA;&#xA;<p>Please help.</p>&#xA;",6233109,,2753863,2018-09-25 07:46:52,2019-03-26 07:15:15,Parcing jSON Request data in graphql,<graphql><rest-assured>,1,2,0,2018-09-25 06:21:07
52527934,1,52529303,,3,1035,"<p>Let's assume my app is an e-commerce. There are <code>Users</code>, <code>Orders</code> and <code>Products</code>.</p>&#xA;&#xA;<p>You need to be authenticated (with JWT Token) to have access to your <code>user</code> data, and your <code>orders</code>. This check is done in resolvers.</p>&#xA;&#xA;<p>However, <code>Products</code> are public. You can see products without being logged in.</p>&#xA;&#xA;<p>Of course, a <code>User</code> has <code>Orders</code>, and an <code>Order</code> has <code>Products</code></p>&#xA;&#xA;<p>What if someone in the frontend is doing this query:</p>&#xA;&#xA;<pre><code>query IAmEvil {&#xA;  products {&#xA;    orders {&#xA;      users {&#xA;         id&#xA;         name&#xA;         email&#xA;       }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This guy, not authenticated will have access to <code>users</code> data. How Can I prevent that?</p>&#xA;&#xA;<p>Do I have to add rules in all my resolvers for all nested queries?</p>&#xA;&#xA;<p>related Documentation:</p>&#xA;&#xA;<p><a href=""https://www.apollographql.com/docs/guides/security.html"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/guides/security.html</a>&#xA;<a href=""https://www.howtographql.com/advanced/4-security/"" rel=""nofollow noreferrer"">https://www.howtographql.com/advanced/4-security/</a>&#xA;<a href=""https://blog.apollographql.com/securing-your-graphql-api-from-malicious-queries-16130a324a6b"" rel=""nofollow noreferrer"">https://blog.apollographql.com/securing-your-graphql-api-from-malicious-queries-16130a324a6b</a>&#xA;<a href=""https://www.prisma.io/forum/t/graphql-security-protect-nested-data/4519"" rel=""nofollow noreferrer"">https://www.prisma.io/forum/t/graphql-security-protect-nested-data/4519</a></p>&#xA;",5449450,,5449450,2018-09-27 17:28:24,2018-09-27 17:28:24,GraphQL - Security - Protect nested data,<security><nested><graphql><apollo><resolver>,2,0,0,2018-09-27 00:57:43
52534124,1,,,0,1207,"<p>Query so far &#xA;<code>{&#xA;  product1: product(id: ""gid://shopify/Product/777854222396"") {&#xA;    title&#xA;    totalVariants&#xA;    variants(first:99) {&#xA;      .....&#xA;    }&#xA;    hasOutOfStockVariants&#xA;  }&#xA;  product2: product(id: ""gid://shopify/Product/511571296316"") {&#xA;    title&#xA;  }&#xA;}</code></p>&#xA;&#xA;<p>What can be done to fetch variant based on id</p>&#xA;",9624161,,,,2018-09-28 07:50:13,How to get variant by variant Id from product object using by graphql Shopify,<graphql><shopify>,1,0,0,2018-09-27 09:47:57
52542558,2,,52535785,0,,<p>do you get value in results[0] ? is it object or array ?</p>&#xA;,9058286,,,,2018-09-27 17:49:19,"",,0,2,0,2018-09-27 17:49:19
52544685,1,,,1,1021,"<p>I want to find all users that have set their ""Company"" field in their Github Homepage to ""Github"".  I see it is a defined field in the Github Docs at <a href=""https://developer.github.com/v4/object/user/"" rel=""nofollow noreferrer"">https://developer.github.com/v4/object/user/</a>.  However, I can't seem to search for it.</p>&#xA;&#xA;<p>My current query on <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">https://developer.github.com/v4/explorer/</a> returns no results</p>&#xA;&#xA;<p><code>{&#xA;  search(query: ""company:Github"", type: USER, first: 100) {&#xA;    userCount&#xA;    edges {&#xA;      node {&#xA;        ... on User {&#xA;          login&#xA;          name&#xA;          company&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></p>&#xA;",10426347,,,,2018-09-28 06:17:29,How to search Github GraphQL users by Company,<github><graphql>,1,0,0,2018-09-27 20:29:59
52550750,2,,52534124,0,,"<p>I have found <code>ProductVariant</code> on their <a href=""https://help.shopify.com/en/api/graphql-admin-api/reference/object/productvariant"" rel=""nofollow noreferrer"">GraphQL Admin API</a> reference docs, you can take reference from their else I didn't find any <code>ProductVariant</code> <code>Schema</code> open at <code>QueryRoot</code> as defined here in the open <a href=""https://help.shopify.com/en/api/graphiql"" rel=""nofollow noreferrer"">graphQL admin panel</a> although they have mentioned an <a href=""https://help.shopify.com/en/api/graphql-admin-api/getting-started#example-queries"" rel=""nofollow noreferrer"">example</a>.</p>&#xA;&#xA;<pre><code>query {&#xA;  productVariant(id: ""gid://shopify/ProductVariant/10782354800682"") {&#xA;    inventoryItem {&#xA;      inventoryLevels (first:10) {&#xA;        edges {&#xA;          node {&#xA;            location {&#xA;              name&#xA;            }&#xA;            available&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6673165,,,,2018-09-28 07:50:13,"",,0,0,0,2018-09-28 07:50:13
52590163,1,,,2,525,"<p>I want to use custom directives to protect my GraphQL API. More specifically, for specific GraphQL fields, I want to check if users have authorisation to query those fields when a request hits my GraphQL server.</p>&#xA;&#xA;<p>The following links are articles that contain examples on achieving this objective.</p>&#xA;&#xA;<ul>&#xA;<li>Link 1: <a href=""https://www.prisma.io/blog/graphql-directive-permissions-authorization-made-easy-54c076b5368e/"" rel=""nofollow noreferrer"">https://www.prisma.io/blog/graphql-directive-permissions-authorization-made-easy-54c076b5368e/</a></li>&#xA;<li>Link 2: <a href=""https://codeburst.io/use-custom-directives-to-protect-your-graphql-apis-a78cbbe17355"" rel=""nofollow noreferrer"">https://codeburst.io/use-custom-directives-to-protect-your-graphql-apis-a78cbbe17355</a></li>&#xA;</ul>&#xA;&#xA;<p>However, both examples achieve this by first constructing their Schema using the GraphQL Schema Definition Language (below is a snippet from the <a href=""https://github.com/DavidHe1127/aws-cognito-example/blob/master/server/server.js"" rel=""nofollow noreferrer"">repo for Link 2</a>) that demonstrates how you can use custom directives to check if users have authorisation to query specific fields (such as ""rating"").</p>&#xA;&#xA;<pre><code>require('dotenv').config();&#xA;const express = require('express');&#xA;const graphqlHTTP = require('express-graphql');&#xA;const {&#xA;  makeExecutableSchema&#xA;} = require('graphql-tools');&#xA;&#xA;const {directiveResolvers} = require('./directives');&#xA;const {allProductsBySupplier, addProduct, product, suppliers} = require('./resolvers');&#xA;&#xA;require('./auth');&#xA;&#xA;const app = express();&#xA;&#xA;const port = 8080;&#xA;const typeDefs = `&#xA;  directive @isAuthenticated on QUERY | FIELD&#xA;  directive @hasScope(scope: [String]) on QUERY | FIELD&#xA;  type Product {&#xA;    id: ID!&#xA;    supplierId: ID!&#xA;    sku: String&#xA;    qty: Int&#xA;    price: Int&#xA;    parrot: String&#xA;    rating: Int @hasScope(scope: [""read:rating""])&#xA;  }&#xA;  type Supplier {&#xA;    id: ID!&#xA;    name: String!&#xA;  }&#xA;  input ProductInput {&#xA;    supplierId: ID!&#xA;    sku: String!&#xA;    qty: Int!&#xA;    price: Int!&#xA;    parrot: String!&#xA;    rating: Int!&#xA;  }&#xA;  type Query {&#xA;    allProductsBySupplier: [Product] @isAuthenticated&#xA;    product: Product @isAuthenticated&#xA;    suppliers: [Supplier]&#xA;  }&#xA;  type Mutation {&#xA;    addProduct(input: ProductInput!): Product @hasScope(scope: [""add:product""])&#xA;  }&#xA;`;&#xA;&#xA;const resolvers = {&#xA;  Query: {&#xA;    allProductsBySupplier,&#xA;    product,&#xA;    suppliers&#xA;  },&#xA;  Mutation: {&#xA;    addProduct&#xA;  }&#xA;};&#xA;&#xA;const schema = makeExecutableSchema({&#xA;  typeDefs,&#xA;  resolvers,&#xA;  directiveResolvers&#xA;});&#xA;&#xA;app.use(&#xA;  '/graphql',&#xA;  graphqlHTTP({&#xA;    schema,&#xA;    graphiql: true&#xA;  })&#xA;);&#xA;&#xA;app.listen(port);&#xA;&#xA;console.log(`server running on localhost:${port}`);&#xA;</code></pre>&#xA;&#xA;<p>I have constructed my API without using the GraphQL schema definition language as shown below. The following snippet has been extracted from the <a href=""https://graphql.org/graphql-js/constructing-types/"" rel=""nofollow noreferrer"">official graphql docs</a>.</p>&#xA;&#xA;<pre><code>var express = require('express');&#xA;var graphqlHTTP = require('express-graphql');&#xA;var graphql = require('graphql');&#xA;&#xA;// Maps id to User object&#xA;var fakeDatabase = {&#xA;  'a': {&#xA;    id: 'a',&#xA;    name: 'alice',&#xA;  },&#xA;  'b': {&#xA;    id: 'b',&#xA;    name: 'bob',&#xA;  },&#xA;};&#xA;&#xA;// Define the User type&#xA;var userType = new graphql.GraphQLObjectType({&#xA;  name: 'User',&#xA;  fields: {&#xA;    id: { type: graphql.GraphQLString },&#xA;    name: { type: graphql.GraphQLString },&#xA;  }&#xA;});&#xA;&#xA;// Define the Query type&#xA;var queryType = new graphql.GraphQLObjectType({&#xA;  name: 'Query',&#xA;  fields: {&#xA;    user: {&#xA;      type: userType,&#xA;      // `args` describes the arguments that the `user` query accepts&#xA;      args: {&#xA;        id: { type: graphql.GraphQLString }&#xA;      },&#xA;      resolve: function (_, {id}) {&#xA;        return fakeDatabase[id];&#xA;      }&#xA;    }&#xA;  }&#xA;});&#xA;&#xA;var schema = new graphql.GraphQLSchema({query: queryType});&#xA;&#xA;var app = express();&#xA;app.use('/graphql', graphqlHTTP({&#xA;  schema: schema,&#xA;  graphiql: true,&#xA;}));&#xA;app.listen(4000);&#xA;console.log('Running a GraphQL API server at localhost:4000/graphql');&#xA;</code></pre>&#xA;&#xA;<p><strong>How can I create custom directives to check if users have authorisation to query specific fields if I have constructed my Schema without using the GraphQL Schema Definition Language?</strong></p>&#xA;",7489488,,,,2018-10-01 11:32:32,How do I create custom directives to protect my GraphQL API?,<authorization><graphql>,0,2,0,2018-10-01 11:32:32
52601863,2,,52491771,0,,"<p>basically it need 2 escape wherever u post a variable for example</p>&#xA;&#xA;<p>""{\n""&#xA;                + ""\""query\"": \""{inventoryPositions(productRef: \\""SKU_3\\"" locationRef: \\""locRef1\\""){edges{node{onHand quantities{edges{node{ref quantity type}}}}}}}\""\n""&#xA;                + ""}""</p>&#xA;&#xA;<p>worked for me </p>&#xA;",6233109,,,,2018-10-02 04:03:51,"",,0,0,0,2018-10-02 04:03:51
52612632,2,,51630137,23,,"<p>I would avoid including variables directly in the query like this, because that way you have to constantly adjust how your variables fit into the template literal, like stringifying stuff and adding quotes.</p>&#xA;<p>Use <code>graphql</code> <code>print</code> to do it for you!</p>&#xA;<p>Try this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import axios from 'axios';&#xA;import { print } from 'graphql';&#xA;import gql from 'graphql-tag';&#xA;&#xA;const ADD_SKILL = gql`&#xA;mutation addSkill($id:String!, $name:String!, $level:Float!, $type:String!) {&#xA;  addSkill(id:$id, name:$name, level:$level, type:$type) { &#xA;    status&#xA;    id&#xA;    name&#xA;    level&#xA;    type&#xA;  }&#xA;}&#xA;`&#xA;&#xA;axios.post(config.apiendpoint, {&#xA;  query: print(ADD_SKILL),&#xA;  variables: {&#xA;    id: String(id),&#xA;    name: this.form.name,&#xA;    level: parseFloat(this.form.level),&#xA;    type: this.form.type,&#xA;  },&#xA;})&#xA;.then(res =&gt; console.log(res))&#xA;.catch(err =&gt; console.log(err))&#xA;</code></pre>&#xA;",4432910,,4432910,2021-10-04 22:01:48,2021-10-04 22:01:48,"",,0,0,0,2018-10-02 16:31:17
52630225,1,52635380,,0,330,"<p>I'm using <code>AWS AppSync</code> with <code>Apollo</code>. So far, so good except that I just realised that all my mutations are not working properly :</p>&#xA;&#xA;<p>In the devtool, I can see the returned data like this:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;  ""data"": {&#xA;    ""getProduct"": {&#xA;      ""productId"": ""xxxxxxxxxxxxxxxxxxx"",&#xA;      ""title"": ""my title"",&#xA;      ""slug"": ""my slug""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;&#xA;&#xA;<p>...but when I try to console.log these same data, I get null.&#xA;It does that only with my mutations (queries works fine).</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;  ""data"": {&#xA;    ""getProduct"": null&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;&#xA;&#xA;<p>Here is what I'm doing:&#xA;</p>&#xA;&#xA;<pre><code>addProduct(variables): Observable&lt;Product&gt; {&#xA;  return this.apollo.mutate({&#xA;    mutation: gql`&#xA;      mutation addProduct($product: AddProductInput) {&#xA;        addProduct(product: $product) {&#xA;          productId&#xA;          title&#xA;          slug&#xA;        }&#xA;      }&#xA;    `,&#xA;    variables&#xA;  }).pipe(&#xA;    tap(console.log)&#xA;  )&#xA;}&#xA;</code></pre>&#xA;&#xA;&#xA;&#xA;<p><strong>After few hours trying to find a solution, I tried to replace <code>Apollo</code> with <code>AWS Amplify</code> and It worked as expected.</strong></p>&#xA;&#xA;<p>The thing is that I don't want to use <code>AWS Amplify</code>. I can't use fragments/offline/optimistic UI/fetchPolicy... and I really need these.</p>&#xA;&#xA;<p>So I'm wondering if that is supposed to be like this or am I missing something here?</p>&#xA;",2203299,,,,2018-10-03 20:42:19,My mutations works properly with Amplify but not with Apollo. Why?,<graphql><apollo><apollo-client><aws-appsync><aws-amplify>,1,0,0,2018-10-03 15:10:03
52632401,1,,,1,436,"<p>Given a list of usernames and the following query to <code>GITHUB API</code>:-</p>&#xA;&#xA;<pre><code>query.gql:&#xA;query USER_QUERY($username:String!){&#xA;            user(login: $username){&#xA;                  name&#xA;                repositories(isFork:false){&#xA;                totalCount&#xA;              }&#xA;            }&#xA;          }&#xA;</code></pre>&#xA;&#xA;<p>I want to create a <code>composite query</code> for every <code>username</code>.</p>&#xA;&#xA;<p>Example: </p>&#xA;&#xA;<p>Let's say this is the list of usernames</p>&#xA;&#xA;<pre><code>array usernames=[""Sheldon"",""Leonard"",""Raj"",""Holowitz""]&#xA;</code></pre>&#xA;&#xA;<p>Expected Query:</p>&#xA;&#xA;<pre><code> {&#xA;  sheldon:user(login: ""sheldon"") {&#xA;    name&#xA;    repositories(isFork: false) {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;  leonard:user(login: ""leonard"") {&#xA;    name&#xA;    repositories(isFork: false) {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;  raj:user(login: ""raj"") {&#xA;    name&#xA;    repositories(isFork: false) {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;  holowitz:user(login: ""holowitz"") {&#xA;    name&#xA;    repositories(isFork: false) {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Is there any <code>react</code>ive-way to achieve the result?</p>&#xA;",10452570,,10452570,2018-10-07 12:34:37,2018-10-07 12:34:37,React-Apollo : Make query calls for a list of variables,<javascript><reactjs><graphql><react-apollo><github-graphql>,1,0,0,2018-10-03 17:15:13
52687858,1,52689257,,1,1535,<p>When I have</p>&#xA;&#xA;<pre><code>query: gql`query FetchUsers { users {  id   email }}`&#xA;</code></pre>&#xA;&#xA;<p>What is a fast way to make it look like this:</p>&#xA;&#xA;<pre><code> query: gql`query FetchUsers {&#xA;                users {&#xA;                    id&#xA;                    email&#xA;                }&#xA;            }`&#xA;</code></pre>&#xA;&#xA;<p>Or do I need to insert GraphQL expressions in another way in order to get readable formatting?</p>&#xA;,6019601,,,,2018-10-07 14:05:56,Format/Prettyprint gql `template strings` in GraphQL Apollo-client (PhpStorm),<vue.js><phpstorm><graphql><apollo><vue-apollo>,1,0,0,2018-10-07 11:04:36
52715606,1,52718398,,0,876,"<pre><code>client.mutate[1]({&#xA;    mutation[2]: gql`&#xA;        mutation[3] signOut[4] {&#xA;            signOut[5] {&#xA;                success[6]&#xA;            }&#xA;        }&#xA;    `,&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>The numbers in brackets are my annotations to the different parts of the query. My best guesses on their meaning are below. Correct me where I am wrong or incomplete. My biggest doubts are in italic:</p>&#xA;&#xA;<p><strong>[1] client.mutate</strong> There is a mutate method on the Apollo client because the Apollo client handles mutations differently than queries</p>&#xA;&#xA;<p><strong>[2] mutation</strong> Just an object property named mutation that is passed to the Apollo client</p>&#xA;&#xA;<p><strong>[3] mutation</strong> The root mutation field on the server</p>&#xA;&#xA;<p><strong>[4] signOut</strong> A field available on the mutation root field. <em>I am surprised that signOut is written immediately after mutation instead of on its own row within a pair of brackets</em></p>&#xA;&#xA;<p><strong>[5] signOut</strong> I guess the signOut field on the server resolves to return  another field called signOut? <em>Am I understanding this correctly? Is this normal?</em></p>&#xA;&#xA;<p><strong>[6] success</strong> The inner singOut field resolves to return an object  called success</p>&#xA;",1283776,,,,2018-10-09 11:13:57,Explain the syntax for calling mutate on the Apollo client,<graphql><apollo><apollo-client>,1,0,0,2018-10-09 07:34:19
52749607,2,,46753738,10,,"<p>you can achieve using <code>search</code> end point (you need to be authenticated)</p>&#xA;&#xA;<pre><code>query myOrgRepos($queryString: String!) {&#xA;  search(query: $queryString, type: REPOSITORY, first: 10) {&#xA;    repositoryCount&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>with query variables</p>&#xA;&#xA;<pre><code>{&#xA;  ""queryString"": ""org:my_org""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Note that as expected <strong>you do not get the list repositories of your organization, you get the list of your organization list that you have access</strong></p>&#xA;",997977,,997977,2018-10-10 22:32:14,2018-10-10 22:32:14,"",,0,1,0,2018-10-10 22:26:58
52761538,2,,52761365,0,,"<p>You can use this awesome extension: <a href=""https://github.com/apollographql/apollo-client-devtools"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client-devtools</a></p>&#xA;",9535703,,7015138,2019-11-17 12:15:47,2019-11-17 12:15:47,"",,0,1,0,2018-10-11 13:38:47
52769993,1,52770071,,37,21548,"<p>I'm using vs code + <a href=""https://www.npmjs.com/package/graphql-cli"" rel=""noreferrer"">graphql-cli</a> for validating &amp; linting the schema. In the following declaration (in the graphql schema file):</p>&#xA;&#xA;<pre><code>type Query {&#xA;  users(): Int&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The <code>users</code> declaration above is marked as en error, but it doesn't make any problem (or warning) by the server - it's only vs code and <code>graphql lint</code> reporting it as an error:</p>&#xA;&#xA;<pre><code>2:9 Syntax Error: Expected Name, found )  undefined&#xA;</code></pre>&#xA;&#xA;<p>If I add a parameter to the query, eg:</p>&#xA;&#xA;<pre><code>type Query {&#xA;  users(n: Int): Int&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>then there is no problem reported by vs code or graphql-cli.&#xA;How can I properly declare a graphql query without parameters.</p>&#xA;",297094,,,,2018-10-11 23:24:17,How to correctly declare a GraphQL query without parameters.,<visual-studio-code><graphql><lint>,1,1,0,2018-10-11 22:58:57
52805394,1,,,1,637,"<p>This is the GraphQL query for GitHub's API:</p>&#xA;&#xA;<pre><code>mutation {&#xA;    updateProject(input: {&#xA;         projectId: ""MDEwOlJlcG9zaXRvcnkxMTY0ODYzMDc"",&#xA;         body: ""Testing tusting"",&#xA;         state: OPEN&#xA;    }) {&#xA;   clientMutationId&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm getting this error message: </p>&#xA;&#xA;<pre><code> ""message"": ""Could not resolve to Project node with the global id of 'MDEwOlJlcG9zaXRvcnkxMTY0ODYzMDc'."",&#xA;</code></pre>&#xA;&#xA;<p>What is wrong here? I'm trying to update a repository description.</p>&#xA;",2670857,,2670857,2018-10-14 19:21:36,2022-03-24 14:47:30,Update github repository description via graphql,<graphql><github-graphql>,1,2,0,2018-10-14 17:44:18
52820680,1,52911340,,3,944,"<p>I have a webhook that listen to all code reviews, then I fetch the comments of this PR review in order to get the position of the comment in the diff.&#xA;I'm using the GitHub REST API, but the issue I have is the same with the GraphQL API.</p>&#xA;<p>So the workflow is:</p>&#xA;<ol>&#xA;<li>Get the review ID from the webhook</li>&#xA;<li>Fetch the comment list of that review</li>&#xA;<li>For each comment, get the diff hunk and the position to find the edited line</li>&#xA;</ol>&#xA;<p>All of that works fine 99% of the time.&#xA;Sometimes I get <code>null</code> in the position, I ignore these comments.</p>&#xA;<p>But this time, I get another weird issue.&#xA;Usually, the position refers to the index of the line in the diff.</p>&#xA;<p>For example, in:</p>&#xA;<pre><code>@@ -1 +1,3 @@&#xA;-# sedy-test&#xA;\\ No newline at end of file&#xA;+# sedy-test&#xA;+&#xA;+This repository is used to test [sedy](https://github.com/marmelab/sedy).&#xA;</code></pre>&#xA;<p>If the position is 3, the edited line is <code>+# sedy-test</code>.</p>&#xA;<p>The issue is that for some comments, I get a position that can't be inside the diff.&#xA;As an example, see <a href=""https://github.com/Kmaschta/comfygure/pull/1"" rel=""nofollow noreferrer"">this PR</a>.</p>&#xA;<p>When I try to fetch the comment position of the review with the following request:</p>&#xA;<pre><code>{&#xA;  repository(owner: &quot;Kmaschta&quot;, name: &quot;comfygure&quot;) {&#xA;    pullRequest(number: 1) {&#xA;      reviews(last: 1) {&#xA;        edges {&#xA;          node {&#xA;            state&#xA;            comments(first: 1) {&#xA;              edges {&#xA;                node {&#xA;                  bodyText&#xA;                  authorAssociation&#xA;                  position&#xA;                  originalPosition&#xA;                  diffHunk&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The response is the following:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;repository&quot;: {&#xA;      &quot;pullRequest&quot;: {&#xA;        &quot;reviews&quot;: {&#xA;          &quot;edges&quot;: [&#xA;            {&#xA;              &quot;node&quot;: {&#xA;                &quot;state&quot;: &quot;COMMENTED&quot;,&#xA;                &quot;comments&quot;: {&#xA;                  &quot;edges&quot;: [&#xA;                    {&#xA;                      &quot;node&quot;: {&#xA;                        &quot;bodyText&quot;: &quot;s/fot/for/&quot;,&#xA;                        &quot;authorAssociation&quot;: &quot;OWNER&quot;,&#xA;                        &quot;position&quot;: 71,&#xA;                        &quot;originalPosition&quot;: 71,&#xA;                        &quot;diffHunk&quot;: &quot;@@ -24,31 +34,39 @@ const ls = (ui, modules) =&gt; function* () {\n };\n \n const add = (ui, modules, options) =&gt; function* () {\n-    const { red, bold } = ui.colors;\n+    const { red, bold, green } = ui.colors;\n \n     if (!options.length) {\n         ui.error(`${red('No environment specified.')}`);\n-        help(ui, 1);\n     }\n \n     if (options.length &gt; 1) {\n         ui.error(`${red('Invalid environment format. The environment name should be one word.')}`);\n-        help(ui, 1);\n+    }\n+\n+    if (options.length !== 1) {\n+        ui.print(`${bold('SYNOPSIS')}\n+        ${bold('comfy')} env add &lt;environment&gt;\n+\n+Type ${green('comfy env --help')} for details`);\n+\n+        return ui.exit(0);\n     }\n \n     const project = yield modules.project.retrieveFromConfig();\n     const environment = yield modules.environment.add(project, options[0]);\n-    const addCommand = `comfy add ${environment.name}`;\n+    const addCommand = `comfy setall ${environment.name}`;\n \n-    ui.print(`${bold('Cool!')} Your new environment \&quot;${bold(environment.name)}\&quot; was successfully saved.`);\n-    ui.print(`You can now add a configuration, try ${bold(addCommand)}`);\n+    ui.print(`${bold(green('Environment successfully created'))}`);\n+    ui.print(`You can now set a configuration fot this environment using ${bold(addCommand)}`);&quot;&#xA;                      }&#xA;                    }&#xA;                  ]&#xA;                }&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The position is 71, but the diff doesn't contain more than 40 lines.</p>&#xA;<p>So is it a bug if the GitHub API, or I didn't understand the point of the position field?</p>&#xA;<p>Note: I posted the <a href=""https://platform.github.community/t/pull-request-review-comment-wrong-position-from-the-diff/7568"" rel=""nofollow noreferrer"">same question on the GitHub forum</a>.</p>&#xA;",3868326,,12892553,2021-04-12 18:28:25,2021-04-12 18:28:25,Pull Request Review Comment wrong position from the diff?,<github><graphql><github-api><github-graphql><github-api-v4>,2,0,0,2018-10-15 16:05:03
52850638,1,52851798,,0,113,<p>I've got a dynamic list of github repository urls (lets say size is &lt; 100). I'd like to query a particular information of each of them using GraphQL. </p>&#xA;&#xA;<p>Can I do it with one batch request?</p>&#xA;,8441830,,,,2018-10-17 10:18:45,GitHub GraphQL. Get list of repositories with one batch request,<github><graphql><github-api>,1,0,0,2018-10-17 08:40:28
52851798,2,,52850638,0,,"<p>Okay, I've found a solution. Only works if you know global <code>node_id</code> of each repository, which is definitely my case.</p>&#xA;&#xA;<pre><code>query($ids: [ID!]!) {&#xA;   nodes(ids: $ids) {&#xA;      ... on Repository {&#xA;         name&#xA;         description&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;",8441830,,8441830,2018-10-17 10:18:45,2018-10-17 10:18:45,"",,0,0,0,2018-10-17 09:42:29
52894822,1,,,-1,52,"<p>I am making a laravel project where users can be seperated to 2 things, brand and supplier. As Supplier you can have products.</p>&#xA;<p>The problem is that as Supplier i can only fetch 1 product with -&gt;first(), i found out that i have to do -&gt;get(), but it will give me a error.</p>&#xA;<p>-&gt;first()&#xA;<a href=""https://i.stack.imgur.com/Cu2aL.png"" rel=""nofollow noreferrer"">first</a>&#xA;response =&#xA;<a href=""https://i.stack.imgur.com/NCwtQ.png"" rel=""nofollow noreferrer"">response</a></p>&#xA;<p>-&gt;get()&#xA;<a href=""https://i.stack.imgur.com/nUwE4.png"" rel=""nofollow noreferrer"">get</a>&#xA;response =&#xA;<a href=""https://i.stack.imgur.com/l6YVX.png"" rel=""nofollow noreferrer"">response</a></p>&#xA;<p>Did i missed something?</p>&#xA;<p>thx in advance</p>&#xA;",10042860,,-1,2020-06-20 09:12:55,2018-10-19 16:26:52,Cant fetch more items from a user,<laravel><graphql>,2,2,0,2018-10-19 14:48:54
52901200,1,52901320,,1,1086,"<p>Trying to just fetch the name of my store in a React component using the Fetch API and GraphQL endpoint of Shopify. </p>&#xA;&#xA;<p>I created a Shopify store, gave permissions to the Storefront API and crafted this in my <code>componentDidMount()</code> section of my react component. </p>&#xA;&#xA;<pre><code>let query = '{ shop { name } }';&#xA;console.log(JSON.stringify(query));&#xA;&#xA;fetch('https://myStoreName.myshopify.com/api/graphql', {&#xA;        method: ""POST"",&#xA;        headers: {&#xA;            ""Content-Type"": ""application/graphql"",&#xA;            ""X-Shopify-Storefront-Access-Token"": ""&lt;My API Key&gt;""&#xA;        },&#xA;        body: JSON.stringify(query),&#xA;    })&#xA;  .then(function(myJson) {&#xA;    console.log('fetched');&#xA;    console.log(JSON.stringify(myJson));&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>My console log output: </p>&#xA;&#xA;<pre><code>""{ shop { name } }""&#xA;App.js:21 fetched&#xA;App.js:22 {}&#xA;</code></pre>&#xA;&#xA;<p>I'm not even getting an error, makes me think it's going through possibly? &#xA;But can't find my shop's name in this query? </p>&#xA;&#xA;<p>I think overall I don't know best practices to craft a GraphQL query in Javascript.&#xA;Do I make a large string or just a normal,  JSON to represent it? </p>&#xA;&#xA;<p>*Also I'm trying not to use a graphQL client library at the moment, and just to use fetch API. </p>&#xA;",4775199,,,,2018-10-20 00:38:34,"Shopify GraphQL using fetch API, returns empty json, no errors",<graphql><fetch><shopify><fetch-api>,1,0,0,2018-10-19 23:52:17
52910676,1,,,5,4044,<p>In my database the <code>Event</code> field was populated both dynamically with an array of strings while some were populated manually with text (No array). When I execute my query the results that were populated with just a String (not in an array) shows up as null.</p>&#xA;&#xA;<p>Field in the schema is: <code>Event: [String]</code></p>&#xA;&#xA;<p>Is there a way in GraphQL to assign a field both [String] and String types? I tried the following but got a syntax error:</p>&#xA;&#xA;<pre><code>union test = [String] | String&#xA;&#xA;Event: test&#xA;</code></pre>&#xA;&#xA;<p>Note: The manually assigned ones are not in an array.</p>&#xA;,8326987,,6024220,2019-04-18 02:10:15,2019-04-18 02:10:15,Assign multiple types to a field in GraphQL,<graphql><graphql-js><graphql-java>,1,1,0,2018-10-20 22:39:00
52911375,1,,,3,441,"<p>I am using the following to search repositories by query name ""android"" </p>&#xA;&#xA;<pre><code>{&#xA;  search(query: ""android"", type: REPOSITORY, first: 50) {&#xA;    repositoryCount&#xA;    edges {&#xA;&#xA;      node {&#xA;        ... on Repository {&#xA;          id&#xA;          name&#xA;          description&#xA;          forkCount&#xA;          owner{&#xA;            avatarUrl&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How to get the REPOSITORY subscriber count and the list of subscribers</p>&#xA;&#xA;<p>Thanks In advance :)</p>&#xA;",5058630,,10283047,2018-10-22 08:38:25,2018-10-28 18:22:44,Github GraphQl get REPOSITORY subscriber count and the list of subscribers,<android><github><graphql><github-graphql>,2,2,0,2018-10-21 01:19:02
52911547,2,,51935764,2,,"<p>You can search commit with a specific sha using <a href=""https://developer.github.com/v3/search/#search-commits"" rel=""nofollow noreferrer"">Search commit API</a> : </p>&#xA;&#xA;<pre class=""lang-bash prettyprint-override""><code>curl ""https://api.github.com/search/commits?q=6302aad48c5cb56c9f9c3fb7aa73d2f1f2f10540"" \&#xA;     -H ""Accept: application/vnd.github.cloak-preview""&#xA;</code></pre>&#xA;",2614364,,,,2018-10-21 01:56:20,"",,0,0,0,2018-10-21 01:56:20
52912207,2,,52911375,0,,"<p>The <a href=""https://developer.github.com/v3/"" rel=""nofollow noreferrer"">GitHub API</a> itself has no notion of ""subscriber"" (at most, the <a href=""https://developer.github.com/v3/repos/traffic/#clones"" rel=""nofollow noreferrer"">number of clones, over the last 14 days</a>)</p>&#xA;&#xA;<p>GraphQL itself has the <a href=""https://graphql-dotnet.github.io/docs/getting-started/subscriptions/"" rel=""nofollow noreferrer"">notion of subcription</a>, as <a href=""https://github.com/facebook/graphql/blob/master/rfcs/Subscriptions.md"" rel=""nofollow noreferrer"">described here</a>, but they are not for the ""repository"".</p>&#xA;",6309,,,,2018-10-21 04:51:23,"",,0,0,0,2018-10-21 04:51:23
52913948,1,,,0,367,"<p>I'm trying to use Github GraphQL API to search commits by message. In Github REST API, I just need to send POST request to <code>https://api.github.com/search/commits?q=examplemsg&amp;sort=committer-date</code>, but in GraphQL API, I cannot find how I can do this. </p>&#xA;&#xA;<p>I tried to use <code>search</code> query, but enum <code>SearchType</code> has only 3 types, <code>ISSUE</code>, <code>REPOSITORY</code>, and <code>USER</code>. Is it possible to find it?</p>&#xA;&#xA;<p>Thanks.</p>&#xA;",5906697,,,,2019-04-20 11:04:24,Search commits by message with Github GraphQL API?,<api><github><graphql>,2,0,0,2018-10-21 09:43:16
52939341,2,,52936452,0,,"<p>GraphQL works well for APIs where the ""shape"" of the data is fairly well-defined.  For example, in the <a href=""https://developer.github.com/v4/"" rel=""nofollow noreferrer"">GitHub GraphQL API</a>, Repositories have Refs (tags or branches) have GitObjects (commits or tags) which all have a fairly fixed set of attributes.  You wouldn't create a separate GraphQL field for each branch; instead you might look for</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>query WhereIsMaster($name: String!, $owner: String!) {&#xA;  repository(name: $name, owner: $owner) {&#xA;    refs(refPrefix: ""refs/heads/master"") {&#xA;      nodes {&#xA;        target {&#xA;          oid&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If you're designing your own schema, and you have a key/value-type storage, you'd have to write your own lookup for it</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>type KeyValuePair implements Node {&#xA;  id: ID!&#xA;  key: String!&#xA;  value: String!&#xA;}&#xA;type Query {&#xA;  lookup(key: String!): KeyValuePair&#xA;}&#xA;type Mutation {&#xA;  insert(key: String!, value: String!): KeyValuePair!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If your data model is truly freeform (as a prominent example, MongoDB allows arbitrary JSON documents to be stored) then GraphQL isn't a great match for it.</p>&#xA;",10008173,,,,2018-10-23 00:12:22,"",,0,0,0,2018-10-23 00:12:22
52968084,1,52987244,,1,1024,"<p>Hi I am using Apollo android to get a list of repositories with a keyword from the Github GraphQl</p>&#xA;&#xA;<p>I have to add cursor based pagination as well.</p>&#xA;&#xA;<p>This is the .graphql file</p>&#xA;&#xA;<pre><code>  query Search($query: String!,$afterCursor: String!){&#xA;  search(query:$query, after:$afterCursor,type: REPOSITORY, first: 50) {&#xA;    repositoryCount&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          id&#xA;          name&#xA;          description&#xA;          forkCount&#xA;          owner{&#xA;            login&#xA;            id&#xA;            avatarUrl&#xA;          }&#xA;        }&#xA;      }&#xA;      cursor&#xA;    }&#xA;    pageInfo {&#xA;        endCursor&#xA;        hasNextPage&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What will be the value for the afterCursor variable when the request is sent for the first time </p>&#xA;&#xA;<p>I tried null but the response failed</p>&#xA;&#xA;<p>and I tried empty string as well</p>&#xA;&#xA;<p>Thanks in advance..</p>&#xA;",5058630,,5052733,2019-12-03 14:44:33,2019-12-03 14:44:33,GitHub GraphQL cursor Pagination on first request,<android><graphql><github-graphql><apollo-android>,1,0,0,2018-10-24 11:41:05
52987244,2,,52968084,4,,"<p>If you can remove the <code>!</code> from <code>$afterCursor: String!</code>, that should work.</p>&#xA;&#xA;<p>The problem of sending null or empty is that is not a valid cursor, so if we make it not required (by removing <code>!</code> from the parameters), then you don't have to send it at all, and that works for the first time you run the query.`</p>&#xA;&#xA;<p>Something like this:</p>&#xA;&#xA;<pre><code>query Search($query: String!, $afterCursor: String){&#xA;  search(query:$query, after:$afterCursor,type: REPOSITORY, first: 50) {&#xA;    repositoryCount&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          id&#xA;          name&#xA;          description&#xA;          forkCount&#xA;          owner{&#xA;            login&#xA;            id&#xA;            avatarUrl&#xA;          }&#xA;        }&#xA;      }&#xA;      cursor&#xA;    }&#xA;    pageInfo {&#xA;        endCursor&#xA;        hasNextPage&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3708153,,,,2018-10-25 10:37:19,"",,0,2,0,2018-10-25 10:37:19
52991308,1,,,0,104,"<pre><code>const sidebar = ({ selectedSidebarItem, selectItemCb }) =&gt; {&#xA;      const doExcelExport = () =&gt; {&#xA;        const data = client.readQuery({ query: getLeveransprojektOrders });&#xA;        const rows = data.projectOrders.map(order =&gt; Object.keys(order).map(key =&gt; order[key]));&#xA;        ....&#xA;      };&#xA;&#xA;      return (&#xA;        &lt;div className=""sidebar""&gt;&#xA;          &lt;button disabled={some condition}&gt;Export excel&lt;/button&gt; &#xA;        &lt;/div&gt;&#xA;      );&#xA;    };&#xA;</code></pre>&#xA;&#xA;<p>I need to disable a button until there are items in the Apollo cache. Is there any built in way of doing this? Can't find anything about it in the docs.</p>&#xA;",1572526,,,,2018-10-26 21:08:39,"Apollo Client, React, event when cache enabled",<reactjs><react-apollo><apollo-client>,1,2,0,2018-10-25 14:04:52
53003549,1,53040812,,1,801,"<p>I am trying for a client to build his Shopify store with Gatsby. I use for that <a href=""https://www.gatsbyjs.org/packages/gatsby-source-shopify2/"" rel=""nofollow noreferrer"">gatsby-source-shopify2</a> plugin, and I always had error messages like that :</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Cannot query field \""allShopifyProduct\"" on type \""Query\""."",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 2,&#xA;          ""column"": 3&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So I investigated a bit to know what was happening, and I went on Shopify help center, followed <a href=""https://help.shopify.com/en/api/custom-storefronts/storefront-api/getting-started#accessing-the-storefront-api-graphql-endpoint"" rel=""nofollow noreferrer"">this quick tuto</a> and reproduced it with my client's store and with my own freshly created free test-store.&#xA;Here are the step I followed :</p>&#xA;&#xA;<ol>&#xA;<li>Create a new store, called 'my-store'</li>&#xA;<li>Create a new product</li>&#xA;<li>Create a new private app</li>&#xA;<li>Check the box <code>Allow this app to access your storefront data using the Storefront API</code></li>&#xA;<li>Copy the API key</li>&#xA;<li>Double-check that the private app is checked in the <code>Product Availability</code>, just to be sure</li>&#xA;<li>Open GraphiQL, and set the GraphQL Endpoint to be <code>https://my-store.myshopify.com/api/graphql</code></li>&#xA;<li>Set the only HTTP Header to be: <code>X-Shopify-Storefront-Access-Token</code>: <code>&lt;API key&gt;</code></li>&#xA;</ol>&#xA;&#xA;<p>Then I typed in the query field :</p>&#xA;&#xA;<pre><code>{&#xA;  shop {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And surprisingly, no error happened, but the expected output didn't come. It should have been :</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""shop"": {&#xA;      ""name"": ""my-store"",&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I tried in gatsby too, and the same errors came again, obviously.</p>&#xA;&#xA;<p>What is wrong with me ?</p>&#xA;",5225096,,5225096,2018-10-26 08:30:44,2018-10-29 07:38:01,Shopify StoreFront API GraphQL query returns nothing,<graphql><shopify><gatsby><storefront><graphiql>,1,0,0,2018-10-26 07:24:34
53010832,1,,,0,126,"<p>I tried to use below object as default in apollo-link-state </p>&#xA;&#xA;<pre><code> apolloClientDemo: {&#xA;  __typename: 'ApolloClientDemo',      &#xA;    currentPageName: 'Apollo Demo Default...',&#xA;    pages: [""page1"", ""page2""],&#xA;    pageObj:{&#xA;        color:""red"",&#xA;        width:""100""&#xA;    }      &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then I tried to obtain <strong>pages</strong> array and <strong>pageObj</strong> inside <strong>ApolloClient</strong> <strong>Query</strong> component. While I could obtain <strong>pages</strong> array, couldn't obtain <strong>pageObj</strong>. </p>&#xA;&#xA;<p>My query is like below;</p>&#xA;&#xA;<pre><code> query {&#xA;     apolloClientDemo @client {&#xA;         currentPageName&#xA;         pages&#xA;         pageObj &#xA;     }   &#xA; }&#xA;</code></pre>&#xA;&#xA;<p>Is there a way to use such nested objects as defaults in apollo-link-state?</p>&#xA;&#xA;<p>Thanks</p>&#xA;",450528,,,,2018-10-30 06:20:01,apollo-link-state using nested objects as default,<apollo-link-state>,1,0,0,2018-10-26 14:23:56
53031488,1,53031888,,1,186,"<p><br>&#xA;I am trying to get the number of respositories of a few users using GitHub’s v4 API. In their explorer I found that I can query <code>user(login: String!)</code> however, that is only one users repositories count that I can see. Is it possible to loop though a list of users and get their each one of their repository counts using GitHub’s v4 API?</p>&#xA;",0,user7885981,2614364,2018-10-30 20:45:25,2018-10-30 20:45:25,How would I get the number of repositories for each user of an array?,<javascript><graphql><github-api><github-graphql>,1,1,0,2018-10-28 12:23:52
53031888,2,,53031488,1,,"<p>You can use <a href=""https://graphql.org/learn/queries/#aliases"" rel=""nofollow noreferrer"">aliases</a> to add more <code>user</code> query to your request and build the graphql query programmatically looping through the user list. In the graphql explorer it would be something like this :</p>&#xA;&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  torvalds: user(login: ""torvalds"") {&#xA;    repositories() {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;  nelenkov: user(login: ""nelenkov"") {&#xA;    repositories() {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;  evilsocket: user(login: ""evilsocket"") {&#xA;    repositories() {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20torvalds%3A%20user(login%3A%20%22torvalds%22)%20%7B%0A%20%20%20%20repositories()%20%7B%0A%20%20%20%20%20%20totalCount%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20nelenkov%3A%20user(login%3A%20%22nelenkov%22)%20%7B%0A%20%20%20%20repositories()%20%7B%0A%20%20%20%20%20%20totalCount%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20evilsocket%3A%20user(login%3A%20%22evilsocket%22)%20%7B%0A%20%20%20%20repositories()%20%7B%0A%20%20%20%20%20%20totalCount%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""nofollow noreferrer"">Try it in the explorer</a></p>&#xA;&#xA;<p>An example using graphql.js : </p>&#xA;&#xA;<pre><code>var users = [ ""torvalds"", ""nelenkov"", ""evilsocket""];&#xA;&#xA;var graph = graphql(""https://api.github.com/graphql"", {&#xA;  headers: {&#xA;    ""Authorization"": ""Bearer YOUR_ACCESS_TOKEN""&#xA;  },&#xA;  asJSON: true&#xA;});&#xA;&#xA;graph(`&#xA;  query {&#xA;    ${buildRepoCountFromUsers(users)}&#xA;  }&#xA;`, {}).then(function(response) {&#xA;  console.log(response);&#xA;}).catch(function(error) {&#xA;  console.log(error);&#xA;});&#xA;&#xA;function buildRepoCountFromUsers(users){&#xA;  var query = """";&#xA;  for (var i = 0; i &lt; users.length; i++){&#xA;    query+=` ${users[i]} : user(login: ${users[i]}) {&#xA;      repositories() {&#xA;        totalCount&#xA;      }&#xA;    }`;&#xA;  }&#xA;  return query;&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>Note that I've chosen the user login as alias key here which works for the examples here but would not work if the login begins with a numeric character or if login contains hyphen. In that case you may use something like <code>user0</code>, <code>user1</code> etc... and get the field login for each user </p>&#xA;",2614364,,2614364,2018-10-28 19:34:29,2018-10-28 19:34:29,"",,0,1,0,2018-10-28 13:12:23
53034081,1,53038718,,0,36,"<p>I have a type <code>User</code> and a type <code>Book</code> defined as below:</p>&#xA;&#xA;<pre><code>type User {&#xA;  id: ID!&#xA;  borrowedBooks: [Book]&#xA;}&#xA;&#xA;type Book {&#xA;  id: ID!&#xA;  name: String&#xA;  borrowedBy: [User]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now I'd like to store the user's rating to each book. My question is: How should I define the schema so that I can query the user's rating to each borrowed book? Is it possible for me to query the rating like below, and if not, what is the common method to deal with situations like this.</p>&#xA;&#xA;<pre><code>getUser(id: ""xxx""): {&#xA;  borrowedBooks: {&#xA;    id&#xA;    name&#xA;    rating # &lt;------ get the rating value&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4056509,,4056509,2018-10-30 00:08:15,2018-10-30 00:08:15,Graphql: how to define a type to use specific instance when resolving another type?,<schema><graphql>,1,2,0,2018-10-28 17:10:06
53034746,2,,52911375,1,,"<p>You are looking for <a href=""https://help.github.com/articles/watching-and-unwatching-repositories/"" rel=""nofollow noreferrer"">watchers</a>, the terminology used in v3 is <code>subscribers</code>, check <a href=""https://developer.github.com/v3/activity/watching/#watching"" rel=""nofollow noreferrer"">this</a> : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  search(query: ""android"", type: REPOSITORY, first: 50) {&#xA;    repositoryCount&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          nameWithOwner&#xA;          watchers(first: 100) {&#xA;            totalCount&#xA;            nodes{&#xA;              login&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20search(query%3A%20%22android%22%2C%20type%3A%20REPOSITORY%2C%20first%3A%2050)%20%7B%0A%20%20%20%20repositoryCount%0A%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20...%20on%20Repository%20%7B%0A%20%20%20%20%20%20%20%20%20%20nameWithOwner%0A%20%20%20%20%20%20%20%20%20%20watchers(first%3A%20100)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20totalCount%0A%20%20%20%20%20%20%20%20%20%20%20%20nodes%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20login%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""nofollow noreferrer"">Try it in the explorer</a></p>&#xA;",2614364,,,,2018-10-28 18:22:44,"",,0,1,0,2018-10-28 18:22:44
53038718,2,,53034081,1,,"<p>It's generally bad practice to add fields to a type that will only be populated in a specific context. You <strong>could</strong> add a <code>rating</code> to the <code>Book</code> type, but then you would only resolve it with a value when fetching a list of books that have been borrowed -- if you're fetching a book or an array of books for some other field, a <code>rating</code> field may not necessarily make sense.</p>&#xA;&#xA;<p>What you probably want is another type (and another table, if we're talking about the underlying database) to join the user with their borrowed books. Something like:</p>&#xA;&#xA;<pre><code>type User {&#xA;  id: ID!&#xA;  checkouts: [Checkout]&#xA;}&#xA;&#xA;type Book {&#xA;  id: ID!&#xA;  name: String&#xA;  checkouts: [Checkout]&#xA;}&#xA;&#xA;type Checkout {&#xA;  user: User&#xA;  book: Book&#xA;  rating: Int&#xA;  lastCheckoutDate: Date&#xA;  # other fields specific to the checkout itself&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This makes the resulting data returned by a query a bit more nested, but it also makes the data easier to model and reason about. The resolvers for these fields can then also be relatively straightforward -- the <code>checkouts</code> field for <code>User</code> and <code>Book</code> just gets all <code>Checkouts</code> by <code>User</code> or <code>Book</code> id. The <code>user</code> and <code>book</code> fields on <code>Checkout</code> just query the <code>User</code> or <code>Book</code> by id.</p>&#xA;",6024220,,,,2018-10-29 04:23:22,"",,0,0,0,2018-10-29 04:23:22
53040812,2,,53003549,1,,"<p>OK, my mistake, I went to fast : in the private app you have many keys : <code>&lt;API key&gt;</code>, <code>&lt;shared secret&gt;</code> and <code>&lt;API Storefront access token&gt;</code>. I used the <code>&lt;API key&gt;</code> instead of the <code>&lt;API Storefront access token&gt;</code>. Now everything is OK...</p>&#xA;",5225096,,,,2018-10-29 07:38:01,"",,0,0,0,2018-10-29 07:38:01
53086741,1,,,0,200,"<p>I'm working with GraphQL and at this point in my code, I have a GraphQLError object, which has a property called <code>extensions</code> which has a type of <code>void | { [key: string]: any; }</code>. This is making it so that if I try to access any property of <code>extensions</code>, I get this error:</p>&#xA;&#xA;<pre><code>x.extensions.code === 'UNAUTHENTICATED'&#xA;&#xA;&#xA;Property 'code' does not exist on type 'void | { [key: string]: any; }'.&#xA;  Property 'code' does not exist on type 'void'.&#xA;</code></pre>&#xA;&#xA;<p>A proposed solution to accessing properties that don't exist on both types in a union type is here: <a href=""https://github.com/Microsoft/TypeScript/issues/12815#issuecomment-266193707"" rel=""nofollow noreferrer"">https://github.com/Microsoft/TypeScript/issues/12815#issuecomment-266193707</a></p>&#xA;&#xA;<pre><code>let pet = getSmallPet();&#xA;&#xA;if ((&lt;Fish&gt;pet).swim) {&#xA;    (&lt;Fish&gt;pet).swim();&#xA;}&#xA;else {&#xA;    (&lt;Bird&gt;pet).fly();&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, I cannot do a type assertion without a type name.</p>&#xA;&#xA;<p>Any ideas on how I can fix this issue?</p>&#xA;&#xA;<p>Regards,&#xA;Richard</p>&#xA;",5701351,,,,2018-10-31 15:21:51,Access property of union type with void and unnamed type,<typescript><graphql><apollo>,1,2,0,2018-10-31 15:17:44
53086805,2,,53086741,1,,"<p>You can use type guards to narrow the type of the union:</p>&#xA;&#xA;<pre><code>declare let o: {&#xA;    extensions: void | { [key: string]: any; }&#xA;}&#xA;&#xA;o.extensions[""test""] // error&#xA;if (o.extensions) {&#xA;    o.extensions[""test""] // ok here&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Note</strong> Your code will throw an error only if you have <code>strictNullChecks</code> turned on</p>&#xA;",125734,,,,2018-10-31 15:21:51,"",,0,0,0,2018-10-31 15:21:51
53101967,1,53103172,,2,229,"<p>I would like to use web-scraping to extract information on listing on the student accomodation website uniplaces. Here's an exemplary listing: <a href=""https://www.uniplaces.com/accommodation/berlin/92342"" rel=""nofollow noreferrer"">https://www.uniplaces.com/accommodation/berlin/92342</a></p>&#xA;&#xA;<p>I would like to extract information such as price, # bathrooms, # roommates,... </p>&#xA;&#xA;<p>However, using different approaches I found online, I have not been able to extract the <strong>full</strong> html code. There are always sub-sections missing, that include the relevant information. On the website you can open these  subsections with a little arrow. I am new to html so I don't understand why this cannot be pulled. </p>&#xA;&#xA;<p>Here's the codes I have tried:</p>&#xA;&#xA;<pre><code>from selenium import webdriver&#xA;from bs4 import BeautifulSoup&#xA;&#xA;options = webdriver.ChromeOptions()&#xA;options.add_argument('headless')&#xA;driver= webdriver.Chrome(chrome_options=options,executable_path=r'path/chromedriver.exe')&#xA;driver.get('https://www.uniplaces.com/accommodation/berlin/92342')&#xA;&#xA;html_doc = driver.page_source&#xA;soup= BeautifulSoup(html_doc,'lxml')&#xA;print (soup.prettify())&#xA;</code></pre>&#xA;&#xA;<p>and variations of this:</p>&#xA;&#xA;<pre><code>import urllib.request&#xA;fp= urllib.request.urlopen(""https://www.uniplaces.com/accommodation/berlin/92342"")&#xA;mybytes = fp.read()&#xA;&#xA;mystr = mybytes.decode(""utf8"")&#xA;fp.close()&#xA;&#xA;print(mystr)&#xA;</code></pre>&#xA;&#xA;<p>If anyone can help with this, I would highly appreciate any tips &amp; tricks!</p>&#xA;&#xA;<p>All the best,&#xA;Hannah</p>&#xA;",10582324,,2614364,2020-06-12 12:05:30,2020-06-12 12:05:30,"Cannot extract full HTML using BeautifulSoup, urllib, selenium",<python><html><web-scraping><beautifulsoup><graphql>,1,1,0,2018-11-01 13:08:57
53108114,1,53108913,,2,3158,"<p>I can't see how to format this graphene query for shopify.  I need to replicate this curl query with graphene in Django:</p>&#xA;&#xA;<pre><code>    curl -X POST \&#xA;""https://&lt;shop&gt;.myshopify.com/api/graphql"" \&#xA;-H ""Content-Type: application/graphql"" \&#xA;-H ""X-Shopify-Storefront-Access-Token: &lt;storefront-access-token&gt;"" \&#xA;-d '&#xA;{&#xA;  shop {&#xA;    collections(first: 5) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          handle&#xA;        }&#xA;      }&#xA;      pageInfo {&#xA;        hasNextPage&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;'&#xA;</code></pre>&#xA;&#xA;<p>So far I have:</p>&#xA;&#xA;<pre><code>access_token = 'some_token'&#xA;    headers = (&#xA;        { ""Content-Type"": ""application/graphql"" },&#xA;        { ""X-Shopify-Storefront-Access-Token"": access_token},&#xA;    )&#xA;    schema = graphene.Schema(query=Query)&#xA;    print(schema)&#xA;    result = schema.execute('{&#xA;        catsinuniform {&#xA;            collections(first: 5) {&#xA;              edges {&#xA;                node {&#xA;                  id&#xA;                  handle&#xA;                }&#xA;              }&#xA;              pageInfo {&#xA;                hasNextPage&#xA;              }&#xA;            }&#xA;        }'')&#xA;    print(result.data['catsinuniform'])&#xA;</code></pre>&#xA;&#xA;<p>This syntax is wrong for graphene but I don't get how it should look? Once I have the data in the right format I can then do a requests post to get the informaiton I want from the shopify storefrontapi</p>&#xA;",5053559,,178800,2018-11-02 16:35:49,2020-01-30 19:18:36,Shopify graphQL query,<django><graphql><shopify-app>,2,2,0,2018-11-01 19:27:58
53108913,2,,53108114,3,,"<p>Graphene is an implemention of the GraphQL spec for Python, meant for creating and executing your own GraphQL schema. It is <strong>not</strong> a GraphQL client for making requests to existing GraphQL servers. You can make calls to the Shopify API using any regular HTTP library, like <code>requests</code>, or you can use something like <a href=""https://github.com/graphql-python/gql"" rel=""nofollow noreferrer"">gql</a>. A simple example:</p>&#xA;&#xA;<pre><code>import requests&#xA;&#xA;access_token = &lt;YOUR TOKEN&gt;&#xA;headers = {&#xA;    ""Content-Type"": ""application/graphql"",&#xA;    ""X-Shopify-Storefront-Access-Token"": access_token&#xA;}&#xA;&#xA;query = """"""&#xA;{&#xA;  shop {&#xA;    collections(first: 5) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          handle&#xA;        }&#xA;      }&#xA;      pageInfo {&#xA;        hasNextPage&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;""""""&#xA;&#xA;request = requests.post('https://&lt;YOUR SHOP&gt;.myshopify.com/api/graphql', json={'query': query}, headers=headers)&#xA;result = request.json()&#xA;</code></pre>&#xA;",6024220,,,,2018-11-01 20:29:10,"",,0,3,0,2018-11-01 20:29:10
53128235,2,,53127991,2,,"<p>I'm not sure what the error is referring to, but you do need to include the operation (<code>query</code> vs <code>mutation</code>) when performing a mutation. That is, your request should look more like this:</p>&#xA;&#xA;<pre><code>mutation ArbitraryOperationName {&#xA;  newBook(&#xA;    isn:""1"",&#xA;    title: ""test title"",&#xA;    publisher: ""test publisher"",&#xA;    authors:""test author"",&#xA;    publishedDate: ""2 Nov 2018""&#xA;  ) {&#xA;    title&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When writing queries, you can use the shorthand notation and omit the <code>query</code> keyword, but mutations must always include <code>mutation</code> to indicate that you are making a mutation and not a query.</p>&#xA;",6024220,,,,2018-11-03 03:45:39,"",,0,1,0,2018-11-03 03:45:39
53131475,1,,,4,5134,"<p>I'm having trouble posting mutations with GraphQL and Python Requests.</p>&#xA;&#xA;<p>My function looks like:</p>&#xA;&#xA;<pre><code>def create(request):&#xA;    access_token = 'REDACTED'&#xA;    headers = {&#xA;        ""X-Shopify-Storefront-Access-Token"": access_token&#xA;    }&#xA;&#xA;&#xA;    mutation = """"""&#xA;    {&#xA;      checkoutCreate(input: {&#xA;        lineItems: [{ variantId: ""Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC80"", quantity: 1 }]&#xA;      }) {&#xA;        checkout {&#xA;           id&#xA;           webUrl&#xA;           lineItems(first: 5) {&#xA;             edges {&#xA;               node {&#xA;                 title&#xA;                 quantity&#xA;               }&#xA;             }&#xA;           }&#xA;        }&#xA;      }&#xA;    }&#xA;    """"""&#xA;&#xA;    data = (requests.post('https://catsinuniform.myshopify.com/api/graphql', json={'mutation': mutation}, headers=headers).json())&#xA;&#xA;&#xA;    print(data)&#xA;    return render(request, 'Stock/create.html', { 'create': data })&#xA;</code></pre>&#xA;&#xA;<p>I'm getting errors saying I have a bad request ""bad_request - Parameter Missing or Invalid"" in my json response. </p>&#xA;",5053559,,6024220,2018-11-03 14:08:59,2018-11-03 14:08:59,Post GraphQL mutation with Python Requests,<python><python-requests><graphql>,1,3,0,2018-11-03 12:49:45
53153142,1,,,15,1219,"<p>I am able to get the list of <em>commits</em> (with fields like <em>commit messages</em>, <em>oid</em>, <em>commit url</em> etc) along with the number of <code>changedFiles</code>, made in a repository on the <code>master</code> branch.<br>&#xA;However I am not able to figure out how to get <strong>any information about the changes themselves and the files that were changed.</strong>   </p>&#xA;&#xA;<p>In v3 of the REST API, the information about the changes were contained in <code>files</code>-><code>patch</code>, and <code>files</code> -> <code>raw_url</code> or <code>blob_url</code> gave info about the original file itself at that stage.  </p>&#xA;&#xA;<p>Q) In v4 of GitHub's API using GraphQL how do I get the corresponding information?  </p>&#xA;&#xA;<p>Query I am stuck with right now (showing only 1 commit for brevity)-</p>&#xA;&#xA;<pre><code>query {&#xA;  rateLimit{&#xA;    cost&#xA;    remaining&#xA;  }&#xA;  repository(owner: ""elastic"", name: ""elasticsearch"") {&#xA;    name&#xA;    defaultBranchRef {&#xA;      name&#xA;      target {&#xA;        ... on Commit {&#xA;          history(first:1){&#xA;            nodes{&#xA;              message&#xA;              changedFiles&#xA;              id&#xA;              oid&#xA;              treeUrl&#xA;              url&#xA;              tree{&#xA;                oid&#xA;              }&#xA;            }&#xA;            pageInfo{&#xA;              hasNextPage&#xA;              startCursor&#xA;              endCursor&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Output:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""rateLimit"": {&#xA;      ""cost"": 1,&#xA;      ""remaining"": 4999&#xA;    },&#xA;    ""repository"": {&#xA;      ""name"": ""elasticsearch"",&#xA;      ""defaultBranchRef"": {&#xA;        ""name"": ""master"",&#xA;        ""target"": {&#xA;          ""history"": {&#xA;            ""nodes"": [&#xA;              {&#xA;                ""message"": ""Small corrections to HLRC doc for _termvectors (#35221)\n\nRelates to #33447"",&#xA;                ""changedFiles"": 2,&#xA;                ""id"": ""MDY6Q29tbWl0NTA3Nzc1OmEyYzIyYWQ3YWViMGY4ZDUxNDg2NzdkZDcyMjJhZDQzYWZlZTlhMTc="",&#xA;                ""oid"": ""a2c22ad7aeb0f8d5148677dd7222ad43afee9a17"",&#xA;                ""treeUrl"": ""https://github.com/elastic/elasticsearch/tree/a2c22ad7aeb0f8d5148677dd7222ad43afee9a17"",&#xA;                ""url"": ""https://github.com/elastic/elasticsearch/commit/a2c22ad7aeb0f8d5148677dd7222ad43afee9a17"",&#xA;                ""tree"": {&#xA;                  ""oid"": ""4f5f11e0e55aeafc4677800959232726a2cd787c""&#xA;                }&#xA;              }&#xA;            ],&#xA;            ""pageInfo"": {&#xA;              ""hasNextPage"": true,&#xA;              ""startCursor"": ""a2c22ad7aeb0f8d5148677dd7222ad43afee9a17 0"",&#xA;              ""endCursor"": ""a2c22ad7aeb0f8d5148677dd7222ad43afee9a17 0""&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3647970,,1290731,2019-02-21 18:25:22,2019-02-21 18:25:22,How to get a GitHub repository's commits along with the files that were changed and the changes themselves using GraphQL,<graphql><github-graphql>,0,3,0,2018-11-05 11:05:12
53174245,2,,52820680,1,,"<p>I have same problem. And I finally find out how to determine the position.</p>&#xA;&#xA;<p>Let's see your PR.</p>&#xA;&#xA;<p><a href=""https://github.com/Kmaschta/comfygure/pull/1/files?utf8=%E2%9C%93&amp;diff=unified#diff-10b371776dce3b12ed817f3fb8704a7d"" rel=""nofollow noreferrer"">https://github.com/Kmaschta/comfygure/pull/1/files?utf8=%E2%9C%93&amp;diff=unified#diff-10b371776dce3b12ed817f3fb8704a7d</a></p>&#xA;&#xA;<p>This file has 2 diff-hunks.</p>&#xA;&#xA;<p>The position is start from first hunk.</p>&#xA;&#xA;<p>The line below the first hunk is position 1.</p>&#xA;&#xA;<p><a href=""https://github.com/Kmaschta/comfygure/pull/1/files?utf8=%E2%9C%93&amp;diff=unified#diff-10b371776dce3b12ed817f3fb8704a7dL1"" rel=""nofollow noreferrer"">https://github.com/Kmaschta/comfygure/pull/1/files?utf8=%E2%9C%93&amp;diff=unified#diff-10b371776dce3b12ed817f3fb8704a7dL1</a></p>&#xA;&#xA;<p>And end of the first hunk is position 36.</p>&#xA;&#xA;<p><a href=""https://github.com/Kmaschta/comfygure/pull/1/files?utf8=%E2%9C%93&amp;diff=unified#diff-10b371776dce3b12ed817f3fb8704a7dL18"" rel=""nofollow noreferrer"">https://github.com/Kmaschta/comfygure/pull/1/files?utf8=%E2%9C%93&amp;diff=unified#diff-10b371776dce3b12ed817f3fb8704a7dL18</a></p>&#xA;&#xA;<p>And somehow github add +1 for end of first hunk to before second hunk start.(36+1)</p>&#xA;&#xA;<p>So, the start line of second hunk is 38.</p>&#xA;&#xA;<p>And you have 34 lines above of your comment in second hunk.</p>&#xA;&#xA;<p>That's why your comment is 71.</p>&#xA;&#xA;<p><a href=""https://github.com/Kmaschta/comfygure/pull/1/files?utf8=%E2%9C%93&amp;diff=unified#diff-10b371776dce3b12ed817f3fb8704a7dR61"" rel=""nofollow noreferrer"">https://github.com/Kmaschta/comfygure/pull/1/files?utf8=%E2%9C%93&amp;diff=unified#diff-10b371776dce3b12ed817f3fb8704a7dR61</a></p>&#xA;&#xA;<p>Github's calculation method is this way.</p>&#xA;&#xA;<p>I think this calculation is something wrong. But if you want to calculate, you can do by this method.</p>&#xA;",4867412,,,,2018-11-06 14:46:52,"",,0,2,0,2018-11-06 14:46:52
53201498,2,,53115487,4,,"<blockquote>&#xA;  <p>Normally we define the query in the front end code. Without doing that, how to let the server decide what to send?</p>&#xA;</blockquote>&#xA;&#xA;<p>Per the <a href=""https://facebook.github.io/graphql/June2018/#sec-Execution"" rel=""nofollow noreferrer"">spec</a>, a GraphQL execution request must include two things: 1) a schema; and 2) a document containing an operation definition. The operation definition determines what operation (which query or mutation) to execute as well as the format of the response. There are work arounds and exceptions (I'll discuss some below), but, in general, <strong>if specifying the shape of the response on the client-side is undesirable or somehow not possible, you should carefully consider whether GraphQL is the right solution for your needs</strong>.</p>&#xA;&#xA;<p>That aside, GraphQL lends itself more to a single request, not a series of structured requests like your existing REST API requires. So the response would look more like this:</p>&#xA;&#xA;<pre><code>[&#xA;  {&#xA;    title: 'News',&#xA;    content: [&#xA;      ...&#xA;    ],&#xA;  },&#xA;  {&#xA;    title: 'Photos',&#xA;    content: [&#xA;      ...&#xA;    ],&#xA;  }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>and the corresponding query might look like this:</p>&#xA;&#xA;<pre><code>query HomePageContent {&#xA;  blocks {&#xA;    title&#xA;    content {&#xA;      # additional fields&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now the question becomes how do differentiate between different kinds of <code>content</code>. This is normally solved by utilizing an interface or union to aggregate multiple types into a single abstract type. The exact structure of your schema will depend on the data you're sending, but here's an example:</p>&#xA;&#xA;<pre><code>interface BlockContentItem {&#xA;  id: ID!&#xA;  url: String!&#xA;}&#xA;&#xA;type Story implements BlockContentItem {&#xA;  id: ID!&#xA;  url: String!&#xA;  author: String!&#xA;  title: String! &#xA;}&#xA;&#xA;type Image implement BlockContentItem {&#xA;  id: ID!&#xA;  url: String!&#xA;  alt: String!&#xA;}&#xA;&#xA;type Block {&#xA;  title: String!&#xA;  content: [BlockContentItem!]!&#xA;}&#xA;&#xA;type Query {&#xA;  blocks: [Block!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can now query <code>blocks</code> like this:</p>&#xA;&#xA;<pre><code>query HomePageContent {&#xA;  blocks {&#xA;    title&#xA;    content {&#xA;      # these fields apply to all BlockContentItems&#xA;      __typename&#xA;      id&#xA;      url&#xA;      # then we use inline fragments to specify type-specific fields&#xA;      ... on Image {&#xA;        alt&#xA;      }&#xA;      ... on Story {&#xA;        author&#xA;        title&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Using inline fragments like this ensures type-specific fields are only returned for instances of those types. I included <code>__typename</code> to identify what type a given object is, which may be helpful to the client app (clients like Apollo automatically include this field anyway).</p>&#xA;&#xA;<p>Of course, there is still the issue of what happens when you want to add a new block. If the block's content fits an existing type, no sweat. But what happens when you anticipate you will need a different type in the future, but can't design around that right now?</p>&#xA;&#xA;<p>Typically, that sort of change would require both a schema change on the server and a query change on the client. And in <strong>most cases</strong>, this will probably be fine because if you're getting data in a different structure, <strong>you will have to update your client app anyway</strong>. Otherwise, your app won't know how to render the new data structure correctly.</p>&#xA;&#xA;<p>But let's say we want to future-proof our schema anyway. Here's two ways you could go about doing it.</p>&#xA;&#xA;<ol>&#xA;<li><p>Instead of specifying an interface for <code>content</code>, just utilize a custom JSON scalar. This will effectively throw the response validation out the window, but it will allow you to return whatever you want for the content of a given block.</p></li>&#xA;<li><p>Abstract out whatever fields might be needed in the future into some kind of value-key type. For example:</p></li>&#xA;</ol>&#xA;&#xA;<p>. </p>&#xA;&#xA;<pre><code>type MetaItem {&#xA;  key: String!&#xA;  value: String!&#xA;}&#xA;&#xA;type Block {&#xA;  title: String!&#xA;  meta: [MetaItem!]!&#xA;  # other common fields&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>There's any number of other workarounds, some better than others depending on the kind of data you're working with. But hopefully that gives you some idea how to address the scenario you describe in a GraphQL context.</p>&#xA;",6024220,,6024220,2018-11-08 14:57:02,2018-11-08 14:57:02,"",,0,0,0,2018-11-08 04:18:12
53217252,1,53228362,,2,1968,"<p>I am specifically using the shopify graphql admin api to query orders.</p>&#xA;&#xA;<p>I want to do a search for a nested related field.</p>&#xA;&#xA;<p>Below is my query.</p>&#xA;&#xA;<pre><code>export const orderHistoryQuery = gql`&#xA;  query Order($productsFirst: Int!, $productsAfter: String, $filterQuery: String) {&#xA;    orders(first: $productsFirst, after: $productsAfter, reverse: true, query:$filterQuery) {&#xA;      edges {&#xA;        cursor&#xA;        node {&#xA;          id&#xA;          name&#xA;          customer {&#xA;            id&#xA;            metafields(first: 10) {&#xA;              edges {&#xA;                node {&#xA;                  id&#xA;                  key&#xA;                  value&#xA;                  namespace&#xA;                }&#xA;                cursor&#xA;              }&#xA;            }&#xA;          }&#xA;          totalPriceSet {&#xA;            shopMoney {&#xA;              amount&#xA;              currencyCode&#xA;            }&#xA;          }&#xA;          subtotalPriceSet {&#xA;            shopMoney {&#xA;              amount&#xA;              currencyCode&#xA;            }&#xA;          }&#xA;          totalRefundedSet {&#xA;            shopMoney {&#xA;              amount&#xA;              currencyCode&#xA;            }&#xA;          }&#xA;          currencyCode&#xA;          email&#xA;          phone&#xA;          processedAt&#xA;          totalShippingPriceSet {&#xA;            shopMoney {&#xA;              amount&#xA;              currencyCode&#xA;            }&#xA;          }&#xA;          totalTaxSet {&#xA;            shopMoney {&#xA;              amount&#xA;              currencyCode&#xA;            }&#xA;          }&#xA;          shippingAddress {&#xA;            firstName&#xA;            lastName&#xA;            address1&#xA;            address2&#xA;            city&#xA;            province&#xA;            zip&#xA;            country&#xA;          }&#xA;          billingAddress {&#xA;            firstName&#xA;            lastName&#xA;            address1&#xA;            address2&#xA;            city&#xA;            province&#xA;            zip&#xA;            country&#xA;          }&#xA;          customAttributes {&#xA;            key&#xA;            value&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>I want to query metafields or ANYTHING really but it doesn't seem like it's supported. I am not sure if I just have the wrong query syntax or if it's not supported. The shopify search syntax documenation doesn't really help and this is where my knowledge of graphql falls apart.</p>&#xA;&#xA;<p>Is it possible to do this in graphql? I also tried adding metafields(id: $whateverID) which is not supported by their setup.</p>&#xA;",5282943,,,,2018-11-09 15:12:10,GraphQL: Is it possible to search nested field?,<graphql><shopify>,2,0,0,2018-11-08 22:42:33
53228362,2,,53217252,3,,"<p>Unfortunately, Shopify doesn't support query filters on <code>metafields</code>. The best way to figure this out is by using a graphql explorer like <a href=""https://github.com/graphql/graphiql"" rel=""nofollow noreferrer"">GraphiQL</a>. Shopify dashboard has this built in if you go to Apps > Shopify GraphiQL App.</p>&#xA;&#xA;<p>Using GraphiQL you can see that:</p>&#xA;&#xA;<ol>&#xA;<li>Customers query doesn't have metafields supported:&#xA;<a href=""https://i.stack.imgur.com/5Dhkd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5Dhkd.png"" alt=""customers query""></a></li>&#xA;<li>Orders query doesn't have customers or metafields supported:&#xA;<a href=""https://i.stack.imgur.com/4i6G2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4i6G2.png"" alt=""orders query""></a></li>&#xA;<li>And metafields on customers doesn't have a query param:&#xA;<a href=""https://i.stack.imgur.com/weKYm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/weKYm.png"" alt=""metafields params""></a></li>&#xA;</ol>&#xA;&#xA;<p><strong>I think your options are to either query by what you can and filter after you get the results or use a customer tag and query by tag.</strong></p>&#xA;",605739,,,,2018-11-09 15:12:10,"",,0,0,0,2018-11-09 15:12:10
53236287,2,,53236215,3,,<p>After hours... This worked I just needed to add a resolver and return parent.dataValues.companyId</p>&#xA;,1604072,,1604072,2018-11-18 14:36:37,2018-11-18 14:36:37,"",,0,0,0,2018-11-10 05:35:40
53249698,1,,,1,284,"<p>When I do JSON.stringify of an array using </p>&#xA;&#xA;<pre><code>let query = '{""query"":""mutation {\\n  insert_'+table_name +'(objects: '+ &#xA;JSON.stringify(objects)+', on_conflict: {action: update, constraint: '+table_name +&#xA;'_h_id_key, update_columns: '+update_columns+&#xA;'}) {\\n    affected_rows\\n  }\\n}\\n"",""variables"":null}';&#xA;</code></pre>&#xA;&#xA;<p>it gives me this</p>&#xA;&#xA;<pre><code>{""query"":""mutation {\n  insert_users(objects: [{""h_id"":""118208723166374240159"",""career_id"":""118208723166374240159"",""name"":""Joey Dash"",""email"":""joydassudipta@gmail.com"",""role"":""user"",""image_url"":""https://lh3.googleusercontent.com/-hjMQ9VBKHIw/AAAAAAAAAAI/AAAAAAAAFDk/ePiRR90JHaM/s96-c/photo.jpg""}], on_conflict: {action: update, constraint: users_h_id_key, update_columns: [name,email,role]}) {\n    affected_rows\n  }\n}\n"",""variables"":null}&#xA;</code></pre>&#xA;&#xA;<p>notice each key is getting a """" which i don't want&#xA;I want something like this</p>&#xA;&#xA;<pre><code>{""query"":""mutation {\n  insert_users(objects: [{h_id: \""esda\"", career_id: \""esda\"", name: \""joey\"", email: \""joey@joey.com\"", role: \""user\"", image_url: \""kajids.png\""}], on_conflict: {action: update, constraint: users_h_id_key, update_columns: [name, email, image_url]}) {\n    affected_rows\n  }\n}\n"",""variables"":null}&#xA;</code></pre>&#xA;&#xA;<p>I want it like this because I am using graphql and it gives me lot of error</p>&#xA;&#xA;<p>Is there anyway to make it like this</p>&#xA;",7873884,,,,2018-11-11 14:45:46,"JSON.stringify is not working fine gives an extra """" to the key of a json",<javascript><graphql>,1,2,0,2018-11-11 14:29:12
53249827,2,,53249698,1,,"<p>Its a good start that you have, but since you are already formatting JSON into which you are adding JSON.stringify(objects), it's not properly formatted for that placement. Instead you want to build your own string and concat it (like you are doing with table name).</p>&#xA;&#xA;<p><code>(objects: ['+ objects.map(function(object){ var str = '{'; /* iterate over key, value of object, adding it to string */ return str + '}';}).join(',') +']</code></p>&#xA;",5585943,,,,2018-11-11 14:45:46,"",,0,0,0,2018-11-11 14:45:46
53251722,1,,,0,253,<p>I would like to manipulate the cart based on tags on products in the cart. I'm currently using the Shopify Ajax API to retrieve the cart contents and then the products in the cart. This leads to performance issues given the number of calls required. This is a classic issue addressed by GraphQL so I'm wondering if there is a solution available</p>&#xA;,4179073,,,,2018-11-11 18:19:06,Does Shopify Ajax API support Graphql?,<graphql><shopify><shopify-app>,1,0,0,2018-11-11 18:12:46
53251778,2,,53251722,0,,"<p>How is making a call to the cart endpoint and getting back the contents a performance issue? Have you thought through what you are trying to do? If you do a single call to the cart, you get all the products in the cart. If you want to manipulate the products in the cart, what does that mean? If you are saying, geez, I need to see the tags of each product, and you then do an ajax call per product to get the tags, you are doing it wrong. Instead, when you place a product in the cart, add the special tag as a line item property. That way, when you want to play with the cart, you have all the data at your fingertips. </p>&#xA;&#xA;<p>This is not a ""classic GraphQL"" kind of thing in my opinion, but instead, a question of perhaps not adopting the cleanest, fastest pattern of the many you could choose to use.</p>&#xA;",210841,,,,2018-11-11 18:19:06,"",,0,4,0,2018-11-11 18:19:06
53308814,1,53309590,,0,418,"<p>My type definition is like this</p>&#xA;&#xA;<pre><code>type COMPANY {&#xA;    ""AIRLINE SEGMENT"": String             &#xA;    AIRLINE_TYPE: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get an error saying</p>&#xA;&#xA;<pre><code>apollo server GraphQLError: Syntax Error: Expected Name, found :&#xA;</code></pre>&#xA;&#xA;<p>If I remove the space and quotes then I don't get an error. I have searched everywhere but I haven't a way to add names with spaces in them.</p>&#xA;&#xA;<p>Any help will be highly appreciated.&#xA;Thanks.</p>&#xA;",1552611,,,,2018-11-14 22:19:07,In Neo4j Graphql Apollo server type definition how to add names with spaces?,<neo4j><graphql><apollo-server><express-graphql><grandstack>,1,0,0,2018-11-14 21:14:35
53320140,2,,53318805,2,,"<p>If an argument is an Input Object Type (as opposed to a Scalar), you can include the fields of the Input Object Type by using curly brackets.</p>&#xA;&#xA;<pre><code>query MyProductsQuery {&#xA;  allProducts(&#xA;    pageNumber: ""someString""&#xA;    filter: {&#xA;      title: ""someOtherString""&#xA;      yearFrom: 1900&#xA;      location: {&#xA;        city: ""yetAnotherString""&#xA;        state: ""FL""&#xA;      }&#xA;    }&#xA;  ) {&#xA;    id&#xA;    # other product fields&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Of course, hardcoding those values in a <code>.graphql</code> file is not very helpful. You probably want to be able to swap those values out programatically. So here's what that same query looks like with variables:</p>&#xA;&#xA;<pre><code>query MyProductsQuery($pageNumber: String, $filter: FilterInput) {&#xA;  allProducts(pageNumber: $pageNumber, filter: $filter) {&#xA;    id&#xA;    # other product fields&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Your variables are passed in separately from your query and unlike your query, are <strong>not</strong> a GraphQL document. They are just JSON:</p>&#xA;&#xA;<pre><code>{&#xA;  ""pageNumber"": ""someString"",&#xA;  ""filter"": {&#xA;    ""title"": ""someOtherString"",&#xA;    ""yearFrom"": 1900,&#xA;    ""location"": {&#xA;      ""city"": ""yetAnotherString"",&#xA;      ""state"": ""FL""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6024220,,,,2018-11-15 13:05:12,"",,0,0,0,2018-11-15 13:05:12
53347127,2,,53347054,1,,"<p>Input objects are constructed using brackets like below:</p>&#xA;&#xA;<pre><code>mutation updateProperty {&#xA;    updateProperty(input: {&#xA;      id: ""myID"",&#xA;      address: ""myAddress""&#xA;    }) {&#xA;      address&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is some additional documentation on input objects can be found here:</p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://graphql.org/learn/schema/#input-types"" rel=""nofollow noreferrer"">https://graphql.org/learn/schema/#input-types</a></li>&#xA;<li><a href=""https://graphql.org/graphql-js/mutations-and-input-types/"" rel=""nofollow noreferrer"">https://graphql.org/graphql-js/mutations-and-input-types/</a></li>&#xA;</ul>&#xA;",5683782,,5683782,2018-11-19 19:21:48,2018-11-19 19:21:48,"",,0,1,0,2018-11-17 00:41:39
53355871,2,,53355476,2,,"<p>You need to add a selection set for <code>itemsInCart</code>. The key is not that this is an array, but that it resolves to an object (or an array of objects), which means you have to specify which fields on those objects you are requesting. If you did this for a server-side query, your query would actually blow up, but because of the way <code>apollo-link-state</code> derives state from the defaults, it ends up just resolving to undefined.</p>&#xA;&#xA;<pre><code>const CART_QUERY = gql`&#xA;  query product {&#xA;    test @client&#xA;    itemsInCart @client {&#xA;      name&#xA;      price&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;",6024220,,,,2018-11-17 21:48:49,"",,0,0,0,2018-11-17 21:48:49
53401016,2,,51972020,3,,"<p>You could try using <a href=""https://developer.github.com/v4/query/#search"" rel=""nofollow noreferrer"">Github GraphQL's search</a> (more of a v3 REST contruct, but still available in v4 graphQL).  The <a href=""https://developer.github.com/v3/search/#parameters-3"" rel=""nofollow noreferrer""><code>query</code></a> string specifies the owner, repo name, <a href=""https://help.github.com/articles/understanding-the-search-syntax/#query-for-dates"" rel=""nofollow noreferrer"">date range</a> of the pull requests last updated (which serves as an approximation of when comments/reviews are created), and type <code>pr</code>.</p>&#xA;&#xA;<p>The new query, building on top of what you have so far, with a bit of modification:</p>&#xA;&#xA;<pre><code>{&#xA;  search(first: 100, query: ""repo:DSpace/DSpace updated:2018-11-01..2018-12-01 type:pr"", type: ISSUE) {&#xA;    nodes {&#xA;      ... on PullRequest {&#xA;        # use part of your original query from here onward&#xA;        state&#xA;        resourcePath&#xA;        comments(last: 100) {&#xA;          nodes {&#xA;            author {&#xA;              login&#xA;            }&#xA;          }&#xA;        }&#xA;        reviews(last: 100) {&#xA;          nodes {&#xA;            author {&#xA;              login&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1476898,,,,2018-11-20 20:27:26,"",,0,0,0,2018-11-20 20:27:26
53437171,2,,53435609,0,,"<p>As the error indicates, you haven't defined a type for the <code>year</code> field. Instead, you've accidentally added a <code>rate</code> field:</p>&#xA;&#xA;<pre><code>year: {&#xA;    rate: GraphQLInt, // &lt;-- here&#xA;    async resolve(objId) {&#xA;        const movieFind = await Movie.findOne({ _id: objId._id})&#xA;        return movieFind.year&#xA;    }&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>Just change <code>rate</code> to <code>type</code> and you'll be good to go :)</p>&#xA;",6024220,,,,2018-11-22 19:36:48,"",,0,0,0,2018-11-22 19:36:48
53445869,1,,,0,46,<pre><code>subscription updateListSubscription {&#xA;    User(filter: {mutation_in: [CREATED]}) {&#xA;        mutation&#xA;        node {&#xA;            id&#xA;            name&#xA;            addressList{&#xA;                edges {&#xA;                    node {&#xA;                        id&#xA;                    }&#xA;                }&#xA;            }                               &#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>For the above query getting error: Cannot query field 'edges' on type AddressList. Note AddressList is a mapping of each address to each user.</p>&#xA;,5861784,,,,2018-11-23 11:28:53,Graphcool RELAY Subscription: subscribe to edges,<graphql-js><relayjs><relay><graphcool><relaymodern>,0,3,0,2018-11-23 11:28:53
53469999,2,,53469612,1,,"<p>You get a clean slate of cost calls per shop. If one shop is at zero, you may still have 1000 waiting for you on another shop. You should ensure your calling mechanism is clear on that! Only sleep a thread per shop. You should be able to assign a request to a thread, so that if it sleeps you are still operating with other threads. I would be laughing my ass off if PHP operated with one thread assigned to all requests. That would be so 1982 computing!</p>&#xA;",210841,,,,2018-11-25 17:25:57,"",,0,2,0,2018-11-25 17:25:57
53474643,1,,,1,85,"<p>with <strong>GraphQL API v4</strong>, I want to fetch commit infos (such as committer, committedDate ) on a file under designated release tag. But unfortunately, below script, I always get blank result with no errors. Nowadays, github cannot get commit info via GraphQL?</p>&#xA;&#xA;<pre><code>{'query': 'query($org_name: String!, $resp_name: String!){&#xA;             repository(owner: $org_name name: $resp_name){&#xA;                    object(expression: ""bgi4004-ios-v1.0:proj.ios_mac/AppConfig.plist""){&#xA;                                                                                ... on Commit{&#xA;                                                                                       committer{&#xA;                                                                                                date&#xA;                                                                                                user{&#xA;                                                                                                     name&#xA;                                                                                                    }&#xA;                                                                                                 }&#xA;                                                                                                }&#xA;                                                                                    id&#xA;                                                                                             }&#xA;                                                                                       }&#xA;                                                          }&#xA;                                                     }', &#xA; 'variables': {""org_name"": ""gz-project"",&#xA;           ""resp_name"": ""bgi4004-unity-cs""}'&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Response:</strong></p>&#xA;&#xA;<pre><code>{u'data': {u'repository': {u'object': {}}}}&#xA;</code></pre>&#xA;&#xA;<p><strong>Reference</strong></p>&#xA;&#xA;<p><a href=""https://developer.github.com/enterprise/2.13/v4/object/repository/"" rel=""nofollow noreferrer"">https://developer.github.com/enterprise/2.13/v4/object/repository/</a></p>&#xA;",7239426,,59870,2018-11-29 20:51:07,2018-11-29 20:51:07,Why is the response empty when retrieving Github commit info with GraphQL (API V4)?,<github><graphql>,0,2,0,2018-11-26 04:04:36
53487524,2,,53487333,2,,"<p>This is because the arguments on a field are only available to its immediate children. If you need to retrieve the argument in nested elements, your top level resolver needs to return the argument as part of the source and your nested element can access it arguments now from the source object.</p>&#xA;",1746370,,,,2018-11-26 19:08:30,"",,0,1,0,2018-11-26 19:08:30
53508053,2,,53507972,33,,"<p>These are <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates"" rel=""noreferrer"">tagged template literals</a>. The part before the backpacks is a reference to a function that will be called to process the string. </p>&#xA;&#xA;<p>The function is passed the variables (the <code>${}</code> parts) as arguments as well as the pieces of the string that surround the variables broken into an array. The return value of the function becomes the value of the template. Because of this very generalized format, you can do almost anything with the function. Here's a quick and dirty example that takes the variables (gathered into an array for convenience), makes them uppercase, and puts them back in the string:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>function upperV(strings, ...vars) {&#xD;&#xA;  /* make vars uppercase */&#xD;&#xA;  console.log(""vars: "", vars)       // an array of the passed in variables&#xD;&#xA;  console.log(""strings:"", strings)  // the string parts&#xD;&#xA;&#xD;&#xA;  // put them together&#xD;&#xA;  return vars.reduce((str, v, i) =&gt; str + v.toUpperCase() + strings[i+1], strings[0]);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;let adverb = ""boldly""&#xD;&#xA;let output = upperV`to ${adverb} split infinitives that no ${'man'} had split before...`;&#xD;&#xA;console.log(output)</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",3874623,,4233593,2020-06-04 15:20:38,2020-06-04 15:20:38,"",,0,0,0,2018-11-27 20:58:58
53544974,1,,,7,8055,"<p>I am trying to query by passing the variable <code>id</code> in the query variable window.  This results in an error <code>""Variable \""$id\"" of required type \""ID!\"" was not provided.""</code></p>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/3Tegv.png"" alt=""a screenshot of GraphQL Playground""></p>&#xA;&#xA;<p>When I run a different query without passing a variable in the query variable section it successfully returns results.</p>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/fLiY3.png"" alt=""a screenshot of GraphQL Playground""></p>&#xA;&#xA;<p>Why does one produce an error, but not the other?</p>&#xA;",4749953,,10008173,2018-11-30 02:52:30,2020-01-27 19:47:09,"""Variable \""$id\"" of required type \""ID!\"" was not provided.""",<graphql><apollo-server>,2,0,0,2018-11-29 17:56:56
53584536,1,,,2,1636,"<p>I'm using GitHub Graphql API and I wrote following code with react-apollo but when I paginate after many requests I get following errors on the console.</p>&#xA;&#xA;<blockquote>&#xA;  <p>You are using the simple (heuristic) fragment matcher, but your queries contain union or interface types. Apollo Client will not be able to accurately map fragments. To make this error go away, use the <code>IntrospectionFragmentMatcher</code> as described in the docs: <a href=""https://www.apollographql.com/docs/react/recipes/fragment-matching.html"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/recipes/fragment-matching.html</a></p>&#xA;</blockquote>&#xA;&#xA;<p>.</p>&#xA;&#xA;<blockquote>&#xA;  <p>WARNING: heuristic fragment matching going on!</p>&#xA;</blockquote>&#xA;&#xA;<p>.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Missing field name in {&#xA;    ""__typename"": ""Organization""&#xA;  }</p>&#xA;  &#xA;  <p>Missing field avatarUrl in {&#xA;    ""__typename"": ""Organization""&#xA;  }</p>&#xA;  &#xA;  <p>Missing field repositories in {&#xA;    ""__typename"": ""Organization""&#xA;  }</p>&#xA;</blockquote>&#xA;&#xA;<p>and I wrote the following codes:</p>&#xA;&#xA;<pre><code>gql`&#xA;  query($username: String!, $nextPage: String) {&#xA;    search(query: $username, type: USER, first: 100, after: $nextPage) {&#xA;      pageInfo {&#xA;        hasNextPage&#xA;        endCursor&#xA;      }&#xA;      edges {&#xA;        node {&#xA;          ... on User {&#xA;            name&#xA;            avatarUrl&#xA;            repositories {&#xA;              totalCount&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;&#xA;handleSubmit = ({ username }) =&gt; {&#xA;    const { client } = this.props;&#xA;    this.setState({&#xA;      loading: true,&#xA;      searchTerm: username,&#xA;    });&#xA;    client&#xA;      .query({&#xA;        query: SEARCH_USER,&#xA;        variables: {&#xA;          username&#xA;        }&#xA;      })&#xA;      .then(({ data }) =&gt; {&#xA;        this.setState({&#xA;          loading: false,&#xA;          searchList: data.search.edges,&#xA;          pagination: data.search.pageInfo,&#xA;        });&#xA;      })&#xA;      .catch(err =&gt; {&#xA;        console.warn(err);&#xA;      });&#xA;  };&#xA;</code></pre>&#xA;",10736111,,,,2019-09-04 02:31:58,Graphql react-apollo IntrospectionFragmentMatcher,<javascript><graphql><apollo><react-apollo>,1,0,0,2018-12-02 20:56:41
53595130,1,,,1,215,"<p>I have a type defined as <code>Device</code> on my Prisma server</p>&#xA;&#xA;<pre><code>type Device {&#xA;  id: ID! @unique&#xA;  type: DeviceType&#xA;  settings: Json&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>On my Gateway however I'd like to resolve the field settings to an actual union type </p>&#xA;&#xA;<pre><code># import Node from './generated/prisma.graphql'&#xA;&#xA;type MobileSettings {&#xA;  firmware: String&#xA;}&#xA;&#xA;type DesktopSettings {&#xA;  os: String&#xA;}&#xA;&#xA;union Settings = MobileSettings | DesktopSettings&#xA;&#xA;type Device implements Node {&#xA;  id: ID!&#xA;  type: DeviceType&#xA;  settings: Json&#xA;}&#xA;&#xA;type Query {&#xA;  devices: [Device]&#xA;  node(id: ID!): Node&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If I add a custom resolver on the <code>Device.settings</code> field, the initial query to get all devices still tries to retrieve the settings field. </p>&#xA;&#xA;<p>How can I resolve the Json field into an actual union type?</p>&#xA;",728045,,,,2018-12-10 15:30:04,Transform Union Type on Gateway to Scalar Type in Service GraphQL in apollo-server,<graphql><apollo><apollo-server><prisma>,1,0,0,2018-12-03 13:44:17
53615284,1,53615489,,3,1017,"<p>I'm following <a href=""https://www.howtographql.com/graphql-ruby/2-queries/"" rel=""nofollow noreferrer"">this guide</a> to learn GraphQL with a Ruby backend, and in the section ""Query for Returning Links"", there is the following code:</p>&#xA;&#xA;<pre><code># defines a new GraphQL type&#xA;Types::LinkType = GraphQL::ObjectType.define do&#xA;  # this type is named `Link`&#xA;  name 'Link'&#xA;&#xA;  # it has the following fields&#xA;  field :id, !types.ID&#xA;  field :url, !types.String&#xA;  field :description, !types.String&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>I know that the exclamation mark is simply a 'not' operator, but can anybody explain its purpose here?</p>&#xA;",4274008,,,,2018-12-04 19:24:57,What is the purpose of exclamation marks in field definitions for GraphQL types in Ruby?,<ruby-on-rails><ruby><graphql>,2,0,0,2018-12-04 14:36:01
53625619,1,,,4,1440,"<p>Let’s say I have this typical datamodel, the one used in many tutorials:</p>&#xA;&#xA;<pre><code>type User {&#xA;  id: ID! @unique&#xA;  name: String!&#xA;  posts: [Post!]!&#xA;}&#xA;&#xA;type Post {&#xA;  id: ID! @unique&#xA;  title: String!&#xA;  content: String!&#xA;  published: Boolean! @default(value: ""false"")&#xA;  author: User!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there a query I can build to get a list of, let’s say, the 10 Users with more Posts??&#xA;Basically I need to query ordering by “count” of Posts… but I haven’t found a way to do it</p>&#xA;&#xA;<p>Any help will be highly appreciated</p>&#xA;&#xA;<p>Cheers</p>&#xA;",1522176,,,,2019-08-27 06:56:52,Query to get data ordered by the number of items in a relation,<graphql><prisma><prisma-graphql>,2,2,0,2018-12-05 05:20:28
53664189,2,,53568529,1,,"<p>I found a solution : </p>&#xA;&#xA;<p>Instead of returning the sequelize result, I return the 'datavalues' array in the result:</p>&#xA;&#xA;<pre><code>return !result ? [] : result.dataValues;&#xA;</code></pre>&#xA;&#xA;<p>I had to control that the result is not null (no entry for the graphQL request). If anyone has a cleaner answer, I'll be happy to test it! Thanks. </p>&#xA;",10726190,,,,2018-12-07 06:09:34,"",,0,0,0,2018-12-07 06:09:34
53665761,1,53677069,,9,20079,"<p>I have a product and items</p>&#xA;&#xA;<p>Product:</p>&#xA;&#xA;<pre><code>{&#xA;  id: Int&#xA;  style_id: Int&#xA;  items: [items]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Items:</p>&#xA;&#xA;<pre><code>{&#xA;  id: Int&#xA;  product_id: Int&#xA;  size: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to query products but only get back products that have an item with a size.</p>&#xA;&#xA;<p>So a query could look like this:</p>&#xA;&#xA;<pre><code>products(size: [""S"",""M""]) {&#xA;  id&#xA;  style_id&#xA;  items(size: [""S"",""M""]) {&#xA;    id&#xA;    size&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But it seems like there should be a way where I can just do</p>&#xA;&#xA;<pre><code>products {&#xA;  id&#xA;  style_id&#xA;  items(size: [""S"",""M""]) {&#xA;    id&#xA;    size&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And in the resolver for the products I can grab arguments from the nested query and use them.  In this case add the check to only return products that have those sizes.  This way I have the top level returned with pagination correct instead of a lot of empty products.</p>&#xA;&#xA;<p>Is this possible or atleast doing it the other way around:</p>&#xA;&#xA;<pre><code>products(size: [""S"",""M""]) {&#xA;  id&#xA;  style_id&#xA;  items {&#xA;    id&#xA;    size&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And sending the size argument down to the items resolver?  Only way I know would be through context but the one place I found this they said that it is not a great idea because context spans the full query in all depths.</p>&#xA;",1755103,,,,2020-09-24 15:30:07,graphql using nested query arguments on parent or parent arguments on nested query,<graphql><graphql-js>,3,3,0,2018-12-07 08:25:56
53677069,2,,53665761,8,,"<p>I agree with @DenisCappelini's answer. If possible, you can create a new type which represents only Products that have an Item.</p>&#xA;&#xA;<p>However, if you don't want to do that, or if you're just interested in general about how a top-level selector can know about arguments on child selectors, here is a way to do that:</p>&#xA;&#xA;<p>There are 2 ways to do it.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>To do this:</p>&#xA;&#xA;<pre><code>products {&#xA;  id&#xA;  style_id&#xA;  items(size: [""S"",""M""]) {&#xA;    id&#xA;    size&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In graphql, resolvers have this signature:</p>&#xA;&#xA;<pre><code>(obj, args, context, info) =&gt; {}&#xA;</code></pre>&#xA;&#xA;<p>The 4th argument, <code>info</code>, contains information about the entire request. Namely, it knows about arguments on the child selectors.</p>&#xA;&#xA;<p>Use this package, or a similar one because there are others, to parse info for you: <a href=""https://www.npmjs.com/package/graphql-parse-resolve-info"" rel=""noreferrer"">https://www.npmjs.com/package/graphql-parse-resolve-info</a></p>&#xA;&#xA;<hr>&#xA;&#xA;<p>The above is quite a lot of work, so if you want to do this instead:</p>&#xA;&#xA;<pre><code>products(size: [""S"",""M""]) {&#xA;  id&#xA;  style_id&#xA;  items {&#xA;    id&#xA;    size&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then in your resolver for <code>products</code>, you need to also return <code>size</code>.&#xA;Suppose this is your resolver for <code>products</code>:</p>&#xA;&#xA;<pre><code>(parent, args) =&gt; {&#xA;  ...&#xA;  return {&#xA;    id: '',&#xA;    style_id: ''&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Modify your resolver to also return size like this:</p>&#xA;&#xA;<pre><code>(parent, args) =&gt; {&#xA;  ...&#xA;  return {&#xA;    id: '',&#xA;    style_id: '',&#xA;    size: [""S"", ""M""]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now in your resolve for <code>products.items</code>, you will have access to the <code>size</code>, like this:</p>&#xA;&#xA;<pre><code>(product, args) =&gt; {&#xA;  const size = product.size&#xA;}&#xA;</code></pre>&#xA;",1173166,,,,2018-12-07 21:35:18,"",,0,2,0,2018-12-07 21:35:18
53710495,1,,,4,160,"<p>I wonder if there is a catch to using <code>info.mergeInfo</code> when delegating a resolver. To explain what I'm trying to do let's assume a schema similar to:</p>&#xA;&#xA;<pre><code>type Repository {&#xA;    id: Int!&#xA;    commits: [Commit!]!&#xA;}&#xA;type Commit {&#xA;    id: Int!&#xA;    repository: Repository!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm trying to implement a query similar to:</p>&#xA;&#xA;<pre><code>query {&#xA;    RepositoryByCommit($id: Int!) {&#xA;        commit(id: $id) {&#xA;            repository {&#xA;                id&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>With a resolver like:</p>&#xA;&#xA;<pre><code>Query: {&#xA;    repository: (_, { id }) =&gt; db.getRepository(id),&#xA;    commit: (_, { id }) =&gt; db.getCommit(id)&#xA;},&#xA;Commit: {&#xA;    repository: (repository, args, context, info) {&#xA;        return info.mergeInfo.delegate({ // &lt;-- mergeInfo is undefined here&#xA;            operation: 'query',&#xA;            fieldName: 'repository',&#xA;            args: {&#xA;                id: context.commitRawDBEntity.repositoryId&#xA;            }&#xA;        })&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now according to <a href=""https://www.apollographql.com/docs/graphql-tools/schema-stitching.html#adding-resolvers"" rel=""nofollow noreferrer"">graphql-tools documentation</a> there should be a set of functions available on <code>info.mergeInfo</code> for all resolvers. But in my case there is no property called <code>info.mergeInfo</code> nor anything similar.</p>&#xA;&#xA;<p>It's worth to mention that I'm using <code>makeExecutableSchema</code> from <code>graphql-tools</code> to serve this GraphQL endpoint so I had the reason to assume that graphql-tools somehow would add that functionality to all resolvers.</p>&#xA;&#xA;<p>Am I doing it all wrong? Why don't I have a <code>mergeInfo</code> object in my resolver? Are there better ways to achieve a resolution of parent entity?</p>&#xA;&#xA;<p>Thanks !</p>&#xA;",1839089,,,,2018-12-10 17:14:32,GraphQL scheme delegation: info.mergeInfo is not defined,<graphql><apollo><apollo-server>,0,0,0,2018-12-10 17:14:32
53710691,1,,,0,304,"<p>I will have my api return data in this format</p>&#xA;&#xA;<pre><code>[{ &#xA;“Type”:”alpha”,&#xA;“Count”:5&#xA;&#xA;},&#xA;{&#xA;“Type”:”beta”,&#xA;“Count”:7&#xA;}&#xA;&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>What would be my query string?</p>&#xA;&#xA;<pre><code>const Levels = gql`&#xA;  {&#xA;Levelsquery {&#xA;  Type&#xA;  Count&#xA;}&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>Above does not work because there is no levelsquery key, the whole response is an array</p>&#xA;&#xA;<p>The current problem is that this api is kind of fixed from the server,it does not matter if it is a graphql query or a simple REst query, the output will always be the same so then I need to handle my client query to reflect it’s output </p>&#xA;&#xA;<p>I know it is wrong to have this in graphql, but this is what it is and I cannot change it currently </p>&#xA;",7658296,,7658296,2018-12-19 19:01:31,2018-12-19 19:01:31,React apollo query string for array of objects,<javascript><reactjs><graphql><apollo><react-apollo>,0,2,0,2018-12-10 17:28:07
53759367,2,,53709854,0,,"<p>Only root aliases seem to work for now (dec. 2018): <a href=""https://github.com/prisma/graphql-yoga/issues/340"" rel=""nofollow noreferrer"">https://github.com/prisma/graphql-yoga/issues/340</a></p>&#xA;&#xA;<p>Refactor into 2 graphql queries will solve it.</p>&#xA;",6430382,,,,2018-12-13 10:06:59,"",,0,0,0,2018-12-13 10:06:59
53766939,1,,,4,7789,"<p>I'm new in Graphql and i'd like to know if there is a way to return an empty array instead of null in a relation.&#xA;Let pick the classic example with User and Post</p>&#xA;&#xA;<pre><code>type User {&#xA;  id: ID!&#xA;  posts: [Post]&#xA;}&#xA;&#xA;Type Post {&#xA;  id: ID!&#xA;  comment: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>when i make a query on an user without any post i'd like to have an empty array on posts attribute, but now i get <code>null</code>, how can i do that?&#xA;Thanks in advance.</p>&#xA;",8052271,,,,2018-12-13 17:30:35,"Graphql, how to return empty array instead of null",<graphql>,1,1,0,2018-12-13 17:12:15
53809814,2,,53777762,0,,"<p>give this a try;</p>&#xA;&#xA;<p>1) remove <code>return us &amp;&amp; tm</code> </p>&#xA;&#xA;<p>2) declare array: <code>var results = [us , tm];</code></p>&#xA;&#xA;<p>3) return array: <code>return results</code></p>&#xA;",7808346,,,,2018-12-17 06:15:48,"",,0,0,0,2018-12-17 06:15:48
53815608,2,,53814669,0,,"<p>I have figured out solution for above issue. Instead of providing field id(key) of type return Type of field should be used in nested resolver.</p>&#xA;&#xA;<p>Following is solution which worked for me.</p>&#xA;&#xA;<pre><code>const Resolvers = {&#xA;    Query: {&#xA;        ABCDList: () =&gt; []&#xA;    },&#xA;    ABCD: {&#xA;        reference: () =&gt; [] &#xA;    },&#xA;    NestedLevel1: {&#xA;        reference: () =&gt; [] &#xA;    }&#xA;}&#xA;</code></pre>&#xA;",3236993,,,,2018-12-17 12:49:01,"",,0,0,0,2018-12-17 12:49:01
53862730,1,53923870,,3,1021,"<p>I'm struggling with the github graphql interface to get the data that I need. I want to get a list of asset urls for both tags and releases. It seems that some repos produce my desired result while others produce nothing.</p>&#xA;&#xA;<pre><code>query {&#xA; repository(owner:""erlang"",name:""otp"") {&#xA;    releases(last:100) {&#xA;      edges {&#xA;        node {&#xA;          url&#xA;          releaseAssets(last:100) {&#xA;            edges {&#xA;              node {&#xA;                downloadUrl&#xA;              }&#xA;            }&#xA;          }&#xA;          tag {&#xA;            name&#xA;            target {&#xA;              ... on Commit {&#xA;                zipballUrl&#xA;                tarballUrl&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;    tags:refs(refPrefix:""refs/tags/"", last:30) {&#xA;      edges {&#xA;        tag:node {&#xA;          name&#xA;          target {&#xA;            sha:oid&#xA;            commitResourcePath&#xA;            ... on Commit {&#xA;              zipballUrl&#xA;              tarballUrl&#xA;              author {&#xA;                name&#xA;                email&#xA;                date&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That query, as is, produces my desired results(or at least some them) whereas owner:""spring-projects"",name:""spring-framework"" produces tags with no tarball. When I look at the spring-framework repo it obviously has assets for releases. </p>&#xA;&#xA;<p>Why are they not showing in this query? When I look at git every release and tag has assets yet, even in my query, the results are hit or miss. What am I missing?</p>&#xA;",4298102,,2614364,2018-12-26 00:43:18,2018-12-26 00:43:18,Github list of tag and release asset urls,<github><graphql><github-api><github-graphql>,1,0,0,2018-12-20 05:11:21
53863038,2,,53849330,2,,"<p>This was the solution. </p>&#xA;&#xA;<p>import { gql } from 'apollo-boost'</p>&#xA;&#xA;<p>'gql' needed to be wrapped in brackets. Go figure. Here is where I found the solution.</p>&#xA;&#xA;<p><a href=""https://github.com/apollographql/apollo-client/issues/3327"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client/issues/3327</a></p>&#xA;&#xA;<p>Scott</p>&#xA;",4356329,,,,2018-12-20 05:47:15,"",,0,0,0,2018-12-20 05:47:15
53878566,1,54418219,,9,8866,"<p>Using GraphQL to fetch and parse a config file, sometimes the file name be <code>podfile</code>, sometimes be <code>Podfile</code>, so I am wondering how to make a case-insensitive query? </p>&#xA;&#xA;<p>now I only can query repository->object: podfile and Podfile, but if the file name be <code>podFILE</code>, again not works.</p>&#xA;&#xA;<pre><code>query($org_name: String!, $resp_name: String!)&#xA;                {&#xA;                repository(owner: $org_name name: $resp_name){&#xA;                          object: object(expression: ""%s:proj.ios_mac/podfile""){&#xA;                                                              ... on Blob{&#xA;                                                                          text&#xA;                                                                          }&#xA;                                                              }&#xA;                          ios_object_1: object(expression: ""%s:proj.ios_mac/Podfile""){&#xA;                                                              ... on Blob{&#xA;                                                                          text&#xA;                                                                          }&#xA;                                                              }&#xA;                          }&#xA;                }&#xA;</code></pre>&#xA;&#xA;<p>REF:<a href=""https://github.community/t5/How-to-use-Git-and-GitHub/graphql-api-resource-query-is-case-sensitive/m-p/6003"" rel=""noreferrer"">https://github.community/t5/How-to-use-Git-and-GitHub/graphql-api-resource-query-is-case-sensitive/m-p/6003</a></p>&#xA;",7239426,,7239426,2018-12-21 02:56:58,2022-08-27 17:01:18,how to make a case-insensitive graphql query?,<graphql>,4,0,0,2018-12-21 02:45:56
53886508,1,,,0,56,"<p>I'm writing a GraphQL query that will return mongoose data:</p>&#xA;&#xA;<pre><code>export const getInventory = () =&gt; {&#xA;    let query = {&#xA;        deletedAt: null&#xA;    };&#xA;&#xA;    let stocks = await StockModel.find(query)&#xA;        .sort({ material: 1 });&#xA;&#xA;    // Now separate each inventory item per material&#xA;    let inventory = {};&#xA;    stocks.map(stock =&gt; {&#xA;        if (inventory[stock.material]) {&#xA;            inventory[stock.material].quantity += stock.quantity;&#xA;        } else {&#xA;&#xA;            let clone = Object.assign({}, stock);&#xA;            clone.lot = null;&#xA;            clone.expirationDateTime = null;&#xA;            clone.partNumber = null;&#xA;            clone.manufacturer = null;&#xA;&#xA;            inventory[stock.material] = clone;&#xA;        }&#xA;    });&#xA;&#xA;    let list = Object.keys(inventory).map(key =&gt; {&#xA;        return inventory[key];&#xA;    });&#xA;&#xA;    return list;&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Here is my inventory GraphQL query:</p>&#xA;&#xA;<pre><code>const inventory = {&#xA;    type: new GraphQLList(StockType),&#xA;    description: ""Get all inventory"",&#xA;    resolve(root, args, context) {&#xA;        return getInventory();&#xA;    }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>When running the following query:</p>&#xA;&#xA;<pre><code>{&#xA;  viewer {&#xA;    inventory() {&#xA;      id&#xA;      quantity&#xA;      lot&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm getting the following GraphQL error: </p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Expected value of type \""Stock\"" but got: [object Object]."",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 3,&#xA;          ""column"": 5&#xA;        }&#xA;      ],&#xA;      ""stack"": ""Expected value of type \""Stock\"" but got: [object Object].\n\nGraphQL request (3:5)\n2:   viewer {\n3:     inventory {\n       ^\n4:       id\n\n    at invalidReturnTypeError (/dev/node_modules/graphql/execution/execute.js:766:10)\n    at completeObjectValue (/dev/node_modules/graphql/execution/execute.js:758:13)\n    at completeValue (/dev/node_modules/graphql/execution/execute.js:660:12)\n    at completeValueWithLocatedError (/dev/node_modules/graphql/execution/execute.js:580:21)\n    at completeValueCatchingError (/dev/node_modules/graphql/execution/execute.js:556:21)\n    at /dev/node_modules/graphql/execution/execute.js:684:25\n    at Array.forEach (&lt;anonymous&gt;)\n    at forEach (/dev/node_modules/iterall/index.js:83:25)\n    at completeListValue (/dev/node_modules/graphql/execution/execute.js:680:24)\n    at completeValue (/dev/node_modules/graphql/execution/execute.js:643:12)\n    at /dev/node_modules/graphql/execution/execute.js:617:14\n    at process._tickCallback (internal/process/next_tick.js:68:7)"",&#xA;      ""path"": [&#xA;        ""viewer"",&#xA;        ""inventory"",&#xA;        0&#xA;      ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can I solve the error?</p>&#xA;",2697571,,472495,2019-08-31 22:05:00,2019-08-31 22:05:00,GraphQL + Mongoose: How to change property of mongoose retrieved data,<javascript><node.js><mongodb><mongoose><graphql>,0,3,0,2018-12-21 14:34:22
53922003,2,,53921926,1,,"<p>The error says it expecting an <strong>Array</strong> but I don't see any array in your <code>calToAction</code> Query, I guess this might fix your problem:</p>&#xA;&#xA;<pre><code>export const query = graphql`&#xA;  query($path: String!) {&#xA;    cms {&#xA;      headerActions: callToActions(&#xA;        where: [ { placement: Header, AND: { pages_some: { path: $path } } } ]&#xA;      ) {&#xA;        url&#xA;        label&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;",2586595,,,,2018-12-25 11:36:42,"",,0,1,0,2018-12-25 11:36:42
53923870,2,,53862730,2,,"<p>target is a <a href=""https://developer.github.com/v4/object/ref/"" rel=""nofollow noreferrer"">git reference</a>, in that case it can point to a <a href=""https://developer.github.com/v4/object/tag/"" rel=""nofollow noreferrer""><code>Tag</code></a> or a <a href=""https://developer.github.com/v4/object/commit/"" rel=""nofollow noreferrer""><code>Commit</code></a> object. When it points to a <code>Commit</code>, your query returns the expected result since <code>...on Commit</code> is not empty. To get the <code>Tag</code> as well just try out with <code>...on Tag</code> and extract the tagger or the commit it points to depending on what you want. Here is an example :</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner: ""spring-projects"", name: ""spring-framework"") {&#xA;    releases(last: 100) {&#xA;      edges {&#xA;        node {&#xA;          url&#xA;          releaseAssets(last: 100) {&#xA;            edges {&#xA;              node {&#xA;                downloadUrl&#xA;              }&#xA;            }&#xA;          }&#xA;          tag {&#xA;            ...refInfo&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;    tags: refs(refPrefix: ""refs/tags/"", last: 30) {&#xA;      edges {&#xA;        node {&#xA;          ...refInfo&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;fragment refInfo on Ref {&#xA;  name&#xA;  target {&#xA;    sha: oid&#xA;    commitResourcePath&#xA;    __typename&#xA;    ... on Tag {&#xA;      target {&#xA;        ... on Commit {&#xA;          ...commitInfo&#xA;        }&#xA;      }&#xA;      tagger {&#xA;        name&#xA;        email&#xA;        date&#xA;      }&#xA;    }&#xA;    ... on Commit {&#xA;      ...commitInfo&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;fragment commitInfo on Commit {&#xA;  zipballUrl&#xA;  tarballUrl&#xA;  author {&#xA;    name&#xA;    email&#xA;    date&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20repository(owner%3A%20%22spring-projects%22%2C%20name%3A%20%22spring-framework%22)%20%7B%0A%20%20%20%20releases(last%3A%20100)%20%7B%0A%20%20%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20%20%20url%0A%20%20%20%20%20%20%20%20%20%20releaseAssets(last%3A%20100)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20downloadUrl%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20tag%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20...refInfo%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20tags%3A%20refs(refPrefix%3A%20%22refs%2Ftags%2F%22%2C%20last%3A%2030)%20%7B%0A%20%20%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20%20%20...refInfo%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%0Afragment%20refInfo%20on%20Ref%20%7B%0A%20%20name%0A%20%20target%20%7B%0A%20%20%20%20sha%3A%20oid%0A%20%20%20%20commitResourcePath%0A%20%20%20%20__typename%0A%20%20%20%20...%20on%20Tag%20%7B%0A%20%20%20%20%20%20target%20%7B%0A%20%20%20%20%20%20%20%20...%20on%20Commit%20%7B%0A%20%20%20%20%20%20%20%20%20%20...commitInfo%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20tagger%20%7B%0A%20%20%20%20%20%20%20%20name%0A%20%20%20%20%20%20%20%20email%0A%20%20%20%20%20%20%20%20date%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%20%20...%20on%20Commit%20%7B%0A%20%20%20%20%20%20...commitInfo%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%0Afragment%20commitInfo%20on%20Commit%20%7B%0A%20%20zipballUrl%0A%20%20tarballUrl%0A%20%20author%20%7B%0A%20%20%20%20name%0A%20%20%20%20email%0A%20%20%20%20date%0A%20%20%7D%0A%7D%0A"" rel=""nofollow noreferrer"">Try it in the explorer</a></p>&#xA;&#xA;<p>Note that in the example above, I've used <a href=""https://graphql.org/learn/queries/#fragments"" rel=""nofollow noreferrer"">fragments</a> to reduce the query size &amp; improve readibility</p>&#xA;&#xA;<p>My guess is that in case the ref is pointing to a <code>Tag</code> object that's an <a href=""https://git-scm.com/book/en/v2/Git-Basics-Tagging#_annotated_tags"" rel=""nofollow noreferrer"">annotated tag</a> which can hold a message, a specific tagging date &amp; tagger info. If it points to a <code>Commit</code> object, it's a <a href=""https://git-scm.com/book/en/v2/Git-Basics-Tagging#_lightweight_tags"" rel=""nofollow noreferrer"">lightweight tag</a> which is just linking to a commit</p>&#xA;",2614364,,,,2018-12-25 16:11:13,"",,0,1,0,2018-12-25 16:11:13
53952480,1,53952582,,5,1017,"<p>Is there a way to fetch only the repos that are not archived? </p>&#xA;&#xA;<pre><code>{&#xA;  user(login: ""SrikanthBandaru"") {&#xA;    id&#xA;    email&#xA;    isHireable&#xA;    name&#xA;    repositories(first: 100) { # fetch only the repos that are not archived&#xA;      edges {&#xA;        node {&#xA;          name&#xA;          isArchived&#xA;          shortDescriptionHTML&#xA;          description&#xA;          descriptionHTML&#xA;          repositoryTopics(first: 10) {&#xA;            edges {&#xA;              node {&#xA;                topic {&#xA;                  name&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;          homepageUrl&#xA;          url&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1929111,,,,2018-12-28 01:02:47,GitHub GraphQL fetch repositories that are not archived,<graphql><github-api><github-graphql>,1,0,0,2018-12-28 00:47:38
53952582,2,,53952480,7,,"<p>You can use a search query in addition to user query with the <a href=""https://help.github.com/articles/searching-for-repositories/#search-based-on-whether-a-repository-is-archived"" rel=""noreferrer"">archived search parameter</a>. Also use <code>fork:true</code> to include forks: </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  user: user(login: ""simon04"") {&#xA;    id&#xA;    email&#xA;    isHireable&#xA;    name&#xA;  }&#xA;  repos: search(query: ""user:simon04 fork:true archived:false"", type: REPOSITORY, first: 100) {&#xA;    repositoryCount&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          nameWithOwner&#xA;          name&#xA;          isArchived&#xA;          shortDescriptionHTML&#xA;          description&#xA;          descriptionHTML&#xA;          repositoryTopics(first: 10) {&#xA;            edges {&#xA;              node {&#xA;                topic {&#xA;                  name&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;          homepageUrl&#xA;          url&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20user%3A%20user(login%3A%20%22simon04%22)%20%7B%0A%20%20%20%20id%0A%20%20%20%20email%0A%20%20%20%20isHireable%0A%20%20%20%20name%0A%20%20%7D%0A%20%20repos%3A%20search(query%3A%20%22user%3Asimon04%20fork%3Atrue%20archived%3Afalse%22%2C%20type%3A%20REPOSITORY%2C%20first%3A%20100)%20%7B%0A%20%20%20%20repositoryCount%0A%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20...%20on%20Repository%20%7B%0A%20%20%20%20%20%20%20%20%20%20nameWithOwner%0A%20%20%20%20%20%20%20%20%20%20name%0A%20%20%20%20%20%20%20%20%20%20isArchived%0A%20%20%20%20%20%20%20%20%20%20shortDescriptionHTML%0A%20%20%20%20%20%20%20%20%20%20description%0A%20%20%20%20%20%20%20%20%20%20descriptionHTML%0A%20%20%20%20%20%20%20%20%20%20repositoryTopics(first%3A%2010)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20edges%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20node%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20topic%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20name%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20homepageUrl%0A%20%20%20%20%20%20%20%20%20%20url%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""noreferrer"">Try it in the explorer</a></p>&#xA;",2614364,,,,2018-12-28 01:02:47,"",,0,1,0,2018-12-28 01:02:47
53978883,1,,,2,72,"<p>All the Github GraphQL API doc/tutorials that I saw are only doing “<code>type: REPOSITORY</code>” searches. &#xA;And such <code>type:</code> doesn't have an option for <em>code search</em>. </p>&#xA;&#xA;<p>So, is it possible to do Github GraphQL Search for code? If so, please use the example of searching within <code>language:Go</code> and with keyword <code>tucnak/telebot</code>. Thx. </p>&#xA;",2125837,,,,2018-12-30 15:28:17,How to do Github GraphQL Search for code?,<github><search><graphql><github-api>,0,0,0,2018-12-30 15:28:17
53994267,2,,40697597,12,,"<p>I came up with this simple solution - NO JSON used. Only one input is used. Hope it will help someone else.</p>&#xA;&#xA;<p>I had to add to this type:</p>&#xA;&#xA;<pre><code>type Option {&#xA;    id: ID!&#xA;    status: String!&#xA;    products: [Product!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>We can add to mutation type and add input as follows:</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;    createOption(data: [createProductInput!]!): Option!&#xA;    // other mutation definitions&#xA;}&#xA;&#xA;input createProductInput {&#xA;    id: ID!&#xA;    name: String!&#xA;    price: Float!&#xA;    producer: ID!&#xA;    status: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then following resolver could be used:</p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;    Mutation: {&#xA;      createOption(parent, args, ctx, info) {&#xA;&#xA;        const status = args.data[0].status;&#xA;&#xA;        // Below code removes 'status' from all array items not to pollute DB.&#xA;        // if you query for 'status' after adding option 'null' will be shown. &#xA;        // But 'status': null should not be added to DB. See result of log below.&#xA;        args.data.forEach((item) =&gt; {&#xA;            delete item.status&#xA;        });&#xA;&#xA;        console.log('args.data - ', args.data);&#xA;&#xA;        const option = {&#xA;            id: uuidv4(),&#xA;            status: status,  // or if using babel    status,&#xA;            products: args.data&#xA;        }&#xA;&#xA;        options.push(option)&#xA;&#xA;        return option&#xA;      },&#xA;    // other mutation resolvers&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Now you can use this to add an option (STATUS is taken from first item in the array - it is nullable):</p>&#xA;&#xA;<pre><code>mutation{&#xA;  createOption(data:&#xA;    [{&#xA;            id: ""prodB"",&#xA;            name: ""componentB"",&#xA;            price: 20,&#xA;            producer: ""e4"",&#xA;            status: ""CANCELLED""&#xA;        },&#xA;        {&#xA;            id: ""prodD"",&#xA;            name: ""componentD"",&#xA;            price: 15,&#xA;            producer: ""e5""&#xA;        }&#xA;    ]&#xA;  ) {&#xA;    id&#xA;    status&#xA;    products{&#xA;      name&#xA;      price&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Produces:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""createOption"": {&#xA;      ""id"": ""d12ef60f-21a8-41f3-825d-5762630acdb4"",&#xA;      ""status"": ""CANCELLED"",&#xA;      ""products"": [&#xA;        {&#xA;          ""name"": ""componentB"",&#xA;          ""price"": 20,&#xA;        },&#xA;        {&#xA;          ""name"": ""componentD"",&#xA;          ""price"": 15,&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>No need to say that to get above result you need to add:</p>&#xA;&#xA;<pre><code>type Query {&#xA;    products(query: String): [Product!]!&#xA;    // others&#xA;}&#xA;&#xA;type Product {&#xA;    id: ID!&#xA;    name: String!&#xA;    price: Float!&#xA;    producer: Company!&#xA;    status: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I know it is not the best way, but I did not find a way of doing it in documentation.</p>&#xA;",6332774,,,,2019-01-01 09:15:33,"",,0,0,0,2019-01-01 09:15:33
54023775,2,,54022149,1,,"<p>This error is not specific to GraphQL.</p>&#xA;&#xA;<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex"" rel=""nofollow noreferrer"">Array.findIndex</a> expects a function to be passed in as its first parameter. The function is called for each element in the array until the function returns a truthy value, at which point it returns the index of that element. The value of <code>args.eventName</code> is not a function (it's a String) so you end up with that error.</p>&#xA;&#xA;<p>Either pass it a function, like:</p>&#xA;&#xA;<pre><code>const index = _arr.findIndex(value =&gt; value === args.eventName)&#xA;</code></pre>&#xA;&#xA;<p>or just use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf"" rel=""nofollow noreferrer"">Array.indexOf</a> instead, which is probably what you meant to do:</p>&#xA;&#xA;<pre><code>const index = _arr.indexOf(args.eventName)&#xA;</code></pre>&#xA;",6024220,,,,2019-01-03 13:59:27,"",,0,0,0,2019-01-03 13:59:27
54030731,1,,,2,1061,"<p>Is it possible to convert an array or an object in PHP to a GraphQL query without importing a library?</p>&#xA;&#xA;<p>I'm hoping for something that works like json_encode does for JSON.</p>&#xA;&#xA;<p>e.g.</p>&#xA;&#xA;<pre><code>$array['products']['edges']['node']['handle'] = true;&#xA;$graphql = graphql_encode($array);&#xA;echo $graphql; // prints: {products(first: 10) { edges { node { handle }}}}&#xA;</code></pre>&#xA;&#xA;<p>Maybe this would always be an oversimplification (e.g. I'm not quite sure how ""(first: 10)"" would be added to the array). </p>&#xA;&#xA;<p>But I'm just looking for a simple way to start experimenting with GraphQL (and I don't have access to SSH or Composer on my shared hosting so it's not easy for me to add the right libraries).</p>&#xA;",7437040,,,,2019-01-03 22:33:58,GraphQL query in PHP without libraries,<php><graphql>,0,6,0,2019-01-03 22:33:58
54069467,2,,54069356,2,,"<p>Figured out the answer. </p>&#xA;&#xA;<p>Turns out you need to nest them all under the <code>mutation</code> keyword and then alias them to allow for multiple mutations.</p>&#xA;&#xA;<pre><code>mutation {&#xA;  something1: createSomething(data: {&#xA;    key1: ""val1""&#xA;  })&#xA;  something2: createSomething(data: {&#xA;    key2: ""val2""&#xA;  })&#xA;}&#xA;</code></pre>&#xA;",10877512,,1779113,2019-01-07 07:57:15,2019-01-07 07:57:15,"",,0,0,0,2019-01-07 06:31:05
54093969,1,54111111,,0,555,"<p>I'm creating a shopping cart in my frontend, and I want to pass all the items in the shopping cart as an array to my mutation addLicense on my backend, so I don't have to make multiple API calls. Is this possible? If so, how, or what are my options?</p>&#xA;&#xA;<p>I've tried to add square brackets around the arguments like this</p>&#xA;&#xA;<pre><code>extend type Mutation {&#xA;    addLicense([&#xA;        licenseType: String!&#xA;        licenseAmount: String!&#xA;        isActive: Boolean&#xA;        expirationDate: Date!&#xA;    ]): License!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I've also tried to set the object type as an argument</p>&#xA;&#xA;<pre><code>extend type Mutation {&#xA;    addLicense(&#xA;    license: [License]&#xA;): License!&#xA;</code></pre>&#xA;&#xA;<p>First attempt throws this error</p>&#xA;&#xA;<pre><code>/app/node_modules/graphql/language/parser.js:1463&#xA;throw (0, _error.syntaxError)(lexer.source, token.start, ""Expected "".concat(kind, "", found "").concat((0, _lexer.getTokenDesc)(token)));&#xA;^&#xA;GraphQLError: Syntax Error: Expected Name, found [&#xA;at syntaxError &#xA;(/app/node_modules/graphql/error/syntaxError.js:24:10)&#xA;</code></pre>&#xA;&#xA;<p>The other attempt throws this error</p>&#xA;&#xA;<pre><code>Error: The type of Mutation.addLicense(license:) must be Input Type but got: [License].&#xA;</code></pre>&#xA;",9336016,,,,2019-01-09 13:20:08,How can a graphql mutation accept an array of arguments with apollo server express?,<javascript><graphql><apollo>,2,0,0,2019-01-08 14:31:33
54113042,1,54475182,,0,1294,"<p>When running an @client mutation using apollo-link-state, then response from the resolver is merely: </p>&#xA;&#xA;<pre><code>{ data: {}, errors: undefined }&#xA;</code></pre>&#xA;&#xA;<p>From the resolver i'm returning &#xA;<code>{data: { ...product }}</code>.&#xA;Where the product is an object with multiple values, among these a &#xA;<code>__typename</code>.</p>&#xA;&#xA;<p>I have tried setting the return value, to all sorts of values, such as &#xA;    <code>return product</code>, &#xA;    <code>return { data: product }</code>, &#xA;    <code>return { data: { data: { &#xA;product }}}</code>etc. etc. i think you get the idea.</p>&#xA;&#xA;<p>Resolver:</p>&#xA;&#xA;<pre><code>export const updateInventoryItem = async (product, cache) =&gt; {&#xA;  const query = gql&#xA;    query {&#xA;      inventory @client {&#xA;        ...omitted, but all the values&#xA;    }&#xA;   };&#xA;&#xA;   const prevState = await cache.readQuery({ query });&#xA;   const prevInventory = prevState.inventory;&#xA;&#xA;   const productIndex = prevInventory.findIndex(x =&gt; x.id === &#xA;   product.id);&#xA;   prevInventory.splice(productIndex, 1);&#xA;&#xA;   const data = {&#xA;    inventory: [&#xA;     product,&#xA;     ...prevInventory&#xA;    ]&#xA;   }&#xA;&#xA;  await cache.writeQuery({ query, data });&#xA;&#xA;  return {data: { ...product }}&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>Mutation:</p>&#xA;&#xA;<pre><code>const UPDATE_ITEM = gql&#xA;  mutation updateInventoryItem($product: InventoryItem!) {&#xA;    updateInventoryItem(product: $product) @client {&#xA;      __typename&#xA;      id&#xA;      ...and so on&#xA;    }&#xA;  }&#xA;;&#xA;</code></pre>&#xA;&#xA;<p>The function that calls the mutation:</p>&#xA;&#xA;<pre><code>updateItem = () =&gt; {&#xA;    this.props.updateItem({&#xA;      variables: {&#xA;        product: {&#xA;          __typename: this.state.item.__typename,&#xA;          id: this.state.item.id,&#xA;          addedToCart: this.state.item.addedToCart,&#xA;          ...and so on&#xA;        }&#xA;      }&#xA;    }).then((e) =&gt; {&#xA;      console.log(e);&#xA;      this.setState({ savedRecently: true })&#xA;    },&#xA;      err =&gt; console.log(err))&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Firstly: I'm sorry for the terribly long block of code to plow through.</p>&#xA;&#xA;<p>The expected result of the code above, would be for the resolver to return the product just added, like &#xA;    <code>{ data: {...product}, errors: undefined }</code>, but instead it returns &#xA;    <code>{ data: {}, errors: undefined }</code> as stated in the beginning.</p>&#xA;&#xA;<p>Please let me know if you need more information, or if i missed something.</p>&#xA;",5372973,,,,2019-02-01 07:57:08,Return value from mutation is empty and/or undefined,<react-apollo><apollo-client><apollo-link-state>,1,0,0,2019-01-09 15:06:09
54119116,1,54120289,,1,2899,"<p>So i'm trying to figure out how to pass an array of objects from a POST request to apollo server on AWS lambda.</p>&#xA;&#xA;<p>I've checked this out but it's not the same problem&#xA;<a href=""https://stackoverflow.com/questions/53637531/array-of-objects-convert-into-object-of-objects-when-i-use-apollo"">Array of objects convert into object of objects when I use Apollo</a></p>&#xA;&#xA;<p>The post request looks like this...</p>&#xA;&#xA;<pre><code>    api.post('query', { query : `mutation {saveNewItem(description: ""${description}"", specials: ${JSON.stringify(specials)}){name}}`})&#xA;// comment to get rid of silly scroll bar overlapping code&#xA;</code></pre>&#xA;&#xA;<p>Schema looks like this...</p>&#xA;&#xA;<pre><code>    const { gql } = require('apollo-server-lambda')&#xA;&#xA;    const typeDefs = gql`&#xA;      type ShoppingItem {&#xA;        description: String&#xA;        specials: [Specials]&#xA;      }&#xA;&#xA;      input Specials {&#xA;        description: String&#xA;        price: String&#xA;        qty: String&#xA;        saved: String&#xA;      }&#xA;&#xA;  type Mutation {&#xA;    saveNewItem(description: String!, specials: [Specials]) : ShoppingItem&#xA;  }&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>example Specials looks like this...</p>&#xA;&#xA;<pre><code>[{ // Object One&#xA;description: ""First One""&#xA;price: ""1.00""&#xA;qty: ""1"" &#xA;saved: ""false""&#xA;},{ // Object two&#xA;description: ""Second One""&#xA;price: ""1.00""&#xA;qty: ""1"" &#xA;saved: ""false""&#xA;}]&#xA;</code></pre>&#xA;&#xA;<p>The error I get currently is...</p>&#xA;&#xA;<pre><code>'Error: The type of ShoppingItem.specials must be Output Type but got: [Specials].',&#xA;  'at assertValidSchema (/Users/me/Desktop/Projects/app/build/node_modules/graphql/type/validate.js:71:11)',&#xA;</code></pre>&#xA;&#xA;<p>If I change it to a normal ""type"" it complains about it not being Input type.</p>&#xA;&#xA;<p>I've also been through the apollo server docs and can't quite see what I'm doing wrong?</p>&#xA;&#xA;<p>Please that as mentioned by Daniel in comments whilst technically the ""duplicate"" answer given is correct the information offered here is far more high quality and useful to people facing the problem(in my opinion)</p>&#xA;",1175948,,1175948,2019-01-10 00:27:49,2019-01-10 00:27:49,Array of Objects Apollo Server and post from react,<graphql><apollo-server>,1,4,0,2019-01-09 22:09:55
54228004,1,,,1,7727,"<p>I'm trying to add a field to my Mutation that has an array in it with my own type. When I added the attraction the the <code>createTour</code> mutation, I started getting this error:  </p>&#xA;&#xA;<p><strong>Error: The type of Mutation.createTour(attractions:) must be Input Type but got: [Attraction].</strong></p>&#xA;&#xA;<p>Here is the problematic Mutation</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;    createTour(&#xA;    title: String!&#xA;    description: String!&#xA;    attractions: [Attraction]      &lt;----- THIS LINE&#xA;    ): Tour&#xA;    addCommentToTour(id: ID!, comment: String!): Tour&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And here are the typedefs I have as well. </p>&#xA;&#xA;<pre><code>type Attraction {&#xA;    title: String&#xA;    description: String&#xA;    coordinateLat: Int&#xA;    coordinateLong: Int&#xA;}&#xA;&#xA;type Tour {&#xA;    id: ID!&#xA;    title: String!&#xA;    description: String!&#xA;    author: String!&#xA;    attractions: [Attraction]      &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can I get this Mutation to take in this array? </p>&#xA;",1438397,,,,2019-02-13 16:32:27,How to input an array into a GraphQL Mutation,<graphql><apollo><apollo-server>,1,5,0,2019-01-17 02:06:08
54230628,1,,,1,166,"<p>I'm using <code>graphql-request</code> to request the data </p>&#xA;&#xA;<pre><code> return request('/graphql', flightDetailsQuery, variables).then(res =&gt; res);&#xA;</code></pre>&#xA;&#xA;<p>This returns the as <code>__proto__: Object</code> but I need the <code>__proto__: Promise</code>. Can I specify it in request?</p>&#xA;",1881995,,,,2019-01-17 07:36:21,Return promise from graphql-request,<node.js><graphql><express-graphql>,0,1,0,2019-01-17 07:03:47
54251285,1,,,1,625,"<p>For example my graphql's query is:</p>&#xA;&#xA;<pre><code>products {&#xA;  name,&#xA;  price,&#xA;  brand {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Which produces this response:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""products"": [&#xA;      {&#xA;        ""name"": ""Black Dress"",&#xA;        ""price"": 520,&#xA;        ""brand"": {&#xA;          ""name"": ""Coach""&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Can this</p>&#xA;&#xA;<pre><code>""brand"": {&#xA;  ""name"": ""Coach""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>be simplified to this somehow?</p>&#xA;&#xA;<pre><code>""brandName"": ""Coach""&#xA;</code></pre>&#xA;",10932636,,,,2019-01-18 13:59:10,How to simplify graphql response,<graphql>,1,0,0,2019-01-18 09:45:50
54265042,1,54267052,,0,1439,"<p>I have a rest API that returns an object with a list of ids with counts on each of them.</p>&#xA;&#xA;<pre><code>{&#xA;    ""orders"": {&#xA;      ""PMY5XbR7FZo5qEkEb"": 0&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have no idea what the keys of the orders object will be ahead of time, nor do I know how many keys there will be.</p>&#xA;&#xA;<p><a href=""https://stackoverflow.com/questions/46562561/apollo-graphql-field-type-for-object-with-dynamic-keys"">This question's response</a> suggests using a JSON type, which is risky but do-able.</p>&#xA;&#xA;<p>The problem is that this doesn't work with a graphQL yoga server:</p>&#xA;&#xA;<pre><code>type Task {&#xA;  orders:  JSON&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How do I refer to JSON types in a yoga server?</p>&#xA;",4387980,,,,2019-01-19 12:22:56,How do I add a Scalar JSON type in graphQL yoga server?,<server><graphql><graphql-js>,1,4,0,2019-01-19 07:37:59
54270717,1,54270737,,2,185,"<p>Apologies if this is straight forward. I am following a tutorial and it seems there is a syntax error. I am unable to find the right format for the following: </p>&#xA;&#xA;<pre><code>    const productsToDisplay = this.props.shopData.shop.products&#xA;    return (&#xA;      &lt;div classname=""App""&gt;&#xA;        &lt;div classname=""products-grid""&gt;&#xA;          {productsToDisplay.edges.map((el, i)=&gt; {&#xA;            return(&#xA;              &lt;product key=""{i}"" product=""{el.node}""&gt;&#xA;            )&#xA;          })}&#xA;        &lt;/product&gt;&#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The two divs under the closing product tag are not recognized by the above divs, as the first one states it is unclosed.</p>&#xA;&#xA;<p>I believe this is due to the  being in the return statement, and out of it - but I am unclear how this should be formatted. </p>&#xA;&#xA;<p>Reference: <a href=""http://www.codeshopify.com/blog_posts/building-a-store-with-react-step-2"" rel=""nofollow noreferrer"">http://www.codeshopify.com/blog_posts/building-a-store-with-react-step-2</a></p>&#xA;&#xA;<p>error: Parsing error: Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment &lt;>...?</p>&#xA;&#xA;<p>Any help is appreciated!</p>&#xA;",10938572,,,,2019-01-19 20:05:44,React component formatting - div not closing,<html><reactjs><apollo>,1,6,0,2019-01-19 19:38:44
54270737,2,,54270717,2,,"<p>There are two issues. The tutorial is importing Product as follows:</p>&#xA;&#xA;<pre><code>import Product from './Product.js';&#xA;</code></pre>&#xA;&#xA;<p>but then the tutorial references it later as <code>&lt;product</code> when it should be <code>&lt;Product</code>.</p>&#xA;&#xA;<p>The second issue is that the closing <code>Product</code> tag <strong><code>&lt;/product&gt;</code></strong> should either be inside the return statement along with the open <code>Product</code> tag or just use a self-closing tag like this:</p>&#xA;&#xA;<pre><code>{productsToDisplay.edges.map((el, i)=&gt; {&#xA;    return(&#xA;        &lt;Product key=""{i}"" product=""{el.node}"" /&gt;&#xA;    ) &#xA;})}&#xA;</code></pre>&#xA;&#xA;<p>So your complete return statement should look like this:</p>&#xA;&#xA;<pre><code>return (&#xA;  &lt;div classname=""App""&gt;&#xA;    &lt;div classname=""products-grid""&gt;&#xA;      {productsToDisplay.edges.map((el, i)=&gt; {&#xA;        return(&#xA;          &lt;Product key=""{i}"" product=""{el.node}"" /&gt;&#xA;        )&#xA;      })}&#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;);&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>Credits to @RyanCogswell for noticing the other issue with the uppercase P in <code>&lt;products&gt;</code>.</p>&#xA;",4114907,,4114907,2019-01-19 20:05:44,2019-01-19 20:05:44,"",,0,2,0,2019-01-19 19:41:02
54272384,1,,,1,226,"<p>I've been trying to write the graphql language grammar for grammarkit and I've found myself really stuck on an ambiguity issue for quite some time now. Keywords in graphql (such as: <code>type</code>, <code>implements</code>, <code>scalar</code> )  can also be names of types or fields. I.E.</p>&#xA;&#xA;<pre><code>type type implements type {}&#xA;</code></pre>&#xA;&#xA;<p>At first I defined these keywords as <code>tokens</code> in the bnf but that'd mean the case above is invalid. But if I write these keywords directly as I'm describing the rule, It results in an ambiguity in the grammar. &#xA; An example of an issue I'm seeing based on this grammar below is if you define something like this </p>&#xA;&#xA;<pre><code>directive @foo on Baz | Bar&#xA;scalar Foobar @cool&#xA;</code></pre>&#xA;&#xA;<p>the PSI viewer is telling me that in the position of <code>@cool</code> it's expecting a <code>DirectiveAddtlLocation</code>, which is a rule I don't even reference in the scalar rule. Is anyone familiar with grammarkit and have encountered something like this? I'd really appreciate some insight. Thank You. </p>&#xA;&#xA;<p>Here's an excerpt of grammar for the error example I mentioned above.</p>&#xA;&#xA;<pre><code>{&#xA;    tokens=[&#xA;            LEFT_PAREN='('&#xA;            RIGHT_PAREN=')'&#xA;            PIPE='|'&#xA;            AT='@'&#xA;            IDENTIFIER=""regexp:[_A-Za-z][_0-9A-Za-z]*""&#xA;            WHITE_SPACE = 'regexp:\s+'&#xA;    ]&#xA;}&#xA;&#xA;Document ::= Definition*&#xA;Definition ::=  DirectiveTypeDef | ScalarTypeDef&#xA;NamedTypeDef ::= IDENTIFIER&#xA;&#xA;// I.E. @foo @bar(a: 10) @baz&#xA;DirectivesDeclSet ::= DirectiveDecl+&#xA;DirectiveDecl ::= AT TypeName&#xA;&#xA;// I.E. directive @example on FIELD_DEFINITION | ARGUMENT_DEFINITION&#xA;DirectiveTypeDef ::= 'directive' AT NamedTypeDef DirectiveLocationsConditionDef&#xA;DirectiveLocationsConditionDef ::= 'on' DirectiveLocation DirectiveAddtlLocation*&#xA;DirectiveLocation ::= IDENTIFIER&#xA;DirectiveAddtlLocation ::= PIPE? DirectiveLocation&#xA;&#xA;TypeName ::= IDENTIFIER&#xA;&#xA;// I.E. scalar DateTime @foo&#xA;ScalarTypeDef ::= 'scalar' NamedTypeDef DirectivesDeclSet?&#xA;</code></pre>&#xA;",4283294,,,,2019-01-20 12:50:09,How to solve ambiguity in with keywords as identifiers in grammar kit,<intellij-idea><graphql><intellij-plugin><ambiguous-grammar><grammar-kit>,1,0,0,2019-01-19 23:53:36
54273965,1,54274672,,4,10907,<p>I am making a real-time search that will indicate the correct pattern from the search string. Then it will search with this pattern and return with the correct database schema dynamically.&#xA;Example Like: Google Assistant</p>&#xA;,5156011,,5756397,2022-05-25 06:05:16,2022-05-25 06:05:16,GraphQL vs Elasticsearch what should i use for fast searching performance that return with many different schema?,<elasticsearch><facebook-graph-api><artificial-intelligence><graphql><search-engine>,2,2,0,2019-01-20 05:53:42
54276623,2,,54272384,0,,"<p>Once your grammar sees <code>directive @TOKEN on IDENTIFIER</code>, it consumes a sequence of <code>DirectiveAddtlLocation</code>.  Each of those consists of an optional <code>PIPE</code> followed by an <code>IDENTIFIER</code>.  As you note in your question, the GraphQL ""keywords"" are really just special cases of identifiers.  So what's probably happening here is that, since you allow any token as an identifier, <code>scalar</code> and <code>Foobar</code> are both being consumed as <code>DirectiveAddtlLocation</code> and it's never actually getting to see a <code>ScalarTypeDef</code>.</p>&#xA;&#xA;<pre><code># Parses the same as:&#xA;directive @foo on Bar | Baz | scalar | Foobar&#xA;@cool  # &lt;-- ?????&#xA;</code></pre>&#xA;&#xA;<p>You can get around this by listing out the <a href=""https://facebook.github.io/graphql/June2018/#sec-Type-System.Directives"" rel=""nofollow noreferrer"">explicit set of allowed directive locations</a> in your grammar.  (You might even be able to get pretty far by just copying the grammar in <a href=""https://facebook.github.io/graphql/June2018/#sec-Appendix-Grammar-Summary"" rel=""nofollow noreferrer"">Appendix B of the GraphQL spec</a> and changing its syntax.)</p>&#xA;&#xA;<pre><code>DirectiveLocation ::= ExecutableDirectiveLocation | TypeSystemDirectiveLocation&#xA;ExecutableDirectiveLocation ::= 'QUERY' | 'MUTATION' | ...&#xA;TypeSystemDirectiveLocation ::= 'SCHEMA' | 'SCALAR' | ...&#xA;</code></pre>&#xA;&#xA;<p>Now when you go to parse:</p>&#xA;&#xA;<pre><code>directive @foo on QUERY | MUTATION&#xA;# ""scalar"" is not a directive location, so the DirectiveTypeDef must end&#xA;scalar Foobar @cool&#xA;</code></pre>&#xA;&#xA;<p>(For all that the ""identifier"" vs. ""keyword"" distinction is a little weird, I'm pretty sure the GraphQL grammar isn't actually ambiguous; in every context where a free-form identifier is allowed, there's punctuation before a ""keyword"" could appear again, and in cases like this one there's unambiguous lists of not-quite-keywords that don't overlap.)</p>&#xA;",10008173,,,,2019-01-20 12:50:09,"",,0,0,0,2019-01-20 12:50:09
54281568,2,,52832210,8,,"<p>Basically you can just use http post method to fetch the data from a  GraphQL API, but here very nice solution using node-fetch , to install it: </p>&#xA;&#xA;<blockquote>&#xA;  <p>npm install node-fetch --save</p>&#xA;</blockquote>&#xA;&#xA;<p>and the code to use it is: </p>&#xA;&#xA;<pre><code>const fetch = require('node-fetch');&#xA;&#xA;const accessToken = 'your_access_token_from_github';&#xA;const query = `&#xA;  query {&#xA;    repository(owner:""isaacs"", name:""github"") {&#xA;      issues(states:CLOSED) {&#xA;        totalCount&#xA;      }&#xA;    }&#xA;  }`;&#xA;&#xA;fetch('https://api.github.com/graphql', {&#xA;  method: 'POST',&#xA;  body: JSON.stringify({query}),&#xA;  headers: {&#xA;    'Authorization': `Bearer ${accessToken}`,&#xA;  },&#xA;}).then(res =&gt; res.text())&#xA;  .then(body =&gt; console.log(body)) // {""data"":{""repository"":{""issues"":{""totalCount"":247}}}}&#xA;  .catch(error =&gt; console.error(error));&#xA;</code></pre>&#xA;&#xA;<p>this solution was taken from <a href=""https://blog.apollographql.com/4-simple-ways-to-call-a-graphql-api-a6807bcdb355"" rel=""noreferrer"">here</a></p>&#xA;",10609372,,10609372,2019-01-20 22:49:01,2019-01-20 22:49:01,"",,0,0,0,2019-01-20 22:27:01
54288498,2,,53977825,5,,<p>Make sure that you import <code>Query</code> from <code>@nestjs/graphql</code> and <strong>not</strong> from <code>@nestjs/common</code>.</p>&#xA;,4694994,,,,2019-01-21 10:59:06,"",,0,0,0,2019-01-21 10:59:06
54312042,1,,,0,260,<p>I'm getting my content from <strong>Contentful</strong>.&#xA;The structure is simple:</p>&#xA;&#xA;<p><strong>Page</strong></p>&#xA;&#xA;<pre><code>- sections (ref)&#xA;-- Section1&#xA;--- modules (ref)&#xA;---- Module1&#xA;---- Module2&#xA;-- Section2&#xA;--- modules (ref)&#xA;---- Module1&#xA;---- Module2&#xA;</code></pre>&#xA;&#xA;<p>I cannot seem to reach nested reference types.</p>&#xA;&#xA;<p>My content model has a page that has a reference module modules that included a title and a list of other modules. Seems that content cannot be reached with the plugin. Do you know why? and how to fix it?</p>&#xA;&#xA;<pre><code>    allContentfulProductLandingPage{&#xA;        edges {&#xA;            node {&#xA;                name&#xA;                    sections { #this is a reference type&#xA;                        title&#xA;                        modules { #this is a reference type&#xA;                            __typename&#xA;                            #title #I need title and subfields here&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}```&#xA;&#xA;&#xA;&#xA;How can I get more then the __typename from this query? Likethe title I commented out?&#xA;&#xA;&#xA;</code></pre>&#xA;,2136897,,10923627,2019-01-22 22:04:04,2019-10-18 22:44:40,How to fix Gatsby query for Contentful reference types,<graphql><gatsby><contentful>,1,0,0,2019-01-22 15:58:40
54329695,2,,54327212,0,,"<p>Something went wrong when the collection was named. Mongoose usually adds ""es"" to the collection name, as in plural. I figured this out after enabling debugging in mongoose <code>mongoose.set(""debug"", true);</code> and seeing that it was looking for the wrong collection. In this instance the collection name was missing ""es"".</p>&#xA;&#xA;<p>This stack overflow thread explains it a little bit</p>&#xA;&#xA;<p><a href=""https://stackoverflow.com/questions/10547118/why-does-mongoose-always-add-an-s-to-the-end-of-my-collection-name"">Why does mongoose always add an s to the end of my collection name</a></p>&#xA;&#xA;<p>I solved it by adding <code>collection: ""gameStatus""</code> to my mongoose schema options.</p>&#xA;",9336016,,9336016,2019-01-24 08:26:05,2019-01-24 08:26:05,"",,0,0,0,2019-01-23 14:40:16
54337375,1,54337768,,2,2147,<p>Basically I'm trying to spread a GraphQL field so I don't have as much nesting.&#xA;For instance:</p>&#xA;&#xA;<pre><code>query {&#xA;  user(id: aasdfasdf) {&#xA;    ...address {&#xA;      street&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>output</p>&#xA;&#xA;<pre><code>{&#xA;  user: {&#xA;    street: '111 Cool Street'&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,2782583,,,,2019-01-24 00:35:17,Can you spread a GraphQL field?,<graphql>,1,0,0,2019-01-23 23:41:35
54350792,2,,54350353,0,,"<p>Not sure if I got your message but when you want to return a nested object, you must to use <a href=""https://www.elastic.co/guide/en/elasticsearch/reference/6.5/search-request-inner-hits.html"" rel=""nofollow noreferrer"">Inner Hits</a>.</p>&#xA;&#xA;<p>You can also set your field _source to retrieve only inner hits.</p>&#xA;",3650737,,,,2019-01-24 16:04:27,"",,0,2,0,2019-01-24 16:04:27
54366073,1,54366359,,1,994,"<p>I just started to work with GraphQL and I am setting up a server with webonyx/graphql-php at the moment. Since a GraphQL query already has to contain the resulting data structure, I am not quite sure how to get dynamic data. Assumed that I query the content which consists different element types and my final structure should look like this:</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;        ""dataset"": {&#xA;            ""uuid"": ""abc..."",&#xA;            ""insertDate"": ""2018-05-04T12:12:12Z"",&#xA;            // other metadata&#xA;            ""content"": [&#xA;                {&#xA;                    ""type"": ""headline"",&#xA;                    ""text"": ""I am a headline""&#xA;                },&#xA;                {&#xA;                    ""type"": ""image"",&#xA;                    ""src"": ""http://..."",&#xA;                    ""alt"": ""I am an image""&#xA;                },&#xA;                {&#xA;                    ""type"": ""review"",&#xA;                    ""rating"": 3,&#xA;                    ""comment"": ""I am a review""&#xA;                },&#xA;                {&#xA;                    ""type"": ""headline"",&#xA;                    ""text"": ""I am another headline""&#xA;                }&#xA;                // other content elements&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How could I write a query for this example?</p>&#xA;&#xA;<pre><code>{&#xA;    dataset {&#xA;        uuid&#xA;        insertDate&#xA;        content {&#xA;            ????&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And how would a type definition for the content section look like? There is a defined set of element types (headline, image, review, many more) but their order and number of elements is unknown and they have only one field, type, in common. While writing the query in my frontend, I don't know anything about the content structure. And what would the graphql-php type definition for the content section look like? I couldn't find any similar example online, so I am not sure if it is even possible to use GraphQL for this use case. As an extra information, I always want to query the whole content section, not a single element or field, always everything.</p>&#xA;",10967331,,,,2019-01-25 13:34:07,Query unknown data structure in GraphQL,<graphql><graphql-php>,1,0,0,2019-01-25 13:15:07
54387808,2,,54386022,1,,"<p>But it says you that don't have <code>allMarkdownRemark</code> property on the data object. </p>&#xA;&#xA;<p>This line produces that error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>const { edges } = data.allMarkdownRemark;</p>&#xA;</blockquote>&#xA;&#xA;<p>Try just to <code>console.log</code> your data. You'll see that you have properties <code>{ missionControl: {}, wellington: {} }</code>  because you created GraphQL query with aliases, take a look at the <a href=""https://facebook.github.io/graphql/draft/#sec-Field-Alias"" rel=""nofollow noreferrer"">docs</a></p>&#xA;",6805529,,,,2019-01-27 11:50:52,"",,0,0,0,2019-01-27 11:50:52
54398422,1,,,0,217,"<p>I've started using Apollo Server and it returns an array for a thrown error, with an error object. I am wondering why an array is returned instead of a single error object?</p>&#xA;&#xA;<p>This link shows the format of the error response:&#xA;<a href=""https://www.apollographql.com/docs/apollo-server/features/errors.html"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/features/errors.html</a></p>&#xA;",4642520,,,,2019-01-28 20:32:23,Why does Apollo Server return an array with an errors object over an object,<javascript><apollo-server>,1,2,0,2019-01-28 08:57:28
54401536,2,,54268186,0,,"<p>To retrieve a count, you can use Aggregations:</p>&#xA;&#xA;<pre><code>const petsCount = await prisma&#xA;  .petsConnection({where: {owner: user.id}})&#xA;  .aggregate()&#xA;  .count()&#xA;</code></pre>&#xA;&#xA;<p>Source: <a href=""https://www.prisma.io/docs/prisma-client/basic-data-access/reading-data-JAVASCRIPT-rsc2/#aggregations"" rel=""nofollow noreferrer"">documentation</a></p>&#xA;",10721492,,,,2019-01-28 11:58:57,"",,0,0,0,2019-01-28 11:58:57
54413609,2,,54413362,2,,"<p>While your development server is running, you can access the GraphiQL interface for it at <code>http://localhost:8000/___graphql</code>. Graph<em>i</em>QL is an IDE that can not only lets you write and run queries against your GraphQL server, but also provides a way to view your schema, including the type for each available field. Please see <a href=""https://www.gatsbyjs.org/docs/introducing-graphiql/"" rel=""nofollow noreferrer"">the docs</a> for more info. It includes syntax highlighting, so I would highly recommend it when composing your queries.</p>&#xA;&#xA;<p>The error you are seeing indicates that the field <code>tags</code> is of the type <code>[String]</code>. The brackets here indicate a <code>List</code> (or array) of the type <code>String</code>. <code>String</code>, <code>Int</code>, <code>Float</code>, <code>Boolean</code> and <code>ID</code> are all built-in scalar types. Fields that have a scalar type (or an enum) are considered ""lead nodes"", and as such, they cannot have a field selection themselves. In other words,</p>&#xA;&#xA;<pre><code>tags {}&#xA;</code></pre>&#xA;&#xA;<p>is not valid syntax. It has to be just</p>&#xA;&#xA;<pre><code>tags&#xA;</code></pre>&#xA;&#xA;<p>That is why you are seeing the above error. As it states, the type <code>[String]</code> has no subfields. If hypothetically the type returned by the <code>tags</code> field was an object type, or a list of one, then you would have to specify what fields to return.</p>&#xA;&#xA;<p>You might find it helpful to review GraphQL concepts in more details. <a href=""https://graphql.org/learn/schema/"" rel=""nofollow noreferrer"">This tutorial</a> would be a good starting point, and there's always the <a href=""https://facebook.github.io/graphql/"" rel=""nofollow noreferrer"">specification itself</a>.</p>&#xA;",6024220,,,,2019-01-29 03:56:54,"",,0,1,0,2019-01-29 03:56:54
54414868,1,,,0,181,"<p>Below is the response which I get from Rest API.</p>&#xA;&#xA;<pre><code>{&#xA;  'metadata': {&#xA;    'cache': '600',&#xA;  },&#xA;  ""data"": [{&#xA;    ""name"": ""Content"",&#xA;    ""content"": {&#xA;      ""title"": ""Legal information"",&#xA;      ""paragraphs"": [&#xA;        {&#xA;          ""title"": ""Website terms of use1"",&#xA;          ""text"": ""Sample Text"",&#xA;        }]&#xA;    }&#xA;  }]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My GQL schema looks like this,</p>&#xA;&#xA;<pre><code>type Metadata {&#xA;  cache: String&#xA;}&#xA;&#xA;type Content {&#xA;  metadata: Metadata&#xA;  data&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I wanted GQL, to send me whatever inside <code>data</code> with out any schema .</p>&#xA;&#xA;<p>How can it be done please help</p>&#xA;",9009925,,,,2019-01-29 11:52:39,GQL schema not returning nested objects,<graphql><apollo-client>,1,0,0,2019-01-29 06:11:53
54429632,2,,54414519,3,,"<p><a href=""https://typegraphql.com/docs/scalars.html#aliases"" rel=""nofollow noreferrer"">https://typegraphql.com/docs/scalars.html#aliases</a></p>&#xA;<blockquote>&#xA;<p>JavaScript <code>Number</code> will become <code>GraphQLFloat</code> in the schema automatically</p>&#xA;</blockquote>&#xA;<p>That's because <code>number</code> in JS is represented as a double, so Number = Float.&#xA;If you need an int, use <code>Int</code>.</p>&#xA;",5472617,,625919,2022-10-06 00:31:21,2022-10-06 00:31:21,"",,0,0,0,2019-01-29 21:11:05
54475182,2,,54113042,1,,"<pre><code>const UPDATE_ITEM = gql&#xA;  mutation updateInventoryItem($product: InventoryItem!) {&#xA;    return updateInventoryItem(product: $product) @client {&#xA;      __typename&#xA;      id&#xA;      ...and so on&#xA;    }&#xA;  }&#xA;;&#xA;</code></pre>&#xA;&#xA;<p>This function does of course need to return a value, but that's not the whole story here.</p>&#xA;&#xA;<p>GraphQL (Apollo-Client in this case), expects an object formed like the response, you tell it you want.</p>&#xA;&#xA;<p>In this case:</p>&#xA;&#xA;<pre><code>updateInventoryItem(product: $product) @client {&#xA;      __typename&#xA;      id&#xA;      ...and so on&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>This asks to get an object with a __typename, and id, and whatever else you put in there. </p>&#xA;&#xA;<p>So all in all, a stupid mistake on my part, but since no answers, if anyone falls into the same pit as i did, here's something to try.</p>&#xA;",5372973,,,,2019-02-01 07:57:08,"",,0,0,0,2019-02-01 07:57:08
54506509,1,,,0,112,"<p>I have a following setup:</p>&#xA;&#xA;<pre><code>class Product &lt; ApplicationRecord&#xA;  has_many :variants&#xA;end&#xA;&#xA;class Variant &lt; ApplicationRecord&#xA;  belongs_to :product&#xA;end&#xA;&#xA;Types::QueryType = GraphQL::ObjectType.define do&#xA;  connection :products, Types::ProductType.connection_type do&#xA;    resolve -&gt; (obj, _, _) do&#xA;      Product.all.includes(:variants)&#xA;    end&#xA;  end&#xA;end&#xA;&#xA;Types::ProductType = GraphQL::ObjectType.define do&#xA;  connection :variants, Types::VariantType.connection_type do&#xA;    resolve -&gt; (obj, _, _) { obj.variants }&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>And running a following query:</p>&#xA;&#xA;<pre><code>{&#xA;  products {&#xA;    edges {&#xA;      nodes {&#xA;        variants {&#xA;          edges {&#xA;            node {&#xA;              id&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>produces following SQL queries:</p>&#xA;&#xA;<pre><code>  Product Load (2.7ms)  SELECT  ""products"".* FROM ""products"" LIMIT $1  [[""LIMIT"", 25]]&#xA;  Variant Load (8.6ms)  SELECT ""variants"".* FROM ""variants"" WHERE ""variants"".""product_id"" IN (1, 2, 3)&#xA;  Variant Load (19.0ms)  SELECT  ""variants"".* FROM ""variants"" WHERE ""variants"".""product_id"" = $1 LIMIT $2  [[""product_id"", 1], [""LIMIT"", 25]]&#xA;  Variant Load (13.6ms)  SELECT  ""variants"".* FROM ""variants"" WHERE ""variants"".""product_id"" = $1 LIMIT $2  [[""product_id"", 2], [""LIMIT"", 25]]&#xA;  Variant Load (2.4ms)  SELECT  ""variants"".* FROM ""variants"" WHERE ""variants"".""product_id"" = $1 LIMIT $2  [[""product_id"", 3], [""LIMIT"", 25]]&#xA;</code></pre>&#xA;&#xA;<p>As we can see in the sql output, <code>includes</code> works but graphql don't care and makes a n+1 anyway. Is that normal behaviour and i'm forced to use solutions like graphql-batch to fix that or something is not right with my setup? As far as i have seen all over the internet, using <code>includes</code> should be enough for such simple scenario and graphql should use the eager loaded data instead of producing the n+1. Have i done anything wrong in here?</p>&#xA;&#xA;<p>I'm on graphql-ruby 1.7.9</p>&#xA;",552936,,,,2019-02-04 16:15:34,Connections breaks includes,<ruby-on-rails><ruby><rails-activerecord><graphql-ruby>,1,0,0,2019-02-03 19:09:34
54522063,2,,54503228,2,,"<p>As you've stated, currently the GraphQL specification only allows for enum values that match the <code>Name</code> regexp:</p>&#xA;&#xA;<blockquote>&#xA;  <p><code>EnumValue</code>:: <code>Name</code> but not <code>true</code>, or <code>false</code> or <code>null</code></p>&#xA;  &#xA;  <p>-- <a href=""https://facebook.github.io/graphql/draft/#sec-Enum-Value"" rel=""nofollow noreferrer"">https://facebook.github.io/graphql/draft/#sec-Enum-Value</a></p>&#xA;  &#xA;  <p><code>Name</code>:: <code>/[_A-Za-z][_0-9A-Za-z]*/</code></p>&#xA;  &#xA;  <p>-- <a href=""https://facebook.github.io/graphql/draft/#Name"" rel=""nofollow noreferrer"">https://facebook.github.io/graphql/draft/#Name</a></p>&#xA;</blockquote>&#xA;&#xA;<p>I think the desire to express enums in other languages is compelling; I suggest that you help to formulate a proposal to address these concerns in the GraphQL specification itself, which you can do at the GraphQL specification repository on GitHub. There's already an issue open about this topic which you could contribute your insights to:</p>&#xA;&#xA;<p><a href=""https://github.com/facebook/graphql/issues/256"" rel=""nofollow noreferrer"">https://github.com/facebook/graphql/issues/256</a></p>&#xA;&#xA;<p>With care (and using resources like <a href=""http://www.unicode.org/reports/tr31/"" rel=""nofollow noreferrer"">UAX#31</a>) it may be possible to extend GraphQL's syntax to enable multi-lingual identifiers without needing to resort to an approach such as <a href=""https://en.wikipedia.org/wiki/Punycode"" rel=""nofollow noreferrer"">""punycode""</a>. </p>&#xA;",141284,,,,2019-02-04 18:18:22,"",,0,0,0,2019-02-04 18:18:22
54540121,2,,54540045,0,,"<p>Turn on customer accounts in your Shopify Admin. If they are turned off, then it makes sense that you cannot create a customer. </p>&#xA;",210841,,,,2019-02-05 17:38:19,"",,0,0,0,2019-02-05 17:38:19
54549315,1,,,1,84,"<p>Why GitHub Graphql and Yelp GraphQL don't allow multiple orderBy field?</p>&#xA;&#xA;<p>Now</p>&#xA;&#xA;<pre><code>repositories(first:3, orderBy: {field: CREATED_AT, direction: DESC}) {&#xA;  edges {&#xA;    node {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to query like this.</p>&#xA;&#xA;<pre><code>repositories(first:3, orderBy: [{field: COMMENT, direction: DESC}, {field: CREATED_AT, direction: DESC}]) {&#xA;  edges {&#xA;    node {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4327269,,,,2019-11-21 09:26:21,Why GitHub Graphql and Yelp GraphQL don't allow multiple orderBy field?,<graphql>,2,0,0,2019-02-06 08:28:01
54572432,1,54573065,,0,926,"<p>While experimenting with the Union types in GraphQL here: <a href=""https://graphql.github.io/learn/schema/#union-types"" rel=""nofollow noreferrer"">https://graphql.github.io/learn/schema/#union-types</a> I ran into the following:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/YVEXt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YVEXt.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>I initially thought that the fields you specify in the query are the fields that going to be searched for the text: ""Millenium"", however that's not the case because I'm still getting the Millenium Falcon's data even after removing the name field from the query for the <code>Startship</code> type.</p>&#xA;&#xA;<p>I did another test: R2-D2's <code>primaryFunction</code> is <code>Astromech</code>, if you search for <code>Astromech</code> you'll get nothing, even if <code>primaryFunction</code> is specified for <code>Droid</code> type.</p>&#xA;",407466,,,,2019-02-07 12:10:59,Understanding GraphQL Union types,<graphql>,1,0,0,2019-02-07 11:33:34
54577929,2,,54127800,0,,"<p>@Russ looks like it's only available according to the UI. I am in the same position in needing to enable this for a very large number of repos.</p>&#xA;&#xA;<p>Take a look at: <a href=""https://github.community/t5/GitHub-API-Development-and/Security-vulnerability-alerts/td-p/15846"" rel=""nofollow noreferrer"">https://github.community/t5/GitHub-API-Development-and/Security-vulnerability-alerts/td-p/15846</a></p>&#xA;",277062,,,,2019-02-07 16:29:45,"",,0,0,0,2019-02-07 16:29:45
54599733,1,,,4,436,"<p>I am trying to use GitHub GraphQl Api V4 to Query Data </p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner:""octocat"", name:""Hello-World"") {&#xA;    issues(last:20, states:CLOSED) {&#xA;      edges {&#xA;        node {&#xA;          title&#xA;          url&#xA;          labels(first:5) {&#xA;            edges {&#xA;              node {&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>this query is working as well on Git-Hub query <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">explorer</a> &#xA;But when I tried it using insomnia or Apollo library return <strong>""Cannot query field \""repository\"" on type \""Query\"".""</strong></p>&#xA;",1485424,,4606185,2021-08-01 08:10:29,2022-06-13 10:43:44,"GitHub GraphQl api v4 return ""Cannot query field repository on type Query""",<android><github><graphql><apollo>,1,4,0,2019-02-08 20:28:36
54656838,2,,53057305,1,,<p>In your config/graphql instead of <code>'posts' =&gt; 'App\GraphQL\Query\PostsQuery'</code><br>&#xA;use <code>'posts' =&gt; App\GraphQL\Query\PostsQuery::class</code>.<br>&#xA;It depends on version of PHP sometimes.</p>&#xA;,11052500,,5935112,2019-02-12 19:14:50,2019-02-12 19:14:50,"",,0,0,0,2019-02-12 18:52:43
54697490,1,55203681,,0,184,"<p>My items from my array seem to not be passed into the my <strong><em>'resolve' => function</em></strong>. Right now the function returns <strong><em>fail</em></strong>.  If I replace $meta with an array item then it works. Im trying to fetch meta values for GraphQL and dont want to make a function per field.</p>&#xA;&#xA;<pre><code>            add_action( 'graphql_register_types', function() {&#xA;                $metas = array('phone', 'city', 'state', 'zip');&#xA;                foreach($metas as $meta){&#xA;                    register_graphql_field( 'Location', $meta, [&#xA;                        'type' =&gt; 'String',&#xA;                        'description' =&gt; __( 'The post data', 'wp-graphql' ),&#xA;                        'resolve' =&gt; function($post, $meta) {&#xA;                        $GQL_data = get_post_meta( get_the_ID(), $meta, true);&#xA;                        return ! empty( $GQL_data  ) ? $GQL_data  : 'fail';&#xA;                        }&#xA;                    ] );&#xA;                }&#xA;            });&#xA;</code></pre>&#xA;&#xA;<p><strong>Expected GraphQL output:</strong></p>&#xA;&#xA;<p>""phone"": ""123-123-1234"",</p>&#xA;&#xA;<p>""city"": ""Los Angeles"",</p>&#xA;&#xA;<p>""state"": ""CA"",</p>&#xA;&#xA;<p>""zip"": ""99922""</p>&#xA;&#xA;<p><strong>currently all items have a value of:</strong> ""fail""</p>&#xA;",11053564,,,,2019-08-27 13:57:31,Why are my array items not passing into my function on foreach PHP for GraphQL?,<php><arrays><wordpress><graphql>,1,0,0,2019-02-14 19:09:16
54698726,1,,,4,19756,"<p>I get the error message ""Cannot query field ""available"" on type ""Query"" when I try to fetch all products including the available property.</p>&#xA;&#xA;<h2>Query call</h2>&#xA;&#xA;<pre><code>const res = await fetch(`graphql?query={products{&#xA;    id&#xA;    name&#xA;    available&#xA;  }}`);&#xA;</code></pre>&#xA;&#xA;<h2>Schema</h2>&#xA;&#xA;<pre><code>export default `&#xA;type Product {&#xA;  id: ID!&#xA;  name: String! &#xA;  available: [Available]&#xA;}&#xA;&#xA;type Available  {&#xA;  stock: String&#xA;  size: String&#xA;}&#xA;&#xA;input AvailableInput {&#xA;  stock: String&#xA;  size: String&#xA;}&#xA;&#xA;type Query {&#xA;  product(name: String!): Product&#xA;  products: [Product] &#xA;}&#xA;&#xA;type Mutation {&#xA;  addProduct(name: String! available:[AvailableInput] ): Product&#xA;}&#xA;`;&#xA;</code></pre>&#xA;",3291261,,3291261,2019-02-15 07:58:54,2021-08-26 19:04:15,"""Cannot query field ""available"" on type ""Query""",<graphql>,2,0,0,2019-02-14 20:38:54
54702827,2,,54698726,1,,<p>what does your <code>type Product</code> look like in Schema? perhaps you're missing a field on that as you're querying the <code>available</code> field as a subfield of <code>Product</code> </p>&#xA;,4832501,,,,2019-02-15 04:47:59,"",,0,2,0,2019-02-15 04:47:59
54733409,2,,54636363,3,,"<p>Based on your comment the following should work:</p>&#xA;&#xA;<pre><code>&#xA;const generateQuery = (documentNode, fragment) =&gt; {&#xA;  return gql`&#xA;   query user(id: String) {&#xA;      user(id: $id) {&#xA;       ...${fragment}&#xA;      }&#xA;     }&#xA;     ${documentNode}&#xA;  `&#xA;}&#xA;&#xA;const idQuery = generateQuery(userIdFrag, 'UserId');&#xA;const fullUserQuery = generateQuery(fullUserFrag, 'FullUser');&#xA;</code></pre>&#xA;&#xA;<p>Basically the fragment name used is the actual one that needs to be spread while the whole documentNode object is put at the end, after query's closing bracket</p>&#xA;",5546463,,,,2019-02-17 12:49:11,"",,0,2,0,2019-02-17 12:49:11
54742059,2,,54738568,1,,"<p>A way to pass variables into mutation could be by doing something like:</p>&#xA;&#xA;<pre><code>const url = 'https://xxxx.myshopify.com/api/graphql';&#xA;const query = `&#xA;    mutation customerCreate($input: CustomerCreateInput!) {&#xA;      customerCreate(input: $input) {&#xA;        userErrors {&#xA;          field&#xA;          message&#xA;        }&#xA;        customer {&#xA;          id&#xA;        }&#xA;      }&#xA;    }&#xA;`;&#xA;fetch(url, {&#xA;    method: 'POST',&#xA;    headers: { 'Content-Type': 'application/json' },&#xA;    body: JSON.stringify({ &#xA;        query: query,&#xA;        variables: {&#xA;           input: {&#xA;             email: ""test@test.com"",&#xA;             password: ""pass""&#xA;           }&#xA;        }, &#xA;    }),&#xA;})&#xA;.then(res =&gt; res.json())&#xA;.then(res =&gt; console.log(res.data));&#xA;.catch(err =&gt; {&#xA;    console.log('-- gql err --')&#xA;    console.error(err);&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>And just make sure the <code>variables</code> object inside <code>JSON.stringify</code> have to match the type <code>CustomerCreateInput</code>.</p>&#xA;",3708153,,,,2019-02-18 07:12:14,"",,0,0,0,2019-02-18 07:12:14
54742888,2,,54402112,2,,"<p>Seeing your code, it would work fine. the createPage structure is ok.</p>&#xA;&#xA;<p>In my experience, Sometimes gatsby/graphql error emitter doesn't show the correct error line, if there're many variables with the same name (imgSrc) gatsby error emitter shows the first one appeared variable, not the wrong one.</p>&#xA;&#xA;<p>To confirm that you should put an ""if"" before return the render checking if product is not defined. It is a good way to prevent render errors during builds:</p>&#xA;&#xA;<pre><code>render(){&#xA;   const {product} = this.props.pathContext;&#xA;&#xA;   if(product === undefined) return null;&#xA;&#xA;   ......&#xA;&#xA;   return &lt;div&gt;....&lt;/div&gt;;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can also put a console.log in the gatsby-node showing ""allProducts"" &amp; ""product"" variables, checking the variable structure during the build.</p>&#xA;&#xA;<p>Could you please reply with the results?</p>&#xA;",7634836,,,,2019-02-18 08:12:03,"",,0,0,0,2019-02-18 08:12:03
54744066,1,54749015,,17,29947,"<p>I'm trying to combine multiple GraphQL queries into one query using JavaScript.<br />&#xA;I am looking for something like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>let query3 = mergeQueries(query1, query2);&#xA;</code></pre>&#xA;<p>We won't know beforehand which queries will be combined.</p>&#xA;<p>Suppose I have queries like this:</p>&#xA;<p>input query1:</p>&#xA;<pre><code>{&#xA;  post(id: 1234) {&#xA;    title&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>input query2:</p>&#xA;<pre><code>{&#xA;  post(id: 1234) {&#xA;    tags&#xA;    author {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Then I would like the result query3 to be:<br />&#xA;result query3:</p>&#xA;<pre><code>{&#xA;  post(id: 1234) {&#xA;    title&#xA;    tags&#xA;    description&#xA;    author {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This would be the same functionality as lodash <code>_.merge()</code> does for JSON objects, but then with GraphQL queries instead of JSON objects.</p>&#xA;",1180612,,7747942,2022-05-20 13:53:53,2022-05-23 12:28:36,Graphql merge (combine) multiple queries into one?,<javascript><graphql>,4,2,0,2019-02-18 09:28:56
54757319,1,54757832,,0,464,<p>I'm trying to query GitHub's GraphQL API (v4). What GraphQL query for this API can be used to get all of the commits I've contributed to a particular public repo?</p>&#xA;,8930149,,,,2019-02-19 02:01:39,GitHub's GraphQL API: How can I get all of the commits I've contributed to a particular public repo?,<github><graphql><github-graphql>,1,0,0,2019-02-19 00:36:36
54757832,2,,54757319,2,,"<p>I figured out the solution. (The solution shown below is for getting relevant commits from <code>master</code>, but can easily be adapted for other <code>qualifiedName</code> values.)</p>&#xA;&#xA;<p>First, perform an initial query to obtain user ID:</p>&#xA;&#xA;<pre><code>query {&#xA;  viewer {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then the following query can be used to get all contributed commits to a particular repository:</p>&#xA;&#xA;<pre><code>query($repository_owner:String!, $repository_name:String!, $user_id:ID!) {&#xA;    repository(owner: $repository_owner, name: $repository_name) {&#xA;        ref(qualifiedName: ""master"") {&#xA;            target {&#xA;                ... on Commit {&#xA;                    history(author: {id: $user_id}) {&#xA;                        totalCount&#xA;                        nodes {&#xA;                            id&#xA;                            authoredDate&#xA;                            message&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The query variables take the following form:</p>&#xA;&#xA;<pre><code>{&#xA;  ""repository_owner"": ""REPOSITORY_OWNER_STRING"",&#xA;  ""repository_name"": ""REPOSITORY_NAME_STRING"",&#xA;  ""user_id"": ""USER_ID_FROM_STEP_1""&#xA;}&#xA;</code></pre>&#xA;",8930149,,,,2019-02-19 02:01:39,"",,0,0,0,2019-02-19 02:01:39
54801369,2,,54800744,1,,"<p>Your <code>getproducts</code> should return an object matching the properties of your <code>GraphQL</code> Schema, I would need more code to answer your question properly but here's a quick fix for your issue, keeping in mind that that <code>mongodb</code> Product schema should match the <code>GraphQL</code> Schema.</p>&#xA;&#xA;<pre><code>var resolvers = {&#xA;    Query: {&#xA;       getProducts: () =&gt; {&#xA;          return getproducts();&#xA;       },&#xA;    },&#xA; }&#xA;&#xA; const getproducts = () =&gt; {&#xA;    return new Promise((resolve,reject)=&gt;{&#xA;        Product.find({}).exec()&#xA;        .then(resp=&gt;{&#xA;            console.log(""response is "",resp);&#xA;            // let stringData = resp.toString()&#xA;            resolve(resp);&#xA;        }).catch(err=&gt;{&#xA;            console.log('error is ',err);&#xA;            reject(err);&#xA;        })&#xA;    })&#xA; }&#xA;</code></pre>&#xA;&#xA;<h3>GraphQL Schema</h3>&#xA;&#xA;<pre><code>type Product {&#xA;   test: String&#xA;}&#xA;&#xA;type Query {&#xA;   getProducts: [Product] // Query returns an array of products&#xA;}&#xA;</code></pre>&#xA;",915306,,,,2019-02-21 07:23:08,"",,0,4,0,2019-02-21 07:23:08
54809711,1,,,1,32,<p>The potential problem is as follows: </p>&#xA;&#xA;<p>GraphQL expects you to specify exactly which fields you want it to return. So let's say we have a product like this:</p>&#xA;&#xA;<pre><code>productId&#xA;title&#xA;slug&#xA;selectedOptions.[someAttributeId].defaultValue&#xA;selectedOptions.[someAttributeId].name&#xA;selectedOptions.[someAttributeId].description&#xA;selectedOptions.[someOtherAttributeId].defaultValue&#xA;selectedOptions.[someOtherAttributeId].name&#xA;selectedOptions.[someOtherAttributeId].description&#xA;selectedOptions.[...etc].defaultValue&#xA;selectedOptions.[...etc].name&#xA;selectedOptions.[...etc].description&#xA;...etc&#xA;</code></pre>&#xA;&#xA;<p>I removed the JSON syntax for easier reading. Point is: how many attributes there are and which attributes there are differs per product. </p>&#xA;&#xA;<p>Can I tell GraphQL to just return the field 'selectedOptions' and everything it contains? Or do I need some complex work-around to retrieve the attribute IDs and work that into my query?</p>&#xA;,11096494,,,,2019-02-21 14:42:57,"GraphQL: how to have it return a flexible, dynamic array, depending on what the marketeer filled in?",<graphql>,0,1,0,2019-02-21 14:42:57
54857513,1,,,-2,33,"<p>Essentially what I want to do is to be able to query, lets say, fruits(0:30). This would give me the 29 documents in the collection regarding fruits. I understand how to query documents and such in graphql, but I do not understand how I would resolve this issue. I see many examples using TypeScript or the files are .graphql and I have no idea what is going on. Is there any possible solution in only node/javascript?</p>&#xA;",11110489,,,,2019-02-24 23:20:23,Is there a way to query for a certain amount of documents from a database with graphql?,<javascript><node.js><graphql>,1,1,0,2019-02-24 23:14:34
54857686,2,,51579476,3,,<p>copy your GQL code and use another editor like TextEdit to and paste as plain Text then copy the plain text and paste back in VSCode. </p>&#xA;,5535669,,,,2019-02-24 23:41:49,"",,0,1,0,2019-02-24 23:41:49
54908157,2,,54892460,0,,"<p>The issue was with defining the type.</p>&#xA;&#xA;<p>When the parent resolves, it is expecting the child to be an array of Object but what is being delivered is an array of strings.  Thus, the type validation returns an array of nulls per the ""bubble-up"" as defined in result 1 <a href=""https://www.apollographql.com/docs/graphql-tools/resolvers.html#Resolver-result-format"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;&#xA;<p>There is an open discussion on github to allow for <a href=""https://github.com/facebook/graphql/issues/215"" rel=""nofollow noreferrer"">unions scalar types</a>. </p>&#xA;",1202630,,,,2019-02-27 14:51:12,"",,0,0,0,2019-02-27 14:51:12
54937674,2,,54937238,1,,"<p>The error you're seeing means that <code>return data</code> is returning an object, which is not a valid React child. You should convert that into either an array, text, or a component. If <code>all_checklist_time</code> is an array, just <code>return data.all_checklist_time</code>.</p>&#xA;",8852158,,,,2019-03-01 03:49:12,"",,0,0,0,2019-03-01 03:49:12
54938427,2,,54932259,1,,"<p>In your query result, <code>node.contentItems</code> is an array, even though you're trying to access it as if it's an object:</p>&#xA;&#xA;<pre><code>path: `${node.contentItems.elements.url_slug.value}`,&#xA;                           ^^^^^^^^&#xA;&#xA;console.log(contentItems) // [ { elements: {...} }, { elements: {...} }, ... ]&#xA;</code></pre>&#xA;&#xA;<p>I think your confusion probably stems from the way <code>console.table</code> display data. It's confusing if you don't already know the shape of your data. Your screenshot says, this object has 4 properties with index 0 -> 3 (so likely an array), each has one property called <code>elements</code> (listed on table header), which is an object with the only property <code>url_slug</code>.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>I'm not familiar with KenticoCloud, but maybe your posts are nested in <code>contentItems</code>, in which case you should loop over it:</p>&#xA;&#xA;<pre><code>result.data.allKenticoCloudTypeBlogPost.edges.map(({node}) =&gt; {        &#xA;  node.contentItems.forEach(({ elements }) =&gt; {&#xA;    createPage({&#xA;      path: elements.url_slug.value,&#xA;      context: { slug: elements.url_slug.value },&#xA;      component: ...&#xA;    })&#xA;&#xA;  })&#xA;});&#xA;</code></pre>&#xA;",10340970,,10340970,2019-03-01 05:52:53,2019-03-01 05:52:53,"",,0,1,0,2019-03-01 05:26:48
54943849,2,,54943361,2,,"<p>This is Object Destructuring and Property Shorthand feature.<br>&#xA;<code>1.) What will happen when using curly braces.</code>.<br>&#xA;-> when you iterate using map on edges list you get the edge object in your map function, at the same time you have explicitly mention to destruct node property from edge object.</p>&#xA;&#xA;<pre><code> {data.allMarkdownRemark.edges.map(({ node }) =&gt; (&#xA;      &lt;div key={node.id}&gt;&#xA;        &lt;h3&gt;{node.frontmatter.title}&lt;/h3&gt;&#xA;      &lt;/div&gt;&#xA;    ))}&#xA;</code></pre>&#xA;&#xA;<p><code>2.)  What will happen when curly braces not use</code>.<br>&#xA;->  when you iterate through map on edges list you will get edge object as a parameter inside the function. in this case, you have to access node property explicitly.</p>&#xA;&#xA;<pre><code> {data.allMarkdownRemark.edges.map( edge  =&gt; (&#xA;      &lt;div key={edge.node.id}&gt;&#xA;        &lt;h3&gt;{edge.node.frontmatter.title}&lt;/h3&gt;&#xA;      &lt;/div&gt;&#xA;    ))}&#xA;</code></pre>&#xA;&#xA;<p>Ref : <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"" rel=""nofollow noreferrer"">Destructing Feature</a>&#xA;Hope so it will clear your doubt..</p>&#xA;",6737862,,6737862,2019-03-01 11:41:51,2019-03-01 11:41:51,"",,0,1,0,2019-03-01 11:36:20
54960334,2,,54698726,0,,"<p>Your <code>available</code> field returns object of <code>type Available</code>, so the first error is that you have no subfields in your query string.</p>&#xA;&#xA;<p>Gives this a try:</p>&#xA;&#xA;<pre><code>const res = await fetch(`graphql?query={products{&#xA;    id&#xA;    name&#xA;    available {&#xA;        stock&#xA;        size&#xA;    }&#xA;  }}`);&#xA;</code></pre>&#xA;",4832501,,,,2019-03-02 15:57:22,"",,0,0,0,2019-03-02 15:57:22
54992065,1,55004976,,0,497,"<p>I have a file called <code>config-ingest.js</code> in my plugins directory with the following:</p>&#xA;&#xA;<pre><code>import gql from 'graphql-tag'&#xA;&#xA;export default ({ app }, inject) =&gt; {&#xA;&#xA;  const client = app.apolloProvider.defaultClient;&#xA;&#xA;  const apps = gql`&#xA;    query {&#xA;      apps: allApps {&#xA;        key&#xA;        tree&#xA;      }&#xA;    }&#xA;  `;&#xA;&#xA;  client.query({ query: apps }).then(response =&gt; {&#xA;    inject('configStructure', response.data.apps);&#xA;  });&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Although the data is successfully retrieved, it doesn't seem to be available in all my pages and components.</p>&#xA;&#xA;<p>If I want to get data from another server that should be available to all my pages, how would I do this? I want to stick this data in it's own file so I can get the data from any component or page when I please.</p>&#xA;",363705,,,,2019-03-06 16:22:34,How to get data into my Nuxt app for all pages/components,<api><asynchronous><vue.js><apollo><nuxt.js>,2,0,0,2019-03-04 21:48:43
54992592,1,55011087,,0,1139,"<p>I have the following sample mutation:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  checkoutCreate(input: {&#xA;    lineItems: [{ variantId: ""Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC80"", quantity: 1 }]&#xA;  }) {&#xA;    checkout {&#xA;       id&#xA;       webUrl&#xA;       lineItems(first: 5) {&#xA;         edges {&#xA;           node {&#xA;             title&#xA;             quantity&#xA;           }&#xA;         }&#xA;       }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm using .net <a href=""https://github.com/graphql-dotnet/graphql-client"" rel=""nofollow noreferrer"">GraphQL client</a>. I would like to somehow pass lineItems list to this query. I did the following:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  checkoutCreate(input: {&#xA;    $lineItems&#xA;  }) {&#xA;    checkout {&#xA;       id&#xA;       webUrl&#xA;       lineItems(first: 5) {&#xA;         edges {&#xA;           node {&#xA;             title&#xA;             quantity&#xA;           }&#xA;         }&#xA;       }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>C# code:</p>&#xA;&#xA;<pre><code>    dynamic lineItems = new List&lt;dynamic&gt;&#xA;    {&#xA;        new&#xA;        {&#xA;            variantId = ""Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC80"",&#xA;            quantity = 2&#xA;        }&#xA;    };&#xA;&#xA;    var request = new GraphQLRequest&#xA;    {&#xA;        Query = m_resource.Resource.GetString(""CheckoutCreate""), // Gets from resource file the above string&#xA;        Variables = lineItems &#xA;    };&#xA;&#xA;    var response = await m_client.PostAsync(request);&#xA;</code></pre>&#xA;&#xA;<p>I keep getting:</p>&#xA;&#xA;<blockquote>&#xA;  <p>GraphQLHttpException: Unexpected HttpResponseMessage with code:&#xA;  BadRequest</p>&#xA;</blockquote>&#xA;&#xA;<p>Is there a way to do this? or do I have to replace within a string?</p>&#xA;&#xA;<p><strong>EDIT:</strong></p>&#xA;&#xA;<p>I've tried this (and 20 other ways and still getting errors). All i'm trying to do is pass in a list of LineItems.</p>&#xA;&#xA;<pre><code>mutation CreateCheckout($input: LineItemsInput!) {&#xA;  checkoutCreate(input: $input) {&#xA;    checkout {&#xA;       id&#xA;       webUrl&#xA;       lineItems(first: 5) {&#xA;         edges {&#xA;           node {&#xA;             title&#xA;             quantity&#xA;           }&#xA;         }&#xA;       }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;        var request = new GraphQLRequest&#xA;        {&#xA;            Query = m_resource.Resource.GetString(""CheckoutCreate""),&#xA;            Variables = new&#xA;            {&#xA;                LineItemsInput = new List&lt;dynamic&gt;&#xA;                    {&#xA;                        new&#xA;                        {&#xA;                            variantId = ""Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC80"",&#xA;                            quantity = 2&#xA;                        }&#xA;                    }&#xA;            }&#xA;        };&#xA;</code></pre>&#xA;&#xA;<p>Json request looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""Query"": ""mutation CreateCheckout($input: LineItemsInput!) {\r\n  checkoutCreate(input: $input) {\r\n    checkout {\r\n       id\r\n       webUrl\r\n       lineItems(first: 5) {\r\n         edges {\r\n           node {\r\n             title\r\n             quantity\r\n           }\r\n         }\r\n       }\r\n    }\r\n  }\r\n}"",&#xA;  ""OperationName"": null,&#xA;  ""Variables"": {&#xA;    ""LineItemsInput"": [&#xA;      {&#xA;        ""variantId"": ""Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC80"",&#xA;        ""quantity"": 2&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",455042,,9960510,2020-03-09 16:34:51,2020-03-09 16:34:51,Creating GraphQL mutation,<c#><.net><graphql><github-graphql>,3,0,0,2019-03-04 22:30:10
54993035,2,,54992592,1,,"<p>Variables is an object, a single value.</p>&#xA;&#xA;<p>With pseudocode, you have <code>variables = lineItems</code>, but you need <code>variables = { lineItems: lineItems }</code></p>&#xA;",4850916,,,,2019-03-04 23:11:58,"",,0,0,0,2019-03-04 23:11:58
54993193,2,,54992592,1,,"<p>In the query itself, you need to <a href=""https://graphql.org/learn/queries/#variables"" rel=""nofollow noreferrer"">declare the variable and its type</a>.  In your case this might look like</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>mutation CreateCheckout($lineItems: [LineItem!]!) {&#xA;  checkoutCreate(input: {&#xA;    $lineItems&#xA;  }) { ... FieldsFromTheQuestion }&#xA;</code></pre>&#xA;&#xA;<p>The name of the operation (<code>CreateCheckout</code>) can be anything that's meaningful to you; it's not specified in the schema.</p>&#xA;&#xA;<p>@galkin's answer is probably relevant too: when you make the request you need to pass the line item list under the key <code>""input""</code>, matching the variable name in the query.  The <a href=""https://graphql.org/learn/serving-over-http/#post-request"" rel=""nofollow noreferrer"">raw JSON request</a> should look something like</p>&#xA;&#xA;<pre><code>{&#xA;  ""query"": ""mutation CreateCheckout ..."",&#xA;  ""variables"": {&#xA;    ""input"": [&#xA;      {&#xA;        ""variantId"": ""Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC80"",&#xA;        ""quantity"" 2&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",10008173,,,,2019-03-04 23:28:43,"",,0,0,0,2019-03-04 23:28:43
54994118,2,,54993760,0,,"<p>Your query string does not have the keyword query and also has an additional bracket. It should be as follows</p>&#xA;&#xA;<pre><code>fetch({&#xA;  query: `&#xA;   query transactions {&#xA;     transactions(limit: 3) {&#xA;      tid&#xA;      terminalNo&#xA;      issuerId&#xA;     }&#xA;    }&#xA;`,&#xA;})&#xA;</code></pre>&#xA;",2041906,,2041906,2019-03-05 01:36:56,2019-03-05 01:36:56,"",,0,3,0,2019-03-05 01:26:51
55000909,1,55122860,,6,3689,"<p>I have created an entity called <code>Order</code> in my <code>datamodel.prisma</code> file. there it should have it's automatically generating field called <code>orderRef</code>. which should have an automatically generated incremental value for <code>createOrder</code> field of the Order entity for each mutation call.</p>&#xA;&#xA;<p>for the first Order the value of the 'orderRef' field should be OD1, the second Order should have the value OD2 for the field 'orderRef' and so on.&#xA;eg: </p>&#xA;&#xA;<p>(OD1, OD2, ....... OD124, ..... )</p>&#xA;&#xA;<p>What is the easiest way to achieve this?&#xA;yes <strong>the value should be String, instead of Number.</strong></p>&#xA;",4204471,,,,2019-03-14 11:20:04,Auto generated Incrementing field for prisma,<prisma><prisma-graphql>,1,0,0,2019-03-05 10:42:55
55008949,2,,55008651,16,,"<p>According to that error, you need to add an <code>id</code> field (or <code>_id</code> field, whichever exists) to the selection set for the <code>vendor</code> field. Sounds like you already have another query that returns objects of the type <code>Restaurant</code>, that query included the id and was normalized properly. Apollo won't be able to combine the individual <code>Restaurant</code> objects from both queries unless an <code>id</code> is included.</p>&#xA;&#xA;<pre><code>export const AdditionalServicesQuery = gql`&#xA;  query AdditionalServices(&#xA;    $vendorID: ID!&#xA;  ) {&#xA;    vendor(&#xA;      id: $vendorID&#xA;    ) {&#xA;      id # &lt;----------------------------------------- ADD ME&#xA;      services: products (productTypes: service) {&#xA;        nodes {&#xA;          id&#xA;          isActive&#xA;          cartSection {&#xA;            id&#xA;            name&#xA;          }&#xA;          description&#xA;          imageUrl&#xA;          shortDescription&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;",6024220,,,,2019-03-05 18:02:48,"",,0,5,0,2019-03-05 18:02:48
55019511,2,,55018992,1,,<p>If [Array] is array of <strong>object</strong> you need to do that.</p>&#xA;&#xA;<pre><code>`&#xA;type ProductAttributes { &#xA;        id: Int!&#xA;        name: String!&#xA;        position: String!&#xA;        visible: Boolean!&#xA;        Variation: Boolean!&#xA;        options: [String!] &#xA;}&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>If [Array] is an array of the <strong>array</strong> then in every last inner array should object or string take as above. And you can process these steps till the last array.&#xA;Now in your case array of string so you can use direct <strong>String</strong> type.</p>&#xA;,10893484,,10893484,2019-03-06 11:45:47,2019-03-06 11:45:47,"",,0,1,0,2019-03-06 09:21:39
55027764,2,,54992065,0,,"<p>I was able to do the following in <code>store/index.js</code>:</p>&#xA;&#xA;<pre><code>import gql from 'graphql-tag'&#xA;&#xA;export const state = () =&gt; ({&#xA;  apps: []&#xA;})&#xA;&#xA;export const mutations = {&#xA;  SET_APPS (state, apps) {&#xA;    state.apps = apps&#xA;  },&#xA;}&#xA;&#xA;export const getters = {&#xA;  getApps (state) {&#xA;    return state.apps;&#xA;  },&#xA;  }&#xA;}&#xA;&#xA;export const actions = {&#xA;  async nuxtServerInit ({ commit }, { app }) {&#xA;&#xA;    const client = app.apolloProvider.defaultClient;&#xA;&#xA;    const apps = gql`&#xA;        query {&#xA;          apps: allApps {&#xA;            key&#xA;            label&#xA;            tree&#xA;          }&#xA;        }&#xA;      `;&#xA;&#xA;    await client.query({ query: apps }).then(response =&gt; {&#xA;      commit('SET_APPS', response.data.apps)&#xA;    });&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",363705,,,,2019-03-06 16:22:34,"",,0,0,0,2019-03-06 16:22:34
55040796,1,,,6,564,"<p>I'm trying to use the V4 API of GITHUB to get a list of my assigned issues along with its labels and references.</p>&#xA;&#xA;<p>After some time I got the query you can see below, which works exactly how I want.</p>&#xA;&#xA;<p>There is however, a problem: it includes a lot of empty nodes I am not interested at. For example, if I want to get all the CrossReferencedEvent that are issues I will get a lot of empty nodes on the timeline edges array because the other events: LabeledEvent, ReferencedEvent, AssignedEvent etc.</p>&#xA;&#xA;<p>How can I filter out those so I only get the events I am interested at?&#xA;Is this a limitation of graphql? Am I forced to remove the useless nodes locally?&#xA;This is the query that I have currently</p>&#xA;&#xA;<pre><code>{&#xA;  search(query: ""assignee:danielo515"", type: ISSUE, last: 100) {&#xA;    edges {&#xA;      node {&#xA;        ... on Issue {&#xA;          number&#xA;          title&#xA;          state&#xA;          timeline(first: 10) {&#xA;            edges {&#xA;              node {&#xA;                ... on CrossReferencedEvent {&#xA;                   source{&#xA;                    ... on Issue {&#xA;                      title&#xA;                      number&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;          labels(last: 10) {&#xA;            nodes {&#xA;              name&#xA;              color&#xA;            }&#xA;          }&#xA;          repository {&#xA;            name&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>One improvement I can make is, on the query part add <code>is:issue</code>. This will . save me all the empty nodes at the root edges array, but I don't see how to do the same for the nested timeline.</p>&#xA;&#xA;<p>Thanks in advance </p>&#xA;",1734815,,,,2019-03-07 09:54:21,Filter empty nodes on GitHub GraphQL API,<graphql><github-api>,0,0,0,2019-03-07 09:54:21
55055471,1,,,5,1291,"<p>Using GitHub's GraphQL API (v4), how do I query for the top contributors of a given repository? I have a list of repositories and I'd like to display some relevant data for each repository–namely, the top 5 contributors (based on commits) for each repository in the list. </p>&#xA;&#xA;<p>Here is my current query: </p>&#xA;&#xA;<pre><code>{&#xA;  organization(login: ""the-road-to-learn-react"") {&#xA;    id&#xA;    repositories(first: 20) {&#xA;      edges {&#xA;        node {&#xA;          collaborators(affiliation: ALL) {&#xA;            edges {&#xA;              node {&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm running into the error: ""Must have push access to view repository collaborators"". My thought is to get all of the collaborators for each repository, then query each of those users for the number of contributions made to the repository. How can this be done? Is there a way to do this without querying for repository collaborators?</p>&#xA;",7207244,,3708153,2019-03-08 09:16:33,2019-08-10 08:41:19,How to query the top contributors to a GitHub repository using GraphQL,<graphql><github-api>,2,0,0,2019-03-08 01:31:40
55060077,2,,55055471,1,,"<p>In order to access the repository collaborators list through the API you have to be one of the <code>collaborators</code> in the project.</p>&#xA;&#xA;<p>You can read more about <a href=""https://help.github.com/en/articles/permission-levels-for-a-user-account-repository#owner-access-on-a-repository-owned-by-a-user-account"" rel=""nofollow noreferrer"">Permission levels for a user account repository</a>.</p>&#xA;&#xA;<p>And even if you are one of the collaborators, the organization might have not have <code>OAuth App access</code> to some of the repositories.</p>&#xA;&#xA;<p>You can read more about <a href=""https://help.github.com/en/articles/restricting-access-to-your-organizations-data"" rel=""nofollow noreferrer"">Restricting access to your organization's data</a>.</p>&#xA;&#xA;<p>So I believe that query can't be done unless the above requirements are met.</p>&#xA;",3708153,,3708153,2019-03-08 09:28:01,2019-03-08 09:28:01,"",,0,0,0,2019-03-08 09:20:02
55075655,2,,55068107,2,,"<p>If you want to reutrn multiple item for one card in item then</p>&#xA;&#xA;<pre><code>  type Cart {&#xA;     items: [Item]!&#xA;  }&#xA;  type Item {&#xA;     name: String!&#xA;     index: Int!&#xA;  }&#xA;&#xA;  Query {&#xA;    cardItems: [Cart]!&#xA;  }&#xA; resolver {&#xA;   cardItems : () =&gt; {&#xA;    //Perform opration and make result like this to run query properly&#xA;    return [{ items: [{ name: 'name1', index: 0 }, ...]}]       &#xA;    //Which is array of items contain name and index&#xA;   }&#xA;  }&#xA;  // Query to get result&#xA;  {&#xA;    cardItems {&#xA;      items {&#xA;        name&#xA;        index&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>But if you wan to specific index of item in a cart you should taken id or index unique key and make anohter query</p>&#xA;&#xA;<pre><code>Query {&#xA;  itemById(itemId: String!): Item&#xA;}&#xA;resolver {&#xA;    itemById({ itemId }) {&#xA;    //perform opration and return item with respeact to itemId&#xA;    return { name: 'string', index: 1}&#xA;    },&#xA;}&#xA;&#xA;//Query to get result&#xA;{&#xA;  itemById(itemId: ""1""){&#xA;    name&#xA;    index&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>resolver reutrn index or itemId based result.</p>&#xA;",10893484,,,,2019-03-09 08:59:46,"",,0,0,0,2019-03-09 08:59:46
55083055,1,55248029,,0,254,"<p>I'm trying to test an API I built with <code>Lumen (PHP)</code>, but I'm stuck on <code>unit test</code> my <code>GraphQL</code> responses`.</p>&#xA;&#xA;<p>This is what I have tried:</p>&#xA;&#xA;<pre class=""lang-php prettyprint-override""><code>class MovieQueryTest extends Tests\GraphQLTestCase&#xA;{&#xA;    use DatabaseMigrations;&#xA;&#xA;    public function testCanSearch()&#xA;    {&#xA;        Movie::create([&#xA;            'name' =&gt; 'Fast &amp; Furious 8',&#xA;            'alias' =&gt; 'Fast and Furious 8',&#xA;            'year' =&gt; 2016&#xA;        ]);&#xA;&#xA;        $response = $this-&gt;post('/graphql/v1', [&#xA;            'query' =&gt; '{movies(search: ""Fast &amp; Furious""){data{name}}}'&#xA;        ]);&#xA;&#xA;        $response-&gt;seeJson([&#xA;            'data' =&gt; [&#xA;                'movies' =&gt; [&#xA;                    'data' =&gt; [&#xA;                        'name' =&gt; 'Fast &amp; Furious 8'&#xA;                    ]&#xA;                ]&#xA;            ]&#xA;        ]);&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is what I got:</p>&#xA;&#xA;<blockquote>&#xA;  <p>PHPUnit 7.5.6 by Sebastian Bergmann and contributors.</p>&#xA;  &#xA;  <p>F.....                                                              6&#xA;  / 6 (100%)</p>&#xA;  &#xA;  <p>Time: 690 ms, Memory: 24.00 MB</p>&#xA;  &#xA;  <p>There was 1 failure:</p>&#xA;  &#xA;  <p>1) MovieQueryTest::testCanSearch Unable to find JSON fragment&#xA;  [""data"":{""movies"":{""data"":{""name"":""Fast &amp; Furious""}}}] within&#xA;  [{""data"":{""movies"":{""data"":[]}}}]. Failed asserting that false is&#xA;  true.</p>&#xA;</blockquote>&#xA;&#xA;<p>The problem is that my data structure doesn't match the <code>JSON's</code> structure. While my data is inside an <code>Array</code>, the JSON's data is inside an <code>Object</code> and I can't figure out how to make it match:</p>&#xA;&#xA;<ul>&#xA;<li><code>[""data"":{""movies"":{""data"":{""name"":""Fast &amp; Furious 8""}}}]</code></li>&#xA;<li><code>[{""data"":{""movies"":{""data"":[{""name"":""Fast &amp; Furious 8""}]}}}]</code></li>&#xA;</ul>&#xA;&#xA;<p>How can I make my data structure match the JSON's data structure or there is a better way to unit test GraphQL responses on Lumen?</p>&#xA;",6362415,,6362415,2019-03-09 23:40:55,2019-03-19 18:44:12,How to unit test GraphQL responses on Lumen?,<json><api><phpunit><graphql><lumen>,1,1,0,2019-03-09 23:34:05
55118075,2,,55117230,1,,"<p>There's two main ways of achieving this in GraphQL: unions and interfaces.</p>&#xA;&#xA;<p>An interface is where two or more object types in your GraphQL schema share certain fields (characteristics). For example you might have a <code>Product</code> interface for all the items in your shop, where every product has a <code>price</code>, <code>barcode</code>, and <code>shelfLocation</code>. All your products, such as <code>Shampoo</code>, <code>Bread</code>, <code>LawnChair</code> would then implement this interface.</p>&#xA;&#xA;<pre><code>interface Product {&#xA;  price: Float&#xA;  barcode: Int&#xA;  shelfLocation: ShelfLocation&#xA;}&#xA;&#xA;type Bread implements Product {&#xA;  price: Float&#xA;  barcode: Int&#xA;  shelfLocation: ShelfLocation&#xA;  brand: String&#xA;  numberOfSlices: Int&#xA;  calories: Float&#xA;  bestBefore: Date&#xA;}&#xA;&#xA;extend type Query {&#xA;  searchProducts(phrase: String!): [Product!]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>A union is where you declare that something can return more than one object type, but those types don't have to have any properties in common.</p>&#xA;&#xA;<pre><code>type Shark {&#xA;  name: String&#xA;  numberOfTeeth: Int&#xA;}&#xA;&#xA;type Shoe {&#xA;  brand: String&#xA;  size: String&#xA;}&#xA;&#xA;union SharkOrShoe = Shark | Shoe&#xA;&#xA;extend type Query {&#xA;  searchSharksAndShoes(phrase: String!): [SharkOrShoe!]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In both cases you can query type specific fields using fragments or inline fragments:</p>&#xA;&#xA;<pre><code>query {&#xA;  searchProducts(phrase: ""tasty"") {&#xA;    # shared fields&#xA;    __typename&#xA;    price&#xA;    barcode&#xA;    shelfLocation { aisle, position }&#xA;&#xA;    # type specific fields&#xA;    ... on Bread { brand }&#xA;    ...breadFrag&#xA;  }&#xA;  searchSharksAndShoes(phrase: ""sleek"") {&#xA;    # only the introspection fields are shared in a union&#xA;    __typename&#xA;&#xA;    # type specific fields&#xA;    ... on Shark { name, numberOfTeeth }&#xA;    ...shoeFrag&#xA;  }&#xA;}&#xA;&#xA;fragment breadFrag on Bread {&#xA;  barcode&#xA;  bestBefore&#xA;}&#xA;&#xA;fragment shoeFrag on Shoe {&#xA;  brand&#xA;  size&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can learn more about this in the <a href=""https://graphql.org/learn/schema/"" rel=""nofollow noreferrer"">GraphQL schema documentation</a> and read about <a href=""https://graphql.org/graphql-js/type/#graphqlinterfacetype"" rel=""nofollow noreferrer"">GraphQLInterfaceType</a> and <a href=""https://graphql.org/graphql-js/type/#graphqluniontype"" rel=""nofollow noreferrer"">GraphQLUnionType</a> in the GraphQL.js documentation.</p>&#xA;",141284,,,,2019-03-12 09:29:09,"",,0,2,0,2019-03-12 09:29:09
55130769,1,,,0,390,"<p>I'm using the localhost:8000/___graphq debugger and <a href=""https://www.gatsbyjs.org/packages/gatsby-source-prismic/?=prismic#query-slices"" rel=""nofollow noreferrer"">gatsby-source-prismic</a> to returning my slices from  prismic cms. I followed the steps in the readme and I get the correct typenames with this snippet: </p>&#xA;&#xA;<pre><code>{&#xA;  prismicHomepage {&#xA;    data {&#xA;      body {&#xA;        __typename&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My problem is to create the inline fragment:</p>&#xA;&#xA;<pre><code>{&#xA;  prismicHomepage {&#xA;    data {&#xA;      body {&#xA;        __typename&#xA;        ... on PrismicHomepageBodyText {&#xA;          text {&#xA;            html&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>After this I get the error:</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Cannot query field \""text\"" on type \""PrismicHomepageBodyText\""."",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 10,&#xA;          ""column"": 11&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My slices has the API ID : text and I created an single site filled with this slices.</p>&#xA;&#xA;<p>I have no problem to fetch any other API ID, so what did I forget?</p>&#xA;",11192743,,,,2019-07-19 09:19:33,Trouble returning Prismic slices with gatsby-source-prismic,<graphql><gatsby><prismic.io>,1,0,0,2019-03-12 21:16:43
55183453,1,55184555,,1,299,"<p>I have defined in my types the following query. I set up a nodejs and expressGraphQL server.</p>&#xA;&#xA;<pre><code>type Query {&#xA;  product(_id: ID!): Product!&#xA;  products: [Product!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, in my front end I also want to request a specific Product based on a Title (or unique string, derived from the url). How can I change the query for product so it accepts either an ID or a String of Title? </p>&#xA;",10631017,,,,2022-05-30 06:17:26,Querying GraphQL to lookup an object based on id OR name,<node.js><graphql>,1,0,0,2019-03-15 13:13:31
55183695,1,,,2,62,"<p>The object itself inside the object is parsed with an empty field.</p>&#xA;&#xA;<p>input:</p>&#xA;&#xA;<pre><code>{&#xA;  Products(search: {limit: 1, filters: {product_id: {gte: 5}}}) {&#xA;    data {&#xA;      product_id&#xA;      product_name&#xA;      sales_history{&#xA;        total_check&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>output: </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""Products"": {&#xA;      ""data"": [&#xA;        {&#xA;          ""product_id"": 35,&#xA;          ""product_name"": ""testpr"",&#xA;          ""sales_history"": {}&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Product type: </p>&#xA;&#xA;<pre><code>gql.ProductType = graphql.NewObject(graphql.ObjectConfig{&#xA;        Name: ""Product"",&#xA;        Fields: graphql.Fields{&#xA;            ""product_id"": &amp;graphql.Field{&#xA;                Type: graphql.Int,&#xA;            },&#xA;            ""product_name"": &amp;graphql.Field{&#xA;                Type: graphql.String,&#xA;            },&#xA;            ""sales_history"": &amp;graphql.Field{&#xA;                Type: gql.SalesHistoryType,&#xA;            },&#xA;        },&#xA;    })&#xA;</code></pre>&#xA;&#xA;<p>SalesHistory type:</p>&#xA;&#xA;<pre><code>gql.SalesHistoryType = graphql.NewObject(graphql.ObjectConfig{&#xA;    Name: ""sales_history"",&#xA;    Fields: graphql.Fields{&#xA;        ""total_check"": &amp;graphql.Field{&#xA;            Type: graphql.Float,&#xA;        },&#xA;    },&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>In Resolve returning map in interface:</p>&#xA;&#xA;<blockquote>&#xA;  <p>map[data:[map[product_id:35 product_name:testpr sales_history:map[total_check:671.20]]]]</p>&#xA;</blockquote>&#xA;&#xA;<p>I create the map""sales_history"" myself, otherwise opposite the field sales_history - null</p>&#xA;",11208487,,,,2019-03-18 13:46:10,Subobject is not parsed graphql with golang,<go><graphql><graphql-go>,1,0,0,2019-03-15 13:27:58
55184555,2,,55183453,1,,"<p>You can build a <code>InputType</code> with both <code>ID</code> and <code>String</code> as optional but require the <code>InputType</code>, then handle both cases in the resolver.</p>&#xA;<p>Something like:</p>&#xA;<pre><code>input ProductSearch {&#xA;    id: ID&#xA;    title: String&#xA;}&#xA;&#xA;type Product {&#xA;    id: ID!&#xA;    title: String&#xA;}&#xA;&#xA;type Query {&#xA;  product(search: ProductSearch!): Product!&#xA;  products: [Product!]!&#xA;}&#xA;</code></pre>&#xA;<p>And in your resolver you can handle the cases like:</p>&#xA;<pre><code>Query: {&#xA;    product: (source, args) =&gt; {&#xA;        if (args.search.id) {&#xA;            // here you have id&#xA;            console.log(args.search.id)&#xA;        }&#xA;        if (args.search.title) {&#xA;            // here you have title&#xA;            console.log(args.search.title)&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",3708153,,3708153,2022-05-30 06:17:26,2022-05-30 06:17:26,"",,0,1,0,2019-03-15 14:13:53
55194380,1,,,0,785,"<p>I have a schema</p>&#xA;&#xA;<pre><code>&lt;friend&gt;: uid .&#xA;&lt;owns_pet&gt;: uid .&#xA;&lt;person.age&gt;: int @index(int) .&#xA;&lt;person.name&gt;: string @index(fulltext, term, trigram) .&#xA;&lt;pet.name&gt;: string @index(fulltext, term) .&#xA;</code></pre>&#xA;&#xA;<p>with data</p>&#xA;&#xA;<pre><code>{&#xA;  set {&#xA;    _:a1 &lt;person.name&gt; ""A1"" .&#xA;    _:a1 &lt;person.age&gt; ""43"" .&#xA;    _:a2 &lt;person.name&gt; ""A2"" .&#xA;    _:a2 &lt;person.age&gt; ""33"" .&#xA;    _:a3 &lt;person.name&gt; ""A3"" .&#xA;    _:a3 &lt;person.age&gt; ""37"" .&#xA;    _:a1 &lt;friend&gt; _:a2 .&#xA;    _:a1 &lt;friend&gt; _:a3 .&#xA;    _:a3 &lt;friend&gt; _:a2 .&#xA;    _:p2 &lt;pet.name&gt; ""P2"" .&#xA;    _:p3 &lt;pet.name&gt; ""P3"" .&#xA;    _:a2 &lt;owns_pet&gt; _:p2 .&#xA;    _:a3 &lt;owns_pet&gt; _:p3 .&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is it possible to create a query which returns only persons who has a friend, and this friend has a pet with name ""P3""? I expect to see in result</p>&#xA;&#xA;<pre><code>""result"": [&#xA;  {&#xA;    ""name"": ""A1"",&#xA;    ""age"": 43&#xA;  }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>For now i was able to query:</p>&#xA;&#xA;<pre><code>{&#xA;  result (func: has(person.name)) @filter(has(friend)) {&#xA;    name: person.name&#xA;    age: person.age&#xA;    friend @filter(has(owns_pet)) {&#xA;      owns_pet @filter(eq(pet.name, ""P3"")) {&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>but this also returns person ""A3""</p>&#xA;",3252269,,,,2019-04-04 17:52:42,Dgraph deep filtering,<graphql><dgraph>,2,0,0,2019-03-16 07:17:59
55203681,2,,54697490,0,,"<p>The problem is your resolve function when trying to pass a variable into the scope of an anonymous function use the <code>use</code> keyword. What you doing in you code is just renaming the the second parameter (which is the <code>arguments</code> array, and in this case its empty) to <code>$meta</code> and passing that to the <code>get_post_meta</code> function array.</p>&#xA;&#xA;<p>Try refactoring your code to this.</p>&#xA;&#xA;<pre><code>add_action( 'graphql_register_types', function() {&#xA;&#xA;   $metas = array('phone', 'city', 'state', 'zip');&#xA;&#xA;   foreach( $metas as $meta ) {&#xA;&#xA;       register_graphql_field( 'Location', $meta, [&#xA;           'type'        =&gt; 'String',&#xA;           'description' =&gt; __( 'The post data', 'wp-graphql' ),&#xA;           'resolve'     =&gt; function( $post ) use( $meta ) { // Note use( $meta )&#xA;               $GQL_data = get_post_meta( get_the_ID(), $meta, true);&#xA;               return ! empty( $GQL_data  ) ? $GQL_data  : 'fail';&#xA;           }&#xA;       ] );&#xA;&#xA;   }&#xA;} );&#xA;</code></pre>&#xA;",7303754,,7303754,2019-08-27 13:57:31,2019-08-27 13:57:31,"",,0,0,0,2019-03-17 03:50:22
55238850,2,,55213290,4,,"<p>I think it's only a problem of timing on page load.</p>&#xA;&#xA;<p>You should either iterate on products, if you have more than one, or have a <code>v-if=""product != null""</code> on a product container, that will render only once the data is fetched from GraphQL.</p>&#xA;&#xA;<p>In that way you'll use the object in your HTML only when it's really fetched and avoid reading properties from undefined.</p>&#xA;",144446,,,,2019-03-19 10:32:17,"",,0,5,0,2019-03-19 10:32:17
55248029,2,,55083055,0,,"<p>You need to wrap <code>'name' =&gt; 'Fast &amp; Furious 8'</code> inside it's own array, for example:</p>&#xA;&#xA;<p>The following:</p>&#xA;&#xA;<pre><code>$array = [&#xA;    'data' =&gt; [&#xA;        'movies' =&gt; [&#xA;            'data' =&gt; [&#xA;                ['name' =&gt; 'Fast &amp; Furious 8']&#xA;            ]&#xA;        ]&#xA;    ]&#xA;];&#xA;</code></pre>&#xA;&#xA;<p>Should output:</p>&#xA;&#xA;<pre><code>{""data"":{""movies"":{""data"":[{""name"":""Fast &amp; Furious 8""}]}}}&#xA;</code></pre>&#xA;",3208151,,,,2019-03-19 18:44:12,"",,0,0,0,2019-03-19 18:44:12
55290200,1,55290206,,0,289,"<p>I have a lengthy query of the github API:</p>&#xA;&#xA;<pre class=""lang-py prettyprint-override""><code>query = """"""&#xA;{&#xA;  repository(name: ""fifteen5"", owner: ""15five"") {&#xA;    commit: object(expression: ""c63a83caf81ef21616392fe5acb84f9655f94d92"") {&#xA;      ... on Commit {&#xA;        associatedPullRequests(first:5){&#xA;          edges{&#xA;            node{&#xA;              title&#xA;              number&#xA;              body&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The returned value is a deepnly nested dictionary - to get the values I want (title, number, and body) I have to do something like this:</p>&#xA;&#xA;<pre class=""lang-py prettyprint-override""><code># barf!&#xA;prs = areplStore['data']['repository']['commit']['associatedPullRequests']['edges']&#xA;for pr in prs:&#xA;    print(pr['node'])&#xA;</code></pre>&#xA;&#xA;<p>The length of that dictionary access makes my eyes bleed. Is there something I can specify in my graphql query to return only the edges result?</p>&#xA;",6629672,,6629672,2019-03-21 22:31:43,2019-03-21 22:31:43,How to get only a subset of data using graphql?,<python><graphql>,1,0,0,2019-03-21 22:30:25
55306245,1,55306961,,1,702,"<p>I am trying to fetch some data from the GitHub GraphQL but I get a GaphQLError. I have tried the same query on the developer section of github and it works. Anyone know what is the problem with it?    </p>&#xA;&#xA;<pre><code>issueQuery = gql`&#xA;        query search(first: 10, type: ISSUE, query: ""repo:angular/angular is:issue state:open"") {&#xA;          issueCount&#xA;          edges {&#xA;            node {&#xA;              ... on Issue {&#xA;                createdAt&#xA;                title&#xA;                body&#xA;                url&#xA;                comments(first: 10) {&#xA;                  nodes {&#xA;                    body&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      `;&#xA;</code></pre>&#xA;&#xA;<p>Error Stack Trace:</p>&#xA;&#xA;<pre><code>""GraphQLError: Syntax Error: Expected $, found Name ""first""&#xA;    at syntaxError (http://localhost:4200/vendor.js:70270:10)&#xA;    at expect (http://localhost:4200/vendor.js:75154:67)&#xA;    at parseVariable (http://localhost:4200/vendor.js:73984:3)&#xA;    at parseVariableDefinition (http://localhost:4200/vendor.js:73970:15)&#xA;    at many (http://localhost:4200/vendor.js:75222:16)&#xA;    at parseVariableDefinitions (http://localhost:4200/vendor.js:73959:82)&#xA;    at parseOperationDefinition (http://localhost:4200/vendor.js:73926:26)&#xA;    at parseExecutableDefinition (http://localhost:4200/vendor.js:73881:16)&#xA;    at parseDefinition (http://localhost:4200/vendor.js:73845:16)&#xA;    at many (http://localhost:4200/vendor.js:75222:16)""&#xA;</code></pre>&#xA;&#xA;<p>New Error Stack Trace when adding $ before the parameters:</p>&#xA;&#xA;<pre><code>""GraphQLError: Syntax Error: Expected Name, found Int ""10""&#xA;    at syntaxError (http://localhost:4200/vendor.js:70270:10)&#xA;    at expect (http://localhost:4200/vendor.js:75154:67)&#xA;    at parseName (http://localhost:4200/vendor.js:73809:15)&#xA;    at parseNamedType (http://localhost:4200/vendor.js:74385:11)&#xA;    at parseTypeReference (http://localhost:4200/vendor.js:74364:12)&#xA;    at parseVariableDefinition (http://localhost:4200/vendor.js:73971:83)&#xA;    at many (http://localhost:4200/vendor.js:75222:16)&#xA;    at parseVariableDefinitions (http://localhost:4200/vendor.js:73959:82)&#xA;    at parseOperationDefinition (http://localhost:4200/vendor.js:73926:26)&#xA;    at parseExecutableDefinition (http://localhost:4200/vendor.js:73881:16)""&#xA;</code></pre>&#xA;",8603400,,8603400,2019-03-22 19:15:53,2019-03-22 19:54:26,I get a GraphQL error when running this query using the apollo server. Anyone one knows what is the problem with it?,<graphql><angular7>,1,2,0,2019-03-22 19:01:24
55367604,1,,,1,512,"<p>I do not understand how to query by field in nested object as title of this question, with mongoose, graphql, graphiql.... how to write server side code for allow this ?</p>&#xA;&#xA;<p>I setup a GitHub repository for share my code: <a href=""https://github.com/giovannimanzoni/graphqlTestNested"" rel=""nofollow noreferrer"">https://github.com/giovannimanzoni/graphqlTestNested</a></p>&#xA;&#xA;<p>as github readme, how I can add a code to query results in graphql/resolvers/Users/index.js for query all users that have got a specific network.parentId (graphql/types/Users/index.js) ?</p>&#xA;&#xA;<p>Thanks !</p>&#xA;",11263167,,11263167,2019-03-27 13:53:40,2019-03-27 13:53:40,How to filter query by field on nested type/object with mongoose + graphql?,<node.js><mongoose><graphql><graphiql>,0,1,0,2019-03-26 23:23:48
55389176,1,,,5,1197,"<p>I want to run a very similar GraphQL query over a given input set. I figure I could write a loop in my client, but I was wondering if there was a way to use GraphQL to just iterate over my list by feeding it an array as a variable.</p>&#xA;&#xA;<p>e.g., given this query against Github V4 API </p>&#xA;&#xA;<pre><code>query {&#xA;  nasa: organization(login: ""nasa"") {&#xA;     ...orgFields&#xA;  }&#xA;  github: organization(login: ""github"") {&#xA;    ...orgFields&#xA;  }&#xA;}&#xA;&#xA;fragment orgFields on Organization {&#xA;  name&#xA;  url&#xA;  id&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there some way I could pass an array like <code>orgs = [""nasa"",""github""]</code> and it will have the same effect as if I wrote out multiple aliased queries? Or is the only option to programatically create the query and concatenate strings for each alias. E.g., the same idea as if I did something like <code>login: ""nasa"" OR ""github""</code>.</p>&#xA;",689554,,,,2019-03-28 05:32:52,GraphQL efficiently do the same query on an array of variables,<graphql>,1,0,0,2019-03-28 02:10:45
55390752,2,,55389176,1,,"<p>According to the GitHub API documentation, you cannot pass an array of <code>organizations</code> as you are explaining. </p>&#xA;&#xA;<p>Unless GitHub updates their API to support it, for now you would have to go for your second option:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Or is the only option to programmatically create the query and concatenate strings for each alias. E.g., the same idea as if I did something like login: ""nasa"" OR ""github"".</p>&#xA;</blockquote>&#xA;",3708153,,,,2019-03-28 05:32:52,"",,0,2,0,2019-03-28 05:32:52
55417545,1,,,0,118,"<p>I am working with Contentful as my headless CMS for a Gatsby project. I am passing a field to each of the items in one of my content types that is initial value. some examples look like this:</p>&#xA;&#xA;<pre><code>{&#xA;    ""type"": ""boolean"",&#xA;    ""initValue"": true&#xA;}&#xA;</code></pre>&#xA;&#xA;<pre><code>{&#xA;    ""type"": ""color"",&#xA;    ""initValue"": null&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>For some reason the initValue field is the only one that I can't query from the front end. I have just added it so I am not sure if that has any issue but I have restarted my application and nothing. I even check it in the graphiql and it doesn't appear there but every other field does. I am not sure how to debug this.</p>&#xA;&#xA;<p>** The data above is a JSON field within Contentful. **</p>&#xA;&#xA;<p>Does anyone have any ideas?</p>&#xA;",8344506,,,,2019-03-29 13:43:38,JSON Value Not Found - Unknown Field,<json><graphql><gatsby><contentful>,1,0,0,2019-03-29 12:34:33
55419229,1,55509589,,2,1531,"<p>I'm trying to query all of the commits to a specified repository on GitHub via GitHub's GraphQL API v4.</p>&#xA;&#xA;<p>I only want to pull the dates they were committed at, in order to estimate the total time that was contributed to that repository (something along the lines of <a href=""https://github.com/kimmobrunfeldt/git-hours/"" rel=""nofollow noreferrer"">git-hours</a>)</p>&#xA;&#xA;<p>Here's my initial query: <em>(note: you can try to run it in the <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">Explorer</a>)</em></p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""facebook"", name: ""react"") {&#xA;    object(expression: ""master"") {&#xA;      ... on Commit {&#xA;        history {&#xA;          nodes {&#xA;            committedDate&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>Unfortunately it returns only the latest 100 commits, because of the API's <a href=""https://developer.github.com/v4/guides/resource-limitations/"" rel=""nofollow noreferrer"">resource limitations</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <h3>Node Limit</h3>&#xA;  &#xA;  <p>To pass schema validation, all GraphQL API v4 calls must meet these standards:</p>&#xA;  &#xA;  <ul>&#xA;  <li>Clients must supply a first or last argument on any connection.</li>&#xA;  <li>Values of first and last must be within 1-100.</li>&#xA;  <li>Individual calls cannot request more than 500,000 total nodes.</li>&#xA;  </ul>&#xA;</blockquote>&#xA;&#xA;<p>So since I'm not supplying a <code>first</code> or <code>last</code> argument, the API assumes I'm querying for <code>history(first: 100)</code>. And I can't query more than 100 nodes in a single connection.</p>&#xA;&#xA;<p>However, the total node limit being much higher (500,000), I should be able to query commits in groups of 100 until I have all of them.</p>&#xA;&#xA;<p>I was able to query the latest 200 commits using this query:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""facebook"", name: ""react"") {&#xA;    object(expression: ""master"") {&#xA;      ... on Commit {&#xA;        total: history {&#xA;          totalCount&#xA;        }&#xA;        first100: history(first: 100) {&#xA;          edges {&#xA;            cursor&#xA;            node {&#xA;              committedDate&#xA;            }&#xA;          }&#xA;        }&#xA;        second100: history(after: ""700f17be6752a13a8ead86458e343d2d637ee3ee 99"") {&#xA;          edges {&#xA;            cursor&#xA;            node {&#xA;              committedDate&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However I had to manually enter the cursor String that I'm passing in the second connection: <code>second100: history(after: ""cursor-string"") {}</code>.</p>&#xA;&#xA;<p>How can I recursively run this connection until I have a query for all the <code>committedDate</code>s of commits in a repository?</p>&#xA;",7770081,,7770081,2019-03-30 06:04:27,2019-04-04 07:15:21,Querying all commits in a single repository with the GitHub GraphQL API v4,<github><graphql><github-api>,1,0,0,2019-03-29 14:07:23
55452675,2,,51088517,0,,"<p>This issue in Github may resolve your question: <a href=""https://github.com/rmosolgo/graphql-ruby/issues/1412"" rel=""nofollow noreferrer"">https://github.com/rmosolgo/graphql-ruby/issues/1412</a></p>&#xA;&#xA;<p>Just inherit your input type from another input type.</p>&#xA;",5398558,,,,2019-04-01 10:11:13,"",,0,0,0,2019-04-01 10:11:13
55464415,1,,,7,1263,"<p>I am trying to upload files to a webservice using the Upload scalar in apollo-server-express. I can upload small files(10s of kbs) to the webservice but am having trouble getting larger files to send. </p>&#xA;&#xA;<p>I did some searching and found that I can change the body size limit using the body-parser package, along with the bodyParserConfig option set in middleware. I've tried implementing this, as well as implementing it in the express app itself, however neither seem to be working.</p>&#xA;&#xA;<p>bodyParserConfig example snippet</p>&#xA;&#xA;<pre><code>const bodyParserConfig = bodyParser.urlencoded({limit: '50mb', extended: 'true', parameterLimit: 10000});&#xA;&#xA;&#xA;server.applyMiddleware({ app, path: process.env.GRAPHQL_ENDPOINT, bodyParserConfig});&#xA;</code></pre>&#xA;&#xA;<p>I'm not sure if I need to use the json method as inside the apollo service it calls json(config) so I tried this and it also didnt work.</p>&#xA;&#xA;<pre><code>const bodyParserConfig = {limit: '50mb'};&#xA;&#xA;&#xA;server.applyMiddleware({ app, path: process.env.GRAPHQL_ENDPOINT, bodyParserConfig});&#xA;&#xA;</code></pre>&#xA;&#xA;<p>express example snippit</p>&#xA;&#xA;<pre><code>app.use(bodyParser.json({limit: '50mb'}))&#xA;</code></pre>&#xA;&#xA;<p>Trying out both of these options, as well as options from <a href=""https://stackoverflow.com/questions/19917401/error-request-entity-too-large/19965089#19965089"">Error: request entity too large</a> don't seem to work for me. The webservice(Nifi HTTPHandleRequest) tells me it failed to receive content. Most examples of solutions(like the one above) have been specifically for express and not apollo-express-server so I'm not sure if theres a different approach I need to take. The apollo-server documents state to use the bodyParserConfig option, so I'm wondering if I'm not formatting the config correctly.</p>&#xA;&#xA;<p>Is there something simple I'm doing incorrectly? Also how can I view what the limit is? It's hard to debug and see if the options I'm setting are actually doing anything.</p>&#xA;&#xA;<p>Thanks</p>&#xA;",7520802,,,,2021-04-12 12:31:47,Increasing body limit size in apollo-server-express,<express><body-parser><apollo-server>,1,1,0,2019-04-01 22:24:37
55469347,1,56228378,,3,3803,"<p>I'm a little stuck with one GraphQL query.</p>&#xA;&#xA;<pre><code>{&#xA;  collectionByHandle(handle:""price"") {&#xA;    products(first: 16, sortKey:PRICE, query:""title:Bracelet""){&#xA;      edges {&#xA;        cursor&#xA;        node {&#xA;          title&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The error comes from the <code>query</code> parameter which is not supported on Custom collection, but it is on a Smart one.</p>&#xA;&#xA;<blockquote>&#xA;  <p>query: String</p>&#xA;  &#xA;  <p>This field is only used when the collection is smart. If the collection is custom it returns an error. Supported filter parameters:</p>&#xA;  &#xA;  <ul>&#xA;  <li>title</li>&#xA;  <li>product_type</li>&#xA;  <li>vendor</li>&#xA;  <li>gift_card</li>&#xA;  <li>created_at</li>&#xA;  <li>updated_at</li>&#xA;  </ul>&#xA;</blockquote>&#xA;&#xA;<p>So when I use a Custom collection I get the expected error result:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""collectionByHandle"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Cannot filter by query if the collection is a custom collection."",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 3,&#xA;          ""column"": 5&#xA;        }&#xA;      ],&#xA;      ""path"": [&#xA;        ""collectionByHandle"",&#xA;        ""products""&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But when I use a Smart collection I get <code>Access Denied</code></p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""collectionByHandle"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""access denied"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 3,&#xA;          ""column"": 5&#xA;        }&#xA;      ],&#xA;      ""path"": [&#xA;        ""collectionByHandle"",&#xA;        ""products""&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The error message from the front-end is this:</p>&#xA;&#xA;<blockquote>&#xA;  <p>""Field 'products' doesn't accept argument 'query'""</p>&#xA;</blockquote>&#xA;&#xA;<p>So I don't see any reason why this request is not working properly if it is specified that the query parameter works only for Smart Collections and the collection is indeed setup as a smart one.</p>&#xA;&#xA;<p>As to why I use <code>collectionByHandle</code> with <code>products</code> I need to sort the products by price and the products doesn't allow to be sorted by price if I don't include them in the collection.</p>&#xA;&#xA;<p>Here is a video demo of the issue as well: <a href=""https://streamable.com/sevtf"" rel=""nofollow noreferrer"">https://streamable.com/sevtf</a></p>&#xA;&#xA;<p>Any insight of the problem will be much appreciated.</p>&#xA;",2329464,,2329464,2019-04-02 07:50:37,2019-10-26 22:38:42,GraphQL products query Access Denied,<graphql><shopify>,2,1,0,2019-04-02 07:40:35
55487432,1,55495214,,2,982,"<p>I am trying to check if a branch already exists in repo for that first I need to get all the open branches present.</p>&#xA;&#xA;<pre>query searhbranches { <br/>&#xA;   repositoryOwner(login: ""username""){ <br/>&#xA;      repository(name: ""config-replica""){<br/>&#xA;      name <br/>&#xA;      [branches] // something like this but its not available <br/>&#xA;    } <br/>&#xA;  } <br/>&#xA;}<br/></pre>&#xA;",4782185,,4782185,2019-04-03 05:42:53,2019-04-03 12:28:14,How can we list all the branches in a repo using github graphQL api?,<github-api><github-graphql>,1,0,0,2019-04-03 05:05:12
55489747,1,,,1,344,"<p>Trying to learn GraphQL in a Ruby on Rails API I am using the graphql gem.</p>&#xA;&#xA;<p>In this example, I have products and review, the product can have many reviews and review belongs to one product. Reviews have comment:string and stars:int. &#xA;I have everything working so I can return all products with all the reviews. I also know how to return a single product with all the reviews.</p>&#xA;&#xA;<p>What I am now after is all products then all reviews that have a star rating greater than 3.</p>&#xA;&#xA;<p>so I would kind of assume something like</p>&#xA;&#xA;<pre><code>{ &#xA;     products{&#xA;           reviews(where: ""stars&lt; 3"") {&#xA;                  stars&#xA;           }&#xA;     }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I would like </p>&#xA;&#xA;<pre><code>{&#xA;    products{&#xA;        reviews {&#xA;              stars&#xA;         }&#xA;     }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>to also work and return all reviews if its possible</p>&#xA;&#xA;<p>Most tutorial I have seen are in js... use some -> resolver(obj,arg,ctx) syntax that looks to be no longer valid for ruby.</p>&#xA;&#xA;<p>Or does the generic grab all records.</p>&#xA;&#xA;<p>query_type.rb</p>&#xA;&#xA;<pre><code>field :product, ProductType, null: false, description: ""find product by id""do&#xA;      argument :id, ID, required: true&#xA;    end&#xA;&#xA;field :products, [ProductType], null: false&#xA;&#xA;def products&#xA;    Product.all&#xA;end&#xA;&#xA;def product(id:)&#xA;    Product.find(id)&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>product_type.rb</p>&#xA;&#xA;<pre><code>module Types&#xA;  class ProductType &lt; Types::BaseObject&#xA;    description "" A product""&#xA;&#xA;    field :id, ID, null: false&#xA;    field :title, String, null: false&#xA;    field :category, Types::CategoryType, null: false&#xA;    field :reviews, [Types::ReviewType], null: false&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>review_type.rb</p>&#xA;&#xA;<pre><code>module Types&#xA;  class ReviewType &lt; Types::BaseObject&#xA;    field :id, ID, null: false&#xA;    field :content, String, null: false&#xA;    field :stars, Integer, null: false&#xA;    field :product, Types::ProductType, null: false&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>I would like to be able to pass reviews in and get all of them&#xA;but also to be able to use where clauses in there.</p>&#xA;&#xA;<p>What's the best way of doing this?</p>&#xA;",3768595,,,,2019-07-18 05:19:36,Using resolvers to get more complex queries in GraphQL and Ruby,<ruby-on-rails><graphql><graphql-ruby>,1,0,0,2019-04-03 07:48:52
55495214,2,,55487432,3,,"<p>You want to look at the <code>refs</code> node inside <code>repository</code>. Here's an example query that works for me:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""desktop"", name: ""desktop"") {&#xA;    refs(first: 50, refPrefix:""refs/heads/"") {&#xA;      nodes {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is what it returns:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""refs"": {&#xA;        ""nodes"": [&#xA;          {&#xA;            ""name"": ""add-lfs-path-lookup""&#xA;          },&#xA;          {&#xA;            ""name"": ""add-notes-lookup-to-parser""&#xA;          },&#xA;          {&#xA;            ""name"": ""ahead-behind-toggle-spike""&#xA;          },&#xA;          {&#xA;            ""name"": ""all-stash-functions""&#xA;          },&#xA;          ...&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;...&#xA;</code></pre>&#xA;",1363815,,,,2019-04-03 12:28:14,"",,0,2,0,2019-04-03 12:28:14
55509589,2,,55419229,5,,"<p>Although there could be a way of recursively querying all commits on a repo, I couldn't find a working solution.</p>&#xA;&#xA;<h1>Here's my solution</h1>&#xA;&#xA;<p>My need was:</p>&#xA;&#xA;<blockquote>&#xA;  <p>I only want to pull the dates they were committed at, in order to estimate the total time that was contributed to that repository (something along the lines of git-hours)</p>&#xA;</blockquote>&#xA;&#xA;<p>Since I couldn't query the full commit history, I had to make the assumption that the contributed time over the latest 100 commits is the same as over any 100 commits.</p>&#xA;&#xA;<h2>Querying data from the GitHub GraphQL API</h2>&#xA;&#xA;<ul>&#xA;<li>the commit history's <code>totalCount</code></li>&#xA;<li>the <code>committedDate</code> of the latest 100 commits</li>&#xA;</ul>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""facebook"", name: ""react"") {&#xA;    object(expression: ""master"") {&#xA;      ... on Commit {&#xA;        history {&#xA;          totalCount&#xA;          nodes {&#xA;            committedDate&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Run today, the query returns:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""object"": {&#xA;        ""history"": {&#xA;          ""totalCount"": 10807,&#xA;          ""nodes"": [&#xA;            {&#xA;              ""committedDate"": ""2019-04-04T01:15:33Z""&#xA;            },&#xA;            {&#xA;              ""committedDate"": ""2019-04-03T22:07:09Z""&#xA;            },&#xA;            {&#xA;              ""committedDate"": ""2019-04-03T20:21:27Z""&#xA;            },&#xA;            // 97 other committed dates&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<h2>Estimating total contributed time</h2>&#xA;&#xA;<p>I estimated the time contributed in the latest 100 commits using an algorith similar to the one explained on <a href=""https://github.com/kimmobrunfeldt/git-hours/#how-it-works"" rel=""noreferrer""><code>git-hours</code>'s README</a>.</p>&#xA;&#xA;<p>Then I scaled it to the <code>totalCount</code>:</p>&#xA;&#xA;<pre><code>const timeContributedTotal = timeContributedLatest100 * totalCount / 100;&#xA;</code></pre>&#xA;&#xA;<p>I estimated that 13152 hours were put on Twitter's Bootstrap as of today, where <code>git-hours</code> estimated 9959 hours 7 months ago. Doesn't sound too bad.</p>&#xA;&#xA;<p>As for React, I get a total 15097 hours, or 629 days.</p>&#xA;&#xA;<p>The estimate is very rough, but it's as close as I could get to what I needed. Feel free to comment or answer if you see any possible improvement.</p>&#xA;",7770081,,7770081,2019-04-04 07:15:21,2019-04-04 07:15:21,"",,0,0,0,2019-04-04 06:55:43
55537912,2,,55537666,3,,"<p>You can use RSpec composition to help with this <a href=""https://relishapp.com/rspec/rspec-expectations/v/3-8/docs/composing-matchers"" rel=""nofollow noreferrer"">Docs</a> </p>&#xA;&#xA;<p>In this case your test would look like:</p>&#xA;&#xA;<pre><code>expect(json_response).to match({&#xA;        data: {&#xA;          Post: {&#xA;            PostId: nil,&#xA;            wasUpdated: false,&#xA;            errors: an_instance_of(Array)&#xA;          }&#xA;        }&#xA;      }) &#xA;</code></pre>&#xA;&#xA;<p><a href=""https://repl.it/@engineersmnky/RSpecCompositionMatcher"" rel=""nofollow noreferrer"">Working Example</a></p>&#xA;",1978251,,1978251,2019-04-05 14:54:17,2019-04-05 14:54:17,"",,0,0,0,2019-04-05 14:41:59
55564703,1,55564856,,3,2325,"<p>I'm trying to interface with shopify storefront api in golang. But this is my first encounter with graphql and I'm a bit confused.</p>&#xA;&#xA;<p>I need to pass variables for the request and did some research where I came to the conclusion that I could pass variables like shown below. But shopify keeps returning this error:</p>&#xA;&#xA;<pre><code>{""errors"":[{""message"":""Parse error on \""variables\"" (IDENTIFIER) at [13, 3]"",""locations"":[{""line"":13,""column"":3}]}]}&#xA;</code></pre>&#xA;&#xA;<p>Here is my current code:</p>&#xA;&#xA;<pre><code>body := strings.NewReader(fmt.Sprintf(`&#xA;    mutation ($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) {&#xA;        checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {&#xA;          userErrors {&#xA;            message&#xA;            field&#xA;          }&#xA;          checkout {&#xA;            id&#xA;          }&#xA;        }&#xA;      }&#xA;    variables: { ""lineItems"": [ { ""quantity"": 1, ""variantId"": ""%s"" } ], ""checkoutId"": ""%s"" }&#xA;`, productID, checkoutID))&#xA;&#xA;req, err := http.NewRequest(""POST"", ""https://myshop.myshopify.com/api/graphql"", body)&#xA;if err != nil {&#xA;    // handle err&#xA;    fmt.Println(err)&#xA;}&#xA;req.Header.Set(""Content-Type"", ""application/graphql"")&#xA;req.Header.Set(""X-Shopify-Storefront-Access-Token"", ""mytoken"")&#xA;&#xA;resp, err := http.DefaultClient.Do(req)&#xA;if err != nil {&#xA;    // handle err&#xA;    fmt.Println(err)&#xA;}&#xA;defer resp.Body.Close()&#xA;&#xA;data, err := ioutil.ReadAll(resp.Body)&#xA;if err != nil {&#xA;    // handle err&#xA;    fmt.Println(err)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My question is, what is the correct way of passing variables when using <code>application/graphql</code>?</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>After updating the code with the answer of @DanielRearden I'm now getting this error:</p>&#xA;&#xA;<pre><code>{""errors"":[{""message"":""Variable checkoutId of type ID! was provided invalid value"",""locations"":[{""line"":1,""column"":11}],""extensions"":{""value"":null,""problems"":[{""path"":[],""explanation"":""Expected value to not be null""}]}},{""message"":""Variable lineItems of type [CheckoutLineItemInput!]! was provided invalid value"",""locations"":[{""line"":1,""column"":29}],""extensions"":{""value"":null,""problems"":[{""path"":[],""explanation"":""Expected value to not be null""}]}}]}&#xA;</code></pre>&#xA;&#xA;<p>Updated code:</p>&#xA;&#xA;<pre><code>    body := strings.NewReader(fmt.Sprintf(`{&#xA;        ""query"": ""mutation ($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) { checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) { userErrors { message field } checkout { id } }}"",&#xA;        ""variables"": { &#xA;            ""$lineItems"": [ &#xA;                { ""quantity"": 1, ""variantId"": ""%s"" }&#xA;            ], &#xA;            ""$checkoutId"": ""%s""&#xA;        }&#xA;    }`, productID, checkoutID))&#xA;    ...&#xA;    ...&#xA;    req.Header.Set(""Content-Type"", ""application/json"")&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>Removing the <code>$</code> token on the variables as shown below returns another error:</p>&#xA;&#xA;<pre><code>{&#xA;        ""query"": ""mutation ($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) { checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) { userErrors { message field } checkout { id } }}"",&#xA;        ""variables"": { &#xA;            ""checkoutId"": ""%s"",&#xA;            ""lineItems"": [ &#xA;                { ""quantity"": 1, ""variantId"": ""%s"" }&#xA;            ]&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>And the error is: (status 500)</p>&#xA;&#xA;<pre><code>&lt;!DOCTYPE html&gt;&#xA;&lt;html lang=""en""&gt;&#xA;&lt;head&gt;&#xA;  &lt;meta charset=""utf-8"" /&gt;&#xA;  &lt;meta name=""referrer"" content=""never"" /&gt;&#xA;  &lt;title&gt;Something went wrong&lt;/title&gt;&#xA;</code></pre>&#xA;&#xA;<p>But I guess this is not a graphql issue anymore but more of a shopify api problem. </p>&#xA;",3134069,,3134069,2019-04-08 11:41:55,2019-04-08 11:41:55,Passing variables with graphql using a http client,<go><graphql>,1,0,0,2019-04-07 23:56:51
55564856,2,,55564703,10,,"<p>You can't use variables when you set the Content Type to <code>application/graphql</code> because the entire request body is treated as a single GraphQL document. Variables cannot be included inside a GraphQL document -- they have to be submitted separately. Instead of using <code>application/graphql</code>, you should use <code>application/json</code> as the Content Type. Then, your request body should be a JSON string with two keys -- <code>query</code> and <code>variables</code>:</p>&#xA;&#xA;<pre><code>{&#xA;  ""query"": ""mutation ($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) {...}"",&#xA;  ""variables"": {&#xA;    ""checkoutId"" """",&#xA;    ""lineItems"": [&#xA;      ...&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6024220,,6024220,2019-04-08 02:03:03,2019-04-08 02:03:03,"",,0,1,0,2019-04-08 00:23:05
55607812,1,55621613,,4,5713,"<p>I am using GraphQL within the GatsbyJs framework. </p>&#xA;&#xA;<p>I have multiple files with JSON data. The structure of data is similar to this:</p>&#xA;&#xA;<pre><code>{&#xA; ...,&#xA; ""sections"" / ""menuSections""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That last field can be either 'sections' or 'menuSections' in each file. My current graphQL query looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;  allDataJson {&#xA;    nodes {&#xA;      menuSections&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This query returns the correct 'menuSections', however, data-files which do not have 'menuSections' are returned as <code>null</code>. How can I get GraphQL to only return data from files which contain 'menuSections', i.e. how to return data within which 'menuSections' exist. I am looking for an operator like <code>$exists</code>.</p>&#xA;",434697,,10340970,2021-02-19 03:59:04,2021-02-19 03:59:04,GraphQL in Gatsbyjs - Only Return Data Which Contains a Particular Field,<json><graphql><gatsby><graphql-js>,2,0,0,2019-04-10 08:15:53
55621043,1,55629945,,3,1704,"<p>Excuse the probably-basic question. I've used GraphQL SPQR to implement a fetch of a product DTO like so:</p>&#xA;&#xA;<pre><code>@GraphQLQuery(name = ""products"")&#xA;public Page&lt;ProductEntity&gt; getProducts(@GraphQLArgument(name = ""count"", defaultValue = ""10"") int count, @GraphQLArgument(name = ""offset"") int offset) {&#xA;    Pageable queryPage = PageRequest.of(offset, count);&#xA;    return productRepository.findAll(queryPage);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Note that I'm paging through my data repository with this query.</p>&#xA;&#xA;<p>My DTO's are set up in a way that I can query as follows: </p>&#xA;&#xA;<pre><code>products(count: 10, offset: 0) {&#xA;    store {&#xA;        products /* attempting to query using the count and offset parameters here is invalid*/ {&#xA;            productName&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Under the second type (store), I am again fetching a list of products. How can I tell GraphQL to fetch the second, nested list of products in the same way that it would fetch the first list of products?</p>&#xA;&#xA;<p>I'm imagining the ability to bind the <code>GraphQLQuery</code> to my <code>ProductEntityDAO</code> class or something like this, so that fetches against that type can all resolve in the same way.</p>&#xA;&#xA;<p>Your assistance is appreciated.</p>&#xA;&#xA;<p><strong>EDIT:</strong> </p>&#xA;&#xA;<p>Thanks Kaqqao. The solution worked perfectly, and I had the requirement to solve this for the general case of ""An entity that has products"".</p>&#xA;&#xA;<p>To do that, I defined an Interface on my product entity that looks as follows:</p>&#xA;&#xA;<pre><code>@GraphQLInterface(name = ""hasProducts"", implementationAutoDiscovery = true)&#xA;public interface ProductEdge {&#xA;    Collection&lt;ProductEntity&gt; getProducts();&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I then make my entity that has a connection to a list of products fetch it in a generalized way by implementing this interface on my entities that need to do this:</p>&#xA;&#xA;<pre><code>public class CommercialPartnerEntity implements ProductEntity.ProductEdge&#xA;</code></pre>&#xA;&#xA;<p>And in my repository:</p>&#xA;&#xA;<pre><code>@Query(""select child from CommercialPartnerEntity p inner join p.products child where p = :parent"")&#xA;@GraphQLQuery(name = ""relatedProducts"")&#xA;Page&lt;ProductEntity&gt; findBy(@Param(""parent"") ProductEntity.ProductEdge parent, Pageable pageable);&#xA;</code></pre>&#xA;&#xA;<p>Allowing me to, in my service, do things like this:</p>&#xA;&#xA;<pre><code>@GraphQLQuery(name = ""productsList"")&#xA;public Page&lt;ProductEntity&gt; getProducts(@GraphQLContext ProductEntity.ProductEdge hasProductsEntity, @GraphQLArgument(name = ""count"", defaultValue = ""10"") int count, @GraphQLArgument(name = ""offset"") int offset) {&#xA;    Pageable queryPage = PageRequest.of(offset, count);&#xA;    return productRepository.findBy(hasProductsEntity, queryPage);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And accordingly I have defined my resolver for any specific type in a generalized way. Would love to hear other people's thoughts on the solution. </p>&#xA;&#xA;<p>When implementing things like ""filter by name"" I imagine this will come in very useful, too.</p>&#xA;",2375907,,294657,2019-04-11 14:55:12,2019-04-11 14:55:12,"Filtering nested fields, or mapping types to queries",<java><spring-boot><graphql><graphql-java><graphql-spqr>,1,1,0,2019-04-10 20:42:32
55645886,1,,,4,1468,"<p>I am implementing an apollo server graphql schema. All my schema definition are modules in .graphql files. All my resolvers are modules in .js files.</p>&#xA;&#xA;<p>I have the following type :</p>&#xA;&#xA;<p>productSchema.graphql</p>&#xA;&#xA;<pre><code>type Product {&#xA;  _id: Int&#xA;  company: Company&#xA;  productSellingPrice: [PriceHistoryLog]&#xA;  productName: String&#xA;  category: String&#xA;  productDetails: [ProductDetail]&#xA;  globalId: Int&#xA;  isActive: Boolean&#xA;}&#xA;&#xA;extend type Query {&#xA;  ProductList: [Product]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>productDetailSchema.graphql</p>&#xA;&#xA;<pre><code> type ProductDetail {&#xA;   _id: Int&#xA;   company: Company&#xA;   root: Product&#xA;   catalogItem: CatalogItem&#xA;   product: Product&#xA;   isPerishable: Boolean&#xA;   quantity: Float&#xA;   isActive: Boolean&#xA; }&#xA;&#xA; extend type Query { &#xA;   ProductDetailsList(productId: Int!): [ProductDetail]&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>What I want to do is, when querying for ProductList, to run a ProductDetailsList query and resolve the field in product from there.</p>&#xA;&#xA;<p>As you can see ProductDetail also have nested fields so I can't just query the DB for that field in the Product resolver.</p>&#xA;&#xA;<p>Any ideas? I am kind of lost.</p>&#xA;&#xA;<p><strong>Edit:</strong></p>&#xA;&#xA;<p>this is my resolver code:</p>&#xA;&#xA;<pre><code>Product: {&#xA;    company: product =&gt; product.companyId,&#xA;    category: async product =&gt; {&#xA;       try {&#xA;         let res = await SaleModel.findOne({ productName: &#xA;          product.productName }) ;&#xA;          return res.productCategory;&#xA;          } catch (err) {&#xA;           console.log(err);&#xA;         return ""Mo Category found"";&#xA;       }&#xA;      }&#xA;    },&#xA;   Query: {&#xA;     async ProductList(obj, args, { companyId }) {&#xA;       return await ProductModel.find({&#xA;    companyId,&#xA;    isActive: true&#xA;  }).populate(""companyId"");&#xA;    }&#xA;   },&#xA;</code></pre>&#xA;",2976468,,13302,2019-04-17 04:36:02,2019-04-17 04:36:02,Running a graphql query from inside a resolver - for nested data,<graphql><apollo-server><resolver>,0,2,0,2019-04-12 06:42:32
55660365,1,55660824,,4,9197,"<p>Given the following GQL</p>&#xA;&#xA;<pre><code>query getMembers {&#xA;  repository(owner: ""nasa"", name: ""cumulus"") {&#xA;    mentionableUsers(first: 100) {&#xA;      nodes {&#xA;        login&#xA;        organization(login: ""nasa"") {&#xA;          login&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>(Query against GitHub v4 GraphQL)</p>&#xA;&#xA;<p>the value for <code>login</code> under <code>organization</code> is either <code>""nasa""</code> or <code>null</code></p>&#xA;&#xA;<p>I am trying to figure out if it's possible to use @skip against the login/organization so that only contributors to the repo, who are members of the nasa org are shown. I believe for this particular query you can do it another way, but this is just an example. </p>&#xA;&#xA;<p>How would you use @skip/@include with a non boolean. There is minimal documentation on this. While I could filter the response JSON in my client side app, it would be more efficient to receive less data sent over the network and then to parse in my app.</p>&#xA;&#xA;<p>Playing in GraphQLi I received errors trying this various ways - maybe its only possible if the field returns a boolean itself?</p>&#xA;&#xA;<p>e.g., I couldn't do <code>login @skip(if login==null)</code>. I also tried setting a value to null in the variables section and the referencing it in the query, but none of the variations I tried work.</p>&#xA;&#xA;<p>What I would really like to do is not include the parent if the child field is some value. e.g., if login=null then don't include that mentionable user. There is no search field option on mentionableUser. From my reading, I am guessing that the only way to do this would be if the API was modified to put a search or filter field on the mentionalbeUsers, otherwise I would need to do this with my client?</p>&#xA;",689554,,,,2019-04-13 00:03:44,"Use @skip on ""null"" fields using graphql",<graphql>,1,0,0,2019-04-12 22:54:17
55695632,1,56531717,,1,4044,"<p>Hi I was trying to figure out how to correctly pass a graphQL query to a python post request.</p>&#xA;&#xA;<p>The sample graphQL is in curl like this on commission junction API website:</p>&#xA;&#xA;<pre><code>curl -H ""Authorization: Bearer &lt;your-personal-access-token&gt; -XPOST &#xA;https://commissions.api.cj.com/query -d '{ publisherCommissions(forPublishers: [""999""], sincePostingDate:""2018-08-08T00:00:00Z"",beforePostingDate:""2018-08-09T00:00:00Z""){count payloadComplete records {actionTrackerName websiteName advertiserName postingDate pubCommissionAmountUsd items { quantity perItemSaleAmountPubCurrency totalCommissionPubCurrency }  }  } }'&#xA;</code></pre>&#xA;&#xA;<p>I try to use python to simulate the request:</p>&#xA;&#xA;<pre><code>import requests&#xA;headers = {""Authorization"": ""Bear token""}&#xA;&#xA;def run_query(query):&#xA;  request = requests.post('https://commissions.api.cj.com/query', json={'query': query}, headers=headers)&#xA;  if request.status_code == 200:&#xA;    return request.json()&#xA;  else:&#xA;    raise Exception(""Query failed to run by returning code of {}. {}"".format(request.status_code, query))&#xA;&#xA;query=""""""&#xA;{&#xA;  publisherCommissions(forPublishers: [""999""]) {&#xA;    records&#xA;  }&#xA;}&#xA;""""""&#xA;&#xA;result = run_query(query) &#xA;</code></pre>&#xA;&#xA;<p>But always get response 400. I don't know if python can take the graphQL format at all? how do i format so the post request can recognize it. Thanks! </p>&#xA;",4450310,,4450310,2019-04-15 22:16:27,2019-06-10 18:29:14,graphQL in python post request to get data,<python><curl><post><request><graphql>,1,4,0,2019-04-15 18:54:31
55698027,1,,,18,9065,"<p>I am trying to write a query to retrieve an object with the property <code>linkedCards</code> that contains an array of objects with different schemas.</p>&#xA;&#xA;<p>I have 3 different schemas (built in <a href=""https://www.contentful.com/"" rel=""noreferrer"">Contentful</a>):</p>&#xA;&#xA;<p>CardA example:</p>&#xA;&#xA;<pre><code>{&#xA;    id: 42,&#xA;    productName: 'Laptop',&#xA;    price: 999&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>CardB example:</p>&#xA;&#xA;<pre><code>{&#xA;    id: 999,&#xA;    title: 'Buy our refurbished Laptops today!'&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>CardC example:</p>&#xA;&#xA;<pre><code>{&#xA;    id: 100,&#xA;    linkedCards: [&#xA;        {&#xA;            id: 42,&#xA;            productName: 'Laptop',&#xA;            price: 999&#xA;        },&#xA;        {&#xA;            id: 999,&#xA;            title: 'Buy our refurbished Laptops today!'&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Query:</p>&#xA;&#xA;<pre><code>allCardC() {&#xA;    nodes {&#xA;        linkedCards {&#xA;            id&#xA;            title&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I try to run the following GraphQL query I get&#xA;<code>""Cannot query field ""title"" on type ""CardACardBUnion"". Did you mean to use an inline fragment on ""CardA"" or ""CardB""?""</code></p>&#xA;&#xA;<p>Is there a built-in way to do this or can I use the ids of <code>CardA</code> &amp; <code>CardB</code> somehow? Perhaps have one query to get the ids of the cards in <code>linkedCards</code> and another query to get said cards?</p>&#xA;",5858521,,,,2019-04-15 23:52:56,Use GraphQL to retrieve an object that contains an array of objects with different schemas,<graphql><gatsby><graphql-js><contentful>,2,0,0,2019-04-15 22:25:41
55721026,1,,,1,1646,"<p>I have started using GraphQL on a new project and am concerned with the length of the URL that gets generated when sending the query.  I mean, wouldn't we ultimately hit the limit of the url length when issuing GraphQL queries.  Are there workarounds to this?</p>&#xA;",7385798,,6024220,2019-04-17 11:14:29,2019-04-17 11:15:16,GraphQL query operations limit on URL length,<url><graphql><limit>,1,1,0,2019-04-17 06:14:29
55722178,2,,55672202,0,,"<p>Problem was execution order.&#xA;I tried to access array before my data is loaded.&#xA;After I moved following code before accessing array,</p>&#xA;&#xA;<pre><code>if(loading) return !@#&#xA;if(error) return !@#&#xA;</code></pre>&#xA;&#xA;<p>Everything works fine now. Thanks for your helps and sorry for my poor grammar :(</p>&#xA;",11056233,,,,2019-04-17 07:30:12,"",,0,0,0,2019-04-17 07:30:12
55739969,2,,55739421,0,,"<p>If you want to extract the type of nested element from array, you can do this:</p>&#xA;&#xA;<pre><code>// Let's assume the following is your result array:&#xA;const result = [{user: {id: 1, name: ""abc""}}];&#xA;type t1 = typeof result // this will give you the type of the array&#xA;type t2 = typeof result[0] // This will give you the type of the element in the array.&#xA;&#xA;type userId = typeof result[0][0] // Gives you the first key of the first element of the array.&#xA;</code></pre>&#xA;",6138595,,,,2019-04-18 06:05:50,"",,0,1,0,2019-04-18 06:05:50
55772881,2,,52913948,-1,,"<p><strong>GitHub GraphQL API</strong></p>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">Dev GraphQL link  </a></p>&#xA;&#xA;<p>Github Account login</p>&#xA;&#xA;<blockquote>&#xA;  <p>GitHub's GraphQL Explorer</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>{&#xA;  viewer {&#xA;    login&#xA;    bio&#xA;    location&#xA;    isBountyHunter&#xA;  }&#xA;  viewer {&#xA;    login&#xA;    starredRepositories {&#xA;      totalCount&#xA;    }&#xA;    repositories(first: 5) {&#xA;      edges {&#xA;        node {&#xA;          name&#xA;          stargazers {&#xA;            totalCount&#xA;          }&#xA;          forks {&#xA;            totalCount&#xA;          }&#xA;          watchers {&#xA;            totalCount&#xA;          }&#xA;          issues(states: [OPEN]) {&#xA;            totalCount&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<blockquote>&#xA;  <p>The response from our API might be:</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""viewer"": {&#xA;      ""login"": ""webmasters964"",&#xA;      ""bio"": """",&#xA;      ""location"": ""New Delhi"",&#xA;      ""isBountyHunter"": false,&#xA;      ""starredRepositories"": {&#xA;        ""totalCount"": 4&#xA;      },&#xA;      ""repositories"": {&#xA;        ""edges"": [&#xA;          {&#xA;            ""node"": {&#xA;              ""name"": ""WCFRESTfulService"",&#xA;              ""stargazers"": {&#xA;                ""totalCount"": 0&#xA;              },&#xA;              ""forks"": {&#xA;                ""totalCount"": 1&#xA;              },&#xA;              ""watchers"": {&#xA;                ""totalCount"": 1&#xA;              },&#xA;              ""issues"": {&#xA;                ""totalCount"": 0&#xA;              }&#xA;            }&#xA;          },&#xA;          {&#xA;            ""node"": {&#xA;              ""name"": ""Running-Node.js-server"",&#xA;              ""stargazers"": {&#xA;                ""totalCount"": 0&#xA;              },&#xA;              ""forks"": {&#xA;                ""totalCount"": 0&#xA;              },&#xA;              ""watchers"": {&#xA;                ""totalCount"": 1&#xA;              },&#xA;              ""issues"": {&#xA;                ""totalCount"": 0&#xA;              }&#xA;            }&#xA;          },&#xA;          {&#xA;            ""node"": {&#xA;              ""name"": ""Running-JavaScript-Files"",&#xA;              ""stargazers"": {&#xA;                ""totalCount"": 0&#xA;              },&#xA;              ""forks"": {&#xA;                ""totalCount"": 0&#xA;              },&#xA;              ""watchers"": {&#xA;                ""totalCount"": 1&#xA;              },&#xA;              ""issues"": {&#xA;                ""totalCount"": 0&#xA;              }&#xA;            }&#xA;          },&#xA;          {&#xA;            ""node"": {&#xA;              ""name"": ""Express.js-in-simple"",&#xA;              ""stargazers"": {&#xA;                ""totalCount"": 0&#xA;              },&#xA;              ""forks"": {&#xA;                ""totalCount"": 0&#xA;              },&#xA;              ""watchers"": {&#xA;                ""totalCount"": 1&#xA;              },&#xA;              ""issues"": {&#xA;                ""totalCount"": 0&#xA;              }&#xA;            }&#xA;          },&#xA;          {&#xA;            ""node"": {&#xA;              ""name"": ""angularquickstart"",&#xA;              ""stargazers"": {&#xA;                ""totalCount"": 0&#xA;              },&#xA;              ""forks"": {&#xA;                ""totalCount"": 0&#xA;              },&#xA;              ""watchers"": {&#xA;                ""totalCount"": 1&#xA;              },&#xA;              ""issues"": {&#xA;                ""totalCount"": 0&#xA;              }&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Rd2W4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Rd2W4.png"" alt=""enter image description here""></a></p>&#xA;",5101865,,,,2019-04-20 11:04:24,"",,0,0,0,2019-04-20 11:04:24
55774007,1,,,4,1631,"<p>I would like to query the content of markdown files inside a docs folder in a repository. I am using <a href=""https://www.gatsbyjs.org/packages/gatsby-source-graphql/"" rel=""nofollow noreferrer"">gatsby-source-graphql</a> and <a href=""https://developer.github.com/v4/"" rel=""nofollow noreferrer"">GitHub v4 API</a>.</p>&#xA;&#xA;<p>Thus far I've managed to get file contents with this code:</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  github {&#xA;    search(first: 1, type: REPOSITORY, query: ""repo:kalessil/phpinspectionsea"") {&#xA;      edges {&#xA;        node {&#xA;          ... on GitHub_Repository {&#xA;            folder: object(expression: ""master:docs/"") {&#xA;              ... on GitHub_Tree {&#xA;                entries {&#xA;                  oid&#xA;                  object {&#xA;                    ... on GitHub_Blob {&#xA;                      text&#xA;                    }&#xA;                  }&#xA;                  name&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The problem is that any type of file might end up inside the directory, such as <code>txt</code> and will require additional work to filter out.</p>&#xA;&#xA;<p>Is there a way to query files only with <code>md</code> extension inside the <code>docs/</code> directory?</p>&#xA;&#xA;<p><strong>EDIT:</strong></p>&#xA;&#xA;<p>It is possible to accomplish in three steps. First by querying all files, filtering and then querying individual files:</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  github {&#xA;    files: search(first: 1, type: REPOSITORY, query: ""repo:kalessil/phpinspectionsea"") {&#xA;      edges {&#xA;        node {&#xA;          ... on GitHub_Repository {&#xA;            object(expression: ""master:docs/"") {&#xA;              ... on GitHub_Tree {&#xA;                entries {&#xA;                  name&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;    content: search(first: 1, type: REPOSITORY, query: ""repo:kalessil/phpinspectionsea"") {&#xA;      edges {&#xA;        node {&#xA;          ... on GitHub_Repository {&#xA;            object(expression: ""master:docs/DEVELOPERS.md"") {&#xA;              ... on GitHub_Blob {&#xA;                text&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Maybe there is a better way?</p>&#xA;&#xA;<p><strong>EDIT2:</strong></p>&#xA;&#xA;<p>I've refactored the code according to <a href=""https://stackoverflow.com/questions/55774007/how-to-filter-by-a-file-extension-in-a-graphql-query#comment98236326_55774007"">@robinmentral</a> <em>(thank you)</em>:</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  github {&#xA;    files: repository(owner: ""kalessil"", name: ""phpinspectionsea"") {&#xA;      ... on GitHub_Repository {&#xA;        object(expression: ""master:docs/"") {&#xA;          ... on GitHub_Tree {&#xA;            entries {&#xA;              name&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;    content: repository(owner: ""kalessil"", name: ""phpinspectionsea"") {&#xA;      ... on GitHub_Repository {&#xA;        object(expression: ""master:docs/DEVELOPERS.md"") {&#xA;          ... on GitHub_Blob {&#xA;            text&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But it still requires filtering on JavaScript side. As I need to get all the names first, filter out by extension and query only those files directly.</p>&#xA;&#xA;<p>This is actually the right way to do in <a href=""https://www.gatsbyjs.org/packages/gatsby-source-graphql/"" rel=""nofollow noreferrer"">gatsby-source-graphql</a>; for anyone who encounters this in the future check out their example project.</p>&#xA;&#xA;<p>Now I'm just curious if it's possible to combine all these operations in one.</p>&#xA;",6676820,,6676820,2019-04-21 16:33:27,2019-04-21 16:33:27,How to filter by a file extension in a graphql query,<git><github><graphql><gatsby>,1,4,0,2019-04-20 13:29:49
55782810,2,,55774007,1,,"<p>Following up on my <a href=""https://stackoverflow.com/questions/55774007/how-to-filter-by-a-file-extension-in-a-graphql-query#comment98236326_55774007"">comment</a>: if you want to query the contents of a specific file (like in your example), you could use this cleaner query:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""kalessil"", name: ""phpinspectionsea"") {&#xA;    ... on Github_Repository {&#xA;      object(expression: ""master:docs/DEVELOPERS.md"") {&#xA;        ... on Github_Blob {&#xA;          text&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",7770081,,,,2019-04-21 12:41:30,"",,0,0,0,2019-04-21 12:41:30
55827337,1,55828967,,17,20861,"<p>Had a good search, but can't seem to find anything for this. Is there a way in GraphQL to only access the first item in an array?</p>&#xA;&#xA;<p>Something like:</p>&#xA;&#xA;<pre><code>query {&#xA;  allDBItems {&#xA;    edges {&#xA;      node {&#xA;        exampleArray([0])&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",9636451,,6024220,2019-04-24 11:28:36,2019-04-24 12:08:21,GraphQL query to access first item in an array?,<graphql>,2,0,0,2019-04-24 09:58:10
55828013,2,,55827337,0,,<p>NOT this way - there is no such 'client only' syntax.</p>&#xA;&#xA;<p>General rule <strong>'ask for what you need'</strong> requires an explicit expression when passing [named] parameters (variables).</p>&#xA;&#xA;<p><strong>Just tell your API what you need</strong> - pass a <code>limit</code> (and <code>index</code>?) parameter - sth recognizable for your API [resolvers]. </p>&#xA;&#xA;<p>Without that you can just use only the first of all returned array elements - suitable only for small datasets.</p>&#xA;&#xA;<p>Read graphql docs about pagination.</p>&#xA;,6124657,,6124657,2019-04-24 10:41:36,2019-04-24 10:41:36,"",,0,2,0,2019-04-24 10:34:40
55853230,1,55855814,,2,1003,"<p>here I have a mutation, as you can see the parameter name is Product with capital P and the field name is CreateProduct with capital C when I execute this mutation from graphical I have to write the name of the field on camel casing and also the name of the parameter, is there a way to configure graphql-dotnet to respect the names as they are written in the code?</p>&#xA;&#xA;<pre><code> const string STR_Product = ""Product"";&#xA;    public Mutations(IProductService ProductService)&#xA;    {&#xA;        Name = ""Mutation"";&#xA;        Field&lt;ProductType&gt;(&#xA;            ""CreateProduct"",&#xA;            arguments: new QueryArguments(&#xA;                new QueryArgument&lt;NonNullGraphType&lt;ProductInputType&gt;&gt; { Name = STR_Product }),&#xA;            resolve: context =&gt;&#xA;            {&#xA;                var ProductInput = context.GetArgument&lt;ProductInput&gt;(STR_Product);&#xA;                return ProductService.CreateAsync(ProductInput.Code, ProductInput.Name, ProductInput.Description);&#xA;                //return new ProductInputType();&#xA;            }&#xA;        );&#xA;&#xA;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",731858,,,,2021-01-19 00:08:14,how to use pascal casing instead of camel casing in graphql dotnet,<graphql><graphql-dotnet><pascalcasing>,2,1,0,2019-04-25 15:52:31
55929091,2,,55929033,2,,"<p>The query name doesn't have any meaning for the server. It is not used while resolving the query, only the content of the query is used. So your example is equivalent to this:</p>&#xA;&#xA;<pre><code>query {&#xA;    flower {&#xA;        name&#xA;        petal_number&#xA;    }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>The name is only used by the GraphQL client on the frontend or for debugging purposes.</p>&#xA;",9325419,,,,2019-04-30 21:49:51,"",,0,0,0,2019-04-30 21:49:51
55939789,1,,,2,1133,"<p>I'm just getting started with gatsby and graphql and I've started using prismic as a cms. I cannot figure out how to perform nested queries, avoiding overfetching. I don't even know if it would be possible or if it's more just me thinking of the problem in SQL terms.</p>&#xA;&#xA;<p>I have two custom types on prismic which are related using a content relationship. These are <code>Productions</code> which have many <code>People</code> through a repeatable group of fields. The result I want is to have a page (the <code>home</code>) which shows the latest <code>production</code> with the list of <code>people</code> who starred in it, and another page with each person from <code>people</code> and all their roles in every <code>production</code>. </p>&#xA;&#xA;<p>I managed to do this by fetching all the <code>people</code> in the <code>home</code> page and the required <code>production</code> and filtering the returned data in the frontend via javascript. However, I really feel that this way is not ideal since it requires to fetch all the people and not only the ones required for my page. </p>&#xA;&#xA;<pre><code>    allPrismicProduction(&#xA;      limit: 1&#xA;      sort: { fields: [last_publication_date], order: DESC }&#xA;    )  {&#xA;    edges {&#xA;      node {&#xA;        data {&#xA;          casting {&#xA;            ...castingData&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;    allPrismicPerson {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          data {&#xA;            name {&#xA;              text&#xA;            }&#xA;            photo {&#xA;              url&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;const productions = data.allPrismicProduction.edges&#xA;const people = data.allPrismicPerson.edges&#xA;const sortedprods = []&#xA;productions.forEach(el =&gt; {&#xA;    let castings = el.node.data.casting.map(cast =&gt; cast.person.uid)&#xA;    castings.forEach(casting =&gt;{&#xA;    people.filter(person =&gt; {&#xA;      if(castings.indexOf(person.node.uid) &gt; -1){&#xA;        return person&#xA;      }&#xA;    sortedprods.push({&#xA;      production: el.node,&#xA;      people: relpeople,&#xA;    })&#xA;  })&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>So what I do is I fetch all <code>people</code> and then filter them according to the <code>uid</code>s found in the <code>production</code>s returned by the query. </p>&#xA;&#xA;<p>I would like to know if it is possible, or otherwise what would be a better way to achieve this, how to limit overfetching by making it possible to only fetch the <code>people</code> who's <code>uid</code> is present in the <code>production</code>s given by the first part of the query.&#xA;Is this way of thinking compatible with graphql?</p>&#xA;",6661235,,,,2019-05-01 20:41:56,How to perform a nested query in graphql using gatsby-source-prismic,<graphql><gatsby><prismic.io>,1,0,0,2019-05-01 16:59:31
55940123,1,55947214,,3,5589,"<p>I'm new in typeGraphQL and my question about possible to  to count result list elements</p>&#xA;&#xA;<p>I have model type Books</p>&#xA;&#xA;<pre><code>import { Field, ID, ObjectType, Root } from ""type-graphql"";&#xA;import { Model, Column } from ""sequelize-typescript"";&#xA;&#xA;&#xA;@ObjectType()&#xA;export default class Books extends Model&lt;Books&gt; &#xA;{&#xA;&#xA;    @Field(() =&gt; ID)&#xA;    @Column&#xA;    id: number;&#xA;&#xA;    @Field(() =&gt; String)&#xA;    @Column&#xA;    bookName: string;&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Query in Resolver</p>&#xA;&#xA;<pre><code>@Query(() =&gt; [Books])&#xA;async getBooks()&#xA;{&#xA;    return Books.findAll()&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>when run query in graphiQL</p>&#xA;&#xA;<pre><code>getTest&#xA;{&#xA;    id&#xA;    bookName&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>get response</p>&#xA;&#xA;<pre><code>""getBooks"" : &#xA;[&#xA;    {&#xA;        ""id"": ""1"",&#xA;        ""bookName"": ""bookOne""&#xA;    },&#xA;    {&#xA;        ""id"": ""2"",&#xA;        ""bookName"": ""bookTwo""&#xA;    }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>But i need to add aditional field, for example get the totalCount of all received items.&#xA;How to do it properly?&#xA;Now we have to create a separate query, but for large samples it is quite inconvenient and leads to duplication of complex and large queries</p>&#xA;&#xA;<pre><code>@Query(() =&gt; [Books])&#xA;async countBooks()&#xA;{&#xA;    return Books.findAll().length&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I've tried creating a separate union type for the number of elements and the model itself</p>&#xA;&#xA;<pre><code>@ObjectType()&#xA;export default class UnionType extends Model&lt;UnionType&gt; &#xA;{&#xA;&#xA;    @Field(() =&gt; [Books])&#xA;    books: Books[];&#xA;&#xA;    @Field(() =&gt; Int)&#xA;    totalCount(@Root() parent : UnionType) : number &#xA;    {&#xA;        return parent.books.length;&#xA;    }&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and run next query in resolver</p>&#xA;&#xA;<pre><code>@Query(() =&gt; [UnionType])&#xA;async getBooksAndCountAll()&#xA;{&#xA;    let union : any = {}        &#xA;&#xA;    union.books = Books.findAll();&#xA;    union.totalCount = union.books.length;&#xA;&#xA;    return union;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But have error in  graphiQL when run query&#xA;<code>error ""message"": ""Expected Iterable, but did not find one for field Query.getBooks."",</code>&#xA;as I understand it is not transmitted the data that the model expects<br></p>&#xA;&#xA;<p>I trying to use createUnionType </p>&#xA;&#xA;<pre><code>import { createUnionType } from ""type-graphql"";&#xA;const SearchResultUnion = createUnionType({&#xA;    name: ""Books"", // the name of the GraphQL union&#xA;    types: [Books, CountType], // array of object types classes&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>where UnionType</p>&#xA;&#xA;<pre><code>@ObjectType()&#xA;export default class CountType extends Model&lt;CountType&gt; &#xA;{&#xA;    @Field(() =&gt; Int, { nullable : true })&#xA;    totalCount: number;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Query in Resolver</p>&#xA;&#xA;<pre><code>    @Query(returns =&gt; [SearchResultUnion])&#xA;    async getBooks(&#xA;    ): Promise&lt;Array&lt;typeof SearchResultUnion&gt;&gt;{&#xA;&#xA;        return new Promise((resolve, reject) =&gt; {&#xA;            Books.findAll()&#xA;            .then(books =&gt; {&#xA;&#xA;                let totalCount = books.length;&#xA;&#xA;                return [...books, ...totalCount];&#xA;            });&#xA;        });&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>But have the error in string <code>return [...books, ...totalCount];</code> на <code>...totalCount</code>&#xA;<code>Type 'number' must have a '[Symbol.iterator]()' method that returns an iterator.</code></p>&#xA;&#xA;<p>If you do not pass <code>...totalCount</code> the request works, but there is no respectively already there is no <code>totalCount</code></p>&#xA;&#xA;<pre><code>getTest{&#xA;__typename&#xA;  ... on Books&#xA;  {&#xA;    id&#xA;    bookName&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>request</p>&#xA;&#xA;<pre><code> ""getBooks"": [&#xA;    {&#xA;        ""id"": ""1"",&#xA;        ""bookName"": ""bookOne""&#xA;    },&#xA;    {&#xA;        ""id"": ""2"",&#xA;        ""bookName"": ""bookTwo""&#xA;    }&#xA;  ]&#xA;</code></pre>&#xA;&#xA;<p>So, as a result I need a request</p>&#xA;&#xA;<pre><code>getTest&#xA;{&#xA;    totalCount&#xA;    __typename&#xA;      ... on Books{&#xA;        id&#xA;        bookName&#xA;      }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is it possible?</p>&#xA;",11438203,,,,2019-11-21 02:19:52,possible to count result list elements in type-graphql,<node.js><graphql><typegraphql>,1,0,0,2019-05-01 17:27:03
55949968,1,55960501,,1,840,"<p>So I'm trying to get Nuxt to query my GQL API for the site menus. I'm doing this via the <code>nuxtServerInit</code> function in my <code>index.js</code> store module.</p>&#xA;&#xA;<p>Like so:</p>&#xA;&#xA;<pre><code>menuLocations = [""MAIN_MENU"", ""WORK_MENU""]&#xA;store.dispatch(""menus/QUERY_MENUS"", menuLocations)&#xA;</code></pre>&#xA;&#xA;<p>Which calls my <code>QUERY_MENUS</code> action from my <code>menus.js</code> store module. The code for that is this:</p>&#xA;&#xA;<pre><code>// Define State defaults&#xA;export const state = () =&gt; ({&#xA;    locations: {}&#xA;})&#xA;&#xA;// Define mutations&#xA;export const mutations = {&#xA;    SET_MENU(state, data) {&#xA;        //Vue.set(state.locations, data.location, data.items)&#xA;        //state.locations = { ...state.locations, [data.location]: data.items }&#xA;    }&#xA;}&#xA;&#xA;// Define actions&#xA;export const actions = {&#xA;    async QUERY_MENUS({ commit }, menuLocations) {&#xA;        let client = this.app.apolloProvider.defaultClient&#xA;&#xA;        // Get each menu from server&#xA;        for (const location of menuLocations) {&#xA;            const query = await client.query({&#xA;                query: MenuByLocation,&#xA;                variables: {&#xA;                    location: location&#xA;                }&#xA;            })&#xA;&#xA;            // Commit menu to store&#xA;            commit(""SET_MENU"", {&#xA;                location: _camelCase(location),&#xA;                items: _get(query, ""data.menuItems.nodes"", {})&#xA;            })&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The problem is the both the commented out lines in <code>SET_MENU</code> don't work reliably (when un-commented), sometimes they work, sometimes they don't. I'm guessing it has to do with Nuxt and SSR, or perhaps I'm doing my async/await stuff wrong?</p>&#xA;&#xA;<p><strong>CODE SANDBOX HERE:</strong></p>&#xA;&#xA;<p>Code: <a href=""https://codesandbox.io/s/j3yjz2wm6y?fontsize=14"" rel=""nofollow noreferrer"">https://codesandbox.io/s/j3yjz2wm6y?fontsize=14</a> </p>&#xA;&#xA;<p>Preview: <a href=""https://j3yjz2wm6y.sse.codesandbox.io/"" rel=""nofollow noreferrer"">https://j3yjz2wm6y.sse.codesandbox.io/</a></p>&#xA;&#xA;<p>Any suggestions? Thanks!</p>&#xA;",503546,,503546,2019-05-02 19:10:23,2019-05-02 21:29:04,Vuex mutations updating an object with dynamic property names from async/await action,<vue.js><vuex><nuxt.js><vue-apollo>,1,3,0,2019-05-02 09:59:35
55971743,1,,,1,37,"<p>I have a graphql query which enables me to retrieve all issues for a repository, filtered by some criteria.&#xA;Now in my team, we have one repository for the code, and one for the issues, so external people can file issues without having access to our internal discussions.</p>&#xA;&#xA;<p>When we make a PR, we reference the original issue on the issues repo.</p>&#xA;&#xA;<p>What I want to do, is get all the PRs in the second repo that reference issues in the first one.</p>&#xA;&#xA;<p>So far I have</p>&#xA;&#xA;<pre><code>const query = `{&#xA;  repository(owner:""${owner}"", name:""${repository}"") {&#xA;    issues(last:20, states:CLOSED, labels: [""type:bug""]) {&#xA;      edges {&#xA;        node {&#xA;          title&#xA;          url&#xA;          labels(first:20) {&#xA;            edges {&#xA;              node {&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}`;&#xA;</code></pre>&#xA;&#xA;<p>This gets me the issues on the first repo, but can I get the PRs on the second in the same GraphQL call, or should I collect the issue IDs on the TS side and make a different query?</p>&#xA;",326154,,,,2019-05-03 14:20:53,Retrieve PRs that reference an issue via Github API v4,<javascript><github><graphql><github-api><github-api-v4>,0,0,0,2019-05-03 14:20:53
55978445,1,,,8,11624,"<p>I want to be able to retrieve the latest release from GitHub for a specific repo using their GraphQL API. To do that, I need to get the latest release where isDraft and isPrerelease are false. I have managed to get the first part, but cant figure out how to do the ""where"" part of the query.</p>&#xA;&#xA;<p>Here is the basic query I have gotten (<a href=""https://developer.github.com/v4/explorer/"" rel=""noreferrer"">https://developer.github.com/v4/explorer/</a>):</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""paolosalvatori"", name: ""ServiceBusExplorer"") {&#xA;    releases(first: 1, orderBy: {field: CREATED_AT, direction: DESC}) {&#xA;      nodes {&#xA;        name&#xA;        tagName&#xA;        resourcePath&#xA;        isDraft&#xA;        isPrerelease&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Which returns:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""releases"": {&#xA;        ""nodes"": [&#xA;          {&#xA;            ""name"": ""3.0.4"",&#xA;            ""tagName"": ""3.0.4"",&#xA;            ""resourcePath"": ""/paolosalvatori/ServiceBusExplorer/releases/tag/3.0.4"",&#xA;            ""isDraft"": false,&#xA;            ""isPrerelease"": false&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I cant seem to find a way to do this. Part of the reason is that I am new to GraphQL (first time trying to do a query) and I am not sure how to frame my question.</p>&#xA;&#xA;<p>Can one only ""query"" based on those types that support arguments (like repository and releases below)? Seems like there should be a way to specify a filter on the field values.</p>&#xA;&#xA;<p>Repository: <a href=""https://developer.github.com/v4/object/repository/"" rel=""noreferrer"">https://developer.github.com/v4/object/repository/</a></p>&#xA;&#xA;<p>Releases: <a href=""https://developer.github.com/v4/object/releaseconnection/"" rel=""noreferrer"">https://developer.github.com/v4/object/releaseconnection/</a></p>&#xA;&#xA;<p>Node: <a href=""https://developer.github.com/v4/object/release/"" rel=""noreferrer"">https://developer.github.com/v4/object/release/</a></p>&#xA;",44815,,7065052,2020-04-08 14:40:31,2020-04-08 14:40:31,GraphQL query based on a specific value of a field,<graphql><github-api><github-api-v4>,2,0,0,2019-05-04 00:21:26
55982188,2,,55978445,7,,"<blockquote>&#xA;  <p>Can one only ""query"" based on those types that support arguments</p>&#xA;</blockquote>&#xA;&#xA;<p>Yes: GraphQL doesn't define a generic query language in the same way, say, SQL does.  You can't sort or filter a field result in ways that aren't provided by the server and the application schema.</p>&#xA;&#xA;<blockquote>&#xA;  <p>I want to be able to retrieve the latest [non-draft, non-prerelease] release from GitHub for a specific repo using their GraphQl API. </p>&#xA;</blockquote>&#xA;&#xA;<p>As you've already found, <a href=""https://developer.github.com/v4/object/repository/#releases"" rel=""noreferrer"">the <code>releases</code> field on the <code>Repository</code> type</a> doesn't have an option to sort or filter on these fields.  Instead, you can iterate through the releases one at a time with multiple GraphQL calls.  These would individually look like</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>query NextRelease($owner: String!, $name: String!, $after: String) {&#xA;  repository(owner: $owner, name: $name) {&#xA;    releases(first: 1,&#xA;             orderBy: {field: CREATED_AT, direction: DESC},&#xA;             after: $after) {&#xA;      pageInfo { lastCursor }&#xA;      nodes { ... ReleaseData } # from the question&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Run this in the same way you're running it now (I've split out the information identifying the repository into separate GraphQL variables).  You can leave off the <code>after</code> variable for the first call.  If (as in your example) it returns <code>""isDraft"": false, ""isPrerelease"": false</code>, you're set.  If not, you need to try again: take the value from the <code>lastCursor</code> in the response, and run the same query, passing that cursor value as the <code>after</code> variable value.</p>&#xA;",10008173,,,,2019-05-04 11:45:44,"",,0,0,0,2019-05-04 11:45:44
55982378,2,,49829954,1,,"<p>With this graphql query you can get the: &#xA;- total releases count&#xA;- total branches count &#xA;- total commits count </p>&#xA;&#xA;<pre><code>query{&#xA;  repository(owner:""kasadawa"", name:""vmware-task"") {&#xA;&#xA;    Releases:refs(first: 0, refPrefix: ""refs/tags/"") {&#xA;      totalCount&#xA;    }&#xA;    Branches:refs(first: 0, refPrefix: ""refs/heads/"") {&#xA;      totalCount&#xA;&#xA;    }&#xA;&#xA;    object(expression:""master"") {&#xA;&#xA;      ... on Commit {&#xA;&#xA;        history {&#xA;          totalCount&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But if you want to get the contributors, you should do it with the REST API, because currently there is no simple way to implement it with GRAPHQL API. </p>&#xA;&#xA;<p>Here is a solutions with the REST API. </p>&#xA;&#xA;<pre><code>&#xA;const options = {&#xA;    url: 'https://api.github.com/repos/vmware/contributors' ,&#xA;    'json': true ,&#xA;    headers: { &#xA;        'User-Agent':'request',&#xA;         'Authorization': 'token API_KEY_GENERATED_FROM_GITHUB'&#xA;        }&#xA;    };&#xA;&#xA;&#xA;var lastPageNum = 0 ; // global variable &#xA;&#xA;request.getAsync(options).then((res) =&gt;{&#xA;&#xA;        this.checkHeaders(res.headers.status) // just check the header status &#xA;&#xA;        // check if there are more pages &#xA;        if(!!res.headers.link){&#xA;&#xA;            const [ , lastURL] = res.headers.link.split(','); // getting the last page link from the header &#xA;            lastPageNum = +lastURL.match(/page=(\d+)/)[1]; // get the number from the url string&#xA;            options.url = licenseUrl + lastPageNum; &#xA;            return request.getAsync(options) // make Request with the last page, in order to get the last page results, they could be less than 30&#xA;        }else{&#xA;            // if its single page just resolve on to the chain &#xA;&#xA;            return Promise.resolve(res.body.length);&#xA;        }&#xA;&#xA;    })&#xA;    .then((lastPageRes)=&gt;{&#xA;&#xA;        return (lastPageNum !== 0 &#xA;            ? ( (lastPageNum-1)*30 + lastPageRes.body.length ) &#xA;            : lastPageRes)&#xA;&#xA;        })&#xA;    .catch() // handle errors &#xA;&#xA;&#xA;</code></pre>&#xA;&#xA;<p>Checkout for updates: <a href=""https://github.community/t5/GitHub-API-Development-and/Get-contributor-count-with-the-graphql-api/td-p/18593"" rel=""nofollow noreferrer"">https://github.community/t5/GitHub-API-Development-and/Get-contributor-count-with-the-graphql-api/td-p/18593</a></p>&#xA;",5986545,,,,2019-05-04 12:11:05,"",,0,0,0,2019-05-04 12:11:05
55986693,1,55986811,,-1,598,"<p><a href=""https://i.stack.imgur.com/67zeW.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/67zeW.jpg"" alt=""Second react error""></a>In my react project I used a query to search github users data. The query is as follows:</p>&#xA;&#xA;<pre><code>const GET_USER = (user) =&gt; `&#xA;{&#xA;  user(login: ""${user}"") {&#xA;    name&#xA;    login&#xA;    avatarUrl&#xA;    company&#xA;    gists{&#xA;     totalCount&#xA;   }&#xA;   following{&#xA;      totalCount&#xA;    }&#xA;    followers(last: 5){&#xA;      edges{&#xA;            node{&#xA;                id&#xA;            name&#xA;            avatarUrl&#xA;        }&#xA;      }&#xA;    }&#xA;    repositories(last: 5){&#xA;      edges{&#xA;        node{&#xA;          id&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>If I update the query by just adding a single field called <code>email</code> in <code>followers</code> the react app stops working: </p>&#xA;&#xA;<pre><code>&#xA;followers(last: 5){&#xA;      edges{&#xA;            node{&#xA;            id&#xA;            name&#xA;            avatarUrl&#xA;            email&#xA;        }&#xA;      }&#xA;    }&#xA;&#xA;</code></pre>&#xA;&#xA;<p>The same happens if I add data about the organizations in the query, like this:</p>&#xA;&#xA;<pre><code> organizations(last: 5){&#xA;      edges{&#xA;        node{&#xA;          id&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>But when I perform the same query in this link: [<a href=""https://developer.github.com/v4/explorer/]"" rel=""nofollow noreferrer"">https://developer.github.com/v4/explorer/]</a> it works.</p>&#xA;&#xA;<p>My react project is in the link: [<a href=""https://github.com/rvmelo/react-tech6-final-project]"" rel=""nofollow noreferrer"">https://github.com/rvmelo/react-tech6-final-project]</a>. The query is in the <code>App.js</code> file which is inside the <code>src</code> folder.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/uvIsV.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uvIsV.jpg"" alt=""First react error""></a></p>&#xA;",9487656,,9487656,2019-05-04 22:10:51,2019-05-04 23:38:18,Why graphql query is not working in react?,<javascript><reactjs><graphql>,1,0,0,2019-05-04 20:51:49
55986811,2,,55986693,0,,"<p>It stops working because the user might not have such information.</p>&#xA;&#xA;<p>I cloned your repo and added the code</p>&#xA;&#xA;<pre><code>&lt;div&gt;email:{user.following.email}&lt;/div&gt;&#xA;</code></pre>&#xA;&#xA;<p>and it did stopped working, then I added a fallback</p>&#xA;&#xA;<pre><code>&lt;div&gt;email:{user.following.email || """"}&lt;/div&gt;&#xA;</code></pre>&#xA;&#xA;<p>And it worked.</p>&#xA;&#xA;<p>You might wanna check those info before rendering, something like</p>&#xA;&#xA;<pre><code>{user &amp;&amp; user.following &amp;&amp; user.following.email &amp;&amp;&#xA;  (&lt;div&gt;email:{user.following.email}&lt;/div&gt;)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Same thing with the <code>organizations</code></p>&#xA;&#xA;<pre><code>&lt;p&gt;&#xA;  {user &amp;&amp; user.organizations &amp;&amp;&#xA;    &lt;div&gt;Organization name:{user.organizations.name}&lt;/div&gt;&#xA;  }&#xA;&lt;/p&gt;&#xA;</code></pre>&#xA;&#xA;<p>As for <code>followers</code>(<strong>UPDATED</strong>)</p>&#xA;&#xA;<pre><code>const Followers = ({ followers }) =&gt; (&#xA;&lt;div&gt;&#xA;&#xA;  &lt;strong&gt;Followers updated for SO:&lt;/strong&gt;&#xA;&#xA;  &lt;ul&gt;&#xA;    {followers.edges.map(follower =&gt; (&#xA;    &lt;li key={follower.node.id}&gt;&#xA;      &lt;img src={follower.node.avatarUrl}/&gt;&#xA;      &lt;div&gt;&#xA;        {follower &amp;&amp; follower.node &amp;&amp; follower.node.name &amp;&amp; (&#xA;        &lt;div&gt;Name:{follower.node.name}&lt;/div&gt;) }&#xA;      &lt;/div&gt;&#xA;      &lt;div&gt;&#xA;        {follower &amp;&amp; follower.node &amp;&amp; follower.node.email &amp;&amp; (&#xA;        &lt;div&gt;Email:{follower.node.email}&lt;/div&gt;) }&#xA;      &lt;/div&gt;&#xA;    &lt;/li&gt;&#xA;    ))}&#xA;  &lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>Screenshot of my profile. One follower with email and another without.&#xA;<a href=""https://i.stack.imgur.com/GBVTJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GBVTJ.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>I went ahead and forked your repo, <a href=""https://github.com/trinaldi/react-tech6-final-project"" rel=""nofollow noreferrer"">here's my repo</a> cloned from your question's <a href=""https://github.com/rvmelo/react-tech6-final-project"" rel=""nofollow noreferrer"">one</a>&#xA;Make sure your token has the permissions. In the heat of the moment I gave full access to my key. Check yours!</p>&#xA;",1421957,,1421957,2019-05-04 23:38:18,2019-05-04 23:38:18,"",,0,9,0,2019-05-04 21:08:38
56016644,1,,,1,2020,"<p>How do you define an input type that either accepts a single enum value or an array of values in GraphQL?</p>&#xA;<p>According to <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">GitHub GraphQL API</a>,</p>&#xA;<pre><code>{&#xA;  securityVulnerabilities(first: 3, ecosystem: RUBYGEMS) {&#xA;    nodes {&#xA;      advisory {&#xA;        description&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But I think array can be good because user can search across ecosystem.</p>&#xA;<pre><code>{&#xA;  securityVulnerabilities(first: 3, ecosystem: [RUBYGEMS, NPM]) {&#xA;    nodes {&#xA;      advisory {&#xA;        description&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4327269,,1218980,2021-07-06 04:10:03,2022-05-30 06:15:06,Single value vs Array in GraphQL Enum input types,<graphql>,1,2,0,2019-05-07 06:23:29
56016817,2,,56016644,3,,"<p>You can do this by defining the input value as an array <code>[]</code> of your defined <code>Enum</code>, something like:</p>&#xA;<pre><code>enum MyEnum {&#xA;  RUBYGEMS&#xA;  NPM&#xA;}&#xA;&#xA;type Query {&#xA;  securityVulnerabilities(ecosystem: [MyEnum!]): MyReturnObject&#xA;}&#xA;</code></pre>&#xA;<p>And then you can query it like:</p>&#xA;<pre><code>{&#xA;  securityVulnerabilities(ecosystem: [RUBYGEMS, NPM]) {&#xA;    ....&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And it works with both an array or a single value:</p>&#xA;<pre><code>{&#xA;  securityVulnerabilities(ecosystem: RUBYGEMS) {&#xA;    ....&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The <a href=""https://spec.graphql.org/June2018/#sec-Type-System.List"" rel=""nofollow noreferrer"">GraphQL spec</a> explains the following:</p>&#xA;<blockquote>&#xA;<p>If the value passed as an input to a list type is <em>not</em> a list and not&#xA;the <strong>null</strong> value, then the result of input coercion is a list of size&#xA;one [...]</p>&#xA;</blockquote>&#xA;",3708153,,3708153,2022-05-30 06:15:06,2022-05-30 06:15:06,"",,0,1,0,2019-05-07 06:35:31
56025869,1,,,1,356,"<p>I am trying to get a count of files that have been changed for a given date range (monthly report).</p>&#xA;&#xA;<p>I am able to get a commit count pretty easily with GitHub's API V4.  I modified that query to also get a count of changed files in each commit and I figured I could aggregate them manually.  This works with small volumes.  For reference, here is the query I am using:</p>&#xA;&#xA;<pre><code>query ($owner: String!, $name: String!, $pagedEndCursor: String, $sinceTS: GitTimestamp!, $untilTS: GitTimestamp!) {&#xA;  repository(owner: $owner, name: $name) {&#xA;    refs(first: 100, refPrefix: ""refs/heads/"", after: $pagedEndCursor, orderBy: {field: TAG_COMMIT_DATE, direction: DESC}) {&#xA;      totalCount&#xA;      edges {&#xA;        node {&#xA;          name&#xA;          target {&#xA;            ... on Commit {&#xA;              history(first: 100, since: $sinceTS, until: $untilTS) {&#xA;                totalCount&#xA;                nodes {&#xA;                  changedFiles&#xA;                  committedDate&#xA;                }&#xA;                pageInfo{&#xA;                  hasNextPage&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;      pageInfo {&#xA;        endCursor&#xA;        hasNextPage&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The problem I am facing is that our teams make <em>extensive</em> use of branches, so we have many repositories that have over 100 branches, which is why I built in paging when going through the branches.  While the chance of 100 branches having commits within a given month are slim, it is certainly possible that a single branch could have over 100 commits in a given month.  </p>&#xA;&#xA;<p>I thought to do paging within the history (I left the innermost <code>pageInfo</code> to show where), but I don't think it would work to page across multiple inner objects.</p>&#xA;&#xA;<p>I could do it in multiple passes, where I run the query to get the list of branches that have changes in the given month, and then run a separate query for each of those branches to get the changed file count, but that seems to defeat the purpose of using GraphQL.</p>&#xA;&#xA;<p>Are there any other ways to get the changed file count for a date range across all branches of a repository?</p>&#xA;",40619,,,,2019-05-07 15:23:56,GitHub: Get a count of changed files in a repository for a date range,<github-api><github-graphql>,0,0,0,2019-05-07 15:23:56
56030026,1,,,1,145,"<p>I am trying to get list of all commits between 2 given cursors. </p>&#xA;&#xA;<p>I have tried to use before and after argument for history</p>&#xA;&#xA;<pre><code>ref(qualifiedName: $branch) {&#xA;   target {&#xA;     ... on Commit {&#xA;        history(after:$firstCommit, before: $lastCommit) {&#xA;          totalCount&#xA;</code></pre>&#xA;&#xA;<p>I want it to return just commits between these 2 tags, but it returns whole list.</p>&#xA;",11466687,,13302,2019-05-08 14:50:39,2019-05-08 14:50:39,GraphQL query commit history in range on 2 commits,<graphql><github-api><github-graphql>,0,1,0,2019-05-07 20:26:31
56044061,1,56045563,,2,1649,"<p>Based on this Shopify <a href=""https://help.shopify.com/en/api/custom-storefronts/storefront-api/getting-started#using-graphiql"" rel=""nofollow noreferrer"">documentation</a>, I'm trying to execute this GraphQL query:</p>&#xA;&#xA;<pre><code>query getDiscount($code: DiscountCodeSortKeys) {&#xA;  priceRules(first: 1) {&#xA;    edges {&#xA;      node {&#xA;        discountCodes(first: 1, sortKey: $code) {&#xA;          edges {&#xA;            node {&#xA;              code&#xA;              id&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In GraphiQL in my Shopify admin page I get this output:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""priceRules"": {&#xA;      ""edges"": [&#xA;        {&#xA;          ""node"": {&#xA;            ""discountCodes"": {&#xA;              ""edges"": [&#xA;                {&#xA;                  ""node"": {&#xA;                    ""code"": ""discount_code_1"",&#xA;                    ""id"": ""gid://shopify/PriceRuleDiscountCode/1888888""&#xA;                  }&#xA;                }&#xA;              ]&#xA;            }&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  },&#xA;  ""extensions"": {&#xA;    ""cost"": {&#xA;      ""requestedQueryCost"": 6,&#xA;      ""actualQueryCost"": 6,&#xA;      ""throttleStatus"": {&#xA;        ""maximumAvailable"": 1000,&#xA;        ""currentlyAvailable"": 994,&#xA;        ""restoreRate"": 50&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, when I execute the same query in GraphiQL IDE after editing the HTTP headers and putting the GraphQL endpoint (<a href=""https://my_domain.com/api/graphql"" rel=""nofollow noreferrer"">https://my_domain.com/api/graphql</a>), I get a html code with the title of 404 page not found as you can see in the picture below:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/BbGsF.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BbGsF.jpg"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/IuiOe.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IuiOe.jpg"" alt=""enter image description here""></a></p>&#xA;",5339534,,5339534,2019-05-08 15:44:45,2019-05-08 16:51:38,GraphiQL 404 page not found,<graphql><shopify><storefront><graphiql>,1,0,0,2019-05-08 15:21:44
56054038,1,56265712,,11,415,"<p>Everywhere I read, I see I can get the latest commit for a GitHub repository using this GraphQL query:</p>&#xA;&#xA;<pre><code>{&#xA;repository(owner: ""petermorlion"", name: ""RedStar.Amounts"") {&#xA;    defaultBranchRef {&#xA;      name&#xA;      target {&#xA;        ... on Commit {&#xA;          history(first: 1) {&#xA;            edges {&#xA;              node {&#xA;                committedDate&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And this works. For this repository. As you can see (at the time I'm writing this), both the <a href=""https://developer.github.com/v4/explorer/"" rel=""noreferrer"">GraphQL explorer</a> and <a href=""https://github.com/petermorlion/RedStar.Amounts/commits/master"" rel=""noreferrer"">the GitHub UI</a> say 7th May is the latest commit:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/D5LV5.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/D5LV5.png"" alt=""GitHub UI results""></a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Y0qmX.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Y0qmX.png"" alt=""GitHub GraphQL results""></a></p>&#xA;&#xA;<p>However, if I run this on another repository, I'm getting the first commit. Change the owner to <code>ystk</code> and the repository name to <code>debian-libidn</code>. GraphQL tells me the latest commit is 13th October 2009:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/ZFM0N.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/ZFM0N.png"" alt=""GitHub GraphQL wrong results""></a></p>&#xA;&#xA;<p>But <a href=""https://github.com/ystk/debian-libidn/commits/master"" rel=""noreferrer"">the GitHub UI</a> shows it is in fact 13th May 2011:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/m53ac.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/m53ac.png"" alt=""GitHub UI correct results""></a></p>&#xA;&#xA;<p>Is my query wrong? Should I be adding an <code>orderby</code> somewhere (I saw that it can't be added to <code>history</code>)?</p>&#xA;",15349,,,,2019-05-23 19:18:17,GitHub GraphQL query not returning last commit,<github><graphql>,1,1,0,2019-05-09 07:14:09
56063893,1,,,1,78,"<p>I want to list all the commits between 2 tags</p>&#xA;&#xA;<p>If i try to get commits between 2 dates on which tags point, i even get the commits from other branch which was merged after 2nd commit but made between those 2 dates.</p>&#xA;&#xA;<p>I will like to get some thing equivalent of <code>git log  v0.0.21...v0.0.32</code> in GraphQL api or REST api</p>&#xA;",11466687,,,,2019-05-09 16:33:05,Graphql get all commits between 2 tags,<graphql><github-graphql>,0,0,0,2019-05-09 16:33:05
56081651,2,,56075076,0,,"<p>After doing a lot of research I found out that the only allowed top level properties in a graphql responses are data, errors, extensions. Here you can find the regarding Issue in GitHub</p>&#xA;&#xA;<p><a href=""https://github.com/apollographql/apollo-server/issues/2030"" rel=""nofollow noreferrer"">GitHub Issue</a></p>&#xA;&#xA;<p>for my purpose I will probably use the extensions field.</p>&#xA;",7149725,,,,2019-05-10 16:38:20,"",,0,0,0,2019-05-10 16:38:20
56090799,1,56091827,,2,3450,"<p>I am trying write some PHP code to run a mutation on the shopify graphql api. When I run the mutation from command line curl, it works well. But, for some reason PHP curl for the same returns an error/</p>&#xA;&#xA;<p>Here is the command line curl and its output.</p>&#xA;&#xA;<pre><code>    curl -X  POST \&#xA;    &gt; ""https://myshopname.myshopify.com/admin/api/2019-04/graphql.json"" \&#xA;    &gt; -H ""Content-Type: application/graphql"" \&#xA;    &gt; -H ""X-Shopify-Access-Token: xxxxxxxxxxxxxxxxxxxxxxxxxxxxx"" \&#xA;    &gt; -d '&#xA;    &gt; mutation{&#xA;    &gt; productVariantUpdate(input: {&#xA;    &gt;     id: ""gid://shopify/ProductVariant/126493786xxxx"",&#xA;    &gt;     price: 2998.5&#xA;    &gt;   }){&#xA;    &gt;     productVariant{ id, price }&#xA;    &gt;   }&#xA;    &gt; &#xA;    &gt; }&#xA;    &gt; '&#xA;    {""data"":{""productVariantUpdate"":{""productVariant"":{""id"":""gid:\/\/shopify\/ProductVariant\/126493786xxxx"",""price"":""2998.50""}}},""extensions"":{""cost"":{""requestedQueryCost"":10,""actualQueryCost"":10,""throttleStatus"":{""maximumAvailable"":1000.0,""currentlyAvailable"":990,""restoreRate"":50.0}}}}&#xA;</code></pre>&#xA;&#xA;<p>I cannot post the exact php code since its from multiple files, but here is the payload of the php curl call</p>&#xA;&#xA;<pre><code>    mutation{productVariantUpdate(input: {    id: ""gid://shopify/ProductVariant/126493786xxxx"",    price: 2998.5  }){    productVariant{ id, price }  }}&#xA;</code></pre>&#xA;&#xA;<p>and the curl_info output</p>&#xA;&#xA;<pre><code>    array(&#xA;        'url' =&gt; 'https://myshopname.myshopify.com/admin/api/2019-04/graphql.json',&#xA;        'content_type' =&gt; 'application/json; charset=utf-8',&#xA;        'http_code' =&gt; (int) 200,&#xA;        'header_size' =&gt; (int) 2431,&#xA;        'request_size' =&gt; (int) 385,&#xA;        'filetime' =&gt; (int) -1,&#xA;        'ssl_verify_result' =&gt; (int) 0,&#xA;        'redirect_count' =&gt; (int) 0,&#xA;        'total_time' =&gt; (float) 0.719179,&#xA;        'namelookup_time' =&gt; (float) 0.060711,&#xA;        'connect_time' =&gt; (float) 0.123953,&#xA;        'pretransfer_time' =&gt; (float) 0.273472,&#xA;        'size_upload' =&gt; (float) 151,&#xA;        'size_download' =&gt; (float) 110,&#xA;        'speed_download' =&gt; (float) 152,&#xA;        'speed_upload' =&gt; (float) 210,&#xA;        'download_content_length' =&gt; (float) -1,&#xA;        'upload_content_length' =&gt; (float) 151,&#xA;        'starttransfer_time' =&gt; (float) 0.718514,&#xA;        'redirect_time' =&gt; (float) 0,&#xA;        'redirect_url' =&gt; '',&#xA;        'primary_ip' =&gt; '23.227.63.64',&#xA;        'certinfo' =&gt; array(),&#xA;        'primary_port' =&gt; (int) 443,&#xA;        'local_ip' =&gt; '192.168.0.101',&#xA;        'local_port' =&gt; (int) 40882,&#xA;        'request_header' =&gt; 'POST /admin/api/2019-04/graphql.json HTTP/1.1&#xA;    Host: alberto-torresi-2.myshopify.com&#xA;    User-Agent: wcurl&#xA;    Accept: */*&#xA;    Content-Type: application/graphql&#xA;    X-Shopify-Access-Token: xxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#xA;    Content-Length: 151&#xA;&#xA;    '&#xA;    )&#xA;</code></pre>&#xA;&#xA;<p>The error returned is:</p>&#xA;&#xA;<pre><code>    {""errors"":[{""message"":""Parse error on \""gid\"" (IDENTIFIER) at [1, 49]"",""locations"":[{""line"":1,""column"":49}]}]}&#xA;</code></pre>&#xA;",1297775,,,,2019-05-11 15:40:36,"Shopify GraphQL mutation returns ""Parse error on \""gid\"" (IDENTIFIER)""",<graphql><shopify>,1,0,0,2019-05-11 13:30:32
56091827,2,,56090799,4,,"<p>It would be good to see a bit more of the php code to see what the error might be, but the issue could be related to you not escaping the quotes in the mutation.</p>&#xA;&#xA;<p>Try changing:</p>&#xA;&#xA;<pre><code>mutation{productVariantUpdate(input: {    id: ""gid://shopify/ProductVariant/126493786xxxx"",    price: 2998.5  }){    productVariant{ id, price }  }}&#xA;</code></pre>&#xA;&#xA;<p>to:</p>&#xA;&#xA;<pre><code>mutation{productVariantUpdate(input: {    id: \""gid://shopify/ProductVariant/126493786xxxx\"",    price: 2998.5  }){    productVariant{ id, price }  }}&#xA;</code></pre>&#xA;&#xA;<p>To escape the quotes in the string</p>&#xA;",1021714,,,,2019-05-11 15:40:36,"",,0,3,0,2019-05-11 15:40:36
56111086,1,,,0,1163,"<p>Although an experienced developer, I'm fairly new to Symfony/API Platfrom/GraphQL. My task is simple - add a filter to the <code>Product</code> entity that allows to filter out only active products. Bonus points if the filter is set by default - that is, by default only active products are returned, and you need to add a parameter if you wish to see the inactive products. But if that's too hard, simply adding a filter will do.</p>&#xA;&#xA;<p>OK, so in my <code>Product.php</code> I have (only relevant parts shown):</p>&#xA;&#xA;<pre><code>use Doctrine\ORM\Mapping as ORM;&#xA;use ApiPlatform\Core\Annotation\ApiFilter;&#xA;use ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\BooleanFilter;&#xA;&#xA;/**&#xA; * @ApiFilter(BooleanFilter::class, properties={""active"" : ""exact""})&#xA; */&#xA;class Product {&#xA;    /**&#xA;     * @ORM\Column(type=""boolean"")&#xA;     */&#xA;    private $active;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then I try to modify an existing query to filter out only the active products:</p>&#xA;&#xA;<pre><code>{&#xA;  sellers(id: 5, active: true) {&#xA;    edges {&#xA;      node {&#xA;        categories {&#xA;          edges {&#xA;            node {&#xA;              products (active: true) {&#xA;                totalCount&#xA;                edges {&#xA;                  node {&#xA;                    name&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Buuuut, I get:</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Unknown argument \""active\"" on field \""products\"" of type \""Category\""."",&#xA;      ""category"": ""graphql"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 39,&#xA;          ""column"": 25&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now, if I change it to querying the products directly:</p>&#xA;&#xA;<pre><code>{&#xA;  products (active: true) {&#xA;    totalCount&#xA;    edges {&#xA;      node {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That works!</p>&#xA;&#xA;<p>So, what's going on? I'd like to make the filter on the original query so it returns all of the other data too, not just plain products. What am I doing wrong? It feels like I'm misunderstanding some fundamental concept.</p>&#xA;",41360,,,,2019-08-17 09:08:48,How to filter GraphQL on subobject with Symfony and API Platform?,<php><symfony><graphql><api-platform.com>,1,18,0,2019-05-13 11:06:57
56119804,2,,46452868,0,,<p>you can easily use: </p>&#xA;&#xA;<pre><code>query {&#xA;    listOfElts (first: 1) { &#xA;        totalCount &#xA;    }&#xA;}&#xA;</code></pre>&#xA;,8126126,,3870547,2019-05-13 23:41:11,2019-05-13 23:41:11,"",,0,2,0,2019-05-13 20:59:52
56130411,1,,,0,27,"<p>i'm just upgrade <code>graphql-js</code> from version <code>14.1.1</code> to <code>14.3.0</code> and then my whole test fail </p>&#xA;&#xA;<p>after checking my code i found that problem is at resolver on interface type that i expect third parameter was context as code below</p>&#xA;&#xA;<p><code>__resolveType(obj, args, context, info) {...}</code></p>&#xA;&#xA;<p>but on <code>graphql-js</code> version <code>14.3.0</code> i found that context is change to second position</p>&#xA;&#xA;<p>i tried to find which commit is reference to this problem but found nothing&#xA;can someone explain me how this problem happend or post a commit or changelog detail thanks</p>&#xA;",9592073,,9592073,2019-05-15 02:55:09,2019-05-15 02:55:09,Problem when upgrading graphql-js from 14.1.1 to 14.3.0,<graphql-js><graphql-tools>,0,4,0,2019-05-14 12:22:44
56158839,1,56158984,,0,643,"<p>I trying to bulk adjust inventory item of my Shopify product variants as explained in this article: <a href=""https://www.shopify.com/partners/blog/multi-location_and_graphql"" rel=""nofollow noreferrer"">https://www.shopify.com/partners/blog/multi-location_and_graphql</a></p>&#xA;&#xA;<p>I tried hardcoding the variants ID in the query and it worked great : </p>&#xA;&#xA;<pre class=""lang-rb prettyprint-override""><code>&lt;&lt;-'GRAPHQL'&#xA;      mutation {&#xA;      inventoryBulkAdjustQuantityAtLocation(&#xA;        locationId: ""gid://shopify/Location/5537988719"",&#xA;        inventoryItemAdjustments: [&#xA;          {inventoryItemId: ""gid://shopify/InventoryItem/21112836292719"", availableDelta: 1},&#xA;          {inventoryItemId: ""gid://shopify/InventoryItem/21112836325487"", availableDelta: 10}&#xA;          ]) {&#xA;        inventoryLevels {&#xA;          available&#xA;        }&#xA;      }&#xA;    }&#xA;  GRAPHQL&#xA;</code></pre>&#xA;&#xA;<p>Now I am trying to set the product variants ID as variables like follow:</p>&#xA;&#xA;<pre class=""lang-rb prettyprint-override""><code>require ""graphql/client""&#xA;require ""graphql/client/http""&#xA;&#xA;class HomeController &lt; ApplicationController&#xA;  API_KEY       = 'XXXXXX'.freeze&#xA;  PASSWORD      = 'XXXXXX'.freeze&#xA;  SHARED_SECRET = 'XXXXXX'.freeze&#xA;  SHOP_NAME     = 'xxxxxx'.freeze&#xA;  API_VERSION   = '2019-04'.freeze&#xA;&#xA;  shop_url                      = ""https://#{API_KEY}:#{PASSWORD}@#{SHOP_NAME}.myshopify.com/admin""&#xA;  ShopifyAPI::Base.site         = shop_url&#xA;  ShopifyAPI::Base.api_version  = API_VERSION&#xA;  CLIENT                        = ShopifyAPI::GraphQL.new&#xA;&#xA;  BULK_ADJUST = CLIENT.parse &lt;&lt;-'GRAPHQL'&#xA;      mutation inventoryBulkAdjustQuantityAtLocation($inventoryItemAdjustments: [InventoryAdjustItemInput!]!, $locationId: ID!) {&#xA;        inventoryBulkAdjustQuantityAtLocation(inventoryItemAdjustments: $inventoryItemAdjustments, locationId: $locationId) {&#xA;          inventoryLevels {&#xA;            id&#xA;          }&#xA;          userErrors {&#xA;            field&#xA;            message&#xA;          }&#xA;        }&#xA;      }&#xA;  GRAPHQL&#xA;&#xA;  def bulk_update_inventory&#xA;    inventoryItemAdjustments = [&#xA;        { ""inventoryItemId"" =&gt; ""gid://shopify/InventoryItem/1234"", ""availableDelta"" =&gt; 1 },&#xA;        { ""inventoryItemId"" =&gt; ""gid://shopify/InventoryItem/5678"", ""availableDelta"" =&gt; 10 }&#xA;    ]&#xA;&#xA;    variables = {&#xA;        ""inventoryItemAdjustments"" =&gt; inventoryItemAdjustments,&#xA;        ""locationId"" =&gt; ""gid://shopify/Location/9012""&#xA;    }&#xA;&#xA;      result = CLIENT.query(BULK_ADJUST,&#xA;                          variables: variables)&#xA;    render :json =&gt; { :result =&gt; result }&#xA;  end&#xA;&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>When I try to run the query I reach the following error: </p>&#xA;&#xA;<pre class=""lang-rb prettyprint-override""><code>Unknown action&#xA;&#xA;The action 'bulk_update_inventory' could not be found for HomeController&#xA;</code></pre>&#xA;&#xA;<p>There is anybody knows why do I have this error?</p>&#xA;",3285614,,,,2019-05-15 23:42:33,How to use variables in GraphQL mutation for bulk adjust inventory?,<ruby-on-rails><ruby><graphql><shopify>,2,0,0,2019-05-15 23:22:30
56158984,2,,56158839,0,,"<p>Finally got the answer!&#xA;The correct query was: </p>&#xA;&#xA;<pre><code>BULK_ADJUST = CLIENT.parse &lt;&lt;-'GRAPHQL'&#xA;      mutation($inventoryItemAdjustments: [InventoryAdjustItemInput!]!, $locationId: ID!) {&#xA;        inventoryBulkAdjustQuantityAtLocation(inventoryItemAdjustments: $inventoryItemAdjustments, locationId: $locationId) {&#xA;          inventoryLevels {&#xA;            id&#xA;          }&#xA;          userErrors {&#xA;            field&#xA;            message&#xA;          }&#xA;        }&#xA;      }&#xA;  GRAPHQL&#xA;</code></pre>&#xA;&#xA;<p>The word ""inventoryBulkAdjustQuantityAtLocation"" after the ""mutation"" keyword had to be removed.</p>&#xA;",3285614,,,,2019-05-15 23:42:12,"",,0,0,0,2019-05-15 23:42:12
56180241,2,,56179737,0,,<p>you need to send the id in query args and BE should return only single record based on the id. Like below. </p>&#xA;&#xA;<pre><code>query{&#xA;&#xA;&#xA;allDataJson(id:1 ){&#xA;    edges {&#xA;      node {&#xA;        products{&#xA;          uid&#xA;          sku&#xA;          title &#xA;          price&#xA;          image&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,9759747,,,,2019-05-17 05:38:46,"",,0,1,0,2019-05-17 05:38:46
56186602,2,,56179737,0,,"<p>GraphiQL should also suggest the query <code>dataJson</code> to you. While <code>allDataJson</code> gives you back a connection (hence the array), <code>dataJson</code> only returns a single result - often used with a filter.</p>&#xA;&#xA;<p>So something like this should work (I couldn't try it in GraphiQL myself):</p>&#xA;&#xA;<pre><code>query {&#xA;  dataJson(products: { uid: { eq: 2 } }) {&#xA;    products {&#xA;      uid&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Please try it yourself with the auto-completion of GraphiQL.</p>&#xA;",10164092,,,,2019-05-17 12:39:19,"",,0,1,0,2019-05-17 12:39:19
56191476,2,,56179737,0,,"<p>Other answers have pointed out the filter function of graphql in Gatsby, but your case is a bit different: your product is an array. By default, there's no way you can filter the array returned by a field -- each item in the array has to be a node.</p>&#xA;&#xA;<p>It'll be much easier if you can transform your data structure from this:</p>&#xA;&#xA;<pre><code>// data.json&#xA;{&#xA;  products: [{ ""uid"": 0 }, { ""uid"": 1 }]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>...to something like this:</p>&#xA;&#xA;<pre><code>// data.json&#xA;[{ ""uid"": 0 }, { ""uid"": 1 }]&#xA;</code></pre>&#xA;&#xA;<p>...and store your metadata somewhere else.</p>&#xA;&#xA;<p>This way, each item in the array will become a node, and you can filter like expected.</p>&#xA;&#xA;<pre><code>{&#xA;  allDataJson(filter: {&#xA;    uid: {eq: 1}&#xA;  }) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>If changing the json data structure is not possible, you can also write your own <code>gatsby-transformer-json</code> that simply read the json file &amp; create a node for each item in the product list.</p>&#xA;",10340970,,,,2019-05-17 18:01:55,"",,0,0,0,2019-05-17 18:01:55
56228378,2,,55469347,3,,"<p>If you're querying for the <code>products</code> connection under <code>queryroot</code>, you can use the <code>query</code> parameter:</p>&#xA;&#xA;<pre><code>{&#xA;    products(first: 16, sortKey:PRICE, query:""title:Bracelet""){&#xA;        edges {&#xA;            cursor&#xA;            node {&#xA;                title&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>However</strong>, if you're in a <code>Collection</code> (as is the case in your code above), the <code>products</code> connection only has 6 supported parameters: <code>after</code>, <code>before</code>, <code>first</code>, <code>last</code>, <code>reverse</code>, and <code>sortKey</code> <strong><em>but not</em></strong> <code>query</code>. </p>&#xA;&#xA;<p>The <a href=""https://help.shopify.com/en/api/custom-storefronts/storefront-api/reference/object/collection"" rel=""nofollow noreferrer"">Shopify help page</a> gives more information on this.</p>&#xA;",9773274,,,,2019-05-20 21:25:36,"",,0,1,0,2019-05-20 21:25:36
56232641,1,,,1,935,"<p>I would like to know how to pass an argument during a <code>refetchQueries</code> in Apollo.</p>&#xA;&#xA;<p>Code:</p>&#xA;&#xA;<pre><code>submitForm(e) {&#xA;        e.preventDefault();&#xA;        this.props.addAppleMutation({&#xA;            variables: {&#xA;                        color: ""red""&#xA;                        weight: ""0.33""&#xA;            },&#xA;            // stuck here&#xA;            refetchQueries: [{ query: loadApplesQuery, variables: {//argument i want to pass} }]&#xA;        })&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>My query:</p>&#xA;&#xA;<pre><code>const loadApplesQuery = gql`&#xA;    query($id: ID) {&#xA;        apple(id: $id) {&#xA;            color&#xA;            size&#xA;            id&#xA;        }&#xA;    }&#xA;`&#xA;</code></pre>&#xA;",9145806,,13302,2019-11-03 20:26:12,2019-11-03 20:26:12,How to refetchQueries a query having an args option,<reactjs><graphql><apollo>,1,1,0,2019-05-21 06:51:31
56243614,2,,56232641,3,,"<p>Yeah you can do this, you can also have a look at the same scenario that you want to tackle at </p>&#xA;&#xA;<p><a href=""https://www.apollographql.com/docs/react/api/react-apollo#graphql-mutation-options-refetchQueries"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/api/react-apollo#graphql-mutation-options-refetchQueries</a></p>&#xA;&#xA;<p>so for example you can do this with High Order Component (HOC), you can do something like this</p>&#xA;&#xA;<pre><code>&#xA;const loadApplesQuery = gql`&#xA;    query($id: ID) {&#xA;        apple(id: $id) {&#xA;            color&#xA;            size&#xA;            id&#xA;        }&#xA;    }&#xA;`;&#xA;&#xA;const addAppleMutation = gql`&#xA;    mutation($apple: Apple) {&#xA;        addApple(Apple: $apple)&#xA;    }&#xA;`;&#xA;&#xA;export default graphql(addAppleMutation, {&#xA;  name: 'addAppleMutation',&#xA;  options: {&#xA;    refetchQueries: (mutationResult) =&gt; [{&#xA;        query: loadApplesQuery,&#xA;        variables: {&#xA;          id: mutationResult.id,&#xA;        }&#xA;      }]&#xA;  },&#xA;})(MyComponent);&#xA;</code></pre>&#xA;&#xA;<p>and then in the submitForm method you can do something like this </p>&#xA;&#xA;<pre><code>&#xA;submitForm(e) {&#xA;   this.props.addAppleMutation({ variables : { color: 'green', size: 'small'}});&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>Hopefully that will help you.</p>&#xA;",5794694,,,,2019-05-21 17:32:02,"",,0,4,0,2019-05-21 17:32:02
56249753,1,,,0,289,"<p>When testing the query in the browser I can easily query slices but once in my project, when I try to query Prismic slices it all falls apart.&#xA;Packages: apollo-client, apollo-cache-inmemory, apollo-link-prismic</p>&#xA;&#xA;<p>the query looks something like:</p>&#xA;&#xA;<pre><code>{&#xA;  thepage(uid: ""page"", lang: ""en-gb"") {&#xA;    page_title&#xA;    page_description&#xA;    body {&#xA;      ... on ThePageBodyHero {&#xA;        type&#xA;        fields {&#xA;          title&#xA;          description&#xA;          button_text&#xA;          button_link {&#xA;            _linkType&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>this works in the interface but as soon as I add the slices section in the project the query returns a 404.</p>&#xA;",9747930,,,,2019-05-22 09:45:49,Retrieve Prismic slices content in Nuxtjs using GraphQL not working in project,<vue.js><graphql><nuxt.js>,1,0,0,2019-05-22 05:19:29
56250662,1,56251608,,1,425,"<p>I need to create a Graphql query that outputs data from two arrays of objects. The arrays are: </p>&#xA;&#xA;<pre><code>  const authors = [&#xA;    {&#xA;      name: 'Robert Martin',&#xA;      id: 'afa51ab0-344d-11e9-a414-719c6709cf3e',&#xA;      born: 1952&#xA;    },&#xA;    {&#xA;      name: 'Martin Fowler',&#xA;      id: 'afa5b6f0-344d-11e9-a414-719c6709cf3e',&#xA;      born: 1963&#xA;    },&#xA;    {&#xA;      name: 'Fyodor Dostoevsky',&#xA;      id: 'afa5b6f1-344d-11e9-a414-719c6709cf3e',&#xA;      born: 1821&#xA;    },&#xA;    {&#xA;      name: 'Joshua Kerievsky', // birthyear not known&#xA;      id: 'afa5b6f2-344d-11e9-a414-719c6709cf3e'&#xA;    },&#xA;    {&#xA;      name: 'Sandi Metz', // birthyear not known&#xA;      id: 'afa5b6f3-344d-11e9-a414-719c6709cf3e'&#xA;    }&#xA;  ];&#xA;</code></pre>&#xA;&#xA;<p>And:</p>&#xA;&#xA;<pre><code>  const books = [&#xA;    {&#xA;      title: 'Clean Code',&#xA;      published: 2008,&#xA;      author: 'Robert Martin',&#xA;      id: 'afa5b6f4-344d-11e9-a414-719c6709cf3e',&#xA;      genres: ['refactoring']&#xA;    },&#xA;    {&#xA;      title: 'Agile software development',&#xA;      published: 2002,&#xA;      author: 'Robert Martin',&#xA;      id: 'afa5b6f5-344d-11e9-a414-719c6709cf3e',&#xA;      genres: ['agile', 'patterns', 'design']&#xA;    },&#xA;    {&#xA;      title: 'Refactoring, edition 2',&#xA;      published: 2018,&#xA;      author: 'Martin Fowler',&#xA;      id: 'afa5de00-344d-11e9-a414-719c6709cf3e',&#xA;      genres: ['refactoring']&#xA;    },&#xA;    {&#xA;      title: 'Refactoring, edition 3',&#xA;      published: 2018,&#xA;      author: 'Martin Fowler',&#xA;      id: 'afa5de00-344d-11e9-a414-719c6709cf3e',&#xA;      genres: ['refactoring']&#xA;    },&#xA;    {&#xA;      title: 'Refactoring, edition 4',&#xA;      published: 2018,&#xA;      author: 'Martin Cowler',&#xA;      id: 'afa5de00-344d-11e9-a414-719c6709cf3e',&#xA;      genres: ['refactoring']&#xA;    },&#xA;    {&#xA;      title: 'Refactoring to patterns',&#xA;      published: 2008,&#xA;      author: 'Joshua Kerievsky',&#xA;      id: 'afa5de01-344d-11e9-a414-719c6709cf3e',&#xA;      genres: ['refactoring', 'patterns']&#xA;    },&#xA;    {&#xA;      title: 'Practical Object-Oriented Design, An Agile Primer Using &#xA;       Ruby',&#xA;      published: 2012,&#xA;      author: 'Sandi Metz',&#xA;      id: 'afa5de02-344d-11e9-a414-719c6709cf3e',&#xA;      genres: ['refactoring', 'design']&#xA;    },&#xA;    {&#xA;      title: 'Crime and punishment',&#xA;      published: 1866,&#xA;      author: 'Fyodor Dostoevsky',&#xA;      id: 'afa5de03-344d-11e9-a414-719c6709cf3e',&#xA;      genres: ['classic', 'crime']&#xA;    },&#xA;    {&#xA;      title: 'The Demon ',&#xA;      published: 1872,&#xA;      author: 'Fyodor Dostoevsky',&#xA;      id: 'afa5de04-344d-11e9-a414-719c6709cf3e',&#xA;      genres: ['classic', 'revolution']&#xA;    }&#xA;  ];&#xA;</code></pre>&#xA;&#xA;<p>The desired output format for a query like this:</p>&#xA;&#xA;<pre><code>query {&#xA;  allAuthors {&#xA;  name&#xA;  bookCount&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>}</p>&#xA;&#xA;<p>is like so:</p>&#xA;&#xA;<pre><code>    ""data"": {&#xA;      ""allAuthors"": [&#xA;        {&#xA;          ""name"": ""Robert Martin"",&#xA;          ""bookCount"": 2&#xA;        },&#xA;        {&#xA;          ""name"": ""Martin Fowler"",&#xA;          ""bookCount"": 1&#xA;        },&#xA;        {&#xA;          ""name"": ""Fyodor Dostoevsky"",&#xA;          ""bookCount"": 2&#xA;        },&#xA;        {&#xA;          ""name"": ""Joshua Kerievsky"",&#xA;          ""bookCount"": 1&#xA;        },&#xA;        {&#xA;          ""name"": ""Sandi Metz"",&#xA;          ""bookCount"": 1&#xA;        }&#xA;      ]&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>I've found a way to count the amount of books for each author and output the data in the desired format (a good example of that here: <a href=""https://stackoverflow.com/questions/41273917/summarize-count-of-occurrences-in-an-array-of-objects-with-arrayreduce"">Summarize count of occurrences in an array of objects with Array#reduce</a>). However this approach ignores other fields in the data, such as ""born"" and ""genres"". If I was to expand the query like so:</p>&#xA;&#xA;<pre><code>    query {&#xA;     allAuthors {&#xA;      name&#xA;      bookCount&#xA;      born&#xA;     }&#xA;   }&#xA;</code></pre>&#xA;&#xA;<p>It wouldn't output anything for the field ""born"". What would be the smart way to create the query resolver? Spread operator? Reduce?</p>&#xA;&#xA;<p><strong>* EDIT *</strong>&#xA;My unnecessarily complicated solution for counting the books here: </p>&#xA;&#xA;<pre><code> const newBooks = books.reduce((acc, cv) =&gt; {&#xA;    const arr = acc.filter(obj =&gt; {&#xA;      return obj.author === cv.author;&#xA;    });&#xA;&#xA;    if (arr.length === 0) {&#xA;      acc.push({ name: cv.author, born: cv.born, bookCount: 1 });&#xA;    } else {&#xA;      arr[0].bookCount += 1;&#xA;    }&#xA;&#xA;    return acc;&#xA;  }, []);&#xA;  const array = [];&#xA;  books.forEach(book =&gt; {&#xA;    const object = {&#xA;      name: book.author&#xA;    };&#xA;    array.push(object);&#xA;    return array;&#xA;  });&#xA;  const unique = array.map(a =&gt; a.name);&#xA;  result = {};&#xA;  for (var i = 0; i &lt; unique.length; ++i) {&#xA;    if (!result[unique[i]]) result[unique[i]] = 0;&#xA;    ++result[unique[i]];&#xA;  }&#xA;  const entries = Object.entries(result);&#xA;  const finalAnswer = [];&#xA;  entries.forEach(entry =&gt; {&#xA;    const object = {&#xA;      name: entry[0],&#xA;      bookCount: entry[1]&#xA;    };&#xA;    finalAnswer.push(object);&#xA;    return finalAnswer;&#xA;  });&#xA;  console.log(finalAnswer);&#xA;</code></pre>&#xA;",10928954,,10928954,2019-05-22 06:50:06,2019-05-22 07:36:28,Counting occurrence of values in an array of objects in another array of objects,<javascript><arrays><object><graphql>,2,1,0,2019-05-22 06:35:10
56251608,2,,56250662,3,,"<p>You could <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""nofollow noreferrer""><code>map</code></a> the authors and use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"" rel=""nofollow noreferrer""><code>filter</code></a> to get the <code>bookCount</code> for each <code>author</code></p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const authors=[{name:'Robert Martin',id:'afa51ab0-344d-11e9-a414-719c6709cf3e',born:1952},{name:'Martin Fowler',id:'afa5b6f0-344d-11e9-a414-719c6709cf3e',born:1963},{name:'Fyodor Dostoevsky',id:'afa5b6f1-344d-11e9-a414-719c6709cf3e',born:1821},{name:'Joshua Kerievsky',id:'afa5b6f2-344d-11e9-a414-719c6709cf3e'},{name:'Sandi Metz',id:'afa5b6f3-344d-11e9-a414-719c6709cf3e'}],&#xD;&#xA;      books=[{title:'Clean Code',published:2008,author:'Robert Martin',id:'afa5b6f4-344d-11e9-a414-719c6709cf3e',genres:['refactoring']},{title:'Agile software development',published:2002,author:'Robert Martin',id:'afa5b6f5-344d-11e9-a414-719c6709cf3e',genres:['agile','patterns','design']},{title:'Refactoring, edition 2',published:2018,author:'Martin Fowler',id:'afa5de00-344d-11e9-a414-719c6709cf3e',genres:['refactoring']},{title:'Refactoring, edition 3',published:2018,author:'Martin Fowler',id:'afa5de00-344d-11e9-a414-719c6709cf3e',genres:['refactoring']},{title:'Refactoring, edition 4',published:2018,author:'Martin Cowler',id:'afa5de00-344d-11e9-a414-719c6709cf3e',genres:['refactoring']},{title:'Refactoring to patterns',published:2008,author:'Joshua Kerievsky',id:'afa5de01-344d-11e9-a414-719c6709cf3e',genres:['refactoring','patterns']},{title:'Practical Object-Oriented Design, An Agile Primer Using Ruby ',published:2012,author:'Sandi Metz',id:'afa5de02-344d-11e9-a414-719c6709cf3e',genres:['refactoring','design']},{title:'Crime and punishment',published:1866,author:'Fyodor Dostoevsky',id:'afa5de03-344d-11e9-a414-719c6709cf3e',genres:['classic','crime']},{title:'The Demon ',published:1872,author:'Fyodor Dostoevsky',id:'afa5de04-344d-11e9-a414-719c6709cf3e',genres:['classic','revolution']}];&#xD;&#xA;&#xD;&#xA;const output = authors.map(({ born, name }) =&gt; {&#xD;&#xA;  const bookCount = books.filter(b =&gt; b.author === name).length;&#xD;&#xA;  return { name, born, bookCount }&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;console.log(output)</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",3082296,,,,2019-05-22 07:36:28,"",,0,0,0,2019-05-22 07:36:28
56259396,1,56265387,,1,647,"<p>First, Saleor with GraphQL is fantastic. Just love it.</p>&#xA;&#xA;<p>The products we are selling have additional metadata we need to get from Graphql.  Out of the box, the Graphql queries work fine, such as:</p>&#xA;&#xA;<pre><code>{&#xA;  product (id: ""UHJvZHVjdDo3Mg=="") {&#xA;    id&#xA;    name&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What I need to do is expose data from my products table with additional columns, such as productInfo1, productInfo2, and productInfo3.  This part is easy of course.</p>&#xA;&#xA;<p>However, I am struggling with how to update the Saleor Graphql so I can run a query like the following:</p>&#xA;&#xA;<pre><code>{&#xA;  product (id: ""UHJvZHVjdDo3Mg=="") {&#xA;    id&#xA;    name&#xA;    description {&#xA;      productInfo1&#xA;      productInfo2&#xA;      productInfo3&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have been through the Saleor docs, Stack Overflow, and a variety of blogs...  I've attempted some logical approaches myself, without any success.</p>&#xA;&#xA;<p>I'm eager to start working on these types of updates for our needs here.  Any suggestions or links to ""how to"" locations would be greatly appreciated!</p>&#xA;",2452240,,6229845,2019-05-23 08:24:37,2019-05-23 08:24:37,How to update Saleor's Graphql responses with newly added DB table fields?,<graphql><saleor>,1,0,0,2019-05-22 14:41:00
56265712,2,,56054038,8,,"<p>The GraphQL query is actually right. </p>&#xA;&#xA;<p>What has gone wrong there is the dating of the apparently older commit, which although is authored in 2009 it is indeed more recent than the 2011 one. By newer here we refer to being pushed at a later point than the other one. This means the timestamp of the commit was amended, which was possibly caused by a misconfiguration of the author's clock at the time.</p>&#xA;&#xA;<p>The main page will always show the most recently pushed commit, which for <a href=""https://github.com/ystk/debian-libidn"" rel=""nofollow noreferrer"">debian-libidn</a>, for example, it shows the 2009-dated one.</p>&#xA;&#xA;<p>To detail further, there are three timestamp-related properties of <code>Commit</code> that you could retrieve:</p>&#xA;&#xA;<ul>&#xA;<li><p><code>committedDate</code>: the date at which point the commit was created locally. Updated when a commit was changed and affected by the author's clock</p></li>&#xA;<li><p><code>authoredDate</code>: by default same as <code>committedDate</code>, can be changed with the <code>--date</code> optional parameter when committing changes, also affected by the author's clock</p></li>&#xA;<li><p><code>pushedDate</code>: the date when the commit was pushed to the repository, according to the server's time (in this case GitHub's)</p></li>&#xA;</ul>&#xA;&#xA;<p>From the above, it seems you would prefer to use <code>pushedDate</code> instead, as that will give the real order of commits as they were pushed to the repo.</p>&#xA;",5838198,,5838198,2019-05-23 19:18:17,2019-05-23 19:18:17,"",,0,3,0,2019-05-22 22:18:17
56274291,2,,45382069,1,,"<p>You can add qualifiers, if you want to search ""beef"" just in names than change the query like </p>&#xA;&#xA;<p>search(query: ""beef in:name"", type: REPOSITORY, first: 10) {</p>&#xA;&#xA;<p>for further detail you can look at <a href=""https://help.github.com/en/articles/searching-for-repositories#search-based-on-the-contents-of-a-repository"" rel=""nofollow noreferrer"">https://help.github.com/en/articles/searching-for-repositories#search-based-on-the-contents-of-a-repository</a></p>&#xA;",2125440,,,,2019-05-23 11:32:52,"",,0,0,0,2019-05-23 11:32:52
56295094,2,,46248607,3,,"<p>It looks like because the GitObject implements Blob, you can use the ""... on"" syntax to access it's properties, which will contain the contents of the object.</p>&#xA;&#xA;<p>In order to access the object in question, pass in the branch and filename with the extension in the format ""branch:filename.ext"" and retrieve the Blob from the result, and the text from that. </p>&#xA;&#xA;<p>Multiple objects can be retrieved simultaneously, allowing you to check for alternate casings, such as lowercase ""readme.md"" names. Simply provide aliases for the objects. Example below.</p>&#xA;&#xA;<pre><code>   {&#xA;    repository(owner: ""owner"", name: ""name"") {&#xA;      upCase: object(expression: ""master:README.md"") {&#xA;        ... on Blob {&#xA;          text&#xA;        }&#xA;      }&#xA;      object(expression: ""master:readme.md"") {&#xA;        ... on Blob {&#xA;          text&#xA;        }&#xA;      }&#xA;      otherFile: object(expression: ""master:index.js"") {&#xA;        ... on Blob {&#xA;          text&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>This may help explain the ""... on"" syntax.&#xA;<a href=""https://graphql.github.io/graphql-spec/June2018/#sec-Inline-Fragments"" rel=""nofollow noreferrer"">https://graphql.github.io/graphql-spec/June2018/#sec-Inline-Fragments</a></p>&#xA;",2891028,,2891028,2019-05-24 15:05:29,2019-05-24 15:05:29,"",,0,0,0,2019-05-24 14:53:42
56328455,1,,,1,1522,"<p>When I' using union type in my graphQL schema I use it typically like this:</p>&#xA;&#xA;<pre><code>const documentTypeDefs = gql`&#xA; union TestType = TypeExample1 | TypeExample2&#xA;&#xA; type Document {&#xA;   exampleKey: TestType&#xA; }&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>Then I resolve it like this:</p>&#xA;&#xA;<pre><code>  TestType: {&#xA;    __resolveType(obj) {&#xA;     if(obj.property1) {&#xA;       return 'TypeExample1';&#xA;     }&#xA;&#xA;     if(obj.property2) {&#xA;       return 'TypeExample2';&#xA;     }&#xA;&#xA;    return null;&#xA;  },&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But sometimes I'm getting empty object in my resolving function (ie. <code>obj</code> is <code>{}</code>). I thought returning <code>null</code> or <code>undefined</code> will do the job but unfortunately I'm getting error:</p>&#xA;&#xA;<pre><code>""Abstract type ItemsType must resolve to an Object type at runtime for field Document.exampleKey with value {}, received \""{}\"". Either the ItemsType type should provide a \""resolveType\"" function or each possible type should provide an \""isTypeOf\"" function.""&#xA;</code></pre>&#xA;&#xA;<p>How can I resolve empty object then?&#xA;Thank you!</p>&#xA;",9223556,,,,2019-05-27 15:49:16,Empty object with union type in graphQL,<express><graphql>,1,0,0,2019-05-27 15:00:05
56341464,2,,56334924,1,,"<p>Generic errors are perfect, given the information within them are informative. </p>&#xA;&#xA;<p>The client will receive the error as expected, and you'll be able to locate where within your software the error is coming from. </p>&#xA;&#xA;<p>Custom errors are great for when you need more data associated with it, but what you have will work. </p>&#xA;",1174869,,,,2019-05-28 11:41:16,"",,0,2,0,2019-05-28 11:41:16
56344245,1,58853309,,1,2688,"<p>I have requirements graph nested query with java resolver.</p>&#xA;&#xA;<pre><code>getAccounts(type: ""01"",transactionMonths: 12){&#xA;         accountNumber,&#xA;          openDate,&#xA;          productType,               &#xA;          accountTransactions(annualFee: True){&#xA;            amount,&#xA;            date&#xA;                }&#xA;      }&#xA;</code></pre>&#xA;&#xA;<p>How can we write query in graphql and how to write java resolver  for nested query.&#xA;How to fetch the nested query arguments to to pass to my jparepository.&#xA;i have Account type and Transactions type as below</p>&#xA;&#xA;<pre><code>type Account{&#xA;    accountNumber: String&#xA;    openDate: String&#xA;     type: String&#xA;     transactionMonths: String&#xA;     productType: String&#xA;     accountTransactions:[AccountTransaction]&#xA;}&#xA;type AccountTransaction{&#xA;    amount: String&#xA;    date:String&#xA;    annualFee:Boolean&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can i retrive the accountTransactions in accounts using nested query using java resolver.</p>&#xA;",10240529,,,,2020-03-27 11:17:38,Graphql java nested query resolver,<java><spring-boot><graphql>,1,0,0,2019-05-28 14:16:18
56349248,1,,,0,326,"<p>I am in the process of converting our project from the Shopify REST API over to the GraphQL API, however, I can't seem to find a way to pull ""Abandoned checkouts"".</p>&#xA;&#xA;<p>This is the REST API documentation for abandoned checkouts that I am currently using and referencing:&#xA;<a href=""https://help.shopify.com/en/api/reference/orders/abandoned-checkouts"" rel=""nofollow noreferrer"">https://help.shopify.com/en/api/reference/orders/abandoned-checkouts</a></p>&#xA;&#xA;<p>I can't seem to find the equivalent using GraphQL.</p>&#xA;",2272231,,,,2019-05-28 20:48:06,Shopify GraphQL – How to pull abandoned checkouts,<graphql><shopify>,1,0,0,2019-05-28 19:55:21
56401516,1,,,1,1462,"<p>With Github GraphQL I want to answer the question:</p>&#xA;&#xA;<blockquote>&#xA;  <p>What commits have been merged into master between releases/tags?</p>&#xA;</blockquote>&#xA;&#xA;<p>The result should be similar to the results for this question <a href=""https://stackoverflow.com/questions/5863426/get-commit-list-between-tags-in-git"">Get commit list between tags in Git</a> if I were to do it on the command line.</p>&#xA;&#xA;<p>I'm using the developer explorer and wondering if I will be able to do this with a single query or if I will need several. I tried the following but it does not give me the commits between tags that have not been tagged, just the tagged commits.</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""CoolCompany"", name: ""awesome-new-ui"") {&#xA;    refs(refPrefix: ""refs/tags/"", first: 2, orderBy: {field: TAG_COMMIT_DATE, direction: DESC}) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          name&#xA;          target {&#xA;            oid&#xA;            ... on Commit {&#xA;              author {&#xA;                date&#xA;                email&#xA;                name&#xA;              }&#xA;              message&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",463024,,,,2019-06-06 22:26:58,Github GraphQl - How to get a list of commits between tags,<graphql><github-api><github-graphql>,1,1,0,2019-05-31 20:42:27
56416447,1,56575391,,8,8827,"&#xA;&#xA;<p>When resolving large data I notice a very slow performance, from the moment of returning the result from my resolver to the client.</p>&#xA;&#xA;<p>I assume <code>apollo-server</code> iterates over my result and checks the types... either way, the operation takes too long. </p>&#xA;&#xA;<p>In my product I have to return large amount of data all at once, since its being used, all at once, to draw a chart in the UI. There is no pagination option for me where I can slice the data.</p>&#xA;&#xA;<p>I suspect the slowness coming from <code>apollo-server</code> and not my resolver object creation.</p>&#xA;&#xA;<p>Note, that I log the time the resolver takes to create the object, its fast, and not the bottle neck.</p>&#xA;&#xA;<p>Later operations performed by <code>apollo-server</code>, which I dont know how to measure, takes a-lot of time.</p>&#xA;&#xA;<p>Now, I have a version, where I return a custom scalar type JSON, the response, is much much faster. But I really prefer to return my <code>Series</code> type.</p>&#xA;&#xA;<p>I measure the difference between the two types (<code>Series</code> and <code>JSON</code>) by looking at the network panel.</p>&#xA;&#xA;<p>when AMOUNT is set to 500, and the type is <code>Series</code>, it takes ~1.5s (that is seconds)</p>&#xA;&#xA;<p>when AMOUNT is set to 500, and the type is <code>JSON</code>, it takes ~150ms (fast!)</p>&#xA;&#xA;<p>when AMOUNT is set to 1000, and the type is <code>Series</code>, its very slow...</p>&#xA;&#xA;<p>when AMOUNT is set to 10000, and the type is <code>Series</code>, I'm getting JavaScript heap out of memory (which is unfortunately what we experience in our product)</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>I've also compared <code>apollo-server</code> performance to <code>express-graphql</code>, the later works faster, yet still not as fast as returning a custom scalar JSON.</p>&#xA;&#xA;<p>when AMOUNT is set to 500, <code>apollo-server</code>, network takes 1.5s</p>&#xA;&#xA;<p>when AMOUNT is set to 500, <code>express-graphql</code>, network takes 800ms</p>&#xA;&#xA;<p>when AMOUNT is set to 1000, <code>apollo-server</code>, network takes 5.4s</p>&#xA;&#xA;<p>when AMOUNT is set to 1000, <code>express-graphql</code>, network takes 3.4s</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>The Stack:</p>&#xA;&#xA;<pre><code>""dependencies"": {&#xA;  ""apollo-server"": ""^2.6.1"",&#xA;  ""graphql"": ""^14.3.1"",&#xA;  ""graphql-type-json"": ""^0.3.0"",&#xA;  ""lodash"": ""^4.17.11""&#xA;}&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>The Code:</p>&#xA;&#xA;<pre><code>const _ = require(""lodash"");&#xA;const { performance } = require(""perf_hooks"");&#xA;const { ApolloServer, gql } = require(""apollo-server"");&#xA;const GraphQLJSON = require('graphql-type-json');&#xA;&#xA;// The GraphQL schema&#xA;const typeDefs = gql`&#xA;  scalar JSON&#xA;&#xA;  type Unit {&#xA;    name: String!&#xA;    value: String!&#xA;  }&#xA;&#xA;  type Group {&#xA;    name: String!&#xA;    values: [Unit!]!&#xA;  }&#xA;&#xA;  type Series {&#xA;    data: [Group!]!&#xA;    keys: [Unit!]!&#xA;    hack: String&#xA;  }&#xA;&#xA;  type Query {&#xA;    complex: Series&#xA;  }&#xA;`;&#xA;&#xA;const AMOUNT = 500;&#xA;&#xA;// A map of functions which return data for the schema.&#xA;const resolvers = {&#xA;  Query: {&#xA;    complex: () =&gt; {&#xA;      let before = performance.now();&#xA;&#xA;      const result = {&#xA;        data: _.times(AMOUNT, () =&gt; ({&#xA;          name: ""a"",&#xA;          values: _.times(AMOUNT, () =&gt; (&#xA;            {&#xA;              name: ""a"",&#xA;              value: ""a""&#xA;            }&#xA;          )),&#xA;        })),&#xA;        keys: _.times(AMOUNT, () =&gt; ({&#xA;          name: ""a"",&#xA;          value: ""a""&#xA;        }))&#xA;      };&#xA;&#xA;      let after = performance.now() - before;&#xA;&#xA;      console.log(""resolver took: "", after);&#xA;&#xA;      return result&#xA;    }&#xA;  }&#xA;};&#xA;&#xA;const server = new ApolloServer({&#xA;  typeDefs,&#xA;  resolvers: _.assign({ JSON: GraphQLJSON }, resolvers),&#xA;});&#xA;&#xA;server.listen().then(({ url }) =&gt; {&#xA;  console.log(` Server ready at ${url}`);&#xA;});&#xA;&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>The gql Query for the Playground (for type Series):</p>&#xA;&#xA;<pre><code>query {&#xA;  complex {&#xA;    data {&#xA;      name&#xA;      values {&#xA;        name&#xA;        value&#xA;      }&#xA;    }&#xA;    keys {&#xA;      name&#xA;      value&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>The gql Query for the Playground (for custom scalar type JSON):</p>&#xA;&#xA;<pre><code>query {&#xA;  complex&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is a working example:</p>&#xA;&#xA;<p><a href=""https://codesandbox.io/s/apollo-server-performance-issue-i7fk7"" rel=""noreferrer"">https://codesandbox.io/s/apollo-server-performance-issue-i7fk7</a></p>&#xA;&#xA;<p>Any leads/ideas would be highly appreciated!</p>&#xA;",2373504,,2373504,2019-06-03 11:22:38,2019-06-13 07:28:21,Apollo Server Slow Performance when resolving large data,<graphql><apollo-server>,2,9,0,2019-06-02 15:31:09
56434351,2,,56429981,1,,"<p>Actually, it depends on how the MyDateTimeType's coerceInput method is defined. In my case, the coerceInput has a match case statement with StringValue case, so it worked when I passed a String to it. dateArg:""2019-05-30""</p>&#xA;",710178,,,,2019-06-03 20:46:33,"",,0,0,0,2019-06-03 20:46:33
56439946,1,56441112,,1,1416,"<p>I would like to create a checkout object via the GraphQL API provided by the Saleor eCommerce platform. </p>&#xA;&#xA;<p>According to the gql playground there is a mutation to do so that takes a CheckoutCreateInput object as it's argument.</p>&#xA;&#xA;<p>Here is an example mutation that works fine within the playground.</p>&#xA;&#xA;<p><img src=""https://fermor.s3.amazonaws.com/gql-sandbox.png"" alt=""example gql""></p>&#xA;&#xA;<p>Here is the current code that I have tried (I am doing this within a vuex action)</p>&#xA;&#xA;<pre><code>export const actions = {&#xA;  addToCart({ commit, dispatch }, cartItem) {&#xA;    const currentCartItems = this.state.cartItems&#xA;    // Check to see if we already have a checkout object&#xA;    if (this.state.checkoutId !== '') {&#xA;      // Create a new checkout ID&#xA;      console.log('creating new checkout object')&#xA;      try {&#xA;        this.app.apolloProvider.defaultClient&#xA;          .mutate({&#xA;            mutation: CREATE_CART_MUTATION,&#xA;            variables: {&#xA;              checkoutInput: {&#xA;                lines: { quantity: 10, variantId: 'UHJvZHVjdFZhcmlhbnQ6NQ==' },&#xA;                email: 'test@test.com'&#xA;              }&#xA;            }&#xA;          })&#xA;          .then(({ data }) =&gt; {&#xA;            console.log(data)&#xA;          })&#xA;      } catch (e) {&#xA;        console.log(e)&#xA;      }&#xA;    } else {&#xA;      console.log('checkout id already set')&#xA;    }&#xA;&#xA;    // TODO: Check to see if the cart already contains the current Cart Item&#xA;&#xA;    commit('ADD_CART_ITEM', cartItem)&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>and here is the CREATE_CART_MUTATION:</p>&#xA;&#xA;<pre><code>import gql from 'graphql-tag'&#xA;&#xA;export const CREATE_CART_MUTATION = gql`&#xA;  mutation($checkoutInput: CheckoutCreateInput!) {&#xA;    checkoutCreate(input: $checkoutInput) {&#xA;      checkout {&#xA;        id&#xA;        created&#xA;        lastChange&#xA;        lines {&#xA;          id&#xA;          variant {&#xA;            id&#xA;            name&#xA;          }&#xA;          quantity&#xA;          totalPrice {&#xA;            gross {&#xA;              localized&#xA;            }&#xA;            net {&#xA;              localized&#xA;            }&#xA;          }&#xA;        }&#xA;        totalPrice {&#xA;          gross {&#xA;            localized&#xA;          }&#xA;          net {&#xA;            localized&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>On the server this comes back with the following error:</p>&#xA;&#xA;<pre class=""lang-py prettyprint-override""><code>graphql.error.base.GraphQLError: Variable ""$checkoutInput"" got invalid value {""email"": ""test@test.com"", ""lines"": {""quantity"": 10, ""variantId"": ""UHJvZHVjdFZhcmlhbnQ6NQ==""}}.&#xA;In field ""lines"": In element #0: Expected ""CheckoutLineInput"", found not an object.&#xA;</code></pre>&#xA;",6808709,,6808709,2019-06-04 08:41:28,2019-06-04 09:27:22,Vue Apollo: How can I query GraphQL using an object as Input argument?,<vue.js><graphql><vue-apollo><saleor>,1,0,0,2019-06-04 08:17:38
56441112,2,,56439946,2,,"<p>Looks like I was most of the way there, I was just passing a single lines object rather than an array of them. The correct code is as follows:</p>&#xA;&#xA;<pre><code>try {&#xA;  this.app.apolloProvider.defaultClient&#xA;    .mutate({&#xA;      mutation: CREATE_CART_MUTATION,&#xA;      variables: {&#xA;        checkoutInput: {&#xA;          lines: [&#xA;            { quantity: cartItem.quantity, variantId: cartItem.variantId }&#xA;          ],&#xA;          email: 'test@test.com'&#xA;        }&#xA;      }&#xA;    })&#xA;    .then(({ data }) =&gt; {&#xA;      console.log('mutation done!')&#xA;      commit('SET_CHECKOUT_OBJECT', data.checkoutCreate.checkout)&#xA;    })&#xA;} catch (e) {&#xA;  console.log('error:')&#xA;  console.log(e)&#xA;}&#xA;</code></pre>&#xA;",6808709,,,,2019-06-04 09:27:22,"",,0,0,0,2019-06-04 09:27:22
56442187,1,,,0,285,"<p>search using keyword for repositories and find all repositories associated with that repositories in git hub , listing collaborators of each repository.</p>&#xA;&#xA;<p>The search for repositories with the keyword is working fine, i was able to get the name of each repositories, but not collaborators, &#xA;with that I'm getting must have push access to view collaborators.</p>&#xA;&#xA;<p>query {</p>&#xA;&#xA;<pre><code>rateLimit{&#xA;    cost&#xA;    remaining&#xA;    resetAt&#xA;}&#xA;search(query: ""-js created:&gt;2015-01-01 language:JavaScript"", type:REPOSITORY, first: 20) {&#xA;    repositoryCount&#xA;    pageInfo {&#xA;        hasNextPage&#xA;        endCursor&#xA;        startCursor&#xA;    }&#xA;    edges {&#xA;        node {&#xA;            ... on Repository {&#xA;                name&#xA;                url&#xA;                collaborators(first: 100, affiliation: ALL)&#xA;              {&#xA;                edges{&#xA;                  node{&#xA;                    name&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I will get the collaborators if i do like below, but i want to use the search functionality and get the collaborators of only searched repositories.</p>&#xA;&#xA;<p>{&#xA;  user(login: ""xxxx"") {</p>&#xA;&#xA;<pre><code>repositories(first: 100){&#xA;  nodes{&#xA;&#xA;      name&#xA;      url&#xA;        collaborators(first:100,affiliation:ALL){&#xA;      nodes{&#xA;        name&#xA;      }&#xA;    }&#xA;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>}&#xA;}</p>&#xA;",7121658,,,,2019-06-04 15:06:45,"GraphQL : Searched with a keyword, provides a list of repositories and for each repository to provide the collaborators using github API",<graphql><github-api>,1,0,0,2019-06-04 10:36:05
56445004,1,,,0,19,"<p>Unable to access my resolver returned object, however, I can see its content, but accessing properties returns an undefined. Only solution I found is using Stringify/Parse on my value.</p>&#xA;&#xA;<p>Using JSON Stringify then PARSE on my Object turns it to be readable, but this is a lame solution :)</p>&#xA;&#xA;<pre><code>const MonkeyResolver = {&#xA;    Monkey: {&#xA;    address: (data, args, context) =&gt; {&#xA;&#xA;         console.log({data}); // Returns the actual entire object (monkey&gt;address)&#xA;&#xA;console.log(data.address); // --&gt; Returns undefined&#xA;&#xA;const newData = JSON.stringify(data);&#xA;const parsedData = JSON.parse(newData);&#xA;&#xA;console.log(data.address); // --&gt; Returns the address&#xA;&#xA;       }&#xA;    }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>My expected object is such as :</p>&#xA;&#xA;<p>Object(monkey)&#xA;   address: &#xA;      city&#xA;      street</p>&#xA;&#xA;<p>What did I misunderstand?</p>&#xA;",6468737,,,,2019-06-04 13:49:54,Unable to access object property except by stringify/parse before the data in Graphql/resolver context,<graphql><resolver>,1,0,0,2019-06-04 13:32:14
56485818,2,,56401516,1,,"<p>@lee-dohm from the Github GraphQL community helped me arrive at a solution which is posted <a href=""https://github.community/t5/GitHub-API-Development-and/GraphQL-How-to-get-a-list-of-commits-between-tags-or-releases/m-p/25142"" rel=""nofollow noreferrer"">here</a></p>&#xA;&#xA;<p>I can paste my solution here as well. It seems this problem is not solve-able with a single query, but it can be done with 2 that work in conjunction with each other:</p>&#xA;&#xA;<p>Step 1: Get the most recent release information. You could modify this for tags as well.</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""CoolCompany"", name: ""awesome-ui"") {&#xA;    releases(last: 1) {&#xA;      edges{&#xA;        node{&#xA;          tagName&#xA;          createdAt&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Step 2: Use the value from the createdAt (associated with the release or tag) and do this:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""CoolCompany"", name: ""awesome-ui"") {&#xA;    nameWithOwner&#xA;    object(expression: ""master"") {&#xA;      ... on Commit {&#xA;        oid&#xA;        history(first: 100, since: ""$createdAtDate"") {&#xA;          nodes {&#xA;            oid&#xA;            messageHeadline&#xA;            author {&#xA;              user {&#xA;                login&#xA;              }&#xA;            }&#xA;            committedDate&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",463024,,,,2019-06-06 22:26:58,"",,0,0,0,2019-06-06 22:26:58
56489151,1,,,1,1917,"<p>I'm trying to fetch all the repositories with the searched keyword. There are about 500 repositories for the searched result, but I was able to retrieve only 100 as that's the limit, is there any way to retrieve all 500.</p>&#xA;&#xA;<pre><code>query {&#xA;    rateLimit{&#xA;        cost&#xA;        remaining&#xA;        resetAt&#xA;    }&#xA;&#xA;search(query: ""-js created:&gt;2015-01-01 language:JavaScript"", type:REPOSITORY, first: 500){ &#xA;    repositoryCount&#xA;    pageInfo {&#xA;        hasNextPage&#xA;        endCursor&#xA;        startCursor&#xA;    }&#xA;    edges {&#xA;        node {&#xA;            ... on Repository {&#xA;                name&#xA;                url&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>}</p>&#xA;&#xA;<p>I'm getting the message  </p>&#xA;&#xA;<blockquote>&#xA;  <p>""Requesting 500 records on the <code>search</code> connection exceeds the <code>first</code>&#xA;  limit of 100 records."", and&#xA;        ""type"": ""EXCESSIVE_PAGINATION""</p>&#xA;</blockquote>&#xA;",7121658,,3316550,2019-06-07 08:51:01,2019-06-07 12:34:49,Requesting 500 records on the `search` connection exceeds the `first` limit of 100 records in graphql,<pagination><graphql><github-api>,1,1,0,2019-06-07 06:40:25
56491680,1,,,0,1871,"<p>I need to check the existence of some elements in an array as such</p>&#xA;&#xA;<p>I have an array as such</p>&#xA;&#xA;<p>ar = ['one','two','three']</p>&#xA;&#xA;<p>I want to know how I can individually check the elements in the regular expression code below instead of ""/something/"" that would map through my array and check if they exist in graphQL one by one.</p>&#xA;&#xA;<pre><code>similar : allCockpitHello (filter: {Association : {value : {regex: ""\/something/"" }}} limit:2){&#xA;      nodes{&#xA;        Name{&#xA;          value&#xA;        }&#xA;}&#xA;</code></pre>&#xA;",3621842,,,,2019-06-08 12:00:08,How to check an array with regular expression in GraphQL,<reactjs><graphql>,2,0,0,2019-06-07 09:30:08
56494452,2,,56489151,0,,"<p>I tried like this, was able to list all repositories but not all at once.</p>&#xA;&#xA;<p>There is a field called 'endCursor', when you run the query for first: 100, you will get some value for endCursor , then in the search query provide that endCursor value for 'after' field as below :</p>&#xA;&#xA;<pre><code>    search(query: ""-js created:&gt;2015-01-01 language:JavaScript"", &#xA;    type:REPOSITORY, first: 100, after: ""endCursor value"")&#xA;</code></pre>&#xA;&#xA;<p>By this you can get next 100 repositories, likewise do for remaining repositories to be listed.</p>&#xA;",7121658,,,,2019-06-07 12:34:49,"",,0,0,0,2019-06-07 12:34:49
56518093,1,,,1,1383,"<p>I am trying to do some tests on saleor e-commerce cms by adding some products automatically from some cvs file through python&#xA;Unfotunately I have only found some examples GraphQL API for reading the existing products from the database <a href=""https://stackoverflow.com/questions/53435400/saleor-product-bulk-upload-script"">Saleor Product Bulk upload script</a> but I can not find nothing for add a product with GraphQL API. &#xA;Any suggestions?</p>&#xA;",2421995,,,,2019-06-10 13:35:04,Saleor e-commerce: How to batch insert products through python code or API,<python><django><graphql><e-commerce><saleor>,2,0,0,2019-06-09 20:19:38
56527401,2,,56518093,0,,"<p>The pytest fixtures give a good brief on how to create products in a programmatic way inside python - <a href=""https://github.com/mirumee/saleor/blob/master/tests/conftest.py#L389"" rel=""nofollow noreferrer"">https://github.com/mirumee/saleor/blob/master/tests/conftest.py#L389</a></p>&#xA;&#xA;<p>Also, I don't think the bulk APIs exist for <em>adding</em> products. From the code I can see that they're meant for deletion &amp; stuff (managing) - <a href=""https://github.com/mirumee/saleor/blob/master/saleor/graphql/product/bulk_mutations/products.py"" rel=""nofollow noreferrer"">https://github.com/mirumee/saleor/blob/master/saleor/graphql/product/bulk_mutations/products.py</a></p>&#xA;",2689986,,,,2019-06-10 13:29:02,"",,0,3,0,2019-06-10 13:29:02
56549385,2,,56547036,1,,"<p>Not sure you pasted all resolver code. If you are using autogenerated <code>listX</code> resolver, it by default returns 10 items. Try</p>&#xA;&#xA;<pre><code>query listAllDocuments {&#xA;        listDocuments(limit: 100) { // anything larger than 31&#xA;          items{&#xA;            userId&#xA;          }&#xA;      }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>And you will get all 31. Find more details in the <a href=""https://github.com/aws-amplify/amplify-js/issues/2233"" rel=""nofollow noreferrer"">github thread</a></p>&#xA;",7550592,,,,2019-06-11 18:01:02,"",,0,1,0,2019-06-11 18:01:02
56565052,1,,,3,894,"<p>I am trying to use github graph api to make requests and grab only the details I require ie. number of stars on some public repo. An unauthenticated request to get details on a repo using V3(REST) api works fine, but it contains a million details of the repo which I don't need, I just need number of stars on the repo.</p>&#xA;&#xA;<p>When I make following request:</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner: ""facebook"", name: ""react"") {&#xA;    stargazers {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In javascript using <code>fetch</code> it responds <code>401 Unauthorized</code></p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>fetch('https://api.github.com/graphql', {&#xD;&#xA;    method: 'POST',&#xD;&#xA;    headers: { 'Content-Type': 'application/json' },&#xD;&#xA;    body: JSON.stringify({ query: '{ repository(owner: ""facebook"", name: ""react"") { stargazers(last: 10) { totalCount } } }' })&#xD;&#xA;})&#xD;&#xA;.then(res =&gt; res.json())&#xD;&#xA;.then(res =&gt; console.log(res));</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>I need to show the data on a public website so I can't use a token from my github account to authenticate.<br>&#xA;Is there some way to make requests without authenticating, maybe some workaround. Or is it not possible?</p>&#xA;",9321755,,9321755,2019-06-12 15:31:58,2021-05-20 15:53:19,How to make unauthenticated requests to GitHub GraphQL API,<github><graphql>,2,0,0,2019-06-12 14:53:07
56634989,1,,,0,28,"<p>I'm still a little new to graphql and Apollo. But I'm curious, if I create a search query that returns a union of two types, how would I go about modifying the combined results of that union. Using the Apollo Docs example (<a href=""https://www.apollographql.com/docs/apollo-server/features/unions-interfaces/"" rel=""nofollow noreferrer"">Unions and interface</a>):</p>&#xA;&#xA;<pre><code>union Result = Book | Author&#xA;&#xA;  type Book {&#xA;    title: String&#xA;  }&#xA;&#xA;  type Author {&#xA;    name: String&#xA;  }&#xA;&#xA;  type Query {&#xA;    search: [Result]&#xA;  }&#xA;</code></pre>&#xA;&#xA;<pre><code>const resolvers = {&#xA;  Result: {&#xA;    __resolveType(obj, context, info){&#xA;      if(obj.name){&#xA;        return 'Author';&#xA;      }&#xA;&#xA;      if(obj.title){&#xA;        return 'Book';&#xA;      }&#xA;&#xA;      return null;&#xA;    },&#xA;  },&#xA;  Query: {&#xA;    search: () =&gt; { ... }&#xA;  },&#xA;};&#xA;&#xA;const server = new ApolloServer({&#xA;  typeDefs,&#xA;  resolvers,&#xA;});&#xA;&#xA;server.listen().then(({ url }) =&gt; {&#xA;  console.log(` Server ready at ${url}`)&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>After both the Book and Author resolvers complete, let's say I have 200 results, 50 books and 150 Authors. If I wanted to limit that to 100 of either, sorted alphabetically, how would I access the resolved array before return it to the client? The Apollo Server type definitions has a IResolverOptions interface with a resolve function, but if I add that to my Result resolver I get an error saying that Result.resolve is defined in the resolver but not the schema.</p>&#xA;",7117248,,,,2019-06-17 16:00:06,Paginating the combined results ofa union,<javascript><node.js><graphql><apollo><apollo-server>,0,2,0,2019-06-17 16:00:06
56661827,1,56664925,,0,1188,"<p>I am learning in <a href=""https://www.shopify.com/partners/blog/shopify-graphql-learning-kit"" rel=""nofollow noreferrer"">here</a>. </p>&#xA;&#xA;<p>The code look like below</p>&#xA;&#xA;<pre><code>product(first:3){&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        handle&#xA;        variants(first:3) {&#xA;          edges {&#xA;            node {&#xA;              id&#xA;              displayName&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>will give me </p>&#xA;&#xA;<pre><code>""errors"": [&#xA;    {&#xA;      ""message"": ""Field 'product' is missing required arguments: id"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 2,&#xA;          ""column"": 1&#xA;        }&#xA;       ]&#xA;       ....&#xA;    }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>Any clue why is require id? Normally it should return 3 first product with their 3 variants. And also there is another message ""Field 'product' doesn't accept argument 'first'""??</p>&#xA;",11646984,,11646984,2019-06-19 07:09:24,2019-06-19 09:55:55,Field 'product' is missing required arguments: id,<graphql><shopify>,1,0,0,2019-06-19 07:03:09
56664925,2,,56661827,0,,"<p>Try using type name ""products"" instead of ""product"".</p>&#xA;&#xA;<p>Query should be like this:</p>&#xA;&#xA;<pre><code>product(first:3){&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        handle&#xA;        variants(first:3) {&#xA;          edges {&#xA;            node {&#xA;              id&#xA;              displayName&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;",2332326,,,,2019-06-19 09:55:55,"",,0,0,0,2019-06-19 09:55:55
56682723,1,,,1,961,"<p>I'm brand new to Apollo and graphql, and I'm trying to setup an e-commerce site with shopify's storefront API. The website is build with react and Next.js for SSR. </p>&#xA;&#xA;<p>I've managed to get some boilerplate code working for basic cart interactions with shopify. I have a Page component that wraps the whole app, and sits below ApolloProvider with access to apollo client. At the moment I'm using compose() to feed my Page component with some graphql (<a href=""https://github.com/Shopify/storefront-api-examples/blob/master/react-apollo/src/App.js"" rel=""nofollow noreferrer"">taken from this example</a>):</p>&#xA;&#xA;<pre><code>const pageWithData = compose(&#xA;  graphql(query), // Query that retrieves base shopify information, such as shop name, description and products&#xA;  graphql(createCheckout, {name: ""createCheckout""}), // Mutation that creates a new checkout object with shopify. Basically a cart object&#xA;  graphql(checkoutLineItemsAdd, {name: ""checkoutLineItemsAdd""}), // Mutation that adds a new lineitem to the checkout object&#xA;  graphql(checkoutLineItemsUpdate, {name: ""checkoutLineItemsUpdate""}), // Mutation that updates a line item&#xA;  graphql(checkoutLineItemsRemove, {name: ""checkoutLineItemsRemove""}), // Mutation that removes a lineitem&#xA;)(Page);&#xA;</code></pre>&#xA;&#xA;<p>This all works as expected, Except when i refresh the browser, the cart is emptied, and a new checkout object is created. So what I want to do is store the checkout ID in localStorage and check if there is an ID in localstorage, before creating a new checkout object. If there is one, i'll load that checkout instead. right now the checkout is created like so in the Page component:</p>&#xA;&#xA;<pre><code>componentWillMount() {&#xA;    this.props.createCheckout({&#xA;        variables: {&#xA;            input: {}&#xA;        }}).then((res) =&gt; {&#xA;        this.setState({&#xA;            checkout: res.data.checkoutCreate.checkout&#xA;        });&#xA;    });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now, I've found a working graphql query to load an existing checkout based on an ID: </p>&#xA;&#xA;<pre><code>const checkoutFetchQuery = gql`&#xA;  query checkoutFetch ($checkoutId: ID!) {&#xA;      node(id: $checkoutId) {&#xA;        ... on Checkout {&#xA;          webUrl&#xA;          subtotalPrice&#xA;          totalTax&#xA;          totalPrice&#xA;          lineItems (first:250) {&#xA;            pageInfo {&#xA;              hasNextPage&#xA;              hasPreviousPage&#xA;            }&#xA;            edges {&#xA;              node {&#xA;                title&#xA;                variant {&#xA;                  title&#xA;                  image {&#xA;                    src&#xA;                  }&#xA;                  price&#xA;                }&#xA;                quantity&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>And so I thought I could simply add this to the compose method like this: </p>&#xA;&#xA;<pre><code>const pageWithData = compose(&#xA;  graphql(query), // Query that retrieves base shopify information, such as shop name, description and products&#xA;&#xA;  graphql(checkoutFetchQuery, { name: ""fetchCheckout""}), // Query that fetches checkout based on a checkoutID&#xA;&#xA;  graphql(createCheckout, {name: ""createCheckout""}), // Mutation that creates a new checkout object with shopify. Basically a cart object&#xA;  graphql(checkoutLineItemsAdd, {name: ""checkoutLineItemsAdd""}), // Mutation that adds a new lineitem to the checkout object&#xA;  graphql(checkoutLineItemsUpdate, {name: ""checkoutLineItemsUpdate""}), // Mutation that updates a line item&#xA;  graphql(checkoutLineItemsRemove, {name: ""checkoutLineItemsRemove""}), // Mutation that removes a lineitem&#xA;)(Page);&#xA;</code></pre>&#xA;&#xA;<p>But this results in the following error from the Apollo dev tools:</p>&#xA;&#xA;<pre><code>GraphQL Errors: Variable checkoutId of type ID! was provided invalid value&#xA;</code></pre>&#xA;&#xA;<p>I'm certain that this is me not understanding some key concept of how compose() work in react-apollo. I understand that I need to feed the query with some variables, but for some reason this query seem to run immediately on load, where as I expected this would simply make the query available on the component. Some of the other graphql() statements expects variables as well, such as ""checkoutLineItemsAdd"", but this doesn't result in errors. Another thing I've noticed is that the mutations are added as functions to the component props, where as my query is added as an object.</p>&#xA;&#xA;<p>I'm struggling to find any good documentation on this. </p>&#xA;&#xA;<ul>&#xA;<li>Are queries run immediately?</li>&#xA;<li>Are mutations waiting to be called from the component, allowing us to dynamically add variables? </li>&#xA;<li>Should I write my gql syntax differently for it to become a function on the component instead of an object?</li>&#xA;<li>How do we pass variables dynamically to queries, when attached to the compose HOC?</li>&#xA;<li>Howcome I get errors from this query, and not the mutations, that also expect variables before running? </li>&#xA;</ul>&#xA;",963840,,,,2019-06-20 09:37:25,Manually fire a query via compose( graphql() ),<reactjs><graphql><apollo><react-apollo>,1,0,0,2019-06-20 09:15:34
56705157,1,,,23,42875,"<p>I try to map a key string with arrays of Objects.</p>&#xA;&#xA;<p>I can create a simple Object but i want to add easily an object in these arrays. The Map Object is perfect to do this.</p>&#xA;&#xA;<p>Problem: I dont know how to define the Type Map for GraphQL :'(</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>@ObjectType()&#xA;export class Inventaire&#xA;  @Field()&#xA;  _id: string;&#xA;&#xA; @Field()&#xA;  stocks: Map&lt;string, Article[]&gt;;&#xA;}&#xA;</code></pre>&#xA;",8026084,,,,2022-11-18 16:05:49,Best way to define a Map Object in GraphQL Schema?,<node.js><typescript><graphql><nestjs>,3,1,0,2019-06-21 14:16:01
56712029,1,,,0,561,"<p>I need to be able to create a product and add it's levelwithskills (An array of objects which contains level name and array of skills) in a single request.</p>&#xA;&#xA;<p>I have this schema:</p>&#xA;&#xA;<pre><code>input LevelData {&#xA;    name: String!&#xA;    skills: [SkillsData]!&#xA;}&#xA;&#xA;input SkillsData {&#xA;    name: String!&#xA;    price: Int&#xA;    duration: Int&#xA;    stepbystep: String&#xA;    teamchallange: String&#xA;}&#xA;&#xA;type Mutation {&#xA;    createProduct(productInputData: ProductInputData): String&#xA;}&#xA;&#xA;input ProductInputData {&#xA;    type: String!&#xA;    passion: String!&#xA;    course: String!&#xA;    levelwithskills: [LevelData]&#xA;    skills: [String]&#xA;    startdate: String!&#xA;    enddate: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The query i'm trying to send</p>&#xA;&#xA;<pre><code>createProduct(productInputData: {&#xA;    passion: ""Tester""&#xA;    course: ""Java and BDD""&#xA;    skills: [""HTML/CSS/JS""]&#xA;    levelwithskills: [{&#xA;      name: ""Beginner""&#xA;      skills: [{&#xA;        name: ""HTML/CSS/JS""&#xA;      }]&#xA;    },&#xA;    {&#xA;      name: ""Intermediate""&#xA;      skills: [{&#xA;        name: ""HTML/CSS/JS""&#xA;      }]&#xA;    }]&#xA;    startdate: ""2019-06-20T11:00:09.459Z""&#xA;    enddate: ""2019-06-20T11:30:09.459Z""&#xA;    type: ""privatelesson""&#xA;  })&#xA;</code></pre>&#xA;&#xA;<p>But Graphql gives me an error that states:</p>&#xA;&#xA;<pre><code>Validation error of type WrongType: argument 'productInputData.levelwithskills[0]' with value 'ObjectValue{objectFields=[ObjectField{name='type', value=StringValue{value='privatelesson'}}, ObjectField{name='course', value=StringValue{value='Java and BDD'}}, ObjectField{name='passion', value=StringValue{value='Tester'}}, ObjectField{name='levelwithskills', value=ArrayValue{values=[EnumValue{name='object'}, EnumValue{name='Object'}]}}, ObjectField{name='skills', value=ArrayValue{values=[StringValue{value='HTML/CSS/JS'}]}}, ObjectField{name='startdate', value=StringValue{value='2019-06-19T16:00:00.000Z'}}, ObjectField{name='enddate', value=StringValue{value='2019-06-19T16:45:00.000Z'}}' must be an object type @ 'createProduct'&#xA;</code></pre>&#xA;",8423761,,8423761,2019-07-12 04:31:41,2019-07-12 04:31:41,GraphQL mutation that accepts an multiple level of array of object in one request,<graphql><apollo><aws-amplify><aws-appsync><express-graphql>,1,4,0,2019-06-22 01:55:15
56793649,1,,,0,384,"<p>I'm trying to import JSON files containing product categories with <strong>gatsby-transformer-json</strong> that contain multiple products with fields which have dynamic sub fields depending on the category they are in. There are hundreds of different categories so I would like to keep these subfields like ""attributes"" dynamic. They also might change over time. The client logic would handle this.</p>&#xA;&#xA;<p>Unfortunately GraphQL only let's me query fields explicitly and the query needs to know all subfields. </p>&#xA;&#xA;<p>This is the JSON:</p>&#xA;&#xA;<pre><code>{&#xA;    ""name"": ""Car Hifi"",&#xA;    ""categorydesc"": ""This should be a very long text"",&#xA;    ""products"": [{&#xA;            ""name"": ""JVC KW-DB93BT"",&#xA;            ""attributes"": {&#xA;                ""Has USB"": ""JVC"",&#xA;                ""compatible formats"": {},&#xA;                ""Hands free"": ""true""&#xA;            },&#xA;            ""advantages"": {&#xA;                ""0"": ""More bass"",&#xA;                ""1"": ""Less power consumption"",&#xA;                ""2"": ""Simple UI""&#xA;            }&#xA;        }&#xA;    ]&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>and this a query:</p>&#xA;&#xA;<pre><code>query MyQuery {&#xA;  dataJson {&#xA;    name&#xA;    categorydesc&#xA;    products {&#xA;      name&#xA;      attributes {&#xA;        // This should be dynamic&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6100220,,11578778,2019-06-27 19:03:19,2019-06-27 19:03:19,Importing JSON with dynamic fields with GraphQL and Gatsby,<json><graphql><gatsby>,1,0,0,2019-06-27 14:48:27
56797753,1,56814659,,3,4544,"<p>I know that I should use integers for ""money values"" when programming. I know it's because of the <code>0.1 + 0.2 != 0.3</code> problem. But I don't know the problem well enough to know if that's a problem in data formats (like JSON) as well.</p>&#xA;&#xA;<p>In my concrete case: should I define</p>&#xA;&#xA;<pre><code>type Money {&#xA;    amount: Float!&#xA;    # ...&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>or</p>&#xA;&#xA;<pre><code>type Money {&#xA;    amount: Int!&#xA;    # ...&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>in GraphQL?</p>&#xA;",1119459,,,,2019-06-29 02:20:40,Should I use Ints for monetary values in GraphQL?,<json><graphql><dataformat>,2,0,0,2019-06-27 19:52:46
56843116,1,62776839,,4,1394,"<p>While creating an Apollo Client in a NextJS/TypeScript project, I need to figure out whether the current operation is Upload or not, but ESLint complains that <code>File</code> and <code>Blob</code> are not defined.</p>&#xA;&#xA;<p>I can disable warning: <code>// eslint-disable-next-line no-undef</code> but I’d like to understand why there’s such warning and I’d like to fix it without ignoring if possible.</p>&#xA;&#xA;<pre><code>const isFile = (value: any): boolean =&gt; {&#xA;  if (isPlainObject(value) || Array.isArray(value)) {&#xA;    return Object.values(value).map(isFile).includes(true)&#xA;  }&#xA;  const isfile = typeof File !== 'undefined' &amp;&amp; value instanceof File&#xA;  const isblob = typeof Blob !== 'undefined' &amp;&amp; value instanceof Blob&#xA;  return isfile || isblob&#xA;}&#xA;const isUpload = ({ variables }: any) =&gt; {&#xA;  return Object.values(variables).some(isFile)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/xl6LM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xl6LM.png"" alt=""enter image description here""></a></p>&#xA;",9221663,,,,2020-07-07 13:51:28,File/Blob - eslint(no-undef),<reactjs><typescript><eslint><apollo><next.js>,1,0,0,2019-07-01 22:16:59
56859579,2,,56858461,2,,"<p>A bit complicated to explain but we've probably all be there.  I was trying different ""solutions"" and the remains of one was accidentally left in my JSON data object. The full object has more properties than my brief one above.  An array shouldn't be ""[]"" in JSON.  I was getting tired and desperate last night.   I changed the resolver to what I posted above but it didn't fix the problem because of the experiment in JSON caused the same error as before.  So I was looking in the wrong places.  Once I noticed and removed the quotes my full object's data was posted to the Postgres db.</p>&#xA;&#xA;<p>The code above works.</p>&#xA;&#xA;<p>It would be nice if there were more specific GraphQL errors.  I suspected that this one is very general but that didn't help.  It didn't indicate that the original problem was in the resolver and later that I had a data input error.</p>&#xA;",2711978,,,,2019-07-02 20:22:58,"",,0,0,0,2019-07-02 20:22:58
56902647,2,,56894365,1,,"<p>Curly brackets serve three purposes in a GraphQL document. In executable documents, they identify a selection set, or a set of fields being requested. In type definitions, they either identify a set of fields (for an object type, an input object type or an interface) or they identify a set of values for an enum. <strong>In all three cases,</strong> the provided set cannot be empty. That is to say, <strong>if</strong> you use curly brackets, you <strong>must</strong> provide at least one item inside them.</p>&#xA;&#xA;<p>An empty pair of curly brackets (<code>{}</code>) will always provide a syntax error.</p>&#xA;&#xA;<p>If you don't need to provide a selection set/set of fields/set of enum values, just omit the curly brackets:</p>&#xA;&#xA;<pre><code># Invalid&#xA;type Query {&#xA;}&#xA;&#xA;# Valid (at least syntactically)&#xA;type Query&#xA;</code></pre>&#xA;",6024220,,,,2019-07-05 11:58:54,"",,0,0,0,2019-07-05 11:58:54
56912490,2,,48502492,0,,"<p>If you have a highly nested return value from your query one way to access the nested object is to first turn it into an array with Object.values(). Then access the field the array items and their corresponding values with dot notation.</p>&#xA;&#xA;<pre><code>const myQuery = gql`&#xA;  query {&#xA;    users {&#xA;      id&#xA;      name&#xA;      pet {&#xA;        id&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;// Inside Render function if using React ...&#xA;return users.map(({ id, name, pet }) =&gt; (&#xA;        &lt;div key={id}&gt;&#xA;          &lt;ul&gt;&#xA;            &lt;li&gt;&#xA;              {id} {name}&#xA;              {Object.values({ pet })[0].name}&#xA;            &lt;/li&gt;&#xA;          &lt;/ul&gt;&#xA;        &lt;/div&gt;&#xA;      ));&#xA;</code></pre>&#xA;",3833564,,,,2019-07-06 08:37:14,"",,0,0,0,2019-07-06 08:37:14
56985630,2,,56985226,3,,"<p>The difference between <code>findByPk</code> and <code>findAll</code> is that <code>findByPk</code> returns already a single element whereas <code>findAll</code> returns and array. You don't seem to take that into account. After that the resolvers for <code>User</code> receive an array where they cannot read properties from.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>return (await models.User.findAll({&#xA;  where: {&#xA;    ID_User: id&#xA;  }&#xA;}))[0];&#xA;</code></pre>&#xA;",3849167,,,,2019-07-11 09:10:42,"",,0,2,0,2019-07-11 09:10:42
56988247,1,,,0,43,"<p>For example github graphql has repository query</p>&#xA;&#xA;<pre><code>type Query {&#xA;  repository(name: string): Repository&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>And I have array of names <code>[""foo1"", ""foo2"", ...]</code></p>&#xA;&#xA;<p>How can I get array <code>[Repository]</code> in one request?</p>&#xA;",2260919,,,,2019-07-11 13:02:02,Is it possible to get an array of objects with query that returns only one object?,<graphql>,1,0,0,2019-07-11 11:33:57
56989882,2,,56988247,0,,<p>Is possible only if you change the functionality of that query.&#xA;Just implement a new query <code>repositories</code> with parameter <code>names</code> which returns <code>[Repository]</code></p>&#xA;,6382737,,,,2019-07-11 13:02:02,"",,0,2,0,2019-07-11 13:02:02
56995869,2,,55962703,1,,"<p>Thanks for bringing this to our attention. The fix for this has now been deployed, so you should see updates for mutations and subscriptions with aliases.</p>&#xA;",10886432,,,,2019-07-11 19:09:45,"",,0,1,0,2019-07-11 19:09:45
56996352,2,,56631316,8,,"<p>You can definitely use Unions on the return types for mutations.  Make sure you are including the field <code>__typename</code> on your values.  Your resolver template should return something like this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""id"": 1,&#xA;  ""type"": ""?"",&#xA;  ""values"": [&#xA;    {&#xA;      ""__typename"": ""StepTariff"",&#xA;      ""endDate"": ""2019-01-01""&#xA;    },&#xA;    {&#xA;      ""__typename"": ""SeasonalTimeTariff"",&#xA;      ""endDate"": ""2019-01-01"",&#xA;      ""peakConsumption"": 1.0&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;",11681626,,,,2019-07-11 19:49:08,"",,0,0,0,2019-07-11 19:49:08
56996567,1,,,5,405,"<p>Just started to learn reason react and struggle with a graphql setup trying to read an ENUM value.</p>&#xA;&#xA;<p><strong>setup</strong></p>&#xA;&#xA;<ul>&#xA;<li>reason react</li>&#xA;<li>apollo graphql</li>&#xA;<li>graphql_ppx</li>&#xA;<li>github graphql endpoint</li>&#xA;</ul>&#xA;&#xA;<p>i am fetching the latest pull request data over the github api and reading the <code>status</code> property which is an enum and defined in the gql docs as:</p>&#xA;&#xA;<ul>&#xA;<li>OPEN</li>&#xA;<li>CLOSED</li>&#xA;<li>MERGED</li>&#xA;</ul>&#xA;&#xA;<p>checking the network tab, i see the states are received as strings. within the application when I log the field i get a bunch of integers reflecting the values. can smb explain me, how i can ""print"" the data as string to my view and why they are translated to integers? is there somewhere a type generated which i could use for a variant switch?</p>&#xA;&#xA;<pre class=""lang-ml prettyprint-override""><code>let stateEnum = data-&gt;map(node =&gt; node##state);&#xA;Js.log(stateEnum) // possible values: 880069578, 982149804 or -1059826260&#xA;// somehow switch these values here?! :)&#xA;// current type of `stateEnum` is option('a)&#xA;</code></pre>&#xA;&#xA;<p>thanks a lot in advance and have a nice day!</p>&#xA;",1647228,,,,2019-09-21 07:58:03,Reason React and Graphql handling ENUM values,<graphql><reason><reason-react>,2,1,0,2019-07-11 20:06:55
56997821,1,,,1,2337,"<p>I cannot create a checkout with Shopify's Graphql API</p>&#xA;&#xA;<p>I am literally copying the example from this page in <a href=""https://help.shopify.com/en/api/storefront-api/guides/checkout-guide"" rel=""nofollow noreferrer"">Shopify's Checkout Guide</a> and pasting it into Shopify's GraphiQL App installed on the store where I am trying to create the checkout.</p>&#xA;&#xA;<p>This is my mutation, where the only thing I changed was the <code>variantId</code> so it matches one on my store:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  checkoutCreate(input: {&#xA;    lineItems: [{ variantId: ""gid://shopify/ProductVariant/46037988422"", quantity: 1 }]&#xA;  }) {&#xA;    checkout {&#xA;       id&#xA;       webUrl&#xA;       lineItems(first: 5) {&#xA;         edges {&#xA;           node {&#xA;             title&#xA;             quantity&#xA;           }&#xA;         }&#xA;       }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is the response I'm getting from Shopify:</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Field 'checkoutCreate' doesn't exist on type 'Mutation'"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 2,&#xA;          ""column"": 3&#xA;        }&#xA;      ],&#xA;      ""path"": [&#xA;        ""mutation"",&#xA;        ""checkoutCreate""&#xA;      ],&#xA;      ""extensions"": {&#xA;        ""code"": ""undefinedField"",&#xA;        ""typeName"": ""Mutation"",&#xA;        ""fieldName"": ""checkoutCreate""&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>The weird thing is that obviously <code>checkoutCreate</code> IS a mutation, according to Shopify. <a href=""https://help.shopify.com/en/api/storefront-api/reference/mutation/checkoutcreate"" rel=""nofollow noreferrer"">See the link to the page here</a></p>&#xA;&#xA;<p>Then I noticed, that the mutation on that page is different. So I'm trying that version, without a <code>variable</code> like this:</p>&#xA;&#xA;<pre><code>mutation checkoutCreate(input: {&#xA;    lineItems: [{ variantId: ""gid://shopify/ProductVariant/46037988422"", quantity: 1 }]&#xA;  }) {&#xA;    checkout {&#xA;      id&#xA;    }&#xA;    checkoutUserErrors {&#xA;      code&#xA;      field&#xA;      message&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And now the error I'm getting back is:</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Parse error on \""input\"" (INPUT) at [1, 25]"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 1,&#xA;          ""column"": 25&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Finally I tried this version with a variable and it also failed:</p>&#xA;&#xA;<pre><code>mutation checkoutCreate($input: CheckoutCreateInput!) {&#xA;  checkoutCreate(input: $input) {&#xA;    checkout {&#xA;      id&#xA;    }&#xA;    checkoutUserErrors {&#xA;      code&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;{&#xA;  ""input"": {&#xA;    lineItems: [{ variantId: ""gid://shopify/ProductVariant/46037988422"", quantity: 1 }]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The error here was:</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Parse error on \""input\"" (STRING) at [15, 3]"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 15,&#xA;          ""column"": 3&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>On top of all this, Shopify has interactive docs in their GraphiQL App.. and it does NOT list checkoutCreate as an available mutation. See this screenshot: <a href=""https://nimb.ws/af4iHx"" rel=""nofollow noreferrer"">https://nimb.ws/af4iHx</a></p>&#xA;",4386626,,4386626,2019-07-11 22:13:50,2020-10-30 04:34:25,Shopify GraphQL Checkout Create Mutation,<graphql><shopify>,2,1,0,2019-07-11 22:01:00
56998209,1,57004225,,1,1074,"<p>I'm trying to setup a schema in Lighthouse 3.7/Laravel 5.8&#xA;What I want to achieve is this:&#xA;A User should be able to create Clists.&#xA;There is a One to Many relation between User and Clist.&#xA;And I'm trying to implement nested mutations as described <a href=""https://lighthouse-php.com/3.7/eloquent/nested-mutations.html#belongs-to"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;&#xA;<p>I have already implemented the ""query"" part and it works fine.&#xA;But when I test a createClist mutation in GraphQL Playground, I get this error:</p>&#xA;&#xA;<pre><code>""debugMessage"": ""Array to string conversion"",&#xA;&#xA;""message"": ""Internal server error"",&#xA;&#xA;""extensions"": {&#xA;        ""category"": ""internal""&#xA;      },&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>And I can't figure out what I'm doing wrong.</p>&#xA;&#xA;<p>Here is my code:</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;  createClist(input: CreateClistInput! @spread): Clist @create&#xA;}&#xA;&#xA;input CreateClistInput {&#xA;    name: String!&#xA;    description: String&#xA;    starred: Boolean&#xA;    user: CreateUserRelation!&#xA;    ctags: CreateCtagRelation&#xA;}&#xA;&#xA;input CreateUserRelation {&#xA;  connect: ID!&#xA;}&#xA;&#xA;input CreateCtagRelation {&#xA;  create: [CreateCtagInput!]&#xA;  connect: [ID!]&#xA;  sync: [ID!]&#xA;}&#xA;&#xA;input CreateCtagInput {&#xA;  name: String!&#xA;}&#xA;&#xA;&#xA;</code></pre>&#xA;&#xA;<p>And here is a screenshot of GraphQL Playground:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/nAS5Y.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nAS5Y.jpg"" alt=""enter image description here""></a></p>&#xA;",6422325,,6024220,2019-07-24 16:00:46,2019-07-24 16:00:46,Nested mutations don't seem to work in Lighthouse 3.7,<laravel><graphql><laravel-lighthouse>,1,3,0,2019-07-11 22:48:37
57005182,1,,,2,501,"<p>I have a Gatsby site with a contentful source, the initial page build GraphQL looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;    allContentfulProduct {&#xA;        edges {&#xA;            node {&#xA;                slug&#xA;                contentfulid&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>this works fine when using the preview API, but when using the production one it fails unless I have at least 1 <code>Product</code> entry published:</p>&#xA;&#xA;<pre><code>There was an error in your GraphQL query:&#xA;&#xA;Cannot query field ""allContentfulProduct"" on type ""Query"". Did you mean ... [suggested entry names] ?&#xA;</code></pre>&#xA;&#xA;<p>I'm pretty sure that when I publish a <code>Product</code> things will work as expected, but is there any way to make this query optional. The query should return zero results, and thus no <code>Product</code> pages will be created (expected outcome if no <code>Product</code> entries are published)</p>&#xA;",214841,,13328195,2020-09-16 05:25:39,2020-09-16 05:25:39,Optional queries in Gatsby / GraphQL,<graphql><gatsby>,1,0,0,2019-07-12 10:31:41
57013489,2,,56996567,1,,"<p>As @Herku mentioned in his comment, the key was just to do this:</p>&#xA;&#xA;<pre class=""lang-ml prettyprint-override""><code>// asume that your enum is on a gqp property called `state`&#xA;// and we use the built in lib `Belt.Option` and the fn `getWithDefault`&#xA;// this way we are sure, that `stateEnum` is defined with one of the valid enum values&#xA;let stateEnum = data-&gt;map(node =&gt; node##state)-&gt;getWithDefault(`OPEN);&#xA;&#xA;// next we switch the polymorphic variant&#xA;let state = switch(stateEnum) {&#xA; | `OPEN =&gt; ""open""&#xA; | `CLOSED =&gt; ""close""&#xA; | `MERGED` =&gt; ""merged""&#xA;}&#xA;&#xA;// str = let str = ReasonReact.string;&#xA;str(state);&#xA;</code></pre>&#xA;",1647228,,13302,2019-09-21 07:58:03,2019-09-21 07:58:03,"",,0,0,0,2019-07-12 20:09:23
57019835,1,,,0,201,"<p>I do query cars from an api with a single query but two resolvers (listing and listings)(hopefully resolver is the right name for it). One car I get by the id via listing and the other cars I get without filters by listings. The resolvers output the data i a little different structure on the server-side but I do get the same fields just at different „places“. I want to merge the structure in order to get a single array I can simply loop over in vue.js. For the apicalls I do use vue-apollo. </p>&#xA;&#xA;<p>Couldn't find any information to merge data client-side inside graphqlqueries. All I found is about handling it serverside with resolvers but it's an api I do not own.</p>&#xA;&#xA;<p>Is it possible with graphql or do I have to merge it inside my vuecomponent and if so what would be the best way to do so?</p>&#xA;&#xA;<p>The output will be a grid of cars where I show the car of the week (requested by id) together with the newest cars of the regarding cardealer.</p>&#xA;&#xA;<p><strong>Full screenshot including response</strong>: <a href=""https://i.imgur.com/gkCZczY.png"" rel=""nofollow noreferrer"">https://i.imgur.com/gkCZczY.png</a></p>&#xA;&#xA;<p>Stripped down example with just the id to show the problem:</p>&#xA;&#xA;<pre><code>query CarTeaser ($guid: String! $withVehicleDetails: Boolean!) {&#xA;    search {&#xA;        listing(guid: $guid){&#xA;            details{&#xA;                identifier{&#xA;                    id #for example: here I get the id under details-&gt;identifier &#xA;                }&#xA;            }&#xA;        }&#xA;        listings( metadata: { size: 2 sort:{ field: Age order: Asc}}) {&#xA;            listings{&#xA;                id #here it's right under listings &#xA;                details{&#xA;                    …&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",2238969,,2238969,2019-07-13 14:06:26,2019-07-16 22:52:13,Merging data from different graphql resolvers in vue.js client side for simple outputting,<vuejs2><graphql><apollo><graphql-js><vue-apollo>,1,0,0,2019-07-13 13:59:31
57026367,2,,56997821,0,,"<p>I believe your input is parsed as JSON, so try putting quotes even around the nested properties of your mutation variables when testing.</p>&#xA;&#xA;<pre><code>    {&#xA;      ""input"": {&#xA;        ""lineItems"": [{ ""variantId"": ""gid://shopify/ProductVariant/46037988422"", &#xA;                    ""quantity"": 1 }]&#xA;     }&#xA;   }&#xA;</code></pre>&#xA;",8715397,,8715397,2019-07-14 12:02:39,2019-07-14 12:02:39,"",,0,0,0,2019-07-14 10:03:15
57080657,1,,,0,295,"<p>I'm trying to make a graphql query but I can't retrieve the MergeRequests from a open repository. What am i doing wrong?</p>&#xA;&#xA;<pre><code>{&#xA;  project(fullPath: ""gitlab-org/gitlab-ce"") {&#xA;    archived&#xA;    forksCount&#xA;    mergeRequests(last: 2) {&#xA;      edges {&#xA;        cursor&#xA;        node {&#xA;          id&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This query returned empty edges...&#xA;<a href=""https://i.stack.imgur.com/y6QGw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/y6QGw.png"" alt=""enter image description here""></a></p>&#xA;",11638080,,3708153,2019-07-18 11:17:10,2020-05-03 09:10:49,I can't get data from gitlab Graphql,<gitlab><graphql><gitlab-api>,1,0,0,2019-07-17 16:39:56
57087582,2,,55489747,1,,"<p>How about something like this.</p>&#xA;&#xA;<p><strong>FE query look like</strong></p>&#xA;&#xA;<pre><code>{ &#xA;  products{&#xA;        reviews(rating_lower_limit: 1, rating_higher_limit: 3) {&#xA;               stars&#xA;        }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>product_type.rb</p>&#xA;&#xA;<pre><code>field :reviews, [Types::ReviewType], null: false do&#xA;  argument :rating_lower_limit, Integer, required: false&#xA;  argument :rating_higher_limit, Integer, required: false&#xA;end&#xA;&#xA;def reviews(rating_lower_limit:, rating_higher_limit:)&#xA;  _reviews = object.reviews&#xA;  if (rating_lower_limit &amp;&amp; rating_higher_limit)&#xA;    _reviews.where(stars: rating_lower_limit..rating_higher_limit)&#xA;  else&#xA;    _reviews&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>Untested. But you get the idea.</p>&#xA;",2231236,,,,2019-07-18 05:19:36,"",,0,0,0,2019-07-18 05:19:36
57115160,1,57132347,,1,1829,"<p>I have users who can create lists. Lists can be starred (""featured"" if you prefer). I want to build a Graphql query in Lighthouse/Laravel that would retrieve all the starred/featured lists for a given user.</p>&#xA;&#xA;<p>I tried this query and it works:</p>&#xA;&#xA;<pre><code>&#xA;clistsByStarred(user_id: Int! @eq, starred: Boolean! @eq): [Clist] @all&#xA;&#xA;</code></pre>&#xA;&#xA;<p>and then I can use it like that:</p>&#xA;&#xA;<pre><code>query {&#xA;  clistsByStarred(user_id: 1, starred: true) {&#xA;      id&#xA;      name&#xA;      starred&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But it feels like a dirty hack to me.</p>&#xA;&#xA;<p>What I would like to achieve is this:</p>&#xA;&#xA;<pre><code>query {&#xA;   user(id: 1) {&#xA;     id&#xA;     name&#xA;     clistsByStarred {&#xA;       id&#xA;       name&#xA;       starred&#xA;     }&#xA;   }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>Any idea on how to implement it ?</p>&#xA;",6422325,,6024220,2019-07-24 16:00:21,2019-07-24 16:00:21,How to filter a Graphql query with a field value in Laravel 5.8 with Lighthouse,<laravel><graphql><laravel-lighthouse>,1,1,0,2019-07-19 15:03:49
57155071,2,,57154385,1,,"<p>As far as I'm concerned currently there is no graphql implementation with that capability. However, if what you want to do is to explore the ""data structure"", i.e, the schema, you should use schema instrospection, which was thought for that (explore the graphql schema). For example, a simple graphql instrospection query would be like this:</p>&#xA;&#xA;<pre><code>{&#xA;  __schema {&#xA;    types {&#xA;      name&#xA;      kind&#xA;      fields {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>References:&#xA;- <a href=""https://graphql.org/learn/introspection/"" rel=""nofollow noreferrer"">https://graphql.org/learn/introspection/</a></p>&#xA;&#xA;<p>UPDATE for edit:</p>&#xA;&#xA;<p>What you want to do I think is the following:&#xA;Make a query like this</p>&#xA;&#xA;<pre><code>{&#xA;  __schema {&#xA;    types {&#xA;      name&#xA;      kind&#xA;      fields {&#xA;        name&#xA;        type {&#xA;          fields {&#xA;            name&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>And then find the wished type field to grab more information (the fields) from it. Something like this (I don't know if this works, just an idea):</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const typeFlexibleContentTeaser = data.__schema.types.find(t =&gt; t === ""FlexibleContentTeaser"")&#xA;&#xA;const teaserLinkField = typeFlexibleContentTeaser.fields.find(f =&gt; f.name === ""teaserLink"")&#xA;&#xA;const teaserLinkField = teaserLinkField.type.fields;&#xA;</code></pre>&#xA;&#xA;<p>i.e, you have to transverse recursively through the <code>type</code> field.</p>&#xA;",8924381,,8924381,2019-07-30 14:25:05,2019-07-30 14:25:05,"",,0,4,0,2019-07-22 23:53:46
57155109,2,,57148413,2,,"<p>The body of the GitHub GraphQL query request is a JSON object with a <code>query</code> key, whose value is the GraphQL query as a string. In your example, what you are missing is the <code>query</code> key inside the <code>body</code>. Check this task as an example:</p>&#xA;&#xA;<pre><code>- name: Get data from Github&#xA;  uri:&#xA;    url: https://api.github.com/graphql&#xA;    method: POST&#xA;    headers:&#xA;      Authorization: 'bearer {{ github_token }}'&#xA;    body_format: json&#xA;    body:&#xA;      query: '{{ lookup(""template"", ""./templates/github_query.graphql"") }}'&#xA;</code></pre>&#xA;&#xA;<p>Where my <code>./templates/github_query.graphql</code> file is:</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner:""{{ owner }}"", name:""{{ repository_name }}"") {&#xA;    issues(last:{{ last_issues }}, states:{{ states }}) {&#xA;      edges {&#xA;        node {&#xA;          title&#xA;          url&#xA;          labels(first:{{ labels_count }}) {&#xA;            edges {&#xA;              node {&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And I can modify how the query works by modifying the <code>owner</code>, <code>repository_name</code>, <code>last_issues</code> and <code>labels_count</code> variable.</p>&#xA;",1930817,,1931171,2019-10-03 04:29:31,2019-10-03 04:29:31,"",,0,1,0,2019-07-23 00:01:20
57187810,1,,,1,120,"<p>I have a content model ""category"" that contains products (also a content model). Now I have to get the category in which a product is linked. For this I got the product url_name (unique).</p>&#xA;&#xA;<p>I searched in the kentico-delivery-sdk (JS) docs for a filter, that can go deeply inside an object/linked content model.</p>&#xA;&#xA;<pre><code>       categoryByProduct: async (&#xA;          _,&#xA;          { product, limit = 1,depth, order, language }&#xA;        ) =&gt; {&#xA;          const query = deliveryClient.items();&#xA;          language &amp;&amp; query.languageParameter(getKcCodeFromLang(language));&#xA;          limit &amp;&amp; query.limitParameter(limit);&#xA;          depth &amp;&amp; query.depthParameter(depth);&#xA;          order &amp;&amp; query.orderParameter(order);&#xA;          query.containsFilter(""elements.produkte[].url_name"", product)&#xA;&#xA;          const response = await query.getPromise();&#xA;          return response.items;&#xA;        },&#xA;</code></pre>&#xA;&#xA;<p>With this approach I never get a response from GraphQL. Is this the wrong filter?</p>&#xA;",7723466,,1332034,2019-09-23 12:11:03,2019-09-23 12:11:03,Kentico Cloud Delivery filter for parent element,<javascript><graphql><kentico-api><kentico-kontent>,1,0,0,2019-07-24 16:49:55
57197755,2,,57162332,0,,"<p>The problem in your code isthat you have mistmatch type between your graphql schema and the implementation of your resolver.</p>&#xA;&#xA;<p>Your mutation query should return this :</p>&#xA;&#xA;<pre><code>type _AddIdiomHasChildIdiomPayload {&#xA;  from: Idiom&#xA;  to: Idiom&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And your resolver returns this :</p>&#xA;&#xA;<pre><code>return {&#xA;  from: result.records.map(record =&gt; { return record.get(""p"").properties}),&#xA;  to: result.records.map(record =&gt; { return record.get(""c"").properties})&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here you are using a <code>map</code> function, and its result is an array.&#xA;So you are returning something like that :</p>&#xA;&#xA;<pre><code>{&#xA;  from : [ { id:'', name:'', ... } ]&#xA;  to : [ { id:'', name:'', ... } ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And <code>[ { id:'', name:'', ... } ]</code> doesn't validate the <code>Idiom</code> type of your schema, it's an array : <code>Idiom[]</code>.</p>&#xA;&#xA;<p>So you need to change your resolver to return just one element for <code>from</code> &amp; <code>to</code>.</p>&#xA;&#xA;<p>And moreover, your implementation is weird : you are doing two loop against the result of Neo4j, due to the use of two map and you don't close the session.</p>&#xA;&#xA;<p>You should try something like that :</p>&#xA;&#xA;<pre><code>const session = ctx.driver.session();&#xA;return session.run(query.toString(), {props:params})&#xA;  .then(result =&gt; {&#xA;    return result.records.map(record =&gt; {&#xA;      return {&#xA;        from:record.get(""p"").properties&#xA;        to:record.get(""c"").properties&#xA;      }&#xA;    })[0]&#xA;  })&#xA;  .catch(error =&gt; {&#xA;      //ToDo: Error handling code need to go here&#xA;  })&#xA;  .finally(() =&gt; {&#xA;    session.close();&#xA;  })&#xA;</code></pre>&#xA;&#xA;<p>Moreover</p>&#xA;",2286415,,,,2019-07-25 08:40:43,"",,0,0,0,2019-07-25 08:40:43
57206043,1,57207373,,0,927,"<p>if you sign into <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">https://developer.github.com/v4/explorer/</a>&#xA;and run this query </p>&#xA;&#xA;<pre><code>{&#xA;  search(query: ""org:ruby is:pr merged:&lt;2019-07-11"", type: ISSUE, last: 5) {&#xA;    edges {&#xA;      node {&#xA;        ... on PullRequest {&#xA;          url &#xA;          mergedAt&#xA;          commits(first: 12) {&#xA;            totalCount &#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>I can get all the pr that were merged before 2019-07-11&#xA;I would like to get the pr's merged before 2019-07-11 AND after  2019-07-04</p>&#xA;&#xA;<p>using <code>query: ""org:ruby is:pr merged:&lt;2019-07-11 and is:pr merged:&gt;2019-07-04 ""</code> does not filter. Is there an elegant way to do this?</p>&#xA;",31470,,6024220,2019-07-25 17:35:30,2019-07-25 17:35:30,using graphql github api to filter pr's merged between two dates,<github><graphql><github-api><github-graphql>,1,0,0,2019-07-25 15:58:03
57207373,2,,57206043,2,,"<p>Just add another <code>merged</code> condition:</p>&#xA;&#xA;<pre><code>org:ruby is:pr merged:&lt;2019-07-11 merged:&gt;2019-07-04&#xA;</code></pre>&#xA;&#xA;<p>or use range syntax:</p>&#xA;&#xA;<pre><code>org:ruby is:pr merged:2019-07-04..2019-07-11&#xA;</code></pre>&#xA;&#xA;<p>See <a href=""https://help.github.com/en/articles/understanding-the-search-syntax"" rel=""nofollow noreferrer"">here</a> for additional details.</p>&#xA;",6024220,,,,2019-07-25 17:32:05,"",,0,0,0,2019-07-25 17:32:05
57246979,1,57247347,,1,539,"<p>I would like to get commit details for a specific commit given that I already have the commit id</p>&#xA;&#xA;<p>for example, if I know the commit id is &#xA; <code>12762b76cba8ac4623a6c16e1fe60efafa3b7d1c</code> and the repo is <code>ruby/ruby</code></p>&#xA;&#xA;<p>how do I get the committedDate and author email? </p>&#xA;",31470,,,,2019-07-29 15:36:38,using graphql github api to get commit information by Id,<graphql><github-api><github-graphql>,1,0,0,2019-07-29 03:46:23
57247347,2,,57246979,1,,"<p>You can try using a <a href=""https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"" rel=""nofollow noreferrer"">cursor</a> as an edge type, as in <a href=""https://github.community/t5/GitHub-API-Development-and/GraphQL-Why-using-quot-last-quot-in-quot-history-quot-return/td-p/23392"" rel=""nofollow noreferrer"">this thread</a>:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""octocat"", name: ""Hello-World"") {&#xA;    first: object(expression: ""master"") {&#xA;      ... on Commit {&#xA;        history(path: ""README"", last: 1, before: ""762941318ee16e59dabbacb1b4049eec22f0d303 1"") {&#xA;          edges {&#xA;            node { &#xA;              committedDate &#xA;              oid&#xA;              author&#xA;              {  &#xA;                email&#xA;              }&#xA;            } &#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>you can test it using this explorer <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">https://developer.github.com/v4/explorer/</a></p>&#xA;",6309,,31470,2019-07-29 15:36:38,2019-07-29 15:36:38,"",,0,3,0,2019-07-29 04:48:23
57249541,2,,49944137,4,,"<p>The <a href=""https://developer.github.com/v4/mutation/createrepository/"" rel=""nofollow noreferrer"">createRepository</a> mutation was added to GitHub's GraphQL API v4 on <a href=""https://developer.github.com/v4/changelog/2019-06-26-schema-changes/"" rel=""nofollow noreferrer"">26 June 2019</a>.</p>&#xA;&#xA;<p>For example, the following mutation creates a new, public repository ""foo"":</p>&#xA;&#xA;<pre><code>mutation { &#xA;  createRepository(input:{name:""foo"", visibility:PUBLIC}) { &#xA;    clientMutationId,&#xA;    repository {&#xA;      id,&#xA;      nameWithOwner&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The <a href=""https://developer.github.com/v4/mutation/updaterepository/"" rel=""nofollow noreferrer"">updateRepository</a> mutation was added on <a href=""https://developer.github.com/v4/changelog/2019-07-17-schema-changes/"" rel=""nofollow noreferrer"">17 July 2019</a>.</p>&#xA;&#xA;<p>The (<a href=""https://developer.github.com/v4/mutation/createpullrequest/"" rel=""nofollow noreferrer"">create</a>|<a href=""https://developer.github.com/v4/mutation/mergepullrequest/"" rel=""nofollow noreferrer"">merge</a>|<a href=""https://developer.github.com/v4/mutation/closepullrequest/"" rel=""nofollow noreferrer"">close</a>)PullRequest mutations were added on <a href=""https://developer.github.com/v4/changelog/2018-10-24-schema-changes/"" rel=""nofollow noreferrer"">24 October 2018</a>.</p>&#xA;&#xA;<p>Creating tags (<a href=""https://developer.github.com/v4/mutation/createref/"" rel=""nofollow noreferrer"">createRef</a>, strictly speaking) was added on <a href=""https://developer.github.com/v4/changelog/2019-06-28-schema-changes/"" rel=""nofollow noreferrer"">28 June 2019</a></p>&#xA;&#xA;<p>So, as of 29 July 2019, I believe there are just the mutations for blobs, releases, and deleteRepository that are still outstanding from your list.</p>&#xA;",3811916,,3811916,2019-07-30 07:15:26,2019-07-30 07:15:26,"",,0,0,0,2019-07-29 08:04:54
57255571,2,,57255367,1,,<p>I tried calling different graphQL queries like </p>&#xA;&#xA;<pre><code>https://wordpress-285784-933130.cloudwaysapps.com/graphql?query={%20page{id}%20}&#xA;</code></pre>&#xA;&#xA;<p>which gives errors stating missing mandatory data which seems to be a problem with your data. Also it will be useful if you can check if the query you are trying to call is actually giving results directly as shown above which you mentioned does work in <strong>wpgraphiql</strong>.</p>&#xA;,954158,,,,2019-07-29 14:06:35,"",,0,1,0,2019-07-29 14:06:35
57295523,1,57297441,,2,1534,"<p>Im trying to add a graphql server to nestjs based on documentation, but im getting this error:</p>&#xA;&#xA;<pre><code>Nest can't resolve dependencies of the GraphQLModule (HttpAdapterHost, GqlModuleOptions, GraphQLFactory, GraphQLTypesLoader, ?). Please make sure that the argument at index [4] is available in the GraphQLModule context. +19ms&#xA;</code></pre>&#xA;&#xA;<p>Error: Nest can't resolve dependencies of the GraphQLModule (HttpAdapterHost, GqlModuleOptions, GraphQLFactory, GraphQLTypesLoader, ?). Please make sure that the argument at index [4] is available in the GraphQLModule context.</p>&#xA;",8727275,,,,2022-02-07 16:04:21,Nest can't resolve dependencies of the GraphQLModule,<graphql><nestjs>,2,4,0,2019-07-31 16:43:28
57297459,1,,,1,681,"<p>Probably a absolute beginner question:</p>&#xA;&#xA;<pre><code>import gql from ""graphql-tag"";&#xA;import { graphql } from ""react-apollo"";&#xA;&#xA;export const productQuery = gql`&#xA;    query Product($id: Float!){&#xA;        getProduct(id:$id){&#xA;            name,&#xA;            description,&#xA;            variants{price}&#xA;        }&#xA;    }&#xA;`;&#xA;&#xA;export default graphql(productQuery, {&#xA;  options: props =&gt; ({ variables: { ""id"": 1 } })&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I get this error message back in my developer console:</p>&#xA;&#xA;<pre><code>""GraphQL error: Variable '$id' cannot be non input type 'Float!'. (line 1, column 20):&#xA;query Product($id: Float!) {&#xA;                   ^&#xA;GraphQL error: Unknown type 'Float'. (line 1, column 20):&#xA;query Product($id: Float!) {&#xA;                   ^&#xA;GraphQL error: Cannot query field 'getProduct' on type 'Query'. (line 2, column 3):&#xA;  getProduct(id: $id) {&#xA;  ^""&#xA;</code></pre>&#xA;&#xA;<p>I have no problem with this query, if I send it with the graphQLi tool. &#xA;What could be wrong?</p>&#xA;",403085,,,,2019-07-31 19:10:14,GraphQL - Variable id cannot be non input type Float,<graphql><react-apollo><apollo-client><graphql-js>,0,3,0,2019-07-31 19:10:14
57307044,2,,57303030,0,,"<h2>You do not need to escape special characters inside a JSON request.</h2>&#xA;&#xA;<p>The <a href=""https://www.w3schools.com/js/js_json_syntax.asp"" rel=""nofollow noreferrer"">syntax</a> implies using key-value pairs assigned to each other with a colon, whereby strings are located inside quotes (not escaped with a backslash!), while numbers and variable names are not. </p>&#xA;&#xA;<p>The brackets should be used in function of your desired API request as <a href=""https://graphql.org/learn/queries/#mutations"" rel=""nofollow noreferrer"">documented</a>.</p>&#xA;",11599789,,,,2019-08-01 10:32:47,"",,0,0,0,2019-08-01 10:32:47
57333158,1,,,-1,55,"<p>I’m new to web development and I’m trying to make a portfolio website for myself. At the moment I’m trying to stay as vanilla as possible. On my homepage I want to grab information from the repository that I last committed to, title, description, commit history, etc. So that anyone who visits my site can see my latest project.</p>&#xA;&#xA;<p>I’ve learned that you can use graphql to interact with the github API to grab this information, and that you can use a simple HTTP request in JavaScript using the fetch function to send a query. My confusion comes in when you start involving authentication tokens and once I have one how to keep it private instead of hard coding it into my website code. </p>&#xA;&#xA;<p>If anyone can explain, it’d be much appreciated </p>&#xA;",5158001,,,,2019-08-09 12:06:23,Using Graphql and Github API to get repository information,<javascript><html><github><graphql><graphql-js>,1,0,0,2019-08-02 20:38:42
57334050,2,,57231442,1,,"<p>I realised I forgot to answer the first part of your question about generating stuff at runtime. This isn't possible as there is no representation of the TypeScript type system in the JavaScript code. A workaround for this is to create a dummy object (using the mapped type technique below) which forces you to add keys for all the union values in order for it to compile. You then just do <code>Object.keys()</code> passing that dummy object in order to get the array of game status string values.</p>&#xA;&#xA;<p>As for the second part of the question about more succinct type checking...</p>&#xA;&#xA;<p>You can use a <a href=""https://www.typescriptlang.org/docs/handbook/advanced-types.html#mapped-types"" rel=""nofollow noreferrer"">mapped type</a> for this...</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>type StrategyMap&lt;T&gt; = { [K in GameStatus]: T };&#xA;</code></pre>&#xA;&#xA;<p>Which you can then use like this...</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const title: StrategyMap&lt;string&gt; = {&#xA;    GameLobby: ""You're in the lobby"",&#xA;    GameOverTie: ""It was a tie"",&#xA;    GameOverWin: ""Congratulations"",&#xA;    GamePlaying: ""Game on!""&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>or this...</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const didYouWin = false;&#xA;const nextStatusDecision: StrategyMap&lt;() =&gt; GameStatus&gt; = {&#xA;    GameLobby: () =&gt; ""GamePlaying"",&#xA;    GameOverTie: () =&gt; ""GameLobby"",&#xA;    GameOverWin: () =&gt; ""GameLobby"",&#xA;    GamePlaying: () =&gt; didYouWin ? ""GameOverWin"" : ""GameOverTie""&#xA;};&#xA;&#xA;const currentStatus: GameStatus = ""GamePlaying"";&#xA;const nextStatus = nextStatusDecision[currentStatus]();&#xA;</code></pre>&#xA;&#xA;<p>If you forget a status you'll get a warning, e.g.</p>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/M6Rx7.png"" alt=""Property &#39;GamePlaying&#39; is missing in type &#39;{ GameLobby: string; GameOverTie: string; GameOverWin: string; }&#39; but required in type &#39;StrategyMap&lt;string&gt;&#39;.""></p>&#xA;&#xA;<p>TypeScript playground example <a href=""http://www.typescriptlang.org/play/#code/C4TwDgpgBAygxgQwDYIE4GcoF4oG8BQURUAkgCIBcU6wqAlgHYDm+AvvvhAB5gD2qwKKEhQA4ggC20HOKkAZXgCNFIKAB8xkiAAUUIRk3WapAeQBuEVAHVGR2RHOWAKnQgBuDtz4Ch4aPYVlVRwCIgB9MOEIBi0AfioAIgClFQSPIlQIBAATXgYkVTpsqnhkNHQAbQTyBIBdD1YPTh5+QSjjBwtUF2k8QigIqJipeKgkrUdu1zT+zJy8gqgiksQUDCqa+rYmr1bfEXtJmwZsPvDIv2GIUfHTLuOZjKzc-MLi2FXyjbI69Kg5l6LADujAYlhKtAMDR2LR87XsugQ+mYp1CAwukCuNwRegMj3+zwWqjAeksAEYIfRmH8AUSoCSkZYAEyUqHbDjwrQwYAIYAAV0wOAAolw4Eg+dkIAAeexVQaXLR1AA0UD5DElADNGBBsgA+JrtbmoXkQJggACyCDAUqcutRUAqAGklid7NzeQLalQnFBGhw4HkaEI6MAkBBKSazZbrTQqUw7SF+kRkkFEgBNXh8gDkmRdQgAFtAkCkQAklUmOpMeokSIIgQhMAhgxAyxXDvdGIkAMJ5JjG-koYB0QOt4gdRHIpiJexQPIAQgS7PwAYYQeyRQzfOOpw1yHQ7mXgcEYK4wHd-PQZAgcDo6GHDAjwFNFqtUoAFABKbB2t08i8Js5iBTFQqE-b8xhxJE8XLMd22cVxQK-LA7VuCBAlSGCgImDsHygMDkIgrR0NLTDky0CcDEQ8D12yTdt1iQi7ksB4oGnbD4JbJcVyDOA+VQTIGDPP8BSoX8PUFRidFxZgZm449uCE8TThPRSLyvG87zyCpeP46JVM9T8mg4IA"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;",160419,,160419,2019-08-03 09:54:36,2019-08-03 09:54:36,"",,0,1,0,2019-08-02 22:23:45
57360574,2,,57360405,-1,,"<p>Since the gql function expects a template literal, you should escape the product object like so:</p>&#xA;&#xA;<pre><code>const USERS = gql`&#xA;&#xA;  query USERS(&#xA;    $userId: ID,&#xA;    $hasProducts: [${ProductName}]&#xA;  ) {&#xA;    users(&#xA;      where: {&#xA;        id_not: $userId&#xA;        hasProducts_some: {&#xA;          OR: $hasProducts&#xA;        }&#xA;      }&#xA;    ) {&#xA;      firstName&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;",2296997,,2296997,2019-08-05 14:44:50,2019-08-05 14:44:50,"",,0,4,0,2019-08-05 14:22:10
57389185,1,,,1,38,"<p>Am trying to create a listing page and sort it with respect to date for all the type of product available on my site (simple, clothing) </p>&#xA;&#xA;<p>If I use the following query</p>&#xA;&#xA;<pre><code>{&#xA;&#xA;  allCommerceProductTypeCommerceProductType{&#xA;    nodes{&#xA;      relationships{&#xA;        commerce_product__clothing{&#xA;          title&#xA;        }&#xA;        commerce_product__simple{&#xA;          title&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>it will return all the content but it will be under different keys and will not able to achieve the sorting</p>&#xA;&#xA;<p>Expected output would be all the products getting listed under the same key</p>&#xA;",10561357,,,,2019-08-07 07:34:53,Listing data of multiple content type,<drupal><graphql><gatsby>,0,2,0,2019-08-07 07:34:53
57403994,2,,57401345,2,,"<p>In Contentful’s GraphQL API you can do searching within different fields with <a href=""https://www.contentful.com/developers/docs/references/graphql/#/reference/collection-filters"" rel=""nofollow noreferrer"">collection filters</a>. Equivalent to full-text searching <em>on a specific field</em> is the <strong><em>contains</em> filter</strong>.</p>&#xA;&#xA;<p>Searching from all of the collection’s text fields or from multiple collections’ fields (as in <a href=""https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/search-parameters/full-text-search"" rel=""nofollow noreferrer"">REST API's <code>&amp;query=...</code></a>) with one filter isn’t yet possible, at least not to my knowledge. You would have to use specific filters for multiple fields with <code>OR</code> groups for that.</p>&#xA;&#xA;<p>You didn’t give any example of your actual schema, so I’ll use Contentful’s <a href=""https://www.contentful.com/developers/docs/tutorials/general/graphql/#demo-content"" rel=""nofollow noreferrer"">GraphQL demo space</a> as an example.</p>&#xA;&#xA;<p>Example for querying specific fields: to get all lesson copies with a text ""data"" in their copy, from a collection called <code>LessonCopyCollection</code>, do a query like this:</p>&#xA;&#xA;<pre><code>{&#xA;  lessonCopyCollection(where: {copy_contains: ""data""}) {&#xA;    items {&#xA;      title&#xA;      copy&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can access the demo GraphiQL interface and test the query <a href=""https://graphql.contentful.com/content/v1/spaces/f8bqpb154z8p/explore?access_token=9d5de88248563ebc0d2ad688d0473f56fcd31c600e419d6c8962f6aed0150599"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;",2101072,,2101072,2019-08-08 01:32:17,2019-08-08 01:32:17,"",,0,0,0,2019-08-08 01:08:53
57405914,1,,,0,1939,"<p>I am trying to request shopify graphql-admin-api from my api. I am doing it according to the documentation given by graphql-admin-api, but it still gives me authorization errors.</p>&#xA;",9167246,,,,2021-05-26 05:39:24,How to request shopify graphql-admin-api from an api?,<graphql><shopify>,2,4,0,2019-08-08 05:51:54
57406237,2,,57369658,1,,"<p>Please use this package <a href=""https://pub.dev/packages/graphql_flutter"" rel=""nofollow noreferrer"">https://pub.dev/packages/graphql_flutter</a> <br></p>&#xA;&#xA;<p>and in example&#xA;<a href=""https://pub.dev/packages/graphql_flutter#queries"" rel=""nofollow noreferrer"">https://pub.dev/packages/graphql_flutter#queries</a></p>&#xA;&#xA;<pre><code>String readRepositories = """"""&#xA;  query ReadRepositories(\$nRepositories: Int!) {&#xA;    viewer {&#xA;      repositories(last: \$nRepositories) {&#xA;        nodes {&#xA;          id&#xA;          name&#xA;          viewerHasStarred&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;"""""";&#xA;&#xA;Query(&#xA;  options: QueryOptions(&#xA;    document: readRepositories, // this is the query string you just created&#xA;    variables: {&#xA;      'nRepositories': 50,&#xA;    },&#xA;    pollInterval: 10,&#xA;  ),&#xA;  // Just like in apollo refetch() could be used to manually trigger a refetch&#xA;  builder: (QueryResult result, { VoidCallback refetch }) {&#xA;    if (result.errors != null) {&#xA;      return Text(result.errors.toString());&#xA;    }&#xA;&#xA;    if (result.loading) {&#xA;      return Text('Loading');&#xA;    }&#xA;&#xA;    // it can be either Map or List&#xA;    List repositories = result.data['viewer']['repositories']['nodes'];&#xA;&#xA;    return ListView.builder(&#xA;      itemCount: repositories.length,&#xA;      itemBuilder: (context, index) {&#xA;        final repository = repositories[index];&#xA;&#xA;        return Text(repository['name']);&#xA;    });&#xA;  },&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>you can also test example directly&#xA;<a href=""https://github.com/zino-app/graphql-flutter/tree/master/examples/starwars"" rel=""nofollow noreferrer"">https://github.com/zino-app/graphql-flutter/tree/master/examples/starwars</a></p>&#xA;",2179571,,,,2019-08-08 06:16:52,"",,0,0,0,2019-08-08 06:16:52
57419292,2,,50940105,1,,"<p>To get the list of issues created by a specific author, you can query for objects of type <code>ISSUE</code>, adding the repository information and the author name in the query string:</p>&#xA;&#xA;<pre><code>query {&#xA;  search(&#xA;    type: ISSUE,&#xA;    query: """"""&#xA;      repo:octocat/Hello-World &#xA;      author:yosuke-furukawa&#xA;      state:closed&#xA;    """""",&#xA;    last: 20&#xA;  ) {&#xA;    edges {&#xA;      node {&#xA;        ... on Issue {&#xA;          id&#xA;          title&#xA;          bodyText&#xA;          author {&#xA;            login&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The full syntax for querying issues can be found here:&#xA;<a href=""https://help.github.com/en/articles/searching-issues-and-pull-requests"" rel=""nofollow noreferrer"">https://help.github.com/en/articles/searching-issues-and-pull-requests</a></p>&#xA;",2562544,,2562544,2019-08-08 19:34:12,2019-08-08 19:34:12,"",,0,0,0,2019-08-08 19:13:23
57420884,2,,49344444,9,,"<p>When querying for repositories, you can apply a filter only for a certain number of the fields in your list:</p>&#xA;&#xA;<ul>&#xA;<li>number of stars</li>&#xA;<li>number of forks</li>&#xA;<li>size</li>&#xA;<li>last update</li>&#xA;</ul>&#xA;&#xA;<p>Although you cannot specify them in the query filter, you can include other fields in your query and verify the values in the client application:</p>&#xA;&#xA;<ul>&#xA;<li>total number of issues</li>&#xA;<li>number of open issues</li>&#xA;</ul>&#xA;&#xA;<p>While, in theory, you can also query for the number of commits, applying your specific parameter arguments, that query returns a server error, it most probably times out. For that reason, those lines are commented out.</p>&#xA;&#xA;<p>Here's the GraphQL query: </p>&#xA;&#xA;<pre><code>query {&#xA;  search(&#xA;    type:REPOSITORY, &#xA;    query: """"""&#xA;      stars:&gt;10&#xA;      forks:&gt;3&#xA;      size:&gt;2000&#xA;      pushed:&gt;=2018-08-08&#xA;    """""",&#xA;    last: 100&#xA;  ) {&#xA;    repos: edges {&#xA;      repo: node {&#xA;        ... on Repository {&#xA;          url&#xA;&#xA;          allIssues: issues {&#xA;            totalCount&#xA;          }&#xA;          openIssues: issues(states:OPEN) {&#xA;            totalCount&#xA;          }&#xA;&#xA;          # commitsCount: object(expression: ""master"") {&#xA;          #   ... on Commit {&#xA;          #      history {&#xA;          #       totalCount&#xA;          #     }&#xA;          #   }&#xA;          # }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>The specification for repository queries can be found here: <a href=""https://help.github.com/en/articles/searching-for-repositories#search-by-repository-size"" rel=""noreferrer"">https://help.github.com/en/articles/searching-for-repositories#search-by-repository-size</a></p>&#xA;",2562544,,,,2019-08-08 21:32:23,"",,0,1,0,2019-08-08 21:32:23
57421953,2,,57420088,0,,"<p>Figured it out! The answer is this:</p>&#xA;&#xA;<pre><code>methods: {&#xA;        createCheckout() {&#xA;            this.$apollo.provider.clients.shopify&#xA;                .mutate({&#xA;                    mutation: this.checkoutQuery,&#xA;                    variables: {&#xA;                        variantId: this.selectedProduct.variantId,&#xA;                        quantity: this.selectedProduct.quantity&#xA;                    }&#xA;                })&#xA;        }&#xA;}}&#xA;</code></pre>&#xA;",503546,,,,2019-08-08 23:49:41,"",,0,0,0,2019-08-08 23:49:41
57446927,1,,,1,1949,"<p>We have a GraphQL mutation with a byte array (Blob) field. How can I use tools like Insomnia or GraphQL playground to send byte array data to test the API?</p>&#xA;&#xA;<pre><code>mutation {&#xA;  saveSomething(something: {&#xA;    contentByteArray: [97, 110, 103, 101, 108, 111]&#xA;  }) {&#xA;    content&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",772481,,772481,2019-08-11 03:06:16,2020-12-20 17:19:48,How to send byte array (Blob) to GraphQL mutation,<graphql><insomnia><graphql-mutation><graphql-playground>,1,0,0,2019-08-11 02:16:22
57449458,2,,52457345,0,,"<p>There is no need for some more dependency for merging the types, as <strong><em>graphql-tools</em></strong> are fine for them.&#xA;Have a look <a href=""https://github.com/techyaura/graphqlNodeMongodb-server/tree/master/src/gql"" rel=""nofollow noreferrer"">https://github.com/techyaura/graphqlNodeMongodb-server/tree/master/src/gql</a>, if it helps.</p>&#xA;&#xA;<p>I have two files <code>todo.types.js</code> &amp; <code>user.type.js</code> in the repo <a href=""https://github.com/techyaura/graphqlNodeMongodb-server/tree/master/src/gql/types"" rel=""nofollow noreferrer"">https://github.com/techyaura/graphqlNodeMongodb-server/tree/master/src/gql/types</a> &amp; I am simply concatenating them &amp; that's working fine.</p>&#xA;&#xA;<p>NOTE: I am not using <strong><em>APOLLO GRAPHQL</em></strong>, instead using <code>express-graphql</code> simply</p>&#xA;",2196513,,,,2019-08-11 11:08:58,"",,0,0,0,2019-08-11 11:08:58
57450643,1,,,0,154,"<p>I’m using a prisma server and graphql-yoga (graphql server on top of node.js) and I’m working for the first time with a type that has an other type as property. It’s one way so no relation I believe. In my case, a <code>Product</code> can be in a <code>FavoriteList</code> (so belong?) but a <code>FavoriteList</code> doesn’t have a relation the other way around.</p>&#xA;&#xA;<pre><code>type Product {&#xA;  id: ID!&#xA;  name: String!&#xA;  releaseDate: DateTime!&#xA;  brand: Brand!&#xA;  createdAt: DateTime!&#xA;  image: Image!&#xA;  barcode: String&#xA;}&#xA;&#xA;type FavoriteList {&#xA;  id: ID!&#xA;  products: [Product]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>On my prisma admin I can add a record to <code>FavoriteList</code> with connecting <code>[Product]</code> and in the playground I can query for that by using the <code>FavoriteLists</code> query. But when I create a query (and resolver) for my graphql-yoga server, products are resolving as null. The query I’m using:</p>&#xA;&#xA;<pre><code># prisma server &amp; graphql server&#xA;query favoriteList {&#xA;  favoriteLists {&#xA;    id&#xA;    products {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;My setup for the graphql-server&#xA;&#xA;</code></pre>&#xA;&#xA;<pre><code>type Query {&#xA;  // ... other queries&#xA;  favoriteLists: [FavoriteList]&#xA;}&#xA;&#xA;// resovler in Query.js&#xA;async favoriteLists(root, args, context, info) {&#xA;  return context.prisma.favoriteLists({}, info)&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>So having the same query, I am wondering if I have to do something else in my graphql-server? From what I can see the <code>Product</code> is not resolving on the <code>FavoriteList</code> type. Thanks in advance.</p>&#xA;",5503094,,,,2019-08-13 00:23:05,Type as property resolves as null with graphql-yoga and prisma,<node.js><graphql><prisma><prisma-graphql>,1,0,0,2019-08-11 14:06:51
57451102,1,,,3,1191,"<p>I am trying to fetch all my repositories that contain topic ""portfolio"" using Github GraphQL API.</p>&#xA;&#xA;<p>For now, I found only how to fetch <strong>all repos on github with a specific topic</strong>, like so :</p>&#xA;&#xA;<pre><code>{&#xA;  search(type: REPOSITORY, query: ""topic: portfolio"", last: 50) {&#xA;    repos: edges {&#xA;      repo: node {&#xA;        ... on Repository {&#xA;          url&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And I know how to fetch <strong>all repos for a specific user</strong>, like so:</p>&#xA;&#xA;<pre><code>{&#xA;  user(login: ""VitFL"") {&#xA;    repositories(last: 50) {&#xA;      repos: nodes {&#xA;        url&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>But I have no idea how to combine those queries, so I could receive <strong>all repos with topic ""portfolio"" for a specific user</strong>.</p>&#xA;&#xA;<p>Does anyone know how to achieve this result?</p>&#xA;",7258823,,7258823,2019-08-11 16:09:13,2020-06-05 11:31:31,"How to fetch all repositories with specific topic, using GitHub GraphQL API?",<api><github><graphql><github-api><github-graphql>,1,0,0,2019-08-11 15:02:15
57460636,1,,,0,382,"<p>I've just started developing a graphQL API using graphql-dotnet.&#xA;I've searched through the documentation but I couldn't find anything on what to do if a record is not found for given arguments. The reference implementations I checked (github, starwars graphql implementations etc) return null, and some of them include an errors field with some additional detail.</p>&#xA;&#xA;<p>What I'm wondering is, are there any established best practices for this and how to handle it in an elegant way with graphql-dotnet.</p>&#xA;&#xA;<p>Thank you.</p>&#xA;",4795282,,,,2019-08-12 14:29:39,What to do when a record is not found for given arguments,<graphql><graphql-dotnet>,1,0,0,2019-08-12 11:48:58
57462534,2,,57462073,2,,"<p>It depends on if an item can possibly has many properties that has a chance to cause the server to run out of memory if multiple users retrieves an item 's all properties at the same time. If the chance is very very very small , it is very normal to just returning all properties if user left out the properties field 's argument. </p>&#xA;&#xA;<p>Otherwise , it is not so good to always returning all properties due to the chance to bring down the server because of running out of memory. In this case, you can apply some sensible default to return only the first N-th properties to prevent it from happening. </p>&#xA;&#xA;<p>It is equivalent to the REST API that returning a list of records. If an user does not specify the query parameter for pagination , it will by default return a sensible number of records but not returning all records.</p>&#xA;",339637,,339637,2019-08-12 14:22:34,2019-08-12 14:22:34,"",,0,1,0,2019-08-12 13:52:29
57471468,2,,57468655,0,,<p>If you know which product the search will be happening then you can have a separate collection of each product. You can index index the attributes/metadata of product along with the user access rules.</p>&#xA;&#xA;<p>If you are not getting the information that which product will be searched upon then you can try to index the product data along with the user access rules.</p>&#xA;&#xA;<p>Here you can use index all the data in single collection and use the sharding and replication feature of solr cloud so the data is distributed and would help you to achieve scalability along with high availability.</p>&#xA;,3636071,,,,2019-08-13 05:14:21,"",,0,1,0,2019-08-13 05:14:21
57472430,1,57599215,,3,200,"<p>I am trying to programmatically download a zip file of a repository which is already checked out to a specific branch. &#xA;For that I need to obtain the zipballUrl of the head of the branch I specify through <a href=""https://developer.github.com/v4/"" rel=""nofollow noreferrer"">github graphQL API</a>.</p>&#xA;&#xA;<p><a href=""https://stackoverflow.com/a/47478877/3236818"">This answer</a> specifies how to get the zipballUrl of the default branch but I could not alter it to my requirement. Appreciate if someone can help out.</p>&#xA;&#xA;<p>PS: Running a git clone command and checking out to branch is not an option because the programming language I use (ballerina) does not support shell commands yet.</p>&#xA;",3236818,,3236818,2019-08-13 11:03:24,2019-08-21 21:11:09,How to get the zipballUrl of a branch using github graphQL API?,<github><github-graphql><github-api-v4>,1,0,0,2019-08-13 06:44:48
57484012,2,,57482983,1,,"<p><code>result.data.project</code> is an Array. If you want to get the property of one of the arrays items, you need to do something like:</p>&#xA;&#xA;<pre><code>result.data.project[0].Checklists&#xA;</code></pre>&#xA;",6024220,,,,2019-08-13 19:11:42,"",,0,1,0,2019-08-13 19:11:42
57502087,1,,,1,552,"<p>I'm using the <code>graphql-client</code> gem and <code>shopify_app</code> gem, making a query successfully like this:</p>&#xA;&#xA;<pre><code>shop.with_shopify_session do&#xA;  query = &lt;&lt;-GRAPHQL&#xA;    {&#xA;      shop {&#xA;        name&#xA;      }&#xA;    }&#xA;  GRAPHQL&#xA;&#xA;  client = ShopifyAPI::GraphQL.new&#xA;&#xA;  Kernel.const_set(:NameQuery, client.parse(query))&#xA;  result = client.query(NameQuery)&#xA;&#xA;  puts ""Shop name: #{result.data.shop.name}""&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>*The reason for <code>Kernel.const_set</code> is because a constant is required to make this work.</p>&#xA;&#xA;<p>The problem: Each time this executes it adds about 100MB of ram usage on server (according to Heroku metrics).</p>&#xA;&#xA;<p>Do you know how to execute a graphql query with Shopify in Rails without the excessive memory leak?</p>&#xA;",1689886,,,,2021-10-14 11:49:22,How to make a Shopify GraphQL query in Rails without memory issue,<ruby-on-rails><graphql><shopify><shopify-app>,1,2,0,2019-08-14 21:08:27
57516679,1,,,2,1585,"<p>I want to create two entities that are related. How can I create the first entity with the required sub-entity.</p>&#xA;&#xA;<p>I've tried the following code but graphql returns the following error:</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Variable \""$stock\"" of type \""createProductInput!\"" used in position expecting type \""String\""."",&#xA;      ""extensions"": {&#xA;        ""category"": ""graphql""&#xA;      },&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 7,&#xA;          ""column"": 3&#xA;        },&#xA;        {&#xA;          ""line"": 15,&#xA;          ""column"": 17&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The mutation:</p>&#xA;&#xA;<pre><code>mutation createProduct ($input: createProductInput!) {&#xA;  createProduct(input: $input) {&#xA;    clientMutationId&#xA;&#xA;    product {&#xA;      uuid&#xA;      name&#xA;      sku&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>the variables:</p>&#xA;&#xA;<pre><code>{&#xA;  ""input"": {&#xA;    ""name"": ""ProductAAA"",&#xA;    ""sku"": ""product_aaa"",&#xA;    ""stock"": {&#xA;      ""quantity"": 33,&#xA;      ""unit"": ""s""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Oddly the createProductInput says that stock is a string instead of an object.</p>&#xA;&#xA;<pre><code>uuid: String!&#xA;name: String!&#xA;sku: String!&#xA;stock: String&#xA;clientMutationId: String&#xA;</code></pre>&#xA;&#xA;<p>These are my entities:</p>&#xA;&#xA;<pre class=""lang-php prettyprint-override""><code>// Product.php&#xA;&#xA;use ApiPlatform\Core\Annotation\ApiFilter;&#xA;use ApiPlatform\Core\Annotation\ApiProperty;&#xA;use ApiPlatform\Core\Annotation\ApiResource;&#xA;use ApiPlatform\Core\Annotation\ApiSubresource;&#xA;use Doctrine\ORM\Mapping as ORM;&#xA;&#xA;/**&#xA; * @ApiResource&#xA; * @ApiFilter(ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter::class, properties={""name"": ""partial"", ""sku"": ""partial""})&#xA; *&#xA; * @ORM\Table(name=""products"")&#xA; */&#xA;class Product&#xA;{&#xA;    /**&#xA;     * @ORM\Id&#xA;     * @ORM\Column(name=""product_id"", type=""uuid"", unique=true)&#xA;     * @ORM\GeneratedValue(strategy=""CUSTOM"")&#xA;     * @ORM\CustomIdGenerator(class=""Ramsey\Uuid\Doctrine\UuidGenerator"")&#xA;     *&#xA;     * @ApiProperty(identifier=true)&#xA;     */&#xA;    private $id;&#xA;&#xA;    /**&#xA;     * @ORM\Column(type=""string"")&#xA;     */&#xA;    private $name;&#xA;&#xA;    /**&#xA;     * @ORM\Column(type=""string"")&#xA;     */&#xA;    private $sku;&#xA;&#xA;    /**&#xA;     * @ORM\ManyToOne(targetEntity=""Stock"", cascade={""PERSIST""})&#xA;     * @ORM\JoinColumn(name=""stock_id"", referencedColumnName=""stock_id"")&#xA;     *&#xA;     * @ApiSubresource&#xA;     */&#xA;    private $stock;&#xA;}&#xA;</code></pre>&#xA;&#xA;<pre class=""lang-php prettyprint-override""><code>// Stock.php&#xA;&#xA;use ApiPlatform\Core\Annotation\ApiProperty;&#xA;use ApiPlatform\Core\Annotation\ApiResource;&#xA;use Doctrine\ORM\Mapping as ORM;&#xA;&#xA;/**&#xA; * @ApiResource&#xA; *&#xA; * @ORM\Table(name=""stocks"")&#xA; */&#xA;class Stock&#xA;{&#xA;    /**&#xA;     * @ORM\Id&#xA;     * @ORM\Column(name=""stock_id"", type=""uuid"", unique=true)&#xA;     * @ORM\GeneratedValue(strategy=""CUSTOM"")&#xA;     * @ORM\CustomIdGenerator(class=""Ramsey\Uuid\Doctrine\UuidGenerator"")&#xA;     *&#xA;     * @ApiProperty(identifier=true)&#xA;     */&#xA;    private $id;&#xA;&#xA;    /**&#xA;     * @ORM\Column(type=""string"")&#xA;     */&#xA;    private $quantity;&#xA;&#xA;    /**&#xA;     * @ORM\Column(type=""string"")&#xA;     */&#xA;    private $unit;&#xA;}&#xA;</code></pre>&#xA;",2535171,,2535171,2019-08-16 10:13:36,2020-04-18 03:25:31,How to create/mutation entity with sub relation on apiplatform/graphql,<php><symfony><doctrine><graphql><api-platform.com>,2,0,0,2019-08-15 21:53:43
57527281,1,,,1,387,"<p>I'm using crypto-js to hash data and send it by apollo-angular to express-graphql. </p>&#xA;&#xA;<p>I tried to send it as string using method toString() which fails 90 out of 100 even with async,await returning empty string. Then split object into two variables one as array of int, second as int. Without success as it still show same error even when type of accepted query is Int. Also tried make it array of strings even tho typeof is string , graphql recognize it as int.</p>&#xA;&#xA;<p>Apollo mutation:</p>&#xA;&#xA;<pre><code>return this.apollo.mutate&lt;Query&gt;({&#xA;      errorPolicy: 'all',&#xA;      mutation: gql`&#xA;       mutation Mutation{&#xA;       signUp(words:${words},sigBytes:${sigBytes})&#xA; }`&#xA;    });&#xA;</code></pre>&#xA;&#xA;<p>Schema type for arrays:</p>&#xA;&#xA;<pre><code> type Crypto{&#xA;    words: Int!&#xA;    }&#xA;type Mutation {&#xA; signUp(words: [Crypto] ,sigBytes: Int!): Int,&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Schema type for all words as string:</p>&#xA;&#xA;<pre><code>signUp(words: String! ,sigBytes: Int!): String,&#xA;</code></pre>&#xA;&#xA;<p>Expected output is to send whole data to express to decrypt it back.</p>&#xA;&#xA;<p>There is only this error:</p>&#xA;&#xA;<pre><code>GraphQLError {message: ""Syntax Error: Expected Name, found Int ""-379818220"""",&#xA;</code></pre>&#xA;",9866104,,,,2021-07-28 09:39:03,"GraphQLError {message: ""Syntax Error: Expected Name, found Int ""30807695"""",",<apollo><express-graphql>,0,0,0,2019-08-16 15:26:01
57534888,2,,56111086,2,,"<p>I think it was a pernicious bug which has been resolved in the master and 2.4 branches (no release yet).&#xA;See <a href=""https://github.com/api-platform/core/pull/2970"" rel=""nofollow noreferrer"">https://github.com/api-platform/core/pull/2970</a> for details.</p>&#xA;",5049897,,,,2019-08-17 09:08:48,"",,0,0,0,2019-08-17 09:08:48
57541906,1,,,1,145,<p>I have a really weird error when using inline fragments with Apollo.&#xA;I have a query that looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;  allDocuments {&#xA;    content {&#xA;      ...on StageRecord {&#xA;        externalLink&#xA;        internalLink {&#xA;          slug&#xA;          collection {&#xA;            slug&#xA;          }&#xA;        }&#xA;      }&#xA;      ...on FigureRecord {&#xA;        externalLink&#xA;        internalLink {&#xA;          slug&#xA;          collection {&#xA;            slug&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If I run this on <em>GraphiQL</em> it works like expected. If I run this in my Nuxt app using Apollo I get this error:</p>&#xA;&#xA;<pre><code>GraphQL error: Field 'externalLink' doesn't exist on type 'FigureRecord'                                                                                     12:19:13&#xA;GraphQL error: Field 'internalLink' doesn't exist on type 'FigureRecord'&#xA;</code></pre>&#xA;&#xA;<p>If I remove this from <code>StageRecord</code> or from <code>FigureRecord</code> it works:</p>&#xA;&#xA;<pre><code>collection {&#xA;  slug&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So as long as only one of those fragments queries the collection as well it's no problem. What can I do about that? And why is this no problem in GraphiQL?</p>&#xA;&#xA;<p>The fields <code>externalLink</code> and <code>internalLink</code> were the ones I added last and I wonder why it's complaining about <code>externalLink</code> being not existent when I add <code>collection</code> to <code>internalLink</code>.</p>&#xA;&#xA;<p>Any ideas?</p>&#xA;,10463207,,,,2019-08-18 05:30:41,Apollo GraphQL inline fragments error with same fields,<javascript><vue.js><graphql><nuxt.js><apollo>,0,1,0,2019-08-18 05:30:41
57583404,2,,56475075,0,,<p>I turned out that file exported from rails were not in format of GraphQL.&#xA;They were plain text describing what queries and mutations were implemented on server with human human readable style.</p>&#xA;,11467744,,,,2019-08-21 01:43:58,"",,0,0,0,2019-08-21 01:43:58
57599215,2,,57472430,2,,"<p>You can use the reference field of the repository object.</p>&#xA;&#xA;<p>For example, considering the same google gson project</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""google"", name: ""gson"") {&#xA;&#xA;    ref(qualifiedName: ""722""){&#xA;      target {&#xA;        ... on Commit {&#xA;          tarballUrl&#xA;          zipballUrl&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In this query ref(qualifiedName) will basically look for the reference or branch name with the specified value and return the tar content of the branch.</p>&#xA;&#xA;<p>Response</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""ref"": {&#xA;        ""target"": {&#xA;          ""tarballUrl"": ""https://codeload.github.com/google/gson/legacy.tar.gz/2725be440147a71030ece93683b4424e849c59ed"",&#xA;          ""zipballUrl"": ""https://codeload.github.com/google/gson/legacy.zip/2725be440147a71030ece93683b4424e849c59ed""&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>you can verify the sha of the branch reference ""722""&#xA;<a href=""https://github.com/google/gson/commit/2725be440147a71030ece93683b4424e849c59ed"" rel=""nofollow noreferrer"">https://github.com/google/gson/commit/2725be440147a71030ece93683b4424e849c59ed</a></p>&#xA;",358435,,,,2019-08-21 21:11:09,"",,0,1,0,2019-08-21 21:11:09
57611092,1,57612127,,2,214,"<p>I've been following a tutorial series and I'm trying to extrapolate on what I've done thus far. </p>&#xA;&#xA;<p>I have queried contentful to return the product details for which one of the data types is an array of productFeatures. I've tried to map this to a list and was expecting this to iterate out several li's. However, I've ended up with one li that contains all of the entries. Can anyone help me understand what I've misunderstood here?</p>&#xA;&#xA;<p>This is my attempt in the product features component</p>&#xA;&#xA;<pre><code>import React from 'react'&#xA;import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';&#xA;import './spec.css'&#xA;&#xA;const Spec = ({data}) =&gt;(&#xA;&#xA;    &lt;div&gt;&#xA;        &lt;Tabs&gt;&#xA;            &lt;TabList&gt;&#xA;            &lt;Tab&gt;Key Features&lt;/Tab&gt;&#xA;            &lt;Tab&gt;Product Documents&lt;/Tab&gt;&#xA;            &lt;/TabList&gt;&#xA;&#xA;            &lt;TabPanel&gt;&#xA;                &lt;ul className=""spec_list""&gt;&#xA;                    {data.allContentfulProductPage.edges.map(edge =&gt;(&#xA;                        &lt;li className=""spec_list__item""&gt;{edge.node.productFeatures}&lt;/li&gt;&#xA;                    ))}&#xA;&#xA;                &lt;/ul&gt;&#xA;            &lt;/TabPanel&gt;&#xA;            &lt;TabPanel&gt;&#xA;            &lt;h2&gt;Any content 2&lt;/h2&gt;&#xA;            &lt;/TabPanel&gt;&#xA;        &lt;/Tabs&gt;&#xA;    &lt;/div&gt;&#xA;)&#xA;&#xA;export default Spec&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>Here is the graphql query return</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""allContentfulProductPage"": {&#xA;      ""edges"": [&#xA;        {&#xA;          ""node"": {&#xA;            ""productTitle"": ""HD Pro Projector M220"",&#xA;            ""productPrice"": 299,&#xA;            ""productDescription"": {&#xA;              ""productDescription"": ""Designed for use with iPhone*, iPad*, MacBook, and Apple TV, the Miroir HD Projector M220 delivers HD-quality projection for streaming, entertainment, or presentation purposes. Even better, it's small enough to fit in your briefcase or bag. The projector uses a long-lasting LED light source and is built with Texas Instrument's DLP technology, which provides a cinema-quality movie experience.\n""&#xA;            },&#xA;            ""productFeatures"": [&#xA;              ""Texas Instruments DLP Technology"",&#xA;              ""1280 x 720 (720p) native resolution"",&#xA;              ""1080p maximum input resolution"",&#xA;              ""Auto focus with vertical keystone"",&#xA;              ""HDMI input"",&#xA;              ""Viewable screen size from 20 to 100 inches"",&#xA;              ""Built-in lithium-ion battery"",&#xA;              ""Two hours of projecting time"",&#xA;              ""Two built-in 2-watt speakers; audio out jack (3.5mm)""&#xA;            ],&#xA;            ""productImage"": [&#xA;              {&#xA;                ""file"": {&#xA;                  ""url"": ""//images.ctfassets.net/2nhrtgh52wv0/7u8biIRohlsl0OFKBWZ0ti/1dabcec4edd13dee708107929ec8e505/product-shot.jpg""&#xA;                }&#xA;              },&#xA;              {&#xA;                ""file"": {&#xA;                  ""url"": ""//images.ctfassets.net/2nhrtgh52wv0/7u8biIRohlsl0OFKBWZ0ti/1dabcec4edd13dee708107929ec8e505/product-shot.jpg""&#xA;                }&#xA;              }&#xA;            ],&#xA;            ""productSceneImage"": {&#xA;              ""file"": {&#xA;                ""url"": ""//images.ctfassets.net/2nhrtgh52wv0/6AzIFw9pZDsRtH1JI3A9XR/80ca785ffc60310690e337f7f936a74f/front-room-scene.jpg""&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the graphql query return</p>&#xA;&#xA;<pre><code>export const query = graphql`&#xA;  query ProductQuery {&#xA;    allContentfulProductPage{&#xA;      edges{&#xA;        node{&#xA;          productTitle&#xA;          productPrice&#xA;          productFeatures&#xA;          productDescription {&#xA;            productDescription&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;",2316062,,2316062,2019-08-22 15:41:08,2019-08-22 15:49:03,Mapping data from contentful,<reactjs><graphql><gatsby><contentful>,3,0,0,2019-08-22 13:59:14
57630580,1,58752657,,4,642,"<p>I am trying to use graphQL to query repositories and their content, but can't figure out how to build a desired query in LinQ. Is there any way I could execute raw GraphQL query avoiding the LinQ syntax?</p>&#xA;&#xA;<p>My functional <strong>GraphQL</strong> query looks like this: </p>&#xA;&#xA;<pre><code>{&#xA;  repositoryOwner(login: ""userLogin"") {&#xA;    repositories(first: 99) {&#xA;      nodes {&#xA;        name&#xA;        rootFolder: object(expression: ""master:"") {&#xA;          id&#xA;          ... on Tree {&#xA;            entries {&#xA;              name&#xA;              object {&#xA;                ... on Blob {&#xA;                  byteSize&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Using the <strong>LinQ</strong> syntax I got to this point:</p>&#xA;&#xA;<pre><code>var query = new Query()&#xA;   .RepositoryOwner(""userLogin"")&#xA;   .Repositories(first: 99)&#xA;   .Nodes.Select(repo =&gt; new&#xA;   {&#xA;       repo.Name&#xA;   }).Compile();&#xA;&#xA;var result = await connection.Run(query);&#xA;</code></pre>&#xA;&#xA;<p>And I can't find a way to implement those ... on Blob selectors</p>&#xA;&#xA;<p>EDIT:</p>&#xA;&#xA;<p>The answer from <strong>Cyril Durand</strong> works, but unfortunately doesn't use the Octokit.net client, therefore you can't parse the result to classes included in mentioned library. What you can do, is to create custom classes to exactly fit the json result. </p>&#xA;&#xA;<p>First you query the data.</p>&#xA;&#xA;<pre><code>var result = await Connection.PostQueryAsync(@""{&#xA;    user(login: """""" + userName + @"""""") {&#xA;      login&#xA;      avatarUrl&#xA;    } &#xA;  }"");&#xA;</code></pre>&#xA;&#xA;<p>Then make it a JSON string. (requires <strong>Newtonsoft.Json</strong> library)</p>&#xA;&#xA;<pre><code>string JsonString = result.Data.user.ToString(Formatting.None);&#xA;</code></pre>&#xA;&#xA;<p>and you use <a href=""http://json2csharp.com/"" rel=""nofollow noreferrer"">json2csharp</a> converter which creates the exact class with attributes from your JSON string.</p>&#xA;&#xA;<p>For this query the generated class looks like this</p>&#xA;&#xA;<pre><code>class User&#xA;{&#xA;    public string login { get; set; }&#xA;    public string avatarUrl { get; set; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And now you can work with your data. </p>&#xA;&#xA;<p>This approach is not the best, but solved majority of my problems with the querying, therefore I mark it as the right answer. If you have an idea for a better solution (perhaps one where you can actually use the octokit library), feel free to answer :)</p>&#xA;",11968666,,11968666,2019-11-20 12:52:52,2019-11-20 12:52:52,Can you use raw graphQL syntax to query github API v4 in c# using octokit.net library?,<c#><graphql><octokit.net><github-api-v4>,1,2,0,2019-08-23 17:15:01
57637528,2,,51029255,1,,"<p>you should choose type of the input as ""text"" instead of number, so you can create a specific format for your input. first, add a property to your state</p>&#xA;&#xA;<pre><code>state={amount:""""}&#xA;</code></pre>&#xA;&#xA;<p>input section for amount in your form should be like this:</p>&#xA;&#xA;<pre><code>&lt;input&#xA;            type=""text""&#xA;            placeholder=""Amount""&#xA;            value={this.state.amount}&#xA;            onChange={this.onAmountChange}&#xA;          /&gt;&#xA;&#xA;&#xA;&#xA;onAmountChange = e =&gt; {&#xA;    const amount = e.target.value;&#xA;    if (!amount || amount.match(/^-?[0-9]\d*(\.\d{0,2})?$/)) {&#xA;      this.setState(() =&gt; ({ amount }));&#xA;    }&#xA;  };&#xA;</code></pre>&#xA;&#xA;<p>regexp in above function means start with any number with optional -, and optionally u can end with 2 decimal number. you can change it for your form. </p>&#xA;&#xA;<p>if you want to add only positive numbers if your form is for price you can use this regexp:</p>&#xA;&#xA;<pre><code>amount.match(/^\d{1,}(\.\d{0,2})?$/)&#xA;</code></pre>&#xA;",10262805,,,,2019-08-24 11:27:56,"",,0,0,0,2019-08-24 11:27:56
57638700,1,57639934,,0,176,"<p>For example I have this type <code>Product</code></p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>type Product {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;&#xA;type Query {&#xA;  products(ids: [ID!]!): [Product!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I need to have a field <code>quality: Int!</code> but the value of this field depends on the other products from the array. So in queries</p>&#xA;&#xA;<p><code>products(ids: [1,2])</code> </p>&#xA;&#xA;<p>and </p>&#xA;&#xA;<p><code>products(ids: [2,3])</code></p>&#xA;&#xA;<p>product 2 would have the different <code>quality</code> values.</p>&#xA;&#xA;<p>Should I just add it to the type Product?</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>type Product {&#xA;  id: ID!&#xA;  name: String!&#xA;  quality: Int!&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>It feels weird and it could conflict with some cliend caching because <code>quality</code> isn't an attribute of one product but a group of products.&#xA;What is the idiomatic way to solve this problem?</p>&#xA;",2260919,,339637,2019-08-24 17:02:29,2019-08-24 17:02:29,What is the idiomatic graphql way to use fields that depends on other nodes?,<graphql>,2,2,0,2019-08-24 14:07:19
57641775,1,57642237,,0,360,"<p><a href=""https://granddebat.fr/graphiql?query=%7B%20%20node(id%3A%20&quot;UXVlc3Rpb25uYWlyZTo5NTNjYjdjYS0xY2E0LTExZTktOTRkMi1mYTE2M2VlYjExZTE%3D&quot;)%20%7B%20%20%20%20...%20on%20Questionnaire%20%7B%20%20%20%20%20%20replies(first%3A%2010%2C%20after%3A%20null)%20%7B%20%20%20%20%20%20%20%20totalCount%20%20%20%20%20%20%20%20pageInfo%20%7B%20%20%20%20%20%20%20%20%20%20%20%20hasNextPage%20%20%20%20%20%20%20%20%20%20%20%20endCursor%20%20%20%20%20%20%20%20%7D%20%20%20%20%20%20%20%20edges%20%7B%20%20%20%20%20%20%20%20%20%20node%20%7B%20%20%20%20%20%20%20%20%20%20%20%20id%20%20%20%20%20%20%20%20%20%20%20%20createdAt%20%20%20%20%20%20%20%20%20%20%20%20publishedAt%20%20%20%20%20%20%20%20%20%20%20%20updatedAt%20%20%20%20%20%20%20%20%20%20%20%20author%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20id%20%20%20%20%20%20%20%20%20%20%20%20%7D%20%20%20%20%20%20%20%20%20%20%20%20responses%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20question%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20title%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20%20%20%20%20%20%20%20%20%20%20%20%20%20...%20on%20ValueResponse%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20value%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%20%20%20%20%20%20%20%20%20%20%20%20%7D%20%20%20%20%20%20%20%20%20%20%7D%20%20%20%20%20%20%20%20%7D%20%20%20%20%20%20%7D%20%20%20%20%7D%20%20%7D%7D"" rel=""nofollow noreferrer"">Here</a> is a graphql query with its result : OK.</p>&#xA;&#xA;<p>I try to get the same result with Python, but I get nothing : response.text is empty. (API key is not needed).</p>&#xA;&#xA;<pre><code>q = """"""&#xA;{&#xA;  node(id: ""UXVlc3Rpb25uYWlyZTo5NTNjYjdjYS0xY2E0LTExZTktOTRkMi1mYTE2M2VlYjExZTE="") {&#xA;    ... on Questionnaire {&#xA;      replies(first: 10, after: null) {&#xA;        totalCount&#xA;        pageInfo {&#xA;          hasNextPage&#xA;          endCursor&#xA;        }&#xA;        edges {&#xA;          node {&#xA;            id&#xA;            createdAt&#xA;            publishedAt&#xA;            updatedAt&#xA;            author {&#xA;              id&#xA;            }&#xA;            responses {&#xA;              question {&#xA;                title&#xA;              }&#xA;              ... on ValueResponse {&#xA;                value&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;""""""&#xA;&#xA;response = requests.post(url = ""https://granddebat.fr/graphql"" , json = {'query': q})&#xA;&#xA;print(response.text)&#xA;</code></pre>&#xA;&#xA;<p>Please, any idea ?</p>&#xA;",11972678,,,,2019-08-24 23:39:07,Graphql query in Python,<python><graphql>,1,0,0,2019-08-24 21:50:03
57660226,1,57726450,,1,2628,"<p>Apollo Server 2.0 has the ability to receive file uploads as described in <a href=""https://blog.apollographql.com/file-uploads-with-apollo-server-2-0-5db2f3f60675"" rel=""nofollow noreferrer"">this blog post</a>.</p>&#xA;&#xA;<p>However, all the tutorials and blog posts I found only showed how to upload a file. Nobody demonstrated how to actually retrieve the file back to display it onscreen.</p>&#xA;&#xA;<p><strong>Does anybody know how to properly query the file contents for display onscreen?</strong><br>&#xA;Also, there's the possibility that maybe there is no way of querying a file and you have to build a separate rest endpoint to retrieve the contents?</p>&#xA;&#xA;<p><em>Some thoughts:</em><br>&#xA;I imagine the query to be something like</p>&#xA;&#xA;<pre><code>query {&#xA;  fetchImage(id: 'someid')&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>with the respective server-side definition</p>&#xA;&#xA;<pre><code>type Query {&#xA;  fetchImage(id : ID!): Upload //maybe also a custom type, but how do I include the actual file contents?&#xA;}&#xA;</code></pre>&#xA;&#xA;<blockquote>&#xA;  <p><strong>Hint:</strong> <code>Upload</code> is a scalar type that apollo-server automatically adds to your type definition. It is used for the upload so I imaging it also being usable for the download/query. Please read the blog post mentioned above for more information.</p>&#xA;</blockquote>&#xA;",6204356,,,,2021-02-06 07:49:21,apollo graphql query an uploaded file,<node.js><file-upload><download><graphql><apollo>,2,0,0,2019-08-26 14:47:55
57668646,2,,57658883,0,,"<p>After some times of research Im find a lib ""gmostafa/php-graphql-client"" (composer require) It is nice instrument for make querys and mutation for Graphql API from php.</p>&#xA;",11978718,,,,2019-08-27 06:18:11,"",,0,0,0,2019-08-27 06:18:11
57690196,2,,51060705,0,,"<p>You can use graphql admin app to run you queries in app. It is very good app it also help you to find the parameters as well as identify you error in query.&#xA;<a href=""https://shopify-graphiql-app.shopifycloud.com/login"" rel=""nofollow noreferrer"">https://shopify-graphiql-app.shopifycloud.com/login</a></p>&#xA;&#xA;<p>You can also visit document to describe how we can use insomnia -> graphql learning kit. Where you need import the collection. I am using this tool to run graphql.&#xA;<a href=""https://www.shopify.com/partners/blog/shopify-graphql-learning-kit"" rel=""nofollow noreferrer"">https://www.shopify.com/partners/blog/shopify-graphql-learning-kit</a></p>&#xA;",7860426,,1839439,2019-08-28 10:25:31,2019-08-28 10:25:31,"",,0,0,0,2019-08-28 10:22:00
57694099,2,,57684445,1,,"<p>That's because you missing the 'allArticless' (allArticles, no ?) object in you RichText render <code>{RichText.render(data.prismic.allArticles.edges.node.article_title)}</code>.</p>&#xA;&#xA;<p>By the way, I think you've got an array of multiple result in edges, no ? With allArticless you've got multiple page, so if the solution above doesn't work, try to map your result</p>&#xA;&#xA;<pre><code>data =&gt; { data.prismic.edges.map((article, index) =&gt; (&#xA;   &lt;h1 key={`articleTitle-${index}}&gt;{RichText.render(article.article_title)}&lt;/h1&gt;&#xA;)}&#xA;</code></pre>&#xA;",11816067,,,,2019-08-28 13:53:17,"",,0,1,0,2019-08-28 13:53:17
57697508,2,,55970271,6,,"<p>As Daniel later mentioned in the <a href=""https://stackoverflow.com/questions/55970271/found-client-directives-in-query-but-no-client-resolvers-were-specified-warni#comment98593824_55970913"">comments of the above answer</a>, passing <code>resolvers={{}}</code> inside of <code>MockedProvider</code> worked wonderfully for me. Here's how it should look like: </p>&#xA;&#xA;<pre><code>&lt;MockedProvider mocks={mocks} addTypename={false} resolvers={{}}&gt;&#xA;    &lt;FooComponent /&gt;&#xA;&lt;/MockedProvider&gt;&#xA;</code></pre>&#xA;&#xA;<p>It even solved a memory leakage problem I was having in Circle CI, as it seems there was nowhere to resolve to; here are the error messages I was getting:</p>&#xA;&#xA;<pre><code>&lt;--- Last few GCs ---&gt;&#xA;&#xA;  154665 ms: Mark-sweep 949.1 (1434.4) -&gt; 948.2 (1434.4) MB, 1979.3 / 0 ms [allocation failure] [GC in old space requested].&#xA;  156664 ms: Mark-sweep 948.2 (1434.4) -&gt; 948.2 (1434.4) MB, 1999.7 / 0 ms [allocation failure] [GC in old space requested].&#xA;  158734 ms: Mark-sweep 948.2 (1434.4) -&gt; 948.2 (1434.4) MB, 2069.7 / 0 ms [last resort gc].&#xA;  160810 ms: Mark-sweep 948.2 (1434.4) -&gt; 948.1 (1434.4) MB, 2075.7 / 0 ms [last resort gc].&#xA;&#xA;&#xA;&lt;--- JS stacktrace ---&gt;&#xA;&#xA;==== JS stack trace =========================================&#xA;&#xA;Security context: 0x30ab306c9fa9 &lt;JS Object&gt;&#xA;    2: convertPropertyValueToJson(aka convertPropertyValueToJson) [/home/circleci/project/node_modules/typescript/lib/typescript.js:24737] [pc=0x2953c91d9878] (this=0x30ab30604189 &lt;undefined&gt;,valueExpression=0x39effa032fa9 &lt;a NodeObject with map 0x35eb62463c11&gt;,option=0x30ab30604189 &lt;undefined&gt;)&#xA;    3: /* anonymous */(aka /* anonymous */) [/home/circleci/project/node_modules/typescript/lib/type...&#xA;&#xA;FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory&#xA;Aborted (core dumped)&#xA;</code></pre>&#xA;&#xA;<p>Cheers!</p>&#xA;",7886731,,911192,2019-08-28 18:29:52,2019-08-28 18:29:52,"",,0,0,0,2019-08-28 17:36:59
57701535,1,57701878,,0,729,"<p>I’m trying to replicate a REST API that I’ve built in the past and one part that got me thinking was if one of my tables had an array of objects. So for example, I have a table called Profile and it contains arrays Experience and Education that would strictly be under Profile but has its own fields as well but not its own table.</p>&#xA;&#xA;<p>While I was adding fields in GraphQL, I bumped into this not really having a solid solution other than to create new types and then associating them with relationships and then have a resolver or a front-end make sure a Profile is created first before the Experience/Education portion is. I’m not sure if it’s the right way to do it or if there is a better way to do it. Down below is a snippet of what I ended up using… looking at the admin page, there are created tables for Profile, Experience and Education which is expected. But is there a way to only have just Profile and accomplish something similar? Or is this more of a way of life with GraphQL?</p>&#xA;&#xA;<pre><code>type Profile {&#xA;    id: ID! @id&#xA;    handle: String!&#xA;    company: String&#xA;    website: String&#xA;    location: String&#xA;    status: String!&#xA;    githubUsername: String&#xA;    experience: [Experience!] @relation(link: INLINE)&#xA;    education: [Education!] @relation(link: INLINE)&#xA;}&#xA;&#xA;type Experience {&#xA;  id: ID! @id&#xA;  title: String!&#xA;  company: String!&#xA;}&#xA;&#xA;type Education {&#xA;  id: ID! @id&#xA;  title: String!&#xA;  company: String!&#xA;}&#xA;&#xA;</code></pre>&#xA;",3026715,,3026715,2019-08-29 00:56:54,2019-08-29 01:33:17,Do I have to create a new type to define array of objects in GraphQL schemas?,<graphql><prisma><prisma-graphql>,1,1,0,2019-08-29 00:30:47
57705603,1,57723820,,1,2020,"<p>I installed the <a href=""https://help.shopify.com/en/api/graphql-admin-api/graphiql-app"" rel=""nofollow noreferrer"">Shopify GraphiQL App</a> in my Shopify store to test some GraphQL queries.</p>&#xA;&#xA;<p>I want to translate content via their API.&#xA;Here is the documentation for it: <a href=""https://help.shopify.com/en/api/guides/multi-language/translating-content-api#retrieve-a-list-of-translatable-resource-types"" rel=""nofollow noreferrer"">https://help.shopify.com/en/api/guides/multi-language/translating-content-api#retrieve-a-list-of-translatable-resource-types</a></p>&#xA;&#xA;<p>Now, I want to query their first example in the documentation: <code>Retrieve a list of translatable resource types</code></p>&#xA;&#xA;<pre><code>{&#xA;  __type(name: ""TranslatableResourceType"") {&#xA;    enumValues {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And received this response:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""__type"": null&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Also the second query isn't working: <code>Retrieve a list of translatable resources by their type</code></p>&#xA;&#xA;<pre><code>{&#xA;  translatableResources(first: 1, resourceType: PRODUCT) {&#xA;    edges {&#xA;      node {&#xA;        resourceId&#xA;        translatableContent {&#xA;          key&#xA;          value&#xA;          digest&#xA;          locale&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The error of the second query:</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Field 'translatableResources' doesn't exist on type 'QueryRoot'"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 2,&#xA;          ""column"": 3&#xA;        }&#xA;      ],&#xA;      ""path"": [&#xA;        ""query"",&#xA;        ""translatableResources""&#xA;      ],&#xA;      ""extensions"": {&#xA;        ""code"": ""undefinedField"",&#xA;        ""typeName"": ""QueryRoot"",&#xA;        ""fieldName"": ""translatableResources""&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I installed the Shopify GraphiQL App, I picked all permissions (incl. <code>read_translations</code> and <code>write_translations</code> permissions).&#xA;And I do have products in my store.</p>&#xA;&#xA;<p>Which setting is missing or what am I doing wrong?</p>&#xA;",3468733,,,,2020-01-06 21:19:32,Field 'translatableResources' doesn't exist on type 'QueryRoot',<graphql><shopify>,2,1,0,2019-08-29 07:55:53
57712211,2,,57711544,2,,"<p>In the end, I just debugged it using <code>console.log()</code> commands. I had accidentally put the <code>authorization</code> in the 'Query Variables' section rather than the 'HTTP Headers' one. Moving it to 'HTTP Headers' produces the desired result:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/pKbQt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pKbQt.png"" alt=""enter image description here""></a></p>&#xA;",995862,,,,2019-08-29 14:19:34,"",,0,0,0,2019-08-29 14:19:34
57714434,1,,,0,771,"<p>I was looking at the new graphql endpoint exposed by Magento 2.3.1 and above at the query for listing products:</p>&#xA;&#xA;<pre><code>query products(&#xA;    pageSize:6,&#xA;    currentPage:1,&#xA;    filter:{&#xA;        category_id: { eq: ""3"" }&#xA;    }&#xA;&#xA;  ) {&#xA;    filters {&#xA;      name&#xA;      request_var&#xA;      filter_items_count&#xA;      filter_items {&#xA;        label value_string&#xA;      }&#xA;    }&#xA;    items {&#xA;      id&#xA;      name&#xA;      small_image {&#xA;        url&#xA;      }&#xA;      # ...&#xA;    }&#xA;    # ...&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>The response body yields products in the <code>items</code> property just as expected and a bunch of custom filters in an array in the <code>filters</code> property which look like this:</p>&#xA;&#xA;<pre><code>""filters"": [&#xA;        {&#xA;          ""name"": ""Activity"",&#xA;          ""request_var"": ""activity"",&#xA;          ""filter_items_count"": 12,&#xA;          ""filter_items"": [&#xA;            {&#xA;              ""label"": ""Outdoor"",&#xA;              ""value_string"": ""5""&#xA;            },&#xA;            {&#xA;              ""label"": ""Yoga"",&#xA;              ""value_string"": ""8""&#xA;            },&#xA;            {&#xA;              ""label"": ""Recreation"",&#xA;              ""value_string"": ""9""&#xA;            },&#xA;            // rest of filter values&#xA;          ]&#xA;        },&#xA;        // rest of filters&#xA;]&#xA;&#xA;</code></pre>&#xA;&#xA;<p>Given the fact that those filters are dynamic and user defined is there a way of sending them back with a list products query in graphql? I would expect to have a property somewhere under the <code>products</code> query that could be an array of aforementioned filter objects but so far I haven't found anything neither in the schema nor in the official documentation.</p>&#xA;&#xA;<p>Did anyone have any similar experience with this?</p>&#xA;",3216791,,,,2019-08-30 16:00:35,Is there any way to query products using dynamic filters in Magento 2.3 graphql endpoint?,<graphql><magento2><magento-2.3>,1,0,0,2019-08-29 16:33:19
57723820,2,,57705603,3,,"<p>I think you are using either 2019-07 or 2019-10, you need to use unstable version where shopify added translatableResources Queryroot. Please check below image:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/9936S.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9936S.png"" alt=""enter image description here""></a></p>&#xA;",7860426,,,,2019-08-30 09:12:50,"",,0,2,0,2019-08-30 09:12:50
57727969,2,,57726794,0,,<p>You should checkout an ORM that work with your technology.&#xA;like 'sequelize' for example.</p>&#xA;,8046753,,,,2019-08-30 13:45:57,"",,0,0,0,2019-08-30 13:45:57
57731122,1,,,2,1567,"<p>I am writing a script that will query the github graphql API for open pull requests, and post the count and summary information about them to a slack channel.</p>&#xA;&#xA;<p>I am able to query the github-graphql API and return the results.  I am able to iterate over the results to read the properties.</p>&#xA;&#xA;<p>I had thought that the key values would be unique, however I have found they are not (for example - there are multiple keys with a value of 'name').</p>&#xA;&#xA;<p>I am stuck now, as I cannot work out how to extract the information I want to from the graphql api response.  In a REST API I would be calling multiple APIs multiple times for the data, however I want to use the graphql API this time.</p>&#xA;&#xA;<p>The graphql query is:</p>&#xA;&#xA;<pre><code>query { organization(login: ""MyOrganisation"") {&#xA;              repositories(first: 20, orderBy: {field: PUSHED_AT, direction: DESC}) {&#xA;              nodes {&#xA;                  name&#xA;                  pullRequests(first: 10, states: OPEN, orderBy: {field: UPDATED_AT, direction: DESC}) {&#xA;                      nodes {&#xA;                          headRepository { nameWithOwner }&#xA;                          url&#xA;                          author {&#xA;                          ... on User {&#xA;                              login name&#xA;                              }&#xA;                          }&#xA;                          mergeable&#xA;                          createdAt&#xA;                          baseRefName&#xA;                          headRefName&#xA;                          title&#xA;                          ... on PullRequest {&#xA;                              pullRequestcommits: commits(last: 1) {&#xA;                                  totalCount&#xA;                                  nodes {&#xA;                                      commit {&#xA;                                          url&#xA;                                          status { state contexts { context description createdAt targetUrl } }&#xA;                                      }&#xA;                                  }&#xA;                              }&#xA;                          }&#xA;                      }&#xA;                  }&#xA;              }&#xA;          }&#xA;        }&#xA;      }&#xA;</code></pre>&#xA;&#xA;<p>The response is along the lines of:</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;        ""organization"": {&#xA;            ""repositories"": {&#xA;                ""nodes"": [&#xA;                    {&#xA;                        ""name"": ""my-service-1"",&#xA;                        ""pullRequests"": {&#xA;                            ""nodes"": []&#xA;                        }&#xA;                    },&#xA;                    {&#xA;                        ""name"": ""my-service-2"",&#xA;                        ""pullRequests"": {&#xA;                            ""nodes"": []&#xA;                        }&#xA;                    },&#xA;                    {&#xA;                        ""name"": ""my-service-3"",&#xA;                        ""pullRequests"": {&#xA;                            ""nodes"": []&#xA;                        }&#xA;                    },&#xA; {&#xA;                        ""name"": ""my-service-4"",&#xA;                        ""pullRequests"": {&#xA;                            ""nodes"": [&#xA;                                {&#xA;                                    ""headRepository"": {&#xA;                                        ""nameWithOwner"": ""MyOrganisation/my-service-4""&#xA;                                    },&#xA;                                    ""url"": ""https://www.githhub.com/MyOrganisation/my-service-4/pull/21"",&#xA;                                    ""author"": {&#xA;                                        ""login"": ""Bob1"",&#xA;                                        ""name"": ""Bob""&#xA;                                    },&#xA;                                    ""mergeable"": ""MERGEABLE"",&#xA;                                    ""createdAt"": ""2019-08-20T15:24:52Z"",&#xA;                                    ""baseRefName"": ""develop"",&#xA;                                    ""headRefName"": ""feature/name-tags"",&#xA;                                    ""title"": ""Added tags"",&#xA;                                    ""pullRequestcommits"": {&#xA;                                        ""totalCount"": 1,&#xA;                                        ""nodes"": [&#xA;                                            {&#xA;                                                ""commit"": {&#xA;                                                    ""url"": ""https://www.githhub.com/MyOrganisation/my-service-4/commit/6bdda3a4adbc9bc7ea621556be1097bf0e618b3a"",&#xA;                                                    ""status"": null&#xA;                                                }&#xA;                                            }&#xA;                                        ]&#xA;                                    }&#xA;                                }&#xA;                            ]&#xA;                        }&#xA;                    },&#xA;                    {&#xA;                        ""name"": ""my-service-5"",&#xA;                        ""pullRequests"": {&#xA;                            ""nodes"": [&#xA;                                {&#xA;                                    ""headRepository"": {&#xA;                                        ""nameWithOwner"": ""MyOrganisation/my-service-5""&#xA;                                    },&#xA;                                    ""url"": ""https://www.github.com/MyOrganisation/my-service-5"",&#xA;                                    ""author"": {&#xA;                                        ""login"": ""Anne2"",&#xA;                                        ""name"": ""Anne""&#xA;                                    },&#xA;                                    ""mergeable"": ""MERGEABLE"",&#xA;                                    ""createdAt"": ""2019-08-27T08:18:52Z"",&#xA;                                    ""baseRefName"": ""develop"",&#xA;                                    ""headRefName"": ""feature/new-nodejs-upgrade"",&#xA;                                    ""title"": ""Changed nodejs version to the latet version of 10 supported b…"",&#xA;                                    ""pullRequestcommits"": {&#xA;                                        ""totalCount"": 1,&#xA;                                        ""nodes"": [&#xA;                                            {&#xA;                                                ""commit"": {&#xA;                                                    ""url"": ""https://www.github.com/MyOrganisation/my-service-5/commit/6a0694cfa86864c7bad509273536ef0506ad40ff"",&#xA;                                                    ""status"": null&#xA;                                                }&#xA;                                            }&#xA;                                        ]&#xA;                                    }&#xA;                                },&#xA;                                {&#xA;                                    ""headRepository"": {&#xA;                                        ""nameWithOwner"": ""MyOrganisation/my-service-5r""&#xA;                                    },&#xA;                                    ""url"": ""https://www.github.com/MyOrganisation/my-service-5/pull/72"",&#xA;                                    ""author"": {&#xA;                                        ""login"": ""Peter3"",&#xA;                                        ""name"": ""Peter""&#xA;                                    },&#xA;                                    ""mergeable"": ""MERGEABLE"",&#xA;                                    ""createdAt"": ""2019-08-20T13:13:39Z"",&#xA;                                    ""baseRefName"": ""develop"",&#xA;                                    ""headRefName"": ""feature/Tagging-cloudformation-stacks"",&#xA;                                    ""title"": ""Added tags to the change set, this will add tags to all objec…"",&#xA;                                    ""pullRequestcommits"": {&#xA;                                        ""totalCount"": 2,&#xA;                                        ""nodes"": [&#xA;                                            {&#xA;                                                ""commit"": {&#xA;                                                    ""url"": ""https://www.github.com/MyOrganisation/my-service-5/commit/6f14a2d8157ee2efc5a869741df6683da1d6789f"",&#xA;                                                    ""status"": null&#xA;                                                }&#xA;                                            }&#xA;                                        ]&#xA;                                    }&#xA;                                }&#xA;                            ]&#xA;                        }&#xA;                    },&#xA;&#xA;</code></pre>&#xA;&#xA;<p>And the code I'd written thinking I would be able to use to get the data I wanted:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>function iterate(obj: any, stack: any) {&#xA;    for (var property in obj) {&#xA;        if (obj.hasOwnProperty(property)) {&#xA;            if (typeof obj[property] == ""object"") {&#xA;                iterate(obj[property], stack + '.' + property);&#xA;            } else {&#xA;                if (property === 'name') {&#xA;                    console.log(property + ""   "" + obj[property]);&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But this isn't going to work, and I cannot think of how to do this.  Any pointers really appreciated.</p>&#xA;&#xA;<p>I would like to create an array along the lines of:</p>&#xA;&#xA;<pre><code>pullrequests [&#xA;   [repo: my-service-1, openprs: 0],&#xA;   [repo: my-service-2, openprs: 0],&#xA;   [repo: my-service-3, openprs: 0],&#xA;   [repo: my-service-4, openprs: 1, [createdAt: 2019-08-20T15:24:52Z, url: https://www.githhub.com/MyOrganisation/my-service-4/pull/21, author: Bob, headRefName: feature/name-tags, title: Added tags]]&#xA;   etc.&#xA;]&#xA;</code></pre>&#xA;",12000566,,,,2019-08-30 17:41:38,How to extract open pull request information from github-graphql response,<javascript><graphql><github-api><github-graphql>,0,0,0,2019-08-30 17:41:38
57749397,1,,,3,155,"<p>i am a noob in this area and need some help.</p>&#xA;&#xA;<p>I did a GraphQL query with the Github v4 API using following code to filter search repositories. However I am not satisfied with the output format.</p>&#xA;&#xA;<pre><code>query {&#xA;  search(&#xA;    type:REPOSITORY, &#xA;    query: """"""&#xA;      stars:&lt;1000&#xA;      forks:&gt;10&#xA;      size:&gt;2000&#xA;      pushed:&gt;=2019-08-01&#xA;      created:&gt;=2018-08-01&#xA;&#xA;    """""",&#xA;    last: 100&#xA;  ) {&#xA;    repos: edges {&#xA;      repo: node {&#xA;        ... on Repository {&#xA;          name&#xA;          description&#xA;          url&#xA;          owner{__typename}&#xA;          licenseInfo{name}&#xA;          watchers{watchers: totalCount}&#xA;          releases {releases: totalCount}&#xA;          forks: forkCount&#xA;          pullRequests {pullRequests: totalCount}&#xA;          stargazers {stars: totalCount}&#xA;          openIssues: issues(states:OPEN){totalCount}&#xA;          totalIssues: issues {totalIssues: totalCount}&#xA;          primaryLanguage {primaryLanguage: name}&#xA;          languages(first: 3) { nodes {name} }&#xA;          repositoryTopics(first: 3) {nodes {topic {name}}}&#xA;          createdAt&#xA;          pushedAt&#xA;          updatedAt&#xA;&#xA;       }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What I would like to do is to import the query as .json so I can use it in Python.</p>&#xA;&#xA;<p>I tried following approach in python but I am struggling with the json format</p>&#xA;&#xA;<pre><code>import requests&#xA;&#xA;url = 'https://api.github.com/graphql'&#xA;json = {'query': '{stars:&lt;1000} {forks:&gt;10} {size:&gt;2000 {pushed:&gt;=2019-08-01} {created:&gt;=2018-08-01}}'}&#xA;api_token = ""abc..""&#xA;headers = {'Authorization': 'token %s' % api_token}&#xA;&#xA;r = requests.post(url=url, json=json, headers=headers)&#xA;print (r.text)&#xA;</code></pre>&#xA;",11495331,,,,2019-09-01 20:46:24,Can I transform this GraphQL API request to a format which can be used in Python as json?,<python><json><formatting><graphql>,0,1,0,2019-09-01 20:46:24
57753943,1,57862568,,1,874,"<p>I have a query to return objects of type <code>ObjectA</code>. The response is using a conditional fragment.</p>&#xA;&#xA;<pre><code>union Objects = ObjectA | ObjectB | ObjectC&#xA;&#xA;getObjects {&#xA;  ... on ObjectA {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The resolver will return all objects</p>&#xA;&#xA;<pre><code>$util.toJSON($ctx.result.objects)&#xA;</code></pre>&#xA;&#xA;<p>However, I got a response:</p>&#xA;&#xA;<pre><code>[&#xA;  {&#xA;    ""name"": ""apple""&#xA;  },&#xA;  {&#xA;    ""name"": ""airplane""&#xA;  },&#xA;  {},&#xA;  {}&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>The last two ""empty"" objects are not of type <code>ObjectA</code>.</p>&#xA;&#xA;<p>My question is, is there a way using conditional fragment to exclude ""empty"" objects from different type?</p>&#xA;",8012206,,8012206,2019-09-02 09:04:25,2019-09-10 00:21:03,How to skip empty objects in query conditional fragment?,<graphql><apollo-client><aws-appsync>,1,0,0,2019-09-02 08:48:06
57760696,2,,57760021,0,,"<p>In your AppSync resolver for the mutation you would be able to add on to the DDB UpdateExpression with something like 'SET quantity = quantity + :val' where :val is your increment size (e.g. 1).</p>&#xA;&#xA;<p>more here w/ examples: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html</a></p>&#xA;",10886417,,,,2019-09-02 17:14:37,"",,0,0,0,2019-09-02 17:14:37
57798437,1,,,3,779,"<p>I'm basically trying to instrument GraphQL queries to identify what queries and fields the user is hitting the most. For this I want to extract the query name and it's respective fields whenever the point&#xA;<code>graphQL.execute(query)</code> hits in my code.</p>&#xA;&#xA;<p>I've seen some posts that were using/suggesting to use Apollo server but I do not use Apollo. For example in this query</p>&#xA;&#xA;<pre><code>query getMultipleResults {&#xA;  personSearch(text: ""xyz"") {&#xA;   totalCount&#xA;   results {&#xA;     name&#xA;     dob&#xA;     SSN&#xA;   }&#xA;  }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>I would like to get the query name: personSearch and the fields to be: totalCount, results and its fields name, dob and SSN.</p>&#xA;",10973837,,,,2019-09-22 05:58:45,Extract query name and it's fields from a GraphQL query in java,<graphql><instrumentation><graphql-java>,1,0,0,2019-09-05 04:26:52
57806600,2,,56982328,0,,"<p>From Native GraqpQl we cannot get the expected result.But we can write a custom module with the graphql and achieve it.What my suggestion is get the product detail by sku using <code>_productRepository-&gt;get($sku);</code>. This will return the entire product details.So you can get the attribute data by using <code>$attributes = $_product-&gt;getAttributes();</code> Here is my data provider file.</p>&#xA;&#xA;<pre><code>/**&#xA; * @params string $sku&#xA; * this function return all the product data by product sku&#xA; **/&#xA;public function getProductBySku($sku)&#xA;{&#xA;    return $this-&gt;_productRepository-&gt;get($sku);&#xA;}&#xA;/**&#xA; * @params int $id&#xA; * this function return all the word of the day by id&#xA; **/&#xA;public function getAttributesBySku( $sku ){&#xA;    $_product = $this-&gt;getProductBySku($sku);&#xA;    $attributes = $_product-&gt;getAttributes();// All Product Attributes&#xA;&#xA;    $attributes_data = [];&#xA;    $x=0;&#xA;    foreach ($attributes as $attribute) {&#xA;        if($attribute-&gt;getIsUserDefined()){ // Removed the system product attribute by checking the current attribute is user created&#xA;            $attributeLabel = $attribute-&gt;getFrontend()-&gt;getLabel();&#xA;            $attributeValue = $attribute-&gt;getFrontend()-&gt;getValue($_product);&#xA;&#xA;            if($attribute-&gt;getAttributeCode()==""language""){&#xA;                $attributeLabelAndValue = $attributeLabel."" - "".$attributeValue;&#xA;                $attributes_data[$x]['atr_data'] = $attributeLabelAndValue;&#xA;            }&#xA;        }&#xA;        $x++;&#xA;    }&#xA;    return $attributes_data;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This code will return the need</p>&#xA;&#xA;<pre><code>$attribute-&gt;getFrontend()-&gt;getLabel(); this will return the label and &#xA;$attribute-&gt;getFrontend()-&gt;getValue($_product); this will return the value.&#xA;</code></pre>&#xA;&#xA;<p>To check the entire graphQl query and resolver file kindly view <a href=""http://www.mujahidh.com/how-to-get-product-attribute-value-label-using-graphql-in-magento-2-3/"" rel=""nofollow noreferrer"">How to get product attribute value, label using GraphQl in Magento 2.3?</a></p>&#xA;&#xA;<p>Hope this will help you.</p>&#xA;",2689226,,,,2019-09-05 13:28:08,"",,0,0,0,2019-09-05 13:28:08
57808062,1,,,1,941,"<p>I just started exploring graphql, so am running in to initial problems using the framework.  The code used on this post is hosted on github @  <a href=""https://github.com/samshers/graphQL-Starter"" rel=""nofollow noreferrer"">https://github.com/samshers/graphQL-Starter</a><br>&#xA;The graphql schema of my api is as below: </p>&#xA;&#xA;<pre><code>schema {&#xA; query: Query&#xA;}&#xA;&#xA;type Query {&#xA; allCities: [City]&#xA; city(name: String): City&#xA; state(name: String): State &#xA;}&#xA;&#xA;type City {&#xA;    name: String&#xA;    population: String&#xA;    state: State&#xA;}&#xA;&#xA;type State {&#xA;    name: String&#xA;    population: String&#xA;    country: Country&#xA;    cities : [City]&#xA;} &#xA;&#xA;type Country {&#xA;    name: String&#xA;    population: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The query I am trying to execute is - </p>&#xA;&#xA;<pre><code>{&#xA;  city(name: ""BayArea"") {&#xA;    name&#xA;    population&#xA;    state {&#xA;        name&#xA;        population&#xA;        cities  {&#xA;            name&#xA;        }&#xA;        country {&#xA;            name&#xA;            population&#xA;        }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and the result I am getting is - </p>&#xA;&#xA;<pre><code>{&#xA;    ""errors"": [],&#xA;    ""data"": {&#xA;        ""city"": {&#xA;            ""name"": ""BayArea"",&#xA;            ""population"": ""7200000"",&#xA;            ""state"": {&#xA;                ""name"": ""CA"",&#xA;                ""population"": ""39900000"",&#xA;                ""cities"": [],&#xA;                ""country"": {&#xA;                    ""name"": ""USA"",&#xA;                    ""population"": ""330000000""&#xA;                }&#xA;            }&#xA;        }&#xA;    },&#xA;    ""extensions"": null&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The problem is with this part of the result - </p>&#xA;&#xA;<blockquote>&#xA;  <p>""population"": ""39900000"",<br>&#xA;   <strong>""cities"": [],</strong><br>&#xA;   ""country"": {    </p>&#xA;</blockquote>&#xA;&#xA;<p>I did expect the cities array to be populated accordingly with all the cities available for the particular state.<br>&#xA;Will appreciate if anyone can point out if the issue is with the schema/query or jpa mapping. As stated earlier the code is hosted on github @ <a href=""https://github.com/samshers/graphQL-Starter"" rel=""nofollow noreferrer"">https://github.com/samshers/graphQL-Starter</a></p>&#xA;",4820101,,294657,2019-09-10 14:40:38,2019-12-04 04:16:00,On using graphql-java with spring boot I am unable to query data within nested Lists,<spring-boot><spring-data-jpa><graphql><graphql-java>,1,1,0,2019-09-05 14:51:19
57830485,1,,,0,15,"<p>I'm trying to update a document in the &quot;Inventories&quot; collection. I'm passing the id of the inventory and the newItems that should be saved as the new inventory.</p>&#xA;<p>When I try to run a test, such as:</p>&#xA;<pre><code>mutation{&#xA;  updateInventory(id:&quot;5d72e794a00da51083c56615&quot;,newItems:[{name:&quot;Test&quot;, quantity:3},{name:&quot;Test2&quot;,quantity:3}]){&#xA;        items{&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I get the error:</p>&#xA;<pre><code>&quot;{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Inventory validation failed: items: Cast to Array failed for value \&quot;[ [Object: null prototype] { name: 'Test', quantity: 3 },\n  [Object: null prototype] { name: 'Test2', quantity: 3 } ]\&quot; at path \&quot;items\&quot;&quot;,&quot;&#xA;</code></pre>&#xA;<p>Where might I be going wrong?</p>&#xA;<p>Code snippets:</p>&#xA;<p>Resolver -</p>&#xA;<pre><code>updateInventory: async (parent, args) =&gt; {&#xA;            let selectedInventory = await Inventory.findById(args.id)&#xA;            selectedInventory.items = [...args.newItems]&#xA;            await selectedInventory.save()&#xA;            return selectedInventory&#xA;        }&#xA;</code></pre>&#xA;<p>Relevant TypeDefs -</p>&#xA;<pre><code>type Item{&#xA;        name: String!&#xA;        quantity: Int!&#xA;    }&#xA;&#xA;input ItemInput{&#xA;        name: String!&#xA;        quantity: Int!&#xA;    }&#xA;&#xA;type Inventory{&#xA;        items: [Item]!&#xA;    }&#xA;&#xA;type Mutation{&#xA;        updateInventory(id: String!, newItems: [ItemInput]!): Inventory!&#xA;    }&#xA;</code></pre>&#xA;<h2>Edit</h2>&#xA;<p>I am aware that there is another question that mentions &quot;Cast to Array&quot; - The selected answer for that question deals with needing to not use &quot;type&quot; as a key. I am not using &quot;type&quot; as a key.</p>&#xA;",6437913,,472495,2021-03-07 12:49:53,2021-03-07 12:49:53,"GraphQL and MongoDB - ""Cast to Array failed"" With Array",<mongodb><graphql><express-graphql>,0,4,0,2019-09-07 03:40:16
57856796,2,,44774728,-3,,"<p>Check out this tutorial by graphql.college <a href=""https://www.graphql.college/building-a-github-client-with-react-apollo/"" rel=""nofollow noreferrer"">https://www.graphql.college/building-a-github-client-with-react-apollo/</a></p>&#xA;&#xA;<p>Also, you can take a look at my implementation <a href=""https://github.com/majiyd/react-graphql-apollo"" rel=""nofollow noreferrer"">on Github</a>. Specifically, check <code>./src/views/profile</code> on the <code>query-mutation-with-hoc</code> branch</p>&#xA;",8594670,,,,2019-09-09 15:12:40,"",,0,0,0,2019-09-09 15:12:40
57866214,1,,,3,1846,"<p>I'm creating an Apollo Client like this: </p>&#xA;&#xA;<pre><code>var { ApolloClient }    = require(""apollo-boost"");&#xA;var { InMemoryCache }   = require('apollo-cache-inmemory');&#xA;var { createHttpLink }  = require('apollo-link-http');&#xA;var { setContext }      = require('apollo-link-context');&#xA;&#xA;exports.createClient = (shop, accessToken) =&gt; {&#xA;&#xA;  const httpLink = createHttpLink({&#xA;    uri: `https://${shop}/admin/api/2019-07/graphql.json`,&#xA;  });&#xA;  const authLink = setContext((_, { headers }) =&gt; {&#xA;    return {&#xA;      headers: {&#xA;        ""X-Shopify-Access-Token"": accessToken,&#xA;        ""User-Agent"": `shopify-app-node 1.0.0 | Shopify App CLI`,&#xA;      }&#xA;    }&#xA;  });  &#xA;&#xA;  return new ApolloClient({&#xA;    cache: new InMemoryCache(),&#xA;    link: authLink.concat(httpLink),&#xA;  });&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>to hit the Shopify GraphQL API and then running a query like that:</p>&#xA;&#xA;<pre><code>    return client.query({&#xA;        query: gql` {&#xA;            productVariants(first: 250) {&#xA;                edges {&#xA;                    node {&#xA;                        price&#xA;                        product {&#xA;                            id&#xA;                        }&#xA;                    }&#xA;                    cursor&#xA;                }&#xA;                pageInfo {&#xA;                    hasNextPage&#xA;                }&#xA;            }&#xA;        }&#xA;    `})&#xA;</code></pre>&#xA;&#xA;<p>but the returned object only contain data and no extensions which is a problem to figure out the real cost of the query.</p>&#xA;&#xA;<p>Any idea why?</p>&#xA;&#xA;<p>Many thanks for your help</p>&#xA;",1875631,,1875631,2019-09-11 14:58:18,2019-09-12 22:46:08,Extensions not returned in GraphQL query results,<node.js><graphql><shopify><apollo><apollo-boost>,2,0,0,2019-09-10 07:45:34
57871929,1,,,4,285,"<p>I want to obtain information about the number of times my projects have been viewed, cloned and where the traffic came from (individually).</p>&#xA;&#xA;<p>I can currently view this <code>Traffic</code> information by clicking on the <code>Insights</code> button of the repository (via the web interface). </p>&#xA;&#xA;<p>Is there a schema in the GitHub v4 GraphQL API to retrieve this information? </p>&#xA;&#xA;<p>The closest I got was the following; <code>nodes</code>  didn't contain any sort of statistical data:</p>&#xA;&#xA;<pre><code>{&#xA;  viewer {&#xA;    repositories(first: 100) {&#xA;      totalCount&#xA;      nodes {&#xA;        name&#xA;        description&#xA;&#xA;      }&#xA;      pageInfo {&#xA;        endCursor&#xA;        hasNextPage&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<pre><code>// response&#xA;&#xA;&#xA;{&#xA;  ""data"": {&#xA;    ""viewer"": {&#xA;      ""repositories"": {&#xA;        ""totalCount"": 55,&#xA;        ""nodes"": [&#xA;          {&#xA;            ""name"": ""Repo Name"",&#xA;            ""description"": ""Repo Description""&#xA;          },&#xA;          {&#xA;            ...&#xA;          }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",14649706,,14649706,2019-09-10 13:36:18,2022-02-16 12:17:54,Get GitHub Repository Insights via GitHub GraphQL API (v4),<github><graphql><analytics><github-api><github-graphql>,1,2,0,2019-09-10 13:31:13
57873339,2,,57490569,8,,"<p>The graphql tag template literal(<code>gql`..`</code>) parses the graphql query to an AST (abstract syntax tree; further reading: <a href=""https://www.contentful.com/blog/2018/07/04/graphql-abstract-syntax-tree-new-schema/"" rel=""noreferrer"">https://www.contentful.com/blog/2018/07/04/graphql-abstract-syntax-tree-new-schema/</a>). The advantage of parsing to an AST (on the client-side) is that it allows you to lint your queries and eases query handling e.g. with fragments (see: <a href=""https://github.com/apollographql/graphql-tag#why-use-this"" rel=""noreferrer"">https://github.com/apollographql/graphql-tag#why-use-this</a>) </p>&#xA;&#xA;<p>If you want to pass your query to axios/fetch, you'll need to parse it back to a an actual query string using the graphql printer fn (<a href=""https://graphql.org/graphql-js/language/#printer"" rel=""noreferrer"">https://graphql.org/graphql-js/language/#printer</a>):</p>&#xA;&#xA;<pre><code>import gql from 'graphql-tag';&#xA;import { print } from 'graphql/language/printer';&#xA;&#xA;const AST = gql`&#xA;  {&#xA;    user(id: 5) {&#xA;      firstName&#xA;      lastName&#xA;    }&#xA;  }&#xA;`&#xA;const query = print(AST);&#xA;</code></pre>&#xA;",7926354,,1233251,2019-09-11 08:44:29,2019-09-11 08:44:29,"",,0,2,0,2019-09-10 14:49:24
57886104,1,,,2,615,"<p>I have a graphql implementation, below is my .graphqls file</p>&#xA;&#xA;<pre><code>   schema { &#xA;   query: Query&#xA;&#xA;   } &#xA;&#xA;   type Product { &#xA;    id: Int! &#xA;    name: String! &#xA;    description: String!&#xA;    productTypes: [ProductType]!&#xA;  } &#xA;&#xA;  type City { &#xA;    id: Int! &#xA;    name: String!&#xA;  }&#xA;&#xA;  type ProductType { &#xA;    id: Int! &#xA;    type: String!&#xA;    product: Int&#xA;  }&#xA;&#xA;  type Query {&#xA;    products: [Product]!&#xA;    cities: [City]!&#xA;    productTypes: [ProductType]!&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>This is my query resolver code</p>&#xA;&#xA;<pre><code>   public class Query implements GraphQLQueryResolver {&#xA;&#xA;&#xA;      @Autowired&#xA;      ProductRespository productRespository;&#xA;&#xA;      @Autowired&#xA;      EntityManager em;&#xA;&#xA;      @Autowired&#xA;      CityRepository cityRepository;&#xA;&#xA;      @Autowired&#xA;      ProductTypeRepository productTypeRepository;&#xA;&#xA;&#xA;&#xA;      public List&lt;Map&lt;String, Object&gt;&gt; products() {&#xA;           javax.persistence.Query q = em.createQuery(""select new &#xA;           map(p.name as productName, p.id as productId) from Product p"");&#xA;           List&lt;Map&lt;String, Object&gt;&gt; list = q.getResultList();&#xA;           return list;&#xA;&#xA;&#xA;      }&#xA;&#xA;     public Iterable&lt;City&gt; cities() {&#xA;         return cityRepository.findAll();&#xA;     }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>when I am running the application I am getting below error</p>&#xA;&#xA;<p>Type java.util.Map cannot be &#xA; mapped to a GraphQL type!  Since GraphQL-Java deals with erased types at &#xA; runtime, only non-parameterized classes can represent a GraphQL type.<br>&#xA; This allows for reverse-lookup by java class in interfaces and union &#xA; types</p>&#xA;&#xA;<p>So how I can handle this kind of return type in Query Section of .graphqls</p>&#xA;&#xA;<p>Thanks in Advance</p>&#xA;",1731485,,,,2019-09-11 09:30:56,"How to handle List<Map<String, Object>> return type from query resolver in .graphqls",<spring-boot><jpa><graphql>,0,1,0,2019-09-11 09:30:56
57891089,2,,57866214,0,,"<p>I dont have any idea of ApolloClient but i tried to run your query in <a href=""https://shopify-graphiql-app.shopifycloud.com/login%20link%20to%20install%20graphiql-app"" rel=""nofollow noreferrer"">shopify graphql app</a>. It return results with extensions. Please find screenshot below. Also You can put questions in <a href=""https://github.com/Shopify/storefront-api-examples/tree/master/react-apollo"" rel=""nofollow noreferrer"">ApolloClient</a> github.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/KSrVI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KSrVI.png"" alt=""enter image description here""></a></p>&#xA;",7860426,,,,2019-09-11 14:12:16,"",,0,2,0,2019-09-11 14:12:16
57924792,1,57926450,,2,1157,"<p>So i have a method that searches for anime by name, API is graphQL.&#xA;Here's the important part of the query</p>&#xA;&#xA;<pre><code>const searchQuery = this.state.searchString;&#xA;&#xA;var query = `query Search{&#xA;  # the rest of the query omitted for brevity&#xA;    media(type:ANIME, search: ${searchQuery} ){&#xA;  # ... &#xA;}&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>I'm getting two types of errors in response, first is when search string consists of multiple words separated by spaces - ""Syntax Error: Expected :, found )""</p>&#xA;&#xA;<p>Second when i search for single word - ""Field ""media"" argument ""search"" requires type String, found naruto.""</p>&#xA;&#xA;<p>What is the problem here? </p>&#xA;&#xA;<p>You can see full code here - <a href=""https://github.com/red4211/react-anime-search"" rel=""nofollow noreferrer"">https://github.com/red4211/react-anime-search</a> , app deployed to github pages, search API response goes to console - <a href=""https://red4211.github.io/react-anime-search/"" rel=""nofollow noreferrer"">https://red4211.github.io/react-anime-search/</a></p>&#xA;",6782875,,6024220,2019-09-13 15:31:14,2019-09-13 15:31:14,Template literal - getting error from API,<reactjs><graphql>,2,0,0,2019-09-13 13:43:23
57935372,1,,,1,205,"<p>I'm trying to get all recent branches and their <strong>first</strong> commit details. I came up with this query :</p>&#xA;&#xA;<pre><code>query ($owner: String!, $repo: String!, $after: String!) {&#xA;  repository(owner: $owner, name: $repo) {&#xA;    tags: refs(refPrefix: ""refs/heads/"", first: 100, after: $after) {&#xA;      edges {&#xA;        node {&#xA;          ...refInfo&#xA;        }&#xA;      }&#xA;      pageInfo {&#xA;        startCursor&#xA;        hasNextPage&#xA;        endCursor&#xA;      }&#xA;    }&#xA;  }&#xA;  rateLimit {&#xA;    limit&#xA;    cost&#xA;    remaining&#xA;    resetAt&#xA;  }&#xA;}&#xA;&#xA;fragment refInfo on Ref {&#xA;  name&#xA;  target {&#xA;    sha: oid&#xA;    ... on Commit {&#xA;      history(first: 10) {&#xA;        pageInfo {&#xA;          hasNextPage&#xA;          endCursor&#xA;        }&#xA;        edges {&#xA;          node {&#xA;            oid&#xA;            messageHeadline&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>but this would return all history commits even if they were not created in the branch. Any idea how to do that ? i believe some diff with base branch would be required but i have no idea how to do that</p>&#xA;",2326167,,,,2019-09-14 12:11:44,Get branches first commit using github graphql,<github><github-graphql>,0,0,0,2019-09-14 12:11:44
57937706,1,,,1,298,"<p>I am attempting to retrieve the release information for a particular version of Django. However, the release is always returning a null response. In the example below, I am trying to retrieve the information for <a href=""https://github.com/django/django/releases/1.11"" rel=""nofollow noreferrer"">Django's 1.11 release</a>:</p>&#xA;&#xA;<pre class=""lang-py prettyprint-override""><code>import os&#xA;import requests&#xA;&#xA;GITHUB_ACCESS_TOKEN = os.environ['GITHUB_ACCESS_TOKEN']&#xA;&#xA;def get_release_information():&#xA;    query = '''&#xA;    {&#xA;      repository(owner: ""django"", name: ""django"") {&#xA;        release(tagName: ""1.11"") {&#xA;          name&#xA;          tagName&#xA;          createdAt&#xA;        }&#xA;      }&#xA;    }&#xA;    '''&#xA;    response = requests.post(&#xA;        url='https://api.github.com/graphql',&#xA;        json={'query': query},&#xA;        headers={'Authorization': f'token {GITHUB_ACCESS_TOKEN}'}&#xA;    )&#xA;    pprint(response.json())&#xA;</code></pre>&#xA;&#xA;<p>The above returns:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""release"": null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Am I misunderstanding how to perform the GraphQL query? I can get this same query to work on my own personal public repository using the below query for <a href=""https://github.com/michaeljohnbarr/django-timezone-utils/releases/0.13"" rel=""nofollow noreferrer"">this release</a>:</p>&#xA;&#xA;<pre class=""lang-py prettyprint-override""><code>query = '''&#xA;{&#xA;  repository(owner: ""michaeljohnbarr"", name: ""django-timezone-utils"") {&#xA;    release(tagName: ""0.13"") {&#xA;      name&#xA;      tagName&#xA;      createdAt&#xA;    }&#xA;  }&#xA;}&#xA;'''&#xA;</code></pre>&#xA;&#xA;<p>My personal repository returns the following results:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""release"": {&#xA;        ""name"": ""Version 0.13"",&#xA;        ""tagName"": ""0.13"",&#xA;        ""createdAt"": ""2018-09-26T00:01:20Z""&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It doesn't make sense to me that the Github API v4 GraphQL library would treat 2 public repositories differently. My Github access token that I am using has full permissions to everything; I have a check in all possible permissions and sub-permissions.</p>&#xA;&#xA;<p><strong>Update:</strong> (2019-09-14)&#xA;There is a support forum for the Github's GraphQL API. I found <a href=""https://github.community/t5/GitHub-API-Development-and/Why-are-some-repos-releases-not-being-returned-via-GraphQL/m-p/21732"" rel=""nofollow noreferrer"">this thread</a> which identifies the same issue and have posted there as well.</p>&#xA;",2693385,,2693385,2019-09-14 18:36:37,2019-09-14 18:57:18,Github API v4 GraphQL not returning release by tagName,<graphql><github-api><github-api-v4>,1,0,0,2019-09-14 17:17:41
57951815,1,,,0,491,"<p>In my code I have created filter as:</p>&#xA;&#xA;<blockquote>&#xA;  <p>const myFilter: TableMyEntityFilterInput  = {targets: {contains: 'username'}};</p>&#xA;</blockquote>&#xA;&#xA;<p>'targets' field is an array:</p>&#xA;&#xA;<blockquote>&#xA;  <p>targets?: Array | null;</p>&#xA;</blockquote>&#xA;&#xA;<p>My objective is to fetch those records which has 'username' as an entry in 'targets' field.</p>&#xA;&#xA;<p>But it does't work. Empty array is fetched. But if I use similar criteria on a simple string field, it works.</p>&#xA;&#xA;<p>How to get it working for array field?</p>&#xA;&#xA;<p>Edit:</p>&#xA;&#xA;<p>'targets' sample value:</p>&#xA;&#xA;<blockquote>&#xA;  <p>[ { ""S"" : ""[\""Messi\"",\""Ronaldo\""]"" }]</p>&#xA;</blockquote>&#xA;",2444661,,,,2019-09-20 17:53:03,Appsync graphql: How to filter based on entry in an array field,<graphql><aws-appsync>,1,0,0,2019-09-16 07:01:10
57974001,1,,,1,628,"<p>I have the following GraphQL query:</p>&#xA;&#xA;<pre><code>query {&#xA;  tags(limit: 9) {&#xA;    id&#xA;    tag&#xA;    items {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As you can see, <code>items</code> is a collection of values. I'd like to sort this collection by <code>items</code> count; each <code>tag</code> can have multiple <code>items</code>.</p>&#xA;&#xA;<p>I couldn't find any example/documentation about this case, any idea?</p>&#xA;",6442285,,,,2019-09-23 10:54:15,Strapi GraphQL - Sort by items count subquery,<graphql><graphql-js><strapi>,0,0,0,2019-09-17 12:14:46
57975094,1,57976481,,1,1594,"<p>I've spent quite a bit of time reading through the GraphQL tutorials but unfortunately they don't seem to cover things in quite enough depth for me to get my head around. I'd really appreciate some help with this real world example.</p>&#xA;&#xA;<p>In the examples the queries are placed at the root of the resolver object; I can get this to work fine for single level queries. When I attempt to resolve a nested query however the nested resolver never gets called. What I'm massively confused by is every tutorial I find that isn't issued on the graphql website put in a Query object and nest their queries underneeth that, not root level.</p>&#xA;&#xA;<p>Consider the following Schema:</p>&#xA;&#xA;<pre><code>type Product {&#xA;  id: String!&#xA;  retailerId: String!&#xA;  title: String!&#xA;  description: String&#xA;  price: String!&#xA;  currency: String!&#xA;}&#xA;&#xA;type OrderLine {&#xA;  product: Product!&#xA;  quantity: Int!&#xA;}&#xA;&#xA;type Order {&#xA;  id: String!&#xA;  retailerId: String!&#xA;  orderDate: Date!&#xA;  orderLines: [OrderLine!]!&#xA;}&#xA;&#xA;type Query {&#xA;  product(id: String!): Product&#xA;  order(id: String!): Order&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the following query:</p>&#xA;&#xA;<pre><code>query {&#xA;    order(id: ""1"") {&#xA;        id&#xA;        orderLines {&#xA;            quantity&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have tried multiple versions of implementing the resolvers (just test data for now) and none seem to return what I exect. This is my current resolver implementation:</p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;  OrderLine: {&#xA;    quantity: () =&gt; 1,&#xA;  },&#xA;  Order: {&#xA;    orderLines: (parent: any, args: any) =&gt; { console.log(""Calling order lines""); return []; },&#xA;  },&#xA;  Query: {&#xA;    product(parent, args, ctx, other) {&#xA;      return { id: args.id.toString(), test: true };&#xA;    },&#xA;    order: ({ id }) =&gt; { console.log(""Calling order 1""); return { id: id.toString(), testOrder: true, orderLines: [] }; },&#xA;  },&#xA;  order: ({ id }) =&gt; { console.log(""Calling order 2""); return { id: id.toString(), testOrder: true, orderLines: [] }; },&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>In the console I can oberse the ""Calling order 2"" log message, there are no logs to ""Calling order lines"" and the order lines array is empty.</p>&#xA;&#xA;<p>So two part question:</p>&#xA;&#xA;<p>1) Why does it hit ""Calling order 2"" and not ""Calling order 1"" in the above example?</p>&#xA;&#xA;<p>2) Why won't the above work for the nested query Order.OrderLines?</p>&#xA;&#xA;<p>Thanks in advance!</p>&#xA;",2083887,,,,2019-09-17 15:14:36,GraphQL Resolver Problems,<node.js><graphql>,2,1,0,2019-09-17 13:16:15
57976538,2,,57975094,0,,"<p>In query </p>&#xA;&#xA;<pre><code>type Query {&#xA;  product(id: String!): Product&#xA;  order(id: String!): Order&#xA;  users: User&#xA;}&#xA;schema {&#xA;    query: Query&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In resolvers </p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;  order: ({ id }) =&gt; function&#xA;  product: ({ id }) =&gt; function&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Graphql work on query resolver concept. If you want to any query(example users) you must have &#xA;resolver(ie users) which return User having definition in type User.&#xA;Graphql query is interactive and case sensitive&#xA;The next step is to implement the resolver function for the order/product query. &#xA;In fact, one thing we haven’t mentioned yet is that not only root fields,&#xA; but virtually all fields on the types in a GraphQL schema have resolver functions.</p>&#xA;&#xA;<p>1) Why does it hit ""Calling order 2"" and not ""Calling order 1"" in the above example?&#xA; In this Query</p>&#xA;&#xA;<pre><code> query {&#xA;    order(id: ""1"") {&#xA;        id&#xA;        orderLines {&#xA;            quantity&#xA;        }&#xA;    }&#xA; } &#xA;</code></pre>&#xA;&#xA;<p>then it go to order which return Order with define type</p>&#xA;&#xA;<p>2) Why won't the above work for the nested query Order.OrderLines?</p>&#xA;&#xA;<pre><code>You can only use two query first order and second product only as per your schema&#xA;</code></pre>&#xA;&#xA;<p>Please check doc for nested query for this requirement.</p>&#xA;",10893484,,,,2019-09-17 14:31:13,"",,0,0,0,2019-09-17 14:31:13
57987992,2,,57954689,1,,"<p>This question was raised and has been responded in the GitHub Amplify CLI repo.&#xA;<a href=""https://github.com/aws-amplify/amplify-cli/issues/2307"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/2307</a> </p>&#xA;",7238958,,,,2019-09-18 08:10:18,"",,0,2,0,2019-09-18 08:10:18
57988750,1,57993729,,1,410,"<p>We are implementing GraphQL service, which stands in front of several backend microservices. </p>&#xA;&#xA;<p>For example, we have a <code>Product</code> and each product has a list of history orders. Our backend server provides <strong>two</strong> REST APIs, one for product detail data, the other returns the history order list of a product.</p>&#xA;&#xA;<p>Our client app has <strong>two</strong> pages: one is the product detail page, the other is the history order list of a product.</p>&#xA;&#xA;<p>So, in the product detail page, we can only retrieve the detail data of the product, while in the order list page, we only need the list data.</p>&#xA;&#xA;<p>The GraphQL schema like below:</p>&#xA;&#xA;<pre><code>type ProductOrder {&#xA;    createAt: Date!&#xA;    userName: String!&#xA;    count: Int&#xA;}&#xA;type Product {&#xA;    productId: ID&#xA;    name: String&#xA;    orders: [ProductOrder!]!&#xA;}&#xA;Query {&#xA;    product(productId: ID): Product&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and resolvers are like this</p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;    Query: {&#xA;        product(_, { productId}){&#xA;            // fetch detail data from backend API&#xA;            return await someService.getProductDetail(productId);&#xA;        }&#xA;    },&#xA;    Product: {&#xA;        orders(product){&#xA;            // fetch order list from another API&#xA;            return await someService.getProductOrders(product.productId);&#xA;        }&#xA;    }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>But we find a potential over-request using the above code.</p>&#xA;&#xA;<p>When we request the order list data from the order list page, we have to request the product detail API first, after then we can request the order list API. But we <strong>ONLY</strong> need the order list data, no product data at all. In this case, we think the product detail request is useless, how can we eliminate this request?</p>&#xA;&#xA;<p>It could be better if we can send only <strong>one</strong> request to retrieve the order list data.</p>&#xA;",2583885,,,,2019-09-18 13:18:04,GraphQL fetch data at Query level results in redundant/useless request,<graphql><graphql-js><apollo-server><express-graphql>,1,0,0,2019-09-18 08:51:24
57993729,2,,57988750,2,,"<h2>A) Structure your schema differently:</h2>&#xA;&#xA;<p><strong>Version 1: Don't make ProductOrder a field on Product</strong></p>&#xA;&#xA;<pre><code>type Query {&#xA;  product(productId: ID): Product&#xA;  productOrders(productId: ID): [ProductOrder!]&#xA;}&#xA;&#xA;type Product {&#xA;  productId: ID&#xA;  name: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Version 2: Make details a subfield in Product</strong></p>&#xA;&#xA;<pre><code>type Product {&#xA;    productId: ID&#xA;    details: ProductDetails!&#xA;    orders: [ProductOrder!]!&#xA;}&#xA;&#xA;type ProductDetails {&#xA;  name: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>With resolvers:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const resolvers = {&#xA;  Query: {&#xA;    product: (_, { productId }) =&gt; productId,&#xA;  },&#xA;  Product: {&#xA;    id: productId =&gt; productId,&#xA;    details: productId =&gt; someService.getProductDetail(productId),&#xA;    orders: productId =&gt; someService.getProductOrders(productId),&#xA;  },&#xA;};&#xA;</code></pre>&#xA;&#xA;<h2>B) Skip fetch if no details are requested</h2>&#xA;&#xA;<p>You can use the fourth argument to the resolver to inspect the queried subfields. Ideally you use a library for that. I remember us doing that when our frontend would only request the <code>id</code> field of an object. If so we could simply resolve with <code>{ id }</code>.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import { fieldList } from 'graphql-fields-list';&#xA;&#xA;const resolvers = {&#xA;  Query: {&#xA;    product(_, { productId }, ctx, resolveInfo) {&#xA;      const fields = fieldList(resolveInfo);&#xA;      if (fields.filter(f =&gt; f !== 'orders' || f !== 'id').length === 0) {&#xA;        return { productId };&#xA;      }&#xA;      return someService.getProductDetail(productId);&#xA;    },&#xA;  },&#xA;};&#xA;</code></pre>&#xA;&#xA;<h2>C) Delay fetch until subfield is queried</h2>&#xA;&#xA;<p>This is relatively easy to do if you are already using Dataloader. Instead of fetching the details right away in the query resolver you again pass down the id and let each of the details fields fetch the details themselves. This seems counterintuitve but Dataloader will make sure your service is only queried once:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const resolvers = {&#xA;  Query: {&#xA;    product: (_, { productId }) =&gt; productId,&#xA;  },&#xA;  Product: {&#xA;    id: productId =&gt; productId,&#xA;    // same for all other details fields&#xA;    name: (productId, args, ctx) =&gt; ctx.ProductDetailsByIdLoader.load(productId)&#xA;      .then(product =&gt; product.name),&#xA;    orders: productId =&gt; someService.getProductOrders(productId),&#xA;  },&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>If you don't have dataloader you can build a simple proxy:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>class ProductProxy {&#xA;  constructor(id) {&#xA;    this.id = id;&#xA;    let cached = null;&#xA;    this.getDetails = () =&gt; {&#xA;      if (cached === null) {&#xA;        cached = someService.getProductDetails(productId)&#xA;      }&#xA;      return cached;&#xA;    }&#xA;  }&#xA;  // args not needed but for you to see how graphql-js works&#xA;  productId(args, ctx, resolveInfo) {&#xA;    return this.id;&#xA;  }&#xA;  name(args, ctx, resolveInfo) {&#xA;    return this.getDetails().then(details =&gt; details.name);&#xA;  }&#xA;  orders(args, ctx, resolveInfo) {&#xA;    return someService.getProductOrders(this.id);&#xA;  }&#xA;}&#xA;&#xA;const resolvers = {&#xA;  Query: {&#xA;    product: (_, { productId }) =&gt; new ProductProxy(productId),&#xA;  },&#xA;  // No product resolvers need here&#xA;};&#xA;</code></pre>&#xA;",3849167,,,,2019-09-18 13:18:04,"",,0,4,0,2019-09-18 13:18:04
58008973,2,,46669560,-1,,"<pre><code>{&#xA;  search(first: 1, type: REPOSITORY, query: ""language:C"") {&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          name&#xA;          descriptionHTML&#xA;          stargazers {&#xA;            totalCount&#xA;          }&#xA;          forks {&#xA;            totalCount&#xA;          }&#xA;          object(expression: ""master:"") {&#xA;            ... on Tree {&#xA;              entries {&#xA;                name&#xA;                object {&#xA;                  ... on Tree {&#xA;                    entries {&#xA;                      name&#xA;                      object {&#xA;                        ... on Tree {&#xA;                          entries {&#xA;                            name&#xA;                          }&#xA;                        }&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;",12083308,,,,2019-09-19 10:27:22,"",,0,1,0,2019-09-19 10:27:22
58020633,1,,,0,42,"<p>So I'm completely new to GraphQL, could anyone tell me how to change below code into retrieving only public repos from my account?</p>&#xA;&#xA;<p>I tried to use ""search"" attribute but I can't get it working.</p>&#xA;&#xA;<p>Thanks</p>&#xA;&#xA;<pre><code>  const {&#xA;    github: {&#xA;      repositoryOwner: {&#xA;        repositories: { edges },&#xA;      },&#xA;    },&#xA;  } = useStaticQuery(graphql`&#xA;    {&#xA;      github {&#xA;        repositoryOwner(login: ""SzBor"") {&#xA;          repositories(first: 6, orderBy: { field: CREATED_AT, direction: ASC }) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;                name&#xA;                url&#xA;                description&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  `)&#xA;</code></pre>&#xA;",12093087,,23528,2019-09-20 01:27:01,2019-09-20 11:55:35,How to fetch only public repositories from my Github account,<graphql><github-api>,1,1,0,2019-09-20 01:25:15
58020691,2,,58020633,0,,"<p>you can use the arguments <code>privacy: PUBLIC</code>on <code>repositories</code> Ex:</p>&#xA;&#xA;<pre><code>  const {&#xA;    github: {&#xA;      repositoryOwner: {&#xA;        repositories: { edges },&#xA;      },&#xA;    },&#xA;  } = useStaticQuery(graphql`&#xA;    {&#xA;      github {&#xA;        repositoryOwner(login: ""SzBor"") {&#xA;          repositories(first: 6, privacy: PUBLIC, orderBy: { field: CREATED_AT, direction: ASC }) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;                name&#xA;                url&#xA;                description&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  `)&#xA;</code></pre>&#xA;&#xA;<p>The stranger is that the (<a href=""https://developer.github.com/v4/interface/repositoryowner/#fields"" rel=""nofollow noreferrer"">API V4 document</a>) is not updated with this information, but you can test on <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">explorer</a> :)</p>&#xA;",2173983,,2173983,2019-09-20 11:55:35,2019-09-20 11:55:35,"",,0,0,0,2019-09-20 01:35:22
58020904,1,58020946,,0,476,"<p>As you know in appollo server you can define the server's schema by passing a string into gql.</p>&#xA;&#xA;<pre><code>const typeDefs = gql`&#xA;type Query {&#xA;  getBtcRates: [BtcRate]&#xA;}&#xA;`'&#xA;</code></pre>&#xA;&#xA;<p>But what is gql? Is it a function or a method?</p>&#xA;&#xA;<p>It's definition</p>&#xA;&#xA;<pre><code>export const gql: (&#xA;  template: TemplateStringsArray | string,&#xA;  ...substitutions: any[]&#xA;) =&gt; DocumentNode = gqlTag;&#xA;</code></pre>&#xA;&#xA;<p>To me it looks more like a function, but this syntax is unknown to me, so wonder what exactly it is and why this is written this way.</p>&#xA;",1027033,,,,2019-09-20 02:17:00,Typescript Syntax in Apollo server,<typescript><apollo><apollo-server>,1,1,0,2019-09-20 02:11:29
58045068,2,,58042147,2,,"<p>Technically you could use <a href=""https://graphql.github.io/graphql-spec/June2018/#sec-String-Value"" rel=""nofollow noreferrer"">block string notation</a> to get around this issue. However, you really should supply dynamic input values using <a href=""https://graphql.github.io/graphql-spec/June2018/#sec-Language.Variables"" rel=""nofollow noreferrer"">variables</a> instead of string interpolation. This way you can easily provide any of sort of values (strings, numbers, objects, etc.) and GraphQL will parse them accordingly -- including strings with line breaks.</p>&#xA;&#xA;<pre><code>const query = `&#xA;  mutation MyMutation ($chapterId: ID!, $content: String!, $title: String!) {&#xA;    updateChapter(input: {&#xA;      where: {&#xA;        id: $chapterId&#xA;      },&#xA;      data: {&#xA;        content: $content&#xA;        title: $title&#xA;      }&#xA;    }) {&#xA;      chapter{&#xA;        title&#xA;        id&#xA;        content&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;const variables = {&#xA;  chapterId: '...',&#xA;  content: '...',&#xA;  title: '...',&#xA;}&#xA;const res = await strapi.request(""post"", ""/graphql"", {&#xA;  data: {&#xA;    query,&#xA;    variables,&#xA;  },&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>Note that <code>$chapterId</code> may need to be of the type <code>String!</code> instead if that's what's called for in the schema. Since variables can also be input object types, instead of providing 3 different variables, you could also provide a single variable to be passed to the <code>input</code> argument instead:</p>&#xA;&#xA;<pre><code>const query = `&#xA;  mutation MyMutation ($input: SomeInputObjectTypeHere!) {&#xA;    updateChapter(input: $input) {&#xA;      chapter{&#xA;        title&#xA;        id&#xA;        content&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;const variables = {&#xA;  input: {&#xA;    where: {&#xA;      id: '...',&#xA;    },&#xA;    data: {&#xA;      content: '...',&#xA;      title: '...',&#xA;    },&#xA;  },&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Again, just replace <code>SomeInputObjectTypeHere</code> with the appropriate type in your schema.</p>&#xA;",6024220,,6024220,2019-09-22 04:50:22,2019-09-22 04:50:22,"",,0,2,0,2019-09-22 00:10:39
58045857,1,,,0,225,"<p>I've just started using Shopify's GraphQL - looks very helpful, I want to gather all users that have purchased a specific variant.</p>&#xA;&#xA;<p>So in Postman, I've got my request, which is getting the orders along with the variant IDs.</p>&#xA;&#xA;<p>However I want to get only orders with specific variant id.</p>&#xA;&#xA;<p>I'm trying this request, but I keep getting <code>Parse error on \""gid://shopify/ProductVariant/123456\"" (STRING) at [9, 21]"",</code></p>&#xA;&#xA;<p>And then when I try the query on the <a href=""https://help.shopify.com/en/api/graphql-admin-api/graphiql-explorer"" rel=""nofollow noreferrer"">explorer on the Shopify page</a>, it says <code>Expected Name Found String</code>.</p>&#xA;&#xA;<p>Any ideas what the correct should be?:</p>&#xA;&#xA;<pre><code>{&#xA;  orders(first: 5) {&#xA;    edges {&#xA;      node {&#xA;        lineItems(first: 5) {&#xA;          edges {&#xA;            node {&#xA;              variant {&#xA;                id: ""gid://shopify/ProductVariant/123456""&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3033691,,,,2019-09-22 05:46:02,Shopify - GraphQL - Expected Name Found String,<graphql><shopify>,1,3,0,2019-09-22 03:44:14
58046165,2,,58045857,0,,"<p>Try check shopify GrapQl use age documentation. From what I can see from the code posted above maybe the it is requesting for a data type Name and found a data of type String instead. And moreover your arguments should be inside( ) instead of the curly braces{ }.</p>&#xA;&#xA;<p>Something  like this&#xA;    Variant(id: ""gid://shopify/ProductVariant/123456"")&#xA;    {&#xA;     ...query string&#xA;    }</p>&#xA;",8723519,,8723519,2019-09-22 05:46:02,2019-09-22 05:46:02,"",,0,0,0,2019-09-22 04:58:55
58046449,2,,57798437,1,,"<p>While creating the graphql schema, you can define the instrumentation type.&#xA;While every graphql execution, get the execution result which has the tracing information in details about fields ,time and resolver.&#xA;for more information please refer my GitHub account : AnkushNakaskar with project ""springbootspqrgraphql""&#xA;For tracing : please add ""TracingInstrumentation"" for tracing.</p>&#xA;",7975906,,,,2019-09-22 05:58:45,"",,0,0,0,2019-09-22 05:58:45
58050329,1,58051017,,6,8364,"<p>I'd like to use an array inside a GraphQL query variable so that I can get the data of more than one product from a single query with Gatsby however at the moment I get errors.</p>&#xA;&#xA;<p>My graphQL query looks like:</p>&#xA;&#xA;<pre><code>query ($id: [String!]) {&#xA;  shopifyProduct(handle: {eq: $id}) {&#xA;    handle&#xA;    id&#xA;    title&#xA;    handle&#xA;    productType&#xA;    shopifyId&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and my Query Variable looks like:</p>&#xA;&#xA;<pre><code>{&#xA;  ""id"": [""liner-jacket"", ""pocket-t-shirt""]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The desired response would be (something like):</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""shopifyProduct"": {&#xA;      ""handle"": ""liner-jacket"",&#xA;      ""id"": ""Shopify__Product__hopbjidjoqjndadnawdawda123123="",&#xA;      ""title"": ""Liner Jacket"",&#xA;      ""productType"": ""jacket"",&#xA;      ""shopifyId"": ""hopbjidjoqjndadnawdawda123123=""&#xA;    },&#xA;    ""shopifyProduct"": {&#xA;      ""handle"": ""pocket-t-shirt"",&#xA;      ""id"": ""Shopify__Product__iajwdoiajdoadjwaowda4023123="",&#xA;      ""title"": ""Pocket T-Shirt"",&#xA;      ""productType"": ""t-shirt"",&#xA;      ""shopifyId"": ""iajwdoiajdoadjwaowda4023123=""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",945423,,,,2019-09-22 16:06:50,How to use an array inside a GraphQL Query Variable,<graphql><gatsby><graphql-js>,1,0,0,2019-09-22 14:50:15
58055432,2,,58055257,1,,"<p>CRUD example extracted from <a href=""https://github.com/graphql-go/graphql/tree/master/examples/crud"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;&#xA;<pre><code>package main&#xA;&#xA;import (&#xA;    ""encoding/json""&#xA;    ""fmt""&#xA;    ""math/rand""&#xA;    ""net/http""&#xA;    ""time""&#xA;&#xA;    ""github.com/graphql-go/graphql""&#xA;)&#xA;&#xA;// Product contains information about one product&#xA;type Product struct {&#xA;    ID    int64   `json:""id""`&#xA;    Name  string  `json:""name""`&#xA;    Info  string  `json:""info,omitempty""`&#xA;    Price float64 `json:""price""`&#xA;}&#xA;&#xA;var products = []Product{&#xA;    {&#xA;        ID:    1,&#xA;        Name:  ""Chicha Morada"",&#xA;        Info:  ""Chicha morada is a beverage originated in the Andean regions of Perú but is actually consumed at a national level (wiki)"",&#xA;        Price: 7.99,&#xA;    },&#xA;    {&#xA;        ID:    2,&#xA;        Name:  ""Chicha de jora"",&#xA;        Info:  ""Chicha de jora is a corn beer chicha prepared by germinating maize, extracting the malt sugars, boiling the wort, and fermenting it in large vessels (traditionally huge earthenware vats) for several days (wiki)"",&#xA;        Price: 5.95,&#xA;    },&#xA;    {&#xA;        ID:    3,&#xA;        Name:  ""Pisco"",&#xA;        Info:  ""Pisco is a colorless or yellowish-to-amber colored brandy produced in winemaking regions of Peru and Chile (wiki)"",&#xA;        Price: 9.95,&#xA;    },&#xA;}&#xA;&#xA;var productType = graphql.NewObject(&#xA;    graphql.ObjectConfig{&#xA;        Name: ""Product"",&#xA;        Fields: graphql.Fields{&#xA;            ""id"": &amp;graphql.Field{&#xA;                Type: graphql.Int,&#xA;            },&#xA;            ""name"": &amp;graphql.Field{&#xA;                Type: graphql.String,&#xA;            },&#xA;            ""info"": &amp;graphql.Field{&#xA;                Type: graphql.String,&#xA;            },&#xA;            ""price"": &amp;graphql.Field{&#xA;                Type: graphql.Float,&#xA;            },&#xA;        },&#xA;    },&#xA;)&#xA;&#xA;var queryType = graphql.NewObject(&#xA;    graphql.ObjectConfig{&#xA;        Name: ""Query"",&#xA;        Fields: graphql.Fields{&#xA;            /* Get (read) single product by id&#xA;               http://localhost:8080/product?query={product(id:1){name,info,price}}&#xA;            */&#xA;            ""product"": &amp;graphql.Field{&#xA;                Type:        productType,&#xA;                Description: ""Get product by id"",&#xA;                Args: graphql.FieldConfigArgument{&#xA;                    ""id"": &amp;graphql.ArgumentConfig{&#xA;                        Type: graphql.Int,&#xA;                    },&#xA;                },&#xA;                Resolve: func(p graphql.ResolveParams) (interface{}, error) {&#xA;                    id, ok := p.Args[""id""].(int)&#xA;                    if ok {&#xA;                        // Find product&#xA;                        for _, product := range products {&#xA;                            if int(product.ID) == id {&#xA;                                return product, nil&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                    return nil, nil&#xA;                },&#xA;            },&#xA;            /* Get (read) product list&#xA;               http://localhost:8080/product?query={list{id,name,info,price}}&#xA;            */&#xA;            ""list"": &amp;graphql.Field{&#xA;                Type:        graphql.NewList(productType),&#xA;                Description: ""Get product list"",&#xA;                Resolve: func(params graphql.ResolveParams) (interface{}, error) {&#xA;                    return products, nil&#xA;                },&#xA;            },&#xA;        },&#xA;    })&#xA;&#xA;var mutationType = graphql.NewObject(graphql.ObjectConfig{&#xA;    Name: ""Mutation"",&#xA;    Fields: graphql.Fields{&#xA;        /* Create new product item&#xA;        http://localhost:8080/product?query=mutation+_{create(name:""Inca Kola"",info:""Inca Kola is a soft drink that was created in Peru in 1935 by British immigrant Joseph Robinson Lindley using lemon verbena (wiki)"",price:1.99){id,name,info,price}}&#xA;        */&#xA;        ""create"": &amp;graphql.Field{&#xA;            Type:        productType,&#xA;            Description: ""Create new product"",&#xA;            Args: graphql.FieldConfigArgument{&#xA;                ""name"": &amp;graphql.ArgumentConfig{&#xA;                    Type: graphql.NewNonNull(graphql.String),&#xA;                },&#xA;                ""info"": &amp;graphql.ArgumentConfig{&#xA;                    Type: graphql.String,&#xA;                },&#xA;                ""price"": &amp;graphql.ArgumentConfig{&#xA;                    Type: graphql.NewNonNull(graphql.Float),&#xA;                },&#xA;            },&#xA;            Resolve: func(params graphql.ResolveParams) (interface{}, error) {&#xA;                rand.Seed(time.Now().UnixNano())&#xA;                product := Product{&#xA;                    ID:    int64(rand.Intn(100000)), // generate random ID&#xA;                    Name:  params.Args[""name""].(string),&#xA;                    Info:  params.Args[""info""].(string),&#xA;                    Price: params.Args[""price""].(float64),&#xA;                }&#xA;                products = append(products, product)&#xA;                return product, nil&#xA;            },&#xA;        },&#xA;&#xA;        /* Update product by id&#xA;           http://localhost:8080/product?query=mutation+_{update(id:1,price:3.95){id,name,info,price}}&#xA;        */&#xA;        ""update"": &amp;graphql.Field{&#xA;            Type:        productType,&#xA;            Description: ""Update product by id"",&#xA;            Args: graphql.FieldConfigArgument{&#xA;                ""id"": &amp;graphql.ArgumentConfig{&#xA;                    Type: graphql.NewNonNull(graphql.Int),&#xA;                },&#xA;                ""name"": &amp;graphql.ArgumentConfig{&#xA;                    Type: graphql.String,&#xA;                },&#xA;                ""info"": &amp;graphql.ArgumentConfig{&#xA;                    Type: graphql.String,&#xA;                },&#xA;                ""price"": &amp;graphql.ArgumentConfig{&#xA;                    Type: graphql.Float,&#xA;                },&#xA;            },&#xA;            Resolve: func(params graphql.ResolveParams) (interface{}, error) {&#xA;                id, _ := params.Args[""id""].(int)&#xA;                name, nameOk := params.Args[""name""].(string)&#xA;                info, infoOk := params.Args[""info""].(string)&#xA;                price, priceOk := params.Args[""price""].(float64)&#xA;                product := Product{}&#xA;                for i, p := range products {&#xA;                    if int64(id) == p.ID {&#xA;                        if nameOk {&#xA;                            products[i].Name = name&#xA;                        }&#xA;                        if infoOk {&#xA;                            products[i].Info = info&#xA;                        }&#xA;                        if priceOk {&#xA;                            products[i].Price = price&#xA;                        }&#xA;                        product = products[i]&#xA;                        break&#xA;                    }&#xA;                }&#xA;                return product, nil&#xA;            },&#xA;        },&#xA;&#xA;        /* Delete product by id&#xA;           http://localhost:8080/product?query=mutation+_{delete(id:1){id,name,info,price}}&#xA;        */&#xA;        ""delete"": &amp;graphql.Field{&#xA;            Type:        productType,&#xA;            Description: ""Delete product by id"",&#xA;            Args: graphql.FieldConfigArgument{&#xA;                ""id"": &amp;graphql.ArgumentConfig{&#xA;                    Type: graphql.NewNonNull(graphql.Int),&#xA;                },&#xA;            },&#xA;            Resolve: func(params graphql.ResolveParams) (interface{}, error) {&#xA;                id, _ := params.Args[""id""].(int)&#xA;                product := Product{}&#xA;                for i, p := range products {&#xA;                    if int64(id) == p.ID {&#xA;                        product = products[i]&#xA;                        // Remove from product list&#xA;                        products = append(products[:i], products[i+1:]...)&#xA;                    }&#xA;                }&#xA;&#xA;                return product, nil&#xA;            },&#xA;        },&#xA;    },&#xA;})&#xA;&#xA;var schema, _ = graphql.NewSchema(&#xA;    graphql.SchemaConfig{&#xA;        Query:    queryType,&#xA;        Mutation: mutationType,&#xA;    },&#xA;)&#xA;&#xA;func executeQuery(query string, schema graphql.Schema) *graphql.Result {&#xA;    result := graphql.Do(graphql.Params{&#xA;        Schema:        schema,&#xA;        RequestString: query,&#xA;    })&#xA;    if len(result.Errors) &gt; 0 {&#xA;        fmt.Printf(""errors: %v"", result.Errors)&#xA;    }&#xA;    return result&#xA;}&#xA;&#xA;func main() {&#xA;    http.HandleFunc(""/product"", func(w http.ResponseWriter, r *http.Request) {&#xA;        result := executeQuery(r.URL.Query().Get(""query""), schema)&#xA;        json.NewEncoder(w).Encode(result)&#xA;    })&#xA;&#xA;    fmt.Println(""Server is running on port 8080"")&#xA;    http.ListenAndServe("":8080"", nil)&#xA;}&#xA;</code></pre>&#xA;&#xA;<h2>Create</h2>&#xA;&#xA;<p><code>http://localhost:8080/product?query=mutation+_{create(name:""Inca Kola"",info:""Inca Kola is a soft drink that was created in Peru in 1935 by British immigrant Joseph Robinson Lindley using lemon verbena (wiki)"",price:1.99){id,name,info,price}}</code></p>&#xA;&#xA;<h2>Read</h2>&#xA;&#xA;<ul>&#xA;<li>Get single product by id: <code>http://localhost:8080/product?query={product(id:1){name,info,price}}</code></li>&#xA;<li>Get product list: <code>http://localhost:8080/product?query={list{id,name,info,price}}</code></li>&#xA;</ul>&#xA;&#xA;<h2>Update</h2>&#xA;&#xA;<p><code>http://localhost:8080/product?query=mutation+_{update(id:1,price:3.95){id,name,info,price}}</code></p>&#xA;&#xA;<h2>Delete</h2>&#xA;&#xA;<p><code>http://localhost:8080/product?query=mutation+_{delete(id:1){id,name,info,price}}</code></p>&#xA;",1241805,,,,2019-09-23 03:50:33,"",,0,0,0,2019-09-23 03:50:33
58058535,1,58260532,,10,1276,"<p>In the Rest v3, I could easily query a commit and get the changed files and patch for each file: <a href=""https://developer.github.com/v3/repos/commits/#get-a-single-commit"" rel=""noreferrer"">https://developer.github.com/v3/repos/commits/#get-a-single-commit</a></p>&#xA;&#xA;<p>I don't seem to be able to retrieve this info using the new v4 graphQL, does anyone have a clue how?</p>&#xA;",259226,,,,2019-10-06 19:26:16,Get commit changed files & patch using github API v4 graphQL,<graphql><github-api>,1,0,0,2019-09-23 08:34:54
58081587,1,,,0,1563,"<p>I am dealing with data which is structured (by a third party) with special characters; like so: </p>&#xA;&#xA;<pre><code>&#xA;""pageFansGenderAge"": {&#xA;      ""current"": {&#xA;        ""U.13-17"": 1,&#xA;        ""U.55-64"": 246,&#xA;        ""M.55-64"": 11925,&#xA;        ""U.35-44"": 370,&#xA;        ""F.45-54"": 16443,&#xA;        ""M.18-24"": 8996,&#xA;        ""M.35-44"": 20641,&#xA;        ""F.25-34"": 11687,&#xA;        ""U.65+"": 148,&#xA;        ""U.18-24"": 42,&#xA;        ""M.25-34"": 22341,&#xA;        ""F.13-17"": 177,&#xA;        ""U.45-54"": 415,&#xA;        ""F.65+"": 5916,&#xA;        ""F.55-64"": 12172,&#xA;        ""M.13-17"": 141,&#xA;        ""M.65+"": 6576,&#xA;        ""F.35-44"": 14491,&#xA;        ""U.25-34"": 178,&#xA;        ""M.45-54"": 17979,&#xA;        ""F.18-24"": 5787&#xA;      },&#xA;&#xA;</code></pre>&#xA;&#xA;<p>GraphQL is throwing errors as it can't accept special characters , the full-stop and the hyphen are causing issues. Is there a known way to parse these in to stop the errors? Simply removing all the special characters (obvs) just returns null values. </p>&#xA;&#xA;<p>Thanks in advance. </p>&#xA;",10361763,,,,2019-09-24 14:00:36,Dealing with special characters from data schema in GraphQL,<api><graphql><schema><special-characters>,1,0,0,2019-09-24 13:35:57
58087897,1,,,0,23,"<p>I'm trying to create a Union that takes object types along with custom scalar types (like <code>JSON</code>).&#xA;For example:</p>&#xA;&#xA;<pre><code>union MyUnion = MyType | JSON&#xA;type MyResult {&#xA;  id: ID!&#xA;  result: MyUnion!&#xA;}&#xA;type Query {&#xA;  result: MyResult!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But when I add it to Apollo Server I get this error&#xA;<code>Union type MyUnion can only include Object types, it cannot include JSON.</code>.  </p>&#xA;&#xA;<p>2 questions:<br>&#xA;* is it an issue in Apollo Server (couldn't find it in GQL specs)<br>&#xA;* can this be done with Union or are there any other legit ways? </p>&#xA;",2292639,,,,2019-09-24 20:46:03,Is it possible to mix Scalar and Object types in Union,<graphql><apollo-server>,0,3,0,2019-09-24 20:46:03
58091248,1,58091481,,1,1361,"<p>I have just started learning graphql and I created a query that returns a list of first 10 closed issues along with some attributes. To my surprise, the response objects in JSON that I get are sometimes empty and sometimes they are non empty. The response is random.I have also tested with postman. Since I am mapping the json response to Java classes using jackson and performing some operations, exceptions are thrown when handling empty objects. </p>&#xA;&#xA;<p>1)Basically, I want a non-empty objects of closed issues. Is anything wrong in the query? If yes, can somebody tell the correct query?</p>&#xA;&#xA;<p>2) Also, I would like to know the logic behind returning empty node objects</p>&#xA;&#xA;<p>Query Used</p>&#xA;&#xA;<pre><code>&#xA;{&#xA;  search(first: 20, type: ISSUE, query: ""created:&lt;2019-09-21 state:closed"") {&#xA;    issueCount&#xA;    edges {&#xA;      node {&#xA;        ... on Issue {&#xA;          createdAt&#xA;          closedAt&#xA;          title&#xA;          url&#xA;          repository {&#xA;            name&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Response 1</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;        ""search"": {&#xA;            ""issueCount"": 92339271,&#xA;            ""edges"": [&#xA;                {&#xA;                    ""node"": {&#xA;                        ""createdAt"": ""2019-09-20T23:59:57Z"",&#xA;                        ""closedAt"": ""2019-09-21T19:59:32Z"",&#xA;                        ""title"": ""MJPEG stream won't open"",&#xA;                        ""url"": ""https://github.com/mpv-player/mpv/issues/6964"",&#xA;                        ""repository"": {&#xA;                            ""name"": ""mpv""&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    ""node"": {&#xA;                        ""createdAt"": ""2019-09-20T23:59:50Z"",&#xA;                        ""closedAt"": ""2019-09-21T01:19:39Z"",&#xA;                        ""title"": ""Upgrade from v0.5.0 to v0.6.0 with attached volume failed"",&#xA;                        ""url"": ""https://github.com/longhorn/longhorn/issues/745"",&#xA;                        ""repository"": {&#xA;                            ""name"": ""longhorn""&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {&#xA;                        ""createdAt"": ""2019-09-20T23:58:52Z"",&#xA;                        ""closedAt"": ""2019-09-21T01:55:15Z"",&#xA;                        ""title"": ""bad linkage"",&#xA;                        ""url"": ""https://github.com/signalapp/Signal-Desktop/issues/3608"",&#xA;                        ""repository"": {&#xA;                            ""name"": ""Signal-Desktop""&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {&#xA;                        ""createdAt"": ""2019-09-20T23:58:36Z"",&#xA;                        ""closedAt"": ""2019-09-21T00:57:54Z"",&#xA;                        ""title"": ""Breaks Some Links on Firefox for Mac"",&#xA;                        ""url"": ""https://github.com/duckduckgo/duckduckgo-privacy-extension/issues/416"",&#xA;                        ""repository"": {&#xA;                            ""name"": ""duckduckgo-privacy-extension""&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {&#xA;                        ""createdAt"": ""2019-09-20T23:56:11Z"",&#xA;                        ""closedAt"": ""2019-09-23T18:43:30Z"",&#xA;                        ""title"": ""ci: upload coverage reports from GitHub Actions"",&#xA;                        ""url"": ""https://github.com/hyperledger/aries-framework-go/issues/314"",&#xA;                        ""repository"": {&#xA;                            ""name"": ""aries-framework-go""&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {&#xA;                        ""createdAt"": ""2019-09-20T23:56:07Z"",&#xA;                        ""closedAt"": ""2019-09-21T02:53:35Z"",&#xA;                        ""title"": ""0xxx.ws"",&#xA;                        ""url"": ""https://github.com/NanoMeow/QuickReports/issues/1885"",&#xA;                        ""repository"": {&#xA;                            ""name"": ""QuickReports""&#xA;                        }&#xA;                    }&#xA;                }&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Response 2</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;        ""search"": {&#xA;            ""issueCount"": 92339271,&#xA;            ""edges"": [&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {&#xA;                        ""createdAt"": ""2019-09-20T23:58:36Z"",&#xA;                        ""closedAt"": ""2019-09-21T00:57:54Z"",&#xA;                        ""title"": ""Breaks Some Links on Firefox for Mac"",&#xA;                        ""url"": ""https://github.com/duckduckgo/duckduckgo-privacy-extension/issues/416"",&#xA;                        ""repository"": {&#xA;                            ""name"": ""duckduckgo-privacy-extension""&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                },&#xA;                {&#xA;                    ""node"": {}&#xA;                }&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",7937993,,6024220,2019-09-25 05:05:14,2019-09-25 05:05:14,"Empty ""node"" objects being returned from graphql response",<graphql><github-graphql>,1,0,0,2019-09-25 04:40:03
58091481,2,,58091248,2,,"<p>The type of the <code>node</code> field is <code>SearchResultItem</code>, which is an <a href=""https://graphql.github.io/graphql-spec/June2018/#sec-Interfaces"" rel=""nofollow noreferrer"">interface</a>. An interface is an abstract type that represents one or more object types that implement that interface. In other words, the type of any particular <code>node</code> field in the search results could be one of several types -- <code>Issue</code>, <code>PullRequest</code>, <code>Repository</code>, etc.</p>&#xA;&#xA;<p>When querying an abstract type (an interface or a union), we have to use <a href=""https://graphql.github.io/graphql-spec/June2018/#sec-Inline-Fragments"" rel=""nofollow noreferrer"">inline fragments</a> in order to specify which fields for each possible type we want to fetch. So for search, we write:</p>&#xA;&#xA;<pre><code>... on Issue {&#xA;  # some fields here&#xA;}&#xA;... on PullRequest {&#xA;  # some other fields here&#xA;}&#xA;... on Repository {&#xA;  # yet some other fields here&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and so on. Inline fragments only tell GraphQL which fields to return for a given type. <strong>They do not filter the actual results of the search.</strong> You don't have to provide an inline fragment for every possible type, but if you don't provide one and that type is returned in the results, it will be returned as an empty object (again, because you didn't tell GraphQL which fields you wanted for that particular type).</p>&#xA;&#xA;<p>GraphQL does not provide any built-in methods for filtering, sorting or other manipulation of the returned data. It's up to the individual service to implement that functionality if it's needed. In this particular case, even though there's a <code>type</code> argument on the <code>search</code> field, setting the value of the argument to <code>ISSUE</code> will actually still return two different types -- <code>Issue</code> and <code>PullRequest</code>. Therefore, you still need another inline fragment for <code>PullRequest</code> if you want to avoid receiving an empty object for some of the search results.</p>&#xA;",6024220,,,,2019-09-25 05:04:36,"",,0,2,0,2019-09-25 05:04:36
58104985,1,,,1,2092,"<p>I am writing a data fetching service on an Express backend. It needs to fetch data from a graphQL endpoint.</p>&#xA;&#xA;<p>I get the following error. I know it's descriptive of the issue but I don't understand it. </p>&#xA;&#xA;<pre><code>'GraphQL queries must be strings. It looks like you\\'re sending the internal graphql-js representation of a parsed query in your request instead of a request in the GraphQL query language. You can convert an AST to a string using the `print` function&#xA;from `graphql`, or use a client like `apollo-client` which converts the internal representation to a string for you.' }&#xA;</code></pre>&#xA;&#xA;<p>This is the function I am using:</p>&#xA;&#xA;<pre><code>fetchMultipleProducts(first : Number, offset : number){&#xA;        fetch({&#xA;            query: gql`&#xA;            query {&#xA;                getProduct(query: {}, first : ${first}, offset : ${offset}) {&#xA;                    id&#xA;                    code&#xA;                }&#xA;                }&#xA;              `&#xA;        })&#xA;        .then(res =&gt; {&#xA;            Logger.info(""Fetched data"");&#xA;            console.log(res);&#xA;            return res;&#xA;        })&#xA;        .catch(err =&gt; {&#xA;            Logger.error(""Failed to fetch"", err);&#xA;        });   &#xA;</code></pre>&#xA;&#xA;<p>I am trying to pass in variables into it, I assume that's allowed? And using the Gql tag is standard? </p>&#xA;&#xA;<p>Some help would be appreciated, thanks guys.</p>&#xA;",10553879,,,,2019-09-25 19:30:30,GraphQL queries must be strings,<express><graphql-js>,1,1,0,2019-09-25 19:01:28
58115068,2,,58114612,0,,"<p>I've worked with GraphQL but it was long time ago,<br>&#xA;I'll give you a sample with One-Many relation (if I didn't get wrong you problem)<br>&#xA;I have 2 models (Database Model)</p>&#xA;&#xA;<pre class=""lang-cs prettyprint-override""><code>public class ProductType&#xA;{&#xA;    public int Id {get;set;}&#xA;    public string Name { get; set; } = """";&#xA;    public virtual ICollection&lt;Product&gt; Products { get; set; }&#xA;}&#xA;&#xA;public class Product&#xA;{&#xA;    public int Id { get; set; }&#xA;    public string Name { get; set; } = """";&#xA;    public int ProductTypeId { get; set; }&#xA;    public virtual ProductType ProductType { get; set; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>They will be 2 type of GraphQL</p>&#xA;&#xA;<pre class=""lang-cs prettyprint-override""><code>public class ProductObject : ObjectGraphType&lt;Product&gt;&#xA;{&#xA;    private readonly IProductService product;&#xA;    public ProductObject(IProductService p)&#xA;    {&#xA;        product = p;&#xA;        Field(f =&gt; f.Id);&#xA;        Field(f =&gt; f.Name);&#xA;        FieldAsync&lt;ProductTypeObject&gt;(""type"",&#xA;            resolve: async context =&gt; await product.GetProductType(context.Source.Id));&#xA;    }&#xA;}&#xA;&#xA;public class ProductTypeObject: ObjectGraphType&lt;ProductType&gt;&#xA;{&#xA;    private readonly IProductTypeService productType;&#xA;    public ProductTypeObject(IProductTypeService pT)&#xA;    {&#xA;        productType = pT;&#xA;        Field(f =&gt; f.Name);&#xA;        FieldAsync&lt;ListGraphType&lt;ProductObject&gt;&gt;(""products"",&#xA;            resolve: async context =&gt; await productType.GetProductsOfType(context.Source.Id));&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Explain it:&#xA;<strong>IProductTypeService</strong> and <strong>IProductService</strong> use to get data&#xA;<strong>productType.GetProductsOfType(context.Source.Id)</strong> will return <strong>ICollection</strong>&#xA;<strong>await product.GetProductType(context.Source.Id)</strong> will return <strong>ProductType</strong></p>&#xA;&#xA;<p>So you want to query 1 product type has many products it would be:</p>&#xA;&#xA;<pre><code>query getProductTypes {&#xA;   productTypes{&#xA;        id,&#xA;        name,&#xA;        products {&#xA;             id,&#xA;             name&#xA;        }        &#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Hope it helps</p>&#xA;",12083327,,,,2019-09-26 10:44:13,"",,0,3,0,2019-09-26 10:44:13
58118564,2,,58118525,0,,<blockquote>&#xA;  <p>But the actual product objects never get instantiated</p>&#xA;</blockquote>&#xA;&#xA;<p><code>map()</code> would need to return <code>&lt;Product /&gt;</code>.</p>&#xA;&#xA;<pre><code>{data.Products.map(function(item){&#xA;  console.log(item);&#xA;  return &lt;Product data={item} /&gt;; // return here&#xA;})}&#xA;</code></pre>&#xA;&#xA;<p>or</p>&#xA;&#xA;<pre><code>{&#xA;  data.Products.map(item =&gt; &lt;Product data={item} /&gt;)&#xA;}&#xA;</code></pre>&#xA;,8012206,,,,2019-09-26 14:03:14,"",,0,2,0,2019-09-26 14:03:14
58131007,2,,55474914,5,,"<p><code>query</code> should be at the top level, but it seems like in your example it's enclosed in curly braces. See below:&#xA;<a href=""https://github.com/apollographql/graphql-tag/issues/180#issuecomment-386540792"" rel=""noreferrer"">https://github.com/apollographql/graphql-tag/issues/180#issuecomment-386540792</a></p>&#xA;",10113419,,,,2019-09-27 08:48:56,"",,0,0,0,2019-09-27 08:48:56
58142633,2,,58142578,1,,"<p>When using <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"" rel=""nofollow noreferrer"">Object.assign</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Properties in the target object will be overwritten by properties in the sources if they have the same key. Later sources' properties will similarly overwrite earlier ones.</p>&#xA;</blockquote>&#xA;&#xA;<p><code>Object.assign</code> does not do a <em>deep merge</em>, which is presumably what you're expecting. If two sources have the same property, only the last source's property will be used. So given two objects like:</p>&#xA;&#xA;<pre><code>const a = {&#xA;  Query: {&#xA;    foo: () =&gt; 'FOO',&#xA;  },&#xA;}&#xA;const b = {&#xA;  Query: {&#xA;    bar: () =&gt; 'BAR',&#xA;  },&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>if you use <code>Object.assign</code> to merge them, the resulting object will have a single <code>Query</code> property that matches either <code>a</code> or <code>b</code> (depending on which was the later parameter). In order to do a <em>deep</em> merge that combines objects of properties with the same name, you should use an existing solution, like <a href=""https://lodash.com/docs/4.17.15#merge"" rel=""nofollow noreferrer"">lodash</a>:</p>&#xA;&#xA;<pre><code>const resolvers = _.merge(a, b)&#xA;</code></pre>&#xA;&#xA;<p>or <a href=""https://stackoverflow.com/questions/27936772/how-to-deep-merge-instead-of-shallow-merge"">something similar</a>.</p>&#xA;",6024220,,,,2019-09-28 01:09:42,"",,0,2,0,2019-09-28 01:09:42
58149665,1,,,6,1247,"<p>I noticed something I don't understand while trying to get the number of <em>open issues</em> per repository for a user.   </p>&#xA;&#xA;<p>When I use the following query I am asked to perform pagination (as expected) -</p>&#xA;&#xA;<pre><code>query {&#xA;  user(login:""armsp""){&#xA;    repositories{&#xA;      nodes{&#xA;        name&#xA;        issues(states: OPEN){&#xA;          totalCount&#xA;        }&#xA;      }&#xA;    }    &#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>The error message after running the above -</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""user"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""type"": ""MISSING_PAGINATION_BOUNDARIES"",&#xA;      ""path"": [&#xA;        ""user"",&#xA;        ""repositories""&#xA;      ],&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 54,&#xA;          ""column"": 5&#xA;        }&#xA;      ],&#xA;      ""message"": ""You must provide a `first` or `last` value to properly paginate the `repositories` connection.""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However when I do the following I actually get all the results which doesn't make any sense to me -</p>&#xA;&#xA;<pre><code>query {&#xA;  user(login:""armsp""){&#xA;    repositories{&#xA;      totalCount&#xA;    }&#xA;    repositories{&#xA;      nodes{&#xA;        name&#xA;        issues(states: OPEN){&#xA;          totalCount&#xA;        }&#xA;      }&#xA;    }   &#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Shouldn't I be asked for pagination in the second query too ?</p>&#xA;",3647970,,3647970,2019-09-28 20:07:18,2019-09-28 20:56:26,Why am I able to bypass pagination when I call the same field twice (with different queries) in GitHub's GraphQL API,<github><pagination><graphql><github-api>,1,3,0,2019-09-28 19:33:52
58168650,1,58178444,,1,2019,"<pre><code>  {&#xA;        player(id : ""Pogba"") {&#xA;            name,&#xA;            kit {&#xA;                shirtSize,&#xA;                bootSize&#xA;            }&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Above code work fine but i need</p>&#xA;&#xA;<pre><code>{&#xA;    player(id : ""Pogba"") {&#xA;        name,&#xA;        kit (name:name){&#xA;            shirtSize,&#xA;            bootSize&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>but i need to pass the player query response to the kit query with nested format. Is it possible to achieve this? Appreciate any help.</p>&#xA;",10400414,,10320028,2019-09-30 13:52:59,2019-10-01 05:18:16,How to pass the parameter in the nested query in graphql?,<graphql><apollo-server>,2,2,0,2019-09-30 13:12:38
58172511,1,,,1,69,"<p>I am new to GraphQL, trying to learn - so far so good, but I have hit my first issue.</p>&#xA;&#xA;<p>Using the GraphQL playground, I am able to select repositories for an organization:</p>&#xA;&#xA;<pre><code>{&#xA;  organization(login: ""github"") {&#xA;    name&#xA;    repositories(first:10) {&#xA;      nodes {&#xA;        name,&#xA;        forkCount        &#xA;      }    &#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get results successfully - What I cannot figure out is how to sort by <code>forkCount</code> (preferably <code>DESC</code>)</p>&#xA;&#xA;<p>I've tried a bunch of stuff, mostly helped by the tool's autocomplete, I was able to  sort by another property, <code>STARGAZERS</code>, but that's not my aim here.</p>&#xA;&#xA;<pre><code>{&#xA;  organization(login: ""github"") {&#xA;    name&#xA;    repositories(first: 10, orderBy: { field: STARGAZERS direction: DESC }) {&#xA;      nodes {&#xA;        name&#xA;        forkCount&#xA;        forks {&#xA;          totalCount&#xA;        }&#xA;        stargazers {&#xA;          totalCount&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can I sort by <code>forkCount</code>?</p>&#xA;",127257,,,,2019-09-30 17:21:35,Sorting an organizations repositories by forkCount using Github GraphQL endpoint,<graphql>,0,0,0,2019-09-30 17:21:35
58185835,1,,,-1,126,"<p>I am making a master-detail-detail application in React and GraphQL.  Let me explain, there is a sidebar which shows products, and then when you click one of the list of products, ANOTHER list is shown in the main window (Master Detail). Here is the kicker, if you click one of the products in the Main window ANOTHER section on the right sidebar is populated with details.  So like this:</p>&#xA;&#xA;<p>Master List --> Details List --> Properties of Detail</p>&#xA;&#xA;<p>I have React Router set up nicely and wondering what is the proper way to fetch?  There are many ideas about this.  For instance, should I structure the call and data for GraphQL to just fetch EVERYTHING onLoad?  i.e. Parents (products), Children (product list), and details (details of children.  Just fetch everything and setState?</p>&#xA;&#xA;<p>OR, is the proper way to do things using GraphQL, to load ONLY the product list when the application loads, and when a user clicks on a product THEN FETCH the list of children, and when they click a child product, THEN fetch the details.</p>&#xA;&#xA;<p>Just wondering about methodology.... of course when the lists get big, you would have a spinner show in the main pane, and then a spinner show in the details pane I suppose. </p>&#xA;&#xA;<p>GraphQL solves the overFetching situation.... but, should I divide the fetch up when a user clicks and progressively fetch...or fetch everything at once and just click -> map() over the results.</p>&#xA;&#xA;<p>I am curious to hear everyone's take on this.</p>&#xA;",9132098,,,,2019-10-02 13:08:27,Progressive fetch or all at once Master Detail,<javascript><reactjs><rest><react-router><graphql>,1,3,0,2019-10-01 13:28:46
58203062,1,58233451,,0,960,"<p>i'm using Quasar Framework 1.0.5, Vue 2.6, Vue-apollo. &#xA;I have a problem with <code>v-for</code></p>&#xA;&#xA;<p>In the browser console i get a error <code>_vm.item is undefined</code> even though the data is there.</p>&#xA;&#xA;<p>The code works like this that in the <strong>data</strong> section i initialize my array to an empty array. Then when the user clicks vue-apollo is making a request to the backend and updates the array. </p>&#xA;&#xA;<h1>The data section:</h1>&#xA;&#xA;<pre><code>  data() {&#xA;    return {&#xA;      eventsByDay: []&#xA;    }&#xA;  },&#xA;</code></pre>&#xA;&#xA;<h1>The vue-apollo update function (where the data is loaded from the API):</h1>&#xA;&#xA;<p>I'm using the apollo option.</p>&#xA;&#xA;<pre><code>  apollo: {&#xA;    loadTermine: {&#xA;      query: TermineByDayQuery,&#xA;      ...&#xA;      result ({ data, loading, networkStatus }) {&#xA;        console.info('before:');&#xA;        console.info(this.eventsByDay);&#xA;        this.eventsByDay = data.TermineByDayQuery;&#xA;        console.info('after:');&#xA;        console.table(this.eventsByDay);&#xA;      },&#xA;</code></pre>&#xA;&#xA;<h1>The template (in PUG, which generates html):</h1>&#xA;&#xA;<pre><code>  q-card-section.q-mx-none.row(v-if=""eventsByDay.length &gt; 0"")&#xA;    q-item.col.text-left.q-pa-none&#xA;      q-item-section&#xA;        .text-grey-7 {{this.selectedDate | formatDate}}&#xA;        p.text-black.q-mt-lg.text-weight-bold(v-for=""item in eventsByDay"" :key=""item.id"") Lorem ipsum dolor&#xA;          .row&#xA;            p.col.text-grey-7.q-mt-xs 07:50 Uhr&#xA;            p.col.text-grey-7.q-mt-xs.text-right Ort {{eventsByDay.length}} {{item.city}}  &#xA;</code></pre>&#xA;&#xA;<p>The problem is the last <code>{{item.city}}</code> . There it says <code>_vm.item is undefined</code>. When i remove this then there is no error. <strong>Even</strong> <code>{{eventsByDay.length}}</code> shows the correct length of the array - 2. </p>&#xA;&#xA;<p>The elements are there in the Array:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/oIOnO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/oIOnO.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Any idea what i doing wrong?</p>&#xA;",534877,,,,2019-10-04 09:20:16,Vue v-for _vm.item is undefined,<vue.js><vuejs2><quasar-framework><vue-apollo><vue-reactivity>,1,0,0,2019-10-02 13:57:18
58220278,1,,,1,27,"<p>I have a Github (Enterprise) organization with multiple repositories. Each repository contains one or more <code>.properties</code> files.&#xA;Some of these <code>.properties</code> files will be contained in folders that contain ""i18n"" in their path or filename.&#xA;These <code>.properties</code> files would be relevant for translation processes.</p>&#xA;&#xA;<p>As a basic step: I would need to get the average/min/max frequency of commits that involve translation-relevant files (as defined above) for each one of the repositories.</p>&#xA;&#xA;<p>As an ideal scenario: I would also need to determine how many key-values were changed/added/deleted by each commit on average, to better determine the resulting workload for the translation process.</p>&#xA;&#xA;<p>What I tried so far:</p>&#xA;&#xA;<ul>&#xA;<li><p>Github GraphQL APIs v4: seems to me that the API is very well suited for searching, but not as much for computing aggregations.</p></li>&#xA;<li><p>Github ReST APIs v3: specific commits can be searched, but not based on file extension. While file extensions are a query criteria for files themselves, they are not for commits.</p></li>&#xA;</ul>&#xA;&#xA;<p>Any hint on how to achieve this?</p>&#xA;",1171050,,,,2019-10-03 13:32:55,perform aggregate computation on Github data,<rest><statistics><graphql><analytics><github-api>,0,0,0,2019-10-03 13:32:55
58250253,1,58250626,,2,2908,"<p>I am building a nativescript mobile application which consume graphql API, and I am using apollo client via apollo boost.</p>&#xA;&#xA;<p>The problem appear when I am trying to send array of objects inside the mutation like below: </p>&#xA;&#xA;<pre><code>let {&#xA;    to,&#xA;    total,&#xA;    drugList&#xA;} = order&#xA;&#xA;apolloClient.mutate({&#xA;    mutation: gql `mutation {&#xA;        makeOrder(&#xA;            to: ""${to}"",&#xA;            total: ${total},&#xA;            drugList: ${drugList}&#xA;        ){&#xA;            id&#xA;        }&#xA;    }`&#xA;}).then((res) =&gt; {&#xA;    console.log(res)&#xA;}).catch((error) =&gt; {&#xA;    console.log(error)&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>I have tried to log the drugList inside a template literals like: </p>&#xA;&#xA;<pre><code>console.log(`${drugList}`)&#xA;</code></pre>&#xA;&#xA;<p>But I got <strong>[object object],[object object]</strong> then I have tried to use <code>${[...drugList]}</code> instead and I got the desired structure of array of objects but the mutate function of apollo client doesn't accept it (doesn't execute the mutation or log an error).</p>&#xA;&#xA;<p>Am I miss something to make it run or are there any recommendation to run it?</p>&#xA;",6253272,,6253272,2019-10-05 16:38:45,2022-04-13 03:18:44,How to add array of objects to apollo client mutation request?,<javascript><graphql><apollo-client>,1,7,0,2019-10-05 16:29:57
58250626,2,,58250253,2,,"<p>Thanks to <a href=""https://stackoverflow.com/users/1048572/bergi""><strong>Bergi</strong></a>, after his notice that gql-tagged template literal cannot be compared to the simple template string in a <code>console.log</code> test.</p>&#xA;<p>So I have searched around this and figured out that variables property would solve this problem.&#xA;Here is the final result:</p>&#xA;<pre><code>let {&#xA;    to,&#xA;    total,&#xA;    drugList&#xA;} = order&#xA;&#xA;apolloClient.mutate({&#xA;    mutation: gql `mutation ($to: ID!, $total: Float!, $drugList: [OrderDrugsListInput!]!) {&#xA;        makeOrder(&#xA;            to: $to,&#xA;            total: $total,&#xA;            drugList: $drugList&#xA;        ){&#xA;            id&#xA;        }&#xA;    }`,&#xA;    variables: {&#xA;        to: to,&#xA;        total: total,&#xA;        drugList: drugList&#xA;    }&#xA;}).then((res) =&gt; {&#xA;    console.log(res)&#xA;}).catch((error) =&gt; {&#xA;    console.log(error)&#xA;})&#xA;</code></pre>&#xA;",6253272,,6253272,2022-04-13 03:18:44,2022-04-13 03:18:44,"",,0,0,0,2019-10-05 17:16:10
58255965,1,58257574,,1,525,"<p>I need to pass one array of objects, but says I have to specify the type of parameter I try this line of code. It's not working @Arg(""products"") products:[ReservationProduct]</p>&#xA;",10700287,,7758804,2019-10-07 01:10:21,2019-10-07 01:10:21,Graphql type-graphql how to pass one array of objects mutation,<node.js><graphql><typegraphql>,1,1,0,2019-10-06 09:35:19
58257574,2,,58255965,2,,"<p><code>@Arg(""products"", type =&gt; [ReservationProduct]) products: ReservationProduct[]</code></p>&#xA;",5472617,,,,2019-10-06 13:12:25,"",,0,0,0,2019-10-06 13:12:25
58260425,1,,,0,1609,"<p>I am working on a project with GraphQL for the first time and I've hit a bit of a snag I can't figure out. I have a business model, a user model and an industry model. The business model belongs to both of the other models. Scaffolded view operations run as expected, but when I run a Graph query on businesses and include either of the other two models, it errors out with</p>&#xA;&#xA;<blockquote>&#xA;  <p>undefined method `map' for #User:0x00007fadeb73f140>\nDid you mean? &#xA;  tap</p>&#xA;</blockquote>&#xA;&#xA;<p>Here is my definition in query_type.rb:</p>&#xA;&#xA;<pre><code># get all businesses&#xA;    field :businesses, [Types::BusinessType], null: false, description: ""List of all businesses""&#xA;&#xA;    def businesses&#xA;      Business.all&#xA;&#xA;    end&#xA;</code></pre>&#xA;&#xA;<p>And here is my BusinessType:</p>&#xA;&#xA;<pre><code>module Types&#xA;  class BusinessType &lt; BaseObject&#xA;    field :id, ID, null: false&#xA;    field :name, String, null: false&#xA;    field :zip_code, String, null: true&#xA;    field :growth_stage, String, null: true&#xA;    field :annual_revenue, Integer, null: true&#xA;    field :first_name, String, null: false&#xA;    field :last_name, String, null: false&#xA;    field :email, String, null: false&#xA;    field :phone, String, null: false&#xA;    field :industry, type: [Types::IndustryType], null: true&#xA;    field :user, type: [Types::UserType], null: true&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>And here is my Graph query:</p>&#xA;&#xA;<pre><code>{&#xA;  businesses {&#xA;    id&#xA;    name&#xA;    growthStage&#xA;    annualRevenue&#xA;    firstName&#xA;    lastName&#xA;    email&#xA;    phone &#xA;    zipCode&#xA;    user {&#xA;      email&#xA;    }&#xA;    industry {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>here is the stack trace:</p>&#xA;&#xA;<pre><code>""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/activemodel-6.0.0/lib/active_model/attribute_methods.rb:431:in `method_missing'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/schema/member/instrumentation.rb:93:in `proxy_to_depth'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/schema/member/instrumentation.rb:85:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/field.rb:248:in `resolve'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:321:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/schema/middleware_chain.rb:49:in `invoke_core'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/schema/middleware_chain.rb:38:in `invoke'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:129:in `block in resolve_field'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/tracing.rb:62:in `block in trace'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/tracing.rb:76:in `call_tracers'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/tracing.rb:62:in `trace'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:128:in `resolve_field'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:92:in `block in resolve_selection'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:85:in `each'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:85:in `resolve_selection'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:284:in `resolve_value'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:278:in `resolve_value'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:213:in `continue_resolve_field'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:184:in `continue_or_wait'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:263:in `block in resolve_value'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:256:in `each'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:256:in `resolve_value'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:278:in `resolve_value'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:213:in `continue_resolve_field'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:184:in `continue_or_wait'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:157:in `resolve_field'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:92:in `block in resolve_selection'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:85:in `each'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:85:in `resolve_selection'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:56:in `block in resolve_root_selection'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/tracing.rb:62:in `block in trace'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/tracing.rb:76:in `call_tracers'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/tracing.rb:62:in `trace'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:49:in `resolve_root_selection'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/execute.rb:31:in `begin_query'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/multiplex.rb:112:in `begin_query'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/multiplex.rb:84:in `block in run_as_multiplex'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/multiplex.rb:83:in `map'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/multiplex.rb:83:in `run_as_multiplex'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/multiplex.rb:62:in `block (2 levels) in run_queries'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/multiplex.rb:186:in `block in instrument_and_analyze'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/instrumentation.rb:29:in `block (2 levels) in apply_instrumenters'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/instrumentation.rb:46:in `block (2 levels) in each_query_call_hooks'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/instrumentation.rb:41:in `each_query_call_hooks'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/instrumentation.rb:45:in `block in each_query_call_hooks'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/instrumentation.rb:72:in `call_hooks'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/instrumentation.rb:44:in `each_query_call_hooks'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/instrumentation.rb:27:in `block in apply_instrumenters'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/instrumentation.rb:72:in `call_hooks'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/instrumentation.rb:26:in `apply_instrumenters'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/multiplex.rb:174:in `instrument_and_analyze'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/multiplex.rb:61:in `block in run_queries'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/tracing.rb:62:in `block in trace'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/tracing.rb:76:in `call_tracers'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/tracing.rb:62:in `trace'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/multiplex.rb:59:in `run_queries'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/execution/multiplex.rb:49:in `run_all'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/schema.rb:392:in `block in multiplex'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/schema.rb:1279:in `with_definition_error_check'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/schema.rb:391:in `multiplex'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/graphql-1.9.12/lib/graphql/schema.rb:368:in `execute'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/2.6.0/forwardable.rb:230:in `execute'"",&#xA;      ""/private/var/sites/clients/army_of_bees/finsync/ap-backend-temp/app/controllers/graphql_controller.rb:12:in `execute'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/abstract_controller/base.rb:196:in `process_action'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_controller/metal/rendering.rb:30:in `process_action'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/abstract_controller/callbacks.rb:42:in `block in process_action'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/activesupport-6.0.0/lib/active_support/callbacks.rb:135:in `run_callbacks'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/abstract_controller/callbacks.rb:41:in `process_action'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_controller/metal/rescue.rb:22:in `process_action'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_controller/metal/instrumentation.rb:33:in `block in process_action'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/activesupport-6.0.0/lib/active_support/notifications.rb:180:in `block in instrument'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/activesupport-6.0.0/lib/active_support/notifications/instrumenter.rb:24:in `instrument'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/activesupport-6.0.0/lib/active_support/notifications.rb:180:in `instrument'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_controller/metal/instrumentation.rb:32:in `process_action'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_controller/metal/params_wrapper.rb:245:in `process_action'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/activerecord-6.0.0/lib/active_record/railties/controller_runtime.rb:27:in `process_action'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/abstract_controller/base.rb:136:in `process'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionview-6.0.0/lib/action_view/rendering.rb:39:in `process'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_controller/metal.rb:191:in `dispatch'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_controller/metal.rb:252:in `dispatch'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/routing/route_set.rb:51:in `dispatch'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/routing/route_set.rb:33:in `serve'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/journey/router.rb:49:in `block in serve'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/journey/router.rb:32:in `each'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/journey/router.rb:32:in `serve'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/routing/route_set.rb:837:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/tempfile_reaper.rb:15:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/etag.rb:25:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/conditional_get.rb:38:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/head.rb:12:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/http/content_security_policy.rb:18:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/session/abstract/id.rb:232:in `context'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/session/abstract/id.rb:226:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/middleware/cookies.rb:648:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/activerecord-6.0.0/lib/active_record/migration.rb:567:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/activesupport-6.0.0/lib/active_support/callbacks.rb:101:in `run_callbacks'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/middleware/callbacks.rb:26:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/middleware/executor.rb:14:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/middleware/debug_exceptions.rb:32:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/web-console-4.0.1/lib/web_console/middleware.rb:132:in `call_app'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/web-console-4.0.1/lib/web_console/middleware.rb:28:in `block in call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/web-console-4.0.1/lib/web_console/middleware.rb:17:in `catch'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/web-console-4.0.1/lib/web_console/middleware.rb:17:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/railties-6.0.0/lib/rails/rack/logger.rb:38:in `call_app'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/railties-6.0.0/lib/rails/rack/logger.rb:26:in `block in call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/activesupport-6.0.0/lib/active_support/tagged_logging.rb:80:in `block in tagged'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/activesupport-6.0.0/lib/active_support/tagged_logging.rb:28:in `tagged'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/activesupport-6.0.0/lib/active_support/tagged_logging.rb:80:in `tagged'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/railties-6.0.0/lib/rails/rack/logger.rb:26:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/sprockets-rails-3.2.1/lib/sprockets/rails/quiet_assets.rb:13:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/middleware/remote_ip.rb:81:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/middleware/request_id.rb:27:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/method_override.rb:22:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/runtime.rb:22:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/activesupport-6.0.0/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/middleware/executor.rb:14:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/middleware/static.rb:126:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/sendfile.rb:111:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/actionpack-6.0.0/lib/action_dispatch/middleware/host_authorization.rb:83:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/rack-cors-1.0.3/lib/rack/cors.rb:95:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/railties-6.0.0/lib/rails/engine.rb:526:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/puma-3.12.1/lib/puma/configuration.rb:227:in `call'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/puma-3.12.1/lib/puma/server.rb:660:in `handle_request'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/puma-3.12.1/lib/puma/server.rb:474:in `process_client'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/puma-3.12.1/lib/puma/server.rb:334:in `block in run'"",&#xA;      ""/Users/xxxx/.rbenv/versions/2.6.3/lib/ruby/gems/2.6.0/gems/puma-3.12.1/lib/puma/thread_pool.rb:135:in `block in spawn_thread'""&#xA;</code></pre>&#xA;",708964,,708964,2019-10-06 19:19:10,2019-10-07 21:53:37,What is causing this undefined method error in my Ruby on Rails / GraphQL project,<ruby-on-rails><ruby><graphql>,1,4,0,2019-10-06 19:06:46
58265104,2,,58264979,0,,"<p>In my side, I've created an array before my schemaOrg declaration like that :</p>&#xA;&#xA;<pre><code>let schemaOrgImages = [];&#xA;data.allFile.edges.forEach(node =&gt; schemaOrgImages.push(node.publicURL));&#xA;&#xA;const schemaOrgJSONLD = [&#xA;  {&#xA;    ""@context"": ""https://schema.org"",&#xA;    ""@type"": ""EventVenue"",&#xA;    image: schemaOrgImages&#xA;  }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>There's maybe a another way to do it but this method works with schemaOrg validation.</p>&#xA;",11816067,,,,2019-10-07 07:23:33,"",,0,0,0,2019-10-07 07:23:33
58268970,1,58298380,,4,1302,"<p>I am trying to fetch list of all repositories from Github to do some analysis on it. I have started my job with their v3.0 API which is a Restful one and then when I needed more info like star count, migrated from v3.0 to v4.0 which is provided as GraphQL. Now I am making request for 100 records each time and doing this recursively to be able to fetch all records.</p>&#xA;&#xA;<p>The problem is about pagination job. To have pagination work, I have to get endCursor of each request and then in the next request, I have to fill after property with this value. Now the problem is that data is not paginated properly. For example:</p>&#xA;&#xA;<ol>&#xA;<li>Requesting first page (without any cursor) results in different records.</li>&#xA;<li>Requesting a page with same cursor for multiple times, also retrieves different results.</li>&#xA;<li>And if simply not check this, and try to fetch on after another, each 100 records, have many duplicates with previous requests, which means pagination does not work correctly.</li>&#xA;</ol>&#xA;&#xA;<p>The query that I am sending (in a nodejs app) is as below:</p>&#xA;&#xA;<pre><code>{&#xA;  search(query: ""is:public"", type: REPOSITORY, first: 100, after: ""Y3Vyc29yOjEwMA=="") {&#xA;    repositoryCount&#xA;    userCount&#xA;    wikiCount&#xA;    pageInfo {&#xA;      startCursor&#xA;      endCursor&#xA;      hasNextPage&#xA;      hasPreviousPage&#xA;    }&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          databaseId&#xA;          id&#xA;          name&#xA;          description&#xA;          forkCount&#xA;          isFork&#xA;          issues {&#xA;            totalCount&#xA;          }&#xA;          labels (first: 100) {&#xA;            nodes {&#xA;              name&#xA;            }&#xA;          }&#xA;          languages (first: 100) {&#xA;            nodes {&#xA;              name&#xA;            }&#xA;          }&#xA;          licenseInfo {&#xA;            name&#xA;          }&#xA;          nameWithOwner&#xA;          primaryLanguage {&#xA;            name&#xA;          }&#xA;          pullRequests {&#xA;            totalCount&#xA;          }&#xA;          watchers {&#xA;            totalCount&#xA;          }&#xA;          stargazers {&#xA;            totalCount&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>as I have previously said, first time, I remove the parameter after from the search inputs, and then use endCursor of previous request as the after param of next one.</p>&#xA;&#xA;<p>Am I miss understanding the cursor purpose and its usage or is this a bug (intended/unintended) from Github itself?</p>&#xA;",3632857,,3632857,2019-10-07 11:56:28,2019-10-09 07:02:11,Github GraphQL API v.4.0 cursor misworks,<github><graphql><github-api><github-graphql>,1,2,0,2019-10-07 11:48:23
58298380,2,,58268970,4,,"<p>Fortunately I have found a way that works for now. And very thanks to @Daniel Rearden for his very helpful tip. I have tested many query strings and found that, if I request an specific create date, then the data is being sorted according to this field and in my tests, now the order stays consistent and the cursor will have meaning.</p>&#xA;&#xA;<p>The query is now this:</p>&#xA;&#xA;<pre><code>{&#xA;  search(query: ""created:2008-02-08 is:public"", type: REPOSITORY, first: 100) {&#xA;    repositoryCount&#xA;    userCount&#xA;    wikiCount&#xA;    pageInfo {&#xA;      startCursor&#xA;      endCursor&#xA;      hasNextPage&#xA;      hasPreviousPage&#xA;    }&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          databaseId&#xA;          id&#xA;          name&#xA;          description&#xA;          forkCount&#xA;          isFork&#xA;          issues {&#xA;            totalCount&#xA;          }&#xA;          labels (first: 100) {&#xA;            nodes {&#xA;              name&#xA;            }&#xA;          }&#xA;          languages (first: 100) {&#xA;            nodes {&#xA;              name&#xA;            }&#xA;          }&#xA;          licenseInfo {&#xA;            name&#xA;          }&#xA;          nameWithOwner&#xA;          primaryLanguage {&#xA;            name&#xA;          }&#xA;          pullRequests {&#xA;            totalCount&#xA;          }&#xA;          watchers {&#xA;            totalCount&#xA;          }&#xA;          stargazers {&#xA;            totalCount&#xA;          }&#xA;          createdAt&#xA;          updatedAt&#xA;          diskUsage&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now the only thing I should think about is to scroll over days and make this query many times on each day, until <code>pageInfo.hasNextPage</code> is true.</p>&#xA;&#xA;<p>By now I have not tested this for all ~4000 days and may be I can't verify that the fetched result is all data that exists in their DB, but it seems to be the best solution.</p>&#xA;",3632857,,3632857,2019-10-09 07:02:11,2019-10-09 07:02:11,"",,0,1,0,2019-10-09 06:39:56
58303368,1,,,1,199,"<p>I am using apollo-server 2.0 and .graphql files for my typeDefs.&#xA;I am unable to create upload feature because of using .graphql extension.&#xA;I tried to use <code>scalar Upload</code> but it is already defined by Apollo. So it does not work neither with that definition nor without it. After my research i found that i should use <code>gql``</code> keyword to define Upload type. But my types are in .graphql files so i am unable to merge them.&#xA;What can i do ?</p>&#xA;&#xA;<p>[<img src=""https://i.stack.imgur.com/TQryb.png"" alt=""SS 1[1]""></p>&#xA;&#xA;<p>[<img src=""https://i.stack.imgur.com/bEq1G.png"" alt=""SS2 [2]""></p>&#xA;",5716817,,,,2019-10-09 11:43:28,How to upload file in apollo-server using graphql file extension?,<upload><graphql><apollo>,0,1,0,2019-10-09 11:43:28
58358115,1,60375116,,1,722,"<p>I am using a <a href=""https://developer.github.com/v3/"" rel=""nofollow noreferrer"">GITHUB API V3</a> in one of my projects now we are migrating to <a href=""https://developer.github.com/v4"" rel=""nofollow noreferrer"">GraraphQL API V4</a>. I want to list all the branches of the repo and I want to check whether it is a protected branch. In <a href=""https://developer.github.com/v3/"" rel=""nofollow noreferrer"">GITHUB API V3</a> it has a <a href=""https://developer.github.com/v3/repos/branches/"" rel=""nofollow noreferrer"">branches</a> API that will list all the branches along with it is protected key so it was easy to check. Now in GraphQL, I can get all the branches list but I can't check whether the branch is protected or not.</p>&#xA;&#xA;<pre><code>   refs(first: 100, refPrefix: ""refs/heads/"") {&#xA;        nodes {&#xA;            name&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Someone could assist with this on how to proceed?</p>&#xA;&#xA;<p>If that could not be achieved by the <code>refs</code> then is there a way to list all the protected branches alone</p>&#xA;",3529241,,3529241,2020-02-24 11:24:29,2022-10-20 21:11:46,GraphQL API Protected branch,<graphql><branch><github-api><github-api-v4>,2,0,0,2019-10-12 20:16:46
58362960,1,61479943,,0,187,"<p>I am trying to create a page displaying my pinned repos. I am using gatsby and have installed the <a href=""https://www.gatsbyjs.org/packages/gatsby-source-github-api/?=github"" rel=""nofollow noreferrer"">gatsby-source-github-api</a></p>&#xA;&#xA;<pre><code>{&#xA;            resolve: 'gatsby-source-github-api',&#xA;            options: {&#xA;                token: 'xxxxxxxxx',&#xA;            },&#xA;        },&#xA;</code></pre>&#xA;&#xA;<p>And I have the query populating the data I want in the GraphQL plaryground.</p>&#xA;&#xA;<pre><code>      query {&#xA;            user(login: ""mrpbennett"") {&#xA;                pinnedItems(first: 6, types: [REPOSITORY]) {&#xA;                    edges {&#xA;                        node {&#xA;                            ... on Repository {&#xA;                                name&#xA;                                description&#xA;                                url&#xA;                                primaryLanguage {&#xA;                                    name&#xA;                                    color&#xA;                                }&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;</code></pre>&#xA;&#xA;<p>However I am struggling to get that data to populate into a new component I keep getting <code>7:13  error  Cannot query field ""user"" on type ""Query""  graphql/template-strings</code></p>&#xA;&#xA;<p>This is the component </p>&#xA;&#xA;<p>I am not really to sure how to populate the data i need.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import React from 'react'&#xA;import { graphql, useStaticQuery } from 'gatsby'&#xA;&#xA;const PinnedRepos = () =&gt; {&#xA;    const data = useStaticQuery(graphql`&#xA;        query {&#xA;            user(login: ""mrpbennett"") {&#xA;                pinnedItems(first: 6, types: [REPOSITORY]) {&#xA;                    edges {&#xA;                        node {&#xA;                            ... on Repository {&#xA;                                name&#xA;                                description&#xA;                                url&#xA;                                primaryLanguage {&#xA;                                    name&#xA;                                    color&#xA;                                }&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    `)&#xA;&#xA;    return (&#xA;        &lt;div&gt;&#xA;            &lt;p&gt;{data.node.repository.name}&lt;/p&gt;&#xA;        &lt;/div&gt;&#xA;    )&#xA;}&#xA;&#xA;export default PinnedRepos&#xA;</code></pre>&#xA;&#xA;<p>any advice would be greatly appreciated​.</p>&#xA;",10129053,,5928186,2020-04-28 12:09:43,2020-04-28 12:14:20,Populating Github GraphQL in React (Gatsby),<reactjs><graphql><github-api><gatsby>,1,0,0,2019-10-13 11:07:21
58379796,1,,,3,797,"<p>I have the following model </p>&#xA;&#xA;<pre><code>type Duck {&#xA;    category: Baz&#xA;}&#xA;&#xA;type Foo {&#xA;    size: FooSize&#xA;}&#xA;&#xA;type Bar {&#xA;    size: BarSize&#xA;}&#xA;&#xA;union Baz = Foo | Bar&#xA;</code></pre>&#xA;&#xA;<p>The following query throws an error <code>Validation error of type FieldsConflict: size: they return differing types FooSize and BarSize @ 'duck/category'</code> (it's an intended behaviour as stated here : <a href=""https://github.com/graphql/graphql-js/issues/53"" rel=""nofollow noreferrer"">https://github.com/graphql/graphql-js/issues/53</a>)</p>&#xA;&#xA;<pre><code>{&#xA;  duck {&#xA;    category {&#xA;      ... on Foo {&#xA;        size&#xA;      }&#xA;      ... on Bar {&#xA;        size&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Aliases on <code>size</code> would make the query work, but I can't use them here, because the query results will be passed back to another API which expect <code>Duck.category</code> to have a key named exactly <code>size</code>.</p>&#xA;&#xA;<p>Is there any workaround, or schema refactoring I could use here to get this working ?</p>&#xA;",2252326,,6463558,2021-04-02 06:03:38,2021-04-02 06:03:38,How to query same field with different types in an Union?,<graphql><graphql-js>,1,2,0,2019-10-14 15:25:09
58380478,2,,58379796,1,,"<p>At a high level, you can only do three things to resolve that error:</p>&#xA;&#xA;<ul>&#xA;<li>Refactor the schema so that the <code>size</code> field is the same type for both types.</li>&#xA;<li>Alias one or both fields.</li>&#xA;<li>Only request the field for one of the types.</li>&#xA;</ul>&#xA;&#xA;<p>If you need to pass the response to another API, the easiest thing would be to use aliases and then transform the response client-side before sending it to the API.</p>&#xA;",6024220,,,,2019-10-14 16:12:19,"",,0,0,0,2019-10-14 16:12:19
58382579,1,,,1,136,"<p>I am fairly new to graphql and couldn't find an answer to the error given below even though I searched, any help would be greatly appreciated.</p>&#xA;&#xA;<p>I am trying to use the MaxQueryComplexityInstrumentation to calculate the complexity of a given query. Here the backend I used was a mock backend (<a href=""https://api.graph.cool/simple/v1/swapi"" rel=""nofollow noreferrer"">https://api.graph.cool/simple/v1/swapi</a>).</p>&#xA;&#xA;<p>The code given below works fine for a local graphql server, but won't work with the mock backend. One difference that I've noticed is when the required symbol (""!"") is given for that particular query within the schema this seems to be happening.</p>&#xA;&#xA;<p>After trying the code with a debugger, I found out that this error is caused by the "".execute()"" call. Also, note that the mock backend returns values and does not give any null values as responses.</p>&#xA;&#xA;<p>This is the code written to set up the MaxQueryComplexityInstrumentation.</p>&#xA;&#xA;<pre><code>    private boolean queryComplexityAnalysis(String payload) {&#xA;        GraphQL runtime = GraphQL.newGraphQL(schema)&#xA;                .instrumentation(new MaxQueryComplexityInstrumentation(GraphQLAPISecurityConstants.MAX_QUERY_COMPLEXITY))&#xA;                .build();&#xA;&#xA;        try {&#xA;            ExecutionResult execution = runtime.execute(payload);&#xA;            List&lt;GraphQLError&gt; errors = execution.getErrors();&#xA;            if (errors.size()&gt;0) {&#xA;                for(GraphQLError temp : errors) {&#xA;                    log.error(temp);&#xA;                }&#xA;                return false;&#xA;            }&#xA;            System.out.println(""Maximum query complexity was not exceeded"");&#xA;            return true;&#xA;        } catch (Throwable e) {&#xA;            log.error(e);&#xA;        }&#xA;        return false;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>If MAX_QUERY_COMPLEXITY = 3, and I pass in a query with complexity 7, it gives the correct response saying that the maximum query complexity exceeded. </p>&#xA;&#xA;<pre><code>graphql.execution.AbortExecutionException: maximum query complexity exceeded 7 &gt; 3&#xA;</code></pre>&#xA;&#xA;<p>But if I pass in a query with anything less than or equal to 3 (for example, ""{ allFilms{title  episodeId}}""), it gives a NonNullableFieldWasNullError as shown below. Although the expected result here is to just print ""Maximum query complexity was not exceeded"".</p>&#xA;&#xA;<pre><code>NonNullableFieldWasNullError{message='Cannot return null for non-nullable type: 'null' within parent 'Query' (/allFilms)', path=[allFilms]}&#xA;</code></pre>&#xA;&#xA;<p>Any help would be greatly appreciated. Thanks in advance!</p>&#xA;",11943018,,,,2019-10-14 18:56:10,NonNullableFieldWasNullError when trying to use analysis under graphql-java,<java><graphql><graphql-java>,0,0,0,2019-10-14 18:56:10
58400814,1,58401032,,1,363,"<p>I'm trying to map over a graphql query with an imported component. The data is hooked up properly, but not passing. I get the error <code>Missing product attribute on result</code></p>&#xA;&#xA;<p>I narrowed down that the issue is in passing of the data.</p>&#xA;&#xA;<p>Here is what I have:</p>&#xA;&#xA;<pre><code>&lt;template&gt;&#xA;  &lt;div class=""CoffeeSection""&gt;&#xA;    &lt;h2&gt;Coffees&lt;/h2&gt;&#xA;    &lt;div class=""Cards""&gt;&#xA;      &lt;CoffeeCard&#xA;        v-for=""product of products""&#xA;        :key=""product.id""&#xA;        :title=""product.title""&#xA;        :slug=""product.slug""&#xA;        :image=""product.image.handle""&#xA;      &gt;&lt;/CoffeeCard&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/template&gt;&#xA;&#xA;</code></pre>&#xA;&#xA;<p>Am I appropriately mapping over the query here?</p>&#xA;&#xA;<pre><code>&lt;script&gt;&#xA;import CoffeeCard from ""./CoffeeCard"";&#xA;&#xA;import gql from ""graphql-tag"";&#xA;&#xA;const products = gql`&#xA;  query {&#xA;    products {&#xA;      title&#xA;      image {&#xA;        url&#xA;        handle&#xA;      }&#xA;      description&#xA;      price&#xA;      slug&#xA;      category {&#xA;        name&#xA;        description&#xA;        products {&#xA;          title&#xA;          image {&#xA;            url&#xA;            handle&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;export default {&#xA;  name: ""Coffees"",&#xA;  data: () =&gt; ({&#xA;    loading: 0,&#xA;    products: []&#xA;  }),&#xA;  apollo: {&#xA;    $loadingKey: ""loading"",&#xA;    product: {&#xA;      query: products&#xA;    }&#xA;  },&#xA;  components: {&#xA;    CoffeeCard&#xA;  }&#xA;};&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;&#xA;<p>I get the error <code>Missing product attribute on result</code>.</p>&#xA;",10749245,,,,2019-10-15 18:55:48,"How to fix ""Missing product attribute on result""",<vue.js><graphql><apollo>,1,0,0,2019-10-15 18:39:55
58401032,2,,58400814,0,,"<p>A smart query in <code>vue-apollo</code> is added by adding a property under <code>apollo</code> whose name doesn't start with a <code>$</code>. The name of this property should match both the value you initialize inside <code>data</code> to store the result as well as the name of the root field you're querying (i.e. <code>products</code>). However, it looks like instead of <code>products</code>, you've named the smart query <code>product</code> instead, causing the error you're seeing.</p>&#xA;&#xA;<p>You can check out the <a href=""https://vue-apollo.netlify.com/guide/apollo/queries.html#name-matching"" rel=""nofollow noreferrer"">docs</a> for additional details and examples.</p>&#xA;",6024220,,,,2019-10-15 18:55:48,"",,0,1,0,2019-10-15 18:55:48
58438482,2,,58435261,1,,"<p>I finally had one of my coworkers take a look at my code.  All I had to do was wrap my $slug variable in brackets as so:</p>&#xA;&#xA;<pre><code>entries (section: ""campaigns"", slug: [$slug] )&#xA;</code></pre>&#xA;&#xA;<p>That's two days I wish I could have back.</p>&#xA;",12233374,,,,2019-10-17 18:09:30,"",,0,0,0,2019-10-17 18:09:30
58449014,1,,,0,1009,"<p>I'm fairly new to GraphQL. Previously I've used Firebase, and when I started learning, I've realised that there's no support for arrays. I couldn't understand why, but after reading <a href=""https://firebase.googleblog.com/2014/04/best-practices-arrays-in-firebase.html"" rel=""nofollow noreferrer"">this explanation of it</a>, and started to think in that way, and to use it in practice, everything became easier and faster.</p>&#xA;&#xA;<p>Check the numbers. Numbers of speed, and characters of code of each approach:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const obj = {&#xD;&#xA;	id: {&#xD;&#xA;  	data: ""foo""&#xD;&#xA;  }&#xD;&#xA;};&#xD;&#xA;const arr = [{&#xD;&#xA;	id: ""id"",&#xD;&#xA;  data: ""foo""&#xD;&#xA;}];&#xD;&#xA;const required = ""id"";&#xD;&#xA;&#xD;&#xA;console.time(""Get data by key from object"");&#xD;&#xA;(() =&gt; obj[required])();&#xD;&#xA;console.timeEnd(""Get data by key from object"");&#xD;&#xA;&#xD;&#xA;console.time(""Get data by finding key's value from array"");&#xD;&#xA;(() =&gt; arr.find(({ id }) =&gt; id === required))();&#xD;&#xA;console.timeEnd(""Get data by finding key's value from array"");&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;console.time(""Set data of object by key from object"");&#xD;&#xA;(() =&gt; obj[required].data = ""bar"")();&#xD;&#xA;console.timeEnd(""Set data of object by key from object"");&#xD;&#xA;&#xD;&#xA;console.time(""Set data of object by finding key's value from array"");&#xD;&#xA;(() =&gt; arr.find(({ id }) =&gt; id === required).data = ""bar"")();&#xD;&#xA;console.timeEnd(""Set data of object by finding key's value from array"");</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>Long story short, I'm learning GraphQL, and I haven't found a method which can be used with this approach.</p>&#xA;&#xA;<p>For example in this data structure:</p>&#xA;&#xA;<pre><code>users: {&#xA;  ""firstUser"": {&#xA;    name: ""first user's name""&#xA;  },&#xA;  ""secondUser"": {&#xA;    name: ""second user's name""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'd need something like:</p>&#xA;&#xA;<pre><code>union Ids = String | [String!]&#xA;&#xA;type User {&#xA;    name: String&#xA;}&#xA;&#xA;type Query {&#xA;  users(id: Ids): {&#xA;  # the [id] would mean that it's returning unknown, even multiple fields&#xA;    [id]: User&#xA;  }&#xA;}&#xA;&#xA;# querying like&#xA;&#xA;query Users (id: [""firstUser"", ""secondUser""]) {&#xA;    name&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So basically what I want to pass an array of ids, and the query would return exactly the same data structure as shown in the second snippet.</p>&#xA;&#xA;<p>I'm very new to GraphQL, so every tip would be useful if I've made something wrong, or anything.</p>&#xA;",9307392,,9307392,2019-10-18 10:58:46,2019-10-18 10:58:46,Is there a way to write a type for unknown keys in GraphQL?,<javascript><graphql>,0,2,0,2019-10-18 10:29:36
58452841,1,,,1,302,"<p>I'm pretty new to magento but I get used to it. I want to retrieve some product data from my local server but it doesn't want to fetch with graphql in any way, I can't find a way to know if I have to activate it, </p>&#xA;&#xA;<p>I tried to look for tutorials on how use it on magento 2 but it keeps giving me results for custom modules. The data I want to retrieve is NOT custom. It works well on the production website but my local server won't allow it. </p>&#xA;&#xA;<p>I'm using graphiql to test if it works but nothing does... I'm using the following query and using typical endpoint (as all the tutorials tell you to)</p>&#xA;&#xA;<pre><code>{ cmsPage(&#xA;    id:2&#xA;  ) {&#xA;    title&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What it returns on GraphIQL with endpoint <a href=""http://www.myserver.local/graphql"" rel=""nofollow noreferrer"">http://www.myserver.local/graphql</a>:</p>&#xA;&#xA;<pre><code>TypeError: Failed to fetch&#xA;</code></pre>&#xA;&#xA;<p>What I expect it to be : </p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""The CMS page with the \""2\"" ID doesn't exist."",&#xA;      ""category"": ""graphql-no-such-entity"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 1,&#xA;          ""column"": 3&#xA;        }&#xA;      ],&#xA;      ""path"": [&#xA;        ""cmsPage""&#xA;      ]&#xA;    }&#xA;  ],&#xA;  ""data"": {&#xA;    ""cmsPage"": null&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Thanks for your time, hope you can find it</p>&#xA;",12238945,,12238945,2019-10-18 14:37:03,2019-10-18 14:37:03,Can't fetch my magento 2.3.3 data with graphql,<magento><graphql>,0,0,0,2019-10-18 14:25:33
58453002,1,58540784,,0,1009,"<p>I am using graphql in order to show the number of pull requests made by a user. The query works fine when I ran it on the graphql explorer by GitHub. However when I run the script, it shows KeyError and that the expected value is string. Even though the username entered is converted to a string.</p>&#xA;&#xA;<p>Here's the code:</p>&#xA;&#xA;<pre><code>accessToken = ""###################################""        &#xA;headers = {""Authorization"": ""bearer ""+ accessToken }&#xA;&#xA;    def getpullRequests(username):&#xA;        topic_query = """"""&#xA;        query {&#xA;        repositoryOwner(login:"""""" + str(username) + """""") {&#xA;            login &#xA;            ... on User {&#xA;            name&#xA;            avatarUrl&#xA;            pullRequests(last: 100){&#xA;                nodes{&#xA;                id&#xA;                createdAt&#xA;                additions&#xA;                deletions&#xA;                }&#xA;            }&#xA;            } &#xA;        }&#xA;        } &#xA;        """"""&#xA;        request = requests.post('https://api.github.com/graphql', json={'query': topic_query}, headers=headers)&#xA;        if request.status_code == 200:&#xA;            result = request.json()&#xA;            prsdata = {}&#xA;            for pr in result['data']['repositoryOwner']['pullRequests']['nodes']:&#xA;                prdata = {}&#xA;                if re.match(r'^2019-10', pr['createdAt']):&#xA;                    prdata['createdAt'] = pr['createdAt']&#xA;                    prdata['additions'] = pr['additions']&#xA;                    prdata['deletions'] = pr['deletions']&#xA;                    prsdata[pr['id']] = prdata&#xA;            if prsdata:&#xA;                print(prsdata)&#xA;            else:&#xA;                print(""No PRs made in Hacktoberfest"")&#xA;&#xA;    if __name__ == ""__main__"":&#xA;        username = input(""Enter the GitHub username: "")&#xA;        getpullRequests(username)&#xA;</code></pre>&#xA;&#xA;<p>However on debugging after some tries I found out that the problem is with this line:</p>&#xA;&#xA;<pre><code>for pr in result['data']['repositoryOwner']['pullRequests']['nodes']:&#xA;</code></pre>&#xA;&#xA;<p>On running the code, the error I face is :</p>&#xA;&#xA;<pre><code>Enter the GitHub username: adiaux&#xA;Traceback (most recent call last):&#xA;  File ""script.py"", line 47, in &lt;module&gt;&#xA;    getpullRequests(username)&#xA;  File ""script.py"", line 33, in getpullRequests&#xA;    for pr in result['data']['repositoryOwner']['pullRequests']['nodes']:&#xA;KeyError: 'data'&#xA;</code></pre>&#xA;&#xA;<p>Someone please help :)</p>&#xA;",12238655,,12238655,2019-10-18 16:29:57,2019-10-24 11:50:52,KeyError: 'data' in python3,<json><python-3.x><graphql><python-3.7>,1,0,0,2019-10-18 14:35:01
58458989,2,,54312042,0,,"<p>You might have already figured this out, I ran into the same issue. The only way I could get it to work is if all the references were from the same content type. I couldn't mix and match them. </p>&#xA;",6895917,,,,2019-10-18 22:44:40,"",,0,0,0,2019-10-18 22:44:40
58481662,2,,58470805,0,,"<p>I had error while using <code>@Arg</code> imported from <code>typeGraphql</code> for passing an array of string so I resolved it so <code>add()</code> from <code>typeOrm</code> takes the Id array&#xA;so the fast and performant example of relational query is:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { Resolver, Arg, Mutation } from &quot;type-graphql&quot;;&#xA;import { Todo } from &quot;../../entity/Todo&quot;;&#xA;import { createQueryBuilder } from &quot;typeorm&quot;;&#xA;&#xA;@Resolver()&#xA;export class BulkAssignTagsResolver {&#xA;  @Mutation(() =&gt; Todo)&#xA;  async bulkAssignTodoTag(&#xA;    @Arg(&quot;tagIds&quot;, () =&gt; [String]) tagIds: string[],&#xA;    @Arg(&quot;todoId&quot;) todoId: string&#xA;  ): Promise&lt;Todo | undefined&gt; {&#xA;    await createQueryBuilder(&quot;todo&quot;)&#xA;      .relation(Todo, &quot;tags&quot;)&#xA;      .of(todoId)&#xA;      .add(tagIds);&#xA;&#xA;    return Todo.findOne(todoId, { relations: [&quot;tags&quot;] });&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3469668,,10380981,2020-11-23 08:16:31,2020-11-23 08:16:31,"",,0,0,0,2019-10-21 07:31:08
58486595,1,,,-1,1047,"<p>I am trying to edit an already placed order using the Shopify GraphQL APIs.&#xA;I am getting valid results for getting the shop information, so there are no issues with connecting to shopify. But while creating the <code>beginEdit</code> mutation I am getting the response </p>&#xA;&#xA;<p><strong><code>Field 'orderEditBegin' doesn't exist on type 'Mutation'</code>.</strong></p>&#xA;&#xA;<p>The PHP library I have used is <a href=""https://github.com/phpclassic/php-shopify"" rel=""nofollow noreferrer"">this</a>, the code used is also based on this library. Credentials used are from a private Shopify app. I have also tried using another <a href=""https://github.com/ohmybrew/Basic-Shopify-API"" rel=""nofollow noreferrer"">PHP library</a>, but is getting the same response.</p>&#xA;&#xA;<p>Below is what I have tried,</p>&#xA;&#xA;<pre><code>$config = array(&#xA;   'ShopUrl' =&gt; '*******.myshopify.com',&#xA;   'ApiKey' =&gt; '********************',&#xA;   'SharedSecret' =&gt; '********************',&#xA;   'AccessToken' =&gt; '********************'&#xA;);&#xA;&#xA;$shopify = PHPShopify\ShopifySDK::config($config);&#xA;&#xA;$graphQL = &lt;&lt;&lt;Query&#xA;        mutation beginEdit{&#xA; orderEditBegin(id: ""gid://shopify/Order/1234""){&#xA;    calculatedOrder{&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;Query;&#xA;&#xA;var_dump($shopify-&gt;GraphQL-&gt;post($graphQL));&#xA;</code></pre>&#xA;&#xA;<p>What am I doing wrong here?</p>&#xA;",4003801,,,,2019-10-22 07:44:07,Shopify GraphQL API: Editing an order,<php><api><graphql><shopify>,1,0,0,2019-10-21 12:44:57
58508714,2,,58508607,0,,<p><code>JSON.parse()</code> takes a JSON string and transforms it into a JavaScript object. From there you can just return the value of the desired key.</p>&#xA;,9139132,,1715829,2019-10-22 16:42:03,2019-10-22 16:42:03,"",,0,0,0,2019-10-22 16:33:40
58511781,1,,,1,119,"<p>I've got a GraphQL schema for musical compositions which has an array of nested types for every instrument in the composition. The nested type includes the name of the instrument and a data field (defined as an array of bools).</p>&#xA;&#xA;<p>How do I write the mutation in JS using a variable for the nested objects?</p>&#xA;&#xA;<p>Below is what I've got using the nested types hardcoded to <code>[{instrument: ""Bass"", data: [true, false]}]</code></p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>&#xA;const obj = JSON.stringify([{instrument: ""Bass"", data: [true, false]}])&#xA;&#xA;const query = `mutation {&#xA;  createComposition(&#xA;    compositionInput: {&#xA;      recording: ${obj}&#xA;    }&#xA;  ){&#xA;    shortid&#xA;  }&#xA;}`&#xA;&#xA;const body = JSON.stringify({ query })&#xA;&#xA;const options = {&#xA;  method: 'POST',&#xA;  headers: { 'Content-Type': 'application/json' },&#xA;  body&#xA;}&#xA;&#xA;fetch(url, options)&#xA;  .then(res =&gt; res.json())&#xA;  .then(res =&gt; {&#xA;    if (res.errors) console.log(res.errors)&#xA;    else console.log(res.data)&#xA;  })&#xA;</code></pre>&#xA;&#xA;<p>This fails with <code>Syntax Error: Expected Name, found String ""instrument""</code>. Here's the full query body for the request:</p>&#xA;&#xA;<pre><code>{""query"":""mutation {\n      createComposition(\n        compositionInput: {\n          recording: [{\""instrument\"":\""Bass\"",\""data\"":[true,false]}]\n        }\n      ){\n        shortid\n      }\n    }""}&#xA;</code></pre>&#xA;&#xA;<p>The double stringify seems to be the problem causing escaped quotes on the nested object properties, but I don't know how else to do it.</p>&#xA;&#xA;<p>Using string interpolation with the raw object turns it into ye olde <code>[object Object]</code> and if I hardcode the object directly into the string (bypassing the first stringify call) it works fine, but I want the object to be variable.</p>&#xA;&#xA;<p>I've found this solution <a href=""https://stackoverflow.com/questions/48614730/how-can-i-convert-the-object-array-to-graphql-format-in-javascript"">How can I convert the object array to GraphQL format in Javascript?</a> but the answer is to regex out the double quotes generated by the first stringify. That feels like a hack.</p>&#xA;&#xA;<p>It seems like it shouldn't be this hard and if it is I'd imagine it'd be a common problem. Could I be doing this totally wrong? Any ideas?</p>&#xA;&#xA;<p>Here's the entire schema definition:</p>&#xA;&#xA;<pre><code>  type Composition {&#xA;    _id: ID!&#xA;    recording: [InstrumentRecording!]!&#xA;    created: String!&#xA;    modified: String!&#xA;    shortid: String!&#xA;  }&#xA;&#xA;  input CompositionInput {&#xA;    recording: [InstrumentRecordingInput!]!&#xA;  }&#xA;&#xA;  type InstrumentRecording {&#xA;    instrument: String!&#xA;    data: [Boolean!]!&#xA;  }&#xA;&#xA;  input InstrumentRecordingInput {&#xA;    instrument: String!&#xA;    data: [Boolean!]!&#xA;  }&#xA;&#xA;  type Query {&#xA;    compositions: [Composition!]!&#xA;  }&#xA;&#xA;  type Mutation {&#xA;    createComposition(compositionInput: CompositionInput): Composition&#xA;  }&#xA;&#xA;  schema {&#xA;    query: Query&#xA;    mutation: Mutation&#xA;  }&#xA;</code></pre>&#xA;",49294,,49294,2019-10-23 00:05:50,2019-10-23 00:05:50,How do I write a valid GraphQL mutation with a stringified nested object in JavaScript?,<javascript><json><graphql>,0,2,0,2019-10-22 20:24:26
58522316,2,,58505491,0,,"<p>I have made it work by:</p>&#xA;&#xA;<pre><code>_set: ${JSON.stringify(node.fields).replace(/""(w+)""s*:/g, '$1:')}&#xA;</code></pre>&#xA;&#xA;<p>Looks horrid but works. I hope there is a more ""graphql"" way to do this.</p>&#xA;",154285,,,,2019-10-23 11:55:31,"",,0,0,0,2019-10-23 11:55:31
58523087,2,,58520744,0,,"<p>From <a href=""https://github.com/apollographql/apollo-android/issues/1702"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-android/issues/1702</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>You will need to write the code for the adapter that you pass to addCustomTypeAdapter() in addition to specifying customTypeMapping in your gradle file. See <a href=""https://github.com/apollographql/apollo-android#custom-scalar-types"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-android#custom-scalar-types</a> for an exemple of adapter for java.util.Date</p>&#xA;</blockquote>&#xA;&#xA;<p>Apollo cannot generate the custom typse as by definition this is a type you control.</p>&#xA;&#xA;<p>PS: please do not cross post on stack overflow + github as it duplicates the effort to reply and scatters information.</p>&#xA;",752630,,,,2019-10-23 12:40:24,"",,0,1,0,2019-10-23 12:40:24
58536442,2,,58536354,1,,"<blockquote>&#xA;  <p>What do I need to put in the return block to get the id?</p>&#xA;</blockquote>&#xA;&#xA;<p>Given <code>incidents</code> is a list of <code>incident</code>s, just use <code>map()</code> to iterate per incident.id.</p>&#xA;&#xA;<pre><code>const getTimes = (incident) =&gt; (incident.map(i =&gt; (&lt;span&gt;i.time&lt;/span&gt;)))&#xA;&#xA;return (&#xA;  &lt;&gt;&#xA;    &lt;h1&gt;Count: {incidents.length}&lt;/h1&gt;&#xA;    {incidents.map(incident =&gt; (&#xA;      &lt;span&gt;{incident.id}&lt;/span&gt;&#xA;      {getTimes(incident.incident)}&#xA;    )}&#xA;  &lt;/&gt;&#xA;)&#xA;</code></pre>&#xA;",8012206,,8012206,2019-10-25 21:18:30,2019-10-25 21:18:30,"",,0,4,0,2019-10-24 07:40:55
58540784,2,,58453002,0,,"<p>I found a solution.&#xA;Basically I used the graphQL variables and made the variable into a dict, like this:</p>&#xA;&#xA;<pre><code> variables=dict({&#xA;        ""name"":str(username)&#xA;    })&#xA;</code></pre>&#xA;&#xA;<p>However accordingly I modified the the query by including:</p>&#xA;&#xA;<pre><code> query ($name:String!){&#xA;    repositoryOwner(login:$name){&#xA;        login &#xA;        ... on User {&#xA;        name&#xA;        avatarUrl&#xA;        pullRequests(last: 100){&#xA;            nodes{&#xA;            id&#xA;            createdAt&#xA;            additions&#xA;            deletions&#xA;            }&#xA;        }&#xA;        } &#xA;    }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Thanks to whoever tried to solve this :)</p>&#xA;",12238655,,,,2019-10-24 11:50:52,"",,0,0,0,2019-10-24 11:50:52
58541346,1,,,0,460,"<p>I'm using Apollo/GraphQL + Strapi for a backend API setup – I'm new to this configuration so please forgive the simple question.</p>&#xA;&#xA;<p>I'm trying to make a simple API query using GraphQL but for some reason nesting the queries seems to block data from being returned. In the GraphQL playground (in which everything seems to be working OK in general) if I make the query:</p>&#xA;&#xA;<pre><code>query {&#xA;  statements {&#xA;    id&#xA;    description&#xA;    keywords {&#xA;      description&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then I get:</p>&#xA;&#xA;<pre><code>""statements"": [&#xA;      {&#xA;        ""id"": ""1"",&#xA;        ""description"": ""Lorum ipsum dolor est..."",&#xA;        ""keywords"": [&#xA;          {&#xA;            ""description"": ""lorum""&#xA;          }&#xA;        ]&#xA;      },&#xA;  ... &#xA;]&#xA;</code></pre>&#xA;&#xA;<p>Which is what I would expect – I get the object with the <code>description</code>  within the <code>keyword</code> array. However if I then nest that same query for <code>statements</code> within a larger query tied to <code>concepts</code> with:</p>&#xA;&#xA;<pre><code>query {&#xA;  concepts {&#xA;    id&#xA;    Title&#xA;    statements {&#xA;      id&#xA;      description&#xA;      keywords {&#xA;        description&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get the following, <em>without</em> the data coming through in the nested <code>keywords</code> array...</p>&#xA;&#xA;<pre><code>""concepts"": [&#xA;      {&#xA;        ""id"": ""1"",&#xA;        ""Title"": ""Lorum Ipsum"",&#xA;        ""statements"": [&#xA;          {&#xA;            ""id"": ""1"",&#xA;            ""description"": ""Lorum ipsum dolor est..."",&#xA;            ""keywords"": []&#xA;          },&#xA;  ...&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>I presume this must be a syntax error on my part(?) but I cannot work out how to get this working – it seems like a very basic aspect of the Graph query language.</p>&#xA;",7031962,,7031962,2019-10-24 12:30:49,2019-10-24 12:30:49,Graph QL Nested Queries,<javascript><graphql><apollo><graphql-js><strapi>,0,2,0,2019-10-24 12:24:47
58575267,2,,55469347,0,,"<p>You use the wrong API endpoint.&#xA;I assumed you use the storeFront API, please try this: <code>/api/2019-10/graphql.json</code></p>&#xA;&#xA;<p><a href=""https://help.shopify.com/en/api/storefront-api/reference/object/productsortkeys"" rel=""nofollow noreferrer"">Document</a></p>&#xA;",6693061,,,,2019-10-26 22:38:42,"",,0,0,0,2019-10-26 22:38:42
58576247,2,,58495464,0,,"<p>In <code>subLinks: []</code> you define an array.</p>&#xA;&#xA;<p>In your graphQL query you define an object</p>&#xA;&#xA;<pre><code>subLinks {&#xA;  icon,&#xA;  label,&#xA;  to&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>An array is not an object. GraphQl expects an object key <code>subLinks</code> that contains object but finds <code>subLinks</code> that contains an array.</p>&#xA;&#xA;<p>I think changing your sublinks in your data object to <code>subLinks: {}</code> (note the curly braces) should suffice.</p>&#xA;",3689364,,,,2019-10-27 02:39:18,"",,0,0,0,2019-10-27 02:39:18
58598192,2,,58595963,1,,<p>Ended up that orders is an array and I should have written my accessor as such: </p>&#xA;&#xA;<p><code>orders[0].order_items</code> .. so it wasn't necessarily React Table. It was the type of data that I had to iterate over.</p>&#xA;,9937870,,,,2019-10-28 20:48:18,"",,0,1,0,2019-10-28 20:48:18
58630892,1,,,0,29,"<p>We've created a server Apollo Server which recover datas for various sources and allow to do proper queries in graphQL to recover theses datas. For a specific content, to have the full content, the GraphQL query is very huge and complicated to have the full content and the content continue to involve, so the query should follow. Like we need to have the full content, frontend would like to do a simple query which will not specify fields but return the entire content like something:</p>&#xA;&#xA;<pre><code>{&#xA;  BigContent(id: 'test')&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The goal is to have a query which always return the full content without update the query but we haven't find anything for that and we suppose it's opposite to the philosophy of graphQL.</p>&#xA;",7206798,,,,2019-10-30 17:34:38,Do a full query simply in GraphQL,<graphql><middleware><apollo>,0,4,0,2019-10-30 17:34:38
58657533,2,,49847145,7,,"<p>I came across this question trying to find a solution to the same issue after started using <code>@apollo/react-hooks</code>. As the formulation of error is the same, I will still provide my answer in case it helps somebody.</p>&#xA;&#xA;<p>The error was a lack of <code>ApolloHooksProvider</code> around the content. I fixed it with changing this</p>&#xA;&#xA;<pre><code>&lt;ApolloProvider client={client}&gt;&#xA;    &lt;Content /&gt;&#xA;&lt;/ApolloProvider&gt;&#xA;</code></pre>&#xA;&#xA;<p>to this</p>&#xA;&#xA;<pre><code>import { ApolloProvider as ApolloHooksProvider } from '@apollo/react-hooks'&#xA;&#xA;&lt;ApolloProvider client={client}&gt;&#xA;    &lt;ApolloHooksProvider client={client}&gt;&#xA;        &lt;Content /&gt;&#xA;    &lt;/ApolloHooksProvider&gt;&#xA;&lt;/ApolloProvider&gt;&#xA;</code></pre>&#xA;",4083045,,,,2019-11-01 10:20:04,"",,0,1,0,2019-11-01 10:20:04
58678078,1,,,1,256,"<p>Is it possible to get the contributors to a repository using GitHub's graphql api? I've been searching in the explorer and I can't find a <code>contributor</code> property or anything like that on the <code>Repository</code> node. </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/wdbRF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wdbRF.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>However, it seems that given a user, the api lets you find out which repositories they've contributed to:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/4E8q8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4E8q8.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Am I missing something or does the V4 api really not support getting the contributors of a repository?</p>&#xA;",1489726,,,,2019-11-03 07:01:34,Get repository contributors with Github Graph Api V4,<github-api><github-graphql>,0,0,0,2019-11-03 07:01:34
58688652,1,,,0,1083,"<p>I just started a trivial graphql schema:</p>&#xA;&#xA;<pre><code>type Product {&#xA;    productID: ID!&#xA;    name: String @search(by: [term])&#xA;    reviews: [Review] @hasInverse(field: about)&#xA;}&#xA;&#xA;type Review {&#xA;    id: ID!&#xA;    about: Product! @hasInverse(field: reviews)&#xA;    by: Customer! @hasInverse(field: reviews)&#xA;    comment: String @search(by: [fulltext])&#xA;    rating: Int @search&#xA;}&#xA;&#xA;type Customer {&#xA;    custID: ID!&#xA;    name: String @search(by: [hash, regexp])&#xA;    reviews: [Review] @hasInverse(field: by)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now I want to populate the DB with millions of json entries without calling the graphql mutation (too slow). For instance I have a folder full of several json files (customers and products) of the following shape.</p>&#xA;&#xA;<p>Example of a json customer file:</p>&#xA;&#xA;<pre><code>{&#xA;id: ""deadbeef"",&#xA;name: ""Bill Gates"",&#xA;reviews: [&#xA;   {&#xA;      id:""1234"",&#xA;      comment: ""nice product""&#xA;      rating: 5,&#xA;      productId: ""5678""&#xA;   }&#xA;]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Example of a json product file:</p>&#xA;&#xA;<pre><code>{&#xA;id: ""5678"",&#xA;name: ""Bluetooth headset"",&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>To what I understood, <a href=""https://docs.dgraph.io/mutations/#edges-between-nodes"" rel=""nofollow noreferrer"">to defined edges between nodes</a>, I first have to overload each object with an <code>uid</code></p>&#xA;&#xA;<p>The customer would become:</p>&#xA;&#xA;<pre><code>{&#xA;id: ""deadbeef"",&#xA;uid: ""_:deadbeef"",&#xA;...&#xA;reviews: [&#xA;   {&#xA;      id:""1234"",&#xA;      uid:""_:1234"",&#xA;      productId: {uid: ""_:5678""}&#xA;   }&#xA;]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the product</p>&#xA;&#xA;<pre><code>{&#xA;id: ""5678"",&#xA;uid: ""_:5678""&#xA;...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then we could batch import them (this is pure speculation, I never tried this). While this should import the entries, I would like to know how the DB would associate those entries with a type, because there is no clue yet on the data we want to insert. Is there a property like <code>__typename</code> I could add to each of my entries to type them?</p>&#xA;&#xA;<p>[edit] I've found 2 possible properties <code>class</code> and <code>dgraph.type</code> still wondering which one and how I should use them</p>&#xA;",532695,,532695,2019-11-04 20:51:24,2019-11-07 06:36:28,Graphql + Dgraph how to batch import json data?,<graphql><dgraph>,2,0,0,2019-11-04 07:06:56
58698327,1,,,0,598,"<p>I have 2 collections ProductVariant and Inventory</p>&#xA;&#xA;<pre><code>module.exports = new EntitySchema({&#xA;    name: 'ProductVariant',&#xA;    target: ProductVariant,&#xA;    columns: {&#xA;        id: {&#xA;            primary: true,&#xA;            type: 'varchar',&#xA;        },&#xA;        image: {&#xA;            type: 'json',&#xA;            nullable: true,&#xA;        },&#xA;        productId: {&#xA;            type: 'varchar',&#xA;        },&#xA;    },&#xA;    relations: {&#xA;        product: {&#xA;            target: 'Product',&#xA;            type: 'many-to-one',&#xA;            joinColumn: {&#xA;                name: 'productId',&#xA;            },&#xA;        },&#xA;        inventory: {&#xA;            target: 'Inventory',&#xA;            type: 'one-to-one',&#xA;            inverseSide: 'variantId',&#xA;            cascade: true,&#xA;        },&#xA;    },&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>and inventory </p>&#xA;&#xA;<pre><code>const EntitySchema = require('typeorm').EntitySchema;&#xA;const Inventory = require('../models/inventory').Inventory;&#xA;&#xA;module.exports = new EntitySchema({&#xA;    name: 'Inventory',&#xA;    target: Inventory,&#xA;    columns: {&#xA;        id: {&#xA;            type: 'varchar',&#xA;            primary: true,&#xA;            unique: true,&#xA;        },&#xA;        sku: {&#xA;            type: 'varchar',&#xA;            nullable: true,&#xA;        },&#xA;        variantId: {&#xA;            type: 'varchar',&#xA;        }&#xA;    },&#xA;    relations: {&#xA;        variant: {&#xA;            target: 'ProductVariant',&#xA;            type: 'one-to-one',&#xA;            cascade: true,&#xA;            joinColumn: {&#xA;                name: 'variantId',&#xA;            },&#xA;        },&#xA;    },&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Now if I run this query </p>&#xA;&#xA;<pre><code>const products = await ProductRepo.find({ relations: ['collections', 'variants', 'variants.inventory'] });&#xA;</code></pre>&#xA;&#xA;<p>I get an error saying <code>Cannot read property 'joinColumns' of undefined</code></p>&#xA;&#xA;<p>In my database, the relations are built out perfectly. The only thing that could be wrong here is that there is no path from variant to inventory but there's a path from inventory to variant. So it's not a 2-way thing. Just one to one from one side, but the ORM should have been smart enough to pick it right?&#xA;That's the only thing off here. </p>&#xA;&#xA;<p>Can someone tell me how to fix this. </p>&#xA;",3320962,,,,2019-11-04 18:01:22,How to fix 'Cannot read property 'joinColumns' of undefined' error in EntitySchema for one to one relation,<graphql><typeorm>,1,0,0,2019-11-04 17:23:24
58698805,2,,58698327,0,,"<p>So the error here is simple. In inverse you don't mention the column name, you mention the relation. In my case if you see I have mentioned variantId, replacing it with variant, fixed it for me.</p>&#xA;",3320962,,,,2019-11-04 18:01:22,"",,0,0,0,2019-11-04 18:01:22
58714283,1,58772577,,2,128,"<p>If I use github <code>v3</code> api to access the directory contents of a public repository using the following query: </p>&#xA;&#xA;<pre><code>curl https://api.github.com/repos/w3c/webappsec/contents/&#xA;</code></pre>&#xA;&#xA;<p>what is the equivalent in graphql?</p>&#xA;&#xA;<p>I can get for example the description of the repository by sending the following to: <a href=""https://api.github.com/graphql"" rel=""nofollow noreferrer"">https://api.github.com/graphql</a></p>&#xA;&#xA;<pre><code>query TestQuery{&#xA;    repository(owner:""w3c"" name:""webappsec""){&#xA;      description&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>But how can I get the contents of a repository's directory?</p>&#xA;",1555615,,1555615,2019-11-05 15:22:08,2019-11-08 19:18:39,How can I access github repository contents using graphql (v4 api)?,<github><graphql><github-api><github-api-v4>,1,0,0,2019-11-05 15:12:36
58734176,1,58772379,,19,3764,"<p>When I was using GitHub API v4 to get some information, I can easily get dependencies by using <code>repository.dependencyGraphManifests</code>. But I can't find any way to use GitHub API v4 to get the dependents information, though I can see it in the <code>Insights-&gt;Dependency Graph-&gt;Dependents</code>.&#xA;I want to know if there is any possible way to get the dependents information in a GitHub repository? Whether GitHub API or something else.</p>&#xA;",10468865,,10468865,2019-11-06 16:10:51,2022-11-13 20:22:42,How to use GitHub API to get a repository's dependents information in GitHub?,<github><graphql><github-api>,6,0,0,2019-11-06 16:03:20
58748944,2,,47458143,0,,"<p>@tharinduwijewardane</p>&#xA;&#xA;<p>JFYI, you can download a zip of a specific branch by this query</p>&#xA;&#xA;<pre><code>repository(owner: ""owner"", name: ""repo name"") {&#xA;  object(expression: ""branch"") {&#xA;    ... on Commit {&#xA;      zipballUrl&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",10399490,,,,2019-11-07 12:37:34,"",,0,0,0,2019-11-07 12:37:34
58752657,2,,57630580,0,,"<p>You can use the <a href=""https://www.nuget.org/packages/GraphQL.Client/"" rel=""nofollow noreferrer""><code>GraphQl.Client</code></a> nuget package and use raw graphql query : </p>&#xA;&#xA;<pre><code>var client = new GraphQLClient(""https://api.github.com/graphql"");&#xA;client.DefaultRequestHeaders.Add(""Authorization"", $""bearer {token}"");&#xA;client.DefaultRequestHeaders.Add(""User-Agent"", userLogin );&#xA;var result = await client.PostQueryAsync(@""{&#xA;  repositoryOwner(login: """""" + userLogin + @"""""") {&#xA;    repositories(first: 99) {&#xA;      nodes {&#xA;        name&#xA;        rootFolder: object(expression: """"master:"""") {&#xA;          id&#xA;          ... on Tree {&#xA;            entries {&#xA;              name&#xA;              object {&#xA;                ... on Blob {&#xA;                  byteSize&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}"");&#xA;</code></pre>&#xA;&#xA;<p>and then access the result with something like that : </p>&#xA;&#xA;<pre><code>var size = result.Data.repositoryOwner.repositories.nodes[0].rootFolder.entries[0].@object.byteSize;&#xA;</code></pre>&#xA;",814735,,,,2019-11-07 16:04:00,"",,0,1,0,2019-11-07 16:04:00
58761912,1,,,1,176,"<p>I am beginner with dgraph and shifting from neo4j to dgraph. I am writing schema where I have different social media platforms details. </p>&#xA;&#xA;<p>Considering facebook, the schema will have basic details of the profile,groups,pages plus different relations between the fb profiles and groups and pages like </p>&#xA;&#xA;<pre><code>profile_a is 'friends_of' profile_b;&#xA;user 'likes' page_b;&#xA;user is 'member_of' group_a&#xA;user 'works_at' place_a&#xA;</code></pre>&#xA;&#xA;<p>Similar case for twitter where the relations will be </p>&#xA;&#xA;<pre><code>twitter_user 'follows' user_a&#xA;user_a 'followed_by' users&#xA;</code></pre>&#xA;&#xA;<p>What I have done so for</p>&#xA;&#xA;<pre><code>type Person{&#xA;        name: string @index(exact) .&#xA;        id: string @index(exact) .&#xA;        profile: string @index(exact) .&#xA;        picture_link: string .&#xA;        status_count: int .&#xA;        location: string .&#xA;        tags: string .&#xA;        user_id: int .&#xA;        follower_count: string .&#xA;        friend_count: string .&#xA;        type: int @index(exact) .   &#xA;        likes : [Page] .&#xA;        friends_of : [Fb_User] .&#xA;        members_of : [Group] .&#xA;        works_at : {&#xA;            name: string .&#xA;        }      &#xA;    }&#xA;&#xA;    type Fb_User{&#xA;        name: string @index(exact) .&#xA;        id: string @index(exact) .&#xA;        profile: string @index(exact) .&#xA;        picture_link: string .&#xA;        status_count: int .&#xA;        location: string .&#xA;        type: int @index(exact) .  &#xA;        location: string .   &#xA;        tags: string .&#xA;        user_id: int .&#xA;    }&#xA;&#xA;    type Group{&#xA;        name: string @index(exact) .&#xA;        id: string @index(exact) .&#xA;        profile: string @index(exact) .&#xA;        picture_link: string .&#xA;        group_member : int .&#xA;&#xA;    }&#xA;&#xA;    type Page{&#xA;        name: string @index(exact) .&#xA;        id: string @index(exact) .&#xA;        profile: string @index(exact) .&#xA;        picture_link: string .&#xA;        page_type : int .&#xA;&#xA;    }&#xA;&#xA;    type Facebook&#xA;     {  &#xA;        label: string @index(exact)  &#xA;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Kindly guide and correct me about schema structure. Looking forward to implement it in pydgraph</p>&#xA;&#xA;<p>Thanks</p>&#xA;&#xA;<p>Got help from&#xA;<a href=""https://tour.dgraph.io/schema/1/"" rel=""nofollow noreferrer"">https://tour.dgraph.io/schema/1/</a></p>&#xA;&#xA;<p>I expect a schema that will accept the basic details and relations via python code</p>&#xA;",10858106,,11733759,2019-11-08 08:29:13,2020-01-31 14:17:01,Writing Social media's schema in dgraph,<python><graph><graphql><dgraph>,1,0,0,2019-11-08 07:04:32
58772379,2,,58734176,11,,"<p>I don't think you can get the dependents project using Github API (Rest or Graphql), one way could be to use scraping like the following <a href=""/questions/tagged/python"" class=""post-tag"" title=""show questions tagged &#39;python&#39;"" rel=""tag"">python</a> script : </p>&#xA;&#xA;<pre class=""lang-python prettyprint-override""><code>import requests&#xA;from bs4 import BeautifulSoup&#xA;&#xA;repo = ""expressjs/express""&#xA;page_num = 3&#xA;url = 'https://github.com/{}/network/dependents'.format(repo)&#xA;&#xA;for i in range(page_num):&#xA;    print(""GET "" + url)&#xA;    r = requests.get(url)&#xA;    soup = BeautifulSoup(r.content, ""html.parser"")&#xA;&#xA;    data = [&#xA;        ""{}/{}"".format(&#xA;            t.find('a', {""data-repository-hovercards-enabled"":""""}).text,&#xA;            t.find('a', {""data-hovercard-type"":""repository""}).text&#xA;        )&#xA;        for t in soup.findAll(""div"", {""class"": ""Box-row""})&#xA;    ]&#xA;&#xA;    print(data)&#xA;    print(len(data))&#xA;    paginationContainer = soup.find(""div"", {""class"":""paginate-container""}).find('a')&#xA;    if paginationContainer:&#xA;        url = paginationContainer[""href""]&#xA;    else:&#xA;        break&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://repl.it/@bertrandmartel/github-dependents-repo"" rel=""noreferrer"">Try this python script</a></p>&#xA;",2614364,,2614364,2020-04-09 12:01:26,2020-04-09 12:01:26,"",,0,2,0,2019-11-08 18:59:58
58772577,2,,58714283,1,,"<p>You can use <code>object(expression: ""branch_name:"")</code> and list the tree entries: </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner: ""w3c"", name: ""webappsec"") {&#xA;    object(expression: ""master:"") {&#xA;      ... on Tree {&#xA;        entries {&#xA;          name&#xA;          type&#xA;          mode&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20repository(owner%3A%20%22w3c%22%2C%20name%3A%20%22webappsec%22)%20%7B%0A%20%20%20%20object(expression%3A%20%22master%3A%22)%20%7B%0A%20%20%20%20%20%20...%20on%20Tree%20%7B%0A%20%20%20%20%20%20%20%20entries%20%7B%0A%20%20%20%20%20%20%20%20%20%20name%0A%20%20%20%20%20%20%20%20%20%20type%0A%20%20%20%20%20%20%20%20%20%20mode%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D"" rel=""nofollow noreferrer"">Try it in the explorer</a></p>&#xA;",2614364,,,,2019-11-08 19:18:39,"",,0,0,0,2019-11-08 19:18:39
58826559,1,,,1,1435,"<p>Assuming I've a db like the quick-start of <a href=""https://graphql.dgraph.io/docs/quick-start/"" rel=""nofollow noreferrer"">https://graphql.dgraph.io/docs/quick-start/</a></p>&#xA;&#xA;<p>i.e. </p>&#xA;&#xA;<pre><code>type Product {&#xA;    productID: ID!&#xA;    name: String @search(by: [term])&#xA;    reviews: [Review] @hasInverse(field: about)&#xA;}&#xA;&#xA;type Customer {&#xA;    custID: ID!&#xA;    name: String @search(by: [hash, regexp])&#xA;    reviews: [Review] @hasInverse(field: by)&#xA;}&#xA;&#xA;type Review {&#xA;    id: ID!&#xA;    about: Product! @hasInverse(field: reviews)&#xA;    by: Customer! @hasInverse(field: reviews)&#xA;    comment: String @search(by: [fulltext])&#xA;    rating: Int @search&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now I would like to import millions of entries and therefore would like to use the bulk loader. My dataset is a bug folder full of <code>.json</code> files.</p>&#xA;&#xA;<p>To what I've seen, I should be able to run a command like&#xA;<code>dgraph bulk -f folderOfJsonFiles -s goldendata.schema --map_shards=4 --reduce_shards=2 --http localhost:8000 --zero=localhost:5080</code></p>&#xA;&#xA;<p>But to run my server, I am using the <code>dgraph/standalone:graphql</code> image  ran <code>docker run -v $(pwd):/dgraph -p 9000:9000 -it dgraph/standalone:graphql</code></p>&#xA;&#xA;<p>Now how to start the bulk import ?</p>&#xA;&#xA;<p><strong>1:</strong>&#xA;Should I run the command within the docker container itself (and share the volume (folder) containing all my <code>.json</code> files ) or install dgraph on my host and run the <code>dgraph bulk</code> command from the host ?</p>&#xA;&#xA;<p><strong>2:</strong> What should be the format of the <code>.json</code> files ?</p>&#xA;&#xA;<p><strong>3:</strong> Would the bulk loader support blank nodes (id which are not <code>_:0x1234</code>) ?</p>&#xA;&#xA;<p>[edit]</p>&#xA;&#xA;<ul>&#xA;<li>bulk loader seems not to support graphql schema, the schema should be converted to rdf first. To achieve this, I exported the schema and data right after importing the graphql schema <code>curl 'localhost:8080/admin/export?format=json'</code></li>&#xA;</ul>&#xA;",532695,,532695,2019-11-13 20:00:04,2019-11-16 20:47:40,How to bulk load data into a dgraph/standalone:graphql container?,<graphql><bulk-load><bulkloader><dgraph>,1,0,0,2019-11-12 20:58:02
58848920,2,,58785801,0,,<p>I found example from github. My guess is right.</p>&#xA;,10333868,,,,2019-11-14 03:26:28,"",,0,0,0,2019-11-14 03:26:28
58851529,1,58851947,,0,458,"<p>I am really new in shopify Api and Graphql. </p>&#xA;&#xA;<p>I created an api call and it returns an error 429 Too many request, i talked to their support and said that i shouldn't put the Graphql call and API on my code.</p>&#xA;&#xA;<p>My question is, how do i put this on my server and use it on my shopify store?</p>&#xA;&#xA;<pre><code>{&#xA;  productVariants(first:1, query:""barcode:155799"") {&#xA;    edges {&#xA;      node {&#xA;        inventoryQuantity&#xA;        legacyResourceId&#xA;        barcode&#xA;        price&#xA;        compareAtPrice&#xA;        availableForSale&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>These are the things i needed. on postman i tried it and works, my question, where will I put my code? Can't put it on my Theme file as not secure showing my Access Token.</p>&#xA;",9358568,,,,2019-11-14 08:01:20,Shopify GRAPHQL Admin,<graphql><shopify><graphql-js><shopify-app>,1,0,0,2019-11-14 07:32:45
58863404,1,58884246,,1,943,"<p>Is there a way to configure React Apollo to pass default query string parameters to each query / mutation ?</p>&#xA;&#xA;<p>For now, all my requests have this format : &#xA;<code>POST https://domain:8000/graphql</code>;</p>&#xA;&#xA;<p>I would like to have something like :&#xA;<code>POST https://domain:8000/graphql?query=queryName</code></p>&#xA;&#xA;<p>This would help for quick debugging purposes in the Chrome DevTools panel.</p>&#xA;",6627882,,,,2022-07-22 08:39:27,Passing query parameters to React Apollo POST requests,<react-apollo><apollo-client>,1,0,0,2019-11-14 18:17:03
58864708,1,,,-1,56,"<p>Struggling to parse what appears to be a simple response from an API service (GraphQL / JSON). The response is retrieved as <code>String</code> based on <code>HTTP request</code>, and have tried different approaches (using both <code>JsonObject/JsonParse</code> and <code>JsonArray</code>from <code>com.google.gson</code>library to get desired string elements to String, although without being able to extract anything. </p>&#xA;&#xA;<p>Anyone willing to share suggestions how to parse and get <code>""total""</code> and <code>""startsAt""</code> from the response shown below?</p>&#xA;&#xA;<pre><code>{&#xA;""data"": {&#xA;    ""viewer"": {&#xA;        ""homes"": [&#xA;            {&#xA;                ""currentSubscription"": {&#xA;                    ""priceInfo"": {&#xA;                        ""current"": {&#xA;                            ""total"": 0.5626,&#xA;                            ""energy"": 0.4336,&#xA;                            ""tax"": 0.129,&#xA;                            ""startsAt"": ""2019-11-14T20:00:00+01:00""&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>}</p>&#xA;",11279296,,162698,2019-11-14 19:52:13,2019-11-15 10:06:04,Struggling to parse response from API service,<json><parsing><graphql>,1,1,0,2019-11-14 19:49:42
58901514,1,58901804,,0,63,"<p>I have been investigating the graphql API call these days. </p>&#xA;&#xA;<p>I have completed the tutorial of GitHub. </p>&#xA;&#xA;<p>My question is that there must be some starting point for each graphql call.</p>&#xA;&#xA;<p>in <a href=""https://developer.github.com/v4/guides/using-the-explorer/"" rel=""nofollow noreferrer"">https://developer.github.com/v4/guides/using-the-explorer/</a></p>&#xA;&#xA;<pre><code># the starting point is the object viewer &#xA;&#xA;query {&#xA;      viewer {&#xA;        login&#xA;        name&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>in <a href=""https://developer.github.com/v4/guides/forming-calls/"" rel=""nofollow noreferrer"">https://developer.github.com/v4/guides/forming-calls/</a></p>&#xA;&#xA;<pre><code># the starting point is the object repository&#xA;&#xA;query {&#xA;  repository(owner:""octocat"", name:""Hello-World"") {&#xA;    issues(last:20, states:CLOSED) {&#xA;      edges {&#xA;        node {&#xA;          title&#xA;          url&#xA;          labels(first:5) {&#xA;            edges {&#xA;              node {&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What is the <strong>set</strong> of the possible objects which can be the starting point of a <strong>""query""</strong> or <strong>""mutation""</strong> in GraphQl call in <strong>Github</strong> ?</p>&#xA;&#xA;<p>It seems the whole documentation of Github didn't mention this.</p>&#xA;",10189759,,,,2019-11-17 15:09:46,What object can be the starting point in github Graphql api?,<rest><api><github><graph><graphql>,1,5,0,2019-11-17 14:32:36
58958136,2,,55877659,0,,"<p>Try to separate graphql import into his own line, worked for me:</p>&#xA;&#xA;<pre><code>import { graphql } from 'gatsby';&#xA;import { Link, useStaticQuery } from 'gatsby';&#xA;</code></pre>&#xA;&#xA;<p>There seem to be an issue open about it on gatsby-plugin-ts-loader repository: <a href=""https://github.com/AdamLeBlanc/gatsby-plugin-ts-loader/issues/1#issuecomment-453876850"" rel=""nofollow noreferrer"">https://github.com/AdamLeBlanc/gatsby-plugin-ts-loader/issues/1#issuecomment-453876850</a></p>&#xA;",7696155,,,,2019-11-20 15:38:38,"",,0,0,0,2019-11-20 15:38:38
58965035,1,58965285,,1,508,"<p>I would like to get a list of all the forks of a specific repository. </p>&#xA;&#xA;<p>When I try the following on <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">explorer</a> </p>&#xA;&#xA;<pre><code>  repository( owner: ""someOrg"", name: ""specificRepo""){&#xA;        name&#xA;        forkCount&#xA;        forks(first: 12){&#xA;          totalCount&#xA;          nodes{&#xA;            name&#xA;          }&#xA;        }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It returns the fork count correctly, but inside nodes, the name is just the original repo name. But I would like it to give the names of all the forked repositories. </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""name"": ""specificRepo"",&#xA;      ""forkCount"": 12,&#xA;      ""forks"": {&#xA;        ""totalCount"": 1,&#xA;        ""nodes"": [&#xA;          {&#xA;            ""name"": ""specificRepo"",&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6637004,,,,2021-08-03 18:32:58,GitHub GraphQL: Get all forks of specific repository,<github><graphql><fork>,2,3,0,2019-11-20 23:36:15
58965285,2,,58965035,2,,"<p>If you fork a repo and then change the name, the <code>name</code> field will reflect the changed name, not the original name. For example, here's a fork of <code>Semantic-UI</code>:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(&#xA;    owner: ""Semantic-Org""&#xA;    name: ""Semantic-Ui""&#xA;  ) {&#xA;    name&#xA;    forkCount&#xA;    forks(&#xA;      first: 12&#xA;      orderBy: { field: NAME, direction: DESC }&#xA;    ) {&#xA;      totalCount&#xA;      nodes {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""name"": ""Semantic-UI"",&#xA;      ""forkCount"": 4936,&#xA;      ""forks"": {&#xA;        ""totalCount"": 4743,&#xA;        ""nodes"": [&#xA;          {&#xA;            ""name"": ""WEB_JS_GUI-Semantic-UI""&#xA;          },&#xA;          {&#xA;            ""name"": ""Vanz-Sing-In""&#xA;          },&#xA;          {&#xA;            ""name"": ""Somewhat-Semantic-UI""&#xA;          },&#xA;          {&#xA;            ""name"": ""semantic_1.0_experiment""&#xA;          },&#xA;          {&#xA;            ""name"": ""semanticui""&#xA;          },&#xA;          {&#xA;            ""name"": ""semantic.ui_main""&#xA;          },&#xA;          {&#xA;            ""name"": ""Semantic-UI-V2""&#xA;          },&#xA;          {&#xA;            ""name"": ""Semantic-UI-tr""&#xA;          },&#xA;          {&#xA;            ""name"": ""Semantic-UI-tr""&#xA;          },&#xA;          {&#xA;            ""name"": ""Semantic-UI-Stylus""&#xA;          },&#xA;          {&#xA;            ""name"": ""Semantic-UI-pt-br""&#xA;          },&#xA;          {&#xA;            ""name"": ""Semantic-UI-pp""&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6024220,,6024220,2019-11-21 03:27:18,2019-11-21 03:27:18,"",,0,8,0,2019-11-21 00:07:27
58966849,2,,58955349,0,,"<p>You can use package <a href=""https://pub.dev/packages/graphql_flutter"" rel=""nofollow noreferrer"">https://pub.dev/packages/graphql_flutter</a> <br>&#xA;A GraphQL client for Flutter, bringing all the features from a modern GraphQL client to one easy to use package. <br>&#xA;Github <a href=""https://github.com/zino-app/graphql-flutter"" rel=""nofollow noreferrer"">https://github.com/zino-app/graphql-flutter</a> <br>&#xA;There are two example you can check <a href=""https://github.com/zino-app/graphql-flutter/tree/master/examples"" rel=""nofollow noreferrer"">https://github.com/zino-app/graphql-flutter/tree/master/examples</a> <br></p>&#xA;&#xA;<p>code snippet for query</p>&#xA;&#xA;<pre><code>String readRepositories = """"""&#xA;  query ReadRepositories(\$nRepositories: Int!) {&#xA;    viewer {&#xA;      repositories(last: \$nRepositories) {&#xA;        nodes {&#xA;          id&#xA;          name&#xA;          viewerHasStarred&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;"""""";&#xA;&#xA;Query(&#xA;  options: QueryOptions(&#xA;    document: readRepositories, // this is the query string you just created&#xA;    variables: {&#xA;      'nRepositories': 50,&#xA;    },&#xA;    pollInterval: 10,&#xA;  ),&#xA;  // Just like in apollo refetch() could be used to manually trigger a refetch&#xA;  // while fetchMore() can be used for pagination purpose&#xA;  builder: (QueryResult result, { VoidCallback refetch, FetchMore fetchMore }) {&#xA;    if (result.errors != null) {&#xA;      return Text(result.errors.toString());&#xA;    }&#xA;&#xA;    if (result.loading) {&#xA;      return Text('Loading');&#xA;    }&#xA;&#xA;    // it can be either Map or List&#xA;    List repositories = result.data['viewer']['repositories']['nodes'];&#xA;&#xA;    return ListView.builder(&#xA;      itemCount: repositories.length,&#xA;      itemBuilder: (context, index) {&#xA;        final repository = repositories[index];&#xA;&#xA;        return Text(repository['name']);&#xA;    });&#xA;  },&#xA;);&#xA;</code></pre>&#xA;",2179571,,,,2019-11-21 03:29:03,"",,0,3,0,2019-11-21 03:29:03
58979723,1,,,1,1050,"<p>I have two different queries.</p>&#xA;&#xA;<p>The first is in a private repo:</p>&#xA;&#xA;<pre><code>const query = `{&#xA;  repository(&#xA;    owner: ""PrivateOrg""&#xA;    name: ""privateRepoName""&#xA;  ) {&#xA;    name&#xA;    forkCount&#xA;    forks(&#xA;      first: 11&#xA;      orderBy: { field: NAME, direction: DESC }&#xA;    ) {&#xA;      totalCount&#xA;      nodes {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>The second is in a public repo. I tested it on <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">Explorer</a> before putting it in my nodeJS app - <strong>it works on explorer</strong>:</p>&#xA;&#xA;<pre><code>const querytwo = `{&#xA;  repository(&#xA;    owner: ""mongodb""&#xA;    name: ""docs-bi-connector""&#xA;  ) {&#xA;    name&#xA;    forkCount&#xA;    forks(&#xA;      first: 27&#xA;      orderBy: { field: NAME, direction: DESC }&#xA;    ) {&#xA;      totalCount&#xA;      nodes {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>The fetch for both look identical except the queries:</p>&#xA;&#xA;<pre><code>  fetch('https://api.github.com/graphql', {&#xA;  method: 'POST',&#xA;  body: JSON.stringify({query}),&#xA;  headers: {&#xA;    'Authorization': `Bearer ${accessToken}`,&#xA;  },&#xA;}).then(res =&gt; res.text())&#xA;  .then(body =&gt; console.log(body))&#xA;  .catch(error =&gt; console.error(error));&#xA;  console.log(""\n\n\n"");&#xA;&#xA;    fetch('https://api.github.com/graphql', {&#xA;      method: 'POST',&#xA;      body: JSON.stringify({querytwo}),&#xA;      headers: {&#xA;        'Authorization': `Bearer ${accessToken}`,&#xA;      },&#xA;    }).then(res =&gt; res.text())&#xA;      .then(body =&gt; console.log(body))&#xA;      .catch(error =&gt; console.error(error));&#xA;    console.log(""\n\n\n"");&#xA;</code></pre>&#xA;&#xA;<p>The first query returns: </p>&#xA;&#xA;<pre><code>{""data"":{""repository"":{""name"":""mms-docs"",""forkCount"":26,""forks"":{""totalCount"":8,""nodes"":[{""name"":""mms-docs""},{""name"":""mms-docs""},{""name"":""mms-docs""},{""name"":""mms-docs""},{""name"":""mms-docs""},{""name"":""mms-docs""},{""name"":""mms-docs""},{""name"":""mms-docs""}]}}}}&#xA;</code></pre>&#xA;&#xA;<p><strong>But the second query returns an error:</strong></p>&#xA;&#xA;<pre><code>{""errors"":[{""message"":""A query attribute must be specified and must be a string.""}]}&#xA;</code></pre>&#xA;&#xA;<p>Why would that be? </p>&#xA;&#xA;<p>I've tried changing the second, faulty query to what I've seen in curl calls:</p>&#xA;&#xA;<pre><code>const querytwo = `query: {&#xA;      repository(&#xA;        owner: ""mongodb""&#xA;        name: ""docs-bi-connector""&#xA;      ) {&#xA;        name&#xA;        forkCount&#xA;        forks(&#xA;          first: 27&#xA;          orderBy: { field: NAME, direction: DESC }&#xA;        ) {&#xA;          totalCount&#xA;          nodes {&#xA;            name&#xA;          }&#xA;        }&#xA;      }&#xA;    }`;&#xA;</code></pre>&#xA;&#xA;<p>But I get the same error</p>&#xA;",6637004,,6637004,2019-11-21 21:17:45,2019-11-21 21:17:45,Github GraphQL Error: A query attribute must be specified and must be a string,<github><graphql>,1,0,0,2019-11-21 16:40:10
58983895,2,,58979723,2,,"<p>Shorthand object notation mistake</p>&#xA;&#xA;<pre><code>JSON.stringify({query})&#xA;</code></pre>&#xA;&#xA;<p>is shorthand for <code>JSON.stringify({query: query})</code></p>&#xA;&#xA;<p>which becomes </p>&#xA;&#xA;<pre><code>{&#xA;query: &#xA; {&#xA;      repository(&#xA;        owner: ""PrivateOrg""&#xA;        name: ""privateRepoName""&#xA;      ) {&#xA;        name&#xA;        forkCount&#xA;        forks(&#xA;          first: 11&#xA;          orderBy: { field: NAME, direction: DESC }&#xA;        ) {&#xA;          totalCount&#xA;          nodes {&#xA;            name&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;   }`&#xA;</code></pre>&#xA;&#xA;<p><code>JSON.stringify({querytwo})</code> is shorthand for <code>JSON.stringify({querytwo: querytwo})</code></p>&#xA;&#xA;<pre><code>{&#xA;querytwo: &#xA; {&#xA;      repository(&#xA;        owner: ""PrivateOrg""&#xA;        name: ""privateRepoName""&#xA;      ) {&#xA;        name&#xA;        forkCount&#xA;        forks(&#xA;          first: 11&#xA;          orderBy: { field: NAME, direction: DESC }&#xA;        ) {&#xA;          totalCount&#xA;          nodes {&#xA;            name&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;   }`&#xA;</code></pre>&#xA;&#xA;<p>Hence why GraphQL couldn't find a <code>query</code> - it found a <code>queryTwo</code></p>&#xA;",6637004,,,,2019-11-21 21:17:24,"",,0,0,0,2019-11-21 21:17:24
59053089,1,,,3,579,"<p>On the server I'm trying to get Helmet meta and title tags from nested child components, using <code>react-helmet-async</code> because <code>react-helmet</code> was not working. But this does not seem to be working either, I always get an empty title tag, with no meta tags returned (they're all set in child components)</p>&#xA;&#xA;<pre><code>const helmetContext = {};&#xA;    const app = (&#xA;      &lt;ApolloProvider client={client}&gt;&#xA;        &lt;HelmetProvider context={helmetContext}&gt;&#xA;          &lt;Router location={req.url} context={staticContext}&gt;&#xA;            &lt;CookiesProvider cookies={req.universalCookies}&gt;&#xA;                &lt;App /&gt;&#xA;            &lt;/CookiesProvider&gt;&#xA;          &lt;/Router&gt;&#xA;        &lt;/HelmetProvider&gt;&#xA;      &lt;/ApolloProvider&gt;&#xA;    );&#xA;&#xA;//Traverses Component tree and executes all queries&#xA;getDataFromTree(app).then(() =&gt; {&#xA;  const content = ReactDOMServer.renderToString(app);&#xA;  const state = client.extract();&#xA;  const { helmet } = helmetContext;   // This is always empty&#xA;  const html = ReactDOMServer.renderToString(&#xA;    &lt;Html content={content} helmet={helmet} assets={assets} state={state} initData={initData}/&gt;,&#xA;  );&#xA;&#xA;  res.status(200);&#xA;  res.send(`&lt;!doctype html&gt;${html}`);&#xA;  res.end();&#xA;&#xA;}).catch(e =&gt; {&#xA;  console.error('RENDERING ERROR:', e); &#xA;  res.status(500);&#xA;  console.log(e.stack);&#xA;  res.end(&#xA;    `An error occurred.:\n\n${&#xA;      e.stack&#xA;    }`&#xA;  );&#xA;});`&#xA;</code></pre>&#xA;&#xA;<p>Any help on how I can get access to nested Helmet tags from child components. I'm wrapping the app on the client with <code>HelmetProvider</code> as well. It works perfectly fine on the client, but on the server it's not picking any tags from nested components. I'm not streaming the response, it's a simple SSR set up. This kinda defeats the purpose of setting up SSR so I would really appreciate some help. Thanks!</p>&#xA;",2010545,,2370483,2019-11-27 14:48:04,2019-11-27 14:48:04,React helmet async returns empty tags on server with Apollo client,<javascript><reactjs><apollo-client><server-side-rendering><react-helmet>,0,1,0,2019-11-26 14:25:39
59055312,2,,49047259,25,,"<p><code>graphql-tag</code> is built upon the core <code>graphql</code> library (and thus installs it along) - if you just want to get the type of operation and the name of it you can do so, by using <code>graphql</code> directly and analyze the full AST of the parsed GraphQL operation:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const { parse } = require('graphql');&#xA;&#xA;const query = `&#xA;{&#xA;  qQueryEndpoint {&#xA;    id&#xA;  }&#xA;} &#xA;`;&#xA;&#xA;const mutation = `&#xA;mutation {&#xA;  saveSomething {&#xA;    id&#xA;  }&#xA;}&#xA;`;&#xA;const firstOperationDefinition = (ast) =&gt; ast.definitions[0];&#xA;const firstFieldValueNameFromOperation = (operationDefinition) =&gt;  operationDefinition.selectionSet.selections[0].name.value;&#xA;&#xA;const parsedQuery = parse(query);&#xA;const parsedMutation = parse(mutation);&#xA;&#xA;console.log('operation', firstOperationDefinition(parsedQuery).operation);&#xA;console.log('firstFieldName', firstFieldValueNameFromOperation(firstOperationDefinition(parsedQuery)));&#xA;&#xA;console.log('operation', firstOperationDefinition(parsedMutation).operation);&#xA;console.log('firstFieldName', firstFieldValueNameFromOperation(firstOperationDefinition(parsedMutation)));&#xA;</code></pre>&#xA;&#xA;<p>That way you do not need to depend on <code>graphql-tag</code> and you can use, the <em>real</em> GraphQL AST (and thus easily adapt to further requirements) - because <code>graphql-tag</code> does not provide the full AST.</p>&#xA;&#xA;<p>See the AST for the query in <a href=""https://astexplorer.net/#/gist/79a260c7422cc5abac3d4f90302873be/f2f8980f71e8e17351eaf0fffa45f8e5108e65e3"" rel=""noreferrer"">AST Explorer</a>.</p>&#xA;",2920878,,,,2019-11-26 16:24:38,"",,0,0,0,2019-11-26 16:24:38
59069428,2,,59045134,0,,"<p>Solved this by passing a stringified object instead of an array of strings, but would still be good to know how to type an array of strings in type graphql.</p>&#xA;",7486212,,,,2019-11-27 11:41:51,"",,0,0,0,2019-11-27 11:41:51
59084255,2,,58538624,3,,"<p>After digging my head into source code, I found that graphQL post endpoint has Consumes property set to ALL i.e, <em>/</em> to accept any content type but in code they are specifically referring to application/json or application/graphQL. </p>&#xA;&#xA;<p>When you hit the graphQL post endpoint with application/json then MICRONAUT lambda handler matches the content type with ALL, which is not true so it throws error 415 Unsupported Media Type. Request never reaches to the graphQL controller.</p>&#xA;&#xA;<p>When you hit the graphQL post endpoint with <em>/</em> then MICRONAUT lambda handler matches the content type with ALL, which is seems to be true so it forward the request to GraphQL controller but in code it specifically looks for those specific content types. Again it relies on .equals method for comparison. Again it does not matches so throws 422 unprocessable entity. </p>&#xA;&#xA;<p>I am still looking for solution to this. </p>&#xA;",5881278,,,,2019-11-28 08:09:01,"",,0,1,0,2019-11-28 08:09:01
59102936,1,,,1,1754,"<p>I am currently making a connector to google data studio. </p>&#xA;&#xA;<p>I want to obtain a field from a production graphql endpoint called ""questions"". The hard part is that this field is an array of string ids, e.g. ['id-1','id-2','id-3']. </p>&#xA;&#xA;<pre><code>  var questions= fields.newDimension()&#xA;   .setId('questions')&#xA;   .setName('Questions')&#xA;   .setType(types.TEXT)&#xA;   .setDescription('question')&#xA;</code></pre>&#xA;&#xA;<p>It appears that google data studio does not accept schema types of an array. My constraint is mainly that I cannot write a new resolver for my graphql and I just want to deal with the existing state of my graphql server without making changes. </p>&#xA;&#xA;<h3>Question</h3>&#xA;&#xA;<ol>&#xA;<li>How do I pass this array string to google data studio? Is there an existing type I can use?</li>&#xA;<li>If 1) does not work, can I make a graphql query that counts the length of an array value? (since this is what I want essentially)</li>&#xA;</ol>&#xA;&#xA;<h3>Some Links</h3>&#xA;&#xA;<p><a href=""https://developers.google.com/datastudio/connector/semantics"" rel=""nofollow noreferrer"">Data Studio Reference of Types</a></p>&#xA;&#xA;<p>Cheers.</p>&#xA;",12456005,,10612011,2019-11-29 12:11:06,2019-11-29 12:11:06,Passing array type to Google Data Studio,<google-apps-script><graphql><google-data-studio>,0,1,0,2019-11-29 10:21:08
59109510,1,,,2,1041,"<p>Looks like my vscode refuse to give me auto-completion on .graphql file import path… Do you have any idea why ?<a href=""https://i.stack.imgur.com/91ZLh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/91ZLh.png"" alt=""error""></a></p>&#xA;&#xA;<p>I've specific Gql extension activated…</p>&#xA;&#xA;<pre><code>Name: GraphQL for VSCode&#xA;Id: kumar-harsh.graphql-for-vscode&#xA;Description: GraphQL syntax highlighting, linting, auto-complete, and more!&#xA;Version: 1.15.3&#xA;Publisher: Kumar Harsh&#xA;VS Marketplace Link: https://marketplace.visualstudio.com/items?itemName=kumar-harsh.graphql-for-vscode&#xA;</code></pre>&#xA;&#xA;<p>Also definition TS</p>&#xA;&#xA;<pre><code>declare module '*/get-course.gql' {&#xA;  import { DocumentNode } from 'graphql';&#xA;  const defaultDocument: DocumentNode;&#xA;  export const GetCourses: DocumentNode;&#xA;&#xA;  export default defaultDocument;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It doesn't give auto-complete in js file neither…</p>&#xA;&#xA;<p>Thank in advance…</p>&#xA;",5320409,,,,2021-06-01 23:08:22,Graphql file path autocompletion in VSCODE,<javascript><typescript><visual-studio-code><graphql>,2,0,0,2019-11-29 18:21:13
59112929,2,,59041476,0,,<p>This issue is resolved - I had type as Employee and node as EMP. Changing type to EMP did the trick.</p>&#xA;,7886540,,,,2019-11-30 03:28:25,"",,0,0,0,2019-11-30 03:28:25
59178302,1,,,1,263,"<p>I am using GraphQL to return necessary JSON objects. </p>&#xA;&#xA;<p>I have a defined type called <code>Colour</code> in my server and it is used in multiple different queries. There is one instance where instead of just returning one <code>Colour</code> type by a query such as </p>&#xA;&#xA;<pre><code>query Colour($id: Int!) {&#xA;  colour(id: $id) {&#xA;    hue&#xA;    saturation&#xA;    luminosity&#xA;    red&#xA;    green&#xA;    blue&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I need to return an array of <code>Colour</code> without having to create a new type called <code>Colours</code> on the backend. </p>&#xA;&#xA;<p>I'd need the response to resemble</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""colours"": [&#xA;      { ""hue"": 0, ""saturation"": 100, ""luminosity"": 100, ""red"": 255, ""green"": 0, ""blue"": 0 },&#xA;      { ""hue"": 0, ""saturation"": 0, ""luminosity"": 100, ""red"": 255, ""green"": 255, ""blue"": 255 }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there a way I could run one single query over an array of ids to get an object with this shape?</p>&#xA;",1270911,,,,2019-12-04 15:31:36,Retrieve array of Objects in GraphQL without defining array type,<json><graphql>,1,0,0,2019-12-04 14:28:00
59192308,1,73029178,,11,393,"<p>Let's paint a hypothetical picture for discussion.</p>&#xA;&#xA;<p>Let's say a large company has 200 organizations each with 250 repositories and each of those repositories has 300 contributors.</p>&#xA;&#xA;<p>Let's say I would like to build up a GraphQL query that answers the question:</p>&#xA;&#xA;<p>Give me all contributors (and their privileges) of all repositories of all organizations in my account.</p>&#xA;&#xA;<p>Obviously, pagination is needed.</p>&#xA;&#xA;<p>But the way it is currently implemented, a pagination cursor is provided for each list of contributors, each list of repositories, and each list of organizations.</p>&#xA;&#xA;<p>As a result, it is not possible to complete the query by following a single pagination cursor.</p>&#xA;&#xA;<p>It is not clear to me that the query can be completed at all due to the ambiguity of specifying a pagination cursor for one list of contributors for one org/repo combo versus the next org/repo combo.</p>&#xA;&#xA;<p>Thanks</p>&#xA;",12268970,,10955263,2019-12-05 10:13:32,2022-07-18 22:16:07,Github GraphQL v4 API nested pagination (Multiple pagination cursors can not be followed in a single query),<github><graphql><github-api>,1,0,0,2019-12-05 09:48:26
59242110,1,,,1,394,"<p>I am creating a Draft Order and everything is working fine, But I am getting a GID which is not working when I am trying to send DraftOrderInvoice. I am not sure if the if my format is wrong or maybe I missed something, but any help in directions is much appreciated.</p>&#xA;&#xA;<p>Let me know if any additional information is needed to clarify the current question.</p>&#xA;&#xA;<pre><code>mutation draftOrderCreate($input: DraftOrderInput!) {&#xA;  draftOrderCreate(input: $input) {&#xA;    draftOrder {&#xA;      id&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>After the Draft order is created. I recieve a response with the GID ""gid://shopify/DraftOrder/xxxxxxxxxxxxx""   </p>&#xA;&#xA;<p>I am then using the Draft Order Id to send an invoice, but I am having some formatting issues I think. </p>&#xA;&#xA;<p>I plugged the Gid into the ""Shopify GraphiQL App"" to test for mutations and I get an error with the draft order Id.</p>&#xA;&#xA;<pre><code>mutation draftOrderInvoiceSend($id: ID!) {&#xA;  draftOrderInvoiceSend(id: $id) {&#xA;    draftOrder {&#xA;      id&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Variable</p>&#xA;&#xA;<pre><code>{&#xA;  ""id"": ""gid://shopify/DraftOrder/xxxxxxxxxx""  &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>​&#xA;Error</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Internal error. Looks like something went wrong on our end.\nRequest ID: ff0c8cfd-ce93-446f-9f12-b09580f945b7 (include this in support requests).""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>According to Shopify Mutations the ID should look similar to the obj below&#xA;<a href=""https://help.shopify.com/en/api/graphql-admin-api/reference/mutation/draftorderinvoicesend"" rel=""nofollow noreferrer"">https://help.shopify.com/en/api/graphql-admin-api/reference/mutation/draftorderinvoicesend</a></p>&#xA;&#xA;<pre><code>{&#xA;  ""id"": ""Z2lkOi8vU2hvcGlmeS9FeGFtcGxlLzE=""&#xA;}&#xA;&#xA;</code></pre>&#xA;",6441838,,6441838,2019-12-19 15:46:25,2019-12-19 15:46:25,Shopify GraphQl Mutation getting an error when sending DraftOrderSendInvoice,<javascript><graphql><shopify><react-apollo>,0,0,0,2019-12-09 03:20:08
59243001,2,,58245183,14,,"<p>As you've found out, there's no difference at all. <code>nodes</code> can be thought of as a shortcut to <code>edges.map(edge =&gt; edge.node)</code>. This'll save us a bit of typing when using the data returned by graphql.</p>&#xA;&#xA;<p>There's a few case where querying edges is useful, for example in a <code>allMarkdownRemark</code> query, <code>edges</code> may contain helpful info like total posts.</p>&#xA;",10340970,,,,2019-12-09 05:28:36,"",,0,0,0,2019-12-09 05:28:36
59245147,1,,,0,52,"<p>I was trying to get data from our end point through graphql, things works just fine when I enter the page first time, page render ""Loading"" and print out the data after receive the data from query.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Jt4H0.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;&#xA;<p>But if I click on previous page button, and then go back to ""SiteMap"" page again, the error occurred.&#xA;The error is: </p>&#xA;&#xA;<pre><code>Exception has occurred.&#xA;NoSuchMethodError (NoSuchMethodError: The getter 'iterator' was called on null.&#xA;Receiver: null&#xA;Tried calling: iterator)&#xA;</code></pre>&#xA;&#xA;<p>My code:</p>&#xA;&#xA;<pre><code>Query(&#xA;  options: QueryOptions(&#xA;    document: getSitemapsGSCQuery(),&#xA;  ),&#xA;  builder: (QueryResult result,{VoidCallback refetch, FetchMore fetchMore}) {&#xA;    if (result.errors != null) {&#xA;      return Text(result.errors.toString());&#xA;    }&#xA;    if (result.loading) {&#xA;      return Text('Loading');&#xA;    }&#xA;    print(result.data[""sitemaps""][""sitemaps""]); // get null when entering second time&#xA;    List _sitemaps = result.data[""sitemaps""][""sitemaps""]; &#xA;    for (var sitemap in _sitemaps) { // get error here for ""_sitemaps""&#xA;      // do sth&#xA;    }&#xA;  },&#xA;)&#xA;</code></pre>&#xA;&#xA;<p>As a newbie flutter programmer, I have no idea what reason might cause this...</p>&#xA;",12503779,,,,2019-12-09 08:37:00,"When entering the page for the second time, can't receive the data from graphql",<flutter><graphql>,0,4,0,2019-12-09 08:37:00
59276908,2,,52262418,0,,"<p>You can also use template literals in js es6.</p>&#xA;&#xA;<p>In example:</p>&#xA;&#xA;<pre><code>const singleProduct = product.id;&#xA;&#xA;  const queryProduct = `{&#xA;    product(id:&#xA;      ""${singleProduct}"") {&#xA;          variants(first: 15) {&#xA;            edges {&#xA;              node {&#xA;                id,&#xA;                title&#xA;              }&#xA;            }&#xA;          }&#xA;    }&#xA;  }`;&#xA;</code></pre>&#xA;",2690257,,2690257,2019-12-10 23:44:55,2019-12-10 23:44:55,"",,0,1,0,2019-12-10 23:37:34
59317028,1,,,0,735,"<p>Let's say I have a query in Shopify where I want to retrieve an order, but not by id, but by order_name. With the rest API, this is perfectly possible. How do I do that in graphql?</p>&#xA;&#xA;<p>The request for Shopify looks like that: </p>&#xA;&#xA;<pre><code>    {&#xA;       order(id: """") {&#xA;         closed&#xA;       }&#xA;    }&#xA;</code></pre>&#xA;",10738638,,8825020,2019-12-13 06:21:16,2019-12-16 17:20:22,"Graphql in Shopify: getting order with ""order_name"" instead of id",<graphql><shopify>,1,1,0,2019-12-13 06:08:28
59350246,1,,,1,977,"<p>I was hoping to get a clearer understand where I may be going wrong. Sorry if I ask a lot of questions since I feel a bit lost and been stuck for about a week on this one. </p>&#xA;&#xA;<p>Currently, I've changed the package I was using for linking with apollo-client. The previous package was <code>apollo-link-http</code> and now I'm using <code>apollo-absinthe-upload-link</code> since I read it allows for image upload. </p>&#xA;&#xA;<p>It's done as follows</p>&#xA;&#xA;<pre><code>const httpLink = createLink({&#xA;    uri: 'http://localhost:4000/api',&#xA;    credentials: 'same-origin',&#xA;    fetch,&#xA;    fetchOptions&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>There wasn't any change to sending information to the backend but I do continue to be lost in regards to uploading an image. The purpose of this image is to upload to the cloud then save the url information with the product details. </p>&#xA;&#xA;<p>I'm using a hook as <code>const [ images, setImages ] = useState([]);</code> and an input of <code>&lt;input type=""file"" placeholder=""Upload Image"" onChange={handleUploadImage} /&gt;</code></p>&#xA;&#xA;<p>The purpose of the onChange function is to set the image information to the images property. When we send the mutation to the backend, the way it's done is as follows</p>&#xA;&#xA;<pre><code>const buildForm = () =&gt; {&#xA;    let storeID = 2;&#xA;    const fileData = fileList.fileList.map((file) =&gt; {&#xA;        return file.originFileObj;&#xA;    });&#xA;    const data = new FormData();&#xA;    data.append('fileData', images);&#xA;    debugger;&#xA;    return {&#xA;        productName,&#xA;        productDescription,&#xA;        productPrice,&#xA;        productType,&#xA;        isReturnable,&#xA;        storeID,&#xA;        fileData: data&#xA;    };&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>when it goes, within my console I'm getting an error of <code>Uncaught (in promise) Error: GraphQL error: Argument ""fileData"" has invalid value $fileData.</code> and I'm seeing on the backend the key <code>fileData</code> having an empty object as its value. I was hoping to get some advice on what might be wrong or what I should consider. If someone mentioned CURL please explain since I have no idea what that means in regards to GraphQL and sending a mutation. Thank you for the help on this matter.</p>&#xA;&#xA;<p>P.S - The mutation call that is being used is</p>&#xA;&#xA;<pre><code>export const CREATE_PRODUCT_MUTATION = gql`&#xA;    mutation CreateProduct(&#xA;        $storeID: Int!&#xA;        $productName: String!&#xA;        $productDescription: String!&#xA;        $productPrice: Decimal!&#xA;        $productType: Int!&#xA;        $isReturnable: Boolean!&#xA;        $fileData: Upload!&#xA;    ) {&#xA;        createProduct(&#xA;            product: {&#xA;                productName: $productName&#xA;                productDescription: $productDescription&#xA;                productPrice: $productPrice&#xA;                productType: $productType&#xA;                isReturnable: $isReturnable&#xA;            }&#xA;            storeId: $storeID&#xA;            fileData: $fileData&#xA;        ) {&#xA;            id&#xA;            productName&#xA;            productDescription&#xA;            productPrice&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>UPDATE - Network return request</p>&#xA;&#xA;<pre><code>{""errors"":[{""locations"":[{""column"":0,""line"":2}],""message"":""Argument \""fileData\"" has invalid value $fileData.""}]}&#xA;</code></pre>&#xA;&#xA;<p>Backend Schema</p>&#xA;&#xA;<pre><code>@desc ""List a new product""&#xA;field :create_product, :product do&#xA;  arg(:product, :new_product)&#xA;  arg(:store_id, :integer)&#xA;  arg(:file_data, non_null(:upload))&#xA;</code></pre>&#xA;",10213744,,10213744,2019-12-17 01:45:55,2021-09-27 16:54:36,Allowing a multipart (image) upload through GraphQL for Elixir backend,<reactjs><graphql><elixir><phoenix-framework><absinthe>,1,9,0,2019-12-16 03:36:02
59358955,1,,,1,59,"<p>What's the correct way to format a response, and how would I go about it?</p>&#xA;&#xA;<p>In example I see online, the response data is never nested inside a key with the mutation name</p>&#xA;&#xA;<p>Here's the request</p>&#xA;&#xA;<pre><code>mutation CreateUser($input: CreateUserInput!) {&#xA;  createUser(input: $input) {&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Which of these is the correct response format for GraphQL?</p>&#xA;&#xA;<p>This is what mine looks like now.</p>&#xA;&#xA;<pre><code>${""data"" =&gt; %{&#xA;  ""createUser"" =&gt; %{&#xA;    ""id"" =&gt; 1,&#xA;    ""name"" =&gt; ""Bob"",&#xA;  }&#xA;}}&#xA;</code></pre>&#xA;&#xA;<p>This is what I see in some example online (and I think it looks a lot cleaner)</p>&#xA;&#xA;<pre><code>${""data"" =&gt; %{&#xA;  ""id"" =&gt; 1,&#xA;  ""name"" =&gt; ""Bob"",&#xA;}}&#xA;</code></pre>&#xA;&#xA;<p>Which of these is more idiomatic GraphQL? And if it's the second one, is there a way to get Absinthe to format the response this way?</p>&#xA;",3968048,,2087204,2021-03-22 07:36:14,2021-03-22 07:36:14,"Absinthe - Response formatting %{data: %{id: 1, name: ""Bob""}} vs %{data: %{createUser: %{id: 1, name: ""Bob""}}}",<graphql><elixir><absinthe>,1,0,0,2019-12-16 14:46:16
59381058,2,,59365366,0,,"<p>By default, all JavaBean properties are named by their property name, not their accessor name. So <code>getSomething</code> will get mapped as <code>something</code> and <code>isAdmin</code> (that returns a <code>boolean</code>) will get mapped as <code>admin</code>. This is in line with the behavior of most frameworks/languages/serialization formats. You'll get the same default behavior when mapping to JSON, accessing the field via SpEL, mapping to DB column names etc.</p>&#xA;&#xA;<p>To override the name on case-by-case basis, add <code>@GraphQLQuery</code> to the field (affects both input and output types) or accessor/getter (affects output types only). To affect the input type only add <code>@GraphQLInputField</code> on the field or mutator/setter. <code>@JsonProperty</code> is also respected for input types, and can optionally be configured for outputs.</p>&#xA;&#xA;<p>You can also globally configure the naming strategy. Will post an example later.</p>&#xA;",294657,,,,2019-12-17 19:41:58,"",,0,0,0,2019-12-17 19:41:58
59393869,1,,,3,401,"<p>I am trying to create a query to Github GraphQL API that receive a list of repos as a parameter, and returns the info of those repositories in a single API call, does anyone know how to do that?</p>&#xA;&#xA;<p>Something like this (I know this doesn't work)</p>&#xA;&#xA;<pre><code>query myOrgRepos($repos: [String!]!) {&#xA;  search(query:""""""&#xA;  repo in $repos&#xA;  """""", type: REPOSITORY, first: 100) {&#xA;      repo: nodes {&#xA;          ... on Repository{&#xA;              name&#xA;              description&#xA;              updatedAt&#xA;          }&#xA;      }&#xA;  }&#xA;</code></pre>&#xA;",2223006,,,,2021-12-29 18:59:47,Get info about several repositories from Github Graphql API in a single call,<github><graphql><github-graphql>,2,1,0,2019-12-18 14:11:22
59405430,1,,,0,945,"<p>When I copy the example below from <a href=""https://help.shopify.com/en/api/guides/billing-api/implement-your-business-model#implement-the-appsu"" rel=""nofollow noreferrer"">https://help.shopify.com/en/api/guides/billing-api/implement-your-business-model#implement-the-appsu</a>...:</p>&#xA;&#xA;<pre><code>  appSubscriptionCreate(&#xA;    name: ""Super Duper Recurring Plan""&#xA;    returnUrl: ""http://super-duper.shopifyapps.com""&#xA;    lineItems: [{&#xA;      plan: {&#xA;        appRecurringPricingDetails: {&#xA;            price: { amount: 10.00, currencyCode: USD }&#xA;        }&#xA;      }&#xA;    }]&#xA;  ) {&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;    confirmationUrl&#xA;    appSubscription {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and run it via the ""Shopify GraphiQL App"", the mutation is successfully created.</p>&#xA;&#xA;<p>I am not sure how to do it with Ruby and the shopify_api gem though (note that I am new to Ruby as well as GraphQL, so it's probably something very basic I am missing, but I have not been able to find the answer anywhere).</p>&#xA;&#xA;<p>I attempted the following:</p>&#xA;&#xA;<pre><code>    @@client = ShopifyAPI::GraphQL.new&#xA;&#xA;    PAYMENT_MUTATION = @@client.parse &lt;&lt;-'GRAPHQL'&#xA;    {&#xA;        mutation {&#xA;            appSubscriptionCreate(&#xA;                name: ""Super Duper Recurring Plan""&#xA;                returnUrl: ""http://super-duper.shopifyapps.com""&#xA;                lineItems: [{&#xA;                    plan: {&#xA;                        appRecurringPricingDetails: {&#xA;                            price: {&#xA;                                amount: 10.00,&#xA;                                currencyCode: USD&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }]&#xA;            ) {&#xA;                userErrors {&#xA;                    field&#xA;                    message&#xA;                }&#xA;                confirmationUrl&#xA;                appSubscription {&#xA;                    id&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;    GRAPHQL&#xA;&#xA;    def initialize&#xA;        @result = @@client.query(PAYMENT_MUTATION)&#xA;    end&#xA;&#xA;    def confirmationUrl&#xA;        @result.data.appSubscriptionCreate.confirmationUrl&#xA;    end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>I get the following error though:</p>&#xA;&#xA;<pre><code>GraphQL::Client::ValidationError (Field 'mutation' doesn't exist on type 'QueryRoot'):&#xA;</code></pre>&#xA;&#xA;<p>I tried skipping the mutation part, but then I just get the error:</p>&#xA;&#xA;<pre><code>GraphQL::Client::ValidationError (Field 'appSubscriptionCreate' doesn't exist on type 'QueryRoot'):&#xA;</code></pre>&#xA;&#xA;<p>This led me to have a look at the GraphQL class of the shopify_api gem, hoping to find a ""mutation"" method to use instead of the ""query"" method, but there is none.</p>&#xA;&#xA;<p>I cannot figure it out from the graphql-client gem that shopify_api is using either - there's no mutation examples in the readme.</p>&#xA;&#xA;<p>What am I missing?</p>&#xA;&#xA;<p>Thanks,</p>&#xA;&#xA;<p>-Louise</p>&#xA;",5930834,,,,2019-12-20 08:49:56,How do I create a GraphQL appSubscriptionCreate mutation with the Ruby shopify_api gem?,<ruby-on-rails><ruby><graphql><shopify><shopify-app>,1,0,0,2019-12-19 07:58:29
59412560,1,,,3,2680,"<p>I'm trying to somehow filter for field values that are set in a component (formerly group). I was assuming my object structure is quite simple, but cannot get it to work.</p>&#xA;&#xA;<p>This is my (simplified) structure taken from the generated graphql schema:</p>&#xA;&#xA;<pre><code>type Product {&#xA;  name: String!&#xA;  description: String&#xA;  systemtype: Systemtype&#xA;  applicationAreas: [ComponentContentApplicationArea]&#xA;  id: ID!&#xA;  created_at: DateTime!&#xA;  updated_at: DateTime!&#xA;}&#xA;&#xA;type ComponentContentApplicationArea {&#xA;  rating: Int!&#xA;  statement: String!&#xA;  applicationareaname: Applicationareaname&#xA;  id: ID!&#xA;}&#xA;&#xA;type Applicationareaname {&#xA;  name: String!&#xA;  description: String!&#xA;  id: ID!&#xA;  created_at: DateTime!&#xA;  updated_at: DateTime!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My GraphQL base query without any filter:</p>&#xA;&#xA;<pre><code>query {&#xA;  products {&#xA;    applicationAreas {&#xA;      rating&#xA;      applicationareaname{&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Result:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""products"": [&#xA;      {&#xA;        ""applicationAreas"": [&#xA;          {&#xA;            ""rating"": 5,&#xA;            ""applicationareaname"": {&#xA;              ""name"": ""Area A""&#xA;            }&#xA;          },&#xA;          {&#xA;            ""rating"": 7,&#xA;            ""applicationareaname"": {&#xA;              ""name"": ""Area B""&#xA;            }&#xA;          },&#xA;          {&#xA;            ""rating"": 7,&#xA;            ""applicationareaname"": {&#xA;              ""name"": ""Area C""&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My understanding is that I can filter for the rating field value this way - but obviously I'm wrong:</p>&#xA;&#xA;<pre><code>query {&#xA;  products (where: {applicationAreas: {rating: 5}}) {&#xA;    applicationAreas {&#xA;      rating&#xA;      applicationareaname{&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm getting this error when executing the query above:</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Your filters contain a field 'applicationAreas.rating' that doesn't appear on your model definition nor it's relations"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 2,&#xA;          ""column"": 3&#xA;        }&#xA;      ],&#xA;      ""path"": [&#xA;        ""products""&#xA;      ],&#xA;      ""extensions"": {&#xA;        ""code"": ""INTERNAL_SERVER_ERROR"",&#xA;        ""exception"": {&#xA;          ""status"": 400,&#xA;          ""stacktrace"": [...]&#xA;        }&#xA;      }&#xA;    }&#xA;  ],&#xA;  ""data"": {&#xA;    ""products"": null&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>Any help highly appreciated as I'm totally stuck on this.</p>&#xA;&#xA;<p>Many thanks!</p>&#xA;",12565801,,,,2021-11-11 09:51:04,Filter field values of nested components in strapi,<graphql><strapi>,1,2,0,2019-12-19 15:19:23
59413570,1,,,3,128,<p>I'm trying to query commits associated with my GitHub profile via GraphQL API (v4).</p>&#xA;<p>My goal is to display a list of 10 most recent commits with associated repositories (if public).</p>&#xA;<pre><code>query getCommitActivity {&#xA;    user(login: &quot;Login&quot;) {&#xA;     contributionsCollection{&#xA;      commitContributionsByRepository{&#xA;        contributions(first:5) {&#xA;           totalCount&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Is there any way to completely ignore &quot;commitsByRepo&quot; and get the latest commits made by the given user?</p>&#xA;,11285944,,11285944,2020-08-29 20:03:26,2020-08-29 20:03:26,Querying recent commits. Github GraphQL API v4,<github><graphql><github-api>,0,0,0,2019-12-19 16:27:36
59422280,2,,59405430,0,,"<p>Got the answer on the Shopify forum - I just have to remove the outer {} in PAYMENT_MUTATION.</p>&#xA;&#xA;<pre><code> PAYMENT_MUTATION = @@client.parse &lt;&lt;-'GRAPHQL'&#xA;    mutation {&#xA;        appSubscriptionCreate(&#xA;            name: ""Super Duper Recurring Plan""&#xA;            returnUrl: ""http://super-duper.shopifyapps.com""&#xA;            lineItems: [{&#xA;                plan: {&#xA;                    appRecurringPricingDetails: {&#xA;                        price: {&#xA;                            amount: 10.00,&#xA;                            currencyCode: USD&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }]&#xA;        ) {&#xA;            userErrors {&#xA;                field&#xA;                message&#xA;            }&#xA;            confirmationUrl&#xA;            appSubscription {&#xA;                id&#xA;            }&#xA;        }&#xA;    }&#xA;GRAPHQL&#xA;</code></pre>&#xA;",5930834,,,,2019-12-20 08:49:56,"",,0,0,0,2019-12-20 08:49:56
59433027,2,,58897099,0,,"<p>You are on the right path. The guide I'm about to link to begins by following a similar approach to the one you've taken. I'll link to the section that talks about monitoring memory in real time, which is available when you <code>Record allocation timeline</code> in chrome://inspect </p>&#xA;&#xA;<p><a href=""https://marmelab.com/blog/2018/04/03/how-to-track-and-fix-memory-leak-with-nodejs.html#watching-memory-allocation-in-real-time"" rel=""nofollow noreferrer"">https://marmelab.com/blog/2018/04/03/how-to-track-and-fix-memory-leak-with-nodejs.html#watching-memory-allocation-in-real-time</a></p>&#xA;",3154872,,,,2019-12-21 02:16:21,"",,0,0,0,2019-12-21 02:16:21
59482349,1,,,4,1515,"<p>i cannot seem to find much on this, so i dare to ask ....</p>&#xA;<p>what is the best practice for &quot;client side query batching&quot; in graphQL?</p>&#xA;<p>problem:<br />&#xA;i want to repeat one query for a list of keys = a list of &quot;variable objects&quot;<br />&#xA;but <a href=""https://api.github.com/graphql"" rel=""nofollow noreferrer"">the github graphQL server</a> does not support batch queries<br />&#xA;the <code>/graphql</code> endpoind returns status 400 bad request,<br />&#xA;and the <code>/graphql/batch</code> endpoint returns status 404 not found.</p>&#xA;<p>naive solution:<br />&#xA;concat the sub-queries into a single large query<br />&#xA;and rename the variables</p>&#xA;<p>stolen from <a href=""https://medium.com/mergify/batching-queries-with-graphql-94983b648c3c"" rel=""nofollow noreferrer"">Batching queries with GraphQL &amp; Python, by Julien Danjou</a></p>&#xA;<blockquote>&#xA;<p>Modern GraphQL servers accept a JSON array of queries to be sent as&#xA;input.</p>&#xA;<p>Unfortunately for us, that’s not the case for GitHub GraphQL API.</p>&#xA;<p>The trick here, in ourcase, is to concatenate all the queries and&#xA;name each of them by adding a prefix:</p>&#xA;<pre><code>{&#xA;  Q0: human(id: &quot;1000&quot;) {&#xA;    name&#xA;  }&#xA;  Q1: human(id: &quot;1001&quot;) {&#xA;    name&#xA;  }&#xA;  # etc...&#xA;}&#xA;</code></pre>&#xA;<p>In the request above, 9 requests named Q0 to Q9 are being sent. The&#xA;server replies with 9 results, prefixed with the same Q0 to Q9 name.</p>&#xA;</blockquote>&#xA;<p>in javascript that solution looks like</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// graphQL query batching in javascript&#xA;//&#xA;// workaround for servers who reject batch queries&#xA;//&#xA;// https://medium.com/mergify/batching-queries-with-graphql-94983b648c3c&#xA;// https://github.com/Mergifyio/graphql-utils&#xA;//&#xA;// concept&#xA;// &#xA;// concat multiple sub-queries into one large query&#xA;// for example to query a list of keys&#xA;//&#xA;//   keys = [0, 1] = [[a0, b0], [a1, b1]]&#xA;//&#xA;//   query (&#xA;//     $a0: Int, $b0: Int,&#xA;//     $a1: Int, $b1: Int,&#xA;//   ){&#xA;//     # result 0 from key 0&#xA;//     r0: object (a: $a0, b: $b0) {&#xA;//         field&#xA;//     }&#xA;//     # result 1 from key 1&#xA;//     r1: object (a: $a1, b: $b1) {&#xA;//         field&#xA;//     }&#xA;//   }&#xA;&#xA;// login data for basic authentication&#xA;import { username, password } from './login.js'&#xA;&#xA;const url = 'https://api.github.com/graphql'&#xA;&#xA;// add &quot;Repo&quot; sub-query&#xA;function qAddRepo(qObj, rIdx, vars){&#xA;    /*&#xA;        variables:&#xA;            repoOwner&#xA;            repoName&#xA;            commitsCursor&#xA;            commitsPerPage&#xA;    */&#xA;    const sri = '_' + rIdx.toString() // string repo index&#xA;&#xA;    // add variables&#xA;    Object.keys(vars).forEach(key =&gt; {&#xA;        qObj.variables[key+sri] = vars[key]&#xA;    })&#xA;&#xA;  // add query&#xA;  qObj.query += `&#xA;    r${sri}: repository (&#xA;      owner: $repoOwner${sri},&#xA;      name: $repoName${sri},&#xA;    ) {&#xA;      nameWithOwner&#xA;      # &quot;latest commit&quot; on github&#xA;      pushedAt&#xA;      # repo create time&#xA;      createdAt&#xA;      stargazers {&#xA;        totalCount&#xA;      }&#xA;      #isFork&#xA;      forkCount&#xA;      defaultBranchRef{&#xA;        target{&#xA;        # master branch&#xA;          ... on Commit {&#xA;            history(&#xA;              after: $commitsCursor${sri},&#xA;              first: $commitsPerPage${sri},&#xA;            ) {&#xA;              # commit count&#xA;              totalCount &#xA;              pageInfo {&#xA;                # commitsCursor&#xA;                endCursor&#xA;                hasNextPage&#xA;              }&#xA;              nodes {&#xA;              # commit node&#xA;                oid&#xA;    }}}}}}&#xA;  `&#xA;}&#xA;&#xA;// start query object&#xA;function qStart(){&#xA;    return {&#xA;        variables: {},&#xA;        query: '',&#xA;    }&#xA;}&#xA;&#xA;// get graphQL type from javascript type&#xA;const qVarType = {&#xA;    'cursor': 'String',&#xA;    'string': 'String!',&#xA;    'number': 'Int!',&#xA;    'object': 'String', // cursor?&#xA;    // &quot;String&quot; can be null&#xA;    // (typeof null) == object&#xA;}&#xA;&#xA;// end query object&#xA;function qEnd(qObj)&#xA;{&#xA;    const qVars = Object.keys(qObj.variables).map((key) =&gt; {&#xA;        // guess cursor data type from variable name&#xA;        if (key.substr(key.lastIndexOf('_')-6,6) == 'Cursor') {&#xA;            return '$'+key+': '+qVarType['cursor']&#xA;        }&#xA;        return '$'+key+': '+qVarType[(typeof qObj.variables[key])]&#xA;    }).join(',\n')&#xA;    &#xA;    qObj.query = `query(&#xA;        ${qVars}&#xA;    ){&#xA;        ${qObj.query}&#xA;    }`&#xA;&#xA;    // remove whitespace and comments from query&#xA;    qObj.query = qObj.query.split('\n').reduce((acc, val) =&gt; {&#xA;        const val2 = val.trim()&#xA;        if (val2[0] == '#' || val2 == '') {&#xA;            // remove line&#xA;            return acc&#xA;        }&#xA;        else {&#xA;            return acc+'\n'+val2&#xA;        }&#xA;    }, '')&#xA;}&#xA;&#xA;&#xA;&#xA;// build query&#xA;&#xA;let qObj = qStart()&#xA;&#xA;qAddRepo(qObj, 0, {&#xA;    repoOwner: 'Mergifyio',&#xA;    repoName: 'graphql-utils',&#xA;    commitsCursor: null, // first page&#xA;    commitsPerPage: 2,&#xA;})&#xA;&#xA;qAddRepo(qObj, 1, {&#xA;    repoOwner: 'octokit',&#xA;    repoName: 'graphql.js',&#xA;    commitsCursor: null, // first page&#xA;    commitsPerPage: 2,&#xA;})&#xA;&#xA;qEnd(qObj)&#xA;&#xA;console.log('variables = '+JSON.stringify(qObj.variables, null, '  '))&#xA;console.log('query = '+qObj.query)&#xA;&#xA;&#xA;&#xA;// send query&#xA;&#xA;const headers = new Headers({&#xA;  'Authorization': 'Basic '+btoa(username+&quot;:&quot;+password),&#xA;  'Content-Type': 'application/json',&#xA;  'Accept': 'application/json',&#xA;})&#xA;fetch(url, {&#xA;  method: 'POST',&#xA;  headers: headers,&#xA;  body: JSON.stringify(qObj),&#xA;})&#xA;.then(r =&gt; r.json())&#xA;.then(response =&gt; {&#xA;  // print response&#xA;  console.log('response = '+JSON.stringify(response, null, '  '))&#xA;})&#xA;&#xA;</code></pre>&#xA;<p>response:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;r_0&quot;: {&#xA;      &quot;nameWithOwner&quot;: &quot;Mergifyio/graphql-utils&quot;,&#xA;      &quot;pushedAt&quot;: &quot;2019-07-11T21:43:00Z&quot;,&#xA;      // ....&#xA;    },&#xA;    &quot;r_1&quot;: {&#xA;      &quot;nameWithOwner&quot;: &quot;octokit/graphql.js&quot;,&#xA;      &quot;pushedAt&quot;: &quot;2019-12-24T09:45:29Z&quot;,&#xA;      // ....&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>this could be expanded to allow &quot;nested pagination&quot;<br />&#xA;with either broad-first-search or deep-first-search strategy</p>&#xA;<p>Julien Danjou says:</p>&#xA;<blockquote>&#xA;<p>As far as we’ve seen, there’s no easy way to build this kind of query&#xA;without doing it yourself. <strong>There is no library doing this.</strong> That’s why&#xA;we had to build our own code.</p>&#xA;</blockquote>&#xA;<p>why not? is it just two people who run into API limitations?<br />&#xA;and who cant wait for server admins to change their config?</p>&#xA;<p>im still puzzled</p>&#xA;<p>related: <a href=""https://docs.github.com/en/graphql/overview/resource-limitations"" rel=""nofollow noreferrer"">GitHub GraphQL API: Resource limitations&#xA;</a></p>&#xA;",10440128,,10440128,2021-10-14 09:06:14,2021-10-14 09:06:14,graphQL - client side query batching - repeat one query for a list of keys,<arrays><graphql><key><concatenation><client>,0,0,0,2019-12-25 22:43:56
59538141,1,,,1,47,"<p>I am working on an API built with Apollo Server (Node.js). I use a Rest API as a source and some of the responses have keys that contain dashes. The problem is GraphQL does not allow dashes in the field names. I don't have control over the source, so I can't rename the fields there.</p>&#xA;&#xA;<p>Example REST API response:</p>&#xA;&#xA;<pre><code>{&#xA;   ""content"": {&#xA;       ""en-CA"": {&#xA;            ""title"": ""Die Hard""&#xA;            ...&#xA;       }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My schema: </p>&#xA;&#xA;<pre><code>type Content {&#xA;    title: String&#xA;}&#xA;type Movie {&#xA;   content: {&#xA;      ""en-CA"": Content&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But the above example does not work, as it contains a dash.</p>&#xA;&#xA;<p>Is there a way to rename the field to match the source field name and resolve the data?</p>&#xA;",2893916,,,,2019-12-31 00:00:21,Rename a field to resolve data in GraphQL,<node.js><graphql><graphql-js><apollo-server>,0,2,0,2019-12-31 00:00:21
59571178,1,,,-1,7274,"<p>The backend API implementation is expecting an array of <em>Long</em> .</p>&#xA;&#xA;<p>I need to pass the value through front-end which is a GraphQL implementation. Initially I have the value as a string and want to convert it to an array of <em>Long</em> so that it is compatible with the API.&#xA;I have tried the following:</p>&#xA;&#xA;<pre><code>input1 = [JSON.parse(input1)]&#xA;&#xA;</code></pre>&#xA;&#xA;<p>The desired payload should be as follows where 140 is a ""Long""</p>&#xA;&#xA;<pre><code>""rolls"": [140]&#xA;</code></pre>&#xA;&#xA;<p>I currently see my graphQL query variables as follows where 140 is a string.</p>&#xA;&#xA;<pre><code>rolls: 140&#xA;</code></pre>&#xA;&#xA;<p>Currently, I am seeing the GraphQL error:&#xA;<a href=""https://i.stack.imgur.com/mj2LY.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mj2LY.png"" alt=""enter image description here""></a></p>&#xA;",12137129,,12137129,2020-01-02 23:40:11,2020-01-02 23:48:16,How to convert string to Long (not long) in JavaScript/TypeScript,<javascript><typescript><graphql><frontend>,2,5,0,2020-01-02 23:09:26
59585841,1,59586248,,0,1241,"<p>I have a react component in gatsbyJS that is mapping through a graphQL query, so far it works however I have introduced a inline fragment in the graphQL query two of them actually and I want to check if fragment exists then output the code otherwise all my maps are outputting empty div's after real content is outputted. I didn't include the whole query or all the code for brevity.</p>&#xA;&#xA;<p>Hopefully someone can help, Thanks!</p>&#xA;&#xA;<p>Here is my map and jsx</p>&#xA;&#xA;<pre><code>{data.datoCmsProject.projectBlock.map(projectEntry =&gt; { &#xA;&#xA;        return (  &#xA;&#xA;          &lt;&gt;&#xA;&#xA;          // I want to check here if    DatoCmsProjectBlockGrid fragment exists then render below       &#xA;&#xA;          &lt;BlockGridWrapper&gt;&#xA;            &lt;BlockGrid key={projectEntry.id}&gt;&#xA;&#xA;                &lt;div&gt;{projectEntry.titleOfGridSection}&lt;/div&gt;&#xA;            &lt;/BlockGrid&gt;&#xA;          &lt;/BlockGridWrapper&gt;&#xA;&#xA;        // end check for DatoCmsProjectBlockGrid&#xA;&#xA;        // I want to check here if DatoCmsSingleProjectBlockContent fragment exists, then render below&#xA;&#xA;         &lt;NewBlock key={projectEntry.id}&gt; &#xA;&#xA;          &lt;img key={imageEntry.originalId} src={imageEntry.url}/&gt;&#xA;&#xA;         &lt;/NewBlock&gt;&#xA;&#xA;        //end check for DatoCmsSingleProjectBlockContent&#xA;&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>Here is my query</p>&#xA;&#xA;<pre><code>projectBlock{&#xA;        ... on DatoCmsSingleProjectBlockContent {&#xA;            id&#xA;            titleOfSection&#xA;            descriptionOfImage&#xA;            descriptionToggle&#xA;            wideView&#xA;            imageTextSide&#xA;            imageAssetHideShow&#xA;            imageAsset{&#xA;              url&#xA;              originalId&#xA;            }&#xA;          }&#xA;        ... on DatoCmsProjectBlockGrid {&#xA;          id&#xA;          titleOfGridSection&#xA;        }&#xA;      }   &#xA;</code></pre>&#xA;",2949184,,,,2020-01-03 22:48:14,GraphQL Inline fragments check if exist and then output in a .map,<reactjs><graphql><gatsby>,1,0,0,2020-01-03 21:58:16
59603133,2,,59220280,0,,"<p>Have you checked out this on GitHub:  <a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-ios"" rel=""nofollow noreferrer"">https://github.com/awslabs/aws-mobile-appsync-sdk-ios</a></p>&#xA;&#xA;<p>Also there are some sample code in this documentation: <a href=""https://aws-amplify.github.io/docs/ios/api"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/ios/api</a></p>&#xA;",5875100,,,,2020-01-05 18:50:37,"",,0,0,0,2020-01-05 18:50:37
59611109,1,,,0,355,<p>Is it possible to use an alias name on a graphql query such as SQL (see below)</p>&#xA;&#xA;<pre><code>select productCode as 'ID' from product&#xA;</code></pre>&#xA;,2877777,,,,2020-01-06 11:15:56,GraphQL column alias name,<graphql><label><alias><apollo-client>,1,0,0,2020-01-06 11:15:56
59611110,2,,59611109,0,,<p>After some tinkering much googling... here it is.</p>&#xA;&#xA;<pre><code> query { &#xA;   product { &#xA;     ID : productCode &#xA;   } &#xA; }&#xA;</code></pre>&#xA;,2877777,,,,2020-01-06 11:15:56,"",,0,0,0,2020-01-06 11:15:56
59623619,1,59623941,,1,1655,"<p>I am an android developer but just started to play with <code>GraphQL</code> as per new project requirements. I am trying to query in the <code>prisma-lab's</code> <code>graphQL-playground</code>. </p>&#xA;&#xA;<p>I copied and pasted a long query which in the single line but I just want to format that in <code>JSON</code> format. Is anyone have an idea how to do that? or Anyone knows more shortcuts about this prisma-lab's graphQL-playground. </p>&#xA;&#xA;<p>Copied Query: </p>&#xA;&#xA;<pre><code>{ userInfo(userName:""xyz""){   id  subtitle  userLastName   avatar } }&#xA;</code></pre>&#xA;&#xA;<p>Formatted Query:</p>&#xA;&#xA;<pre><code>{&#xA;  userInfo(userName: ""xyz"") {&#xA;    id&#xA;    subtitle&#xA;    userLastName&#xA;    avatar&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Suggest if anyone knows how to format this query and if there is any other keyboard shortcuts available for GraphQL-Playground.&#xA;Thanks. </p>&#xA;",4395804,,,,2020-01-07 07:26:48,Keyboard shortcuts for GraphQL Playground,<graphql><prisma-graphql><graphql-playground>,1,0,0,2020-01-07 07:00:23
59643851,2,,59632995,1,,"<p>So, thanks to Wim Deblauwe hinting that Content-Lenghts were off on the JSON request, I noticed the following:</p>&#xA;&#xA;<p>I was using the GraphQL body mode on Postman, which (unbeknownst to me, you gotta read the documentation kids!) actually JSONifies the body before sending it.</p>&#xA;&#xA;<p>Sending this (the GraphQL raw body) as a JSON:</p>&#xA;&#xA;<pre><code>query{repository(owner:""ccjmk"", name:""super-happiness""){object(expression:""master""){... on Commit{history{totalCount}}}}}&#xA;</code></pre>&#xA;&#xA;<p>Returns 400 Bad Request: </p>&#xA;&#xA;<pre><code>{&#xA;    ""message"": ""Problems parsing JSON"",&#xA;    ""documentation_url"": ""https://developer.github.com/v4""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>...where instead, if you send it send it as <a href=""https://graphql.org/learn/serving-over-http/"" rel=""nofollow noreferrer"">a JSON-encoded body as the documentation calls for</a>:</p>&#xA;&#xA;<pre><code>{""query"":""query{repository(owner:\""ccjmk\"", name:\""super-happiness\""){object(expression:\""master\""){... on Commit{history{totalCount}}}}}""}&#xA;</code></pre>&#xA;&#xA;<p>It replies the expected 200 OK and JSON data:</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;        ""repository"": {&#xA;            ""object"": {&#xA;                ""history"": {&#xA;                    ""totalCount"": 19&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",1722000,,,,2020-01-08 10:26:38,"",,0,0,0,2020-01-08 10:26:38
59645921,1,59651331,,1,57,"<p>I'm totally new to Neo4j, trying to build a directed graph from source train stations to destination train stations. I have a file whose SS is as attached, with trip counts, my target is to build a nodes and edges graph which will show all stations and trip directions with counts.</p>&#xA;&#xA;<p>I've downloaded Neo4J desktop, loaded by CSV file. I've not used Cypher before, so wondering how to structure it down to code.</p>&#xA;&#xA;<p>Any help would be highly appreciated.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/BqU9i.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BqU9i.png"" alt=""h""></a></p>&#xA;",5536733,,,,2020-01-08 17:53:32,How to build graph on trip count and from and to station,<neo4j><graphql><cypher>,1,0,0,2020-01-08 12:29:37
59681778,2,,59681409,-1,,"<p>have a look into this post:&#xA;<a href=""https://stackoverflow.com/questions/48788185/parse-xml-from-axios-response-pushing-to-vue-data-array"">Parse XML from Axios response, pushing to Vue data array</a></p>&#xA;&#xA;<p>This should do the trick. Afterwards you can map your fields.&#xA;If you have problems come back here.</p>&#xA;",7510850,,,,2020-01-10 12:31:58,"",,0,3,0,2020-01-10 12:31:58
59705186,1,,,1,981,"<p>I am using SQLBoiler and how do I query relation and return? I have two separate db table for product and its price/money. I want to query both and return them in a list together, like <code>getAll</code> request.</p>&#xA;&#xA;<p>This is the initial schema file.</p>&#xA;&#xA;<pre class=""lang-sql prettyprint-override""><code>-- schema.sql&#xA;&#xA;drop table if exists products cascade;&#xA;drop table if exists money;&#xA;&#xA;create table products (&#xA;    id serial not null primary key,&#xA;    user_id int not null,&#xA;    name varchar(255) not null,&#xA;    description text not null,&#xA;    created_at timestamptz not null default now(),&#xA;    updated_at timestamptz not null default now(),&#xA;    deleted_at timestamptz&#xA;);&#xA;&#xA;create table money (&#xA;    product_id int not null primary key,&#xA;    currency_code text not null default 'USD',&#xA;    units int not null,&#xA;    nanos int not null,&#xA;    created_at timestamptz not null default now(),&#xA;    updated_at timestamptz not null default now(),&#xA;&#xA;    foreign key (product_id) references products (id) on delete cascade&#xA;);&#xA;&#xA;create unique index idx_products_name&#xA;on products (name);&#xA;&#xA;insert into products (user_id, name, description) values (1, 'Something', 'This is something.');&#xA;insert into products (user_id, name, description) values (2, 'Anything', 'This is anything.');&#xA;&#xA;insert into money (product_id, currency_code, units, nanos) values (1, 'GBP', 450, 75);&#xA;insert into money (product_id, currency_code, units, nanos) values (2, 'CAD', 9, 20);&#xA;</code></pre>&#xA;&#xA;<pre class=""lang-golang prettyprint-override""><code>...&#xA;&#xA;func (s *Server) Index(context.Context, *pb.Empty) (*pb.IndexProductResponse, error) {&#xA;    db := InitPg()&#xA;    defer db.Close()&#xA;&#xA;    // Make a slice of Product type from generated protobuf&#xA;    products := make([]*pb.Product, 0)&#xA;&#xA;    // Get all products (without price)&#xA;    ps, err := models.Products().All(context.Background(), db)&#xA;    LogAndReport(&amp;pb.IndexProductResponse{}, err)&#xA;&#xA;    // How do I query each product's price from money table?&#xA;    // Or&#xA;    // How do I query all money and assign to each related products?&#xA;&#xA;    // fmt.Println(""@ ps here &gt;"", ps)&#xA;&#xA;    // Append queried products into products slice to return&#xA;    for _, p := range ps {&#xA;        products = append(products,&#xA;            &amp;pb.Product{&#xA;                Id:          int32(p.ID),&#xA;                Name:        p.Name,&#xA;                Description: p.Description,&#xA;                // I need to return/assign price information here.&#xA;                // I can do like this with Gorm.&#xA;                //&#xA;                // Price: &amp;pb.Money{&#xA;                //  CurrencyCode: p.Price.CurrencyCode,&#xA;                //  Units: p.Price.Units,&#xA;                //  Nanos: p.Price.Nanos,&#xA;                // },&#xA;                UserId:      int32(p.UserID),&#xA;            })&#xA;    }&#xA;&#xA;    return &amp;pb.IndexProductResponse{Products: products}, nil&#xA;}&#xA;&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>This is from create product but almost the same expected GraphQL result in list of products:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""products"": [&#xA;      {&#xA;        ""id"": ""1"",&#xA;        ""name"": ""Something"",&#xA;        ""description"": ""This is something."",&#xA;        ""price"": {&#xA;          ""currencyCode"": ""USD"",&#xA;          ""units"": 9,&#xA;          ""nanos"": 93&#xA;        },&#xA;        ""userId"": ""1""&#xA;      },&#xA;      {&#xA;        ""id"": ""2"",&#xA;        ""name"": ""Anything"",&#xA;        ""description"": ""This is anything."",&#xA;        ""price"": {&#xA;          ""currencyCode"": ""USD"",&#xA;          ""units"": 24,&#xA;          ""nanos"": 56&#xA;        },&#xA;        ""userId"": ""1""&#xA;      }&#xA;    ]&#xA;  },&#xA;...&#xA;}&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>This is the protobuf file for product service.</p>&#xA;&#xA;<pre class=""lang-proto prettyprint-override""><code>service ProductService {&#xA;  rpc Index(Empty) returns (IndexProductResponse) {}&#xA;}&#xA;&#xA;message Money {&#xA;  // The 3-letter currency code defined in ISO 4217.&#xA;  string currency_code = 1;&#xA;&#xA;  // The whole units of the amount.&#xA;  // For example if `currencyCode` is `""USD""`, then 1 unit is one US dollar.&#xA;  int64 units = 2;&#xA;&#xA;  // Number of nano (10^-9) units of the amount.&#xA;  // The value must be between -999,999,999 and +999,999,999 inclusive.&#xA;  // If `units` is positive, `nanos` must be positive or zero.&#xA;  // If `units` is zero, `nanos` can be positive, zero, or negative.&#xA;  // If `units` is negative, `nanos` must be negative or zero.&#xA;  // For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.&#xA;  int32 nanos = 3;&#xA;}&#xA;&#xA;message Product {&#xA;  int32 id = 1;&#xA;  string name = 2;&#xA;  string description = 3;&#xA;  Money price = 4;&#xA;  int32 user_id = 5;&#xA;}&#xA;&#xA;message IndexProductResponse {&#xA;  repeated Product products = 1;&#xA;}&#xA;</code></pre>&#xA;",10583765,,13860,2020-01-12 15:17:19,2021-01-27 22:02:04,Go SQLBoiler: Query relation and return,<postgresql><go><graphql><protocol-buffers><grpc>,1,0,0,2020-01-12 15:14:42
59712346,1,59721823,,0,292,"<p>I can't push my object of product inside my shopping cart array i don't know what to do.&#xA;Anyone knows how to solve this?&#xA;I get this error : <strong>Cannot return null for non-nullable field Mutation.addToShopping.</strong></p>&#xA;&#xA;<p>User Model:</p>&#xA;&#xA;<pre><code>import mongoose from 'mongoose';&#xA;&#xA;const userSchema = new mongoose.Schema({&#xA;    name: {&#xA;        type: String,&#xA;        required: true,&#xA;        unique: true&#xA;    },&#xA;    email: {&#xA;        type: String,&#xA;        required: true,&#xA;        unique: true&#xA;    },&#xA;    password: {&#xA;        type: String,&#xA;        required: true&#xA;    },&#xA;    cart: {&#xA;        type: Array,&#xA;    }&#xA;});&#xA;&#xA;userSchema.set('toObjenct', { viruals: true });&#xA;&#xA;var Users = mongoose.model('User', userSchema);&#xA;&#xA;module.exports = Users;&#xA;</code></pre>&#xA;&#xA;<p>Resolver:</p>&#xA;&#xA;<pre><code>addToShopping: async (parent, args, context, info) =&gt; {&#xA;            const userId = getUserId(context);&#xA;            const product = await Products.findById(args.id);&#xA;            console.log(product)&#xA;            const user = await Users.findByIdAndUpdate(userId, { $push: { cart: product } }, { new: true }).exec()&#xA;                .catch((err) =&gt; {&#xA;                    console.log(err)&#xA;                });&#xA;            return user;&#xA;        },&#xA;</code></pre>&#xA;&#xA;<p>Schema: </p>&#xA;&#xA;<pre><code>type User {&#xA;        id: ID!&#xA;        name: String!&#xA;        email: String!&#xA;        password: String!&#xA;        cart: [Product]!&#xA;    }&#xA;type Product {&#xA;        id: ID!&#xA;        name: String!&#xA;        type: String!&#xA;        price: String!&#xA;        quantity: String!&#xA;    }&#xA;</code></pre>&#xA;",12332290,,12332290,2020-01-13 09:59:36,2020-01-13 18:04:49,Can't push the object to the array in Graphql,<mongodb><mongoose><graphql>,1,2,0,2020-01-13 07:42:25
59748763,2,,59746258,10,,"<p>Yes, you are able to use GraphQL with Firestore, there is actually <a href=""https://stackoverflow.com/questions/57737574/how-to-query-firestore-for-graphql-resolver"">this other thread</a> exploring this a little bit more in depth. </p>&#xA;&#xA;<p>Summarizing that information, you first need to convert the results from Firestore (those you obtain with the .get method for example) into an array so that you can pass them to GraphQL.</p>&#xA;&#xA;<p>There are also some examples online of this such as <a href=""https://github.com/arjunyel/firestore-apollo-graphql"" rel=""noreferrer"">this git repository</a>. You can use these as a guide in order to set your own implementation.</p>&#xA;&#xA;<p>Hope you find this useful.</p>&#xA;",10161306,,,,2020-01-15 09:47:29,"",,0,0,0,2020-01-15 09:47:29
59752849,1,,,0,145,"<p>I am trying to run the following query on Githubs GraphQL api:</p>&#xA;&#xA;<pre><code>{&#xA;  user(login: ""davekaj"") {&#xA;    id&#xA;    repositories(first: 10, orderBy: {field: NAME, direction: ASC}) {&#xA;      nodes {&#xA;        ref(qualifiedName: ""master"") {&#xA;          target {&#xA;            ... on Commit {&#xA;              history(first: 15, author: ""WHAT DO I PUT HERE"") {&#xA;                totalCount&#xA;                nodes {&#xA;                  additions&#xA;                  author {&#xA;                    name&#xA;                    user {&#xA;                      id&#xA;                    }&#xA;                  }&#xA;                  committedDate&#xA;                  deletions&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>It wants me to filter on a <code>CommitAuthor</code> for <code>history(author: )</code>. I tried passing my username, or my unique user ID, but it doesn't work. I am essentially passing it a string, but it wants the type <code>CommitAuthor</code>. How do I pass a <code>CommitAuthor</code> value?</p>&#xA;&#xA;<p>It isn't clear to me, and I searched through the docs and the schema and I couldn't find anything.</p>&#xA;&#xA;<p>Please help!</p>&#xA;",9023247,,,,2020-01-15 14:03:10,Github GraphQL API v4 Query on CommitAuthor,<graphql><github-api><github-api-v4>,1,0,0,2020-01-15 13:53:00
59753028,2,,59752849,1,,"<p>Ah, so the answer is actually very simple once I looked at the graphql documentation (rather than just the github documentation). <code>CommitAuthor</code> is an input type, which is described here <a href=""https://graphql.org/graphql-js/mutations-and-input-types/"" rel=""nofollow noreferrer"">https://graphql.org/graphql-js/mutations-and-input-types/</a>.</p>&#xA;&#xA;<p>The result is you pass an object of <code>CommitAuthor</code>. In this case I just have to pass the id, which looks like this: <code>author: {id: ""MDQ6VXNlcjIyNDE3Mzgy""}</code></p>&#xA;&#xA;<p>See the completed code below.</p>&#xA;&#xA;<pre><code>{&#xA;  user(login: ""davekaj"") {&#xA;    id&#xA;    repositories(first: 10, orderBy: {field: NAME, direction: ASC}) {&#xA;      nodes {&#xA;        ref(qualifiedName: ""master"") {&#xA;          target {&#xA;            ... on Commit {&#xA;              history(first: 15, author: {id: ""MDQ6VXNlcjIyNDE3Mzgy""}) {&#xA;                totalCount&#xA;                nodes {&#xA;                  additions&#xA;                  author {&#xA;                    name&#xA;                    user {&#xA;                      id&#xA;                    }&#xA;                  }&#xA;                  committedDate&#xA;                  deletions&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",9023247,,,,2020-01-15 14:03:10,"",,0,0,0,2020-01-15 14:03:10
59761366,2,,59761212,1,,"<p>It's correct, the value is just being displayed as Hex. It's your inspector that's confusing you. 13 hex as binary is</p>&#xA;&#xA;<pre><code>10011&#xA;</code></pre>&#xA;&#xA;<p>And that is decimal</p>&#xA;&#xA;<pre><code>19&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://www.rapidtables.com/convert/number/hex-to-decimal.html"" rel=""nofollow noreferrer"">https://www.rapidtables.com/convert/number/hex-to-decimal.html</a></p>&#xA;",4380513,,,,2020-01-16 00:16:00,"",,0,4,0,2020-01-16 00:16:00
59798151,1,,,2,293,"<p>I want to get multiple store details using Shopify graphql.&#xA;I tried like following but getting only current store details.</p>&#xA;&#xA;<pre><code>nodes(ids: [""gid://shopify/Shop/22954311758"",""gid://shopify/Shop/25747685469""]) {&#xA;    ... on Shop {&#xA;    id&#xA;    email&#xA;    }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>I know Shopify not provide other shop details like this because of security reason but I am looking for alternative to get multiple store details in a single graphql call. </p>&#xA;",9972860,,,,2020-01-21 07:30:49,How to get order count of multiple store in single Shopify graphql call,<graphql><shopify>,1,1,0,2020-01-18 06:37:04
59807958,1,59808022,,2,2138,"<p>I was building React Native Mobile Application with GraphQL. Now I've been stuck with passing array inside GraphQL mutation. I have been using redux-thunk as middleware to pass data to GraphQL mutation. </p>&#xA;&#xA;<p>My GraphQL mutation info: </p>&#xA;&#xA;<pre><code>createVirtualChallenge(&#xA;name: String!&#xA;target: String!&#xA;image: String&#xA;description: String&#xA;from: String!&#xA;to: String!&#xA;selectedUsers: [String]&#xA;): VirtualChallengeResponse!&#xA;</code></pre>&#xA;&#xA;<p>I have been passing selected users as an array which looks like this :</p>&#xA;&#xA;<blockquote>&#xA;  <p>[""5e2148d4b76df200314f4848"", ""5e213e6ab76df200314f47c4""]</p>&#xA;</blockquote>&#xA;&#xA;<p>My redux thunk fetch function is like this</p>&#xA;&#xA;<pre><code>   fetch(URL.BASE_URL, {&#xA;        method: 'POST',&#xA;        headers: {&#xA;          'Content-Type': 'application/json',&#xA;          Authorization: 'Bearer ' + token,&#xA;        },&#xA;        body: JSON.stringify({&#xA;          query: `mutation{ createVirtualChallenge( name:""${name}"", target:""${target}"", image:""${image_name}"", description:""${description}"", from:""${from}"", to:""${to}"", selectedUsers: ""${selectedUsers}"" , ){ success } }`,&#xA;        }),&#xA;      })&#xA;        .then(res =&gt; res.json())&#xA;</code></pre>&#xA;&#xA;<p>All the values are passing through props using redux.</p>&#xA;&#xA;<p>If the array length is 1, then this mutation works.. But if the array length is greater than 1 then GraphQL throws an error.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Response from the URL -  {""data"": null, ""errors"": [{""extensions"":&#xA;  [Object], ""locations"": [Array], ""message"": ""virtualChallenge&#xA;  validation failed: selectedUsers: Cast to Array failed for value \""[&#xA;  '5e213e6ab76df200314f47c4,5e214493b76df200314f47fa' ]\"" at path&#xA;  \""selectedUsers\"""", ""path"": [Array]}]}</p>&#xA;</blockquote>&#xA;",7867613,,,,2020-01-19 07:54:15,Unable to pass array inside GraphQL mutation - React Native,<javascript><arrays><react-native><graphql><mutation>,2,0,0,2020-01-19 07:14:53
59825555,1,59833946,,0,1849,"<p>I'm trying to create a Mutation that receives an input type like this:</p>&#xA;&#xA;<pre><code>input Cart {&#xA;    items: [CartItem!]!&#xA;    client: String!&#xA;}&#xA;&#xA;input CartItem {&#xA;    productId: Int!&#xA;    qty: Int!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And my Mutation goes like this:</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;    createOrder(cart: Cart!): Order!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But when I try to run my Application I get the following exception:</p>&#xA;&#xA;<pre><code>Caused by: com.coxautodev.graphql.tools.SchemaError: Expected type 'CartItem' to be a GraphQLOutputType, but it wasn't!  Was a type only permitted for object types incorrectly used as an input type, or vice-versa?&#xA;</code></pre>&#xA;&#xA;<p>What's going on?</p>&#xA;",264028,,,,2022-03-30 03:12:17,Exception using nested Input Types in GraphQL and Spring Boot,<spring-boot><graphql><graphql-java>,3,3,0,2020-01-20 14:40:23
59861172,1,59861890,,0,91,"<p>I'd like to rename the title of the pages depending on the data received by Apollo.&#xA;<a href=""https://i.stack.imgur.com/YWdgf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YWdgf.png"" alt=""Tab names""></a></p>&#xA;&#xA;<p>For example, at the url <code>myproject.com/media/title1</code>, my GraphQL reply will be:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""creation"":&#xA;      {&#xA;        ""id"": ""1"",&#xA;        ""title"": ""Title1"",&#xA;        ""creationDate"": ""2019-09-22 07:37:57 UTC"",&#xA;        ""coverUrl"": ""linktomedia.com/image.jpg"",&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to get the title in <code>data -&gt; creation -&gt; title</code> as my title page name.</p>&#xA;&#xA;<p>How can I do this ?</p>&#xA;&#xA;<p>Thank you.</p>&#xA;",0,user7770410,,,2020-01-22 14:27:11,Rename page with Apollo & Vue router,<vue.js><graphql><vue-router><apollo>,1,1,0,2020-01-22 13:47:11
59861812,2,,59857957,0,,"<p>After finding <a href=""https://stackoverflow.com/questions/55213290/nuxt-js-apollo-data-only-available-after-page-refresh?rq=1"">this similar question</a>, looks like the solutions was to add</p>&#xA;&#xA;<pre><code> v-if=""pages[0] != null""&#xA;</code></pre>&#xA;&#xA;<p>on the main element, and</p>&#xA;&#xA;<pre><code>  data() {&#xA;    return {&#xA;      pages: []&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>this seems to work, but not sure if there are other (better?) ways to handle it, so feel free to reply!</p>&#xA;&#xA;<p>Thanks</p>&#xA;",4239029,,,,2020-01-22 14:22:08,"",,0,0,0,2020-01-22 14:22:08
59868942,1,59869428,,1,2801,"<p>My IDE (Phpstorm with JS GraphQL) is giving me the title error for my schema. </p>&#xA;&#xA;<p>I'm new to GraphQL, what should the query be set to if the actual query operation only has a mutation at the root level? </p>&#xA;&#xA;<p>Below is an actual query taken out of a (Shopify) tutorial for their GraphQL API. I'm copying my local schema definition below which attempted to accommodate its shape.</p>&#xA;&#xA;<p>As you can see, The query is entirely nested in a mutation so I don't know what a query definition at the root level should even have.</p>&#xA;&#xA;<pre><code>// graphql.ts&#xA;&#xA;import ""isomorphic-fetch"";&#xA;&#xA;const buildPricingPlanQuery = (redirectUrl: string) =&gt; `mutation {&#xA;  appSubscribeCreate(&#xA;    name : ""Plan 1""&#xA;    returnUrl : ""${redirectUrl}""&#xA;    test : true&#xA;    lineItems : [&#xA;      {&#xA;        plan : {&#xA;          appUsagePricingDetails : {&#xA;            cappedAmount : {&#xA;              amount : 10&#xA;              , currencyCode : USD&#xA;            }&#xA;            terms : ""Up to 50 products""&#xA;          }&#xA;        }&#xA;      }&#xA;      {&#xA;        plan : {&#xA;          appRecurringPricingDetails : {&#xA;            price : {&#xA;              amount : 10&#xA;              , currencyCode : USD&#xA;            }&#xA;            terms : ""some recurring terms""&#xA;          }&#xA;        }&#xA;      }&#xA;    ]&#xA;  )&#xA;  {&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;    confirmationUrl&#xA;    appSubscription {&#xA;      id&#xA;    }&#xA;  }&#xA;}`;&#xA;&#xA;&#xA;export const requestSubscriptionUrl = async (ctx: any, accessToken: string, shopDomain: string) =&gt;  {&#xA;  const requestUrl = `https://${shopDomain}/admin/api/2019-10/graphql.json`;&#xA;&#xA;  const response = await fetch(requestUrl, {&#xA;    method : 'post'&#xA;    , headers : {&#xA;      'content-type' : ""application/json""&#xA;      , 'x-shopify-access-token' : accessToken&#xA;    },&#xA;    body : JSON.stringify({query: buildPricingPlanQuery(`https://${shopDomain}`)})&#xA;  });&#xA;&#xA;  const responseBody = await response.json();&#xA;  const confirmationUrl = responseBody&#xA;    .data&#xA;    .appSubscriptionCreate&#xA;    .confirmationUrl;&#xA;&#xA;  return confirmationUrl;&#xA;};&#xA;</code></pre>&#xA;&#xA;<pre><code>// pricingSchema.graphql&#xA;&#xA;# ------------ Minor Types&#xA;&#xA;enum CurrencyCode {&#xA;  USD&#xA;  EUR&#xA;  JPY&#xA;}&#xA;&#xA;type cappedAmount {&#xA;  amount: Int&#xA;  currencyCode : CurrencyCode&#xA;}&#xA;&#xA;type appUsagePricingDetails {&#xA;  cappedAmount: cappedAmount&#xA;}&#xA;&#xA;input PlanInput {&#xA;  appUsagePricingDetails: cappedAmount&#xA;  terms: String&#xA;}&#xA;&#xA;type userErrors {&#xA;  field: String&#xA;  message: String&#xA;}&#xA;&#xA;type appSubscription {&#xA;  id: Int&#xA;}&#xA;&#xA;# ------------ Major Type and Schema definition&#xA;&#xA;type PricingPlan {&#xA;  appSubscribeCreate(&#xA;    name: String!&#xA;    returnUrl: String!&#xA;    test: Boolean&#xA;    lineItems: [PlanInput!]!&#xA;  ): String&#xA;  userErrors: userErrors&#xA;  confirmationUrl: String&#xA;  appSubscription: appSubscription&#xA;}&#xA;&#xA;schema {&#xA;  mutation: PricingPlan&#xA;}&#xA;</code></pre>&#xA;",7608946,,,,2020-01-22 23:46:17,GraphQL: A schema must have a query operation defined,<graphql>,1,0,0,2020-01-22 22:07:13
59894294,1,,,0,74,"<p>I'm trying to wrap my head around GraphQL.</p>&#xA;&#xA;<p>Right now I'm just playing with the public API of Artsy (an art website, playground at <a href=""https://metaphysics-production.artsy.net"" rel=""nofollow noreferrer"">https://metaphysics-production.artsy.net</a>). What I want to achieve is following:</p>&#xA;&#xA;<ol>&#xA;<li>I want to get all node types <code>entities</code> without declaring them by hand (is there a shortcut for this)?</li>&#xA;<li>I want every node with a field <code>type</code> from which I can read the type, without parsing through <code>imageUrl</code> etc. to fint that out.</li>&#xA;</ol>&#xA;&#xA;<p>What I constructed as of right now is this:</p>&#xA;&#xA;<pre><code>{&#xA;  search(query: ""Berlin"", first: 100, page: 1, entities: [ARTIST, ARTWORK, ARTICLE]) {&#xA;  edges {&#xA;    node {&#xA;      displayLabel&#xA;      imageUrl&#xA;      href&#xA;    }&#xA;  }&#xA;}}&#xA;</code></pre>&#xA;&#xA;<p>Very primitive I guess. Can you guys help me?</p>&#xA;",3154088,,,,2020-01-24 14:15:48,How to adapt query to API?,<graphql>,1,3,0,2020-01-24 10:10:02
59895244,2,,59894294,2,,"<p><strong>TL;DR</strong>:</p>&#xA;&#xA;<p>1) There is no shortcut, it's not something GraphQL offers out of the box. Nor is it something I was able to find via their Schema. </p>&#xA;&#xA;<p>2) Their returned <code>node</code> of type <code>Searchable</code> does not contain a property for <code>type</code> that you're looking for. But you can access it via the <code>... on SearchableItem</code> <a href=""https://graphql.org/learn/schema/#union-types"" rel=""nofollow noreferrer"">(union) syntax</a>.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>Explanation</strong>:</p>&#xA;&#xA;<p>For question 1):</p>&#xA;&#xA;<p>Looking at their schema, you can see that their search query has the following type details:</p>&#xA;&#xA;<pre><code>search(&#xA;  query: String!&#xA;  entities: [SearchEntity]&#xA;  mode: SearchMode&#xA;  aggregations: [SearchAggregation]&#xA;  page: Int&#xA;  after: String&#xA;  first: Int&#xA;  before: String&#xA;  last: Int&#xA;): SearchableConnection&#xA;</code></pre>&#xA;&#xA;<p>The query accepts an <code>entities</code> property of type <code>SearchEntity</code> which looks like this:</p>&#xA;&#xA;<pre><code>enum SearchEntity {&#xA;  ARTIST&#xA;  ARTWORK&#xA;  ARTICLE&#xA;  CITY&#xA;  COLLECTION&#xA;  FAIR&#xA;  FEATURE&#xA;  GALLERY&#xA;  GENE&#xA;  INSTITUTION&#xA;  PROFILE&#xA;  SALE&#xA;  SHOW&#xA;  TAG&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Depending on what your usecase is, if you're constructing this query via some code, then you can find out which <code>SearchEntity</code> values they have:</p>&#xA;&#xA;<pre><code>{&#xA;  __type(name: ""SearchEntity"") {&#xA;    name&#xA;    enumValues {&#xA;      name&#xA;    }&#xA;  }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>Which returns: </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""__type"": {&#xA;      ""name"": ""SearchEntity"",&#xA;      ""enumValues"": [&#xA;        {&#xA;          ""name"": ""ARTIST""&#xA;        },&#xA;        {&#xA;          ""name"": ""ARTWORK""&#xA;        },&#xA;&#xA;      ...&#xA;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>then store them in an array, <strong>omit</strong> the quotation marks from the enum and pass the array back to the original query directly as an argument.</p>&#xA;&#xA;<p>Something along the lines of this:</p>&#xA;&#xA;<pre><code>query search($entities: [SearchEntity]) {&#xA;  search(query: ""Berlin"", first: 100, page: 1, entities: $entities) {&#xA;    edges {&#xA;    node {&#xA;      displayLabel&#xA;      imageUrl&#xA;      href&#xA;    }&#xA;  }&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and in your query variables section, you just need to add:</p>&#xA;&#xA;<pre><code>{&#xA;  ""entities"": [ARTIST, ARTWORK, ...]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><br/>&#xA;<br/>&#xA;<br/>&#xA;<br/>&#xA;<br/>&#xA;<br/>&#xA;As for question 2)</p>&#xA;&#xA;<p>The query itself returns a <code>SearchableConnection</code> object. </p>&#xA;&#xA;<pre><code>type SearchableConnection {&#xA;  pageInfo: PageInfo!&#xA;  edges: [SearchableEdge]&#xA;  pageCursors: PageCursors&#xA;  totalCount: Int&#xA;  aggregations: [SearchAggregationResults]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Digging deeper, we can see that they have <code>edges</code>, of type <code>SearchableEdge</code> - which is what you're querying.</p>&#xA;&#xA;<pre><code>type SearchableEdge {&#xA;  node: Searchable&#xA;  cursor: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and finally, <code>node</code> of type <code>Searchable</code> which contains the data you're trying to access.</p>&#xA;&#xA;<p>Now, the type <code>Searchable</code> doesn't contain <code>type</code>:</p>&#xA;&#xA;<pre><code>type Searchable {&#xA;  displayLabel: String&#xA;  imageUrl: String&#xA;  href: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But, if you look at where that <code>Searchable</code> type is implemented, you can see <code>SearchableItem</code> - which contains the property of <code>displayType</code> - which doesn't actually exist in <code>Searchable</code>.</p>&#xA;&#xA;<p>You can access the property of <code>SearchableItem</code> and get the <code>displayType</code>, like so:</p>&#xA;&#xA;<pre><code>{&#xA;  search(query: ""Berlin"", first: 100, page: 1, entities: [ARTIST, ARTWORK, ARTICLE]) {&#xA;    edges {&#xA;      node {&#xA;        displayLabel&#xA;        imageUrl&#xA;        href&#xA;        ... on SearchableItem {&#xA;          displayType&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and your result will look like this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""search"": {&#xA;      ""edges"": [&#xA;        {&#xA;          ""node"": {&#xA;            ""displayLabel"": ""Boris Berlin"",&#xA;            ""imageUrl"": ""https://d32dm0rphc51dk.cloudfront.net/CRxSPNyhHKDIonwLKIVmIA/square.jpg"",&#xA;            ""href"": ""/artist/boris-berlin"",&#xA;            ""displayType"": ""Artist""&#xA;          }&#xA;        },&#xA;&#xA;...&#xA;</code></pre>&#xA;",14649706,,14649706,2020-01-24 14:15:48,2020-01-24 14:15:48,"",,0,0,0,2020-01-24 11:08:57
59908764,1,59909358,,0,1284,"<p>I'm looking a the documentation for Laravel Lighthouse and I am seeing two types of mutations.</p>&#xA;&#xA;<ul>&#xA;<li>A mutation that includes the string <code>input:</code> <a href=""https://lighthouse-php.com/4.8/eloquent/nested-mutations.html#belongs-to"" rel=""nofollow noreferrer"">(found here)</a></li>&#xA;</ul>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>mutation {&#xA;  createPost(input: { # &lt;-- the ""input:"" I'm talking about&#xA;    title: ""My new Post""&#xA;    author: {&#xA;      connect: 123&#xA;    }&#xA;  }){&#xA;    id&#xA;    author {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And another mutation without the <code>input:</code> <a href=""https://lighthouse-php.com/4.8/concepts/arg-resolvers.html#motivation"" rel=""nofollow noreferrer"">(found here)</a></p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>mutation CreateTaskWithNotes {&#xA;  createTask( # &lt;-- no ""input:"" here&#xA;    id: 45&#xA;    name: ""Do something""&#xA;    notes: [&#xA;      {&#xA;        content: ""Foo bar"",&#xA;        link: ""http://foo.bar""&#xA;      },&#xA;      {&#xA;        content: ""Awesome note""&#xA;      }&#xA;    ]&#xA;  ) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My question is: How do I get the mutations without <code>input:</code> to work?</p>&#xA;&#xA;<p>I try to copy (an modify) the examples from the documentation. But if I write a mutation like this:</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>type Mutation {&#xA;    createTask(input: CreateTaskInput! @spread): Task! @create&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I try to omit <code>input:</code>, graphql-playground complains: ""Field <em>createTask</em> argument <em>input</em> of type <em>CreateTaskInput</em> is required but not provided""</p>&#xA;&#xA;<p>Now I try to change the schema to this:</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>type Mutation {&#xA;    createTask(CreateTaskInput! @spread): Task! @create&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But then the server gives a <code>ParseException</code>.</p>&#xA;&#xA;<p>I do prefer the syntax without <code>input:</code> because that is a lot less repetitive.&#xA;Can anybody help?</p>&#xA;",1180612,,,,2020-07-30 20:49:21,"Laravel Lighthouse GraphQL create mutation without ""input:""",<laravel><graphql><laravel-lighthouse>,1,0,0,2020-01-25 11:26:03
59908872,1,,,4,9394,"<p>I have a Json object and want to convert it to graphql query in order to post a request on graphql api. Can any one please provide any pointer to it as I am not able to proceed.</p>&#xA;&#xA;<pre><code>JSON object extracted from the POJO:&#xA;{&#xA;  ""customer"": {&#xA;     ""idFromSource"": ""123"", &#xA;     ""title"": ""Mrs"", &#xA;     ""dateOfBirth"": ""1980-11-11""&#xA;  }&#xA;}&#xA;&#xA;graphql query that I need to hit a post request:&#xA;{&#xA;  ""query"": ""mutation {updateCustomer(customer: &#xA;                    {idFromSource: \""123\"", &#xA;                    title: \""Mrs\"", &#xA;                    dateOfBirth: \""1980-11-11\""})&#xA;                     {idFromSource title dateOfBirth}}""&#xA;}&#xA;</code></pre>&#xA;",12780494,,12780494,2020-01-25 11:52:42,2020-01-25 15:47:31,How to convert JSON format of data to GraphQL query format,<java><json><graphql>,1,2,0,2020-01-25 11:42:46
59954815,2,,59937079,1,,"<p>Test in external tool prooves that it's not [quite] react/apollo fault. </p>&#xA;&#xA;<p>It's from not standard error handling - optional elements (message) expressed in mutation, expected in response. Similiar problem using UNION: <a href=""https://stackoverflow.com/questions/59920824"">useQuery returns undefined, But returns data on gql playground</a></p>&#xA;&#xA;<p>Error that you're pointing at:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Here's where the error is coming from: (at line .then(({ data: { registerUser: { success, errors: [{ message }] } } }) =>)</p>&#xA;</blockquote>&#xA;&#xA;<p>is an example of ""too optimistic destructuring"", not fail safe (not stops on nulls),  change it to   </p>&#xA;&#xA;<pre><code>.then(({ data: { registerUser: { success, errors } } }) =&gt;)&#xA;</code></pre>&#xA;&#xA;<p>and process <code>errors</code> in body - this is an array so no one <code>message</code> parameter.</p>&#xA;",6124657,,,,2020-01-28 18:20:01,"",,0,2,0,2020-01-28 18:20:01
59992881,2,,53108114,1,,"<p>As of version 5.1.0 of the Shopify Python API, support for querying the Shopify Admin API with Graphql is included: </p>&#xA;&#xA;<pre><code>client = shopify.GraphQL()&#xA;query = '''&#xA;    {&#xA;        shop {&#xA;            name&#xA;            id&#xA;        }&#xA;    }&#xA;'''&#xA;result = client.execute(query)&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://github.com/Shopify/shopify_python_api#graphql"" rel=""nofollow noreferrer"">Shopify Python API Graphql Docs</a></p>&#xA;",2569090,,2569090,2020-01-30 19:18:36,2020-01-30 19:18:36,"",,0,0,0,2020-01-30 19:06:35
60003695,1,,,-1,43,"<p>Github GraphQL API:  how to get rep's one source file by GrahpQL api ?</p>&#xA;&#xA;<p>For example, if there's a data file like  <code>somedata.json</code>, is there a way to fetch it by  Github GraphQL API ?</p>&#xA;",1530581,,,,2020-01-31 13:31:39,Github GraphQL API: how to get rep's one source file by GrahpQL api?,<github><graphql><github-api>,1,1,0,2020-01-31 12:12:50
60013899,1,60014055,,2,1436,"<p>I have a search query which takes an variable and searches based on that.</p>&#xA;&#xA;<p>On my home page I'd like to send this query 3 times with 3 different variables.</p>&#xA;&#xA;<p>But if I do as above I can't get the results.</p>&#xA;&#xA;<p>Here is the query:</p>&#xA;&#xA;<pre><code>const TOP_TEACHER_QUERY= gql`&#xA;    query topTeachers {&#xA;        searchBasicTeachersByRating(rating: 3) {&#xA;            id&#xA;            name&#xA;            title&#xA;        }&#xA;        searchBasicTeachersByRating(rating: 4) {&#xA;            id&#xA;            name&#xA;            title&#xA;            isNew&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and this is the function</p>&#xA;&#xA;<pre><code>allQueries() {&#xA;    return this.apollo&#xA;        .watchQuery&lt;any&gt;({&#xA;            query: TOP_TEACHER_QUERY,&#xA;        })&#xA;        .valueChanges;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>NOTE :</strong></p>&#xA;&#xA;<p>I have tried adding an interface and define the desired response data, but it has no effect</p>&#xA;&#xA;<pre><code>interface Response {&#xA;    searchBasicTeachersByRatingMedium: Student[];&#xA;    searchBasicTeachersByRatingHigh: Student[];&#xA;}&#xA;&#xA;allQueries() {&#xA;    return this.apollo&#xA;        .watchQuery&lt;any&gt;({&#xA;            query: TOP_TEACHER_QUERY,&#xA;        })&#xA;        .valueChanges;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><em>THE DATA IS ONLY CONTAINING A LIST NAMED AFTER THE QUERY (searchBasicTeachersByRating)</em></p>&#xA;&#xA;<p>I have tried the following query in graphql playground and it returns 2 arrays&#xA;but in Angular I can only get one</p>&#xA;&#xA;<p>As a work around I created new queries at back-end, or sent 2 different queries.</p>&#xA;&#xA;<p>But I want a solution for this approach.</p>&#xA;&#xA;<p>Thanks in advance</p>&#xA;",9614342,,9614342,2021-01-24 10:04:23,2021-01-24 10:04:23,Send 2 identical Graphql queries in one call but with different variables,<reactjs><angular><graphql><apollo><apollo-client>,1,0,0,2020-02-01 04:04:08
60014055,2,,60013899,4,,"<p>When a selection set includes the same field multiple times, you need to utilize aliases for the duplicate fields:</p>&#xA;&#xA;<pre><code>searchBasicTeachersByRatingMedium: searchBasicTeachersByRating(rating: 3) {&#xA;  id&#xA;  name&#xA;  title&#xA;}&#xA;searchBasicTeachersByRatingHigh: searchBasicTeachersByRating(rating: 4) {&#xA;  id&#xA;  name&#xA;  title&#xA;  isNew&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>After the request completes, each field will be available as a property on <code>data</code> under the provided alias. In the example above, we aliased both fields, but you could omit the alias from one of them.</p>&#xA;",6024220,,,,2020-02-01 04:41:44,"",,0,0,0,2020-02-01 04:41:44
60039683,2,,60035136,0,,"<p>GraphQL requires that a field always resolves to either a single value or a list -- it cannot resolve to either. A field <em>can</em> however, return different types altogether at runtime using an abstract type (either a union or an interface). So you can restructure your schema like this:</p>&#xA;&#xA;<pre><code>type Body {&#xA;  content: Content&#xA;}&#xA;&#xA;union Content = TextContent | BannerContent&#xA;&#xA;type TextContent {&#xA;  text: String&#xA;}&#xA;&#xA;type BannerContent {&#xA;  banners: [Banner]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You would then query <code>content</code> using fragments:</p>&#xA;&#xA;<pre><code>query {&#xA;  someField {&#xA;    body {&#xA;      content: {&#xA;        ...on TextContent {&#xA;          text&#xA;        }&#xA;        ...on BannerContent {&#xA;          banners&#xA;        }&#xA;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6024220,,,,2020-02-03 12:54:58,"",,0,0,0,2020-02-03 12:54:58
60047952,1,,,1,371,"<p>Im trying to receive data from Shopify using GraphQL. I am able to fetch data by giving the product ID and receiving the data in Storefront.Product form, however I need it to be in Storefront.ProductEdge form.</p>&#xA;&#xA;<p>Heres my code:</p>&#xA;&#xA;<pre><code>final class ClientQuery {&#xA;    static func queryForProduct(id: String) -&gt; Storefront.QueryRootQuery {&#xA;    let id = GraphQL.ID(rawValue: id)&#xA;    return Storefront.buildQuery { $0&#xA;        .node(id: id) { $0&#xA;            .onProduct() { $0&#xA;                .id()&#xA;                .title()&#xA;                .variants(first: 1){ $0&#xA;                    .edges() { $0&#xA;                        .node(){ $0&#xA;                            .availableForSale()&#xA;                            .priceV2(){ $0&#xA;                                .amount()&#xA;                            }&#xA;                        }&#xA;                    }&#xA;              }&#xA;                .description()&#xA;                .images( first: 1){ $0&#xA;                    .fragmentForStandardProductImage()&#xA;&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}//end of final class&#xA;</code></pre>&#xA;&#xA;<p>.</p>&#xA;&#xA;<pre><code>final class Client{&#xA;&#xA;@discardableResult&#xA;func fetchProduct(id: String, completion: @escaping (Storefront.Product?) -&gt; Void) -&gt; Task {&#xA;    let query = ClientQuery.queryForProduct(id: id)&#xA;&#xA;     let task  = self.client.queryGraphWith(query) { (query, error) in&#xA;         error.debugPrint()&#xA;&#xA;        if let product = query?.node as? Storefront.Product? {&#xA;        completion (product)&#xA;        }&#xA;        else {&#xA;        print(""Failed to fetch Product: \(String(describing: error))"")&#xA;        completion (nil)&#xA;            }&#xA;        }&#xA;     task.resume()&#xA;     return task&#xA;   }&#xA;  }&#xA; }//end of final class&#xA;</code></pre>&#xA;&#xA;<p>.</p>&#xA;&#xA;<pre><code>viewDidLoad(){&#xA;            Client.shared.fetchProduct(id: sku) { Product1 in&#xA;               guard let Product1 = Product1 else {&#xA;                   print(""Failed to fetch Product"")&#xA;                   return&#xA;             }    &#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>This code works and I am able to get certain values of product, such as title and image.&#xA;However I want to get the data as Type <code>Storefront.ProductEdge</code> instead of <code>Storefront.Product</code>, to make displaying data better.&#xA;But when I change <code>fetchProduct</code> to:</p>&#xA;&#xA;<pre><code>   @discardableResult&#xA;func fetchProduct(id: String, completion: @escaping (Storefront.ProductEdge?) -&gt; Void) -&gt; Task {&#xA;    let query = ClientQuery.queryForProduct(id: id)&#xA;&#xA;     let task  = self.client.queryGraphWith(query) { (query, error) in&#xA;         error.debugPrint()&#xA;&#xA;        if let product = query?.node as? Storefront.ProductEdge? {&#xA;        completion (product)&#xA;        }&#xA;        else {&#xA;        print(""Failed to fetch Product: \(String(describing: error))"")&#xA;        completion (nil)&#xA;            }&#xA;        }&#xA;     task.resume()&#xA;     return task&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>.</p>&#xA;&#xA;<p>Then I get <code>""Failed to fetch Product: nil""</code> and <code>""Failed to fetch Product""</code></p>&#xA;&#xA;<p>What is going on? And how can I call the product data out as Storefront.ProductEdge type?</p>&#xA;&#xA;<p>Any input would be greatly appreciated!</p>&#xA;&#xA;<p>Cheers</p>&#xA;",8146819,,,,2020-07-21 06:23:15,Query data from Shopify using GraphQL into ios app. Xcode - SWIFT,<ios><swift><xcode><graphql><shopify>,0,0,0,2020-02-03 22:18:26
60057971,1,,,1,110,"<p>We are developing a large CMS using contentful with gatsby. This contentful installation has 2 spaces due to legislative content reasons and a multitude of environments for developing new features. Currently our process flow is that we use contentful's migration tooling to create migrations for new content models and/or content model alterations in contentful and store them in source control. Upon merge, our CI workflows migrate these content model changes to the master environments of both our spaces.</p>&#xA;&#xA;<p>An issue we've run into is that, due to a quirk of contentful's management API where any content model that doesn't have any content registers as not existing, we need to create seed content for some of our content model changes. This creates the following problems:</p>&#xA;&#xA;<ul>&#xA;<li>Seed content that needs to reference existing content through ids will break between spaces as ids will differ</li>&#xA;<li>If we spend a while developing a feature, our environments will fall behind the master env and updating our temporary development env can be time consuming and awkward depending on the level of changes to master</li>&#xA;<li>We end up with a load of dummy content in our spaces, making our contentful spaces untidy</li>&#xA;</ul>&#xA;&#xA;<p>We are experimenting with a couple of solutions but the preferred one is to simply handle the errors from graphql validation ourselves. After a bit of experimentation with gql validation, removing a few of their internal rules, the call to contentful doesn't actually break the application. All breaking errors just come from the validation step. The ideal would be to ""switch off"" the validation rule <code>NoUndefinedVariables</code> which is the only one causing us problems. By switch off I mean just display a warning over a breaking error. We would then handle undefined or empty values in the application ourselves.</p>&#xA;&#xA;<p>I can't see any way to handle gql validation via gatsby's developer interface (gatsby-node, gatsby-config etc). What's the best way to handle this?</p>&#xA;",5507462,,,,2020-02-04 12:57:48,Manage graphql validation in gatsby to work around contentful not returning content models with no content,<javascript><graphql><gatsby><contentful><contentful-management>,0,0,0,2020-02-04 12:57:48
60072759,2,,60069082,0,,<p>I think there is a problem with you graphQL Query. Try this one:</p>&#xA;&#xA;<pre><code>export const productQuery = graphql`&#xA;  query {&#xA;    allContentfulProducts {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          productName&#xA;          image {&#xA;            fluid {&#xA;              src&#xA;              ...GatsbyContentfulFluid&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>If this query is not helping please show us the structure of your contentful assets.</p>&#xA;,1771213,,,,2020-02-05 09:32:38,"",,0,0,0,2020-02-05 09:32:38
60080220,1,,,0,1839,"<p>I am trying to Implement WireMock for a GraphQl Request API, but it is returning error 500 instead of taking stub.</p>&#xA;&#xA;<p>Here is my code.</p>&#xA;&#xA;<pre><code>wireMockgraphQRule.stubFor(post(urlPathMatching(""/graphql/graphql""))&#xA;</code></pre>&#xA;&#xA;<p>Below is the error I am getting.</p>&#xA;&#xA;<blockquote>&#xA;  <p>API_Name: GraphQLClass API_URL: <a href=""http://localhost:7777/graphql/graphql"" rel=""nofollow noreferrer"">http://localhost:7777/graphql/graphql</a>&#xA;  APP_STATUS: Failure RESPONSE_CODE: 500</p>&#xA;</blockquote>&#xA;&#xA;<p>Anyone implemented Wiremock for Graphql, please share some pointers on implementing same.</p>&#xA;",12843415,,12843415,2020-02-06 07:34:08,2020-04-27 22:42:41,WireMock for GraphQL API,<java><graphql><wiremock>,0,3,0,2020-02-05 16:34:43
60081217,2,,60065558,2,,"<p>Since edges will most likely be an array you need to access a certain item or map the whole array, e.g. </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>{ProjectTitles.edges.map(node =&gt; (&#xA;    &lt;div&gt;{node.frontmatter.title}&lt;/div&gt;&#xA;))}&#xA;</code></pre>&#xA;",1398640,,,,2020-02-05 17:35:46,"",,0,0,0,2020-02-05 17:35:46
60085821,1,,,0,49,<p>I am in a an appsync environment that has been in production for a while.  This is not the first mutation or even mutation taking an array of objects in the project.  Yet what has worked for other such cases does not work for this one.  </p>&#xA;&#xA;<p>I dimly recall that sometimes a 'complex' argument like an array of objects or even scalars only got past the parse when turned to an input type.  LeaderboardEventType below is an enum.</p>&#xA;&#xA;<pre><code>type LeaderboardEventScores {&#xA;    event: LeaderboardEventType!&#xA;    score: String!&#xA;}&#xA;&#xA;type LeaderboardConfigScores {&#xA;    id: ID!&#xA;    scores: [LeaderboardEventScores]!&#xA;}&#xA;&#xA;input LeaderboardConfigScoresInput {&#xA;     id: ID!&#xA;     scores: [LeaderboardEventScores]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>While the type definition above works in the parser the input definition exactly like it does not.  I don't see at all why not.  And neither of them works to define the argument of my mutation.  Nor does adding an inner ! for the input work.  Nor does just taking the body of the input with a comma after ID! as mutation arguments.  But what really has my goat is that I cannot define such an input.  Why not?</p>&#xA;,423560,,,,2020-02-06 00:16:50,Get schema errors with all variations of qraphql mutation taking array of objects,<graphql><aws-appsync>,1,1,0,2020-02-05 23:54:58
60085972,2,,60085821,0,,"<p>I found a solution but darn if it makes a lot of sense to me.  If I make an input like the type I am doing an array of as an argument and instead do a an array of the input then it ""works"".</p>&#xA;&#xA;<pre><code>input LeaderboardEventScoreInput {&#xA;  event: LeaderboardEventType!&#xA;  score: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and the mutation</p>&#xA;&#xA;<pre><code>modifyLeaderboardConfigScores(&#xA; id: ID!&#xA; scores: [LeaderboardEventScoreInput]!&#xA;): [LeaderboardEventScores]!&#xA;</code></pre>&#xA;&#xA;<p>So apparently arrays of non-scalars are only supported if the element type is an input.</p>&#xA;",423560,,,,2020-02-06 00:16:50,"",,0,0,0,2020-02-06 00:16:50
60087709,2,,58103586,2,,"<p>Latest prisma2 has count().</p>&#xA;&#xA;<p>prisma.user.count() gives total number of users and then number of pages is count/limit.</p>&#xA;&#xA;<p>source: <a href=""https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md"" rel=""nofollow noreferrer"">https://github.com/prisma/prisma2/blob/master/docs/prisma-client-js/api.md</a></p>&#xA;",3830485,,,,2020-02-06 04:23:19,"",,0,1,0,2020-02-06 04:23:19
60107603,2,,59350246,1,,"<p><a href=""https://github.com/bytewitchcraft/apollo-absinthe-upload-link#usage-with-react-native"" rel=""nofollow noreferrer"">apollo-absinthe-upload-link</a> expects a variable of type <a href=""https://developer.mozilla.org/en-US/docs/Web/API/File"" rel=""nofollow noreferrer"">File</a> or <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Blob"" rel=""nofollow noreferrer"">Blob</a> (<a href=""https://github.com/bytewitchcraft/apollo-absinthe-upload-link/blob/master/src/validators.js#L8"" rel=""nofollow noreferrer"">see here</a>), but you are passing <code>fileData</code> as type <code>FormData</code>.</p>&#xA;&#xA;<p>Since your <code>input</code> type is <code>file</code>, you could do: </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const handleUploadImage = (event) =&gt; setImages(event.target.files);&#xA;&#xA;const buildForm = () =&gt; ({&#xA;  productName,&#xA;  productDescription,&#xA;  productPrice,&#xA;  productType,&#xA;  isReturnable,&#xA;  storeID: 2,&#xA;  fileData: images[0],&#xA;});&#xA;&#xA;</code></pre>&#xA;&#xA;<p>References:</p>&#xA;&#xA;<p><a href=""https://github.com/react-dropzone/file-selector/blob/master/src/file-selector.ts#L27"" rel=""nofollow noreferrer"">file-selector</a></p>&#xA;&#xA;<p><a href=""https://github.com/react-dropzone/react-dropzone/blob/b09129b57155852264358e213bdc9d45ac06f5bb/src/index.js#L360"" rel=""nofollow noreferrer"">react-dropzone</a></p>&#xA;",9323697,,,,2020-02-07 05:29:34,"",,0,0,0,2020-02-07 05:29:34
60113178,2,,60112267,0,,"<p>@xadm's comment did the trick. First of all my query will return an array so schema has to be defined to return an array of [Player], plus raw: true will omit all the bogus I don't need (<a href=""https://stackoverflow.com/a/44761334/6124657"">https://stackoverflow.com/a/44761334/6124657</a>).</p>&#xA;&#xA;<p>Thanks again.</p>&#xA;",12702930,,,,2020-02-07 12:05:44,"",,0,0,0,2020-02-07 12:05:44
60126508,1,,,0,429,"<p>I am using Shopify as backend and GatsbyJs as frontend to create an e-commerce website. I am using GraphQL to query products, variants and blogs which is working fine. Now I want to show product reviews on my frontend and let customers write reviews too. For this I have used Product Review app in Shopify and now I am able to view/write reviews in Shopify, but I want to do this through Gatsby (my frontend), which I am unable to do as I cant find the approriate query in GraphQL. Is there any way I can do it or do I need something other than GraphQL. </p>&#xA;",6647803,,,,2020-02-08 11:51:50,Is there any way I can write a GraphQL query to fetch Shopify product reviews,<graphql><shopify><gatsby>,0,6,0,2020-02-08 11:51:50
60133656,1,60134062,,3,1834,<p>Lets say I have the following GraphQL query:</p>&#xA;&#xA;<pre><code>query {&#xA;  shops(id: 1) {&#xA;    id&#xA;    name&#xA;    products {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How do I get the count of <code>products</code>? (for pagination purpose)</p>&#xA;,8704526,,,,2022-03-07 12:42:04,How do I get children count in Strapi's one-to-many relation using GraphQL?,<graphql><strapi>,2,0,0,2020-02-09 05:10:54
60144473,1,,,1,27,"<p>I know that I can use the Deployments field of a GitHub GraphQL Repository object to check if the repository uses GitHub pages - but if a repository has multiple deployments strategies (if that's even possible?), one might have to paginate through the deployments connection for each repository to check. I wonder if there's a simpler way I'm not thinking of?</p>&#xA;",1361123,,,,2020-02-10 05:21:04,What's the best way to check if a repository object in GitHub's GraphQL Library uses GitHub Pages,<github><github-api><github-graphql>,0,0,0,2020-02-10 05:21:04
60155087,1,,,1,169,"<p>Given below is the query that fetches a list of products and stores it in the apollo-client local cache. It retrieves a list of <code>products</code> and the list of <code>images</code> for every product</p>&#xA;&#xA;<pre><code>const GET_PRODUCTS_QUERY = gql`&#xA;  query Products($cursor: String, $query: String, $imageCount: Int = 100) {&#xA;    products(first: 9, after: $cursor, query: $query) {&#xA;      edges {&#xA;        cursor&#xA;        node {&#xA;          id&#xA;          selected @client&#xA;          title&#xA;          description&#xA;          images(first: $imageCount) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;                originalSrc&#xA;                selected @client&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>The data returned is being used to render a UI where the user can select any number of products. I'm using the following mutation to mark a product as selected</p>&#xA;&#xA;<pre><code>(_root, variables, { getCacheKey, cache }) =&gt; {&#xA;  const id = getCacheKey({&#xA;    __typename: ""Product"",&#xA;    id: variables.id&#xA;  });&#xA;  const fragment = gql`&#xA;    fragment toggleSelected on Product {&#xA;      selected,&#xA;    }&#xA;  `;&#xA;  const data = cache.readFragment({&#xA;    id,&#xA;    fragment&#xA;  });&#xA;  cache.writeData({&#xA;    id,&#xA;    data: {&#xA;      ...data,&#xA;      selected: !data.selected&#xA;    }&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>The above mutation is working fine and the <code>selected</code> flag appears on the corresponding <code>product</code> in the cache. Now I have the requirement that when a product is selected, it's first image should also be marked as selected without any manual action from the user. In this case, I do not have the id of the image with me. I just know that whatever be the first image of the selected product, it should be marked as selected. How can I go about achieving this? If I had the id, I guess I will be able to create a fragment on the Image object and get it mutated.</p>&#xA;",843241,,,,2020-02-10 17:06:13,How do I set an @client variable in the results of a nested query based on the index of the element,<reactjs><graphql><apollo><react-apollo><graphql-tag>,0,7,0,2020-02-10 17:06:13
60158696,2,,60098971,1,,"<p>To expand on Daniel Reardon's answer: unfortunately, it's not possible to query for the same field with different arguments.  The recommended technique for that situation would be to use aliases:</p>&#xA;&#xA;<p><a href=""https://graphql.org/learn/queries/#aliases"" rel=""nofollow noreferrer"">https://graphql.org/learn/queries/#aliases</a></p>&#xA;&#xA;<p>However, you can design your API to return different results based on the array you're passing to it.  So for example, you could return only one record if there is only one item in the array, many if there are many, or all records if the array is empty.  </p>&#xA;&#xA;<p>Here's some hypothetical code of what that might look like:</p>&#xA;&#xA;<pre><code>public IEnumerable&lt;Accounts&gt; GetAccounts(int[] accountIds)&#xA;{&#xA;    // if no items in array&#xA;    if (accountIds.Length == 0)&#xA;    {&#xA;        // return all accounts&#xA;        return Accounts.ToList();&#xA;    }&#xA;&#xA;    // return only accounts that are in accountIds array&#xA;    // if only one item is in array, then an IEnumerable with only one item will be returned&#xA;    return Accounts&#xA;        .Where(b =&gt; accountIds.Contains(b.AccountId))&#xA;        .ToList();&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://github.com/ChilliCream/hotchocolate-examples/blob/master/PureCodeFirst/Repositories/CharacterRepository.cs"" rel=""nofollow noreferrer"">Hot Chocolate's GetCharacters(int[] ids) method in the Star Wars API example</a> will also return only a single character if an array with only one ID is passed or many if there are multiple items in the array:</p>&#xA;&#xA;<pre><code>public IEnumerable&lt;ICharacter&gt; GetCharacters(int[] ids)&#xA;        {&#xA;            foreach (int id in ids)&#xA;            {&#xA;                if (_characters.TryGetValue(id, out ICharacter? c))&#xA;                {&#xA;                    yield return c;&#xA;                }&#xA;            }&#xA;        }&#xA;</code></pre>&#xA;",2344773,,,,2020-02-10 21:28:03,"",,0,0,0,2020-02-10 21:28:03
60161603,1,,,1,149,"<p>Given below is the query that fetches a list of products and stores it in the apollo-client local cache. It retrieves a list of <code>products</code> and the list of <code>images</code> for every product</p>&#xA;&#xA;<pre><code>const GET_PRODUCTS_QUERY = gql`&#xA;  query Products($cursor: String, $query: String, $imageCount: Int = 100) {&#xA;    products(first: 9, after: $cursor, query: $query) {&#xA;      edges {&#xA;        cursor&#xA;        node {&#xA;          id&#xA;          selected @client&#xA;          title&#xA;          description&#xA;          images(first: $imageCount) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;                originalSrc&#xA;                selected @client&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>I have a bunch of <code>products</code> with <code>selected: true</code> and each of this products will have one or more <code>images</code> with <code>selected: true</code>. My intention is to query the local GraphQL cache, and retrieve all products along with their images so that I can then filter them on the basis of the <code>selected</code> flag</p>&#xA;&#xA;<p>This is what I have tried so far.</p>&#xA;&#xA;<p>I wrote the query below</p>&#xA;&#xA;<pre><code>export const GET_SELECTED_PRODUCTS = gql`&#xA;  {&#xA;    selectedProducts @client&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>I wrote the definitions for the above query in the <code>resolvers</code> section while creating the ApolloClient as shown below</p>&#xA;&#xA;<pre><code>{&#xA;  Query: {&#xA;    selectedProducts(root, variables, { cache }) {&#xA;      let data = [];&#xA;      try {&#xA;       //Is this the right way to query the cache??&#xA;        const results = cache.readQuery({&#xA;          query: gql`&#xA;            query Products {&#xA;              products {&#xA;                id&#xA;                selected @client&#xA;                images(first: 100) {&#xA;                  edges {&#xA;                    node {&#xA;                      id&#xA;                      originalSrc&#xA;                      selected @client&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          `&#xA;        });&#xA;&#xA;        //code to filter selected products&#xA;&#xA;        data = results.data;&#xA;      } catch (ex) {&#xA;        console.error(ex);&#xA;      }&#xA;      return data;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm trying to use the above query in a component as shown </p>&#xA;&#xA;<pre><code>export default () =&gt; {&#xA;  const { data: productsData = {} } = useQuery(GET_SELECTED_PRODUCTS);&#xA;  const { selectedProducts = [] } = productsData;&#xA;  //Render selected products&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>There is some network delay for the cache to be filled up with product(by executing the <code>GET_PRODUCTS_QUERY</code>). So when the component first renders, <code>GET_SELECTED_PRODUCTS</code> throws an error(as expected) as products are not yet in the cache. Once the products are in the cache, some mutations(marking <code>selected</code> field as true) are done on the product object as the user clicks on products. I was under the impression that when this mutation happens, the useQuery hook with execute the <code>GET_SELECTED_PRODUCTS</code> query again to fetch the latest update. But this is not happening. How can I hook up the component to change and fetch the latest query results when something changes on the product object?</p>&#xA;",843241,,,,2020-02-11 03:30:59,How to query GraphQL local state to retrieve all objects with a particular value for an @client variable from a nested structure,<reactjs><apollo><react-apollo><apollo-client><apollo-cache-inmemory>,0,0,0,2020-02-11 03:30:59
60232484,1,60232941,,3,681,"<p>I understand that GitHub's GraphQL-based v4 API is much more efficient than the v3 API.</p>&#xA;&#xA;<p>I would like to use the GraphQL API to retrieve, for a given repo:</p>&#xA;&#xA;<ol>&#xA;<li>All of the open milestones.</li>&#xA;<li>For each milestone, its title, description, all of its issues (open and closed)</li>&#xA;<li>For each issue, its title, description, status, and all messages.</li>&#xA;</ol>&#xA;&#xA;<p>Is there a straightforward way to do this?</p>&#xA;",51167,,,,2020-02-15 13:08:16,Use GitHub GraphQL to retrieve all open milestones and all issues (open and closed) for the milestone,<graphql><github-api>,1,0,0,2020-02-14 19:34:32
60256831,1,,,-2,224,<p>I'm a newbie in Shopify apps development. I want to create an app countdown timer. I follow all the steps of <code>Build a Shopify app with Node and React</code> where I learn some basic concepts like retrieve data from <code>graghql</code> (query/mutation) and discount the products. My question is what is the next step for my app to save <code>countdown timer</code> for my selected products and display on front below the <code>add to cart button</code>. Where I save my code to display on the front side. </p>&#xA;,8333984,,,,2020-02-17 11:12:52,count down timer in shopify app development,<node.js><reactjs><graphql><shopify><shopify-app>,1,5,0,2020-02-17 06:15:50
60258846,2,,60258224,0,,<p>Currently I am checking the result on my project using ternary</p>&#xA;&#xA;<p>if its an array</p>&#xA;&#xA;<pre><code>gData ? gData.greport : []&#xA;</code></pre>&#xA;&#xA;<p>if its an object</p>&#xA;&#xA;<pre><code>gData ? gData.greport : {}&#xA;</code></pre>&#xA;,5452148,,,,2020-02-17 08:55:39,"",,0,1,0,2020-02-17 08:55:39
60279166,1,63934293,,0,186,"<h2>Problem</h2>&#xA;&#xA;<p><strong><em>Problem solved see below</em></strong></p>&#xA;&#xA;<p>I would like the ID that is created with the <strong>first mutation</strong> to be used for by the &#xA;<strong>second mutation</strong>. In this the <strong>second mutation</strong> needs the ID from the <strong>first</strong> to work. </p>&#xA;&#xA;<p>example code:</p>&#xA;&#xA;<p><strong>type Order and Order_rule (back-end)</strong></p>&#xA;&#xA;<pre><code>type Order {&#xA;    order_id: ID!&#xA;    site_id: ID&#xA;    user_id: ID&#xA;    customer_name: String&#xA;    site: Site! @belongsTo&#xA;    order_rules: [Order_rule!]&#xA;}&#xA;&#xA;type Order_rule {&#xA;    order_rule_id: ID!&#xA;    order_id: ID&#xA;    photo_id: ID&#xA;    product_id: ID&#xA;    site_id: ID&#xA;    order: Order! @belongsTo&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>CreateOrder and CreateOrder_rule Mutation (back-end)</strong></p>&#xA;&#xA;<pre><code>     createOrder(&#xA;     site_id: ID!,&#xA;     user_id: ID!,&#xA;     customer_name: String!,&#xA;     ): Order @field(resolver: ""OrderMutator@create"")&#xA;&#xA;createOrder_rule(    &#xA;    order_id: ID!&#xA;    foto_id: ID&#xA;    product_id: ID&#xA;    site_id: ID&#xA;    ): Order_rule @field(resolver: ""Order_ruleMutator@create"")&#xA;</code></pre>&#xA;&#xA;<p><strong>Order and OrderRules Mutator are similar (back-end)</strong></p>&#xA;&#xA;<pre><code>    public function create($rootValue, array $args, GraphQLContext $context)&#xA;    {&#xA;        $order = new \App\Order($args);&#xA;        $order-&gt;save();&#xA;&#xA;        return $order;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p><strong>react-apollo</strong></p>&#xA;&#xA;<pre><code>mutation createOrderAndOrderRules(&#xA;  $site_id: ID!&#xA;  $user_id: ID!&#xA;  $customer_name: String!&#xA;    $order_id: ID!&#xA;    $photo_id: ID,&#xA;    $product_id: ID,&#xA;)&#xA;{createOrder(&#xA;  site_id: $site_id&#xA;  user_id: $user_id&#xA;  customer_name: $customer_name&#xA;) &#xA;{&#xA;order_id&#xA;}&#xA; createOrder_rule(&#xA;   order_id: $order_id&#xA;   photo_id: $photo_id&#xA;    product_id: $product_id&#xA;    site_id: $site_id&#xA;   ) {&#xA;    order_id&#xA;    photo_id&#xA;    product_id&#xA;    site_id&#xA;     }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So using the example to explain: I would like the order_id which is an auto-incremented primary key, &#xA;that will be generated from the <strong>createOrder</strong> mutation, to be used for the <strong>createOrder_Rule</strong> &#xA;mutation.</p>&#xA;&#xA;<p>Are there any suggested ways to make this work? I was hoping there is a way to just have multiple &#xA;mutations in one and just pass the information, but I have red in older answers it wasn't possible (yet).&#xA; And I tried to make it work, but couldn't yet find a way to do it.</p>&#xA;&#xA;<p>Any tips to make this work are really appreciated! thanks in advance! :) </p>&#xA;&#xA;<h2><strong>Problem solved:</strong></h2>&#xA;&#xA;<p>Using input and a mutator in the back-end helps solve the problem. &#xA;Not using the last mutation above anymore. Only using: &#xA;Example code:</p>&#xA;&#xA;<p><strong>Mutation Order</strong></p>&#xA;&#xA;<pre><code>   createOrder(&#xA;    input: OrderInput! @spread&#xA;    ): Order @field(resolver: ""OrderMutator@create"")&#xA;</code></pre>&#xA;&#xA;<p><strong>Types</strong></p>&#xA;&#xA;<pre><code>type Order {&#xA;    order_id: ID!&#xA;    site_id: ID&#xA;    user_id: ID&#xA;    customer_name: String&#xA;    site: Site! @belongsTo&#xA;    order_rules: [Order_rule!]&#xA;}&#xA;&#xA;type Order_rule {&#xA;    order_rule_id: ID!&#xA;    order_id: ID&#xA;    photo_id: ID&#xA;    product_id: ID&#xA;    site_id: ID&#xA;    order: Order! @belongsTo&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Input types</strong></p>&#xA;&#xA;<pre><code>input OrderInput {&#xA;    order_id: ID!&#xA;    site_id: ID&#xA;    user_id: ID&#xA;    customer_name: String&#xA;    order_rules: [InputOrder_rule]&#xA;}&#xA;&#xA;input InputOrder_rule {&#xA;    photo_id: ID&#xA;    product_id: ID&#xA;    site_id: ID&#xA;    order_id: ID&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Mutator Order <em>(removed Order_ruleMutator)</em></strong></p>&#xA;&#xA;<p>Save Order, Add the Order_rule fields to Order and save Order_rule.</p>&#xA;&#xA;<pre><code>use App\Order;&#xA;use App\Order_rule;&#xA;&#xA;class OrderMutator&#xA;{&#xA;    public function create($rootValue, array $args, GraphQLContext $context)&#xA;    {&#xA;&#xA;        $order = new \App\Order($args);&#xA;        $order-&gt;save();&#xA;&#xA;        foreach($args['order_rules'] as $orderRules)&#xA;        {&#xA;            $data_array = &#xA;            array(&#xA;            'order_id' =&gt; $order-&gt;id,&#xA;            'site_id' =&gt; $orderRules['site_id'],&#xA;            'photo_id' =&gt; $orderRules['photo_id'],&#xA;            'product_id' =&gt; $orderRules['product_id'],&#xA;            );&#xA;&#xA;            $orderRule = new \App\Order_rule($data_array);&#xA;            $orderRule-&gt;save();            &#xA;&#xA;        }&#xA;        return $order;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This made it work for me, but any additional tips are always welcome!</p>&#xA;",12438950,,12438950,2020-02-20 09:02:02,2020-09-17 08:36:52,Multiple mutation: how to have first mutation pass ID to second mutation,<variables><graphql><parameter-passing><react-apollo><graphql-mutation>,1,0,0,2020-02-18 10:50:43
60281942,1,,,3,427,"<p>I am using the GitHub graphql for getting the sponsor information of a user. While I am able to get the sponsors for a particular user, I am unable to get the sponsorship-tier information for the sponsors. The graphql query that I have written is as follows: </p>&#xA;&#xA;<pre><code>{&#xA;  user(login: &lt;&lt;loginID&gt;&gt;) {&#xA;    name&#xA;    sponsorshipsAsMaintainer(first: 1) {&#xA;      totalCount&#xA;      nodes {&#xA;        createdAt&#xA;        privacyLevel&#xA;        tier {&#xA;          createdAt&#xA;          name&#xA;          description&#xA;        }&#xA;        sponsor {&#xA;          login&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The results i get for a user are as follows. Ideally, in the query I was hoping to get the tier information but the result returns a <code>null</code> for the <code>tier</code> field. </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""user"": {&#xA;      ""name"": ""XXX"",&#xA;      ""sponsorshipsAsMaintainer"": {&#xA;        ""totalCount"": 11,&#xA;        ""nodes"": [&#xA;          {&#xA;            ""createdAt"": ""2020-02-16T10:39:14Z"",&#xA;            ""privacyLevel"": ""PUBLIC"",&#xA;            ""tier"": null,&#xA;            ""sponsor"": {&#xA;              ""login"": ""XXX""&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any help or information to get the tier information for a sponsor would be appreciated. Thank you very much.</p>&#xA;",5273189,,5273189,2020-02-18 13:42:29,2020-12-13 05:17:44,GitHub Graphql : Getting sponsor tier information for the sponsors of a user,<github><graphql><github-api>,2,1,0,2020-02-18 13:25:13
60296570,2,,60296379,0,,"<p>You can use aliases to query to the same field multiple times:</p>&#xA;&#xA;<pre><code>query users($id1: String!, $id2: String!) {&#xA;  user1: getUser(id: $id1) {&#xA;    ...UserFragment&#xA;  }&#xA;  user2: getUser(id: $id1) {&#xA;    ...UserFragment&#xA;  }&#xA;}&#xA;&#xA;fragment UserFragment on User {&#xA;  id&#xA;  name&#xA;  dob&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>There are no control structures in GraphQL, so there's no way to loop through a value that is a list. If your list of IDs is of variable length, then you'll have to construct a query similar to the above programmatically, dynamically generating both the variable definitions and the aliased fields.</p>&#xA;",6024220,,,,2020-02-19 09:09:37,"",,0,0,0,2020-02-19 09:09:37
60338239,1,,,4,1660,"<p>I'm using the Shopify Storefront API and Accentuate to try to get my hands on a specific variant, but it won't work for me.</p>&#xA;&#xA;<p><strong>THE SHORT VERSION:</strong> When I select a variant on the website, I get the url: <em>(... url ...)?variant=31696763027492</em>. How do I get my hands on these numbers after the = for the variant in GraphQL? It does not match the ID.</p>&#xA;&#xA;<p><strong>THE LONG VERSION...</strong></p>&#xA;&#xA;<p>In a product variant, I reference to a variant of another product (with Accentuate). What I need to get out is the variant that I am referencing to.</p>&#xA;&#xA;<p>When I pull out the variant that is being referenced to in the product (as metafield, with GraphQL), I get this:</p>&#xA;&#xA;<pre><code>{&#xA;""key"": ""products_in_package"",&#xA;""value"": ""pakke-produkt-gavepose:31696763027492""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My problem is the numbers after : in the value. I've found that these are the number that come after the URL of the product when selecting the variant on the ""actual"" Shopify website ((... url ...)?variant=31696763027492), but I can't see how I can use them, since I can't find these numbers on the actual variant through GraphQL.</p>&#xA;&#xA;<p>It does not match the 'id' or anything else I could find on the variant. Neither can I include the numbers if I try to get productByHandle.</p>&#xA;&#xA;<p>So, does anyone have any ideas on how I can I use it to get the actual product variant through GraphQL? Or ideas on what else I can do to connect a specific product variant to another product variant?</p>&#xA;",12938436,,,,2021-10-29 08:16:13,Shopify Storefront API: Getting referenced variant with GraphQL,<graphql><shopify><variant><storefront>,3,0,0,2020-02-21 11:59:08
60339337,2,,60338239,2,,"<p>The variant ID and GraphQL variant ID is closely related.</p>&#xA;&#xA;<ul>&#xA;<li>Variant id - <code>31646396055604</code> </li>&#xA;<li>GraphQL Variant id - <code>gid://shopify/ProductVariant/31646396055604</code></li>&#xA;</ul>&#xA;&#xA;<p>The GraphQL ID is the same as the Variant id but you must add the string <code>gid://shopify/ProductVariant/</code> before it.</p>&#xA;&#xA;<p>So your GraphQL request will become like so:</p>&#xA;&#xA;<pre><code>{&#xA;  productVariant(id:""gid://shopify/ProductVariant/31646396055604""){&#xA;    title&#xA;    product{&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2329464,,,,2020-02-21 13:10:15,"",,0,0,0,2020-02-21 13:10:15
60354532,1,,,1,114,"<p>A similar question was previously <a href=""https://stackoverflow.com/questions/46498143/github-graphql-filter-issues-by-milestone"">asked</a> but doesn't use <code>IssueFilters</code> which is what I want to use in this question.</p>&#xA;&#xA;<p>Using GitHub's GraphQL Explorer, I am able to get issues of a repository using this query:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""neovim"", name: ""neovim"") {&#xA;    hasIssuesEnabled&#xA;    issues(first: 20, orderBy: {field: CREATED_AT, direction: DESC}, filterBy: {milestone:""*""}) {&#xA;      nodes {&#xA;        ... on Issue {&#xA;          number&#xA;          title&#xA;          milestone {&#xA;            number&#xA;      id&#xA;      url&#xA;      title&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The <code>milestone</code> is an <code>issueFilter</code> which, according to the documentation, allows you to:</p>&#xA;&#xA;<blockquote>&#xA;  <p>List issues by given milestone argument. If a string representation of an integer is passed, it should refer to a milestone by its number field. Pass in null for issues with no milestone, and * for issues that are assigned to any milestone.</p>&#xA;</blockquote>&#xA;&#xA;<p>However, using a <code>filter</code> that is not a <code>*</code> but let's say <code>filterBy: {milestone:""9""}</code> (9 being <a href=""https://github.com/neovim/neovim/milestone/9"" rel=""nofollow noreferrer"">a valid milestone number</a> for the repository I am using), the query returns no nodes:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""hasIssuesEnabled"": true,&#xA;      ""issues"": {&#xA;        ""nodes"": []&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I do not understand why this does not work from the documentation I read.  Am I missing something regarding what means ""it should refer to a milestone by its number field""?</p>&#xA;",1673772,,,,2020-02-22 16:58:50,Obtain GitHub issues in a specific milestone using GraphQL and IssueFilters,<graphql><github-api>,0,0,0,2020-02-22 16:58:50
60358242,1,60358337,,0,1169,"<p>I'm using <code>react-select</code> as a 'multi-select' in a react-app to set multiple music genres. This results in an array of objects as the value for that input. I'm using AWS Amplify / DynamoDB. </p>&#xA;&#xA;<p>I'm not sure if this is an issue with my schema.graphql (below), how I'm handling / mishandling the data, or just my general coding deficits, but the data gets sent like this: </p>&#xA;&#xA;<pre><code>[{label='Afrobeat', value='Afrobeat'}, {label='Bikutsi', value='Bikutsi'}, {label='Benga', value='Benga'}]&#xA;</code></pre>&#xA;&#xA;<p>And returns like this (single quotes stripped), double quotes added around each node):</p>&#xA;&#xA;<pre><code>[""{label=Afrobeat, value=Afrobeat}"", ""{label=Bikutsi, value=Bikutsi}"", ""{label=Benga, value=Benga}""]&#xA;</code></pre>&#xA;&#xA;<p><code>react-select</code> can't process the data like that but I can't imagine I would have to do some tricky client-side handling to make it work. Any help would be graciously appreciated.</p>&#xA;&#xA;<p>My <strong>schema.graphql</strong> for this Song type is:</p>&#xA;&#xA;<pre><code>type Song @model {&#xA;  album: Album @connection(name: ""AlbumSongs"")&#xA;  composer: String&#xA;  description: String&#xA;  duration: String&#xA;  genre: [String!]! // is this the correct value for an array?&#xA;  id: ID!&#xA;  instruments: String&#xA;  tags: [String!]!&#xA;  title: String!&#xA;}&#xA;</code></pre>&#xA;",1704772,,,,2020-02-23 01:29:35,AWS Amplify / Dynamo - array of objects coming back as array of strings,<reactjs><graphql><aws-amplify><react-select>,1,0,0,2020-02-23 00:54:16
60358337,2,,60358242,1,,<p>Need to have another type <code>GenreOptions</code> to make it return as an array of objects instead of array of strings.</p>&#xA;&#xA;<p>Something like:</p>&#xA;&#xA;<pre><code>type GenreOptions {&#xA;  label: String!&#xA;  value: String! // also another option is to have an enum type&#xA;}&#xA;&#xA;type Song @model {&#xA;  genre: [GenreOptions!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then the query would look like:</p>&#xA;&#xA;<pre><code>Song {&#xA;  genre {&#xA;    label&#xA;    value&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,8012206,,8012206,2020-02-23 01:29:35,2020-02-23 01:29:35,"",,0,5,0,2020-02-23 01:13:12
60360547,2,,59980677,0,,"<p>Have you tried checking for examples on the TypeGraphQL repository?</p>&#xA;&#xA;<p><a href=""https://github.com/MichalLytek/type-graphql/tree/master/examples/apollo-client"" rel=""nofollow noreferrer"">https://github.com/MichalLytek/type-graphql/tree/master/examples/apollo-client</a></p>&#xA;",5472617,,,,2020-02-23 08:49:17,"",,0,0,0,2020-02-23 08:49:17
60365383,1,,,-2,61,"<p>this is my simple query:</p>&#xA;&#xA;<pre><code>{&#xA;  metas(limit: 1){&#xA;          id&#xA;        }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>I monitored the mysql server queries and I saw it converted to some useless queries :</p>&#xA;&#xA;<blockquote>&#xA;  <p>select <code>metas</code>.* from <code>metas</code> order by <code>created_at</code> asc, <code>user</code> desc&#xA;  limit 1</p>&#xA;  &#xA;  <p>select distinct <code>articles</code>.*,&#xA;  <code>articles_metas__metas_articles</code>.<code>meta_id</code> as <code>_pivot_meta_id</code>,&#xA;  <code>articles_metas__metas_articles</code>.<code>article_id</code> as <code>_pivot_article_id</code>&#xA;  from <code>articles</code> inner join <code>articles_metas__metas_articles</code> on&#xA;  <code>articles_metas__metas_articles</code>.<code>article_id</code> = <code>articles</code>.<code>id</code> where&#xA;  <code>articles_metas__metas_articles</code>.<code>meta_id</code> in (25)</p>&#xA;</blockquote>&#xA;&#xA;<p>and ....</p>&#xA;&#xA;<p>each article has some meta .  but I want only meta id!!!!!</p>&#xA;",12926656,,10952140,2020-02-23 20:09:40,2020-03-12 15:43:48,multiple useless mysql queri by graphql in strapi,<graphql><strapi>,1,1,0,2020-02-23 18:21:34
60375116,2,,58358115,0,,"<p>I found out the logic to get the protected branch</p>&#xA;&#xA;<pre><code>{&#xA;    viewer {&#xA;        repository(owner: ""parithiban"", name: ""git-slack-bot"") {&#xA;            branchProtectionRules(first: 5) {&#xA;                nodes {&#xA;                    pattern&#xA;                    requiredApprovingReviewCount&#xA;                    matchingRefs(first: 100) {&#xA;                        nodes {&#xA;                            name&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",3529241,,,,2020-02-24 11:35:36,"",,0,0,0,2020-02-24 11:35:36
60376158,2,,60338239,2,,"<p>The problem is (or was) that those numbers are <em>not</em> what you get when you get the id from the product through GraphQL. You get a much longer id, like ""Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC8zMTY5NDA3MjQxNDI0NA=="".</p>&#xA;&#xA;<p>However, I figures out that using the btoa() JavaScript function on the id you mention (gid://shopify/ProductVariant/31646396055604), I got the long id that I get from the product itself. So problem solved!</p>&#xA;",12938436,,,,2020-02-24 12:39:52,"",,0,0,0,2020-02-24 12:39:52
60376272,1,,,1,1373,"<p>I'm trying to get metafields from pages and collections through the Shopify Storefront API and GraphQL.</p>&#xA;&#xA;<p>However, it seems like it's not possible. Looking through the 'queryable objects'-pages, 'metafields' isn't listed as a field on pages or collections. As seen in this screenshot, GraphiQL also says that it doesn't exist. I've copied the code straight from a part where I get metafields form products.</p>&#xA;&#xA;<p>Can this really be? It seems so odd to me that it should be impossible to get those metafields, but I just can't find a way.</p>&#xA;&#xA;<p>All I want is to be able to get some different portions of text for the website, from a specific collection or page.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/YTuqG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YTuqG.png"" alt=""Image of problem getting metafields from collection in Shopify Storefront API""></a></p>&#xA;",12938436,,,,2020-02-24 15:36:13,Shopify Storefront API: Getting metafields from page or collection,<collections><graphql><shopify><graphiql>,1,0,0,2020-02-24 12:47:34
60376821,1,60397787,,2,2273,"<p>I'm trying to use GraphQL to get all tags from a repository and later (or if possible, in the same command) get some details of the release of each tag.</p>&#xA;&#xA;<p>I'm trying to do this approach <code>git/refs/tags</code> -> <code>releases/tags/[tag_name]</code> because listing all releases by <code>releases</code> is not giving me the whole list of releases.</p>&#xA;&#xA;<p>In v3, this is the equivalent to this:</p>&#xA;&#xA;<p><code>""https://api.github.com/repos/"" + repo + ""/git/refs/tags""</code><br>&#xA;<code>""https://api.github.com/repos/"" + repo + ""/releases/tags/"" + tag</code></p>&#xA;&#xA;<p>In the <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">GraphQL Explorer</a>, I was able to construct this query (replace with your own username and repo):</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: "":UserName"", name: "":Repository"") {&#xA;    refs(refPrefix: ""refs/tags/"", last: 100) {&#xA;      edges {&#xA;        node {&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But it's giving this result:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""refs"": {&#xA;        ""edges"": [&#xA;          {&#xA;            ""node"": {&#xA;              ""name"": ""2.1""&#xA;            }&#xA;          },&#xA;          {&#xA;            ""node"": {&#xA;              ""name"": ""2.2""&#xA;            }&#xA;          },&#xA;          {&#xA;            ""node"": {&#xA;              ""name"": ""2.3""&#xA;            }&#xA;          },&#xA; [...]&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>I somehow need to fit this into the query too (just an example, I need other fields too), taking the <code>name</code> and using as parameter:</p>&#xA;&#xA;<pre><code>repository(owner: "":UserName"", name: "":Repository"") {&#xA;  release(tagName: name) {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Trying like this:</p>&#xA;&#xA;<pre><code>query ListTags {&#xA;  repository(owner: "":Username"", name: "":Repository"") {&#xA;    refs(refPrefix: ""refs/tags/"", last: 100) {&#xA;      edges {&#xA;        node {&#xA;          name&#xA;          repository {&#xA;            release(tagName: Ref.name) {&#xA;              name&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I'm unable to use <code>Ref.name</code> as the parameter to <code>release</code>.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>When using the query in my project, the object returned has all the JSON nodes, not actually simply the <code>name</code> field.</p>&#xA;&#xA;<pre><code>var httpClient = new HttpClient&#xA;{&#xA;    BaseAddress = new Uri(""https://api.github.com/graphql"")&#xA;};&#xA;&#xA;httpClient.DefaultRequestHeaders.Add(""User-Agent"", ""ReleaseSearcher"");&#xA;&#xA;var basicValue = Convert.ToBase64String(Encoding.UTF8.GetBytes($""username:key""));&#xA;httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(""Basic"", basicValue);&#xA;&#xA;var queryObject = new&#xA;{&#xA;    query = @""query {&#xA;        repository(owner: """":Username"""", name: """":repo"""") {&#xA;            refs(refPrefix: """"refs/tags/"""", last: 100) {&#xA;                edges {&#xA;                    node {&#xA;                        name&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }"",&#xA;    variables = new { }&#xA;};&#xA;&#xA;var request = new HttpRequestMessage&#xA;{&#xA;    Method = HttpMethod.Post,&#xA;    Content = new StringContent(JsonConvert.SerializeObject(queryObject), Encoding.UTF8, ""application/json"")&#xA;};&#xA;&#xA;dynamic responseObj;&#xA;&#xA;using (var response = await httpClient.SendAsync(request))&#xA;{&#xA;    response.EnsureSuccessStatusCode();&#xA;&#xA;    var responseString = await response.Content.ReadAsStringAsync();&#xA;    responseObj = JsonConvert.DeserializeObject&lt;dynamic&gt;(responseString);&#xA;}&#xA;&#xA;Console.WriteLine(responseObj.data.viewer.login);&#xA;Console.ReadLine();&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>How can I search for individual releases using the tag name?</strong></p>&#xA;&#xA;<p><strong>How can I properly read the result data?</strong></p>&#xA;",1735672,,1735672,2020-02-25 15:22:41,2020-02-25 15:22:41,Using Github's GraphQL to list all tags and search for releases,<c#><git><graphql><github-api>,1,0,0,2020-02-24 13:20:17
60379143,2,,60376272,0,,"<p>The Storefront API supports metafields for the Product and ProductVariant objects only.</p>&#xA;&#xA;<p>You can refer their documentation here: <a href=""https://shopify.dev/docs/storefront-api/reference/object/metafield"" rel=""nofollow noreferrer"">https://shopify.dev/docs/storefront-api/reference/object/metafield</a></p>&#xA;&#xA;<hr>&#xA;&#xA;<p>A better approach is to create a custom collection layout where you output the metafields with liquid.</p>&#xA;&#xA;<p>Example:</p>&#xA;&#xA;<p>You create a new collection layout:<code>collection.meta.liquid</code></p>&#xA;&#xA;<p>With the following code in it:</p>&#xA;&#xA;<pre><code>{%- layout none -%}&#xA;{{- collection.metafields.namespace | json -}}&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p><code>collection.liquid</code></p>&#xA;&#xA;<p>Inside the collection ( or you can use a different file, but you need to know the collection url in order to add the <code>view=</code> argument at the end ):</p>&#xA;&#xA;<pre><code>&lt;script type=""text/javascript""&gt;     &#xA;  fetch('{{collection.url}}?view=meta')&#xA;    .then(res =&gt; res.json())&#xA;    .then(res =&gt; console.log(res))&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;&#xA;<p>And you will get the metafields with that specific namespace.</p>&#xA;",2329464,,2329464,2020-02-24 15:36:13,2020-02-24 15:36:13,"",,0,0,0,2020-02-24 15:30:22
60387929,1,,,0,96,"<p>I am trying to convert the 'Data' structure element from apollo hook call to an array I can pass to render in React. Here is my hook call using the '@apollo/react-hooks' library. <code>const { data, loading, error } = useQuery(findTokenQuery)&#xA;</code><br>&#xA;How can I convert the recieved Data structure element... {""id"":4,""element"":""TITANIUM"",""symbol"":""TI""} to an array like [{id: 4, element:""TITANIUM"",symbol:""TI""] ?</p>&#xA;",7676259,,7676259,2020-02-25 06:05:57,2020-02-25 06:05:57,Convert Data object from apollo hook call to Javascript Array,<javascript><json><apollo><mobx>,1,0,0,2020-02-25 05:17:41
60397787,2,,60376821,2,,"<p>I was able to get what I want with this:</p>&#xA;&#xA;<pre><code>query {&#xA;    rateLimit {&#xA;        cost&#xA;        remaining&#xA;     }&#xA;     repository(owner: ""NickeManarin"", name: ""ScreenToGif"") {&#xA;         refs(refPrefix: ""refs/tags/"", last: 100) {&#xA;             nodes {&#xA;                 repository {&#xA;                     releases(last: 100, orderBy: { field: CREATED_AT, direction: DESC}) {&#xA;                         nodes {&#xA;                             name&#xA;                             createdAt&#xA;                             url&#xA;                             releaseAssets(last: 2) {&#xA;                                 nodes {&#xA;                                     name&#xA;                                     downloadCount&#xA;                                     downloadUrl&#xA;                                 }&#xA;                             }&#xA;                         }&#xA;                     }&#xA;                 }&#xA;             }&#xA;         }&#xA;     }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>I'm just not sure if it's the best way of doing it.</p>&#xA;",1735672,,,,2020-02-25 15:14:22,"",,0,1,0,2020-02-25 15:14:22
60407552,2,,60392479,0,,"<p><code>data.alImageSharp.edges</code> is an array, so you can't do <code>data.allImageSharp.edges.node</code>. Instead, what you need to do is grab the item you want from the <code>edges</code> array and then do <code>node.fixed</code> on it. Something like the following would work: <code>data.allImageSharp.edges[0].node.fixed</code></p>&#xA;&#xA;<p>credit – goto1</p>&#xA;",9260109,,,,2020-02-26 05:49:45,"",,0,0,0,2020-02-26 05:49:45
60409011,1,,,0,139,"<p>I have started working on Shopify app. In ResourcePicker for <strong>Product</strong> some data is not showing which I want to see like <strong>metaFields</strong>. How I can see those fields. If anyone helps me out.</p>&#xA;&#xA;<pre><code>&lt;ResourcePicker&#xA;&#xA;      resourceType=""Product""&#xA;      showVariants={false}&#xA;      open={this.state.open}&#xA;      onSelection={(resources) =&gt; {&#xA;          resources.selection.map((product) =&gt; {&#xA;           console.log(product)&#xA;           product.metafields&#xA;          })&#xA;      }}&#xA;      onCancel={() =&gt; this.setState({ open: false })}&#xA;                /&gt;&#xA;</code></pre>&#xA;&#xA;<p>In <code>console.log</code> there is no metaField. Although if I run a query on <code>Shopify GraphiQL App</code>, it shows the metaFields exist there.</p>&#xA;",8333984,,,,2020-02-26 07:41:58,Customize ResourcePicker data in shopify app development,<graphql><shopify><shopify-app>,0,2,0,2020-02-26 07:41:58
60418487,2,,60277377,0,,"<p>I could reproduce this behavior on <em>gatsby-source-kontent</em> <code>v4.3.0</code> and it seems to me like a bug in the source plugin.</p>&#xA;&#xA;<p>According to the <a href=""https://github.com/Kentico/gatsby-source-kontent/blob/aa4d36b9b8d6cb95bc4fe8753abbea350c6d3318/src/normalize.js#L99"" rel=""nofollow noreferrer"">source code</a>, it really should preserve the order from the CMS - it's in the correct order in the Delivery API response as well. Could you please file a bug in this repository so I can investigate it further?</p>&#xA;&#xA;<p><strong>EDIT: This behavior was casued by outdated node version. Works fine on v12.</strong></p>&#xA;",1692651,,1692651,2020-03-09 09:58:46,2020-03-09 09:58:46,"",,0,0,0,2020-02-26 16:33:25
60419837,1,60676933,,2,436,"<p>Here is a mock of the current graphQL I'm working with.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const aDynamicListOfFieldsComingFromElsewhere = 'foo bar anotherField etc'&#xA;&#xA;const query = gql`{&#xA;  QueryResult: TableName {&#xA;    Data {&#xA;      id&#xA;      name&#xA;      ${aDynamicListOfFieldsComingFromElsewhere}&#xA;    }&#xA;  }&#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>This... functionally speaking, works. But is regarded as a bad approach for multiple reasons, one of which is the linting support provided by eslint-plugin-graphql.</p>&#xA;&#xA;<p>Eslint gives me a hint by giving me the following error:</p>&#xA;&#xA;<pre><code>Invalid interpolation - fragment interpolation must occur outside of the brackets  graphql/template-strings&#xA;</code></pre>&#xA;&#xA;<p>I managed to find some good examples with variables, but none that provided a way to include an externally defined variable.</p>&#xA;&#xA;<p>Thanks in advance for your help!</p>&#xA;",9706597,,,,2020-03-13 20:33:44,How to move fields list fragment interpolation outside of the brackets,<graphql><eslint><apollo-client><graphql-js>,1,0,0,2020-02-26 17:59:09
60438830,2,,60438602,1,,"<p>After some amount of digging into the <code>graphql</code> package. It is looking like the function <code>resolveFieldValueOrError</code> does the resolution. It can be found under the <code>./execution</code> section. Looks like I will have to fork the graphQl project and make the modifications that I wish.</p>&#xA;&#xA;<p>Another, more practical direction, was to trace the Apollo server creation's tracing parameter. After some quick digging, found that it is using the <code>apollo-engine-reporting</code> package.</p>&#xA;",2828599,,2828599,2020-02-27 18:15:48,2020-02-27 18:15:48,"",,0,1,0,2020-02-27 17:32:30
60439524,2,,60438602,0,,"<p>There is already an extension for tracing requests that's built into ApolloServer. The source code can be found <a href=""https://github.com/apollographql/apollo-server/blob/master/packages/apollo-tracing/src/index.ts"" rel=""nofollow noreferrer"">here</a>. It sounds like you could just fork that.</p>&#xA;",6024220,,,,2020-02-27 18:23:46,"",,0,0,0,2020-02-27 18:23:46
60461310,2,,60442375,0,,"<p>Thanks to some very needed direction from @xadm, I figured out the structure of the tag! For anyone who comes across this in the future:</p>&#xA;&#xA;<pre><code>mutation createOneProposal($input: ProposalCreateInput!){&#xA;    createOneProposal(data:$input){&#xA;        created_at&#xA;    name&#xA;    email&#xA;    proposal_id&#xA;    type{&#xA;      cost&#xA;      description&#xA;      model&#xA;      name&#xA;      type_id&#xA;      services{&#xA;        service&#xA;        cost&#xA;        service_id&#xA;      }&#xA;    }&#xA;      }&#xA;    }&#xA;&#xA;</code></pre>&#xA;",12771835,,,,2020-02-29 01:51:52,"",,0,0,0,2020-02-29 01:51:52
60480822,1,60508382,,1,865,"<p>I am using Graphql on the Shopify API and also needing to use variables in my query. <a href=""https://stackoverflow.com/questions/50382830/graphqlclientdynamicqueryerror-expected-definition-to-be-assigned-to-a-stati"">I found this post, but it didn't work because I am using those query variables.</a></p>&#xA;&#xA;<p>This is the exact error I'm getting:</p>&#xA;&#xA;<pre><code>SyntaxError (/home/fc-gui/app/controllers/concerns/product_graphql.rb:26: dynamic constant assignment&#xA;FIRST_PRODUCTS = CLIENT.parse &lt;&lt;-'GRAPHQL'&#xA;</code></pre>&#xA;&#xA;<p>And then here is the method where I'm trying to run my query</p>&#xA;&#xA;<pre><code>  def run_first_query&#xA;    FIRST_PRODUCTS = CLIENT.parse &lt;&lt;-'GRAPHQL'&#xA;    query($first: Int){&#xA;      products(first: $first) {&#xA;        pageInfo {&#xA;          hasNextPage&#xA;        }&#xA;        edges {&#xA;          cursor&#xA;          node {&#xA;            id&#xA;            title&#xA;            featuredImage {&#xA;              originalSrc&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;    GRAPHQL&#xA;    first = { ""first"": number_of_products_to_return}&#xA;    @query_result = CLIENT.query(FIRST_PRODUCTS, variables: first)&#xA;    get_last_cursor&#xA;  end&#xA;</code></pre>&#xA;&#xA;<p>I've tried creating the client similar to the aforementioned post, like these two options, but no luck:</p>&#xA;&#xA;<pre><code>CLIENT = ShopifyAPI::GraphQL.new&#xA;##&#xA;def graphql_client&#xA;  ShopifyAPI::GraphQL.new&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>Anyone able to run graphql queries with variables, in Ruby and NOT get this error?</p>&#xA;",4386626,,,,2020-05-20 18:21:09,Dynamic constant assignment when using Graphql for Shopify API,<ruby-on-rails><ruby><graphql><shopify>,2,1,0,2020-03-01 23:39:44
60487472,1,60489444,,0,99,"<p>For example, I have the following queries: <code>testA</code> and <code>testB</code>.</p>&#xA;&#xA;<p>I would like to get the following response:</p>&#xA;&#xA;<pre><code>{&#xA;  data: {&#xA;    test: {&#xA;      a: {&#xA;        id: 1&#xA;      },&#xA;      b: {&#xA;        id: 2&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can I achieve this? Now my query looks like:</p>&#xA;&#xA;<pre><code>query {&#xA;  testA {&#xA;    id&#xA;  }&#xA;&#xA;  testB {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I know that I can use aliases like this:</p>&#xA;&#xA;<pre><code>query {&#xA;  a: testA {&#xA;    id&#xA;  }&#xA;&#xA;  b: testB {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I don't know how to <em>wrap it into a block</em>.</p>&#xA;",4725496,,,,2020-03-02 13:02:43,GraphQL how to wrap a query,<graphql>,1,4,0,2020-03-02 10:59:32
60496743,1,,,7,466,"<p>I'm using Woo GraphQL and I'm wondering how I should go about getting the color of product attributes. See below for a screenshot of the product attribute in WP Admin:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/BF8Bv.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/BF8Bv.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>I've tried querying for the top-level <code>pa-</code> attribute and I've tried querying in <code>terms</code>/<code>termNode</code> with no luck.</p>&#xA;&#xA;<p>Am I missing something? How do I get this data?</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Update: So TIL, that colors in products attributes were actually provided via ""Variation Swatches for WooCommerce"". Variation Swatches takes this info and saves it in term meta.</p>&#xA;&#xA;<p>So now my question is a bit different: How do I pull term meta?</p>&#xA;",5776910,,5776910,2020-03-05 16:40:54,2021-11-03 22:43:55,How to get term meta WPGraphQL/WooGraphQL?,<wordpress><wp-graphql>,2,1,0,2020-03-02 21:13:02
60497647,1,,,1,1082,"<p>I am trying to get <a href=""https://www.homeaway.co.uk/p10570866?adultsCount=2&amp;arrival=2020-03-13&amp;departure=2020-03-18"" rel=""nofollow noreferrer"">Pricing and Availability</a> information from <a href=""https://www.homeaway.co.uk/"" rel=""nofollow noreferrer"">Homeaway.com</a> for a property. They have public API to fetch this information. If we inspect this <a href=""https://www.homeaway.co.uk/p10570866?adultsCount=2&amp;arrival=2020-03-13&amp;departure=2020-03-18"" rel=""nofollow noreferrer"">page</a> correctly we will get the API. While I am making POST request through POSTMAN, it is giving data in the proper format but the same code while I am pasting from Postman to Jupyter Notebook getting 403 error. I tried with both cURL and Python 3.</p>&#xA;&#xA;<p>I think there is an issue with proper formatting for the payload item. </p>&#xA;&#xA;<p>This is the code I am getting from POSTMAN for Python Request Module - </p>&#xA;&#xA;<pre><code>import requests&#xA;&#xA;url = ""https://www.homeaway.co.uk/pdp/graphql""&#xA;&#xA;payload = ""{\""query\"":\""\\n    query priceDetails($createTravelerCheckoutRequest: CreateTravelerCheckoutRequest) {\\n        priceDetails(createTravelerCheckoutRequest: $createTravelerCheckoutRequest) {\\n            notes {\\n                description\\n            }\\n            totals {\\n                title\\n                amount\\n                tooltip\\n                subItems {\\n                    title\\n                }\\n            }\\n            checkoutUrl\\n            instantBooking\\n            dueNow {\\n                title\\n                amount\\n                tooltips {\\n                    title\\n                    amount\\n                    tooltip\\n                }\\n            }\\n            payments {\\n                title\\n                amount\\n                paidText\\n                infoText\\n                status\\n                viewUrl\\n            }\\n            averageNightlies {\\n                perNightCost {\\n                    currency\\n                    amount\\n                    localized\\n                }\\n                type\\n            }\\n            edapEventJson\\n            edapQuoteSuccess\\n            edapPriceQuotePresented\\n            lineItems {\\n                title\\n                amount\\n                mixedCurrencyDisclaimer\\n                type\\n                tooltip\\n                subItems {\\n                    title\\n                    amount\\n                    type\\n                    tooltip\\n                }\\n            }\\n        }\\n    }\\n\"",\""variables\"":{\""createTravelerCheckoutRequest\"":{\""unit\"":\""/units/0001/06a12c46-a89b-4620-86f2-7007e2955d90\"",\""arrivalDate\"":\""2020-03-13\"",\""departureDate\"":\""2020-03-18\"",\""children\"":0,\""adults\"":2,\""pets\"":0,\""listingRef\"":\""611.10570866.5597723\"",\""currency\"":\""USD\""}},\""operation\"":\""graphql_get_pricing_quote\""}""&#xA;headers = {&#xA;    'origin': ""https://www.homeaway.co.uk"",&#xA;    'x-homeaway-site': ""homeaway_uk"",&#xA;    'user-agent': ""Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Safari/537.36"",&#xA;    'x-csrf-jwt-pdp': ""eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbiI6IjU5N2QyZGJmYjg2MmFlZjM2Y2IzMTMxMGNkZDZlMTlkZTE0MTYwOWViYTEzYWQ1MWYzMjU2NTU5MzVlYWE4ZjRjMTZhYmM2YjY1YmVlOWQ3NzM2MDE2Njg0YTc3OGE2OTg1Nzg4M2IzYWI0YTUzZmU0N2IyNWU1YjczN2E5MzRkMTMxOWE4MjJjYTlhMzg2MTM2ZGJlODQ4N2Y2YjM3NTU2ODcxYjIwMWM3ZDYxYmNjYWFhMzM4NjYwNWMwMmU1NDJjNmQxN2NhN2FhN2VjYjNjMTI4OTcxNzI3OTEyZjg2YmQ1YzQzNTRjZTYxYTc2YTE5NzMwNzMyNGQ4NzRhYjNhODRkOWI1NDc4ZmU1ODI1NzU4YTU0MjM5ZTZmMjQzYyIsImlhdCI6MTU4MzE4MTM0MywiZXhwIjoxNTgzNzg2MTQzfQ.owkOAY8AtuQM6ghYro4OdiVSEy7uTT-UXa0vXbIoOcM"",&#xA;    'sec-fetch-dest': ""empty"",&#xA;    'x-homeaway-displaylocale': ""en_GB"",&#xA;    'accept': ""*/*"",&#xA;    'content-type': ""application/json"",&#xA;    'cache-control': ""no-cache"",&#xA;    'postman-token': ""a0782281-d7ef-96db-8c54-08f250e8ac86""&#xA;    }&#xA;&#xA;response = requests.request(""POST"", url, data=payload, headers=headers)&#xA;&#xA;print(response.text)&#xA;</code></pre>&#xA;&#xA;<p>Payload Item for the Request - </p>&#xA;&#xA;<pre><code>{""query"":""query priceDetails($createTravelerCheckoutRequest: CreateTravelerCheckoutRequest) {priceDetails(createTravelerCheckoutRequest: $createTravelerCheckoutRequest) {notes {description}totals{title amount tooltip subItems {title}}checkoutUrl instantBooking dueNow {title amount tooltips {title amount tooltip}} payments {title amount paidText infoText status               viewUrl}averageNightlies {perNightCost {currency amount localized } type}edapEventJson  edapQuoteSuccess edapPriceQuotePresented  lineItems {     title amount mixedCurrencyDisclaimer type tooltip subItems { title amount type tooltip }}}}"",&#xA;""variables"":{""createTravelerCheckoutRequest"":&#xA;               {""unit"":""/units/0001/de2ef943-c782-4179-a157-060ed12273c4"",""arrivalDate"":""2020-03-13"",""departureDate"":""2020-03-18"",""children"":0,""adults"":2,""pets"":0,""listingRef"":""611.10579173.5606075"",""currency"":""EUR""}},&#xA;""operation"":""graphql_get_pricing_quote""}&#xA;</code></pre>&#xA;&#xA;<p>Headers for the Request - </p>&#xA;&#xA;<pre><code>Origin:https://www.homeaway.co.uk&#xA;x-homeaway-site:homeaway_uk&#xA;User-Agent:Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.122 Safari/537.36&#xA;x-csrf-jwt-pdp:eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbiI6IjU5N2QyZGJmYjg2MmFlZjM2Y2IzMTMxMGNkZDZlMTlkZTE0MTYwOWViYTEzYWQ1MWYzMjU2NTU5MzVlYWE4ZjRjMTZhYmM2YjY1YmVlOWQ3NzM2MDE2Njg0YTc3OGE2OTg1Nzg4M2IzYWI0YTUzZmU0N2IyNWU1YjczN2E5MzRkMTMxOWE4MjJjYTlhMzg2MTM2ZGJlODQ4N2Y2YjM3NTU2ODcxYjIwMWM3ZDYxYmNjYWFhMzM4NjYwNWMwMmU1NDJjNmQxN2NhN2FhN2VjYjNjMTI4OTcxNzI3OTEyZjg2YmQ1YzQzNTRjZTYxYTc2YTE5NzMwNzMyNGQ4NzRhYjNhODRkOWI1NDc4ZmU1ODI1NzU4YTU0MjM5ZTZmMjQzYyIsImlhdCI6MTU4MzE4MTM0MywiZXhwIjoxNTgzNzg2MTQzfQ.owkOAY8AtuQM6ghYro4OdiVSEy7uTT-UXa0vXbIoOcM&#xA;Sec-Fetch-Dest:empty&#xA;X-HomeAway-DisplayLocale:en_GB&#xA;Accept:*/*&#xA;Content-Type:application/json&#xA;</code></pre>&#xA;&#xA;<p>Request Type - <strong>POST</strong></p>&#xA;&#xA;<p>Request URL - &lt;""<a href=""https://www.homeaway.co.uk/pdp/graphql"" rel=""nofollow noreferrer"">https://www.homeaway.co.uk/pdp/graphql</a>""></p>&#xA;&#xA;<p>Response from POSTMAN --</p>&#xA;&#xA;<pre><code>    ""data"": {&#xA;        ""priceDetails"": {&#xA;            ""notes"": [],&#xA;            ""totals"": [&#xA;                {&#xA;                    ""title"": ""Total"",&#xA;                    ""amount"": ""US$1,222.85"",&#xA;                    ""tooltip"": null,&#xA;                    ""subItems"": null&#xA;                }&#xA;            ],&#xA;            ""checkoutUrl"": ""/td/tc/a/checkout/611.10570866.5597723?unitLink=/units/0001/06a12c46-a89b-4620-86f2-7007e2955d90&amp;arrivalDate=03/13/2020&amp;departureDate=03/18/2020&amp;petIncluded=false&amp;adultsCount=2&amp;childrenCount=0&amp;skipLogin=true"",&#xA;            ""instantBooking"": true,&#xA;            ""dueNow"": [&#xA;                {&#xA;                    ""title"": ""Your payment is"",&#xA;                    ""amount"": ""US$1,222.85"",&#xA;                    ""tooltips"": null&#xA;                }&#xA;            ],&#xA;            ""payments"": null,&#xA;            ""averageNightlies"": [&#xA;                {&#xA;                    ""perNightCost"": {&#xA;                        ""currency"": ""USD"",&#xA;                        ""amount"": 244.57,&#xA;                        ""localized"": ""US$245""&#xA;                    },&#xA;                    ""type"": ""TOTAL_TRIP""&#xA;                },&#xA;                {&#xA;                    ""perNightCost"": {&#xA;                        ""currency"": ""USD"",&#xA;                        ""amount"": 244.57,&#xA;                        ""localized"": ""US$245""&#xA;                    },&#xA;                    ""type"": ""BASE_RENT""&#xA;                },&#xA;                {&#xA;                    ""perNightCost"": {&#xA;                        ""currency"": ""USD"",&#xA;                        ""amount"": 244.57,&#xA;                        ""localized"": ""US$245""&#xA;                    },&#xA;                    ""type"": ""TOTAL_RENT""&#xA;                }&#xA;            ],&#xA;            ""edapEventJson"": ""{\""eventstartdate\"":\""2020-03-13\"",\""eventenddate\"":\""2020-03-18\"",\""eventnumadults\"":\""2\"",\""eventnumchildren\"":\""0\"",\""eventcurrency\"":\""USD\"",\""unituuid\"":\""06a12c46-a89b-4620-86f2-7007e2955d90\"",\""eventpets\"":\""false\"",\""stramountrent\"":\""US$1,222.85\"",\""stramounttotal\"":\""US$1,222.85\"",\""stramountsubtotal\"":\""US$1,222.85\""}"",&#xA;            ""edapQuoteSuccess"": ""{\""displayquotetotal\"":\""1222.85\"",\""eventquoteamount\"":\""1222.85\"",\""fullorderrentalrate\"":\""1222.85\"",\""ordertax\"":\""0\"",\""rdd\"":\""0\"",\""pdp\"":\""0\"",\""servicefeeamount\"":\""0\"",\""numpartnerfees\"":\""0\"",\""partnerfeesamount\"":\""0\"",\""eventstartdate\"":\""2020-03-13\"",\""eventenddate\"":\""2020-03-18\"",\""eventnumadults\"":\""2\"",\""eventnumchildren\"":\""0\"",\""eventquotecurrency\"":\""USD\""}"",&#xA;            ""edapPriceQuotePresented"": ""{\""adult_count\"":\""2\"",\""child_count\"":\""0\"",\""display_quote_total\"":\""1222.85\"",\""display_quote_total_currency\"":\""USD\"",\""partner_fee_count\"":null,\""partner_fee_total\"":null,\""partner_fee_total_currency\"":null,\""quote_tax\"":null,\""quote_tax_currency\"":null,\""refundable_damage_deposit\"":null,\""refundable_damage_deposit_currency\"":null,\""service_fee\"":null,\""service_fee_currency\"":null,\""stay_end_date\"":\""2020-03-18\"",\""stay_start_date\"":\""2020-03-13\"",\""with_pets\"":\""false\"",\""listing_id\"":\""611.10570866.5597723\""}"",&#xA;            ""lineItems"": [&#xA;                {&#xA;                    ""title"": ""5 nights"",&#xA;                    ""amount"": ""US$1,222.85"",&#xA;                    ""mixedCurrencyDisclaimer"": null,&#xA;                    ""type"": ""RENT"",&#xA;                    ""tooltip"": null,&#xA;                    ""subItems"": null&#xA;                }&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and Response from Python Requests Module --</p>&#xA;&#xA;<pre><code>{""statusCode"":403,""error"":""Forbidden"",""message"":""Forbidden""}&#xA;</code></pre>&#xA;&#xA;<p>Can anyone please help me out why this is happening ?? How to resolve this issue.</p>&#xA;&#xA;<p>Link to Inspect the Page is - <a href=""https://www.homeaway.co.uk/p10570866?adultsCount=2&amp;arrival=2020-03-13&amp;departure=2020-03-18"" rel=""nofollow noreferrer"">HomeAway Page Link</a>. Please refer to the <strong>graphql</strong> requests.</p>&#xA;",8184780,,8184780,2020-03-03 10:19:54,2020-03-03 10:19:54,POST request is working on POSTMAN but not in Python and cURL,<python><python-3.x><web-scraping><python-requests><graphql>,0,6,0,2020-03-02 22:37:28
60502589,2,,53950885,1,,"<p>You can use nesting in <code>GraphQL</code> like</p>&#xA;&#xA;<pre><code>type NestedObject {&#xA;  title: String&#xA;  content: String&#xA;}&#xA;&#xA;type MainObject {&#xA;  id: ID!&#xA;  myObject: [NestedObject]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In the above code, the type definition of <code>NestObject</code> gets injected into the <code>myObject</code> array. To understand better you can see it as:</p>&#xA;&#xA;<pre><code>type MainObject {&#xA;  id: ID!&#xA;  myobject: [&#xA;    {&#xA;      title: String&#xA;      content: String&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I Hope this solves your problem!</p>&#xA;",12077817,,,,2020-03-03 08:01:28,"",,0,0,0,2020-03-03 08:01:28
60505621,2,,60486799,1,,"<p>There is an open PR in the apollo-datasource-graphql repo: <a href=""https://github.com/poetic/apollo-datasource-graphql/pull/11"" rel=""nofollow noreferrer"">https://github.com/poetic/apollo-datasource-graphql/pull/11</a></p>&#xA;&#xA;<p>There is a solution which helps you in the meantime. Change your import from:</p>&#xA;&#xA;<p><code>import { GraphQLDataSource } from 'apollo-datasource-graphql';</code></p>&#xA;&#xA;<p>to</p>&#xA;&#xA;<p><code>import { GraphQLDataSource } from 'apollo-datasource-graphql/src';</code></p>&#xA;&#xA;<p>And finally, I found an interesting part during the research. I found a section in the docs from <a href=""https://www.apollographql.com/docs/apollo-server/data/data-sources/"" rel=""nofollow noreferrer"">apollo server</a> where you can define an api as a ressource and not a graphql server. Which is actually the case in your provided code.</p>&#xA;&#xA;<p>In Addition, if you have other issues that might block tsc from compiling, please go under your node_modules into the apollo-datasource-graphql folder and go to the query function. There is the desired type for the options parameter. And as the docs say you need to provide the query you passed as first parameter also in the options as a query like this</p>&#xA;&#xA;<p><code>const response = await this.query(ARTICLE_QUERY, { query: ARTICLE_QUERY,  variables: { id }});</code></p>&#xA;",5341567,,5341567,2020-03-03 14:56:07,2020-03-03 14:56:07,"",,0,3,0,2020-03-03 10:53:28
60508382,2,,60480822,4,,"<p>And here is the solution. Super hard to believe this is a ""new"" way of accessing data via an API. Its slower, more complicated and much more verbose. I don't get the benefit at all.</p>&#xA;&#xA;<pre><code>  def run_first_query&#xA;    query = &lt;&lt;-'GRAPHQL'&#xA;    query($first: Int){&#xA;      products(first: $first) {&#xA;        pageInfo {&#xA;          hasNextPage&#xA;        }&#xA;        edges {&#xA;          cursor&#xA;          node {&#xA;            id&#xA;            title&#xA;            featuredImage {&#xA;              originalSrc&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;    GRAPHQL&#xA;    first = { &#xA;      ""first"": number_of_products_to_return,&#xA;    }&#xA;    Kernel.const_set(:ProductQuery, graphql_client.parse(query))&#xA;    @query_result = graphql_client.query(ProductQuery, variables: first)&#xA;  end&#xA;</code></pre>&#xA;",4386626,,,,2020-03-03 13:30:19,"",,0,0,0,2020-03-03 13:30:19
60510476,1,60516037,,1,185,"<p>I have this query:</p>&#xA;&#xA;<pre><code>query { &#xA;  repositoryOwner(login: ""jcubic"") {&#xA;    repositories(first: 20, orderBy: {field: STARGAZERS, direction: DESC}, privacy: PUBLIC) {&#xA;      edges {&#xA;        repository:node {&#xA;          name&#xA;          stargazers {&#xA;            totalCount&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>is it possible to get multiple users intead of single one?</p>&#xA;",387194,,387194,2020-03-03 18:35:12,2020-03-03 21:50:36,Get array of repositoryOwner from GitHub GraphQL,<graphql><github-api>,1,6,0,2020-03-03 15:25:09
60516037,2,,60510476,0,,"<p>With help from, I was able to create query using IDs (they are from me and linus torvalds):</p>&#xA;&#xA;<pre><code>{&#xA;  nodes(ids: [""MDQ6VXNlcjI4MDI0MQ=="", ""MDQ6VXNlcjEwMjQwMjU=""]) {&#xA;    ... on User {&#xA;      name&#xA;      login&#xA;    }&#xA;    ... on RepositoryOwner {&#xA;      repositories(first: 20, orderBy: {field: STARGAZERS, direction: DESC}, privacy: PUBLIC) {&#xA;        edges {&#xA;          repository: node {&#xA;            name&#xA;            stargazers {&#xA;              totalCount&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",387194,,,,2020-03-03 21:50:36,"",,0,0,0,2020-03-03 21:50:36
60522965,2,,60522485,2,,"<p>I think your first solution is correct except for:</p>&#xA;&#xA;<pre><code>mutation ($data: [registerMultipleItemsInput]!) {&#xA;    registerMultipleItems(data: [$data]) // &lt;-------- incorrect&#xA;}`;&#xA;</code></pre>&#xA;&#xA;<p><code>$data</code> already contains an array of <code>registerMultipleItemsInput</code> but you've wrapped it in another array which is incorrect, it must be:</p>&#xA;&#xA;<pre><code>mutation ($data: [registerMultipleItemsInput]!) {&#xA;    registerMultipleItems(data: $data) // &lt;-------- correct&#xA;}`;&#xA;</code></pre>&#xA;",11129751,,,,2020-03-04 09:35:55,"",,0,0,0,2020-03-04 09:35:55
60575423,1,,,0,912,"<p>I'm using vue-apollo + vue-property-decorator. I'm able to run queries just fine like this: </p>&#xA;&#xA;<pre><code>  get apollo () {&#xA;    return {&#xA;      rc_tags: {&#xA;        query: gql`{ &lt;body of query&gt; }`&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>But if I try to use a property of the component for the query, e.g. from a file</p>&#xA;&#xA;<pre><code>  MYQUERY = gql`{ &lt;body of query&gt; }`&#xA;&#xA;&#xA;  get apollo () {&#xA;    return {&#xA;      rc_tags: {&#xA;        query: MYQUERY&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Then I get the error:</p>&#xA;&#xA;<pre><code>Invariant Violation: Expecting a parsed GraphQL document. &#xA;Perhaps you need to wrap the query string in a ""gql"" tag?&#xA;</code></pre>&#xA;&#xA;<p>It doesn't matter if I import MYQUERY from another file as in the example above, or if it's a property of the local component, same error. I can mouse-over MYQUERY and get a TypeScript hint that it's a DocumentNode, but no matter what I do, I can't get it to work without putting the full template literal inside the actual <code>get apollo ()</code> function.</p>&#xA;",751738,,751738,2020-03-08 02:11:50,2020-03-08 02:20:33,"ApolloClient: Can't pass GraphQL query as a JS variable? ""Invariant Violation: Expecting a parsed GraphQL document.""",<graphql><apollo><apollo-client><vue-apollo><graphql-tag>,1,2,0,2020-03-07 07:36:55
60599322,2,,60597781,0,,"<p>Thanks to @xadm I solved the error via replacing in resolver:</p>&#xA;&#xA;<pre><code> if (args.product) {&#xA;      product= { product: args.product};&#xA;      }&#xA;</code></pre>&#xA;&#xA;<p>with</p>&#xA;&#xA;<pre><code>if (args.product) {&#xA;      product = args.product.map((product) =&gt; {&#xA;        return {&#xA;          'product.prodId': product.prodId,&#xA;          'product.variation': product.variation.map((variation) =&gt; {&#xA;            return {&#xA;              'product.variation.name': variation.name,&#xA;              'product.variation.value': variation.value&#xA;            };&#xA;          })&#xA;        };&#xA;      });&#xA;    }&#xA;</code></pre>&#xA;",5600899,,,,2020-03-09 11:10:13,"",,0,0,0,2020-03-09 11:10:13
60606960,1,60607233,,0,194,"<p>I do currently map through GraphQL data like so: </p>&#xA;&#xA;<pre><code>  const plotDataArray = data.allWordpressWpPlots.edges.map(plot =&gt; (    &#xA;&#xA;    {&#xA;      geometry: {&#xA;        type: plot.node.properties.geotype,&#xA;        coordinates: [&#xA;          [&#xA;            plot.node.coordinates[0].coord.split("","").reverse(),&#xA;            plot.node.coordinates[1].coord.split("","").reverse(),&#xA;            plot.node.coordinates[2].coord.split("","").reverse(),&#xA;            plot.node.coordinates[3].coord.split("","").reverse(),&#xA;            plot.node.coordinates[4].coord.split("","").reverse()&#xA;          ]&#xA;        ]&#xA;      }&#xA;    }&#xA;  )) &#xA;</code></pre>&#xA;&#xA;<p>The GraphQL query I use looks like this: </p>&#xA;&#xA;<pre><code>query {&#xA;  allWordpressWpPlots {&#xA;    edges {&#xA;      node {&#xA;        coordinates {&#xA;          coord&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>..and the output from GraphiQL looks like this: </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""allWordpressWpPlots"": {&#xA;      ""edges"": [&#xA;        {&#xA;          ""node"": {&#xA;            ""coordinates"": [&#xA;              {&#xA;                ""coord"": ""56.064655444812,9.6949704566207""&#xA;              },&#xA;              {&#xA;                ""coord"": ""56.064575958599,9.6994982706574""&#xA;              },&#xA;              {&#xA;                ""coord"": ""56.06046088577,9.6994719476694 ""&#xA;              },&#xA;              {&#xA;                ""coord"": ""56.060440367157,9.6951515896261""&#xA;              },&#xA;              {&#xA;                ""coord"": ""56.064655444812,9.6949704566207""&#xA;              }&#xA;            ]&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The map function do return an object in the correct format, but my problem is that the ""coordinates"" node from GrapQL comes in different lengths. I want to loop through the node using a foreach-loop based on the length of the array, but I get a syntax error when I try to javascript within the map function. </p>&#xA;&#xA;<p>How can I build a ""coordinates"" array with X amount of object elements from GraphQL?</p>&#xA;",6347335,,,,2020-03-09 19:33:56,How do I push object elements from GraphQL into nested array in javascript object?,<javascript><ecmascript-6><graphql>,1,0,0,2020-03-09 19:13:31
60609167,1,,,1,290,"<p>I'm trying to query the branch protection rules which has the similar patterns using wildcards. Any suggestion are welcome.</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(owner:""user"",name: ""repo"") {&#xA;    branchProtectionRules(first: 10) {&#xA;      nodes {&#xA;          pattern&#xA;            }&#xA;        }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>O/P:</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;        ""repository"": {&#xA;            ""branchProtectionRules"": {&#xA;                ""nodes"": [&#xA;                    {&#xA;                        ""pattern"": ""release""&#xA;                    },&#xA;                    {&#xA;                        ""pattern"": ""release-220""&#xA;                    }&#xA;                ]&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there a way to find the pattern fields with release*</p>&#xA;",11529836,,6024220,2020-03-09 23:04:36,2022-11-14 10:34:29,Pattern matching in GitHub GraphQL query,<github><graphql><github-api><github-graphql>,1,0,0,2020-03-09 22:27:57
60644104,2,,60643685,1,,"<p>Assuming you're using the <a href=""https://marketplace.visualstudio.com/items?itemName=Prisma.vscode-graphql"" rel=""nofollow noreferrer"">right extension</a>, you need to use the <code>gql</code> tag from <code>graphql-tag</code>.</p>&#xA;&#xA;<pre><code>const gql = require('graphql-tag')&#xA;&#xA;const typeDefs = gql`&#xA;  type User { ... }&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>The tag parses the provided string and returns a <code>DocumentNode</code> object, which is what should be passed to <code>makeExecutableSchema</code> or the <code>ApolloServer</code> constructor. On the client side, the queries used by ApolloClient are also expected to be <code>DocumentNode</code> objects and should be wrapped the same way.</p>&#xA;&#xA;<p>The extension is able to detect usage of the tag and apply syntax highlighting accordingly.</p>&#xA;",6024220,,,,2020-03-11 20:36:55,"",,0,2,0,2020-03-11 20:36:55
60651034,1,60655209,,0,105,"<p>I have a GraphQL query that lists merged and closed pull requests (by asking for a pull request's <code>headRef</code> I can tell whether its branch exists):</p>&#xA;&#xA;&#xA;&#xA;<pre><code>{&#xA;  organization(login: ""company"") {&#xA;    repository(name: ""repo"") {&#xA;      pullRequests(last: 100, states: [CLOSED, MERGED]) {&#xA;        nodes {&#xA;          headRef {&#xA;            name&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'd like to get all pull requests whose headRef is not null (e.g. I wish I could do something like <code>pullRequests(last: 100, states: [CLOSED, MERGED], headRef not null)</code>). Is it possible, or should I continue to discard null headRefs?</p>&#xA;",6426976,,,,2020-03-12 13:32:10,Querying merged pull requests whose head branches still exist,<graphql><github-api>,1,0,0,2020-03-12 09:27:37
60655699,1,60793243,,3,420,"<p>I'd like to delete a github branch using a GraphQL mutation, but I haven't found enough information regarding the <a href=""https://developer.github.com/v4/input_object/deleterefinput/"" rel=""nofollow noreferrer""><code>deleteRef</code></a> command. Using the <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">GraphQL explorer</a> I came up with this nonsense:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  deleteRef(input: {refId: ""my-branch""}) {&#xA;    __typename&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I don't know yet how to add repository information for the mutation to have any meaning, and the only reason I included <code>__typename</code> was because the <code>deleteRef</code> block couldn't be left empty. How do I fix this mutation?</p>&#xA;",6426976,,6024220,2020-03-12 14:06:57,2020-03-21 21:48:50,Delete a branch in github using GraphQL mutations,<github><graphql><github-api>,1,0,0,2020-03-12 14:01:01
60660134,1,60660217,,0,750,"<p>I'm trying to pass an array of objects to my MenuPage from the App.js. If there's no map, I can consolelog the <code>activities</code> prop I passed. But when I try to run the map I get an error and the console.log can no longer identify the <code>activities</code> prop, but instead I receive multiple console.logs of empty arrays.</p>&#xA;&#xA;<p>Also, is this the correct way so that my <code>activities</code> render dynamically? I used to have the <code>activities</code> state on the MenuPage.js, but whenever I add a new activity, I'd have to refresh in order for the newly added activity to appear. Hence, I decided to try to move it in its parent file which is the App.js.</p>&#xA;&#xA;<p><strong><em>error message when map</em></strong></p>&#xA;&#xA;<blockquote>&#xA;  <p>Error: Too many re-renders. React limits the number of renders to prevent an infinite loop.</p>&#xA;</blockquote>&#xA;&#xA;<p><strong>Console log of <code>activities</code> prop if no map</strong></p>&#xA;&#xA;<pre><code>{getActivities: Array(5)}&#xA;    getActivities: Array(5)&#xA;        0: {id: ""5e64abc6de157e027c1fc224"", name: ""Test1"", location: ""Test1"", activityDate: ""Test1"", description: ""Test1"", …}&#xA;        1: {id: ""5e69b103dd9e0b20f8636da9"", name: ""Test234"", location: ""Test2"", activityDate: ""Test2"", description: ""Test2"", …}&#xA;        2: {id: ""5e6a744eca11a3355cdde03b"", name: ""test3"", location: ""test3"", activityDate: ""test3"", description: ""test3"", …}&#xA;        3: {id: ""5e6a74c9be805e042057b3b1"", name: ""test4"", location: ""test4"", activityDate: ""test4"", description: ""test4"", …}&#xA;        4: {id: ""5e6a74e4be805e042057b3b2"", name: ""test5"", location: ""test5"", activityDate: ""test5"", description: ""test5"", …}&#xA;        length: 5&#xA;__proto__: Array(0)&#xA;</code></pre>&#xA;&#xA;<p><strong>MenuPage.js</strong></p>&#xA;&#xA;<pre><code>const MenuPage = ({activities}) =&gt; {&#xA;    const [activity, setActivity] = useState([])&#xA;&#xA;    console.log(activities)&#xA;&#xA;    setActivity(activities.map( (activity) =&gt; &lt;ActivityItem activity={activity} /&gt;))&#xA;&#xA;</code></pre>&#xA;&#xA;<p><strong>App.js</strong></p>&#xA;&#xA;<pre><code>const App = () =&gt; {&#xA;    const [activities, setActivities] = useState([])&#xA;&#xA;    useEffect( () =&gt; {&#xA;        GQLClient({}).request(Query.getActivities, null).then( ({getActivities}) =&gt; {&#xA;            setActivities({getActivities})&#xA;        })&#xA;    }, [])&#xA;&#xA;    const Load = (props, page) =&gt; {&#xA;        if (user.token === null) return &lt;Redirect to=""/login"" /&gt;&#xA;&#xA;        if (page === 'LogoutPage') {&#xA;            unsetUser()&#xA;            return &lt;Redirect to=""/login"" /&gt;&#xA;        }&#xA;&#xA;        switch (page) {&#xA;            case 'MenuPage': return &lt;MenuPage activities={activities} /&gt;&#xA;&#xA;            default:&#xA;        }&#xA;    }&#xA;&#xA;    return (&#xA;        &lt;BrowserRouter&gt;&#xA;            &lt;AppNavbar /&gt;&#xA;            &lt;Switch&gt;&#xA;                &lt;Route exact path='/register' component={ RegisterPage } /&gt;&#xA;                &lt;Route exact path='/login' component={ LoginPage } /&gt;&#xA;                &lt;Route exact path='/' render={ (props) =&gt; Load(props, 'MenuPage') } /&gt;&#xA;            &lt;/Switch&gt;&#xA;        &lt;/BrowserRouter&gt;&#xA;  )&#xA;}&#xA;</code></pre>&#xA;",12194443,,,,2020-03-12 19:07:07,"How to map a prop in React, which is an array of objects",<javascript><reactjs><graphql>,2,1,0,2020-03-12 18:43:36
60673829,2,,53863934,12,,"<p><strong>TLDR;</strong> Circular references are an anti-pattern for non-rate-limited GraphQL APIs.  APIs with rate limiting can safely use them.</p>&#xA;&#xA;<p><strong>Long Answer:</strong> Yes, true circular references are an anti-pattern on smaller/simpler APIs ... but when you get to the point of rate-limiting your API you can use that limiting to ""kill two birds with one stone"".</p>&#xA;&#xA;<p>A perfect example of this was given in one of the other answers: Github's GraphQL API let's you request a repository, with its owner, with their repositories, with their owners ... infinitely ... or so you might think from the schema.</p>&#xA;&#xA;<p>If you look at the API though (<a href=""https://developer.github.com/v4/object/user/"" rel=""noreferrer"">https://developer.github.com/v4/object/user/</a>) you'll see their structure isn't directly circular: there are types in-between. For instance, <code>User</code> doesn't reference <code>Repository</code>, it references <code>RepositoryConnection</code>. Now, <code>RepositoryConnection</code> <em>does</em> have a <code>RepositoryEdge</code>, which <em>does</em> have a <code>nodes</code> property of type <code>[Repository]</code> ... </p>&#xA;&#xA;<p>... but when you look at the <em>implementation</em> of the API: <a href=""https://developer.github.com/v4/guides/resource-limitations/"" rel=""noreferrer"">https://developer.github.com/v4/guides/resource-limitations/</a> you'll see that the resolvers behind the types are rate-limited (ie. no more than X nodes per query).  This guards both against consumers who request too much (breadth-based issues) <em>and</em> consumers who request infinitely (depth-based issues).</p>&#xA;&#xA;<p>Whenever a user requests a resource on GitHub it can allow circular references because it puts the burden on not letting them be circular onto the consumer.  If the consumer fails, the query fails because of the rate-limiting.</p>&#xA;&#xA;<p>This lets responsible users ask for the user, of the repository, owned by the same user ... if they really need that ... as long as they don't keep asking for the repositories owned by the owner of that repository, owned by ...</p>&#xA;&#xA;<p>Thus, GraphQL APIs have two options:</p>&#xA;&#xA;<ul>&#xA;<li>avoid circular references (I think this is the default ""best practice"")</li>&#xA;<li>allow circular references, but limit the total nodes that can be queried per call, so that <strong>infinite</strong> circles aren't possible</li>&#xA;</ul>&#xA;&#xA;<p>If you don't want to rate-limit, GraphQL's approach of using different types can still give you a clue to a solution.</p>&#xA;&#xA;<p>Let's say you have users and repositories: you need two types for both, a User and UserLink (or UserEdge, UserConnection, UserSummary ... take your pick), and a Repository and RepositoryLink.</p>&#xA;&#xA;<p>Whenever someone requests a user via a root query, you return the User type.  But that User type would <em>not</em> have:</p>&#xA;&#xA;<pre><code>repositories: [Repository]&#xA;</code></pre>&#xA;&#xA;<p>it would have:</p>&#xA;&#xA;<pre><code>repositories: [RepositoryLink]&#xA;</code></pre>&#xA;&#xA;<p><code>RepositoryLink</code> would have the same ""flat"" fields as Repository has, but none of its potentically circular object fields.  Instead of <code>owner: User</code>, it would have <code>owner: ID</code>.</p>&#xA;",5921,,5921,2020-03-13 16:44:56,2020-03-13 16:44:56,"",,0,0,0,2020-03-13 16:13:04
60682471,1,,,-1,374,"<pre><code>type Review { &#xA;   rating: Int!,&#xA;   text: String! &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to achieve - only one field can be nullable between rating and text or only one field would be non-nullable between rating and text in ""Review"" type. </p>&#xA;",12246473,,,,2020-03-14 12:51:41,How to add Conditional non-nullable field in GraphQL schema?,<graphql><schema>,1,0,0,2020-03-14 11:59:28
60731409,1,,,2,289,"<p>I'm the lead student-researcher on a team trying to analyze and mine GitHub repositories. We're trying to get (the repo_owner and repo_name) for every project hosted on Github that meets the following criteria:</p>&#xA;&#xA;<pre><code>query MyQuery {&#xA;  search(query: ""language:Python"", type: REPOSITORY, &#xA;    first: 100&#xA;  ) {&#xA;    pageInfo {&#xA;      endCursor&#xA;      hasNextPage&#xA;    }&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          nameWithOwner&#xA;          issues {&#xA;            totalCount&#xA;          }&#xA;          defaultBranchRef {&#xA;            target {&#xA;              ... on Commit {&#xA;                history(first: 0) {&#xA;                  totalCount&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>We are able to iterate through the cursors 10 times. But when we reach cursor ""Y3Vyc29yOjEwMDA="" </p>&#xA;&#xA;<pre><code>query MyQuery {&#xA;  search(query: ""language:Python"", type: REPOSITORY, &#xA;    first: 100, after:""Y3Vyc29yOjEwMDA=""&#xA;  ) {&#xA;    pageInfo {&#xA;      endCursor&#xA;      hasNextPage&#xA;    }&#xA;    edges {&#xA;      node {&#xA;        ... on Repository {&#xA;          nameWithOwner&#xA;          issues {&#xA;            totalCount&#xA;          }&#xA;          defaultBranchRef {&#xA;            target {&#xA;              ... on Commit {&#xA;                history(first: 0) {&#xA;                  totalCount&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>We get the following response:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""search"": {&#xA;      ""pageInfo"": {&#xA;        ""endCursor"": null,&#xA;        ""hasNextPage"": false&#xA;      },&#xA;      ""edges"": []&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I know from a quick advanced search on Github that there are currently ~4,000,000 python-language public repositories hosted on the site. We can only get 1000 before we encounter this null cursor. </p>&#xA;&#xA;<p>Please let us know if there is a work-around for this problem. We'd like to continue to use v4 API because of the minimalistic data output (i.e., it only gives us what we want: repo_owner and repo name along with issue count and commit count).</p>&#xA;&#xA;<p>Thank you for your help!</p>&#xA;",13079259,,,,2020-03-17 23:01:54,Github Graphql query: Reaching null pointer after 1000 outputs (or 10 requests * 100 items per request),<github><graphql><github-api><github-graphql>,0,1,0,2020-03-17 23:01:54
60750515,2,,60708968,0,,"<p>Thanks all !!&#xA;I have solution </p>&#xA;&#xA;<pre><code>const detailInput = {&#xA;      vat: input.vat,&#xA;      exportNoBill: input.exportNobill&#xA;    } as DocumentDetailInput&#xA;&#xA;</code></pre>&#xA;&#xA;<p>and </p>&#xA;&#xA;<pre><code>detail: DocumentDetailInput&#xA;</code></pre>&#xA;&#xA;<p>Now I can't just exclude things from DocumentDetailInput interface !!</p>&#xA;",12489942,,,,2020-03-19 03:30:02,"",,0,0,0,2020-03-19 03:30:02
60756227,1,60756381,,0,209,"<p>I have a GraphQL-schema that has a union declaration that already has a lot of types, e.g.:</p>&#xA;&#xA;<p><code>union SectionUnion = SectionForm | Section2 | Section3 | Section4 | Section5</code></p>&#xA;&#xA;<p>I know that lots more sections are coming (not added yet) and at some point the union declaration will become unreadable, as it would be a very long line.</p>&#xA;&#xA;<p>Is there a way to put the types in multiple lines, one type per line?</p>&#xA;",3505827,,,,2020-03-19 11:34:48,Split union declaration in GraphQL schema over multiple lines,<graphql><graphql-schema>,1,0,0,2020-03-19 11:25:27
60760162,1,,,2,337,"<p>I am attempting to read the raw contents of a specific file in my GitLab repository using the GraphQL API. Doing this with the REST Api is detailed here:&#xA;<a href=""https://docs.gitlab.com/ee/api/repository_files.html#get-raw-file-from-repository"" rel=""nofollow noreferrer"">https://docs.gitlab.com/ee/api/repository_files.html#get-raw-file-from-repository</a></p>&#xA;&#xA;<p>Yet I can’t quite figure out how to do this with GraphQL. This is as far as I’ve gotten.</p>&#xA;&#xA;<pre><code>{&#xA;  project(fullPath: ""BenSa/first-project"") {&#xA;    repository {&#xA;      tree(ref: ""master"", recursive: true){&#xA;        blobs{&#xA;          nodes {&#xA;            name&#xA;            type&#xA;            flatPath&#xA;            sha&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The result of this query is:</p>&#xA;&#xA;<pre><code>{&#xA;""data"": {&#xA;    ""project"": {&#xA;      ""repository"": {&#xA;        ""tree"": {&#xA;          ""blobs"": {&#xA;            ""nodes"": [&#xA;              {&#xA;                ""name"": ""data.json"",&#xA;                ""type"": ""blob"",&#xA;                ""flatPath"": """",&#xA;                ""sha"": ""aa6f396f7a0e2c3163bc05c857539db89ade1a37""&#xA;              },&#xA;              {&#xA;                ""name"": ""index.html"",&#xA;                ""type"": ""blob"",&#xA;                ""flatPath"": """",&#xA;                ""sha"": ""e69de29bb2d1d6434b8b29ae775ad8c2e48c5391""&#xA;              }&#xA;            ]&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Yet I want to access the raw contents of “data.json”. I have searched through the GraphQL schema for the word “raw” and only found references to snippets. The Blob type has a webUrl but not a rawUrl and besides I need the data coming from the GraphQL response if possible, not a separate fetch request. Any ideas?</p>&#xA;&#xA;<p>Here is the GitLab GraphiQL link:&#xA;<a href=""https://gitlab.com/-/graphql-explorer"" rel=""nofollow noreferrer"">https://gitlab.com/-/graphql-explorer</a></p>&#xA;&#xA;<p>And the GraphQL Reference:&#xA;<a href=""https://docs.gitlab.com/ee/api/graphql/reference/"" rel=""nofollow noreferrer"">https://docs.gitlab.com/ee/api/graphql/reference/</a></p>&#xA;&#xA;<p>Thanks</p>&#xA;",7743523,,7743523,2020-03-19 15:38:05,2022-03-04 14:42:18,GitLab GraphQL API: Read Raw Data,<git><graphql><gitlab><gitlab-api>,1,1,0,2020-03-19 15:21:36
60760907,1,,,0,47,"<p>We are using Travis CI to run tests for one of our repositories on Github.<br>&#xA;When looking at the list of commits, we see green check-marks or red crosses, indicating the status of our tests.  </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/T8fUX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/T8fUX.png"" alt=""enter image description here""></a>  </p>&#xA;&#xA;<p>Now I'm experimenting with the Github v4 GraphQL API.<br>&#xA;I can browse the API (using GraphiQL and GraphiQL-explorer), but I cannot find the results of the Travis tests anywhere.</p>&#xA;&#xA;<p>Can I use the Github GraphQL API to get the Travis results and how?</p>&#xA;",1180612,,1180612,2020-03-20 11:16:10,2020-03-20 11:16:10,Github v4 GraphQL API - access Marketplace App results (Travis CI),<graphql><automated-tests><travis-ci><github-api>,1,0,0,2020-03-19 16:06:19
60765144,2,,60760907,0,,"<p>When requesting the last commit or a list of commit (with <code>history</code>) you can access <a href=""https://developer.github.com/v4/object/status/#status"" rel=""nofollow noreferrer""><code>status</code> object</a> which has a <a href=""https://developer.github.com/v4/object/status/#fields"" rel=""nofollow noreferrer""><code>state</code> property</a> : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner: ""bertrandmartel"", name: ""metec-braille-driver"") {&#xA;    refs(first: 100, refPrefix: ""refs/heads/"") {&#xA;      nodes {&#xA;        target {&#xA;          ... on Commit {&#xA;            status {&#xA;              state&#xA;              contexts {&#xA;                description&#xA;                createdAt&#xA;                state&#xA;              }&#xA;            }&#xA;            history(first: 100) {&#xA;              nodes {&#xA;                message&#xA;                status {&#xA;                  state&#xA;                  contexts {&#xA;                    description&#xA;                    createdAt&#xA;                    state&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>which has the following result :</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>....&#xA;""status"": {&#xA;  ""state"": ""FAILURE"",&#xA;  ""contexts"": [&#xA;    {&#xA;      ""description"": ""AppVeyor build failed"",&#xA;      ""createdAt"": ""2020-03-09T02:31:19Z"",&#xA;      ""state"": ""FAILURE""&#xA;    },&#xA;    {&#xA;      ""description"": ""The Travis CI build passed"",&#xA;      ""createdAt"": ""2020-03-09T02:31:42Z"",&#xA;      ""state"": ""SUCCESS""&#xA;    }&#xA;  ]&#xA;},&#xA;....&#xA;</code></pre>&#xA;&#xA;<p>Also from the <a href=""https://developer.github.com/v3/repos/statuses/#statuses"" rel=""nofollow noreferrer"">v3 doc</a>: </p>&#xA;&#xA;<blockquote>&#xA;  <p>The state of the status. Can be one of error, failure, pending, or&#xA;  success</p>&#xA;</blockquote>&#xA;",2614364,,2614364,2020-03-19 21:34:24,2020-03-19 21:34:24,"",,0,2,0,2020-03-19 21:13:55
60783174,1,,,1,912,"<p>Sorry for the long post, but I tried to be as detailed as possible.</p>&#xA;&#xA;<p><strong>How can I edit my current model, schema, and resolver to be able to save/connect a related type (Vendor) to my created type (Item) via a web form?</strong></p>&#xA;&#xA;<p>I want to create an inventory item and select a vendor to be associated with that item. </p>&#xA;&#xA;<p>I have a Prisma data model like so (I've other fields for simplicity because I have no trouble saving the other fields; it's just with other types where there is a relation)...</p>&#xA;&#xA;<p>Items may or may not have a vendor associated with them. Vendors may or may not have a list of items currently associated with them.</p>&#xA;&#xA;<pre><code>type Item {&#xA;  id: ID! @id&#xA;  name: String!&#xA;  description: String!&#xA;  vendor: Vendor&#xA;}&#xA;&#xA;type Vendor {&#xA;  id: ID! @id&#xA;  items: [Item!]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have a graphql schema like this (compare to modified schema at the end of this question)...</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;  createItem(&#xA;    name: String! &#xA;    description: String! &#xA;  ): Item!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My resolver:</p>&#xA;&#xA;<pre><code>async createItem(parent, args, ctx, info) {&#xA;  const item = await ctx.db.mutation.createItem(&#xA;    {&#xA;        data: {&#xA;            ...args,&#xA;        },&#xA;    }, info);&#xA;&#xA;    return item;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My React component contains the following:</p>&#xA;&#xA;<pre><code>const CREATE_ITEM_MUTATION = gql`&#xA;  mutation CREATE_ITEM_MUTATION(&#xA;    $name: String!&#xA;    $description: String!&#xA;  ) {&#xA;    createItem(&#xA;      name: $name&#xA;      description: $description&#xA;    ) {&#xA;      id&#xA;      name&#xA;      description&#xA;      vendor {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;const ALL_VENDORS_QUERY = gql`&#xA;  query ALL_VENDORS_QUERY {&#xA;    vendors {&#xA;      id&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>Later on down the web page in my HTML form, I have:</p>&#xA;&#xA;<pre><code>&lt;Query query={ALL_VENDORS_QUERY}&gt;&#xA;  {({ data, loading }) =&gt; (&#xA;    &lt;select&#xA;      id=""vendor""&#xA;      name=""vendor""&#xA;      onChange={this.handleChange}&#xA;      value={this.state.vendor}&#xA;    &gt;&#xA;      &lt;option&gt;Vendor&lt;/option&gt;&#xA;        {data.vendors.map(vendor =&gt; (&#xA;          &lt;option key={vendor.id} value={vendor.id}&gt;{vendor.name}&lt;/option&gt;&#xA;        ))}&#xA;    &lt;/select&gt;&#xA;  )}&#xA;&lt;/Query&gt;&#xA;</code></pre>&#xA;&#xA;<p>I just don't know how to connect the vendor to the item through a form submission. I can get it working if I hard code the vendor id in my resolver like so:</p>&#xA;&#xA;<pre><code>async createItem(parent, args, ctx, info) {&#xA;  const item = await ctx.db.mutation.createItem(&#xA;    {&#xA;        data: {&#xA;            vendor: {&#xA;              connect: { id: ""ck7zmwfoxg4b70934wx8kgwkx"" } // &lt;-- need to dynamically populate this based on user input from the form&#xA;            },&#xA;            ...args,&#xA;        },&#xA;    }, info);&#xA;&#xA;    return item;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>...but that obviously is not what I want.</p>&#xA;&#xA;<p>To me, it makes the most sense to modify my schema like so:</p>&#xA;&#xA;<pre><code>createItem(&#xA;  name: String!&#xA;  description: String!&#xA;  vendor: Vendor &lt;--- added&#xA;): Item!&#xA;</code></pre>&#xA;&#xA;<p>But when I do that I get this:</p>&#xA;&#xA;<p><code>Error: The type of Mutation.createItem(vendor:) must be Input Type but got: Vendor.</code></p>&#xA;&#xA;<p><strong>How can I edit my current model, schema, and resolver to be able to save/connect a vendor ID that is selected on the form?</strong></p>&#xA;",1592578,,,,2020-03-21 04:20:53,"Data Relationships and Connection Types with Mutations in Prisma, GraphQL, and Apollo",<reactjs><react-apollo><apollo-client><prisma-graphql><graphql-mutation>,1,0,0,2020-03-21 00:08:01
60793243,2,,60655699,3,,"<p>You can't return nothing in that mutation since it's not of type <code>Void</code>. You need to define a mutation like the following : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>mutation DeleteBranch($branchRef: ID!) {&#xA;  deleteRef(input: {refId: $branchRef}) {&#xA;    __typename&#xA;    clientMutationId&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In the <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">explorer</a> you can define queries and mutations and choose which one to execute when you hit the button. A full example in the explorer would be : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>query GetBranchID {&#xA;  repository(name: ""test-repo"", owner: ""bertrandmartel"") {&#xA;    refs(refPrefix: ""refs/heads/"", first: 100) {&#xA;      nodes {&#xA;        id&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;mutation DeleteBranch($branchRef: ID!) {&#xA;  deleteRef(input: {refId: $branchRef}) {&#xA;    __typename&#xA;    clientMutationId&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>with variables: </p>&#xA;&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  ""branchRef"": ""MDM6UmVmMjQ5MDU0NzQ0Om1hc3Rlcg==""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can do the following in the explorer :</p>&#xA;&#xA;<ul>&#xA;<li>perform the <code>GetBranchID</code> query</li>&#xA;<li>copy paste the reference in the <code>branchRef</code> variable</li>&#xA;<li>perform the <code>DeleteBranch</code></li>&#xA;</ul>&#xA;&#xA;<p>Without the explorer, here's how it would look using <a href=""/questions/tagged/python"" class=""post-tag"" title=""show questions tagged &#39;python&#39;"" rel=""tag"">python</a> :</p>&#xA;&#xA;<pre class=""lang-python prettyprint-override""><code>import requests&#xA;&#xA;repo_name = ""YOUR_REPO""&#xA;repo_owner = ""YOUR_USERNAME""&#xA;token = ""YOUR_TOKEN""&#xA;&#xA;query = """"""&#xA;query {&#xA;  repository(name: \"""""""" + repo_name + """"""\"", owner: \"""""""" + repo_owner + """"""\"") {&#xA;    refs(refPrefix: ""refs/heads/"", first: 100) {&#xA;      nodes {&#xA;        id&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;""""""&#xA;&#xA;resp = requests.post('https://api.github.com/graphql', &#xA;    json={ ""query"": query},&#xA;    headers= {""Authorization"": f""Token {token}""}&#xA;)&#xA;body = resp.json()&#xA;&#xA;for i in body[""data""][""repository""][""refs""][""nodes""]:&#xA;    print(i[""name""], i[""id""])&#xA;&#xA;chosenBranchId = input(""Enter a branch ID: "")&#xA;&#xA;query = """"""&#xA;mutation {&#xA;  deleteRef(input: {refId: \"""""""" + chosenBranchId + """"""\""}) {&#xA;    __typename&#xA;    clientMutationId&#xA;  }&#xA;}&#xA;""""""&#xA;&#xA;resp = requests.post('https://api.github.com/graphql', &#xA;    json={ ""query"": query},&#xA;    headers= {""Authorization"": f""Token {token}""}&#xA;)&#xA;print(resp.json())&#xA;</code></pre>&#xA;",2614364,,2614364,2020-03-21 21:48:50,2020-03-21 21:48:50,"",,0,0,0,2020-03-21 21:02:14
60801556,1,,,-1,57,"<p>if anyone can hazard a guess or where to look it would be greatly appreciated. &#xA;I can get nested data when I run using graphgl API, however, from my node program it only shows top-level items - does not display the nested elements for the customer and lineitem object. &#xA;I am using Koa middle where, with promise response: </p>&#xA;&#xA;<pre><code>router.get('/orders/', async (ctx) =&gt; {&#xA;const auth = prepareAuth(ctx);&#xA;await getOrders(auth).then(response =&gt; ctx.body = response.data.data.orders);&#xA;&#xA;console.log(ctx.body.edges)&#xA;</code></pre>&#xA;&#xA;<p>However from the console it has (customer null and 'object':</p>&#xA;&#xA;<pre><code>[&#xA;  {&#xA;    node: {&#xA;      createdAt: '2020-02-24T12:53:20Z',&#xA;      customer: null,&#xA;      name: '#1001',&#xA;      lineItems: [Object]&#xA;    }&#xA;  },&#xA;  {&#xA;    node: {&#xA;      createdAt: '2020-02-24T12:53:50Z',&#xA;      customer: null,&#xA;      name: '#1002',&#xA;      lineItems: [Object]&#xA;    }&#xA;  },&#xA;  {&#xA;    node: {&#xA;      createdAt: '2020-03-10T21:11:04Z',&#xA;      customer: null,&#xA;      name: '#1003',&#xA;      lineItems: [Object]&#xA;    }&#xA;  }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>when i use the GraphQL API directly the query works fine and I get full response:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""orders"": {&#xA;      ""edges"": [&#xA;        {&#xA;          ""node"": {&#xA;            ""createdAt"": ""2020-02-24T12:53:20Z"",&#xA;            ""customer"": {&#xA;              ""displayName"": ""franko girl""&#xA;            },&#xA;            ""name"": ""#1001"",&#xA;            ""lineItems"": {&#xA;              ""edges"": [&#xA;                {&#xA;                  ""node"": {&#xA;                    ""name"": ""dance mat red"",&#xA;                    ""quantity"": 4&#xA;                  }&#xA;                }&#xA;              ]&#xA;            }&#xA;          }&#xA;        },&#xA;        {&#xA;          ""node"": {&#xA;            ""createdAt"": ""2020-02-24T12:53:50Z"",&#xA;            ""customer"": {&#xA;              ""displayName"": ""franko man""&#xA;            },&#xA;            ""name"": ""#1002"",&#xA;            ""lineItems"": {&#xA;              ""edges"": [&#xA;                {&#xA;                  ""node"": {&#xA;                    ""name"": ""dance mat black"",&#xA;                    ""quantity"": 2&#xA;                  }&#xA;                }&#xA;              ]&#xA;            }&#xA;          }&#xA;        },&#xA;        {&#xA;          ""node"": {&#xA;            ""createdAt"": ""2020-03-10T21:11:04Z"",&#xA;            ""customer"": {&#xA;              ""displayName"": ""franko man""&#xA;            },&#xA;            ""name"": ""#1003"",&#xA;            ""lineItems"": {&#xA;              ""edges"": [&#xA;                {&#xA;                  ""node"": {&#xA;                    ""name"": ""dance mat black"",&#xA;                    ""quantity"": 1&#xA;                  }&#xA;                },&#xA;                {&#xA;                  ""node"": {&#xA;                    ""name"": ""dance mat red"",&#xA;                    ""quantity"": 1&#xA;                  }&#xA;                }&#xA;              ]&#xA;            }&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  },&#xA;</code></pre>&#xA;",5177487,,5177487,2020-03-22 17:31:40,2020-03-23 22:23:39,GraphQL Query - cannot see nested elements in JSON respone,<node.js><graphql>,1,0,0,2020-03-22 15:59:33
60822912,2,,60822832,1,,"<p>The API you are hitting appears to returns an object that is a <a href=""https://en.wikipedia.org/wiki/Associative_array"" rel=""nofollow noreferrer"">map</a> of hero IDs to hero objects. It looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""1"": {&#xA;    ""id"": 1,&#xA;    ""name"": ""npc_dota_hero_antimage"",&#xA;    ...&#xA;  },&#xA;  ""2"": {&#xA;    ""id"": 2,&#xA;    ""name"": ""npc_dota_hero_axe"",&#xA;    ...&#xA;  },&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What we want is an array of those objects instead. One way to do that would be something like:</p>&#xA;&#xA;<pre><code>.then(res =&gt; {&#xA;  const heroesById = res.data&#xA;  // get an array of the keys of the object&#xA;  const ids = Object.keys(heroesById) &#xA;  // map over the array&#xA;  return ids.map(id =&gt; heroesById[id])&#xA;});&#xA;</code></pre>&#xA;",6024220,,,,2020-03-23 23:23:21,"",,0,0,0,2020-03-23 23:23:21
60827231,1,60829763,,0,122,"<p>I'm experimenting with GraphQL and I want to create a GraphQL script for advanced search. I'm stuck at figuring out how to search for a repository containing a specific language. For example, I only want to search for repos written in Kotlin. This is what my query looks like</p>&#xA;&#xA;<pre><code>query AdvancedSearch($query: String!, $type: SearchType!, $numOfResults: Int!, $nextPageCursor: String) {&#xA;search(type: $type, query: $query, first: $numOfResults, after: $nextPageCursor) {&#xA;    pageInfo {&#xA;        hasNextPage&#xA;        endCursor&#xA;    }&#xA;    repositoryCount&#xA;    nodes {&#xA;        ... on Repository {&#xA;            name&#xA;            nameWithOwner&#xA;            description&#xA;            languages(first: 100) {&#xA;                nodes {&#xA;                    name&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>}</p>&#xA;&#xA;<p>I'm thinking along the lines of having a @skip directive in languages, something like</p>&#xA;&#xA;<pre><code>languages(first:100) @skip(if:$filterLanguage != ""Kotlin"")&#xA;</code></pre>&#xA;&#xA;<p>I don't want to pass ""language:kotlin"" in the search query, I want to do this using Directives. Is something like this possible?</p>&#xA;",3452463,,,,2020-03-24 11:05:03,GraphQL | Can we implement search by programming language in GitHub GraphQL API using Directives?,<github><graphql>,1,0,0,2020-03-24 08:21:42
60830193,1,60830335,,5,7785,"<p>I have loop - forEach - which find productId for every element of array. I want to fetch my database by productId using apollo query. &#xA;How to do it?</p>&#xA;&#xA;<pre><code>products.forEach(({ productId, quantity }) =&gt;&#xA;    // fetch by 'productId'&#xA;&#xA;);&#xA;</code></pre>&#xA;",12541627,,,,2022-11-09 17:26:44,How to run useQuery inside forEach?,<javascript><graphql><hook><apollo>,3,3,0,2020-03-24 11:31:32
60866009,2,,60853334,0,,<p>Thanks @xadm use of another <code>map()</code> or single <code>track.likes[0].id</code> works!</p>&#xA;,9485934,,,,2020-03-26 11:17:29,"",,0,0,0,2020-03-26 11:17:29
60870433,2,,60861832,0,,"<p>If the returned data you want to map is still in object form then you need to convert the object to an array.</p>&#xA;&#xA;<p><code>Object.values(data.detailsData)</code> to get an array of <em>just</em> the values, or <code>Object.entries(data.detailsData)</code> to get an array of the key-value pairs, i.e. <code>[[key1, value1], [key2, value2], ...[keyN, valueN]]</code>.</p>&#xA;&#xA;<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Object/values"" rel=""nofollow noreferrer"">Object.values</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>The <code>Object.values()</code> method returns an array of a given object's own&#xA;  enumerable property values, in the same order as that provided by a&#xA;  <code>for...in</code> loop.</p>&#xA;</blockquote>&#xA;&#xA;<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries"" rel=""nofollow noreferrer"">Object.entries()</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>The <code>Object.entries()</code> method returns an array of a given object's own&#xA;  enumerable string-keyed property <code>[key, value]</code> pairs, in the same order&#xA;  as that provided by a <code>for...in</code> loop.</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>return Object.values(detailsData).map(post =&gt; (&#xA;  &lt;div&gt;&#xA;    &lt;p&gt;{post.id}&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;));&#xA;</code></pre>&#xA;",8690857,,,,2020-03-26 15:15:08,"",,0,0,0,2020-03-26 15:15:08
60871860,1,,,1,4446,"<p>I get this error when i try to return a custom dto from a resolver. <code>(node:28156) UnhandledPromiseRejectionWarning: Error: Cannot determine GraphQL output type for getProducts</code> </p>&#xA;&#xA;<p>Here is what my code looks like.</p>&#xA;&#xA;<p>product.entity.ts</p>&#xA;&#xA;<pre><code>import {&#xA;  Entity,&#xA;  Column,&#xA;  PrimaryGeneratedColumn,&#xA;  BaseEntity,&#xA;  BeforeInsert,&#xA;} from 'typeorm';&#xA;import { ObjectType, Field, ID, Float, Int } from '@nestjs/graphql';&#xA;&#xA;@ObjectType()&#xA;@Entity()&#xA;export class Product extends BaseEntity {&#xA;  @Field(() =&gt; ID)&#xA;  @PrimaryGeneratedColumn('uuid')&#xA;  id: string;&#xA;&#xA;  @Column({ default: '', select: false })&#xA;  ratingsString: string;&#xA;&#xA;  @Field(() =&gt; [Int])&#xA;  ratings;&#xA;&#xA;  @BeforeInsert()&#xA;  setRatingsString() {&#xA;    this.ratingsString = this.ratings.join(',');&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>product.resolver.ts</p>&#xA;&#xA;<pre><code>import { Resolver, Query, Args, ResolveField, Int, Parent } from '@nestjs/graphql';&#xA;&#xA;import { Product } from './product.entity';&#xA;import { ProductService } from './product.service';&#xA;&#xA;@Resolver(() =&gt; Product)&#xA;export class ProductResolver {&#xA;  constructor(private productService: ProductService) {}&#xA;&#xA;  @Query(() =&gt; GetProductDto, { name: 'products' })&#xA;  async getProducts(@Args() page: number) {&#xA;    return this.productService.getProducts(page);&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>product.service.ts</p>&#xA;&#xA;<pre><code>import { Injectable } from '@nestjs/common';&#xA;import { InjectRepository } from '@nestjs/typeorm';&#xA;import { Repository } from 'typeorm';&#xA;&#xA;import { Product } from './product.entity';&#xA;import { GetProductDto } from './product.dto';&#xA;&#xA;@Injectable()&#xA;export class ProductService {&#xA;  constructor(&#xA;    @InjectRepository(Product) private productRepo: Repository&lt;Product&gt;,&#xA;  ) {}&#xA;&#xA;  async getProducts(page: number): Promise&lt;GetProductDto&gt; {&#xA;    const MAX_PRODUCT_PER_PAGE = 20;&#xA;    const start = page &lt; 1 ? 1 : page;&#xA;&#xA;    const [products, productsCount] = await this.productRepo.findAndCount({&#xA;      skip: (start - 1) * MAX_PRODUCT_PER_PAGE,&#xA;      take: MAX_PRODUCT_PER_PAGE,&#xA;    });&#xA;&#xA;    const productList = products.map(product =&gt; {&#xA;      product.ratings = product.ratingsString.split(',').map(Number);&#xA;      delete product.ratingsString;&#xA;      return product;&#xA;    });&#xA;&#xA;    return {&#xA;      products: productList,&#xA;      total: productsCount,&#xA;    };&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>product.dto.ts</p>&#xA;&#xA;<pre><code>import { Field, Int, InputType } from '@nestjs/graphql';&#xA;import { Product } from './product.entity';&#xA;&#xA;@InputType()&#xA;export class GetProductDto {&#xA;  @Field(() =&gt; [Product])&#xA;  products: Product[];&#xA;&#xA;  @Field(() =&gt; Int)&#xA;  total: number;&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>The expectation here is that when i call the products query i will recieve an object with products and total. Whee products will be my array of products. What am I doing wrong?</p>&#xA;",11241558,,,,2020-03-27 02:06:18,Nest Error: Cannot determine GraphQL output type for getProducts,<graphql><nestjs><typeorm>,1,0,0,2020-03-26 16:32:04
60888187,2,,60884438,0,,<p>We can customize the JSON packet size easily.</p>&#xA;&#xA;<pre><code>app.use(bodyParser.json({limit: '5mb'}));&#xA;</code></pre>&#xA;,4182755,,,,2020-03-27 14:37:10,"",,0,0,0,2020-03-27 14:37:10
60908737,1,,,0,87,"<p>I'm working with apollo local state and hoping for help to better understand it and fix my query</p>&#xA;&#xA;<p>Here is what my local apollo state looks like.</p>&#xA;&#xA;<pre><code>cache.writeData({&#xA;  data: {&#xA;    cart: {&#xA;      items: [],&#xA;      total: 0,&#xA;      __typename: 'CART_INFORMATION'&#xA;    },&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Where <code>item</code> is an array of objects. Each object is in the form of</p>&#xA;&#xA;<pre><code>{&#xA; productId: string,&#xA; quantity: number&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When my cart page loads, i want to fetch more details about my cart to display on the page. Here is my query.</p>&#xA;&#xA;<pre><code>export const GET_CART_PRODUCTS_DETAILS = gql`&#xA;  query productDetails($productIds: [ID]!) {&#xA;    cartProducts(productIds: $productIds) {&#xA;      id&#xA;      name&#xA;      price&#xA;      imageUrl&#xA;      company&#xA;      quantity @client&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;</code></pre>&#xA;&#xA;<p>My main concern is here <code>quantity @client</code>. Since the <code>cartProducts</code> query receives an array of ids, i'm not sure how its going to get the quantity of each product from my local state.</p>&#xA;&#xA;<p>Any help/explanation about how to better structure this is appreciated. I have read the docs, but this use case wasn't covered so i don't know if its supported.</p>&#xA;",11241558,,,,2020-03-29 00:26:13,Apollo GraphQL Remote and Local Queries,<graphql><apollo><apollo-client>,0,3,0,2020-03-29 00:26:13
60924552,2,,60922054,9,,"<p>You are missing the slicing field, here you can put <code>first: 100</code> to get the first 100 languages for the repository: </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  user(login: ""torvalds"") {&#xA;    repositories(first: 100) {&#xA;      nodes {&#xA;        primaryLanguage {&#xA;          name&#xA;        }&#xA;        languages(first: 100) {&#xA;          nodes {&#xA;            name&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If you want to have stats per language (eg if you want to know which is the second, third language etc...) I'm affraid this is not currently possible with the graphql API but using the <a href=""https://developer.github.com/v3/repos/#list-languages"" rel=""noreferrer"">List Languages API Rest</a> for instance <a href=""https://api.github.com/repos/torvalds/linux/languages"" rel=""noreferrer"">https://api.github.com/repos/torvalds/linux/languages</a></p>&#xA;",2614364,,,,2020-03-30 05:26:49,"",,0,0,0,2020-03-30 05:26:49
60956887,2,,60956694,0,,"<p>You're missing a closing parenthesis after ""My Office"" to indicate the end of your argument list.</p>&#xA;&#xA;<p>Assuming you're using <code>apollo-server</code>, <code>express-graphql</code> or a similar library for your HTTP server, you should have a Graph<em>i</em>QL or GraphQL Playground interface exposed that you can use to test your queries. If not, you can also use a standalone client. In either case, you'll have a way to write and test your queries inside an editor that has autocompletion and syntax highlighting, making it easier to catch syntax errors like that.</p>&#xA;&#xA;<p>You may also find it helpful to use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals"" rel=""nofollow noreferrer"">template literals</a> when writing your queries on the front end in order to avoid having to put everything on one line.</p>&#xA;",6024220,,,,2020-03-31 17:53:39,"",,0,2,0,2020-03-31 17:53:39
60975288,1,,,0,279,"<p>I have a question below:</p>&#xA;&#xA;<p>Let's say I have a product type like this</p>&#xA;&#xA;<pre><code>type Option {&#xA;  id: Int!&#xA;  value: String!&#xA;}&#xA;&#xA;type Product{&#xA;  id: Int!&#xA;  name: String!&#xA;  price: Float!&#xA;  options: Option&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If I have a schema like that, every time I need product options (I have productID from the request), I need to query the entire product (with id, name, price) and I will have 2 Mysql queries to Database (1 to get product and 1 to get product options). </p>&#xA;&#xA;<p>Should I have an additional standalone field in Query object like this to get product option base on productID? And if I need to keep nested schema like above, is there any way to get product options without executing it's parent(Product) resolver?</p>&#xA;&#xA;<pre><code>product_options(productId: Int!) : Option&#xA;</code></pre>&#xA;&#xA;<p>Thanks</p>&#xA;",12742966,,12742966,2020-04-02 14:48:37,2020-04-02 14:48:37,Graphql schema design best practice,<graphql><graphql-schema>,1,0,0,2020-04-01 16:05:00
60996942,1,,,0,440,"<p>I created a GraphQL wrapper for <a href=""https://pokeapi.co/"" rel=""nofollow noreferrer"">PokeAPI</a>. My queries all work in development fine and most of them work in production. However, I have the following query that works in production for smaller <code>start</code> and <code>end</code> ranges, but throws <code>""ServerParseError: Unexpected token &lt; in JSON at position 0""</code> when I try to query for all of the pokemon with a very large range. This error does not happen in development.</p>&#xA;&#xA;<pre><code>query {&#xA;    allPokemon(start: 0, end: 964) {&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My resolver in my GraphQL for <code>allPokemon</code> only hits one REST endpoint and comes back with an array of objects that have the following structure:</p>&#xA;&#xA;<pre><code>{&#xA;  name: ""charmander"",&#xA;  url: ""https://pokeapi.co/api/v2/pokemon/4/""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My resolver maps over the resulting array to grab the <code>name</code> value and to parse the <code>url</code> value to grab the id number at the end of the string. </p>&#xA;&#xA;<p>Not sure if this is relevant/necessary to include here, but I am using <code>apollo-datasource-rest</code>. I created a class component that extends <code>RESTDataSource</code> that has abstracted out my functions for my GraphQL resolvers. Then I simply call those methods inside of my resolvers. My <code>allPokemon</code> method inside this <code>RESTDataSource</code> component looks like this:</p>&#xA;&#xA;<pre><code>async getAllPokemon(start = 0, end = 964) {&#xA;        const response = await this.get(`pokemon?offset=${start}&amp;limit=${end}`);&#xA;&#xA;        const pokemonIds = response.results.map(pokemon =&gt;&#xA;            parseUrl(pokemon.url)&#xA;        );&#xA;&#xA;        return pokemonIds;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p><code>parseUrl</code> is a utils function I created that just takes a url and parses it to grab the number at the end of the url after the last <code>/</code>. </p>&#xA;&#xA;<p>Then in my resolvers, I have the following: </p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;  Query: {&#xA;    allPokemon: (parent, args, { dataSources }) =&gt; {&#xA;            return dataSources.pokemonAPI.getAllPokemon(args.start, args.end);&#xA;        }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I can't seem to figure out if this is an issue with Heroku or with Apollo Server. My guess was with Heroku since I have no problems in development getting the expected data for all of the queries. I thought perhaps Heroku must have some limitations as far as timing out or how how many iterations of the parsing function it can do, but have been unable to confirm this theory, let alone find a solution. Any help is appreciated!</p>&#xA;",13058192,,,,2020-04-02 16:56:39,"Heroku Apollo Server throws ""ServerParseError: Unexpected token < in JSON at position 0"" only for some queries",<heroku><graphql><apollo><apollo-server>,0,4,0,2020-04-02 16:56:39
61000440,2,,53061783,2,,"<p>So I had the same issue and I was able to make it work on a very simple way.</p>&#xA;&#xA;<p>So I've been strugling for a while trying to make this graphQL request with Restassured in order to validate the response (amazing how scarce is the info about this) and since yesterday I was able to make it work, thought sharing here might help someone else.</p>&#xA;&#xA;<p>What was wrong? By purely copying and pasting my Graphql request (that is not json format) on the request was not working. I kept getting error ""Unexpected token t in JSON at position"". So I thought it was because graphql is not JSON or some validation of restassured. That said I tried to convert the request to JSON, imported library and lot of other things but none of them worked.</p>&#xA;&#xA;<p>My grahql query request:</p>&#xA;&#xA;<pre><code>String reqString = ""{ trade  { orders { ticker } }}\n"";&#xA;</code></pre>&#xA;&#xA;<p>How did I fixed it? By using postman to format my request. Yes, I just pasted on the QUERY window of postman and then clicked on code button on the right side (fig. 1). That allowed my to see my request on a different formatt, a formatt that works on restassured (fig. 2). PS: Just remeber to configure postman, which I've pointed with red arrows.</p>&#xA;&#xA;<p>My grahql query request FORMATTED:</p>&#xA;&#xA;<pre><code>String reqString = {""query"":""{ trade  { orders { ticker } }}\r\n"",""variables"":{}}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/kkMsJ.png"" rel=""nofollow noreferrer"">Fig 1.</a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/aVHtj.png"" rel=""nofollow noreferrer"">Fig 2.</a></p>&#xA;&#xA;<p>Hope it helps you out, take care!</p>&#xA;",13040615,,,,2020-04-02 20:22:04,"",,0,0,0,2020-04-02 20:22:04
61011130,1,,,3,218,"<p>I want to change style by scrolling. </p>&#xA;&#xA;<p>This code isn't working correctly&#xA;.&#xA;When I rolling up and down too many times and too fast, then the browser is going to freeze, crash.</p>&#xA;&#xA;<p>I think I used <code>useEffect()</code> wrong. How can I solve this issue.</p>&#xA;&#xA;<pre><code>const ArticleItem = ({title, content, active, chapter, program, id, scrollPos}) =&gt; {&#xA;  const ref = useRef(null);&#xA;  const client = useApolloClient();&#xA;&#xA;  useEffect(() =&gt; {&#xA;    if(ref.current.offsetTop &lt;= (scrollPos + 200)) {&#xA;      client.writeData({data: {&#xA;        curChapter: chapter.num,&#xA;        curArticle: id,&#xA;        curProgram: program.name&#xA;      }});&#xA;    }&#xA;  });&#xA;&#xA;  if(active === false)&#xA;    return ( // Inactive Article&#xA;      &lt;div className='section-item' ref={ref}&gt;&#xA;        &lt;h2&gt;{title.toUpperCase()}&lt;/h2&gt;&#xA;        &lt;ReactMarkdown source={content} /&gt;&#xA;        &lt;br /&gt;&#xA;      &lt;/div&gt;&#xA;    )&#xA;  return (  // Active Article&#xA;    &lt;div className='section-item active' ref={ref}&gt;&#xA;      &lt;h2&gt;{title.toUpperCase()}&lt;/h2&gt;&#xA;      &lt;ReactMarkdown source={content} /&gt;&#xA;      &lt;br /&gt;&#xA;    &lt;/div&gt;&#xA;  )&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As a Result, I faced this warning.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Warning: Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.</p>&#xA;</blockquote>&#xA;&#xA;<p>I think this is the reason of issue?!</p>&#xA;",13210394,,7599510,2020-04-03 11:50:55,2020-04-03 11:56:49,How to use useEffect() correctly?,<javascript><reactjs><graphql><react-hooks>,2,4,0,2020-04-03 11:43:30
61017020,1,,,0,18,"<p>I am creating a Shopify app that takes in information from the user and creates a product from that information. I am using react-apollo and graphql. I got it working with just the product title, vendor and type, but it doesn't work when I try to add a price or any other variant information. So I believe the issue is in my graphql syntax, but I've tried everything I could research. Any suggestions as to why this might not be working is much appreciated.</p>&#xA;&#xA;<pre><code>const New_Product = gql`&#xA;      mutation {&#xA;        productCreate(input: {&#xA;          title: ""${PartManufacturer} ${PartMake} ${ModelName}"", &#xA;          productType: ""${PartType}"", &#xA;          vendor: ""${this.state.Vendor}"",&#xA;&#xA;          variants: [{&#xA;            price: ""${this.state.Price}"",&#xA;            compareAtPrice: ""${this.state.CompareAtPrice}"",&#xA;            sku: ""${this.state.SKU}"",&#xA;            barcode: ""${this.state.Barcode}"",&#xA;            weight: ""${this.state.Weight}""&#xA;          }]&#xA;        }) &#xA;        {&#xA;          userErrors {&#xA;            field,&#xA;            message&#xA;          }&#xA;        }&#xA;      }&#xA;    `;&#xA;&#xA;      return (&#xA;        &lt;Mutation mutation={New_Product}&gt;&#xA;          {(createProduct, { data }) =&gt; (&#xA;            &lt;div&gt;&#xA;&#xA;                &lt;button type=""submit"" onClick={createProduct}&gt;Create Product&lt;/button&gt;&#xA;&#xA;            &lt;/div&gt;&#xA;          )}&#xA;        &lt;/Mutation&gt;&#xA;      );&#xA;</code></pre>&#xA;",13213851,,,,2020-04-03 17:11:54,Issue using Graphql in my react app. I just can't get the variable section to work,<reactjs><graphql><shopify>,0,2,0,2020-04-03 17:11:54
61040541,1,,,0,761,"<p>My problem is that I would like to connect my Shopify store with gatsby app. So I had installed gatsby-source-shopify, but when I added plugin to <code>gatsby-config.js</code> with shopName and accessToken and try to run gatsby develop, site renders as expected but it throws this error: </p>&#xA;&#xA;<pre><code>gatsby-source-shopify/gatsby-ecommerce-testing starting to fetch data from Shopify&#xA;&#xA; ERROR &#xA;&#xA;&#xA;error an error occurred while sourcing data&#xA;&#xA;&#xA; ERROR &#xA;&#xA;query: &#xA;  """"""&#xA;&#xA;      query GetCollections($first: Int!, $after: String) {&#xA;        collections(first: $first, after: $after) {&#xA;          pageInfo {&#xA;            hasNextPage&#xA;          }&#xA;          edges {&#xA;            cursor&#xA;            node {&#xA;              description&#xA;              descriptionHtml&#xA;              handle&#xA;              id&#xA;              image {&#xA;                altText&#xA;                id&#xA;                src&#xA;              }&#xA;              products(first: 250) {&#xA;                edges {&#xA;                  node {&#xA;                    id&#xA;                  }&#xA;                }&#xA;              }&#xA;              title&#xA;              updatedAt&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;&#xA;  """"""&#xA;variables: &#xA;  first: 250&#xA;  after: null&#xA;&#xA;</code></pre>&#xA;&#xA;<p>Does anyone know how to solve it?</p>&#xA;",12100611,,,,2020-05-23 21:47:11,gatsby-source-shopify and graphql error an error occurred while sourcing data,<javascript><reactjs><graphql><gatsby>,2,3,0,2020-04-05 09:30:29
61044487,2,,61039416,0,,"<p>contact.name has search_analyzer as ""standard"" and index analyzer as ""autocomplete""(settings not available in question). Your issue is because field is converted to different tokens while indexing and searching so they are not matching.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Usually, the same analyzer should be applied at index time and at&#xA;  search time, to ensure that the terms in the query are in the same&#xA;  format as the terms in the inverted index.</p>&#xA;  &#xA;  <p>Sometimes, though, it can make sense to use a different analyzer at&#xA;  search time, such as when using the edge_ngram tokenizer for&#xA;  autocomplete.</p>&#xA;</blockquote>&#xA;&#xA;<p>ex. with below settings</p>&#xA;&#xA;<pre><code>""settings"": {&#xA;    ""analysis"": {&#xA;      ""filter"": {&#xA;        ""autocomplete_filter"": {&#xA;          ""type"": ""edge_ngram"",&#xA;          ""min_gram"": 3,&#xA;          ""max_gram"": 3&#xA;        }&#xA;      },&#xA;      ""analyzer"": {&#xA;        ""autocomplete"": { &#xA;          ""type"": ""custom"",&#xA;          ""tokenizer"": ""standard"",&#xA;          ""filter"": [&#xA;            ""lowercase"",&#xA;            ""autocomplete_filter""&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  ""mappings"": {&#xA;  .....&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>Following tokens will be stored in index</p>&#xA;&#xA;<pre><code>GET index79/_analyze&#xA;{&#xA;  ""text"": ""FGTHSF-2124-645"",&#xA;  ""analyzer"": ""autocomplete""&#xA;}&#xA;&#xA;{&#xA;  ""tokens"" : [&#xA;    {&#xA;      ""token"" : ""fgt"",&#xA;      ""start_offset"" : 0,&#xA;      ""end_offset"" : 6,&#xA;      ""type"" : ""&lt;ALPHANUM&gt;"",&#xA;      ""position"" : 0&#xA;    },&#xA;    {&#xA;      ""token"" : ""212"",&#xA;      ""start_offset"" : 7,&#xA;      ""end_offset"" : 11,&#xA;      ""type"" : ""&lt;NUM&gt;"",&#xA;      ""position"" : 1&#xA;    },&#xA;    {&#xA;      ""token"" : ""645"",&#xA;      ""start_offset"" : 12,&#xA;      ""end_offset"" : 15,&#xA;      ""type"" : ""&lt;NUM&gt;"",&#xA;      ""position"" : 2&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now when you are searching for ""query"": ""HSF-2124-6"", it will not return any document([""HSF"",""2124"",""6""]) as 6 is not present in any token. To return document you need to change ""min_gram"" to 1 to generate tokens of size 1 , 3 and 3(645=> 6 64 645).</p>&#xA;&#xA;<p>If you are not using edge gram then please add autocomplete definition </p>&#xA;&#xA;<p>Edit 1:</p>&#xA;&#xA;<p>If you will see in your snapshot min gram size is 5 and max gram 20. Minimum token generated is of size 5 ex ""Abhijeet"" tokens generated for these will be ""Abhij"",""Abhije"",""Abhijee"",""Abhjieet"". So any text less that size 5 will not match ex ""Abhi"". In your case take text after splitting on hyphen(""-"") so 6 is not matching.&#xA;You need to update your index settings and make min-gram:1.</p>&#xA;&#xA;<p>Steps.&#xA;1. POST /index80/_close <br /></p>&#xA;&#xA;<ol start=""2"">&#xA;<li>Below is just an example in your settings copy entire analysis part , update mingram and so a PUT request <br /></li>&#xA;</ol>&#xA;&#xA;<pre><code>PUT index80/_settings&#xA;{&#xA;    ""analysis"": {&#xA;      ""analyzer"": {&#xA;        ""my_analyzer"": {&#xA;          ""tokenizer"": ""my_tokenizer""&#xA;        }&#xA;      },&#xA;      ""tokenizer"": {&#xA;        ""my_tokenizer"": {&#xA;          ""type"": ""edge_ngram"",&#xA;          ""min_gram"": 1,&#xA;          ""max_gram"": 10,&#xA;          ""token_chars"": [&#xA;            ""letter"",&#xA;            ""digit""&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p><br />&#xA;3. POST /index80/_open<br /></p>&#xA;&#xA;<p>Check <a href=""https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-update-settings.html"" rel=""nofollow noreferrer"">here</a> on how to update settings for further info.</p>&#xA;&#xA;<p>Note: Reducing min size will cause creation of additional tokens and will increase size of your index. Choice of min and max gram should be based on your query text size </p>&#xA;",9279354,,9279354,2020-04-06 05:48:05,2020-04-06 05:48:05,"",,0,1,0,2020-04-05 14:52:44
61045272,2,,60565372,0,,<p>I tried and didn't get the effect so I cannot test it. And it means two things:</p>&#xA;&#xA;<ol>&#xA;<li><p>You have another extension installed on your vscode which has a bug or has conflicts with the original editor's color validation.</p></li>&#xA;<li><p>Your vscode has some settings turned off.</p></li>&#xA;</ol>&#xA;&#xA;<p>I guess the first one is correct. Please disable all extensions and test if it is ok then turn them on one by one and see which one make problems.</p>&#xA;&#xA;<p>I saw comments above after I wrote this. And it seems <code>Matt Bierner</code> has also mentioned something like this. If this works give him a thumbs up as he said it sooner ;)</p>&#xA;,1162551,,,,2020-04-05 15:52:15,"",,0,0,0,2020-04-05 15:52:15
61074523,2,,57919207,0,,"<p>Attention! You have to work with multiple Apollo-Links then like using WebSocketLink, Http-Link and the Retry-Link the Retry-Link has to be the first Link in the Array of Apollo-Links. Otherwise it wont work.</p>&#xA;",10054217,,,,2020-04-07 07:07:33,"",,0,0,0,2020-04-07 07:07:33
61090380,1,,,2,636,"<p>I have a table in a database that stores products to buy (let's call the table Product). It's necessary to track changes of every product. I have 2 ideas for versioning records.</p>&#xA;&#xA;<p>First is to create a new record in Product by copying the product and override the fields that differ and keep the reference in the record for the older and newer version. In that case a record in Product table is read-only except the field that indicate whether the product is archived or not.</p>&#xA;&#xA;<p>Second is to create 2 tables: Product and ArchivisedProduct. The Product's records are editable, but for each change is created a new record in ArchivisedProduct where differences only are stored (so except an id, all fields are nullable) and tables' fields hold references to each other.</p>&#xA;&#xA;<p>Do you know any tool that could manage that process and works well with Node.js, Prisma, PostgreSQL and Apollo? For such use winston/papertrail was recomended for me, but as I read the docs it seems that it only creates logs.</p>&#xA;&#xA;<p>Exemplary database structure for more clearance:&#xA;1st example:</p>&#xA;&#xA;<pre><code>type Product {&#xA;  id: Int! @id&#xA;  name: String!&#xA;  price: Float!&#xA;  archived: Boolean!&#xA;  productVersionIds: [Product]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>2nd example:</p>&#xA;&#xA;<pre><code>type Product {&#xA;  id: Int! @id&#xA;  name: String!&#xA;  price: Float!&#xA;  archivisedProductIds: [ArchivisedProduct]! @relation(name: ""ProductToArchiva"")&#xA;}&#xA;&#xA;type ArchivisedProduct {&#xA;  id: Int! @id&#xA;  name: String&#xA;  price: Float&#xA;  product: Product! @relation(name: ""ProductToArchiva"")&#xA;}&#xA;</code></pre>&#xA;",2319899,,,,2020-04-08 21:08:43,How to version records of table in database?,<node.js><postgresql><graphql><prisma><database-versioning>,1,0,0,2020-04-07 22:26:20
61092145,2,,61062230,0,,"<p>You've defined <code>imageHere</code> as a required array of strings with this: <code>imageHere: [String]!</code>.</p>&#xA;&#xA;<p>If it's actually supposed to be an optional image node, you might want to instead define it as the correct type (something like <code>GatsbyImage</code>, but I can't recall exactly what it is off-hand—you should be able to check in graphiql). That would look more like <code>imageHere: GatsbyImage</code> (no bang, no square brackets).</p>&#xA;",203130,,,,2020-04-08 01:51:28,"",,0,4,0,2020-04-08 01:51:28
61098244,2,,61098074,2,,"<p>Not sure if this will be enough to fix, but try replacing all this:</p>&#xA;&#xA;<pre><code>const userPosts = [&#xA;  ...state.userPosts.slice(0, index),&#xA;  ...state.userPosts.slice(index + 1),&#xA;];&#xA;commit(""setUserPosts"", userPosts);&#xA;</code></pre>&#xA;&#xA;<p>with</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>commit(""removeUserPost"", index)&#xA;</code></pre>&#xA;&#xA;<p>And create that mutation:</p>&#xA;&#xA;<pre><code>removeUserPost(state, index) {&#xA;  state.userPosts.splice(index, 1);  // &lt;-- `splice` not `slice` here&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If this isn't enough, make sure you are using <code>userPosts</code> in the component like:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>computed: {&#xA;  userPosts() {&#xA;    return this.$store.state.userPosts;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2185093,,,,2020-04-08 10:13:01,"",,0,5,0,2020-04-08 10:13:01
61108880,1,,,1,307,"<p>I would like to modify this string:</p>&#xA;&#xA;<pre><code>query = """"""&#xA;    mutation { &#xA;     productUpdate(input: {id: ""gid://shopify/Product/463...03"", title: ""test"", descriptionHtml: ""Amazing product""}) {&#xA;       product {&#xA;         id&#xA;       }&#xA;       userErrors {&#xA;         field&#xA;         message&#xA;        }&#xA;      }&#xA;     }&#xA;  """"""&#xA;</code></pre>&#xA;&#xA;<p>I'm trying to put a variable in the place of ""test"" and ""Amazing product"". Normally i would do this with f-strings, but because of the GraphQL brackets i cannot do this.</p>&#xA;&#xA;<p>Does anyone have an idea on how to solve this problem?</p>&#xA;&#xA;<p>Many thanks!</p>&#xA;",3503860,,,,2022-02-25 10:20:29,Create GraphQL query in python,<python><graphql>,3,0,0,2020-04-08 19:48:41
61110064,2,,61090380,0,,"<p>Depending on how many products you intend to store, it may be simpler to have each Product version stored in the <code>ProductVersion</code> model, and then keep tabs on the latest Product (the ""head"") in a <code>Product</code> model.</p>&#xA;&#xA;<p>You'd have:</p>&#xA;&#xA;<pre><code>type ProductVersion {&#xA;  id: Int! &#xA;  version: Int!&#xA;  name: String!&#xA;  price: Float!&#xA;&#xA;  @@id([id, version])&#xA;}&#xA;&#xA;type Product {&#xA;  productId: Int! @id&#xA;  headVersion: Int!&#xA;  productVersion: Product! @relation(fields: [productId, headVersion], references: [id, version])&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>For each change to a Product, you'd store the new <code>ProductVersion</code> containing the information, and update the corresponding <code>Product</code> to point the headVersion to the new <code>ProductVersion</code>. That would all be part of a single transaction to ensure consistency.</p>&#xA;&#xA;<p>To query your list of products you'd use the <code>Product</code> object and join the <code>ProductVersion</code>.&#xA;If you store a lot of products and joining is a concern, you con consider having a copy of the whole <code>ProductVersion</code> data in the <code>Product</code> instead of using a relation through the <code>headVersion</code> field.</p>&#xA;&#xA;<p>Note that it also would imply you'd compute diff at runtime, and not have them stored directly in the database itself.</p>&#xA;",1092480,,,,2020-04-08 21:08:43,"",,0,0,0,2020-04-08 21:08:43
61110978,1,61112213,,0,73,"<p>I'm working with a very large normalized and recursive object.  I want to get the list of all recursive items.  Should I use an argument or a custom resolver?</p>&#xA;&#xA;<p>My object looks like:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;  products: [{&#xA;    product_id: ""car"",&#xA;    bundle_id: 5&#xA;  },{&#xA;    product_id: ""door""&#xA;    bundle_id: 6&#xA;  },&#xA;  { product_id: ""wheel"" },&#xA;  { product_id: ""metal"" },&#xA;  { product_id: ""glass"" }],&#xA;&#xA;  bundles: [{&#xA;    bundle_id: 5,&#xA;    options: [{product_id: ""door""},{product_id: ""wheel""}]&#xA;  },&#xA;  {&#xA;    bundle_id: 6,&#xA;    options: [{product_id: ""metal""},{product_id: ""glass""}]&#xA;  }]&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You might notice that ""car"" is a <code>bundle</code> that has a <code>door</code> and a <code>wheel</code>.  ""door"" is also a <code>bundle</code> that has <code>metal</code> and <code>glass</code>.  This structure could recurse indefinitely. That is, a bundle could have infinitely more bundle products underneath it.</p>&#xA;&#xA;<p>I want to get a list of all products for a bundle (example: ""car"").  What is the best approach?</p>&#xA;&#xA;<p>I see two options.  </p>&#xA;&#xA;<p>First Option - use a custom resolver, for example <code>child_products</code> that would recurse and resolve to a flat array of all children:</p>&#xA;&#xA;<pre><code>products(product_id: ""car"") {&#xA;  product_id&#xA;  bundle {&#xA;    options {&#xA;      product_id&#xA;    }&#xA;  }&#xA;  child_products {&#xA;    product_id&#xA;    bundle {&#xA;      options {&#xA;        product_id&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Second Option - use an argument that specifies including all children:</p>&#xA;&#xA;<pre><code>products(product_id: ""car"", include_children: true) {&#xA;  product_id&#xA;  bundle {&#xA;    options {&#xA;      product_id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm going to build a JS library that can take the array of products and options and build the nested structure. Please let me know what you think is the right way.  Thanks!</p>&#xA;",161238,,,,2020-04-09 00:40:59,GraphQL - When to use a resolver or an argument with recursive and normalized data?,<graphql>,1,0,0,2020-04-08 22:21:04
61123315,1,,,1,478,"<p>We need to use Calculated Fields (the equivalent of JMSSerializer's @VirtualProperty for API Platform) and all is fine and dandy when we interact with the backend the old school way. However, we can't figure out how to query this calculated field on the GraphQL endpoint. For example:</p>&#xA;&#xA;<pre><code>/**&#xA;     * Undocumented function.&#xA;     *&#xA;     * @Serializer\VirtualProperty()&#xA;     * @Groups({""read""})&#xA;     */&#xA;    public function getSlug()&#xA;    {&#xA;        return $this-&gt;name.$this-&gt;description;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Regular query: </p>&#xA;&#xA;<pre><code>curl -X GET ""http://127.0.0.1:8000/platform/api/properties?page=1"" -H ""accept: application/ld+json""...&#xA;</code></pre>&#xA;&#xA;<p>Regular result:</p>&#xA;&#xA;<pre><code>{&#xA;  ""@context"": ""/platform/api/contexts/Property"",&#xA;  ""@id"": ""/platform/api/properties"",&#xA;  ""@type"": ""hydra:Collection"",&#xA;  ""hydra:member"": [&#xA;    {&#xA;      ""@id"": ""/platform/api/properties/1"",&#xA;      ""@type"": ""Property"",&#xA;      ""area"": ""0.00"",&#xA;      ""bathroomCount"": 2,&#xA;      ""bedroomCount"": 2,&#xA;      ""floorCount"": 2,&#xA;      ""description"": ""bar"",&#xA;      ""name"": ""foo"",&#xA;      ""slug"": ""foobar"" // The calculated property&#xA;    },...&#xA;</code></pre>&#xA;&#xA;<p>GraphQL query:</p>&#xA;&#xA;<pre><code>{&#xA;  properties {&#xA;    edges {&#xA;      node {&#xA;        slug&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>GraphQL result:</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Cannot query field \""slug\"" on type \""Property\""."",&#xA;      ""extensions"": {&#xA;        ""category"": ""graphql""&#xA;      },&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 5,&#xA;          ""column"": 9&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Thanks.</p>&#xA;",2794413,,,,2021-02-21 06:30:49,API Platform - GraphQL - how to query for a Calculated Field?,<symfony><graphql><symfony4><api-platform.com><symfony5>,1,3,0,2020-04-09 14:19:24
61125529,1,,,2,117,"<p>For example, for the file 'a.txt', I want to know the path of this file in the repo B. How should I do?</p>&#xA;",7065052,,7065052,2020-04-09 16:23:48,2020-04-09 16:23:48,Can I use GitHub GraphQL API to search the path of a file in a specific repository？,<github><graphql><github-api><github-api-v4>,0,0,0,2020-04-09 16:12:08
61148727,1,,,1,326,"<p>If I have a query that starts like this:</p>&#xA;&#xA;<pre><code>export const pageQuery = graphql`&#xA;{&#xA;homepage: wordpress {&#xA;  pages(where: { title: ""Homepage"" }) {&#xA;    nodes {&#xA;      isFrontPage&#xA;      blocks {&#xA;        name&#xA;        ... on WORDPRESS_CoreHeadingBlock {&#xA;          name&#xA;          attributes {&#xA;            align&#xA;            content&#xA;            level&#xA;          }&#xA;        }&#xA;        ... on WORDPRESS_CoreParagraphBlock {&#xA;          parentId&#xA;          name&#xA;          attributes {&#xA;            ... on WORDPRESS_CoreParagraphBlockAttributesV3 {&#xA;              content&#xA;              align&#xA;            }&#xA;          }&#xA;        }&#xA;</code></pre>&#xA;&#xA;<p>whereby I could have dozens of different Gutenberg blocks coming through, and then repeating them as InnerBlocks, what is the right way to break this into fragments or better organize it?</p>&#xA;&#xA;<p>I'm running into a situation where my query ends up hundreds of lines long to account for nested blocks.</p>&#xA;&#xA;<p>I'm working on a WP Gutenberg block parser for Gatsby and don't quite know the right way to approach these block queries.</p>&#xA;&#xA;<p>Thanks!</p>&#xA;",901649,,,,2020-04-10 21:09:37,GraphQL fragments for wp-graphql Gutenberg Blocks,<graphql><advanced-custom-fields><gatsby><wp-graphql>,0,0,0,2020-04-10 21:09:37
61153737,1,61155394,,0,275,"<p>I'm using GraphQL in Laravel and I'm encountering this issue:</p>&#xA;&#xA;<p>I've set <code>id</code> type to <strong>string</strong> but when I get my query through GraphQL, I get <code>553366</code> instead of <code>0553366c-6ebe-4340-8929-419ad46f4d15</code>.</p>&#xA;&#xA;<p>Here is my type definition:</p>&#xA;&#xA;<pre><code>public function fields(): array&#xA;{&#xA;    return [&#xA;        'id' =&gt; [&#xA;            'type' =&gt; Type::string()&#xA;        ],&#xA;        'name_en' =&gt; [&#xA;            'type' =&gt; Type::string()&#xA;        ],&#xA;        'name_fa' =&gt; [&#xA;            'type' =&gt; Type::string()&#xA;        ],&#xA;        'description' =&gt; [&#xA;            'type' =&gt; Type::string()&#xA;        ],&#xA;        'img_url' =&gt; [&#xA;            'type' =&gt; Type::string()&#xA;        ],&#xA;        'created_at' =&gt; [&#xA;            'type' =&gt; Type::string()&#xA;        ],&#xA;        'updated_at' =&gt; [&#xA;            'type' =&gt; Type::string()&#xA;        ],&#xA;        'SubBusinessFields' =&gt; [&#xA;            'type' =&gt; Type::listOf(GraphQL::type('SubBusinessField'))&#xA;        ],&#xA;    ];&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I've <code>dd()</code> the <code>id</code> and it was correct.</p>&#xA;&#xA;<p>I've also tried <strong>id</strong> type instead of <strong>string</strong> but nothing changed.</p>&#xA;&#xA;<p>How to fix this issue?</p>&#xA;",11671686,,11671686,2020-04-11 08:07:50,2020-04-11 10:34:58,Laravel GraphQL UUID as ID does not work as expected,<laravel><graphql><uuid>,1,0,0,2020-04-11 08:02:36
61167538,2,,61165610,0,,"<p>In GraphiQL we can see that <code>destaque.edges</code> returns an <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"" rel=""nofollow noreferrer"">array</a> of edges. If we want to render everything in that array, we need to <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""nofollow noreferrer"">map</a> over it.</p>&#xA;&#xA;<p>If we know the index of the single <code>destaque</code> we want, we can access it directly with <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Objects_and_properties"" rel=""nofollow noreferrer"">bracket notation</a>.</p>&#xA;",5385381,,,,2020-04-12 06:09:41,"",,0,3,0,2020-04-12 06:09:41
61171086,1,,,1,564,"<p>I am building ListView from data acquired using graphql api.<br>&#xA;I am using flutter_graphql package to handle my request&#xA;Here is snippet of builder</p>&#xA;&#xA;<pre><code>build(BuildContext context){&#xA;return Query(&#xA;  options: QueryOptions(&#xA;    documentNode: gql(readRepositories),&#xA;    variables: {'nRepositories': 50},&#xA;  ),&#xA;  builder: (QueryResult result, { VoidCallback refetch, FetchMore fetchMore }) {&#xA;    if (result.hasException) {&#xA;        return Text(result.exception.toString());&#xA;    }&#xA;    if (result.loading) {&#xA;      return CircularProgressIndicator();&#xA;    }&#xA;    repositories = result.data['viewer']['repositories']['nodes'];&#xA;&#xA;    return ListView.builder(&#xA;      controller: repositoriesController,&#xA;      itemCount: repositories.length,&#xA;      itemBuilder: (context, index) {&#xA;        final repository = repositories[index];&#xA;&#xA;        return ListTile(&#xA;              leading: Icon(Icons.flight_land),&#xA;              title: Text(repository['name']),&#xA;              onTap: () {&#xA;        Navigator.of(context).push(MaterialPageRoute( builder: (context) =&gt; RepositoryDetail(repository: repository,))); &#xA;              }&#xA;        )&#xA;    });&#xA;  },&#xA;);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>my issue here is that, after user move to detail page. then when user click backButton this build will rebuild and create new request to api.   </p>&#xA;&#xA;<p>Notes:</p>&#xA;&#xA;<ol>&#xA;<li>There are filters will call this widget and rebuild it</li>&#xA;<li>There is pagination on scroll</li>&#xA;</ol>&#xA;&#xA;<p>How to handle this scenario?   </p>&#xA;",8131688,,,,2020-10-21 20:08:34,How to handle rebuild of graphql query when return to the page (Flutter)?,<flutter><dart><graphql><flutter-dependencies>,0,0,0,2020-04-12 12:01:07
61185689,1,,,1,252,"<p>I am trying to simplify the process of exporting GraphQL queries sent by my application for documentation purposes. For the record, I want to be able to paste those queries into Postman collections.</p>&#xA;&#xA;<p>Here are my different approaches:</p>&#xA;&#xA;<ul>&#xA;<li>Relying on .graphql files: first it's still very difficult to setup with a full fledged TypeScript + Webpack + Babel setup (using Next.js). Anyway, it does not provide variables, so you only have half the query.</li>&#xA;<li>Relying on the network tab. From there, we can copy queries content and import into Postman. Combined with Cypress it could provide an awesome workflow. It works OK, but Apollo Client will send queries as JSON objects, difficult to interpret</li>&#xA;<li>I tried to use the ""application/graphql"" content-type. It's way more readable and available in Postman. BUUUT it is non-standard, and thus not available in Apollo client.</li>&#xA;</ul>&#xA;&#xA;<p>So my question is rather open, but what are the possibilities to enable extracting graphql queries (and variables) sent by my browser and inject them into Postman?&#xA;Most promising solution is enabling ""application/graphql"" client side, or converting the JSON representation back to a string representation. But I could explore another possibility (eg using Apollo Engine as an intermediate)</p>&#xA;",5513532,,,,2020-11-23 20:28:55,Extract Graphql queries sent by a browser application with Apollo client,<graphql><postman><react-apollo><apollo-client>,1,0,0,2020-04-13 10:15:32
61202178,2,,56879050,4,,"<p>I'm having the same issue, can confirm that it appears __resolveType is never called when using graphql-modules. I'm going to raise an issue in the repo and reference this SO. Will post back any answer I get.</p>&#xA;&#xA;<p>It has already been reported in the repo issues and the fix was to pass the toplevel module schema to apollo-server, not as modules</p>&#xA;&#xA;<pre><code>({&#xA;    schema: Appmodule.schema,&#xA;    context: session =&gt; session&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>see issue here. <a href=""https://github.com/Urigo/graphql-modules/issues/619"" rel=""nofollow noreferrer"">https://github.com/Urigo/graphql-modules/issues/619</a></p>&#xA;&#xA;<p>Can confirm this is working</p>&#xA;",9018682,,9018682,2020-04-14 07:23:29,2020-04-14 07:23:29,"",,0,0,0,2020-04-14 06:54:18
61210098,1,61212412,,4,3043,"<p>I'm having some issues with using Shopify's GraphQL API. I've already made a bunch of REST calls, but for this one I would need GraphQL.&#xA;I'm trying to add videos to certain products and this is what I have so far:</p>&#xA;&#xA;<pre><code>mutation productCreateMedia($productId: ID!, $media: [CreateMediaInput!]!) {&#xA;  productCreateMedia(productId: $productId, media: $media) {&#xA;    media {&#xA;      alt&#xA;    }&#xA;    mediaUserErrors {&#xA;      code&#xA;      field&#xA;      message&#xA;    }&#xA;    product {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and for variables, I have an array of:</p>&#xA;&#xA;<pre><code>$gid = ""gid://shopify/Product/"".row('shopifyID');&#xA;$videoLink = ""https://www.youtube.com/watch?v="".row('youtubeID');&#xA;$media = array('originalSource'=&gt;$videoLink,'mediaContentType'=&gt;'EXTERNAL_VIDEO');&#xA;$variables = array ('productId'=&gt;$gid,'media'=&gt;$media);&#xA;</code></pre>&#xA;&#xA;<p>I use the next function for the call:</p>&#xA;&#xA;<pre><code>function graph($query , $variables = []){&#xA;$domain = 'domain.myshopify.com';&#xA;$url = 'https://'.$domain.'/admin/api/2020-01/graphql.json';&#xA;&#xA;$request = ['query' =&gt; $query];&#xA;&#xA;if(count($variables) &gt; 0) { $request['variables'] = $variables; }&#xA;&#xA;$req = json_encode($request);&#xA;$parameters['body'] = $req;&#xA;&#xA;$stack = HandlerStack::create();&#xA;$client = new \GuzzleHttp\Client([&#xA;    'handler'  =&gt; $stack,&#xA;    'headers'  =&gt; [&#xA;        'Accept'       =&gt; 'application/json',&#xA;        'Content-Type' =&gt; 'application/json',&#xA;        'X-Shopify-Access-Token'=&gt;'myAPIpass' // shopify app accessToken&#xA;    ],&#xA;]);&#xA;&#xA;$response = $client-&gt;request('post',$url,$parameters);&#xA;return $body =  json_decode($response-&gt;getBody(),true);&#xA;</code></pre>&#xA;&#xA;<p>}</p>&#xA;&#xA;<p>But what I'm getting back is: &#xA;Variable productId of type ID! was provided invalid value</p>&#xA;&#xA;<p>I used php-shopify SDK for REST API, but couldn't figure out how it works for GraphQL, so went with the usual way of just calling the JSON endpoint.&#xA;Any help in what I'm doing wrong here?</p>&#xA;",297616,,297616,2020-04-14 16:17:34,2020-05-19 22:18:06,Shopify GraphQL PHP,<graphql><shopify><media>,1,0,0,2020-04-14 14:27:49
61212412,2,,61210098,5,,<p>So...to answer my own question...the shopify ID string has to be base 64 encoded.&#xA;I added just this line and it works now:</p>&#xA;&#xA;<pre><code>$gid = base64_encode($gid);&#xA;</code></pre>&#xA;,297616,,,,2020-04-14 16:18:33,"",,0,0,0,2020-04-14 16:18:33
61216276,1,,,1,408,"<p>I'm working on a food order platform with Prisma, Prisma-binding and Apollo Server on the backend. A customer can choose a restaurant in his neighbourhood and add one or more dishes to his cart. It is possible that when a dish from restaurant x is already added, the customer decides to order from another restaurant, restaurant y. Therefore I need to filter the added dishes when making an order based on the customer id and the final chosen restaurant in the backend first before creating the order and payment url.</p>&#xA;&#xA;<p>I've got three data types inside my prisma datamodel: Customer, CartItem and Dish</p>&#xA;&#xA;<pre><code>type Customer {&#xA;    id: ID! @id&#xA;    createdAt: DateTime! @createdAt&#xA;    updatedAt: DateTime! @updatedAt&#xA;    name: String&#xA;    email: String&#xA;    phone: String&#xA;    user: User&#xA;    cart: [CartItem]!&#xA;    orders: [Order]!&#xA;}&#xA;&#xA;type CartItem {&#xA;    id: ID! @id&#xA;    quantity: Int! @default(value: 1)&#xA;    dish: Dish!&#xA;    customer: Customer! @relation(link: INLINE)&#xA;}&#xA;&#xA;type Dish {&#xA;    id: ID! @id&#xA;    name: String!&#xA;    price: String!&#xA;    description: String!&#xA;    isAvailable: Boolean! @default(value: true)&#xA;    category: String&#xA;    restaurant: Restaurant!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In the Prisma GraphQL playground that is directly connected to the database I can filter the cartItems that I need to create the order like this:</p>&#xA;&#xA;<pre><code>query {&#xA;  customer(where: { id: ""ck8zwslgs00da0712cq88e3oh"" } ) {&#xA;    id&#xA;    cart(where: { dish: { restaurant: { id: ""ck904gwl400mz0712v0azegm3"" } } }) {&#xA;      quantity&#xA;      dish {&#xA;        name&#xA;        price&#xA;        restaurant {&#xA;          id&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>output:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""customer"": {&#xA;      ""id"": ""ck8zwslgs00da0712cq88e3oh"",&#xA;      ""cart"": [&#xA;        {&#xA;          ""quantity"": 2,&#xA;          ""dish"": {&#xA;            ""name"": ""Nachos Plate Hawaii"",&#xA;            ""price"": ""1150"",&#xA;            ""restaurant"": {&#xA;              ""id"": ""ck904gwl400mz0712v0azegm3"",&#xA;              ""name"": ""Taco Bell""&#xA;            }&#xA;          }&#xA;        },&#xA;        {&#xA;          ""quantity"": 1,&#xA;          ""dish"": {&#xA;            ""name"": ""Nachos Plate Vulcano"",&#xA;            ""price"": ""1250"",&#xA;            ""restaurant"": {&#xA;              ""id"": ""ck904gwl400mz0712v0azegm3"",&#xA;              ""name"": ""Taco Bell""&#xA;            }&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So far so good but now I need the same query in the Apollo Server using prisma-binding. I tried a few things but none of them are working. The first two are returning an error ""Field \""cart\"" is not defined by type CustomerWhereUniqueInput"". The last two are just returning every cartItem without the restaurant filter.</p>&#xA;&#xA;<pre><code>const data = await ctx.db.query.customer({&#xA;    where: {&#xA;        AND: [&#xA;            { &#xA;                id: args.customerID &#xA;            },&#xA;            {&#xA;                cart: {&#xA;                    dish : {&#xA;                        restaurant: {&#xA;                            id: args.restaurantID&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        ]&#xA;    }&#xA;}, info);&#xA;&#xA;&#xA;const data = await ctx.db.query.customer({&#xA;    where: {&#xA;        id: args.customerID&#xA;        cart: {&#xA;            dish : {&#xA;                restaurant: {&#xA;                    id: args.restaurantID&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}, info);&#xA;&#xA;&#xA;const data = await ctx.db.query.customer({&#xA;    where: {&#xA;        id: args.customerID&#xA;    },&#xA;    cart: {&#xA;        where: {&#xA;            dish : {&#xA;                restaurant: {&#xA;                    id: args.restaurantID&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}, info);&#xA;&#xA;&#xA;const data = await ctx.db.query.customer({&#xA;    where: {&#xA;        id: args.customerID&#xA;    },&#xA;    cart: {&#xA;        dish : {&#xA;            restaurant: {&#xA;                where: {&#xA;                    id: args.restaurantID&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}, info);&#xA;</code></pre>&#xA;&#xA;<p>Can someone help me out with the right way to filter on the customer id and the restaurant id?</p>&#xA;",1391416,,,,2020-04-16 20:18:52,Prisma binding Nested filtering,<apollo-server><prisma><prisma-graphql><prisma-binding>,0,2,0,2020-04-14 20:06:45
61247087,1,61247875,,0,356,"<p>I am using <code>graphql-codegen/typescript-apollo-angular</code> to generate typescript code can be useed in our Angular application.&#xA;We decided to enable <code>strictNullChecks</code> the only issue is that we use the following pattern to specify the types of inner nodes that are returned by the API:</p>&#xA;&#xA;<pre><code>type ListSomethingEdge = ListSomethingQuery[""something""][""edges""][0];&#xA;</code></pre>&#xA;&#xA;<p>In my case <code>something</code> is generated as a <code>Maybe&lt;Array&lt;...&gt;&gt;</code> which is correct.&#xA;When I enable <code>strictNullChecks</code> the above code does not work anymore as something might be undefined / null as well. </p>&#xA;&#xA;<pre><code>Property 'edges' does not exist on type '({ __typename?: ""SomethingConnection"" | undefined; } &amp; Pick&lt;SomethingConnection, ""totalCount""&gt; &amp; { edges?: Maybe&lt;{ __typename?: ""SomethingEdge"" | undefined; } &amp; { ...; }&gt;[] | null | undefined; pageInfo: { ...; } &amp; Pick&lt;...&gt;; }) | null | undefined'.ts(2339)&#xA;</code></pre>&#xA;&#xA;<p>I was unable to find documentation on how to remove <code>null</code> / <code>undefined</code> types from a type alias like this. Maybe there is a different way to do this.</p>&#xA;",836086,,,,2020-04-16 10:27:03,Type alias from property that might be null with strictNullChecks,<angular><typescript><strictnullchecks><graphql-codegen>,1,0,0,2020-04-16 09:36:02
61268517,2,,60391116,2,,"<p>For searching the directory:</p>&#xA;&#xA;<pre><code>query {&#xA;  repository(name: ""&lt;repo&gt;"", owner: ""&lt;owner&gt;"") {&#xA;    object(expression: ""master:"") {&#xA;      ... on Tree {&#xA;        entries {&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And for getting the file content:</p>&#xA;&#xA;<pre><code>query { &#xA;  repository(name: ""&lt;repo&gt;"", owner: ""&lt;owner&gt;"") {&#xA;    object(expression: ""master:&lt;path&gt;"") {&#xA;      ... on Blob {&#xA;        oid&#xA;        byteSize&#xA;        text&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Reference: <a href=""https://github.community/t5/GitHub-API-Development-and/GraphQL-getting-filename-file-content-and-commit-date/td-p/17861"" rel=""nofollow noreferrer"">https://github.community/t5/GitHub-API-Development-and/GraphQL-getting-filename-file-content-and-commit-date/td-p/17861</a></p>&#xA;",7046216,,,,2020-04-17 09:45:16,"",,0,0,0,2020-04-17 09:45:16
61268863,1,,,3,1246,"<p>i would like run multiple mutations in the same query.</p>&#xA;&#xA;<p>In the example below, i create an order and after i create a product record, concerning previously created. </p>&#xA;&#xA;<p>I must have 2 mutations.</p>&#xA;&#xA;<p>First, i insert an order. In output, i retrieve among others, idorder.</p>&#xA;&#xA;<p>Then, i insert an product. This product </p>&#xA;&#xA;<pre><code>mutation {&#xA;  createOrder(input: {&#xA;    order: {&#xA;      ordername: ""My order""&#xA;    }&#xA;  }) {&#xA;    order {&#xA;      idorder&#xA;      ordername&#xA;    }&#xA;  },&#xA;  createProduct(input: {&#xA;    product: {&#xA;      quantity: 3&#xA;      idrefproduct: 25 # link to refProduct&#xA;      idorder: XXXX         # how can i retrieve idorder from output of createOrder above ? &#xA;    }&#xA;  }) {&#xA;    product {&#xA;      idproduct&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>Real example with SQL structure :</p>&#xA;&#xA;<pre class=""lang-sql prettyprint-override""><code>&#xA;user(iduser, othersFields);&#xA;scenarios(idscenario, iduser, name, otherFields);&#xA;&#xA;cultA(idcultA, idscenario, ...); // this table need of idscenario field&#xA;cultB(idcultB, idscenario, ...); // this table need of idscenario field&#xA;cultC(idcultC, idscenario, ...); // this table need of idscenario field&#xA;&#xA;</code></pre>&#xA;&#xA;<p>how can i retrieve idorder from output of createOrder above ? </p>&#xA;&#xA;<p>It is possible ?</p>&#xA;&#xA;<p>If i forgot some informations, don't hesitate.</p>&#xA;&#xA;<p>Thanks in advance.</p>&#xA;&#xA;<p><strong>EDIT</strong> :</p>&#xA;&#xA;<ul>&#xA;<li>With PostGraphile, plugin ""postgraphile-plugin-nested-mutations"" or ""custom mutations"" (with PL PGSQL function)</li>&#xA;<li>Without PostGraphile, a resolver as the example of @xadm permits this particular nested mutation.</li>&#xA;</ul>&#xA;",10857528,,10857528,2020-04-20 16:37:30,2020-04-20 16:37:30,"GraphQL - How retrieve id of previous mutation, during query of multiple mutations",<graphql><postgraphile>,1,2,0,2020-04-17 10:02:07
61273760,2,,61268863,1,,"<p>IMHO you can search for ""nested mutations"" - not described here, you'll easily find examples/tutorials.</p>&#xA;&#xA;<p>Proposed DB structure (n-to-n relation): </p>&#xA;&#xA;<pre><code>order{orderID,lines[{orderLineID}] } &gt; &#xA;  order_line{orderLineID, productID, anount, price} &gt; &#xA;    product {productID}&#xA;</code></pre>&#xA;&#xA;<p>... created in nested mutations (in reverse order product>order_line>order)</p>&#xA;&#xA;<p>Product don't need <code>orderID</code>, but when you ask for it [in product resolver] </p>&#xA;&#xA;<pre><code>query product(id) {&#xA;  id&#xA;  orderedRecently {&#xA;    orderID&#xA;    date&#xA;    price&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>... you can simply get it (or rather many - array) from <code>orderLines</code> and <code>orders</code> tables [using simple SQL query - where <code>price</code> will be read from <code>orderLines</code>]</p>&#xA;&#xA;<p><code>orderedRecently</code> resolver can get product <code>id</code> from parent object (usually 1st param)</p>&#xA;&#xA;<p>Of course you can (and should) return data as <code>order</code> and <code>orderLine</code> types (to be cached separately, normalized):</p>&#xA;&#xA;<pre><code>query product($id: ID!) {&#xA;  product(id: $id) {&#xA;    id&#xA;    orderedRecently {&#xA;      id&#xA;      date&#xA;      orderLine {&#xA;        id&#xA;        amount&#xA;        price&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>where type <code>orderedRecently: [Order!]</code> - array can be empty, not eordered yet</p>&#xA;&#xA;<h2>update</h2>&#xA;&#xA;<p>I slightly misunderstood your requirements (naming convention) ... you already have proper db structure. Mutation can be 'feeded' with complex data/input:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  createOrder(input: {&#xA;    order: {&#xA;      ordername: ""My order""&#xA;      products: [&#xA;        {&#xA;          quantity: 3&#xA;          idrefproduct: 25 &#xA;        },&#xA;        {&#xA;          quantity: 5&#xA;          idrefproduct: 28&#xA;        }&#xA;      ]&#xA;    }&#xA;  }) {&#xA;    order {&#xA;      id&#xA;      ordername&#xA;      products {&#xA;        id&#xA;        idrefproduct    &#xA;        quantity&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Your <code>product</code> is my <code>orderLine</code>, <code>idrefproduct</code> is <code>product</code>.</p>&#xA;&#xA;<p><code>createOrder</code> creates/inserts <code>order</code> and then use its <code>id</code> for creation of product records (<code>order.id</code>, <code>idrefproduct</code> and <code>quantity</code>). Resolver can return only order <code>id</code> or structured data (as above).</p>&#xA;",6124657,,6124657,2020-04-17 16:52:37,2020-04-17 16:52:37,"",,0,8,0,2020-04-17 14:15:27
61306870,2,,61305527,1,,<p>The syntax error is correct (and should point you to the exact location of the problem) - there's a stray <code>}</code> in there:</p>&#xA;&#xA;<pre><code>users(where: $where}) {&#xA;#                  ^&#xA;</code></pre>&#xA;,1048572,,,,2020-04-19 15:25:10,"",,0,0,0,2020-04-19 15:25:10
61315445,2,,61314336,8,,"<p>I usually decide where to put my data in Gatsby by answering this question. Let's assume we're making an ecommerce store:</p>&#xA;&#xA;<p>Do I have to read/write the data often?</p>&#xA;&#xA;<ol>&#xA;<li><p>Yes (i.e. adding/updating cart items): use Context</p></li>&#xA;<li><p>No, but the data should be accessed across the whole site (i.e. list of products for the search bar): use sourceNodes, and get the data via useStaticQuery&#xA;<a href=""https://www.gatsbyjs.org/docs/node-apis/#sourceNodes"" rel=""noreferrer"">https://www.gatsbyjs.org/docs/node-apis/#sourceNodes</a></p></li>&#xA;<li><p>No, but the data should be rendered to a page (i.e. product page): use createPages and pageContext then pass the necessary data to the created page&#xA;<a href=""https://www.gatsbyjs.org/docs/node-apis/#createPages"" rel=""noreferrer"">https://www.gatsbyjs.org/docs/node-apis/#createPages</a></p></li>&#xA;</ol>&#xA;&#xA;<p>I think the important thing here is, if you put your data source in gatsby-node, you don't expect it to update very often because you need to re-build whenever you need to update the data. Although, there can be workarounds like triggering a rebuild if you update the data.</p>&#xA;&#xA;<p>I hope this helps!</p>&#xA;",11784146,,,,2020-04-20 05:05:45,"",,0,1,0,2020-04-20 05:05:45
61354237,2,,61354079,1,,"<p>The error reads ""Cannot read property 'node' of undefined"", so you are attempting to access a property on a value that is undefined. In this case, it would be <code>categories.edges[0]</code>. If you have an empty array, accessing the first element in that array will result in a value of <code>undefined</code>. In other words, you're assuming that <code>edges</code> will always have at least one element and that's not the case. So your code needs to reflect that fact. What you do about it (skip the query, pass in some other variable, etc.) depends entirely on your business requirements so we can't answer that for you.</p>&#xA;",6024220,,,,2020-04-21 22:21:28,"",,0,2,0,2020-04-21 22:21:28
61355087,2,,61108880,0,,"<p>While fstrings are great, in case of graphql queries you can just use below format.</p>&#xA;&#xA;<pre><code>query = """"""&#xA;    mutation { &#xA;     productUpdate(input: {id: ""gid://shopify/Product/463...03"", title: ""%s"", descriptionHtml: ""%s""}) {&#xA;       product {&#xA;         id&#xA;       }&#xA;       userErrors {&#xA;         field&#xA;         message&#xA;        }&#xA;      }&#xA;     }&#xA;  """""" % ('test', 'Amazing Product')&#xA;&#xA;print(query)&#xA;</code></pre>&#xA;",9254242,,,,2020-04-21 23:50:34,"",,0,0,0,2020-04-21 23:50:34
61361764,2,,61356672,3,,"<p>I have changed my paths in the form: ""src/folder/..."" to ""@App/folder/..."" and in the end it works fine, but I'm left curious why this happens and if there is any solution To this, I will be attentive to possible solutions and recommendations, thank you very much!</p>&#xA;&#xA;<p>In case someone wants to see the solution, it is as follows:</p>&#xA;&#xA;<p>The tsconfig.json:</p>&#xA;&#xA;<pre><code>{&#xA;  ""compilerOptions"": {&#xA;    ...&#xA;    ""baseUrl"": ""./"",&#xA;    ""paths"": {&#xA;      ""@App/*"": [""src/*""]&#xA;    },&#xA;    ...&#xA;  },&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The jest config file:</p>&#xA;&#xA;<pre><code>{&#xA;  ""moduleFileExtensions"": [""js"", ""json"", ""ts""],&#xA;  ""rootDir"": ""."",&#xA;  ""testRegex"": "".e2e-spec.ts$"",&#xA;  ""transform"": {&#xA;    ""^.+\\.(t|j)s$"": ""ts-jest""&#xA;  },&#xA;  ""testEnvironment"": ""node"",&#xA;  ""moduleNameMapper"": {&#xA;    ""^@App/(.*)$"": ""&lt;rootDir&gt;/../src/$1""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Regards!</p>&#xA;",9637740,,,,2020-04-22 09:32:57,"",,0,0,0,2020-04-22 09:32:57
61367253,2,,61261309,1,,"<p>You could start with that, but there are a number of tweaks you'd want to make if you're going to use it in production.  They have a checklist that can walk you through them here:</p>&#xA;&#xA;<p><a href=""https://hasura.io/docs/1.0/graphql/manual/deployment/production-checklist.html"" rel=""nofollow noreferrer"">https://hasura.io/docs/1.0/graphql/manual/deployment/production-checklist.html</a></p>&#xA;",1613200,,,,2020-04-22 14:12:04,"",,0,2,0,2020-04-22 14:12:04
61369125,1,61544164,,0,343,"<p>I am new to graphql and apollo. I've got a local Graphql schema which is using nested arrays of objects and is mapped over to mongoDB in the resolvers with Mongoose. </p>&#xA;&#xA;<pre><code>type Category {&#xA;    id: ID!&#xA;    category: String!&#xA;    sections: [Section]&#xA;}&#xA;&#xA;type SurveyType {&#xA;    id: ID!&#xA;    stype(type: SurveyTypeChoice): String&#xA;    categories: [Category] &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My queries to this work fine, but I also have a remote schema which is from a hasura instance I have running and maps on to a postgreSQL DB. This remote schema contains question information. I have merged these schemas using the graphql-tools module and can now query both schemas independently through my local apollo server instance.</p>&#xA;&#xA;<p>My problem is that for the Section type in the schema above, i would like it to be in this format:</p>&#xA;&#xA;<pre><code>type Section {&#xA;    id: ID!&#xA;    section: String!&#xA;    leadText: String!&#xA;    questions: [Question] // Question here is an object from the remote schema&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there a way to implement this kind of model and modify the resolvers such that I could query down to the Section level and obtain the array of questions from the remote schema? </p>&#xA;&#xA;<p>Or am I barking up the wrong tree? If so can anyone think of a better way to model this kind of data across schemas?</p>&#xA;&#xA;<p>Any suggestions would be much appreciated! thanks</p>&#xA;",13246211,,,,2020-05-01 14:15:17,Best way to model data in nested arrays across local and remote schemas in Apollo GraphQL?,<node.js><graphql><apollo><apollo-server><graphql-tools>,1,0,0,2020-04-22 15:37:03
61432831,1,61432832,,0,26,"<p>Sorry, I searched the docs to no avail.  </p>&#xA;&#xA;<p>This works:</p>&#xA;&#xA;<pre><code>import { GraphQLString } from ""graphql"";&#xA;</code></pre>&#xA;&#xA;<p>These doesn't:</p>&#xA;&#xA;<pre><code>import { GraphQLNumber } from ""graphql"";&#xA;</code></pre>&#xA;",4808079,,,,2020-04-25 21:26:07,What is the graphql type for numbers in node?,<graphql><numbers>,1,0,0,2020-04-25 21:26:07
61464345,2,,61397228,0,,"<p>To resolve this error you use the <code>as</code> keyword provided in trypescript. So when you access the data for options you do something like:</p>&#xA;&#xA;<pre><code>methods.map(formEle) =&gt; {&#xA;  switch(formEle.identifier):&#xA;    case ""select_year"" :&#xA;      let curElement = formEle as inputRows_formElements_yearDropdown&#xA;      console.log(""options length"" + formEle.options); &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This should resolve this issue.</p>&#xA;",3499844,,,,2020-04-27 17:06:38,"",,0,0,0,2020-04-27 17:06:38
61469589,2,,61469346,0,,"<p>I figured it out. The GraphQL query returns an array with all the users while I ask for one user in the child component so I just had to map over the result and pass it to the child component </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const renderUsers = (): React.ReactNode =&gt; {&#xA;    return data.getAllUsers.map((user, index) =&gt; (&#xA;        &lt;HomeView key={data.getAllUsers[index].id} getAllUsers={user} /&gt;)&#xA;    );&#xA;}&#xA;&#xA;return &lt;div&gt;{renderUsers()}&lt;/div&gt;;&#xA;</code></pre>&#xA;",9225753,,9225753,2020-04-28 00:10:43,2020-04-28 00:10:43,"",,0,0,0,2020-04-27 22:34:31
61470916,2,,61468118,0,,"<p>I figured it out, I needed to add the correct permissions to FB API.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/4YyRB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4YyRB.png"" alt=""enter image description here""></a></p>&#xA;",5086257,,,,2020-04-28 00:54:30,"",,0,0,0,2020-04-28 00:54:30
61477294,1,,,1,843,<p>I have a GraphQL query to get GitHub pull requests. I need to filter pull requests by updated time. How can I do this?</p>&#xA;,10309072,,3951782,2020-08-11 17:51:30,2020-08-11 17:59:49,How to filter github pull request by updated date using graphql?,<github><graphql>,1,0,0,2020-04-28 09:49:41
61479943,2,,58362960,1,,"<p>The syntax of your query is the problem here, you need to write the query like</p>&#xA;&#xA;<pre><code>const data = useStaticQuery(graphql`&#xA;    query user(login: ""mrpbennett"") {&#xA;            pinnedItems(first: 6, types: [REPOSITORY]) {&#xA;                edges {&#xA;                    node {&#xA;                        ... on Repository {&#xA;                            name&#xA;                            description&#xA;                            url&#xA;                            primaryLanguage {&#xA;                                name&#xA;                                color&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;`)&#xA;</code></pre>&#xA;",5928186,,,,2020-04-28 12:14:20,"",,0,0,0,2020-04-28 12:14:20
61485366,1,61490449,,0,287,"<p>I'm currently working on my first Shopify app and it requires bulk importing products. I'm looking around the web, and it appears there's no query to do bulk importing. It also looks like if I want to add the price to the items I import, I'll have to make a separate query from the one that creates the products in the first place.</p>&#xA;&#xA;<p>I'm thinking the easier way would be to create a .csv but there's no query to upload a .csv either.</p>&#xA;&#xA;<p>Has anyone tackled something like this before, and what's the usual way to go about it?</p>&#xA;",12951491,,,,2020-04-28 21:42:18,The generally accepted way to do bulk product importing in a Shopify App,<graphql><shopify-app>,1,0,0,2020-04-28 16:39:32
61503568,1,61503631,,0,84,"<p>I am trying to get the reaction count for each content using the Github v4 API (GraphQL). Can anyone suggest how can I achieve this? </p>&#xA;&#xA;<p>Github supports the following reactions:</p>&#xA;&#xA;<pre><code>THUMBS_UP&#xA;THUMBS_DOWN&#xA;LAUGH&#xA;HOORAY&#xA;CONFUSED&#xA;HEART&#xA;ROCKET&#xA;EYES&#xA;</code></pre>&#xA;&#xA;<p>For each reaction, I want a count which denotes the number of people who reacted. For eg. I am referring to this comment -> <a href=""https://github.com/sindresorhus/refined-github/issues/2190#issue-461960009"" rel=""nofollow noreferrer"">#2190</a>.</p>&#xA;",9469335,,,,2020-04-29 14:01:09,GitHub v4 API: Calculate content specific reaction count on a comment,<graphql><github-api-v4>,1,0,0,2020-04-29 13:57:36
61503631,2,,61503568,3,,"<p>Github API provides a feature called reaction group. Refer to the following query...</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""sindresorhus"", name: ""refined-github"") {&#xA;    issue(number: 2190) {&#xA;      reactionGroups {&#xA;        content&#xA;        users {&#xA;          totalCount&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Hope this solves your problem!</p>&#xA;",9472257,,,,2020-04-29 14:01:09,"",,0,0,0,2020-04-29 14:01:09
61545964,2,,61545045,0,,"<p>So, for the moment, I have a solution that does work for some short lists, it works for my case, but I'm still curious about an other solution that implies having a key dynamically.</p>&#xA;&#xA;<p>My solution is to create an array like this one: </p>&#xA;&#xA;<pre><code>let htmlArray = [&#xA;              data.description1Node.childMarkdownRemark.html,&#xA;              data.description2Node.childMarkdownRemark.html,&#xA;              data.description3Node.childMarkdownRemark.html,&#xA;              data.description4Node.childMarkdownRemark.html,&#xA;              data.description5Node.childMarkdownRemark.html,&#xA;              data.description6Node.childMarkdownRemark.html&#xA;              ];&#xA;</code></pre>&#xA;&#xA;<p>and use the index htmlArray[index] to get the results.</p>&#xA;&#xA;<p>Thank you if you can find me an other solution to this problem I faced.</p>&#xA;",13448719,,,,2020-05-01 15:54:31,"",,0,0,0,2020-05-01 15:54:31
61557421,2,,61557079,2,,"<p>With the query that you're using as shown, it would only give you the <strong>Types</strong> of objects. You can get all the queries of <code>Query</code> type with the below:</p>&#xA;&#xA;<pre><code>{&#xA;  __schema {&#xA;    queryType {&#xA;      name&#xA;      fields {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>For example, running the above on GitHub's GraphQL responds with the below:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""__schema"": {&#xA;      ""queryType"": {&#xA;        ""name"": ""Query"",&#xA;        ""fields"": [&#xA;          {&#xA;            ""name"": ""codeOfConduct""&#xA;          },&#xA;          {&#xA;            ""name"": ""codesOfConduct""&#xA;          },&#xA;          {&#xA;            ""name"": ""enterprise""&#xA;          },&#xA;          {&#xA;            ""name"": ""enterpriseAdministratorInvitation""&#xA;          },&#xA;          {&#xA;            ""name"": ""enterpriseAdministratorInvitationByToken""&#xA;          },&#xA;          {&#xA;            ""name"": ""license""&#xA;          },&#xA;          {&#xA;            ""name"": ""licenses""&#xA;          },&#xA;          {&#xA;            ""name"": ""marketplaceCategories""&#xA;          },&#xA;          {&#xA;            ""name"": ""marketplaceCategory""&#xA;          },&#xA;          {&#xA;            ""name"": ""marketplaceListing""&#xA;          },&#xA;          {&#xA;            ""name"": ""marketplaceListings""&#xA;          },&#xA;          {&#xA;            ""name"": ""meta""&#xA;          },&#xA;          {&#xA;            ""name"": ""node""&#xA;          },&#xA;          {&#xA;            ""name"": ""nodes""&#xA;          },&#xA;          {&#xA;            ""name"": ""organization""&#xA;          },&#xA;          {&#xA;            ""name"": ""rateLimit""&#xA;          },&#xA;          {&#xA;            ""name"": ""relay""&#xA;          },&#xA;          {&#xA;            ""name"": ""repository""&#xA;          },&#xA;          {&#xA;            ""name"": ""repositoryOwner""&#xA;          },&#xA;          {&#xA;            ""name"": ""resource""&#xA;          },&#xA;          {&#xA;            ""name"": ""search""&#xA;          },&#xA;          {&#xA;            ""name"": ""securityAdvisories""&#xA;          },&#xA;          {&#xA;            ""name"": ""securityAdvisory""&#xA;          },&#xA;          {&#xA;            ""name"": ""securityVulnerabilities""&#xA;          },&#xA;          {&#xA;            ""name"": ""topic""&#xA;          },&#xA;          {&#xA;            ""name"": ""user""&#xA;          },&#xA;          {&#xA;            ""name"": ""viewer""&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can search for the remaining fields within <code>fields</code> that you might need to add to your query by searching for <code>__Field</code> in the Documentation Explorer of GraphiQL.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/cSt7j.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/cSt7j.png"" alt=""enter image description here""></a></p>&#xA;",9840318,,9840318,2020-05-02 10:01:30,2020-05-02 10:01:30,"",,0,0,0,2020-05-02 09:53:24
61557540,1,,,-1,456,<p>Can anyone tell me how to pass array of object in graphql mutation from react js side.I tried passing the object in react but getting error of not same type.</p>&#xA;&#xA;<pre><code>[input type][1]&#xA;[from api side][2]&#xA;[declaring the object][3]&#xA;[passing object in mutation][4]&#xA;[error i'm facing][5]&#xA;&#xA;[1]: https://i.stack.imgur.com/ufVtA.png &#xA;[2]: https://i.stack.imgur.com/kQt5m.png &#xA;[3]: https://i.stack.imgur.com/hnxLM.png &#xA;[4]: https://i.stack.imgur.com/5JCHf.png &#xA;[5]: https://i.stack.imgur.com/BonPE.png &#xA;</code></pre>&#xA;,13453551,,13453551,2020-05-03 07:32:52,2020-06-03 10:57:48,Not able to pass object in graphql mutation,<node.js><reactjs><facebook-graph-api><graph><graphql-js>,1,3,0,2020-05-02 10:02:40
61557991,2,,61557298,1,,"<p>Calling <code>shift</code> and <code>push</code> on an array while iterating through that same array will invariably lead to some unexpected results. You could make a copy of the array, but it'd be much easier to just use <code>map</code>:</p>&#xA;&#xA;<pre><code>const person = {&#xA;  name: 'Daniel',&#xA;  favoriteFoods: [1, 2, 3],&#xA;}&#xA;&#xA;person.favoriteFoods = person.favoriteFoods.map(id =&gt; {&#xA;  return foodData.find(food =&gt; food.id === id)&#xA;})&#xA;&#xA;return person&#xA;</code></pre>&#xA;&#xA;<p>The other issue here is that if your schema returns a <code>Person</code> in another resolver, you'll have to duplicate this logic in that resolver too. What you really should do is just return the person with <code>favoriteFoods: [1, 2, 3]</code>. Then write a separate resolver for the <code>favoriteFoods</code> field:</p>&#xA;&#xA;<pre><code>resolve(person) {&#xA;  return person.favoriteFoods.map(id =&gt; {&#xA;    return foodData.find(food =&gt; food.id === id)&#xA;  })&#xA;}&#xA;</code></pre>&#xA;",6024220,,,,2020-05-02 10:39:30,"",,0,1,0,2020-05-02 10:39:30
61583460,1,61826481,,3,7602,"<p>I have tables Principles and Tags. And there is a many-to-many relation between them (<a href=""https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/relations#implicit-many-to-many-relations"" rel=""nofollow noreferrer"">joined implicitly</a>).</p>&#xA;<p>Without using <code>prisma.raw</code>, how can I run the following query?</p>&#xA;<pre class=""lang-sql prettyprint-override""><code>SELECT p.id, p.title, p.description, p.createdAt, p.modifiedAt&#xA;    FROM principle p&#xA;   WHERE EXISTS (SELECT NULL&#xA;                   FROM _PrincipleToTag pt&#xA;                  WHERE pt.B IN (${tagIds.join(',')})&#xA;                    AND pt.A = p.id&#xA;               GROUP BY pt.A&#xA;                 HAVING COUNT(DISTINCT pt.B) = ${tagIds.length})&#xA;</code></pre>&#xA;<p><strong>How can I update this Prisma 2 query such that the principles returned are only principles that are associated with ALL of the provided tagIds?</strong></p>&#xA;<pre class=""lang-js prettyprint-override""><code>export const principles = ({ tagIds }) =&gt; {&#xA;  const payload = {&#xA;    where: {&#xA;      //TODO filter based on tagIds&#xA;    },&#xA;  }&#xA;  return db.principle.findMany(payload)&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/filtering#filter-on-related-records"" rel=""nofollow noreferrer"">The docs</a> mention <code>contains</code> and <code>in</code> and <code>every</code>, but I can't find examples of what I'm trying to do.</p>&#xA;<p>I'm using RedwoodJs, Prisma 2, Apollo, GraphQL.</p>&#xA;<hr />&#xA;<p><strong>Update</strong> in response to comment: here is the SDL:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>input CreatePrincipleInput {&#xA;  title: String!&#xA;  description: String&#xA;}&#xA;&#xA;input CreatePrincipleWithTagsInput {&#xA;  title: String!&#xA;  description: String&#xA;  tagIdsJson: String&#xA;}&#xA;&#xA;input CreateTagInput {&#xA;  title: String!&#xA;  description: String&#xA;}&#xA;&#xA;# A date string, such as 2007-12-03, compliant with the `full-date` format&#xA;# outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for&#xA;# representation of dates and times using the Gregorian calendar.&#xA;scalar Date&#xA;&#xA;# A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the&#xA;# `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO&#xA;# 8601 standard for representation of dates and times using the Gregorian calendar.&#xA;scalar DateTime&#xA;&#xA;type Mutation {&#xA;  createPrinciple(input: CreatePrincipleInput!): Principle&#xA;  createPrincipleWithTags(input: CreatePrincipleWithTagsInput!): Principle&#xA;  updatePrinciple(id: Int!, input: UpdatePrincipleInput!): Principle!&#xA;  deletePrinciple(id: Int!): Principle!&#xA;  createTag(input: CreateTagInput!): Tag!&#xA;  updateTag(id: Int!, input: UpdateTagInput!): Tag!&#xA;  deleteTag(id: Int!): Tag!&#xA;}&#xA;&#xA;type Principle {&#xA;  id: Int!&#xA;  title: String!&#xA;  description: String!&#xA;  tags: [Tag]&#xA;  createdAt: DateTime!&#xA;  modifiedAt: DateTime!&#xA;}&#xA;&#xA;type Query {&#xA;  redwood: Redwood&#xA;  principles(searchQuery: String, tagIds: [Int]): [Principle!]!&#xA;  tags: [Tag!]!&#xA;  tagsByLabel(searchTerm: String): [TagCount!]!&#xA;  tag(id: Int!): Tag!&#xA;}&#xA;&#xA;type Redwood {&#xA;  version: String&#xA;}&#xA;&#xA;type Tag {&#xA;  id: Int!&#xA;  title: String!&#xA;  principles: [Principle]&#xA;  description: String&#xA;  createdAt: DateTime!&#xA;  modifiedAt: DateTime!&#xA;}&#xA;&#xA;type TagCount {&#xA;  id: Int!&#xA;  title: String!&#xA;  count: Int!&#xA;  principles: [Principle]&#xA;  description: String&#xA;  createdAt: DateTime!&#xA;  modifiedAt: DateTime!&#xA;}&#xA;&#xA;# A time string at UTC, such as 10:15:30Z, compliant with the `full-time` format&#xA;# outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for&#xA;# representation of dates and times using the Gregorian calendar.&#xA;scalar Time&#xA;&#xA;input UpdatePrincipleInput {&#xA;  title: String&#xA;  description: String&#xA;}&#xA;&#xA;input UpdateTagInput {&#xA;  title: String&#xA;  description: String&#xA;}&#xA;</code></pre>&#xA;",470749,,13108568,2021-12-19 23:38:04,2022-09-10 00:12:28,Prisma 2 query to return records only that are associated with ALL of the provided tag IDs,<react-apollo><apollo-server><prisma><prisma-graphql><redwoodjs>,3,0,0,2020-05-04 00:35:24
61595576,1,,,1,123,"<p>I'm trying to convert this query into a struct:</p>&#xA;&#xA;<pre><code>{&#xA;  repository(owner: ""google"", name: ""gson"") {&#xA;    name&#xA;    refs(first: 100, refPrefix: ""refs/heads/"") {&#xA;      edges {&#xA;        node {&#xA;          name&#xA;          target {&#xA;            ... on Commit {&#xA;              id&#xA;              history(first: 2) {&#xA;                totalCount&#xA;                edges {&#xA;                  node {&#xA;                    ... on Commit {&#xA;                      committer {&#xA;                        date&#xA;                        email&#xA;                        name&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I got this from <a href=""https://stackoverflow.com/questions/15919539/github-api-how-to-efficiently-find-the-number-of-commits-for-a-repository"">github api: How to efficiently find the number of commits for a repository?</a></p>&#xA;&#xA;<p>I tested it on the Github explorer just to be safe and its working as it should.&#xA;What I'm trying to do is to get the ""TotalCount"" of commits per contributor to a specific Repository.&#xA;I'm not really sure how I'm supposed to do it exactly.&#xA;I already got this:</p>&#xA;&#xA;<pre><code>type repositoryInfo struct {&#xA;    Repository struct {&#xA;        Refs struct {&#xA;            TotalCount githubv4.Int //number of branches&#xA;            Nodes []ref&#xA;            PageInfo pageInfo&#xA;        }`graphql:""refs(refPrefix:$prefix,first:$refFirst,after:$refAfter,orderBy:$orderBy)""`&#xA;    } `graphql:""repository(owner:$login,name:$repositoryName)""`&#xA;}&#xA;&#xA;type ref struct {&#xA;    Name githubv4.String&#xA;    Prefix githubv4.String&#xA;&#xA;    Target struct {&#xA;        AbbreviatedOid githubv4.String&#xA;        ID githubv4.GitObjectID&#xA;        //History struct {&#xA;        //  TotalCount githubv4.Int&#xA;        //}`graphql:""history(first:0)""`&#xA;    }`graphql:""... on Commit""`&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I get this error message:</p>&#xA;&#xA;<pre><code>Fragment on Commit can't be spread inside Ref&#xA;</code></pre>&#xA;&#xA;<p>However I can't seem to find any useful documentation.&#xA;Can anybody tell me what I'm doing wrong please?</p>&#xA;",13252241,,13252241,2020-05-07 08:42:30,2022-07-06 19:04:09,How to query for commits in a given Repository (Lib: shurcooL / githubv4 ),<go><github><graphql>,0,0,0,2020-05-04 15:15:54
61597796,1,61633610,,1,723,"<p>Is there any way to rejoin nested fields because in response, it breaks into separate objects. </p>&#xA;&#xA;<p><strong>Actual Response:</strong></p>&#xA;&#xA;<pre><code>{""id"":""gid:\/\/shopify\/Product\/1755556806746"",""title"":""A Book bind"",""description"":""Energize is a pure Sativa formulation designed to stimulate, excite, and keep you productive"",""productType"":""CARTRIDGE"",""vendor"":""ACES"",""totalInventory"":0,""featuredImage"":null,""handle"":""1g-energizedurban-cart-82-89""}&#xA;{""id"":""gid:\/\/shopify\/Metafield\/4680431861850"",""namespace"":""custom_fields"",""key"":""thc_percentage"",""value"":""aa"",""__parentId"":""gid:\/\/shopify\/Product\/1755556806746""}&#xA;{""id"":""gid:\/\/shopify\/Metafield\/4680431894618"",""namespace"":""custom_fields"",""key"":""cbd_percentage"",""value"":""bb"",""__parentId"":""gid:\/\/shopify\/Product\/1755556806746""}&#xA;{""id"":""gid:\/\/shopify\/Metafield\/4680431960154"",""namespace"":""custom_fields"",""key"":""strain_name"",""value"":""Strain"",""__parentId"":""gid:\/\/shopify\/Product\/1755556806746""}&#xA;</code></pre>&#xA;&#xA;<p><strong>Expected Response:</strong></p>&#xA;&#xA;<pre><code>{""id"":""gid:\/\/shopify\/Product\/1755556806746"",""title"":""A Book bind"",""description"":""Energize is a pure Sativa formulation designed to stimulate, excite, and keep you productive"",""productType"":""CARTRIDGE"",""vendor"":""ACES"",""totalInventory"":0,""featuredImage"":null,""handle"":""1g-energizedurban-cart-82-89"",&#xA;metafields:[{""id"":""gid:\/\/shopify\/Metafield\/4680431861850"",""namespace"":""custom_fields"",""key"":""thc_percentage"",""value"":""aa"",""__parentId"":""gid:\/\/shopify\/Product\/1755556806746""},&#xA;{""id"":""gid:\/\/shopify\/Metafield\/4680431894618"",""namespace"":""custom_fields"",""key"":""cbd_percentage"",""value"":""bb"",""__parentId"":""gid:\/\/shopify\/Product\/1755556806746""},&#xA;{""id"":""gid:\/\/shopify\/Metafield\/4680431960154"",""namespace"":""custom_fields"",""key"":""strain_name"",""value"":""Strain"",""__parentId"":""gid:\/\/shopify\/Product\/1755556806746""}&#xA;]&#xA;}&#xA;</code></pre>&#xA;",5197192,,,,2020-05-06 11:06:35,Rejoin nested fields in shopify graphql Bulk Operation query,<graphql><shopify><shopify-api-node>,1,0,0,2020-05-04 17:09:38
61628995,1,61629175,,0,22,"<p>I wish to nested query the array via graphql, by elimination repeated properties. Below is the json file</p>&#xA;&#xA;<pre><code>{&#xA;  ""MAIN_ARRAY"": [&#xA;    {&#xA;      ""One"": [&#xA;        {&#xA;          ""title"": ""Title"",&#xA;          ""description"": ""Description"",&#xA;          ""avatar"": ""../../assets/image/author-1.jpg""&#xA;        }&#xA;      ],&#xA;      ""Two"": [&#xA;        {&#xA;          ""title"": ""Title"",&#xA;          ""description"": ""Description"",&#xA;          ""avatar"": ""../../assets/image/author-1.jpg""&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I dont want to repeat the properties title, description, avatar for One and Two because its the same. Is there any workaround for this to avoid repeating it. Below code didnt work.</p>&#xA;&#xA;<pre><code>query {&#xA;  fileJson {&#xA;    MAIN_ARRAY {&#xA;      One, Two {&#xA;        title&#xA;        description&#xA;        avatar&#xA;      }&#xA;    }&#xA;  }&#xA;} &#xA;</code></pre>&#xA;",11684837,,,,2020-05-06 06:58:37,Querying multiple data of a array containing same properties via graphql,<reactjs><graphql>,1,0,0,2020-05-06 06:47:41
61633610,2,,61597796,2,,"<p>Shopify uses <a href=""http://jsonlines.org/"" rel=""nofollow noreferrer"">JSON Lines</a> (JSONL) data type to output response for bulk operations. </p>&#xA;&#xA;<blockquote>&#xA;  <p>Each line in the file is a node object returned in a connection. If a&#xA;  node has a nested connection, then each child node is extracted into&#xA;  its own object on the next line.</p>&#xA;</blockquote>&#xA;&#xA;<p>So, you need to go through each line and parse it as a JSON object in your script. Use the  <code>__parentId</code> attribute as a reference to a parent object.<br>&#xA;Join it into the parent object if needed but you can only do that once response received. You can't force Shopify API to do it for you.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Useful links:  </p>&#xA;&#xA;<ul>&#xA;<li><a href=""http://jsonlines.org/"" rel=""nofollow noreferrer"">JSON Lines data type</a>   </li>&#xA;<li><a href=""https://shopify.dev/tutorials/perform-bulk-operations-with-admin-api#the-jsonl-data-format"" rel=""nofollow noreferrer"">The JSONL data format in Shopify</a></li>&#xA;</ul>&#xA;",1568963,,,,2020-05-06 11:06:35,"",,0,0,0,2020-05-06 11:06:35
61640099,2,,61638709,0,,"<p>You can take <code>json.data</code> and loop through it using <code>forEach()</code> then if you only want specific parts of the data, you can add <code>if</code> statements. I would also suggest putting everything into an embed, makes it look better.</p>&#xA;&#xA;<p>If you want to use all the data:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const embed = new MessageEmbed()&#xA;&#xA;json.data.forEach((data, value) =&gt; {&#xA;embed.addField(data, value)&#xA;})&#xA;&#xA;message.channel.send(embed)&#xA;</code></pre>&#xA;&#xA;<p>Or if you'd like to get specific parts:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const embed = new MessageEmbed()&#xA;&#xA;json.data.forEach((data, value) =&gt; {&#xA;if (data === 'chemicalClass') embed.addField(data, value)&#xA;if (data === 'psychoactiveClass') embed.addField(data, value)&#xA;})&#xA;&#xA;message.channel.send(embed)&#xA;</code></pre>&#xA;",13176517,,,,2020-05-06 16:19:14,"",,0,0,0,2020-05-06 16:19:14
61649968,1,,,0,1232,"<p>I'm using Amplify from AWS to build a small ecommerce project using React as frontend.</p>&#xA;&#xA;<p>I'd like to know how I should write the ""Product"" and ""Order"" types in the schema in order to be able to write productId's to a product array in the Order table when users complete a purchase.</p>&#xA;&#xA;<p>My schema.graphql file:</p>&#xA;&#xA;<pre><code>type Product @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  price: Int!&#xA;  category: String!&#xA;  images: [String]!&#xA;}&#xA;&#xA;type Order @model {&#xA;  id: ID!&#xA;  products: [Product] @connection&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My question is about the last line, do I need to define that [Product] connection there or I can use [String] to store product id's in a simple string array?</p>&#xA;",5041588,,,,2020-05-09 08:12:19,Data modelling for ecommerce website using Amplify + GraphQL + DynamoDB,<graphql><amazon-dynamodb><aws-amplify>,1,1,0,2020-05-07 04:34:42
61664936,2,,61651207,1,,"<p>You're likely looking for ""nested object queries"" (see: <a href=""https://hasura.io/docs/1.0/graphql/manual/queries/nested-object-queries.html#nested-object-queries"" rel=""nofollow noreferrer"">https://hasura.io/docs/1.0/graphql/manual/queries/nested-object-queries.html#nested-object-queries</a>)</p>&#xA;&#xA;<p>An example... </p>&#xA;&#xA;<pre><code>query MyQuery {&#xA;  district(where: {id: {_eq: 1}}) {&#xA;    id&#xA;    name&#xA;    blocks {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>result:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""district"": [&#xA;      {&#xA;        ""id"": 1,&#xA;        ""name"": ""A"",&#xA;        ""blocks"": [&#xA;          {&#xA;            ""id"": 1,&#xA;            ""name"": ""ABC""&#xA;          },&#xA;          {&#xA;            ""id"": 2,&#xA;            ""name"": ""XYZ""&#xA;          }&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Or...</p>&#xA;&#xA;<pre><code>query MyQuery2 {&#xA;  block(where: {district: {name: {_eq: ""A""}}}) {&#xA;    id&#xA;    name&#xA;    district {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>result:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""block"": [&#xA;      {&#xA;        ""id"": 1,&#xA;        ""name"": ""ABC"",&#xA;        ""district"": {&#xA;          ""id"": 1,&#xA;          ""name"": ""A""&#xA;        }&#xA;      },&#xA;      {&#xA;        ""id"": 2,&#xA;        ""name"": ""XYZ"",&#xA;        ""district"": {&#xA;          ""id"": 1,&#xA;          ""name"": ""A""&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Setting up the tables this way...</p>&#xA;&#xA;<p>blocks:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/2wA5p.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2wA5p.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/HblaC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/HblaC.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/1Ocpx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1Ocpx.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>districts:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/62KCm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/62KCm.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/3l5aU.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3l5aU.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/D0AIx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/D0AIx.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Aside: I recommend using plural table names as they are more standard, ""districts"" and ""blocks""</p>&#xA;",2526423,,,,2020-05-07 18:18:29,"",,0,0,0,2020-05-07 18:18:29
61669049,1,,,0,93,"<p>I have the following data flow scenario:</p>&#xA;&#xA;<ul>&#xA;<li>UI has 3 sections: Enrolled Services, Enrolling Services, and&#xA;Search Services </li>&#xA;<li>User will search for existing services (upon the User&#xA;entering searchServiceText,  searchResultServices gets called)</li>&#xA;<li>The user selects a service from the search result and enrolls in a&#xA;service. If the User's enrollment not complete (ex: no payment, not&#xA;accepted, etc), UI will show the data in the Enrolling section.&#xA;Otherwise, it will be in the Enrolled section </li>&#xA;</ul>&#xA;&#xA;<p>I have the following queries:</p>&#xA;&#xA;<pre><code>enrolledServices: {&#xA; query: gql(listServices),&#xA; variables() {&#xA;   let idFilter = this.idFilter(this.userData.enrolledServiceIds);&#xA;   return {&#xA;     filter: {&#xA;       or: idFilter&#xA;     }&#xA;   };&#xA; },&#xA; update: data =&gt; {&#xA;   return _.compact(data.listServices.items);&#xA; }&#xA;},&#xA;enrollingServices: {&#xA; query: gql(listServices),&#xA; variables() {&#xA;   let idFilter = this.idFilter(this.userData.enrollingServiceIds);&#xA;   return {&#xA;     filter: {&#xA;       or: idFilter&#xA;     }&#xA;   };&#xA; },&#xA; update: data =&gt; {&#xA;   return _.compact(data.listServices.items);&#xA; }&#xA;},&#xA;searchResultServices: {&#xA; query: gql(listServices),&#xA; variables() {&#xA;   console.log('before search - enrolledServices:', this.enrolledServices); //Data Collision!!&#xA;   console.log('before search - enrollingServices:', this.enrollingServices);&#xA;   return {&#xA;     filter: {&#xA;       or: [&#xA;         { name: { contains: this.searchServiceText } }&#xA;       ],&#xA;       and: [&#xA;         { status: { eq: 'Active' } }&#xA;       ] &#xA;     }&#xA;   };&#xA; },&#xA; skip() {&#xA;   return !this.searchServiceText;&#xA; },&#xA; update(data) {&#xA;   return _.compact(data.listServices.items);&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<ol>&#xA;<li>enrolledServices: and enrollingServices: gets called on page load, hence UI will have 2 sections for enrolled services and enrolling services. </li>&#xA;<li>searchResultServices: will not be called on page load because of skip() condition. It is gets called reactively when user enters value to searchServiceText field in the UI</li>&#xA;</ol>&#xA;&#xA;<p><strong>Getting to my issue now</strong>:</p>&#xA;&#xA;<ol>&#xA;<li>On page load as expected Service_enrolled, Service_enrolling is shown in Enrolled, Enrolling sections respectively (see below).</li>&#xA;</ol>&#xA;&#xA;<blockquote>&#xA;  <p><strong>Enrolled Section</strong>:</p>&#xA;  &#xA;  <p>Service_enrolled</p>&#xA;  &#xA;  <p><strong>Enrolling Section</strong>:</p>&#xA;  &#xA;  <p>Service_enrolling</p>&#xA;</blockquote>&#xA;&#xA;<ol start=""2"">&#xA;<li>If the user sets <strong>search word in searchServiceText and clicks search</strong>, Enrolled section shows Service_<strong>enrolling</strong> (see below). User is just searching at time and he/she has not acted on the search results as yet </li>&#xA;</ol>&#xA;&#xA;<blockquote>&#xA;  <p><strong>Enrolled Section</strong>:   </p>&#xA;  &#xA;  <p>Service_<strong>enrolling</strong> (enrolled service replaced with enrolling&#xA;  service) </p>&#xA;  &#xA;  <p><strong>Enrolling Section</strong>:    </p>&#xA;  &#xA;  <p>Service_enrolling</p>&#xA;</blockquote>&#xA;&#xA;<p><strong>The expected behavior in step2</strong>: I should see step 1 behavior (Service_enrolled should be in Enrolled section, Service_enrolling should be in Enrolling section) because the user has not acted on search results as yet. </p>&#xA;&#xA;<p>Not sure why in step 2 above, there is a data collision. I have console.log to print enrolled and enrolling list in the memory/cache before hitting the search query. It shows data collision right there before hitting the search query. so search query is not contributing to the issue and there are no traces of enrolledServices, enrollingServices query execution in step 2 above. I am not sure how enrolled and enrolling data gets messed up.</p>&#xA;&#xA;<p>Note: both enrolledServices, enrollingServices has same search query except 'idFilter' data will be different as they have different service Ids. That means, as per my understanding cache key is unique for these two queries, right?</p>&#xA;&#xA;<p>I am absolutely sure something is missing in my approach or code but not able to figure out. Any help is much appreciated and you will save a lot of time plus for others who may have a similar issue.</p>&#xA;",6126081,,6126081,2020-05-09 17:17:43,2020-05-09 17:17:43,VueJS Apollo graphql store/cache data collision between queries,<vue.js><graphql><vuex><apollo-client><vue-apollo>,0,2,0,2020-05-07 22:45:12
61677041,1,,,0,82,"<p>How I can fix the following bug for the comments from commits that has been merged are not downloaded? I think there is a problem  from REST to GraphQL but I don't know exactly how to fix. &#xA;The following script is used for:&#xA;Get all all quantified activities from a set of GitHub repositories. The&#xA;list of repos to be searched for are found in the <code>repos.lst</code> file.&#xA;Authentication to GitHub is also stored in separate file called <code>github.token</code>&#xA;containing the username and password/access token on two separate lines.&#xA;Quantified activities include merged pull-requests, closed issues (except for&#xA;those explicitly removed from the list for not being constructive) and comments.&#xA;Pull-requests:&#xA;Only the closed pull-requests are listed, and their merge status determined,&#xA;finally the merged pull-requests are stored in a JSON file, with entries&#xA;containing the reference number, the repository, the title, the author and the&#xA;pull-request URL.&#xA;Issues:&#xA;Only the closed issues are listed, the pull-requests (which are treated also as&#xA;issues by the GitHub API) removed from them, isseues blacklisted in the&#xA;<code>blacklist.lst</code> file are also removed from the list, finally the remaining&#xA;issues are stored in a JSON file, with entries containing the reference number,&#xA;the repository, the title, the author and the issue URL.&#xA;Comments:&#xA;Comments from the commits, from the issues and from the pull-requests are all&#xA;listed and stored in JSON file with entries containing the author, the comment&#xA;ID, the repository, the comment content and the comment's URL. Issues comments&#xA;and pull-request comments will also contain the reference number of the issue&#xA;respectively the pull-request, with issues  additionally having also the&#xA;original author of the issue, while the commit comments will contain the SHA1 of&#xA;the commit.</p>&#xA;&#xA;<pre><code>#!/usr/bin/env python3&#xA;&#xA;# requests library is used to access GitHub API&#xA;import requests&#xA;import json&#xA;import re&#xA;import sys&#xA;import os.path&#xA;import bisect&#xA;import getpass&#xA;from itertools import chain&#xA;import repos&#xA;&#xA;year = repos.get_year()&#xA;path = '../../{}/rezultate/'.format(year)&#xA;&#xA;# read the list of repositories&#xA;repo_name = re.compile(r'([\w-]+)/([\w-]+)')&#xA;repos = [('etc-so', 'syllabus')]&#xA;with open(path + 'data/repos.lst', 'r') as f:&#xA;    for s in f:&#xA;        s = s.strip()&#xA;        # ignore empty lines&#xA;        if s and not s.startswith('#'):&#xA;            m = repo_name.fullmatch(s)&#xA;            if not m:&#xA;                print(""Invalid repo name: "" + s)&#xA;            repos.append((m.group(1), m.group(2)))&#xA;&#xA;# read the list of students&#xA;students = []&#xA;with open(path + 'data/students.json', 'r') as f:&#xA;    students = [x['user'] for x in json.load(f)]&#xA;&#xA;if not students:&#xA;    print(""No students to check for"")&#xA;    sys.exit(1)&#xA;&#xA;# get the access token&#xA;if os.path.exists('github.token'):&#xA;    with open('github.token', 'r') as f:&#xA;        auth = (f.readline().strip(), f.readline().strip())&#xA;else:&#xA;    auth = (input(""Enter GitHub username: ""), getpass.getpass('Password: '))&#xA;&#xA;# construct a labels list, so it can be added to the comments as well&#xA;issue_labels = {}&#xA;&#xA;# get the persistent PR, issue and comment lists&#xA;if os.path.exists(path + 'data/pulls.json'):&#xA;    with open(path + 'data/pulls.json', 'r') as f:&#xA;        saved_pulls = dict((x['id'],(x['week'], x['value'], x['author']) + ((x['multi'],) if 'multi' in x else ())) for x in json.load(f))&#xA;else:&#xA;    saved_pulls = {}&#xA;&#xA;if os.path.exists(path + 'data/issues.json'):&#xA;    with open(path + 'data/issues.json', 'r') as f:&#xA;        saved_issues = dict((x['id'],(x['week'], x['value'])) for x in json.load(f))&#xA;else:&#xA;    saved_issues = {}&#xA;&#xA;if os.path.exists(path + 'data/comments.json'):&#xA;    with open(path + 'data/comments.json', 'r') as f:&#xA;        saved_comments = dict((x['id'],(x['week'], x['value'])) for x in json.load(f))&#xA;else:&#xA;    saved_comments = {}&#xA;&#xA;current_week = 0&#xA;# if there were already some activity then move ahead to the last week&#xA;if saved_pulls or saved_issues or saved_comments:&#xA;    current_week = max(x[0] for x in chain(saved_pulls.values(),&#xA;                                           saved_issues.values(),&#xA;                                           saved_comments.values()))&#xA;# if there is a command line argument use it as current week&#xA;if len(sys.argv) == 2:&#xA;    if sys.argv[1].isdigit():&#xA;        current_week = int(sys.argv[1])&#xA;    # -n increments the current week if it can be obtained from the activity&#xA;    elif sys.argv[1] == '-n' and current_week != 0:&#xA;        current_week += 1&#xA;        print(""Switching to week {}"".format(current_week))&#xA;    elif sys.argv[1] == '?':&#xA;        print(""Current week is {}"".format(current_week))&#xA;        sys.exit(0)&#xA;    else:&#xA;        print(""Invalid command line parameter"")&#xA;        sys.exit(1)&#xA;elif len(sys.argv) &gt; 2:&#xA;    print(""Too many parameters"")&#xA;    sys.exit(1)&#xA;# if no current week was obtained, start with week 1&#xA;if not current_week:&#xA;    current_week = 1&#xA;&#xA;api_url = ""https://api.github.com/""&#xA;get_url = ""repos/{}/{}/{}""&#xA;&#xA;c_params = {&#xA;    'state': 'closed', # get closed pull-requests/issues&#xA;    'sort': 'created',&#xA;    'direction': 'asc', # sort it in ascending order by their creation time&#xA;}&#xA;&#xA;pr = []&#xA;pr_times = []&#xA;gi = []&#xA;comments = []&#xA;c_times = []&#xA;authors = {}&#xA;&#xA;issue_comment_re = re.compile(r'.*/(pull|issues)/([0-9]+)#.*')&#xA;link_rel = re.compile(r'&lt;([^&gt;]+)&gt;; rel=""([\w]+)""(?:, )?')&#xA;&#xA;request_count = 0&#xA;&#xA;def github_get(get_code, **params):&#xA;    global request_count&#xA;    global raw_data&#xA;    res = []&#xA;    url = api_url + get_url.format(org, repo, get_code)&#xA;    while url:&#xA;        r = requests.get(url, auth=auth, params=params)&#xA;        if r.status_code != 200:&#xA;            print('Status code {} received'.format(r.status_code))&#xA;            print(r.content)&#xA;            sys.exit(1)&#xA;        links = dict((m[1],m[0]) for m in link_rel.findall(r.headers.get('link', '')))&#xA;        url = links.get('next')&#xA;        res.extend(r.json())&#xA;        request_count = r.headers['X-RateLimit-Remaining']&#xA;    return res&#xA;&#xA;label_values = {&#xA;    'bug': 2,&#xA;    'enhancement': 2,&#xA;    'challenge': 2,&#xA;    'help wanted': 1,&#xA;    'invalid': -1,&#xA;    'duplicate': -2&#xA;}&#xA;&#xA;def label_value(labels):&#xA;    # check predefined values&#xA;    values = [label_values[x] for x in labels if x in label_values]&#xA;    values += [x.count('★') for x in labels]&#xA;    if values:&#xA;        if min(values) &lt; 0:&#xA;            return min(values)&#xA;        value = max(values)&#xA;    else:&#xA;        value = 0&#xA;    # add all white stars&#xA;    value += sum(x.count('☆') for x in labels)&#xA;    return value&#xA;&#xA;&#xA;def issue_value(value, issue_id=None):&#xA;    if issue_id:&#xA;        old_value = saved_issues.get(issue_id)&#xA;        if old_value and old_value[1] != value:&#xA;            print(""Value change detected in issue {}"".format(issue_id))&#xA;    return value&#xA;&#xA;&#xA;def pull_value(label, pull_id=None, ref=0):&#xA;    if label:&#xA;        value = label_value(label)&#xA;    else:&#xA;        value = None&#xA;        print(""No label for pull-request {}"".format(ref))&#xA;    if pull_id:&#xA;        old_value = saved_pulls.get(pull_id)&#xA;        if old_value and old_value[1] is not None and old_value[1] != value:&#xA;            print(""Value change detected in pull-request {}"".format(ref))&#xA;            if value is None:&#xA;                value = old_value[1]&#xA;    return value&#xA;&#xA;&#xA;ptotal = 0&#xA;itotal = 0&#xA;ctotal = 0&#xA;&#xA;# pass through the repos&#xA;for org,repo in repos:&#xA;    print('Processing repo {}:'.format(repo), end=' ', flush=True)&#xA;&#xA;    # get all the issues, do this first as it all includes the pull-requests&#xA;    # for which only here we can determine the labels&#xA;    issues = github_get('issues', state='all', sort='created', direction='asc')&#xA;&#xA;    icount = 0;&#xA;    for i in issues:&#xA;        ref = int(i['number'])&#xA;        author = i['user']['login']&#xA;        authors[(repo, ref)] = author&#xA;        label = [x['name'] for x in i['labels']]&#xA;        issue_labels[(repo, ref)] = label&#xA;        if 'pull_request' not in i and author in students:&#xA;            gi.append(&#xA;                {&#xA;                    'id': i['id'],&#xA;                    'repo': repo,&#xA;                    'ref': ref,&#xA;                    'title': i['title'],&#xA;                    'url': i['html_url'],&#xA;                    'author': author,&#xA;                    'label': label,&#xA;                    'week' : saved_issues.get(i['id'], [current_week])[0],&#xA;                    'value' : issue_value(label_value(label), i['id'])&#xA;                })&#xA;            icount += 1&#xA;&#xA;&#xA;    # get the merged pull-requests&#xA;    pulls = github_get('pulls', state='closed')&#xA;&#xA;    pcount = 0;&#xA;    #print(r.headers)&#xA;    for p in pulls:&#xA;        ref = int(p['number'])&#xA;        author = p['user']['login']&#xA;        label = issue_labels.get((repo, ref), [])&#xA;        if p['merged_at'] and author in students and (not label or label_value(label) &gt;= 0):&#xA;            i = bisect.bisect_right(pr_times, p['merged_at'])&#xA;            pr_times.insert(i, p['merged_at'])&#xA;&#xA;            # check authors of included commits&#xA;            if p['id'] in saved_pulls:&#xA;                author = saved_pulls[p['id']][2]&#xA;            else:&#xA;                pcommits = github_get('pulls/{}/commits'.format(ref))&#xA;                pc_authors = [author]&#xA;&#xA;                for a in pcommits:&#xA;                    al = a['author'].get('login') if a['author'] else None&#xA;                    cl = a['committer'].get('login') if a['committer'] else None&#xA;                    if al == cl or cl == 'web-flow' or cl == 'kcs':&#xA;                        aa = al&#xA;                    else:&#xA;                        aa = ':'.join(x for x in [al, cl] if x)&#xA;                    if aa and aa not in pc_authors and aa != 'kcs':&#xA;                        pc_authors.append(aa)&#xA;&#xA;                if len(pc_authors) != 1:&#xA;                    author = pc_authors&#xA;&#xA;            pr.insert(i, {&#xA;            'id': p['id'],&#xA;                'repo': repo,&#xA;                'ref': ref,&#xA;                'title': p['title'],&#xA;                'url': p['html_url'],&#xA;                'label': label,&#xA;                'author': author,&#xA;                'week': saved_pulls.get(p['id'], [current_week])[0],&#xA;                'value': pull_value(label, p['id'], ref)&#xA;                })&#xA;            if len(saved_pulls.get(p['id'], [])) &gt; 3:&#xA;                pr[i]['multi'] = saved_pulls[p['id']][3]&#xA;            pcount += 1&#xA;&#xA;&#xA;    # and now for the comments:&#xA;    # this is more troublesome as constructive comments must be selected&#xA;    # manually, so we are keeping persistent JSON file for the comments&#xA;    # holding a valid tag, newly downloaded comments have this tag unset&#xA;    # and they can be validated afterwards manually (or by script)&#xA;&#xA;    ccount = 0;&#xA;&#xA;    # 3 types of comments exist on GitHub: issue comments, review comments&#xA;    # and commit comments, all have to be handled separately&#xA;    ccomments = github_get('comments', per_page=50, sort='created')&#xA;&#xA;    #with open('all_ccomments.json', 'w') as f:&#xA;    #   json.dump(ccomments, f, indent=4, sort_keys=True)&#xA;&#xA;    for c in ccomments:&#xA;        author = c['user']['login']&#xA;        if author in students:&#xA;            i = bisect.bisect_right(c_times, c['created_at'])&#xA;            c_times.insert(i, c['created_at'])&#xA;            comments.insert(i,&#xA;                {&#xA;                    'id': c['id'],&#xA;                    'repo': repo,&#xA;                    'commit': c['commit_id'],&#xA;                    'msg': c['body'],&#xA;                    'url': c['html_url'],&#xA;                    'author': author,&#xA;                    'week': saved_comments.get(c['id'], [current_week])[0],&#xA;                    'value': saved_comments[c['id']][1] if c['id'] in saved_comments else None&#xA;                })&#xA;            ccount += 1&#xA;&#xA;    icomments = github_get('issues/comments', per_page=50, sort='created')&#xA;&#xA;    for c in icomments:&#xA;        author = c['user']['login']&#xA;        if author in students:&#xA;            url = c['html_url']&#xA;            m = issue_comment_re.fullmatch(url)&#xA;            if not m:&#xA;                print(""Problem parsing issue url "" + url)&#xA;                sys.exit(1)&#xA;            ref = int(m.group(2))&#xA;            i = bisect.bisect_right(c_times, c['created_at'])&#xA;            c_times.insert(i, c['created_at'])&#xA;            comments.insert(i,&#xA;                {&#xA;                    'id': c['id'],&#xA;                    'repo': repo,&#xA;                    'issue': ref,&#xA;                    'msg': c['body'],&#xA;                    'url': url,&#xA;                    'author': author,&#xA;                    'issue_author': authors[(repo, ref)],&#xA;                    'week': saved_comments.get(c['id'], [current_week])[0],&#xA;                    'value': saved_comments[c['id']][1] if c['id'] in saved_comments else None&#xA;                })&#xA;            if m.group(1) == 'issues' and (repo, ref) in issue_labels:&#xA;                comments[i]['label'] = issue_labels[(repo, ref)]&#xA;            ccount += 1&#xA;&#xA;    pcomments = github_get('pulls/comments', per_page=50, sort='created')&#xA;&#xA;    for c in pcomments:&#xA;        author = c['user']['login']&#xA;        if author in students:&#xA;            ref = int(c['pull_request_url'].rsplit('/', 1)[1])&#xA;            i = bisect.bisect_right(c_times, c['created_at'])&#xA;            c_times.insert(i, c['created_at'])&#xA;            comments.insert(i,&#xA;                {&#xA;                    'id': c['id'],&#xA;                    'repo': repo,&#xA;                    'pull': ref,&#xA;                    'msg': c['body'],&#xA;                    'url': c['html_url'],&#xA;                    'author': author,&#xA;                    'week': saved_comments.get(c['id'], [current_week])[0],&#xA;                    'value': saved_comments[c['id']][1] if c['id'] in saved_comments else None&#xA;                })&#xA;            ccount += 1&#xA;&#xA;    print('found {} merged pull-requests, {} issues and {} comments'.format(pcount, icount, ccount))&#xA;    ptotal += pcount&#xA;    itotal += icount&#xA;    ctotal += ccount&#xA;&#xA;with open(path + 'data/pulls.json', 'w') as f:&#xA;    json.dump(pr, f, indent=4, sort_keys=True, ensure_ascii=False)&#xA;&#xA;with open(path + 'data/issues.json', 'w') as f:&#xA;    json.dump(gi, f, indent=4, sort_keys=True, ensure_ascii=False)&#xA;&#xA;with open(path + 'data/comments.json', 'w') as f:&#xA;    json.dump(comments, f, indent=4, sort_keys=True, ensure_ascii=False)&#xA;&#xA;print(""Total: {} merged pull-requests, {} issues and {} comments [{} contributions]"".format(&#xA;    ptotal, itotal, ctotal, ptotal + itotal + ctotal))&#xA;print(""Remaining request count: {}"".format(request_count))&#xA;&#xA;repo_key = dict((r[1],i) for i,r in enumerate(repos))&#xA;def sort_repos(x):&#xA;    '''Sort the repos in a blacklist with (repo,ref) structure in the order&#xA;       as they appear in the repos list.&#xA;       If repo is not in the list then put them afterwards&#xA;    '''&#xA;    if x[0] in repo_key:&#xA;        return (repo_key[x[0]],x[1])&#xA;    else:&#xA;        return (len(repos),) + x&#xA;</code></pre>&#xA;",13161823,,13161823,2020-05-08 10:31:29,2020-05-08 10:31:29,Python implementation with github,<python><rest><github><graphql>,0,2,0,2020-05-08 10:28:03
61684146,1,,,0,300,"<p>I am new to building shopify applications, and am a bit confused regarding GraphQL. </p>&#xA;&#xA;<p><strong>Currently:</strong> </p>&#xA;&#xA;<p>I have built a super simple Shopify application using the shopify_app gem. The application has some webhooks associated with orders. When a shop creates an order, I receive the JSON from the order, run a job in my code and submit the data I want to my local database. </p>&#xA;&#xA;<p><strong>What I am trying to do:</strong></p>&#xA;&#xA;<p>I need to access all orders from a shopify store that installs my application, and store all orders for that store. I would want to fetch all orders every 4-months or so. Shopify gave my application permission to fetch all orders. </p>&#xA;&#xA;<p><strong>My issue/question:</strong></p>&#xA;&#xA;<p>It appears the best course of action here is to use GraphQL. What I am confused with is do I need to use the shopify_api gem in addition to the shopify_app gem to get GraphQL to work? </p>&#xA;",7601195,,,,2020-05-08 17:00:17,Shopify + GraphQL (gem: shopify_app / shopify_api),<ruby-on-rails><graphql><shopify><shopify-app><shopify-api>,0,3,0,2020-05-08 17:00:17
61721416,1,61743194,,0,394,"<p>I got an issue with graphQL when I was developing the shopify app.&#xA;The logic is simple. I need to get <em>lineItems</em> from the shopify store using the graphQL.&#xA;Here is the code for gql.</p>&#xA;&#xA;<pre><code>const GET_ORDER_DETAIL = gql`&#xA;query getOrderDetail($orderId: String) {&#xA;  order(id: $orderId) {&#xA;    name&#xA;    physicalLocation {&#xA;      id&#xA;    }&#xA;    lineItems (first:100){&#xA;      edges {&#xA;        node {&#xA;          id&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>And here is my React code.</p>&#xA;&#xA;<pre><code>{&#xA;  this.state.refund_list.map((list, index) =&gt; {&#xA;    const orderId = `gid://shopify/Order/${list.order_id}`; // I got correct orderId.&#xA;&#xA;    return (&#xA;      &lt;Query key={index} query={GET_ORDER_DETAIL} variables={{ id: orderId }}&gt;&#xA;        {({ data, loading, error }) =&gt; {&#xA;          if (loading) return &lt;div&gt;loading...&lt;/div&gt;;&#xA;          if (error) return &lt;div&gt;{error}&lt;/div&gt;;&#xA;          console.log(data);&#xA;          return &lt;div&gt;test&lt;/div&gt;;&#xA;        }}&#xA;      &lt;/Query&gt;&#xA;    );&#xA;  })&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And here is Error sentence.</p>&#xA;&#xA;<pre><code>Uncaught Error: Objects are not valid as a React child (found: Error: GraphQL error: Type mismatch on variable $orderId and argument id (String! / ID!)). If you meant to render a collection of children, use an array instead.&#xA;</code></pre>&#xA;",12241587,,12241587,2020-05-11 14:36:16,2020-05-12 03:16:53,GraphQL query issue - shopify polaris,<reactjs><graphql><shopify-app><polaris>,1,2,0,2020-05-11 02:34:34
61737923,1,61738380,,0,151,"<p>I'm wondering if anyone can help me with an algorithm (in JS) to help insert a string, in this case ""id"" onto every level of brackets within another string. For example, if I have the following string: </p>&#xA;&#xA;<p><code>""{id name sub1 { attr sub2 { val key code } id } suba { val key subb { subc { key} } } }""</code></p>&#xA;&#xA;<p>I'd like to convert it to look like: </p>&#xA;&#xA;<p><code>""{id name sub1 { attr sub2 { val key code } id } suba { id val key subb { id subc { id key} } } }""</code></p>&#xA;&#xA;<p>Where after conversion, every level of brackets has an id field. </p>&#xA;&#xA;<p>Please ask if any clarifications are needed. Thanks!</p>&#xA;&#xA;<p>EDIT: Whoops! Sorry I forgot to add an important stipulation: &#xA;If a subset inside brackets already has a ""code"" value defined, then we shouldn't add an id to that level/subset. This can be seen in the above result where sub2 doesn't have an <code>id</code> field in the converted result.  </p>&#xA;&#xA;<p>Besides not wanting ids where there are already codes, the position of the ID field is not important inside the brackets so long as they don't come between the opening bracket and the word immediately before the opening bracket. Aka: this conversion would NOT be good: </p>&#xA;&#xA;<p><code>{name sub { val key}} --&gt; {name sub id { val key id}}</code></p>&#xA;",2178112,,2178112,2020-05-12 19:15:06,2020-05-15 11:59:09,Insert string on every level of braces within a string,<javascript><regex><graphql>,3,3,0,2020-05-11 19:40:21
61761855,1,,,0,16,"<p>I'm new to graphql and i'm trying to find a single fish by the name I pass into the query. I feel like what I have is close, but it is still returning null in the query and I'm not sure why. Any help would be appreciated! </p>&#xA;&#xA;<p>Here is the dummy data I have in memory: </p>&#xA;&#xA;<pre><code>const fish = [&#xA;    { id: 1, name: 'bitterling', available: ['march', 'april', 'may'], amountCaught: 0, sellingPrice: 200 },&#xA;    { id: 2, name: 'black bass', available: ['june', 'july', 'august'], amountCaught: 123, sellingPrice: 1000 },&#xA;    { id: 3, name: 'koi', available: ['march', 'april', 'feburary'], amountCaught: 12, sellingPrice: 4000 }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>Schema: </p>&#xA;&#xA;<pre><code>     type Query {&#xA;         fish: [Fish!]!&#xA;         singleFish(name: String): Fish&#xA;     }&#xA;&#xA;     type Fish {&#xA;         id: ID!&#xA;         name: String!&#xA;         available: [String]&#xA;         amountCaught: Int&#xA;         sellingPrice: Int&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Resolvers: </p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;    Query: {&#xA;        fish: () =&gt; fish,&#xA;        singleFish: (parent, args) =&gt; fish.filter(i =&gt; i.name === args.name)&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Query in graphiql: </p>&#xA;&#xA;<pre><code>{&#xA;  singleFish(name: ""bitterling"") {&#xA;    amountCaught&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Result:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""singleFish"": {&#xA;      ""amountCaught"": null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4728126,,,,2020-05-12 21:02:37,"New to graphql, trying to find a single item from array of objects",<javascript><graphql>,0,5,0,2020-05-12 21:02:37
61776973,2,,58661125,11,,"<p>I found this method and it worked for me. Might not be the code-first approach but I guess it would suffice until you figure it out :)</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { Field, ObjectType } from 'type-graphql';&#xA;import JSON from 'graphql-type-json';&#xA;&#xA;@ObjectType()&#xA;export class YourClass {&#xA;  @Field(() =&gt; JSON)&#xA;  myProperty: any;&#xA;}&#xA;</code></pre>&#xA;",2616192,,9535703,2021-07-25 06:22:42,2021-07-25 06:22:42,"",,0,0,0,2020-05-13 14:15:42
61782298,2,,61778131,0,,<p>As <strong>arrays are objects in javascript</strong> then you can just assign additional property to <code>response.list</code>:</p>&#xA;&#xA;<pre><code>response.list.country = country;&#xA;</code></pre>&#xA;,6124657,,,,2020-05-13 18:35:12,"",,0,0,0,2020-05-13 18:35:12
61812756,1,,,0,153,"<p>I have to use search_analyzer not with text but with type keyword as below:</p>&#xA;&#xA;<pre><code>""properties"":{&#xA;&#xA;""email"" : {&#xA;                ""type"" : ""keyword"",&#xA;                ""analzer"":""autocomplete"",&#xA;                ""search_analyzer"":""standard""&#xA;          }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But actually I have below mappping:</p>&#xA;&#xA;<pre><code> ""properties"":{&#xA;&#xA;    ""email"" : {&#xA;                    ""type"" : ""keyword"",&#xA;              }&#xA;    }&#xA;</code></pre>&#xA;",12473922,,,,2020-05-15 06:13:01,How to use standard search analyzer with keyword mapping?,<node.js><elasticsearch><graphql>,1,0,0,2020-05-15 06:03:01
61812876,2,,61812756,1,,"<p>Analyzers only work with type <code>text</code>, not <code>keyword</code>. So you cannot define a <code>search_analyzer</code> on a keyword field. However, what you can do is to create a sub-field of type text like this:</p>&#xA;&#xA;<pre><code>PUT your-index/_mapping&#xA;{&#xA;  ""properties"": {&#xA;    ""email"": {&#xA;      ""type"": ""keyword"",&#xA;      ""fields"": {&#xA;        ""analyzed"": {&#xA;          ""type"": ""text"",&#xA;          ""analyzer"":""autocomplete"",&#xA;          ""search_analyzer"":""standard""&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When done, you need to update your data so that the <code>email.analyzed</code> field gets properly index. You can do it like this:</p>&#xA;&#xA;<pre><code>POST your-index/_update_by_query&#xA;</code></pre>&#xA;&#xA;<p>When the call returns, the <code>email.analyzed</code> field will have been properly indexed with the <code>autocomplete</code> analyzer and you will be able to search on it using the <code>standard</code> search analyzer.</p>&#xA;",4604579,,,,2020-05-15 06:13:01,"",,0,9,0,2020-05-15 06:13:01
61834467,1,61835699,,0,655,"<p>I'm using graphql-scalars in order to have BigInt type in my graphql schema. It runs but that BigInts have this format:&#xA;{</p>&#xA;&#xA;<p>""data"": {</p>&#xA;&#xA;<p>""createStage"": ""41""</p>&#xA;&#xA;<p>}</p>&#xA;&#xA;<p>}&#xA;It is doublequoted so it is not an numeric type but an string. Am I doing something in bad way?&#xA;Thanks</p>&#xA;",6498338,,,,2020-05-16 10:59:59,graphql-scalars: BigInt doublequoted as string,<graphql>,1,0,0,2020-05-16 09:14:24
61841907,1,,,0,78,"<p>I am a novice to web development, but I am interested in creating an e-commerce website that is sourced via a Google Sheets API (via <a href=""https://sheety.co/"" rel=""nofollow noreferrer"">Sheety</a>). Each product is listed in the spreadsheet with columns for <em>color</em>, <em>pages</em>, and <em>dimensions</em>. I have linked the API successfully to my site (I am using Gatsby), and I have access to the query via GraphQL. Right now I am just reading all the values in the query out, but I would like to group all of a product's properties together in an object. Then, I would loop through all the objects in order to display all product information. I am familiar with object-oriented programming, but I am having a bit of trouble implementing the translation from GraphQL to a <em>Product</em> object. </p>&#xA;&#xA;<p>My code currently looks as follows. For now, all information is being displayed on the index page:</p>&#xA;&#xA;<pre><code>const IndexPage = ({ data }) =&gt; {&#xA; return (&#xA;   &lt;Layout&gt;&#xA;     {data.allRestApi3A78B9835C2B5Bedce82C6924Ff0243ELilaInventory.nodes[0].inventory.map((inventory) =&gt;          &#xA;       return (&#xA;         &lt;article&gt;               &#xA;           &lt;h4&gt; Color: {inventory.color} &lt;/h4&gt;&#xA;           &lt;h4&gt; Dimensions: {inventory.dimensions} &lt;/h4&gt;&#xA;           &lt;h4&gt; Pages: {inventory.pages} &lt;/h4&gt;&#xA;           &lt;h4&gt; Style: {inventory.style} &lt;/h4&gt;&#xA;           &lt;img src = {inventory.image} alt = {inventory.id} /&gt;&#xA;         &lt;/article&gt;&#xA;       )&#xA;   })}     &#xA;   &lt;/Layout&gt;&#xA; )&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My plan as of now is to make an array (<em>ProductList</em>) that stores <em>Product</em> objects. I will use the data in each row of the spreadsheet to make a new <em>Product</em>, and then push that Product to <em>ProductList</em>.</p>&#xA;&#xA;<pre><code>var ProductList = [];&#xA;&#xA;//I am not sure how to interpret the definition of a function when using GraphQL. &#xA;//I am familiar with the idea of *const*, but the syntax in Javascript is a bit different than what I am used to.&#xA;&#xA;data.allRestApi3A78B9835C2B5Bedce82C6924Ff0243ELilaInventory.nodes[0].map(createObject(inventory));&#xA;&#xA;function createObject(item) {&#xA;  var Product = [productColor: {item.color}, productDimensions: {item.dimensions}, etc....];&#xA;  ProductList.push(Product);&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>I also want to create a CSS card for each object because I like how it looks. But, I ultimately want to be able to implement a sorting feature that can iterate through all Products in the array, looking for certain styles or colors. Any advice would be greatly appreciated. Thank you in advance.</p>&#xA;",0,user13556713,,,2020-05-16 19:24:46,How do I create an object in Javascript using data from GraphQL?,<javascript><graphql>,1,0,0,2020-05-16 18:45:08
61846995,1,,,1,205,"<blockquote>&#xA;  <p>I'm using GraphQL with .NET Core. I have query like below. As I'm new in GraphQL.NET, I can't understand how to group individual key as array.</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>`{&#xA;    readingQuery{&#xA;             readingsDBFilter(buildingId: 30, objectId: 1, datafieldId: 1, startTime: ""02-05-201812-00-00-AM"", endTime: ""30-05-201811-59-00-PM""){&#xA;                             value,&#xA;                            unix&#xA;                        }&#xA;    }&#xA;}`    &#xA;</code></pre>&#xA;&#xA;<blockquote>&#xA;  <p>I have Output Like this    </p>&#xA;</blockquote>&#xA;&#xA;<pre><code>`{&#xA;    ""data"": {&#xA;        ""readingQuery"": {&#xA;            ""readingsDBFilter"": [&#xA;               {&#xA;                    ""value"": 0.66,&#xA;                    ""unix"": 1525254180000&#xA;                },&#xA;                {&#xA;                    ""value"": 0.68,&#xA;                    ""unix"": 1525254240000&#xA;                }&#xA;           ]&#xA;       }&#xA;   }&#xA;}`&#xA;</code></pre>&#xA;&#xA;<blockquote>&#xA;  <p>But, Is it possible to return result like this from query.    </p>&#xA;</blockquote>&#xA;&#xA;<pre><code>`{&#xA;    ""data"": {&#xA;        ""readingQuery"": {&#xA;            ""readingsDBFilter"": [&#xA;                {&#xA;                    ""value"":[ 0.66, 0.68],&#xA;                    ""unix"": [1525254180000, 1525254240000]&#xA;                }&#xA;            ]&#xA;        }&#xA;    }&#xA;}`&#xA;</code></pre>&#xA;",7542248,,,,2020-05-28 18:12:20,How to group GraphQL query result with individual key as array,<graphql><asp.net-core-webapi><graphql.net>,1,1,0,2020-05-17 04:30:42
61871240,1,,,1,23,"<p>Let's say that a user creates an order with products in a e-shop, but ordered products have their options to be selected during order process. So user has to select products with some options to buy. &#xA;In graphql there are three types: <code>Product</code>, <code>ProductOption</code> and <code>Order</code>. </p>&#xA;&#xA;<pre><code>type Product implements Node {&#xA;   id: ID!&#xA;   name: String!&#xA;   options: [ProductOptionsConnection!]!&#xA;}&#xA;&#xA;type ProductOption implements Node {&#xA;   id: ID!&#xA;   name: String!&#xA;   product: Product!&#xA;}&#xA;&#xA;type ProductOptionsConnection {&#xA;  edges: [ProductOptionEdge!]!&#xA;  totalCount: Int!&#xA;  ...&#xA;}&#xA;&#xA;type ProductOptionEdge {&#xA;  node: ProductOption!&#xA;}&#xA;&#xA;type Order implements Node {&#xA;   id: ID!&#xA;   createdAt: DateTime!&#xA;   products: OrderProductsConnection!&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p><strong>The question is: what is the best approach of relationships between order, products and selected options?</strong></p>&#xA;&#xA;<p>1:</p>&#xA;&#xA;<pre><code>&#xA;type OrderProductsConnection {&#xA;   edges: [OrderProductEdge!]!&#xA;   totalCount: Int!&#xA;   ...&#xA;}&#xA;&#xA;type OrderProductEdge {&#xA;   node: Product!&#xA;   selectedOptions: [OrderProductOptionsConnection!]!&#xA;   addedAt: DateTime&#xA;}&#xA;&#xA;type OrderProductOptionsConnection {&#xA;   edges: [OrderProductOptionEdge!]!&#xA;   totalCount: Int!&#xA;   ...&#xA;}&#xA;&#xA;type OrderProductOptionEdge {&#xA;   node: ProductOption&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>2:</p>&#xA;&#xA;<pre><code>type OrderProductsConnection {&#xA;   edges: [OrderProductEdge!]!&#xA;   totalCount: Int!&#xA;   ...&#xA;}&#xA;&#xA;type OrderProductEdge {&#xA;  node: OrderProduct!&#xA;}&#xA;&#xA;type OrderProduct {  // implements Node??&#xA;  product: Product!&#xA;  selectedOptions: OrderProductOptionsConnection!&#xA;  addedAt: DateTime!&#xA;}&#xA;&#xA;type OrderProductOptionsConnection {&#xA;  edges: [OrderProductOptionEdge]!&#xA;}&#xA;&#xA;type OrderProductOptionEdge {&#xA;   node: OrderProductOption!&#xA;}&#xA;&#xA;type OrderProductOption { // implements Node??&#xA;   option: ProductOption!&#xA;   ...&#xA;}&#xA;&#xA;</code></pre>&#xA;",1149376,,1427878,2020-05-19 06:55:55,2020-05-19 06:55:55,"GraphQL Design: May edge have own subedges (connections, relationships)?",<graphql><apollo><apollo-server><graphql-relay>,0,0,0,2020-05-18 13:57:24
61892233,1,61912177,,1,1981,"<p>We are facing challenges while updating product options in product variants as options fields in GraphQL and Rest API are totally different. Below is the screen-shot:</p>&#xA;&#xA;<p>GraphQL:&#xA;<a href=""https://i.stack.imgur.com/ok95V.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ok95V.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>REST APIs:&#xA;<a href=""https://i.stack.imgur.com/rqZLQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rqZLQ.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>We are using GraphQL to mutate product variant. So our challenge is, how can we send three different options  (like, large, blue, paper) to product variant that make one variant as it takes only one [String!] value. Whereas in REST APIs, there are three different options (option1, option2, option3) along with Default Title.</p>&#xA;&#xA;<p>Also, if possible can anyone share a dummy mutation request for this?</p>&#xA;&#xA;<p>Below are the links that we are referring to:</p>&#xA;&#xA;<p>Update Product Variant: <a href=""https://shopify.dev/docs/admin-api/graphql/reference/mutation/productvariantupdate?api[version]=2020-04"" rel=""nofollow noreferrer"">https://shopify.dev/docs/admin-api/graphql/reference/mutation/productvariantupdate?api[version]=2020-04</a></p>&#xA;&#xA;<p>Update Product: <a href=""https://shopify.dev/docs/admin-api/graphql/reference/mutation/productupdate?api[version]=2020-04"" rel=""nofollow noreferrer"">https://shopify.dev/docs/admin-api/graphql/reference/mutation/productupdate?api[version]=2020-04</a></p>&#xA;",4528324,,,,2020-05-20 11:40:02,How to update product options in product variant in Shopify?,<graphql><shopify><shopify-api>,1,0,0,2020-05-19 13:27:20
61912177,2,,61892233,2,,"<p>Well, it actually takes an array of strings (<code>[String!]</code>), not a single string value. So you need to pass it like that <code>[""Large"", ""Blue"", ""Paper""]</code>, see detailed mutation request below:</p>&#xA;&#xA;<p><strong>Query</strong></p>&#xA;&#xA;<pre><code>mutation productVariantUpdate($input: ProductVariantInput!) {&#xA;  productVariantUpdate(input: $input) {&#xA;    productVariant {&#xA;      id,&#xA;      selectedOptions {&#xA;          name,&#xA;          value&#xA;      }&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Variables</strong></p>&#xA;&#xA;<pre><code>{&#xA;  ""input"": {&#xA;    ""id"": ""gid://shopify/ProductVariant/31886472609857"",&#xA;    ""options"": [""Large"", ""Blue"", ""Paper""]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1568963,,,,2020-05-20 11:40:02,"",,0,0,0,2020-05-20 11:40:02
61913640,1,61915539,,2,799,"<p>I am building my first many-to-many insert mutation in Hasura and finding it difficult. The syntax in <a href=""https://hasura.io/docs/1.0/graphql/manual/mutations/insert.html#many-to-many-relationships"" rel=""nofollow noreferrer"">the docs</a> and the accompanying explanation is very difficult to follow.</p>&#xA;&#xA;<p>I am simply trying to add a connection between a <code>component</code> and a <code>module</code>.</p>&#xA;&#xA;<p>Here is the state of my current query.</p>&#xA;&#xA;<pre><code>mutation MyMutation {&#xA;  insert_component(objects: {component_module: {data: {module: {data: {id: ""775c9e27-c974-4cfa-a01f-af50bd742726""}, on_conflict: {constraint: module_id_key, update_columns: id}}}}}) {&#xA;    affected_rows&#xA;    returning {&#xA;      id&#xA;      component_modules&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the error I get.</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""extensions"": {&#xA;        ""path"": ""$.selectionSet.insert_component.args.objects[0].component_module.data"",&#xA;        ""code"": ""constraint-violation""&#xA;      },&#xA;      ""message"": ""Not-NULL violation. null value in column \""component_id\"" violates not-null constraint""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<ul>&#xA;<li><a href=""https://i.stack.imgur.com/Kycwe.png"" rel=""nofollow noreferrer"">Here is my <code>component</code> table</a></li>&#xA;<li><a href=""https://i.stack.imgur.com/AxVx0.png"" rel=""nofollow noreferrer"">Here is my <code>module</code> table</a></li>&#xA;<li><a href=""https://i.stack.imgur.com/OUvpY.png"" rel=""nofollow noreferrer"">Here is my <code>component_module</code> bridge table</a></li>&#xA;</ul>&#xA;&#xA;<p>Thanks in advance for your help.</p>&#xA;",13582058,,,,2020-05-22 17:37:20,How to build a many-to-many insert mutation in Hasura?,<graphql><hasura>,1,0,0,2020-05-20 12:53:24
61920174,2,,60480822,0,,"<p>You can avoid using constants using this style:</p>&#xA;&#xA;<pre><code>query = ShopifyAPI::GraphQL.client.parse &lt;&lt;-'GRAPHQL'&#xA;  {&#xA;    shop {&#xA;      name&#xA;    }&#xA;  }&#xA;GRAPHQL&#xA;&#xA;result = ShopifyAPI::GraphQL.client.query(query)&#xA;puts ""Shop name: #{result.data.shop.name}""&#xA;</code></pre>&#xA;&#xA;<p>I didn't set up your exact query but this solved the problem for the queries I was making.</p>&#xA;&#xA;<p>Reference from their docs: <a href=""https://github.com/Shopify/shopify_api/blob/master/docs/graphql.md"" rel=""nofollow noreferrer"">https://github.com/Shopify/shopify_api/blob/master/docs/graphql.md</a></p>&#xA;",1689886,,,,2020-05-20 18:21:09,"",,0,0,0,2020-05-20 18:21:09
61921597,2,,61914812,4,,"<p>During iteration over pages (where create page is used) you can create tag nodes.</p>&#xA;&#xA;<ul>&#xA;<li>create an empty <code>tags</code> object (before iteration, for by name addressing),</li>&#xA;<li>in loop (for every page): &#xA;&#xA;<ul>&#xA;<li>loop over page tags (from frontmater <code>tags</code>):&#xA;&#xA;<ul>&#xA;<li>create <code>tags[tag_name]</code> object (if not exists) with <code>posts</code> array property;</li>&#xA;<li>insert current page <code>slug</code> into <code>tags[tag_name].posts</code></li>&#xA;</ul></li>&#xA;</ul></li>&#xA;</ul>&#xA;&#xA;<p>At the end (after create page loop) you have data collected in the structure like:</p>&#xA;&#xA;<pre><code>tags={&#xA;  ""tag_1"" : {&#xA;    posts [&#xA;      ""slug_1"",&#xA;      ""slug_2""&#xA;    ]&#xA;  },&#xA;  ""tag_2"" : {&#xA;    posts [&#xA;      ""slug_2"",&#xA;      ""slug_3"",&#xA;      ""slug_4""&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>By iteration over this object you can create tag nodes with {tag_name, posts, post_count}. </p>&#xA;&#xA;<p>After this you can create <code>/tags</code> pages. You can query for nodes collection.</p>&#xA;&#xA;<p>You should be able (test in playground) to paginate them for tags index pages, you can display tag name, amount of pages and even pages links (expand amount component view? <code>posts</code> and <code>post_count</code> passed as props).</p>&#xA;",6124657,,,,2020-05-20 19:44:35,"",,0,0,0,2020-05-20 19:44:35
61934379,1,61934497,,0,981,"<p>Is there any way to define a list with fixed length in graphQL schema? For example</p>&#xA;&#xA;<pre><code>type Foo {&#xA;    # fixedLengthList is valid only when it's length is two&#xA;    fixedLengthList: [String!, String!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any suggestion is welcome!</p>&#xA;&#xA;<h2>Solution</h2>&#xA;&#xA;<p>Thanks for the suggestions of @xadm and @Daniel Rearden. I check the length of the list in my resolver. And if the length of list is not expected, it throws an error. The code is shown below.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>Foo: {&#xA;   fixedLengthList(obj) {&#xA;       const list = getFixedLengthList(obj);&#xA;       if (list.length !== 2) throw New Error('The length of fixedLengthList is expected two but got' + list.length);&#xA;&#xA;       return list;&#xA;   }&#xA;}&#xA;</code></pre>&#xA;",0,user11081925,,2020-05-22 02:10:32,2020-05-22 02:10:32,GraphQL list with fixed length,<graphql>,1,2,0,2020-05-21 12:19:18
61948797,2,,61932471,1,,<p>I think your syntax <code>ListField .forEach(element =&gt;...</code> is not right. It should be <code>ids.forEach(element =&gt;...</code></p>&#xA;,9548285,,,,2020-05-22 06:04:55,"",,0,0,0,2020-05-22 06:04:55
61981646,1,61981803,,0,117,"<p>I'm mapping the data returned from graphql into a react app. I have used .filter() to apply filtration client side, but I cant figure out how to make the filtration dynamic for use input. my current code is like so:&#xA;maps the results:</p>&#xA;&#xA;<pre><code>  const names = data?.venuesByCountry.filter(deliverFilter).map(v =&gt; (&#xA;    &lt;&gt;&#xA;      &lt;FlexGridItem&gt; &#xA;        &lt;Link href={`${config.frontendUrl}/${v.slug}`}&gt;&#xA;          {v.isOrderingAvailable}&#xA;          {v.name}&#xA;          {v.isOrderingAvailable}&#xA;          {v.isPickUpAvailable}&#xA;        &lt;/Link&gt;&#xA;      &lt;/FlexGridItem&gt;&#xA;    &lt;/&gt;&#xA;  ))&#xA;</code></pre>&#xA;&#xA;<p>buttons to filter results:</p>&#xA;&#xA;<pre><code>    &lt;Button onClick={() =&gt; pickUp()}&gt;PICK UP&lt;/Button&gt;&#xA;    &lt;Button onClick={() =&gt; delivery()}&gt;DELIVERY&lt;/Button&gt;&#xA;</code></pre>&#xA;&#xA;<p>functions that I hoped would dynamically filter the results:</p>&#xA;&#xA;<pre><code>  function delivery(){&#xA;    deliverFilter = venuesByCountry =&gt; venuesByCountry.isDeliveryAvailable&#xA;  }&#xA;  function pickUp(){&#xA;    deliverFilter = venuesByCountry =&gt; venuesByCountry.isPickUpAvailable&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Appreciate any ideas you guys have :)</p>&#xA;",13605442,,13605442,2020-05-24 09:18:18,2020-05-24 09:18:18,SOLVED: Filtering results arrays in react client side,<javascript><reactjs><typescript><filter><graphql>,2,0,0,2020-05-24 04:27:57
61993743,1,61994579,,1,248,"<p>I have this query:</p>&#xA;&#xA;<pre><code>query SessionQuery {&#xA;  cliente {&#xA;    id&#xA;    clienteId&#xA;    rut&#xA;    porcentajeDeCompletitudDeInformacion&#xA;    fichaCliente {&#xA;      tipoPersona&#xA;      razonSocial&#xA;    }&#xA;    representantesLegales {&#xA;      edges {&#xA;        node {&#xA;          rutRepresentante&#xA;        }&#xA;      }&#xA;    }&#xA;    documentosRequeridos {&#xA;      edges {&#xA;        node {&#xA;          iDDocumento&#xA;          cargado&#xA;          nombreDocumento&#xA;          tipoDocumentoHQB&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;  usuario {&#xA;    id&#xA;    usuarioId&#xA;    email&#xA;    nombre&#xA;    rut&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm testing for the first time GraphQL through Postman, like this way:&#xA;<a href=""https://i.stack.imgur.com/QaiGR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QaiGR.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>I'm having this response, I don't understand the error message:</p>&#xA;&#xA;<pre><code>{""data"":{""cliente"":{""id"":""Q2xpZW50ZTow"",""clienteId"":0,""rut"":""XXX"",""porcentajeDeCompletitudDeInformacion"":20,""fichaCliente"":{""tipoPersona"":2,""razonSocial"":""ING. Y SISTEMAS BIZWARE  (Empresa Relacionada)""},""representantesLegales"":{""edges"":[{""node"":{""rutRepresentante"":null}}]},""documentosRequeridos"":{""edges"":[]}},""usuario"":{""id"":""VXN1YXJpbzoyMDI4"",""usuarioId"":2028,""email"":""XXXX@gmail.com"",""nombre"":""XXXX"",""rut"":""XXXX""}},""errors"":[{""message"":""GraphQL.ExecutionError: Cannot return null for non-null type. Field: rutRepresentante, Type: String!.\r\n   at GraphQL.Execution.ExecutionStrategy.ValidateNodeResult(ExecutionContext context, ExecutionNode node)\r\n   at GraphQL.Execution.ExecutionStrategy.ExecuteNodeAsync(ExecutionContext context, ExecutionNode node)"",""locations"":[{""line"":14,""column"":11}],""path"":[""cliente"",""representantesLegales"",""edges"",""0"",""node"",""rutRepresentante""]}]}&#xA;</code></pre>&#xA;&#xA;<p>I not sure what it means the error. My problem is when I call this Graphql endpoint from JavaScript I have a CORS problem in my app, but I detected with Postman that maybe the problem is this one, and the query or something is broken. Any idea please, thanks.</p>&#xA;",3541320,,,,2020-05-25 01:43:05,"Postman, test Graphql response",<graphql><postman>,1,2,0,2020-05-24 23:41:36
61996475,1,62010039,,3,7744,"<p>I want to tell GraphQL that my 'serialNumber' field is a String with a length of between 1 and 20 characters. I know to use the ! in the schema to make a field Required, but can I tell GraphQL that there is also a maximum field length?</p>&#xA;&#xA;<p>If I pass a null value in for a required String field, GraphQL will not accept it. I want it to behave the same way when it is passed a string that is longer than the maximum allowed length.</p>&#xA;&#xA;<p>I have looked at doing this two ways: 1) Add a 'maxlength' attribute to the field definition in the schema.graphql file. or 2) Create a new type and assign it a maximum length.</p>&#xA;&#xA;<p>I can't find any information on how to do it. Is is possible?</p>&#xA;",1978448,,,,2020-05-25 20:13:17,GraphQL - how to specify maximum String lengths in schema,<graphql>,3,0,0,2020-05-25 05:44:32
61999515,2,,61994158,0,,"<p>You can create another GraphQL <code>type</code> for that &amp; nest it in your main <code>type</code> so that you can also query your data. Also add resolver for that data to be retrieved.</p>&#xA;&#xA;<p>For example: let's say you have a blogging site &amp; you have some posts. For that</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>type Post {&#xA;  _id: String&#xA;  title: String&#xA;  credit: PostCredit # Name of nested type&#xA;}&#xA;</code></pre>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>type PostCredit {&#xA;  authorId: String # You can also perform further nesting&#xA;  publicationId: String&#xA;}&#xA;</code></pre>&#xA;",12077817,,12077817,2020-05-25 13:30:45,2020-05-25 13:30:45,"",,0,2,0,2020-05-25 09:26:41
62012406,1,,,0,88,"<p>If I have a simple UI component that displays some some product info. And it contains it's own fragment like so:</p>&#xA;&#xA;<pre><code>const Product = ({detail}) =&gt; {&#xA;&#xA;  const data = useFragment(&#xA;    graphql`&#xA;        fragment Product_detail on Product {&#xA;            title&#xA;            detail&#xA;        }&#xA;    `,&#xA;    detail&#xA;  )&#xA;&#xA;  return (&#xA;     &lt;div&gt;&#xA;       &lt;h1&gt;{data.title}&lt;/h1&gt;&#xA;       &lt;p&gt;{data.detail}&lt;/p&gt;&#xA;     &lt;/div&gt;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And it is use it inside a parent component that looks like this:</p>&#xA;&#xA;<pre><code>const Page1 = ({content}) =&gt; {&#xA;&#xA;  const data = useFragment(&#xA;    graphql`&#xA;        fragment Page1_content on Page1Info {&#xA;            oneProduct {&#xA;              ...Product_detail&#xA;            }&#xA;        }&#xA;    `,&#xA;    detail&#xA;  )&#xA;&#xA;  return &lt;Product detail={data.oneProduct}/&gt;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How could I reuse the <code>Product</code> component on a different page, where the parent's graphql fragment returns an array of Products, instead of just one product?</p>&#xA;&#xA;<pre><code>const Page2 = ({content}) =&gt; {&#xA;&#xA;  const data = useFragment(&#xA;    graphql`&#xA;        fragment Page2_content on Page2Info {&#xA;            allProducts { //returns an array of products&#xA;              title&#xA;              ...Product_detail&#xA;            }&#xA;        }&#xA;    `,&#xA;    detail&#xA;  )&#xA;&#xA;  return (&#xA;    &lt;div&gt;&#xA;       {data.allProducts.map(product =&gt; &lt;button&gt;{product.name}&lt;/button&gt;)}&#xA;&#xA;       {*/Display the product detail of the product who's button is clicked*/}&#xA;       &lt;Product detail={data.allProducts}/&gt;&#xA;    &lt;/div&gt;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am using Relay as my graphql client. But I'm assuming the principal are the same across all clients?</p>&#xA;",1008340,,,,2020-05-25 23:40:35,How to use react component with its own graphql fragment when the api returns an array?,<reactjs><graphql><relayjs><relay><relaymodern>,0,5,0,2020-05-25 23:40:35
62025191,1,,,1,639,"<p>I want to chart the size of a file over time for a project. To do that, I need the size of the file for the last 100 commits (or at least those commits that change it).</p>&#xA;&#xA;<p>How do I get that data with the GitHub GraphQL API?</p>&#xA;&#xA;<p>I can get the history of a project:</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{ &#xA;  repository(owner:""someOwner"", name:""some-Repo"") {&#xA;    defaultBranchRef{&#xA;      target {&#xA;        ...on Commit{&#xA;          history(first:100, path: ""some/file/path"") {&#xA;            nodes {&#xA;              committedDate&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And I can get the size of the file on the HEAD of master:</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner:""someOwner"", name:""some-Repo"" ) {&#xA;    object(expression: ""master:some/file/path"") {&#xA;      ...on Blob {&#xA;        byteSize&#xA;      }&#xA;    }&#xA;  } &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But the following doesn't work:</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner: ""someOwner"", name: ""some-Repo"") {&#xA;    defaultBranchRef {&#xA;      target {&#xA;        ... on Commit {&#xA;          history(first: 100, path: ""some/file/path"") {&#xA;            nodes {&#xA;              committedDate&#xA;              repository {&#xA;                object(expression: ""master:some/file/path"") {&#xA;                  ... on Blob {&#xA;                    byteSize&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It gives me the <em>current</em> file size every time, instead of the file size for the given commit.</p>&#xA;&#xA;<p>Is it <em>possible</em> to get that data via the GraphQL API in a single request?</p>&#xA;",3293343,,,,2020-06-17 08:11:00,"With the GitHub GraphQL API, how do I get the size of a file for commits over time?",<git><graphql><github-api>,1,0,0,2020-05-26 15:02:32
62029668,2,,62025191,0,,"<p>One way is to get the <code>tree</code> from the <code>commit</code> result and list file entries. This would work but would return all files for that commit. For example:</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner: ""bertrandmartel"", name: ""media-optimizer"") {&#xA;    defaultBranchRef {&#xA;      target {&#xA;        ... on Commit {&#xA;          history(first: 100, path: ""cloudformation.yml"") {&#xA;            nodes {&#xA;              oid&#xA;              tree {&#xA;                entries {&#xA;                  name&#xA;                  object {&#xA;                    ...on Blob {&#xA;                      byteSize&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You could then filter the correct file in the result like : </p>&#xA;&#xA;<pre class=""lang-bash prettyprint-override""><code>TOKEN=[YOUR TOKEN]&#xA;REPO_OWNER=bertrandmartel&#xA;REPO_NAME=media-optimizer&#xA;FILE_PATH=cloudformation.yml&#xA;&#xA;curl -s -H ""Authorization: token $TOKEN"" \&#xA;     -H  ""Content-Type:application/json"" \&#xA;     -d '{ &#xA;          ""query"": ""{repository(owner: \""'""$REPO_OWNER""'\"", name: \""'""$REPO_NAME""'\"") { defaultBranchRef {target {... on Commit {history(first: 100, path: \""'""$FILE_PATH""'\"") {nodes {committedDate tree {entries {name object {...on Blob {byteSize}}}}}}}}}}}""&#xA;      }' https://api.github.com/graphql | jq '.data.repository.defaultBranchRef.target.history.nodes[] | &#xA;        {&#xA;            date:.committedDate, &#xA;            size: .tree.entries[] | select(.name==""'""$FILE_PATH""'"") | .object.byteSize&#xA;        }'&#xA;</code></pre>&#xA;&#xA;<p>which would output :</p>&#xA;&#xA;<pre><code>{&#xA;  ""date"": ""2020-01-29T17:30:58Z"",&#xA;  ""size"": 8408&#xA;}&#xA;{&#xA;  ""date"": ""2020-01-29T16:43:00Z"",&#xA;  ""size"": 8030&#xA;}&#xA;{&#xA;  ""date"": ""2020-01-29T01:50:31Z"",&#xA;  ""size"": 7601&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Another way without listing all fields would be to perform 2 requests, the first listing all commit ID. The second request being created dynamically using <a href=""https://graphql.org/learn/queries/#aliases"" rel=""nofollow noreferrer"">aliases</a> to perform multiple <code>object(expression: ""OID:some/file/path"")</code> as you suggested</p>&#xA;&#xA;<p>First request: query date and oid :</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>query getCommitOid {&#xA;  repository(owner: ""bertrandmartel"", name: ""media-optimizer"") {&#xA;    defaultBranchRef {&#xA;      target {&#xA;        ... on Commit {&#xA;          history(first: 100, path: ""cloudformation.yml"") {&#xA;            nodes {&#xA;              committedDate&#xA;              oid&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Second request : build aliases for each commit (here for 3 commits):</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>query getByteSize {&#xA;  repository(owner: ""bertrandmartel"", name: ""media-optimizer"") {&#xA;    commit1: object(expression: ""310fe12a847549ac33096d1f7301ea0a968c638c:cloudformation.yml"") {&#xA;      ... on Blob {&#xA;        byteSize&#xA;      }&#xA;    }&#xA;    commit2: object(expression: ""9eb80883322420fc1bf51b924c2c56ec8af8b109:cloudformation.yml"") {&#xA;      ... on Blob {&#xA;        byteSize&#xA;      }&#xA;    }&#xA;    commit3: object(expression: ""53172d2c7d439d7d97935c422c5b853a7cc5458d:cloudformation.yml"") {&#xA;      ... on Blob {&#xA;        byteSize&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2614364,,2614364,2020-06-17 08:11:00,2020-06-17 08:11:00,"",,0,0,0,2020-05-26 19:15:21
62030215,1,,,-2,93,"<p>As I know when I declared the object as nested it created an array like structure to store the multiple object of that object type.&#xA;This is example of mapping json file.  </p>&#xA;&#xA;<pre><code>{&#xA;    ""employee"": {&#xA;        ""dynamic"": ""strict"",&#xA;        ""properties"": {&#xA;            ""id"": {&#xA;                ""type"": ""keyword""&#xA;            },&#xA;            ""name"": {&#xA;             ""type"": ""keyword""&#xA;            },&#xA;            ""previous_job_documents"": {&#xA;                ""type"": ""nested"",&#xA;                ""properties"": {&#xA;                    ""id"": {&#xA;                        ""type"": ""keyword""&#xA;                    },&#xA;                    ""status"": {&#xA;                        ""type"": ""keyword""&#xA;                    },&#xA;                    ""type"": {&#xA;                        ""type"": ""integer""&#xA;                    }&#xA;                   }&#xA;                  }&#xA;                }}}&#xA;</code></pre>&#xA;&#xA;<p>Sample data fetched from elastic.</p>&#xA;&#xA;<pre><code>  ""data"": {&#xA;    ""nodes"": {&#xA;      ""totalCount"": 465,&#xA;      ""edges"": [&#xA;        {&#xA;          ""id"": ""b6ecb8aa-4d12-44d6-8ed7-9ee1003d0d54"",&#xA;          ""name"": ""test"",&#xA;          ""previous_job_documents"": [&#xA;            {&#xA;              ""type"": ""RELIEVING_LETTER"",&#xA;              ""status"": ""NOT_SUBMITTED""&#xA;            },&#xA;            {&#xA;              ""type"": ""OFFER_LETTER"",&#xA;              ""status"": ""SUBMITTED""&#xA;            },&#xA;            {&#xA;              ""type"": ""PAYSLIP_FIRST_MONTH"",&#xA;              ""status"": ""VERIFIED""&#xA;            },&#xA;            {&#xA;              ""type"": ""PAYSLIP_SECOND_MONTH"",&#xA;              ""status"": ""NOT_SUBMITTED""&#xA;            },&#xA;            {&#xA;              ""type"": ""PAYSLIP_THIRD_MONTH"",&#xA;              ""status"": ""NOT_SUBMITTED""&#xA;            }&#xA;          ]&#xA;        }&#xA;        ]&#xA;        }}}&#xA;</code></pre>&#xA;&#xA;<p>Problem: I want to write a filter which will find all the employees whose name is test and  RELIEVING_LETTER is NOT_SUBMITTED and OFFER_LETTER is SUBMITTED.</p>&#xA;&#xA;<p>This is what I tried in filter:</p>&#xA;&#xA;<pre><code>{&#xA;  ""filters"": {&#xA;    ""Employee"": &#xA;    {""AND"": [{""name"": ""test""},&#xA;      {&#xA;        ""path"": ""previous_job_documents""&#xA;        ""AND"": [&#xA;            {&#xA;              ""term"": {&#xA;                ""previous_job_documents.type"": {&#xA;                  ""value"": ""RELIEVING_LETTER""&#xA;                }&#xA;              }&#xA;            },&#xA;            {&#xA;              ""term"": {&#xA;                ""previous_job_documents.status"": {&#xA;                  ""value"": ""NOT_SUBMITTED""&#xA;                }&#xA;              }&#xA;            },&#xA;&#xA;&#xA;          {&#xA;              ""term"": {&#xA;                ""previous_job_documents.type"": {&#xA;                  ""value"": ""OFFER_LETTER""&#xA;                }&#xA;              }&#xA;            },&#xA;            {&#xA;              ""term"": {&#xA;                ""previous_job_documents.status"": {&#xA;                  ""value"": ""SUBMITTED""&#xA;                }&#xA;              }&#xA;            }&#xA;        ]&#xA;      }&#xA;        ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",13622548,,,,2020-05-31 11:47:18,There is a nested object in my Elastic mapping. I am trying to create a filter query for that nested object,<elasticsearch><graphql><kibana>,1,0,0,2020-05-26 19:47:31
62031840,1,62033388,,1,75,"<p>I am trying to create two GraphQL types, Item and Listing, which contain instances of each other as fields. In GraphQL type language they would be:</p>&#xA;&#xA;<pre><code>type Item {&#xA;    id: ID!&#xA;    name: String!&#xA;    ...&#xA;    listings: [Listing]!&#xA;}&#xA;&#xA;type Listing {&#xA;    id: ID!&#xA;    price: Int!&#xA;    ...&#xA;    item: Item!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>(... represents irrelevant omitted fields)</p>&#xA;&#xA;<p>I've seen other projects do this so I know it's possible, but I'm having difficulty doing this with <a href=""https://github.com/graphql-go/graphql"" rel=""nofollow noreferrer"">github.com/graphql-go/graphql</a>. From what I've learned online the way to do this using Go would be:</p>&#xA;&#xA;<pre><code>var ItemType graphql.Type = graphql.NewObject(&#xA;    graphql.ObjectConfig {&#xA;        Name: ""Item"",&#xA;        Fields: graphql.Fields {&#xA;            ""id"": &amp;graphql.Field {&#xA;                Type: graphql.ID,&#xA;             },&#xA;             ""name"": &amp;graphql.Field {&#xA;                Type: graphql.String,&#xA;             },&#xA;             ...&#xA;             ""listings"": &amp;graphql.Field {&#xA;                Type: graphql.NewList(ListingType),&#xA;             },&#xA;        },&#xA;    },&#xA;)&#xA;&#xA;var ListingType graphql.Type = graphql.NewObject(&#xA;    graphql.ObjectConfig {&#xA;        Name: ""Listing"",&#xA;        Fields: graphql.Fields {&#xA;            ""id"": &amp;graphql.Field {&#xA;                Type: graphql.ID,&#xA;             },&#xA;             ""price"": &amp;graphql.Field {&#xA;                Type: graphql.Int,&#xA;             },&#xA;             ...&#xA;             ""item"": &amp;graphql.Field {&#xA;                Type: ItemType,&#xA;             },&#xA;        },&#xA;    },&#xA;)&#xA;</code></pre>&#xA;&#xA;<p>but this results in an initialization loop:</p>&#xA;&#xA;<pre><code>./test.go:9:5: initialization loop:&#xA;        /home/william/Desktop/test.go:9:5: ItemType refers to&#xA;        /home/william/Desktop/test.go:26:5: ListingType refers to&#xA;        /home/william/Desktop/test.go:9:5: ItemType&#xA;</code></pre>&#xA;&#xA;<p>I understand that this happens because the compiler needs to know the size of ItemType in order to determine the size of ListingType in order to determine the size of ItemType (and on and on...) but I'm not sure how to get around it.</p>&#xA;",6606390,,,,2020-05-27 00:05:18,Creating cyclical GraphQL types in Go,<go><graphql>,1,0,0,2020-05-26 21:38:21
62042430,2,,61960272,1,,"<p>The easiest way to create a GraphQL query is</p>&#xA;&#xA;<ol>&#xA;<li>create a hashtable with <a href=""https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_quoting_rules?view=powershell-7#here-strings"" rel=""nofollow noreferrer"">HERE-STRINGS</a></li>&#xA;<li>convert it to a JSON string with <code>ConvertTo-Json</code>.</li>&#xA;</ol>&#xA;&#xA;<pre class=""lang-bsh prettyprint-override""><code>$bodytxt = @{""query"" = @'&#xA;  mutation {&#xA;    change_column_value(&#xA;      board_id: 123123&#xA;      item_id: 456456&#xA;      column_id: ""status1""&#xA;      value: ""{\""index\"":1}""&#xA;    ) {&#xA;      id&#xA;    }&#xA;  }&#xA;'@&#xA;} | ConvertTo-Json&#xA;</code></pre>&#xA;&#xA;<p>White spaces inside <code>@'...'@</code> are optional.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>reply to <a href=""https://stackoverflow.com/questions/61960272/powershell-graphql-mutation-parsing-error?noredirect=1#comment109662043_61960272"">this comment</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>it should always work in the API call with the GraphQL? </p>&#xA;</blockquote>&#xA;&#xA;<p>I think it depends on services, but in most cases, yes. <code>application/json</code> is the GraphQL default content type for the request body.</p>&#xA;&#xA;<p>and for <a href=""https://support.monday.com/hc/en-us/articles/360005144659-Does-monday-com-have-an-API-"" rel=""nofollow noreferrer"">monday.com</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>Be sure to use the application/json content type</p>&#xA;</blockquote>&#xA;",13388552,,,,2020-05-27 11:49:37,"",,0,0,0,2020-05-27 11:49:37
62047651,2,,62047294,1,,"<p>GraphQL supports <a href=""http://spec.graphql.org/June2018/#sec-Field-Alias"" rel=""nofollow noreferrer"">field aliases</a>, which allow you to change the name of the field as it appears in the response from the server:</p>&#xA;&#xA;<pre><code>query ReviewsQuery {&#xA;  sanityTestimonials {&#xA;    subTitle&#xA;    title&#xA;    testimonial {&#xA;      text: content&#xA;      email&#xA;      show&#xA;      name&#xA;      _key&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6024220,,,,2020-05-27 16:05:38,"",,0,0,0,2020-05-27 16:05:38
62068520,1,,,1,680,"<p>I'm building a cli application using GitHub API V4. I need to remove all labels a repository has.</p>&#xA;&#xA;<p><strong>URL:</strong> <a href=""https://api.github.com/graphql"" rel=""nofollow noreferrer"">https://api.github.com/graphql</a></p>&#xA;&#xA;<p><strong>HEADERS:</strong></p>&#xA;&#xA;<ul>&#xA;<li>Accept: application/vnd.github.bane-preview+json</li>&#xA;<li>Authorization: bearer <code>&lt;GITHUB_TOKEN&gt;</code></li>&#xA;</ul>&#xA;&#xA;<p>I need to get the result of the <code>GetLabelID</code> query and put it into <code>id</code> at <code>DeleteLabels</code> mutation.</p>&#xA;&#xA;<pre><code>query GetLabelID {&#xA;  repository(owner: ""erdaltsksn"", name: ""playground"") {&#xA;    labels(first:100) {&#xA;      nodes {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;mutation DeleteLabels {&#xA;  deleteLabel(input: {&#xA;    id: ""&lt;ID_SHOULD_BE_HERE&gt;""&#xA;  }) {&#xA;    clientMutationId&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>OUTPUT:</strong></p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""repository"": {&#xA;      ""labels"": {&#xA;        ""nodes"": [&#xA;          {&#xA;            ""id"": ""MDU6TGFiZWwyMDg5MzQ0MDgy""&#xA;          },&#xA;          {&#xA;            ""id"": ""MDU6TGFiZWwyMDg5MzQ0MDg0""&#xA;          },&#xA;          {&#xA;            ""id"": ""MDU6TGFiZWwyMDg5MzQ0MDg2""&#xA;          },&#xA;          {&#xA;            ""id"": ""MDU6TGFiZWwyMDg5MzQ0MDg4""&#xA;          },&#xA;          {&#xA;            ""id"": ""MDU6TGFiZWwyMDg5MzQ0MDkw""&#xA;          },&#xA;          {&#xA;            ""id"": ""MDU6TGFiZWwyMDg5MzQ0MDkz""&#xA;          },&#xA;          {&#xA;            ""id"": ""MDU6TGFiZWwyMDg5MzQ0MDk1""&#xA;          },&#xA;          {&#xA;            ""id"": ""MDU6TGFiZWwyMDg5MzQ0MDk3""&#xA;          },&#xA;          {&#xA;            ""id"": ""MDU6TGFiZWwyMDg5MzQ0MDk5""&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The Output of the <code>DeleteLabels</code> mutation when I type the <code>ID</code> manually. </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""deleteLabel"": {&#xA;      ""clientMutationId"": null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>On the client-side, I'm using Golang with machinebox/graphql. One possible solution can be that solving this by sending two different requests on the client-side and getting results. I'm not sure of is that the best solution or not.</p>&#xA;&#xA;<p>My GO Code:</p>&#xA;&#xA;<pre><code>package main&#xA;&#xA;import (&#xA;    ""context""&#xA;    ""fmt""&#xA;    ""os""&#xA;    ""strings""&#xA;&#xA;    ""github.com/gookit/color""&#xA;    ""github.com/machinebox/graphql""&#xA;)&#xA;&#xA;func main() {&#xA;    RemoveLabels(""erdaltsksn/playground"")&#xA;}&#xA;&#xA;func RemoveLabels(repository string) {&#xA;    repo := strings.Split(repository, ""/"")&#xA;&#xA;    data := graphqlQuery(fmt.Sprintf(`&#xA;        query {&#xA;            repository(owner: ""%s"", name: ""%s"") {&#xA;                labels(first:100) {&#xA;                    totalCount&#xA;                    nodes {&#xA;                        id&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    `, repo[0], repo[1]))&#xA;&#xA;    fmt.Println(data)&#xA;}&#xA;&#xA;type graphqlQueryResponse struct {&#xA;    Repository struct {&#xA;        ID     string `json:""id,omitempty""`&#xA;        Labels struct {&#xA;            TotalCount int `json:""totalCount,omitempty""`&#xA;            Nodes      []struct {&#xA;                ID          string `json:""id,omitempty""`&#xA;                Name        string `json:""name,omitempty""`&#xA;                Color       string `json:""color,omitempty""`&#xA;                Description string `json:""description,omitempty""`&#xA;            } `json:""nodes,omitempty""`&#xA;        } `json:""labels,omitempty""`&#xA;    } `json:""repository,omitempty""`&#xA;}&#xA;&#xA;var graphqlClient = graphql.NewClient(""https://api.github.com/graphql"")&#xA;&#xA;func graphqlQuery(q string) graphqlQueryResponse {&#xA;    graphqlRequest := graphql.NewRequest(q)&#xA;    graphqlRequest.Header.Set(""Authorization"", ""bearer MY_GITHUB_API"")&#xA;    graphqlRequest.Header.Set(""Accept"", ""application/vnd.github.bane-preview+json"")&#xA;&#xA;    var data graphqlQueryResponse&#xA;    if err := graphqlClient.Run(context.Background(), graphqlRequest, &amp;data); err != nil {&#xA;        color.Danger.Println(""There is a problem while querying GitHub API v4"")&#xA;        color.Warn.Prompt(err.Error())&#xA;        os.Exit(1)&#xA;    }&#xA;&#xA;    return data&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>GO's output:</p>&#xA;&#xA;<pre><code>{&#xA;    {&#xA;        {&#xA;            8&#xA;            [&#xA;                {&#xA;                    MDU6TGFiZWwyMDg5MzQ0MDgy&#xA;                }&#xA;                {&#xA;                    MDU6TGFiZWwyMDg5MzQ0MDg0&#xA;                }&#xA;                {&#xA;                    MDU6TGFiZWwyMDg5MzQ0MDg2&#xA;                }&#xA;                {&#xA;                    MDU6TGFiZWwyMDg5MzQ0MDg4&#xA;                }&#xA;                {&#xA;                    MDU6TGFiZWwyMDg5MzQ0MDkw&#xA;                }&#xA;                {&#xA;                    MDU6TGFiZWwyMDg5MzQ0MDkz&#xA;                }&#xA;                {&#xA;                    MDU6TGFiZWwyMDg5MzQ0MDk1&#xA;                }&#xA;                {&#xA;                    MDU6TGFiZWwyMDg5MzQ0MDk3&#xA;                }&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I might create to two different request and using it to delete each tag one by one. But I think it is not a good idea. I'm looking for alternative or the better way to do this.</p>&#xA;&#xA;<p>Thank you for any help in advance.</p>&#xA;&#xA;<p>Refs:</p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">https://developer.github.com/v4/explorer/</a></li>&#xA;<li><a href=""https://developer.github.com/v4/mutation/deletelabel/"" rel=""nofollow noreferrer"">https://developer.github.com/v4/mutation/deletelabel/</a></li>&#xA;<li><a href=""https://developer.github.com/v4/object/repository/#labels"" rel=""nofollow noreferrer"">https://developer.github.com/v4/object/repository/#labels</a></li>&#xA;<li><a href=""https://pkg.go.dev/github.com/machinebox/graphql?tab=doc"" rel=""nofollow noreferrer"">https://pkg.go.dev/github.com/machinebox/graphql?tab=doc</a></li>&#xA;</ul>&#xA;",10524861,,10524861,2020-05-28 15:42:20,2020-05-28 15:42:20,How to pass the result(response) of a GraphQL query to a mutation as an argument(input)?,<graphql><github-api><graphql-mutation><github-api-v4><graphql-go>,0,2,0,2020-05-28 15:30:01
62071238,1,,,0,922,"<p>I have a mutation of new product. I update cache with cache.writeQuery and I want to order the product by name. My code doesn't work, always the new product is the last item (see the picture) . I can see the error. Could you help me? What is wrong?</p>&#xA;&#xA;<p>COMPONENT NEW PRODUCT</p>&#xA;&#xA;<pre><code>import { gql, useMutation } from '@apollo/client'&#xA;&#xA;const NEW_PRODUCT = gql`&#xA;mutation newProduct($input: ProductInput) {&#xA;  newProduct(input:$input) {&#xA;    id&#xA;    name&#xA;    stock&#xA;    price&#xA;    date_creation&#xA;  }&#xA;}`&#xA;&#xA;const GET_PRODUCTS = gql`&#xA;  query getProducts{&#xA;  getProducts{&#xA;    id&#xA;    name&#xA;    stock&#xA;    price&#xA;  }&#xA;}`&#xA;&#xA;const NouProducte = () =&gt; {&#xA;&#xA;  const [newProduct] = useMutation(NEW_PRODUCT, {&#xA;    update(cache, { data: { newProduct } }) {&#xA;      const { getProducts } = cache.readQuery({ query: GET_PRODUCTS })&#xA;      cache.writeQuery({&#xA;        query: GET_PRODUCTS,&#xA;        data: {&#xA;          getProducts: [...getProducts, newProduct],&#xA;          variables: { orderBy: name }&#xA;        }&#xA;      })&#xA;    }&#xA;  })&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/VAzxE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VAzxE.png"" alt=""enter image description here""></a></p>&#xA;",11979390,,,,2020-05-28 18:17:01,Apollo-client update cache variable: orderby name doesn't work,<reactjs><graphql><apollo-client>,2,0,0,2020-05-28 17:48:41
62071734,2,,62071238,1,,"<p>I am not sure if you can order-by on local cache with apollo. However, this is how I would resolve the issue:</p>&#xA;&#xA;<pre><code>  data: {&#xA;          getProducts: [...getProducts, newProduct]&#xA;        }&#xA;</code></pre>&#xA;&#xA;<p>In this line of code you are adding all the original products, then the new product to the end of the array that you are writing to your cache. </p>&#xA;&#xA;<p>A quick way to fix this is sort the array before writing it to the cache. The following compare sorts arrays by objects name attribute</p>&#xA;&#xA;<pre><code>  function compare(a, b) {&#xA;    // Use toUpperCase() to ignore character casing&#xA;    const productA = a.name.toUpperCase();&#xA;    const productB = b.name.toUpperCase();&#xA;&#xA;    let comparison = 0;&#xA;    if (productA &gt; productB) {&#xA;      comparison = 1;&#xA;    } else if (productA &lt; productB) {&#xA;      comparison = -1;&#xA;    }&#xA;    return comparison;&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Then use it on your array to sort.</p>&#xA;&#xA;<pre><code>  data: {&#xA;          getProducts: [...getProducts, newProduct].sort(compare)&#xA;        }&#xA;</code></pre>&#xA;",3593908,,,,2020-05-28 18:16:03,"",,0,1,0,2020-05-28 18:16:03
62073628,2,,62072234,1,,"<p>You just need to do another loop:</p>&#xA;&#xA;<pre><code>groups.map(({ edges }) =&gt; {&#xA;  edges.map(({ node }, index) =&gt; {&#xA;    &lt;p key={index}&gt;{node.filesize}&lt;/p&gt;&#xA;  })&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>You can simplify this nesting a bit by using <code>nodes</code> instead of <code>edges.node</code> in your query, and by aliasing for brevity/clarity:</p>&#xA;&#xA;<pre><code>query byTuneAwemeQuery {&#xA;  songData: allSongsJson {&#xA;    groups: group(field: tune) {&#xA;      nodes {&#xA;        filesize&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Which you would then access more like this:</p>&#xA;&#xA;<pre><code>const { data: songData } = this.props&#xA;&#xA;// first node filesize for each group:&#xA;songData.groups.map(group =&gt; group.nodes[0].filesize)&#xA;</code></pre>&#xA;",203130,,,,2020-05-28 20:07:15,"",,0,4,0,2020-05-28 20:07:15
62083960,1,,,-1,75,"<p>I am new in Graphql and React. I need help. I tried get query from user like GraphiQL. I want get query from user and return result. I made a query. If I write query, it works but otherwise I am getting error. My code block as below like and works :</p>&#xA;&#xA;<p>My code block like and works :</p>&#xA;&#xA;<pre><code>let BLOCK_QUERY = gql`&#xA;    query {&#xA;        block {&#xA;            id&#xA;            type&#xA;        }&#xA;    }&#xA;`;&#xA;&#xA;</code></pre>&#xA;&#xA;<p>I try get query from user like this but is not work:</p>&#xA;&#xA;<pre><code>let BLOCK_QUERY = gql`&#xA;    this.state.block&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>Maybe I think I will do things close to that.</p>&#xA;&#xA;<pre><code>let BLOCK_QUERY = gql`&#xA;    ${this.state.block}&#xA;`;&#xA;</code></pre>&#xA;",11033220,,11033220,2020-05-29 11:01:26,2020-06-10 18:17:06,How to pass state value to Graphql Query,<graphql><react-apollo><express-graphql><graphql-tag>,1,0,0,2020-05-29 10:33:42
62098977,2,,62088570,1,,"<p>There only two files missing from the <code>Tutorials</code> folder: <a href=""https://github.com/TauGuide/tau-guide-documents/blob/4cc8c20f8c10ee5f1435878ecc2da8ec87afb61d/docs/Tutorials/step-by-step-guide-how-to-buy-agoras.md"" rel=""nofollow noreferrer""><code>step-by-step-guide-how-to-buy-agoras.md</code></a> and <a href=""https://github.com/TauGuide/tau-guide-documents/blob/4cc8c20f8c10ee5f1435878ecc2da8ec87afb61d/docs/Tutorials/step-by-step-guide-how-to-store-agoras.md"" rel=""nofollow noreferrer""><code>step-by-step-guide-how-to-store-agoras.md</code></a>.</p>&#xA;&#xA;<p>I think that the issue is with the formatting of the frontmatter in these files, not with <code>gatsby-source-git</code>.</p>&#xA;&#xA;<p>As you can see, hat sets them apart from the other files is that they both have colon inside a value:</p>&#xA;&#xA;<ul>&#xA;<li><code>title: Agoras: How to Store</code></li>&#xA;<li><code>description: Agoras: How to Buy</code></li>&#xA;</ul>&#xA;&#xA;<p>You need to <a href=""https://stackoverflow.com/questions/11301650/how-to-escape-indicator-characters-i-e-or-in-yaml#11301675"">add quotes around those</a>:</p>&#xA;&#xA;<ul>&#xA;<li><code>title: ""Agoras: How to Store""</code></li>&#xA;<li><code>description: ""Agoras: How to Buy""</code></li>&#xA;</ul>&#xA;&#xA;<p>Your query probably failed at parsing these, hence the files didn't appear. Let me know if this fixes your issue!</p>&#xA;",7770081,,,,2020-05-30 07:01:11,"",,0,0,0,2020-05-30 07:01:11
62099509,2,,62075869,2,,"<p>You need to write field resolvers that resolve the relation between article and author by using TypeORM repository.</p>&#xA;&#xA;<p>You can see some examples in the repo:&#xA;<a href=""https://github.com/MichalLytek/type-graphql/blob/master/examples/typeorm-basic-usage/resolvers/recipe-resolver.ts#L65-L76"" rel=""nofollow noreferrer"">https://github.com/MichalLytek/type-graphql/blob/master/examples/typeorm-basic-usage/resolvers/recipe-resolver.ts#L65-L76</a> </p>&#xA;",5472617,,,,2020-05-30 08:00:00,"",,0,0,0,2020-05-30 08:00:00
62130014,1,,,1,116,"<p>Creating Pact consumer/provider test against GraphQL mutation which has input type as query parameter.  </p>&#xA;&#xA;<p>GraphQL schema:</p>&#xA;&#xA;<pre><code>input ReviewInput {&#xA;  stars: Int!&#xA;  commentary: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>GraphQL mutation:</p>&#xA;&#xA;<pre><code>mutation Stars(&#xA;  $input: ReviewInput!&#xA;) {&#xA;  createStars(input: $input) {&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>On Pact's consumer side (using typescript), I have to define query variables which are expected to be passed to GraphQL mutation. &#xA;If I only define variables <code>stars</code> and <code>commentary</code>, trying to start test from Pact's provider side results with an error that input type variable is not defined.</p>&#xA;&#xA;<p>Pact consumer side:</p>&#xA;&#xA;<pre><code>describe('Stars', () =&gt; {&#xA;    describe('with correct variables', () =&gt; {&#xA;      const variables = {&#xA;        stars: 1,&#xA;        commentary: 'test',&#xA;      }&#xA;</code></pre>&#xA;&#xA;<p>Pact provider side error:</p>&#xA;&#xA;<pre><code>""message"":""ReviewInput isn't a defined input type (on $input)""&#xA;</code></pre>&#xA;&#xA;<p>How should I define input type on Pact's side which would include <code>stars</code> and <code>commentary</code> and pass that input type to GraphQL mutation?</p>&#xA;&#xA;<p>Hope someone can help and thank you!</p>&#xA;",13500134,,,,2020-06-01 10:19:03,How to pass input type object from Pact (typescript) to GraphQL mutation,<typescript><graphql><pact><mutation>,0,1,0,2020-06-01 10:19:03
62130332,1,,,1,429,"<p>I have a field that contains an array of Strings - in this case it's an array of filenames, but it could be IDs or any identifier. I'd like to use <code>buildObjectType</code> to resolve these Strings to another Node. In other words, resolve an array of <code>String</code>s to an array of external Nodes.</p>&#xA;&#xA;<p>I have used <code>buildObjectType</code> to resolve a Node from a field containing a single identifier, but haven't been able to get it working when the field is an array of IDs. In the case of a single identifier the resolver is something like:</p>&#xA;&#xA;<pre><code>context.nodeModel&#xA;  .getAllNodes({ type: ""ChildYaml"" })&#xA;  .find(child =&gt; child.slug === source.child)&#xA;</code></pre>&#xA;&#xA;<p>Now I need to iterate over an array and resolve each item.</p>&#xA;&#xA;<p>Here's an example of my field in a <code>ParentYaml</code> file</p>&#xA;&#xA;<pre><code>files:&#xA;  - filename1&#xA;  - filename2&#xA;  - filename3&#xA;  - filename4&#xA;</code></pre>&#xA;&#xA;<p>In <code>gatsby-config</code>:</p>&#xA;&#xA;<pre><code>exports.createSchemaCustomization = ({ actions, schema }) =&gt; {&#xA;  const { createTypes } = actions&#xA;&#xA;  const typeDefs = [&#xA;    schema.buildObjectType({&#xA;      name: ""ParentYaml"",&#xA;      fields: {&#xA;        files: {&#xA;          type: ""ChildYaml"",&#xA;          resolve: (source, args, context, info) =&gt; {&#xA;            // Iterate over context and resolve each item to a filename&#xA;          },&#xA;        },&#xA;      },&#xA;    })&#xA;  ]&#xA;&#xA;  createTypes(typeDefs)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have tried the following <code>resolve</code>, unsuccessfully. This gets a File Node, but not the <code>ChildYaml</code>.</p>&#xA;&#xA;<pre><code>resolve: (source, args, context, info) =&gt; {&#xA;  return source.files.map((fileRef) =&gt; {&#xA;    return context.nodeModel&#xA;      .getAllNodes({ type: ""File"" })&#xA;      .find(file =&gt; file.name === fileRef)&#xA;  })&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>I have also tried a method to resolve the <code>ChildYaml</code> (instead of <code>File</code>) using the <code>slug</code>. This produces a similar result - the <code>resolve</code> returns an array of the desired Nodes, but those Nodes are not available in my page context.</p>&#xA;&#xA;<p>How can I resolve Nodes of an array?</p>&#xA;",438581,,438581,2020-06-02 08:58:50,2020-06-02 08:58:50,Gatsby buildObjectType for array of items,<graphql><gatsby>,1,0,0,2020-06-01 10:39:40
62135757,1,,,0,545,"<p>Here is a simplified snippet out of a GraphQL Schema I work with. There are - an enum, type Contributor and type Review.</p>&#xA;&#xA;<pre><code>enum CONTRIBUTOR_TYPE {&#xA;  AUTHOR&#xA;  EDITOR&#xA;}&#xA;&#xA;type Contributor {&#xA;  name: String&#xA;  role: CONTRIBUTOR_TYPE&#xA;}&#xA;&#xA;type Article {&#xA;  text: String&#xA;  authors: [Contributor]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What I want to describe, is that the ""authors"" field is not just array of type Contributor, but Contributor with specific job role.  In pseudocode it would look like</p>&#xA;&#xA;<pre><code> authors: [Contributor{type: CONTRIBUTOR_TYPE.AUTHOR}]!&#xA;</code></pre>&#xA;&#xA;<p>Is there a way to describe this constraint in GraphQL Schema?</p>&#xA;",4493843,,3001761,2020-06-01 22:06:44,2020-06-01 22:06:44,GraphQL schema - is it possible to set constraints on a custom type field,<graphql><graphql-schema>,1,0,0,2020-06-01 15:41:29
62141829,2,,62123971,-1,,"<p>I once had similar problem yesterday, but seems I haven't gotten a better grasp of GRAPHENE. But I wrote some funny codes which worked, tho there could be a more graphene way of solving it.</p>&#xA;&#xA;<pre class=""lang-py prettyprint-override""><code>class ProductInput(graphene.InputObjectType):&#xA;    name = graphene.String()&#xA;&#xA;class ProductPayload(graphene.Mutation):&#xA;    product = graphene.Field(ProductType)&#xA;&#xA;    class Meta:&#xA;        input = ProductInput(required=True)&#xA;        category_name = graphene.String(required=True)&#xA;&#xA;    def mutate(self, info, input=None, category_name=None):&#xA;        cat = None&#xA;        if category_name is not None:&#xA;            cat = Category.objects.get(name=category_name)&#xA;        product = Product.objects.create(name=input.name, category=cat)&#xA;&#xA;        return ProductPayload(product=product)&#xA;&#xA;class ProductMutation(graphene.ObjectType):&#xA;    create_product = ProductPayload.Field()&#xA;&#xA;schema = graphene.Schema(mutation=ProductMutation&#xA;</code></pre>&#xA;&#xA;<p>To make a mutation in your graphiql,</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>mutation {&#xA;    createProduct(input: {name: ""Your product name""}, category_name: ""your category name"") {&#xA;        product {&#xA;            name,&#xA;            category {&#xA;                name&#xA;&#xA;            }&#xA;&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",11009445,,11009445,2020-06-01 22:41:14,2020-06-01 22:41:14,"",,0,0,0,2020-06-01 22:15:35
62171195,2,,61557540,1,,"<p>What i understood from your problem is that, You want to pass array of objects as argument to the mutation. It can be done easily.</p>&#xA;&#xA;<p>First define a input in the schema,as below. It has the value name as string. You  can add whatever you want.  This structure will be used for passing value as argument.</p>&#xA;&#xA;<pre><code>    input Product {&#xA;        name: String&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>The above created input will be passed as a array as given below.</p>&#xA;&#xA;<pre><code>    type RootMutation{&#xA;        createProduct(product: [Product]): String&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>You will get the data in the resolver</p>&#xA;&#xA;<pre><code>createProduct: (args)=&gt;{&#xA;// You will get the value in this 'args'&#xA;// Do Whatever you want&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The input is given as follow</p>&#xA;&#xA;<pre><code>createProduct(product:[{name:""has""}])&#xA;</code></pre>&#xA;",13065972,,,,2020-06-03 10:57:48,"",,0,0,0,2020-06-03 10:57:48
62172890,1,,,1,127,"<p>I have a site made with gatsby that has some static data ( a catalogue of items ), but at runtime when the user logs in, it makes a request to an api to get a list of items they are entitled to ( this returns just a list of id's. </p>&#xA;&#xA;<p>Is it possible ( and does this make sense to do ) - to: </p>&#xA;&#xA;<ul>&#xA;<li>return the graphql item data in a normalized list so I can do easy look ups of the item id's and then render out into a list?</li>&#xA;</ul>&#xA;&#xA;<p>So basically </p>&#xA;&#xA;<pre><code>items = { 1: { title: 'itemA', price: 1 }, 2: { title: 'itemB', price: 2 }}; // from a Gql query&#xA;&#xA;userItems = [1, 3, 5]; // from a dynamic fetch request&#xA;&#xA;userItems.map(id =&gt; &lt;Item {...items[id] } /&gt;) // easy lookup of item info&#xA;</code></pre>&#xA;&#xA;<p>I know if I didn't use Gql I could just fetch the json data for the items and either merge it with the user data when the service fetches it, or just do as in my example above as I would control the structure of the json data, I just wanted to make use of gql to learn it, and so the item data could be reused on different pages that might be totally static ( a list of all items for example ) and then I could pick and choose which item attributes I want.</p>&#xA;&#xA;<p>My data currently is an array of items, as if I storred it as a keyed object of items then fed it to gql via the json transformer, each of my nodes were different, so I didn't seem to be able to fetch a list of all items.</p>&#xA;",2043077,,,,2020-06-03 12:29:45,Gatsby merge graphql data with dynamic data,<graphql><gatsby>,0,5,0,2020-06-03 12:29:45
62189159,1,,,4,1931,"<p>I'm learning GraphQL now and I faced a problem that I am unable to resolve.</p>&#xA;&#xA;<p>i have defined type in schema as</p>&#xA;&#xA;<p>input School {&#xA;    name: String!&#xA;    exams: [subject!]!&#xA;}&#xA;input subject {&#xA;    name: String!&#xA;    mark: Number!&#xA;}</p>&#xA;&#xA;<p>But while running the server.&#xA;I give data as&#xA;""data"":&#xA;{&#xA;""name"":""varun"",&#xA;""exams"":[],&#xA;}</p>&#xA;&#xA;<p>Server does not throw any validation error.&#xA;Please suggest me solution.&#xA;Is there any possible way to get validation error on passing exams as empty array.</p>&#xA;&#xA;<p>I have tried alternate methods, but nothing works on schema level. I have to put a check explicitly to check exam field should not be an empty array.&#xA;Thanks</p>&#xA;",13672389,,,,2020-06-04 10:19:33,GraphQL: prevent empty array as input,<apollo><graphql-js>,1,0,0,2020-06-04 07:33:40
62194481,1,62195000,,1,1534,"<p>I am trying to query a single MongoDB document (<code>trivia</code>) using GraphQL (Apollo Server), but am having trouble with one of the document fields.</p>&#xA;&#xA;<p><code>LightningRoundQuestion.answer</code> and <code>PictureRoundPicture.answer</code> should return a <code>String</code>, and <code>MultipleChoiceRoundQuestion.answer</code> should return an <code>Int</code>. See the schema:</p>&#xA;&#xA;<p><code>schema</code></p>&#xA;&#xA;<pre><code>const typeDefs = gql`&#xA;  # ROOT TYPES ==================================================&#xA;  type Query {&#xA;    trivia(_id: String!): Trivia&#xA;  }&#xA;&#xA;  # INTERFACES ==================================================&#xA;  interface Round {&#xA;    type: String!&#xA;    theme: String!&#xA;    pointValue: Int!&#xA;  }&#xA;&#xA;  type LightningRound implements Round {&#xA;    type: String!&#xA;    theme: String!&#xA;    pointValue: Int!&#xA;    questions: [LightningRoundQuestion]&#xA;  }&#xA;&#xA;  type MultipleChoiceRound implements Round {&#xA;    type: String!&#xA;    theme: String!&#xA;    pointValue: Int!&#xA;    questions: [MultipleChoiceRoundQuestion]&#xA;  }&#xA;&#xA;  type PictureRound implements Round {&#xA;    type: String!&#xA;    theme: String!&#xA;    pointValue: Int!&#xA;    pictures: [PictureRoundPicture]&#xA;  }&#xA;&#xA;  # QUERY TYPES =================================================&#xA;  type LightningRoundQuestion {&#xA;    question: String!&#xA;    answer: String!&#xA;  }&#xA;&#xA;  type MultipleChoiceRoundQuestion {&#xA;    question: String!&#xA;    options: [String!]!&#xA;    answer: Int!&#xA;  }&#xA;&#xA;  type PictureRoundPicture {&#xA;    url: String!&#xA;    answer: String!&#xA;  }&#xA;&#xA;  type Trivia {&#xA;    _id: String!&#xA;    createdAt: String!&#xA;    triviaId: String!&#xA;    triviaPin: String!&#xA;    host: String!&#xA;    rounds: [Round]!&#xA;    tieBreaker: TieBreaker!&#xA;  }&#xA;&#xA;  type TieBreaker {&#xA;    question: String&#xA;    answer: Int&#xA;  }&#xA;`&#xA;</code></pre>&#xA;&#xA;<p><code>resolvers &amp; server</code></p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;  Query: {&#xA;    trivia: async (root, { _id }) =&gt; {&#xA;      return triviaCollection.findOne(ObjectId(_id))&#xA;    }&#xA;  },&#xA;  Round: {&#xA;    __resolveType(obj) {&#xA;      if (obj.type === 'multipleChoice') {&#xA;        return 'MultipleChoiceRound'&#xA;      } else if (obj.type === 'lightning') {&#xA;        return 'LightningRound'&#xA;      } else if (obj.type === 'picture') {&#xA;        return 'PictureRound'&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;const server = new ApolloServer({ typeDefs, resolvers })&#xA;&#xA;server.listen().then(({ url }) =&gt; {&#xA;  console.log(`Server ready at ${url}`)&#xA;})&#xA;</code></pre>&#xA;&#xA;<p><code>query</code></p>&#xA;&#xA;<pre><code>query {&#xA;  trivia(_id: ""5e827a4e1c9d4400009fea32"") {&#xA;    _id&#xA;    createdAt&#xA;    triviaId&#xA;    triviaPin&#xA;    host&#xA;    rounds {&#xA;      ... on LightningRound {&#xA;        questions {&#xA;          question&#xA;          answer&#xA;        }&#xA;      }&#xA;      ... on MultipleChoiceRound {&#xA;        questions {&#xA;          question&#xA;          options&#xA;          answer&#xA;        }&#xA;      }&#xA;      ... on PictureRound {&#xA;        pictures {&#xA;          url&#xA;          answer&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get the error message:</p>&#xA;&#xA;<pre><code>""message"": ""Fields \""questions\"" conflict because subfields \""answer\"" conflict because they return conflicting types \""String!\"" and \""Int!\"". Use different aliases on the fields to fetch both if this was intentional.""&#xA;</code></pre>&#xA;&#xA;<p>Not quite sure what to do next, I looked at <a href=""https://www.apollographql.com/docs/resources/graphql-glossary/#alias"" rel=""nofollow noreferrer"">Alias in the Apollo documentation</a>, but there's little help there.</p>&#xA;",7933157,,162698,2020-06-04 12:48:57,2020-06-04 12:48:57,Why do subfields conflict when they are in different interfaces?,<node.js><graphql><apollo><graphql-js><apollo-server>,1,2,0,2020-06-04 12:22:16
62196007,2,,62195209,0,,"<p>In the above mutation that you have posted, you have only passed <code>name</code> and not all of the variables.</p>&#xA;&#xA;<p>Where as in your schema below, <code>cost</code>, <code>description</code>, <code>hours</code>, <code>minutes</code> are required.</p>&#xA;&#xA;<pre><code>updateService(name: String!, cost:Float!,description:String!,hours: Int!, minutes: Int!): Service!&#xA;</code></pre>&#xA;&#xA;<p>Could you check if that's the error that you are receiving? If so, pass all the parameters and run the mutation again.</p>&#xA;",8874351,,,,2020-06-04 13:35:07,"",,0,3,0,2020-06-04 13:35:07
62213575,2,,62209570,1,,"<p><code>items</code> contains array of ids only, not array of <code>Movies</code> </p>&#xA;&#xA;<p>[Naively - inspired by Apollo local] I would expect to</p>&#xA;&#xA;<ol>&#xA;<li>collect movies into an <code>id</code> indexed object.</li>&#xA;<li>for each <code>genre</code>&#xA;&#xA;<ul>&#xA;<li>convert <code>items</code> into array of <code>Movies</code> (create <code>movie</code> nodes [if not exists])</li>&#xA;<li>create <code>genre</code> node</li>&#xA;</ul></li>&#xA;</ol>&#xA;&#xA;<p>... but probably it's enough [I'm naive?] to create <code>Movie</code> nodes first and annotate <code>item: [Movie] @link(from: ""Movie___NODE"")</code>.</p>&#xA;&#xA;<p>You have to dig into API or internals of some source plugins or just search on gatsby issues for examples.</p>&#xA;&#xA;<p>At the end it probably should look like:</p>&#xA;&#xA;<pre><code>...genres.map(genre =&gt; {&#xA;  const content = {&#xA;    itemsCount: genre.itemsCount,&#xA;    imageUrl: genre.imageUrl,&#xA;    name: genre.name,&#xA;    [""items___NODE""]: genre.items.map(id =&gt;&#xA;    createNodeId(`Movie{${id}}`),&#xA;    ),&#xA;  };&#xA;  const id = createNodeId(`Genre{${genre.id}}`);&#xA;  const nodeContent = JSON.stringify(content);&#xA;  createNode({&#xA;    ...content,&#xA;    id,&#xA;    parent: null,&#xA;    children: [],&#xA;    internal: {&#xA;      type: `Genre`,&#xA;      content: nodeContent,&#xA;      contentDigest: crypto&#xA;        .createHash(""md5"")&#xA;        .update(nodeContent)&#xA;        .digest(""hex""),&#xA;    },&#xA;  });&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>It's inspired by <a href=""https://spectrum.chat/gatsby-js/general/how-to-link-related-nodes~58d63a0a-ef5f-4dc7-8238-d3220d1133db?m=MTU0NDY1MDc2OTM1MQ=="" rel=""nofollow noreferrer"">this use case</a> (self type referencing).</p>&#xA;",6124657,,,,2020-06-05 10:46:51,"",,0,2,0,2020-06-05 10:46:51
62213658,1,62213750,,1,107,"<p>I have a working query within my playground. But unsure how to get that data into the page? Below is my working query.</p>&#xA;&#xA;<p>Do I use <code>&lt;p&gt;{data.node.GitHub_Repository.name}&lt;/p&gt;</code> to get the relevant data, I am looking to build something similar to the pinned repos on GitHub profile page for my personal site.</p>&#xA;&#xA;<p>Tried a few things but always get <code>TypeError: undefined is not an object (evaluating....</code></p>&#xA;&#xA;<pre><code>const PinnedRepos = () =&gt; {&#xA;    const data = useStaticQuery(graphql`&#xA;    query{&#xA;        github {&#xA;          user(login: ""mrpbennett"") {&#xA;            pinnedItems(first: 6, types: REPOSITORY) {&#xA;                edges {&#xA;                node {&#xA;                    ... on GitHub_Repository {&#xA;                    name&#xA;                    description&#xA;                    url&#xA;                    primaryLanguage {&#xA;                        name&#xA;                        color&#xA;                    }&#xA;                    }&#xA;                }&#xA;                }&#xA;            }&#xA;            }&#xA;        }&#xA;      }&#xA;    `)&#xA;&#xA;    return (&#xA;        &lt;div&gt;&#xA;            &lt;p&gt;{data.node.GitHub_Repository.name}&lt;/p&gt;&#xA;        &lt;/div&gt;&#xA;    )&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Playground Query is as follows:</p>&#xA;&#xA;<pre><code>query{&#xA;        github {&#xA;          user(login: ""mrpbennett"") {&#xA;            pinnedItems(first: 6, types: REPOSITORY) {&#xA;                edges {&#xA;                node {&#xA;                    ... on GitHub_Repository {&#xA;                    name&#xA;                    description&#xA;                    url&#xA;                    primaryLanguage {&#xA;                        name&#xA;                        color&#xA;                    }&#xA;                    }&#xA;                }&#xA;                }&#xA;            }&#xA;            }&#xA;        }&#xA;      }&#xA;</code></pre>&#xA;",10129053,,10129053,2020-06-05 10:58:40,2020-06-05 12:55:23,Getting GraphQL data into Gatsby,<reactjs><graphql><gatsby>,1,0,0,2020-06-05 10:52:08
62213750,2,,62213658,2,,"<p>You aren't accessing the query data correctly. Also note that pinnedItems is defined as an array, so you must map over it and render the node names like below</p>&#xA;&#xA;<pre><code>return (&#xA;    &lt;div&gt;&#xA;        {data.github.user.pinnedItem.edges.map(({node}) =&gt; &lt;p&gt;{node.name}&lt;/p&gt;)&#xA;    &lt;/div&gt;&#xA;)&#xA;</code></pre>&#xA;",5928186,,5385381,2020-06-05 12:55:23,2020-06-05 12:55:23,"",,0,7,0,2020-06-05 10:57:22
62214369,2,,57451102,1,,"<p>Using <code>search()</code>, a <code>user</code> argument can be added to the <code>query</code> value.</p>&#xA;&#xA;<p>Also, the whitespace after the colon should be removed, i.e. <code>topic: portfolio</code> -> <code>topic:portfolio</code>. You will notice far more results with this change.</p>&#xA;&#xA;<pre><code>{&#xA;  search(type: REPOSITORY, query: ""user:VitFL topic:portfolio"", last: 50) {&#xA;    repos: edges {&#xA;      repo: node {&#xA;        ... on Repository {&#xA;          url&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1780767,,,,2020-06-05 11:31:31,"",,0,0,0,2020-06-05 11:31:31
62232592,1,,,1,289,"<p>I want to query the product using product tag, but it returned similar product tags with the given tags. I Refer some other references, it denotes the tag are tokenized field so it will return product, if any equality exists in the tags. but i want know if any possibility are there to retrieve the exact tag products</p>&#xA;&#xA;<p><strong>Query</strong></p>&#xA;&#xA;<pre><code>query Myquery{&#xA;products(first:10, query: ""tag:Switches variants.price:&gt;=2335 variants.price:&lt;=3000"") {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        tags &#xA;        variants(first:10)&#xA;        {&#xA;            edges&#xA;          {&#xA;            node&#xA;            {&#xA;                price &#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;      cursor&#xA;    }&#xA;    pageInfo {&#xA;      hasNextPage&#xA;      hasPreviousPage&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Above query returns tag 'Switches' and 'Switches &amp; Sockets' but i need tag with 'Switches' alone</p>&#xA;",7698311,,,,2020-06-08 00:26:10,Query the product using Product Tag,<graphql><shopify>,2,0,0,2020-06-06 13:43:55
62235121,2,,62232592,0,,"<p>You understand that tags are a string right? So if you search for the string Switches you will get back Switches, and anything else in the string. So you have the extra step of further processing your results. Split on comma into an array, and only return the products where the filter condition is equal to Switches alone. </p>&#xA;",210841,,,,2020-06-06 17:03:07,"",,0,1,0,2020-06-06 17:03:07
62239903,1,,,6,1143,"<p>In GitHub API v3 with <strong>repo</strong> and <strong>user</strong> authorization scopes, I can get my organizations with <code>GET /user/orgs</code> (<a href=""https://developer.github.com/v3/orgs/#list-organizations-for-the-authenticated-user"" rel=""noreferrer"">https://developer.github.com/v3/orgs/#list-organizations-for-the-authenticated-user</a>, with Octokit REST JS, <code>octokit.orgs.listForAuthenticatedUser()</code>) and for each organization, to get the repositories which I have access, <code>GET /orgs/:org/repos</code> (<a href=""https://developer.github.com/v3/repos/#list-organization-repositories"" rel=""noreferrer"">https://developer.github.com/v3/repos/#list-organization-repositories</a>, with Octokit, <code>octokit.repos.listForOrg({ org: orgs.data[i].login })</code>).</p>&#xA;&#xA;<p>However, with the same authentication scope (user and repos), running this Graphql query</p>&#xA;&#xA;<pre><code>query getOrgsRepos {&#xA;  viewer {&#xA;    organizations(first: 10) {&#xA;      nodes {&#xA;        repositories(first: 10) {&#xA;          nodes {&#xA;            name&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Returns </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""viewer"": {&#xA;      ""organizations"": {&#xA;        ""nodes"": []&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><em>Graphql Explorer result (<a href=""https://developer.github.com/v4/explorer/"" rel=""noreferrer"">https://developer.github.com/v4/explorer/</a>), but running on my JS authed (<strong>user</strong> and <strong>repo</strong> scopes) app returns the same empty result</em></p>&#xA;&#xA;<p>How to have the same behaviour with API v4, <strong>without having to give further permissions</strong>?</p>&#xA;",10247962,,,,2021-11-11 04:43:22,GitHub API v4 Graphql: Get current authorized user organizations and their repositories,<github><graphql><github-api><octokit-js>,2,0,0,2020-06-07 01:27:38
62253331,2,,62232592,2,,"<p>You can add an exclusion but you need to know what to exclude e.g.:</p>&#xA;&#xA;<pre><code>{&#xA;  products(first:10, query: ""tag:Switches -tag:Sockets"") {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        tags &#xA;        variants(first:10)&#xA;        {&#xA;            edges&#xA;          {&#xA;            node&#xA;            {&#xA;                price &#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;      cursor&#xA;    }&#xA;    pageInfo {&#xA;      hasNextPage&#xA;      hasPreviousPage&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1568963,,,,2020-06-08 00:26:10,"",,0,5,0,2020-06-08 00:26:10
62265938,2,,62264855,0,,"<p>There is no problem with mutation using an object/array as 'input type'. [mutation] resolver can loop over items to update db. Probably you can use some backend specifics (sets) to update many items at once.</p>&#xA;&#xA;<p>Just define your input type to accept an array of pair types (objects).</p>&#xA;&#xA;<p>Querying for an array is no problem. You can query for settings:</p>&#xA;&#xA;<pre><code> query settings(type: ""color"") {&#xA;   key&#xA;   value&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>A little problem for optimized response size - you can not query for unknown key names to get response like <code>[{""primary_color"":""#FF0000""}, {""success_color"":""#00FF00""}]</code> - however it is possible using 'custom JSON type'.</p>&#xA;",6124657,,,,2020-06-08 15:44:50,"",,0,0,0,2020-06-08 15:44:50
62268680,1,62269373,,1,150,"<p>Here is my map function, I am using react with gatsby.</p>&#xA;&#xA;<p>when I run my graphiql browser, (an IDE graphql playground) I get group as an array, and edges is also an array.</p>&#xA;&#xA;<p>the query is a static query and the mapping function is inside of a class based react component</p>&#xA;&#xA;<pre><code>{group.map(({ edges }) =&gt; {&#xA;   console.log(group);&#xA;     edges.map(index =&gt; {&#xA;       return &lt;p&gt;Hello&lt;/p&gt;&#xA;   });&#xA;})}&#xA;</code></pre>&#xA;&#xA;<p>However, the p tags are not displaying anything, but if I console.log(""hello"") it consoles hello 4 times, anyone got any ideas?&#xA;I am a little stumped.</p>&#xA;&#xA;<p>the console.log returns </p>&#xA;&#xA;<pre><code>(3) [{…}, {…}, {…}]&#xA;0:&#xA;edges: Array(2)&#xA;0:&#xA;node: {tune: ""awesome"", title: ""Awesome Song"", playtime: ""2:50"", page: ""249"", filesize: ""1.8"", …}&#xA;__proto__: Object&#xA;1:&#xA;node: {tune: ""awesome"", title: ""AwesomeSong 2"", playtime: ""4:05"", page: ""525"", filesize: ""2.6"", …}&#xA;__proto__: Object&#xA;length: 2&#xA;__proto__: Array(0)&#xA;__proto__: Object&#xA;1:&#xA;edges: Array(1)&#xA;0:&#xA;node: {tune: ""decent"", title: ""Awesome Song3"", playtime: ""4:06"", page: ""719"", filesize: ""2.4"", …}&#xA;__proto__: Object&#xA;length: 1&#xA;__proto__: Array(0)&#xA;__proto__: Object&#xA;2: {edges: Array(1)}&#xA;length: 3&#xA;__proto__: Array(0)&#xA;</code></pre>&#xA;",13636747,,,,2020-06-09 17:00:51,can't query results of graphql query because am using 2 arrays within each other,<arrays><reactjs><graphql><gatsby>,1,0,0,2020-06-08 18:17:14
62275663,1,62329225,,6,2387,"<p>I would like to use GitHub repository for posts in my Gatsby site. Right now I'm using two queries, first to get the names of the files:</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  viewer {&#xA;    repository(name: &quot;repository-name&quot;) {&#xA;      object(expression: &quot;master:&quot;) {&#xA;        id&#xA;        ... on Tree {&#xA;          entries {&#xA;            name&#xA;          }&#xA;        }&#xA;      }&#xA;      pushedAt&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And the second to get the contents of the files:</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  viewer {&#xA;    repository(name: &quot;repository-name&quot;) {&#xA;      object(expression: &quot;master:file.md&quot;) {&#xA;        ... on Blob {&#xA;          text&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Is there any way to get information about when each file was created and last updated with GraphQL? Right now I can get only <code>pushedAt</code> for the whole repository and not individual files.</p>&#xA;",3354729,,2614364,2020-06-20 16:29:41,2020-06-20 16:29:41,GraphQL query to get file info from GitHub repository,<github><graphql><github-api>,1,0,0,2020-06-09 05:32:12
62276563,1,,,0,847,"<p>I'm using following package : 'osiset/Basic-Shopify-API' and need bulk update products by location.&#xA;It's only possible with GraphQL. This function should work : &#xA; inventoryBulkAdjustQuantityAtLocation <a href=""https://shopify.dev/docs/admin-api/graphql/reference/mutation/inventorybulkadjustquantityatlocation?api[version]=2020-04"" rel=""nofollow noreferrer"">Shopify documentation</a></p>&#xA;&#xA;<pre><code>    $shop = 'example.myshopify.com';&#xA;    $token = 'shppa_admin_api_token';&#xA;&#xA;    / Create options for the API&#xA;    $options = new Options();&#xA;    $options-&gt;setVersion('2020-04');&#xA;&#xA;     // Create the client and session&#xA;    $api = new BasicShopifyAPI($options);&#xA;    $api-&gt;setSession(new Session($shop, $token));&#xA;&#xA;&#xA;     $products[0]['inventoryItemId'] = '33125243617303';&#xA;    $products[0]['availableDelta'] = 2000;&#xA;&#xA;    $result = $api-&gt;graph(&#xA;        'mutation inventoryBulkAdjustQuantityAtLocation($inventoryItemAdjustments: InventoryAdjustItemInput!,$locationId: ID!) &#xA;                 {inventoryBulkAdjustQuantityAtLocation(inventoryItemAdjustments: $InventoryAdjustItemInput, locationId: $locationId) {userErrors {field message } inventoryLevels { id }}}',&#xA;        ['inventoryItemAdjustments' =&gt; &#xA;&#xA;            $products&#xA;&#xA;        ],&#xA;&#xA;    );&#xA;</code></pre>&#xA;&#xA;<p>But I don't understand how to use it. Could anyone help me ?</p>&#xA;",10825800,,,,2022-03-26 20:06:31,Laravel + Shopify inventoryBulkAdjustQuantityAtLocation,<php><laravel><graphql><shopify>,3,1,0,2020-06-09 06:43:45
62294642,2,,62276563,0,,"<p>Now it works. It's a challenge to understand GraphQL queries if you never used them before.</p>&#xA;&#xA;<p>Here are some more information :  </p>&#xA;&#xA;<p><a href=""https://www.shopify.com/partners/blog/multi-location_and_graphql"" rel=""nofollow noreferrer"">https://www.shopify.com/partners/blog/multi-location_and_graphql</a></p>&#xA;&#xA;<pre><code> $locationId = ""gid://shopify/Location/1"";&#xA;&#xA;    $inventoryItemAdjustments1['locationId'] = $locationId;&#xA;    $inventoryItemAdjustments1['inventoryItemAdjustments']['inventoryItemId'] = 'gid://shopify/InventoryItem/1';&#xA;    $inventoryItemAdjustments1['inventoryItemAdjustments']['availableDelta'] = 500;&#xA;&#xA;    $result = $api-&gt;graph('mutation inventoryBulkAdjustQuantityAtLocation($inventoryItemAdjustments: [InventoryAdjustItemInput!]!, $locationId: ID!) &#xA;    {inventoryBulkAdjustQuantityAtLocation(inventoryItemAdjustments: $inventoryItemAdjustments, locationId: $locationId) {userErrors { field message }}}',&#xA;    $inventoryItemAdjustments1    &#xA;    );&#xA;</code></pre>&#xA;",10825800,,,,2020-06-10 01:57:38,"",,0,0,0,2020-06-10 01:57:38
62295179,2,,62276563,0,,"<p>Not so good examples (hardcoded values, aliases - not real life examples) ... graphql variables should be used and they should match mutation requirements ('root' parameters), in this case <code>locationId</code> and <code>inventoryItemAdjustments</code> (array of objects).</p>&#xA;&#xA;<p>You can test this mutation in graphiql/playground using 'query variables' defined like this:</p>&#xA;&#xA;<pre><code>{&#xA;  locationId: ""gid://shopify/Location/1"",&#xA;  inventoryItemAdjustments: [&#xA;    { &#xA;      'inventoryItemId': 'gid://shopify/InventoryItem/1',&#xA;      'availableDelta': 500&#xA;    },&#xA;    { &#xA;      'inventoryItemId': 'gid://shopify/InventoryItem/2',&#xA;      'availableDelta': 100&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>... so using php (associative arrays are encoded to json as objects - explicitely declared for readability) it should look more like this:</p>&#xA;&#xA;<pre><code> $locationId = ""gid://shopify/Location/1"";&#xA; $inventoryItemAdjustments = [];&#xA; $inventoryItemAdjustments[] = (object)[&#xA;   'inventoryItemId' =&gt; 'gid://shopify/InventoryItem/1',&#xA;   'availableDelta'] =&gt; 500;&#xA; ];&#xA; $inventoryItemAdjustments[] = (object)[&#xA;   'inventoryItemId' =&gt; 'gid://shopify/InventoryItem/2',&#xA;   'availableDelta'] =&gt; 100;&#xA; ];&#xA;&#xA; $variables = (object)[&#xA;   'locationId' =&gt; $locationId;&#xA;   'inventoryItemAdjustments' =&gt; $inventoryItemAdjustments&#xA; ];&#xA;&#xA; $result = $api-&gt;graph('mutation inventoryBulkAdjustQuantityAtLocation($inventoryItemAdjustments: [InventoryAdjustItemInput!]!, $locationId: ID!) &#xA;    {inventoryBulkAdjustQuantityAtLocation(inventoryItemAdjustments: $inventoryItemAdjustments, locationId: $locationId) {userErrors { field message }}}',&#xA;    $variables&#xA; );&#xA;</code></pre>&#xA;",6124657,,6124657,2020-06-10 05:22:19,2020-06-10 05:22:19,"",,0,0,0,2020-06-10 03:07:27
62306034,2,,58002078,1,,"<p>Not entirely sure if i understood the question correctly but perhaps <em>intersection types</em> would help?</p>&#xA;&#xA;<p>Assuming that <code>approvedUsers</code> is actually an array, the type might look something like this:</p>&#xA;&#xA;<pre><code>interface TenantManagePageQueryTenant extends&#xA;    Pick&lt;Tenant, 'id' | 'description' | 'name'&gt;&#xA;    &amp; { approvedUsers: Pick&lt;ApprovedUser | 'id' | 'alias'&gt;[] }&#xA;{}&#xA;</code></pre>&#xA;&#xA;<p>Thus this would be a valid object of type <code>TenantManagePageQueryTenant</code>:</p>&#xA;&#xA;<pre><code>{&#xA;  id: ""123"",&#xA;  description: ""456"",&#xA;  name: ""789"",&#xA;  approvedUsers: [{&#xA;    id: ""aaa"",&#xA;    alias: ""bbb""&#xA;  }]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Whereas these would not:</p>&#xA;&#xA;<pre><code>// missing alias in approvedUsers[0]&#xA;&#xA;{&#xA;  id: ""123"",&#xA;  description: ""456"",&#xA;  name: ""789"",&#xA;  approvedUsers: [{&#xA;    id: ""aaa""&#xA;  }]&#xA;}&#xA;</code></pre>&#xA;&#xA;<pre><code>// unknown field extra in approvedUsers[0]&#xA;{&#xA;  id: ""123"",&#xA;  description: ""456"",&#xA;  name: ""789"",&#xA;  approvedUsers: [{&#xA;    id: ""aaa"",&#xA;    alias: ""bbb"",&#xA;    extra: 345678&#xA;  }]&#xA;}&#xA;</code></pre>&#xA;",3744574,,,,2020-06-10 14:27:03,"",,0,0,0,2020-06-10 14:27:03
62320563,1,,,1,1063,"<p>I want update the prices of product variants in bulk using ""osiset/Basic-Shopify-API"" package.</p>&#xA;&#xA;<p>This query works perfectly : </p>&#xA;&#xA;<pre><code>$variant['input']['id'] = ""gid://shopify/ProductVariant/31576237899799"";&#xA;$variant['input']['price'] = 1;&#xA;&#xA; $productVariant = $api-&gt;graph('&#xA;    mutation productVariantUpdate($input: ProductVariantInput!) &#xA;        {productVariantUpdate(input: $input) {userErrors { field message }}}&#xA;    ',$variant);&#xA;</code></pre>&#xA;&#xA;<p>Now I want to pass many product variants to mutation.</p>&#xA;&#xA;<p>I found this GraphQL query :</p>&#xA;&#xA;<pre><code>mutation{&#xA;  ProductVariant1: productVariantUpdate(input: {&#xA;    id: ""gid://shopify/ProductVariant/27868413755001"",&#xA;    price: 34.97&#xA;  }){&#xA;    productVariant{ id, price }&#xA;  }&#xA;&#xA;  ProductVariant2: productVariantUpdate(input: {&#xA;    id: ""gid://shopify/ProductVariant/27868413788000"",&#xA;    price: 34.97&#xA;  }){&#xA;    productVariant{ id, price }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So it should be possible to set variables to query like &#xA;<code>ProductVariant1:</code> and pass arrays.</p>&#xA;&#xA;<p>How could I do it ?</p>&#xA;",10825800,,,,2020-06-11 10:35:09,Laravel + Shopify Osiset productVariantUpdate GraphQL,<php><laravel><graphql><shopify>,1,0,0,2020-06-11 08:52:54
62322415,2,,62320563,0,,"<p>I found a soloution. Maybe it helps anyone.</p>&#xA;&#xA;<pre><code>$variants[0]['id'] = ""gid://shopify/ProductVariant/1"";&#xA;        $variants[0]['price'] = 1;&#xA;&#xA;        $variants[1]['id'] = ""gid://shopify/ProductVariant/2"";&#xA;        $variants[1]['price'] = 2;&#xA;&#xA;        //build query&#xA;        $query = '';&#xA;&#xA;        $countRun = 1;&#xA;&#xA;        foreach($variants as $variant)&#xA;        {&#xA;&#xA;            if($countRun == 1)&#xA;            {&#xA;                $query = 'mutation{&#xA;                    ProductVariant'.$countRun.': productVariantUpdate(input: {&#xA;                      id: ""'.$variant['id'].'"",&#xA;                      price: '.$variant['price'].'&#xA;                    }){&#xA;                      productVariant{ id, price }&#xA;                    }&#xA;&#xA;                    ';&#xA;            }&#xA;            else{&#xA;                $query = $query.'ProductVariant'.$countRun.': productVariantUpdate(input: {&#xA;                    id: ""'.$variant['id'].'"",&#xA;                    price: '.$variant['price'].'&#xA;                  }){&#xA;                    productVariant{ id, price }&#xA;                  }&#xA;&#xA;                  ';&#xA;            }&#xA;&#xA;                $countRun++;&#xA;        }&#xA;&#xA;        $query = $query.'}';&#xA;&#xA;        $runQuery = $api-&gt;graph($query);&#xA;&#xA;       return $runQuery;&#xA;</code></pre>&#xA;",10825800,,,,2020-06-11 10:35:09,"",,0,0,0,2020-06-11 10:35:09
62326596,1,62397232,,4,1564,"<p>I'm making a custom source plugin for Gatsby, that will get markdown files from a GitHub repository. The repository has individual files (blobs) and folders (trees), which in their turn also contain files. I need to get all files (including files inside folders) in one <code>Promise.all</code>, but I can't figure out how to do that. I've managed to get individual files from the repository and I have a function which returns an array of files from the trees. But I don't know how to combine them.</p>&#xA;&#xA;<p>Here is my code. GraphQL queries to get repository, trees and files information:</p>&#xA;&#xA;<pre><code>const repositoryQuery = `&#xA;{&#xA;  viewer {&#xA;    repository(name: ""repository-name"") {&#xA;      object(expression: ""master:"") {&#xA;        ... on Tree {&#xA;          entries {&#xA;            name&#xA;            oid&#xA;            type&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;`&#xA;&#xA;const treeQuery = `&#xA;  query getTree($id: GitObjectID!) {&#xA;    viewer {&#xA;      repository(name: ""repository-name"") {&#xA;        object(oid: $id) {&#xA;          ... on Tree {&#xA;            entries {&#xA;              name&#xA;              oid&#xA;              type&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;&#xA;const fileQuery = `&#xA;  query getFile($id: GitObjectID!) {&#xA;    viewer {&#xA;      repository(name: ""repository-name"") {&#xA;        object(oid: $id) {&#xA;          ... on Blob {&#xA;            text&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;` &#xA;</code></pre>&#xA;&#xA;<p>And the functions themselves:</p>&#xA;&#xA;<pre><code>const data = await client.request(repositoryQuery)&#xA;&#xA;const getTree = async entry =&gt; {&#xA;  const data = await client.request(treeQuery, { id: entry.oid })&#xA;  const array = await data.viewer.repository.object.entries&#xA;  return array&#xA;}&#xA;&#xA;const getFile = async entry =&gt; {&#xA;  const data = await client.request(fileQuery, { id: entry.oid })&#xA;  const result = await data.viewer.repository.object&#xA;  return result&#xA;}&#xA;&#xA;const files = await Promise.all(&#xA;  data.viewer.repository.object.entries&#xA;    .filter(entry =&gt; entry.type !== ""tree"")&#xA;    .map(entry =&gt; {&#xA;      return (&#xA;        getFile(entry)&#xA;        .then(file =&gt; {&#xA;          return {&#xA;            data: file.text&#xA;          }&#xA;        })&#xA;      )&#xA;    }&#xA;  )&#xA;)&#xA;&#xA;files.forEach(file =&gt;&#xA;  createNode({...})&#xA;)&#xA;</code></pre>&#xA;&#xA;<p>How can I update <code>const files</code> so that it will:</p>&#xA;&#xA;<ol>&#xA;<li>Run <code>getFile()</code>, if <code>entry.type !== ""tree""</code></li>&#xA;<li>If <code>entry.type</code> is <code>tree</code>, get an array of files inside the tree with <code>getTree()</code> and then run <code>getFile()</code> for each file.</li>&#xA;<li>Combine all results in one array, so that I can apply to them <code>createNode</code>.</li>&#xA;</ol>&#xA;&#xA;<p>I would really appreciate your help.</p>&#xA;",3354729,,2614364,2020-06-18 14:08:47,2020-06-18 14:08:47,Get results from different arrays in one Promise.All with Github GraphQL API,<javascript><graphql><gatsby><github-api>,2,2,0,2020-06-11 14:22:33
62329225,2,,62275663,8,,"<p>You can use the following query to get the file content and at the same time getting the last commit for this file. This way you also get the fields <code>pushedAt</code>, <code>committedDate</code> and <code>authorDate</code> depending on what you need : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner: ""torvalds"", name: ""linux"") {&#xA;    content: object(expression: ""master:Makefile"") {&#xA;      ... on Blob {&#xA;        text&#xA;      }&#xA;    }&#xA;    info: ref(qualifiedName: ""master"") {&#xA;      target {&#xA;        ... on Commit {&#xA;          history(first: 1, path: ""Makefile"") {&#xA;            nodes {&#xA;              author {&#xA;                email&#xA;              }&#xA;              message&#xA;              pushedDate&#xA;              committedDate&#xA;              authoredDate&#xA;            }&#xA;            pageInfo {&#xA;              endCursor&#xA;            }&#xA;            totalCount&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Note that we need to also get the <code>endCursor</code> field in order to get the first commit on the file (to get the file creation date)</p>&#xA;&#xA;<p>For instance on the <a href=""https://github.com/torvalds/linux"" rel=""noreferrer"">Linux repo</a>, for the <code>Makefile</code> file it gives: </p>&#xA;&#xA;<pre class=""lang-json prettyprint-override""><code>""pageInfo"": {&#xA;  ""endCursor"": ""b29482fde649c72441d5478a4ea2c52c56d97a5e 0""&#xA;}&#xA;""totalCount"": 1806&#xA;</code></pre>&#xA;&#xA;<p>So there are 1806 commit for this file</p>&#xA;&#xA;<p>In order to get the first commit, a query referencing the last cursor which would be <code>b29482fde649c72441d5478a4ea2c52c56d97a5e 1804</code>:</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner: ""torvalds"", name: ""linux"") {&#xA;    info: ref(qualifiedName: ""master"") {&#xA;      target {&#xA;        ... on Commit {&#xA;          history(first: 1, after:""b29482fde649c72441d5478a4ea2c52c56d97a5e 1804"", path: ""Makefile"") {&#xA;            nodes {&#xA;              author {&#xA;                email&#xA;              }&#xA;              message&#xA;              pushedDate&#xA;              committedDate&#xA;              authoredDate&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>which returns the first commit of this file.</p>&#xA;&#xA;<p>I don't have any source about the cursor string format <code>""b29482fde649c72441d5478a4ea2c52c56d97a5e 1804""</code>, I've tested with some other repositories with files with more than 1000 commits and it seems that it's always formatted like :</p>&#xA;&#xA;<pre><code>&lt;static hash&gt; &lt;incremented_number&gt;&#xA;</code></pre>&#xA;&#xA;<p>which avoid to iterate over all the commits in case that there is more than 100 commits referencing your file</p>&#xA;&#xA;<p>Here is an implementation in <a href=""/questions/tagged/javascript"" class=""post-tag"" title=""show questions tagged &#39;javascript&#39;"" rel=""tag"">javascript</a> using <a href=""https://github.com/f/graphql.js"" rel=""noreferrer"">graphql.js</a> :</p>&#xA;&#xA;<pre class=""lang-javascript prettyprint-override""><code>const graphql = require('graphql.js');&#xA;&#xA;const token = ""YOUR_TOKEN"";&#xA;const queryVars = { name: ""linux"", owner: ""torvalds"" };&#xA;const file = ""Makefile"";&#xA;const branch = ""master"";&#xA;&#xA;var graph = graphql(""https://api.github.com/graphql"", {&#xA;  headers: {&#xA;    ""Authorization"": `Bearer ${token}`,&#xA;    'User-Agent': 'My Application'&#xA;  },&#xA;  asJSON: true&#xA;});&#xA;&#xA;graph(`&#xA;    query ($name: String!, $owner: String!){&#xA;      repository(owner: $owner, name: $name) {&#xA;        content: object(expression: ""${branch}:${file}"") {&#xA;          ... on Blob {&#xA;            text&#xA;          }&#xA;        }&#xA;        info: ref(qualifiedName: ""${branch}"") {&#xA;          target {&#xA;            ... on Commit {&#xA;              history(first: 1, path: ""${file}"") {&#xA;                nodes {&#xA;                  author {&#xA;                    email&#xA;                  }&#xA;                  message&#xA;                  pushedDate&#xA;                  committedDate&#xA;                  authoredDate&#xA;                }&#xA;                pageInfo {&#xA;                  endCursor&#xA;                }&#xA;                totalCount&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;`)(queryVars).then(function(response) {&#xA;  console.log(JSON.stringify(response, null, 2));&#xA;  var totalCount = response.repository.info.target.history.totalCount;&#xA;  if (totalCount &gt; 1) {&#xA;    var cursorPrefix = response.repository.info.target.history.pageInfo.endCursor.split("" "")[0];&#xA;    var nextCursor = `${cursorPrefix} ${totalCount-2}`;&#xA;    console.log(`total count : ${totalCount}`);&#xA;    console.log(`cursorPrefix : ${cursorPrefix}`);&#xA;    console.log(`get element after cursor : ${nextCursor}`);&#xA;&#xA;    graph(`&#xA;      query ($name: String!, $owner: String!){&#xA;        repository(owner: $owner, name: $name) {&#xA;          info: ref(qualifiedName: ""${branch}"") {&#xA;            target {&#xA;              ... on Commit {&#xA;                history(first: 1, after:""${nextCursor}"", path: ""${file}"") {&#xA;                  nodes {&#xA;                    author {&#xA;                      email&#xA;                    }&#xA;                    message&#xA;                    pushedDate&#xA;                    committedDate&#xA;                    authoredDate&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }`)(queryVars).then(function(response) {&#xA;        console.log(""first commit info"");&#xA;        console.log(JSON.stringify(response, null, 2));&#xA;      }).catch(function(error) {&#xA;        console.log(error);&#xA;      });&#xA;  }&#xA;}).catch(function(error) {&#xA;  console.log(error);&#xA;});&#xA;</code></pre>&#xA;",2614364,,2614364,2020-06-11 17:37:42,2020-06-11 17:37:42,"",,0,0,0,2020-06-11 16:38:52
62332519,2,,62311326,0,,"<p>The structure of $variables was not correct. The correct way is </p>&#xA;&#xA;<pre><code>$variables='&#xA;{&#xA;  ""businessId"": ""xxxx"",&#xA;  ""page"": 1,&#xA;  ""pageSize"": 5&#xA;}';&#xA;</code></pre>&#xA;",1419356,,,,2020-06-11 19:56:26,"",,0,0,0,2020-06-11 19:56:26
62335535,1,,,1,913,"<p>I'm using the <a href=""https://shopify.github.io/js-buy-sdk/#documentation"" rel=""nofollow noreferrer"">shopify-buy</a> SDK and the fetchQuery function to issue the following payload:</p>&#xA;&#xA;<pre><code>first: 50&#xA;query: ""tags:[new] AND priceRange:{minVariantPrice:0 AND maxVariantPrice:40}""&#xA;reverse: false&#xA;sortKey: ""PRICE""&#xA;</code></pre>&#xA;&#xA;<p>This is returning all products, and as far as I can tell the tags filter isn't working either. Where am I going wrong here? Here is the issued command:</p>&#xA;&#xA;<pre><code>fragment ProductFragment on Product {&#xA;  id&#xA;  availableForSale&#xA;  createdAt&#xA;  updatedAt&#xA;  descriptionHtml&#xA;  description&#xA;  handle&#xA;  productType&#xA;  title&#xA;  vendor&#xA;  publishedAt&#xA;  onlineStoreUrl&#xA;  options {&#xA;    id&#xA;    name&#xA;    values&#xA;  }&#xA;  images(first: 250) {&#xA;    pageInfo {&#xA;      hasNextPage&#xA;      hasPreviousPage&#xA;    }&#xA;    edges {&#xA;      cursor&#xA;      node {&#xA;        id&#xA;        src&#xA;        altText&#xA;      }&#xA;    }&#xA;  }&#xA;  variants(first: 250) {&#xA;    pageInfo {&#xA;      hasNextPage&#xA;      hasPreviousPage&#xA;    }&#xA;    edges {&#xA;      cursor&#xA;      node {&#xA;        ...VariantFragment&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;fragment VariantFragment on ProductVariant {&#xA;  id&#xA;  title&#xA;  price&#xA;  priceV2 {&#xA;    amount&#xA;    currencyCode&#xA;  }&#xA;  presentmentPrices(first: 20) {&#xA;    pageInfo {&#xA;      hasNextPage&#xA;      hasPreviousPage&#xA;    }&#xA;    edges {&#xA;      node {&#xA;        price {&#xA;          amount&#xA;          currencyCode&#xA;        }&#xA;        compareAtPrice {&#xA;          amount&#xA;          currencyCode&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;  weight&#xA;  available: availableForSale&#xA;  sku&#xA;  compareAtPrice&#xA;  compareAtPriceV2 {&#xA;    amount&#xA;    currencyCode&#xA;  }&#xA;  image {&#xA;    id&#xA;    src: originalSrc&#xA;    altText&#xA;  }&#xA;  selectedOptions {&#xA;    name&#xA;    value&#xA;  }&#xA;  unitPrice {&#xA;    amount&#xA;    currencyCode&#xA;  }&#xA;  unitPriceMeasurement {&#xA;    measuredType&#xA;    quantityUnit&#xA;    quantityValue&#xA;    referenceUnit&#xA;    referenceValue&#xA;  }&#xA;}&#xA;&#xA;query ($first: Int!, $query: String, $sortKey: ProductSortKeys, $reverse: Boolean) {&#xA;  products(first: $first, query: $query, sortKey: $sortKey, reverse: $reverse, after: ""eyJsYXN0X2lkIjoxNTQzODk0MjM3MjM5LCJsYXN0X3ZhbHVlIjoiMTU0Mzg5NDIzNzIzOSJ9"") {&#xA;    pageInfo {&#xA;      hasNextPage&#xA;      hasPreviousPage&#xA;    }&#xA;    edges {&#xA;      cursor&#xA;      node {&#xA;        ...ProductFragment&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3893519,,,,2020-06-12 00:11:24,GraphQL filter products by tags AND priceRange,<graphql><shopify-api>,0,5,0,2020-06-12 00:11:24
62346001,1,,,0,1666,"<p>I'm trying to fetch installed applications on Shopify store using  private application (authenticated using ApiKey and ApiPassword) but I'm getting Access Denied error.</p>&#xA;&#xA;<p>Im trying to get content of -> <strong>appInstallations</strong></p>&#xA;&#xA;<p>Described bellow on first place:</p>&#xA;&#xA;<p><a href=""https://shopify.dev/docs/admin-api/graphql/reference/queryroot?api[version]=2020-04#connections-2020-04"" rel=""nofollow noreferrer"">https://shopify.dev/docs/admin-api/graphql/reference/queryroot?api[version]=2020-04#connections-2020-04</a></p>&#xA;&#xA;<p>Inside store I set api key to have all read permissions.</p>&#xA;&#xA;<p>Im trying to execute using following query:</p>&#xA;&#xA;<pre><code>    $result = $api-&gt;graph('{&#xA;    appInstallations(first:10){&#xA;    edges{&#xA;    cursor&#xA;    }&#xA;    }&#xA;    }');&#xA;</code></pre>&#xA;&#xA;<p>Output:</p>&#xA;&#xA;<pre><code>+container: array:3 [▼&#xA;      ""data"" =&gt; null&#xA;      ""errors"" =&gt; array:1 [▼&#xA;        0 =&gt; array:3 [▼&#xA;          ""message"" =&gt; ""access denied""&#xA;          ""locations"" =&gt; array:1 [▼&#xA;            0 =&gt; array:2 [▼&#xA;              ""line"" =&gt; 2&#xA;              ""column"" =&gt; 9&#xA;            ]&#xA;          ]&#xA;          ""path"" =&gt; array:1 [▼&#xA;            0 =&gt; ""appInstallations""&#xA;          ]&#xA;        ]&#xA;      ]&#xA;</code></pre>&#xA;&#xA;<p>I tested API key for being valid by executing following GraphQL query:</p>&#xA;&#xA;<pre><code>   $result = $api-&gt;graph('{&#xA;  products(first: 50) {&#xA;    edges {&#xA;      cursor&#xA;      node {&#xA;        title&#xA;      }&#xA;    }&#xA;  }&#xA;}');&#xA;</code></pre>&#xA;&#xA;<p>And it produced valid result with products list.</p>&#xA;&#xA;<p>If You have any idea why it's acting this way please share answer with me.</p>&#xA;&#xA;<p>Regards</p>&#xA;",13734565,,,,2020-06-12 21:15:56,Shopify GraphQL Admin API - Access Denied when try fetch appInstallations,<graphql><shopify>,1,0,0,2020-06-12 14:08:30
62349931,2,,62347781,4,,"<p>This type:</p>&#xA;&#xA;<pre><code>type T = NonNullable&lt;GroupQuery['group']&gt;['criterions'][0]`&#xA;</code></pre>&#xA;&#xA;<p>Would be resolved to this type:</p>&#xA;&#xA;<pre><code>type T = {&#xA;    __typename?: ""kindA"" | undefined;&#xA;    id: number;&#xA;    name: string;&#xA;} | {&#xA;    __typename?: ""kindB"" | undefined;&#xA;    id: number;&#xA;    name: string;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So what you are really asking how to get the branch of the union where:</p>&#xA;&#xA;<pre><code>__typename === 'kindB'&#xA;</code></pre>&#xA;&#xA;<p>In that case you can use an intersection <code>&amp;</code> to filter a union type. In general that works like this:</p>&#xA;&#xA;<pre><code>type T = (""A"" | ""B"" | ""C"") &amp; ""A"" // ""A""&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://www.typescriptlang.org/play/index.html?ssl=8&amp;ssc=9&amp;pln=8&amp;pc=7#code/C4TwDgpgBAggQgYSgXigIhmqAfdcu5oJoBQokUA8gHYA2IMKsiUAZOplAPRcekk8oAdQD2AJwDWAZxIBjEdSnAoAQwBcVOgyYZ+ggGIqAlrRnzFygEYaa9RqjT4gA"" rel=""nofollow noreferrer"">Playground</a></p>&#xA;&#xA;<p>So you can use an intersection to make the union resolve to only the type that could match the intersected type.</p>&#xA;&#xA;<pre><code>type KindB =&#xA;    NonNullable&lt;GroupQuery['group']&gt;['criterions'][0] &amp; { __typename: 'kindB' }&#xA;</code></pre>&#xA;&#xA;<p>Now <code>KindB</code> resolves to this type:</p>&#xA;&#xA;<pre><code>type KindB = {&#xA;    __typename?: ""kindB"" | undefined;&#xA;    id: number;&#xA;    name: string;&#xA;} &amp; {&#xA;    __typename: 'kindB';&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As you can see, the <code>kindA</code> member of the union is no longer present, and the remaining member of the union is being intersected with <code>{ __typename: 'kindB' }</code>.  If you apply that intersection, it reduces to:</p>&#xA;&#xA;<pre><code>type KindB = {&#xA;    __typename: ""kindB"";&#xA;    id: number;&#xA;    name: string;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://www.typescriptlang.org/play/index.html#code/KYDwDg9gTgLgBDAnmYcDiUIFcwEUvBSJwC8cA3gFBw1wDmmOA-AFwXW2cCWAJmwHZYAtgCNCAGg6ca-AIZDgbAM4woXfnUnTaAYzUxCXCPyVsAglCizEAHinba5OAH1nSFHIWs4AcgDW6jxmPuJwvALCYlChnopwKmoaoQC+cAA+cPYOFC5uyMCx3v6BAEIhYXxwgqISVfJxCeqacMlZtAB89q2tlO6oANKlpHAAcsYjWAA2k7Iik8A2GNh4BEQA2j4Myz4Auu0belwGasZKu2sADDtwAGQ5rn2xbMX8PGUtlJQA9F9wAOrQPxKSjzeABV4lNiDCHDKicB75J6+cFvEL2cJwACMACYAMxaWhInxCYixNE9H5wABisi4k2BoLgKJKNLpmKhQzIcNoCI89WezPJn0prPpIOAYNKouxHJhXPsvIK-ORgWCBJoGJx+PsRJJdQUQsoQA"" rel=""nofollow noreferrer"">Playground with working code</a></p>&#xA;&#xA;<hr>&#xA;&#xA;<p>With some refactoring, you could even make this quite nice with a nice generic type alias:</p>&#xA;&#xA;<pre><code>// Union of all criterion types&#xA;type GroupQueryCriterions =&#xA;    NonNullable&lt;GroupQuery['group']&gt;['criterions'][number]&#xA;&#xA;// Get the branch of the criterions union that has a specific typename.&#xA;type GroupQueryCriterionType&lt;T extends GroupQueryCriterions['__typename']&gt; =&#xA;    GroupQueryCriterions &amp; { __typename: T }&#xA;&#xA;// Get a specific criterion type.&#xA;type KindB = GroupQueryCriterionType&lt;'kindB'&gt;&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://www.typescriptlang.org/play/index.html?ssl=21&amp;ssc=46&amp;pln=12&amp;pc=1#code/KYDwDg9gTgLgBDAnmYcDiUIFcwEUvBSJwC8cA3gFBw1wDmmOA-AFwXW2cCWAJmwHZYAtgCNCAGg6ca-AIZDgbAM4woXfnUnTaAYzUxCXCPyVsAglCizEAHinba5OAH1nSFHIWs4AcgDW6jxmPuJwvALCYlChnopwKmoaoQC+cAA+cPYOFC5uyMCx3v6BAEIhYXxwgqISVfJxCeqacMlZtAB89q2tlAD0vXAAqvxG-HAQAGZwsgA2M3B6XAZqxgj5SpTuqBjYeAREAML6hsZKpPYAcsYXWHOyIjPANjs4+ISIANo+DLs+ALrtL6LZajJT-D7VKJ-Sh9AZoYDwGAAC1QIis-B0SPGU2RqGBJxMcCwI1WyNk8CRsjOsniKB0XAmXB0aw89QAdJt8uhGHt3kclgSACr5GyCuCgAz8HhnF68w7HFYmL6uLaxf7tc6cWVveUCxVnABkORV+VibDFPX66AR01pwHpjOZ+MVLOAHK2cAA0qVSNzdjrEPyQcZhSgbMUpWVOrC4AAxWRcGZKNlwABEASlsdTYTO-Ag8BpADdZrxcqr6pyUF7ArHfdr9oGFaNQ08IzxYz5o1aAOrQPwbR7wDM8Epsb2R31UTgm1kKNhtspaWjhOAARgATABmJcyerzoTENWSS0DeOJgc24clM8zVdjn1kKe0GcFPe+K8hSgnuMJpOUQdwFeN7rveE6PvYL5mu+gTBDuFRsBu272FBPgHnUCifj0QA"" rel=""nofollow noreferrer"">Playground</a></p>&#xA;",62076,,62076,2020-06-12 18:13:09,2020-06-12 18:13:09,"",,0,0,0,2020-06-12 17:59:48
62350502,1,,,2,331,"<p>I have a component which imports a query from a graphql file via the graphql-tag/loader of webpack.</p>&#xA;&#xA;<pre><code>query testQuery {&#xA;  test&#xA;}&#xA;&#xA;query test2Query {&#xA;   test&#xA;}&#xA;</code></pre>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import { testQuery, test2Query } from './test.graphql'&#xA;</code></pre>&#xA;&#xA;<p>I'm now trying to declare a general typing for all possible queries and mutations:</p>&#xA;&#xA;<pre><code>declare module '*.graphql' {&#xA;  import { DocumentNode } from 'graphql';&#xA;  const exp: { [key: string]: DocumentNode };&#xA;&#xA;  export default exp;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The typescript compiler doesn't recognize my import. I know my typing definition is faulty, though I can't seem to find documentation which would help me in this case.</p>&#xA;&#xA;<p>Any suggestions?</p>&#xA;",5759136,,,,2020-06-12 18:38:12,Typings for multiple graphql query imports via graphql-tag/loader,<typescript><graphql><apollo><graphql-tag>,0,3,0,2020-06-12 18:38:12
62362420,1,62362617,,-1,475,"<p>I am trying to implement mutations in GraphQL. I am using GraphQL Play Ground Ui for query.</p>&#xA;&#xA;<p>Here is my mutation : </p>&#xA;&#xA;<pre><code>mutation{&#xA;  createProduct (data :{&#xA;     product: ""abc"", &#xA;     product_status : {&#xA;      ""1"" : {&#xA;      order : ""done""    &#xA;}&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is my TypeDef </p>&#xA;&#xA;<pre><code>type Product { &#xA;product : String,&#xA;product_status : JSON&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I am getting error in product_status <strong>excepted Name but found String</strong> as object contains <strong>1</strong> as string. How can i resolve this. I need to store this type of object in My database.Can someone help me to this.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/L3eT6.png"" rel=""nofollow noreferrer"">Error Image</a></p>&#xA;",10466044,,10466044,2020-06-13 16:13:42,2020-06-13 16:25:35,"Syntax Error GraphQL Expected Name, found String",<node.js><graphql><syntax-error><apollo><apollo-server>,1,1,0,2020-06-13 16:08:30
62362617,2,,62362420,0,,"<p>GraphQL supports strict data typing. So basically you can't have a string as a property key because that would mean it wouldn't know what to deserialize into. Also I'm not sure if JSON is a data type. I know strings and types but not JSON. You coudld have a object like:</p>&#xA;&#xA;<pre><code>type Product { &#xA;    product : String,&#xA;    product_status : ProductStatus&#xA;}&#xA;&#xA;type ProductStatus {&#xA;    id: ID,&#xA;    order: String,&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is how you could design it. </p>&#xA;",3755196,,,,2020-06-13 16:25:35,"",,0,0,0,2020-06-13 16:25:35
62387235,2,,62387194,0,,"<p>It turns out that all I needed was to write a stack overflow post to solve my own issue. Everything was correct, I miss understood the return of block content, it was supposed to be three array elements. </p>&#xA;",9627158,,,,2020-06-15 11:28:33,"",,0,0,0,2020-06-15 11:28:33
62388413,1,62390072,,0,255,"<p>I have been working with apollo-nuxt to query my graphql, but run into some weird issues while doing so. First of all this is my query:</p>&#xA;&#xA;<pre><code>{&#xA;  getOrder(quantity: 2) {&#xA;    id&#xA;    createdAt&#xA;    content {&#xA;      amount&#xA;      productId&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>which returns the following at /graphqli:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getOrder"": [&#xA;      {&#xA;        ""id"": null,&#xA;        ""createdAt"": 1592224281,&#xA;        ""content"": [&#xA;          {&#xA;            ""amount"": 5,&#xA;            ""productId"": ""Salad""&#xA;          },&#xA;          {&#xA;            ""amount"": 2,&#xA;            ""productId"": ""Water""&#xA;          }&#xA;        ]&#xA;      },&#xA;      {&#xA;        ""id"": null,&#xA;        ""createdAt"": 1592224264,&#xA;        ""content"": [&#xA;          {&#xA;            ""amount"": 5,&#xA;            ""productId"": ""Whine""&#xA;          },&#xA;          {&#xA;            ""amount"": 3,&#xA;            ""productId"": ""Water""&#xA;          }&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>this is as expected. Now using the same query in apollo (nuxt code):</p>&#xA;&#xA;<pre><code>&lt;script&gt;&#xA;import gql from 'graphql-tag'&#xA;export default {&#xA;  apollo: {&#xA;    orders: gql` query order {&#xA;    orders: getOrder(quantity: 2) {&#xA;    id&#xA;    createdAt&#xA;    content {&#xA;      amount&#xA;      productId&#xA;    }&#xA;  }&#xA; }`&#xA;  },&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>will produce this result:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/62PSq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/62PSq.png"" alt=""Screenshot of array content in Vue tools""></a></p>&#xA;&#xA;<p>I cannot explain why the same query produces two different results. One with the two different objects in the array and the apollo one with two times the same object in an array. When adding more (by increasing the quantity) I just get more of the same object in the array. What am I missing here?</p>&#xA;",11613186,,11613186,2020-06-15 14:06:13,2020-06-15 14:14:39,nuxt-apollo issues while pulling array of objects,<graphql><nuxt.js><vue-apollo>,1,0,0,2020-06-15 12:39:43
62394178,1,,,1,50,"<p>I need to retrieve products using discount percentage, but product only contain price. And also tag based filter can be done and now i integrate the filter based on tag and price. But, how can i retrieve product based on tag, percentage and price. </p>&#xA;&#xA;<blockquote>&#xA;  <p>Is there any way out of stored on array and then display.</p>&#xA;</blockquote>&#xA;&#xA;<p>Because it was time consuming. Important thing is, i integrate filter based on <code>storefront graphql access</code> and pass request to <code>graphql endpoint</code> via <code>ajax request</code> and <code>JS</code>. &#xA;Is there any possible solutions?</p>&#xA;",7698311,,7698311,2020-06-19 20:34:03,2020-06-19 20:34:03,Retrieve products based on Discount,<graphql><shopify><graphql-js>,0,0,0,2020-06-15 17:59:40
62395374,2,,62326596,0,,"<p>First you can run through each tree and then get an array of files for each tree, this will give you a 2 dimensional array:</p>&#xA;&#xA;<pre><code>.map(async entry =&gt; {&#xA;  const files = await getTree(entry);&#xA;  return Promise.all(&#xA;    files.map(file =&gt; getFile(file).then(fileRes =&gt; ({ data: fileRes.text })))&#xA;  );&#xA;)&#xA;</code></pre>&#xA;&#xA;<p>Then you need to flatten the result so that it is a single dimensional array:</p>&#xA;&#xA;<pre><code>const files = allFiles.flat();&#xA;</code></pre>&#xA;&#xA;<p>I hope I have understood your question correctly; The result from <code>getTree()</code> is a single dimensional array of files (i.e. <code>[file1, file2, file3]</code>) and not a multidimensional array (i.e. <code>[[file1, file2], [[file1, file2], [file1]], file1, file2]</code>).</p>&#xA;",13222231,,,,2020-06-15 19:17:50,"",,0,0,0,2020-06-15 19:17:50
62397232,2,,62326596,1,,"<p>You could get some inspiration from the walk function used to walk through directories recursively. From <a href=""https://gist.github.com/lovasoa/8691344"" rel=""nofollow noreferrer"">there</a>. It would look like this :</p>&#xA;&#xA;<pre><code>async function walk(entry, isRoot) {&#xA;  if (isRoot){&#xA;    return await processEntry(entry);&#xA;  }&#xA;  let files = await getTreeEntryFromTree(repository, entry.oid);&#xA;  files = await Promise.all(files.data.viewer.repository.object.entries.map(async file =&gt; {&#xA;    return await processEntry(file);&#xA;  }));&#xA;  return files.reduce((all, folderContents) =&gt; all.concat(folderContents), []);&#xA;}&#xA;&#xA;async function processEntry(entry){&#xA;  if (entry.type === ""tree"") {&#xA;    return walk(entry, false); &#xA;  } else {&#xA;    let res = await getBlob(repository, entry.oid);&#xA;    return [{&#xA;      name: entry.name,&#xA;      oid: entry.oid,&#xA;      data:res.data.viewer.repository.object.text&#xA;    }];&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So, it's just replacing directories with trees, and requesting the data content for each file when you return the file. </p>&#xA;&#xA;<p>The following <code>gatsby-node.js</code> code for  a source plugin (without the <code>createSchemaCustomization</code>) :</p>&#xA;&#xA;<pre><code>const { ApolloClient } = require(""apollo-client"")&#xA;const { InMemoryCache } = require(""apollo-cache-inmemory"")&#xA;const { HttpLink } = require(""apollo-link-http"")&#xA;const fetch = require(""node-fetch"")&#xA;const gql = require(""graphql-tag"")&#xA;const { setContext } = require('apollo-link-context');&#xA;&#xA;const token = ""YOUR_TOKEN"";&#xA;const repository = ""YOUR_REPO"";&#xA;&#xA;const authLink = setContext((_, { headers }) =&gt; {&#xA;  return {&#xA;    headers: {&#xA;      ...headers,&#xA;      authorization: token ? `Bearer ${token}` : null,&#xA;    }&#xA;  }&#xA;});&#xA;&#xA;const defaultOptions = {&#xA;  watchQuery: {&#xA;    fetchPolicy: 'no-cache',&#xA;    errorPolicy: 'ignore',&#xA;  },&#xA;  query: {&#xA;    fetchPolicy: 'no-cache',&#xA;    errorPolicy: 'all',&#xA;  },&#xA;}&#xA;&#xA;const client = new ApolloClient({&#xA;  link: authLink.concat(new HttpLink({ uri: 'https://api.github.com/graphql', fetch: fetch  })),&#xA;  cache: new InMemoryCache(),&#xA;  defaultOptions: defaultOptions,&#xA;});&#xA;&#xA;exports.sourceNodes = async function sourceNodes(&#xA;  {&#xA;    actions,&#xA;    cache,&#xA;    createContentDigest,&#xA;    createNodeId,&#xA;    getNodesByType,&#xA;    getNode,&#xA;  },&#xA;  pluginOptions&#xA;) {&#xA;  const { createNode, touchNode, deleteNode } = actions&#xA;  const { data } = await getTreeFromRepo(repository)&#xA;&#xA;  let sourceData = data;&#xA;&#xA;  fileArr = []&#xA;  sourceData.viewer.repository.object.entries.map(it =&gt; {&#xA;    fileArr.push(walk(it, true))&#xA;  });&#xA;  let res = await Promise.all(fileArr)&#xA;  let result = res.flat();&#xA;  console.log(result);&#xA;  console.log(`got ${result.length} results`);&#xA;  return&#xA;}&#xA;&#xA;async function walk(entry, isRoot) {&#xA;  if (isRoot){&#xA;    return await processEntry(entry);&#xA;  }&#xA;  let files = await getTreeEntryFromTree(repository, entry.oid);&#xA;  files = await Promise.all(files.data.viewer.repository.object.entries.map(async file =&gt; {&#xA;    return await processEntry(file);&#xA;  }));&#xA;  return files.reduce((all, folderContents) =&gt; all.concat(folderContents), []);&#xA;}&#xA;&#xA;async function processEntry(entry){&#xA;  if (entry.type === ""tree"") {&#xA;    return walk(entry, false); &#xA;  } else {&#xA;    let res = await getBlob(repository, entry.oid);&#xA;    return [{&#xA;      name: entry.name,&#xA;      oid: entry.oid,&#xA;      data:res.data.viewer.repository.object.text&#xA;    }];&#xA;  }&#xA;}&#xA;&#xA;async function getTreeFromRepo(repo) {&#xA;    return await client.query({&#xA;      query: gql`&#xA;        query {&#xA;          viewer {&#xA;            repository(name: ""${repo}"") {&#xA;              object(expression: ""master:"") {&#xA;                ... on Tree {&#xA;                  entries {&#xA;                    name&#xA;                    oid&#xA;                    type&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      `,&#xA;    })&#xA;}&#xA;&#xA;async function getTreeEntryFromTree(repo, oid) {&#xA;  return await client.query({&#xA;    query: gql`&#xA;      query getTree($id: GitObjectID!) {&#xA;        viewer {&#xA;          repository(name: ""${repo}"") {&#xA;            object(oid: $id) {&#xA;              ... on Tree {&#xA;                entries {&#xA;                  name&#xA;                  oid&#xA;                  type&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    `,&#xA;    variables: {&#xA;      id: oid&#xA;    }&#xA;  })&#xA;}&#xA;&#xA;async function getBlob(repo, oid){&#xA;  return await client.query({&#xA;    query: gql`&#xA;      query getFile($id: GitObjectID!) {&#xA;        viewer {&#xA;          repository(name: ""${repo}"") {&#xA;            object(oid: $id) {&#xA;              ... on Blob {&#xA;                text&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    `,&#xA;    variables: {&#xA;      id: oid&#xA;    }&#xA;  })&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You would need to replace the Github token and the repo name in the above code.</p>&#xA;&#xA;<p>It returns an array of object with file content, name and oid</p>&#xA;&#xA;<p>Note that using <code>... on Blob { text }</code> returns <code>null</code> <a href=""https://developer.github.com/v4/object/blob/"" rel=""nofollow noreferrer"">for binary file</a> : </p>&#xA;&#xA;<blockquote>&#xA;  <p>text (String) UTF8 text data or null if the Blob is binary</p>&#xA;</blockquote>&#xA;&#xA;<hr>&#xA;&#xA;<p>Also, it's possible to use Github API v3 to walk through the tree recursively in a single call, which reduces drastically the number of requests. You would have something like this : </p>&#xA;&#xA;<pre><code>async function getAllEntries(repo, owner){&#xA;  return fetch(`https://api.github.com/repos/${owner}/${repo}/git/trees/master?recursive=1`,{&#xA;    headers: {&#xA;      'Authorization': `Bearer ${token}`,&#xA;    }&#xA;  })&#xA;  .then(response =&gt; response.json());&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Full example (for a Gatsby source plugin) :</p>&#xA;&#xA;<pre><code>const { ApolloClient } = require(""apollo-client"")&#xA;const { InMemoryCache } = require(""apollo-cache-inmemory"")&#xA;const { HttpLink } = require(""apollo-link-http"")&#xA;const fetch = require(""node-fetch"")&#xA;const gql = require(""graphql-tag"")&#xA;const { setContext } = require('apollo-link-context');&#xA;&#xA;const token = ""YOUR_TOKEN"";&#xA;const repository = ""YOUR_REPO"";&#xA;const owner = ""YOUR_LOGIN"";&#xA;&#xA;const authLink = setContext((_, { headers }) =&gt; {&#xA;  return {&#xA;    headers: {&#xA;      ...headers,&#xA;      authorization: token ? `Bearer ${token}` : null,&#xA;    }&#xA;  }&#xA;});&#xA;&#xA;const defaultOptions = {&#xA;  watchQuery: {&#xA;    fetchPolicy: 'no-cache',&#xA;    errorPolicy: 'ignore',&#xA;  },&#xA;  query: {&#xA;    fetchPolicy: 'no-cache',&#xA;    errorPolicy: 'all',&#xA;  },&#xA;}&#xA;&#xA;const client = new ApolloClient({&#xA;  link: authLink.concat(new HttpLink({ uri: 'https://api.github.com/graphql', fetch: fetch  })),&#xA;  cache: new InMemoryCache(),&#xA;  defaultOptions: defaultOptions,&#xA;});&#xA;&#xA;exports.sourceNodes = async function sourceNodes(&#xA;  {&#xA;    actions,&#xA;    cache,&#xA;    createContentDigest,&#xA;    createNodeId,&#xA;    getNodesByType,&#xA;    getNode,&#xA;  },&#xA;  pluginOptions&#xA;) {&#xA;  const { createNode, touchNode, deleteNode } = actions&#xA;  const { tree } = await getAllEntries(repository, owner)&#xA;  fileArr = []&#xA;  tree.map(it =&gt; {&#xA;    fileArr.push(walk(it, true))&#xA;  });&#xA;  let res = await Promise.all(fileArr)&#xA;  let result = res.filter(value =&gt; Object.keys(value).length !== 0);&#xA;  console.log(result);&#xA;  console.log(`got ${result.length} results`);&#xA;  return&#xA;}&#xA;&#xA;async function walk(entry){&#xA;  if (entry.type === ""blob"") {&#xA;    let res = await getBlob(repository, entry.sha);&#xA;    return {&#xA;      name: entry.path,&#xA;      oid: entry.sha,&#xA;      data: res.data.viewer.repository.object.text&#xA;    };&#xA;  }&#xA;  return {};&#xA;}&#xA;&#xA;async function getAllEntries(repo, owner){&#xA;  return fetch(`https://api.github.com/repos/${owner}/${repo}/git/trees/master?recursive=1`,{&#xA;    headers: {&#xA;      'Authorization': `Bearer ${token}`,&#xA;    }&#xA;  })&#xA;  .then(response =&gt; response.json());&#xA;}&#xA;&#xA;async function getBlob(repo, oid){&#xA;  return await client.query({&#xA;    query: gql`&#xA;      query getFile($id: GitObjectID!) {&#xA;        viewer {&#xA;          repository(name: ""${repo}"") {&#xA;            object(oid: $id) {&#xA;              ... on Blob {&#xA;                text&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    `,&#xA;    variables: {&#xA;      id: oid&#xA;    }&#xA;  })&#xA;}&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>If you need to get the binary content at any cost, you would need to use Github API v3 which gives the content url directly in the get tree result. The content URL returns the content encoded in base64, see <a href=""https://api.github.com/repos/bertrandmartel/aws-admin/git/blobs/9cda091dc03c68714962a4515158aba548a4c37f"" rel=""nofollow noreferrer"">this file</a>.</p>&#xA;&#xA;<p>So, if you want base64 encoded content (binary + text), you would have the following <code>gatsby-node.js</code> (for source plugin) : </p>&#xA;&#xA;<pre><code>const fetch = require(""node-fetch"")&#xA;&#xA;const token = ""YOUR_TOKEN"";&#xA;const repository = ""YOUR_REPO"";&#xA;const owner = ""YOUR_LOGIN"";&#xA;&#xA;exports.sourceNodes = async function sourceNodes(&#xA;  {&#xA;    actions,&#xA;    cache,&#xA;    createContentDigest,&#xA;    createNodeId,&#xA;    getNodesByType,&#xA;    getNode,&#xA;  },&#xA;  pluginOptions&#xA;) {&#xA;  const { createNode, touchNode, deleteNode } = actions&#xA;  const { tree } = await getAllEntries(repository, owner)&#xA;  fileArr = []&#xA;  tree.map(it =&gt; {&#xA;    fileArr.push(walk(it, true))&#xA;  });&#xA;  let res = await Promise.all(fileArr)&#xA;  console.log(res);&#xA;  console.log(`got ${res.length} results`);&#xA;  return&#xA;}&#xA;&#xA;async function walk(entry){&#xA;  if (entry.type === ""blob"") {&#xA;    let res = await getBlob(entry.url);&#xA;    return {&#xA;      name: entry.path,&#xA;      oid: entry.sha,&#xA;      data: res.content&#xA;    };&#xA;  }&#xA;  return {};&#xA;}&#xA;&#xA;async function getAllEntries(repo, owner){&#xA;  return fetch(`https://api.github.com/repos/${owner}/${repo}/git/trees/master?recursive=1`, {&#xA;    headers: {&#xA;      'Authorization': `Bearer ${token}`,&#xA;    }&#xA;  })&#xA;  .then(response =&gt; response.json());&#xA;}&#xA;&#xA;async function getBlob(url){&#xA;  return fetch(url, {&#xA;    headers: {&#xA;      'Authorization': `Bearer ${token}`,&#xA;    }&#xA;  })&#xA;  .then(response =&gt; response.json());&#xA;}&#xA;</code></pre>&#xA;",2614364,,2614364,2020-06-15 23:06:29,2020-06-15 23:06:29,"",,0,4,0,2020-06-15 21:19:49
62412608,1,62416588,,1,261,"<p>I've had a lot of success pulling README.md content from the github v4 syntax found in <a href=""https://stackoverflow.com/questions/46248607/how-to-get-readme-md-from-github-graphql-api/46254836"">this issue</a> as follows:</p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner: ""gitpoint"", name: ""git-point"") {&#xA;    defaultBranchRef {&#xA;      name&#xA;    }&#xA;    object(expression: ""master:README.md"") {&#xA;      ... on Blob {&#xA;        text&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My issue comes when defaultBranchRef.name is not <code>master</code>.  We can expect this to be the case more frequently moving forward as people move away from that naming convention for various reasons.  </p>&#xA;&#xA;<p>How do I change the expression to reference the repo's default branch name if I don't know it till I query?  Or must I make 2 queries per repo?</p>&#xA;",265540,,2614364,2020-06-16 21:07:30,2020-06-16 21:07:30,How do I get file contents from github apiv4 on the default branch?,<graphql><github-api>,1,0,0,2020-06-16 15:54:21
62416588,2,,62412608,4,,"<p>You can use <code>HEAD:[path]</code> as expression to get the default branch : </p>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(owner: ""gitpoint"", name: ""git-point"") {&#xA;    object(expression: ""HEAD:README.md"") {&#xA;      ... on Blob {&#xA;        text&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2614364,,2614364,2020-06-16 20:09:00,2020-06-16 20:09:00,"",,0,0,0,2020-06-16 19:58:00
62461374,2,,62450674,2,,"<p>It is possible, relevant documentation is here: <a href=""https://hasura.io/docs/1.0/graphql/manual/mutations/upsert.html#upsert-in-nested-mutations"" rel=""nofollow noreferrer"">https://hasura.io/docs/1.0/graphql/manual/mutations/upsert.html#upsert-in-nested-mutations</a></p>&#xA;&#xA;<p>It is possible to use <code>on_conflict</code> key on any level (top, or nested) where you want to resolve updating an existing record.</p>&#xA;&#xA;<pre><code>mutation upsert_author_article {&#xA;  insert_author(&#xA;    objects: [&#xA;      {&#xA;        name: ""John"",&#xA;        articles: {&#xA;          data: [&#xA;            {&#xA;              title: ""Article 3"",&#xA;              content: ""Article 3 content""&#xA;            }&#xA;          ],&#xA;          on_conflict: {&#xA;            constraint: article_title_key,&#xA;            update_columns: [content]&#xA;          }&#xA;        }&#xA;      }&#xA;    ]&#xA;  ) {&#xA;    affected_rows&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2526423,,,,2020-06-19 00:16:16,"",,0,2,0,2020-06-19 00:16:16
62466370,1,,,2,1408,"<p>I am using GraphQL for the first time, an from what i could see the formatting is just the same as Json. &#xA;But i am having a horrible time getting it working correctly. &#xA;I have used PostMan to ensure my Querys are correct. But when taking it from Postman and trying to run it in PHP, I am getting endless problems. </p>&#xA;&#xA;<p>My last attempt looking at another post on here, was passing the Query and Variables separately&#xA;But the response i keep getting is: </p>&#xA;&#xA;<pre><code>{""errors"":{""variables"":""expected String to be a Hash""}}&#xA;</code></pre>&#xA;&#xA;<p>My code:   </p>&#xA;&#xA;<pre><code> $query = &lt;&lt;&lt;'JSON'&#xA;query ($first: Int, $sku: String)&#xA;{ productVariants(first: $first, query: $sku) {&#xA;    edges {&#xA;      node {&#xA;        title&#xA;        id&#xA;        sku&#xA;        product {&#xA;          title&#xA;        }&#xA;        inventoryItem {&#xA;          id&#xA;          inventoryLevels(first: 3) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;                available&#xA;                location {&#xA;                  id&#xA;                  name&#xA;                  address {&#xA;                    city&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;JSON;&#xA;&#xA;            $variables = '{&#xA;  ""first"": 4,  &#xA;  ""sku"": ""100560 OR 100559 OR 100558 OR 100557""&#xA;}';&#xA;&#xA;curl_setopt_array($curl, array(&#xA;            CURLOPT_URL =&gt; ""https://XXXXXXXXXXXXXXXXXXXXXXX.myshopify.com/admin/api/2020-04/graphql.json"",&#xA;            CURLOPT_RETURNTRANSFER =&gt; true,&#xA;            CURLOPT_ENCODING =&gt; """",&#xA;            CURLOPT_MAXREDIRS =&gt; 10,&#xA;            CURLOPT_TIMEOUT =&gt; 0,&#xA;            CURLOPT_FOLLOWLOCATION =&gt; true,&#xA;            CURLOPT_HTTP_VERSION =&gt; CURL_HTTP_VERSION_1_1,&#xA;            CURLOPT_CUSTOMREQUEST =&gt; ""POST"",&#xA;            CURLOPT_POSTFIELDS =&gt; $json,&#xA;            CURLOPT_HTTPHEADER =&gt; array(&#xA;                ""Content-Type: application/json"",&#xA;                ""Cookie: __cfduid=d10b3b9586e13d4b79ffd43e3cdec77f21592474922""&#xA;            ),&#xA;        ));&#xA;&#xA;        $response = curl_exec($curl);&#xA;</code></pre>&#xA;&#xA;<p>Is my formatting wrong? </p>&#xA;&#xA;<p>Here is the raw copy from Postman: </p>&#xA;&#xA;<pre><code>query ($first: Int, $sku: String)&#xA;{ productVariants(first: $first, query: $sku) {&#xA;    edges {&#xA;      node {&#xA;        title&#xA;        id&#xA;        sku&#xA;        product {&#xA;          title&#xA;        }&#xA;        inventoryItem {&#xA;          id&#xA;          inventoryLevels(first: 3) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;                available&#xA;                location {&#xA;                  id&#xA;                  name&#xA;                  address {&#xA;                    city&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Variables: </p>&#xA;&#xA;<pre><code>{&#xA;  ""first"": 4,  &#xA;  ""sku"": ""100560 OR 100559 OR 100558 OR 100557""&#xA;}&#xA;</code></pre>&#xA;",4605812,,,,2021-02-16 11:26:19,Json and GraphQL Variables expected String to be a Hash,<php><json><graphql>,2,0,0,2020-06-19 08:32:41
62468123,2,,62466370,1,,"<p>After much headache. &#xA;It would appear it variables just needs to be formatted in an array. </p>&#xA;&#xA;<pre><code>$variables = array(&#xA;    ""first"" =&gt; 4,&#xA;    ""sku"" =&gt; ""100560 OR 100559 OR 100558 OR 9995565""&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>Hope this helps someone else who experiances the same error. &#xA;Not sure why it says Hash, such a missleading error. </p>&#xA;",4605812,,,,2020-06-19 10:20:17,"",,0,0,0,2020-06-19 10:20:17
62473338,2,,62456399,1,,"<p>With some hard work and determination I was able to get it solved.&#xA;Within the <code>.then</code> function I defined a new array call <code>let newQueryData = [];</code> and within the <code>.forEach</code> function I appended the new array <code>newQueryData.push(data);</code> and finally I returned the new array <code>return newQueryData;</code>. I didn't need another <code>.then</code>. Here is my final code.</p>&#xA;<p>I took out most of the code from the graphql resolver like so;</p>&#xA;<pre><code>const firbasePageRef = firestore.collection('pages');&#xA;const getPagePromise = firbasePageRef.get()&#xA;.then((querySnapshot) =&gt; {&#xA;  let newQueryData = [];&#xA;    const queryData = querySnapshot.forEach(function( doc) {&#xA;        // doc.data() is never undefined for query doc snapshots&#xA;        const { title, meta, sections } = doc.data();&#xA;        const data = {&#xA;          routeName: encodeURI(title.toLowerCase()),&#xA;          id: doc.id,&#xA;          meta,&#xA;          sections,&#xA;          title&#xA;        };&#xA;        newQueryData.push(data);&#xA;    })&#xA;&#xA;    return newQueryData;&#xA;&#xA;});&#xA;</code></pre>&#xA;<p>Next I edited the graphql resolver like so:</p>&#xA;<pre><code>const resolvers = {&#xA;  Query: {&#xA;    pages: () =&gt; getPagePromise&#xA;  }&#xA;};&#xA;</code></pre>&#xA;<p>Now in graphql playground this is my results!</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;pages&quot;: [&#xA;      {&#xA;        &quot;title&quot;: &quot;Home Page&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Guys I hope this helps anyone that is having the same or a similar problem. This is Firebase to graphql.</p>&#xA;",6257661,,6257661,2020-06-21 09:49:07,2020-06-21 09:49:07,"",,0,0,0,2020-06-19 15:16:15
62483401,1,,,1,26,"<p>On server I can do this</p>&#xA;&#xA;<pre><code>// server&#xA;const resolvers = {&#xA;  AllowedColor: {&#xA;    RED: 1,&#xA;    GREEN: 2,&#xA;    BLUE: 3,&#xA;  }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>I would like to do the same on the client since I work with integer values. I have tried using resolvers in <code>ApolloClient</code> but they are not called at all.</p>&#xA;&#xA;<pre><code>// client&#xA;const resolvers = {&#xA;  AllowedColor: {&#xA;    RED: 1,&#xA;    GREEN: 2,&#xA;    BLUE: 3,&#xA;  }&#xA;};&#xA;</code></pre>&#xA;",12451814,,,,2020-06-20 08:24:44,Resolving enums on client,<apollo-client>,0,0,0,2020-06-20 08:24:44
62485086,2,,62483040,2,,<p>The syntax of your query is not correct . It should be :</p>&#xA;<pre><code>{&#xA;  my_func (my_var:[&quot;abc&quot;]) {&#xA;    my_var2&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>You should use round brackets <code>()</code> instead of curly brackets <code>{}</code> for specifying the field argument in the query.</p>&#xA;,339637,,,,2020-06-20 11:15:55,"",,0,0,0,2020-06-20 11:15:55
62511944,2,,62503100,2,,<p><code>Looks like it's graphql`&lt;Content&gt;` not graphql(`&lt;Content`)&gt;</code></p>&#xA;,9046973,,,,2020-06-22 10:05:05,"",,0,1,0,2020-06-22 10:05:05
62527075,2,,62516291,0,,"<p>I am assuming that you are using <a href=""https://github.com/ashkan18/graphlient"" rel=""nofollow noreferrer"">ashkan18/graphlient</a> since this is the first result when searching for graphlient.</p>&#xA;<p>And according to its documentation, you can use a string for making queries. So instead of using blocks in your example, you can do this instead:</p>&#xA;<pre><code>response = client.query &lt;&lt;~GRAPHQL&#xA;  query {&#xA;    search(id: 1) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          name&#xA;          timing {&#xA;            start&#xA;            end&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;GRAPHQL&#xA;</code></pre>&#xA;",9375533,,,,2020-06-23 03:54:56,"",,0,0,0,2020-06-23 03:54:56
62545214,2,,62520415,1,,<h2>code</h2>&#xA;<blockquote>&#xA;<pre><code>result.data.allSanityProjects.edges.forEach(({ node }) =&gt; {&#xA;    node.projectChildPages.map(childPage =&gt; {&#xA;      if (node &amp;&amp; node.projectChildPages.length &gt; 0 &amp;&amp; node.projectChildPages.slug) {&#xA;</code></pre>&#xA;</blockquote>&#xA;<p>Condition doesn't have much sense there:</p>&#xA;<ul>&#xA;<li>if you're in <code>.map()</code> then for sure <code>node</code> and <code>node.projectChildPages.length &gt; 0</code> are <code>true</code></li>&#xA;<li><code>projectChildPages</code> is an array so no <code>projectChildPages.slug</code> here</li>&#xA;</ul>&#xA;<h2>query</h2>&#xA;<p>Your fetched data (source) doesn't contain <code>_rawBlockContent</code> so you can't query for this in page component.</p>&#xA;,6124657,,,,2020-06-23 23:19:48,"",,0,0,0,2020-06-23 23:19:48
62546171,1,,,0,101,"<p>I am attempting to iterate through the output of a GraphQL query as JSON and create a list of Python dicts (the 'projects' variable) containing the information. Here is the code I have been using so far:</p>&#xA;<pre><code>url = 'https://api.github.com/graphql'&#xA;api_token = 'API_TOKEN'&#xA;headers = {'Authorization': 'token %s' % api_token}&#xA;&#xA;# Parse Output&#xA;r = requests.post(url=url, json={'query': query}, headers=headers)&#xA;json_data = json.loads(r.text)&#xA;df_data = json_data['data']['user']['pinnedItems']['edges']&#xA;data = df_data&#xA;i = 0&#xA;while i &lt; len(df_data):&#xA;    for key, value in df_data[i].items():&#xA;        projects = [&#xA;            {&#xA;                'name': value['name'],&#xA;                'url': value['url']&#xA;            }&#xA;        ]&#xA;&#xA;    i += 1&#xA;</code></pre>&#xA;<p>However, when I execute this code and print out <code>projects</code>, only the first object is captured. Does anyone have any idea how to get more than one object to be added to the list? I have four objects in total.</p>&#xA;<p>Note: The JSON is based on GraphQL output from the GitHub API, the query is below:</p>&#xA;<pre><code>query {&#xA;    user(login:&quot;USER&quot;) {&#xA;    pinnedItems(first: 4, types: [REPOSITORY]) {&#xA;      edges {&#xA;        node {&#xA;          ... on Repository {&#xA;            name&#xA;            shortDescriptionHTML&#xA;            url&#xA;            openGraphImageUrl&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Here is the full JSON output from GitHub:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;user&quot;: {&#xA;      &quot;pinnedItems&quot;: {&#xA;        &quot;edges&quot;: [&#xA;          {&#xA;            &quot;node&quot;: {&#xA;              &quot;name&quot;: &quot;TEXT&quot;,&#xA;              &quot;shortDescriptionHTML&quot;: &quot;TEXT&quot;,&#xA;              &quot;url&quot;: &quot;URL&quot;,&#xA;              &quot;openGraphImageUrl&quot;: &quot;URL&quot;&#xA;            }&#xA;          },&#xA;          {&#xA;            &quot;node&quot;: {&#xA;              &quot;name&quot;: &quot;TEXT&quot;,&#xA;              &quot;shortDescriptionHTML&quot;: &quot;TEXT&quot;,&#xA;              &quot;url&quot;: &quot;URL&quot;,&#xA;              &quot;openGraphImageUrl&quot;: &quot;URL&quot;&#xA;            }&#xA;          },&#xA;          {&#xA;            &quot;node&quot;: {&#xA;              &quot;name&quot;: &quot;TEXT&quot;,&#xA;              &quot;shortDescriptionHTML&quot;: &quot;TEXT&quot;,&#xA;              &quot;url&quot;: &quot;URL&quot;,&#xA;              &quot;openGraphImageUrl&quot;: &quot;URL&quot;&#xA;            }&#xA;          },&#xA;          {&#xA;            &quot;node&quot;: {&#xA;              &quot;name&quot;: &quot;TEXT&quot;,&#xA;              &quot;shortDescriptionHTML&quot;: &quot;TEXT&quot;,&#xA;              &quot;url&quot;: &quot;URL&quot;,&#xA;              &quot;openGraphImageUrl&quot;: &quot;URL&quot;&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Thanks</p>&#xA;",11244388,,,,2020-06-24 09:58:15,Appending Python Dictionaries to a List,<python><graphql>,4,0,0,2020-06-24 01:25:36
62546305,2,,62546171,1,,"<blockquote>&#xA;<p>only the first object is captured</p>&#xA;</blockquote>&#xA;<p>You are not capturing the first data. The list is being overwritten node after node. So what you are seeing is actually the information of the <strong>last node</strong>. It is good practice to name your sample data differently, like numbering them for example, easier to troubleshoot.</p>&#xA;<p>What is the use of <code>data = df_data</code>, it is being initialized but not used.</p>&#xA;<pre class=""lang-py prettyprint-override""><code>df_data = json_data['data']['user']['pinnedItems']['edges']&#xA;data_length = len(df_data)&#xA;i = 0&#xA;projects = []&#xA;while i &lt; data_length:&#xA;    for key, value in df_data[i].items():&#xA;        node_data = [{'name': value['name'], 'url': value['url']}]&#xA;        projects.append(node_data)&#xA;    i += 1&#xA;</code></pre>&#xA;<p>Output:</p>&#xA;<pre><code>[[{'name': 'TEXT1', 'url': 'URL'}], [{'name': 'TEXT2', 'url': 'URL'}], [{'name': 'TEXT3', 'url': 'URL'}], [{'name': 'TEXT4', 'url': 'URL'}]]&#xA;</code></pre>&#xA;",13195468,,,,2020-06-24 01:42:13,"",,0,0,0,2020-06-24 01:42:13
62546331,2,,62546171,2,,"<p>You were basically creating every time a new list with one item.&#xA;To append more items to the same list, you need to use the method &quot;list.append()&quot;, as python_guy_rany has shown to you.</p>&#xA;<p>However, if you want to keep using the while loop, do not forget to add the i+=1 to the python_guy_rany code.&#xA;I'd rather use a for loop:</p>&#xA;<pre><code>for i in range(len(df_data)):&#xA;</code></pre>&#xA;<p>you can avoid both i=0 and i+=1 with this.&#xA;You could also use a list comprehension, but I think sticking with the for loop it's easier to understand.</p>&#xA;",13454852,,13454852,2020-06-24 09:58:15,2020-06-24 09:58:15,"",,0,0,0,2020-06-24 01:45:19
62564612,1,62565213,,2,1375,"<p>I am learning about Interfaces and Unions in GraphQL (using Apollo Server) and am wondering about something. Using documentation examples, <a href=""https://www.apollographql.com/docs/apollo-server/schema/unions-interfaces/#union-type"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/schema/unions-interfaces/#union-type</a>, how would I return a result which could return authors and books?</p>&#xA;<p>My understanding is that you can only return one object type. If a search result contains and array of both books and authors, how is such a result returned? Can things be structured for this case? I have noticed that <code>__resolveType</code> does not work on an array and can only return a single result (it would return the type for all the objects in the array, not each object in array).</p>&#xA;<h2>GraphQL TypeDef</h2>&#xA;<pre><code>const { gql } = require('apollo-server');&#xA;&#xA;const typeDefs = gql`&#xA;  union Result = Book | Author&#xA;&#xA;  type Book {&#xA;    title: String&#xA;  }&#xA;&#xA;  type Author {&#xA;    name: String&#xA;  }&#xA;&#xA;  type Query {&#xA;    search: [Result]&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<h2>Resolver</h2>&#xA;<pre><code>const resolvers = {&#xA;  Result: {&#xA;    __resolveType(obj, context, info){&#xA;      console.log(obj);&#xA;      if(obj.name){&#xA;        return 'Author';&#xA;      }&#xA;&#xA;      if(obj.title){&#xA;        return 'Book';&#xA;      }&#xA;&#xA;      return null;&#xA;    },&#xA;  },&#xA;  Query: {&#xA;    search: () =&gt; { ... }&#xA;  },&#xA;};&#xA;&#xA;const server = new ApolloServer({&#xA;  typeDefs,&#xA;  resolvers,&#xA;});&#xA;&#xA;server.listen().then(({ url }) =&gt; {&#xA;  console.log(` Server ready at ${url}`)&#xA;});&#xA;</code></pre>&#xA;<p>The actual GraphQL query may look something like this and consider the search result is both books and authors:</p>&#xA;<pre><code>{&#xA;  search(contains: &quot;&quot;) {&#xA;    ... on Book {&#xA;      title&#xA;    }&#xA;    ... on Author {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>When run, <code>__resolveType(obj, context, info){</code>, <code>obj</code> is:</p>&#xA;<pre><code>[{ title: 'A' }, { title: 'B' }, { name: 'C' }]&#xA;</code></pre>&#xA;",5836,,5836,2020-06-24 23:22:47,2020-06-24 23:22:47,Pattern for multiple types from GraphQL Union,<graphql><apollo-server>,1,0,0,2020-06-24 21:49:28
62565213,2,,62564612,0,,"<p>There's only two ways that would happen:</p>&#xA;<ol>&#xA;<li>The <code>search</code> field's type is not actually a list (i.e. it's <code>Result</code> instead of <code>[Result]</code> as shown in the code above.</li>&#xA;<li>Your resolver for the <code>search</code> field is returning an array of an array of objects: <code>return [[{ title: 'A' }, { title: 'B' }, { name: 'C' }]]</code></li>&#xA;</ol>&#xA;",6024220,,,,2020-06-24 22:47:48,"",,0,2,0,2020-06-24 22:47:48
62572062,2,,62563063,2,,"<p>Contentful DevRel here. </p>&#xA;<p>I just prototyped your scenario and this query should do it.</p>&#xA;<pre><code>query {&#xA;  categoryCollection(where: { slug_contains: &quot;schnitzel&quot; }) {&#xA;    items {&#xA;      linkedFrom {&#xA;        entryCollection {&#xA;          items {&#xA;            ...on Article {&#xA;              title &#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>You can find more info in the docs about links to <a href=""https://www.contentful.com/developers/docs/references/graphql/#links-to-a-specific-item"" rel=""nofollow noreferrer"">a specific entry</a>.</p>&#xA;<p>Hope that helps. :)</p>&#xA;",4253183,,,,2020-06-25 09:22:21,"",,0,3,0,2020-06-25 09:22:21
62614907,1,,,0,65,"<p>When a user creates a data of type Post, I need the graphql server to automatically create a data of type Commit as well. The type Commit connects to type User and type Post. Here is the graphql pattern for type User, type Post, and type Commit:</p>&#xA;<pre><code>type User {&#xA;  id: ID!&#xA;  username: String!&#xA;  commits: [Commit!]!&#xA;}&#xA;&#xA;type Post {&#xA;  id: ID!&#xA;  title: String!&#xA;  content: String&#xA;  commits: [Commit!]!&#xA;}&#xA;&#xA;type Commit {&#xA;  id: ID!&#xA;  user: User!&#xA;  post: Post!&#xA;}&#xA;</code></pre>&#xA;<p>So I made a createPost mutation. The createPost mutation must do two jobs at once: creating the Post, and then creating the Commit. The Commit data should connect to the newly created Post data. Below is the resolver that I have came up with until now:</p>&#xA;<pre><code>Mutation: {&#xA;  createPost: async (_, args) =&gt; {&#xA;    const {user, title, content} = args;&#xA;    await prisma.createPost({&#xA;      title,&#xA;      content&#xA;    });&#xA;    const postId = await prisma.post({title}).id();&#xA;    await prisma.createCommit({&#xA;      user: {connect: {id: user.id}},&#xA;      post: {connect: {id: postId }}&#xA;    });&#xA;    const newPost = await prisma.post({id:postId});&#xA;    return newPost;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Is this an effective way? Or is there a better way to do this?</p>&#xA;",11691128,,11691128,2020-06-27 20:20:16,2020-06-29 13:23:29,Creating two types of data at once in a single resolver (Graphql + Prisma),<graphql><prisma><prisma-graphql>,1,0,0,2020-06-27 19:56:07
62623039,1,,,0,817,"<p>I have a name field value as &quot;abc_name&quot; so when I search &quot;abc_&quot; I am getting proper results but when I search &quot;abc_@#£&amp;-#&amp;&quot; still I am getting same results. I want my query to ignore this special characters that doesn't matches with my query.</p>&#xA;<p>My query has:</p>&#xA;<ul>&#xA;<li>Multi_match</li>&#xA;<li>type as cross_fields</li>&#xA;<li>operator AND</li>&#xA;<li>I am using search_analyzer standard for my Fields</li>&#xA;</ul>&#xA;<p>And I want this structure as it is otherwise it will affect my other Search behaviour</p>&#xA;<pre><code>  &quot;name&quot;: {&#xA;         &quot;type&quot;: &quot;text&quot;,&#xA;           &quot;fields&quot;: {&#xA;           &quot;keyword&quot;: {&#xA;                 &quot;type&quot;: &quot;keyword&quot;,&#xA;                    &quot;ignore_above&quot;: 256&#xA;                     }&#xA;                       },&#xA;                     &quot;analyzer&quot;: &quot;autocomplete&quot;,&#xA;                 &quot;search_analyzer&quot;: &quot;standard&quot;&#xA;                            }&#xA;</code></pre>&#xA;",12473922,,12473922,2020-06-28 17:52:28,2020-06-28 18:04:13,Elastic Search multi match query can't ignore special characters,<node.js><elasticsearch><graphql>,1,5,0,2020-06-28 13:16:37
62625815,2,,62623039,1,,"<p>Please see the below sample which would fit your use case where I've created a <a href=""https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-custom-analyzer.html"" rel=""nofollow noreferrer"">custom analyzer</a> which would fit your use case:</p>&#xA;<h2>Sample Mapping:</h2>&#xA;<pre><code>PUT some_test_index&#xA;{&#xA;  &quot;settings&quot;: {&#xA;    &quot;analysis&quot;: {&#xA;      &quot;analyzer&quot;: {&#xA;        &quot;my_custom_analyzer&quot;: { &#xA;          &quot;type&quot;: &quot;custom&quot;,&#xA;          &quot;tokenizer&quot;: &quot;custom_tokenizer&quot;,&#xA;          &quot;filter&quot;: [&quot;lowercase&quot;, &quot;3_5_edge_ngram&quot;]&#xA;        }&#xA;      },&#xA;      &quot;tokenizer&quot;: {&#xA;        &quot;custom_tokenizer&quot;: { &#xA;          &quot;type&quot;: &quot;pattern&quot;,&#xA;          &quot;pattern&quot;: &quot;\\w+_+[^a-zA-Z\\d\\s_]+|\\s+&quot;.      &lt;---- Note this pattern&#xA;        }&#xA;      },&#xA;      &quot;filter&quot;: {&#xA;        &quot;3_5_edge_ngram&quot;: {&#xA;          &quot;type&quot;: &quot;edge_ngram&quot;,&#xA;          &quot;min_gram&quot;: 3,&#xA;          &quot;max_gram&quot;: 5&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  &quot;mappings&quot;: {&#xA;    &quot;properties&quot;: {&#xA;      &quot;my_field&quot;:{&#xA;        &quot;type&quot;: &quot;text&quot;,&#xA;        &quot;analyzer&quot;: &quot;my_custom_analyzer&quot;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The above mentioned pattern would simply ignore the tokens with the format like <code>abc_$%^^##</code>. As a result this token would not be indexed.</p>&#xA;<p>Note that the way the analyzer works is:</p>&#xA;<ul>&#xA;<li>First executes tokenizer</li>&#xA;<li>Then applies the edge_ngram filter on the tokens generated.</li>&#xA;</ul>&#xA;<p>You can verify by <strong>simply removing the</strong> <code>edge_ngram</code> <em><strong>filter</strong></em> in the above mapping to first understand what tokens are getting generated via <a href=""https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-analyze.html"" rel=""nofollow noreferrer"">Analyze API</a> which would be as below:</p>&#xA;<pre><code>POST some_test_index/_analyze&#xA;{&#xA;  &quot;analyzer&quot;: &quot;my_custom_analyzer&quot;,&#xA;  &quot;text&quot;: &quot;abc_name asda efg_!@#!@# 1213_adav&quot;&#xA;}&#xA;</code></pre>&#xA;<p><strong>Tokens generated:</strong></p>&#xA;<pre><code>{&#xA;  &quot;tokens&quot; : [&#xA;    {&#xA;      &quot;token&quot; : &quot;abc_name&quot;,&#xA;      &quot;start_offset&quot; : 0,&#xA;      &quot;end_offset&quot; : 8,&#xA;      &quot;type&quot; : &quot;word&quot;,&#xA;      &quot;position&quot; : 0&#xA;    },&#xA;    {&#xA;      &quot;token&quot; : &quot;asda&quot;,&#xA;      &quot;start_offset&quot; : 9,&#xA;      &quot;end_offset&quot; : 13,&#xA;      &quot;type&quot; : &quot;word&quot;,&#xA;      &quot;position&quot; : 1&#xA;    },&#xA;    {&#xA;      &quot;token&quot; : &quot;1213_adav&quot;,&#xA;      &quot;start_offset&quot; : 25,&#xA;      &quot;end_offset&quot; : 34,&#xA;      &quot;type&quot; : &quot;word&quot;,&#xA;      &quot;position&quot; : 2&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>Note that the token <code>efg_!@#!@#</code> has been removed.</p>&#xA;<p>I've added edge_ngram fitler as you would want the search to be successful if you search with <code>abc_</code> if your tokens generated via tokenizer is <code>abc_name</code>.</p>&#xA;<h2>Sample Document:</h2>&#xA;<pre><code>POST some_test_index/_doc/1&#xA;{&#xA;  &quot;my_field&quot;: &quot;abc_name asda efg_!@#!@# 1213_adav&quot;&#xA;}&#xA;</code></pre>&#xA;<h2>Query Request:</h2>&#xA;<p><strong>Use-case 1:</strong></p>&#xA;<pre><code>POST some_test_index/_search&#xA;{&#xA;  &quot;query&quot;: {&#xA;    &quot;match&quot;: {&#xA;      &quot;my_field&quot;: &quot;abc_&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><strong>Use-case-2:</strong></p>&#xA;<pre><code>POST some_test_index/_search&#xA;{&#xA;  &quot;query&quot;: {&#xA;    &quot;match&quot;: {&#xA;      &quot;my_field&quot;: &quot;efg_!@#!@#&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<h2>Responses:</h2>&#xA;<p><strong>Response for use-case-1:</strong></p>&#xA;<pre><code>{&#xA;  &quot;took&quot; : 0,&#xA;  &quot;timed_out&quot; : false,&#xA;  &quot;_shards&quot; : {&#xA;    &quot;total&quot; : 1,&#xA;    &quot;successful&quot; : 1,&#xA;    &quot;skipped&quot; : 0,&#xA;    &quot;failed&quot; : 0&#xA;  },&#xA;  &quot;hits&quot; : {&#xA;    &quot;total&quot; : {&#xA;      &quot;value&quot; : 1,&#xA;      &quot;relation&quot; : &quot;eq&quot;&#xA;    },&#xA;    &quot;max_score&quot; : 0.47992462,&#xA;    &quot;hits&quot; : [&#xA;      {&#xA;        &quot;_index&quot; : &quot;some_test_index&quot;,&#xA;        &quot;_type&quot; : &quot;_doc&quot;,&#xA;        &quot;_id&quot; : &quot;1&quot;,&#xA;        &quot;_score&quot; : 0.47992462,&#xA;        &quot;_source&quot; : {&#xA;          &quot;my_field&quot; : &quot;abc_name asda efg_!@#!@# 1213_adav&quot;&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><strong>Response for use-case-2:</strong></p>&#xA;<pre><code>{&#xA;  &quot;took&quot; : 0,&#xA;  &quot;timed_out&quot; : false,&#xA;  &quot;_shards&quot; : {&#xA;    &quot;total&quot; : 1,&#xA;    &quot;successful&quot; : 1,&#xA;    &quot;skipped&quot; : 0,&#xA;    &quot;failed&quot; : 0&#xA;  },&#xA;  &quot;hits&quot; : {&#xA;    &quot;total&quot; : {&#xA;      &quot;value&quot; : 0,&#xA;      &quot;relation&quot; : &quot;eq&quot;&#xA;    },&#xA;    &quot;max_score&quot; : null,&#xA;    &quot;hits&quot; : [ ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<h2>Updated Answer:</h2>&#xA;<p>Create your mapping as follows based on the index I've created and let me know if that works:</p>&#xA;<pre><code>PUT some_test_index&#xA;{&#xA;  &quot;settings&quot;: {&#xA;    &quot;analysis&quot;: {&#xA;      &quot;analyzer&quot;: {&#xA;        &quot;my_custom_analyzer&quot;: { &#xA;          &quot;type&quot;: &quot;custom&quot;,&#xA;          &quot;tokenizer&quot;: &quot;punctuation&quot;,&#xA;          &quot;filter&quot;: [&quot;lowercase&quot;]&#xA;        }&#xA;      },&#xA;      &quot;tokenizer&quot;: {&#xA;        &quot;punctuation&quot;: { &#xA;          &quot;type&quot;: &quot;pattern&quot;,&#xA;          &quot;pattern&quot;: &quot;\\w+_+[^a-zA-Z\\d\\s_]+|\\s+&quot;&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  &quot;mappings&quot;: {&#xA;    &quot;properties&quot;: {&#xA;      &quot;my_field&quot;:{&#xA;        &quot;type&quot;: &quot;text&quot;,&#xA;        &quot;analyzer&quot;: &quot;autocompete&quot;,                   &lt;----- Assuming you have already this in setting&#xA;        &quot;search_analyzer&quot;: &quot;my_custom_analyzer&quot;.     &lt;----- Note this&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Please try and let me know if this works for all your use-cases.</p>&#xA;",3838328,,3838328,2020-06-28 18:04:13,2020-06-28 18:04:13,"",,0,13,0,2020-06-28 17:13:37
62633904,1,62634072,,5,8505,"<p>I'm trying to get <code>useQuery</code> hook to work with TypeScript.</p>&#xA;<p>Here is my query</p>&#xA;<pre><code>export const FETCH_LINKS = gql`&#xA;  query FetchLinks {&#xA;    feed {&#xA;      links {&#xA;        id&#xA;        createdAt&#xA;        url&#xA;        description&#xA;     }&#xA;  }&#xA;}&#xA;`;&#xA;</code></pre>&#xA;<p>I generated the types from GraphQL schema with <code>graphql-codegen</code></p>&#xA;<pre><code>export type Feed = {&#xA;  __typename?: 'Feed';&#xA;  links: Array&lt;Link&gt;;&#xA;  count: Scalars['Int'];&#xA;};&#xA;&#xA;export type Link = {&#xA;  __typename?: 'Link';&#xA;  id: Scalars['ID'];&#xA;  createdAt: Scalars['DateTime'];&#xA;  description: Scalars['String'];&#xA;  url: Scalars['String'];&#xA;  postedBy?: Maybe&lt;User&gt;;&#xA;  votes: Array&lt;Vote&gt;;&#xA;};&#xA;&#xA;</code></pre>&#xA;<p>In my component, I apply the type to <code>useQuery</code> hook</p>&#xA;<pre><code>const { data, loading, error } = useQuery&lt;Feed&gt;(FETCH_LINKS);&#xA;</code></pre>&#xA;<p>The problem is that in the <code>data</code> variable I receive an object of the following shape:</p>&#xA;<pre><code>{&#xA;feed: {&#xA;  __typename&#xA;  links&#xA;  count&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>So, in order to loop through the array of links and render them on the page, I need to do <code>data.feed.links.map()</code> but the <code>Feed</code> type does not have a <code>feed</code> property on it and therefore, I get an error message <code>Property 'feed' does not exist on type 'Feed'</code>&#xA;How do I rectify this inconsistency</p>&#xA;",13288420,,,,2020-07-02 12:51:07,React Apollo useQuery hook with TypeScript,<reactjs><typescript><graphql><react-apollo><apollo-client>,3,2,0,2020-06-29 08:19:06
62636193,1,62636473,,2,4501,"<p>I have written my first script that utilises GraphQL (Still a learning curve)</p>&#xA;<p>Currently i am making 3 calls using GraphQL,&#xA;First is a product lookup,&#xA;Second is a Price Update,&#xA;Third is a Inventory Update.</p>&#xA;<p>To reduce the number of calls to the end point i wanted to merge both Price update and Inventory, But i am having 0 luck, i dont know if its bad formatting.</p>&#xA;<p>Here is my GraphQL Code (I am using Postman to help ensure the schema is correct before taking it to PHP)</p>&#xA;<pre><code>mutation  productVariantUpdate($input: ProductVariantInput!) {&#xA;  productVariantUpdate(input: $input) {&#xA;    product {&#xA;      id&#xA;    }&#xA;    productVariant {&#xA;      id&#xA;      price&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }}&#xA;&#xA; second:  inventoryActivate($inventoryItemId: ID!, $locationId: ID!, $available: Int) {&#xA;  inventoryActivate(inventoryItemId: $inventoryItemId, locationId: $locationId, available: $available) {&#xA;    inventoryLevel {&#xA;      id&#xA;      available&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;}&#xA;    &#xA;</code></pre>&#xA;<p>Variables:</p>&#xA;<pre><code>{&#xA;&quot;inventoryItemId&quot;: &quot;gid://shopify/InventoryItem/XXXXXXXXXXX&quot;,&#xA;&quot;locationId&quot;: &quot;gid://shopify/Location/XXXXXXXXXX&quot;,&#xA;&quot;available&quot;: 11 ,&#xA;  &quot;input&quot;: {&#xA;    &quot;id&quot;: &quot;gid://shopify/ProductVariant/XXXXXXXXX&quot;,&#xA;    &quot;price&quot;: 55&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Error i keep getting:</p>&#xA;<pre><code>{&#xA;    &quot;errors&quot;: [&#xA;        {&#xA;            &quot;message&quot;: &quot;Parse error on \&quot;$\&quot; (VAR_SIGN) at [29, 29]&quot;,&#xA;            &quot;locations&quot;: [&#xA;                {&#xA;                    &quot;line&quot;: 29,&#xA;                    &quot;column&quot;: 29&#xA;                }&#xA;            ]&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;",4605812,,,,2020-06-29 10:55:26,Using multiple mutations in one call,<graphql><shopify>,1,0,0,2020-06-29 10:30:36
62636473,2,,62636193,7,,"<p>The way that you'd go about this is by specifying all your arguments at the root of your <code>mutation</code>, just like you did for <code>ProductVariantInput</code>:</p>&#xA;<pre><code>mutation batchProductUpdates(&#xA;  $input: ProductVariantInput!&#xA;  $inventoryItemId: ID!&#xA;  $locationId: ID!&#xA;  $available: Int&#xA;) {&#xA;  &#xA;  productVariantUpdate(input: $input) {&#xA;    product { id }&#xA;    productVariant { id price }&#xA;    ...&#xA;  }&#xA;  &#xA;  inventoryActivate(&#xA;    inventoryItemId: $inventoryItemId&#xA;    locationId: $locationId&#xA;    available: $available&#xA;  ) {&#xA;    inventoryLevel { id available }&#xA;    ...&#xA;  }&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>Here's an example how this would work if you were to use <code>fetch</code> in <code>JavaScript</code>:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>fetch(&quot;https://example.com/graphql&quot;, {&#xA;  method: &quot;POST&quot;,&#xA;  headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#xA;  body: JSON.stringify({&#xA;    query: `&#xA;      mutation MyMutation($firstId: Int, $secondId: Int) {&#xA;        m1: ToggleLike(id: $firstId) {&#xA;          id&#xA;        }&#xA;        m2: ToggleLike(id: $secondId) {&#xA;          id&#xA;        }&#xA;      }&#xA;    `,&#xA;    variables: {&#xA;      firstId: 1,&#xA;      secondId: 2&#xA;    }&#xA;  })&#xA;})&#xA;</code></pre>&#xA;<p>Hope this helps.</p>&#xA;",5862900,,5862900,2020-06-29 10:55:26,2020-06-29 10:55:26,"",,0,4,0,2020-06-29 10:49:22
62685267,1,,,0,839,"<p>I got this error to fetch orders with '@shopify/koa-shopify-auth'.</p>&#xA;<p>[GraphQL error: access denied]</p>&#xA;<p>The query is like this.</p>&#xA;<pre><code>query {&#xA;  orders(first:2) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I set below scopes.</p>&#xA;<pre><code>  server.use(&#xA;    createShopifyAuth({&#xA;      apiKey: SHOPIFY_API_KEY,&#xA;      secret: SHOPIFY_API_SECRET_KEY,&#xA;      scopes: [&#xA;        'read_products','write_products',&#xA;        'read_orders', 'write_orders', 'read_all_orders',&#xA;        'read_script_tags', 'write_script_tags'&#xA;      ],&#xA;      afterAuth(ctx) {&#xA;        const { shop, accessToken } = ctx.session;&#xA;        ctx.cookies.set('shopOrigin', shop, {&#xA;          httpOnly: false,&#xA;          secure: true,&#xA;          sameSite: 'none'&#xA;        });&#xA;        ctx.redirect('/');&#xA;      },&#xA;    }),&#xA;  );&#xA;</code></pre>&#xA;<p>Whereas I could get product info. In addition, I could get order information via GraphiQL App.</p>&#xA;<p>I researched the problem, I couldn't get any clues. Do you have the same problem?</p>&#xA;",5008823,,,,2020-07-02 19:18:49,GraphQL error: access denied for Orders on Shopify,<node.js><reactjs><api><graphql><shopify>,1,0,0,2020-07-01 21:01:34
62686702,1,63810796,,2,604,"<p>I have a query:</p>&#xA;<pre><code>query {&#xA; productByHandle(handle: &quot;${productHandle}&quot;) {&#xA;   variants(first: 3) {&#xA;     edges {&#xA;       node {&#xA;         title&#xA;         id&#xA;         priceV2 {&#xA;           amount&#xA;         }&#xA;         image {&#xA;           transformedSrc(maxWidth: 400)&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Which works great. However, I'm struggling to find the syntax to get <strong>multiple transformedSrcs</strong> from the variant image. I want to use this for an image srcset, so I'll need to have multiple sizes returned.</p>&#xA;<p>I'm new to GraphQL in general. I tried an array on the image, using an <code>AND</code> with multiple maxWidth and scale, duplicating the image piece, etc. I've also searched the Shopify API docs many times.</p>&#xA;<p>Is this just not possible for some reason, or am I missing something?</p>&#xA;",9248963,,,,2020-09-09 11:34:11,Get multiple transformedSrc from a variant image,<graphql><shopify><shopify-api>,1,0,0,2020-07-01 23:22:32
62690405,1,,,1,1470,"<p>In our app, we are displaying the list of collections from the shopify store. When user click on any of collection, it will redirect to product list, where all the products of that clicked collection will be displayed.</p>&#xA;<p>Here is the sample query which I used to get the products list of particular collection :</p>&#xA;<pre><code>{&#xA;  collectionByHandle(handle: &quot;&quot;) {&#xA;    products(first: 10) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          title&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Now, I want filtering on products list. I want to display products base on product_type. But there is no any option to filter the products.</p>&#xA;<p><code>query</code> option only available when you retrieve simple products listing using this query :</p>&#xA;<pre><code>{&#xA;  products(query: &quot;product_type:casual-things&quot;, first: 10) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        title&#xA;        productType&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But, this <code>query</code> option not available on <code>products</code> node of <code>collectionByHandle</code>.</p>&#xA;<p>Can, anyone help me how to implement filter option using Shopify storefront graphQL api in <code>collectionByHandle</code> query ?</p>&#xA;",8182248,,,,2021-11-15 11:04:13,"How to filter the products based on product_type, that are retrieved using collectionByHandle in shopify storefront graphQL api?",<graphql><shopify><shopify-api><shopify-api-node>,1,2,0,2020-07-02 06:39:15
62701006,2,,62700164,1,,"<p>At the beginning ... method for passing parameters/values used in queries (as variables) ... you should pass them (values) to variables in your &quot;looping&quot; query:</p>&#xA;<pre><code>let myLoopingSkip = 0; // starting skip&#xA;&#xA;// Create shop pages&#xA;const products = await graphql(`&#xA;  query allShopifyProduct($skip: Int!, $limit: Int!) {&#xA;    allShopifyProduct(sort: { fields: [createdAt], order: DESC }&#xA;      skip: $skip&#xA;      limit: $limit&#xA;    ) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          title&#xA;          handle&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`,  { skip: myLoopingSkip, limit: 5 } ); // variables used in query&#xA;</code></pre>&#xA;<p>Then you can build a &quot;outer&quot; loop over entire (query+createPages for paginated list and single products) block passing current <code>myLoopingSkip</code> value to query variable <code>skip</code>.</p>&#xA;<p><strong>Two looping scenarios possible</strong>:</p>&#xA;<ul>&#xA;<li>query for all products (all data) at once;</li>&#xA;<li>query only for data segments (5-items recordsets/chunks) required for current iteration.</li>&#xA;</ul>&#xA;<p><strong>1st option is easy but can be resource hungry on big datasets</strong>, it can just crash at some moment.</p>&#xA;<p>2nd (IMHO better) option is much more reliable but needs additional/separate query for <code>numPages</code> (amount of all products) before looping. It is also required for conditional <code>next page</code>.</p>&#xA;<p>In real life it's unusual to browse after 10 page ... in practice even google stops showing results after some page limit ... but product page must be linked somwhere to be accessible/crawled - IMHO it's better to have shorter paginated listings by category.</p>&#xA;<p>If you don't really need <code>numPages</code> you can simply keep looping by adding 5 (your 'limit'/<code>postsPerPage</code>) as long as queried data (result) contains 5 records. In this case &quot;outer loop&quot; can look like:</p>&#xA;<pre><code>const postsPerPage = 5;&#xA;let myLoopingSkip = 0; // starting skip&#xA;do {&#xA;  // read only data you need in current iteration&#xA;  let products = await graphql(PAGINATED_PRODUCTS_QUERY, &#xA;    { skip: myLoopingSkip, limit: postsPerPage } );&#xA;&#xA;  // paginated list&#xA;  createPage({&#xA;    path: withPrefix(pageNumber),&#xA;    component: shop,&#xA;    context: {&#xA;      limit: postsPerPage,&#xA;      skip: i * postsPerPage,&#xA;    ...      &#xA;  // but you can just pass fetched data&#xA;  // as is done for product page&#xA;  // no need for query inside component&#xA;  // just loop over `data` prop to create grid view&#xA;  //&#xA;  // createPage({&#xA;  //   path: withPrefix(pageNumber),&#xA;  //   component: shop,&#xA;  //   context: {&#xA;  //     data: products.data.allShopifyProduct.edges,&#xA;&#xA;  // loop for single products pages&#xA;  products.data.allShopifyProduct.edges.map( (node) =&gt; {&#xA;    createPage({&#xA;    path: `/product/${node.handle}/`,&#xA;    component: productPageTemplate,&#xA;    context: {&#xA;      // Data passed to context is available&#xA;      // in page queries as GraphQL variables.&#xA;      handle: node.handle,&#xA;      // ... but we already have all data here &#xA;      // ... again, no query needed&#xA;      // data: node&#xA;    }&#xA;  });&#xA;&#xA;  myLoopingSkip += postsPerPage;&#xA;} while( products.data.allShopifyProduct.edges.length===postsPerPage )&#xA;// or use total page condition&#xA;</code></pre>&#xA;",6124657,,6124657,2020-07-03 09:23:49,2020-07-03 09:23:49,"",,0,0,0,2020-07-02 16:30:51
62720651,1,,,0,169,"<p>parent container component query</p>&#xA;<pre class=""lang-js prettyprint-override""><code>query Product($channelProductNo: Int!, $brandUrl: String!) {&#xA;  channelProduct(channelProductNo: $channelProductNo) {&#xA;    productImages {&#xA;      url&#xA;      imageType&#xA;      width&#xA;      height&#xA;    }&#xA;  }&#xA;  gnbWidget(brandUrl: $brandUrl) {&#xA;    ...commonWidgetField&#xA;    ... on GnbWidget {&#xA;      gnbType&#xA;      nameType&#xA;&#xA;      logo {&#xA;        ...imageField&#xA;      }&#xA;      expansionTypeLogo {&#xA;        ...imageField&#xA;      }&#xA;      textColor&#xA;    }&#xA;    isCorvered&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>child component query</p>&#xA;<pre class=""lang-js prettyprint-override""><code>query LikedProduct($channelProductNo: Int!) {&#xA;  channelProduct(channelProductNo: $channelProductNo) {&#xA;    productImages {&#xA;      url&#xA;      imageType&#xA;      width&#xA;      height&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>The channel Product of the Product query, It is the same as the channel product of the Liked Product query.</p>&#xA;<p>The product query depends on the channel product query.</p>&#xA;<p>If I modify the LikedProduct query, I want to use the Product query to be modified the same.</p>&#xA;<p>like this</p>&#xA;<pre class=""lang-js prettyprint-override""><code>query ChannelProduct($channelProductNo: Int! $url: String) {&#xA;  channelProduct(channelProductNo: $channelProductNo, url:$url) {&#xA;    productImages {&#xA;      url&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>query Product($channelProductNo: Int!, $brandUrl: String!) {&#xA;  channelProduct(channelProductNo: $channelProductNo, url: $url) {&#xA;    productImages {&#xA;      url&#xA;    }&#xA;  }&#xA;  gnbWidget(brandUrl: $brandUrl) {&#xA;    ...commonWidgetField&#xA;    ... on GnbWidget {&#xA;      gnbType&#xA;      nameType&#xA;&#xA;      logo {&#xA;        ...imageField&#xA;      }&#xA;      expansionTypeLogo {&#xA;        ...imageField&#xA;      }&#xA;      textColor&#xA;    }&#xA;    isCorvered&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>Is there a way to manage each one at a time without modification?</p>&#xA;",6671272,,,,2020-07-03 18:06:42,GraphQL Query merge,<graphql><apollo><apollo-client><apollo-server>,0,3,0,2020-07-03 18:06:42
62725958,1,62728460,,0,39,"<p>I try this type of mutation but I didn't get a proper response please help me to solve that.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>mutation: new GraphQLObjectType({&#xA;  name: &quot;Mutation&quot;,&#xA;  fields: {&#xA;    createProduct: {&#xA;      type: new GraphQLNonNull(productType),&#xA;      args: {&#xA;        products: { type: new GraphQLNonNull(productInput) }&#xA;      },&#xA;      resolve: (_, products) =&gt; {&#xA;        let pro = products;&#xA;        console.log(&quot;pro&quot;, pro);&#xA;&#xA;        return products.push(pro);&#xA;      }&#xA;    }&#xA;  }&#xA;});&#xA;</code></pre>&#xA;",6891469,,9856853,2020-07-04 06:50:45,2020-07-04 11:19:59,I have an issues with mutation query in graphql javascript,<javascript><graphql>,1,1,0,2020-07-04 06:15:22
62728460,2,,62725958,1,,"<p>You probably want to keep the products in memory inside of an array of products. There are two things wrong in your code. First, the second argument of the resolver returns an object of arguments because a field can have multiple arguments. You can either destructure the arguments or use the normal object access syntax. Second, <code>Array.prototype.push</code> <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push"" rel=""nofollow noreferrer"">returns the new lenght of the array</a>. Therefore, you can't return the result of this call (your product type most likely expects a product as a root value). Return <code>product</code> instead. Also you are pushing into the argument. Maybe you have a name conflict there. I would recommend to use singular for arguments and variables that are not arrays, lists, or sets.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>let products = [];&#xA;&#xA;const schema = new GraphQLSchema({&#xA;  query: _,&#xA;  mutation: new GraphQLObjectType({&#xA;    name: &quot;Mutation&quot;,&#xA;    fields: {&#xA;      createProduct: {&#xA;        type: new GraphQLNonNull(productType),&#xA;        args: {&#xA;          product: { type: new GraphQLNonNull(productInput) }&#xA;        },&#xA;        resolve: (_, args) =&gt; {&#xA;          console.log(&quot;pro&quot;, args.product);&#xA;&#xA;          products.push(args.product);&#xA;          return args.product;&#xA;        }&#xA;      }&#xA;    }&#xA;  }),&#xA;});&#xA;</code></pre>&#xA;",3849167,,,,2020-07-04 11:19:59,"",,0,1,0,2020-07-04 11:19:59
62734918,1,,,-2,350,"<p><a href=""https://i.stack.imgur.com/AZipr.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AZipr.png"" alt=""enter image description here"" /></a></p>&#xA;<p>I want to  render totalCount on VueJs</p>&#xA;<p>Here is my Grapql Api</p>&#xA;<pre><code>query{&#xA;  allStudents{&#xA;    totalCount&#xA;    edges{&#xA;      node{&#xA;        id&#xA;        lastName&#xA;        email&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Here is sample HTML Code</p>&#xA;<pre><code>  &lt;div&gt;&#xA;                &lt;p class=&quot;card-text text-right&quot;&gt;Total Students&lt;/p&gt;&#xA;                &lt;div class=&quot;fluid-container&quot;&gt;&#xA;                  &lt;h3 class=&quot;card-title font-weight-bold text-right mb-0&quot; v-for=&quot;(value, totalCount) in Objects&quot;&gt; {{totalCount}}: {{value}} &lt;/h3&gt;&#xA;                &lt;/div&gt;&#xA;              &lt;/div&gt;&#xA;            &lt;/div&gt;&#xA;</code></pre>&#xA;",10231419,,10231419,2020-07-04 22:44:04,2020-07-06 13:33:45,Vuesjs Getting v-for length of an Array,<vue.js><graphql>,2,0,0,2020-07-04 22:05:49
62735016,2,,62734918,0,,"<p>That property is accessible in vue via <code>this.directory.totalCount</code> and in the html as <code>{{this.directory.totalCount}}</code>.</p>&#xA;<pre class=""lang-html prettyprint-override""><code>&lt;div&gt;&#xA;    &lt;p class=&quot;card-text text-right&quot;&gt;Total Students&lt;/p&gt;&#xA;    &lt;div class=&quot;fluid-container&quot;&gt;&#xA;        &lt;h3 class=&quot;card-title font-weight-bold text-right mb-0&quot;&#xA;           v-for=&quot;(value, totalCount) in Objects&quot;&gt; &#xA;             {{directory.totalCount}}: {{value}}&#xA;        &lt;/h3&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;</code></pre>&#xA;",5091874,,5091874,2020-07-06 13:33:45,2020-07-06 13:33:45,"",,0,0,0,2020-07-04 22:21:20
62749130,2,,62590497,2,,"<p>I personally tried to use <a href=""https://github.com/kateile/artemis"" rel=""nofollow noreferrer"">Artemis</a> or hoped <a href=""https://www.apollographql.com/docs/"" rel=""nofollow noreferrer"">Apollo</a> was branching out, but <a href=""https://stackoverflow.com/users/10336633/ryosuke"">@Ryosuke</a>'s <a href=""https://pub.dev/packages/graphql_to_dart"" rel=""nofollow noreferrer"">graphql_to_dart</a> is straight forward and lean.</p>&#xA;<p>If you already have a GraphQL endpoint with your schema up and running, you just need to set up its <code>graphql_config.yaml</code> for example like this:</p>&#xA;<pre><code>package_name: example&#xA;graphql_endpoint: http://example.com/graphql&#xA;models_directory_path: lib/graphql/models/&#xA;</code></pre>&#xA;<h3>Given schema definition</h3>&#xA;<pre><code>type Person {&#xA;    age: Int&#xA;    name: String!&#xA;}&#xA;</code></pre>&#xA;<h3>.dart Output</h3>&#xA;<pre><code>class Person{&#xA;  int age;&#xA;  String name;&#xA;  Person({&#xA;    this.age,this.name&#xA;  });&#xA;&#xA;  Person.fromJson(Map&lt;String, dynamic&gt; json){&#xA;    age = json['age'];&#xA;    name = json['name'];&#xA;  }&#xA;&#xA;  Map toJson(){&#xA;    Map _data = {};&#xA;    _data['age'] = age;&#xA;    _data['name'] = name;&#xA;    return _data;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>With the additional option <code>type_override</code> you can set custom scalar types as you prefer them.</p>&#xA;<p>Edit:</p>&#xA;<p>There is now an <a href=""https://github.com/hermann-w/graphql_to_dart/tree/1-no-dynamic-import-paths-option"" rel=""nofollow noreferrer"">expanded version</a> as <a href=""https://github.com/vikram25897/graphql_to_dart/pull/2"" rel=""nofollow noreferrer"">PR</a>.&#xA;With the possibility to generate them outside of <code>lib/</code> without import path conflicts, through an opt-out option <code>dynamic_import_path: false</code>.</p>&#xA;<p>The <code>type_override</code> keys also don't need to be explicitly written in lower case anymore.</p>&#xA;",13838718,,13838718,2020-07-14 09:27:07,2020-07-14 09:27:07,"",,0,0,0,2020-07-06 04:12:52
62765178,1,62772930,,9,1810,"<p>I am using Gatsby + GraphQL + Shopify. I am having an issue retrieving my orders by the last 10.</p>&#xA;<p>My query looks like this:</p>&#xA;<pre><code>query {&#xA;   customer(customerAccessToken: &quot;${customerAccessToken}&quot;) {&#xA;      orders(last: 10) {...}&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>And it returns this:</p>&#xA;<blockquote>&#xA;<p>&quot;message&quot;: &quot;using last without before is not supported&quot;</p>&#xA;</blockquote>&#xA;<p>I noticed this issue happening to some other devs: <a href=""https://community.shopify.com/c/Shopify-Discussion/How-to-get-customer-s-orders-and-sort-by-date-in-descending/m-p/629133/highlight/false#M151241"" rel=""noreferrer"">https://community.shopify.com/c/Shopify-Discussion/How-to-get-customer-s-orders-and-sort-by-date-in-descending/m-p/629133/highlight/false#M151241</a></p>&#xA;<p>If you check the docs it says nothing about using <code>before</code> with <code>last</code>:&#xA;<a href=""https://shopify.dev/docs/admin-api/graphql/reference/object/order?api%5Bversion%5D=2020-07"" rel=""noreferrer"">https://shopify.dev/docs/admin-api/graphql/reference/object/order?api[version]=2020-07</a></p>&#xA;<p>There is a playground at the bottom where you can test queries.</p>&#xA;<p>Anybody else has seen this issue before?</p>&#xA;",4371033,,,,2021-09-14 21:14:34,"Graphql error: ""using last without before is not supported""",<javascript><ecmascript-6><graphql><shopify>,1,0,0,2020-07-06 22:02:10
62781635,2,,62779854,5,,"<p>You must use the flowing syntax:</p>&#xA;<pre><code>{&#xA;  products(first:10, query:&quot;tag:tag1 OR tag:tag2 OR tag:tag3&quot;){&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        tags&#xA;        title&#xA;        onlineStoreUrl&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Where you can use <code>OR</code> or <code>AND</code> if you like for all of the tags to be included or any of the listed.</p>&#xA;<p>Install the <a href=""https://www.electronjs.org/apps/graphiql"" rel=""noreferrer"">GraphiQL App</a> and test the queries before implementing them, it helps a lot in the development process.</p>&#xA;<p>More about the Search Query for GraphQL can be seen here: <a href=""https://shopify.dev/concepts/about-apis/search-syntax"" rel=""noreferrer"">https://shopify.dev/concepts/about-apis/search-syntax</a></p>&#xA;",2329464,,,,2020-07-07 18:23:35,"",,0,3,0,2020-07-07 18:23:35
62806305,1,62884508,,0,211,"<p>I am trying to group by products in my sales collection and add their totals to know which are the best selling products of my app.</p>&#xA;<p><strong>MONGOOSE MODEL</strong></p>&#xA;<pre><code>const mongoose = require('mongoose');&#xA;</code></pre>&#xA;<p>const DHCustomerinvoiceSchema = mongoose.Schema({</p>&#xA;<pre><code>    Saledetail: {&#xA;        type: Array,&#xA;        required: true&#xA;    }, &#xA;    date:{&#xA;       type: Date,&#xA;       required: true     &#xA;   },&#xA;   total:{&#xA;        type: Number,&#xA;        required: true  &#xA;   },&#xA;   pay:{&#xA;    type: Number,&#xA;    required: true,&#xA;    default: 0 &#xA;   },&#xA;   topay:{&#xA;     type: Number,&#xA;     required: true &#xA;   },&#xA;   user:{&#xA;    type: mongoose.Schema.Types.ObjectId,&#xA;    required: true,&#xA;    ref: 'UserDH'&#xA;   },&#xA;   customer:{&#xA;       type: mongoose.Schema.Types.ObjectId,&#xA;       required: true,&#xA;       ref: 'DHcontacto'&#xA;   },&#xA;   state:{&#xA;       type: String,&#xA;       default: &quot;OWED&quot;  &#xA;   },&#xA;   created:{&#xA;    type: Date,&#xA;    default: Date.now()&#xA;   },&#xA;&#xA;&#xA;});&#xA;&#xA;module.exports = mongoose.model('DHCustomerinvoice', DHCustomerinvoiceSchema);&#xA;</code></pre>&#xA;<p><strong>COLLECTION EXAMPLE</strong></p>&#xA;<pre><code>{&#xA;    &quot;id&quot;: &quot;5ef6*****&quot;,&#xA;    &quot;Saledetail&quot;: [&#xA;      {&#xA;        &quot;id&quot;: &quot;5ebf*****&quot;,&#xA;        &quot;quantity&quot;: 9,&#xA;        &quot;price&quot;: 2000,&#xA;        &quot;totalline&quot;: 18000&#xA;      }&#xA;    ],&#xA;    &quot;datesale&quot;: &quot;1593129600000&quot;,&#xA;    &quot;grandtotal&quot;: 18000,&#xA;    &quot;user&quot;: &quot;5eb9ab******&quot;,&#xA;    &quot;customer&quot;: {&#xA;      &quot;name&quot;: &quot;isabella&quot;&#xA;    },&#xA;    &quot;state&quot;: &quot;PAID&quot;&#xA;  },&#xA;</code></pre>&#xA;<p><strong>RESOLVER:</strong></p>&#xA;<pre><code>mostSellingProducts: async (_,{},ctx)=&gt;{   &#xA;    &#xA;                const Products = await invoice.aggregate([&#xA;                     { $unwind: &quot;$Saledetail&quot; },&#xA;                     { $match: { &quot;state&quot; : 'PAID'}},&#xA;                     { $group: {&#xA;                        _id : &quot;$Saledetail.id&quot;,&#xA;                        total: { $sum: '$Saledetail.totalline' }&#xA;                    }},&#xA;                    {&#xA;                        $lookup: {&#xA;                            from: 'dhproducts',&#xA;                            localField: '_id',&#xA;                            foreignField: &quot;_id&quot;,&#xA;                            as: &quot;producto&quot; &#xA;                        }&#xA;                    },&#xA;                    {&#xA;                        $limit: 4&#xA;                    },&#xA;                    {&#xA;                        $sort : {total: -1}&#xA;                    }&#xA;                    ]);&#xA;                console.log(Products);&#xA;                return Products;&#xA;   },&#xA;</code></pre>&#xA;<p>I have used many methods that actually did not give me this result, but nevertheless I have achieved a positive result in terms of finding my best clients who actually develop it with aggregate, match and group also apply sort and limit ...&#xA;but with this example I have not been able to achieve success, and I imagine that it is because the architecture of the collection is distinguished due to the arrangement of the purchase detail</p>&#xA;",5619071,,5619071,2020-07-12 16:01:10,2020-07-13 21:24:26,how to use mongoose aggregate to search an array within a collection,<node.js><mongodb><mongoose><graphql><aggregate>,2,2,0,2020-07-09 02:10:16
62820004,1,62872115,,1,1288,"<p>Nuxt.js full static (2.13) doesn't support apollo's smart queries, so I am going to use asyncData instead.</p>&#xA;<p>I have something like:</p>&#xA;<pre><code>import homeQuery from '~/apollo/queries/home'&#xA;&#xA;export default {&#xA;  asyncData(context) {&#xA;    let client = context.app.apolloProvider.defaultClient;&#xA;    client&#xA;      .query({&#xA;        query: homeQuery&#xA;      })&#xA;      .then(({ data }) =&gt; {&#xA;        return { data }&#xA;      })&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I expect to be able to use <code>{{ data }}</code> in my template. However, I get the following error:</p>&#xA;<blockquote>&#xA;<p>ERROR  [Vue warn]: Property or method &quot;data&quot; is not defined on the&#xA;instance but referenced during render. Make sure that this property is&#xA;reactive, either in the data option, or for class-based components, by&#xA;initializing the property. See:&#xA;<a href=""https://v2.vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties"" rel=""nofollow noreferrer"">https://v2.vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties</a>.</p>&#xA;</blockquote>&#xA;<p>What is that I am doing wrong?</p>&#xA;",4239029,,6277151,2022-07-14 06:17:17,2022-07-14 06:17:17,Apollo asyncData in Nuxt.js returns error,<nuxt.js><apollo><asyncdata>,1,0,0,2020-07-09 17:02:30
62837249,1,,,0,504,"<p>I am using Apollo Server, Graphql and Mongoose on my server and React on frontend. When I query &quot;createdAt&quot; in React I get a date with this format &quot;1594321836292&quot;. I have found nothing to properly format this. Please help!</p>&#xA;",4526137,,,,2020-07-13 10:57:02,"How to format date ""1594321836292"" in React and Graphql",<reactjs><mongodb><mongoose><apollo-client><apollo-server>,1,0,0,2020-07-10 15:11:42
62891665,1,,,0,591,"<p>I need type Int or NaN, how can i make it?</p>&#xA;<pre><code>union IntOrNaN = Int | NaN //Error&#xA;&#xA;type house {&#xA; address: String&#xA; aprt: IntOrNaN&#xA;}&#xA;</code></pre>&#xA;<p>I tried unions but there isn't NaN type in GraphQl types</p>&#xA;",10869852,,,,2020-07-14 09:08:14,NaN type in GraphQL,<javascript><graphql><apollo>,0,7,0,2020-07-14 09:08:14
62903036,2,,62833558,1,,"<p>I am new to GRANDstack, and I have also been struggling with these types of issues myself. I have typically broken this out separate mutations (in javascript) and used the return value for each as values for the next mutation. for example:</p>&#xA;<pre><code>await createIncident({&#xA;  variables: {&#xA;    brief: values.brief,&#xA;    date,&#xA;    description: values.description,&#xA;    recordable: values.recordable,&#xA;    title: values.title&#xA;  }&#xA;}).then((res) =&gt; {&#xA;  addIncidentUser({&#xA;    variables: {&#xA;      from: user.id,&#xA;      to: res.data.CreateIncident.id&#xA;    }&#xA;  });&#xA;});&#xA;</code></pre>&#xA;<p>the problem that i see in the example you've provided is that you are specifying a string value for from and to as &quot;p&quot; and &quot;b&quot; respectively and NOT the p.id and b.id return values from the parent mutations.</p>&#xA;<p>it's fine of me to point that out but what i can't for the LIFE of me figure out is how to properly reference p.id and b.id in the mutation itself. in other words you are trying to send</p>&#xA;<pre><code>from: { id: &quot;586b63fd-f9a5-4274-890f-26ba567c065c&quot;}&#xA;to: { id: &quot;a46b4c22-d23b-4630-ac84-9d6248bdda89&quot; } &#xA;</code></pre>&#xA;<p>but in reality you are sending</p>&#xA;<pre><code>from: { id: &quot;p&quot;}&#xA;to: { id: &quot;b&quot; } &#xA;</code></pre>&#xA;<p>which aren't actually references in neo4j so it fails.</p>&#xA;<p>if we can figure out how to properly reference p.id and b.id we should get this working.</p>&#xA;",1257593,,,,2020-07-14 19:53:15,"",,0,0,0,2020-07-14 19:53:15
62903980,2,,50483556,0,,"<p>I faced the same problem, after doing a lot of search, none of answers suited me. I didn't want to lift up the state, I wanted to maintain the query logic inside the same component, also re-fetching from another component was a bad idea, since the variables passed to the query are not the same and Apollo interprets it as another query and the first component don't change.</p>&#xA;<p>So my solution is to save the &quot;filtering variable&quot; in the local state with Apollo. This code is an example just for this answer, I didn't test it, just copied from my project and keep out only the necessary for the explanation.</p>&#xA;<p><strong>In some place you need to initialise your apollo cache</strong></p>&#xA;<pre><code>const data = {&#xA;  keyword: &quot;&quot;,&#xA;};&#xA;&#xA;cache.writeData({ data });&#xA;&#xA;return ApolloClient({&#xA;  cache,&#xA;});&#xA;</code></pre>&#xA;<p><strong>In the first component, you will query this &quot;keyword&quot; variable from the cache and pass it to the actual query you want to re-fetch every time</strong></p>&#xA;<pre><code> const GET_KEYWORD = gql`&#xA;   {&#xA;     keyword @client&#xA;   }&#xA; `;&#xA;&#xA;const FirstComponent = () =&gt; {&#xA;  const {&#xA;    data: { keyword },&#xA;  } = useQuery(GET_KEYWORD);&#xA;&#xA;  const {&#xA;    data: importantData&#xA;  } = useQuery(SOME_OTHER_QUERY_YOU_WANT_TO_REFETCH, {variables: { keyword }});&#xA;&#xA;  return &lt;div&gt;{importantData}&lt;/div&gt;&#xA;}&#xA;</code></pre>&#xA;<p><strong>In the second component you just need to update this &quot;keyword&quot;</strong></p>&#xA;<pre><code>const SecondComponent = () =&gt; {&#xA;  const client = useApolloClient();&#xA;&#xA;  const handleChange = (keyword: string) =&gt; {&#xA;    client.writeData({ data: { keyword: keyword } });&#xA;  };&#xA;&#xA;  return (&#xA;    &lt;div&gt;&#xA;      &lt;input onChange={handleChange} /&gt;&#xA;    &lt;/div&gt;&#xA;  );&#xA;};&#xA;&#xA;  &#xA;</code></pre>&#xA;",6045698,,,,2020-07-14 21:04:39,"",,0,0,0,2020-07-14 21:04:39
62915611,1,62916002,,1,125,"<p>Just learning GraphQL, I have this query:</p>&#xA;<pre><code>query OrganizationForFacebook($organization: String!, $repository: String!) {&#xA;  organization(login: $organization) {&#xA;    name&#xA;    url&#xA;    repository(name: $repository) {&#xA;      name&#xA;      forkCount @include(if: $withFork)&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and I have defined my variables as such:</p>&#xA;<pre><code>{&#xA;  &quot;organization&quot; : &quot;the-road-to-learn-react&quot;,&#xA;  &quot;repository&quot; :&quot;the-road-to-learn-react-chinese&quot;,&#xA;  &quot;withFork&quot; : true&#xA;}&#xA;</code></pre>&#xA;<p>The problem is on &quot;withFork&quot; saying</p>&#xA;<blockquote>&#xA;<p>&quot;&quot;message&quot;: &quot;Variable $withFork is used by OrganizationForFacebook but&#xA;not declared&quot;</p>&#xA;</blockquote>&#xA;<p>But haven't I declared it right there? What is the problem then?</p>&#xA;",13830264,,,,2020-07-15 13:28:42,Variable is defined but GraphQL cannot find it,<graphql>,1,0,0,2020-07-15 13:07:30
62922663,1,,,0,120,"<p>For example, lets say that I make a call to graphQL as follows:</p>&#xA;<pre><code>query {&#xA;          product {&#xA;            title&#xA;            description&#xA;            price&#xA;            path&#xA;          }&#xA;        }&#xA;</code></pre>&#xA;<p>This call returns back to me an array with 10 items but I only want 5 at random.  I currently have it setup to get the 10 then grab 5 randomly but I feel as GraphQL is still working too hard and if I had say 1000 items returned I would not need 995 of them.</p>&#xA;<p>I have seen queries like:</p>&#xA;<pre><code>        query {&#xA;          product(limit:5) {&#xA;            title&#xA;            description&#xA;            price&#xA;            path&#xA;          }&#xA;        }&#xA;</code></pre>&#xA;<p>which would make it so only 5 items are returned no matter what.  My question is, is this handled within the resolver?</p>&#xA;<p>The way my resolver current looks is:</p>&#xA;<pre><code>product: async () =&gt; {&#xA;    try {&#xA;    const products = await Product.find()&#xA;&#xA;      return products.map(product =&gt; {&#xA;        return transformProduct(product);&#xA;      })&#xA;    } catch (err) {&#xA;      throw err;&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>Would it be correct to do something like:</p>&#xA;<pre><code>product: async ({limit}) =&gt; {&#xA;    try {&#xA;    let products = await Product.find()&#xA;      if(limit) {&#xA;        products = getRandom(products, limit)&#xA;      }&#xA;&#xA;      return products.map(product =&gt; {&#xA;        return transformProduct(product);&#xA;      })&#xA;    } catch (err) {&#xA;      throw err;&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>I have now tested that this works, but I am concerned that GraphQL is still retrieving more data than it needs to be. Is this how apollo handles its &quot;first&quot; and &quot;skip&quot; variables or is it more efficient?</p>&#xA;",8319793,,,,2020-07-15 23:22:51,What is the correct way to filter GraphQL queries?,<reactjs><graphql>,1,3,0,2020-07-15 19:43:12
62923490,2,,58996947,-1,,"<p>Ran into a similar issue. The problem for me was too many records being returned by a specific query.</p>&#xA;<p>I had about 4,000 mocked results being returned as an array and tests took about 4 - 5 seconds to complete. Now returning 10 results, they are down to about 75ms.</p>&#xA;<p>Something that helped me narrow this down was profiling one test using Chrome's remote debugging feature for Node. Kent C Dodds did a quick video on it which helped me: <a href=""https://www.youtube.com/watch?v=RB2g-o39upo"" rel=""nofollow noreferrer"">https://www.youtube.com/watch?v=RB2g-o39upo</a></p>&#xA;",5564887,,,,2020-07-15 20:45:21,"",,0,0,0,2020-07-15 20:45:21
62937000,2,,62936771,1,,"<p>You need to add the constraint object inside the nested data as well.&#xA;Something like:</p>&#xA;<pre><code>MyMutation {&#xA;  insert_Users(objects: [{isVerified: false, name: &quot;+9100000000&quot;, type: &quot;customer&quot;, &#xA;    Customers: {&#xA;       data: {deviceToken: &quot;TestToken001&quot;}, &#xA;       on_conflict: {&#xA;            constraint: Customers_pkey,&#xA;            update_columns: [deviceToken]&#xA;          }         &#xA;     }}],&#xA;      on_conflict: {&#xA;            constraint: Users_name_key,&#xA;            update_columns: [isVerified]&#xA;          }) {&#xA;    affected_rows&#xA;    returning {&#xA;      Customers{&#xA;        deviceToken&#xA;      }&#xA;  }&#xA;}&#xA;} &#xA;</code></pre>&#xA;",2297718,,,,2020-07-16 14:29:53,"",,0,0,0,2020-07-16 14:29:53
63007812,1,,,0,36,<p>hi I wanted to pass data from to another page using graphql and here is my code sample</p>&#xA;<pre><code>const getListQuery=gql`&#xA;{&#xA;    storelist{&#xA;        id&#xA;      storeName&#xA;      storeLogoUrl&#xA;      deliveryType&#xA;      storeDescription&#xA;    }&#xA;  }`&#xA;</code></pre>&#xA;<p>I want to pass the id of the storelist to the following query as store id&#xA;..</p>&#xA;<pre><code>const getListQuery = gql`&#xA;      {&#xA;       &#xA;    salesdepartments(storeid:&quot;5ef5cd9114a4659138eb8e11&quot;)&#xA;    {&#xA;      name&#xA;      id&#xA;     &#xA;      departmentProducts{&#xA;       productname&#xA;       images&#xA;       id&#xA;       price&#xA;     }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;,13967373,,9596853,2020-07-21 05:44:28,2020-07-21 05:44:28,how can i pass a data from graphql to another page?,<reactjs><graphql><client><apollo>,0,3,0,2020-07-21 05:12:02
63019991,2,,54517872,-1,,"<p>I was able to solve this issue by using the <code>@Context</code> decorator on each of my resolvers methods in order to grab the data sources. The full answer with an example <a href=""https://stackoverflow.com/a/63019901/7165574"">here</a>.</p>&#xA;",7165574,,,,2020-07-21 17:35:12,"",,0,0,0,2020-07-21 17:35:12
63022097,2,,63004452,1,,"<p>You can use or operator for this.</p>&#xA;<pre><code>YourModel.findAll({&#xA;  where: {&#xA;    [Op.or]: [&#xA;        {id: 5},&#xA;        {id: 2}&#xA;    ] // You can add all your array items here in this format dynamically.&#xA;  }&#xA;});&#xA;</code></pre>&#xA;",10530420,,,,2020-07-21 19:52:21,"",,0,0,0,2020-07-21 19:52:21
63044282,1,,,0,246,"<p>I want to make a refund manually tho, I got an error. The below image is GraphiQL at that time.</p>&#xA;<p>[Mutation]</p>&#xA;<pre><code>mutation refundCreate($input: RefundInput!) {&#xA;  refundCreate(input: $input) {&#xA;    order {&#xA;      id&#xA;    }&#xA;    refund {&#xA;      id&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<pre><code>{&#xA;  &quot;input&quot;: {&#xA;    &quot;orderId&quot;: &quot;gid://shopify/Order/2546480939164&quot;,&#xA;    &quot;transactions&quot;: {&#xA;      &quot;amount&quot;: 7,&#xA;      &quot;gateway&quot;: &quot;manual&quot;,&#xA;      &quot;kind&quot;: &quot;REFUND&quot;,&#xA;      &quot;orderId&quot;: &quot;gid://shopify/Order/2546480939164&quot;,&#xA;      &quot;parentId&quot;: &quot;gid://shopify/Order/2546480939164&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>[The error]</p>&#xA;<pre><code>{&#xA;{&#xA;  &quot;data&quot;: {&#xA;    &quot;refundCreate&quot;: null&#xA;  },&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;invalid id&quot;,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 2,&#xA;          &quot;column&quot;: 3&#xA;        }&#xA;      ],&#xA;      &quot;path&quot;: [&#xA;        &quot;refundCreate&quot;&#xA;      ]&#xA;    }&#xA;  ],&#xA;  &quot;extensions&quot;: {&#xA;    &quot;cost&quot;: {&#xA;      &quot;requestedQueryCost&quot;: 20,&#xA;      &quot;actualQueryCost&quot;: 0,&#xA;      &quot;throttleStatus&quot;: {&#xA;        &quot;maximumAvailable&quot;: 1000,&#xA;        &quot;currentlyAvailable&quot;: 1000,&#xA;        &quot;restoreRate&quot;: 50&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The below is Order information that I want to refund.</p>&#xA;<pre><code>        {&#xA;          &quot;node&quot;: {&#xA;            &quot;id&quot;: &quot;gid://shopify/Order/2546480939164&quot;,&#xA;            &quot;customer&quot;: {&#xA;              &quot;id&quot;: &quot;gid://shopify/Customer/3750294814876&quot;,&#xA;              &quot;firstName&quot;: &quot;Hiroshi&quot;,&#xA;              &quot;lastName&quot;: &quot;Ueda&quot;,&#xA;              &quot;phone&quot;: null&#xA;            },&#xA;            &quot;name&quot;: &quot;#1002&quot;,&#xA;            &quot;refunds&quot;: [],&#xA;            &quot;lineItems&quot;: {&#xA;              &quot;edges&quot;: [&#xA;                {&#xA;                  &quot;node&quot;: {&#xA;                    &quot;id&quot;: &quot;gid://shopify/LineItem/5637576818844&quot;,&#xA;                    &quot;sku&quot;: &quot;CK0102&quot;,&#xA;                    &quot;name&quot;: &quot;Chicken LEG Meat Skin-on&quot;,&#xA;                    &quot;quantity&quot;: 1,&#xA;                    &quot;refundableQuantity&quot;: 1,&#xA;                    &quot;requiresShipping&quot;: false,&#xA;                    &quot;image&quot;: {&#xA;                      &quot;id&quot;: &quot;gid://shopify/ImageSource/9771770806428&quot;,&#xA;                      &quot;originalSrc&quot;: &quot;https://cdn.shopify.com/s/files/1/0417/0262/1340/products/ChickenLegMeat_Skin-on.jpg?v=1593188882&quot;&#xA;                    },&#xA;                    &quot;product&quot;: null&#xA;                  }&#xA;                },&#xA;                {&#xA;                  &quot;node&quot;: {&#xA;                    &quot;id&quot;: &quot;gid://shopify/LineItem/5637576851612&quot;,&#xA;                    &quot;sku&quot;: &quot;CK0101&quot;,&#xA;                    &quot;name&quot;: &quot;Chicken LEG Meat Skinless&quot;,&#xA;                    &quot;quantity&quot;: 1,&#xA;                    &quot;refundableQuantity&quot;: 1,&#xA;                    &quot;requiresShipping&quot;: false,&#xA;                    &quot;image&quot;: {&#xA;                      &quot;id&quot;: &quot;gid://shopify/ImageSource/9771771265180&quot;,&#xA;                      &quot;originalSrc&quot;: &quot;https://cdn.shopify.com/s/files/1/0417/0262/1340/products/ChickenLegMeat_Skinless.jpg?v=1593188883&quot;&#xA;                    },&#xA;                    &quot;product&quot;: null&#xA;                  }&#xA;                }&#xA;              ]&#xA;            }&#xA;          }&#xA;        }&#xA;</code></pre>&#xA;<p>When I deleted the parent_id, I got another error like this.</p>&#xA;<p>&quot;Transactions not on 'store-credit', 'exchange-credit', or 'cash' gateways require a parent_id&quot;.</p>&#xA;<p>Do you guys any samples to refund?</p>&#xA;",5008823,,,,2020-07-23 00:14:29,How to use refundCreate graphQL on Shopify?,<graphql><shopify>,1,0,0,2020-07-22 22:50:32
63049761,2,,63049019,1,,"<pre><code>const docList = gql`&#xA;  query docList {    // docList is a query name&#xA;    documents{       // 'root' of requested data tree structure&#xA;      id,&#xA;      name&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>Your result starts with <code>documents</code> (document nodes array), not with <code>docsList</code> (result doesn't contain this name).</p>&#xA;<pre><code>&lt;ul v-for=&quot;document in documents&quot; :key=&quot;document.id&quot;&gt;&#xA;</code></pre>&#xA;",6124657,,,,2020-07-23 08:13:19,"",,0,1,0,2020-07-23 08:13:19
63052890,1,,,1,79,"<p>I got that error every time I open the app again after being close for more than 3 minutes. Any idea of what's the problem? Here's my code:</p>&#xA;<pre><code>useEffect(() =&gt; {&#xA;    const observer = client.subscribe({&#xA;      query: SUBSCRIBE_TOPIC_FOR_FORUM,&#xA;      variables: {roomId: currRoom.id},&#xA;    });&#xA;&#xA;    const subscription = observer.subscribe(({data}) =&gt; {&#xA;      console.log('SUBSCRIBE received', data);&#xA;      if (data) {&#xA;        const newTopicId = data.createTopicForForum.topicId;&#xA;        const exists = topics.find(({topicId}) =&gt; topicId === newTopicId);&#xA;        if (!exists) {&#xA;          setTopics(arr =&gt; [data.createTopicForForum].concat(arr));&#xA;        }&#xA;      }&#xA;    });&#xA;&#xA;    console.log('subscription: ', subscription);&#xA;&#xA;    return () =&gt; subscription.unsubscribe();&#xA;}, [currRoom.id]);&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/DlDlf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/DlDlf.png"" alt=""enter image description here"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/IARaK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IARaK.png"" alt=""enter image description here"" /></a></p>&#xA;",2392211,,,,2020-07-23 11:13:16,React Native - Unsubscribe subscription in Apollo Client,<react-native><apollo><apollo-client>,0,0,0,2020-07-23 11:13:16
63058239,1,,,1,60,"<p>I'm using <code>createSchemaCustomization</code> in <code>gatsby-node</code> to create schema connections. This works great for things like this:</p>&#xA;<pre><code>type BoxesYaml implements Node {&#xA;  products: [Product] @link(by: &quot;id&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>where <code>Product</code> is a type, and <code>BoxesYaml</code> has a <code>product</code> array containing <code>product</code> IDs as part of the YAML.</p>&#xA;<p>Now, I'd like to do the same for a YAML file which contains <em><strong>only</strong></em> a sequence. For example:</p>&#xA;<pre><code>- product1&#xA;- product2&#xA;- product3&#xA;</code></pre>&#xA;<p>Is it possible to connect these IDs to a <code>Product</code> type in Gatsby?</p>&#xA;<p>I have tried various attempts at defining the array of products at <code>Products</code> but so far have only been able to generate syntax errors.</p>&#xA;<p>Something along the lines of</p>&#xA;<pre><code>type BoxesYaml implements [Product] @link(by: &quot;id&quot;)&#xA;</code></pre>&#xA;",438581,,438581,2020-07-24 12:05:49,2020-07-24 12:05:49,GraphQL Schema Connection for a list in Gatsby,<graphql><gatsby>,0,0,0,2020-07-23 15:50:58
63063444,1,,,0,266,"<p>I have a basic graph set up on Neo4j that contains some movies and I'm using GraphQL to connect to it from a React App. I am testing some queries using the GraphQL playground before adding them to my React App and I've run into an issue when passing an ID type argument. Each of my <code>mem</code> nodes has the following schema (as displayed in the GraphQL playground documents):</p>&#xA;<pre><code>Mem(&#xA;memID: ID&#xA;mem: String&#xA;date: _Neo4jDateInput&#xA;memType: String&#xA;emoji: String&#xA;pictures: String&#xA;personID: Int&#xA;placeID: Int&#xA;favourite: Boolean&#xA;public: Boolean&#xA;_id: String&#xA;first: Int&#xA;offset: Int&#xA;orderBy: [_MemOrdering]&#xA;filter: _MemFilter&#xA;): [Mem]&#xA;</code></pre>&#xA;<p>When I query the graph, I can pass arguments, such as the <code>mem</code> string to return a particular node. For example, the following query:</p>&#xA;<pre><code>{&#xA;  Mem(mem: &quot;The Empire Strikes Back&quot;) {&#xA;        memID&#xA;        mem&#xA;        favourite&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Returns the following data from that node:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;Mem&quot;: [&#xA;      {&#xA;        &quot;memID&quot;: &quot;180&quot;,&#xA;        &quot;mem&quot;: &quot;The Empire Strikes Back&quot;,&#xA;        &quot;favourite&quot;: false&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>However, when I try to pass a <code>memID</code> as an argument, as follows:</p>&#xA;<pre><code>{&#xA;  Mem(memID: 180) {&#xA;        memID&#xA;        mem&#xA;        favourite&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I get the following response instead of it returning the node's data:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;Mem&quot;: []&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I'm relatively new to graphQL and feel like I'm missing something basic, but I've searched the documentation and done a lot of Googling around and can't find the solution. I want to be able to query my graph using <code>memID</code> as an argument and just can't get it to work.</p>&#xA;<p><strong>UPDATE</strong></p>&#xA;<p>The documentation states that memID is a scalar and I just can't figure out how to express it in the query. It states it can be expresses as a number or a string but neither have worked:</p>&#xA;<p><a href=""https://i.stack.imgur.com/l6rqx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/l6rqx.png"" alt=""enter image description here"" /></a></p>&#xA;",4530173,,4530173,2020-07-24 06:28:56,2020-07-24 17:42:01,GraphQL query not returning result with id argument,<reactjs><neo4j><graphql><grandstack>,0,4,0,2020-07-23 21:33:23
63099034,1,63099332,,3,2846,"<p>I get an error <code>Cannot add property key, object is not extensible</code> using <code>&quot;@apollo/client&quot;: &quot;^3.0.2&quot;</code> with ant design.</p>&#xA;<p>I can successfully obtain data from the server with my graphql query, however, the problem is that, the data inside the return object is somehow unextendable. This never used to be a problem prior to using apollo client (using apollo boost).</p>&#xA;<p>In order to make my data work in a table in ant design, I have to pass in the array data obtained from the <code>data</code> object returned from the server. The part where I get the error is when I attempt to iterate through the <code>items</code> array, and add a <code>key</code> to each object, so that react won't complain in the console of a missing <code>key</code> element for the html.</p>&#xA;<pre><code>  const items = [...data.items];&#xA;  console.log(&quot;items:&quot;, items);&#xA;&#xA;  // Add a key for each item to make React stop complaining&#xA;  // Erorr occurs here!!!&#xA;  items.forEach(item =&gt; {&#xA;    item.key = item.id;&#xA;  });&#xA;</code></pre>&#xA;<p>Is there a way we can remove this unnecessary functionality that's hindering our ability in modifying and extending results obtained from the server? Also I tried spreading the array making a deep copy, but that's not working either.</p>&#xA;<p>What do I need to do to make sure that I can add an additional <code>key</code> field in each array item, based on the <code>id</code>?</p>&#xA;<p>Addendum:</p>&#xA;<p>I don't actually need the code that does the <code>items.forEach()</code> stuff. However, if I don't add it, react will complain that the entries in the table are all missing a <code>key</code> value. This is my workaround since tables in ant design get their data from an array of objects, and thus, need to have a <code>key</code> value in there. Since querying data from the server typically doesn't include a <code>key</code> property in an object, this has to be manually added.</p>&#xA;",6280334,,,,2020-07-26 11:12:26,"Cannot add property key, object is not extensible error Apollo Client with antd",<reactjs><antd><apollo-client>,1,2,0,2020-07-26 10:39:54
63135194,2,,63114013,1,,<p>It's the difference between <code>articles</code> and <code>article</code> as the query. If you use the singular one you can use the ID as argument</p>&#xA;,7063875,,,,2020-07-28 13:24:20,"",,0,0,0,2020-07-28 13:24:20
63137258,1,,,0,611,"<p>I'm pushing data via the GraphQL API to Shopify (as metafields). I don't use a library like Graphene, just the <code>requests</code> library.</p>&#xA;<p>My post request shows with <code>response.headers</code>the encoding as UTF-8:</p>&#xA;<pre><code>{'Date': 'Tue, 28 Jul 2020 14:33:52 GMT', 'Content-Type': 'application/json; charset=utf-8', ...&#xA;</code></pre>&#xA;<p>My payload includes Umlauts:</p>&#xA;<pre><code>{&#xA;&quot;query&quot;: &quot;mutation($input: ProductInput!) { productUpdate(input: $input) { product { metafields(first: 100) { edges { node { id namespace key value } } } } }} &quot;,&#xA;&quot;variables&quot;: {&#xA;    &quot;input&quot;: {&#xA;        &quot;id&quot;: &quot;gid://shopify/Product/5450527015065&quot;,&#xA;        &quot;metafields&quot;: [&#xA;            {&#xA;                &quot;namespace&quot;: &quot;product-details&quot;,&#xA;                &quot;key&quot;: &quot;Kurzbeschreibung&quot;,&#xA;                &quot;value&quot;: &quot;Armband aus Leder mit grün glänzender Rüsche&quot;,&#xA;                &quot;valueType&quot;: &quot;STRING&quot;&#xA;            }&#xA;        ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>I don't understand, why I am not receiving the content on Shopify in Unicode&#xA;<a href=""https://i.stack.imgur.com/FAuHQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FAuHQ.png"" alt=""quests"" /></a></p>&#xA;<p>This is how I read the data:</p>&#xA;<pre><code>import pandas as pd&#xA;&#xA;df = pd.read_csv('data.csv')&#xA;dictionary = df.to_dict('index')&#xA;print(dictionary)&#xA;</code></pre>&#xA;<p>Returns:</p>&#xA;<pre><code>0: {'Handle': 'd1', 'metafields.product-details.Kurzbeschreibung': 'Armband aus Leder mit grün glänzender Rüsche', 'metafields.product-details.Style': 'Das ArmRock Armband ist das perfekte Finish für jedes Styling. Bei diesem Schmuck-Accessoire für Arm, Hals oder auch Fuß kommt das FederRock Label prägende feinste Hirschleder zum Einsatz, als Band mit feinen Rüschen in buntem Akzentleder geschmückt. Das ArmRock Band besticht durch sein raffiniertes Design und garantiert ein echter Hingucker. Jedes Modell wird individuell gefertigt und ist ein Unikat.'}, 1:&#xA;</code></pre>&#xA;<p><strong>EDIT:</strong>&#xA;Narrowed the problem and created another issue here: <a href=""https://stackoverflow.com/questions/63141535/python-code-generated-by-insomnia-graphql-client-reacts-not-as-expected"">Python code generated by Insomnia GraphQL client reacts not as expected</a></p>&#xA;",3116231,,3116231,2020-07-28 19:39:46,2020-07-28 19:39:46,Posting UTF-8 via Requests/GraphQL to Shopify shows no UTF-8,<python><python-requests><graphql><shopify><shopify-api>,0,6,0,2020-07-28 15:05:43
63139148,1,,,0,180,"<p>Here’s my question about PWA and custom Magento 2 extensions.<br />&#xA;I am a Magento backend developer, and I have a dim idea of PWA frontend implementation. I’ve been developing a Magento SEO extension and try to add some compatibility for PWA. I assume that on the backend side, it is an extension's Graph QL API. The SEO extension changes info in different sections of a page - head section (meta title, meta description, canonical URL, microdata in json-ld format, etc.), content section - modified product/category name, or description, modified breadcrumbs. I want to ask frontend developers about using graph-ql calls.<br />&#xA;Please, mark the better solution in your opinion:</p>&#xA;<ol>&#xA;<li>Extension extends and/or changes the default Magento graph-ql answers. For example, the modified product description will come to the front.</li>&#xA;<li>The extension has its own graph ql controller(s) and you force to add additional call(s) for getting SEO data for the whole page.</li>&#xA;</ol>&#xA;<p>Note, in case #1, the following situation is possible: you already have the head section of a page, and now you call the product information and receive the regular product data and in addition, the canonical URL, which must be placed in the head section.&#xA;Is it a problem to use data from one graph-ql query to modify a previous section based on the previous graph ql?</p>&#xA;<p>If you’ve ever used custom extensions for PWA, I would highly appreciate any info or best practices to study. Thank you in advance.</p>&#xA;",5146775,,,,2020-12-31 11:49:17,Magento2 custom extension and PWA support,<javascript><magento2><progressive-web-apps><graphql-js>,1,0,0,2020-07-28 16:56:52
63153458,1,63261149,,0,360,"<p>I have this mutation:</p>&#xA;<pre><code>export const SET_CART_MUTATION = gql`mutation setCartMutation($vendorSlug: String!, $sessionId: String, $productId:[Int!], $prices:[PriceInput]) {&#xA;  setCart(vendorSlug: $vendorSlug, sessionId: $sessionId, productId:$productId, prices:$prices) {&#xA;    cart {&#xA;      ${CART_FIELDS}&#xA;    }&#xA;    allTicketsAdded&#xA;  }&#xA;}`&#xA;</code></pre>&#xA;<p>I want to create an array of productId but when I mutate: I get :</p>&#xA;<pre><code>Mutation error: Error: GraphQL error: int() argument must be a string or a number, not 'list'&#xA;</code></pre>&#xA;<p>My setCart class is :</p>&#xA;<pre><code>class SetCart(graphene.Mutation):&#xA;    class Arguments:&#xA;        vendor_slug = graphene.String()&#xA;        session_id = graphene.String()&#xA;        product_id = graphene.List(graphene.Int)&#xA;        prices = graphene.List(PriceInput)&#xA;</code></pre>&#xA;<p>Thanks for help, and ask questions.</p>&#xA;",12484762,,,,2020-08-05 08:22:15,"GraphQL error: int() argument must be a string or a number, not 'list'",<python><graphql><graphene-python>,1,3,0,2020-07-29 12:19:52
63181325,1,,,4,1203,"<p>I am trying to construct a GraphQL query for GitHub's v4 GraphQL API to retrieve <em>all</em> commits from a given repository (regardless of branch).</p>&#xA;<p>With the <a href=""https://github.com/github/training-kit"" rel=""nofollow noreferrer""><code>github/training-kit</code></a> repository as an example, I currently have to do this in several steps, namely:</p>&#xA;<ol>&#xA;<li>Retrieve a list of all branches of the repository with this query (using <code>pageInfo</code> as needed to repeat the query to get all branches):</li>&#xA;</ol>&#xA;<pre><code>{&#xA;  repository(owner: &quot;github&quot;, name: &quot;training-kit&quot;) {&#xA;    refs(first: 10, refPrefix: &quot;refs/heads/&quot;, after: &quot;&quot;) {&#xA;      totalCount&#xA;      edges {&#xA;        node {&#xA;          name&#xA;        }&#xA;      }&#xA;      pageInfo {&#xA;        hasNextPage&#xA;        endCursor&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<ol start=""2"">&#xA;<li>Loop through the list of branches, and <em>for each branch</em> get its commit history. Within each branch, I usually need to run the query many times because of pagination limits. For example, this would be the query for the <code>master</code> branch to get that branch's first 100 commits:</li>&#xA;</ol>&#xA;<pre><code>{&#xA;  repository(owner: &quot;github&quot;, name: &quot;training-kit&quot;) {&#xA;    refs(query: &quot;master&quot;, refPrefix: &quot;refs/heads/&quot;, first: 1) {&#xA;      nodes {&#xA;        target {&#xA;          ... on Commit {&#xA;            history(first: 100) {&#xA;              nodes {&#xA;                oid&#xA;              }&#xA;              pageInfo {&#xA;                hasNextPage&#xA;                endCursor&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>To me this solution is inefficient especially because of step 2. where most commits would be duplicated across many branches (not to mention I have to make many queries just to get all the commits from just one branch). Once I get the list of commits from each branch I have to de-duplicate them. The whole process requires <em>many</em>, <em>many</em> queries and lots of duplicated effort. However, since there are commits that can only be reached by certain branches, I don't see how else to do it besides exhaustively querying each branch.</p>&#xA;<p><strong>Can anyone suggest a more efficient strategy that better utilizes the GitHub <em>GraphQL API</em> to retrieve <em>all</em> commits from a repository?</strong></p>&#xA;<p>Thank you!</p>&#xA;<p><strong>P.S.</strong> For reference, I've looked at the following questions but none of them seem to answer my question:</p>&#xA;<p>a. <a href=""https://stackoverflow.com/q/48285888/186904"">Github GraphQL - Getting a repository's list of commits</a> - They were only aiming to get the latest <code>n</code> number of commits from a repository's default branch, not all commits regardless of branch.</p>&#xA;<p>b. <a href=""https://stackoverflow.com/q/44723678/186904"">Commits stats from github using graphql</a> - This question was only interested in the default branch, which might not include all commits.</p>&#xA;<p>c. <a href=""https://stackoverflow.com/q/55419229/186904"">Querying all commits in a single repository with the GitHub GraphQL API v4</a> - Only interested in the <code>master</code> branch and how to do pagination, not all commits of the repository.</p>&#xA;",186904,,,,2022-01-19 21:08:37,Efficient GraphQL query to retrieve ALL commits in a repository via GitHub's v4 API?,<api><github><version-control><graphql><github-api>,1,6,0,2020-07-30 20:59:41
63205114,2,,63205046,1,,"<p>Your guess wont filter for two reasons: it maps the <code>arrayOfObjects</code> so will always return them all, and the <code>_id</code> is not an array so <code>.find()</code> wont do what you want.</p>&#xA;<p>My suggestion:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>arrayOfObjects.filter(object =&gt; object.parentPost._id === input);&#xA;</code></pre>&#xA;<p><code>filter</code> returns a new array by going through all items and get only those that return a <code>true</code> in the condition. The <code>object.parentPost._id === input</code> just checks if the <code>_id</code> matches your <code>input</code>.</p>&#xA;",6933004,,1839439,2020-08-01 12:24:12,2020-08-01 12:24:12,"",,0,0,0,2020-08-01 12:18:37
63232457,1,65421787,,1,2210,"<p><strong>Problem:</strong>&#xA;I’m using cypress with angular and apollo graphQl. I’m trying to mock the graph server so I write my tests using custom responses. The issue here is that all graph calls go on a single endpoint and that cypress doesn’t have default full network support yet to distinguish between these calls.</p>&#xA;<p>An example scenario would be:</p>&#xA;<ul>&#xA;<li>access /accounts/account123</li>&#xA;<li>when the api is hit two graph calls are sent out - a query getAccountDetails and another one with getVehicles</li>&#xA;</ul>&#xA;<p><strong>Tried:</strong></p>&#xA;<ol>&#xA;<li>Using one stub of the graph endpoint per test. Not working as it stubs with the same stub all calls.</li>&#xA;<li>Changing the app such that the query is appended 'on the go' to the url where I can intercept it in cypress and therefore have a unique url for each query. Not possible to change the app.</li>&#xA;<li>My only bet seems to be intercepting the XHR call and using this, but I don't seem to be able to get it working Tried all options using XHR outlined here but to no luck (it picks only the stub declared last and uses that for all calls) <a href=""https://github.com/cypress-io/cypress-documentation/issues/122"" rel=""nofollow noreferrer"">https://github.com/cypress-io/cypress-documentation/issues/122</a>.</li>&#xA;</ol>&#xA;<p>The answer from this question uses Fetch and therefore doesn't apply:&#xA;<a href=""https://stackoverflow.com/questions/59192617/mock-specific-graphql-request-in-cypress-when-running-e2e-tests"">Mock specific graphql request in cypress when running e2e tests</a></p>&#xA;<p>Anyone got any ideas?</p>&#xA;",10496082,,10496082,2020-09-09 10:35:40,2022-08-31 17:42:05,Mock Graphql server with multiple stubs in Cypress,<graphql><cypress>,5,0,0,2020-08-03 15:34:41
63238864,2,,63232457,-1,,"<p>A &quot;fix&quot; that I use is to create multiple aliases, with different names, on the same route, with wait on the alias between the different names, as many as requests you have.</p>&#xA;",7852286,,,,2020-08-04 01:02:11,"",,0,1,0,2020-08-04 01:02:11
63244071,2,,63232457,-1,,"<p>I guess you can use aliases as already suggested in Answer by @Luis above like this. This is given in documentation too. Only thing you need to use here is multiple aliases as you have multiple calls and have to manage the sequence between them . Please correct me if i understood you question in other way ??</p>&#xA;<pre><code>cy.route({&#xA;  method: 'POST',&#xA;  url: 'abc/*',&#xA;  status: 200.&#xA;  response: {whatever response is needed in mock }&#xA;}).as('mockAPI')&#xA;&#xA;// HERE YOU SHOULD WAIT till the mockAPI is resolved. &#xA;cy.wait('@mockAPI')&#xA;</code></pre>&#xA;",4806592,,,,2020-08-04 09:38:19,"",,0,3,0,2020-08-04 09:38:19
63253397,1,64146400,,2,165,"<p>Using a Github graphql query below I can see which merge options a repository has available:</p>&#xA;<pre><code>{&#xA;  node(id: &quot;&lt;id&gt;&quot;) {&#xA;    ... on PullRequest {&#xA;      number&#xA;      repository {&#xA;        mergeCommitAllowed&#xA;        squashMergeAllowed&#xA;        rebaseMergeAllowed&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>that returns:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;node&quot;: {&#xA;      &quot;number&quot;: 666,&#xA;      &quot;repository&quot;: {&#xA;        &quot;mergeCommitAllowed&quot;: false,&#xA;        &quot;squashMergeAllowed&quot;: true,&#xA;        &quot;rebaseMergeAllowed&quot;: true&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But, I don't see a way to know which is the default. When I look at the pull request on Github (see below), it knows that <code>rebase</code> is the preferred method for merging my pull request. Perhaps there is some kind of &quot;sticky&quot; data attached to my user? (I'm sure the last pull request I closed was using <code>rebase</code>)</p>&#xA;<p>Is it possible to know which merge method is the default with a graphql query?</p>&#xA;<p><a href=""https://i.stack.imgur.com/76Nym.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/76Nym.png"" alt=""enter image description here"" /></a>&#xA;<a href=""https://i.stack.imgur.com/bREzL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bREzL.png"" alt=""enter image description here"" /></a>&#xA;<a href=""https://i.stack.imgur.com/v0Yis.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/v0Yis.png"" alt=""enter image description here"" /></a></p>&#xA;",208022,,,,2020-09-30 22:05:16,How to get the default merge method for a pull request from github graphql query?,<github><graphql>,2,0,0,2020-08-04 18:54:02
63261149,2,,63153458,0,,"<p>I solved it,</p>&#xA;<p>If you have the same error and you're sure that's the mutation arguments are the same type as declared: the problem come from your mutation function :</p>&#xA;<pre><code>def mutate(self, info, vendor_slug, session_id, products, prices, participants):&#xA;        # ? List of products given&#xA;        products = Product.objects.get(id=product)&#xA;        cart = Order.objects.get_cart(&#xA;            vendor_slug, info.context.user, session_id)&#xA;</code></pre>&#xA;<p>The error come from <code>Product.objects.get(id=product)</code>&#xA;because product is an array&#xA;Correction:</p>&#xA;<pre><code>products = [Product.objects.get(id=product) for product in products]&#xA;</code></pre>&#xA;",12484762,,,,2020-08-05 08:22:15,"",,0,0,0,2020-08-05 08:22:15
63261401,2,,63136051,0,,"<blockquote>&#xA;<p>Am I missing some options?</p>&#xA;</blockquote>&#xA;<p>You need to translate GraphQL query (request) into the proper SQL query. Just calling <code>findAll()</code> does not have any info about the request, so it correctly fetches full entity.</p>&#xA;<p>Basically, you need to parse the GraphQL Resolve Info into a more readable format (e.g. using <a href=""https://www.npmjs.com/package/graphql-fields"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/graphql-fields</a>) and then build a <code>select</code> option for TypeORM (e.g. <code>.findAll({ select: ['id'] })</code>).</p>&#xA;",5472617,,,,2020-08-05 08:39:10,"",,0,0,0,2020-08-05 08:39:10
63264806,2,,63264545,2,,"<p>The problem seems in format of  returned data. Suppose, you have more fields in your <code>Game</code>, not only <code>players</code>. There is no way of including those fields in your return format.</p>&#xA;<p>Instead of <code>return  output</code> .</p>&#xA;<p>Try: <code>return {'players':output}</code></p>&#xA;",8663277,,,,2020-08-05 12:05:25,"",,0,3,0,2020-08-05 12:05:25
63274934,2,,63253397,1,,"<p>I believe this is sticky to your user and possibly the repository.  I've used a non-default merge method on a repository in the past, and when I came back, the merge button suggested the same value, which was definitely not the value I typically used.</p>&#xA;<p>The API wouldn't show you this, since that information is not a property of the repository, but both the repository and the user.  API responses are not supposed to change based on the person who makes them unless there's an access control issue.  Anyway, when performing a merge through the GraphQL API, the API defaults to the merge method anyway unless you specify something different.</p>&#xA;",8705432,,,,2020-08-05 23:43:21,"",,0,0,0,2020-08-05 23:43:21
63282408,1,,,0,66,"<p>Imagine the following (simplified) GraphQL query:</p>&#xA;<pre><code>{&#xA;    Products {&#xA;        Name&#xA;        Code&#xA;        StockCount&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>were to return (say) 50 products, showing the item code, description and the number of items in stock.</p>&#xA;<p>The client may not want the items that are out-of-stock to be returned, or they may only be interested in items that have stock less than (say) 50 units.</p>&#xA;<p>Now, if this information was all held in the DB, then the sensible thing would of course be to change the SQL statement's where clause to exclude those items.  We'd therefore have to add parameters to the query so that the client can add a cut-off value, and whether they wanted those items with more than, or less than that value.</p>&#xA;<p>But, let's imagine that the stock is held in many different locations.  We'd have to query all the different locations and then add the stock quantities together to get the final value, so all the &quot;hard&quot; work has been done before we actually know the answer.  So it's a &quot;computed&quot; value.</p>&#xA;<p>What I'm wondering is if the query could be amended to something like either of the following (neither of which seems to work, but hopefully gives you the idea):</p>&#xA;<pre><code>{&#xA;    Products @skip(if: StockCount &lt; 50) {&#xA;        Name&#xA;        Code&#xA;        StockCount&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>or</p>&#xA;<pre><code>query getInStockProducts {&#xA;  allProducts&#xA;  (where: { {StockCount : {_lt: 50}}})&#xA;  {&#xA;        Name&#xA;        Code&#xA;        StockCount&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",584714,,,,2020-08-06 11:16:20,GraphQL Skip directive - can this be used to exclude items?,<graphql><asp.net-core-webapi>,0,3,0,2020-08-06 11:16:20
63305397,2,,63304249,1,,<p>Can you do a debugger inside this code?</p>&#xA;<p>It's hard to say.. but what I would check is the value of <code>node</code>. To me it looks like content is an array and inside the first item of the array you have value so to me it should look more like <code>node.content[0].value</code>.</p>&#xA;,881180,,,,2020-08-07 16:02:26,"",,0,0,0,2020-08-07 16:02:26
63306282,2,,63297065,0,,"<p>Just use <em>OrganizationWhereInput</em> instead of <em>OrganizationWhere<strong>Unique</strong>Input</em>. It will return a list of organisations instead of a single result (might return an empty array), yet it should allow you to search for an organisation using an employee id.</p>&#xA;",10087221,,,,2020-08-07 17:02:55,"",,0,0,0,2020-08-07 17:02:55
63307774,2,,45046384,1,,"<p>There is no filter criterion on the author in type <code>PullRequestConnection</code>. So you can't filter pull requests based on the author. But you can use search query feature like</p>&#xA;<pre><code>{&#xA;  search(query: &quot;repo: hawkular/hawkular.github.io is:pr is:open author:hawkular-website-bot&quot;, last:10, type:ISSUE){&#xA;    edges{&#xA;      node{&#xA;        ... on PullRequest{&#xA;          body&#xA;          title&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>For details see <a href=""https://docs.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests"" rel=""nofollow noreferrer"">this</a></p>&#xA;",3211941,,,,2020-08-07 19:01:25,"",,0,0,0,2020-08-07 19:01:25
63314987,1,63315077,,0,31,"<p>I have a working function that looks like this:</p>&#xA;<pre><code>  const handleClickOnFavouriteLocation = (item: any) =&gt; {&#xA;    console.log('MY COORD', item.coordinates);&#xA;    if(data){&#xA;      console.log('DATA COORD', data.personalFavouritePlaces.nodes[0].center.coordinates);&#xA;    }&#xA;    const addressDetails = {&#xA;      placeName: item.street,&#xA;      coordinates: item.coordinates,&#xA;    };&#xA;    Keyboard.dismiss();&#xA;    chooseLocation(addressDetails);&#xA;  };&#xA;</code></pre>&#xA;<p>Currently, the item here is hard-coded and it works. However, I am trying to replace the hardcoded item with items returned via grapqhl. However, I get an error in the coordinates field.</p>&#xA;<p>For example, If I check <code>item.coordinates</code> on the log, I see this. The length is 2:</p>&#xA;<pre><code>MY COORD (2) [8.217462, 53.13975]&#xA;&#xA;(2) [8.217462, 53.13975]&#xA;0: 8.217462&#xA;1: 53.13975&#xA;length: 2&#xA;__proto__: Array(0)&#xA;</code></pre>&#xA;<p>However, when I check an example of the coordinates returned from graphql, I see this:</p>&#xA;<pre><code>DATA COORD [Array(2)]&#xA;&#xA;DATA COORD &#xA;[Array(2)]&#xA;0: (2) [8.183364, 53.157753]&#xA;length: 1&#xA;__proto__: Array(0)&#xA;</code></pre>&#xA;<p>The length here is 1. Even though both of them seem to be the same thing. How can I change the grahql returned data (coordinates field) such that it can be used exactly like the hard-coded one?</p>&#xA;",0,user13101751,,,2020-08-08 11:54:31,different ways of returning array types (data returned via graphql),<javascript><reactjs><typescript><react-native><graphql>,1,0,0,2020-08-08 11:41:53
63315077,2,,63314987,1,,<p>that because the graphql is returning a one item long array with the first item containing the required array so just use <code>item.coordinates[0]</code> to use it as the same as the hard coded item</p>&#xA;,13976294,,,,2020-08-08 11:54:31,"",,0,0,0,2020-08-08 11:54:31
63342777,2,,63342286,2,,"<p>You are retrieving your data correctly. Your GraphQL looks good and gather all data from the markdown file properly.</p>&#xA;<p>What are you missing is a <code>dangerouslySetInnerHTML</code> in your HTML tag. <code>dangerouslySetInnerHTML</code> is a React's replacement for using <code>innerHTML</code> in the browser DOM. So, applied to your code:</p>&#xA;<pre><code>&lt;h1 className=&quot;title&quot; dangerouslySetInnerHTML={{ __html: data }} /&gt;&#xA;</code></pre>&#xA;<p><em>Note: same applies to the <code>&lt;div&gt;</code>. Because you are not wrapping anything inside, you can self-close your <code>&lt;h1&gt;</code></em></p>&#xA;<p>The naming comes because generally, could be risky because it exposes your users to a cross-site scripting (XSS) attack. Ideally, you should map each response of <code>data</code> and render one parsed tag or another depending on it but for now, as in 95% of the cases, it will work as expected without any risk exposure for the users.</p>&#xA;<p>You can check for further information at <a href=""https://reactjs.org/docs/dom-elements.html#dangerouslysetinnerhtml"" rel=""nofollow noreferrer"">React's official documentation</a>.</p>&#xA;",5585371,,5585371,2020-08-10 17:28:04,2020-08-10 17:28:04,"",,0,0,0,2020-08-10 15:01:53
63348940,1,63348941,,2,3256,"<pre><code>{&#xA;  Post {&#xA;      name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>While trying to retrieve all the entries on a content type, it only gives error of:</p>&#xA;<pre><code>&quot;Argument \&quot;id\&quot; of required type \&quot;String!\&quot; was not provided.&quot;&#xA;</code></pre>&#xA;<p>Since <code>id</code> field is required. How do I get all entries of a content type then?</p>&#xA;<p>Ref: <a href=""https://www.contentful.com/developers/docs/references/graphql/"" rel=""nofollow noreferrer"">https://www.contentful.com/developers/docs/references/graphql/</a></p>&#xA;",1999456,,,,2020-09-24 15:25:18,Contentful GraphQL endpoint: how to retrieve all entries of a content type,<graphql><contentful>,2,0,0,2020-08-10 22:37:15
63348941,2,,63348940,4,,"<p>From docs <a href=""https://www.contentful.com/developers/docs/references/graphql/#/reference/schema-generation"" rel=""nofollow noreferrer"">here</a>:</p>&#xA;<blockquote>&#xA;<p>The produced Query object exposes two fields that you can use to query content of that type: one to fetch individual content documents (<code>friendlyUser</code> in the example) and another to do queries over all the content of the type (<code>friendlyUserCollection</code>).</p>&#xA;</blockquote>&#xA;<p>So for any resource that you want to retrieve all entries of, you need to append <code>Collection</code> at the end of its id, then use <code>items</code> field to retrieve all entries. As in:</p>&#xA;<pre><code>{&#xA;  PostCollection {&#xA;      items {&#xA;          name&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Apart from docs, you can also view all available resources at corresponding GraphiQL instance here, which could be pretty useful:</p>&#xA;<p><code>https://graphql.contentful.com/content/v1/spaces/{SPACE_ID}/explore?access_token={ACCESS_TOKEN}</code></p>&#xA;<p>Search or select <code>Query</code> to see all schemas:</p>&#xA;<p><a href=""https://i.stack.imgur.com/b0fdL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/b0fdL.png"" alt=""GraphiQL"" /></a></p>&#xA;",1999456,,1999456,2020-08-11 21:02:44,2020-08-11 21:02:44,"",,0,0,0,2020-08-10 22:37:15
63359566,2,,62872621,0,,"<p>I have absolutely no idea what changed... but when I tried again that code, I had no more problems with arrays as results.</p>&#xA;",4239029,,,,2020-08-11 13:47:29,"",,0,0,0,2020-08-11 13:47:29
63363884,2,,61477294,2,,"<p>Search can be used to filter pull requests in a range.</p>&#xA;<p>Here's an example</p>&#xA;<pre><code>{&#xA;  search(first: 100, query: &quot;repo:firstcontributions/first-contributions is:pr is:open updated:2020-01-01..2020-07-31&quot;, type: ISSUE) {&#xA;    nodes {&#xA;      ... on PullRequest {&#xA;        title&#xA;        url&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This fetches open pull requests between 1st January 2020 and 31st July 2020.</p>&#xA;<p>You can see that the search query uses the same syntax. So, basically you can try this by GitHub search too</p>&#xA;<p><a href=""https://github.com/search?q=repo%3Afirstcontributions%2Ffirst-contributions+is%3Apr+updated%3A2020-01-01..2020-07-31"" rel=""nofollow noreferrer"">https://github.com/search?q=repo%3Afirstcontributions%2Ffirst-contributions+is%3Apr+updated%3A2020-01-01..2020-07-31</a></p>&#xA;<p>Documentation about search can be found in <a href=""https://docs.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests"" rel=""nofollow noreferrer"">GitHub search docs</a></p>&#xA;",3951782,,,,2020-08-11 17:59:49,"",,0,0,0,2020-08-11 17:59:49
63394035,1,,,1,660,"<p>I have a query with inline fragment like this:</p>&#xA;<pre><code>const GET_PRODUCTS = gql`&#xA;    query MyQuery {&#xA;        products(where: {featured: false}) {&#xA;            edges {&#xA;            node {&#xA;                //.. other field that not related &#xA;                productId&#xA;                name&#xA;                onSale&#xA;                ... on VariableProduct {&#xA;                    id&#xA;                    name&#xA;                    price&#xA;                    regularPrice(format: FORMATTED)&#xA;                    salePrice(format: FORMATTED)&#xA;                    variations {&#xA;                        nodes {&#xA;                        id&#xA;                        name&#xA;                        variationId&#xA;                        price(format: FORMATTED)&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;            }&#xA;        }&#xA;    }`&#xA;}&#xA;</code></pre>&#xA;<p>Then in GraphiQL ide it product the result like this:</p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;      &quot;products&quot;: {&#xA;        &quot;edges&quot;: [&#xA;          {&#xA;            &quot;node&quot;: {&#xA;              // .. all other field that not related&#xA;              &quot;productId&quot;: 26,&#xA;              &quot;name&quot;: &quot;&quot;,&#xA;              &quot;onSale&quot;: true,&#xA;              &quot;variations&quot;: {&#xA;                &quot;nodes&quot;: [&#xA;                  {&#xA;                    &quot;id&quot;: &quot;1&quot;,&#xA;                    &quot;name&quot;: &quot;DEF example&quot;,&#xA;                    &quot;variationId&quot;: 31,&#xA;                    &quot;price&quot;: &quot;$0.00&quot;&#xA;                  },&#xA;                  {&#xA;                    &quot;id&quot;: 2&quot;&quot;,&#xA;                    &quot;name&quot;: &quot;DEF example&quot;,&#xA;                    &quot;variationId&quot;: 31,&#xA;                    &quot;price&quot;: &quot;$0.00&quot;&#xA;                  },&#xA;                  &#xA;                ]&#xA;              }&#xA;            }&#xA;          },&#xA;          {&#xA;            &quot;node&quot;: {&#xA;              .... another same node&#xA;            }&#xA;          },&#xA;          {&#xA;            &quot;node&quot;: {&#xA;              .. another node&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>Calling the query using Apollo Client:</p>&#xA;<pre><code>import GET_PRODUCTS from '../queries/get-product'&#xA;&#xA;const { loading, error, data } = useQuery(GET_PRODUCTS);&#xA;</code></pre>&#xA;<p>Then I want to get the value of field <code>id</code>,<code>name</code>, <code>variationId</code> and <code>price</code> inside <code>variations</code>'s <code>node</code> array.</p>&#xA;<p>Therefore I do like this in my React:</p>&#xA;<pre><code>{data &amp;&amp; data.products.edges.map(({ node }) =&gt; (&#xA;        &lt;ProductCell&#xA;              product={node}&#xA;         /&gt;              &#xA; ))}&#xA;</code></pre>&#xA;<p>With the code above, I able to get the value of <code>productId</code>, <code>name</code>, <code>onSale</code> field in my <code>ProductCell</code> component by doing this:</p>&#xA;<pre><code>const ProductCell = (props) =&gt; {&#xA;   return(&#xA;    &lt;div&gt;&#xA;      &lt;p&gt;{props.product.productId}&lt;/p&gt;&#xA;      &lt;p&gt;{props.product.name}&lt;/p&gt;&#xA;      &lt;p&gt;{props.product.onSale}&lt;/p&gt;&#xA;    &lt;/div&gt;&#xA;   ) &#xA;}&#xA;</code></pre>&#xA;<p>Now the problem is I want to get the value inside <code>variation</code>'s <code>node array, I doing like this in </code>ProductCell`, which I hope it will return me &quot;DEF example&quot; for 2 times:</p>&#xA;<pre><code>{props.product.variations.nodes.map(({ node }) =&gt; (&#xA;     &lt;p&gt;node.name&lt;p&gt;&#xA;))}&#xA;</code></pre>&#xA;<p>But end up, I get this error:</p>&#xA;<blockquote>&#xA;<p>TypeError: Cannot read property 'nodes' of undefined</p>&#xA;</blockquote>&#xA;<p>Therefore this basically means that can't get the <code>nodes</code> inside <code>variations</code> in the <code>product</code> object. Ok I get that, therefore I checked for console log in the browser, I get this:</p>&#xA;<pre><code>product:&#xA;    onSale: true&#xA;    productId: 10&#xA;    name: abc&#xA;    __typename: &quot;VariableProduct&quot;&#xA;    __proto__:&#xA;    constructor: ƒ Object()&#xA;    hasOwnProperty: ƒ hasOwnProperty()&#xA;    isPrototypeOf: ƒ isPrototypeOf()&#xA;    propertyIsEnumerable: ƒ propertyIsEnumerable()&#xA;    toLocaleString: ƒ toLocaleString()&#xA;    toString: ƒ toString()&#xA;    valueOf: ƒ valueOf()&#xA;    __defineGetter__: ƒ __defineGetter__()&#xA;    __defineSetter__: ƒ __defineSetter__()&#xA;    __lookupGetter__: ƒ __lookupGetter__()&#xA;    __lookupSetter__: ƒ __lookupSetter__()&#xA;    get __proto__: ƒ __proto__()&#xA;    set __proto__: ƒ __proto__()&#xA;    __proto__: Object&#xA;</code></pre>&#xA;<p>The field of <code>name</code>, <code>product</code> and <code>onSale</code> is existed, so I can get it in <code>ProductCell</code>, but&#xA;the <code>variations</code> field which is under <code>... on VariableProduct</code> section of the query is not existed.</p>&#xA;<p><strong>Question:</strong></p>&#xA;<p>So my question is,</p>&#xA;<ol>&#xA;<li><p>How to get the value of <code>id</code>, <code>name</code>, <code>variationId</code> field inside <code>variation</code> <code>node</code>?</p>&#xA;</li>&#xA;<li><p>Why browser not get the json response like I get in GraphiQL above? Instead it return an Object for the part of <code>... on VariableProduct</code> in the query?</p>&#xA;</li>&#xA;</ol>&#xA;<p><strong>Edit:</strong></p>&#xA;<p>This is from Network tab of dev tools in my browser:</p>&#xA;<p><a href=""https://i.stack.imgur.com/8KLtB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8KLtB.png"" alt=""enter image description here"" /></a></p>&#xA;<p>As you can see, there are no <code>variations</code> key in the response, instead it become <code>__typename: VariableProduct</code> then I cant expand it anymore</p>&#xA;",4332049,,4332049,2020-08-13 13:29:06,2020-08-13 13:29:06,How to get data inside the inline fragment in graphql?,<reactjs><graphql><apollo-client>,0,13,0,2020-08-13 11:19:15
63403549,2,,63403466,1,,"<p>I'm looking at this line and would like to note that if data.country is an empty array, it will still be truthy. Add a check to see if there is a value in the first element of the array before rendering CountryInfo</p>&#xA;<pre><code>{ data?.Country &amp;&amp; &lt;CountryInfo country={data?.Country[0]} /&gt; }&#xA;</code></pre>&#xA;",14081884,,,,2020-08-13 21:36:21,"",,0,2,0,2020-08-13 21:36:21
63430914,1,,,1,200,"<p>I'm trying to get a list of Admin inside a repository in an organization,</p>&#xA;<p>couldn't find a away to get it working, always returning me Organization name instead of Administrator name of the repository</p>&#xA;<pre><code>query Github {&#xA;  organization(login: &quot;platform-test&quot;) {&#xA;    repositories(first: 100,after:&quot;Y3Vyc29ysd654OAAKz-A==&quot;) {&#xA;      nodes {&#xA;        nameWithOwner&#xA;     owner{&#xA;      login&#xA;      id&#xA;      __typename&#xA;      url&#xA;     }&#xA;      &#xA;      }&#xA;      pageInfo {&#xA;        endCursor&#xA;        hasNextPage&#xA;      }&#xA;      totalCount&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Will return this snap of result :</p>&#xA;<pre><code>  &quot;data&quot;: {&#xA;    &quot;organization&quot;: {&#xA;      &quot;repositories&quot;: {&#xA;        &quot;nodes&quot;: [&#xA;          {&#xA;            &quot;nameWithOwner&quot;: &quot;Platform-test/afapi-aps-bigfix&quot;,&#xA;            &quot;owner&quot;: {&#xA;              &quot;login&quot;: &quot;Platform-test&quot;,&#xA;              &quot;id&quot;: &quot;MDEyOk9yZ2FuaXphdGlvbjc2NjA=&quot;,&#xA;              &quot;__typename&quot;: &quot;Organization&quot;,&#xA;              &quot;url&quot;: &quot;https://github.dxc.com/Platform-test&quot;&#xA;            }&#xA;          },&#xA;          {&#xA;            &quot;nameWithOwner&quot;: &quot;Platform-test/CVA-operation-k8s-pre&quot;,&#xA;            &quot;owner&quot;: {&#xA;              &quot;login&quot;: &quot;Platform-test&quot;,&#xA;              &quot;id&quot;: &quot;MDEyOk9yZ2FuaXphdGlvbjc2NjA=&quot;,&#xA;              &quot;__typename&quot;: &quot;Organization&quot;,&#xA;              &quot;url&quot;: &quot;https://github.dxc.com/Platform-test&quot;&#xA;            }&#xA;          },....&#xA;</code></pre>&#xA;<p>Couldn't find a way to get the list of administrators of a repository inside an Org</p>&#xA;",12557872,,,,2022-04-27 09:14:56,Get Github repositories owners in an Organization,<github><graphql>,1,0,0,2020-08-15 21:21:36
63438078,2,,63428895,1,,"<p>Ok, I solve the problem.</p>&#xA;<p>Is nothing related with the SpendingCategory (thats the log I receive and I was searching the problem with that reference).</p>&#xA;<p>I had bad input properties and for that reason it dispatch that error.</p>&#xA;<p>Be sure that you input object is totally correct before loose time with other logs.</p>&#xA;",4694090,,,,2020-08-16 14:29:28,"",,0,9,0,2020-08-16 14:29:28
63442644,2,,58002078,10,,"<p>The code posted by @Avius is on the right track, but the interface extending the intersection type generates an error. I believe you'd need to use type:</p>&#xA;<pre><code>type TenantManagePageQueryTenant = Pick&lt;Tenant, 'id' | 'description' | 'name'&gt;&#xA;    &amp; { approvedUsers: Pick&lt;ApprovedUser, 'id' | 'alias'&gt;[] }&#xA;{ }&#xA;&#xA;interface Tenant {&#xA;    id:string;&#xA;    description:string;&#xA;    name:string;&#xA;}&#xA;&#xA;interface ApprovedUser {&#xA;    id:string;&#xA;    alias:string;&#xA;}&#xA;&#xA;let tenant:TenantManagePageQueryTenant = {&#xA;  id: &quot;123&quot;,&#xA;  description: &quot;456&quot;,&#xA;  name: &quot;789&quot;,&#xA;  approvedUsers: [{&#xA;    id: &quot;aaa&quot;,&#xA;    alias: &quot;bbb&quot; // To see the desired type warning, try removing 'alias' &#xA;  }]&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://www.typescriptlang.org/play?#code/C4TwDgpgBAKhB2BDewCyzEHMIAUsQEUBXCAJxDiRSgF4ocBLAYwGsAeS5YAGigHIGAEz5QAPv0EQAzk1IMwwBgHt4I8XyQBbCHwB8AWABQUE1ABkUAN5REYMKSUA3CIICqUslIBc9ZuwCCdg7Obh6kvALCYvyIADYMiFJ6ANoAulAAvkbWWYZGDChkAGaITNCc1JZGplBCXlLAcvCYANzVppIycgrK8PWNBa3tJloQ-U1Dhrn5haQlZVCB9k4u7mRWw7WC44NtxqZxCd4NE3vThrEQwFDACFxeFWgY2HjYxGQUd9R0Vft1UAAiACMACYAMwA7jtTqyeSKFQ%20AEAFgArAA2SHtUaIgDsAA4AJyY-a2ZYhNakbxQZK-Gr-AGIRnEmqHRKIgBGnIB7QyqSMGSAA"" rel=""noreferrer"">Playground Link</a></p>&#xA;",228540,,,,2020-08-16 22:48:34,"",,0,0,0,2020-08-16 22:48:34
63461349,1,63542015,,0,454,"<p>I'm trying to use a graphQL API using AWS Amplify to list books that i've stored in DynamoDB filtered on a field that is a List type.</p>&#xA;<p>Schema</p>&#xA;<pre><code>  id: ID!&#xA;  title: String&#xA;  authorId: String&#xA;  genre: [String]&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;<p>I'm doing this:</p>&#xA;<pre><code>API.graphql(graphqlOperation(listBooks, {&#xA;            filter: {&#xA;                genre: {&#xA;                    contains: category,&#xA;                }&#xA;            },&#xA;        }))&#xA;</code></pre>&#xA;<p>But the only books being returned are the books with a single element and that element matches the category, for example when the category is &quot;History&quot; this will match</p>&#xA;<pre><code>[{S: &quot;History&quot;}]&#xA;</code></pre>&#xA;<p>but this will not match</p>&#xA;<pre><code>[ { &quot;S&quot; : &quot;History&quot; }, { &quot;S&quot; : &quot;Politics and Social Sciences&quot; }]&#xA;</code></pre>&#xA;<p>My ModelBookFilterInput is this:</p>&#xA;<pre><code>input ModelBookFilterInput {&#xA;  id: ModelIDInput&#xA;  genre: ModelStringInput&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;<p>And the ModelStringInput has the <code>contains: String</code> attribute on it so it looks like it supports this.</p>&#xA;<p>I'm not sure what i'm doing wrong, any input appreciated.</p>&#xA;",2860182,,,,2020-08-22 23:24:07,GraphQL DynamoDb filter List field,<graphql><amazon-dynamodb><aws-amplify>,1,0,0,2020-08-18 03:14:09
63474726,1,63475251,,1,108,"<p>I am looking to integrate wisper with my existing graphql api only ruby on rails project. Just wondering if there is any way to broadcast events from graphql mutations?</p>&#xA;<pre><code>module Mutations&#xA;  module Order&#xA;    include Wisper::Publisher&#xA;    class Create &lt; ::Mutations::BaseMutation&#xA;      argument :id, ID, required: true&#xA;      argument :date, String, required: true&#xA;      argument :category, String, required: true&#xA;&#xA;      type Types::OrderType&#xA;&#xA;      def resolve(**attributes)&#xA;        order = Order.new(attributes)&#xA;        if order.save!&#xA;          broadcast(:order_creation_successful, order.id)&#xA;          order&#xA;        end&#xA;      end&#xA;    end&#xA;  end&#xA;end&#xA;</code></pre>&#xA;<p>Global Subscriber</p>&#xA;<pre><code>Rails.application.config.to_prepare do&#xA;  Wisper.clear if Rails.env.development? || Rails.env.test?&#xA;&#xA;  Wisper.subscribe(&#xA;    OrderService::HandleExternalCalls,&#xA;    async: true,&#xA;    on: %i[order_creation_successful]&#xA;  )&#xA;end&#xA;</code></pre>&#xA;<p>Output - NoMethodError (private method `broadcast' called for #GraphqlController)</p>&#xA;<p>Error Trace:</p>&#xA;<pre><code>{&#xA;&quot;status&quot;: 500,&#xA;&quot;error&quot;: &quot;Internal Server Error&quot;,&#xA;&quot;exception&quot;: &quot;#&lt;NoMethodError: undefined method `broadcast' for #&lt;Mutations::Order::Create:0x00007f4b29492a70&gt;&gt;&quot;,&#xA;&quot;traces&quot;: {&#xA;&quot;Application Trace&quot;: [&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 0,&#xA;&quot;trace&quot;: &quot;app/graphql/mutations/order/create.rb:31:in `resolve'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 57,&#xA;&quot;trace&quot;: &quot;app/controllers/graphql_controller.rb:14:in `execute'&quot;&#xA;}&#xA;],&#xA;&quot;Framework Trace&quot;: [&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 1,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/resolver.rb:95:in `public_send'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 2,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/resolver.rb:95:in `block (3 levels) in resolve_with_support'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 3,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema.rb:112:in `after_lazy'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 4,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/resolver.rb:83:in `block (2 levels) in resolve_with_support'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 5,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema.rb:112:in `after_lazy'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 6,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/resolver.rb:76:in `block in resolve_with_support'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 7,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema.rb:112:in `after_lazy'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 8,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/resolver.rb:65:in `resolve_with_support'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 9,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/relay_classic_mutation.rb:64:in `resolve_with_support'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 10,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/field.rb:684:in `public_send'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 11,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/field.rb:684:in `block in public_send_field'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 12,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/field.rb:720:in `with_extensions'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 13,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/field.rb:666:in `public_send_field'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 14,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/field.rb:579:in `block in resolve'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 15,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema.rb:112:in `after_lazy'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 16,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/field.rb:577:in `resolve'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 17,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter/runtime.rb:224:in `block (5 levels) in evaluate_selections'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 18,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/tracing.rb:66:in `trace'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 19,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter/runtime.rb:223:in `block (4 levels) in evaluate_selections'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 20,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/query.rb:353:in `block in with_error_handling'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 21,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/errors.rb:41:in `with_error_handling'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 22,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/query.rb:352:in `with_error_handling'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 23,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter/runtime.rb:222:in `block (3 levels) in evaluate_selections'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 24,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter/runtime.rb:384:in `resolve_with_directives'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 25,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter/runtime.rb:219:in `block (2 levels) in evaluate_selections'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 26,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter/runtime.rb:459:in `after_lazy'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 27,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter/runtime.rb:177:in `block in evaluate_selections'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 28,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter/runtime.rb:124:in `each'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 29,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter/runtime.rb:124:in `evaluate_selections'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 30,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter/runtime.rb:60:in `run_eager'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 31,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter.rb:73:in `block in evaluate'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 32,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/tracing.rb:66:in `trace'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 33,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter.rb:72:in `evaluate'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 34,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/interpreter.rb:45:in `begin_query'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 35,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/multiplex.rb:112:in `begin_query'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 36,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/multiplex.rb:83:in `block in run_as_multiplex'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 37,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/multiplex.rb:82:in `map'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 38,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/multiplex.rb:82:in `run_as_multiplex'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 39,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/multiplex.rb:61:in `block (2 levels) in run_queries'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 40,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/multiplex.rb:195:in `block in instrument_and_analyze'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 41,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/instrumentation.rb:29:in `block (2 levels) in apply_instrumenters'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 42,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/instrumentation.rb:46:in `block (2 levels) in each_query_call_hooks'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 43,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/instrumentation.rb:41:in `each_query_call_hooks'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 44,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/instrumentation.rb:45:in `block in each_query_call_hooks'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 45,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/instrumentation.rb:72:in `call_hooks'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 46,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/instrumentation.rb:44:in `each_query_call_hooks'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 47,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/instrumentation.rb:27:in `block in apply_instrumenters'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 48,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/instrumentation.rb:72:in `call_hooks'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 49,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/instrumentation.rb:26:in `apply_instrumenters'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 50,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/multiplex.rb:174:in `instrument_and_analyze'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 51,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/multiplex.rb:60:in `block in run_queries'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 52,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/tracing.rb:66:in `trace'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 53,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/multiplex.rb:58:in `run_queries'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 54,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/execution/multiplex.rb:48:in `run_all'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 55,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema.rb:1642:in `multiplex'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 56,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema.rb:1613:in `execute'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 58,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 59,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/abstract_controller/base.rb:195:in `process_action'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 60,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_controller/metal/rendering.rb:30:in `process_action'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 61,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/abstract_controller/callbacks.rb:42:in `block in process_action'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 62,&#xA;&quot;trace&quot;: &quot;activesupport (6.0.3.1) lib/active_support/callbacks.rb:135:in `run_callbacks'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 63,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/abstract_controller/callbacks.rb:41:in `process_action'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 64,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_controller/metal/rescue.rb:22:in `process_action'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 65,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_controller/metal/instrumentation.rb:33:in `block in process_action'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 66,&#xA;&quot;trace&quot;: &quot;activesupport (6.0.3.1) lib/active_support/notifications.rb:180:in `block in instrument'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 67,&#xA;&quot;trace&quot;: &quot;activesupport (6.0.3.1) lib/active_support/notifications/instrumenter.rb:24:in `instrument'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 68,&#xA;&quot;trace&quot;: &quot;activesupport (6.0.3.1) lib/active_support/notifications.rb:180:in `instrument'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 69,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_controller/metal/instrumentation.rb:32:in `process_action'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 70,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_controller/metal/params_wrapper.rb:245:in `process_action'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 71,&#xA;&quot;trace&quot;: &quot;activerecord (6.0.3.1) lib/active_record/railties/controller_runtime.rb:27:in `process_action'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 72,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/abstract_controller/base.rb:136:in `process'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 73,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_controller/metal.rb:190:in `dispatch'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 74,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_controller/metal.rb:254:in `dispatch'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 75,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/routing/route_set.rb:50:in `dispatch'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 76,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/routing/route_set.rb:33:in `serve'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 77,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/journey/router.rb:49:in `block in serve'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 78,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/journey/router.rb:32:in `each'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 79,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/journey/router.rb:32:in `serve'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 80,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/routing/route_set.rb:834:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 81,&#xA;&quot;trace&quot;: &quot;rack (2.2.3) lib/rack/etag.rb:27:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 82,&#xA;&quot;trace&quot;: &quot;rack (2.2.3) lib/rack/conditional_get.rb:40:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 83,&#xA;&quot;trace&quot;: &quot;rack (2.2.3) lib/rack/head.rb:12:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 84,&#xA;&quot;trace&quot;: &quot;activerecord (6.0.3.1) lib/active_record/migration.rb:567:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 85,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/middleware/callbacks.rb:27:in `block in call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 86,&#xA;&quot;trace&quot;: &quot;activesupport (6.0.3.1) lib/active_support/callbacks.rb:101:in `run_callbacks'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 87,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/middleware/callbacks.rb:26:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 88,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/middleware/executor.rb:14:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 89,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/middleware/actionable_exceptions.rb:17:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 90,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/middleware/debug_exceptions.rb:32:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 91,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 92,&#xA;&quot;trace&quot;: &quot;railties (6.0.3.1) lib/rails/rack/logger.rb:37:in `call_app'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 93,&#xA;&quot;trace&quot;: &quot;railties (6.0.3.1) lib/rails/rack/logger.rb:26:in `block in call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 94,&#xA;&quot;trace&quot;: &quot;activesupport (6.0.3.1) lib/active_support/tagged_logging.rb:80:in `block in tagged'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 95,&#xA;&quot;trace&quot;: &quot;activesupport (6.0.3.1) lib/active_support/tagged_logging.rb:28:in `tagged'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 96,&#xA;&quot;trace&quot;: &quot;activesupport (6.0.3.1) lib/active_support/tagged_logging.rb:80:in `tagged'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 97,&#xA;&quot;trace&quot;: &quot;railties (6.0.3.1) lib/rails/rack/logger.rb:26:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 98,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/middleware/remote_ip.rb:81:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 99,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/middleware/request_id.rb:27:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 100,&#xA;&quot;trace&quot;: &quot;rack (2.2.3) lib/rack/runtime.rb:22:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 101,&#xA;&quot;trace&quot;: &quot;activesupport (6.0.3.1) lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 102,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/middleware/executor.rb:14:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 103,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/middleware/static.rb:126:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 104,&#xA;&quot;trace&quot;: &quot;rack (2.2.3) lib/rack/sendfile.rb:110:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 105,&#xA;&quot;trace&quot;: &quot;actionpack (6.0.3.1) lib/action_dispatch/middleware/host_authorization.rb:82:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 106,&#xA;&quot;trace&quot;: &quot;rack-cors (1.1.1) lib/rack/cors.rb:100:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 107,&#xA;&quot;trace&quot;: &quot;railties (6.0.3.1) lib/rails/engine.rb:527:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 108,&#xA;&quot;trace&quot;: &quot;puma (3.12.6) lib/puma/configuration.rb:227:in `call'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 109,&#xA;&quot;trace&quot;: &quot;puma (3.12.6) lib/puma/server.rb:706:in `handle_request'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 110,&#xA;&quot;trace&quot;: &quot;puma (3.12.6) lib/puma/server.rb:476:in `process_client'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 111,&#xA;&quot;trace&quot;: &quot;puma (3.12.6) lib/puma/server.rb:334:in `block in run'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 112,&#xA;&quot;trace&quot;: &quot;puma (3.12.6) lib/puma/thread_pool.rb:135:in `block in spawn_thread'&quot;&#xA;}&#xA;],&#xA;&quot;Full Trace&quot;: [&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 0,&#xA;&quot;trace&quot;: &quot;app/graphql/mutations/order/create.rb:31:in `resolve'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 1,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/resolver.rb:95:in `public_send'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 2,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/resolver.rb:95:in `block (3 levels) in resolve_with_support'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 3,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema.rb:112:in `after_lazy'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 4,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/resolver.rb:83:in `block (2 levels) in resolve_with_support'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 5,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema.rb:112:in `after_lazy'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 6,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/resolver.rb:76:in `block in resolve_with_support'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 7,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema.rb:112:in `after_lazy'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 8,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/resolver.rb:65:in `resolve_with_support'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 9,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/relay_classic_mutation.rb:64:in `resolve_with_support'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 10,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/field.rb:684:in `public_send'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 11,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/field.rb:684:in `block in public_send_field'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 12,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/field.rb:720:in `with_extensions'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 13,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/field.rb:666:in `public_send_field'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 14,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/field.rb:579:in `block in resolve'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 15,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema.rb:112:in `after_lazy'&quot;&#xA;},&#xA;{&#xA;&quot;exception_object_id&quot;: 69980396152400,&#xA;&quot;id&quot;: 16,&#xA;&quot;trace&quot;: &quot;graphql (1.11.2) lib/graphql/schema/field.rb:577:in `resolve'&quot;&#xA;},&#xA;.&#xA;.&#xA;.&#xA;]&#xA;}&#xA;}&#xA;</code></pre>&#xA;<p>Is there any other alternative ruby gem to achieve this?</p>&#xA;",4416645,,4416645,2020-08-18 19:08:12,2020-08-18 19:14:53,Is it possible to integrate wisper with Ruby GraphQL?,<ruby-on-rails><ruby><graphql><wisper>,1,3,0,2020-08-18 18:37:57
63494488,1,,,3,68,"<p>I am using GitHub's GraphQL API for a project and I am expected to star or watch a repository. I am able to do the mutation on adding a star. Watching, however, has no word under the mutations. What am I missing here? I did quite a lot of research and came up with nothing. How can I do a mutation on the watch? Isn't there a keyword to watch a repo?</p>&#xA;<p>The mutation for adding a star is below. I am expecting something similar to this.</p>&#xA;<pre><code> mutation AddStar($repoid: ID!) {&#xA;          addStar(input: { starrableId: $repoid }) {&#xA;            starrable {&#xA;              viewerHasStarred&#xA;            }&#xA;          }&#xA;        }&#xA;</code></pre>&#xA;",13087742,,,,2020-08-19 20:24:03,How to mutate watch in GitHub's GraphQL API?,<graphql><apollo><github-api><apollo-client><vue-apollo>,0,0,0,2020-08-19 20:24:03
63505641,2,,63504259,0,,"<p>The issue is with the way you are constructing the payload.</p>&#xA;<pre><code>const newResponses = responses.map((response: any) =&gt; &#xA;  { message: response.message, owner: response.owner },&#xA;);&#xA;const newBubbles = bubbles.map((bubble: any) =&gt; &#xA;  { name: bubble.name, goto: bubble.goto },&#xA;);&#xA;console.log(id, title, visible_order, bot_photo, newResponses, newBubbles);&#xA;</code></pre>&#xA;<p>Removed the additional array for each element in <code>newResponses</code> and <code>newBubbles </code></p>&#xA;",409315,,,,2020-08-20 12:57:14,"",,0,0,0,2020-08-20 12:57:14
63509947,1,,,0,607,"<p>I am trying to deserialize a GraphQLResponse in c#.</p>&#xA;<p>My response contains the following:</p>&#xA;<pre><code>{&#xA;  &quot;myClassObjects&quot;: [&#xA;    {&#xA;      &quot;var1&quot;: &quot;var1Value&quot;,&#xA;      &quot;var2&quot;: &quot;var2Value&quot;&#xA;    }, //more MyClass objects&#xA;]}&#xA;</code></pre>&#xA;<p>According to several sources, I should now be able to unpack and deserialize this using:</p>&#xA;<pre><code>var output = response.getDataFieldAs&lt;IEnumerable&lt;MyClass&gt;&gt;(&quot;myClassObjects&quot;);&#xA;</code></pre>&#xA;<p>Sadly, the getDataFieldAs method does not exist (anymore).</p>&#xA;<p>The response.Data is a Newtonsoft.Json.Linq.JObject which contains an object &quot;myClassObjects&quot; which is an array of MyClass objects. When I try to unpack :</p>&#xA;<pre><code>List&lt;MyClass&gt; output = JsonConvert.DeserializeObject&lt;List&lt;MyClass&gt;&gt;(response.Data.ToString());&#xA;</code></pre>&#xA;<p>I keep getting :</p>&#xA;<p>Cannot deserialize the current JSON object ... because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly</p>&#xA;<p>It's my first time working with Json and I really hope there is a handy sollution for this ? Any help would be much appreciated.</p>&#xA;",4314250,,,,2020-08-20 17:21:22,Deserialize GraphQLResponse / JSON array in c#,<c#><json><graphql>,1,0,0,2020-08-20 17:03:30
63510110,2,,63509947,1,,"<p>you're missing the rootObject when deserializing the &quot;array&quot; of, what i am assuming, is your MyClass objects.</p>&#xA;<pre><code>public class RootObject {&#xA;  [JsonProperty(&quot;myClassObjects&quot;)]&#xA;  public List&lt;MyClass&gt; MyClassObjects {get;set; }&#xA;}&#xA;&#xA;// then deserialize your json like this,&#xA;var obj = JsonConvert.DeserializeObject&lt;RootObject&gt;(response.Content); &#xA;&#xA;</code></pre>&#xA;<p>Without the details on how you are getting the response, i am not sure how to explain the difference in <code>response.Content</code> vs <code>response.Data</code>. If you are using RestSharp, then Data would have the correctly deserialized data for you. Content is the raw string that you would deserialize yourself.</p>&#xA;<p>The error you keep getting is because you are deserializing the Json as [ ] but its { property: value }. Your json has an object that has an array instead of json being an array of objects.</p>&#xA;",1390548,,1390548,2020-08-20 17:21:22,2020-08-20 17:21:22,"",,0,5,0,2020-08-20 17:15:03
63513334,2,,63512667,1,,"<p>Looks like you are intention is to use <code>union types</code>. For typescript <a href=""https://www.typescriptlang.org/docs/handbook/unions-and-intersections.html"" rel=""nofollow noreferrer""><code>union types</code></a> you can refer below sample example -</p>&#xA;<p><strong>Scenario 1: Construct individual types in other module and use union during the usage:</strong></p>&#xA;<p><strong>types.ts</strong></p>&#xA;<pre><code>type a = {&#xA;    name: string;&#xA;}&#xA;&#xA;type b ={&#xA;    name: number;&#xA;}&#xA;&#xA;export type {a, b}&#xA;</code></pre>&#xA;<p><strong>You can use it like :</strong></p>&#xA;<pre><code>import {a,b} from './types';&#xA;&#xA;let a: a|b;&#xA;</code></pre>&#xA;<p><strong>Or</strong></p>&#xA;<pre><code>import * as types from './types';&#xA;&#xA;let a: types.a|types.b;&#xA;</code></pre>&#xA;<p><strong>Scenario 2: Construct union types in other module and use in calling side:</strong></p>&#xA;<p><strong>types.ts</strong></p>&#xA;<pre><code>type a = {&#xA;    name: string;&#xA;}&#xA;&#xA;type b ={&#xA;    id: string;&#xA;}&#xA;&#xA;export type types = a|b&#xA;</code></pre>&#xA;<p><strong>Use it</strong></p>&#xA;<pre><code>import {types}  from './types';&#xA;&#xA;let a: types;&#xA;</code></pre>&#xA;<p><em><strong>For using the union types in <code>graphql</code> use the example mentioned <a href=""https://graphql.org/learn/schema/#union-types"" rel=""nofollow noreferrer""><code>here</code></a> -</strong></em></p>&#xA;<p><strong>Update:</strong> After seeing your comments regarding getting all the types the answer is <strong>NO</strong>. The <code>interfaces</code> and <code>types</code> fall under the <code>type space</code> which dont even exist in the <code>JS</code> world and they are just compiler hints for objects to have specific structure. In other words you even cannot do the <code>Object.Keys/ Object.entries</code> to get all the types from the module and assign them like you do in <code>classes.</code> These dont even exist in the run time.</p>&#xA;<p>Your best bet would be to extract them from the module and convert to <code>union types</code> or construct the union type in the types.ts file and use them in the main file.</p>&#xA;",10260399,,10260399,2020-08-22 18:29:11,2020-08-22 18:29:11,"",,0,3,0,2020-08-20 21:26:49
63529354,1,63534068,,1,661,"<p>I want to display groups of Shopify products based on what collections they're associated with, using <a href=""https://www.gatsbyjs.com/plugins/gatsby-source-shopify/"" rel=""nofollow noreferrer"">gatsby-source-shopify</a></p>&#xA;<p>Filtering to get all products from one collection as easy as running this query:</p>&#xA;<pre><code>  const { allShopifyCollection } = useStaticQuery(&#xA;    graphql`&#xA;      query {&#xA;        allShopifyCollection(filter: {id: {in: &quot;Shopify__Collection__Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3NzAxMjY3MDQ5OA==&quot;}}) {&#xA;          edges {&#xA;            node {&#xA;              products {&#xA;                title&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;    `&#xA;  )&#xA;</code></pre>&#xA;<p>However it's not possible (to my knowledge) to query multiple times on the same data type in the same component.</p>&#xA;<p>What's the preferred way to approach this issue?</p>&#xA;<ul>&#xA;<li><p>Use multiple components that fetches the data for each collection and&#xA;pass it to a grid component?</p>&#xA;</li>&#xA;<li><p>Fetch all collections and filter out each collection?</p>&#xA;</li>&#xA;<li><p>Another solution?</p>&#xA;</li>&#xA;</ul>&#xA;",562747,,,,2020-08-22 08:22:17,Query multiple collections from Shopify in GatsbyJS,<graphql><gatsby>,1,0,0,2020-08-21 19:57:53
63534068,2,,63529354,3,,"<p>Can you use <a href=""https://graphql.org/learn/queries/#aliases"" rel=""nofollow noreferrer"">query aliases</a>?</p>&#xA;<pre><code>const { allShopifyCollection } = useStaticQuery(&#xA;  graphql`&#xA;    query {&#xA;      collection1: allShopifyCollection(filter: {id: {in: &quot;Shopify__Collection__Z2lkOi8vc2hvcGlmeS9Db2xsZWN0aW9uLzE3NzAxMjY3MDQ5OA==&quot;}}) {&#xA;        edges {&#xA;          node {&#xA;            products {&#xA;              title&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;&#xA;      collection2: allShopifyCollection(filter: {id: {in: &quot;Shopify__Collection__someOtherCollection&quot;}}) {&#xA;        edges {&#xA;          node {&#xA;            products {&#xA;              title&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;&#xA;      collection3: allShopifyCollection(filter: {id: {in: &quot;Shopify__Collection__yetAnotherCollection&quot;}}) {&#xA;        edges {&#xA;          node {&#xA;            products {&#xA;              title&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;  `&#xA;)&#xA;</code></pre>&#xA;",5385381,,,,2020-08-22 08:22:17,"",,0,2,0,2020-08-22 08:22:17
63566581,1,63569725,,1,243,"<p>So I know how to return a list of results in the query, but I'm not sure how I send in multiple items to then get back multiple results?</p>&#xA;<p>One result:</p>&#xA;<pre><code>         query {&#xA;              getInventory(sku: &quot;123456-$25&quot;){&#xA;                  price&#xA;                  quantity&#xA;              }&#xA;         }&#xA;</code></pre>&#xA;<p>Multiple results:</p>&#xA;<pre><code>         query {&#xA;              getInventory(sku: &quot;123456-$25&quot;, sku: &quot;654321-$10&quot;){   -- how do I send in a list here?&#xA;                  inventory {&#xA;                     price&#xA;                     quantity&#xA;                   }&#xA;              }&#xA;         }&#xA;</code></pre>&#xA;",1720194,,,,2020-08-26 09:19:32,"GraphQL, how do I send a query that has a list?",<graphql>,1,0,0,2020-08-24 18:20:11
63567457,1,,,0,1087,"<p>I'm using Wordpress, Woocommerce, WooGraphQL, React and Next for a headless eCommerce solution, utilizing SSG and SSR for SEO and performance.</p>&#xA;<p>I'm concerned about performance when it comes to populating product filters on category pages. I only want to show filters relating to the products that match the search.</p>&#xA;<p>Hypothetical example:</p>&#xA;<ul>&#xA;<li>Product search yields 500 results.</li>&#xA;<li>Request data for the first 12 products using GraphQL to show on the first page.</li>&#xA;<li>(Issue) Getting the data to populate the filters for all 500 products.</li>&#xA;</ul>&#xA;<p>In my case, the filters are product categories, and each product is linked to 3 categories.</p>&#xA;<p>The only thing I can think of is to request data for all 500 products and then loop over each product in the array in order to access the related categories and populate the filters.</p>&#xA;<p>In my real-world project, there will really be no more than maybe 100 products but I'd ideally like to take a scalable approach.</p>&#xA;<p>Is pulling this amount of data something I should be concerned about or am I overthinking it? (I'm guessing not) If not, what would be a better solution to this kind of problem?</p>&#xA;<p>Example GraphQL request would look like this:</p>&#xA;<pre><code>query MyQuery {&#xA;  products(first: 500, where: {search: &quot;something&quot;}) {&#xA;    nodes {&#xA;      productCategories {&#xA;        nodes {&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>I understand that taking a page by page appoach to pulling data is best. But the problem of gathering up so much data still stands.</p>&#xA;",2251818,,2251818,2020-08-24 20:11:41,2021-02-07 02:45:16,Efficiently get product categories related to products with GraphQL (WPGraphQL for Wordpress),<wordpress><graphql><next.js><wp-graphql>,2,0,0,2020-08-24 19:21:08
63580610,1,63580665,,1,838,"<p>I am new to react/graphql/apollo however I have followed the guide on how to do a graphql query using Apollo on <a href=""http://www.apollographql.com"" rel=""nofollow noreferrer"">www.apollographql.com</a>. However I don't seem to be able to show the result.</p>&#xA;<p>This is the code I am executing to do the query</p>&#xA;<pre><code>import React from &quot;react&quot;;&#xA;import { useQuery } from 'react-apollo';&#xA;import gql from &quot;graphql-tag&quot;;&#xA;&#xA;const GET_PRODUCTS = gql`&#xA;  query getProducts{&#xA;    products(first: 1) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;}&#xA;`;&#xA;&#xA;const StartPage = () =&gt; {&#xA;  const { loading, error, returnData } = useQuery(GET_PRODUCTS, {&#xA;    variables: {},&#xA;  });&#xA; &#xA;  return (&#xA;    &lt;p&gt;Hello world, this should be the data: {returnData}&lt;/p&gt;&#xA;  );&#xA;};&#xA;&#xA;</code></pre>&#xA;<p>I only see &quot;Hello world, this should be the data:&quot; but the returnData is not printed?&#xA;Can't I just print the entire response?</p>&#xA;<p>When I reload the page I can clearly see in the networks tab that my query&#xA;does get executed and I get a correct response back</p>&#xA;<p>request</p>&#xA;<pre><code>{&quot;operationName&quot;:&quot;getProducts&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query getProducts {\n  products(first: 1) {\n    edges {\n      node {\n        id\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;} &#xA;</code></pre>&#xA;<p>response</p>&#xA;<pre><code>{&quot;data&quot;:{&quot;products&quot;:{&quot;edges&quot;:[{&quot;node&quot;:{&quot;id&quot;:&quot;UHJvZHVjdDo3Mg==&quot;,&quot;name&quot;:&quot;Apple Juice&quot;,&quot;__typename&quot;:&quot;Product&quot;},&quot;__typename&quot;:&quot;ProductCountableEdge&quot;}],&quot;__typename&quot;:&quot;ProductCountableConnection&quot;}}}&#xA;</code></pre>&#xA;<p>So does anyone have an idea why returnData is not printed / is empty?</p>&#xA;",13983792,,,,2020-08-25 14:12:14,React / Apollo: Displaying result of GraphQL query (useQuery hook),<reactjs><graphql><apollo><react-apollo><apollo-client>,1,1,0,2020-08-25 14:03:54
63586384,1,,,0,32,<p>In GraphQL can an object type belong to multiple union types?</p>&#xA;<pre><code>type Foo {&#xA;    id: String!&#xA;}&#xA;type Bar {&#xA;    number: Int!&#xA;}&#xA;union UnionA = Foo | Bar&#xA;union UnionB = Foo&#xA;</code></pre>&#xA;,5382205,,,,2020-08-25 21:52:07,GraphQL object types members of multiple union types?,<graphql>,1,0,0,2020-08-25 20:09:43
63597111,2,,63574977,0,,"<p>I was getting this error because <code>logout mutation</code> implementation code was not present, it was in another branch. SO I switched to that branch which has the code and error get resolved.</p>&#xA;",2674682,,,,2020-08-26 11:55:02,"",,0,0,0,2020-08-26 11:55:02
63603450,1,63609199,,6,1428,"<p>How do I take the return result from the first query and assign that result to a variable to use in the second query? I need the first value result before I can make the second call, but would like to make only 1 call to accomplish this. My query:</p>&#xA;<pre><code>query {&#xA;    test1(sku: &quot;12345&quot;){                    &#xA;          price&#xA;    }&#xA;    test2(itemPrice: $price){ &#xA;          isSuccessful&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",1720194,,4964136,2020-08-27 04:29:04,2020-08-27 04:34:29,GraphQL - How do I use the return value as a variable for the next query?,<graphql>,1,0,0,2020-08-26 18:11:41
63609199,2,,63603450,5,,"<p>Your Query:</p>&#xA;<pre><code>query {&#xA;    test1(sku: &quot;12345&quot;){                    &#xA;          price&#xA;    }&#xA;    test2(itemPrice: $price){ &#xA;          isSuccessful&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>When a query is parsed, it’s converted to an <a href=""https://en.wikipedia.org/wiki/Abstract_syntax_tree"" rel=""noreferrer"">AST</a>, or a tree. In your case your query will look like below:</p>&#xA;<p><a href=""https://i.stack.imgur.com/GkBJ5.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/GkBJ5.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Now there are 3 phases involved with every graphQl query :</p>&#xA;<p>1.<strong>Parse</strong> — A query is parsed into an abstract syntax tree (or AST). ASTs are incredibly powerful and behind tools like ESLint, babel, etc.</p>&#xA;<p>2.<strong>Validate</strong> — The <em>AST</em> is validated against the schema. Checks for correct query syntax and if the fields exist.</p>&#xA;<p>3.<strong>Execute</strong> — The runtime walks through the AST, starting from the root of the tree, invokes resolvers, collects up results, and emits JSON.</p>&#xA;<blockquote>&#xA;<p>The root Query type is the entry point to the tree and contains our&#xA;two root fields, <strong>test1</strong> and <strong>test2</strong>. The <code>test1</code> and <code>test2</code> resolvers&#xA;are executed in parallel (which is typical among all runtimes). The&#xA;tree is executed breadth-first, meaning user must be resolved before&#xA;its children <code>price</code> and <code>isSuccessful</code> are executed.</p>&#xA;</blockquote>&#xA;<p>So basically in a single query you cannot solve your problem as of now.</p>&#xA;",4964136,,4964136,2020-08-27 04:34:29,2020-08-27 04:34:29,"",,0,1,0,2020-08-27 04:27:52
63645986,1,,,2,836,"<p>When querying for list of products I need to show the product information along with variation. I mean i want products query to return something like this</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;product&quot;: {&#xA;      &quot;id&quot;: &quot;1&quot;,&#xA;      &quot;name&quot;: &quot;Polo Shirt&quot;,&#xA;      &quot;productType&quot;: {&#xA;        &quot;name&quot;: &quot;clothing&quot;&#xA;      },&#xA;      &quot;category&quot;: {&#xA;        &quot;name&quot;: &quot;Men's&quot;&#xA;      },&#xA;      &quot;variants&quot;: [&#xA;        {&#xA;          &quot;id&quot;: &quot;1&quot;,&#xA;          &quot;name&quot;: &quot;S&quot;,&#xA;          &quot;variant&quot;: [&#xA;            {&#xA;              &quot;attribute&quot;: {&#xA;                &quot;name&quot;: &quot;Size&quot;&#xA;              },&#xA;              &quot;values&quot;: [&#xA;                {&#xA;                  &quot;name&quot;: &quot;S&quot;&#xA;                }&#xA;              ]&#xA;            }&#xA;          ],&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: &quot;2&quot;,&#xA;          &quot;name&quot;: &quot;XL&quot;,&#xA;          &quot;attributes&quot;: [&#xA;            {&#xA;              &quot;attribute&quot;: {&#xA;                &quot;name&quot;: &quot;Size&quot;&#xA;              },&#xA;              &quot;values&quot;: [&#xA;                {&#xA;                  &quot;name&quot;: &quot;XL&quot;&#xA;                }&#xA;              ]&#xA;            }&#xA;          ],&#xA;        },&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>For such result, I have my schema for products as following</p>&#xA;<pre><code>type Query {&#xA;    products: [Product]&#xA;}&#xA;&#xA;type Product implements Node {&#xA;    id: ID&#xA;    productType: ProductType!&#xA;    name: String!&#xA;    slug: String!&#xA;    description: String!&#xA;    category: Category!&#xA;    attributes: [SelectedAttribute]&#xA;    variants: [ProductVariant]&#xA;    articleNumber: String&#xA;    barcode: String&#xA;}&#xA;&#xA;type SelectedAttribute {&#xA;    attribute: Attribute&#xA;    values: [AttributeValue]&#xA;}&#xA;&#xA;type Attribute implements Node {&#xA;    id: ID&#xA;    name: String&#xA;}&#xA;&#xA;type AttributeValue implements Node {&#xA;    id: ID&#xA;    name: String&#xA;}&#xA;&#xA;type ProductVariant implements Node {&#xA;  id: ID!&#xA;  name: String!&#xA;  sku: String!&#xA;  product: Product!&#xA;  variant: [VariantAttributes]&#xA;}&#xA;&#xA;type VariantAttributes {&#xA;    attribute: Attribute&#xA;    values: VariantAttribute&#xA;}&#xA;&#xA;type VariantAttribute implements Node {&#xA;    id: ID&#xA;    name: String&#xA;    slug: String&#xA;    value: String&#xA;}&#xA;</code></pre>&#xA;<p>The model is</p>&#xA;<pre><code>class Product(models.Model):&#xA;    product_type = models.ForeignKey(&#xA;        ProductType, related_name=&quot;products&quot;, on_delete=models.CASCADE&#xA;    )&#xA;    category = models.ForeignKey(&#xA;        Category,&#xA;        related_name=&quot;products&quot;,&#xA;        on_delete=models.SET_NULL,&#xA;        null=True,&#xA;        blank=True,&#xA;    )&#xA;    name = models.CharField(max_length=128)&#xA;    slug = models.SlugField()&#xA;    description = models.TextField(blank=True)&#xA;&#xA;class Attribute(ModelWithMetadata):&#xA;    name = models.CharField(max_length=100)&#xA;    slug = models.SlugField(max_length=250, unique=True, allow_unicode=True)&#xA;    has_variants = models.BooleanField(default=False)&#xA;&#xA;    def __str__(self):&#xA;        return self.name&#xA;&#xA;&#xA;class AttributeValue(SortableModel):&#xA;    attribute = models.ForeignKey(Attribute, related_name=&quot;values&quot;, on_delete=models.CASCADE)&#xA;    name = models.CharField(max_length=100)&#xA;    slug = models.SlugField(max_length=250, unique=True, allow_unicode=True)&#xA;    value = models.CharField(max_length=100)&#xA;&#xA;&#xA;class ProductAttribute(models.Model):&#xA;    product = models.ForeignKey(Product, on_delete=models.CASCADE)&#xA;    attribute = models.ForeignKey(Attribute, on_delete=models.CASCADE)&#xA;&#xA;    def __str__(self):&#xA;        return self.attribute.name&#xA;&#xA;class VariantAttribute(models.Model):&#xA;    attribute = models.ForeignKey(Attribute, on_delete=models.CASCADE)&#xA;    name = models.CharField(max_length=100)&#xA;    slug = models.SlugField(max_length=250, unique=True, allow_unicode=True)&#xA;    value = models.CharField(max_length=100)&#xA;&#xA;    def __str__(self):&#xA;        return self.value&#xA;&#xA;class ProductVariant(models.Model):&#xA;    product = models.ForeignKey(Product, on_delete=models.CASCADE, related_name=&quot;variants&quot;)&#xA;    variant = models.ManyToManyField(VariantAttribute, related_name=&quot;productvariants&quot;)&#xA;    name = models.CharField(max_length=255, blank=True)&#xA;    sku = models.CharField(max_length=255, unique=True)&#xA;    stock = models.PositiveIntegerField(default=0)&#xA;</code></pre>&#xA;<p>My resolver is following</p>&#xA;<pre><code>query = QueryType()&#xA;mutation = MutationType()&#xA;product = ObjectType('Product')&#xA;product_variant = ObjectType('ProductVariant')&#xA;&#xA;@query.field('products')&#xA;@convert_kwargs_to_snake_case&#xA;def resolve_products(obj, info, **args):&#xA;    products = models.Product.objects.all()&#xA;    return products&#xA;&#xA;@product.field('variants')&#xA;def resolve_product_variants(obj, info):&#xA;    return models.ProductVariant.objects.filter(product=obj)&#xA;&#xA;@product_variant.field('variant')&#xA;def resolve_attributes_of_product_variants(obj, info):&#xA;    variant_attrs = models.Attribute.objects.filter(has_variants=True, productattribute__product=obj)&#xA;    variant_attr_values = models.VariantAttribute.objects.none()&#xA;    for attr in variant_attrs:&#xA;        variant_attr_values |= models.VariantAttribute.objects.filter(attribute=attr)&#xA;    print('variant_attrs', variant_attrs)&#xA;    print('variant_attr_values', variant_attr_values)&#xA;    return [&#xA;        {&#xA;            'attribute': variant_attrs,&#xA;            'values': variant_attr_values&#xA;        }&#xA;    ]&#xA;</code></pre>&#xA;<p>I have no idea how to resolve variants property. Can anyone help me at this, please?</p>&#xA;",6733101,,,,2020-08-29 10:32:11,nested resolvers in Ariadne,<python><django><django-models><ariadne-graphql>,0,0,0,2020-08-29 10:32:11
63648060,2,,63647995,3,,"<p>You need to use <code>.map()</code> for <code>prices</code> also because that's an array as:</p>&#xA;<pre><code>&lt;ul&gt;&#xA;  {product.prices.map(p =&gt; &lt;li&gt;{p}&lt;/li&gt;)}&#xA;&lt;/ul&gt;&#xA;</code></pre>&#xA;<p>Also for <code>resistanceLevels</code> you can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys"" rel=""nofollow noreferrer""><code>Object.keys</code></a> and <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"" rel=""nofollow noreferrer""><code>.map()</code></a> combination as:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const resistanceLevels = {&#xA;   ""UltraHeavy"": 10,&#xA;   ""Heavy"": 8,&#xA;   ""Medium"": 6&#xA;};&#xA;&#xA;const result = Object.keys(resistanceLevels)&#xA;                     .map(k =&gt; resistanceLevels[k]);&#xA;&#xA;console.log(result);</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>Read from the documentation:</p>&#xA;<blockquote>&#xA;<p>The <code>Object.keys()</code> method returns an array of a given object's own enumerable property names, iterated in the same order that a normal loop would.</p>&#xA;</blockquote>&#xA;<blockquote>&#xA;<p>The <code>map()</code> method creates a new array populated with the results of calling a provided function on every element in the calling array.</p>&#xA;</blockquote>&#xA;<p>I guess this gives you the idea how to move further based on the example of <code>prices.map()</code>.</p>&#xA;",7599510,,7599510,2020-08-29 14:33:49,2020-08-29 14:33:49,"",,0,3,0,2020-08-29 14:27:41
63648090,2,,63647995,1,,"<pre><code>const ParentComponent =()=&gt;{&#xA;   return(&#xA;      &lt;div&gt;&#xA;       {productsToRender.map(product =&gt; &lt;ProductDisplay key={product.id} product={product }/&gt;) }&#xA;      &lt;/div&gt;&#xA;   )&#xA;&#xA;}&#xA;export default ParentComponent;&#xA;&#xA;&#xA;const ProductDisplay =(props)=&gt;{&#xA;   return (&#xA;      &lt;div&gt;&#xA;         &lt;h1&gt;{product.name}&lt;/h1&gt; &#xA;         &lt;p&gt;Resistance Levels | Intensity:&lt;/p&gt;&#xA;         &lt;ul&gt;&#xA;            {Object.entries(props.product.resistanceLevels).map(([key, value]) =&gt;{&#xA;                return(&#xA;                    &lt;li&gt;{key} : {value}&lt;/li&gt;&#xA;                )&#xA;            })}&#xA;           &lt;/ul&gt;&#xA;           &lt;ul&gt;&#xA;               {&#xA;                   props.product.prices.map(item =&gt; {&#xA;                       &lt;li&gt;{item}&lt;/li&gt;&#xA;               })&#xA;               }&#xA;           &lt;/ul&gt;&#xA;     &lt;/div&gt;&#xA;   )&#xA;}&#xA;</code></pre>&#xA;",10147342,,10147342,2020-08-29 14:44:28,2020-08-29 14:44:28,"",,0,0,0,2020-08-29 14:30:15
63651761,2,,63649356,1,,"<p>My current approach is in the view itself. I iterate through the fields.tags and search for them in the array. I save the index and use it for frontmatter.tags (they are happily in the same order)</p>&#xA;<p>It is exactly that code:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>&lt;ul className=&quot;tagcloud&quot;&gt;&#xA;  {tags.group.map((tag, idx) =&gt; {&#xA;    var index = tag.edges[0].node.frontmatter.tags.indexOf(&#xA;      tag.fieldValue&#xA;    )&#xA;&#xA;    return (&#xA;      &lt;li key={idx}&gt;&#xA;        &lt;Link&#xA;          to={`/tags/${tag.edges[0].node.fields.tags[index]}`}&#xA;          className=&quot;transition link&quot;&#xA;        &gt;&#xA;          {tag.fieldValue}&#xA;        &lt;/Link&gt;&#xA;      &lt;/li&gt;&#xA;    )&#xA;  })}&#xA;&lt;/ul&gt;&#xA;</code></pre>&#xA;",977017,,1839439,2020-08-31 13:54:38,2020-08-31 13:54:38,"",,0,0,0,2020-08-29 21:00:54
63657502,2,,63657396,1,,"<p>If your field's type is a List, then your resolver must return either an <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol"" rel=""nofollow noreferrer"">iterable</a> (i.e. an array) or a Promise that resolves to one.</p>&#xA;<p>The type for your field is a List (<code>[getReportUnion]</code>). However, inside your resolver, you are returning an object literal:</p>&#xA;<pre><code>return { __typename: &quot;Error&quot;, error: err, message: mesg }&#xA;</code></pre>&#xA;<p>You should return an array instead:</p>&#xA;<pre><code>return [{ __typename: &quot;Error&quot;, error: err, message: mesg }]&#xA;</code></pre>&#xA;<p>There is no way for you to return <em>either</em> a List of <code>getReportResult</code> objects or a single <code>Error</code> object. The only way to do that would be to wrap <code>getReportResult</code> with another type and use that type inside your union instead.</p>&#xA;<pre><code>type Query {&#xA;    getReports(id: ID!, patient_id: Int): GetReportPayload!&#xA;  }&#xA;&#xA;  union GetReportPayload = Error | GetReportResults&#xA;&#xA;  type GetReportResults {&#xA;    results: [Report!]!&#xA;  }&#xA;&#xA;  type Report {&#xA;    id: ID!&#xA;    patientId: Int!&#xA;  }&#xA;&#xA;  type Error {&#xA;    error: Boolean!&#xA;    message: String!&#xA;  }&#xA;</code></pre>&#xA;",6024220,,6024220,2020-08-30 12:43:28,2020-08-30 12:43:28,"",,0,0,0,2020-08-30 12:37:54
63663283,1,,,2,969,"<p>I am trying to automate some stuff that will require to get the current images from a GitHub private repo.</p>&#xA;<p>Ideally, I'd iterate over the root directory and, for all images, get the URL for the RAW file.</p>&#xA;<p>For example:</p>&#xA;<ul>&#xA;<li>For this image: <a href=""https://github.com/Flow2015/logo/blob/master/flowImage01.jpg"" rel=""nofollow noreferrer"">https://github.com/Flow2015/logo/blob/master/flowImage01.jpg</a></li>&#xA;<li>I would like to get <a href=""https://raw.githubusercontent.com/Flow2015/logo/master/flowImage01.jpg"" rel=""nofollow noreferrer"">https://raw.githubusercontent.com/Flow2015/logo/master/flowImage01.jpg</a></li>&#xA;</ul>&#xA;<p>If the URL is not available, I could get around with getting the binary content. However, I couldn't find a way to do that either.</p>&#xA;<p>As an example, this is basically how I am &quot;finding&quot; files that I want de details of.</p>&#xA;<pre><code>{&#xA;  repository(owner: &quot;Flow2015&quot;, name: &quot;logo&quot;) {&#xA;    name&#xA;    object(expression: &quot;master:&quot;) {&#xA;      ... on Tree {&#xA;        entries {&#xA;          name&#xA;          object{&#xA;            ... on Blob {&#xA;              text&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I understand that I could build the URL using Repo/branch/filename, I'm just trying to find a safe way if there is one.</p>&#xA;",4075928,,,,2020-08-31 00:11:54,How to get raw image URL or content from a GitHub repo file using GraphQL,<github><graphql><github-graphql>,0,7,0,2020-08-31 00:11:54
63679219,1,,,0,611,"<p>I am trying to query a single product using Vue Apollo but I don't understand what I am doing wrong. In the console I get the following error:  <code>Observable.js?a7b2:65 Uncaught TypeError: Cannot read property 'product' of undefined</code></p>&#xA;<p><strong>Query:</strong></p>&#xA;<pre><code>export const getProduct = gql`&#xA;  query getProduct ($productId: ID!) {&#xA;    product (where: {id: $productId}) {&#xA;      id&#xA;      title&#xA;      description&#xA;      price&#xA;      productDetails {&#xA;        html&#xA;      }&#xA;      productAssets {&#xA;        id&#xA;        url&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p><strong>Component:</strong></p>&#xA;<pre><code>apollo: {&#xA;  $loadingKey: 'loading',&#xA;  products: {&#xA;    query: getProduct,&#xA;    variables: {&#xA;      $productId: 'ABC123',&#xA;    },&#xA;    result ({data}) {&#xA;      this.loading = false;&#xA;      this.product = data.product;&#xA;      this.assets = data.assets;&#xA;    },&#xA;    error () {&#xA;      this.error = true;&#xA;      this.sentryError = error;&#xA;    },&#xA;  },&#xA;},&#xA;</code></pre>&#xA;<p>If I however hard code the ID in, it works.</p>&#xA;<pre><code>export const product = gql`&#xA;  query getProduct ($product: ID!) {&#xA;    product (where: {id: &quot;ABC123&quot;}) {&#xA;      id&#xA;      title&#xA;      description&#xA;      price&#xA;      productDetails {&#xA;        html&#xA;      }&#xA;      productAssets {&#xA;        id&#xA;        url&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>I don't see what I am missing, any help will be greatly appreciate.</p>&#xA;",3198631,,,,2020-09-02 01:40:27,Vue Apollo query single item with ID,<vue.js><graphql><typeerror><vue-apollo>,1,1,0,2020-08-31 22:57:02
63690767,1,,,2,216,"<p>I'm building app in Gatsby using Apollo to fetch and send data to CMS via GraphQL. All variables declared as <code>String</code>works as expected but when I try to send an array of 5 objects, in console it gets empty array. What's interesting, when I try to do the same operation through Insomnia, GraphiQL app or even Apollo DevTools, all variables work.</p>&#xA;<p>Here's my query</p>&#xA;<pre><code>const ADD_REVIEW = gql`&#xA;  mutation AddReview(&#xA;    $name: String!&#xA;    $caption: String!&#xA;    $shopifyId: String!&#xA;    $rate: [Json!]&#xA;  ) {&#xA;    createReview(&#xA;      data: {&#xA;        author: $name&#xA;        caption: $caption&#xA;        shopifyId: $shopifyId&#xA;        rate: $rate&#xA;      }&#xA;    ) {&#xA;      id&#xA;      author&#xA;      caption&#xA;      rate&#xA;      shopifyId&#xA;    }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;<p>here's array of objects I want to send through mutation</p>&#xA;<pre><code> const [stars, setStars] = useState([&#xA;    {&#xA;      key: 1,&#xA;      checked: true,&#xA;    },&#xA;    {&#xA;      key: 2,&#xA;      checked: true,&#xA;    },&#xA;    {&#xA;      key: 3,&#xA;      checked: true,&#xA;    },&#xA;    {&#xA;      key: 4,&#xA;      checked: false,&#xA;    },&#xA;    {&#xA;      key: 5,&#xA;      checked: false,&#xA;    },&#xA;  ])&#xA;</code></pre>&#xA;<p>and here's submit function</p>&#xA;<pre><code>const [addReview, { data }] = useMutation(ADD_REVIEW)&#xA;&#xA;.&#xA;.&#xA;.&#xA;&#xA;const handleSubmit = (e) =&gt; {&#xA;    e.preventDefault()&#xA;    let shopifyId = 'new id'&#xA;    addReview({&#xA;      variables: { name, caption, shopifyId, stars },&#xA;    }).then((res) =&gt; console.log(res, data))&#xA;  }&#xA;</code></pre>&#xA;<p>Does anyone know where I made mistake?</p>&#xA;",14203529,,,,2020-09-01 15:26:52,Cannot provide array of objects in GraphQL mutation through Apollo,<javascript><graphql><gatsby><react-apollo>,0,3,0,2020-09-01 15:26:52
63703370,1,,,0,266,"<p>I have following mutation in graphql (creating new customer - something like user registration):</p>&#xA;<pre><code>mutation {&#xA;  createCustomer(&#xA;    input: {&#xA;      firstname: &quot;Bob&quot;&#xA;      lastname: &quot;Loblaw&quot;&#xA;      email: &quot;bobloblaw@example.com&quot;&#xA;      password: &quot;b0bl0bl@w&quot;&#xA;      is_subscribed: true&#xA;    }&#xA;  ) {&#xA;    customer {&#xA;      firstname&#xA;      lastname&#xA;      email&#xA;      is_subscribed&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>It's copy and paste from Magento 2.4 documentation: <a href=""https://devdocs.magento.com/guides/v2.4/graphql/mutations/create-customer.html"" rel=""nofollow noreferrer"">https://devdocs.magento.com/guides/v2.4/graphql/mutations/create-customer.html</a></p>&#xA;<p>When i'm trying to make <strong>other mutation call</strong>, i am getting the same error:</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Schema is not configured for mutations.&quot;,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 1,&#xA;          &quot;column&quot;: 1&#xA;        }&#xA;      ],&#xA;      &quot;stack&quot;: [&#xA;        &quot;GraphQLError: Schema is not configured for mutations.&quot;,&#xA;        &quot;    at getOperationRootType (/home/marcin/projects/a24store/frontend/node_modules/graphql/utilities/getOperationRootType.js:28:13)&quot;,&#xA;        &quot;    at executeOperation (/home/marcin/projects/a24store/frontend/node_modules/graphql/execution/execute.js:210:61)&quot;,&#xA;        &quot;    at executeImpl (/home/marcin/projects/a24store/frontend/node_modules/graphql/execution/execute.js:104:14)&quot;,&#xA;        &quot;    at execute (/home/marcin/projects/a24store/frontend/node_modules/graphql/execution/execute.js:64:35)&quot;,&#xA;        &quot;    at /home/marcin/projects/a24store/frontend/node_modules/express-graphql/index.js:152:16&quot;,&#xA;        &quot;    at processTicksAndRejections (internal/process/task_queues.js:97:5)&quot;&#xA;      ]&#xA;    }&#xA;  ],&#xA;  &quot;extensions&quot;: {}&#xA;}&#xA;</code></pre>&#xA;<p><strong>My Magento 2 setup is correct, because other queries like query for getting products, categories etc. is working and give my correct response.</strong>&#xA;I'm using clean install of Magento 2.4 version.</p>&#xA;<p>Magento docs don't even mention about change something in backend code. But i found something like this: <a href=""https://www.mobelop.com/blog/magento2-graphql-tips-and-tricks/"" rel=""nofollow noreferrer"">https://www.mobelop.com/blog/magento2-graphql-tips-and-tricks/</a>. There is section called: &quot;Enabling Mutations in Magento GraphQL&quot;.</p>&#xA;<p>So i think i should extend or change graphql schema in some of modules. But i don't know which and where.</p>&#xA;",14207766,,,,2020-09-02 10:12:31,"Magento 2, getting an error: ""Schema is not configured for mutations."" while call mutation",<php><magento><graphql><magento2>,0,2,0,2020-09-02 10:12:31
63709272,1,,,-3,52,"<p>Based on the basic grandstack app I am trying to load data from neo4j and visualize them based on the forcegraph 2d package. However, I am not capable of retrieving the data in the structure so that I can put them in the forcegraph.</p>&#xA;<p>As a test query in schema.graphql I use:</p>&#xA;<p>networkData: [networkDat] @cypher(statement: &quot;&quot;&quot;&#xA;MATCH (n)--&gt;(m)&#xA;WITH id(n) AS source, id(m) AS target&#xA;RETURN {source:source, target:target} as rob&#xA;LIMIT 5&#xA;&quot;&quot;&quot;)</p>&#xA;<p>and in my react component:&#xA;const GET_NETWORK_QUERY = gql` { networkData (first:2){ source target } }</p>&#xA;<p>then I do:&#xA;const { data } = useQuery(GET_NETWORK_QUERY)</p>&#xA;<p>if I log this in it gives me:</p>&#xA;<p>{networkData: [{source: 2, target: 1, __typename: &quot;networkDat&quot;}, {source: 1274, target: 3, __typename: &quot;networkDat&quot;}]}</p>&#xA;<p>I guess the crucial point is to restructure the data in the correct way, so what I need is:&#xA;{nodes: [{name: &quot;A&quot;}, {name: &quot;B&quot;}], links: [{source: &quot;A&quot;, target: &quot;B&quot;}]}</p>&#xA;<p>Thanks for any advice!</p>&#xA;",10917307,,10917307,2020-09-13 08:57:33,2020-09-13 08:57:33,Grandstack and Forcegraph,<neo4j><graphql><grandstack>,1,3,0,2020-09-02 16:02:53
63713150,1,,,2,697,"<p>Currently in github I am able to get my contributions for the last year using the GraphQL API.</p>&#xA;<pre><code>{&#xA;  user(login: &quot;username&quot;) {&#xA;    contributionsCollection {&#xA;      contributionCalendar {&#xA;        weeks {&#xA;          contributionDays {&#xA;            contributionCount&#xA;            date&#xA;            color&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I was not able to find the equivalent in gitlab GraphQL API. Is it possible to have this information in gitlab? Even that it is not using the GraphQL it is ok, just would like to be able to collect that.</p>&#xA;",666479,,,,2022-11-25 10:39:00,Get contributions in Gitlab,<git><github><graphql><gitlab>,2,0,0,2020-09-02 20:33:07
63714198,2,,63713150,1,,"<p>You can get a user’s contributions from the events API:<br />&#xA;<a href=""https://docs.gitlab.com/ee/api/events.html#get-user-contribution-events"" rel=""nofollow noreferrer"">https://docs.gitlab.com/ee/api/events.html#get-user-contribution-events</a></p>&#xA;<pre><code>https://gitlab.example.com/api/v4/users/:id/events&#xA;</code></pre>&#xA;<p>You can also get a JSON representation of the recent contributions for a user at the user’s page</p>&#xA;<pre><code>https://gitlab.example.com/users/:username/contributions.json&#xA;</code></pre>&#xA;",1549818,,,,2020-09-02 22:13:03,"",,0,3,0,2020-09-02 22:13:03
63721718,2,,63677910,2,,"<p>If I understood you correctly, <code>AddDataDocument</code> is a <code>DocumentNode</code> object (the return value of the <code>gql</code> invocation) and you want to get back the query as a string from it. Is that it?</p>&#xA;<p>If so try this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { print } from 'graphql'&#xA;&#xA;...&#xA;&#xA;request(app.getHttpServer())&#xA;  .post('/graphql')&#xA;  .send({&#xA;    operationName: null,&#xA;    query: print(AddDataDocument),&#xA;    variables: { input: addDataInput }&#xA;  })&#xA;</code></pre>&#xA;<p>I've faced a similar problem a couple of days ago (the &quot;how do I get the parsed document object back into a string&quot; part of the question).</p>&#xA;<p>Here's where the idea came from:</p>&#xA;<p><a href=""https://github.com/apollographql/graphql-tag/issues/144"" rel=""nofollow noreferrer"">https://github.com/apollographql/graphql-tag/issues/144</a></p>&#xA;",2799276,,,,2020-09-03 10:26:42,"",,0,0,0,2020-09-03 10:26:42
63734362,1,,,2,77,"<p>Let's say I run an online store that sells coffee beans at volume. It's entirely reasonable to offer discounts based on quantity, so the price field is actually a function:</p>&#xA;<pre><code>type Bean {&#xA;  id: ID! @id&#xA;  title: String!&#xA;  description: String!&#xA;  price(quantity: float, unit: WeightUnit = KG): Float!&#xA;}&#xA;&#xA;enum WeightUnit {&#xA;  KG&#xA;  LB&#xA;}&#xA;</code></pre>&#xA;<p>Beyond this point I'm not sure how I would attach a specific function to a unique instance of Bean. I've also toyed with the idea of <code>prices</code> field where I can list an array of <code>SizePriceTuple</code>, but Prisma forces me to have an id field:</p>&#xA;<pre><code>type Bean {&#xA;  ...&#xA;  prices: [SizePriceTuple]&#xA;}&#xA;&#xA;type SizePriceTuple {&#xA;  id: ID! @id&#xA;  size: Int!&#xA;  unit: WeightUnit!&#xA;  price: Int!&#xA;}&#xA;</code></pre>&#xA;<p>I don't think tuples of (size, unit, price) is really something that needs an ID attached to it, and I'm not sure what a mutation to create a new Bean with <code>prices</code> would look like.</p>&#xA;<p>Can someone either a) provide an example where there the <code>price</code> field is actually a function that looks something up or b) show a mutation and a query of a Bean with <code>prices</code> being an array of <code>SizePriceTuple</code> or c) how to make a type without Prisma (v1.34) yelling at me to make an id field?</p>&#xA;",507058,,,,2020-09-04 03:23:08,How to make a Graphql type where Price is dependent on Quantity,<graphql><graphql-js><prisma-graphql>,0,0,0,2020-09-04 03:23:08
63746709,1,63784484,,0,929,<p>I'm trying to fetch products and their delivery rates from the [deliveryProfiles] object (or shipping profiles). Using the below query I am able to pull all products that are associated with a [deliveryProfile] but I can't figure out how to fetch the Delivery Rate for each product. Our store only uses static shipping rates so I believe I need to use something like the [rateProvider] query below. But I don't know or even how to modified the query to include something like this.</p>&#xA;<pre><code>rateProvider {... on DeliveryRateDefinition {id price {amount}&#xA;</code></pre>&#xA;<p>Current query I'm using:</p>&#xA;<pre><code>query {&#xA;  deliveryProfiles (first: 5) {&#xA;    edges {&#xA;      node {&#xA;        profileItems (first: 10) {&#xA;          edges {&#xA;            node {&#xA;              product {&#xA;                  id&#xA;                  handle&#xA;              }&#xA;              variants (first: 10) {&#xA;                edges {&#xA;                  node {&#xA;                    id&#xA;                    title&#xA;                    sku&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,3910796,,3910796,2020-09-04 19:45:46,2020-09-07 21:30:03,Shopify GraphQL to fetch Delivery Rate for Products,<graphql><shopify><shipping><shopify-api>,1,0,0,2020-09-04 18:59:59
63784484,2,,63746709,1,,<p>Figured it out. It was simply a matter of understanding nesting. Here is how you fetch both products and delivery rates in Shopify using GraphQL API:</p>&#xA;<pre><code>query {&#xA;  deliveryProfiles (first: 2) {&#xA;    edges {&#xA;      node {&#xA;        profileItems (first: 8) {&#xA;          edges {&#xA;            node {&#xA;              product {&#xA;                id&#xA;                handle&#xA;              }&#xA;              variants (first: 8) {&#xA;                edges {&#xA;                  node {&#xA;                    id&#xA;                    title&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;        profileLocationGroups {&#xA;          locationGroupZones(first: 2) {&#xA;            edges {&#xA;              node {&#xA;                methodDefinitions(first: 2) {&#xA;                  edges {&#xA;                    node {&#xA;                      rateProvider {&#xA;                        ... on DeliveryRateDefinition {&#xA;                          id&#xA;                          price {&#xA;                            amount&#xA;                          }&#xA;                        }&#xA;                        ... on DeliveryParticipant {&#xA;                          id&#xA;                          fixedFee {&#xA;                            amount&#xA;                            currencyCode&#xA;                          }&#xA;                          percentageOfRateFee&#xA;                          participantServices {&#xA;                            active&#xA;                            name&#xA;                          }&#xA;                        }&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }        &#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,3910796,,,,2020-09-07 21:30:03,"",,0,1,0,2020-09-07 21:30:03
63802053,1,,,1,492,"<p>I'm working on implementing services compatible with Apollo GraphQL federation; my providing services are written in Lacinia (GraphQL library for Clojure).</p>&#xA;<p>I have one service that defines Users:</p>&#xA;<pre><code>type User @key(fields: &quot;id&quot;) {&#xA;  id: String!&#xA;  name: String!&#xA;}&#xA;&#xA;type Query {&#xA;  user_by_id(id:String!) : User&#xA;}&#xA;&#xA;schema { query: Query }&#xA;</code></pre>&#xA;<p>and and a second that defines Products and extends Users:</p>&#xA;<pre><code>type User @extends @key(fields: &quot;id&quot;) {&#xA;  id: String! @external&#xA;  favorite_products: [Product]&#xA;}&#xA;&#xA;type Product @key(fields: &quot;upc&quot;) {&#xA;  upc: String!&#xA;  name: String!&#xA;  price: Int!&#xA;}&#xA;&#xA;type Query {&#xA;    product_by_upc(upc: String!) : Product&#xA;}&#xA;&#xA;schema { query: Query }&#xA;</code></pre>&#xA;<p>When I execute a query that spans services:</p>&#xA;<pre><code>{&#xA;  user_by_id(id: &quot;me&quot;) {&#xA;    id&#xA;    name&#xA;    favorite_products {&#xA;      upc&#xA;      name&#xA;      price&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I get a failure; the following request is sent to the <code>products</code> service:</p>&#xA;<pre><code>INFO  products.server - {:query &quot;query($representations:[_Any!]!){_entities(representations:$representations){...on User{favorite_products{upc name price}}}}&quot;, :vars {:representations [{:__typename &quot;User&quot;, :id &quot;me&quot;}]}, :line 52}&#xA;</code></pre>&#xA;<p>and that fails, because the products service shouldn't, as far as I know, have to provide the equivalent of <code>__resolveReference</code> for type <code>User</code> (which it extends); just type <code>Product</code>.</p>&#xA;<p>This is very unclear in the documentation and I'll experiment with providing a kind of stub reference resolver in Product for stubs of User.</p>&#xA;",530100,,,,2020-09-08 22:40:57,Why am I seeing the _entities request in one service when the entity is native to another?,<apollo-federation>,1,1,0,2020-09-08 21:55:17
63804495,1,63805714,,0,297,"<p>I am using Shopify's GraphQL Tool to verify that my query is correct and it response exactly what I would expect to see <a href=""https://i.stack.imgur.com/ZZCnT.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZZCnT.png"" alt=""screenshot of shopify graphql tool"" /></a></p>&#xA;<p>Here is the code that I'm using on my storefront.</p>&#xA;<pre><code>const query = `{&#xA;  products(first: 1, query: &quot;sku:[DUMMY_SKU_HERE]&quot;) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        handle&#xA;        onlineStoreUrl&#xA;        title&#xA;        images(first: 1) {&#xA;          edges {&#xA;            node {&#xA;              transformedSrc(maxWidth: 100, maxHeight: 100)&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}`;&#xA;&#xA;fetch(&quot;https://dummystore.myshopify.com/api/2020-07/graphql&quot;, {&#xA;  method: &quot;POST&quot;,&#xA;  headers: {&#xA;    Accept: &quot;application/json&quot;,&#xA;    &quot;Content-Type&quot;: &quot;application/graphql&quot;,&#xA;    &quot;X-Shopify-Storefront-Access-Token&quot;: access_token,&#xA;  },&#xA;  body: query,&#xA;})&#xA;.then((response) =&gt; response.json())&#xA;.then((response) =&gt; {&#xA;  console.log(response);&#xA;})&#xA;.catch((error) =&gt; console.error(error));&#xA;</code></pre>&#xA;<p>and here is the very incorrect response that I'm getting from Shopify. Not only is it incorrect, but no matter what SKU I pass in for my query it returns the exact same product data.</p>&#xA;<p><a href=""https://i.stack.imgur.com/hmGv8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hmGv8.png"" alt=""screenshot of incorrect shopify response"" /></a></p>&#xA;",1272404,,,,2020-09-09 06:13:16,Shopify GraphQL inaccurate response,<graphql><shopify><liquid>,1,0,0,2020-09-09 03:51:19
63805714,2,,63804495,1,,"<p>You are confusing the Admin GraphQL with the Storefront GraphQL.</p>&#xA;<p>The available Storefront GraphQL <code>query</code> params for the <code>products</code> are:</p>&#xA;<pre><code>available_for_sale&#xA;created_at&#xA;product_type&#xA;tag&#xA;title&#xA;updated_at&#xA;variants.price&#xA;vendor&#xA;</code></pre>&#xA;<p>There is no SKU there.</p>&#xA;<p>Your screenshot seems to show the GraphiQL Shopify App that is tied to the Admin GraphQL API, not the Storefront GraphQL API.</p>&#xA;<p>That's why you get the same result, since the query is just ignored.</p>&#xA;",2329464,,,,2020-09-09 06:13:16,"",,0,3,0,2020-09-09 06:13:16
63808085,2,,63807883,0,,"<p>That error is a classic sign that you have an infinite loop in your code. It is particularly common when that infinite loop is due to infinite recursion. Each time you call a function, JS has to allocate some stack space for the stackframe. If that function always calls itself, then it will keep trying to allocate more and more space until eventually, it crashes due to having no more memory available to allocate from.</p>&#xA;<p>Try removing the unguarded call to <code>fetchEvents()</code> in your <code>useEffect()</code> code block.</p>&#xA;",507784,,,,2020-09-09 08:50:33,"",,0,0,0,2020-09-09 08:50:33
63808724,2,,63709272,0,,<p>What does your query look like in GraphQL? How is your schema set up? You're more than likely going to have to make the request and spend some time figuring out how to restructure the data received from your query to match what forcegraph is expecting.</p>&#xA;,6247361,,,,2020-09-09 09:28:50,"",,0,2,0,2020-09-09 09:28:50
63813932,1,,,1,398,"<p>Tl;Dr: I need to change my Graphql query so it will display each product on a separate row with it's 'rateProvider' (or shipping rate) data in columns next to it.</p>&#xA;<hr>&#xA;<p>I'm retrieving Shopify API data using the query below in Google Sheets using The API Connector add-on and following the instructions here for GraphQL: <a href=""https://mixedanalytics.com/knowledge-base/access-shopify-data-in-google-sheets/"" rel=""nofollow noreferrer"">https://mixedanalytics.com/knowledge-base/access-shopify-data-in-google-sheets/</a></p>&#xA;<p>The query retrieves Shopify products and their delivery profile. But all products are being displayed in a single row based on their delivery profile? For instance, if 10 products are in delivery profile ($100 Shipping) then all 10 products for that delivery profile would appear in a single row together with their delivery profile data like first example below.</p>&#xA;<p>But I want each product to be displayed on separate rows with the delivery profile data in the columns beside it like the second example below *I am also not sure of how to setup the proper pagination for this query to pull 'all products'.</p>&#xA;<p>Example 1:<br />&#xA;product #1 | product #2 | deliveryProfile ($100 shipping)<br />&#xA;product #1 | product #2 | deliveryProfile ($50 shipping)<br /></p>&#xA;<p>Example: 2:<br />&#xA;product #1 | deliveryProfile ($100 shipping)<br />&#xA;product #2 | deliveryProfile ($100 shipping)<br />&#xA;product #1 | deliveryProfile ($50 shipping)<br />&#xA;product #2 | deliveryProfile  ($50 shipping)<br /></p>&#xA;<pre><code>query ($cursor: String) {&#xA;  deliveryProfiles (first: 5) {&#xA;    edges {&#xA;      node {&#xA;        profileItems (first: 5, after: $cursor) {&#xA;          edges {&#xA;           cursor&#xA;            node {&#xA;              product {&#xA;                id&#xA;                handle&#xA;              }&#xA;              variants (first: 5) {&#xA;                edges {&#xA;                  node {&#xA;                    id&#xA;                    title&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;        profileLocationGroups {&#xA;          locationGroupZones(first: 5) {&#xA;            edges {&#xA;              node {&#xA;                methodDefinitions(first: 5) {&#xA;                  edges {&#xA;                    node {&#xA;                      rateProvider {&#xA;                        ... on DeliveryRateDefinition {&#xA;                          id&#xA;                          price {&#xA;                            amount&#xA;                          }&#xA;                        }&#xA;                        ... on DeliveryParticipant {&#xA;                          id&#xA;                          fixedFee {&#xA;                            amount&#xA;                            currencyCode&#xA;                          }&#xA;                          percentageOfRateFee&#xA;                          participantServices {&#xA;                            active&#xA;                            name&#xA;                          }&#xA;                        }&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }        &#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3910796,,1595451,2020-09-10 02:28:50,2020-09-10 14:18:59,Change Graphql query so it will display each product on a separate row,<google-sheets><graphql><shopify-api>,1,6,0,2020-09-09 14:36:19
63845838,2,,60656730,1,,"<p>I used to have the same problem and solved it with Apollo upload link. Now when the app got into the production phase I realized that Apollo client took 1/3rd of the gzipped built files and I created minimal graphql client just for keystone use with automatic image upload. The package is available in npm: <a href=""https://www.npmjs.com/package/@sylchi/keystone-graphql-client"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/@sylchi/keystone-graphql-client</a></p>&#xA;<p>Usage example that will upload github logo to user profile if there is an user with avatar field set as file:</p>&#xA;<pre><code>import {  mutate } from  '@sylchi/keystone-graphql-client'&#xA;&#xA;const  getFile  = () =&gt;  fetch('https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png',&#xA;{&#xA;    mode:  &quot;cors&quot;,&#xA;    cache:  &quot;no-cache&quot;&#xA;})&#xA;.then(response  =&gt;  response.blob())&#xA;.then(blob  =&gt; {&#xA;    return  new  File([blob], &quot;file.png&quot;, { type:  &quot;image/png&quot; })&#xA;});&#xA;&#xA;getFile().then(file  =&gt; {&#xA;&#xA;const  options  = {&#xA;    mutation: `&#xA;        mutation($id: ID!, $data: UserUpdateInput!){&#xA;            updateUser(id: $id, data: $data){&#xA;                id&#xA;            }&#xA;        }&#xA;    `,&#xA;    variables: {&#xA;        id:  &quot;5f5a7f712a64d9db72b30602&quot;, //replace with user id&#xA;        data: {&#xA;            avatar:  file&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;mutate(options).then(result  =&gt;  console.log(result));&#xA;&#xA;});&#xA;</code></pre>&#xA;<p>The whole package is just 50loc with 1 dependency :)</p>&#xA;",9745888,,,,2020-09-11 11:05:03,"",,0,0,0,2020-09-11 11:05:03
63933529,1,63942124,,-2,1891,"<p>I'm trying to use type Number and type Array in my typedefs for a Product type in GraphQL. But GraphQL gives me some errors in the console. It's my first time using GraphQL though.</p>&#xA;<pre><code>Unknown type &quot;Array&quot;.&#xA;&#xA;Unknown type &quot;Number&quot;.&#xA;</code></pre>&#xA;<p>Here's the typedef I'm trying to create.</p>&#xA;<pre><code> type Product {&#xA;    sku: String&#xA;    productName: String&#xA;    isNewProduct: Boolean&#xA;    isPromo: Boolean&#xA;    promoType: String&#xA;    promoPrice: Number&#xA;    promoStart: String&#xA;    promoEnd: String&#xA;    stockingPrice: Number&#xA;    finalPrice: Number&#xA;    isActiveProduct: Boolean&#xA;    availableQuantity: Number&#xA;    quantityUnit: String&#xA;    category: String&#xA;    saleType: String&#xA;    manufactureCompany: String&#xA;    year: String&#xA;    color: String&#xA;    tags: Array&#xA;    variantID: String&#xA;    description: String&#xA;  }&#xA;</code></pre>&#xA;<p>I checked around and saw that there are type ID and type Float in the case for numbers.</p>&#xA;<p>But, I'm writing JavaScript. There's a possibility that the promoPrice property will be getting either a float or an int and I don't want an error thrown if that's the case. That's why I want to use type Number.</p>&#xA;<p>Also, what do I do in the case for arrays containing both strings and numbers?</p>&#xA;",12419017,,,,2020-09-17 16:13:25,How to use type Number or Array in GraphQL typedefs,<node.js><graphql><typedef>,1,1,0,2020-09-17 07:50:37
63934293,2,,60279166,0,,"<h2><strong>Problem solved:</strong></h2>&#xA;<p>Using input and a mutator in the back-end helps solve the problem.&#xA;Not using the last mutation above anymore. Only using:&#xA;Example code:</p>&#xA;<p><strong>Mutation Order</strong></p>&#xA;<pre><code>   createOrder(&#xA;    input: OrderInput! @spread&#xA;    ): Order @field(resolver: &quot;OrderMutator@create&quot;)&#xA;</code></pre>&#xA;<p><strong>Types</strong></p>&#xA;<pre><code>type Order {&#xA;    order_id: ID!&#xA;    site_id: ID&#xA;    user_id: ID&#xA;    customer_name: String&#xA;    site: Site! @belongsTo&#xA;    order_rules: [Order_rule!]&#xA;}&#xA;&#xA;type Order_rule {&#xA;    order_rule_id: ID!&#xA;    order_id: ID&#xA;    photo_id: ID&#xA;    product_id: ID&#xA;    site_id: ID&#xA;    order: Order! @belongsTo&#xA;}&#xA;</code></pre>&#xA;<p><strong>Input types</strong></p>&#xA;<pre><code>input OrderInput {&#xA;    order_id: ID!&#xA;    site_id: ID&#xA;    user_id: ID&#xA;    customer_name: String&#xA;    order_rules: [InputOrder_rule]&#xA;}&#xA;&#xA;input InputOrder_rule {&#xA;    photo_id: ID&#xA;    product_id: ID&#xA;    site_id: ID&#xA;    order_id: ID&#xA;}&#xA;</code></pre>&#xA;<p><strong>Mutator Order <em>(removed Order_ruleMutator)</em></strong></p>&#xA;<p>Save Order, Add the Order_rule fields to Order and save Order_rule.</p>&#xA;<pre><code>use App\Order;&#xA;use App\Order_rule;&#xA;&#xA;class OrderMutator&#xA;{&#xA;    public function create($rootValue, array $args, GraphQLContext $context)&#xA;    {&#xA; &#xA;        $order = new \App\Order($args);&#xA;        $order-&gt;save();&#xA;    &#xA;        foreach($args['order_rules'] as $orderRules)&#xA;        {&#xA;            $data_array = &#xA;            array(&#xA;            'order_id' =&gt; $order-&gt;id,&#xA;            'site_id' =&gt; $orderRules['site_id'],&#xA;            'photo_id' =&gt; $orderRules['photo_id'],&#xA;            'product_id' =&gt; $orderRules['product_id'],&#xA;            );&#xA;&#xA;            $orderRule = new \App\Order_rule($data_array);&#xA;            $orderRule-&gt;save();            &#xA;&#xA;        }&#xA;        return $order;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>This made it work for me, but any additional tips are always welcome!</p>&#xA;",12438950,,,,2020-09-17 08:36:52,"",,0,0,0,2020-09-17 08:36:52
63942124,2,,63933529,3,,"<p>The GraphQL schema language supports the scalar types of String, Int, Float, Boolean, and ID.&#xA;Use Int if you want to use Number. If your tags are Array of Strings then You could actually define like <code>tags: [String]</code></p>&#xA;",11936396,,,,2020-09-17 16:13:25,"",,0,1,0,2020-09-17 16:13:25
63964921,1,,,0,3094,"<p>I'm attempting to recover a customer using the customerAccessToken that is given when the user logs in to Shopify.</p>&#xA;<p>Using Apollo, here's my code:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>this.apollo.mutate({&#xA;  mutation: getCustomerFromToken,&#xA;  variables: {&#xA;    input: {&#xA;      customerAccessToken: '217b9a6952c28eb4db376487a6301294' // Also tried btoa('217b9a6952c28eb4db376487a6301294')&#xA;    }&#xA;  },&#xA;})&#xA;</code></pre>&#xA;<p>Here's my GraphQL query:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>query getCustomerFromToken($customerAccessToken: String!) {&#xA;  customer(customerAccessToken: $customerAccessToken) {&#xA;    id&#xA;    addresses(first: 5) {&#xA;      edges {&#xA;        node {&#xA;        address1&#xA;        address2&#xA;        company&#xA;        city&#xA;        province&#xA;        zip&#xA;        country&#xA;        phone&#xA;        }&#xA;      }&#xA;    }&#xA;    orders(first: 200) {&#xA;      edges {&#xA;        cursor&#xA;        node {&#xA;          id&#xA;          totalPriceV2 {&#xA;            amount&#xA;            currencyCode&#xA;          }&#xA;          processedAt&#xA;          orderNumber&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<hr />&#xA;<p>Here's the login GraphQL code I'm using to retrieve the accessToken from Shopify:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>mutation customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!) {&#xA;  customerAccessTokenCreate(input: $input) {&#xA;    customerAccessToken {&#xA;      accessToken&#xA;      expiresAt&#xA;    }&#xA;    customerUserErrors {&#xA;      code&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3893519,,,,2020-09-19 04:26:42,GraphQL error: Variable $customerAccessToken of type String! was provided invalid value,<graphql><shopify><shopify-api>,1,0,0,2020-09-19 03:11:29
63976284,2,,63975001,1,,"<p>You can simply do this if I understood your question properly:</p>&#xA;<pre><code>let fetchAll = useCallback(() =&gt; {&#xA;  if (fetchMoreOne) fetchMoreOne();&#xA;  if (fetchMoreTwo) fetchMoreTwo();&#xA;}, [fetchMoreOne, fetchMoreTwo]);&#xA;</code></pre>&#xA;",1693859,,,,2020-09-20 06:50:43,"",,0,2,0,2020-09-20 06:50:43
63982294,1,,,-1,445,"<p>I’m having an issue and not sure if it’s my understanding of GraphQL or an issue with the platform i'm using (Strapi).</p>&#xA;<p>Context: For my use case, I want to show a portfolio of projects (or 'cases'). Each case has a group of contributors that worked on it. This field is separate to the author / creator of a case. The issue is that for technical reasons, a Case's contents is split into two types: draft and published. Which means when I want to get all articles, I need to go one level 'deeper' in the nesting to also include the array of contributors.</p>&#xA;<pre><code>Case&#xA;-- Draft&#xA;---- Caseinfo&#xA;------ Contributors&#xA;&#xA;-- Published&#xA;---- CaseInfo&#xA;------ Contributors&#xA;</code></pre>&#xA;<p>Currently I can get allCase and get the contents of each case, plus its contributors:</p>&#xA;<pre><code>// Used in Gatsby's `&lt;StaticQuery /&gt;`&#xA;// This works fine.&#xA;&#xA;  allCase {&#xA;    edges {&#xA;      node {&#xA;        contributors {&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>But when I try to include the nesting</p>&#xA;<pre><code>  allCase(filter: {status: {eq: &quot;published&quot;}}) {&#xA;    edges {&#xA;      node {&#xA;        published_contents {&#xA;          id&#xA;          title&#xA;          // Cannot query field &quot;contributors&quot; on type &quot;CasePublished_contents&quot;.&#xA;          contributors {&#xA;              name&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>So as soon as the contributors field is nested one level deeper, I cannot query it?</p>&#xA;<p>Conceptually, can you make a deeply nested GraphQL query like this and expect it to follow all relational content types “down the tree”?</p>&#xA;",11223220,,5585371,2020-09-20 19:43:39,2020-09-20 19:43:39,GraphQL - What are best practices for nested queries?,<javascript><graphql><strapi>,1,1,0,2020-09-20 18:23:37
63982575,2,,63982294,0,,"<p>Yes, you cannot query a field of a higher-level entity on the lower-level. The <code>contributors</code> field only exists on the node (a <code>CaseInfo</code>?) and not on the <code>CasePublished_contents</code> type.</p>&#xA;<p>Just don't nest it:</p>&#xA;<pre><code>allCase(filter: {status: {eq: &quot;published&quot;}}) {&#xA;  edges {&#xA;    node {&#xA;      published_contents {&#xA;        id&#xA;        title&#xA;      }&#xA;      contributors {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1048572,,,,2020-09-20 18:57:04,"",,0,3,0,2020-09-20 18:57:04
64015249,2,,64014541,1,,"<p>You can use bracket notation to access the key with <code>dataType</code>'s value:</p>&#xA;<pre><code>fetch[dataType]&#xA;</code></pre>&#xA;<p>Since <code>map()</code> already creates an array, you don't need to declare <code>allResults.push()</code>. Instead, just use the array returned by <code>map()</code>:</p>&#xA;<pre><code>const allResults = fetch[dataType].edges.map(item =&gt; item);&#xA;</code></pre>&#xA;<p>In fact, if you don't need a copy of the array, you can just assign directly:</p>&#xA;<pre><code>const allResults = fetch[dataType].edges;&#xA;</code></pre>&#xA;",1440565,,,,2020-09-22 17:55:24,"",,0,0,0,2020-09-22 17:55:24
64046343,2,,64041610,0,,"<p>I just realized I had inconsistency in my <code>schema.graphqls</code>.</p>&#xA;<p>Schema says:</p>&#xA;<pre><code>input ProductOrderDetailsInput {&#xA;    orderUnits: [OrderUnitInput]&#xA;    quantity: Float!&#xA;}&#xA;</code></pre>&#xA;<p>But the class was</p>&#xA;<pre><code>&#xA;data class ProductOrderDetailsInput(&#xA;    val orderUnit: OrderUnitInput,&#xA;    val quantity: Float&#xA;)&#xA;</code></pre>&#xA;<p>I matched them both so now it works</p>&#xA;",5967828,,,,2020-09-24 12:21:26,"",,0,0,0,2020-09-24 12:21:26
64050929,1,,,0,1830,"<p>I have some operations (query/mutation, and sometimes some fragments at the bottom of the file) defined in <code>.gql</code> files, sometimes more than one in a single file.</p>&#xA;<p>I would like to import these into my JS/TS files, possibly also generate corresponding types for TypeScript.</p>&#xA;<p>I set up a 3 files example here:</p>&#xA;<p><a href=""https://gist.github.com/balazsorban44/352d5295f604fb4274bfc934937737a1"" rel=""nofollow noreferrer"">https://gist.github.com/balazsorban44/352d5295f604fb4274bfc934937737a1</a></p>&#xA;<p>The <code>queries.gql</code> file is the source. They should generate corresponding module types in a file (see <code>generated-types.d.ts</code>), so I can import these into my <code>index.ts</code> file and use it to make graphql calls with a simple <code>fetch</code>.</p>&#xA;<p>What I have tried so far are these tools/packages:</p>&#xA;<ul>&#xA;<li><a href=""https://github.com/apollographql/graphql-tag#readme"" rel=""nofollow noreferrer"">graphql-tag/loader</a></li>&#xA;<li><a href=""https://github.com/samsarahq/graphql-loader"" rel=""nofollow noreferrer"">webpack-graphql-loader</a></li>&#xA;<li><a href=""https://github.com/VitorLuizC/graphql-raw-loader"" rel=""nofollow noreferrer"">graphql-raw-loader</a></li>&#xA;</ul>&#xA;<p>As far as I can tell, none of these above support multiple operations per file exported as a string, only multiple operations as DocumentNode, or the entire file as a string.</p>&#xA;<ul>&#xA;<li><a href=""https://graphql-code-generator.com/docs/plugins/typescript-graphql-files-modules"" rel=""nofollow noreferrer"">graphql-codegen/typescript-graphql-files-modules</a>&#xA;only outputs DocumentNode types, no option to change the type to string</li>&#xA;</ul>&#xA;<p>Let me know if there are any more questions.</p>&#xA;",5364135,,,,2020-09-30 08:03:53,Named export multiple graphql operation from .gql files,<typescript><webpack><graphql><graphql-js><graphql-codegen>,1,0,0,2020-09-24 16:50:08
64081608,1,64082309,,0,229,"<p>I'm getting the above mentioned error on <code>items: { $splice: [[[index], 1]] }</code>.</p>&#xA;<p><a href=""https://i.stack.imgur.com/sGkTo.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sGkTo.jpg"" alt=""enter image description here"" /></a></p>&#xA;<p>How do I resolve this?</p>&#xA;<p>My partial repo: <a href=""https://github.com/TheoMer/next_apollo"" rel=""nofollow noreferrer"">https://github.com/TheoMer/next_apollo</a></p>&#xA;",5613904,,,,2020-09-26 20:38:01,"Type 'number' is not assignable to type 'Spec<any, never>'.ts(2322)",<reactjs><typescript><apollo>,1,5,0,2020-09-26 19:13:31
64112187,1,,,0,64,"<p>I am working on this project: <a href=""https://github.com/mirumee/saleor"" rel=""nofollow noreferrer"">https://github.com/mirumee/saleor</a>&#xA;I added a column to the product model by adding:</p>&#xA;<pre><code>account_user = models.ForeignKey(&#xA;    Account_User,&#xA;    related_name=&quot;products&quot;,&#xA;    on_delete= settings.AUTH_USER_MODEL,&#xA; )&#xA;</code></pre>&#xA;<p>However, after I run &quot;npm run build-schema&quot; and then type</p>&#xA;<pre><code>query&#xA;{&#xA;  products(first: 10) {&#xA;    edges {&#xA;      cursor&#xA;      node {&#xA;        id&#xA;        name&#xA;        description&#xA;        slug&#xA;        account_user_id&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>Graghql says &quot;&quot;message&quot;: &quot;Cannot query field &quot;account_user_id&quot; on type &quot;Product&quot;.&quot;,&quot;.</p>&#xA;<p>Do I miss any step? Do I need to modify the query to add this field? Thanks</p>&#xA;",11146272,,11146272,2020-09-29 02:58:09,2020-09-29 03:33:29,how to add a search field in graghql/django,<django><graphql><graphene-python>,0,3,0,2020-09-29 02:52:07
64126194,1,,,-1,185,"<p>I'm using <strong>Gatsby</strong>'s <a href=""https://www.gatsbyjs.com/plugins/gatsby-theme-portfolio/"" rel=""nofollow noreferrer"">Gatsby-theme-portfolio</a> and I get an error in <strong>graphql</strong> query only when I try to build the gatsby site.</p>&#xA;<pre><code>There was an error in your GraphQL query:&#xA;&#xA;Response not successful: Received status code 401&#xA;&#xA;   1 | query cUsersLeviDesktopGatsbyPortfolionodeModulesgatsbyThemePortfoliosrccomponentslandingProjectsindexJsx3489004344 {&#xA;   2 |   github {&#xA;&gt;  3 |     viewer {&#xA;     |     ^&#xA;   4 |       repositories(first: 8, orderBy: {field: STARGAZERS, direction: DESC}) {&#xA;   5 |         edges {&#xA;   6 |           node {&#xA;   7 |             id&#xA;   8 |             name&#xA;   9 |             url&#xA;  10 |             description&#xA;  11 |             stargazers {&#xA;  12 |               totalCount&#xA;  13 |             }&#xA;</code></pre>&#xA;",11653029,,,,2020-10-06 10:07:24,Graphql query data from github api in Gatsby,<github><graphql><gatsby><github-api>,1,0,0,2020-09-29 19:16:05
64143830,2,,64142555,1,,"<p>To pull out the relevant sections of the <a href=""https://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html#importing-from-modules"" rel=""nofollow noreferrer"">typescript docs</a></p>&#xA;<blockquote>&#xA;<p>If you had the following Node/CommonJS code:</p>&#xA;<pre><code>var foo = require(&quot;foo&quot;);&#xA;&#xA;foo.doStuff();&#xA;</code></pre>&#xA;<p>then you would write the following TypeScript code:</p>&#xA;<pre><code>import foo = require(&quot;foo&quot;);&#xA;&#xA;foo.doStuff();&#xA;</code></pre>&#xA;</blockquote>&#xA;<p>and for <a href=""https://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html#exporting-from-modules"" rel=""nofollow noreferrer"">exporting</a></p>&#xA;<blockquote>&#xA;<p>You might have previously written that like so:</p>&#xA;<pre><code>function foo() {&#xA;   // ... &#xA;} &#xA;module.exports = foo;&#xA;</code></pre>&#xA;<p>In TypeScript, you can model this with the export = construct.</p>&#xA;<pre><code>function foo() {&#xA;  // ...&#xA;}&#xA;export = foo;&#xA;</code></pre>&#xA;</blockquote>&#xA;<p>then if you set <code>&quot;module&quot;: &quot;CommonJS&quot;</code> in your tsconfig it will translate these back to what you have now, this is a legacy limitation that if you don't have import or export constructs it assumes it is not a module, so you just need to label your files as modules by using <code>import</code> and <code>export</code></p>&#xA;",5827215,,,,2020-09-30 18:40:10,"",,0,0,0,2020-09-30 18:40:10
64146400,2,,63253397,4,,"<p>Here's an example query which returns the default merge method for the authenticated user. replace owner and name as appropriate.</p>&#xA;<pre><code>{&#xA;  repository(owner: &quot;TeamCodeStream&quot;, name: &quot;codestream&quot;) {&#xA;    viewerDefaultMergeMethod&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",10947148,,,,2020-09-30 22:05:16,"",,0,0,0,2020-09-30 22:05:16
64157063,1,,,0,324,"<p>What is the best way to output the master SKU for BigCommerce on to the front end view using handle bars.</p>&#xA;<p>I have used GraphQL but the response is too slow to be used as really it needs to be something that can be output on render. Any ideas would be appreciated.</p>&#xA;<p>GraphQL Code</p>&#xA;<pre><code>        &lt;script type=&quot;text/javascript&quot;&gt;&#xA;            fetch('/graphql', {&#xA;                method: 'POST',&#xA;                headers: {&#xA;                    'Content-Type': 'application/json',&#xA;                    'Authorization': 'Bearer {{ settings.storefront_api.token }}'&#xA;                },&#xA;                body: JSON.stringify({query: `&#xA;                    query {&#xA;                        site {&#xA;                            product(entityId: {{ product.id }}) {&#xA;                                sku&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                `})&#xA;            }).then(function(response) {&#xA;                return response.json();&#xA;            }).then(function(response) {&#xA;                console.log(response.data.site.product.sku);&#xA;            });&#xA;        &lt;/script&gt;&#xA;</code></pre>&#xA;",1379695,,1379695,2020-10-01 14:23:23,2020-10-01 16:26:55,JS / GraphQL View - BigCommerce Master SKU,<javascript><graphql><handlebars.js><bigcommerce><graphql-js>,1,1,0,2020-10-01 14:04:23
64159540,2,,64157063,2,,"<p>If you are on a product page:</p>&#xA;<p><code>{{product.sku}}</code></p>&#xA;<p>If you are on a category page:</p>&#xA;<pre><code>{{#each products}}&#xA;   {{sku}&#xA;{{/each}}&#xA;</code></pre>&#xA;<p>You can debug the context available to each page to understand the data available within Stencil CLI:</p>&#xA;<p><a href=""https://developer.bigcommerce.com/theme-objects#viewing-a-pages-context"" rel=""nofollow noreferrer"">https://developer.bigcommerce.com/theme-objects#viewing-a-pages-context</a></p>&#xA;",4595068,,,,2020-10-01 16:26:55,"",,0,0,0,2020-10-01 16:26:55
64202547,1,64313373,,2,1021,"<p>Can we compare two branches with the Github GraphQL?</p>&#xA;<p>From their v3 rest API, you can do:</p>&#xA;<p><code>/repos/:owner/:repo/compare/:base...:head</code></p>&#xA;<p>(docs: <a href=""https://developer.github.com/v3/repos/commits/#compare-two-commits"" rel=""nofollow noreferrer"">https://developer.github.com/v3/repos/commits/#compare-two-commits</a>)</p>&#xA;<p>and this works with SHA's, branches, tags, etc.</p>&#xA;<p>However, I'm unable to find it's equivalent GraphQL query in the docs.</p>&#xA;<p>This is my attempt so far :</p>&#xA;<p>I'm able to get the list of commits for each branch seperately, however, the entire history is loaded and I would only like the difference between canary branch and nightly branch.</p>&#xA;<pre><code>query{&#xA;  repository(owner:&quot;samridh&quot;,name:&quot;release-generator&quot;){&#xA;    name&#xA;    branch0: ref(qualifiedName: &quot;canary&quot;){&#xA;      target{&#xA;        ... on Commit {&#xA;         history(first:100){&#xA;           ...CommitFragment&#xA;         }&#xA;       }&#xA;      }&#xA;    }&#xA;    branch1: ref(qualifiedName: &quot;nightly&quot;){&#xA;      target{&#xA;        ... on Commit {&#xA;         history(first:100){&#xA;           ...CommitFragment&#xA;         }&#xA;       }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;             &#xA;fragment CommitFragment on CommitHistoryConnection {&#xA;  totalCount&#xA;  nodes {&#xA;    oid&#xA;    message&#xA;    committedDate&#xA;    author {&#xA;      name&#xA;      email&#xA;    }&#xA;  }&#xA;  pageInfo {&#xA;    hasNextPage&#xA;    endCursor&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This would have been done as :</p>&#xA;<p><code>/repos/samridh/release-generator/compare/nightly...canary</code></p>&#xA;<p>in the v3 REST API</p>&#xA;",5617485,,5617485,2020-10-06 03:31:32,2020-10-12 07:27:58,How to compare two branches in github with GraphQL?,<github><graphql><git-branch><github-graphql>,1,0,0,2020-10-05 04:37:39
64213431,1,,,2,2739,"<h2>Problem</h2>&#xA;<p>I'm trying to test a graphql query. The query requires that the user associated with the request (<code>info.context.user</code>) is a super user (<code>.is_superuser</code>). Otherwise it throws an exception. I'm trying to test that the query works properly but am unsure how to ensure that <code>info.context.user.is_superuser</code> resolves to true in the test. Please help!</p>&#xA;<h3>schema.py</h3>&#xA;<pre class=""lang-py prettyprint-override""><code>class Query(graphene.ObjectType):&#xA;    gardens = graphene.List(GardenType)&#xA;    &#xA;    def resolve_gardens(self, info):&#xA;        user = info.context.user&#xA;        if not (user.is_superuser or user.is_staff):&#xA;            raise Exception(&quot;You must be staff or a superuser to view all gardens&quot;)&#xA;        return Garden.objects.all()&#xA;</code></pre>&#xA;<h3>tests.py</h3>&#xA;<pre class=""lang-py prettyprint-override""><code>from graphene_django.utils.testing import GraphQLTestCase, graphql_query&#xA;from users.models import CustomUser&#xA;&#xA;class TestGraphQLQueries(GraphQLTestCase):&#xA;    &quot;&quot;&quot;&#xA;    Test that GraphQL queries related to gardens work and throw errors appropriately&#xA;    &quot;&quot;&quot;&#xA;&#xA;    def test_gardens_query(self):&#xA;        response = self.query(&#xA;            &quot;&quot;&quot;&#xA;            query {&#xA;                gardens {&#xA;                    id&#xA;                    name&#xA;                    owner {&#xA;                        id&#xA;                        email&#xA;                    }&#xA;                }&#xA;            }&#xA;            &quot;&quot;&quot;&#xA;        )&#xA;&#xA;        self.assertResponseNoErrors(response)&#xA;</code></pre>&#xA;<h2>Error Thrown</h2>&#xA;<pre class=""lang-sh prettyprint-override""><code>&#xA;gardens/tests.py:93: &#xA;_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ &#xA;../env/lib/python3.6/site-packages/graphene_django/utils/testing.py:114: in assertResponseNoErrors&#xA;    self.assertNotIn(&quot;errors&quot;, list(content.keys()))&#xA;E   AssertionError: 'errors' unexpectedly found in ['errors', 'data']&#xA;-------------------------- Captured log call ---------------------------&#xA;ERROR    graphql.execution.utils:utils.py:155 Traceback (most recent call last):&#xA;  File &quot;/home/dthompson/Code/personal/gardenbuilder-backend/env/lib/python3.6/site-packages/promise/promise.py&quot;, line 489, in _resolve_from_executor&#xA;    executor(resolve, reject)&#xA;  File &quot;/home/dthompson/Code/personal/gardenbuilder-backend/env/lib/python3.6/site-packages/promise/promise.py&quot;, line 756, in executor&#xA;    return resolve(f(*args, **kwargs))&#xA;  File &quot;/home/dthompson/Code/personal/gardenbuilder-backend/env/lib/python3.6/site-packages/graphql/execution/middleware.py&quot;, line 75, in make_it_promise&#xA;    return next(*args, **kwargs)&#xA;  File &quot;/home/dthompson/Code/personal/gardenbuilder-backend/src/gardens/schema.py&quot;, line 43, in resolve_gardens&#xA;    raise Exception(&quot;You must be a superuser to view all gardens&quot;)&#xA;graphql.error.located_error.GraphQLLocatedError: You must be a superuser to view all gardens&#xA;======================= short test summary info ========================&#xA;FAILED gardens/tests.py::TestGraphQLQueries::test_gardens_query - Ass...&#xA;</code></pre>&#xA;",6484228,,,,2020-10-09 01:37:50,How to mock info.context in Django / Graphene tests,<django><graphql><pytest><graphene-python><graphene-django>,2,2,0,2020-10-05 17:25:51
64221995,1,,,0,94,"<p>I stuck with my app flow after mutation is done.&#xA;I have a component with product details on which I can add product to the cart. If order is not yet started the product should be added and then the quantity should be updated. Then on my header the items quantity should be displayed.</p>&#xA;<p>//product.details.component</p>&#xA;<pre><code>  addToProductCart(product) {&#xA;    this.spinnerService.showLoader();&#xA;    if (this.activeOrder === null&#xA;      || this.activeOrder === ''&#xA;      || this.activeOrder.lines.length === 0) { // order not yet created or line is empty&#xA;      this.addNewProduct()&#xA;        .pipe(&#xA;          switchMap((order) =&gt; {&#xA;            return this.adjustOrderLineGQL.mutate({ &#xA;// here I am getting the error that orderLineId doesn't exist, but actually it is returned in order object&#xA;              orderLineId: order.data.addOfferToOrder.lines[0].id,&#xA;              quantity: this.productCounter&#xA;            })&#xA;          })&#xA;        )&#xA;        .subscribe((updatedOrder) =&gt; {&#xA;          this.spinnerService.hideLoader();&#xA;        })&#xA;    } else {&#xA;      if (this.activeOrder.lines.length &gt; 0) { //cart is not empty&#xA;        const existingProduct = this.activeOrder.lines.filter((line) =&gt; {&#xA;          if (line.productVariant.sku === product.id) {&#xA;            return line&#xA;          }&#xA;        })&#xA;        if (existingProduct.length &gt; 0) { // currently added product exists in active order, so only quantity is updated&#xA;          return this.adjustOrderLine(existingProduct[0].id, this.productCounter)&#xA;            .subscribe((result) =&gt; {&#xA;              this.spinnerService.hideLoader();&#xA;            });&#xA;        }&#xA;        else {&#xA;          this.addNewProduct()&#xA;            .pipe(&#xA;              switchMap((order) =&gt; {&#xA;                const currentProduct = order.data.addOfferToOrder.lines.filter((newLine) =&gt; {&#xA;                  if (newLine.productVariant.sku === product.id) {&#xA;                    return newLine;&#xA;                  }&#xA;                })&#xA;                return this.adjustOrderLine(currentProduct[0].id, this.productCounter)&#xA;              })&#xA;            )&#xA;            .subscribe((updatedOrder) =&gt; {&#xA;              this.spinnerService.hideLoader();&#xA;            })&#xA;        }&#xA;      } else {&#xA;        this.spinnerService.hideLoader();&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;  addNewProduct() {&#xA;    return this.addOfferToOrderGQL.mutate({&#xA;      id: this.product.id,&#xA;      originalName: this.product.originalName,&#xA;      name: this.product.name,&#xA;      categoryId: this.product.category.id,&#xA;      price: this.product.price,&#xA;      deliveryCost: this.product.category.deliveryCost&#xA;    },&#xA;      {&#xA;        // refetchQueries: ()&#xA;        update: (cache, { data }) =&gt; { // here I assume I need to somehow refresh cache&#xA;          const cacheId = cache.identify(data.addOfferToOrder);&#xA;          cache.modify({&#xA;            fields: {&#xA;              addOfferToOrder: (existingFieldData, { toReference }) =&gt; {&#xA;                return [...existingFieldData, toReference(cacheId)]&#xA;              }&#xA;            }&#xA;          })&#xA;          console.log('OUTPUT: ProductsDetailsComponent -&gt; addNewProduct -&gt; cacheId', cacheId);&#xA;          console.log(data)&#xA;        }&#xA;      })&#xA;  }&#xA;&#xA;// activeOrder&#xA;&#xA;  getActiveOrder() {&#xA;    return this.getActiveOrderGQL.watch({ fetchPolicy: 'network-only' })&#xA;      .valueChanges&#xA;      .pipe(&#xA;      )&#xA;      .subscribe((result) =&gt; {&#xA;        this.activeOrder = result.data.activeOrder;&#xA;      })&#xA;  }&#xA;</code></pre>&#xA;<p>header.component.ts</p>&#xA;<pre><code>  getActiveOrder(): any {&#xA;    console.log('in header');&#xA;    this.getActiveOrderGQL.watch( { fetchPolicy: 'cache-and-network' })&#xA;      .valueChanges&#xA;      .pipe(&#xA;        pluck('data', 'activeOrder'),&#xA;        takeUntil(this.destroySubject),&#xA;        shareReplay()&#xA;      )&#xA;      .subscribe((order) =&gt; {&#xA;        console.log(order, 'header order');&#xA;&#xA;        if (order) {&#xA;          this.orderService.refreshActiveOrder(order);&#xA;          this.selectedProductsCount = _.sumBy(order.lines, 'quantity');&#xA;        } else {&#xA;          this.selectedProductsCount = 0;&#xA;        }&#xA;      })&#xA;  }&#xA;&#xA;</code></pre>&#xA;<p>If I refresh the page after adding the very first product then whole flow works and next products are added to cart and header is also immediately updated with correct product count.&#xA;Error says that after mutation the orderLineId doesn't exists, but order object returned by the mutation is correct an id has that property. So basically question is how to trigger mutation and then based on the returned value call another one query/mutation in the same and in the other components?</p>&#xA;",8890794,,8890794,2020-10-06 11:14:18,2020-10-06 11:14:18,Angular Apollo grapqhql cache update,<angular><rxjs><graphql><apollo>,0,2,0,2020-10-06 08:24:42
64224601,2,,64193972,0,,"<p>Tried checking the datatypes and also running the query on Insomnia to check if it works, it does work just fine, I do not seem to grasp where the error is coming from</p>&#xA;",7190764,,,,2020-10-06 11:10:32,"",,0,0,0,2020-10-06 11:10:32
64236994,2,,64230563,2,,"<p>For anyone who finds this, I figured it out. I merged the two components</p>&#xA;<pre><code>export const PromotionShow = (props) =&gt; {&#xA;  return (&#xA;    &lt;Show {...props}&gt;&#xA;      &lt;SimpleShowLayout&gt;&#xA;        &lt;TextField source=&quot;reference&quot; /&gt;&#xA;        &lt;DateField source=&quot;startDate&quot; /&gt;&#xA;        &lt;DateField source=&quot;endDate&quot; /&gt;&#xA;        &lt;ArrayField source=&quot;promotionItems.items&quot; label=&quot;Items in Promotion&quot;&gt;&#xA;          &lt;Datagrid&gt;&#xA;            &lt;ReferenceField source=&quot;productId&quot; label=&quot;UPC&quot; reference=&quot;products&quot;&gt;&#xA;              &lt;TextField source=&quot;id&quot; /&gt;&#xA;            &lt;/ReferenceField&gt;&#xA;            &lt;ReferenceField&#xA;              source=&quot;productId&quot;&#xA;              label=&quot;Product Name&quot;&#xA;              reference=&quot;products&quot;&#xA;            &gt;&#xA;              &lt;TextField source=&quot;name&quot; /&gt;&#xA;            &lt;/ReferenceField&gt;&#xA;            &lt;ReferenceField source=&quot;retailerId&quot; reference=&quot;retailers&quot;&gt;&#xA;              &lt;TextField source=&quot;name&quot; /&gt;&#xA;            &lt;/ReferenceField&gt;&#xA;            &lt;NumberField&#xA;              source=&quot;discountPrice&quot;&#xA;            /&gt;&#xA;            &lt;DateField source=&quot;startDate&quot; /&gt;&#xA;            &lt;DateField source=&quot;endDate&quot; /&gt;&#xA;          &lt;/Datagrid&gt;&#xA;        &lt;/ArrayField&gt;&#xA;      &lt;/SimpleShowLayout&gt;&#xA;    &lt;/Show&gt;&#xA;  );&#xA;};&#xA;</code></pre>&#xA;",14326448,,,,2020-10-07 03:59:52,"",,0,0,0,2020-10-07 03:59:52
64266788,1,64267839,,0,1096,"<p>I am trying to get the list of issues by their ids from Github using graphql, but looks like I am missing something or its not possible.</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>query ($ids:['517','510']!) {&#xA;  repository(owner:&quot;owner&quot;, name:&quot;repo&quot;) {&#xA;    issues(last:20, states:CLOSED) {&#xA;      edges {&#xA;        node {&#xA;          title&#xA;          url&#xA;          body&#xA;          author{&#xA;            login&#xA;          }&#xA;          labels(first:5) {&#xA;            edges {&#xA;              node {&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The above query is giving me response as below,</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Parse error on \&quot;'\&quot; (error) at [1, 14]&quot;,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 1,&#xA;          &quot;column&quot;: 14&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>Kindly help me identify if its possible or that I am doing something wrong here.</p>&#xA;",5305894,,2614364,2020-10-08 17:35:35,2020-10-08 17:35:35,get github issues by their ids through graphql endpoints,<github><graphql><github-api>,2,0,0,2020-10-08 16:28:15
64267354,2,,64266788,0,,"<p>I don't think you can fetch for <code>issues</code> and pass in an array of integers for their <code>id</code>s.</p>&#xA;<p>But you can search for a single issue by <code>id</code> like so (this works for me)</p>&#xA;<pre><code>query ($n: Int!) {&#xA;  repository(owner:&quot;owner&quot;, name:&quot;repo-name&quot;) {&#xA;    issue (number: $n) {&#xA;      state&#xA;      title&#xA;      author {&#xA;        url&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>where <code>$n</code> is <code>{&quot;n&quot;: &lt;your_number&gt;}</code> defined.</p>&#xA;<p>If you have an array of <code>id</code>s, then you can just make multiple queries to GitHub.</p>&#xA;<p>Sadly, with this approach, you cannot specify what the <code>state</code> of the issue to be. But I think the logic is that once you know the issue Id, you shouldn't care what state it is, since you have that exact id.</p>&#xA;",6577998,,,,2020-10-08 17:03:58,"",,0,2,0,2020-10-08 17:03:58
64267839,2,,64266788,7,,"<p>You can use <a href=""https://graphql.org/learn/queries/#aliases"" rel=""noreferrer"">aliases</a> in order to build a single request requesting multiple <code>issue</code> object :</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(name: &quot;material-ui&quot;, owner: &quot;mui-org&quot;) {&#xA;    issue1: issue(number: 2) {&#xA;      title&#xA;      createdAt&#xA;    }&#xA;    issue2: issue(number: 3) {&#xA;      title&#xA;      createdAt&#xA;    }&#xA;    issue3: issue(number: 10) {&#xA;      title&#xA;      createdAt&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20repository%28name%3A%20%22material-ui%22%2C%20owner%3A%20%22mui-org%22%29%20%7B%0A%20%20%20%20issue1%3A%20issue%28number%3A%202%29%20%7B%0A%20%20%20%20%20%20title%0A%20%20%20%20%20%20createdAt%0A%20%20%20%20%7D%0A%20%20%20%20issue2%3A%20issue%28number%3A%203%29%20%7B%0A%20%20%20%20%20%20title%0A%20%20%20%20%20%20createdAt%0A%20%20%20%20%7D%0A%20%20%20%20issue3%3A%20issue%28number%3A%2010%29%20%7B%0A%20%20%20%20%20%20title%0A%20%20%20%20%20%20createdAt%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D"" rel=""noreferrer"">Try it in the explorer</a></p>&#xA;<p>which gives :</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;repository&quot;: {&#xA;      &quot;issue1&quot;: {&#xA;        &quot;title&quot;: &quot;Support for ref's on Input component&quot;,&#xA;        &quot;createdAt&quot;: &quot;2014-10-15T15:49:13Z&quot;&#xA;      },&#xA;      &quot;issue2&quot;: {&#xA;        &quot;title&quot;: &quot;Unable to pass onChange event to Input component&quot;,&#xA;        &quot;createdAt&quot;: &quot;2014-10-15T16:23:28Z&quot;&#xA;      },&#xA;      &quot;issue3&quot;: {&#xA;        &quot;title&quot;: &quot;Is it possible for me to make this work if I'm using React version 0.12.0?&quot;,&#xA;        &quot;createdAt&quot;: &quot;2014-10-30T14:11:59Z&quot;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This request can also be simplified using <a href=""https://graphql.org/learn/queries/#fragments"" rel=""noreferrer"">fragments</a> to prevent repetition:</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  repository(name: &quot;material-ui&quot;, owner: &quot;mui-org&quot;) {&#xA;    issue1: issue(number: 2) {&#xA;      ...IssueFragment&#xA;    }&#xA;    issue2: issue(number: 3) {&#xA;      ...IssueFragment&#xA;    }&#xA;    issue3: issue(number: 10) {&#xA;      ...IssueFragment&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;fragment IssueFragment on Issue {&#xA;  title&#xA;  createdAt&#xA;}&#xA;</code></pre>&#xA;<p>The request can be built programmatically, such as in this example <a href=""/questions/tagged/python"" class=""post-tag"" title=""show questions tagged &#39;python&#39;"" rel=""tag"">python</a> script :</p>&#xA;<pre class=""lang-python prettyprint-override""><code>import requests&#xA;&#xA;token = &quot;YOUR_TOKEN&quot;&#xA;issueIds = [2,3,10]&#xA;repoName = &quot;material-ui&quot;&#xA;repoOwner = &quot;mui-org&quot;&#xA;&#xA;query = &quot;&quot;&quot;&#xA;query($name: String!, $owner: String!) {&#xA;  repository(name: $name, owner: $owner) {&#xA;    %s&#xA;  }&#xA;}&#xA;&#xA;fragment IssueFragment on Issue {&#xA;  title&#xA;  createdAt&#xA;}&#xA;&quot;&quot;&quot;&#xA;&#xA;issueFragments = &quot;&quot;.join([&#xA;    &quot;&quot;&quot;&#xA;    issue%d: issue(number: %d) {&#xA;      ...IssueFragment&#xA;    }&quot;&quot;&quot; % (t,t) for t in issueIds&#xA;])&#xA;r = requests.post(&quot;https://api.github.com/graphql&quot;,&#xA;    headers = {&#xA;        &quot;Authorization&quot;: f&quot;Bearer {token}&quot;&#xA;    },&#xA;    json = {&#xA;        &quot;query&quot;: query % issueFragments,&#xA;        &quot;variables&quot;: {&#xA;            &quot;name&quot;: repoName,&#xA;            &quot;owner&quot;: repoOwner&#xA;        }&#xA;    }&#xA;)&#xA;print(r.json()[&quot;data&quot;][&quot;repository&quot;])&#xA;</code></pre>&#xA;",2614364,,,,2020-10-08 17:35:06,"",,0,1,0,2020-10-08 17:35:06
64305411,2,,63479495,1,,"<p>As a workaround, you can use <a href=""https://graphql.org/learn/queries/#aliases"" rel=""nofollow noreferrer"">aliases</a> to build dynamic query with many <code>search</code> query targetting a specific language and <a href=""https://graphql.org/learn/queries/#fragments"" rel=""nofollow noreferrer"">fragments</a> to avoid repetition of the <code>SearchResultItemConnection</code> in the query :</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  go: search(query: &quot;language:go&quot;, type: REPOSITORY, first: 10) {&#xA;    ...SearchResult&#xA;  }&#xA;  java: search(query: &quot;language:java&quot;, type: REPOSITORY, first: 10) {&#xA;    ...SearchResult&#xA;  }&#xA;  javascript: search(query: &quot;language:javascript&quot;, type: REPOSITORY, first: 10) {&#xA;    ...SearchResult&#xA;  }&#xA;}&#xA;&#xA;fragment SearchResult on SearchResultItemConnection {&#xA;  repositoryCount&#xA;  edges {&#xA;    node {&#xA;      ... on Repository {&#xA;        nameWithOwner&#xA;        forkCount&#xA;        hasIssuesEnabled&#xA;        hasProjectsEnabled&#xA;        homepageUrl&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://developer.github.com/v4/explorer/?query=%7B%0A%20%20go%3A%20search%28query%3A%20%22language%3Ago%22%2C%20type%3A%20REPOSITORY%2C%20first%3A%2010%29%20%7B%0A%20%20%20%20...SearchResult%0A%20%20%7D%0A%20%20java%3A%20search%28query%3A%20%22language%3Ajava%22%2C%20type%3A%20REPOSITORY%2C%20first%3A%2010%29%20%7B%0A%20%20%20%20...SearchResult%0A%20%20%7D%0A%20%20javascript%3A%20search%28query%3A%20%22language%3Ajavascript%22%2C%20type%3A%20REPOSITORY%2C%20first%3A%2010%29%20%7B%0A%20%20%20%20...SearchResult%0A%20%20%7D%0A%7D%0A%0Afragment%20SearchResult%20on%20SearchResultItemConnection%20%7B%0A%20%20repositoryCount%0A%20%20edges%20%7B%0A%20%20%20%20node%20%7B%0A%20%20%20%20%20%20...%20on%20Repository%20%7B%0A%20%20%20%20%20%20%20%20nameWithOwner%0A%20%20%20%20%20%20%20%20forkCount%0A%20%20%20%20%20%20%20%20hasIssuesEnabled%0A%20%20%20%20%20%20%20%20hasProjectsEnabled%0A%20%20%20%20%20%20%20%20homepageUrl%0A%20%20%20%20%20%20%20%20id%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A"" rel=""nofollow noreferrer"">Try it in the explorer</a></p>&#xA;<p>Note that it would only work for <code>OR</code> query (java or javascript or go for the list of languages) but not <code>AND</code></p>&#xA;<p>The request can be built programmatically such as in this <a href=""/questions/tagged/python"" class=""post-tag"" title=""show questions tagged &#39;python&#39;"" rel=""tag"">python</a> script :</p>&#xA;<pre class=""lang-python prettyprint-override""><code>import requests&#xA;&#xA;token = &quot;YOUR_TOKEN&quot;&#xA;languages = [&quot;go&quot;,&quot;java&quot;,&quot;javaScript&quot;]&#xA;&#xA;query = &quot;&quot;&quot;&#xA;{&#xA;  %s&#xA;}&#xA;&#xA;fragment SearchResult on SearchResultItemConnection {&#xA;  repositoryCount&#xA;  edges {&#xA;    node {&#xA;      ... on Repository {&#xA;        nameWithOwner&#xA;        forkCount&#xA;        hasIssuesEnabled&#xA;        hasProjectsEnabled&#xA;        homepageUrl&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&quot;&quot;&quot;&#xA;&#xA;searchFragments = &quot;&quot;.join([&#xA;    &quot;&quot;&quot;&#xA;    %s: search(query: &quot;language:%s&quot;, type: REPOSITORY, first: 10) {&#xA;      ...SearchResult&#xA;    }&#xA;    &quot;&quot;&quot; % (t,t) for t in languages&#xA;])&#xA;r = requests.post(&quot;https://api.github.com/graphql&quot;,&#xA;    headers = {&#xA;        &quot;Authorization&quot;: f&quot;Bearer {token}&quot;&#xA;    },&#xA;    json = {&#xA;        &quot;query&quot;: query % searchFragments&#xA;    }&#xA;)&#xA;print(r.json()[&quot;data&quot;])&#xA;</code></pre>&#xA;",2614364,,,,2020-10-11 14:54:35,"",,0,0,0,2020-10-11 14:54:35
64305974,2,,40901845,3,,"<p>Apollo Official related docs (<strong>Great</strong> example inside):</p>&#xA;<h3>Resolver chains</h3>&#xA;<p><a href=""https://www.apollographql.com/docs/apollo-server/data/resolvers/#resolver-chains"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/data/resolvers/#resolver-chains</a></p>&#xA;<pre class=""lang-js prettyprint-override""><code>/* code from:&#xA;https://www.apollographql.com/docs/apollo-server/data/resolvers/#resolver-chains&#xA;*/&#xA;&#xA;const { ApolloServer, gql } = require('apollo-server');&#xA;&#xA;const libraries = [&#xA;  {&#xA;    branch: 'downtown'&#xA;  },&#xA;  {&#xA;    branch: 'riverside'&#xA;  },&#xA;];&#xA;&#xA;// The branch field of a book indicates which library has it in stock&#xA;const books = [&#xA;  {&#xA;    title: 'The Awakening',&#xA;    author: 'Kate Chopin',&#xA;    branch: 'riverside'&#xA;  },&#xA;  {&#xA;    title: 'City of Glass',&#xA;    author: 'Paul Auster',&#xA;    branch: 'downtown'&#xA;  },&#xA;];&#xA;&#xA;// Schema definition&#xA;const typeDefs = gql`&#xA;&#xA;# A library has a branch and books&#xA;  type Library {&#xA;    branch: String!&#xA;    books: [Book!]&#xA;  }&#xA;&#xA;  # A book has a title and author&#xA;  type Book {&#xA;    title: String!&#xA;    author: Author!&#xA;  }&#xA;&#xA;  # An author has a name&#xA;  type Author {&#xA;    name: String!&#xA;  }&#xA;&#xA;  # Queries can fetch a list of libraries&#xA;  type Query {&#xA;    libraries: [Library]&#xA;  }&#xA;`;&#xA;&#xA;// Resolver map&#xA;const resolvers = {&#xA;  Query: {&#xA;    libraries() {&#xA;&#xA;      // Return our hardcoded array of libraries&#xA;      return libraries;&#xA;    }&#xA;  },&#xA;  Library: {&#xA;    books(parent) {&#xA;&#xA;      // Filter the hardcoded array of books to only include&#xA;      // books that are located at the correct branch&#xA;      return books.filter(book =&gt; book.branch === parent.branch);&#xA;    }&#xA;  },&#xA;  Book: {&#xA;&#xA;    // The parent resolver (Library.books) returns an object with the&#xA;    // author's name in the &quot;author&quot; field. Return a JSON object containing&#xA;    // the name, because this field expects an object.&#xA;    author(parent) {&#xA;      return {&#xA;        name: parent.author&#xA;      };&#xA;    }&#xA;  }&#xA;&#xA;  // Because Book.author returns an object with a &quot;name&quot; field,&#xA;  // Apollo Server's default resolver for Author.name will work.&#xA;  // We don't need to define one.&#xA;};&#xA;&#xA;// Pass schema definition and resolvers to the&#xA;// ApolloServer constructor&#xA;const server = new ApolloServer({ typeDefs, resolvers });&#xA;&#xA;// Launch the server&#xA;server.listen().then(({ url }) =&gt; {&#xA;  console.log(`  Server ready at ${url}`);&#xA;});&#xA;</code></pre>&#xA;",9291557,,9291557,2022-03-20 10:11:49,2022-03-20 10:11:49,"",,0,0,0,2020-10-11 15:46:32
64308605,1,,,0,374,"<p>excuse me for that probably stupid question but this is my first steps with graphql and react. I try to create component where inside is GraphQL query, and incoming props. Props is a query which should by pass into GraphQL query. I know I do something wrong but I don't know what. I add everything like client with apollo provider into my app component structure.&#xA;On a main page (index.js) I have simply layout like:</p>&#xA;<pre><code>import Layout from &quot;../components/layout&quot;&#xA;import SearchForm from &quot;../components/searchForm&quot;&#xA;&#xA;export default function Home() {&#xA;  return  (&#xA;    &lt;Layout pageTitle=&quot;React App&quot; headerTitle=&quot;Search repositories on Github&quot;&gt;&#xA;      &lt;SearchForm repositoryNameDefaultValue='' /&gt;&#xA;    &lt;/Layout&gt;&#xA;  );&#xA;}&#xA;</code></pre>&#xA;<p>then I have component called searchForm:</p>&#xA;<pre><code>import { Component, ChangeEvent } from &quot;react&quot;;&#xA;import Input from &quot;./input&quot;;&#xA;import Button from &quot;./button&quot;;&#xA;import style from &quot;./searchForm.module.scss&quot;;&#xA;import FindRepositoryResults from &quot;./test&quot;;&#xA;&#xA;interface IMyComponentErrors {&#xA;  repositoryNameError: string;&#xA;}&#xA;&#xA;interface IMyComponentProps {&#xA;  repositoryNameDefaultValue: string;&#xA;}&#xA;&#xA;interface IMyComponentState {&#xA;  repositoryName: string;&#xA;  formIsSend: boolean;&#xA;  errors: IMyComponentErrors;&#xA;}&#xA;&#xA;const validateForm = (errors: IMyComponentErrors): boolean =&gt; {&#xA;  let valid = true;&#xA;  Object.values(errors).forEach((val) =&gt; val.length &gt; 0 &amp;&amp; (valid = false));&#xA;  return valid;&#xA;};&#xA;&#xA;const validRepositoryNameRegex = RegExp(/^[A-Za-z0-9 _]*[A-Za-z0-9][A-Za-z0-9 _]*$/i);&#xA;&#xA;export default class SignUpFormContainer extends Component&lt;&#xA;  IMyComponentProps,&#xA;  IMyComponentState&#xA;&gt; {&#xA;  constructor(props: IMyComponentProps) {&#xA;    super(props);&#xA;    this.state = {&#xA;      repositoryName: this.props.repositoryNameDefaultValue,&#xA;      formIsSend: false,&#xA;      errors: {&#xA;        repositoryNameError: &quot;&quot;,&#xA;      }&#xA;    };&#xA;&#xA;    this.handleFormSubmit = this.handleFormSubmit.bind(this);&#xA;    this.handleClearForm = this.handleClearForm.bind(this);&#xA;    this.handleChangeRepositoryName = this.handleChangeRepositoryName.bind(this);&#xA;  }&#xA;&#xA;  handleChangeRepositoryName(event: ChangeEvent&lt;HTMLInputElement&gt;): void {&#xA;    event.preventDefault();&#xA;    const { value } = event.target;&#xA;    let errors = this.state.errors;&#xA;&#xA;    if (!validRepositoryNameRegex.test(value)) {&#xA;      errors.repositoryNameError = &quot;Invalid repository name&quot;;&#xA;    } else if (!value) {&#xA;      errors.repositoryNameError = &quot;Repository name is required&quot;;&#xA;    } else {&#xA;      errors.repositoryNameError = &quot;&quot;;&#xA;    }&#xA;&#xA;    this.setState({ errors, repositoryName: value });&#xA;  }&#xA;&#xA;  handleClearForm() {&#xA;    this.setState({&#xA;      repositoryName: &quot;&quot;,&#xA;      formIsSend: false&#xA;    });&#xA;  }&#xA;&#xA;  handleFormSubmit(event) {&#xA;    event.preventDefault();&#xA;    const { repositoryName } = this.state;&#xA;    let errors = this.state.errors;&#xA;&#xA;    if (!repositoryName) {&#xA;      errors.repositoryNameError = &quot;Repository name is required&quot;;&#xA;    }&#xA;&#xA;    this.setState({ errors });&#xA;&#xA;    if (!validateForm(this.state.errors)) {&#xA;      return;&#xA;    } else {&#xA;      this.setState({ formIsSend: true });&#xA;    }&#xA;  }&#xA;&#xA;  render() {&#xA;    const { errors } = this.state;&#xA;&#xA;    return (&#xA;      &lt;div&gt;&#xA;      { !this.state.formIsSend ? (&#xA;      &lt;form&#xA;        aria-label=&quot;Search repositories by name&quot;&#xA;        autoComplete=&quot;off&quot;&#xA;        onSubmit={this.handleFormSubmit}&#xA;        className = {style.formSearchRepository}&#xA;      &gt;&#xA;        &lt;Input&#xA;          type={&quot;text&quot;}&#xA;          title={&quot;Repository name:&quot;}&#xA;          name={&quot;repositoryName&quot;}&#xA;          placeholder={&quot;Enter name of repository&quot;}&#xA;          value={this.state.repositoryName}&#xA;          error={errors.repositoryNameError.length &gt; 0}&#xA;          errorMessage={errors.repositoryNameError}&#xA;          onChange={this.handleChangeRepositoryName}&#xA;          required&#xA;        /&gt;&#xA;        &lt;Button&#xA;          onClick={this.handleFormSubmit}&#xA;          title={&quot;Search repository in Github by name&quot;}&#xA;          children={&quot;Search&quot;}&#xA;        /&gt;&#xA;      &lt;/form&gt;&#xA;      ) : &lt;FindRepositoryResults repositoryName={this.state.repositoryName}/&gt;}&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and last one that more problematic where is query:</p>&#xA;<pre><code>import React from &quot;react&quot;;&#xA;import { gql, useQuery } from &quot;@apollo/client&quot;;&#xA;&#xA;const SEARCH_REPOSITORY = gql`&#xA;query findRepositories($query: String!) {&#xA;    search(first: 10, query: $query, type: REPOSITORY) {&#xA;        nodes {&#xA;          ... on Repository {&#xA;            name,&#xA;            owner {&#xA;              login&#xA;            }&#xA;            primaryLanguage {&#xA;              name&#xA;            },&#xA;            stargazers {&#xA;              totalCount&#xA;            },&#xA;            stargazerCount,&#xA;            languages(first: 20, orderBy: {field: SIZE, direction: ASC} ) {&#xA;              totalCount&#xA;              nodes {&#xA;                name&#xA;              }&#xA;            },&#xA;            issues {&#xA;              totalCount&#xA;            }&#xA;            shortDescriptionHTML,&#xA;            updatedAt,&#xA;            watchers {&#xA;              totalCount&#xA;            }&#xA;          }&#xA;        }&#xA;    }&#xA;}&#xA;`;&#xA;&#xA;interface IFindRepositoryComponentProps {&#xA;  repositoryName: string;&#xA;}&#xA;&#xA;interface IFindRepositoryComponentState {&#xA;  detailsAreOpen: boolean;&#xA;}&#xA;&#xA;interface RepositoryData {&#xA;  data: any;&#xA;}&#xA;&#xA;interface RepositoryVars {&#xA;  query: string;&#xA;}&#xA;&#xA;export default class FindRepositoryResults extends React.Component&lt;IFindRepositoryComponentProps, IFindRepositoryComponentState&gt; {&#xA;  constructor(props: IFindRepositoryComponentProps) {&#xA;    super(props);&#xA;    this.state = { detailsAreOpen: false };&#xA;&#xA;    this.showDetails = this.showDetails.bind(this);&#xA;  }&#xA;&#xA;  showDetails() {&#xA;    this.setState(state =&gt; ({&#xA;      detailsAreOpen: !state.detailsAreOpen&#xA;    }));&#xA;  }&#xA;&#xA;  render() {&#xA;    const { loading, data, error } = useQuery&lt;any, RepositoryVars&gt;(&#xA;      SEARCH_REPOSITORY ,&#xA;      { variables: { query: this.props.repositoryName } }&#xA;    );&#xA;&#xA;    return (&#xA;      &lt;section&gt;&#xA;        &lt;h3&gt;Results&lt;/h3&gt;&#xA;        {loading ? (&#xA;          &lt;p&gt;Loading ...&lt;/p&gt;&#xA;        ) : error ? (&lt;p&gt;Error {error}&lt;/p&gt;) : (&#xA;          &lt;div&gt;&#xA;            { data.search.nodes.length == 0 ? (&lt;p&gt;No results found.&lt;/p&gt;) : data &amp;&amp; data.search.nodes.map((repo) =&gt; (&#xA;              &lt;div&gt;&#xA;                &lt;p&gt;Name: {repo.name}&lt;/p&gt;&#xA;                &lt;p&gt;Owner: {repo.owner.login}&lt;/p&gt;&#xA;                &lt;p&gt;Number of stars (total): {repo.stargazerCount}&lt;/p&gt;&#xA;                &lt;p&gt;Primary language: {repo.primaryLanguage.name}&lt;/p&gt;&#xA;          &#xA;                &lt;button onClick={this.showDetails}&gt;{this.state.detailsAreOpen ? 'Show less' : 'Show more'}&lt;/button&gt;&#xA;                &lt;div&gt;&#xA;                  Details:&#xA;                  {repo.issues.totalCount}&#xA;                  {repo.languages.totalCount}&#xA;                  {repo.shortDescriptionHTML}&#xA;                  {repo.stargazers.totalCount}&#xA;                  {repo.updatedAt}&#xA;                  {repo.watchers.totalCount}&#xA;                &lt;/div&gt;&#xA;              &lt;/div&gt;&#xA;            ))}&#xA;          &lt;/div&gt;&#xA;        )}&#xA;      &lt;/section&gt;&#xA;    );&#xA;  }   &#xA;}&#xA;</code></pre>&#xA;<p>In this component above I made query but I don't get results. I'm not sure but is mismatching of version (DOM Rendering), I have a problem to do this correctly together with typescript, react and apollo. I'll happy if any one can show me correct way and example how this should be done. Thank you</p>&#xA;",2595319,,,,2020-10-16 12:23:03,"Problem with make query in correct way using typescript, react and graphql",<reactjs><typescript><next.js><apollo><react-apollo>,1,0,0,2020-10-11 20:17:37
64313373,2,,64202547,4,,"<p>Unfortunately, after scrolling through hours and hours of the github community page, it seems that as of this date, the API is not migrated on the v4, and must be done via v3 itself.</p>&#xA;<p>However, the v3 API only supports 250 commits, any commits beyond that will be ignored and not shown. This can be worked around using graphQL though.</p>&#xA;<p>Fire this query to get the starting and ending points:</p>&#xA;<pre><code>query getStartAndEndPoints {&#xA;  repository(owner: &quot;samridh&quot;, name: &quot;release-generator&quot;) {&#xA;    endPoint: ref(qualifiedName: &quot;canary&quot;) {&#xA;      ...internalBranchContent&#xA;    }&#xA;    startPoint: ref(qualifiedName: &quot;nightly&quot;) {&#xA;      ...internalBranchContent&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;fragment internalBranchContent on Ref {&#xA;  target {&#xA;    ... on Commit {&#xA;      history(first: 1) {&#xA;        edges {&#xA;          node {&#xA;            committedDate&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This will give you the start and end date of the query.</p>&#xA;<p>Plugin these values to :</p>&#xA;<pre><code>query findDifference{&#xA;  repository(owner:&quot;samridh&quot;,name:&quot;release-generator&quot;){&#xA;    ref(qualifiedName: &quot;canary&quot;){&#xA;      target{&#xA;        ... on Commit {&#xA;         history(&#xA;                  first : 100,&#xA;                  after: $(value of previous end cursor) #keep it empty first time&#xA;                  until : $(endDate),&#xA;                  since: $(startDate),&#xA;                  ){&#xA;           ...CommitFragment&#xA;         }&#xA;       }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;fragment CommitFragment on CommitHistoryConnection {&#xA;  totalCount&#xA;  nodes {&#xA;    oid&#xA;  }&#xA;  pageInfo {&#xA;    startCursor&#xA;    hasNextPage&#xA;    endCursor&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and extract all the oid, 100 at a time ( Github GraphQL only supports 100 at a time )</p>&#xA;<p>Finally, you can call the v3 API, likewise :</p>&#xA;<pre><code>/repos/samridh/release-generator/compare/&lt;commit1&gt;...&lt;commit100&gt;&#xA;/repos/samridh/release-generator/compare/&lt;commit101&gt;...&lt;commit200&gt;&#xA;/repos/samridh/release-generator/compare/&lt;commit201&gt;...&lt;commit300&gt;&#xA;</code></pre>&#xA;",5617485,,,,2020-10-12 07:27:58,"",,0,3,0,2020-10-12 07:27:58
64320467,1,64320576,,0,36,"<p>I have below array data</p>&#xA;<pre><code>array:1 [▼&#xA;&quot;data&quot; =&gt; array:1 [▼&#xA; &quot;collections&quot; =&gt; array:1 [▼&#xA;  &quot;edges&quot; =&gt; array:58 [▼&#xA;    0 =&gt; array:1 [▼&#xA;      &quot;node&quot; =&gt; array:3 [▼&#xA;        &quot;id&quot; =&gt; &quot;1&quot;&#xA;        &quot;title&quot; =&gt; &quot;Company&quot;&#xA;        &quot;image&quot; =&gt; array:1 [▼&#xA;          &quot;src&quot; =&gt; &quot;myimage.png&quot;&#xA;        ]&#xA;      ]&#xA;    ]&#xA;    1 =&gt; array:1 [▼&#xA;      &quot;node&quot; =&gt; array:3 [▼&#xA;        &quot;id&quot; =&gt; &quot;2&quot;&#xA;        &quot;title&quot; =&gt; &quot;Popcorn&quot;&#xA;        &quot;image&quot; =&gt; array:1 [▼&#xA;          &quot;src&quot; =&gt; &quot;myimage.png&quot;&#xA;        ]&#xA;      ]&#xA;    ]&#xA;  ]&#xA;]&#xA;</code></pre>&#xA;<p>When I try to loop using below code</p>&#xA;<pre><code>@foreach ($shopify as $item)&#xA;  @foreach ($item['collections'] as $key =&gt; $data)&#xA;    &lt;pre&gt;&#xA;       @php&#xA;         print_r($data);exit();&#xA;       @endphp&#xA;    &lt;/pre&gt;&#xA;  @endforeach&#xA;@endforeach&#xA;</code></pre>&#xA;<p>I got below data</p>&#xA;<pre><code>Array&#xA;(&#xA;[0] =&gt; Array&#xA;    (&#xA;        [node] =&gt; Array&#xA;            (&#xA;                [id] =&gt; 1&#xA;                [title] =&gt; Company&#xA;                [image] =&gt; Array&#xA;                   (&#xA;                        [src] =&gt; 'myimage.png'&#xA;                   )&#xA;            )&#xA;&#xA;    )&#xA;&#xA;[1] =&gt; Array&#xA;    (&#xA;        [node] =&gt; Array&#xA;            (&#xA;                [id] =&gt; 2&#xA;                [title] =&gt; Popcorn&#xA;                [image] =&gt; Array&#xA;                    (&#xA;                        [src] =&gt; 'myimage.png'&#xA;                    )&#xA;&#xA;            )&#xA;&#xA;    )&#xA;</code></pre>&#xA;<p>My problem is I cannot get the <code>id</code>, <code>title</code> etc inside the array. When I try to loop it gives <code>undefined index</code> problem?</p>&#xA;<p>Any Idea how to get the <code>id</code>, <code>title</code> as well as <code>image(src)</code></p>&#xA;<p>I got collection data from shopify using graphql api, and try to integrate in laravel</p>&#xA;",8826120,,,,2020-10-12 15:16:36,Loop through array within array from qraphql,<php><laravel><graphql>,1,2,0,2020-10-12 15:09:47
64320576,2,,64320467,2,,<p>I suppose you can simplify your code to this:</p>&#xA;<pre><code>@foreach ($shopify['data']['collections']['edges'] as $edge)&#xA;    {{ $edge['node']['id'] }} - {{ $edge['node']['title'] }}&#xA;    &lt;img src=&quot;{{ $edge['node']['image']['src'] }}&quot;&gt;&#xA;@endforeach&#xA;</code></pre>&#xA;,1553888,,,,2020-10-12 15:16:36,"",,0,3,0,2020-10-12 15:16:36
64394461,1,,,-1,50,"<p>I have this state updater that takes data object from a graphQL query, and reorganizes it into a single array in state, removing any data that comes back undefined || 0 length array.</p>&#xA;<pre><code>useEffect(() =&gt; {&#xA;    if (data !== undefined) {&#xA;      var e: Group[]&#xA;      var arrays = Object.values(data) as Group[][]&#xA;      for (e of arrays) {&#xA;        if (checkEmptyArray(e)) {&#xA;          console.log(e)&#xA;          // don't remove this const, code doesn't work without it.&#xA;          const destructured = [...e]&#xA;          setDataArray(prevState =&gt; [...prevState, ...destructured])&#xA;        }&#xA;      }&#xA;    }&#xA;  }, [data])&#xA;</code></pre>&#xA;<p>Works totally fine as it is. As soon as you replace <code>...destructured</code> with <code>...e</code>, it fails to work.</p>&#xA;<p>This seems very odd to me. Is it a bug? or do I not understand something?</p>&#xA;",12728118,,,,2020-10-16 19:53:52,Did I find a bug in useState? Or am I not understanding how it works?,<javascript><arrays><reactjs><graphql><use-state>,1,1,0,2020-10-16 18:21:45
64395596,2,,64394461,1,,"<p>So ... what I guess is happening is something like; when you use e it gets modified by the &quot;for (e of arrays)&quot; loop before the &quot;prevState =&gt; [...prevState, ...e]&quot; gets properly evaluated, whereas &quot;const destructured = [...e]&quot; creates a new object to be passed to the function each time.</p>&#xA;<p>On a side note; are you sure you want to be calling setDataArray() inside of a loop, my guess is that would call multiple re-renders.</p>&#xA;",14454939,,,,2020-10-16 19:53:52,"",,0,0,0,2020-10-16 19:53:52
64416151,2,,55151128,1,,<p>I had the same error this week and lots a lot of time. The cause for me was just checking what I was passing in as the variable to my GraphQL mutation. First of all I was passing in a number rather than an object (ie I was accidently passing the key while doing a for x in loop) and then secondly I was doing a JSON.stringify on the input variable for my mutation. Those together caused lots of head scratching. Adding it here just in case anyone else comes across this error. CHECK WHAT YOU ARE PASSING IN!</p>&#xA;,107691,,,,2020-10-18 17:17:29,"",,0,1,0,2020-10-18 17:17:29
64429704,1,,,1,959,"<p>I'm new to GraphQL and looking for the correct syntax of the script to pull in product variations for a given product in BigCommerce.</p>&#xA;<p>Below query gives me the SKU for the product, but I would also like to return all variations SKU as well.</p>&#xA;<pre><code>query {&#xA;    site {&#xA;        product(entityId:781) {&#xA;            sku&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Thanks for your help.</p>&#xA;<hr />&#xA;<p>Have added below snippet to pull in the meta fields for variations but not sure if this is accurate as the results are blank</p>&#xA;<pre><code>metafields(namespace:&quot;App Namespace&quot;) {&#xA;                      edges {&#xA;                        cursor&#xA;                        node {&#xA;                          id&#xA;                          key&#xA;                          value&#xA;                        }&#xA;                      }&#xA;                    }&#xA;</code></pre>&#xA;",1379695,,1379695,2020-10-20 15:14:58,2020-10-20 15:14:58,GraphQL - Get Product Variants Information - BigCommerce,<graphql><bigcommerce>,1,0,0,2020-10-19 14:43:24
64436464,2,,64429704,0,,"<p>Consider this:</p>&#xA;<pre><code>query getProductVariants {&#xA;  site {&#xA;    product(entityId: 781) {&#xA;      sku&#xA;      variants(first: 100) {&#xA;        edges {&#xA;          node {&#xA;            sku&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>To make things cleaner, you can abstract the product ID as a GraphQL variable:</p>&#xA;<pre><code>query getProductVariants(&#xA;  $productId: Int&#xA;) {&#xA;  site {&#xA;    product(entityId: $productId) {&#xA;      sku&#xA;      variants(first: 100) {&#xA;        edges {&#xA;          node {&#xA;            sku&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4595068,,,,2020-10-19 23:38:05,"",,0,1,0,2020-10-19 23:38:05
64466469,1,,,0,846,"<p>I'm trying to retrieve product metafields on BigCommmerce via GraphQL. The below code throws an error</p>&#xA;<pre><code>query {&#xA;    site {&#xA;        product(entityId:639) {&#xA;          sku&#xA;          path&#xA;          metafields(namespace: &quot;App_Namespace&quot;, keys: &quot;color_key&quot;) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;                value&#xA;              }&#xA;            }&#xA;          }&#xA;      }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Meta field information</p>&#xA;<pre><code>Namespace App_Namespace&#xA;Key color_key&#xA;Description Colour&#xA;Value Blue | Grey | Yellow&#xA;</code></pre>&#xA;<p>Would appreciate any help on above. Thanks</p>&#xA;",1379695,,,,2021-02-03 17:22:51,Get Product Metafields Data with GraphQL / BigCommerce,<graphql><bigcommerce>,2,0,0,2020-10-21 15:05:19
64471860,2,,64466469,2,,"<p>The &quot;keys&quot; argument expects an array of keys. So even if you just want one key, submit it as an array of one:</p>&#xA;<pre><code>query {&#xA;  site {&#xA;    product(entityId: 639) {&#xA;      sku&#xA;      path&#xA;      metafields(namespace: &quot;App_Namespace&quot;, keys: [&quot;color_key&quot;]) {&#xA;        edges {&#xA;          node {&#xA;            id&#xA;            value&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Check out this link for more examples:&#xA;<a href=""https://developer.bigcommerce.com/changelog#posts/graph-ql-storefront-api-updates-metafields-on-product-category-brand-variant"" rel=""nofollow noreferrer"">https://developer.bigcommerce.com/changelog#posts/graph-ql-storefront-api-updates-metafields-on-product-category-brand-variant</a></p>&#xA;",4595068,,,,2020-10-21 21:16:39,"",,0,2,0,2020-10-21 21:16:39
64490137,1,,,3,511,"<p>I am pretty new to using Contentful and their Reference (many) field type. I have one reference type that pulls in many product names. in GraphQL I can see all my product name displaying, but when I try and render it on Gatsby I am not seeing anything display (productName:array). Here is my GraphQL</p>&#xA;<pre><code>{&#xA;  allContentfulAppetizerMenuSection {&#xA;      nodes {&#xA;        menuItemReferences {&#xA;          productName&#xA;        }&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and here is my code...</p>&#xA;<pre><code>import React from 'react';&#xA;import { graphql, StaticQuery } from 'gatsby';&#xA;&#xA;const Products = () =&gt; (&#xA;&#xA;  &lt;StaticQuery&#xA;  query={graphql`&#xA;    query MyQuery {&#xA;        allContentfulAppetizerMenuSection {&#xA;            nodes {&#xA;              menuItemReferences {&#xA;                productName&#xA;              }&#xA;            }&#xA;        }&#xA;    }&#xA;  `}&#xA;&#xA;  render={data =&gt; (&#xA;    &lt;div&gt;&#xA;        {data.allContentfulAppetizerMenuSection.nodes.map(({ menuItemReferences }, i) =&gt; (&#xA;        &lt;div key={i}&gt;&#xA;            {menuItemReferences.productName}&#xA;        &lt;/div&gt;&#xA;      ))}&#xA;    &lt;/div&gt;&#xA;    )}&#xA;  /&gt;&#xA;)&#xA;  &#xA;export default Products;&#xA;</code></pre>&#xA;<p>Any help will be much appreciated.</p>&#xA;",14502581,,,,2020-10-23 05:06:58,Render Contentful Reference (many) Array on Gatsby,<graphql><gatsby><contentful>,1,11,0,2020-10-22 20:33:31
64494165,2,,64490137,0,,"<p>Try:</p>&#xA;<pre><code>const Products = () =&gt; {&#xA;  const data = useStaticQuery(graphql`&#xA;      query {&#xA;          allContentfulAppetizerMenuSection {&#xA;              nodes {&#xA;                  menuItemReferences {&#xA;                      productName&#xA;                  }&#xA;              }&#xA;          }&#xA;      }&#xA;  `);&#xA;&#xA;  return &lt;div&gt;&#xA;    {data.allContentfulAppetizerMenuSection.nodes.map(({ menuItemReferences }, i) =&gt; {&#xA;      return &lt;div key={i}&gt;&#xA;        {menuItemReferences.productName}&#xA;      &lt;/div&gt;;&#xA;    })}&#xA;  &lt;/div&gt;;&#xA;};&#xA;&#xA;export default Products;&#xA;</code></pre>&#xA;<p>Note the usage of <a href=""https://www.gatsbyjs.com/docs/use-static-query/"" rel=""nofollow noreferrer""><code>useStaticQuery</code></a> hook and the <code>return</code> statement in your loop.</p>&#xA;<p>The refactor upon <code>useStaticQuery</code> results in a cleaner and reusable code but the idea it's exactly the same, if you are more familiar with the old StaticQuery, you can keep it.</p>&#xA;<p>If the error persists, try to debug inside the loop.</p>&#xA;",5585371,,,,2020-10-23 05:06:58,"",,0,3,0,2020-10-23 05:06:58
64495899,2,,64289896,0,,"<blockquote>&#xA;<p>you can get the price from product variant just like this - &quot;{<br />&#xA;productVariants(first:10, query:&quot;{apply your condition here}&quot;)   {&#xA;edges&#xA;{&#xA;node&#xA;{&#xA;storefrontId&#xA;compareAtPrice&#xA;price&#xA;}&#xA;}   } }  % id&quot;</p>&#xA;</blockquote>&#xA;",14505036,,,,2020-10-23 07:42:02,"",,0,0,0,2020-10-23 07:42:02
64495952,2,,64289896,1,,"<blockquote>&#xA;<p>query = '''&#xA;{&#xA;productVariants(first:1,query:&quot;title:%s&quot;)&#xA;{&#xA;edges&#xA;{&#xA;node&#xA;{&#xA;id&#xA;title&#xA;}&#xA;}&#xA;}&#xA;}<br />&#xA;''' % title</p>&#xA;<p>make a function and give 'title' as a argument.</p>&#xA;<p>def productvariant(title):&#xA;client = shopify.GraphQL()&#xA;query = '''&#xA;{&#xA;productVariants(first:1,query:&quot;title:%s&quot;)&#xA;{&#xA;edges&#xA;{&#xA;node&#xA;{&#xA;id&#xA;title&#xA;}&#xA;}&#xA;}&#xA;}<br />&#xA;''' % title</p>&#xA;</blockquote>&#xA;",14505036,,,,2020-10-23 07:45:44,"",,0,1,0,2020-10-23 07:45:44
64526012,2,,64523800,1,,"<p>Turns out, there is actually a very simple solution for this:&#xA;<strong>You can copy the query as is in the graphical interface, and add it to the <code>?query=</code> query string parameter</strong>.</p>&#xA;<p>For example, given the endpoint <code>http://gql-endpoint.com/graphiql</code>, the query would look as follows:</p>&#xA;<blockquote>&#xA;<p><code>http://gql-endpoint.com/graphiql?query=COPY_PASTE_YOUR_QUERY_HERE</code>.</p>&#xA;</blockquote>&#xA;<p>Using the example above, this would look something like:</p>&#xA;<pre><code>http://gql-endpoint.com/graphiql?query=query {&#xA;  canonical(ref: &quot;&quot;) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Which, when used on the browser, results in an escaped URL, something like:</p>&#xA;<pre><code>http://gql-endpoint.com/graphiql?query=query%20{%20canonical(ref:%20%22%22)%20{%20id%20}%20}&#xA;</code></pre>&#xA;",7238958,,,,2020-10-25 16:22:23,"",,0,0,0,2020-10-25 16:22:23
64532042,2,,64530833,0,,"<p>Just change the <code>og:description</code> to <code>description</code> (standalone):</p>&#xA;<pre><code>          {&#xA;            property: `description`,&#xA;            content: metaDescription,&#xA;          },&#xA;</code></pre>&#xA;<p><code>og</code> attributes stands for <strong>O</strong>pen <strong>G</strong>raph. They are mostly used for social networks to get information when a web is shared, you can customize the description for those social networks instead of taking the description of the page itself. If you don't care about that, change it to <code>description</code>, if you do, keep both meta tags:</p>&#xA;<pre><code>          {&#xA;            property: `og:description`,&#xA;            content: anoterOgMetaDescription,&#xA;          },&#xA;          {&#xA;            property: `description`,&#xA;            content: metaDescription,&#xA;          },&#xA;</code></pre>&#xA;",5585371,,5585371,2020-10-26 05:55:09,2020-10-26 05:55:09,"",,0,0,0,2020-10-26 05:42:58
64539757,1,,,0,139,"<p>I am using the built-in database in Neo4J, and there is a relation between Person and Movie called REVIEWED. The relation itself has its own id and a rating property. Is it possible to query the REVIEWED relation and get its properties?</p>&#xA;<p>I have tried:</p>&#xA;<pre><code>type Reviewed {&#xA;  _id: ID!&#xA;  rating: Int&#xA;}&#xA;</code></pre>&#xA;<p>and then, in the graphQL playground:</p>&#xA;<pre><code>{&#xA;Reviewed{&#xA;  _id&#xA;  rating&#xA;}&#xA;</code></pre>&#xA;<p>}</p>&#xA;<p>EDIT: <a href=""https://i.stack.imgur.com/pVxHW.png"" rel=""nofollow noreferrer"">Database Image</a></p>&#xA;",12338646,,12338646,2020-10-27 11:48:19,2020-10-27 11:48:19,Is it possible to query on a relation itself in GraphQL?,<graphql>,0,2,0,2020-10-26 15:06:36
64540740,2,,64540282,0,,"<p>I'm a bit confused about what are you asking. You have a loop of <code>posts</code> where all the information is stored. Just access to it with:</p>&#xA;<pre><code>{posts.map(({ node }, index) =&gt; {&#xA;   console.log('tag name:', node.tags[index].name)&#xA;   return &lt;PostCard key={node.id} post={node} /&gt;&#xA;})}&#xA;</code></pre>&#xA;<p>Just access to nested properties in your <code>posts</code>.</p>&#xA;",5585371,,5585371,2020-10-27 06:16:00,2020-10-27 06:16:00,"",,0,0,0,2020-10-26 16:01:45
64557537,2,,64554524,1,,"<p>Contentful DevRel here. </p>&#xA;<p>I don't think that's possible via the GraphQL API. The GQL api works on with publish and preview data. The available functionality is more or less mapping to the data available in the <a href=""https://www.contentful.com/developers/docs/references/content-delivery-api/"" rel=""nofollow noreferrer"">Content Delivery API</a> and <a href=""https://www.contentful.com/developers/docs/references/content-preview-api/"" rel=""nofollow noreferrer"">Content Preview API</a>.</p>&#xA;<p>To retrieve this information you'd have to communicate with the <a href=""https://www.contentful.com/developers/docs/references/content-management-api/"" rel=""nofollow noreferrer"">Content Management API (CMA)</a>. You'll find the information when <a href=""https://www.contentful.com/developers/docs/references/content-management-api/#/reference/content-types/content-type"" rel=""nofollow noreferrer"">you fetch a content model</a>.</p>&#xA;<p><strong>❗Heads up, don't put a CMA token in the client (the browser).</strong> The CMA is a read/write API. If you leak the token to authorise people could alter your Contentful space and the data it includes.</p>&#xA;",4253183,,4253183,2021-02-16 19:06:45,2021-02-16 19:06:45,"",,0,0,0,2020-10-27 15:20:46
64577365,1,67292406,,1,676,"<p>I don't know if it's just hard to form a useful search for this problem or if there is no solution, but I've been trying to figure out how to use the GitHub GraphQL API to fetch all tags associated with a given commit.</p>&#xA;<p>I'm new to GraphQL and the GitHub API, so I'm just using <a href=""https://developer.github.com/v4/explorer/"" rel=""nofollow noreferrer"">GitHub's explorer</a> to try to find the mechanism to do this.</p>&#xA;<p>Here's what I've tried, where there is a commit with hash <code>bfa0635104bc9a559254b5007646942ff269ae11</code> and message <code>1.0.0</code>, tagged with <code>v1.0.0</code>. I'm trying to get that tag, given the commit hash.</p>&#xA;<pre><code>{&#xA;  repository(owner: &quot;bscotch&quot;, name: &quot;stitch&quot;) {&#xA;    createdAt&#xA;    description&#xA;    name&#xA;    object(expression: &quot;bfa0635104bc9a559254b5007646942ff269ae11&quot;) {&#xA;      ... on Commit {&#xA;        message&#xA;        oid&#xA;      }&#xA;      ... on Tag {&#xA;        tagId: id&#xA;        target {&#xA;          oid&#xA;        }&#xA;      }&#xA;    }&#xA;    ref(qualifiedName: &quot;bfa0635104bc9a559254b5007646942ff269ae11&quot;) {&#xA;      name&#xA;    }&#xA;    refs(first: 10, refPrefix: &quot;refs/tags/&quot;, orderBy: {field: TAG_COMMIT_DATE, direction: DESC}, query: &quot;bfa0635104bc9a559254b5007646942ff269ae11&quot;) {&#xA;      nodes {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The output of the above only returns data for the <code>... on Commit</code> content. Everything else is completely absent:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;repository&quot;: {&#xA;      &quot;createdAt&quot;: &quot;2020-09-18T18:47:33Z&quot;,&#xA;      &quot;description&quot;: &quot;A Gamemaker Studio 2 Pipeline Development Kit. A CLI and Node.JS API for creating GMS2 asset pipelines.&quot;,&#xA;      &quot;name&quot;: &quot;stitch&quot;,&#xA;      &quot;object&quot;: {&#xA;        &quot;message&quot;: &quot;1.0.0&quot;,&#xA;        &quot;oid&quot;: &quot;bfa0635104bc9a559254b5007646942ff269ae11&quot;&#xA;      },&#xA;      &quot;ref&quot;: null,&#xA;      &quot;refs&quot;: {&#xA;        &quot;nodes&quot;: []&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Is there a way to do this via the API? My best guess is that, if there is, it's via the <code>refs</code> field.</p>&#xA;",5346534,,,,2021-04-28 00:56:22,GitHub GraphQL API: Get tags for a commit,<github><graphql><github-api><github-api-v4>,1,2,0,2020-10-28 16:37:09
64619444,1,64619851,,3,91,<p>What is the difference between these two queries in GitHub GraphQL?</p>&#xA;<pre><code>query {&#xA;  user(login: &quot;desai10&quot;) {&#xA;    contributionsCollection {&#xA;      totalPullRequestContributions&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and</p>&#xA;<pre><code>query{&#xA;  user(login: &quot;desai10&quot;) {&#xA;    pullRequests {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>?</p>&#xA;<p>The 1st query says I have raised 5 PRs while the 2nd one says I have raised 17 PRs (17 seems to be the correct number).</p>&#xA;<p>These two queries are supposed to give the same number right? What is the difference and why is it giving different results?</p>&#xA;,7033146,,,,2020-10-31 08:33:25,"In GitHub GraphQL, what is the difference between contributionCollection->totalPullRequestContributions and user->pullRequests->totalCount?",<github><github-graphql>,1,0,0,2020-10-31 07:31:20
64619851,2,,64619444,3,,"<p>The difference is due to the way <code>contributionsCollection</code> is paginated. If you see the arguments to it in the GitHub <a href=""https://docs.github.com/en/free-pro-team@latest/graphql/reference/objects"" rel=""nofollow noreferrer"">doc</a>, the <code>from</code> argument is defined as</p>&#xA;<blockquote>&#xA;<p>from (DateTime)</p>&#xA;<p>Only contributions made at this time or later will be counted. If&#xA;omitted, defaults to a year ago.</p>&#xA;</blockquote>&#xA;<p>So when you don't pass any value to it, it would default to the current year and <code>totalPullRequestContributions</code> would show you your <strong>pull request count for the current year</strong> (which would be 5 in your case).</p>&#xA;<p>The second one, <code>pullRequests</code>, is a <code>PullRequestConnection</code>, and <code>totalCount</code> would give you the total count of items in the connection, which would be 17 in your case, showing your total number of pull requests.</p>&#xA;",9840318,,,,2020-10-31 08:33:25,"",,0,0,0,2020-10-31 08:33:25
64637763,2,,64636834,2,,"<p>When you call <code>useState</code> without setting an initial value, typescript doesn't know what value that state is expected to be.  You need to declare it explicitly by setting the generic.</p>&#xA;<pre><code>const [users, setUsers] = useState&lt;User[]&gt;();&#xA;</code></pre>&#xA;<p>Now typescript knows that our state can only be an array of <code>User</code> objects or <code>undefined</code>.</p>&#xA;<p>If we want to exclude the possibility of <code>undefined</code>, we can initialize it with an empty array <code>[]</code>.  We still need to provide the generic to specify what type of elements are in the array.  But now <code>users</code> is always an array of zero or more <code>User</code> objects.</p>&#xA;<pre><code>const [users, setUsers] = useState&lt;User[]&gt;([]);&#xA;</code></pre>&#xA;<p>So of your runtime checks become unnecessary when we have proper typings.   With the <code>useState</code> line above, your <code>return</code> becomes:</p>&#xA;<pre><code>return (&#xA;    &lt;&gt;&#xA;        &lt;h2&gt;Hello users,&lt;/h2&gt;&#xA;        {users.map((user, index) =&gt; (&#xA;            &lt;p key={`user_${index}`}&gt;&#xA;                {user.name}{' '}&#xA;            &lt;/p&gt;&#xA;        ))}&#xA;    &lt;/&gt;&#xA;)&#xA;</code></pre>&#xA;<p>It's ok to <code>map</code> on empty array, so we don't need to check anything.  We also don't need to declare the types for <code>user</code> and <code>index</code> because they are already known based on the type of the <code>users</code> array.</p>&#xA;",10431574,,,,2020-11-01 22:45:08,"",,0,0,0,2020-11-01 22:45:08
64642948,1,64789322,,3,931,"<p>I'm using apollo as my client and I run plenty of queries and mutations on my app. I was wondering if there is a way to have each of my query/mutation displayed by its name (eg. getProduct) instead of all showing as &quot;graph&quot; in my network tab? I'm on Brave (Chromium).</p>&#xA;<p>It would make debugging easier if I didn't have to click on each one and check the headers or the response to identify which query or mutation this request corresponds to.</p>&#xA;<p>Here's how it currently shows in my devtools:</p>&#xA;<p><a href=""https://i.stack.imgur.com/8Eu2R.png"" rel=""nofollow noreferrer"">network tab screenshot</a></p>&#xA;<p>Thanks a lot!</p>&#xA;",10600896,,10600896,2020-11-02 13:34:10,2022-08-04 13:28:49,Is there a way to name graphql requests in the devtool network tab?,<graphql><apollo><apollo-client><devtools>,2,1,0,2020-11-02 09:33:52
64724643,2,,64711705,0,,"<p>My index.jsx looks like this:</p>&#xA;<pre><code>const Home = () =&gt; (&#xA;  &lt;div style={{&#xA;    overflowX: 'hidden',&#xA;  }}&#xA;  &gt;&#xA;    let arr=[]&#xA;    &lt;Query query={FEATURE_ARTICLES_QUERY}&gt;&#xA;      {({ data: { articles } }) =&gt; {&#xA;        if (!articles.length) {&#xA;          return null;&#xA;        }&#xA;        arr=[articles[0].id,.......,articles[10].id];&#xA;        return &lt;SectionFeature articles={articles} /&gt;;&#xA;      }}&#xA;    &lt;/Query&gt;&#xA;    &lt;Query query={ARTICLES_QUERY} id={arr}&gt;&#xA;      {({ data: { quotes } }) =&gt; {&#xA;        if (!quotes.length) {&#xA;          return null;&#xA;        }&#xA;        return &lt;SectionQuote quotes={quotes} /&gt;;&#xA;      }}&#xA;    &lt;/Query&gt;&#xA;  &lt;/div&gt;&#xA;);&#xA;&#xA;export default Home;&#xA;</code></pre>&#xA;<p>For example, I want to pass 1st query's result to arr[], then pass it to 2nd query. But the array will be gone right after the 1st query ends.</p>&#xA;<p>UPDATE: I'd done it. Thank you so much for the hint</p>&#xA;",14589276,,14589276,2020-11-07 07:05:27,2020-11-07 07:05:27,"",,0,0,0,2020-11-07 05:08:22
64752978,2,,64752262,1,,"<p><strong>Short answer:</strong></p>&#xA;<p>Each repository lives inside a repository location. Dagster provides a default repository location name if you do not provide one yourself. To find the location name, you can click the repository picker in Dagit, and it'll be next to the repository name:</p>&#xA;<p><a href=""https://i.stack.imgur.com/84ljX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/84ljX.png"" alt=""enter image description here"" /></a></p>&#xA;<p>In this example, the repository name is <code>toys_repository</code>, and the location name is <code>dagster_test.toys.repo</code></p>&#xA;<p><strong>Longer answer:</strong></p>&#xA;<p>A workspace (defined with your <code>workspace.yaml</code>) is a collection of repository locations.</p>&#xA;<p>There are currently three types of repository locations:</p>&#xA;<ul>&#xA;<li>Python file</li>&#xA;<li>Python module</li>&#xA;<li>gRPC server</li>&#xA;</ul>&#xA;<p>Each repository location can have multiple repositories. Once you define the location, Dagster is able to automatically go find all the repositories in that location. In the example above, I defined my workspace to have a single Python module repository location:</p>&#xA;<pre><code>load_from:&#xA;  - python_module: dagster_test.toys.repo&#xA;</code></pre>&#xA;<p>Note that simply specified a module and did not specify a repository location name, so Dagster assigned a default repository location name.</p>&#xA;<p>If I wanted to specify a location name, I would do:</p>&#xA;<pre><code>load_from:&#xA;- python_module:&#xA;    module_name: dagster_test.toys.repo&#xA;    location_name: &quot;my_custom_location_name&quot;&#xA;</code></pre>&#xA;<p>Similarly for a python file location:</p>&#xA;<pre><code>load_from:&#xA;- python_file: repo.py&#xA;</code></pre>&#xA;<p>Or with a custom repository location name:</p>&#xA;<pre><code>load_from:&#xA;- python_file:&#xA;    relative_path: repo.py&#xA;    location_name: &quot;my_custom_location_name&quot;&#xA;</code></pre>&#xA;",2036353,,,,2020-11-09 13:53:27,"",,0,0,0,2020-11-09 13:53:27
64794400,1,64796882,,1,1904,"<p>I am using storefront API for my Shopify store.&#xA;And need to retrieve product metafields for my product.&#xA;I already added metafields using 3rd party app(<a href=""https://apps.shopify.com/metafields-editor-2"" rel=""nofollow noreferrer"">Metafields Guru</a>).</p>&#xA;<p>I need to get all those metafields for product, and had been following this article.&#xA;<a href=""https://shopify.dev/tutorials/retrieve-metafields-with-storefront-api"" rel=""nofollow noreferrer"">https://shopify.dev/tutorials/retrieve-metafields-with-storefront-api</a></p>&#xA;<pre><code>{&#xA;  productByHandle(handle: &quot;xxx-handle&quot;) {&#xA;  id&#xA;  title&#xA;  handle&#xA;  productType&#xA;  metafields(first: 5) {&#xA;    edges {&#xA;      node {&#xA;        key&#xA;        value&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>}</p>&#xA;<p>But I get an empty array for metafields.&#xA;Not sure what I am missing here.&#xA;Any help would be appreciated</p>&#xA;",10130714,,10130714,2020-11-11 21:36:57,2021-03-17 10:28:30,Can't Get Product Metafields using StoreFront GraphQL API,<graphql><shopify><e-commerce><shopify-api><shopify-storefront-api>,2,0,0,2020-11-11 21:29:27
64797437,2,,64796887,2,,"<p>It does not seem to be a job for generics because all of your types are well-defined.</p>&#xA;<p>I would suggest defining the node type itself, and then just describe the graph format as below:</p>&#xA;<pre><code>type MyNode = { name: string, age: number };&#xA;type graph = {&#xA;    [x: string]: {&#xA;        edges: Array&lt;{&#xA;            node: MyNode&#xA;        }&gt;&#xA;    }&#xA;};&#xA;&#xA;function name(params: graph): { [x: string]: MyNode[] } {&#xA;    return {...}&#xA;}&#xA;</code></pre>&#xA;<p>Replace the generic <code>[x: string]</code> with any known keys you have.</p>&#xA;<p>As you see in this code fragment, i have described the whole input with all the expected fields, so not just any js objects can come in.</p>&#xA;<p>I have defined the one type MyNode and this can be used to compose the rest of the graph, as well as composing the return type.</p>&#xA;<p>If you even want to limit what <code>[x: string]</code> can become, you can see here:<br />&#xA;<a href=""https://stackoverflow.com/questions/56419558/typescript-how-to-use-a-generic-parameter-as-object-key"">Typescript: How to use a generic parameter as object key</a></p>&#xA;<p>and actually write a generic function that guarantees the outcome to have the same key.</p>&#xA;<p>eg:</p>&#xA;<pre><code>type knownKeys = 'teacher' | 'student';&#xA;type MyNode = { name: string, age: number };&#xA;type graph&lt;T extends knownKeys&gt; = {&#xA;    [x in T]: {&#xA;        edges: Array&lt;{&#xA;            node: MyNode&#xA;        }&gt;&#xA;    }&#xA;};&#xA;&#xA;function myFunction&lt;T extends knownKeys&gt;(params: graph&lt;T&gt;): { [x in T]: MyNode[] } {&#xA;    return {}&#xA;}&#xA;&#xA;// use&#xA;const a = myFunction&lt;'teacher'&gt;({&#xA;    teacher: {&#xA;        edges: [&#xA;            { node: { name: 'hi', age: 42, } },&#xA;        ],&#xA;    }&#xA;});&#xA;&#xA;</code></pre>&#xA;",2652652,,2652652,2020-11-12 03:42:03,2020-11-12 03:42:03,"",,0,5,0,2020-11-12 03:23:53
64814311,1,,,-1,337,"<p>I'm trying to get my github profile detail from github using the graphql endpoint <code>'https://developer.github.com/v4/explorer/'</code> and after creating a personal token i'm getting a 405 error, this is my code please what am I doing wrong <a href=""https://i.stack.imgur.com/AIVRr.png"" rel=""nofollow noreferrer"">error message</a><a href=""https://i.stack.imgur.com/AIVRr.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;",14257362,,14257362,2020-11-13 01:51:15,2020-11-13 02:10:19,Github graphql replying with 405,<github><graphql><fetch>,1,2,0,2020-11-13 01:44:13
64834263,1,64835687,,1,2524,"<p>My main functional component performs a huge amount of useQueries and useMutations on the child component hence I have set it as React.memo so as to not cause re-rendering on each update. Basically, when new products are selected I still see the old products because of memo.</p>&#xA;<p>mainFunction.js</p>&#xA;<pre><code>const [active, setActive] = useState(false);&#xA;const handleToggle = () =&gt; setActive(false);&#xA;&#xA;const handleSelection = (resources) =&gt; {&#xA;        const idsFromResources = resources.selection.map((product) =&gt; product.variants.map(variant =&gt; variant.id));&#xA;        store.set('bulk-ids', idsFromResources); //loal storage js-store library&#xA;        handleToggle&#xA;    };&#xA;    &#xA;const emptyState = !store.get('bulk-ids'); // Checks local storage using js-store library&#xA;    &#xA;return (&#xA;    &lt;Page&gt;&#xA;        &lt;TitleBar&#xA;            title=&quot;Products&quot;&#xA;            primaryAction={{&#xA;                content: 'Select products',&#xA;                onAction: () =&gt; {&#xA;                    setActive(!active)&#xA;                }&#xA;            }}&#xA;        /&gt;&#xA;        &lt;ResourcePicker&#xA;            resourceType=&quot;Product&quot;&#xA;            showVariants={true}&#xA;            open={active}&#xA;            onSelection={(resources) =&gt; handleSelection(resources)}&#xA;            onCancel={handleToggle}&#xA;        /&gt;&#xA;        &lt;Button &gt;Add Discount to Products&lt;/Button&gt; //Apollo useMutation&#xA;&#xA;        {emptyState ? (&#xA;            &lt;Layout&gt;&#xA;                Select products to continue&#xA;            &lt;/Layout&gt;&#xA;        ) : (&#xA;                &lt;ChildComponent /&gt;&#xA;            )}&#xA;    &lt;/Page&gt;&#xA;    );&#xA;    &#xA;    &#xA;</code></pre>&#xA;<p>ChildComponent.js</p>&#xA;<pre><code>class ChildComponent extends React {&#xA;    return(&#xA;        store.get(bulk-ids).map((product)=&gt;{&#xA;            &lt;Query query={GET_VARIANTS} variables={{ id: variant }}&gt;&#xA;                {({ data, extensions, loading, error }) =&gt; {&#xA;                    &lt;Layout&gt;&#xA;                        // Query result UI&#xA;                    &lt;Layout&gt;&#xA;                }}&#xA;            &lt;/Query&gt;&#xA;        })&#xA;    )&#xA;}&#xA;export deafult React.memo(ChildComponent);&#xA;    &#xA;</code></pre>&#xA;",10533671,,3383693,2020-11-14 18:33:27,2020-11-14 18:33:27,How can I force update React.memo child component?,<reactjs><apollo-client><react-memo>,1,4,0,2020-11-14 13:11:14
64866535,2,,64865521,2,,"<p>In TypeScript <code>[X]</code> is a <a href=""https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple"" rel=""nofollow noreferrer"">Tuple</a></p>&#xA;<blockquote>&#xA;<p>Tuple types allow you to express an array with a fixed number of elements whose types are known, but need not be the same.</p>&#xA;</blockquote>&#xA;<p>So <code>[X]</code> means an array with a length of exactly one where the first element is of the type <code>X</code>. <code>[X, Y]</code> means an array with a length of exactly two where the first element is of type <code>X</code> and the second element is of type <code>Y</code>. And so on.</p>&#xA;<p>If your intent is to type an array of any length where every element is a specific type, use an <a href=""https://www.typescriptlang.org/docs/handbook/basic-types.html#array"" rel=""nofollow noreferrer"">Array</a> instead: <code>X[]</code> or <code>Array&lt;X&gt;</code> (these are equivalent).</p>&#xA;",6024220,,,,2020-11-16 22:16:56,"",,0,1,0,2020-11-16 22:16:56
64887717,2,,64887489,1,,"<p>You are accessing wrong the nested iterable object. You have defined <code>articles</code> but when iterating through them, <code>node</code> is not the nested object, is just the article itself, the iterable object. You need to downside one level.</p>&#xA;<p>Change the loop to:</p>&#xA;<pre><code>articles.forEach(({ node } ) =&gt; {&#xA;   const slug = node.pageAttributes.slug&#xA;   // rest of the code&#xA;}&#xA;</code></pre>&#xA;<p>With the snippet above, you are destructuring the iterable object (article) to get the <code>node</code> itself. Alternatively, if you want to keep your previous structure, just access to:</p>&#xA;<pre><code>articles.forEach(( node, index ) =&gt; {&#xA;    const slug = node.node.pageAttributes.slug&#xA;    // rest of the code&#xA;}&#xA;</code></pre>&#xA;<p>In that case, I would suggest a change of naming to:</p>&#xA;<pre><code>articles.forEach(( article, index ) =&gt; {&#xA;    const slug = article.node.pageAttributes.slug&#xA;    // rest of the code&#xA;}&#xA;</code></pre>&#xA;",5585371,,5585371,2020-11-18 07:48:08,2020-11-18 07:48:08,"",,0,0,0,2020-11-18 05:44:13
64921272,1,64921423,,0,80,"<p>I have some data pulled through the GraphQL API and stringified in JSON. It looks like this</p>&#xA;<pre><code>var data = {&#xA;&quot;data&quot;: {&#xA;    &quot;shop&quot;: {&#xA;        &quot;products&quot;: {&#xA;            &quot;edges&quot;: [{&#xA;                    &quot;node&quot;: {&#xA;                        &quot;title&quot;: &quot;Green Silk T-Shirt&quot;,&#xA;                        &quot;material&quot;: {&#xA;                            &quot;value&quot;: &quot;Silk&quot;&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    &quot;node&quot;: {&#xA;                        &quot;title&quot;: &quot;Red Silk T-Shirt&quot;,&#xA;                        &quot;material&quot;: {&#xA;                            &quot;value&quot;: &quot;Silk&quot;&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    &quot;node&quot;: {&#xA;                        &quot;title&quot;: &quot;Blue Cotton T Shirt&quot;,&#xA;                        &quot;material&quot;: {&#xA;                            &quot;value&quot;: &quot;Cotton&quot;&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    &quot;node&quot;: {&#xA;                        &quot;title&quot;: &quot;Red Cotton T-Shirt&quot;,&#xA;                        &quot;material&quot;: {&#xA;                            &quot;value&quot;: &quot;Cotton&quot;&#xA;                        }&#xA;                    }&#xA;                },&#xA;                {&#xA;                    &quot;node&quot;: {&#xA;                        &quot;title&quot;: &quot;Pink Cotton T-Shirt&quot;,&#xA;                        &quot;material&quot;: {&#xA;                            &quot;value&quot;: &quot;Cotton&quot;&#xA;                        }&#xA;                    }&#xA;                }&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>}</p>&#xA;<p>I also have 2  elements like so:</p>&#xA;<pre><code>&lt;div id=&quot;cotton&quot;&gt;&lt;/div&gt;&#xA;&lt;div id=&quot;silk&quot;&gt;&lt;/div&gt;&#xA;</code></pre>&#xA;<p>I wish to use javascript (or JQuery) to loop through the JSON data and show the title of every node with a material value of &quot;Silk&quot; in the  with the ID of silk and similarly for &quot;cotton&quot;.</p>&#xA;<p>I understand that I can achieve this with the filter function, but I'm having issues grabbing values of one branch on the basis of the values of a lower branch.</p>&#xA;<p>Is it therefore possible to do this and if so how?</p>&#xA;",1732907,,,,2020-11-19 23:13:01,Filter JSON GraphQL data with javascript or Jquery,<javascript><jquery><json><graphql>,1,0,0,2020-11-19 22:56:24
64927773,1,,,0,184,"<p>We are using graphql-spqr to generate the graphql schema from our Java backend api and model.</p>&#xA;<p>Today to get products for example we annotate a methods that looks like that:</p>&#xA;<pre><code>@GraphQLQuery&#xA;List&lt;Product&gt; allProducts() {...}&#xA;</code></pre>&#xA;<p>We want to avoid creating a new endpoint to retrieve extra fields in Product.</p>&#xA;<p><strong>Is there a way to define a resolver for fields that are not part of the model?</strong> (annotation or not)</p>&#xA;<p>As an example, let's assume our java model for a Product + two end points:</p>&#xA;<pre><code>class Product {&#xA;   String id;&#xA;   String name;&#xA;}&#xA;&#xA;class Frame {&#xA;  String id;&#xA;}&#xA;&#xA;// and some kind of relationship between the two&#xA;class ProductToFrame {&#xA;  String productId;&#xA;  String frameId&#xA;}&#xA;&#xA;List&lt;Product&gt; allProducts();&#xA;List&lt;Frame&gt; getFramesByProductId(String productId);&#xA;</code></pre>&#xA;<p>And we want our graphql schema to look like that:</p>&#xA;<pre><code>type Product {&#xA;  id: String&#xA;  name: String&#xA;&#xA;  frames: [Frame] &#xA;}&#xA;&#xA;type Frame {&#xA;  id: String&#xA;}&#xA;</code></pre>&#xA;",8708010,,294657,2020-11-20 22:30:27,2020-11-20 22:30:27,Can I resolve fields that are not in the model with @GraphQLQuery,<java><graphql-java><graphql-spqr>,1,0,0,2020-11-20 10:26:31
64958922,2,,63697402,0,,"<p>Works exactly like described here:</p>&#xA;<p><a href=""https://shopify.dev/docs/admin-api/graphql/reference/metafields/metafield"" rel=""nofollow noreferrer"">https://shopify.dev/docs/admin-api/graphql/reference/metafields/metafield</a></p>&#xA;<p>if you want to query a certain meta field&#xA;its</p>&#xA;<pre><code>fieldName: metafield(namespace: &quot;YOUR_NAMESPACE&quot;, key: &quot;YOUR_KEY&quot;){&#xA;     value&#xA;}&#xA;</code></pre>&#xA;<p>As of Nov 2020 it seems like metafield queries only work against the ADMIN GraphQL API. When I try them with the Storefront API it returns null for everything I query.</p>&#xA;<p>PS: Seems like you have to enable each metafield you want to access via Storefront:&#xA;<a href=""https://shopify.dev/tutorials/retrieve-metafields-with-storefront-api"" rel=""nofollow noreferrer"">https://shopify.dev/tutorials/retrieve-metafields-with-storefront-api</a></p>&#xA;",982877,,982877,2020-11-22 20:09:30,2020-11-22 20:09:30,"",,0,0,0,2020-11-22 20:02:55
64965577,2,,64933273,8,,"<p>If you do a substitution in the error message text, it becomes more readable:</p>&#xA;<blockquote>&#xA;<p>TS2322:  <br>Type '((X) | null | undefined)[]' is not assignable to type&#xA;'Maybe&lt;X&gt;[]'.<br>Type '(X) | null | undefined' is not assignable to&#xA;type 'Maybe&lt;X&gt;'.<br>      Type 'undefined' is not assignable to type&#xA;'Maybe&lt;X&gt;'.</p>&#xA;</blockquote>&#xA;<p>where the X stands for</p>&#xA;<blockquote>&#xA;<p>{ __typename?: &quot;ChildProfile&quot; | undefined; } &amp; Pick&lt;ChildProfile,&#xA;&quot;id&quot; | &quot;name&quot;&gt; &amp; { registrationToday?: ({ __typename?:&#xA;&quot;Registration&quot; | undefined; } &amp; Pick&lt;...&gt; &amp; { ...; }) | null |&#xA;undefined; }</p>&#xA;</blockquote>&#xA;<p>Now we can see that the compiler indicates that the type <code>Maybe&lt;X&gt;</code> cannot hold a value <code>undefined</code>.<br>&#xA;To satisfy the compiler, you have multiple options</p>&#xA;<ul>&#xA;<li>filter out <code>undefined</code> values</li>&#xA;<li>use a typecast (as mentioned in Daniele Ricci's answer)</li>&#xA;<li>change the definition of the <code>Maybe</code> type to allow <code>undefined</code> values&#xA;<br><br></li>&#xA;</ul>&#xA;<p>If you choose to modify the <code>Maybe</code> type, there is an example how to do that in the GraphQL code generator <a href=""https://graphql-code-generator.com/docs/plugins/typescript"" rel=""noreferrer"">documentation</a>:</p>&#xA;<blockquote>&#xA;<p><a href=""https://i.stack.imgur.com/ZcEqM.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/ZcEqM.png"" alt=""enter image description here"" /></a></p>&#xA;</blockquote>&#xA;",11240642,,,,2020-11-23 09:19:06,"",,0,0,0,2020-11-23 09:19:06
64990519,1,,,0,382,"<p>Normally I wouldn't try and create a relationship between primary keys within my Amplify Schema, though I am trying to recreate a friends code so that I can regularly deploy it with Amplify, hence I don't really have an option in this case.</p>&#xA;<p>My question is that I would like to create a link between these two Primary keys and was wondering if there is a way to do that, I have already followed the documentation <a href=""https://docs.amplify.aws/cli/graphql-transformer/connection"" rel=""nofollow noreferrer"">here</a> as well.</p>&#xA;<p>Ideally I would like to have my schema.graphql file look like this:</p>&#xA;<pre><code>type ShoppingList @model @key(fields: [&quot;UPC&quot;]) {&#xA;    UPC: Products @connection&#xA;    quantity: Int&#xA;    timestamp: Int&#xA;}&#xA;&#xA;type Products @model @key(fields: [&quot;UPC&quot;]) {&#xA;    UPC: String!&#xA;    Description: String&#xA;    Name: String&#xA;    Price: Float&#xA;    ProductId: String&#xA;    combinedSeaarchKey: String&#xA;    Img_URL: String&#xA;    LongDescription: String&#xA;    UserForRecommendations: Boolean&#xA;    Hidden: Boolean&#xA;    TrainingImageWidthInches: Float&#xA;}&#xA;</code></pre>&#xA;<p>When trying to deploy this, I get the error &quot;Expected scalar and got Products&quot;.</p>&#xA;<p>Ideally I want to have the schema the same as well, since I don't want to go re-writing my friends client side application, and would rather try and fix it in the schema!</p>&#xA;<p>Hence any help would be greatly appreciated! Thanks</p>&#xA;",10992687,,,,2021-02-02 15:51:14,Relationships Between Primary Keys with Amplify Schema File,<graphql><aws-amplify><aws-appsync>,1,0,0,2020-11-24 16:19:34
65005397,2,,44170603,1,,"<p>I had the same problem and find three different solutions to it:</p>&#xA;<ol>&#xA;<li>Using Interface</li>&#xA;<li>Using Union</li>&#xA;<li>Using a String with additional type information</li>&#xA;</ol>&#xA;<p>All not very nice but working. I put a simple example project with all solutions on Github: <a href=""https://github.com/chnoack/apollo-dynamic-types-example"" rel=""nofollow noreferrer"">https://github.com/chnoack/apollo-dynamic-types-example</a></p>&#xA;",2586410,,,,2020-11-25 13:12:13,"",,0,0,0,2020-11-25 13:12:13
65023438,1,,,0,821,"<p>I am having difficulties with some GraphQL queries to a web service. The issue is slightly complicated hopefully I will try and explain it reasonably.</p>&#xA;<p>The issue stems from the fact that one of the fields I am interested in getting is not a scalar but an array. I want to return one value in that array based on string matching, which is not possible with GraphQL alone if I understand correctly.</p>&#xA;<p>So I figure I do the filtering in python later on and just grab them all. However in this case the issue is that I cannot easily process the columns since it's an embedded json array in pandas.</p>&#xA;<p>The following code shows a minimal example where I get a nested json string (an array of name:value pairs) in the field of <code>xrefs</code> instead of an array.</p>&#xA;<pre><code>query = \&#xA;    f&quot;&quot;&quot;&#xA;    {{&#xA;      targets(&#xA;        filter: {{&#xA;          facets: [{{&#xA;            facet: &quot;Target Development Level&quot;,&#xA;            values: [&quot;Tchem&quot;]&#xA;          }}]&#xA;        }}&#xA;      ) {{&#xA;        targets(top:10){{&#xA;            xrefs (source: &quot;Ensembl&quot;){{name}}&#xA;            sym&#xA;            tdl&#xA;            uniprot&#xA;&#xA;          }}&#xA;      }}&#xA;    }}&#xA;    &quot;&quot;&quot;&#xA;url = 'https://pharos-api.ncats.io/graphql'&#xA;r = requests.post(url, json={'query': query})&#xA;json_data = json.loads(r.text)&#xA;df = pd.read_json(json.dumps(json_data['data']['targets']['targets']), orient='records')&#xA;</code></pre>&#xA;<p>What I want to achieve in order of preference:</p>&#xA;<ol>&#xA;<li><p>Be able to pick a single value from <code>xrefs</code>, based on string matching on <code>name</code> using only GraphQL</p>&#xA;</li>&#xA;<li><p>Get an array of strings for <code>xrefs</code> instead of name:value pairs, again from GQL</p>&#xA;</li>&#xA;<li><p>Get pandas/python to parse and flatten the json for <code>xrefs</code> so that I get a list of strings instead of something like:</p>&#xA;<p>[{'name': 'ENST00000260967'},&#xA;{'name': 'ENSP00000260967'},&#xA;{'name': 'ENSG00000138395'},&#xA;{'name': 'ENST00000410091'},&#xA;{'name': 'ENSP00000386901'},&#xA;{'name': 'ENST00000434439'},&#xA;{'name': 'ENSP00000412775'},&#xA;{'name': 'ENST00000450471'},&#xA;{'name': 'ENSP00000406472'}]</p>&#xA;</li>&#xA;</ol>&#xA;",328725,,,,2020-11-26 15:46:17,How to get a flat array as a response from GraphQL server,<python><arrays><json><pandas><graphql>,1,0,0,2020-11-26 13:55:48
65034035,1,,,0,201,"<p>I am new to GitHub API, not sure if it's the best solution either.</p>&#xA;<p>But suppose I have a list of Repositories in which I want to commit in the future or have committed already as a <code>.md</code> file, can be a <code>.txt</code> file also if it suits the purpose.</p>&#xA;<p>e.g.</p>&#xA;<pre><code>&#xA;| Serial Number  | Name |&#xA;| ------------- | ------------- |&#xA;| 1  | [Badges](https://github.com/badges/shields)  |&#xA;| 2  | [Tensorflow](https://github.com/tensorflow/tensorflow)  |&#xA;etc&#xA;</code></pre>&#xA;<p>Now let's say, I contributed once in TF.&#xA;I want to sort the <code>.md</code> file or <code>.txt</code> according to the number of contributions.</p>&#xA;<p>Of course, the list might contain REPO in which I haven't contributed at all like Badges here.</p>&#xA;<p>Lastly, can someone suggest how to automate this, I think GitHub Action is the best course possible.</p>&#xA;<p>EDIT - 1</p>&#xA;<p>Explanation - The <code>.md</code> file or <code>.txt</code> file (which is more suitable as pointed out in comments) will contain a list of repositories, I want to contribute to in the future. I want my script, to automatically sort the list, according to a number of contributions I make to keep a track of them.</p>&#xA;<p>EDIT - 2</p>&#xA;<p>I know the basics of GitHub GrraphQl API.</p>&#xA;<p>Using this query I can generate a number of repositories i have contributed to -</p>&#xA;<pre><code>{&#xA;  viewer {&#xA;    repositoriesContributedTo(first: 100, contributionTypes: [COMMIT, ISSUE, PULL_REQUEST, REPOSITORY]) {&#xA;      totalCount&#xA;      nodes {&#xA;        nameWithOwner&#xA;&#xA;      }&#xA;      pageInfo {&#xA;        endCursor&#xA;        hasNextPage&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",14718169,,14718169,2020-12-05 14:21:49,2020-12-05 14:21:49,Sort the List of Github Repositories,<git><sorting><github><automation><graphql>,0,4,0,2020-11-27 08:22:33
65101514,1,65271603,,3,720,"<blockquote>&#xA;<p>FYI: There are a ton of other posts concerning GraphQL Syntax Error in VS Code. I read many of them, but did not find anything relevant to this. My apologies if I missed it in the similar questions.</p>&#xA;</blockquote>&#xA;<p>Environment:</p>&#xA;<ul>&#xA;<li>VS Code v.1.51.1</li>&#xA;<li>Windows 10 x64 19041</li>&#xA;<li><a href=""https://github.com/apollographql/apollo-tooling"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-tooling</a> v.1.17.0</li>&#xA;<li>React Typescript Application</li>&#xA;</ul>&#xA;<p>I have a component that uses the useQuery hook. The query is retrieved from another query and comes in via a variable typed as <code>string</code> In order for the useQuery to correctly use the graphql query, it has first has to be made into a DocumentNode for which I use gql from graphql-tag npm package. The resulting code snippet looks like:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>...&#xA;const PREPARED_QUERY = useMemo(() =&gt; gql`${query}`, [query])&#xA;const data = useQuery(PREPARED_QUERY, queryOptions)&#xA;...&#xA;</code></pre>&#xA;<p>This is working code, but the Apollo GraphQL extension throws a warning on this line:</p>&#xA;<p><code>Syntax Error: Unexpected &lt;EOF&gt;.GraphQL: Syntax</code></p>&#xA;<p>I understand this is because it is checking the query string to ensure that it is properly formatted and it does not understand the template string &quot;hack&quot;.</p>&#xA;<p>Questions:</p>&#xA;<ol>&#xA;<li>Can this be silences with some form of ignore comment?</li>&#xA;<li>If not, Is there any way to form this to make this template string pass the syntax check?</li>&#xA;</ol>&#xA;",1707323,,,,2020-12-13 01:33:03,Suppress GraphQL: Syntax Error in VS Code when using template string,<graphql><syntax-error><apollo>,1,9,0,2020-12-02 02:51:10
65117317,1,65120441,,1,53,"<p>I was given an example for some code that has an array hardcoded. Im looking to swap this out for my array that is pulled in from an API using graphql. Below is the code pen to the original example &amp; another for what i've tried with no avail.</p>&#xA;<p>I'm pretty new to graphql &amp; js so likely an amateur mistake, any pointers would be much appreciated!</p>&#xA;<p>Original code - <a href=""https://codesandbox.io/s/nice-saha-gwbwv"" rel=""nofollow noreferrer"">https://codesandbox.io/s/nice-saha-gwbwv</a></p>&#xA;<p>My pen - <a href=""https://codesandbox.io/s/quiet-wind-brq8s?file=/src/App.js"" rel=""nofollow noreferrer"">https://codesandbox.io/s/quiet-wind-brq8s?file=/src/App.js</a></p>&#xA;",10413696,,5585371,2020-12-03 05:36:48,2020-12-03 05:41:17,How to declare array from API in place of hardcoded array?,<javascript><arrays><reactjs><graphql><gatsby>,1,0,0,2020-12-02 22:48:24
65120434,1,,,0,101,"<p>So, I'm fairly new to programming and I am trying to only display certain objects from a api response array. Besides that, I am using JSReport and Handlebars. Is there a way to filter out the ones with a special value?</p>&#xA;<p>Here's an example code:</p>&#xA;<pre><code>    {&#xA;  &quot;data&quot;: {&#xA;    &quot;books&quot;: {&#xA;      &quot;author&quot;: {&#xA;        &quot;name&quot;: &quot;Book Bookinson&quot;,&#xA;        &quot;books&quot;: [&#xA;          {&#xA;            &quot;name&quot;: &quot;book 1 &quot;,&#xA;            &quot;stars&quot;: &quot;3&quot;&#xA;          },&#xA;          {&#xA;            &quot;address1&quot;: &quot;book 2 &quot;,&#xA;            &quot;phone1&quot;: &quot;1&quot;&#xA;          },&#xA;          {&#xA;            &quot;name&quot;: &quot;book 3 &quot;,&#xA;            &quot;stars&quot;: &quot;3&quot;&#xA;          },&#xA;          {&#xA;            &quot;address1&quot;: &quot;book 4 &quot;,&#xA;            &quot;phone1&quot;: &quot;3&quot;&#xA;          },&#xA;        ]&#xA;      },&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>So in the code above, I want to filter out so I only get the object with the &quot;stars&quot;: &quot;1&quot;, and skip the rest. Is there a clean, easy way to do this that I am yet not aware of? I am aware that I can use the object then index through them, but I get a long list of objects that could really need a filter.</p>&#xA;<p>Please go easy on me, freshie here!</p>&#xA;",14753830,,,,2020-12-03 06:13:28,Only display objects inside of an array with certain type [GRAPHQL],<javascript><json><graphql><handlebars.js><jsreport>,1,5,0,2020-12-03 05:35:44
65142727,1,65143184,,0,285,"<p>Github seems to allow variables in its API v4. This is what I wanted to use in bash to transfer a number between two queries:</p>&#xA;<ul>&#xA;<li>The first query gets the number of the last closed PR.</li>&#xA;</ul>&#xA;<pre><code>{&#xA;  &quot;query&quot;: &quot;query getLatestPulLRequests {&#xA;  search(query: &quot;repo:&lt;owner&gt;/&lt;repo&gt; type:pr is:open sort:updated-desc&quot;, type: ISSUE, first: 10) {&#xA;    nodes {&#xA;      ... on PullRequest {&#xA;        number&#xA;        id&#xA;        title&#xA;        mergedAt&#xA;        updatedAt&#xA;      }&#xA;    }&#xA;  }&#xA;  }&quot;&#xA;}&#xA;</code></pre>&#xA;<pre><code>curl -X POST -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: bearer $GITHUB_TOKEN&quot; -d @./scripts/queries/gitqueryClosedPRsByDate.json https://github.ibm.com/api/graphql | jq .data.search.nodes[0].number &gt; latestPRnumber.json&#xA;</code></pre>&#xA;<p>This works beautifully and gives me the right number back. I can also just parse it into a variable (which I tried).</p>&#xA;<ul>&#xA;<li>The second query is supposed to call the PR with the latestPRnumber and queries the title, body and all comments from it.</li>&#xA;</ul>&#xA;<pre><code>{&#xA;  &quot;query&quot;: &quot;query getPrTitleBodyComments{&#xA;  repository(name: &quot;&lt;repo&gt;&quot;, owner: &quot;&lt;owner&gt;&quot;) {&#xA;    id&#xA;    pullRequest(number: 1) {&#xA;      number&#xA;      title&#xA;      body&#xA;      comments(last: 10) {&#xA;        totalCount&#xA;        nodes {&#xA;          body&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;  }&quot;&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>The second query with the number static works fine as well.</p>&#xA;<p>!!!&#xA;But instead of the manual number <code>pullRequest(number: 1)</code> in query 2, I want to use the <code>latestPRnumber</code>. Does anyone have an idea, how I can do that in bash?</p>&#xA;<ul>&#xA;<li><p>I tried adding <code>&quot;variables&quot;: {&quot;PRnumber&quot;: &quot;$PRnumber&quot;}</code>in the JSON but since its not a script it obviously doesn't work. Can I include the variable in the <code>curl</code> somehow?</p>&#xA;</li>&#xA;<li><p>I tried</p>&#xA;</li>&#xA;</ul>&#xA;<pre><code>curl -X POST -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: bearer $GITHUB_TOKEN&quot; -d @./scripts/queries/gitqueryClosedPRsByDate.json -d 'PRnumber=$PRnumber'  https://github.ibm.com/api/graphql | jq .&#xA;</code></pre>&#xA;<p>(passing it as more data) but the ERROR is always the same:</p>&#xA;<pre><code>  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current&#xA;                                 Dload  Upload   Total   Spent    Left  Speed&#xA;100   409  100   115  100   294    219    560 --:--:-- --:--:-- --:--:--   779&#xA;{&#xA;  &quot;message&quot;: &quot;Problems parsing JSON&quot;,&#xA;  &quot;documentation_url&quot;: &quot;https://developer.github.com/enterprise/2.21/v4&quot;&#xA;}&#xA;&#xA;</code></pre>&#xA;",13792228,,13792228,2020-12-04 11:44:25,2020-12-04 17:40:44,Using bash variables in Github API v4,<json><git><github><graphql>,2,1,0,2020-12-04 11:26:06
65142730,2,,65142702,0,,"<p>Since the key has quotes around it, it's a string (<code>&quot;0&quot;</code>) instead of a number (<code>0</code>). Your original syntax would only work if the array key were a number.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>console.log(&quot;0&quot; === 0) // &quot;false&quot;&#xA;</code></pre>&#xA;<p>In order to access that key, supply the correct string as your array key:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>error['0'].errorType&#xA;</code></pre>&#xA;",7744045,,129086,2020-12-05 01:40:21,2020-12-05 01:40:21,"",,0,0,0,2020-12-04 11:26:08
65143184,2,,65142727,0,,"<p>GraphQL queries can include <a href=""https://graphql.org/learn/queries/#variables"" rel=""nofollow noreferrer"">variables</a>.  These need to be declared at the top level of your query, and then can be used anywhere inside the query:</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>query GetPrTitleBodyComments($repo: String!, $owner: String!, $prNumber: Int!) {&#xA;  repository(name: $repo, owner: $owner) {&#xA;    pullRequest(number: $prNumber) { ... }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>In the <a href=""https://graphql.org/learn/serving-over-http/#post-request"" rel=""nofollow noreferrer"">JSON request format</a> you need to pass <code>&quot;variables&quot;</code> as a separate top-level item, alongside the <code>&quot;query&quot;</code>:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;query&quot;: &quot;query GetPrTitleBodyComments(...) { ... }&quot;,&#xA;  &quot;variables&quot;: {&#xA;    &quot;repo&quot;: &quot;&lt;repo&gt;&quot;,&#xA;    &quot;owner&quot;: &quot;&lt;owner&gt;&quot;,&#xA;    &quot;prNumber&quot;: 1&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Assembling this in a shell script can be a little bit tricky.  (A higher-level scripting language with a <a href=""https://graphql.org/code/"" rel=""nofollow noreferrer"">GraphQL client library</a> might be a better match.)  The curl <code>-d</code> <a href=""https://curl.se/docs/manpage.html"" rel=""nofollow noreferrer"">option</a> can use the conventional <code>-</code> as a filename to read the input data from stdin, so you can structure the overall shell request as</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>(something to generate the request JSON) | \&#xA;curl \&#xA;  -H 'Content-Type: application/json' \&#xA;  -H &quot;Authorization: Bearer $GITHUB_TOKEN&quot; \&#xA;  --data-binary @- \&#xA;  https://github.ibm.com/api/graphql | \&#xA;jq -r .data.repository.pullRequest.title&#xA;</code></pre>&#xA;<p>If you're already using <a href=""https://stedolan.github.io/jq/"" rel=""nofollow noreferrer"">jq</a> then you can use it to safely assembly the JSON file.  The tricks here are that <code>jq --arg key value</code> sets <code>$key</code> to some value; <code>jq --rawfile key filename</code> sets <code>$key</code> to the contents of <code>filename</code>; and <code>jq -f file.jq</code> reads the jq filter (program) from a file.  So you can write a jq &quot;program&quot; like:</p>&#xA;<pre><code>{&#xA;  query: $query,&#xA;  variables: {&#xA;    repo: $repo,&#xA;    owner: $owner,&#xA;    prNumber: $prNumber&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and then invoke this as</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>jq -f ./scripts/queries/gitqueryClosedPRsByDate.jq \&#xA;  --rawfile query ./scripts/queries/gitqueryClosedPRsByDate.json \&#xA;  --arg repo '&lt;repo&gt;' \&#xA;  --arg owner '&lt;owner&gt;' \&#xA;  --arg prNumber 1 | \&#xA;curl ... --data-binary @- ...&#xA;</code></pre>&#xA;<p>Using <code>jq</code> this way ensures the JSON is syntactically correct and protects you against unusual characters being embedded in the variable values.  In principle you could assemble the JSON query as a string, perhaps using a <code>&lt;&lt;</code> heredoc, but it's up to you to make sure the query variables don't contain double-quotes, newlines, or other things that would disrupt the JSON structure.</p>&#xA;<p>(And once again, a GraphQL client library in a higher-level language will manage all of these details for you: you can generally pass it the query as a fixed string, the variables as a dictionary or map object, and the API URL, and it will take care of all of this formatting for you.)</p>&#xA;",10008173,,,,2020-12-04 12:00:18,"",,0,2,0,2020-12-04 12:00:18
65144101,2,,65142727,0,,"<p>@David-maze had the perfect solution for the problem. I also discovered that in some cases you may combine queries instead. This could impact performance but makes data handling easier. In my case I came up with this:</p>&#xA;<pre><code>query getLatestPulLRequests {&#xA;  search(query: &quot;repo:&lt;owner&gt;/&lt;repo&gt; type:pr is:open sort:updated-desc&quot;, type: ISSUE, first: 10) {&#xA;    nodes {&#xA;      ... on PullRequest {&#xA;        number&#xA;        id&#xA;        title&#xA;        mergedAt&#xA;        updatedAt&#xA;        body&#xA;        comments(last: 10) {&#xA;          edges {&#xA;            node {&#xA;              author {&#xA;                login&#xA;              }&#xA;              body&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>which results in:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;search&quot;: {&#xA;      &quot;nodes&quot;: [&#xA;        {&#xA;          &quot;number&quot;: 1,&#xA;          &quot;id&quot;: &quot;MDExOlB1bGxSZXF1ZXN0NTMwNjQ0MzQ0&quot;,&#xA;          &quot;title&quot;: &quot;This is the PR Title&quot;,&#xA;          &quot;mergedAt&quot;: null,&#xA;          &quot;updatedAt&quot;: &quot;2020-12-02T18:33:16Z&quot;,&#xA;          &quot;body&quot;: &quot;This is the description of the PR&quot;,&#xA;          &quot;comments&quot;: {&#xA;            &quot;edges&quot;: [&#xA;              {&#xA;                &quot;node&quot;: {&#xA;                  &quot;author&quot;: {&#xA;                    &quot;login&quot;: &quot;&lt;user&gt;&quot;&#xA;                  },&#xA;                  &quot;body&quot;: &quot;this is the first comment&quot;&#xA;                }},&#xA;              {&#xA;                &quot;node&quot;: {&#xA;                  &quot;author&quot;: {&#xA;                    &quot;login&quot;: &quot;&lt;user&gt;&quot;&#xA;                  },&#xA;                  &quot;body&quot;: &quot;this is the second comment&quot;&#xA;              } }&#xA;            ]&#xA;        } }&#xA;      ]&#xA;} } }&#xA;</code></pre>&#xA;",13792228,,13792228,2020-12-04 17:40:44,2020-12-04 17:40:44,"",,0,3,0,2020-12-04 13:05:11
65159656,1,,,1,962,"<p>I am trying to improve the architecture of an existing project following the Clean Architecture principles to the best of my ability and understanding, but one of the things that I am struggling with is where to fit lazy loading of entities in GQL Resolvers.</p>&#xA;<p>If we consider as an example of having a Product entity, which has associated Categories with it in a One-to-many type of relationship ( in my application, its MTM, but lets go with this for simplicity ), then the corresponding Product type would look similar to this</p>&#xA;<pre><code>type Category {&#xA;  name: String!&#xA;  ...&#xA;}&#xA;&#xA;type Product {&#xA;  ...&#xA;  name: String&#xA;  description: String&#xA;  categories: [Category!]!&#xA;}&#xA;</code></pre>&#xA;<p>The client can query any of the Product field, which all live in the <code>products</code> table, and if he needs to access the categories that this product has been associated with, he can use the <code>categories</code> field.</p>&#xA;<p>To avoid over-fetching, the right thing seems to be to initially fetch data only from the <code>products</code> table, and conditionally load data from the <code>categories</code> table if it was asked for by the client.</p>&#xA;<p>So, to resolve the categories, we need to conditionally query the <code>categories</code> table.</p>&#xA;<p>From what I figured out, I could use the Repository pattern to obtain a <code>Product</code> domain object and return that to the GrapQL query resolver.</p>&#xA;<p>What I do not understand, however, is where should the logic for querying the additional entities live?</p>&#xA;<p>For example, if the <code>Product</code> domain object was to have a <code>loadCategories</code> method, then from the <code>Categories</code> resolver I could just call it</p>&#xA;<pre><code>const resolvers = {&#xA;  Product: {&#xA;    async categories(product, args, ctx) {&#xA;      return product.loadCategories()&#xA;    }&#xA;  } &#xA;}&#xA;&#xA;</code></pre>&#xA;<p>However, that would require the Product object to depend on the <code>Repository</code> or another DAO, which, from what I understand, I am not supposed to do.</p>&#xA;<p>Do I inject a <code>Repository</code> or a DAO in the <code>context</code> object of graphql, and use that one from the resolver?</p>&#xA;<p>This one seems like I would be doing it backwards in one way, but in another way - not so much. Because root query resolvers are a bit like controllers, for which is okay to use repositories. But this nested field resolver, in a way, belongs to the <code>Product</code> domain object, which I find a bit confusing.</p>&#xA;<p>Also, if I have an authorization policy, which, lets say, allows guest users to read the <code>name</code> of the product, but not the <code>description</code> ( I should return <code>null</code> if they cannot read it ), where should that logic live?</p>&#xA;",13992557,,13992557,2020-12-05 19:07:27,2020-12-06 18:22:58,Clean Architecture and lazy loading of entities in а GraphQL API,<node.js><graphql><clean-architecture>,1,2,0,2020-12-05 17:05:06
65160785,1,65167392,,0,560,"<p>For the first time I'm working with Shopify Storefront API (v. 2020-10, latest) and trying out GraphQL (I'm used to REST).</p>&#xA;<p>I'm able to get all the products, but if I add the field &quot;quantityAvailable&quot; an error occur:</p>&#xA;<p><em>Field 'quantityAvailable' doesn't exist on type 'ProductVariant'</em></p>&#xA;<p>I'm following the <a href=""https://shopify.dev/docs/storefront-api/reference/products/productvariant#fields-2020-10"" rel=""nofollow noreferrer"">docs</a> where the field is listed,&#xA;can you help me understand what am I doing wrong?</p>&#xA;<p><a href=""https://i.stack.imgur.com/P1y3C.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/P1y3C.png"" alt=""GraphQL Query"" /></a></p>&#xA;<p>Edit #1&#xA;I've already enabled &quot;Read inventory of products and their variants&quot; in Storefront API Permissions.</p>&#xA;<p>Edit #2&#xA;I'm sending a POST request to https://{my-shopify-website}/api/graphql attaching content-type and X-Shopify-Storefront-Access-Token as header</p>&#xA;",5945758,,5945758,2020-12-06 11:01:57,2020-12-06 11:17:56,Shopify Storefront API 2020-10 (latest) can't fetch quantityAvailable (GraphQL),<graphql><shopify><shopify-storefront-api>,1,3,0,2020-12-05 18:57:15
65166895,1,,,2,339,"<p>I want to query the data from <a href=""https://github.com/prisma/prisma/discussions"" rel=""nofollow noreferrer""><code>https://github.com/prisma/prisma/discussions</code></a> via GitHub's GraphQL API but I don't know how to access it.</p>&#xA;<p>GitHub Discussions are a beta feature that's currently available only on a few repos, <a href=""https://github.com/prisma/prisma"" rel=""nofollow noreferrer""><code>prisma/prisma</code></a> being one of them. I would have expected that I can query the data in a similar fashion to querying <em>issues</em> and <em>pull requests</em> of a repo:</p>&#xA;<pre><code>{&#xA;  repository(&#xA;    owner: &quot;prisma&quot;&#xA;    name: &quot;prisma&quot;&#xA;  ) {&#xA;    pullRequests(first: 5 orderBy: {&#xA;      field: CREATED_AT,&#xA;      direction: DESC&#xA;    }) {&#xA;      edges {&#xA;        node {&#xA;          title&#xA;        }&#xA;      }&#xA;    }&#xA;    issues(first: 5 orderBy: {&#xA;      field: CREATED_AT,&#xA;      direction: DESC&#xA;    }) {&#xA;      edges {&#xA;        node {&#xA;          title&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I'm basically looking for a query that would allow me to do this:</p>&#xA;<pre><code>{&#xA;  repository(&#xA;    owner: &quot;prisma&quot;&#xA;    name: &quot;prisma&quot;&#xA;  ) {&#xA;    # this doesn't work&#xA;    discussions(first: 5 orderBy: {&#xA;      field: CREATED_AT,&#xA;      direction: DESC&#xA;    }) {&#xA;      edges {&#xA;        node {&#xA;          title&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But such a <code>discussions</code> property doesn't exist on the <code>Repository</code> type in the GitHub API.</p>&#xA;<p><strong>EDIT (Dec 8, 2020)</strong>: I learned from the GitHub team that the data is not yet available via the public GraphQL API but they're working on releasing it soon. I'll leave the question open until it's available.</p>&#xA;",1779113,,1779113,2020-12-08 09:05:09,2022-03-16 12:03:06,How to query data from GitHub Discussions using GitHub's GraphQL API,<graphql><github-api>,0,0,0,2020-12-06 10:17:53
65167392,2,,65160785,2,,"<p>Using the <code>/api/2020-10/graphql</code> end-point allows the usage of <code>quantityAvailable</code> property, but using the unstable end-point <code>/api/graphql</code> doesn't.</p>&#xA;<p>This seems more like a Shopify docs or API bug/issue, but the solution is to use the specific version end-point (<code>/api/2020-10/graphql</code>) instead of the unstable one.</p>&#xA;",2329464,,,,2020-12-06 11:17:56,"",,0,0,0,2020-12-06 11:17:56
65198951,1,,,0,221,"<p>I'm new to GraphQL and got stuck in a query. Well, this is sample GQL that returns every record in database:</p>&#xA;<pre><code>        {&#xA;            viewer {&#xA;                savingsAccount {&#xA;                    id&#xA;                    feed {&#xA;                        id&#xA;                        __typename&#xA;                        title&#xA;                        detail&#xA;                        postDate&#xA;                        ... on TransferInEvent {&#xA;                            amount&#xA;                            originAccount {&#xA;                                name&#xA;                            }&#xA;                        }&#xA;                        ... on TransferOutEvent {&#xA;                            amount&#xA;                            destinationAccount {&#xA;                                name&#xA;                            }&#xA;                        }&#xA;                        ... on TransferOutReversalEvent {&#xA;                            amount&#xA;                        }&#xA;                        ... on BillPaymentEvent {&#xA;                            amount&#xA;                        }&#xA;                        ... on DebitPurchaseEvent {&#xA;                            amount&#xA;                        }&#xA;                        ... on BarcodePaymentEvent {&#xA;                            amount&#xA;                        }&#xA;                        ... on DebitWithdrawalFeeEvent {&#xA;                            amount&#xA;                        }&#xA;                        ... on DebitWithdrawalEvent {&#xA;                            amount&#xA;                        }    &#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;</code></pre>&#xA;<p>Here is sample return:</p>&#xA;<pre><code>    {&#xA;        &quot;data&quot;: {&#xA;            &quot;viewer&quot;: {&#xA;                &quot;savingsAccount&quot;: {&#xA;                    &quot;id&quot;: &quot;5c8fe258-34fd-4bdc-bfb6-761bc78435df&quot;,&#xA;                    &quot;feed&quot;: [{&#xA;                            &quot;id&quot;: &quot;5fcd6040-cf19-4dbf-be25-47d2f1a7a29b&quot;,&#xA;                            &quot;__typename&quot;: &quot;DebitPurchaseEvent&quot;,&#xA;                            &quot;title&quot;: &quot;Test&quot;,&#xA;                            &quot;detail&quot;: &quot;Test $$&quot;,&#xA;                            &quot;postDate&quot;: &quot;2020-12-06&quot;,&#xA;                            &quot;amount&quot;: 59.7&#xA;                        }, {&#xA;                            &quot;id&quot;: &quot;5fcd5bbd-fc70-4d87-944d-d0a186559289&quot;,&#xA;                            &quot;__typename&quot;: &quot;DebitPurchaseEvent&quot;,&#xA;                            &quot;title&quot;: &quot;Test&quot;,&#xA;                            &quot;detail&quot;: &quot;Test $$&quot;,&#xA;                            &quot;postDate&quot;: &quot;2020-12-06&quot;,&#xA;                            &quot;amount&quot;: 30.0&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;</code></pre>&#xA;<p>How do I apply filter to return some specific postDate? I mean, after, before, etc. This attribute is stored as string but I believe it is possible to do some convertion.</p>&#xA;<p>Thanks in advance!</p>&#xA;",8161014,,,,2020-12-08 12:29:41,How to filter GraphQL query?,<graphql>,0,4,0,2020-12-08 12:29:41
65205828,2,,58166982,0,,"<p>Just add both IDs if you don't want to change every single instance of it.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type Product {&#xA;  id: ID&#xA;  _id: ID&#xA;  price: String&#xA;}&#xA;</code></pre>&#xA;",6378469,,,,2020-12-08 19:43:26,"",,0,0,0,2020-12-08 19:43:26
65211973,1,,,0,555,"<p>I am using NestJs, GraphQL apollo federation (schema first approach) and Mongoose.</p>&#xA;<p>While querying for the <code>product</code> or <code>products</code> resolver, the query returns an object where all the properties are nulls.</p>&#xA;<p>However, while I debug and use a breakpoint in my service/resolver I can see that these functions are returning the correct mongo document(s).</p>&#xA;<p>Code snippets by file:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;product&quot;: {&#xA;      &quot;id&quot;: null,&#xA;      &quot;name&quot;: null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>// product.graphql&#xA;type Product {&#xA;  id: String&#xA;  name: String&#xA;  displayName: String&#xA;  productId: Int&#xA;  partnerId: String&#xA;}&#xA;&#xA;type Query {&#xA;  product(id: String): Product&#xA;  products: [Product]&#xA;}&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>// product.model.ts&#xA;@MongooseSchema()&#xA;export class ProductDocument extends Document implements Product {&#xA;  @Prop({ type: mongoose.Types.ObjectId })&#xA;  @Transform((value) =&gt; value.toString())&#xA;  _id: string;&#xA;&#xA;  @Prop({ type: mongoose.Types.ObjectId })&#xA;  @Transform((value) =&gt; value.toString())&#xA;  id: string;&#xA;&#xA;  @Prop()&#xA;  displayName: string;&#xA;&#xA;  @Prop()&#xA;  name: string;&#xA;&#xA;  @Prop()&#xA;  productId: number;&#xA;&#xA;  @Prop({ type: mongoose.Types.ObjectId })&#xA;  @Transform((value) =&gt; value.toString())&#xA;  partnerId: string;&#xA;}&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>// products.resolvers.ts&#xA;import { Args, Query, Resolver, ResolveReference } from '@nestjs/graphql';&#xA;import { ProductsService } from './products.service';&#xA;&#xA;@Resolver('Product')&#xA;export class ProductsResolvers {&#xA;  constructor(private productsService: ProductsService) {}&#xA;&#xA;  @Query()&#xA;  async product(@Args('id') id: string) {&#xA;    const data = await this.productsService.findById(id);&#xA;    return data;&#xA;  }&#xA;&#xA;  @Query()&#xA;  async products() {&#xA;    const res = await this.productsService.find();&#xA;    return res;&#xA;  }&#xA;&#xA;  @ResolveReference()&#xA;  resolveReference(reference: { __typename: string; id: string }) {&#xA;    return this.productsService.findById(reference.id);&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>// auto generated graphql.ts&#xA;export interface Product {&#xA;    id?: string;&#xA;    name?: string;&#xA;    displayName?: string;&#xA;    productId?: number;&#xA;    partnerId?: string;&#xA;}&#xA;&#xA;export interface IQuery {&#xA;    product(id?: string): Product | Promise&lt;Product&gt;;&#xA;    products(): Product[] | Promise&lt;Product[]&gt;;&#xA;}&#xA;</code></pre>&#xA;",10101082,,10101082,2020-12-09 07:19:17,2020-12-24 10:54:58,"Nestjs GraphQL Apollo Federation - resolver has an object in debug, returns an object with nulls",<typescript><mongoose><graphql><nestjs><apollo-federation>,1,0,0,2020-12-09 06:54:02
65235083,1,,,1,302,"<p>I'm trying to do the following query:</p>&#xA;<pre><code>query Feeds($id: Int!) {&#xA;  feed_by_pk(id: $id) {&#xA;    feed_items(where: {contents: {_contains: {blocks: [{text: &quot;%test%&quot;}]}}}) {&#xA;      id&#xA;      contents&#xA;      created_at&#xA;      created_by&#xA;      last_edited&#xA;      user {&#xA;        id&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Where I'd like to match the value 'text' against 'test' but ignoring case (so Test, tESt, etc will hit) and also partial matching (i.e. &quot;this is a Test&quot; will work).</p>&#xA;<p>I've tried using %test% to no avail, is there a specific way to do this for JSONBs with Hasura?</p>&#xA;",79891,,,,2020-12-10 13:02:51,Partial string match in jsonb using Hasura graphql API?,<postgresql><graphql><hasura>,0,1,0,2020-12-10 13:02:51
65259048,2,,65223539,0,,"<p>Got this figured out. I changed my query, using the built in <code>group</code> field, and grouped the nodes by state:</p>&#xA;<pre><code> allMysqlDealers {&#xA;  group(field: state) {&#xA;    edges {&#xA;      node {&#xA;        address&#xA;        city&#xA;        facebook&#xA;        houzz&#xA;        hrs_mf&#xA;        hrs_sat&#xA;        hrs_sun&#xA;        name&#xA;        page_title&#xA;        phone&#xA;        state&#xA;        subdomain&#xA;        yelp&#xA;        zip&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This returned <code>edges</code> for each state, with their nodes.</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;allMysqlDealers&quot;: {&#xA;      &quot;group&quot;: [&#xA;        {&#xA;          &quot;edges&quot;: [&#xA;            {&#xA;              &quot;node&quot;: {&#xA;                &quot;subdomain&quot;: &quot;phoenix&quot;,&#xA;                &quot;address&quot;: &quot;15475 N. Greenway Hayden Loop, Ste. B-14&quot;,&#xA;                &quot;state&quot;: &quot;AZ&quot;,&#xA;                &quot;zip&quot;: &quot;85260&quot;,&#xA;                &quot;city&quot;: &quot;Scottsdale &quot;,&#xA;                &quot;facebook&quot;: &quot;&quot;,&#xA;                &quot;yelp&quot;: &quot;&quot;,&#xA;                &quot;houzz&quot;: &quot;&quot;,&#xA;                &quot;phone&quot;: &quot;480-405-3378&quot;,&#xA;                &quot;name&quot;: &quot;x Desert Sky Doors and Closets&quot;,&#xA;                &quot;hrs_sun&quot;: &quot;Closed&quot;,&#xA;                &quot;hrs_sat&quot;: &quot;10:00 am to 4:00 pm&quot;,&#xA;                &quot;hrs_mf&quot;: &quot;9:00 am to 5:00 pm&quot;,&#xA;                &quot;page_title&quot;: &quot;One Day Doors &amp; Closets&quot;&#xA;              }&#xA;            },&#xA;            {&#xA;              &quot;node&quot;: {&#xA;                &quot;subdomain&quot;: &quot;arizona&quot;,&#xA;                &quot;address&quot;: &quot;\&quot;SHOWROOM COMING SOON\&quot;&quot;,&#xA;                &quot;state&quot;: &quot;AZ&quot;,&#xA;                &quot;zip&quot;: &quot;85345&quot;,&#xA;                &quot;city&quot;: &quot;Phoenix&quot;,&#xA;                &quot;facebook&quot;: &quot;&quot;,&#xA;                &quot;yelp&quot;: &quot;&quot;,&#xA;                &quot;houzz&quot;: &quot;&quot;,&#xA;                &quot;phone&quot;: &quot;&quot;,&#xA;                &quot;name&quot;: &quot;x Artela Doors &amp; Closets&quot;,&#xA;                &quot;hrs_sun&quot;: &quot;Closed&quot;,&#xA;                &quot;hrs_sat&quot;: &quot;By Appointment&quot;,&#xA;                &quot;hrs_mf&quot;: &quot;9:00 am - 5:30 pm&quot;,&#xA;                &quot;page_title&quot;: &quot;Artela Doors &amp; Closets&quot;&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;    &#xA;</code></pre>&#xA;<p>Then, in my component, I was able to map through them, like so...</p>&#xA;<pre><code>const document = props.data.allMysqlDealers.group;&#xA;  if (!document) return null;&#xA;&#xA;{document.map((groups: any, index: number) =&gt; {&#xA;          const state = groups.edges[0].node.state.trim();&#xA;&#xA;          const stateName = convertRegion(state, toName);&#xA;&#xA;          return (&#xA;            &lt;Fragment key={`dealer-group-${index}`}&gt;&#xA;              &lt;Heading tag=&quot;h2&quot; className={s.stateName}&gt;{stateName}&lt;/Heading&gt;&#xA;              &lt;div className={s.row}&gt;&#xA;                {groups.edges.map((dealer: any) =&gt; {&#xA;                  const now = new Date();&#xA;                  const days = formatHours(dealer.node);&#xA;                  const today = days[now.getDay()];&#xA;                  const todaysHours = `Today's Hours - ${today}`;&#xA;&#xA;                  const info = formatInfo(dealer.node);&#xA;&#xA;                  return (&#xA;                    &lt;div className={s.dealer} key={`dealer-${dealer.node.name}`}&gt;&#xA;                      &lt;div className={s.dealer__info}&gt;&#xA;                        &lt;Heading tag=&quot;h2&quot; className={s.name}&gt;&#xA;                          {dealer.node.name}&#xA;                        &lt;/Heading&gt;&#xA;                        &lt;span&gt;{todaysHours}&lt;/span&gt;&#xA;                        &lt;span className={s.address}&gt;{dealer.node.address}&lt;/span&gt;&#xA;                        &lt;span className={s.city}&gt;&#xA;                          {dealer.node.city}, {dealer.node.state} {dealer.node.zip}&#xA;                        &lt;/span&gt;&#xA;                        &lt;span className={s.email}&gt;{dealer.email}&lt;/span&gt;&#xA;                        &lt;span className={s.phone}&gt;{formatPhoneNumber(dealer.node.phone)}&lt;/span&gt;&#xA;                      &lt;/div&gt;&#xA;&#xA;                      &lt;Button&#xA;                        href={'/dealers/' + formatUrl(dealer.node.city + ' ' + dealer.node.state)}&#xA;                        className={s.button}&#xA;                        onClick={() =&gt; changeDealer(info)}&#xA;                      &gt;&#xA;                        Choose Location&#xA;                      &lt;/Button&gt;&#xA;                    &lt;/div&gt;&#xA;                  );&#xA;                })}&#xA;              &lt;/div&gt;&#xA;            &lt;/Fragment&gt;&#xA;          );&#xA;        })}&#xA;</code></pre>&#xA;<p>...and it all worked wonderfully.</p>&#xA;",3573960,,,,2020-12-11 21:46:32,"",,0,0,0,2020-12-11 21:46:32
65271603,2,,65101514,3,,"<p>Looks like a known issue with the vscode extension - without a known solution :) <a href=""https://github.com/graphql/vscode-graphql/issues/137"" rel=""nofollow noreferrer"">https://github.com/graphql/vscode-graphql/issues/137</a> .</p>&#xA;<h3>Workaround</h3>&#xA;<p>Since <code>gql</code> is just a function, you can call it directly, so that the extension won't try to parse it and stop complaining.</p>&#xA;<pre><code>gql(query)&#xA;</code></pre>&#xA;<h3>Explanation on why it works</h3>&#xA;<p>If we take a look at <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates"" rel=""nofollow noreferrer"">tagged templates docs</a>, we'll see that it's a regular function that takes the array of static string pieces as the first argument, and interpolated expressions as the remaining arguments.&#xA;So when we do</p>&#xA;<pre><code>gql`some content`&#xA;</code></pre>&#xA;<p>it translates to the following function call:</p>&#xA;<pre><code>gql([&quot;some content&quot;]) // a single argument, because there is no interpolations here&#xA;</code></pre>&#xA;<p>Also this <code>gql</code> function has special code inside that allows to pass a plain string as the first arg (probably to support old JS where no template tags existed)</p>&#xA;",2638874,,,,2020-12-13 01:33:03,"",,0,0,0,2020-12-13 01:33:03
65291799,1,,,1,133,"<p>I have an app with some route ID's (basically a bunch of sections in a long SPA) that I have defined manually. I fetch these in <code>gatsby-browser.js</code> and use them in conjunction with <code>shouldUpdateScroll</code>, checking if the route ID exist, and in that case, scroll to the position of the route/section.</p>&#xA;<p>Example:</p>&#xA;<pre><code>export const shouldUpdateScroll = ({ routerProps: { location } }) =&gt; {&#xA;  const container = document.querySelector('.site')&#xA;  const { pathname } = location&#xA;  &#xA;  const projectRoutes = [`project1`, `project2`]&#xA;  if (projectRoutes.indexOf(pathname) !== -1) {&#xA;      const target = document.getElementById(pathname)&#xA;      container.scrollTop = target.offsetTop; &#xA;  }&#xA;&#xA;  return false&#xA;}&#xA;</code></pre>&#xA;<p>This works well for my usecase.</p>&#xA;<p>Now I want to add something similar for a page where the content is dynamically created (fetched from Sanity). From what I understand I cannot use GraphQL in <code>gatsby-browser.js</code>, so what is the best way to get the ID's from Sanity to <code>gatsby-browser.js</code> so I can use them to identify their scroll positions?</p>&#xA;<p>If there's some other better way to achieve the same result I'm open to that of course.</p>&#xA;",562747,,5585371,2020-12-15 06:10:49,2020-12-15 06:10:49,Use GraphQL data in gatsby-browser?,<javascript><node.js><reactjs><graphql><gatsby>,1,0,0,2020-12-14 15:35:02
65292492,2,,65291993,1,,"<p>I've faced exactly the same issue as you a few months ago and, in my case was that I needed to set a valid internal <code>id</code> for each element to allow GraphQL to create a proper schema for each node if not, the <code>id</code> is overridden in each element and it only takes the last one.</p>&#xA;<p>In your case, it seems that some field is wrong, making the following expression invalid:</p>&#xA;<pre><code>    id: createNodeId(`${NODE_TYPE }-${drink.id}`),&#xA;</code></pre>&#xA;<p>Try debugging more what's receiving and changing it to some hardcoded value. Something like:</p>&#xA;<pre><code>    id: drink.id,&#xA;</code></pre>&#xA;<p>Keep in mind that, if the <code>id</code>s are different for each node, you don't need to use <a href=""https://www.gatsbyjs.com/docs/node-api-helpers/#createNodeId"" rel=""nofollow noreferrer""><code>createNodeId</code> API</a> for debugging purposes (but it's recommended).</p>&#xA;",5585371,,5585371,2020-12-15 06:44:41,2020-12-15 06:44:41,"",,0,1,0,2020-12-14 16:17:26
65350914,1,,,1,503,"<p>Sitemap Doesn't work&#xA;I can't get the site map URL and I can't use the /sitemap.xml URL&#xA;How do I fix it??</p>&#xA;<pre><code>  siteMetadata: {&#xA;    siteUrl: siteAddress.href, // which is &quot;https://www.example.com/&quot;&#xA;  },&#xA; {&#xA;  resolve: `gatsby-plugin-sitemap`,&#xA;  options: {&#xA;    head: true,&#xA;    output: `/sitemap.xml`,&#xA;  }&#xA;</code></pre>&#xA;",14847585,,250259,2020-12-18 13:24:52,2020-12-19 03:19:09,How do I fix sitemap errors?,<graphql><gatsby><xml-sitemap><gatsby-plugin>,1,3,0,2020-12-18 02:10:39
65381211,1,65384193,,2,4165,"<p>I have a very basic graphql mutation in the frontend that I send to my backend. I am using <a href=""https://github.com/prisma-labs/graphql-request#graphql-mutations"" rel=""nofollow noreferrer"">this code</a> on the by <code>graphql-request</code> as a guide.</p>&#xA;<p>With primitives it works:</p>&#xA;<pre><code>const mutation = gql`&#xA;    mutation EditArticle($id: ID!, $title: String) {&#xA;      editArticle(id: $id, title: $title) {&#xA;        id&#xA;      }&#xA;    }&#xA;  `&#xA;</code></pre>&#xA;<p>Now I'd like to also be able to mutate some meta data about the article, stored in a <code>meta</code> object inside the article:</p>&#xA;<pre><code>...,&#xA;title: &quot;Hello World&quot;,&#xA;meta: {&#xA; author: &quot;John&quot;,&#xA; age: 32,&#xA; ...&#xA;}&#xA;</code></pre>&#xA;<p>So my question is: <em>How do I pass over non-primitive object types as arguments to mutations when making the request from the frontend, using <a href=""https://github.com/prisma-labs/graphql-request"" rel=""nofollow noreferrer"">graphql-request</a>?</em></p>&#xA;<p>I tried something like this already:</p>&#xA;<pre><code>const Meta = new GraphQLObjectType({&#xA;    name: &quot;Meta&quot;,&#xA;    fields: () =&gt; ({&#xA;      id: { type: GraphQLID },&#xA;      name: { type: GraphQLString },&#xA;      age ....&#xA;    }),&#xA;  })&#xA;   &#xA;const mutation = gql`&#xA;    mutation EditArticle($id: ID!, $title: String, $meta: Meta) { //??? I don't seem to get what goes here? &#xA;      editArticle(id: $id, title: $title, meta: $meta) {&#xA;        id&#xA;      }&#xA;    }&#xA;  `&#xA;</code></pre>&#xA;<p>I also tried it with <code>GraphQLObjectType</code>, but I think I am going wrong here (since this is the frontend).</p>&#xA;<p>PS: I looked at <a href=""https://stackoverflow.com/questions/43603182/passing-complex-arguments-to-graphql-mutations"">this answer</a>, but I didn't understand / believe the solution there might be incomplete.</p>&#xA;",9316628,,9316628,2020-12-20 15:57:13,2020-12-20 19:54:30,Passing Objects as Argument to GraphQL Mutation (graphql-request),<javascript><graphql><graphql-js><express-graphql><graphql-mutation>,1,4,0,2020-12-20 14:55:32
65397104,1,65401048,,2,1696,"<p>Here is the thing, I'm building a simple inventory app that has products and parts. Products can have many parts and part can be in many Products.</p>&#xA;<p>I'm using React and GraphQL with Strapi backend and I want to update a product to add or remove certain products.</p>&#xA;<p>I can't go pass this error in GraphQL playground:</p>&#xA;<p><strong>ID cannot represent a non-string and non-integer value:</strong></p>&#xA;<p>I've tried with id: 1, id: &quot;1&quot;, id: <code>1</code>, id: <code>&quot;1&quot;</code> nothing works. Here is the Docs for the input:</p>&#xA;<p><a href=""https://i.stack.imgur.com/tHmWO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tHmWO.png"" alt=""enter image description here"" /></a></p>&#xA;<p>I'm trying like this but it doesn't work:</p>&#xA;<pre><code>mutation {&#xA;  updateProduct (input:{&#xA;    where:{&#xA;      id: 2&#xA;    }&#xA;    data: {&#xA;      parts: [&#xA;        {&#xA;          id: 3&#xA;        }&#xA;      ]&#xA;    }&#xA;  }){&#xA;    product{&#xA;      id&#xA;      productName&#xA;      parts {&#xA;        id&#xA;        partName&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I'd appreciate any help,</p>&#xA;<p>Thanks</p>&#xA;",2720426,,,,2020-12-21 22:53:01,ID cannot represent a non-string and non-integer value,<reactjs><graphql><apollo><strapi><scalar>,1,0,0,2020-12-21 17:13:26
65423311,2,,65410625,0,,"<p>Fixed it, the issue was result has been returning the array.</p>&#xA;",4564944,,,,2020-12-23 11:09:47,"",,0,0,0,2020-12-23 11:09:47
65459487,1,65460693,,0,509,"<p>I cloned this React <a href=""https://github.com/llorentegerman/react-admin-dashboard?fbclid=IwAR2wpJXddCq5C9tuwQpxNa1EjcC4hZgL1LesdF0gUz7X5gXSXjSz_gAPd9o"" rel=""nofollow noreferrer"">dashboard</a>  and adapted it to my needs then i wanted to fetch data from graphql and display it in a table ( orders and products tables , I'll continue talking about orders ) then when the user click on a specific button it opens a page  that have all the specific details about the order he chooses! an id will be taken from the first query ( orders that display many orders ) and will be passed as a variable to the 2nd query with is order to display that order details . <strong>i wanna Know how to display the data from the first query then the specific data for a single order</strong></p>&#xA;<p>this is how the UI should look ( it is changed but I just wanted to clarify the idea more )  :</p>&#xA;<p><strong>orders list :</strong></p>&#xA;<p><img src=""https://i.stack.imgur.com/bvXUT.jpg"" alt=""enter image description here"" /></p>&#xA;<p><strong>orders details :</strong>&#xA;<img src=""https://i.stack.imgur.com/QVVor.jpg"" alt=""enter image description here"" /></p>&#xA;<p>graphql :</p>&#xA;<p>an input type  has been created  that is likely to be reused.(PaginationInput)&#xA;<img src=""https://i.stack.imgur.com/RaDQj.jpg"" alt=""enter image description here"" /></p>&#xA;<p><strong>query :</strong></p>&#xA;<pre><code>query Orders($input1: PaginationInput) {&#xA;   Orders(input: $input1){&#xA;    pageInfo {&#xA;      hasNextPage&#xA;      hasPreviousPage&#xA;    }&#xA;    edges{&#xA;      cursor&#xA;      node {&#xA;        id&#xA;        closed&#xA;        email&#xA;        createdAt&#xA;        updatedAt&#xA;        cancelledAt&#xA;        displayFinancialStatus&#xA;        displayFulfillmentStatus&#xA;        lineItems{&#xA;          edges{&#xA;            node {&#xA;              customAttributes{&#xA;                key&#xA;                value&#xA;              }&#xA;              id&#xA;              quantity&#xA;              title&#xA;              variant{&#xA;                id&#xA;                image {&#xA;                  altText&#xA;                  id&#xA;                  src&#xA;                }&#xA;                title&#xA;                weight&#xA;                weightUnit&#xA;                price&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;        phone&#xA;        subtotalPrice&#xA;        totalPrice&#xA;        totalRefunded&#xA;        totalTax&#xA;        processedAt&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;query Order($id: ID!){&#xA;  Order (id: $id){&#xA;    id&#xA;    displayFinancialStatus&#xA;        displayFulfillmentStatus&#xA;        email&#xA;        id&#xA;        createdAt&#xA;        subtotalPrice&#xA;        totalRefunded&#xA;        totalShippingPrice&#xA;        totalPrice&#xA;        totalTax&#xA;        updatedAt&#xA;        lineItems{&#xA;            edges {&#xA;                node {&#xA;                    customAttributes{&#xA;                        key&#xA;                        value&#xA;                    }&#xA;                    quantity&#xA;                    title&#xA;                    id&#xA;                    variant{&#xA;                        id&#xA;                        title&#xA;                        weight&#xA;                        weightUnit&#xA;                        price&#xA;                        image {&#xA;                            src&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;        shippingAddress {&#xA;            address1&#xA;            address2&#xA;            city&#xA;            company&#xA;            country&#xA;            countryCode&#xA;            firstName&#xA;            id&#xA;            lastName&#xA;            name&#xA;            phone&#xA;            province&#xA;            provinceCode&#xA;            zip&#xA;        }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><strong>query variables example :</strong></p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;input1&quot;: {&#xA;    &quot;num&quot;: 30&#xA;  },&#xA;  &quot;id&quot;: &quot;gid://shopify/Order/order_id_here&quot;&#xA;} &#xA;</code></pre>&#xA;<p>i'm still new to graphql so i don't know ho to do this !</p>&#xA;",0,user14893049,,2020-12-27 04:40:58,2020-12-27 04:40:58,fetching data from graphql to react,<reactjs><graphql><react-apollo><graphql-js>,2,0,0,2020-12-26 18:34:29
65464872,1,,,0,350,"<p>Backend Laravel with scout and algolia search, Lighthouse-php</p>&#xA;<p>Below laravel grapql:</p>&#xA;<p><code>products(search: String @search, orderBy: _ @orderBy(columns: [&quot;created_at&quot;])): [Product!]! @paginate</code></p>&#xA;<p>Graphql-playground search work perfectly:</p>&#xA;<pre><code>  products(first: 5, search: $searchText) {&#xA;    data {&#xA;      id&#xA;      name&#xA;      description&#xA;    }&#xA;     paginatorInfo {&#xA;      currentPage&#xA;      lastPage&#xA;    }&#xA;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Vue template need advice how to complete my code with search functionality?:</p>&#xA;<pre><code>&lt;template&gt;&#xA;  &lt;div class=&quot;py-16 px-16 text-gray-800&quot;&gt;&#xA;    &lt;div&gt;&#xA;      Search&#xA;      &lt;input v-model=&quot;search&quot; type=&quot;search&quot; /&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div v-for=&quot;product in products&quot; :key=&quot;product.slug&quot;&gt;&#xA;      ?????&#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/template&gt;&#xA;&#xA;&lt;script&gt;&#xA;import ALL_PRODUCTS from '@/graphql/AllProducts.gql'&#xA;&#xA;export default {&#xA;  apollo: {&#xA;    products: {&#xA;      fetchPolicy: 'network-only',&#xA;      query: ALL_PRODUCTS,&#xA;      variables() {&#xA;        return {&#xA;          searchText: this.search,&#xA;        }&#xA;      },&#xA;      skip() {&#xA;        return !this.search&#xA;      },&#xA;    },&#xA;  },&#xA;  data() {&#xA;    return {&#xA;      search: '',&#xA;    }&#xA;  },&#xA;  head: {&#xA;    title: 'Products',&#xA;  },&#xA;}&#xA;&lt;/script&gt;&#xA;&#xA;</code></pre>&#xA;<p>Please advice. Thank you!</p>&#xA;",1857334,,,,2020-12-27 17:13:06,How to implement search functionality with Laravel lighthouse-php and vuejs?,<php><laravel><vue.js><graphql><laravel-lighthouse>,1,7,0,2020-12-27 10:40:05
65472875,2,,63139148,-1,,"<p>I have built a PWA extension for Magento 2, you can see detail at <a href=""http://pwablog-m2.com/"" rel=""nofollow noreferrer"">http://pwablog-m2.com/</a></p>&#xA;<p>Or you can get some demos:</p>&#xA;<p><a href=""http://pwablog-m2.com/blog"" rel=""nofollow noreferrer"">http://pwablog-m2.com/blog</a></p>&#xA;<p>or <a href=""https://pwablog-m2.com/blog"" rel=""nofollow noreferrer"">https://pwablog-m2.com/blog</a></p>&#xA;<p>or <a href=""https://pwablog-m2.com/demo03/"" rel=""nofollow noreferrer"">https://pwablog-m2.com/demo03/</a></p>&#xA;<p>or <a href=""https://pwablog-m2.com/demo02/"" rel=""nofollow noreferrer"">https://pwablog-m2.com/demo02/</a></p>&#xA;<p>or <a href=""https://pwablog-m2.com/demo04/"" rel=""nofollow noreferrer"">https://pwablog-m2.com/demo04/</a></p>&#xA;",14899118,,472495,2020-12-31 11:49:17,2020-12-31 11:49:17,"",,0,1,0,2020-12-28 04:01:42
65472989,1,65473326,,-1,605,"<p>I'm trying to get the data from graphql using react , the purpose is to get the deatils of a single order ! i created a list of all orders and it works fine but when i tried to fetch the data for a sigle order in another page it doesn't work  :</p>&#xA;<p><strong>OrderDetails</strong> component :</p>&#xA;<pre><code>import React from 'react'&#xA;import { gql, useQuery } from '@apollo/client';&#xA;import Table  from 'react-bootstrap/Table'&#xA;import { Link } from 'react-router-dom';&#xA;const GET_Single_Orders = gql`&#xA;query Order($id: ID!){&#xA;    Order (id: $id){&#xA;      id&#xA;      displayFinancialStatus&#xA;          displayFulfillmentStatus&#xA;          email&#xA;          id&#xA;          createdAt&#xA;          subtotalPrice&#xA;          totalRefunded&#xA;          totalShippingPrice&#xA;          totalPrice&#xA;          totalTax&#xA;          updatedAt&#xA;          lineItems{&#xA;              edges {&#xA;                  node {&#xA;                      customAttributes{&#xA;                          key&#xA;                          value&#xA;                      }&#xA;                      quantity&#xA;                      title&#xA;                      id&#xA;                      variant{&#xA;                          id&#xA;                          title&#xA;                          weight&#xA;                          weightUnit&#xA;                          price&#xA;                          image {&#xA;                              src&#xA;                          }&#xA;                      }&#xA;                  }&#xA;              }&#xA;          }&#xA;          shippingAddress {&#xA;              address1&#xA;              address2&#xA;              city&#xA;              company&#xA;              country&#xA;              countryCode&#xA;              firstName&#xA;              id&#xA;              lastName&#xA;              name&#xA;              phone&#xA;              province&#xA;              provinceCode&#xA;              zip&#xA;          }&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;export default function OrderDetails(props) {&#xA;    let  id  = props.match.params.id;&#xA;   id = &quot;gid://shopify/Order/&quot; + id ;&#xA;  const { loading, error, data } = useQuery(GET_Single_Orders, {&#xA;    variables:  {id}&#xA;    ,&#xA;  });&#xA;&#xA;  if (loading) return &lt;h4&gt;Loading...&lt;/h4&gt;;&#xA;  if (error) return `Error! ${error}`;&#xA;&#xA;  return( &lt;div&gt;&#xA;  &#xA; &lt;Table striped bordered responsive hover size=&quot;sm&quot;&gt;&#xA;  &lt;thead&gt;&#xA;    &lt;tr&gt;&#xA;    &#xA;      &lt;th&gt;Created at&lt;/th&gt;&#xA;      &lt;th&gt;created by&lt;/th&gt;&#xA;      &lt;th&gt;Fulfillment&lt;/th&gt;&#xA;      &lt;th&gt;Financial Status&lt;/th&gt;&#xA;      &lt;th&gt;total Price&lt;/th&gt;&#xA;      &lt;th&gt;Action&lt;/th&gt;&#xA; &#xA;    &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA; {data.Order.map(({ Order , createdAt , totalPrice  }) =&gt; (&#xA;  &#xA;    &lt;tr key={totalPrice}&gt;&#xA;   &#xA;     &lt;td&gt;{createdAt} &lt;/td&gt;&#xA;   &#xA;    &lt;/tr&gt;&#xA;  &#xA;  ))}&#xA;  &lt;/tbody&gt;&#xA;&lt;/Table&gt;&#xA;&#xA; &lt;/div&gt;&#xA; )}&#xA;</code></pre>&#xA;<p>but i got this error ( TypeError: data.Order.map is not a function ) i don't know why i got it ! how to fix it ?</p>&#xA;<p>schema of query Order :</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;Order&quot;: {&#xA;      &quot;id&quot;: &quot;gid://shopify/Order/2950331957398&quot;,&#xA;      &quot;displayFinancialStatus&quot;: &quot;REFUNDED&quot;,&#xA;      &quot;displayFulfillmentStatus&quot;: &quot;UNFULFILLED&quot;,&#xA;      &quot;email&quot;: &quot;bla@gmail.com&quot;,&#xA;      &quot;createdAt&quot;: &quot;2020-11-19T15:13:44Z&quot;,&#xA;      &quot;subtotalPrice&quot;: &quot;3795&quot;,&#xA;      &quot;totalRefunded&quot;: &quot;4445&quot;,&#xA;      &quot;totalShippingPrice&quot;: &quot;650&quot;,&#xA;      &quot;totalPrice&quot;: &quot;4445&quot;,&#xA;      &quot;totalTax&quot;: &quot;345&quot;,&#xA;      &quot;updatedAt&quot;: &quot;2019-1-24T07:33:42Z&quot;,&#xA;      &quot;lineItems&quot;: {&#xA;        &quot;edges&quot;: [&#xA;          {&#xA;            &quot;node&quot;: {&#xA;              &quot;customAttributes&quot;: [],&#xA;              &quot;quantity&quot;: 1,&#xA;              &quot;title&quot;: &quot;bla&quot;,&#xA;              &quot;id&quot;: &quot;gid://shopify/LineItem/12345678&quot;,&#xA;              &quot;variant&quot;: {&#xA;                &quot;id&quot;: &quot;gid://shopify/ProductVariant/12345678&quot;,&#xA;                &quot;title&quot;: &quot;ブラウン / ONE&quot;,&#xA;                &quot;weight&quot;: 0,&#xA;                &quot;weightUnit&quot;: &quot;KILOGRAMS&quot;,&#xA;                &quot;price&quot;: &quot;3795&quot;,&#xA;             &#xA;              }&#xA;            }&#xA;          }&#xA;        ]&#xA;      },&#xA;      &quot;shippingAddress&quot;: {&#xA;        &quot;address1&quot;: &quot;adresse here&quot;,&#xA;        &quot;address2&quot;: &quot;&quot;,&#xA;        &quot;city&quot;: &quot;city here&quot;,&#xA;        &quot;company&quot;: null,&#xA;        &quot;country&quot;: &quot;Japan&quot;,&#xA;        &quot;countryCode&quot;: &quot;JP&quot;,&#xA;        &quot;firstName&quot;: &quot;コウスケ&quot;,&#xA;        &quot;id&quot;: &quot;gid://shopify/MailingAddress/123456789?model_name=Address&quot;,&#xA;        &quot;lastName&quot;: &quot;bla&quot;,&#xA;        &quot;name&quot;: &quot;bla&quot;,&#xA;        &quot;phone&quot;: null,&#xA;        &quot;province&quot;: &quot;Tōkyō&quot;,&#xA;        &quot;provinceCode&quot;: &quot;JP-13&quot;,&#xA;        &quot;zip&quot;: &quot;187-0022&quot;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",10307196,,10307196,2020-12-28 05:19:40,2020-12-28 05:43:51,TypeError: data.Order.map is not a function ( react and graphql ),<javascript><reactjs><graphql><jsx><react-apollo>,1,4,0,2020-12-28 04:24:39
65473326,2,,65472989,2,,"<p><code>map</code> is function available on array prototype. The data returned is an object, so you cannot use <code>.map</code> on an object. Do this instead:</p>&#xA;<pre><code>  &lt;tbody&gt;&#xA;    &lt;tr key={data?.Order?.totalPrice}&gt;&#xA;     &lt;td&gt;{data?.Order?.createdAt} &lt;/td&gt;   &#xA;    &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;</code></pre>&#xA;<p>Ideally, for the key, you would want to do something like <code>Order.id</code> which uniquely represents that row.</p>&#xA;",298455,,298455,2020-12-28 05:43:51,2020-12-28 05:43:51,"",,0,5,0,2020-12-28 05:25:09
65475413,1,,,5,486,"<p>I am using the GitHub Graphql API to pull issues for a repository. Here is how the query looks like:</p>&#xA;<pre><code>query { &#xA;  repository(owner:&quot;OWNER&quot;, name:&quot;REPOSITORYNAME&quot;) { &#xA;    issues(states:OPEN) {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>the response payload contains the count of open issues for the repository.</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;repository&quot;: {&#xA;      &quot;issues&quot;: {&#xA;        &quot;totalCount&quot;: 375&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Searched the docs but couldn't find anything relevant, Is there a way we can query the number of open issues that were open at a historical date?&#xA;say,  the <code>totalCount</code> of open issues for the repository on 10-12-2020?</p>&#xA;",12724372,,,,2022-08-30 20:46:09,Github GraphQL API get count of issues on particular date,<graphql><github-api>,2,0,0,2020-12-28 09:24:47
65552902,1,,,1,108,"<p>I have following mutation from shopify graphql to add a variant to an existing product</p>&#xA;<p>Query</p>&#xA;<pre><code>mutation UpdateProductMutation ($id: ID!, $options: [String!], $variants: [ProductVariantInput!]) {&#xA;  productUpdate(input: {id: $id, options: $options, variants: $variants}) {&#xA;    product {&#xA;      id,&#xA;      title,&#xA;      publishedAt,&#xA;      options {&#xA;        values&#xA;      }&#xA;      variants(first: 100) {&#xA;        edges {&#xA;          node {&#xA;            id,&#xA;            title&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;    userErrors {&#xA;      field,&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Values</p>&#xA;<pre><code>{&#xA;    &quot;id&quot;: &quot;gid://shopify/Product/5388344426634&quot;,&#xA;    &quot;options&quot;: [&#xA;        &quot;size&quot;,&#xA;        &quot;color&quot;&#xA;    ],&#xA;    &quot;variants&quot;: [&#xA;        {&#xA;            &quot;options&quot;: [&#xA;                &quot;xxl&quot;,&#xA;                &quot;black&quot;&#xA;            ]&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>Response</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;productUpdate&quot;: {&#xA;      &quot;product&quot;: {&#xA;        &quot;id&quot;: &quot;gid:\/\/shopify\/Product\/5388344426634&quot;,&#xA;        &quot;title&quot;: &quot;hello-kitty123s&quot;,&#xA;        &quot;publishedAt&quot;: null,&#xA;        &quot;options&quot;: [&#xA;          {&#xA;            &quot;values&quot;: [&#xA;              &quot;xxl&quot;&#xA;            ]&#xA;          },&#xA;          {&#xA;            &quot;values&quot;: [&#xA;              &quot;black&quot;&#xA;            ]&#xA;          }&#xA;        ],&#xA;        &quot;variants&quot;: {&#xA;          &quot;edges&quot;: [&#xA;            {&#xA;              &quot;node&quot;: {&#xA;                &quot;id&quot;: &quot;gid:\/\/shopify\/ProductVariant\/34937293373578&quot;,&#xA;                &quot;title&quot;: &quot;xxl \/ black&quot;&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      },&#xA;      &quot;userErrors&quot;: []&#xA;    }&#xA;  },&#xA;  &quot;extensions&quot;: {&#xA;    &quot;cost&quot;: {&#xA;      &quot;requestedQueryCost&quot;: 113,&#xA;      &quot;actualQueryCost&quot;: 14,&#xA;      &quot;throttleStatus&quot;: {&#xA;        &quot;maximumAvailable&quot;: 1000.0,&#xA;        &quot;currentlyAvailable&quot;: 986,&#xA;        &quot;restoreRate&quot;: 50.0&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Is there a way I can get ONLY newly created product variant in the response without having to paginate of the variants or passing a a really huge number in the query i.e <code>variants(first: 100)</code></p>&#xA;",1099142,,,,2021-01-03 17:36:30,Get only the newly created data in graphql mutation resposne,<graphql><shopify-api><graphql-mutation>,0,0,0,2021-01-03 17:36:30
65553860,2,,65553598,1,,"<p>It seems that you need to implement some recursion to your code - like this:</p>&#xA;<pre><code>  router.post('/getAllProducts', bodyParser(), async (ctx, next) =&gt; {&#xA;    let allProducts;&#xA;    const { accessToken } = ctx.session;&#xA;    ctx.response.status = 200;&#xA;&#xA;    function loadData(cursor) {&#xA;      requestData(accessToken, GET_ALL_PRODUCTS, cursor).then((res) =&gt; {&#xA;        const data = res.data.data;&#xA;        // process data here, eg: allProducts = [...allProducts, ...data];&#xA;        const edges = data.products.edges;&#xA;        const nextCursor = edges.length ? edges[edges.length - 1].cursor : null;&#xA;        if (nextCursor) {&#xA;          setTimeout(() =&gt; {&#xA;            loadData(nextCursor);&#xA;          }, 1000);&#xA;        } else {&#xA;          // now we have all data&#xA;          sendToClient(allProducts);&#xA;        }&#xA;      });&#xA;    }&#xA;    loadData(null);&#xA;  });&#xA;&#xA;  function requestData(token, queryName, cursor) {&#xA;    const variables = { after: cursor };&#xA;    console.log(cursor);&#xA;    const res = axios({&#xA;      headers: {&#xA;        'X-Shopify-Access-Token': token,&#xA;      },&#xA;      method: 'post',&#xA;      data: {&#xA;        query: queryName,&#xA;        variables: variables,&#xA;      },&#xA;      url: url,&#xA;    });&#xA;&#xA;    return res;&#xA;  }&#xA;</code></pre>&#xA;",10880993,,10880993,2021-01-03 23:10:11,2021-01-03 23:10:11,"",,0,3,0,2021-01-03 19:14:12
65605669,1,,,2,642,"<p>We are implementing an app in React-Naitive and for this we are using aws and amplify. Now we are trying to get all elements of an interface or union type in graphql. The Interface is calling TrackingItem and the type which are implementing this is called UserFood and UserSymptom. We tried this also, with union and just a array of TrackingItems. But with every possibility we don’t get any element. The return value is just null and we are expect the ID of TrackingItems, or in case of getAllTrackingItems an array of IDs from TrackingItem.</p>&#xA;<p>Graphql-schema:</p>&#xA;<pre><code>type Query {&#xA;getAllTrackingItems: [TrackingItem]&#xA;# Retrieve tracking items&#xA;findTrackingItem(id: ID!): TrackingItem&#xA;# Search across all UnionTrackingItems&#xA;search(id: ID!): [UnionTrackingItems]&#xA;}&#xA;&#xA;union UnionTrackingItems = UserSymptom | UserFood&#xA;&#xA;interface TrackingItem {&#xA;  id: ID!&#xA;  userId: ID!&#xA;}&#xA;&#xA;type UserFood implements TrackingItem @model {&#xA;  id: ID!&#xA;  userId : ID!&#xA;  type: String!&#xA;  foodId: ID!&#xA;  food : Food @connection(fields: [&quot;foodId&quot;]) &#xA;}&#xA;&#xA;type UserSymptom implements TrackingItem @model {&#xA;  id: ID!&#xA;  userId : ID!&#xA;  type: String!&#xA;  symptomId: ID!&#xA;  symptom : Symptom @connection(fields: [&quot;symptomId&quot;])&#xA;  strenght: Int&#xA;}&#xA;  &#xA;</code></pre>&#xA;<p>Our queries which we are testing after amplify mock:</p>&#xA;<pre><code>query MyQuery {&#xA;  getAllTrackingItems {&#xA;    id&#xA;  }&#xA;  findTrackingItem(id: 1) {&#xA;    id&#xA;  }&#xA;  search(id: 1) {&#xA;    ... on UserFood {&#xA;      id&#xA;    }&#xA;  }&#xA;  getUserFood(id: 1) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Our results:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;getAllTrackingItems&quot;: null,&#xA;    &quot;findTrackingItem&quot;: null,&#xA;    &quot;search&quot;: null,&#xA;    &quot;getUserFood&quot;: {&#xA;      &quot;id&quot;: &quot;1&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Can anyone help? Thank you!</p>&#xA;",13475286,,13475286,2021-01-07 18:34:39,2021-01-07 18:34:39,GraphQL query for interface or union type,<database><graphql><nosql><backend><aws-amplify>,0,1,0,2021-01-07 01:56:49
65636946,1,,,0,138,"<p>I'm making a graphQL query on a json file. See DATA below.&#xA;I essentially need to return the entire array as it is into a variable. Imagine simply copying and pasting it in but instead do it using graphQL.</p>&#xA;<p>I can make a query like this for example:</p>&#xA;<pre><code>  const data = useStaticQuery(graphql`&#xA;    query {&#xA;      allTestJson {&#xA;        nodes {&#xA;          _106{&#xA;            lat&#xA;            lng&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  `)&#xA;</code></pre>&#xA;<p>But this will return null values where some of the arrays don't contain a corresponding object.</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;allTestJson&quot;: {&#xA;      &quot;nodes&quot;: [&#xA;        {&#xA;          &quot;id&quot;: &quot;f622635c-5c7b-5d18-ba1a-00359821deba&quot;,&#xA;          &quot;_106&quot;: null&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: &quot;656e26bb-fd18-5e81-b46a-a2614299d245&quot;,&#xA;          &quot;_106&quot;: {&#xA;            &quot;lng&quot;: 0.62991339,&#xA;            &quot;lat&quot;: 51.35365677&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: &quot;a50493a2-1ee9-54e9-ada0-992dd739fff0&quot;,&#xA;          &quot;_106&quot;: null&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: &quot;001f6b69-7f6c-5bdf-813e-3019f324a0bd&quot;,&#xA;          &quot;_106&quot;: null&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: &quot;e9a76677-390a-511b-8fae-4293ffa44569&quot;,&#xA;          &quot;_106&quot;: null&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: &quot;f1168a9a-a450-56f0-b75b-9c2a09029a01&quot;,&#xA;          &quot;_106&quot;: null&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: &quot;1f431781-8682-57c6-bbe5-09624f1f4f0e&quot;,&#xA;          &quot;_106&quot;: null&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: &quot;6ec27c23-27d2-5c1a-b68e-3b2e3edf2163&quot;,&#xA;          &quot;_106&quot;: null&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: &quot;016685fb-59dc-5364-a18f-64ccb8358e45&quot;,&#xA;          &quot;_106&quot;: null&#xA;        }&#xA;      ]&#xA;    }&#xA;  },&#xA;  &quot;extensions&quot;: {}&#xA;}&#xA;</code></pre>&#xA;<p>I could split each child array out into their own file and do the below for each file, which does give me back a child array for each which I can just wrap in an array. But this just adds more files and complication that I would rather keep concise to one file.</p>&#xA;<pre><code> query {&#xA;      allTestJson {&#xA;        nodes {&#xA;          lng&#xA;          lat&#xA;        }&#xA;      }&#xA;   }&#xA;</code></pre>&#xA;<p>As I mentioned, essentially I need to return the array below from the query so that I can assign it to a variable something like this: <code>const coordinates = data.allTestJson.nodes</code></p>&#xA;<p>Or just this <code>const coordinates = data.allTestJson</code></p>&#xA;<h2>DATA</h2>&#xA;<pre><code>[&#xA;  [&#xA;    { &quot;lng&quot;: 0.16627, &quot;lat&quot;: 51.39855576 },&#xA;    { &quot;lng&quot;: 0.160834, &quot;lat&quot;: 51.41722107 },&#xA;    { &quot;lng&quot;: 0.18110999, &quot;lat&quot;: 51.43777084 },&#xA;    { &quot;lng&quot;: 0.21139, &quot;lat&quot;: 51.4569397 },&#xA;    { &quot;lng&quot;: 0.223611, &quot;lat&quot;: 51.47333145 },&#xA;    { &quot;lng&quot;: 0.216666, &quot;lat&quot;: 51.47777939 },&#xA;    { &quot;lng&quot;: 0.218889, &quot;lat&quot;: 51.4858284 },&#xA;    { &quot;lng&quot;: 0.242222, &quot;lat&quot;: 51.49888992 },&#xA;    { &quot;lng&quot;: 0.247777, &quot;lat&quot;: 51.52000046 },&#xA;    { &quot;lng&quot;: 0.27277899, &quot;lat&quot;: 51.51665878 },&#xA;    { &quot;lng&quot;: 0.28000101, &quot;lat&quot;: 51.52693939 },&#xA;    { &quot;lng&quot;: 0.33611101, &quot;lat&quot;: 51.53998947 },&#xA;    { &quot;lng&quot;: 0.31610999, &quot;lat&quot;: 51.56222153 },&#xA;    { &quot;lng&quot;: 0.30833301, &quot;lat&quot;: 51.57889175 },&#xA;    { &quot;lng&quot;: 0.284446, &quot;lat&quot;: 51.58388901 },&#xA;    { &quot;lng&quot;: 0.27055699, &quot;lat&quot;: 51.59360886 },&#xA;    { &quot;lng&quot;: 0.251111, &quot;lat&quot;: 51.61693954 },&#xA;    { &quot;lng&quot;: 0.248055, &quot;lat&quot;: 51.627491 },&#xA;    { &quot;lng&quot;: 0.23139, &quot;lat&quot;: 51.62916946 },&#xA;    { &quot;lng&quot;: 0.18472201, &quot;lat&quot;: 51.61943817 },&#xA;    { &quot;lng&quot;: 0.112223, &quot;lat&quot;: 51.61555099 },&#xA;    { &quot;lng&quot;: 0.095555, &quot;lat&quot;: 51.60277939 },&#xA;    { &quot;lng&quot;: 0.083888, &quot;lat&quot;: 51.60110092 },&#xA;    { &quot;lng&quot;: 0.030832, &quot;lat&quot;: 51.62110901 },&#xA;    { &quot;lng&quot;: 0.02139, &quot;lat&quot;: 51.63694 },&#xA;    { &quot;lng&quot;: 0, &quot;lat&quot;: 51.64580917 },&#xA;    { &quot;lng&quot;: -0.012779, &quot;lat&quot;: 51.64999008 },&#xA;    { &quot;lng&quot;: -0.006944, &quot;lat&quot;: 51.66611099 },&#xA;    { &quot;lng&quot;: -0.011218, &quot;lat&quot;: 51.67724991 },&#xA;    { &quot;lng&quot;: -0.148057, &quot;lat&quot;: 51.68915939 },&#xA;    { &quot;lng&quot;: -0.158333, &quot;lat&quot;: 51.67583084 },&#xA;    { &quot;lng&quot;: -0.17333201, &quot;lat&quot;: 51.66638184 },&#xA;    { &quot;lng&quot;: -0.200554, &quot;lat&quot;: 51.66222 },&#xA;    { &quot;lng&quot;: -0.2175, &quot;lat&quot;: 51.65415955 },&#xA;    { &quot;lng&quot;: -0.2185795, &quot;lat&quot;: 51.65552902 },&#xA;    { &quot;lng&quot;: -0.25165808, &quot;lat&quot;: 51.65075684 },&#xA;    { &quot;lng&quot;: -0.25416699, &quot;lat&quot;: 51.64416885 },&#xA;    { &quot;lng&quot;: -0.32083401, &quot;lat&quot;: 51.63444138 },&#xA;    { &quot;lng&quot;: -0.37389001, &quot;lat&quot;: 51.61444092 },&#xA;    { &quot;lng&quot;: -0.43194401, &quot;lat&quot;: 51.61526871 },&#xA;    { &quot;lng&quot;: -0.45509729, &quot;lat&quot;: 51.61145401 },&#xA;    { &quot;lng&quot;: -0.49145395, &quot;lat&quot;: 51.6305275 },&#xA;    { &quot;lng&quot;: -0.51059043, &quot;lat&quot;: 51.60243225 },&#xA;    { &quot;lng&quot;: -0.49340501, &quot;lat&quot;: 51.59098816 },&#xA;    { &quot;lng&quot;: -0.471389, &quot;lat&quot;: 51.54999924 },&#xA;    { &quot;lng&quot;: -0.48444599, &quot;lat&quot;: 51.49443817 },&#xA;    { &quot;lng&quot;: -0.48830837, &quot;lat&quot;: 51.48941803 },&#xA;    { &quot;lng&quot;: -0.50117481, &quot;lat&quot;: 51.49054718 },&#xA;    { &quot;lng&quot;: -0.51396489, &quot;lat&quot;: 51.47476578 },&#xA;    { &quot;lng&quot;: -0.51626939, &quot;lat&quot;: 51.46512222 },&#xA;    { &quot;lng&quot;: -0.50549263, &quot;lat&quot;: 51.46284485 },&#xA;    { &quot;lng&quot;: -0.47808617, &quot;lat&quot;: 51.4624939 },&#xA;    { &quot;lng&quot;: -0.473611, &quot;lat&quot;: 51.45888901 },&#xA;    { &quot;lng&quot;: -0.44138801, &quot;lat&quot;: 51.45389175 },&#xA;    { &quot;lng&quot;: -0.44027901, &quot;lat&quot;: 51.43804932 },&#xA;    { &quot;lng&quot;: -0.43166599, &quot;lat&quot;: 51.43027115 },&#xA;    { &quot;lng&quot;: -0.40027699, &quot;lat&quot;: 51.42499924 },&#xA;    { &quot;lng&quot;: -0.37493101, &quot;lat&quot;: 51.4070282 },&#xA;    { &quot;lng&quot;: -0.34333301, &quot;lat&quot;: 51.39416885 },&#xA;    { &quot;lng&quot;: -0.325679, &quot;lat&quot;: 51.39373016 },&#xA;    { &quot;lng&quot;: -0.311667, &quot;lat&quot;: 51.39249039 },&#xA;    { &quot;lng&quot;: -0.30624413, &quot;lat&quot;: 51.3837471 },&#xA;    { &quot;lng&quot;: -0.31510291, &quot;lat&quot;: 51.37156677 },&#xA;    { &quot;lng&quot;: -0.31725064, &quot;lat&quot;: 51.35446548 },&#xA;    { &quot;lng&quot;: -0.33161607, &quot;lat&quot;: 51.33563232 },&#xA;    { &quot;lng&quot;: -0.31991833, &quot;lat&quot;: 51.32309341 },&#xA;    { &quot;lng&quot;: -0.30420882, &quot;lat&quot;: 51.33714294 },&#xA;    { &quot;lng&quot;: -0.2914573, &quot;lat&quot;: 51.35313797 },&#xA;    { &quot;lng&quot;: -0.28307828, &quot;lat&quot;: 51.37395477 },&#xA;    { &quot;lng&quot;: -0.25883117, &quot;lat&quot;: 51.37169647 },&#xA;    { &quot;lng&quot;: -0.25410262, &quot;lat&quot;: 51.36838531 },&#xA;    { &quot;lng&quot;: -0.243056, &quot;lat&quot;: 51.37360001 },&#xA;    { &quot;lng&quot;: -0.21805599, &quot;lat&quot;: 51.35305023 },&#xA;    { &quot;lng&quot;: -0.21944401, &quot;lat&quot;: 51.32833099 },&#xA;    { &quot;lng&quot;: -0.188612, &quot;lat&quot;: 51.33972168 },&#xA;    { &quot;lng&quot;: -0.178333, &quot;lat&quot;: 51.33916092 },&#xA;    { &quot;lng&quot;: -0.15111101, &quot;lat&quot;: 51.30305099 },&#xA;    { &quot;lng&quot;: -0.128057, &quot;lat&quot;: 51.28916168 },&#xA;    { &quot;lng&quot;: -0.101943, &quot;lat&quot;: 51.29277039 },&#xA;    { &quot;lng&quot;: -0.084722, &quot;lat&quot;: 51.31110001 },&#xA;    { &quot;lng&quot;: -0.065557, &quot;lat&quot;: 51.31637955 },&#xA;    { &quot;lng&quot;: -0.046667, &quot;lat&quot;: 51.31555176 },&#xA;    { &quot;lng&quot;: -0.026668, &quot;lat&quot;: 51.33082962 },&#xA;    { &quot;lng&quot;: 0, &quot;lat&quot;: 51.32949829 },&#xA;    { &quot;lng&quot;: 0.01639, &quot;lat&quot;: 51.3185997 },&#xA;    { &quot;lng&quot;: 0.0225, &quot;lat&quot;: 51.28971863 },&#xA;    { &quot;lng&quot;: 0.048334, &quot;lat&quot;: 51.29499817 },&#xA;    { &quot;lng&quot;: 0.054444, &quot;lat&quot;: 51.28998947 },&#xA;    { &quot;lng&quot;: 0.06889, &quot;lat&quot;: 51.28248978 },&#xA;    { &quot;lng&quot;: 0.093889, &quot;lat&quot;: 51.28833008 },&#xA;    { &quot;lng&quot;: 0.096665, &quot;lat&quot;: 51.31110001 },&#xA;    { &quot;lng&quot;: 0.119999, &quot;lat&quot;: 51.32416916 },&#xA;    { &quot;lng&quot;: 0.13111, &quot;lat&quot;: 51.34111023 },&#xA;    { &quot;lng&quot;: 0.155278, &quot;lat&quot;: 51.35472107 },&#xA;    { &quot;lng&quot;: 0.169167, &quot;lat&quot;: 51.38861084 },&#xA;    { &quot;lng&quot;: 0.16627, &quot;lat&quot;: 51.39855576 }&#xA;  ],&#xA;  [&#xA;    { &quot;lng&quot;: 1.37138796, &quot;lat&quot;: 51.31183624 },&#xA;    { &quot;lng&quot;: 1.36972201, &quot;lat&quot;: 51.3156929 },&#xA;    { &quot;lng&quot;: 1.36472201, &quot;lat&quot;: 51.3156929 },&#xA;    { &quot;lng&quot;: 1.36249995, &quot;lat&quot;: 51.32013702 },&#xA;    { &quot;lng&quot;: 1.37361002, &quot;lat&quot;: 51.32791519 },&#xA;    { &quot;lng&quot;: 1.38305497, &quot;lat&quot;: 51.32875061 },&#xA;    { &quot;lng&quot;: 1.39138997, &quot;lat&quot;: 51.32597351 },&#xA;    { &quot;lng&quot;: 1.40972102, &quot;lat&quot;: 51.32652664 },&#xA;    { &quot;lng&quot;: 1.415277, &quot;lat&quot;: 51.32402802 },&#xA;    { &quot;lng&quot;: 1.42027795, &quot;lat&quot;: 51.32958221 },&#xA;    { &quot;lng&quot;: 1.43250096, &quot;lat&quot;: 51.33736038 },&#xA;    { &quot;lng&quot;: 1.44416797, &quot;lat&quot;: 51.35097122 },&#xA;    { &quot;lng&quot;: 1.44583404, &quot;lat&quot;: 51.36624908 },&#xA;    { &quot;lng&quot;: 1.44861197, &quot;lat&quot;: 51.36875153 },&#xA;    { &quot;lng&quot;: 1.44972205, &quot;lat&quot;: 51.37763977 },&#xA;    { &quot;lng&quot;: 1.44249904, &quot;lat&quot;: 51.38680649 },&#xA;    { &quot;lng&quot;: 1.42416596, &quot;lat&quot;: 51.39347076 },&#xA;    { &quot;lng&quot;: 1.41916597, &quot;lat&quot;: 51.39180374 },&#xA;    { &quot;lng&quot;: 1.40805495, &quot;lat&quot;: 51.39291763 },&#xA;    { &quot;lng&quot;: 1.38583302, &quot;lat&quot;: 51.39291763 },&#xA;    { &quot;lng&quot;: 1.38083303, &quot;lat&quot;: 51.39152908 },&#xA;    { &quot;lng&quot;: 1.37805498, &quot;lat&quot;: 51.38708496 },&#xA;    { &quot;lng&quot;: 1.36472201, &quot;lat&quot;: 51.38597107 },&#xA;    { &quot;lng&quot;: 1.34972298, &quot;lat&quot;: 51.38624954 },&#xA;    { &quot;lng&quot;: 1.34194398, &quot;lat&quot;: 51.38486099 },&#xA;    { &quot;lng&quot;: 1.33305502, &quot;lat&quot;: 51.38597107 },&#xA;    { &quot;lng&quot;: 1.32694495, &quot;lat&quot;: 51.38208389 },&#xA;    { &quot;lng&quot;: 1.30361104, &quot;lat&quot;: 51.38152695 },&#xA;    { &quot;lng&quot;: 1.30083299, &quot;lat&quot;: 51.38319397 },&#xA;    { &quot;lng&quot;: 1.28916597, &quot;lat&quot;: 51.38263702 },&#xA;    { &quot;lng&quot;: 1.27749896, &quot;lat&quot;: 51.37763977 },&#xA;    { &quot;lng&quot;: 1.26083398, &quot;lat&quot;: 51.3773613 },&#xA;    { &quot;lng&quot;: 1.24527705, &quot;lat&quot;: 51.37791824 },&#xA;    { &quot;lng&quot;: 1.21361005, &quot;lat&quot;: 51.38069534 },&#xA;    { &quot;lng&quot;: 1.17750001, &quot;lat&quot;: 51.37708282 },&#xA;    { &quot;lng&quot;: 1.16638899, &quot;lat&quot;: 51.37402725 },&#xA;    { &quot;lng&quot;: 1.14027703, &quot;lat&quot;: 51.3726387 },&#xA;    { &quot;lng&quot;: 1.12361205, &quot;lat&quot;: 51.37319565 },&#xA;    { &quot;lng&quot;: 1.11972106, &quot;lat&quot;: 51.37208176 },&#xA;    { &quot;lng&quot;: 1.09972203, &quot;lat&quot;: 51.3726387 },&#xA;    { &quot;lng&quot;: 1.09361196, &quot;lat&quot;: 51.36819458 },&#xA;    { &quot;lng&quot;: 1.08027899, &quot;lat&quot;: 51.36819458 },&#xA;    { &quot;lng&quot;: 1.06639004, &quot;lat&quot;: 51.36930466 },&#xA;    { &quot;lng&quot;: 1.06305504, &quot;lat&quot;: 51.36597061 },&#xA;    { &quot;lng&quot;: 1.05749905, &quot;lat&quot;: 51.36541748 },&#xA;    { &quot;lng&quot;: 1.03194499, &quot;lat&quot;: 51.36597061 },&#xA;    { &quot;lng&quot;: 1.01472199, &quot;lat&quot;: 51.35569382 },&#xA;    { &quot;lng&quot;: 1.01194298, &quot;lat&quot;: 51.35180664 },&#xA;    { &quot;lng&quot;: 1.00583303, &quot;lat&quot;: 51.3493042 },&#xA;    { &quot;lng&quot;: 0.98972201, &quot;lat&quot;: 51.34624863 },&#xA;    { &quot;lng&quot;: 0.96694398, &quot;lat&quot;: 51.3465271 },&#xA;    { &quot;lng&quot;: 0.95416701, &quot;lat&quot;: 51.34486008 },&#xA;    { &quot;lng&quot;: 0.94138801, &quot;lat&quot;: 51.34680557 },&#xA;    { &quot;lng&quot;: 0.93361199, &quot;lat&quot;: 51.34680557 },&#xA;    { &quot;lng&quot;: 0.927499, &quot;lat&quot;: 51.34486008 },&#xA;    { &quot;lng&quot;: 0.91638798, &quot;lat&quot;: 51.34541702 },&#xA;    { &quot;lng&quot;: 0.91527802, &quot;lat&quot;: 51.34375 },&#xA;    { &quot;lng&quot;: 0.90083301, &quot;lat&quot;: 51.34182358 },&#xA;    { &quot;lng&quot;: 0.889166, &quot;lat&quot;: 51.3465271 },&#xA;    { &quot;lng&quot;: 0.886388, &quot;lat&quot;: 51.34958267 },&#xA;    { &quot;lng&quot;: 0.87694299, &quot;lat&quot;: 51.35402679 },&#xA;    { &quot;lng&quot;: 0.86138803, &quot;lat&quot;: 51.35625076 },&#xA;    { &quot;lng&quot;: 0.85250002, &quot;lat&quot;: 51.35430527 },&#xA;    { &quot;lng&quot;: 0.836945, &quot;lat&quot;: 51.35374832 },&#xA;    { &quot;lng&quot;: 0.81972301, &quot;lat&quot;: 51.35430527 },&#xA;    { &quot;lng&quot;: 0.81416702, &quot;lat&quot;: 51.35874939 },&#xA;    { &quot;lng&quot;: 0.80472201, &quot;lat&quot;: 51.36041641 },&#xA;    { &quot;lng&quot;: 0.78416699, &quot;lat&quot;: 51.36069489 },&#xA;    { &quot;lng&quot;: 0.76416701, &quot;lat&quot;: 51.36375046 },&#xA;    { &quot;lng&quot;: 0.76305503, &quot;lat&quot;: 51.37125015 },&#xA;    { &quot;lng&quot;: 0.76416701, &quot;lat&quot;: 51.38402939 },&#xA;    { &quot;lng&quot;: 0.75083399, &quot;lat&quot;: 51.38819504 },&#xA;    { &quot;lng&quot;: 0.74027699, &quot;lat&quot;: 51.39597321 },&#xA;    { &quot;lng&quot;: 0.735277, &quot;lat&quot;: 51.39541626 },&#xA;    { &quot;lng&quot;: 0.72583199, &quot;lat&quot;: 51.39986038 },&#xA;    { &quot;lng&quot;: 0.72250003, &quot;lat&quot;: 51.40763855 },&#xA;    { &quot;lng&quot;: 0.71749997, &quot;lat&quot;: 51.4118042 },&#xA;    { &quot;lng&quot;: 0.71972197, &quot;lat&quot;: 51.41652679 },&#xA;    { &quot;lng&quot;: 0.73194498, &quot;lat&quot;: 51.41847229 },&#xA;    { &quot;lng&quot;: 0.72805399, &quot;lat&quot;: 51.42319489 },&#xA;    { &quot;lng&quot;: 0.71749997, &quot;lat&quot;: 51.42041779 },&#xA;    { &quot;lng&quot;: 0.69638801, &quot;lat&quot;: 51.41958237 },&#xA;    { &quot;lng&quot;: 0.69861001, &quot;lat&quot;: 51.41013718 },&#xA;    { &quot;lng&quot;: 0.69583398, &quot;lat&quot;: 51.40486145 },&#xA;    { &quot;lng&quot;: 0.702501, &quot;lat&quot;: 51.39513779 },&#xA;    { &quot;lng&quot;: 0.70805502, &quot;lat&quot;: 51.39374924 },&#xA;    { &quot;lng&quot;: 0.71694303, &quot;lat&quot;: 51.38819504 },&#xA;    { &quot;lng&quot;: 0.71361101, &quot;lat&quot;: 51.38458252 },&#xA;    { &quot;lng&quot;: 0.70583302, &quot;lat&quot;: 51.3829155 },&#xA;    { &quot;lng&quot;: 0.69638801, &quot;lat&quot;: 51.38402939 },&#xA;    { &quot;lng&quot;: 0.702501, &quot;lat&quot;: 51.39236069 },&#xA;    { &quot;lng&quot;: 0.68638903, &quot;lat&quot;: 51.39152908 },&#xA;    { &quot;lng&quot;: 0.68250102, &quot;lat&quot;: 51.38541794 },&#xA;    { &quot;lng&quot;: 0.68249899, &quot;lat&quot;: 51.38041687 },&#xA;    { &quot;lng&quot;: 0.67416602, &quot;lat&quot;: 51.37597275 },&#xA;    { &quot;lng&quot;: 0.66638798, &quot;lat&quot;: 51.37902832 },&#xA;    { &quot;lng&quot;: 0.66750002, &quot;lat&quot;: 51.38375092 },&#xA;    { &quot;lng&quot;: 0.660833, &quot;lat&quot;: 51.38708496 },&#xA;    { &quot;lng&quot;: 0.65916699, &quot;lat&quot;: 51.39263916 },&#xA;    { &quot;lng&quot;: 0.649167, &quot;lat&quot;: 51.39708328 },&#xA;    { &quot;lng&quot;: 0.64194399, &quot;lat&quot;: 51.39597321 },&#xA;    { &quot;lng&quot;: 0.641388, &quot;lat&quot;: 51.39041519 },&#xA;    { &quot;lng&quot;: 0.63583398, &quot;lat&quot;: 51.38819504 },&#xA;    { &quot;lng&quot;: 0.61871314, &quot;lat&quot;: 51.38847351 },&#xA;    { &quot;lng&quot;: 0.61907172, &quot;lat&quot;: 51.38735962 },&#xA;    { &quot;lng&quot;: 0.6208595, &quot;lat&quot;: 51.38180542 },&#xA;    { &quot;lng&quot;: 0.62991339, &quot;lat&quot;: 51.35365677 },&#xA;    { &quot;lng&quot;: 0.6055187, &quot;lat&quot;: 51.32564545 },&#xA;    { &quot;lng&quot;: 0.53163612, &quot;lat&quot;: 51.32905197 },&#xA;    { &quot;lng&quot;: 0.51799393, &quot;lat&quot;: 51.34005356 },&#xA;    { &quot;lng&quot;: 0.44815803, &quot;lat&quot;: 51.3654213 },&#xA;    { &quot;lng&quot;: 0.45292687, &quot;lat&quot;: 51.33221054 },&#xA;    { &quot;lng&quot;: 0.40441132, &quot;lat&quot;: 51.34779739 },&#xA;    { &quot;lng&quot;: 0.42912629, &quot;lat&quot;: 51.36586761 },&#xA;    { &quot;lng&quot;: 0.46352649, &quot;lat&quot;: 51.38949585 },&#xA;    { &quot;lng&quot;: 0.48509443, &quot;lat&quot;: 51.42131805 },&#xA;    { &quot;lng&quot;: 0.45472199, &quot;lat&quot;: 51.45279694 },&#xA;    { &quot;lng&quot;: 0.44249901, &quot;lat&quot;: 51.45013809 },&#xA;    { &quot;lng&quot;: 0.44027701, &quot;lat&quot;: 51.44763947 },&#xA;    { &quot;lng&quot;: 0.43360999, &quot;lat&quot;: 51.44763947 },&#xA;    { &quot;lng&quot;: 0.41749901, &quot;lat&quot;: 51.44430542 },&#xA;    { &quot;lng&quot;: 0.41416699, &quot;lat&quot;: 51.44999313 },&#xA;    { &quot;lng&quot;: 0.38685399, &quot;lat&quot;: 51.44845963 },&#xA;    { &quot;lng&quot;: 0.36611199, &quot;lat&quot;: 51.44332886 },&#xA;    { &quot;lng&quot;: 0.34139001, &quot;lat&quot;: 51.44638824 },&#xA;    { &quot;lng&quot;: 0.31222099, &quot;lat&quot;: 51.46554947 },&#xA;    { &quot;lng&quot;: 0.26555401, &quot;lat&quot;: 51.45666885 },&#xA;    { &quot;lng&quot;: 0.223611, &quot;lat&quot;: 51.47333145 },&#xA;    { &quot;lng&quot;: 0.21139, &quot;lat&quot;: 51.4569397 },&#xA;    { &quot;lng&quot;: 0.18110999, &quot;lat&quot;: 51.43777084 },&#xA;    { &quot;lng&quot;: 0.160834, &quot;lat&quot;: 51.41722107 },&#xA;    { &quot;lng&quot;: 0.16627, &quot;lat&quot;: 51.39855576 },&#xA;    { &quot;lng&quot;: 0.169167, &quot;lat&quot;: 51.38861084 },&#xA;    { &quot;lng&quot;: 0.155278, &quot;lat&quot;: 51.35472107 },&#xA;    { &quot;lng&quot;: 0.13111, &quot;lat&quot;: 51.34111023 },&#xA;    { &quot;lng&quot;: 0.119999, &quot;lat&quot;: 51.32416916 },&#xA;    { &quot;lng&quot;: 0.096665, &quot;lat&quot;: 51.31110001 },&#xA;    { &quot;lng&quot;: 0.093889, &quot;lat&quot;: 51.28833008 },&#xA;    { &quot;lng&quot;: 0.06889, &quot;lat&quot;: 51.28248978 },&#xA;    { &quot;lng&quot;: 0.054444, &quot;lat&quot;: 51.28998947 },&#xA;    { &quot;lng&quot;: 0.055832, &quot;lat&quot;: 51.26665878 },&#xA;    { &quot;lng&quot;: 0.063889, &quot;lat&quot;: 51.24222183 },&#xA;    { &quot;lng&quot;: 0.044443, &quot;lat&quot;: 51.20999908 },&#xA;    { &quot;lng&quot;: 0.060279, &quot;lat&quot;: 51.1816597 },&#xA;    { &quot;lng&quot;: 0.056666, &quot;lat&quot;: 51.16804886 },&#xA;    { &quot;lng&quot;: 0.062781, &quot;lat&quot;: 51.13587952 },&#xA;    { &quot;lng&quot;: 0.096665, &quot;lat&quot;: 51.13666916 },&#xA;    { &quot;lng&quot;: 0.13249999, &quot;lat&quot;: 51.14416885 },&#xA;    { &quot;lng&quot;: 0.154384, &quot;lat&quot;: 51.13933945 },&#xA;    { &quot;lng&quot;: 0.15298761, &quot;lat&quot;: 51.13654709 },&#xA;    { &quot;lng&quot;: 0.18224943, &quot;lat&quot;: 51.11698532 },&#xA;    { &quot;lng&quot;: 0.221389, &quot;lat&quot;: 51.12194061 },&#xA;    { &quot;lng&quot;: 0.26694399, &quot;lat&quot;: 51.11027908 },&#xA;    { &quot;lng&quot;: 0.33138901, &quot;lat&quot;: 51.11999893 },&#xA;    { &quot;lng&quot;: 0.33527899, &quot;lat&quot;: 51.11777115 },&#xA;    { &quot;lng&quot;: 0.33555701, &quot;lat&quot;: 51.10694122 },&#xA;    { &quot;lng&quot;: 0.35916701, &quot;lat&quot;: 51.10139084 },&#xA;    { &quot;lng&quot;: 0.357499, &quot;lat&quot;: 51.08639145 },&#xA;    { &quot;lng&quot;: 0.38166699, &quot;lat&quot;: 51.08943939 },&#xA;    { &quot;lng&quot;: 0.40111199, &quot;lat&quot;: 51.0819397 },&#xA;    { &quot;lng&quot;: 0.41666701, &quot;lat&quot;: 51.06528091 },&#xA;    { &quot;lng&quot;: 0.474722, &quot;lat&quot;: 51.04777908 },&#xA;    { &quot;lng&quot;: 0.47972199, &quot;lat&quot;: 51.03026962 },&#xA;    { &quot;lng&quot;: 0.53694397, &quot;lat&quot;: 51.01832962 },&#xA;    { &quot;lng&quot;: 0.56972301, &quot;lat&quot;: 51 },&#xA;    { &quot;lng&quot;: 0.65805697, &quot;lat&quot;: 51.01388931 },&#xA;    { &quot;lng&quot;: 0.67527902, &quot;lat&quot;: 51.00971985 },&#xA;    { &quot;lng&quot;: 0.69583398, &quot;lat&quot;: 50.99554825 },&#xA;    { &quot;lng&quot;: 0.76333302, &quot;lat&quot;: 50.99721909 },&#xA;    { &quot;lng&quot;: 0.78666699, &quot;lat&quot;: 50.98833084 },&#xA;    { &quot;lng&quot;: 0.82111102, &quot;lat&quot;: 50.94416046 },&#xA;    { &quot;lng&quot;: 0.83722001, &quot;lat&quot;: 50.94332886 },&#xA;    { &quot;lng&quot;: 0.84916502, &quot;lat&quot;: 50.95055008 },&#xA;    { &quot;lng&quot;: 0.86666697, &quot;lat&quot;: 50.94388962 },&#xA;    { &quot;lng&quot;: 0.87277699, &quot;lat&quot;: 50.93082809 },&#xA;    { &quot;lng&quot;: 0.86771297, &quot;lat&quot;: 50.92124939 },&#xA;    { &quot;lng&quot;: 0.88527799, &quot;lat&quot;: 50.91958237 },&#xA;    { &quot;lng&quot;: 0.89083201, &quot;lat&quot;: 50.91764069 },&#xA;    { &quot;lng&quot;: 0.93805599, &quot;lat&quot;: 50.9118042 },&#xA;    { &quot;lng&quot;: 0.954723, &quot;lat&quot;: 50.91041565 },&#xA;    { &quot;lng&quot;: 0.973611, &quot;lat&quot;: 50.91041565 },&#xA;    { &quot;lng&quot;: 0.98194498, &quot;lat&quot;: 50.91402817 },&#xA;    { &quot;lng&quot;: 0.982499, &quot;lat&quot;: 50.92013931 },&#xA;    { &quot;lng&quot;: 0.97750098, &quot;lat&quot;: 50.93013763 },&#xA;    { &quot;lng&quot;: 0.97250098, &quot;lat&quot;: 50.93680573 },&#xA;    { &quot;lng&quot;: 0.97083199, &quot;lat&quot;: 50.94458389 },&#xA;    { &quot;lng&quot;: 0.96416599, &quot;lat&quot;: 50.96097183 },&#xA;    { &quot;lng&quot;: 0.96416599, &quot;lat&quot;: 50.96847153 },&#xA;    { &quot;lng&quot;: 0.97083199, &quot;lat&quot;: 50.98236084 },&#xA;    { &quot;lng&quot;: 0.97250098, &quot;lat&quot;: 50.99013901 },&#xA;    { &quot;lng&quot;: 0.97972298, &quot;lat&quot;: 51.0079155 },&#xA;    { &quot;lng&quot;: 0.995278, &quot;lat&quot;: 51.02347183 },&#xA;    { &quot;lng&quot;: 1.00749898, &quot;lat&quot;: 51.03236008 },&#xA;    { &quot;lng&quot;: 1.02805495, &quot;lat&quot;: 51.04291534 },&#xA;    { &quot;lng&quot;: 1.03861201, &quot;lat&quot;: 51.04986191 },&#xA;    { &quot;lng&quot;: 1.05527699, &quot;lat&quot;: 51.0573616 },&#xA;    { &quot;lng&quot;: 1.06583405, &quot;lat&quot;: 51.06097412 },&#xA;    { &quot;lng&quot;: 1.08583295, &quot;lat&quot;: 51.06597137 },&#xA;    { &quot;lng&quot;: 1.13027799, &quot;lat&quot;: 51.07180405 },&#xA;    { &quot;lng&quot;: 1.14527702, &quot;lat&quot;: 51.07291794 },&#xA;    { &quot;lng&quot;: 1.165833, &quot;lat&quot;: 51.07291794 },&#xA;    { &quot;lng&quot;: 1.178056, &quot;lat&quot;: 51.07569504 },&#xA;    { &quot;lng&quot;: 1.19138896, &quot;lat&quot;: 51.07652664 },&#xA;    { &quot;lng&quot;: 1.19138896, &quot;lat&quot;: 51.08180618 },&#xA;    { &quot;lng&quot;: 1.20139003, &quot;lat&quot;: 51.08402634 },&#xA;    { &quot;lng&quot;: 1.20194399, &quot;lat&quot;: 51.08930588 },&#xA;    { &quot;lng&quot;: 1.20694399, &quot;lat&quot;: 51.09319305 },&#xA;    { &quot;lng&quot;: 1.22527695, &quot;lat&quot;: 51.0993042 },&#xA;    { &quot;lng&quot;: 1.25138903, &quot;lat&quot;: 51.10041809 },&#xA;    { &quot;lng&quot;: 1.25750005, &quot;lat&quot;: 51.10180664 },&#xA;    { &quot;lng&quot;: 1.26916695, &quot;lat&quot;: 51.10152817 },&#xA;    { &quot;lng&quot;: 1.28694403, &quot;lat&quot;: 51.10736084 },&#xA;    { &quot;lng&quot;: 1.30194497, &quot;lat&quot;: 51.11347198 },&#xA;    { &quot;lng&quot;: 1.31361198, &quot;lat&quot;: 51.11375046 },&#xA;    { &quot;lng&quot;: 1.320279, &quot;lat&quot;: 51.11597061 },&#xA;    { &quot;lng&quot;: 1.31416595, &quot;lat&quot;: 51.11902618 },&#xA;    { &quot;lng&quot;: 1.31860995, &quot;lat&quot;: 51.12402725 },&#xA;    { &quot;lng&quot;: 1.32638896, &quot;lat&quot;: 51.12513733 },&#xA;    { &quot;lng&quot;: 1.33583403, &quot;lat&quot;: 51.12347412 },&#xA;    { &quot;lng&quot;: 1.34194398, &quot;lat&quot;: 51.12569427 },&#xA;    { &quot;lng&quot;: 1.34361005, &quot;lat&quot;: 51.13124847 },&#xA;    { &quot;lng&quot;: 1.35916698, &quot;lat&quot;: 51.13402939 },&#xA;    { &quot;lng&quot;: 1.37527895, &quot;lat&quot;: 51.13930511 },&#xA;    { &quot;lng&quot;: 1.38083303, &quot;lat&quot;: 51.14236069 },&#xA;    { &quot;lng&quot;: 1.38416696, &quot;lat&quot;: 51.14902878 },&#xA;    { &quot;lng&quot;: 1.39583397, &quot;lat&quot;: 51.15597153 },&#xA;    { &quot;lng&quot;: 1.40527701, &quot;lat&quot;: 51.17097092 },&#xA;    { &quot;lng&quot;: 1.40472305, &quot;lat&quot;: 51.17986298 },&#xA;    { &quot;lng&quot;: 1.40472305, &quot;lat&quot;: 51.23236084 },&#xA;    { &quot;lng&quot;: 1.39583397, &quot;lat&quot;: 51.25458145 },&#xA;    { &quot;lng&quot;: 1.39194405, &quot;lat&quot;: 51.25902939 },&#xA;    { &quot;lng&quot;: 1.38583302, &quot;lat&quot;: 51.27319336 },&#xA;    { &quot;lng&quot;: 1.38194501, &quot;lat&quot;: 51.2784729 },&#xA;    { &quot;lng&quot;: 1.37694502, &quot;lat&quot;: 51.28874969 },&#xA;    { &quot;lng&quot;: 1.37583196, &quot;lat&quot;: 51.29597092 },&#xA;    { &quot;lng&quot;: 1.37138796, &quot;lat&quot;: 51.31183624 }&#xA;  ],&#xA;  [&#xA;    { &quot;lng&quot;: 0.67972302, &quot;lat&quot;: 51.39736176 },&#xA;    { &quot;lng&quot;: 0.66805601, &quot;lat&quot;: 51.39319611 },&#xA;    { &quot;lng&quot;: 0.67194402, &quot;lat&quot;: 51.39014053 },&#xA;    { &quot;lng&quot;: 0.68305498, &quot;lat&quot;: 51.39541626 },&#xA;    { &quot;lng&quot;: 0.67972302, &quot;lat&quot;: 51.39736176 }&#xA;  ],&#xA;  [&#xA;    { &quot;lng&quot;: 0.94638902, &quot;lat&quot;: 51.37791824 },&#xA;    { &quot;lng&quot;: 0.945279, &quot;lat&quot;: 51.38124847 },&#xA;    { &quot;lng&quot;: 0.93583399, &quot;lat&quot;: 51.39263916 },&#xA;    { &quot;lng&quot;: 0.91027802, &quot;lat&quot;: 51.40680695 },&#xA;    { &quot;lng&quot;: 0.91027802, &quot;lat&quot;: 51.40847397 },&#xA;    { &quot;lng&quot;: 0.90194499, &quot;lat&quot;: 51.41708374 },&#xA;    { &quot;lng&quot;: 0.88527799, &quot;lat&quot;: 51.42124939 },&#xA;    { &quot;lng&quot;: 0.86805499, &quot;lat&quot;: 51.42097092 },&#xA;    { &quot;lng&quot;: 0.85972202, &quot;lat&quot;: 51.42291641 },&#xA;    { &quot;lng&quot;: 0.81916702, &quot;lat&quot;: 51.4268074 },&#xA;    { &quot;lng&quot;: 0.790277, &quot;lat&quot;: 51.4398613 },&#xA;    { &quot;lng&quot;: 0.77249998, &quot;lat&quot;: 51.4406929 },&#xA;    { &quot;lng&quot;: 0.76249897, &quot;lat&quot;: 51.44208527 },&#xA;    { &quot;lng&quot;: 0.7525, &quot;lat&quot;: 51.44486237 },&#xA;    { &quot;lng&quot;: 0.74472201, &quot;lat&quot;: 51.44847107 },&#xA;    { &quot;lng&quot;: 0.74083298, &quot;lat&quot;: 51.43680573 },&#xA;    { &quot;lng&quot;: 0.735277, &quot;lat&quot;: 51.42625046 },&#xA;    { &quot;lng&quot;: 0.74249899, &quot;lat&quot;: 51.41236115 },&#xA;    { &quot;lng&quot;: 0.73138899, &quot;lat&quot;: 51.4090271 },&#xA;    { &quot;lng&quot;: 0.72750002, &quot;lat&quot;: 51.40569305 },&#xA;    { &quot;lng&quot;: 0.73027903, &quot;lat&quot;: 51.40124893 },&#xA;    { &quot;lng&quot;: 0.74083298, &quot;lat&quot;: 51.39875031 },&#xA;    { &quot;lng&quot;: 0.75694501, &quot;lat&quot;: 51.38763809 },&#xA;    { &quot;lng&quot;: 0.76805502, &quot;lat&quot;: 51.38347244 },&#xA;    { &quot;lng&quot;: 0.764723, &quot;lat&quot;: 51.37569427 },&#xA;    { &quot;lng&quot;: 0.764723, &quot;lat&quot;: 51.37069321 },&#xA;    { &quot;lng&quot;: 0.77194399, &quot;lat&quot;: 51.36791611 },&#xA;    { &quot;lng&quot;: 0.78305697, &quot;lat&quot;: 51.36902618 },&#xA;    { &quot;lng&quot;: 0.78972298, &quot;lat&quot;: 51.37319565 },&#xA;    { &quot;lng&quot;: 0.79249901, &quot;lat&quot;: 51.37014008 },&#xA;    { &quot;lng&quot;: 0.79916602, &quot;lat&quot;: 51.36847305 },&#xA;    { &quot;lng&quot;: 0.80861002, &quot;lat&quot;: 51.3698616 },&#xA;    { &quot;lng&quot;: 0.82083303, &quot;lat&quot;: 51.36902618 },&#xA;    { &quot;lng&quot;: 0.83750099, &quot;lat&quot;: 51.36347198 },&#xA;    { &quot;lng&quot;: 0.86361003, &quot;lat&quot;: 51.36264038 },&#xA;    { &quot;lng&quot;: 0.894723, &quot;lat&quot;: 51.35402679 },&#xA;    { &quot;lng&quot;: 0.90805602, &quot;lat&quot;: 51.35486221 },&#xA;    { &quot;lng&quot;: 0.920277, &quot;lat&quot;: 51.35791779 },&#xA;    { &quot;lng&quot;: 0.93694401, &quot;lat&quot;: 51.36763763 },&#xA;    { &quot;lng&quot;: 0.94638902, &quot;lat&quot;: 51.3670845 },&#xA;    { &quot;lng&quot;: 0.95027697, &quot;lat&quot;: 51.3745842 },&#xA;    { &quot;lng&quot;: 0.94638902, &quot;lat&quot;: 51.37791824 }&#xA;  ],&#xA;  [&#xA;    { &quot;lng&quot;: 0.68472302, &quot;lat&quot;: 51.41263962 },&#xA;    { &quot;lng&quot;: 0.68138897, &quot;lat&quot;: 51.40763855 },&#xA;    { &quot;lng&quot;: 0.67583197, &quot;lat&quot;: 51.40652847 },&#xA;    { &quot;lng&quot;: 0.670834, &quot;lat&quot;: 51.40986252 },&#xA;    { &quot;lng&quot;: 0.66583401, &quot;lat&quot;: 51.4081955 },&#xA;    { &quot;lng&quot;: 0.67250001, &quot;lat&quot;: 51.40180588 },&#xA;    { &quot;lng&quot;: 0.67250001, &quot;lat&quot;: 51.39847183 },&#xA;    { &quot;lng&quot;: 0.68027699, &quot;lat&quot;: 51.39930725 },&#xA;    { &quot;lng&quot;: 0.691944, &quot;lat&quot;: 51.39625168 },&#xA;    { &quot;lng&quot;: 0.69583398, &quot;lat&quot;: 51.39847183 },&#xA;    { &quot;lng&quot;: 0.69138998, &quot;lat&quot;: 51.40291595 },&#xA;    { &quot;lng&quot;: 0.69138998, &quot;lat&quot;: 51.4118042 },&#xA;    { &quot;lng&quot;: 0.68472302, &quot;lat&quot;: 51.41263962 }&#xA;  ],&#xA;  [&#xA;    { &quot;lng&quot;: 0.67972302, &quot;lat&quot;: 51.42375183 },&#xA;    { &quot;lng&quot;: 0.66527802, &quot;lat&quot;: 51.42375183 },&#xA;    { &quot;lng&quot;: 0.67027801, &quot;lat&quot;: 51.41402817 },&#xA;    { &quot;lng&quot;: 0.67583197, &quot;lat&quot;: 51.41374969 },&#xA;    { &quot;lng&quot;: 0.67583197, &quot;lat&quot;: 51.41847229 },&#xA;    { &quot;lng&quot;: 0.68138897, &quot;lat&quot;: 51.41875076 },&#xA;    { &quot;lng&quot;: 0.68694299, &quot;lat&quot;: 51.41458511 },&#xA;    { &quot;lng&quot;: 0.68805498, &quot;lat&quot;: 51.42180634 },&#xA;    { &quot;lng&quot;: 0.67972302, &quot;lat&quot;: 51.42375183 }&#xA;  ],&#xA;  [&#xA;    { &quot;lng&quot;: 0.56583202, &quot;lat&quot;: 51.4081955 },&#xA;    { &quot;lng&quot;: 0.56083399, &quot;lat&quot;: 51.40652847 },&#xA;    { &quot;lng&quot;: 0.56138802, &quot;lat&quot;: 51.40180588 },&#xA;    { &quot;lng&quot;: 0.58249998, &quot;lat&quot;: 51.40263748 },&#xA;    { &quot;lng&quot;: 0.57972097, &quot;lat&quot;: 51.40652847 },&#xA;    { &quot;lng&quot;: 0.57305503, &quot;lat&quot;: 51.4054184 },&#xA;    { &quot;lng&quot;: 0.56583202, &quot;lat&quot;: 51.4081955 }&#xA;  ],&#xA;  [&#xA;    { &quot;lng&quot;: 0.60249901, &quot;lat&quot;: 51.40263748 },&#xA;    { &quot;lng&quot;: 0.59527898, &quot;lat&quot;: 51.40041733 },&#xA;    { &quot;lng&quot;: 0.596389, &quot;lat&quot;: 51.39625168 },&#xA;    { &quot;lng&quot;: 0.60416698, &quot;lat&quot;: 51.39374924 },&#xA;    { &quot;lng&quot;: 0.613612, &quot;lat&quot;: 51.39764023 },&#xA;    { &quot;lng&quot;: 0.61472201, &quot;lat&quot;: 51.40124893 },&#xA;    { &quot;lng&quot;: 0.60249901, &quot;lat&quot;: 51.40263748 }&#xA;  ],&#xA;  [&#xA;    { &quot;lng&quot;: 0.65250099, &quot;lat&quot;: 51.44652939 },&#xA;    { &quot;lng&quot;: 0.65472299, &quot;lat&quot;: 51.44874954 },&#xA;    { &quot;lng&quot;: 0.66194302, &quot;lat&quot;: 51.4481926 },&#xA;    { &quot;lng&quot;: 0.66305602, &quot;lat&quot;: 51.44374847 },&#xA;    { &quot;lng&quot;: 0.66972202, &quot;lat&quot;: 51.44291687 },&#xA;    { &quot;lng&quot;: 0.67472303, &quot;lat&quot;: 51.4323616 },&#xA;    { &quot;lng&quot;: 0.70361102, &quot;lat&quot;: 51.43319321 },&#xA;    { &quot;lng&quot;: 0.71527702, &quot;lat&quot;: 51.43597412 },&#xA;    { &quot;lng&quot;: 0.72361201, &quot;lat&quot;: 51.44319534 },&#xA;    { &quot;lng&quot;: 0.72305602, &quot;lat&quot;: 51.45458221 },&#xA;    { &quot;lng&quot;: 0.71861202, &quot;lat&quot;: 51.46125031 },&#xA;    { &quot;lng&quot;: 0.70083201, &quot;lat&quot;: 51.47263718 },&#xA;    { &quot;lng&quot;: 0.694722, &quot;lat&quot;: 51.47236252 },&#xA;    { &quot;lng&quot;: 0.68694299, &quot;lat&quot;: 51.4743042 },&#xA;    { &quot;lng&quot;: 0.66250002, &quot;lat&quot;: 51.47541809 },&#xA;    { &quot;lng&quot;: 0.660833, &quot;lat&quot;: 51.47763824 },&#xA;    { &quot;lng&quot;: 0.64805698, &quot;lat&quot;: 51.47680664 },&#xA;    { &quot;lng&quot;: 0.641388, &quot;lat&quot;: 51.47874832 },&#xA;    { &quot;lng&quot;: 0.62583297, &quot;lat&quot;: 51.47735977 },&#xA;    { &quot;lng&quot;: 0.61416602, &quot;lat&quot;: 51.47513962 },&#xA;    { &quot;lng&quot;: 0.61194402, &quot;lat&quot;: 51.47874832 },&#xA;    { &quot;lng&quot;: 0.58583403, &quot;lat&quot;: 51.48430634 },&#xA;    { &quot;lng&quot;: 0.57972097, &quot;lat&quot;: 51.48041534 },&#xA;    { &quot;lng&quot;: 0.57527697, &quot;lat&quot;: 51.48430634 },&#xA;    { &quot;lng&quot;: 0.55916601, &quot;lat&quot;: 51.48458481 },&#xA;    { &quot;lng&quot;: 0.54805499, &quot;lat&quot;: 51.48736191 },&#xA;    { &quot;lng&quot;: 0.52527702, &quot;lat&quot;: 51.48430634 },&#xA;    { &quot;lng&quot;: 0.51583302, &quot;lat&quot;: 51.48569489 },&#xA;    { &quot;lng&quot;: 0.49916801, &quot;lat&quot;: 51.48597336 },&#xA;    { &quot;lng&quot;: 0.481388, &quot;lat&quot;: 51.48736191 },&#xA;    { &quot;lng&quot;: 0.46805501, &quot;lat&quot;: 51.48263931 },&#xA;    { &quot;lng&quot;: 0.46694499, &quot;lat&quot;: 51.47930527 },&#xA;    { &quot;lng&quot;: 0.46138901, &quot;lat&quot;: 51.47513962 },&#xA;    { &quot;lng&quot;: 0.458056, &quot;lat&quot;: 51.46652603 },&#xA;    { &quot;lng&quot;: 0.454166, &quot;lat&quot;: 51.46541595 },&#xA;    { &quot;lng&quot;: 0.45750001, &quot;lat&quot;: 51.45986176 },&#xA;    { &quot;lng&quot;: 0.458056, &quot;lat&quot;: 51.45402908 },&#xA;    { &quot;lng&quot;: 0.45472199, &quot;lat&quot;: 51.45279694 },&#xA;    { &quot;lng&quot;: 0.48509443, &quot;lat&quot;: 51.42131805 },&#xA;    { &quot;lng&quot;: 0.46352649, &quot;lat&quot;: 51.38949585 },&#xA;    { &quot;lng&quot;: 0.42912629, &quot;lat&quot;: 51.36586761 },&#xA;    { &quot;lng&quot;: 0.40441132, &quot;lat&quot;: 51.34779739 },&#xA;    { &quot;lng&quot;: 0.45292687, &quot;lat&quot;: 51.33221054 },&#xA;    { &quot;lng&quot;: 0.44815803, &quot;lat&quot;: 51.3654213 },&#xA;    { &quot;lng&quot;: 0.51799393, &quot;lat&quot;: 51.34005356 },&#xA;    { &quot;lng&quot;: 0.53163612, &quot;lat&quot;: 51.32905197 },&#xA;    { &quot;lng&quot;: 0.6055187, &quot;lat&quot;: 51.32564545 },&#xA;    { &quot;lng&quot;: 0.62991339, &quot;lat&quot;: 51.35365677 },&#xA;    { &quot;lng&quot;: 0.6208595, &quot;lat&quot;: 51.38180542 },&#xA;    { &quot;lng&quot;: 0.61638802, &quot;lat&quot;: 51.37874985 },&#xA;    { &quot;lng&quot;: 0.605277, &quot;lat&quot;: 51.38152695 },&#xA;    { &quot;lng&quot;: 0.60805601, &quot;lat&quot;: 51.38597107 },&#xA;    { &quot;lng&quot;: 0.59805501, &quot;lat&quot;: 51.38986206 },&#xA;    { &quot;lng&quot;: 0.57694501, &quot;lat&quot;: 51.39097214 },&#xA;    { &quot;lng&quot;: 0.555278, &quot;lat&quot;: 51.39875031 },&#xA;    { &quot;lng&quot;: 0.55027699, &quot;lat&quot;: 51.40652847 },&#xA;    { &quot;lng&quot;: 0.54027897, &quot;lat&quot;: 51.41013718 },&#xA;    { &quot;lng&quot;: 0.554721, &quot;lat&quot;: 51.41236115 },&#xA;    { &quot;lng&quot;: 0.558056, &quot;lat&quot;: 51.40958405 },&#xA;    { &quot;lng&quot;: 0.57305503, &quot;lat&quot;: 51.41298294 },&#xA;    { &quot;lng&quot;: 0.57694501, &quot;lat&quot;: 51.41569519 },&#xA;    { &quot;lng&quot;: 0.59694499, &quot;lat&quot;: 51.41624832 },&#xA;    { &quot;lng&quot;: 0.60416698, &quot;lat&quot;: 51.41458511 },&#xA;    { &quot;lng&quot;: 0.62472302, &quot;lat&quot;: 51.42402649 },&#xA;    { &quot;lng&quot;: 0.62583297, &quot;lat&quot;: 51.4268074 },&#xA;    { &quot;lng&quot;: 0.61861002, &quot;lat&quot;: 51.42902756 },&#xA;    { &quot;lng&quot;: 0.62527901, &quot;lat&quot;: 51.43541718 },&#xA;    { &quot;lng&quot;: 0.63472098, &quot;lat&quot;: 51.43930435 },&#xA;    { &quot;lng&quot;: 0.64972299, &quot;lat&quot;: 51.43486023 },&#xA;    { &quot;lng&quot;: 0.65305501, &quot;lat&quot;: 51.4370842 },&#xA;    { &quot;lng&quot;: 0.660833, &quot;lat&quot;: 51.4370842 },&#xA;    { &quot;lng&quot;: 0.65749902, &quot;lat&quot;: 51.4426384 },&#xA;    { &quot;lng&quot;: 0.65250099, &quot;lat&quot;: 51.44652939 }&#xA;  ]&#xA;]&#xA;&#xA;</code></pre>&#xA;<hr />&#xA;",11672616,,5585371,2021-01-09 11:43:47,2021-01-09 11:43:47,GraphQL - Return a nested array,<javascript><reactjs><graphql>,0,7,0,2021-01-08 21:57:39
65644895,2,,65644752,-1,,"<p>Am not familiar with 'graphql-js', so not certain if this helps, but a plain java object can be enumerated as follows:</p>&#xA;<pre><code>var animal = {&#xA;    something: &quot;one&quot;,&#xA;    somethingelse: &quot;two&quot;,&#xA;    somethingother: &quot;three&quot;&#xA;}&#xA;&#xA;for (var propName in animal)&#xA;{&#xA;    console.log(propName, animal[propName]);&#xA;}&#xA;</code></pre>&#xA;<p>output:</p>&#xA;<pre><code>&quot;something&quot;, &quot;one&quot;&#xA;&quot;somethingelse&quot;, &quot;two&quot;&#xA;&quot;somethingother&quot;, &quot;three&quot;&#xA;</code></pre>&#xA;",2936204,,,,2021-01-09 16:23:40,"",,0,1,0,2021-01-09 16:23:40
65653301,2,,65652910,0,,"<p>You need to add GraphQL fragments in your queries to access the reference data. You have a poor example in <a href=""https://www.gatsbyjs.com/plugins/gatsby-source-contentful/#notes-on-contentful-content-models"" rel=""nofollow noreferrer"">Gatsby docs (<code>gatsby-source-contentful</code></a>) or in some other <a href=""https://github.com/gatsbyjs/gatsby/issues/11094"" rel=""nofollow noreferrer"">GitHub threads</a>.</p>&#xA;<p>The plugin will infer your schema references and will create the proper nodes, allowing you to use them in your queries to retrieve the needed data. You should make some trials and error in your localhost:8000/___graphql to ensure that your model is properly working, without it it's difficult to guess how the query should look like, but it should be something like this:</p>&#xA;<pre><code>  const data = useStaticQuery(graphql`&#xA;    query TestQuery {&#xA;      allContentfulPost {&#xA;        edges {&#xA;          node {&#xA;            categories {&#xA;                 title&#xA;                 slug&#xA;                 __typename&#xA;               ...on contentfulCategories{&#xA;                 #your category fields&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  `)&#xA;</code></pre>&#xA;<p>Further references/articles:</p>&#xA;<ul>&#xA;<li><a href=""https://medium.com/@Zepro/contentful-reference-fields-with-gatsby-js-graphql-9f14ed90bdf9"" rel=""nofollow noreferrer"">https://medium.com/@Zepro/contentful-reference-fields-with-gatsby-js-graphql-9f14ed90bdf9</a></li>&#xA;</ul>&#xA;",5585371,,,,2021-01-10 12:31:35,"",,0,3,0,2021-01-10 12:31:35
65666010,1,,,6,7840,<p>Been looking for this type or extension of setting.&#xA;Is there anyone?</p>&#xA;,14315323,,,,2021-04-17 10:14:26,GraphQL syntax highlighting in VSCode js file,<visual-studio-code><graphql>,1,0,0,2021-01-11 11:26:56
65671342,2,,65644162,1,,"<p>Okay, by <a href=""https://github.com/nestjs/graphql/blob/master/lib/interfaces/custom-scalar.interface.ts#L11"" rel=""nofollow noreferrer"">looking at Nest's <code>custom-scalar</code> interface</a> we can see that <code>parseLiteral</code> is of type <code>GraphQLScalarLiteralParser&lt;K&gt;</code> from <code>graphql</code>. <a href=""https://github.com/graphql/graphql-js/blob/master/src/type/definition.d.ts#L341"" rel=""nofollow noreferrer"">After digging around GraphQL-js's types</a> I found this definition where <code>ast</code> is also called a <code>ValueNode</code>. <a href=""https://github.com/graphql/graphql-js/blob/master/src/language/ast.d.ts#L310"" rel=""nofollow noreferrer"">A <code>ValueNode</code> is a union of other value nodes</a> that contains things like <code>NullValueNode</code> and <code>ObjectValueNode</code> which don't have <code>value</code> as properties, hence why you're getting that error.</p>&#xA;<p>All of that preface and linking to say: if you want to type it, use <code>import { ValueNode } from 'graphql';</code> and use the type <code>ValueNode</code>. By using <code>ast.Kind === Kind.INT</code> the <code>ast</code> will get casted to an <code>IntValueNode</code> which has the field <code>value</code> as a property. Should clear up any type issues you've got</p>&#xA;",9576186,,,,2021-01-11 17:03:01,"",,0,0,0,2021-01-11 17:03:01
65679071,1,,,1,2179,"<p>How do I filter a GraphQL query content using a specific value inside the content data. For example I have contents received as a result of the following GraphQL query.</p>&#xA;<blockquote>&#xA;<pre><code>query MyQuery {&#xA;  allPages {&#xA;    edges {&#xA;      node {&#xA;        content&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;</blockquote>&#xA;<p>From the above query I have received contents as follows. I'm trying to filter out the result using the &quot;Type&quot; Value (Veg/Fruit). How can I filter out the veg contents to display only Fruit content.</p>&#xA;<blockquote>&#xA;<pre><code>{&#xA;  &quot;node&quot;: {&#xA;    &quot;content&quot;: [&#xA;      {&#xA;        &quot;type&quot;: &quot;Fruit&quot;,&#xA;        &quot;value&quot;: {&#xA;          &quot;Text&quot;: &quot;Orange&quot;&#xA;        }&#xA;      },&#xA;      {&#xA;        &quot;type&quot;: &quot;Fruit&quot;,&#xA;        &quot;value&quot;: {&#xA;          &quot;Text&quot;: &quot;Apple&quot;&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;},&#xA;{&#xA;  &quot;node&quot;: {&#xA;    &quot;content&quot;: [&#xA;      { &#xA;        &quot;type&quot;: &quot;Veg&quot;,&#xA;        &quot;value&quot;: {&#xA;          &quot;Text&quot;: &quot;Broccoli&quot;&#xA;        }&#xA;      },&#xA;      {&#xA;        &quot;type&quot;: &quot;Veg&quot;,&#xA;        &quot;value&quot;: {&#xA;          &quot;Text&quot;: &quot;Lettuce&quot;&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;</blockquote>&#xA;",11496645,,14191957,2021-01-12 06:51:39,2021-01-12 07:27:27,How to filter a GraphQL query content using a specific value inside the content?,<graphql><gatsby>,1,0,0,2021-01-12 06:37:43
65680782,2,,60518509,0,,<p>Guessing the error is from nginx/apache or something similar</p>&#xA;,292291,,,,2021-01-12 09:01:30,"",,0,0,0,2021-01-12 09:01:30
65693844,1,65695202,,1,316,"<p>As per <a href=""https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html#more-recursive-type-aliases"" rel=""nofollow noreferrer"">TypeScript v3.7</a> recursive type aliases are valid to use.</p>&#xA;<pre><code>export type IntrospectionType = {&#xA;  readonly kind: 'OBJECT';&#xA;};&#xA;&#xA;export type IntrospectionListTypeRef&lt;&#xA;  T extends IntrospectionTypeRef = IntrospectionTypeRef&#xA;&gt; = {&#xA;  readonly kind: 'LIST';&#xA;  readonly ofType: T;&#xA;};&#xA;&#xA;export type IntrospectionNonNullTypeRef&lt;&#xA;  T extends IntrospectionTypeRef = IntrospectionTypeRef&#xA;&gt; = {&#xA;  readonly kind: 'NON_NULL';&#xA;  readonly ofType: T;&#xA;};&#xA;&#xA;export type IntrospectionTypeRef =&#xA;  | IntrospectionNamedTypeRef&#xA;  | IntrospectionListTypeRef&#xA;  | IntrospectionNonNullTypeRef&lt;&#xA;      IntrospectionNamedTypeRef | IntrospectionListTypeRef&#xA;    &gt;;&#xA;&#xA;export type IntrospectionNamedTypeRef&lt;&#xA;  T extends IntrospectionType = IntrospectionType&#xA;&gt; = {&#xA;  readonly kind: T['kind'];&#xA;};&#xA; &#xA;</code></pre>&#xA;<p>In this case <code>IntrospectionTypeRef</code> throws a circular reference error and hovering over <code>IntrospectionListTypeRef</code> or <code>IntrospectionNonNullTypeRef</code> says <code>T extends any = any</code> which it really shouldn't. Is there something wrong here?</p>&#xA;<p>Here is the link for <a href=""https://www.typescriptlang.org/play?ssl=12&amp;ssc=13&amp;pln=12&amp;pc=40#code/KYDwDg9gTgLgBDAnmYcCSA7GUIGcUDGMAlhBgCrKoC8cA3gFBxxTACGAJmQDaJwDWxDBwBccAOQB5AEIApAKIBhcuIDcDAL7qGoSLARV0WHPmBFSGADLFcMSigBKwAGYAeJnHJxQMYMNxG2HiEJGT2wE7OcLSYQabmYVSRDAB80fQerJw8fILCYuKWaADKKurMWVwYvHAQzuFi5OpaDDrg0PBIKIEmIRYAcmT9AK7c3OGR7sxePn4cAbG9ZqEUSS7pi8HLFhMuqemMFexVNXmiEv2S-QD6-QCqlpZqmcc5tfVUjc3auh0G3Zt4itdlFqB4AD49LYJDD9NgAW2AHBBEKhQIs1lsKOYkMBfSGQ1G4zWbg8zGYeO2QwRSJBcFxxmhK0xdhJZLgKR%207X0XVQlJhcMRyJJU083hAvn8aPxq26MUZ6MSKH2tEOLFe1VyQnO5AA2uIzuIALrfIA"" rel=""nofollow noreferrer"">TypeScript playground on v4.1.3</a></p>&#xA;<p>Note this code is from <code>graphql</code> we are currently in progress of <a href=""https://github.com/graphql/graphql-js/pull/2828"" rel=""nofollow noreferrer"">migrating Flow to TypeScript</a>.&#xA;Here is the <a href=""https://github.com/graphql/graphql-js/blob/661ff1a6b591eea1e7a7e7c9e6b8b2dcfabf3bd7/src/utilities/getIntrospectionQuery.js#L250-L255"" rel=""nofollow noreferrer"">Flow equivalent</a>.</p>&#xA;<p>Workarounds I found are:</p>&#xA;<ol>&#xA;<li>Pass in <code>any</code> to <code>IntrospectionListTypeRef</code>. But that really isn't an ideal solution. See <a href=""https://github.com/graphql/graphql-js/pull/2828/commits/bbb08daa66255f76150f10dba382726dce42b103#diff-a40a882d49fd0a594f68d551c4ba7001ce3ddcafbf0e97debd4f8c81775a69e1"" rel=""nofollow noreferrer"">GitHub diff</a></li>&#xA;<li>Remove the generic types for <code>IntrospectionListTypeRef</code> and <code>IntrospectionNonNullTypeRef</code> then it will work but the problem is there are a few more types this way we are trying to port which would mean we are duplicating types.</li>&#xA;</ol>&#xA;<p>Also filed an issue see <a href=""https://github.com/microsoft/TypeScript/issues/42308"" rel=""nofollow noreferrer"">TypeScript #42308</a></p>&#xA;",11321732,,11321732,2021-01-13 00:26:10,2021-01-13 03:19:13,Using recursive type aliases gives circular reference error,<typescript><graphql-js>,1,0,0,2021-01-13 00:04:17
65714939,2,,65666010,4,,"<p>I was looking something similar myself and found this:</p>&#xA;<p><a href=""https://marketplace.visualstudio.com/items?itemName=GraphQL.vscode-graphql"" rel=""nofollow noreferrer"">https://marketplace.visualstudio.com/items?itemName=GraphQL.vscode-graphql</a></p>&#xA;<p>It has syntax highlighting, validation and more:</p>&#xA;<blockquote>&#xA;<p>GraphQL extension for VSCode adds syntax highlighting, validation,&#xA;and language features like go to definition, hover information and&#xA;autocompletion for graphql projects. This extension also works with&#xA;queries annotated with gql tag.</p>&#xA;</blockquote>&#xA;",3725740,,,,2021-01-14 07:30:12,"",,0,1,0,2021-01-14 07:30:12
65721321,1,65721872,,-1,295,"<p>I believe it is possible to construct GraphQL query string dynamically with JS but I can't figure out the syntax.&#xA;I have a query in my Vue component which looks like this:</p>&#xA;<pre><code>  apollo: {&#xA;    metricsOee: {&#xA;      query: METRICS_OEE,&#xA;      loadingKey: 'loading',&#xA;      variables() {&#xA;        return {&#xA;          widgetType: this.data.name,&#xA;          page: 'dashboard',&#xA;          currentMetricDay: this.currentTime&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>I'd like not to pass currentTime from my components every time, but calculate it in the query itself. My attempt of doing it looks like this:</p>&#xA;<p>[![enter image description here][1]][1]</p>&#xA;<p>I understand that gql`` is not the same as JS interpolation, but this is to illustrate the problem<br />&#xA;[1]: <a href=""https://i.stack.imgur.com/qwgpw.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/qwgpw.png</a></p>&#xA;",12464900,,12464900,2021-03-26 14:44:52,2021-03-26 14:44:52,Constructing query string with gql-tag in Vue-apollo,<vue.js><graphql><vue-apollo><graphql-tag>,1,1,0,2021-01-14 14:53:54
65755903,1,,,0,311,"<p>I have a discount code which gives 40% discount when there are more than 50 items, but this also works if I have for example 49 items + 1 other item. I want to make the code work only for the single items that have a quantity over 50.</p>&#xA;<p>I assume this would be pretty straight forward if I could access this logic myself. Can someone point me into whereabouts could I find these codes for my discounts?</p>&#xA;<p>I would also want my discount code to give 40% for items over 50 quantity, and 50% for items over 200 quantity.</p>&#xA;<p>I have found something called &quot;Shopify GraphiQL App&quot; which, if I understand correctly, would help me to modify these discount codes internally.</p>&#xA;<p>Any help is appreciated.</p>&#xA;<p>Thanks</p>&#xA;<p><strong>EDIT</strong></p>&#xA;<p>I have been playing a bit with GraphiQL, and I have found the priceRule has a field called: allocationMethod (PriceRuleAllocationMethod).</p>&#xA;<p>The value of this is ACROSS. Would my discount code have the desired behaviour if I manage to change this to EACH?</p>&#xA;<p>How can I modify this, I haven't been able to find an example.</p>&#xA;<p><strong>EDIT 2</strong></p>&#xA;<p>I have tried the following, but for some reason the allocation method is not updated. Can someone explain to me what is happening here?&#xA;<a href=""https://i.stack.imgur.com/RDo2q.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RDo2q.png"" alt=""enter image description here"" /></a></p>&#xA;",14930014,,14930014,2021-01-17 01:08:49,2021-01-18 22:54:09,How to Modify Discount Code Logic Shopify,<graphql><shopify>,1,3,0,2021-01-16 23:48:10
65781302,1,,,0,78,"<p>I want to know what is the best approach for my problem. If I have 1 array of products that I have already fetched from my API, and now I want to get one single product. Should I filter the fetched data or should I make another API request by product Id?</p>&#xA;",15032469,,,,2021-01-18 22:11:57,Should I fetch by Id from API or filter fetched data,<reactjs><graphql>,2,0,0,2021-01-18 19:56:44
65783027,2,,65755903,0,,"<p>I think you can do this using Liquid in the theme.liquid file:</p>&#xA;<pre><code>{% assign num = 0 %} &#xA;{% for item in cart.items %} #finding how many items in cart&#xA;        {% capture temp %}{{ num | plus: item.quantity }}{% endcapture %}&#xA;    {% endif %}&#xA;    {% assign num = temp %}&#xA;{% endfor %}&#xA;&#xA;{% assign new_num = num | plus: 0 %} #converting string to integer&#xA;&#xA;{% if new_num &gt;= 50 %}&#xA;    {% assign price = checkout.subtotal_price %}&#xA;    {{ price | times: 0.40 }} #40 percent&#xA;    {{ checkout.subtotal_price | minus: price }}&#xA;{% endif %}&#xA;</code></pre>&#xA;<p>Edit: Maths was wrong in first edit, that should be correct now.</p>&#xA;",15015997,,15015997,2021-01-18 22:54:09,2021-01-18 22:54:09,"",,0,0,0,2021-01-18 22:40:02
65783038,2,,65737606,1,,<p>I just forgot the curly brackets when passing res and req throw the context</p>&#xA;,13188629,,,,2021-01-18 22:41:13,"",,0,0,0,2021-01-18 22:41:13
65784765,1,,,1,122,"<p>I'm new to Vue Apollo, and am getting stuck on what seems to be a common newbie challenge. I've checked out this post (<a href=""https://stackoverflow.com/questions/57468031/missing-attribute-on-result-vue-apollo-and-graphql"">missing attribute on result, Vue, Apollo and GraphQL</a>) which is the issue of making sure all the names match, but I don't seem to have the same issue (at least I don't think I do).</p>&#xA;<p>The issue is that it is just returning an empty &quot;note&quot; array. It's not getting the data from MongoDB, even through the exact same query works in the MongoDB sandbox.</p>&#xA;<p>Also, I haven't quite figured out how to insert the headers to get the data, so I'm just manually put that into the browser, which is working.</p>&#xA;<p>Here is the Vue Component Code:</p>&#xA;<pre><code>&lt;template&gt;&#xA;&#xA;  &lt;div&gt;&#xA;&#xA;    &lt;div&gt;&#xA;      &lt;h2&gt;Hey there.&lt;/h2&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;    &lt;div v-for=&quot;item in note&quot; v-bind:key=&quot;item._id&quot;&gt;&#xA;      &lt;h2&gt;{{item.title}}&lt;/h2&gt;&#xA;    &lt;/div&gt;&#xA;&#xA;  &lt;/div&gt;&#xA;&#xA;&lt;/template&gt;&#xA;&#xA;&lt;script&gt;&#xA;import gql from 'graphql-tag';&#xA;&#xA;export default {&#xA;  name: 'HelloWorld',&#xA;  apollo: {&#xA;    note: gql` query {&#xA;            note: elements {&#xA;              _id&#xA;              elements&#xA;              mode&#xA;              title&#xA;              type&#xA;              uri&#xA;              value&#xA;            }&#xA;          }`&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;&#xA;&lt;style&gt; &#xA;&lt;/style&gt;&#xA;</code></pre>&#xA;<p>And here are the dependences of the project:</p>&#xA;<pre><code>&quot;dependencies&quot;: {&#xA;    &quot;apollo-boost&quot;: &quot;^0.4.9&quot;,&#xA;    &quot;apollo-link&quot;: &quot;^1.2.14&quot;,&#xA;    &quot;core-js&quot;: &quot;^3.6.5&quot;,&#xA;    &quot;vue&quot;: &quot;^2.6.12&quot;,&#xA;    &quot;vue-apollo&quot;: &quot;^3.0.0-beta.11&quot;&#xA;  },&#xA;</code></pre>&#xA;<p>Is there anything I'm missing?</p>&#xA;<p>Thank you.</p>&#xA;",15033892,,,,2021-01-19 02:35:40,Vue Apollo: Missing attribute on result,<mongodb><vuejs2><vue-apollo>,0,0,0,2021-01-19 02:35:40
65793373,2,,57305760,2,,"<pre><code>'SCHEMA': 'addyourappnamehere.schema.schema',&#xA;</code></pre>&#xA;<p>faced the same error&#xA;this worked&#xA;i added the app name&#xA;eg:</p>&#xA;<pre><code>'SCHEMA': 'auth.schema.schema',&#xA;</code></pre>&#xA;",8524354,,,,2021-01-19 14:19:09,"",,0,0,0,2021-01-19 14:19:09
65814250,1,,,0,150,<p>I'd like to block the access to the GraphQL playground of my API. Basically what I wanna do is make the playground accessible only for a certain IP range and if someone tries to access it and it's out of that range throw a 404 error. Is it possible to do that? How could I do that?</p>&#xA;,13054525,,,,2021-01-20 17:09:12,Block GraphQL Playground access by ip,<graphql>,0,2,0,2021-01-20 17:09:12
65846374,2,,65801016,0,,"<p>Well, <code>console.log(result.addComment.commentEdge.node.id)</code> does the trick.</p>&#xA;",835098,,,,2021-01-22 13:44:41,"",,0,0,0,2021-01-22 13:44:41
65861041,1,65864224,,8,22078,"<p>Say I have the following json data:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>&quot;data&quot;: {&#xA;    &quot;continents&quot;: [&#xA;        {&#xA;            &quot;code&quot;: &quot;AF&quot;,&#xA;            &quot;name&quot;: &quot;Africa&quot;,&#xA;        },&#xA;        {&#xA;            &quot;code&quot;: &quot;EU&quot;,&#xA;            &quot;name&quot;: &quot;Europe&quot;&#xA;        },&#xA;        // ...&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>What would be the correct GraphQL query to fetch a list item with:  <code>code : &quot;AF&quot;</code>? In other words, how to produce the following result:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>&quot;data&quot;: {&#xA;    &quot;code&quot;: &quot;AF&quot;,&#xA;    &quot;name&quot;: &quot;Africa&quot;&#xA;}&#xA;</code></pre>&#xA;<hr />&#xA;<p>So far, I have:</p>&#xA;<pre><code>query {&#xA;  continents {&#xA;    code&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>but that simply returns the full array.</p>&#xA;<p>I've been running my examples on: <a href=""https://lucasconstantino.github.io/graphiql-online/"" rel=""noreferrer"">https://lucasconstantino.github.io/graphiql-online/</a></p>&#xA;",6367213,,6367213,2021-01-23 20:01:32,2021-01-25 00:10:49,How to filter list objects by field value in GraphQL?,<graphql>,2,0,0,2021-01-23 15:35:26
65861180,1,,,1,759,"<p>I'm integrating a Front End built in React with an Api built with GraphQL.</p>&#xA;<p>I have the following text in the Api documentation for a DateTime field that I need to send in a Mutation:</p>&#xA;<blockquote>&#xA;<p>timeRegistered: DateTime</p>&#xA;<p>A date-time string at UTC, such as&#xA;2007-12-03T10:15:30Z, compliant with the date-time format outlined in&#xA;section 5.6 of the RFC 3339 profile of the ISO 8601 standard for&#xA;representation of dates and times using the Gregorian calendar.</p>&#xA;<p>scalar DateTime</p>&#xA;</blockquote>&#xA;<p>I'm also using Material UI and Date-FNS to get the Date Time picker to work. I need to show to the user the date in Brazil format:</p>&#xA;<blockquote>&#xA;<p>janeiro 23º 12:35 p.m</p>&#xA;</blockquote>&#xA;<p>How do I format the Date to that DateTime specific format present in the Docs (RFC 3339)?  Because when sending the data to the api I need that format.</p>&#xA;",14908256,,14908256,2021-01-23 16:59:03,2021-01-24 01:22:58,How to format DateTime in DateFNS when using another format to show the Date?,<javascript><reactjs><datetime><graphql>,1,1,0,2021-01-23 15:50:05
65879703,2,,65847439,0,,"<p>I cannot find a &quot;good&quot; way to solve this so I just determine them by the content:&#xA;<a href=""https://github.com/VictorCheng114668/nestjs-helper/blob/main/graphqlModule-formatError-helper/exceptionsHandler.ts"" rel=""nofollow noreferrer"">https://github.com/VictorCheng114668/nestjs-helper/blob/main/graphqlModule-formatError-helper/exceptionsHandler.ts</a></p>&#xA;",10922841,,,,2021-01-25 06:06:14,"",,0,1,0,2021-01-25 06:06:14
65891688,1,66051458,,0,887,"<p>I'm using GithubAuthProvider with the added scope <code>repo</code> to get the user's access token which is later used to access the GitHub GraphQL API (the GitHub App has the permissions for Contents and Metadata set to Read-only).</p>&#xA;<p>The problem is when I'm trying to list private repos. The API returns an empty array as if I don't have the required permissions. Moreover, when I try to list branches of a user's repo it returns an error of type <code>FORBIDDEN</code>.</p>&#xA;<p>Query:</p>&#xA;<pre><code>query {&#xA;    viewer { &#xA;    repository(name: &quot;some-repo&quot;) {&#xA;      refs(refPrefix: &quot;refs/heads/&quot;, first: 10) {&#xA;        nodes {&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Response:</p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;        &quot;viewer&quot;: {&#xA;            &quot;repository&quot;: {&#xA;                &quot;refs&quot;: null&#xA;            }&#xA;        }&#xA;    },&#xA;    &quot;errors&quot;: [&#xA;        {&#xA;            &quot;type&quot;: &quot;FORBIDDEN&quot;,&#xA;            &quot;path&quot;: [&#xA;                &quot;viewer&quot;,&#xA;                &quot;repository&quot;,&#xA;                &quot;refs&quot;&#xA;            ],&#xA;            &quot;extensions&quot;: {&#xA;                &quot;saml_failure&quot;: false&#xA;            },&#xA;            &quot;locations&quot;: [&#xA;                {&#xA;                    &quot;line&quot;: 7,&#xA;                    &quot;column&quot;: 7&#xA;                }&#xA;            ],&#xA;            &quot;message&quot;: &quot;Resource not accessible by integration&quot;&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>What am I missing?</p>&#xA;",11972189,,,,2021-02-04 18:14:56,GitHub GraphQL API returning forbidden when using access token from GithubAuthProvider,<firebase><firebase-authentication><github-graphql><github-app>,2,0,0,2021-01-25 20:06:08
65904866,2,,63423578,4,,"<p><strong>Every</strong> object should return id, _id or alternatively a custom id field (<a href=""https://www.apollographql.com/docs/react/caching/cache-configuration"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/caching/cache-configuration</a>) for <strong>automatic merges to function</strong>.</p>&#xA;<pre><code>const cache = new InMemoryCache({&#xA;  typePolicies: {&#xA;    Product: {&#xA;      keyFields: [&quot;custom-id-field&quot;],&#xA;    },&#xA;  },&#xA;});&#xA;</code></pre>&#xA;<p><strong>(!)People often forget that cache operations require the same variables used for the initial query (!)</strong></p>&#xA;<p>Mutation Sample (adding a purchase):</p>&#xA;<pre><code>update(cache, { data: NewPurchase } }) =&gt; {&#xA;  let productCache = cache.readQuery({&#xA;    query: productQuery,&#xA;    variables: {&#xA;      id: productId&#xA;    }&#xA;  })&#xA; &#xA;  cache.writeQuery({&#xA;    query: productQuery,&#xA;    variables: { id: productId },&#xA;    data: {&#xA;      Product: {&#xA;        ...productCache.Product,&#xA;        purchases: productCache.Product.purchases.concat(NewPurchase)&#xA;      }&#xA;    }&#xA;  });&#xA; };&#xA;}&#xA;</code></pre>&#xA;<p>(Important: Each Purchase also requires it's own individual id that needs to be returned)</p>&#xA;",5179826,,1839439,2021-01-26 16:12:44,2021-01-26 16:12:44,"",,0,2,0,2021-01-26 16:07:09
65913159,2,,59705186,0,,"<p>You want to load your primary object, Product, with all of its related Money rows?</p>&#xA;<p>This should do it:</p>&#xA;<pre><code>products, err :=&#xA;    models.Products(&#xA;        qm.Load(models.ProductRels.ProductMoneys)&#xA;    ).All(context.Background(), db)&#xA;</code></pre>&#xA;<p>This will generate and execute two SQL queries. The first query should be</p>&#xA;<pre><code>SELECT * FROM &quot;products&quot;&#xA;</code></pre>&#xA;<p>and will retrieve all products. The second query should be similar to</p>&#xA;<pre><code>SELECT * FROM &quot;money&quot; WHERE (&quot;money&quot;.&quot;product_id&quot; IN ($1,$2,$3))&#xA;</code></pre>&#xA;<p>and will retrieve all monies for all products. (The exact content of the <code>IN</code> clause will depend on how many products are returned.)</p>&#xA;<p>Then you should be able to access the related rows as follows:</p>&#xA;<pre><code>products[0].R.ProductMoneys&#xA;</code></pre>&#xA;<p>NOTE: <code>ProductRels</code> and / or <code>ProductMoneys</code> might not be the exact names generated by SQLBoiler. I had to guess here. Make sure you check your generated code to get the correct names.</p>&#xA;",500312,,500312,2021-01-27 22:02:04,2021-01-27 22:02:04,"",,0,0,0,2021-01-27 05:06:02
65919457,2,,65813060,1,,"<p>extending earlier comment ...</p>&#xA;<blockquote>&#xA;<p>usually mutation resolver returns ... mutated type (but it's a graphql, you don't have to query for all fields/props; response will be filtered out; returning data = success) ... even deleted ones, surprise! :D</p>&#xA;</blockquote>&#xA;<p><strong>Returning mutated object type can be important for more advanced FE techniques</strong> like <a href=""https://www.apollographql.com/docs/react/performance/optimistic-ui/"" rel=""nofollow noreferrer"">optimistic response</a>. This <strong>helps you avoid refetching entire item list when you're updating one element</strong>.</p>&#xA;<h2>in this case</h2>&#xA;<p><strong>Types are not defined properly - this is your source of concerns</strong></p>&#xA;<p>Probably you should define it more like (input types are more manageable):</p>&#xA;<pre><code>type ContentType {&#xA;  id: ID!&#xA;  content: String!&#xA;  author: User!&#xA;  createdAt: Date!&#xA;  updatedAt: Date!&#xA;}&#xA;type ContentCreateInputType {&#xA;  name: String!&#xA;  value: String!&#xA;}     &#xA;type ContentUpdateInputType {&#xA;  id: ID!&#xA;  name: String!&#xA;  value: String!&#xA;}&#xA;&#xA;type Stats {&#xA;  nModified: Int,&#xA;  nRemoved: Int,&#xA;  nInserted: Int,&#xA;  n: Int&#xA;  ok: Int&#xA;}    &#xA;type ContentUpdatePayload {&#xA;  content: ContentType&#xA;  stats: Stats&#xA;}    &#xA;&#xA;type Mutation {&#xA;  updateContent(input: ContentUpdateInputType!): ContentUpdatePayload&#xA;}    &#xA;</code></pre>&#xA;<p>This is a bit similiar idea to popular <a href=""https://www.apollographql.com/docs/react/pagination/cursor-based/#relay-style-cursor-pagination"" rel=""nofollow noreferrer"">relay style cursor pagination</a>.</p>&#xA;<p>Your mutation can be:</p>&#xA;<pre><code>mutation updateContent($input: ContentUpdateInputType) {&#xA;  updateContent(input: $input) {&#xA;    stats {&#xA;      nModified&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>... in this case your resolver must return only stats object, no <code>findOne</code> required ... but in practice it should return at least:</p>&#xA;<pre><code>{ &#xA;  content: {&#xA;    id&#xA;  }&#xA;  stats: {&#xA;    nModified&#xA;    nRemoved&#xA;    // etc.&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>... because your mutation can be also:</p>&#xA;<pre><code>mutation updateContent($input: ContentUpdateInputType) {&#xA;  updateContent(input: $input) {&#xA;    content {&#xA;      id&#xA;      content&#xA;      author {&#xA;        id&#xA;        name&#xA;      }&#xA;    }&#xA;    stats {&#xA;      nModified&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><strong>Returning <code>{ content: { id } stats: {....} }</code> (js object, the minimal mutation response) is neccessary (very important) to resolve entire query</strong>. Server resolver will know it has not complete <code>ContentType</code> object (mutation <code>ContentUpdatePayload</code> element) and it will call <code>ContentType</code> resolver (with known/already resolved <code>id</code> as arg) to populate it (of course it will call <code>Author</code> type resolver, too).</p>&#xA;<p>As you can notice/see above, returning only a <code>content { id }</code> (from this mutation, part of <code>ContentType</code>) can be a part of the optimization - <strong>no overfetching</strong> - because <code>id</code> can be taken from mutation args and the entire content is resolved/read from DB/service only when required.</p>&#xA;<h2>conclusion</h2>&#xA;<p><strong>Returning not typed responses simply doesn't allow this kind of 'GraphQL magic'.</strong></p>&#xA;",6124657,,,,2021-01-27 12:44:20,"",,0,0,0,2021-01-27 12:44:20
65945490,2,,65945435,4,,"<p>You need to add the GraphQL type <code>String</code>. Therefore change <code>[]</code> to <code>[String]</code>, an array of strings. You might also want to set <code>product</code> optional (with <code>?</code>) since it is <code>nullable</code>.</p>&#xA;<pre><code>@Field(type =&gt; [String], { nullable: true })&#xA;product?: string[];&#xA;</code></pre>&#xA;",2436655,,2436655,2021-01-28 21:44:25,2021-01-28 21:44:25,"",,0,0,0,2021-01-28 21:29:51
65948191,1,,,0,31,<p>Is there a known way to generate all possible query variants based on a Django Graphql based project source code?</p>&#xA;<p>I am evaluating a product with limited documentation and I am wondering if there is something that could help me to automate the discovery process.</p>&#xA;,4341581,,4341581,2021-01-29 12:36:55,2021-01-29 12:36:55,Python Django Graphql all possible query variant generation,<python><django><graphql>,0,2,0,2021-01-29 02:59:06
65973596,1,,,1,1559,<p>I need to fetch all products using Shopify API by collection id...</p>&#xA;<p>I tried:</p>&#xA;<pre><code>mutation {&#xA;  bulkOperationRunQuery(&#xA;    query:&quot;&quot;&quot;&#xA;    {&#xA;      products(query: &quot;tag:women OR collection:172173852808&quot;) {&#xA;        edges{&#xA;      node{&#xA;        id&#xA;        tags&#xA;        &#xA;        images {&#xA;          edges {&#xA;            node {&#xA;              id&#xA;              originalSrc&#xA;            }&#xA;          }&#xA;        }&#xA;        variants(first:10) {&#xA;          edges{&#xA;            node{&#xA;              id&#xA;              price&#xA;              compareAtPrice&#xA;              image{&#xA;                originalSrc&#xA;              }&#xA;              inventoryQuantity&#xA;              selectedOptions{&#xA;                name&#xA;                value&#xA;              }&#xA;              sku&#xA;              title&#xA;              weight&#xA;              weightUnit  &#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;      }&#xA;    }&#xA;    &quot;&quot;&quot;&#xA;  ) {&#xA;    bulkOperation {&#xA;      id&#xA;      status&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Result Shopify gives me is just product with tags: women and there are no products from collection id 172173852808</p>&#xA;<p>How to run a query to get products from one or more specific connections?</p>&#xA;,6310798,,,,2021-01-31 22:45:32,Shopify API - get bulk products by collection id using graphQL,<graphql><shopify><bulk><shopify-api>,1,0,0,2021-01-30 22:04:33
65985047,2,,65973596,1,,"<p>If every product in that collection has the tag woman, just change your query to bulk download the collection and its products. Also, before you go and do a bulk query, verify it works without being a bulk query. That usually exposes the problems with the setup.</p>&#xA;",210841,,,,2021-01-31 22:45:32,"",,0,4,0,2021-01-31 22:45:32
66029495,1,,,1,541,"<p>I'm trying to create a query string in GraphQL (provided by Wiki JS) where I can retrieve page data. I'm hoping to be able to retrieve the first image on the page, but I cannot seem to find this anywhere in the documentation.</p>&#xA;<pre><code>query {&#xA;  pages {&#xA;    list {&#xA;       id&#xA;       title&#xA;       description&#xA;       path&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Does anyone know a way to retrieve the url of the first image on a Wiki JS page?</p>&#xA;",1732358,,,,2022-05-19 01:37:31,WikiJS API retrieve image from page,<javascript><json><graphql>,1,0,0,2021-02-03 14:26:17
66035220,2,,66034621,0,,"<p>One option that we came up with is to add the order to the form table.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>keystone.createList(&#xA;    'forms',&#xA;    {&#xA;      fields: {&#xA;        name: {&#xA;          type: Text,&#xA;          isRequired: true,&#xA;        },&#xA;        buttonOrder: {&#xA;          type: Text,&#xA;        },&#xA;        buttons: {&#xA;          type: Relationship,&#xA;          ref: 'buttons.attached_forms',&#xA;          many: true,&#xA;        },&#xA;      },&#xA;    }&#xA;);&#xA;</code></pre>&#xA;<p>This new field <code>buttonOrder</code> could contain a string representation of the order of the button Ids, like in a JSON stringified array.&#xA;The main issue with this is that it will be difficult to keep this field in-sync with the actual linked buttons.</p>&#xA;",921266,,,,2021-02-03 20:31:34,"",,0,0,0,2021-02-03 20:31:34
66036395,1,66036887,,2,1441,"<p>So I'm trying to construct a mutation for inserting/updating a record for a &quot;Person&quot; along with it's address, email, telephones information into multiple tables, using variables.</p>&#xA;<pre><code>mutation insertPerson ($address: [adr_insert_input!]!, $emails: [emails_insert_input!]!) {&#xA;  insert_info(objects: [{&#xA;    f_name: &quot;User1&quot;,&#xA;    l_name: &quot;Test&quot;&#xA;    address: {&#xA;        data: $address,&#xA;        on_conflict: {&#xA;          constraint: person_id_pk,&#xA;          update_column: [add_text_line1, zip_code]&#xA;        }&#xA;    },&#xA;    emails: {&#xA;      data: $emails,&#xA;      on_conflict: {&#xA;          constraint: person_id_pk,&#xA;          update_column: [email_text]&#xA;        }&#xA;    }&#xA;  }], on_conflict: {&#xA;    constraints: person_pk,&#xA;    update_columns: [f_name, l_name]&#xA;  }) {&#xA;   affected_rows&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and my variables are set-up as follows...</p>&#xA;<pre><code>{&#xA;  &quot;address&quot;: [{&#xA;    &quot;add_text_line1&quot;: &quot;123 Main Street&quot;,&#xA;    &quot;zip_code&quot;: 50501&#xA;  }],&#xA;  &quot;emails&quot;: [{&#xA;     &quot;email_text&quot;: &quot;FirstLastName@email.com&quot;&#xA;  }]&#xA;}&#xA;</code></pre>&#xA;<p>This <strong>works</strong> as expected for me (with multiple values in emails array too), but I need to move the f_name &amp; l_name values (whole Person object) into a variable as well. How do I achieve that?</p>&#xA;<p>I tried the below mutation this way, but this resulted into two separate inserts &amp; empty values being passed...</p>&#xA;<pre><code>mutation insertPerson ($person: person_insert_input!, $address: [adr_insert_input!]!){&#xA;  insertData(objects: [&#xA;    $person,&#xA;    {&#xA;      address: { data: $address }&#xA;    }&#xA;  ]) { affected_rows }&#xA;}&#xA;</code></pre>&#xA;<p>This resulted to a two separate insertions... <strong>First</strong> person with empty address, <strong>then</strong> empty person with address.</p>&#xA;<p>How do I achieve the first mutation's result, while using Person Info as part of variables <strong>NOT</strong> hard-code it into the query itself?</p>&#xA;<p>Thank you!</p>&#xA;",11029787,,,,2021-02-03 22:50:27,Hasura GraphQL UPSERT mutation for nested objects,<graphql><hasura>,1,0,0,2021-02-03 22:04:05
66036887,2,,66036395,2,,"<p>You will need to pass the insert_info objects as the variables</p>&#xA;<pre class=""lang-js prettyprint-override""><code>mutation insertPerson ($info_objects: [insert_info_insert_input!]!) {&#xA;  insert_info(objects: $info_objects, on_conflict: {&#xA;    constraints: person_pk,&#xA;    update_columns: [f_name, l_name]&#xA;  }) {&#xA;   affected_rows&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And your variables will be an array of the info_objects</p>&#xA;<pre><code>{info_objects: [{&#xA;    f_name: &quot;User1&quot;,&#xA;    l_name: &quot;Test&quot;&#xA;    address:  {data: [{&#xA;    &quot;add_text_line1&quot;: &quot;123 Main Street&quot;,&#xA;    &quot;zip_code&quot;: 50501&#xA;  }]},  &#xA;        on_conflict: {&#xA;          constraint: person_id_pk,&#xA;          update_column: [add_text_line1, zip_code]&#xA;        }&#xA;    },&#xA;    emails: {&#xA;      data: [{&#xA;     email_text: &quot;FirstLastName@email.com&quot;&#xA;  }],&#xA;      on_conflict: {&#xA;          constraint: person_id_pk,&#xA;          update_column: [email_text]&#xA;        }&#xA;    }&#xA;  }]}&#xA;</code></pre>&#xA;",2297718,,,,2021-02-03 22:50:27,"",,0,1,0,2021-02-03 22:50:27
66041199,1,,,0,132,"<pre><code>const newProduct = cache.readFragment({&#xA;    fragment: ProductFragment,&#xA;    id: `Product:${product._id}`,&#xA;});&#xA;</code></pre>&#xA;<p>where,</p>&#xA;<pre><code>export const ProductFragment = gql`&#xA;  fragment ProductBody on Product {&#xA;    _id&#xA;    alias&#xA;    oldPrice&#xA;    price&#xA;    campaignPriceTemp&#xA;    category {&#xA;      _id&#xA;      alias&#xA;      description&#xA;      metaDescription&#xA;      name&#xA;      slug&#xA;      image&#xA;      position&#xA;      status&#xA;    }&#xA;    description&#xA;    ean&#xA;    name&#xA;    slug&#xA;    stock&#xA;    status&#xA;    shop {&#xA;      _id&#xA;      slug&#xA;      basicInfo {&#xA;        shopName&#xA;        logo&#xA;        bannar&#xA;      }&#xA;      flagship&#xA;      prime&#xA;      status&#xA;    }&#xA;    reviews {&#xA;      rating&#xA;    }&#xA;    allowedPaymentList&#xA;    deliveryCharge {&#xA;      _id&#xA;      name&#xA;      price&#xA;    }&#xA;    deliveryTime {&#xA;      _id&#xA;      name&#xA;    }&#xA;    thumnails {&#xA;      approvalStatus&#xA;      image&#xA;      color&#xA;    }&#xA;    metaKeyWords&#xA;    rewardPoint&#xA;    rewardPrice&#xA;    shortDescription&#xA;    sku&#xA;    variantOptions {&#xA;      _id&#xA;      displayName&#xA;      name&#xA;      values {&#xA;        displayName&#xA;        value&#xA;      }&#xA;    }&#xA;    variants {&#xA;      _id&#xA;      price&#xA;      oldPrice&#xA;      stock&#xA;      # variantOptions {&#xA;      #   optionId&#xA;      #   val&#xA;      # }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>giving Missing field __typename in product body {} and also all subfields section I'm using here. Previously I used a different product fragment and now I'm using new one because I'm using another data source from rest api.</p>&#xA;<p>I'm getting newProduct null. Why is this, I'm confused.&#xA;But If I use another product fragment with different fields, I get appropriate newProduct.</p>&#xA;",11794577,,11794577,2021-02-04 07:54:04,2021-02-04 07:54:04,How to use readFragment method of cache in graphql?,<javascript><graphql><apollo-client>,0,5,0,2021-02-04 07:38:23
66043697,2,,53897364,0,,"<p>In my case this error message was caused by a stupid error, so probably my story will be useful for someone:</p>&#xA;<p>Instead of having JSON value with <code>{&quot;query&quot;:&quot;graphqlQueryHere ...&quot;}</code> I just posted the plain graphQL query instead of JSON. Please take a look that you don't do the same.</p>&#xA;",1759063,,,,2021-02-04 10:24:26,"",,0,0,0,2021-02-04 10:24:26
66053916,2,,66050614,0,,"<ul>&#xA;<li><p><strong>there is no need to duplicate data in state or other vars</strong>&#xA;... you can simply 'alias' it to shorten code like <code>const items = allFooter.allDataJson.edges;</code>, <code>items.map(...</code></p>&#xA;<pre><code> {items.map( element =&gt; { element.node.id  // array element&#xA; {items.map( {node} =&gt; { node.id   // destructured 'node' prop from array element&#xA; {items.map( {node:footerItem} =&gt; { footerItem.id   // aliased/renamed destructured array element&#xA;</code></pre>&#xA;</li>&#xA;<li><p>defining 'hook' <code>UseFooterDataQuery</code> in external file is [almost] useless ... no custom logic, no reason ... <strong>define only graphql queries in separate (<code>'footer.graphql'</code>) files</strong> (search for importing gql files)</p>&#xA;</li>&#xA;<li><p>you should use <code>map</code> inside <code>map</code>, outer for node <code>id</code> and <code>title</code>, inner for <code>url</code>:</p>&#xA;</li>&#xA;</ul>&#xA;<p>.</p>&#xA;<pre><code>const allFooterData = useStaticQuery( FOOTER_QUERY );&#xA;const items = allFooter.allDataJson.edges;&#xA;&#xA;...&#xA;   {items.map( {node} =&gt; {&#xA;      return (&#xA;        &lt;div key={node.id}&gt;&#xA;          &lt;h3&gt;{node.title}&lt;/h3&gt;&#xA;            {node.url.map( (data) =&gt; {&#xA;              return (&#xA;                &lt;ul key={data.id}&gt;&#xA;                  &lt;li&gt;&#xA;                    &lt;Link to={`/${data.linkUrl}`}&gt;{data.linkName}&lt;/Link&gt;&#xA;                  &lt;/li&gt;&#xA;                &lt;/ul&gt;&#xA;</code></pre>&#xA;",6124657,,6124657,2021-02-05 13:51:35,2021-02-05 13:51:35,"",,0,0,0,2021-02-04 21:16:55
66418789,2,,66416549,2,,"<p>options expects an array, you're passing a string.&#xA;<code>Object is of type 'unknown'</code> is a generic TS error message. I think if you typed it like this:</p>&#xA;<pre><code> getOptionLabel={(option: {name: string}) =&gt; option.name}&#xA;</code></pre>&#xA;<p>it should stop.</p>&#xA;",671457,,,,2021-03-01 08:27:27,"",,0,2,0,2021-03-01 08:27:27
66435794,2,,66433132,9,,"<p>First, create <code>.graphqlconfig</code> file with the following content:</p>&#xA;<pre><code>{&#xA;  &quot;schemaPath&quot;: &quot;schema.graphql&quot;,&#xA;  &quot;includes&quot;: [&quot;*&quot;],&#xA;  &quot;extensions&quot;: {&#xA;    &quot;endpoints&quot;: {}&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Then, create <code>graphql-directives.js</code> file with the following content:</p>&#xA;<pre><code>import gql from 'graphql-tag';&#xA;&#xA;const clientSchemaExtensions = gql`&#xA;  directive @model on OBJECT&#xA;  scalar AWSDateTime&#xA;`;&#xA;</code></pre>&#xA;<p>After that, there are no syntax errors anymore!</p>&#xA;<p><a href=""https://i.stack.imgur.com/yB81G.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/yB81G.png"" alt=""enter image description here"" /></a></p>&#xA;<p>This answer was adapted <a href=""https://github.com/jimkyndemeyer/graphql-config-examples/tree/master/extend-client-fields-and-directives"" rel=""noreferrer"">from this repo</a>.</p>&#xA;",2727317,,,,2021-03-02 08:28:50,"",,0,1,0,2021-03-02 08:28:50
66462208,2,,66460388,2,,"<p>You are getting errors because you deleted the <code>/content</code> folder, so all references and queries that point to that content, are now breaking the code because can't fetch what you are querying.</p>&#xA;<p>You have references to the missing content in your <a href=""https://github.com/agneym/gatsby-blog-starter/blob/master/gatsby-node.js"" rel=""nofollow noreferrer""><code>gatsby-node.js</code></a> and in your <a href=""https://github.com/agneym/gatsby-blog-starter/blob/master/src/templates/blog-post.js"" rel=""nofollow noreferrer"">blog-post.js</a>.</p>&#xA;<p>The solutions:</p>&#xA;<ul>&#xA;<li>Restore the dummy initial content to avoid the code-breaking queries and replace it as soon as you add your new posts</li>&#xA;<li>Comment all the queries and references to the query objects (for example in your <a href=""https://github.com/agneym/gatsby-blog-starter/blob/master/src/templates/blog-post.js#L11"" rel=""nofollow noreferrer""><code>blog-post.js</code></a>). This is tedious and not recommended, since you will need to uncomment/restore it as soon as you add new content.</li>&#xA;</ul>&#xA;<p>P.S: a query reference to a content may be something like:</p>&#xA;<pre><code>    allMarkdownRemark(&#xA;      sort: { fields: [frontmatter___date], order: DESC }&#xA;      limit: 1000&#xA;    ) {&#xA;      edges {&#xA;        node {&#xA;          fields {&#xA;            slug&#xA;          }&#xA;          frontmatter {&#xA;            title&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;",5585371,,5585371,2021-03-03 19:03:12,2021-03-03 19:03:12,"",,0,0,0,2021-03-03 17:44:03
66466099,1,,,0,448,"<p>I'm trying to get started with Graphql and Shopify. I am getting the following error:</p>&#xA;<pre><code>Client for API version 2020-01 does not exist because no schema file exists at `shopify_graphql_schemas/2020-01.json`. (ShopifyAPI::GraphQL::InvalidClient)&#xA;</code></pre>&#xA;<p>Even though I've run this rake task:</p>&#xA;<pre><code>rake shopify_api:graphql:dump SHOP_DOMAIN=&quot;shipping-inventory-sync.myshopify.com&quot; ACCESS_TOKEN=&quot;the_right_token&quot; API_VERSION=2020-01&#xA;</code></pre>&#xA;<p>And I can see the file here: <a href=""https://nimb.ws/ypDVAK"" rel=""nofollow noreferrer"">https://nimb.ws/ypDVAK</a> and when I run <code>ShopifyAPI::GraphQL.schema_location</code> in the console I get <code>#&lt;Pathname:/home/shipping-new/db/shopify_graphql_schemas&gt;</code></p>&#xA;<p>I am only trying to do the following to get the shop name as a test:</p>&#xA;<pre><code>sesh = ShopifyAPI::Session.new(domain: &quot;shipping-inventory-sync.myshopify.com&quot;, token: 'xx', api_version: '2020-01')&#xA;ShopifyAPI::Base.activate_session(sesh)&#xA;&#xA;client = ShopifyAPI::GraphQL.client&#xA;&#xA;SHOP_NAME_QUERY = client.parse &lt;&lt;-'GRAPHQL'&#xA;  {&#xA;    shop {&#xA;      name&#xA;    }&#xA;  }&#xA;GRAPHQL&#xA;&#xA;result = client.query(SHOP_NAME_QUERY)&#xA;pp result.data.shop.name&#xA;</code></pre>&#xA;<p>My Shopify Initializer config file also has the same <code>api_version</code> here:</p>&#xA;<pre><code>config.api_version = &quot;2021-01&quot;&#xA;</code></pre>&#xA;<p>How can I download the schema in order to use GraphQL for Shopify?</p>&#xA;",4386626,,,,2021-03-24 12:21:00,Shopify GraphQL - no schema file exists even though it does,<graphql><shopify><shopify-api>,1,0,0,2021-03-03 22:47:26
66489235,1,,,-2,128,"<p>I have the following GraphQL error:&#xA;message&quot;: &quot;Field JobInput.salarys of required type Int! was not provided.&quot;,</p>&#xA;<p>I have declared three variables of mutation and i´m not sure of the &quot; salarys: number;&quot; right?</p>&#xA;",14393219,,14393219,2021-03-05 13:45:06,2021-03-05 13:45:06,"Field of required type Int! was not provided."",",<node.js><typescript><sqlite><orm><graphql>,1,0,0,2021-03-05 08:35:29
66500956,1,,,0,680,"<p>Problem: Trying to query for products in user's basket breaks with the following error:</p>&#xA;<p>&quot;ID cannot represent value: &lt;Buffer 60 41 24 0c ae a8 b6 35 ac 33 5a cd&gt;&quot;</p>&#xA;<p>my query:</p>&#xA;<pre><code>query getBasket{&#xA;  getBasket {&#xA;    id&#xA;    quantity&#xA;    createdAt&#xA;    product{&#xA;      id         &lt;--- produces error&#xA;      title      &lt;--- removing ID, product.title becomes null&#xA;      stock      &lt;--- becomes null if ID is removed from query&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>If I omit the product field, everything works as expected but I need to be able to display the product information for the user's basket. When I try retrieve the product information I get the error.</p>&#xA;<p>My GraphQL definitions are the following (I am new to this), there should be a one to many relationship between User and Item (which represents the items in their basket):</p>&#xA;<pre><code>module.exports = gql(`&#xA;&#xA;    enum Role {&#xA;      ADMIN&#xA;      USER&#xA;    }&#xA;    &#xA;    type Item {&#xA;      id: ID!&#xA;      product: Product!&#xA;      quantity: Int!&#xA;      createdAt: String!&#xA;    }&#xA;&#xA;    type User  {&#xA;      id: ID!&#xA;      email: String!&#xA;      token: String!&#xA;      roles: [Role]!&#xA;      basket: [Item]!&#xA;      createdAt: String!&#xA;    } &#xA;    &#xA;    type Product {&#xA;      id: ID!&#xA;      title: String!&#xA;      description: String!&#xA;      stock: Boolean&#xA;      price: String&#xA;    }&#xA;&#xA;    input RegisterInput {&#xA;      email: String!&#xA;      password: String!&#xA;      confirmPassword: String!&#xA;    }&#xA;&#xA;    type Query {&#xA;      getProducts: [Product]&#xA;      getProduct(productId: ID!): Product&#xA;      getBasket: [Item]&#xA;      getUsers: [User]&#xA;    }&#xA;&#xA;    type Mutation {&#xA;      register(registerInput: RegisterInput): User!&#xA;      login(email: String!, password: String!): User!&#xA;      createProduct(title: String!, description: String, stock: Boolean, price: String!): Product!&#xA;      deleteProduct(productId: ID!): String!    &#xA;      addToBasket(productId: String!, quantity: String!): User!&#xA;      deleteFromBasket(productId: String!): User!&#xA;    }&#xA;`);&#xA;</code></pre>&#xA;<p>I am able to add products into the basket, it's just when I try to retrieve the user's basket I get the error.</p>&#xA;<p>Click this to see how my data looks like on MongoDB atlas: <a href=""https://i.stack.imgur.com/RKcnP.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/RKcnP.png</a></p>&#xA;<p>There's only a couple of posts about the error I tried converting the string ID to object ID. It could be a problem with GraphQL? I'm unsure, perhaps I need to redo my GraphQL Definitions.</p>&#xA;<p>User Schema:</p>&#xA;<pre><code>const userSchema = new Schema({&#xA;    email: String,&#xA;    password: String,&#xA;    roles: [String],&#xA;    basket: [&#xA;        {&#xA;            product: {&#xA;                type: Schema.Types.ObjectId,&#xA;                ref: 'products'&#xA;            },&#xA;            quantity: String,&#xA;            createdAt: String&#xA;        }&#xA;    ],&#xA;    createdAt: String&#xA;});&#xA;</code></pre>&#xA;<p>AddToBasket Mutation:</p>&#xA;<pre><code>Mutation: {&#xA;        addToBasket: async (_, {productId, quantity}, context) =&gt; {&#xA;            // TODO: Validate input fields&#xA;            console.log(&quot;adding to basket&quot;)&#xA;            const userContext = checkAuth(context, USER);&#xA;            const user = await User.findById(userContext.id);&#xA;            const product = await Product.findById(productId);&#xA;            if (product) {&#xA;                user.basket.unshift({           //this adds the following into the basket as an object &#xA;                    product: product.id,&#xA;                    quantity,&#xA;                    createdAt: new Date().toISOString()&#xA;                });&#xA;                await user.save();&#xA;                return user;&#xA;            } else throw new UserInputError('Product not found');&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;<p>Thank you for helping!</p>&#xA;<p>Edit 11:51 06/03/2021: (removed)</p>&#xA;<p>Edit 2 12:25 06/03/2021:</p>&#xA;<p><a href=""https://stackoverflow.com/questions/63228105/graphqlerror-id-cannot-represent-value-buffer"">GraphQLError: ID cannot represent value: &lt;Buffer...&gt;&quot;</a></p>&#xA;<p>My problem is the exact same problem as this persons but I think their code is different to mine? How I return the user's basket is by the following:</p>&#xA;<pre><code>Query: {&#xA;        getBasket: async (_, {}, context) =&gt; {&#xA;            console.log(&quot;RUNNING&quot;);&#xA;            const userContext = checkAuth(context, USER);&#xA;            const user = await User.findById(userContext.id);&#xA;            return user.basket;&#xA;        }&#xA;    },&#xA;</code></pre>&#xA;<p>Edit 3 12:52 06/03/2021:</p>&#xA;<p>Here is my user Schema:</p>&#xA;<pre><code>const { model, Schema } = require('mongoose');&#xA;&#xA;const userSchema = new Schema({&#xA;    email: String,&#xA;    password: String,&#xA;    roles: [String],&#xA;    basket: [&#xA;        {&#xA;            product: {&#xA;                type: Schema.Types.ObjectId,&#xA;                ref: 'products'&#xA;            },&#xA;            quantity: String,&#xA;            createdAt: String&#xA;        }&#xA;    ],&#xA;    createdAt: String&#xA;});&#xA;&#xA;module.exports = model('User', userSchema);&#xA;</code></pre>&#xA;",4413256,,4413256,2021-03-06 18:00:36,2021-12-24 04:23:14,GraphQL/ Apollo Server: Can't Access nested object,<node.js><mongodb><mongoose><graphql><apollo>,1,0,0,2021-03-05 23:43:32
66502564,1,,,1,447,"<p>Working with translations in a Symfony 5 + ApiPlatform v2.6 using GraphQl mutation with Angular 11 client (Apollo) I'm presenting the following workflow:</p>&#xA;<ol>&#xA;<li>Need to save the RecipeStepsTranslation entities to get the IRI</li>&#xA;<li>Need to save then the RecipeStepEntity</li>&#xA;</ol>&#xA;<p>All works fine when executing step 1, get the IRIs with a Promise.all() and pass it as array(which is the requested parameter for the GraphQl mutation).</p>&#xA;<p>Here is the mutation receiving some required parameter and the array of IRIs (the translations created previously). Notice that there is no error or exception raised on format, misspelling, or parameter names/types.</p>&#xA;<pre><code>mutation createRecipeSteps($cookOrder: Int!, $translations: [String]) {&#xA;  createRecipeSteps(input: {cookOrder: $cookOrder, translations: $translations}) {&#xA;    recipeSteps {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;// set of variables used&#xA;{&#xA;  &quot;translations&quot;: [&#xA;    &quot;/api/recipe_steps_translations/1863&quot;,&#xA;    &quot;/api/recipe_steps_translations/1864&quot;,&#xA;    &quot;/api/recipe_steps_translations/1865&quot;&#xA;  ],&#xA;  &quot;cookOrder&quot;: 0&#xA;}&#xA;</code></pre>&#xA;<p>After send the mutation I receive the following Exception:</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;debugMessage&quot;: &quot;The type of the key \&quot;0\&quot; must be \&quot;string\&quot;, \&quot;integer\&quot; given.&quot;,&#xA;      &quot;message&quot;: &quot;Internal server error&quot;,&#xA;      &quot;extensions&quot;: {&#xA;        &quot;category&quot;: &quot;internal&quot;&#xA;      },&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 2,&#xA;          &quot;column&quot;: 3&#xA;        }&#xA;      ],&#xA;      &quot;path&quot;: [&#xA;        &quot;createRecipeSteps&quot;&#xA;      ],&#xA;      &quot;trace&quot;: [&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\api-platform\\core\\src\\Serializer\\AbstractItemNormalizer.php&quot;,&#xA;          &quot;line&quot;: 737,&#xA;          &quot;call&quot;: &quot;ApiPlatform\\Core\\Serializer\\AbstractItemNormalizer::denormalizeCollection('translations', instance of ApiPlatform\\Core\\Metadata\\Property\\PropertyMetadata, instance of Symfony\\Component\\PropertyInfo\\Type, 'App\\Entity\\RecipeStepsTranslation', array(3), 'graphql', array(8))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\api-platform\\core\\src\\Serializer\\AbstractItemNormalizer.php&quot;,&#xA;          &quot;line&quot;: 403,&#xA;          &quot;call&quot;: &quot;ApiPlatform\\Core\\Serializer\\AbstractItemNormalizer::createAttributeValue('translations', array(3), 'graphql', array(8))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\api-platform\\core\\src\\GraphQl\\Serializer\\ItemNormalizer.php&quot;,&#xA;          &quot;line&quot;: 128,&#xA;          &quot;call&quot;: &quot;ApiPlatform\\Core\\Serializer\\AbstractItemNormalizer::setAttributeValue(instance of App\\Entity\\RecipeSteps, 'translations', array(3), 'graphql', array(8))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\symfony\\serializer\\Normalizer\\AbstractObjectNormalizer.php&quot;,&#xA;          &quot;line&quot;: 336,&#xA;          &quot;call&quot;: &quot;ApiPlatform\\Core\\GraphQl\\Serializer\\ItemNormalizer::setAttributeValue(instance of App\\Entity\\RecipeSteps, 'translations', array(3), 'graphql', array(8))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\api-platform\\core\\src\\Serializer\\AbstractItemNormalizer.php&quot;,&#xA;          &quot;line&quot;: 250,&#xA;          &quot;call&quot;: &quot;Symfony\\Component\\Serializer\\Normalizer\\AbstractObjectNormalizer::denormalize(array(2), 'App\\Entity\\RecipeSteps', 'graphql', array(8))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\api-platform\\core\\src\\Serializer\\ItemNormalizer.php&quot;,&#xA;          &quot;line&quot;: 70,&#xA;          &quot;call&quot;: &quot;ApiPlatform\\Core\\Serializer\\AbstractItemNormalizer::denormalize(array(2), 'App\\Entity\\RecipeSteps', 'graphql', array(7))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\symfony\\serializer\\Serializer.php&quot;,&#xA;          &quot;line&quot;: 208,&#xA;          &quot;call&quot;: &quot;ApiPlatform\\Core\\Serializer\\ItemNormalizer::denormalize(array(2), 'App\\Entity\\RecipeSteps', 'graphql', array(6))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\api-platform\\core\\src\\GraphQl\\Resolver\\Stage\\DeserializeStage.php&quot;,&#xA;          &quot;line&quot;: 57,&#xA;          &quot;call&quot;: &quot;Symfony\\Component\\Serializer\\Serializer::denormalize(array(2), 'App\\Entity\\RecipeSteps', 'graphql', array(6))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\api-platform\\core\\src\\GraphQl\\Resolver\\Factory\\ItemMutationResolverFactory.php&quot;,&#xA;          &quot;line&quot;: 98,&#xA;          &quot;call&quot;: &quot;ApiPlatform\\Core\\GraphQl\\Resolver\\Stage\\DeserializeStage::__invoke(null, 'App\\Entity\\RecipeSteps', 'create', array(6))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\webonyx\\graphql-php\\src\\Executor\\ReferenceExecutor.php&quot;,&#xA;          &quot;line&quot;: 624,&#xA;          &quot;call&quot;: &quot;ApiPlatform\\Core\\GraphQl\\Resolver\\Factory\\ItemMutationResolverFactory::ApiPlatform\\Core\\GraphQl\\Resolver\\Factory\\{closure}(null, array(1), null, instance of GraphQL\\Type\\Definition\\ResolveInfo)&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\webonyx\\graphql-php\\src\\Executor\\ReferenceExecutor.php&quot;,&#xA;          &quot;line&quot;: 550,&#xA;          &quot;call&quot;: &quot;GraphQL\\Executor\\ReferenceExecutor::resolveFieldValueOrError(instance of GraphQL\\Type\\Definition\\FieldDefinition, instance of GraphQL\\Language\\AST\\FieldNode, instance of Closure, null, instance of GraphQL\\Type\\Definition\\ResolveInfo)&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\webonyx\\graphql-php\\src\\Executor\\ReferenceExecutor.php&quot;,&#xA;          &quot;line&quot;: 474,&#xA;          &quot;call&quot;: &quot;GraphQL\\Executor\\ReferenceExecutor::resolveField(GraphQLType: Mutation, null, instance of ArrayObject(1), array(1))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\webonyx\\graphql-php\\src\\Executor\\ReferenceExecutor.php&quot;,&#xA;          &quot;line&quot;: 858,&#xA;          &quot;call&quot;: &quot;GraphQL\\Executor\\ReferenceExecutor::GraphQL\\Executor\\{closure}(array(0), 'createRecipeSteps')&quot;&#xA;        },&#xA;        {&#xA;          &quot;call&quot;: &quot;GraphQL\\Executor\\ReferenceExecutor::GraphQL\\Executor\\{closure}(array(0), 'createRecipeSteps')&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\webonyx\\graphql-php\\src\\Executor\\ReferenceExecutor.php&quot;,&#xA;          &quot;line&quot;: 860,&#xA;          &quot;function&quot;: &quot;array_reduce(array(1), instance of Closure, array(0))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\webonyx\\graphql-php\\src\\Executor\\ReferenceExecutor.php&quot;,&#xA;          &quot;line&quot;: 490,&#xA;          &quot;call&quot;: &quot;GraphQL\\Executor\\ReferenceExecutor::promiseReduce(array(1), instance of Closure, array(0))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\webonyx\\graphql-php\\src\\Executor\\ReferenceExecutor.php&quot;,&#xA;          &quot;line&quot;: 263,&#xA;          &quot;call&quot;: &quot;GraphQL\\Executor\\ReferenceExecutor::executeFieldsSerially(GraphQLType: Mutation, null, array(0), instance of ArrayObject(1))&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\webonyx\\graphql-php\\src\\Executor\\ReferenceExecutor.php&quot;,&#xA;          &quot;line&quot;: 215,&#xA;          &quot;call&quot;: &quot;GraphQL\\Executor\\ReferenceExecutor::executeOperation(instance of GraphQL\\Language\\AST\\OperationDefinitionNode, null)&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\webonyx\\graphql-php\\src\\Executor\\Executor.php&quot;,&#xA;          &quot;line&quot;: 156,&#xA;          &quot;call&quot;: &quot;GraphQL\\Executor\\ReferenceExecutor::doExecute()&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\webonyx\\graphql-php\\src\\GraphQL.php&quot;,&#xA;          &quot;line&quot;: 162,&#xA;          &quot;call&quot;: &quot;GraphQL\\Executor\\Executor::promiseToExecute(instance of GraphQL\\Executor\\Promise\\Adapter\\SyncPromiseAdapter, instance of GraphQL\\Type\\Schema, instance of GraphQL\\Language\\AST\\DocumentNode, null, null, array(2), 'createRecipeSteps', null)&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\webonyx\\graphql-php\\src\\GraphQL.php&quot;,&#xA;          &quot;line&quot;: 94,&#xA;          &quot;call&quot;: &quot;GraphQL\\GraphQL::promiseToExecute(instance of GraphQL\\Executor\\Promise\\Adapter\\SyncPromiseAdapter, instance of GraphQL\\Type\\Schema, 'mutation createRecipeSteps($cookOrder: Int!, $translations: [String]) {\n  createRecipeSteps(input: {cookOrder: $cookOrder, translations: $translations}) {\n    recipeSteps {\n      id\n    }\n  }\n}\n', null, null, array(2), 'createRecipeSteps', null, null)&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\api-platform\\core\\src\\GraphQl\\Executor.php&quot;,&#xA;          &quot;line&quot;: 34,&#xA;          &quot;call&quot;: &quot;GraphQL\\GraphQL::executeQuery(instance of GraphQL\\Type\\Schema, 'mutation createRecipeSteps($cookOrder: Int!, $translations: [String]) {\n  createRecipeSteps(input: {cookOrder: $cookOrder, translations: $translations}) {\n    recipeSteps {\n      id\n    }\n  }\n}\n', null, null, array(2), 'createRecipeSteps', null, null)&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\api-platform\\core\\src\\GraphQl\\Action\\EntrypointAction.php&quot;,&#xA;          &quot;line&quot;: 86,&#xA;          &quot;call&quot;: &quot;ApiPlatform\\Core\\GraphQl\\Executor::executeQuery(instance of GraphQL\\Type\\Schema, 'mutation createRecipeSteps($cookOrder: Int!, $translations: [String]) {\n  createRecipeSteps(input: {cookOrder: $cookOrder, translations: $translations}) {\n    recipeSteps {\n      id\n    }\n  }\n}\n', null, null, array(2), 'createRecipeSteps')&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\symfony\\http-kernel\\HttpKernel.php&quot;,&#xA;          &quot;line&quot;: 157,&#xA;          &quot;call&quot;: &quot;ApiPlatform\\Core\\GraphQl\\Action\\EntrypointAction::__invoke(instance of Symfony\\Component\\HttpFoundation\\Request)&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\symfony\\http-kernel\\HttpKernel.php&quot;,&#xA;          &quot;line&quot;: 79,&#xA;          &quot;call&quot;: &quot;Symfony\\Component\\HttpKernel\\HttpKernel::handleRaw(instance of Symfony\\Component\\HttpFoundation\\Request, 1)&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\vendor\\symfony\\http-kernel\\Kernel.php&quot;,&#xA;          &quot;line&quot;: 195,&#xA;          &quot;call&quot;: &quot;Symfony\\Component\\HttpKernel\\HttpKernel::handle(instance of Symfony\\Component\\HttpFoundation\\Request, 1, true)&quot;&#xA;        },&#xA;        {&#xA;          &quot;file&quot;: &quot;W:\\projects\\apps\\sample-api\\public\\index.php&quot;,&#xA;          &quot;line&quot;: 20,&#xA;          &quot;call&quot;: &quot;Symfony\\Component\\HttpKernel\\Kernel::handle(instance of Symfony\\Component\\HttpFoundation\\Request)&quot;&#xA;        }&#xA;      ]&#xA;    }&#xA;  ],&#xA;  &quot;data&quot;: {&#xA;    &quot;createRecipeSteps&quot;: null&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>As suggested I tried to change the keys for the locale representation(es|en) with an object but I got the same Exception.</p>&#xA;<p>If I'm passing an array of Strings as requested why is giving me this error.&#xA;Thanks in advance!</p>&#xA;",8801301,,8801301,2021-03-06 05:33:58,2021-03-06 20:51:56,Symfony ApiPlatform GraphQl mutation fails when array of IRI is sent,<symfony><graphql><api-platform.com><symfony5>,1,0,0,2021-03-06 05:01:54
66503284,1,66503573,,1,84,"<p>I am trying to write a query with AND operator to extract data from neo4j in GraphQL but it doesn't return any result. I am using neo4j-graphql-js library. I have the following schema</p>&#xA;<pre><code>type Order {&#xA;    label: String&#xA;    id: String&#xA;    details: [OrderDetails] @relation(name: &quot;RELATED_TO&quot;, direction: &quot;OUT&quot;)&#xA;}&#xA;&#xA;type OrderDetails {&#xA;    createdBy: String&#xA;    label: String&#xA;    oId: String&#xA;}&#xA;</code></pre>&#xA;<p>Following is the query:</p>&#xA;<pre><code>{&#xA;  Order(filter: { AND: [{ label: &quot;fruits&quot;, details: {label: &quot;banana&quot;} }] }) {&#xA;    label&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I also tried this:</p>&#xA;<pre><code>{&#xA;  Order(filter: {  label: &quot;fruits&quot;, details: {label: &quot;banana&quot;}  }) {&#xA;    label&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But these two queries do not return any result.&#xA;If I just write <strong>label: &quot;fruits&quot;</strong> without AND it returns the result but I want all orders of fruit which are particularly for banana.&#xA;Any suggestion where I am getting wrong?</p>&#xA;",15341187,,,,2021-03-06 07:59:18,AND is not returning result in GraphQL,<graphql><graphql-js><grandstack><neo4j-graphql-js>,1,2,0,2021-03-06 07:09:55
66503573,2,,66503284,1,,"<p>Since you have mentioned about using neo4j-graphql-js library. You can do something like this:</p>&#xA;<pre><code>{&#xA;  Order(&#xA;    filter: { label: &quot;fruits&quot;, details_single: { label: &quot;banana&quot; } }&#xA;  ) {&#xA;    details {&#xA;      label&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3620216,,,,2021-03-06 07:59:18,"",,0,0,0,2021-03-06 07:59:18
66503924,2,,56982328,0,,"<p>You can try creating custom graphql attribute with custom resolver.</p>&#xA;<pre><code>$product = $this-&gt;_productRepository-&gt;getById($value['entity_id']);&#xA;$data = array();&#xA;foreach ($args['fields'] as $fi) {&#xA;  $att = $product-&gt;getResource()-&gt;getAttribute($fi);&#xA;  if (isset($att) &amp;&amp; $att) {&#xA;    if (in_array(&#xA;      $att-&gt;getFrontendInput(),&#xA;      ['multiselect', 'select']&#xA;    )) {&#xA;      $data[$fi . '_label'] = $product-&gt;getAttributeText($fi);&#xA;    }&#xA;    $data[$fi] = $product-&gt;getData($fi);&#xA;  }&#xA;}&#xA;return json_encode((object) $data);&#xA;</code></pre>&#xA;<p>which should display all provided attributes with their labels.</p>&#xA;<pre><code>&quot;sku&quot;: &quot;testProduct&quot;,&#xA;&quot;fabric&quot;: 60,&#xA;&quot;work&quot;: 65,&#xA;&quot;dynamicAttributes&quot;: &quot;{&#xA;    &quot;fabric_label&quot;:&quot;Pure Silk&quot;,&#xA;    &quot;fabric&quot;:&quot;60&quot;,&#xA;    &quot;work_label&quot;:&quot;Tanchoi&quot;,&#xA;    &quot;work&quot;:&quot;65&quot;&#xA;}&quot;,&#xA;</code></pre>&#xA;<p>Check out <a href=""https://github.com/theshreyas/magento-2-quickies/tree/main/Graphql/DynamicAttributesGraphql"" rel=""nofollow noreferrer"">entire module here</a></p>&#xA;",7035903,,,,2021-03-06 08:49:08,"",,0,0,0,2021-03-06 08:49:08
66504477,2,,47231290,1,,"<p>It's super easy to build graph QL using the Github GraphQL explorer. Please refer to the attached screenshot.&#xA;<a href=""https://docs.github.com/en/graphql/overview/explorer"" rel=""nofollow noreferrer"">https://docs.github.com/en/graphql/overview/explorer</a></p>&#xA;<p>{&#xA;user(login: &quot;leerob&quot;) {&#xA;name&#xA;email&#xA;company&#xA;bio&#xA;followers {&#xA;totalCount&#xA;}&#xA;following {&#xA;totalCount&#xA;}&#xA;repositories(first: 50, isFork: false) {&#xA;nodes {&#xA;name&#xA;url&#xA;stargazerCount&#xA;primaryLanguage {&#xA;id&#xA;name&#xA;}&#xA;}&#xA;}&#xA;}&#xA;}</p>&#xA;<p><a href=""https://i.stack.imgur.com/0nBGs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0nBGs.png"" alt=""enter image description here"" /></a></p>&#xA;",442070,,,,2021-03-06 10:02:32,"",,0,0,0,2021-03-06 10:02:32
66510530,2,,66502564,0,,"<p>I'm just guessing from the fact that you dealing with translations and the error, that the locale string should be the array key, the first key in your example would be <code>int 0</code> where it throws the error.</p>&#xA;<p>So in php it is probably expecting something like this <em>associative</em> array of strings:</p>&#xA;<pre><code>[&#xA;  &quot;en&quot; =&gt; &quot;/api/recipe_steps_translations/1863&quot;,&#xA;  &quot;es&quot; =&gt; &quot;/api/recipe_steps_translations/1864&quot;,&#xA;  &quot;fr&quot; =&gt; &quot;/api/recipe_steps_translations/1865&quot;&#xA;]&#xA;</code></pre>&#xA;<p>Defining that data in js would look like this:</p>&#xA;<pre><code>let translations = {&#xA;  en: &quot;/api/recipe_steps_translations/1863&quot;,&#xA;  es: &quot;/api/recipe_steps_translations/1864&quot;,&#xA;  fr: &quot;/api/recipe_steps_translations/1865&quot;&#xA;}&#xA;</code></pre>&#xA;<p>And the JSON representation would be:</p>&#xA;<pre><code>JSON.stringify(translations)&#xA;// or&#xA;&quot;{\&amp;quot;en\&amp;quot;:\&amp;quot;/api/recipe_steps_translations/1863\&amp;quot;,\&amp;quot;es\&amp;quot;:\&amp;quot;/api/recipe_steps_translations/1864\&amp;quot;,\&amp;quot;fr\&amp;quot;:\&amp;quot;/api/recipe_steps_translations/1865\&amp;quot;}&quot;&#xA;</code></pre>&#xA;",6127393,,,,2021-03-06 20:51:56,"",,0,1,0,2021-03-06 20:51:56
66514765,1,66514901,,3,2357,"<p>I had a very frustrating evening yesterday, trying to get the basic Shopify GraphQL Admin API example working with nodeJS. The original Shopify example code is <a href=""https://shopify.dev/tutorials/graphql-with-node-and-express"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>The problem is that my code returns a status 400 - Bad Request.</p>&#xA;<p>I have enabled a &quot;private App&quot; on my store and enabled all the APIs with read access. I carefully copied the apiKey, accessToken and store name from Shopify.</p>&#xA;<p>Can anyone point out if there is something wrong with my code? Many thanks.</p>&#xA;<p>Code:</p>&#xA;<pre><code>import fetch from 'node-fetch';&#xA;&#xA;const apiKey = 'xxxx';&#xA;const accessToken = 'yyyy';&#xA;const store = 'zzzz';&#xA;const hostName = store + '.myshopify.com';&#xA;const apiVersion = '2021-01';&#xA;const apiLocation = '/admin/api/';&#xA;&#xA;const rootUrl = 'https://' + apiKey + ':' + accessToken + '@' + hostName + apiLocation + apiVersion + '/';&#xA;&#xA;const shopGraphQl = 'https://' + hostName + apiLocation + apiVersion + '/graphql.json';&#xA;//const shopGraphQl2 = rootUrl + 'graphql.json';&#xA;//const urlTest = rootUrl + 'orders.json';&#xA;&#xA;const url = shopGraphQl;&#xA;&#xA;const body = {&#xA;    query: `{&#xA;        shop {&#xA;            name&#xA;          }&#xA;      }`&#xA;};&#xA;&#xA;fetch   (&#xA;    url,&#xA;    {&#xA;        method: &quot;POST&quot;,&#xA;        headers: {&#xA;            &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;            &quot;X-Shopify-Access-Token&quot; : accessToken&#xA;        },&#xA;        body: JSON.stringify({&#xA;            body&#xA;        })&#xA;    }&#xA;)&#xA;.then(res =&gt; {&#xA;    console.log('status = ' + res.status + ' , ' + res.statusText);&#xA;})&#xA;.then(json =&gt; {&#xA;    console.log(&quot;data returned:\n&quot;, json);&#xA;})&#xA;.catch(err =&gt; console.error(err));; &#xA;</code></pre>&#xA;",10304588,,,,2021-03-07 10:00:28,How to get basic Shopify GraphQL Admin API working with nodeJS?,<node.js><graphql><shopify><node-fetch><shopify-api>,1,6,0,2021-03-07 09:02:12
66536843,1,,,0,856,"<p>I have been trying to add new line item in already created checkout using shopify storefront api.</p>&#xA;<p>Here is my mutation:</p>&#xA;<pre><code>mutation letsUpdateCheckout(&#xA;  $lineItems: [CheckoutLineItemInput!]!&#xA;  $checkoutId: ID!&#xA;) {&#xA;  checkoutLineItemsAdd(lineItems: $lineItems, checkoutId: $checkoutId) {&#xA;    checkout {&#xA;      id&#xA;      lineItems(first: 1) {&#xA;        edges {&#xA;          node {&#xA;            id&#xA;            title&#xA;            quantity&#xA;            variant {&#xA;              id&#xA;              sku&#xA;              title&#xA;              priceV2 {&#xA;                amount&#xA;              }&#xA;              price&#xA;              image {&#xA;                originalSrc&#xA;              }&#xA;              selectedOptions {&#xA;                name&#xA;                value&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;&#xA;    checkoutUserErrors {&#xA;      code&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Here are the variables:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;variables&quot;: {&#xA;    &quot;input&quot;: {&#xA;      &quot;lineItems&quot;: [&#xA;        {&#xA;          &quot;variantId&quot;: &quot;Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC8zNjI4MTM4NzA1NzMwOA==&quot;,&#xA;          &quot;quantity&quot;: 1&#xA;        }&#xA;      ],&#xA;      &quot;checkoutId&quot;: &quot;Z2lkOi8vc2hvcGlmeS9DaGVja291dC8xYTBlZTQ0NzhiODI3MTQwZDZkZmMzMjFkYjhlNTM5OT9rZXk9ZWJiN2Q2ODYxYmZiMjdhN2I5ZTRlOWFmYTI0NTBlNmM=&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I have double check the values for variant Id and checkout Id, both are correct. Still getting the error like:</p>&#xA;<p><strong>Variable $lineItems of type [CheckoutLineItemInput!]! was provided invalid value&#xA;Variable $checkoutId of type ID! was provided invalid value</strong></p>&#xA;<p>Please note, I can create new checkout using the same variant Id and it is created properly so variant id looks proper to me and on creation of checkout, the checkout ID which we got in response, I am passing the same while adding a new line item to the cart.</p>&#xA;<p>If anyone can point the error then would be great, stucked at this point since last 2 days.</p>&#xA;",8297617,,4638376,2021-06-23 17:19:04,2021-06-23 17:19:04,shopify storefront api - Invalid value provided,<graphql><shopify>,0,5,0,2021-03-08 20:36:32
66549139,2,,62933888,3,,"<p>You can use a search query:</p>&#xA;<pre><code>query {&#xA;  search(query: &quot;org:&lt;my-org&gt; is:internal&quot;, type: REPOSITORY, first: 100) {&#xA;    repositoryCount&#xA;    nodes {&#xA;      ... on Repository {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>For more info, see <a href=""https://docs.github.com/en/github/searching-for-information-on-github/searching-for-repositories#search-by-repository-visibility"" rel=""nofollow noreferrer"">https://docs.github.com/en/github/searching-for-information-on-github/searching-for-repositories#search-by-repository-visibility</a></p>&#xA;",10652364,,,,2021-03-09 14:48:23,"",,0,1,0,2021-03-09 14:48:23
66552544,1,,,1,192,"<p>I have a class that contains a field called 'notes'. Its data type is array. In the mutation, I'm able to save data on the field. problem is it overwrites the value. I want to add value in the array. how do I do it? here's my mutation. I know I'm not doing the right thing, but can't find it in the documentation as well</p>&#xA;<pre><code>mutation {&#xA;  updateParcel(input: { id: &quot;B6aESEwWcA&quot;, fields: { notes: [&quot;wow&quot;]}}) {&#xA;    parcel {&#xA;      objectId&#xA;      notes {&#xA;        ... on Element {&#xA;          value&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1652667,,,,2021-03-09 18:14:51,insert items into array using graphql - Parse server,<parse-platform><graphql><parse-server>,0,4,0,2021-03-09 18:14:51
66563844,2,,66545573,1,,"<p>If using plain HTTP requests for the communication is ok to you, then something like this would work</p>&#xA;<pre><code>@QuarkusTest&#xA;public class ProductRepositoryTest {&#xA;&#xA;    @Test&#xA;    public void testQuery() {&#xA;        RestAssured.given()&#xA;                .when()&#xA;                .contentType(&quot;application/json&quot;)&#xA;                .body(&quot;{ \&quot;query\&quot;: \&quot;{&quot; +&#xA;                        &quot;  products {&quot; +&#xA;                        &quot;    name&quot; +&#xA;                        &quot;    price&quot; +&#xA;                        &quot;  }&quot; +&#xA;                        &quot;}\&quot;&quot; +&#xA;                        &quot;}&quot;)&#xA;                .post(&quot;/graphql&quot;)&#xA;                .then()&#xA;                .statusCode(200)&#xA;                .body(&quot;data.products&quot;, Matchers.not(Matchers.emptyArray()));&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>There is also the option to use the typesafe GraphQL client from SmallRye GraphQL (see an example in my repo: <a href=""https://github.com/jmartisk/mock-artifacts/tree/master/graphql/graphql-client"" rel=""nofollow noreferrer"">https://github.com/jmartisk/mock-artifacts/tree/master/graphql/graphql-client</a>) - it should be usable for testing purposes, even though it's very high level so you might lose some finer-grained functionality.&#xA;Soon, there will also be a different type of client - the dynamic client, but SmallRye GraphQL doesn't support it yet.</p>&#xA;",615104,,,,2021-03-10 11:28:05,"",,0,1,0,2021-03-10 11:28:05
66579258,2,,66545573,0,,"<p>Last successful try :</p>&#xA;<pre><code>  RestAssured.given()&#xA;                .when()&#xA;                .contentType(&quot;application/json&quot;)&#xA;                .body(&quot;{ \&quot;query\&quot;: \&quot;{&quot; +&#xA;                        &quot;  products {&quot; +&#xA;                        &quot;    name&quot; +&#xA;                        &quot;    price&quot; +&#xA;                        &quot;  }&quot; +&#xA;                        &quot;}\&quot;&quot; +&#xA;                        &quot;}&quot;)&#xA;                .post(&quot;/graphql&quot;)&#xA;                .then().log().ifValidationFails()&#xA;                .statusCode(200)&#xA;                .body(&quot;data.products.name&quot;, Matchers.hasItems(&quot;Ten&quot;, &quot;Twenty&quot;))&#xA;                .body(&quot;data.products.price&quot;, Matchers.hasItems(Matchers.equalTo(10f), Matchers.equalTo(20f)));&#xA;</code></pre>&#xA;<p>NB: I've inactivated the security to make the unit tests work.</p>&#xA;",8912667,,,,2021-03-11 09:00:07,"",,0,0,0,2021-03-11 09:00:07
66581504,1,,,0,81,"<p>Here in my code I have some value in state 'logTicketDetails' which is object and inside that object there are four arrays . I am getting that value now , in my code I am trying to store that inteir object 'logTicketDetails' in GraphQL object , I have written my code below . But I am getting error .&#xA;Please help me how can I store full object in cache .</p>&#xA;<p>logTicketDetails value is below</p>&#xA;<pre><code>    {ticketTypes: Array(3), preferredLanguages: Array(4), responseMediums: Array(2), &#xA;</code></pre>&#xA;<p>troubleTicketPriority: Array(3)}</p>&#xA;<pre><code>// below is logTicketDetails value which is there in state &#xA;&#xA;    {ticketTypes: Array(3), preferredLanguages: Array(4), responseMediums: Array(2), troubleTicketPriority: Array(3)}&#xA;    preferredLanguages: (4) [{…}, {…}, {…}, {…}]&#xA;    responseMediums: (2) [{…}, {…}]&#xA;    ticketTypes: (3) [{…}, {…}, {…}]&#xA;    troubleTicketPriority: (3) [{…}, {…}, {…}]&#xA;</code></pre>&#xA;<p>// this is my cache query</p>&#xA;<pre><code>export const LOG_TICKET_DETAILS= gql`&#xA;query logTicketDetails {&#xA;    logTicketDetails {&#xA;     &#xA;    }&#xA;  }&#xA;`&#xA;;&#xA;</code></pre>&#xA;<p>// Here I am writing to cache</p>&#xA;<pre><code> await writeToCache(this,&#xA;        LOG_TICKET_DETAILS,&#xA;        {&#xA;          logTicketDetails : this.state.logTicketDetails,&#xA;        }&#xA;      );&#xA;</code></pre>&#xA;",8477139,,1427878,2021-03-11 11:30:46,2021-03-11 11:46:15,How to store object in GraphQL cache in react native,<javascript><reactjs><react-native><graphql>,1,0,0,2021-03-11 11:18:06
66586063,1,,,1,100,"<p>I tried to create multiple products inside one single order creation.</p>&#xA;<p>Actually it works here manually through the GraphQL tool :</p>&#xA;<pre><code>mutation {&#xA;    createOrder(&#xA;      data: { &#xA;        orderName: &quot;Order 1&quot;&#xA;        products: { create: [{ name: &quot;Product 1&quot; }, { name: &quot;Product 2&quot; }]}&#xA;      }) {&#xA;      id&#xA;      name&#xA;      products {&#xA;          name&#xA;      }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;<p>But I can’t figure out how to write this in a useMutation hook from Apollo and how to pass the variables inside.&#xA;I tried something like this but it’s still not complete, and I can’t find so for any doc mentioning how:</p>&#xA;<pre><code>const CREATE_ORDER = gql`&#xA;  mutation CREATE_ORDER(&#xA;    $orderName: String!&#xA;    $name: String!&#xA;  ) {&#xA;    createOrder(&#xA;      data: {&#xA;        orderName: $orderName&#xA;            products: { create: [{name: $name}, {name: $name}] }&#xA;      }&#xA;    ) {&#xA;      id&#xA;      orderName&#xA;      products {&#xA;          name&#xA;      }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>And as a variable objects I would pass this:</p>&#xA;<pre><code>const [createOrder, { data, loading, error }] = useMutation(CREATE_ORDER, {&#xA;    variables: {&#xA;      orderName: 'Order X',&#xA;      products: [{ name: 'Burger'}, { name: 'Pizza'}],&#xA;    }&#xA;</code></pre>&#xA;<p>Any idea?</p>&#xA;<p>Thanks for your help</p>&#xA;",15376879,,,,2021-03-12 06:56:03,Keystone/Apollo/React: 1 useMutation for several creations issue,<reactjs><graphql><apollo-client><react-apollo><keystonejs>,1,2,0,2021-03-11 15:59:37
66589313,1,,,2,561,"<p>I'm using the python graphql client lib to pull some basic token data from Uniswap.</p>&#xA;<p>Docs here: <a href=""https://thegraph.com/explorer/subgraph/uniswap/uniswap-v2?query=Example%20query"" rel=""nofollow noreferrer"">https://thegraph.com/explorer/subgraph/uniswap/uniswap-v2?query=Example%20query</a></p>&#xA;<p>My query:</p>&#xA;<pre><code>query = &quot;&quot;&quot;&#xA;query($contract: String!) {&#xA;token(id:$contract) {&#xA;symbol&#xA;name&#xA;decimals&#xA;tradeVolume&#xA;totalLiquidity&#xA;derivedETH&#xA;}&#xA;}&#xA;&quot;&quot;&quot;&#xA;</code></pre>&#xA;<p>What's strange is that on Uniswap frontend it lists BAT having:</p>&#xA;<pre><code>Total Liquidity: $5,478,617&#xA;24H Volume: $1,592,080&#xA;</code></pre>&#xA;<p>However the data returned from that query looks like this:</p>&#xA;<pre><code>'name': 'Basic Attention Token',&#xA;&#xA;'symbol': 'BAT',&#xA;&#xA;'totalLiquidity': '3451749.888732987018538912',&#xA;&#xA;'tradeVolume': '359698970.546531556838535503'}}}&#xA;</code></pre>&#xA;<p>I cannot figure out what the heck units these are supposed to be. I've tried calculating as ETH and BAT and can't seem to come up with dollar figures even close to the frontend.</p>&#xA;<p>Anyone know what I'm missing?</p>&#xA;",15376781,,,,2021-06-28 06:37:12,TheGraph Uniswap Subgraph returning strange values for Volume and Liquidity,<python><graphql><blockchain><ethereum><thegraph>,1,0,0,2021-03-11 19:32:43
66594265,2,,66585660,0,,"<p>I'm not 100% sure, but I don't think this is possible because it needs to be specified with the type that matches the type of document you're looking for to make sure that your query is valid and that the fields you are trying to receive actually exist on the object.</p>&#xA;<p>So in your case, if you're looking for the Collection Slice, the fragments would need  to be&#xA;<code>PrismicThemeBodyCollection</code> and <code>PrismicContentBodyCollection</code> respectively.</p>&#xA;<p>I have made a few tests myself and I keep getting errors that say I'm missing the correct content type name</p>&#xA;",12114295,,,,2021-03-12 04:38:00,"",,0,0,0,2021-03-12 04:38:00
66597001,1,,,0,508,"<p>I created a graphql schema</p>&#xA;<pre><code>type Query {&#xA;  vehicle(id: String): Vehicle&#xA;}&#xA;type Vehicle {&#xA;  producer: String&#xA;  color: String&#xA;  engine: String&#xA;  year: String&#xA;  price: Float&#xA;}&#xA;</code></pre>&#xA;<p>and received a request</p>&#xA;<pre><code>query &#xA; {&#xA;   vehicle(id: &quot;123&quot;) {&#xA;       producer&#xA;       color&#xA;       price&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>But I wanted the response to contain <code>producer</code> and <code>color</code> only, so <code>price</code> is excluded.</p>&#xA;<p>Is it possible to do this with Graphql in Springboot? If yes, how can we do that?</p>&#xA;",7967511,,,,2021-03-12 09:06:43,GraphQL + SpringBoot: How to hide certain fields from request in response,<spring-boot><graphql>,0,2,0,2021-03-12 09:06:43
66600229,1,,,1,222,"<p>I've built a test case for a GraphQL mutation where I save inputs (priceOne and priceTwo) of type graphene.Decimal() into the model MyObj fields of type models.DecimalField and I return MyObj in the response.</p>&#xA;<p>The code below returns OK, test successful on my machine, let's call Machine A, and it also works on Machine B, but doesn't work on Machine C.</p>&#xA;<ul>&#xA;<li>Machine A: Windows 10, python 3.7 =&gt; OK</li>&#xA;<li>Machine B: Ubuntu, python 3.8.0 =&gt; OK</li>&#xA;<li>Machine C: Ubuntu, python 3.8.5 =&gt; F</li>&#xA;</ul>&#xA;<p>Graphene - GraphQL</p>&#xA;<pre><code>graphene==2.1.8&#xA;graphene-django==2.13.0&#xA;graphql-core==2.3.2&#xA;graphql-relay==2.0.1&#xA;</code></pre>&#xA;<pre class=""lang-py prettyprint-override""><code>import json&#xA;&#xA;from graphene_django.utils import GraphQLTestCase&#xA;from mixer.backend.django import mixer&#xA;&#xA;from core.schema import schema&#xA;from my_app.models import MyObj&#xA;&#xA;&#xA;MY_MUTATION = '''&#xA;    mutation MyMutation($input: MyInput!) {&#xA;        myMutation(input: $input) {&#xA;            success&#xA;            myObj {&#xA;                id&#xA;                price&#xA;            }&#xA;        }&#xA;    }&#xA;'''&#xA;&#xA;&#xA;class TestMyMutation(GraphQLTestCase):&#xA;    GRAPHQL_SCHEMA = schema&#xA;&#xA;    def setUp(self):&#xA;        self.my_obj = mixer.blend(MyObj)&#xA;&#xA;        self.input_data = {&#xA;            'id': self.my_obj.id,&#xA;            'priceOne': '2000.00',&#xA;            'priceTwo': '0.10',&#xA;        }&#xA;&#xA;    def test_my_mutation_success(self):&#xA;&#xA;        response = self.query(MY_MUTATION, input_data=self.input_data)&#xA;        content = json.loads(response.content)&#xA;&#xA;        self.assertResponseNoErrors(response)&#xA;        self.assertTrue(content['data']['myMutation']['success'])&#xA;        self.assertEqual(content['data']['myMutation']['myObj']['priceOne'], 2000.00)&#xA;        self.assertEqual(content['data']['myMutation']['myObj']['priceTwo'], 0.10)&#xA;&#xA;&#xA;</code></pre>&#xA;<p>On Machine C, the left argument is string:</p>&#xA;<blockquote>&#xA;<p>self.assertEqual(content['data']['myMutation']['myObj']['priceTwo'], 0.10)&#xA;AssertionError: '0.10'!= 0.1</p>&#xA;</blockquote>&#xA;<p>But on Machine A, it is float:</p>&#xA;<blockquote>&#xA;<p>print(type(content['data']['myMutation']['myObj']['priceOne']))&#xA;&lt;class 'float'&gt;</p>&#xA;</blockquote>&#xA;<p>We fixed the issue by transforming both arguments of assertEqual to Decimal and adding '' to the argument on the right. Plus added a quantize to left argument of 0.10 check.</p>&#xA;<pre class=""lang-py prettyprint-override""><code>self.assertEqual(Decimal(content['data']['myMutation']['myObj']['priceOne']), Decimal('2000.00'))&#xA;self.assertEqual(Decimal(content['data']['myMutation']['myObj']['priceTwo']).quantize(Decimal(10)**(-2)), Decimal('0.10'))&#xA;</code></pre>&#xA;<p><strong>Question:</strong>&#xA;Why does the first option does not work on Machine C but works on the other two?</p>&#xA;",7248916,,7248916,2021-03-12 17:37:58,2021-03-12 17:37:58,Python unit test assertEqual throwing assertionError in one machine but not in others,<python><django><types><graphql>,0,0,0,2021-03-12 12:49:16
66602104,1,,,1,102,"<p>I am trying to get Medium user posts real time. I tried:</p>&#xA;<pre class=""lang-none prettyprint-override""><code>https://medium.com/feed/@your_profile&#xA;</code></pre>&#xA;<pre class=""lang-none prettyprint-override""><code>https://medium.com/@yourhandle/latest?format=json&#xA;</code></pre>&#xA;<p>However, I'm getting several minutes cached reply back based on firstPublishedAt param in JSON response. I need to be able to get user posts as soon as they are posted.&#xA;Any advice how to achieve that?</p>&#xA;",15383366,,3689450,2022-11-28 22:49:23,2022-11-28 22:49:23,How to retrieve Medium posts for a user real time?,<web-scraping><graphql><medium.com-publishing-api>,0,0,0,2021-03-12 14:47:02
66619471,2,,66619401,0,,"<p>I believe, that you are trying to map over an non existing array -- based on your title and error log.</p>&#xA;<p>And on inspecting your code, it seems the error comes from the parent <code>src/pages/products/index.vue</code></p>&#xA;<p>In your apollo:</p>&#xA;<pre><code>...&#xA;      update: (data) =&gt; {&#xA;        data = data.products.edges.map((item: any) =&gt; {&#xA;          item.node.images = item.node.images.edges.map((image: any) =&gt; {&#xA;            return image.node.image&#xA;          })&#xA;&#xA;          return item.node&#xA;        })&#xA;&#xA;        return data&#xA;      }&#xA;...&#xA;</code></pre>&#xA;<p>I think, because you request the last one <code>images(last: 1) {</code> in your query, you get an object instead of an array. Thus <code>item.node.images = item.node.images.edges.map((image: any) =&gt; {</code> causes the error. Which is on line 57, as the error log tells us: `System.err: (file: src/pages/products/index.vue?2e29:57:52)``</p>&#xA;",11130552,,11130552,2021-03-13 23:25:13,2021-03-13 23:25:13,"",,0,0,0,2021-03-13 23:10:55
66639433,2,,56006126,-1,,"<p>This PR <a href=""https://github.com/nestjs/graphql/pull/1104"" rel=""nofollow noreferrer"">https://github.com/nestjs/graphql/pull/1104</a> enables you to write tests using <code>apollo-server-testing</code>.</p>&#xA;",8135581,,,,2021-03-15 14:01:46,"",,0,1,0,2021-03-15 14:01:46
66676666,1,,,0,36,"<p>We would like to be able to use parts of the query result as a variable further in the same query. This does not seem to be present in the GraphQL language.</p>&#xA;<p>For example, we have a knowledge graph where we are looking for timeseries measurements from a temperature sensor during a curing operation. The key problem is that we need to indicate what the start and end time is of the curing operation in order to obtain the temperature at the time period of the curing operation.</p>&#xA;<p>What I expect a single-query intuitive way to do this, would be to declare variables <code>$start</code> and <code>$end</code> and use them later as follows:</p>&#xA;<pre><code>{&#xA;    products {&#xA;        serialnumber,&#xA;        operation(type:&quot;Curing&quot;) {&#xA;            name,&#xA;            $start: start,&#xA;            $end: end,&#xA;            measurement(from:$start, to:$end){&#xA;                timestamp,&#xA;                value&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>The only way to get a result for such a query is to split up in two separate queries. First to obtain the start and end time <strong>per product</strong>:</p>&#xA;<pre><code>{&#xA;    products {&#xA;        serialnumber,&#xA;        operation(type:&quot;Curing&quot;) {&#xA;            name,&#xA;            $start: start,&#xA;            $end: end&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Second to obtain the correct measurements, a second query will need to be asked <strong>per product</strong> based on the response of the previous query. The following template can be used:</p>&#xA;<pre><code>{&#xA;    product(serialnumber:&quot;{SERIALNUMBER}&quot;) {&#xA;        serialnumber&#xA;        operation(name:&quot;{OPERATION}&quot;) {&#xA;            measurement(from:&quot;{START}&quot;, to:&quot;{END}&quot;){&#xA;                timestamp,&#xA;                value&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>(Note that similarly, a GraphQL query with &quot;variables&quot; can be used here - which act as parameters but do not provide a way to express the single query approach.)</p>&#xA;<p>This seems to negate the benefits of GraphQL, namely being able to specify what you need in a single query, and obtaining a single, well-structured query response.</p>&#xA;<p>Are there any ways in GraphQL to use variables, or anything that allows you to use a single query for the scenario above?</p>&#xA;<p>Edit: @xadm replied with a solution that would work when we can assume that we <em>always</em> want to use the operations' start and end time. This is not the case, so the above is a misleading example. An extension of the example below (although a bit contrived) fits better what we need:</p>&#xA;<p>Suppose a number of time stamps are recorded during the curing operation:</p>&#xA;<ul>&#xA;<li>ovenTurnOn: time when turning on the oven (preheating starts)</li>&#xA;<li>openOvenStart: time when opening the oven door to move in the products</li>&#xA;<li>closeOvenStart: time when the door is shut, with the products inside</li>&#xA;<li>curingStart: time when the curing operation starts, and the temperature profile for curing is followed</li>&#xA;<li>curingEnd: time when the curing has finished</li>&#xA;<li>openOvenEnd: time when the oven is opened to take out the cured products</li>&#xA;<li>closeOvenEnd: time when the oven is closed again</li>&#xA;<li>ovenTurnOff: time when the oven is turned off</li>&#xA;</ul>&#xA;<p>We may be interested in temperature measurements between any of these times, e.g.,</p>&#xA;<ul>&#xA;<li>to look into the temperature profile during curing (between curingStart and curingEnd)</li>&#xA;<li>to look into the heat dissipation when opening the door (between openOvenStart and closeOvenStart, or openOvenEnd and closeOvenEnd)&#xA;etc.</li>&#xA;</ul>&#xA;<p>One example could look like this, but many variants for defining <code>$start</code> and <code>$end</code> are possible and need to be determined by the person making the <em>query</em>, not the pre-fixed <em>resolver</em> for <code>measurement</code>:</p>&#xA;<pre><code>{&#xA;    products {&#xA;        serialnumber,&#xA;        operation(type:&quot;Curing&quot;) {&#xA;            name,&#xA;            ovenTurnOn,&#xA;            $start: openOvenStart,&#xA;            closeOvenStart,&#xA;            curingStart,&#xA;            curingEnd,&#xA;            $end: openOvenEnd,&#xA;            closeOvenEnd,&#xA;            ovenTurnOff,&#xA;            measurement(from:$start, to:$end){&#xA;                timestamp,&#xA;                value&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",10380213,,10380213,2021-03-18 08:20:44,2021-03-18 08:20:44,Notion of variables in GraphQL,<graphql>,0,2,0,2021-03-17 15:55:26
66720202,2,,66712185,1,,"<p>According to Node.js documentation (<a href=""https://nodejs.org/api/fs.html#fs_fs_readfilesync_path_options"" rel=""nofollow noreferrer"">https://nodejs.org/api/fs.html#fs_fs_readfilesync_path_options</a>), fs.readFileSync() returns a String or Buffer.  From the schema, however, ask() returns an array of type Person which is an object.  The result of fs.readFileSync() should be converted to object before returning:</p>&#xA;<pre><code>ask: () =&gt; {&#xA;  const person = JSON.parse(JSON.stringify(&#xA;    fs.readFileSync(__dirname + path.join('/db.db'), 'utf-8').toString()&#xA;  ));&#xA;  return [person];&#xA;}&#xA;</code></pre>&#xA;<p>Notice that I called JSON.stringify() before parsing it with JSON.parse().  The reason is the file db.db has a javascript object (keys, nanely name and age, without double quotes around them) and not a JSON object (keys with quotes as shown below):</p>&#xA;<pre><code>{&#xA;  &quot;name&quot;:&quot;Linux Age&quot;,&#xA;  &quot;age&quot;: 19&#xA;}&#xA;</code></pre>&#xA;<p>Otherwise, JSON.parse() would have a problem parsing the invalid JSON format:</p>&#xA;<pre><code>{&#xA;  name:&quot;Linux Age&quot;,&#xA;  age: 19&#xA;}&#xA;</code></pre>&#xA;<p>In addition, toString() after calling readFileSync() is needed to convert a Buffer to a string:</p>&#xA;<pre><code>fs.readFileSync(__dirname + path.join('/db.db'), 'utf-8').toString()&#xA;</code></pre>&#xA;",2999531,,2999531,2021-03-20 10:10:17,2021-03-20 10:10:17,"",,0,0,0,2021-03-20 09:53:40
66723720,1,,,0,421,<p>we have a Magento 2 installation and we are building a new frontend using GraphQL. We need to load some information for products that are not visibile individually. They are simple products part of a configurable products. We don't want to make them visible in listing or search but there are places where we have to load a specific variant and show some infos.</p>&#xA;<p>Is there a way to allow GraphQL queries to return those products ? we are trying to load them using SKU.</p>&#xA;<p>Magento version 2.3.4</p>&#xA;<p>Thanks</p>&#xA;,87407,,,,2021-03-20 16:09:32,Magento 2 - Load products invisible individually using GraphQL,<magento><graphql><magento2>,0,2,0,2021-03-20 16:09:32
66723795,1,,,1,163,<p>I'm searching for a way to build a custom resolver that returns a list of products. I've tried reading the magento code in vendor but I'm not able to reproduce it on my code.</p>&#xA;<p>We already have working resolvers that returns simple types like strings ora arrays.</p>&#xA;<p>If you can post a snippet or some website with an example it would be great</p>&#xA;<p>Magento version 2.3.4</p>&#xA;<p>Thanks</p>&#xA;,87407,,6124657,2021-03-21 18:07:56,2021-03-21 18:07:56,Magento 2 - GraphQL custom resolver that returns a list of products,<magento><graphql><magento2>,0,0,0,2021-03-20 16:16:32
66735208,1,66737539,,1,1064,"<p>I am trying to bulk update the price on multiple product variants at once. <a href=""https://shopify.dev/docs/admin-api/graphql/reference/products-and-collections/productvariantsbulkupdate"" rel=""nofollow noreferrer"">I'm just copying the &quot;interactive&quot; example from Shopify's page</a></p>&#xA;<p>All I did was copy and paste the code and put in my own id's. And of course it does not work.</p>&#xA;<p>It looks like this:</p>&#xA;<pre><code>mutation productVariantsBulkUpdate($variants: [ProductVariantsBulkInput!]!, $productId: ID!) {&#xA;  productVariantsBulkUpdate(variants: $variants, productId: $productId) {&#xA;    product {&#xA;      cursor&#xA;    }&#xA;    productVariants {&#xA;      cursor&#xA;    }&#xA;    userErrors {&#xA;      code&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>With Variables like this:</p>&#xA;<pre><code>{&#xA;  &quot;variants&quot;: [&#xA;    {&#xA;      id:  &quot;gid://shopify/ProductVariant/39369514385591&quot;,&#xA;      price: &quot;50.00&quot;&#xA;    }&#xA;  ],&#xA;  &quot;productId&quot;: &quot;gid://shopify/Product/6591908577463&quot;&#xA;}&#xA;</code></pre>&#xA;<p>I'm getting this error:&#xA;<code>Variables are invalid JSON: Unexpected token i in JSON at position 30.</code></p>&#xA;",4386626,,,,2021-03-21 21:04:26,How to use Shopify Graphql ProductVariantsBulkInput,<graphql><shopify><shopify-api>,1,0,0,2021-03-21 17:08:02
66735246,1,,,0,40,"<p>I'm trying to build a RSS feed from my Contentful GraphQL Data. I'm using this tutorial to build the RSS feed: <a href=""https://www.contentful.com/blog/2021/03/05/generate-blog-rss-feed-with-javascript-and-netlify/"" rel=""nofollow noreferrer"">https://www.contentful.com/blog/2021/03/05/generate-blog-rss-feed-with-javascript-and-netlify/</a>.</p>&#xA;<p>This query here work in the GraphQL playground:</p>&#xA;<pre><code>query {&#xA;  sourcePostCollection(limit: 1) {&#xA;    items {&#xA;      sys {&#xA;        id&#xA;      }&#xA;      postTracksCollection(limit: 5) {&#xA;        items {&#xA;          name&#xA;          author&#xA;          genre&#xA;          bpm&#xA;        }&#xA;      }&#xA;      postSourcesCollection(limit: 5) {&#xA;        items {&#xA;          linkTitle&#xA;          linkUrl&#xA;          linkType&#xA;          linkOwner&#xA;          authorName&#xA;          authorWebsite&#xA;          linkFeatured&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>When its time to print the &quot;postTracksCollection name&quot;</p>&#xA;<pre><code>function buildRssItems(items) {&#xA;  const truncateLength = 44;&#xA;&#xA;  return items&#xA;    .map((item) =&gt; {&#xA;      return `&#xA;        &lt;item&gt;&#xA;          &lt;name&gt;${item.postTracksCollection.items.name}&lt;/name&gt;&#xA;        &lt;/item&gt;&#xA;        `;&#xA;    })&#xA;    .join(&quot;&quot;);&#xA;}&#xA;</code></pre>&#xA;<p>It returns undefined in the RSS feed&#xA;<img src=""https://i.stack.imgur.com/L4Ecp.jpg"" alt=""RSS Feed"" /></p>&#xA;<p>I'm pretty sure I'm missing something either here in this part of the code:</p>&#xA;<pre><code>let posts = &quot;&quot;;&#xA;&#xA;const req = https.request(options, (res) =&gt; {&#xA;  res.on(&quot;data&quot;, (data) =&gt; {&#xA;    posts += data;&#xA;  });&#xA;&#xA;  res.on(&quot;end&quot;, () =&gt; {&#xA;    const parsedPosts = JSON.parse(posts);&#xA;    resolve(parsedPosts.data.sourcePostCollection.items);&#xA;  });&#xA;});&#xA;&#xA;req.on(&quot;error&quot;, (e) =&gt; {&#xA;  console.error(e);&#xA;});&#xA;&#xA;req.write(JSON.stringify({ query }));&#xA;req.end();&#xA;</code></pre>&#xA;<p>or i'm not writing the way to print nested items right. Any thoughts?</p>&#xA;<hr />&#xA;<p>Update:</p>&#xA;<p>So I'm trying to build my RSS feed to match this email design Im working on. The goal is to take my contentful post (which gathers multiple post types together), create an RSS feed from that post. Then Mailchimp reads the latest RSS feed, and creates an email post to send to my subscribers.</p>&#xA;<p><img src=""https://i.stack.imgur.com/yfkP7.jpg"" alt=""bbxemail"" /></p>&#xA;<p>As you see, I just need:</p>&#xA;<ol>&#xA;<li>Track name</li>&#xA;<li>Track genre</li>&#xA;<li>Source name</li>&#xA;<li>Source URL</li>&#xA;</ol>&#xA;",1394725,,1394725,2021-03-21 18:52:17,2021-03-21 18:52:17,Print Nested GraphQL Data in a RSS Feed using Javascript,<javascript><node.js><graphql>,0,10,0,2021-03-21 17:11:12
66736086,1,,,1,1664,"<p>This is my fist time creating an order. From what I understand you need to create a draft order - add products, price, email, notes etc. I am just creating a test query now to see how it works and it tells me &quot;Add at least 1 product&quot;. I am trying to add a product, but I dont know how. I have been messing around and reading and cant figure it out.</p>&#xA;<p>This is my query:</p>&#xA;<pre><code>mutation draftOrderCreate {&#xA;  draftOrderCreate(input: {email: &quot;123abc@hotmail.com&quot;}) {&#xA;    draftOrder {&#xA;      id&#xA;      order {&#xA;        id&#xA;      }&#xA;&#xA;      status&#xA;&#xA;    }&#xA;    &#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>If anyone can give me an example on how to add products to this would be great. Thanks.</p>&#xA;",12895286,,,,2021-03-21 21:20:37,"Shopify Admin API, graphQL, create draft order - add products",<graphql><shopify>,1,0,0,2021-03-21 18:30:52
66737539,2,,66735208,2,,"<p>It's OK for me. (with some quick tweaks)</p>&#xA;<p>I tweaked the request a little since the <code>cursor</code> is not present in the product/variant object, don't know why Shopify has not updated the example in their docs.</p>&#xA;<pre><code>mutation productVariantsBulkUpdate($variants: [ProductVariantsBulkInput!]!, $productId: ID!) {&#xA;  productVariantsBulkUpdate(variants: $variants, productId: $productId) {&#xA;    product {&#xA;      id&#xA;    }&#xA;    productVariants {&#xA;      id&#xA;      price&#xA;    }&#xA;    userErrors {&#xA;      code&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>So try to fix the query and remove the <code>cursor</code> object and check if you are using the proper end-point since the bulk operation is available in the unstable version only if I'm not mistaken.</p>&#xA;<p>See the image below showing that the response is OK for me.</p>&#xA;<p><a href=""https://i.stack.imgur.com/H7oNO.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/H7oNO.jpg"" alt=""enter image description here"" /></a></p>&#xA;",2329464,,,,2021-03-21 21:04:26,"",,0,1,0,2021-03-21 21:04:26
66737677,2,,66736086,3,,"<p>You can create an draft order like so:</p>&#xA;<pre><code>mutation draftOrderCreate($items: DraftOrderInput!) {&#xA;  draftOrderCreate(input: $items) {&#xA;    draftOrder {&#xA;      id&#xA;      order {&#xA;        id&#xA;      }&#xA;      status&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>query variables:</p>&#xA;<pre><code>{&#xA;    &quot;items&quot;: {&#xA;        &quot;email&quot;: &quot;123abc@hotmail.com&quot;,&#xA;        &quot;lineItems&quot;: [&#xA;            {&#xA;                &quot;variantId&quot;: &quot;gid://shopify/ProductVariant/32231002996788&quot;,&#xA;                &quot;quantity&quot;: 1&#xA;            }&#xA;        ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<hr />&#xA;<p>Or if you don't want to use query variables you can pass the whole object as the input:</p>&#xA;<pre><code>mutation draftOrderCreate {&#xA;  draftOrderCreate(input: {email: &quot;123abc@hotmail.com&quot;, lineItems: [{variantId: &quot;gid://shopify/ProductVariant/32231002996788&quot;, quantity: 1}]}) {&#xA;    draftOrder {&#xA;      id&#xA;      order {&#xA;        id&#xA;      }&#xA;      status&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2329464,,,,2021-03-21 21:20:37,"",,0,3,0,2021-03-21 21:20:37
66737718,1,,,0,138,"<p>I try to make mutation with appolo, but I don't know what's the problem.</p>&#xA;<p>Everything work in the playground.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const ADD_PURCHASE = gql`&#xA;  mutation addPurchaseById($data: {uniqueId: String, items: [{price: Int, name: String, description: String, image: String}]}) {&#xA;    addPurchaseById(data: $data) {&#xA;      price&#xA;      name&#xA;      image&#xA;      description&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>const [addPurchaseById, {data, loading}] = useMutation(ADD_PURCHASE);&#xA;</code></pre>&#xA;<p>here, my <code>cart</code> is an array of object: name, price, description, image.&#xA;This is how I try to make the request:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const uniqueId = getUniqueId();&#xA;await addPurchaseById({&#xA;   variables: {data: {uniqueId: uniqueId, items: cart}},&#xA;});&#xA;</code></pre>&#xA;<p>On my server part, I have this in my typeDefs :</p>&#xA;<pre><code>input ItemMutation {&#xA;        price: Float!&#xA;        name: String!&#xA;        image: String!&#xA;        description: String!&#xA;    }&#xA;&#xA;    input Purchase {&#xA;        uniqueId: String!&#xA;        items: [ItemMutation]!&#xA;    }&#xA;&#xA;    type Mutation {&#xA;        addPurchaseById(data: Purchase!): [Item]!&#xA;    }&#xA;</code></pre>&#xA;",14972909,,,,2021-03-21 21:26:07,appolo useMutation array of object,<firebase><react-native><graphql>,0,3,0,2021-03-21 21:26:07
66747352,2,,66744433,0,,"<p>Just use CSS Modules as stated in the DOCS <a href=""https://www.gatsbyjs.com/docs/how-to/styling/css-modules/"" rel=""nofollow noreferrer"">https://www.gatsbyjs.com/docs/how-to/styling/css-modules/</a> and for the rest which is global, keep using global css.</p>&#xA;<p>Sample:</p>&#xA;<ol>&#xA;<li>Rename your style file to partner.module.sass and import as such</li>&#xA;<li>Rename rules with double dash (section--gradient) to camelCase (sectionGradient)</li>&#xA;</ol>&#xA;<pre><code>...&#xA;import * as styles from '../components/partner.module.sass'&#xA;&#xA;export const PartnerPageTemplate = ({ title, content, contentComponent }) =&gt; {&#xA;  ...&#xA;  return (&#xA;    &lt;section className={`${styles.section} ${styles.sectionGradient}}`}&gt;&#xA;       ...&#xA;    &lt;/section&gt;&#xA;  )&#xA;}&#xA;</code></pre>&#xA;",5865099,,,,2021-03-22 13:47:23,"",,0,1,0,2021-03-22 13:47:23
66753510,1,,,0,96,"<p>I'd like to use a GraphQL code snippet in an '.mdx' file:</p>&#xA;<pre><code>---&#xA;title: Releasing A GitHub Action&#xA;date: &quot;2021-03-22T12:35:16&quot;&#xA;slug: /blog/releasing-a-github-action&#xA;description: &quot;After using other people's GitHub Actions, I thought I'd give one a shot.&quot;&#xA;---&#xA;&#xA;&#xA;this is text in the .mdx file&#xA;&#xA;/```graphql&#xA;mutation UpdateAllEnvironmentVariablesForSite(&#xA;  $id: UUID!&#xA;  $buildEnvironmentVariables: [TagInput!]!&#xA;  $previewEnvironmentVariables: [TagInput!]!&#xA;) {&#xA;  updateBuildEnvironmentVariablesForSite: updateEnvironmentVariablesForSite(&#xA;    id: $id&#xA;    environmentVariables: $buildEnvironmentVariables&#xA;    runnerType: BUILDS&#xA;  ) {&#xA;    success&#xA;    message&#xA;  }&#xA;  updatePreviewEnvironmentVariablesForSite: updateEnvironmentVariablesForSite(&#xA;    id: $id&#xA;    environmentVariables: $previewEnvironmentVariables&#xA;    runnerType: PREVIEW&#xA;  ) {&#xA;    success&#xA;    message&#xA;  }&#xA;}&#xA;/```&#xA;Continuing to write .mdx&#xA;</code></pre>&#xA;<p>When I develop this, it looks fine. When I build it in Gatsby Cloud, I get the error</p>&#xA;<blockquote>&#xA;<p>Encountered unknown language 'graphql'. If 'graphql' is an alias for a supported language, use the 'languageAliases' plugin option to map it to the canonical language name.</p>&#xA;</blockquote>&#xA;<p>How do I get around this?</p>&#xA;",14416045,,14416045,2021-03-23 18:02:22,2021-03-23 18:02:22,How to use Gatsby code snippet with GraphQL,<graphql><gatsby>,1,1,0,2021-03-22 20:37:16
66782888,1,,,2,833,"<p>We use Vue with apollo and I have difficulties to handle errors properly.</p>&#xA;<p>This is on of our components</p>&#xA;<pre class=""lang-html prettyprint-override""><code>&lt;template&gt;&#xA;   &lt;div v-if=&quot;product&quot;&gt;&#xA;      &lt;router-view :key=&quot;product.id&quot; :product=&quot;product&quot; /&gt;&#xA;   &lt;/div&gt;&#xA;   &lt;div v-else-if=&quot;!this.$apollo.loading&quot;&gt;&#xA;      &lt;p&gt;Product is not available anymore&lt;/p&gt;&#xA;   &lt;/div&gt;&#xA;&lt;/template&gt;&#xA;    &#xA;    &lt;script&gt;&#xA;import productQuery from &quot;@/graphql/product.graphql&quot;;&#xA;&#xA;export default {&#xA;   name: &quot;ProductWrapper&quot;,&#xA;   props: [&quot;productId&quot;],&#xA;   apollo: {&#xA;      product: {&#xA;         query: productQuery,&#xA;         variables() {&#xA;            return {&#xA;               productId: this.productId,&#xA;            };&#xA;         },&#xA;      },&#xA;   },&#xA;};&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;<p>If the product is not available anymore, we have three options in the backend:&#xA;a) the backend just can send <code>null</code> without errors&#xA;b) <a href=""https://blog.logrocket.com/handling-graphql-errors-like-a-champ-with-unions-and-interfaces/"" rel=""nofollow noreferrer"">send an error object as part of the data with unions</a>&#xA;c) send some error extensions with apollo for easy error handling in the client</p>&#xA;<p>Option a) seems to be a strange option&#xA;Option b) is too complicated for our use case.&#xA;So I decided for option c):</p>&#xA;<p>In our backend we use apollo error extensions to send some proper errorCode for the client to handle.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;   data: { }&#xA;   errors: [&#xA;      {&#xA;         &quot;message&quot;: &quot;NOT_FOUND&quot;,&#xA;         &quot;locations&quot;: ...,&#xA;         &quot;path&quot;: ...&#xA;         &quot;extensions&quot;: {&#xA;         &quot;details&quot;: [],&#xA;         &quot;errorCode&quot;: &quot;NOT_FOUND&quot;,&#xA;         &quot;message&quot;: &quot;NOT_FOUND&quot;,&#xA;         &quot;classification&quot;: &quot;DataFetchingException&quot;&#xA;      }&#xA;   ]&#xA;}&#xA;</code></pre>&#xA;<p>Everything works fine as product results in null anyway as no data is sent, just an error.&#xA;But vue-apollo is logging this to console.error. I don't want any logging to console.error as the user sees an red mark in his browser. But I want it to pop up in the console.error if nobody else has handled this error.</p>&#xA;<p>I can add an error handling in three places:</p>&#xA;<ol>&#xA;<li>error() inside query definition</li>&#xA;<li>$error() default handler for all queries</li>&#xA;<li><a href=""https://www.apollographql.com/docs/react/api/link/apollo-link-error/"" rel=""nofollow noreferrer"">ErrorLink</a></li>&#xA;</ol>&#xA;<p>ErrorLink seems to be the wrong place as only the query in the component knows that NOT_FOUND is not fatal but can happen sometimes. Same is true for $error</p>&#xA;<p>So how do I say: this error might happen, I am well prepared for this. All other errors should be handled by the ErrorLink. How can I <em>consume</em> an error in my component?</p>&#xA;",351758,,8501460,2021-04-01 07:07:49,2022-07-15 06:02:39,How Do I consume errors in my Vue Graphql component and let other errors be handled globally?,<error-handling><graphql><apollo><vue-apollo>,1,0,0,2021-03-24 14:12:18
66798941,2,,59698546,0,,"<p>The best approach is to use the loading attribute:</p>&#xA;<pre><code>&lt;template&gt;&#xA;    &lt;div v-if=&quot;!this.$apollo.loading&quot;&gt;&#xA;        Your product: {{product}}&#xA;    &lt;/div&gt;&#xA;&lt;/template&gt;&#xA;&#xA;&lt;script&gt;&#xA;&#xA;export default {&#xA;    name: &quot;Product&quot;,&#xA;    apollo: {&#xA;        product: {&#xA;            query: productQuery,&#xA;            variables() {&#xA;                return {&#xA;                    productId: this.productId&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;",351758,,,,2021-03-25 11:53:02,"",,0,1,0,2021-03-25 11:53:02
66804117,1,,,1,741,"<p>I don't think I am doing things the proper graphQL way, but I am not sure how to achieve it in graphQL.</p>&#xA;<p>I have the following schema, that is then uploaded to FaunaDB, and they do some magic to turn it into a usable graphQL api endpoint.</p>&#xA;<pre><code>type Catalog {&#xA;  decor: Boolean&#xA;  clothing: Boolean&#xA;  supplies: Boolean&#xA;  furniture: Boolean&#xA;  owner: User&#xA;}&#xA;&#xA;type Decor {&#xA;  description: String&#xA;  pieces: Int&#xA;  purchaser: String&#xA;  alterations: Boolean&#xA;  cost: Int&#xA;  purchaseDate: Date&#xA;  category: String&#xA;  image: String&#xA;  itemNum: Int&#xA;  owner: User!&#xA;  visible: Boolean&#xA;}&#xA;&#xA;type DecorSheet {&#xA;  sheetName: String&#xA;  refIdArray: String&#xA;  owner: User!&#xA;}&#xA;&#xA;type User {&#xA;  email: String! @unique&#xA;  catalog: Catalog&#xA;  decor: [Decor!] @relation&#xA;  decorSheet: [DecorSheet!] @relation&#xA;}&#xA;&#xA;type Query {&#xA;  getMultipleDecors(DecorId: [ID!]): [Decor]&#xA;    @resolver(name: &quot;get_multiple_decors&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>I have the need to Create a DecorSheet type, I need the refIdArray, to be an array of objects like so</p>&#xA;<pre><code>[&#xA;    {&#xA;        &quot;refId0&quot;: &quot;293164663883956749&quot;&#xA;    },&#xA;    {&#xA;        &quot;refId1&quot;: &quot;293526016787218952&quot;&#xA;    }&#xA;]&#xA;</code></pre>&#xA;<p>I have the following mutation gql for apollo to trigger</p>&#xA;<pre><code>const CREATE_DECOR_SHEET = gql`&#xA;  mutation CreateDecorSheet(&#xA;    $ownerID: ID!&#xA;    # $description: String!&#xA;    $sheetName: String&#xA;    $refIdArray: String!&#xA;  ) {&#xA;    createDecorSheet(data: { sheetName: $sheetName, refIdArray: $refIdArray, owner: { connect: $ownerID } }) {&#xA;      refIdArray&#xA;      sheetName&#xA;      _id&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>and I am calling it here</p>&#xA;<pre><code>const res = await createDecorSheet({&#xA;      variables: {&#xA;        ownerID: user.id,&#xA;        // ...dataMassage,&#xA;        sheetName: dataForm.sheetName,&#xA;        refIdArray: JSON.stringify(chosenValues), //A WAY TO DO THIS GRAPHQL STYLE&#xA;      },&#xA;    }).catch(console.error);&#xA;</code></pre>&#xA;<p>See currently I am stringifying the chosenValues which is the same values I listed above of the refId and Id objects in the array.</p>&#xA;<p>Is there a better way to do this, do I need to write a custom mutation that you can pass an array of objects to refIdArray.</p>&#xA;<p>If anyone could help with this that would be great.</p>&#xA;<p>Thanks</p>&#xA;",2949184,,,,2021-03-28 18:11:05,How to in GraphQL mutation pass an array to a field using FaunaDB,<javascript><reactjs><graphql><apollo><faunadb>,1,5,0,2021-03-25 16:54:13
66816476,1,66827815,,0,204,"<p>i am new to gremlin, here is what i am trying to do..</p>&#xA;<p>I have a 'product' vertex and a 'user' vertex. I have a product -&gt; 'linkedto' -&gt; user edge.. This edge has 2 properties 'type' and 'joinedon'.   I am trying to fetch list of users who are linked to the product grouped by the 'type' property of the edge. The output should be something like this:</p>&#xA;<p>type: [</p>&#xA;<p>{name, email..., joinedon}, // user1 details + joinedon (from the edge)</p>&#xA;<p>{name, email..., joinedon}, // user2 details + joinedon (from the edge)</p>&#xA;<p>]</p>&#xA;<p>I have got to a point where i get grouped users with their details with this query</p>&#xA;<pre><code>&#xA;g.V(productid).outE('linkedto').as('a')&#xA;  .inV().as('b').group().by(select('a').values('type')).unfold()&#xA;  .project('type','user').by(select(keys)).by(select(values))&#xA;&#xA;</code></pre>&#xA;<p>Questions:</p>&#xA;<ol>&#xA;<li>How can i get the joinedon from edge in result?</li>&#xA;<li>How to select only specific fields from the edge and vertex (user) in the result?</li>&#xA;</ol>&#xA;",5058380,,,,2021-03-27 03:43:49,How to group by edge property and get vertex+edge properties in the result?,<group-by><graphql><gremlin><tinkerpop3>,1,1,0,2021-03-26 11:55:39
66819201,2,,66818696,1,,"<p>Try to add <code>deep:true</code> option since the watched property is an object:</p>&#xA;<pre><code>  watch(product,()=&gt;{&#xA;    //product.value.value is undefined now&#xA;    console.log('product changed:',product.value,product.value?.value)&#xA;    //later when I run window.product.value.product.id in the console&#xA;    //  I get the id of the product&#xA;    window.product = product.value;&#xA;  },{deep:true})&#xA;</code></pre>&#xA;",8172857,,,,2021-03-26 14:51:48,"",,0,0,0,2021-03-26 14:51:48
66841191,2,,66831288,0,,"<p>Your 'raw' DB result:</p>&#xA;<ul>&#xA;<li>is an array;</li>&#xA;<li>1st element is an object with records/items encoded as index-named properties;</li>&#xA;</ul>&#xA;<p>Your required mutation (why not a query type!?) response should <code>tree: [fooSchemaForBothTables!]</code> - object with <code>tree</code> named property (really required additional nesting level?) with an array of <code>fooSchemaForBothTables</code>-shaped objects as values:</p>&#xA;<pre><code>{&#xA;  tree: [&#xA;    {&#xA;      id: 1,&#xA;      foo_name: 'Cars`,&#xA;      column_from_second_table: 'whatever`,&#xA;    },&#xA;    {&#xA;      id: 2,&#xA;      foo_name: 'Chevy`,&#xA;      column_from_second_table: 'whatever`,&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p><strong>Your job is to convert DB response into the required mutation result shape.</strong></p>&#xA;<p><strong>Hint:</strong> You can hardcode this DB result (some input const) in a side project (codesandbox) and write some conversion fn. When ready use it in this resolver.</p>&#xA;<p>You can also search for some more reliable <strong>sequelize</strong> (leave graphql alone for a moment) tutorials with 'more working' model mapping.</p>&#xA;<h2>Next step?</h2>&#xA;<p>If it is a tree then why not return this as a tree structure - nested nodes/types?</p>&#xA;",6124657,,,,2021-03-28 12:00:48,"",,0,2,0,2021-03-28 12:00:48
66854355,1,,,0,527,"<p>I'm very new to programming with react/javascript/node.  I'm using Shopify CLI and generated a boilerplate app that uses react/next.js/apollo.</p>&#xA;<p>I don't know if I'm using the right approach for what I want to achieve.  I'm basically trying to update my app's database of the merchants store information when they log in.</p>&#xA;<p>My logic will be:</p>&#xA;<ul>&#xA;<li>Merchant logs into app.</li>&#xA;<li>My app will check database and see if data is more than 24 hours old.</li>&#xA;<li>If so it'll sync the data to ensure the app is up to date.</li>&#xA;<li>I don't need to display anything if successful but I do want to display an error if either the graphql fails or the database update fails.</li>&#xA;</ul>&#xA;<p>So far I'm just testing the graphql side.  I created a function that retrieves the data from shopify via grapql.  This seems to be working as I get the data back and if I add an error to the graphql I get the error return.</p>&#xA;<p>I want to display a shopify polaris banner when they get an error.  I've tried various ways to do this from my google searches but haven't found the proper approach.</p>&#xA;<p><strong>In the code below I get the banner display when there's an error however because it was rendered through the return of the function <em>the dismiss doesn't work</em>.</strong>  I am unable to find a way to have it display the error while allowing it to be dismissed by the merchant.</p>&#xA;<pre><code>function QueryShopifyStoreInfo() {&#xA;    const { loading, error, data } = useQuery(GET_STORE_INFORMATION);&#xA;  &#xA;    if (loading) return null;&#xA;    if (error)  return  (&#xA;      &lt;Layout.Section&gt;&#xA;        &lt;Banner title=&quot;Error Syncing with Shopify&quot; status=&quot;critical&quot; onDismiss={activeUpdateError}&gt;&#xA;          &lt;p&gt;There was an error syncing your store data with Shopify.  We have been notified of the error and will investigate. This does not impact the functionality of the app. You can continue to use the app as normal.&lt;/p&gt;&#xA;          &lt;p&gt;If you continue to receive this error, please send us a message.&lt;/p&gt;&#xA;        &lt;/Banner&gt;&#xA;      &lt;/Layout.Section&gt;&#xA;    );&#xA;     &#xA;    return (&#xA;      null&#xA;    );&#xA;  }&#xA;</code></pre>&#xA;<p>I apologize for my lack of knowledge.  I'm using this app with going through various courses on react/javascript to learn.  I appreciate your feedback.</p>&#xA;<p><strong>Update (for comment below):</strong></p>&#xA;<p>I cleaned it up a bit but here's the code so far for index.js</p>&#xA;<pre><code>import React, {useState, useCallback, Fragment} from 'react';&#xA;import gql from 'graphql-tag';&#xA;import { useQuery } from 'react-apollo';&#xA;import {&#xA;  Layout,&#xA;  Page,&#xA;  Card,&#xA;  Banner,&#xA;  &#xA;} from '@shopify/polaris';&#xA;&#xA;&#xA;export default function App() {&#xA;&#xA;  // Setup useStates&#xA;  const [active, setActive] = useState(false);&#xA;  const [UpdateErrorActive, setUpdateErrorActive] = useState(false);&#xA;&#xA;&#xA;  // Setup Variables&#xA;  //let UpdateErrorActive = false;  // Error Syncing Shopify Data&#xA;&#xA;  // Setup Handles/useCallBacks&#xA;  &#xA;  &#xA;  // Setup Toggle Callbacks&#xA;  const toggleActive = useCallback(&#xA;    () =&gt; {&#xA;      setActive(!true);&#xA;    },&#xA;    [true],&#xA;  );&#xA;&#xA;  &#xA;&#xA;  // Toggle Update Error to Active&#xA;  const activeUpdateError = useCallback(&#xA;    () =&gt; {&#xA;      setUpdateErrorActive(!true);&#xA;    },&#xA;    [true],&#xA;  );&#xA;&#xA;&#xA; &#xA;&#xA;  // Setup Breakcrumbs, Primary, Secondary Actions (if needed)&#xA;&#xA;&#xA;  // Setup Item Lists (choiceListItems in Polaris Sample)&#xA;&#xA;  // Setup Changeable Texts based on status&#xA;    // const accountSectionDescription = connected&#xA;    //   ? 'Disconnect your account from your Shopify store.'&#xA;    //   : 'Connect your account to your Shopify store.';&#xA;&#xA;&#xA;  // Setup Return Markups for Display&#xA;  // const shopifyUpdateStatusMarkup = UpdateErrorActive ? (&#xA;  //   &lt;Layout.Section&gt;&lt;Banner title=&quot;Error Syncing with Shopify&quot; status=&quot;critical&quot; onDismiss={activeUpdateError}&gt;&#xA;  //         &lt;p&gt;There was an error syncing your store data with Shopify.  We have been notified of the error and will investigate. This does not impact the functionality of the app. You can continue to use the app as normal.&lt;/p&gt;&#xA;  //         &lt;p&gt;If you continue to receive this error, please send us a message.&lt;/p&gt;&#xA;  //       &lt;/Banner&gt;&lt;/Layout.Section&gt;&#xA;  // ) : (&#xA;  //   null&#xA;  // );&#xA;&#xA;  &#xA;// Shopify GraphQL Query&#xA;const GET_STORE_INFORMATION = gql`&#xA;query   {&#xA;  shop {&#xA;    id&#xA;    name&#xA;    email&#xA;    contactEmail&#xA;    description&#xA;    myshopifyDomain&#xA;    url&#xA;    plan{&#xA;      displayName&#xA;      partnerDevelopment &#xA;    }&#xA;  }&#xA;}&#xA;`;&#xA;&#xA;  // Functions&#xA;&#xA;  // Retrieve Shopify Shop Information and update database.&#xA;  function QueryShopifyStoreInfo() {&#xA;&#xA;    const { loading, error, data } = useQuery(GET_STORE_INFORMATION);&#xA;  &#xA;    if (loading) return null;&#xA;    if (error)  return  (&#xA;      &lt;Layout.Section&gt;&#xA;        &lt;Banner title=&quot;Error Syncing with Shopify&quot; status=&quot;critical&quot; onDismiss={activeUpdateError}&gt;&#xA;          &lt;p&gt;There was an error syncing your store data with Shopify.  We have been notified of the error and will investigate. This does not impact the functionality of the app. You can continue to use the app as normal.&lt;/p&gt;&#xA;          &lt;p&gt;If you continue to receive this error, please send us a message.&lt;/p&gt;&#xA;        &lt;/Banner&gt;&#xA;      &lt;/Layout.Section&gt;&#xA;    );&#xA;    &#xA;    console.log(&quot;Get Store Information - data:&quot;)&#xA;    console.log(data);&#xA;  &#xA;    const shopID = data.shop.id;&#xA;    const shopName = data.shop.name;&#xA;    const email = data.shop.email;&#xA;    const contactEmail = data.shop.contactEmail;&#xA;    const description = data.shop.description;&#xA;    const myshopifyDomain = data.shop.myshopifyDomain;&#xA;    const url = data.shop.url;&#xA;    const planDisplayName = data.shop.plan.displayName;&#xA;    const partnerDevelopment = data.shop.plan.partnerDevelopment;&#xA;    console.log(&quot;partnerDevelopment&quot;, partnerDevelopment);&#xA;&#xA;    return (&#xA;      null&#xA;    );&#xA;  }&#xA;&#xA;&#xA;  return (&#xA;    &lt;Page&#xA;  fullWidth&#xA;  title=&quot;My Title&quot;&#xA;  &gt;&#xA;    &lt;Layout&gt;&#xA;      &lt;QueryShopifyStoreInfo /&gt;&#xA;      {/* {shopifyUpdateStatusMarkup} */}&#xA;      &lt;Layout.Section&gt;&#xA;        &lt;Card title=&quot;Online store dashboard&quot; sectioned&gt;&#xA;        &lt;p&gt;Lots of text here to go with this card.&lt;/p&gt;&#xA;        &lt;/Card&gt;&#xA;      &lt;/Layout.Section&gt;&#xA;    &lt;/Layout&gt;&#xA;      &#xA;  &lt;/Page&gt;&#xA;  );&#xA;}&#xA;</code></pre>&#xA;<p>Now the only thing is that the page generated with the Shopify CLI has it setup to create classes like this:</p>&#xA;<pre><code>class FindA extends React.Component {&#xA;  state = {&#xA;    discount: '10%',&#xA;  };&#xA;&#xA;  &#xA;&#xA;  render() {&#xA;    const { discount } = this.state;&#xA;&#xA;    &#xA;&#xA;    return (&#xA;      &lt;Page&gt;&#xA;        &lt;Layout&gt;&#xA;          &lt;Layout.AnnotatedSection&#xA;            title=&quot;Test - Find A Page&quot;&#xA;            description=&quot;Add a product to Sample App, it will automatically be discounted.&quot;&#xA;          &gt;&#xA;            &lt;Card sectioned&gt;&#xA;            &#xA;              &lt;Form onSubmit={this.handleSubmit}&gt;&#xA;                &lt;FormLayout&gt;&#xA;                  &lt;TextField&#xA;                    value={discount}&#xA;                    onChange={this.handleChange('discount')}&#xA;                    label=&quot;Discount percentage&quot;&#xA;                    type=&quot;discount&quot;&#xA;                  /&gt;&#xA;                  &lt;Stack distribution=&quot;trailing&quot;&gt;&#xA;                    &lt;Button primary submit&gt;&#xA;                      Save&#xA;                    &lt;/Button&gt;&#xA;                  &lt;/Stack&gt;&#xA;                &lt;/FormLayout&gt;&#xA;              &lt;/Form&gt;&#xA;              &#xA;            &lt;/Card&gt;&#xA;            &#xA;          &lt;/Layout.AnnotatedSection&gt;&#xA;        &lt;/Layout&gt;&#xA;      &lt;/Page&gt;&#xA;    );&#xA;  }&#xA;&#xA;  handleSubmit = () =&gt; {&#xA;    this.setState({&#xA;      discount: this.state.discount,&#xA;    });&#xA;    console.log('submission', this.state);&#xA;  };&#xA;&#xA;  handleChange = (field) =&gt; {&#xA;    return (value) =&gt; this.setState({ [field]: value });&#xA;  };&#xA;}&#xA;&#xA;export default FindA;&#xA;</code></pre>&#xA;<p>The above is just a test page from another page to test routes. It serves no purpose but you can see that it's using the class instead of a function like the app.  The function used in index.js was copied from shopify's react-app next.js example on github.  This might be completely inappropriate to use in this type of app.</p>&#xA;<pre><code>export default function App() {&#xA;</code></pre>&#xA;<p>Any guidance on how I should do this so that it's proper react/javascript is appreciated.</p>&#xA;<p><strong>Basically my goal is to just query a mongodb database for the shop data and if it's outdated to update it and display a polaris banner that's dismissable if there's an error with the GraphQL or the database queries.</strong></p>&#xA;<p>Simple when you know what you're doing. LOL</p>&#xA;",978531,,978531,2021-03-29 14:41:08,2021-03-30 06:04:53,How do I dismiss a shopify polaris banner on error returned with graphql useQuery?,<reactjs><graphql><next.js><shopify-api><shopify-api-node>,1,1,0,2021-03-29 12:39:49
66896469,1,66960707,,0,359,"<p>I want to make a PHP POST request to &quot;The Graph&quot; API. I've been unable to find an example of this.</p>&#xA;<p>For instance, how would I convert the example query for Polymarket into a PHP POST request?&#xA;<a href=""https://thegraph.com/explorer/subgraph/tokenunion/polymarket-matic?selected=playground"" rel=""nofollow noreferrer"">https://thegraph.com/explorer/subgraph/tokenunion/polymarket-matic?selected=playground</a></p>&#xA;<pre><code>{&#xA;  globals(first: 5) {&#xA;    id&#xA;    numConditions&#xA;    numOpenConditions&#xA;    numClosedConditions&#xA;  }&#xA;  accounts(first: 5) {&#xA;    id&#xA;    creationTimestamp&#xA;    lastSeenTimestamp&#xA;    collateralVolume&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>So far I have</p>&#xA;<pre><code>    $sUrl=&quot;https://api.thegraph.com/subgraphs/name/tokenunion/polymarket-matic&quot;;&#xA;    $query=&quot;query {&#xA;    globals(first: 5) {&#xA;      id&#xA;      numConditions&#xA;      numOpenConditions&#xA;      numClosedConditions&#xA;    }&#xA;    accounts(first: 5) {&#xA;      id&#xA;      creationTimestamp&#xA;      lastSeenTimestamp&#xA;      collateralVolume&#xA;    }&#xA;}&quot;;&#xA;&#xA;    $aData=array('query' =&gt; $query);&#xA;    &#xA;    $options = array(&#xA;            'https' =&gt; array(&#xA;                    'header'  =&gt; &quot;Content-type: application/x-www-form-urlencoded\r\n&quot;,&#xA;                    'method'  =&gt; 'POST',&#xA;                    'content' =&gt; http_build_query($aData)&#xA;            )&#xA;    );&#xA;    &#xA;    $context  = stream_context_create($options);&#xA;    $result = file_get_contents($sUrl, false, $context);&#xA;    var_dump($result);&#xA;</code></pre>&#xA;<p>And this just returns a GraphiQL example.</p>&#xA;",856932,,856932,2021-04-01 02:26:49,2021-04-05 22:50:10,How do I make a PHP POST Request to TheGraph API?,<php><graphql>,1,2,0,2021-03-31 23:15:32
66939247,2,,66923094,3,,"<p>You need first to get the repository id using the following request:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>query FindRepo {&#xA;  repository(owner: &quot;johndoe&quot;, name: &quot;awesome-repo&quot;) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Then you call the mutation request by replacing the id you've got in the response in <code>repositoryId</code> field :</p>&#xA;<pre class=""lang-json prettyprint-override""><code>mutation CreateIssue {&#xA;  createIssue(input: {repositoryId: &quot;[ID from previous call]&quot;, title: &quot;TestIssue&quot;, body: &quot;Not able to create an issue&quot;}) {&#xA;    issue {&#xA;      number&#xA;      body&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>You can try both call in the <a href=""https://docs.github.com/en/graphql/overview/explorer"" rel=""nofollow noreferrer"">graphql explorer</a> and running first the <code>FindRepo</code> request and then <code>CreateIssue</code></p>&#xA;",2614364,,,,2021-04-04 08:14:34,"",,0,0,0,2021-04-04 08:14:34
66951082,1,66952143,,1,42,"<p><strong>Transaction</strong>:</p>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th style=""text-align: left;"">TID</th>&#xA;<th style=""text-align: center;"">TStatus</th>&#xA;<th style=""text-align: right;"">TDate</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td style=""text-align: left;"">3</td>&#xA;<td style=""text-align: center;"">1</td>&#xA;<td style=""text-align: right;"">2020-02-20</td>&#xA;</tr>&#xA;<tr>&#xA;<td style=""text-align: left;"">3</td>&#xA;<td style=""text-align: center;"">2</td>&#xA;<td style=""text-align: right;"">2020-03-15</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div>&#xA;<p><strong>AmountTable</strong>:</p>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th style=""text-align: left;"">TID</th>&#xA;<th style=""text-align: center;"">amount</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td style=""text-align: left;"">3</td>&#xA;<td style=""text-align: center;"">9874</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div>&#xA;<p>Desired Output :</p>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th style=""text-align: left;"">Start</th>&#xA;<th style=""text-align: center;"">End</th>&#xA;<th style=""text-align: right;"">Amount</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td style=""text-align: left;"">2020-02-20</td>&#xA;<td style=""text-align: center;"">2020-03-15</td>&#xA;<td style=""text-align: right;"">9874</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div>&#xA;<p>Start(transaction.tdate where tstatus=1),End(transaction.tdate where tstatus=2)</p>&#xA;<p>How to write the jpa query for that:&#xA;Something similar to JPA Repo</p>&#xA;<pre><code>@Query(select new com.training.project t.TDate,t.TDate from Transaction t)&#xA;List &lt;Report&gt; fetchReport();&#xA;</code></pre>&#xA;",14711175,,6045800,2021-04-05 09:58:41,2021-04-05 11:18:46,JPA Query for using single column for 2 columns in dersired output,<mysql><spring-boot><spring-data-jpa><graphql>,1,0,0,2021-04-05 09:47:45
66964073,2,,66963671,0,,"<p>Assuming that <code>Islands</code> and <code>featuredActivities</code> are not array or objects and you are getting the correct data from GraphQL query, you just need to correct how you destructure and use the values. Also since you cannot have clashing variable names, you will have to rename the variables from <code>featuredActivities</code></p>&#xA;<pre><code>const PageTemplate = ({&#xA;    data: {&#xA;        islands: {&#xA;            id, title&#xA;            featuredActivities: { id: featuredId , title: featuredTitle },&#xA;        },&#xA;    },&#xA;    ...&#xA;&#xA;    &lt;article key={featuredId}&gt;&#xA;      &lt;h3&gt;{featuredTitle}&lt;/h3&gt;&#xA;    &lt;/article&gt;&#xA;</code></pre>&#xA;",5928186,,5928186,2021-04-06 07:17:40,2021-04-06 07:17:40,"",,0,10,0,2021-04-06 07:01:53
66964968,2,,66963671,1,,"<blockquote>&#xA;<p>And now I want to get the data for this part of the query</p>&#xA;</blockquote>&#xA;<p>You can't destructure all items of the array like this:</p>&#xA;<pre><code>const PageTemplate = ({&#xA;    data: {&#xA;        islands: {&#xA;            featuredActivities: { id },&#xA;            featuredActivities: { title },&#xA;        },&#xA;    },&#xA;</code></pre>&#xA;<p>Why? Because it's an array of objects and the structure (<code>{}</code>) doesn't match the type of the nested item. And, in case it was, and you will need to enter each specific position.</p>&#xA;<p>You may need to:</p>&#xA;<pre><code>const PageTemplate = ({&#xA;    data: {&#xA;        islands: [{&#xA;            featuredActivities: { id },&#xA;            featuredActivities: { title },&#xA;        }],&#xA;    },&#xA;</code></pre>&#xA;<p>Notice the wrapping square brackets (<code>[]</code>).</p>&#xA;<p>However, as I said, it's not ideal since you need to print each specific position of the array of an unknown length. The best and optimal solution is to destructure until <code>featuredActivities</code> and loop through all elements:</p>&#xA;<pre><code>const PageTemplate = ({&#xA;    data: {&#xA;        islands: {&#xA;            id,&#xA;            title,&#xA;            featuredActivities,&#xA;        },&#xA;    },&#xA;}) =&gt; {&#xA;&#xA;&#xA;    return &lt;&gt;&#xA;     {featuredActivities.map(({title, id})=&gt;{&#xA;       return &lt;div key={id}&gt;{title}&lt;/div&gt;&#xA;     })}&#xA;    &lt;/&gt;&#xA;}&#xA;</code></pre>&#xA;<p>In that way, you can destructure inside the same loop in <code>({title, id})</code>, since you are getting for each specific position (<code>featuredActivity</code>, the iterable variable), the <code>title</code> and the <code>id</code> (and so on for the rest of the needed fields).</p>&#xA;",5585371,,5585371,2021-04-06 17:16:33,2021-04-06 17:16:33,"",,0,0,0,2021-04-06 08:14:13
66967205,1,66967896,,0,294,"<p>I have this query to get a product by tag category</p>&#xA;<p>Searching for <code>cd</code> category:</p>&#xA;<pre><code>products(first:10, query:&quot;tags:category:cd&quot;) {&#xA;    edges {}&#xA;}&#xA;</code></pre>&#xA;<p>I am getting results of this but if I search for <code>Yläosat</code>:</p>&#xA;<pre><code>products(first:10, query:&quot;tags:category:Yläosat&quot;) {&#xA;    edges {}&#xA;}&#xA;</code></pre>&#xA;<p>This query does not return results even though there are products in my Shopify having the tag <code>category:Yläosat</code>. I can also search by tag in Shopify products page using the string <code>category:Yläosat</code>. My guess is because of the special character in the word <code>Yläosat</code>. The problem is just in the graphql.</p>&#xA;",2558016,,,,2021-04-06 11:37:03,Shopify GraphQL not returning results for queries with special characters,<reactjs><graphql><shopify>,1,1,0,2021-04-06 10:49:35
66967896,2,,66967205,0,,"<p>Wrap the tag in single quotes.</p>&#xA;<pre><code>{&#xA;  products(first: 10, query:&quot;tag:'category:Yläosat'&quot;){&#xA;    edges {&#xA;      node {&#xA;        handle&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This will fix the issue.</p>&#xA;<p>See the response below.</p>&#xA;<p><a href=""https://i.stack.imgur.com/Rnm92.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Rnm92.jpg"" alt=""enter image description here"" /></a></p>&#xA;",2329464,,,,2021-04-06 11:37:03,"",,0,0,0,2021-04-06 11:37:03
66969051,2,,66968491,1,,"<p>If I understand you correctly, I think you can create a resolver for the fields that are user dependent.</p>&#xA;<p>I don't know the schema exactly but it would look like:</p>&#xA;<pre><code>type Movie {&#xA;   title: String&#xA;   ...more fields here&#xA;   userSpecificInformation: UserSpecificInformation&#xA;}&#xA;</code></pre>&#xA;<p>and then you define a resolver for UserSpecificInformation.</p>&#xA;<p>For more information, check out <a href=""https://graphql.org/learn/execution/"" rel=""nofollow noreferrer"">https://graphql.org/learn/execution/</a></p>&#xA;",11925539,,11925539,2021-04-06 13:58:25,2021-04-06 13:58:25,"",,0,0,0,2021-04-06 12:54:15
66984067,1,,,-2,426,"<p>I want to consumer graphQl API.&#xA;I know we need to use http requester to call graphQl.&#xA;I need some info on forming mutation request using dwl.&#xA;I was trying to hit this service <a href=""https://www.predic8.de/fruit-shop-graphql"" rel=""nofollow noreferrer"">https://www.predic8.de/fruit-shop-graphql</a>&#xA;using below</p>&#xA;<pre><code>%dw2.0&#xA;outputapplication/json&#xA;---&#xA;{&#xA;  &quot;query&quot;: &quot;mutation(\$input:addCategoryInput!) { addCategory(input:\$input) { name products { name}} }&quot;,&#xA;  &quot;variables&quot;: {&#xA;    &quot;input&quot;: {&#xA;      &quot;id&quot;: 6,&#xA;      &quot;name&quot;: &quot;Green Fruits&quot;,&#xA;      &quot;products&quot;: 8&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>its throwing bad request&#xA;But when using below</p>&#xA;<pre><code>%dw 2.0&#xA;output application/json&#xA;---&#xA;{&#xA;  &quot;query&quot;: &quot;mutation {  addCategory(id: 6, name: \&quot;Green Fruits\&quot;, products: 8) {    name    products {      name    }  }}&quot;&#xA;}&#xA;</code></pre>&#xA;<p>its working.&#xA;I want to use above format. Are both not valid requests.&#xA;Please share me your knowledge or guide me to right blog to refer.</p>&#xA;",5251135,,5251135,2021-04-08 11:59:04,2021-04-08 11:59:04,Consume graphQL API from Mule 4,<graphql><dataweave><mule4>,1,0,0,2021-04-07 10:21:14
66985182,1,66988140,,1,1628,"<p>I'm very new to javascript and graphQL in general. I've done my best to do my own research but now it's getting a bit more complicated and I'm a little lost.</p>&#xA;<p>I'm building an app for Shopify (React/Node) where it basically queries all my store's unfulfilled orders, and retrieves all the items in these orders. I'm only looking for one type of item, and it's coffee -- we roast it, so we need to know the total weights for all our coffee products. It looks a little something like this with a plain graphQL query:</p>&#xA;<p><a href=""https://i.stack.imgur.com/CCF0Z.png"" rel=""nofollow noreferrer"">1</a></p>&#xA;<p>I exceed the limits for a plain query though, so I need to make a bulk query request. I've managed poll a bulk query fine and retrieve the data in the console, but this is something I have to actively call within the app - I need to data to be there ready for when my app loads, and then I need the data to be there and manageable so I can map it in the same way I did my plain query... and for the life of me I can't figure it out. Any help would be appreciated, I'm not expecting anyone to do it entirely for me, but I really barely just grasped how to do a .post request. I've only really been pursuing this a month or so now.</p>&#xA;<p>I'm trying to get these queries here:</p>&#xA;<pre><code>import gql from 'graphql-tag';&#xA;&#xA;const BULK_OP = gql`&#xA;mutation {&#xA;  bulkOperationRunQuery(&#xA;    query:&quot;&quot;&quot;&#xA;    {&#xA;      orders(reverse:true, query: &quot;fulfillment_status:unshipped AND status:open&quot;) {&#xA;        edges {&#xA;          node {&#xA;            id&#xA;            name&#xA;            lineItems {&#xA;              edges {&#xA;                node {&#xA;                  quantity&#xA;                  name&#xA;                  product {&#xA;                    productType&#xA;                    metafield(namespace: &quot;global&quot;, key:&quot;SO_num&quot;) {&#xA;                      value&#xA;                    }&#xA;                  }&#xA;                  variant {&#xA;                    weight&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;      collections(first: 1, query: &quot;id:260752932934&quot;) {&#xA;        edges {&#xA;          node {&#xA;            id&#xA;            products(first: 3, sortKey: BEST_SELLING) {&#xA;              edges {&#xA;                node {&#xA;                  title&#xA;                  metafield(namespace: &quot;global&quot;, key: &quot;SO_num&quot;) {&#xA;                    value&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;&quot;&quot;&quot;&#xA; ) {&#xA;   bulkOperation {&#xA;     id&#xA;     status&#xA;   }&#xA;   userErrors {&#xA;     field&#xA;     message&#xA;   }&#xA; }&#xA;}&#xA;`;&#xA;&#xA;const CHECK_BULK = gql`&#xA;  query {&#xA;    currentBulkOperation {&#xA;      id&#xA;      status&#xA;      errorCode&#xA;      createdAt&#xA;      completedAt&#xA;      objectCount&#xA;      fileSize&#xA;      url&#xA;      partialDataUrl&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;&#xA;export { BULK_OP, CHECK_BULK }&#xA;</code></pre>&#xA;<p>I would post more of my code, but at this point I feel like most of it will be need to be redone on the basis of what I have to actually do to get this data before the app loads.</p>&#xA;<p>Any help would be appreciated, even a point in the right direction.</p>&#xA;<p>Thanks!</p>&#xA;",15070531,,6124657,2021-04-07 20:14:48,2021-04-07 20:14:48,How to process a Shopify GraphQL Bulk Request and download the response?,<reactjs><graphql><fetch><shopify><bulk>,1,2,0,2021-04-07 11:29:29
66988140,2,,66985182,0,,"<p>Bulk operations are designed for long-running processing.</p>&#xA;<p><strong>It's just a chain of data-flow</strong> formed using <strong>separate requests</strong>.</p>&#xA;<p>Example for Apollo client (see docs for option details):</p>&#xA;<ul>&#xA;<li><p><code>useMutation</code> to 'send' bulk - returns bulk <code>id</code>;</p>&#xA;</li>&#xA;<li><p><code>useQuery</code> to check processing state ... you can use <code>polling</code> option to automatic re-querying (use <code>network-only</code> fetch policy) ... and <code>skip</code> to stop after finished - returns <code>status</code>, <code>url</code>, <code>partialDataUrl</code>;</p>&#xA;</li>&#xA;<li><p>when a bulk data ready, just fetch (use <code>axios</code>/<code>fetch</code>/whatever) to download prepared data [probably json] file from <code>url</code> (provided with query response) - the bulk response;</p>&#xA;</li>&#xA;<li><p>use your [json decoded] data in component;</p>&#xA;</li>&#xA;</ul>&#xA;<p><strong>Hint</strong>: run mutation (on demand, from [some onClick] event handler) in separate component to not mix send/receive operations ... you can store/save bulk <code>id</code> [and processing state] in localStorage to be available on refresh</p>&#xA;",6124657,,,,2021-04-07 14:24:22,"",,0,2,0,2021-04-07 14:24:22
66989605,1,66989855,,4,4021,"<p>I am using graphql with generated types and struggling with how to convert them to the type I need to pass it to my data service calls.</p>&#xA;<p>@graphql-codegen has given me an args type of</p>&#xA;<pre><code>export type QueryOrdersArgs = {&#xA;  ids: Array&lt;Maybe&lt;Scalars['ID']&gt;&gt;;&#xA;};&#xA;</code></pre>&#xA;<p>(I don't really understand why its generated as a Maybe type, as the graphql schema enforces that I only query with a parameter of an array of ids (strings))</p>&#xA;<p>In my resolver, I need to call into a service which takes an array of strings.  Everything works as expected (with @ts-ignore) but now I need to fix up my types.</p>&#xA;<pre><code>const { orderIds } = args;&#xA;const result = getOrder(orderIds);&#xA;</code></pre>&#xA;<p>I have a codesandbox with just the types here <a href=""https://codesandbox.io/s/typescript-playground-export-forked-3fpx9?file=/index.ts"" rel=""nofollow noreferrer"">https://codesandbox.io/s/typescript-playground-export-forked-3fpx9?file=/index.ts</a></p>&#xA;<pre><code>export type Maybe&lt;T&gt; = T | null;&#xA;export type Scalars = {&#xA;  ID: string;&#xA;  String: string;&#xA;  Boolean: boolean;&#xA;  Int: number;&#xA;  Float: number;&#xA;  _FieldSet: any;&#xA;};&#xA;&#xA;let ids: Array&lt;Maybe&lt;Scalars[&quot;ID&quot;]&gt;&gt;;&#xA;&#xA;export const getOrders = (orderIds: Array&lt;string&gt;) =&gt; {&#xA;  orderIds.map((x) =&gt; console.log(x));&#xA;};&#xA;&#xA;getOrders(ids);&#xA;</code></pre>&#xA;<p>I currently get the error - &quot;TS2345: Argument of type 'Maybe[]' is not assignable to parameter of type 'string[]'.&quot;</p>&#xA;<p>Any help greatly appreciated</p>&#xA;",10917982,,,,2022-11-16 15:31:46,Convert Maybe<string>[]' to 'string[],<javascript><typescript><graphql-codegen>,2,0,0,2021-04-07 15:47:49
66997057,1,,,1,154,"<p>I have a collection in my MongoDB instance witch is basically a shopping list, with a subdocument for items to be bough. But for some reason, when I try to run a mutation to add a Shopping List, I got the error <code>ID cannot represent a non-string and non-integer value</code>.</p>&#xA;<p>This is my schema for GraphQL - I'm using Apollo Server with Node</p>&#xA;<pre><code>type Item {&#xA;    name: String!&#xA;    quantity: String!&#xA;}&#xA;&#xA;type ShoppingList {&#xA;    _id: ID!&#xA;    title: String!&#xA;    location: String&#xA;    dayTime: String&#xA;    items: [Item!]!&#xA;    owner: User!&#xA;}&#xA;&#xA;input ItemInput {&#xA;    name: String!&#xA;    quantity: String!&#xA;}&#xA;&#xA;input ShoppingListInput {&#xA;    title: String!&#xA;    location: String&#xA;    dayTime: String&#xA;    items: ID!&#xA;    owner: ID!&#xA;}&#xA;&#xA;type Query {&#xA;    lists: [ShoppingList!]!&#xA;    list(id: ID!): ShoppingList!&#xA;    # items: [Item!]!&#xA;    # item(id: ID!): Item!&#xA;&#xA;}&#xA;&#xA;type Mutation {&#xA;    createShoppingList(data: ShoppingListInput!): ShoppingList!&#xA;    updateShoppingList(id: ID!, data: ShoppingListInput): ShoppingList!&#xA;    deleteShoppingList(id: ID!): Boolean&#xA;}&#xA;</code></pre>&#xA;<p>And this is the Mutation I'm trying to run</p>&#xA;<pre><code>mutation {&#xA;  createShoppingList(data:{&#xA;    title: &quot;Weekly shopping List&quot;&#xA;    location: &quot;Walmart at 5th Avenue&quot;&#xA;    dayTime: &quot;Friday 10 at 3pm&quot;&#xA;    items:[{&#xA;        name: &quot;Full fat milk&quot;&#xA;        quantity: &quot;One galon&quot;&#xA;    },&#xA;    {&#xA;        name: &quot;Olive Oil&quot;&#xA;        quantity: &quot;One bottle&quot;&#xA;    }]&#xA;    owner:&quot;606be72f3879a84c34f46744&quot;&#xA;  }){&#xA;    _id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The full error message is below:</p>&#xA;<pre><code>{&#xA;  &quot;error&quot;: {&#xA;    &quot;errors&quot;: [&#xA;      {&#xA;        &quot;message&quot;: &quot;ID cannot represent a non-string and non-integer value: [{name: \&quot;Full fat milk\&quot;, quantity: \&quot;One galon\&quot;}, {name: \&quot;Olive Oil\&quot;, quantity: \&quot;One bottle\&quot;}]&quot;,&#xA;        &quot;locations&quot;: [&#xA;          {&#xA;            &quot;line&quot;: 3,&#xA;            &quot;column&quot;: 114&#xA;          }&#xA;        ],&#xA;        &quot;extensions&quot;: {&#xA;          &quot;code&quot;: &quot;GRAPHQL_VALIDATION_FAILED&quot;,&#xA;          &quot;exception&quot;: {&#xA;            &quot;stacktrace&quot;: [&#xA;              &quot;GraphQLError: ID cannot represent a non-string and non-integer value: [{name: \&quot;Full fat milk\&quot;, quantity: \&quot;One galon\&quot;}, {name: \&quot;Olive Oil\&quot;, quantity: \&quot;One bottle\&quot;}]&quot;,&#xA;              &quot;    at GraphQLScalarType.parseLiteral (/home/croves/code/api_shopping_list/node_modules/graphql/type/scalars.js:269:13)&quot;,&#xA;              &quot;    at isValidValueNode (/home/croves/code/api_shopping_list/node_modules/graphql/validation/rules/ValuesOfCorrectTypeRule.js:125:28)&quot;,&#xA;              &quot;    at Object.ListValue (/home/croves/code/api_shopping_list/node_modules/graphql/validation/rules/ValuesOfCorrectTypeRule.js:40:9)&quot;,&#xA;              &quot;    at Object.enter (/home/croves/code/api_shopping_list/node_modules/graphql/language/visitor.js:323:29)&quot;,&#xA;              &quot;    at Object.enter (/home/croves/code/api_shopping_list/node_modules/graphql/utilities/TypeInfo.js:370:25)&quot;,&#xA;              &quot;    at visit (/home/croves/code/api_shopping_list/node_modules/graphql/language/visitor.js:243:26)&quot;,&#xA;              &quot;    at Object.validate (/home/croves/code/api_shopping_list/node_modules/graphql/validation/validate.js:69:24)&quot;,&#xA;              &quot;    at validate (/home/croves/code/api_shopping_list/node_modules/apollo-server-core/src/requestPipeline.ts:514:14)&quot;,&#xA;              &quot;    at Object.&lt;anonymous&gt; (/home/croves/code/api_shopping_list/node_modules/apollo-server-core/src/requestPipeline.ts:300:32)&quot;,&#xA;              &quot;    at Generator.next (&lt;anonymous&gt;)&quot;,&#xA;              &quot;    at fulfilled (/home/croves/code/api_shopping_list/node_modules/apollo-server-core/dist/requestPipeline.js:5:58)&quot;,&#xA;              &quot;    at processTicksAndRejections (internal/process/task_queues.js:93:5)&quot;&#xA;            ]&#xA;          }&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1888460,,,,2021-04-08 03:45:27,How can I create a mutation in GraphQL that contains a subdocument in MongoDB?,<mongodb><graphql>,0,4,0,2021-04-08 03:45:27
67017344,1,67021577,,0,92,"<p>I want to consumer graphQl API.&#xA;I know we need to use http requester to call graphQl.&#xA;I need some info on forming mutation request using dwl.&#xA;I was trying to hit this service <a href=""https://www.predic8.de/fruit-shop-graphql"" rel=""nofollow noreferrer"">https://www.predic8.de/fruit-shop-graphql</a>&#xA;using below</p>&#xA;<pre><code>%dw2.0&#xA;outputapplication/json&#xA;---&#xA;{&#xA;  &quot;query&quot;: &quot;mutation(\$input:addCategoryInput!) { addCategory(input:\$input) { name products { name}} }&quot;,&#xA;  &quot;variables&quot;: {&#xA;    &quot;input&quot;: {&#xA;      &quot;id&quot;: 6,&#xA;      &quot;name&quot;: &quot;Green Fruits&quot;,&#xA;      &quot;products&quot;: 8&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>its throwing bad request&#xA;But when using below</p>&#xA;<pre><code>%dw 2.0&#xA;output application/json&#xA;---&#xA;{&#xA;  &quot;query&quot;: &quot;mutation {  addCategory(id: 6, name: \&quot;Green Fruits\&quot;, products: 8) {    name    products {      name    }  }}&quot;&#xA;}&#xA;</code></pre>&#xA;<p>its working.&#xA;I want to use above format. Are both not valid requests.&#xA;Please share me your knowledge or guide me to right blog to refer.</p>&#xA;",5251135,,,,2021-04-09 13:03:34,Mule4# Valid DWL to format graphQL request,<graphql><dataweave><mule4>,1,1,0,2021-04-09 08:07:18
67021577,2,,67017344,1,,"<pre><code>output application/json&#xA;---&#xA;{&#xA;  query: &quot;mutation(\$id:Int!,\$name:String!,\$products:[Int]!) { addCategory(id:\$id, name:\$name, products:\$products) { name products { name } } }&quot;,&#xA;  variables: {&#xA;    id: 6,&#xA;    name: &quot;Green Fruits&quot;,&#xA;    products: [8]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Your issue would appear to be more with your GraphQL. Products is defined as <code>[Int]!</code> in the schema, and you need to pass in the individual arguments - I don't see an <code>addCategoryInput</code> defined anywhere in the schema, and <code>addCategory</code> is expecting individual arguments.</p>&#xA;",10890536,,10890536,2021-04-09 13:03:34,2021-04-09 13:03:34,"",,0,0,0,2021-04-09 12:57:44
67049983,2,,67045942,6,,"<p>Github GraphQL API is subject to the following caveats:</p>&#xA;<ul>&#xA;<li>GraphQL API can only be accessed using authentication. You need a token to use this API. Thus, you can't use GraphQL in an environment where you can't secure the provisioning of this token. For example, in a web app without github authentication. This is a big caveat, especially for people who want to create web app or scripts that target only public repository informations.</li>&#xA;<li>Searching <a href=""https://stackoverflow.com/questions/52913948/search-commits-by-message-with-github-graphql-api"">commits</a> and <a href=""https://stackoverflow.com/questions/45382069/search-for-code-in-github-using-graphql-v4-api"">code</a> using <a href=""https://docs.github.com/en/rest/reference/search"" rel=""noreferrer"">the search API</a> is not possible in Github Graphql. Only searching repos, issues and users are supported (for the search API)</li>&#xA;<li>some features like <a href=""https://docs.github.com/en/rest/reference/repos#compare-two-commits"" rel=""noreferrer"">comparing commits</a> and getting <a href=""https://stackoverflow.com/questions/46309272/github-graphql-query-for-project-contributors"">contributors</a> are not possible yet in Graphql. Another example: you can't <a href=""https://stackoverflow.com/questions/46669560/github-graphql-to-recursively-list-all-files-in-the-directory"">recursively get a tree</a> using GraphQL API</li>&#xA;<li>some mutations already available in v3 may not yet have been implemented in GraphQL (create commit, create tag, create branch etc...), checkout <a href=""https://docs.github.com/en/graphql/reference/mutations"" rel=""noreferrer"">mutations documentation</a></li>&#xA;</ul>&#xA;",2614364,,,,2021-04-11 20:36:27,"",,0,2,0,2021-04-11 20:36:27
67063257,2,,61570406,2,,<p>I think you need to add the resolver to the providers collection for the resolvers to be available.</p>&#xA;,542695,,,,2021-04-12 17:49:47,"",,0,0,0,2021-04-12 17:49:47
67066316,1,,,0,1109,"<p>I have a database like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>User {&#xA; id: 12323,&#xA; name: asdasd,&#xA; products: [{ id: 1, name: asdasdl }, {id: 2, name: bfcvc}]&#xA;}&#xA;</code></pre>&#xA;<p>With <code>deleteMany</code>, I want to remove all that have products name <code>'asdasdl'</code>.</p>&#xA;<p>How can I do this?</p>&#xA;<p>I have this code but it doesn't work:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>await User.deleteMany({'name': { '$in': User.products }}, {});&#xA;</code></pre>&#xA;<p>Thank you!</p>&#xA;",14818939,,5589405,2021-04-12 22:14:07,2021-04-13 06:55:08,How to deleteMany in mongoose,<node.js><mongoose><apollo>,2,0,0,2021-04-12 22:09:01
67095652,1,67099452,,0,185,"<p>We are making a server side request which returns to the client a page with an <code>__APOLLO_STATE__</code> object under <code>window</code> containing all the graphql data used by the page.&#xA;The goal is to manipulate the window in order to mock our API.</p>&#xA;<p>Problem is, <code>__APOLLO_STATE__</code> is not available <em><a href=""https://docs.cypress.io/api/commands/visit#Arguments"" rel=""nofollow noreferrer"">onBeforeLoad</a></em> but only <a href=""https://docs.cypress.io/api/commands/visit#Arguments"" rel=""nofollow noreferrer""><em>onLoad</em></a></p>&#xA;<p>So <em>onBeforeLoad</em></p>&#xA;<pre><code>  cy&#xA;  .visit(url, {&#xA;    onBeforeLoad: (contentWindow) =&gt; {&#xA;      cy.stub(contentWindow, '__APOLLO_STATE__').returns('');&#xA;    },&#xA;  })&#xA;</code></pre>&#xA;<p>means the stub won't change anything because the page has already been loaded, and</p>&#xA;<p><em>onload</em></p>&#xA;<pre><code>  cy&#xA;  .visit(url, {&#xA;    onLoad: (contentWindow) =&gt; {&#xA;      cy.stub(contentWindow, '__APOLLO_STATE__').returns('');&#xA;    },&#xA;  })&#xA;</code></pre>&#xA;<p>will throw an error because it doesn't exist</p>&#xA;<pre><code>Cannot stub non-existent own property APOLLO_STATE&#xA;</code></pre>&#xA;<p>Has anyone that encountered this issue any suggestions?</p>&#xA;",1462476,,,,2021-04-14 21:38:56,How to manipulate __APOLLO_STATE__ with cypress,<graphql><automated-tests><cypress><react-apollo><apollo-server>,1,4,0,2021-04-14 16:32:07
67098621,2,,67032518,1,,"<p>You used the word &quot;component&quot; to describe your <code>Posts</code> but the query you are using only works in a page, or in the context of createPage (so in a template file as well). If you are indeed in a component, that will be the issue. If not, then I'm not clear what is wrong, I use the same pattern (eg: <code>data.edges.node.map()</code>) and it works for me.</p>&#xA;<p>The only other difference I noticed is in <code>gatsby-config</code>, I define an <code>environment</code> key. I'm not sure what the behavior is if none is defined, probably defaults to <code>master</code> so you may also want to confirm you're on the right environment.</p>&#xA;",13014843,,,,2021-04-14 20:23:17,"",,0,1,0,2021-04-14 20:23:17
67130088,2,,65061146,7,,"<p>For any googler trying to solve this, especially around importing <code>Auth</code>, I had to add a type shim so it would work.</p>&#xA;<p>In my case, the imports that where causing issues where <code>graphql/error/GraphQLError</code> and <code>graphql/language/ast</code> (which is really just exporting <code>DocumentNode</code>).</p>&#xA;<p>I ended up creating a <code>graphql.shim.d.ts</code> file and adding it to my <code>interfaces</code> dir — which is in my <code>compilerOptions.path</code> array in my <code>tsconfig.json</code> config (but really, any dir/file under that array should work):</p>&#xA;<pre class=""lang-ts prettyprint-override""><code>declare module 'graphql/error/GraphQLError' {&#xA;    // tslint:disable-next-line:no-empty-interface&#xA;    export interface GraphQLError{}&#xA;}&#xA;&#xA;declare module 'graphql/language/ast' {&#xA;    // tslint:disable-next-line:no-empty-interface&#xA;    export interface DocumentNode{}&#xA;}&#xA;</code></pre>&#xA;",545494,,545494,2021-04-16 18:23:42,2021-04-16 18:23:42,"",,0,1,0,2021-04-16 17:58:58
67130358,1,67177812,,0,193,"<p>The title essentially outlines the problem.</p>&#xA;<p>Is there a @types/ definition import I'm missing?  I don't see any documentation (thus far anyway) that is helpful.</p>&#xA;<p>Prior to the update to latest, the following line worked fine:</p>&#xA;<pre><code>import { PrismaClient, LogLevel } from '@prisma/client';&#xA;</code></pre>&#xA;",2161586,,,,2021-04-20 11:14:09,@prisma/client no definition for LogLevel after upgrade from 2.10.x to 2.21.x,<javascript><graphql><prisma>,1,1,0,2021-04-16 18:22:23
67131530,1,67132655,,1,274,"<p>I'm trying to batch my GraphQL queries to retrieve the data I need from multiple repositories with the same request, where each repository has a different cursor.</p>&#xA;<p>Assuming I have the IDs of 3 nodes and only 2 cursors with the following mapping:</p>&#xA;<pre><code>NODE_ID_1 &lt;-&gt; CURSOR_X&#xA;NODE_ID_2 &lt;-&gt; Empty&#xA;Node_ID_3 &lt;-&gt; CURSOR_Y&#xA;</code></pre>&#xA;<p>How can I populate the GraphQL query so that I can query all 3 nodes, but pass their respective cursors?</p>&#xA;<pre><code>query {&#xA;  nodes(ids: [&quot;NODE_ID_1&quot;, &quot;NODE_ID_2&quot;, &quot;NODE_ID_3&quot;]) {&#xA;    ... on Repository {&#xA;      databaseId&#xA;      stargazers(first: 100, after:???) {&#xA;        pageInfo {&#xA;          endCursor&#xA;        }&#xA;        edges {&#xA;          starredAt&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4398113,,,,2021-04-16 21:56:40,How can I pass multiple cursors to a single GitHub GraphQL query with multiple node ids?,<graphql><github-api><github-graphql>,1,0,0,2021-04-16 20:00:52
67132655,2,,67131530,1,,"<p>You can use <a href=""https://graphql.org/learn/queries/#aliases"" rel=""nofollow noreferrer"">aliases</a> by iterating over nodes and map them to a field name like <code>nodeX</code> :</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  node1: node(id: &quot;MDEwOlJlcG9zaXRvcnkxMDQ4MzQ4&quot;) {&#xA;    ... on Repository {&#xA;      ...Repo&#xA;    }&#xA;  }&#xA;  node2: node(id: &quot;MDEwOlJlcG9zaXRvcnkyMzE5NDk4&quot;) {&#xA;    ... on Repository {&#xA;      ...Repo&#xA;    }&#xA;  }&#xA;  node3: node(id: &quot;MDEwOlJlcG9zaXRvcnkyMzI1Mjk4&quot;) {&#xA;    ... on Repository {&#xA;      ...Repo&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;fragment Repo on Repository {&#xA;  name&#xA;}&#xA;</code></pre>&#xA;<p>output:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;node1&quot;: {&#xA;      &quot;name&quot;: &quot;DROP5.0&quot;&#xA;    },&#xA;    &quot;node2&quot;: {&#xA;      &quot;name&quot;: &quot;subsurface&quot;&#xA;    },&#xA;    &quot;node3&quot;: {&#xA;      &quot;name&quot;: &quot;linux&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>For the cursor value you just need to map the field name to both the node id and the cursor value:</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>{&#xA;  node1: node(id: &quot;MDEwOlJlcG9zaXRvcnkyMzE5NDk4&quot;) {&#xA;    ... on Repository {&#xA;      name&#xA;      stargazers(first: 1, after:&quot;Y3Vyc29yOnYyOpIAzR1p&quot;) {&#xA;        pageInfo {&#xA;          endCursor&#xA;        }&#xA;        edges {&#xA;          starredAt&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;  node2: node(id: &quot;MDEwOlJlcG9zaXRvcnkxMDQ4MzQ4&quot;) {&#xA;    ... on Repository {&#xA;      name&#xA;      stargazers(first: 1, after: null) {&#xA;        pageInfo {&#xA;          endCursor&#xA;        }&#xA;        edges {&#xA;          starredAt&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;  node3: node(id: &quot;MDEwOlJlcG9zaXRvcnkyMzI1Mjk4&quot;) {&#xA;    ... on Repository {&#xA;      name&#xA;      stargazers(first: 1, after:&quot;Y3Vyc29yOnYyOpIAzQzi&quot;) {&#xA;        pageInfo {&#xA;          endCursor&#xA;        }&#xA;        edges {&#xA;          starredAt&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>In this case your input map would look like:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>input = {&#xA;    &quot;node1&quot;: {&#xA;        &quot;id&quot;: &quot;MDEwOlJlcG9zaXRvcnkyMzE5NDk4&quot;,&#xA;        &quot;cursor&quot;: &quot;Y3Vyc29yOnYyOpIAzR1p&quot;&#xA;    },&#xA;    &quot;node2&quot;: {&#xA;        &quot;id&quot;: &quot;MDEwOlJlcG9zaXRvcnkxMDQ4MzQ4&quot;,&#xA;        &quot;cursor&quot;: null&#xA;    },&#xA;    &quot;node3&quot;: {&#xA;        &quot;id&quot;: &quot;MDEwOlJlcG9zaXRvcnkyMzI1Mjk4&quot;,&#xA;        &quot;cursor&quot;: &quot;Y3Vyc29yOnYyOpIAzQzi&quot;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>With variables:</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>query ($id1: ID!, $cursor1: String, $id2: ID!, $cursor2: String, $id3: ID!, $cursor3: String) {&#xA;  node1: node(id: $id1) {&#xA;    ... on Repository {&#xA;      name&#xA;      stargazers(first: 1, after: $cursor1) {&#xA;        pageInfo {&#xA;          endCursor&#xA;        }&#xA;        edges {&#xA;          starredAt&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;  node2: node(id: $id2) {&#xA;    ... on Repository {&#xA;      name&#xA;      stargazers(first: 1, after: $cursor2) {&#xA;        pageInfo {&#xA;          endCursor&#xA;        }&#xA;        edges {&#xA;          starredAt&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;  node3: node(id: $id3) {&#xA;    ... on Repository {&#xA;      name&#xA;      stargazers(first: 1, after: $cursor3) {&#xA;        pageInfo {&#xA;          endCursor&#xA;        }&#xA;        edges {&#xA;          starredAt&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>variables :</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;id1&quot;: &quot;MDEwOlJlcG9zaXRvcnkyMzE5NDk4&quot;,&#xA;  &quot;cursor1&quot;: &quot;Y3Vyc29yOnYyOpIAzR1p&quot;,&#xA;  &quot;id2&quot;: &quot;MDEwOlJlcG9zaXRvcnkxMDQ4MzQ4&quot;,&#xA;  &quot;cursor2&quot;: null,&#xA;  &quot;id3&quot;: &quot;MDEwOlJlcG9zaXRvcnkyMzI1Mjk4&quot;,&#xA;  &quot;cursor3&quot;: &quot;Y3Vyc29yOnYyOpIAzQzi&quot;&#xA;}&#xA;</code></pre>&#xA;",2614364,,,,2021-04-16 21:56:40,"",,0,0,0,2021-04-16 21:56:40
67162737,2,,46809122,1,,<pre><code>Here is another answer with particular collection id wise&#xA;&#xA;&#xA;{&#xA;shop {&#xA;    .node(id: &lt;YOUR COLLECTION ID&gt;) {&#xA;        .onCollection {&#xA;            .products(first: 10) {&#xA;                pageInfo {&#xA;                    hasNextPage&#xA;                }&#xA;                edges {&#xA;                    node {&#xA;                        id&#xA;                        description&#xA;                        variants(first: 10) {&#xA;                            edges {&#xA;                                node {&#xA;                                    id&#xA;                                    sku&#xA;                                    price&#xA;                                    selectedOptions {&#xA;                                        name&#xA;                                        value&#xA;                                    }&#xA;                                }&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;}&#xA;</code></pre>&#xA;,2578552,,,,2021-04-19 13:13:59,"",,0,0,0,2021-04-19 13:13:59
67175361,1,,,0,775,"<pre><code>{&#xA;  &quot;error&quot;: {&#xA;    &quot;message&quot;: &quot;No directive found for `orderBy`&quot;,&#xA;    &quot;exception&quot;: &quot;Nuwave\\Lighthouse\\Exceptions\\DirectiveException&quot;,&#xA;    &quot;file&quot;: &quot;C:\\xampp\\htdocs\\dev\\lumen-lighthouse\\vendor\\nuwave\\lighthouse\\src\\Schema\\DirectiveLocator.php&quot;,&#xA;    &quot;line&quot;: 175,&#xA;    &quot;trace&quot;: [&#xA;      {&#xA;        &quot;file&quot;: &quot;C:\\xampp\\htdocs\\dev\\lumen-lighthouse\\vendor\\nuwave\\lighthouse\\src\\Schema\\DirectiveLocator.php&quot;,&#xA;        &quot;line&quot;: 142,&#xA;        &quot;function&quot;: &quot;resolve&quot;,&#xA;        &quot;class&quot;: &quot;Nuwave\\Lighthouse\\Schema\\DirectiveLocator&quot;,&#xA;        &quot;type&quot;: &quot;-&gt;&quot;&#xA;      },&#xA;</code></pre>&#xA;<p><strong>How to get rid of the above error? I am getting no solution.</strong></p>&#xA;<p>Call:</p>&#xA;<pre><code>query {&#xA;  orderBooks(orderBy: [{ column: id, order: ASC }]) {&#xA;    title,&#xA;    author&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Schema:</p>&#xA;<pre><code>type Query {&#xA;  orderBooks(orderBy: _ @orderBy(columns: [&quot;id&quot;, &quot;title&quot;])): [Book!]! @paginate(builder: &quot;App\\GraphQL\\Builders\\BookBuilder@searchBooks&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>&#xA;",9668060,,2702894,2021-04-20 08:51:26,2021-05-22 16:33:46,Lighthouse GraphQL - No directive found for `orderBy`,<graphql><laravel-lighthouse>,2,0,0,2021-04-20 08:37:41
67197903,1,,,-1,915,"<p>I have read the tutorial for pagination using the parameter <code>after:cursor</code> in this article <a href=""https://shopify.dev/concepts/graphql/pagination"" rel=""nofollow noreferrer"">https://shopify.dev/concepts/graphql/pagination</a>. Unfortunately, I cannot use this because I want to generate a sitemap for all the products. As you know, we can only get 250 products maximum at a single graphql request. What I am building is something like this:</p>&#xA;<p><code>sitemaps/products-1-250.xml</code></p>&#xA;<p><code>sitemaps/products-251-500.xml</code></p>&#xA;<p><code>sitemaps/products-501-750.xml</code></p>&#xA;<p>and so on...</p>&#xA;<p>I want to make some query like this where I can get products from 251 to 500:</p>&#xA;<pre><code>query GetAllProductsForSitemap {&#xA;  products(first: 250, page: 2) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        title&#xA;        other-attributes&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But of course, <code>page</code> is not a valid parameter.</p>&#xA;<p>Is this achievable in Shopify-GraphQL?</p>&#xA;",2558016,,,,2021-06-17 20:42:23,Shopify GraphQL Pagination Without Using Cursor,<graphql><shopify><shopify-api>,1,0,0,2021-04-21 14:29:10
67208421,2,,66029310,0,,"<p>As others have stated, you need a query.</p>&#xA;<p>When the extension is activated, it serves as any API. It'll give you the data that you request, not direct you to some website. You can access the GraphiQL IDE to get a visual representation of the queries you can make.</p>&#xA;",9468639,,,,2021-04-22 07:11:04,"",,0,0,0,2021-04-22 07:11:04
67213947,1,,,0,2757,<p>I am new to hot chocolate and I have a filtering use case which I am unable to figure out.</p>&#xA;<p>I have this function in my product repository returning product data.</p>&#xA;<pre><code>public IQueryable&lt;Product&gt; GetProducts()&#xA;{&#xA;    return _context.Products.Where(e=&gt;e.indx == null);&#xA;}&#xA;</code></pre>&#xA;<p>If a user filters on field brand in the product class I want to change the query so it does not select <code>Where(e=&gt;e.indx==null)</code>. I need to do this when user does it on field brand or product type or both.</p>&#xA;,13543419,,6632744,2022-10-27 01:22:40,2022-10-27 01:22:40,How to do change query in hot chocolate based on filter applied?,<c#><asp.net-core><graphql><hotchocolate>,1,0,0,2021-04-22 13:10:56
67221207,2,,67197903,0,,"<p>Why don't you just take the perfect sitemap for all your products that are generated for free for you by Shopify? Any reason you are re-inventing the wheel?</p>&#xA;<p>As for your request, the short answer is no. One uses cursors when using the GraphQL API for data. Alternatively, you are 100% free to use paging with the RestAPI, so if you have to, you can.</p>&#xA;",210841,,,,2021-04-22 21:45:48,"",,0,2,0,2021-04-22 21:45:48
67231561,1,67288602,,0,389,"<p>I have a page in contentful which I retrieve content to my react app with graphql.&#xA;In this page, a link a content model called Person which is like that:</p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;Person&quot;,&#xA;  &quot;description&quot;: &quot;&quot;,&#xA;  &quot;displayField&quot;: &quot;name&quot;,&#xA;  &quot;fields&quot;: [&#xA;    {&#xA;      &quot;id&quot;: &quot;name&quot;,&#xA;      &quot;name&quot;: &quot;Name&quot;,&#xA;      &quot;type&quot;: &quot;Symbol&quot;,&#xA;      &quot;localized&quot;: false,&#xA;      &quot;required&quot;: true,&#xA;      &quot;validations&quot;: [],&#xA;      &quot;disabled&quot;: false,&#xA;      &quot;omitted&quot;: false&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;profilePic&quot;,&#xA;      &quot;name&quot;: &quot;profile pic&quot;,&#xA;      &quot;type&quot;: &quot;Link&quot;,&#xA;      &quot;localized&quot;: false,&#xA;      &quot;required&quot;: true,&#xA;      &quot;validations&quot;: [],&#xA;      &quot;disabled&quot;: false,&#xA;      &quot;omitted&quot;: false,&#xA;      &quot;linkType&quot;: &quot;Asset&quot;&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;socialLinks&quot;,&#xA;      &quot;name&quot;: &quot;social links&quot;,&#xA;      &quot;type&quot;: &quot;Array&quot;,&#xA;      &quot;localized&quot;: false,&#xA;      &quot;required&quot;: false,&#xA;      &quot;validations&quot;: [],&#xA;      &quot;disabled&quot;: false,&#xA;      &quot;omitted&quot;: false,&#xA;      &quot;items&quot;: {&#xA;        &quot;type&quot;: &quot;Link&quot;,&#xA;        &quot;validations&quot;: [&#xA;          {&#xA;            &quot;linkContentType&quot;: [&#xA;              &quot;socialLink&quot;&#xA;            ]&#xA;          }&#xA;        ],&#xA;        &quot;linkType&quot;: &quot;Entry&quot;&#xA;      }&#xA;    }&#xA;&#xA;</code></pre>&#xA;<p>ProfilePic is another content model which include name and picUrl.&#xA;SocialLinks is an array of <code>socialLink</code> content model which contain name and link</p>&#xA;<p>I can retrieve without problem my profilePic name or picUrl but I cannot get the socialLinks.&#xA;I have read the contentful documentation about one-to-many but is not clear to me how to apply to my case: <a href=""https://www.contentful.com/developers/docs/references/graphql/#/reference/schema-generation/one-to-many-multi-type-relationships"" rel=""nofollow noreferrer"">https://www.contentful.com/developers/docs/references/graphql/#/reference/schema-generation/one-to-many-multi-type-relationships</a></p>&#xA;<p>My query:</p>&#xA;<pre><code>...rest of the query..&#xA;      founder{&#xA;        name,&#xA;        profilePic{&#xA;          url,&#xA;          title&#xA;        },&#xA;        socialLinksCollection {&#xA;          items {&#xA;            name,&#xA;            link&#xA;          }&#xA;        }&#xA;      },&#xA;... rest of the query...&#xA;</code></pre>&#xA;<p>Can somoene help me understand why it doesn't work as a normal collection?&#xA;Should I maybe use this concept of <code>linkedFrom</code>? But how exactly?</p>&#xA;",988061,,,,2021-04-27 18:19:50,contentful graphql nested structure,<graphql><contentful><contentful-api>,1,2,0,2021-04-23 14:13:58
67234439,1,,,0,99,"<p>I have a very limited experience with databases (I'm currently learning postgres), which is why I'm asking here, what would be the &quot;industry standard&quot; way of doing / creating sales reports based on a timeframe, from a postgres db via graphQL?</p>&#xA;<p>Why via graphQL? Because, as I said above, I'm just learning databases and don't know yet how to properly do JOINs, views, and other advanced queries.</p>&#xA;<p>My setup on the GraphQL side is this: <code>Products -&gt; CartItems -&gt; Orders -&gt; OrderItems</code>.</p>&#xA;<p>On <code>AddtoCart</code> each product item is transformed into a <code>CartItem</code>. Once the order is finished, the <code>Cart</code> and each <code>CartItem</code> will be saved in the database as an <code>Order</code> and as <code>OrderItem</code>.</p>&#xA;<p>In the database I have the following:</p>&#xA;<p><code>Product</code> - table with all products that are for sale.</p>&#xA;<p><code>CartItem</code> - table with products that are in the Cart.</p>&#xA;<p><code>Order</code> - table with all sales, with foreign keys to each OrderItem.</p>&#xA;<p><code>OrderItem</code> - table with sold products.</p>&#xA;<p>Until now I used to get the monthly sales for each product by doing two nested graphQL queries in the frontend: one query to get all products, and one nested query to get the <code>aggregate.count</code> for each product, filtering by product name, store and timeframe.</p>&#xA;<p>Finally the question is: should I do this query at the database level using SQL? Should I create another table <code>Sales</code> and populate it with data from the other tables? If yes, what would be a good starting point, and if no, how should I continue to do this with GraphQL in javascript?</p>&#xA;",1197019,,,,2021-12-06 19:08:41,Get product sales reports from postgresql via graphql,<javascript><postgresql><graphql>,1,0,0,2021-04-23 17:24:30
67241224,2,,67239491,1,,<p>Contentful DevRel here.</p>&#xA;<p><code>contentfulMetadata.tags</code> is an array. The provided snippet template assumes <code>tags</code> is an object.</p>&#xA;<p>Try iterating over the array and render each tag seperately.</p>&#xA;<pre><code>article.contentfulMetadata.tags.map((tag) =&gt; {&#xA;  return &lt;a href={tag.name}&gt;&#xA;    {tag.name}&#xA;  &lt;/a&gt;;&#xA;})&#xA;</code></pre>&#xA;,4253183,,4294399,2022-10-24 17:04:05,2022-10-24 17:04:05,"",,0,0,0,2021-04-24 09:28:14
67253909,2,,67253780,0,,"<p><code>regulatoryApprovals= Object.assign(regulatoryApprovals, ...</code> indicates the problem because <code>regulatoryApprovals</code> is modified with <code>Object.assign</code>, so it would need no assignment.</p>&#xA;<p>Read-only <code>regulatoryApprovals</code> object needs to be cloned. <code>regulations</code> is an array and won't be merged correctly with <code>Object.assign</code>, unless it's known that array elements need to be replaced. It should be:</p>&#xA;<pre><code>regulatoryApprovals = {&#xA;  ...regulatoryApprovals,&#xA;  ...result,&#xA;  regulations: [...regulatoryApprovals.regulations, result.regulations]&#xA;}&#xA;</code></pre>&#xA;<p>Where <code>{ ...regulatoryApprovals, ... }</code> is a shortcut for <code>Object.assign({}, regulatoryApprovals, ...)</code>.</p>&#xA;",3731501,,3731501,2021-04-25 13:32:38,2021-04-25 13:32:38,"",,0,0,0,2021-04-25 13:27:22
67289495,1,,,0,1175,"<p>I m trying to call a mutation on client side (Nextjs), but every time i call using the useMutation hook or even the client itself it returns the following error: Cannot read property 'data' of undefined. Code:</p>&#xA;<p>Graphql Client</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// Dependencies&#xA;import { ApolloClient, InMemoryCache } from '@apollo/client'&#xA;&#xA;// GraphQL Host location&#xA;/* eslint-disable-next-line */&#xA;const endpoint = process.env.GRAPHQL_HOST&#xA;&#xA;// Graphql client instance&#xA;export const graphqlClient = new ApolloClient({&#xA;  uri: endpoint,&#xA;  cache: new InMemoryCache(),&#xA;  headers: {&#xA;    /* eslint-disable-next-line */&#xA;    authorization: `Bearer ${process.env.GRAPHQL_TOKEN}`&#xA;  }&#xA;})&#xA;</code></pre>&#xA;<p>Graphql mutation</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// Dependencies&#xA;import { gql } from '@apollo/client'&#xA;&#xA;// Mutations&#xA;export const CREATE_ORDER_ITEM = gql`&#xA;  mutation newOrderItem($id: ID!, $amount: Int!) {&#xA;    createOrderItem(data: {product: {connect: {id: $id}}, amount: $amount}) {&#xA;      id&#xA;      amount&#xA;      product {&#xA;        id&#xA;        description&#xA;        slug&#xA;        unitPrice&#xA;        ncm&#xA;        publishStatus&#xA;        images {&#xA;          url&#xA;          height&#xA;          width&#xA;        }&#xA;        category {&#xA;          id,&#xA;          name&#xA;        }&#xA;        customer {&#xA;          id&#xA;          name&#xA;          slug&#xA;          cnpj&#xA;          email&#xA;          cep&#xA;          city&#xA;          logo {&#xA;            height&#xA;            width&#xA;            url&#xA;          }  &#xA;          location {&#xA;            latitude&#xA;            longitude&#xA;          }&#xA;        }&#xA;        variants {&#xA;          __typename&#xA;          ...on ProductSizeVariant {&#xA;            id&#xA;            name&#xA;            size&#xA;          }&#xA;          ...on ProductColorVariant {&#xA;            id&#xA;            name&#xA;            color {&#xA;              hex&#xA;            }&#xA;          }&#xA;          ...on ProductHeightVariant {&#xA;            id&#xA;            name&#xA;            height&#xA;          }&#xA;          ...on ProductUnitVariant {&#xA;            id&#xA;            name&#xA;            unit&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;<p>React Component</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// Dependencies&#xA;import { CREATE_ORDER_ITEM } from 'api/mutations'&#xA;import { useMutation } from '@apollo/client'&#xA;import { toast } from 'react-toastify'&#xA;import { useShoppingCart } from 'hooks'&#xA;&#xA;// Styles&#xA;import * as S from './styles'&#xA;&#xA;// Components&#xA;import { Container, Column, CustomModal } from 'styles/global'&#xA;import { CartSubtotal, CartTable, LoadingModalBody } from 'components'&#xA;&#xA;// Component&#xA;export default function CartTemplate() {&#xA;&#xA;  // Hooks&#xA;  const { state: items } = useShoppingCart()&#xA;  const [ newOrderItem ] = useMutation(CREATE_ORDER_ITEM)&#xA;&#xA;  // Actions&#xA;  const submitOrder = async (orders, numberOfOrders) =&gt; {&#xA;    if (numberOfOrders &gt; 0) {&#xA;&#xA;      try {&#xA;&#xA;        // Sample api call&#xA;        const r = await newOrderItem({&#xA;          variables: {&#xA;            id: orders[0].products[0].id,&#xA;            amount: orders[0].products[0].amount&#xA;          }&#xA;        })&#xA;&#xA;        // ALWAYS IS RETURNING UNDEFINED&#xA;        console.log('after', r)&#xA;&#xA;      } catch (err) {&#xA;        console.log('error', err)&#xA;        toast.error('...')&#xA;      }&#xA;      &#xA;    } else {&#xA;      toast.warning('...')&#xA;    }&#xA;  }&#xA;&#xA;  // JSX&#xA;  return (&#xA;    &lt;&gt;&#xA;      &lt;S.Wrapper&gt;&#xA;        &lt;Container ph=&quot;0&quot;&gt;&#xA;          &lt;Column ph=&quot;0&quot; sm={12} md={12} lg={9}&gt;&#xA;            &lt;CartTable items={items} /&gt;&#xA;          &lt;/Column&gt;&#xA;          &lt;Column ph=&quot;0&quot; sm={12} md={12} lg={3}&gt;&#xA;            &lt;CartSubtotal&#xA;              items={items}&#xA;              onSubmitOrder={submitOrder}&#xA;            /&gt;&#xA;          &lt;/Column&gt;&#xA;        &lt;/Container&gt;&#xA;      &lt;/S.Wrapper&gt;&#xA;      &lt;CustomModal isOpen={false}&gt;&#xA;        &lt;LoadingModalBody /&gt;&#xA;      &lt;/CustomModal&gt;&#xA;    &lt;/&gt;&#xA;  )&#xA;}&#xA;</code></pre>&#xA;<p>Note that everytime the function awaits the api answer it returns undefined.</p>&#xA;",15541901,,,,2021-04-28 11:52:26,APOLLO CLIENT - Mutation not working (Cannot read property 'data' of undefined),<javascript><api><graphql><next.js><apollo-client>,1,2,0,2021-04-27 19:28:20
67292406,2,,64577365,1,,"<p>I've also been struggling and this isn't the best answer, but it at least works at minimum.</p>&#xA;<p>Query <code>refs/tags/</code> to get all tags, then filter manually in whatever language you're using for the matching OID. You're not guaranteed to fetch <em>all</em> the tags in one call so that you for sure have the OID in it, but I was trying to match against what was likely a recent tag, so it worked fine.</p>&#xA;<pre><code>{&#xA;  repository(name: &quot;dg&quot;, owner: &quot;dgattey&quot;) {&#xA;    refs(refPrefix: &quot;refs/tags/&quot;, last: 100) {&#xA;      nodes {&#xA;        name&#xA;        target {&#xA;          oid&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This gets me a giant list, but in it, I have</p>&#xA;<pre><code>        {&#xA;          &quot;node&quot;: {&#xA;            &quot;name&quot;: &quot;v2.0.1&quot;,&#xA;            &quot;target&quot;: {&#xA;              &quot;oid&quot;: &quot;85fe69df20062aafeea7593c45c1785f44208252&quot;&#xA;            }&#xA;          }&#xA;        }&#xA;</code></pre>&#xA;<p>And I can use other code to check &quot;85fe69df20062aafeea7593c45c1785f44208252&quot; against the OID I was searching for. Not ideal!</p>&#xA;",599355,,,,2021-04-28 00:56:22,"",,0,2,0,2021-04-28 00:56:22
67304383,1,,,1,107,<p>I am dealing with an underlying product that has something that could be expressed in GraphQL as the following &quot;seed&quot; schema:</p>&#xA;<pre><code>interface Item {&#xA;   id: ID&#xA;   name: String&#xA;   content: [Item!]!&#xA;}&#xA;&#xA;type Container implements Item {&#xA;   id: ID&#xA;   name: String&#xA;   content: [Item!]! # But really can only have Container(s) and Box(es)&#xA;}&#xA;&#xA;type Box implements Item {&#xA;   id: ID&#xA;   name: String&#xA;   content: [Item!]! # But really can only have Box(es) and Thing(s)&#xA;}&#xA;&#xA;type Thing implements Item {&#xA;   id: ID&#xA;   name: String&#xA;   #...&#xA;}&#xA;#...&#xA;&#xA;</code></pre>&#xA;<p>I wanted to &quot;focus&quot; / &quot;narrow&quot; the <code>content</code> field of <code>Container</code> by creating <code>ContainerContent</code> and <code>BoxContent</code> as union types:</p>&#xA;<pre><code>union ContainerContent = Container | Box&#xA;&#xA;union BoxContent = Box | Thing&#xA;</code></pre>&#xA;<p>... so that I could do:</p>&#xA;<pre><code>type Container implements Item {&#xA;   id: ID&#xA;   name: String&#xA;   content: [ContainerContent!]!&#xA;}&#xA;&#xA;type Box implements Item {&#xA;   id: ID&#xA;   name: String&#xA;   content: [BoxContent!]!&#xA;}&#xA;</code></pre>&#xA;<p>Each possible type in the union is an <code>Item</code> so I expected this to be fine... but the framework I am using (<code>graphql-java</code>) is failing to to validate this and complains that the:</p>&#xA;<pre><code>object type 'Container' does not implement interface 'Item' because field 'content' is defined as '[ContainerContent!]!' type and not as '[Item!]!' type&#xA;</code></pre>&#xA;<p>I do not wish to take the <code>content</code> property out of the base (interface) <code>Item</code> if I don't have to. Is there a way to accomplish this?</p>&#xA;,709756,,,,2021-05-21 14:40:22,"Is it possible to use a union type to restrict the ""inherited"" child types in GraphQL?",<graphql><graphql-java>,1,0,0,2021-04-28 16:39:08
67310482,2,,65215697,1,,"<p>this issue is “fixed” in 3.4 :<a href=""https://github.com/apollographql/apollo-client/issues/7436"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client/issues/7436</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/KWRqu.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;",12039481,,,,2021-04-29 03:06:15,"",,0,0,0,2021-04-29 03:06:15
67323183,1,67323365,,0,336,"<p>I've got a GraphQL query set up with the following structure, which I'm passing to React for rendering:</p>&#xA;<pre><code> {&#xA;  events{&#xA;    id&#xA;    name&#xA;    startDate&#xA;    endDate&#xA;    subscribedUsers{&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I have two specific problems:</p>&#xA;<ol>&#xA;<li>In one view I have a table where I want to show the event details and the number of subscribed Users. When I console.log subscribed Users it looks like an array, it doesn't have a <code>.length</code> property I can reference and I can't seems to apply array methods to it to get the length. When I try to render it with</li>&#xA;</ol>&#xA;<p><code>{props.event.subscribedUsers.length}</code></p>&#xA;<p>I get the error <code>Property 'length' does not exist on type '{ id: string; name: string; }'.ts(2339)</code></p>&#xA;<ol start=""2"">&#xA;<li><p>In a second view of a single event's details I want to map the names of the users to a child component for rendering, but because it does not seem to be a true array the mapping doesn't work:</p>&#xA;<p><code>{props.subscribedUsers.map((attendee: attendeeType) =&gt; {...}}</code></p>&#xA;</li>&#xA;</ol>&#xA;<p>returns a similar error <code>Property 'length' does not exist on type '{ id: string; name: string; }'.ts(2339)</code></p>&#xA;<p>Is there a way I can convert the subscribed Users data into an array I can access normally or how can I best get at the data?</p>&#xA;<p>Thanks for any help. Mark</p>&#xA;",15695049,,,,2021-04-29 18:44:32,Problem accessing nested data from a GraphQL query in React with TypeScript,<reactjs><graphql><react-typescript>,1,1,0,2021-04-29 18:30:07
67323365,2,,67323183,0,,<p>You have actually pointed the reason. Look at the schema - the error prompts that the data is NOT an array. It is a plain Object which you can access with simple dot notation such as:</p>&#xA;<pre><code>{props.subscribedUsers.id} or   {props.subscribedUsers.name}&#xA;</code></pre>&#xA;,3181258,,,,2021-04-29 18:44:32,"",,0,2,0,2021-04-29 18:44:32
67345450,2,,55151128,0,,"<p>It's a VTL template error. Hard to say without seeing the template, but &quot;Map&quot; and &quot;String&quot; are definitely the VTL types and looks like somewhere a string value is assigned to the input object, when it should have been a value of type map. Probably a json string were not converted to a map.</p>&#xA;",1204862,,,,2021-05-01 10:57:21,"",,0,0,0,2021-05-01 10:57:21
67351182,1,,,0,119,"<p>Apologies if this has come up before, but I couldn't find anything.</p>&#xA;<p>I am using GraphCMS (highly recommend it) and I have several fields that are floats. I am using them for prices. Each entry in the schema can either be a buy or sell in an enumeration field. I would like to total all the price fields where the entry is a buy, and total all the price fields where the entry is a sell.</p>&#xA;<p>I thought there would be something clear in the docs because totalling those fields would be very useful for something like calculating an average score etc. but I can only see docs about counting entries. Have I missed it somewhere?</p>&#xA;<p>Surely this is possible?</p>&#xA;",1788377,,1048572,2022-06-19 14:13:13,2022-06-19 14:13:13,Is it possible to total a schema field?,<graphql><graphcms>,1,2,0,2021-05-01 21:54:29
67353100,2,,67352797,0,,<p>This error occurred because expected input type for createDevice mutation doesn't match the provided type. If you want to use String instead of Iterable you should change typedef of attributeList at your backend from Iterable to String.</p>&#xA;,14051706,,,,2021-05-02 04:53:24,"",,0,0,0,2021-05-02 04:53:24
67375413,2,,67352842,0,,"<p>I solved this by changing the signature of my query <code>imageFromSimilarImage</code> to the following:</p>&#xA;<pre><code>imageFromSimilarImage(files: [Upload!]!) : [Image]&#xA;</code></pre>&#xA;<p>Basically what this allowed me to do, is to pass an empty array in my test graphql file,</p>&#xA;<pre><code>query {&#xA;    imageFromSimilarImage(file: []) {&#xA;        url&#xA;        cloudinaryId&#xA;        tags {&#xA;            value&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>and finally in my test case:</p>&#xA;<pre><code>@Test&#xA;void imageFromSimilarImage() throws IOException {&#xA;    when(imageService.findBySimilarImage(anyList())).thenReturn(TEST_IMAGE_LIST);&#xA;&#xA;    GraphQLResponse response = graphQLTestTemplate.postForResource(&quot;graphql/image-from-similar-image.graphql&quot;);&#xA;&#xA;    assertThat(response.isOk()).isTrue();&#xA;    assertThat(response.getList(&quot;$.data.imageFromSimilarImage&quot;, Image.class)).contains(TEST_IMAGE_A);&#xA;}&#xA;</code></pre>&#xA;<p>However, this does change the behavior of the query, as in it accepts Multiple files, now instead of just one, although in my case this does not affect anything.&#xA;Just keep this in mind, and make sure it is acceptable in your case as well.</p>&#xA;",4488383,,,,2021-05-03 20:28:02,"",,0,0,0,2021-05-03 20:28:02
67378814,1,,,1,1498,"<p>I have implemented graphql apollo server with query:</p>&#xA;<pre><code>ordersSearch{&#xA;  name&#xA;  orders: {&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>For orders for which data isn't present I want to throw array of not found errors with data for orders with data like below:</p>&#xA;<pre><code>   {&#xA;    &quot;errors&quot;: [{&#xA;      &quot;message&quot;: &quot;404: Not Found&quot;, &#xA;      &quot;path&quot;: [ &quot;ordersSearch&quot;, 0, &quot;order&quot;, 1 ], &#xA;      &quot;extensions&quot;: { … }&#xA;    }, &#xA;    {&#xA;      &quot;message&quot;: &quot;404: Not Found&quot;, &#xA;      &quot;path&quot;: [ &quot;ordersSearch&quot;, 0, &quot;order&quot;, 3 ], &#xA;      &quot;extensions&quot;: { … }&#xA;    }],&#xA;    &quot;data&quot;: “ordersSearch”: [ &#xA;      &quot;name&quot;: “test”, &#xA;      &quot;orders&quot;: [ {&#xA;        “id&quot;: “2”,&#xA;        name: “test”&#xA;    }]&#xA;  }&#xA;</code></pre>&#xA;<p>In above response data not found for orders #1 and #3 and found for order#2.</p>&#xA;<p>How to implement this in apollo server. Currently, if I throw an error the query execution stops and one error is returned with <code>data</code> property as <code>null</code> as below:</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [{&#xA;    &quot;message&quot;: &quot;404: Not Found&quot;, &#xA;    &quot;path&quot;: [ &quot;ordersSearch&quot;, 0, &quot;order&quot;, 1 ], &#xA;    &quot;extensions&quot;: { … }&#xA;  }],&#xA;  &quot;data&quot;: null&#xA;}&#xA;</code></pre>&#xA;",4868839,,4868839,2021-05-04 14:59:08,2021-05-21 22:58:16,Apollo server throw multiple errors with partial data,<angular><error-handling><graphql><apollo><apollo-server>,2,8,0,2021-05-04 04:28:49
67382310,1,,,4,910,"<p>Is there a way to determine the subcsription status of an app via the Shopify node client or in the GraphQL API?</p>&#xA;<p>Given a user has signed up to our public app, when they log in. then I should be able to check if their Shopify subscription to our app is still active.</p>&#xA;<p>I can see via the GraphQL API I can query</p>&#xA;<pre><code>currentAppInstallation {&#xA;   activeSubscriptions {&#xA;     id&#xA;     name&#xA;     test&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>This seems to return an empty array, implying my test store I doesn't have any active subscriptions. This may be due to my app and shop being in test mode though.</p>&#xA;<p>Does anybody know if this is the case or is there another way to get the subscription status?&#xA;Also, it would be good to do via the Shopify client if that is possible?</p>&#xA;",3528590,,,,2021-09-13 20:28:18,How to get app subscription status from Shopify API,<graphql><shopify><shopify-api>,1,0,0,2021-05-04 09:41:24
67405693,1,,,3,2767,"<p>I am new to GraphQL. I have a query, but it shows error message of &quot;Variable is used by anonymous query but not declared&quot;.</p>&#xA;<pre><code>{&#xA;   &quot;query&quot;:&quot;{customers(first: 1, query: $input) {edges{node {addresses{ id }}}}}&quot;,&#xA;   &quot;variables&quot;:{&#xA;      &quot;input&quot;:{&#xA;         &quot;id&quot;:&quot;gid://shopify/Customer/5044061470926&quot;&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>Can I get some help what I did wrong?</p>&#xA;<p>Thanks!</p>&#xA;",15845100,,,,2021-05-05 17:28:46,GraphQL: Variable is used by anonymous query but not declared,<graphql>,1,1,0,2021-05-05 17:00:18
67405908,2,,67405693,8,,"<p>The error is correct. Your query is</p>&#xA;<pre><code>{&#xA;  customers(first: 1, query: $input) {&#xA;    edges{&#xA;      node {&#xA;        addresses{ &#xA;          id &#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and <code>$input</code> is indeed not declared, so GraphQL has no idea what it is supposed to be or how to link it up with your <code>variables</code> values.</p>&#xA;<p>You'll need to do</p>&#xA;<pre><code>query ($input: &lt;THE_TYPE&gt;!) {&#xA;  customers(first: 1, query: $input) {&#xA;    edges{&#xA;      node {&#xA;        addresses{ &#xA;          id &#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I don't know your API schema, so you'll have to replace <code>&lt;THE_TYPE&gt;</code> with whatever type is defined in your API schema.</p>&#xA;",785065,,785065,2021-05-05 17:28:46,2021-05-05 17:28:46,"",,0,0,0,2021-05-05 17:16:03
67413620,2,,48731361,14,,"<p>You can do so by using the where clause and comparison operators.</p>&#xA;<p><a href=""https://hasura.io/docs/latest/graphql/core/databases/postgres/queries/query-filters.html#the-where-argument"" rel=""noreferrer"">https://hasura.io/docs/latest/graphql/core/databases/postgres/queries/query-filters.html#the-where-argument</a></p>&#xA;<pre><code>query {&#xA;   authors (where: {articles: {rating: {_gt: 4}}}) {&#xA;     id&#xA;     name&#xA;     articles (where: {rating: {_gt: 4}}) {&#xA;       id&#xA;       title&#xA;       rating&#xA;     }&#xA;   }&#xA; }&#xA;</code></pre>&#xA;",7794032,,2586761,2021-07-30 07:25:20,2021-07-30 07:25:20,"",,0,0,0,2021-05-06 07:30:03
67425745,1,67427386,,0,619,"<p>I'am trying this <a href=""https://stackoverflow.com/questions/64266788/get-github-issues-by-their-ids-through-graphql-endpoints"">get github issues by their ids through graphql endpoints</a></p>&#xA;<p>And tried this code</p>&#xA;<pre><code>{&#xA;  repository(name: &quot;reponame&quot;, owner: &quot;ownername&quot;) {&#xA;    issue1: issue(number: 2) {&#xA;      title&#xA;      createdAt&#xA;    }&#xA;    issue2: issue(number: 3) {&#xA;      title&#xA;      createdAt&#xA;    }&#xA;    issue3: issue(number: 10) {&#xA;      title&#xA;      createdAt&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>With this, I am able to get back the title, but I am also trying to get all of the comments of the issue. I tried adding <code>comments</code> to the above code, but it didn't work.</p>&#xA;<p>I want to modify the above code only.</p>&#xA;<p>Thanks in advance!</p>&#xA;",4524753,,652728,2021-05-07 00:00:55,2021-05-07 00:00:55,How to get all comments along with issues with github graphql,<github><graphql><github-api><github-graphql>,1,0,0,2021-05-06 20:47:25
67443843,1,67443959,,-1,53,"<p><strong>UPDATE</strong>: Thank you SO MUCH, Anoop! I spent hours on this...</p>&#xA;<p>I'm fetching some nested graphql data, and I believe my original const of &quot;portProjectHolder&quot; is as far as I can reach through . notation.</p>&#xA;<p>With my <code>console.log(portProjectHolder)</code>, I receive an array with 2 JSON objects - and these 2 json objects each have an object inside of them that I need to fetch the properties from and map them to a card component. However, I have no idea at this point how to do this.</p>&#xA;<p>Here is the response I'm getting on my console:</p>&#xA;<p><strong>console.log(portProjectHolder) :</strong></p>&#xA;<pre><code>[&#xA;    {&#xA;        &quot;portfolioProjects&quot;: {&#xA;            &quot;projectTitle&quot;: &quot;Sample Project 2&quot;,&#xA;            &quot;description&quot;: &quot;Project description...sample number 2...hope this works...&quot;,&#xA;            &quot;image1&quot;: {&#xA;                &quot;sourceUrl&quot;: &quot;https://travelweird.com/wp-content/uploads/2021/05/dribble-cultivate-icon.png&quot;&#xA;            },&#xA;            &quot;image2&quot;: null,&#xA;            &quot;image3&quot;: null,&#xA;            &quot;image4&quot;: null&#xA;        }&#xA;    },&#xA;    {&#xA;        &quot;portfolioProjects&quot;: {&#xA;            &quot;projectTitle&quot;: &quot;Sample Project 1&quot;,&#xA;            &quot;description&quot;: &quot;Project description...here's some text, let's see what ya do with it. &quot;,&#xA;            &quot;image1&quot;: {&#xA;                &quot;sourceUrl&quot;: &quot;https://travelweird.com/wp-content/uploads/2021/05/complab123-scaled.jpg&quot;&#xA;            },&#xA;            &quot;image2&quot;: null,&#xA;            &quot;image3&quot;: null,&#xA;            &quot;image4&quot;: null&#xA;        }&#xA;    }&#xA;]&#xA;</code></pre>&#xA;<p>I need to loop through and map the objects within</p>&#xA;<p>Full Code:</p>&#xA;<pre><code>import React from &quot;react&quot;&#xA;import { graphql } from &quot;gatsby&quot;&#xA;&#xA;import Card from '../components/Card/Card'&#xA;&#xA;export default function Home({ data }) {&#xA;  let portProjectHolder = data.wordPress.projects.nodes&#xA;&#xA;  console.log(portProjectHolder)&#xA;&#xA;&#xA;&#xA;&#xA; &#xA;&#xA;  return (&#xA;      &lt;div&gt;&#xA;          {/* &lt;portProjectHolder.map(portProject =&gt; { */}&#xA;                  &lt;Card &#xA;                    key={portProjects.projectTitle}&#xA;                   title={portProjects.projectTitle}&#xA;                   description={portProjects.description} &#xA;                    image={portProjects.sourceUrl}&#xA;                    /&gt;&#xA;             {/* I can't for the life of me figure out how to map twice nested objects from an array...*/}&#xA;      &lt;/div&gt;&#xA;  )&#xA;}&#xA;</code></pre>&#xA;",14457801,,14457801,2021-05-08 04:35:51,2021-05-08 04:35:51,"Looping over an array of JSON objects, with JSON objects nested inside of them",<json><reactjs><loops><graphql><gatsby>,1,1,0,2021-05-08 03:33:35
67444430,1,67456133,,1,79,"<p>I have a service that returns <code>Product</code>s that I can extend via GraphQL Federation in a service returning <code>Review</code>s. The review service depends on the <code>Product</code>s and this decoupling is just awesome!</p>&#xA;<p>I also have an order service that stores (among other things) <code>OrderItem</code>s that have a <code>productId</code>:</p>&#xA;<pre><code>type OrderItem @key(fields : [&quot;id&quot;]) {&#xA;    id: String&#xA;    amount: Int&#xA;    position: Int&#xA;    productId: String&#xA;}&#xA;</code></pre>&#xA;<p>Now I want the clients to be able to also directly select any fields from the <code>Product</code> being referenced by the <code>productId</code>:</p>&#xA;<pre><code>orderItem(id: &quot;123&quot;) {&#xA;    position&#xA;    amount&#xA;    product {&#xA;        name&#xA;        price&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>If I wrote a normal resolver to add the <code>product</code> field, I'd have to duplicate the complete <code>Product</code> model (and update the order service whenever <code>Product</code> changes). I don't want that. I want to utilize Federation here, too.</p>&#xA;<p>I want the order service to extend (and thereby depend on) the <code>Product</code>, but only know about its id, while the product service mustn’t know anything about the order service. So this is an inversion of the dependencies as seen in the review service. I don’t want to <em>add</em> to the model from another service, I want the client to be able to <em>consume</em> it, without my service knowing about the details.</p>&#xA;<p>I assumed that it should be even easier this way around, but I’m just too blind to see what I need to do! I couldn’t find examples or tutorials or anything that do it this way around.</p>&#xA;<p>I would really appreciate your help!</p>&#xA;",3333174,,3333174,2021-05-08 12:18:12,2021-05-09 09:24:07,"GraphQL Federation: How To Consume, Not Extend",<graphql><graphql-spqr><graphql-federation>,1,0,0,2021-05-08 05:42:10
67456133,2,,67444430,0,,"<p>Stupid me! It actually <em>is</em> as simple as I had assumed, I've just been chasing an unrelated (albeit cryptic to me) error message.</p>&#xA;<p>I just have to add a resolver that returns an instance of my <code>Product</code> stub (i.e. containing only the <code>id</code>). The rest works like a charm!</p>&#xA;",3333174,,,,2021-05-09 09:24:07,"",,0,0,0,2021-05-09 09:24:07
67476932,1,67478130,,2,1027,"<p>I'm trying to do a basic GraphQL query to a Shopify store with Sinatra. Could someone help me figure out what I'm doing wrong? I looked at their API to do this:</p>&#xA;<pre><code>require 'shopify_api'&#xA;require 'sinatra'&#xA;&#xA;class App &lt; Sinatra::Base&#xA;  get '/' do&#xA;    shop  = 'xxxx.myshopify.com'&#xA;    token = 'shpat_xxxxxxxxxxxxxxxxxxxxxx'&#xA;    session = ShopifyAPI::Session.new(domain: shop, token: token, api_version: &quot;2021-04&quot;)&#xA;    ShopifyAPI::Base.activate_session(session)&#xA;    &#xA;    ShopifyAPI::GraphQL.initialize_clients&#xA;    client = ShopifyAPI::GraphQL.client&#xA;&#xA;    SHOP_NAME_QUERY = client.parse &lt;&lt;-'GRAPHQL'&#xA;      {&#xA;        shop {&#xA;          name&#xA;        }&#xA;      }&#xA;    GRAPHQL&#xA;&#xA;    result = client.query(SHOP_NAME_QUERY)&#xA;    result.data.shop.name&#xA;  end&#xA;end&#xA;</code></pre>&#xA;<p>Which gives this error but I don't want to use Rake or Rails. Is it possible to do a GraphQL query to Shopify with Ruby?</p>&#xA;<pre><code>ShopifyAPI::GraphQL::InvalidClient at /&#xA;Client for API version 2021-04 does not exist because no schema file exists at `shopify_graphql_schemas/2021-04.json`. To dump the schema file, use the `rake shopify_api:graphql:dump` task&#xA;</code></pre>&#xA;",695901,,,,2022-07-22 07:00:36,How to do a basic GraphQL query to Shopify with Ruby,<ruby><graphql><shopify><sinatra><shopify-app>,2,0,0,2021-05-10 19:56:20
67477267,1,,,1,241,"<p>I have a few different mutations and queries that return a Profile object. I'd like to make a singular Profile object that is fulfilled by all of these different calls, rather than the default Apollo behavior of nesting types beneath the namespace of the call.</p>&#xA;<p><strong>Pseudo</strong></p>&#xA;<p>Right now:</p>&#xA;<pre><code>SignInWithApple() -&gt; SignInWithApple.Profile&#xA;SignInWithGoogle() -&gt; SignInWithGoogle.Profile&#xA;SignInWithEmail() -&gt; SignInWithEmail.Profile&#xA;GetProfile() -&gt; GetProfile.Profile&#xA;</code></pre>&#xA;<p>Would like:</p>&#xA;<pre><code>SignInWithApple() -&gt; Profile&#xA;SignInWithGoogle() -&gt; Profile&#xA;SignInWithEmail() -&gt; Profile&#xA;GetProfile() -&gt; Profile&#xA;</code></pre>&#xA;<p>Edit* I've been able to accomplish this so far by skipping the generated response from Apollo and decoding the raw data into a Profile object I made, but I still have to make special DeCodable containers so that the namespace of each query/mutation can be unwrapped/removed. Seems like there must be a better way...</p>&#xA;",2051879,,,,2021-05-10 20:55:44,Is it possible to map Apollo GraphQL responses into a single type?,<ios><graphql><apollo>,1,0,0,2021-05-10 20:26:18
67477589,2,,67477267,0,,"<p>You can use <a href=""https://www.apollographql.com/docs/apollo-server/schema/unions-interfaces/"" rel=""nofollow noreferrer"">Union Interfaces</a> to create a <code>Profile</code> type that can be any of those.</p>&#xA;<p>Like this</p>&#xA;<pre><code>union Profile = SignInWithApple.Profile | &#xA;  SignInWithGoogle.Profile |&#xA;  SignInWithEmail.Profile |&#xA;  GetProfile.Profile&#xA;</code></pre>&#xA;",5589405,,,,2021-05-10 20:55:44,"",,0,0,0,2021-05-10 20:55:44
67478678,1,,,0,1719,"<p>I am using GatsBy GraphiQL to write a query to return a single element, but the query returns all of the elements.&#xA;Here is my testing data:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>    {&#xA;      &quot;data&quot;: {&#xA;        &quot;mKT&quot;: {&#xA;          &quot;data&quot;: [&#xA;            {&#xA;              &quot;name&quot;: &quot;Apple&quot;,&#xA;              &quot;description&quot;: &quot;apple's desc&quot;&#xA;            },&#xA;            {&#xA;              &quot;name&quot;: &quot;Orange&quot;,&#xA;              &quot;description&quot;: &quot;orange's desc&quot;&#xA;            },&#xA;            {&#xA;              &quot;name&quot;: &quot;Banana&quot;,&#xA;              &quot;description&quot;: &quot;banana's desc&quot;&#xA;            }&#xA;          ]&#xA;        }&#xA;      },&#xA;      &quot;extensions&quot;: {}&#xA;    }&#xA;</code></pre>&#xA;<p>And, here is the GraphQL query:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>    query MyQuery {&#xA;      mKT(data: {elemMatch: {name: {eq: &quot;Apple&quot;}}}) {&#xA;        data {&#xA;          name&#xA;          description&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;<p>I expect to get:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>    {&#xA;     &quot;name&quot;: &quot;Apple&quot;,&#xA;     &quot;description&quot;: &quot;apple's desc&quot;&#xA;    }&#xA;</code></pre>&#xA;<p>However, running the query returns all of the data.&#xA;Any idea how to fix this issue?</p>&#xA;",87088,,5585371,2021-05-11 15:51:08,2021-05-11 15:51:08,GraphQL filtering an array,<graphql><graphiql>,2,0,0,2021-05-10 23:12:42
67482450,2,,67477142,1,,"<p>I did not see a squash feature directly through API.</p>&#xA;<p>You would need to:</p>&#xA;<ul>&#xA;<li><a href=""https://stackoverflow.com/a/9513594/6309"">create a branch</a> at HEAD-N commits, through the <a href=""https://docs.github.com/en/rest/reference/git#create-a-reference"" rel=""nofollow noreferrer"">create ref API</a></li>&#xA;<li><a href=""https://docs.github.com/en/rest/reference/git#update-a-reference"" rel=""nofollow noreferrer"">reset your current branch to HEAD-N sha</a>, with force boolean parameter set to true?</li>&#xA;<li><a href=""https://docs.github.com/en/github/administering-a-repository/about-merge-methods-on-github#squashing-your-merge-commits"" rel=""nofollow noreferrer"">create a pull request</a> from your new branch to your old reset branch</li>&#xA;<li><a href=""https://docs.github.com/en/rest/reference/pulls#merge-a-pull-request"" rel=""nofollow noreferrer"">merge the PR</a>, with the <code>merge_method</code> parameter set to squash</li>&#xA;</ul>&#xA;<p>Pretty convoluted, but it should work (entirely through script, without having to clone the repository).</p>&#xA;",6309,,,,2021-05-11 07:41:27,"",,0,0,0,2021-05-11 07:41:27
67489957,2,,67478678,0,,"<p>I believe this is the same case as:</p>&#xA;<p><a href=""https://stackoverflow.com/questions/55827337/graphql-query-to-access-first-item-in-an-array"">GraphQL query to access first item in an array?</a></p>&#xA;<p>You cannot use filters, limits, etc to an structure if it have not been defined on the source.</p>&#xA;<p>If you have access to the source, add something like <code>limit</code> to the field data.</p>&#xA;<p>If not, you will get the full array, and you have to process it on your side.</p>&#xA;",2736558,,,,2021-05-11 15:35:13,"",,0,0,0,2021-05-11 15:35:13
67494155,1,,,0,522,"<p>Maybe I'm in over my head but I'm trying to create an extension for WpGraphQL to just gather the YITH WooCommerce Product Add-Ons info for each product but I've gotten to the point of banging my head against the desk in frustration. Is there a fairly easy way to just output the array into nodes? The following is what I have so far, currently I'm only getting one product with a set ID (later, hopefully it will get the one associated with that query). I can get a simple string output but I can't get it to output the array into nodes? What am I doing wrong? I commented out ideas I had for an output but it just usually results in an error or null. I do see the graphql_debug working and outputting $fields as an array though? Thanks!</p>&#xA;<pre><code>register_graphql_object_type('MyNewType', [&#xA;        'description' =&gt; __('Describe the Type and what it represents', 'replace-me'),&#xA;        'fields' =&gt; [&#xA;            'nodes' =&gt; [&#xA;                'type' =&gt; 'String',&#xA;                'description' =&gt; __('Describe what this field should be used for', 'replace-me'),&#xA;&#xA;                'fields' =&gt; [&#xA;                    'form_type' =&gt; [&#xA;                        'type' =&gt; 'String',&#xA;                        'description' =&gt; __('Describe what this field should be used for', 'replace-me'),&#xA;                    ],&#xA;                ],&#xA;            ],&#xA;        ],&#xA;    ]);&#xA;&#xA;    register_graphql_field(&#xA;        'Product',&#xA;        'YITH_fields',&#xA;        [&#xA;            'type' =&gt;  'MyNewType',&#xA;            'description' =&gt; __('Example field added to the Post Type', 'replace-with-your-textdomain'),&#xA;            'resolve' =&gt; function (\WPGraphQL\Model\Post $post) {&#xA;                global $wpdb;&#xA;                $sql = &quot;SELECT wp_live_yith_wapo_types.type, wp_live_yith_wapo_types.options FROM wp_live_yith_wapo_groups JOIN wp_live_yith_wapo_types on wp_live_yith_wapo_groups.id = wp_live_yith_wapo_types.group_id WHERE FIND_IN_SET(13, products_id)&quot;;&#xA;                $results = $wpdb-&gt;get_results($sql);&#xA;                if ($results) {&#xA;                    $array = array('nodes');&#xA;                    //$array = array();&#xA;                    foreach ($results as $result) {&#xA;                        $type = array('form_type' =&gt; $result-&gt;type);&#xA;                        $options =  maybe_unserialize($result-&gt;options);&#xA;                        $result = array_merge($type, $options);&#xA;                        $array[] = $result;&#xA;                    }&#xA;                    //$array = wp_json_encode($array);&#xA;                    $fields = !empty($array) ? $array : null;&#xA;                } else {&#xA;                    $fields = null;&#xA;                }&#xA;                graphql_debug($fields, ['type' =&gt; 'ARGS_BREAKPOINT']);&#xA;&#xA;                //return $fields['nodes'];&#xA;                return $fields;&#xA;            }&#xA;&#xA;        ]&#xA;    );&#xA;</code></pre>&#xA;",12140420,,,,2021-05-13 08:44:17,WpGraphQL: Creating Extensions - Having Issues,<wordpress><woocommerce><graphql><wordpress-plugin-creation><wp-graphql>,1,3,0,2021-05-11 20:50:34
67513511,2,,67509990,0,,"<p>Quite hard to know the exact problem without reading all the codes.</p>&#xA;<p>From what I see, you are using the entity directly where repository should be used in practice. Can you try to modify the code to adopt repository pattern? See if it helps you to get rid of the error. If not, you may better share the code.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { InjectRepository } from '@nestjs/typeorm';&#xA;import { Repository } from 'typeorm';&#xA;&#xA;class xxxx {&#xA;    constructor(&#xA;       @InjectRepository(User)&#xA;       private usersRepository: Repository&lt;User&gt;,&#xA;       @InjectRepository(Spaces)&#xA;       private spacesRepository: Repository&lt;Spaces&gt;,&#xA;    ) {}&#xA; &#xA;    @Mutation(() =&gt; Boolean)&#xA;    @UseMiddleware(isAuth)&#xA;    async createSpace(&#xA;       @Args('spaceName') spaceName: string, &#xA;       @Ctx() { req }: MyContext) {&#xA;       const user = this.usersRepository.findOne({ id: req.session.userId });&#xA;       await this.spacesRepository.create({ spaceName, adminId: req.session.userId, users: [user]}).save();&#xA;       return true;&#xA;    }&#xA;&#xA;}&#xA;</code></pre>&#xA;",15569492,,,,2021-05-13 03:26:14,"",,0,0,0,2021-05-13 03:26:14
67532670,1,,,0,941,"<p>I have a Query i have been using, but today i have noticed and issue&#xA;where the SKU appears to be searching a wild card opposed to just the SKU Field.&#xA;I suspect its the format of my query, as if i modify it slightly i can make it work correctly.</p>&#xA;<p>GraphQL Query:</p>&#xA;<pre><code>query ($first: Int, $sku: String)&#xA;{ productVariants(first: $first, query: $sku) {&#xA;    edges {&#xA;      node {&#xA;        title&#xA;        id&#xA;        sku&#xA;        product {&#xA;          title&#xA;        }&#xA;        inventoryItem {&#xA;          id&#xA;          inventoryLevels(first: 3) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;                available&#xA;                location {&#xA;                  id&#xA;                  name&#xA;                  address {&#xA;                    city&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Variables</p>&#xA;<pre><code>{&#xA;  &quot;first&quot;: 5,  &#xA;  &quot;sku&quot;: &quot;555&quot;&#xA;}&#xA;</code></pre>&#xA;<p>So when searching 555 SKU its actually returning products that have 555 in the body_html.</p>&#xA;<p>If i edit the query to have the SKU Embedded then it works, but i need to use it with a variable, maybe its my poorly formatted query.</p>&#xA;<p>Edited the Query as follow to embed the sku in the query and it works.</p>&#xA;<pre><code>query ($first: Int)&#xA;{ productVariants(first: $first, query: &quot;sku:555&quot;) {&#xA;    edges {&#xA;      node {&#xA;        title&#xA;        id&#xA;        sku&#xA;        product {&#xA;          title&#xA;        }&#xA;        inventoryItem {&#xA;          id&#xA;          inventoryLevels(first: 3) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;                available&#xA;                location {&#xA;                  id&#xA;                  name&#xA;                  address {&#xA;                    city&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>How does one format it so it shows like:</p>&#xA;<pre><code> query: &quot;sku:&quot;$sku&#xA;</code></pre>&#xA;",4605812,,,,2021-05-14 10:16:17,Shopify SKU Lookup using GraphQL,<graphql><shopify><sku>,0,2,0,2021-05-14 10:16:17
67576302,2,,67137097,0,,"<p>You have two problems.</p>&#xA;<p>The first problem is in your schema: <code>listClasification</code> probably needs to return a list of values. The closest thing in GraphQL is an array. Here is the fixed schema with an array of <code>Clasification</code>:</p>&#xA;<pre><code>type Query {&#xA;  listClasification: [Clasification]&#xA;}&#xA;</code></pre>&#xA;<p>The second problem is in your resolver. You want to receive data like <code>['A', 'B', 'C', 'D']</code> (an array), so that's what your resolver should return. You are currently returning an object, not an array. If you want to convert between your <code>classification</code> object and an array, here is the fixed resolver.</p>&#xA;<pre><code>const resolvers = {&#xA;  Query: {&#xA;    listClasification: () =&gt; { return Object.keys(classification) }&#xA;  },&#xA;};&#xA;</code></pre>&#xA;<p>Note that it could be simpler if your just defined <code>classification = ['A', 'B', 'C', 'D']</code>.</p>&#xA;",1933135,,,,2021-05-17 19:57:57,"",,0,0,0,2021-05-17 19:57:57
67580807,2,,67579160,1,,"<p>Your workaround should work except for the fact that you are using a template literal to hold a dynamic regular expression. For this approach I would try to do something like:</p>&#xA;<pre><code>        context: {&#xA;            id: node.id,&#xA;            sku: new RegExp(String.raw `${node.sku}`, 'i'), //add other flags if needed &#xA;        }&#xA;</code></pre>&#xA;<p>Alternatively try:</p>&#xA;<pre><code>new RegExp(node.sku, 'i').toString()&#xA;</code></pre>&#xA;<p>The <code>RegExp</code> constructor should do the trick for this use-case with a little trick to force a raw string (since the comparison within GraphQL needs to be represented by a string value).</p>&#xA;",5585371,,5585371,2021-05-19 05:24:04,2021-05-19 05:24:04,"",,0,2,0,2021-05-18 06:11:35
67604854,2,,67599129,3,,"<p>To model a pivot table that is only a linking pivot table holding no additional information, then you model it as you did above. However, if your pivot table contains additional information regarding the relationship, then you will need to model it with an intermediate linking type. Almost the same idea as above. I prefer these linking types to have a name describing the link. For instance I named it in this case <code>Stock</code> but that name could be anything you want it to be. I also prefer camelCase for field names so my example reflects this preference as well. (I added some search directives too)</p>&#xA;<pre><code>type Product {&#xA;  id: ID!&#xA;  name: String! @id&#xA;  slug: String! @id&#xA;  image: String&#xA;  createdAt: DateTime! @search&#xA;  updatedAt: DateTime! @search&#xA;  stock: [Stock] @hasInverse(field: product)&#xA;}&#xA;type Store {&#xA;  id: ID!&#xA;  name: String! @id&#xA;  logo: String&#xA;  stock: [Stock] @hasInverse(field: store)&#xA;  createdAt: DateTime! @search&#xA;  updatedAt: DateTime! @search&#xA;}&#xA;type Stock {&#xA;  id: ID!&#xA;  store: Store!&#xA;  product: Product!&#xA;  name: String! @id&#xA;  price: Float! @search&#xA;  originLink: String&#xA;  discPrice: Float @search&#xA;}&#xA;</code></pre>&#xA;<p>The <code>hasInverse</code> directive is only required on one edge of the inverse relationship, if you want to for readability you can define it on both ends without any side effects</p>&#xA;<p>This model allows you to query many common use cases very simply without needing to do additional join statements like you are probably use to in sql. And the best part about Dgraph is that all of these queries and mutations are generated for you so you don't have to write any resolvers! Here is one example of finding all the items in a store between a certain price range:</p>&#xA;<pre><code>query ($storeName: String, $minPrice: Float!, $maxPrice: Float!) {&#xA;  getStore(name: $storeName) {&#xA;    id&#xA;    name&#xA;    stock(filter: { price: { between: { min: $minPrice, max: $maxPrice } } }) {&#xA;      id&#xA;      name&#xA;      price&#xA;      product {&#xA;        id&#xA;        name&#xA;        slug&#xA;        image&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>For a query to find only specific product names in a specific store, then use the cascade directive to remove the undesired Stock nodes (until Dgraph finished <a href=""https://discuss.dgraph.io/t/rfc-nested-filters-in-graphql/13560?u=amaster507"" rel=""nofollow noreferrer"">nested filters RFC</a> in progress)</p>&#xA;<pre><code>query ($storeName: String, $productIDs: [ID!]!) {&#xA;  getStore(name: $storeName) {&#xA;    id&#xA;    name&#xA;    stock @cascade(fields:[&quot;product&quot;]) {&#xA;      id&#xA;      name&#xA;      price&#xA;      product(filter: { id: $productIDs }) @cascade(fields:[&quot;id&quot;]) {&#xA;        id&#xA;        name&#xA;        slug&#xA;        image&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1707323,,,,2021-05-19 14:06:59,"",,0,0,0,2021-05-19 14:06:59
67610734,1,,,0,342,"<p>I am using <code>express-graphql</code> and I am trying to implement interfaces, like <a href=""https://atheros.ai/blog/graphql-interfaces-and-unions-how-to-design-graphql-schema"" rel=""nofollow noreferrer"">here</a> and <a href=""https://stackoverflow.com/questions/52088172/how-do-you-handle-an-array-of-multiple-types-ex-different-content-blocks-in-g"">here</a>. However, I do not know how to implement those, since the notation people use is totally different from what I am used to in nodejs.</p>&#xA;<p>In the second answer, for example, somebody wrote this:</p>&#xA;<pre><code>type Query {&#xA;  blocks: [ ContentBlock! ]!&#xA;}&#xA;&#xA;type Video implements ContentBlock {&#xA;  id: ID!&#xA;  url: String!&#xA;}&#xA;&#xA;type Quote implements ContentBlock {&#xA;  id: ID!&#xA;  body: String!&#xA;  author: String&#xA;}&#xA;&#xA;type Advertisement implements ContentBlock {&#xA;  id: ID!&#xA;  src: String!&#xA;  backgroundColor: String&#xA;}&#xA;&#xA;&#xA;interface ContentBlock {&#xA;  id: ID!&#xA;}&#xA;</code></pre>&#xA;<p>My own definitions in <code>express-graphql</code> look more like this however:</p>&#xA;<pre><code>const Quote = new GraphQLObjectType({&#xA;  name: &quot;Quote&quot;,&#xA;  fields: () =&gt; ({&#xA;    id: { type: GraphQLID },&#xA;    body: { type: GraphQLString },&#xA;    author: { type: GraphQLString },&#xA;  }),&#xA;});&#xA;</code></pre>&#xA;<p>Could somebody help me out here? I am also wondering where to find this information in general. I looked at the <a href=""https://github.com/graphql/express-graphql"" rel=""nofollow noreferrer"">documentation of express-graphql on github</a> but I couldn't find anything explaining how to do interfaces or unions.</p>&#xA;",15972340,,,,2021-05-19 20:52:09,How to Implement Interfaces or Unions in Express-GraphQL,<javascript><node.js><graphql><graphql-js><express-graphql>,0,2,0,2021-05-19 20:52:09
67619371,2,,66806638,0,,<p>Looking at your problem I think you are trying to take string instead of Json field.This can be overcome if phone number is a JSON-field that you can try with JsonString datatype.</p>&#xA;,13550226,,,,2021-05-20 11:22:00,"",,0,0,0,2021-05-20 11:22:00
67620393,1,67623540,,0,18,"<p>I have a query that fetches some events array. Each node inside of <code>edges</code> can implement on of finite number of interfaces.</p>&#xA;<p><strong>Question:</strong>&#xA;Is it possible to check if a given node has a property named X (in this case <code>id</code>, <code>timestamp</code> and <code>content</code>) instead of using multiple inline fragments (<code>... on {Type}</code>)?</p>&#xA;<pre><code>        events(last: $eventCount) {&#xA;            edges {&#xA;                node {&#xA;                    ... on Type1 {&#xA;                        id&#xA;                        timestamp&#xA;                        content&#xA;                    }&#xA;                    ... on Type2 {&#xA;                        id&#xA;                        timestamp&#xA;                        content&#xA;                    }&#xA;                    ... on Type3 {&#xA;                        id&#xA;                        timestamp&#xA;                        content&#xA;                    }&#xA;                    ... on Type4 {&#xA;                        id&#xA;                        timestamp&#xA;                        content&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;</code></pre>&#xA;<p>In this example I'd like to get rid of <code>... on Type1</code>, <code>... on Type2</code> etc. and just check if <code>id</code>, <code>timestamp</code> and <code>content</code> properties exist.</p>&#xA;",6126595,,,,2021-05-20 15:32:32,Check if given type has a property named X. Reduce inline fragments,<graphql>,1,0,0,2021-05-20 12:30:30
67621381,2,,67619735,0,,<p>try these two options:</p>&#xA;<p>for 1st index</p>&#xA;<pre><code>console.log(data[0].id);&#xA;</code></pre>&#xA;<p>or if it gives undefined or something else</p>&#xA;<p>then try to grab it from object directly</p>&#xA;<pre><code>let { id } = data[0];&#xA;console.log(id);&#xA;</code></pre>&#xA;<p>also try without the index</p>&#xA;,15188222,,,,2021-05-20 13:33:16,"",,0,0,0,2021-05-20 13:33:16
67621584,2,,67619735,0,,"<p>I have test this option:</p>&#xA;<p>console.log(evenements[0].id);</p>&#xA;<p>I get the id , i have test your second option</p>&#xA;<p>let { idEvent } = evenements[0].id;&#xA;console.log(idEvent);</p>&#xA;<p>idEvent is undefined but in this version it's ok</p>&#xA;<p>let idEvent = evenements[0].id;&#xA;console.log(idEvent);</p>&#xA;<p><a href=""https://i.stack.imgur.com/gkK7D.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gkK7D.png"" alt=""enter image description here"" /></a></p>&#xA;<p>evenements it's an array but impossible to recover its value elsewhere</p>&#xA;",12182575,,12182575,2021-05-20 13:49:51,2021-05-20 13:49:51,"",,0,0,0,2021-05-20 13:43:13
67651763,1,,,1,166,"<p>What would be the best way to create a response for the user when he is trying to add a new item to an order that is not longer in stock?&#xA;Here is my simplified setup:</p>&#xA;<pre><code>type Product {&#xA;    id: ID!&#xA;    unitsInStock: Int!&#xA;}&#xA;&#xA;type OrderItem {&#xA;    id: ID!&#xA;    units: Int!&#xA;    product: Product! @belongsTo&#xA;}&#xA;&#xA;type Mutation {&#xA;    createOrderItem(input: CreateOrderItemInput! @spread): OrderItem @create&#xA;}&#xA;&#xA;input ProductBelongsTo {&#xA;    connect: ID&#xA;    create: CreateOrderItemInput&#xA;}&#xA;&#xA;input CreateOrderItemInput {&#xA;    units: Int!&#xA;    product: ProductBelongsTo&#xA;}&#xA;</code></pre>&#xA;<p>Basically, before committing the <code>createOrderItem</code> mutation I want to check if the product selected for the order is present in stock, for example, if the user selects too many units of the product he would get a friendly message saying &quot;only 10 items left remaining&quot;, or if stock is depleted &quot;this item is no longer in stock, please update stock to continue&quot;.</p>&#xA;<p>How can I do that?</p>&#xA;",4061068,,10794031,2021-05-23 17:27:59,2021-06-29 13:43:14,Custom condition for GraphQL mutation that returns message to user,<graphql><laravel-lighthouse>,1,7,0,2021-05-22 16:21:08
67660843,2,,67645543,0,,"<p>There isn't a straightforward way to do this that I'm aware of.</p>&#xA;<p>Below is how I would solve this.</p>&#xA;<ol>&#xA;<li>Create a @key on Product on the owner property, so that you can query by owner.</li>&#xA;<li>Overwrite the CreateProduct mutation. In your custom resolver, before creating a new Product, query the Product table byOwner, using the owner id passed in, to count how many already exist.&#xA;Here is the documentation: <a href=""https://docs.amplify.aws/cli/graphql-transformer/resolvers#add-a-custom-geolocation-search-resolver-that-targets-an-elasticsearch-domain-created-by-searchable"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql-transformer/resolvers#add-a-custom-geolocation-search-resolver-that-targets-an-elasticsearch-domain-created-by-searchable</a></li>&#xA;</ol>&#xA;",3149835,,,,2021-05-23 14:29:35,"",,0,0,0,2021-05-23 14:29:35
67675586,1,,,1,239,"<p>I am trying to get the occurrence count of <code>Dialog(</code> in my repository using SourceGraph API via curl. I am using regex in search. It doesn't seem to work as it returns <code>resultCount</code> as 0</p>&#xA;<p>Curl request:</p>&#xA;<pre><code>curl -H 'Authorization: token API_TOKEN' -d '{&quot;query&quot;:&quot;query($query: String!) { search(query: $query patternType:regexp) { results { matchCount } } }&quot;,&quot;variables&quot;:{&quot;query&quot;:&quot;lang:kotlin case:yes -file:core_ds_component/*|app_ds_catalog/*  repo:github.com/username/repo content:^[\\\\x20\\\\t]+Dialog\\\\(&quot;}}' https://sourcegraph.com/.api/graphql&#xA;</code></pre>&#xA;<p>Output:</p>&#xA;<pre><code>{&quot;data&quot;:{&quot;search&quot;:{&quot;results&quot;:{&quot;resultCount&quot;:0}}}}%&#xA;</code></pre>&#xA;<p>However, it works just fine in SourceGraph API console. Here is how the query looks like in the SourceGraph API console search bar:</p>&#xA;<pre><code>repo:^github\.com/username/repo$ -file:core_ds_component/*|app_ds_catalog/* content:^[\x20\t]+Dialog\( lang:kotlin&#xA;</code></pre>&#xA;<p>It returns the expected result of <code>8</code> as count in the console.</p>&#xA;<p>Note: I have enabled case-insensitive and regex search in the bar options.&#xA;<a href=""https://i.stack.imgur.com/B9cpB.png"" rel=""nofollow noreferrer"">Screenshot</a></p>&#xA;<p>I am probably doing something wrong in designing the curl request corresponding to the GraphQL search query. Could someone please guide me?</p>&#xA;",9685218,,9685218,2021-05-25 02:22:50,2021-05-25 02:22:50,How to run GraphQL search query (with regex) using CURL?,<regex><api><curl><graphql><sourcegraph>,0,0,0,2021-05-24 16:21:06
67699081,2,,57405914,0,,"<p>Go to Apps -&gt; Manage Apps at the bottom and then :&#xA;Create a private app in Shopify, which will connect to your application. Make sure you manage permission for what you want to query</p>&#xA;<p>After creating the private app you will get the password which you can use as the token for your HTTP requests with <strong>header</strong> 'X-Shopify-Access-Token' <strong>value</strong>: password</p>&#xA;<pre><code>  curl -X POST \&#xA;  https://{shop}.myshopify.com/admin/api/2021-04/graphql.json \&#xA;  -H 'Content-Type: application/graphql' \&#xA;  -H 'X-Shopify-Access-Token: {password}' \&#xA;  -d '&#xA;  {&#xA;    products(first: 5) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          handle&#xA;        }&#xA;      }&#xA;      pageInfo {&#xA;        hasNextPage&#xA;      }&#xA;    }&#xA;  }&#xA;  '&#xA;</code></pre>&#xA;<p>For more visit: <a href=""https://shopify.dev/docs/admin-api/getting-started#authentication"" rel=""nofollow noreferrer"">https://shopify.dev/docs/admin-api/getting-started#authentication</a></p>&#xA;<p>The way I use in NodeJS is by using package <strong>&quot;graphql-request&quot;</strong> to make requests and</p>&#xA;<pre><code>const mutation = gql`&#xA;      mutation createProduct(&#xA;        $input: ProductInput!&#xA;        $media: [CreateMediaInput!]&#xA;      ) {&#xA;        productCreate(input: $input, media: $media) {&#xA;          userErrors {&#xA;            field&#xA;            message&#xA;          }&#xA;          product {&#xA;            id&#xA;            metafields(first: 1) {&#xA;              edges {&#xA;                node {&#xA;                  id&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    `;&#xA;     //const input = form your own input &#xA;     const res = await graphQLClient.rawRequest(mutation, input);&#xA;</code></pre>&#xA;",12103503,,,,2021-05-26 05:39:24,"",,0,1,0,2021-05-26 05:39:24
67701450,2,,67699967,0,,"<p>The GraphiQL app uses the Admin GraphQL and you are trying the StoreFront GraphQL.</p>&#xA;<p>The Admin and StoreFront GraphQL are very different from one another. The admin GraphQL is used for creating/updating/deleting/outputing items from your store, but the StoreFront GraphQL is mainly used for outputting data since it's public and it will be huge security issue if could modify your store.</p>&#xA;<p>Because of that both APIs have different access to different methods and there are methods that are available only for the Admin GraphQL and the other way around, there are methods only available to the StoreFront GraphQL as well.</p>&#xA;<hr />&#xA;<p><strong>TL;DR</strong> <code>inventoryItems</code> method is not available for the <code>Storefront GraphQL</code>, you can access it from the <code>Admin GraphQL</code>.</p>&#xA;",2329464,,,,2021-05-26 08:42:53,"",,0,0,0,2021-05-26 08:42:53
67706272,1,67707372,,-1,103,"<p>I'm using Apollo GraphQL in my React app.</p>&#xA;<p>For instance, I have a query</p>&#xA;<pre><code>{&#xA;  files(id: 1) {&#xA;    name&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>I've got 10 files and I want to get just one field.</p>&#xA;<p>As far as I know, I can't create something like this</p>&#xA;<pre><code>{&#xA;  files(id: 1) {&#xA;    name&#xA;  }&#xA;  files(id: 2) {&#xA;    name&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>It gives me an error.</p>&#xA;<p>I'm ready to iterate through id's [1,2,3,..10], but it looks like it's impossible using useQuery.</p>&#xA;<p>I'm stuck. Appreciate any help!</p>&#xA;",11213323,,,,2021-05-26 14:48:52,How to send a similar GraphQL query with diffirent ID's using Apollo?,<reactjs><graphql><apollo><react-apollo>,1,0,0,2021-05-26 13:46:35
67720113,2,,45957784,3,,"<p>Exactly for GitHub, there is an example on using the Github GraphQL API with Python 3</p>&#xA;<p><a href=""https://gist.github.com/gbaman/b3137e18c739e0cf98539bf4ec4366ad"" rel=""nofollow noreferrer"">https://gist.github.com/gbaman/b3137e18c739e0cf98539bf4ec4366ad</a></p>&#xA;<p>(check link as it has a lot of comments including better code for authentication)</p>&#xA;<pre class=""lang-py prettyprint-override""><code># An example to get the remaining rate limit using the Github GraphQL API.&#xA;&#xA;import requests&#xA;&#xA;headers = {&quot;Authorization&quot;: &quot;Bearer YOUR API KEY&quot;}&#xA;&#xA;&#xA;def run_query(query): # A simple function to use requests.post to make the API call. Note the json= section.&#xA;    request = requests.post('https://api.github.com/graphql', json={'query': query}, headers=headers)&#xA;    if request.status_code == 200:&#xA;        return request.json()&#xA;    else:&#xA;        raise Exception(&quot;Query failed to run by returning code of {}. {}&quot;.format(request.status_code, query))&#xA;&#xA;        &#xA;# The GraphQL query (with a few aditional bits included) itself defined as a multi-line string.       &#xA;query = &quot;&quot;&quot;&#xA;{&#xA;  viewer {&#xA;    login&#xA;  }&#xA;  rateLimit {&#xA;    limit&#xA;    cost&#xA;    remaining&#xA;    resetAt&#xA;  }&#xA;}&#xA;&quot;&quot;&quot;&#xA;&#xA;result = run_query(query) # Execute the query&#xA;remaining_rate_limit = result[&quot;data&quot;][&quot;rateLimit&quot;][&quot;remaining&quot;] # Drill down the dictionary&#xA;print(&quot;Remaining rate limit - {}&quot;.format(remaining_rate_limit))&#xA;</code></pre>&#xA;<p>And there are many Python GraphQL client libraries:</p>&#xA;<ul>&#xA;<li><a href=""https://github.com/graphql-python/gql"" rel=""nofollow noreferrer"">https://github.com/graphql-python/gql</a> (aka <a href=""https://github.com/ekampf/gql"" rel=""nofollow noreferrer"">https://github.com/ekampf/gql</a>)</li>&#xA;<li><a href=""https://github.com/graphql-python/gql-next"" rel=""nofollow noreferrer"">https://github.com/graphql-python/gql-next</a></li>&#xA;<li><a href=""https://github.com/prodigyeducation/python-graphql-client"" rel=""nofollow noreferrer"">https://github.com/prodigyeducation/python-graphql-client</a></li>&#xA;</ul>&#xA;<p>Official list is at <a href=""https://graphql.org/code/#python"" rel=""nofollow noreferrer"">https://graphql.org/code/#python</a><br />&#xA;(just scroll down, client libraries are after server libraries)</p>&#xA;",482717,,482717,2021-05-28 02:15:53,2021-05-28 02:15:53,"",,0,0,0,2021-05-27 10:17:24
67721323,1,,,2,489,"<p>I have two services (implemented using DGS Netflix) which I want to federate using apollo federation. First one is the user service which model looks something like this:</p>&#xA;<pre><code>type User @key(fields: &quot;sku&quot;) {&#xA;    id: ID!&#xA;    sku: Long&#xA;    score: Float&#xA;}&#xA;</code></pre>&#xA;<p>and each can have a product that comes from another service:</p>&#xA;<pre><code>type User @key(fields: &quot;sku&quot;) @extends {&#xA;    sku: Long! @external&#xA;    product: Product!&#xA;}&#xA;</code></pre>&#xA;<p>And I want to get all the users with their products, but it can happen that a user has no product.</p>&#xA;<p>Is there a way to avoid returning a user when its product is null?</p>&#xA;<pre><code>users: [User]&#xA;</code></pre>&#xA;<p>Currently my response looks like this:</p>&#xA;<pre><code>&quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;The field at path '/_entities[0]/product' was declared as a non null type, but the code involved in retrieving data has wrongly returned a null value.  The graphql specification requires that the parent field be set to null, or if that is non nullable that it bubble up null to its parent and so on. The non-nullable type is 'Product' within parent type 'User'&quot;,&#xA;} ...&#xA;    &quot;data&quot;: {&#xA;        &quot;users&quot;: [&#xA;          null,&#xA;          null,&#xA;          {&#xA;            &quot;sku&quot;: 9002490100490,&#xA;            &quot;score&quot;: 0.72,&#xA;            &quot;product&quot;: {&#xA;              &quot;title&quot;: &quot;Sabritas limón 160 g&quot;,&#xA;              &quot;name&quot;: &quot;Sabritas limón&quot;&#xA;            }&#xA;          },&#xA;          null,&#xA;          null,&#xA;          null,&#xA;          {&#xA;            &quot;sku&quot;: 99176480310,&#xA;            &quot;score&quot;: 0.99,&#xA;            &quot;product&quot;: {&#xA;              &quot;title&quot;: &quot;Cerveza Boca Negra pilsner 355 ml&quot;,&#xA;              &quot;name&quot;: &quot;Cerveza Boca Negra pilsner&quot;&#xA;            }&#xA;          },&#xA;          null,&#xA;          {&#xA;            &quot;sku&quot;: 8712000030605,&#xA;            &quot;score&quot;: 0.21,&#xA;            &quot;product&quot;: {&#xA;              &quot;title&quot;: &quot;Cerveza Victoria lata 355 ml x12&quot;,&#xA;              &quot;name&quot;: &quot;Cerveza Victoria lata&quot;&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;</code></pre>&#xA;<p>I'd like to have the same list but without the nulls in the list and without the error. Is it possible? I was thinking to add some kind of custom directive that removes the null elements but could not succeed.</p>&#xA;",4786058,,,,2021-07-06 15:02:38,How to avoid returning null in Apollo Federation GraphQL,<graphql><apollo><apollo-federation><netflix-dgs>,1,0,0,2021-05-27 11:35:14
67723190,2,,67722856,1,,"<p>Luiz, the <code>map</code> function in JavaScript is associated with <code>arrays</code>. You're trying to use the <code>map</code> function on <code>node</code>, which is an <code>object</code>.</p>&#xA;<p>Use the code below to get your desired result.</p>&#xA;<pre><code>{&#xA;  data.allContentfulAwards.edges.map(({node}) =&gt; (&#xA;    &lt;div&gt;&#xA;      {node.year}&#xA;      {node.championships.map(({contestName, titles}) =&gt; (&#xA;        &lt;AwardsCollapse name={contestName}&gt;&#xA;          {titles.map(({key}) =&gt; (&#xA;            &lt;p&gt;{key}&lt;/p&gt;&#xA;          ))}&#xA;        &lt;/AwardsCollapse&gt;&#xA;      ))}&#xA;    &lt;/div&gt;&#xA;  ));&#xA;}&#xA;</code></pre>&#xA;<p>~Prayag</p>&#xA;",3535210,,5802882,2021-05-28 18:51:26,2021-05-28 18:51:26,"",,0,1,0,2021-05-27 13:29:13
67730424,2,,67729963,3,,"<p>Check this <a href=""https://stackoverflow.com/questions/67678311/spring-boot-is-not-creating-tables-automatically"">post</a> it may give you the solution</p>&#xA;<blockquote>&#xA;<p>By default, data.sql scripts are now run before Hibernate is&#xA;initialized. This aligns the behavior of basic script-based&#xA;initialization with that of Flyway and Liquibase. If you want to use&#xA;data.sql to populate a schema created by Hibernate, set&#xA;spring.jpa.defer-datasource-initialization to true. While mixing&#xA;database initialization technologies is not recommended, this will&#xA;also allow you to use a schema.sql script to build upon a&#xA;Hibernate-created schema before it’s populated via data.sql.</p>&#xA;</blockquote>&#xA;<p>you'll have to convert <code>spring.jpa.defer-datasource-initialization</code> to yml tho.</p>&#xA;",16031852,,,,2021-05-27 21:52:29,"",,0,0,0,2021-05-27 21:52:29
67783340,2,,67705318,3,,"<h2>TLDR</h2>&#xA;<p>A temporary fix, until this issue is addressed by maintainers, is to copy <a href=""https://github.com/troncali/nest-vue/blob/dev-nx/.yarn/patches/%40nestjs/graphql.patch"" rel=""nofollow noreferrer"">this patch file</a> into your repository, then modify your package.json to use the following:</p>&#xA;<p><code>&quot;@nestjs/graphql&quot;: &quot;patch:@nestjs/graphql@7.10.6#[YOUR/LOCAL/PATH]/graphql.patch&quot;</code></p>&#xA;<h2>Background</h2>&#xA;<p>I ran into this same issue with my project. I'm not sure about the origin, but I did see that <code>apollo-server-fastify</code> was updated to 3.0.0-lambda.0 about 5 days ago and to 3.0.0-preview.0 a few hours ago.</p>&#xA;<p>I tracked the possible fix down to the <code>registerFastify</code> method in <code>@nestjs/graphql</code>.  The solution, I believe, is to call <code>await apolloServer.start()</code> on line 228 in <code>lib/graphql.module.ts</code> before the Apollo Server's <code>createHandler()</code> method is called.  I <a href=""https://github.com/nestjs/graphql/issues/1568"" rel=""nofollow noreferrer"">opened an issue</a> on the repository with more details, which you can follow until resolved.</p>&#xA;<p>I implemented the fix in the template repository I'm working on with <code>yarn patch @nestjs/graphql</code>. The repository is available on the <code>dev-nx</code> branch at <a href=""https://github.com/troncali/nest-vue/tree/dev-nx"" rel=""nofollow noreferrer"">troncali/nest-vue</a>.  The patch is located in <a href=""https://github.com/troncali/nest-vue/blob/dev-nx/.yarn/patches/%40nestjs/graphql.patch"" rel=""nofollow noreferrer""><code>./.yarn/patches/@nestjs/graphql.patch</code></a>.</p>&#xA;",16091346,,1839439,2021-06-01 05:58:32,2021-06-01 05:58:32,"",,0,0,0,2021-06-01 05:52:30
67785134,1,,,0,178,"<p>I'm writing a graphQL API using Apollo server and I would like to know is there a way to add an error to the <code>errors</code> array returned in the response, without throwing an actual error and failing the entire resolver.</p>&#xA;<p>In my code I iterate an input array and in case I encounter an unsupported item, I wish to add it to the <code>errors</code> array returned in the response, while still returning data for the other valid items.</p>&#xA;<p>Please advise if and how I can do that.</p>&#xA;<p>Thanks in advance.</p>&#xA;",1850978,,,,2021-06-01 08:15:35,graphql - Add items to `errors` array while still returning data,<graphql><apollo>,0,2,0,2021-06-01 08:15:35
67801235,2,,67798146,6,,"<p>There is a need to inform GraphQL the type of the arguments explicitly if it is a complex object array.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>@Mutation(returns =&gt; [ProductResponse])&#xA;async createMultipleProducts(@Args({ name: 'data', type: () =&gt; [ProductRequest] }) products: ProductRequest[]): Promise&lt;Array&lt;ProductResponse&gt;&gt; {&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;",15569492,,,,2021-06-02 08:05:31,"",,0,0,0,2021-06-02 08:05:31
67802447,1,67868362,,2,1552,"<p>I'm trying to filter products retrieved from my backend magento2 with custom attributes using graphql query as mentioned in official documentation:[https://devdocs.magento.com/guides/v2.4/graphql/custom-filters.htm]&#xA;using attribute_code: &quot;color&quot; which exists as a custom attribute but that gave me the following error in postman: <strong>&quot;Field &quot;color&quot; is not defined by type ProductAttributeFilterInput.&quot;</strong></p>&#xA;<p>here is my query:    `{&#xA;products(filter: {</p>&#xA;<pre><code> color: { eq: &quot;4677&quot; } }) {&#xA;total_count&#xA;items {&#xA;  name&#xA;  sku&#xA;  price&#xA;}&#xA;</code></pre>&#xA;<p>}&#xA;}`</p>&#xA;<p>I'm using magento 2.3.4</p>&#xA;<p><a href=""https://i.stack.imgur.com/DV0sN.png"" rel=""nofollow noreferrer"">error in postman</a></p>&#xA;<p>I would be grateful if someone could help me</p>&#xA;",10620820,,10620820,2021-06-02 13:48:41,2021-06-07 08:34:29,Filtering products using custom attributes in magento2 with graphql causes error: Field is not defined by type ProductAttributeFilterInput,<filter><graphql><magento2><custom-attributes>,1,0,0,2021-06-02 09:28:15
67838446,1,,,0,103,"<p>I need to access only the &quot;departments&quot; type in this large type generated from GraphQL:</p>&#xA;<pre><code>export type GetCompanyChartQuery = (&#xA;  { __typename?: 'Query' }&#xA;  &amp; { generateOrgChart?: Maybe&lt;(&#xA;    { __typename?: 'DepartmentNode' }&#xA;    &amp; Pick&lt;DepartmentNode, 'name'&gt;&#xA;    &amp; { manager?: Maybe&lt;(&#xA;      { __typename?: 'EmployeeNode' }&#xA;      &amp; Pick&lt;EmployeeNode, 'name' | 'mobilePhone'&gt;&#xA;    )&gt;, departments?: Maybe&lt;Array&lt;Maybe&lt;(&#xA;      { __typename?: 'DepartmentNode' }&#xA;      &amp; Pick&lt;DepartmentNode, 'name' | 'depth'&gt;&#xA;      &amp; { manager?: Maybe&lt;(&#xA;        { __typename?: 'EmployeeNode' }&#xA;        &amp; Pick&lt;EmployeeNode, 'name'&gt;&#xA;      )&gt;, employees?: Maybe&lt;Array&lt;Maybe&lt;(&#xA;        { __typename?: 'EmployeeNode' }&#xA;        &amp; Pick&lt;EmployeeNode, 'imageUrl' | 'mobilePhone' | 'name' | 'position' | 'title' | 'depth'&gt;&#xA;      )&gt;&gt;&gt;, departments?: Maybe&lt;Array&lt;Maybe&lt;(&#xA;        { __typename?: 'DepartmentNode' }&#xA;        &amp; Pick&lt;DepartmentNode, 'name' | 'depth'&gt;&#xA;        &amp; { manager?: Maybe&lt;(&#xA;          { __typename?: 'EmployeeNode' }&#xA;          &amp; Pick&lt;EmployeeNode, 'name'&gt;&#xA;        )&gt;, employees?: Maybe&lt;Array&lt;Maybe&lt;(&#xA;          { __typename?: 'EmployeeNode' }&#xA;          &amp; Pick&lt;EmployeeNode, 'imageUrl' | 'mobilePhone' | 'name' | 'position' | 'title' | 'depth'&gt;&#xA;        )&gt;&gt;&gt; }&#xA;      )&gt;&gt;&gt; }&#xA;    )&gt;&gt;&gt; }&#xA;  )&gt; }&#xA;);&#xA;</code></pre>&#xA;<p>I cannot find a way around this. Pick&lt;GetCompanyChartQuery, 'subType'&gt; or GetCompanyChartQuery['subtype'] wont do the trick here.</p>&#xA;<p>I am trying to fetch data with a GraphQL query and put the response in a state like this:</p>&#xA;<pre><code>const [departments, setDepartments] = useState&lt;TheTypeINeedToAccess&gt;();&#xA;&#xA;setDepartments(data?.generateOrgChart?.departments);&#xA;</code></pre>&#xA;<p>But to do this I need the correct type.</p>&#xA;<p>Thanks in advance.</p>&#xA;",13014396,,,,2021-06-04 19:01:16,Access multiple nested TypeScript type generated from GraphQL,<reactjs><typescript><types><graphql><react-query>,1,0,0,2021-06-04 13:51:49
67868362,2,,67802447,3,,<p>As far as the error message I can understand that the color field is not declared in the ProductAttributeFilterInput. Please check the schema.graphqls file again and make sure the fields you want are declared properly</p>&#xA;,12318166,,,,2021-06-07 08:34:29,"",,0,0,0,2021-06-07 08:34:29
67878464,1,,,0,273,"<p>Recently i've been working with graphql API on github and i have some querys working correctly, including a mutation.</p>&#xA;<p>This is on Enterprise btw.</p>&#xA;<p>One simple query that i use is the following (owner/name as an example):</p>&#xA;<pre><code>query MyQuery {&#xA;  repository(name: &quot;name&quot;, owner: &quot;owner&quot;) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But there is a weird problem.&#xA;It works fine on my PC (Python Script with requests library) and a few others PC's aswell.</p>&#xA;<p>But on some PC's, and most importantly on our build machine, it says NOT_FOUND on 2 out of 33 different repository's (always the same 2).</p>&#xA;<p>The error is the following (owner/name as an example):</p>&#xA;<blockquote>&#xA;<p>{'type': 'NOT_FOUND', 'path': ['repository'], 'locations': [{'line': 3, 'column': 9}], 'message': &quot;Could not resolve to a Repository with the name 'owner/name'.&quot;}</p>&#xA;</blockquote>&#xA;<p>Some things that i have tried:</p>&#xA;<ul>&#xA;<li>Different tokens (no changes)</li>&#xA;<li>Curl command seems to work, even on the affected PC's.</li>&#xA;</ul>&#xA;<p>Line of code that i use for the request on Python.</p>&#xA;<pre><code>response = requests.post(url=GRAPHQL_URL, json=query, headers=self._headers)&#xA;</code></pre>&#xA;<p>Does anyone had this problem aswell?</p>&#xA;<p>Thank you.</p>&#xA;",16036066,,,,2021-06-19 10:09:08,Repository ‘type’: ‘NOT_FOUND’ graphQL API,<python><python-requests><graphql><github-api>,1,1,0,2021-06-07 20:41:39
67892369,1,,,0,110,"<p>I'm learning graphQL API for Ruby on Rails applications, and trying to learn how to use Altair. I'm confused on how to get the schema into Altair for me to test out queries. When I input the link <code>http://localhost:3000/graphiql</code> in Altair like so:</p>&#xA;<p><a href=""https://i.stack.imgur.com/veyfM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/veyfM.png"" alt=""enter image description here"" /></a></p>&#xA;<p>It gives me this error message:</p>&#xA;<pre><code>{&#xA;  &quot;status&quot;: 404,&#xA;  &quot;error&quot;: &quot;Not Found&quot;,&#xA;  &quot;exception&quot;: &quot;#&lt;ActionController::RoutingError: No route matches [POST] \&quot;/graphiql\&quot;&gt;&quot;,&#xA;  &quot;traces&quot;: {&#xA;    &quot;Application Trace&quot;: [],&#xA;    &quot;Framework Trace&quot;: [&#xA;      {&#xA;        &quot;id&quot;: 0,&#xA;        &quot;trace&quot;: &quot;actionpack (5.1.7) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 1,&#xA;        &quot;trace&quot;: &quot;actionpack (5.1.7) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 2,&#xA;        &quot;trace&quot;: &quot;railties (5.1.7) lib/rails/rack/logger.rb:36:in `call_app'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 3,&#xA;        &quot;trace&quot;: &quot;railties (5.1.7) lib/rails/rack/logger.rb:24:in `block in call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 4,&#xA;        &quot;trace&quot;: &quot;activesupport (5.1.7) lib/active_support/tagged_logging.rb:69:in `block in tagged'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 5,&#xA;        &quot;trace&quot;: &quot;activesupport (5.1.7) lib/active_support/tagged_logging.rb:26:in `tagged'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 6,&#xA;        &quot;trace&quot;: &quot;activesupport (5.1.7) lib/active_support/tagged_logging.rb:69:in `tagged'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 7,&#xA;        &quot;trace&quot;: &quot;railties (5.1.7) lib/rails/rack/logger.rb:24:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 8,&#xA;        &quot;trace&quot;: &quot;actionpack (5.1.7) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 9,&#xA;        &quot;trace&quot;: &quot;actionpack (5.1.7) lib/action_dispatch/middleware/request_id.rb:25:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 10,&#xA;        &quot;trace&quot;: &quot;rack (2.2.3) lib/rack/runtime.rb:22:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 11,&#xA;        &quot;trace&quot;: &quot;activesupport (5.1.7) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 12,&#xA;        &quot;trace&quot;: &quot;actionpack (5.1.7) lib/action_dispatch/middleware/executor.rb:12:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 13,&#xA;        &quot;trace&quot;: &quot;actionpack (5.1.7) lib/action_dispatch/middleware/static.rb:125:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 14,&#xA;        &quot;trace&quot;: &quot;static-rails (0.1.0) lib/static-rails/site_middleware.rb:17:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 15,&#xA;        &quot;trace&quot;: &quot;rack (2.2.3) lib/rack/sendfile.rb:110:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 16,&#xA;        &quot;trace&quot;: &quot;rack-cors (1.1.1) lib/rack/cors.rb:100:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 17,&#xA;        &quot;trace&quot;: &quot;railties (5.1.7) lib/rails/engine.rb:522:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 18,&#xA;        &quot;trace&quot;: &quot;puma (3.12.6) lib/puma/configuration.rb:227:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 19,&#xA;        &quot;trace&quot;: &quot;puma (3.12.6) lib/puma/server.rb:706:in `handle_request'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 20,&#xA;        &quot;trace&quot;: &quot;puma (3.12.6) lib/puma/server.rb:476:in `process_client'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 21,&#xA;        &quot;trace&quot;: &quot;puma (3.12.6) lib/puma/server.rb:334:in `block in run'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 22,&#xA;        &quot;trace&quot;: &quot;puma (3.12.6) lib/puma/thread_pool.rb:135:in `block in spawn_thread'&quot;&#xA;      }&#xA;    ],&#xA;    &quot;Full Trace&quot;: [&#xA;      {&#xA;        &quot;id&quot;: 0,&#xA;        &quot;trace&quot;: &quot;actionpack (5.1.7) lib/action_dispatch/middleware/debug_exceptions.rb:63:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 1,&#xA;        &quot;trace&quot;: &quot;actionpack (5.1.7) lib/action_dispatch/middleware/show_exceptions.rb:31:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 2,&#xA;        &quot;trace&quot;: &quot;railties (5.1.7) lib/rails/rack/logger.rb:36:in `call_app'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 3,&#xA;        &quot;trace&quot;: &quot;railties (5.1.7) lib/rails/rack/logger.rb:24:in `block in call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 4,&#xA;        &quot;trace&quot;: &quot;activesupport (5.1.7) lib/active_support/tagged_logging.rb:69:in `block in tagged'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 5,&#xA;        &quot;trace&quot;: &quot;activesupport (5.1.7) lib/active_support/tagged_logging.rb:26:in `tagged'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 6,&#xA;        &quot;trace&quot;: &quot;activesupport (5.1.7) lib/active_support/tagged_logging.rb:69:in `tagged'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 7,&#xA;        &quot;trace&quot;: &quot;railties (5.1.7) lib/rails/rack/logger.rb:24:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 8,&#xA;        &quot;trace&quot;: &quot;actionpack (5.1.7) lib/action_dispatch/middleware/remote_ip.rb:79:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 9,&#xA;        &quot;trace&quot;: &quot;actionpack (5.1.7) lib/action_dispatch/middleware/request_id.rb:25:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 10,&#xA;        &quot;trace&quot;: &quot;rack (2.2.3) lib/rack/runtime.rb:22:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 11,&#xA;        &quot;trace&quot;: &quot;activesupport (5.1.7) lib/active_support/cache/strategy/local_cache_middleware.rb:27:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 12,&#xA;        &quot;trace&quot;: &quot;actionpack (5.1.7) lib/action_dispatch/middleware/executor.rb:12:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 13,&#xA;        &quot;trace&quot;: &quot;actionpack (5.1.7) lib/action_dispatch/middleware/static.rb:125:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 14,&#xA;        &quot;trace&quot;: &quot;static-rails (0.1.0) lib/static-rails/site_middleware.rb:17:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 15,&#xA;        &quot;trace&quot;: &quot;rack (2.2.3) lib/rack/sendfile.rb:110:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 16,&#xA;        &quot;trace&quot;: &quot;rack-cors (1.1.1) lib/rack/cors.rb:100:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 17,&#xA;        &quot;trace&quot;: &quot;railties (5.1.7) lib/rails/engine.rb:522:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 18,&#xA;        &quot;trace&quot;: &quot;puma (3.12.6) lib/puma/configuration.rb:227:in `call'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 19,&#xA;        &quot;trace&quot;: &quot;puma (3.12.6) lib/puma/server.rb:706:in `handle_request'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 20,&#xA;        &quot;trace&quot;: &quot;puma (3.12.6) lib/puma/server.rb:476:in `process_client'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 21,&#xA;        &quot;trace&quot;: &quot;puma (3.12.6) lib/puma/server.rb:334:in `block in run'&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 22,&#xA;        &quot;trace&quot;: &quot;puma (3.12.6) lib/puma/thread_pool.rb:135:in `block in spawn_thread'&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Based on the error message I thought it would have something to do with my <code>routes.rb</code> file but i'm not sure what so here it is:</p>&#xA;<pre><code>Rails.application.routes.draw do&#xA;  post &quot;/graphql&quot;, to: &quot;graphql#execute&quot;&#xA;&#xA;  if Rails.env.development?&#xA;    mount GraphiQL::Rails::Engine, at: '/graphiql', graphql_path: '/graphql'&#xA;&#xA;    root to: redirect('/graphiql')&#xA;  end&#xA;  # For details on the DSL available within this file, see http://guides.rubyonrails.org/routing.html&#xA;end&#xA;</code></pre>&#xA;<p>Also my development environment is Ubuntu on Windows. Thank you for the help.</p>&#xA;",10981110,,2166823,2021-07-05 22:26:55,2021-07-05 22:26:55,Altair GraphiQL,<ruby-on-rails><graphql>,0,2,0,2021-06-08 18:03:39
67909867,2,,67909230,1,,"<p>I wasn't quite able to follow what you're really asking, do you just want to find <code>seo</code> by id, and it might be in the results, which might be an array of null values, or null itself?</p>&#xA;<p>In that case <code>const seo = seoDataObject?.filter(x =&gt; x.node).find(x =&gt; x.node.id === id)?.node.seo;</code></p>&#xA;",2870176,,,,2021-06-09 18:30:40,"",,0,2,0,2021-06-09 18:30:40
67919435,2,,67919434,1,,"<p>You can <strong>escape values by putting them inside curly braces</strong>, like <code>key={value@something};</code>. This passes the values with special characters correctly.</p>&#xA;",6582612,,,,2021-06-10 10:33:11,"",,0,0,0,2021-06-10 10:33:11
67924449,2,,67922718,5,,"<p>Found the answer with the help of @xadms comment.</p>&#xA;<p>I could use either in if I only want those ids, or nin if I want them excluded. In order to have multiple, I should pass the ids as an array</p>&#xA;<pre><code>query MyQuery {&#xA;  allWpPage(filter: {databaseId: {in: [170, 59]}}) {&#xA;    nodes {&#xA;      title&#xA;      databaseId&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",12823829,,,,2021-06-10 15:43:29,"",,0,0,0,2021-06-10 15:43:29
67947966,1,,,0,547,"<p>I am trying to get all my repositories using the Github v4 API, but I can't find any query named <code>repositories</code>. I found a similar way to do so like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export const query = gql`&#xA;   query repositories() {&#xA;        search(query: &quot;user:userName&quot;, type: REPOSITORY, first: 50) {&#xA;        repositoryCount&#xA;        edges {&#xA;            node {&#xA;                ... on Repository {&#xA;                name&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>But this is not what I want because I would have to provide the username which I should get through another query (and I do not want to type it by myself)</p>&#xA;<p>Is there a way to get all my repositories by only using one query? I think it should be easy enough, but I can't find the way.</p>&#xA;",11148124,,,,2021-07-04 10:29:47,Getting all repositories query Github v4 API,<github><graphql><repository><github-api>,2,0,0,2021-06-12 10:34:43
67948020,2,,67947966,0,,"<p>I found the query:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export const query = gql`&#xA;   query repositories { &#xA;    viewer { &#xA;        login&#xA;        repositories(first: 30) {&#xA;            edges {&#xA;                node {&#xA;                name&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",11148124,,,,2021-06-12 10:41:42,"",,0,0,0,2021-06-12 10:41:42
67948257,2,,46774474,2,,"<p>I know that you cannot use an alias, but for everyone else who can (including me):</p>&#xA;<p>The simple answer taken from <a href=""https://github.com/graphql/graphql-js/issues/1361#issuecomment-393489320"" rel=""nofollow noreferrer"">github</a> is to use field aliases:</p>&#xA;<pre><code>zones {&#xA;    ... on Program {&#xA;        programTitle: title&#xA;    }&#xA;    ... on Teaser {&#xA;        teaserTitle: title&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",2229979,,2229979,2021-06-12 18:44:24,2021-06-12 18:44:24,"",,0,1,0,2021-06-12 11:10:18
68006877,1,,,0,116,"<p>The products resolver and field resolver of products provides the final-output (given below). But is there a way to omit the objects from final-ouput whose productData is null.</p>&#xA;<pre><code>@Resolver((of) =&gt; Products)&#xA;export class ProductsResolver {&#xA;&#xA;  @Query((returns) =&gt; [Products], {&#xA;    name: 'products',&#xA;  })&#xA;  getProducts() {&#xA;    returns products // returns object [{id: 1, id: 2}]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<pre><code>@Resolver((of) =&gt; Products)&#xA;export class ProductResolver implements ResolverInterface&lt;Products&gt; {&#xA;  @FieldResolver((returns) =&gt; ProductType, {&#xA;    nullable: false,&#xA;    name: 'productData',&#xA;  })&#xA;  async productData() {&#xA;    return object //first time it returns a proper object. &#xA;                  // second time it returns null&#xA;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<pre><code>@ObjectType()&#xA;export default class Products {&#xA;  @Field()&#xA;  id: string;&#xA;  @Field((type) =&gt; ProductType, { nullable: true })&#xA;  productData: ProductType;&#xA;  @Field((type) =&gt; Float, { nullable: true })&#xA;}&#xA;</code></pre>&#xA;<p>final-output</p>&#xA;<pre><code>  &quot;data&quot;: {&#xA;    &quot;Products&quot;: [&#xA;      {&#xA;        &quot;id&quot;: &quot;1&quot;,&#xA;        &quot;productData&quot;: { // inner object }&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: &quot;2&quot;,&#xA;        &quot;productData&quot;: null&#xA;      }&#xA;    ]&#xA;  }&#xA;</code></pre>&#xA;<p>desired-output</p>&#xA;<pre><code>  &quot;data&quot;: {&#xA;    &quot;Products&quot;: [&#xA;      {&#xA;        &quot;id&quot;: &quot;1&quot;,&#xA;        &quot;productData&quot;: { // inner object }&#xA;      }&#xA;  }&#xA;</code></pre>&#xA;",1998040,,1998040,2021-07-02 03:26:25,2021-07-02 03:26:25,How to omit an object if one of the fields in object is resolved as null by fieldResolver,<typescript><graphql><typegraphql>,0,2,0,2021-06-16 16:42:35
68022951,2,,66680731,0,,<p>We can use the additional putting of the spaces also</p>&#xA;,13846577,,,,2021-06-17 16:09:47,"",,0,0,0,2021-06-17 16:09:47
68024702,1,,,1,899,"<p>This query returns those issues which has either <code>label1</code> or <code>label2</code>. Basically, It returns all the issues of <code>label1</code> and <code>label2</code>.</p>&#xA;<pre><code>{&#xA;  repository(owner: &quot;another-user&quot;, name: &quot;another-repo&quot;) {&#xA;    issues(first: 100, filterBy: { labels:  [&quot;label1&quot;, &quot;label2&quot;}&quot;] }) {&#xA;      nodes {&#xA;        title&#xA;        body&#xA;        bodyHTML&#xA;        bodyText&#xA;        number&#xA;        labels(first: 100) {&#xA;          nodes {&#xA;            color&#xA;            name&#xA;            id&#xA;          }&#xA;        }&#xA;        author {&#xA;          url&#xA;          avatarUrl&#xA;          login&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I was trying to find <strong>a specific issue</strong> which have both <code>label1</code> and <code>label2</code> labels. How can I execute <strong>AND</strong> operation?</p>&#xA;",9847838,,,,2022-11-28 15:15:59,Github Graphql Filter issues which has multiple labels,<graphql><github-api>,2,0,0,2021-06-17 18:24:35
68028451,2,,68026346,0,,"<p>server.executeOperation calls processGraphQLRequest</p>&#xA;<p>and processGraphQLRequest return type is GraphQLResponse</p>&#xA;<pre><code>export interface GraphQLResponse {&#xA;  data?: Record&lt;string, any&gt; | null;&#xA;  errors?: ReadonlyArray&lt;GraphQLFormattedError&gt;;&#xA;  extensions?: Record&lt;string, any&gt;;&#xA;  http?: Pick&lt;Response, 'headers'&gt; &amp; Partial&lt;Pick&lt;Mutable&lt;Response&gt;, 'status'&gt;&gt;;&#xA;}&#xA;</code></pre>&#xA;<p>I'm not sure, but i think headers in GraphQLResponse.http</p>&#xA;<p>you can find call structure in github repo.</p>&#xA;<p><a href=""https://github.com/apollographql/apollo-server/blob/6b9c2a0f1932e6d8fb94a8662cc1da24980aec6f/packages/apollo-server-core/src/requestPipeline.ts#L126"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-server/blob/6b9c2a0f1932e6d8fb94a8662cc1da24980aec6f/packages/apollo-server-core/src/requestPipeline.ts#L126</a></p>&#xA;",6069964,,,,2021-06-18 02:04:36,"",,0,1,0,2021-06-18 02:04:36
68030171,1,,,0,310,"<p>Here are my inputs for nested mutation:</p>&#xA;<pre><code>input ActivityInput {&#xA;  id: ID&#xA;  user_id: ID&#xA;  goal: String&#xA;}&#xA;&#xA;input ActivityRelationInput {&#xA;  upsert: [ActivityInput]&#xA;  delete: [ID]&#xA;}&#xA;&#xA;input CustomerInput {&#xA;  id: ID&#xA;  name: String&#xA;  activities: ActivityRelationInput&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>And here is my mutation:</p>&#xA;<pre><code>extend type Mutation {&#xA;  customerUpsert(input: CustomerInput! @spread): Customer&#xA;  @upsert(model: &quot;App\\Models\\Customer&quot;)&#xA;  @inject(context: &quot;user.id&quot; name: &quot;activities.upsert[].user_id&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>I need to inject <code>user.id</code> into <code>Activity</code> input, but don't know how to use <code>@inject</code> for array inputs. I've tried the code above but didn't succeed. How can I achieve my goal?</p>&#xA;",11671686,,11671686,2021-06-19 07:40:54,2022-08-08 03:27:11,Laravel lighthouse inject nested mutations,<laravel><graphql><laravel-lighthouse>,1,2,0,2021-06-18 06:11:54
68054602,1,,,0,119,"<p>I have an API in GraphQL and trying to call it. First call to get first 50 records works fine, my query is,</p>&#xA;<pre><code>var firstQuery = &quot;{\&quot;query\&quot;: \&quot;{products(first: 100) {totalCount edges {node {id,name,brand{name},prices{quantity,price},tags{name},barcodes{code},lastCost,cost,caseQuantity,image} cursor} pageInfo { endCursor hasNextPage }}}\&quot;}&quot;;&#xA;&#xA;var task = flurlAutUrl&#xA;            .WithHeader(&quot;Content-Type&quot;, &quot;application/json&quot;)&#xA;            .WithHeader(&quot;Accept&quot;, &quot;application/json&quot;)&#xA;            .PostStringAsync(firstQuery)&#xA;            .ReceiveJson();&#xA;&#xA;        task.Wait();&#xA;</code></pre>&#xA;<p>when trying to get the next 50 records, getting an error as 400, bad request, at task.wait()&#xA;my query for second page records,</p>&#xA;<pre><code>var afterQueryLeft = &quot;{\&quot;query\&quot;: \&quot;{products(first: 100 after:&quot;;&#xA;var afterQueryRight = &quot;) {totalCount edges {node {id,name,brand{name},prices{quantity,price},tags{name},barcodes{code},lastCost,cost,caseQuantity,image} cursor} pageInfo { hasNextPage, endCursor }}}\&quot;}&quot;;&#xA;&#xA;&#xA;while (hasNextPage)&#xA;        {&#xA;            //var afterQuery = &quot;{\&quot;query\&quot;: \&quot;{products(first: 100 after:&quot;\&quot;lastCursor) {totalCount edges {node {id,name,brand{name},prices{quantity,price},tags{name},barcodes{code},lastCost,cost,caseQuantity,image} cursor} pageInfo { endCursor hasNextPage }}}\&quot;}&quot;;&#xA;&#xA;            var nextPageQuery =  afterQueryLeft + &quot;\&quot;&quot; + lastCursor + &quot;\&quot;&quot; + afterQueryRight;&#xA;            var nextPageTask = flurlAutUrl&#xA;                .WithHeader(&quot;Content-Type&quot;, &quot;application/json&quot;)&#xA;                .WithHeader(&quot;Accept&quot;, &quot;application/json&quot;)&#xA;                .PostStringAsync(nextPageQuery)&#xA;                .ReceiveJson();&#xA;&#xA;            nextPageTask.Wait();&#xA;}&#xA;</code></pre>&#xA;<p>What is wrong in my query, this query works fine in postman (200 ok)</p>&#xA;",15744604,,,,2021-06-20 09:49:01,Query in graphql API call using flurl,<json><api><graphql><flurl>,0,8,0,2021-06-20 09:49:01
68075693,1,68077717,,0,178,"<p>I need to get a query using graphql in strapi/gatsby where id is {id}.&#xA;According to the documentation <a href=""https://www.gatsbyjs.com/plugins/gatsby-source-strapi/#querying-data"" rel=""nofollow noreferrer"">found here</a> you query all like so:</p>&#xA;<pre><code>{&#xA;  allStrapiArticle {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        title&#xA;        content&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This works and I'm able to query however I'd like to get only one Article where id is {id};</p>&#xA;<p>I have tried:</p>&#xA;<pre><code>    {&#xA;  allStrapiArticle(id: &quot;4&quot;) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        title&#xA;        content&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And also:</p>&#xA;<pre><code>{&#xA;  allStrapiArticle {&#xA;    edges {&#xA;      node(id: &quot;4&quot;) {&#xA;        id&#xA;        title&#xA;        content&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Both of the above give me an error.  Any idea how I can achieve this?</p>&#xA;",2690257,,,,2021-06-22 06:09:10,Attempting to query with graphql where id is,<graphql><gatsby><strapi>,1,1,0,2021-06-21 23:04:09
68096071,1,,,0,448,"<p>I am trying to pass a product object to an invoice table so in my case I guess it is a one-to-many where one invoice has multiple products.&#xA;I tried to do something like this:</p>&#xA;<p>the schema:</p>&#xA;<pre><code>    type Product @model @key(name: &quot;productIDIndex&quot;, fields: [&quot;productID&quot;]) {&#xA;    id: String!&#xA;    name: String!&#xA;    handle: String&#xA;    description: String&#xA;    categories: [String]&#xA;    tags: [String]&#xA;    images: [Image]&#xA;    price: Float&#xA;    sellingPrice: Float&#xA;    profit: Float&#xA;    priceTaxExcl: Int&#xA;    priceTaxIncl: Int&#xA;    taxRate: Int&#xA;    comparedPrice: Int&#xA;    quantity: Int&#xA;    sku: String&#xA;    width: String&#xA;    height: String&#xA;    depth: String&#xA;    weight: String&#xA;    extraShippingFee: Int&#xA;    active: Boolean&#xA;    boughtDate: String&#xA;    soldDate: String&#xA;    deliveryPrice: Float&#xA;    deliveryMwstPrice: Float&#xA;    ebayInvoiceNo: Int&#xA;    ebayArticleNo: String&#xA;    differencePrice: Float&#xA;    differenceMwstPrice: Float&#xA;    total: Float&#xA;    totalMwst: Float&#xA;    productID: ID!&#xA;}&#xA;&#xA;type Image {&#xA;    default: Boolean&#xA;    id: String&#xA;    url: String&#xA;    type: String&#xA;}&#xA;&#xA;type Invoice @model {&#xA;    id: ID!&#xA;    products: [Product] @connection(keyName: &quot;productIDIndex&quot;, fields:[&quot;id&quot;])&#xA;    date: String&#xA;}&#xA;</code></pre>&#xA;<p>where the generated schema for the Invoice I have only the id and date as inputs but I need to write the product object as well.</p>&#xA;<p>generated schema for CreateInvoiceInput:</p>&#xA;<pre><code>input CreateInvoiceInput {&#xA;  id: ID&#xA;  date: String&#xA;}&#xA;</code></pre>&#xA;<p>I tried to pass the product as an object in the request but I got an error on the browser that product is not defined in the input of invoice.</p>&#xA;<p>any idea of how can this be solved?</p>&#xA;",4922664,,4922664,2021-06-23 09:05:39,2021-06-23 11:45:09,Amplify Mutation connection between two type @model,<angular><aws-amplify><graphql-mutation><graphql-schema>,1,0,0,2021-06-23 08:16:06
68100610,2,,56900332,4,,"<p>There is now a <code>$context.info.selectionSetList</code> field that includes the requested field names. The <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html#aws-appsync-resolver-context-reference-info"" rel=""nofollow noreferrer"">official docs</a> provide an example and explain some special use cases around interfaces and aliases.</p>&#xA;",754736,,,,2021-06-23 13:17:40,"",,0,1,0,2021-06-23 13:17:40
68109625,2,,68085840,1,,"<p>If you look at that second query, coming from the frontend, it's basically this:</p>&#xA;<pre><code>mutation testAvailability($name: String) {&#xA;  testAvailability(name: $name) {&#xA;    name&#xA;    __typename&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But <code>testAvailability</code> returns a <code>String</code>, not an object, right? The correct query is probably closer to this...</p>&#xA;<pre><code>mutation testAvailability($name: String) {&#xA;  testAvailability(name: $name)&#xA;}&#xA;</code></pre>&#xA;<p>So basically, check your frontend query.</p>&#xA;<p>I'm not sure where that <code>Cannot assign to read only property 'path' of object '#&lt;Object&gt;'&quot;</code> error is coming from though... If I repro this I get a <code>GRAPHQL_VALIDATION_FAILED</code> error:</p>&#xA;<pre><code>Field &quot;testAvailability&quot; must not have a selection since type &quot;String&quot; has no subfields.&#xA;</code></pre>&#xA;<p>Which is much more helpful!</p>&#xA;",762028,,,,2021-06-24 04:24:51,"",,0,1,0,2021-06-24 04:24:51
68154188,1,,,0,417,"<p>My project based on Node, GraphQl (apollo), MongoDb.&#xA;I have basic entity Product:</p>&#xA;<pre><code>type Product {&#xA;  id: ObjectId&#xA;  name: String&#xA;  bestPrice: Number&#xA;  annualSavings: Number&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;<p>bestPrice and annualSavings are calculated in base on separate resolvers:</p>&#xA;<pre><code>const bestPriceResolver = (product, args, context) =&gt; {&#xA;   return getBestPrice(context.dataStore)&#xA;}&#xA;&#xA;const annualSavingsResolver = (product, args, context) =&gt; {&#xA;   const bestPrice = getBestPrice(context.dataStore);&#xA;   return getAnnualSavings = getAnnualSavings(bestPrice);&#xA;}&#xA;&#xA;composeResolvers ({&#xA;  bestPrice: bestPriceResolver,&#xA;  annualSavings: annualSavingsResolver, &#xA;})&#xA;</code></pre>&#xA;<p>Each resolver goes to database and fetch data for bestPrice. And with this approach I go to dadabase twice to fetch same data (bestPrice). Is it possible to do it once?</p>&#xA;",11025362,,,,2021-06-28 07:51:30,How to reuse graphQl resolvers,<node.js><graphql><apollo-server>,1,1,0,2021-06-27 18:31:16
68168607,2,,55151128,0,,"<p>I have had the exact same error in my implementation.</p>&#xA;<p>The cause for me was that my <code>UpdateFaceInput</code> did not have the same internal structure as my <code>UpdateFace</code> type.</p>&#xA;<p>So if anyone has this error come up, just wanted to hint that looking at you <code>type updateFace</code> and <code>input updateFaceInput</code> definitions might be also a good try.</p>&#xA;",8895591,,,,2021-06-28 18:45:00,"",,0,0,0,2021-06-28 18:45:00
68170348,2,,53373101,0,,"<p>In my case, it was enough to do a string concatenation on the <code>id</code></p>&#xA;<p>So the <code>id</code> is for example &quot;120-15&quot; for product #120 and customer #15</p>&#xA;",179545,,,,2021-06-28 21:49:11,"",,0,0,0,2021-06-28 21:49:11
68174170,1,,,0,691,"<p>I am calling the <a href=""https://shopify.dev/docs/admin-api"" rel=""nofollow noreferrer"">Shopify admin api</a>.</p>&#xA;<p>When I use the <a href=""https://shopify.dev/docs/admin-api/rest/reference"" rel=""nofollow noreferrer"">REST API</a>, I get beautiful JSON objects in my responses.</p>&#xA;<pre><code>[{&#xA; {&#xA;    &quot;id&quot;: 7036594978985,&#xA;    &quot;title&quot;: &quot;7 Shakra Bracelet&quot;,&#xA;    &quot;body_html&quot;: &quot;&lt;p&gt;7 chakra bracelet, in blue or black.&lt;/p&gt;&quot;,&#xA;    &quot;vendor&quot;: &quot;Company 123&quot;,&#xA;    &quot;product_type&quot;: &quot;Bracelet&quot;,&#xA;    &quot;created_at&quot;: &quot;2021-06-17T17:45:05-04:00&quot;,&#xA;    &quot;handle&quot;: &quot;chain-bracelet&quot;,&#xA;    &quot;updated_at&quot;: &quot;2021-06-23T20:08:21-04:00&quot;,&#xA;    &quot;published_at&quot;: &quot;2021-06-17T17:45:04-04:00&quot;,&#xA;    &quot;template_suffix&quot;: null,&#xA;    &quot;published_scope&quot;: &quot;web&quot;,&#xA;    &quot;tags&quot;: &quot;Beads, Bracelet&quot;,&#xA;    &quot;admin_graphql_api_id&quot;: &quot;gid://shopify/Product/7036594978985&quot;,&#xA;    &quot;variants&quot;: [&#xA;      {&#xA;        &quot;id&quot;: 40671266963625,&#xA;        &quot;product_id&quot;: 7036594978985,&#xA;        &quot;title&quot;: &quot;Blue&quot;,&#xA;        &quot;price&quot;: &quot;42.99&quot;,&#xA;        &quot;sku&quot;: null,&#xA;        &quot;position&quot;: 1,&#xA;        &quot;inventory_policy&quot;: &quot;deny&quot;,&#xA;        &quot;compare_at_price&quot;: &quot;44.99&quot;,&#xA;        &quot;fulfillment_service&quot;: &quot;manual&quot;,&#xA;        &quot;inventory_management&quot;: null,&#xA;        &quot;option1&quot;: &quot;Blue&quot;,&#xA;    &#xA;      }&#xA;  },&#xA;  {&#xA;    id: 7036594978986&#xA;...&#xA;]&#xA;</code></pre>&#xA;<p>However, if I use <a href=""https://shopify.dev/docs/admin-api/graphql/reference"" rel=""nofollow noreferrer"">GraphQL</a> I end up with a bunch of edges and nodes that don't play well with my front end JS.</p>&#xA;<pre><code>{&#xA;  &quot;products&quot;: {&#xA;    &quot;edges&quot;: [&#xA;      {&#xA;        &quot;node&quot;: {&#xA;          &quot;description&quot;: &quot;Sleek and black&quot;,&#xA;          &quot;featuredImage&quot;: {&#xA;            &quot;id&quot;: &quot;gid://shopify/ProductImage/15464783282345&quot;,&#xA;            &quot;originalSrc&quot;: &quot;https://cdn.shopify.com/s/files/1/0268/1005/6873/products/bb20.jpg?v=1602116082&quot;&#xA;          },&#xA;          &quot;handle&quot;: &quot;skirt&quot;,&#xA;          &quot;id&quot;: &quot;gid://shopify/Product/4773734482089&quot;,&#xA;          &quot;images&quot;: {&#xA;            &quot;edges&quot;: [&#xA;              {&#xA;                &quot;node&quot;: {&#xA;                  &quot;id&quot;: &quot;gid://shopify/ProductImage/15464783282345&quot;,&#xA;                  &quot;originalSrc&quot;: &quot;https://cdn.shopify.com/s/files/1/0268/1005/6873/products/bb20.jpg?v=1602116082&quot;&#xA;                }&#xA;              },&#xA;              {&#xA;                &quot;node&quot;: {&#xA;                  &quot;id&quot;: &quot;gid://shopify/ProductImage/26072838406313&quot;,&#xA;                  &quot;originalSrc&quot;: &quot;https://cdn.shopify.com/s/files/1/0268/1005/6873/products/bb7.jpg?v=1612636091&quot;&#xA;                }&#xA;              },&#xA;              {&#xA;                &quot;node&quot;: {&#xA;                  &quot;id&quot;: &quot;gid://shopify/ProductImage/26072838373545&quot;,&#xA;                  &quot;originalSrc&quot;: &quot;https://cdn.shopify.com/s/files/1/0268/1005/6873/products/bb6.jpg?v=1612636091&quot;&#xA;                }&#xA;              }&#xA;            ]&#xA;          },&#xA;</code></pre>&#xA;<p>I'd like to flatten the array a little bit by replacing all edges and nodes with the friendly minimal JSON  structure.</p>&#xA;<p>From this:</p>&#xA;<pre><code>{&#xA;  &quot;products&quot;: {&#xA;    &quot;edges&quot;: [&#xA;      {&#xA;        &quot;node&quot;: {&#xA;          &quot;description&quot;: &quot;Sleek and black&quot;,&#xA;          &quot;featuredImage&quot;: {&#xA;            &quot;id&quot;: &quot;gid://shopify/ProductImage/15464783282345&quot;,&#xA;            &quot;originalSrc&quot;: &quot;https://cdn.shopify.com/s/files/1/0268/1005/6873/products/bb20.jpg?v=1602116082&quot;&#xA;          },&#xA;</code></pre>&#xA;<p>To this:</p>&#xA;<pre><code>{&#xA;  &quot;products&quot;: [&#xA;      {&#xA;          &quot;description&quot;: &quot;Sleek and black&quot;,&#xA;          &quot;featuredImage&quot;: {&#xA;            &quot;id&quot;: &quot;gid://shopify/ProductImage/15464783282345&quot;,&#xA;            &quot;originalSrc&quot;: &quot;https://cdn.shopify.com/s/files/1/0268/1005/6873/products/bb20.jpg?v=1602116082&quot;&#xA;      },&#xA;</code></pre>&#xA;<p>I'd like to be able to call a recursive PHP function to replace all nodes and edges nested in the array.</p>&#xA;<p>I tried this, but I think it causes iteration issues.</p>&#xA;<pre><code>public function parse_and_remove (&amp;$arr) {&#xA;    &#xA;    foreach ($arr as $key =&gt; $val) {&#xA;        if (($key == 'edges' || $key == 'node') &amp;&amp; (is_array($val) || is_object($val))) {&#xA;            $arr = $val;&#xA;            $val = $this-&gt;parse_and_remove($val);&#xA;        } else if (is_array($val) || is_object($val)) {&#xA;            $val = $this-&gt;parse_and_remove($val);&#xA;        } else {&#xA;&#xA;        }&#xA;    }&#xA;    return $arr;&#xA;}&#xA;</code></pre>&#xA;<p>PART II</p>&#xA;<p>How is everyone okay with this kind of response in GraphQL?  It's a pain to work with on the front end where API responses are often consumed.  Don't give me the array of edges and the node then finally the object.  I just want that array of objects :)</p>&#xA;",55124,,,,2021-06-29 08:18:05,Clean Up GraphQL Response and Convert to JSON without edges and nodes,<php><json><recursion><graphql><shopify>,1,3,0,2021-06-29 07:18:21
68179924,2,,67651763,-1,,"<p>The best way is to check the count in your front-end section and simply don't allow the user to add more than in stock units, also you need to check in your back-end if the count is eligible, so I recommend using a complex function, sth like this:</p>&#xA;<pre><code>createOrderItem(input: CreateOrderItemInput! @spread): OrderItem&#xA;@field(resolver: &quot;App\\GraphQL\\OrderItemComplex@create&quot;)&#xA;</code></pre>&#xA;<p><code>App\GraphQL\OrderItemComplex</code> looks like this:</p>&#xA;<pre class=""lang-php prettyprint-override""><code>public function create($rootValue, array $args)&#xA;{&#xA;    // simply check the count before creating any record and&#xA;    // throw an error with the appropriate message if sth is wrong&#xA;}&#xA;</code></pre>&#xA;",11671686,,,,2021-06-29 13:43:14,"",,0,0,0,2021-06-29 13:43:14
68187249,1,68196639,,0,124,"<p>I have created a Heroku app that uses Graphql API on Shopify, on a product level, it has no problem returning the data, but on variants, since this is where I need to have the mutation, I added the graphql code inside for loop and it crash, please let me know how I can improve it, or how I improved it so it won't crash. by the way, I used PHP if that helps</p>&#xA;<p>This is the product level graphql</p>&#xA;<p><a href=""https://i.stack.imgur.com/e5jeX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/e5jeX.png"" alt=""enter image description here"" /></a></p>&#xA;<p>This is where I add the for loop and mutation</p>&#xA;<p><a href=""https://i.stack.imgur.com/GEzWB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GEzWB.png"" alt=""enter image description here"" /></a></p>&#xA;",9358568,,,,2021-06-30 14:24:02,Heroku App crashing when calling shopify graphql api in forloop,<php><heroku><graphql><shopify><shopify-api>,1,0,0,2021-06-30 00:53:52
68189134,2,,47081722,-1,,"<p>I also try <a href=""https://github.com/EasyGraphQL/easygraphql-load-tester"" rel=""nofollow noreferrer"">easygraphql-load-tester</a> but it really not help. We use <a href=""http://jmeter.apache.org/download_jmeter.cgi"" rel=""nofollow noreferrer"">Jmeter</a>&#xA;to check load test of GraphQL APIs. it really help to us in it you canget exact response, api pass count , api fail count, even you can get the data in excelsheet format, and to add different variable you can create excel file and import in it.&#xA;Even we can generate graph in it to check api perforamnce.</p>&#xA;",12472260,,,,2021-06-30 05:56:25,"",,0,0,0,2021-06-30 05:56:25
68191658,1,,,0,256,"<p>I'm trying to develop filters by passing a query string in the below productFetch() function and want to show only 28 products on the screen returned from the query below.&#xA;How to make graphql query return random 28 products instead of the first 28?</p>&#xA;<pre><code>  query productFetch($first: Int, $after: String, $query: String) {&#xA;    products(first: $first, after: $after, query: $query) {&#xA;      edges {&#xA;        node {&#xA;          priceRange {&#xA;            minVariantPrice {&#xA;              amount&#xA;              currencyCode&#xA;            }&#xA;          }&#xA;          title&#xA;          images(first: 1) {&#xA;            edges {&#xA;              node {&#xA;                transformedSrc(maxWidth: 300)&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;        cursor&#xA;      }&#xA;      pageInfo {&#xA;        hasNextPage&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;",15010663,,,,2021-06-30 09:31:03,How to randomise qraphql query results?,<reactjs><graphql><shopify><apollo-client><gqlquery>,1,0,0,2021-06-30 09:02:55
68192129,2,,68191658,0,,"<p>The short answer is you <strong>can't</strong> with only graphql.</p>&#xA;<p>The GraphQL returns what ever you requested, there is no way to tell it to randomize it as of now.</p>&#xA;<p>You can use the <code>sortKey</code> and <code>reverse</code> arguments to create some fake randomize, but you will be limited to the &quot;random&quot; response depending on the products.</p>&#xA;<p>So if you want random products get more than 28 and randomize them using JS. While you are limited on how many products you can pull with a single request it will at least have a random output. If you add the <code>sortKey</code> and <code>reverse</code> logic the randomize will increase as well.</p>&#xA;",2329464,,,,2021-06-30 09:31:03,"",,0,0,0,2021-06-30 09:31:03
68202934,1,,,0,331,"<p>I'm using expressjs and apollo-server-express. I'm trying to set up a query in graphql to return a product from my database. The problem is that the results never show up in graphql, but when I console log <code>resultsArr</code> the results show up fine. Just to note the <code>resultsArr</code> is an array of objects.</p>&#xA;<p>Express:</p>&#xA;<pre><code>const typeDefs = gql`&#xA;  type Search {&#xA;    brand: String&#xA;    title: String&#xA;    url: String&#xA;    thumbnail: String&#xA;  }&#xA;&#xA;  type Query {&#xA;    results(query: String!): Search&#xA;  }&#xA;`;  &#xA;&#xA;const resolvers = {&#xA;  Query: {&#xA;    results: (parent, args) =&gt; {&#xA;      const queries = [&#xA;        {&#xA;          indexName: 'products',&#xA;          query: args.query,&#xA;          params: {&#xA;            hitsPerPage: 1,&#xA;          },&#xA;        },&#xA;       //&#xA;      ];&#xA;&#xA;     return AlgoliaClient.multipleQueries(queries).then(({ results }) =&gt; {&#xA;        // Store Results&#xA;        const resultsArr = [];&#xA;        results.forEach((item) =&gt; {&#xA;          resultsArr.push(item.hits[0]);&#xA;        });&#xA;        &#xA;        // console logging this shows the products&#xA;        return resultsArr;&#xA;      });&#xA;    },&#xA;  },&#xA;};&#xA;</code></pre>&#xA;<p>and my query the graphql playground is:</p>&#xA;<pre><code>query Search {&#xA;  results(query: &quot;Test product&quot;) {&#xA;    title&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The problem is when I console log resultsArr the products show up no problem, however when it try it though the query I get:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;results&quot;: {&#xA;      &quot;title&quot;: null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",13203366,,,,2021-07-01 00:24:13,Graphql query field is returning null,<express><graphql><apollo><apollo-server>,0,2,0,2021-07-01 00:24:13
68206894,2,,67784481,3,,"<p>No, in GraphQL spec, unions are only for object types. You can't have union input.</p>&#xA;",5472617,,,,2021-07-01 08:32:36,"",,0,0,0,2021-07-01 08:32:36
68220430,2,,67883964,0,,<p>Graphql does not support union of scalar types.&#xA;So you can modify it this way</p>&#xA;<p>input testInput {&#xA;a: String&#xA;b: String&#xA;c: hybridType&#xA;}</p>&#xA;<p>type cBoolean {&#xA;content: Boolean&#xA;}</p>&#xA;<p>type cString {&#xA;content: String&#xA;}</p>&#xA;<p>union hybridType = cBoolean | cString</p>&#xA;,1197897,,,,2021-07-02 06:16:47,"",,0,0,0,2021-07-02 06:16:47
68243778,2,,67947966,0,,"<p>There are different ways to achieve this. You can define parameter in the query and then pass them. In the example below set  <code>usersName</code> to your username and <code>first</code> to 50 or whatsoever required, keep in mind there is a limitation for <code>first</code> on GitHub API (value must be between 1 to 100 inclusive) which you can find <a href=""https://docs.github.com/en/graphql/overview/resource-limitations"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>In this example if <code>userName</code> does not match any entry then an error is returned.</p>&#xA;<pre><code>export const query = gql`&#xA;    query repositories ($userName: String!, $first: Int){&#xA;        user(login: $userName) {&#xA;          repositories(first: $first) {&#xA;            nodes {&#xA;              name&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;`;&#xA;</code></pre>&#xA;<p>You can use <code>search</code> as in your example and pass variables to the query. However, this way the query will return repositories from users those their names or usernames match or include substring of provided <code>searchText</code>. This query will not return an error if there in no match with <code>searchText</code>.</p>&#xA;<pre><code>export const query = gql`&#xA;    query ($searchText: String!)  {&#xA;      search(query: $searchText, type: USER, first: 1) {&#xA;          nodes {&#xA;              ... on User {&#xA;                repositories(first: 50) {&#xA;                  nodes {&#xA;                    name&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;<p>If you are only interested in your own repository then your own answer can be used as well.</p>&#xA;",11101887,,,,2021-07-04 10:29:47,"",,0,0,0,2021-07-04 10:29:47
68261762,2,,68247511,1,,"<p>I saw you already found a solution that works for you, however another method is to use mongoose's populate, as you can specify specifically what you want it to return.</p>&#xA;<pre><code>Assignment: {&#xA;  async course(parent, {&#xA;    input&#xA;  }, context, info) {&#xA;    try {&#xA;      return await Course.findById(parent.course).populate('students', 'user section') &#xA;    } catch (err) {&#xA;      console.log('err', err.message);&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Since you're already storing them as ObjectIds (with reference I assume), populate will populate the field you specify, in this case students - and the second argument added will further specify what to return from it. If you have issues with populate even tho your code is correct, sometimes adding <code>.execPopulate()</code> at the end of it will do the trick (can't explain this one).</p>&#xA;<p>Some other questions/articles on populating in mongoose (and specifiying fields):</p>&#xA;<ul>&#xA;<li><a href=""https://stackoverflow.com/questions/53589758/populating-only-specific-fields-in-mongoose"">Populating only specific fields in mongoose</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/66289537/mongodb-populate-nested-object-in-array"">Populate nested Object in Array</a></li>&#xA;<li><a href=""https://mongoosejs.com/docs/populate.html"" rel=""nofollow noreferrer"">Mongoosejs.com article on populate</a></li>&#xA;<li><a href=""https://medium.com/@nicknauert/mongooses-model-populate-b844ae6d1ee7"" rel=""nofollow noreferrer"">Article from medium</a></li>&#xA;</ul>&#xA;<p>Hope that helps!</p>&#xA;",15395487,,15395487,2021-07-05 21:03:07,2021-07-05 21:03:07,"",,0,0,0,2021-07-05 20:24:16
68264937,1,68302806,,0,338,"<p>I'm trying to do a one to many relationship between category and products, but I get an error after I put my resolvers this is my code for reference.</p>&#xA;<p><strong>ERROR SHOWS:</strong><a href=""https://i.stack.imgur.com/xS2t4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xS2t4.png"" alt=""enter image description here"" /></a></p>&#xA;<p><strong>Product Resolver:</strong></p>&#xA;<pre><code> async getProductByCategory(mainCategory, {}) {&#xA;      try {&#xA;        const product = Product.find({ mainCategory: mainCategory._id });&#xA;        if (product) {&#xA;          return product;&#xA;        } else {&#xA;          throw new Error(&quot;Product Not Found&quot;);&#xA;        }&#xA;      } catch (err) {&#xA;        throw new Error(err);&#xA;      }&#xA;    },&#xA;</code></pre>&#xA;<p><strong>MainCategory Resolver:</strong></p>&#xA;<pre><code>async getCategoryByProduct(product, args) {&#xA;      try {&#xA;        const mainCategory = MainCategory.findById(product._id);&#xA;        if (mainCategory) {&#xA;          return mainCategory;&#xA;        } else {&#xA;          throw new Error(&quot;Main Category Not Found&quot;);&#xA;        }&#xA;      } catch (err) {&#xA;        throw new Error(err);&#xA;      }&#xA;    },&#xA;</code></pre>&#xA;<p><strong>Main Resolver:</strong></p>&#xA;<pre><code>const productsResolvers = require(&quot;./products&quot;);&#xA;const mainCategoriesResolvers = require(&quot;./mainCategories&quot;);&#xA;&#xA;&#xA;module.exports = {&#xA;    Product: {&#xA;      mainCategory: productsResolvers.getProductByCategory,&#xA;    },&#xA;    MainCategory: {&#xA;      products: mainCategoriesResolvers.getCategoryByProduct,&#xA;    },&#xA;    Query: {&#xA;      ...productsResolvers.Query,&#xA;      ...mainCategoriesResolvers.Query,&#xA;    },&#xA;    Mutation: {&#xA;      ...productsResolvers.Mutation,&#xA;      ...mainCategoriesResolvers.Mutation,&#xA;    },&#xA;   &#xA;  };&#xA;</code></pre>&#xA;<p><strong>typeDefs:</strong></p>&#xA;<pre><code>type Product {&#xA;    id: ID! &#xA;    mainCategory: MainCategory&#xA;  }&#xA;&#xA; type MainCategory {&#xA;    id: ID!&#xA;    products: [Product]&#xA;  }&#xA;</code></pre>&#xA;<p>Tell me if you need anymore code reference so that I can give you. Thanks in advance</p>&#xA;",14173752,,14173752,2021-07-07 06:08:35,2021-07-08 14:03:03,Resolver must be an object or function (Graphql Relationship),<mongodb><mongoose><graphql><apollo><apollo-server>,1,3,0,2021-07-06 05:18:13
68301961,1,,,1,220,"<p>if anyone of you using Vue Apollo please help, if I do something like this,</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export default {&#xA;    apollo: {&#xA;        statsAndProfile: {&#xA;            query: STATS_AND_PROFILE_QUERY,&#xA;            update({stats, profile}) {&#xA;                this.stats = stats&#xA;                this.profile = profile&#xA;            },&#xA;            skip: localStorage.isAuth === 'false'&#xA;        },&#xA;    },&#xA;    data(){&#xA;       return {&#xA;          stats: null&#xA;          profile: null&#xA;       }&#xA;    }&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>and then in one of the components do <code>created() { this.$apollo.queries.statsAndProfile.start() }</code> it does not update <code>this.stats</code> or <code>this.profile</code>, update only works when skip is false from the start. Is there a way around it?</p>&#xA;",4061068,,,,2022-05-02 10:08:49,How to trigger Vue Apollo Query update when skip is true?,<vue.js><vue-apollo>,1,0,0,2021-07-08 12:48:51
68302806,2,,68264937,0,,"<p>Hi Guys I already solved it for those who want to know about one to many relationship in graphql, this is my code that I did.</p>&#xA;<p><strong>Product Model :</strong></p>&#xA;<pre><code>const { model, Schema } = require(&quot;mongoose&quot;);&#xA;&#xA;const { ObjectId } = Schema.Types;&#xA;&#xA;const productSchema = new Schema({&#xA;  name: String,&#xA;  mainCategory: {&#xA;    type: ObjectId,&#xA;    ref: &quot;MainCategory&quot;,&#xA;  },&#xA;});&#xA;&#xA;module.exports = model(&quot;Product&quot;, productSchema);&#xA;</code></pre>&#xA;<p>We want to make the mainCategory field or data an object only since we only want each product to have a category, <strong>the ref you see there should be exact as the model you named it which is here:</strong></p>&#xA;<pre><code>module.exports = model(&quot;MainCategory&quot;, mainCategorySchema);&#xA;</code></pre>&#xA;<p><strong>For the MainCategory Model:</strong></p>&#xA;<pre><code>const { model, Schema } = require(&quot;mongoose&quot;);&#xA;&#xA;const { ObjectId } = Schema.Types;&#xA;&#xA;const mainCategorySchema = new Schema({&#xA;  products: [&#xA;    {&#xA;      type: ObjectId,&#xA;      ref: &quot;Product&quot;,&#xA;    },&#xA;  ],&#xA;});&#xA;&#xA;module.exports = model(&quot;MainCategory&quot;, mainCategorySchema);&#xA;</code></pre>&#xA;<p>Since you category right? category can have multiple products so we make it an array, <strong>then like the Product we should make the ref similar as we named the model.</strong></p>&#xA;<p><strong>Now for the, TypeDefs:</strong></p>&#xA;<pre><code>type Product {&#xA;    id: ID!&#xA;    mainCategory: MainCategory!&#xA;  }&#xA;</code></pre>&#xA;<p>We make it only an MainCategory! since we want to return only an object.</p>&#xA;<pre><code>type MainCategory {&#xA;    id: ID!&#xA;    name: String!&#xA;    products: [Product!]&#xA;  }&#xA;</code></pre>&#xA;<p>For the type MainCategory we make it like this <strong>[Product!] since we only want to return an array .</strong></p>&#xA;<p>now for the query in typedefs:</p>&#xA;<pre><code>type Query {&#xA; getProducts: [Product]&#xA; getMainCategories: [MainCategory]&#xA;}&#xA;</code></pre>&#xA;<p>this will get all the data of products and maincategories</p>&#xA;<p>since we need to mutate the data or in other words create it we can do it like this:</p>&#xA;<pre><code>type Mutation {&#xA;    createProduct(&#xA;      name:String!&#xA;      mainCategory: String!&#xA;    ): Product!&#xA;     createMainCategory(&#xA;      name: String!&#xA;    ): MainCategory!&#xA;}&#xA;</code></pre>&#xA;<p>As you are asking right now? why mainCategory a string? why? because we are going to send an object id or the id of the category.</p>&#xA;<p>As you noticed we didn't have a product createMainCategory since we are going to get that Id when we create a product which I will explain afterwards.</p>&#xA;<p><strong>Then we move onto the resolvers here:</strong></p>&#xA;<p><strong>Product resolver:</strong></p>&#xA;<pre><code>const Product = require(&quot;../../models/Product&quot;);&#xA;&#xA;module.exports = {&#xA;  Query: {&#xA;    async getProducts() {&#xA;      try {&#xA;        const products = await Product.find().sort({ createdAt: -1 });&#xA;        return products;&#xA;      } catch (err) {&#xA;        throw new Error(err);&#xA;      }&#xA;    },&#xA;  },&#xA;  Mutation: {&#xA;    async createProduct(_, { mainCategory }, context) {&#xA;      const newProduct = new Product({&#xA;        mainCategory,&#xA;      });&#xA;&#xA;      const product = await newProduct.save();&#xA;&#xA;      return product;&#xA;    },&#xA;  },&#xA;};&#xA;</code></pre>&#xA;<p><strong>MainCategory resolver:</strong></p>&#xA;<pre><code>const MainCategory = require(&quot;../../models/MainCategories&quot;);&#xA;&#xA;module.exports = {&#xA;  Query: {&#xA;    async getMainCategories() {&#xA;      try {&#xA;        const mainCategories = await MainCategory.find().sort({&#xA;          createdAt: -1,&#xA;        });&#xA;        return mainCategories;&#xA;      } catch (err) {&#xA;        throw new Error(err);&#xA;      }&#xA;    },&#xA;  },&#xA;  Mutation: {&#xA;    async createMainCategory(_, { name }, context) {&#xA;      const newMainCategory = new MainCategory({&#xA;        name,&#xA;      });&#xA;&#xA;      const mainCategory = await newMainCategory.save();&#xA;&#xA;      return mainCategory;&#xA;    },&#xA;  },&#xA;};&#xA;</code></pre>&#xA;<p><strong>Then lastly on index.js:</strong></p>&#xA;<pre><code>Product: {&#xA;    mainCategory: (parent) =&gt; &#xA;    MainCategory.findById(parent.mainCategory),&#xA;},&#xA;&#xA;MainCategory: {&#xA;    products: (parent) =&gt; Product.find({ mainCategory: parent._id &#xA;}),&#xA;</code></pre>&#xA;<p>we define here we used the reason why I use parent so I dont get mixed up knowing if it is product or maincategory so in the product u have to define in which case we use mainCategory field, we use the <strong>MainCategory model take note and we use the parent which is the product to get the mainCategory field which is an object id and it will return to us the category with the same id</strong></p>&#xA;<p>for the mainCategory to get the array of products we use the <strong>Product model take note and find the same mainCategory and the parent id which is the mainCategory Id and it will return the array of products</strong></p>&#xA;<p><strong>And here is your result:</strong>&#xA;we first query Products</p>&#xA;<p><a href=""https://i.stack.imgur.com/2t32J.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2t32J.png"" alt=""enter image description here"" /></a></p>&#xA;<p><strong>the result:</strong></p>&#xA;<p><a href=""https://i.stack.imgur.com/uixVS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uixVS.png"" alt=""enter image description here"" /></a></p>&#xA;<p>same applies to the mainCategory&#xA;we first query getMainCategories</p>&#xA;<p><a href=""https://i.stack.imgur.com/dEUtA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/dEUtA.png"" alt=""enter image description here"" /></a></p>&#xA;<p><strong>then the result:</strong></p>&#xA;<p><a href=""https://i.stack.imgur.com/E3Gkw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/E3Gkw.png"" alt=""enter image description here"" /></a></p>&#xA;<p><strong>Take note that I did the one to many relationship</strong>&#xA;Please if you have any errors regarding this let me know, I am often active on stackoverflow but I mayble late will reply but I would reply right away when I see the notification.</p>&#xA;",14173752,,14173752,2021-07-08 14:03:03,2021-07-08 14:03:03,"",,0,0,0,2021-07-08 13:42:44
68307993,2,,61108880,1,,"<p>you can double up the curly braces to escape them:</p>&#xA;<pre><code>my_title = &quot;The Title&quot;&#xA;my_description = &quot;The description&quot;&#xA;&#xA;query = f&quot;&quot;&quot;&#xA;    mutation {{ &#xA;     productUpdate(input: {{id: &quot;gid://shopify/Product/463...03&quot;, title: &quot;{my_title}&quot;, descriptionHtml: &quot;{my_description}&quot;}}) {{&#xA;       product {{&#xA;         id&#xA;       }}&#xA;       userErrors {{&#xA;         field&#xA;         message&#xA;        }}&#xA;      }}&#xA;     }}&#xA;  &quot;&quot;&quot;&#xA;</code></pre>&#xA;<p><a href=""https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals"" rel=""nofollow noreferrer"">https://docs.python.org/3/reference/lexical_analysis.html#formatted-string-literals</a></p>&#xA;",15216791,,,,2021-07-08 20:00:52,"",,0,0,0,2021-07-08 20:00:52
68356208,2,,68356207,10,,"<p>After some digging I found this <a href=""https://github.com/graphql/graphql-spec/issues/568#issuecomment-468789206"" rel=""noreferrer"">GitHub Issue Comment</a> with the following syntax:</p>&#xA;<pre><code>type Query&#xA;&#xA;extend type Query {&#xA;  a: Boolean;&#xA;}&#xA;</code></pre>&#xA;<p>I applied this to the examples above and they worked.&#xA;Therefore, to create an empty Object Type, omit the curly braces <code>{ ... }</code>.</p>&#xA;<p>The GraphQL specification <a href=""https://spec.graphql.org/June2018/#ObjectTypeDefinition"" rel=""noreferrer"">here</a> indicates that the <code>ObjectTypeDefinition</code>'s <code>FieldsDefinition</code> is optional, although this is not abundantly clear.</p>&#xA;<p><a href=""https://i.stack.imgur.com/2d3i0.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/2d3i0.png"" alt=""GraphQL June 2018 Edition Section 3.6 ObjectTypeDefinition"" /></a></p>&#xA;",9643974,,,,2021-07-13 03:42:15,"",,0,1,0,2021-07-13 03:42:15
68365020,1,68378483,,1,926,"<p>I am really struggling to get anything sensible out of the GitHub GraphQL api...&#xA;I want to get a list of repos and the permission levels for a team.  So far I have</p>&#xA;<pre><code>Q= &quot;&quot;&quot;query {&#xA;  organization(login: &quot;MY_ORG&quot;) {&#xA;      team(slug:&quot;MY_TEAM&quot;) {&#xA;          name&#xA;          repositories(first:3){&#xA;              nodes {&#xA;                  name&#xA;              }&#xA;              edges {&#xA;                  permission&#xA;              }&#xA;          }&#xA;      }&#xA;  }&#xA;}&quot;&quot;&quot;&#xA;</code></pre>&#xA;<p>which returns</p>&#xA;<pre><code>{'data': {'organization': {'team': {'name': 'MY_TEAM',&#xA;'repositories': {'nodes': [{'name': 'REPO1'},&#xA;  {'name': 'REPO2'},&#xA;  {'name': 'REPO3'}],&#xA; 'edges': [{'permission': 'ADMIN'},&#xA;  {'permission': 'ADMIN'},&#xA;  {'permission': 'ADMIN'}]}}}}}&#xA;</code></pre>&#xA;<p>But I cannot see any way to list the permission and the repo name together as there is no way to go from a teamrepositoryedge to a repository node or vice versa :/</p>&#xA;<p>I feel I am missing something obvious and just not seeing it.</p>&#xA;",2961873,,,,2021-07-14 12:52:28,Github GraphQL list repo permissions for a Team,<github><graphql><github-api><github-graphql>,1,0,0,2021-07-13 15:08:27
68370351,2,,66696029,2,,"<p>I was facing the same issue. I fixed it like this:</p>&#xA;<pre><code>const existingData = cache.readQuery({&#xA;   query: GET_CONTRACT,&#xA;   variables: {&#xA;       ...variables, // fixed: passing the same reference to variables&#xA;   },&#xA;});&#xA;</code></pre>&#xA;",10229006,,-1,2022-10-24 15:06:09,2022-10-24 15:06:09,"",,0,7,0,2021-07-13 23:33:14
68379403,1,,,1,1267,"<p>How can I create/update a shop metafield using GraphQL in shopify?&#xA;I could easily create a collection metafield using the following:</p>&#xA;<pre><code>mutation {&#xA;  collectionUpdate(&#xA;    input: {&#xA;      id: &quot;gid&quot;&#xA;      metafields: [&#xA;        {&#xA;          namespace: &quot;testNamespace&quot;&#xA;          key: &quot;testKey&quot;&#xA;          value: &quot;someValue2&quot;&#xA;          valueType: STRING&#xA;        }&#xA;        {&#xA;          id: &quot;gid&quot;&#xA;          value: &quot;value&quot;&#xA;        }&#xA;      ]&#xA;    }&#xA;  ) {&#xA;    collection {&#xA;      id&#xA;      metafields(first: 10) {&#xA;        edges {&#xA;          node {&#xA;            id&#xA;            value&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;    userErrors {&#xA;        field&#xA;        message&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But there seems to be no equivalent for the shop.&#xA;Also, a shop metafield can be retrieved using:</p>&#xA;<pre><code>{&#xA;  shop {&#xA;    metafield(namespace:&quot;namespace&quot;,key:&quot;key&quot;) {&#xA;          id&#xA;          value&#xA;        }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",5077196,,,,2021-12-02 10:01:40,How to update Shop Metafields using GraphQL in Shopify,<graphql><shopify><shopify-api>,1,1,0,2021-07-14 13:53:00
68388959,1,,,1,310,"<p>I am using graphql-tools to mock for my UI (create-react-app) functional tests. I have a question around the MockList</p>&#xA;<p>Currently, I am mocking by type and one of the properties is an array but I still need to be able to customise the elements in the list</p>&#xA;<p>e.g. I have a <code>LineItem</code> type which has a mock defined as</p>&#xA;<pre><code>const LineItem = () =&gt;&#xA;  ({&#xA;    name: 'Item name'&#xA;  } as LineItemType)&#xA;</code></pre>&#xA;<p>and the cart type has a list of <code>LineItem</code></p>&#xA;<pre><code>const Cart = () =&gt;&#xA;  ({&#xA;    id: 'cart-id',&#xA;    lineItems: [...new Array(2)],&#xA;  } as ActiveCartType)&#xA;</code></pre>&#xA;<p>Is there a way for the item name to be different for the 2 items in the cart?</p>&#xA;<p>I tried to map over the Array like so</p>&#xA;<pre><code>const Cart = () =&gt;&#xA;  ({&#xA;    id: 'cart-id',&#xA;    lineItems: [...new Array(2)].map(i =&gt; ({...i, id: '123', name: 'new item name'})),&#xA;  } as ActiveCartType)&#xA;</code></pre>&#xA;<p>But the <code>name</code> doesn't change in the mock result. It is still set to <code>Item name</code>. Only <code>id</code> changes to <code>123</code>.  Am I missing something here?</p>&#xA;",3949925,,,,2021-07-17 22:32:58,Customize the mock data defined against the types in graphql-tools,<graphql-js><graphql-tools>,1,0,0,2021-07-15 06:31:41
68398613,1,,,0,110,"<p>I try to setup a Shopify store using Next.js with the Apollo Client.  I just wonder what the easiest method would be to make the cart component refetch the items from the cart whenever I put a new item in the cart (in another component).  The two queries in question are the following:</p>&#xA;<pre><code>query ($id: ID!) {&#xA;    node(id: $id) {&#xA;        id&#xA;        ... on Checkout {&#xA;            lineItems(first: 250) {&#xA;                edges {&#xA;                    node {&#xA;                        id&#xA;                        title&#xA;                        quantity&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>in the cart component and</p>&#xA;<pre><code>mutation checkoutLineItemsAdd(&#xA;    $lineItems: [CheckoutLineItemInput!]!&#xA;    $checkoutId: ID!&#xA;) {&#xA;    checkoutLineItemsAdd(lineItems: $lineItems, checkoutId: $checkoutId) {&#xA;        checkout {&#xA;            id&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>in the product component.</p>&#xA;<p>The Apollo documentation says</p>&#xA;<blockquote>&#xA;<p>If a mutation updates a single existing entity, Apollo Client can automatically update that entity's value in its cache when the mutation returns. To do so, the mutation must return the id of the modified entity, along with the values of the fields that were modified. Conveniently, mutations do this by default in Apollo Client.</p>&#xA;</blockquote>&#xA;<p>and I wonder if the checkout ID could somehow be used to initiate this behaviour in my case?</p>&#xA;",1020237,,1870780,2021-07-16 12:49:22,2021-07-16 12:49:22,Make Apollo Client Auto Update Cache By Watching ID,<reactjs><next.js><apollo-client><shopify-api>,1,0,0,2021-07-15 17:48:48
68404335,2,,68398613,1,,"<p>I had to include the cached information in the mutation query, like this:</p>&#xA;<pre><code>mutation checkoutLineItemsAdd(&#xA;    $lineItems: [CheckoutLineItemInput!]!&#xA;    $checkoutId: ID!&#xA;) {&#xA;    checkoutLineItemsAdd(lineItems: $lineItems, checkoutId: $checkoutId) {&#xA;        checkout {&#xA;            id&#xA;            lineItems(first: 250) {&#xA;                edges {&#xA;                    node {&#xA;                        id&#xA;                        title&#xA;                        quantity&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",1020237,,,,2021-07-16 06:23:07,"",,0,0,0,2021-07-16 06:23:07
68415640,1,,,3,667,"<p>I'm trying to list collaborators for all repos in an organization. My query looks like this.</p>&#xA;<pre><code>    query($login: String!, $cursor: String) {&#xA;        organization(login: $login) {&#xA;            url&#xA;            login&#xA;            repositories(first: 100, after: $cursor) {&#xA;                pageInfo {&#xA;                    endCursor&#xA;                    hasNextPage&#xA;                }&#xA;                nodes {&#xA;                    name&#xA;                    collaborators(affiliation: OUTSIDE, first: 100) {&#xA;                        edges {&#xA;                            permission&#xA;                        }&#xA;                        nodes {&#xA;                            url&#xA;                            login&#xA;                            name&#xA;                            email&#xA;                            company&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;<p>This works fine in the <a href=""https://docs.github.com/en/graphql/overview/explorer"" rel=""nofollow noreferrer"">GraphQL Explorer</a>. No permissions errors as my user has the necessary permissions.</p>&#xA;<p>However if I try to do this from the GraphQL API endpoint directly, I get:</p>&#xA;<pre><code>[&#xA;  {&#xA;    &quot;type&quot;: &quot;FORBIDDEN&quot;,&#xA;    &quot;path&quot;: [&#xA;      &quot;organization&quot;,&#xA;      &quot;repositories&quot;,&#xA;      &quot;nodes&quot;,&#xA;      0,&#xA;      &quot;collaborators&quot;&#xA;    ],&#xA;    &quot;locations&quot;: [&#xA;      {&#xA;        &quot;line&quot;: 18,&#xA;        &quot;column&quot;: 21&#xA;      }&#xA;    ],&#xA;    &quot;message&quot;: &quot;Must have push access to view repository collaborators.&quot;&#xA;  },&#xA;</code></pre>&#xA;<p>I have given my personal access token all possible scopes to debug, the issue persists.</p>&#xA;<p>Since my user is org admin and can list all collaborators from the GraphQL Explorer, I would expect this to work.</p>&#xA;",16051261,,,,2021-07-17 01:19:44,List collaborators from GraphQL API,<github><graphql><github-api>,1,1,0,2021-07-16 21:57:24
68420497,1,,,0,470,"<p>I want to use enums in an input type but it comes out as a string which errors out in the query.</p>&#xA;<p>schema:</p>&#xA;<pre><code> type Query {&#xA;    interiors(filter: InteriorsFilterInput): [Interior]&#xA;  }&#xA;&#xA;  input InteriorsFilterInput {&#xA;    productId: Int!&#xA;    type: InteriorType!&#xA;  }&#xA;</code></pre>&#xA;<p>typescript generated types with apollo-tools:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export enum InteriorType {&#xA;  POSTER = &quot;POSTER&quot;,&#xA;  WALLPAPER = &quot;WALLPAPER&quot;,&#xA;}&#xA;</code></pre>&#xA;<p>And the query in typescript looks like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const QUERY = gql`&#xA;  query GetProductInteriors($productId: Int!, $type: InteriorType) {&#xA;    interiors(&#xA;      filter: { productId: $productId, type: $type }&#xA;    ) {&#xA;      id&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;export interface IProductkeywords {&#xA;  product: GetProduct_product;&#xA;}&#xA;&#xA;const ProductInteriors: React.FC&lt;IProductkeywords&gt; = ({ product }) =&gt; {&#xA;  const { loading, error, data } = useQuery&lt;GetProductInteriors&gt;(QUERY, {&#xA;    variables: {&#xA;      productId: parseInt(product.id),&#xA;      type: InteriorType.POSTER,&#xA;    },&#xA;  });&#xA;&#xA;  if (loading) return &lt;p&gt;Loading...&lt;/p&gt;;&#xA;  if (error) return &lt;p&gt;Error :(&lt;/p&gt;;&#xA;  console.log(data);&#xA;  return (&#xA;    &lt;AutoHeightCard&gt;&#xA;      &lt;CardHeader title=&quot;Interiors&quot;&gt;&lt;/CardHeader&gt;&#xA;      &lt;CardContent&gt;Interiors here&lt;/CardContent&gt;&#xA;    &lt;/AutoHeightCard&gt;&#xA;  );&#xA;};&#xA;</code></pre>&#xA;<p>Inpecting the query in devtools I see that the type is sent in as a string.</p>&#xA;<pre><code>variables: {productId: 73803, type: &quot;POSTER&quot;}&#xA;</code></pre>&#xA;<p>How do I do to make it the gql enum type (without quotation marks)?</p>&#xA;<p>Btw, I've tried also replacing <code>type: InteriorType.POSTER</code> with <code>type: InteriorType[InteriorType.POSTER]</code> without success</p>&#xA;",7362686,,,,2021-07-17 12:26:45,Apollo graphql use enums as variables in useQuery with typescript,<typescript><enums><graphql><apollo-client>,0,3,0,2021-07-17 12:26:45
68420669,2,,68420137,1,,"<p>You can query the field &quot;__typename&quot; on objects, interfaces and unions.</p>&#xA;",6726110,,,,2021-07-17 12:50:24,"",,0,1,0,2021-07-17 12:50:24
68426097,2,,67418094,2,,<p>You need to pluralize the entity you are querying:</p>&#xA;<p><code>fundingRateUpdatedEvents</code></p>&#xA;<p>I believe we encountered the same issue using the graph!</p>&#xA;,13779278,,11651988,2021-07-18 15:14:49,2021-07-18 15:14:49,"",,0,0,0,2021-07-18 04:47:19
68516965,1,,,0,48,"<p>Good day to all!&#xA;I have this situation: I use Apollo client to get data from a GraphQL API endpoint in the parent class component in React. I pass this data to the child class component. The first time everything works fine but after a page refresh the data in the child component becomes undefined and the app crashes.</p>&#xA;<p>Here is the representation of the situation:</p>&#xA;<p>The ParentComponent</p>&#xA;<pre><code>import React, { Component } from 'react'&#xA;import { gql } from &quot;apollo-boost&quot;;&#xA;import {graphql} from 'react-apollo';&#xA;import ChildComponent from './ChildComponent'&#xA;&#xA;const getProducts = gql`&#xA;{&#xA;    category {&#xA;        products {&#xA;            id&#xA;            name&#xA;            gallery   &#xA;           &#xA;         } &#xA;            &#xA;     }&#xA; }&#xA; `&#xA;&#xA; class ParentComponent extends Component {&#xA;   constructor(props) {&#xA;        super(props)&#xA;        this.state = {&#xA;          products: []&#xA;        }&#xA;   }&#xA;&#xA;   componentDidMount() {&#xA;       setTimeout(() =&gt; {&#xA;          this.setState({&#xA;            products: [...this.props.data.category.products]&#xA;        })&#xA;        &#xA;      }, 1000)&#xA;   }&#xA;&#xA;    render () {&#xA;     let products = this.state.products;&#xA;&#xA;      return (&#xA;         &lt;div&gt;&lt;ChildComponent  theProducts = {products}/&gt;&lt;/div&gt;   &#xA;   &#xA;      )&#xA;&#xA;&#xA;   }&#xA;&#xA;}&#xA;&#xA;export default graphql(getProducts)(ParentComponent);&#xA;&#xA;</code></pre>&#xA;<p>The ChildComponent</p>&#xA;<pre><code>import React, { Component } from 'react'&#xA;&#xA;&#xA;&#xA; class ChildComponent extends Component {&#xA;   constructor(props) {&#xA;        super(props)&#xA;        this.state = {&#xA;          products: this.props.theProducts&#xA;        }&#xA;   }&#xA;&#xA;   &#xA;&#xA;    render () {&#xA;     let item = this.state.products.find(each =&gt; each.id === id);&#xA;&#xA;      return (&#xA;         &lt;div&gt;&#xA;            &lt;ul&gt;&#xA;                &lt;li&gt;{item.name}&lt;/li&gt;&#xA;                &lt;li&gt;&lt;img src= {item.gallery[0]} alt=&quot;product&quot;&gt;&lt;/img&gt;&lt;/li&gt;&#xA;           &lt;/ul&gt;&#xA;        &lt;/div&gt;   &#xA;   &#xA;      )&#xA;&#xA;&#xA;   }&#xA;&#xA;}&#xA;&#xA;export default ChildComponent;&#xA;&#xA;</code></pre>&#xA;<p>So, when the app starts everything seems to work fine. But if I refresh the page it throws an error and says that name is undefined, gallery is undefined. It is clear that the data is not coming through to the ChildComponent. Is there a way to make sure that the data comes in at any time?&#xA;Thank you in advance.</p>&#xA;",13522085,,13522085,2021-07-25 09:07:12,2021-07-25 09:07:12,The data that comes from an API end point is undefined in the child component in React,<reactjs><graphql>,1,0,0,2021-07-25 08:47:50
68516992,2,,68516965,0,,<p>You use <code>theProducts</code> in the <code>ChildComponent</code> but you pass <code>theProduct</code> from <code>ParentComponent </code>. And state <code>product</code> also has the same error. Just update to <code>theProducts</code> and  <code>product</code></p>&#xA;,6108390,,,,2021-07-25 08:51:02,"",,0,1,0,2021-07-25 08:51:02
68536464,2,,61566501,0,,"<p>You havent defined &quot;meta_title&quot; anywhere, so that data simply does not exist.&#xA;You need to add a simple text field to your content model called &quot;meta_title&quot; and add it to your query so you can define what it needs to be.&#xA;That, or you simply use</p>&#xA;<pre><code>head() {&#xA;        return {&#xA;          // title: this.product.name&#xA;        }&#xA;      }&#xA;</code></pre>&#xA;",16529984,,,,2021-07-26 21:23:11,"",,0,0,0,2021-07-26 21:23:11
68551160,1,,,1,151,"<p>I'm currently passing an <a href=""https://shopify.dev/api/storefront/reference/checkouts/checkoutemailupdatev2"" rel=""nofollow noreferrer"">email</a> &amp; <a href=""https://shopify.dev/api/storefront/reference/checkouts/checkoutshippingaddressupdatev2"" rel=""nofollow noreferrer"">shipping address</a> to Shopify's checkout since Shopify doesn't support multiple destinations. So to avoid confusion I use our company's address and prefill the address, while the actual destination addresses show up as a custom attribute of each line item.</p>&#xA;<p><a href=""https://i.stack.imgur.com/VmJRF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VmJRF.png"" alt=""Example of address in the line item custom attribute"" /></a></p>&#xA;<p>This isn't ideal, but its the best we can do with Shopify at the moment, eCommerce isn't very well built for gift giving.</p>&#xA;<p>After clicking checkout in the cart on our storefront, they are taken straight to the shipping method selection.</p>&#xA;<p>However I noticed a pretty bad problem with this solution, the opt-in marketing <strong>is true by default</strong>. Since the opt-in is on the first step which we skipped, the customer never sees the prompt and is not aware they will be signed up for marketing emails. I'm no lawyer but that doesn't sound very compliant.</p>&#xA;<p>I've dug through the Storefront API documentation and can't find any way to set <code>buyer_accepts_marketing</code> in checkout.</p>&#xA;<p>It confuses me a bit why I can set both the email and shipping address in checkout, which skips the first step, but I can't set the marketing opt-in.</p>&#xA;<p>Is there any workaround for setting <code>buyer_accepts_marketing</code> before grabbing the checkout weburl?</p>&#xA;",3808794,,,,2021-07-27 20:04:16,"I can skip contact information in Shopify checkout, but am unable to opt-out marketing beforehand, which doesn't seem compliant. What can I do?",<graphql><shopify><shopify-api><storefront><shopify-storefront-api>,0,1,0,2021-07-27 20:04:16
68569029,2,,68568854,1,,"<p>Please make sure that you always use a condition to check if the data is there, before starting to map over it in the event of fetching data.</p>&#xA;<p>In your example, a simple solution would be:</p>&#xA;<pre><code>return (&#xA;  &lt;&gt;&#xA;    &lt;Header /&gt;&#xA;&#xA;    &lt;div&gt;&#xA;      {data?.reviews.length ? data.reviews.map((r) =&gt; &lt;div&gt;{r.id}&lt;/div&gt;) : null}&#xA;    &lt;/div&gt;&#xA;  &lt;/&gt;&#xA;);&#xA;</code></pre>&#xA;<p>What I did was check if data.reviews is not undefined and if it has a positive length ( &gt; 0 ), which is a requirement in order to be able to map over it. If this requirement is not fulfilled, null is returned instead.</p>&#xA;",16532250,,,,2021-07-29 01:25:00,"",,0,0,0,2021-07-29 01:25:00
68572804,1,,,1,64,"<p>I’m trying to extract the username of all the users that have reacted to an issue (and how they reacted) with the GitHub GraphQL API. I’ve only been able to extract a maximum of 11 users per reaction group per query, and I haven’t found a way to successfully paginate the queries - the same users are returned each time.</p>&#xA;<p>Here’s an example of my query using <a href=""https://github.com/mapbox/mapbox-gl-js/issues/3184"" rel=""nofollow noreferrer"">an issue with many reactions</a>:</p>&#xA;<pre><code>{&#xA;  repository(owner: &quot;mapbox&quot;, name: &quot;mapbox-gl-js&quot;) {&#xA;    issue(number: 3184) {&#xA;      reactionGroups {&#xA;        content&#xA;        reactors(first: 30) {&#xA;          totalCount&#xA;          pageInfo {&#xA;            hasNextPage&#xA;            endCursor&#xA;          }&#xA;          edges {&#xA;            node {&#xA;              ... on User {&#xA;                login&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>For <code>THUMBS_UP</code> reactions this correctly returns <code>totalCount: 77</code>. However, there are only 11 usernames returned (not the 30 requested). The value of <code>hasNextPage</code> in <code>pageInfo</code> is false, and using the returned cursor value or modifying the reactors query to <code>last:30</code> instead of <code>first:30</code> has no impact on which 11 users are returned.</p>&#xA;<p>Is there a way I can modify my query to get this working (I’m new to GraphQL) or is this a current limitation of the API? Thanks!</p>&#xA;<p>(I've also asked this on the GitHub community forums, but no reply yet - <a href=""https://github.community/t/pagination-not-working-on-reactiongroups-reactors/192255"" rel=""nofollow noreferrer"">see here</a>)</p>&#xA;",12336896,,,,2021-07-29 08:44:04,Pagination on reactionGroups in the GitHub GraphQL API,<github><graphql><github-api>,0,0,0,2021-07-29 08:44:04
68598836,1,,,2,410,"<p>A lot of this is very new to me since I have been a PHP developer for so long.</p>&#xA;<p>I am having a couple of issues that I know are easy to fix. I just have limited experience and am learning.</p>&#xA;<ol>&#xA;<li><p>I cannot seem to pass the argument $token_id.  I am using next JS, and I just want to take the number on the [id].js page, and pass it as the token ID.</p>&#xA;</li>&#xA;<li><p>I can't seem to get data from traitType, which is an object named &quot;traits&quot; which has an array of objects inside of it.</p>&#xA;</li>&#xA;</ol>&#xA;<pre><code>export async function getStaticProps(context) {&#xA;&#xA;&#xA;  const client = new ApolloClient({&#xA;    uri: 'http://localhost:3000/api/graphql',&#xA;    cache: new InMemoryCache()&#xA;  });&#xA;&#xA;  const token_id = String(context.params.id)&#xA;  const { data } = await client.query({&#xA;    query: gql`&#xA;          query myQuery($token_id: String!) {&#xA;            getData(token_id: $token_id) {&#xA;                token_id&#xA;                name&#xA;&#xA;            }&#xA;        }&#xA;    `&#xA;  },{ variables: { token_id } });&#xA;&#xA;    props: {&#xA;      data: data,&#xA;    }&#xA;&#xA;}&#xA;&#xA;export async function getStaticPaths() {&#xA;  return {&#xA;    paths: [], //indicates that no page needs be created at build time&#xA;    fallback: 'blocking' //indicates the type of fallback&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>My Type Definition</p>&#xA;<pre><code>&#xA;    type Blah {&#xA;        token_id: String&#xA;        name: String&#xA;        #traits: [traitType] #TODO: returns nothing since data is array&#xA;&#xA;    }&#xA;&#xA;  type traitType {&#xA;      trait_type: String&#xA;       value: String&#xA;&#xA;   }&#xA;&#xA;</code></pre>&#xA;<p>I have to hard code the token</p>&#xA;<pre><code>&#xA;     getData(token_id: &quot;6&quot;) {&#xA;        token_id&#xA;        name&#xA;  &#xA;        traits {&#xA;            trait_type&#xA;        }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>I have tried several variations in the graphql query</p>&#xA;<pre><code>&#xA;query getDataQuery($token_id: String! = &quot;6&quot;) {&#xA;    getData(token_id: $token_id) {&#xA;&#xA;&#xA;</code></pre>&#xA;<p>Returns Null on traits, and $token id is null, and nothing is found</p>&#xA;<pre><code>&#xA;    &quot;traits&quot;: [&#xA;        {&#xA;          &quot;trait_type&quot;: null,&#xA;      &quot;value&quot;: null&#xA;        }&#xA;      ],&#xA;</code></pre>&#xA;<p>And my JSON from mongo db is an array with an object.</p>&#xA;<pre><code>&#xA;    &quot;traits&quot; : [&#xA;        {&#xA;            &quot;trait_type&quot; : &quot;birthday&quot;, &#xA;            &quot;value&quot; : 1627423029.0, &#xA;     &#xA;        }&#xA;&#xA;]&#xA;&#xA;</code></pre>&#xA;<p>I can post more than just fragments of code.  Sorry for the formatting.</p>&#xA;",12049193,,4032703,2022-02-03 17:19:42,2022-02-03 17:19:42,Passing Arguments to GraphQL with Next.JS and Apollo,<reactjs><mongodb><graphql><next.js>,0,0,0,2021-07-31 03:24:17
68630959,1,,,0,561,"<p>I have the following graphql query:</p>&#xA;<pre><code>axie_list = []  #f'&quot;{1621247}&quot;'&#xA;for ids in tqdm(id_groups[:2]):&#xA;    query = {&quot;operationName&quot;: &quot;GetAxieDetail&quot;,&#xA;        &quot;variables&quot;: {&quot;axieId&quot;: ids},&#xA;        &quot;query&quot;: &quot;query GetAxieDetail($axieId: IDS!) {\n  axie(axieId: $axieId)  {\n    ...AxieDetail\n  }\n}\n\nfragment AxieDetail on Axie {\n  id\n class\n breedCount\n bodyShape\n  sireClass\n  matronClass\n  stage\n  level\n  \n  parts {\n    ...AxiePart\n  }\n  stats {\n    ...AxieStats\n  }\n}\n\nfragment AxiePart on AxiePart {\n  name\n  type\n}\n\nfragment AxieStats on AxieStats {\n  hp\n  speed\n  skill\n  morale\n}&quot;}&#xA;    url = 'https://axieinfinity.com/graphql-server-v2/graphql'&#xA;    json_data = requests.post(url, json=query).json()&#xA;    axie_list.append(json_data)&#xA;</code></pre>&#xA;<p>This query takes in 1 <code>id</code> like this <code>&quot;1621247&quot;</code> at a time.&#xA;I have a group of <code>ids</code> in a list and would like to call the <code>ids</code> in bulk instead of 1 at a time.&#xA;How would something like this look like?</p>&#xA;",9306820,,9306820,2021-08-03 14:05:33,2021-10-19 05:33:43,How to create filter that takes in multiple ids graphql?,<python><python-requests><graphql>,1,0,0,2021-08-03 05:49:44
68641174,2,,58965035,0,,"<p>Today you can request to add the <code>nameWithOwner</code> field as well and even the <code>url</code>. That will give you the information you need.</p>&#xA;<pre><code>{&#xA;  repository(&#xA;    owner: &quot;Semantic-Org&quot;&#xA;    name: &quot;Semantic-Ui&quot;&#xA;  ) {&#xA;    name&#xA;    forkCount&#xA;    forks(&#xA;      first: 12&#xA;      orderBy: { field: NAME, direction: DESC }&#xA;    ) {&#xA;      totalCount&#xA;      nodes {&#xA;        name&#xA;        nameWithOwner&#xA;        url&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Which will give you:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;repository&quot;: {&#xA;      &quot;name&quot;: &quot;Semantic-UI&quot;,&#xA;      &quot;forkCount&quot;: 5133,&#xA;      &quot;forks&quot;: {&#xA;        &quot;totalCount&quot;: 4919,&#xA;        &quot;nodes&quot;: [&#xA;          {&#xA;            &quot;name&quot;: &quot;Vanz-Sing-In&quot;,&#xA;            &quot;nameWithOwner&quot;: &quot;semantic-apps/Vanz-Sing-In&quot;,&#xA;            &quot;url&quot;: &quot;https://github.com/semantic-apps/Vanz-Sing-In&quot;&#xA;          },&#xA;&#xA;          etc.&#xA;&#xA;        }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4395661,,,,2021-08-03 18:32:58,"",,0,0,0,2021-08-03 18:32:58
68641533,1,,,0,426,"<p>I want to find all repositories in an organization that have workflow files in use for further analysis.</p>&#xA;<p>I can run a search through GraphQL for a specific file if I now its name:</p>&#xA;<pre><code>{&#xA;  search(query: &quot;org:rajbos&quot;, type: REPOSITORY, last: 100) {&#xA;    repositoryCount&#xA;    pageInfo {&#xA;      endCursor&#xA;      startCursor&#xA;    }&#xA;    edges {&#xA;      node{&#xA;        ... on Repository {&#xA;          nameWithOwner&#xA;          url&#xA;          object(expression: &quot;HEAD:README.md&quot;) {&#xA;            ... on Blob {&#xA;              byteSize&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>How do I search for a *.yml file in a specific directory? I don't know the filenames up front.</p>&#xA;<p>repository(owner:&quot;someOwner&quot;, name:&quot;some-Repo&quot;)</p>&#xA;",4395661,,,,2021-08-03 19:02:49,Searching for all repositories with *.yml files with GitHub GraphQL,<github><graphql>,1,0,0,2021-08-03 19:02:49
68641534,2,,68641533,0,,"<p>Found that you can query all repositories for files at a location, then filter that set clientside:</p>&#xA;<pre><code>query {&#xA; search(first: 100, type: REPOSITORY, query: &quot;org:rajbos&quot;) {&#xA;   repositoryCount&#xA;    edges {       &#xA;      node {&#xA;        ... on Repository {  &#xA;          nameWithOwner&#xA;          object(expression: &quot;main:.github/workflows/&quot;) {&#xA;            ... on Tree {&#xA;              entries {&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Result:</p>&#xA;<pre><code> {&#xA;          &quot;node&quot;: {&#xA;            &quot;nameWithOwner&quot;: &quot;rajbos/github-fork-updater&quot;,&#xA;            &quot;object&quot;: {&#xA;              &quot;entries&quot;: [&#xA;                {&#xA;                  &quot;name&quot;: &quot;check-workflow.yml&quot;&#xA;                },&#xA;                {&#xA;                  &quot;name&quot;: &quot;update-workflow.yml&quot;&#xA;                }&#xA;              ]&#xA;            }&#xA;          }&#xA;        }&#xA;</code></pre>&#xA;",4395661,,,,2021-08-03 19:02:49,"",,0,1,0,2021-08-03 19:02:49
68650018,1,68653216,,2,460,"<p>I am using below query to create repo:</p>&#xA;<pre><code>   gh api -i graphql -f query='&#xA;   mutation {&#xA;   createRepository(input: {name: &quot;gh-create-test&quot;, visibility: PRIVATE, ownerId: &quot;ID&quot;}) {&#xA;    repository {&#xA;      url&#xA;    }&#xA;  }&#xA;}&#xA;'&#xA;</code></pre>&#xA;<p>THe repo gets created successfully but without admin rights whereas when I create repo from GITHUB UI the repo has admin rights. Can anyone please help what's the issue in this query?</p>&#xA;",3409352,,,,2021-08-04 14:38:02,Github Graphql API create repo,<graphql><github-api-v4>,1,2,0,2021-08-04 10:56:47
68652160,2,,68630986,0,,"<p>There was a <a href=""https://github.com/dependabot/api-docs"" rel=""nofollow noreferrer"">dependabot API docs</a> that could have helped, but it was deprecated in August 3rd 2021.</p>&#xA;<p>However, a workaround would be to check if the <code>dependabot.yml</code> file is present in your repository or not using a <code>GET</code> request to <code>api.github.com/repos/name/repo/contents/fileNameOrPath</code>.</p>&#xA;<p><a href=""https://docs.github.com/en/code-security/supply-chain-security/keeping-your-dependencies-updated-automatically/enabling-and-disabling-version-updates"" rel=""nofollow noreferrer"">Reference about the <strong>dependabot.yml</strong> file</a></p>&#xA;",8496462,,,,2021-08-04 13:30:06,"",,0,0,0,2021-08-04 13:30:06
68653216,2,,68650018,2,,"<p>I just created one, Make sure you are getting the id first and pass it to the createRepository</p>&#xA;<pre><code>query{&#xA;  repositoryOwner(login:&quot;yourLoginId&quot;){&#xA;    id&#xA;    login&#xA;    repositories(first:1) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and create a repository by passing the ownerid</p>&#xA;<pre><code>mutation {&#xA;   createRepository(input: {name: &quot;gh-create-test&quot;, visibility: PRIVATE, ownerId: &quot;idobtainedabove&quot;}) {&#xA;    repository {&#xA;      url&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1749403,,,,2021-08-04 14:38:02,"",,0,11,0,2021-08-04 14:38:02
68678790,1,68679199,,0,103,"<p>I'm attempting to manipulate this data in react with graphql. As you can see, I have this data or input in the graphql playground, and this is how I wanted the input to look:</p>&#xA;<p><a href=""https://i.stack.imgur.com/Qh5AR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Qh5AR.png"" alt=""enter image description here"" /></a></p>&#xA;<p>In my frontend, I have a cartItem with an objects inside and array, including the product name, id, and so on. I wanted the input to look like the example I provided above. Is there a way to make that happen?</p>&#xA;<h1>Codes and Data</h1>&#xA;<hr />&#xA;<p><em>This is how my <strong><code>cart's Item Data</code></strong> looks.</em></p>&#xA;<h2>CartItem Data:</h2>&#xA;<pre><code>[&#xA;  {&#xA;    id: &quot;6109401fd86d352a70e3694e&quot;,&#xA;    name: &quot;asasasasa&quot;,&#xA;    sku: &quot;sasa&quot;,&#xA;    shippingTime: &quot;1628812800000&quot;,&#xA;    quantity: 1,&#xA;  },&#xA;  {&#xA;    id: &quot;61051c14f25d8830a8e238c0&quot;,&#xA;    name: &quot;Pringles Sour Cream &amp; Onion Potato Crisps 158g&quot;,&#xA;    sku: &quot;sad89f79dsafs&quot;,&#xA;    shippingTime: &quot;1627084800000&quot;,&#xA;    quantity: 1,&#xA;  },&#xA;];&#xA;</code></pre>&#xA;<p><strong>As stated in the preceding example, all I wanted was the product's id and quantity.</strong></p>&#xA;<h2>Order.js</h2>&#xA;<pre><code>const [cartItems, setCartItems] = useContext(CartContext);&#xA;&#xA;const [createOrder, { data, loading }] = useMutation(CREATE_ORDER_MUTATION);&#xA;&#xA;const qty = cartItems.map(({ quantity }) =&gt; {&#xA;  return quantity;&#xA;});&#xA;&#xA;const cartItemId = cartItems.map(({ id }) =&gt; {&#xA;  return id;&#xA;});&#xA;&#xA;&#xA;function onSubmit() {&#xA;  createOrder({&#xA;    variables: {&#xA;      qty: qty,&#xA;      products: cartItemId,&#xA;      paymentMethod: paymentMethod,&#xA;      address: address,&#xA;    },&#xA;  })&#xA;}&#xA;</code></pre>&#xA;<p>Whenever I need to console someone. If you log the <code>cartItemId</code>, you'll get something like this:&#xA;<a href=""https://i.stack.imgur.com/x1IE0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/x1IE0.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Same goes with my <code>qty</code>.</p>&#xA;<p>Please let me know if you have any other questions or require any additional code, and I will gladly offer it.</p>&#xA;<h2>Apollo Mutation:</h2>&#xA;<pre><code>const CREATE_ORDER_MUTATION = gql`&#xA;  mutation createOrder(&#xA;    $qty: Int!&#xA;    $products: String!&#xA;    $paymentMethod: String!&#xA;    $address: String!&#xA;  ) {&#xA;    createOrder(&#xA;      orderedItems: [{ qty: $qty, products: $products }]&#xA;      paymentMethod: $paymentMethod&#xA;      address: $address&#xA;    ) {&#xA;      id&#xA;      orderedItems {&#xA;        qty&#xA;        products {&#xA;          id&#xA;          name&#xA;          sku&#xA;          description&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;",14173752,,14173752,2021-08-06 09:33:18,2021-08-06 09:33:18,Manipulating Data Array in React and Graphql,<javascript><arrays><reactjs><object><graphql>,1,0,0,2021-08-06 08:51:21
68679199,2,,68678790,1,,"<p>The code below will transform the <code>cartItems</code> into the desired result. You can loop through the cartItems and create an object with the required structure for each item.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const orderedItems = cartItems.map(({ id, quantity }) =&gt; {&#xA;  return {&#xA;    qty: quantity,&#xA;    products: id,&#xA;  };&#xA;});&#xA;</code></pre>&#xA;<p>Complete code will look something like this</p>&#xA;<pre><code>const [cartItems, setCartItems] = useContext(CartContext);&#xA;const [createOrder, { data, loading }] = useMutation(CREATE_ORDER_MUTATION);&#xA;&#xA;// Restructure the array to desired format&#xA;const orderedItems = cartItems.map(({ id, quantity }) =&gt; {&#xA;  return {&#xA;    qty: quantity,&#xA;    products: id,&#xA;  };&#xA;});&#xA;&#xA;console.log(orderedItems); // To check if it looks correct&#xA;&#xA;function onSubmit() {&#xA;  createOrder({&#xA;    variables: {&#xA;      orderedItems: orderedItem,&#xA;      paymentMethod: paymentMethod,&#xA;      address: address,&#xA;    },&#xA;  })&#xA;}&#xA;</code></pre>&#xA;",829493,,829493,2021-08-06 09:30:35,2021-08-06 09:30:35,"",,0,8,0,2021-08-06 09:21:06
68684052,1,,,0,163,"<p>I want to fetch all the repos, that I'm owner/contributor with specific topic.</p>&#xA;<p>I tried below this request. This returned, all my repos that I'm owner/contributor with all the topics.</p>&#xA;<pre><code>{&#xA;  viewer {&#xA;    repositories(first: 100) {&#xA;      pageInfo {&#xA;        hasPreviousPage&#xA;        hasNextPage&#xA;        startCursor&#xA;        endCursor&#xA;      }&#xA;      nodes {&#xA;        name&#xA;        repositoryTopics(first: 10) {&#xA;          nodes {&#xA;            topic {&#xA;              name&#xA;            }&#xA;          }&#xA;          totalCount&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>I also tried the below request. But it returned all the repos in my org (not only mine) with that specific topic.</p>&#xA;<pre><code>{&#xA;  search(first: 100, type: REPOSITORY, query: &quot;topic:mytopic org:myorg&quot;) {&#xA;    pageInfo {&#xA;      hasNextPage&#xA;      endCursor&#xA;      }&#xA;    repos: edges {&#xA;      repo: node {&#xA;        ... on Repository {&#xA;          name&#xA;          url&#xA;          id&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I need only repos that I'm owner/contributor with that specific topic</p>&#xA;",1698404,,,,2021-08-06 21:27:43,How to fetch all my repos with specific github topic using graph API,<api><github><graphql><github-api><github-graphql>,1,0,0,2021-08-06 15:23:23
68689856,1,68689956,,2,2250,"<p>I'm trying to make an ecommerce for my personal project and I'm trying to use everything I've learned to do so. I currently have this code that allows you to store <strong><code>cartItems</code></strong> in a local Storage, but I believe it's incorrect what I did because in this scenario, for example, <strong><code>user 1</code></strong> added his items to the cart or products to the cart, and then <strong><code>user 2</code></strong> can access or have the same cart when I login with them. <strong>Which is the best practice or choice for the user to save <strong><code>cartItems</code></strong>? Or, rather, what should I do?</strong></p>&#xA;<blockquote>&#xA;<p>Currently the technology I use the&#xA;<strong>M(ongoDB)E(xpress)R(eact)N(odejs)G(raphql)</strong> and <strong>Apollo</strong> for my state management.</p>&#xA;</blockquote>&#xA;<h1>Code</h1>&#xA;<hr />&#xA;<h2>CartContext:</h2>&#xA;<pre><code>import { createContext, useState, useContext, useEffect } from &quot;react&quot;;&#xA;import { AuthContext } from &quot;../auth&quot;;&#xA;&#xA;export const CartContext = createContext();&#xA;&#xA;export const CartProvider = ({ children }) =&gt; {&#xA;  const { user } = useContext(AuthContext);&#xA;  const cartFromLocalStorage =&#xA;    (typeof window !== &quot;undefined&quot; &amp;&amp;&#xA;      JSON.parse(localStorage.getItem(&quot;cart&quot;))) ||&#xA;    [];&#xA;&#xA;  const [cartItems, setCartItem] = useState(cartFromLocalStorage);&#xA;&#xA;  useEffect(() =&gt; {&#xA;    if (typeof window !== &quot;undefined&quot;) {&#xA;      if (user) { // This just shows if the user is loggedIn&#xA;        localStorage.setItem(&quot;cart&quot;, JSON.stringify(cartItems));&#xA;      }&#xA;    }&#xA;  }, [cartItems]);&#xA;&#xA;  return (&#xA;    &lt;CartContext.Provider value={[cartItems, setCartItem]}&gt;&#xA;      {children}&#xA;    &lt;/CartContext.Provider&gt;&#xA;  );&#xA;};&#xA;</code></pre>&#xA;<p>This is my <strong><code>CartContext</code></strong>, where I can see what the user has added to their cart and call it whenever I want because it's a context that doesn't require to pass props to a component.</p>&#xA;<h2>Shop:</h2>&#xA;<pre><code>import { useContext } from &quot;react&quot;;&#xA;import { useQuery } from &quot;@apollo/react-hooks&quot;;&#xA;import { FETCH_PRODUCTS_QUERY } from &quot;../util/graphql/Queries&quot;;&#xA;&#xA;import { Grid, Transition } from &quot;semantic-ui-react&quot;;&#xA;import ProductCard from &quot;../components/products/ProductCard&quot;;&#xA;import { CartContext } from &quot;../context/cart/CartContext&quot;;&#xA;&#xA;function Shop() {&#xA;  const { loading, data: Products } = useQuery(FETCH_PRODUCTS_QUERY);&#xA;&#xA;  const { getProducts: products } = { ...Products };&#xA;&#xA;  const [cartItems, setCartItems] = useContext(CartContext);&#xA;&#xA;  const addToCart = (product) =&gt; {&#xA;    const exist = cartItems.find((x) =&gt; x.id === product.id);&#xA;    if (exist) {&#xA;      setCartItems(&#xA;        cartItems.map((x) =&gt;&#xA;          x.id == product.id ? { ...exist, quantity: exist.quantity + 1 } : x&#xA;        )&#xA;      );&#xA;    } else {&#xA;      setCartItems([...cartItems, { ...product, quantity: 1 }]);&#xA;    }&#xA;  };&#xA;&#xA;  const ProductList = products?.map((product) =&gt; (&#xA;    &lt;Grid.Column key={product.id} style={{ marginBottom: 20 }}&gt;&#xA;      &lt;ProductCard&#xA;        product={product}&#xA;        addToCart={(product) =&gt; addToCart(product)}&#xA;      /&gt;&#xA;    &lt;/Grid.Column&gt;&#xA;  ));&#xA;&#xA;  return (&#xA;    &lt;&gt;&#xA;      &lt;Grid columns={3}&gt;&#xA;        &lt;Grid.Row className=&quot;page-title&quot;&gt;&#xA;          &lt;h1&gt;Recent Products&lt;/h1&gt;&#xA;        &lt;/Grid.Row&gt;&#xA;        &lt;Grid.Row&gt;&#xA;          {loading ? (&#xA;            &lt;h1&gt;Loading products..&lt;/h1&gt;&#xA;          ) : (&#xA;            &lt;Transition.Group&gt;{ProductList}&lt;/Transition.Group&gt;&#xA;          )}&#xA;        &lt;/Grid.Row&gt;&#xA;      &lt;/Grid&gt;&#xA;    &lt;/&gt;&#xA;  );&#xA;}&#xA;&#xA;export default Shop;&#xA;</code></pre>&#xA;<p>This is my Shop or where the Product is located as shown I passed the <code>addToCart function</code> to the <code>ProductCard</code> Component.</p>&#xA;<h2>ProductCard:</h2>&#xA;<pre><code> import { Image, Card } from &quot;semantic-ui-react&quot;;&#xA;    import Link from &quot;next/link&quot;;&#xA;    import Rating from &quot;../reviews/Rating&quot;;&#xA;    &#xA;    function ProductCard({ product, addToCart }) {&#xA;      const {&#xA;        id,&#xA;        name,&#xA;        featureImage,&#xA;        productCurrentPrice,&#xA;        productPreviousPrice,&#xA;        rating,&#xA;        numReviews,&#xA;      } = product;&#xA;    &#xA;      return (&#xA;        &lt;&gt;&#xA;          &lt;Card&gt;&#xA;            &lt;Image&#xA;              src={featureImage}&#xA;              width={200}&#xA;              height={200}&#xA;              alt=&quot;Product Image&quot;&#xA;              className=&quot;product-image&quot;&#xA;            /&gt;&#xA;            &lt;Card.Content&gt;&#xA;              &lt;Card.Header&gt;&#xA;                &lt;Link href={`/products/${id}`}&gt;{name}&lt;/Link&gt;&#xA;              &lt;/Card.Header&gt;&#xA;              &lt;Card.Meta&gt;&#xA;                &lt;span className=&quot;date&quot;&gt;&#xA;                  ₱{productCurrentPrice.toLocaleString()}&#xA;                &lt;/span&gt;&#xA;                &lt;span className=&quot;date&quot;&gt;&#xA;                  &lt;strike&gt;₱{productPreviousPrice.toLocaleString()}&lt;/strike&gt;&#xA;                &lt;/span&gt;&#xA;                &amp;nbsp;&#xA;                &lt;span className=&quot;header&quot;&gt;{percentOff} % OFF&lt;/span&gt;&#xA;              &lt;/Card.Meta&gt;&#xA;            &lt;/Card.Content&gt;&#xA;            &lt;Card.Content extra&gt;&#xA;              &lt;div className=&quot;ui two buttons&quot;&gt;&#xA;                &lt;button&#xA;                  className=&quot;ui basic green button&quot;&#xA;                  onClick={() =&gt; addToCart(product)}&#xA;                &gt;&#xA;                  Add To Cart&#xA;                &lt;/button&gt;&#xA;              &lt;/div&gt;&#xA;            &lt;/Card.Content&gt;&#xA;          &lt;/Card&gt;&#xA;        &lt;/&gt;&#xA;      );&#xA;    }&#xA;    &#xA;    export default ProductCard;&#xA;</code></pre>&#xA;<p>This is my ProductCard Component which when addToCart it will go to the localStorage just like this:</p>&#xA;<p><a href=""https://i.stack.imgur.com/ZQj64.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZQj64.png"" alt=""enter image description here"" /></a></p>&#xA;<p>As shown above, the image the <code>cart key</code> is where all the products I added is inputted there. even when I logout the <code>cartItem</code> is still shown there, which it should not.</p>&#xA;<p>If you need anymore clarification or explanation, I can provide it, if code I will also provide I will be transparent as I can.</p>&#xA;",14173752,,14173752,2021-08-07 08:37:58,2021-08-07 08:37:58,Best Way to Save or Store Cart Items by each user? (Best Practice or Way) [MERNG STACK],<reactjs><local-storage><apollo><apollo-client><shopping-cart>,1,0,0,2021-08-07 06:16:05
68695155,1,,,0,70,"<p>I have the following gql query which is supposed to retrieve data from the podchaser api</p>&#xA;<pre><code>const query = gql`&#xA;    query getGuests($identifier: PodcastIdentifier!) {&#xA;        podcast(&#xA;            identifier:$identifier&#xA;          ){&#xA;             credits{&#xA;                 data{&#xA;                    episodeCredits{&#xA;                        characters&#xA;                    }&#xA;                 }&#xA;             } &#xA;          } &#xA;        }  &#xA;    }&#xA;  `;&#xA;</code></pre>&#xA;<p>The docs are here for that request <a href=""https://api-docs.podchaser.com/docs/reference/queries/podcast#arguments"" rel=""nofollow noreferrer"">https://api-docs.podchaser.com/docs/reference/queries/podcast#arguments</a></p>&#xA;<p>I am running the request like so</p>&#xA;<pre><code>const checkForGuests = (id) =&gt; {&#xA;    const variables = {&#xA;      identifier: {&#xA;        id: id,&#xA;        type: &quot;SPOTIFY&quot;,&#xA;      },&#xA;    };&#xA;&#xA;    const fetchPodcastsGuests = async () =&gt; {&#xA;      const data1 = await graphQLClient.request(query, variables);&#xA;      setData1(data1);&#xA;    };&#xA;    fetchPodcastsGuests();&#xA;  };&#xA;</code></pre>&#xA;<p>I am able to get ID's from a podcast with</p>&#xA;<pre><code> const search = gql`&#xA;    query {&#xA;      podcasts(searchTerm: &quot;syntax&quot;) {&#xA;        data {&#xA;          id&#xA;          title&#xA;        }&#xA;      }&#xA;    }&#xA;  `;&#xA;</code></pre>&#xA;<p>The error I am getting is the following</p>&#xA;<pre><code>Error: GraphQL Error (Code: 500): {&quot;response&quot;:{&quot;message&quot;:&quot;Server Error&quot;,&quot;status&quot;:500,&quot;headers&quot;:{&quot;map&quot;:{&quot;cache-control&quot;:&quot;no-cache, private&quot;,&quot;content-type&quot;:&quot;application/json&quot;}}},&quot;request&quot;:{&quot;query&quot;:&quot;\n    query getGuests($identifier: PodcastIdentifier!) {\n\t\tpodcast(\n\t\t\tidentifier:$identifier\n\t\t  ){\n\t\t\t credits{\n\t\t\t\t data{\n\t\t\t\t\tepisodeCredits{\n\t\t\t\t\t\tcharacters\n\t\t\t\t\t}\n\t\t\t\t }\n\t\t\t } \n\t\t  }\t\n\t\t}  \n    }\n  &quot;,&quot;variables&quot;:{&quot;identifier&quot;:{&quot;id&quot;:&quot;77080&quot;,&quot;type&quot;:&quot;SPOTIFY&quot;}}}}&#xA;</code></pre>&#xA;<p>Any help on this would be great, can't seem to figure out what I am doing wrong.</p>&#xA;",2949184,,,,2021-08-07 19:43:35,"Podchaser GraphQL Api, seem to be passing something incorrectly",<javascript><api><graphql>,1,0,0,2021-08-07 18:33:17
68695630,2,,68695155,0,,"<p>Was able to do the query I need in the initial search, and noticed I was doing somethings wrong</p>&#xA;<pre><code>const search = gql`&#xA;    query {&#xA;      podcasts(searchTerm: &quot;zion 2.0&quot;) {&#xA;        data {&#xA;          id&#xA;          title&#xA;          credits{&#xA;            data{&#xA;              episodeCredits{&#xA;               data{&#xA;                 characters{&#xA;                   name&#xA;                 }&#xA;               }&#xA;             }&#xA;            }&#xA;          } &#xA;        }&#xA;      }&#xA;    }&#xA;  `;&#xA;</code></pre>&#xA;",2949184,,,,2021-08-07 19:43:35,"",,0,0,0,2021-08-07 19:43:35
68696016,1,,,1,199,"<p>In Gatsby I have nodes with values that contain arrays (from Airtable):</p>&#xA;<pre><code>&quot;edges&quot;: [&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;data&quot;: {&#xA;              &quot;Name&quot;: &quot;Simon&quot;,&#xA;              &quot;Projects&quot;: [&#xA;                &quot;Mainsite&quot;, &quot;Backend&quot;&#xA;              ],&#xA;              &quot;Locations&quot;: [&#xA;                &quot;UK&quot;, &quot;USA&quot;&#xA;              ]&#xA;            }&#xA;          }&#xA;        },&#xA;...&#xA;</code></pre>&#xA;<p>When I use Gatsby's <a href=""https://www.gatsbyjs.com/docs/reference/routing/file-system-route-api/"" rel=""nofollow noreferrer"">File System Route API</a> to create dynamic pages (eg <code>{airtable.data__Projects}.js</code>), then pages are created for each array used in each node, eg <code>/projects/mainsite-backend/</code>.</p>&#xA;<p>How do I get each item in each array in each node to have its own page, eg <code>/projects/mainsite</code> and <code>/projects/backend</code>?</p>&#xA;",12103255,,12103255,2021-08-08 09:58:06,2021-08-12 16:42:48,Gatsby File System Route API: unique page for every array item,<javascript><arrays><graphql><gatsby><jamstack>,1,1,0,2021-08-07 20:49:17
68696781,1,,,2,180,"<p>I have a little web app called RepoSweeper (<a href=""https://reposweeper.com/"" rel=""nofollow noreferrer"">https://reposweeper.com/</a>) which I built after my coding bootcamp. It's purpose is to bulk delete unused repos from GitHub.</p>&#xA;<p>A while back GitHub changed the way you access repos via the API and Private repos stopped showing up in the results. So I had a freelancer modify the code to use GraphQL to make the request.</p>&#xA;<p>Now all the repos show up (hooray!) but there are a huge number of repos that don't exist in my Repositories on Github. My first thought was that they are archived, but the isArchived flag is false in the response data.</p>&#xA;<p>This is the GraphQL query:</p>&#xA;<pre><code>export const REPO_INFO_QUERY = gql`&#xA;&#xA;&#xA;query ($ghLogin: String!, $after: String) {&#xA;    user(login: $ghLogin) {&#xA;      id&#xA;      name&#xA;      login&#xA;      avatarUrl&#xA;      bioHTML&#xA;      repositories(first: 100, after: $after, ownerAffiliations: [OWNER, ORGANIZATION_MEMBER, COLLABORATOR]) {&#xA;        totalCount&#xA;        pageInfo {&#xA;          endCursor&#xA;          hasNextPage&#xA;          __typename&#xA;        }&#xA;        nodes {&#xA;          id&#xA;          viewerCanAdminister&#xA;          name&#xA;          description&#xA;          isFork&#xA;          isPrivate&#xA;          isArchived&#xA;          updatedAt&#xA;          createdAt&#xA;          url&#xA;          parent {&#xA;            nameWithOwner&#xA;            url&#xA;            __typename&#xA;          }&#xA;          owner {&#xA;            login&#xA;            url&#xA;            __typename&#xA;          }&#xA;          __typename&#xA;        }&#xA;        __typename&#xA;      }&#xA;      __typename&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>This is the request:</p>&#xA;<pre><code>  const endpoint = `https://api.github.com/graphql`&#xA;&#xA;  const graphQLClient = new GraphQLClient(endpoint, {&#xA;    headers: {&#xA;      authorization: `Bearer ${token}`,&#xA;    },&#xA;  })&#xA;&#xA;  const variables = {ghLogin: user, archived: true, isArchived: true}&#xA;&#xA;  return graphQLClient.request(REPO_INFO_QUERY, variables).then(data =&gt; {&#xA;    debugger&#xA;    return data&#xA;  })&#xA;    .catch(err =&gt; {&#xA;      Popup.alert('Error: '+ err)&#xA;      return false&#xA;    }&#xA;  )&#xA;</code></pre>&#xA;<p>And this is what the non-existent repo data looks like:</p>&#xA;<p><a href=""https://i.stack.imgur.com/bDDmW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bDDmW.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Love to hear what you guys think. Thank you!</p>&#xA;",10881188,,,,2021-08-07 23:33:26,Github GraphQL API: non-existent repositories showing up in response,<node.js><api><github><graphql><github-api>,0,1,0,2021-08-07 23:33:26
68716820,1,68767063,,1,108,"<pre><code>&#xA;    console.log(data.allShopifyProductVariant.nodes[0].product.title)&#xA;&#xA;    return (&#xA;        &lt;div&gt;&#xA;            &lt;div&gt;&#xA;                {data.allShopifyProductVariant.nodes.map(node =&gt; {&#xA;                    &lt;div&gt;&#xA;                        {node.product.title}&#xA;                    &lt;/div&gt;&#xA;                &#xA;                })}&#xA;            &lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;    )&#xA;}&#xA;&#xA;&#xA;export const query = graphql`&#xA;    query CollectionQuery {&#xA;        allShopifyProductVariant(filter: {product: {productType: {in: &quot;20 lb. Plotter Paper&quot;}}}) {&#xA;            nodes {&#xA;              compareAtPrice&#xA;              sku&#xA;              price&#xA;              product {&#xA;                title&#xA;                images {&#xA;                  gatsbyImageData(width: 150)&#xA;                }&#xA;                productType&#xA;              }&#xA;            }&#xA;          }&#xA;    }`&#xA;&#xA;export default Collection;&#xA;</code></pre>&#xA;<p>Expecting this function to return the product title, for some reason it returns nothing. I've tried using dangerously set innerhtml but nothing comes up, no error. I am able to console.log the {node.product.title} and it returns exactly what I want to display but for some reason it is not rendering to the div. Any help is appreciated, thanks in advance :D</p>&#xA;",13771717,,,,2021-08-13 05:08:07,graphql query not rendering to page,<html><reactjs><graphql><gatsby>,1,0,0,2021-08-09 18:20:11
68723696,1,,,0,214,"<p>I am trying to fetch all Shopify Payouts via the Graphql API.</p>&#xA;<p>In particular I want to retrieve the following fields:</p>&#xA;<pre><code>id&#xA;amount&#xA;currencyCode&#xA;issuedAt&#xA;orders&#xA;</code></pre>&#xA;<p>According to the Graphql schema <a href=""https://shopify.dev/graphiql/admin-graphiql"" rel=""nofollow noreferrer"">here</a> I can use the following query to retrieve payouts but it doesn't seem to have all the fields I require.</p>&#xA;<pre><code>{&#xA;  payouts(first: 250) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        net {&#xA;          amount&#xA;          currencyCode&#xA;        }&#xA;        issuedAt&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>If I want to retrieve the associated orders for each payout, do I then need another query to retrieve all the orders or am I able to retrieve them within my existing query?</p>&#xA;<p>I.e. do I need another query for each payout id</p>&#xA;<pre><code>{&#xA;  orders(first: 250 query: &quot;id='1'&quot;) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        amount&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Or can I retrieve within the original query:</p>&#xA;<pre><code>{&#xA;  payouts(first: 250) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        net {&#xA;          amount&#xA;          currencyCode&#xA;        }&#xA;        issuedAt&#xA;        order {&#xA;          id&#xA;          amount&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3528590,,,,2021-08-10 16:56:37,How to get Shopify payouts via GraphQL API?,<javascript><node.js><graphql><shopify><shopify-api>,1,0,0,2021-08-10 08:48:48
68730283,1,,,2,201,"<p>I'm making an SSR with GraphQL and Next.js but I have a problem when I try to map some data.</p>&#xA;<p>I'm bringing some data from Github GraphQL API (Followers, Following, Public Repos) and when I pass this data to the code all my data works fine. But when I try to map my Showcase Repos to print on screen, the problems starts, anyone can help me?</p>&#xA;<p>My stack at this moment is GraphQL (GraphQl-request), Next.js, styled-components and TypeScript.</p>&#xA;<p>This is my query:</p>&#xA;<pre><code>  fragment totalFollowing on User {&#xA;    following(first: 1) {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;&#xA;  fragment totalFollowers on User {&#xA;    followers(first: 1) {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;&#xA;  fragment totalRepositories on User {&#xA;    repositories(affiliations: OWNER, first: 1) {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;&#xA;  fragment showcase on User {&#xA;    itemShowcase {&#xA;      items(first: 10) {&#xA;        nodes {&#xA;          ... on Repository {&#xA;            name&#xA;            description&#xA;            url&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;  query GET_GITHUB_QUERIES {&#xA;    viewer {&#xA;      ...totalFollowing&#xA;      ...totalFollowers&#xA;      ...totalRepositories&#xA;      ...showcase&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>and this is my types at moment:</p>&#xA;<pre><code>export type FollowingProps = {&#xA;  totalCount: number&#xA;}&#xA;&#xA;export type FollowersProps = {&#xA;  totalCount: number&#xA;}&#xA;&#xA;export type RepositoriesProps = {&#xA;  totalCount: number&#xA;}&#xA;&#xA;export type itemShowCaseProps = {&#xA;  itemShowcase: {&#xA;    items: {&#xA;      nodes: [&#xA;        {&#xA;          name: string&#xA;          description: string&#xA;          url: string&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;export type QueryProps = {&#xA;  following: FollowingProps&#xA;  followers: FollowersProps&#xA;  repositories: RepositoriesProps&#xA;  itemShowcase: itemShowCaseProps&#xA;}&#xA;</code></pre>&#xA;<p>My call on index.tsx</p>&#xA;<pre><code>export const getStaticProps: GetStaticProps = async () =&gt; {&#xA;  const { viewer } = await client.request(query)&#xA;&#xA;  return {&#xA;    props: {&#xA;      ...viewer&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Still on my index.tsx, i have this component where i need to pass the data:</p>&#xA;<pre><code>      &lt;S.MyWorkSection id=&quot;my-work&quot; data-aos=&quot;fade-up&quot;&gt;&#xA;        &lt;MyWorkGithub&#xA;          repositories={repositories}&#xA;          following={following}&#xA;          followers={followers}&#xA;          {...{ itemShowcase }}&#xA;        /&gt;&#xA;      &lt;/S.MyWorkSection&gt;&#xA;</code></pre>&#xA;<p>And finaly this is my component:</p>&#xA;<pre><code>const MyWorkGithub: React.FC&lt;QueryProps&gt; = ({&#xA;  following,&#xA;  followers,&#xA;  repositories,&#xA;  itemShowcase&#xA;}) =&gt; (&#xA;  &lt;&gt;&#xA;    &lt;Title text=&quot;Works&quot; icon={true} /&gt;&#xA;    &lt;S.HighLightWrapper&gt;&#xA;      &lt;HighLightCard&#xA;        hlNumber={repositories.totalCount}&#xA;        hlDescription={'repositories'}&#xA;      /&gt;&#xA;      &lt;HighLightCard&#xA;        hlNumber={followers.totalCount}&#xA;        hlDescription={'followers'}&#xA;      /&gt;&#xA;      &lt;HighLightCard&#xA;        hlNumber={following.totalCount}&#xA;        hlDescription={'following'}&#xA;      /&gt;&#xA;    &lt;/S.HighLightWrapper&gt;&#xA;    &lt;S.CardWrapper&gt;&#xA;      {itemShowcase.itemShowcase.items.nodes.map((repo, index) =&gt; (&#xA;        &lt;CardComponent&#xA;          key={index}&#xA;          url={repo.url}&#xA;          name={repo.name}&#xA;          description={repo.description}&#xA;        /&gt;&#xA;      ))}&#xA;    &lt;/S.CardWrapper&gt;&#xA;  &lt;/&gt;&#xA;)&#xA;</code></pre>&#xA;<p>this is my error:</p>&#xA;<pre><code>TypeError: cannot read property 'items' of undefined&#xA;&lt;SCardWrapper&gt;&#xA;  {itemShowcase.itemShowcase.items.node.map((repo, index) =&gt; (&#xA;...&#xA;</code></pre>&#xA;<p><a href=""https://i.imgur.com/LzOmb2z.png"" rel=""nofollow noreferrer"">https://i.imgur.com/LzOmb2z.png</a></p>&#xA;<p>Other datas like repositories, followers and following still works fine.</p>&#xA;<p>Edit: When I put on Github Explorer, all data is fine.</p>&#xA;",16634074,,10369647,2021-08-10 21:13:41,2021-08-10 21:13:41,Problems with GraphQL and TypeScript when I map data to components,<reactjs><typescript><graphql><next.js><server-side-rendering>,0,2,0,2021-08-10 16:17:12
68737504,2,,68712747,0,,"<p>Thanks for response.&#xA;Unfortunately, neither answer works.</p>&#xA;<p>Still the same, <code>id_product_manufacturer</code> is null after send request.</p>&#xA;<pre><code>mutation {&#xA;    createProduct(&#xA;        input: {&#xA;            manufacturer: {&#xA;                create: {&#xA;                    name: &quot;test&quot;&#xA;                }&#xA;            }&#xA;        }&#xA;    ){&#xA;        id_product&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/LNztJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LNztJ.png"" alt=""enter image description here"" /></a></p>&#xA;",12546152,,,,2021-08-11 07:09:50,"",,0,0,0,2021-08-11 07:09:50
68737927,1,,,0,962,"<p>I'm using the most recent version of Graphql, Typescript, type-graphql and TypeORM.&#xA;I set up basic CRUD and now want to add the functionality to optionally sort the output of my query to get all products.</p>&#xA;<p>This is the function I'm working on. Currently I hard coded that it sorts by the name in ascending order, which works fine. But I want to make the property and the sort direction to depend on the user input, which I defined in the Sorting interface. The following error appears when I try to make use of the sorting parameter (e.g. sorting.parameter)</p>&#xA;<pre><code>No overload matches this call.&#xA;  Overload 1 of 2, '(this: ObjectType&lt;Product&gt;, options?: FindManyOptions&lt;Product&gt; | undefined): Promise&lt;Product[]&gt;', gave the following error.&#xA;    Type '{ sorting: string; }' is not assignable to type '{ name?: &quot;ASC&quot; | &quot;DESC&quot; | 1 | -1 | undefined; id?: &quot;ASC&quot; | &quot;DESC&quot; | 1 | -1 | undefined; tags?: &quot;ASC&quot; | &quot;DESC&quot; | 1 | -1 | undefined; createdAt?: &quot;ASC&quot; | &quot;DESC&quot; | 1 | -1 | undefined; }'.&#xA;      Object literal may only specify known properties, and 'sorting' does not exist in type '{ name?: &quot;ASC&quot; | &quot;DESC&quot; | 1 | -1 | undefined; id?: &quot;ASC&quot; | &quot;DESC&quot; | 1 | -1 | undefined; tags?: &quot;ASC&quot; | &quot;DESC&quot; | 1 | -1 | undefined; createdAt?: &quot;ASC&quot; | &quot;DESC&quot; | 1 | -1 | undefined; }'.&#xA;  Overload 2 of 2, '(this: ObjectType&lt;Product&gt;, conditions?: FindConditions&lt;Product&gt; | undefined): Promise&lt;Product[]&gt;', gave the following error.&#xA;    Argument of type '{ order: { sorting: string; }; }' is not assignable to parameter of type 'FindConditions&lt;Product&gt;'.&#xA;      Object literal may only specify known properties, and 'order' does not exist in type 'FindConditions&lt;Product&gt;'.&#xA;</code></pre>&#xA;<pre><code>import { Service } from 'typedi';&#xA;import { Product } from '../entity/Product';&#xA;import { CreateProductInput, UpdateProductInput } from '../../schema/products';&#xA;&#xA;interface Sorting {&#xA;  parameter: &quot;name&quot; | &quot;created_at&quot;,&#xA;  direction: &quot;ASC&quot; | &quot;DESC&quot;&#xA;}&#xA;&#xA;@Service()&#xA;export class ProductService {&#xA;  getAll = async (sorting? : Sorting): Promise&lt;Product[]&gt; =&gt; {&#xA;    if (sorting) {&#xA;// tried using ({order: {sorting.parameter : sorting.direction}});&#xA;      return Product.find({order: {name : &quot;ASC&quot;}});&#xA;    }&#xA;    return Product.find();&#xA;  };&#xA;.&#xA;.&#xA;.&#xA;}&#xA;</code></pre>&#xA;<p>The product entity is defined as follows:</p>&#xA;<pre><code>import {&#xA;    Entity,&#xA;    PrimaryGeneratedColumn,&#xA;    Column,&#xA;    BaseEntity,&#xA;    CreateDateColumn,&#xA;  } from 'typeorm';&#xA;&#xA;//   import {Tag} from './Tag'&#xA;  &#xA;  @Entity()&#xA;  export class Product extends BaseEntity {&#xA;    @PrimaryGeneratedColumn()&#xA;    id!: number;&#xA;  &#xA;    @Column()&#xA;    name!: string;&#xA;  &#xA;    // @OneToMany(type =&gt; Tag, tag =&gt; tag.name)&#xA;    // @Column({ type: () =&gt; [Tag]})&#xA;    @Column({ type: 'text', array: true })&#xA;    tags!: string[];&#xA;  &#xA;    @CreateDateColumn({ name: 'created_at' })&#xA;    createdAt!: Date;&#xA;  }&#xA;</code></pre>&#xA;<p>My resolver looks like this.</p>&#xA;<pre><code>import { Query, Resolver, Mutation, Arg } from 'type-graphql';&#xA;import { Service } from 'typedi';&#xA;import { Product, CreateProductInput, UpdateProductInput } from '../schema/products';&#xA;import { ProductService } from '../database/services/productService';&#xA;&#xA;@Service()&#xA;@Resolver(() =&gt; Product)&#xA;export class ProductResolver {&#xA;  constructor(private readonly productService: ProductService) {}&#xA;&#xA;  @Query(() =&gt; [Product], { nullable: true })&#xA;  async getProducts(&#xA;    @Arg('sorting', {nullable: true})  inputParameter: &quot;name&quot; | &quot;created_at&quot;,&#xA;    @Arg('direction', {nullable: true, defaultValue: &quot;ASC&quot;}) inputDirection: &quot;ASC&quot; | &quot;DESC&quot;): Promise&lt;Product[]&gt; {&#xA;    return this.productService.getAll({parameter: inputParameter, direction: inputDirection});&#xA;  }&#xA;</code></pre>&#xA;",12868977,,12868977,2021-08-11 08:49:54,2021-08-11 11:24:37,How to use an optional order parameter in a query using Typescript and TypeORM,<typescript><graphql><typeorm><typegraphql>,1,1,0,2021-08-11 07:43:05
68741863,2,,68669483,0,,<p>The problem was <code>content: ${commenterMessage}</code> that I should have written like this:<br></p>&#xA;<pre><code>content: &quot;${commenterMessage}&quot;&#xA;</code></pre>&#xA;<p>as the content is a <em><strong>String</strong></em> we should surround it with double quotes.</p>&#xA;,12669201,,,,2021-08-11 12:17:38,"",,0,0,0,2021-08-11 12:17:38
68771783,1,68771784,,0,408,<p>I've received the above error when following the guides from Shopify to create a Rails app. None of the other solutions worked and I followed the Shopify guide to the tee.</p>&#xA;,3957433,,,,2021-08-13 14:46:46,You must set ShopifyAPI::Base.api_version before making a request,<ruby-on-rails><graphql><shopify>,2,0,0,2021-08-13 11:48:00
68771784,2,,68771783,0,,"<p>Downloading the Shopify Rails app from github, I saw that they had this in their shop model:</p>&#xA;<pre><code>def api_version&#xA;   ShopifyApp.configuration.api_version&#xA;end&#xA;</code></pre>&#xA;",3957433,,,,2021-08-13 11:48:00,"",,0,0,0,2021-08-13 11:48:00
68772614,1,68793099,,2,520,"<p>I try to execute a Graphql Client Query. Sadly I am not able to find any kind of documentation or examples on how to do a simple Mutation using the Dynamic Graph QL Client. Here is the documentation <a href=""https://quarkus.io/guides/smallrye-graphql-client"" rel=""nofollow noreferrer"">https://quarkus.io/guides/smallrye-graphql-client</a>.</p>&#xA;<pre><code>mutation mut {&#xA;  add(p: {&#xA;    amount: {0},&#xA;    fromCurrencyId: {1},&#xA;    reference: {2},&#xA;    terminalKey: {3},&#xA;    toCurrencyId: {4}&#xA;  }) {&#xA;    address&#xA;    toCurrencyAmount&#xA;    rate&#xA;    createdAt&#xA;    expireAt&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>{0}..{4} are variable place holder.&#xA;Does someone know how to execute this query with the DynamicGraphlQlClient?</p>&#xA;<p>Thanks!</p>&#xA;",16658916,,,,2022-11-08 11:43:12,Quarkus SmallRye Graphql-Client Mutation Query,<graphql><quarkus><smallrye>,1,0,0,2021-08-13 12:47:20
68782057,2,,68567639,1,,"<p>so in the end I used this in the frontend:</p>&#xA;<pre><code>const …&#xA;  mutation ADD_TO_CART_MUTATION($id: [ID]!) {&#xA;    sendToCart(productIds: $id) {&#xA;…&#xA;</code></pre>&#xA;<p>with</p>&#xA;<pre><code>sendToCart({&#xA;    variables: {&#xA;        id: cartItems,&#xA;    },&#xA;});&#xA;</code></pre>&#xA;<p>and in the backend:</p>&#xA;<pre><code>async function sendToCart(&#xA;    root: any,&#xA;    { productIds }: { productIds: string[] },&#xA;    context: KeystoneContext&#xA;): Promise&lt;void&gt; {&#xA;    const sesh = context.session;&#xA;&#xA;const quantities = []&#xA;    productIds.forEach(function (x) { quantities[x] = (quantities[x] || 0) + 1; });&#xA;    {&#xA;        Object.entries(quantities).map(async ([key, value]) =&gt; {&#xA;&#xA;// rest of code …&#xA;</code></pre>&#xA;",15262282,,,,2021-08-14 09:32:36,"",,0,0,0,2021-08-14 09:32:36
68795344,2,,60353654,0,,"<p>I ran into this problem as well when I try to use aggregations.&#xA;simply you can you both ID's(<code>id</code> and <code>_id</code>) but it's not good thing.</p>&#xA;<p>what I use is to iterate the data</p>&#xA;<p>if the returning data of the query is not array use this</p>&#xA;<pre><code>return {&#xA;    ...res._doc,&#xA;    id: res._id,&#xA;}&#xA;</code></pre>&#xA;<p>but the returning data is an array you can add <code>id</code> to the response variable like below using <code>forEach</code></p>&#xA;<pre><code>res.forEach(element =&gt; {&#xA;     element.id = element._id &#xA;});&#xA;return res;&#xA;</code></pre>&#xA;",7034513,,,,2021-08-15 21:08:50,"",,0,0,0,2021-08-15 21:08:50
68795392,2,,58166982,1,,<p>Adding <code>id</code> element to the result works fine to mine</p>&#xA;<pre><code>   const res = await Product.aggregate(&#xA;          [&#xA;            { $sample: { size: 1 } }&#xA;          ]&#xA;    )&#xA;    res.forEach(element =&gt; {&#xA;         element.id = element._id &#xA;    });&#xA;    return res;&#xA;</code></pre>&#xA;,7034513,,,,2021-08-15 21:15:33,"",,0,0,0,2021-08-15 21:15:33
68803188,1,68943148,,0,41,"<p>I'm cross-posting the question from <a href=""https://github.community/t/statuscontext-should-be-a-list-of-nodes-not-a-node/189261"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>I’m interested in knowing whether it’s possible to fetch all the statuses for all the contexts for a given reference using the GQL API.</p>&#xA;<p>The query that I’m currently doing is the following:</p>&#xA;<pre><code>{&#xA;  repository(owner: &quot;owner&quot;, name: &quot;name&quot;) {&#xA;    pullRequests(headRefName: &quot;head-ref&quot;, last: 1) {&#xA;      nodes {&#xA;        id&#xA;        commits(first: 10) {&#xA;          nodes {&#xA;            commit {&#xA;              oid&#xA;              status {&#xA;                contexts {&#xA;                  context&#xA;                  createdAt&#xA;                  id&#xA;                  description&#xA;                  state&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This query returns a single status for each status context, and those are the last ones for each:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;repository&quot;: {&#xA;      &quot;pullRequests&quot;: {&#xA;        &quot;nodes&quot;: [&#xA;          {&#xA;            &quot;id&quot;: &quot;some-id&quot;,&#xA;            &quot;commits&quot;: {&#xA;              &quot;nodes&quot;: [&#xA;                {&#xA;                  &quot;commit&quot;: {&#xA;                    &quot;oid&quot;: &quot;some-oid&quot;,&#xA;                    &quot;status&quot;: {&#xA;                      &quot;contexts&quot;: [&#xA;                        {&#xA;                          &quot;context&quot;: &quot;context-1&quot;,&#xA;                          &quot;createdAt&quot;: &quot;2021-07-06T21:28:26Z&quot;,&#xA;                          &quot;id&quot;: &quot;***&quot;,&#xA;                          &quot;description&quot;: &quot;Your tests passed!&quot;,&#xA;                          &quot;state&quot;: &quot;SUCCESS&quot;&#xA;                        },&#xA;                        {&#xA;                          &quot;context&quot;: &quot;context-2&quot;,&#xA;                          &quot;createdAt&quot;: &quot;2021-07-06T21:25:26Z&quot;,&#xA;                          &quot;id&quot;: &quot;***&quot;,&#xA;                          &quot;description&quot;: &quot;Your tests passed!&quot;,&#xA;                          &quot;state&quot;: &quot;SUCCESS&quot;&#xA;                        },&#xA;                      ]&#xA;                    }&#xA;                  }&#xA;                }&#xA;              ]&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>On the other hand, if I use the REST API with this query:</p>&#xA;<pre><code>curl -i -u se7entyse7en:$(cat token) https://api.github.com/repos/owner/name/commits/some-oid/statuses&#xA;</code></pre>&#xA;<p>where some-oid is the corresponding retrieved with the GQL API, the output contains ALL the statuses. In particular, I can see all the statuses of context-1 and context-2 that happened before those that are returned by the GQL API.</p>&#xA;<p>It seems a limitation of the GQL schema given that StatusContext is a node instead of being a list of nodes. Basically, I expect StatusContext to be of type [Status!]! where Status represents a single status for the given context.</p>&#xA;<p>Am I missing something? Is this something expected to be changed in the future? Is the REST API the only option?</p>&#xA;<p>Thanks.</p>&#xA;",3276106,,,,2021-08-26 17:41:47,Github GrapQL API returns only the last StatusContext for each context,<github><graphql><github-api>,1,0,0,2021-08-16 12:54:22
68811582,2,,68811494,0,,"<p><code>[1]string{}</code> is an array. <code>[]string{}</code> is a slice. The two are different. An array is a fixed size object. A slice can grow/shrink dynamically.</p>&#xA;<p>In this case, you should not be using either, because <code>$push</code> gets a value, not a slice:</p>&#xA;<pre><code>update := bson.D{&#xA;  {Key: &quot;$push&quot;, Value: bson.D{&#xA;    {Key: &quot;time.login&quot;, Value: time.Now().Format(time.RFC3339)},&#xA;  }},&#xA;}&#xA;</code></pre>&#xA;",11923999,,,,2021-08-17 04:09:26,"",,0,2,0,2021-08-17 04:09:26
68812682,2,,68811494,0,,<p>Try initializing the slice.&#xA;And use append.</p>&#xA;,16685547,,,,2021-08-17 06:38:28,"",,0,0,0,2021-08-17 06:38:28
68822237,1,,,1,160,"<p>I am trying to test the <code>async fetch()</code> function of my Vue Component. This method uses some of the props to build a query to use with our Apollo GQL instance. I'm having a hard time finding examples using a similar configuration that I am using.</p>&#xA;<p>Ultimately, I'd love to test the full query (building it and the return data) but if it is difficult to test the full return data, then I can settle with just testing the building process of the <code>variables</code> and hopefully the <code>schema</code> of the return data.</p>&#xA;<pre><code>// ProductList.spec.js&#xA;import { shallowMount } from '@vue/test-utils'&#xA;import ProductListing from '~/components/blocks/ProductListing.vue'&#xA;import PRODUCT_LISTING_BLOCK_QUERY from '~/queries/productListingBlock.gql'&#xA;&#xA;import '@testing-library/jest-dom'&#xA;&#xA;const directives = {&#xA;  interpolation: () =&gt; {}&#xA;}&#xA;&#xA;const mocks = {&#xA;  $md: {&#xA;    render: value =&gt; value&#xA;  }&#xA;}&#xA;&#xA;describe('ProductListing', () =&gt; {&#xA;  test('fetch from apollo', () =&gt; {    &#xA;  const testVariables = {&#xA;      maxItems: 10,&#xA;      matchSkus: 'ms239,mk332,as484',&#xA;      matchTags: 'tag1,tag2,tag3',&#xA;      matchCategories: '111,222,333,444'&#xA;    }&#xA;    const wrapper = shallowMount(ProductListing, {&#xA;      propsData: testVariables,&#xA;      stubs: ['ProductTileList'],&#xA;      directives,&#xA;      mocks&#xA;    })&#xA;&#xA;    const client = this.$apollo.provider.clients.defaultClient // get an error on this line saying $apollo is undefined&#xA;    const products = await client&#xA;      .query({&#xA;        PRODUCT_LISTING_BLOCK_QUERY,&#xA;        testVariables,&#xA;        context: {&#xA;          clientName: 'powerchord'&#xA;        }&#xA;      })&#xA;      .then(r =&gt; r.data.allProducts)&#xA;&#xA;    // const promise = wrapper.vm.fetch() // this doesn't seem to work/call my function&#xA;  })&#xA;})&#xA;&#xA;</code></pre>&#xA;<pre><code>// ProductList.vue&#xA;&lt;template lang=&quot;pug&quot;&gt;&#xA;.mb-8(:id='elementId')&#xA;  ProductTileList(:products=&quot;products&quot;)&#xA;&lt;/template&gt;&#xA;&lt;script lang=&quot;ts&quot;&gt;&#xA;import Vue from 'vue'&#xA;import BaseBlockMixin from './BaseBlockMixin'&#xA;import query from '~/queries/productListingBlock.gql'&#xA;import { IObjectKeys } from '~/types/common-types'&#xA;&#xA;import mixins from '~/utils/typed-mixins'&#xA;&#xA;const Block = Vue.extend({&#xA;  props: {&#xA;    matchCategories: {&#xA;      type: String,&#xA;      default: ''&#xA;    },&#xA;    matchSkus: {&#xA;      type: String,&#xA;      default: ''&#xA;    },&#xA;    matchTags: {&#xA;      type: String,&#xA;      default: ''&#xA;    },&#xA;    maxItems: {&#xA;      type: Number,&#xA;      default: 20&#xA;    }&#xA;  },&#xA;  data () {&#xA;    return {&#xA;      products: []&#xA;    }&#xA;  },&#xA;  async fetch () {&#xA;    const client = this.$apollo.provider.clients.defaultClient&#xA;&#xA;    const variables: IObjectKeys = {&#xA;      limit: this.maxItems&#xA;    }&#xA;&#xA;    if (this.matchSkus.length) {&#xA;      variables.skus = this.matchSkus.split(',')&#xA;    }&#xA;&#xA;    if (this.matchTags.length) {&#xA;      variables.tags = this.matchTags.split(',')&#xA;    }&#xA;&#xA;    if (this.matchCategories.length) {&#xA;      variables.categories = this.matchCategories.split(',')&#xA;        .map(c =&gt; parseInt(c))&#xA;        .filter(c =&gt; !isNaN(c))&#xA;    }&#xA;&#xA;    this.products = await client&#xA;      .query({&#xA;        query,&#xA;        variables,&#xA;        context: {&#xA;          clientName: 'some-company'&#xA;        }&#xA;      })&#xA;      .then((r: any) =&gt; r.data.allProducts)&#xA;  }&#xA;})&#xA;export default mixins(Block).extend(BaseBlockMixin)&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;",1848526,,1848526,2021-08-17 18:25:59,2021-08-17 18:25:59,Testing VueJS fetch() using Apollo and Nuxt,<javascript><vue.js><unit-testing><nuxt.js><apollo>,0,0,0,2021-08-17 18:16:24
68823103,2,,68822535,0,,"<p>Keyword <code>type</code> is for output types, you cannot use them in mutation input, you have to use <code>input</code> keyword instead</p>&#xA;<pre><code>input UserNotificationsInput {&#xA;    pendingCashback: Boolean&#xA;    availableCashback: Boolean&#xA;    updatesAndOffers: Boolean&#xA;}&#xA;</code></pre>&#xA;<p>Reference docs: <a href=""https://graphql.org/learn/schema/#input-types"" rel=""nofollow noreferrer"">https://graphql.org/learn/schema/#input-types</a></p>&#xA;",8370648,,,,2021-08-17 19:37:20,"",,0,2,0,2021-08-17 19:37:20
68839829,1,69043743,,3,687,"<p>I have been trying to get the open graph images from my repositories through the GraphQL API that GitHub exposes, but I always get my avatar back. I have tried querying the repositories node, the search, and the user node to no avail.</p>&#xA;<p>For example, for the query:</p>&#xA;<pre><code>query {&#xA;  repository(name: &quot;rust-algorithms&quot;, owner: &quot;alexfertel&quot;) {&#xA;    openGraphImageUrl&#xA;    nameWithOwner&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I get:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>&quot;repository&quot;: {&#xA;  &quot;openGraphImageUrl&quot;: &quot;https://avatars.githubusercontent.com/u/22298999?s=400&amp;v=4&quot;,&#xA;  &quot;nameWithOwner&quot;: &quot;alexfertel/rust-algorithms&quot;&#xA;},&#xA;</code></pre>&#xA;<p>Which you can tell gives an avatar and not the open graph image generated by GitHub for the repository.</p>&#xA;<p>Is there a way to get this image that doesn't involve scraping GitHub?</p>&#xA;",9591973,,,,2022-03-13 05:47:26,How can I get the open graph image for a GitHub repository?,<github><graphql><github-api>,2,0,0,2021-08-18 22:04:48
68843019,1,68844757,,2,643,"<p>I have this query (in Hasura in case that matters):</p>&#xA;<pre><code>query MyQuery {&#xA;  records(distinct_on:[recordId],   where: { modelId: {_eq: &quot;2f1f70b8-cb7b-487c-9e4c-ca03624ce926&quot;}}) {&#xA;    recordId&#xA;    inboundEdges(where: {fromModelId: {_eq: &quot;f0e19461-6d38-4148-8041-54eba6451293&quot;}}) {&#xA;      fromRecord {&#xA;        property_path_values(where:{stringValue:{_eq:&quot;2021-08-26&quot;}}) {&#xA;          stringValue&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>I get this result back:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;records&quot;: [&#xA;      {&#xA;        &quot;recordId&quot;: &quot;2fbe37b1-78db-4b22-b713-2388cfb52597&quot;,&#xA;        &quot;inboundEdges&quot;: [&#xA;          {&#xA;            &quot;fromRecord&quot;: {&#xA;              &quot;property_path_values&quot;: [&#xA;                {&#xA;                  &quot;stringValue&quot;: &quot;2021-08-26&quot;&#xA;                }&#xA;              ]&#xA;            }&#xA;          },&#xA;          {&#xA;            &quot;fromRecord&quot;: {&#xA;              &quot;property_path_values&quot;: [&#xA;                {&#xA;                  &quot;stringValue&quot;: &quot;2021-08-26&quot;&#xA;                },&#xA;                {&#xA;                  &quot;stringValue&quot;: &quot;2021-08-26&quot;&#xA;                }&#xA;              ]&#xA;            }&#xA;          }&#xA;        ]&#xA;      },&#xA;      {&#xA;        &quot;recordId&quot;: &quot;7b34e85d-f4e1-4099-89d9-02483128a6cd&quot;,&#xA;        &quot;inboundEdges&quot;: [&#xA;          {&#xA;            &quot;fromRecord&quot;: {&#xA;              &quot;property_path_values&quot;: [&#xA;                {&#xA;                  &quot;stringValue&quot;: &quot;2021-08-26&quot;&#xA;                }&#xA;              ]&#xA;            }&#xA;          }&#xA;        ]&#xA;      },&#xA;      {&#xA;        &quot;recordId&quot;: &quot;840f52e2-0f2e-4591-810d-19f9e8840a49&quot;,&#xA;        &quot;inboundEdges&quot;: []&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I do not want the third result in the response, because it's <code>inboundEdges</code> array is empty.</p>&#xA;<p>What I am trying to say is: find me all <code>records</code> that have at least one <code>inboundEdge</code> with a <code>fromRecord</code> that has at least one <code>property_path_value</code> with a <code>stringValue</code> equal to <code>2021-08-26</code>.  I do not want to have to parse the response needing to exclude results with <code>inboundEdges === []</code></p>&#xA;",666079,,,,2021-08-19 08:52:53,GraphQL query that excludes results where an array relationship is empty,<graphql><hasura>,1,0,0,2021-08-19 06:29:47
68845168,1,,,0,1782,"<p>in the graphql request i need to use environment variables, but i didn't find correct way to do this. in my request i have to provide id to get information about certain county.&#xA;i've tried to address them as _.var_name and no result. I've tried to call them like $var_name but it says that this variable is not defined. So question is how to address environment variable in query, or how to define $ss variable from my example on the picture ?&#xA;Thank you!</p>&#xA;<p><a href=""https://i.stack.imgur.com/BEwkb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BEwkb.png"" alt=""enter image description here"" /></a></p>&#xA;",8131888,,,,2021-08-19 16:05:12,Passing variable in insomnia graphql request,<graphql><insomnia>,1,0,0,2021-08-19 09:19:50
68847119,1,,,1,360,"<p>I'm new to use Shopify graphql APIs. I create checkout using the below code. My Checkout working fine.</p>&#xA;<p>Now I want to add a product with a subscription plan.</p>&#xA;<p>I'm getting all plan data and id of the subscription plan added on product data.  On the Shopify backend, we use the <a href=""https://rechargepayments.com"" rel=""nofollow noreferrer"">rechargepayments.com</a> app that is installed in over admin. This is supported by JQuery and an over website subscription working fine.</p>&#xA;<pre><code>const query = `&#xA;  mutation {&#xA;    checkoutCreate(input: {&#xA;      lineItems: [{ variantId: &quot;${item.variantId}&quot;, quantity: 1, customAttributes: {key: &quot;Shipping Styles&quot;, value: &quot;Mixed&quot;} }]&#xA;    }) {&#xA;      checkout {&#xA;         id&#xA;         webUrl&#xA;         lineItems(first: 5) {&#xA;           edges {&#xA;             node {&#xA;               title&#xA;               quantity&#xA;             }&#xA;           }&#xA;         }&#xA;      }&#xA;    }&#xA;  }`&#xA;  axios({&#xA;    url: `https://mystore.myshopify.com/api/2021-07/graphql.json`,&#xA;    method: 'POST',&#xA;    body: query,&#xA;    onSuccess: (data) =&gt; {&#xA;      onSuccess({ value: 'Checkout item added' })&#xA;    },&#xA;    onFailure: (err) =&gt; {&#xA;      console.log('updateCheckout err ', err);&#xA;      onFailure({ value: 'fail' })&#xA;    },&#xA;  });&#xA;</code></pre>&#xA;<p>Please help me how can I add a selling plan or a subscription using graphql from the mobile application.</p>&#xA;",16705068,,1705540,2021-08-19 11:44:36,2021-08-19 11:44:36,How to add selling plan in graphql checkout shopify,<react-native><graphql><shopify><shopify-app>,0,1,0,2021-08-19 11:37:28
68851200,2,,68845168,1,,<p>Query</p>&#xA;<pre><code>query affiliations($last: Int) {&#xA;   affiliations(last: $last) {&#xA;    totalCount&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Query variables</p>&#xA;<pre><code>{&#xA;  &quot;last&quot;: &quot;{{ _.envvar_name }}&quot;&#xA;}&#xA;</code></pre>&#xA;,8131888,,,,2021-08-19 16:05:12,"",,0,0,0,2021-08-19 16:05:12
68870675,2,,68870595,0,,"<p>I found the solution in the GraphQL documentation of another Saas company.</p>&#xA;<p>The issue was how the payload was formatted</p>&#xA;<p>How I tried it:</p>&#xA;<pre><code>'payload': payload&#xA;</code></pre>&#xA;<p>How it should be:</p>&#xA;<pre><code>'payload': JSON.stringify({'query': payloaddata})&#xA;</code></pre>&#xA;<p>Final code that is working for me with the 2021-07 GraphQL API for Shopify:</p>&#xA;<pre><code>    var url = &quot;https://store-name.myshopify.com/admin/api/2021-07/graphql.json&quot;;&#xA;    var payloaddata = 'query {orders(first: 20) { edges { node { id } } } }';&#xA;&#xA;    var password = &quot;api_password&quot;;&#xA;&#xA;    var response = UrlFetchApp.fetch(url, {&#xA;        'method': &quot;POST&quot;,&#xA;        'muteHttpExceptions': true,&#xA;        'headers': { &quot;X-Shopify-Access-Token&quot;: password , &quot;Content-Type&quot;: &quot;application/json&quot;},&#xA;        'payload': JSON.stringify({'query': payloaddata})&#xA;    });&#xA;</code></pre>&#xA;",6431322,,,,2021-08-21 06:28:17,"",,0,0,0,2021-08-21 06:28:17
68897838,2,,65829246,0,,"<p>For anyone that is still struggling to find the &quot;references&quot; field in graphql, remember that you HAVE TO first create an entry in contentful by adding at least one image. Otherwise, the references field will not show up in graphql, hence you can not query it.</p>&#xA;",5967161,,,,2021-08-23 19:06:22,"",,0,0,0,2021-08-23 19:06:22
68900094,1,68911377,,0,640,"<p>I'm testing graphql query on Shopify GraphiQL Explorer for filtering products on Storefront API.</p>&#xA;<p>My query is like this:</p>&#xA;<pre><code>query ProductType {&#xA;  collectionByHandle(handle: &quot;pants&quot;) {&#xA;    handle&#xA;    products(first: 10, filters: {&#xA;      productType: &quot;pants&quot;&#xA;    }) {&#xA;      edges {&#xA;        node {&#xA;          handle&#xA;          productType&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And got the result like this:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;collectionByHandle&quot;: {&#xA;      &quot;handle&quot;: &quot;pants&quot;,&#xA;      &quot;products&quot;: {&#xA;        &quot;edges&quot;: [&#xA;          {&#xA;            &quot;node&quot;: {&#xA;              &quot;handle&quot;: &quot;my-test-product-pants&quot;,&#xA;              &quot;productType&quot;: &quot;pants&quot;&#xA;            }&#xA;          },&#xA;          {&#xA;            &quot;node&quot;: {&#xA;              &quot;handle&quot;: &quot;pleated-straight-pants-mens-fashion-elastic-waist-casual-pants-men-streetwear-loose-ice-silk-trousers-mens-wide-leg-pants-s-2xl&quot;,&#xA;              &quot;productType&quot;: &quot;&quot;&#xA;            }&#xA;          },&#xA;          ...&#xA;</code></pre>&#xA;<p>Basically, the result has all the products that I have for that collection. Can anybody help me with this? This is literally the code I got from shopify <a href=""https://shopify.dev/custom-storefronts/products/filter-products"" rel=""nofollow noreferrer"">website</a></p>&#xA;",10388970,,,,2021-08-24 17:04:06,Why is my graphql query return all product?,<graphql><shopify><graphiql><shopify-storefront-api>,1,2,0,2021-08-23 23:26:00
68911377,2,,68900094,1,,"<p>As we can see in the tutorial <code>filters</code> is an array</p>&#xA;<pre><code>{&#xA;  &quot;product_filters&quot;: [&#xA;    {&#xA;      &quot;productType&quot;: &quot;shoes&quot;&#xA;    },&#xA;    {&#xA;      &quot;productVendor&quot;: &quot;bestshop&quot;&#xA;    },&#xA;    {&#xA;      &quot;variantOption&quot;: {&#xA;        &quot;name&quot;: &quot;color&quot;,&#xA;        &quot;value&quot;: &quot;blue&quot;&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>So, try this instead</p>&#xA;<pre class=""lang-js prettyprint-override""><code>&#xA;query ProductType {&#xA;  collectionByHandle(handle: &quot;pants&quot;) {&#xA;    handle&#xA;    products(first:10, filters: [{ productType: &quot;pants&quot; ]}) {&#xA;            ...&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",8683115,,,,2021-08-24 17:04:06,"",,0,0,0,2021-08-24 17:04:06
68914186,2,,68806093,0,,"<p>I would just create another mutation for it.</p>&#xA;<p>It is best practice to have very specific mutations. Checkout the <a href=""https://docs.github.com/en/graphql/reference/mutations"" rel=""nofollow noreferrer"">GitHub GraphQL API</a> as a reference.</p>&#xA;",7188852,,,,2021-08-24 21:17:46,"",,0,0,0,2021-08-24 21:17:46
68980949,1,,,0,219,"<p>i have schema:</p>&#xA;<pre><code>input CreateProduct {&#xA;    id_product: Int&#xA;    content: CreateContentHasMany&#xA;    manufacturer: CreateManufacturerHasOne&#xA;    codes: ProductCodesInput&#xA;}&#xA;type Mutation {&#xA;    createProduct(product: CreateProduct! @spread): Product @create&#xA;    createProducts(products: [CreateProduct!]): [Product]! @create&#xA;}&#xA;</code></pre>&#xA;<p>my query:</p>&#xA;<pre><code>mutation {&#xA;    createProducts(&#xA;        products: [&#xA;            {&#xA;                content: {&#xA;                    create: [&#xA;                        {name: &quot;some name&quot;}&#xA;                    ]&#xA;                }&#xA;                codes: {&#xA;                    reference: &quot;AAA666&quot;&#xA;                }&#xA;            }&#xA;        ]&#xA;    ){&#xA;        id_product&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Create single product works,&#xA;but when i try to create list of products i have error:</p>&#xA;<p><code>Array to string conversion</code>.</p>&#xA;<p>What am i doing wrong?</p>&#xA;",12546152,,12546152,2021-08-30 09:15:42,2021-08-30 09:17:22,How to mutate list of objects in lighthouse GraphQL,<graphql><laravel-lighthouse>,1,0,0,2021-08-30 08:22:41
68981638,2,,68980949,0,,"<p>The <code>@create</code> directive is only designed to create a single entry.<br />&#xA;You can create a custom mutator to handle batch creation.</p>&#xA;<p>Create the custom mutator with the artisan command:&#xA;<code>php artisan lighthouse:mutation createProducts</code></p>&#xA;<p>Due to the mutator having the same name as the mutator class, it will automatically be used.<br />&#xA;If you create a it with a different name you may use the <code>@field</code>directive to resolve it.</p>&#xA;<pre><code>input CreateProduct {&#xA;    id_product: Int&#xA;    content: CreateContentHasMany&#xA;    manufacturer: CreateManufacturerHasOne&#xA;    codes: ProductCodesInput&#xA;}&#xA;type Mutation {&#xA;    createProduct(product: CreateProduct! @spread): Product @create&#xA;    createProducts(products: [CreateProduct!]): [Product]!&#xA;}&#xA;</code></pre>&#xA;<p>This code is not tested, but just for inspiration! :)</p>&#xA;<pre class=""lang-php prettyprint-override""><code>&lt;?php&#xA;&#xA;namespace App\GraphQL\Mutations;&#xA;&#xA;class CreateProducts&#xA;{&#xA;    /**&#xA;     * @param  null  $_&#xA;     * @param  array&lt;string, mixed&gt;  $args&#xA;     */&#xA;    public function __invoke($_, array $args)&#xA;    {&#xA;        // unsafe batch insert. Take care of relations!&#xA;        return Product::insert($args['products']);&#xA;&#xA;        // loop and create&#xA;        $products = [];&#xA;        foreach ($args['products'] as $productData) {&#xA;            // Create product. Take care of relations!&#xA;            Product::create($productData);&#xA;            // to&#xA;            $product = new Product();&#xA;            $product-&gt;fill($productData);&#xA;            // do whatever before saving. E.g. solve and set relations&#xA;            $product-&gt;save();&#xA;            $products[] = $product;&#xA;        }&#xA;        return $products;&#xA;&#xA;    }&#xA;}&#xA;&#xA;</code></pre>&#xA;",3599458,,,,2021-08-30 09:17:22,"",,0,0,0,2021-08-30 09:17:22
69005212,1,,,1,326,"<p>Once a pull request is approved by any member of a requested team, it disappears from the GitHub dashboard, even if it lingers in an open state. How can we query using the Github v4 GraphQL the open pull requests created by any members of a particular team?</p>&#xA;<pre><code>{&#xA;  search(query: &quot;type:pr state:open review-requested:StevenACoffman&quot;, type: ISSUE, first: 100) {&#xA;    issueCount&#xA;    pageInfo {&#xA;      endCursor&#xA;      startCursor&#xA;    }&#xA;    edges {&#xA;      node {&#xA;        ... on PullRequest {&#xA;          url&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The query for a team's requested reviews is: <code>team-review-requested:ORG/TEAMNAME</code> where <code>ORG</code> should be replaced with the organization, and <code>TEAMNAME</code> replaced with the team name.&#xA;Neither of these queries show <em>open</em> pull requests that were created by a teammate if they were approved by any other teammates.</p>&#xA;<p>The query for a team by name is:</p>&#xA;<pre><code>{&#xA;  organization(login: &quot;khan&quot;) {&#xA;    teams(first: 100, query: &quot;districts&quot;) {&#xA;      totalCount&#xA;      edges {&#xA;        node {&#xA;          members {&#xA;            edges {&#xA;              node {&#xA;                name&#xA;                login&#xA;              }&#xA;            }&#xA;          }&#xA;          name&#xA;          description&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2904179,,2904179,2021-09-01 11:09:25,2022-07-21 08:52:14,Query open pull requests in an organization created by members of a team?,<graphql><github-graphql>,1,0,0,2021-08-31 20:56:26
69014347,2,,69012587,0,,"<p>I think I was close, I just used the computed property to return my products like this:</p>&#xA;<pre><code>const products = computed(() =&gt; {&#xA;  if (!response.value) return [];&#xA;  useTrackProductImpressions(response.value.items);&#xA;  return response.value.items;&#xA;});&#xA;&#xA;const total = computed(() =&gt; {&#xA;  if (!response.value) return 0;&#xA;  return response.value.total;&#xA;});&#xA;&#xA;const hasMoreResults = computed(() =&gt; {&#xA;  if (!response.value) return false;&#xA;  return response.value.hasMoreResults;&#xA;});&#xA;&#xA;return {&#xA;  products,&#xA;  loading,&#xA;  error,&#xA;  total,&#xA;  hasMoreResults,&#xA;  skip,&#xA;  more,&#xA;  search,&#xA;};&#xA;</code></pre>&#xA;",1303170,,,,2021-09-01 13:05:37,"",,0,0,0,2021-09-01 13:05:37
69025853,1,,,1,271,"<p>I got this error to fetch orders with '@shopify/koa-shopify-auth'from a PUBLIC app.</p>&#xA;<p>Uncaught (in promise) Error: GraphQL error: Access denied for orders field.</p>&#xA;<p>The query is like this.</p>&#xA;<pre><code>orders(first: 10, after: $cursor, query: $query, reverse: true) {&#xA;  edges {&#xA;    cursor&#xA;    node {&#xA;      currentTotalPriceSet {&#xA;        presentmentMoney {&#xA;          amount&#xA;          currencyCode&#xA;        }&#xA;      }&#xA;      tags&#xA;    }&#xA;  }&#xA;  pageInfo {&#xA;    hasNextPage&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>with $query like this</p>&#xA;<pre><code>let query = campaigns&#xA;   .map((campaign) =&gt; `tag:'FreeGiftCampaignId: ${campaign.id}'`)&#xA;   .join(&quot; OR &quot;);&#xA;</code></pre>&#xA;<p>I added reverse: true, and the scopes are correctly set</p>&#xA;<pre><code>SCPOPES: read_orders,read_all_orders,write_orders,read_products,read_discounts,write_discounts,write_script_tags&#xA;</code></pre>&#xA;<p>Also the app has been approved for read_all_orders</p>&#xA;<p>The strange thing about this issue is that it's not happening to every merchant only some of them have this issue</p>&#xA;<p>if i query the scopes for a failing merchant (just before the failing call)&#xA;i got this which seems totaly fine</p>&#xA;<pre><code>[&#xA;  {&#xA;    &quot;handle&quot;: &quot;read_all_orders&quot;&#xA;  },&#xA;  {&#xA;    &quot;handle&quot;: &quot;write_orders&quot;,&#xA;  },&#xA;  {&#xA;    &quot;handle&quot;: &quot;read_products&quot;,&#xA;  },&#xA;  {&#xA;    &quot;handle&quot;: &quot;write_discounts&quot;,&#xA;  },&#xA;  {&#xA;    &quot;handle&quot;: &quot;write_script_tags&quot;,&#xA;  },&#xA;  {&#xA;    &quot;handle&quot;: &quot;read_orders&quot;,&#xA;  },&#xA;  {&#xA;    &quot;handle&quot;: &quot;read_discounts&quot;,&#xA;  },&#xA;  {&#xA;    &quot;handle&quot;: &quot;read_script_tags&quot;,&#xA;  }&#xA;]&#xA;</code></pre>&#xA;<p>also the 2 preceding calls which get a product and a collection fails with thoses errors</p>&#xA;<pre><code>message: &quot;Product access denied&quot;&#xA;message: &quot;Collection access denied&quot;&#xA;</code></pre>&#xA;<p>So it definitely seems like a scope issue.</p>&#xA;<p>but what i am not getting is:</p>&#xA;<ol>&#xA;<li>it is not happening to everyone only a few merchant</li>&#xA;<li>when checking the scopes for the failing merchant they seems fine</li>&#xA;</ol>&#xA;",10004737,,,,2021-09-02 07:26:28,SHOPIFY Uncaught (in promise) Error: GraphQL error: Access denied for orders field,<graphql><shopify><scopes><shopify-api>,0,0,0,2021-09-02 07:26:28
69030696,2,,69028753,0,,<p>Accessing a specific element of the edges array works enough for what I'm doing here:</p>&#xA;<pre><code>  &lt;img&#xA;    className={&quot;contentFeatureImg1&quot;}&#xA;    alt={``}&#xA;    key={``}&#xA;    src={data.allContentfulFlexStyleBody.edges[0].node.image.file.url}&#xA;  /&gt;&#xA;</code></pre>&#xA;,9023357,,,,2021-09-02 12:53:57,"",,0,0,0,2021-09-02 12:53:57
69037609,2,,50386053,0,,"<p>If you create a query that returns a Union, each of the union members will likely have a different structure. In a GQL query, you define what properties of a type you want to get returned.</p>&#xA;<p>If you have a Union return type, you therefor have to specify the wanted properties per union type:</p>&#xA;<pre><code>{ &#xA; content(id: &quot;113804&quot;) {&#xA;  &#xA;  ... on Setting{&#xA;      id&#xA;  }&#xA;&#xA;  ... on Page{&#xA;      title&#xA;      slug&#xA;  }&#xA;&#xA; }&#xA;}&#xA;</code></pre>&#xA;<p>Depending on the type of content-element <code>113804</code>, you will get one of the four types, but you don't know beforehand what it will be. So, you have to give a property selection for each of the union types.</p>&#xA;",1686330,,,,2021-09-02 22:21:18,"",,0,0,0,2021-09-02 22:21:18
69069915,1,,,3,157,"<p>I have the following query that can be run against the github graphql API</p>&#xA;<pre><code>query userRepositories($cursor: String, $q: String!, $githubId: String!) {&#xA;  search(query: $q, type: REPOSITORY, first: 100, after: $cursor) {&#xA;    repositoryCount&#xA;    pageInfo {&#xA;      endCursor&#xA;      startCursor&#xA;    }&#xA;    nodes {&#xA;      ... on Repository {&#xA;        id&#xA;        name&#xA;        description&#xA;        isArchived&#xA;        isPrivate&#xA;        nameWithOwner&#xA;        url&#xA;        defaultBranchRef {&#xA;          target {&#xA;            ... on Commit {&#xA;              history(first: 10, author: {id: $githubId}) {&#xA;                totalCount&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>It returns results like this:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;search&quot;: {&#xA;      &quot;repositoryCount&quot;: 103,&#xA;      &quot;pageInfo&quot;: {&#xA;        &quot;endCursor&quot;: &quot;Y3Vyc29yOjEwMA==&quot;,&#xA;        &quot;startCursor&quot;: &quot;Y3Vyc29yOjE=&quot;&#xA;      },&#xA;      &quot;nodes&quot;: [&#xA;        {&#xA;          &quot;id&quot;: &quot;MDEwOlJlcG9zaXRvcnk2MTg1OTczOA==&quot;,&#xA;          &quot;name&quot;: &quot;microstates&quot;,&#xA;          &quot;nameWithOwner&quot;: &quot;thefrontside/microstates&quot;,&#xA;          &quot;url&quot;: &quot;https://github.com/thefrontside/microstates&quot;,&#xA;          &quot;defaultBranchRef&quot;: {&#xA;            &quot;target&quot;: {&#xA;              &quot;history&quot;: {&#xA;                &quot;totalCount&quot;: 0&#xA;              }&#xA;            }&#xA;          },        &#xA;         {&#xA;          &quot;id&quot;: &quot;MDEwOlJlcG9zaXRvcnkxNTU5MTUyODc=&quot;,&#xA;          &quot;name&quot;: &quot;effection&quot;,&#xA;          &quot;nameWithOwner&quot;: &quot;thefrontside/effection&quot;,&#xA;          &quot;url&quot;: &quot;https://github.com/thefrontside/effection&quot;,&#xA;          &quot;defaultBranchRef&quot;: {&#xA;            &quot;target&quot;: {&#xA;              &quot;history&quot;: {&#xA;                &quot;totalCount&quot;: 16&#xA;              }&#xA;            }&#xA;          }&#xA;        },&#xA;</code></pre>&#xA;<p>I am only interested in the nodes array that has a <code>defaultBranchRef.target.history.totalCount</code> that is greater than 0.</p>&#xA;<p>So I am not interested in element 0 of the <code>nodes</code> array but I am of element 1.</p>&#xA;<p>Can I filter this in graphql or do I have to do that in code outside of the query?</p>&#xA;",11755,,,,2021-09-11 21:49:52,filtering out zero total from nested result in graphql query,<graphql>,1,0,0,2021-09-06 06:20:37
69092547,1,,,0,307,"<p>I'm searching for an answer to this problem, and it seems others have as well but no clear answer I could find anywhere (<a href=""https://stackoverflow.com/questions/67278911/appsync-query-union-return-type-throws-400"">Appsync query union return type throws 400</a>)</p>&#xA;<p>I have a GraphlQL type that has a property than can return either a String or an array of Strings, like so.</p>&#xA;<pre><code>type Button {&#xA;   color: String | [String]&#xA;}&#xA;</code></pre>&#xA;<p>Is there a way to accomplish this using Appsync?  I've tried using a Union, but get a 400 error instead</p>&#xA;<pre><code>type ColorSingle {&#xA;   color: String&#xA;}&#xA;&#xA;type ColorMulti {&#xA;   color: [String]&#xA;}&#xA;&#xA;union Colors = ColorSingle | ColorMulti&#xA;&#xA;type Button {&#xA;   color: Colors&#xA;}&#xA;</code></pre>&#xA;<p>and the query:</p>&#xA;<pre><code>getSource(sourceId: &quot;company&quot;) {&#xA;   themeConfig {&#xA;     component {&#xA;        ...on ColorSingle {&#xA;           __typename&#xA;           color&#xA;       }&#xA;       ...on ColorMulti {&#xA;           __typename&#xA;           color&#xA;       }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",8726814,,,,2021-11-22 18:15:47,Returning String or [String] in Appsync schema,<graphql><aws-appsync><aws-serverless>,1,0,0,2021-09-07 17:44:02
69093567,1,,,1,429,"<p>I want to check whether the merchant has enabled Shopify Payments or not. For this purpose, i feel that the following GraphQL query would work:</p>&#xA;<pre><code>query {&#xA;   shopifyPaymentsAccount{&#xA;      activated&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>But this query is giving the following error:</p>&#xA;<p><code>Error: GraphQL error: Access denied for shopifyPaymentsAccount field. Required access: User must have given access.</code></p>&#xA;<p>Note: it has been copied exactly as is. There is nothing after <code>Required Access: </code>.</p>&#xA;<p>For which scope do I have to request the permission for this to work? Or what would be a better way to check if Shopify Payments is activated?</p>&#xA;",4964489,,,,2021-09-07 19:21:26,Access Denied when trying to check is Shopify Payments is activated,<graphql><shopify><shopify-app><shopify-api>,0,2,0,2021-09-07 19:21:26
69093873,2,,69093195,0,,<p>You are getting this error because the <code>URL</code> passed in the initialization of <code>graphql client</code> is wrong or has special characters included. Try using</p>&#xA;<pre><code>Uri.Parse('YOUR_URL_HERE)&#xA;</code></pre>&#xA;<p>in the GraphQLClient()</p>&#xA;,7403729,,,,2021-09-07 19:52:06,"",,0,0,0,2021-09-07 19:52:06
69099776,2,,69098635,2,,"<p>I think you content should include in your Next.js app, then on content's parent element, you can bind a <code>onClick</code> handler to capture click on links and use <code>router.push</code> to simulate <code>&lt;Link&gt;</code> behaviours like:</p>&#xA;<pre><code>&lt;div onClick={e =&gt; {&#xA;  e.preventDefault();&#xA;  if (e.target.href) router.push(e.target.href);&#xA;}}&gt;&#xA;  internal content with links&#xA;&lt;/div&gt;&#xA;</code></pre>&#xA;",581094,,,,2021-09-08 08:42:19,"",,0,0,0,2021-09-08 08:42:19
69105179,1,,,1,346,"<p><a href=""https://i.stack.imgur.com/h3jF6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/h3jF6.png"" alt=""I am trying to add products to my cart using this API. But in response, it says invalid ID"" /></a></p>&#xA;<p>When I hit this Shopify GraphQL &quot;cartLinesAdd&quot; API to add product to my shopping cart, in response it says invalid ID. So, can anyone please help me to find out what's wrong here?</p>&#xA;",11297697,,,,2021-09-08 14:43:31,"Shopify GraphQL ""cartLinesAdd"" API",<graphql><postman><shopify><storefront>,0,0,0,2021-09-08 14:43:31
69111672,1,,,0,302,"<p>I am using <a href=""https://www.graphql-code-generator.com/"" rel=""nofollow noreferrer"">graphql-codegen</a> to generate Typescript typings for my React project. With graphql, you can set up queries to return only the properties that you need. This is useful but also results in pretty complex looking object types for my Typescript definition file. I have a <code>Query</code> that returns several nested items. I was wondering if it would be possible to extract the typings of just the <code>tags</code> property?</p>&#xA;<p>How would I use Typescript to extract the following type:</p>&#xA;<pre><code>tags?: Maybe&lt;Array&lt;Maybe&lt;(&#xA;        { __typename?: 'Tag' }&#xA;        &amp; Pick&lt;Tag, 'id' | 'name'&gt;&#xA;      )&gt;&gt;&gt;&#xA;</code></pre>&#xA;<p>From this base object type (I've indicated the part of the type I'd like to extract):</p>&#xA;<pre><code>type ManageTeamPageQuery = (&#xA;    { __typename?: 'Query' }&#xA;    &amp; { authedTeam?: Maybe&lt;(&#xA;      { __typename?: 'Team' }&#xA;      &amp; Pick&lt;Team, 'id' | 'name' | 'imageEnding' | 'facebookPixelId' | 'subscriptionId'&gt;&#xA;      &amp; { domains?: Maybe&lt;Array&lt;Maybe&lt;(&#xA;        { __typename?: 'Domain' }&#xA;        &amp; Pick&lt;Domain, 'id' | 'name'&gt;&#xA;      )&gt;&gt;&gt;, tags?: Maybe&lt;Array&lt;Maybe&lt;( &lt;--------- HERE&#xA;        { __typename?: 'Tag' } &lt;----------------- HERE&#xA;        &amp; Pick&lt;Tag, 'id' | 'name'&gt; &lt;------------- HERE&#xA;      )&gt;&gt;&gt; }&#xA;    )&gt; }&#xA;);&#xA;</code></pre>&#xA;<p>What's tricky for me is that the nested properties can be null or undefined, so I am not sure how to deeply access them?</p>&#xA;<p>Please note that graphql-codegen defines <code>Maybe</code> as:</p>&#xA;<pre><code>export type Maybe&lt;T&gt; = T | null;&#xA;</code></pre>&#xA;<p>For reference, the type generated from <code>ManageTeamPageQuery</code> results from a graphql that looks like:</p>&#xA;<pre><code>query ManageTeamPage($id: Int!) {&#xA;    authedTeam(id: $id) {&#xA;        id&#xA;        name&#xA;        imageEnding&#xA;        facebookPixelId&#xA;        subscriptionId&#xA;        domains {&#xA;            id&#xA;            name&#xA;        }&#xA;        tags {&#xA;            id&#xA;            name&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",6480913,,,,2021-09-09 02:51:14,How to extract Typescript type from nullable nested object?,<typescript><graphql><graphql-codegen>,0,2,0,2021-09-09 02:51:14
69114628,2,,68950096,0,,"<p>Thanks for your help, I found a solution. Using apollo client and variables when the template is created:</p>&#xA;<pre><code>let orderValue = 'order {productID: ASC}'; // built dynamically&#xA;let whereValue = 'description: {eq: &quot;description1&quot;}'; // built dynamically&#xA;&#xA;document = gql`&#xA;query {&#xA;    getProductInfo(&#xA;        ${orderValue}&#xA;        ${whereValue}&#xA;    ) {&#xA;      productID&#xA;      description&#xA;      size&#xA;      model&#xA;      categoryNumber&#xA;    }&#xA;    `;&#xA;</code></pre>&#xA;",6493901,,13302,2021-09-16 18:18:03,2021-09-16 18:18:03,"",,0,1,0,2021-09-09 08:17:23
69116724,1,,,0,68,"<p>I have a piece of code to add endpoints/fields to graphQL and I can successfully add to the root or items that are in root. I am however unable to add to a deeper nested item.</p>&#xA;<pre><code>register_graphql_field('cart', 'cartProductName', [&#xA;'type' =&gt; 'String',&#xA;'description' =&gt; &quot;Get product name for cart&quot;,&#xA;'resolve' =&gt; function ($data) {&#xA;    global $wpdb;&#xA;    $return = &quot;Banana!&quot;;&#xA;    return $return;&#xA;}&#xA;]);&#xA;</code></pre>&#xA;<p>This will add &quot;cartProductName&quot; to Root -&gt; cart.. I need to add it to Root -&gt; cart -&gt; content -&gt; nodes -&gt; product -&gt; node</p>&#xA;<p><a href=""https://i.stack.imgur.com/Jyoqn.png"" rel=""nofollow noreferrer"">Screenshot of structure</a></p>&#xA;",16868873,,,,2021-09-09 10:39:04,How to add a graphQL field to a sublevel item in Wordpress PHP,<php><wordpress><graphql>,0,3,0,2021-09-09 10:39:04
69138071,1,,,2,345,"<p>I have been struggling with this for a while, any help would be appreciated. So I am trying to query inventory items at a shopify store at a certain location. I am using the shopify_api gem. If I take out the variables and just hardcode a locationId at inventoryLevel, the code works just fine so I don't know where I am going wrong in the syntax. Below are some code snippets</p>&#xA;<pre><code>def query_using_location_ids&#xA;      client.parse &lt;&lt;-'GRAPHQL'&#xA;      {&#xA;        query($locationId: ID!){&#xA;          inventoryItems(first:10){&#xA;            pageInfo{&#xA;              hasNextPage&#xA;              hasPreviousPage&#xA;            }&#xA;            edges{&#xA;              node{&#xA;                id&#xA;                legacyResourceId&#xA;                inventoryLevel(locationId: $locationId){&#xA;                  id&#xA;                  available&#xA;                  incoming&#xA;                  location{ id }&#xA;                  item{&#xA;                    id&#xA;                    legacyResourceId&#xA;                    sku&#xA;                    variant{&#xA;                      id&#xA;                      legacyResourceId&#xA;                      price&#xA;                      product{&#xA;                        description&#xA;                      }&#xA;                    }&#xA;                    unitCost{&#xA;                      amount&#xA;                      currencyCode&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;      GRAPHQL&#xA;end&#xA;</code></pre>&#xA;<pre><code> def client&#xA;   @client ||= ShopifyAPI::GraphQL.client&#xA; end&#xA;</code></pre>&#xA;<pre><code> def fetch_by_location(id)&#xA;   client.query(query_using_location_ids, variables: {locationId: ID(id)}).original_hash[&quot;data&quot;][&quot;inventoryItems&quot;]&#xA; end&#xA;</code></pre>&#xA;<p><strong>Error Produced:</strong></p>&#xA;<p>GraphQL::ParseError: Parse error on &quot;$&quot; (VAR_SIGN) at [2, 15]&#xA;from parser.y:527:in `on_error'</p>&#xA;",8063292,,,,2021-09-10 21:14:54,How to query with variables Shopify API using shopify_api gem,<graphql><shopify-api>,0,0,0,2021-09-10 21:14:54
69159604,2,,69073902,1,,"<p>Allocating more memory to wordpress fixed the issue.</p>&#xA;<p>Add this line to wp.config file.</p>&#xA;<pre><code>define( ‘WP_MEMORY_LIMIT’, ‘512M’ );&#xA;</code></pre>&#xA;",13805317,,,,2021-09-13 08:34:04,"",,0,0,0,2021-09-13 08:34:04
69166716,1,,,1,54,"<p>Good afternoon everybody,</p>&#xA;<p>I am kind of a rookie using magento and I need help with this:</p>&#xA;<p>This are the filters from Magento front View, this filters can change position changing the position attribute in the magento/admin page.</p>&#xA;<p><a href=""https://i.stack.imgur.com/51d8F.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;<p>this are the filters in the Venia-storefront:</p>&#xA;<p><a href=""https://i.stack.imgur.com/1E1Yt.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;<p>As you can see there are not in the same position. So my question is, is there any way to connect what its happening to the position in the Magento front to affect the Venia-Storefront equally?</p>&#xA;<p>Can anyone help me with this?</p>&#xA;<p>Updating a little bit:&#xA;What I tried was to extend my graphql schema to have that position value &amp; I did it, here is a photo of the schema:</p>&#xA;<p><a href=""https://i.stack.imgur.com/mrxxR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mrxxR.png"" alt=""graphqlSchema"" /></a></p>&#xA;<p>When I use the query in the graphql playground I got the attribute correctly:</p>&#xA;<p><a href=""https://i.stack.imgur.com/mhBR2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mhBR2.png"" alt=""queryPlayground"" /></a></p>&#xA;<p>I got even the correct attribute in the json in venia-frontpage:</p>&#xA;<p><a href=""https://i.stack.imgur.com/qLjOR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qLjOR.png"" alt=""webJson"" /></a></p>&#xA;<p>But as you can see the value is null.</p>&#xA;<p>If you go to the web admin page in magento, you can see that they have values in the position attribute:</p>&#xA;<p><a href=""https://i.stack.imgur.com/YiesP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YiesP.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Is there any way to grab that data in the admin and take it to the position value in the schema?</p>&#xA;<p>I have to change the resolver? what can I do to accomplish this?</p>&#xA;<p>here are the photos of the resolver:</p>&#xA;<p><a href=""https://i.stack.imgur.com/N2686.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/N2686.png"" alt=""resolverPart1"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/5vcbe.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5vcbe.png"" alt=""resolverPart2"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/41Ugn.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/41Ugn.png"" alt=""resolverPart3"" /></a></p>&#xA;",16901630,,16901630,2021-09-29 14:31:18,2021-09-29 14:31:18,How to update the filters from the Venia store-front like the Magento front view?,<php><reactjs><graphql><magento2><venia>,0,0,0,2021-09-13 17:16:40
69168758,2,,67382310,2,,"<p>This is how I did if I have the APP subscription ID, I got the GraphQL query from <a href=""https://shopify.dev/apps/billing/reporting"" rel=""nofollow noreferrer"">Shopify's Billing API documentation</a>:</p>&#xA;<pre><code>query {&#xA;  node(id: &quot;gid://shopify/AppSubscription/4019585080&quot;) {&#xA;    ...on AppSubscription {&#xA;      billingInterval&#xA;      createdAt&#xA;      currentPeriodEnd&#xA;      id&#xA;      name&#xA;      status&#xA;      test&#xA;      lineItems {&#xA;        plan {&#xA;          pricingDetails {&#xA;            ...on AppRecurringPricing {&#xA;              interval&#xA;              price {&#xA;                amount&#xA;                currencyCode&#xA;              }&#xA;&#xA;            }&#xA;            ...on AppUsagePricing {&#xA;              terms&#xA;              cappedAmount {&#xA;                amount&#xA;                currencyCode&#xA;&#xA;              }&#xA;              balanceUsed {&#xA;                amount&#xA;                currencyCode&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Notice that status is defined at root, so you'll get it inside the node.</p>&#xA;",343452,,,,2021-09-13 20:28:18,"",,0,0,0,2021-09-13 20:28:18
69173698,2,,61897542,0,,"<p>Was long time ago, but what helped is as <code>@xadm</code> mentioned documantation link in the comments.</p>&#xA;<p><a href=""https://docs.graphene-python.org/projects/django/en/latest/filtering/"" rel=""nofollow noreferrer"">docs.graphene-python.org/projects/django/en/latest/filtering</a></p>&#xA;",8263882,,,,2021-09-14 07:34:59,"",,0,0,0,2021-09-14 07:34:59
69174661,1,,,0,271,"<p>I have 25000 bulk data to insert in datastore. Currently I can do this through iterating. But it takes more time, sometimes browser is crashing.</p>&#xA;<pre><code> const savePosts = async (posts) =&gt; {&#xA;    for (let post of posts) {&#xA;      try {&#xA;        await DataStore.save(new Post(post));&#xA;      } catch (err) {&#xA;        console.error(err);&#xA;      }&#xA;    }&#xA;  };&#xA;</code></pre>&#xA;<p>I want to do bulk insert in a single call. How can I do this. Can you suggest a proper way</p>&#xA;",1752012,,,,2022-04-08 15:33:42,Bulk Insert in Amplify Datastore,<reactjs><graphql><aws-amplify><datastore><amplify>,1,0,0,2021-09-14 08:45:18
69176398,2,,51285621,4,,"<pre><code>src&#xA;  schema&#xA;     Product&#xA;        model.js&#xA;        query.js&#xA;        mutation.js&#xA;        type.js&#xA;        resolvers.js&#xA;        index.js&#xA;     Order&#xA;        query.js&#xA;        mutation.js&#xA;        model.js&#xA;        types.js&#xA;        resolvers.js&#xA;        index.js&#xA;     index.js&#xA;</code></pre>&#xA;<p><em><strong>let's explore what's inside the Product directory</strong></em></p>&#xA;<p><strong>query.js</strong>: all the query resolvers related to the Product</p>&#xA;<p><strong>mutations.js</strong>: all the mutation resolvers related to the Product</p>&#xA;<p><strong>types.js</strong>: all the Product related GraphQL types also query and mutation included (export a string containing GraphQL types).</p>&#xA;<p><strong>mode.js</strong>: the Product database schema.</p>&#xA;<p><strong>resolvers.js</strong>: all the resolvers related to the Product type.&#xA;e.g:</p>&#xA;<pre><code>let Product = {&#xA;    comments: (user: id) =&gt; {&#xA;        // whatever&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p><strong>Product/index.js</strong>: combine all the files and export them as <em>Query</em>, <em>Mutation</em>, <em>types</em>, <em>Product</em> (Product type fields resolvers).</p>&#xA;<p><em><strong>Note:</strong></em> you can also convert query.js or any one of them to a folder and then write each query and mutation resolver in its own file.</p>&#xA;<p><strong>schema/index.js</strong>: combine all the exported <em>Query</em>, <em>Mutation</em>, <em>type</em> inside index.js and export them as <em>resolvers</em> and <em>typeDefs</em></p>&#xA;<p>e.g</p>&#xA;<pre><code>export const resolvers = {&#xA;    Query: {&#xA;      ...ProductQueries,&#xA;      ...OrderQueries,&#xA;    },&#xA;    Mutation: {&#xA;      ...ProductQueries,&#xA;      ...OrderMutations,&#xA;    },&#xA;    // schema/Proudct/resolvers.js&#xA;    Product,&#xA;    Order&#xA;}&#xA;</code></pre>&#xA;<p>For a complete description follow this link&#xA;<a href=""https://theehsansarshar.hashnode.dev/scalable-graphql-architecture"" rel=""nofollow noreferrer"">https://theehsansarshar.hashnode.dev/scalable-graphql-architecture</a></p>&#xA;",10539792,,10539792,2021-11-22 10:48:05,2021-11-22 10:48:05,"",,0,0,0,2021-09-14 10:51:42
69213128,1,,,0,143,"<p>I was following a tutorial on building Shopify apps and I got an error:</p>&#xA;<blockquote>&#xA;<p>Invalid hook call.</p>&#xA;</blockquote>&#xA;<p>The error happens on <code>useMutation</code></p>&#xA;<pre><code>const Index = () =&gt; {&#xA;  const [updateProduct] = useMutation(PRODUCT_UPDATER);&#xA;  const submitHandler = useCallback(() =&gt; {&#xA;    let count = 0;&#xA;    const runMutation = (product) =&gt; {&#xA;      updateProduct({&#xA;        variables: {&#xA;          input: {&#xA;            descriptionHtml: `${product.descriptionHtml}${descriptionValue}`,&#xA;            title: `${product.title}${titleValue}`,&#xA;            id: product.id,&#xA;          },&#xA;        },&#xA;      }).then((data) =&gt; {&#xA;        console.log('Update Product', count, data);&#xA;        count++;&#xA;        if (products[count]) runMutation(products[count]);&#xA;        else {&#xA;          console.log('Update Complete');&#xA;        }&#xA;      });&#xA;    };&#xA;    runMutation(products[count]);&#xA;  }, [products, descriptionValue, titleValue]);&#xA;  return (&#xA;    &lt;Page&gt;&#xA;      &lt;Card&gt;&#xA;        &lt;TextField label=&quot;Title&quot; value={titleValue} onChange={setTitleValue} /&gt;&#xA;        &lt;TextField label=&quot;Description&quot; value={descriptionValue} onChange={setDescriptionValue} /&gt;&#xA;        &lt;ResourcePicker&#xA;          resourceType=&quot;Product&quot;&#xA;          showVariants={false}&#xA;          open={pickerOpen}&#xA;          onSelection={(resource) =&gt; {&#xA;            console.log(resource);&#xA;            setProducts(resource.selection);&#xA;          }}&#xA;        /&gt;&#xA;        &lt;DataTable&#xA;          columnContentTypes={['text', 'text', 'text', 'text', 'text']}&#xA;          headings={['ID', 'Old title', 'New title', 'Old description', 'New description']}&#xA;          rows={productTableDisplayData}&#xA;        /&gt;&#xA;        &lt;Button primary disabled={!productTableDisplayData.length} onClick={submitHandler}&gt;&#xA;          Submit&#xA;        &lt;/Button&gt;&#xA;      &lt;/Card&gt;&#xA;    &lt;/Page&gt;&#xA;  );&#xA;};&#xA;&#xA;export default Index;&#xA;</code></pre>&#xA;<p>I did not post the <code>graphql </code>mutation because i thought it's just a hook problem.</p>&#xA;",14127022,,7351272,2021-09-24 18:52:37,2021-09-24 18:52:37,Error: Invalid hook call. Hooks can only be called inside of the body of a function component. [I am still using function component],<node.js><reactjs><express><graphql><shopify-app>,1,0,0,2021-09-16 17:58:27
69221695,1,,,1,158,"<p>I am developing an Angular application, and I have a query like this using axios, where I want to make <code>first</code> parameter dynamic because of pagination size:</p>&#xA;<pre><code>await axios({&#xA;url: process.env.SHOPIFY_STORE_URL,&#xA;method: 'post',&#xA;data: {&#xA;  query: `&#xA;  query ($pieces: Int) {&#xA;    products(first: $pieces) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          description&#xA;          title&#xA;          storefrontId&#xA;          productType&#xA;          totalInventory&#xA;          tracksInventory&#xA;          isGiftCard&#xA;          priceRangeV2 {&#xA;            minVariantPrice {&#xA;              amount&#xA;              currencyCode&#xA;            }&#xA;            maxVariantPrice {&#xA;              amount&#xA;              currencyCode&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`,&#xA;  variables: {&#xA;    pieces: this.first,&#xA;  }&#xA;},&#xA;headers: {&#xA;  'Content-Type': 'application/json',&#xA;  'Accept': 'application/json',&#xA;  'X-Shopify-Access-Token': process.env.SHOPIFY_PASSWORD,&#xA;},&#xA;}).then((result) =&gt; {...}&#xA;</code></pre>&#xA;<p>If I execute it, passing a variable, I get a response saying that <code>you must provide one of first or last</code>.</p>&#xA;<p>Is it because first must be a fixed value or something?</p>&#xA;",2354974,,,,2021-09-17 22:09:00,How to make 'first' attribute dynamic in Shopify GraphQL?,<graphql><shopify>,1,0,0,2021-09-17 10:16:29
69258899,2,,69203861,1,,"<p>After some more research and I decided to go with the following approach:</p>&#xA;<pre><code>try {&#xA;      const { productID } = await Product.create(productInput).save();&#xA;&#xA;      return await Product.findOne(productID);&#xA;    } catch (error) {&#xA;      return error;&#xA;    }&#xA;</code></pre>&#xA;<p>This allows me to directly return the product, based on the productID after it's saved in the database and properly returns the object with it's relationship.</p>&#xA;",14060955,,,,2021-09-20 17:55:50,"",,0,0,0,2021-09-20 17:55:50
69261886,1,,,2,264,"<p>I am using AWS amplify with graphql and appsync.&#xA;I have a field called myArray that is an array of strings.&#xA;I would like to replace the value of myArray with a new array.</p>&#xA;<p>When I try to do this, graphql adds my input to the existing array, instead of replacing the array with my input.</p>&#xA;<p>How can I replace my array with a new array, instead of appending to the existing array.&#xA;Here is my code and the result:</p>&#xA;<p>// My query:</p>&#xA;<pre><code>    updateFrame(input: {id: &quot;94cf1635-a336-4619-99eb-53c081f57bea&quot;, myArray: [&quot;new value&quot;]}) {&#xA;      id&#xA;      testOrder&#xA;    }&#xA;  }```&#xA;  &#xA;&#xA;// Mutated data&#xA;```{&#xA;  &quot;data&quot;: {&#xA;    &quot;updateFrame&quot;: {&#xA;      &quot;id&quot;: &quot;94cf1635-a336-4619-99eb-53c081f57bea&quot;,&#xA;      &quot;myArray&quot;: [&#xA;        &quot;oldValue&quot;,&#xA;        &quot;oldValue&quot;,&#xA;        &quot;new value&quot;&#xA;      ]&#xA;    }&#xA;  }```[&#xA;}&#xA;</code></pre>&#xA;",3759011,,,,2021-09-20 23:36:24,AWS amplify graphql appsync - how to replace array instead of append?,<amazon-web-services><graphql><aws-appsync><amplify>,0,2,0,2021-09-20 23:36:24
69298502,1,,,2,213,"<p>i have this ,</p>&#xA;<pre><code>  @Roles(ROLES.ADMIN)&#xA;  @ResolveField('product', () =&gt; String)&#xA;  async getProduct(@Parent() product: Product) {&#xA;    return this.productService.getProduct(product);&#xA;  }&#xA;&#xA;&#xA;</code></pre>&#xA;<p>i already add       <code>fieldResolverEnhancers: ['guards']</code>&#xA;in appModule&#xA;my graphQl request gives me an error</p>&#xA;<pre><code>     &quot;message&quot;: &quot;Forbidden resource&quot;,&#xA;      &quot;path&quot;: [&#xA;        &quot;user&quot;,&#xA;        &quot;product&quot;&#xA;      ],&#xA;&#xA;</code></pre>&#xA;<p>witch is the expected behavior&#xA;, what i need is that the request succeed  ,but return null as product value if Role !== ADMIN</p>&#xA;<p>any suggestions ? thanks</p>&#xA;",16983770,,,,2021-09-23 10:44:38,NestJs Guard : enable guard on resolverField without error,<security><graphql><nestjs><resolver>,0,0,0,2021-09-23 10:44:38
69316841,2,,69299537,1,,"<blockquote>&#xA;<p>Get the posts and exclude the users that either I have blocked or they have blocked me.</p>&#xA;</blockquote>&#xA;<p>You want your select permission <strong>exclude</strong> the posts from users who <strong>either</strong> blocked you <strong>or</strong> are blocked by you. Using the same array relationships that you have, we can write a permission for post like:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;_not&quot;: {&#xA;    &quot;_or&quot;: [&#xA;      {&#xA;        &quot;author_profile&quot;: {&#xA;          &quot;been_blocked_by&quot;: { &quot;initiator_id&quot;: { &quot;_eq&quot;: &quot;X-Hasura-User-Id&quot; } }&#xA;        }&#xA;      },&#xA;      {&#xA;        &quot;author_profile&quot;: {&#xA;          &quot;blocked_by_me&quot;: { &quot;target_id&quot;: { &quot;_eq&quot;: &quot;X-Hasura-User-Id&quot; } }&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>We are basically telling Hasura to only show the posts that are <code>_not</code> by authors who have <code>been_blocked_by</code> us <code>_or</code> by authors who blocked us.</p>&#xA;",3785400,,,,2021-09-24 14:37:29,"",,0,0,0,2021-09-24 14:37:29
69354063,1,,,2,477,"<p>I am trying to use graphql to query a store's orders in a bulk operation. I am using a tags variable in the graphql request to query orders with specific tags. I have been following Shopify's <a href=""https://shopify.dev/api/usage/bulk-operations/queries#write-a-bulk-operation"" rel=""nofollow noreferrer"">documentation</a> in order to do this.</p>&#xA;<p>Here is what I've been trying:</p>&#xA;<pre><code>const variables = {&#xA;  &quot;tags&quot;: &quot;tag:foo AND tag:bar&quot;&#xA;};&#xA;&#xA;const query = gql`&#xA;  mutation getOrders($tags: String!) {  &#xA;    bulkOperationRunQuery(&#xA;      query:&quot;&quot;&quot;&#xA;        query {&#xA;          orders(query: $tags) {&#xA;            edges {&#xA;              node {&#xA;                id&#xA;                email&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      &quot;&quot;&quot;&#xA;    ) {&#xA;      bulkOperation {&#xA;        id&#xA;        url&#xA;        status&#xA;      }&#xA;      userErrors {&#xA;        field&#xA;        message&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;const bulkOperation = await graphQLClient.request(query, variables);&#xA;</code></pre>&#xA;<p>However, I always get this error back from the api:</p>&#xA;<pre><code>Variable $tags is declared by getOrders but not used&#xA;</code></pre>&#xA;<p>Does anyone know if there is a way to use a graphql variable in that bulk operation? Thanks!</p>&#xA;",3925776,,,,2022-01-05 19:35:47,Use variables in Shopify Bulk Operations graphql mutation,<graphql><shopify><graphql-js><shopify-app><shopify-api>,1,0,0,2021-09-27 23:00:46
69371205,2,,51322346,3,,"<p>Keep in mind that the query is just a string. You can use simple template literals to achieve your dynamic query.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const generateQuery = () =&gt; {&#xA;  let query = &quot;&quot;&#xA;&#xA;  for (let i = 1; i &lt; 3; i++) {&#xA;    const series = `series${i}`&#xA;    const source = `source${i}`&#xA;&#xA;    query += `&#xA;      ${series}: timeseriesData(sourceId: &quot;${source}&quot;) {&#xA;        prices&#xA;        queried&#xA;      }&#xA;    `&#xA;  }&#xA;&#xA;  return query&#xA;}&#xA;&#xA;const fetchDataQuery = gql`&#xA;  query fetchData {&#xA;    ${generateQuery()}&#xA;  }&#xA;`&#xA;</code></pre>&#xA;",278629,,,,2021-09-29 06:09:40,"",,0,0,0,2021-09-29 06:09:40
69374497,2,,69372400,0,,"<p><a href=""https://i.stack.imgur.com/dSMZX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/dSMZX.png"" alt=""enter image description here"" /></a></p>&#xA;<p>please add a the variable in variable section as :</p>&#xA;<pre><code>{&#xA;&quot;request&quot;: {{request}}&#xA;}&#xA;</code></pre>&#xA;<p>and then refer this in your query as</p>&#xA;<pre><code>$request&#xA;</code></pre>&#xA;",6793637,,,,2021-09-29 10:18:26,"",,0,3,0,2021-09-29 10:18:26
69385688,1,69386765,,0,459,"<p>In my application I am searching for products, then clicking into a product to see more detail about it.</p>&#xA;<p>I perform a GraphQL query on each page. The <code>SEARCH</code> query returns type <code>[Product]</code>, and the <code>PRODUCT</code> query returns type <code>Product</code>.</p>&#xA;<pre><code>// Search page&#xA;const SEARCH = gql`&#xA;  query Search($query: String!) {&#xA;    searchResults: search(query: $query) {&#xA;      id&#xA;      name&#xA;      images&#xA;      price&#xA;    }&#xA;  }&#xA;`&#xA;&#xA;// ProductDetail page&#xA;const PRODUCT = gql`&#xA;  query Product($id: Int!) {&#xA;    product(id: $id) {&#xA;      id&#xA;      name&#xA;      images&#xA;      optionSetName&#xA;      options {&#xA;        id&#xA;        images&#xA;        name&#xA;      }&#xA;      price&#xA;    }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;<p>I have enabled <a href=""https://www.apollographql.com/docs/react/data/queries/#returnpartialdata"" rel=""nofollow noreferrer"">returnPartialData</a> on the <code>PRODUCT</code> query, as some of the fields for that product already exist in the cache from the <code>SEARCH</code> query, and I would like to access them before the server request returns.</p>&#xA;<p>I thought I would also have to <a href=""https://www.apollographql.com/docs/react/caching/advanced-topics/#cache-redirects"" rel=""nofollow noreferrer"">apply a field policy</a> to reference the pre-existing <code>Product</code>, as I don't know how <code>PRODUCT</code> even knows what its return type is.</p>&#xA;<p>However, when I do the following:</p>&#xA;<pre><code>const { loading, data: { product } = {} } = useQuery(&#xA;    PRODUCT,&#xA;    { variables: { id: productId, isShallow }, returnPartialData: true }&#xA;)&#xA;console.log(product)&#xA;</code></pre>&#xA;<p>the following is logged to console (the first is from <code>returnPartialData</code>, the second from server):</p>&#xA;<p><a href=""https://i.stack.imgur.com/sSgWN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sSgWN.png"" alt=""console"" /></a></p>&#xA;<p>Somehow the <code>PRODUCT</code> query has associated itself with the existing <code>Product</code>, without me explicitly writing a cache redirect.</p>&#xA;<p>I'm confused how this has occurred? It seems like Apollo must have a reference to the GraphQL schema, and has seen the return type of <code>PRODUCT</code> is <code>Product</code>, then automatically used the <code>id</code> arg to reference the existing product.</p>&#xA;<p>Using <code>&quot;@apollo/client&quot;: &quot;^3.4.1&quot;</code></p>&#xA;",3171685,,,,2021-09-30 05:45:50,Confused why returnPartialData works without a field policy in Apollo Client 3,<graphql><apollo><apollo-client>,1,0,0,2021-09-30 03:20:19
69392987,2,,58002078,17,,"<p>Similar to Colins answer, but coming at it from the opposite direction. If you have an existing interface/type you need to pick apart you can use indexes:</p>&#xA;<pre><code>&#xA;// Existing type&#xA;type Tenant = {&#xA;    id:string;&#xA;    description:string;&#xA;    name:string;&#xA;    approvedUsers: Array&lt;{&#xA;      id:string;&#xA;      alias:string;&#xA;    }&gt;&#xA;}&#xA;&#xA;// Pick it apart&#xA;type TenantManagePageQueryTenant = &#xA;  Pick&lt;Tenant, 'id' | 'description' | 'name'&gt; &amp; {&#xA;    approvedUsers: Array&lt;Pick&lt;Tenant['approvedUsers'][0], 'id' | 'alias'&gt;&gt;&#xA;  }&#xA;</code></pre>&#xA;<p><a href=""https://www.typescriptlang.org/play?ssl=25&amp;ssc=2&amp;pln=1&amp;pc=1#code/C4TwDgpgBAKhB2BDewoF4oG8CwAoKBUAlgCYBcAzsAE5HwDmA3HoVCRBQMa1jBED28SjTpMWhJAFsIw2g2b5CiMGGr8AbhBIBVChGoUyUAILVqiEAB4ci1qVmiFrAogA2RRIapyxtqAF8APjx-PDxQSFgEZGAAWWREeggABUSIAEUAV30QOCQUdChxZKJOAGtLPJiAGigAclI6qAAfevYuHj5BJta6qQg6wKgAMixxFxU1TR09AyNTcysS8srolABtOuVVDS1dfQo6gF11gAYj2oaSHvq3D0PA4MVQ3DDcVwhUYDXgMiqUeJIJKpJJZHL-VAYGwEexQABEAEYAEwAZjh1XE7W4RF4AiE8IALABWABs6PE-SMcIA7AAOACc5MU2yme1mhig62hhFhcMQ-KZrDunipACNxXDxP4jiEgA"" rel=""noreferrer"">Playground</a></p>&#xA;",614112,,,,2021-09-30 13:20:37,"",,0,1,0,2021-09-30 13:20:37
69397875,1,,,0,189,"<p>I am trying to retrieve the result from a graphQL query when the product is nil by using the productByHandle query, but it's erroring out.</p>&#xA;<p>My code in Ruby:</p>&#xA;<pre><code>client = ShopifyAPI::GraphQL.client&#xA; product_handle_query = client.parse &lt;&lt;-'GRAPHQL'&#xA;  query ($productHandle: String!) {&#xA;   productByHandle(handle: $productHandle) {&#xA;     id&#xA;     handle&#xA;     title&#xA;     tags&#xA;     productType&#xA;     vendor&#xA;   }&#xA; }&#xA; GRAPHQL&#xA;result = client.query(product_handle_query, variables: {productHandle: productHandle})&#xA;puts result.data.productByHandle&#xA;</code></pre>&#xA;<p>This should return nil, but when I try and message out, it returns with this error:</p>&#xA;<p>NoMethodError (undefined method `productByHandle' for #&lt; productByHandle=nil&gt;)</p>&#xA;<p>This query works fine in Insomnia, where the output looks like this:</p>&#xA;<pre><code>{&#xA;&quot;data&quot;: {&#xA;&quot;productByHandle&quot;: null&#xA;},&#xA;&quot;extensions&quot;: {&#xA;&quot;cost&quot;: {&#xA;&quot;requestedQueryCost&quot;: 1,&#xA;&quot;actualQueryCost&quot;: 1,&#xA;&quot;throttleStatus&quot;: {&#xA;&quot;maximumAvailable&quot;: 2000.0,&#xA;&quot;currentlyAvailable&quot;: 1999,&#xA;&quot;restoreRate&quot;: 100.0&#xA;}&#xA;}&#xA;}&#xA;}&#xA;</code></pre>&#xA;<p>I have also tried changing from String! (which is not-null type which is what is returning) to String, but I get this error:&#xA;GraphQL::Client::ValidationError (Nullability mismatch on variable $productHandle and argument handle (String / String!))&#xA;My variable for $productHandle is indeed a string, so not sure why this isn't working either.</p>&#xA;<p>Any help would be appreciated.</p>&#xA;<p>Thanks!</p>&#xA;",17046411,,,,2021-10-01 16:32:17,Unable to get result of productByHandle query when nil when using shopify_api with graphql query,<ruby><graphql><shopify><shopify-api>,1,6,0,2021-09-30 19:26:43
69399414,2,,69399281,0,,"<p>Try to specify variables on request object, although the request does not use any variable:</p>&#xA;<pre><code>request: {&#xA;  query: GET_ENTERPRISE_CLAIMS,&#xA;  variables: {},&#xA;},&#xA;</code></pre>&#xA;<p>when you mock the response there should be value for every attribute you request, the <code>id</code> is missing in the elements of array <code>personalNetworkClaims</code>, try adding id for single one</p>&#xA;",3397552,,3397552,2021-09-30 22:38:14,2021-09-30 22:38:14,"",,0,3,0,2021-09-30 22:26:01
69439042,1,69439043,,0,138,"<h3>What I want to do</h3>&#xA;<p>Add data using DQL mutation <a href=""https://github.com/dgraph-io/dgo#running-a-mutation"" rel=""nofollow noreferrer"">https://github.com/dgraph-io/dgo#running-a-mutation</a> and these data to also be visible via graphql.</p>&#xA;<p><strong>Dgraph version</strong>: v21.03.2</p>&#xA;<p><strong>DQL schema:</strong></p>&#xA;<pre><code>&lt;Product.created_at&gt;: datetime .&#xA;&lt;Product.image&gt;: string .&#xA;&lt;Product.name&gt;: string @index(hash) @upsert .&#xA;&lt;Product.slug&gt;: string @index(hash) @upsert .&#xA;&lt;Product.updated_at&gt;: datetime .&#xA;&lt;dgraph.drop.op&gt;: string .&#xA;&lt;dgraph.graphql.p_query&gt;: string @index(sha256) .&#xA;&lt;dgraph.graphql.schema&gt;: string .&#xA;&lt;dgraph.graphql.xid&gt;: string @index(exact) @upsert .&#xA;type &lt;Product&gt; {&#xA;    Product.name&#xA;    Product.slug&#xA;    Product.image&#xA;    Product.created_at&#xA;    Product.updated_at&#xA;}&#xA;type &lt;dgraph.graphql&gt; {&#xA;    dgraph.graphql.schema&#xA;    dgraph.graphql.xid&#xA;}&#xA;type &lt;dgraph.graphql.persisted_query&gt; {&#xA;    dgraph.graphql.p_query&#xA;}&#xA;</code></pre>&#xA;<p><strong>GraphQL schema:</strong></p>&#xA;<pre><code>type Product {&#xA;    id: ID!&#xA;    name: String! @id @dgraph(pred: &quot;Product.name&quot;)&#xA;    slug: String! @id @dgraph(pred: &quot;Product.slug&quot;)&#xA;    image: String @dgraph(pred: &quot;Product.image&quot;)&#xA;    created_at: DateTime! @dgraph(pred: &quot;Product.created_at&quot;)&#xA;    updated_at: DateTime! @dgraph(pred: &quot;Product.updated_at&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>Using the above schema, graphql queries are working fine.</p>&#xA;<p><strong>Graphql mutation</strong></p>&#xA;<pre><code>mutation MyMutation {&#xA;  addProduct(input: {name: &quot;product 1&quot;, slug: &quot;prod-1&quot;, created_at: &quot;2021-10-04T06:37:57.707227339Z&quot;, updated_at: &quot;2021-10-04T06:37:57.707227339Z&quot;}) {&#xA;    numUids&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p><strong>Graphql Query</strong></p>&#xA;<pre><code>query MyQuery {&#xA;  queryProduct {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><strong>response of the graphql query:</strong></p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;queryProduct&quot;: [&#xA;      {&#xA;        &quot;name&quot;: &quot;product 1&quot;&#xA;      }&#xA;    ]&#xA;  },&#xA;  &quot;extensions&quot;: {&#xA;    &quot;touched_uids&quot;: 2,&#xA;    &quot;tracing&quot;: {&#xA;      &quot;version&quot;: 1,&#xA;      &quot;startTime&quot;: &quot;2021-10-04T06:42:01.064395081Z&quot;,&#xA;      &quot;endTime&quot;: &quot;2021-10-04T06:42:01.065675778Z&quot;,&#xA;      &quot;duration&quot;: 1280687,&#xA;      &quot;execution&quot;: {&#xA;        &quot;resolvers&quot;: [&#xA;          {&#xA;            &quot;path&quot;: [&#xA;              &quot;queryProduct&quot;&#xA;            ],&#xA;            &quot;parentType&quot;: &quot;Query&quot;,&#xA;            &quot;fieldName&quot;: &quot;queryProduct&quot;,&#xA;            &quot;returnType&quot;: &quot;[Product]&quot;,&#xA;            &quot;startOffset&quot;: 110469,&#xA;            &quot;duration&quot;: 1164739,&#xA;            &quot;dgraph&quot;: [&#xA;              {&#xA;                &quot;label&quot;: &quot;query&quot;,&#xA;                &quot;startOffset&quot;: 149859,&#xA;                &quot;duration&quot;: 1123999&#xA;              }&#xA;            ]&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Then I did a mutation using dgo: <a href=""https://github.com/dgraph-io/dgo#running-a-mutation"" rel=""nofollow noreferrer"">https://github.com/dgraph-io/dgo#running-a-mutation</a> and the data are shown fine using the ratel tool.</p>&#xA;<p>When I try again the Graphql Query:</p>&#xA;<pre><code>query MyQuery {&#xA;  queryProduct {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>none of these are returned in the graphql response.</p>&#xA;",4195561,,,,2021-10-07 12:51:42,Dgraph data is not accessible via graphql if added via DQL mutation,<graphql><graph-databases><dgraph>,1,0,0,2021-10-04 16:02:27
69439043,2,,69439042,1,,"<p>The issue is because the dgraph also wants a <code>DType</code> to be passed via dql mutation like so:</p>&#xA;<pre><code>models.Product{&#xA;                Name:      &quot;product name&quot;,&#xA;                Slug:      &quot;product-slug&quot;,&#xA;                Image:     &quot;test.jpg&quot;,&#xA;                CreatedAt: time.Now(),&#xA;                UpdatedAt: time.Now(),&#xA;                DType:     []string{&quot;Product&quot;}, // here is the trick&#xA;            }&#xA;</code></pre>&#xA;",4195561,,4195561,2021-10-07 12:51:42,2021-10-07 12:51:42,"",,0,0,0,2021-10-04 16:02:27
69452647,1,69455463,,1,577,"<p>I'm following the GraphQL <a href=""https://shopify.dev/api/admin-graphql/2021-10/mutations/productCreate"" rel=""nofollow noreferrer"">documentation for `productCreate</a> but I can't figure out how to add multiple variants when creating a product.</p>&#xA;<p>I'm using the following mutation:</p>&#xA;<pre><code>mutation productCreate($input: ProductInput!) {&#xA;  productCreate(input: $input) {&#xA;        userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;    shop {&#xA;      id&#xA;    }&#xA;    product {&#xA;      title&#xA;      handle&#xA;      variants {&#xA;        edges {&#xA;          node {&#xA;            title&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And passing the following variables:</p>&#xA;<pre><code>{&#xA; &quot;input&quot;: {&#xA;    &quot;title&quot;: &quot;Testing Products&quot;,&#xA;    &quot;handle&quot;: &quot;test-product-2&quot;,&#xA;    &quot;variants&quot;: [&#xA;        { &quot;title&quot;: &quot;Variant 1&quot; },&#xA;      { &quot;title&quot;: &quot;Variant 2&quot; }&#xA;    ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>The error I am getting back is:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;productCreate&quot;: {&#xA;      &quot;userErrors&quot;: [&#xA;        {&#xA;          &quot;field&quot;: [&#xA;            &quot;variants&quot;,&#xA;            &quot;1&quot;&#xA;          ],&#xA;          &quot;message&quot;: &quot;The variant 'Default Title' already exists.&quot;&#xA;        }&#xA;      ],&#xA;      &quot;shop&quot;: {&#xA;        &quot;id&quot;: &quot;gid://shopify/Shop/59898691733&quot;&#xA;      },&#xA;      &quot;product&quot;: null&#xA;    }&#xA;  },&#xA;  &quot;extensions&quot;: {&#xA;    &quot;cost&quot;: {&#xA;      &quot;requestedQueryCost&quot;: 12,&#xA;      &quot;actualQueryCost&quot;: 10,&#xA;      &quot;throttleStatus&quot;: {&#xA;        &quot;maximumAvailable&quot;: 1000,&#xA;        &quot;currentlyAvailable&quot;: 990,&#xA;        &quot;restoreRate&quot;: 50&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I've scoured the internet trying to figure out how to add multiple variants when creating a product on Shopify, but I can't figure it out.</p>&#xA;<p>Is it possible to do this?</p>&#xA;",5045227,,,,2021-10-05 18:21:19,Shopify GraphQL: How to add multiple variants to a product?,<graphql><shopify>,1,0,0,2021-10-05 14:48:51
69455463,2,,69452647,1,,"<p>I was defining the variants wrong. Without the <code>options</code> key (which is odd that it's plural considering it only takes a string?) it wouldn't work.</p>&#xA;<pre><code>{&#xA; &quot;input&quot;: {&#xA;    &quot;title&quot;: &quot;Testing Products&quot;,&#xA;    &quot;handle&quot;: &quot;test-product-2&quot;,&#xA;    &quot;variants&quot;: [&#xA;        { &#xA;        &quot;title&quot;: &quot;Size Small&quot;,&#xA;        &quot;options&quot;: &quot;Small&quot;&#xA;      },&#xA;      { &#xA;        &quot;title&quot;: &quot;Size Medium&quot;,&#xA;        &quot;options&quot;: &quot;Medium&quot;&#xA;      },&#xA;      { &#xA;        &quot;title&quot;: &quot;Size Large&quot;,&#xA;        &quot;options&quot;: &quot;Large&quot;&#xA;      }&#xA;    ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",5045227,,,,2021-10-05 18:21:19,"",,0,0,0,2021-10-05 18:21:19
69469104,2,,69465830,2,,"<p>It looks like you're making a query for a <code>Product</code> object.</p>&#xA;<p>GraphQL queries may require arguments, you can read more about that <a href=""https://graphql.org/learn/queries/#arguments"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>The error message is telling you that field <code>product</code> requires argument <code>id</code> of type <code>String!</code>.</p>&#xA;<p>That means you must know the <code>id</code> of a <code>Product</code> and then can query more fields.</p>&#xA;<p>Let's assume there is a product with <code>id: &quot;abc42&quot;</code>. A query then might look like:</p>&#xA;<pre><code>{&#xA;  product(id: &quot;abc42&quot;) {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>In this query the <code>id</code> is hardcoded. There are ways to pass the <code>id</code> dynamically, but that depends on your code and the libraries you are using.</p>&#xA;",11139683,,,,2021-10-06 16:08:55,"",,0,3,0,2021-10-06 16:08:55
69493240,1,69680269,,3,282,"<p>I'm trying to get vuetify's pagination component to work with the <a href=""https://github.com/nuxt-community/apollo-module"" rel=""nofollow noreferrer"">nuxtjs@apollo module</a>.</p>&#xA;<p>But I'm having a hard time getting it to work with my vuex store.</p>&#xA;<p>I'll skip over most of the code as its a lot of boilerplate.</p>&#xA;<p>First of all in order to populate my initial state I send a graphql query to my back end and commit these to my state.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const client = context.app.apolloProvider.defaultClient&#xA;&#xA;const response = await client.query({&#xA;  query: productsGQL,&#xA;  variables: {&#xA;    first: 5,&#xA;    page: 1&#xA;  }&#xA;})&#xA;&#xA;commit('setProducts', response.data.products.data)&#xA;commit('setPagination', response.data.products.paginatorInfo)&#xA;commit('setPage', response.data.products.paginatorInfo.currentPage)&#xA;</code></pre>&#xA;<p>this works fine, products, pagination and page are all set with initial data.</p>&#xA;<p>Now, I have 2 components a <code>CardComponent</code> that contains all of the products like so</p>&#xA;<pre class=""lang-html prettyprint-override""><code>&lt;script&gt;&#xA;export default {&#xA;  name: 'CardComponent',&#xA;&#xA;  computed: {&#xA;    products() {&#xA;      return this.$store.getters.getProducts&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;<p>And a <code>PaginationComponent</code>:</p>&#xA;<pre class=""lang-html prettyprint-override""><code>&lt;template&gt;&#xA;  &lt;div&gt;&#xA;    &lt;v-pagination&#xA;      v-model='page'&#xA;      circle&#xA;      :length='total_pages'&#xA;    /&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/template&gt;&#xA;&#xA;&lt;script&gt;&#xA;export default {&#xA;  name: 'PaginationComponent',&#xA;&#xA;  data() {&#xA;    return {&#xA;      total_pages: Math.ceil(this.$store.getters.getPagination.total / this.$store.getters.getPagination.perPage)&#xA;    }&#xA;  },&#xA;&#xA;  computed: {&#xA;    page: {&#xA;      get() {&#xA;        return this.$store.getters.getPage&#xA;      },&#xA;      set(value) {&#xA;        return this.$store.commit('setPage', value)&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;<p><code>Page</code> Initial value is 1, when I click on the second page the <code>Page</code> variable is updated to 2,  this is also than reflected in my state.</p>&#xA;<p>The thing I'm unsure about is: how do I <code>requery</code> the database? the page is being updated but the products displayed are still the same, and I'm not sure how to go about this.</p>&#xA;<p>If you some more code from the store I'll show it here.</p>&#xA;",11988656,,8816585,2021-10-29 08:28:30,2021-10-29 08:28:30,Apollo pagination with vuex,<vue.js><graphql><nuxt.js>,1,2,0,2021-10-08 09:01:48
69528183,2,,40697597,0,,"<p>For those of you who don't need to pass in an array for one request, and are open to the idea of making a request for every mutation. (I am using Vue3, compisition Api, but React and Angular developers still can understand this).</p>&#xA;<p>You <strong>cannot</strong> for loop the mutation like this:</p>&#xA;<pre><code>function createProject() {&#xA;    for (let i = 0; i &lt; state.arrOfItems.length; i++) {&#xA;      const { mutate: addImplementation } = useMutation(&#xA;        post_dataToServer,&#xA;        () =&gt; ({&#xA;          variables: {&#xA;            implementation_type_id: state.arrOfItems[i],&#xA;            sow_id: state.newSowId,&#xA;          },&#xA;        })&#xA;      );&#xA;&#xA;      addImplementation();&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>this will give you an error, because the mutation must be in the setup().&#xA;(here is the error you will recieve: <a href=""https://github.com/vuejs/vue-apollo/issues/888"" rel=""nofollow noreferrer"">https://github.com/vuejs/vue-apollo/issues/888</a>)</p>&#xA;<p>Instead create a child component, and map the array in the parent.</p>&#xA;<p>in Parent.vue</p>&#xA;<pre><code>&lt;div v-for=&quot;(card, id) in state.arrOfItems&quot;&gt;&#xA;  &lt;ChildComponent&#xA;    :id=&quot;id&quot;&#xA;    :card=&quot;card&quot;&#xA;  /&gt;&#xA;&lt;/div&gt;&#xA;</code></pre>&#xA;<p>in ChildComponent.vue</p>&#xA;<p>recieve props and:</p>&#xA;<pre><code> const { mutate: addImplementation } = useMutation(&#xA;    post_dataToServer,&#xA;    () =&gt; ({&#xA;      variables: {&#xA;        implementation_id: props.arrOfItems,&#xA;        id: props.id,&#xA;      },&#xA;    })&#xA;  );&#xA;</code></pre>&#xA;",14646958,,,,2021-10-11 14:47:17,"",,0,0,0,2021-10-11 14:47:17
69545910,1,69549936,,0,255,"<p>I have this landing page that is generated using a page query in gatsby-node.js that ideally will list all products contained in category x. With the page query I am passing the category name in Context.</p>&#xA;<pre><code>    createPage({&#xA;        path: `/landings/${pathName}`,&#xA;        component: path.resolve(`src/templates/product-pages/landing.js`),&#xA;        context: {&#xA;            data: cat.name,&#xA;        },&#xA;</code></pre>&#xA;<p>In the Landing Function I am passing the category name into another function called Products that contains a query that lists all child products of the parent category and passes them back to Landing.</p>&#xA;<pre><code>const Landing = (data) =&gt; {&#xA;    const title = data;&#xA;    return (&#xA;        &lt;div&gt;&#xA;            &lt;h1&gt;{title.pageContext.data}&lt;/h1&gt;&#xA;            &lt;Products category={&quot;product category&quot;}/&gt;&#xA;        &lt;/div&gt;&#xA;    )&#xA;}&#xA;export default Landing;&#xA;</code></pre>&#xA;<pre><code>const Products = ({category}) =&gt; {   &#xA;    console.log(query);&#xA;    return (&#xA;        &lt;div&gt;            &#xA;        &lt;/div&gt;&#xA;    )&#xA;}&#xA;&#xA;export const query = graphql`&#xA;query {&#xA;    allTaxonomyTermProductCategories(filter: {name: {in: &quot;Backlit Film&quot;}}) {&#xA;      nodes {&#xA;        relationships {&#xA;          commerce_product_variation__acyrlic {&#xA;            sku&#xA;          }&#xA;          commerce_product_variation__vinyl {&#xA;            sku&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;export default Products;&#xA;</code></pre>&#xA;<p>For an example I am passing &quot;Backlit Film&quot; but want it to pass in the category name it is getting from Landing. First problem I am having is the Products function returning a 10 digit hash code 2403848351, I know this is something to do with calling the query directly but not sure how else to fix it.</p>&#xA;",13771717,,,,2021-10-13 06:04:37,Graphql query returning 10 digit number instead of query data,<reactjs><graphql><gatsby>,1,1,0,2021-10-12 19:16:58
69570173,2,,57502087,0,,<p>Prior to shopify_api v9.0 the GraphQL client implementation was limited and almost unusable due to the client making dynamic introspection queries to Shopify's API. This was not only very slow but also led to unbounded memory growth.</p>&#xA;<p>This issue has been greatly resolved from the Shopify Side.</p>&#xA;<p>Previously a client was initialized with ShopifyAPI::GraphQL.new:</p>&#xA;<pre><code>client = ShopifyAPI::GraphQL.new&#xA;&#xA;SHOP_NAME_QUERY = client.parse &lt;&lt;-'GRAPHQL'&#xA;  {&#xA;    shop {&#xA;      name&#xA;    }&#xA;  }&#xA;GRAPHQL&#xA;&#xA;result = client.query(SHOP_NAME_QUERY)&#xA;result.data.shop.name&#xA;</code></pre>&#xA;<p>Now there's no need to initialize a client so all references to ShopifyAPI::GraphQL.new should be removed and instead the client is called via ShopifyAPI::GraphQL.client:</p>&#xA;<pre><code>client = ShopifyAPI::GraphQL.client&#xA;&#xA;SHOP_NAME_QUERY = client.parse &lt;&lt;-'GRAPHQL'&#xA;  {&#xA;    shop {&#xA;      name&#xA;    }&#xA;  }&#xA;GRAPHQL&#xA;&#xA;result = client.query(SHOP_NAME_QUERY)&#xA;result.data.shop.name&#xA;</code></pre>&#xA;,1007325,,,,2021-10-14 11:49:22,"",,0,0,0,2021-10-14 11:49:22
69578405,1,69591953,,0,347,"<p>I'm trying to create what I thought would be a Union or Enum for Apollo GraphQL, however, my understanding is at noob level. What is the correct way to write the code below.</p>&#xA;<p>Path: <code>sampleType.graphql</code></p>&#xA;<pre><code>union GridSize = 'auto' | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12;&#xA;&#xA;type Element {&#xA;  xs: GridSize&#xA;}&#xA;</code></pre>&#xA;",5769544,,,,2021-10-16 01:07:51,Type should reference a specific enum or union using Apollo Graphql,<graphql><apollo><apollo-client><apollo-server>,1,1,0,2021-10-14 23:29:06
69601487,2,,69601166,0,,"<p>Because you are returning <code>Uni</code> from your method, RESTEasy Reactive is running the method on the event loop (see <a href=""https://quarkus.io/blog/resteasy-reactive-smart-dispatch/"" rel=""nofollow noreferrer"">this</a> for details).&#xA;However, it looks like the call to <code>entityRepository.createRevision</code> is blocking IO, which means that the event loop thread is being blocked - something which is not allowed to happen.</p>&#xA;<p>Using the <code>@Blocking</code> annotation means that the request is being serviced on a worker pool thread, on which you are allowed to block.</p>&#xA;",2504224,,,,2021-10-17 05:12:08,"",,0,3,0,2021-10-17 05:12:08
69603644,2,,69600604,1,,"<h4>The Problem</h4>&#xA;<p><code>async/await</code> statement must be in a <code>try/catch</code> block. more on the <a href=""https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await"" rel=""nofollow noreferrer"">MDN</a> documentation.</p>&#xA;<p><code>then/catch</code> is another way to handle async promises but the result is the same as <code>async/await</code>, so don't mix them together.</p>&#xA;<h4>The Solution</h4>&#xA;<p>with current implementation (<code>async/await</code>) you need to wrap the async fetch function in a <code>try/catch</code> block to control all the side effects (success and failure scenario).</p>&#xA;<pre><code>const onFormSubmit = async (e: React.FormEvent&lt;HTMLFormElement&gt;) =&gt; {&#xA;  e.preventDefault();&#xA;  try {&#xA;    const response = await login();&#xA;    if (response?.data) {&#xA;        localStorage.setItem(&quot;user&quot;, response.data.login.jwt);&#xA;        addUser(response.data.login.user);&#xA;    }&#xA;  } catch (error) {&#xA;    // do a proper action in error cases&#xA;    const myErrorStatus = error.response?.status&#xA;    if(myErrorStatus === 401) {&#xA;      // do this&#xA;    } else if (myErrorStatus === 404) {&#xA;      // do this&#xA;    } &#xA;  }&#xA;};&#xA;</code></pre>&#xA;<h4>Optionally:</h4>&#xA;<p><strong>Note:</strong> instead of using nested <code>if</code> block for checking the <code>response</code>, you could use the <code>?</code> shorthand. for example:</p>&#xA;<pre><code>if(a){&#xA;  if(a.b){&#xA;    if(a.b.c){&#xA;      // ...&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>can be simplified to:</p>&#xA;<pre><code>if(a?.b?.c){&#xA; // ...&#xA;}&#xA;</code></pre>&#xA;",5737950,,,,2021-10-17 10:57:45,"",,0,0,0,2021-10-17 10:57:45
69604368,2,,69601166,1,,"<p>For those who face with the same issue to me, I fix it by wrapping the blocking code with Uni:</p>&#xA;<p><code> Uni&lt;RevisionResponse&gt; revisionResponse = Uni.createForm().item(entityRepository.createRevision(formData));</code></p>&#xA;<p>Ref link: <a href=""https://smallrye.io/smallrye-mutiny/guides/imperative-to-reactive#running-blocking-code-on-subscription"" rel=""nofollow noreferrer"">https://smallrye.io/smallrye-mutiny/guides/imperative-to-reactive#running-blocking-code-on-subscription</a></p>&#xA;",6685120,,,,2021-10-17 12:30:55,"",,0,0,0,2021-10-17 12:30:55
69611682,2,,69591747,0,,"<p>After gathering more information, it looks like it's possible, and even slightly more elegant than I anticipated. If I have the name of the tag (the 'ref'), I can get a specific commit with that rather than the SHA.  the response for this commit includes author information that gives the login.  I can then use this along with the pull number to request a reviewer.</p>&#xA;",14206395,,,,2021-10-18 06:35:32,"",,0,0,0,2021-10-18 06:35:32
69623423,2,,69622497,0,,"<p>If this is apollo-server-express@2.x (guessing from the comment above your code), I believe you just need to pass &quot;tracing: true&quot;:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const server = new ApolloServer({&#xA;  ...otherConfig,&#xA;  tracing: true&#xA;})&#xA;</code></pre>&#xA;<p>I've also seen some cases of</p>&#xA;<pre class=""lang-js prettyprint-override""><code>new ApolloServer({&#xA;  plugins: [&#xA;    require('apollo-tracing').plugin()&#xA;  ]&#xA;})&#xA;</code></pre>&#xA;",652728,,,,2021-10-18 22:58:21,"",,0,2,0,2021-10-18 22:58:21
69624960,1,,,1,435,"<p>I am working on testing my Components using Appolo Mock provider. However, I have this mutation query wherein one of my variables is set to a random UUID. How could I test it? It is giving me an error of no mock response for this query since my query does not match my mock please help tnx.</p>&#xA;<p>Component</p>&#xA;<pre><code>const [createMenuProduct, { loading }] = useMutation(CREATE_MENU_PRODUCTS);&#xA;&#xA;createMenuProduct({&#xA;  variables: {&#xA;    menuId: menuId,&#xA;    id: uuid(),&#xA;    productId: selectedProduct,&#xA;  },&#xA;});&#xA;</code></pre>&#xA;<p>test Mock</p>&#xA;<pre><code> {&#xA;    request: {&#xA;      query: CREATE_MENU_PRODUCTS,&#xA;      variables: {&#xA;        menuId: menuId,&#xA;        id: uuid(),&#xA;        productId: '4b1b6048-6cb1-46e0-ab4d-80fd11ebeacb',&#xA;      },&#xA;    },&#xA;    result: {&#xA;      data: {&#xA;        insertMenuProducts: {&#xA;          returning: [&#xA;            {&#xA;              menu_id: 'b591993d-af18-4bf5-88ad-26f08691afc7',&#xA;              product_id: '4b1b6048-6cb1-46e0-ab4d-80fd11ebeacb',&#xA;              product: {&#xA;                variant: {&#xA;                  id: '04befbe6-9635-4dde-abc2-673af13eb462',&#xA;                  isDeleted: false,&#xA;                  productVariantAddOns: [],&#xA;                },&#xA;              },&#xA;            },&#xA;          ],&#xA;        },&#xA;      },&#xA;    },&#xA;  },&#xA;</code></pre>&#xA;<p>currenly iam encountering this error due to I cannot match my mock variable with what is expected&#xA;<a href=""https://i.stack.imgur.com/MErfp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/MErfp.png"" alt=""enter image description here"" /></a>&#xA;<a href=""https://i.stack.imgur.com/G4wp3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/G4wp3.png"" alt=""enter image description here"" /></a></p>&#xA;",17188073,,17188073,2021-10-22 04:10:32,2021-10-22 04:10:32,How to Test Apollo mutation with one variable set to random?,<reactjs><react-apollo><react-testing-library>,1,1,0,2021-10-19 04:00:26
69626758,2,,49917628,0,,"<p>If you get that error above, check your schema files, if the <code>return types</code> of your fields are correct! In my case it was just caused by missing brackets:</p>&#xA;<p>Change:</p>&#xA;<pre><code>list(page: Int = 0, size: Int = 10): Result!&#xA;</code></pre>&#xA;<p>To:</p>&#xA;<pre><code>list(page: Int = 0, size: Int = 10): [Result]!&#xA;</code></pre>&#xA;",1264321,,,,2021-10-19 07:36:50,"",,0,0,0,2021-10-19 07:36:50
69633847,2,,69606100,0,,"<p>Looks like Vetur has recently released 0.35.0 and it picked up a genuine error in the Typescript code for Apollo. These docs provided info on how to set the type for each array: <a href=""https://www.apollographql.com/docs/react/development-testing/static-typing/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/development-testing/static-typing/</a></p>&#xA;",16019434,,,,2021-10-19 15:38:46,"",,0,0,0,2021-10-19 15:38:46
69644703,2,,69644654,1,,"<p><code>[String!]</code> is an optional array of (non-optional) strings. You may use a slice of strings for an array, and a pointer to a slice of string for an optional array.</p>&#xA;<pre><code>x := []graphql.String{graphql.String(tag)} // This would be good for &quot;[String!]!&quot;&#xA;&#xA;variables := map[string]interface{}{&#xA;    &quot;tags&quot;: &amp;x, // &amp;x is good for &quot;[String!]&quot;&#xA;}&#xA;</code></pre>&#xA;",1705598,,1705598,2021-10-20 11:01:01,2021-10-20 11:01:01,"",,0,0,0,2021-10-20 10:54:52
69654509,1,69666324,,1,324,"<p>I've been using REST APIs (both as a consumer and a developer of) for many years and am just starting to work with a GraphQL API for the first time, specifically, <a href=""https://portswigger.net/burp/extensibility/enterprise/graphql-api/"" rel=""nofollow noreferrer"">BurpSuite's Enterprise GraphQL API</a>. I like it but I'm definitely missing a few critical concepts.</p>&#xA;<p>I am trying to hit their <a href=""https://portswigger.net/burp/extensibility/enterprise/graphql-api/Scan.html"" rel=""nofollow noreferrer""><code>GetScan</code></a> endpoint:</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>curl -k -i -H &quot;Content-Type: application/json&quot; -H &quot;Authorization: &lt;MY_API_KEY&gt;&quot; -X GET -d '{ &quot;query&quot;: &quot;query GetScan ($id: ID!) { scan(id: $id) { id status agent { id name } site_application_logins { login_credentials { label username } recorded_logins { label } } audit_items { id issue_counts { total } number_of_requests } scan_configurations { id name } } }&quot;}' 'https://mybsee.example.com/graphql/v1'&#xA;</code></pre>&#xA;<p>For easier reading, that graphql query is also:</p>&#xA;<pre><code>query GetScan ($id: ID!) {&#xA;  scan(id: $id) {&#xA;    id status&#xA;    agent { id name }&#xA;    site_application_logins {&#xA;      login_credentials { label username }&#xA;      recorded_logins { label }&#xA;    }&#xA;    audit_items {&#xA;      id&#xA;      issue_counts { total }&#xA;      number_of_requests&#xA;    }&#xA;    scan_configurations { id name }&#xA;  }&#xA;},&#xA;variables {&#xA;    $agent: &quot;Firefox&quot;&#xA;}&#xA;</code></pre>&#xA;<p>Above <code>&lt;MY_API_KEY&gt;</code> has a real value when I run it (I can't post it here, obviously). Same with the URL (I have an on-premise version of BurpSuite running off, say, <code>mybsee.example.com</code>).</p>&#xA;<p>When I run that curl, I get the following output:</p>&#xA;<pre class=""lang-none prettyprint-override""><code>About to execute: query GetScan ($id: ID!) { scan(id: $id) { id status agent { id name } site_application_logins { login_credentials { label username } recorded_logins { label } } audit_items { id issue_counts { total } number_of_requests } scan_configurations { id name } } }&#xA;HTTP/2 200 &#xA;date: Wed, 20 Oct 2021 23:33:50 GMT&#xA;x-frame-options: DENY&#xA;&lt;lots of response headers omitted&gt;&#xA;&#xA;{&quot;errors&quot;:[{&quot;message&quot;:&quot;Unexpected exception occurred. Check logs for more details.&quot;,&quot;extensions&quot;:{&quot;code&quot;:77}}]}&#xA;</code></pre>&#xA;<p>I don't have access to the server logs, so I'm trying to rule out an issue on the client-side (bad call to <code>GetScan</code> on my part). Anything look wrong to anybody? Should I be injecting values to any of the fields in the query, such as <code>id</code> or <code>status</code>, etc.? If so, how (specifically) could I change the query to be valid? I'm also not sure if I need to append a <code>&quot;query&quot;</code> JSON field name into the actual query or not.</p>&#xA;<p>Thanks for any and all help here.</p>&#xA;<h3>Update</h3>&#xA;<p>I do realize that this is not a <em>perfectly</em> answerable problem, because the BurpSuite API is unfortunately proprietary and you cannot obtain an API key from them unless you purchase the product or go through a lot of rigamarole to get a free trial license.</p>&#xA;<p>But more importantly, I'm not looking for anyone to fish for me here, I'm hoping someone can teach me <em>how</em> to fish. In reality I need to integrate with a lot more GraphQL endpoints besides this one, but if someone can show me the proper way to construct one query, I can take it from there.</p>&#xA;",5235665,,5235665,2021-10-21 17:04:37,2021-10-22 15:22:52,Invoking GraphQL endpoints from curl failing unexpectedly,<bash><curl><graphql>,2,11,0,2021-10-21 00:36:41
69670533,1,,,0,261,"<p>I am trying to filter a result using an array and it should follow the order of the filter array.</p>&#xA;<p>Here's my array which will be used for filtering.</p>&#xA;<pre><code>// gatsby-node.js&#xA;&#xA;// Fetch all collections&#xA;  const collections = await graphql(`&#xA;    {&#xA;      allContentfulCollection {&#xA;        edges {&#xA;          node {&#xA;            handle&#xA;            productLists {&#xA;              slug&#xA;              handles&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  `);&#xA;&#xA;  collections.data.allContentfulCollection.edges.forEach((collection) =&gt; {&#xA;    const { handle, productLists } = collection.node;&#xA;&#xA;    if (productLists.length) {&#xA;      const defaultList = productLists.find(&#xA;        (productList) =&gt; productList.slug === 'default'&#xA;      );&#xA;&#xA;      // example defaultList.handles =&#xA;      // [&#xA;      //  'test-handle-a',&#xA;      //  'test-handle-b',&#xA;      //  'test-handle-c',&#xA;      //  'test-handle-d'&#xA;      // ];&#xA;&#xA;      createPage({&#xA;        path: `/collections/${handle}`,&#xA;        component: path.resolve('./src/templates/collection.js'),&#xA;        context: {&#xA;          handle,&#xA;          handles: defaultList &amp;&amp; defaultList.handles // this will be used to filter&#xA;        }&#xA;      });&#xA;    }&#xA;  });&#xA;...&#xA;</code></pre>&#xA;<pre><code>// templates/collection.js&#xA;export const query = graphql`&#xA;  query ProductInCollection($handles: [String], $handle: String) {&#xA;    allContentfulProduct(filter: { handle: { in: $handles }, availableForSale: { eq: true } }) {&#xA;      edges {&#xA;        node {&#xA;          handle&#xA;        }&#xA;      }&#xA;    }&#xA;    ...&#xA;</code></pre>&#xA;<p>The graphql result does not follow the sort of <code>$handles</code> array.</p>&#xA;<p>For example, the handle field which I get like the image is</p>&#xA;<p><a href=""https://i.stack.imgur.com/wWgun.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wWgun.png"" alt=""enter image description here"" /></a></p>&#xA;<pre><code>[&#xA;  'test-handle-b', // this is matching result with test-handle-a&#xA;  'test-handle-d', // ...&#xA;  'test-handle-c', // ...&#xA;  'test-handle-a', // ...&#xA;]&#xA;&#xA;// I expect to get the query result with the same order to the `$handles` in the query filter like below.&#xA;&#xA;[&#xA;  'test-handle-a',&#xA;  'test-handle-b',&#xA;  'test-handle-c',&#xA;  'test-handle-d'&#xA;]&#xA;&#xA;</code></pre>&#xA;<p>As you can see, I want to follow the ordering of the <code>handles</code> array, but I get an unexpected result like the above example.</p>&#xA;<p>How can I get the result with sort of the <code>handles</code> array?</p>&#xA;<p>Thank you.</p>&#xA;",11223414,,11223414,2021-10-22 09:17:19,2021-10-22 09:17:19,How to use filter from an array while fetching graphql query and also must keep the array order?,<reactjs><graphql><gatsby>,1,0,0,2021-10-22 01:44:19
69728550,1,69891941,,0,2886,"<p>I'm using <strong>strapi</strong> and <strong>graphQL</strong> ,</p>&#xA;<p>with this query i can get posts</p>&#xA;<pre><code>query {&#xA;  &#xA;  posts{&#xA;    id,&#xA;    title&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>i want to get <strong>posts</strong> and <strong>totalCount</strong> <strong>together</strong> ,desirable result would like this</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;&#xA;&quot;totalCount&quot; : &quot;3&quot;,&#xA;    &quot;posts&quot;: [&#xA;      {&#xA;        &quot;id&quot;: &quot;1&quot;,&#xA;        &quot;title&quot;: &quot;first post &quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: &quot;4&quot;,&#xA;        &quot;title&quot;: &quot;post two&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: &quot;5&quot;,&#xA;        &quot;title&quot;: &quot;post 3&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I've read <strong>document</strong> and I can make a query for getting <strong>just total count</strong> but it is not enough for me !&#xA;so , How can i get <strong>posts</strong> and <strong>totalCounts</strong> together ?</p>&#xA;",14952975,,,,2021-11-09 01:58:33,strapi & graphql : how to get total count of items?,<graphql><strapi><nuxt-strapi>,1,0,0,2021-10-26 18:57:33
69730974,1,,,1,69,"<p>I am consuming a graphql API. The API sends the requestedCost and the actualCost in the response. I want to calculate the requestedCost at the client side to rate limit my requests.</p>&#xA;<p>I have the rules for calculating the cost. For example, an object costs 1 point, fields cost zero points, connections cost 2 points etc.</p>&#xA;<p>I am experimenting with the AST using the graphql parse and visit functions and it seems to work but I think there may be a better way.</p>&#xA;<p>Any thoughts or suggestions?</p>&#xA;",6011583,,,,2021-10-26 23:17:59,graphql query cost analysis on client side,<graphql><graphql-js>,0,0,0,2021-10-26 23:17:59
69744442,2,,57640408,0,,"<p>Are you using pagination?</p>&#xA;<p>I had a similar problem were I was fetching the last 20 messages from a chat and then trying to update through websockets. The issue is that I was making a 20-items Array =&gt; 21-items Array.</p>&#xA;<p>When I removed the first message and added to the end of the Array (so I kept the original length), it started to work!</p>&#xA;",2229979,,,,2021-10-27 19:30:12,"",,0,0,0,2021-10-27 19:30:12
69756191,1,,,0,862,"<p>I am trying to insert an array of objects to my hasura table. I have defined my columns like the image below</p>&#xA;<p><a href=""https://i.stack.imgur.com/7Ya7z.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7Ya7z.png"" alt=""Table Columns"" /></a></p>&#xA;<p>But I am receiving <code>malformed array literal: \&quot;[]\&quot;</code> error. I am using JSON.stringify from my client side code to stringify my array before calling the mutation. What am I doing wrong?</p>&#xA;",14483509,,,,2021-10-29 18:40:55,Inserting an array of json to hasura,<javascript><postgresql><graphql><hasura>,1,2,0,2021-10-28 14:42:06
69791557,2,,69740750,0,,"<p>Downgrading to graphql worked for me too. Also, I tried using patch packge as a workaround just not to be blocked.&#xA;<a href=""https://www.npmjs.com/package/patch-package"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/patch-package</a></p>&#xA;",11531960,,,,2021-11-01 00:15:50,"",,0,2,0,2021-11-01 00:15:50
69801748,1,,,0,117,<p>Sample JavaScript code that uses apollo-client on the frontend:</p>&#xA;<pre><code>function getGql(newVersion) {&#xA;  return gql`&#xA;      mutation TestMutation(&#xA;          $name: String!&#xA;          ${(newVersion)?`$format: Boolean`:``}&#xA;      ) {&#xA;          testMutation(&#xA;              name: $name&#xA;              ${(newVersion)?`format: $format`:``}&#xA;          )&#xA;      }&#xA;  `;&#xA;}&#xA;</code></pre>&#xA;<p><strong>Question:</strong> Can I interpolate <code>gql-tag</code> query so that the above method evaluates to either:</p>&#xA;<pre><code>gql`&#xA;      mutation TestMutation(&#xA;          $name: String!&#xA;          $format: Boolean&#xA;      ) {&#xA;          testMutation(&#xA;              name: $name&#xA;              format: $format&#xA;          )&#xA;      }&#xA;  `;&#xA;</code></pre>&#xA;<p>or:</p>&#xA;<pre><code>gql`&#xA;      mutation TestMutation(&#xA;          $name: String!&#xA;      ) {&#xA;          testMutation(&#xA;              name: $name&#xA;          )&#xA;      }&#xA;  `;&#xA;</code></pre>&#xA;<p>...based on the boolean parameter to <code>getGql()</code>?</p>&#xA;,17302862,,,,2021-11-01 19:17:22,Dynamic interpolate / generate gql mutation query,<javascript><reactjs><graphql><apollo-client><react-apollo>,0,5,0,2021-11-01 19:17:22
69811894,2,,69811365,2,,"<p>You need to check with the documentation what format the service expects exactly, but you might have to send <code>Authorization</code> header in the following format:</p>&#xA;<pre><code>Authorization: ApiKey 8626cf56-e364-4fd1-4fe0-311e23ac6355&#xA;</code></pre>&#xA;<p>I think this might be the expected format based on the error message:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>&quot;error&quot;: {&#xA;    &quot;code&quot;: 480,&#xA;    &quot;type&quot;: &quot;BAD_REQUEST&quot;,&#xA;    &quot;description&quot;: &quot;Authorization header format invalid&quot;&#xA;}&#xA;</code></pre>&#xA;<p>And you are not sending out any <code>Authorization</code> header.</p>&#xA;<p>You might set in on the collection level in Postman like so:</p>&#xA;<p><a href=""https://i.stack.imgur.com/UohuC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UohuC.png"" alt=""enter image description here"" /></a></p>&#xA;<p><code>{{apikey}}</code> refers to an environment variable in Postman.</p>&#xA;",10401931,,10401931,2021-11-02 14:38:34,2021-11-02 14:38:34,"",,0,0,0,2021-11-02 14:12:40
69817303,2,,48331103,2,,"<p>In my case, I got the error simply because I'm adding <code>:</code> which I shouldn't have done.</p>&#xA;<p>e.g:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const query = `&#xA;   query($id: String!) {&#xA;      getUser(id: $id) {&#xA;        user: {&#xA;          id&#xA;          name&#xA;          email&#xA;          createdAt&#xA;        }&#xA;      }&#xA;   }&#xA;`&#xA;</code></pre>&#xA;<p>If you pay close attention to line 4 of the code above you'll realize that I added <code>:</code> after the user before the curly brace, then I began to list the user's data I wanna query and THAT WAS EXACTLY WHERE THE ERROR WAS!&#xA;Removing the <code>:</code> solve the issue!</p>&#xA;<p>It should be:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>user {&#xA;   id&#xA;   name&#xA;   ...&#xA;}&#xA;</code></pre>&#xA;",13608842,,,,2021-11-02 21:48:58,"",,0,0,0,2021-11-02 21:48:58
69832577,2,,60496743,1,,"<p>The best way that I have found is to not use (or with addition to ) WooSwatches plugin us should use <a href=""https://wordpress.org/plugins/advanced-custom-fields/"" rel=""nofollow noreferrer"">advanced custom fields</a> and <a href=""https://www.wpgraphql.com/acf/"" rel=""nofollow noreferrer"">WPGraphQL for Advanced Custom Fields</a> in the following way</p>&#xA;<ul>&#xA;<li>add a new field groupe with name <strong>Color Hex</strong> that has the location rule <code>Taxonomy</code> is equal to <code>Color</code> (or what ever attribute you want to use)</li>&#xA;</ul>&#xA;<p><a href=""https://i.stack.imgur.com/jxlhc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jxlhc.png"" alt=""enter image description here"" /></a></p>&#xA;<ul>&#xA;<li>add a field with the name hex (for example) with type of color picker and make show in graphql</li>&#xA;</ul>&#xA;<p><a href=""https://i.stack.imgur.com/sKsG2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sKsG2.png"" alt=""enter image description here"" /></a></p>&#xA;<ul>&#xA;<li>you should be able to query the data like this</li>&#xA;</ul>&#xA;<pre><code>&#xA;paColors {&#xA;  nodes {&#xA;    id&#xA;    name&#xA;    description&#xA;    colorHex {&#xA;      hex&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;",7122945,,,,2021-11-03 22:43:55,"",,0,2,0,2021-11-03 22:43:55
69853786,2,,69853785,3,,"<p>Assuming that each object in your array has the same four properties, then <code>typeof applicationsData[0]</code> will get you the appropriate type. You can then use a <a href=""https://www.typescriptlang.org/docs/handbook/advanced-types.html#type-aliases"" rel=""nofollow noreferrer"">Type Alias</a> to create a proper name for this type:</p>&#xA;<pre><code>type ApplicationData = typeof applicationsData[0]&#xA;</code></pre>&#xA;<p>Remember: using the inferred type will work for basic use cases like this, where you control the data and its structure is stable. You're basically using the first element as a &quot;sample&quot; for all the data within your array. For cases where the structure is more volatile it's better to define your own type definition by hand.</p>&#xA;",546967,,,,2021-11-05 13:10:59,"",,0,0,0,2021-11-05 13:10:59
69854260,2,,69848060,1,,"<p>The <code>blocksJSON</code> field provides all blocks as one large, nested JSON. It would be great to get that data flattened, but anyway, there is the answer to my question. Something like this:</p>&#xA;<pre><code>query MyQuery {&#xA;  blockEditorContentNodes(where: {title: &quot;My page&quot;}) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        blocksJSON&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",9633005,,,,2021-11-05 13:46:18,"",,0,0,0,2021-11-05 13:46:18
69859643,1,,,0,104,"<p>I am trying to add an array inside a GraphQl schema. Currently, it looks like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type Play {&#xA;  winRatio: [Float]&#xA;}&#xA;</code></pre>&#xA;<p>The purpose of the win ratio is to hold the history of all win ratios. For example, after 3 games, the winRatio array should look like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>winRatio: [1, .5, .66]&#xA;</code></pre>&#xA;<p>Currently, when I mutate the winRatio array, no history is saved; the state updates to the latest value. This is how that looks:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>await API.graphql({&#xA;  query: updatePlay,&#xA;  variables: {&#xA;    input: {&#xA;      winRatio: [winRatio, (await wins) / (await totalPlays)], // update the player's win ratio&#xA;    },&#xA;  },&#xA;})&#xA;</code></pre>&#xA;<p>However, when I query for the winRatio data in graphql, I get an array with ONLY the latest value:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>winRatio:[.66]&#xA;</code></pre>&#xA;<p>I feel like I need the spread operator, but I am not sure why my current solution is not solving my problem.</p>&#xA;",10769225,,,,2021-11-05 22:01:12,How to mutate the state of an array in graphql?,<javascript><arrays><reactjs><graphql><amplify>,1,0,0,2021-11-05 21:54:32
69859684,2,,69859643,0,,"<p>Yes, you are correct in that you need the spread operator.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>winRatio: [...winRatio, (await wins) / (await totalPlays)]&#xA;</code></pre>&#xA;",10769225,,,,2021-11-05 22:01:12,"",,0,0,0,2021-11-05 22:01:12
69876721,1,,,0,267,"<p>Here is my Graphql query</p>&#xA;<pre><code>      const gqlQuery = `query ($lastCursor: String) {&#xA;    products(first:100, after: $lastCursor) {&#xA;      pageInfo {&#xA;        hasNextPage&#xA;        hasPreviousPage&#xA;      }&#xA;    edges {&#xA;      cursor&#xA;      node {&#xA;        variants(first:2) {&#xA;          edges {&#xA;            node {&#xA;              sku&#xA;              inventoryQuantity&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}`&#xA;</code></pre>&#xA;<p>Im calling it in a do/while hasNextPage = true loop to get back a couple of key:value pairs for every product in a Shopify store</p>&#xA;<pre><code>  const data = await shopifyGraphqlClient.graphql(gqlQuery, variable);&#xA;</code></pre>&#xA;<p>The results look like this when i dump them to the browser using res.send:</p>&#xA;<pre><code>    undefined{&quot;products&quot;:{&quot;pageInfo&quot;:{&quot;hasNextPage&quot;:true,&quot;hasPreviousPage&quot;:false},&quot;edges&quot;:[{&quot;cursor&quot;:&quot;eyJsYXN0X2lkIjo3NTk4MjYxMTMsImxhc3RfdmFsdWUiOiI3NTk4MjYxMTMifQ==&quot;,&quot;node&quot;:{&quot;variants&quot;:{&quot;edges&quot;:[{&quot;node&quot;:{&quot;sku&quot;:&quot;isa-asl-26x22&quot;,&quot;inventoryQuantity&quot;:10}}]}}},{&quot;cursor&quot;:&quot;eyJsYXN0X2lkIjoxMDU0MDQ5MTUzLCJsYXN0X3ZhbHVlIjoiMTA1NDA0OTE1MyJ9&quot;,&quot;node&quot;:{&quot;variants&quot;:{&quot;edges&quot;:[{&quot;node&quot;:{&quot;sku&quot;:&quot;Sien-asl-73x49&quot;,&quot;inventoryQuantity&quot;:11}}]}}},{&quot;cursor&quot;:&quot;eyJsYXN0X2lkIjoxMDU0MjA3NDg5LCJsYXN0X3ZhbHVlIjoiMTA1NDIwNzQ4OSJ9&quot;,&quot;node&quot;:{&quot;variants&quot;:{&quot;edges&quot;:[{&quot;node&quot;:{&quot;sku&quot;:&quot;Sien-vwh-73x49&quot;,&quot;inventoryQuantity&quot;:11}}]}}},{&quot;cursor&quot;:&quot;eyJsYXN0X2lkIjo0MDc0NzkwMzQzLCJsYXN0X3ZhbHVlIjoiNDA3NDc5MDM0MyJ9&quot;,&quot;node&quot;:{&quot;variants&quot;:{&quot;edges&quot;:[{&quot;node&quot;:{&quot;sku&quot;:&quot;ren-dwh-36&quot;,&quot;inventoryQuantity&quot;:4}}]}}},{&quot;cursor&quot;:&quot;eyJsYXN0X2lkIjo0MDg5ODM1ODQ3LCJsYXN0X3ZhbHVlIjoiNDA4OTgzNTg0NyJ9&quot;,&quot;node&quot;:{&quot;variants&quot;:{&quot;edges&quot;:[{&quot;node&quot;:{&quot;sku&quot;:&quot;ara-dwh-56x32&quot;,&quot;inventoryQuantity&quot;:7}}]}}},{&quot;cursor&quot;:&quot;eyJsYXN0X2lkIjo0MDg5ODg3NTU5LCJsYXN0X3ZhbHVlIjoiNDA4OTg4NzU1OSJ9&quot;,&quot;node&quot;:{&quot;variants&quot;:{&quot;edges&quot;:[{&quot;node&quot;:{&quot;sku&quot;:&quot;Pro-dwh-32x24&quot;,&quot;inventoryQuantity&quot;:23}}]}}},{&quot;cursor&quot;:&quot;eyJsYXN0X2lkIjo0MDg5ODk1MTc1LCJsYXN0X3ZhbHVlIjoiNDA4OTg5NTE3NSJ9&quot;,&quot;node&quot;:{&quot;variants&quot;:{&quot;edges&quot;:[{&quot;node&quot;:{&quot;sku&quot;:&quot;Pro-dwh-40x28&quot;,&quot;inventoryQuantity&quot;:7}}]}}}...&#xA;</code></pre>&#xA;<p>and so on.</p>&#xA;<p>I just want the &quot;sku&quot; and &quot;inventoryQuantity&quot; fields, how can I isolate them into a JSON format file, and while I'm asking, any idea where the &quot;undefined&quot; is coming from?</p>&#xA;",7623506,,,,2021-11-08 00:09:53,Getting key:value pairs from Shopify Graphql query response using Node js,<node.js><graphql><shopify>,1,0,0,2021-11-07 21:38:32
69877497,2,,69876721,-1,,"<p>You can use a Bulk Query to get all products. Check that feature out. The bonus is, you get the data in JSON. So save yourself the headaches of the cursor-based approach, and just download inventory in bulk.</p>&#xA;",210841,,,,2021-11-08 00:09:53,"",,0,4,0,2021-11-08 00:09:53
69878630,1,,,0,73,"<p>I am building a graphql api with Express and express-graphql. I have eaUsers that may belong to a trainingLocation, but they may not.</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>type EaUser {&#xA;        id: ID!&#xA;        email: String!&#xA;        firstName: String!&#xA;        lastName: String!&#xA;      ...&#xA;          trainingLocation: TrainingLocation&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>I've built a nested resolver to get the training location when querying on the eaUser:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>EaUser: {&#xA;        trainingLocation: async parent =&gt; {&#xA;            if (Object.keys(parent.relationships.trainingLocation).length === 0) {&#xA;                return;&#xA;            }&#xA;            const id = parent.relationships.trainingLocation.data.id;   &#xA;            return await getTrainingLocation(id);   &#xA;        }&#xA;    },</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>Then trying to do the query this way:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>{&#xA;    eaUsers {&#xA;        id&#xA;        email&#xA;        firstName&#xA;        lastName&#xA;        trainingLocation {&#xA;            id&#xA;            jatc&#xA;            name&#xA;        }&#xA;    }&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>It works fine for users that have a training location, but for those that don't, I'm getting an error that it &quot;cannot read property id of null.&quot; I'm new to GraphQL, but I think that should be a valid query and just show &quot;null&quot; when the user doesn't have a training location. If that's the case, I clearly need to do something different with the resolver, but I'm not sure what. My search results have all been people who are getting null unexpectedly, rather than my situation, where I expect a null sometimes, but am getting an error instead. (The users with a training location are getting that resolved correctly.)</p>&#xA;",2666477,,,,2021-11-08 04:22:19,Handling a nullable relationship in a nested resolver in graphql,<graphql><express-graphql>,0,2,0,2021-11-08 04:22:19
69880442,2,,66185620,1,,"<p>You can get all products using <a href=""https://shopify.dev/api/admin-graphql/2021-10/objects/BulkOperation"" rel=""nofollow noreferrer"">BULK API</a> with conjunction to GRAPHQL</p>&#xA;",2008304,,,,2021-11-08 08:22:24,"",,0,0,0,2021-11-08 08:22:24
69922723,1,,,1,253,"<p>I'm developing a ecommerce website using mageto PWA studio.</p>&#xA;<p>I have created &quot;Subject&quot; Product dropdown attribute from magento admin panel.</p>&#xA;<p>My Requirement is: I have to display the subject value into product detail page.</p>&#xA;<p>For that I have added following querys into exiting product page GraphQL query:</p>&#xA;<p><strong>1st</strong> I tried in following way</p>&#xA;<pre><code>export const ProductDetailsFragment = gql`&#xA;    fragment ProductDetailsFragment on ProductInterface {&#xA;        __typename&#xA;        categories {&#xA;            id&#xA;            breadcrumbs {&#xA;                category_id&#xA;            }&#xA;        }&#xA;        description {&#xA;            html&#xA;        }&#xA;        id&#xA;        media_gallery_entries {&#xA;            id&#xA;            label&#xA;            position&#xA;            disabled&#xA;            file&#xA;        }&#xA;        meta_description&#xA;        name&#xA;        price {&#xA;            regularPrice {&#xA;                amount {&#xA;                    currency&#xA;                    value&#xA;                }&#xA;            }&#xA;        }&#xA;        sku&#xA;        small_image {&#xA;            url&#xA;        }&#xA;        url_key&#xA;        subject&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;<p>Output: Instead of subject value, It's giving option id of the subject.</p>&#xA;<p><strong>2nd</strong> I tried in following way</p>&#xA;<pre><code>export const ProductDetailsFragment = gql`&#xA;    fragment ProductDetailsFragment on ProductInterface {&#xA;        __typename&#xA;        categories {&#xA;            id&#xA;            breadcrumbs {&#xA;                category_id&#xA;            }&#xA;        }&#xA;        description {&#xA;            html&#xA;        }&#xA;        id&#xA;        media_gallery_entries {&#xA;            id&#xA;            label&#xA;            position&#xA;            disabled&#xA;            file&#xA;        }&#xA;        meta_description&#xA;        name&#xA;        price {&#xA;            regularPrice {&#xA;                amount {&#xA;                    currency&#xA;                    value&#xA;                }&#xA;            }&#xA;        }&#xA;        sku&#xA;        small_image {&#xA;            url&#xA;        }&#xA;        url_key&#xA;        subject {&#xA;            label&#xA;            value&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;<p>Output: Throwing console error</p>&#xA;<hr />&#xA;<p>How can I over come from this issue..</p>&#xA;",3073842,,,,2021-11-11 03:07:38,Magento PWA Studio + Retrive Dropdown attributes value (Product) into front end,<graphql><magento2><progressive-web-apps>,0,0,0,2021-11-11 03:07:38
69926232,2,,59412560,0,,"<p>In order to filter data in a component you can use the <a href=""https://docs-next.strapi.io/developer-docs/latest/developer-resources/database-apis-reference/entity-service/populate.html#advanced-populating"" rel=""nofollow noreferrer"">advance population feature of the Entity Service API</a>, like in this example:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>strapi.entityService('api::Product.Product').findMany({&#xA;  populate: {&#xA;    ComponentContentApplicationArea: true,&#xA;    repeatableComponent: {&#xA;      filters: {&#xA;        rating: 5&#xA;      },&#xA;      populate: true,&#xA;    },&#xA;  },&#xA;});&#xA;</code></pre>&#xA;",6018862,,,,2021-11-11 09:51:04,"",,0,0,0,2021-11-11 09:51:04
69973360,2,,62690405,0,,<p>The <code>products</code> connection doesn't have a query argument. You have basically access to fetching all products within that <code>collectionByHandle</code> and then filtering them client-side. You must have to use <code>liquid</code> for these types of nested features.</p>&#xA;,12301902,,,,2021-11-15 11:04:13,"",,0,0,0,2021-11-15 11:04:13
69981549,2,,69853023,0,,"<p>Assume this is your query;</p>&#xA;<pre class=""lang-js prettyprint-override""><code> const [result] = useQuery({&#xA;    query: &lt;QUERY-NAME&gt;,&#xA;    variables: {&#xA;      &lt;VARIABLES&gt;,&#xA;    },&#xA;  })&#xA;</code></pre>&#xA;<p>By examining following property path:</p>&#xA;<p><code>result.operation.context</code> you will see the following where is the information you look for.</p>&#xA;<p>I wonder what is the use case for this?</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;url&quot;: &quot;/path/to/graphql&quot;,&#xA;  &quot;preferGetMethod&quot;: false,&#xA;  &quot;requestPolicy&quot;: &quot;network-only&quot;,&#xA;  &quot;suspense&quot;: false,&#xA;  &quot;meta&quot;: {&#xA;    &quot;cacheOutcome&quot;: &quot;miss&quot; &lt;- HERE&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1090147,,,,2021-11-15 22:18:05,"",,0,0,0,2021-11-15 22:18:05
70013249,1,,,1,181,"<p>I am using JMeter for some load testing and I have written a postProcessor in Groovy to create an array of strings and place that into a variable from some request data. The issue I am having is I need to then pass that variable into a GraphQL input variable as an array of strings, however I am finding that when I do that using the JMeter variable syntax, it turns the entire variable, brackets and all into a string, instead of it being an array of strings. My question is how can I assign an array of strings to a variable in JMeter and have it stay an array of strings when passed into a GraphQL query variable?</p>&#xA;",7627495,,,,2022-07-08 08:07:40,Issue with JMeter variables,<graphql><load-testing><jmeter-5.0>,2,0,0,2021-11-18 00:42:06
70037551,1,70037699,,1,1728,"<p>I have a React/GraphQL small application working fine, and I'm trying to add TypeScript to it, as I'm new to TypeScript and trying to learn it. I have a GraphQL API endpoint that is returning products and information on those products. Using React, I'm storing products in a state and then rendering each product using JSX.</p>&#xA;<p>I created a type <code>Product</code> with the information that I expect the API to return, but it's also returning nested objects, and everything I tried triggers a TypeScript error. This is a simplified example of what the API is returning:</p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;        &quot;products&quot;: [&#xA;            {&#xA;                &quot;productName&quot;: &quot;Soda&quot;,&#xA;                &quot;code&quot;: &quot;sod&quot;,&#xA;                &quot;prices&quot;: {&#xA;                    &quot;nationalPrices&quot;: {&#xA;                        &quot;localPrices&quot;: [&#xA;                            {&#xA;                                &quot;pricePerUnit&quot;: &quot;1.99&quot;&#xA;                            }&#xA;                        ],&#xA;                        &quot;regionalPrices&quot;: [&#xA;                            {&#xA;                                &quot;pricePerUnit&quot;: &quot;2.49&quot;&#xA;                            }&#xA;                        ]&#xA;                    },&#xA;                    &quot;vendorPrices&quot;: {&#xA;                        &quot;localPrices&quot;: [&#xA;                            {&#xA;                                &quot;pricePerUnit&quot;: &quot;1.49&quot;&#xA;                            }&#xA;                        ]&#xA;                    }&#xA;                }&#xA;            },&#xA;            // more products... &#xA;        ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>And this is the solution I currently have. <code>code</code>, <code>productName</code> and <code>prices</code> are working fine, but <code>nationalPrices</code> is triggering a TypeScript error <code>property nationalPrices does not exist on type 'object'</code>. What can I do to fix this error?</p>&#xA;<pre><code>type nationalPricesObject = {&#xA;    localPrices: object[];&#xA;}&#xA;&#xA;type Product = {&#xA;    code: string;&#xA;    productName: string;&#xA;    prices: object;&#xA;    nationalPrices: nationalPricesObject;&#xA;}&#xA;&#xA;&#xA;function ProductList() {&#xA;    const [products, setProducts] = useState &lt; Product[] &gt; ([]);&#xA;    const { loading, data, error } = useQuery(LOAD_PRODUCTS);&#xA;&#xA;    useEffect(() =&gt; {&#xA;        if (data) {&#xA;            setProducts(data.products);&#xA;        }&#xA;    }, [data]);&#xA;&#xA;    return (&#xA;        &lt;&gt;&#xA;            &lt;div&gt;&#xA;                {products.map(p =&gt;&#xA;                (&#xA;                    &lt;div&gt;&#xA;                        &lt;ProductCard&#xA;                            productName={p.displayName}&#xA;                            code={p.code}&#xA;                            // simplified code below for sake of clearity &#xA;                            pricePerUnit={p.prices.nationalPrices.localPrices[0]['pricePerUnit']}&#xA;                        /&gt;&#xA;                    &lt;/div&gt;&#xA;                ))}&#xA;            &lt;/div&gt;&#xA;        &lt;/&gt;&#xA;    )&#xA;}&#xA;</code></pre>&#xA;",16198542,,,,2021-11-19 16:21:59,How to use nested objects in TypeScript? Property does not exist on type 'object',<javascript><reactjs><typescript><graphql>,2,2,0,2021-11-19 15:53:33
70037699,2,,70037551,1,,"<p>Product doesn't contain a <code>nationalPrices</code> property.  Product.prices does.  We can set a type Prices which contains the stuff expected in Product.prices, and use that to define the prices property of the Product object.</p>&#xA;<pre><code>type Prices = {&#xA;    nationalPrices: nationalPricesObject;&#xA;    vendorPrices: someOtherPricesObject;&#xA;}&#xA;&#xA;type Product = {&#xA;    code: string;&#xA;    productName: string;&#xA;    prices: Prices;&#xA;}&#xA;</code></pre>&#xA;",535480,,,,2021-11-19 16:05:37,"",,0,0,0,2021-11-19 16:05:37
70037836,2,,70037551,1,,"<p>Usage of <code>object</code> is tricky in typescript, and generally not recommended. You have two problems here:</p>&#xA;<ol>&#xA;<li><code>object</code> is an ambiguous type, so you cannot use <code>prices.nationalPrices</code> because <code>nationalPrices</code> does not exist on type <code>object</code></li>&#xA;<li>Once you fix this, you will also encounter an error that <code>localPrices[0]</code> which is of type <code>object</code> does not have <code>pricePerUnit</code></li>&#xA;</ol>&#xA;<p>To fix these, make you types more specific:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type nationalPricesObject = {&#xA;    localPrices: { pricePerUnit: number; }[]; // assuming this is number?&#xA;}&#xA;&#xA;type Product = {&#xA;    code: string;&#xA;    productName: string;&#xA;    prices: nationalPricesObject;&#xA;}&#xA;</code></pre>&#xA;<p>Lastly, by convention, types in typescript should be <code>PascalCase</code>, and interfaces should be preferred. So, I would change your code to look like:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>interface Price {&#xA;  pricePerUnit: number;&#xA;}&#xA;&#xA;interface NationalPrices {&#xA;    localPrices: Price[];&#xA;}&#xA;&#xA;interface Product {&#xA;    code: string;&#xA;    productName: string;&#xA;    prices: NationalPrices;&#xA;}&#xA;</code></pre>&#xA;",4392485,,1839439,2021-11-19 16:21:59,2021-11-19 16:21:59,"",,0,0,0,2021-11-19 16:16:50
70042700,2,,67825086,1,,"<p>This won't work because you don't have a variable &quot;r&quot; to <code>json.load</code>.</p>&#xA;<pre><code>    with open(&quot;./r.json&quot;, 'r') as f:&#xA;        contents =json.load(r)&#xA;</code></pre>&#xA;<p>and apparently &quot;./r.json&quot; isn't a file. So <code>contents</code> will always be <code>[]</code></p>&#xA;<p>Then you try to access contents which is a list by using a string.</p>&#xA;<p>This is why you see those errors. Pretty self-explanatory.</p>&#xA;",2664894,,,,2021-11-20 01:57:05,"",,0,0,0,2021-11-20 01:57:05
70058162,1,,,0,150,"<p>I was wondering if there an elegant solution to handle two-level parent/child relationship in Gatsby?</p>&#xA;<p>I’m building a website showcasing the products, where some of the products have several variants.</p>&#xA;<p> I have the following two levels folder structure for my project:</p>&#xA;<pre><code>src/posts&#xA;│&#xA;└───Product_A&#xA;│   │   index.md&#xA;│   │   image.png&#xA;│   │ &#xA;│   └───Variants&#xA;│       └───Variant_1&#xA;│       │   index.md&#xA;│       │&#xA;│       └───Variant_2&#xA;│       │   index.md&#xA;│   &#xA;└───Product_B&#xA;│   │   index.md&#xA;│   &#xA;└───Product_C&#xA;│   │   index.md&#xA;│   │&#xA;│   └───Variants&#xA;...    &#xA;</code></pre>&#xA;<p>Each product folder contains an article in markdown, images and optionally <em>Variants</em> folder (for those products that have one or more variants).&#xA;I'm also using Markdown frontmatter to describe product properties both for parent and child products.</p>&#xA;<p>I have to display products and its variants on home page in a &quot;collapsed&quot; way (displaying product and its number of variants together) and an expanded way (displaying all products and its variants in a flat structure) like this:</p>&#xA;<p><a href=""https://i.stack.imgur.com/l41ut.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/l41ut.png"" alt=""homepage"" /></a></p>&#xA;<p>On a product page I have to display products variants for those products that have them like this:</p>&#xA;<p><a href=""https://i.stack.imgur.com/EcHgW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EcHgW.png"" alt=""enter image description here"" /></a></p>&#xA;<p>And I'll also have to determine if the product is parent or child and show slightly different design/content on a product page based on that.</p>&#xA;<p>I'm currently trying to use GraphQL filter in combination with <code>fileAbsolutePath</code> to fetch variations for a particular product:</p>&#xA;<pre><code>  allMarkdownRemark( filter: {fileAbsolutePath: {glob: &quot;**/Product_A/Variants/**&quot;}}){&#xA;    edges {&#xA;      node {&#xA;        fileAbsolutePath&#xA;        fields{&#xA;          slug&#xA;        }&#xA;        excerpt&#xA;        frontmatter {&#xA;          title&#xA;        }&#xA;      }&#xA;  }&#xA;</code></pre>&#xA;<p>And I have to rely on either <em>fileAbsolutePath</em> or <em>slug</em> field containing &quot;/Variants/&quot; text to distinguish parent from a child later in code (to count product variants on home page and to show it in the expanded view).</p>&#xA;<p>I saw that other people asked <a href=""https://github.com/gatsbyjs/gatsby/issues/26752"" rel=""nofollow noreferrer"">similar questions</a> before, suggesting to use GraphQL schema customization but it seem too complicated.</p>&#xA;<p>I was wondering if there is an easier way to do what I'm doing in Gatsby or maybe there is a ready-made solution for paren/child structure?</p>&#xA;<p>I'm using Gatsby 2.3.23 together with MarkdownRemark.</p>&#xA;",15894,,,,2021-11-22 06:22:13,How to handle parent/child relationship between markdown posts in GatsbyJS,<graphql><markdown><gatsby>,1,0,0,2021-11-21 20:06:43
70062913,1,,,0,444,<p>What is the equivalence in GraphQL <code>{ [key: string]: string }</code> in GraphQL in TypeScript?</p>&#xA;<pre><code>#schema.gql&#xA;type App implements Node {&#xA;  name: String!&#xA;  tags: 'EQUIVALENCE { [key: string]: string }'&#xA;}&#xA;</code></pre>&#xA;<p>Thanks!</p>&#xA;,5023329,,5585371,2021-11-22 17:12:20,2021-11-22 17:32:21,Equivalence in GraphQL with { [key: string]: string } in TypeScript,<typescript><graphql>,1,0,0,2021-11-22 08:34:29
70082535,1,,,0,25,"<p>I'm trying to convert a json object I'm getting from server to list but I get the error above. Here's my code</p>&#xA;<pre><code> Future getCryptoAssets() async {&#xA;    var cryptoList = await CryptoApi().getCrytoAssets();&#xA;    CryptoModel r = cryptoList;&#xA;    if (!_streamController.isClosed) {&#xA;      _streamController.add(r);&#xA;    }&#xA;    return r;&#xA;  }&#xA;</code></pre>&#xA;<p>I get the following when I print r</p>&#xA;<pre><code>[{__typename: MyAccount, balances: [{__typename: MyBalance, ticker: BTC, name: Bitcoin, decimals: 8, amount: 0.00000000, logo: https://data.wealthica.com/api/securities/CRYPTO:BTC/logo, wallet: 1JZnxkJnNV9ymZFTqjfve1ksdM2zJq3rsN:cash:usd}]}]&#xA;</code></pre>&#xA;",11682398,,,,2021-11-23 14:34:35,_TypeError (type 'List<Object?>' is not a subtype of type 'CryptoModel'),<flutter><class><object><model><graphql>,0,3,0,2021-11-23 14:20:09
70092327,1,,,2,767,"<p>I'm using <a href=""https://chillicream.com/docs/hotchocolate/get-started"" rel=""nofollow noreferrer"">HotChocolate</a> for our GraphQL server in .NET and CosmosDb as DB, which is a document database. Sorry for a long post...</p>&#xA;<p>In our Db we will have one part of the document that is different depending on product type. Lets say that one product type is &quot;Shoes&quot;, and another is &quot;Jackets&quot;.</p>&#xA;<pre><code>// A product with type &quot;Shoes&quot;&#xA;{&#xA;    &quot;id&quot;: &quot;123&quot;,&#xA;    &quot;productType&quot;: &quot;Shoes&quot;,&#xA;    &quot;specific&quot;: {&#xA;        &quot;shoeSize&quot;: 4,&#xA;        &quot;isSandal&quot;: true,      &#xA;    }&#xA;}&#xA;&#xA;// A product with type &quot;Jackets&quot;&#xA;{&#xA;    &quot;id&quot;: &quot;888&quot;,&#xA;    &quot;productType&quot;: &quot;Jackets&quot;,&#xA;    &quot;specific&quot;: {&#xA;       &quot;fluffyness&quot;: 12,&#xA;       &quot;backPrint&quot; : &quot;Gretzky 99&quot; &#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>It should be possible for a Content Editor in our system to add new product types and add new fields to it, <em>on a running system</em> (cms-style). This means that the schema should be created dynamically.</p>&#xA;<p><a href=""https://chillicream.com/blog/2021/09/27/hot-chocolate-12#dynamic-schemas"" rel=""nofollow noreferrer"">This article</a> and the provided <a href=""https://github.com/ChilliCream/hotchocolate-examples/tree/master/misc/TypeModules"" rel=""nofollow noreferrer"">github-project</a> describes creating new object types &quot;on the fly&quot;, but I don't understand how to create inputfilters, so its also possible to query on the new fields. (It doesn't work, just trying to create a FilterInputTypeDefinition)</p>&#xA;<p>I have done a small experiment (not used the article way yet), adding the property &quot;shoeSize&quot;. I extend the product type with shoeSize-property, that is stored a dictionary on the .NET-basetype.</p>&#xA;<pre><code>public class ProductType : ObjectType&lt;Product&gt;&#xA;{&#xA;    protected override void Configure(IObjectTypeDescriptor&lt;Product&gt; descriptor)&#xA;    {&#xA;        descriptor.Field(&quot;lengthInMeter&quot;).Resolve(context =&gt;&#xA;        {&#xA;            Product parent = context.Parent&lt;Product&gt;();&#xA;            return parent.Specific.ContainsKey(&quot;shoeSize&quot;) ? parent.Specific[&quot;shoeSize&quot;] : null;&#xA;        }).Type&lt;IntType&gt;();&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>This works as expected and I can specify the lenghtInMeter as a field in my gql-query. What I cannot do is a query like this</p>&#xA;<pre><code>getProducts(where : { shoeSize: {lg : 4}}) //using property shoeSize is not possible&#xA;</code></pre>&#xA;<p>, since the input type, doesnt have lengthInMeter, just the ProductType. How to I do that</p>&#xA;<p>in a hardcoded sense, ie inherit from FilterInputType&#xA;more importantly following the example in the link and also creating a filterinputtype with new fields.</p>&#xA;<p>Will this create a correct <code>IQueryable</code> that can be translated to a SQL for my database? If not: where can I intercept / take over that that <code>IQueryable</code> creation?</p>&#xA;",816438,,13302,2022-05-03 11:35:05,2022-05-03 11:35:05,HotChocolate (GraphQL) dynamic schemas and filtering,<graphql><azure-cosmosdb><hotchocolate>,0,4,0,2021-11-24 07:46:18
70100226,1,,,0,112,<p>I am working with a sitemap where the modified date that is being pulled from WP GraphQL is incorrectly formatted which looks like <code>2021-11-24T17:03:44.597Z</code>. Looking at Google's recommendations it suggests something like: <code>2021-11-24T16:02:05+00:00</code></p>&#xA;<p>Is there an efficient way of converting this to the recommended format?</p>&#xA;,5120420,,,,2021-12-02 18:47:11,Formatting date in Javascript for Sitemap,<javascript><wp-graphql>,2,1,0,2021-11-24 17:10:06
70107150,1,,,1,268,"<p>I'm quite new to GraphQL syntax so would love to see why I am getting null back as my result.</p>&#xA;<p>What I am trying to is query orders in a store and retrieve back the UTM Params associated with that order.</p>&#xA;<p>This is the query:</p>&#xA;<pre><code>query {&#xA;  orders(first:10) {&#xA;    edges {&#xA;      node {&#xA;        customerJourney {&#xA;          moments {&#xA;            ... on CustomerVisit {&#xA;              utmParameters {&#xA;                source&#xA;                campaign&#xA;                content&#xA;                medium&#xA;                term&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This is the results:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;orders&quot;: {&#xA;      &quot;edges&quot;: [&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;customerJourney&quot;: null&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;customerJourney&quot;: null&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;customerJourney&quot;: null&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;customerJourney&quot;: null&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;customerJourney&quot;: null&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;customerJourney&quot;: null&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;customerJourney&quot;: null&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;customerJourney&quot;: null&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;customerJourney&quot;: null&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;customerJourney&quot;: null&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  },&#xA;  &quot;extensions&quot;: {&#xA;    &quot;cost&quot;: {&#xA;      &quot;requestedQueryCost&quot;: 42,&#xA;      &quot;actualQueryCost&quot;: 22,&#xA;      &quot;throttleStatus&quot;: {&#xA;        &quot;maximumAvailable&quot;: 1000,&#xA;        &quot;currentlyAvailable&quot;: 978,&#xA;        &quot;restoreRate&quot;: 50&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>It seems all the customerJourney's are returning null. Is there something wrong with the query?</p>&#xA;",4515608,,,,2022-07-05 02:14:04,Shopify GraphQL Query to retrieve UTM Parameters from Orders,<graphql><shopify><shopify-api>,1,0,0,2021-11-25 07:18:06
70136467,1,,,-1,616,"<p>I would like to fetch all repositories from a specific user. In case the user has a lot of repositories, it would be better to use pagination.</p>&#xA;<p>As far as I can see here, we are allowed to pass first and last property. But what if I want to get repositories between 10-20?</p>&#xA;<pre><code>query MyQuery {&#xA;  user(login: &quot;someuser&quot;) {&#xA;    repositories(first:10&quot; ) {&#xA;      totalCount&#xA;      nodes {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>You can access here =&gt; <a href=""https://docs.github.com/en/graphql/overview/explorer"" rel=""nofollow noreferrer"">https://docs.github.com/en/graphql/overview/explorer</a></p>&#xA;<p>Thanks in advance</p>&#xA;",13519185,,,,2021-11-29 14:04:48,Graphql API pagination issue,<reactjs><graphql><apollo>,2,0,0,2021-11-27 16:05:13
70138820,1,70138892,,0,2552,"<p>I have a small React/TypeScript/GraphQL app that connects to an API, fetches products, and displays them on the page.</p>&#xA;<p>I'm trying to create a test that checks if the product's name is in the document after a GraphQL mock, by using <code>getByText</code>, but I keep getting <code>TestingLibraryElementError: Unable to find an element with the text: iPad 5g. This could be because the text is broken up by multiple elements. In this case, you can provide a function for your text matcher to make your matcher more flexible.</code></p>&#xA;<p>I also tried using <code>getByRole</code> (see below), but that gives me the error <code>TestingLibraryElementError: Unable to find an accessible element with the role &quot;paragraph&quot; and name '/month to month/i'</code></p>&#xA;<p>Is there a better way to do this? How can I check if the name of the product rendered correctly? I appreciate any help.</p>&#xA;<p><strong>ProductCard.test.js</strong></p>&#xA;<pre><code>import React from &quot;react&quot;;&#xA;import { render, screen } from &quot;@testing-library/react&quot;;&#xA;import TestRenderer from 'react-test-renderer';&#xA;import { MockedProvider } from '@apollo/client/testing';&#xA;import ProductCard from &quot;../ProductCard&quot;;&#xA;import { LOAD_PRODUCTS } from &quot;../GraphQL/Queries&quot;;&#xA;import '@testing-library/jest-dom';&#xA;&#xA;it('renders ProductCard successfully', async () =&gt; {&#xA;  const productMock = {&#xA;    request: {&#xA;      query: LOAD_PRODUCTS,&#xA;    },&#xA;    result: {&#xA;      data: { products: { productName: 'iPad 5g', code: 'i5g', price: 599.99 } },&#xA;    },&#xA;  };&#xA;&#xA;  const component = TestRenderer.create(&#xA;    &lt;MockedProvider mocks={[productMock]} addTypename={false}&gt;&#xA;      &lt;ProductCard displayName={productMock.result.data.products.productName} price={productMock.result.data.products.price} /&gt;&#xA;    &lt;/MockedProvider&gt;,&#xA;  );&#xA;  await new Promise(resolve =&gt; setTimeout(resolve, 0));  &#xA;  expect(screen.getByText(`iPad 5g`)).toBeInTheDocument();&#xA;  // expect(screen.getByRole('paragraph', { name: /iPad 5g/i })).toBeInTheDocument();&#xA;});&#xA;</code></pre>&#xA;<p><strong>ProductCard.tsx</strong></p>&#xA;<pre><code>// imports &#xA;// ... &#xA;// ...&#xA;&#xA;// TypeScript types &#xA;// ... &#xA;// ... &#xA;&#xA;const ProductCard: React.FC&lt;Props&gt; = ({ productName, price }) =&gt; {&#xA;&#xA;  return (&#xA;    &lt;&gt;&#xA;      &lt;Typography&gt;{productName}&lt;/Typography&gt;&#xA;      &lt;Typography&gt;{price}&lt;/Typography&gt;&#xA;      &lt;Typography&gt;&lt;p&gt;Great new features&lt;/p&gt;&lt;/Typography&gt;&#xA;      &lt;Button&gt;Buy Now&lt;/Button&gt;&#xA;    &lt;/&gt;&#xA;  );&#xA;}&#xA;</code></pre>&#xA;",16198542,,,,2021-11-27 21:35:56,"""Unable to find an element with the text.."" during react testing",<javascript><reactjs><jestjs><graphql><apollo>,1,0,0,2021-11-27 21:25:27
70154395,1,,,1,654,"<p><strong>NOTE: If you do know that the below is not possible, this information is just as valuable.</strong></p>&#xA;<p>Im checking out <a href=""https://chillicream.com/docs/hotchocolate/"" rel=""nofollow noreferrer"">HotChocolate</a> and Ive looked into the <a href=""https://chillicream.com/blog/2021/09/27/hot-chocolate-12#dynamic-schemas"" rel=""nofollow noreferrer"">dynamic schemas</a></p>&#xA;<p>I have taken the code in your <a href=""https://github.com/ChilliCream/hotchocolate-examples/tree/master/misc/TypeModules/DynamicTypes"" rel=""nofollow noreferrer"">Github-example</a> This works ok. I have extended our Product-type like so:</p>&#xA;<p>//Same json as in your Github-sample, new properties are &quot;color&quot; and some more</p>&#xA;<pre><code>foreach (var field in type.GetProperty(&quot;fields&quot;).EnumerateArray())&#xA;{&#xA;    string name = field.GetString();&#xA;    typeDefinition.Fields.Add(new ObjectFieldDefinition(field.GetString()!, type: TypeReference.Parse(&quot;String&quot;), pureResolver: ctx =&gt;&#xA;    {&#xA;        var product = ctx.Parent&lt;Product&gt;();&#xA;        return product.SubTypeSpecific.ContainsKey(name) ? product.SubTypeSpecific[name] : null;&#xA;    }));&#xA;}&#xA;</code></pre>&#xA;<p>now I have &quot;moved out&quot; dynamic properties from a Dictionary (That is a sub-object in my documentDb) to own properties. Works well.</p>&#xA;<p>BUT:</p>&#xA;<ol>&#xA;<li>How can I extend my ProductFilter in the same fashion?</li>&#xA;</ol>&#xA;<p>I would like to extend my current Product-filter so its possible to search on the new dynamic property &quot;color&quot;</p>&#xA;<pre><code>getProducts(where : color : {eq :&quot;blue&quot; }}) {...}&#xA;</code></pre>&#xA;<p>I can create new FilterInputDefinition, but not extend existing filter (because there is no FilterInputTypeExtensions.CreateUnsafe()</p>&#xA;<ol start=""2"">&#xA;<li>If I manage to create the new filter, is there any way to update the IQueryable-generation so that the inputed color (&quot;blue&quot;)&#xA;So the query to my CosmosDb will be created automatically?</li>&#xA;</ol>&#xA;<p>Many thanks in advance.</p>&#xA;",816438,,,,2021-11-29 12:08:46,HotChocolate: Dynamic schemas and how to update filters accordingly,<asp.net-core><graphql><hotchocolate>,0,5,0,2021-11-29 12:08:46
70176121,2,,70175581,1,,"<p>You haven't specified what package you're using, so I can't be specific about what is the best way to do this. But generally, you can use something like string interpolation:</p>&#xA;<pre class=""lang-dart prettyprint-override""><code>final artistId = 1001;&#xA;final queryVariables = '''&#xA;{&#xA;  &quot;where&quot;: {&#xA;    &quot;artist_id&quot;: $artistId&#xA;  }&#xA;}&#xA;''';&#xA;&#xA;</code></pre>&#xA;<p>Note how we're using a normal string using <code>'''</code> and not a raw string (<code>r'''</code>) to be able to interpolate via <code>$</code>.</p>&#xA;",3785400,,,,2021-11-30 21:11:45,"",,0,1,0,2021-11-30 21:11:45
70179257,1,,,1,291,"<p>Does anybody know how can I get all orders based on <code>product id</code> by GraphQL?&#xA;There is no option available to query an argument in <a href=""https://shopify.dev/api/admin-graphql/2021-10/queries/orders"" rel=""nofollow noreferrer"">order's</a> object.&#xA;Is there another way to get what I want?</p>&#xA;<p>Thank You</p>&#xA;",12630053,,,,2022-09-15 17:25:46,Get all orders based on product id by GraphQL,<api><graphql><shopify><orders>,1,0,0,2021-12-01 04:49:46
70193204,2,,70189172,1,,"<p>I strongly suggest the use of <a href=""https://packagist.org/packages/shopify/shopify-api"" rel=""nofollow noreferrer"">https://packagist.org/packages/shopify/shopify-api</a> instead of implementing your own function/http requests.</p>&#xA;<p>Your query should be something like this</p>&#xA;<pre><code>query anynamehere($id: ID!){&#xA;  productVariant(id:$id){&#xA;    availableForSale&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and then you submit the ID as part of another entry of the array, check the example below:</p>&#xA;<pre class=""lang-php prettyprint-override""><code>  $query = [&#xA;    &quot;query&quot; =&gt; &#xA;        'query anynamehere($id: ID!){&#xA;          productVariant(id:$id){&#xA;            availableForSale&#xA;          }&#xA;        }',&#xA;    &quot;variables&quot;  =&gt; [&#xA;        'id' =&gt; $variantId&#xA;    ]&#xA;  ];&#xA;</code></pre>&#xA;<p>You should never concatenate the values as part of the query string (unless you want to deal with a lot of injection issues). Check more info about variables here <a href=""https://graphql.org/learn/queries/"" rel=""nofollow noreferrer"">https://graphql.org/learn/queries/</a></p>&#xA;",1075558,,,,2021-12-02 01:28:06,"",,0,1,0,2021-12-02 01:28:06
70193425,1,70216372,,1,263,"<p>I can get a list of releases (with details, such as download count) using this abridged graph:</p>&#xA;<pre><code>query {&#xA;  repository(owner: &quot;UserName&quot;, name: &quot;RepoName&quot;) {&#xA;    releases(last: 100, orderBy: { field: CREATED_AT, direction: DESC}) {&#xA;      nodes {&#xA;        releaseAssets(last: 4) {&#xA;          nodes {&#xA;            downloadCount&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The issue being that I have a limit in the pagination (100 entries).</p>&#xA;<p>Is there any way correctly get the total download count of the repo, maybe with number of releases without bumping into issues with the pagination limits?</p>&#xA;",1735672,,,,2021-12-03 15:02:31,How to get release count and release download count from Github GraphQL?,<graphql><github-api>,1,0,0,2021-12-02 02:11:19
70197418,2,,68379403,4,,<p>To Update any metafield you can use the mutation &quot;<strong>metafieldsSet</strong>&quot;</p>&#xA;<pre><code>mutation setMetafield($metafields: [MetafieldsSetInput!]!) {&#xA;  metafieldsSet(metafields:$metafields){&#xA;    metafields{&#xA;      id&#xA;      key&#xA;      value&#xA;    }&#xA;    userErrors{&#xA;      code&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p><strong>MetafieldsSetInput</strong> Requires owner id which you can get from shop query</p>&#xA;<pre><code>query shopDetails{&#xA;  shop{&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,12103503,,,,2021-12-02 10:01:40,"",,0,1,0,2021-12-02 10:01:40
70204978,2,,69735713,2,,"<p>The change with <code>header_editor_enable</code> is not released yet as of 02.12.2021.&#xA;What you can do is change your Gemfile to point to the latest master of the gem</p>&#xA;<pre class=""lang-rb prettyprint-override""><code># Gemfile&#xA;gem &quot;graphiql-rails&quot;, git: &quot;https://github.com/rmosolgo/graphiql-rails.git&quot;, branch: &quot;master&quot;&#xA;</code></pre>&#xA;<p>Then in your initializer, add <code>header_editor_enabled</code> option as</p>&#xA;<pre class=""lang-rb prettyprint-override""><code># config/initializers/graphiql.rb&#xA;GraphiQL::Rails.config.header_editor_enabled = true&#xA;</code></pre>&#xA;<p>You are good to go</p>&#xA;<p><a href=""https://i.stack.imgur.com/QEE1Q.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QEE1Q.png"" alt=""screen_shot_of_editor_with_header_section"" /></a></p>&#xA;",5898312,,5898312,2021-12-02 19:00:21,2021-12-02 19:00:21,"",,0,1,0,2021-12-02 18:52:10
70205708,1,70414897,,2,239,"<p>What I would like to do is to get specific data from Status for a group of 10-40 GitHub users from the organization. I would like to get the data in one batch. Currently, my solution queries the data using for loop in the code and a query below:</p>&#xA;<pre><code>{&#xA;    user(login: &quot;user1&quot;) {&#xA;    status {&#xA;         indicatesLimitedAvailability&#xA;         updatedAt&#xA;         createdAt&#xA;}&#xA;</code></pre>&#xA;<p>The disadvantage of this solution is I have to use sleep not to trigger API calls per minute limit in GitHub.</p>&#xA;<p>Would it be possible to transform the query to something like this (pseudocode):</p>&#xA;<pre><code>{&#xA;    user(login: &quot;user1&quot;, &quot;user2&quot;, &quot;user3&quot;, ...) {&#xA;    status {&#xA;         indicatesLimitedAvailability&#xA;         updatedAt&#xA;         createdAt&#xA;}&#xA;</code></pre>&#xA;<p>And some kind of list in the response?</p>&#xA;",2233244,,,,2021-12-19 20:03:53,Get status data for list of GitHub logins (users) using GraphQL in efficent way,<github><graphql><github-api>,1,0,0,2021-12-02 19:56:55
70216372,2,,70193425,1,,"<p>There isn't a field that sums downloadCount by release, or across releases, so the only option is to walk the graph and add them up yourself.</p>&#xA;<p>Release count is easier, as repository.releases has a totalCount, so you can get the total number of releases from that, and at least see whether pagination is a limit (where that totalCount is over 100). Pagination isn't so bad, here's an <a href=""https://stackoverflow.com/a/70039506/3830789"">earlier answer I provided on that topic</a>.</p>&#xA;<p>For a repo that has enough releases to need pagination. e.g.&#xA;this query:</p>&#xA;<pre><code>query{&#xA;  repository(owner: &quot;microsoft&quot;, name: &quot;typescript&quot;) {&#xA;    releases(first: 100, orderBy: {field: CREATED_AT, direction: DESC}) {&#xA;      nodes {&#xA;        releaseAssets(first: 10) {&#xA;          nodes {&#xA;            downloadCount&#xA;            name&#xA;          }&#xA;          totalCount&#xA;        }&#xA;        name&#xA;      }&#xA;      totalCount&#xA;      pageInfo {&#xA;        endCursor&#xA;        hasNextPage&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>ends with this response fragment:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>        &quot;totalCount&quot;: 146,&#xA;        &quot;pageInfo&quot;: {&#xA;          &quot;endCursor&quot;: &quot;Y3Vyc29yOnYyOpK5MjAxOC0wMi0xMlQyMTo0MDo1NyswMDowMM4Ak_Ha&quot;,&#xA;          &quot;hasNextPage&quot;: true&#xA;        }&#xA;</code></pre>&#xA;<p>So there's another page with 46 more nodes on it, which you can get at with:</p>&#xA;<pre><code>query{&#xA;  repository(owner: &quot;microsoft&quot;, name: &quot;typescript&quot;) {&#xA;    releases(first: 100, after: &quot;Y3Vyc29yOnYyOpK5MjAxOC0wMi0xMlQyMTo0MDo1NyswMDowMM4Ak_Ha&quot;, orderBy: {field: CREATED_AT, direction: DESC}) {&#xA;...&#xA;</code></pre>&#xA;",3830789,,,,2021-12-03 15:02:31,"",,0,2,0,2021-12-03 15:02:31
70258098,1,70259243,,0,634,"<p>I used the command <code>prefect server start --postgres-port=5433 --server-port=5001 --hasura-port=5002  --graphql-port=5003  --expose</code> to start prefect server at the allowed ports in my azure network. And when i do a <code>docker ps</code> i get</p>&#xA;<pre><code>CONTAINER ID   IMAGE                          COMMAND                  CREATED          STATUS                    PORTS                                   NAMES&#xA;873bfa5bd6bc   prefecthq/ui:core-0.15.7       &quot;/docker-entrypoint.…&quot;   23 minutes ago   Up 23 minutes (healthy)   80/tcp, 0.0.0.0:8080-&gt;8080/tcp          tmp_ui_1&#xA;9ca79a768265   prefecthq/apollo:core-0.15.7   &quot;tini -g -- bash -c …&quot;   23 minutes ago   Up 23 minutes (healthy)   0.0.0.0:5003-&gt;4200/tcp                  tmp_apollo_1&#xA;ab7c87ddbabb   prefecthq/server:core-0.15.7   &quot;tini -g -- python s…&quot;   23 minutes ago   Up 23 minutes                                                     tmp_towel_1&#xA;ef230baeddb5   prefecthq/server:core-0.15.7   &quot;tini -g -- bash -c …&quot;   23 minutes ago   Up 23 minutes (healthy)   127.0.0.1:5001-&gt;4201/tcp                tmp_graphql_1&#xA;410c38f08f83   hasura/graphql-engine:v1.3.3   &quot;graphql-engine serve&quot;   23 minutes ago   Up 23 minutes (healthy)   127.0.0.1:5002-&gt;3000/tcp                tmp_hasura_1&#xA;82748fbc9f4d   postgres:11                    &quot;docker-entrypoint.s…&quot;   23 minutes ago   Up 23 minutes (healthy)   127.0.0.1:5433-&gt;5432/tcp                tmp_postgres_1&#xA;</code></pre>&#xA;<p>my <code>~/.prefect/config.toml</code> is</p>&#xA;<pre><code>[server]&#xA;  endpoint = &quot;http://ipaddress:5003/graphql&quot;&#xA;&#xA;  [server.ui]&#xA;  apollo_url = &quot;http://ipaddress:5003/graphql&quot;&#xA;&#xA;</code></pre>&#xA;<p>Then as i start the server the status goes as in figure and redirects to ipaddress:8080/getting-started page&#xA;<a href=""https://i.stack.imgur.com/RJcyI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RJcyI.png"" alt=""enter image description here"" /></a></p>&#xA;<p>I checked the logs of the <code>tmp_towel_1</code> using <code>docker logs ab7c87ddbabb</code> as it wasnt showing healthy status, where i found out a few errors</p>&#xA;<pre><code>[Errno 111] Connect call failed ('some_ipaddress_which_i_dont_know_about', 3000)&quot;}&#xA;</code></pre>&#xA;<p>i suppose it is docker network ip or something. have no clue.&#xA;Can anyone suggest where i might be wrong?</p>&#xA;",14091289,,,,2021-12-08 09:17:26,Cant Access Prefect Server Remotely,<python><docker><graphql><prefect>,1,0,0,2021-12-07 10:00:16
70267606,2,,70267329,2,,<p>Could you try something like this? The <strong>.env</strong> files doesn't need quotes.</p>&#xA;<pre><code>GRAPHQL_HOST=https://githubuser-repo-wackycode-5000.githubpreview.dev/graphql&#xA;</code></pre>&#xA;<p>If that doesn't work try to create a dummy key and check if you can get it.</p>&#xA;<p><strong>.env</strong></p>&#xA;<pre><code>DUMMY=dummy&#xA;</code></pre>&#xA;<p><strong>index.tsx</strong></p>&#xA;<pre><code>const graphqlHost: string = (process.env.DUMMY as string);&#xA;</code></pre>&#xA;,1885401,,,,2021-12-07 22:16:51,"",,0,2,0,2021-12-07 22:16:51
70282746,1,,,0,166,"<p>Just starting out with GraphQL, I know I can get data like this</p>&#xA;<pre><code>allItems {&#xA;   id,&#xA;   itemName,&#xA;   pictureURL&#xA;}&#xA;</code></pre>&#xA;<p>And this returns an object with an array like this:</p>&#xA;<pre><code>{&#xA;  data: [...]&#xA;}&#xA;</code></pre>&#xA;<p>Any way to get data as a key-value object?</p>&#xA;<pre><code>{&#xA;  data: {&#xA;     item-id-1: {&#xA;        itemName: '...', pictureURL: '...'&#xA;     },&#xA;     item-id-2: {&#xA;        itemName: '...', pictureURL: '...'&#xA;     },&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",242500,,,,2021-12-08 22:59:37,GraphQL get all records in an object by id,<graphql>,0,0,0,2021-12-08 22:59:37
70293101,1,,,0,330,"<p>I'm using a fetch to retrieve data via a GraphQL request. However this code is on a template and my product IDs change depending on what page you're on. I'd like to pass a variable to the GraphQL variables section but I keep getting Bad Request errors. When I use a static int number in my query it works fine, but I need this to variable (currentProductId) to change.</p>&#xA;<p>Here's my code:</p>&#xA;<pre><code>fetch(&quot;/graphql&quot;, {&#xA;  method: &quot;POST&quot;,&#xA;  credentials: &quot;same-origin&quot;,&#xA;  headers: {&#xA;    &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;    Authorization: &quot;Bearer {{settings.storefront_api.token}}&quot;,&#xA;  },&#xA;  body: JSON.stringify({&#xA;    query: `query ExtendedProductsById(&#xA;  $productIds: [Int!]&#xA;  # Use GraphQL Query Variables to inject your product IDs&#xA;) {&#xA;  site {&#xA;    products(entityIds: $productIds, first: 5) {&#xA;      edges {&#xA;        node {&#xA;          name&#xA;          variants(first: 25) {&#xA;            edges {&#xA;              node {&#xA;                sku&#xA;                prices {&#xA;                  price {&#xA;                    currencyCode&#xA;                    value&#xA;                  }&#xA;                }&#xA;                defaultImage {&#xA;                  url(width: 1000)&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;          productOptions(first: 5) {&#xA;            edges {&#xA;              node {&#xA;                entityId&#xA;                displayName&#xA;                isRequired&#xA;                ... on CheckboxOption {&#xA;                  checkedByDefault&#xA;                }&#xA;                ... on MultipleChoiceOption {&#xA;                  values(first: 10) {&#xA;                    edges {&#xA;                      node {&#xA;                        entityId&#xA;                        label&#xA;                        isDefault&#xA;                        ... on SwatchOptionValue {&#xA;                          hexColors&#xA;                          imageUrl(width: 200)&#xA;                        }&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;`,&#xA;    variables: { productIds: [currentProductId] },&#xA;  }),&#xA;})&#xA;  .then((response) =&gt; response.json())&#xA;  .then((data) =&gt;&#xA;    setIndividualVariantPricing(&#xA;      data.data.site.products.edges[0].node.variants.edges&#xA;    )&#xA;  );&#xA;&#xA;</code></pre>&#xA;<p>The issue in question is in this line</p>&#xA;<pre><code>variables: { productIds: [currentProductId] },&#xA;</code></pre>&#xA;<p>This gives me a 400 Bad Request error, but this one below doesn't.</p>&#xA;<pre><code>variables: { productIds: [12345] },&#xA;&#xA;</code></pre>&#xA;<p>Above my fetch request I have a Handlebars variable that updates this to be the current product ID, but I console.logged and checked to make sure that it is an integer and would be feeding this correctly to my fetch. I'm not sure what the issue is or how to correctly pass a Javascript variable into my query body.</p>&#xA;<pre><code>var currentProductId = &quot;{{product.id}}&quot;; // 12345&#xA;parseInt(currentProductId);&#xA;</code></pre>&#xA;",16914731,,,,2021-12-09 16:10:37,How to use Javascript Variable in GraphQL Query Variables?,<javascript><graphql><fetch><handlebars.js>,0,3,0,2021-12-09 16:10:37
70313789,1,,,1,128,"<p>I have the following JSON scalar:</p>&#xA;<pre><code>&quot;&quot;&quot;&#xA;The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).&#xA;&quot;&quot;&quot;&#xA;scalar JSON&#xA;</code></pre>&#xA;<p>which I am trying to convert since my <code>query</code> is accepting <code>input: JSON</code>. When testing using graphql playground, query is JSON object thus the following works:</p>&#xA;<pre><code>query {&#xA;  carts(where: {&#xA;    owner:{id: &quot;xxx&quot;}&#xA;    store:{name: &quot;yyy&quot;}&#xA;  }) {&#xA;    id&#xA;  }&#xA;}&#xA;# query is the starting from the where: {...}&#xA;</code></pre>&#xA;<p>However when using ferry, I have trouble converting the <code>scalar JSON</code>, I've tried to convert it to <code>String</code> and/or <code>Map&lt;String, dynamic&gt;</code> but both are throwing errors. I am trying to write my custom serializer following this link:&#xA;<a href=""https://ferrygraphql.com/docs/custom-scalars/"" rel=""nofollow noreferrer"">https://ferrygraphql.com/docs/custom-scalars/</a>&#xA;however it is throwing the same error like when I'm trying converting it to <code>Map&lt;String, dynamic&gt;</code>, I have no idea what to convert to as dart do not have any type of JsonObject and usually <code>Map</code> is suffice for json representation. Any idea guys? I'd appreciate any clues as I've exhausted all of my options and am currently bruteforce trying</p>&#xA;",474330,,,,2021-12-11 08:52:14,Serialization of scalar JSON in Flutter's Ferry Graphql,<json><flutter><graphql><jsonserializer>,0,0,0,2021-12-11 08:52:14
70317006,1,,,1,478,"<p>I am trying to read the files that I have uploaded in shopify backend with the help of this code and <a href=""https://github.com/MONEI/Shopify-api-node"" rel=""nofollow noreferrer"">library</a>:</p>&#xA;<pre><code>const shopify = new Shopify({&#xA;  shopName: process.env.STORE_NAME,&#xA;  apiKey: process.env.API_KEY,&#xA;  password: process.env.STORE_PASSWORD,&#xA;});&#xA;const query = `{&#xA;  files {&#xA;    edges {&#xA;      node {&#xA;        alt&#xA;      }&#xA;    }&#xA;  }&#xA;}`;&#xA;shopify&#xA;  .graphql(query)&#xA;  .then((files) =&gt; console.log(files))&#xA;  .catch((err) =&gt; console.error(err));&#xA;</code></pre>&#xA;<p>But I am running into this error</p>&#xA;<pre><code>Error: Field 'files' doesn't exist on type 'QueryRoot'&#xA; at processTicksAndRejections (node:internal/process/task_queues:96:5) {&#xA;  locations: [ { line: 2, column: 7 } ],&#xA;  path: [ 'query', 'files' ],&#xA;  extensions: { code: 'undefinedField', typeName: 'QueryRoot', fieldName: 'files' },&#xA;  response: &lt;ref *1&gt; PassThrough &#xA;}&#xA;&#xA;</code></pre>&#xA;<p>Please if anyone can help me I will really appreciate it.&#xA;Thank you!</p>&#xA;",6578256,,6578256,2021-12-12 06:19:03,2022-10-03 12:52:10,Shopify read files from the backend,<node.js><graphql><shopify><shopify-api><shopify-api-node>,1,0,0,2021-12-11 16:40:47
70346355,1,,,0,825,"<p>I've never used GraphQL before so I am really lacking knowledge on how to go about this. I'm wanting to update product meta fields on Shopify and it appears this is the only way. What I've done so far is really fumbling...</p>&#xA;<p>My JSON is:</p>&#xA;<pre><code>{&#xA;  &quot;input&quot;: {&#xA;    &quot;id&quot;: &quot;gid://shopify/Product/749521178847&quot;,&#xA;    &quot;metafields&quot;: [&#xA;      {&#xA;        &quot;id&quot;: &quot;gid://shopify/Metafield/2223333&quot;,&#xA;        &quot;value&quot;: &quot;Training Grounds&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I've minified this to:</p>&#xA;<pre><code>{&quot;input&quot;:{&quot;id&quot;:&quot;gid://shopify/Product/749521178847&quot;,&quot;metafields&quot;:[{&quot;id&quot;:&quot;gid://shopify/Metafield/2223333&quot;,&quot;value&quot;:&quot;The Training Grounds&quot;}]}}&#xA;</code></pre>&#xA;<p>And am then using an HTTP request to:</p>&#xA;<pre><code>https://MYSTORE.myshopify.com/api/2021-10/graphql.json?query={&quot;input&quot;:{&quot;id&quot;:&quot;gid://shopify/Product/749521178847&quot;,&quot;metafields&quot;:[{&quot;id&quot;:&quot;gid://shopify/Metafield/2223333&quot;,&quot;value&quot;:&quot;The Training Grounds&quot;}]}}&#xA;</code></pre>&#xA;<p>I get the error:&#xA;SyntaxError: JSON.parse: unexpected end of data at line 1 column 1 of the JSON data</p>&#xA;<p>I don't know if any of this is correct. If it is, I don't know if <code>?query=</code> is the right variable to pass it through on.</p>&#xA;",2848541,,,,2022-03-10 12:20:01,Updating meta fields in Shopify with GrapQL,<graphql><shopify>,3,0,0,2021-12-14 09:13:03
70364649,1,,,1,181,"<p>I'd like to get the output of <code>git blame &lt;file&gt;</code> for all files in a repository recursively.</p>&#xA;<p>I want to do this without cloning the repository first, by using Github's GraphQL v4 api.</p>&#xA;<p>Is this possible?</p>&#xA;<p>I've managed to get a list of files via this query:</p>&#xA;<pre><code>query {&#xA;  repository(owner: &quot;some owner&quot;, name: &quot;some repository&quot;) {&#xA;    object(expression: &quot;HEAD:&quot;) {&#xA;      ... on Tree {&#xA;        entries {&#xA;          name&#xA;          type&#xA;          mode&#xA;          &#xA;          object {&#xA;            ... on Blob {&#xA;              byteSize&#xA;              text&#xA;              isBinary&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>as well as a single file's git blame via this query:</p>&#xA;<pre><code>query {&#xA;  repositoryOwner(login: &quot;some owner&quot;) {&#xA;      repository(name: &quot;some repo&quot;) {&#xA;      object(expression: &quot;some branch&quot;) {&#xA;        ... on Commit {&#xA;          blame(path: &quot;some/file/path.js&quot;) {&#xA;            ranges {&#xA;              startingLine&#xA;              endingLine&#xA;              age&#xA;              commit {&#xA;                oid&#xA;                author {&#xA;                  name&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Is it possible to combine these queries into one?</p>&#xA;<p>If not, it probably makes sense to clone the repo first and run git blame recursively locally, right?</p>&#xA;",5854364,,,,2021-12-15 13:37:41,Get git blame for full Github repository via api,<git><graphql><github-api><git-blame>,0,0,0,2021-12-15 13:37:41
70386761,1,,,0,33,"<p>I'm trying to get a <code>test-script</code> to load on my development shopify store using GraphQL (Graphiql test app). The Script Tag is successfully created. However, the test-script, which should be injected into the shopify store, does not display. I believe the issue stems from my misunderstanding of the <code>ScriptTagInput.src</code> field from the <a href=""https://shopify.dev/api/admin-graphql/2021-10/mutations/scripttagcreate"" rel=""nofollow noreferrer"">GraphQL docs</a>.</p>&#xA;<p>I'm not sure where to place the <code>test-script.js</code> file in order to access it as a URL in the mutation.</p>&#xA;<p><strong>test-script.js</strong></p>&#xA;<pre><code>console.log('this is coming from the test script api');&#xA;</code></pre>&#xA;<p><strong>GraphQL Mutation:</strong></p>&#xA;<pre><code>mutation scriptTagCreate($input: ScriptTagInput!) {&#xA;    scriptTagCreate(input: $input) {&#xA;      scriptTag {&#xA;        id&#xA;      }&#xA;      userErrors {&#xA;        field&#xA;        message&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;&#xA;{&#xA;  &quot;input&quot;: {&#xA;    &quot;src&quot;: &quot;https://d74c-12-216-7-134.ngrok.io/test-script.js&quot;,&#xA;    &quot;displayScope&quot;: &quot;ALL&quot;&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p><strong>Current File Structure:</strong></p>&#xA;<p><a href=""https://i.stack.imgur.com/Q4Pae.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Q4Pae.png"" alt=""enter image description here"" /></a></p>&#xA;<p><a href=""https://github.com/Shopify/shopify-app-node/tree/sample_app_updates"" rel=""nofollow noreferrer"">This</a> is the repo I cloned using the Shopify CLI. It has removed the use of Next.js.</p>&#xA;<p>How do I get the <code>test-script.js</code> script URL so that I can have it loaded in my Shopify development store?</p>&#xA;",17026016,,,,2021-12-16 23:23:38,How to get Script Tag to render?,<javascript><reactjs><graphql><shopify><shopify-app>,0,0,0,2021-12-16 23:23:38
70414784,2,,60922054,5,,"<p>I wanted to point our something else that may help.</p>&#xA;<p>You can get more details about a language (i.e. primary, secondary etc) by looking at the language <code>size</code>. Comparing the <code>totalSize</code> for the whole repo to the <code>size</code> for each language it has.</p>&#xA;<p>The following query (example for pytorch) will get the data you need. Put it into the <a href=""https://docs.github.com/en/graphql/overview/explorer"" rel=""noreferrer"">GH's GQL Explorer</a> to check it out.</p>&#xA;<pre><code>{&#xA;  repository(name: &quot;pytorch&quot;, owner: &quot;pytorch&quot;) {&#xA;    languages(first: 100) {&#xA;      totalSize&#xA;      edges {&#xA;        size&#xA;        node {&#xA;          name&#xA;          id&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>You will get an output of the form</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;repository&quot;: {&#xA;      &quot;languages&quot;: {&#xA;        &quot;totalSize&quot;: 78666590,&#xA;        &quot;edges&quot;: [&#xA;          {&#xA;            &quot;size&quot;: 826272,&#xA;            &quot;node&quot;: {&#xA;              &quot;name&quot;: &quot;CMake&quot;,&#xA;              &quot;id&quot;: &quot;MDg6TGFuZ3VhZ2U0NDA=&quot;&#xA;            }&#xA;          },&#xA;          {&#xA;            &quot;size&quot;: 29256797,&#xA;            &quot;node&quot;: {&#xA;              &quot;name&quot;: &quot;Python&quot;,&#xA;              &quot;id&quot;: &quot;MDg6TGFuZ3VhZ2UxNDU=&quot;&#xA;            }&#xA;          }, ...&#xA;</code></pre>&#xA;<p>To get % for each language just do <code>size</code> / <code>totalSize</code> * 100</p>&#xA;",15471232,,,,2021-12-19 19:44:40,"",,0,0,0,2021-12-19 19:44:40
70416500,2,,64827642,0,,"<p>In my case, since I use GraphQL for queries I should add <code>/graphql</code> at the end of the production URL as we do for <code>localhost:1337/graphql</code>.</p>&#xA;",14065529,,,2021-12-20 01:57:22,2021-12-20 01:57:22,"",,0,0,0,2021-12-20 01:02:59
70423411,1,70426350,,1,173,<p>How can I get the type definition from a nested object?</p>&#xA;<p>In this example I get a list of entities(products) how can I access the type definition for the entity(node).</p>&#xA;<p>This is compiled using <code>relay-compiler</code></p>&#xA;<pre><code>export type ProductAutoSuggestQueryResponse = {&#xA;     node: {&#xA;         products?: {&#xA;             edges: ReadonlyArray&lt;{&#xA;                 node: {&#xA;                     name: string;&#xA;                     id: string;&#xA;                     currencies: ReadonlyArray&lt;string&gt; | null;&#xA;                };&#xA;            } | null&gt; | null;&#xA;        } | undefined;&#xA;    } | null;&#xA;};&#xA;</code></pre>&#xA;<p>I have tried using <code>Pick&lt;&gt;</code> but it seem to get very complex and the array is causing me issue.</p>&#xA;,1218040,,,,2021-12-20 18:21:24,Nest object type destructuring,<typescript><graphql><relay>,1,5,0,2021-12-20 14:34:40
70429520,1,,,0,433,"<p>I'm trying to get the price of a crypto coin using bitquery gql. I'm a total beginer.</p>&#xA;<p>I have a query that is working, and a node server.</p>&#xA;<p>My js code is in app.js and when i run <code>node app.js</code>, i get: <code>{ data: { ethereum: { dexTrades: [Array] } } }</code> i don't know what this means... Is my information inside of that array, or is it just not working properly? How do i go about getting just the &quot;quotePrice&quot; part of my query into a variable?</p>&#xA;<p>This is my query that works on graphql.bitquery.io/ide :</p>&#xA;<pre><code>{&#xA;  ethereum(network: bsc) {&#xA;    dexTrades(&#xA;      options: {limit: 1, asc: &quot;timeInterval.minute&quot;}&#xA;      date: {since: &quot;2020-11-01&quot;}&#xA;      exchangeName: {in: [&quot;Pancake&quot;, &quot;Pancake v2&quot;]}&#xA;      baseCurrency: {is: &quot;0x860947ae09058cc028aaf2ac75258060c61f2dfd&quot;}&#xA;      quoteCurrency: {is: &quot;0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c&quot;}&#xA;    ) {&#xA;      timeInterval {&#xA;        minute(count: 5)&#xA;      }&#xA;      baseCurrency {&#xA;        symbol&#xA;        address&#xA;      }&#xA;      baseAmount&#xA;      quoteCurrency {&#xA;        symbol&#xA;        address&#xA;      }&#xA;      quoteAmount&#xA;      trades: count&#xA;      quotePrice&#xA;      maximum_price: quotePrice(calculate: maximum)&#xA;      minimum_price: quotePrice(calculate: minimum)&#xA;      open_price: minimum(of: block, get: quote_price)&#xA;      close_price: maximum(of: block, get: quote_price)&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Here is my app.js file:</p>&#xA;<pre><code>import fetch from &quot;node-fetch&quot;;&#xA;&#xA;const query = `&#xA;  {&#xA;  ethereum(network: bsc) {&#xA;    dexTrades(&#xA;      options: {limit: 1, asc: &quot;timeInterval.minute&quot;}&#xA;      date: {since: &quot;2020-11-01&quot;}&#xA;      exchangeName: {in: [&quot;Pancake&quot;, &quot;Pancake v2&quot;]}&#xA;      baseCurrency: {is: &quot;0x860947ae09058cc028aaf2ac75258060c61f2dfd&quot;}&#xA;      quoteCurrency: {is: &quot;0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c&quot;}&#xA;    ) {&#xA;      timeInterval {&#xA;        minute(count: 5)&#xA;      }&#xA;      baseCurrency {&#xA;        symbol&#xA;        address&#xA;      }&#xA;      baseAmount&#xA;      quoteCurrency {&#xA;        symbol&#xA;        address&#xA;      }&#xA;      quoteAmount&#xA;      trades: count&#xA;      quotePrice&#xA;      maximum_price: quotePrice(calculate: maximum)&#xA;      minimum_price: quotePrice(calculate: minimum)&#xA;      open_price: minimum(of: block, get: quote_price)&#xA;      close_price: maximum(of: block, get: quote_price)&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;`;&#xA;const url = &quot;https://graphql.bitquery.io/&quot;;&#xA;const opts = {&#xA;    method: &quot;POST&quot;,&#xA;    headers: {&#xA;        &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;      &quot;X-API-KEY&quot;: &quot; my bitquery api key &quot;&#xA;    },&#xA;    body: JSON.stringify({&#xA;        query&#xA;    })&#xA;};&#xA;fetch(url, opts)&#xA;    .then(res =&gt; res.json())&#xA;    .then(console.log)&#xA;    .catch(console.error);&#xA;</code></pre>&#xA;",15463745,,,,2021-12-21 00:44:05,How to use bitquery gql with javascript to get price of a crypto coin,<javascript><node.js><graphql><graphql-js><gql>,0,4,0,2021-12-21 00:44:05
70451791,2,,70451595,0,,"<p>Please notice that <code>setSelectOption</code> don't update the value immediately.&#xA;So, if you want to see the changes after that line, Try to add <code>selectOption</code> as a dependency or create new <code>useEffect</code> block which only include <code>selectOption</code></p>&#xA;<pre><code>useEffect(() =&gt; {&#xA;  setSelectOption(data?.categories?.edges?.map(first =&gt; first?.node?.children?.edges?.map(second =&gt; second?.node?.name)));&#xA;  console.log('select option' + selectOption);&#xA;}, [data, setSelectOption, selectOption]);&#xA;</code></pre>&#xA;<p>or</p>&#xA;<pre><code>useEffect(() =&gt; {&#xA;  console.log('select option' + selectOption);&#xA;}, [selectOption])&#xA;</code></pre>&#xA;<p>For your Graphql query, try below code.</p>&#xA;<pre><code>export const GET_SELECT = gql`&#xA;  query ($selectedOption: String!) {&#xA;    getSelect() {&#xA;      categories(where: { name: $selectedOption }) {&#xA;        edges {&#xA;          node {&#xA;            children {&#xA;              edges {&#xA;                node {&#xA;                  name&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;",12519572,,12519572,2021-12-22 17:09:30,2021-12-22 17:09:30,"",,0,3,0,2021-12-22 15:55:16
70456768,2,,70451595,0,,"<p>ok i figured out that the Graphql variable 'name' is returning an array so i had to change the query like so:</p>&#xA;<pre><code>const GET_SELECT = gql` &#xA;query getSelect($selectedOption: [String!]) {&#xA;  categories(where: {name: $selectedOption}) {&#xA;    edges {&#xA;      node {&#xA;        children {&#xA;          edges {&#xA;            node {&#xA;              name&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;`;&#xA;</code></pre>&#xA;<p>and in the react component:</p>&#xA;<pre><code>const { data, loading, error } = useQuery(GET_SELECT, {&#xA;        variables: { name: [selectOption] },&#xA;    });&#xA;</code></pre>&#xA;<p>now everything is working properly &#xA;Anyway... Thank's @endmaster0809 for your help!</p>&#xA;",17741672,,,,2021-12-23 01:21:21,"",,0,0,0,2021-12-23 01:21:21
70460614,1,70460725,,2,1129,"<p>I have a super simple GraphQl query, but im having trouble to make the query dynamic based on input. Lets say you will get a string in javascript that you want to pass along to the query, how is it done? Take example below, how would i replace the hardcoded string of &quot;3111&quot; on the Sku field in the product but instead inserting the value from the variable myString? I am just getting errors when i try to pass it along.</p>&#xA;<pre><code>let myString = &quot;3111&quot;&#xA;&#xA;`query getProductBySku {&#xA;        site {&#xA;          product(sku: &quot;3111&quot;) {&#xA;            id&#xA;            entityId&#xA;            name&#xA;            sku&#xA;          }&#xA;        }&#xA;      }`&#xA;</code></pre>&#xA;",15024992,,,,2021-12-23 10:21:26,How to pass javascript variable to graphql query?,<javascript><reactjs><graphql><graphql-js>,1,0,0,2021-12-23 10:13:10
70460725,2,,70460614,4,,"<p>Have a look here: <a href=""https://graphql.org/graphql-js/passing-arguments/"" rel=""nofollow noreferrer"">https://graphql.org/graphql-js/passing-arguments/</a></p>&#xA;<p>In your case scenario:</p>&#xA;<pre><code>var query = `query getProductBySku($sku: String) {&#xA;        site {&#xA;          product(sku: $sku) {&#xA;            id&#xA;            entityId&#xA;            name&#xA;            sku&#xA;          }&#xA;        }&#xA;      }&#xA;`;&#xA;&#xA;fetch('/graphql', {&#xA;  method: 'POST',&#xA;  headers: {&#xA;    'Content-Type': 'application/json',&#xA;    'Accept': 'application/json',&#xA;  },&#xA;  body: JSON.stringify({&#xA;    query,&#xA;    variables: { &quot;3111&quot; }, // this refers to SKU&#xA;  })&#xA;})&#xA;  .then(r =&gt; r.json())&#xA;  .then(data =&gt; console.log('data returned:', data));&#xA;</code></pre>&#xA;<hr />&#xA;<p>Basically other than creating a query that allows argument to pass, you need a POST request with the body setup to accomodate the inputs which are expected to be fulfilled</p>&#xA;",9231145,,,,2021-12-23 10:21:26,"",,0,3,0,2021-12-23 10:21:26
70461677,1,,,0,231,"<p>We want to vend some information through extensions in our GraphQL response. We are using DataFetcherResults as a return type of our resolvers and using the LocalContext in the DataFetcherResult to pass down information among resolvers.</p>&#xA;<p>Link for extensions -&gt; <a href=""http://spec.graphql.org/October2021/#sec-Response-Format"" rel=""nofollow noreferrer"">http://spec.graphql.org/October2021/#sec-Response-Format</a></p>&#xA;<p>The problem we are facing is that we are not able to use both of them together.&#xA;LocalContext is present in DataFetcher class and hence we have to use that whereas extensions are present in ExecutionResult class. We want to use both of them together which we are unable to do so.</p>&#xA;<p>Anyone can provide on ways to achieve this?</p>&#xA;",17747435,,,,2021-12-23 11:41:41,Using both local context and extensions together in a GraphQL response,<java><graphql><graphql-java>,0,0,0,2021-12-23 11:41:41
70469021,1,,,0,67,"<p>I am trying to implement inner query logic in GraphQL.</p>&#xA;<p>Extracting matched user_id from <code>orders</code> and <code>area</code> (i.e. applying where condition on user_id fetched from orders)</p>&#xA;<pre><code>query getOrders{&#xA;    orders&#xA;        **user_id**   &lt;-- this user_id in XXXX area&#xA;        item {&#xA;            name&#xA;            area(where: {**user_id**: {_eq: &lt;--XXXX---&gt;}}) { &lt;-- here, in where condition&#xA;                {&#xA;                address}}}}&#xA;</code></pre>&#xA;<p>Since graphgl has parallel mechanism, I am performing with the help of 2 separate queries, now trying for best practices(fine tuning the code). Thanks in advance :)</p>&#xA;",3397828,,,,2021-12-24 02:21:24,how to pass inner query results to outer query in graphql,<graphql><graphql-js><hasura>,0,0,0,2021-12-24 02:21:24
70471622,2,,59393869,0,,"<p>It took me some time to understand your comment so I will post the answer in full. The key is to use Github's advanced search “syntax” in the query string,  see <a href=""https://github.com/search/advanced"" rel=""nofollow noreferrer"">here</a> for examples.</p>&#xA;<p>The following query will find all repositories of user “github” as well as the graphql-js repository of user “graphql”:</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>query {&#xA;  search(query: &quot;user:github repo:graphql/graphql-js&quot; type: REPOSITORY first: 10) {&#xA;    nodes {&#xA;      ... on Repository {&#xA;        name&#xA;        description&#xA;        updatedAt&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",5536516,,,,2021-12-24 09:52:45,"",,0,0,0,2021-12-24 09:52:45
70479976,1,70480423,,0,40,"<p>In Graphql, I can create a <code>union</code> such as the following:</p>&#xA;<pre><code>union SearchResult = Book | Movie&#xA;</code></pre>&#xA;<p>Is there a way I can do this for plain strings? Something like this:</p>&#xA;<pre><code>union AccountRole = &quot;admin&quot; | &quot;consumer&quot;&#xA;</code></pre>&#xA;",15656276,,,,2021-12-25 13:43:44,Can I use a GraphQL union for plain strings?,<graphql>,1,0,0,2021-12-25 12:19:43
70498775,1,,,0,89,"<p>Hi I am working on Quarkus and I am using smallrye-graphql extension.&#xA;My project is working well in dev mode.&#xA;But its not working on production mode.&#xA;I have got this error when I go to this url <a href=""http://appointment.pannucorp.com/q/graphql-ui"" rel=""nofollow noreferrer"">/q/graphql-ui/</a></p>&#xA;<p>I am not sure why this is not working. I am wondering if quarkus is not ready yet to handle this?.</p>&#xA;",15356636,,,,2021-12-27 17:50:14,RESTEASY003210: Could not find resource for full path: for graphQL on Quarkus,<graphql><quarkus><production><mode>,0,1,0,2021-12-27 17:50:14
70506200,1,70506712,,0,138,"<p>I'm using GraphQL with Apollo Client in my react project.&#xA;The issue is when I'm fetching data of elements with the field id,</p>&#xA;<p>For example:&#xA;the schema</p>&#xA;<pre><code>Person {&#xA;id&#xA;name&#xA;}&#xA;</code></pre>&#xA;<p>In case the id is nullable and has an empty value, the result is an array of Person objects but with the same Person.</p>&#xA;<p>Is id a special field in Apollo client cache implementation?</p>&#xA;",9596473,,,,2021-12-28 12:07:12,Apollo Client id nullable field,<reactjs><graphql><apollo-client>,1,0,0,2021-12-28 11:10:30
70510289,2,,70501642,0,,"<p>So after staring in to the abyss I realized javascript........ AN OBJECT IS BEING PASSED IN TO THE <code>find()</code>... So I simply just took out the object in to its own variable and broke it down like so:</p>&#xA;<pre><code>      while (users.length &lt; limit) {&#xA;        const query = {&#xA;          $and: ignoreUserObjectIDs.map((oID) =&gt; {&#xA;            return { _id: { $ne: oID } };&#xA;          }),&#xA;          objectives: { $in: objectives },&#xA;        };&#xA;&#xA;        if (index &gt;= 0) {&#xA;          query[&quot;ranking&quot;] = ranking;&#xA;        }&#xA;        if (index &gt;= ranking.expLevel) {&#xA;          query[&quot;expLevel&quot;] = { $gte: expLevel - 1, $lte: expLevel + 1 };&#xA;        }&#xA;        if (index &gt;= ranking.industry) {&#xA;          query[&quot;industries&quot;] = { $in: industries };&#xA;        }&#xA;        if (index &gt;= ranking.skills) {&#xA;          query[&quot;skills.self&quot;] = { $in: skills };&#xA;        }&#xA;        if (index &gt;= ranking.interests) {&#xA;          query[&quot;interests&quot;] = { $in: interests };&#xA;        }&#xA;&#xA;        const fetchCondUsers = await User.find(query).limit(&#xA;          limit - users.length&#xA;        );&#xA;&#xA;        users = users.concat(fetchCondUsers);&#xA;        ignoreUserObjectIDs = ignoreUserObjectIDs.concat(&#xA;          fetchCondUsers.map((user) =&gt; {&#xA;            return new ObjectId(user.id);&#xA;          })&#xA;        );&#xA;&#xA;        if (index === 0) break;&#xA;        index--;&#xA;      }&#xA;</code></pre>&#xA;<p>In my defence I'm working on 3 different projects in three different languages so I tend to forget about the simple things... Anyways, if anyone else had similar issues, here you go!</p>&#xA;",7675202,,,,2021-12-28 17:09:01,"",,0,0,0,2021-12-28 17:09:01
70523803,2,,59393869,0,,"<p>My understanding of your question is that you want to input a list of &quot;known&quot; repos and output information about them. In this case you can form a query of the following type.</p>&#xA;<pre><code>{&#xA;  nodes(ids: [&quot;node_id_1&quot;, &quot;node_id_2&quot;]) {&#xA;    ... on Repository {&#xA;      nameWithOwner&#xA;      createdAt&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Here the <code>ids</code> are the <code>node_ids</code> of the repositories you are interested in. You can obtain these by individual GraphQL calls as follows</p>&#xA;<pre><code>{&#xA;  repository(owner: &quot;owner&quot;, name: &quot;name&quot;) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",15471232,,,,2021-12-29 18:59:47,"",,0,0,0,2021-12-29 18:59:47
70528857,1,70613543,,5,794,"<p>I have a react app with a keystone.js backend and a graphql api</p>&#xA;<p>I have a list of products in keystones.js and a simple graphql query</p>&#xA;<pre><code>import gql from &quot;graphql-tag&quot;;&#xA;&#xA;export const ALL_PRODUCTS_QUERY = gql`&#xA;    query ProductData{&#xA;        allProducts{&#xA;            id&#xA;            price&#xA;            description&#xA;            name&#xA;        }&#xA;    }&#xA;`&#xA;</code></pre>&#xA;<p>I'm using apollo codegen to generate the types for the graphql so I get</p>&#xA;<pre><code>export interface ProductData_allProducts {&#xA;  __typename: &quot;Product&quot;;&#xA;  id: string;&#xA;  price: number | null;&#xA;  description: string | null;&#xA;  name: string | null;&#xA;}&#xA;&#xA;export interface ProductData {&#xA;  /**&#xA;   *  Search for all Product items which match the where clause. &#xA;   */&#xA;  allProducts: (ProductData_allProducts | null)[] | null;&#xA;}&#xA;</code></pre>&#xA;<p>In React I can list the products and use the types in the code, here I'm using <code>&lt;ProductData&gt;</code></p>&#xA;<pre><code>import { useQuery } from &quot;@apollo/client&quot;;&#xA;import {ALL_PRODUCTS_QUERY} from '../queries/index'&#xA;import { ProductData } from &quot;../generated/ProductData&quot;;&#xA;&#xA;const Products = () =&gt; {&#xA;&#xA;    const {data, error, loading} = useQuery&lt;ProductData&gt;(ALL_PRODUCTS_QUERY)&#xA;    if(loading) return &lt;p&gt;Loading&lt;/p&gt;&#xA;    if(error) return &lt;p&gt;Error: {error.message}&lt;/p&gt; &#xA;&#xA;    return (&#xA;        &lt;div&gt;&#xA;            &lt;div&gt;&#xA;                {data?.allProducts?.map(product =&gt; (&#xA;                    &lt;div&gt;{product?.name}&lt;/div&gt;&#xA;                ))}&#xA;            &lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;    );&#xA;};&#xA;&#xA;export default Products;&#xA;</code></pre>&#xA;<p>Instead of using <code>&lt;div&gt;{product?.name}&lt;/div&gt;</code> I would like to create a <code>Product</code> component</p>&#xA;<pre><code>import React from 'react';&#xA;import { ProductData, ProductData_allProducts } from '../generated/ProductData';&#xA;&#xA;const Product = ({product}:ProductData_allProducts) =&gt; {&#xA;    return (&#xA;        &lt;p&gt;{product.name}&lt;/p&gt;&#xA;    );&#xA;};&#xA;&#xA;export default Product; &#xA;</code></pre>&#xA;<p>but what should the type be for <code>product</code> here I get an error saying</p>&#xA;<pre><code>Property 'product' does not exist on type 'ProductData_allProducts'.    &#xA;</code></pre>&#xA;<p>and on the Products page</p>&#xA;<pre><code>import { useQuery } from &quot;@apollo/client&quot;;&#xA;import {ALL_PRODUCTS_QUERY} from '../queries/index'&#xA;import { ProductData } from &quot;../generated/ProductData&quot;;&#xA;import Product from &quot;./Product&quot;;&#xA;&#xA;&#xA;const Products = () =&gt; {&#xA;&#xA;    const {data, error, loading} = useQuery&lt;ProductData&gt;(ALL_PRODUCTS_QUERY)&#xA;    if(loading) return &lt;p&gt;Loading&lt;/p&gt;&#xA;    if(error) return &lt;p&gt;Error: {error.message}&lt;/p&gt; &#xA;&#xA;    return (&#xA;        &lt;div&gt;&#xA;            &lt;div&gt;&#xA;                {data?.allProducts?.map(product =&gt; (&#xA;                    &lt;Product product={product} /&gt;&#xA;                ))}&#xA;            &lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;    );&#xA;};&#xA;&#xA;export default Products;    &#xA;</code></pre>&#xA;<p>I now get an error on the product prop</p>&#xA;<pre><code>Type '{ product: ProductData_allProducts | null; }' is not assignable to type 'IntrinsicAttributes &amp; ProductData_allProducts'.&#xA;  Property 'product' does not exist on type 'IntrinsicAttributes &amp; ProductData_allProducts'.    &#xA;</code></pre>&#xA;<p>So what should the types be on the Product page when passing in the product</p>&#xA;",12854870,,,,2022-01-06 20:58:06,How to use Graphql typescript types in react,<reactjs><typescript><graphql>,3,0,0,2021-12-30 07:58:30
70529315,2,,70528857,0,,<p>You are trying to destructure a property that doesnt exist on the type.<br />&#xA;This should work:</p>&#xA;<pre><code>type Product = {&#xA;  __typename: &quot;Product&quot;;&#xA;  id: string;&#xA;  price: number | null;&#xA;  description: string | null;&#xA;  name: string | null;&#xA;};&#xA;&#xA;const ProductComponent: FC&lt;Product&gt; = ({ name }) =&gt; {&#xA;  return &lt;p&gt;{name}&lt;/p&gt;;&#xA;};&#xA;&#xA;export default ProductComponent;&#xA;</code></pre>&#xA;,9993480,,,,2021-12-30 08:46:18,"",,0,5,0,2021-12-30 08:46:18
70548186,2,,70528857,1,,<p>Does the following work for you?</p>&#xA;<pre><code>interface ProductComponentProps {&#xA;    product: ProductData_allProducts&#xA;}&#xA;&#xA;&#xA;const Product = ({product}: ProductComponentProps) =&gt; {&#xA;    return (&#xA;        &lt;p&gt;{product.name}&lt;/p&gt;&#xA;    );&#xA;};&#xA;&#xA;</code></pre>&#xA;,5555803,,,,2022-01-01 10:08:47,"",,0,2,0,2022-01-01 10:08:47
70551154,1,,,1,192,"<p>I watched <a href=""https://www.youtube.com/watch?v=i5pIszu9MeM"" rel=""nofollow noreferrer"">Advanced patterns for GitHub's GraphQL API</a> by Rea Loretta on Youtube and i saw the below code (at <a href=""https://www.youtube.com/watch?v=i5pIszu9MeM&amp;t=491s"" rel=""nofollow noreferrer"">08:20</a>)</p>&#xA;<pre><code>{&#xA;  organization(loqin:&quot;toast-ninja&quot;) {&#xA;   repositories( first: 100) {&#xA;    nodes {&#xA;     name&#xA;     pullRequests(first: 100) {&#xA;      nodes { number title }&#xA;     }&#xA;    }&#xA;   }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>Is this call a nested query and how can i achieve this in nodejs + typegraqhql + apollo server express ?&#xA;I've only been working with graphql for 1 month and sorry for any mistakes in this post</p>&#xA;",16820266,,724039,2022-01-02 13:57:27,2022-01-02 13:57:27,Nested queries in GraphQL,<node.js><graphql><apollo>,0,2,0,2022-01-01 19:00:09
70554134,1,,,0,28,"<p>Currently, I have a large mutation that creates <code>Post</code>s that could optionally have attributes, which sometimes come in the form of linked nodes. So a post might have a body, created_date, and other properties but might also have a <code>creator</code> which is a connected node.</p>&#xA;<p>Sometimes these have <code>rating</code>s which creates and connects to new <code>Rating</code> nodes. The problem is, my mutation accepts these variables either way, so whether I have a value for the rating or not, it seems the mutation will create a new <code>Rating</code>. There are other examples, <code>Rating</code> is not the only type of connected node that may or may not appear in <code>Post</code>s.</p>&#xA;<p>So my question is: other than creating a new mutation for every combination of variables (there are very many), is there a way to tell the mutation to totally ignore the field if there's no value submitted?</p>&#xA;<pre><code>mutation NEW_POST($body: String, $rating: Float) {&#xA;  createPosts(input: { body: $body, rating: { create: { node: { value: $rating }}}}){&#xA;</code></pre>&#xA;<p>Here is a shortened version of what the NEW_POST looks like. I truncated it for simplicity. Essentially, regardless of <code>$rating</code> being a value or null, it still creates and connects to a new <code>Rating</code> node. Any way to tell the system to only create if <code>$rating</code> exists? It looks like it just creates an empty node when <code>$rating</code> is empty.</p>&#xA;",1604072,,15293191,2022-01-02 06:59:58,2022-01-02 07:25:04,Can I tell Neo4j GraphQL to ignore variables if they are null?,<neo4j><graphql>,1,0,0,2022-01-02 06:53:18
70554265,2,,70554134,0,,"<p>Actually this one was solved by passing in variables that were empty objects rather than Float type variables. Instead of having <code>{ create: { node: { value: $rating }}}</code> live in the mutation itself, I optionally send that entire thing when I send my variables. So if no $rating value exists, the mutation receives {} instead of a full create action with no value.</p>&#xA;",1604072,,,,2022-01-02 07:25:04,"",,0,0,0,2022-01-02 07:25:04
70565522,1,,,0,44,"<p>I have a question about php objects:&#xA;I get an object with multiple arrays from an api query but I have no idea how to convert the object in one array or string. I want to view the api response with a foreach loop. I have no idea how to handle the depth of the object.</p>&#xA;<p>The dd of the object looks like this: <a href=""https://i.stack.imgur.com/lPZqp.png"" rel=""nofollow noreferrer"">object tree</a></p>&#xA;<p>I would be very happy if you can help me!</p>&#xA;",17693746,,,,2022-01-03 12:05:06,php object with multiple arrays -> foreach,<php><api><graphql>,0,1,0,2022-01-03 12:05:06
70575374,2,,70574880,0,,"<p>Can  you try deleting your <strong>package-lock.json</strong> file may help as per the <a href=""https://github.com/graphql/express-graphql/issues/584"" rel=""nofollow noreferrer"">github issue</a></p>&#xA;",1749403,,,,2022-01-04 07:35:54,"",,0,0,0,2022-01-04 07:35:54
70586796,1,70586948,,1,442,"<p>I have this gql query that searches for a certain product, but this ID is hardcoded&#xA;how can I replace this ID <strong>(product(id: &quot;apple-imac-2021&quot;))</strong> with a variable ?</p>&#xA;<pre><code>const CURRENT_PRODUCT = gql`&#xA;    query {&#xA;        product(id: &quot;apple-imac-2021&quot;) {&#xA;            name&#xA;            inStock&#xA;            gallery&#xA;            description&#xA;            brand&#xA;            attributes {&#xA;                name&#xA;                type&#xA;                items {&#xA;                    value&#xA;                }&#xA;            }&#xA;            prices {&#xA;                currency {&#xA;                    label&#xA;                    symbol&#xA;                }&#xA;                amount&#xA;            }&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;",15603885,,62576,2022-01-05 01:32:35,2022-01-05 01:46:08,using variables in gql apollo query,<reactjs><apollo><gql>,1,2,0,2022-01-05 01:12:01
70586948,2,,70586796,0,,"<p>based on this example :</p>&#xA;<p>that is the solution, you should do the following in query :</p>&#xA;<pre><code>query product($id : String!) {&#xA;        product(id: $id) {&#xA;            name&#xA;            inStock&#xA;            gallery&#xA;            description&#xA;            brand&#xA;            attributes {&#xA;                name&#xA;                type&#xA;                items {&#xA;                    value&#xA;                }&#xA;            }&#xA;            prices {&#xA;                currency {&#xA;                    label&#xA;                    symbol&#xA;                }&#xA;                amount&#xA;            }&#xA;        }&#xA;    }&#xA;    `;&#xA;</code></pre>&#xA;<p>and then assign the $id variable when using useQuery() like that :</p>&#xA;<pre><code>    const { loading, data } = useQuery(CURRENT_PRODUCT, {&#xA;        variables: {&#xA;            id: id,&#xA;        },&#xA;    });&#xA;</code></pre>&#xA;",15603885,,,,2022-01-05 01:46:08,"",,0,0,0,2022-01-05 01:46:08
70598687,2,,69354063,0,,"<p>&quot;&quot;&quot; is multiline string based on docs, which would means its just a string and no vars are allowed. You can use js variable substitution like ${tags} inside templated string and bypass this all together or try if concatenation works like &quot;&quot;&quot; 1st part &quot;&quot;&quot;&quot; + $tags + &quot;&quot;&quot; 2nd part &quot;&quot;&quot;</p>&#xA;",17844261,,,,2022-01-05 19:35:47,"",,0,0,0,2022-01-05 19:35:47
70608823,2,,70608748,0,,"<p>From your question, it seems that you only want to return the genres:</p>&#xA;<pre><code>let genres = props.books.map(book =&gt; book.genres)&#xA;</code></pre>&#xA;<p>This will return an array with the genres extracted from the <code>books</code> prop</p>&#xA;<p>Later edit: your question was unclear, but probably you want to get the entire list of genres from each genres sublist AND remove duplicates:</p>&#xA;<pre><code>let genres = props.books.map(book =&gt; book.genres).flat().reduce((arr, elem) =&gt; {&#xA;    if(arr.indexOf(elem) === -1) {&#xA;       arr.push(elem);&#xA;    }  &#xA;&#xA;    return arr;&#xA;&#xA;}, []);&#xA;</code></pre>&#xA;",3070830,,3070830,2022-01-06 14:46:52,2022-01-06 14:46:52,"",,0,1,0,2022-01-06 14:39:12
70610217,2,,46753738,0,,<h1>Here my example.</h1>&#xA;<p>You have to be Authenticated to do this request.</p>&#xA;<p>url: https://api.github.com/graphql</p>&#xA;<p>header: Authorization bearer token</p>&#xA;<p>method: POST</p>&#xA;<pre><code>query {&#xA;    viewer {&#xA;        avatarUrl&#xA;        login&#xA;        resourcePath&#xA;        url&#xA;        bio&#xA;        company&#xA;        createdAt&#xA;        location&#xA;        followers(first: 100) {&#xA;            nodes {&#xA;                name&#xA;                url&#xA;            }&#xA;        }&#xA;        repositories(first: 100) {&#xA;            nodes {&#xA;                name&#xA;                description&#xA;                url&#xA;                createdAt&#xA;                collaborators(first: 5) {&#xA;                    nodes {&#xA;                        name  &#xA;                    }&#xA;                    totalCount&#xA;                }&#xA;            }&#xA;            totalCount&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;,14647822,,,,2022-01-06 16:21:52,"",,0,0,0,2022-01-06 16:21:52
70613543,2,,70528857,3,,"<h2>Solution</h2>&#xA;<p>You can fix the error by changing your code like this:</p>&#xA;<pre><code>const Product = ({ product }: { product: ProductData_allProducts }) =&gt; {&#xA;  return &lt;p&gt;{product.name}&lt;/p&gt;;&#xA;};&#xA;</code></pre>&#xA;<h2>Explanation</h2>&#xA;<p>The problem was that you typed the <code>props</code> of the component as type <code>ProductComponentProps</code>, all the while you only wanted to type the property <code>props.product</code> as that. So your code basically looked like this:</p>&#xA;<pre><code>const Product = (props: ProductData_allProducts) =&gt; {&#xA;  return (&#xA;      &lt;p&gt;{product.name}&lt;/p&gt;&#xA;  );&#xA;};&#xA;</code></pre>&#xA;<p>And as all the properties like <code>name</code> or <code>description</code> where missing, <em>Typescript</em> complained about it. Here is a working <a href=""https://codesandbox.io/s/https-stackoverflow-com-questions-70528857-how-to-use-graphql-typescript-types-in-react-031bn?file=/src/App.tsx:155-262"" rel=""nofollow noreferrer"">codesandbox</a> for you to check out.</p>&#xA;",7490871,,,,2022-01-06 20:58:06,"",,0,0,0,2022-01-06 20:58:06
70616137,1,,,2,407,"<p><em>I'm running into this error and I have no idea how to debug this. When I run it in dev mode by running <code>yarn nx serve app</code>, it works fine. It's when I build and deploy the prod docker version, I get this error:</em></p>&#xA;<pre><code>    (node:7) UnhandledPromiseRejectionWarning: Error: Schema must contain uniquely named &#xA;    types but contains multiple types named &quot;n&quot;.&#xA;    2022-01-07T02:40:36.831174844Z     at new GraphQLSchema (/app/node_modules/graphql/type/schema.js:194:15)&#xA;    2022-01-07T02:40:36.831182778Z     at GraphQLSchemaFactory.create (/app/node_modules/@nestjs/graphql/dist/schema-builder/graphql-schema.factory.js:39:24)&#xA;    2022-01-07T02:40:36.831188556Z     at GraphQLSchemaBuilder.buildSchema (/app/node_modules/@nestjs/graphql/dist/graphql-schema.builder.js:62:52)&#xA;    2022-01-07T02:40:36.831193705Z     at GraphQLSchemaBuilder.build (/app/node_modules/@nestjs/graphql/dist/graphql-schema.builder.js:24:31)&#xA;    2022-01-07T02:40:36.831199146Z     at GraphQLFactory.mergeOptions (/app/node_modules/@nestjs/graphql/dist/graphql.factory.js:33:69)&#xA;    2022-01-07T02:40:36.831204965Z     at GraphQLModule.onModuleInit (/app/node_modules/@nestjs/graphql/dist/graphql.module.js:92:57)&#xA;    2022-01-07T02:40:36.831210371Z     at processTicksAndRejections (internal/process/task_queues.js:95:5)&#xA;    2022-01-07T02:40:36.831215501Z     at async Object.callModuleInitHook (/app/node_modules/@nestjs/core/hooks/on-module-init.hook.js:51:9)&#xA;    2022-01-07T02:40:36.831220535Z     at async NestApplication.callInitHook (/app/node_modules/@nestjs/core/nest-application-context.js:179:13)&#xA;    2022-01-07T02:40:36.831225861Z     at async NestApplication.init (/app/node_modules/@nestjs/core/nest-application.js:96:9)&#xA;    2022-01-07T02:40:36.831231456Z (Use `node --trace-warnings ...` to show where the warning was created)&#xA;(node:7) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)&#xA;2022-01-07T02:40:36.831243405Z (node:7) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.&#xA;</code></pre>&#xA;<p><em>I've looked all over other the codebase and I'm not seeing duplicate data. And it's not failing in dev mode and only in production mode as well. I've been stuck trying to figure this out for a while now. Any help would be greatly appreciated.</em></p>&#xA;<pre><code># ------------------------------------------------------&#xA;# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)&#xA;# ------------------------------------------------------&#xA;&#xA;type AdditionalOptionModel {&#xA;  activated: String&#xA;  id: Float&#xA;  notice_period_days: Float&#xA;  product_identifier: String&#xA;  scheduled_deactivation_date: String&#xA;}&#xA;&#xA;type AdditionalOptionsServerResponseModel {&#xA;  additional_options: [AdditionalOptionModel!]&#xA;}&#xA;&#xA;input Address {&#xA;  city: String&#xA;  country: String&#xA;  line1: String&#xA;  line2: String&#xA;  state: String&#xA;  zip: String&#xA;}&#xA;&#xA;type BackupModel {&#xA;  built: Boolean&#xA;  built_at: String&#xA;  created: String&#xA;  disk: DiskModel&#xA;  id: Float&#xA;  locked: Boolean&#xA;  size: String&#xA;}&#xA;&#xA;type BackupScheduleModel {&#xA;  created: String&#xA;  disk: DiskModel&#xA;  duration: String&#xA;  id: Float&#xA;  period: String&#xA;  rotation_period: Boolean&#xA;  start_time: String&#xA;  status: String&#xA;}&#xA;&#xA;input ContactInput {&#xA;  email: String!&#xA;  message: String!&#xA;  name: String!&#xA;  phone: String!&#xA;}&#xA;&#xA;type CreateServerResponseModel {&#xA;  server: ServerDetailModel&#xA;  servers: [ServerDetailModel!]&#xA;}&#xA;&#xA;input CreateVpsServerInput {&#xA;  addition_options: [String!]&#xA;  hostname: String&#xA;  hostnames: [String!]&#xA;  location: String!&#xA;  product: String!&#xA;  recipe: Float&#xA;  template: String&#xA;}&#xA;&#xA;type DiskModel {&#xA;  built: Boolean&#xA;  id: Float&#xA;  is_primary: Boolean&#xA;  label: String&#xA;  size: Float&#xA;}&#xA;&#xA;type ExampleProductDataModel {&#xA;  bandwidth: Float&#xA;  cpu: Float&#xA;  disk: Float&#xA;  memory: Float&#xA;}&#xA;&#xA;input GuideInput {&#xA;  email: String!&#xA;  name: String!&#xA;}&#xA;&#xA;type IPAddressModel {&#xA;  address: String&#xA;  created: String&#xA;  gateway: String&#xA;  id: Float&#xA;  is_ipv6: Boolean&#xA;  type: String&#xA;}&#xA;&#xA;type LinksModel {&#xA;  pages: PagesModel&#xA;}&#xA;&#xA;type LocationModel {&#xA;  id: Float&#xA;  identifier: String&#xA;  is_under_maintenance: Boolean&#xA;  name: String&#xA;  on_hold: Boolean&#xA;}&#xA;&#xA;type MetaModel {&#xA;  pages: Float&#xA;  total: Float&#xA;}&#xA;&#xA;type Mutation {&#xA;  addAdditionalOptions(apiKey: String!, options: [String!]!, serverId: Int!): Boolean!&#xA;  addUser(user: User!): UserModel!&#xA;  cancelSubscription(email: String!): Boolean!&#xA;  changeHostname(apiKey: String!, hostname: String!, serverId: Int!): Boolean!&#xA;  changeLabel(apiKey: String!, label: String!, serverId: Int!): Boolean!&#xA;  changePassword(apiKey: String!, password: String!, serverId: Int!): Boolean!&#xA;  createMailingSubscription(subscriber: SubscriberInput!): Boolean!&#xA;  createServer(apiKey: String!, server: CreateVpsServerInput!): CreateServerResponseModel!&#xA;  delete(apiKey: String!, serverId: Int!): Boolean!&#xA;  deleteVpsConfig(id: Int!): Boolean!&#xA;  disableAdditionalOptions(apiKey: String!, options: [String!]!, serverId: Int!): Boolean!&#xA;  paymentIntent(paymentMethod: PaymentMethod!): String!&#xA;  performCommand(apiKey: String!, command: String!, serverId: Int!): Boolean!&#xA;  resize(apiKey: String!, product: String!, serverId: Int!): Boolean!&#xA;  saveVpsConfig(config: VpsConfig!): VpsConfigModel!&#xA;  send(contact: ContactInput!): Boolean!&#xA;  sendGuide(guide: GuideInput!): Boolean!&#xA;  subscribe(payment: Payment!): Boolean!&#xA;  updateApiKey(email: String!): String!&#xA;  updateProfile(user: User!): UserModel!&#xA;}&#xA;&#xA;type PagesModel {&#xA;  first: String&#xA;  last: String&#xA;  next: String&#xA;  prev: String&#xA;}&#xA;&#xA;input Payment {&#xA;  address: Address&#xA;  email: String!&#xA;  name: String!&#xA;  paymentIntent: String!&#xA;  phone: String!&#xA;  type: String!&#xA;}&#xA;&#xA;input PaymentMethod {&#xA;  amount: Float!&#xA;  email: String!&#xA;  name: String!&#xA;  phone: String!&#xA;}&#xA;&#xA;type ProductDetailsModel {&#xA;  category: String&#xA;  details: ExampleProductDataModel&#xA;  id: String&#xA;  identifier: String&#xA;  is_sub_category: Boolean&#xA;  name: String&#xA;  parent_category: String&#xA;  price: Float&#xA;  state: String&#xA;  type: ProductTypeModel&#xA;}&#xA;&#xA;type ProductModel {&#xA;  id: Float&#xA;  identifier: String&#xA;  name: String&#xA;  price: Float&#xA;  type: ProductTypeModel&#xA;}&#xA;&#xA;type ProductTypeModel {&#xA;  id: Float&#xA;  identifier: String&#xA;  name: String&#xA;}&#xA;&#xA;type Query {&#xA;  additionalOptions(apiKey: String!, serverId: Int!): AdditionalOptionsServerResponseModel!&#xA;  getApiKey(email: String!): String!&#xA;  getRecipes(apiKey: String!, page: Int): RecipesResponseModel!&#xA;  getTemplateDetails(apiKey: String!, templateId: Int!): TemplateDetailsResponseModel!&#xA;  getTemplates(apiKey: String!, group: String!): TemplatesResponseModel!&#xA;  server(apiKey: String!, serverId: Int!): ServerDetailModel!&#xA;  servers(apiKeys: [String!]!): [ServerDetailModel!]!&#xA;  settings: SiteSettingsModel!&#xA;  user(email: String!): UserModel!&#xA;  validate(registration: Registration!): Boolean!&#xA;  vpsConfigs(email: String!): [VpsConfigModel!]!&#xA;}&#xA;&#xA;type RecipeModel {&#xA;  created: String&#xA;  id: Float&#xA;  modified: String&#xA;  name: String&#xA;  os_type: String&#xA;  recipe_type: RecipeTypeModel&#xA;  script: String&#xA;  script_type: String&#xA;}&#xA;&#xA;type RecipeTypeModel {&#xA;  id: Float&#xA;  name: String&#xA;}&#xA;&#xA;type RecipesResponseModel {&#xA;  links: LinksModel&#xA;  meta: MetaModel&#xA;  recipes: [RecipeModel!]&#xA;}&#xA;&#xA;input Registration {&#xA;  email: String&#xA;  key: Float&#xA;}&#xA;&#xA;type ServerDetailModel {&#xA;  bandwidth_total: Float&#xA;  bandwidth_used: Float&#xA;  cpu: Float&#xA;  created: String&#xA;  detailed_state: String&#xA;  disabled: String&#xA;  disk: Float&#xA;  hostname: String&#xA;  id: String&#xA;  initial_root_password: String&#xA;  ip_addresses: [IPAddressModel!]&#xA;  label: String&#xA;  location: LocationModel&#xA;  locked: String&#xA;  main_ip_address: String&#xA;  memory: Float&#xA;  name: String&#xA;  product: ProductModel&#xA;  scheduled_delete_date: String&#xA;  state: String&#xA;  template: TemplateModel&#xA;}&#xA;&#xA;type SiteSettingsModel {&#xA;  skipGuideForm: Boolean!&#xA;}&#xA;&#xA;input SubscriberInput {&#xA;  email: String!&#xA;  name: String!&#xA;}&#xA;&#xA;type TemplateDetailsModel {&#xA;  group: String&#xA;  locations: [LocationModel!]&#xA;  name: String&#xA;  price: Float&#xA;  product_prices: [TemplateProductPriceModel!]&#xA;  products: [ProductModel!]&#xA;  system_name: String&#xA;}&#xA;&#xA;type TemplateDetailsResponseModel {&#xA;  template: TemplateDetailsModel&#xA;}&#xA;&#xA;type TemplateModel {&#xA;  group: String&#xA;  id: String&#xA;  name: String&#xA;  price: String&#xA;  product_prices: [TemplateProductPriceModel!]&#xA;  system_name: String&#xA;}&#xA;&#xA;type TemplateProductPriceModel {&#xA;  price: Float&#xA;  product: String&#xA;}&#xA;&#xA;type TemplateTabModel {&#xA;  id: Float&#xA;  label: String&#xA;  sort: String&#xA;}&#xA;&#xA;type TemplatesResponseModel {&#xA;  links: LinksModel&#xA;  meta: MetaModel&#xA;  templates: [TemplateModel!]&#xA;}&#xA;&#xA;input User {&#xA;  apiKey: String&#xA;  email: String&#xA;  firstName: String&#xA;  id: String&#xA;  lastName: String&#xA;  originalEmail: String&#xA;  password: String&#xA;  phone: String&#xA;  username: String&#xA;}&#xA;&#xA;type UserModel {&#xA;  apiKey: String&#xA;  email: String&#xA;  firstName: String&#xA;  id: String&#xA;  lastName: String&#xA;  originalEmail: String&#xA;  password: String&#xA;  phone: String&#xA;  username: String&#xA;}&#xA;&#xA;input VpsConfig {&#xA;  apiKey: String!&#xA;  email: String&#xA;  id: Float&#xA;  name: String!&#xA;}&#xA;&#xA;type VpsConfigModel {&#xA;  apiKey: String!&#xA;  email: String&#xA;  id: Float&#xA;  name: String!&#xA;}&#xA;</code></pre>&#xA;",6601135,,6601135,2022-01-10 11:48:38,2022-09-02 09:33:33,"Error: Schema must contain uniquely named types but contains multiple types named ""n""",<typescript><docker><graphql><nestjs>,1,3,0,2022-01-07 03:05:05
70616356,2,,64289896,2,,"<p>I don't understand what you mean but the GraphQL below gets <strong>&quot;id&quot;</strong>, <strong>&quot;title&quot;</strong>, <strong>&quot;description&quot;</strong>, <strong>&quot;the first image&quot;</strong> and <strong>&quot;price&quot;</strong> for each product(10 products):</p>&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;    products(first:10) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        title&#xA;        description&#xA;        featuredImage {&#xA;          url&#xA;        }&#xA;        variants(first: 1) {&#xA;          edges {&#xA;            node {&#xA;              priceV2 {&#xA;                amount&#xA;              }&#xA;            }&#xA;          }&#xA;        } &#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",8172439,,,,2022-01-07 03:42:07,"",,0,0,0,2022-01-07 03:42:07
70636865,2,,70636289,0,,"<p><code>result.data.allStrapiArticles</code> is an object with a property <code>edges</code> which is an array of objects.</p>&#xA;<p>So, you have to iterate on <code>edges</code> prop:</p>&#xA;<pre><code>result.data.allStrapiArticles.edges.forEach&#xA;</code></pre>&#xA;",3877000,,5585371,2022-01-09 11:19:49,2022-01-09 11:19:49,"",,0,0,0,2022-01-08 22:13:11
70660331,1,,,1,105,"<p>According to the documentation (<a href=""https://docs.github.com/en/graphql/reference/objects#commit"" rel=""nofollow noreferrer"">https://docs.github.com/en/graphql/reference/objects#commit</a>), the parents function returns &quot;the parents of a commit.&quot; Are these sorted the same way as in git? For example, if I merge branch B into branch A, will the first parent of the merge commit be from branch A?</p>&#xA;",15311276,,,,2022-01-15 10:01:55,Does Github GraphQL return commit parents in a particular order?,<git><github><graphql><github-graphql>,1,0,0,2022-01-11 00:21:34
70666251,1,,,0,201,"<p>Hello I am using this mutation to reorder products.</p>&#xA;<p>PHP extract&#xA;Inside a <strong>FOREACH</strong> that cycles <strong>every collection</strong>:</p>&#xA;<pre><code>    mutation collectionReorderProducts{&#xA;        collectionReorderProducts(&#xA;            id: &quot;gid://shopify/Collection/' . $collectionid .'&quot;,&#xA;            moves: [';&#xA;    $counter = 0;&#xA;    foreach ($sorted as $prod) {&#xA;        $query .= '{ id: &quot;gid://shopify/Product/' . $prod['id'] . '&quot;, newPosition: &quot;' . $counter .'&quot; },';&#xA;        $counter++;&#xA;    }&#xA;    $query .=  ']&#xA;                &#xA;        )&#xA;        {&#xA;           job {&#xA;                id&#xA;                done&#xA;           }&#xA;        }&#xA;    }';&#xA;</code></pre>&#xA;<p>It works fine for the first collection, but after that i get failed jobs.</p>&#xA;<p>1)</p>&#xA;<pre><code>[&quot;collectionReorderProducts&quot;]=&gt;&#xA;    array(1) {&#xA;      [&quot;job&quot;]=&gt;&#xA;      array(2) {&#xA;        [&quot;id&quot;]=&gt;&#xA;        string(54) &quot;gid://shopify/Job/64837486-07b8-4677-9e31-78d23dccc746&quot;&#xA;        [&quot;done&quot;]=&gt;&#xA;        bool(false)&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;<p>2 and after)</p>&#xA;<pre><code>[&quot;collectionReorderProducts&quot;]=&gt;&#xA; array(1) {&#xA;  [&quot;job&quot;]=&gt;&#xA;   NULL&#xA; }&#xA;</code></pre>&#xA;<p>What should I do ? A bulk operation? and how?</p>&#xA;",17248942,,17248942,2022-01-11 14:13:06,2022-01-11 14:13:06,Shopify graphQL reordering collections in bulk,<collections><graphql><shopify><graphql-mutation>,0,0,0,2022-01-11 11:45:33
70675281,1,,,4,1407,"<p>According to this documentation:&#xA;<a href=""https://shopify.dev/custom-storefronts/products/filter-products#query-products-by-type"" rel=""nofollow noreferrer"">https://shopify.dev/custom-storefronts/products/filter-products#query-products-by-type</a></p>&#xA;<p>We should be able to filter products within a collection using <code>collectionByHandle</code>.</p>&#xA;<p>I have created a very basic test query in the Shopify GraphiQL App explorer tool. When I run the documented query, it returns all products, not filtering at all. See below:</p>&#xA;<p><a href=""https://i.stack.imgur.com/f8pLF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/f8pLF.png"" alt=""GraphQL example query"" /></a></p>&#xA;<p>This looks like a bug with the API right? Or am I missing something basic?</p>&#xA;",545537,,,,2022-10-23 22:04:08,Shopify Storefront GraphQL filtering products within a collection,<graphql><shopify><shopify-storefront-api>,3,0,0,2022-01-12 01:18:17
70676320,2,,70676262,0,,"<p>Okay, I got it now. &quot;Episode&quot; is the type of variable.&#xA;&quot;episode&quot; is the truncation of &quot;$episode&quot; referring to string interpolation.&#xA;Thanks.</p>&#xA;",17909987,,,,2022-01-12 04:28:19,"",,0,1,0,2022-01-12 04:28:19
70676369,1,,,0,29,"<p>Im a newbie in Ruby and GraphQL</p>&#xA;<p>Currently i have such Mutations module</p>&#xA;<pre><code>module Mutations&#xA;  class ProductCreate &lt; BaseMutation&#xA;    # TODO: define return fields&#xA;    # field :post, Types::PostType, null: false&#xA;    type Types::ProductType&#xA;&#xA;    # TODO: define arguments&#xA;    argument :title, String, required: true&#xA;    argument :vendor, String, required: false&#xA;    argument :store, ID, required: true&#xA;&#xA;    # TODO: define resolve method&#xA;    def resolve(title:, vendor:, store:)&#xA;      Product.create!(title: title, vendor: vendor, store: store)&#xA;    end&#xA;  end&#xA;end&#xA;</code></pre>&#xA;<p>and when i call</p>&#xA;<pre><code>mutation {&#xA;  productCreate(input: {store:&quot;61d6f33a58c4dc4e8a1a0536&quot;, title: &quot;Sweet new product&quot;, vendor: &quot;JadedPixel&quot;}) &#xA;  {&#xA;      _id &#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Result is</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;productCreate&quot;: {&#xA;      &quot;_id&quot;: &quot;61de591c58c4dcb08dffafa9&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I would like to add additional paramenter to query and also get additional paramenter in result</p>&#xA;<p>So, my question is</p>&#xA;<p>What should i change in code</p>&#xA;<pre><code>mutation {&#xA;  productCreate(input: {title: &quot;Sweet new product&quot;, productType: &quot;Snowboard&quot;, vendor: &quot;JadedPixel&quot;}) {&#xA;    product {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>to get result like this</p>&#xA;<pre><code>{&#xA;  &quot;productCreate&quot;: {&#xA;    &quot;product&quot;: {&#xA;      &quot;id&quot;: &quot;1071559610&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",11488675,,,,2022-01-12 05:22:41,How to add element on graphql return fields,<ruby><graphql>,1,0,0,2022-01-12 04:36:46
70676683,2,,70676369,0,,"<p>I found solutions</p>&#xA;<p>Just need to change code like this</p>&#xA;<pre><code>module Mutations&#xA;  class ProductCreate &lt; BaseMutation&#xA;&#xA;    field :product, Types::ProductType, null: true&#xA;&#xA;    # TODO: define arguments&#xA;    argument :title, String, required: true&#xA;    argument :vendor, String, required: false&#xA;    argument :store, ID, required: true&#xA;&#xA;    # TODO: define resolve method&#xA;    def resolve(title:, vendor:, store:)&#xA;      record  = Product.create!(title: title, vendor: vendor, store: store)&#xA;&#xA;      { product: record }&#xA;    end&#xA;  end&#xA;end&#xA;</code></pre>&#xA;<p>source of an example&#xA;<a href=""https://www.keypup.io/blog/graphql-the-rails-way-part-2-writing-standard-and-custom-mutations"" rel=""nofollow noreferrer"">https://www.keypup.io/blog/graphql-the-rails-way-part-2-writing-standard-and-custom-mutations</a></p>&#xA;",11488675,,,,2022-01-12 05:22:41,"",,0,0,0,2022-01-12 05:22:41
70679375,2,,70678588,0,,<p>You're missing another level of your object: &quot;can't read undefined properties of map&quot; you should try:</p>&#xA;<pre><code>  return (&#xA;    &lt;div&gt;&#xA;      {data.allContentfulPodcast.edges.map(edge =&gt; &lt;p key={edge.node.title} &gt;{edge}&lt;/p&gt;)}&#xA;    &lt;/div&gt;&#xA;    )&#xA;</code></pre>&#xA;,9596473,,9596473,2022-01-12 09:50:05,2022-01-12 09:50:05,"",,0,2,0,2022-01-12 09:47:08
70683547,2,,70346355,0,,"<p>It needs to be a POST and you are missing type of operation mutation in this case and what it is.&#xA;Postman has <a href=""https://www.postman.com/lively-moon-541169/workspace/purego-apis/example/16545848-bf0d1589-09b1-4ec6-ba63-a65a56b500eb"" rel=""nofollow noreferrer"">https://www.postman.com/lively-moon-541169/workspace/purego-apis/example/16545848-bf0d1589-09b1-4ec6-ba63-a65a56b500eb</a> examples of how to do the calls which can help you.&#xA;Also you can check GraphiQL app on shopify to test all the queries before making  the programmatic queries</p>&#xA;",17844261,,,,2022-01-12 14:45:28,"",,0,0,0,2022-01-12 14:45:28
70692964,1,,,0,275,<p>Is this possible to specify more than one type of query in one schema?</p>&#xA;<pre><code>type Query {&#xA;    productsByRegion(match : String) : [Product]&#xA;    productsByType(match : String) : [Product]&#xA;}&#xA;&#xA;type Product {&#xA;    id: ID&#xA;    name: String&#xA;}&#xA;</code></pre>&#xA;<p>Expected queries which can be fired using single schema definition:</p>&#xA;<pre><code>{&#xA;    productsByRegion {&#xA;        id&#xA;        name&#xA;    }&#xA;}&#xA;&#xA;{&#xA;    productsByType {&#xA;        id&#xA;        name&#xA;    }&#xA;}&#xA;</code></pre>&#xA;,3222372,,3222372,2022-01-13 17:55:28,2022-01-13 19:00:58,Define more than one type of query GraphQL Schema - Best approach to define different types on query one one object,<graphql><graphql-java>,1,3,0,2022-01-13 07:42:54
70693103,1,,,0,110,"<p>i want to upload a file but i always get the error <code>Variable $file of required type UploadedFile! was not provided.</code>, whereas the variable is available in Symfony profiler Uploaded Files section.</p>&#xA;<p>This what i did, define the UploadedFile type :</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>UploadedFile:&#xA;    type: custom-scalar&#xA;    config:&#xA;        scalarType: '@=newObject(&quot;Overblog\\GraphQLBundle\\Upload\\Type\\GraphQLUploadType&quot;)'&#xA;</code></pre>&#xA;<p>Then define a new mutation :</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>UploadCepc:&#xA;  type: &quot;FinalExam&quot;&#xA;  resolve: '@=mutation(&quot;App\\Infrastructure\\GraphQL\\Mutation\\UploadCepcMutation&quot;, [args])'&#xA;  args:&#xA;      uuid:&#xA;          type: &quot;String!&quot;&#xA;      file:&#xA;          type: &quot;UploadedFile!&quot;&#xA;</code></pre>&#xA;<p>This is what i have in the Symfony profiler: <a href=""https://user-images.githubusercontent.com/19424497/149175228-b3db436a-9e1f-49fc-9b92-aec5b546401d.png"" rel=""nofollow noreferrer"">link</a>.</p>&#xA;<p>Do i miss something ?</p>&#xA;",9355474,,,,2022-01-13 07:55:35,PHP Overblog GraphQL Upload file variable not provided,<php><graphql>,0,0,0,2022-01-13 07:55:35
70697207,1,70707501,,0,574,"<p>I am using GraphQl together with bigcommerce to grab products, and i need to find a sollution to make my query dynamic - its based on the length of an array of SKU's. Its no problem to make it work with one product.</p>&#xA;<pre><code>let query = `&#xA; query getProductBySku($sku: String) {&#xA;  site {&#xA;   product(sku: $sku) {&#xA;    id&#xA;    entityId&#xA;    name&#xA;    sku&#xA;    }&#xA;   }&#xA;  }&#xA; `&#xA;</code></pre>&#xA;<p>And i figured out so far that i need to use something like aliases in graphql to be able to get several products in several response like this</p>&#xA;<pre><code> query productById {&#xA;  site {&#xA;   o1: product(entityId: 167) {&#xA;    id&#xA;    entityId&#xA;    sku&#xA;    name&#xA;   }&#xA;  o2: product(entityId: 168 ) {&#xA;   id&#xA;   entityId&#xA;   sku&#xA;   name&#xA;  }&#xA; }&#xA;}&#xA;</code></pre>&#xA;<p>But i need to be able to make this alias query dynamic based on the lenght of the array. How would you approach to solve this problem? Is it possible to maybe create a loop that will write out the query before i will run it. Any help to let me in the right direction here would be highly appreciated! Thank you!</p>&#xA;<p>ps. im using javascript.</p>&#xA;",15024992,,,,2022-01-14 07:50:21,Dynamically create graphql query based on criterias from javascript,<javascript><graphql><bigcommerce>,1,1,0,2022-01-13 13:12:43
70697706,1,,,1,145,"<p>I’ve mimicked a file for creating an array of items from the Contentful dashboard that was built by a previous developer, I’ve inserted the content into the page and added them to the graphQL section to ensure that it’s pulling in some sort of data but when I try and map the array it’s throwing an error as pictured below:</p>&#xA;<p>Error in function <strong>createFiberFromTypeAndProps</strong></p>&#xA;<blockquote>&#xA;<p><strong>Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got <code>object</code>. Check the render method of</strong> <code>ValueList</code>.</p>&#xA;</blockquote>&#xA;<p>A couple of things I've looked at online mentioned importing the component via the <code>export default</code> method instead of exporting the function with curly brackets and either way this produces the same results for me. The code I've created is below:</p>&#xA;<pre><code>import React from 'react';&#xA;import slugify from 'slugify'&#xA;import styled from 'styled-components'&#xA;import Reveal from 'react-awesome-reveal'&#xA;&#xA;import { BREAKPOINTS, ANIMATION, customReveal } from '../styles/cssVariables'&#xA;import Container from './layout/container'&#xA;&#xA;const ValuesStyles = {&#xA;  backgroundColor: 'black',&#xA;  textAlign: 'center',&#xA;  overflow: 'hidden'&#xA;}&#xA;&#xA;const ValueItem = {&#xA;    backgroundColor: 'white',&#xA;    color: 'black'&#xA;}&#xA;&#xA;const ValueList = (props) =&gt; {&#xA;&#xA;return (&#xA;    &lt;Container width={14}&gt;&#xA;        {props.title}&#xA;        {props.valuesList.map((value, i) =&gt; (&#xA;            &lt;ValueItem style={ValueItem} key={i}&gt;{value}&lt;/ValueItem&gt;&#xA;        ))}&#xA;    &lt;/Container&gt;&#xA;  )&#xA;}&#xA;&#xA;export default ValueList&#xA;</code></pre>&#xA;<p>Have I missed something as I’ve tested that the component itself its passing props but whenever I try and map the array it throws a rendering error? Below is the code that's been added to the container page.</p>&#xA;<pre><code>const valueList = get(this, 'props.data.contentfulPageContentStudio.valueList')&#xA;&#xA;&#xA;&lt;ValueList title=&quot;Test Value List&quot; valuesList={valueList}/&gt;&#xA;</code></pre>&#xA;",17924050,,17924050,2022-01-13 14:08:56,2022-01-13 14:08:56,React and Contentful displaying a .map array,<javascript><reactjs><graphql><contentful-api>,0,4,0,2022-01-13 13:49:51
70707501,2,,70697207,2,,"<p>For anyone curious i ended up being able to use .map to dynamically loop out the query and the run it :)</p>&#xA;<pre><code>let query = `&#xA; query productBySku {&#xA;  site {&#xA;   ${sku&#xA;    .map(&#xA;      (product: any, idx: number) =&gt;&#xA;       `pro${idx}: product(sku: &quot;${product}&quot;) {&#xA;       id&#xA;       entityId&#xA;       sku&#xA;       name&#xA;      }&#xA;     `&#xA;    )&#xA;  .join('')}&#xA; }&#xA;}&#xA;</code></pre>&#xA;<p>`</p>&#xA;",15024992,,,,2022-01-14 07:50:21,"",,0,1,0,2022-01-14 07:50:21
70716163,1,,,0,141,"<p>I'm writing a front end for an online store. I get information for PDP (Product page) through graphql apollo. I try to use Query component from react-apollo, the initial rendering is fine without errors, but as soon as I call query a second time, that is leaving the product page and going to another one, I get this error. When I repeatedly go from one page to another, everything works without errors. How can I fix this problem? I tried adding isLoaded variable with componentDidMount and UnMount, also tried changing useQuery in the library code to lazy, did not help (most popular answers).</p>&#xA;<p>Queries despite the error work almost correctly, different product information is displayed, except for attributes (size, color, etc.) they are somehow the same after the error for all PDPs that have the same category (there are two categories in total, clothing and tech).</p>&#xA;<p>Using a class component is mandatory. All libraries are the latest version.</p>&#xA;<pre><code>Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application. To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.&#xA;    at Query (http://localhost:3000/static/js/bundle.js:25944:24)&#xA;    at div&#xA;    at Product (http://localhost:3000/static/js/bundle.js:1593:5)&#xA;    at http://localhost:3000/static/js/bundle.js:1196:79&#xA;    at ConnectFunction (http://localhost:3000/static/js/bundle.js:54264:68)&#xA;</code></pre>&#xA;<pre><code>import React                from 'react'&#xA;import { withRouter }       from '../../myLibrary/withRouter'&#xA;import { Navigate }         from 'react-router-dom'&#xA;import toObject             from '../../myLibrary/convertToObject'&#xA;import parse                from '../../myLibrary/parceHtml'&#xA;import { addProductAction } from '../../store/action-creators/action-creators'&#xA;import { connect }          from 'react-redux'&#xA;import { Query }            from 'react-apollo'&#xA;import { PRODUCT_PDP_INFO } from '../../graph-querys/graph-querys'&#xA;import './css/product.css'&#xA;&#xA;class Product extends React.Component {&#xA;    constructor(props) {&#xA;        super(props)&#xA;        this.state = {&#xA;            mainImg: '', &#xA;            stateForm:[], &#xA;            selectedOptions:[],&#xA;            redirect: false,&#xA;        }&#xA;    }&#xA;    render() {&#xA;        &#xA;        let id = (this.props.params.id).replace(':','')&#xA;&#xA;        if (this.state.redirect) return &lt;Navigate to='/'/&gt;&#xA;&#xA;        return (&#xA;            &lt;div className='product-content-c' key={id}&gt;&#xA;                &lt;Query key={id} query={PRODUCT_PDP_INFO(id)}&gt;&#xA;                    {({loading, error, data})=&gt; {&#xA;                        if(loading) return 'Loading..'&#xA;                        if(error) {console.log(error); return 'Error :('}&#xA;&#xA;                        const { product } = data&#xA;                        const mainImgChangeHandler = (newImg) =&gt; {&#xA;                            this.setState({ mainImg:newImg })&#xA;                        }&#xA;                        &#xA;                        const keys = []&#xA;                        const values = []&#xA;                        const massiveObjects = this.state.stateForm&#xA;                        const selectedOptions = this.state.selectedOptions&#xA;&#xA;                        const sendFormHandler = () =&gt; {&#xA;                            let value = { id: id, attributes: this.state.stateForm, amount: 1 }&#xA;                            addProductAction(value, this.props)&#xA;                            this.setState({redirect: true})&#xA;                        }&#xA;&#xA;                        const stateFormChangeHandler = (data) =&gt; {&#xA;&#xA;                            const key = data.attribute &#xA;                            const value = data.value&#xA;&#xA;                            // change values algorithm&#xA;&#xA;                            for(let objNum in massiveObjects) {&#xA;                                if (massiveObjects[objNum].hasOwnProperty(key)) {&#xA;&#xA;                                    keys.push(key)&#xA;                                    values.push(value)&#xA;&#xA;                                    const object = toObject(keys, values)&#xA;                                    massiveObjects[objNum] = object&#xA;                                    selectedOptions[objNum] = (key + value)&#xA;&#xA;                                    this.setState({ selectedOptions: selectedOptions })&#xA;                                    return this.setState({ stateForm: massiveObjects })&#xA;                                }&#xA;                            }&#xA;&#xA;                            // add values algorithm&#xA;&#xA;                            keys.push(key)&#xA;                            values.push(value)&#xA;&#xA;                            const object = toObject(keys, values)&#xA;                            massiveObjects.push(object)&#xA;                            selectedOptions.push(key + value)&#xA;&#xA;                            this.setState({ selectedOptions: selectedOptions })&#xA;                            this.setState({ stateForm: massiveObjects })&#xA;                        }   &#xA;&#xA;                        const parsedDescription = parse(product.description)&#xA;&#xA;                        return(   &#xA;                        &lt;&gt;&#xA;&#xA;&#xA;                        &lt;div className='product-pdp-imgs-c'&gt;&#xA;                            {product.gallery.map(photo =&gt; {&#xA;                            return &lt;div className='product-pdp-img-c' key={photo}&gt;&#xA;                                &lt;img &#xA;                                onClick={ () =&gt; mainImgChangeHandler(photo) }&#xA;                                src={photo}&#xA;                                alt='Product'&#xA;                                key={photo}/&gt;&#xA;                            &lt;/div&gt;})}&#xA;                        &lt;/div&gt;&#xA;&#xA;&#xA;                        &lt;div className='main-pdp-img-c'&gt;&#xA;                            &lt;img src={this.state.mainImg === '' ? product.gallery[0] : this.state.mainImg} alt='Product'/&gt;&#xA;                        &lt;/div&gt;&#xA;                        &lt;div className='product-pdp-info-c'&gt;&#xA;                            &lt;div className='name-brand-pdp-c'&gt;&#xA;                                &lt;p className='name-pdp'&gt;{product.name}&lt;/p&gt;&#xA;                                &lt;p className='brand-pdp'&gt;{product.brand}&lt;/p&gt;&#xA;                            &lt;/div&gt;&#xA;                            &lt;div className='all-atr-inf-pdp-c'&gt;&#xA;&#xA;&#xA;                                {product.attributes.map(attribute =&gt; {&#xA;                                    return (&#xA;                                    &lt;div className='atr-and-inf-pdp-c' key={attribute.name}&gt;&#xA;                                        &lt;p key={attribute.name} className='atr-pdp-name'&gt;{attribute.name}:&lt;/p&gt;&#xA;                                        &lt;div className='atr-pdp-c' key={attribute.name + attribute.name}&gt;&#xA;&#xA;                                            {attribute.items.map(item =&gt; {&#xA;                                                return (&#xA;                                                    &lt;div &#xA;                                                        className='atr-pdp' &#xA;                                                        key={item.value}&#xA;                                                        onClick={() =&gt; stateFormChangeHandler({ attribute: attribute.name,value: item.value })}&gt;&#xA;                                                        {item.value[0]==='#'? &#xA;&#xA;                                                            &lt;div&#xA;                                                            className={`atr-pdp-color` + ( this.state.selectedOptions.findIndex(value =&gt; value === (attribute.name + item.value)) !== -1 ? ' active-pdp-attr' : '') } &#xA;                                                            style={{backgroundColor: item.value}}&#xA;                                                            key={item.value}&gt;&lt;/div&gt;:&#xA;&#xA;                                                            &lt;p className={`atr-pdp-txt` + (this.state.selectedOptions.findIndex(value =&gt; value === (attribute.name + item.value)) !== -1 ? ' active-pdp-attr' : '')}&#xA;                                                            key={item.value}&gt;&#xA;                                                                {item.value}&#xA;                                                            &lt;/p&gt;}&#xA;                                                    &lt;/div&gt;&#xA;                                                )})}&#xA;                                        &lt;/div&gt;&#xA;                                    &lt;/div&gt;)})}&#xA;&#xA;                            &lt;div className='price-pdp-c'&gt;&#xA;                                &lt;p className='price-pdp-txt'&gt;Price:&lt;/p&gt;&#xA;                                &lt;p&gt;&#xA;                                    &lt;span className='product-symbol-pdp'&gt;&#xA;                                        {this.props.currency.symbol}&#xA;                                    &lt;/span&gt; &#xA;                                    &lt;span className='product-amount-pdp'&gt;&#xA;                                        {product.prices[product.prices.findIndex(obj=&gt;obj.currency.label===this.props.currency.label)].amount}&#xA;                                    &lt;/span&gt;&#xA;                                &lt;/p&gt;&#xA;                            &lt;/div&gt;&#xA;&#xA;                            &lt;div className='btnbuy-pdp-c'&gt;&#xA;                                &lt;button className='btnbuy-pdp'&#xA;                                onClick={() =&gt; sendFormHandler()}&gt;add to cart&lt;/button&gt;&#xA;                            &lt;/div&gt;&#xA;&#xA;                            &lt;div className='descr-pdp-c'&gt;&#xA;                                {parsedDescription}&#xA;                            &lt;/div&gt;    &#xA;                                &#xA;                            &lt;/div&gt;&#xA;                        &lt;/div&gt;&#xA;                        &lt;/&gt;)&#xA;                    }}&#xA;                &lt;/Query&gt;&#xA;            &lt;/div&gt;&#xA;        )&#xA;    }&#xA;}&#xA;&#xA;&#xA;let WithUrlComponent = withRouter(Product)&#xA;&#xA;export default connect((state) =&gt; ({&#xA;    currency: state.currency,&#xA;    basket: state.basket,&#xA;}))(WithUrlComponent)&#xA;</code></pre>&#xA;",12157632,,,,2022-01-14 20:25:32,at Query(Apollo): Can't perform a React state update on an unmounted component,<reactjs><graphql><apollo>,0,0,0,2022-01-14 20:25:32
70720435,2,,70660331,1,,"<p>Yes, but you can order in whatever way you like. i.e. the order you mention above, or the reverse order by using the <code>first</code> and <code>last</code> arguments. You can use the following query over at <a href=""https://docs.github.com/en/graphql/overview/explorer"" rel=""nofollow noreferrer"">GitHub's GraphQL Explorer</a></p>&#xA;<pre><code>{&#xA;  repository(owner: {owner}, name: {name}) {&#xA;    object(oid: {oid}) {&#xA;      ... on Commit {&#xA;        parents(first: 10) {&#xA;          nodes {&#xA;            oid&#xA;            message&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Of course entering valid repo name and owner and commit hash (oid).</p>&#xA;",15471232,,,,2022-01-15 10:01:55,"",,0,0,0,2022-01-15 10:01:55
70732680,1,,,0,25,"<p>I'm trying to add a little tracking component that brings in a tracking number and carrier from an array. From there, it should add a url to the carrier website. I need to add an if statement or something so when it sees a specific carrier, it adds the url but I'm struggling.</p>&#xA;<pre><code>renderTrackingNumbers() {&#xA;    const { order: { tracking_info } } = this.props;&#xA;&#xA;    const trackingNumbers = tracking_info.map((tracking_info) =&gt; (&#xA;        &lt;div key={ tracking_info.id }&gt;&#xA;            &lt;a href=&quot;{ tracking_url_should_be_added_here }&quot;&gt;{ tracking_info.tracking_number }&lt;/a&gt;&#xA;            { ' ' }&#xA;            -&#xA;            { ' ' }&#xA;            { tracking_info.carrier_code }&#xA;        &lt;/div&gt;&#xA;    ));&#xA;&#xA;    return (&#xA;        &lt;div&gt;&#xA;            &lt;h4&gt;{ __('Tracking Numbers') }&lt;/h4&gt;&#xA;            &lt;div&gt;&#xA;                { trackingNumbers }&#xA;            &lt;/div&gt;&#xA;        &lt;/div&gt;&#xA;    );&#xA;}&#xA;</code></pre>&#xA;<p>Here is the data I'm receiving from GraphQL:</p>&#xA;<pre><code>[&#xA;{&#xA;    &quot;tracking_number&quot;: &quot;231300687629630&quot;,&#xA;    &quot;carrier_code&quot;: &quot;fedex&quot;&#xA;},&#xA;{&#xA;    &quot;tracking_number&quot;: &quot;1234567890&quot;,&#xA;    &quot;carrier_code&quot;: &quot;dhl&quot;&#xA;},&#xA;{&#xA;    &quot;tracking_number&quot;: &quot;1Z12345E0305271640&quot;,&#xA;    &quot;carrier_code&quot;: &quot;ups&quot;&#xA;},&#xA;{&#xA;    &quot;tracking_number&quot;: &quot;123465789123456&quot;,&#xA;    &quot;carrier_code&quot;: &quot;usps&quot;&#xA;}&#xA;]&#xA;</code></pre>&#xA;<p>Any help would be awesome.</p>&#xA;",17948665,,,,2022-01-16 18:42:59,How to add additional information to an array based on dynamic values in ReactJS,<javascript><arrays><reactjs><graphql>,1,0,0,2022-01-16 17:55:56
70732811,2,,70732680,0,,"<p>Try to map the array like this</p>&#xA;<pre><code>arr.map(i=&gt;{return {&#xA;    ...i ,&#xA;    url:i.carrier_code==='fedex'?'www.fedex.com':&#xA;                           i.carrier_code==='dhl'?'www.dhl.com':'you name it'}}&#xA;)&#xA;</code></pre>&#xA;<p>and when you loop through this it would be like :</p>&#xA;<pre><code>&lt;a href=&quot;{i.url }&quot;&gt;...&lt;/a&gt;&#xA;</code></pre>&#xA;",11353898,,11353898,2022-01-16 18:42:59,2022-01-16 18:42:59,"",,0,0,0,2022-01-16 18:11:07
70735856,1,,,0,167,"<p>Im using URQL as my graphql client. I am trying to pass a variable called handle and map through an array of products from my shopify storefront. It works the first time but after I reload the page, I get cannot read property of &quot;products&quot; undefined error.</p>&#xA;<p>//[handle].js</p>&#xA;<pre><code>import { useRouter } from &quot;next/router&quot;;&#xA;import { useQuery } from &quot;urql&quot;;&#xA;&#xA;const Product = (props) =&gt; {&#xA;  const router = useRouter();&#xA;  const { handle } = router.query;&#xA;&#xA;  const [result] = useQuery({&#xA;    query: productByHandle,&#xA;    variables: { handle: handle },&#xA;  });&#xA;&#xA;  const { data, fetching, error } = result;&#xA;  const products = data.products.edges;&#xA;&#xA;  if (error) {&#xA;    console.log(error);&#xA;  }&#xA;&#xA;  const testButton = () =&gt; {&#xA;    props.setCart(true);&#xA;  };&#xA;&#xA;  return (&#xA;    &lt;div className={styles.product}&gt;&#xA;      {console.log(&#xA;        products.map((product) =&gt; {&#xA;          return product.node.title;&#xA;        })&#xA;   &lt;/div&gt;&#xA;  );&#xA;};&#xA;&#xA;export default Product;&#xA;</code></pre>&#xA;",10458581,,,,2022-01-17 02:20:37,NextJS unable to map array of products from graphql query after page reload,<graphql><next.js><urql>,0,1,0,2022-01-17 02:20:37
70745138,2,,70717803,1,,"<p>As it turns out, the code above works just fine: the problem was in sequencing my imports. I'm using a &quot;bucket&quot; file for exporting all of my GraphQL types, and while that works fine for bringing them into resolvers or middleware, importing from the bucket within type definitions causes weird circular dependency issues.</p>&#xA;<p>The solution is just to import types directly from their source files when doing type declarations. So, specifically as it applies to the example above:</p>&#xA;<pre><code>// File system&#xA;&#xA;schema&#xA;|- connection&#xA;| |- Connection.ts&#xA;| |- DepartmentProductConnection.ts&#xA;| |- Edge.ts&#xA;| |- PageInfo.ts&#xA;|- department&#xA;| |- Department.ts&#xA;|- product&#xA;| |- Product.ts&#xA;|- index.ts&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>// index.ts&#xA;&#xA;export * from './connection/Connection'&#xA;export * from './connection/Edge'&#xA;export * from './connection/PageInfo'&#xA;export * from './connection/DepartmentProductConnection'&#xA;&#xA;export * from './department/Department'&#xA;export * from './product/Product'&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>// DepartmentProductConnection.ts&#xA;&#xA;import { ObjectType } from 'type-graphql'&#xA;&#xA;// Don't do this!&#xA;// import { Connection, Edge, Product, RawEdge } from '..'&#xA;&#xA;// Instead, do this.&#xA;import { Product } from '../product/Product'&#xA;import { Connection } from './Connection'&#xA;import { Edge, RawEdge } from './Edge'&#xA;&#xA;type RawDepartmentProductEdge = RawEdge&lt;Product&gt;&#xA;&#xA;@ObjectType()&#xA;class DepartmentProductEdge extends Edge(Product) {}&#xA;&#xA;@ObjectType()&#xA;class DepartmentProductConnection extends Connection(Product, DepartmentProductEdge) {}&#xA;</code></pre>&#xA;",10768928,,,,2022-01-17 17:16:28,"",,0,0,0,2022-01-17 17:16:28
70746809,1,70749731,,0,290,"<p>I am trying to create a Price Rule to automatically apply a discount at checkout. I am getting the error:</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Parse error on \&quot;1\&quot; (INT) at [4, 24]&quot;,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 4,&#xA;          &quot;column&quot;: 24&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>From mutation:</p>&#xA;<pre><code>mutation priceRuleCreate($priceRule: PriceRuleInput!) {&#xA;  priceRuleCreate(priceRule: $priceRule) {&#xA;    priceRule {&#xA;      allocationLimit: 1,&#xA;      allocationMethod: &quot;ACROSS&quot;,&#xA;         customerSelection: {&#xA;        customerIdsToAdd: [&quot;gid://shopify/Customer/5476062265403&quot;]&#xA;      },&#xA;      itemEntitlements: {&#xA;        collectionIds: [&quot;gid://shopify/Collection/267286741051&quot;]&#xA;      },&#xA;      itemPrerequisites: {&#xA;        collectionIds: [&quot;gid://shopify/Collection/267286741051&quot;]&#xA;      },&#xA;      prerequisiteShippingPriceRange: {&#xA;        greaterThanOrEqualTo: 0.00&#xA;      },&#xA;      prerequisiteSubtotalRange: {&#xA;        greaterThanOrEqualTo: 0.00&#xA;    },&#xA;    prerequisiteQuantityRange: {&#xA;        greaterThan: 1&#xA;    },&#xA;    shippingEntitlements: {&#xA;      countryCodes: [&quot;US&quot;],&#xA;      includeRestOfWorld: true&#xA;    },&#xA;    usageLimit: 3,&#xA;    title: &quot;HB-131&quot;,&#xA;    target: &quot;LINE_ITEM&quot;,&#xA;    value: {&#xA;      fixedAmountValue: 10.00&#xA;    },&#xA;    validityPeriod: {&#xA;        start: &quot;2019-09-07T15:50:00Z&quot;&#xA;      }&#xA;  }&#xA;    &#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I'm unsure why I am getting this error since I am following the format from the documentation: <a href=""https://shopify.dev/api/admin-graphql/2021-04/mutations/priceRuleCreate"" rel=""nofollow noreferrer"">https://shopify.dev/api/admin-graphql/2021-04/mutations/priceRuleCreate</a></p>&#xA;<p>For context I am using the GraphQL playground app that Shopify offers.</p>&#xA;",7490081,,,,2022-01-18 02:39:52,Shopify PriceRule Create Mutation,<graphql><shopify><shopify-api>,1,0,0,2022-01-17 19:53:49
70756383,1,,,2,271,"<p>I want to use AWS X-Ray with Apollo Federation. The Apollo Gateway is hosted on AWS Lambda and it calls subservices which are also hosted on AWS Lambda.</p>&#xA;<p>I activated tracing for every lambda (gateway &amp; subservices) in <code>serverless.yml</code>:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>    tracing: {&#xA;      apiGateway: true,&#xA;      lambda: true,&#xA;    }&#xA;</code></pre>&#xA;<p>And I instrumented every lambda to capture HTTPs calls globally:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const AWSXRay = require(&quot;aws-xray-sdk&quot;);&#xA;&#xA;AWSXRay.captureHTTPsGlobal(require(&quot;https&quot;));&#xA;</code></pre>&#xA;<p>The traces for gateway and subservices work well. Below is the gateway trace and subservice trace:&#xA;<a href=""https://i.stack.imgur.com/eeTxa.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eeTxa.png"" alt=""enter image description here"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/08Caj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/08Caj.png"" alt=""enter image description here"" /></a></p>&#xA;<p>However, it seems the subservice traces use a different <code>traceID</code> even though the header <code>x-amzn-trace-id</code> is correctly passed from the gateway to the subservice:&#xA;<a href=""https://i.stack.imgur.com/ihac8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ihac8.png"" alt=""enter image description here"" /></a></p>&#xA;<p>The picture above is a screenshot of cloudwatch logs of one subservice. The header <code>x-amzn-trace-id</code> is correctly passed from the gateway (1st &amp; 2nd red rectangles), but it is different from the <code>traceId</code> used for the lambda (rectangle at the bottom). Hence, both traces cannot be gathered together.</p>&#xA;<p>Am I missing something here?</p>&#xA;",8796826,,,,2022-01-18 13:29:36,AWS X-Ray - Lambda invoked by another lambda does not use parent traceID,<aws-lambda><trace><aws-xray><apollo-federation>,0,0,0,2022-01-18 13:29:36
70777123,2,,63181325,2,,"<p>This is my C# based idea on how this issue can be approached, perhaps by not completely solving it, but rather improving the performance. The below shown code solves the problem of &quot;retrieving all commits within the default branch of a repository&quot;, however, it can be applied to almost any cursor-based pagination scenario on GitHub GraphQL. I am aware that your question was concerning &quot;all commits of all branches, deduplicated&quot;, however, I believe this approach may be useful to you as well.</p>&#xA;<p>The inherent problem of querying a large repository is the 100 results per page limit, and the fact that you have to iterate over the pages one by one, as each page contains the cursor to the next page. I've solved the cursor-identification issue in my solution, and by concurrently sending all page requests at once reduced the overall execution time.</p>&#xA;<p>The idea is to create an initial request to GitHub GraphQL API fetching only the total count for the given filters. I assumed that we would fetch 100 results per page. As the GitHub commit page cursors are always in the format &quot;xX9XXXXXXX3961722145Xf39cc9617XXXXxxx 99&quot;, where the first part is the first commit oid (the first commit of the first page - all cursors on all pages use this oid - it doesn't change when iterating), and 99 is the order number of the last commit of the previous page (0 based index), it is quite easy to calculate what the cursors for each page of a 670 commits repository will be by only making the &quot;totalCount&quot; request:</p>&#xA;<ol>&#xA;<li>null</li>&#xA;<li>&quot;xX9XXXXXXX3961722145Xf39cc9617XXXXxxx 99&quot;</li>&#xA;<li>&quot;xX9XXXXXXX3961722145Xf39cc9617XXXXxxx 199&quot;</li>&#xA;<li>&quot;xX9XXXXXXX3961722145Xf39cc9617XXXXxxx 299&quot;</li>&#xA;<li>&quot;xX9XXXXXXX3961722145Xf39cc9617XXXXxxx 399&quot;</li>&#xA;<li>&quot;xX9XXXXXXX3961722145Xf39cc9617XXXXxxx 499&quot;</li>&#xA;<li>&quot;xX9XXXXXXX3961722145Xf39cc9617XXXXxxx 599&quot;</li>&#xA;</ol>&#xA;<p>After the cursors that identify the beginning of each page are generated, we can prepare a separate <code>Task</code> for each page, where the <code>Task</code> will contain a request to GitHub GraphQL to fetch one page, and use <code>Task.WhenAll</code> to execute them all.</p>&#xA;<p>I've tested this on a repository of 670 commits, and all 7 pages are fetched within around 7 seconds in total. If I iterate through each page, it takes around 4 seconds per page, which totals to 25 - 30 seconds.</p>&#xA;<p>It should be noted that this was not tested in a production environment, it doesn't concern error handling, and the parallelism/concurrency implementation can most probably be improved, so it should only be viewed as a proof of concept. Additionally, I am not sure how GitHub API will handle when you send requests for repositories that have 100 or 1000 pages of commits.</p>&#xA;<pre class=""lang-cs prettyprint-override""><code>public async Task&lt;List&lt;Commit&gt;&gt; GetCommitsByPeriodAsync(Guid integrationId, DateTime since, string repositoryName, string repositoryOwner)&#xA;{&#xA;    string initialCursor = null;&#xA;&#xA;    var firstPageInfo = await GetDefaultBranchCommitsFirstPageInfoAsync(since, initialCursor, repositoryOwner, repositoryName);&#xA;    var commitPagesCursors = GetCommitPagesCursors(firstPageInfo, initialCursor );&#xA;&#xA;    var tasks = commitPagesCursors.Select(x =&gt; GetDefaultBranchCommitsPageByPeriodAsync(since, x, repositoryOwner, repositoryName));&#xA;&#xA;    var results = await Task.WhenAll(tasks);&#xA;    var branchCommitsByPeriod = results.SelectMany(x =&gt; x.Commits)&#xA;                                       .ToList();&#xA;&#xA;    return branchCommitsByPeriod;&#xA;}&#xA;&#xA;private List&lt;string&gt; GetCommitPagesCursors(GetCommitsPageInfoResponse firstPageInfo, string initialCursor)&#xA;{&#xA;    // Two initial cursors will always be &quot;null&quot;, and &quot;oid 99&quot; for 100 items pages&#xA;    var cursors = new List&lt;string&gt; { initialCursor, firstPageInfo.PageInfo.EndCursor };&#xA;    int totalCount = firstPageInfo.TotalCount;&#xA;&#xA;    var firstCommitCursorSplit = firstPageInfo.PageInfo.EndCursor.Split(&quot; &quot;);&#xA;    var firstCommitId = firstCommitCursorSplit[0];&#xA;&#xA;    var lastPageCommitNumberString = firstCommitCursorSplit[1];&#xA;&#xA;    // TO DO: handling TryParse failure scenario&#xA;    int.TryParse(lastPageCommitNumberString, out int lastPageCommitNumber);&#xA;&#xA;    // 100 is the max number of objects in a page&#xA;    lastPageCommitNumber += 100;&#xA;&#xA;    while (lastPageCommitNumber &lt; totalCount)&#xA;    {&#xA;        string nextPageCursor = $&quot;{firstCommitId} {lastPageCommitNumber}&quot;;&#xA;        cursors.Add(nextPageCursor);&#xA;&#xA;        lastPageCommitNumber += 100;&#xA;    }&#xA;&#xA;    return cursors;&#xA;}&#xA;&#xA;public async Task&lt;GetCommitsPageInfoResponse&gt; GetDefaultBranchCommitsFirstPageInfoAsync(DateTime since, string cursor, string repositoryOwner, string repositoryName)&#xA;{&#xA;    // Code omitted for brevity&#xA;    var commitsRequest = new GraphQLRequest&#xA;    {&#xA;        Query = @&quot;&#xA;            query GetCommitsFirstPage($cursor: String, $commitsSince: GitTimestamp!, $repositoryName: String!, $repositoryOwner: String!) {&#xA;              repository(name: $repositoryName, owner: $repositoryOwner) {&#xA;                defaultBranchRef{&#xA;                  target {&#xA;                    ... on Commit {&#xA;                      history(after: $cursor, since: $commitsSince) {&#xA;                        totalCount&#xA;                        pageInfo {&#xA;                          endCursor&#xA;                          hasNextPage&#xA;                        }                      &#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&quot;,&#xA;        OperationName = &quot;GetCommitsFirstPage&quot;,&#xA;        Variables = new&#xA;        {&#xA;            commitsSince = since.ToString(&quot;o&quot;),&#xA;            cursor = cursor,&#xA;            repositoryOwner = repositoryOwner,&#xA;            repositoryName = repositoryName&#xA;        }&#xA;    };&#xA;    // Code omitted for brevity&#xA;}&#xA;&#xA;public async Task&lt;GetCommitsPageResponse&gt; GetDefaultBranchCommitsPageByPeriodAsync(DateTime since, string cursor, string repositoryOwner, string repositoryName)&#xA;{&#xA;    &#xA;    // Code omitted for brevity&#xA;&#xA;    var commitsRequest = new GraphQLRequest&#xA;    {&#xA;        Query = @&quot;&#xA;            query GetCommitsSinceTimestamp($cursor: String, $commitsSince: GitTimestamp!, $repositoryName: String!, $repositoryOwner: String!) {&#xA;              repository(name: $repositoryName, owner: $repositoryOwner) {&#xA;                defaultBranchRef{&#xA;                  target {&#xA;                    ... on Commit {&#xA;                      history(after: $cursor, since: $commitsSince) {&#xA;                        pageInfo {&#xA;                          endCursor&#xA;                          hasNextPage&#xA;                        }&#xA;                        edges {&#xA;                          node {&#xA;                            oid&#xA;                            additions&#xA;                            deletions&#xA;                            commitUrl&#xA;                            url&#xA;                            committedDate&#xA;                            associatedPullRequests (first: 10) {&#xA;                                              nodes {&#xA;                                                id&#xA;                                                mergedAt&#xA;                                              }&#xA;                                            }&#xA;                            repository {&#xA;                              databaseId&#xA;                              nameWithOwner&#xA;                            }&#xA;                            author {&#xA;                              name&#xA;                              email&#xA;                              user {&#xA;                                login&#xA;                              }&#xA;                            }&#xA;                            message&#xA;                          }&#xA;                        }&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&quot;,&#xA;        OperationName = &quot;GetCommitsSinceTimestamp&quot;,&#xA;        Variables = new&#xA;        {&#xA;            commitsSince = since.ToString(&quot;o&quot;),&#xA;            cursor = cursor,&#xA;            repositoryOwner = repositoryOwner,&#xA;            repositoryName = repositoryName&#xA;        }&#xA;    };&#xA;    // Code omitted for brevity&#xA;}&#xA;</code></pre>&#xA;",8319409,,8319409,2022-01-19 21:08:37,2022-01-19 21:08:37,"",,0,2,0,2022-01-19 20:08:32
70785114,1,70786528,,1,124,<p>Using the Contentful CMS I've created a content model that allows for multiple items within a series of items. Part of the GraphQL query is as follows below:</p>&#xA;<pre><code>   valueContainers {&#xA;    id&#xA;    title&#xA;    description&#xA;    singularValue {&#xA;      id&#xA;      subValueTitle&#xA;      subValueContent {&#xA;        subValueContent&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>I'm able to display the titles of the top level sections (valueContainers)  but I'm trying to map the singular value inner array within but I'm struggling to pass through the data. My code to map the array below is as follows:</p>&#xA;<pre><code>    return (&#xA;    &lt;ValuesWrapper&gt;&#xA;        {props.valueList.map((value) =&gt; (&#xA;            &lt;ValueContainer&gt;&#xA;                &lt;ValueTitle key={value.id}&gt;{value.title}&lt;/ValueTitle&gt;&#xA;                &lt;ValuesDescription&gt;{value.description}&lt;/ValuesDescription&gt;&#xA;                {value.singularValue.map((item) =&gt; (&#xA;                    &lt;SingleItem key={item.id}&gt;{item.subValueTitle}&lt;/SingleItem&gt;&#xA;                ))}&#xA;            &lt;/ValueContainer&gt;&#xA;        ))}&#xA;    &lt;/ValuesWrapper&gt;&#xA;)&#xA;</code></pre>&#xA;<p>I'm getting an error message on the front end that says:</p>&#xA;<pre><code>Error in function eval&#xA;&#xA;Cannot read properties of null (reading 'map')&#xA;</code></pre>&#xA;,17924050,,,,2022-01-20 14:34:59,"Accessing an array within an array using React, Gatsby and GraphQL",<reactjs><graphql><gatsby><contentful>,1,0,0,2022-01-20 11:08:26
70804737,1,,,-2,135,"<p>I try to build a site from Shopify API with Gatsby.&#xA;I manage to query information from product, but I don't find a way to query the page from Shopify. I don't find in <code>graphQl</code> something like <code>allShopifyPages</code> that can give the information, description, title or anything else about the page who has been created in Shopify. So my question is possible and if yes how ?&#xA;Below the examples of page content I want to query in <code>graphql</code>&#xA;I've opened a discussion on Gatsby but nobody answered from few months.&#xA;<a href=""https://github.com/gatsbyjs/gatsby/discussions/33394"" rel=""nofollow noreferrer"">https://github.com/gatsbyjs/gatsby/discussions/33394</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/2CmBj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2CmBj.png"" alt=""enter image description here"" /></a></p>&#xA;",4783796,,,,2022-01-23 15:05:57,Gatsby + Shopify query page from shopisify is it possible?,<graphql><shopify><gatsby>,1,2,0,2022-01-21 16:46:06
70814813,1,,,1,309,"<p>I need to generate the sha256 string from a graphql query - without Apollo. Assuming my query looks something like:</p>&#xA;<pre><code>query Foo {&#xA;  bar {&#xA;    test&#xA;  }&#xA;  bar2&#xA;}&#xA;</code></pre>&#xA;<p>How to properly format the string to match with the query in the URL? E.g. with/without white spaces, etc.</p>&#xA;<p>Ty</p>&#xA;",3795530,,,,2022-05-04 16:21:12,How to generate the Apollo sha256 hash?,<graphql><apollo><apollo-client>,0,0,0,2022-01-22 16:28:42
70831288,1,,,0,279,"<p>How do I create a private metafield on Shopify using Admin-graphql? In their docs, they have given example for retrieving a private metafield by its ID(ref: <a href=""https://shopify.dev/api/admin-graphql/2022-01/queries/privateMetafield#section-examples"" rel=""nofollow noreferrer"">https://shopify.dev/api/admin-graphql/2022-01/queries/privateMetafield#section-examples</a>), do you have any example for creating private metafield using Node.js?</p>&#xA;",8059419,,,,2022-06-02 03:15:38,Admin-graphql - Create private metafield on shopify,<node.js><graphql><shopify><meta>,1,0,0,2022-01-24 09:01:21
70833150,2,,70382084,26,,"<p>Based on <a href=""https://stackoverflow.com/a/70389991/1639453"">answer</a> given by @Osman.</p>&#xA;<p>The problem seems to be occuring with Django-4. Till the <a href=""https://github.com/graphql-python/graphene-django/pull/1275"" rel=""noreferrer"">PR</a> gets merged, probably this monkeypatching might work (not tested in prod):</p>&#xA;<pre><code>import django&#xA;from django.utils.encoding import force_str&#xA;django.utils.encoding.force_text = force_str&#xA;</code></pre>&#xA;<p>Put this in entryfile. I kept it in settings.py for time being.</p>&#xA;",1639453,,1639453,2022-01-24 11:38:58,2022-01-24 11:38:58,"",,0,4,0,2022-01-24 11:30:13
70836631,2,,44746923,0,,"<p>Another option if you're willing to give up on the type-safety and subfield querying that GraphQL provides along with the ability to cache and reference the objects by their IDs is to encode the data as JSON. The <a href=""https://github.com/Urigo/graphql-scalars"" rel=""nofollow noreferrer"">gaphql-type-json</a> package provides resolvers to make this easy. These are also included with permission by <a href=""https://github.com/Urigo/graphql-scalars"" rel=""nofollow noreferrer"">graphql-scalars</a> which contains a lot of other handy scalars.</p>&#xA;<p>I'm doing this for the hierarchical data that defines the controls for a dynamic form. In this case, there aren't any IDs to lose, so it's an easy win.</p>&#xA;",285873,,,,2022-01-24 15:53:17,"",,0,0,0,2022-01-24 15:53:17
70846681,2,,70822780,0,,"<p>This was an interpretation mistake on my part</p>&#xA;<p>The reasoning is that resolvers with a union type as the return definition should indeed just return one of those, in the case above, <code>UserError</code> and <code>EmailTakenError</code> wouldn't be returned on the same response</p>&#xA;<p><a href=""https://github.com/MichalLytek/type-graphql/discussions/1179#discussioncomment-2034034"" rel=""nofollow noreferrer"">More info on this GitHub discussion</a></p>&#xA;",11681774,,,,2022-01-25 10:01:13,"",,0,0,0,2022-01-25 10:01:13
70852451,2,,70533244,1,,"<p>After reading your comment clarifying your question for Heather, I believe what you're wanting to do is get the lowest priced product and the highest priced product from your whole catalog.</p>&#xA;<p><em>Example:</em> If you have 1000 products, you want to get the lowest priced product out of all of them, as well as the highest priced product.</p>&#xA;<p>If I'm understanding this correctly, there's not currently a way to make such a query in GraphQL. However, you can easily do this using the BigCommerce server-side API.</p>&#xA;<p>In order to do this with the server-side API, you'll need to utilize the <strong>sort</strong>, <strong>direction</strong>, and <strong>query</strong> parameters for the <strong>GET /v3/catalog/products</strong> API endpoint. <a href=""https://developer.bigcommerce.com/api-reference/store-management/catalog/products/getproducts"" rel=""nofollow noreferrer"">(Reference)</a></p>&#xA;<p>I was able to accomplish this on my own store by making 2 API requests like so:</p>&#xA;<ul>&#xA;<li><strong>GET /v3/catalog/products?limit=1&amp;sort=price&amp;direction=asc</strong> - This will fetch the lowest price product on my store.</li>&#xA;<li><strong>GET /v3/catalog/products?limit=1&amp;sort=price&amp;direction=desc</strong> - This will fetch the highest price product on my store.</li>&#xA;</ul>&#xA;<p>Making the above two requests will get you the information you're looking for.</p>&#xA;",17178915,,,,2022-01-25 16:43:44,"",,0,3,0,2022-01-25 16:43:44
70857659,1,,,0,164,"<p>I have a data structure as follows:</p>&#xA;<pre><code>type User {&#xA;name: String&#xA;favoriteIds: [String]&#xA;favoriteItems: [Item]&#xA;}&#xA;&#xA;type Item {&#xA;item_id: String&#xA;item_color: String&#xA;}&#xA;</code></pre>&#xA;<p>I would like to add a resolver to pull the Items that are favorited by the user, based on the list of item_ids in the &quot;favoriteIds&quot; array. I've tried to think this through without restructuring the data but cannot think of a way. How would I go about writing the resolver?</p>&#xA;",3785667,,,,2022-01-26 01:17:01,"How to handle a query with ""array-contains"" type relationships in Appsync / GraphQL / DynamoDB?",<graphql><amazon-dynamodb><aws-appsync><aws-appsync-resolver>,0,0,0,2022-01-26 01:17:01
70861915,2,,68468687,0,,"<p>I had to struggle unnecessarily to do this operation. Insomnia tool is automatically converting the GraphQL query to JSON query. Copy and paste or write your GraphQL query, keeping the input mode format as GraphQL. After you are done with that, select JSON. Your GraphQL query will be converted automatically to the JSON query format.</p>&#xA;<p>Thanks to the help provided in the video: <a href=""https://youtu.be/AaD03fv6q-o"" rel=""nofollow noreferrer"">https://youtu.be/AaD03fv6q-o</a>. Just for the people who need help as I got.</p>&#xA;",2437771,,2437771,2022-05-15 16:01:42,2022-05-15 16:01:42,"",,0,0,0,2022-01-26 10:23:16
70864407,2,,46513476,1,,"<p>I faced the same issue. For me, it was an  issue with Mongo DB model.js file.</p>&#xA;<p>GraphQL kept throwing that error because my model was saving the field as an object whereas graphQL was returning it as an array.&#xA;The code that caused the error was this.</p>&#xA;<pre><code>tableHeaders: {&#xA;            &#xA;              text: {&#xA;                type: String,&#xA;                required: false,&#xA;              },&#xA;              align: {&#xA;                type: String,&#xA;                required: false,&#xA;              },&#xA;              sortable: {&#xA;                type: Boolean,&#xA;                required: false,&#xA;              },&#xA;              value: {&#xA;                type: String,&#xA;                required: false,&#xA;              },&#xA;            &#xA;          },&#xA;</code></pre>&#xA;<p>It was corrected to the following.</p>&#xA;<pre><code>tableHeaders: [&#xA;            {&#xA;              text: {&#xA;                type: String,&#xA;                required: false,&#xA;              },&#xA;              align: {&#xA;                type: String,&#xA;                required: false,&#xA;              },&#xA;              sortable: {&#xA;                type: Boolean,&#xA;                required: false,&#xA;              },&#xA;              value: {&#xA;                type: String,&#xA;                required: false,&#xA;              },&#xA;            },&#xA;          ],&#xA;</code></pre>&#xA;<p>Changing type from object to array fixed it.</p>&#xA;",7284645,,7284645,2022-02-04 13:26:15,2022-02-04 13:26:15,"",,0,0,0,2022-01-26 13:45:08
70871893,2,,70871739,0,,"<p>I would have one array of objects storing teachers' datas. Example below.</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>const teacherData = [&#xA;  { id: 'piano',&#xA;    name: ""Alex"",&#xA;    otherData: ...&#xA;  },&#xA;  ... (similarly for the rest)&#xA;]</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>Then another array of objects/records for instrument-teachers. Such as:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>const records = [&#xA;  {&#xA;  id: 'piano',&#xA;  teacher: []&#xA;  }&#xA;]</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>After this I would loop through each element in the teacherData array to get the finalized record Array with id being the type of instrument and teachers being all the teachers that play that type of instruments.</p>&#xA;<p>Now, getting into the display part. I would write my component as below:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const Dashboard = () =&gt; {&#xA;  const [show, setShow] = React.useState([])&#xA;  &#xA;  function handleClick(id) {&#xA;    if show.includes(id) {&#xA;      const newShow = show.filter(a =&gt; a !== id)&#xA;      setShow(newShow)&#xA;    } else {&#xA;      const newShow = show.push(id)&#xA;      setShow(newShow)&#xA;    }    &#xA;  }&#xA;  return (&#xA;  &lt;div className=""dashboard""&gt;&#xA;    {records.map((record) =&gt; &#xA;      (&#xA;      &lt;div className=""instrument-wrapper""&gt;&#xA;      &lt;p onClick={() =&gt; handleClick(record.id)} &gt;{record.id}&lt;/p&gt; //The name of the instrument&#xA;      {show.includes(record.id) ?  (&#xA;        &lt;div&gt; &#xA;        ... all the teachers here by mapping through the record.teachers&#xA;        &lt;/div&gt;&#xA;      ) : (null)}&#xA;      &lt;div&gt;&#xA;      )&#xA;    )}&#xA;  &lt;/div&gt;&#xA;  )&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",14161603,,,,2022-01-27 00:25:16,"",,0,0,0,2022-01-27 00:25:16
70875147,2,,70874621,0,,"<p>Its a bad idea to use <code>for...in</code> for looping, you can map the values instead of using a <code>for...in</code> or just use regular loop.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>if (products){&#xA;    products.map((x) =&gt; y.push(x.name));&#xA;}&#xA;</code></pre>&#xA;",16426405,,16426405,2022-01-27 08:12:41,2022-01-27 08:12:41,"",,0,3,0,2022-01-27 08:04:47
70879340,2,,70877269,1,,"<p>I'll answer regagarding the BigCommerce Management API (not the Storefront GraphQL API). Both the v2 and v3 APIs default to 250 items if you don't otherwise specify your limit.</p>&#xA;<p>Both v2 and v3 accept <code>limit</code> and <code>page</code> querystring parameters that indicate your page size and which page you want.</p>&#xA;<p>In v2, you just keep requesting data while increasing your page number each time until you get an empty data response.</p>&#xA;<p>The v3 responses include a <code>meta</code> object that is helpful for pagination.</p>&#xA;<pre><code>  &quot;meta&quot;: {&#xA;    &quot;pagination&quot;: {&#xA;      &quot;total&quot;: 2,&#xA;      &quot;count&quot;: 2,&#xA;      &quot;per_page&quot;: 2,&#xA;      &quot;current_page&quot;: 1,&#xA;      &quot;total_pages&quot;: 1,&#xA;      &quot;links&quot;: {&#xA;        &quot;next&quot;: &quot;?sort=name&amp;include=variants&amp;limit=10&amp;page=2&quot;,&#xA;        &quot;current&quot;: &quot;?sort=name&amp;include=variants&amp;limit=10&amp;page=1&quot;&#xA;      },&#xA;      &quot;too_many&quot;: false&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>Therefore, fetching 100,000+ products, customers, etc is a matter of fetching up to 250 at a time.</p>&#xA;<p><a href=""https://developer.bigcommerce.com/api-reference"" rel=""nofollow noreferrer"">https://developer.bigcommerce.com/api-reference</a></p>&#xA;",2066449,,,,2022-01-27 13:27:37,"",,0,0,0,2022-01-27 13:27:37
70879382,2,,70878936,0,,"<p>You have two things going on here. First, you're not returning the response in your <code>then</code> statement so <code>data</code> is undefined. So you need to change this to:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const { data } = await client&#xA;  .query({&#xA;    query: gql`&#xA;      { ... }&#xA;    `,&#xA;  }).then((res) =&gt; {&#xA;    console.log(res)&#xA;    return res&#xA;  }).catch((err) =&gt; {&#xA;    console.log(err, &quot;error on your side&quot;)&#xA;    return err&#xA;  })&#xA;</code></pre>&#xA;<p>Without this, your <code>then</code> statement is capturing the response and returning the console log statement to <code>const {data}</code> which is a problem because <code>data</code> is not defined on <code>console.log</code>.</p>&#xA;<p>Once you fix that, you may run into another error, this time from SpaceX - <code>query exceeds complexity limit</code>. This isn't so much a problem with your code but with the number of data points and depth of information you're trying to pull from the api. I can't tell you how to fix that one because it depends on your business rules, but once you solve it, you should see data flowing.</p>&#xA;",2458149,,,,2022-01-27 13:30:28,"",,0,0,0,2022-01-27 13:30:28
70879887,1,,,0,43,<p>I'm sending a query from <code>Grqphql</code> to service and imagine I have a order model which has a relationship with owner model.</p>&#xA;<p>OrderResolver.ts</p>&#xA;<pre><code>@Query((returns) =&gt; [Order])&#xA;  async orders() {&#xA;    return this.orderService.findAll();&#xA;  }&#xA;</code></pre>&#xA;<p>OrderService.ts</p>&#xA;<pre><code>async findAll() {&#xA;    return (&#xA;      this.orderModel&#xA;        .find()&#xA;        .populate('owner') // =&gt; only populate if is is needed in query&#xA;        .exec()&#xA;    );&#xA;  }&#xA;</code></pre>&#xA;<p>Graphql query:</p>&#xA;<pre><code>query{&#xA;  orders{&#xA;    id&#xA;    owner{   // only populate if this block exists&#xA;      id&#xA;      name&#xA;      email&#xA;    }&#xA;        &#xA;    paymentStatus&#xA;    status&#xA;    totalPrice&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,5160077,,,,2022-01-27 14:02:59,Is there an elegant solution for auto populating other models based on Query in nest.js Graphql?,<graphql><nestjs>,0,0,0,2022-01-27 14:02:59
70890517,2,,68934570,1,,<p>It's just the product variant id you want to add.</p>&#xA;,6504661,,446477,2022-01-28 13:05:29,2022-01-28 13:05:29,"",,0,2,0,2022-01-28 08:04:07
70911065,1,70911083,,0,146,"<p>I want to get specific variable of amount.</p>&#xA;<p>Is it possible to say something, like: if index == 1 then return first amount? where possible amounts are: &quot;3333&quot; &quot;444&quot; &quot;555&quot;<br />&#xA;If it is possible, how can I do it in the code?</p>&#xA;<p>query:&#xA;</p>&#xA;<pre><code>items{&#xA;    name&#xA;    amount&#xA;  }&#xA;</code></pre>&#xA;&#xA;&#xA;<pre><code>const { data } = useQuery(ITEMS)&#xA;&#xA;{data.items.map((items, index) =&gt; ( &lt;p&gt;{items.amount}&lt;/p&gt;))}&#xA;</code></pre>&#xA;&#xA;",18047566,,18047566,2022-01-30 01:17:57,2022-01-30 01:17:57,Is it possible to output with specific index?,<reactjs><graphql><apollo-client>,1,5,0,2022-01-30 01:09:33
70913956,2,,70669718,1,,"<p>I had this same issue yesterday and followed <a href=""https://github.com/graphql/graphql-js/issues/1272#issuecomment-377384574"" rel=""nofollow noreferrer"">this answer from github</a>  and  I add <code>'.mjs'</code> to my <code>configureWebpack</code> extensions. and to the rules. Just make sure to appear before <code>.js'</code>.&#xA;So basically you will have as follow :</p>&#xA;<pre><code>const config = {&#xA; configureWebpack: {&#xA;   resolve: { // .mjs comes before .js &#xA;     extensions: ['*', '.mjs', '.js', '.json', '.gql', '.graphql']&#xA;   },&#xA;   module: {&#xA;     rules: [ &#xA;       {&#xA;         test: /\.mjs$/,&#xA;         include: /node_modules/,&#xA;         type: 'javascript/auto'&#xA;       },&#xA;       // all the other rules&#xA;     ]&#xA;   }&#xA; }&#xA;}&#xA;&#xA;module.exports = config&#xA;</code></pre>&#xA;",0,user13641108,,,2022-01-30 10:55:30,"",,0,0,0,2022-01-30 10:55:30
70914193,1,,,1,478,"<p>I'm building an app using <code>shopify Storefront api</code>. So far I'm able to fetch products, collections. But when I try to filter the products in a collection it is not returning results as expected. Here is what i'm trying in postman</p>&#xA;<pre><code>{&#xA;  collection(id:&quot;Z2lkOi8vc2hvcGlmeS9Db2xsZWN // collection id&quot;){&#xA;    products(first:10, filters:[{productVendor:&quot;ADDIDAS&quot;}]){&#xA;      edges{&#xA;        node{&#xA;            id&#xA;            title&#xA;            description&#xA;            productType&#xA;            vendor&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But i'm getting results that have vendor of NIKE and other types. Do i need to change something?&#xA;But when i try filter using <code>price</code> it works fine but when i try filtering using <code>productType</code> it is giving me not expected results. Am i doing something wrong?&#xA;Please help here</p>&#xA;<p><a href=""https://i.stack.imgur.com/fRhoc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fRhoc.png"" alt=""enter image description here"" /></a></p>&#xA;",5279836,,,,2022-07-04 11:42:22,shopify storefront api doesn't show filter results as expected,<graphql><postman><shopify><shopify-storefront-api>,0,2,0,2022-01-30 11:31:35
70914946,2,,70914519,0,,"<p>I realized that I omitted the <code>return</code> statement in the <code>map</code> function in <code>searchBarAccordion.jsx</code>...</p>&#xA;<p><a href=""https://i.stack.imgur.com/KGlkr.png"" rel=""nofollow noreferrer"">Screenshot</a></p>&#xA;",15021095,,,,2022-01-30 13:12:05,"",,0,0,0,2022-01-30 13:12:05
70922731,1,,,2,2566,"<pre><code>    const { ApolloServer, gql } = require('apollo-server');&#xA;    &#xA;    // A schema is a collection of type definitions (hence &quot;typeDefs&quot;)&#xA;    // that together define the &quot;shape&quot; of queries that are executed against&#xA;    // your data.&#xA;    const typeDefs = gql`&#xA;      # Comments in GraphQL strings (such as this one) start with the hash (#) symbol.&#xA;    &#xA;      # This &quot;Book&quot; type defines the queryable fields for every book in our data source.&#xA;      type Book {&#xA;        title: String&#xA;        author: String&#xA;      }&#xA;    &#xA;      # The &quot;Query&quot; type is special: it lists all of the available queries that&#xA;      # clients can execute, along with the return type for each. In this&#xA;      # case, the &quot;books&quot; query returns an array of zero or more Books (defined above).&#xA;      type Query {&#xA;        books: [Book]&#xA;      }&#xA;    `;&#xA;const books = [&#xA;  {&#xA;    title: 'The Awakening',&#xA;    author: 'Kate Chopin',&#xA;  },&#xA;  {&#xA;    title: 'City of Glass',&#xA;    author: 'Paul Auster',&#xA;  },&#xA;];&#xA;&#xA;// Resolvers define the technique for fetching the types defined in the&#xA;// schema. This resolver retrieves books from the &quot;books&quot; array above.&#xA;const resolvers = {&#xA;  Query: {&#xA;    books: () =&gt; books,&#xA;  },&#xA;};&#xA;&#xA;// The ApolloServer constructor requires two parameters: your schema&#xA;// definition and your set of resolvers.&#xA;const server = new ApolloServer({ typeDefs, resolvers });&#xA;&#xA;// The `listen` method launches a web server.&#xA;server.listen().then(({ url }) =&gt; {&#xA;  console.log(`  Server ready at ${url}`);&#xA;});&#xA;</code></pre>&#xA;<p>So this is the code I copied from official Apollo GraphQL site. I use graphql 16.3 and apollo-server 2.25.3.&#xA;I don't know what the message told me what to fix. Help me please. Thank you guys so much!</p>&#xA;",9862337,,,,2022-02-08 15:48:09,"grapql@16 dropped long-deprecated support for positional arguments, please pass an object instead",<graphql><apollo><apollo-server>,1,0,0,2022-01-31 07:58:09
70923965,2,,50434490,0,,"<p>For anyone that follows apollo-client has now been sunset, in favour of <a href=""https://www.apollographql.com/docs/react/migrating/apollo-client-3-migration/#apollo-client"" rel=""nofollow noreferrer"">@apollo/client</a></p>&#xA;<p>Here is how you should be <a href=""https://www.apollographql.com/docs/react/data/queries/#caching-query-results"" rel=""nofollow noreferrer"">constructing a query</a></p>&#xA;",11561000,,,,2022-01-31 09:50:23,"",,0,0,0,2022-01-31 09:50:23
70930879,2,,70930612,0,,"<p>Based on the error message</p>&#xA;<blockquote>&#xA;<p>&quot;expecting a value for non-nullable variable: &quot;payload&quot;&quot;</p>&#xA;</blockquote>&#xA;<p>you should be passing the array via an object</p>&#xA;<pre><code>{&#xA;  payload: [&#xA;    {&#xA;    &quot;device&quot;: &quot;TEST&quot;,&#xA;    &quot;value&quot;: 5630,&#xA;    &quot;variable&quot;: &quot;Length&quot;&#xA;    },&#xA;    {&#xA;    &quot;device&quot;: &quot;TEST&quot;,&#xA;    &quot;value&quot;: 5631,&#xA;    &quot;variable&quot;: &quot;Length&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;",4717424,,,,2022-01-31 18:16:22,"",,0,0,0,2022-01-31 18:16:22
70932492,2,,70870366,1,,"<p>I hope this spares someone some angst.</p>&#xA;<p>The format that works in Apollo Studio Explorer is</p>&#xA;<p>Key: Authorization&#xA;Value: Bearer[space][token]</p>&#xA;<p>There are no curly braces and no quotation marks in any of this. See <a href=""https://stackoverflow.com/questions/33265812/best-http-authorization-header-type-for-jwt/33281233#33281233"">this post</a> for more discussion about this.</p>&#xA;",2860931,,,,2022-01-31 20:34:20,"",,0,0,0,2022-01-31 20:34:20
70936426,1,,,0,60,"<p>I am not sure the best way to ask this but I will give it a shot and hopefully have someone steer me in the right direction.</p>&#xA;<p>I currently am building a headless Shopify store using NextJS and Apollo for fetching data. I was able to create a single product page for each product using NextJS which uses dynamic routing using the product's handle. I was able to code up the &quot;Add to cart&quot; button which will add the product as a line item inside the shopping cart menu that pops up when product is added. When I go to the home page, the products remain in the cart. If I click on any of the products in my home page (which leads to their own single product page), the products inside my cart disappear.</p>&#xA;<p>How can I make the products inside my cart persist? I have all my apollo useMutation inside the single product page along (with the dynamic routing using the product's handle).</p>&#xA;",10458581,,,,2022-02-01 06:36:07,"How To Prevent Losing Line Items Inside Cart When Using Apollo, Nextjs With SSR?",<next.js><apollo-client><shopify-storefront-api>,0,0,0,2022-02-01 06:36:07
70941687,2,,70755517,2,,"<p><code>app.use(helmet());</code></p>&#xA;<p>is an alias for the following:</p>&#xA;<pre><code>app.use(helmet.contentSecurityPolicy());&#xA;app.use(helmet.crossOriginEmbedderPolicy());&#xA;app.use(helmet.crossOriginOpenerPolicy());&#xA;app.use(helmet.crossOriginResourcePolicy());&#xA;app.use(helmet.dnsPrefetchControl());&#xA;app.use(helmet.expectCt());&#xA;app.use(helmet.frameguard());&#xA;app.use(helmet.hidePoweredBy());&#xA;app.use(helmet.hsts());&#xA;app.use(helmet.ieNoOpen());&#xA;app.use(helmet.noSniff());&#xA;app.use(helmet.originAgentCluster());&#xA;app.use(helmet.permittedCrossDomainPolicies());&#xA;app.use(helmet.referrerPolicy());&#xA;app.use(helmet.xssFilter());&#xA;</code></pre>&#xA;<p>I had the same problem, so I swapped out the alias for adding each one individually. When I commented out the first two (<code>contentSecurityPolicy</code> &amp; <code>crossOriginEmbedderPolicy</code>), Apollo came back to life.</p>&#xA;<p>For the record, commenting out these policies is not recommended for production, but it should unblock anyone who gets stuck here.</p>&#xA;",3450914,,,,2022-02-01 13:51:20,"",,0,0,0,2022-02-01 13:51:20
70942391,1,,,1,153,"<p>I have this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const { data: { orderUpdate: { code } } } = await this.$apollo.mutate({&#xA;  mutation: orderUpdate,&#xA;  variables: {&#xA;    id: this.order.id,&#xA;    input: { ...data }&#xA;  },&#xA;  update: async (store) =&gt; {&#xA;    const data = await store.readQuery({&#xA;      query: order,&#xA;      variables: {&#xA;        code: this.order.code,&#xA;        clientId: this.order.client.id&#xA;      }&#xA;    })&#xA;&#xA;    store.writeQuery({&#xA;      query: order,&#xA;      data&#xA;    })&#xA;  }&#xA;})&#xA;</code></pre>&#xA;<p>Every data is updated fine except the nested ones, i have on <code>data</code> array a nested <code>clothing_types</code> array with some objects, this objects isn't being updates for some reason.</p>&#xA;<p>Anyone can help me with that?</p>&#xA;<p>This is the structure of <code>data</code> var:</p>&#xA;<pre><code>order:&#xA;art_paths: (...)&#xA;client: (...)&#xA;closed_at: null&#xA;clothing_types: Array(2)&#xA;code: (...)&#xA;created_at: (...)&#xA;delivery_date: (...)&#xA;discount: (...)&#xA;id: (...)&#xA;name: (...)&#xA;original_price: (...)&#xA;payment_voucher_paths: (...)&#xA;payments: (...)&#xA;price: (...)&#xA;production_date: (...)&#xA;quantity: (...)&#xA;reminder: (...)&#xA;size_paths: (...)&#xA;states: (...)&#xA;status: (...)&#xA;total_clothings_value: (...)&#xA;total_owing: (...)&#xA;total_paid: (...)&#xA;__typename: (...)&#xA;__ob__: Observer {value: {…}, dep: Dep, vmCount: 0}&#xA;get art_paths: ƒ reactiveGetter()&#xA;set art_paths: ƒ reactiveSetter(newVal)&#xA;get client: ƒ reactiveGetter()&#xA;set client: ƒ reactiveSetter(newVal)&#xA;get closed_at: ƒ reactiveGetter()&#xA;set closed_at: ƒ reactiveSetter(newVal)&#xA;get clothing_types: ƒ reactiveGetter()&#xA;set clothing_types: ƒ reactiveSetter(newVal)&#xA;get code: ƒ reactiveGetter()&#xA;set code: ƒ reactiveSetter(newVal)&#xA;get created_at: ƒ reactiveGetter()&#xA;set created_at: ƒ reactiveSetter(newVal)&#xA;get delivery_date: ƒ reactiveGetter()&#xA;set delivery_date: ƒ reactiveSetter(newVal)&#xA;get discount: ƒ reactiveGetter()&#xA;set discount: ƒ reactiveSetter(newVal)&#xA;get id: ƒ reactiveGetter()&#xA;set id: ƒ reactiveSetter(newVal)&#xA;get name: ƒ reactiveGetter()&#xA;set name: ƒ reactiveSetter(newVal)&#xA;get original_price: ƒ reactiveGetter()&#xA;set original_price: ƒ reactiveSetter(newVal)&#xA;get payment_voucher_paths: ƒ reactiveGetter()&#xA;set payment_voucher_paths: ƒ reactiveSetter(newVal)&#xA;get payments: ƒ reactiveGetter()&#xA;set payments: ƒ reactiveSetter(newVal)&#xA;get price: ƒ reactiveGetter()&#xA;set price: ƒ reactiveSetter(newVal)&#xA;get production_date: ƒ reactiveGetter()&#xA;set production_date: ƒ reactiveSetter(newVal)&#xA;get quantity: ƒ reactiveGetter()&#xA;set quantity: ƒ reactiveSetter(newVal)&#xA;get reminder: ƒ reactiveGetter()&#xA;set reminder: ƒ reactiveSetter(newVal)&#xA;get size_paths: ƒ reactiveGetter()&#xA;set size_paths: ƒ reactiveSetter(newVal)&#xA;get states: ƒ reactiveGetter()&#xA;set states: ƒ reactiveSetter(newVal)&#xA;get status: ƒ reactiveGetter()&#xA;set status: ƒ reactiveSetter(newVal)&#xA;get total_clothings_value: ƒ reactiveGetter()&#xA;set total_clothings_value: ƒ reactiveSetter(newVal)&#xA;get total_owing: ƒ reactiveGetter()&#xA;set total_owing: ƒ reactiveSetter(newVal)&#xA;get total_paid: ƒ reactiveGetter()&#xA;set total_paid: ƒ reactiveSetter(newVal)&#xA;get __typename: ƒ reactiveGetter()&#xA;set __typename: ƒ reactiveSetter(newVal)&#xA;[[Prototype]]: Object&#xA;[[Prototype]]: Object&#xA;</code></pre>&#xA;<p>My graphql <code>order</code> query, of course, is returning those data, here it is:</p>&#xA;<pre><code>query order ($code: ID! $clientId: ID!) {&#xA;  order (code: $code clientId: $clientId) {&#xA;    ...OrderParts&#xA;  }&#xA;}&#xA;&#xA;fragment OrderParts on Order {&#xA;  client {&#xA;      id&#xA;      name&#xA;      phone&#xA;      total_owing&#xA;      shipping_company {&#xA;        name&#xA;      }&#xA;      branch {&#xA;        city {&#xA;          name&#xA;        }&#xA;      }&#xA;      city {&#xA;        name&#xA;      }&#xA;    }&#xA;    status {&#xA;      id&#xA;      text&#xA;    }&#xA;    clothing_types {&#xA;      id&#xA;      key&#xA;      name&#xA;      is_hidden&#xA;      commission&#xA;      quantity&#xA;      value&#xA;      total_value&#xA;    }&#xA;    payments (orderBy: [&#xA;      {column: &quot;date&quot; order: DESC}&#xA;      {column: &quot;created_at&quot; order: DESC}&#xA;    ]) {&#xA;      id&#xA;      value&#xA;      date&#xA;      note&#xA;      via {&#xA;        id&#xA;        name&#xA;      }&#xA;      confirmed_at&#xA;      is_confirmed&#xA;      created_at&#xA;    }&#xA;    id&#xA;    code&#xA;    name&#xA;    price&#xA;    original_price&#xA;    states&#xA;    discount&#xA;    quantity&#xA;    total_paid&#xA;    total_owing&#xA;    total_clothings_value&#xA;    production_date&#xA;    delivery_date&#xA;    created_at&#xA;    closed_at&#xA;    art_paths&#xA;    size_paths&#xA;    payment_voucher_paths&#xA;    reminder&#xA;}&#xA;</code></pre>&#xA;",14671559,,,,2022-02-01 14:37:44,Apollo not updating nested data cached query,<javascript><apollo><vue-apollo>,0,0,0,2022-02-01 14:37:44
70947580,1,,,0,365,"<p>In the playground document, How to display the possible error?</p>&#xA;<p>The document in the playground only provides how to write queries, but I can not find how to make a readable document to display possible errors.</p>&#xA;",7378115,,1880490,2022-05-14 13:30:31,2022-05-14 13:30:31,How to show the possible error in graphql playground?,<graphql>,0,1,0,2022-02-01 21:09:50
70989622,1,,,0,238,"<p>I am making an online store and I want to calculate the total cost of products in it. The cart looks like this: [{productId, count}, {productId, count}], and I get the cost of the product through a query by productId.</p>&#xA;<p>Below is an example of what the ideal structure looks like that I would like to get, but useQuery cannot be used inside a map and useQuery is asynchronous. I've already tried various ways to solve this, but to no avail.</p>&#xA;<p>Can you please tell me how to solve this problem or is there another way?</p>&#xA;<pre><code>import {useQuery, useMutation} from &quot;@apollo/client&quot;;&#xA;import {GET_PRODUCT_PRICE} from &quot;../query/product&quot;;&#xA;&#xA;export const GetTotalPrice = (cart) =&gt; {&#xA;    let totalPrice = 0;&#xA;    const {data, loading, error} = useQuery(GET_PRODUCT_PRICE, {&#xA;        variables: {&#xA;            id: productId&#xA;        }&#xA;    });&#xA;    &#xA;    cart.map((product) =&gt; {&#xA;        const {data, loading, error} = useQuery(GET_PRODUCT_PRICE, {&#xA;            variables: {&#xA;                id: product.productId&#xA;            }&#xA;        });&#xA;&#xA;        totalPrice += data.getProduct.price * product.count;&#xA;    })&#xA;&#xA;    return totalPrice;&#xA;}&#xA;</code></pre>&#xA;",18120068,,,,2022-02-04 16:22:37,How to get multiple values from useQuery GraphQL,<javascript><reactjs><graphql-js>,0,0,0,2022-02-04 16:22:37
70996633,1,,,0,84,"<p>I want to define a schema and resolvers for a cart type, which holds information about products as well as their respective quantities (product + quantity = lineItem). On that cart type I would also like to return the total value of the lineItems (=sum over all products*quantity). The product information comes from a federated subgraph. So the (subgraph-)schemas look like this:</p>&#xA;<p>cart-service:</p>&#xA;<pre><code>type Cart {&#xA;  id: String!&#xA;  lineItems: [LineItem!]&#xA;  total: Float&#xA;}&#xA;&#xA;type LineItem {&#xA;  product: Product!&#xA;  quantity: Int!&#xA;}&#xA;&#xA;extend type Product @key(fields: &quot;id&quot;) {&#xA;  id: String! @external&#xA;}&#xA;</code></pre>&#xA;<p>product-service:</p>&#xA;<pre><code>type Product @key(fields: &quot;id&quot;) {&#xA;  id: String!&#xA;  name: String&#xA;  price: Float!&#xA;}&#xA;</code></pre>&#xA;<p>I have successfully implemented the resolvers the get information from my federated product-subgraph. Yet, I don't know how resolve the &quot;total&quot; field on cart. &quot;Total&quot; needs &quot;lineItems&quot; clearly to be resolved first, but this is something GraphQL does not like. In GraphQL logic &quot;total&quot; and &quot;lineItems&quot; are independent branches on the graph which are supposed to be resolved independently. This logic seems to fail me in this case.</p>&#xA;<p>I have also tried to bombard the cart-service with interceptors and field middleware but the price-information never seems to be available (probably because it goes from the product-service directly to the gateway, instead of the cart-service?). What I am basically looking for is a way to do some extra operation after ALL fields from all federated services have been resolved.</p>&#xA;<p>Another potential solution came to my mind where I insert and extra service above the cart-service (call it &quot;super-cart&quot;), since then I can use the @requires-directive. I haven't tried this, but I could imagine something like this:</p>&#xA;<p>super-cart-service:</p>&#xA;<pre><code>extend type Cart @key(fields: &quot;id&quot;) {&#xA;  id: String! @external&#xA;  lineItems: [LineItem!] @external&#xA;  total: Float @requires(fields: &quot;lineItems{product{price} quantity}&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>cart-service:</p>&#xA;<pre><code>type Cart @key(fields:&quot;id&quot;) {&#xA;  id: String!&#xA;  lineItems: [LineItem!]&#xA;}&#xA;</code></pre>&#xA;<p>To be honest, this looks overly complicated. Introducing another service just to calculate one additional field?&#xA;This problem does not seem to be so hard at first glance, but I did not manage to come up with a practical solution. Do you have any good ideas? Btw: I working with Nest.js, but a plain Apollo solution is also welcome.</p>&#xA;<p>Thank you very much for your effort.</p>&#xA;",17746841,,,,2022-02-05 09:15:36,Calculated fields in federation: How to calculate total on a cart with federated product-service?,<graphql><nestjs><apollo><federation>,0,0,0,2022-02-05 09:15:36
71004167,1,,,2,1085,"<p>Running this Mutation GraphQL query:</p>&#xA;<pre><code>mutation {&#xA;    addProduct (input: { name: &quot;Salad Roll&quot;, description : &quot;Tasty Salad Roll&quot; })&#xA;}&#xA;</code></pre>&#xA;<p>I'm getting this error:</p>&#xA;<blockquote>&#xA;<p>&quot;errors&quot;: [         {           &quot;message&quot;: &quot;<code>addProduct</code> is an object, interface&#xA;or union type field. Leaf selections on objects, interfaces, and&#xA;unions without subfields are disallowed.&quot;,</p>&#xA;</blockquote>&#xA;<p>How do I fix it?</p>&#xA;",495455,,,,2022-02-06 04:20:30,"XYZ - is an object, interface or union type field. Leaf selections on objects, interfaces, and unions without subfields are disallowed",<graphql><mutation><hotchocolate>,1,0,0,2022-02-06 04:20:30
71004168,2,,71004167,2,,"<p>The solution is to return a value:</p>&#xA;<pre><code>mutation {&#xA;    addProduct (input: { name: &quot;Salad Roll&quot;, description : &quot;Tasty Salad Roll&quot; })&#xA;    {&#xA;        product&#xA;        {&#xA;        id&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",495455,,,,2022-02-06 04:20:30,"",,0,0,0,2022-02-06 04:20:30
71033128,1,,,0,40,"<p>My object is below :</p>&#xA;<p>Document Name: <strong>Test</strong></p>&#xA;<pre><code>[{&#xA;        &quot;_key&quot;: &quot;12123&quot;,&#xA;        &quot;custom_key&quot;: &quot;1&quot;,&#xA;        value = &quot;2&quot;&#xA;    }, {&#xA;        &quot;_key&quot;: &quot;12124&quot;,&#xA;        &quot;custom_key&quot;: &quot;1&quot;,&#xA;        value = &quot;3&quot;&#xA;    }, {&#xA;        &quot;_key&quot;: &quot;12125&quot;,&#xA;        &quot;custom_key&quot;: &quot;2&quot;,&#xA;        value = &quot;2&quot;&#xA;    }, {&#xA;        &quot;_key&quot;: &quot;12126&quot;,&#xA;        &quot;custom_key&quot;: &quot;2&quot;,&#xA;        value = &quot;5&quot;&#xA;    }, {&#xA;        &quot;_key&quot;: &quot;12127&quot;,&#xA;        &quot;custom_key&quot;: &quot;2&quot;,&#xA;        value = &quot;10&quot;&#xA;    }&#xA;]&#xA;</code></pre>&#xA;<p>How to write an arango query to get the objects with maximum <code>value</code> group by <code>custom_key</code>?</p>&#xA;",7726319,,7726319,2022-02-08 11:35:33,2022-02-12 15:42:51,How to do a group by and then filter on a column in ArangoDB,<graphql><arangodb>,1,0,0,2022-02-08 11:28:14
71042482,2,,71030512,2,,"<p>Another way of doing it is create the field specifier separately, that way you can see exactly why you need to quote the string values.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const fields = {&#xA;  category: &quot;&quot;, &#xA;  author: &quot;Main Author&quot;, &#xA;  isActive: false, &#xA;  orgId: 10, &#xA;  teamName: &quot;Green Team&quot;&#xA;}&#xA;&#xA;let query = `mutation CreateOrganizationTeam($input: ${JSON.stringify(fields)) {...&#xA;</code></pre>&#xA;",16883681,,,,2022-02-09 00:09:44,"",,0,1,0,2022-02-09 00:09:44
71051350,1,,,2,46,"<p>I have constructed the following query in Gitlab's GraphQL Explorer to show my question:</p>&#xA;<p><a href=""https://gitlab.com/-/graphql-explorer"" rel=""nofollow noreferrer"">https://gitlab.com/-/graphql-explorer</a></p>&#xA;<pre><code>{&#xA;  project(fullPath: &quot;gitlab-org/gitlab&quot;) {&#xA;    name&#xA;    repository {&#xA;      rootRef&#xA;    }&#xA;    mergeRequests(state: merged, targetBranches: &quot;master&quot;) {&#xA;      nodes {&#xA;        sourceBranch&#xA;        targetBranch&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>What I would like to achieve is using the value of <strong>repository { rootRef }</strong> as the argument for <strong>targetBranches</strong>.</p>&#xA;<p>Something like this:&#xA;<code>mergeRequests(state: merged, targetBranches: repository { rootRef }) {</code></p>&#xA;<p>Can it be done?</p>&#xA;<p>Thank you!</p>&#xA;",523037,,523037,2022-02-09 14:44:43,2022-02-09 14:44:43,GraphQL using a field as argument in the same query,<graphql>,0,2,0,2022-02-09 14:28:22
71052794,2,,70675281,0,,"<p>I have the same problem, the filters param of products query seem to be ineffective and returning me all the products in the collection.&#xA;I can't find the &quot;allowed filters&quot; option.&#xA;Currently I'm using the Storefront API as an external app, all works fine except that.</p>&#xA;<p>Here the code.</p>&#xA;<pre><code> query (&#xA;      $collectionHandle: String, $product_filters: [ProductFilter!], $nQueryElements: Int&#xA;    ) {&#xA;      collection(handle: $collectionHandle) {&#xA;        title&#xA;        products(first: $nQueryElements filters: $product_filters) {&#xA;          pageInfo {&#xA;            hasNextPage&#xA;            hasPreviousPage&#xA;          }&#xA;          edges {&#xA;            cursor&#xA;            node {&#xA;              title&#xA;              vendor&#xA;              availableForSale&#xA;              id&#xA;              handle&#xA;              productType&#xA;              variants(first: 40) {&#xA;                edges {&#xA;                  node {&#xA;                    selectedOptions {&#xA;                       name&#xA;                      value&#xA;                        }&#xA;                    title&#xA;                    compareAtPriceV2 {&#xA;                      amount&#xA;                    }&#xA;                    image {&#xA;                      id&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;              priceRange {&#xA;                maxVariantPrice {&#xA;                  amount&#xA;                }&#xA;              }&#xA;              images(first: 1) {&#xA;                edges {&#xA;                  node {&#xA;                    id&#xA;                    url(transform:  { maxWidth: 500, maxHeight: 700 })&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;<p>const variables = { collectionHandle: this.pageURL, nQueryElements: this.nQueryElements, lastCursor: this.queryCursor.last, firstCursor: this.queryCursor.first, product__filters: [{ productVendor: &quot;ASPESI&quot;, },], };</p>&#xA;<p>Thanks to who can help.</p>&#xA;",14783017,,,,2022-02-09 15:58:14,"",,0,1,0,2022-02-09 15:58:14
71057034,1,71075258,,0,126,"<p>I'm trying to add item to the cart. If it is in cart, I want to replace this item with updated count and total accordingly, but I don't want to affect to other items. If it is not in cart I add it (logic of if statement). How to implement logic of else statement?</p>&#xA;<pre><code>class ProductProvider extends Component {&#xA;  constructor(props) {&#xA;    super(props);&#xA;    this.state = {&#xA;      cart: [],&#xA;      modalOpen: false,&#xA;      modalProduct: {},&#xA;      cartTotal: 0,&#xA;    };&#xA;  }&#xA;&#xA;  addToCart = (product) =&gt; {&#xA;    const index = this.state.cart.findIndex((item) =&gt; item.id === product.id);&#xA;    if (index === -1) {&#xA;      const tempProduct = { ...product };&#xA;      tempProduct.inCart = true;&#xA;      tempProduct.count = 1;&#xA;      const price = product.prices[0].amount;&#xA;      tempProduct.total = price;&#xA;&#xA;      this.setState(&#xA;        () =&gt; {&#xA;          return { cart: [...this.state.cart, tempProduct] };&#xA;        },&#xA;        () =&gt; {&#xA;          this.addTotal();&#xA;        }&#xA;      );&#xA;    } else {&#xA;            // solution must be here&#xA;    }&#xA;  };&#xA;&#xA;    addTotal = () =&gt; {&#xA;    let total = 0;&#xA;    this.state.cart.map((item) =&gt; (total += item.total));&#xA;&#xA;    this.setState(() =&gt; {&#xA;      return {&#xA;        cartTotal: parseFloat(total.toFixed(2)),&#xA;      };&#xA;    });&#xA;  };&#xA;}&#xA;</code></pre>&#xA;<p>Seems like this approach, I'm currently trying to apply in other component works well. I need to test it and adapt for previous case.</p>&#xA;<pre><code>constructor(props) {&#xA;    super(props);&#xA;    this.state = {&#xA;      readMore: false,&#xA;      activeID: null,&#xA;      activeAtt: null,&#xA;      selectedAttributes: [],&#xA;    };&#xA;  }&#xA;&#xA;  setAttributes = (name, value) =&gt; {&#xA;    const index = this.state.selectedAttributes.findIndex(&#xA;      (item) =&gt; item.name === name&#xA;    );&#xA;    if (index === -1) {&#xA;      const newAttribute = { name, value };&#xA;&#xA;      this.setState(() =&gt; {&#xA;        return {&#xA;          selectedAttributes: [...this.state.selectedAttributes, newAttribute],&#xA;        };&#xA;      });&#xA;    } else {&#xA;      const tempAttributes = [...this.state.selectedAttributes];&#xA;      const selectedAttribute = tempAttributes.find(&#xA;        (attribute) =&gt; attribute.name === name&#xA;      );&#xA;      selectedAttribute.value = value;&#xA;      this.setState(() =&gt; {&#xA;        return { selectedAttributes: [...tempAttributes] };&#xA;      });&#xA;    }&#xA;</code></pre>&#xA;",16255269,,16255269,2022-02-09 23:02:11,2022-02-11 04:14:52,How to replace existing object in array only modifying its props and not affect to other items?,<reactjs><react-props><react-apollo><react-state-management><react-class-based-component>,1,2,0,2022-02-09 21:34:47
71060814,2,,71055329,0,,"<p>Have you tried <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toString"" rel=""nofollow noreferrer""><code>toString()</code></a>?</p>&#xA;<pre><code>createPage({&#xA;  context: { productId: productId.toString() },&#xA;</code></pre>&#xA;<p>Even the <code>productId</code> is not being casted, you can also try defining it as a <code>String</code> or <code>Int</code>:</p>&#xA;<pre><code>export const query = graphql`&#xA;   query($productId: String!) {&#xA;     myStuff(filter: {productIdentifier: {eq: $productId}}) {&#xA;      nodes {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Use <code>$productId: Int!</code> otherwise but I don't know if this will match the filter though.</p>&#xA;<p>Another alternative is casting a new string variable before passing it to the context:</p>&#xA;<pre><code>let productIdStringified = productId.toString()&#xA;createPage({&#xA;  context: { productId: productIdStringified },&#xA;</code></pre>&#xA;",5585371,,5585371,2022-02-10 10:34:49,2022-02-10 10:34:49,"",,0,1,0,2022-02-10 06:45:26
71072329,2,,71071847,0,,"<p>I figured it out. I got it wrong with the brackets in the variable. Here the solution:</p>&#xA;<pre><code>&quot;cpppi&quot;: [&#xA;    {&#xA;      &quot;play_positions_id&quot;: {&#xA;        &quot;id&quot;: &quot;1&quot;&#xA;      }&#xA;    },&#xA;    {&#xA;      &quot;play_positions_id&quot;: {&#xA;        &quot;id&quot;: &quot;2&quot;&#xA;      }&#xA;    }&#xA;  ]&#xA;</code></pre>&#xA;",6366153,,,,2022-02-10 21:11:21,"",,0,0,0,2022-02-10 21:11:21
71075258,2,,71057034,0,,"<pre><code>else {&#xA;      const tempCart = [...this.state.cart];&#xA;      const selectedItem = tempCart.find((item) =&gt; item.id === product.id);&#xA;      selectedItem.selectedAttributes = attributes;&#xA;      selectedItem.count = selectedItem.count + 1;&#xA;      const price = product.prices[0].amount;&#xA;      selectedItem.total = selectedItem.total + price;&#xA;&#xA;      this.setState(&#xA;        () =&gt; {&#xA;          return { cart: [...tempCart] };&#xA;        },&#xA;        () =&gt; {&#xA;          this.addTotal();&#xA;        }&#xA;      );&#xA;    }&#xA;</code></pre>&#xA;",16255269,,,,2022-02-11 04:14:52,"",,0,1,0,2022-02-11 04:14:52
71094062,1,,,0,77,"<p>I have a graphsl schema that looks something like this.</p>&#xA;<pre><code>type Something @model {&#xA;id: ID!&#xA;firstField:String!&#xA;secondField:String!&#xA;thirdField:String&#xA;fourthField:[Post]&#xA;}&#xA;&#xA;type Post{&#xA;id:ID!&#xA;firstItem:String!&#xA;secondItem:Int!&#xA;}&#xA;</code></pre>&#xA;<p>Now, I want to create a &quot;Post&quot; and add it to the array of objects in &quot;fourthField&quot; only.</p>&#xA;<p>I hope Im making sense here, Im a front end dev and Ive never worked with aws or graphql!</p>&#xA;<p>Thanks for your help!</p>&#xA;",15062953,,15062953,2022-02-12 19:58:32,2022-02-12 19:58:32,Creating/updating an item. AWS app sync/graphql,<amazon-web-services><graphql><next.js><amazon-dynamodb><aws-appsync>,0,0,0,2022-02-12 17:09:00
71108883,1,,,0,307,"<p>I'm trying to make an API call to search for a Braintree customer (by the customer's ID).</p>&#xA;<p><a href=""https://graphql.braintreepayments.com/guides/making_api_calls/"" rel=""nofollow noreferrer"">https://graphql.braintreepayments.com/guides/making_api_calls/</a></p>&#xA;<p>I've set up the API call with a graphql query that looks like this.</p>&#xA;<pre><code>{&#xA;&quot;query&quot;: &quot;query Search($input: CustomerSearchInput!) { &#xA;search { &#xA;  customers(input: $input) { &#xA;    pageInfo { &#xA;      hasNextPage &#xA;      startCursor &#xA;      endCursor &#xA;    }, &#xA;    edges { &#xA;      node { &#xA;        id &#xA;        } &#xA;      } &#xA;    } &#xA;  } &#xA;}&quot;,&#xA;  &quot;variables&quot;: {&#xA;    &quot;input&quot;: {&#xA;      &quot;id&quot;: {&#xA;        &quot;is&quot;: &quot;7492836219&quot;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The query part of this always works but for some reason, it doesn't seem to detect any variables. I keep getting an error that says the following.</p>&#xA;<pre><code>{&quot;errors&quot;:[{&quot;message&quot;:&quot;Variable 'input' has coerced Null value for NonNull type 'CustomerSearchInput!'&quot;,&quot;locations&quot;:[{&quot;line&quot;:1,&quot;column&quot;:14}]}],&quot;extensions&quot;:{&quot;requestId&quot;:&quot;ab399854-21ba-47a3-bf70-e41c3097dd21&quot;}}&#xA;</code></pre>&#xA;<p>It seems like it's not recognizing the &quot;variables&quot; section of this object but I have no idea why not. Does anyone know why I keep getting this error?</p>&#xA;",11058297,,,,2022-05-06 07:31:09,GraphQL: Variable 'input' has coerced Null value for NonNull type 'CustomerSearchInput!',<node.js><graphql><braintree>,0,0,0,2022-02-14 08:21:16
71119187,1,,,0,534,"<p>I am trying to set up a GraphQL endpoint in Spring Boot, and when I try to run my App, I get the following error:</p>&#xA;<p><code>Expected type 'Order' to be a GraphQLInputType, but it wasn't!  Was a type only permitted for object types incorrectly used as an input type, or vice-versa?</code></p>&#xA;<p>Here is my models.graphqls:</p>&#xA;<pre><code>type Order {&#xA;    id: String!&#xA;    storeOrderId: String&#xA;    connectionId: String&#xA;}&#xA;&#xA;type Mutation {&#xA;    createOrder(order: Order): Order&#xA;}&#xA;&#xA;</code></pre>&#xA;",5046680,,,,2022-03-30 03:15:57,"Spring Boot GraphQL: Expected type to be a GraphQLInputType, but it wasn't",<spring><spring-boot><graphql><graphql-java>,2,0,0,2022-02-14 22:49:37
71119188,2,,71119187,1,,"<p>This is happening because you're trying to use a <code>type</code> for an input, which isn't allowed.</p>&#xA;<p><code>type Order {</code></p>&#xA;<p>Should be...</p>&#xA;<p><code>input Order {</code></p>&#xA;<p>So that the whole thing looks like:</p>&#xA;<p>I am trying to set up a GraphQL endpoint in Spring Boot, and when I try to run my App, I get the following error:</p>&#xA;<p><code>Expected type 'Order' to be a GraphQLInputType, but it wasn't!  Was a type only permitted for object types incorrectly used as an input type, or vice-versa?</code></p>&#xA;<p>Here is my models.graphqls:</p>&#xA;<pre><code>input Order {&#xA;    id: String!&#xA;    storeOrderId: String&#xA;    connectionId: String&#xA;}&#xA;&#xA;type Mutation {&#xA;    createOrder(order: Order): Order&#xA;}&#xA;&#xA;</code></pre>&#xA;",5046680,,,,2022-02-14 22:49:37,"",,0,0,0,2022-02-14 22:49:37
71130755,2,,71130204,0,,"<p>If you always expect to get only one item, doing <code>data.items[0]</code> is fine but there is not harm in using <code>map</code> either. Using <code>map</code> will keep your code dynamic and will be able to render multiple links should the returned data contain more than one result.</p>&#xA;",14843551,,,,2022-02-15 17:25:04,"",,0,0,0,2022-02-15 17:25:04
71136961,1,,,0,105,"<p>When the introspection query is fired from GraphiQL, the following error is thrown</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;maximum query depth exceeded 13 &gt; 8&quot;,&#xA;      &quot;extensions&quot;: {&#xA;        &quot;classification&quot;: &quot;ExecutionAborted&quot;&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>Is there a workaround to whitelist the introspection query?</p>&#xA;",18220033,,,,2022-02-16 05:49:42,Is there any way to whitelist introspection query from Depth instrumentation layer in graphql-java?,<java><graphql><graphql-java>,0,1,0,2022-02-16 05:49:42
71157397,1,,,0,181,"<p>I'm trying to update the prices of several variants in Shopify&#xA;via the endpoint &quot;productVariantsBulkUpdate&quot; in GraphQL.<br />&#xA;That's my code:</p>&#xA;<pre><code>client = shopify.GraphQL()     &#xA;mutation = &quot;&quot;&quot;&#xA;       mutation productVariantsBulkUpdate($variants: [ProductVariantsBulkInput!]!, $productId: ID!) {&#xA;          productVariantsBulkUpdate(variants: $variants, productId: $productId) {&#xA;            product {&#xA;              id&#xA;            }&#xA;            productVariants {&#xA;              sku&#xA;            }&#xA;            userErrors {&#xA;              field&#xA;              message&#xA;            }&#xA;          }&#xA;        }&#xA;        &quot;&quot;&quot;&#xA;params = {&#xA;          &quot;variants&quot;: [&#xA;                {&#xA;                  &quot;id&quot;:  &quot;gid://shopify/ProductVariant/534676534632&quot;,&#xA;                  &quot;price&quot;: &quot;25.00&quot;&#xA;                },&#xA;                {&#xA;                  &quot;id&quot;:  &quot;gid://shopify/ProductVariant/0987654321&quot;,&#xA;                  &quot;price&quot;: &quot;25.00&quot;&#xA;                }&#xA;              ],&#xA;                &quot;productId&quot;: &quot;gid://shopify/Product/123456789&quot;&#xA;         }&#xA;        &#xA;result = client.execute(mutation, params)&#xA;json_file = json.loads(result)&#xA;print(json_file)&#xA;</code></pre>&#xA;<p>I'm getting the following error:</p>&#xA;<pre><code>{'errors': [{'message': &quot;ProductVariantsBulkInput isn't a defined input type (on &#xA;$variants)&quot;, 'locations': [{'line': 2, 'column': 47}], 'path': ['mutation &#xA;productVariantsBulkUpdate'], 'extensions': {'code': 'variableRequiresValidType', &#xA;'typeName': 'ProductVariantsBulkInput', 'variableName': 'variants'}}, {'message': &#xA;&quot;Field 'productVariantsBulkUpdate' doesn't exist on type 'Mutation'&quot;, 'locations': &#xA;[{'line': 3, 'column': 15}], 'path': ['mutation productVariantsBulkUpdate', &#xA;'productVariantsBulkUpdate'], 'extensions': {'code': 'undefinedField', 'typeName': &#xA;'Mutation', 'fieldName': 'productVariantsBulkUpdate'}}, {'message': 'Variable &#xA;$variants is declared by productVariantsBulkUpdate but not used', 'locations': [. &#xA;{'line': 2, 'column': 12}], 'path': ['mutation productVariantsBulkUpdate'], &#xA;'extensions': {'code': 'variableNotUsed', 'variableName': 'variants'}}, {'message': &#xA;'Variable $productId is declared by productVariantsBulkUpdate but not used', &#xA;'locations': [{'line': 2, 'column': 12}], 'path': ['mutation &#xA;productVariantsBulkUpdate'], 'extensions': {'code': 'variableNotUsed', &#xA;'variableName': 'productId'}}]}&#xA;</code></pre>&#xA;<p>Seems like Shopify doesn't know &quot;ProductVariantsBulkInput&quot; although it is a Shopify object.</p>&#xA;<p>Am I doing something wrong?</p>&#xA;<p>Here are the links to the documentation:</p>&#xA;<p><a href=""https://shopify.dev/api/admin-graphql/2022-01/mutations/productVariantsBulkUpdate"" rel=""nofollow noreferrer"">https://shopify.dev/api/admin-graphql/2022-01/mutations/productVariantsBulkUpdate</a></p>&#xA;<p><a href=""https://shopify.dev/api/admin-graphql/2022-01/input-objects/ProductVariantsBulkInput"" rel=""nofollow noreferrer"">https://shopify.dev/api/admin-graphql/2022-01/input-objects/ProductVariantsBulkInput</a></p>&#xA;",16535823,,,,2022-09-26 18:57:02,ShopifyAPI GraphQL productVariantsBulkUpdate Python not working,<python><json><graphql><shopify><shopify-api>,0,0,0,2022-02-17 11:35:33
71164256,2,,56285412,1,,"<p>You can use a Chrome Browser Extension called Altair GraphQL Client. It will give you a Save option. You can save queries and query variables in collections.</p>&#xA;<p><a href=""https://i.stack.imgur.com/VE4Y4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VE4Y4.png"" alt=""enter image description here"" /></a></p>&#xA;<p>We can export the collections to a file. The exported file will be a json file with agc extension. This file can be backed up in source control.</p>&#xA;",855872,,,,2022-02-17 19:25:13,"",,0,0,0,2022-02-17 19:25:13
71164810,2,,71118534,0,,"<p>I don't know if this is correct or if I'm just yet to find the error it creates, but to this point, I am able to create a record in the db by expressing arrays as follows. This isn't consistent with what's demonstrated in the prisma documentation - so I don't understand why this is correct.</p>&#xA;<pre><code>@Field( () =&gt; [SkillCategory] )&#xA;skillCategories: SkillCategory[];&#xA;</code></pre>&#xA;",2860931,,,,2022-02-17 20:13:10,"",,0,0,0,2022-02-17 20:13:10
71169271,1,,,0,208,"<p>Trying to post a review with rating with Magento GraphQl, but not able to post rating with query. Reviews are properly showing on admin but facing problem with rating. Here what I followed</p>&#xA;<p><a href=""https://devdocs.magento.com/guides/v2.4/graphql/mutations/create-product-review.html"" rel=""nofollow noreferrer"">https://devdocs.magento.com/guides/v2.4/graphql/mutations/create-product-review.html</a></p>&#xA;<pre><code>mutation {&#xA;  createProductReview(&#xA;    input: {&#xA;      sku: &quot;WH08&quot;,&#xA;      nickname: &quot;Roni&quot;,&#xA;      summary: &quot;Great looking sweatshirt&quot;,&#xA;      text: &quot;This sweatshirt looks and feels great. The zipper sometimes sticks a bit.&quot;,&#xA;      ratings: [&#xA;        {&#xA;          id: &quot;1&quot;,&#xA;          value_id: &quot;3&quot;&#xA;        }, {&#xA;          id: &quot;2&quot;,&#xA;          value_id: &quot;2&quot;&#xA;        }, {&#xA;          id: &quot;3&quot;,&#xA;          value_id: &quot;4&quot;&#xA;        }&#xA;      ]&#xA;    }&#xA;) {&#xA;    review {&#xA;      nickname&#xA;      summary&#xA;      text&#xA;      average_rating&#xA;      ratings_breakdown {&#xA;        name&#xA;        value&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",18240995,,18240995,2022-02-18 12:44:52,2022-02-18 14:42:02,Magento 2 Issue while posting the rating with GraphpQL,<api><graphql><magento2>,1,0,0,2022-02-18 06:32:48
71195535,2,,71175141,0,,"<p>After many hours of intense programming ...&#xA;I finally found the problem.</p>&#xA;<p>Be careful if you use some &quot;alias&quot; for imports, because it can overwrite some of the packages used.</p>&#xA;<p>Here, i use the <code>@graphql</code> alias, and it breaks all my tests.&#xA;When I remove it, the problem disappear.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>  moduleNameMapper: {&#xA;    '^@features/(.*)': '&lt;rootDir&gt;/src/features/$1',&#xA;    '^@tests/(.*)': '&lt;rootDir&gt;/__tests/$1',&#xA;    '^@utils': '&lt;rootDir&gt;/src/utils',&#xA;    '^@config': '&lt;rootDir&gt;/src/config',&#xA;    '^@types': '&lt;rootDir&gt;/src/@types',&#xA;    '^@graphql': '&lt;rootDir&gt;/src/@graphql/generated', // to remove&#xA;  },&#xA;</code></pre>&#xA;<p>to</p>&#xA;<pre class=""lang-js prettyprint-override""><code>  moduleNameMapper: {&#xA;    '^@features/(.*)': '&lt;rootDir&gt;/src/features/$1',&#xA;    '^@tests/(.*)': '&lt;rootDir&gt;/__tests/$1',&#xA;    '^@utils': '&lt;rootDir&gt;/src/utils',&#xA;    '^@config': '&lt;rootDir&gt;/src/config',&#xA;    '^@types': '&lt;rootDir&gt;/src/@types',&#xA;  },&#xA;</code></pre>&#xA;",8549139,,,,2022-02-20 14:45:04,"",,0,0,0,2022-02-20 14:45:04
71203223,1,,,0,409,"<p>I was wondering if anyone has experience with importing large data sets using Shopify GraphQL bulkOperation. I have a query to import all orders from a shop and the query does work following Shopify's documentation, the problem is that I don't get all orders. For instance, I'm trying to import orders from a shop that has about 37k orders. Using the bulkOperation I only get around 6.7k.</p>&#xA;<p>The documentation doesn't specify a limit (other than the cost of the query which is not an issue) and I was wondering if the issue is that I need to tweak my query somehow or do I need to find a work around (for instance import 'n'k at a time).</p>&#xA;<p>Any suggestions would be much appreciated, thank you.</p>&#xA;",1000514,,,,2022-02-21 08:29:04,Shopify GraphQL bulkOperation does not import all orders,<graphql><shopify-app><shopify-api>,0,0,0,2022-02-21 08:29:04
71211710,1,,,0,332,"<p>I need to show products based on higher price to low price in shopify. I'm able to fetch products and its variants. However I need to show them based on the Price.How to achieve this in shopify using graphql api.</p>&#xA;<pre><code>$srch2='{&#xA;  productVariants(first: 1, query: &quot;sku:'.$ar.'&quot;) {&#xA;    edges {&#xA;      cursor&#xA;      node {&#xA;        id&#xA;        title&#xA;        inventoryQuantity&#xA;        price&#xA;        product {&#xA;          id&#xA;        }&#xA;        image {&#xA;          originalSrc&#xA;          id&#xA;        }&#xA;        selectedOptions{&#xA;          name&#xA;          value&#xA;        }&#xA;      }&#xA;    }&#xA;  }';&#xA;$srchres2 = $api-&gt;api()-&gt;graph($srch2);&#xA;</code></pre>&#xA;",16603129,,3708153,2022-02-22 22:11:33,2022-02-22 22:11:33,Sort Products by Price in graphql api Laravel Shopify,<php><laravel><graphql><shopify>,0,0,0,2022-02-21 19:05:05
71215707,2,,71215637,1,,"<p><strong>There are a few things you need to modify to make it works</strong></p>&#xA;<p>First, remove the extra brackets in your component props:</p>&#xA;<pre><code>&lt;MapWrapper data={json} loc={foo}/&gt;&#xA;</code></pre>&#xA;<p>Second, Because they are props so you will then need to access them inside brackets:</p>&#xA;<pre><code>const MapWrapper = ({data, loc}) =&gt; {&#xA;...&#xA;</code></pre>&#xA;<p>For that empty data in the initial load, I'd suggest you check for an empty array before making any request.</p>&#xA;<pre><code>if (foo.length &gt; 0) {&#xA;   // Do fetch&#xA;}&#xA;</code></pre>&#xA;",5122615,,,,2022-02-22 03:54:04,"",,0,6,0,2022-02-22 03:54:04
71235680,1,,,0,374,"<p>We want to fetch contentful collection items based on a key grouping.&#xA;I am using the apollo graphQl to query the contentful api for retrieving the data, Where we have plain collection of data and I want to group the collection based on a key available in the content model.</p>&#xA;<pre><code>levelCollection(limit: 11) {&#xA;    items{&#xA;      groupBy {&#xA;         name {&#xA;            key&#xA;             connection {&#xA;                edges {&#xA;                  node {&#xA;                    id&#xA;                    url&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;        }&#xA;</code></pre>&#xA;<p>Where LevelCollection is a collection of with following attributes</p>&#xA;<pre><code>   { &#xA;     id&#xA;     url&#xA;     key&#xA;   }&#xA;</code></pre>&#xA;<p>I want the output of the query to be grouped based on the key attribute in that collection</p>&#xA;<p>Expected Output:</p>&#xA;<pre><code>{&#xA;levelCollection:{&#xA;key: 'group 1',&#xA;items: [&#xA;        {&#xA;         id: 'id1',&#xA;         url: 'url1'&#xA;        },&#xA;        {&#xA;          id: 'id1',&#xA;          url: 'url1'&#xA;        }&#xA;      ]&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>It is expected to group the data based on the key and get the the collection of grouped items against the key.</p>&#xA;<p>is there any way to achieve the dynamic grouping in graphQl on the collections from contentful</p>&#xA;",4058506,,4058506,2022-02-23 11:13:47,2022-02-23 11:13:47,How to implement groupBy in graphQl with contentful,<typescript><group-by><graphql><contentful><contentful-api>,0,1,0,2022-02-23 11:00:16
71245907,1,71246533,,0,475,"<p>I'm running into issues parsing a json reponse from GraphQL. The issue is the array will come back with more arrays half the time. My code is just getting out of hand and ugly.</p>&#xA;<p>Json file (trimmed it a bit. It can be 20+ data arrays)</p>&#xA;<pre><code>{&#xA;  &quot;activity_logs&quot;: [&#xA;    {&#xA;      &quot;data&quot;: &quot;{\&quot;board_id\&quot;:2165785546,\&quot;group_id\&quot;:\&quot;new_group2051\&quot;,\&quot;is_top_group\&quot;:false,\&quot;pulse_id\&quot;:2165787062,\&quot;pulse_name\&quot;:\&quot;Tyler\&quot;,\&quot;column_id\&quot;:\&quot;email_address\&quot;,\&quot;column_type\&quot;:\&quot;email\&quot;,\&quot;column_title\&quot;:\&quot;Email Address\&quot;,\&quot;value\&quot;:{\&quot;column_settings\&quot;:{\&quot;includePulseInSubject\&quot;:true,\&quot;ccPulse\&quot;:true,\&quot;bccList\&quot;:\&quot;\&quot;}},\&quot;previous_value\&quot;:{\&quot;email\&quot;:\&quot;tyler@email.com\&quot;,\&quot;text\&quot;:\&quot;tyler@email.com\&quot;,\&quot;changed_at\&quot;:\&quot;2022-02-15T21:18:48.297Z\&quot;,\&quot;column_settings\&quot;:{\&quot;includePulseInSubject\&quot;:true,\&quot;ccPulse\&quot;:true,\&quot;bccList\&quot;:\&quot;\&quot;}},\&quot;is_column_with_hide_permissions\&quot;:false,\&quot;previous_textual_value\&quot;:\&quot;tyler@email.com\&quot;}&quot;&#xA;    },&#xA;    {&#xA;      &quot;data&quot;: &quot;{\&quot;board_id\&quot;:2165785546,\&quot;group_id\&quot;:\&quot;new_group2051\&quot;,\&quot;is_top_group\&quot;:false,\&quot;pulse_id\&quot;:216578711,\&quot;pulse_name\&quot;:\&quot;Nicholas \&quot;,\&quot;column_id\&quot;:\&quot;email_address\&quot;,\&quot;column_type\&quot;:\&quot;email\&quot;,\&quot;column_title\&quot;:\&quot;Email Address\&quot;,\&quot;value\&quot;:{\&quot;column_settings\&quot;:{\&quot;includePulseInSubject\&quot;:true,\&quot;ccPulse\&quot;:true,\&quot;bccList\&quot;:\&quot;\&quot;}},\&quot;previous_value\&quot;:{\&quot;email\&quot;:\&quot;nicholas@email.com\&quot;,\&quot;text\&quot;:\&quot;nicholas@email.com\&quot;,\&quot;changed_at\&quot;:\&quot;2022-02-16T04:44:52.046Z\&quot;,\&quot;column_settings\&quot;:{\&quot;includePulseInSubject\&quot;:true,\&quot;ccPulse\&quot;:true,\&quot;bccList\&quot;:\&quot;\&quot;}},\&quot;is_column_with_hide_permissions\&quot;:false,\&quot;previous_textual_value\&quot;:\&quot;nicholas@email.com\&quot;}&quot;&#xA;    },&#xA;    {&#xA;      &quot;data&quot;: &quot;{\&quot;board_id\&quot;:2165785546,\&quot;group_id\&quot;:\&quot;new_group2051\&quot;,\&quot;is_top_group\&quot;:false,\&quot;pulse_id\&quot;:216578711,\&quot;pulse_name\&quot;:\&quot;Nicholas \&quot;,\&quot;column_id\&quot;:\&quot;batch_5\&quot;,\&quot;column_type\&quot;:\&quot;text\&quot;,\&quot;column_title\&quot;:\&quot;Batch #\&quot;,\&quot;value\&quot;:{\&quot;value\&quot;:\&quot;75\&quot;},\&quot;previous_value\&quot;:{\&quot;value\&quot;:\&quot;74\&quot;},\&quot;is_column_with_hide_permissions\&quot;:false}&quot;&#xA;    },&#xA;    {&#xA;      &quot;data&quot;: &quot;{\&quot;board_id\&quot;:2165785546,\&quot;group_id\&quot;:\&quot;new_group2051\&quot;,\&quot;pulse_id\&quot;:216578711,\&quot;is_top_group\&quot;:false,\&quot;value\&quot;:{\&quot;name\&quot;:\&quot;Nicholas \&quot;},\&quot;previous_value\&quot;:{\&quot;name\&quot;:\&quot;Nicholas \&quot;},\&quot;column_type\&quot;:\&quot;name\&quot;,\&quot;column_title\&quot;:\&quot;Name\&quot;}&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>Random &quot;get it to work&quot; attempt after giving up on making is a List based on a Class. The IContainers within IContainers were getting very complex.</p>&#xA;<pre><code>var responseData = JObject.Parse(responseText).SelectToken(&quot;data&quot;).SelectToken(&quot;boards&quot;).SelectToken(&quot;activity_logs&quot;);&#xA;dynamic updatedRecords = JsonConvert.DeserializeObject(responseData.ToString());&#xA;&#xA;foreach (var record in updatedRecords)&#xA;{&#xA;List&lt;Dictionary&lt;string, string&gt;&gt; records = new List&lt;Dictionary&lt;string, string&gt;&gt;();&#xA;Dictionary&lt;string, string&gt; fields = new Dictionary&lt;string, string&gt;();&#xA;dynamic updates = JsonConvert.DeserializeObject(JObject.Parse(record.ToString()).SelectToken(&quot;data&quot;).ToString());&#xA;foreach(var update in updates)&#xA;{&#xA;    switch (update.Name.ToString())&#xA;    {&#xA;        case &quot;column_id&quot;:&#xA;            fields.Add(update.Name.ToString(), update.Value.ToString());&#xA;            break;&#xA;        case &quot;pulse_name&quot;:&#xA;            fields.Add(update.Name.ToString(), update.Value.ToString());&#xA;            break;&#xA;        case &quot;value&quot;:&#xA;            dynamic values = JsonConvert.DeserializeObject(JObject.Parse(update.Value.ToString()));&#xA;            if (update.Name.ToString().Contains(&quot;column_settings&quot;))&#xA;            {&#xA;                foreach (var value in values)&#xA;                {&#xA;                    dynamic columns = JsonConvert.DeserializeObject(JObject.Parse(value.Value.ToString()));&#xA;                    foreach(var column in columns)&#xA;                    {&#xA;                        fields.Add($&quot;Value_{column.Name.ToString()}&quot;, column.Value.ToString());&#xA;                    }&#xA;                                                &#xA;                }&#xA;            }&#xA;            else&#xA;            {&#xA;                foreach (var value in values)&#xA;                {&#xA;                    fields.Add($&quot;Value_{value.Name.ToString()}&quot;, value.Value.ToString());&#xA;                }&#xA;            }&#xA;                                        &#xA;            break;&#xA;        case &quot;previous_value&quot;:&#xA;            dynamic prevValues = JsonConvert.DeserializeObject(JObject.Parse(update.Value.ToString()));&#xA;            foreach (var prevalue in prevValues)&#xA;            {&#xA;                fields.Add($&quot;Prevalue_{prevalue.Name.ToString()}&quot;, prevalue.Value.ToString());&#xA;            }&#xA;            break;&#xA;        case &quot;previous_textual_value&quot;:&#xA;            fields.Add(update.Name.ToString(), update.Value.ToString());&#xA;            break;&#xA;    }&#xA;}&#xA;if (fields.Count &gt; 0)&#xA;{&#xA;    records.Add(fields);&#xA;    fields.Clear();&#xA;}&#xA;}&#xA;</code></pre>&#xA;<p>My Error when I get to:</p>&#xA;<pre><code>dynamic values = JsonConvert.DeserializeObject(JObject.Parse(update.Value.ToString()));&#xA;</code></pre>&#xA;<pre><code>-       $exception  {&quot;The best overloaded method match for 'Newtonsoft.Json.JsonConvert.DeserializeObject(string)' has some invalid arguments&quot;} Microsoft.CSharp.RuntimeBinder.RuntimeBinderException&#xA;</code></pre>&#xA;<p>Solution is a big help and led to my answer. The issue is the activity_logs data comes with escape characters in it so the string contains \\&quot;.&#xA;I had to format the data sections with Replace(&quot;\\&quot;, &quot;&quot;) and Replace(&quot;\&quot;{&quot;, &quot;{&quot;) and Replace(&quot;}\&quot;&quot;), &quot;}&quot;). This made the string readable as a Json file.</p>&#xA;",8345966,,8345966,2022-02-25 03:46:39,2022-02-25 03:46:39,C# Parsing Json string returned from GraphQL - Monday.com,<c#><arrays><json><graphql><monday.com>,2,1,0,2022-02-24 01:09:10
71248310,1,,,2,746,"<p>I have checked the <a href=""https://shopify.dev/api/admin-graphql/2022-01/mutations/productVariantsBulkUpdate"" rel=""nofollow noreferrer"">Shopify GraphQL API</a>, and I have tried to update the product inventory on Shopify but when I execute the graphql API it says &quot;</p>&#xA;<blockquote>&#xA;<p>Inventory quantities cannot be updated with variants API</p>&#xA;</blockquote>&#xA;<p>The mutation I am trying to run:</p>&#xA;<pre><code>mutation productVariantsBulkUpdate(&#xA;  $productId: ID!,&#xA;  $variants [ProductVariantsBulkInput!]!&#xA;) {&#xA;    productVariantsBulkUpdate(&#xA;      productId: $productId,&#xA;      variants: $variants&#xA;    ) {&#xA;      product {&#xA;        id&#xA;      }&#xA;      productVariants {&#xA;        id&#xA;      }&#xA;      userErrors {&#xA;        field&#xA;        message&#xA;      }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>And the variable of this request</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&quot;variants&quot;: {&quot;inventoryQuantities&quot;: {&quot;availableQuantity&quot;: 10,&quot;locationId&quot;:&quot;gid://shopify/Location/66027421902&quot; },&quot;id&quot;:&quot;gid://shopify/ProductVariant/40747448828110&quot; },&quot;productId&quot;: &quot;gid://shopify/Product/6899888488654&quot;}&#xA;</code></pre>&#xA;<p>I have checked with the <a href=""https://shopify.dev/api/admin-graphql/2022-01/mutations/inventoryBulkAdjustQuantityAtLocation"" rel=""nofollow noreferrer"">bulk update inventory</a> but it is not what I need, how do I <em>set</em> (not adjust) the inventory level using the Shopify API?</p>&#xA;",8420175,,3914361,2022-05-11 01:24:34,2022-07-30 14:22:38,Shopify Inventory Not Update via Shopify GraphiQL App,<python><python-3.x><api><graphql><shopify>,2,0,0,2022-02-24 07:10:40
71272868,1,,,0,72,"<p>The following code block returns a list of pull requests with their mergeability status such as 'MERGEABLE', 'CONFLICTING', etc.</p>&#xA;<p>Is there any way to filter inline by <a href=""https://docs.github.com/en/graphql/reference/enums#mergeablestate"" rel=""nofollow noreferrer"">mergeablestate</a>?</p>&#xA;<p>I can filter the result obtained after this using js or anything else. I wanted to understand how to do it in a Graphql script. Looked up the docs could not find a way.</p>&#xA;<pre><code>{&#xA;      repository(owner: &quot;rikesh_kamra&quot;, name: &quot;git-sticker&quot;) {&#xA;        pullRequests(first: 1, states: [OPEN]) {&#xA;          nodes {&#xA;            id&#xA;            number&#xA;            changedFiles&#xA;            deletions&#xA;            mergeable&#xA;            author {&#xA;              url&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;<p>I tried</p>&#xA;<pre><code>pullRequests(first: 1, states: [OPEN], mergeable: [MERGEABLE))&#xA;</code></pre>&#xA;<p>But got an error saying mergeable is not a valid argument for pullRequests.</p>&#xA;",11248545,,3842598,2022-03-19 03:12:12,2022-03-19 03:12:12,How to filter in Graphql GitHub API by MergeableState,<javascript><json><github><graphql><github-actions>,0,0,0,2022-02-25 23:45:04
71281194,1,,,0,195,"<p>So, whenever I try to add a product to the inventory list, via a mutation, I get a <code>POST http://localhost:3000/graphql 400 (Bad Request)</code>. I can perform the mutation in the sandbox without issue. And, the query to retrieve information works just fine. I have double-checked all the names being used and nothing seems off. Here is the code:</p>&#xA;<p>From App.jsx:</p>&#xA;<pre><code>async createProduct(product) {&#xA;    const query = `mutation addProduct($product: ProductInputs!) {&#xA;      addProduct(product: $product) {&#xA;        id&#xA;      }&#xA;    }`;&#xA;&#xA;    await fetch('/graphql', {&#xA;      method: 'POST',&#xA;      headers: { 'Content-Type': 'application/json' },&#xA;      body: JSON.stringify({ query, variables: { product }})&#xA;    });&#xA;&#xA;    await this.loadData();&#xA;}&#xA;</code></pre>&#xA;<p>From schema.graphql:</p>&#xA;<pre><code>enum InventoryCategory {&#xA;  Shirts&#xA;  Jeans&#xA;  Jackets&#xA;  Sweaters&#xA;  Accessories&#xA;}&#xA;&#xA;type Product {&#xA;  id: Int!&#xA;  category: InventoryCategory!&#xA;  name: String!&#xA;  price: Float&#xA;  imageURL: String&#xA;}&#xA;&#xA;&quot;Toned down Product, used as inputs, without server generated values.&quot;&#xA;input ProductInputs {&#xA;  category: InventoryCategory!&#xA;  name: String&#xA;  price: Float&#xA;  imageURL: String&#xA;}&#xA;&#xA;##### Top level declarations&#xA;&#xA;type Query {&#xA;  productList: [Product!]!&#xA;}&#xA;&#xA;type Mutation {&#xA;  addProduct(product: ProductInputs!): Product!&#xA;}&#xA;</code></pre>&#xA;<p>From server.js</p>&#xA;<pre><code>const inventoryDB = [];&#xA;&#xA;const resolvers = {&#xA;  Query: {&#xA;    productList,&#xA;  },&#xA;  Mutation: {&#xA;    addProduct,&#xA;  },&#xA;};&#xA;&#xA;function productList() {&#xA;  return inventoryDB;&#xA;}&#xA;&#xA;function addProduct(_, { product }) {&#xA;  product.id = inventoryDB.length + 1;&#xA;  inventoryDB.push(product);&#xA;  return product;&#xA;}&#xA;</code></pre>&#xA;<p>Is there anything that stands out as being obviously incorrect? I cannot seem to figure out why I keep getting the 400 error. I cannot seem to find an issue with the query (mutation) itself. Any thoughts?</p>&#xA;<p>Edit: The query to retrieve information works just fine. See below for the code:</p>&#xA;<pre><code>async loadData() {&#xA;    const query = `query {&#xA;      productList {&#xA;        id&#xA;        category&#xA;        name&#xA;        price&#xA;        imageURL&#xA;      }&#xA;    }`;&#xA;&#xA;    const response = await fetch('/graphql', {&#xA;      method: 'POST',&#xA;      headers: {'Content-Type': 'application/json'},&#xA;      body: JSON.stringify({ query })&#xA;    });&#xA;&#xA;    const body = await response.text();&#xA;    const result = JSON.parse(body);&#xA;    this.setState({ products: result.data.productList });&#xA;}&#xA;</code></pre>&#xA;",3727648,,3727648,2022-02-27 00:32:37,2022-02-27 12:28:24,GraphQL - Query Seems Fine but Getting 400 Error,<reactjs><graphql><express-graphql>,1,4,0,2022-02-27 00:03:03
71282264,1,,,0,32,"<p>I am using PHP guzzlephp to query the data. Got the  &quot;debugMessage&quot;:&quot;Expected a value of type error. The error comes from <code>$content = $response-&gt;getBody()-&gt;getContents();</code> looks like it's not able to parse the response body. The wired thing is if the response is  &quot;laneStrategy&quot;: &quot;COST&quot;: it will be parsed well, but if change to others, it throw the error. I have a enum defined like this:</p>&#xA;<pre><code>class LaneStrategy {&#xA;  const COST = 1;&#xA;  const SPEED = 2;&#xA;  const ORCHESTRATION = 3;&#xA;  const STANDARD = 4;&#xA;}&#xA;</code></pre>&#xA;<p>correct response:</p>&#xA;<pre><code>  {&#xA;      &quot;lane&quot;: {&#xA;        &quot;laneID&quot;: 20234,&#xA;        &quot;laneStrategy&quot;: &quot;COST&quot;,&#xA;        &quot;stops&quot;: [&#xA;          {&#xA;            &quot;sequenceNumber&quot;: 0,&#xA;            &quot;node&quot;: {&#xA;              &quot;nodeID&quot;: 200&#xA;            }&#xA;          },&#xA;          {&#xA;            &quot;sequenceNumber&quot;: 1,&#xA;            &quot;node&quot;: {&#xA;              &quot;nodeID&quot;: 100&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;<p>When the response contains other type for laneStrategy except &quot;COST&quot; it will throw&#xA;error message: <code>&quot;errors&quot;:[{&quot;debugMessage&quot;:&quot;Expected a value of type \u0022LaneStrategy\u0022 but 2 received</code> In the error message the 2 is exactly the number defined in enum, but I just don't get it why it throw the error using other types? Can anybody know what possible wrong? Thank you</p>&#xA;",4985852,,,,2022-02-27 05:08:52,"PHP graphql $response->getBody()->getContents() get ""debugMessage"":""Expected a value of type error",<php><graphql>,0,0,0,2022-02-27 05:08:52
71285631,2,,71284341,1,,"<p><code>nodes</code> is an array of data (specifically an array of objects, as you can see in the result query: <code>&quot;nodes&quot;:[]</code>) so to point directly the data you must enter an specific position or loop through the nodes.</p>&#xA;<p>This should work:</p>&#xA;<pre><code>&lt;p&gt;{data.wpPost.categories.nodes[0].id}&lt;/p&gt;&#xA;</code></pre>&#xA;",5585371,,,,2022-02-27 14:36:51,"",,0,1,0,2022-02-27 14:36:51
71293275,1,,,1,53,"<p>Currently I'm trying to work with the Contentful GraphQL API, although I can't seem to find the option to fetch all tags at once. In the docs I find this article (<a href=""https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags/tag-collection/get-all-tags/console/js"" rel=""nofollow noreferrer"">https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags/tag-collection/get-all-tags/console/js</a>) suggesting there is an option to do this.</p>&#xA;<p>Unfortunately this only seems to apply for the REST API and not for the GraphQL API? Or am I overlooking / misunderstanding something? When I use the GraphQL explore function, I also can't find an option to query the tags.. Any tips?</p>&#xA;",1339219,,,,2022-02-28 10:03:08,Contentful fetch all tags with the GraphQL API,<graphql><tags><contentful>,0,0,0,2022-02-28 10:03:08
71313306,1,72706452,,0,322,"<p>We have a custom scalar type called JSON, which is used when we want to send unstructured data.&#xA;When trying to access the field using Apollo (even just trying to print it), we get the following error:</p>&#xA;<pre><code>Apollo.GraphQLResultError(path: productRequests.collection.0.item.businessKey, &#xA; underlying: Apollo.JSONDecodingError.couldNotConvert(value: {&#xA; group = POL;&#xA; item = “32-43-1839TT40”;&#xA; prefix = MB;&#xA; warehouse = RAD;&#xA;}, to: Swift.String)))&#xA;</code></pre>&#xA;<p>I'm not sure why it would have a problem converting to a String. Also, how can we get the Dictionary value rather than a String?</p>&#xA;<p>This may be somewhat similar to #23. I tried the proposed solution there (just aliasing JSON to [String : Any?]) but it gave a bunch of compile errors.</p>&#xA;<p>Below is my query and response.</p>&#xA;<pre><code> query ProductTable($pageInfo: PageInfo!)&#xA;  {&#xA;       productRequests(pageInfo: $pageInfo) {&#xA;       collection {&#xA;              id&#xA;              item {&#xA;                 id&#xA;                 businessKey&#xA;                  }&#xA;         }&#xA;      }&#xA; }&#xA;&#xA; Response :&#xA; {&#xA;&quot;data&quot;: {&#xA;    &quot;productRequests&quot;: {&#xA;        &quot;collection &quot;: [{&#xA;            &quot;id&quot;: &quot;0&quot;,&#xA;            &quot;item&quot;: {&#xA;                &quot;businessKey&quot;: {&#xA;                    &quot;group&quot;: &quot;POL&quot;,&#xA;                    &quot;warehouse&quot;: &quot;RAD&quot;,&#xA;                    &quot;prefix&quot;: &quot;MB&quot;,&#xA;                    &quot;item&quot;: &quot;33 - 44 - 1939 TT40&quot;&#xA;                }&#xA;            }&#xA;        }]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>How to resolve the decoding issue, can any one help on this?</p>&#xA;<p>Thanks in advance.</p>&#xA;",4452640,,,,2022-06-21 19:55:36,JSON Scalar throws JSONDecondingError.couldNotConvert in iOS apollo client,<ios><swift><graphql><apollo><apollo-client>,1,0,0,2022-03-01 18:53:40
71325639,2,,71317342,0,,"<p>I found the fix here</p>&#xA;<p><a href=""https://github.com/gql-dart/gql/pull/225"" rel=""nofollow noreferrer"">https://github.com/gql-dart/gql/pull/225</a></p>&#xA;<p>Pull down this repo <code>gql</code> in your local and checkout the commit&#xA;<code>14e8d3602ebb93f14a2285247c80a9b70b1eb71b</code> which is this change&#xA;<code>https://github.com/gql-dart/gql/commit/14e8d3602ebb93f14a2285247c80a9b70b1eb71b</code></p>&#xA;<p>and put this at the end of your pubspec.yaml</p>&#xA;<pre><code>&#xA;dependency_overrides:&#xA;  gql_code_builder:&#xA;    path: ../../../gql/codegen/gql_code_builder&#xA;&#xA;</code></pre>&#xA;",2330799,,,,2022-03-02 15:58:22,"",,0,0,0,2022-03-02 15:58:22
71329079,2,,65720431,0,,"<p>I recently was running into this issue as well. I think you might have a similar problem to the one I had.</p>&#xA;<p>Mongo's $in operator doesn't guarantee order. So if you have a query where it has something like <code>_id: {$in: [1,2,3]}</code> it could be be returned in 2,3,1.</p>&#xA;<p>This is outlined in the docs for dataloader (although not in big and red enough font like maybe it should be)</p>&#xA;<blockquote>&#xA;<p>There are a few constraints this function must uphold:</p>&#xA;</blockquote>&#xA;<blockquote>&#xA;<p>The Array of values must be the same length as the Array of keys.&#xA;Each index in the Array of values must correspond to the same index in the Array of keys.</p>&#xA;</blockquote>&#xA;<p>So my issue (and I assume yours) is that the order of the input doesn't match the order of the output. So as a stopgap I did this:</p>&#xA;<pre><code>const sortOrder = new Map&lt;string, number&gt;()&#xA;for (let i = 0; i &lt; IDs.length; i++) {&#xA;  sortOrder.set(IDs[i], i)&#xA;}&#xA;objects.sort((a, b) =&gt; (sortOrder.get(a._id) &gt; sortOrder.get(b._id) ? 1 : -1))&#xA;</code></pre>&#xA;<p>A better solution would be to extend dataloader to allow a mapping/matching function</p>&#xA;",13175385,,,,2022-03-02 21:00:26,"",,0,0,0,2022-03-02 21:00:26
71329593,2,,71325227,1,,"<p>A <a href=""https://graphql-ruby.org/type_definitions/unions.html"" rel=""nofollow noreferrer"">union type</a> is what you're looking for.</p>&#xA;<blockquote>&#xA;<p>How can I say to field if current_user.is_a?(Agent) then, take AgentType else take AppUserType</p>&#xA;</blockquote>&#xA;<p>This can be done in the <code>resolve_type</code> method, also known as the <em>type resolver</em>.</p>&#xA;",7987708,,,,2022-03-02 21:52:19,"",,0,4,0,2022-03-02 21:52:19
71338272,1,71339577,,1,527,"<p>so a bit of background. I am making a GRAPHQL call to shopify's graphQL api. I am getting data back (yay!) and it is correct (double yay!!), unfortunately I cannot then do very much with the data other than look at it - I cannot iterate through it with regular JSON syntax. My plan is to then have the data be put into javascript generated HTML elements to display to the user e.g. generate a list with the titles/pictures of the products.</p>&#xA;<p>Without further ado, my code.</p>&#xA;<p>Step 1: a JS function to respond to my keypresses and run an async fetch:</p>&#xA;<pre><code>function ajaxProductSearch(shopCode){&#xA;    let devSearch = document.getElementById('product_search_dev');&#xA;    devSearch.addEventListener(&quot;keyup&quot;, () =&gt; {&#xA;        shopCode = document.querySelector(&quot;.langTab.active input&quot;).value;&#xA;        showGraphQL(shopCode, devSearch.value);&#xA;    });&#xA;}&#xA;</code></pre>&#xA;<p>Step 2: my async fetch call to the php script</p>&#xA;<pre><code>async function showGraphQL(shopCode, search){&#xA;    const response = await fetch(`../models/ajaxcall.php?shop=${shopCode}&amp;searchString=${search}`);&#xA;    const graphQL = await response.json();&#xA;     console.log(graphQL);&#xA;}&#xA;</code></pre>&#xA;<p>Step 3: my php script itself running the graphQL call, done with curl</p>&#xA;<pre><code>3a: The curl function&#xA;</code></pre>&#xA;<pre><code>function graphQLCall($qry, $endpoint, $flag=''){&#xA;        $headers = array();&#xA;        $headers[] = 'Content-Type: application/graphql';&#xA;        $headers[] = 'X-Shopify-Access-Token: '.$authToken;&#xA;&#xA;        $ch = curl_init();&#xA;&#xA;        curl_setopt($ch, CURLOPT_URL, $endpoint);&#xA;        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);&#xA;        curl_setopt($ch, CURLOPT_POSTFIELDS, $qry);&#xA;        curl_setopt($ch, CURLOPT_POST, 1);&#xA;        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);&#xA;        curl_setopt($ch, CURLOPT_Header, 1);&#xA;&#xA;        $result = curl_exec($ch);&#xA;        curl_close($ch);&#xA;        if (curl_errno($ch)) {&#xA;            echo 'Error:' . curl_error($ch);&#xA;        }&#xA;        &#xA;        $graphQL = json_decode($result);&#xA;        if($flag == ''){&#xA;            return $graphQL;&#xA;        } elseif($flag == 'flag'){&#xA;            return $result;&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;<p>3b: the code that preps the query for the graphQL func&#xA;$query1 uses the $_POST[] to get the $searchString from the front end to the backend</p>&#xA;<pre><code>        $query1 = '{&#xA;  products(first: 25, query: &quot;title:'.$searchString.'&quot;) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;}';&#xA;$mediaID = graphQLCall($query1, $endpoint);&#xA;</code></pre>&#xA;<p>$query1 is passed through the graphQLCall() and then its response, which is the id of the product is then passed into a 2nd query to then call the product itself:&#xA;3b of the php script:</p>&#xA;<pre><code>    foreach($mediaID-&gt;data-&gt;products-&gt;edges as $a){&#xA;        // echo $a-&gt;node-&gt;id;&#xA;            $query2 = '{&#xA;  product(id: &quot;'.$a-&gt;node-&gt;id.'&quot;) {&#xA;    id&#xA;    title&#xA;    images(first:1) {&#xA;      edges {&#xA;       node {&#xA;         originalSrc&#xA;         id&#xA;       }&#xA;      }&#xA;    }  &#xA;  }&#xA;}';         &#xA;            array_push($graphQLArray, $query2);&#xA;        }&#xA;</code></pre>&#xA;<p>It then pushes the response into an array, so I am left with an array full of queries with the correct product id. Next that array is iterated through in order to call the products themselves.&#xA;4b of php script:</p>&#xA;<pre><code>$restCallArray = array();&#xA;    foreach($graphQLArray as $t){&#xA;        array_push($restCallArray, graphQLCall($t, $endpoint, &quot;flag&quot;));&#xA;    }&#xA;    $json = json_encode($restCallArray);&#xA;    print_r($json);&#xA;</code></pre>&#xA;<p>The final step in my php script is to <code>print_r($json);</code></p>&#xA;<p>after which it is then processed by my async showGraphQL() function; written above.</p>&#xA;<p>My async fetch responds with something like this when I post to innerHTML:</p>&#xA;<pre><code>{&quot;data&quot;:{&quot;product&quot;:{&quot;id&quot;:&quot;gid:\/\/shopify\/Product\/6736442654756&quot;,&quot;title&quot;:&quot;Cactus Sneaker Women&quot;,&quot;images&quot;:{&quot;edges&quot;:[{&quot;node&quot;:{&quot;originalSrc&quot;:&quot;https:\/\/cdn.shopify.com\/s\/files\/1\/0009\/8421\/9684\/products\/76-10-49321-548_1.jpg?v=1631627733&quot;,&quot;id&quot;:&quot;gid:\/\/shopify\/ProductImage\/28632222433316&quot;}}]}}},&quot;extensions&quot;:{&quot;cost&quot;:{&quot;requestedQueryCost&quot;:4,&quot;actualQueryCost&quot;:4,&quot;throttleStatus&quot;:{&quot;maximumAvailable&quot;:2000.0,&quot;currentlyAvailable&quot;:1996,&quot;restoreRate&quot;:100.0}}}},{&quot;data&quot;:{&quot;product&quot;:{&quot;id&quot;:&quot;gid:\/\/shopify\/Product\/6736442687524&quot;,&quot;title&quot;:&quot;Cactus Sneaker Men&quot;,&quot;images&quot;:{&quot;edges&quot;:[{&quot;node&quot;:{&quot;originalSrc&quot;:&quot;https:\/\/cdn.shopify.com\/s\/files\/1\/0009\/8421\/9684\/products\/76-10-49322-548_1.jpg?v=1631627827&quot;,&quot;id&quot;:&quot;gid:\/\/shopify\/ProductImage\/28632226070564&quot;}}]}}},&quot;extensions&quot;:{&quot;cost&quot;:{&quot;requestedQueryCost&quot;:4,&quot;actualQueryCost&quot;:4,&quot;throttleStatus&quot;:{&quot;maximumAvailable&quot;:2000.0,&quot;currentlyAvailable&quot;:1996,&quot;restoreRate&quot;:100.0}}}}&#xA;</code></pre>&#xA;<p>The above response is totally correct but, the problem occurs when I try to place it in a html element like: <code>graphQL[i].data.product.id</code> I receive <code>undefined</code>.&#xA;That is my problem that I am unable to correctly iterate through what appears to be a JSON.</p>&#xA;<p>I am new to graphQL and to using API's in general so appreciate any help and apologize that its so longwinded, I hope the question/problem is clear and that the code is presented clearly too.</p>&#xA;<ul>&#xA;<li>Boogabooga</li>&#xA;</ul>&#xA;",17489608,,17489608,2022-03-03 15:31:01,2022-03-03 15:31:01,Cannot get my GRAPHQL response into an iterable JSON format,<javascript><php><graphql><fetch>,1,11,0,2022-03-03 13:47:16
71349573,2,,71348564,0,,"<p>You can alias both fields with:</p>&#xA;<pre><code>button {&#xA;      newName1: url&#xA;      newName2: title&#xA;    }&#xA;</code></pre>&#xA;<p>After that, you will need to refer to each field using <code>button.newName1</code> and <code>button.newName2</code> respectively.</p>&#xA;<p>GraphQL aliases docs: <a href=""https://graphql.org/learn/queries/#aliases"" rel=""nofollow noreferrer"">https://graphql.org/learn/queries/#aliases</a></p>&#xA;",5585371,,,,2022-03-04 09:54:38,"",,0,0,0,2022-03-04 09:54:38
71353036,2,,60760162,0,,"<p>Your query should be like this instead:</p>&#xA;<pre><code>query {&#xA;  project(fullPath: &quot;BenSa/first-project&quot;) {&#xA;    repository {&#xA;      blobs(ref:&quot;master&quot;, paths: [&quot;data.json&quot;, &quot;index.html&quot;]) {&#xA;        nodes {&#xA;          rawBlob&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1189538,,,,2022-03-04 14:42:18,"",,0,0,0,2022-03-04 14:42:18
71358627,2,,71352909,1,,<p>You have a syntax error in your map return. Instead of enclosing it in the curly brackets do something like this.</p>&#xA;<pre><code>    {career.thePerson.map((value) =&gt; value.info.info )}&#xA;</code></pre>&#xA;,11122182,,,,2022-03-05 00:50:35,"",,0,0,0,2022-03-05 00:50:35
71374028,1,,,0,77,"<p>I am looking for help in using a GraphQL API to see my rails DB with information being pulled through.</p>&#xA;<p>I have created two models to pull information through my API calls but I am stuck on how to actually get the information into the database.  As of now I have just rendered my returned json directly into the view.  I am thinking I need to seed this into the DB but wondering if I need to do that all from my seed.rb file or if I can pull in the query from my index controller?</p>&#xA;<p>Thanks for your help!</p>&#xA;<pre><code>def index&#xA;        client = ShopifyAPI::GraphQL.client&#xA;&#xA;        products_query = client.parse &lt;&lt;-'GRAPHQL'&#xA;        {&#xA;            products(first: 1) {&#xA;                edges {&#xA;                    node {&#xA;                        featuredImage {&#xA;                            altText&#xA;                            url&#xA;                        }&#xA;                        id&#xA;                        title&#xA;                        totalInventory&#xA;                        variants(first: 1) {&#xA;                            edges {&#xA;                                node {&#xA;                                    price&#xA;                                }&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                    cursor&#xA;                }&#xA;                pageInfo {&#xA;                    hasNextPage&#xA;                    hasPreviousPage&#xA;                }&#xA;            }&#xA;            orders(first: 10) {&#xA;                edges {&#xA;                    node {&#xA;                        lineItems(first: 10){&#xA;                            edges{&#xA;                                node{&#xA;                                    name&#xA;                                    id&#xA;                                }&#xA;                            }&#xA;                        }&#xA;                        totalPriceSet {&#xA;                            shopMoney{&#xA;                                amount&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                    cursor&#xA;                }&#xA;                pageInfo {&#xA;                    hasNextPage&#xA;                    hasPreviousPage&#xA;                }&#xA;            }&#xA;        }&#xA;        GRAPHQL&#xA;&#xA;        result = client.query(products_query)&#xA;&#xA;        product_array = result.data.products.edges.map do |d|&#xA;            {&#xA;                featuredImage: {&#xA;                    altText: d.node&amp;.featured_image&amp;.alt_text,&#xA;                    url: d.node&amp;.featured_image&amp;.url,&#xA;                },&#xA;                id: d.node.id,&#xA;                title: d.node.title,&#xA;                totalInventory: d.node.total_inventory,&#xA;                variants: {&#xA;                    price: d.node.variants.edges[0].node.price,&#xA;                },&#xA;                cursor: d.cursor&#xA;            }&#xA;        end&#xA;&#xA;        orders_array = result.data.orders.edges.map do |d|&#xA;            {&#xA;                lineItems: d.node.line_items.edges.map { |i| i.node.name },&#xA;                name: d.node.line_items.edges.map { |i| i.node.id },&#xA;                totalPriceSet: {&#xA;                    shopMoney: {&#xA;                        amount: d.node.total_price_set.shop_money.amount&#xA;                    },&#xA;                },&#xA;                cursor: d.cursor&#xA;            }&#xA;        end&#xA;&#xA;        return_products = {&#xA;            products: result.data.products.edges.map{ |e| e.to_h },&#xA;            page_info: result.data.products.page_info.to_h&#xA;        }&#xA;        &#xA;        total_value_orders = result.data.orders.edges.map { |d|&#xA;            d.node.total_price_set.shop_money.amount.to_f&#xA;        }&#xA;        total_value_orders.sum&#xA;&#xA;        # debugger&#xA;&#xA;        return_orders = {&#xA;            orders: result.data.orders.edges.map{ |e| e.to_h },&#xA;            page_info: result.data.orders.page_info.to_h,&#xA;            total_value: total_value_orders.sum&#xA;        }&#xA;&#xA;        render json: {products: return_products, orders: return_orders}&#xA;    end&#xA;end&#xA;</code></pre>&#xA;<p>I have created two models for products and orders like so,</p>&#xA;<pre><code>class CreateProducts &lt; ActiveRecord::Migration[5.2]&#xA;  def change&#xA;    create_table :products, :id =&gt; false do |t|&#xA;      t.string :id&#xA;      t.string :url&#xA;      t.boolean :altText&#xA;      t.string :title&#xA;      t.integer :totalInventory&#xA;      t.float :price&#xA;      t.string :cursor&#xA;      t.boolean :hasNextPage&#xA;      t.boolean :hasPreviousPage&#xA;&#xA;      t.timestamps&#xA;    end&#xA;  end&#xA;end&#xA;</code></pre>&#xA;<pre><code>class CreateOrders &lt; ActiveRecord::Migration[5.2]&#xA;  def change&#xA;    create_table :orders do |t|&#xA;      t.string :productName&#xA;      t.string :productId&#xA;      t.float :amount&#xA;      t.string :cursor&#xA;      t.boolean :hasNextPage&#xA;      t.boolean :hasPreviousPage&#xA;      t.references :products&#xA;&#xA;      t.timestamps&#xA;    end&#xA;  end&#xA;end&#xA;</code></pre>&#xA;<p>and</p>&#xA;<pre><code>class Product &lt; ApplicationRecord&#xA;    has_many :orders&#xA;end&#xA;</code></pre>&#xA;<pre><code>class Order &lt; ApplicationRecord&#xA;    belongs_to :products&#xA;end&#xA;</code></pre>&#xA;",18391841,,,,2022-03-06 20:39:10,"Seeding my database with GraphQL, json response. Ruby on Rails",<ruby-on-rails><ruby><graphql>,0,1,0,2022-03-06 20:39:10
71383973,1,,,0,235,"<p>My ultimate goal is to have the blob text for each object id I have.</p>&#xA;<p>Variables I have:</p>&#xA;<ul>&#xA;<li>Organization name and ID (constants)</li>&#xA;<li>Repository IDs and Names (over a hundred)</li>&#xA;<li>Object IDs of files in Repositories. They are all blobs and and <strong>I want their text</strong>.</li>&#xA;</ul>&#xA;<p>I'm trying to do a dynamic batch query using the Graph API, but I'm relatively new to GraphQL.</p>&#xA;<p>here is an example of what I am <strong>Trying</strong> to do, but I can't seem to pass multiple object IDS.</p>&#xA;<pre><code>query inputArray($idRepo: [ID!]! $idObj: [ID!]!){&#xA;  nodes(ids: $idRepo){&#xA;    ...on Repository{&#xA;        object(oid:$idObj) {&#xA;          ... on Blob{text}&#xA;        }&#xA;      }&#xA;    }&#xA;}&#xA;{&#xA;  &quot;idRepo&quot;:[&quot;MDEwOlJlcG9zaXRvcnk5MTk=&quot;,&quot;MDEwOlJlcG9zaXRvcnk5MTk=&quot;],&#xA;  &quot;idObj&quot;: [&quot;815effd8b1bedee3eb4ddcd3d4ce5ce677d08c0d&quot;,&quot;09f9b855a0515e82d4953c8e7a7684e1c72a7131&quot;]&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>I get a type error for oid.</p>&#xA;<p>I wish I could just pass my list of <code>oid</code> to a query and just get the blob text back.</p>&#xA;<p>Any advice? I can't figure it out. :(</p>&#xA;",17918303,,,,2022-03-07 16:09:10,Get blob contents for list of object IDs from Github GraphQL API,<github><graphql><github-api><github-graphql>,0,0,0,2022-03-07 16:09:10
71401961,1,,,0,57,"<p>I am building something like an ecommerce website where the user can add products to a cart. Later when the user visits the cart page or the mini-cart popup, the products they added need to show up there. I am saving the products the user adds on the frontend as an array of product ids. How do i build a fetching schema which will fetch the products based on the array of ids. I cannot POST on the server so I cannot save the cart content there. I use Apollo to manage the API. Below is the link to the repo of the project and I would be incredibly grateful if someone could help me.</p>&#xA;<p><a href=""https://github.com/robertobadzo/scandiweb"" rel=""nofollow noreferrer"">https://github.com/robertobadzo/scandiweb</a></p>&#xA;",15366890,,,,2022-03-08 21:59:06,how to dynamically fetch graph ql content,<reactjs><server><graphql><get><apollo>,0,3,0,2022-03-08 21:59:06
71416635,1,71416996,,1,154,"<p>I have written the below query to retrieve <code>movie</code> and corresponding <code>rating</code>:</p>&#xA;<pre><code>match (rvwr:Person)-[r:REVIEWED]-&gt;(m:Movie)&#xA;where m.released &gt; 2003&#xA;return m.title, sum(r.rating)/count(r) as rating&#xA;</code></pre>&#xA;<p>I want to confirm if there is a need to use anything similar to <code>groupby clause</code>.</p>&#xA;",5632400,,7879193,2022-03-10 18:30:50,2022-03-10 18:30:50,Do we have 'groupby' clause in Neo4j?,<facebook-graph-api><neo4j><graphql><cypher><graph-databases>,1,0,0,2022-03-09 22:18:43
71424086,2,,70346355,0,,"<p>Updating an existing metafield:</p>&#xA;<pre><code>mutation {&#xA;  metafieldsSet(metafields: [&#xA;    {namespace: &quot;YOURNAMESPACE&quot;, ownerId: &quot;gid://shopify/Customer/CUSTOMER_ID&quot;, type: &quot;single_line_text_field&quot;, key: &quot;YOURKEY&quot;, value: &quot;THIS IS NEW VALUE&quot;}&#xA;&#xA;  ]) {&#xA;    metafields {&#xA;      key&#xA;      value&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Creating new metafield:</p>&#xA;<pre><code>mutation {&#xA;  customerUpdate(input: {&#xA;    id: &quot;gid://shopify/Customer/CUSTOMER_ID&quot;, &#xA;    metafields: [&#xA;      {key: &quot;newkey&quot;, value: &quot;some value&quot;, type: &quot;single_line_text_field&quot;, namespace: &quot;some namespace&quot;}, &#xA;    ]&#xA;  }) {&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",5631614,,,,2022-03-10 12:20:01,"",,0,1,0,2022-03-10 12:20:01
71428003,1,,,0,26,"<p>I am using graphql-core for python. I am trying to convert a query into an ast, then to a python object and then back to an ast. I’m using parse and ast_to_dict, but how do I convert the python object back to an ast?</p>&#xA;<pre><code>ast = parse(source_schema_query)&#xA;dict = ast_to_dict(ast)&#xA;ast_again = ...&#xA;</code></pre>&#xA;",3497669,,,,2022-03-10 17:00:36,convert python object to graphql ast,<python><graphql>,0,0,0,2022-03-10 17:00:36
71445921,2,,46452868,1,,"<pre><code>query {&#xA;  posts {&#xA;    meta {&#xA;      pagination {&#xA;        total&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>where <strong>posts</strong> is the name of your <em>collection</em></p>&#xA;<p>source = <a href=""https://graphql.org/learn/pagination/"" rel=""nofollow noreferrer"">https://graphql.org/learn/pagination/</a></p>&#xA;",13414289,,,,2022-03-12 00:15:47,"",,0,2,0,2022-03-12 00:15:47
71449508,2,,71449438,1,,"<p>In the schema definition, pay close attention to the Product type and addProductInput:</p>&#xA;<pre><code>  type Product {&#xA;    name: String!&#xA;    price: Float!&#xA;    description: : String!&#xA;  }&#xA;&#xA;  input addProductInput {&#xA;    name: String!&#xA;    price: Float!&#xA;    description: : String!&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>Are you sure the description fields should have two colons? I think they shouldn't have the middle one, and just be like <code>description: String!</code></p>&#xA;",11143111,,,,2022-03-12 11:58:21,"",,0,0,0,2022-03-12 11:58:21
71469190,1,,,1,105,"<p>I have a simple test case like:</p>&#xA;<pre><code>@patch('helpers.queries.Query.resolve_profile_lookup')&#xA;def test_profile_lookup(mock_resolve_profile_lookup, client, client_query):&#xA;&#xA;    mock_resolve_profile_lookup.return_value = [&#xA;        {&quot;name&quot;: &quot;First name&quot;},&#xA;        {&quot;address&quot;: &quot;First address&quot;},&#xA;    ]&#xA;    response = client_query(&#xA;        &quot;&quot;&quot;&#xA;        query profileLookup($search: String!){&#xA;            profileLookup(search: $search) {&#xA;                name&#xA;                address&#xA;            }&#xA;        }&#xA;        &quot;&quot;&quot;,&#xA;        variables={&quot;search&quot;: &quot;jack&quot;},&#xA;    )&#xA;    content = json.loads(response.content)&#xA;    assert mock_resolve_profile_lookup.called&#xA;</code></pre>&#xA;<p>Here, I want to mock the <code>resolve_profile_lookup</code> query that I have in <code>Query</code>.</p>&#xA;<p>From my understanding the function I patch is mocked while running test case, but its not working here.</p>&#xA;<p>Anything that I am missing here ?</p>&#xA;",14892158,,,,2022-03-14 14:16:28,django graphene pytest mock query not working,<django><graphql><pytest><pytest-mock>,0,0,0,2022-03-14 14:16:28
71469382,2,,65348736,3,,"<p>try <code>cache.modify()</code> (<a href=""https://www.apollographql.com/docs/react/caching/cache-interaction/#using-cachemodify"" rel=""nofollow noreferrer"">link to api</a>) available from <code>@apollo/client</code> &gt; v3.&#xA;Easy process:</p>&#xA;<ol>&#xA;<li>identify object to modify</li>&#xA;<li>specify fields to modify(incl nested)</li>&#xA;</ol>&#xA;<pre class=""lang-js prettyprint-override""><code>    client.cache.modify({&#xA;      id: client.cache.identify({ __typename: 'OBJ_TYPE_NAME', id: &lt;OBJ_IDENTIFIER&gt; }),&#xA;      fields: {&#xA;        myField(currentValueOFMyField) {&#xA;          return { ...currentValueOFMyField, myNestedField: 'new val' };&#xA;        },&#xA;      },&#xA;    });&#xA;</code></pre>&#xA;<p>Hope this'll help someone.</p>&#xA;",7523502,,,,2022-03-14 14:28:51,"",,0,0,0,2022-03-14 14:28:51
71473407,1,,,0,63,"<p>In Silverstripe, GraphQL provides an error in the browser console, but there is no backtrace, making debugging tricky.  Is there a way to get a backtrace?</p>&#xA;",7249528,,,,2022-04-26 21:36:56,Silverstripe: how can I debug a GraphQL Error?,<debugging><graphql><silverstripe>,2,0,0,2022-03-14 19:45:18
71476200,2,,71473238,0,,"<p>The variables when calling the mutation do not match the variables in the gql statement.</p>&#xA;<p>Please try this:</p>&#xA;<pre><code>const DRIVERCREATECOLLISIONACCIDENT = gql`&#xA;  mutation Mutation($accidentId: String!, $specific_pictures: JSON!, $contact_info: JSON!, $collision_report: JSON!, $extra_info: String!) {&#xA;    driverCreateCollisionAccident(accidentId: $accidentId, specific_pictures: $specific_pictures, contact_info: $contact_info, collision_report: $collision_report, extra_info: $extra_info) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Also, double check the schema for your mutation, and make sure the input variables are matching in your gql statement.</p>&#xA;<p>I do not see where <code>accident</code> is passed in your mutation as well.</p>&#xA;",9009196,,,,2022-03-15 02:01:40,"",,0,0,0,2022-03-15 02:01:40
71481957,1,,,0,262,"<p>I'm using the shopify_app gem and trying to get multiple products using the graphql admin API.  I can hardcode product Id's and get a valid response.  However, when using dynamic variables I get the error below in my terminal:</p>&#xA;<pre><code>GraphQL::ParseError (Parse error on &quot;$&quot; (VAR_SIGN) at [2, 27]):&#xA;</code></pre>&#xA;<p>Here is the code block</p>&#xA;<pre><code>&#xA;      get_order_products = ShopifyAPI::GraphQL.client.parse &lt;&lt;-'GRAPHQL'&#xA;      {&#xA;        query getProducts($ids: [ID!]!) {&#xA;        nodes(ids: $ids) {&#xA;          ... on Product {&#xA;            id&#xA;            title&#xA;            metafields(first: 5) {&#xA;              edges {&#xA;                node {&#xA;                  namespace&#xA;                  key&#xA;                  value&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;       }&#xA;      }&#xA;      GRAPHQL&#xA;&#xA;      {&#xA;          &quot;ids&quot;: [&quot;gid://shopify/Product/abc123&quot;, &quot;gid://shopify/Product/abc456&quot;]&#xA;      }&#xA;&#xA;     @result = ShopifyAPI::GraphQL.client.query(get_order_products)&#xA;&#xA;&#xA;</code></pre>&#xA;<p>I'm new to graphql but would have expected this to work based on <a href=""https://community.shopify.com/c/shopify-apis-and-sdks/query-array-of-product-ids-with-graphql-api-in-one-request/td-p/453152"" rel=""nofollow noreferrer"">this shopify community forum post][1]</a></p>&#xA;",11379990,,,,2022-03-15 12:07:55,How to fix graphql parse error on $ using rails shopify_app gem?,<ruby-on-rails><graphql><shopify-app>,0,0,0,2022-03-15 12:07:55
71490941,1,,,0,105,"<p>I am trying to query my categories within my product. I created a table in which I want to see the categories of my product table. I am using Prisma as my typeORM and Apollo as a way to query my Postgres database. Please see the attached photo of my table. I have categories that are within my Product model.</p>&#xA;<p>Here is my query function using my UseQuery Hook from Apollo/Client.</p>&#xA;<pre><code>const AllProductsQuery = gql`&#xA;    query {&#xA;        products {&#xA;            id&#xA;            name&#xA;            description&#xA;            img&#xA;            price&#xA;            ingredients&#xA;        &#xA;            categories {&#xA;                id&#xA;                name&#xA;            }&#xA;        }&#xA;    }&#xA;`&#xA;</code></pre>&#xA;<p>What I thought this would do was since I am querying the categories within the products I would be able to hit that information. However, it isn't even console logging that data.</p>&#xA;<p>This is what I have</p>&#xA;<pre><code>&lt;Table  striped bordered hover &gt;&#xA;                &lt;thead&gt;&#xA;                &lt;tr&gt;&#xA;                 &lt;th&gt;Product&lt;/th&gt;&#xA;                 &lt;th&gt;Category&lt;/th&gt;&#xA;                 &lt;th&gt;Price&lt;/th&gt;&#xA;                 &#xA;                 &lt;/tr&gt;&#xA;                &lt;/thead&gt;&#xA;                &#xA;               &#xA;        {data  &amp;&amp; data.products.map((product: Product, categories: Category) =&gt; {&#xA;            return (&#xA;                &#xA;              &#xA;               &lt;tbody&gt;&#xA;                &lt;tr&gt;&#xA;                    &lt;td&gt;{product.name}&lt;/td&gt;&#xA;                    &lt;td&gt;{product.categories.name}&lt;/td&gt;&#xA;                    &lt;td&gt;{product.price}&lt;/td&gt;&#xA;                &lt;/tr&gt;&#xA;                &lt;/tbody&gt;&#xA;             &#xA;               &#xA;               &#xA;              &#xA;            )&#xA;            &#xA;        })}&#xA;        &#xA;        &lt;/Table&gt;&#xA;</code></pre>&#xA;<p>However this doesn't even show the categories information within my products within the console log. The Product.name and Product.price work perfectly however, I try to run the same thing with product.categories.name doesn't work. Any information would be great!</p>&#xA;<p><a href=""https://i.stack.imgur.com/aV3Oe.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/aV3Oe.png"" alt=""Image of my Table"" /></a></p>&#xA;",12973512,,12973512,2022-03-16 10:17:21,2022-03-16 13:06:08,Query relationships within Apollo/Client,<javascript><graphql><apollo><apollo-client><prisma-graphql>,1,1,0,2022-03-16 01:48:14
71499426,1,,,1,583,"<p>I am in the process of building a lambda function that will update shopify products that have a specified tag on them. At this point I just want to run it locally to ensure that the code works, but it's not working.</p>&#xA;<pre><code>&#xA;    const express = require('express');&#xA;    require('dotenv').config();&#xA;    const app = express();&#xA;    const axios = require('axios');&#xA;    const gql = require('graphql-tag');&#xA;    const { print } = require('graphql/language/printer')&#xA;&#xA;    app.use((req, res, next) =&gt; {&#xA;        res.header('Access-Control-Allow-Origin', '*');&#xA;        next();&#xA;    });&#xA;&#xA;    const url = 'https://store.myshopify.com/admin/api/2022-01/graphql.json';&#xA;&#xA;    const mutQuery = gql`&#xA;    mutation productVariantsBulkUpdate($variants: [ProductVariantsBulkInput!]!, $productId: ID!) {&#xA;      productVariantsBulkUpdate(productId: $productId, variants: $variants) {&#xA;        product {&#xA;          id&#xA;        }&#xA;        productVariants {&#xA;          id&#xA;          title&#xA;          price&#xA;        }&#xA;        userErrors {&#xA;          field&#xA;          message&#xA;        }&#xA;      }&#xA;    }&#xA;    `&#xA;    const printedQuery = print(mutQuery);&#xA;&#xA;    const fetchIDs = () =&gt; {&#xA;     return axios({&#xA;        headers: {&#xA;        'Content-Type': 'application/json',&#xA;        'X-Shopify-Access-Token': 'shpat_TOKEN'&#xA;        },&#xA;        method: 'post',&#xA;        data: {&#xA;        query: `{&#xA;            products(query: &quot;tag:'change me'&quot;, first: 10) {&#xA;              edges {&#xA;                node {&#xA;                  id&#xA;                  title&#xA;                  variants(first: 10) {&#xA;                    edges {&#xA;                      node {&#xA;                        id&#xA;                        title&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }`,&#xA;        variables: {}&#xA;        },&#xA;        url: url&#xA;    }).then(response =&gt; {&#xA;        return response.data&#xA;    }).catch(error =&gt; {&#xA;        console.log(error)&#xA;    })&#xA;    }&#xA;&#xA;    const savedata = async () =&gt; {&#xA;        const data = await fetchIDs();&#xA;        const PRICE = &quot;70.01&quot;&#xA;        const arrayLength = data.data.products.edges.length;&#xA;        var productArray = []&#xA;        for (let i = 0; i &lt; arrayLength; i++) {&#xA;            productArray[i] = data.data.products.edges[i].node.id;&#xA;            const varArrayLength = data.data.products.edges[i].node.variants.edges.length;&#xA;            var constructedVariables = {}&#xA;            let variantArray = []&#xA;            for (let k = 0; k &lt; varArrayLength; k++) {&#xA;                var variantObject = {&#xA;                    &quot;id&quot;: data.data.products.edges[i].node.variants.edges[k].node.id,&#xA;                    &quot;price&quot;: PRICE&#xA;                }&#xA;                variantArray.push(variantObject);&#xA;            }&#xA;            constructedVariables = {&#xA;                &quot;productId&quot;: productArray[i],&#xA;                &quot;variants&quot;: variantArray&#xA;            }&#xA;            let queryVariables = JSON.stringify(constructedVariables, null, 4);&#xA;            &#xA;            console.log(&quot;query variables: &quot;, queryVariables)&#xA;            console.log(&quot;mutation query: &quot;, printedQuery)&#xA;                axios({&#xA;                    headers: {&#xA;                        'Content-Type': 'application/json',&#xA;                        'X-Shopify-Access-Token': 'shpat_TOKEN'&#xA;                    },&#xA;                    method: 'post',&#xA;                    &#xA;                    data: {&#xA;                        query: printedQuery,&#xA;                        variables: queryVariables&#xA;                    },&#xA;                    url: url&#xA;                }).then(result =&gt; {&#xA;                    console.log(&quot;Prices have been updated!&quot;, JSON.stringify(result.data, null, 4))&#xA;                }).catch(error =&gt; {&#xA;                    console.log(JSON.stringify(error, null, 4))&#xA;                })&#xA;            }&#xA;        }&#xA;        &#xA;    savedata();&#xA;</code></pre>&#xA;<p>And here is my console output:</p>&#xA;<pre><code>query variables:  {&#xA;    &quot;productId&quot;: &quot;gid://shopify/Product/7663794749669&quot;,&#xA;    &quot;variants&quot;: [&#xA;        {&#xA;            &quot;id&quot;: &quot;gid://shopify/ProductVariant/42606074757349&quot;,&#xA;            &quot;price&quot;: &quot;70.01&quot;&#xA;        },&#xA;        {&#xA;            &quot;id&quot;: &quot;gid://shopify/ProductVariant/42606074790117&quot;,&#xA;            &quot;price&quot;: &quot;70.01&quot;&#xA;        }&#xA;    ]&#xA;}&#xA;mutation query:  mutation productVariantsBulkUpdate($variants: [ProductVariantsBulkInput!]!, $productId: ID!) {&#xA;  productVariantsBulkUpdate(productId: $productId, variants: $variants) {&#xA;    product {&#xA;      id&#xA;    }&#xA;    productVariants {&#xA;      id&#xA;      title&#xA;      price&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;{&#xA;    &quot;message&quot;: &quot;Request failed with status code 400&quot;,&#xA;    &quot;name&quot;: &quot;Error&quot;,&#xA;    &quot;stack&quot;: &quot;Error: Request failed with status code 400\n    at createError (/Users/trevor/Documents/shop/graphQL/GraphiQLexamples/node_modules/axios/lib/core/createError.js:16:15)\n    at settle (/Users/trevor/Documents/shop/graphQL/GraphiQLexamples/node_modules/axios/lib/core/settle.js:17:12)\n    at IncomingMessage.handleStreamEnd (/Users/trevor/Documents/shop/graphQL/GraphiQLexamples/node_modules/axios/lib/adapters/http.js:322:11)\n    at IncomingMessage.emit (node:events:532:35)\n    at endReadableNT (node:internal/streams/readable:1346:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)&quot;,&#xA;    &quot;config&quot;: {&#xA;        &quot;transitional&quot;: {&#xA;            &quot;silentJSONParsing&quot;: true,&#xA;            &quot;forcedJSONParsing&quot;: true,&#xA;            &quot;clarifyTimeoutError&quot;: false&#xA;        },&#xA;        &quot;transformRequest&quot;: [&#xA;            null&#xA;        ],&#xA;        &quot;transformResponse&quot;: [&#xA;            null&#xA;        ],&#xA;        &quot;timeout&quot;: 0,&#xA;        &quot;xsrfCookieName&quot;: &quot;XSRF-TOKEN&quot;,&#xA;        &quot;xsrfHeaderName&quot;: &quot;X-XSRF-TOKEN&quot;,&#xA;        &quot;maxContentLength&quot;: -1,&#xA;        &quot;maxBodyLength&quot;: -1,&#xA;        &quot;headers&quot;: {&#xA;            &quot;Accept&quot;: &quot;application/json, text/plain, */*&quot;,&#xA;            &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;            &quot;X-Shopify-Access-Token&quot;: &quot;shpat_TOKEN&quot;,&#xA;            &quot;User-Agent&quot;: &quot;axios/0.26.1&quot;,&#xA;            &quot;Content-Length&quot;: 574&#xA;        },&#xA;        &quot;method&quot;: &quot;post&quot;,&#xA;        &quot;data&quot;: &quot;{\&quot;query\&quot;:\&quot;mutation productVariantsBulkUpdate($variants: [ProductVariantsBulkInput!]!, $productId: ID!) {\\n  productVariantsBulkUpdate(productId: $productId, variants: $variants) {\\n    product {\\n      id\\n    }\\n    productVariants {\\n      id\\n      title\\n      price\\n    }\\n    userErrors {\\n      field\\n      message\\n    }\\n  }\\n}\&quot;,\&quot;variables\&quot;:\&quot;{\\n    \\\&quot;productId\\\&quot;: \\\&quot;gid://shopify/Product/7663793078501\\\&quot;,\\n    \\\&quot;variants\\\&quot;: [\\n        {\\n            \\\&quot;id\\\&quot;: \\\&quot;gid://shopify/ProductVariant/42606072955109\\\&quot;,\\n            \\\&quot;price\\\&quot;: \\\&quot;70.01\\\&quot;\\n        }\\n    ]\\n}\&quot;}&quot;,&#xA;        &quot;url&quot;: &quot;https://shop.myshopify.com/admin/api/2022-01/graphql.json&quot;&#xA;    },&#xA;    &quot;status&quot;: 400&#xA;}&#xA;{&#xA;    &quot;message&quot;: &quot;Request failed with status code 400&quot;,&#xA;    &quot;name&quot;: &quot;Error&quot;,&#xA;    &quot;stack&quot;: &quot;Error: Request failed with status code 400\n    at createError (/Users/trevor/Documents/shop/graphQL/GraphiQLexamples/node_modules/axios/lib/core/createError.js:16:15)\n    at settle (/Users/trevor/Documents/shop/graphQL/GraphiQLexamples/node_modules/axios/lib/core/settle.js:17:12)\n    at IncomingMessage.handleStreamEnd (/Users/trevor/Documents/shop/graphQL/GraphiQLexamples/node_modules/axios/lib/adapters/http.js:322:11)\n    at IncomingMessage.emit (node:events:532:35)\n    at endReadableNT (node:internal/streams/readable:1346:12)\n    at processTicksAndRejections (node:internal/process/task_queues:83:21)&quot;,&#xA;    &quot;config&quot;: {&#xA;        &quot;transitional&quot;: {&#xA;            &quot;silentJSONParsing&quot;: true,&#xA;            &quot;forcedJSONParsing&quot;: true,&#xA;            &quot;clarifyTimeoutError&quot;: false&#xA;        },&#xA;        &quot;transformRequest&quot;: [&#xA;            null&#xA;        ],&#xA;        &quot;transformResponse&quot;: [&#xA;            null&#xA;        ],&#xA;        &quot;timeout&quot;: 0,&#xA;        &quot;xsrfCookieName&quot;: &quot;XSRF-TOKEN&quot;,&#xA;        &quot;xsrfHeaderName&quot;: &quot;X-XSRF-TOKEN&quot;,&#xA;        &quot;maxContentLength&quot;: -1,&#xA;        &quot;maxBodyLength&quot;: -1,&#xA;        &quot;headers&quot;: {&#xA;            &quot;Accept&quot;: &quot;application/json, text/plain, */*&quot;,&#xA;            &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;            &quot;X-Shopify-Access-Token&quot;: &quot;shpat_TOKEN&quot;,&#xA;            &quot;User-Agent&quot;: &quot;axios/0.26.1&quot;,&#xA;            &quot;Content-Length&quot;: 701&#xA;        },&#xA;        &quot;method&quot;: &quot;post&quot;,&#xA;        &quot;data&quot;: &quot;{\&quot;query\&quot;:\&quot;mutation productVariantsBulkUpdate($variants: [ProductVariantsBulkInput!]!, $productId: ID!) {\\n  productVariantsBulkUpdate(productId: $productId, variants: $variants) {\\n    product {\\n      id\\n    }\\n    productVariants {\\n      id\\n      title\\n      price\\n    }\\n    userErrors {\\n      field\\n      message\\n    }\\n  }\\n}\&quot;,\&quot;variables\&quot;:\&quot;{\\n    \\\&quot;productId\\\&quot;: \\\&quot;gid://shopify/Product/7663794749669\\\&quot;,\\n    \\\&quot;variants\\\&quot;: [\\n        {\\n            \\\&quot;id\\\&quot;: \\\&quot;gid://shopify/ProductVariant/42606074757349\\\&quot;,\\n            \\\&quot;price\\\&quot;: \\\&quot;70.01\\\&quot;\\n        },\\n        {\\n            \\\&quot;id\\\&quot;: \\\&quot;gid://shopify/ProductVariant/42606074790117\\\&quot;,\\n            \\\&quot;price\\\&quot;: \\\&quot;70.01\\\&quot;\\n        }\\n    ]\\n}\&quot;}&quot;,&#xA;        &quot;url&quot;: &quot;https://shop.myshopify.com/admin/api/2022-01/graphql.json&quot;&#xA;    },&#xA;    &quot;status&quot;: 400&#xA;}&#xA;</code></pre>&#xA;<p>I'm fairly new to node/ shopify/ and graphQL so bear with me and thank you for your help!</p>&#xA;",7775982,,,,2022-03-16 15:04:03,"Why am I getting ""Error: Request failed with status code 400"" using Axios/GraphQL to update Shopify products?",<javascript><node.js><graphql><shopify><http-status-code-400>,0,0,0,2022-03-16 15:04:03
71499519,1,,,4,602,"<p>I'm new to the GraphQL API for Github. I'm trying to get the commit message and pushedAt date on each file, which you typically see on the root webpage of any github repo showing all the files for the branch (e.g. <a href=""https://github.com/Alamofire/Alamofire"" rel=""nofollow noreferrer"">https://github.com/Alamofire/Alamofire</a> ).</p>&#xA;<pre><code>.github    Updates for Xcode 13.3 (#3576)                   3 days ago&#xA;Tests      Fix 2020 and 2021 Deprecation Warnings (#3555)   last month&#xA;</code></pre>&#xA;<p>My graphql seems to be returning nothing (&quot;commitData&quot;: {}) in the Explorer for the commit data. What am I doing wrong?</p>&#xA;<pre><code>fragment Files on Tree {&#xA;  entries {&#xA;    oid&#xA;    name&#xA;    type&#xA;    path&#xA;    extension    &#xA;    metaData: object {&#xA;      ... on Blob {&#xA;        byteSize&#xA;        isBinary&#xA;      }&#xA;    }&#xA;    commitData: object {&#xA;      ... on Commit {&#xA;        oid&#xA;        pushedDate&#xA;        message&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;query Files($owner: String!, $repo: String!, $branch: String!) {&#xA;  repository(owner: $owner, name: $repo) {&#xA;    ... on Repository {&#xA;      object(expression: $branch) {&#xA;        ... on Tree {&#xA;          ...Files&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Query Variables:</p>&#xA;<pre><code>{&#xA;  &quot;repo&quot;: &quot;Alamofire&quot;,&#xA;  &quot;branch&quot;: &quot;HEAD:&quot;,&#xA;  &quot;owner&quot;: &quot;Alamofire&quot;&#xA;}&#xA;</code></pre>&#xA;",835786,,,,2022-04-01 12:06:15,Getting commit data on File list Github GraphQL API,<github><graphql><github-api>,1,0,0,2022-03-16 15:08:49
71501551,1,71583118,,2,592,"<p>We can get all branches of a particular repository with the query mentioned <a href=""https://stackoverflow.com/questions/55487432/how-can-we-list-all-the-branches-in-a-repo-using-github-graphql-api"">here</a>.</p>&#xA;<pre><code>query { &#xA;    repository(owner: &quot;&lt;userName&gt;&quot;, name: &quot;&lt;repoName&gt;&quot;) {&#xA;    refs(first: 10, refPrefix: &quot;refs/heads/&quot;,after:&quot;&lt;cursor&gt;&quot;) {&#xA;      edges {&#xA;        node {&#xA;          name&#xA;            target {&#xA;              ... on Commit {&#xA;                author {&#xA;                  name&#xA;                  email&#xA;                  user {&#xA;                    login&#xA;                  }&#xA;                }&#xA;                pushedDate&#xA;                oid&#xA;              }&#xA;            }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;&#xA;</code></pre>&#xA;<p>But would it be possible for the names to be returned in a sorted order by <code>pushedDate</code> ( or any relevant dates ) . for eg if my repository has 2 branches ( <code>branch 1</code> with pushdate as <code>March 1</code> and <code>branch 2</code> with pushDate as <code>March 10</code> I want <code>branch2</code> to be  returned before <code>branch 1</code>).</p>&#xA;<p>We can do that sorting manually but the issue is that my query is paginated , so this sort would just order only those branches in the current page.</p>&#xA;",18485363,,18485363,2022-03-16 17:44:14,2022-03-23 07:13:10,Github graphQL API get branches of a repository sorted by pushDate,<graphql><github-api>,1,0,0,2022-03-16 17:17:31
71513341,1,,,0,200,"<p>In the code example below, if I exclude the description field the product is created successfully. With the description field in place I get a GraphQL error.</p>&#xA;<p>The code:</p>&#xA;<pre><code>    productCreate(&#xA;    input: {&#xA;      category: &quot;Q2F0ZWdvcnk6MQ==&quot;, # Category ID&#xA;      name: &quot;Delete Me!&quot;, # Product name&#xA;      productType: &quot;UHJvZHVjdFR5cGU6MQ==&quot;, # Product Type ID&#xA;      chargeTaxes: true,&#xA;      weight: &quot;0.3&quot;, # in Kg&#xA;      rating: 5,&#xA;      description: {text:&quot;some text&quot;}, # nope&#xA;    }&#xA;  )&#xA;</code></pre>&#xA;<p>The error:</p>&#xA;<pre><code>graphql.error.base.GraphQLError: Argument \&quot;input\&quot; has invalid value {category: \&quot;Q2F0ZWdvcnk6MQ==\&quot;, name: \&quot;Delete Me!\&quot;, productType: \&quot;UHJvZHVjdFR5cGU6MQ==\&quot;, chargeTaxes: true, weight: \&quot;0.3\&quot;, rating: 5, description: {text: \&quot;some text\&quot;}}.&quot;,&#xA;              &quot;In field \&quot;description\&quot;: Expected type \&quot;JSONString\&quot;, found {text: \&quot;some text\&quot;}.&quot;&#xA;</code></pre>&#xA;",15680276,,,,2022-04-26 13:46:24,"Using graphql playground to test Saleor productCreate, what's the correct syntax for adding a product description?",<syntax><graphql><saleor>,3,0,0,2022-03-17 13:41:19
71519640,2,,71519541,0,,<p>It looks like there is no problem within your attached code snippet.&#xA;I think you need to check above of your code snippet.&#xA;Maybe there is a area that modify gameData or something.&#xA;Please double check it.</p>&#xA;,18291275,,,,2022-03-17 22:13:37,"",,0,0,0,2022-03-17 22:13:37
71529581,1,,,0,460,"<p>Requirement: <strong>Do not use the Shopify Admin Rest API</strong></p>&#xA;<p>How do I get a list of the countries and their states/provinces with the Storefront GraphQL API?</p>&#xA;<p>I am creating a page in React where a customer can edit their address. For my <code>&lt;Select&gt;</code> fields, for countries and provinces, I want to use the Storefront GraphQL API because that is what all of the other queries in my React site are written with.</p>&#xA;<p>I tried this query but it looks like the states/provinces are not available to be retrieved. Why are the states/provinces not available here?</p>&#xA;<p><a href=""https://shopify.dev/api/storefront/2022-01/objects/Country#fields"" rel=""nofollow noreferrer"">https://shopify.dev/api/storefront/2022-01/objects/Country#fields</a></p>&#xA;<pre><code>{&#xA;  localization {&#xA;    availableCountries {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4806162,,,,2022-03-18 15:41:10,Shopify Storefront GraphQL API get list of available countries and states/provinces (WITHOUT REST API),<graphql><shopify><shopify-api>,0,2,0,2022-03-18 15:41:10
71556896,1,,,0,214,"<p>I'm using the following code to create an array of an individual product's variants and their pricing.</p>&#xA;<pre><code>&lt;script&gt;&#xA;&#xA;var currentProductId = &quot;{{product.id}}&quot;;&#xA;parseInt(currentProductId);&#xA;&#xA;// console.log({currentProductId);&#xA;&#xA;var graphQlQuery = ``&#xA;&#xA;  fetch(&quot;/graphql&quot;, {&#xA;    method: &quot;POST&quot;,&#xA;    credentials: &quot;same-origin&quot;,&#xA;    headers: {&#xA;      &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;      Authorization: &quot;Bearer {{settings.storefront_api.token}}&quot;,&#xA;    },&#xA;    body: JSON.stringify({&#xA;      query: `query ExtendedProductsById(&#xA;  $productIds: [Int!]&#xA;  # Use GraphQL Query Variables to inject your product IDs&#xA;) {&#xA;  site {&#xA;    products(entityIds: $productIds, first: 5) {&#xA;      edges {&#xA;        node {&#xA;          name&#xA;          variants(first: 25) {&#xA;            edges {&#xA;              node {&#xA;                sku&#xA;                prices {&#xA;                  price {&#xA;                    currencyCode&#xA;                    value&#xA;                  }&#xA;                }&#xA;                defaultImage {&#xA;                  url(width: 1000)&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;          productOptions(first: 5) {&#xA;            edges {&#xA;              node {&#xA;                entityId&#xA;                displayName&#xA;                isRequired&#xA;                ... on CheckboxOption {&#xA;                  checkedByDefault&#xA;                }&#xA;                ... on MultipleChoiceOption {&#xA;                  values(first: 10) {&#xA;                    edges {&#xA;                      node {&#xA;                        entityId&#xA;                        label&#xA;                        isDefault&#xA;                        ... on SwatchOptionValue {&#xA;                          hexColors&#xA;                          imageUrl(width: 200)&#xA;                        }&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;`,&#xA;variables: {&quot;productIds&quot;: [parseInt(currentProductId)]}&#xA;&#xA;&#xA;    }),&#xA;  })&#xA;    .then((response) =&gt; response.json())&#xA;    .then((data) =&gt; setIndividualVariantPricing(data.data.site.products.edges[0].node.variants.edges));&#xA;&#xA;&#xA;function setIndividualVariantPricing(data){&#xA;&#xA;    console.log(&quot;data:&quot;);&#xA;    console.log(data);&#xA;&#xA;    var variantArray = data;&#xA;&#xA;    var cleanedVariantArray = [];&#xA;&#xA;&#xA;    variantArray.forEach(function (variant) {&#xA;    &#xA;        var variantSku = variant.node.sku;&#xA;        var variantPrice = (variant.node.prices.price.value).toFixed(2);&#xA;&#xA;&#xA;        cleanedVariantArray.push({sku: variantSku, price: variantPrice});&#xA;&#xA;    });&#xA;&#xA;    console.log(cleanedVariantArray);&#xA;    globalVariantArray = cleanedVariantArray;&#xA;&#xA;}&#xA;&#xA;var globalVariantArray;&#xA;&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;<p>It mostly matches up, yet the last three variant SKUs are not what's in the backend of my BigCommerce admin panel under SKU rules.</p>&#xA;<p>When I console log the results of my cleaned up array:</p>&#xA;<p><a href=""https://i.stack.imgur.com/fNRLt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fNRLt.png"" alt=""Console log of my variant price array"" /></a></p>&#xA;<p>Versus what's showing in the back of BigCommerce:</p>&#xA;<p><a href=""https://i.stack.imgur.com/CDROd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CDROd.png"" alt=""Admin panel of BigCommerce for this variant pricing"" /></a></p>&#xA;<p>As you can see the last three variants are not the same as what's in BigCommerce. I've tried refreshing, restarting my stencil server. However, I don't think my code is the issue as it seems to be pulling everything correctly up until the last three SKUs. As you can see in my code it's not doing anything specific to those last entries.</p>&#xA;<p>As where those prices are coming from, it seems those were the prices from before they were updated. Is there a time delay with GraphQL or the BigC API that I'm not aware of?</p>&#xA;",5037201,,1242317,2022-03-21 13:59:01,2022-03-21 13:59:01,GraphQL Product Variant Pricing Not Matching in BigCommerce Admin Panel,<graphql><bigcommerce>,0,1,0,2022-03-21 11:30:43
71571699,1,,,1,223,"<p>I filter products by color, size, vendor etc.</p>&#xA;<p>I would like to query available filters and display filter count dynamically based on remaining products after filtration. Solution based on ReactJS works too slow with 50.000+ products and I need GraphQL solution. I found <a href=""https://shopify.dev/api/examples/filter-products#query-available-filters"" rel=""nofollow noreferrer"">example</a> how to query available filters by collection handle. But nothing similar to behaviour I described above.</p>&#xA;<p>Thank you for help.</p>&#xA;",8162442,,8162442,2022-03-22 12:03:01,2022-03-22 12:03:01,Graphql Storefront Shopify API fast dynamic filtration,<graphql><shopify><storefront>,0,1,0,2022-03-22 11:57:29
71574476,1,,,1,47,"<p>GraphQL beginner here. I am looking out for something like a SQL join so that I may feed the list of repository files from one query as criteria for another query.</p>&#xA;<p>I can get a nice result if I know the file path from each project like this:</p>&#xA;<pre><code>{&#xA;  group(fullPath: &quot;group/path&quot;) {&#xA;    projects {&#xA;      nodes {&#xA;        name&#xA;        &#xA;        repository {&#xA;          blobs(paths: [&quot;global.tfvars&quot;]) {&#xA;            nodes {&#xA;              rawTextBlob&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But what if I don't know the exact file paths up front, e.g I need all the files matching <code>environments/*/local.tfvars</code></p>&#xA;<p>If specifying a glob pattern is not an option, then I would think that need some kind of join with something like this:</p>&#xA;<pre><code>{&#xA;  group(fullPath: &quot;group/path&quot;) {&#xA;    id&#xA;    name&#xA;    projects {&#xA;      nodes {&#xA;        name&#xA;        repository {&#xA;          paginatedTree(path: &quot;environments&quot;, recursive: true) {&#xA;            nodes {&#xA;              blobs {&#xA;                nodes {&#xA;                  path&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",5110153,,,,2022-03-22 15:11:40,get rawTextBlob from all repository files matching path glob pattern,<graphql><gitlab><gitlab-api>,0,0,0,2022-03-22 15:11:40
71575551,1,,,0,161,"<p>Ok, so I have a data structure called product. This product has a field variant with 2 attributes: variant_name (str: e.g. &quot;Size&quot;) and variant_options (repeatable).&#xA;A variant_option has 3 attributes. A text_option (str: e.g. &quot;S, M, L...&quot;), an inventory_stock (int) and locked_stock (int).</p>&#xA;<p>Now I need a query that only updates the locked_stock value for a specific variant_option (S, M, L...) in the &quot;Size&quot; variant, for a specific product (via ID).</p>&#xA;<p>The Query that I have right now looks like this:</p>&#xA;<pre><code>mutation Mutation($updateProductId: ID!, $data: ProductInput!) {&#xA;  updateProduct(id: $updateProductId, data: $data) {&#xA;    data {&#xA;      attributes {&#xA;        variant {&#xA;          variant_option {&#xA;            locked_stock&#xA;            text_option&#xA;            inventory_stock&#xA;          }&#xA;          variant_name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The variable data for that Mutation looks like this:</p>&#xA;<pre><code>{&#xA;  &quot;updateProductId&quot;: &quot;14&quot;,&#xA;  &quot;data&quot;: {&#xA;    &quot;variant&quot;: {&#xA;      &quot;variant_name&quot;: &quot;Size&quot;,&#xA;      &quot;variant_option&quot;: {&#xA;        &quot;locked_stock&quot;: 50,&#xA;        &quot;inventory_stock&quot;: 1000,&#xA;        &quot;text_option&quot;: &quot;M&quot;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The problem is that this doesn't only update the locked_stock value. It deletes the whole &quot;Size&quot; variant and creates a new one that only contains the information from the data object above.</p>&#xA;<p>How can I only update the locked_stock value?</p>&#xA;",17694907,,,,2022-03-28 11:21:41,Howdo you mutate a specific field in GraphQL,<graphql><apollo>,1,0,0,2022-03-22 16:25:05
71583118,2,,71501551,1,,"<p>Unfortunately I do not think this is possible. The only way you can order the branches is by <code>ALPHABETICAL</code></p>&#xA;<p>e.g. <code>refs(first: 10, refPrefix: &quot;refs/heads/&quot;, orderBy: {field: ALPHABETICAL, direction: DESC}</code></p>&#xA;<p>However, assuming you do not have 1000s of branches perhaps you could, as you suggest, make all the paginated queries then order by <code>pushedDate</code>. You can get 100 nodes at a time with pagination (<code>first: 100</code>) so likely only a few queries to get all branches.</p>&#xA;",15471232,,,,2022-03-23 07:13:10,"",,0,0,0,2022-03-23 07:13:10
71585483,1,,,0,101,"<p>I am trying to get the difference summary of a GitHub pull request through GraphQL.</p>&#xA;<p>Usually we can get it through rest api call</p>&#xA;<pre><code>GET https://github.com/owner/repo/pull/number.diff&#xA;</code></pre>&#xA;<p>and the response looks like this</p>&#xA;<pre><code>diff --git a/main.py b/main.py&#xA;index 7e8c7d4..08a53ce 100644&#xA;--- a/main.py&#xA;+++ b/main.py&#xA;@@ -15,3 +15,5 @@ def dummy_load(secs: int) -&gt; None:&#xA; if __name__ == &quot;__main__&quot;:&#xA;     mul = main(2)&#xA;     print(mul)&#xA;+&#xA;+# test comment&#xA;</code></pre>&#xA;<p>Is it possible to get the same result trough their GraphQL API</p>&#xA;",6610624,,,,2022-03-23 10:19:53,Get GitHub pull request difference summary through GraphQL,<github><github-api><github-graphql>,0,0,0,2022-03-23 10:19:53
71588764,2,,71588700,0,,"<p>Order is an array of objects, you need to get the first element like <code>Order[0]</code> then access <code>.users</code></p>&#xA;<pre><code>let users = this.Order[0].users&#xA;</code></pre>&#xA;<p>A good refresher might help here; <a href=""https://stackoverflow.com/questions/11922383/how-can-i-access-and-process-nested-objects-arrays-or-json"">How can I access and process nested objects, arrays or JSON?</a></p>&#xA;",2692688,,,,2022-03-23 14:15:27,"",,0,0,0,2022-03-23 14:15:27
71588773,2,,71588700,0,,<p><code>Order</code> is an Array containing objects. To access <code>users</code> you would need to access item at index <code>[0]</code> if it has property <code>?.users</code>.</p>&#xA;<pre><code>this.Order[0]?.users&#xA;</code></pre>&#xA;,15439733,,,,2022-03-23 14:15:49,"",,0,0,0,2022-03-23 14:15:49
71596730,2,,71595803,0,,<p>Index.js</p>&#xA;<pre><code>    searchCategories(search: String): [User]!&#xA;</code></pre>&#xA;<p>Resolver</p>&#xA;<pre><code> searchCategories: async ({ search }) =&gt; {&#xA;        try {&#xA;            const users = await User.find()&#xA;            return users.filter(x =&gt; x.enterCat === search);&#xA;        } catch (err) {&#xA;            throw err;&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;,16465140,,,,2022-03-24 03:30:02,"",,0,0,0,2022-03-24 03:30:02
71604610,2,,52805394,1,,"<p>Your question title mentions &quot;repository description&quot;, but the GraphQL query is full of &quot;project&quot; references. If you want to update a repo description, you need to use mutation <a href=""https://docs.github.com/en/graphql/reference/mutations#updaterepository"" rel=""nofollow noreferrer""><code>updateRepository</code></a>.</p>&#xA;",294918,,,,2022-03-24 14:47:30,"",,0,0,0,2022-03-24 14:47:30
71613851,1,,,1,1529,"<p>I need to do some pre-parsing steps before executing a Graphql query. But I have no idea how to convert an input Graphql query, which is a String, into a Java Object. Ideally, the Java object should contain the subfields and the arguments of each field of the query. For example:</p>&#xA;<pre><code>{&#xA;  Instrument(id: &quot;1234&quot;) {&#xA;    Reference {&#xA;      Name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This may be converted into something like a JSON object:</p>&#xA;<pre><code>{&#xA;  &quot;Instrument&quot;:{&#xA;    &quot;arguments:{&#xA;      &quot;id&quot;: &quot;1234&quot;&#xA;    }&#xA;    &quot;fields&quot;:{&#xA;      &quot;Reference&quot;:{&#xA;        &quot;fields&quot;:{&#xA;          &quot;Name&quot;: &quot;String&quot;&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Any help is highly appreciated :)</p>&#xA;",6661397,,,,2022-04-01 03:12:30,How to parse a Graphql query into a Java object,<java><graphql>,1,2,0,2022-03-25 08:13:53
71618139,1,,,0,78,"<p>I am trying to implement a complex query with filter <code>where</code> e.g.</p>&#xA;<pre><code>type Query {&#xA;  products(where: WhereInput): [Product!]!&#xA;}&#xA;&#xA;type Product {&#xA;...&#xA;}&#xA;</code></pre>&#xA;<p>Is it possible to generate the <code>WhereInput</code> dynamically based on <code>Product</code> fields rather than typing the input fields statically? i.e. instead of having to type</p>&#xA;<pre><code>type Product {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;input WhereInput {&#xA;  id: ID&#xA;  id_not: ID!&#xA;  id_in: [ID!]&#xA;  id_not_in: [ID!]&#xA;  name: String&#xA;  name_not: String&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;<p>Later, the <code>Product</code> type might change so, we do not want to change the scalar manually &quot;could be just renaming&quot;</p>&#xA;<pre><code>type Product {&#xA;  id: ID!&#xA;  title: String!  # replaced `name` with `title`&#xA;}&#xA;input WhereInput {&#xA;  ...&#xA;  title: String&#xA;  title_not: String&#xA;  ...&#xA;} &#xA;</code></pre>&#xA;<p>Thus, having an auto-generated <code>input</code> based on <code>Product</code> fields would be so helpful.</p>&#xA;",9146347,,9146347,2022-03-25 14:05:30,2022-03-25 14:05:30,Dynamically generate Input based on a type in GraphQL,<graphql><code-generation><graphql-codegen>,0,0,0,2022-03-25 13:58:33
71630349,2,,62276563,0,,"<p>I would like to show another library that uses this and expand on the last example.</p>&#xA;<p>I am using a slightly different library for graphql:&#xA;<a href=""https://github.com/Shopify/shopify-php-api/"" rel=""nofollow noreferrer"">https://github.com/Shopify/shopify-php-api/</a></p>&#xA;<p>Updating the inventory like it was posted here shows a  [statusCode:GuzzleHttp\Psr7\Response:private] =&gt; 200&#xA;So it seems to work but does not reflect in updated inventory. :(</p>&#xA;<p>Checking at /admin/products/inventory?location_id=62241177806&amp;query=F11_27781195&#xA;would not show the new inventory.&#xA;I am using the inventoryid correctly (not product or variantid).</p>&#xA;<pre><code> $inventoryItemAdjustments = array();&#xA; &#xA; $inventoryItemAdjustments[] = (object)[&#xA;   'inventoryItemId' =&gt; 'gid://shopify/InventoryItem/43151435235534',&#xA;   'availableDelta' =&gt; 500&#xA; ];&#xA; $inventoryItemAdjustments[] = (object)[&#xA;   'inventoryItemId' =&gt; 'gid://shopify/InventoryItem/43151435268302',&#xA;   'availableDelta' =&gt; 500&#xA; ];&#xA;&#xA; $variables = array(&#xA;   'locationId' =&gt; ConfigClass::$locationId,&#xA;   'inventoryItemAdjustments' =&gt; $inventoryItemAdjustments&#xA; );&#xA;&#xA;$graphqlquery='mutation inventoryBulkAdjustQuantityAtLocation($inventoryItemAdjustments: [InventoryAdjustItemInput!]!, $locationId: ID!) &#xA;    {inventoryBulkAdjustQuantityAtLocation(inventoryItemAdjustments: $inventoryItemAdjustments, locationId: $locationId) {userErrors { field message }}}';&#xA;&#xA;$response = $client-&gt;query(['query' =&gt; $graphqlquery, 'variables' =&gt; $variables]); &#xA;</code></pre>&#xA;<p>Deleting a product works (and is a good test if the library is initialized well):</p>&#xA;<pre><code>$query = &lt;&lt;&lt;QUERY&#xA;  mutation {&#xA;    productDelete(input: {id: &quot;gid://shopify/Product/6975310463182&quot;})&#xA;    {&#xA;      deletedProductId&#xA;    }&#xA;  }&#xA;QUERY;&#xA;$response = $client-&gt;query([&quot;query&quot; =&gt; $query]);&#xA;&#xA;print_r($response);&#xA;die;&#xA;</code></pre>&#xA;",18589088,,18589088,2022-03-26 20:06:31,2022-03-26 20:06:31,"",,0,0,0,2022-03-26 17:33:42
71637882,1,,,0,34,"<p>I writing a <code>graphql</code> schema which returns an object of all US states and an array of the cities per each state, for example:</p>&#xA;<pre><code>{&#xA;  records: {&#xA;    Alabama: [cities array],&#xA;    Alaska: [cities array],&#xA;    California: [cities array],&#xA;}&#xA;</code></pre>&#xA;<p>How I can configure a type in Graphql which will describe this output?</p>&#xA;<p>The best I came with was</p>&#xA;<pre><code>  type CitiesByState {&#xA;    stateName: String&#xA;    cities: [City]&#xA;  }&#xA;</code></pre>&#xA;",1850978,,,,2022-03-27 15:51:32,Graphql - schema configuration assistance - JSON object with various keys,<graphql><apollo-server>,0,0,0,2022-03-27 15:51:32
71640545,1,,,0,81,"<p>I try to type server by <code>Apollo</code> server, <code>Prisma</code> and <code>Mongodb</code>.&#xA;I got to the stage when trying to test API for mutation by <code>playground</code>.&#xA;I want to make a field with images URL but when I type mutation to the playground then got this&#xA;<a href=""https://i.stack.imgur.com/YEPnx.png"" rel=""nofollow noreferrer"">mutation and error from the playground</a>&#xA;and when I try to print args to the console I got this</p>&#xA;<pre><code>{&#xA;  name: 'test',&#xA;  imageInput: [Object: null prototype] { image: [ 'url_1', 'url_2' ] }&#xA;}&#xA;</code></pre>&#xA;<p>I already try use restructuring like {args} or {...args} but its not working.</p>&#xA;<p>Please can somebody explain to me what I do wrong? <br/>&#xA;This is my source schemas and resolver.</p>&#xA;<p>schema.graphql</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>    type Query {&#xA;    allProducts: [Product!]!&#xA;    product(id: ID!): Product&#xA;  }&#xA;&#xA;  type Mutation {&#xA;    createProduct(&#xA;      name: String&#xA;      description: String&#xA;      price: Float &#xA;      discount: Int&#xA;      pieces: Int&#xA;      imageInput: ProductImageInput!&#xA;    ): Product!&#xA;  }&#xA;&#xA;  type Product {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String!&#xA;    image: [String]&#xA;    price: Float!&#xA;    discount: Int&#xA;    pieces: Int!&#xA;  }&#xA;&#xA;  input ProductImageInput{&#xA;    image: [String]!&#xA;  }&#xA;</code></pre>&#xA;<p>schema.prisma</p>&#xA;<pre class=""lang-prisma prettyprint-override""><code>datasource db {&#xA;  provider = &quot;mongodb&quot;&#xA;  url      = env(&quot;DATABASE_URL&quot;)&#xA;}&#xA;&#xA;generator client {&#xA;  provider        = &quot;prisma-client-js&quot;&#xA;  previewFeatures = [&quot;mongoDb&quot;]&#xA;}&#xA;&#xA;model Product {&#xA;  id           String   @id @default(auto()) @map(&quot;_id&quot;) @db.ObjectId&#xA;  productImage String[]&#xA;  name         String&#xA;  description  String&#xA;  price        Float&#xA;  discount     Int&#xA;  pieces       Int&#xA;  createdAt    DateTime @default(now())&#xA;</code></pre>&#xA;<p>resolver</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const resolvers = {&#xA; Query: {&#xA;   allProducts: async (parent, args, context) =&gt; {&#xA;     return context.prisma.product.findMany()&#xA;    },&#xA;  },&#xA;  Mutation: {&#xA;    createProduct: (parent, args, context, info) =&gt; {&#xA;      console.log(args)&#xA;&#xA;    // const newProduct = context.prisma.product.create({&#xA;    //   data: {&#xA;    //     name: args.name,&#xA;    //     description: args.description,&#xA;    //     productImage: args.imageInput.image,&#xA;    //     price:args.price,&#xA;    //     discount: args.discount,&#xA;    //     pieces: args.pieces,&#xA;    //   },&#xA;    // })&#xA;    // return newProduct&#xA;  }&#xA; }&#xA;}&#xA;</code></pre>&#xA;",5180409,,5180409,2022-03-28 14:25:06,2022-07-27 17:21:26,I try get args array from the mutation. And i still get [Object: null prototype],<node.js><mongodb><graphql><apollo-server><prisma>,1,0,0,2022-03-27 21:42:05
71642828,1,,,0,13,"<p>I am trying to get pull up review comment which is pending or complete (reject also) of django.</p>&#xA;<p>I have tried with following link. but not getting enough idea.</p>&#xA;<p><a href=""https://stackoverflow.com/questions/62189200/pull-all-pull-reviews-in-github-api"">Pull all pull reviews in github api</a></p>&#xA;<p><strong>Tried below method also</strong></p>&#xA;<pre><code>query { &#xA;  search(type: ISSUE, query: &quot;repo:django type:pr -review:none&quot;, first: 100) {&#xA;    issueCount&#xA;    nodes {&#xA;      ... on PullRequest {&#xA;        number&#xA;        reviews(first: 100) {&#xA;          nodes {&#xA;            author {&#xA;              login&#xA;            }&#xA;            bodyText&#xA;            state&#xA;            createdAt&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3996232,,3996232,2022-03-30 08:50:42,2022-03-30 08:50:42,Get django pull up review comment pending and complete,<django><git><github><graphql>,0,0,0,2022-03-28 05:39:19
71673722,1,,,0,160,"<p>I can get a list of file names, the latest commit message for that file in separate queries.&#xA;However, that method is more time consuming the more files you have. Is there a way to get the file name and its commit at the same time?</p>&#xA;<p>I am stuck with right now</p>&#xA;<pre><code>{&#xA;  repository(owner: &quot;fluenthub-community&quot;, name: &quot;fluenthub&quot;) {&#xA;    filename: object(expression: &quot;main:&quot;) {&#xA;      ... on Tree {&#xA;        entries {&#xA;          name&#xA;        }&#xA;      }&#xA;      ... on Commit {&#xA;        history (path: ) {&#xA;          edges {&#xA;            node {&#xA;              &#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Once the tree is retrieved, a list of file names can be obtained, and for each file name, a commit is retrieved. However, the more files there are, the slower this method becomes. If possible, I would like to get the file name and its latest commit all at once.</p>&#xA;",16694806,,,,2022-03-30 08:09:56,How to get file name with latest commit in GitHub GraphQL API,<github><graphql><github-api>,0,0,0,2022-03-30 08:09:56
71680580,1,,,0,130,"<p>In my resolver response mapping, I would like to merge $ctx.result into $ctx.source.node, similar to what would be in javascript</p>&#xA;<pre><code>$ctx.result = Object.assign($ctx.source.node, $ctx.result)&#xA;</code></pre>&#xA;<p>How to do it here? Is this even possible?</p>&#xA;<pre><code>$util.toJson($ctx.result)&#xA;// ?&#xA;&#xA;</code></pre>&#xA;",2936347,,,,2022-03-30 16:06:37,Appsync merge two objects in resolver result mapping,<amazon-web-services><graphql><aws-appsync>,0,0,0,2022-03-30 16:06:37
71685181,1,,,0,16,"<p>I am trying to order my SQL query.</p>&#xA;<p>I am building a product search that matched a search to title or description or shortDescription or content.</p>&#xA;<p>my query is</p>&#xA;<pre><code>sprintf('%s.title LIKE :%s OR %s.description LIKE :%s OR %s.shortDescription LIKE :%s OR %s.content LIKE :%s', $alias, $valueParameter, $alias, $valueParameter, $alias, $valueParameter, $alias, $valueParameter)&#xA;</code></pre>&#xA;<p>this works for me but it orders them alphabetically or by id. I would like to order them by the best match to the search.&#xA;Title first,&#xA;description second and so on.</p>&#xA;<p>This is my query</p>&#xA;<pre><code>$queryBuilder-&gt;andWhere(sprintf('%s.title LIKE :%s OR %s.description LIKE :%s OR %s.shortDescription LIKE :%s OR %s.content LIKE :%s', $alias, $valueParameter, $alias, $valueParameter, $alias, $valueParameter, $alias, $valueParameter))-&gt;setParameter($valueParameter, '%' . $value . '%');&#xA;</code></pre>&#xA;",14530040,,,,2022-03-30 23:24:12,SQL Order By Case When Title Like with queryBuilder,<graphql><doctrine-orm><api-platform.com>,0,0,0,2022-03-30 23:24:12
71706671,2,,71499519,2,,"<p>This is expected.  The <a href=""https://docs.github.com/en/graphql/reference/objects#treeentry"" rel=""nofollow noreferrer"">TreeEntry</a> <code>object: GitObject</code> does not expose commit information.  Rather, it returns a <code>Blob</code> type (for file objects) or <code>Tree</code> type (for directory paths).   How do we know this?  The documentation for <code>object</code> (<em>&quot;Entry file object&quot;</em>) provides a vague hint, but we can be sure by introspecting the GraphQL <code>__typename</code> <a href=""https://graphql.org/learn/queries/#meta-fields"" rel=""nofollow noreferrer"">meta field</a> to get the object type name:</p>&#xA;<pre><code>metaData: object {&#xA;  __typename&#xA;}&#xA;</code></pre>&#xA;<p>For a file entry, this results in:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>&quot;metaData&quot;: {&#xA;      &quot;__typename&quot;: &quot;Blob&quot;&#xA;    }&#xA;</code></pre>&#xA;<p>Even though <code>Commit</code> also implements the <code>GitObject</code> interface, the <code>TreeEntry</code> type does not return it.  In other words, you can't get there from here.  Using this API you need a two step query, it seems.</p>&#xA;",1103511,,,,2022-04-01 12:06:15,"",,0,1,0,2022-04-01 12:06:15
71715044,1,,,0,26,"<p>I don't know why take() options not get correct number as I expect.</p>&#xA;<p>Example ,I type take:2 but it just get one product, but when I remove relations it work normal.It is so strange with me,Am I missing something?</p>&#xA;<p>My code</p>&#xA;<pre><code> async getProducts(@Arg(&quot;searchOptions&quot;) searchOptions : SearchOptionsInput): Promise&lt;ProductResponse&gt; {&#xA;    try {&#xA;      const {skip,type} = searchOptions&#xA;      &#xA;      const findOptions: { [key: string]: any } = {&#xA;        skip,&#xA;        take: 2,&#xA;        relations: [&quot;prices&quot;],&#xA;      };&#xA;      switch (type) {&#xA;        case &quot;PRICE_DESC&quot;:&#xA;          findOptions.order = {&#xA;            prices: {&#xA;              price: &quot;DESC&quot;&#xA;            }&#xA;          }&#xA;          break;&#xA;        default:&#xA;          findOptions.order = {&#xA;            createdAt:&quot;DESC&quot;&#xA;          }&#xA;          break;&#xA;      }&#xA;      const products = await Product.find(findOptions);&#xA;      return {&#xA;        code: 200,&#xA;        success: true,&#xA;        products,&#xA;      };&#xA;    } catch (error) {&#xA;      return {&#xA;        code: 500,&#xA;        success: false,&#xA;        message: `Server error:${error.message}`,&#xA;      };&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>My query</p>&#xA;<pre><code>query GetProducts{&#xA;  getProducts(searchOptions:{&#xA;    skip:0,&#xA;   type:&quot;PRICE_DESC&quot;&#xA;  }){&#xA;    code&#xA;    success&#xA;    products{&#xA;      id&#xA;      prices{&#xA;        price&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",18468956,,,,2022-04-02 05:14:49,How to use take() options with relations?,<node.js><postgresql><graphql><typeorm>,0,0,0,2022-04-02 05:14:49
71718569,1,,,0,88,"<p>I have product Schema with one to many Price. I want to get two product every query, but the code below return just one product with two price.How can i resolve this problem?</p>&#xA;<pre><code>if(type===&quot;PRICE_DESC&quot;){&#xA;        const products = await dataSource&#xA;        .createQueryBuilder(Product, &quot;product&quot;)&#xA;        .leftJoinAndSelect(&quot;product.prices&quot;, &quot;prices&quot;)&#xA;        .orderBy(&quot;prices.price&quot;, &quot;DESC&quot;)&#xA;        .take(2)&#xA;        .getMany()&#xA;      }&#xA;</code></pre>&#xA;<p>this is my query schema</p>&#xA;<pre><code>query GetProducts{&#xA;  getProducts(searchOptions:{&#xA;    skip:0,&#xA;   type:&quot;PRICE_DESC&quot;&#xA;  }){&#xA;    code&#xA;    success&#xA;    products{&#xA;      id&#xA;      productName&#xA;     prices{&#xA;      price&#xA;    }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",18468956,,,,2022-04-02 14:52:06,How to pagination with one to many relations?,<postgresql><graphql><typeorm>,0,0,0,2022-04-02 14:52:06
71728041,1,,,0,25,"<p>With a schema like</p>&#xA;<pre><code>schema {&#xA;  query: QueryRoot&#xA;}&#xA;&#xA;scalar MyBigUint&#xA;&#xA;type Order {&#xA;  id: Int!&#xA;  data: OrderCommons!&#xA;  kind: OrderType!&#xA;}&#xA;&#xA;type OrderBook {&#xA;  bids(limit: Int): [Order!]!&#xA;  asks(limit: Int): [Order!]!&#xA;}&#xA;&#xA;type OrderCommons {&#xA;  quantity: Int!&#xA;  price: MyBigUint! // where it doesn't matter whether it's MyBigUint or a simple Int - the issue occurs anyways&#xA;}&#xA;&#xA;enum OrderType {&#xA;  BUY&#xA;  SELL&#xA;}&#xA;&#xA;type QueryRoot {&#xA;  orderbook: OrderBook!&#xA;}&#xA;</code></pre>&#xA;<p>And a query <code>query { orderbook { bids { data { price } }, asks { data { price } } } }</code></p>&#xA;<p>In a graphql playground of my graphql API (and on the network level of my Apollo app too) I receive a result like</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;orderbook&quot;: {&#xA;      &quot;bids&quot;: [&#xA;        {&#xA;          &quot;data&quot;: {&#xA;            &quot;price&quot;: &quot;127&quot;&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;data&quot;: {&#xA;            &quot;price&quot;: &quot;74&quot;&#xA;          }&#xA;        },&#xA;        ...&#xA;      ],&#xA;      &quot;asks&quot;: [&#xA;        {&#xA;          &quot;data&quot;: {&#xA;            &quot;price&quot;: &quot;181&quot;&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;data&quot;: {&#xA;            &quot;price&quot;: &quot;187&quot;&#xA;          }&#xA;        },&#xA;        ...&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>where, for the purpose of this question, the bids are ordered in descending order by price like [&quot;127&quot;, &quot;74&quot;, &quot;73&quot;, &quot;72&quot;], etc, and asks are ordered in ascending order, accordingly.</p>&#xA;<p>However, in Apollo, after a query is done, I notice that one of the arrays gets seemingly random data.</p>&#xA;<p>For the purpose of the question, useQuery react hook is used, but the same happens when I query imperatively from a freshly initialized <code>ApolloClient</code>.</p>&#xA;<pre><code>  const { data, subscribeToMore, ...rest } = useQuery&lt;OrderbookResponse&gt;(GET_ORDERBOOK_QUERY);&#xA;  console.log(data?.orderbook?.bids?.map(r =&gt; r.data.price));&#xA;  console.log(data?.orderbook?.asks?.map(r =&gt; r.data.price));&#xA;</code></pre>&#xA;<p>Here, corrupted data of Bids gets printed i.e. <code>['304', '306', '298', '309', '277', '153', '117', '108', '87', '76']</code> (notice the order being wrong, at the least), whereas Asks data looks just fine. Inspecting the network, I find that Bids are not only properly ordered there, but also have different (correct, from DB) values!</p>&#xA;<p>Therefore, it seems something's getting corrupted on the way while Apollo delivers the data.</p>&#xA;<p>What could be the issue here I wonder, and where to start debugging such kind of an issue? There seem to be no warnings from Apollo either, it seems to just silently corrupt the data.</p>&#xA;<p>I'm clearly doing something wrong, but what?</p>&#xA;",2123547,,,,2022-04-03 16:53:24,Apollo mixes two different arrays of the same query seemingly at random,<graphql><apollo-client><react-apollo>,1,0,0,2022-04-03 16:53:24
71749258,1,,,2,713,"<p>I would like to know is there any way to fetch and update a checkout using Shopify Storefront GraphQL?</p>&#xA;<p><strong>Note that:</strong> the checkout is created by the user using normal web flow on the storefront. It means the checkout is not created by GraphQL.</p>&#xA;<p>Let's consider this scenario:</p>&#xA;<ul>&#xA;<li>The user visits the website and makes a checkout</li>&#xA;<li>The user abandoned the checkout.</li>&#xA;</ul>&#xA;<p>From Shopify admin I can get the abandoned checkout URL: <code>https: //mysite.com/1111111/checkouts/foo/recover?key=bar</code>&#xA;Based on this URL I make a GraphQL request by using Shopify js-buy-sdk:</p>&#xA;<pre><code>const client = ShopifyBuy.buildClient({&#xA;     domain: 'mysite.myshopify.com',&#xA;     storefrontAccessToken: 'xxxxxx'&#xA;});&#xA;&#xA;// I tried both base64 and raw string version&#xA;const checkoutId=`gid://shopify/Checkout/foo?key=bar`&#xA;&#xA;client.checkout.fetch(checkoutId).then((checkout) =&gt; {&#xA;     console.log('checkout', checkout);&#xA;})&#xA;</code></pre>&#xA;<p>The server response <code>null</code>.</p>&#xA;<p>Any help would be greatly appreciated. Many thanks!</p>&#xA;",4254681,,,,2022-04-05 09:26:25,Get and update checkout by Shopify Storefront GraphQL,<graphql><shopify><shopify-app><shopify-api>,0,0,0,2022-04-05 09:26:25
71750484,2,,71750184,0,,"<p>Outside the scope of the question, you should replace your <code>map</code> loop for a <code>forEach</code> loop:</p>&#xA;<pre><code>  allArticles.data.allNodeArticle.nodes.forEach((node) =&gt; {&#xA;    createPage({&#xA;      path: node?.path?.alias,&#xA;      component: path.join(__dirname, '/src/Components/Articledetails.js'),&#xA;      context: {&#xA;        id: node.drupal_internal__nid,&#xA;      }&#xA;    })&#xA;  });&#xA;</code></pre>&#xA;<p>Double-check that <code>path</code> and <code>alias</code> are fulfilled in all article references.</p>&#xA;<p>Regarding your main issue (<code>ERROR path is not defined ReferenceError: path is not defined - gatsby-node.js:28</code>), is because, to use <code>path</code>, you need first to import it as a module:</p>&#xA;<pre><code>const path = require(`path`);&#xA;</code></pre>&#xA;<p>This will allow you to do <code>path.join</code>.</p>&#xA;",5585371,,5585371,2022-04-05 17:28:31,2022-04-05 17:28:31,"",,0,0,0,2022-04-05 10:50:53
71754004,2,,71753824,0,,"<p>Figured it out, pass the enum key as all caps symbol, so in this case <code>:A</code>.</p>&#xA;",16410169,,,,2022-04-05 14:57:07,"",,0,0,0,2022-04-05 14:57:07
71769551,2,,71549677,1,,"<p>According to Contentful documentation, filtering on link collections is not possible <a href=""https://www.contentful.com/developers/docs/references/graphql/#/reference/collection-filters/limitations"" rel=""nofollow noreferrer"">https://www.contentful.com/developers/docs/references/graphql/#/reference/collection-filters/limitations</a></p>&#xA;<blockquote>&#xA;<p>It is not possible to filter on fields of Type Array, Object, or RichText. There's an exemption in the case of the ContentfulMetadata type</p>&#xA;</blockquote>&#xA;",6323443,,,,2022-04-06 15:27:27,"",,0,0,0,2022-04-06 15:27:27
71774229,2,,71738104,2,,"<p>You shouldn't have curly brackets after <code>gql</code>, see below:</p>&#xA;<pre><code>const CONFIRM_CITA = gql`&#xA;    mutation changeConfirmationStatus ($centroConfirmacion: String!, $estadoConfirmacion: String!, $id: String!) {&#xA;      changeConfirmationStatus(centroConfirmacion: $centroConfirmacion, estadoConfirmacion: $estadoConfirmacion, id: $id) {&#xA;        id,&#xA;        estadoConfirmacion&#xA;      }&#xA;    }&#xA;`&#xA;</code></pre>&#xA;",1759693,,,,2022-04-06 22:19:14,"",,0,0,0,2022-04-06 22:19:14
71774539,1,,,0,26,<p>I am trying to create a 1000 node graph with 3 edges for each node (preferably randomly). Is there a way to do this easliy in dgraph?</p>&#xA;,16818354,,,,2022-04-06 23:03:41,How to make 1000 nodes in dgraph at once,<graphql><dgraph>,0,0,0,2022-04-06 23:03:41
71776598,2,,71776043,2,,"<p>First of all, your <code>map</code> loop won't work because you are not returning anything. Change it to:</p>&#xA;<pre><code>{&#xA;  infoboxItems.map((item, index) =&gt; {&#xA;    return &lt;li key={index}&gt;{item.fullName}&lt;/li&gt;;&#xA;  });&#xA;}&#xA;</code></pre>&#xA;<p>Regarding your question, you can simply use the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys"" rel=""nofollow noreferrer""><code>Object.keys</code></a> or <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values"" rel=""nofollow noreferrer""><code>Object.values</code></a> methods to get an array of keys/values from an object (<code>infobox</code>) to loop without knowing them beforehand, so without accessing each position specifically:</p>&#xA;<pre><code>Object.keys(article.frontmatter.infobox).forEach((key, index)) =&gt; {&#xA;  console.log(`${key}: ${article.frontmatter.infobox[key]}`);&#xA;}&#xA;</code></pre>&#xA;<p>Applied to your JSX, something like:</p>&#xA;<pre><code>{&#xA;  Object.keys(article.frontmatter.infobox).map((key) =&gt; {&#xA;    return &lt;li key={key}&gt;{article.frontmatter.infobox[key]}&lt;/li&gt;;&#xA;  });&#xA;}&#xA;</code></pre>&#xA;<p>Note the change of <code>forEach</code> instead of <code>map</code> loop.</p>&#xA;",5585371,,5585371,2022-04-07 09:29:38,2022-04-07 09:29:38,"",,0,0,0,2022-04-07 05:05:11
71777642,2,,71777351,2,,"<p>Curly braces are used for Object destructuring</p>&#xA;<p>In the link below syntax for object destructing is explained</p>&#xA;<p><a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#object_destructuring"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#object_destructuring</a></p>&#xA;<p>So when you do</p>&#xA;<pre><code>    const  {edge}  = props.data.allNodeArticle;&#xA;</code></pre>&#xA;<p>this means that the object <strong>allNodeArticle</strong> has a key named <strong>edge</strong> and you are accessing it</p>&#xA;<p>But when you do the followinng and error goes it means allNodeArticle is not an object having  a key  edge instead it has array nodes  it.</p>&#xA;<pre><code>const  edge  = props.data.allNodeArticle;&#xA;console.log(edge.nodes[0].title);&#xA;</code></pre>&#xA;",6908676,,,,2022-04-07 06:59:46,"",,0,0,0,2022-04-07 06:59:46
71785591,1,,,0,48,"<p>Hello this is first time form me in graphql, i have a project react and i have to call this api&#xA;, attach screen for this. I want know how can pass input json in dynamic mode, i mean, for example for phone field, i want make it dynamic in case i want 1 or more object in array.&#xA;I'm using a simple fetch, no using apollo or other clients&#xA;Thank you to all<a href=""https://i.stack.imgur.com/fMByd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fMByd.png"" alt=""enter image description here"" /></a></p>&#xA;",10431556,,,,2022-04-07 16:12:53,Graphql dynamic queries,<reactjs><graphql>,0,0,0,2022-04-07 16:12:53
71788358,2,,71513341,0,,"<p>JSON string means providing a JSON text converted to a string. This can be achieved by escaping quotation marks within the JSON.</p>&#xA;<p>For example, this JSON</p>&#xA;<pre><code>{ &quot;text&quot;: &quot;some text&quot; }&#xA;</code></pre>&#xA;<p>can be converted to String as below:</p>&#xA;<pre><code>&quot;{\&quot;text\&quot;:\&quot;sometext\&quot;}&quot;&#xA;</code></pre>&#xA;<p>As you notice that the text encapsulated inside quotation marks, to be a valid String.</p>&#xA;<p>You can use <a href=""https://jsontostring.com/"" rel=""nofollow noreferrer"">https://jsontostring.com/</a> for the conversion</p>&#xA;<p>Your final code should be like this:</p>&#xA;<pre><code>mutation {&#xA;  productCreate(&#xA;    input: {&#xA;      category: &quot;Q2F0ZWdvcnk6MQ==&quot; # Category ID&#xA;      name: &quot;Delete Me!&quot; # Product name&#xA;      productType: &quot;UHJvZHVjdFR5cGU6MQ==&quot; # Product Type ID&#xA;      chargeTaxes: true&#xA;      weight: &quot;0.3&quot; # in Kg&#xA;      rating: 5&#xA;      description: &quot;{\&quot;text\&quot;:\&quot;sometext\&quot;}&quot; # nope&#xA;    }&#xA;  ){&#xA;    product{&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",7365559,,,,2022-04-07 20:10:26,"",,0,0,0,2022-04-07 20:10:26
71806718,1,,,0,346,"<p>I have a schema like below.</p>&#xA;<pre><code>type Board {&#xA;    id: ID,&#xA;    title: String,&#xA;    content: String,&#xA;    replies: [Replies]&#xA;}&#xA;&#xA;type Replies {&#xA;    id: ID,&#xA;    content: String&#xA;}&#xA;</code></pre>&#xA;<p>Then, while searching for the board, there are replies related to the board.</p>&#xA;<p>Here you can get the board and replies by querying like this:</p>&#xA;<pre><code>query{&#xA;    getBoard(id: &quot;xxx&quot;) {&#xA;        id,&#xA;        title,&#xA;        content: String,&#xA;        replies {&#xA;            id,&#xA;            content&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>but what i want&#xA;How to implement in backend java without using directive to get the last 5 replies when retrieving the selected board and replies inside?</p>&#xA;<p>I'm developing via <a href=""https://github.com/graphql-java-kickstart"" rel=""nofollow noreferrer"">https://github.com/graphql-java-kickstart</a>.</p>&#xA;<pre><code>query{&#xA;    getBoard(id: &quot; xxx&quot;) {&#xA;        id,&#xA;        title,&#xA;        content: String,&#xA;        replies(limit: 5) {&#xA;            id,&#xA;            content&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",18753656,,,,2022-04-09 09:55:40,GraphQL-java with Spring boot query request inside query,<java><spring-boot><graphql-java>,1,0,0,2022-04-09 09:18:04
71821754,1,,,0,193,"<p>As you can see below I fetch the GET_CART query when I completed the addTOCart mutation, it will have the product inside it, but not able to get cart with query and  providing the wooCommerce Session JWT token and the authentication token in the HTTP headers.</p>&#xA;<p>What I expect: Therefore what I expect should be, initial it will be a blank cart(subtotal 0.00) , then when successful mutation, it will have the product inside it.&#xA;End Result: But end up, everytime the GET_CART query will return the blank cart even the addToCart mutation is successful.</p>&#xA;<p>I have a mutation to Add to cart like this:</p>&#xA;<pre><code> mutation ($input: AddToCartInput!) {&#xA;        addToCart(input: $input) {&#xA;          cartItem {&#xA;            key&#xA;            product {&#xA;              id&#xA;            }&#xA;            variation {&#xA;              id&#xA;              variationId&#xA;              name&#xA;            }&#xA;            quantity&#xA;            total&#xA;            subtotal&#xA;            subtotalTax&#xA;          }&#xA;        }&#xA;      }&#xA;</code></pre>&#xA;<p>Add To Cart Input Variable:</p>&#xA;<pre><code>{&#xA;        &quot;clientMutationId&quot;:&quot;myid&quot;,&#xA;        &quot;productId&quot;: 11745,&#xA;        &quot;quantity&quot;: 1&#xA;        &#xA;    } &#xA;</code></pre>&#xA;<p>This is Get Cart query:</p>&#xA;<pre><code>  query GetCart {&#xA;        cart {&#xA;          contents {&#xA;            nodes {&#xA;              key&#xA;              product {&#xA;                id&#xA;                productId&#xA;                name&#xA;                description&#xA;              }&#xA;              variation {&#xA;                id&#xA;                variationId&#xA;                name&#xA;                description&#xA;              } &#xA;              quantity&#xA;              total&#xA;              subtotal&#xA;              subtotalTax&#xA;            }&#xA;          }&#xA;        &#xA;          subtotal&#xA;          subtotalTax&#xA;        }&#xA;      }&#xA;</code></pre>&#xA;<p>Postman response:</p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;        &quot;cart&quot;: {&#xA;            &quot;chosenShippingMethod&quot;: null,&#xA;            &quot;shippingTotal&quot;: &quot;₹0.00&quot;,&#xA;            &quot;subtotal&quot;: &quot;₹0.00&quot;,&#xA;            &quot;subtotalTax&quot;: &quot;₹0.00&quot;,&#xA;            &quot;total&quot;: &quot;₹0.00&quot;,&#xA;            &quot;totalTax&quot;: &quot;₹0.00&quot;&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;",18240995,,,,2022-04-11 01:10:45,WooCommerce Get Cart query always return blank result with GraphQL,<wordpress><api><woocommerce><graphql>,0,0,0,2022-04-11 01:10:45
71823641,2,,71820578,1,,"<p>Please see the <a href=""https://redis.io/commands/lrem/"" rel=""nofollow noreferrer"">LREM</a> docs.</p>&#xA;<pre><code> LREM key count element &#xA;</code></pre>&#xA;<p>The <code>element</code> argument has to have an exact match, so you can't match by ID.</p>&#xA;<p>You might want to consider using the <a href=""https://redis.io/docs/stack/json/"" rel=""nofollow noreferrer"">RedisJSON</a> using the <a href=""https://redis.io/commands/json.del/"" rel=""nofollow noreferrer"">JSON.DEL</a> you should be easily achieve what you're looking for.</p>&#xA;",593425,,,,2022-04-11 06:45:27,"",,0,0,0,2022-04-11 06:45:27
71861144,2,,71835575,0,,<p>I figured it out - I needed to add an <code>errors</code> property (of type Array) to <code>value</code> and then call <code>observer.next</code> with <code>value</code> instead of calling <code>observer.error</code> with an Error.</p>&#xA;,4299973,,,,2022-04-13 16:50:54,"",,0,0,0,2022-04-13 16:50:54
71863625,2,,70790848,0,,<p>It's probably an issue with your graphql file. Most likely you defined an input as a type. You should post the contents of your graphql files if you need more insight.</p>&#xA;,1907554,,,,2022-04-13 20:41:19,"",,0,0,0,2022-04-13 20:41:19
71892504,1,,,1,880,"<p>I thought with getServerSideProps,data will updating whenever page is reload.But in this case , it doesn't.</p>&#xA;<p>In my case, if admin enter this page, it will display a button to edit product.</p>&#xA;<pre><code>const productDetail: NextPage&lt;Props&gt; = ({ product }) =&gt; {&#xA;  //if admin enter this page&#xA;   &lt;AdminCreateOrEditPrice product={product}/&gt;&#xA;&#xA;  //if user enter this page&#xA;  //display product's data&#xA;}&#xA;&#xA;export const getServerSideProps: GetServerSideProps = async ({ query }) =&gt; {&#xA;  const { data, error, loading } = await client.query&lt;GetProductQuery&gt;({&#xA;    query: GetProductDocument,&#xA;    variables: { productId: query.productId },&#xA;  });&#xA;  return {&#xA;    props: {&#xA;      product: data.getProduct.product,&#xA;    },&#xA;  };&#xA;};&#xA;</code></pre>&#xA;<p>EditProductData component have a mutation to edit product data.</p>&#xA;<pre><code>const AdminCreateOrEditPrice= ({product}) =&gt;{&#xA; const [adminCreateOrEditPrice] = useAdminCreateOrEditPrice();&#xA;&#xA; const res = await adminCreateOrEditPrice({&#xA;        variables: {&#xA;          ...&#xA;        },&#xA;      });&#xA;      if (res.data?)&#xA;        alert(JSON.stringify(res.data));&#xA;   }&#xA; return(&#xA;   &lt;&gt;&#xA;    //...&#xA;   &lt;/&gt;&#xA;)&#xA;}&#xA;</code></pre>&#xA;<p>data was update in database, i can see it through alert(),but not at client although I reload page,until I restart Nextjs server,then it update.&#xA;What is error in my case and how can it fix it?</p>&#xA;<p>Edit:&#xA;I use codegen to generate hook</p>&#xA;<pre><code> @Mutation((_return) =&gt; PriceResponse)&#xA;  @UseMiddleware(checkAdmin)&#xA;  async adminCreateOrEditPrice(&#xA;    @Arg(&quot;priceInput&quot;) priceInput: PriceInput,&#xA;    @Arg(&quot;priceId&quot;) priceId: number,&#xA;    @Arg(&quot;productId&quot;) productId: number&#xA;  ): Promise&lt;PriceResponse&gt; {&#xA;    return await dataSource.transaction(async (transactionEntityManager) =&gt; {&#xA;      const productExisting = await transactionEntityManager.findOne(Product, {&#xA;        where: {&#xA;          id: productId,&#xA;        },&#xA;      });&#xA;      if (!productExisting)&#xA;        return {&#xA;          code: 400,&#xA;          success: false,&#xA;          message: &quot;Product not found&quot;,&#xA;        };&#xA;      const priceExisting = await transactionEntityManager.findOne(Price, {&#xA;        where: {&#xA;          id: priceId,&#xA;        },&#xA;      });&#xA;      if (priceExisting) {&#xA;        if (productExisting.priceToDisplay === priceExisting.price) {&#xA;          productExisting.priceToDisplay = priceInput.price;&#xA;          await transactionEntityManager.save(productExisting);&#xA;        }&#xA;&#xA;        (priceExisting.type = priceInput.type),&#xA;          (priceExisting.status = priceInput.status),&#xA;          (priceExisting.price = priceInput.price);&#xA;        await transactionEntityManager.save(priceExisting);&#xA;&#xA;        return {&#xA;          code: 200,&#xA;          success: true,&#xA;          message: &quot;Edit price successfully!&quot;,&#xA;          price: priceExisting,&#xA;        };&#xA;      } else {&#xA;        const newPrice = Price.create({&#xA;          type: priceInput.type,&#xA;          status: priceInput.status,&#xA;          price: priceInput.price,&#xA;          product: productExisting,&#xA;        });&#xA;        await transactionEntityManager.save(newPrice);&#xA;        return {&#xA;          code: 200,&#xA;          success: true,&#xA;          message: &quot;Create new price successfully!&quot;,&#xA;          price: newPrice,&#xA;        };&#xA;      }&#xA;    });&#xA;  }&#xA;</code></pre>&#xA;<p>And this is schema to codegen gerenated.</p>&#xA;<pre><code>mutation AdminCreateOrEditPrice($priceInput:PriceInput!,$priceId:Float!,$productId:Float!){&#xA;    adminCreateOrEditPrice(priceInput:$priceInput,priceId:$priceId,productId:$productId){&#xA;        code&#xA;        success&#xA;        message&#xA;        price{&#xA;            id&#xA;            type&#xA;            status&#xA;            price&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>It work well, i can get value return from server.</p>&#xA;",18468956,,18468956,2022-04-16 13:41:06,2022-04-18 05:43:06,value from getServerSideProps not updating until Nextjs server restart,<graphql><next.js>,1,8,0,2022-04-16 08:55:32
71927673,1,,,0,294,"<p>On the frontend I have a Cart, it has buttons to call a GraphQL mutation to increase or decrease the quantity of a product. The mutation worked as expected, except for one thing is that the quantity number on the frontend doesn't change until I reload the page. I know the problem is at the cache and I need to somehow update the cache when I click the button and call the mutation.</p>&#xA;<p>On the backend I use TypeGraphQL together with TypeORM, on the frontend I use urql, with @urql/exchange-graphcache to configure caching. Here is my attempt on updating the cache:</p>&#xA;<pre><code>const client = createClient({&#xA;  url: &quot;http://localhost:4000/graphql&quot;,&#xA;  fetchOptions: {&#xA;    credentials: &quot;include&quot; as const,&#xA;  },&#xA;  exchanges: [&#xA;    dedupExchange,&#xA;    cacheExchange({&#xA;      updates: {&#xA;        Mutation: {&#xA;          qtyCart: (_result, args, cache, info) =&gt; {&#xA;            const { productId, type } = args as QtyCartMutationVariables;&#xA;            const data = cache.readFragment(&#xA;              gql`&#xA;                fragment _ on Cart {&#xA;                  productId&#xA;                  userId&#xA;                  qty&#xA;                }&#xA;              `,&#xA;              { productId }&#xA;            );&#xA;            if (data) {&#xA;              let newQty = 0;&#xA;              if (type === &quot;inc&quot;) {&#xA;                newQty = (data.qty as number) + 1;&#xA;              } else if (type === &quot;dec&quot;) {&#xA;                newQty = (data.qty as number) - 1;&#xA;              }&#xA;&#xA;              cache.writeFragment(&#xA;                gql`&#xA;                  fragment __ on Cart {&#xA;                    qty&#xA;                  }&#xA;                `,&#xA;                { productId, qty: newQty }&#xA;              );&#xA;            }&#xA;          },&#xA;        },&#xA;      },&#xA;    }),&#xA;    fetchExchange,&#xA;  ],&#xA;});&#xA;</code></pre>&#xA;<p>Also here are the mutation and the Cart entity:</p>&#xA;<ul>&#xA;<li><p>Mutation handle quantity update:</p>&#xA;<pre><code>@Mutation(() =&gt; Cart)&#xA;async qtyCart(&#xA;  @Arg(&quot;productId&quot;, () =&gt; Int) productId: number,&#xA;  @Arg(&quot;type&quot;) type: &quot;inc&quot; | &quot;dec&quot;,&#xA;  @Ctx() { req }: MyContext&#xA;): Promise&lt;Cart | null&gt; {&#xA;  const userId = req.session.userId;&#xA;&#xA;  if (!userId) {&#xA;    return null;&#xA;  }&#xA;&#xA;  const cart = await Cart.findOne({ where: { userId, productId } });&#xA;&#xA;  if (!cart) {&#xA;    return null;&#xA;  }&#xA;&#xA;  const product = await Product.findOne({ where: { id: productId } });&#xA;  const stock = product!.countInStock;&#xA;&#xA;  if (type === &quot;inc&quot; &amp;&amp; cart.qty &lt; stock) {&#xA;    await Cart.update({ userId, productId }, { qty: cart.qty + 1 });&#xA;  } else if (type === &quot;dec&quot; &amp;&amp; cart.qty &gt; 1) {&#xA;    await Cart.update({ userId, productId }, { qty: cart.qty - 1 });&#xA;  }&#xA;&#xA;  return cart;&#xA;}&#xA;</code></pre>&#xA;</li>&#xA;<li><p>Cart entity:</p>&#xA;</li>&#xA;</ul>&#xA;<pre><code>    @ObjectType()&#xA;    @Entity()&#xA;    export class Cart extends BaseEntity {&#xA;      @Field()&#xA;      @PrimaryColumn()&#xA;      userId!: number;&#xA;    &#xA;      @Field(() =&gt; User)&#xA;      @ManyToOne(() =&gt; User, (user) =&gt; user.items)&#xA;      user: User;&#xA;    &#xA;      @Field()&#xA;      @PrimaryColumn()&#xA;      productId!: number;&#xA;    &#xA;      @Field(() =&gt; Product)&#xA;      @ManyToOne(() =&gt; Product, (product) =&gt; product.cart)&#xA;      product: Product;&#xA;    &#xA;      @Field(() =&gt; Int)&#xA;      @Column()&#xA;      qty!: number;&#xA;    }&#xA;</code></pre>&#xA;<p>On my attempt I do spot an error which is mentioned on urql/graphcache documentation, which is the <a href=""https://formidable.com/open-source/urql/docs/graphcache/errors/#15-invalid-key"" rel=""nofollow noreferrer"">invalid key error</a>. Then I tried to figure out how to <a href=""https://formidable.com/open-source/urql/docs/graphcache/normalized-caching/#custom-keys-and-non-keyable-entities"" rel=""nofollow noreferrer"">create a custom <code>keys</code> config</a>, but still don't know how to do it right, since my Cart entity has a composite primary key, which the documentation doesn't mention.</p>&#xA;<p>Thanks in advance for the help. If you need further details then I am pleased to provide.</p>&#xA;",16937173,,16937173,2022-04-25 12:29:16,2022-04-25 12:29:16,How to configure custom key for data that has composite primary key in @urql/exchange-graphcache cacheExchange,<typescript><graphql><typeorm><typegraphql><urql>,0,0,0,2022-04-19 15:41:52
71938904,1,71941298,,2,784,"<h2>Hello. I can't figure out how to create multiple levels of nested queries with @ResolveFiled. I hope for your help. </h2>&#xA;<p>What I'm doing and Context:</p>&#xA;<p>I have a product. The product has a supplier. A vendor-specific product contains product variants. Variants contain options.</p>&#xA;<p>I need to make a request in 4 levels:</p>&#xA;<ol>&#xA;<li>Product</li>&#xA;<li>ProductHasProvider</li>&#xA;<li>Product Variants</li>&#xA;<li>Variant Options</li>&#xA;</ol>&#xA;<p>I use the &quot;Code First&quot; approach, created an ObjectType for each entity. Next, I create a &quot;Product&quot; resolver.</p>&#xA;<p>Creating a second level &quot;ProductHasProvider&quot; with @ResolveField</p>&#xA;<p>When adding a ResolveField (&quot;Providers&quot;) - it appears inside the main resolver &quot;Product&quot; and resolves the Providers ObjectType. Okay, it works, I can make requests at the 2nd level correctly.</p>&#xA;<pre><code>&#xA; @ResolveField('Providers', () =&gt; [ProductHasProvider])&#xA;            async getProductProviders (@Parent() product: Product) {&#xA;                const { id } = product;&#xA;                return await this.productListService.ProductsProviders( { id });&#xA;                }&#xA;</code></pre>&#xA;<ol start=""2"">&#xA;<li>I want to make third level where ProductHasProvider has Variants. I decorate ProductHasProvider as the parent.</li>&#xA;</ol>&#xA;<pre><code>@ResolveField(('variants'), type =&gt; [Variant])&#xA;            async getVariants (@Parent() productHasProvider: ProductHasProvider) {&#xA;                const { id } = productHasProvider;&#xA;                return await this.productListService.getVariants({ id });&#xA;            }&#xA;&#xA;&#xA;</code></pre>&#xA;<p>In this case, this ResolveField defines the ObjectType for [Variants], but for some reason at the first level. That is, in Apollo studio, the field is displayed in &quot;Product&quot;. I can't query Variants for ProductHasProvider.</p>&#xA;<pre><code>&#xA;    query Products {&#xA;      getProducts {&#xA;        Providers {&#xA;          id&#xA;        }&#xA;        variants {&#xA;          id&#xA;          options {&#xA;            id&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;&#xA;</code></pre>&#xA;<p>Expected behavior:</p>&#xA;<p>I add a new @ResolveField(() =&gt; [Variants]) with &quot;ProductHasProvider&quot; parent (Which is already @ResorveField for Product). And I can do 3rd and 4th level queries.</p>&#xA;<pre><code>&#xA;    query Products {&#xA;  getProducts {&#xA;    id&#xA;    Providers {&#xA;      id&#xA;      variants {&#xA;        id&#xA;        options {&#xA;          id&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>Please tell me what I'm doing wrong and how to achieve what I want. Thank you.</p>&#xA;",14667877,,,,2022-04-20 14:16:16,How to create multilevel nested queries in nestjs/graphql using @ResolveField?,<node.js><graphql><nestjs><graphql-js>,1,0,0,2022-04-20 11:33:23
71939855,1,,,1,1473,"<p>I want to fetch all variants of a product suing shopify graphql api, but it seems like we have to define the number of variants or any other thing we want by using <code>first</code> argument after the query. I want to get all variants of the product instead of defining a number of variants, how can this be possible?</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const myproducts = await axios({&#xA;        url: `https://${req.session.shop}/admin/api/2022-01/graphql.json`,&#xA;        method: 'post',&#xA;        headers: {&#xA;          &quot;X-Shopify-Access-Token&quot;: req.session.token,&#xA;        },&#xA;        data: {&#xA;            query: `&#xA;                {&#xA;                  product(id: &quot;gid://shopify/Product/6829796196490&quot;) {&#xA;                    title&#xA;                    variants(first: 5) {&#xA;                      edges {&#xA;                        cursor&#xA;                        node {&#xA;                          selectedOptions {&#xA;                            name&#xA;                            value&#xA;                          }&#xA;                          media(first: 5) {&#xA;                            edges {&#xA;                              node {&#xA;                                alt&#xA;                                mediaContentType&#xA;                                status&#xA;                                __typename&#xA;                                ... on MediaImage {&#xA;                                  id&#xA;                                  preview {&#xA;                                    image {&#xA;                                      originalSrc&#xA;                                    }&#xA;                                  }&#xA;                                  __typename&#xA;                                }&#xA;                              }&#xA;                            }&#xA;                          }&#xA;                        }&#xA;                      }&#xA;&#xA;                      pageInfo {&#xA;                        hasNextPage&#xA;                        &#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;            `,&#xA;        }&#xA;&#xA;    });&#xA;</code></pre>&#xA;",18790755,,,,2022-04-20 19:38:07,How to fetch all variants of a product from shopify graphql api?,<node.js><graphql><shopify>,1,0,0,2022-04-20 12:42:02
71940566,1,,,0,56,<p>I have a query that contains all users.</p>&#xA;<pre><code>query{&#xA;    Users:[User]&#xA;}&#xA;</code></pre>&#xA;<p>I've made the resolver for the <code>favoriteColors</code> and then <code>similar</code> as a child of the <code>favoriteColors</code>. I would like to be able to filter the Users from the <code>similar</code> argument <code>hex</code>.&#xA;So that if I query Users like this:</p>&#xA;<pre><code>query Users($filterColor: String){&#xA;    users{&#xA;        id&#xA;        favoriteColors{&#xA;            similar(hex: $filterColor){&#xA;                hex&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Then in the resovler for <code>similar</code> would I then be able to filter the result of the users so only the users with a certain <code>similar hex</code> color would show up?</p>&#xA;<pre><code>type User{&#xA;    id:ID&#xA;    firstname:String&#xA;    email:String&#xA;    favoriteColors:[Color]&#xA;}&#xA;type Color{&#xA;    id:ID&#xA;    hex:String&#xA;    name:String&#xA;    similar(hex:String):[Color]&#xA;}&#xA;</code></pre>&#xA;<p>I was thinking something like parent.parent but it seems like it returns the root users list before reaching the <code>similar</code> child. I am only able to access the parent of a resolver.</p>&#xA;,14787550,,14787550,2022-04-21 06:46:46,2022-04-21 06:46:46,Can a graphql resolver change the data of another resolver if it is double nested in nodejs?,<graphql><apollo><graphql-js>,0,0,0,2022-04-20 13:28:17
71945323,2,,71939855,1,,"<p>A product can't have more than 100 variants, that is a set limit by Shopify.</p>&#xA;<p>So in order to get ALL variants you just have to say <code>first: 100</code> as long as your request cost doesn't exceed the allowed bucket cost for the query you will get them.</p>&#xA;<p>As for what you are asking, there is no way to get all variants without using <code>first</code> or <code>last</code>, this is a requirement when you are trying to get an array of edges.</p>&#xA;",2329464,,,,2022-04-20 19:38:07,"",,0,6,0,2022-04-20 19:38:07
71945475,2,,71944145,0,,"<p>You can generate a string for each element of the array containing the query, then we need to concatenate all the string into one. I used reduce() for that. Then the result is assigned to the <code>query</code> element. Note that DataWeave doesn't support GraphQL at this time.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>%dw 2.0&#xA;output application/json&#xA;---&#xA;{&#xA;    query: payload map (&#xA;            &quot;{key&quot; ++ ($$+1) ++ &quot;:mutation(number:\&quot;&quot; ++ $ ++ &quot;\&quot;){ number }&quot; )reduce ($$ ++ $)&#xA;}&#xA;</code></pre>&#xA;<p>Output:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;query&quot;: &quot;{key1:mutation(number:\&quot;1234\&quot;){ number }{key2:mutation(number:\&quot;5678\&quot;){ number }&quot;&#xA;}&#xA;</code></pre>&#xA;",721855,,,,2022-04-20 19:54:28,"",,0,0,0,2022-04-20 19:54:28
71945834,1,,,0,48,"<p>The <a href=""https://docs.github.com/en/graphql/reference/objects#repository"" rel=""nofollow noreferrer"">GitHub GraphQL API documentation for the Repository object</a> shows an <code>isLocked</code> field, which it describes with, &quot;Indicates if the repository has been locked or not.&quot;</p>&#xA;<p>I can't find a reference in the GitHub documentation to &quot;locking&quot; a repository. How does a repository end up in a &quot;locked&quot; state? I do notice that isLocked is true if the repository has been transferred to a different organization, but I need to know if that is the only case, or if there are other scenarios that result in a locked repository.</p>&#xA;<p>Thanks!</p>&#xA;",1521635,,,,2022-09-26 19:30:04,What does 'isLocked' field in the Repository object refer to in GraphQL API?,<github><github-api><github-graphql>,1,0,0,2022-04-20 20:30:18
71952373,1,,,1,730,"<p>I am trying to run a graphql query to retrieve all products from shopify graphql api, but we can not query all data at once due to limited rate limit. So how can I query all data without facing the rate limit problem and effectively?&#xA;Any help would be greatly appreciated</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const myproducts = await axios({&#xA;        url: `https://${req.session.shop}/admin/api/2022-01/graphql.json`,&#xA;        method: 'post',&#xA;        headers: {&#xA;          &quot;X-Shopify-Access-Token&quot;: req.session.token,&#xA;        },&#xA;        data: {&#xA;            query: `&#xA;            query ($numProducts: Int!) {&#xA;              products(first: $numProducts) {&#xA;                edges {&#xA;                  cursor&#xA;                  node {&#xA;                    id&#xA;                    title&#xA;                    &#xA;                  }&#xA;                }&#xA;                pageInfo {&#xA;                  hasNextPage&#xA;                  &#xA;                }&#xA;              }&#xA;            }&#xA;            `,&#xA;            variables: {&#xA;              numProducts: 3&#xA;              &#xA;            }&#xA;        },&#xA;&#xA;&#xA;    });&#xA;</code></pre>&#xA;",18790755,,,,2022-09-08 10:09:10,How to run graphql query in a loop until condition is not matched,<node.js><graphql><shopify><shopify-app><shopify-api>,1,2,0,2022-04-21 09:49:53
71955352,2,,71954121,0,,"<p>There is no map type in GraphQL. Because maps are basically containing dynamic keys and, they do not play well into the static types that GraphQL is expecting.</p>&#xA;<p>If you are really unsure of what type the data is going to be in that map, you can always store that dynamic information as a String. This is something I personally would do.</p>&#xA;<p>So your filterModel would become&#xA;<code>filterModel:String</code> and that string would be a <code>JSON</code> representation of the object. You can do the JSON parsing in the code to convert it back to a <code>Map</code></p>&#xA;",11983766,,,,2022-04-21 13:29:15,"",,0,0,0,2022-04-21 13:29:15
71970620,2,,56012342,0,,"<p>For receiving only the approvals, we can use the the <code>state</code> argument and pass in <code>APPROVED</code>. To get the total count, GitHub can return this without the need to loop through results. Simply ask for <code>totalCount</code>.</p>&#xA;<p>Here's a simple working snippet:</p>&#xA;<pre><code>{&#xA;  repository (owner: &quot;YOUR_ORG&quot; name: &quot;YOUR_REPO_NAME&quot;) {&#xA;    pullRequests (first: 100) {&#xA;      edges {&#xA;        node {&#xA;          reviews (first: 100 states: APPROVED) {&#xA;            totalCount&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",12269582,,,,2022-04-22 14:44:54,"",,0,0,0,2022-04-22 14:44:54
71998514,1,,,0,199,"<p>A Github Pull Request shows a count of items in a &quot;conversation&quot;.&#xA;<a href=""https://i.stack.imgur.com/nE1Gv.png"" rel=""nofollow noreferrer"">Pull request tabs</a></p>&#xA;<p>How do I access all the elements which make this total up via the GraphQL API?</p>&#xA;<p>I've tried retrieving the <code>comments</code> against the Pull Request, as well as the <code>comments</code> against the <code>reviews</code> for the Pull Request as indicated in this question:</p>&#xA;<p><a href=""https://stackoverflow.com/questions/58678266/is-there-any-quick-way-to-get-comment-count-of-all-open-pull-request"">Is there any quick way to get comment count of all open pull request</a></p>&#xA;<pre><code>{&#xA;  search(type: ISSUE, query: &quot;is:pr state:open repo:foo/bar&quot;, first: 100) {&#xA;    nodes {&#xA;      ... on PullRequest {&#xA;        title&#xA;        comments {&#xA;          totalCount&#xA;        }&#xA;        reviews(first: 100) {&#xA;          totalCount&#xA;          nodes {&#xA;            comments {&#xA;              totalCount&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>However I can't seem to access when a user has &quot;responded&quot; to a comment.  In the case of the example PR I'm looking at, by extracting the <code>reviews</code> collection I can see 16 items, however the &quot;Conversation&quot; tab shows 21 items - so there are 5 <code>comments</code> that have a &quot;Reply&quot;.  What do I need to do to my query to return those?  It's just the count that I'm interested in.</p>&#xA;",3592619,,,,2022-04-25 23:38:11,"How do I access all comments in a ""conversation"" via Github GraphQL?",<graphql><github-api>,1,0,0,2022-04-25 11:02:48
72007499,1,,,0,373,"<p>I have a React app that I have cloned from the <a href=""https://github.com/Shopify/shopify-app-node"" rel=""nofollow noreferrer"">shopify-app-node repo</a> (the latest version using Express). I'm making GraphQL calls to Shopify's Admin API and I would like to also return cost information. I understand that there is an extensions object that contains this information but it is not returned in a typical GraphQL call. I have attempted to read and understand the documentation of <a href=""https://www.npmjs.com/package/shopify-api-node"" rel=""nofollow noreferrer"">Shopify/shopify-node-api</a> but Shopify's current version of their React app doesn't reflect what the documentation states. Not in a way I can understand anyway.</p>&#xA;<p>This is the route defined when the server is initiated:</p>&#xA;<pre><code>app.post(&quot;/graphql&quot;, verifyRequest(app), async (req, res) =&gt; {&#xA;    try {&#xA;      const response = await Shopify.Utils.graphqlProxy(req, res);&#xA;      res.status(200).send(response.body);&#xA;    } catch (error) {&#xA;      res.status(500).send(error.message);&#xA;    }&#xA;  }); &#xA;</code></pre>&#xA;<p>And then I make the query with the following: (apolloClient is being passed down from the parent component as this is a helper function and useQuery won't work due to it being a hook.</p>&#xA;<pre><code>const apolloClient = useApolloClient();&#xA;    &#xA;apolloClient.query({&#xA;    query: GqlProducts,&#xA;    variables: {&#xA;        count: 10&#xA;    }&#xA;})&#xA;.then( response =&gt; {&#xA;    console.log(response.data);&#xA;    console.log(response.extensions);&#xA;})&#xA;.catch( error =&gt; console.log(error) )&#xA;</code></pre>&#xA;<p>Obviously I get an undefined on response.extensions.</p>&#xA;<p>Along with any hints or suggestions on how to get this working, I'm also curious to know why it's not returned in a typical response.</p>&#xA;",15205530,,,,2022-04-26 01:49:04,How to retrieve Shopify's 'extensions' object in GraphQL response for query cost data,<reactjs><api><graphql><shopify>,0,5,0,2022-04-26 01:49:04
72008369,1,,,1,60,"<p>I have this GraphQL query which retrieved the pull requests' 3 types of timeline items from Github API. Within each type alias that I have(dismissed as an example) I'm getting all the other types but as empty objects(because I'm not querying any field in case it's not from the type I want) is there a way to exclude objects that aren't of the types I needed, maybe something like <code>@include if(__typename = something)</code></p>&#xA;<pre><code>query ($name: String!, $owner: String!, $pr: Int!) {&#xA;  repository(name: $name, owner: $owner) {&#xA;    pullRequest(number: $pr) {&#xA;      timelineItems(first: 100) {&#xA;        dismissed: nodes {&#xA;          ... on ReviewDismissedEvent {&#xA;            actor {&#xA;              login&#xA;            }&#xA;            review {&#xA;              author {&#xA;                login&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;        removed: nodes {&#xA;          ... on ReviewRequestRemovedEvent {&#xA;            actor {&#xA;              login&#xA;            }&#xA;            requestedReviewer {&#xA;              ... on User {&#xA;                name&#xA;                login&#xA;                id&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;        added: nodes {&#xA;          ... on ReviewRequestedEvent {&#xA;            actor {&#xA;              login&#xA;            }&#xA;            requestedReviewer {&#xA;              ... on User {&#xA;                name&#xA;                login&#xA;                id&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",14016826,,,,2022-04-26 04:22:50,Can you include an attributes based on type in GraphQL?,<api><github><graphql>,0,0,0,2022-04-26 04:22:50
72021946,1,,,0,32,<p>I have a graphql api and there is product resolver method that returns queryset of products. I want to add a new field for every product in the queryset. The new field will be a an index with key of &quot;similarity&quot; and then there would be value. I have tried to use annotate but that does not work in my case.&#xA;Need guidance on how can I go about this? Thanks in advance.</p>&#xA;,11656244,,,,2022-04-27 00:25:01,Add extra field to django queryset after getting data from some api in graphql's resolver method?,<python><django><graphql>,0,0,0,2022-04-27 00:25:01
72022828,1,,,0,117,"<p>I have a Shopify/React app which is using Express. I'm able to successfully make GraphQL calls to the admin API and receive the data back as expected, however, I'm also wanting to retrieve the extensions object which contains information on the cost of the query.</p>&#xA;<p>This is the Express route where I'm also logging the response:</p>&#xA;<pre><code>  app.post(&quot;/graphql&quot;, verifyRequest(app), async (req, res) =&gt; {&#xA;    try {&#xA;      const response = await Shopify.Utils.graphqlProxy(req, res);&#xA;      &#xA;      console.log('response.body:', response.body)&#xA;&#xA;      res.status(200).send(response.body);&#xA;    } catch (error) {&#xA;      res.status(500).send(error.message);&#xA;    }&#xA;  });&#xA;</code></pre>&#xA;<p>This is my query within the app:</p>&#xA;<pre><code>  apolloClient.query({&#xA;    query: GqlProducts,&#xA;    variables: {&#xA;      count: 10&#xA;    }&#xA;  })&#xA;  .then( response =&gt; console.log('response:',response) )&#xA;  .catch( error =&gt; console.log(error) )&#xA;</code></pre>&#xA;<p>I can see both <code>data</code> and <code>extensions</code> objects when I log the response within the server. This is the response in the terminal window where the server is running:</p>&#xA;<pre><code>response.body: {&#xA;  data: {&#xA;    products: {&#xA;      pageInfo: [Object],&#xA;      edges: [Array],&#xA;      __typename: 'ProductConnection'&#xA;    }&#xA;  },&#xA;  extensions: {&#xA;    cost: {&#xA;      requestedQueryCost: 192,&#xA;      actualQueryCost: 53,&#xA;      throttleStatus: [Object]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>However, the <code>extensions</code> object does not seem to be available within the app. This is the response in the browser console:</p>&#xA;<pre><code>response: &#xA;{data: {…}, loading: false, networkStatus: 7}&#xA;    data:&#xA;        products: {__typename: 'ProductConnection', pageInfo: {…}, edges: Array(10)}&#xA;        [[Prototype]]: Object&#xA;    loading: false&#xA;    networkStatus: 7&#xA;    [[Prototype]]: Object&#xA;</code></pre>&#xA;<p>Is there something that I am missing for this object to be available?</p>&#xA;",15205530,,,,2022-04-27 03:11:08,Express server not passing Shopify 'extensions' object back to App in GraphQL response,<reactjs><express><graphql><shopify>,0,3,0,2022-04-27 03:11:08
72026225,2,,63430914,0,,"<p>I user this query to retrieve the Admins</p>&#xA;<pre><code>{&#xA;organization(login: &quot;Coorp&quot;) {&#xA;    repositories(first: 100, after: null) {&#xA;        nodes {&#xA;            id&#xA;            nameWithOwner&#xA;            description&#xA;            url&#xA;            collaborators(first: 20, after: null) {&#xA;                edges {&#xA;                    permission&#xA;                    node {&#xA;                        id&#xA;                        name&#xA;                        email&#xA;                    }&#xA;                }&#xA;                pageInfo {&#xA;                    hasNextPage&#xA;                    endCursor&#xA;                }&#xA;            }&#xA;        }&#xA;        pageInfo {&#xA;            hasNextPage&#xA;            endCursor&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>}</p>&#xA;",18962999,,,,2022-04-27 09:14:56,"",,0,0,0,2022-04-27 09:14:56
72039283,2,,72037292,1,,"<p>Yes it is possible to post data to GraphQL API in Mule 4. The Error that you are getting is probably because you are missing a closing parenthesis in your query. Try this</p>&#xA;<pre><code>%dw 2.0&#xA;output application/json&#xA;---&#xA;{&#xA;    query: &quot;query{&#xA;        test (first: 10, status: \&quot;ACTIVE\&quot; ) {&#xA;            edges {&#xA;                node {&#xA;                    id&#xA;                    ref&#xA;                    type&#xA;                    status&#xA;                    attributes {&#xA;                        name&#xA;                        value&#xA;                        type&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&quot;&#xA;}&#xA;</code></pre>&#xA;",10946202,,,,2022-04-28 06:55:44,"",,0,0,0,2022-04-28 06:55:44
72055020,2,,58734176,1,,"<p>A <a href=""/questions/tagged/ruby"" class=""post-tag"" title=""show questions tagged &#39;ruby&#39;"" rel=""tag"">ruby</a> script (similar to the python accepted answer) that lists repos with their stars and forks. The script either returns a json array if piped, or yields a ruby repl otherwise.</p>&#xA;<pre class=""lang-rb prettyprint-override""><code># frozen_string_literal: true&#xA;&#xA;require 'json'&#xA;require 'nokogiri'&#xA;require 'open-uri'&#xA;&#xA;$repo = ARGV.fetch(0, &quot;rgeo/rgeo&quot;)&#xA;&#xA;Repo = Struct.new(:org, :repo, :stars, :forks)&#xA;&#xA;url = &quot;https://github.com/#$repo/network/dependents&quot;&#xA;repos = []&#xA;&#xA;while url&#xA;  doc = Nokogiri::HTML(URI.open(url))&#xA;  doc.css('#dependents .Box .Box-row').each do |el|&#xA;    repos &lt;&lt; Repo.new(&#xA;      *el.css('.f5 &gt; a').map(&amp;:inner_text),&#xA;      *el.at_css('.d-flex').content.delete(&quot; ,&quot;).scan(/\d+/).map(&amp;:to_i)&#xA;    )&#xA;rescue&#xA;  binding.irb&#xA;  end&#xA;  url = doc.at_css('.paginate-container &gt; .BtnGroup &gt; .BtnGroup-item:nth-child(2)').attr(&quot;href&quot;)&#xA;end&#xA;&#xA;if $stdin.tty? &amp;&amp; $stdout.tty?&#xA;  # check `repos`&#xA;  binding.irb&#xA;else&#xA;  jj repos.map { { name: &quot;#{_1.org}/#{_1.repo}&quot;, stars: _1.stars, forks: _1.forks } }&#xA;end&#xA;</code></pre>&#xA;",6320039,,,,2022-04-29 08:31:17,"",,0,0,0,2022-04-29 08:31:17
72068423,1,,,0,25,"<p>There's something I'm not quite clear on with how to use resolvers to retrieve nested data.  For example I have the following Order Type.  Note that there is a reference to a seller which returns a Seller type.</p>&#xA;<pre><code>type Order {&#xA;  id: ID!&#xA;  title: String!&#xA;  description: String!&#xA;  seller: Seller!&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>The seller type looks like this,  it has it's own ID and is stored in a seperate ddb table to order.</p>&#xA;<pre><code>type Seller {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>When I store Order in my ddb Orders table I store it with the sellerId, with the intention of fetching the Seller data seperately.</p>&#xA;<pre><code>{&#xA;  id: String,&#xA;  title: String,&#xA;  description: String,&#xA;  sellerId: String&#xA;}&#xA;</code></pre>&#xA;<p>I understand I can include an Order resolver like this which can retrieve the Seller object separately for an Order query.</p>&#xA;<pre><code>&#xA;export default {&#xA;    Query: {&#xA;        order: ???? returns Order&#xA;    },&#xA;    Mutation: {&#xA;        createOrder: ???&#xA;&#xA;    },&#xA;    Order: {&#xA;        seller: ???  returns Seller&#xA;    }&#xA;};&#xA;&#xA;</code></pre>&#xA;<p>The part that I don't understand is how I pass the sellerId to this part? Given the fact that I have no sellerId on my Order type,  the sellerId is only stored in the database.</p>&#xA;<pre><code>    Order: {&#xA;        seller: ???  returns Seller&#xA;    }&#xA;</code></pre>&#xA;",1148920,,,,2022-04-30 12:11:57,Graphql Nested Type Resolver Query confusion,<graphql><apollo-server>,0,0,0,2022-04-30 12:11:57
72070699,2,,70426547,0,,<p>the input type is an object so you need to pass properties inside that object like this example :</p>&#xA;<pre><code>{&#xA;  category(input: {title:&quot;all&quot;}) {&#xA;    name&#xA;    products {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,14912008,,,,2022-04-30 17:31:17,"",,0,0,0,2022-04-30 17:31:17
72075773,1,72261666,,2,380,"<p>I have a tricky Typescript problem I can't seem to solve. I would like to infer values based on a generic. However, the catch is the inferred types needs to come from an imported file.</p>&#xA;<p>To explain in an example, this is my generic function.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { DocumentNode, print } from &quot;graphql&quot;&#xA;&#xA;type GraphqlRequest = &lt;Query, Variables = {}&gt;({ query, variables }: { query: DocumentNode, variables?: Variables }) =&gt; Promise&lt;Query&gt;&#xA;&#xA;const fetchQuery: GraphqlRequest = async ({ query, variables = {} }) =&gt; {&#xA;  return database(JSON.stringify({ query: print(query), variables }))&#xA;}&#xA;</code></pre>&#xA;<p>And I use it in the following way:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { UserBlogItems, UserBlogItemsQuery, UserBlogItemsQueryVariables } from &quot;~/graphql&quot;&#xA;&#xA;fetchQuery&lt;UserBlogItemsQuery, UserBlogItemsQueryVariables&gt;({ query: UserBlogItems, variables: { user } })&#xA;</code></pre>&#xA;<p>Which works great because I can get the correct types checking on the variables and the query response.</p>&#xA;<hr />&#xA;<p>What I would like to be able to do is <strong>just include the <code>DocumentNode</code></strong> and have Typescript look up the <code>Query</code> and <code>Variables</code> from the &quot;~/graphql` file. This way I can have the function look a lot cleaner.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { UserBlogItems } from &quot;~/graphql&quot;&#xA;&#xA;fetchQuery({ query: UserBlogItems, variables: { user }})&#xA;</code></pre>&#xA;<p>I can ensure 100% always that in the <code>~/graphql</code> file the format will be:</p>&#xA;<ul>&#xA;<li><code>DocumentNode: [myquery]</code> (eg <code>UserBlogItems</code>)</li>&#xA;<li><code>Query: [myquery]Query</code> (eg <code>UserBlogItemsQuery</code>)</li>&#xA;<li><code>Variables: [myquery]QueryVariables</code> (eg <code>UserBlogItemsQueryVariables</code>)</li>&#xA;</ul>&#xA;<p>Is this possible in Typescript?</p>&#xA;",10141904,,10141904,2022-05-12 00:02:28,2022-05-16 20:33:16,How to infer types from an imported file in Typescript,<typescript><graphql><graphql-codegen>,2,7,0,2022-05-01 10:09:45
72088710,2,,72077340,1,,"<p>I posted this same issue on apollo/router repo and they said it'll be fix soon</p>&#xA;<p><a href=""https://github.com/apollographql/router/issues/937#issuecomment-1114995491"" rel=""nofollow noreferrer"">https://github.com/apollographql/router/issues/937#issuecomment-1114995491</a></p>&#xA;",4081250,,,,2022-05-02 15:11:36,"",,0,0,0,2022-05-02 15:11:36
72100019,1,,,0,27,"<p>We have a scenario where we have multiple nested objects, for example:</p>&#xA;<ul>&#xA;<li>A tree may have branches</li>&#xA;<li>A branch may have fruits</li>&#xA;<li>A fruit may have&#xA;seeds</li>&#xA;</ul>&#xA;<p>Our Api has many consumers with different needs:</p>&#xA;<ul>&#xA;<li>Some only want to know about the tree itself.</li>&#xA;<li>Some want to know about the tree, and the branches within the tree.</li>&#xA;<li>Some want to know about certain trees, and all the branches, fruits and seeds for those trees.</li>&#xA;</ul>&#xA;<p>Ideally we'd therefore have some GraphQl-like endpoint which allows you to specify the <strong>objects</strong> you want and filter on these:</p>&#xA;<ul>&#xA;<li>{ trees } //only get trees</li>&#xA;<li>{ trees: branches } // get trees and their branches</li>&#xA;</ul>&#xA;<p>But from what I've seen GraphQl is about specifying the <strong>fields</strong> you want rather than objects. Thus for a tree query you'd need to specify all the tree and branch properties you wish to receive etc.</p>&#xA;<p>This makes it more awkward on the backend, because we then need a mapping layer for every single field which can be requested, and map this into a corresponding database field to build a query.</p>&#xA;<p>Are there use cases of GraphQL which simply request the high level objects in the queries, and the API simply returns those objects and every property on them?</p>&#xA;",666254,,,,2022-05-03 13:19:18,"Can GraphQl be used to request full objects, as opposed to fields?",<graphql>,0,2,0,2022-05-03 13:19:18
72100291,2,,48244950,0,,"<p>There is also an inPrivate attribute on the Repository object you can query&#xA;<a href=""https://docs.github.com/en/graphql/reference/objects#repository"" rel=""nofollow noreferrer"">https://docs.github.com/en/graphql/reference/objects#repository</a></p>&#xA;",544775,,,,2022-05-03 13:39:37,"",,0,0,0,2022-05-03 13:39:37
72109079,1,,,0,84,"<p>I'm trying to get <code>dependencyGraphManifests</code> of a particular branch only, such as the default branch, I'm not really sure if this is even possible.</p>&#xA;<p>Here is my full query:</p>&#xA;<pre><code>query orgRepos {&#xA;  organization(login: &quot;octokit&quot;) {&#xA;    id&#xA;    repositories(&#xA;      first: 2&#xA;      orderBy: {field: CREATED_AT, direction: ASC}&#xA;    ) {&#xA;      edges {&#xA;        node {&#xA;          defaultBranchRef {&#xA;            name&#xA;            repository {&#xA;              url&#xA;              name&#xA;              dependencyGraphManifests(withDependencies: true) {&#xA;                totalCount&#xA;                edges {&#xA;                  node {&#xA;                    blobPath&#xA;                    dependencies {&#xA;                      nodes {&#xA;                        packageName&#xA;                        requirements&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But the response returns every manifest file.&#xA;Here is a simplified response:</p>&#xA;<pre><code>&quot;node&quot;: {&#xA;    &quot;defaultBranchRef&quot;: {&#xA;        &quot;name&quot;: &quot;main&quot;,&#xA;        &quot;repository&quot;: {&#xA;            &quot;url&quot;: &quot;https://github.com/octokit/octokit.js&quot;,&#xA;            &quot;name&quot;: &quot;octokit.js&quot;,&#xA;            &quot;dependencyGraphManifests&quot;: {&#xA;                &quot;totalCount&quot;: 7,&#xA;                &quot;edges&quot;: [&#xA;                    {&#xA;                        &quot;node&quot;: {&#xA;                            &quot;blobPath&quot;: &quot;/octokit/octokit.js/blob/main/package-lock.json&quot;&#xA;                        }&#xA;                    },&#xA;                    {&#xA;                        &quot;node&quot;: {&#xA;                            &quot;blobPath&quot;: &quot;/octokit/octokit.js/blob/main/package.json&quot;&#xA;                        }&#xA;                    },&#xA;                    {&#xA;                        &quot;node&quot;: {&#xA;                            &quot;blobPath&quot;: &quot;/octokit/octokit.js/blob/main/docs/package.json&quot;&#xA;                        }&#xA;                    },&#xA;                    {&#xA;                        &quot;node&quot;: {&#xA;                            &quot;blobPath&quot;: &quot;/octokit/octokit.js/blob/main/.github/workflows/release.yml&quot;&#xA;                        }&#xA;                    },&#xA;                    {&#xA;                        &quot;node&quot;: {&#xA;                            &quot;blobPath&quot;: &quot;/octokit/octokit.js/blob/main/.github/workflows/test.yml&quot;&#xA;                        }&#xA;                    },&#xA;                    {&#xA;                        &quot;node&quot;: {&#xA;                            &quot;blobPath&quot;: &quot;/octokit/octokit.js/blob/main/.github/workflows/update-prettier.yml&quot;&#xA;                        }&#xA;                    }&#xA;                ]&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>It also worth noting that some of the <code>blobpath</code>s return invalid paths, such as <code>/octokit/octokit.js/blob/main/docs/package.json</code>, which doesn't actually exists on the default branch(its on a different branch). Is this a bug?</p>&#xA;",14399986,,,,2022-05-04 07:04:52,How to get dependencyGraphManifests of a particular branch only using github graphql,<github><github-api><github-graphql>,0,0,0,2022-05-04 07:04:52
72117361,1,,,0,62,"<p>My question is this:</p>&#xA;<p>Is there a feature or method within graphql that allows editing of incoming queries EASILY so that I can prevent an action from being performed? I would like to examine my query in a web proxy, edit the actions, and then send it on to its destination.</p>&#xA;<p>Context:</p>&#xA;<p>I have a mutation running in a proxy service for commercetools that looks like this:</p>&#xA;<pre><code>mutation AddLineItem(&#xA;  $id: String&#xA;  $version: Long!&#xA;  $sku: String&#xA;  $quantity: Long&#xA;  $currencyCode: Currency!&#xA;  $centAmount: Long!&#xA;  $custom: String!&#xA;) {&#xA;  updateCart(&#xA;    version: $version&#xA;    id: $id&#xA;    actions: [&#xA;      {&#xA;        addLineItem: {&#xA;          sku: $sku&#xA;          quantity: $quantity&#xA;          externalPrice: { centPrecision: { currencyCode: $currencyCode, centAmount: $centAmount } }&#xA;          custom: { typeKey: &quot;custom-type&quot;, fields: [{ name: &quot;field&quot;, value: $custom }] }&#xA;        }&#xA;      }&#xA;    ]&#xA;  ) {&#xA;    id&#xA;    version&#xA;    lineItems {&#xA;      ...LineItemFieldsCart&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>According to the commercetools documentation, when the external price field is set, duplicate items will be added as separate line items to the cart instead of increasing the quantity, as is the default behavior. The thing is, I want the default behavior instead of the duplicate line items. The normal way to mitigate this is to add an update extension to delete the duplicates, but I am working on an already mature system that has multiple update extensions that all operate on the line items, making a delete apparatus a heavy lift in the update extension. I want to edit the query in the proxy so the duplicate item never happens in the first place. Is there an easy way to do this?</p>&#xA;",1887370,,,,2022-05-05 10:00:20,How to examine and change actions on commercetools updateCart query?,<ruby-on-rails><graphql><commercetools>,1,0,0,2022-05-04 17:45:37
72125299,2,,72117361,0,,"<p>for the add line item update action the current behaviour is to create a separate line item when external prices are used and not add the additional quantity to the already existing line item as you described.&#xA;If you want to make sure that the quantity is added to the already existing line item when using external prices, you could do a check prior to adding a new line item and use the update action change line item quantity in case the product variants match with the line items that already exist in the cart. This will let you set the external price there and will not add any additional like items. <a href=""https://docs.commercetools.com/api/projects/carts#change-lineitem-quantity"" rel=""nofollow noreferrer"">https://docs.commercetools.com/api/projects/carts#change-lineitem-quantity</a></p>&#xA;",14362208,,,,2022-05-05 10:00:20,"",,0,1,0,2022-05-05 10:00:20
72165719,1,,,0,3,"<p>I'm a graphQL newbie, and I'm confused about how to set up my schema correctly for train stations. I've set up my train station schema with all the relevant information (station id, station name, etc) corresponding to the train station data; all of this queries correctly.</p>&#xA;<p>The trouble is that my train station data has the number of train lines at any given station in an array. The individual trains do not have their own table to which they are joining; rather the train lines are just in an array.</p>&#xA;<p>Would it make sense to load all the data into a relational database rather than a series of objects? Should I create a custom scalar type to handle an array?</p>&#xA;",7083052,,,,2022-05-08 23:22:13,Trouble Matching GraphQL Scalar to original data set,<graphql>,0,0,0,2022-05-08 23:22:13
72175415,1,,,1,464,"<p>With Github's GraphQL API I recently found &quot;<a href=""https://stackoverflow.com/questions/43259946/github-api-getting-topics-of-a-github-repository"">Github API: Getting topics of a Github repository</a>&quot; that mentions you can get a count of topics:</p>&#xA;<pre><code>{&#xA;  repository(owner: &quot;twbs&quot;, name: &quot;bootstrap&quot;) {&#xA;    repositoryTopics(first: 10) {&#xA;      edges {&#xA;        node {&#xA;          topic {&#xA;            name&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>but in the docs and in my search I'm not finding how I can query repositories that do not contain the topic <code>template</code>, example:</p>&#xA;<pre><code>query ($github_org: String!, $repo_count: Int!) {&#xA;  organization(login: $github_org) {&#xA;    repositories(first: $repo_count, privacy: PUBLIC, isFork: false) {&#xA;      nodes {&#xA;        id&#xA;        name&#xA;        openGraphImageUrl&#xA;        createdAt&#xA;        stargazerCount&#xA;        url&#xA;        description&#xA;        repositoryTopics(first: 10, after: &quot;template&quot;) {&#xA;          edges {&#xA;            node {&#xA;              id&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>is the correct implementation to use <code>after</code>? In Github's GraphQL API how to exclude a repository if it contains a certain topic?</p>&#xA;",1952287,,1952287,2022-05-11 15:19:12,2022-07-30 13:48:24,In Github's GraphQL API how to get repositories that do not have a particular repositoryTopic?,<github><graphql><github-api><github-graphql>,1,1,0,2022-05-09 16:37:59
72177960,2,,50118567,0,,"<p>The only solution that worked for me was:</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>apollo service:download types/download.json --endpoint=https://{your-shop}.myshopify.com/admin/api/2022-04/graphql.json --header=&quot;X-Shopify-Access-Token: &lt;admin-access-token&gt;&quot;&#xA;</code></pre>&#xA;<blockquote>&#xA;<p>PS: Change the <code>2022-04</code> to the latest API version.</p>&#xA;</blockquote>&#xA;<p>If you want the download file into a SDL format instead of JSON use this approach:</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>apollo client:download-schema types/download.graphql --endpoint=https://{your-shop}.myshopify.com/admin/api/2022-04/graphql.json --header=&quot;X-Shopify-Access-Token: &lt;admin-access-token&gt;&quot;&#xA;</code></pre>&#xA;<p>Apollo client will conside the output as a SDL format:</p>&#xA;<pre><code>&quot;&quot;&quot;&#xA;Returns unfulfilled line items grouped by their fulfillment service. Each draft fulfillment contains additional information, such as whether the fulfillment requires shipping and whether a shipping label can be printed for it.&#xA;&quot;&quot;&quot;&#xA;type DraftFulfillment {&#xA;  &quot;&quot;&quot;Whether a label can be purchased.&quot;&quot;&quot;&#xA;  allowLabelPurchase: Boolean!&#xA;&#xA;  &quot;&quot;&quot;&#xA;  The line items (which might correspond to a variant) that are part of this draft fulfillment.&#xA;  &quot;&quot;&quot;&#xA;  lineItems: [LineItem!]!&#xA;&#xA;  &quot;&quot;&quot;Whether a fulfillment requires shipping.&quot;&quot;&quot;&#xA;  requiresShipping: Boolean!&#xA;&#xA;  &quot;&quot;&quot;The service responsible for fulfilling the fulfillment.&quot;&quot;&quot;&#xA;  service: FulfillmentService!&#xA;}&#xA;</code></pre>&#xA;",3108872,,3108872,2022-05-09 20:57:23,2022-05-09 20:57:23,"",,0,0,0,2022-05-09 20:36:23
72180548,1,72209795,,0,313,"<p>I'm using GQL query to show product variant information inside my table but when I'm calling product name its not working. Even my SKU,UPC/MPN and all rest values are showing but don't know how to show product name.&#xA;This is my site theme table <a href=""https://i.stack.imgur.com/4M6hk.png"" rel=""nofollow noreferrer"">Table</a> And this is my dashboard <a href=""https://i.stack.imgur.com/5QLeP.png"" rel=""nofollow noreferrer"">Dashboard Table</a>&#xA;This is my GQL query through which I'm taking variant information <a href=""https://i.stack.imgur.com/N0heO.png"" rel=""nofollow noreferrer"">Code</a></p>&#xA;",15049285,,,,2022-05-12 03:24:54,Product Variant Name using GraphQL in Bigcommerce,<graphql><bigcommerce><graphql-js><gql><bigcommerce-stencil-cli>,2,0,0,2022-05-10 03:51:24
72186564,1,,,0,43,"<p>What happens is the following, I have this table in GraphQL:</p>&#xA;<pre><code>type Purchase @model @auth(rules: [{allow: private}]) {&#xA;  id: ID!&#xA;  date: AWSTime!&#xA;  product: Product!&#xA;}&#xA;&#xA;type Product @model @auth(rules: [{allow: private}]) {&#xA;  id: ID!&#xA;  name: String&#xA;  price: double&#xA;}&#xA;</code></pre>&#xA;<p>Suppose I delete the product so users can't search for it. But when the user goes to their purchase history, I want them to see the product details.</p>&#xA;<p>Is there any way I can reference a deleted recording, but not a direct query to it?</p>&#xA;",19085645,,13302,2022-06-30 20:34:08,2022-06-30 20:34:08,AppSync - How to query deleted writes from a child table?,<amazon-web-services><graphql><aws-amplify><aws-appsync>,0,0,0,2022-05-10 12:45:08
72189451,2,,72180548,0,,"<p>Variants do not have their own names (they only have a SKU code), so you can simply re-use the product's name. You can add the <code>name</code> field to your query underneath the <code>product</code> node, on the same level as <code>variants</code>.</p>&#xA;",4595068,,,,2022-05-10 15:50:34,"",,0,1,0,2022-05-10 15:50:34
72193876,1,,,0,264,"<p>This is using WPGraphql with WordPress but I believe it's a general PHP and/or Graphql issue. I've been searching for 2 days now, and everything I've found is specific to some library or framework or otherwise not helpful. Any help with this is super appreciated.</p>&#xA;<p>The code below creates a variable $post_slug which contains the slug of the current post.</p>&#xA;<p>If I replace id: $post_slug with an actual post slug (id: &quot;my-groovy-post&quot;) it works, but apparently $post_slug is undefined within the query.</p>&#xA;<pre><code>&lt;?php&#xA;&#xA;$post_slug = get_post_field( 'post_name', get_post() );&#xA;&#xA;$graphql = graphql([&#xA;    'query' =&gt; ' {&#xA;  post(idType: SLUG, id: $post_slug) {&#xA;    title&#xA;    content&#xA;    date&#xA;  }&#xA;}'&#xA;]);&#xA;&#xA;&#xA;echo '&lt;pre&gt;';&#xA;var_dump($graphql);&#xA;echo '&lt;/pre&gt;';&#xA;?&gt;&#xA;</code></pre>&#xA;<p>The results of my query</p>&#xA;<pre><code>array(2) {&#xA;  [&quot;errors&quot;]=&gt;&#xA;  array(1) {&#xA;    [0]=&gt;&#xA;    array(3) {&#xA;      [&quot;message&quot;]=&gt;&#xA;      string(37) &quot;Variable &quot;$post_slug&quot; is not defined.&quot;&#xA;      [&quot;extensions&quot;]=&gt;&#xA;      array(1) {&#xA;        [&quot;category&quot;]=&gt;&#xA;        string(7) &quot;graphql&quot;&#xA;      }&#xA;      [&quot;locations&quot;]=&gt;&#xA;      array(2) {&#xA;        [0]=&gt;&#xA;        array(2) {&#xA;          [&quot;line&quot;]=&gt;&#xA;          int(2)&#xA;          [&quot;column&quot;]=&gt;&#xA;          int(27)&#xA;        }&#xA;        [1]=&gt;&#xA;        array(2) {&#xA;          [&quot;line&quot;]=&gt;&#xA;          int(1)&#xA;          [&quot;column&quot;]=&gt;&#xA;          int(2)&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;  [&quot;extensions&quot;]=&gt;&#xA;  array(1) {&#xA;    [&quot;debug&quot;]=&gt;&#xA;    array(1) {&#xA;      [0]=&gt;&#xA;      array(2) {&#xA;        [&quot;type&quot;]=&gt;&#xA;        string(19) &quot;DEBUG_LOGS_INACTIVE&quot;&#xA;        [&quot;message&quot;]=&gt;&#xA;        string(86) &quot;GraphQL Debug logging is not active. To see debug logs, GRAPHQL_DEBUG must be enabled.&quot;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3074020,,3074020,2022-05-10 23:33:24,2022-05-11 21:11:34,How to use PHP variables in a Graphql query?,<php><graphql>,1,12,0,2022-05-10 23:21:24
72209795,2,,72180548,1,,"<p>Variants are associated with options that do have names. We gather the names for all options and concatenate them together to get the variant's name. e.g. &quot;Large Red&quot;.</p>&#xA;<p>Here's the variant part of the graphql we use to get that information:</p>&#xA;<pre><code>variants(first:50 entityIds:[1,2,3]){&#xA;    edges{&#xA;        node{&#xA;            options(first:50){&#xA;                edges{&#xA;                    node{&#xA;                        displayName values(first:50){&#xA;                            edges{&#xA;                                node{&#xA;                                    label&#xA;                                }&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",303484,,,,2022-05-12 03:24:54,"",,0,4,0,2022-05-12 03:24:54
72223736,2,,66029495,0,,"<p>List all the pages with your query then execute the following query:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;  pages {&#xA;    single (id:1) {&#xA;      content&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",10643868,,14190543,2022-05-19 01:37:31,2022-05-19 01:37:31,"",,0,0,0,2022-05-13 02:06:21
72227811,1,,,0,282,"<p>I'm working on GraphQL API, and I want to filter my data &quot;Products&quot; by sellerId knowing that a product can be sold by several sellers, which means the sellers' field is an array.</p>&#xA;<p>Here is the query:</p>&#xA;<pre><code>query GetProducts($filterObject:ProductWhereInput!){&#xA;                products(where:$filterObject){&#xA;                    id&#xA;                    name&#xA;                    description&#xA;                    sku&#xA;                    price&#xA;                    sellers(where:$filterObject.sellers){&#xA;                        id&#xA;                        firstname&#xA;                        lastname&#xA;                    }&#xA;                    images{&#xA;                        url&#xA;                        fileName&#xA;   &#xA;&#xA;         }&#xA;     }&#xA;  }&#xA;</code></pre>&#xA;<p>Filter variable is defined like that</p>&#xA;<pre><code>{&#xA;&quot;filter&quot;:{&#xA;    &quot;sellerId&quot;:&quot;ckzia0llkfngz0d09mrppd7kh&quot;&#xA;}&#xA;</code></pre>&#xA;<p>}</p>&#xA;<p>and when I execute this query I get the error</p>&#xA;<pre><code>&quot;message&quot;: &quot;unknown field 'filterObject.sellers' in variables&quot;&#xA;</code></pre>&#xA;<p>I'm not sure if that's the correct method to apply the filter, it worked for me when I use it for single-value fields, but not with arrays.</p>&#xA;<p>If someone could help me, I'll be thankful.</p>&#xA;",11118890,,,,2022-05-14 08:13:56,GraphQl filter in list field,<node.js><graphql>,1,0,0,2022-05-13 10:05:20
72229285,2,,72226778,0,,"<p>Looks like you want something similar to:</p>&#xA;<pre><code>query allProducts (where: {id: ${id} }) {&#xA;   ...&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://graphcms.com/docs/api-reference/content-api/queries"" rel=""nofollow noreferrer"">https://graphcms.com/docs/api-reference/content-api/queries</a></p>&#xA;",2407460,,,,2022-05-13 12:01:53,"",,0,0,0,2022-05-13 12:01:53
72230382,2,,72229533,0,,"<p>Instead of manually changing the python module in site-packages, and assuming there's no other way to fix this (i.e. if all you need is <code>force_text</code> to be defined at <code>django.utils.encoding</code>), you could also write a &quot;monkey patch&quot;, i.e. a runtime patch of the <code>django.utils.encoding</code> module. Adding something like this in our own code (untested):</p>&#xA;<pre><code>from django.utils import encoding&#xA;&#xA;encoding.force_text = encoding.force_str &#xA;</code></pre>&#xA;<p>Later, once not needed, this patch should be removed.</p>&#xA;",9998733,,,,2022-05-13 13:30:25,"",,0,0,0,2022-05-13 13:30:25
72238433,2,,72227811,0,,"<p>Here you defined <code>$filterObject</code> as a query variable</p>&#xA;<pre><code>query GetProducts($filterObject:ProductWhereInput!)&#xA;</code></pre>&#xA;<p>But the way this line is written, it &quot;uses&quot; a variable that is not defined:</p>&#xA;<pre><code>sellers(where:$filterObject.sellers)&#xA;</code></pre>&#xA;<p>It's looking for a variable named: &quot;<code>$filterObject.sellers</code>&quot;, not a property &quot;sellers&quot; of <code>$filterObject</code>.</p>&#xA;<h3>Possible solution 1 - server side:</h3>&#xA;<p>You can change the <code>sellers</code> field definition to use the whole <code>$filterObject</code> and then the resolver function on the server can extract the field it needs.</p>&#xA;<pre><code>sellers(where:$filterObject)&#xA;</code></pre>&#xA;<p>This solution makes sense if you have control over the server side.</p>&#xA;<h3>Possible solution 2 - client side:</h3>&#xA;<p>If you cannot change the code on the server side, you can define a separate variable and use it instead:</p>&#xA;<pre><code>query GetProducts($filterObject:ProductWhereInput!, $filterSellersObject:ProductSellersWhereInput!){&#xA;//...&#xA;    sellers(where:$filterSellersObject){&#xA;//...&#xA;</code></pre>&#xA;<p>(assuming <code>ProductSellersWhereInput</code> is a defined type)</p>&#xA;",2805067,,,,2022-05-14 08:13:56,"",,0,0,0,2022-05-14 08:13:56
72239986,2,,72232524,0,,"<p>Turns out I just needed a loop, ex.;</p>&#xA;<pre><code>uni.forEach(unipair =&gt; {&#xA;    console.log(unipair);&#xA;</code></pre>&#xA;",19079275,,,,2022-05-14 12:00:33,"",,0,0,0,2022-05-14 12:00:33
72240214,1,,,0,128,"<p>I have a link to this repository ( <a href=""https://github.com/scandiweb/junior-react-endpoint"" rel=""nofollow noreferrer"">https://github.com/scandiweb/junior-react-endpoint</a> ). My question is, how can I clone this graphql structure to my react project and fetch data from it?</p>&#xA;",18276751,,,,2022-11-19 13:19:10,How can I fetch data from a graphql structure which is in github?,<reactjs><graphql><fetch><apollo-server>,1,0,0,2022-05-14 12:31:01
72240268,1,,,2,158,"<p>I am using Vue and Apollo and I am making a querie that looks just like the box below.</p>&#xA;<p>After I get the API response, I would like to call a method from my methods object. However Vue, doesn't give me acess to it within apollo object.</p>&#xA;<p>I would like to know how can I call one of my methods, but only after I am sure I got that response, without having to manually trigger it with a button or something else.</p>&#xA;<pre><code>apollo: { &#xA; materials: {&#xA;            query: gql`&#xA;                query allMaterials($tenantId: ID, $name: String) {&#xA;                    tenantMaterials(tenantId: $tenantId, name: $name) {&#xA;                        edges {&#xA;                            node {&#xA;                                name&#xA;                                materialType {&#xA;                                    name&#xA;                                    id&#xA;                                }&#xA;                                brand&#xA;                                vendor&#xA;                                size&#xA;                                unit&#xA;                                inventory&#xA;                                createdAt&#xA;                                updatedAt&#xA;                                isActive&#xA;                                updatedBy&#xA;                                id&#xA;                            }&#xA;                        }&#xA;                        totalCount&#xA;                    }&#xA;                }&#xA;            `,&#xA;            variables() {&#xA;                return {&#xA;                    name: null&#xA;                };&#xA;            },&#xA;            fetchPolicy: &quot;cache-and-network&quot;,&#xA;            update: response =&gt; {&#xA;                return response.tenantMaterials.edges;&#xA;                //I want to call a function/method after this response&#xA;            },&#xA;            skip: false&#xA;        },&#xA;}&#xA;</code></pre>&#xA;",17654424,,,,2022-06-18 11:24:58,Calling function in VueApollo after API response,<vue.js><graphql><apollo>,1,0,0,2022-05-14 12:37:29
72241008,2,,58734176,3,,"<p>Building on top of @Bertrand Martel 's answer, the following is a version of his code that does not require knowing the <code>page_num</code> beforehand:</p>&#xA;<pre class=""lang-py prettyprint-override""><code>import requests&#xA;from bs4 import BeautifulSoup&#xA;&#xA;repo = &quot;expressjs/express&quot;&#xA;url = 'https://github.com/{}/network/dependents'.format(repo)&#xA;nextExists = True&#xA;result = []&#xA;while nextExists:&#xA;    r = requests.get(url)&#xA;    soup = BeautifulSoup(r.content, &quot;html.parser&quot;)&#xA;&#xA;    result = result + [&#xA;        &quot;{}/{}&quot;.format(&#xA;            t.find('a', {&quot;data-repository-hovercards-enabled&quot;:&quot;&quot;}).text,&#xA;            t.find('a', {&quot;data-hovercard-type&quot;:&quot;repository&quot;}).text&#xA;        )&#xA;        for t in soup.findAll(&quot;div&quot;, {&quot;class&quot;: &quot;Box-row&quot;})&#xA;    ]&#xA;    nextExists = False&#xA;    for u in soup.find(&quot;div&quot;, {&quot;class&quot;:&quot;paginate-container&quot;}).findAll('a'):&#xA;        if u.text == &quot;Next&quot;:&#xA;            nextExists = True&#xA;            url = u[&quot;href&quot;]&#xA;&#xA;for r in result:&#xA;  print(r)&#xA;print(len(result))&#xA;</code></pre>&#xA;<p>Keep in mind that it can run very long if there are many dependents.</p>&#xA;",5233252,,,,2022-05-14 14:11:43,"",,0,3,0,2022-05-14 14:11:43
72246673,1,72246697,,0,274,"<p>I have a useQuery that returns data of the first item inserted. For context, I have an ecommerce website with grocery products, suppose I add an apple with quantiy of 4. Next, when I add another order with quantiy 10, it adds correctly in the database and I get correct results in the apollo playground. But when I am pulling data using the below code in  Apollo client it has all the orders of that user with different order ids but has the quantiy of the first order made for apple.</p>&#xA;<pre><code>const { loading, error, data } = useQuery(queries.GET_USER_ORDERS, {&#xA;            fetchPolicy: &quot;cache-and-network&quot;,&#xA;            variables: {&#xA;                userId: currentUser.uid,&#xA;            },&#xA;        });&#xA;</code></pre>&#xA;<p>Graphql query:</p>&#xA;<pre><code>const GET_USER_ORDERS = gql`&#xA;    query Query($userId: String) {&#xA;        userOrders(userId: $userId) {&#xA;            _id&#xA;            userId&#xA;            products {&#xA;                _id&#xA;                name&#xA;                price&#xA;                orderedQuantity&#xA;            }&#xA;            status&#xA;            createdAt&#xA;            flag&#xA;            total&#xA;            &#xA;        }&#xA;    }&#xA; `;&#xA;</code></pre>&#xA;<p>So essentially I am seeing all products, but with quantity of 4 for each. How can I fix this?</p>&#xA;",18045784,,,,2022-05-15 08:38:09,Why I am I getting the same value for a field in all of my array objects for useQuery?,<react-hooks><graphql><apollo-client>,1,0,0,2022-05-15 08:28:34
72247125,1,72538105,,0,282,"<p>Im using postgraphile and i have this query:</p>&#xA;<pre><code>query Products($categories: [String]){&#xA;  products(&#xA;    filter: {&#xA;       category: { in: $categories } &#xA;    }) {&#xA;    id&#xA;    name&#xA;    category&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>is there a way to not use the filter if the $categories array is empty ?</p>&#xA;<p>In case the array is not set or it's empty, i want to get all the results.</p>&#xA;<p>i saw there is an option to pass filter as an argument, but I wonder if there is another support.</p>&#xA;",9608006,,,,2022-06-09 22:47:17,Postgraphil Graphql - how to filter query only if the input is not null and not empty,<graphql><postgraphile>,1,0,0,2022-05-15 09:42:59
72263805,1,,,1,169,"<p>I am trying to scrape AirBNB <strong>by plain HTTP requests</strong> and noticed something.</p>&#xA;<p>Let's say we use this search string: &quot;<em>New York, New York, United States</em>&quot;.</p>&#xA;<p>The simplest working request (striped off from unnecessary headers and fields) I can use to get the desired results is this:</p>&#xA;<pre><code>GET /api/v3/ExploreSections?operationName=ExploreSections&amp;locale=en&amp;currency=USD&amp;variables=%7B%22isInitialLoad%22%3Atrue%2C%22hasLoggedIn%22%3Afalse%2C%22cdnCacheSafe%22%3Afalse%2C%22source%22%3A%22EXPLORE%22%2C%22exploreRequest%22%3A%7B%22metadataOnly%22%3Afalse%2C%22version%22%3A%221.8.3%22%2C%22itemsPerGrid%22%3A20%2C%22placeId%22%3A%22ChIJOwg_06VPwokRYv534QaPC8g%22%2C%22query%22%3A%22New%20York%2C%20New%20York%2C%20United%20States%22%2C%22cdnCacheSafe%22%3Afalse%2C%22screenSize%22%3A%22large%22%2C%22isInitialLoad%22%3Atrue%2C%22hasLoggedIn%22%3Afalse%7D%2C%22removeDuplicatedParams%22%3Atrue%7D&amp;extensions=%7B%22persistedQuery%22%3A%7B%22version%22%3A1%2C%22sha256Hash%22%3A%2282cc0732fe2a6993a26859942d1342b6e42830704b1005aeb2d25f78732275e7%22%7D%7D HTTP/2&#xA;Host: www.airbnb.com&#xA;X-Airbnb-Api-Key: d306zoyjsyarp7ifhu67rjxn52tv0t20&#xA;Accept-Encoding: gzip, deflate&#xA;</code></pre>&#xA;<blockquote>&#xA;<p>At this point, that API key is pretty much public, so not a concern.</p>&#xA;</blockquote>&#xA;<p>The readable content of the &quot;variables&quot; parameter is this:</p>&#xA;<pre><code>{&#xA;  &quot;isInitialLoad&quot;: true,&#xA;  &quot;hasLoggedIn&quot;: false,&#xA;  &quot;cdnCacheSafe&quot;: false,&#xA;  &quot;source&quot;: &quot;EXPLORE&quot;,&#xA;  &quot;exploreRequest&quot;: {&#xA;    &quot;metadataOnly&quot;: false,&#xA;    &quot;version&quot;: &quot;1.8.3&quot;,&#xA;    &quot;itemsPerGrid&quot;: 20,&#xA;    &quot;placeId&quot;: &quot;ChIJOwg_06VPwokRYv534QaPC8g&quot;,&#xA;    &quot;query&quot;: &quot;New York, New York, United States&quot;,&#xA;    &quot;cdnCacheSafe&quot;: false,&#xA;    &quot;screenSize&quot;: &quot;large&quot;,&#xA;    &quot;isInitialLoad&quot;: true,&#xA;    &quot;hasLoggedIn&quot;: false&#xA;  },&#xA;  &quot;removeDuplicatedParams&quot;: true&#xA;}&#xA;</code></pre>&#xA;<p>The readable content of the &quot;extensions&quot; parameter is this:</p>&#xA;<pre><code>{&#xA;  &quot;persistedQuery&quot;: {&#xA;    &quot;version&quot;: 1,&#xA;    &quot;sha256Hash&quot;: &quot;82cc0732fe2a6993a26859942d1342b6e42830704b1005aeb2d25f78732275e7&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I am trying to figure out where that hash comes from.</p>&#xA;<p>It seems it's calculated from a GraphQL query but I don't know anything else and there is no documentation about it.</p>&#xA;<p>Any help?</p>&#xA;",2486638,,2486638,2022-05-17 04:50:20,2022-09-25 22:52:35,"How to set the AirBNB API ""extensions"" parameter?",<web-scraping><graphql><airbnb-js-styleguide>,1,0,0,2022-05-16 18:15:02
72264089,1,,,0,24,"<p>POST graphql Request:</p>&#xA;<p><a href=""https://i.stack.imgur.com/zCKOE.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;<p>RESPONSE:</p>&#xA;<p><a href=""https://i.stack.imgur.com/xBxDy.jpg"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;<p>What is Array, and Promise&lt;Array&gt;&#xA;How to overcome this issue?</p>&#xA;",19130087,,,,2022-05-16 18:39:33,"graphQL error ""Array<key>, and Promise<Array<value>>""",<api><facebook-graph-api><graphql><graphql-js>,0,1,0,2022-05-16 18:39:33
72265586,1,,,0,340,"<p>I have a GraphQL query which is meant to return a full array list containing 9 items, but it's only returning 1 item. This is an Array of Objects.</p>&#xA;<p>If I console log <code>data.dataJson</code> it returns the first Object in the array as an Object, not Array...</p>&#xA;<p>I'm new to using GraphQL so any pointers would be appreciated!</p>&#xA;<p>Query</p>&#xA;<pre><code>export const ProjectsQuery = graphql`&#xA;    query IndexQuery {&#xA;        dataJson {&#xA;            title&#xA;            img &#xA;            type&#xA;            category&#xA;            url&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;",5239110,,5585371,2022-05-17 04:37:27,2022-05-17 04:37:27,GraphQL only returning one item from array instead of all items,<graphql>,1,0,0,2022-05-16 21:01:25
72265748,2,,72265586,0,,<p>So the issue was down to having an unnamed array in the JSON. Changing to the following fixed the issue:</p>&#xA;<pre><code>{&#xA;  &quot;projects&quot;: [&#xA;    {&#xA;      ...&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;,5239110,,,,2022-05-16 21:20:44,"",,0,0,0,2022-05-16 21:20:44
72275936,2,,72275625,0,,<p>GraphQL probably expects a string like this:</p>&#xA;<pre><code>`&#xA;internalDeviceId: &quot;a-nice-uuid&quot;&#xA;`&#xA;</code></pre>&#xA;<p>But you are instead giving it this:</p>&#xA;<pre><code>`&#xA;internalDeviceId: a-nice-uuid&#xA;`&#xA;</code></pre>&#xA;<p>You missed out on the quotes around the template literal:</p>&#xA;<pre><code>`&#xA;internalDeviceId: &quot;${internalDeviceId}&quot;&#xA;`&#xA;</code></pre>&#xA;,18244921,,,,2022-05-17 14:35:08,"",,0,4,0,2022-05-17 14:35:08
72283587,2,,72282495,1,,"<blockquote>&#xA;<p>Problem 1: Why i can't return/access the {post1.categories.nodes.name}&#xA;? It shows nothing on my page.</p>&#xA;</blockquote>&#xA;<p><code>nodes</code> (in <code>post1.categories.nodes.name</code>) is likely to be an array, so you will need to loop through it or access a specific position:</p>&#xA;<pre><code>return &lt;li&gt;{post1.categories.nodes[0].name}&lt;/li&gt;&#xA;</code></pre>&#xA;<p>Depending on your data structure you'll need to loop or just access to the first position. Without knowing your data it's difficult to guess.</p>&#xA;",5585371,,5585371,2022-05-18 05:34:08,2022-05-18 05:34:08,"",,0,4,0,2022-05-18 05:24:14
72301418,1,72312274,,0,261,"<p>I have having trouble trying to fetch dynamic data on Remix run and the shopify storefront api.  I am able to fetch all the products from the API but when I want to get the data of a specific product eg - when you click on one of the products I get the error</p>&#xA;<p>message: &quot;Field 'product' doesn't exist on type 'QueryRoot'&quot;,</p>&#xA;<p>Using the shopify graphql on the website my query works fine but as soon as i try and implement it on remix it does not work</p>&#xA;<pre><code>export async function getProduct(slug: any):Promise&lt;any&gt; {&#xA;  const variable = {id: slug}&#xA;  const URL = `${domain}/api/2021-07/graphql.json`&#xA;  const query = `&#xA;  query GetProductsById($id: ID!) {&#xA;&#xA;  product(id: $id) {&#xA;    title&#xA;     featuredImage {&#xA;       id&#xA;     }&#xA;  }&#xA;}&#xA;  `&#xA;  &#xA;  &#xA;  const options = {&#xA;    endpoint: URL,&#xA;    method: &quot;POST&quot;,&#xA;    headers: {&#xA;      &quot;X-Shopify-Storefront-Access-Token&quot;: storefrontAccessToken,&#xA;      &quot;Accept&quot;: &quot;application/json&quot;,&#xA;      &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;    },&#xA;    body: JSON.stringify({ query, variable })&#xA;  }&#xA;  &#xA;  try {&#xA;    const response: Response = await fetch(URL, options);&#xA;    const data = await response.json()&#xA;    return data&#xA;  &#xA;  &#xA;  } catch (error) {&#xA;  &#xA;    throw new Error(&quot;Products not fetched&quot;)&#xA;  }&#xA;  }&#xA;</code></pre>&#xA;<p>This is the error message</p>&#xA;<pre><code>GET /products/Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0LzY5NjQ2MDEzMjM2NjA=?_data=routes%2Fproducts%2F%24slug 200 - - 25.181 ms&#xA;[1] {&#xA;[1]   errors: [&#xA;[1]     {&#xA;[1]       message: &quot;Field 'product' doesn't exist on type 'QueryRoot'&quot;,&#xA;[1]       locations: [Array],&#xA;[1]       path: [Array],&#xA;[1]       extensions: [Object]&#xA;[1]     },&#xA;[1]     {&#xA;[1]       message: 'Variable $id is declared by GetProductsById but not used',&#xA;[1]       locations: [Array],&#xA;[1]       path: [Array],&#xA;[1]       extensions: [Object]&#xA;[1]     }&#xA;[1]   ]&#xA;[1] } &#xA;</code></pre>&#xA;<p>Does anyone haven idea what i am doing wrong?</p>&#xA;",5743059,,,,2022-05-20 00:12:00,Fetching dynamic data - remix run - storefrontapi - graphql,<graphql><shopify><shopify-api><remix.run>,1,0,0,2022-05-19 08:49:25
72312274,2,,72301418,1,,"<p>I believe there are two issues here:</p>&#xA;<ol>&#xA;<li><code>product</code> doesn't exist in the Storefront API version you're using (<a href=""https://shopify.dev/api/storefront/2021-07/queries/product#examples-Retrieve_a_single_product"" rel=""nofollow noreferrer""><code>2021-07</code></a>), that only got introduced in <code>2021-10</code>. If you can't upgrade you can use <code>node</code> instead, code example below.</li>&#xA;<li>Rename <code>variable</code> to <code>variables</code> in your request.</li>&#xA;</ol>&#xA;<pre><code>query getProductById($id: ID!) {&#xA;  node(id: $id) {&#xA;    ... on Product {&#xA;      title&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3791152,,,,2022-05-20 00:12:00,"",,0,1,0,2022-05-20 00:12:00
72316904,2,,72116464,0,,"<p>take a look on this : <a href=""https://www.prisma.io/docs/concepts/components/prisma-schema/indexes"" rel=""nofollow noreferrer"">https://www.prisma.io/docs/concepts/components/prisma-schema/indexes</a></p>&#xA;<pre><code>model Post {&#xA;  id      Int    @id&#xA;  title   String @db.VarChar(255)&#xA;  content String @db.Text&#xA;&#xA;  @@fulltext([title, content])&#xA;}&#xA;</code></pre>&#xA;",19160397,,3025856,2022-05-21 01:51:59,2022-05-21 01:51:59,"",,0,1,0,2022-05-20 09:52:51
72317621,1,,,0,16,"<pre><code>const query = `&#xA;    query ($productId: String!) {&#xA;      product(id:$productId) {&#xA;        name,&#xA;        inStock,&#xA;        gallery,&#xA;        description,&#xA;        category,&#xA;        attributes{&#xA;          id,&#xA;          name,&#xA;          type,&#xA;          items{&#xA;            displayValue,&#xA;            value,&#xA;            id,&#xA;          }&#xA;        },prices {&#xA;          amount,&#xA;          currency {&#xA;            label,&#xA;            symbol&#xA;          }&#xA;        },brand&#xA;    &#xA;      }&#xA;      &#xA;  }&#xA;  &#xA;    `;&#xA;</code></pre>&#xA;<p>This is my basic query i want to fetch the product using the id now so my question is how can i insert if variable inside the query when i try to do so using the <code>${}</code> it straight away gives me the error probably i am in the way to find how to do this please help</p>&#xA;<p>This is how i am doing query for the product</p>&#xA;<pre><code>fetch(&quot;http://localhost:4000&quot;, {&#xA;            method: &quot;POST&quot;,&#xA;            headers: {&#xA;                &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;                &quot;Accept&quot;: &quot;application/json&quot;,&#xA;                &#xA;            },&#xA;            body: JSON.stringify({&#xA;                query,&#xA;                &#xA;            })&#xA;        }).then(response =&gt; {&#xA;            return response.json();&#xA;        }).then(data =&gt; {&#xA;            this.setState({&#xA;              product:data.data.product,&#xA;            })&#xA;            console.log(data)&#xA;            console.log(typeof(query))&#xA;            &#xA;        })&#xA;</code></pre>&#xA;",16254113,,,,2022-05-20 10:46:27,how to pass variables in graphql query using fetch in javascript,<javascript><reactjs><graphql><graphql-js>,0,0,0,2022-05-20 10:46:27
72324237,1,,,-1,171,"<p>I am writing a GitHub Action to try and automate our (beta) project board. I need to take into account the number of required reviews before I move the issue or PR into the <code>Approved</code> column.</p>&#xA;<p>In trying to get the count of required reviews it always returns nothing. I have run this exact query in the <a href=""https://docs.github.com/en/graphql/overview/explorer"" rel=""nofollow noreferrer"">GitHub GraphQL Explorer</a> and also checked my jq query in this <a href=""https://jqplay.org/s/QISpYx7_VBs"" rel=""nofollow noreferrer"">JQ Play snippet</a>. These both return the correct value (in my test case this is <code>1</code>).</p>&#xA;<p>However when moving this to a GitHub Action it returns: <code>REVIEW_REQUIRED_COUNT= </code></p>&#xA;<p>My expected output is: <code>REVIEW_REQUIRED_COUNT= 1</code></p>&#xA;<p>I have also tried to play around with the GITHUB_TOKEN permissions, as I think this could be the error but to no avail, I have hit a brick wall - please can someone help?</p>&#xA;<pre><code>---&#xA;&#xA;name: MY ACTION&#xA;&#xA;&quot;on&quot;:&#xA;  pull_request:&#xA;    branches: [develop, master]&#xA;&#xA;env:&#xA;  PR_URL: ${{ github.event.pull_request.html_url }}&#xA;  GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}&#xA;&#xA;jobs:&#xA;    my-job:&#xA;      name: My Job &#xA;      runs-on: ubuntu-latest&#xA;      permissions: read-all&#xA;      steps:&#xA;        - name: Get req review count&#xA;          id: review-count&#xA;          run: |&#xA;            gh api graphql -f query='&#xA;              query($pr_url: URI!) {&#xA;                resource(url: $pr_url) {&#xA;                  ... on PullRequest {&#xA;                    baseRepository {&#xA;                      branchProtectionRules(first: 1) {&#xA;                        nodes {&#xA;                          requiredApprovingReviewCount&#xA;                        }&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }'  -f pr_url=$PR_URL &gt; data.json&#xA;            echo 'REVIEW_REQUIRED_COUNT='$(jq '.data.resource.baseRepository.branchProtectionRules.nodes[] | .requiredApprovingReviewCount' data.json) &gt;&gt; $GITHUB_ENV&#xA;&#xA;        - run: env&#xA;&#xA;</code></pre>&#xA;",11678358,,,,2022-05-21 15:12:07,Using GraphQL in a GitHub Action does not return anything for `requiredApprovingReviewCount`,<github><graphql><jq><github-actions>,1,0,0,2022-05-20 19:58:24
72335451,1,,,0,46,"<p>I'm using react-relay and I want to fetch a node with following query.</p>&#xA;<pre><code>node(id: $id) @required(action: THROW) {&#xA;  __typename&#xA;  id&#xA;  ...on user {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And the following code is for fetching.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const { node } = useLazyLoadQuery(query, { id })&#xA;</code></pre>&#xA;<p>When I checked the TypeScript type of <code>node.name</code>, it is <code>string | undefined</code>.&#xA;It's because there is no guarantee that <code>... on user</code> would match. However, in this case, I'm sure that the <code>id</code> given in the query's variable indicates a node of <code>user</code> type.</p>&#xA;<p>How can I assert this condition and make the type <code>string</code> not <code>string | undefined</code>?</p>&#xA;",3584499,,,,2022-05-22 07:00:06,How can I assert type of node in relay,<typescript><graphql><relay>,0,0,0,2022-05-22 07:00:06
72342352,1,,,0,73,"<p>I have written a Graphql backend get API (Query) in nodejs. It gives the desired results but I want the final response structure of my API to look like this.</p>&#xA;<pre><code>{&#xA;&quot;data&quot;: {&#xA;    &quot;status&quot;: &quot;success&quot;,&#xA;    &quot;data&quot;: {&#xA;        &quot;result&quot;: [{&#xA;&#xA;            {&#xA;                &quot;name&quot;: &quot;black&quot;,&#xA;                &quot;rank&quot;: 2,&#xA;                &quot;size&quot;: 5,&#xA;                &quot;query&quot;: [{&#xA;                        &quot;text&quot;: &quot;small&quot;,&#xA;                        &quot;id&quot;: 195,&#xA;&#xA;                    },&#xA;                    {&#xA;                        &quot;text&quot;: &quot;large&quot;,&#xA;                        &quot;id&quot;: 215 ,&#xA;                    }&#xA;                ]&#xA;            }&#xA;        ]&#xA;    },&#xA;},&#xA;&quot;status_code&quot;: 200&#xA;}&#xA;</code></pre>&#xA;<p>I get the data which is there inside inner data.&#xA;Query which I ran is</p>&#xA;<pre><code>{&#xA;result {&#xA;    name, rank, size, queries {&#xA;        text, id &#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>}.</p>&#xA;<p>Below is my graphql schema</p>&#xA;<pre><code>type Query {&#xA;result: [Response!]!&#xA;}&#xA;&#xA;&#xA;type Response{&#xA;name: String,&#xA;rank: Int,&#xA;size: Int,&#xA;queries: [Queries!]!&#xA;&#xA;}&#xA;&#xA;type Queries{&#xA;text: String,&#xA;id: Int,&#xA;}&#xA;</code></pre>&#xA;<p>Can someone help me in achieving the above response structure. i.e How to add status and status_code as mentioned in my response structure.</p>&#xA;",10506380,,,,2022-05-23 01:11:03,Achieving custom response structure of Query Backend API in graphql,<node.js><graphql><graphql-js>,0,0,0,2022-05-23 01:11:03
72352208,1,,,0,335,"<p>We run a shopify store with thousands of products and want to automatically change the order of smart collections using the shopify API.</p>&#xA;<p>In theory, the process is described here: <a href=""https://shopify.dev/api/admin-rest/2022-04/resources/smartcollection#put-smart-collections-smart-collection-id-order?products%5B%5D=921728736&amp;products%5B%5D=632910392"" rel=""nofollow noreferrer"">https://shopify.dev/api/admin-rest/2022-04/resources/smartcollection#put-smart-collections-smart-collection-id-order?products[]=921728736&amp;products[]=632910392</a> using:</p>&#xA;<pre><code>curl -d '{}' \&#xA;-X PUT &quot;https://your-development-store.myshopify.com/admin/api/2022-04/smart_collections/482865238/order.json?products%5B%5D=921728736&amp;products%5B%5D=632910392&quot; \&#xA;-H &quot;X-Shopify-Access-Token: {access_token}&quot; \&#xA;-H &quot;Content-Type: application/json&quot;&#xA;</code></pre>&#xA;<p>However, when trying the put requests this does not seem to work properly. Some products are moved, others seem to be fixed to a certain position.&#xA;The documentation also says</p>&#xA;<blockquote>&#xA;<p>When products is specified but empty, any previously sorted products are cleared.</p>&#xA;</blockquote>&#xA;<p>So I tried the following post requests:</p>&#xA;<pre><code>curl -d '{}' \&#xA;-X PUT &quot;https://your-development-store.myshopify.com/admin/api/2022-04/smart_collections/482865238/order.json?products%5B%5D&quot; \&#xA;-H &quot;X-Shopify-Access-Token: {access_token}&quot; \&#xA;-H &quot;Content-Type: application/json&quot;&#xA;</code></pre>&#xA;<p>and</p>&#xA;<pre><code>curl -d '{&quot;products&quot;:[],&quot;sort_order&quot;:&quot;manual&quot;}' \&#xA;    -X PUT &quot;https://your-development-store.myshopify.com/admin/api/2022-04/smart_collections/482865238/order.json&quot; \&#xA;    -H &quot;X-Shopify-Access-Token: {access_token}&quot; \&#xA;    -H &quot;Content-Type: application/json&quot;&#xA;</code></pre>&#xA;<p>This also does not seem to work.&#xA;There are multiple active threads online on this issue, but I couldn't find an answer.</p>&#xA;<p><a href=""https://community.shopify.com/c/shopify-apis-and-sdks/sorting-smart-collection/td-p/143160"" rel=""nofollow noreferrer"">https://community.shopify.com/c/shopify-apis-and-sdks/sorting-smart-collection/td-p/143160</a>&#xA;<a href=""https://community.shopify.com/c/shopify-apis-and-sdks/changing-the-order-of-products-in-a-smart-collection/td-p/607384"" rel=""nofollow noreferrer"">https://community.shopify.com/c/shopify-apis-and-sdks/changing-the-order-of-products-in-a-smart-collection/td-p/607384</a></p>&#xA;<p>In the second link, a shopify staff is acknowledging the issue and suggests to use the GraphQL.</p>&#xA;<p><strong>Has anyone been able to find a solution for this issue? Or could someone help me with a GraphQL request to change the product order, as I am completely new to GraphQL?</strong></p>&#xA;<p>Thank you!</p>&#xA;",19182406,,,,2022-05-23 16:55:59,How to sort Smart Collections in Shopify using RestAPI or GraphQL,<rest><graphql><shopify><shopify-api>,0,0,0,2022-05-23 16:55:59
72355103,1,,,0,52,"<p>I use <code>ariadne</code> and I have entities that has value. Value can be string, int, boolean, another inputs or list of another inputs. Like that:</p>&#xA;<pre><code>value: 1&#xA;value: &quot;Hello World!&quot;&#xA;value: true&#xA;value: {&#xA;    country: &quot;UA&quot;&#xA;    city: &quot;Kyiv&quot;&#xA;}&#xA;value: [{date: &quot;22.01.2003&quot;, time:&quot;11:14&quot;}, {date: &quot;24.05.2022&quot;, time: &quot;00:41&quot;}]&#xA;</code></pre>&#xA;<p>Can I use something like union types in graphql types but in inputs?</p>&#xA;<pre><code>union ValueUnion = Int | String | ...&#xA;input EntityInput {&#xA;    value: ValueUnion&#xA;}&#xA;</code></pre>&#xA;",17614576,,,,2022-05-23 22:31:03,Something like union in input fields graphql,<graphql><ariadne-graphql>,0,0,0,2022-05-23 21:44:40
72360431,1,,,0,54,"<p>I'm trying to upload new products to Shopify from my own database.  So far I've managed to upload the basic product information and images successfully, but I'm stuck on how to update the Google Merchant attributes.</p>&#xA;<p>Does anyone know how to add these programatically, e.g. 'Custom Product', 'Google product category', 'Age group' etc?</p>&#xA;<p>I can't find anything in the Shopify documentation, but it seems unlikely that everyone is just manually editing these attributes product-by-product</p>&#xA;",2586765,,,,2022-05-24 09:26:09,Updating Shopify Google attributes via the GraphQL API,<graphql><shopify>,0,0,0,2022-05-24 09:26:09
72373267,2,,72372891,0,,"<p>I think the issue is that you are writing Map with uppercase m, try this</p>&#xA;<pre><code>module.exports = {&#xA;   products: async (args, req) =&gt; {&#xA;        try {&#xA;            const products = await Product.find()&#xA;            if (!products) {&#xA;                const error = new Error(&quot;Could not find product!&quot;);&#xA;                error.statusCode = 404;&#xA;                throw error;&#xA;            }&#xA;            return {&#xA;                Product: products.map((product) =&gt; {&#xA;                    return { ...product._doc , _id: product._id.toString() }&#xA;                })&#xA;            }&#xA;        }&#xA;        catch (err) {&#xA;            throw err;&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",8933024,,,,2022-05-25 07:08:25,"",,0,2,0,2022-05-25 07:08:25
72379580,1,,,1,110,"<p><em>Ether by using the GraphQL (Preferred but seems unlikely), REST API, or by any other means.</em></p>&#xA;<p>Ideally it would be possible to commit the LFS objects and regular objects in the same commit.</p>&#xA;<hr />&#xA;<p>I have been using the GraphQL API to successfully query and download LFS objects. I was hoping that it would be possible to also create commits that contain LFS objects.</p>&#xA;<p>Unfortunately it seems like <code>createCommitOnBranch</code> doesn't provide a documented way of doing that. So I am left with looking for alternatives.</p>&#xA;<hr />&#xA;<p>A version of this question is in the Github Community GraphQL category: <a href=""https://github.community/t/create-a-commit-containing-lfs-data-via-graphql/252637"" rel=""nofollow noreferrer"">https://github.community/t/create-a-commit-containing-lfs-data-via-graphql/252637</a></p>&#xA;",432245,,432245,2022-05-25 15:07:47,2022-05-25 15:07:47,Programmatically create a commit containing Git-LFS data to a Github Repository,<github><graphql><github-actions><github-api><git-lfs>,0,0,0,2022-05-25 14:32:29
72389794,1,,,0,170,"<p>I'm trying to fetch data in typescript from Github GraphQL API.</p>&#xA;<p>I have correct <code>QUERY</code> and working <code>GitHub token</code>, yet I get a weird response.</p>&#xA;<p>My query:</p>&#xA;<pre><code>query { &#xA;  repositoryOwner(login: &quot;myUsername&quot;){&#xA;    repository(name: &quot;repoName&quot;){&#xA;      forks(first: 10) {&#xA;        totalCount&#xA;      }&#xA;      stargazers(first:10) {&#xA;        totalCount&#xA;      }&#xA;      watchers(first: 10) {&#xA;        totalCount&#xA;      }&#xA;     pullRequests(states: OPEN){&#xA;      totalCount&#xA;        }&#xA;      issues(states: OPEN){&#xA;      totalCount&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>My code:</p>&#xA;<pre><code>export const getStringContentAsync = async () =&gt; {&#xA;  return await fetch(githubGraphQlUrl, {&#xA;    method: &quot;POST&quot;,&#xA;    headers: {&#xA;      &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;      Authorization: &quot;bearer &quot; + token,&#xA;    },&#xA;    body: JSON.stringify({ query: QUERY }),&#xA;  })&#xA;    .then((response) =&gt; response.json())&#xA;    .then((data) =&gt; {&#xA;      console.log(data);&#xA;    })&#xA;    .catch((error) =&gt; console.error(error));&#xA;};&#xA;</code></pre>&#xA;<p>Response I get:</p>&#xA;<pre><code>{ data: { repositoryOwner: { repository: [Object] } } }&#xA;</code></pre>&#xA;",17730922,,3689450,2022-05-26 09:42:37,2022-05-26 09:42:37,Fetching Github API data in Typescript returns [Object],<typescript><graphql><fetch-api><github-api>,0,1,0,2022-05-26 09:42:16
72395958,1,,,0,220,"<p>I'm having a strange behaviour when I enable Datadog Continuous Profiling in my Node.js application.</p>&#xA;<p>Here is my <code>dd-trace.init</code></p>&#xA;<pre><code>require('dd-trace').init({&#xA;    enabled: true.&#xA;    env: process.env.NODE_ENV,&#xA;    profiling: true,&#xA;    logInjection: true&#xA;}&#xA;</code></pre>&#xA;<p>When profiling is <code>false</code> I see this kind of trace list:&#xA;<a href=""https://i.stack.imgur.com/CTsM4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CTsM4.png"" alt=""profiling false"" /></a></p>&#xA;<p>When profiling is <code>true</code> I see this one:&#xA;<a href=""https://i.stack.imgur.com/Ed2iv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ed2iv.png"" alt=""profiling true"" /></a></p>&#xA;<p>Except the different colors of the traces, the main issue is that with <code>profiling: true</code> I see all the requests grouped under <code>POST /graphql</code>, instead, with <code>profiling: false</code> I see another service specific for GraphQL that list all the transaction names which is obviously very useful. I need profiling enabled to access a Flame Graph to analyze a memory leak.</p>&#xA;",509970,,,,2022-05-26 17:43:03,Datadog Continuous Profiling breaks APM,<graphql><datadog>,0,0,0,2022-05-26 17:43:03
72426177,2,,72421771,1,,"<h2>Debugging</h2>&#xA;<p>To debug the server side, use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining"" rel=""nofollow noreferrer"">optional chaining</a> and <a href=""https://developer.mozilla.org/en-US/docs/Web/API/console/log"" rel=""nofollow noreferrer""><code>console.log</code></a> to work your way up to the object's that returning null.</p>&#xA;<p>Not sure what the exact code looks like, based on question.</p>&#xA;<pre><code>const myQuery = graphql`&#xA;  query GetPromoProducts {&#xA;    allStrapiProduct(filter: { promo: { eq: true } }) {&#xA;      edges {&#xA;        node {&#xA;          strapiId&#xA;          name&#xA;          variants {&#xA;            images {&#xA;              url&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;const Component = () =&gt; {&#xA;  const [selectedSlides, setSelectedSlides] = useState(0);&#xA;&#xA;  console.log(data);&#xA;&#xA;  data.allStrapiProduct.edges.map(({ node }) =&gt; {&#xA;    // For this case, use optional chaining to work your way up the tree&#xA;    console.log(node);&#xA;    console.log(node?.variants);&#xA;    console.log(node?.variants?.[0]);&#xA;    console.log(node?.variants?.[0]?.images);&#xA;    console.log(node?.variants?.[0]?.images?.[0]);&#xA;  });&#xA;};&#xA;</code></pre>&#xA;<p>To stop right at the area this happens:</p>&#xA;<pre><code>data.allStrapiProduct.edges.map(({ node }) =&gt; {&#xA;  if (!node?.variants?.[0]?.images?.length) {&#xA;    console.log(node);&#xA;    console.log(node?.variants);&#xA;    console.log(node?.variants?.[0]);&#xA;    console.log(node?.variants?.[0]?.images);&#xA;    console.log(node?.variants?.[0]?.images?.[0]);&#xA;    throw &quot;Required data missing&quot;;&#xA;  }&#xA;});&#xA;</code></pre>&#xA;<h2>Resilient React with GraphQL</h2>&#xA;<p>GraphQL structured data may be typed, but unless the fields are required, you have to handle <code>null</code>.</p>&#xA;<p>To make the client-side code more robust, you can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter"" rel=""nofollow noreferrer""><code>Array.prototype.filter()</code></a> to skip objects with no images, or - as in this example - make components handle the case where data is missing. It's entirely up to how you want the frontend app to render it.</p>&#xA;<p>I haven't tested this code, so take it as &quot;pseudo-JSX&quot; to demonstrate handling empty graphql response fields.</p>&#xA;<pre><code>const ProductVariant = ({ variant }) =&gt; {&#xA;  if (!variant) return null;&#xA;&#xA;  return (&#xA;    &lt;div className=&quot;variant&quot;&gt;&#xA;      {variant?.images?.map?.((image, idx) =&gt; (&#xA;        &lt;img src={url} key={idx} /&gt;&#xA;      ))}&#xA;    &lt;/div&gt;&#xA;  );&#xA;};&#xA;&#xA;const ProductVariants = ({ variants }) =&gt; {&#xA;  if (!variants?.length &gt; 0) return null;&#xA;&#xA;  return (&#xA;    &lt;div className=&quot;variant-list&quot;&gt;&#xA;      &lt;div&gt;Variants&lt;/div&gt;&#xA;      &lt;div className=&quot;variant-list--items&quot;&gt;&#xA;        {variants?.map?.((variant, idx) =&gt; (&#xA;          &lt;ProductVariant variant={variant} key={idx} /&gt;&#xA;        ))}&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;  );&#xA;};&#xA;&#xA;const Products = () =&gt; {&#xA;  const [selectedSlides, setSelectedSlides] = useState(0);&#xA;&#xA;  console.log(data);&#xA;&#xA;  const products = data.allStrapiProduct.edges.map(({ node }) =&gt; {&#xA;    // Handle as you deem fit&#xA;  });&#xA;&#xA;  return (&#xA;    &lt;div id=&quot;products&quot;&gt;&#xA;      &lt;p&gt;Here is a list of products&lt;/p&gt;&#xA;      &lt;div className=&quot;products&quot;&gt;&#xA;        {products?.map?.((product, idx) =&gt; {&#xA;          return (&#xA;            &lt;div className=&quot;product&quot; key={idx}&gt;&#xA;              {product?.variants?.length &gt; 1 &amp;&amp; (&#xA;                &lt;ProductVariants variants={variants} /&gt;&#xA;              )}&#xA;            &lt;/div&gt;&#xA;          );&#xA;        })}&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;  );&#xA;};&#xA;</code></pre>&#xA;",1396928,,1396928,2022-05-29 18:34:56,2022-05-29 18:34:56,"",,0,0,0,2022-05-29 18:17:42
72436452,1,,,0,215,"<p>I have created PowerShell script using GitHub CLI to create a repository branching rule:</p>&#xA;<pre><code>[cmdletbinding()]&#xA;param(&#xA;    [parameter(Mandatory=$true)]&#xA;    [string]$Organisation,&#xA;    [parameter(Mandatory=$true)]&#xA;    [string]$Repository,    &#xA;    [hashtable]$Properties = [ordered]@{&#xA;        allowsDeletions='false'&#xA;        allowsForcePushes='false'&#xA;        blocksCreations='false'&#xA;        dismissesStaleReviews='true'&#xA;        isAdminEnforced='true'&#xA;        requiredApprovingReviewCount=1 &#xA;        requiresApprovingReviews='true'&#xA;        requiresCodeOwnerReviews='false'&#xA;        requiresCommitSignatures='false'&#xA;        requiresConversationResolution='true'&#xA;        requiresLinearHistory='false'&#xA;        requiresStatusChecks='true'&#xA;        requiresStrictStatusChecks='true'&#xA;        restrictsPushes='false'&#xA;        restrictsReviewDismissals='false'&#xA;    },&#xA;    [parameter(Mandatory=$false)]&#xA;    [string]$BranchPattern = '[mp][ar][ise][ntp]*',&#xA;    [string]$Hostname = 'github.com'&#xA;)&#xA;&#xA;$repo = &quot;repos/$Organisation/$Repository&quot;&#xA;$repoNodeId = $(gh api --hostname &quot;$hostname&quot; $repo --jq .node_id)&#xA;Write-Debug &quot;`$repo = '$repo'; `$repoNodeId = $repoNodeId&quot;&#xA;&#xA;$graphQl = @&quot;&#xA;mutation createBranchProtectionRule {&#xA;    createBranchProtectionRule(input: {&#xA;        repositoryId: &quot;$repoNodeId&quot;&#xA;        pattern: &quot;$BranchPattern&quot;&#xA;        $($(foreach($p in $Properties.GetEnumerator()){&quot;$($p.Name): $($p.Value)&quot;}) -join &quot;`n`t&quot;)&#xA;    }){&#xA;        branchProtectionRule {&#xA;            allowsDeletions&#xA;            allowsForcePushes&#xA;            creator { login }&#xA;            databaseId&#xA;            dismissesStaleReviews&#xA;            isAdminEnforced&#xA;            pattern&#xA;            repository { nameWithOwner }&#xA;            requiredApprovingReviewCount&#xA;            requiresApprovingReviews&#xA;            requiredStatusCheckContexts&#xA;            requiresCodeOwnerReviews&#xA;            requiresCommitSignatures&#xA;            requiresLinearHistory&#xA;            requiresStatusChecks&#xA;            requiresStrictStatusChecks&#xA;            restrictsPushes&#xA;            restrictsReviewDismissals&#xA;        }&#xA;        clientMutationId&#xA;    }&#xA;}&#xA;&quot;@&#xA;&#xA;Write-Debug $graphQl&#xA;&#xA;gh api --hostname &quot;$Hostname&quot; graphql -F query=&quot;$graphQl&quot;&#xA;</code></pre>&#xA;<p>The <a href=""https://docs.github.com/en/graphql/reference/input-objects#createbranchprotectionruleinput"" rel=""nofollow noreferrer"">mutation createBranchProtectionRule</a> is syntactically correct, because when I copy the content of the <code>$graphQl</code> variable and execute it in <a href=""https://docs.github.com/en/graphql/overview/explorer"" rel=""nofollow noreferrer"">GitHub GraphQL explorer</a> it works just fine. However, I keep getting the following parsing error when <code>gh api --hostname &quot;$Hostname&quot; graphql -F query=&quot;$graphQl&quot;</code> is executed:</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Parse error on \&quot;[\&quot; (LBRACKET) at [4, 22]&quot;,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 4,&#xA;          &quot;column&quot;: 22&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>Note I am using <a href=""https://riptutorial.com/powershell/example/20569/here-string"" rel=""nofollow noreferrer"">here-string</a> variable for the graph QL query and I can gather the parsing error is to do with the <code>pattern</code> value, however it makes no sense to escape the square brackets?... What am I missing...</p>&#xA;",269733,,269733,2022-06-02 08:08:09,2022-07-26 20:17:45,"Using PowerShell to execute GitHub CLI GraphQL query: Parse error on \""[\"" (LBRACKET) at [4, 22]",<powershell><graphql><github-cli>,2,0,0,2022-05-30 15:06:46
72437076,1,,,1,158,"<p>I'm playing with GitHub GraphQL API in order to get the list of most commented issues (say, comments &gt; 100) across most popular repositories.</p>&#xA;<p>Here's the search query that I'm starting from:</p>&#xA;<pre><code>search(query: &quot;stars:&gt;10000 fork:false pushed:&gt;2020-01-01 is:public mirror:false archived:false&quot;, type: REPOSITORY)&#xA;</code></pre>&#xA;<p>So far so good, except that it looks like this high level GitHub search doesn't provide any filters related to issues and comments: I can't filter out repos that don't have issues at all, nor can I set a threshold for the number of comments.</p>&#xA;<p>Then I try to see if there's a filter specific to the list of issues, but it seems that the <code>filterBy</code> for <code>issues</code> doesn't provide any way to filter by comments or related activity:</p>&#xA;<pre><code>    search(query: &quot;stars:&gt;10000 fork:false pushed:&gt;2020-01-01 is:public mirror:false archived:false&quot;, type: REPOSITORY) {&#xA;    repositoryCount&#xA;    nodes {&#xA;        ... on Repository {&#xA;            issues(first: 100, filterBy: { &lt;!-- Nothing useful here--&gt; }, orderBy: {field: CREATED_AT, direction: ASC}) {&#xA;                totalCount&#xA;                edges {&#xA;                    node {&#xA;                        title&#xA;                        comments {&#xA;                            totalCount&#xA;                        }&#xA;                        id&#xA;                        number&#xA;                    }&#xA;                }&#xA;             }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Am I missing something obvious, or do I really need to get <em>all</em> issues from the API and then process the result locally to strip away issues that have less than 100 comments?</p>&#xA;",226537,,,,2022-05-30 15:58:42,GitHub GraphQL API: only get issues that have over n comments,<graphql><github-api><github-api-v4>,0,0,0,2022-05-30 15:58:42
72450624,1,72451492,,1,806,"<p>I am building a headless shopify site using remix.  Fro reading the documentation on storefront in order for you to do a a checkout you must create a cart and send a post request to the api.</p>&#xA;<p>I am sending this graphql request which I found off the official docs to create a cart <a href=""https://shopify.dev/api/examples/cart"" rel=""nofollow noreferrer"">https://shopify.dev/api/examples/cart</a>.  Where the merchadise id is the id I get back from when i call get products</p>&#xA;<pre><code>mutation {&#xA;  cartCreate(&#xA;    input: {&#xA;      lines: [&#xA;        {&#xA;          quantity: 2&#xA;          merchandiseId: &quot;gid://shopify/ProductVariant/6964601651340&quot;&#xA;        }&#xA;      ]&#xA;      attributes: { key: &quot;cart_attribute&quot;, value: &quot;This is a cart attribute&quot; }&#xA;    }&#xA;  ) {&#xA;    cart {&#xA;      id&#xA;      createdAt&#xA;      updatedAt&#xA;      lines(first: 10) {&#xA;        edges {&#xA;          node {&#xA;            id&#xA;            merchandise {&#xA;              ... on ProductVariant {&#xA;                id&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;&#xA;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Here is a response of getProducts</p>&#xA;<pre><code>{&#xA;  &quot;node&quot;: {&#xA;    &quot;id&quot;: &quot;gid:\/\/shopify\/Product\/6964601651340&quot;,&#xA;    &quot;handle&quot;: &quot;vans-authentic-butterfly-true-white-black&quot;,&#xA;    &quot;title&quot;: &quot;VANS | AUTHENTIC (BUTTERFLY) TRUE | WHITE \/ BLACK&quot;,&#xA;    &quot;description&quot;: &quot;The forefather of the Vans family, the Vans Authentic was introduced in 1966 and nearly 4 decades later is still going strong, its popularity extending from the original fans - skaters and surfers to all sorts. The Vans Authentic is constructed from canvas and Vans' signature waffle outsole construction.&quot;,&#xA;    &quot;variants&quot;: {&#xA;      &quot;edges&quot;: [&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;price&quot;: &quot;109.95&quot;&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>If I change &quot;gid://shopify/ProductVariant/6964601651340&quot; to  gid://shopify/Product/6964601651340 - i get invalid id.  But if I make the request with productVariant I get the response</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;cartCreate&quot;: {&#xA;      &quot;cart&quot;: null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>what am I doing wrong - how do i create a cart?</p>&#xA;",5743059,,,,2022-05-31 16:49:13,How to create a cart on the shopify storefront API,<graphql><shopify>,1,0,0,2022-05-31 15:39:43
72451492,2,,72450624,2,,"<p>You need to use the id of the Variant. Not the product.</p>&#xA;<p>Each product (Vans) can have several variants, typically sizes and colors (39 black,40 black, 39 red etc)</p>&#xA;<p>You can retrive the Variant id with a query like this</p>&#xA;<pre><code>{&#xA;  products(first:100){&#xA;    edges{&#xA;      node{&#xA;        variants(first:100){&#xA;          edges{&#xA;            node{&#xA;              id&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",343794,,,,2022-05-31 16:49:13,"",,0,0,0,2022-05-31 16:49:13
72463761,1,,,-1,146,"<p>I'm building my first Contentful project. In the Contentful demo setups they are using emojis in the content type names. I have also got this recommendation from a contentful representative. And it seems like a good idea to keep your content types organized:</p>&#xA;<p><a href=""https://i.stack.imgur.com/S6NNN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/S6NNN.png"" alt=""Content type names"" /></a></p>&#xA;<p>The app should be run on GatsbyJS. So I initiated a</p>&#xA;<pre><code>npx gatsby new gatsby-starter-contentful-homepage https://github.com/gatsbyjs/gatsby-starter-contentful-homepage&#xA;</code></pre>&#xA;<p>I have also setup the gatsby-config.js for <code>gatsby-source-contentful</code> like so:</p>&#xA;<pre><code>{&#xA;      resolve: `gatsby-source-contentful`,&#xA;      options: {&#xA;        spaceId: process.env.CONTENTFUL_SPACE_ID,&#xA;        accessToken: process.env.CONTENTFUL_CDA_TOKEN,&#xA;      },&#xA;}&#xA;</code></pre>&#xA;<p>But when I run <code>gatsby develop</code> I get this GraphQL error. It seems like emojis can't be used in Contentful content type names together with Gatsby.</p>&#xA;<pre><code>info Contentful: 0 deleted assets&#xA;info Creating 1 Contentful Link nodes&#xA;info Creating 1 Contentful ✨ Contact me form (not in beta) nodes&#xA;info Creating 1 Contentful ✨ Framework nodes&#xA;info Creating 1 Contentful ✨ Office nodes&#xA;info Creating 1 Contentful  Editorial card (not in beta) nodes&#xA;info Creating 7 Contentful  Common page nodes&#xA;info Creating 4 Contentful ✨ Product structure item nodes&#xA;info Creating 1 Contentful  Category list nodes&#xA;info Creating 1 Contentful  Product list nodes&#xA;info Creating 1 Contentful  Article page nodes&#xA;info Creating 1 Contentful ✨ Ecom common nodes&#xA;info Creating 1 Contentful  Cart nodes&#xA;info Creating 1 Contentful ✨ Checkout - Unloading nodes&#xA;info Creating 1 Contentful  Checkout nodes&#xA;info Creating 1 Contentful ✨ Checkout - Delivery time nodes&#xA;info Creating 1 Contentful ✨ Checkout - Delivery address nodes&#xA;info Creating 1 Contentful ✨ Checkout - Delivery recipient nodes&#xA;info Creating 1 Contentful  Favorites nodes&#xA;info Creating 1 Contentful  Rich text nodes&#xA;info Creating 1 Contentful  Order confirmed nodes&#xA;info Creating 6 Contentful asset nodes&#xA;success Contentful: Create nodes - 0.205s&#xA;success Contentful: Process data - 0.237s&#xA;success Checking for changed pages - 0.002s&#xA;success source and transform nodes - 1.098s&#xA;&#xA; ERROR &#xA;&#xA;Missing onError handler for invocation 'building-schema', error was 'Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but&#xA;&quot;Contentful✨ContactMeFormNotInBeta&quot; does not.'. Stacktrace was 'GraphQLError: Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but&#xA;&quot;Contentful✨ContactMeFormNotInBeta&quot; does not.&#xA;    at isValidNameError (C:\customername\node_modules\graphql\utilities\assertValidName.js:42:12)&#xA;    at assertValidName (C:\customername\node_modules\graphql\utilities\assertValidName.js:21:15)&#xA;    at checkIsAllowedTypeName (C:\customername\node_modules\gatsby\src\schema\schema.js:619:3)&#xA;    at forEach (C:\customername\node_modules\gatsby\src\schema\schema.js:297:9)&#xA;    at Array.forEach (&lt;anonymous&gt;)&#xA;    at addTypes (C:\customername\node_modules\gatsby\src\schema\schema.js:258:9)&#xA;    at updateSchemaComposer (C:\customername\node_modules\gatsby\src\schema\schema.js:130:9)&#xA;    at buildSchema (C:\customername\node_modules\gatsby\src\schema\schema.js:71:9)&#xA;    at build (C:\customername\node_modules\gatsby\src\schema\index.js:112:18)&#xA;    at buildSchema (C:\customername\node_modules\gatsby\src\services\build-schema.ts:19:3)'&#xA;</code></pre>&#xA;<p>Has anyone had this issue before?</p>&#xA;<p>Should I remove the emojis or am I missing something?</p>&#xA;",790522,,5585371,2022-06-02 16:28:33,2022-06-02 16:28:33,Gatsby/GraphQL throws error when using emojis in Contentful content type name,<graphql><gatsby><contentful><gatsby-plugin>,1,1,0,2022-06-01 14:41:03
72470257,2,,70831288,0,,"<p>I use <a href=""https://www.npmjs.com/package/shopify-api-node"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/shopify-api-node</a>, it has support for GraphQL calls. <a href=""https://insomnia.rest/"" rel=""nofollow noreferrer"">https://insomnia.rest/</a> has great GraphQL support, with field hinting, query eval etc.</p>&#xA;<p>An example of creating a product with a private metafield:</p>&#xA;<pre><code>mutation productCreate($input: ProductInput!, $namespace: String!) {&#xA;    productCreate(input: $input) {&#xA;        product {&#xA;            id&#xA;            bufferProductId: privateMetafield(&#xA;                key: &quot;your_field_key&quot;&#xA;                namespace: $namespace&#xA;            ) {&#xA;                value&#xA;            }&#xA;            tags&#xA;            variants(first: 10) {&#xA;                edges {&#xA;                    node {&#xA;                        id&#xA;                        sku&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;        userErrors {&#xA;            field&#xA;            message&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>You need to pass these variables to the GraphQL query:</p>&#xA;<pre><code>{&#xA;    &quot;input&quot;: {&#xA;        &quot;title&quot;: &quot;Your product name&quot;,&#xA;        &quot;options&quot;: [&#xA;            &quot;Size&quot;,&#xA;            &quot;Colour&quot;&#xA;        ],&#xA;        &quot;handle&quot;: &quot;your-product-name&quot;,&#xA;        &quot;tags&quot;: [&#xA;            &quot;Product tag&quot;&#xA;        ],&#xA;        &quot;vendor&quot;: &quot;Lauri's sportin' goods&quot;,&#xA;        &quot;variants&quot;: [&#xA;            {&#xA;                &quot;sku&quot;: &quot;ABC123XL&quot;,&#xA;                &quot;options&quot;: [&#xA;                    &quot;Large&quot;,&#xA;                    &quot;Blue&quot;&#xA;                ]&#xA;            },&#xA;            {&#xA;                &quot;sku&quot;: &quot;ABC123L&quot;,&#xA;                &quot;options&quot;: [&#xA;                    &quot;Large&quot;,&#xA;                    &quot;Yellow&quot;&#xA;                ]&#xA;            }&#xA;        ],&#xA;        &quot;privateMetafields&quot;: [&#xA;            {&#xA;                &quot;key&quot;: &quot;your_field_key&quot;,&#xA;                &quot;namespace&quot;: &quot;your_namespace&quot;,&#xA;                &quot;valueInput&quot;: {&#xA;                    &quot;value&quot;: &quot;Your field value&quot;,&#xA;                    &quot;valueType&quot;: &quot;STRING&quot;&#xA;                }&#xA;            }&#xA;        ]&#xA;    },&#xA;    &quot;namespace&quot;: &quot;your_namespace&quot;&#xA;}&#xA;</code></pre>&#xA;<p>This will return the private metafield value in the product creation response.&#xA;A few things that make private metafields different from public ones:</p>&#xA;<ul>&#xA;<li>you can add / update the private metafield over and over using ProductUpdate, whereas</li>&#xA;<li>you can only access the private metafields through GraphQL. AFAIK, they're not visible anywhere in the Shopify Admin, or using the REST API.</li>&#xA;<li>even with GraphQL, those fields will be visible <em>only to the API key that created them.</em> So, you won't see them with another Shopify App.</li>&#xA;</ul>&#xA;<p>You can use <a href=""https://shopify.dev/api/admin-graphql/2022-04/enums/PrivateMetafieldValueType"" rel=""nofollow noreferrer"">these field types</a> to set the private metafield values.</p>&#xA;",3126516,,,,2022-06-02 03:15:38,"",,0,0,0,2022-06-02 03:15:38
72475765,1,,,0,1352,"<p>Note: I'm new to GraphQL.</p>&#xA;<p>Challenge: I use the Shopify Storefront API to create a selectbox of all our products. When a user selects a product in this selectbox, its metafields should be displayed on the page.</p>&#xA;<p>I managed to create that selectbox. But how would i display the product-specific data when a choice was made in the selectbox? See current code:</p>&#xA;<pre><code>function apiCall(productQuery) { &#xA;    return fetch('https://store//api/2022-04/graphql.json', &#xA;        { &#xA;            method: 'POST', &#xA;            headers: { &#xA;                'Content-Type': 'application/graphql', &#xA;                'X-Shopify-Storefront-Access-Token': &quot;xxx&quot; &#xA;            }, &#xA;            &quot;body&quot;: productQuery &#xA;        }&#xA;    )&#xA;    .then(&#xA;        response =&gt; response.json()&#xA;    ); &#xA;}&#xA;&#xA;function getProducts() { &#xA;    const productQuery = `{ products(first: 250) { edges { node { id handle title } } } }`; &#xA;    return apiCall(productQuery); &#xA;}&#xA;&#xA;$(document).ready(function() { &#xA;    const product_selector_container = $('.product_selector_container'); &#xA;    getProducts().then(response =&gt; { &#xA;        product_selector_container.prepend(&quot;&lt;select name='product_compatibility_selector' id='product_compatibility_selector'&gt;&lt;/select&gt;&quot;); &#xA;        const productSelect = $('#product_compatibility_selector');&#xA;        const productSelectResult = $(&quot;#product_compatibility_result&quot;);&#xA;        response.data.products.edges.forEach(product =&gt; { &#xA;            const optionValues = `&lt;option value=&quot;${product.node.handle}&quot;&gt;${product.node.title}&lt;option&gt;`; &#xA;            productSelect.append(optionValues); &#xA;        }); &#xA;        &#xA;        $(&quot;#product_compatibility_selector&quot;).on('change', function() {&#xA;            var selected = $(this).find('option:selected').text();&#xA;            var selectedVal = $(this).find('option').val();&#xA;            $(&quot;.chosen_product_title&quot;).text(selected);&#xA;            response.data.products.edges.forEach(product =&gt; { &#xA;                // HOW DO I REFERENCE THE CURRENT CHOSEN PRODUCT TO OUTPUT VARIOUS NODES?&#xA;                const compatibility_result = `${product.node.title}`;&#xA;                productSelectResult.append(compatibility_result);&#xA;            });&#xA;        });&#xA;    });  &#xA;}); &#xA;</code></pre>&#xA;",1136921,,,,2022-06-02 20:40:54,Shopify storefront API GraphQL: How to get specific product data?,<graphql><shopify><shopify-storefront-api>,1,0,0,2022-06-02 11:47:04
72478543,2,,72475765,0,,"<p>Now that you have the handle of the selected produt to retrieve all the metafields of that produt you need to run another query, using the &quot;query&quot; parameter, something like this</p>&#xA;<pre><code>{&#xA;  products(first: 1, query:&quot;handle:your-handle&quot;){&#xA;    edges{&#xA;      node{&#xA;        metafields(first:10){&#xA;          edges{&#xA;            node{&#xA;              value&#xA;              key&#xA;            }&#xA;          }&#xA;        }&#xA;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>or</p>&#xA;<pre><code>{&#xA;  product(handle:&quot;your_handle&quot;){&#xA;    title&#xA;    metafield(key:&quot;your_key&quot;, namespace:&quot;your_space&quot;){&#xA;      value&#xA;    }&#xA;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>If you want to parametrize your handle you may want to introduce variables in your query, like this</p>&#xA;<pre><code>query($handle:String){&#xA;  product(handle:$handle){&#xA;    title&#xA;    metafield(key:&quot;x&quot;,namespace:&quot;y&quot;){&#xA;      id&#xA;      value&#xA;    }&#xA;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and with the variable object being like</p>&#xA;<pre><code>{&quot;handle&quot;:&quot;your-handle&quot;}&#xA;</code></pre>&#xA;<p>In the request instead of just sending the query you send an object like</p>&#xA;<pre><code>{&quot;query&quot; : your-query, &quot;variables&quot; : variable-object}&#xA;</code></pre>&#xA;",343794,,343794,2022-06-02 20:40:54,2022-06-02 20:40:54,"",,0,4,0,2022-06-02 15:16:40
72479414,2,,72463761,0,,"<p>The issue is quite self-explanatory:</p>&#xA;<blockquote>&#xA;<p>Missing onError handler for invocation 'building-schema', error was&#xA;'Names must match /^[_a-zA-Z][_a-zA-Z0-9]<em>$/ but&#xA;&quot;Contentful✨ContactMeFormNotInBeta&quot; does not.'. Stacktrace was&#xA;'GraphQLError: Names must match /^[_a-zA-Z][_a-zA-Z0-9]</em>$/ but&#xA;&quot;Contentful✨ContactMeFormNotInBeta&quot; does not.</p>&#xA;</blockquote>&#xA;<p>My guess is that the error will be gone when you remove the emoji since they are Unicode types that won't validate the following regular expression: <code>/^[_a-zA-Z][_a-zA-Z0-9]*$/</code></p>&#xA;",5585371,,,,2022-06-02 16:28:22,"",,0,2,0,2022-06-02 16:28:22
72487038,2,,48331103,0,,"<p>I was getting the same error. In my case putting the id inside double quote solved the issue as the type of id required string value.</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>{&#xA;        product(id: ""${id}"") {&#xA;            name&#xA;        }&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",17603089,,,,2022-06-03 08:49:29,"",,0,0,0,2022-06-03 08:49:29
72488361,1,,,0,52,"<p><strong>What I am trying to do</strong></p>&#xA;<p>I have a type of Category and a type of Product. I want to be able to filter the products, by the category. For example, I want to be able to see only the products that are of Category &quot;Mixed Drink&quot;. When in Apollo Studio I am unable to do this.</p>&#xA;<p><strong>What I tried</strong>&#xA;This is in my TypeDef file</p>&#xA;<pre><code>type Category {&#xA;        id:ID&#xA;        name: String&#xA;        product: [Product]&#xA;    },&#xA;&#xA;    type Product {&#xA;        id: ID&#xA;        name: String&#xA;        description: String&#xA;        ingredients: [String]&#xA;        moveActive: Boolean&#xA;        price: Float&#xA;        category: [Category]&#xA;    },&#xA;&#xA;    input productsByCategoryFilter {&#xA;        id: ID&#xA;        name: String&#xA;        description: String&#xA;        ingredients: [String]&#xA;        moveActive: Boolean&#xA;        price: Float&#xA;    }&#xA;type Query {&#xA;       &#xA;        productsByCategory(category: productsByCategoryFilter): [Product]&#xA;             &#xA;    },&#xA;</code></pre>&#xA;<p>What I thought this would do is create an input field that I could put as an argument to get back an array of all the products. However, this isn't working.</p>&#xA;<p>Here is my resolver function for this.</p>&#xA;<pre><code>productsByCategory:(_parent:any, {category}, context: Context) =&gt; {&#xA;        return context.prisma.product.findMany({&#xA;            where: {&#xA;                category&#xA;            }&#xA;        })&#xA;       }&#xA;</code></pre>&#xA;<p>Any information would be helpful!</p>&#xA;",12973512,,,,2022-06-03 10:36:44,How to filter by an input as an argument,<apollo><apollo-server><prisma><prisma-graphql>,0,1,0,2022-06-03 10:36:44
72488562,1,,,1,60,"<p>I am using saleor backend for my current project. There I have to execute saleor graphql queries and mutations inside the code. So instead of hitting graphql api using url I am using schema.execute() with query and variables. With this approach the custom queries and mutations that I created are working perfectly fine. But when I am executing saleor's mutation or queries like-</p>&#xA;<pre><code>import graphene&#xA;schema = graphene.Schema(ProductQueries)&#xA;query = &quot;&quot;&quot;&#xA;         {&#xA;           products(first: 2, channel: &quot;default-channel&quot;) {&#xA;                edges {&#xA;                   node {&#xA;                      id&#xA;                       name&#xA;                       defaultVariant{&#xA;                                id&#xA;                                }&#xA;                            }&#xA;                            }&#xA;                        }&#xA;                        }&#xA;                    &quot;&quot;&quot;&#xA;data = schema.execute(query, context_value={&quot;app&quot;:&quot;app&quot;})&#xA;print(data.data)&#xA;</code></pre>&#xA;<p>output - <code>{'products': None}</code></p>&#xA;<p>And when I am checking for errors using  <code>print(data.errors)</code>, It is giving me this error-</p>&#xA;<pre><code>**[GraphQLLocatedError(&quot;'NoneType' object has no attribute 'app'&quot;)]**&#xA;</code></pre>&#xA;<p>i checked out in types and schemas of these mutations and queries and nowhere this 'app' attribute is mentioned. Just to test I tried to pass this 'app' attribute in <code>context_value</code> with empty string as well but still It didn't work and this time the error was-</p>&#xA;<pre><code>**[GraphQLLocatedError(&quot;'dict' object has no attribute 'app'&quot;)]**&#xA;</code></pre>&#xA;",19263447,,19263447,2022-06-03 11:20:48,2022-06-03 11:20:48,'NoneType' object has no attribute 'app' in saleor,<django><graphql><graphene-python><graphene-django><saleor>,0,0,0,2022-06-03 10:54:11
72489479,1,,,1,250,"<p>When I pass the value directly to the field id, I'm getting the proper return, but when I try to pass it as a variable, I'm getting data undefined, Does anyone knows how I can solve this?&#xA;My graphql File:</p>&#xA;<pre><code>   query skuContext ($id: ID) {&#xA;    sku(identifier: {field: id, value: $id}) {&#xA;    name,&#xA;    productId,&#xA;    images {&#xA;      url,&#xA;      text&#xA;    },&#xA;    specifications {&#xA;     product {&#xA;      value&#xA;     },&#xA;    },&#xA;    product{&#xA;      name,&#xA;      refId&#xA;    },&#xA;    sellers {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>the react file calling the useQuery hook</p>&#xA;<pre><code>import SKU_CONTEXT from &quot;somepath/sku-context.graphql&#xA;const SomeComponent = (props) =&gt; { &#xA;    const skucontext = useQuery (SKU_CONTEXT, { &#xA;    variables: { id: props.id }&#xA;  })&#xA;&#xA; console.log(skucontext) // skucontext.data &gt; undefined&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>But if I change the graphql file to a specific value instead of receive it from a variable,&#xA;I get the proper return from the hook. How do I solve this, please?:</p>&#xA;<pre><code>   query skuContext ($id: ID) {&#xA;    sku(identifier: {field: id, value: 5}) {&#xA;    name,&#xA;    productId,&#xA;    images {&#xA;      url,&#xA;      text&#xA;    },&#xA;    specifications {&#xA;     product {&#xA;      value&#xA;     },&#xA;    },&#xA;    product{&#xA;      name,&#xA;      refId&#xA;    },&#xA;    sellers {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",17626759,,,,2022-06-03 12:20:41,data returning undefined when pass variable (useQuery React Apollo),<reactjs><graphql><react-apollo>,0,2,0,2022-06-03 12:20:41
72491595,1,,,0,245,"<p>If you are familiar with Shopify draftOrderCreate API, you know that when retrieving the invoice_url via the graphql mutation, it will redirect you to the checkout page but there will be no DISCOUNT CODE Field, and Shopify docs are clear with this, but upon checking some apps (<a href=""https://apps.shopify.com/draft-helper"" rel=""nofollow noreferrer"">https://apps.shopify.com/draft-helper</a>) it is possible, but on the said app, you will manually generate the checkout link.</p>&#xA;<p>Here's a photo of what that app is doing&#xA;<a href=""https://i.stack.imgur.com/jMM1s.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jMM1s.png"" alt=""enter image description here"" /></a></p>&#xA;<p>I am wondering how do i integrate this automatically via graphql. When checking the Console (Network) it seems like he is only passing the draft order id as payload.</p>&#xA;",9358568,,,,2022-06-03 15:12:13,Shopify Graphql API - draftOrderCreate redirect to Checkout with Discount Code Field,<graphql><shopify><shopify-api>,1,0,0,2022-06-03 15:05:41
72491675,2,,72491595,0,,"<p>When you create a Draft Order, you can provide a discount. So if you do that, and then send the invoice, the discount should be applied correctly.</p>&#xA;",210841,,,,2022-06-03 15:12:13,"",,0,2,0,2022-06-03 15:12:13
72502926,1,,,1,487,"<p>I'm trying to change the example of <a href=""https://github.com/ChilliCream/hotchocolate-examples/tree/master/misc/Stitching/centralized"" rel=""nofollow noreferrer"">SchemStitching on GitHub</a> to use it from a products service instead of a gateway service.</p>&#xA;<p>The idea is to extend schema of the product and include information from inventory &amp; reviews.</p>&#xA;<p>The changes I make in the products service:</p>&#xA;<p>add <code>stitiching.graphql</code> file with product type extension</p>&#xA;<pre><code>extend type Product {&#xA;  inStock: Boolean&#xA;    @delegate(&#xA;      schema: &quot;inventory&quot;,&#xA;      path: &quot;inventoryInfo(upc: $fields:upc).isInStock&quot;)&#xA;  shippingEstimate: Int&#xA;    @delegate(&#xA;      schema: &quot;inventory&quot;&#xA;      path: &quot;shippingEstimate(weight: $fields:weight price: $fields:price)&quot;)&#xA;  reviews: [Review] @delegate(schema: &quot;reviews&quot; path:&quot;reviewsByProduct(upc: $fields:upc)&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>Change <code>Startup.cs</code> to register remote schemas for inventory &amp; reviews.</p>&#xA;<pre><code>const string Inventory = &quot;inventory&quot;;&#xA;const string Reviews = &quot;reviews&quot;;&#xA;&#xA;builder.Services.AddHttpClient(Inventory, &#xA;    c =&gt; c.BaseAddress = new Uri(&quot;http://localhost:64309/graphql&quot;));&#xA;builder.Services.AddHttpClient(Reviews, &#xA;    c =&gt; c.BaseAddress = new Uri(&quot;http://localhost:64317/graphql&quot;));&#xA;&#xA;builder.Services&#xA;    .AddSingleton&lt;ProductRepository&gt;()&#xA;    .AddGraphQLServer()&#xA;    .AddQueryType&lt;Query&gt;()&#xA;    .AddRemoteSchema(Inventory, ignoreRootTypes: true)&#xA;    .AddRemoteSchema(Reviews, ignoreRootTypes: true)&#xA;    .AddTypeExtensionsFromFile(&quot;./Stitching.graphql&quot;);&#xA;</code></pre>&#xA;<p>When I run the application (running products, inventory, reviews services) in the hotchocolate playground running the following query</p>&#xA;<pre><code>query {&#xA;  product(upc: 3) {&#xA;    name&#xA;    inStock&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I get back error for <code>inStock</code></p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Variable `__fields_upc` is required.&quot;,&#xA;      &quot;extensions&quot;: {&#xA;        &quot;code&quot;: &quot;HC0018&quot;,&#xA;        &quot;variable&quot;: &quot;__fields_upc&quot;,&#xA;        &quot;remote&quot;: {&#xA;          &quot;message&quot;: &quot;Variable `__fields_upc` is required.&quot;,&#xA;          &quot;extensions&quot;: {&#xA;            &quot;code&quot;: &quot;HC0018&quot;,&#xA;            &quot;variable&quot;: &quot;__fields_upc&quot;&#xA;          }&#xA;        },&#xA;        &quot;schemaName&quot;: &quot;inventory&quot;&#xA;      }&#xA;    }&#xA;  ],&#xA;  &quot;data&quot;: {&#xA;    &quot;product&quot;: {&#xA;      &quot;name&quot;: &quot;Chair&quot;,&#xA;      &quot;inStock&quot;: null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I can't figure out why upc field is not passed. It seems that validation fails on product service as I don't see any calls going out to inventory service.</p>&#xA;<p>Any clue what the issue is ?</p>&#xA;<p>I'm using ASP.NET 6 with</p>&#xA;<pre><code>&lt;PackageReference Include=&quot;HotChocolate.AspNetCore&quot; Version=&quot;12.9.0&quot; /&gt;&#xA;&lt;PackageReference Include=&quot;HotChocolate.Stitching&quot; Version=&quot;12.9.0&quot; /&gt;&#xA;</code></pre>&#xA;<p><strong>EDIT</strong></p>&#xA;<p>It seems that <code>$fields:upc</code> is not getting resolved for inventory schema, because if I update the stitching schema with hard coded upc of 3</p>&#xA;<pre><code>extend type Product {&#xA;  inStock: Boolean&#xA;    @delegate(&#xA;      schema: &quot;inventory&quot;,&#xA;      path: &quot;inventoryInfo(upc: 3).isInStock&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>And query the data</p>&#xA;<pre><code>query {&#xA;  product(upc: 3) {&#xA;    upc&#xA;    name&#xA;    inStock&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I get back results as expected</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;product&quot;: {&#xA;      &quot;upc&quot;: 3,&#xA;      &quot;name&quot;: &quot;Chair&quot;,&#xA;      &quot;inStock&quot;: true&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2755180,,2755180,2022-06-11 19:37:35,2022-06-13 22:52:13,ASP.NET 6 HotChocolate SchemaStitching failure on remote schema fields,<asp.net><graphql><hotchocolate>,1,2,0,2022-06-04 20:25:51
72503418,1,,,0,49,"<p>My query takes key as parameters which accepts string or array of strings.</p>&#xA;<pre><code>Keys:&quot;AB&quot;|| Keys:[&quot;AB&quot;,&quot;CD&quot;]&#xA;</code></pre>&#xA;<p>I need to contruct this values dynamic and also I am able to do it but when I am passing it as an array, the graphql is failing as it treating its kind value as enum instead of string.</p>&#xA;",7302220,,,,2022-06-04 21:59:34,How to send multiple dynamic IDs in graphql query?,<graphql>,0,0,0,2022-06-04 21:59:34
72524780,2,,58503220,0,,"<p>For me the issue was easy to miss, i had import { products } from '~/components/apollo/queries/products';</p>&#xA;<p>It needed to be import products from '~/components/apollo/queries/products';</p>&#xA;<p>Basically remove the { } around the queried attribute products</p>&#xA;",5034419,,,,2022-06-07 00:45:32,"",,0,0,0,2022-06-07 00:45:32
72525996,1,,,0,304,"<p>My database structure looks something like this (omitted less-important details):</p>&#xA;<pre><code>Hospital{&#xA;    Name, &#xA;    Variants[] (references HospitalVariant)&#xA;}&#xA;&#xA;HospitalVariant{&#xA;    DiseaseVariant (references Disease),&#xA;    Description,&#xA;    Rating&#xA;}&#xA;&#xA;Disease{&#xA;   Name,&#xA;   slug&#xA;}&#xA;</code></pre>&#xA;<p>Now, I want to fetch all hospitals which treats breast-cancer and I only want to fetch breast-cancer from that hospitals array of diseases.</p>&#xA;<pre><code>*[_type=&quot;Hospital&quot; &amp;&amp; Variants[].DiseaseVariant-&gt;slug.current match &quot;breast-cancer&quot;]{&#xA;    ...,&#xA;    Name, &#xA;    Variants[DiseaseVariant-&gt;slug.current match &quot;breast-cancer&quot;]&#xA;}&#xA;</code></pre>&#xA;<p>First part of the query is working correctly i.e. it's fetching the hospitals which treats breast-cancer but in the Diseases array, nothing is being fetched.</p>&#xA;<p>If I use a non-referenced field, the query is working correctly. i.e.</p>&#xA;<pre><code>*[_type=&quot;Hospital&quot; &amp;&amp; Variants[].DiseaseVariant-&gt;slug.current match &quot;breast-cancer&quot;]{&#xA;    ...,&#xA;    Name, &#xA;    Variants[Rating &gt; 95]&#xA;}&#xA;</code></pre>&#xA;<p>This is returning the correct results. But when I am using referenced Object (Disease), it's not working correctly.</p>&#xA;",912359,,912359,2022-06-07 07:37:49,2022-06-07 07:37:49,Sanity query to filter array of object using reference value,<graph><graphql><sanity><groq>,0,0,0,2022-06-07 04:42:19
72541836,1,,,0,687,"<p>I am using the storefront API to create a headless e commerce site.  I am having an issue passing variables into the query - where if I hard code the values it seems to work but as soon as I try and pass variables into the query it fails and says</p>&#xA;<pre><code>Argument 'lineItems' on InputObject 'CheckoutCreateInput' has an invalid value ([[object, Object]]). Expected type '[CheckoutLineItemInput!]'&#xA;</code></pre>&#xA;<p>I am pretty sure the problem has to do with the passing of the variables becuase I have tried most things - and come to this conclusion.</p>&#xA;<p>Here is the query and action function</p>&#xA;<pre><code>export const createCheckout = async (items: IProductVariant[]) =&gt; {&#xA;  &#xA;  const query = `&#xA;&#xA;  mutation {&#xA;    checkoutCreate(input: &#xA;      lineItems:  ${items}&#xA;           &#xA;    }) {&#xA;      checkout {&#xA;         id&#xA;         webUrl&#xA;         lineItems(first: 5) {&#xA;           edges {&#xA;             node {&#xA;               title&#xA;               quantity&#xA;             }&#xA;           }&#xA;         }&#xA;      }&#xA;    }&#xA;  }&#xA;    &#xA;      `;&#xA;&#xA;&#xA;&#xA;export const  action: ActionFunction = async ({request}) =&gt; {&#xA;  // get the form data from the POST&#xA;&#xA;  const formData = await request.formData()&#xA;&#xA;  const id = Array.from(formData.getAll('id'))&#xA;&#xA;&#xA;  const quantity = Array.from(formData.getAll('quantity'))&#xA;&#xA;  let items = id.map((item , idx) =&gt; {&#xA;    const newObj: IProductVariant  = {}&#xA;    newObj[&quot;variantId&quot;]  = item as string&#xA;    newObj[&quot;quantity&quot;] = Number(quantity[idx]) as number&#xA;    return newObj&#xA;  })&#xA;&#xA;  const res = await createCheckout(items)&#xA;&#xA;  return {res}&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>I think i need to modify the query to take a variable ?</p>&#xA;",5743059,,,,2022-06-08 16:17:22,How to pass variables into a graphql query?,<graphql><remix.run>,1,2,0,2022-06-08 07:43:27
72549056,2,,72541836,1,,"<p>Hmm.. I'm not sure that's how you call the GraphQL end point.</p>&#xA;<p><a href=""https://shopify.dev/api/storefront/2022-01/mutations/checkoutCreate"" rel=""nofollow noreferrer"">https://shopify.dev/api/storefront/2022-01/mutations/checkoutCreate</a></p>&#xA;<pre class=""lang-js prettyprint-override""><code>import Shopify from '@shopify/shopify-api';&#xA;&#xA;const client = new Shopify.Clients.Storefront('your-development-store.myshopify.com', storefrontAccessToken);&#xA;&#xA;// define your mutation (note how you define the input type first, then call&#xA;// the mutation with the input variable&#xA;const query = &#xA;   `mutation checkoutCreate($input: CheckoutCreateInput!) {&#xA;      checkoutCreate(input: $input) {&#xA;        checkout {&#xA;          id&#xA;          webUrl&#xA;          lineItems(first: 5) {&#xA;            edges {&#xA;              node {&#xA;                title&#xA;                quantity&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }`;&#xA;&#xA;// define the input data (this is from the docs, pass what is needed here)&#xA;const input = {&#xA;   {&#xA;    &quot;allowPartialAddresses&quot;: true,&#xA;    &quot;buyerIdentity&quot;: {&#xA;      &quot;countryCode&quot;: &quot;&quot;&#xA;    },&#xA;    &quot;customAttributes&quot;: [&#xA;      {&#xA;        &quot;key&quot;: &quot;&quot;,&#xA;        &quot;value&quot;: &quot;&quot;&#xA;      }&#xA;    ],&#xA;    &quot;email&quot;: &quot;&quot;,&#xA;    &quot;lineItems&quot;: [&#xA;      {&#xA;        &quot;customAttributes&quot;: {&#xA;          &quot;key&quot;: &quot;&quot;,&#xA;          &quot;value&quot;: &quot;&quot;&#xA;        },&#xA;        &quot;quantity&quot;: 1,&#xA;        &quot;variantId&quot;: &quot;&quot;&#xA;      }&#xA;    ],&#xA;    &quot;note&quot;: &quot;&quot;,&#xA;    &quot;presentmentCurrencyCode&quot;: &quot;&quot;,&#xA;    &quot;shippingAddress&quot;: {&#xA;      &quot;address1&quot;: &quot;&quot;,&#xA;      &quot;address2&quot;: &quot;&quot;,&#xA;      &quot;city&quot;: &quot;&quot;,&#xA;      &quot;company&quot;: &quot;&quot;,&#xA;      &quot;country&quot;: &quot;&quot;,&#xA;      &quot;firstName&quot;: &quot;&quot;,&#xA;      &quot;lastName&quot;: &quot;&quot;,&#xA;      &quot;phone&quot;: &quot;&quot;,&#xA;      &quot;province&quot;: &quot;&quot;,&#xA;      &quot;zip&quot;: &quot;&quot;&#xA;    }&#xA;  };&#xA;&#xA;// this is where you call the API passing in the query and variables&#xA;const data = await client.query({&#xA;  data: {&#xA;    &quot;query&quot;: query,&#xA;    &quot;variables&quot;: {&#xA;      &quot;input&quot;: input,&#xA;      &quot;queueToken&quot;: queueToken&#xA;    },&#xA;  },&#xA;});&#xA;</code></pre>&#xA;",293609,,,,2022-06-08 16:17:22,"",,0,0,0,2022-06-08 16:17:22
72551536,1,,,3,109,"<p>I would like to get a <strong>list of all the forks</strong> (with timestamp) of a specific repository.&#xA;When I try the following on <a href=""https://docs.github.com/en/graphql/overview/explorer"" rel=""nofollow noreferrer"">explorer</a></p>&#xA;<pre><code>{&#xA;  repository(name: &quot;tensorflow&quot;, owner: &quot;tensorflow&quot;) {&#xA;    forkCount&#xA;    forks(first: 100) {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>It returns the forkCount correctly and as displayed on the <a href=""https://github.com/tensorflow/tensorflow"" rel=""nofollow noreferrer"">webpage</a>, but unexplainably there are <strong>over 15,000 fewer repositories in the &quot;forks&quot; list</strong> as displayed on the webpage and forkCount. Consequently, I am missing the timestamp for these repositories.</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;repository&quot;: {&#xA;      &quot;forkCount&quot;: 86841,&#xA;      &quot;forks&quot;: {&#xA;        &quot;totalCount&quot;: 70082&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Does anyone have an explanation for this? How do you get the other repositories?</p>&#xA;<p>The visibility of a fork repository cannot be changed.</p>&#xA;<p>Thank you in advance!</p>&#xA;",19301718,,1256452,2022-06-08 23:22:24,2022-09-18 12:13:15,GitHub GraphQL: Get all forks of a repository,<github><graphql><github-api><git-fork>,1,0,0,2022-06-08 19:59:36
72553293,2,,72553239,0,,"<p>As you see, if you look at the default <a href=""https://github.com/laravel/sanctum/blob/863b610662bc09091fb73188f127d65eb64d3398/config/sanctum.php#L36"" rel=""nofollow noreferrer"">sanctum config</a>. The key <code>sanctum.guard</code> is an array, so you are passing an array, to an method that expects a string.</p>&#xA;<p>I'm not certain it is the right approach going forward, but for here and know fix of your current problem. Unpack the array instead.</p>&#xA;<pre><code>Auth::guard(Arr::first(config('sanctum.guard', ['web'])));&#xA;</code></pre>&#xA;",2760986,,,,2022-06-08 23:41:32,"",,0,3,0,2022-06-08 23:41:32
72585156,2,,72584688,0,,"<p>Your GraphQL fragment <code>PrismicBlog</code> has <code>post_paragraph</code> which has <code>text</code> (so your loop works) however, when it's mapping <code>PrismicCulture</code> fragment, where the structure differs, your map breaks because there's no such property, in <code>PrismicCulture</code> it's called <code>culture_paragraph</code> with a <code>text</code> property in it.</p>&#xA;<p>If you are trying to map both fragments in one loop I'd suggest using the same data structure  in the CMS, changing <code>culture_paragraph</code> for <code>post_paragraph</code> so your loop will be valid.</p>&#xA;<p>If that's not an option, you can use GraphQL alias to map your <code>culture_paragraph</code> into <code>post_paragraph</code> such as:</p>&#xA;<pre><code>{&#xA;allPrismicLastPosts {&#xA;    nodes {&#xA;      data {&#xA;        links {&#xA;          blog {&#xA;            document {&#xA;              ... on PrismicBlog {&#xA;                data {&#xA;                  post_img {&#xA;                    url&#xA;                  }&#xA;                  post_title {&#xA;                    text&#xA;                  }&#xA;                  post_paragraph {&#xA;                    text&#xA;                  }&#xA;                  tag&#xA;                }&#xA;              }&#xA;              ... on PrismicCulture {&#xA;                data {&#xA;                  tag&#xA;                  culture_image {&#xA;                    url&#xA;                  }&#xA;                  post_paragraph: culture_paragraph {&#xA;                    text&#xA;                  }&#xA;                  culture_title {&#xA;                    text&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Note the <code>post_paragraph: culture_paragraph</code> alias.</p>&#xA;<p>Another alternative is using the optional chaining to only print the text if the structure matches the loop:</p>&#xA;<pre><code>{post.data.links.map((test)=&gt;&#xA;      (&#xA;        &lt;&gt;&#xA;          &lt;h1&gt;{test.blog.document?.data?.post_paragraph?.text}&lt;/h1&gt;&#xA;        &lt;/&gt;&#xA;      ))}&#xA;</code></pre>&#xA;",5585371,,,,2022-06-11 14:23:57,"",,0,1,0,2022-06-11 14:23:57
72585181,2,,72584374,0,,"<p>As shown in your other question (<a href=""https://stackoverflow.com/questions/72584688/how-to-fetch-only-specific-data-from-graphql-query"">how to fetch only specific data from graphql query</a>), <code>links</code> is an array so unless you loop through it or you access to a specific position you can't do:</p>&#xA;<pre><code>post.data.links.blog.document.map((test)&#xA;</code></pre>&#xA;<p>I guess you are trying to do:</p>&#xA;<pre><code>post.data.links[0].blog.document.map((test)&#xA;</code></pre>&#xA;<p>According to <code>links</code> structure, it seems to be an array of 1 item.</p>&#xA;<p>Try to debug your loops by adding a breakpoint or <code>console.logs</code> before returning the JSX, so you will be able to see what you are looping through:</p>&#xA;<pre><code>{&#xA;  post.data.links.blog.document.map((test) =&gt; {&#xA;    console.log(test);&#xA;    return (&#xA;      &lt;GridPosts&gt;&#xA;        &lt;GridPost&gt;&#xA;          &lt;img src={Post2} alt=&quot;Post1&quot; /&gt;&#xA;          &lt;FlexPost&gt;&#xA;            &lt;PostTitle&gt;TEST&lt;/PostTitle&gt;&#xA;            &lt;PostParagraph&gt;&#xA;              A lot of different components that will help you create the&#xA;              perfect look for your project&#xA;            &lt;/PostParagraph&gt;&#xA;            &lt;PostTag&gt;Fiction&lt;/PostTag&gt;&#xA;          &lt;/FlexPost&gt;&#xA;        &lt;/GridPost&gt;&#xA;      &lt;/GridPosts&gt;&#xA;    );&#xA;  });&#xA;}&#xA;</code></pre>&#xA;",5585371,,,,2022-06-11 14:28:21,"",,0,0,0,2022-06-11 14:28:21
72601099,2,,54599733,0,,<pre><code>{&#xA;search(query: &quot;repo:octocat/Hello-World type:issue is:CLOSED&quot;&#xA;first: 20&#xA;type: ISSUE) {&#xA;  issueCount&#xA;    edges {&#xA;      node {&#xA;        ... on Issue {&#xA;          title&#xA;          createdAt&#xA;          labels(first:5) {&#xA;            edges {&#xA;              node {&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,12697638,,12697638,2022-06-13 10:43:44,2022-06-13 10:43:44,"",,0,1,0,2022-06-13 10:08:41
72604935,2,,48863441,0,,"<pre><code>const addProductMutation = gql`&#xA;mutation addProduct($id: String!, $name: String!, $organisationId: String!) {&#xA;  addProduct(_id: $id, name: $name, organisationId: $organisationId) {&#xA;    _id&#xA;    name&#xA;  }&#xA;}`;&#xA;</code></pre>&#xA;<p>The following mutation gave me a response 400 error, because I wasn't passing &quot;id&quot; as &quot;ID&quot; as I defined in the apollo-server schema and resolvers. The error messages that I get back from apollo-server, I don't find it that useful as they don't really tell you the error. It is better to use tools like &quot;graphiql&quot; to run the same query, it highlights your error and tells you about it very easily. So for the above snippet, the corrected version will be the following</p>&#xA;<pre><code>const addProductMutation = gql`&#xA;mutation addProduct($id: ID!, $name: String!, $organisationId: String!) {&#xA;  addProduct(_id: $id, name: $name, organisationId: $organisationId) {&#xA;    _id&#xA;    name&#xA;  }&#xA;}`;&#xA;</code></pre>&#xA;",12639918,,,,2022-06-13 14:55:19,"",,0,0,0,2022-06-13 14:55:19
72609872,2,,72502926,0,,"<p>Also not? Your first query has not the 'upc' field what the error say.</p>&#xA;<pre><code>query {&#xA;  product(upc: 3) {&#xA;    upc&#xA;    name&#xA;    inStock&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>There is an example I found of graphql query similar to your scenario: <a href=""https://chillicream.com/docs/hotchocolate/fetching-data/fetching-from-rest"" rel=""nofollow noreferrer"">https://chillicream.com/docs/hotchocolate/fetching-data/fetching-from-rest</a></p>&#xA;",7733724,,,,2022-06-13 22:52:13,"",,0,1,0,2022-06-13 22:52:13
72615221,1,,,0,170,"<p>I have an error that I just don't understand...</p>&#xA;<p>I've got a <code>Query</code> of type:</p>&#xA;<pre><code>export type Query = {&#xA;    userIndexHistory?: Maybe&lt;UserIndexHistory&gt;;&#xA;}&#xA;</code></pre>&#xA;<p>where the <code>UserIndexHistory</code> is of type:</p>&#xA;<pre><code>export type UserIndexHistory = {&#xA;  __typename?: 'UserIndexHistory';&#xA;  /** shares of the index in user account */&#xA;  balance: Scalars['BigDecimal'];&#xA;  /** USD equivalent of the user index holdings */&#xA;  capitalization: Scalars['BigDecimal'];&#xA;  id: Scalars['ID'];&#xA;  index: Index;&#xA;  /** holds orders of transfers in transaction */&#xA;  logIndex: Scalars['BigInt'];&#xA;  /** timestamp matching the starting of day GMT */&#xA;  timestamp: Scalars['BigInt'];&#xA;  /** index total supply on the moment of the user balance calculation */&#xA;  totalSupply: Scalars['BigInt'];&#xA;  /** user account of the specific index holdings */&#xA;  user: User;&#xA;};&#xA;</code></pre>&#xA;<p>and have created a <code>.graphql</code> file with the following query</p>&#xA;<pre><code>query testquery($id: String = &quot;12312&quot;) {&#xA;  test: userIndexHistory(user:{ id: $id}) {    &#xA;    ...comparisonFields&#xA;  }&#xA;}&#xA;&#xA;fragment comparisonFields on UserIndexHistory {&#xA;     index {&#xA;        id&#xA;        symbol&#xA;      }&#xA;      user {&#xA;        id&#xA;      }&#xA;      capitalization&#xA;      totalSupply&#xA;      logIndex&#xA;      timestamp&#xA;}&#xA;</code></pre>&#xA;<p>But whenever I validate, i get the following error:</p>&#xA;<blockquote>&#xA;<p>Error 0: GraphQLDocumentError: Unknown argument &quot;user&quot; on field &quot;Query.userIndexHistory&quot;.</p>&#xA;</blockquote>&#xA;<p>Now. I don't understand why I'm getting this error? My <code>Query</code> clearly links to <code>UserIndexHistory</code>. Which clearly has a <code>User</code> field.</p>&#xA;<p>What am I missing?</p>&#xA;",1717715,,,,2022-06-14 10:15:36,"GraphQL Query validation fails with ""Unknown argument""",<graphql><graphql-codegen>,0,0,0,2022-06-14 10:15:36
72634465,2,,72624087,0,,"<p>I've opened a <a href=""https://bz.apache.org/bugzilla/show_bug.cgi?id=66122"" rel=""nofollow noreferrer"">bug for Apache</a> and they acknowledged this behavior but it doesn't seem like something they'll fix soon.</p>&#xA;<p>I came up with a solutions that is close to what <a href=""https://stackoverflow.com/users/2897748/dmitri-t"">@Dmitri T</a> suggested but without using any Plugins</p>&#xA;<p>I've created a JSR223 PreProcessor (Language: Groovy) that will replace the special characters that might break the request's JSON. So far the things that I've seen in GraphQL that might break it are new lines and double quotes.</p>&#xA;<pre><code>def content = new File(vars.get('fileName')).text;&#xA;vars.put('queryContent', content.replaceAll(/(\r\n|\r|\n)/, /\\n/).replaceAll(/&quot;/, /\\&quot;/))&#xA;</code></pre>&#xA;",7124248,,,,2022-06-15 16:00:03,"",,0,0,0,2022-06-15 16:00:03
72644543,1,,,0,33,"<p>Is it possible to sort the results of a query by a calculated field?&#xA;I think its not possible, but please confirm or desprove it.</p>&#xA;<p>Thanks,</p>&#xA;",3921578,,,,2022-06-16 10:42:59,AWS Amplify AppSync - Order by computed @function model field?,<amazon-web-services><graphql><amplify>,0,0,0,2022-06-16 10:42:59
72674653,2,,72658728,1,,"<p>sorry not a eslint problem, is code error.</p>&#xA;<p>looks like productSlug is a union type between string | string[] , slugIn takes an array of strings i.e string[]. To get passed the typing error,  you could replace line 14 with something like this slugIn: Array.isArray(productSlug) ? productSlug : [productSlug]</p>&#xA;<p>change</p>&#xA;<pre><code>const items = products({&#xA;  where: {&#xA;    slugIn: productSlug,&#xA; },&#xA;}).nodes&#xA;</code></pre>&#xA;<p>to</p>&#xA;<pre><code>const items = products({&#xA;    where: {&#xA;        slugIn: Array.isArray(productSlug) ? productSlug : [productSlug],&#xA;    },&#xA;}).nodes&#xA;</code></pre>&#xA;",8566930,,,,2022-06-19 06:15:36,"",,0,0,0,2022-06-19 06:15:36
72683542,2,,72657020,1,,<p>just put it in the bracket and return the result as an array.</p>&#xA;<pre><code>type GetAllProducts{&#xA;    id: ID!&#xA;    title: String&#xA;    description: String&#xA;    userId: Int&#xA;    featured: Int&#xA;    isFree: Boolean&#xA;    isBlocked: Boolean&#xA;    instantBuy: Boolean&#xA;    groupsId: String&#xA;    image: [String]&#xA;}&#xA;</code></pre>&#xA;,19372996,,,,2022-06-20 07:23:13,"",,0,0,0,2022-06-20 07:23:13
72683821,1,,,0,61,"<p>i am trying to pass object of arrays</p>&#xA;<p>dto :</p>&#xA;<pre><code>@InputType('RuleCreateBulkRequest')&#xA;export class RuleCreateBulkRequestDto {&#xA;    @ApiProperty({ type: () =&gt; [RuleInputDto] })&#xA;    @Type(() =&gt; RuleInputDto)&#xA;    @ValidateNested({ each: true })&#xA;    @Field(() =&gt; [RuleInputDto])&#xA;    bulk?: [RuleInputDto];&#xA;}&#xA;</code></pre>&#xA;<p>here is my sample data i pass: object of arrays</p>&#xA;<pre><code>{&#xA; &quot;bulk&quot;:[&#xA;  {&#xA;    name: 'After every minute',&#xA;    description: 'Will turn on device after every minute',&#xA;    embedded: false,&#xA;    triggers: [ [Object] ],&#xA;    actions: [ [Object] ]&#xA;  },&#xA;  {&#xA;    name: 'After every minute',&#xA;    description: 'Will turn on device after every minute',&#xA;    embedded: false,&#xA;    triggers: [ [Object] ],&#xA;    actions: [ [Object] ]&#xA;  }&#xA;]&#xA;}&#xA;</code></pre>&#xA;<p>here is zero index [0] value from above</p>&#xA;<pre><code>one {&#xA;  name: 'After every minute 1',&#xA;  description: 'Will turn on device after every minute',&#xA;  embedded: ' false',&#xA;  triggers: [ { name: 'TimeTrigger', options: [Object] } ],&#xA;  actions: [ { name: 'EntitySetStateAction', options: [Object] } ]&#xA;}&#xA;</code></pre>&#xA;<p>when i pass it as a object of array in function . i got result like this  .</p>&#xA;<pre><code>RuleDto {&#xA;    embedded: false,&#xA;    active: true,&#xA;    triggers: '[object Object]',&#xA;    actions: '[object Object]',&#xA;    id: '71d4c663-182a-4d63-93fd-f9cb30a52f7e',&#xA;    name: 'After every minute',&#xA;    description: 'Will turn on device after every minute',&#xA;    condition: null,&#xA;    deletedAt: null,&#xA;    cursorId: 398,&#xA;    createdAt: 2022-06-20T02:22:59.823Z,&#xA;    updatedAt: 2022-06-20T02:22:59.823Z,&#xA;    version: 1&#xA;  },&#xA;  RuleDto {&#xA;    embedded: false,&#xA;    active: true,&#xA;    triggers: '[object Object]',&#xA;    actions: '[object Object]',&#xA;    id: 'cea158a5-ee1b-4881-839a-06a2d0f3daf6',&#xA;    name: 'After every minute',&#xA;    description: 'Will turn on device after every minute',&#xA;    condition: null,&#xA;    deletedAt: null,&#xA;    cursorId: 399,&#xA;    createdAt: 2022-06-20T02:22:59.823Z,&#xA;    updatedAt: 2022-06-20T02:22:59.823Z,&#xA;    version: 1&#xA;  }&#xA;</code></pre>&#xA;<p>how i can get proper values of followings  instead object Object</p>&#xA;<pre><code>triggers: '[object Object]',&#xA;actions: '[object Object]',&#xA;</code></pre>&#xA;<p>here are function in which above value pass</p>&#xA;<p>// function call</p>&#xA;<pre><code>const response = await this.service&#xA;            .ruleCreateMany(input , ctx  )&#xA;             .toPromise();&#xA;            console.log('res',response);&#xA;</code></pre>&#xA;<p>function def:</p>&#xA;<pre><code>@GrpcMethod('RulesService')&#xA;async ruleCreateMany(&#xA;    input: RuleCreateBulkRequestDto,&#xA;    _ctx: GrpcContext,&#xA;): Promise&lt;{ rules: RuleMessage[] }&gt; {&#xA;&#xA;    &#xA;&#xA;      &#xA;    const response = await this.service.createMany({bulk:input.bulk});&#xA;    &#xA;    &#xA;    console.log('from rule controller :', input.bulk[0]);&#xA;    console.log('from rule controller bluk  :', input.bulk);&#xA;    console.log('from rule controller bluk  :', JSON.stringify (input.bulk));&#xA;&#xA;    &#xA;&#xA;    const rules: RuleDto[] = plainToClass(RuleDto, get(response, 'rules', []));&#xA;&#xA;    console.log('ruler controler ',rules);&#xA;    &#xA;    const mapperPromises = rules.map((r: RuleDto) =&gt; RuleProto.toProto(r));&#xA;&#xA;    return { rules: await Promise.all(mapperPromises) };&#xA;}&#xA;</code></pre>&#xA;<p>RuleMessage Interface</p>&#xA;<pre><code>export interface RuleMessage&#xA;extends Omit&lt;RuleDto, 'condition' | 'triggers' | 'actions' | 'createdAt' | 'updatedAt' | 'deletedAt'&gt; {&#xA;    condition?: string;&#xA;    triggers: string;&#xA;    actions: string;&#xA;    createdAt?: string;&#xA;    updatedAt?: string;&#xA;    deletedAt?: string;&#xA;}&#xA;&#xA;export const RuleProto = {&#xA;    toProto(input: RuleDto): RuleMessage {&#xA;        return {&#xA;            ...input,&#xA;            condition: input.condition ? JSON.stringify(input.condition) : undefined,&#xA;            triggers: JSON.stringify(input.triggers),&#xA;            actions: JSON.stringify(input.actions),&#xA;            createdAt: input.createdAt ? input.createdAt.toISOString() : undefined,&#xA;            updatedAt: input.updatedAt ? input.updatedAt.toISOString() : undefined,&#xA;            deletedAt: input.deletedAt ? input.deletedAt.toISOString() : undefined,&#xA;        };&#xA;    },&#xA;// triggers: JSON.stringify(input.triggers),&#xA;//actions: JSON.stringify(input.actions),&#xA;    fromProto(input: RuleMessage): RuleDto {&#xA;        return {&#xA;            ...input,&#xA;            condition: input.condition ? JSON.parse(input.condition) : undefined,&#xA;            triggers: JSON.parse (JSON.stringify(input.triggers)),&#xA;            actions: JSON.parse(input.actions),&#xA;            createdAt: input.createdAt ? new Date(input.createdAt) : undefined,&#xA;            updatedAt: input.updatedAt ? new Date(input.updatedAt) : undefined,&#xA;            deletedAt: input.deletedAt ? new Date(input.deletedAt) : undefined,&#xA;        };&#xA;    },&#xA;};&#xA;&#xA;&#xA;export interface RuleInputRequestWithParamsDto {&#xA;    id: string;&#xA;    dto: RuleInputDto;&#xA;}&#xA;&#xA;export interface RuleRpcService&lt;Context extends GrpcContext = GrpcContext&gt; {&#xA;    ruleCreateOne(request: RuleMessage, ctx: Context): Promise&lt;RuleMessage&gt;;&#xA;    &#xA;&#xA;    ruleCreateMany(&#xA;        request: RuleCreateBulkRequestDto,&#xA;        ctx: Context&#xA;    ): Promise&lt;{ rules: RuleMessage[] }&gt;;&#xA;</code></pre>&#xA;<p>from proto file :</p>&#xA;<pre><code> rpc RuleCreateMany(com.mevris.server.repository.Rule.RuleCreateBulkRequestDto) returns (com.mevris.server.repository.Rule.ManyRulesDto) {}&#xA;</code></pre>&#xA;",19331897,,,,2022-06-20 09:20:01,Object of arrays pass in function,<typescript><graphql><nestjs><proto>,1,4,0,2022-06-20 07:53:03
72685300,1,72685473,,0,151,"<p>I know there is same official limitation to send network request by loop in Cypress,&#xA;but probably there is some unofficial way to do it.</p>&#xA;<p>The use case is to send some <code>cy.request()</code> and wrap in in <code>for()</code> or <code>while()</code> loop and pass different values in the header everytime from some array or directly from the database and then to manipulate on the result by some assert.</p>&#xA;<p>e.g.</p>&#xA;<pre><code>let query = 'query bla bla bla'&#xA;let projectId = some value from array or db';&#xA;let result;&#xA;&#xA;describe('Tests', () =&gt; {&#xA;  it('send graphql request to endpoint', () =&gt; {&#xA;    for(let i = 0; 0 &gt; 3; i++) {&#xA;    cy.request({&#xA;      method: 'POST',&#xA;      url: 'https://www.blabla.con/api2',&#xA;      body: {&#xA;        'operationName': 'bla bla',&#xA;        'variables': {&#xA;          'campaignProjectId': null,&#xA;          'ids': [ { 'type': 'project', 'id': projectId } ],&#xA;          'userData': null,&#xA;        },&#xA;        query,&#xA;      },&#xA;      headers: {&#xA;        'accept': '*/*',&#xA;        'content-type': 'application/json',&#xA;      },&#xA;    }).then((response: any) =&gt; {&#xA;    // placeholder for assert - will compare between the results&#xA;      expect(JSON.stringify(response.body.data).is.equal(JSON.stringify(result);&#xA;    });&#xA;};&#xA;});&#xA;</code></pre>&#xA;<p>In the code above, it's just looping without to send the request, seems like a recursive issue or something else.</p>&#xA;",4149726,,4149726,2022-06-20 13:32:09,2022-06-20 13:32:09,Is it possible to send network request by loop in Cypress test,<javascript><typescript><automation><graphql><cypress>,1,8,0,2022-06-20 10:01:17
72696328,1,,,0,66,"<p>So I have set up a graphql and can use it in Postmen successfully.</p>&#xA;<p>It looks like this</p>&#xA;<pre><code>query listByName($name: String!) {&#xA;    listByName(name: $name) {&#xA;        id&#xA;        name&#xA;        sortOrder&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>and this as my variable&#xA;{&quot;name&quot;: &quot;Products&quot;}</p>&#xA;<p>The output is the wanted one, but how do I now approach using this? How do I fetch it in the frontend and display for example a simple list of all lists with the name Products.</p>&#xA;",17157585,,,,2022-06-21 07:14:22,How to query graphql in react typescript,<reactjs><typescript><graphql>,2,0,0,2022-06-21 06:41:47
72704086,1,,,0,130,"<p>I am trying to create a full stack twitter clone and I'm having problems to query multiple elements in strapi graphQL.</p>&#xA;<p>On the photo below, i make a query passing tweet id and it works perfectly.</p>&#xA;<p><a href=""https://i.stack.imgur.com/rin1Y.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rin1Y.png"" alt=""query single entity"" /></a></p>&#xA;<p>But the problem comes when I try to get all tweets without passing id. I should recieve all tweets that i´ve created, but i only receive an empty array, always. What should I do?</p>&#xA;<p><a href=""https://i.stack.imgur.com/3xUTA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3xUTA.png"" alt=""query multiple elements"" /></a></p>&#xA;",18476156,,18476156,2022-06-21 18:51:54,2022-06-21 18:51:54,How can i enable multiple query entities in strapi graphQl,<javascript><postgresql><api><graphql><strapi>,0,0,0,2022-06-21 16:16:57
72706452,2,,71313306,1,,"<p>I found a similar issue in GitHub that includes a workaround solution here: <a href=""https://github.com/apollographql/apollo-ios/issues/36#issuecomment-452515484"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-ios/issues/36#issuecomment-452515484</a></p>&#xA;<p>This is a fairly dated thread but thought it could give you some direction on how to proceed.</p>&#xA;",9281567,,,,2022-06-21 19:55:36,"",,0,0,0,2022-06-21 19:55:36
72706741,2,,70593205,0,,"<p>It sounds like you're describing an offset which would require a different query to accomplish this: <a href=""https://www.apollographql.com/docs/react/pagination/offset-based"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/pagination/offset-based</a></p>&#xA;<p>This way you can provide the amount of already-queried results and only return the limited quantity needed.</p>&#xA;",9281567,,,,2022-06-21 20:25:19,"",,0,0,0,2022-06-21 20:25:19
72722262,1,,,0,94,"<p>Is there any github graph query which fetches repos based on the username in organization.</p>&#xA;<p>Example:&#xA;Let's say in the org testOrg, we have around 1000 plus users and each user contributed to multiple repos.</p>&#xA;<p>I need the query to fetch all the repos that a particular user contributed.</p>&#xA;<p>Here we are not using the user's Personal Access Token in Authorization. We registered an app at org level and we are using the that App Token in Authorization.</p>&#xA;<p>So how to query the repos that a particular user contributed, based on user's github userid and using app token as authorization toke</p>&#xA;",1698404,,,,2022-06-22 21:35:33,Github graphql query based on username in the organization,<github><github-api><github-graphql>,0,0,0,2022-06-22 21:35:33
72728798,1,72732716,,0,415,<p>ive tried graphql's <code>discountCode</code> api but it only accepts price rule ids.the discount code was created by <code>priceRuleDiscountCodeCreate</code> API.</p>&#xA;,17912180,,,,2022-06-23 15:24:56,is there an graphql api to get discount code by id in shopify-admin-api?,<graphql><shopify><shopify-app><shopify-api><shopify-api-node>,1,1,0,2022-06-23 10:39:19
72732716,2,,72728798,0,,<p>You can do</p>&#xA;<pre><code>{&#xA;  codeDiscountNode(id:&quot;gid://shopify/DiscountCodeNode/1111111&quot;){&#xA;    id&#xA;    &#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Where 111111 is your discount id.</p>&#xA;<p>But depends on what information you want to extract</p>&#xA;,343794,,,,2022-06-23 15:24:56,"",,0,0,0,2022-06-23 15:24:56
72743757,1,,,1,174,"<p>so i'm trying to use Apollo GraphQL with React to get specific product data by its ID, but it seems to be returning undefined. I read the Apollo docs and researched, so I'm not sure what I'm doing wrong. Also, I'm able to return data from other queries that don't require an ID (like all products, for instance). Would greatly appreciate some help!</p>&#xA;<p><strong>Query</strong></p>&#xA;<pre><code>export const PRODUCT = gql`&#xA; query GetProduct($itemID: String!) {&#xA;  product(id: $itemID) {&#xA;    id&#xA;    name&#xA;    inStock&#xA;    gallery&#xA;    description&#xA;    category&#xA;    attributes {&#xA;      id&#xA;      name&#xA;      type&#xA;      items {&#xA;        displayValue&#xA;        value&#xA;      }&#xA;    }&#xA;    prices {&#xA;      currency {&#xA;        label&#xA;        symbol&#xA;      }&#xA;    }&#xA;    brand&#xA;  }&#xA;}&#xA;`;&#xA;</code></pre>&#xA;<p><strong>This is where I try to return data using the ID, but to no avail:</strong></p>&#xA;<pre><code>  let myID = &quot;ps-5&quot;;&#xA;&#xA;    const { productLoading, productError, productData } = useQuery(PRODUCT, {&#xA;variables: { itemID: myID },&#xA;  });&#xA;&#xA;  useEffect(() =&gt; {&#xA;      if (productData) {&#xA;        console.log(&quot;data: &quot; + productData) // logs nothing. &quot;Undefined&quot; when if statement is removed&#xA;      }&#xA;  }, [])&#xA;</code></pre>&#xA;",15583959,,,,2022-06-24 15:06:25,Passing ID in GraphQL query not returning data,<reactjs><graphql><apollo>,2,0,0,2022-06-24 11:59:55
72754592,2,,72751047,0,,"<p>Ok so I was able to fix this. I had accouple of small problems, but turns out my main problem was with the query itself. Here's the code if anyone wants.</p>&#xA;<pre><code>import axios, * as others from 'axios';&#xA;&#xA;const main = async () =&gt; {&#xA;    try {&#xA;        const result = await axios.post(&#xA;            'https://api.thegraph.com/subgraphs/name/sushiswap/exchange',&#xA;            {&#xA;                query: `&#xA;&#xA;                &#xA;query MyQuery{&#xA;    pair(id: &quot;0xc3d03e4f041fd4cd388c549ee2a29a9e5075882f&quot;,&#xA;        block: {number:14914285}) {&#xA;        token0 {&#xA;          symbol&#xA;          id&#xA;          decimals&#xA;        }&#xA;        token1{&#xA;          symbol&#xA;          id&#xA;          decimals&#xA;        }&#xA;        &#xA;        token0Price&#xA;        token1Price&#xA;        volumeUSD&#xA;    &#xA;      }&#xA;      }&#xA;&#xA;`&#xA;            }&#xA;        );&#xA;        console.log(result.data.data)&#xA;    } catch (error) {&#xA;        console.error(error);&#xA;    }&#xA;}&#xA;main();&#xA;</code></pre>&#xA;",19412090,,,,2022-06-25 14:13:19,"",,0,0,0,2022-06-25 14:13:19
72772218,1,,,0,79,<p>Elasticsearch mapping does not contains info about is field plural or not. So propName is singular and returns value or first value from array. propNameA is plural and returns array of values.</p>&#xA;<p>I am sending an array of object but graphQL is not sending a array of object but just an single object.</p>&#xA;,19426541,,,,2022-07-09 18:07:28,Node JS - GraphQL - Elastic Search - Elasticsearch mapping does not contains info about is field plural or not,<elasticsearch><graphql><express-graphql>,1,0,0,2022-06-27 12:36:22
72774141,2,,72773777,0,,"<p>I'm not sure but try this :</p>&#xA;<p>first update this line in the parent component :</p>&#xA;<pre><code>if (userData.me.id !== noteData.note.author.id) {&#xA;    return navigate(`/note/${id}`, { replace: true });&#xA; }&#xA;</code></pre>&#xA;<p>then in the child component i would like to do this :</p>&#xA;<pre><code>const NoteForm = ({content = &quot;&quot;, action}) =&gt; {&#xA;    const [value, setValue] = useState(content);&#xA;&#xA;    const onChange = event =&gt; {&#xA;        setValue(event.target.value);&#xA;    };&#xA;.....&#xA;&#xA;// then in the render of text area we only need a flat state contains value&#xA;&#xA;&lt;TextArea&#xA;  required&#xA;  type=&quot;text&quot;&#xA;  name=&quot;content&quot;&#xA;  placeholder=&quot;Note content&quot;&#xA;  value={value}&#xA;  onChange={onChange}&#xA;/&gt;&#xA;</code></pre>&#xA;<p>But if it doesn't work , try to set the state inside useEffect based on the value of content, dont't forget to give the state an initial value &quot;&quot;:</p>&#xA;<pre><code>useEffect(() =&gt; {&#xA;   if (content) {&#xA;     setValue(content);&#xA;   }&#xA;}, [content]);&#xA;</code></pre>&#xA;",8236370,,8236370,2022-06-27 15:04:23,2022-06-27 15:04:23,"",,0,4,0,2022-06-27 14:52:56
72794310,2,,58734176,1,,"<p>I was working with a large repo and what I needed was dependent repos with <strong>least a certain amount of stars</strong>.</p>&#xA;<p>So I modified @muvaf's answer, to only look for the dependent repos with at least <code>min_stars_cnt</code> stars.</p>&#xA;<p>You can also modify the <code>result_cnt</code> variable for the script to stop when you have a certain number of repos - in case you don't want to wait until you scrape all the dependents:</p>&#xA;<pre class=""lang-py prettyprint-override""><code>import time&#xA;import requests&#xA;from bs4 import BeautifulSoup&#xA;&#xA;repo = &quot;mochajs/mocha&quot;&#xA;url = 'https://github.com/{}/network/dependents'.format(repo)&#xA;nextExists = True&#xA;min_stars_cnt = 50&#xA;result_cnt = 100&#xA;result = []&#xA;while nextExists and len(result) &lt; result_cnt:&#xA;    # uncomment the line below to see progress.&#xA;    # print(&quot;url: &quot; + url + &quot;  &quot; + &quot;cnt: &quot; + str(len(result)))&#xA;    r = requests.get(url)&#xA;    soup = BeautifulSoup(r.content, &quot;html.parser&quot;)&#xA;&#xA;    tmp = [&#xA;        {&#xA;             &quot;name&quot;: &quot;{}/{}&quot;.format(&#xA;                t.find('a', {&quot;data-repository-hovercards-enabled&quot;:&quot;&quot;}).text,&#xA;                t.find('a', {&quot;data-hovercard-type&quot;:&quot;repository&quot;}).text&#xA;             ),&#xA;             &quot;stars&quot;: int(t.find(&quot;svg&quot;, {&quot;class&quot;: &quot;octicon-star&quot;}).parent.text.strip().replace(',', ''))&#xA;        }&#xA;        for t in soup.findAll(&quot;div&quot;, {&quot;class&quot;: &quot;Box-row&quot;})&#xA;    ]&#xA;    tmp = list(filter(lambda repo: repo[&quot;stars&quot;] &gt; min_stars_cnt, tmp))&#xA;    result = result + tmp&#xA;    nextExists = False&#xA;    try:&#xA;        for u in soup.find(&quot;div&quot;, {&quot;class&quot;:&quot;paginate-container&quot;}).findAll('a'):&#xA;            if u.text == &quot;Next&quot;:&#xA;                nextExists = True&#xA;                url = u[&quot;href&quot;]&#xA;    except Exception as e:&#xA;        print(e)&#xA;        print(&quot;waiting for 10 seconds...&quot;)&#xA;        time.sleep(10)&#xA;        nextExists = True&#xA;&#xA;for r in result:&#xA;  print(r[&quot;name&quot;] + &quot;, &quot; + str(r[&quot;stars&quot;]))&#xA;print(len(result))&#xA;</code></pre>&#xA;",7025986,,7025986,2022-06-29 00:51:42,2022-06-29 00:51:42,"",,0,0,0,2022-06-28 23:48:28
72796838,2,,72796560,2,,"<p>You're not returning anything in your <code>.map</code> (Assuming you really are getting data)</p>&#xA;<pre class=""lang-js prettyprint-override""><code>{posts.map((post) =&gt; {&#xA;          return &lt;BlogPost  &lt;---- notice the `return` keyword&#xA;            title={post.title}&#xA;            author={post.author}&#xA;            slug={post.slug}&#xA;            coverImage={post.coverImage}&#xA;            date={post.date}&#xA;          /&gt;;&#xA;        })}&#xA;</code></pre>&#xA;",6511388,,,,2022-06-29 06:40:57,"",,0,1,0,2022-06-29 06:40:57
72822654,2,,72813739,0,,"<p>You say:</p>&#xA;<blockquote>&#xA;<p>even if i send single json value</p>&#xA;<pre><code>rules: &quot;{ \&quot;==\&quot; : \&quot;[ { \&quot;var\&quot; : \&quot;a.on\&quot; }, true ]\&quot;}&quot;&#xA;</code></pre>&#xA;</blockquote>&#xA;<p>but the value given above is not a JSON value, it is a string. You may have better luck if you give an actual JavaScript object (there isn't such a thing as a &quot;JSON value&quot;), e.g.:</p>&#xA;<pre><code>rules: { &quot;==&quot; : [ { &quot;var&quot; : &quot;a.on&quot; }, true ]}&#xA;</code></pre>&#xA;",3857002,,,,2022-06-30 22:29:58,"",,0,0,0,2022-06-30 22:29:58
72830093,1,,,0,118,"<p>I got products with the option to choose size,&#xA;So If I add 'X' product to the cart with sizes 4 and 5 it will add 2 items to the cart like this :</p>&#xA;<p><a href=""https://i.stack.imgur.com/XuzB0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XuzB0.png"" alt=""enter image description here"" /></a></p>&#xA;<p>My goal is when you succeed buying that items from your cart the sizes that you just bought will be removed from main product page.</p>&#xA;<p>It works good only if I trying to buy 2 different items.&#xA;If I will try to buy 2 same items with different size only the first size will be filtered and I will get this error :</p>&#xA;<pre><code>(node:21336) UnhandledPromiseRejectionWarning: VersionError: No matching document found for id &quot;62bee4ce92e7c57a195686ae&quot; version 0 modifiedPaths &quot;size&quot;&#xA;</code></pre>&#xA;<p>this is the success buy code :</p>&#xA;<pre><code>createOrder: async (_, {}, context) =&gt; {&#xA;      const userAuth = await auth(context);&#xA;      const cart = await Cart.findOne({ userId: userAuth._id });&#xA;&#xA;      cart.cartProducts.forEach(async (p) =&gt; { // Here's the filtering product functionallity&#xA;        const products = await Product.findById(p.productId);&#xA;        if (products) {&#xA;          products.size = products.size.filter((s) =&gt; s !== +p.size);&#xA;        }&#xA;        await products.save();&#xA;      });&#xA;&#xA;      if (!cart) {&#xA;        throw new UserInputError('No available order!');&#xA;      }&#xA;&#xA;      const newOrder = new Order({&#xA;        orderProducts: cart.cartProducts,&#xA;        purchasedBy: userAuth._id,&#xA;        datePurchased: new Date().toISOString(),&#xA;      });&#xA;&#xA;      await newOrder.save();&#xA;&#xA;      return newOrder;&#xA;    },&#xA;</code></pre>&#xA;<p>as I said it works only if you add 2 different items to your cart.</p>&#xA;<p>edited:</p>&#xA;<p>Now I am getting product.save is not a function</p>&#xA;<pre><code> const userAuth = await auth(context);&#xA;  const cart = await Cart.findOne({ userId: userAuth._id });&#xA;  const products = await Product.find({&#xA;    _id: cart.cartProducts.map((c) =&gt; c.productId),&#xA;  });&#xA;&#xA;   cart.cartProducts.forEach(async (p) =&gt; {&#xA;    if (products) {&#xA;      products.map((product) =&gt; {&#xA;        return (product.size = product.size.filter(&#xA;          (size) =&gt; size !== +p.size&#xA;        ));&#xA;      });&#xA;    }&#xA;  });&#xA;  &#xA;  await products.save();&#xA;</code></pre>&#xA;",13574542,,13574542,2022-07-01 16:41:05,2022-07-01 16:41:05,update products with the same id,<node.js><redux><graphql><store><apollo-server>,1,0,0,2022-07-01 13:33:54
72830264,2,,72830093,1,,<p>The issue is that you are using <strong>findById</strong> which will return the first matching document. So that is why when you add same product with different size in cart. It will always pick the first matching id of the product. You can try using find operator as it returns the list matching the condition.</p>&#xA;<pre><code>Product.find({_id:p.productId});&#xA;</code></pre>&#xA;<p>It will return all of the products instead of matching only the first one.</p>&#xA;,12762871,,,,2022-07-01 13:46:39,"",,0,1,0,2022-07-01 13:46:39
72832425,1,,,0,16,"<p>trying to update products size after purchasing and getting products.save is not a function.&#xA;I am getting the size from the products in the cart, and when you succeed purchasing that product my aim is to filter that size from the product page.</p>&#xA;<pre><code>createOrder: async (_, {}, context) =&gt; {&#xA;      const userAuth = await auth(context);&#xA;      const cart = await Cart.findOne({ userId: userAuth._id });&#xA;      const products = await Product.find({&#xA;        _id: cart.cartProducts.map((c) =&gt; c.productId),&#xA;      });&#xA;&#xA;      cart.cartProducts.forEach((p) =&gt; {&#xA;        if (products) {&#xA;          products.map((product) =&gt; {&#xA;            return (product.size = product.size.filter(&#xA;              (size) =&gt; size !== +p.size&#xA;            ));&#xA;          });&#xA;        }&#xA;      });&#xA;&#xA;      await products.save(); // Here is the problem&#xA;&#xA;      if (!cart) {&#xA;        throw new UserInputError('No available order!');&#xA;      }&#xA;&#xA;      const newOrder = new Order({&#xA;        orderProducts: cart.cartProducts,&#xA;        purchasedBy: userAuth._id,&#xA;        datePurchased: new Date().toISOString(),&#xA;      });&#xA;&#xA;      await newOrder.save();&#xA;&#xA;      return newOrder;&#xA;    },&#xA;</code></pre>&#xA;",13574542,,,,2022-07-01 16:49:06,save is not a function while trying to update values,<node.js><mongoose><graphql><apollo-server>,0,1,0,2022-07-01 16:49:06
72835849,1,,,0,377,"<p>I'm attempting to use the <a href=""https://docs.github.com/en/enterprise-cloud@latest/issues/trying-out-the-new-projects-experience/using-the-api-to-manage-projects#finding-information-about-items-in-a-project"" rel=""nofollow noreferrer"">GitHub ProjectV2 API</a> to query a GitHub Projects beta project to obtain the <code>title</code> or a given GitHub Project Item.</p>&#xA;<p>Unfortunately, I'm not well-versed in GraphQL and struggling to complete the query. What am I missing from the following GraphQL query to get this to work?</p>&#xA;<pre><code>query {&#xA;   node(id: \&quot;PROJECT_NODE_ID\&quot;) { &#xA;      ... on ProjectV2 { &#xA;          items(id:\&quot;PROJECT_ITEM_ID\&quot;) &#xA;      } &#xA;   } &#xA;   content{ &#xA;      ... on DraftIssue { &#xA;          title &#xA;      } &#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>As written, this returns the following error:</p>&#xA;<blockquote>&#xA;<p>Field must have selections (field 'items' returns ProjectV2ItemConnection but has no selections. Did you mean 'items { ... }'?)&quot;}</p>&#xA;</blockquote>&#xA;",2308858,,,,2022-07-05 21:10:12,How do I query a GitHub Project Item title from GraphQL?,<graphql><github-api>,1,0,0,2022-07-02 01:25:16
72836597,1,72839389,,2,495,"<p>I am trying to create a new commit using the github graphql api, using the <a href=""https://github.blog/changelog/2021-09-13-a-simpler-api-for-authoring-commits/"" rel=""nofollow noreferrer"">createCommitOnBranch</a> mutation.&#xA;What value should one use for expectedHeadOid: &quot;?????&quot;?&#xA;How can one get such value from the Graphql API?</p>&#xA;<p>This is my attempt so far:</p>&#xA;<p>{&#xA;mutation m1 {&#xA;createCommitOnBranch(&#xA;input: {&#xA;branch:&#xA;{repositoryNameWithOwner: &quot;some_repo/some_owner&quot;,&#xA;branchName: &quot;main&quot;&#xA;},&#xA;message: {headline: &quot;headline!&quot;},&#xA;fileChanges: {&#xA;additions: {path: &quot;README.md&quot;, contents: &quot;SGVsbG8gV29ybGQ=&quot;}&#xA;}&#xA;expectedHeadOid: &quot;?????&quot;&#xA;}&#xA;)&#xA;}&#xA;}</p>&#xA;",11639182,,11639182,2022-07-02 12:35:52,2022-10-14 04:31:54,How to create new commit with the github graphql API?,<github><graphql>,1,0,0,2022-07-02 05:05:40
72839389,2,,72836597,2,,"<p>It should be the parent commit of the new commit you want to create.<br />&#xA;Hence the <code>&quot;expectedHeadOid&quot;: &quot;git rev-parse HEAD&quot;</code> which prints the SHA1 hash of <code>HEAD</code> (<code>HEAD</code> of the remote repository on top of which you want to append a new commit using <a href=""https://docs.github.com/en/graphql/reference/mutations#createcommitonbranch"" rel=""nofollow noreferrer"">a mutation <code>createcommitonbranch</code></a>, and <a href=""https://docs.github.com/en/graphql/reference/input-objects#createcommitonbranchinput"" rel=""nofollow noreferrer"">its endpoint</a>).</p>&#xA;<blockquote>&#xA;<p><code>expectedHeadOid</code> (GitObjectID!)<br />&#xA;The git commit oid expected at the head of the branch prior to the commit.</p>&#xA;</blockquote>&#xA;<p><a href=""https://github.com/octokit/graphql-schema/blob/03a3c40ae9770fc1f1ff98c077baa7aca68707e1/schema.d.ts#L3063-L3064="" rel=""nofollow noreferrer"">In octokit</a>, it is described as:</p>&#xA;<blockquote>&#xA;<p>The git commit oid expected at the head of the branch prior to the commit.</p>&#xA;</blockquote>&#xA;<p><a href=""https://github.com/brasic"" rel=""nofollow noreferrer"">Carl Brasic</a> shows in his gist &quot;<a href=""https://gist.github.com/brasic/964dfc371d524a09d602745ae3b238ff"" rel=""nofollow noreferrer"">createCommitOnBranch error example</a>&quot; what happens if you pass an out of date <code>expectedHeadOid</code> value</p>&#xA;<blockquote>&#xA;<p>We are <em>intentionally</em> telling the API to append a commit to the branch only if the tip is a value that we know it is not.<br />&#xA;Assuming this clone is up to  date with the remote this will always fail with a descriptive error.</p>&#xA;<pre><code>expectedHeadOid=`git rev-parse HEAD~`&#xA;</code></pre>&#xA;</blockquote>&#xA;<p>Error:</p>&#xA;<pre><code>&quot;message&quot;: &quot;Expected branch to point to \&quot;f786b7e2e0ec290972a2ada6858217ba16305933\&quot; &#xA;            but it did not.  Pull and try again.&quot;&#xA;</code></pre>&#xA;<hr />&#xA;<p><a href=""https://iq.opengenus.org/api-requests-in-java/#apirequestforfileuploadorreupload"" rel=""nofollow noreferrer"">This example</a> uses a first query (<code>defaultBranchRef</code> ) to get the parameter value for the second one (<code>CreateCommitOnBranchInput</code>), useful when you don't have a locally cloned repository:</p>&#xA;<blockquote>&#xA;<p>Step 1. Query the OID of the last commit to the branch, as it is required to make a commit.<br />&#xA;Example graphQL query is shown below:</p>&#xA;</blockquote>&#xA;<pre><code>{&#xA;  repository(name: &quot;my-new-repository&quot;, owner: &quot;AnnaBurd&quot;) {&#xA;    defaultBranchRef {&#xA;      target {&#xA;        ... on Commit {&#xA;          history(first: 1) {&#xA;            nodes {&#xA;              oid&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Step 2. Use graphQL mutation called &quot;<code>CreateCommitOnBranchInput</code>&quot; to create a commit with new file content:</p>&#xA;<pre><code>----------------------mutation ------------------&#xA;mutation ($input: CreateCommitOnBranchInput!) {&#xA;  createCommitOnBranch(input: $input) {&#xA;    commit {&#xA;      url&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;-----------variables for mutation---------------&#xA;{&#xA;  &quot;input&quot;: {&#xA;    &quot;branch&quot;: {&#xA;      &quot;repositoryNameWithOwner&quot;: &quot;AnnaBurd/my-new-repository&quot;,&#xA;      &quot;branchName&quot;: &quot;main&quot;&#xA;    },&#xA;    &quot;message&quot;: {&#xA;      &quot;headline&quot;: &quot;Hello from GraphQL!&quot;&#xA;    },&#xA;    &quot;fileChanges&quot;: {&#xA;      &quot;additions&quot;: [&#xA;        {&#xA;          &quot;path&quot;: &quot;myfile.txt&quot;,&#xA;          &quot;contents&quot;: &quot;SGVsbG8gZnJvbSBKQVZBIGFuZCBHcmFwaFFM&quot;      &lt;------- encoded base 64&#xA;        }&#xA;      ]&#xA;    },&#xA;    &quot;expectedHeadOid&quot;: &quot;db7a5d870738bf11ce1fc115267d13406f5d0e76&quot;  &lt;----- oid from step 1&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6309,,6309,2022-07-02 13:31:28,2022-07-02 13:31:28,"",,0,5,0,2022-07-02 13:24:30
72861361,1,72861515,,2,45,"<p>I'm new to GraphQL, I can't figure out why when I request to get data, for example <code>data.category.products</code>, I get the correct output, but for example, if I request <code>data.category.products.prices</code>, I will get this error: <em>TypeError: data. category.products.prices is undefined</em></p>&#xA;<p>My Query:</p>&#xA;<pre><code>query AllCategory{&#xA;  category {&#xA;    products {&#xA;      id&#xA;      prices {&#xA;        currency {&#xA;          label&#xA;        }&#xA;        amount&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Doesn't give errors in Playground</p>&#xA;<p>Here is the schema:&#xA;<a href=""https://i.stack.imgur.com/jmUD5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jmUD5.png"" alt=""enter image description here"" /></a></p>&#xA;<p>And actually how I call: (this is with an error)</p>&#xA;<pre><code>export default function App() {&#xA;&#xA;   const {data} = useQuery(QUERIES)&#xA;&#xA;   return (&#xA;    &#xA;     &lt;div className=&quot;App&quot;&gt;&#xA;       {data.category.products.prices.map((shop) =&gt; (&#xA;         &lt;p key={shop.currency.label}&gt;{shop.amount}&lt;/p&gt;&#xA;       ))}&#xA;     &lt;/div&gt;&#xA;   );&#xA;}&#xA;</code></pre>&#xA;<p>There is no error here:</p>&#xA;<pre><code>{data.category.products.map((shop) =&gt; (&#xA;   &lt;p key={shop.id}&gt;{shop.id}&lt;/p&gt;&#xA;))}&#xA;</code></pre>&#xA;<p>I`m using apollo client</p>&#xA;",14589721,,,,2022-07-04 21:11:56,"Apollo GraphQL, when fetching typeerror: is undefined",<reactjs><graphql><apollo-client>,1,2,0,2022-07-04 19:42:17
72861515,2,,72861361,1,,<p>Products and prices are both arrays so you will need to flatten it or map first through your products and then through your prices.</p>&#xA;<p>I'd break off a component or 2. .It's not clear if you want to render product level stuff. but it would be something along these lines:</p>&#xA;<pre><code>&#xA;const Product = (product) =&gt; (&#xA;  &lt;&gt;&#xA;    {product.prices.map((price) =&gt; (&#xA;      &lt;p key={price.currency.label}&gt;{price.amount}&lt;/p&gt;&#xA;    ))}&#xA;  &lt;/&gt;&#xA;);&#xA;&#xA;class App extends React.Component {&#xA;  render() {&#xA;    return (&#xA;      &lt;&gt;&#xA;        {data.category.products.map((product) =&gt; (&#xA;          &lt;Product product={product} /&gt;&#xA;        ))}&#xA;      &lt;/&gt;&#xA;    );&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I'd also recommend you generate a type safe graphql schema so that you can pick up on type issues at compile time.</p>&#xA;<p>You also want to ensure that <code>data</code> is not null by doing a truthiness check before returning as its an asynchronous call - <code>data</code> is defined once the  graphql response is made.&#xA;e.g..&#xA;<code>return !data?null:&lt;&gt;......&lt;/&gt;</code></p>&#xA;<p><code>useQuery</code> also returns <code>loading</code> and <code>error</code> values from the hook which are useful</p>&#xA;,1801403,,1801403,2022-07-04 21:11:56,2022-07-04 21:11:56,"",,0,9,0,2022-07-04 20:02:16
72866888,2,,72770525,0,,"<p>Instead of waiting for any reply, I struggled and found the solution by myself, below is my solution and it worked for me, experts feedbacks are requested to suggest for any improvement. My Graphql query is working now as below.</p>&#xA;<pre><code>query{&#xA; feeds {&#xA;  id&#xA;  feedname&#xA;  feedtime&#xA;  feeditems {&#xA;    farmintakes {&#xA;      id&#xA;      name&#xA;      remarks&#xA;    }&#xA;    id&#xA;    qty&#xA;    mesunit&#xA;    description&#xA;    remarks&#xA;  }&#xA;}&#xA;}&#xA;</code></pre>&#xA;<p>Query Result as I wanted:</p>&#xA;<pre><code>{&#xA;&quot;data&quot;: {&#xA;  &quot;feeds&quot;: [&#xA;    {&#xA;      &quot;id&quot;: &quot;62b417a91797e5053c2d58a3&quot;,&#xA;      &quot;feedname&quot;: &quot;Dana&quot;,&#xA;      &quot;feedtime&quot;: &quot;Evening&quot;,&#xA;      &quot;feeditems&quot;: [&#xA;        {&#xA;          &quot;farmintakes&quot;: [&#xA;            {&#xA;              &quot;id&quot;: &quot;62323fd1109749e4a4f49a02&quot;,&#xA;              &quot;name&quot;: &quot;Green Maiz Leaf (Makai Chara)&quot;,&#xA;              &quot;remarks&quot;: &quot;Green sliced maiz for evening feed &quot;&#xA;            }&#xA;          ],&#xA;          &quot;id&quot;: &quot;62b418ad1797e5053c2d58b2&quot;,&#xA;          &quot;qty&quot;: 6,&#xA;          &quot;mesunit&quot;: &quot;Kg&quot;,&#xA;          &quot;description&quot;: &quot;Testing Goat Feed&quot;,&#xA;          &quot;remarks&quot;: &quot;1st Goat Feed&quot;&#xA;        },&#xA;        {&#xA;          &quot;farmintakes&quot;: [&#xA;            {&#xA;              &quot;id&quot;: &quot;62323f06109749e4a4f499ff&quot;,&#xA;              &quot;name&quot;: &quot;Millet (Jawar)&quot;,&#xA;              &quot;remarks&quot;: &quot;Mix with morning feed of Goat&quot;&#xA;            }&#xA;          ],&#xA;          &quot;id&quot;: &quot;62b4183b1797e5053c2d58ad&quot;,&#xA;          &quot;qty&quot;: 3.5,&#xA;          &quot;mesunit&quot;: &quot;Kg&quot;,&#xA;          &quot;description&quot;: &quot;Testing Goat Feed&quot;,&#xA;          &quot;remarks&quot;: &quot;1st Goat Feed&quot;&#xA;        },&#xA;        {&#xA;          &quot;farmintakes&quot;: [&#xA;            {&#xA;              &quot;id&quot;: &quot;62323e49109749e4a4f499fc&quot;,&#xA;              &quot;name&quot;: &quot;Barley (Jau)&quot;,&#xA;              &quot;remarks&quot;: &quot;Mix with morning feed of Goat&quot;&#xA;            }&#xA;          ],&#xA;          &quot;id&quot;: &quot;62b417d11797e5053c2d58a8&quot;,&#xA;          &quot;qty&quot;: 2.5,&#xA;          &quot;mesunit&quot;: &quot;Kg&quot;,&#xA;          &quot;description&quot;: &quot;Testing Goat Feed&quot;,&#xA;          &quot;remarks&quot;: &quot;1st Goat Feed&quot;&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;}&#xA;</code></pre>&#xA;<p>After changes the Schema looking like as:</p>&#xA;<pre><code>const feeditemSchema = new Schema({&#xA;feedId : {type: Schema.Types.ObjectId,ref: 'Feed'},&#xA;farmintakeId : {type: Schema.Types.ObjectId,ref: 'Farmintake'},&#xA;mesunit: {type: String},&#xA;qty: { type: Number },&#xA;description:{ type: String },&#xA;remarks:{ type: String }&#xA;&#xA;});&#xA;&#xA;const feedSchema = new Schema({&#xA;feedname:{ type: String },&#xA;feedtime:{ type: String },&#xA;feeditems:[ {type: Schema.Types.ObjectId,ref: 'Feeditem'}],&#xA;description:{ type: String },&#xA;creator: {type: Schema.Types.ObjectId,ref: 'User'}&#xA;},{ timestamps: true });&#xA;&#xA;const farmintakeSchema = new Schema({&#xA;name:{type: String,required: true},&#xA;itmtype:{type: String,required: true},&#xA;madein:{type: String,required: true},&#xA;mesunit:{type: String},&#xA;usage:{type: String},&#xA;remarks:{type: String},&#xA;&#xA;creator: {type: Schema.Types.ObjectId,ref: 'User'}&#xA;},{ timestamps: true}&#xA;);&#xA;module.exports = mongoose.model('Feed', feedSchema );&#xA;module.exports = mongoose.model('Feeditem',feeditemSchema);&#xA;module.exports = mongoose.model('Farmintake',farmintakeSchema);&#xA;</code></pre>&#xA;<p>TypeDefs:</p>&#xA;<pre><code>type Feed {&#xA;  id: ID!&#xA;  feedname: String!&#xA;  feedtime: String!&#xA;  description: String&#xA;  feeditems:[Feeditem!]!&#xA;  &#xA; }&#xA;&#xA; type Farmintake {&#xA;  id: ID!&#xA;  name: String!&#xA;  itmtype: String&#xA;  madin: String&#xA;  mesunit: String&#xA;  usage: String&#xA;  remarks: String&#xA; }&#xA;&#xA; type Feeditem{&#xA;  id: ID!&#xA;  mesunit: String&#xA;  qty: Float&#xA;  description: String&#xA;  remarks: String&#xA;  farmintakes:[Farmintake!]!&#xA; }&#xA;</code></pre>&#xA;<p>Finally the Resolver:</p>&#xA;<pre><code>Feed:{&#xA;      feeditems:(parent,args,context) =&gt; {&#xA;      const { Fid } = parent.id;&#xA;      return feeditems.filter((feeditem) =&gt; feeditem.feedid === Fid );&#xA;  &#xA;     },&#xA;   },&#xA;Feeditem:{&#xA;  farmintakes:(parent,args,context) =&gt; {&#xA;    const { Fiid } = parent.farmintakeId;&#xA;    return farmintakes.filter(( farmintake ) =&gt; farmintake.id === &#xA; parent.farmintakeId );&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;",11553204,,,,2022-07-05 09:17:50,"",,0,0,0,2022-07-05 09:17:50
72893696,2,,72772218,0,,"<p>Got the answer, just add the following <code>pluralFields</code> to <code>graphql-compose-elasticsearch</code></p>&#xA;<pre><code>const UserTC = composeWithElastic({&#xA;  graphqlTypeName: 'UserES',&#xA;  elasticIndex: 'user',&#xA;  elasticType: 'user',&#xA;  elasticMapping: mapping,&#xA;  elasticClient: new elasticsearch.Client({&#xA;    host: 'http://localhost:9200',&#xA;    apiVersion: '5.0',&#xA;    log: 'trace',&#xA;  }),&#xA;  // elastic mapping does not contain information about is fields are arrays or not&#xA;  // so provide this information explicitly for obtaining correct types in GraphQL&#xA;  pluralFields: ['skills', 'languages'],&#xA;});&#xA;</code></pre>&#xA;<p>Reference: <a href=""https://www.npmjs.com/package/graphql-compose-elasticsearch?activeTab=readme"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/graphql-compose-elasticsearch?activeTab=readme</a></p>&#xA;",19426541,,14267427,2022-07-09 18:07:28,2022-07-09 18:07:28,"",,0,0,0,2022-07-07 07:16:34
72896614,1,,,1,105,"<p>I'm calling an API where a field is optional and for some records it will not exists so it won't return e.g:</p>&#xA;<pre><code>...&#xA;media_gallery {&#xA;    url&#xA;    label,&#xA;    ... on ProductVideo {&#xA;         video_content {&#xA;          video_url&#xA;       }&#xA;    }&#xA; } &#xA; ...&#xA;</code></pre>&#xA;<p>In this case above <code>video_content</code> object for some record it will not return. I've searched the web and apply various possible fix but not luck, one being fragments and possible types ref:<a href=""https://www.apollographql.com/docs/react/data/fragments/#fragment-matcher"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/data/fragments/#fragment-matcher</a>, apply all of them without errors but the issue still persists.</p>&#xA;<p>Anyone has any idea how to make apollo understand that this field is optional?</p>&#xA;<p>Thanks</p>&#xA;",4578765,,,,2022-07-28 18:52:02,Angular 11 Apollo graphql - WARNING: heuristic fragment matching going on! - Missing Field Warning,<graphql><apollo><apollo-client><angular11>,1,1,0,2022-07-07 10:58:44
72903815,1,72905225,,2,190,"<p>I placed this question below, a solution was provided and it works well for rest APIs:<br>&#xA;<a href=""https://stackoverflow.com/questions/72898575/in-google-sheets-how-can-i-output-an-array-of-importjson-calls-using-a-column"">In Google Sheets, how can I output an array of IMPORTJSON() calls using a column as reference?</a></p>&#xA;<p>The problem is that actually the API that will be used is a GraphQL API and the script does not work well for this situation. It returns blank only.</p>&#xA;<p>This is the script proposed in the solution above (check url), slightly modified for my needs,  and works for REST API but not for a GraphQL API:</p>&#xA;<pre><code>function importAllJSONArray(url) {&#xA;  var listUrls = Array.isArray(url) ? url.flat() : [url]&#xA;  var listXpath = []&#xA;  var result = []&#xA;  listUrls.forEach((address, i) =&gt; {&#xA;    var prov = []&#xA;    var json = JSON.parse(UrlFetchApp.fetch(address).getContentText())&#xA;    if (i == 0) { &#xA;      listXpath = Object.keys(json); &#xA;      result.push(listXpath)&#xA;    }&#xA;    listXpath.forEach(xp =&gt; {&#xA;      prov.push(json[xp])&#xA;    })&#xA;    result.push(prov)&#xA;  })&#xA;  return result&#xA;}&#xA;</code></pre>&#xA;<p>The custom function is being called like so:</p>&#xA;<pre><code>=QUERY(&#xA;    ARRAYFORMULA(&#xA;        importAllJSONArray(&quot;https://marketplace-api.pegaxy.io/graphql?operationName=QueryPegaListing&amp;variables=%7B%22id%22%3A&quot;&amp;QUERY(&#xA;        {A2:A},&quot;SELECT * WHERE Col1 IS NOT NULL&quot;)&amp;&quot;%7D&amp;extensions=%7B%22persistedQuery%22%3A%7B%22version%22%3A1%2C%22sha256Hash%22%3A%220bd7bcc0b53b0348328cbdfe6934685e7f7e272e607eca0552108fbbb8cee79f%22%7D%7D&quot;&#xA;        )&#xA;    ),&#xA;&quot;OFFSET 1&quot;,0)&#xA;</code></pre>&#xA;<p>Note that the formula works for the REST API so should work for the GraphQL API urls.</p>&#xA;<p>For the REST API it is ok:<br>&#xA;<a href=""https://i.stack.imgur.com/Giyyf.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Giyyf.jpg"" alt=""enter image description here"" /></a></p>&#xA;<p>For a GraphQL API it returns empty (because of the <code>Query Offset</code>. Without the Query it returns only <code>data</code>):<br>&#xA;<a href=""https://i.stack.imgur.com/NgmsH.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NgmsH.jpg"" alt=""enter image description here"" /></a></p>&#xA;<p>Is there any tweak that can be applied for the script above to work for GraphQL APIs?</p>&#xA;<p>Check my demo file to have a better idea:<br>&#xA;<a href=""https://docs.google.com/spreadsheets/d/1OVXk9MVRtVXiOl-btz3BI33UZu-c2F6Nro4jRZBmMsk/edit"" rel=""nofollow noreferrer"">https://docs.google.com/spreadsheets/d/1OVXk9MVRtVXiOl-btz3BI33UZu-c2F6Nro4jRZBmMsk/edit</a></p>&#xA;",16498578,,,,2022-07-07 23:29:51,"In Google Sheets, how to output an array of GraphQL API calls using a column as reference?",<arrays><google-apps-script><google-sheets><graphql><google-sheets-formula>,1,0,0,2022-07-07 20:23:16
72905133,1,,,0,127,"<p>I'm trying to get a list of all of the times a new batch of commits was pushed to a PR on GitHub.</p>&#xA;<p>I've figured out how to determine when commits are force pushed with the following query:</p>&#xA;<pre><code>query { &#xA;  repository (name: $repo, owner: $org)&#xA;  {&#xA;    pullRequest(number: $prNumber)&#xA;    {&#xA;      timelineItems (first: 250) {&#xA;        edges {&#xA;          node&#xA;          {&#xA;            ... on HeadRefForcePushedEvent&#xA;            {&#xA;              id,&#xA;              beforeCommit&#xA;              {&#xA;                oid&#xA;              },&#xA;              afterCommit&#xA;              {&#xA;                oid&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>From this query, I can determine when a PR was force pushed and connect the old commits to the new commits, but I can't determine when a PR was non-force-pushed.</p>&#xA;<p>I tried to use the <code>pushedDate</code> field on the <code>GitCommit</code> object to give me a mechanism to group the commits that are pushed together into the same batch with the following query, but all of the <code>pushedDate</code> fields in the resulting data is always <code>null</code>.</p>&#xA;<pre><code>query { &#xA;  repository (name: &quot;runtime&quot;, owner: &quot;dotnet&quot;)&#xA;  {&#xA;    pullRequest(number: 71470)&#xA;    {&#xA;      timelineItems (first: 250) {&#xA;        edges {&#xA;          node&#xA;          {&#xA;            ... on PullRequestCommit&#xA;            {&#xA;              commit&#xA;              {&#xA;                oid&#xA;                pushedDate&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Any suggestions on how to collect all of the pushes to a PR in GitHub instead of just getting the list of commits?</p>&#xA;",823682,,,,2022-07-07 23:14:32,GitHub GraphQL API: Get all pushes to a given Pull Request,<github><github-graphql>,0,0,0,2022-07-07 23:14:32
72908423,1,,,0,34,"<p>I want to be able to detect and extract GraphQL content in any text / payload. Eg:</p>&#xA;<pre><code>Input: abcdefquery getHero{Hulk,IronMan,DoctorStrange}0123&#xA;&#xA;Output: query getHero{Hulk,IronMan,DoctorStrange}&#xA;</code></pre>&#xA;<p>I tried looking up before posting here but couldn't find any leads. Any thoughts are appreciated. Thanks!</p>&#xA;",7368517,,7368517,2022-07-11 15:01:55,2022-07-11 15:01:55,Is there a way to detect & extract GraphQL content in any random text,<graphql><graphql-js><graphql-java><express-graphql><prisma-graphql>,0,0,0,2022-07-08 08:04:20
72918455,1,,,0,42,"<p>I'm new to graphql, I have some users that can follow each other and they have a list of products, what would be the way to go to create a feed of products of the users you follow?</p>&#xA;<p>The <code>user</code> has a property called <code>listing</code> that has a relation to the <code>products</code> (which has a relation to the user with a property called <code>author</code>)</p>&#xA;<p>Basically the user looks like this:</p>&#xA;<pre><code>User object&#xA;{&#xA;  ...&#xA;  listing: [ &quot;id1&quot;, &quot;id2&quot; ]&#xA;}&#xA;</code></pre>&#xA;<p>and the product like this:</p>&#xA;<pre><code>Product object&#xA;{&#xA;  ...&#xA;  author: { User1 }&#xA;}&#xA;</code></pre>&#xA;<p>what would be the best approach to write a query to get the products from the followed users?</p>&#xA;<p>other maybe useful information:</p>&#xA;<ul>&#xA;<li>the data is stored in a mongodb database</li>&#xA;<li>the <code>listings</code> and the <code>author</code> are stored as ids but can be populated with the full object</li>&#xA;</ul>&#xA;<p>thanks!</p>&#xA;",3314997,,3314997,2022-07-09 02:19:35,2022-07-10 06:26:19,Generate a feed from followed users items with GraphQL (nestjs),<angular><typescript><graphql><nestjs><feed>,1,0,0,2022-07-09 02:13:35
72920159,2,,72904458,0,,"<p>The issue was due to order of operations</p>&#xA;<p>data is undefined while the query is still loading or has an error, here is the correct syntax:</p>&#xA;<p><a href=""https://stackoverflow.com/questions/72917274/cannot-destructure-graphql-query-as-apollo-client-is-undefined/72917708#72917708"">Cannot destructure GraphQL query as apollo-client is undefined?</a></p>&#xA;<p>I have also revised my technique within this answer to de-structure the object correctly</p>&#xA;",17332076,,,,2022-07-09 09:04:18,"",,0,0,0,2022-07-09 09:04:18
72920170,1,,,-1,51,"<p>I am building a React-Nextjs application. I am connecting graphql api in my project. I write one request function-</p>&#xA;<pre><code>await axios.post(process.env.NEXT_PUBLIC_API_URL as string, {&#xA;    query: `&#xA;    query isListed {&#xA;        isListed(name: [&quot;Thor: Love and Thunder&quot;]) {&#xA;          name&#xA;          isWatchlisted&#xA;          isWishlisted&#xA;        }&#xA;      }`&#xA;})&#xA;    .then(res =&gt; console.log(res))&#xA;    .catch(err =&gt; console.log(err))&#xA;</code></pre>&#xA;<p>This is working properly. Here You can see that <code>[&quot;Thor: Love and Thunder&quot;]</code>, I am sending static data. When I try to use dynamic data Then I face the problem. The api documentation says that they only accept array of string.</p>&#xA;<p>Here is example when I try to use dynamic data-</p>&#xA;<pre><code>const test = [&quot;Thor: Love and Thunder&quot;]&#xA;//Here I try to use this test data&#xA;&#xA;await axios.post(process.env.NEXT_PUBLIC_API_URL as string, {&#xA;    query: `&#xA;    query isListed {&#xA;        isListed(name: ${test}) {&#xA;          name&#xA;          isWatchlisted&#xA;          isWishlisted&#xA;        }&#xA;      }`&#xA;})&#xA;    .then(res =&gt; console.log(res))&#xA;    .catch(err =&gt; console.log(err))&#xA;</code></pre>&#xA;<p>When I try it, it gives me a syntax error. But I can't understand what is the different between this two example. Please help me.</p>&#xA;",19093107,,,,2022-07-09 11:02:14,I am facing a difficult and critical problem with javascript array?,<javascript><arrays><object><graphql><react-graph-vis>,1,1,0,2022-07-09 09:06:45
72920812,2,,72920170,0,,"<p>You are interpolating strings. Arrays, when coerced into a string, will be joined with commas, but without brackets. For instance, <code>let a=[1,2,3]; let s=`${a}`;</code> will give you the string s with value <code>'1,2,3'</code>.</p>&#xA;<p>In your case, you have two options: use a string literal instead of the array, or use <code>JSON.stringify</code> when interpolating.</p>&#xA;<p>So either</p>&#xA;<pre><code>const test = '[&quot;Thor: Love and Thunder&quot;]'&#xA;…&#xA;</code></pre>&#xA;<p>or</p>&#xA;<pre><code>…&#xA;query: `&#xA;    query isListed {&#xA;        isListed(name: ${JSON.stringify(test)}) {&#xA;          name&#xA;          isWatchlisted&#xA;          isWishlisted&#xA;        }&#xA;      }`&#xA;…&#xA;</code></pre>&#xA;",112968,,,,2022-07-09 11:02:14,"",,0,0,0,2022-07-09 11:02:14
72922201,1,,,0,37,"<p>I am using Nuxt 3 and I have a composable set up to do graphQL queries.</p>&#xA;<p>As you can see in my <a href=""https://stackblitz.com/edit/nuxt-starter-zwcm2g?file=app.vue,composables%2FuseGQL.js"" rel=""nofollow noreferrer"">stackblitz</a> the data is coming in fine.&#xA;However I can't seem to target a property with a path. If you uncomment the path you will see the error.&#xA;I have tried using v-if to check that the data exists before targetting , perhaps I need a different condition. Will keep trying here and update if I find a way.</p>&#xA;<p>edit: So I found a solution but I would love to know why it works. In the fetch , I returned json.data instead of json. I won't post an answer because it would not be a thorough one! Hoping for someone with a thorough grasp of why one can't use the json object as is , as opposed to using the 'data' attribute on it.</p>&#xA;",11130160,,13416247,2022-09-28 10:25:47,2022-09-28 10:25:47,"Data from fetch displaying on page, but isolating a property results in undefined value",<graphql><vuejs3><strapi><nuxtjs3>,1,0,0,2022-07-09 14:31:22
72926540,2,,72918455,0,,"<p>I solved it by using the following mongoose find:</p>&#xA;<pre><code>this.productModel&#xA;      .find({&#xA;        seller: { $in: following },&#xA;      })&#xA;</code></pre>&#xA;<p>where <code>following</code> is the array of id's the user is following, then I populate the <code>seller</code> with <code>.populate('seller').exec()</code></p>&#xA;",3314997,,,,2022-07-10 06:26:19,"",,0,0,0,2022-07-10 06:26:19
72949275,1,,,0,116,"<p>Given a list of repositories on GitHub with 'repoName' and 'userName', I need to find all the '.java' files, and get the content of the java files. Tried to use RestAPI first, but ran into the rate limit very easily, now I'm switching to GraphQL API, but don't know how to achieve that.</p>&#xA;",8360590,,8360590,2022-07-12 08:32:29,2022-07-20 15:11:21,Get file content on Github with GraphQL API and Python,<github><graphql>,1,0,0,2022-07-12 08:31:59
72955282,2,,72941782,0,,"<p>The problem was in the nested unions. GraphQL does not support these. And on the part of plain union not working - I still have no idea of reasons for such behavior, but it fixed itself after N-th restart.</p>&#xA;",13365653,,,,2022-07-12 16:07:14,"",,0,0,0,2022-07-12 16:07:14
72955954,1,,,1,424,"<p>I got this code for getting page and products limit in backend:</p>&#xA;<pre><code>getProductsPagination: async (_, { page }) =&gt; {&#xA;  const skip = (page - 1) * 12;&#xA;  const limit = 12;&#xA;  const total = await Product.countDocuments();&#xA;&#xA;  let query = Product.find({});&#xA;&#xA;  query = query.skip(skip).limit(limit);&#xA;  const pages = Math.ceil(total / limit);&#xA;&#xA;  const result = await query;&#xA;  return { products: result, numOfPages: pages };&#xA;},&#xA;</code></pre>&#xA;<p>I am filtering products from the frontend and everythings work great but the thing is only in page 3 I have products with the color pink, so If I am at page 1 and trying to filter the color pink It will not display these products. I will have to jump to page 3 for that. This is even possible to make to work only in frontend?</p>&#xA;<p>front end code:</p>&#xA;<pre><code>const { data, loading, error } = useQuery(GET_PRODUCTS_PAGINATION, {&#xA;    variables: { page },&#xA;  });&#xA;&#xA;  const products = data?.getProductsPagination?.products;&#xA;  const numOfPages = data?.getProductsPagination?.numOfPages;&#xA;&#xA;  useEffect(() =&gt; {&#xA;    setFilteredProducts(products);&#xA;    const applySort = (filteredList) =&gt; {&#xA;      return sort.length &lt;= 0&#xA;        ? filteredList&#xA;        : sort.includes('price-highest')&#xA;        ? filteredList?.slice().sort((a, b) =&gt; b.price - a.price)&#xA;        : sort.includes('top-rated')&#xA;        ? filteredList?.slice().sort((a, b) =&gt; b.rates - a.rates)&#xA;        : filteredList?.slice().sort((a, b) =&gt; a.price - b.price);&#xA;    };&#xA;    const sizePredicate = (product) =&gt; {&#xA;      return size.length === 0 || product.size.includes(Number(...size));&#xA;    };&#xA;    const brandPredicate = (product) =&gt; {&#xA;      return brand.length === 0 || product.brand.includes(...brand);&#xA;    };&#xA;    const pricePredicate = (product) =&gt; {&#xA;      return (&#xA;        price.length === 0 ||&#xA;        (product.price &gt; price[0][0] &amp;&amp; product.price &lt; price[0][1])&#xA;      );&#xA;    };&#xA;&#xA;    const colorPredicate = (product) =&gt; {&#xA;      return color.length === 0 || product.color.includes(...color);&#xA;    };&#xA;&#xA;    setFilteredProducts((filteredList) =&gt;&#xA;      applySort(&#xA;        filteredList&#xA;          ?.filter(sizePredicate)&#xA;          ?.filter(brandPredicate)&#xA;          ?.filter(pricePredicate)&#xA;          ?.filter(colorPredicate)&#xA;      )&#xA;    );&#xA;  }, [products, sort, price, brand, size, test, color, page]);&#xA;</code></pre>&#xA;",13574542,,,,2022-07-12 17:03:36,Pagination and filtering on frontend,<javascript><node.js><reactjs><apollo-client><mern>,0,8,0,2022-07-12 17:03:36
72965146,1,,,0,129,"<p>I am filtering my items from the backend by query object which takes : brand,size,price.&#xA;Then I skip and limit ( pagination ) the list that I got.&#xA;Now the problem is when I want to filter by price in my app I got a slider which gets two values in array, example: [199,800] so I want to get all products between that range.</p>&#xA;<p>This is how I tried to do that:</p>&#xA;<pre><code>getProductsPagination: async (&#xA;  _,&#xA;  { page, productsFiltersInput: { size, brand, price, color } }&#xA;) =&gt; {&#xA;  const query = {};&#xA;  if (size) {&#xA;    query.size = size;&#xA;  }&#xA;  if (brand) {&#xA;    query.brand = brand;&#xA;  }&#xA;  if (color) {&#xA;    query.color = color;&#xA;  }&#xA;&#xA;  let products;&#xA;  const skip = (page - 1) * 12;&#xA;  const limit = 12;&#xA;  const totalItems = await Product.countDocuments(query);&#xA;  const pages = Math.ceil(totalItems / limit);&#xA;&#xA;  products = await Product.find(query).skip(skip).limit(limit);&#xA;  if (products.length &gt; 0) {&#xA;    products = products.filter(&#xA;      (x) =&gt; x.price &gt; price[0] &amp;&amp; x.price &lt; price[1]&#xA;    );&#xA;  }&#xA;&#xA;  return { products, numOfPages: pages };&#xA;},&#xA;</code></pre>&#xA;<p>The problem here as you can guess I am getting the products between that price range but I get them in seperate pages. I get 3 items in that range each item on each page which I don't want to. I want them to be all in same page. Now I know what I am doing wrong but I am really don't know how to continue from here. would like to get some hints!</p>&#xA;",13574542,,13574542,2022-07-13 11:47:02,2022-07-13 12:11:53,Filtering items on the backend,<javascript><node.js><reactjs><graphql><mern>,1,4,0,2022-07-13 10:57:49
73013491,1,,,0,33,"<p>I have two types defined:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type Filter_Facets_StoreFacetBoolean_Fragment = {&#xA;   key: string&#xA;   label: string&#xA;   values: Array&lt;{&#xA;      label: string&#xA;      value: string&#xA;      selected: boolean&#xA;      quantity: number&#xA;   }&gt;&#xA;}&#xA;&#xA;type Filter_Facets_StoreFacetRange_Fragment = {&#xA;   key: string&#xA;   label: string&#xA;   min: {&#xA;      selected: number&#xA;      absolute: number&#xA;   },&#xA;   max: {&#xA;      selected: number&#xA;      absolute: number&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>and I have another type that is made of these two:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export type Filter_FacetsFragment = Filter_Facets_StoreFacetBoolean_Fragment | Filter_Facets_StoreFacetRange_Fragment&#xA;</code></pre>&#xA;<p>In the code when I tried to use the <code>Filter_FacetsFragment</code>, typescript debug gives me the following error:</p>&#xA;<blockquote>&#xA;<p>Property 'values' does not exist on type 'Filter_FacetsFragment'.</p>&#xA;<p>Property 'values' does not exist on type 'Filter_Facets_StoreFacetRange_Fragment'.</p>&#xA;</blockquote>&#xA;<p>How to correct this error? Thanks in advance.</p>&#xA;",19421157,,5585371,2022-07-18 04:56:17,2022-07-18 04:56:17,Cannot read a property from a type which is an union of two types,<javascript><reactjs><typescript><graphql>,0,1,0,2022-07-17 16:25:16
73029893,1,,,0,55,"<p>I am implementing a sort feature for a product list page. This is a Gatsby Project with GraphQL and is connected to Shopify.</p>&#xA;<p>Using the GraphiQL explorer I created a filter function that I would like to use and this returns the information I want correctly. This is it.</p>&#xA;<pre><code>`query MyQuery($color: StringQueryOperatorInput = {in: color}) {&#xA;    allShopifyProduct(&#xA;      filter: { productType: { eq: &quot;CONTEMPORARY RUGS&quot; }, metafields: { color: { in: $color } } }&#xA;    ) {&#xA;      nodes {&#xA;        handle&#xA;        id&#xA;        shopifyId&#xA;        title&#xA;      }&#xA;    }&#xA;  }`&#xA;</code></pre>&#xA;<p>The issue I am currently having is turning this into a callable function that accepts a color string like &quot;Greys&quot; and returns to me an array of products that contain &quot;Greys&quot; as a color option in the defined metafield.</p>&#xA;<p>I tried this but only returns a numeric value.</p>&#xA;<pre><code>  const productsFilter = (color: string) =&gt; (&#xA;graphql`query filteredProducts($color: StringQueryOperatorInput = {in: color}) {allShopifyProduct(filter: { productType: { eq: &quot;CONTEMPORARY RUGS&quot; }, metafields: { color: { in: $color } } }&#xA;    ) {nodes {handle&#xA;        id&#xA;        shopifyId&#xA;        title&#xA;      }&#xA;    }&#xA;  }`)&#xA;</code></pre>&#xA;<p>console.log(productsFilter(&quot;Greys&quot;))</p>&#xA;<p>&quot;allShopifyProduct&quot; is a resolver defined in the gatsby create resolvers file that is called when pages are created. I need help with the proper syntax, function call, and fetch method.</p>&#xA;<p>Thank you for you help!</p>&#xA;",19575649,,,,2022-07-19 00:28:34,How to create a callable function that runs a GraphQL query with variables?,<javascript><graphql><shopify><gatsby>,0,1,0,2022-07-19 00:28:34
73035402,2,,45397333,0,,"<p>Here's the shortest way that works on any default branch even if it's not named <code>master</code></p>&#xA;<h2>Last 10 commits</h2>&#xA;<pre><code>{&#xA;  repository(owner: &quot;fregante&quot;, name: &quot;webext-fun&quot;) {&#xA;    defaultBranchRef {&#xA;      target {&#xA;        ... on Commit {&#xA;          history(first: 10) {&#xA;            nodes {&#xA;              oid&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<h2>Last 1 commit (HEAD)</h2>&#xA;<pre><code>{&#xA;  repository(owner: &quot;fregante&quot;, name: &quot;webext-fun&quot;) {&#xA;    defaultBranchRef {&#xA;      target {&#xA;        oid&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",288906,,,,2022-07-19 10:38:28,"",,0,0,0,2022-07-19 10:38:28
73036238,1,,,0,84,"<p>I using <a href=""https://hygraph.com/"" rel=""nofollow noreferrer"">https://hygraph.com/</a>, and I want insert (create many products) in a single GraphQL request.</p>&#xA;<p>At the moment I know how to insert one product:</p>&#xA;<pre><code>mutation {&#xA;  createProduct(data: { title: &quot;Face Mask&quot;, slug: &quot;dfavce-mask&quot;, price: 1000 }) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I read the documentation, but I didn't see information about bulk creation records.</p>&#xA;<p>Link for hygraph documentation:</p>&#xA;<p><a href=""https://hygraph.com/docs/api-reference/content-api/mutations#create-entries"" rel=""nofollow noreferrer"">https://hygraph.com/docs/api-reference/content-api/mutations#create-entries</a></p>&#xA;",18366964,,,,2022-08-12 22:09:32,How to insert many mutations in a single GraphQL request?,<graphql>,1,0,0,2022-07-19 11:40:54
73052598,2,,72949275,0,,"<p>Here is how I would do it:</p>&#xA;<pre><code>Algo Identify_java_files&#xA;Entry: path the folder&#xA;Out: java files in the folder&#xA;&#xA;Identify all files in the folder of the repository&#xA;For each file&#xA;    if the type of the file is &quot;blob&quot;:&#xA;        if &quot;.java&quot; is the end of the name of the file&#xA;            get its content&#xA;    else if the type of the file is &quot;tree&quot;:&#xA;        Identify_java_files(path of the tree file)&#xA;</code></pre>&#xA;<p>You can easily implement this pseudo code using Python. My pseudo code makes the assumption to use recursion, but it can be done otherwise, it's just for the example. You will need the <em>requests</em> and <em>json</em> libraries.</p>&#xA;<p>Here are the queries you might need, and you can use the <a href=""https://docs.github.com/en/graphql/overview/explorer"" rel=""nofollow noreferrer"">explorer</a> to test them.</p>&#xA;<pre><code>{&#xA;  repository(name: &quot;checkout&quot;, owner: &quot;actions&quot;) {&#xA;    defaultBranchRef {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This query allows you to check the name of the default branch of the repository. You will need it for the following queries, or you can use a specific branch but you will have to know its name. I don't know (and don't believe) if you can get all the branches names for a repository.</p>&#xA;<pre><code>{&#xA;  repository(name: &quot;checkout&quot;, owner: &quot;actions&quot;) {&#xA;    object(expression: &quot;main:&quot;) {&#xA;      ... on Tree {&#xA;        entries {&#xA;          path&#xA;          type&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This query gets the content of the root folder for a specific repository. The <em>expression: &quot;main:&quot;</em> refers to the branch of the repository along with the path. Here the branch is <em>main</em> and the path is empty (it comes after the &quot;:&quot;), meaning we are looking at the root folder. Some repositories are using &quot;master&quot; as default branch, so be sure of which branch to use.</p>&#xA;<p>To check the content of a file, you can use this <a href=""https://stackoverflow.com/a/44282072/19406735"">accepted answer</a>.&#xA;I updated the example in order for you to be able to try it.</p>&#xA;<pre><code>{&#xA;  repository(name: &quot;checkout&quot;, owner: &quot;actions&quot;) {&#xA;    object(expression: &quot;main:.github/workflows/test.yml&quot;) {&#xA;      ... on Blob {&#xA;        text&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>You send your requests to the API using <em>requests</em> or alike, and store the responses as JSON or alike for treatment.</p>&#xA;<p>As a side note, I do not <em>think</em> it is possible to achieve this without issuing multiple queries. I recently had to do something similar, and this is my first SO answer, so let me know if anything is unclear.</p>&#xA;<p>Edit:&#xA;You can use <a href=""https://stackoverflow.com/a/46683303/19406735"">this answer</a> to list all files in a repository.</p>&#xA;",19406735,,19406735,2022-07-20 15:11:21,2022-07-20 15:11:21,"",,0,0,0,2022-07-20 13:32:44
73054075,1,,,0,68,"<p>I am new to GraphQL and trying to implement a Backend with Spring Boot and InfluxDB v2, while using GraphQL.</p>&#xA;<p>Following dependencies:</p>&#xA;<p>spring-boot-starter-graphql&#xA;influxdb-client-java</p>&#xA;<p>In order for my Flux queries to be flexible I would like to know which response attributes the client requested and use those to build my query.</p>&#xA;<p>I am trying to follow this example :</p>&#xA;<p><a href=""https://www.influxdata.com/blog/using-graphql-with-influxdb-and-flux/"" rel=""nofollow noreferrer"">https://www.influxdata.com/blog/using-graphql-with-influxdb-and-flux/</a></p>&#xA;<p>The code however is in Ruby - which I know absolutely nothing about.</p>&#xA;<p>So I have a schema type which looks like this:</p>&#xA;<pre><code>type Measurement {&#xA;    bme_temp: Float&#xA;    scd30_0_co2 : Int&#xA;    scd30_1_co2 : Int&#xA;    bme_press : Float&#xA;    time: String&#xA;}&#xA;&#xA;type Query {&#xA;    findAll : [Measurement]&#xA;    firstMeasurement: [Measurement]&#xA;    firstAsyncMeasurement: [Measurement]&#xA;}&#xA;</code></pre>&#xA;<p>If the client is interested in receiving bme_temp &amp; bme_press my fluxQuery could look like this:</p>&#xA;<pre><code>String fluxQuery = &quot;from(bucket: \&quot;testing_123\&quot;)&quot; +&#xA;                &quot;  |&gt; range(start: 0)&quot; +&#xA;                &quot;  |&gt; filter(fn: (r) =&gt; r[\&quot;_measurement\&quot;] == \&quot;test_9\&quot;)&quot; +&#xA;                &quot;  |&gt; filter(fn: (r) =&gt; r[\&quot;_field\&quot;] == \&quot;bme_press\&quot;)&quot; +&#xA;                &quot;  |&gt; filter(fn: (r) =&gt; r[\&quot;_field\&quot;] == \&quot;bme_temp\&quot;)&quot;;&#xA;</code></pre>&#xA;<p>If the client is interested in receiving scd30_1_co2 my fluxQuery could look like this:</p>&#xA;<pre><code>String fluxQuery = &quot;from(bucket: \&quot;testing_123\&quot;)&quot; +&#xA;                &quot;  |&gt; range(start: 0)&quot; +&#xA;                &quot;  |&gt; filter(fn: (r) =&gt; r[\&quot;_measurement\&quot;] == \&quot;test_9\&quot;)&quot; +&#xA;                &quot;  |&gt; filter(fn: (r) =&gt; r[\&quot;_field\&quot;] == \&quot;scd30_1_co2\&quot;)&quot;;&#xA;</code></pre>&#xA;<p>So how do I find out which attributes are requested/should be included in the response in order to build my fluxquery with those.</p>&#xA;<p>Or am I approaching this whole thing incorrectly?</p>&#xA;",19588126,,19588126,2022-07-20 15:27:24,2022-07-20 15:27:24,How to access the requested response attributes from a GraphQL query in order to build a Flux Query (InfluxDB)?,<java><spring-boot><graphql><influxdb>,0,0,0,2022-07-20 15:07:12
73062878,1,,,3,252,"<p>so what i want to do is querying the products title with a search term and i expect to get all products containing the term somewhere in the title to be returned.</p>&#xA;<p>For example in the graphql explorer we have this product title: &quot;3/4 SLEEVE CREWNECK PULLOVER&quot;</p>&#xA;<p>I want this to be returned with the following query:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>{&#xA;  products(first: 250, query:""title:neck"") {&#xA;    edges {&#xA;      node {&#xA;        title&#xA;      }&#xA;    }&#xA;  }&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>From the docs i can't figure out a way. If you want to try it out you can do it here: <a href=""https://shopify.dev/custom-storefronts/tools/graphiql-storefront-api"" rel=""nofollow noreferrer"">https://shopify.dev/custom-storefronts/tools/graphiql-storefront-api</a></p>&#xA;<p>Any help is appreciated!</p>&#xA;<p>Cheers</p>&#xA;",13293400,,,,2022-07-21 08:52:10,Shopify Storefron API - Search query containing term not working,<search><graphql><shopify><shopify-api><shopify-storefront-api>,1,0,0,2022-07-21 08:21:05
73063005,1,73063131,,1,392,"<p>I am working on fetching Shopify products based on the product tag. I did the below code for it and it's working fine when I put the <code>AND</code> condition, But it douses not work with the <code>OR</code> condition. It shows products where a tag appears in text content.</p>&#xA;<p><a href=""https://i.stack.imgur.com/RHQot.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RHQot.png"" alt=""enter image description here"" /></a></p>&#xA;",12630053,,,,2022-07-21 08:40:13,Fetch shopify products based on product tags,<graphql><shopify><product><shopify-app><shopify-api>,1,0,0,2022-07-21 08:31:17
73063014,2,,73062878,1,,"<p>Writing the query like that will match only product with the same exact title. To search any title containing the string add <code>*</code>:</p>&#xA;<pre><code>{&#xA;  products(first: 250, query:&quot;title:neck*&quot;) {&#xA;    edges {&#xA;      node {&#xA;        title&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",343794,,343794,2022-07-21 08:52:10,2022-07-21 08:52:10,"",,0,2,0,2022-07-21 08:31:51
73063131,2,,73063005,1,,"<p>With an expression like that you're searching for tags containg OR, you should put the boolean expression out, like this</p>&#xA;<pre><code>{ &#xA;   products(query:&quot;tag:Blue OR tag:Pink&quot;){&#xA;      ...&#xA;</code></pre>&#xA;",343794,,,,2022-07-21 08:40:13,"",,0,0,0,2022-07-21 08:40:13
73063299,2,,69005212,0,,"<p>below code snippet handy finding all pull requests for a organization from last 10 days via graphql-api. refer - <a href=""https://gist.github.com/gbaman/b3137e18c739e0cf98539bf4ec4366ad"" rel=""nofollow noreferrer"">graphql_example</a></p>&#xA;<pre><code>import requests&#xA;import json&#xA;from datetime import timedelta, date&#xA;delta_day = 10&#xA;from string import Template&#xA;&#xA;ORG_NAME = &quot;ABC_XYZ&quot;&#xA;present_day = date.today()&#xA;present_day_str = present_day.strftime('%Y-%m-%d')&#xA;previous_day = present_day - timedelta(days=delta_day)&#xA;previous_day_str = previous_day.strftime('%Y-%m-%d')&#xA;&#xA;headers = {&#xA;  'Authorization': 'token ABC_XYZ',&#xA;  'Content-Type': 'application/json'&#xA;}&#xA;&#xA;url = &quot;https://www.github-ABC_XYZ.com/api/graphql&quot;&#xA;&#xA;queryTemplate = Template(&#xA;&quot;&quot;&quot;&#xA;{&#xA;  search(query: &quot;org:$ORG is:pr is:merged merged:&gt;=$PREVIOUS_DAY base:master sort:updated-desc&quot;, type: ISSUE, last: 100) {&#xA;    edges {&#xA;      node {&#xA;        ... on PullRequest {&#xA;          url&#xA;          title&#xA;          createdAt&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;&quot;&quot;&quot;&#xA;)&#xA;&#xA;query = queryTemplate.substitute(ORG=ORG_NAME,PREVIOUS_DAY=previous_day_str)&#xA;&#xA;def run_query(query): # A simple function to use requests.post to make the API call. Note the json= section.&#xA;    request = requests.post(url, json={'query': query}, headers=headers)&#xA;    if request.status_code == 200:&#xA;        return request.json()&#xA;    else:&#xA;        raise Exception(&quot;Query failed to run by returning code of {}. {}&quot;.format(request.status_code, query))&#xA;&#xA;result = run_query(query=query)&#xA;&#xA;print(result)&#xA;</code></pre>&#xA;",12360874,,,,2022-07-21 08:52:14,"",,0,0,0,2022-07-21 08:52:14
73083637,1,,,0,56,"<p>How do I retrieve files from a server with graphene and Django?</p>&#xA;<p>I found <a href=""https://pypi.org/project/graphene-file-upload/"" rel=""nofollow noreferrer"">graphene-file-upload</a>, but it seems to take care of only uploading client's files to the server</p>&#xA;",8848219,,14915511,2022-08-18 07:48:42,2022-08-18 07:48:42,How do I retrieve file from server with graphene and Django?,<django><file><graphql><graphene-django><django-file-upload>,0,1,0,2022-07-22 16:49:46
73084745,1,73111230,,0,61,"<p>I have a query that resolves what &quot;product&quot; objects a user currently owns. The user has transactions, these transactions are linked to a particular product, and so we resolve the query as below, which reflects the database structure and schema.</p>&#xA;<p>Assume the schema is as below:</p>&#xA;<pre><code>type User {&#xA;  id: int&#xA;  name: string&#xA;  transactions: [Transaction]&#xA;}&#xA;&#xA;type Transaction {&#xA;  id: int&#xA;  user_id: int&#xA;  product_id: int&#xA;  product_sku: int&#xA;  amount: number&#xA;  purchase_date: datetime&#xA;  user: User&#xA;  product: Product&#xA;}&#xA;&#xA;type Product {&#xA;  id: int&#xA;  name: string&#xA;  transactions: [Transactions]&#xA;}&#xA;</code></pre>&#xA;<p>Then the query to resolve purchased products would be:</p>&#xA;<pre><code>query purchased_products {&#xA;  user {&#xA;    transactions {&#xA;      product {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I would like to simplify this query for the front end, who doesn't need to know about the transactions.  They would like to answer the question &quot;what products does each user own?&quot;.  I would like to add some kind of relationship or query to User that can directly answer this question, extending the User schema to include:</p>&#xA;<pre><code>type User {&#xA;  id: int&#xA;  name: string&#xA;  transactions: [Transaction]&#xA;  products_owned: [Product]&#xA;}&#xA;&#xA;query purchased_products_simple {&#xA;  user {&#xA;    products_owned {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I'd like to do this without using an external remote schema or resolver.</p>&#xA;<p>How would I go about doing this?  Am I breaking any assumptions of graphql doing so?</p>&#xA;<p>Thanks!</p>&#xA;",7846827,,,,2022-07-25 14:51:15,Creating relationships over two joins with GraphQL in Hasura (i.e. skipping over a nested relationship),<graphql><hasura>,1,0,0,2022-07-22 18:37:23
73088624,1,,,0,104,"<p>I am trying to perform a query where I can retrieve all the total count of a label , say 'user' and I have a property known as 'type' having value of label name.</p>&#xA;<p><strong>Query :</strong></p>&#xA;<pre><code>g.V().has('type','user').project('count').by(__.count())&#xA;</code></pre>&#xA;<p><strong>Output :</strong></p>&#xA;<pre><code>==&gt;[count:1]&#xA;==&gt;[count:1]&#xA;==&gt;[count:1]&#xA;==&gt;[count:1]&#xA;==&gt;[count:1]&#xA;==&gt;[count:1]&#xA;==&gt;[count:1]&#xA;==&gt;[count:1]&#xA;==&gt;[count:1]&#xA;==&gt;[count:1]&#xA;....&#xA;</code></pre>&#xA;<p><strong>Expected :</strong></p>&#xA;<pre><code>==&gt;[count:10]&#xA;</code></pre>&#xA;<p>Need help on the query for getting the prescribed output.</p>&#xA;<p>Cheers</p>&#xA;",14727942,,,,2022-07-23 09:52:23,Gremlin : Get total count of a label and project the count,<graph><graphql><gremlin><janusgraph>,1,0,0,2022-07-23 06:46:41
73093725,2,,66869378,0,,<p>Use</p>&#xA;<pre><code>query {&#xA;products {&#xA;    id&#xA;    name&#xA;    ...&#xA;}}&#xA;</code></pre>&#xA;<p>instead of</p>&#xA;<pre><code>{&#xA;products {&#xA;   id&#xA;   name&#xA;   ...&#xA;}&#xA;}&#xA;</code></pre>&#xA;,15582800,,,,2022-07-23 19:38:21,"",,0,1,0,2022-07-23 19:38:21
73103486,1,,,3,346,"<p>We are using GitHub Projects (Beta). I created a custom text field called <code>oma-project</code>. I want to use the API to filter on this field, e.g., <code>oma-project: &quot;P0001&quot;</code>. This should return all issues with this value in the custom field.</p>&#xA;<p>Looking at the <a href=""https://docs.github.com/en/issues/trying-out-the-new-projects-experience/using-the-api-to-manage-projects#finding-information-about-items-in-a-project"" rel=""nofollow noreferrer"">Projects (beta) docs</a>, I can list the first <em>n</em> issues but I don't know how I can pass a filter based on the value of the custom field.</p>&#xA;<p>This is as far as I have gotten.</p>&#xA;<pre><code>{&#xA;  node(id: &quot;nodeid&quot;) {&#xA;    ... on ProjectV2 {&#xA;      items(first: 2) {&#xA;        nodes {&#xA;          fieldValues(first: 8) {&#xA;            nodes {&#xA;              ... on ProjectV2ItemFieldTextValue {&#xA;                text&#xA;                field {&#xA;                  ... on ProjectV2FieldCommon {&#xA;                    name&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;          content {&#xA;            ... on Issue {&#xA;              id&#xA;              title&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>returns:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>&#xA;{&#xA;  &quot;data&quot;: {&#xA;    &quot;node&quot;: {&#xA;      &quot;items&quot;: {&#xA;        &quot;nodes&quot;: [&#xA;          {&#xA;            &quot;fieldValues&quot;: {&#xA;              &quot;nodes&quot;: [&#xA;                {},&#xA;                {},&#xA;                {},&#xA;                {&#xA;                  &quot;text&quot;: &quot;Retrieve Notes via OData&quot;,&#xA;                  &quot;field&quot;: {&#xA;                    &quot;name&quot;: &quot;Title&quot;&#xA;                  }&#xA;                },&#xA;                {},&#xA;                {&#xA;                  &quot;text&quot;: &quot;P9999&quot;,&#xA;                  &quot;field&quot;: {&#xA;                    &quot;name&quot;: &quot;OMA Project&quot;&#xA;                  }&#xA;                }&#xA;              ]&#xA;            },&#xA;            &quot;content&quot;: {&#xA;              &quot;id&quot;: &quot;I_kwDOFT-pvM5AZNLm&quot;,&#xA;              &quot;title&quot;: &quot;Retrieve Notes via OData&quot;&#xA;            }&#xA;          },&#xA;          {&#xA;            &quot;fieldValues&quot;: {&#xA;              &quot;nodes&quot;: [&#xA;                {},&#xA;                {},&#xA;                {&#xA;                  &quot;text&quot;: &quot;Capex Approval Type&quot;,&#xA;                  &quot;field&quot;: {&#xA;                    &quot;name&quot;: &quot;Title&quot;&#xA;                  }&#xA;                },&#xA;                {},&#xA;                {},&#xA;                {&#xA;                  &quot;text&quot;: &quot;P0708&quot;,&#xA;                  &quot;field&quot;: {&#xA;                    &quot;name&quot;: &quot;OMA Project&quot;&#xA;                  }&#xA;                }&#xA;              ]&#xA;            },&#xA;            &quot;content&quot;: {&#xA;              &quot;id&quot;: &quot;I_kwDOFT-pvM5K85HZ&quot;,&#xA;              &quot;title&quot;: &quot;Capex Approval Type&quot;&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",19614248,,,,2022-11-16 08:21:21,GitHub GraphQL API Filter on custom text field in Project V2,<github><graphql><github-issues><github-projects>,1,0,0,2022-07-25 02:25:13
73109569,1,,,1,138,"<p>I am working on adding a pagination functionality for the server side of a GraphQL API. For context, I include a sample of the UML diagram of the Products table and its referenced tables from the database <a href=""https://i.stack.imgur.com/YJqUv.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;<p>The graphQL schema and resolver are:</p>&#xA;<pre><code> const schema = gql`&#xA;  type Product {&#xA;    id: Int!&#xA;    events: [ProductEvent!]!&#xA;    orderRows: [OrderRow!]!&#xA;    ...&#xA;  }&#xA;  type ProductEvent {&#xA;    id: Int!&#xA;    product: Product!&#xA;    delta: Int!&#xA;    date: Date!&#xA;    ...&#xA;  }&#xA;  type OrderRow {&#xA;    id: Int!&#xA;    order: Order!&#xA;    product: Product!&#xA;    ...&#xA;  }&#xA;  type Order {&#xA;    id: Int!&#xA;    rows: [OrderRow!]!&#xA;    customer: Customer!&#xA;    shippingDate: Date!&#xA;    ...&#xA;  }&#xA;&#xA;  const resolvers = {&#xA;  Product: {&#xA;    events: async (product: Product, _args: any, context: Context) =&gt; &#xA;    context.loaders.loadProductEvents.load(product.id),&#xA;    orderRows: async (product: Product, _args: any, context: Context) =&gt; &#xA;    context.loaders.loadOrderRows.load(product.id),&#xA;  },&#xA;  Query: {&#xA;    product: (_parent: any, { id }: { id: number }, context: Context) =&gt;&#xA;      context.models.Product.findByPk(id),&#xA;    products: async (&#xA;      _parent: any,&#xA;      { onlyActive, producerId }: { onlyActive?: boolean; producerId?: number },&#xA;      context: Context,&#xA;    ) =&gt; {&#xA;      ...&#xA;    },&#xA;  }&#xA;</code></pre>&#xA;<p>The resolvers for <code>Product.events</code> and <code>Product.orderRows</code> call a DataLoader and returns all events and orderRows corresponding to the queried <code>product.id</code> param.</p>&#xA;<p>The problem is that one products can appears in a multiple events (e.g., purchase, loss, sampling) and order-rows. For that reason, I want to to add a pagination functionality for the <code>Product.events</code> and <code>Product.orderRows</code> when querying a <code>product.id</code>.</p>&#xA;<p>I have been trying to implement something like:</p>&#xA;<pre><code>...&#xA;Query: {&#xA;    productPaginationByMonth: async(&#xA;      _parent: any, &#xA;      { id, first, after }: { id: number; first: number; after?: Date },&#xA;      context: Context,&#xA;    ) =&gt; {&#xA;      function getOrderRowsWithinRange(productId: number, first: number, after: any){&#xA;        // query $first order-rows containing productId $after a certain shippingDate &#xA;        ...&#xA;        // return [OrderRow]&#xA;      }&#xA;      function getEventsWithinRange(productId: number, first: number, after: any){&#xA;        // query $first product events containing productId $after a certain date&#xA;        ...&#xA;        // return [ProductEvent] &#xA;      }&#xA;      ...&#xA;      // I'd like to return something like this&#xA;      return {...Product.findByPK(id), events: getEventsWithinRange(id, first, after), orderRows: getOrderRowsWithinRange(id, first, after)}&#xA;    },&#xA;  }&#xA;</code></pre>&#xA;<p>The spread operation doesn't work and I am now questioning if this approach is event possible. So <strong>question (1) is how to do pagination on the child fields of graphQL type?</strong></p>&#xA;<p>Another question is about DataLoader. And <strong>question (2) is can I overload the Dataloader so that it returns an array of ProductEvents and OrderRows within a time range?</strong></p>&#xA;",19617093,,19617093,2022-07-25 14:45:48,2022-07-25 14:45:48,Is there a way to do pagination on a child field of a GraphQL type?,<javascript><postgresql><graphql><pagination><apollo-server>,0,1,0,2022-07-25 12:51:58
73127014,1,,,1,149,"<p>I'm currently working on an <a href=""https://nexusjs.org"" rel=""nofollow noreferrer"">Activity Feed built using GraphQL Nexus</a> and Apollo Server (3.9.0). It will receive a flurry of information that will have shared fields that are handled by a shared <code>IActivity</code> interface.</p>&#xA;<p>In addition, there will be types that will also share similar fields through other interfaces that are not included in <code>IActivity</code>, say for example <code>IMedia</code> and <code>INews</code>.</p>&#xA;<p>We are looking for a way to bring all the fields from <code>IActivity</code> and be able to query <code>IMedia</code> and <code>INews</code> within <code>IActivity</code>. We know that there is a possibility to query the concrete types, but we'd like to avoid it, as we want to extend the backend by adding new types of feeds (That share the same fields of those interfaces) without updating the client (it's a react-native application). We would use concrete types only when rendering custom UI components.</p>&#xA;<p>Here's an example:</p>&#xA;<pre><code>interface IActivity {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;}&#xA;&#xA;interface IMedia implements IActivity {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;    url: String&#xA;    type: String&#xA;}&#xA;interface INews implements IActivity {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;    date: DateTime&#xA;    author: String&#xA;    content: String&#xA;}&#xA;&#xA;type Video implements IActivity &amp; IMedia {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;    url: String&#xA;    type: String&#xA;    format: String&#xA;    codec: String&#xA;}&#xA;type Image implements IActivity &amp; IMedia {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;    url: String&#xA;    type: String&#xA;    compressed: Boolean&#xA;    codec: String&#xA;    extension: String&#xA;}&#xA;&#xA;type Audio implements IActivity &amp; IMedia {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;    url: String&#xA;    type: String&#xA;    bitrate: Boolean&#xA;}&#xA;&#xA;type Post implements INews &amp; IActivity {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;    date: DateTime&#xA;    author: String&#xA;    content: String&#xA;    comments: [Comment]&#xA;}&#xA;&#xA;type Comment {&#xA;    author: String&#xA;    message: String&#xA;}&#xA;&#xA;type FlashNews implements INews &amp; IActivity {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;    date: DateTime&#xA;    author: String&#xA;    content: String&#xA;    rating: Int&#xA;}&#xA;&#xA;&#xA;type Query {&#xA;    activityFeed(): [IActivity]&#xA;}&#xA;</code></pre>&#xA;<p>This is the query</p>&#xA;<pre><code>query getFeed() {&#xA;    activityFeed {&#xA;        id&#xA;        name&#xA;        description&#xA;        ... on IMedia {&#xA;            url&#xA;            type&#xA;        }&#xA;        ... on INews {&#xA;            date&#xA;            author&#xA;            content&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>This queries all the fields from <code>IActivity</code> but none of <code>IMedia</code> nor <code>INews</code>. There are no GraphQL errors (and we lint them through graphql-codegen and the Nexus builder.)</p>&#xA;<p>Our belief was that having <code>IActivity</code> also share the same as other interfaces, we could query <code>IActivity</code> and then specify the other interface (e.g: <code>IMedia</code>) as we do with concrete types.</p>&#xA;<p>In hindsight, what we're trying to do is somehow a union type of interfaces (which I know it's not possible)...</p>&#xA;<p>Is there a workaround or a solution for what we're trying to accomplish?</p>&#xA;<h2>Edit</h2>&#xA;<p>We found out that this exact example <em><strong>IS valid</strong></em>, and the problem is within how GraphQL Nexus is configured.</p>&#xA;<p>Here's a <a href=""https://codesandbox.io/s/silly-kirch-o7bk2g"" rel=""nofollow noreferrer"">code sandbox</a> and its <a href=""https://github.com/superjose/interface-of-interfaces-graphql"" rel=""nofollow noreferrer"">Git Repo</a> using plain Apollo Server.</p>&#xA;<h3>Edit 2:</h3>&#xA;<p>Try the following query:</p>&#xA;<pre><code>query getFeed {&#xA;    activityFeed {&#xA;        id&#xA;        name&#xA;        description&#xA;        ... on IMedia {&#xA;            type&#xA;            format&#xA;        }&#xA;        ... on INews {&#xA;            date&#xA;            author&#xA;            content&#xA;        }&#xA;        ... on Video {&#xA;            length&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",1057052,,1057052,2022-07-26 18:20:37,2022-08-02 12:48:47,Query an interface that implements another interface in GraphQL,<graphql><apollo-server><graphql-js><nexus-js>,1,1,0,2022-07-26 16:42:13
73127251,2,,61897813,1,,"<p>Hasura cannot process array but it can process array literals.</p>&#xA;<p>I've written a function to help you to transform your array into array literal before mutation:</p>&#xA;<pre><code>const toArrayLiteral = (arr) =&gt; (JSON.stringify(arr).replace('[', '{').replace(']', '}'))&#xA;...&#xA;myObject.array = toArrayLiteral(myObject.array) // will make ['friend'] to {'friend'}&#xA;</code></pre>&#xA;<p>Good luck</p>&#xA;",7276581,,,,2022-07-26 17:05:59,"",,0,0,0,2022-07-26 17:05:59
73127864,1,,,0,13,"<p>Let asume that we have a few documents when is document A and it has collection of documnets B and the B contains collection of C</p>&#xA;<p>So, it look more or less like this:</p>&#xA;<pre><code>A&#xA;   B&#xA;      C&#xA;</code></pre>&#xA;<p>All of them have an ID, so I can easly find the A element and add the B elements to the A document.&#xA;But, ... what about the C? How I can/should organizne the adding/updating the collection of C in the B collection?</p>&#xA;<p>To accomplish that, I shoud find the A element by ID, then the B element by ID, and the add a new C element or update by its ID, right? Looks like quite complicated algorithms...</p>&#xA;<p><strong>Is there any smarter way to do this?</strong></p>&#xA;<p><em>BTW:</em></p>&#xA;<p><em>What then with the API (REST / GQL).&#xA;Normally, I would do something like this: POST api/a/1/b/1/c or PATCH api/a/1/b/1/c/1</em>&#xA;Again, is it easier / smarter to do it?</p>&#xA;",10599107,,,,2022-07-26 18:01:37,Mongoose very nested document add or update (approach) + rest/gql,<rest><mongoose><graphql>,0,1,0,2022-07-26 18:01:37
73131824,2,,58563426,1,,"<p>For me, I had the response set as an array rather than an object for a custom query.</p>&#xA;<pre><code>type Query {&#xA;  stripeGetCheckoutSession(sessionId: ID!): [StripeSession] @function(name: &quot;StripeGetCheckoutSession-${env}&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>Removed the array brackets from <code>[StripeSession]</code> to <code>StripeSession</code></p>&#xA;",6791970,,,,2022-07-27 02:57:48,"",,0,0,0,2022-07-27 02:57:48
73138277,1,,,1,27,"<p>I am using GraphQL extensively to peruse GitHub's data structures.   For example, this will give me back a list of collaborators for a repo:</p>&#xA;<pre><code>{&#xA;  repository(name: &quot;spring-bot&quot;, owner: &quot;finos&quot;) {&#xA;    id&#xA;    collaborators {&#xA;      edges {&#xA;        permission&#xA;        node {&#xA;          id&#xA;          email&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>What I would like to do is augment this list with the <strong>apps</strong> or <strong>bots</strong> being used by a repo / organisation, but I don't see any documentation around this.</p>&#xA;<p>Is this something that exists, or a feature that's being worked on?</p>&#xA;<p>thanks!</p>&#xA;",416570,,,,2022-07-27 12:50:48,List of Apps for Organisation / Repository via GraphQL,<graphql><github-api>,0,0,0,2022-07-27 12:50:48
73138407,1,,,0,50,"<p>I am creating a hasura action, where output can be an array of object but object can have any key value pair hence I want to keep the output of hasura action as &quot;any&quot;&#xA;can you please help?</p>&#xA;",19622855,,,,2022-07-28 19:16:06,"How to define ""unknown"", ""undefined"", or ""any"" in hasura action",<types><hasura><typegraphql><hasura-cli>,1,0,0,2022-07-27 12:58:32
73159090,1,,,0,16,"<p>im new on NestJS and GraphQL, any help would be appreciated...</p>&#xA;<pre><code>{&#xA;  &quot;version&quot;: &quot;v1&quot;,&#xA;  &quot;data&quot;: {&#xA;    &quot;id&quot;: &quot;7e3cjmasl&quot;,&#xA;    &quot;label&quot;: &quot;museums_0.4.0_cleanOUT.csv&quot;,&#xA;    &quot;color&quot;: [&#xA;      162,&#xA;      212,&#xA;      171&#xA;    ],&#xA;    &quot;allData&quot;: [&#xA;      [&#xA;        &quot;6283b013440512120c0cf44c&quot;,&#xA;        24053,&#xA;        &quot;Berlin&quot;,&#xA;        &quot;History museum&quot;,&#xA;        &quot;Topography of Terror&quot;,&#xA;        27047,&#xA;        52.5066836,&#xA;        13.3837024,&#xA;        &quot;[\&quot;History museum\&quot;,\&quot;Foundation\&quot;,\&quot;Museum\&quot;,\&quot;Tourist attraction\&quot;]&quot;,&#xA;        &quot;Germany&quot;,&#xA;        4.5&#xA;      ],&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>how can i create model of this JSON on graphql nestjs.. im confused on <strong>&quot;allData&quot;</strong> array part.. how to create model of it... i tried <strong>(any)</strong> keyword... but it is not working...&#xA;please help...&#xA;Thanks...</p>&#xA;",12141352,,,,2022-07-28 20:57:46,GraphQL type for NestJS,<javascript><json><typescript><graphql><nestjs>,0,0,0,2022-07-28 20:57:46
73162660,1,,,0,23,"<p>im new on NestJS and GraphQL, any help would be appreciated...</p>&#xA;<pre><code>{&#xA;  &quot;version&quot;: &quot;v1&quot;,&#xA;  &quot;data&quot;: {&#xA;    &quot;id&quot;: &quot;7e3cjmasl&quot;,&#xA;    &quot;label&quot;: &quot;museums_0.4.0_cleanOUT.csv&quot;,&#xA;    &quot;color&quot;: [&#xA;      162,&#xA;      212,&#xA;      171&#xA;    ],&#xA;    &quot;allData&quot;: [&#xA;      [&#xA;        &quot;6283b013440512120c0cf44c&quot;,&#xA;        24053,&#xA;        &quot;Berlin&quot;,&#xA;        &quot;History museum&quot;,&#xA;        &quot;Topography of Terror&quot;,&#xA;        27047,&#xA;        52.5066836,&#xA;        13.3837024,&#xA;        &quot;[\&quot;History museum\&quot;,\&quot;Foundation\&quot;,\&quot;Museum\&quot;,\&quot;Tourist attraction\&quot;]&quot;,&#xA;        &quot;Germany&quot;,&#xA;        4.5&#xA;      ],&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>how to create graphql schema for that type of array object...&#xA;Thanks...</p>&#xA;",12141352,,,,2022-07-29 06:52:01,NestJS GraphQL Model,<javascript><node.js><typescript><graphql><nestjs>,0,0,0,2022-07-29 06:52:01
73162714,1,74009250,,1,112,"<p>My subgraph as a UNIX timestamp as seconds defined as the following</p>&#xA;<pre><code>type TokenSwap @entity {&#xA;  id: ID!&#xA;&#xA;  # UNIX timestamp of block in which the swap was created&#xA;  timestamp: BigInt!&#xA;}&#xA;</code></pre>&#xA;<p>When I am <a href=""https://thegraph.com/hosted-service/subgraph/miohtama/hackatom-2022?query=Example%20query"" rel=""nofollow noreferrer"">experimenting in TheGraph playground</a>, is there a way for me to display this as UTC time, instead of raw seconds since the UNIX epoch? This would make the playground output more readable.</p>&#xA;",315168,,315168,2022-07-29 07:12:56,2022-10-10 00:14:51,Showing subgraph timestamp results in human-readable format,<graphql><thegraph>,1,0,0,2022-07-29 06:56:09
73165381,1,,,2,132,"<p>In AEM when I try to run following query:</p>&#xA;<pre><code>{   benefitProgramByPath(_path: &quot;/content/dam/rahjang-cf/rahjang-benifit&quot;) {&#xA;    item {&#xA;      _metadata {&#xA;        stringMetadata {&#xA;          name,&#xA;          value,&#xA;          __typename&#xA;        }&#xA;        stringArrayMetadata {&#xA;          name,&#xA;          value,&#xA;          __typename&#xA;        }&#xA;        intMetadata {&#xA;          name,&#xA;          value&#xA;        }&#xA;        intArrayMetadata {&#xA;          name,&#xA;          value&#xA;        }&#xA;        floatMetadata {&#xA;          name,&#xA;          value&#xA;        }&#xA;        floatArrayMetadata {&#xA;          name,&#xA;          value&#xA;        }&#xA;        booleanMetadata {&#xA;          name,&#xA;          value&#xA;        }&#xA;        booleanArrayMetadata {&#xA;          name,&#xA;          value&#xA;        }&#xA;        calendarMetadata {&#xA;          name,&#xA;          value,&#xA;          __typename&#xA;        }&#xA;        calendarArrayMetadata {&#xA;          name,&#xA;          value&#xA;        }&#xA;      }&#xA;      &#xA;    }&#xA;      } }&#xA;</code></pre>&#xA;<p>it gives me following response</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;benefitProgramByPath&quot;: {&#xA;      &quot;item&quot;: {&#xA;        &quot;_metadata&quot;: {&#xA;          &quot;stringMetadata&quot;: [&#xA;            {&#xA;              &quot;name&quot;: &quot;title&quot;,&#xA;              &quot;value&quot;: &quot;rahjang-benifit&quot;,&#xA;              &quot;__typename&quot;: &quot;StringMetadata&quot;&#xA;            },&#xA;            {&#xA;              &quot;name&quot;: &quot;description&quot;,&#xA;              &quot;value&quot;: &quot;&quot;,&#xA;              &quot;__typename&quot;: &quot;StringMetadata&quot;&#xA;            }&#xA;          ],&#xA;          &quot;stringArrayMetadata&quot;: [],&#xA;          &quot;intMetadata&quot;: [],&#xA;          &quot;intArrayMetadata&quot;: [],&#xA;          &quot;floatMetadata&quot;: [],&#xA;          &quot;floatArrayMetadata&quot;: [],&#xA;          &quot;booleanMetadata&quot;: [],&#xA;          &quot;booleanArrayMetadata&quot;: [],&#xA;          &quot;calendarMetadata&quot;: [],&#xA;          &quot;calendarArrayMetadata&quot;: []&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The name and title are getting picked up respectively from ./jcr:content/jcr:title and ./jcr:content/jcr:description.&#xA;It doesn't give the created date which is default metadata of the content fragment as well as the last modified date. These reference to ./jcr:content/jcr:created and ./jcr:content/jcr:lastModified respectively.</p>&#xA;<p>On investigation I found GraphQL returns only the metadata for a content fragment which is stored under ./jcr:content/metadata node. But somehow it creates exception for title and description since these are not stored under ./jcr:content/metadata node and instead are stored on ./jcr:content node.</p>&#xA;<p>How can I make GraphQL return jcr:lastModified date as part of metadata ?</p>&#xA;",6790899,,,,2022-07-29 10:38:08,AEM GraphQL doesn't return jcr:created and jcr:lastModified date as metadata,<graphql><aem><headless><headless-cms>,0,1,0,2022-07-29 10:38:08
73171370,1,73171483,,0,70,"<p>I am trying to mutate an array in my Vue application via Apollo to my Graphql backend.&#xA;For example the array which I try to mutate is stored in my schema as:</p>&#xA;<pre><code>type type1 {&#xA;    property1: [BigInt]!&#xA;}&#xA;</code></pre>&#xA;<p>However, when I assign and pass a string to my mutation, i.e. &quot;[1, 2, 3]&quot; something weird happens and a large integer number will be stored, i.e. &quot;5013710821996412394&quot;, instead of my list. When I just try to pass an array I am not able to send my mutation and I get the status error 400 for bad request.</p>&#xA;<p>What kind of datatype for the array do I need to execute my mutation correctly to my backend graphql server?</p>&#xA;",15292362,,,,2022-07-29 22:18:24,Apollo/Graphql mutate array,<vue.js><graphql><apollo><vue-apollo><graphql-mutation>,1,0,0,2022-07-29 22:01:48
73171483,2,,73171370,0,,"<p>Okay it works now with an array of strings. Before I passed an array of integers to my mutation:</p>&#xA;<pre><code>array = [1, 2, 3]&#xA;</code></pre>&#xA;<p>Now I have:</p>&#xA;<pre><code>array = [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]&#xA;</code></pre>&#xA;<p>... and I am able to execute my mutation correctly. :)</p>&#xA;",15292362,,,,2022-07-29 22:18:24,"",,0,0,0,2022-07-29 22:18:24
73176385,2,,71248310,0,,"<p>I had the same problem and used <code>productVariantUpdate()</code> instead, you can just put all you variants in a list and loop on them using this mutation</p>&#xA;",17335747,,,,2022-07-30 14:22:38,"",,0,0,0,2022-07-30 14:22:38
73176546,2,,73103486,1,,"<p>I'm having the same issue when working on a GitHub action to move a list of items from a status to another status, and it seems currently the API doesn't support ProjectV2 item filtering.</p>&#xA;<p>My current workaround is to query all the items from the project and then later filter out the results using <a href=""https://stedolan.github.io/jq/"" rel=""nofollow noreferrer"">jq</a> or JavaScript</p>&#xA;",16741446,,16741446,2022-07-30 14:45:26,2022-07-30 14:45:26,"",,0,0,0,2022-07-30 14:44:44
73180273,2,,72230166,0,,<p>You could also do</p>&#xA;<pre><code>if (data.user.__typename === &quot;User&quot;) { ... };&#xA;</code></pre>&#xA;<p>to ensure that its referring to the type within the union you need</p>&#xA;,5439669,,,,2022-07-31 02:21:55,"",,0,0,0,2022-07-31 02:21:55
73204630,1,73205105,,0,96,"<p>Is there a way to use GitHub's GraphQL API to retrieve the default branch name of a repository? I can build a query to get all the branch names, but none of the properties I see reference the default branch name. Some repositories I deal with have 'master' for their default, and others have 'main'.</p>&#xA;<p>I am aware I can use the <em>HEAD</em> in some commands to workaround this. Such as &quot;HEAD:README.md&quot; for fetching the README.md file, like in this example query below. This repository's default branch is 'main', and I only know that from manual trial and error.</p>&#xA;<pre><code>query {&#xA;  repository(owner: &quot;newrelic&quot;, name: &quot;newrelic-ruby-agent&quot;) {&#xA;    object(expression: &quot;HEAD:README.md&quot;) {&#xA;      ... on Blob {&#xA;        text&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But when I check the local cloned copy of that repository, the <code>.git/HEAD</code> file points to <code>ref: refs/heads/dev</code>. So it seems I am actually pulling the README.md file from the <code>dev</code> branch, and not the default branch?</p>&#xA;<p>So is there a nice way to get the name of the default branch for a GitHub repository using their GraphQL API?</p>&#xA;",10930451,,1256452,2022-08-02 10:12:34,2022-08-02 10:12:34,How to get GitHub repository Default Branch name with GraphQL?,<github><graphql>,1,0,0,2022-08-02 08:52:52
73205105,2,,73204630,1,,"<p>There's a field <code>defaultBranchRef</code> on the repository object:</p>&#xA;<pre><code>query { &#xA;  repository(owner: &quot;newrelic&quot;, name: &quot;newrelic-ruby-agent&quot;) { &#xA;    defaultBranchRef {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3266847,,,,2022-08-02 09:27:27,"",,0,1,0,2022-08-02 09:27:27
73216629,1,,,1,215,"<p>I am trying to get union data using the Graphql APIfor Shopify and am unable to find any documentation on selecting data in unions.</p>&#xA;<p>Here is my current query:</p>&#xA;<pre><code>query subscriptionPlans {&#xA;  sellingPlanGroup(id: 1234) {&#xA;    id&#xA;    name&#xA;    sellingPlans(first: 1) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          billingPolicy {&#xA;            ... on SellingPlanRecurringBillingPolicy {&#xA;              interval&#xA;              intervalCount&#xA;            }&#xA;          }&#xA;          pricingPolicies {&#xA;            on&#xA;            SellingPlanRecurringPricingPolicy {&#xA;              afterCycle&#xA;              adjustmentType&#xA;              adjustmentValue {&#xA;                on&#xA;                SellingPlanPricingPolicyPercentageValue {&#xA;                  percentage&#xA;                }&#xA;                on&#xA;                MoneyV2 {&#xA;                  amount&#xA;                  currencyCode&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>I am able to retrieve the sellingPlans in this scenario. When I get to the SellingPlanPricingPolicy portion I run into issues. I am receiving the error:</p>&#xA;<pre><code>Selections can't be made directly on unions (see selections on SellingPlanPricingPolicy)&#xA;</code></pre>&#xA;<p>However, I am unable to find any documentation on making selections using the documentation at: <a href=""https://shopify.dev/docs/admin-api/graphql/reference/products-and-collections/sellingplanpricingpoli.."" rel=""nofollow noreferrer"">https://shopify.dev/docs/admin-api/graphql/reference/products-and-collections/sellingplanpricingpoli..</a>.</p>&#xA;<p>Any help with this would be appreciated. I just need an example of how to select this information.</p>&#xA;",19441295,,,,2022-08-17 08:00:19,Performing A GraphQL Selection On A Union for shopify SellingPlanPricingPolicy,<graphql><shopify>,1,0,0,2022-08-03 05:27:39
73222837,1,73222941,,0,137,"<p>This is not the first time I've encountered this issue with GraphQL, where I will be able to clearly see that the correct data is being fetched by using <code>console.log</code> but it will render nothing in the UI. The last time I had this problem, the issue was that the &quot;id&quot; wasn't included for one of the nested objects. In this case, I've ensured that both exist:</p>&#xA;<pre><code>topBattles { &#xA;  id &#xA;  battlers { &#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>If I recall, I was also able to detect that error by console.logging the <code>error</code> that gets returned by <code>UseQuery</code>. In this case, no error is being shown.</p>&#xA;<p>In graphiql, I can see that I'm receiving the correct data:</p>&#xA;<p><a href=""https://i.stack.imgur.com/u2baF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/u2baF.png"" alt=""enter image description here"" /></a></p>&#xA;<p>This is all of the code for the React front-end. There's nothing noteworthy, it's calling the same GraphQL query that worked in GraphiQl with the same arguments</p>&#xA;<pre><code>function TopBattles() {&#xA;  const { loading, data, error } = useQuery(GET_TOP_BATTLES, {&#xA;    variables: { battleCount: 5, dateRange: &quot;Weekly&quot; },&#xA;  });&#xA;&#xA;  React.useEffect(() =&gt; {&#xA;    console.log(data);&#xA;    console.log(error);&#xA;  }, [data]);&#xA;&#xA;  if (loading) return &quot;Loading...&quot;;&#xA;  return (&#xA;    &lt;&gt;&#xA;      {data?.topBattles?.length &gt; 0&#xA;        ? data.topBattles.map((battle) =&gt; {&#xA;            &lt;div&gt;Foo&lt;/div&gt;;&#xA;          })&#xA;        : &quot;bar&quot;}&#xA;    &lt;/&gt;&#xA;  );&#xA;}&#xA;&#xA;export default TopBattles;&#xA;</code></pre>&#xA;<p>from the console.log above, <code>error</code> returns undefined.&#xA;Console.log.data returns the correct data:&#xA;<a href=""https://i.stack.imgur.com/2ggz4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2ggz4.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Yet for the code:</p>&#xA;<pre><code>return (&#xA;    &lt;&gt;&#xA;      {data?.topBattles?.length &gt; 0&#xA;        ? data.topBattles.map((battle) =&gt; {&#xA;            &lt;div&gt;Foo&lt;/div&gt;;&#xA;          })&#xA;        : &quot;bar&quot;}&#xA;    &lt;/&gt;&#xA;  );&#xA;</code></pre>&#xA;<p>Nothing at all is being rendered. The word &quot;bar&quot; is not even being rendered, which means that it's recognizing that there is an array of data and the data has a length. If I change the code to <code>data?.topBattles?.length &gt; 3</code> it will render &quot;bar&quot; because the array only has 2 elements in it.</p>&#xA;",14450401,,14450401,2022-08-03 13:56:15,2022-08-03 15:57:16,GraphQL Data showing in console but doesnt render in React,<javascript><reactjs><graphql><apollo>,2,1,0,2022-08-03 13:49:23
73223021,2,,73222837,1,,"<p>Like Kostas mentioned, you forgot the return statement, however if you're only rendering a single element, I would suggest doing it like:</p>&#xA;<pre><code>return (&#xA;    &lt;&gt;&#xA;      {data?.topBattles?.length &gt; 0&#xA;        ? data.topBattles.map&#xA;        (&#xA;         (battle) =&gt; &#xA;            &lt;div&gt;Foo&lt;/div&gt;&#xA;         )&#xA;        : &quot;bar&quot;}&#xA;    &lt;/&gt;&#xA;  );&#xA;</code></pre>&#xA;<p>If you don't use the curly braces, you don't need return, this can be applied everywhere.</p>&#xA;",17324920,,,,2022-08-03 14:08:22,"",,0,1,0,2022-08-03 14:08:22
73224800,1,,,0,10,"<p>Schema:</p>&#xA;<pre><code>type Mutation {&#xA;        removeProduct(id: String!): Product&#xA;    }&#xA;&#xA;    type Product {&#xA;        id: ID!&#xA;        name: String!&#xA;        slug: String!&#xA;        description: String!&#xA;        price: Float!&#xA;        image: String!&#xA;        ingredients: [String]&#xA;        addOns: [String]&#xA;    }&#xA;</code></pre>&#xA;<p>resolver:</p>&#xA;<pre><code>exports.Mutation = {&#xA;    &#xA;    removeProduct: async (parent, { id }, { Product }) =&gt; {&#xA;        const deletedProduct = await Product.deleteOne({ id }); &#xA;        return deletedProduct;&#xA;    },&#xA;};&#xA;</code></pre>&#xA;<p>query:</p>&#xA;<pre><code>mutation{&#xA;removeProduct(id:&quot;b55572b9-eb4d-46ea-a82f-f01cb0ba3993&quot;)&#xA;{&#xA;  id&#xA;  name&#xA;}&#xA;}&#xA;</code></pre>&#xA;<p>I need to remove a product from the db, but while deleting it, the response from graphql shows that <code>&quot;message&quot;: &quot;Cannot return null for non-nullable field Product.name.&quot;,</code></p>&#xA;<p>It maybe because the product is deleted and nothing is returned because there is no product in db.&#xA;How do I write a query to delete a product ?</p>&#xA;<p>Note that it deletes the product from the db, but shows error in graphql response.</p>&#xA;",9222818,,,,2022-08-03 16:35:34,cannot delete a product from db using graphql,<graphql>,0,0,0,2022-08-03 16:35:34
73226737,2,,73200452,1,,"<p>You might try thinking about using a pure KV solution leveraging Couchbase eventing. I think you will find that this real time solution essentially coding up a lambda or a trigger will be very performant across 10's of millions of documents. To this end I will give a concrete example below:</p>&#xA;<p>You seem to have two types of documents</p>&#xA;<p>First a sales rep authorization list here is essentially your data as JSON docs</p>&#xA;<pre><code>  KEY  auth:1003 &#xA;  {&#xA;    &quot;Products&quot;: [&#xA;      {&#xA;        &quot;EndDt&quot;: &quot;9999-12-25&quot;,&#xA;        &quot;ProductId&quot;: 1,&#xA;        &quot;StartDt&quot;: &quot;2022-05-15&quot;&#xA;      },&#xA;      {&#xA;        &quot;EndDt&quot;: &quot;9999-12-25&quot;,&#xA;        &quot;ProductId&quot;: 2,&#xA;        &quot;StartDt&quot;: &quot;2022-05-15&quot;&#xA;      },&#xA;      {&#xA;        &quot;EndDt&quot;: &quot;9999-12-25&quot;,&#xA;        &quot;ProductId&quot;: 8,&#xA;        &quot;StartDt&quot;: &quot;2022-05-15&quot;&#xA;      },&#xA;      {&#xA;        &quot;EndDt&quot;: &quot;9999-12-25&quot;,&#xA;        &quot;ProductId&quot;: 9,&#xA;        &quot;StartDt&quot;: &quot;2022-05-15&quot;&#xA;      }&#xA;    ],&#xA;    &quot;id&quot;: 1003,&#xA;    &quot;type&quot;: &quot;auth&quot;&#xA;  }&#xA;&#xA;&#xA;  KEY  auth:1002 &#xA;  {&#xA;    &quot;Products&quot;: [&#xA;      {&#xA;        &quot;EndDt&quot;: &quot;9999-12-25&quot;,&#xA;        &quot;ProductId&quot;: 1,&#xA;        &quot;StartDt&quot;: &quot;2022-05-15&quot;&#xA;      },&#xA;      {&#xA;        &quot;EndDt&quot;: &quot;9999-12-25&quot;,&#xA;        &quot;ProductId&quot;: 2,&#xA;        &quot;StartDt&quot;: &quot;2022-05-15&quot;&#xA;      },&#xA;      {&#xA;        &quot;EndDt&quot;: &quot;9999-12-25&quot;,&#xA;        &quot;ProductId&quot;: 5,&#xA;        &quot;StartDt&quot;: &quot;2022-05-15&quot;&#xA;      },&#xA;      {&#xA;        &quot;EndDt&quot;: &quot;9999-12-25&quot;,&#xA;        &quot;ProductId&quot;: 6,&#xA;        &quot;StartDt&quot;: &quot;2022-05-15&quot;&#xA;      }&#xA;    ],&#xA;    &quot;id&quot;: 1002,&#xA;    &quot;type&quot;: &quot;auth&quot;&#xA;  }&#xA;&#xA;  KEY  auth:1001 &#xA;  {&#xA;    &quot;Products&quot;: [&#xA;      {&#xA;        &quot;EndDt&quot;: &quot;9999-12-25&quot;,&#xA;        &quot;ProductId&quot;: 1,&#xA;        &quot;StartDt&quot;: &quot;2022-05-15&quot;&#xA;      },&#xA;      {&#xA;        &quot;EndDt&quot;: &quot;9999-12-25&quot;,&#xA;        &quot;ProductId&quot;: 2,&#xA;        &quot;StartDt&quot;: &quot;2022-05-15&quot;&#xA;      },&#xA;      {&#xA;        &quot;EndDt&quot;: &quot;9999-12-25&quot;,&#xA;        &quot;ProductId&quot;: 3,&#xA;        &quot;StartDt&quot;: &quot;2022-05-15&quot;&#xA;      },&#xA;      {&#xA;        &quot;EndDt&quot;: &quot;9999-12-25&quot;,&#xA;        &quot;ProductId&quot;: 4,&#xA;        &quot;StartDt&quot;: &quot;2022-05-15&quot;&#xA;      }&#xA;    ],&#xA;    &quot;id&quot;: 1001,&#xA;    &quot;type&quot;: &quot;auth&quot;&#xA;  }&#xA;</code></pre>&#xA;<p>Second a bunch of orders coming in that you want to validate here is essentially your data as JSON docs (I took the liberty of adding one more to get a success)</p>&#xA;<pre><code>  KEY: order:1234&#xA;  {&#xA;    &quot;ProductIds&quot;: [&#xA;      1,2,3,4,5&#xA;    ],&#xA;    &quot;RepID&quot;: 1001,&#xA;    &quot;id&quot;: 1234,&#xA;    &quot;type&quot;: &quot;order&quot;&#xA;  }&#xA;&#xA;  KEY: order:1111&#xA;  {&#xA;    &quot;ProductIds&quot;: [&#xA;      1,2,3,4&#xA;    ],&#xA;    &quot;RepID&quot;: 1003,&#xA;    &quot;id&quot;: 1111,&#xA;    &quot;type&quot;: &quot;order&quot;&#xA;  }&#xA;&#xA;  KEY: order:2222&#xA;  {&#xA;    &quot;ProductIds&quot;: [&#xA;      8,9&#xA;    ],&#xA;    &quot;RepID&quot;: 1003,&#xA;    &quot;id&quot;: 2222,&#xA;    &quot;type&quot;: &quot;order&quot;&#xA;  }&#xA;&#xA;  KEY: order:100&#xA;  {&#xA;    &quot;ProductIds&quot;: [&#xA;      1,2,3&#xA;    ],&#xA;    &quot;RepID&quot;: 1002,&#xA;    &quot;id&quot;: 100,&#xA;    &quot;type&quot;: &quot;order&quot;&#xA;  }&#xA;</code></pre>&#xA;<p>Now here is an Eventing function (it will run in 6.X and 7.X mode although 7.X will be much faster if you take advantage of bucket backed caching)</p>&#xA;<pre><code>// Need two buckets (if 7.0+ keyspaces of _default._default)&#xA;//     &quot;eventing&quot;&#xA;//     &quot;data&quot;&#xA;// Need one bucket binding &#xA;//     alias = src_col bucket = data mode = r+w&#xA;// For performance set workers to 2X VCPUs for large data sets&#xA;// or for very fast mutation rates.&#xA;&#xA;function OnUpdate(doc, meta) {&#xA;    // only process and validate orders (might add more filters here).&#xA;    if (doc.type !== &quot;order&quot;) return;&#xA;    &#xA;    // level 1 is what you want, else to look at issue just raise the #&#xA;    var DEBUG = 1;&#xA;    // Use bucket backed caching to speed up loading of check document by 25X&#xA;    var VERSION_AT_702 = false;&#xA;&#xA;    if (DEBUG &gt; 1) log(&quot;checking order&quot;, meta.id);&#xA;    &#xA;    // load the rep's authorized products fromthe bucket binding.&#xA;    &#xA;    var auths;&#xA;    if (VERSION_AT_702 == false) {&#xA;        auths = src_col[&quot;auth:&quot; + doc.RepID];&#xA;    } else {&#xA;        // use bucket backed caching.  Will only read KV at most once per &#xA;        // second per each Eventing node. Costs  just 1/25th of a std. Bucket Op.&#xA;        var result = couchbase.get(src_col,{&quot;id&quot;: &quot;auth:&quot; + doc.RepID}, {&quot;cache&quot;: true});&#xA;        if (!result.success) {&#xA;            auths = null;&#xA;        } else {&#xA;            auths = result.doc;&#xA;        }&#xA;    }&#xA;    if (!auths) {&#xA;        if (DEBUG &gt; 0) log(&quot;no auth record found for RepID&quot;, doc.RepID);&#xA;        return;&#xA;    }&#xA;    if (DEBUG &gt; 4) log(auths);&#xA;    &#xA;    // since I save the lists this isn't an optimal check&#xA;    var is_authed = [];&#xA;    var is_not_authed = [];&#xA;    // now make sure the rep is authorized to sell all products&#xA;    for (var k = 0; k &lt; doc.ProductIds.length; k++){&#xA;        var prod = doc.ProductIds[k];&#xA;        if (DEBUG &gt; 1) log(&quot;checking product&quot;,prod);&#xA;        var okay = false;&#xA;        for (var j = 0; j &lt; auths.Products.length; j++){&#xA;            var auth = auths.Products[j];&#xA;            if (DEBUG &gt; 6) log(&quot;\t1.&quot;,auth);&#xA;            if (auth.ProductId == prod) {&#xA;                if (DEBUG &gt; 8) log(&quot;\t\t2.&quot;,auth.ProductId,&quot; === &quot;, prod, &quot;GOOD&quot;);&#xA;                okay = true;&#xA;            } else {&#xA;                if (DEBUG &gt; 8) log(&quot;\t\t2.&quot;,auth.ProductId,&quot; === &quot;, prod, &quot;BAD&quot;);&#xA;            }&#xA;        }&#xA;        if (okay === false) {&#xA;            is_not_authed.push(prod);&#xA;        } else {&#xA;            is_authed.push(prod);&#xA;        }&#xA;        if (DEBUG &gt; 5) log(&quot;prod&quot;,prod,&quot;authed&quot;,okay);&#xA;    }&#xA;    &#xA;    // =====================================================&#xA;    // we have an issue id is_not_authed.length &gt; 0 &#xA;    //======================================================&#xA;    if (is_not_authed.length &gt; 0) {&#xA;            if (DEBUG &gt; 0) log(&quot;BAD illegal order&quot;, meta.id, &quot;rep&quot;, doc.RepID, &quot;can sell products&quot;, is_authed, &quot;but can't sell products&quot;, is_not_authed);&#xA;    } else {&#xA;            if (DEBUG &gt; 0) log(&quot;VALID legal order&quot;, meta.id, &quot;rep&quot;, doc.RepID, &quot;can sell products&quot;, is_authed);&#xA;    }&#xA;    // =====================================================&#xA;    // we could move the document or modify it but that's&#xA;    // you business logic.  Typically we might do something like:&#xA;    // 1. update the document with a new tag.&#xA;    //     doc.verify_status = (is_not_authed.length == 0)&#xA;    //     src_col[meta.id] = doc;&#xA;    // 2. at the top of the Function add another filter to &#xA;    //    prevent redoing the same work.&#xA;    //     if (doc.verify_status) return;&#xA;    //======================================================    &#xA;}&#xA;</code></pre>&#xA;<p>Running the above Eventing function against the above data I get the following log messages.</p>&#xA;<pre><code>2022-08-03T19:14:50.936+00:00 [INFO] &quot;BAD illegal order&quot; &quot;order:1111&quot; &quot;rep&quot; 1003 &quot;can sell products&quot; [1,2] &quot;but can't sell products&quot; [3,4] &#xA;&#xA;2022-08-03T19:14:50.848+00:00 [INFO] &quot;BAD illegal order&quot; &quot;order:100&quot; &quot;rep&quot; 1002 &quot;can sell products&quot; [1,2] &quot;but can't sell products&quot; [3] &#xA;&#xA;2022-08-03T19:14:50.812+00:00 [INFO] &quot;VALID legal order&quot; &quot;order:2222&quot; &quot;rep&quot; 1003 &quot;can sell products&quot; [8,9] &#xA;&#xA;2022-08-03T19:14:50.797+00:00 [INFO] &quot;BAD illegal order&quot; &quot;order:1234&quot; &quot;rep&quot; 1001 &quot;can sell products&quot; [1,2,3,4] &quot;but can't sell products&quot; [5] &#xA;</code></pre>&#xA;<p>Of course you want to do something other than log a message perhaps you want to move the document, add or update a property in the document, or do other actions after all your working with pure JavaScript with KV (or Data Service) access to your data in Couchbase.</p>&#xA;<p>Note in the above code I kept lists of what &quot;can&quot; and &quot;cannot&quot; be sold, but if you don't need that you can optimize the loop via breaks (JavaScript v8 is fast) but I do see that at your scale efficiency is key.</p>&#xA;<p>Maybe break out the Products into three arrays then you could do the following:</p>&#xA;<pre><code>KEY  auth:1001 &#xA;{&#xA;  &quot;id&quot;: 1001,&#xA;   &quot;type&quot;: &quot;auth&quot;,&#xA;  &quot;Product&quot;: [ 1, 2, 3, 4 ],&#xA;  &quot;StartDt&quot;: [ &quot;2022-05-15&quot;, &quot;2022-05-15&quot;, &quot;2022-05-15&quot;, &quot;2022-05-15&quot; ],&#xA;  &quot;StartDt&quot;: [ &quot;9999-12-25&quot;, &quot;9999-05-15&quot;, &quot;9999-12-25&quot;, &quot;9999-12-25&quot; ]&#xA;}&#xA;</code></pre>&#xA;<p>The eliminate the for loops:</p>&#xA;<pre><code>const includesAll = (arr, values) =&gt; values.every(v =&gt; arr.includes(v));&#xA;log(meta.id,includesAll(auths.Product, doc.ProductIds));&#xA;</code></pre>&#xA;<p>If the intersection &quot;work&quot; is too lengthy look into things like <a href=""https://github.com/lemire/FastBitSet.js/blob/master/FastBitSet.js"" rel=""nofollow noreferrer"">FastBitSet.js</a> to lower the analysis time.</p>&#xA;<p>The easiest way to increase the performance is to enable the bucket backed cache (requires version 7.0.2 or greater), however if you don't have reuse this won't help.  BTW emitting log messages will also slow things down too so avoid that.</p>&#xA;<p>IMHO you should be able to process 100K docs/second on a small cluster and up to 1M docs/sec on a large tuned cluster.</p>&#xA;<p>If you are not familiar with the Eventing Service you should run a few <a href=""https://docs.couchbase.com/server/current/eventing/eventing-examples.html"" rel=""nofollow noreferrer"">&quot;step by step&quot; examples</a> first to get a basic understanding.</p>&#xA;<p>If for some reason you need more performance (I don't think you will) there are a few advanced Eventing tricks that I can share to speed things up even no - just DM me and we'll schedule some time to talk.</p>&#xA;",12453032,,13302,2022-08-21 11:57:19,2022-08-21 11:57:19,"",,0,2,0,2022-08-03 19:22:01
73230067,1,,,0,54,"<p>Hi i'm new to Swift and GraphQl.</p>&#xA;<p>I would like to ask for your expert's view to fix this issue.</p>&#xA;<p>I'm trying to use Swift to access the data in a returned fetch request from GraphQL and i keep getting this issue.</p>&#xA;<pre><code>**Value of type '[ProductqueryQuery.Data.AllProduct?]?' has no member '__'**&#xA;</code></pre>&#xA;<p>For example in the line 24 of ContentView.swift if i try&#xA;print(product.name) --&gt; the error will pop up as</p>&#xA;<pre><code>****Value of type '[ProductqueryQuery.Data.AllProduct?]?' has no member 'name'****&#xA;</code></pre>&#xA;<p>Here are the code&#xA;ContentView.swift</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>import SwiftUI&#xA;import Apollo&#xA;&#xA;struct ContentView: View {&#xA;    @State var productsearch = """"&#xA;    &#xA;    &#xA;    var body: some View {&#xA;        Text(productsearch).onAppear(perform:  {&#xA;            Network.shared.apollo.fetch(query: ProductqueryQuery(name: ""Product One1"")){ result in&#xA;            switch result {&#xA;            case .success(let graphQLResult):&#xA;                DispatchQueue.main.async{&#xA;                    print(graphQLResult)&#xA;                    if let product = graphQLResult.data?.allProducts.name {&#xA;                        print(product)&#xA;&#xA;                    }&#xA;                }&#xA;&#xA;            case .failure(let error):&#xA;                print(""Error: \(error)"")&#xA;            }&#xA;          }&#xA;            &#xA;}&#xA;                                     }&#xA;struct ContentView_Previews: PreviewProvider {&#xA;    static var previews: some View {&#xA;        ContentView()&#xA;    }&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>Productquery.graphql</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code> query productquery($name: String!) {&#xA;  allProducts(productName:$name) {&#xA;    name&#xA;    price&#xA;  }&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>FYI:&#xA;1 - This query runs with no issues using the GraphQL endpoint</p>&#xA;<p><a href=""https://i.stack.imgur.com/JUrtK.png"" rel=""nofollow noreferrer"">Result from GraphQL endpoint</a></p>&#xA;<p>2 - The result of the print [line 24] is</p>&#xA;<pre><code>**[Optional(API.ProductqueryQuery.Data.AllProduct(resultMap: [&quot;__typename&quot;: Optional(&quot;ProductType&quot;), &quot;name&quot;: Optional(&quot;Product One1&quot;), &quot;price&quot;: Optional(4500000)]))]**&#xA;</code></pre>&#xA;<p>So i would like to know how to access the name and the price in the returned API.</p>&#xA;<p>Thank you.</p>&#xA;",13326996,,13326996,2022-08-04 03:41:31,2022-08-04 03:41:31,Swift can't access data in a fetch response from Graphql - Value of Type error,<swift><graphql>,0,0,0,2022-08-04 03:33:12
73233900,1,,,2,115,"<p>Copying the <a href=""https://github.com/async-graphql/examples/blob/fa8fc5dde0e1f70dee67719eceecfc9ade250d1f/actix-web/starwars/src/main.rs"" rel=""nofollow noreferrer"">starwars example for <code>actix-web</code></a> I'm having issues understanding these errors when trying to <code>instrument</code>:</p>&#xA;<pre class=""lang-rust prettyprint-override""><code>#[derive(Debug)] // adding this&#xA;struct AppState {&#xA;    gql_schema: Schema&lt;QueryRoot, EmptyMutation, EmptySubscription&gt;, // errors here (description below)&#xA;    // other fields here...&#xA;}&#xA;&#xA;async fn main() -&gt; std::io::Result&lt;()&gt; {&#xA;    let schema = Schema::build(QueryRoot, EmptyMutation, EmptySubscription)&#xA;        .data(StarWars::new())&#xA;        .finish();&#xA;&#xA;    println!(&quot;Playground: http://localhost:8000&quot;);&#xA;&#xA;    HttpServer::new(move || {&#xA;        App::new()&#xA;            .app_data(Data::new(AppState {&#xA;                gql_schema: gql_schema.clone(), // using it here&#xA;            }))&#xA;        .service(web::resource(&quot;/&quot;).guard(guard::Post()).to(index))&#xA;        .service(web::resource(&quot;/&quot;).guard(guard::Get()).to(index_playground))&#xA;    })&#xA;    .bind(&quot;127.0.0.1:8000&quot;)?&#xA;    .run()&#xA;    .await&#xA;}&#xA;&#xA;#[tracing::instrument()] // here another error&#xA;async fn index(app_state: web::Data&lt;AppState&gt;, req: GraphQLRequest) -&gt; GraphQLResponse {&#xA;    app_state.gql_schema.execute(req.into_inner()).await.into()&#xA;}&#xA;</code></pre>&#xA;<p>the errors are:</p>&#xA;<pre class=""lang-none prettyprint-override""><code>`async_graphql::Schema&lt;starwars::QueryRoot, async_graphql::EmptyMutation, async_graphql::EmptySubscription&gt;` doesn't implement `std::fmt::Debug`&#xA;the trait `std::fmt::Debug` is not implemented for `async_graphql::Schema&lt;starwars::QueryRoot, async_graphql::EmptyMutation, async_graphql::EmptySubscription&gt;` rustc E0277&#xA;&#xA;server.rs(13, 10): Error originated from macro call here&#xA;</code></pre>&#xA;<pre class=""lang-none prettyprint-override""><code>`async_graphql_actix_web::GraphQLRequest` doesn't implement `std::fmt::Debug`&#xA;the trait `std::fmt::Debug` is not implemented for `async_graphql_actix_web::GraphQLRequest`&#xA;the trait `tracing::Value` is implemented for `tracing::field::DebugValue&lt;T&gt;`&#xA;required because of the requirements on the impl of `std::fmt::Debug` for `&amp;async_graphql_actix_web::GraphQLRequest`&#xA;required because of the requirements on the impl of `tracing::Value` for `tracing::field::DebugValue&lt;&amp;async_graphql_actix_web::GraphQLRequest&gt;`&#xA;required for the cast to the object type `dyn tracing::Value` rustc E0277&#xA;</code></pre>&#xA;<p>I tried to add <code>tracing</code> feature too in Cargo.toml, but it's the same:</p>&#xA;<pre class=""lang-ini prettyprint-override""><code>async-graphql = { version = &quot;4.0.6&quot;, features = [&quot;tracing&quot;] }&#xA;</code></pre>&#xA;<p>How can I fix?</p>&#xA;",10088259,,2189130,2022-09-17 03:52:11,2022-09-17 03:52:11,How can I instrument async-graphql functions with tracing?,<rust><actix-web><rust-tracing><async-graphql>,1,0,0,2022-08-04 09:58:47
73245269,2,,73243120,1,,"<p>The problem is here:</p>&#xA;<pre><code>&lt;BlocksRenderer blocks={allStrapiPage.Blocks} /&gt;&#xA;</code></pre>&#xA;<p>You can't access directly to <code>Blocks</code> because you <code>node</code> is an array inside <code>edges</code> property. From what I see, the loop is done in <code>BlocksRenderer</code> hence you need to provide it an array of <code>blocks</code>. Without knowing exactly your data structure and what returns it's difficult to guess but try something like:</p>&#xA;<pre><code>&lt;BlocksRenderer blocks={allStrapiPage.edges.node[0].Blocks} /&gt;&#xA;</code></pre>&#xA;<blockquote>&#xA;<p>I have a <code>Home.js</code> file that is using a different property&#xA;(<code>allStrapiHomepage</code>) and <code>BlockRenderer</code> is working as expected</p>&#xA;</blockquote>&#xA;<p>If your <code>Home.js</code> query is using a <a href=""https://www.gatsbyjs.com/docs/how-to/querying-data/page-query/"" rel=""nofollow noreferrer"">page query</a> instead of a <a href=""https://www.gatsbyjs.com/docs/how-to/querying-data/static-query/"" rel=""nofollow noreferrer"">static query</a> they cane be triggered and hydrated in different runtimes and build times, so one can fail if the other doesn't. This leads me to think that maybe the query is ok, but the logic isn't. You can easily check it by adding a simple condition like:</p>&#xA;<pre><code>&lt;BlocksRenderer blocks={allStrapiPage?.Blocks} /&gt;&#xA;</code></pre>&#xA;<p>Or:</p>&#xA;<pre><code>{allStrapiPage.Blocks &amp;&amp; &lt;BlocksRenderer blocks={allStrapiPage.Blocks} /&gt;}&#xA;</code></pre>&#xA;",5585371,,5585371,2022-08-05 16:34:56,2022-08-05 16:34:56,"",,0,4,0,2022-08-05 05:56:29
73250167,1,,,0,36,"<p>How can you programmatically build a query using stuff like foreach loops.</p>&#xA;<p>E.g. in the example below I need to add a snippet of GQL per tag.</p>&#xA;<pre><code>{&#xA;  videos(&#xA;    where: {&#xA;      HAS: {&#xA;        relation: &quot;tags&quot;&#xA;        amount: 4&#xA;        operator: EQ&#xA;        condition: {&#xA;          OR: [&#xA;            {&#xA;              column: &quot;name&quot;&#xA;              value : &quot;Tag1&quot;&#xA;            }&#xA;            {&#xA;              column: &quot;name&quot;&#xA;              value : &quot;Tag2&quot;&#xA;            }&#xA;            {&#xA;              column: &quot;name&quot;&#xA;              value : &quot;Tag3&quot;&#xA;            }&#xA;            {&#xA;              column: &quot;name&quot;&#xA;              value : &quot;Tag4&quot;&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  ) {&#xA;    id&#xA;    name&#xA;    path&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I can pass a variable with value 4 and place it at <code>amount: //HERE//</code>, but how does one add a foreach loop in the gql query?</p>&#xA;<pre><code>{&#xA;  column: &quot;name&quot;&#xA;  value : &quot;Tag4&quot;&#xA;}&#xA;</code></pre>&#xA;",12338271,,,,2022-08-05 12:57:35,Angular Apollo GraphQL - Build query using forEach,<angular><graphql><apollo-client><gql><apollo-angular>,0,0,0,2022-08-05 12:57:35
73301203,2,,54183145,1,,"<p>This worked for me:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>    // next.config.js&#xA;    const withLess = require(&quot;next-with-less&quot;);&#xA;    const withPWA = require('next-pwa')&#xA;    &#xA;    const pwa = withPWA({&#xA;      pwa: {&#xA;        dest: 'public'&#xA;      }&#xA;    })&#xA;    &#xA;    module.exports = withLess({&#xA;      lessLoaderOptions: {&#xA;    &#xA;      },&#xA;      reactStrictMode: true,&#xA;      typescript: {&#xA;        ignoreBuildErrors: true,&#xA;      },&#xA;      eslint: {&#xA;        ignoreBuildErrors: true,&#xA;      }, &#xA;      ...pwa // using spread to merge the objects&#xA;    });&#xA;</code></pre>&#xA;",1027204,,,,2022-08-10 05:49:11,"",,0,0,0,2022-08-10 05:49:11
73321897,2,,73320903,0,,"<p>It looks you have an issue(s) accessing the data.</p>&#xA;<blockquote>&#xA;<p>All <code>console.log</code> calls return <code>[object object]</code></p>&#xA;</blockquote>&#xA;<p>This happens when you are not accessing the correct object of the array or your position is not something callable as is (objects, arrays, etc).</p>&#xA;<blockquote>&#xA;<p>Nope, <code>allWpProdukt.nodes.productACF.productLines</code></p>&#xA;</blockquote>&#xA;<p>As I mentioned, you can't do <code>allWpProdukt.nodes.productACF</code> because nodes is an array, so you must access to a specific position or loop through it to get each node. It looks you have several nested loops you're not doing so start checking how your data structure looks like and iterate each position at a time. Something as dummy as:</p>&#xA;<pre><code>{&#xA;&#xA;    allWpProdukt.nodes.map(node =&gt; &lt;div&gt;{node.title}&lt;/div&gt;)&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>Depending on your structure maybe you can omit the nodes and just access to the first position and keep iterating:</p>&#xA;<pre><code> allWpProdukt.nodes[0].productACF.prodLines&#xA;</code></pre>&#xA;<p>Check which kind of data is an object and which is an array to iterate or not, <code>prodLines</code> is likely to be an array as <code>nodes</code> is, as probably <code>prodLineColors</code> and <code>farben</code> are.</p>&#xA;",5585371,,,,2022-08-11 13:52:27,"",,0,0,0,2022-08-11 13:52:27
73327532,1,,,1,284,"<p>I'm trying to use the GitHub GraphQL API to get all the additions made by a user (additions can be found from their commits). I've been able to get the additions from pull requests, but I haven't found a way to do the same for commits. How can I get all the commits from a user?</p>&#xA;<p>This is my query (I am new to GraphQL):</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>query AllAdditions($username: String!, $from: DateTime, $to: DateTime) {&#xA;  user(login: $username) {&#xA;    name&#xA;    contributionsCollection(from: $from, to: $to) {&#xA;      commitContributionsByRepository(maxRepositories: 100) {&#xA;        repository {&#xA;          nameWithOwner&#xA;        }&#xA;        contributions(first: 30) {&#xA;          totalCount&#xA;          # I'm trying to get additions like this, but there is no 'commit' field    &#xA;          # nodes {&#xA;          #   commit {&#xA;          #     additions&#xA;          #   }&#xA;          # }&#xA;        }&#xA;      }&#xA;      pullRequestContributionsByRepository(maxRepositories: 100) {&#xA;        repository {&#xA;          nameWithOwner&#xA;        }&#xA;        contributions(first: 30) {&#xA;          nodes {&#xA;            pullRequest {&#xA;              additions&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",16781396,,,,2022-08-19 13:16:40,Github GraphQL API Get all commits of a User,<graphql><github-api><github-api-v4>,1,0,0,2022-08-11 22:37:16
73336424,1,,,0,10,"<p>I create a new order after the&#xA;payment with stripe, and I update the&#xA;stage to published&#xA;the brand new order with this code:</p>&#xA;<pre><code>const order = {&#xA;        email: session.customer_email,&#xA;        total: session.amount_total,&#xA;        stripeCheckoutId: session.id,&#xA;        orderItems: {&#xA;            create: line_items!.data.map((item) =&gt; ({&#xA;                quantity: item.quantity,&#xA;                total: item.amount_total,&#xA;                product: {&#xA;                    connect: {&#xA;                        id: (item.price?.product as Stripe.Product).metadata.productId&#xA;                    }&#xA;                }&#xA;            }))&#xA;        }&#xA;    };&#xA;&#xA;    const result = await client&#xA;        .mutation(CreateOrderMutationDocument, {&#xA;            order&#xA;        })&#xA;        .toPromise();&#xA;    const id = result.data.order.id;&#xA;    const result2 = await client&#xA;        .mutation(PublishOrderMutationDocument, {&#xA;            id&#xA;        })&#xA;        .toPromise();&#xA;</code></pre>&#xA;<p>but how to update OrderItem as well&#xA;I've tried with</p>&#xA;<pre><code>mutation publishOrderItemMutation($id: ID!) {&#xA;    publishOrder(where: { order: $id }, to: PUBLISHED) {&#xA;        id&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>but I've got</p>&#xA;<blockquote>&#xA;<p>Error 0: GraphQLDocumentError: Field &quot;order&quot; is not defined by type&#xA;&quot;OrderWhereUniqueInput&quot;.</p>&#xA;</blockquote>&#xA;",3887366,,,,2022-08-12 15:23:05,GraphCms publishOrderMutation how to update OrderItem as well,<next.js><graphql><urql><graphcms>,0,0,0,2022-08-12 15:23:05
73342427,1,,,0,56,"<p>I am a newbie in GraphQL and just started to use it in a react project. I have this query to fetch products data by a condition and pagination:</p>&#xA;<pre><code>query ProductSearch($displayText_contains: String = &quot; &quot;, $skip: Int, $first: Int) {&#xA;  product(&#xA;    where: {displayText_contains: $displayText_contains}&#xA;    skip: $skip&#xA;    orderBy: {displayText: ASC}&#xA;    first: $first&#xA;  ) {&#xA;    displayText &lt;------------- first&#xA;    id&#xA;    bag {&#xA;      contentItems {&#xA;        ... on ProductAdvantage {&#xA;          displayText    &lt;------------- add where condition&#xA;          htmlBody {&#xA;            html&#xA;          }&#xA;          productId {&#xA;            contentItems {&#xA;              ... on Product {&#xA;                id&#xA;              }&#xA;            }&#xA;          }&#xA;          &#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;} &#xA;</code></pre>&#xA;<p>As it's shown I want to add a condition to <code>displayText</code> of <code>ProductAdvantage</code> object but I don't know how. While the condition on the first displayText works fine.</p>&#xA;",4699273,,,,2022-08-13 07:37:22,How to use a condition in multiple nested objects in GrapgQl,<graphql><graphiql>,0,2,0,2022-08-13 07:37:22
73359367,1,,,1,198,"<p>Bascially, what I need is , given a content path, e.g let's say a piece of content fragment built by Product Model.&#xA;<a href=""https://i.stack.imgur.com/BQpaD.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BQpaD.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Then I have another content fragement (let's say it is parent content fragement) built by a diff model called 'PageBody' , this parent content fragement includes that product content fragment.&#xA;<a href=""https://i.stack.imgur.com/F5PtD.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/F5PtD.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Now I wish to build a graphql query, to retrieve all/any parents content fragement JSON  that includes this product&#xA;<a href=""https://i.stack.imgur.com/zTZaH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zTZaH.png"" alt=""enter image description here"" /></a></p>&#xA;<p>graphql query:</p>&#xA;<pre><code>query itemRefByPath($path:String!){&#xA;  productByPath (_path: $path) {&#xA;    item{&#xA;      _path&#xA;    }&#xA;    &#xA;    _references {&#xA;      ... on ProductModel {&#xA;        __typename&#xA;        _path        &#xA;      }&#xA;      ... on PageRef {&#xA;        _path&#xA;      }&#xA;      ... on PageModel {&#xA;        _path&#xA;      }&#xA;      &#xA;      ... on PageBodyModel {&#xA;        _path&#xA;      }&#xA;      &#xA;      ... on TabModel {&#xA;        _path&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But as you can see, the references I got empty...&#xA;Anyone could advise me what I have done wrong? Guess my graphql syntax got issue right?&#xA;Please provide me some sample query code to help&#xA;Thanks</p>&#xA;",704420,,,,2022-11-10 12:15:23,"AEM content fragment graphQL, query all parent fragments that includes given content path",<json><graphql><content-management-system><aem><crx>,1,2,0,2022-08-15 09:52:36
73365421,1,,,0,34,"<p>I have always had trouble with the syntax in graphql apollo playground.</p>&#xA;<p>For example, I have a simple model in MongoDB</p>&#xA;<pre><code>const playerSchema = new Schema({&#xA;playerName: {&#xA;   type: String,&#xA;   required: true,&#xA;},&#xA;awards: [{&#xA;   type: String,&#xA; }]&#xA;})&#xA;&#xA;const Player = model('Player', playerSchema)&#xA;module.exports = Player;&#xA;</code></pre>&#xA;<p>See above that 'awards' is an array. I want to be able to add an array of strings for awards a player has won.</p>&#xA;<p>Below, here is my attempts to add an array of strings in the GraphQL playground in the browser...</p>&#xA;<pre><code>mutation addPlayer($playerName: String!, $awards:[String]){&#xA;addPlayer(playerName:$playerName, awards:$awards){&#xA;    playerName&#xA;    awards&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and here are the query variables with the data</p>&#xA;<pre><code>{&#xA;    &quot;playerName&quot;: &quot;Michael Jordan&quot;,&#xA;    &quot;awards&quot;: [&quot;most valuable player&quot;, &quot;rookie of the year&quot;, &quot;scoring champion&quot;]&#xA;}&#xA;</code></pre>&#xA;<p>If I run a query in GraphQL to see the results of this in the database, here is what it looks like. Why is the 'awards' array empty???</p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;        &quot;players&quot;: [&#xA;            {&#xA;              &quot;playerName&quot;: &quot;Michael Jordan&quot;,&#xA;              &quot;awards&quot;: [],       //EMPTY ARRAY HERE, WHY? &#xA;            }&#xA;        ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",9305645,,,,2022-08-15 19:07:03,GraphQL apollo playground - How to add array of strings?,<graphql><graphql-playground>,0,1,0,2022-08-15 19:07:03
73384839,2,,73216629,0,,"<p>Found the answer in <a href=""https://graphql.org/learn/queries/#meta-fields"" rel=""nofollow noreferrer"">https://graphql.org/learn/queries/#meta-fields</a>. In case of sponsorEntity it looks like this:</p>&#xA;<pre><code>      sponsorEntity {&#xA;        ... on User {&#xA;          name&#xA;        }&#xA;      }&#xA;</code></pre>&#xA;<p>The solution is to select the attributes on the respective sub-type of the union.</p>&#xA;",608395,,,,2022-08-17 08:00:19,"",,0,0,0,2022-08-17 08:00:19
73396029,2,,72799407,0,,"<p>An additional option depending on your requirements is to use the @oneOf directive. This directive is in <a href=""https://github.com/graphql/graphql-spec/pull/825"" rel=""nofollow noreferrer"">RFC #825</a> and in currently in RFC 2 status (Draft status; RFC 3 is accepted status), and should be in the main branch relatively soon.</p>&#xA;<p>OneOf Input Objects are a special variant of Input Objects where the type system asserts that exactly one of the fields must be set and non-null, all others being omitted.</p>&#xA;<p>With this directive, your schema would look as follows:</p>&#xA;<pre><code>input fruit @oneOf {&#xA;     apple: Apple&#xA;     banana: banana&#xA;}&#xA;</code></pre>&#xA;",17742422,,,,2022-08-17 23:51:06,"",,0,0,0,2022-08-17 23:51:06
73402567,2,,71124089,0,,"<p>It's because you are sending and array of strings, rather than the JSONString object.</p>&#xA;<pre><code>JSON.stringify(Object that you are sending).&#xA;</code></pre>&#xA;",19786198,,,,2022-08-18 11:48:19,"",,0,0,0,2022-08-18 11:48:19
73407921,1,,,0,91,"<p>I am learning the apollo graphql server. In the doc there is an example. <a href=""https://www.apollographql.com/docs/apollo-server/data/resolvers"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/data/resolvers</a></p>&#xA;<pre><code>const { ApolloServer, gql } = require('apollo-server');&#xA;const {&#xA;  ApolloServerPluginLandingPageLocalDefault,&#xA;} = require('apollo-server-core');&#xA;&#xA;const libraries = [&#xA;  {&#xA;    branch: 'downtown'&#xA;  },&#xA;  {&#xA;    branch: 'riverside'&#xA;  },&#xA;];&#xA;&#xA;// The branch field of a book indicates which library has it in stock&#xA;const books = [&#xA;  {&#xA;    title: 'The Awakening',&#xA;    author: 'Kate Chopin',&#xA;    branch: 'riverside'&#xA;  },&#xA;  {&#xA;    title: 'City of Glass',&#xA;    author: 'Paul Auster',&#xA;    branch: 'downtown'&#xA;  },&#xA;];&#xA;&#xA;// Schema definition&#xA;const typeDefs = gql`&#xA;&#xA;# A library has a branch and books&#xA;  type Library {&#xA;    branch: String!&#xA;    books: [Book!]&#xA;  }&#xA;&#xA;  # A book has a title and author&#xA;  type Book {&#xA;    title: String!&#xA;    author: Author!&#xA;  }&#xA;&#xA;  # An author has a name&#xA;  type Author {&#xA;    name: String!&#xA;  }&#xA;&#xA;  # Queries can fetch a list of libraries&#xA;  type Query {&#xA;    libraries: [Library]&#xA;  }&#xA;`;&#xA;&#xA;// Resolver map&#xA;const resolvers = {&#xA;  Query: {&#xA;    libraries() {&#xA;&#xA;      // Return our hardcoded array of libraries&#xA;      return libraries;&#xA;    }&#xA;  },&#xA;  Library: {&#xA;    books(parent) {&#xA;&#xA;      // Filter the hardcoded array of books to only include&#xA;      // books that are located at the correct branch&#xA;      return books.filter(book =&gt; book.branch === parent.branch);&#xA;    }&#xA;  },&#xA;  Book: {&#xA;&#xA;    // The parent resolver (Library.books) returns an object with the&#xA;    // author's name in the &quot;author&quot; field. Return a JSON object containing&#xA;    // the name, because this field expects an object.&#xA;    author(parent) {&#xA;      return {&#xA;        name: parent.author&#xA;      };&#xA;    }&#xA;  }&#xA;&#xA;  // Because Book.author returns an object with a &quot;name&quot; field,&#xA;  // Apollo Server's default resolver for Author.name will work.&#xA;  // We don't need to define one.&#xA;};&#xA;&#xA;// Pass schema definition and resolvers to the&#xA;// ApolloServer constructor&#xA;const server = new ApolloServer({&#xA;  typeDefs,&#xA;  resolvers,&#xA;  csrfPrevention: true,&#xA;  cache: 'bounded',&#xA;  plugins: [&#xA;    ApolloServerPluginLandingPageLocalDefault({ embed: true }),&#xA;  ],&#xA;});&#xA;&#xA;// Launch the server&#xA;server.listen().then(({ url }) =&gt; {&#xA;  console.log(`  Server ready at ${url}`);&#xA;});&#xA;</code></pre>&#xA;<p>and my query is</p>&#xA;<pre><code>query GetBooksByLibrary {&#xA;  libraries {&#xA;    books {&#xA;      title&#xA;      author {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>got the below response</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;libraries&quot;: [&#xA;      {&#xA;        &quot;branch&quot;: &quot;downtown&quot;,&#xA;        &quot;books&quot;: [&#xA;          {&#xA;            &quot;title&quot;: &quot;City of Glass&quot;,&#xA;            &quot;author&quot;: {&#xA;              &quot;name&quot;: &quot;Paul Auster&quot;&#xA;            }&#xA;          }&#xA;        ]&#xA;      },&#xA;      {&#xA;        &quot;branch&quot;: &quot;riverside&quot;,&#xA;        &quot;books&quot;: [&#xA;          {&#xA;            &quot;title&quot;: &quot;The Awakening&quot;,&#xA;            &quot;author&quot;: {&#xA;              &quot;name&quot;: &quot;Kate Chopin&quot;&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I am not sure how the resolver part is generating the result. How those resolver part is getting called.</p>&#xA;",4650166,,,,2022-08-18 18:33:49,How resolver chain is working in apollo graphql server,<graphql><apollo-server>,0,0,0,2022-08-18 18:33:49
73408138,1,,,0,96,"<p>In the mongoDB typeDefs</p>&#xA;<pre><code>  type Checkout {&#xA;    session: ID&#xA;  }&#xA;&#xA;type Query {&#xA;    categories: [Category]&#xA;    products(category: ID, name: String): [Product]&#xA;    product(_id: ID!): Product&#xA;    user: User&#xA;    order(_id: ID!): Order&#xA;    checkout(products: [ID]!): Checkout&#xA;  }&#xA;</code></pre>&#xA;<p>resolvers for said typeDefs. Getting items from the arguments passed, running said objects through a loop for each to be translated for Stripe parameters and then creating the session</p>&#xA;<pre><code>checkout: async (parent, args, context) =&gt; {&#xA;      const order = new Order({ products: args.products });&#xA;      const { products } = await order.populate('products');&#xA;      const line_items = [];&#xA;&#xA;      for (let i = 0; i &lt; products.length; i++) {&#xA;        // generate product id&#xA;        const product = await stripe.products.create({&#xA;          name: products[i].name,&#xA;          description: products[i].description&#xA;        });&#xA;&#xA;        // generate price id using the product id&#xA;        const price = await stripe.prices.create({&#xA;          product: product.id,&#xA;          unit_amount: products[i].price * 100,&#xA;          currency: 'usd',&#xA;        });&#xA;&#xA;        // add price id to the line items array&#xA;        line_items.push({&#xA;          price: price.id,&#xA;          quantity: 1&#xA;        });&#xA;      }&#xA;      const session = await stripe.checkout.sessions.create({&#xA;        payment_method_types: ['card'],&#xA;        line_items,&#xA;        mode: 'payment',&#xA;        success_url: 'https://example.com/success?session_id={CHECKOUT_SESSION_ID}',&#xA;        cancel_url: 'https://example.com/cancel'&#xA;      });&#xA;      &#xA;      return { session: session.id };&#xA;    }&#xA;</code></pre>&#xA;<p>In the graphql sandbox. Upon running the query I am getting the error stating that i am missing the param: name.</p>&#xA;<pre><code>query checkout($products: [ID]!) {&#xA;  checkout(products: $products) {&#xA;    session&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>with the variables, IDs I pulled from my mongoDB database</p>&#xA;<pre><code>{&#xA;  &quot;products&quot;: [&quot;62fa67b5e49ec26a9481488d&quot;, &quot;62fa67b5e49ec26a9481488e&quot;]&#xA;}&#xA;</code></pre>&#xA;",16662750,,,,2022-08-18 18:53:43,"I can't figure out why I'm getting this error using Stripe.js ""message"": ""Missing required param: name.""",<node.js><reactjs><mongodb><graphql><stripe-payments>,0,1,0,2022-08-18 18:53:43
73417395,2,,73327532,1,,"<pre><code>{&#xA;  search(query: &quot;org:test&quot;, type: REPOSITORY, last: 100) {&#xA;    nodes {&#xA;      ... on Repository {&#xA;        name&#xA;        defaultBranchRef {&#xA;          name&#xA;          target {&#xA;            ... on Commit {&#xA;              history(first: 100, since: &quot;2013-07-11T00:00:00&quot;) {&#xA;                totalCount&#xA;                nodes {&#xA;                  ... on Commit {&#xA;                    committedDate&#xA;                    additions&#xA;                    author {&#xA;                      name&#xA;                      email&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>As for getting all orgs, there isn’t currently a way to do that via the GraphQL API because the search connection requires something in the search query. There’s also no top-level connection that allows you to list all users, orgs, or repositories.</p>&#xA;<p>I hope that helps!</p>&#xA;<p>answer copied from this URL: <a href=""https://github.com/orgs/community/discussions/24590"" rel=""nofollow noreferrer"">GraphQL - Get all commits by all users</a></p>&#xA;",8202576,,,,2022-08-19 13:16:40,"",,0,0,0,2022-08-19 13:16:40
73421371,2,,71372395,0,,"<p>I got this error when I incorrectly specified an unknown type in the <code>type</code> attribute of an extension to the <code>Query</code> type.  More specifically:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export const CoursesQuery = extendType({&#xA;  type: &quot;Query&quot;,&#xA;  definition(t) {&#xA;    t.field(&quot;myQuery&quot;, {&#xA;      type: InvalidType,  // &lt;--- Changing InvalidType to the correct type fixed the error&#xA;      async resolve(_parent, _args, ctx) {&#xA;        return ...&#xA;      },&#xA;    });&#xA;  },&#xA;});&#xA;</code></pre>&#xA;<p>The error disappeared after I changed <code>InvalidType</code> to the correct type and restarted the server.</p>&#xA;",10226703,,,,2022-08-19 19:19:33,"",,0,0,0,2022-08-19 19:19:33
73429537,2,,73419744,0,,"<p>An additional step was necessary to fetch the blob contents of the object queried via the graph QL api. Once this was achieved the media file was served with success. This required using the go-github blob api to fetch the blob base64 contents from github.</p>&#xA;<p><a href=""https://81j44yaaab.execute-api.us-east-1.amazonaws.com/ipe/media/Screen%20Shot%202022-02-02%20at%202.00.29%20PM.png"" rel=""nofollow noreferrer"">https://81j44yaaab.execute-api.us-east-1.amazonaws.com/ipe/media/Screen%20Shot%202022-02-02%20at%202.00.29%20PM.png</a></p>&#xA;<p>GetMediaFile lambda</p>&#xA;<pre><code>func GetMediaFile(req *events.APIGatewayProxyRequest, ac *ActionContext) (events.APIGatewayProxyResponse, error) {&#xA;    res := events.APIGatewayProxyResponse{StatusCode: 500}&#xA;&#xA;    pathPieces := strings.Split(req.Path, &quot;/&quot;)&#xA;    siteName := pathPieces[1]&#xA;    file, _ := url.QueryUnescape(pathPieces[3]) // pathPieces[2]&#xA;&#xA;    log.Print(&quot;requested media site: &quot; + siteName)&#xA;    log.Print(&quot;requested media file: &quot; + file)&#xA;&#xA;    // buf := aws.NewWriteAtBuffer([]byte{})&#xA;&#xA;    // downloader := s3manager.NewDownloader(ac.Session)&#xA;&#xA;    /*_, err := downloader.Download(buf, &amp;s3.GetObjectInput{&#xA;        Bucket: aws.String(ac.BucketName),&#xA;        Key:    aws.String(&quot;media/&quot; + file),&#xA;    })&#xA;&#xA;    if err != nil {&#xA;        return res, err&#xA;    }*/&#xA;&#xA;    ext := strings.Split(pathPieces[len(pathPieces)-1], &quot;.&quot;)&#xA;    contentType := mime.TypeByExtension(ext[len(ext)-1])&#xA;&#xA;    if ext[len(ext)-1] == &quot;md&quot; {&#xA;        contentType = &quot;text/markdown&quot;&#xA;    }&#xA;&#xA;    suffix := &quot;&quot;&#xA;    if os.Getenv(&quot;GITHUB_BRANCH&quot;) == &quot;master&quot; {&#xA;        suffix = &quot;-prod&quot;&#xA;    }&#xA;&#xA;    owner := &quot;rollthecloudinc&quot;&#xA;    repo := siteName + &quot;-objects&quot; + suffix&#xA;&#xA;    var q struct {&#xA;        Repository struct {&#xA;            Object struct {&#xA;                ObjectFragment struct {&#xA;                    Oid githubv4.GitObjectID&#xA;                } `graphql:&quot;... on Blob&quot;`&#xA;            } `graphql:&quot;object(expression: $exp)&quot;`&#xA;        } `graphql:&quot;repository(owner: $owner, name: $name)&quot;`&#xA;    }&#xA;    qVars := map[string]interface{}{&#xA;        &quot;exp&quot;:   githubv4.String(os.Getenv(&quot;GITHUB_BRANCH&quot;) + &quot;:media/&quot; + file),&#xA;        &quot;owner&quot;: githubv4.String(owner),&#xA;        &quot;name&quot;:  githubv4.String(repo),&#xA;    }&#xA;&#xA;    err := ac.GithubV4Client.Query(context.Background(), &amp;q, qVars)&#xA;    if err != nil {&#xA;        log.Print(&quot;Github latest file failure.&quot;)&#xA;        log.Panic(err)&#xA;    }&#xA;&#xA;    oid := q.Repository.Object.ObjectFragment.Oid&#xA;    log.Print(&quot;Github file object id &quot; + oid)&#xA;&#xA;    blob, _, err := ac.GithubRestClient.Git.GetBlob(context.Background(), owner, repo, string(oid))&#xA;    if err != nil {&#xA;        log.Print(&quot;Github get blob failure.&quot;)&#xA;        log.Panic(err)&#xA;    }&#xA;&#xA;    res.StatusCode = 200&#xA;    res.Headers = map[string]string{&#xA;        &quot;Content-Type&quot;: contentType,&#xA;    }&#xA;    res.Body = blob.GetContent()&#xA;    res.IsBase64Encoded = true&#xA;    return res, nil&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>Full Source: <a href=""https://github.com/rollthecloudinc/verti-go/blob/master/api/media/main.go"" rel=""nofollow noreferrer"">https://github.com/rollthecloudinc/verti-go/blob/master/api/media/main.go</a></p>&#xA;",16875364,,,,2022-08-20 19:23:24,"",,0,0,0,2022-08-20 19:23:24
73434909,1,,,0,115,"<p>I have a reusable block and I am trying to return it's dynamicContent using the following query. I am using the blocks id</p>&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;    reusableBlock(id: &quot;10061756&quot;, idType: DATABASE_ID) {&#xA;        blocks {&#xA;        dynamicContent&#xA;        saveContent&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>I am just getting null back no matter what I try</p>&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;reusableBlock&quot;: null&#xA;  },&#xA;  &quot;extensions&quot;: {&#xA;    &quot;debug&quot;: []&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>If I query a page where the block is, it works fine.</p>&#xA;<p>Is my query wrong or what am I missing?</p>&#xA;",11971876,,,,2022-11-21 13:18:50,WPGraphQL with WP GraphQL Gutenberg - How to get,<wordpress><wp-graphql>,0,0,0,2022-08-21 13:33:17
73443042,1,,,0,75,"<p>I have a bunch of data, in a .NET GRaphQL API that are basically list of strings like</p>&#xA;<pre><code>Public List&lt;string&gt; avarageMessageSize = new List&lt;string&gt;{&#xA;&quot;Up to 5 KB&quot;,&#xA;&quot;Between 5 KB and 4 MB&quot;,&#xA;Between 4 MB and 20 MB&quot;,&#xA;&quot;20 MB and bigger&quot;&#xA;};&#xA;</code></pre>&#xA;<p>When a new Entity is made with a GraphQL Mutation, for other values that are stored in Enums I have input types that let me choose and pick in a mutation to add the correct value, is this also possible for list items, to pick and choose the correct value(string) in a Mutation?</p>&#xA;",13460612,,,,2022-08-23 15:55:27,.Net HotChocolate GraphQL Mutations pick from a list of stings like enum,<.net><graphql><hotchocolate>,1,4,0,2022-08-22 09:39:05
73456867,2,,46513476,0,,"<p>This simply results due to the import error&#xA;earlier code</p>&#xA;<pre><code>const books =require('./data')&#xA;// Resolvers define the technique for fetching the types defined in the&#xA;// schema. This resolver retrieves books from the &quot;books&quot; array above.&#xA;const resolvers = {&#xA;    Query: {&#xA;      books(){&#xA;        return books;&#xA;    },&#xA;  },&#xA;}&#xA;module.exports = { resolvers };&#xA;</code></pre>&#xA;<p>just replace the import statement with</p>&#xA;<pre><code>const {books} =require('./data')&#xA;</code></pre>&#xA;<p>as you had ex</p>&#xA;",19036658,,,,2022-08-23 10:11:45,"",,0,0,0,2022-08-23 10:11:45
73466233,2,,73462122,0,,"<p>Found the error, in ExpressionAttributeValues in the else block of the lambda resolver I forgot to prefix itemType with a colon:</p>&#xA;<pre><code>queryCommandInput.ExpressionAttributeValues = {&#xA;          ... queryCommandInput.ExpressionAttributeValues,&#xA;          &quot;:itemType&quot;: &quot;User&quot;,&#xA;        };&#xA;</code></pre>&#xA;",1149413,,,,2022-08-24 00:30:06,"",,0,0,0,2022-08-24 00:30:06
73470180,1,73470760,,0,21,"<p>Can you please check what I'm doing wrong here?</p>&#xA;<p>In my schema I have a type named <code>HoteDetailsType</code> and a field inside <code>addOns</code> in reference of another type <code>HotelAddOnsType</code></p>&#xA;<pre><code> type HotelAddOnsType = {&#xA;  name: string&#xA;  description: string&#xA;  price: number&#xA;}&#xA;</code></pre>&#xA;<pre><code>type HotelDetailsType = {&#xA;  addOns: HotelAddOnsType[]&#xA;  guestName: string&#xA;  numberOfRooms: number&#xA;  totalPrice: number&#xA;}&#xA;</code></pre>&#xA;<p>When I try to display the data, all field is displaying properly except <code>addOns</code></p>&#xA;<p><code>const hotelDetails: HotelDetailsType = data.getHotelDetailsByIds.items[0]</code></p>&#xA;<p>This is how I call it,&#xA;<code> &lt;Text&gt;{hotelDetails.addOns.name}&lt;/Text&gt;</code>&#xA;<code>&lt;Text&gt;{hotelDetails.addOns.description}&lt;/Text&gt;</code></p>&#xA;<p>and receiving this error&#xA;<code>Property 'name' does not exist on type 'HotelAddOnsType[]'.</code></p>&#xA;<p>Any workaround on this?&#xA;Thanks a lot.</p>&#xA;",19836009,,,,2022-08-24 09:40:26,"React, Graphql fetching a list",<reactjs><graphql>,1,0,0,2022-08-24 08:51:51
73470760,2,,73470180,0,,<p>hotelDetails.addOns is an array of objects..</p>&#xA;<p>So you have access through index or map through the values to get the data..</p>&#xA;<p>eg:</p>&#xA;<pre><code> hotelDetails.addOns[0].name&#xA;</code></pre>&#xA;<p>or</p>&#xA;<pre><code>{hotelDetails.addOns.map((data) =&gt; {&#xA;        return (&#xA;          &lt;&gt;&#xA;            &lt;p&gt;{data.name}&lt;/p&gt;&#xA;            &lt;p&gt;{data.description}&lt;/p&gt;&#xA;            {data.price}&#xA;          &lt;/&gt;&#xA;        );&#xA;      })}&#xA;</code></pre>&#xA;,16835747,,16835747,2022-08-24 09:40:26,2022-08-24 09:40:26,"",,0,0,0,2022-08-24 09:32:39
73489620,2,,68619393,0,,"<p>I've been finding that I have to set <code>fetchPolicy: 'no-cache'</code> on the Apollo query if I'm passing the <code>product</code> data to a component. If you're using the <code>product</code> data where the Apollo Query happens (i.e. same component / page ), you can skip the <code>fetchPolicy</code> and just add the watcher.</p>&#xA;<pre><code>apollo: {&#xA;  product: {&#xA;    client: &quot;shopify&quot;,&#xA;    query: ProductByHandle,&#xA;    fetchPolicy: 'no-cache',&#xA;    variables: function () {&#xA;      return {&#xA;        handle: this.productHandle,&#xA;        countryCode: this.currentCountryCode&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Next, I've been using a watcher and call a method to update the pricing. For example:</p>&#xA;<pre><code>methods: {&#xA;  updatePrice(product) {&#xA;    this.minPrice = Number(product.node.priceRange.minVariantPrice.amount).toFixed(2),&#xA;    this.maxPrice = Number(product.node.priceRange.maxVariantPrice.amount).toFixed(2),&#xA;    this.compareAtMinPrice = Number(product.node.compareAtPriceRange.minVariantPrice.amount).toFixed(2),&#xA;    this.compareAtMaxPrice = Number(product.node.compareAtPriceRange.maxVariantPrice.amount).toFixed(2)&#xA;  }&#xA;},&#xA;watch: {&#xA;  product: function(newval, oldval) {&#xA;       this.updatePrice(newval)&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>This works, but I'd love to figure out a solution that includes having caching. I suspect using a mutation when the currency changes might do it, but haven't dug into it.</p>&#xA;",2827087,,2827087,2022-08-25 16:35:18,2022-08-25 16:35:18,"",,0,0,0,2022-08-25 14:48:56
73492973,1,73493490,,0,99,"<p>Trying to set the <code>available</code> inventory for a large amount of products within multiple locations.</p>&#xA;<p>The problem I am running into is there is just so many products that I need to find their <code>inventory_item_id</code> in order to utilize the <code>inventoryActivate</code> mutation.</p>&#xA;<p>How can I grab a list of ALL of my 9,000 products <code>inventory_item_id</code> without going one-by-one?</p>&#xA;<p>Use Case:</p>&#xA;<ul>&#xA;<li>10 Locations used in Shopify</li>&#xA;<li>9,000 Products in Shopify</li>&#xA;<li>ERP creates and holds the physical inventory of each</li>&#xA;<li>Need to update the Inventory of each Product at its respective location every hour or so</li>&#xA;</ul>&#xA;<p>I am looking at the <a href=""https://shopify.dev/api/examples/product-inventory#set-inventory-levels-to-a-certain-amount"" rel=""nofollow noreferrer"">docs found here</a>.</p>&#xA;",525706,,,,2022-08-25 20:40:54,"Shopify GrahpQL API - How Do I Grab 9,000 inventory_item_ids for InventoryActivate Mutation?",<graphql><shopify><shopify-api>,2,0,0,2022-08-25 19:44:44
73493271,2,,73492973,0,,"<p>You can export inventory in bulk and get your needed inventory item IDs, current quantities and location. Using that file (JSON) you can then loop through those and activate your inventory items.</p>&#xA;",210841,,,,2022-08-25 20:16:37,"",,0,0,0,2022-08-25 20:16:37
73493490,2,,73492973,0,,"<p>I have found that we can utilize the <code>bulkOperationRunQuery</code> <a href=""https://shopify.dev/api/usage/bulk-operations/queries#bulk-query-overview"" rel=""nofollow noreferrer"">following the docs here</a>.</p>&#xA;<ol>&#xA;<li>I first ran the following to create the bulk operation with sku and inventoryItem:</li>&#xA;</ol>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>mutation {&#xA;  bulkOperationRunQuery(&#xA;   query: """"""&#xA;    {&#xA;      products {&#xA;        edges {&#xA;          node {&#xA;            id&#xA;            variants(first: 5)&#xA;        {&#xA;          edges {&#xA;            node {&#xA;                id&#xA;              sku&#xA;              inventoryItem {&#xA;                id  #this is the inventory_item_id&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;    """"""&#xA;  ) {&#xA;    bulkOperation {&#xA;      id&#xA;      status&#xA;    }&#xA;    userErrors {&#xA;      field&#xA;      message&#xA;    }&#xA;  }&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<ol start=""2"">&#xA;<li>After completed I then grabbed the Url returned from the Bulk Operation:</li>&#xA;</ol>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>query {&#xA;  node(id: ""gid://shopify/BulkOperation/123456789"") {&#xA;    ... on BulkOperation {&#xA;      url&#xA;      partialDataUrl&#xA;    }&#xA;  }&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<ol start=""3"">&#xA;<li>When we go to the URL we get a downloadable .jsonl file.  I parsed it with PHP to grab only the <code>sku</code> and <code>InventoryItem</code> id:</li>&#xA;</ol>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>print '&lt;table&gt;';&#xA;$file = @fopen(""bulk.json"", ""r"");&#xA;while (!feof($file)){&#xA;    $line = fgets($file);&#xA;    $obj = json_decode($line);&#xA;    $sku = $obj-&gt;sku;&#xA;    $inv_id = $obj-&gt;inventoryItem-&gt;id;&#xA;    $inv_id = str_replace(""gid://shopify/InventoryItem/"", """", $inv_id);&#xA;    if($inv_id != ''){&#xA;    print ""&lt;tr&gt;&#xA;    &lt;td&gt;$sku&lt;/td&gt;"";&#xA;    print ""&lt;td&gt;$inv_id&lt;/td&gt;&#xA;    &lt;/tr&gt;"";&#xA;    }&#xA;}&#xA;print '&lt;/table&gt;';</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>This provided me with all 9,000 Products Inventory Item IDs to be used on any subsequent Inventory Updates we need to call with GraphQL.</p>&#xA;",525706,,,,2022-08-25 20:40:54,"",,0,1,0,2022-08-25 20:40:54
73493927,1,,,0,28,"<p>I’m using Nuxt which does both static site generation (SSG) and server-side rendering (SSR)</p>&#xA;<p>My app hits a graphQL API for content using Apollo smart queries (@nuxtjs/apollo).</p>&#xA;<p>Before the API returns I can safely use</p>&#xA;<p><code>{{post}}</code></p>&#xA;<p>Without an errror, but if I do for example</p>&#xA;<p><code>{{post.author.name}}</code></p>&#xA;<p>The app errors with <code>can’t read property of null</code> due to the moment before the API returns.</p>&#xA;<p>While this can easily be fixed with either</p>&#xA;<pre><code>&lt;template v-if=&quot;post &amp;&amp; post.author &amp;&amp; post.author.name&quot;&gt;&#xA;    {{post.author.name}}&#xA;&lt;/template&gt;&#xA;</code></pre>&#xA;<p>Or</p>&#xA;<pre><code>{{(post &amp;&amp; post.author &amp;&amp; post.author.name ? post.author.name : '')}}&#xA;</code></pre>&#xA;<p>…Both of these cause a blink during page load.</p>&#xA;<p>Because of SSG, the correct content is already in the DOM. Hydration should have already bound the DOM element to some data. By using either of the above, I’m telling Nuxt to immediately throw out the initial data until the content API has returned. In effect I get a sub-second page-load of the correct content followed by a blank until the API request returns a second or so later.</p>&#xA;<p>What I actually want to achieve is this</p>&#xA;<pre><code>{{(post &amp;&amp; post.author &amp;&amp; post.author.name) &#xA;    ? post.author.name &#xA;    : [use what is already in the DOM]}}&#xA;</code></pre>&#xA;<p>or possibly, defer SSR until the Apollo smart query has returned.</p>&#xA;<p>How do I handle this momentary lack of data without rendering a blank?</p>&#xA;",2705640,,2705640,2022-08-29 13:56:54,2022-08-29 13:56:54,V-if with SSG causes flicker during page load,<graphql><nuxt.js><apollo><server-side-rendering><ssg>,0,9,0,2022-08-25 21:37:02
73496527,1,,,0,68,"<p>Let's say I have a query like this:</p>&#xA;<pre><code>query Stores {&#xA;  products {&#xA;    sku&#xA;    tags {&#xA;      name&#xA;      order&#xA;    }&#xA;    name&#xA;    description&#xA;    price {&#xA;      currency&#xA;      value&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And I have a resolver like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>@Resolver(() =&gt; Store)&#xA;export class StoreResolver {&#xA;  @ResolveField(() =&gt; Product, { nullable: true })&#xA;  products(@Parent() store: Store) {&#xA;    return db.findProductsByStoryId(store.id)&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Which resolves the products.</p>&#xA;<p>I need to do some processing to the <code>price.value</code> according to the currency and something to the <code>tags.order</code>.</p>&#xA;<p>What would be the NestJS syntax to resolve those fields?</p>&#xA;<p>Thanks.</p>&#xA;",1241467,,,,2022-08-26 05:41:02,Resolve inner or nested fields in GraphQL with NestJS,<javascript><graphql><nestjs>,0,0,0,2022-08-26 05:41:02
73501788,1,73505636,,0,31,"<p>For example, through <a href=""https://docs.github.com/en/graphql/overview/explorer"" rel=""nofollow noreferrer"">GitHub explorer</a> one can retrieve different types of time line items for a pull request (in this example <code>PULL_REQUEST_COMMIT</code> and <code>PULL_REQUEST_REVIEW</code>):</p>&#xA;<pre><code>{&#xA;  repository(name: &quot;react&quot;, owner: &quot;facebook&quot;) {&#xA;    pullRequests(last: 10) {&#xA;      nodes {&#xA;        number&#xA;        timelineItems(last: 10, itemTypes: [PULL_REQUEST_COMMIT, PULL_REQUEST_REVIEW]) {&#xA;          nodes {&#xA;            __typename&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>How can I now access different fields of the types <code>PullRequestEvent</code> or <code>PullRequestReviewEvent</code>? In other words, is there a cast or an if-then-else in GraphQL?</p>&#xA;",1864294,,,,2022-08-26 19:19:46,How to cast into a type in GraphQL,<graphql>,1,0,0,2022-08-26 13:29:00
73505636,2,,73501788,2,,"<p><code>nodes</code> returns an array of <code>PullRequestTimelineItems</code> and a <code>PullRequestTimelineItems</code>is a GraphQL <a href=""https://graphql.org/learn/schema/#union-types"" rel=""nofollow noreferrer"">union type</a>. You can use the <code>...on</code>  notation to query for fields of a specific member in the union type:</p>&#xA;<pre><code>{&#xA;  repository(name: &quot;react&quot;, owner: &quot;facebook&quot;) {&#xA;    pullRequests(last: 10) {&#xA;      nodes {&#xA;        number&#xA;        timelineItems(last: 10, itemTypes: [PULL_REQUEST_COMMIT, PULL_REQUEST_REVIEW]) {&#xA;          nodes {&#xA;            ...on PullRequestReview {&#xA;              body&#xA;            }&#xA;            ...on PullRequestCommit {&#xA;              url&#xA;            }&#xA;            &#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6134498,,,,2022-08-26 19:19:46,"",,0,0,0,2022-08-26 19:19:46
73513054,2,,58309814,0,,"<p>libphonenumber-js finds both 5555551212 and 555-555-1212 as invalid. What I have read is area code 555 is not a valid area code. So it would be the ideal number to generate known invalid test phone numbers, as well as a perfect phone number area code to be a known invalid initializer. But alas, dynamodb declares it as invalid.</p>&#xA;",10251338,,10251338,2022-08-27 17:25:24,2022-08-27 17:25:24,"",,0,0,0,2022-08-27 17:24:36
73516226,1,,,0,27,"<p>In an effort to teach myself Apollo Server I was implementing the schema described <a href=""https://www.apollographql.com/docs/apollo-server/data/resolvers/"" rel=""nofollow noreferrer"">here</a>.  CodeGen generated what look like very sensible definitions for the types.</p>&#xA;<pre><code>export type Book = {&#xA;  __typename?: 'Book';&#xA;  author: Author;&#xA;  title: Scalars['String'];&#xA;};&#xA;&#xA;export type Library = {&#xA;  __typename?: 'Library';&#xA;  books?: Maybe&lt;Array&lt;Book&gt;&gt;;&#xA;  branch: Scalars['String'];&#xA;};&#xA;</code></pre>&#xA;<p>The problem was the (Javascript) given in the example, equally sensibly, gave data for books and libraries as</p>&#xA;<pre><code>  {&#xA;    branch: &quot;riverside&quot;,&#xA;  }&#xA;</code></pre>&#xA;<p>and</p>&#xA;<pre><code>  {&#xA;    title: &quot;The Awakening&quot;,&#xA;    author: &quot;Kate Chopin&quot;,&#xA;    branch: &quot;riverside&quot;,&#xA;  }&#xA;</code></pre>&#xA;<p>That is, in the Javascript, each child had the ID of its parent, but in the GraphQL, each parent had an array of its actual children.</p>&#xA;<p>When I applied the <code>Resolvers</code> type, of course, the compiler complained.  Where is the child array? it asked plaintively.</p>&#xA;<p>You are supposed to figure that out at run-time, if you are even asked.  Stupid computer.</p>&#xA;<p>Both Apollo and GraphQL CodeGen are very professional products.  They would not have omitted something this basic.  What am I missing?</p>&#xA;<p>(Incidentally, I think, but am really not sure, that <a href=""https://stackoverflow.com/questions/61088512/graphql-codegen-problem-with-generating-typescript-interfaces-from-graphql-inter"">this question</a> springs from the same issue.)</p>&#xA;",238884,,,,2022-08-28 05:28:00,How do I implement GraphQL resolvers in Typescript with Graphql-codegen?,<typescript><graphql><apollo-server><graphql-codegen>,1,0,0,2022-08-28 05:28:00
73516620,2,,73515983,2,,"<p>I guess, your <code>Queries</code> object looks like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const Queries = {&#xA;  QUERY_PRODUCT_ONE_WITH_PRICE: &quot;...&quot;,&#xA;  QUERY_CUSTOMER_TWO_WITH_LAST_NAME: &quot;...&quot;&#xA;}&#xA;</code></pre>&#xA;<p>(Keys matter, value is not relevant here)</p>&#xA;<p>so you want <code>queryStr</code> to either be <code>product one with price</code> or <code>customer two with last name</code> if I understand the <code>const gqlQueryName = ....</code> correctly.</p>&#xA;<p>You can achieve this using some mapped types with conditional types in TS:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>&#xA;import * as Queries from '../graphql/queries';&#xA;type IQueries = typeof Queries;&#xA;&#xA;type Replace&lt;S extends string&gt; = S extends `${infer A}_${infer B}` ? Replace&lt;`${A} ${B}`&gt; : S&#xA;&#xA;&#xA;type AllowedQueryNames =  keyof IQueries extends `QUERY_${infer S}` ? Lowercase&lt;Replace&lt;S&gt;&gt; : never&#xA;&#xA;const UseGetQuery = (queryStr: AllowedQueryNames) =&gt; { &#xA;  // ...&#xA;}&#xA;</code></pre>&#xA;<p>Some examples:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const x: AllowedQueryNames = &quot;product one with price&quot;; // OK&#xA;const y: AllowedQueryNames = &quot;customer two with last name&quot;;  // OK&#xA;const a: AllowedQueryNames = &quot;order by id&quot; // Compile error&#xA;</code></pre>&#xA;<p>TypeScript Playground: <a href=""http://surl.li/cuyjb"" rel=""nofollow noreferrer"">http://surl.li/cuyjb</a></p>&#xA;<p>Not sure, if that detected all cases, but it should work.</p>&#xA;<p>I hope that helps.</p>&#xA;",6134498,,6134498,2022-08-28 07:05:54,2022-08-28 07:05:54,"",,0,2,0,2022-08-28 06:59:23
73527874,1,,,0,125,"<p>We have performed schema stitching using the federated approach in hot chocolate.</p>&#xA;<p>Say we have three downstream services(i.e separate APIs) Customer, Order, and Product. A scenario that we are trying to handle is that the Order must be sorted/filtered using the field which is extended from the Product(Say product serial number). Basically, I need to apply sort/filter on the parent node based on child attributes where the child node is extended from stitched schema.</p>&#xA;<pre><code>Structure of Query 1:&#xA;Order(order: {ProductSerialNumber: DESC}){&#xA;  OrderNumber&#xA;  Products{. // Products is extended from product services using schema stitching&#xA;    ProductName&#xA;    ProductPrice&#xA;    ProductSerialNumber&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<pre><code>Structure of Query 2:&#xA;Order(order: {ProductSerialNumber: DESC}){&#xA;  OrderNumber&#xA;  ProductSerialNumber// This is extended from product service using schema stitching&#xA;}&#xA;</code></pre>&#xA;<p>How to handle anyone/both of the above-mentioned queries?</p>&#xA;",19869994,,,,2022-08-29 11:07:47,HotChocolate:To apply Sort/filter using extended attribute from stitched schema,<c#><.net-core><graphql><hotchocolate><apollo-federation>,0,0,0,2022-08-29 11:07:47
73530232,1,,,0,10,"<p>I have installed PWA studio with venia theme. I have followed adobe docs to install PWA studio on my local system.</p>&#xA;<p>I am facing an issue with the cart page. basically, I have added some products to the cart, the products are visible in the mini cart but when I click on &quot;Edit Shopping Bag&quot; the /cart page is showing &quot;There are no items in your cart. &quot;.</p>&#xA;<p>I have checked the dev tools -&gt; console, i am getting <code>[GraphQL error]: Message: Cannot query field &quot;errors&quot; on type &quot;CartItemInterface&quot;., Location: [object Object], Path: undefined</code></p>&#xA;<p>API : <a href=""https://testpwa.magento.com:8530/graphql?query=query+GetCartDetails%28%24cartId"" rel=""nofollow noreferrer"">https://testpwa.magento.com:8530/graphql?query=query+GetCartDetails%28%24cartId</a></p>&#xA;<p><code>dev-tools-&gt; network- &gt; Fetch/xhr -&gt; preview &quot;errors: [{message: &quot;Cannot query field &quot;errors&quot; on type &quot;CartItemInterface&quot;.&quot;,…}]&quot;</code></p>&#xA;<p><code>dev-tools-&gt; network- &gt; Fetch/xhr -&gt; response &quot;{&quot;errors&quot;:[{&quot;message&quot;:&quot;Cannot query field &quot;errors&quot; on type &quot;CartItemInterface&quot;.&quot;,&quot;extensions&quot;:{&quot;category&quot;:&quot;graphql&quot;},&quot;locations&quot;.</code></p>&#xA;",17921164,,18102554,2022-08-30 12:07:43,2022-08-30 12:07:43,Magento PWA studio Cart page graph-ql error,<graphql><progressive-web-apps><magento2.4><venia><pwa-studio>,0,1,0,2022-08-29 14:18:02
73533854,1,,,0,9,"<p>Is it possible to use Smarts Query (<a href=""https://apollo.vuejs.org/api/smart-query.html"" rel=""nofollow noreferrer"">https://apollo.vuejs.org/api/smart-query.html</a>) for graphGL mutations?</p>&#xA;",924485,,,,2022-08-29 19:37:11,Smart query VueJS apolloJS for mutation,<javascript><vuejs2><vue-apollo>,0,0,0,2022-08-29 19:37:11
73548289,2,,65475413,0,,"<p>This isn't answering your question completely, but shows the number of issues in a repository created on or before a particular date:</p>&#xA;<pre><code>query MyQuery {&#xA;  search(query: &quot;org:isaacs repo:github created:&lt;=2020-10-12&quot;, type: ISSUE) {&#xA;        issueCount&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>For more things that can be used with <code>search(query)</code>, see the <a href=""https://docs.github.com/en/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax"" rel=""nofollow noreferrer"">search syntax docs</a>.</p>&#xA;",4410590,,,,2022-08-30 20:46:09,"",,0,0,0,2022-08-30 20:46:09
73549141,1,73550909,,2,30,"<p>I have a graphQL query that looks like this:</p>&#xA;<pre><code>$query = &lt;&lt;&lt;'JSON'&#xA;query{&#xA;   mainProducts(where:{productType:{eq:2}}) {&#xA;       name, productID&#xA;   }&#xA;}&#xA;JSON;&#xA;$variables = '';&#xA;&#xA;$json = json_encode(['query' =&gt; $query, 'variables' =&gt; $variables]);&#xA;&#xA;$chObj = curl_init();&#xA;curl_setopt($chObj, CURLOPT_URL, ‘https://whateverurlitis.com’);&#xA;curl_setopt($chObj, CURLOPT_RETURNTRANSFER, true);    &#xA;curl_setopt($chObj, CURLOPT_CUSTOMREQUEST, 'POST');&#xA;curl_setopt($chObj, CURLOPT_HEADER, true);&#xA;curl_setopt($chObj, CURLOPT_VERBOSE, true);&#xA;curl_setopt($chObj, CURLOPT_POSTFIELDS, $json);&#xA;curl_setopt($chObj, CURLOPT_HTTPHEADER,&#xA;     array(&#xA;            'Content-Type: application/json;charset=utf-8',&#xA;            'Authorization: bearer '.MYTOKEN &#xA;        )&#xA;    ); &#xA;&#xA;$response = curl_exec($chObj);&#xA;echo $response;&#xA;&#xA;</code></pre>&#xA;<p>My issue is, at the moment I need to replace the query parameter with a variable to make it dynamic, and the variable can be either a number or array of numbers and I would need to loop them.</p>&#xA;<p>Could someone please enlighten me on how to replace the number 2 for <code>productType</code> with a variable?</p>&#xA;",16774283,,1594915,2022-08-31 04:35:37,2022-08-31 04:35:37,How to create a dynamic GraphQL query using variables in PHP?,<php><curl><graphql>,1,0,0,2022-08-30 22:39:49
73550909,2,,73549141,0,,"<p>First of all, there's no need to differentiate between <code>either a number or array of numbers</code>. If it's just one number, you could just pass an array with one number. This will make your schema simpler.</p>&#xA;<p>In order to add dynamic variables to the query, you'll need to redo your query to allow passing variables. The following should do the trick:</p>&#xA;<pre><code>query MainProducts($productTypes: [Int!]!) {&#xA;   mainProducts(where:{productType:{eq:$productTypes}}) {&#xA;       name, productID&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>This way, you'll be able to pass <code>productTypes</code> variable of type <code>[Int!]!</code>, which is an array of integers.</p>&#xA;<p>Now, all that's left is to pass product types IDs to the query as a variable:</p>&#xA;<pre><code>$variables = [1,2,3];&#xA;</code></pre>&#xA;<p>You can read more about passing arguments to a query <a href=""https://graphql.org/graphql-js/passing-arguments/"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;",1594915,,,,2022-08-31 04:35:10,"",,0,2,0,2022-08-31 04:35:10
73552119,1,,,1,138,"<p>I have two queries, one for fetching automatic discounts and other for fetching code discounts of a shopify store.&#xA;So is there a way that I can fetch both the discounts on a single query. Also we are letting users search for their discounts by title, so is there any query that returns data based on discount title because I have seen that in products or collections inside the query we can use:</p>&#xA;<pre><code>products(first: 10, query: &quot;title:*searched_text*&quot;)&#xA;</code></pre>&#xA;<p>These are my queries:</p>&#xA;<pre><code> # for code discounts&#xA;query_1 = '''&#xA;    {&#xA;      codeDiscountNodes (first:10,query:&quot;status:active&quot;){&#xA;          edges {&#xA;          node {&#xA;            id&#xA;            codeDiscount {&#xA;              __typename&#xA;              ... on DiscountCodeBxgy {&#xA;              status&#xA;              title&#xA;            }&#xA;            ... on DiscountCodeBasic {&#xA;              status&#xA;              title&#xA;            }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;    '''&#xA;    &#xA;    # for automatic discounts&#xA;    query_2 = '''&#xA;    {&#xA;    automaticDiscountNodes (first: 10) {&#xA;      edges {&#xA;        node {&#xA;          id&#xA;          automaticDiscount {&#xA;            __typename&#xA;            ... on DiscountAutomaticBxgy {&#xA;              status&#xA;              title&#xA;            }&#xA;            ... on DiscountAutomaticBasic {&#xA;              status&#xA;              title&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;     }&#xA;    }&#xA;    '''&#xA;</code></pre>&#xA;",19884892,,19884892,2022-08-31 09:38:48,2022-09-02 15:57:55,Shopify Discounts GraphQL API,<graphql><shopify>,1,0,0,2022-08-31 07:12:04
73556267,1,,,0,24,"<p>I'm trying to get an ID of an HTML element (id=&quot;1&quot;) and pass it to a graphql mutation. The issue is that no matter what I do, the argument is always nulled and I get a graphql error stating expecting ID! but found null.</p>&#xA;<p>Here's the mutation:</p>&#xA;<pre><code>const T_TOGGLE = gql`&#xA;    mutation tToggle($idx: ID!) {&#xA;        tToggle(t_id: $idx)&#xA;    }`;&#xA;</code></pre>&#xA;<p>The declaration:</p>&#xA;<pre><code> const [tToggle] = useMutation(T_TOGGLE, {variables: {t_id: idx}});&#xA;</code></pre>&#xA;<p>and when the onChange event happens, it executes this code:</p>&#xA;<pre><code>const handleChange = (event) =&gt; {&#xA;    const idx = event.target.id;&#xA;&#xA;     tToggle({variables: {t_id: idx}});&#xA;};&#xA;</code></pre>&#xA;<p>I've tried a bunch of things, and I can't seem to figure this out. Any ideas?</p>&#xA;<p>Here's the error I'm getting:</p>&#xA;<pre><code>[GraphQL error]: Message: Variable &quot;idx&quot;: Expected non-null, found null.&#xA;</code></pre>&#xA;",15014860,,15014860,2022-08-31 13:45:28,2022-08-31 13:58:25,"graphql in react, argument always null",<node.js><reactjs><graphql>,1,3,0,2022-08-31 12:58:53
73569891,1,73680434,,0,607,"<p>Currently I am working on a feature that on button click a metafield gets updated. To verify that the metafield isn't full, I send a GraphQL query to look if the metafield is blank or full.</p>&#xA;<p>But now comes the error: It says &quot;Variable id of type ID! was provided invalid value&quot;. I don't know what to do, to fix this error.</p>&#xA;<p>That is the GraphQL query:</p>&#xA;<pre><code>export const VIEW_PRODUCT_METAFIELD = `&#xA;query VIEW_METAFIELD($id: ID!){&#xA;  myProduct: product(id: $id) {&#xA;    metafield(namespace:&quot;custom&quot;, key:&quot;myfield&quot;){&#xA;      namespace&#xA;      key&#xA;      value&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;}&#xA;`&#xA;</code></pre>&#xA;<p>My code is:</p>&#xA;<pre><code>var shopifyId = &quot;gid://shopify/Product/&quot; + product_id;&#xA;&#xA;      var isFull = await client.query({&#xA;        data: {&#xA;          query: VIEW_PRODUCT_METAFIELD,&#xA;          variables: {&#xA;            input: {&#xA;              id: shopifyId &lt;=== Here occurs the error&#xA;            }&#xA;          }&#xA;        }&#xA;      });&#xA;&#xA;</code></pre>&#xA;<p>I made a second version but neither of both work:</p>&#xA;<pre><code>      var isFull = await client.query({&#xA;        data: {&#xA;          query: VIEW_PRODUCT_METAFIELD,&#xA;          variables: {&#xA;            input: {&#xA;              id: `gid://shopify/Product/${product_id}` &lt;=== Here occurs the error&#xA;            }&#xA;          }&#xA;        }&#xA;      });&#xA;&#xA;</code></pre>&#xA;<p>It would very help me if anyone has a solution for this.</p>&#xA;",19393115,,,,2022-09-11 15:18:58,Variable $id of type ID! was provided invalid value | Graphql API | Shopify | Node.js,<node.js><graphql><shopify><shopify-api>,2,0,0,2022-09-01 13:08:48
73573606,2,,73569891,1,,"<p>Can't speak for your code but the code that works 100% of the time for me looks like this:</p>&#xA;<pre><code>query($id: ID!) {&#xA;  product(id: $id) {&#xA;   id&#xA;   title&#xA;   metafield(namespace:&quot;custom&quot;, key:&quot;fizzbuzz&quot;) {&#xA;     value&#xA;   }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>with data:</p>&#xA;<pre><code>{&#xA;  &quot;id&quot;: &quot;gid://shopify/Product/6698599021234&quot;&#xA;}&#xA;</code></pre>&#xA;",210841,,,,2022-09-01 17:53:50,"",,0,5,0,2022-09-01 17:53:50
73582243,1,73648948,,0,31,"<p>I have created the schema.graphql file in PHP using the following code:</p>&#xA;<pre><code>$data = SchemaPrinter::doPrint($schema);&#xA;file_put_contents('/var/cache/Graphql/schema.graphql', $data);&#xA;</code></pre>&#xA;<p>Now I want to create new schema using this file content. How to achieve this?</p>&#xA;",19601405,,,,2022-09-08 12:14:52,How to generate GraphQL Schema from schema.graphql file in PHP,<php><symfony><graphql>,1,0,0,2022-09-02 12:00:18
73585245,2,,73552119,0,,"<p>Welcome to Stack Overflow!</p>&#xA;<blockquote>&#xA;<p>...is there a way that I can fetch both the discounts on a single query?</p>&#xA;</blockquote>&#xA;<p><strong>Yes</strong>, and there are two ways to do this:</p>&#xA;<p>First, in GraphQL you can bundle queries together into a single string like so:</p>&#xA;<pre><code>{&#xA;  codeDiscountNodes(first:10) {&#xA;    edges {&#xA;      node { id }&#xA;    }&#xA;  }&#xA;  automaticDiscountNodes(first:10) {&#xA;    edges {&#xA;      node { id }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Results in:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;codeDiscountNodes&quot;: {&#xA;      &quot;edges&quot;: [&#xA;        {&#xA;          &quot;node&quot;: { &quot;id&quot;: &quot;gid://shopify/DiscountCodeNode/10...&quot; }&#xA;        }&#xA;      ]&#xA;    },&#xA;    &quot;automaticDiscountNodes&quot;: {&#xA;      &quot;edges&quot;: [&#xA;        {&#xA;          &quot;node&quot;: { &quot;id&quot;: &quot;gid://shopify/DiscountAutomaticNode/10...&quot; }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><strong>Alternatively</strong>, <a href=""https://shopify.dev/api/admin-graphql/2022-07/queries/discountNodes"" rel=""nofollow noreferrer"">the shopify API</a> provides a general <code>discountNodes</code> endpoint which you can use to request all your discounts together.</p>&#xA;<pre><code>{&#xA;  discountNodes(first:10) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This approach is more efficient than combining the two queries (check out the <code>extensions.cost.actualQueryCost</code> for each of these solutions).</p>&#xA;<blockquote>&#xA;<p>...is there any query that returns data based on discount title?</p>&#xA;</blockquote>&#xA;<p><strong>No</strong>, it does not appear like this API allows you to search by title. You can find the list of query filter parameters in <a href=""https://shopify.dev/api/admin-graphql/2022-07/queries/discountNodes#argument-discountnodes-query"" rel=""nofollow noreferrer"">the documentation.</a>.</p>&#xA;",1828709,,,,2022-09-02 15:57:55,"",,0,0,0,2022-09-02 15:57:55
73587077,1,,,0,19,"<p>I'm trying to get information from GitHub using GraphQL, on what pull requests aren't released - but are merged.</p>&#xA;<p>What queries I actually got:</p>&#xA;<pre><code>// for getting latest release name&#xA;query {&#xA;    repository(name: &quot;${project.name}&quot;, owner: &quot;${project.owner}&quot;) {&#xA;        latestRelease {&#xA;            name&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;&#xA;// getting PRs (main struggle)&#xA;query {&#xA;    repository(name: &quot;${project.name}&quot;, owner: &quot;${project.owner}&quot;) {&#xA;        pullRequests(last: 100, baseRefName: &quot;${project.branch}&quot;, states: MERGED) {&#xA;            nodes {&#xA;                title&#xA;                number&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>And, of course, not everything is as I would like it to be, because I only collect the last 100 PRs for a given branch.</p>&#xA;<p>My case with the repo causes some PRs to be merged before the release is set, but aren't in the release itself. &quot;Thanks to this&quot;, therefore, I can't, for example, base on the time I would put in <code>after</code>, which I would take from the query:</p>&#xA;<pre><code>latestRelease {&#xA;    name&#xA;    createdAt &lt;-- added&#xA;}&#xA;</code></pre>&#xA;<p>Any ideas for something like this to help me achieve my goal?&#xA;(A pseudo argument, because I don't have an idea for it yet. Unfortunately, the github documentation has no such argument/similar.)</p>&#xA;<pre><code>pullRequests(...previous arguments, notIn: &quot;${lastReleaseName}&quot;)&#xA;</code></pre>&#xA;",5441779,,5441779,2022-09-02 20:24:34,2022-09-02 20:24:34,"Find PRs which were merged to branch, but aren't yet in any release",<github><graphql>,0,0,0,2022-09-02 19:15:46
73587316,1,,,0,101,"<p>The query is :</p>&#xA;<pre><code>query profile(&#xA;   $fields: [String!]!&#xA;    ){&#xA;    fetchProfile(&#xA;       fields: $fields&#xA;     ){&#xA;       data&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>and Query Variables is:</p>&#xA;<pre><code>{&quot;fields&quot;: [&quot;Total&quot;,&quot;Safe&quot;,&quot;Eco&quot;]}&#xA;</code></pre>&#xA;<p>When i try to Build , i get</p>&#xA;<pre><code>Error: Variable `fields` of type `[String!]!` used in position expecting type `String!`&#xA;</code></pre>&#xA;<p><strong>Footnote:</strong>&#xA;I am sure that in my fetchProfile has [String!]! field. In GraphQL playground, i can get data.</p>&#xA;",14858924,,,,2022-09-02 19:43:48,Why i can't use String array parameter in Graphql query Android/kotlin,<android><graphql><apollo-android><apollo-kotlin>,0,1,0,2022-09-02 19:43:48
73588910,1,,,0,34,"<p>I know graphql can use <code>resolver</code> to get the real value of a field, but how to decide the right level of the field?</p>&#xA;<p>for example, I get a scheme like this:</p>&#xA;<pre><code>type Query {&#xA;  product(productId: String): {&#xA;    id:String&#xA;    title: String&#xA;    price: Float&#xA;    variant: {&#xA;        id: String&#xA;        title: String&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Assuming the request just need <code>title</code>, <code>variant</code>'s <code>title</code>,&#xA;if I write <code>resolver</code> for the whole product like below, there is the <code>price</code> field not use but I read it from database.This results in unnecessary database IO.</p>&#xA;<pre><code>select * from product_table where id = productId&#xA;</code></pre>&#xA;<p>However, if I write <code>resolver</code> for each single field like below, It's a large work and not elegant design.</p>&#xA;<pre><code>// title resolver&#xA;select title from product_table where id = productId&#xA;&#xA;// price resolver&#xA;select price from product_table where id = productId&#xA;</code></pre>&#xA;<p>It's the problem of graphql and is there any way to solve it?</p>&#xA;",13983870,,,,2022-09-03 00:32:33,will graphql cause more database IO and how to resolve it?,<graphql><graphql-js>,0,0,0,2022-09-03 00:32:33
73595742,2,,73591038,0,,"<p>The issue here is that <code>restaurants</code> is no longer an array after you have set the server response. It is an object. An object does not define the function <code>map</code>.</p>&#xA;<p>You can see this in your log message that <code>restaurants</code> is initially an empty array, but after you call <code>setRestaurants(data)</code> it is an object.</p>&#xA;<p>Judging from the object itself and the properties that you are accessing inside the render function, you actually want to access the <code>type</code> property of the object <code>data</code>. The <code>type</code> of the server response is an actual array. Each object inside this array defines the properties that you are accessing, i.e. name, genre, dishes...</p>&#xA;<p>Thus, you could change your code to the following:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>then((data) =&gt; setResturants(data.type))&#xA;</code></pre>&#xA;",14969281,,,,2022-09-03 22:28:23,"",,0,0,0,2022-09-03 22:28:23
73610475,1,,,0,35,"<p>With MongoDBAtlas I am trying to query products in my database which are greater than a certain price. Here is my query:</p>&#xA;<pre><code>query findProducts{&#xA;  product(price_gt: 2000)&#xA;  {&#xA;            id,&#xA;            price&#xA;          }&#xA;    }&#xA;</code></pre>&#xA;<p>Here is the structure of the query:</p>&#xA;<pre><code>product(query: ProductQueryInput): Product&#xA;</code></pre>&#xA;<p>Here is the relevant extract of my GraphQL schema:</p>&#xA;<pre><code>input ProductQueryInput {&#xA;    price_gt: String&#xA;}&#xA;</code></pre>&#xA;<p>When I run the code I get the error:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: null,&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Unknown argument \&quot;price_gt\&quot; on field \&quot;product\&quot; of type \&quot;Query\&quot;.&quot;,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 33,&#xA;          &quot;column&quot;: 11&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;",18382164,,,,2022-09-05 15:46:41,"GraphQL Unkown argument ""price_gt"" on field of type Query",<mongodb><graphql><mongodb-atlas>,1,0,0,2022-09-05 13:52:03
73618665,1,,,0,51,"<p>Is there any way to have intellisence/autocomplete on GraphQl queries, when using nuxt-graphql-client in VS CODE?</p>&#xA;<p><a href=""https://i.stack.imgur.com/pcS2W.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pcS2W.png"" alt=""enter image description here"" /></a></p>&#xA;",3329110,,,,2022-09-09 12:33:42,Autocomplete on GraphQl query with nuxt-graphql-client,<visual-studio-code><graphql><nuxt.js><intellisense>,1,1,0,2022-09-06 08:03:22
73625792,1,,,0,43,"<p>How can i solve this problem with complex searching in products?</p>&#xA;<p>This is what i have now as a standard get products and search on them.</p>&#xA;<pre><code>query getProducts($limit: Int, $offset: Int, $searchQuery: String) {&#xA;  products_products(limit: $limit, offset: $offset, where: {_or: [{title: {_ilike: $searchQuery}}, {shortDescription: {_ilike: $searchQuery}}], active: {_eq: true}}) {&#xA;    __typename&#xA;    id&#xA;    shortDescription&#xA;    title&#xA;    likes {&#xA;      userId&#xA;    }&#xA;    images(where: {main: {_eq: true}}) {&#xA;      image&#xA;    }&#xA;    categories {&#xA;      category {&#xA;        title&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>i have products table, categories table, join table(productId, categoryId), later on there would be reviews table, wishlist table</p>&#xA;<ol>&#xA;<li>how to show products only in any category (record in join table)?</li>&#xA;<li>how to show products with reviews 3.5+ ?</li>&#xA;</ol>&#xA;<p>You know how it is with complex filtration.</p>&#xA;<p>Can someone show me how it could be done?&#xA;Lastly .. im using flutter with optimistic results, so thats why i chose this structure of query. it makes sense when &quot;replicating&quot; the state of wishlist.</p>&#xA;",8227273,,,,2022-09-06 17:38:33,Hasura complex search of products,<graphql><hasura>,1,1,0,2022-09-06 17:27:36
73627736,1,,,0,29,"<p>I'm trying to use the GitHub API to analyse a large repository.&#xA;For that I want to get the number of commits per user and per year to build a table that looks like this:</p>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th style=""text-align: left;"">user</th>&#xA;<th style=""text-align: center;"">year1_commits</th>&#xA;<th style=""text-align: right;"">year2_commits</th>&#xA;<th style=""text-align: right;"">...</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td style=""text-align: left;"">abc</td>&#xA;<td style=""text-align: center;"">500</td>&#xA;<td style=""text-align: right;"">700</td>&#xA;<td style=""text-align: right;"">...</td>&#xA;</tr>&#xA;<tr>&#xA;<td style=""text-align: left;"">ghf</td>&#xA;<td style=""text-align: center;"">0</td>&#xA;<td style=""text-align: right;"">700</td>&#xA;<td style=""text-align: right;"">...</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div>&#xA;<p>I fetched the list of all contributors using the <code>/repos/{owner}/{repo}/contributors</code> API, however the only way I found so far to fetch yearly contributions is by using this GraphQL:</p>&#xA;<pre><code>query { &#xA;    user(login: &quot;${username}&quot;) {&#xA;        name&#xA;        email&#xA;        createdAt&#xA;        contributionsCollection(from: &quot;${year}-01-01T00:00:00Z&quot;, to: &quot;${year}-12-31T00:00:00Z&quot;) {&#xA;        commitContributionsByRepository(maxRepositories: 100) {&#xA;            repository {&#xA;            nameWithOwner&#xA;            }&#xA;            contributions {&#xA;            totalCount&#xA;            }&#xA;        }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>The problem with this approach is that it requires fetching the data for each year individually, hence increasing the number of API calls required.</p>&#xA;<p>Is there a better way to get this information?</p>&#xA;",372086,,372086,2022-09-06 21:13:16,2022-09-06 21:13:16,Use Github API to fetch number of commits per year per user,<github><graphql><github-api>,0,0,0,2022-09-06 21:05:07
73628780,2,,73233900,2,,"<p>I think that, rather than attempting to <code>#[instrument]</code> the handler yourself, you should use the <a href=""https://docs.rs/async-graphql/4.0.12/async_graphql/extensions/struct.Tracing.html"" rel=""nofollow noreferrer""><code>Tracing</code> extension</a>. This will put a span around each entry point to the schema, which you can then see whenever a tracing event is emitted from a resolver.</p>&#xA;<p>You already have the <code>&quot;tracing&quot;</code> feature, so you'll want to add these lines:</p>&#xA;<pre class=""lang-rust prettyprint-override""><code>use async_graphql::extensions::Tracing;&#xA;&#xA;let schema = Schema::build(QueryRoot, EmptyMutation, EmptySubscription)&#xA;    .data(StarWars::new())&#xA;    .extension(Tracing) // Add this line&#xA;    .finish();&#xA;</code></pre>&#xA;<p>I put in the line <code>tracing::info!(&quot;Human::name&quot;);</code> in the <code>Human::name</code> resolver in the StarWars data, and got out this log line when querying it (using <code>tracing-subcriber::fmt</code>):</p>&#xA;<pre><code>INFO request:execute:field{path=hero parent_type=QueryRoot return_type=Character!}:field{path=hero.name parent_type=Character return_type=String!}: starwars::model: Human::name&#xA;</code></pre>&#xA;",11406797,,,,2022-09-06 23:59:43,"",,0,0,0,2022-09-06 23:59:43
73636672,1,,,0,341,"<p>I have an extremely large selection of products in a collection (140,000), to get the data of 250 is fine but I need to get a list of tags for 140,000 products, I have created a bulkOperationRunQuery to get the data. Here is the query I use to run</p>&#xA;<pre><code>mutation {&#xA; bulkOperationRunQuery(&#xA;  query: &quot;&quot;&quot;&#xA;  {&#xA;   products{&#xA;    edges{&#xA;      node{&#xA;        id&#xA;        tags&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;   &quot;&quot;&quot;&#xA; ) {&#xA;bulkOperation {&#xA;  id&#xA;  status&#xA;}&#xA;userErrors {&#xA;  field&#xA;  message&#xA;}&#xA;}}&#xA;</code></pre>&#xA;<p>This Works but takes far to long to process, how can I make this quicker is there a set limit on the request</p>&#xA;",14400111,,,,2022-09-07 15:10:30,Get Product Data from shopify GraphQL for over 10000 Products,<rest><graphql><shopify><shopify-api>,1,6,0,2022-09-07 13:49:27
73645524,2,,73644990,0,,"<p>Uh. Silly error:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>      graphqlOperation(requestApproval),&#xA;      {&#xA;        input: {id}&#xA;      }&#xA;    );  &#xA;</code></pre>&#xA;<p>Should be:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>      graphqlOperation(requestApproval, // &lt;&lt; move opening bracket&#xA;        {&#xA;        input: {id}&#xA;        }&#xA;      ) // move bracket&#xA;    );  &#xA;</code></pre>&#xA;",11664580,,,,2022-09-08 07:55:34,"",,0,0,0,2022-09-08 07:55:34
73647339,2,,71952373,0,,"<p>If it is for Shopify, you should definitely check their documentation about pagination: <a href=""https://shopify.dev/api/usage/pagination-graphql"" rel=""nofollow noreferrer"">https://shopify.dev/api/usage/pagination-graphql</a></p>&#xA;<p>You can use a &quot;while loop&quot; to iterate until a condition is met, in this case when &quot;hasNextPage&quot; is false. Here is an example of how I get all the products from a collection:</p>&#xA;<pre><code>//Query&#xA;const getProdCollection =&#xA;  `query nodes($ids: [ID!]!, $cursor: String) {&#xA;    nodes(ids: $ids) {&#xA;      ... on Collection {&#xA;        id&#xA;        &#xA;        products(first: 50, after: $cursor) {&#xA;          pageInfo {&#xA;            hasNextPage&#xA;            endCursor&#xA;          }&#xA;          edges {&#xA;           cursor&#xA;            node {&#xA;              title&#xA;              handle&#xA;              id&#xA;              descriptionHtml&#xA;              &#xA;            }&#xA;            &#xA;          }&#xA;    &#xA;      }&#xA;      &#xA;    }&#xA;  }&#xA;}`&#xA;&#xA;&#xA;&#xA;app.post(&quot;/api/getcollection&quot;, async (req, res) =&gt; {&#xA;    const session = await Shopify.Utils.loadCurrentSession(&#xA;      req,&#xA;      res,&#xA;      app.get(&quot;use-online-tokens&quot;)&#xA;    );&#xA;&#xA;if (!session) {&#xA;      res.status(401).send(&quot;Could not find a Shopify session&quot;);&#xA;      return;&#xA;    }&#xA;&#xA;    const client = new Shopify.Clients.Graphql(&#xA;      session.shop,&#xA;      session.accessToken&#xA;    );&#xA;&#xA;    //Set cursor to null for first iteration&#xA;    let cursor = null;&#xA;    let allData = [];&#xA;&#xA;    while (true) {&#xA;      // place you looping request here&#xA;      let prodCollection = await client.query({&#xA;        data: {&#xA;          query: getProdCollection,&#xA;          variables: {&#xA;            ids: [req.body['data']],&#xA;            cursor: cursor&#xA;            &#xA;          },&#xA;        },&#xA;      });&#xA;&#xA;&#xA;      //update nextPage and curpor&#xA;      let nextPage = prodCollection.body.data.nodes[0].products.pageInfo.hasNextPage;&#xA;      cursor = prodCollection.body.data.nodes[0].products.pageInfo.endCursor;&#xA;      let myProductData = prodCollection.body.data.nodes[0].products.edges;&#xA;      allData = allData.concat(myProductData);&#xA;&#xA;&#xA;      //Finish the loop here&#xA;      if (nextPage == false) {&#xA;        break;&#xA;&#xA;      }&#xA;    }&#xA;&#xA;    //send back data&#xA;    res.send(allData);&#xA;  });&#xA;</code></pre>&#xA;",13287781,,,,2022-09-08 10:09:10,"",,0,0,0,2022-09-08 10:09:10
73665565,1,,,0,11,"<p>This is the query:</p>&#xA;<pre><code>    const { result } = useQuery(&#xA;      gql`&#xA;        query RatingHistory(&#xA;          $ratingHistoryFilter: userRatingHistoryFilterInput!&#xA;          $id: String!&#xA;        ) {&#xA;          getUser(_id: $id) {&#xA;            ratingHistory(ratingHistoryFilter: $ratingHistoryFilter) {&#xA;              date&#xA;              rating&#xA;            }&#xA;          }&#xA;        }&#xA;      `,&#xA;      {&#xA;        id: '62c2d4100892074470ca374e',&#xA;        ratingHistoryFilter: {&#xA;          dateFrom: '1994-06-12',&#xA;          dateTo: '2022-07-10',&#xA;          verified: 'false'&#xA;        }&#xA;      }&#xA;    )&#xA;</code></pre>&#xA;<p>I know it's all hardcoded ( just testing for the moment )</p>&#xA;<p>so.. if i do:&#xA;console.log(result.value) =&gt; i got a ref with a array of 4 elements.</p>&#xA;<p>But when I do this:</p>&#xA;<pre><code>const ratingData = computed(() =&gt; result.value?.ratingHistory ?? [])&#xA;    console.log(ratingData.value)&#xA;</code></pre>&#xA;<p>the result is =&gt; [] =&gt; Empty Array</p>&#xA;<p>I'm practically sure that the error is in the name after result.value?..... ?? [] =&gt; ratingHistory must not be correct but I can't hit the right one.</p>&#xA;<p>If you need any extra data like the server query or any other images/code just tell me. Thank you!</p>&#xA;",17655903,,,,2022-09-09 17:21:16,why is this gql apolllo client not working not exrtracting data correctly in the computed( ) from vue 3?,<javascript><vue.js><frontend><apollo-client><gql>,0,0,0,2022-09-09 17:21:16
73680714,2,,73655559,2,,"<p>Type <code>OneCost</code> is a union, meaning it is one of two objects - either <code>FixedCost</code> or <code>VariableCost</code>.&#xA;While the first contains an attribute named <code>fixedCostValue</code>, the second one doesn't, hence the error.</p>&#xA;<p>If you'll check if this attribute exists in the object, it'll pass. for example:</p>&#xA;<pre><code>export const MyComponent = ({&#xA;  cost&#xA;}: Props) =&gt; {&#xA;  if (&quot;fixedCostValue&quot; in cost) {&#xA;    console.log(cost.fixedCostValue);&#xA;  };&#xA;  return null;&#xA;}&#xA;</code></pre>&#xA;",19328934,,,,2022-09-11 16:04:15,"",,0,0,0,2022-09-11 16:04:15
73698499,2,,73692862,0,,"<p>If you want to extract the inner type of a single node, you can do something like <code>NonNullable&lt;AnimalsListQueryResponse['animals']['edges']&gt;[0]</code></p>&#xA;<p>Note that your state indicates an array, not a single element.</p>&#xA;<p>And as mentioned in prev comments, use <a href=""https://www.the-guild.dev/graphql/codegen"" rel=""nofollow noreferrer"">GraphQL Code Generator</a>. You will be amazed what this tool can do for you.</p>&#xA;",19328934,,,,2022-09-13 06:40:24,"",,0,0,0,2022-09-13 06:40:24
73699390,1,,,1,224,"<p>I am building an integration between Shopify and our ERP via the admin API using GraphQL. All is working well except when I try and get the exact prices for an order.</p>&#xA;<p>In the documentation <strong>discountedTotalSet</strong> should be '<em>The total line price after discounts are applied</em>' but I am finding it returns the full price - see examples below.</p>&#xA;<p>Can anyone give me guidance on how to get the API to show the same prices that are on the order? I need this to match exactly line by line. This is the query I am using for the order:</p>&#xA;<pre><code>{&#xA;  node(id: &quot;gid://shopify/Order/4866288156908&quot;) {&#xA;    id&#xA;    ...on Order {&#xA;      name&#xA;      lineItems (first: 50) {&#xA;        edges {&#xA;          node {&#xA;            id&#xA;            quantity&#xA;            sku&#xA;            discountedTotalSet {&#xA;              shopMoney {&#xA;                currencyCode&#xA;                amount&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And this is the result, note amount says 599.00 but that is not correct, see screenshot for the same order from the UI.</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;node&quot;: {&#xA;      &quot;id&quot;: &quot;gid://shopify/Order/4866288156908&quot;,&#xA;      &quot;name&quot;: &quot;AK-1003&quot;,&#xA;      &quot;lineItems&quot;: {&#xA;        &quot;edges&quot;: [&#xA;          {&#xA;            &quot;node&quot;: {&#xA;              &quot;id&quot;: &quot;gid://shopify/LineItem/12356850286828&quot;,&#xA;              &quot;quantity&quot;: 1,&#xA;              &quot;sku&quot;: &quot;AK-A1081&quot;,&#xA;              &quot;discountedTotalSet&quot;: {&#xA;                &quot;shopMoney&quot;: {&#xA;                  &quot;currencyCode&quot;: &quot;AUD&quot;,&#xA;                  &quot;amount&quot;: &quot;599.0&quot;&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  },&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/3Hhu7.png"" rel=""nofollow noreferrer"">Shopify UI screenshot<em>emphasized text</em></a></p>&#xA;",14471424,,,,2022-09-13 09:35:27,Shopify Admin API: How To Get Correct Prices For Discounted Order?,<graphql><shopify><shopify-api>,1,0,0,2022-09-13 07:56:48
73700498,2,,73699390,1,,"<p><code>discountedTotalSet</code> gives you the amount after discounts applied to that particular line. In your example you're applying a discount to the whole order. There is no field, in the <code>lineItem</code> object that will give you the expected value for that line.</p>&#xA;<p>So you have to distribute the whole discount to each single line.&#xA;I had the exact same problem and I had to implement this solution in python, I hope it helps:</p>&#xA;<pre><code>from decimal import Decimal&#xA;&#xA;&#xA;def split_discounts(money, n):&#xA;    quotient = Decimal(round(((money * Decimal(100)) // n) / Decimal(100), 2))&#xA;    remainder = int(money * 100 % n)&#xA;    q1 = Decimal(round(quotient + Decimal(0.01), 2))  # quotient + 0.01&#xA;    result = [q1] * remainder + [quotient] * (n - remainder)&#xA;    return result  # returns an array of discounted amounts&#xA;&#xA;&#xA;def retrieve_shop_money(obj):&#xA;    return Decimal(obj['shopMoney']['amount']) if obj and obj['shopMoney'] and obj['shopMoney']['amount'] else Decimal(&#xA;        0)  # this is just to retrieve the inner shopMoney field&#xA;&#xA;&#xA;def get_line_price(order_node):&#xA;    discount = retrieve_shop_money(order_node[&quot;cartDiscountAmountSet&quot;])&#xA;    non_free_lines = len([1 for item in order_node[&quot;lineItems&quot;][&quot;edges&quot;] if&#xA;                          retrieve_shop_money(item[&quot;node&quot;][&quot;discountedTotalSet&quot;]) &gt; 0])&#xA;&#xA;    if non_free_lines &gt; 0:&#xA;        discounts = split_discounts(discount, non_free_lines)&#xA;    else:&#xA;        discounts = 0 # this was an edge case for me, that you might not consider&#xA;    discounted = 0  &#xA;    for item in order_node[&quot;lineItems&quot;][&quot;edges&quot;]:&#xA;        gross = retrieve_shop_money(item[&quot;node&quot;][&quot;originalTotalSet&quot;])  # THIS IS THE VALUE WITHOUT DISCOUNTS&#xA;        net = retrieve_shop_money(item[&quot;node&quot;][&quot;discountedTotalSet&quot;])&#xA;        if net &gt; 0:  # exluding free gifts&#xA;            net = net - discounts[discounted]  # THIS IS THE VALUE YOU'RE LOOKING FOR&#xA;            discounted = discounted + 1&#xA;&#xA;&#xA;</code></pre>&#xA;<p>So first I retrieve if the whole order was free. This was an edge case that was giving me some issues. In that case I just know that 0 is the answer I want.</p>&#xA;<p>Otherwise with the method <code>split_discounts</code> I calculate each single disount to be applied to the lines. Discounts can be different because if you discount $1 out of 3 items is going to be <code>[0.33,0.33,0.34]</code>. So the result is an array. Then I just loop through the lines and apply the discount if <code>discountedTotalSet</code> is <code>&gt;0</code>.</p>&#xA;<p>Thinking about it, you might also want to be sure that the discount is greater than the value of the line. But that is an edge case that I never encouted, but depends on the kind of discounts you have.</p>&#xA;",343794,,343794,2022-09-13 09:35:27,2022-09-13 09:35:27,"",,0,1,0,2022-09-13 09:22:41
73705185,2,,57820410,1,,"<p><strong>Run multiple updates with different conditions</strong> (V2.10.0)</p>&#xA;<ol>&#xA;<li><a href=""https://github.com/hasura/graphql-engine/releases/tag/v2.10.0"" rel=""nofollow noreferrer"">https://github.com/hasura/graphql-engine/releases/tag/v2.10.0</a></li>&#xA;<li><a href=""https://hasura.io/docs/latest/mutations/postgres/update/#multiple-updates"" rel=""nofollow noreferrer"">https://hasura.io/docs/latest/mutations/postgres/update/#multiple-updates</a></li>&#xA;</ol>&#xA;<pre><code>mutation update_many_articles {&#xA;  update_article_many (&#xA;    updates: [&#xA;      {&#xA;        where: {rating: {_lte: 1}},&#xA;        _set: {is_published: false}&#xA;      },&#xA;      {&#xA;       where: {rating: {_gte: 4}},&#xA;        _set: {is_published: true}&#xA;      }&#xA;    ]&#xA;  ) {&#xA;    affected_rows&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3008370,,,,2022-09-13 14:59:43,"",,0,0,0,2022-09-13 14:59:43
73720742,2,,73720330,0,,"<p>Looks like the issue was that I was not escaping the quotes within my query.</p>&#xA;<p>Funny, the way Stack Overflow formatted my code was the tip off I needed.</p>&#xA;<pre><code>{&#xA;  &quot;query&quot;: &quot;query{ orders(first: 3, after: \&quot;eyJsYXN0X2lkIjo0MzU5OTgzMjY3ODkzLCJsYXN0X3ZhbHVlIjoiMjAyMi0wNS0yMyAxMDozNzoyMy4wMDAwMDAifQ\&quot;) { edges { cursor node { id name legacyResourceId email createdAt processedAt totalPriceSet { shopMoney { amount currencyCode } } totalDiscountsSet { shopMoney { amount currencyCode } } totalRefundedSet { shopMoney { amount currencyCode } } subtotalLineItemsQuantity test } } }}&quot;&#xA;}&#xA;</code></pre>&#xA;",18728267,,,,2022-09-14 17:08:03,"",,0,0,0,2022-09-14 17:08:03
73721476,1,,,0,53,"<p>I'm attempting to test an API from FreeAgent CRM that implements GraphQL.</p>&#xA;<p>I'm struggling to format the request for the following example. <a href=""https://api.freeagent.network/#list-app-fields"" rel=""nofollow noreferrer"">https://api.freeagent.network/#list-app-fields</a></p>&#xA;<p>This is the example of the request:</p>&#xA;<pre><code>query getFields($entity:String,$show_hidden:Boolean) {&#xA;  getFields(entity:$entity,show_hidden:$show_hidden){&#xA;    id&#xA;    name&#xA;    name_label&#xA;    main_type&#xA;    is_required&#xA;    is_visible&#xA;    is_unique&#xA;    default_value&#xA;    catalog_type_id&#xA;    reference_field_id&#xA;    reference_fa_entity_id&#xA;    reference_fa_entity_name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I've converted this to json in order to send it with a cURL request from the command line.</p>&#xA;<p><code>curl -i -H &quot;Authorization: bearer MY_TOKEN&quot; -X POST -d '{&quot;query&quot;: &quot;query getFields($entity:&quot;products&quot;,$show_hidden:false) { getFields(entity:$entity,show_hidden:$show_hidden){ id name name_label main_type is_required is_visible is_unique default_value catalog_type_id reference_field_id reference_fa_entity_id reference_fa_entity_name }}&quot;}' https://freeagent.network/api/graphql</code></p>&#xA;<p>I've attempted to format this various ways, I'm not sure if I'm interpreting the graphql documentation wrong, or if there is something funny happening in this specific API and how it is setup.</p>&#xA;<p>Regardless of the format that I try to send, I get an error that no query string is supplied.</p>&#xA;<pre><code>{&quot;errors&quot;:[{&quot;message&quot;:&quot;Must provide query string.&quot;}]}&#xA;</code></pre>&#xA;<p>I've reached out to the support team, but wanted to cast a broader net so that I can learn more about graphql as I'm sure I'll get a better explanation as to what I'm doing wrong from the SO community.</p>&#xA;",2355051,,,,2022-09-14 19:52:36,GraphQL to CURL example,<curl><graphql>,1,0,0,2022-09-14 18:13:07
73722357,2,,73722245,2,,"<p>You can use the Internationalization API <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl"" rel=""nofollow noreferrer""><code>Intl</code></a> to do just that.</p>&#xA;<p>It would look something like:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const formatter = new Intl.RelativeTimeFormat('en') // specify language here&#xA;console.log(formatter.format(-5, 'minutes')) // 5 minutes ago&#xA;console.log(formatter.format(5, 'months')) // in 5 months&#xA;</code></pre>&#xA;<p>Note that you need to specify the amount of time in English but if you change the language of the formatter, it will adapt the output to the specified language.</p>&#xA;<p>Of course you first need to calculate the amount of time first, but that shouldn't be difficult :)</p>&#xA;",11908145,,,,2022-09-14 19:39:49,"",,0,2,0,2022-09-14 19:39:49
73723035,1,,,0,7,"<p>I have a graphql query that returns a zip file rather than a results..   I am not sure how to capture this to pop up so it can be downloaded.  I have googled this subject to death and not really finding anything.</p>&#xA;<pre><code>function exportAwardsUseQuery() {&#xA;  const apolloExportClient = new ApolloClient({&#xA;    uri: import.meta.env.VITE_EXPORT_URL,&#xA;    cache: new InMemoryCache(),&#xA;  });&#xA;&#xA;  provideApolloClient(apolloExportClient);&#xA;&#xA;  const { result, error, loading, onResult } = useQuery(EXPORT_AWARDS, filterStore.getFilterList);&#xA;&#xA;  onResult((result) =&gt; {&#xA;    const blob = new Blob([result as unknown as Blob], { type: &quot;application/zip&quot; });&#xA;    const link = document.createElement(&quot;a&quot;);&#xA;    link.href = window.URL.createObjectURL(blob);&#xA;    link.download = &quot;export.zip&quot;;&#xA;    link.click();&#xA;  });&#xA;}&#xA;</code></pre>&#xA;<p>onResult never executes..</p>&#xA;<p>I can see the blob in the dev tools network tab. It does not return a result ref, just returns the zip file as a blob.</p>&#xA;",19596181,,,,2022-09-14 20:50:55,Vue 3 Graphql is returning a zip file but cannot access the response,<vuejs3><apollo><apollo-client><vue-apollo>,0,0,0,2022-09-14 20:50:55
73726638,1,,,0,74,"<p>I want to unit test a typescript function that uses apollo/graphql. I have tried several examples that I have found around here, but none of them work for me.&#xA;Given my zero experience testing, from the following simple example, could you give me a solution?</p>&#xA;<pre><code>LIST = gql`&#xA;  {&#xA;    music_list {&#xA;      id title artirst&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;class Music {&#xA;  id: string,&#xA;  title: string,&#xA;  artist: string&#xA;}&#xA;&#xA;&#xA;class MusicService {&#xA;&#xA;  constructor(provider: Apollo) {&#xA;    super(provider, 'music');&#xA;  }&#xA;&#xA;  music_list(): Observable&lt;Array&lt;Music&gt;&gt; {&#xA;    return this.apollo.query({&#xA;      query: LIST,&#xA;    })&#xA;    .pipe(map((res: any) =&gt; res?.data?.music_list.map((r: any) =&gt; new Music(r))))&#xA;    .pipe(catchError((error: any) =&gt; this.Errors(error)));&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>From this code example I want to perform a test for function music_list() of class MusicService. I hope someone can help me.</p>&#xA;<p>Thank you very much. Greetings.</p>&#xA;",9976815,,9976815,2022-09-19 09:37:11,2022-09-19 09:37:11,How to do apollo-angular service testing in angular,<angular><testing><graphql><apollo><apollo-angular>,0,0,0,2022-09-15 06:43:42
73730005,1,73730065,,0,23,"<p>I have a graphql server that is created with .Net Core and there I have a query with an array argument and an integer and when I test it at <code>localhost:####/graphql</code> it works correctly.</p>&#xA;<p>However, when I try to fetch that server with my query, I get an error that says <code>Variable ... is required</code>, even though I am using it.</p>&#xA;<p>My graphql query:</p>&#xA;<pre><code>const kindd = [1,2];&#xA;const typeosQuery_param = `query ($kindd:[Int!]!){&#xA;        typeos(kindd: $kindd,flag:1){&#xA;            kindd&#xA;            name&#xA;            basis&#xA;        }&#xA;    }&#xA;  `&#xA;</code></pre>&#xA;<p>My code in which I consume the server and call the query:</p>&#xA;<pre><code>useEffect(() =&gt; {&#xA;fetch(&quot;https://localhost:0094/graphql/&quot;,{&#xA;    method:&quot;POST&quot;,&#xA;    headers:{&quot;Content-Type&quot;:&quot;application/json&quot;},&#xA;    body: JSON.stringify({query: typeosQuery_param})&#xA;})&#xA;</code></pre>&#xA;<p>Note: the server, the query w/o parameters and the way I fetch the server it's all fine, it makes troubles only when I want to pass a parameter.</p>&#xA;<p>Thank you in advance.</p>&#xA;",17820699,,,,2022-09-15 11:11:19,Reactjs Graphql - variable is required,<reactjs><graphql>,1,0,0,2022-09-15 11:06:07
73733879,2,,73733814,2,,"<p>You can't get the DocumentNode object with the <code>graphql-request</code> module. Please use <code>graphql-tag</code> instead of <code>graphql-request</code>.</p>&#xA;<p>Please reference my answer from this <a href=""https://stackoverflow.com/questions/49047259/how-to-parse-graphql-request-string-into-an-object/73733746#73733746"">link</a>.</p>&#xA;",15377381,,,,2022-09-15 15:34:11,"",,0,0,0,2022-09-15 15:34:11
73746730,1,,,0,13,"<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>export const FILTER_QUERY = gql`&#xA;query collections($id:ID!){&#xA;  collections(&#xA;    where:{id:$id}&#xA;  ){&#xA;     id&#xA;    name&#xA;    symbol&#xA;    description&#xA;    volumes{&#xA;      date&#xA;      price&#xA;    }&#xA;    product(orderBy:id, orderDirection:desc,filter:{price:{gt:10}})&#xA;    {&#xA;      id&#xA;      image&#xA;      tokenID&#xA;      name&#xA;      price&#xA;      owner&#xA;    }&#xA;  }&#xA;}&#xA; &#xA;`;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;&#xA;I don't know to do it from last two day. I tried every things but non it worked. even I tried putting where instead of filter still it does not work.</p>&#xA;",18221306,,,,2022-09-16 14:55:52,How to filter price range in GraphQL (Apollo-Client),<javascript><node.js><reactjs><graphql><apollo-client>,0,0,0,2022-09-16 14:55:52
73747502,1,,,0,28,"<p>here in for loop with other operations ie: searching product, i have added for of loop and mapping product with store in mapping table.&#xA;data size is in thousands.</p>&#xA;<pre><code>for (let store of storesList) {&#xA;  storeProductMappingRepository&#xA;    .findOne({&#xA;      relations: [&quot;store&quot;, &quot;product&quot;],&#xA;      where: {&#xA;        store: store,&#xA;        product: product,&#xA;      },&#xA;    })&#xA;    .then((isMappingAvailable) =&gt; {&#xA;      if (!isMappingAvailable) {&#xA;        let storeProductMapping = new StoreProductMapping();&#xA;        storeProductMapping.price = item.Item_Price;&#xA;        storeProductMapping.store = store;&#xA;        storeProductMapping.product = product;&#xA;        storeProductMappingRepository.save(storeProductMapping);&#xA;      }&#xA;    });&#xA;}&#xA;&#xA;</code></pre>&#xA;",18847392,,,,2022-09-16 16:56:30,typeorm v0.2.22 skips some data to save data in mysql db when running in for loop - NodeJs,<node.js><express><typeorm><typegraphql>,1,0,0,2022-09-16 15:59:52
73751855,1,,,0,41,"<p>Let's say this is my <a href=""/questions/tagged/graphql"" class=""post-tag"" title=""show questions tagged &#39;graphql&#39;"" aria-label=""show questions tagged &#39;graphql&#39;"" rel=""tag"" aria-labelledby=""graphql-container"">graphql</a> query:</p>&#xA;<pre><code>mutation Test ($input: UpdateUserAccountInput!) {&#xA;  updateUserAccount(input: $input) {&#xA;    ... on UpdateUserAccountPayload {&#xA;      userAccount {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I want to modify to have the following fragment:</p>&#xA;<pre><code>... on Error {&#xA;  message&#xA;}&#xA;</code></pre>&#xA;<p>I was able to figure out that I can get AST using <code>parse</code> from <code>graphql</code> package, i.e.</p>&#xA;<pre><code>import {&#xA;  parse,&#xA;  gql,&#xA;} from 'graphql';&#xA;&#xA;parse(gql`&#xA;  mutation Test ($input: UpdateUserAccountInput!) {&#xA;    updateUserAccount(input: $input) {&#xA;      ... on UpdateUserAccountPayload {&#xA;        userAccount {&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`)&#xA;</code></pre>&#xA;<p>Now I am trying to figure out how to add <code>... on Error { message }</code> to this query.</p>&#xA;<p>The problem that I am trying to solve is that my tests sometimes quietly fail because mutation returns an error that I did not capturing. I am extending my GraphQL test client to automatically request errors for every mutation and throw if error is returned.</p>&#xA;<p>I assume there exists some utilities that allow me to inject fields into AST, but so far I was not able to find them.</p>&#xA;",19793686,,,,2022-09-17 03:27:38,How to add a field to a GraphQL document?,<javascript><graphql>,1,2,0,2022-09-17 03:02:37
73762708,2,,72551536,0,,"<p><code>forks.totalCount</code> shows the number of direct forks of this repository. <code>forkCount</code> also includes forks of forks and this number may be bigger</p>&#xA;<p>Credit for the answer goes here: <a href=""https://github.com/orgs/community/discussions/33375#discussioncomment-3671593"" rel=""nofollow noreferrer"">https://github.com/orgs/community/discussions/33375#discussioncomment-3671593</a></p>&#xA;",1297743,,,,2022-09-18 12:13:15,"",,0,0,0,2022-09-18 12:13:15
73763340,1,,,0,14,"<p>I have a search bar for finding products. The problem is I would like to have an access to categories (in the index page (first render)) filtered by <code>tags</code> which comes from graphql query.&#xA;I'd like to fetch <code>all</code> products paginated in home page, but if I click a button which will change the state <code>tags</code> to <code>['all', 'sugar']</code> it should fetch only the products with <code>tags</code> array which contains <code>['all', 'sugar']</code> but the problem is I'd like to fetch all products which have in <code>tags</code> array a value <code>all</code> in the [0] index of this array.&#xA;I got react state:&#xA;<code>const [tags, setTags] = useState(['all']);</code>&#xA;Is it possible to take the first value <code>all</code> from an array <code>['all', 'sugar']</code> and use it in graphql query to fetch all products in the first render?</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const { data, error } = useSWR(&#xA;    [&#xA;      process.env.NEXT_PUBLIC_GRAPHCMS_ENDPOINT,&#xA;      `&#xA;         query getSugars($searchValue: String $skip: Int $tags: [String!]) {&#xA;        sugarsConnection(orderBy: createdAt_DESC, where: {title_contains: $searchValue, tags: $tags}, first: 6, skip: $skip) {&#xA;          edges {&#xA;            node {&#xA;              title&#xA;              tags&#xA;              description {&#xA;                raw&#xA;              }&#xA;              id&#xA;              slug&#xA;              coverImage {&#xA;                url&#xA;              }&#xA;              price&#xA;              brand&#xA;              stock&#xA;              isNewProduct&#xA;              isOnDiscount&#xA;              discountValue&#xA;            }&#xA;          }&#xA;          pageInfo {&#xA;            hasNextPage&#xA;            hasPreviousPage&#xA;            &#xA;          }&#xA;        }&#xA;      }&#xA;      &#xA;      &#xA;      &#xA;  `,&#xA;      searchValue,&#xA;      skip,&#xA;      tags,&#xA;    ],&#xA;    (endpoint, query) =&gt; fetcher(endpoint, query, { searchValue, skip, tags }),&#xA;    {&#xA;      fallbackData: sugars,&#xA;      revalidateOnFocus: true,&#xA;    }&#xA;  );&#xA;</code></pre>&#xA;",16190924,,,,2022-09-18 13:53:45,"Take a value from an array, match it with with the value in array from React State and use it in graphql query",<reactjs><graphql><graphql-js>,0,0,0,2022-09-18 13:53:45
73766718,1,73766786,,0,28,"<p>I have a Graphql schema that looks like this:</p>&#xA;<pre><code>type Mutation {&#xA;  createUploadUrl(&#xA;    input: CreateUploadUrl!&#xA;  ): MyResponse!&#xA;}&#xA;&#xA;input CreateUploadUrl {&#xA;  deploymentId: ID!&#xA;}&#xA;</code></pre>&#xA;<p>I'm new to Graphql and am getting lost when trying to work out what my query should look like when I submit it via fetch:</p>&#xA;<pre><code>fetch('https://example.com', {&#xA;    method: 'POST',&#xA;    headers: {&#xA;        'Content-Type': 'application/json',&#xA;    },&#xA;    body: JSON.stringify({&#xA;        query: `&#xA;            mutation($input: ) {&#xA;               createUploadUrl($input) {&#xA;                 __typename,&#xA;                 // my values I want to retrieve&#xA;                 // ...&#xA;               }&#xA;             }`,&#xA;        variables: {&#xA;            input: {deploymentId: &quot;XXX&quot;}&#xA;        }&#xA;    }),&#xA;})&#xA;    .then((res) =&gt; res.json())&#xA;    .then((result) =&gt; console.log(result));&#xA;</code></pre>&#xA;<p>The above gives me an error: `message: &quot;Syntax Error: Expected Name, found &quot;$&quot;.&quot;</p>&#xA;<p>How am I supposed to specify a query or mutation that requires an object as a variable?&#xA;`</p>&#xA;",272023,,,,2022-09-19 08:39:28,How to specify Graphql mutation with object variable when making Fetch call?,<graphql>,1,0,0,2022-09-18 22:11:36
73768029,1,73783545,,1,64,"<p>I save product ids in a localstorage to be used in recently viewed component.&#xA;My Recently viewed component is below</p>&#xA;<pre><code>import { useQuery } from &quot;@apollo/client&quot;;&#xA;import { getRecentlyViewedProductArr } from &quot;@gb-utils/product/product&quot;&#xA;import { RECENTLY_VIEWED } from &quot;@gb-utils/queries/product&quot;;&#xA;import { useEffect, useState } from &quot;react&quot;;&#xA;&#xA;&#xA;    export default function RecentlyViewed() {&#xA;    &#xA;        const [recentIds, setRecentIds] = useState([])&#xA;    &#xA;        const { loading, error, data } = useQuery(RECENTLY_VIEWED, {&#xA;            variables: { ids: recentIds }&#xA;        })&#xA;    &#xA;        useEffect(() =&gt; {&#xA;            setRecentIds(getRecentlyViewedProductArr())&#xA;        }, []);&#xA;    &#xA;        if (loading) {&#xA;            return 'Loading';&#xA;        }&#xA;    &#xA;        if (error) {&#xA;            return error.message&#xA;        }&#xA;    &#xA;        return (&#xA;            &lt;div&gt;{JSON.stringify(data)}&lt;/div&gt;&#xA;        )&#xA;    }&#xA;</code></pre>&#xA;<p>My question is about how I use get the product from wp-graphql using userQuery with the local storage.</p>&#xA;<p>Currently I am defining a state to store product ids and on mount of the RecentlyViewed component I update the recentIds by getting the data from localstorage. Is there a better way of doing the code above because I feel like it fetching data from wp without or empty recentIds is a problem.</p>&#xA;<p>helper.js</p>&#xA;<pre><code>export const addRecentlyViewedProduct = (productId) =&gt; {&#xA;&#xA;    let recent = getRecentlyViewedProduct()&#xA;&#xA;    if (isEmpty(recent)) {&#xA;        // If recently viewed is empty then we just save the product id&#xA;        saveRecentlyViewedProduct(productId)&#xA;&#xA;        return getRecentlyViewedProduct()&#xA;    }&#xA;&#xA;    // if not empty then we check if product id exist and remove&#xA;    if (recent.includes(productId)) {&#xA;        recent = recent.replace(productId, '')&#xA;    }&#xA;    // Since we remove the product then we Add the product id again&#xA;    recent = &quot;&quot;.concat(productId, '|', recent)&#xA;    recent = recent.replace('||', '|');&#xA;    recent = recent.startsWith('|') ? recent.substring(1) : recent&#xA;    recent = recent.endsWith('|') ? recent.substring(0, recent.length - 1) : recent;&#xA;&#xA;    const limit = 5;&#xA;    let recentProductIds = recent.split('|')&#xA;    if (recentProductIds.length &gt; limit) {&#xA;        recentProductIds = recentProductIds.slice(0, limit)&#xA;    }&#xA;&#xA;    saveRecentlyViewedProduct(recentProductIds.join('|'))&#xA;    return getRecentlyViewedProduct()&#xA;}&#xA;&#xA;export const saveRecentlyViewedProduct = (value) =&gt; {&#xA;    return localStorage.setItem('woo-next-recent-product', value);&#xA;}&#xA;&#xA;export const getRecentlyViewedProduct = () =&gt; {&#xA;&#xA;    const recentProductsStr = localStorage.getItem('woo-next-recent-product')&#xA;    return recentProductsStr&#xA;&#xA;}&#xA;&#xA;export const getRecentlyViewedProductArr = () =&gt; {&#xA;    const recentProductsStr = getRecentlyViewedProduct()&#xA;    if (isEmpty(recentProductsStr)) {&#xA;        return ''&#xA;    }&#xA;&#xA;    let recentProductIds = recentProductsStr.split('|')&#xA;    return Array.from(recentProductIds.slice(1), Number); // get the 2nd to the last element&#xA;}&#xA;</code></pre>&#xA;",4179779,,4179779,2022-09-21 04:04:39,2022-09-21 04:04:39,getting localStorage data so that I can pass it to apollo query variables but skip query if the variable is empty,<reactjs><next.js><wp-graphql>,1,2,0,2022-09-19 03:03:32
73779264,1,,,0,32,"<p>I am trying to query the newly released fossil fuel database API from <a href=""https://fossilfuelregistry.org/api"" rel=""nofollow noreferrer"">https://fossilfuelregistry.org/api</a> with a POST request&#xA;The examples I looked at always specify which keys to return values for but their documentation is limited. I am trying to return all results using an empty dict as the query and get a (404): Not Found error code</p>&#xA;<pre><code>import requests&#xA;import json&#xA;&#xA;####&#xA;&#xA;query = &quot;&quot;&quot;query {}&quot;&quot;&quot;&#xA;&#xA;url = 'https://api.fossilfuelregistry.org/graphql'&#xA;r = requests.post(url, json={'query': query})&#xA;print(r.status_code)&#xA;print(r.text)&#xA;&#xA;json_data = json.loads(r.text)&#xA;</code></pre>&#xA;<p>Thanks for any insights you might give!!</p>&#xA;",2265921,,,,2022-09-19 21:02:20,Python POST request for GraphQL API with no key:value information,<json><python-requests><graphql>,0,0,0,2022-09-19 21:02:20
73782726,1,,,1,109,"<p>Im using NestJS Graphql TypeOrm im trying to run programm but got these error. I did not use any String Module</p>&#xA;<p>If String is exported from a separate @Module, is that module imported within SellModule?&#xA;I can't find String is exported</p>&#xA;<p>Nest can't resolve dependencies of the SellService (SellRepository, ?). Please make sure that the argument String at index [1] is available in the SellModule context.</p>&#xA;<p>Potential solutions:</p>&#xA;<ul>&#xA;<li><p>If String is a provider, is it part of the current SellModule?</p>&#xA;</li>&#xA;<li><p>If String is exported from a separate @Module, is that module imported within SellModule?</p>&#xA;<p>@Module({&#xA;imports: [ /* the Module containing String */ ]&#xA;})</p>&#xA;</li>&#xA;</ul>&#xA;<p>sell.module.ts</p>&#xA;<pre><code>import { Module } from '@nestjs/common'&#xA;import { SellService } from './sell.service'&#xA;import { SellResolver } from './sell.resolver'&#xA;import { TypeOrmModule } from '@nestjs/typeorm'&#xA;import { Sell } from './entities/sell.entity'&#xA;&#xA;@Module({&#xA;  providers: [SellResolver, SellService],&#xA;  imports: [TypeOrmModule.forFeature([Sell])]&#xA;})&#xA;export class SellModule {}&#xA;</code></pre>&#xA;<p>sell.service.ts</p>&#xA;<pre><code>import { Injectable } from '@nestjs/common'&#xA;import { InjectRepository } from '@nestjs/typeorm'&#xA;import {&#xA;  createErrorMessage,&#xA;  deleteErrorMessage,&#xA;  editErrorMessage,&#xA;  existErrorMessage,&#xA;  notFoundMessage,&#xA;  readErrorMessage,&#xA;  userNotMatchDeleteError,&#xA;  userNotMatchEditError&#xA;} from 'src/common/common.constants'&#xA;import { User } from 'src/users/entities/user.entity'&#xA;import { Repository } from 'typeorm'&#xA;import { AllSellOutput } from './dto/all-sell.dto'&#xA;import { CreateSellInput, CreateSellOutput } from './dto/create-sell.dto'&#xA;import { DeleteSellInput, DeleteSellOutput } from './dto/delete-sell.dto'&#xA;import { EditSellInput, EditSellOutput } from './dto/edit-sell.dto'&#xA;import { Sell } from './entities/sell.entity'&#xA;&#xA;@Injectable()&#xA;export class SellService {&#xA;  constructor (&#xA;    @InjectRepository(Sell) private readonly sells: Repository&lt;Sell&gt;,&#xA;    private readonly message: string&#xA;  ) {&#xA;    this.message = 'Зарын'&#xA;  }&#xA;&#xA;  async createSell (&#xA;    createSellInput: CreateSellInput&#xA;  ): Promise&lt;CreateSellOutput&gt; {&#xA;    try {&#xA;      const sell = await this.sells.findOne({&#xA;        where: { title: createSellInput.title }&#xA;      })&#xA;&#xA;      if (sell) {&#xA;        return {&#xA;          ok: false,&#xA;          error: existErrorMessage(this.message)&#xA;        }&#xA;      }&#xA;&#xA;      await this.sells.save(await this.sells.create(createSellInput))&#xA;&#xA;      return {&#xA;        ok: true&#xA;      }&#xA;    } catch {&#xA;      return {&#xA;        ok: false,&#xA;        error: createErrorMessage(this.message)&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;  async allSell (): Promise&lt;AllSellOutput&gt; {&#xA;    try {&#xA;      const sells = await this.sells.find()&#xA;&#xA;      if (!sells) {&#xA;        return {&#xA;          ok: false,&#xA;          error: notFoundMessage(this.message)&#xA;        }&#xA;      }&#xA;&#xA;      return {&#xA;        ok: true,&#xA;        result: sells&#xA;      }&#xA;    } catch {&#xA;      return {&#xA;        ok: false,&#xA;        error: readErrorMessage(this.message)&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>What should I do?</p>&#xA;",20039809,,,,2022-09-20 07:58:31,NestJS Nest can't resolve dependencies Error,<typescript><graphql><nestjs><typeorm>,1,0,0,2022-09-20 07:00:49
73783355,2,,73782726,1,,"<p>NestJS tries to resolve the dependencies it self based on keys, defined in providers. You currently mix JavaScript classes with Nest dependency injection.</p>&#xA;<p>To solve your issue, remove the <code>message</code> from the constructor like:</p>&#xA;<pre><code>export class SellService {&#xA;&#xA;private readonly message = 'Зарын'&#xA;&#xA;  constructor (&#xA;    @InjectRepository(Sell) private readonly sells: Repository&lt;Sell&gt;) {}&#xA;...&#xA;}&#xA;</code></pre>&#xA;<p>Your message is a constant, so you can simply define it as a private readonly message outside the constructor.</p>&#xA;",11067065,,,,2022-09-20 07:58:31,"",,0,0,0,2022-09-20 07:58:31
73795785,1,,,0,31,"<p>In GraphQL should the names of fields in schema(typedef)  and the names of fields in mongoDB model match for a getAll query resolver?</p>&#xA;<p>eg :- product has a field &quot;name&quot; in schema and &quot;title&quot; in model definition.</p>&#xA;<p>model for product :-</p>&#xA;<pre><code>const ProductSchema= new mongoose.Schema ({&#xA;   title:{&#xA;        type : String,&#xA;        required : true&#xA;    }&#xA;);&#xA;</code></pre>&#xA;<p>schema for product :-</p>&#xA;<pre><code>const Schema=buildSchema(`&#xA;type product{&#xA;        _id : String&#xA;        name : String&#xA;    }&#xA;&#xA;&#xA;&#xA;type Query{&#xA;       getAllProducts : [ product ]&#xA;    }&#xA;`);&#xA;</code></pre>&#xA;<p>Query for testing :-</p>&#xA;<pre><code>query{&#xA;getAllProducts{&#xA;    _id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",20048947,,,,2022-09-21 05:34:20,Should names of field in mongoDB model and graphql schema be the same to work?,<graphql><mongoose-schema><express-graphql><graphql-schema>,0,0,0,2022-09-21 05:34:20
73800555,2,,73624686,2,,"<p>The <a href=""https://www.apollographql.com/docs/apollo-server/v2/data/subscriptions/#using-with-middleware-integrations"" rel=""nofollow noreferrer"">docs</a> linked to are for apollo-server v2, which is maintained on the <code>version-2</code> branch of the repo. The default <code>main</code> branch is (at present) used to maintain v3.</p>&#xA;<p>In v2, the method <code>installSubscriptionHandlers</code> exists on the class <code>ApolloServerBase</code> exported from the package <a href=""https://github.com/apollographql/apollo-server/blob/version-2/packages/apollo-server-core/src/ApolloServer.ts#L951"" rel=""nofollow noreferrer"">apollo-server-core</a>.</p>&#xA;",6578424,,,,2022-09-21 12:14:25,"",,0,0,0,2022-09-21 12:14:25
73802982,2,,73713178,0,,"<p>It seems that you are not leveraging graphql given possibilities. This issue would be best fixed on the backend, sou you can query related objects recursively within one query.</p>&#xA;<pre><code>type Factory {&#xA;    id: ID!&#xA;    area: Area&#xA;    etc...&#xA;}&#xA;&#xA;type Area {&#xA;    id: ID!&#xA;    factory_id: ID&#xA;    nodes: [Node]&#xA;    etc...&#xA;}&#xA;&#xA;type Node{&#xA;    id: ID!&#xA;    area_id: ID&#xA;    etc...&#xA;}&#xA;</code></pre>&#xA;<p>But maybe a solution to your problem could be to use queries which return a list of objects and you can use an array of ids as variable.&#xA;Then you could do something like this:</p>&#xA;<pre><code>const { data: areas, } = useQuery(getAreas, {&#xA;    variables: {&#xA;        &quot;factory_ids&quot;: factories?.factories?.map(({id})=&gt;id),&#xA;    },&#xA;    skip: !factories || !factories.factories || factories.factories.length === 0,&#xA;});&#xA;</code></pre>&#xA;",17983349,,,,2022-09-21 14:58:30,"",,0,0,0,2022-09-21 14:58:30
73823570,1,,,0,31,"<p>I need some guidance on how to make a request or query using graphql. I have done similar tasks using JSON, but in this case I am inexperienced using Graphql. I have the body code of the API query that I show below, with the 4 fields that I must pass as dynamic variables in each request. Do you know of any way to do it or some site that you can consult that clearly shows the procedure. Thanks in advance.&#xA;<em>There are different parameters that can be set up in the request:</em></p>&#xA;<pre><code> `checkIn: &quot;2022-09-28&quot;,&#xA; checkOut: &quot;2022-09-29&quot;,&#xA; occupancies: [{ paxes: [{age: 30}, {age: 30}] }],&#xA; hotels: [&quot;1&quot;],` &#xA;</code></pre>&#xA;<p><em>These are the interfaces I defined:</em></p>&#xA;<pre><code>`&#xA;export interface SearchRQ{   &#xA;checkIn:string;&#xA;checkOut:string;&#xA;occupancies: Occupancy[];&#xA;hotels: string[];&#xA;nationality: string&#xA;</code></pre>&#xA;<p>}<code> </code>export interface Occupancy {&#xA;paxes: Pax[];&#xA;}&#xA;export interface Pax {&#xA;age: number;&#xA;}`</p>&#xA;<pre><code>   *And this is a part of the body of the query:*&#xA;&#xA;         &#xA;    ```&#xA;    query {&#xA;    hotelX {&#xA;    search(&#xA;    criteria: { &#xA;    checkIn: &quot;2022-12-28&quot;,&#xA;    checkOut: &quot;2022-12-29&quot;,&#xA;    occupancies: [{ paxes: [{age: 30}, {age: 30}] }],&#xA;    hotels: [&quot;1&quot;,&quot;2&quot;],&#xA;    currency: &quot;EUR&quot;,&#xA;    market: &quot;ES&quot;,&#xA;    language: &quot;es&quot;,&#xA;    nationality: &quot;ES&quot;&#xA;   },&#xA;   settings: {&#xA;    client: &quot;client_demo&quot;,&#xA;    context: &quot;HOTELTEST&quot;,&#xA;    auditTransactions: false,&#xA;    testMode: true,&#xA;    timeout: 25000&#xA;   },&#xA;   filter: {&#xA;    access: {&#xA;      includes: [&quot;0&quot;]&#xA;    }&#xA;   }) {&#xA;       context&#xA;   errors{&#xA;    code&#xA;    type&#xA;    description&#xA;   }&#xA;   warnings{&#xA;    code&#xA;    type&#xA;    description&#xA;   }&#xA;   options {&#xA;    id&#xA;    accessCode&#xA;    supplierCode&#xA;    hotelCode&#xA;    hotelName&#xA;    boardCode&#xA;    paymentType&#xA;    status&#xA;    occupancies {&#xA;      id&#xA;      paxes {&#xA;        age&#xA;      }&#xA;    }&#xA;    rooms {&#xA;      occupancyRefId&#xA;      code&#xA;      description&#xA;      refundable&#xA;      roomPrice {&#xA;        price {&#xA;          currency&#xA;          binding&#xA;          net&#xA;          gross&#xA;             exchange {&#xA;            currency&#xA;             rate&#xA;           }&#xA;         }&#xA;&#xA;         ```&#xA;</code></pre>&#xA;",17333041,,3689450,2022-09-23 06:08:35,2022-09-23 06:08:35,"How to make a request(""query"") to an API in graphql using Typescript in NodeJS",<node.js><typescript><graphql><request>,0,0,0,2022-09-23 06:02:37
73832125,2,,73832124,1,,"<p>Great question.</p>&#xA;<p>Here's how I would start.  I will assume you have setup a database with Products and those Products have a <code>name</code> and a <code>description</code>.</p>&#xA;<p>First - here's how you get all the products (you will be inputting this into the GraphQL playground).:</p>&#xA;<pre><code>query {&#xA;  allProducts {&#xA;    name&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Second - here's how you get a product with a specific name:</p>&#xA;<pre><code>query {&#xA;  allProducts (where: {name: &quot;Nike Air VaporMax&quot;}){&#xA;    name&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Third - here's how to introduce &quot;contains&quot; as in name or description contains &quot;nike&quot;.  The <code>_i</code> suffix means case insensitive.</p>&#xA;<pre><code>query {&#xA;  allProducts (where: {name_contains_i: &quot;nike&quot;}){&#xA;    name&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Fourth - here's how to introduce an OR (note the commas and the container curly brackets):</p>&#xA;<pre><code>query {&#xA;  allProducts (where: {&#xA;    OR: [{description_contains_i:&quot;shoes&quot;}, {name_contains_i:&quot;shoes&quot;}]&#xA;    }&#xA;  )&#xA;    {&#xA;    name&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Fifth - here's how to introduce the AND (same as above, note the comma and the curly brackets):</p>&#xA;<pre><code>query {&#xA;  allProducts (where: {&#xA;    AND: [{description_contains_i:&quot;shoes&quot;}, {name_contains_i:&quot;shoes&quot;}]&#xA;    }&#xA;  )&#xA;    {&#xA;    name&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Sixth - here is how to start introducing variables - we'll use this with a WHERE + OR:</p>&#xA;<pre><code>query ($varTest: String!) {&#xA;  allProducts(&#xA;    where: {&#xA;      OR: [{ description_contains_i: &quot;shoes&quot; }, { name_contains_i: $varTest }]&#xA;    }&#xA;  ) {&#xA;    name&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And !important! for the above, you will need to fill in the Query Variables:</p>&#xA;<pre><code>{&#xA;  &quot;varTest&quot;: &quot;Nike&quot;&#xA;}&#xA;</code></pre>&#xA;<p>In case, you're not familiar with the placement of where to put the Query Variable, it will roughly look like this (look for the second window in which to place the Query Variables.)</p>&#xA;<p><a href=""https://i.stack.imgur.com/NzZ5V.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NzZ5V.png"" alt=""GraphQL Playground with QUERY VARIABLE filled in"" /></a></p>&#xA;<p>Seventh - here is the kicker.  You can optionally name these queries.  The disruption in the pattern consistency threw me off initially.  Let me add it here with a pretty obvious name so you can see it too:</p>&#xA;<pre><code>query THIS_IS_MY_COOL_QUERY_NAME($varTest: String!) {&#xA; allProducts(&#xA;    where: {&#xA;      OR: [{ description_contains_i: &quot;shoes&quot; }, { name_contains_i: $varTest }]&#xA;    }&#xA;  ) {&#xA;    name&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Eight - bonus.  You won't need this BUT I want to introduce it here so it doesn't throw you off in the future.  When you submit the query, you can assign your own name for the returned array of returned objects.  Don't let this previous sentence confuse you, I'll give you examples of the returned array so it's clear.</p>&#xA;<p>Here is the Eight query (don't forget to use a Query Variable as you did in the Seventh example).  I'll add a pretty obvious name directly in the query:</p>&#xA;<pre><code>query THIS_IS_MY_COOL_QUERY_NAME($varTest: String!) {&#xA;  resultsWillBeReturnedAsArrayWithThisName: allProducts(&#xA;    where: {&#xA;      OR: [{ description_contains_i: &quot;shoes&quot; }, { name_contains_i: $varTest }]&#xA;    }&#xA;  ) {&#xA;    name&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The results from previous query (Seventh) will look like this:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;allProducts&quot;: [&#xA;      {&#xA;        &quot;name&quot;: &quot;Air Jordan 1&quot;,&#xA;        &quot;description&quot;: &quot;Wow - there are shoes!&quot;&#xA;      },&#xA;      {&#xA;        &quot;name&quot;: &quot;Nike Blazer Mid&quot;,&#xA;        &quot;description&quot;: &quot;Very nice!&quot;&#xA;      },&#xA;      {&#xA;        &quot;name&quot;: &quot;Shoes&quot;,&#xA;        &quot;description&quot;: &quot;These are shoes!&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But the results from the Eight Query will look like this (notice how the name you introduced will come back to you from GraphQL). :</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;resultsWillBeReturnedAsArrayWithThisName&quot;: [&#xA;      {&#xA;        &quot;name&quot;: &quot;Air Jordan 1&quot;,&#xA;        &quot;description&quot;: &quot;Wow - there are shoes!&quot;&#xA;      },&#xA;      {&#xA;        &quot;name&quot;: &quot;Nike Blazer Mid&quot;,&#xA;        &quot;description&quot;: &quot;Very nice!&quot;&#xA;      },&#xA;      {&#xA;        &quot;name&quot;: &quot;Shoes&quot;,&#xA;        &quot;description&quot;: &quot;These are shoes!&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>That should give you a solid building block to understanding GraphQL.</p>&#xA;",943087,,,,2022-09-23 19:22:28,"",,0,0,0,2022-09-23 19:22:28
73848321,2,,72263805,1,,"<p>I had the same issue (wanted to get the prices) and after investigating in the HAR files that you can get with Chrome, I found out that you get this value from a Javascript file called PdpPlatformRoute.xxx.js</p>&#xA;<p>The steps to get this hash are simply to load the file PdpPlatformRoute.xxx.js, then to parse the file to get an &quot;operationId&quot;.</p>&#xA;<p>If this helps, this is how I did this.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// contentPage is the HTML content of the listing page (e.g. https://www.airbnb.com/rooms/1234567)&#xA;function getPdpPlatformRouteUrl(contentPage) {&#xA;  return 'https://a0.muscache.com/airbnb/static/packages/web/en/frontend/gp-stays-pdp-route/routes/' + `${contentPage}`.match(/(PdpPlatformRoute\.\w+\.\js)/)?.[1];&#xA;}&#xA;&#xA;// textContent is the JS content that you get when you fetch the previously found URL&#xA;function getSha256(textContent) {&#xA;  return `${textContent}`.match(/name:'StaysPdpSections',type:'query',operationId:'(.*)'/)?.[1];&#xA;}&#xA;&#xA;</code></pre>&#xA;",2435635,,,,2022-09-25 22:52:35,"",,0,1,0,2022-09-25 22:52:35
73852333,1,73852417,,0,84,"<p>I'm using <a href=""https://github.com/async-graphql/async-graphql"" rel=""nofollow noreferrer""><code>async-graphql</code></a> and I'm trying to use this struct as <code>SimpleObject</code>:</p>&#xA;<pre class=""lang-rust prettyprint-override""><code>use async_graphql::{CSimpleObject};&#xA;&#xA;#[derive(SimpleObject)]&#xA;struct Player {&#xA;    id: String,&#xA;    created_at: time::OffsetDateTime,&#xA;    email: String,&#xA;}&#xA;</code></pre>&#xA;<p>but I'm getting this error:</p>&#xA;<pre><code>error[E0277]: the trait bound `time::OffsetDateTime: OutputType` is not satisfied&#xA;   |&#xA;50 | #[derive(SimpleObject)]&#xA;   |          ^^^^^^^^^^^^ the trait `OutputType` is not implemented for `time::OffsetDateTime`&#xA;   |&#xA;   = help: the following other types implement trait `OutputType`:&#xA;             &amp;'a [T]&#xA;             &amp;'impl0 T&#xA;             Arc&lt;T&gt;&#xA;             Arc&lt;[T]&gt;&#xA;             BTreeMap&lt;K, V&gt;&#xA;             BTreeSet&lt;T&gt;&#xA;             Cow&lt;'a, T&gt;&#xA;             Edge&lt;Cursor, Node, EdgeFields, Name&gt;&#xA;           and 56 others&#xA;   = note: required because of the requirements on the impl of `OutputType` for `&amp;time::OffsetDateTime`&#xA;   = note: this error originates in the derive macro `SimpleObject` (in Nightly builds, run with -Z macro-backtrace for more info)&#xA;</code></pre>&#xA;<p>What can I do to fix this?</p>&#xA;<p>I tried to search but I cannot understand what to do.</p>&#xA;",10088259,,,,2022-09-26 09:54:12,"How to fix the error ""the trait `OutputType` is not implemented for `time::OffsetDateTime`""?",<rust><async-graphql>,1,0,0,2022-09-26 09:46:34
73856937,1,,,0,31,"<p>Is there any way to reach down into the attributes of an object returned by a query?</p>&#xA;<p>So imagine that I have an object defined as:</p>&#xA;<pre><code>{&#xA;  id: string&#xA;  myCollection(someArgs):collection&#xA;}&#xA;</code></pre>&#xA;<p>where <code>collection</code> is defined as:</p>&#xA;<pre><code>{&#xA;  metaArg1: int,&#xA;  metaArg2: int,&#xA;  ...&#xA;  metaArgn: int,&#xA;  theArray: [objectType]&#xA;}&#xA;</code></pre>&#xA;<p>Now, I have a query like:</p>&#xA;<pre><code>query myQuery{&#xA;  fetchData(){&#xA;    id,&#xA;    myCollection(someArgs){&#xA;      theArray {&#xA;         ...some attribute list&#xA;      }&#xA;    }    &#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Which will return something like this:</p>&#xA;<pre><code>{&#xA;  id: 'id'&#xA;  myCollection: {&#xA;    theArray: [{...}, {...}, {...}]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>If I <em>just</em> want the content of <code>theArray</code>, is there any way I can hoist its value one level up?&#xA;Essentially, I want to end up with:</p>&#xA;<pre><code>{&#xA;  id: 'id'&#xA;  myCollection: [{...}, {...}, {...}] // This would be the value previously inside theArray&#xA;}&#xA;</code></pre>&#xA;<p>Is there any way to rewrite <code>myQuery</code> to accomplish that?</p>&#xA;",1260495,,1260495,2022-09-26 18:05:03,2022-09-26 18:05:03,Hoist child object into parent,<graphql>,0,0,0,2022-09-26 16:09:36
73858340,2,,73857879,0,,"<p><code>updateMany</code> allows you to bulk update all rows matching certain conditions with the same data. It does not help you in this case.</p>&#xA;<p>You could loop over an array of users to update id and email of each of them. Your approach will not work however, as you seem to have two arrays (a list of user IDs and a list of email addresses). However, instead of fixing your code I'd suggest to change the GraphQL interface you've defined.</p>&#xA;<p>Option 1) is close to what you did. You keep a bulk mutation <code>updateUsers</code>, but instead of two lists (a list of user IDs and a list of email addresses), it should accept a list of users, each of them having an user ID and an email address.&#xA;To improve performance you could use <code>Promise.all</code> and not wait for each update to happen, before starting the next one.</p>&#xA;<p>Option 2) is the preferable. Instead of a bulk mutation <code>updateUsers</code>, I would create a mutation <code>updateUser</code> that updates only one user. If client wants to update multiple users in the same request, they can! A single GraphQL request can contain multiple mutations.</p>&#xA;",13416247,,,,2022-09-26 18:20:10,"",,0,0,0,2022-09-26 18:20:10
73879079,2,,73877970,0,,<p>i was able to do it by providing the folder id instead of name</p>&#xA;<pre><code>  $dataar = array(&quot;destinationId&quot; =&gt; &#xA;  &quot;J5RI79oYT8ILx0AQB2ou16VKQgQbgSOmYTxqIIAAdL44EXAAA=&quot;);&#xA;</code></pre>&#xA;,7978219,,,,2022-09-28 09:23:24,"",,0,0,0,2022-09-28 09:23:24
73883840,2,,73572349,1,,"<p>I came up with this which I think should get the custom fields on your board:</p>&#xA;<pre><code>query {&#xA;  node(id: &quot;(my project id)&quot;) {&#xA;    ... on ProjectV2 {&#xA;      items(last: 20) {&#xA;        nodes {&#xA;          id&#xA;          content {&#xA;            ... on Issue {&#xA;              title&#xA;              url&#xA;              state&#xA;              assignees(first: 10) {&#xA;                nodes {&#xA;                  login&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;          fieldValues(first: 20) {&#xA;            nodes {&#xA;              ... on ProjectV2ItemFieldSingleSelectValue {&#xA;                field {&#xA;                  ... on ProjectV2SingleSelectField {&#xA;                    name&#xA;                  }&#xA;                }&#xA;                name&#xA;                id&#xA;              }&#xA;              ... on ProjectV2ItemFieldLabelValue {&#xA;                labels(first: 20) {&#xA;                  nodes {&#xA;                    id&#xA;                    name&#xA;                  }&#xA;                }&#xA;              }&#xA;              ... on ProjectV2ItemFieldTextValue {&#xA;                text&#xA;                id&#xA;                updatedAt&#xA;                creator {&#xA;                  url&#xA;                }&#xA;              }&#xA;              ... on ProjectV2ItemFieldMilestoneValue {&#xA;                milestone {&#xA;                  id&#xA;                }&#xA;              }&#xA;              ... on ProjectV2ItemFieldRepositoryValue {&#xA;                repository {&#xA;                  id&#xA;                  url&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Credit should go to <a href=""https://stackoverflow.com/users/2312060/rich-kuzsma"">https://stackoverflow.com/users/2312060/rich-kuzsma</a> for posting <a href=""https://gist.github.com/richkuz/e8842fce354edbd4e12dcbfa9ca40ff6"" rel=""nofollow noreferrer"">https://gist.github.com/richkuz/e8842fce354edbd4e12dcbfa9ca40ff6</a></p>&#xA;<p>This had the basic format for querying ProjectV2 fields, and I added the&#xA;<code>ProjectV2SingleSelectField</code> bit to include both the field name and its value in the response.</p>&#xA;",69002,,,,2022-09-28 15:10:31,"",,0,1,0,2022-09-28 15:10:31
73888099,2,,73887699,0,,"<p>Here are two options i can think of:</p>&#xA;<ol>&#xA;<li>Return a different object for public consumption (together with a new output type)</li>&#xA;<li>Use the same output type, but add a resolver (<a href=""https://www.graphql-tools.com/docs/resolvers"" rel=""nofollow noreferrer"">https://www.graphql-tools.com/docs/resolvers</a>) for this private field. You can then do some permission checks in the resolver method for the affected fields.</li>&#xA;</ol>&#xA;<p>Here is some pseudo code for option 2:</p>&#xA;<pre><code>const resolverMap = {&#xA;  MyObj: {&#xA;    databaseId(myObj) {&#xA;      if (hasAccess(myObj)) return myObj.databaseId&#xA;      return null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1386873,,,,2022-09-28 21:41:42,"",,0,3,0,2022-09-28 21:41:42
73889403,2,,73889265,1,,"<p>You can use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys"" rel=""nofollow noreferrer""><code>Object.keys</code></a> to retrieve all of the keys within in a object, then iterate over the returned array of keys in React to target the translation item:</p>&#xA;<pre><code>return (&#xA;    &lt;div&gt;&#xA;        {/* Equivalent to [&quot;item-0&quot;, &quot;item-1&quot;, ...].map(...) */}&#xA;        { Object.keys(translation).map(itemId =&gt; (&#xA;            &lt;div key={itemId}&gt;&#xA;                &lt;h2&gt;&#xA;                    {/* Target the value by using the provided key */}&#xA;                    name: {translation[itemId][&quot;_quote-translation&quot;]}&#xA;                &lt;/h2&gt;&#xA;                &lt;h2&gt;&#xA;                    country: {translation[itemId][&quot;_quote-translation-language&quot;]}&#xA;                &lt;/h2&gt;&#xA;                &lt;hr /&gt;&#xA;            &lt;/div&gt;&#xA;        ))}&#xA;    &lt;/div&gt;&#xA;);  &#xA;</code></pre>&#xA;<p>Also, it should be worth noting that in JavaScript you cannot target a JSON key using dot syntax (<code>translation.x-y-z</code>) if the key contains dashes. You <em>must</em> use the bracket syntax (<code>translation[&quot;x-y-z&quot;]</code>).</p>&#xA;<p>If optional chaining becomes a requirement, you can use <code>translation?.[&quot;x-y-z&quot;]</code>.</p>&#xA;",6425936,,,,2022-09-29 01:38:47,"",,0,0,0,2022-09-29 01:38:47
73902634,1,,,2,360,"<p>how can I sort by related column in laravel lighthouse graphql?</p>&#xA;<p>For example, I have Products that have One Category but I can't SortBy Category. How can I do that?</p>&#xA;<p>GraphQL</p>&#xA;<pre><code>getProducts(orderBy: _ @orderBy): [Product!]! @all&#xA;&#xA;type Product {&#xA;    id: ID&#xA;    code: String&#xA;    article: String&#xA;&#xA;    category: Category&#xA;}&#xA;type Category {&#xA;    id: ID&#xA;    name: String&#xA;    products: [Product]&#xA;}&#xA;</code></pre>&#xA;<p>My Models where you can see the relationship between Products and Categories</p>&#xA;<pre><code>class Product extends Model&#xA;{&#xA;    ...&#xA;    public function category()&#xA;    {&#xA;        return $this-&gt;belongsTo(Category::class);&#xA;    }&#xA;}&#xA;&#xA;&#xA;class Category extends Model&#xA;{&#xA;    ...&#xA;    public function products()&#xA;    {&#xA;        return $this-&gt;hasMany(Product::class);&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<hr />&#xA;<h2>SOLUTION</h2>&#xA;<p>Create a Builder</p>&#xA;<pre><code>&lt;?php&#xA;&#xA;namespace App\GraphQL\Queries;&#xA;&#xA;use Illuminate\Database\Eloquent\Builder;&#xA;&#xA;class ProductBuilder&#xA;{&#xA;    public function getProducts(Builder $builder)&#xA;    {&#xA;        return&#xA;            $builder-&gt;join('categories', 'categories.id', '=', 'products.category_id');&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Then add the builder to schema.graphql</p>&#xA;<pre><code>getProducts(orderBy: _ @orderBy): [Product!]!&#xA;    @all&#xA;    @builder(method: &quot;App\\GraphQL\\Queries\\ProductBuilder@getProducts&quot;)&#xA;</code></pre>&#xA;<p>Now you can call and order by relationship</p>&#xA;<pre><code>{&#xA;    getProducts(orderBy: {column: &quot;categories.name&quot;, order: ASC}){&#xA;        id&#xA;        code&#xA;        article&#xA;        category {&#xA;            name&#xA;       }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;",3517941,,3517941,2022-10-09 21:50:13,2022-10-09 21:50:13,sort by related column in laravel lighthouse graphql,<laravel><graphql><lighthouse><laravel-lighthouse><graphql-php>,2,0,0,2022-09-29 23:38:05
73910536,2,,69203861,0,,"<p>GraphQL uses an notation to recognize data. You can see it as <code>__typename</code> object property. Of course, this must be turned on in the GraphQL server configuration. If you see it, it's already clear. You can reach the correct result without refetching the relation changes in the cached data on the client side with a trick like this.&#xA;For example, let's say we have updated the Product with category. In the data to return from the update mutation, it is sufficient to return only the <code>id</code> of the relation.</p>&#xA;<p><em><strong>For this to work, category and product must be cached separately on the client beforehand.</strong></em></p>&#xA;<p>for example:</p>&#xA;<pre><code>mutation UpdateProduct($product: UpdateProductInput!) {&#xA;    updateProduct(product: $product) {&#xA;        id&#xA;        title&#xA;        category {&#xA;            id&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>You can also write in writeFragment, which is a separate method, which is the most stingy, but it can make your job difficult in nested data.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export class ProductFragmentService {&#xA;    constructor(private apollo: Apollo) {}&#xA;&#xA;    updateProduct(product: Product): void {&#xA;        const client = this.apollo.client;&#xA;        client.writeFragment({&#xA;            id: `Product:${product.id}`,&#xA;            fragment: gql`&#xA;                fragment UpdateProductCategoryFragment on Product {&#xA;                    __typename&#xA;                    id&#xA;                    title&#xA;                    category {&#xA;                        id&#xA;                    }&#xA;                }&#xA;            `,&#xA;            data: {&#xA;                __typename: 'Product',&#xA;                ...product,&#xA;            },&#xA;        });&#xA;    }&#xA;}&#xA; &#xA;</code></pre>&#xA;<p>If you want all the fields belonging to category, you need to send them to resolver and return as a response from there. Otherwise, yes, it gives a warning that I could not find the name property.</p>&#xA;<p>The more profitable way of doing it is to send this data to the resolver with the input, as I wrote above, and return to the client as a response from the server.</p>&#xA;<p>If you still have to make another SQL request, it is necessary to call the same id after registration.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>@Authorized()&#xA;@Mutation(() =&gt; Product, { description: 'Add new product' })&#xA;  async addProduct(&#xA;    @Arg('product') productInput: ProductInput&#xA;  ): Promise&lt;Product&gt; {&#xA;      await this.productRepo.save(productInput);&#xA;      return await this.productRepo.findOne({ where: { id: productInfo.id } });&#xA;  }&#xA;</code></pre>&#xA;<p>that's all :)</p>&#xA;",2576260,,2576260,2022-09-30 15:29:42,2022-09-30 15:29:42,"",,0,0,0,2022-09-30 14:52:01
73948691,1,73977777,,2,198,"<p>The GraphQL Ruby documentation shows <a href=""https://graphql-ruby.org/type_definitions/unions.html"" rel=""nofollow noreferrer"">how to define a union type</a>:</p>&#xA;<pre class=""lang-ruby prettyprint-override""><code>class Types::CommentSubject &lt; Types::BaseUnion&#xA;  description &quot;Objects which may be commented on&quot;&#xA;  possible_types Types::Post, Types::Image&#xA;&#xA;  # Optional: if this method is defined, it will override `Schema.resolve_type`&#xA;  def self.resolve_type(object, context)&#xA;    if object.is_a?(BlogPost)&#xA;      Types::Post&#xA;    else&#xA;      Types::Image&#xA;    end&#xA;  end&#xA;end&#xA;</code></pre>&#xA;<p>and it shows how to <a href=""https://graphql-ruby.org/type_definitions/lists.html"" rel=""nofollow noreferrer"">declare that a field is a list</a> outside of a union:</p>&#xA;<pre class=""lang-ruby prettyprint-override""><code># A field returning a list type:&#xA;# Equivalent to `aliases: [String!]` above&#xA;field :aliases, [String]&#xA;&#xA;# An argument which accepts a list type:&#xA;argument :categories, [Types::PostCategory], required: false&#xA;</code></pre>&#xA;<p>but I can't for the life of me figure out how to use a list as a possible type that a union member could be.</p>&#xA;<p>My code looks something like this:</p>&#xA;<pre class=""lang-ruby prettyprint-override""><code>class Types::ArgumentValueType &lt; Types::BaseUnion&#xA;  possible_types GraphQL::Types::String, GraphQL::Types::Boolean, GraphQL::Types::Int&#xA;&#xA;  def self.resolve_type(object, _context)&#xA;    if object.is_a?(String)&#xA;      GraphQL::Types::String&#xA;    elsif object.is_a?(Array)&#xA;      [GraphQL::Types::String]&#xA;    elsif object.is_a?(FalseClass)&#xA;      GraphQL::Types::Boolean&#xA;    elsif object.is_a?(TrueClass)&#xA;      GraphQL::Types::Boolean&#xA;    elsif object.is_a?(Integer)&#xA;      GraphQL::Types::Int&#xA;    end&#xA;  end&#xA;end&#xA;</code></pre>&#xA;<p>… which sort of works, except that when it's an array, this value comes back as a string. In GraphiQL it looks like this (we're looking at the <code>value</code> field):</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;name&quot;: &quot;top_box&quot;,&#xA;  &quot;type&quot;: &quot;Array&quot;,&#xA;  &quot;description&quot;: &quot;The chosen values of the scale which should be combined&quot;,&#xA;  &quot;position&quot;: 2,&#xA;  &quot;optional&quot;: false,&#xA;  &quot;value&quot;: &quot;[\&quot;8\&quot;, \&quot;9\&quot;, \&quot;10\&quot;]&quot;&#xA;}&#xA;</code></pre>&#xA;<p>We could potentially parse that in the client but ideally I'd like it to be an array of strings, like this:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;name&quot;: &quot;top_box&quot;,&#xA;  &quot;type&quot;: &quot;Array&quot;,&#xA;  &quot;description&quot;: &quot;The chosen values of the scale which should be combined&quot;,&#xA;  &quot;position&quot;: 2,&#xA;  &quot;optional&quot;: false,&#xA;  &quot;value&quot;: [&#xA;    &quot;8&quot;,&#xA;    &quot;9&quot;,&#xA;    &quot;10&quot;&#xA;  ]&#xA;},&#xA;</code></pre>&#xA;<p>But I can't see how to define that and the only information I could find anywhere is a brief comment in <a href=""https://stackoverflow.com/a/54583720/952580"">this answer to ‘GraphQL Union within Union’</a> which seems to suggest that it may not be possible.</p>&#xA;<h2>Errors</h2>&#xA;<p>If I try adding <code>[GraphQL::Types::String]</code> to <code>possible_types</code>, I get</p>&#xA;<pre class=""lang-plaintext prettyprint-override""><code>undefined method `graphql_name' for [GraphQL::Types::String]:Array&#xA;</code></pre>&#xA;<p>If I try adding <code>GraphQL::Schema::List.new(GraphQL::Types::String)</code> to <code>possible_types</code>, I get</p>&#xA;<pre class=""lang-plaintext prettyprint-override""><code>undefined method `directives' for #&lt;GraphQL::Schema::List:0x000000010f690950 @of_type=GraphQL::Types::String&gt;&#xA;</code></pre>&#xA;<p>and if I try replacing <code>[GraphQL::Types::String]</code> (under <code>elsif object.is_a?(Array)</code>) with <code>GraphQL::Schema::List.new(GraphQL::Types::String)</code>, then I get</p>&#xA;<pre class=""lang-plaintext prettyprint-override""><code>.resolve_type should return a type definition, but got #&lt;GraphQL::Schema::List:0x000000010f9fd6b0&#xA;@of_type=GraphQL::Types::String&gt; (GraphQL::Schema::List) from `resolve_type(Types::ArgumentValueType,&#xA;[\&quot;8\&quot;, \&quot;9\&quot;, \&quot;10\&quot;], #&lt;GraphQL::Query::Context:0x000000010f8ed018&gt;)`&#xA;</code></pre>&#xA;<h2>Update</h2>&#xA;<p>I managed to make an improvement by adding a wrapper class:</p>&#xA;<pre class=""lang-ruby prettyprint-override""><code># frozen_string_literal: true&#xA;&#xA;module Types&#xA;  class ListOfStringsType &lt; Types::BaseObject&#xA;    field :values, [String]&#xA;  end&#xA;end&#xA;</code></pre>&#xA;<p>Then, with a GraphQL query that looks a bit like this</p>&#xA;<pre class=""lang-json prettyprint-override""><code>arguments {&#xA;  name&#xA;  type&#xA;  description&#xA;  position&#xA;  optional&#xA;  value {&#xA;    ... on ListOfStrings {&#xA;      values&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>It produces output like this</p>&#xA;<pre class=""lang-json prettyprint-override""><code>&quot;arguments&quot;: [&#xA;  {&#xA;    &quot;name&quot;: &quot;top_box&quot;,&#xA;    &quot;type&quot;: &quot;Array&quot;,&#xA;    &quot;description&quot;: &quot;The chosen values of the scale which should be combined&quot;,&#xA;    &quot;position&quot;: 2,&#xA;    &quot;optional&quot;: false,&#xA;    &quot;value&quot;: {&#xA;      &quot;values&quot;: [&#xA;        &quot;8&quot;,&#xA;        &quot;9&quot;,&#xA;        &quot;10&quot;&#xA;      ]&#xA;    }&#xA;  },&#xA;  {&#xA;    &quot;name&quot;: &quot;measure&quot;,&#xA;    &quot;type&quot;: &quot;Measure&quot;,&#xA;    &quot;description&quot;: &quot;The name of the measure to be \&quot;top-boxed\&quot;&quot;,&#xA;    &quot;position&quot;: 1,&#xA;    &quot;optional&quot;: false,&#xA;    &quot;value&quot;: &quot;unique_and_different&quot;&#xA;  }&#xA;]&#xA;</code></pre>&#xA;<p>This is kind of okay, except that it has one extra level of indirection which I would prefer to avoid.</p>&#xA;",952580,,952580,2022-10-06 08:45:13,2022-10-06 17:22:09,Using a List in a GraphQL Union type (in Ruby),<ruby-on-rails><graphql><graphql-ruby>,1,0,0,2022-10-04 13:32:49
73951924,1,,,0,29,<p>I'm trying to make a GraphQL request with the GitHub API in order to retrieve according to a repository the or the &quot;.lock&quot; file where all the external libraries are located.</p>&#xA;<p>I have just started on GraphQL and despite my research I can't find a clear explanation.</p>&#xA;,19384044,,3001761,2022-10-04 18:10:03,2022-10-04 18:10:03,Recovering .lock files in a repository via a GraphQL query,<ruby-on-rails><ruby><github><graphql>,0,0,0,2022-10-04 18:05:12
73972702,1,,,2,130,"<p>What would be the correct syntax to obtain results where a reference array in GraphQL is empty?</p>&#xA;<p>Take this pseudo schema for example:</p>&#xA;<pre><code>type User {&#xA;  id: ID!&#xA;  name: String!&#xA;  tags: [Tag]!&#xA;}&#xA;&#xA;type Tag {&#xA;  id: ID!&#xA;  name: String!&#xA;  users: [User]!&#xA;}&#xA;</code></pre>&#xA;<p>I would want to retrieve all User objects which have no tags. Is this possible?</p>&#xA;<p>I am using Prisma, so I'm looking for an equivalent of this from their docs (<a href=""https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-scalar-lists-arrays"" rel=""nofollow noreferrer"">https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-scalar-lists-arrays</a>):</p>&#xA;<pre><code>const users = await prisma.user.findMany({&#xA;  where: {&#xA;    tags: {&#xA;      isEmpty: true,&#xA;    },&#xA;  },&#xA;})&#xA;</code></pre>&#xA;<p>but in a GraphQL query syntax rather than at resolver level.</p>&#xA;",7326460,,2805154,2022-10-07 20:04:46,2022-10-12 10:59:46,GraphQL - syntax for where array is empty,<graphql><prisma>,1,2,0,2022-10-06 11:00:03
73991784,2,,73983683,0,,<p>In GraphQL you can perform multiple queries in a single request. For example:</p>&#xA;<pre><code>query giveMeAllTheThings {&#xA;  allCustomers {&#xA;    id &#xA;    name&#xA;    email&#xA;  }&#xA;  allProducts {&#xA;    id&#xA;    name&#xA;    price&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This assumes the following query definitions:</p>&#xA;<pre><code>type Query {&#xA;  allCustomers: [Customer]&#xA;  allProducts: [Product]&#xA;}&#xA;</code></pre>&#xA;,2805154,,,,2022-10-07 19:18:09,"",,0,2,0,2022-10-07 19:18:09
73992121,2,,73977011,0,,<p>Returning all the addresses would be a <em>query</em> rather than a field resolver.</p>&#xA;<p>In your typeDefs you would have something like:</p>&#xA;<pre><code>type Address {&#xA;  …address scalar fields&#xA;  isUser: Boolean&#xA;}&#xA;&#xA;type User {&#xA;  address: Address&#xA;}&#xA;&#xA;type Query {&#xA;  addresses: [Address]&#xA;}&#xA;</code></pre>&#xA;<p>Running the <code>addresses</code> query would return an array of <code>Address</code> objects.</p>&#xA;,2805154,,,,2022-10-07 20:02:35,"",,0,2,0,2022-10-07 20:02:35
74002474,2,,73841025,0,,"<blockquote>&#xA;<p>Redis has options for various string operations using the &quot;Search&quot; module but these are limited to search within a given string, nothing with comparisons.</p>&#xA;</blockquote>&#xA;<p>Can you please give an example for a required comparison not within a given string?</p>&#xA;<p>The Search query can do some comparisons.</p>&#xA;<p>For Cursor, <a href=""https://redis.io/docs/stack/search/reference/aggregations/#cursor-api"" rel=""nofollow noreferrer"">FT.CURSOR</a> can be used, for example:</p>&#xA;<pre><code>127.0.0.1:6379&gt; JSON.SET key1 $ '{&quot;Id&quot;: 100, &quot;Name&quot;: &quot;foo&quot;, &quot;data&quot;: &quot;val1&quot;}'&#xA;OK&#xA;127.0.0.1:6379&gt; JSON.SET key2 $ '{&quot;Id&quot;: 200, &quot;Name&quot;: &quot;bar&quot;, &quot;data&quot;: &quot;val2&quot;}'&#xA;OK&#xA;127.0.0.1:6379&gt; JSON.SET key3 $ '{&quot;Id&quot;: 300, &quot;Name&quot;: &quot;foo&quot;, &quot;data&quot;: &quot;val3&quot;}'&#xA;OK&#xA;127.0.0.1:6379&gt; FT.CREATE idx ON JSON SCHEMA '$.Id' as id NUMERIC '$.Name' as name TAG&#xA;OK&#xA;127.0.0.1:6379&gt; FT.AGGREGATE idx '@name:{foo}' LOAD 2 @id @name WITHCURSOR COUNT 1&#xA;1) 1) (integer) 1&#xA;   2) 1) &quot;id&quot;&#xA;      2) &quot;300&quot;&#xA;      3) &quot;name&quot;&#xA;      4) &quot;foo&quot;&#xA;2) (integer) 17284697&#xA;127.0.0.1:6379&gt; FT.CURSOR READ idx 17284697 COUNT 1&#xA;1) 1) (integer) 1&#xA;   2) 1) &quot;id&quot;&#xA;      2) &quot;100&quot;&#xA;      3) &quot;name&quot;&#xA;      4) &quot;foo&quot;&#xA;2) (integer) 17284697&#xA;127.0.0.1:6379&gt; FT.CURSOR READ idx 17284697 COUNT 1&#xA;1) 1) (integer) 0&#xA;2) (integer) 0&#xA;127.0.0.1:6379&gt; &#xA;</code></pre>&#xA;",19099627,,,,2022-10-09 06:06:26,"",,0,1,0,2022-10-09 06:06:26
74003818,1,,,0,15,"<p>I'm trying to build a module for my portfolio and I want to has a list with the last repository I've participate in.</p>&#xA;<p>I'm using Github GraphQL API.</p>&#xA;<p>I've come up with this request :</p>&#xA;<pre><code>query &#xA;      {&#xA;      viewer {&#xA;          login&#xA;          name&#xA;            topRepositories(first:10,orderBy:{field: PUSHED_AT, direction:ASC}){&#xA;            edges{&#xA;&#xA;                node{&#xA;                    nameWithOwner&#xA;                url&#xA;                isPrivate&#xA;                &#xA;                    }&#xA;                }&#xA;            }&#xA;      }&#xA;  }&#xA;</code></pre>&#xA;<p>But I found that the &quot;order by&quot; did not do anything.</p>&#xA;<p>And I don't find how to get the last time you update this repo yourself.&#xA;I don't want to have listed first the repos that as been update recently by someone else where I've participate in a long time ago.</p>&#xA;<p>Thanks for your help.</p>&#xA;",17804619,,,,2022-10-09 10:04:09,How to find you last participation to a repository Graphql Github,<github><graphql><github-api><portfolio><github-graphql>,0,1,0,2022-10-09 10:04:09
74004189,2,,71442293,0,,"<p>in my case <em><strong>import {xxx} from &quot;graphql/urql&quot;</strong></em>, after change it to <em><strong>import {xxx} from &quot;urql&quot;</strong></em>, error gone and code works.</p>&#xA;<p>Also, while searching online to solve the problem, I found a discussion which might help you:&#xA;<a href=""https://github.com/mswjs/msw/pull/1381"" rel=""nofollow noreferrer"">fix(deps): include &quot;graphql&quot; as a dependency #1381</a></p>&#xA;",12390283,,12390283,2022-10-09 11:12:01,2022-10-09 11:12:01,"",,0,0,0,2022-10-09 11:04:56
74027965,1,,,0,100,"<p>I am trying to get a correct response from a graphQl query of an array of products. My goal is to take this array of products and sort it from news to oldest published date. I have tested it with a simple array of two product gids but i am receiving an error response.</p>&#xA;<p><code>Parse error on &quot;gid://shopify/Product/777229615129&quot; (STRING) at [1, 16]</code></p>&#xA;<p>here is my code:</p>&#xA;<pre><code>const token = 'Storefront API custom app token';&#xA;&#xA;const queryPage = JSON.stringify({&#xA;  query:`query ($ids : [&quot;gid:\/\/shopify\/Product\/777229615129&quot;,&quot;gid:\/\/shopify\/Product\/7772297068794&quot;]) {&#xA;    nodes(ids:$ids){&#xA;      ... on Product{&#xA;        id&#xA;        title&#xA;      }&#xA;    }&#xA;  }`&#xA;});&#xA;const storefrontSettingsPage = {&#xA;  &quot;async&quot;: true,&#xA;  &quot;crossDomain&quot;: true,&#xA;  &quot;url&quot;: &quot;https://&quot;+shopname+&quot;.myshopify.com/api/2022-07/graphql.json&quot;,&#xA;  &quot;method&quot;: &quot;POST&quot;,&#xA;  &quot;headers&quot;: {&#xA;    &quot;X-Shopify-Storefront-Access-Token&quot;: token,&#xA;    &quot;Content-Type&quot;: &quot;application/json&quot;&#xA;  },&#xA;  &quot;data&quot;: queryPage,&#xA;};&#xA;$.ajax(storefrontSettingsPage).done(function (response) {&#xA;  console.log(response);&#xA;});&#xA;</code></pre>&#xA;<p>I am still learning to use graphQl, what am I doing wrong.</p>&#xA;<p>Thank you for your support.</p>&#xA;",20213354,,,,2022-10-12 07:33:04,How can in get an array of Shopify product ids to return a correct response in GraphQl,<javascript><jquery><ajax><graphql><shopify>,1,0,0,2022-10-11 12:13:10
74047790,2,,74047716,3,,"<p>Erhm, if <code>console.log(data);</code> outputs what you posted, then you should use <code>data</code>:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const backgroundImage = data?.pageLayouts?.data?.attributes.backgroundImage.data?.attributes?.url&#xA;</code></pre>&#xA;<p><strong>Edit:</strong> Missed the array parts (thanks Steve Hynding), but again, if <code>console.log(data);</code> outputs what you posted, use <code>data</code>:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const backgroundImage = data?.pageLayouts?.data?.[0].attributes.backgroundImage.data?.[0].attributes?.url&#xA;</code></pre>&#xA;",14647816,,14647816,2022-10-12 21:12:46,2022-10-12 21:12:46,"",,0,3,0,2022-10-12 20:37:44
74047806,2,,74047716,2,,"<p>The <code>data</code> objects are Arrays but you are trying to read the properties as if it was just an object. You can still use unknown (<code>?.</code>) identifiers, you just need to do so on the array indices as such:</p>&#xA;<pre><code> const backgroundImage = attributes?.pageLayouts?.data?.[0]?.attributes.backgroundImage.data?.[0]?.attributes?.url&#xA;</code></pre>&#xA;<p>Note the addition of <code>?.[0]</code> to both <code>data</code> objects.</p>&#xA;",1215021,,,,2022-10-12 20:39:49,"",,0,1,0,2022-10-12 20:39:49
74050857,1,,,0,39,"<p><code>Error: DataTypeNotSupportedError: Data type &quot;Array&quot; in &quot;Influencer.handle&quot; is not supported by &quot;postgres&quot; database.</code></p>&#xA;<p>The same error is addressed <a href=""https://stackoverflow.com/questions/57611633/typeorm-array-is-not-supported-in-postgres"">here</a>&#xA;but that is for in built types i.e. <code>number</code>, <code>string</code> etc.</p>&#xA;<p>I want to store an array of a <code>custom data type</code> defined like:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>@ObjectType()&#xA;class InfluencerHandle {&#xA;    @Field(() =&gt; String)&#xA;    handle!: string;&#xA;&#xA;    @Field(() =&gt; Number)&#xA;    following!: number;&#xA;}&#xA;</code></pre>&#xA;<p>The entity handles this field like:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>@Column({ array: true })&#xA;@Field(() =&gt; [InfluencerHandle])&#xA;handle!: InfluencerHandle[];&#xA;</code></pre>&#xA;<p><strong>How to fix this error?</strong></p>&#xA;<p><strong>PS: This field also has to be received as input in a mutation</strong></p>&#xA;",14915005,,,,2022-10-13 05:31:42,Storing array of custom data type TypeGraphQL,<typescript><postgresql><apollo><typeorm><typegraphql>,0,1,0,2022-10-13 05:31:42
74054176,1,,,0,58,<p>How to write a GraphQL query  to retrieve all the workflows/runs from github&#xA;I tried below query for to get node id</p>&#xA;<pre><code>organization(login: &quot;abc&quot;) {&#xA;        repositories(first: 100) {&#xA;            nodes {&#xA;                    id&#xA;                    name&#xA;                    }&#xA;                }&#xA;            }&#xA;</code></pre>&#xA;<p>and below query to get workflow.</p>&#xA;<pre><code>    nodes(ids: &quot;sdefrgrt&quot;) {&#xA;        ... on Workflow {&#xA;          id&#xA;          createdAt&#xA;          name&#xA;          updatedAt&#xA;        }&#xA;}&#xA;</code></pre>&#xA;,8671089,,8671089,2022-10-13 11:14:49,2022-10-13 11:14:49,How to write a GraphQL query to retrieve all the workflows/runs from github,<github><graphql><github-actions>,0,1,0,2022-10-13 10:24:29
74076900,1,,,0,42,"<p>In my react native app with AWS amplify backend I want to search 'product' model.</p>&#xA;<p>At the moment I'm doing it like this first I query all the products like this</p>&#xA;<pre><code>useEffect(() =&gt; {&#xA;    &#xA; const getallProducts = async () =&gt; {&#xA;  &#xA; await DataStore.query(Product).then(setAllProducts);&#xA; &#xA;};&#xA;getallProducts();&#xA;&#xA;}, []);&#xA;</code></pre>&#xA;<p>Then I filter these products to show the search results to the User.</p>&#xA;<p>But I want to implement this search function without querying all products to the device. How can I do this?</p>&#xA;",17504609,,13302,2022-10-17 04:05:18,2022-10-17 04:05:18,How to search items in AWS Amplify Datastore?,<amazon-web-services><react-native><graphql><aws-amplify>,0,2,0,2022-10-15 05:21:40
74095045,1,,,0,13,"<p><em>Hello</em></p>&#xA;<p>How to check if there was a <strong>squash</strong> commit using github <strong>graphql</strong> <a href=""https://docs.github.com/en/graphql"" rel=""nofollow noreferrer"">https://docs.github.com/en/graphql</a>?</p>&#xA;<p>I can detect if commit was squashed by squash and merge by reading <strong>associatedPullRequests</strong>.&#xA;Part of that does the trick with a little bit of data manipulation:</p>&#xA;<pre><code>{&#xA;  repository(name: &quot;repo_test&quot;, owner: &quot;owner123&quot;) {&#xA;    defaultBranchRef {&#xA;      name&#xA;      target {&#xA;    ... on Commit {&#xA;      history(first: 100) {&#xA;        edges {&#xA;          node {&#xA;            oid&#xA;            message&#xA;            associatedPullRequests(first: 10) {&#xA;              totalCount&#xA;              edges {&#xA;                node {&#xA;                  commits(first: 10) {&#xA;                    nodes {&#xA;                      commit {&#xA;                        oid&#xA;                          }&#xA;                        }&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But what if a squash was created as a result of <strong>rebase -i HEAD~2</strong> and <strong>squash</strong>.</p>&#xA;<p>I mean fetch something like give <strong>git reflog</strong> but via graphql</p>&#xA;<pre><code>47caaec (HEAD -&gt; main, origin/main, origin/HEAD) HEAD@{1}: rebase (squash): This is a combination of 2 commits.&#xA;</code></pre>&#xA;<p>Note that I cannot trust messages.</p>&#xA;<p><em>Thank you in advance</em></p>&#xA;",5346628,,,,2022-10-17 09:18:50,Is it possible to check if there was squash commit using github graphql,<github><graphql><squash>,0,0,0,2022-10-17 09:18:50
74095528,1,,,0,21,"<p>My response is</p>&#xA;<pre><code>{&#xA;  graph: {&#xA;    Normal: [&#xA;      2100, 4200, 2100,&#xA;      6300,    0,    0,&#xA;       420&#xA;    ],&#xA;    VIP: [&#xA;      2100, 4200, 2100,&#xA;      6300,    0,    0,&#xA;         0&#xA;    ]&#xA;  },&#xA;  overview: {&#xA;    title: 'Filmfare Awards 2022',&#xA;    address: 'Butwal',&#xA;    startDate: 2023-01-01T00:00:00.000Z,&#xA;    startTime: '10:00',&#xA;    sales: 151620,&#xA;    discount: 560,&#xA;    serviceFee: 7220&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The object inside can be dynamic or null&#xA;Eg</p>&#xA;<pre><code>graph:{&#xA;one:[12,32],&#xA;two:[2,2],&#xA;ten:[0,9,5]&#xA;}&#xA;</code></pre>&#xA;<p>How to define it in query???</p>&#xA;<p><img src=""https://i.stack.imgur.com/I9IW5.png"" alt=""enter image description here"" /></p>&#xA;",20261992,,3309466,2022-10-18 13:26:31,2022-10-18 13:26:31,How to define unknown object type in GraphQl,<graphql><nestjs>,0,1,0,2022-10-17 09:58:07
74111496,1,,,0,16,"<p>I'm very new to GraphQL and its syntax, mechanisms that make it useful but I've done some research, but am struggling with QOL issues.</p>&#xA;<p>I'm using the GitHub GraphQL API to query and return structured repository information that matches a TypeScript interface structure.</p>&#xA;<p><strong>An example of a query using the GitHub GQL API Spec</strong></p>&#xA;<pre><code>query MyGitHubProjects {&#xA;  response: user(login: &quot;mattgoespro&quot;) {&#xA;    repositories(first: 20, ownerAffiliations: OWNER, privacy: PUBLIC) {&#xA;      all: nodes {&#xA;        ... on Repository {&#xA;          name&#xA;          description&#xA;          created_at: createdAt&#xA;          updated_at: updatedAt&#xA;          html_url: url&#xA;          repoTopics: repositoryTopics(first: 1) {&#xA;            ... on RepositoryTopicConnection {&#xA;              topics: nodes {&#xA;                ... on RepositoryTopic{&#xA;                  topic {&#xA;                    name&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The <strong>repoTopics</strong> (which is essentially just a list of strings on the GitHub website) response of the query returns in an inconvenient structure, eg.</p>&#xA;<pre><code>&quot;repoTopics&quot;: {&#xA;  &quot;topics&quot;: [&#xA;    {&#xA;      &quot;topic&quot;: {&#xA;        &quot;name&quot;: &quot;portfolio&quot;&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>Ideally, I'd like to modify the query to simplify this as much if possible by removing unnecessary depth of nesting of the <strong>repoTopics</strong> response. Say, in JavaScript accessing the list of topics by <strong>resp.repoTopics.topics</strong> instead of <strong>resp.repoTopics.topics[index].topic.xxx</strong>.</p>&#xA;<p>Many thanks. Let me know if it's not possible.</p>&#xA;",6265995,,,,2022-10-18 13:06:20,GitHub GraphQL API query for response simplification,<javascript><typescript><api><graphql><github-api>,0,1,0,2022-10-18 13:06:20
74131658,1,,,0,11,"<p>Attempting to use the search query doesn't appear to give results and I'm not even sure it has the data I want, here's an example</p>&#xA;<pre><code>query RepoFiles {&#xA; search(query: &quot;filename:Dockerfile repo:apache/druid&quot;, type:REPOSITORY) {&#xA;    codeCount&#xA;}&#xA;}&#xA;</code></pre>&#xA;<p>This REST api call does what I'd like, but I'd like to do this in graphql if possible</p>&#xA;<pre><code>https://api.github.com/search/code?q=repo:apache/druid+filename:Dockerfile&#xA;</code></pre>&#xA;",356011,,356011,2022-10-19 22:32:47,2022-10-19 22:32:47,How do I find a list of file paths for a given file name from the Github graphql API?,<github><graphql><github-api>,0,0,0,2022-10-19 20:41:16
74136790,1,,,1,44,"<p>I'm building a graphql API using 99designs/gqlgen but I'm a bit confused about the proper way of returning pointers.</p>&#xA;<p>The graphql type</p>&#xA;<pre><code>type GraphType {&#xA;  image_url: String&#xA;}&#xA;</code></pre>&#xA;<p>The go code is:</p>&#xA;<pre><code>type GraphType struct {&#xA;    ImageURL *string `json:&quot;image&quot;`&#xA;}&#xA;&#xA;type T struct {&#xA;    value string&#xA;}&#xA;&#xA;func (t T) toImageUrl() string {&#xA;    return fmt.Sprintf(&quot;http://test.localhost/%s&quot;, t.value)&#xA;}&#xA;&#xA;func (t T) toGraphType() *GraphType {&#xA;    var items = &amp;GraphType{&#xA;    }&#xA;    return items&#xA;}&#xA;</code></pre>&#xA;<p>There a 3 ways that I can do this</p>&#xA;<pre><code>// toImageUrl returns a pointer&#xA;func (t T) toImageUrl() *string {&#xA;    image := fmt.Sprintf(&quot;http://test.localhost/%s&quot;, t.value)&#xA;    return &amp;image&#xA;}&#xA;var items = &amp;GraphType{&#xA;    ImageURL: t.toImageUrl(),&#xA;}&#xA;&#xA;// store the value and get a pointer&#xA;image := t.toImageUrl()&#xA;var items = &amp;GraphType{&#xA;    ImageURL: &amp;image,&#xA;}&#xA;&#xA;// make a utility function for poiters&#xA;func getPointerString(s string) *string {&#xA;    return &amp;s&#xA;}&#xA;var items = &amp;GraphType{&#xA;    ImageURL: getPointerString(t.toImageUrl()),&#xA;}&#xA;</code></pre>&#xA;<p>The easyest is to use getPointerString but I don't know what happens to the momory usages, is this memory safe?</p>&#xA;",3343767,,4108803,2022-10-20 19:24:38,2022-10-20 19:24:38,Proper way to return string pointers in Graphql API,<go><graphql><gqlgen>,1,1,0,2022-10-20 08:37:32
74137035,2,,74136790,1,,"<p>Unlike other languages you can safely return a pointer to a local variable due to Go's amazing &quot;escape analysis&quot;.  So yes, using <code>getPointerString</code> is safe.</p>&#xA;<p>But I really don't think you need to return NULL.  So you don't need a nullable string in your schema.  Simply use <code>String!</code> instead of <code>String</code> then you can just return a Go string instead of needing a pointer to the string. Ie:</p>&#xA;<pre><code>type GraphType {&#xA;  image_url: String!&#xA;}&#xA;</code></pre>&#xA;<pre><code>type GraphType struct {&#xA;    ImageURL string `json:&quot;image&quot;`&#xA;}&#xA;</code></pre>&#xA;",11246894,,,,2022-10-20 08:55:52,"",,0,1,0,2022-10-20 08:55:52
74144012,2,,71453813,0,,"<p>you can use the built in one <code>llvm-cov</code> and you can specify it with the <code>--ignore-filename-regex</code> parameter.</p>&#xA;<p>here is an example (and a demo project):</p>&#xA;<p><a href=""https://github.com/michaelhenry/swifty-code-coverage"" rel=""nofollow noreferrer"">https://github.com/michaelhenry/swifty-code-coverage</a></p>&#xA;<p>with the coverage that you get from llvm-cov, you can have the option to display it in the stdout or a file or just push it somewhere like codecov or codeclimate</p>&#xA;<p>here is the file to be exact</p>&#xA;<p><a href=""https://github.com/michaelhenry/swifty-code-coverage/blob/main/lcov.sh"" rel=""nofollow noreferrer"">https://github.com/michaelhenry/swifty-code-coverage/blob/main/lcov.sh</a></p>&#xA;<p>so you can either <code>report</code>, <code>export</code> or both the code coverage.</p>&#xA;<pre><code>$ xcrun llvm-cov export --help&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/IASMw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IASMw.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Cheers,</p>&#xA;",701797,,701797,2022-11-03 22:52:34,2022-11-03 22:52:34,"",,0,0,0,2022-10-20 17:27:23
74148982,1,,,0,9,"<p>I am trying to return documents that have a key-value pair in any of the objects within an array in the document.</p>&#xA;<p>The query I came up with only looks at the 0th object in the array to check the key-value pair.&#xA;I can't think of or find online what I need to change in the query so that it will search all the objects in the array.</p>&#xA;<p>I am using MongoDB Atlas.</p>&#xA;<p>The documents I'm searching: (simplified)</p>&#xA;<pre><code>&quot;orders&quot;: [&#xA;  {&#xA;    &quot;OrderId&quot;: A,&#xA;    &quot;LineItems&quot;: [&#xA;      {&#xA;        &quot;LineItemId&quot;: &quot;1&quot;&#xA;      },&#xA;      {&#xA;        &quot;LineItemId&quot;: &quot;2&quot;&#xA;      }&#xA;    ]&#xA;  },&#xA;  {&#xA;    &quot;OrderId&quot;: B,&#xA;    &quot;LineItems&quot;: [&#xA;      {&#xA;        &quot;LineItemId&quot;: &quot;2&quot;&#xA;      },&#xA;      {&#xA;        &quot;LineItemId&quot;: &quot;1&quot;&#xA;      }&#xA;    ]&#xA;  },&#xA;  {&#xA;    &quot;OrderId&quot;: C,&#xA;    &quot;LineItems&quot;: [&#xA;      {&#xA;        &quot;LineItemId&quot;: &quot;3&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;]&#xA;</code></pre>&#xA;<p>The query I'm using:</p>&#xA;<pre><code>&quot;OrderQueryInput&quot;: {&#xA;  &quot;LineItems&quot;: {&#xA;    &quot;LineItemId&quot;: &quot;1&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This query only returns the following:</p>&#xA;<pre><code>&quot;orders&quot;: [&#xA;  {&#xA;    &quot;OrderId&quot;: A,&#xA;    &quot;LineItems&quot;: [&#xA;      {&#xA;        &quot;LineItemId&quot;: &quot;1&quot;&#xA;      },&#xA;      {&#xA;        &quot;LineItemId&quot;: &quot;2&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;]&#xA;</code></pre>&#xA;<p>My desired result is:</p>&#xA;<pre><code>&quot;orders&quot;: [&#xA;  {&#xA;    &quot;OrderId&quot;: A,&#xA;    &quot;LineItems&quot;: [&#xA;      {&#xA;        &quot;LineItemId&quot;: &quot;1&quot;&#xA;      },&#xA;      {&#xA;        &quot;LineItemId&quot;: &quot;2&quot;&#xA;      }&#xA;    ]&#xA;  },&#xA;  {&#xA;    &quot;OrderId&quot;: B,&#xA;    &quot;LineItems&quot;: [&#xA;      {&#xA;        &quot;LineItemId&quot;: &quot;2&quot;&#xA;      },&#xA;      {&#xA;        &quot;LineItemId&quot;: &quot;1&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;]&#xA;</code></pre>&#xA;<p>I would appreciate any help or push in the right direction.</p>&#xA;",11737276,,,,2022-10-21 05:03:26,How to search for a key-value pair in ALL objects within an array in the document - GraphQL MongoDB,<mongodb><graphql><atlas>,0,0,0,2022-10-21 05:03:26
74150882,2,,66362622,0,,<p>Try to increase the <code>memory_limit</code> of your <code>php.ini</code> file.</p>&#xA;<hr />&#xA;<p>Had the same issue when trying to fetch large numbers of products.</p>&#xA;<p>With debug logging enabled in the <code>debug.log</code> of WP I got:</p>&#xA;<pre><code>[21-Oct-2022 08:25:22 UTC] PHP Fatal error:  Allowed memory size of 134217728 bytes exhausted (tried to allocate 20480 bytes) in /var/www/html/wp-includes/meta.php on line 1189&#xA;</code></pre>&#xA;<p>So increasing did the job for me.</p>&#xA;,13765033,,,,2022-10-21 08:31:53,"",,0,0,0,2022-10-21 08:31:53
74164481,1,,,0,35,"<p>I have a service using Quarkus that uses SmallRye GraphQL Client to query for Contentful GraphQL API.</p>&#xA;<p>Before I explain the problem, I should give a bit of background about Contentful. It is a sort of Headless CMS that allows you to create objects that contain different types of fields. One of these fields is called <strong>rich text</strong>. This type is a complex type that is returned in the GraphQL API as a nested object.</p>&#xA;<p>According to their <a href=""https://www.contentful.com/developers/docs/references/graphql/#/reference/schema-generation/rich-text"" rel=""nofollow noreferrer"">documentation</a> this field is scalar type called JSON and a non-null. Using SmallRye GraphQL Client I was able to get any other field even the nested fields but this one.</p>&#xA;<p>For more details on how to set up a GraphQL client on Quarkus, refer to the <a href=""https://quarkus.io/guides/smallrye-graphql-client"" rel=""nofollow noreferrer"">documentation</a>.</p>&#xA;<p>FYI: the GraphQL field <code>json</code> has no subfields so it is not possible to create a nested class containing the fields returned from the response.</p>&#xA;",14717989,,,,2022-10-22 14:38:03,How do I parse a JSON scalar type with SmallRye GraphQL Client on Quarkus?,<graphql><quarkus><contentful><smallrye>,0,6,0,2022-10-22 14:38:03
74168357,1,74171209,,0,42,"<h1>I am trying to reference the <em>money</em> type onto my <em>cart</em> type I have tried a few different ways and keep getting this error:</h1>&#xA;<h3>:Ref function String() { [native code] } has not been implemented</h3>&#xA;<h4>In my project, I am importing my types as classes as recommended in the docs,</h4>&#xA;<h2>My types:</h2>&#xA;<p><em>That are in a separate file from my server</em></p>&#xA;<pre><code>export class CartItem {&#xA;    id: string;&#xA;    name: string;&#xA;    price: number;&#xA;    quantity: number;&#xA;&#xA;    constructor(id: string, name: string, price: number, quantity: number) {&#xA;        this.id = id;&#xA;        this.name = name;&#xA;        this.price = price;&#xA;        this.quantity = quantity;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<pre><code>export class Cart {&#xA;    id: string;&#xA;    items?: CartItem[];&#xA;&#xA;    constructor(id: string, items?: CartItem[]) {&#xA;        this.id = id;&#xA;        this.items = items;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<pre><code>export class Money {&#xA;    amount: number;&#xA;    formatted: string;&#xA;&#xA;    constructor(amount: number, formatted: string) {&#xA;        this.amount = amount;&#xA;        this.formatted = formatted;&#xA;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<h2>Here is my server:</h2>&#xA;<p><strong>I have two comments showing where I am likely failing</strong></p>&#xA;<ol>&#xA;<li>In my Cart Objecttype</li>&#xA;<li>const MoneyType</li>&#xA;</ol>&#xA;<hr />&#xA;<pre><code>import { createServer } from '@graphql-yoga/node'&#xA;import SchemaBuilder from &quot;@pothos/core&quot;&#xA;import { CartItem, Cart, Money } from 'gql';&#xA;&#xA;&#xA;const CARTS = [&#xA;    {&#xA;        id: '1',&#xA;        items: [&#xA;            {&#xA;                id: '1',&#xA;                name: 'Item 1',&#xA;                price: 10,&#xA;                quantity: 1&#xA;            },&#xA;            {&#xA;                id: '2',&#xA;                name: 'Item 2',&#xA;                price: 20,&#xA;                quantity: 2&#xA;            }&#xA;        ]&#xA;    },&#xA;    {&#xA;        id: '2',&#xA;        items: [&#xA;            {&#xA;                id: '3',&#xA;                name: 'Item 3',&#xA;                price: 30,&#xA;                quantity: 3&#xA;            },&#xA;            {&#xA;                id: '4',&#xA;                name: 'Item 4',&#xA;                price: 40,&#xA;                quantity: 4&#xA;            }&#xA;        ]&#xA;    }&#xA;]&#xA;&#xA;&#xA;&#xA;const builder = new SchemaBuilder({});&#xA;&#xA;builder.objectType(Cart, {&#xA;    name: &quot;Cart&quot;,&#xA;    description: &quot;A cart&quot;,&#xA;    fields: (t) =&gt; ({&#xA;        id: t.exposeString('id', {}),&#xA;        items: t.field({&#xA;            type: [CartItem],&#xA;            resolve: (cart) =&gt; cart.items ?? [],&#xA;        }),&#xA;&#xA;        // This is the field that we want to USE TO REFERENCE&#xA;        // subTotal: t.field({&#xA;            //     type: Money,&#xA;            //     resolve: (cart) =&gt; {&#xA;                //         const total = cart.items?.reduce((acc, item) =&gt; acc + item.price * item.quantity, 0) ?? 0;&#xA;                //         return new Money(total, `$${total}`);&#xA;                //     }&#xA;                // })&#xA;            }),&#xA;        });&#xA;        &#xA;        builder.objectType(CartItem, {&#xA;            name: &quot;CartItem&quot;,&#xA;            description: &quot;A cart item&quot;,&#xA;            fields: (t) =&gt; ({&#xA;                id: t.exposeString('id', {}),&#xA;                name: t.exposeString('name', {}),&#xA;                price: t.exposeInt('price', {}),&#xA;                quantity: t.exposeInt('quantity', {}),&#xA;            }),&#xA;        });&#xA;        &#xA;        // make a reference to the Money type THAT DOESEN'T WORK&#xA;        const MoneyType = builder.objectRef&lt;MoneyShape&gt;(&quot;Money&quot;);&#xA;&#xA;        &#xA;        builder.objectType(Money, {&#xA;            name: &quot;Money&quot;,&#xA;            description: &quot;A money&quot;,&#xA;            fields: (t) =&gt; ({&#xA;                amount: t.exposeInt('amount', {}),&#xA;                formatted: t.field({&#xA;                    type: String,&#xA;                    resolve: (money) =&gt; new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(money.amount),&#xA;                }),&#xA;            }),&#xA;        });&#xA;        &#xA;        &#xA;        builder.queryType({&#xA;            fields: (t) =&gt; ({&#xA;        cart: t.field({&#xA;            type: Cart,&#xA;            nullable: true,&#xA;            args: {&#xA;                id: t.arg.id({ required: true, description: &quot;the id of the cart&quot; }),&#xA;            },&#xA;            resolve: (_, { id }) =&gt; {&#xA;                const cart = CARTS.find((cart) =&gt; cart.id === id);&#xA;&#xA;                if (!cart) {&#xA;                    throw new Error(`Cart with id ${id} not found`)&#xA;                }&#xA;&#xA;                return cart&#xA;            }&#xA;        }),&#xA;        carts: t.field({&#xA;            type: [Cart],&#xA;            resolve: () =&gt; CARTS&#xA;        }),&#xA;    }),&#xA;})&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;const server = createServer({&#xA;    endpoint: '/api',&#xA;    schema: builder.toSchema(),&#xA;})&#xA;&#xA;&#xA;export default server;&#xA;</code></pre>&#xA;",4682551,,,,2022-10-23 12:39:14,How to implement a reference type on a ObjectType that comes from a class in GraphQL pothos (Next JS),<graphql><apollo-server><typegraphql>,1,0,0,2022-10-23 02:48:19
74175141,2,,70675281,0,,"<p>This can be done now. This <a href=""https://community.shopify.com/c/shopify-discussions/query-all-products-with-a-given-metafield-value/m-p/1785157/highlight/true#M319505"" rel=""nofollow noreferrer"">post on the Shopify forum</a> explains it perfectly with the latest API.</p>&#xA;<p>In case that post gets deleted, I'm going to put the info below:</p>&#xA;<p>We can now filter by metafields but through a collection. <a href=""https://shopify.dev/custom-storefronts/products-collections/filter-products#query-products-by-metafi.."" rel=""nofollow noreferrer"">https://shopify.dev/custom-storefronts/products-collections/filter-products#query-products-by-metafi..</a>.</p>&#xA;<p>Requirements:</p>&#xA;<ul>&#xA;<li>The metafield must have been added as a filter in the &quot;Search &amp;&#xA;Discovery app&quot; or the Filters in the Navigation settings.</li>&#xA;<li>The metafield must be of one of these types: single_line_text_field,&#xA;boolean, numeric_integer, numeric_decimal</li>&#xA;<li>The Storefront API used must be 2022-04 or higher. I tested it with&#xA;2022-10</li>&#xA;<li>The metafield must be exposed to the Storefront API</li>&#xA;</ul>&#xA;<p>Knowing that as of today, we have a limit of 5000 products for filters to work in a normal store (see <a href=""https://help.shopify.com/en/manual/online-store/search-and-discovery/filters"" rel=""nofollow noreferrer"">https://help.shopify.com/en/manual/online-store/search-and-discovery/filters</a>)</p>&#xA;<p>I decided to test if that restriction applies to the Storefront API, I tested it with a collection with 11769 products and I was able to get filtered results as expected. So it seems that at this stage we don't have this limitation in the Storefront API&#xA;.</p>&#xA;",9569819,,,,2022-10-23 22:04:08,"",,0,0,0,2022-10-23 22:04:08
74182220,1,74184743,,0,22,"<p>Hi noobie to graphql ive created a simple node.js project that communicates with apollo Server. The issues is that i want to nest comments that relate to each product. As you can see ive added productId in both types.</p>&#xA;<p>below in Apollo Explorer i want to run the below query to nest comment relating to each product&#xA;my plan is store each products and comments in seperates db tables eventually.</p>&#xA;<p>query {</p>&#xA;<pre><code>    allProducts {&#xA;      product_Description&#xA;      comment {&#xA;        commentBody&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;&#xA;const { ApolloServer, gql } = require('apollo-server')&#xA;&#xA;&#xA;&#xA;let products = [&#xA;    {&#xA;        productId : 101,&#xA;        productTitle : &quot;EasyJet Summer Flight Sale 2023 - 100,000 flights on offer - From £29.99&quot;,&#xA;        product_Description : &quot; cheaps flights available&quot;,&#xA;        price : &quot;£302&quot;,&#xA;    },&#xA;    {&#xA;        productId : 102,&#xA;        productTitle : &quot;Apple Leather Case with MagSafe for iPhone 13 Pro Max  Midnight&quot;,&#xA;        product_Description : &quot;Aple leather case get this deal!!!&quot;,&#xA;        price : &quot;£29&quot;&#xA;    },&#xA;    {&#xA;        productId : 103,&#xA;        productTitle : &quot;Xiaomi Redmi Note 10 Pro - Mobile Phone 6+128 GB&quot;,&#xA;        product_Description : &quot;Another chinese mobile phone yarn !!!&quot;,&#xA;        price : &quot;£120&quot;&#xA;    }&#xA;]&#xA;&#xA;let comments = [&#xA;    {&#xA;        commentId   : 1,&#xA;        commentBody : &quot;amazing product really cheap flights&quot;,&#xA;        productId : 101,&#xA;    },&#xA;    {&#xA;        commentId   : 2,&#xA;        commentBody : &quot;amazing product really cheap flights&quot;,&#xA;        productId : 102,&#xA;    },&#xA;    {&#xA;        commentId   : &quot;3&quot;,&#xA;        commentBody : &quot;amazing product really cheap flights&quot;,&#xA;        productId : 103,&#xA;    },&#xA;]&#xA;&#xA;&#xA;const typeDefs = gql  `&#xA;&#xA;type Product {&#xA;    productId: ID!,&#xA;    productTitle: String!,&#xA;    product_Description: String!,&#xA;    price: String!&#xA;    comment: [Comment]&#xA;}&#xA;&#xA;type Comment {&#xA;    commentId: Int!,&#xA;    commentBody: String!,&#xA;}&#xA;&#xA;type Query {&#xA;    productCount: Int!&#xA;    allProducts: [Product!]!&#xA;    allComments: [Comment!]!&#xA;    findProduct(productTitle: String!): Product&#xA;}&#xA;`&#xA;&#xA;const resolvers = {&#xA;    Query: {&#xA;        productCount: () =&gt; products.length,&#xA;        allProducts: () =&gt; products,&#xA;        allComments: () =&gt; comments,&#xA;        findProduct: (root, args) =&gt; products.find(p =&gt; p.productTitle === args.productTitle),&#xA;    },&#xA;    Product: {&#xA;        comment: parent =&gt; {&#xA;            console.log('parent data',parent)&#xA;            return parent.comment.map(commentList =&gt; parent.productId === commentList.productId)&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;&#xA;const server = new ApolloServer({&#xA;    typeDefs,&#xA;    resolvers,&#xA;  })&#xA;  &#xA;  server.listen().then(({ url }) =&gt; {&#xA;    console.log(`Server ready at ${url}`)&#xA;  })&#xA;</code></pre>&#xA;<hr />&#xA;<p>this is error im getting</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Cannot return null for non-nullable field Comment.commentId.&quot;,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 6,&#xA;          &quot;column&quot;: 9&#xA;</code></pre>&#xA;<p>any help greatfully appreciated  :)</p>&#xA;",2286483,,,,2022-10-24 23:07:39,Graphql nested query issue using node.js,<node.js><reactjs><graphql><graphql-js>,1,1,0,2022-10-24 13:56:11
74187131,1,,,0,21,"<p>I'm currently using AWS AppSync, however the question applies to general Graphql / Javascript / API.</p>&#xA;<p>I have the following nested data that I'm passing as an argument:</p>&#xA;<pre><code>const DUMMY_DATA = [&#xA;['First Name', 'Last Name', 'company', 'email', 'phone', 'Address', 'City', 'State', 'Zip Code'],&#xA;['Lambert', 'Beckhouse', 'StackOverflow', 'lbeckhouse0@stackoverflow.com', '512-555-1738', '316 Arapahoe Way', 'Austin', 'TX', '78721'],&#xA;['Maryanna', 'Vassman', 'CDBABY', 'mvassman1@cdbaby.com', '479-204-8976', '1126 Troy Way', 'Fort Smith', 'AR', '72916']&#xA;]&#xA;</code></pre>&#xA;<p>I'm passing the above, as is, to my api, which looks something like this:</p>&#xA;<pre><code>try {&#xA;  await doAPIWork({data: DUMMY_DATA})&#xA;} catch (err) {&#xA;  console.error(err)&#xA;}&#xA;</code></pre>&#xA;<p>However when it reaches my backend I'm unable to properly iterate through the nested arrays.</p>&#xA;<p>The nested array comes back as typeof String, and I'm unable to properly convert it back to an array...&#xA;For instance DUMMY_DATA[0] comes back as ['First Name', 'Last Name', 'company' ....] with <strong>typeof string</strong> .</p>&#xA;<p>I know I'm either missing a step that I need to take before sending the data, or I'm failing to properly convert the string back to an array.</p>&#xA;<p>Would really appreciate any help on this!</p>&#xA;<p>Also: my current schema is</p>&#xA;<pre><code>type Mutation {&#xA;  doAPIWork(data: [String]): String&#xA;    @function(name: &quot;doAPIWork-dev&quot;)&#xA;}&#xA;&#xA;and Ive also tried &#xA;&#xA;type Mutation {&#xA;  doAPIWork(data: [AWSJSON]): String&#xA;    @function(name: &quot;doAPIWork-dev&quot;)&#xA;}&#xA;</code></pre>&#xA;",8304719,,2805154,2022-10-25 00:44:34,2022-10-25 00:44:34,How to properly pass nested arrays as arguments for GraphQL API,<javascript><arrays><json><graphql><aws-appsync>,2,0,0,2022-10-24 21:45:04
74188408,1,,,0,35,"<p>In Apollo Federation 2 :</p>&#xA;<p>Consider the following two services that both own an entity of the same name called Product :</p>&#xA;<p>Products service :</p>&#xA;<pre><code>  type Product @key(fields: &quot;id&quot;)  {&#xA;    id: Int!&#xA;    productname: String!&#xA;  }&#xA;</code></pre>&#xA;<p>Inventory service :</p>&#xA;<pre><code>  type Product @key(fields: &quot;id&quot;)  {&#xA;    id: Int!&#xA;    qty: Int!&#xA;  }&#xA;</code></pre>&#xA;<p>The team that owns Products service has no way of modifying the Inventory service, and vice versa.&#xA;The team that owns Products service has no idea what fields are in Inventory service (or that Inventory service even exists) and vice versa.</p>&#xA;<p>In this case, does Apollo Federation support a way for the supergraph to query across Federated services without using key field or shared fields? In the above example, what if I want to query an aggregate of Products where :</p>&#xA;<p><code>productname = &quot;My product&quot; AND qty &lt; 1000 AND qty &gt; 500</code> ?</p>&#xA;<p>If the Product team has no idea what fields Inventory service owns and vice versa, how can we federate input types and queries such that we can take full advantage of all the fields across all the subgraphs? Is this possible?</p>&#xA;",4701158,,,,2022-10-25 01:56:30,Apollo Federation merge query and input type across federated services,<graphql><apollo-server><apollo-federation>,0,0,0,2022-10-25 01:56:30
74192795,1,,,0,20,"<p>Here are the tags that were committed sequentially: <br>&#xA;1.09.0 (on 24.09.2022) <br>&#xA;1.11.0 (on 25.09.2022 07:00) <br>&#xA;1.11.1 (on 25.09.2022 08:00) <br>&#xA;1.10.0 (on 25.09.2022 09:00) ( some hotfix changes ) <br></p>&#xA;<p>I would like to get the above tags in an array exactly as it is. For example 1.10.0 should be on the last index of array because 1.10.0 was submitted recently. However I am not succeeded.</p>&#xA;<p>I have listed all github Tags using GraphQL query:</p>&#xA;<pre><code>query &#xA;  {repository(owner:&quot;XXX&quot;, name:&quot;XXX&quot;) &#xA;    {refs(refPrefix: &quot;refs/tags/&quot;, last: 100, orderBy: {field: TAG_COMMIT_DATE, direction: ASC}) {      &#xA;edges { &#xA;        node {name}&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>Here is the result:  <br>&#xA;...  (array index ...) <br>&#xA;1.09.0 (array index 96) <br>&#xA;1.10.0 (array index 97) <br>&#xA;1.11.0 (array index 98) <br>&#xA;1.11.1 (array index 99) <br></p>&#xA;<p>How could I get 1.10.0 on the last array index (99) using graphql query? or how could I get github tags based on timestamp it was committed?</p>&#xA;",8613869,,,,2022-10-25 10:41:32,List Tags ordered by timestamp using Github GraphQL,<arrays><github><graphql><tags>,0,0,0,2022-10-25 10:41:32
74193085,1,74197440,,0,20,"<p>I have an api with an endpoint which can takes different query parameters.&#xA;<code>/toto?number=&amp;shipments.tracking_number=&amp;customer.email=</code>. The thing is that to get the query, I'm using only one input on the frontend and depending on that input, I have to fill the corresponding query parameter. But, depending on the query the user is passing, the JSON I receive in response is different. For example if he provides his email, the <code>duplicates</code> field won't be present in the response or if he provides a <code>tracking number</code>, the <code>total</code> won't be there either. Is there a way to make a query that is dynamic to handle if a field is in the response or not ?</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export const GET_ORDER = gql`&#xA;  query GetOrder($query: String!) {&#xA;    getOrder(query: $query) {&#xA;      id&#xA;      tokenValue&#xA;      number&#xA;      total&#xA;      duplicates&#xA;      shippingTotal&#xA;  }&#xA;}`&#xA;</code></pre>&#xA;",15596986,,,,2022-10-25 16:36:14,graphql query with different output,<apollo><apollo-client>,1,0,0,2022-10-25 11:04:23
74196706,1,,,0,23,"<p>I am using graqhql in my React-Node project. I have defined all my graphql types in <code>.graphql</code> files. I have a products.graphql where I want to define product types, something like this:</p>&#xA;<pre><code>input ProductInput {&#xA;    label: String&#xA;    title: String!&#xA;    description: String!&#xA;    imageUrl: String!&#xA;    productCategory: Electronics | Food | Toy  // this line doesn't work&#xA;}&#xA;&#xA;type Product {&#xA;    id: ID!&#xA;    product: ProductInput!  // throws error&#xA;}&#xA;&#xA;type Electronics {&#xA;    itemType: String!&#xA;    warranty: Int!&#xA;}&#xA;&#xA;type Food {&#xA;    expiry: String!&#xA;    weight: Int!&#xA;}&#xA;&#xA;type Toy {&#xA;    age: Int!&#xA;}&#xA;</code></pre>&#xA;<p>I am facing two issues:</p>&#xA;<ol>&#xA;<li><p><code>ProductInput</code> takes a <code>productCategory</code> type which can be either of these types: <code>Electronics</code>, <code>Food</code> or <code>Toy</code>. Defining union type like <code>productCategory: Electronics | Food | Toy</code> throws error. I can solve this by defining the three product categories separately in <code>ProductInput</code> by adding a field for each of them, and then picking the first defined field as input in my resolver, but it won't be very elegant.</p>&#xA;</li>&#xA;<li><p>And I still have one more issue: reusing input type <code>ProductInput</code> in <code>Product</code>. Doing so gives error: <code>The type of Product.productCategory must be Output Type but got: ProductInput!</code>.</p>&#xA;</li>&#xA;</ol>&#xA;<p>Is there a way to solve these two issues?</p>&#xA;",3706051,,,,2022-10-26 18:07:54,GraphQL: using input type in Output,<node.js><graphql>,1,0,0,2022-10-25 15:40:00
74210428,1,,,-1,41,"<p>I am new to GraphQL and I am have the query working as expected but I am having trouble working with the response.</p>&#xA;<h3>Query</h3>&#xA;<pre><code>query {&#xA;  all_assets(where: {title: &quot;suppliestile-blt9607aa6a28539d2e.zip&quot;}) {&#xA;    items {&#xA;      url&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<h3>Calling Response</h3>&#xA;<pre><code>var jsondata = JSON.stringify(response.data);&#xA;&#xA;console.log(jsondata);&#xA;</code></pre>&#xA;<p>This is giving me the following response</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&quot;data&quot;:{&quot;all_assets&quot;:{&quot;items&quot;:[{&quot;url&quot;:&quot;https://assets.contentstack.io/v3/assets/blt15ad871ba49b8a41/blta52af33b959c061f/6352b5fb3bd922566d8d3f2d/suppliestile-blt9607aa6a28539d2e.zip&quot;}]}}}&#xA;</code></pre>&#xA;<p>Essentially I would like to use the url value as a variable moving forward but I am having trouble extracting it from all of the nested objects and arrays does anyone have any advice to get me pointed in the right direction?</p>&#xA;",2379391,,1762224,2022-10-26 15:36:44,2022-10-26 18:12:29,How to use GraphQL response as a variable in Javascript,<javascript><axios><graphql>,1,1,0,2022-10-26 15:32:51
74214719,1,74215310,,0,64,"<p>I'm having really interesting issue. I have a data which comes from Graphql. I wanna add a object in an array that is in an array.</p>&#xA;<p>But i can't do it. I have a error that is the object is not extensible.</p>&#xA;<p>Let me give an example of my data:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;board&quot;: {&#xA;      &quot;id&quot;: &quot;1&quot;,&#xA;      &quot;title&quot;: &quot;Grocieries&quot;,&#xA;      &quot;color&quot;: &quot;teal&quot;,&#xA;      &quot;lists&quot;: [&#xA;        {&#xA;          &quot;id&quot;: &quot;1&quot;,&#xA;          &quot;title&quot;: &quot;To-Do&quot;,&#xA;          &quot;cards&quot;: [&#xA;            {&#xA;              &quot;id&quot;: &quot;1&quot;,&#xA;              &quot;title&quot;: &quot;Write novel&quot;&#xA;            },&#xA;            {&#xA;              &quot;id&quot;: &quot;2&quot;,&#xA;              &quot;title&quot;: &quot;Buy food&quot;&#xA;            },&#xA;            {&#xA;              &quot;id&quot;: &quot;3&quot;,&#xA;              &quot;title&quot;: &quot;Paint a picture&quot;&#xA;            }&#xA;          ]&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: &quot;2&quot;,&#xA;          &quot;title&quot;: &quot;In progress&quot;,&#xA;          &quot;cards&quot;: [&#xA;            {&#xA;              &quot;id&quot;: &quot;4&quot;,&#xA;              &quot;title&quot;: &quot;Buy groceries&quot;&#xA;            },&#xA;            {&#xA;              &quot;id&quot;: &quot;5&quot;,&#xA;              &quot;title&quot;: &quot;Pay the bills&quot;&#xA;            },&#xA;            {&#xA;              &quot;id&quot;: &quot;6&quot;,&#xA;              &quot;title&quot;: &quot;Get the car fixed&quot;&#xA;            },&#xA;            {&#xA;              &quot;id&quot;: &quot;7&quot;,&#xA;              &quot;title&quot;: &quot;Create a course&quot;&#xA;            }&#xA;          ]&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: &quot;3&quot;,&#xA;          &quot;title&quot;: &quot;Done&quot;,&#xA;          &quot;cards&quot;: [&#xA;            {&#xA;              &quot;id&quot;: &quot;8&quot;,&#xA;              &quot;title&quot;: &quot;Get the car fixed&quot;&#xA;            },&#xA;            {&#xA;              &quot;id&quot;: &quot;9&quot;,&#xA;              &quot;title&quot;: &quot;Write novel&quot;&#xA;            },&#xA;            {&#xA;              &quot;id&quot;: &quot;30&quot;,&#xA;              &quot;title&quot;: &quot;Buy fruits&quot;&#xA;            },&#xA;            {&#xA;              &quot;id&quot;: &quot;31&quot;,&#xA;              &quot;title&quot;: &quot;Buy car&quot;&#xA;            }&#xA;          ]&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Let me explain what i want to do:</p>&#xA;<p>I want to add an object in cards array which is inside of the list item which has id 1.</p>&#xA;<p>Actually it's not hard to do it programmatically. But i have that error:</p>&#xA;<p><a href=""https://i.stack.imgur.com/AAHpP.png"" rel=""nofollow noreferrer"">Error Image</a></p>&#xA;<p>My code:</p>&#xA;<pre><code>&lt;script&gt;&#xA;import CardAdd from '../graphql/mutations/CardAdd';&#xA;import BoardQuery from '../graphql/queries/BoardWithListsAndCards';&#xA;export default {&#xA;    methods: {&#xA;        cardAdd(){&#xA;            this.$apollo.mutate({&#xA;                mutation: CardAdd,&#xA;                variables: {&#xA;                    title: &quot;Mutation added&quot;,&#xA;                    order: 1,&#xA;                    listId: 1,&#xA;                    ownerId: 1&#xA;                },&#xA;                update(store, { data: { cardAdd } }){&#xA;                    let data = store.readQuery({&#xA;                        query: BoardQuery,&#xA;                        variables: {&#xA;                            id: 1&#xA;                        }&#xA;                    });&#xA;                    data.board.lists.find(list =&gt; list.id == 1).cards.push(cardAdd);&#xA;                }&#xA;            });&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;<p>Note: cardAdd is the object that i want to add in cards array.</p>&#xA;<p>I also tried to add with index.</p>&#xA;<p>Thank you already</p>&#xA;",11346936,,11346936,2022-10-26 22:36:28,2022-10-27 00:03:13,How to add an object in an array that is in an array,<javascript><arrays><object><graphql>,2,1,0,2022-10-26 22:04:19
74248117,1,,,1,39,"<p>I have a GitHub app that is authorized to access data from my workplace's private repository. I use the GitHub GraphQL API to search for each user's recent pull requests.</p>&#xA;<p>The pull request query works great except in the case of one user who has made their activity private.</p>&#xA;<p>Here's a basic version of the query:</p>&#xA;<pre><code>query PRs($searchQuery: String!) {&#xA;  search(query: $searchQuery, type: ISSUE, last: 100) {&#xA;    issueCount&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And here's the search query:</p>&#xA;<pre><code>{&#xA;  &quot;searchQuery&quot;: &quot;author:&lt;user_login&gt; type:pr merged:2022-09-25..2022-10-30&quot;&#xA;}&#xA;</code></pre>&#xA;<p>I can get correct results from this search query with every other user in the org via GraphQL. I can see correct results for this user when I enter that query into the Pull Request repo search bar in the GH UI.</p>&#xA;<p>I can't find any documentation on GitHub's site that says they won't return activity via the GraphQL API. Can anyone confirm that's the case?</p>&#xA;<p>It seems weird that GitHub would interpret &quot;private activity&quot; as meaning that your own company can't retrieve it.</p>&#xA;",20367633,,,,2022-10-29 19:12:22,GitHub GraphQL API doesn't return pull requests from user with private activity settings,<github-api><github-graphql>,0,1,0,2022-10-29 19:12:22
74248802,2,,74223591,1,,"<p>I don't think this is possible.</p>&#xA;<p>If you think about it, it goes against the idea of even having a GraphQL schema to then return essential arbritrary JSON.</p>&#xA;<p>I believe that AWSJSON will parse stringified JSON for inputs, but serialize to stringified JSON for outputs.</p>&#xA;<p>There's <a href=""https://stackoverflow.com/a/59904110/964514"">an answer to an other question</a> that might give some ideas of how to work around this. Other than that, it seems your client will need to parse the JSON.</p>&#xA;",964514,,,,2022-10-29 21:00:54,"",,0,0,0,2022-10-29 21:00:54
74261948,2,,73186371,0,,<pre><code>graphql.servlet.mapping=/graphql&#xA;</code></pre>&#xA;<p>Add this information to <strong>application.yaml</strong></p>&#xA;,15158093,,,,2022-10-31 10:31:36,"",,0,0,0,2022-10-31 10:31:36
74272298,2,,74272297,0,,"<p>The solution was to edit the value to the right of the inputs panel (in the middle panel):</p>&#xA;<p><a href=""https://i.stack.imgur.com/YPr7P.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YPr7P.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Update to:</p>&#xA;<p><a href=""https://i.stack.imgur.com/eP1VX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eP1VX.png"" alt=""enter image description here"" /></a></p>&#xA;",11664580,,,,2022-11-01 06:31:20,"",,0,0,0,2022-11-01 06:31:20
74291218,2,,74286792,0,,"<p>Using your query you can specify the block like this. But i dont think its what you are looking for. The tokens just gives you some information about that address, not the price.</p>&#xA;<pre><code>{&#xA;  tokens( where:{id:&quot;0x6070c2215a18cd8efaf340166876ac9ce4d1e79b&quot;}, block: {number :14882943}, first: 10, orderBy: txCount) {&#xA;    id,&#xA;    symbol,&#xA;    name,&#xA;    totalSupply,&#xA;    derivedETH&#xA;    txCount&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1680271,,,,2022-11-02 14:52:05,"",,0,1,0,2022-11-02 14:52:05
74291789,1,,,0,123,"<p>So I have this array this I'm trying to send to graphql in react...</p>&#xA;<pre><code>[{…}]&#xA;0: {id: 1, customers_top_competitors: 'asdfasd', top_competitors_url: 'https://www.asdfasd.com/', __typename: 'TopCompetitors'}&#xA;length: 1&#xA;[[Prototype]]: Array(0)&#xA;</code></pre>&#xA;<p>Here's my query...</p>&#xA;<pre><code>export const UPDATE_CUSTOMER_COMPETITORS = gql`&#xA;  mutation($customer_id: Int, $data: [TopCompetitorsInput]) {&#xA;    updateTopCompetitors(customer_id: $customer_id, data: $data)&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>and my models...</p>&#xA;<pre><code>input TopCompetitorsInput {&#xA;  TopCompetitorsInputArray: [TopCompetitorsInputElement]&#xA;}&#xA;&#xA;input TopCompetitorsInputElement {&#xA;  id: Int&#xA;  customers_top_competitors: String&#xA;  top_competitors_url: String&#xA;}&#xA;</code></pre>&#xA;<p>No matter what I try graphql doesn't like the array's index.  Comes back with this error...</p>&#xA;<pre><code>react_devtools_backend.js:4026 [GraphQL error]: Message: Variable &quot;$data&quot; got invalid value &#xA;{ 0: { id: 1, customers_top_competitors: &quot;asdfasd&quot;, top_competitors_url: &quot;https://www.asdfasd.com/&quot;, &#xA;__typename: &quot;TopCompetitors&quot; } }; Field &quot;0&quot; is not defined by type TopCompetitorsInput., Location: [object Object], Path: undefined&#xA;</code></pre>&#xA;<p>Appreciate any guidance!</p>&#xA;<p>EDIT:</p>&#xA;<p>Per @Disco's request here's how I'm getting the array from the database</p>&#xA;<pre><code>  let { data: all_data } = useQuery(GET_TOP_COMPETITORS, {&#xA;    skip: !state.customers?.selected?.id,&#xA;    variables: { customer_id: state.customers?.selected?.id },&#xA;  });&#xA;&#xA;  useEffect(() =&gt; {&#xA;    setcompetitorData(all_data?.getTopCompetitors);&#xA;  }, [all_data]);&#xA;</code></pre>&#xA;<p>and a user can add elements to the array...</p>&#xA;<pre><code>  const AddCompetitor = () =&gt;&#xA;  {&#xA;    if(highestCompetitorID){&#xA;      //competitorData.push({id: highestCompetitorID, customers_top_competitors: '', top_competitors_url: ''}); &#xA;      setcompetitorData((competitorData) =&gt; [...competitorData, {id: highestCompetitorID, customers_top_competitors: '', top_competitors_url: ''}])&#xA;      sethighestCompetitorID(competitorData[competitorData.length - 1].id + 1)&#xA;    }else {&#xA;      //competitorData.push({id: 1, customers_top_competitors: '', top_competitors_url: ''}); &#xA;      setcompetitorData((competitorData) =&gt; [...competitorData, {id: 1, customers_top_competitors: '', top_competitors_url: ''}]); &#xA;      sethighestCompetitorID(competitorData[competitorData.length - 1].id + 1)&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>EDIT 2:  here is the result of console.log(JSON.stringify(competitorData));...</p>&#xA;<p>[{&quot;id&quot;:1,&quot;customers_top_competitors&quot;:&quot;sdfasfdfasdfsd&quot;,&quot;top_competitors_url&quot;:&quot;https://www.asdfdfasd.com/&quot;,&quot;__typename&quot;:&quot;TopCompetitors&quot;}]</p>&#xA;<p>EDIT 3: Played around with the graphql interface and tried the data like my react is sending.  Plus have one that was successful.</p>&#xA;<p><a href=""https://i.stack.imgur.com/J3wHg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J3wHg.png"" alt=""enter image description here"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/mm5nE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mm5nE.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Final Edit:</p>&#xA;<p>So I found a way to make my code work by passing the array elements 1 by 1.  This can't be the best way.  But maybe this will help someone else.  Here's what worked...</p>&#xA;<pre><code>&lt;Button&#xA;  color=&quot;orange&quot;&#xA;  type=&quot;submit&quot;&#xA;  onClick={() =&gt; {&#xA;    for(let x = 0; x &lt; competitorData?.length; x++)&#xA;    {&#xA;      updateCustomerCompetitors({&#xA;        variables: {&#xA;          customer_id: state.customers?.selected?.id,&#xA;          data: omit(competitorData[x], [&quot;__typename&quot;])&#xA;        }&#xA;      })&#xA;    }&#xA;  }&#xA;}&#xA;&gt;&#xA;  Submit&#xA;&lt;/Button&gt;&#xA;</code></pre>&#xA;",884345,,884345,2022-11-13 19:30:05,2022-11-13 19:30:05,How do I pass an array of arrays to graphql?,<reactjs><arrays><graphql>,1,5,0,2022-11-02 15:33:47
74299658,1,74319616,,0,37,"<p>Following other answers, it seems that the recommended way of building dynamic query is to use fragments in this manner:</p>&#xA;<pre><code>const series1Q = gql`&#xA;  fragment series1 on timeseriesDataQuery {&#xA;    series1: timeseriesData(sourceId: &quot;source1&quot;) {&#xA;      data {&#xA;        time&#xA;        value&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;const series2Q = gql`&#xA;  fragment series2 on timeseriesDataQuery {&#xA;    series2: timeseriesData(sourceId: &quot;source2&quot;) {&#xA;      data {&#xA;        time&#xA;        value&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And joining them with:</p>&#xA;<pre><code>export const mainQuery = gql`&#xA;    query fetchData {&#xA;      ...series1 &#xA;      ...series2&#xA;    }&#xA;    ${series1Q}&#xA;    ${series2Q}&#xA;`  &#xA;</code></pre>&#xA;<p>However in my case, I do not know the number of items as the user can add a number of item to it so I end up with an array eg,</p>&#xA;<pre><code>const series = &#xA;[&#xA;    gql`&#xA;        fragment series1 on timeseriesDataQuery {&#xA;            series1: timeseriesData(sourceId: &quot;source1&quot;) {&#xA;                data {&#xA;                    time&#xA;                    value&#xA;                }&#xA;            }&#xA;        }&#xA;    `,&#xA;    gql`&#xA;        fragment series2 on timeseriesDataQuery {&#xA;            series2: timeseriesData(sourceId: &quot;source2&quot;) {&#xA;                data {&#xA;                    time&#xA;                    value&#xA;                }&#xA;            }&#xA;        }&#xA;    `&#xA;]&#xA;</code></pre>&#xA;<p>I cant seem to join them in the gql func, have tried different ways eg,</p>&#xA;<pre><code>export const mainQuery = gql`&#xA;    ${...series}&#xA;    query fetchData {&#xA;      ...series1 &#xA;      ...series2&#xA;    }&#xA;`  &#xA;</code></pre>&#xA;<p>or</p>&#xA;<pre><code>export const mainQuery = gql`&#xA;    {...series}&#xA;    query fetchData {&#xA;      ...series1 &#xA;      ...series2&#xA;    }&#xA;`  &#xA;</code></pre>&#xA;<p>and all seems to be in the wrong format,</p>&#xA;<p>CodeSandbox: <a href=""https://codesandbox.io/s/compassionate-germain-hs16ti?file=/src/App.tsx"" rel=""nofollow noreferrer"">https://codesandbox.io/s/compassionate-germain-hs16ti?file=/src/App.tsx</a></p>&#xA;<p>Have anyone managed to create a dynamic query from array?</p>&#xA;",2442424,,2442424,2022-11-04 02:28:55,2022-11-04 15:47:36,GraphQL Dynamically build fragment from array,<javascript><node.js><typescript><graphql><apollo>,2,0,0,2022-11-03 07:55:20
74314670,1,74342767,,0,33,"<p>If I &quot;declare&quot; a request in one swoop like this, it works:</p>&#xA;<pre><code>payload := strings.NewReader(`query {&#xA;        node(id: &quot;gid://shopify/BulkOperation/2000000011111&quot;) {&#xA;          ... on BulkOperation {&#xA;                url&#xA;                partialDataUrl&#xA;                }&#xA;            }&#xA;        }`)&#xA;</code></pre>&#xA;<p>However, the <code>gid</code> field is changing, so I cannot hard-code it like above. So I did the following (<code>queryId</code> is a variable):</p>&#xA;<pre><code>s := `query {&#xA;        node(id: &quot;` + queryId + `&quot;) {&#xA;          ... on BulkOperation {&#xA;                url&#xA;                partialDataUrl&#xA;                }&#xA;            }&#xA;        }`&#xA;&#xA;    client := &amp;http.Client{}&#xA;    req, err := http.NewRequest(method, url, strings.NewReader(s))&#xA;</code></pre>&#xA;<p>And the result is not correct, compared to when I hard code it. Seems like the <code>gid</code> was not added in properly, resulting in empty reponse.</p>&#xA;<p>The original Python code is:</p>&#xA;<pre><code>data_query = '''&#xA;    query {&#xA;      node(id: &quot;%s&quot;) {&#xA;        ... on BulkOperation {&#xA;          url&#xA;          partialDataUrl&#xA;        }&#xA;      }&#xA;    }&#xA;    ''' % bulkopr_id&#xA;</code></pre>&#xA;",19637150,,,,2022-11-07 06:35:37,Make Golang graphql query without adding string,<go><graphql>,1,1,0,2022-11-04 09:19:16
74316287,1,,,1,31,"<p>I'm trying to write a GraphQL query to fetch data from an AWS DataExchange provider based on their company's API specification.</p>&#xA;<p>However, every query I've written so far isn't returning any data.</p>&#xA;<p>I've verified that all my AWS credentials and IAM keys are correct.</p>&#xA;<p>Could you please help me write the correct query based on the API specification given by the data provider.</p>&#xA;<p>My current request 'body' looks like below:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>Body: JSON.stringify({&#xA;  content: {&#xA;      &quot;application/graphql&quot;: {&#xA;        &quot;schema&quot;: {&#xA;          &quot;$ref&quot;: &quot;#/components/schemas/CatalogSearchRequest&quot;&#xA;        },&#xA;        query: `query availablemetadatarecord(limit: 10 content: { catalogProperties: { vendor: { eq: &quot;EYE&quot; } } }) {&#xA;                 assignedId&#xA;        }&#xA;      }`&#xA;      }&#xA;  }&#xA;}),&#xA;&#xA;</code></pre>&#xA;<p>The DataExchange provider's actual API specification looks like below.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;  &quot;openapi&quot;: &quot;3.0.1&quot;,&#xA;  &quot;info&quot;: {&#xA;    &quot;title&quot;: &quot;image-services&quot;,&#xA;    &quot;description&quot;: &quot;API Gateway for integration of Platform Services into AWS Data Exchange&quot;,&#xA;    &quot;version&quot;: &quot;2022-03-03T20:04:18Z&quot;&#xA;  },&#xA;  &quot;servers&quot;: [&#xA;    {&#xA;      &quot;url&quot;: &quot;&quot;&#xA;    }&#xA;  ],&#xA;  &quot;paths&quot;: {&#xA;    &quot;/psdm/graphql&quot;: {&#xA;      &quot;post&quot;: {&#xA;        &quot;requestBody&quot;: {&#xA;          &quot;description&quot;: &quot;GraphQL query for the Catalog in the form of:\n\n  `{\n    availablemetadatarecord(\n      QUERYPARAMS\n    ) { \n      FIELDLIST\n    } \n  }`\n&quot;,&#xA;          &quot;content&quot;: {&#xA;            &quot;application/graphql&quot;: {&#xA;              &quot;schema&quot;: {&#xA;                &quot;$ref&quot;: &quot;#/components/schemas/CatalogSearchRequest&quot;&#xA;              },&#xA;              &quot;examples&quot;: {&#xA;                &quot;Limit returned data&quot;: {&#xA;                  &quot;description&quot;: &quot;Limit the number of records in a response.\n\nIn your query, simply specify `limit: &lt;int&gt;` \n&quot;,&#xA;                  &quot;value&quot;: &quot;{\n  availablemetadatarecord(\n    limit: 10\n    content: { catalogProperties: { vendor: { eq: \&quot;EYE\&quot; } } }\n  ) {\n    assignedId\n  }\n}\n&quot;&#xA;                }&#xA;              }&#xA;            }&#xA;          },&#xA;          &quot;required&quot;: true&#xA;        },&#xA;        &quot;responses&quot;: {&#xA;          &quot;200&quot;: {&#xA;            &quot;description&quot;: &quot;200 response&quot;,&#xA;            &quot;content&quot;: {&#xA;              &quot;application/json&quot;: {&#xA;                &quot;schema&quot;: {&#xA;                  &quot;$ref&quot;: &quot;#/components/schemas/CatalogSearchResponse&quot;&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        },&#xA;        &quot;security&quot;: [&#xA;          {&#xA;            &quot;sigv4&quot;: []&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  },&#xA;  &quot;components&quot;: {&#xA;    &quot;schemas&quot;: {&#xA;      &quot;CatalogSearchRequest&quot;: {&#xA;        &quot;title&quot;: &quot;CatalogSearchRequest&quot;,&#xA;        &quot;type&quot;: &quot;object&quot;&#xA;      },&#xA;      &quot;CatalogSearchResponse&quot;: {&#xA;        &quot;title&quot;: &quot;Catalog Search Response&quot;,&#xA;        &quot;required&quot;: [&#xA;          &quot;data&quot;,&#xA;          &quot;paginationInfo&quot;&#xA;        ],&#xA;        &quot;type&quot;: &quot;object&quot;,&#xA;        &quot;properties&quot;: {&#xA;          &quot;paginationInfo&quot;: {&#xA;            &quot;type&quot;: &quot;object&quot;,&#xA;            &quot;properties&quot;: {&#xA;              &quot;recordsInPage&quot;: {&#xA;                &quot;type&quot;: &quot;integer&quot;&#xA;              },&#xA;              &quot;nextOffset&quot;: {&#xA;                &quot;type&quot;: &quot;integer&quot;&#xA;              }&#xA;            }&#xA;          },&#xA;          &quot;data&quot;: {&#xA;            &quot;type&quot;: &quot;object&quot;,&#xA;            &quot;properties&quot;: {&#xA;              &quot;availablemetadatarecord&quot;: {&#xA;                &quot;type&quot;: &quot;array&quot;,&#xA;                &quot;description&quot;: &quot;Records returned by query&quot;,&#xA;                &quot;items&quot;: {&#xA;                  &quot;type&quot;: &quot;object&quot;&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    &quot;securitySchemes&quot;: {&#xA;      &quot;sigv4&quot;: {&#xA;        &quot;type&quot;: &quot;apiKey&quot;,&#xA;        &quot;name&quot;: &quot;Authorization&quot;,&#xA;        &quot;in&quot;: &quot;header&quot;,&#xA;        &quot;x-amazon-apigateway-authtype&quot;: &quot;awsSigv4&quot;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;",3639372,,3639372,2022-11-04 18:12:00,2022-11-04 18:12:00,Having trouble writing the correct GraphQL query in Node.JS for an AWS DataExchange Provider's API specification,<javascript><node.js><amazon-web-services><graphql>,0,0,0,2022-11-04 11:25:11
74322757,1,74436520,,1,92,"<p>I am scraping some data from GitHub. The RESTful URL to this particular PR shows that it has a <code>merge_commit_sha</code> value: <a href=""https://api.github.com/repos/ansible/ansible/pulls/15088"" rel=""nofollow noreferrer"">https://api.github.com/repos/ansible/ansible/pulls/15088</a></p>&#xA;<p>However, when I try to get the same PR using GitHub GraphQL API, it shows it does not have any <code>mergedCommit</code> value.</p>&#xA;<pre><code>  resource(&#xA;    url: &quot;https://github.com/ansible/ansible/pull/15088&quot;&#xA;  ) { &#xA;    ...on PullRequest {&#xA;      id&#xA;      number&#xA;      title&#xA;      merged&#xA;      mergeCommit {&#xA;        message&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>For context, the PR of interest is actually merged and should have a merged-commit value. I am looking for an explanation of the difference between these two APIs.</p>&#xA;",5420257,,4961158,2022-11-14 17:33:11,2022-11-14 18:55:17,GitHub REST and GraphQL API are returning different data,<rest><github><graphql><github-api><github-graphql>,2,0,0,2022-11-04 20:43:09
74335528,1,,,0,22,"<p>I'm trying to fetch data from an AWS DataExchange provider based on their company's API specification.</p>&#xA;<p>I'm using the AWS Node.JS NPM modules 'aws-sdk' and '@aws-sdk/client-dataexchange'.</p>&#xA;<p>However, every query I've written is returning the error '404: Asset not found'.</p>&#xA;<p>I'm subscribed to use the API and I've verified that all my AWS credentials, policies and IAM keys give me permission to access the API.</p>&#xA;<p>Could someone please help me identify what's wrong with my query in relation to the API specification.</p>&#xA;<p>Thanks!</p>&#xA;<p>The response I get looks like below:</p>&#xA;<pre><code>&#xA;404: Asset not found&#xA;&#xA;  '$fault': 'client',&#xA;  '$metadata': {&#xA;    httpStatusCode: 404,&#xA;    requestId: 'b7e6e691-xxxxxxx7657201138a4',&#xA;    extendedRequestId: undefined,&#xA;    cfId: 'dBQBwlCE8cXp4--xxxxxxxxxxx3j2lTfxywUezCPEA6nusJCJg==',&#xA;    attempts: 1,&#xA;    totalRetryDelay: 0&#xA;  },&#xA;  ResourceType: 'ASSET',&#xA;  ResourceId: 'e055c882bde1fa3xxxxxxxxx'&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>My current request 'body' looks like below:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>&#xA;Body: JSON.stringify({&#xA;  &quot;description&quot;: &quot;GraphQL query for the Ursa Space Imagery Catalog.&quot;,&#xA;  &quot;content&quot;: {&#xA;    &quot;application/graphql&quot;: {&#xA;      &quot;schema&quot;: {&#xA;        &quot;$ref&quot;: &quot;#/components/schemas/CatalogSearchRequest&quot;&#xA;        },&#xA;        &quot;query&quot;: {&#xA;          &quot;description&quot;: &quot;Limit the number of records in a response.&quot;,&#xA;          &quot;value&quot;:&quot;{\n  availablemetadatarecord(\n    limit: 20\n    content: { catalogProperties: { vendor: { eq: \&quot;ICEYE\&quot; } } }\n  ) {\n    assignedId\n  }\n}\n&quot;&#xA;          }&#xA;          }&#xA;          },&#xA;          &quot;required&quot;: true&#xA;          }),&#xA;&#xA;</code></pre>&#xA;<p>The DataExchange provider's actual API specification looks like below:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>&#xA;{&#xA;  &quot;openapi&quot;: &quot;3.0.1&quot;,&#xA;  &quot;info&quot;: {&#xA;    &quot;title&quot;: &quot;image-services&quot;,&#xA;    &quot;description&quot;: &quot;API Gateway for integration of Platform Services into AWS Data Exchange&quot;,&#xA;    &quot;version&quot;: &quot;2022-03-03T20:04:18Z&quot;&#xA;  },&#xA;  &quot;servers&quot;: [&#xA;    {&#xA;      &quot;url&quot;: &quot;&quot;&#xA;    }&#xA;  ],&#xA;  &quot;paths&quot;: {&#xA;    &quot;/psdm/graphql&quot;: {&#xA;      &quot;post&quot;: {&#xA;        &quot;requestBody&quot;: {&#xA;          &quot;description&quot;: &quot;GraphQL query for the Catalog in the form of:\n\n  `{\n    availablemetadatarecord(\n      QUERYPARAMS\n    ) { \n      FIELDLIST\n    } \n  }`\n&quot;,&#xA;          &quot;content&quot;: {&#xA;            &quot;application/graphql&quot;: {&#xA;              &quot;schema&quot;: {&#xA;                &quot;$ref&quot;: &quot;#/components/schemas/CatalogSearchRequest&quot;&#xA;              },&#xA;              &quot;examples&quot;: {&#xA;                &quot;Limit returned data&quot;: {&#xA;                  &quot;description&quot;: &quot;Limit the number of records in a response.\n\nIn your query, simply specify `limit: &lt;int&gt;` \n&quot;,&#xA;                  &quot;value&quot;: &quot;{\n  availablemetadatarecord(\n    limit: 10\n    content: { catalogProperties: { vendor: { eq: \&quot;EYE\&quot; } } }\n  ) {\n    assignedId\n  }\n}\n&quot;&#xA;                }&#xA;              }&#xA;            }&#xA;          },&#xA;          &quot;required&quot;: true&#xA;        },&#xA;        &quot;responses&quot;: {&#xA;          &quot;200&quot;: {&#xA;            &quot;description&quot;: &quot;200 response&quot;,&#xA;            &quot;content&quot;: {&#xA;              &quot;application/json&quot;: {&#xA;                &quot;schema&quot;: {&#xA;                  &quot;$ref&quot;: &quot;#/components/schemas/CatalogSearchResponse&quot;&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        },&#xA;        &quot;security&quot;: [&#xA;          {&#xA;            &quot;sigv4&quot;: []&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  },&#xA;  &quot;components&quot;: {&#xA;    &quot;schemas&quot;: {&#xA;      &quot;CatalogSearchRequest&quot;: {&#xA;        &quot;title&quot;: &quot;CatalogSearchRequest&quot;,&#xA;        &quot;type&quot;: &quot;object&quot;&#xA;      },&#xA;      &quot;CatalogSearchResponse&quot;: {&#xA;        &quot;title&quot;: &quot;Catalog Search Response&quot;,&#xA;        &quot;required&quot;: [&#xA;          &quot;data&quot;,&#xA;          &quot;paginationInfo&quot;&#xA;        ],&#xA;        &quot;type&quot;: &quot;object&quot;,&#xA;        &quot;properties&quot;: {&#xA;          &quot;paginationInfo&quot;: {&#xA;            &quot;type&quot;: &quot;object&quot;,&#xA;            &quot;properties&quot;: {&#xA;              &quot;recordsInPage&quot;: {&#xA;                &quot;type&quot;: &quot;integer&quot;&#xA;              },&#xA;              &quot;nextOffset&quot;: {&#xA;                &quot;type&quot;: &quot;integer&quot;&#xA;              }&#xA;            }&#xA;          },&#xA;          &quot;data&quot;: {&#xA;            &quot;type&quot;: &quot;object&quot;,&#xA;            &quot;properties&quot;: {&#xA;              &quot;availablemetadatarecord&quot;: {&#xA;                &quot;type&quot;: &quot;array&quot;,&#xA;                &quot;description&quot;: &quot;Records returned by query&quot;,&#xA;                &quot;items&quot;: {&#xA;                  &quot;type&quot;: &quot;object&quot;&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    &quot;securitySchemes&quot;: {&#xA;      &quot;sigv4&quot;: {&#xA;        &quot;type&quot;: &quot;apiKey&quot;,&#xA;        &quot;name&quot;: &quot;Authorization&quot;,&#xA;        &quot;in&quot;: &quot;header&quot;,&#xA;        &quot;x-amazon-apigateway-authtype&quot;: &quot;awsSigv4&quot;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;",3639372,,3639372,2022-11-07 06:16:04,2022-11-07 06:16:04,AWS DataExchange API fetch returning response '404: Asset not found',<javascript><node.js><amazon-web-services><graphql>,0,2,0,2022-11-06 11:39:18
74342767,2,,74314670,0,,"<p>Discover the problem: Shopify needs a little time to prepare the query result. In my code I call the API too quickly after it was generated, therefore the result is empty. Simply put <code>time.Sleep(3*time.Second)</code> and the response will not be empty.</p>&#xA;",19637150,,,,2022-11-07 06:35:37,"",,0,0,0,2022-11-07 06:35:37
74344463,1,,,0,32,"<p>Is there anyway to filter against the __typename of an interface? We have an interface Product with four implementations as seen in the screenshot.&#xA;On our GraphQL endpoint we have only one query being on the product interface.&#xA;Should this be split up to be one endpoint per specific type or is there any way to achieve a result to make the following query possible?</p>&#xA;<pre><code>query {&#xA;  products(where: { __typename: { eq: &quot;Foo&quot; }}) {&#xA;    nodes {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/rEDYM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rEDYM.png"" alt=""enter image description here"" /></a></p>&#xA;",4873908,,,,2022-11-07 09:35:15,Filter on __typename in GraphQL HC,<c#><graphql><hotchocolate>,0,0,0,2022-11-07 09:35:15
74351646,1,,,0,9,"<p>I want to query all the products no user has viewed.</p>&#xA;<p>The structure is</p>&#xA;<pre><code>model Products {&#xA;  id    string&#xA;  views Views[]&#xA;}&#xA;&#xA;model Views {&#xA;  id        string&#xA;  createdAt DateTime&#xA;  user      User&#xA;}&#xA;&#xA;model User {&#xA;  id    string&#xA;  email string&#xA;}&#xA;</code></pre>&#xA;<p>I want to get all the products that no one has viewed. The following query is not working, but I think it should be similar (if this is possible)</p>&#xA;<pre><code>query {&#xA;    Products(where: { views: { is: empty }}) {&#xA;      id&#xA;      views&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",2853555,,,,2022-11-07 19:04:19,Apollo GraphQL returns an empty field,<postgresql><apollo><apollo-client><prisma-graphql>,0,3,0,2022-11-07 19:04:19
74364628,1,,,0,48,"<p>I have a requirement of getting all the products details(i want every detail like id,body,title,vendor,body_html,product_type etc of the each product) from a particular shop in shopify .I want to get same data as we get in ('/products.json?limit=250') Admin API request .I wanted to use bulk query to solve this.i have gone through the shopify Admin GraphQl API Docs. I was not able to find a query which will give all the product details in the shop.</p>&#xA;<p>I have tried below query.</p>&#xA;<pre><code>query = '''&#xA;    mutation {&#xA;        bulkOperationRunQuery(&#xA;        query : &quot;&quot;&quot;&#xA;            {&#xA;                products {&#xA;                    edges {&#xA;                        node {&#xA;                            id&#xA;                            title&#xA;                            vendor&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        &quot;&quot;&quot;&#xA;        ){&#xA;        bulkOperation {&#xA;                id&#xA;                status&#xA;        }&#xA;        userErrors {&#xA;            field&#xA;            message&#xA;        }&#xA;    }&#xA;}'''&#xA;shopify.GraphQL().execute(query)&#xA;</code></pre>&#xA;<p>the above query is executing properly. I am getting the below success response.</p>&#xA;<p>'{&quot;data&quot;:{&quot;bulkOperationRunQuery&quot;:{&quot;bulkOperation&quot;:{&quot;id&quot;:&quot;gid:\/\/shopify\/BulkOperation\/2061234200041&quot;,&quot;status&quot;:&quot;CREATED&quot;},&quot;userErrors&quot;:[]}},&quot;extensions&quot;:{&quot;cost&quot;:{&quot;requestedQueryCost&quot;:10,&quot;actualQueryCost&quot;:10,&quot;throttleStatus&quot;:{&quot;maximumAvailable&quot;:1000.0,&quot;currentlyAvailable&quot;:990,&quot;restoreRate&quot;:50.0}}}}'</p>&#xA;<p>but when i add extra field like product_type then it throwing me an error.</p>&#xA;<pre><code>query = '''&#xA;    mutation {&#xA;        bulkOperationRunQuery(&#xA;        query : &quot;&quot;&quot;&#xA;            {&#xA;                products {&#xA;                    edges {&#xA;                        node {&#xA;                            id&#xA;                            title&#xA;                            vendor&#xA;                            product_type&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        &quot;&quot;&quot;&#xA;        ){&#xA;        bulkOperation {&#xA;                id&#xA;                status&#xA;        }&#xA;        userErrors {&#xA;            field&#xA;            message&#xA;        }&#xA;    }&#xA;}'''&#xA;#print(query)&#xA;shopify.GraphQL().execute(query)&#xA;</code></pre>&#xA;<p>output:</p>&#xA;<p>'{&quot;data&quot;:{&quot;bulkOperationRunQuery&quot;:{&quot;bulkOperation&quot;:null,&quot;userErrors&quot;:[{&quot;field&quot;:[&quot;query&quot;],&quot;message&quot;:&quot;<strong>Invalid bulk query</strong>: Field 'product_type' doesn't exist on type 'Product'&quot;}]}},&quot;extensions&quot;:{&quot;cost&quot;:{&quot;requestedQueryCost&quot;:10,&quot;actualQueryCost&quot;:10,&quot;throttleStatus&quot;:{&quot;maximumAvailable&quot;:1000.0,&quot;currentlyAvailable&quot;:990,&quot;restoreRate&quot;:50.0}}}}'</p>&#xA;<p>As anyone used bulk query to get all the products details from shopify for particular store? if yes , would you help me by posting the query here.</p>&#xA;",18908925,,,,2022-11-08 18:38:49,Shopify-Bulk query to get all the products details,<graphql><shopify>,1,3,0,2022-11-08 17:09:59
74368998,1,,,-1,29,"<p>My problem is that if there is no entry under the given query, it throws an error in GraphQL. I found a solution to create my own custom schema, and it worked, but once I have an entry, one property always returns null to me.</p>&#xA;<p>I need to allow my application to use query in case they are entry and there is no.</p>&#xA;<p>Query:</p>&#xA;<pre><code>    const query = graphql`&#xA;    query {&#xA;&#xA;        welcomecontent: contentfulOMnieAboutMeSubpageContent(contentfulid: { eq: &quot;example&quot; }) {&#xA;            content {&#xA;                content&#xA;            }&#xA;            toUseThis&#xA;        }&#xA;        dynamicwelcomeimage: contentfulAboutMeSubpageImage(contentfulid: { eq: &quot;example&quot; }) {&#xA;            image {&#xA;                gatsbyImageData&#xA;            }&#xA;            useThis&#xA;        }&#xA;    }&#xA;`;&#xA;&#xA;</code></pre>&#xA;<p>I created this code in the <a href=""/questions/tagged/gatsby-node.js"" class=""post-tag"" title=""show questions tagged &#39;gatsby-node.js&#39;"" aria-label=""show questions tagged &#39;gatsby-node.js&#39;"" rel=""tag"" aria-labelledby=""gatsby-node.js-container"">gatsby-node.js</a> file:</p>&#xA;<pre><code>&#xA;exports.createSchemaCustomization = ({ actions, schema }) =&gt; {&#xA;    const { createTypes } = actions;&#xA;&#xA;    const types = [&#xA;        schema.buildObjectType({&#xA;            name: &quot;ContentfulAboutMeSubpageContentContentTextNodeTest&quot;,&#xA;            fields: {&#xA;                content: {&#xA;                    type: &quot;String!&quot;,&#xA;                    resolve: ({ content }) =&gt; content || null&#xA;                },&#xA;            },&#xA;            interfaces: ['Node']&#xA;        }),&#xA;&#xA;        schema.buildObjectType({&#xA;            name: &quot;ContentfulAboutMeSubpageContent&quot;,&#xA;            fields: {&#xA;                contentfulid: &quot;String!&quot;,&#xA;                toUseThis: &quot;Boolean&quot;,&#xA;                content: {&#xA;                    type: &quot;ContentfulAboutMeSubpageContentContentTextNodeTest&quot;,&#xA;                    resolve: ({content}) =&gt; content || null&#xA;                }&#xA;            },&#xA;            interfaces: ['Node']&#xA;        }),&#xA;&#xA;        schema.buildObjectType({&#xA;            name: &quot;ContentfulAboutMeSubpageImage&quot;,&#xA;            fields: {&#xA;                contentfulid: &quot;String!&quot;,&#xA;                useThis: &quot;Boolean&quot;,&#xA;                image: {&#xA;                    type: &quot;ContentfulAsset&quot;&#xA;                }&#xA;            },&#xA;            interfaces: ['Node']&#xA;        })&#xA;    ]&#xA;&#xA;    createTypes(types)&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>But when I have entry graphql it returns null for content.content:</p>&#xA;<pre><code>          &quot;contentfulid&quot;: &quot;example&quot;,&#xA;          &quot;toUseThis&quot;: true,&#xA;          &quot;content&quot;: null&#xA;&#xA;</code></pre>&#xA;<p>and i need to get this:</p>&#xA;<pre><code>          &quot;contentfulid&quot;: &quot;example&quot;,&#xA;          &quot;toUseThis&quot;: true,&#xA;          &quot;content&quot;: {&#xA;            &quot;content&quot;: &quot;example string&quot;&#xA;          }&#xA;&#xA;&#xA;</code></pre>&#xA;<p>the same thing happens if I want to get an image from ContentfulAboutMeSubpageImage query.</p>&#xA;<p>Please help me, I have to finish it by the end of the week :/&#xA;Thanks a lot</p>&#xA;",19860130,,19860130,2022-11-09 16:48:44,2022-11-09 16:48:44,Gatsby - Allowing to create a query for a nonexistent entry,<reactjs><graphql><gatsby><contentful><headless-cms>,0,0,0,2022-11-09 01:33:27
74372662,1,,,0,28,"<p>I've been learning frontend for several months and i would like to create with CRA simple Garmin app with dashboard with ranking of Garmin github contributors (<a href=""https://github.com/garmin"" rel=""nofollow noreferrer"">https://github.com/garmin</a>) to my portfolio.</p>&#xA;<p>I would like to make rank of Garmin contributors sortable by:</p>&#xA;<ul>&#xA;<li>the highest number of contributions made in ALL garmin repositories (<a href=""https://github.com/orgs/garmin/repositories"" rel=""nofollow noreferrer"">https://github.com/orgs/garmin/repositories</a>)</li>&#xA;<li>the highest number of followers</li>&#xA;</ul>&#xA;<p><strong>I'm not sure about correct way where i go. I understand that i should:</strong></p>&#xA;<ol>&#xA;<li>at first fetch all <em>repos</em> from <em>garmin</em> organization page (API: <a href=""https://api.github.com/orgs/garmin/repos"" rel=""nofollow noreferrer"">https://api.github.com/orgs/garmin/repos</a>)</li>&#xA;<li>then i should should make next fetch function for every <em>repo</em> from <em>garmin organizatio</em>n (for example <a href=""https://api.github.com/repos/garmin/connectiq-apps/contributors"" rel=""nofollow noreferrer"">https://api.github.com/repos/garmin/connectiq-apps/contributors</a> to get *all contributors *from this <em>repo</em></li>&#xA;<li>then in every <em>repo</em> (for example <a href=""https://api.github.com/repos/garmin/connectiq-apps/contributors"" rel=""nofollow noreferrer"">https://api.github.com/repos/garmin/connectiq-apps/contributors</a> ) i need to take &quot;<em>login</em>&quot; and &quot;<em>contributions</em>&quot; property and save it in my state (for example &quot;<em>data</em>&quot;)</li>&#xA;<li>then i need make another fetch call to get <em>followers</em> for every user (for example <a href=""https://api.github.com/users/BrandonConnectIQ/followers"" rel=""nofollow noreferrer"">https://api.github.com/users/BrandonConnectIQ/followers</a>) and also save it in my state</li>&#xA;<li>I need to make steps 2 and 3 for every <em>repo</em> in <em>garmin organization</em> and <strong>count contributors</strong> property (adding contributors for each <em>user</em> in each <em>repo</em>)</li>&#xA;</ol>&#xA;<p>Maybe there is better way to do this project? Is it possible to solve the above with graphql?</p>&#xA;<p><strong>Thank you for any ideas!</strong></p>&#xA;",20456853,,,,2022-11-09 09:36:26,Promise chaining & graphQl to fetch github data?,<reactjs><promise><graphql><fetch><github-api>,0,0,0,2022-11-09 09:36:26
74372705,2,,74366649,1,,"<p>I am Charly, working on GraphQL Code Generator.</p>&#xA;<p>I can confirm that codegen does not support <code>useQueries()</code> for now.&#xA;Feel free to submit an issue or a PR on the repository: <a href=""https://github.com/dotansimha/graphql-code-generator-community/issues/new?assignees=&amp;labels=&amp;template=feature-request.md"" rel=""nofollow noreferrer"">https://github.com/dotansimha/graphql-code-generator-community/issues/new?assignees=&amp;labels=&amp;template=feature-request.md</a></p>&#xA;",3738219,,,,2022-11-09 09:39:28,"",,0,1,0,2022-11-09 09:39:28
74378994,2,,60830193,0,,"<p>If you want to perform multiple calls to <code>useQuery</code> then you can't do that in a forEach, map etc. You need to use <code>useQueries</code> e.g.</p>&#xA;<pre><code>function Products({ productIds }) {&#xA;  const productQueries = useQueries({&#xA;    queries: productIds.map(productId =&gt; {&#xA;      return {&#xA;        queryKey: ['productById', productId],&#xA;        queryFn: () =&gt; fetchProductById(productId),&#xA;      }&#xA;    })&#xA;  })&#xA;</code></pre>&#xA;<p>Example taken from: <a href=""https://tanstack.com/query/v4/docs/guides/parallel-queries"" rel=""nofollow noreferrer"">https://tanstack.com/query/v4/docs/guides/parallel-queries</a></p>&#xA;",842238,,,,2022-11-09 17:26:44,"",,0,0,0,2022-11-09 17:26:44
74381251,2,,74381189,0,,"<p>eventsAd is an object, so you can't use the map method. Map only works on arrays.&#xA;What you can do is</p>&#xA;<p>eventsAd[&quot;Featured Events&quot;].map((item) =&gt; {});</p>&#xA;<p>or</p>&#xA;<p>eventsAd.International.map((item) =&gt; {});</p>&#xA;",12194627,,,,2022-11-09 20:53:37,"",,0,0,0,2022-11-09 20:53:37
74384376,2,,74322757,0,,"<p>Feel like it is a bug to me because if you query another PR such as <a href=""https://api.github.com/repos/ansible/ansible/pulls/45454"" rel=""nofollow noreferrer"">45454</a> , it can return the <code>mergeCommit</code>:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;resource&quot;: {&#xA;      &quot;id&quot;: &quot;MDExOlB1bGxSZXF1ZXN0MjE0NDYyOTY2&quot;,&#xA;      &quot;number&quot;: 45454,&#xA;      &quot;title&quot;: &quot;win_say - fix up syntax and test issues (#45450)&quot;,&#xA;      &quot;merged&quot;: true,&#xA;      &quot;mergeCommit&quot;: {&#xA;        &quot;message&quot;: &quot;win_say - fix up syntax and test issues (#45450)\n\n\n(cherry picked from commit c9c141fb6a51d6b77274958a2340fa54754db692)&quot;,&#xA;        &quot;oid&quot;: &quot;f2d5954d11a1707cdb70b01dfb27c722b6416295&quot;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Also find out other encountered the same problem at <a href=""https://github.com/SourceCred/SourceCred/issues/622#issuecomment-434855718"" rel=""nofollow noreferrer"">this</a> and another similar issue at <a href=""https://github.com/orgs/community/discussions/24669"" rel=""nofollow noreferrer"">this</a>. I suggest you can try to raise this issue to them at <a href=""https://github.com/orgs/community/discussions/categories/api-and-webhooks"" rel=""nofollow noreferrer"">this</a>.</p>&#xA;",339637,,,,2022-11-10 05:04:50,"",,0,0,0,2022-11-10 05:04:50
74385480,1,,,0,18,<p>How to change the default branch of a repository by using graphql api. I write the query to get the default branch but I didn’t able to find how to change with another branch.</p>&#xA;<p>Thabkyou for the response</p>&#xA;<p>Please help to write a query to change the default branch</p>&#xA;,20460228,,,,2022-11-10 07:30:10,GitHub Graphql query,<github><graphql><repository><typegraphql><github-graphql>,0,0,0,2022-11-10 07:30:10
74385758,2,,74001475,0,,"<p>To find <code>your-graph-id@your-graph-variant</code>, log in to the apollo sutdio, got to <code>settings</code> and under the <code>This Graph</code> tab, look at the first section of <code>General</code> settings, you should find <code>your-graph-id</code>.</p>&#xA;<p>The <code>variant</code> is usually defaulted as <code>current</code>, i.e <code>variant=current</code>. If you have specified a different variant, be sure to use it.</p>&#xA;<p>In your <code>.env</code> you'd have to specify these two keys:</p>&#xA;<pre><code>APOLLO_KEY=&lt;your-apollo-api-key&gt;&#xA;APOLLO_GRAPH_REF=&lt;your-graph-id&gt;@&lt;current-or-your-variant&gt;&#xA;</code></pre>&#xA;<p>Restart your server and you should be good.</p>&#xA;",8651865,,,,2022-11-10 07:57:51,"",,0,0,0,2022-11-10 07:57:51
74420098,2,,74419964,0,,"<p>Try settings the data directly to the products state (remove the array) like ths:</p>&#xA;<pre><code>const [products,setProducts] = useState(data);&#xA;</code></pre>&#xA;",9719646,,9719646,2022-11-13 10:41:51,2022-11-13 10:41:51,"",,0,4,0,2022-11-13 10:22:54
74420310,2,,74419964,0,,"<p>few pointer the may help</p>&#xA;<pre><code> transform the reponse and filter the items as needed&#xA;&#xA;  const { loading, error, data = [] } = useQuery(GET_CLOTHES);&#xA;  const [products,setProducts] = useState(data);&#xA;  const [index,setIndex] = useState(0)&#xA;&#xA;  const transformedResponse = useMemo(() =&gt; {&#xA;    try {&#xA;    // put checks and use try catch to handle errors&#xA;    const productsList = [];&#xA;&#xA;    // check for null data&#xA;    const items = data ?? []&#xA;&#xA;    for (const category of items) {&#xA;      const products = category?.products ?? [];&#xA;      productsList.push(...products)&#xA;    }&#xA;&#xA;    return productsList&#xA;   } catch(error) {&#xA;      // log error &#xA;      return []&#xA;   }&#xA;  }, [data)]&#xA;&#xA;  return (&#xA;     ...&#xA;     {&#xA;       transformedResponse.map(prod =&gt; {&#xA;&#xA;          return (&lt;Prod key={prod.id} {...prod} /&gt;)&#xA;       }&#xA;     }&#xA;  )&#xA;</code></pre>&#xA;<p>Docs on <a href=""https://beta.reactjs.org/learn/updating-arrays-in-state"" rel=""nofollow noreferrer"">working with arrays</a></p>&#xA;<p>Hope it helps</p>&#xA;",2122822,,2122822,2022-11-13 11:28:51,2022-11-13 11:28:51,"",,0,3,0,2022-11-13 10:59:51
74422914,1,,,0,12,"<p>When a user clicks on the native &quot;buy button&quot; of an shopify store, i do want to redirect this user to my external checkout, that have completely access to shopify app api.</p>&#xA;<p>I do want to redirect to external checkout, but this external checkout must receive the parameters correctly, so it can identify the variantId's choosen on shopify store, how can i receive this variantIds on external checkout and how can i disable the redirect to cart on shopify ?</p>&#xA;<p>I want to do all this using shopify API's.&#xA;But i don't know which api's to use and how, cannot find tutorials on internet.</p>&#xA;",6550067,,,,2022-11-13 16:51:36,"How can i connect my gateway/checkout to an shopify store when user clicks on ""buy button""?",<node.js><api><graphql><shopify-app><shopify-api>,0,0,0,2022-11-13 16:51:36
74423782,2,,74423113,0,,"<p>Ok. First of all, <code>categories</code> is an array, so <code>products</code> isn't defined as a property in the array. Its items do have the <code>products</code> property.</p>&#xA;<p>Second of all, <code>products</code> is a derived state. You do not need make a separate it as its own <code>useState</code></p>&#xA;<pre><code>import {useState, useEffect,useMemo} from 'react';&#xA;import { gql, useQuery } from '@apollo/client';&#xA;import {GET_CLOTHES} from &quot;./GetClothes.js&quot;&#xA;import ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';&#xA;import ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';&#xA;&#xA;&#xA;function Clothes() {&#xA;  const { loading, error, data } = useQuery(GET_CLOTHES);&#xA;  const [index,setIndex] = useState(0);&#xA;&#xA;  if (loading) return 'Loading...'               &#xA;  if (error) return `Error! ${error.message}`&#xA;&#xA;  return &lt;div&gt;&#xA;    {&#xA;      data.categories.flatMap(x =&gt; x.products).map(product =&gt; {&#xA;        if (product.name === 'clothes') { //filter &#xA;          // Iterate through products.products to obtain the product data.&#xA;          const {name,brand,description,gallery,category} = product;&#xA;          return &lt;p&gt;{name}&lt;/p&gt;&#xA;        } else {&#xA;          return null;&#xA;        }&#xA;      })&#xA;    } &#xA;  &lt;/div&gt;&#xA;}&#xA;&#xA;export default Clothes;&#xA;</code></pre>&#xA;",11459416,,,,2022-11-13 18:47:13,"",,0,2,0,2022-11-13 18:47:13
74427501,1,74429322,,1,27,"<p>I've defined 2 types as such:</p>&#xA;<pre><code>export type Pants = {&#xA;  __typename?: 'Pants';&#xA;  id: Scalars['ObjectID'];&#xA;  price: Scalars['Int'];&#xA;  color: Scalars['String'];&#xA;};&#xA;&#xA;export type Outfits = {&#xA;  __typename?: 'Outfits';&#xA;  id: Scalars['ObjectID'];&#xA;  category: Scalars['String'];&#xA;  pants: Array&lt;Pants&gt;;&#xA;};&#xA;</code></pre>&#xA;<p>Now elsewhere in my code, I want to import the <code>Outfits</code> type but omit the <code>price</code> of the nested array of <code>Pants</code> object.</p>&#xA;<p>I'm struggling to find a proper way to do so.</p>&#xA;<p>I've tried:</p>&#xA;<pre><code>type Outfit = Omit&lt;Outfits['pants'], 'price'&gt;;&#xA;</code></pre>&#xA;<p>But that doesn't seem to work.</p>&#xA;<p>If I wanted to import my <code>Outfit</code> and omit the <code>category</code> I would do something like this:</p>&#xA;<pre><code>type Outfit = Omit&lt;Outfits, 'category'&gt;;&#xA;</code></pre>&#xA;<p>How can I import my <code>Outfits</code> type but omit the <code>price</code> of the nested array of <code>Pants</code> object?</p>&#xA;",3921371,,3921371,2022-11-14 06:11:30,2022-11-14 11:49:50,How to omit an attribute of a nested array type,<typescript><types><graphql>,1,0,0,2022-11-14 06:04:59
74436520,2,,74322757,0,,"<p><a href=""https://github.com/orgs/community/discussions/24669"" rel=""nofollow noreferrer"">This link</a> posted in the other answer contains the explanation:</p>&#xA;<blockquote>&#xA;<p>As in, Git doesn’t have the originalCommit (which makes sense).&#xA;Presumably the original commit SHA is there, but the graphQL API actually checks to see if git has it, whereas the REST API doesn’t?</p>&#xA;</blockquote>&#xA;<p>If you search for the commit SHA the API returns, you can't find it in the repo.</p>&#xA;<p><a href=""https://github.com/ansible/ansible/commit/d7b54c103050d9fc4965e57b7611a70cb964ab25"" rel=""nofollow noreferrer"">https://github.com/ansible/ansible/commit/d7b54c103050d9fc4965e57b7611a70cb964ab25</a></p>&#xA;<p>Since this is a very old pull request on an active repo, there's a good chance some old commits were cleaned up or other maintenance on the repo. It's hard to tell as that kind of maintenance obviously isn't version controlled.</p>&#xA;<p>Another option is the pull request was merged with fast-forward, which does not involve a merge commit. But that wouldn't explain the SHA on the REST API response.</p>&#xA;<p>So probably at some point they removed old merge commits to save some space, or something similar. Some objects still point to removed SHAs, but GraphQL API filters on existing objects.</p>&#xA;",4961158,,,,2022-11-14 18:55:17,"",,0,0,0,2022-11-14 18:55:17
74444535,1,,,0,16,"<p>I've been trying to retrieve all GitHub issues of a specific project using their GraphQL API.&#xA;The problem that i have is that i need to specify in the items a <code>first</code> or <code>last</code> param it doesn't work. Although by specifying one of these params i get only a partition of the issues.</p>&#xA;<p>I thought that i could get the first 100, then use pagination and get the other 100 etc until the response is an empty list. From what i read, i cannot find a parameter in the <code>items</code> that defines a page.</p>&#xA;<p>What are your thoughts on this? Is there a workaround?</p>&#xA;<p>Thanks a lot for your time.</p>&#xA;",16021270,,,,2022-11-15 11:03:59,Retrieve ALL Github issues of a specific Project using the GraphQL API,<github><github-graphql><github-api-v4>,0,0,0,2022-11-15 11:03:59
74485818,1,,,1,17,"<p>I am composing a GraphQL query that will list the names of all repositories in a GitHub Organisation. The query is:</p>&#xA;<pre><code>   search(query:$queryString, type:REPOSITORY, first: 100){&#xA;      repositoryCount&#xA;      edges{&#xA;          node{&#xA;              ... on Repository{&#xA;                  name&#xA;              }&#xA;          }&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>I need to pass a private organisation name as value in the queryString variable, whose current value is as follows:</p>&#xA;<pre><code>{&#xA;    &quot;queryString&quot;: &quot;is:public archived:false owner:MyGitHubOrganisation&quot;&#xA;}&#xA;</code></pre>&#xA;<p>This throws the following response:</p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;        &quot;search&quot;: {&#xA;            &quot;repositoryCount&quot;: 0,&#xA;            &quot;edges&quot;: []&#xA;        }&#xA;}&#xA;}&#xA;</code></pre>&#xA;<p>When I use it with <code>is:public archived:false</code>, it just lists all the unarchived public repos.&#xA;How do I fetch all the repos in an specific organisation?</p>&#xA;",14318896,,14318896,2022-11-18 09:54:22,2022-11-18 09:54:22,"While composing a GraphQL to list repositories in an Organisation, what should I pass as QueryString?",<api><github><graphql><github-api><github-graphql>,0,0,0,2022-11-18 06:45:12
74494786,2,,74476140,0,,"<p>According to the graphql rules you have to place your query inside curly braces with or without keyword query, i.e.</p>&#xA;<pre><code>{&#xA;  [your query body here]&#xA;}&#xA;</code></pre>&#xA;<p>or</p>&#xA;<pre><code>query&#xA;{&#xA;  [your query body here]&#xA;}&#xA;</code></pre>&#xA;<p>Since you didn't do that you, obviously, got an error.</p>&#xA;",876743,,,,2022-11-18 20:02:35,"",,0,0,0,2022-11-18 20:02:35
74497707,2,,74493387,1,,"<p>Adding to @Jonathan's answer:</p>&#xA;<p>If you want to generalize to &quot;give me an array of users based on an array of ids <em>and</em> you have the ability to add a mutation to the server, then define a new mutation:</p>&#xA;<pre><code>mutation getUsersFromIds(ids: [ID!]!) [User]&#xA;</code></pre>&#xA;<p>Otherwise there is no generalized looping construct in GraphQL.</p>&#xA;",2805154,,,,2022-11-19 05:11:22,"",,0,3,0,2022-11-19 05:11:22
74513700,1,,,1,19,"<p>Right now I'm building a webshop for my school guild organization.</p>&#xA;<p>I'm not very experienced with databases nor am I any good at using Knex.js</p>&#xA;<p>I have an issue when people add things to their carts, if multiple people add things to their carts at the same time sometimes they will have more items in their carts than there is quantity for in the database. I suspect that I have not fully understood transactions and how they work, but if we accidentally sell too many tickets or something similar we are in deep trouble. I would greatly appreciate help with how to do this or pointers to how I can learn to do it better.</p>&#xA;<p>This is the code I have tried as of right now to do the transaction:</p>&#xA;<pre class=""lang-js prettyprint-override""><code> private async inventoryToCartTransaction(&#xA;    cart: sql.Cart,&#xA;    inventoryId: UUID,&#xA;    quantity: number = 1,&#xA;  ) {&#xA;    return this.knex.transaction(async (trx) =&gt; {&#xA;      const inventory = await trx&lt;sql.ProductInventory&gt;(TABLE.PRODUCT_INVENTORY)&#xA;        .where({ id: inventoryId }).first();&#xA;      if (!inventory) throw new Error(`Inventory with id ${inventoryId} not found`);&#xA;      if (inventory.quantity &lt; quantity) throw new Error('Not enough inventory');&#xA;      const product = await trx&lt;sql.Product&gt;(TABLE.PRODUCT)&#xA;        .where({ id: inventory.product_id }).first();&#xA;      if (!product) throw new Error(`Product with id ${inventory.product_id} not found`);&#xA;      const cartItem = await trx&lt;sql.CartItem&gt;(TABLE.CART_ITEM)&#xA;        .where({ cart_id: cart.id, product_inventory_id: inventory.id })&#xA;        .first();&#xA;      const userInventoryItem = await trx&lt;sql.UserInventoryItem&gt;('user_inventory_item').where({&#xA;        student_id: cart.student_id,&#xA;        product_inventory_id: inventory.id,&#xA;      }).first();&#xA;      if (cartItem) {&#xA;        if ((userInventoryItem ? userInventoryItem.quantity : 0) + cartItem.quantity + quantity &gt; product.max_per_user) throw new Error('You already have the maximum amount of this product.');&#xA;        await trx&lt;sql.CartItem&gt;(TABLE.CART_ITEM).where({ id: cartItem.id }).update({&#xA;          quantity: cartItem.quantity + quantity,&#xA;        });&#xA;      } else {&#xA;        if ((userInventoryItem ? userInventoryItem.quantity : 0) + quantity &gt; product.max_per_user) throw new Error('You already have the maximum amount of this product.');&#xA;        await trx&lt;sql.CartItem&gt;(TABLE.CART_ITEM).insert({&#xA;          cart_id: cart.id,&#xA;          product_inventory_id: inventory.id,&#xA;          quantity,&#xA;        });&#xA;      }&#xA;      await trx&lt;sql.ProductInventory&gt;(TABLE.PRODUCT_INVENTORY).where({ id: inventory.id }).update({&#xA;        quantity: inventory.quantity - 1,&#xA;      });&#xA;      await trx&lt;sql.Cart&gt;(TABLE.CART).where({ id: cart.id }).update({&#xA;        total_price: cart.total_price + product.price,&#xA;        total_quantity: cart.total_quantity + quantity,&#xA;      });&#xA;    });&#xA;  }&#xA;</code></pre>&#xA;<p>This is how the data is structured in the database:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export interface Product {&#xA;  id: UUID,&#xA;  name: string,&#xA;  description: string,&#xA;  SKU: string,&#xA;  price: number,&#xA;  image_url: string,&#xA;  max_per_user: number,&#xA;  category_id: UUID,&#xA;  created_at: Date,&#xA;  updated_at: Date,&#xA;  deleted_at?: Date,&#xA;}&#xA;&#xA;export interface ProductCategory {&#xA;  id: UUID,&#xA;  name: string,&#xA;  description: string,&#xA;  created_at: Date,&#xA;  updated_at: Date,&#xA;  deleted_at?: Date,&#xA;}&#xA;&#xA;export interface ProductInventory {&#xA;  id: UUID,&#xA;  quantity: number,&#xA;  variant: string,&#xA;  discount_id?: UUID,&#xA;  product_id: UUID,&#xA;  created_at: Date,&#xA;  updated_at: Date,&#xA;  deleted_at?: Date,&#xA;}&#xA;&#xA;export interface Cart {&#xA;  id: UUID,&#xA;  student_id: UUID,&#xA;  total_price: number,&#xA;  total_quantity: number,&#xA;  created_at: Date,&#xA;  updated_at: Date,&#xA;  expires_at: Date,&#xA;}&#xA;&#xA;export interface CartItem {&#xA;  id: UUID,&#xA;  cart_id: UUID,&#xA;  product_inventory_id: UUID,&#xA;  quantity: number,&#xA;  created_at: Date,&#xA;  updated_at: Date,&#xA;}&#xA;&#xA;export interface UserInventory {&#xA;  id: UUID,&#xA;  student_id: UUID,&#xA;  created_at: Date,&#xA;  updated_at: Date,&#xA;  deleted_at?: Date,&#xA;}&#xA;&#xA;export interface UserInventoryItem {&#xA;  id: UUID,&#xA;  student_id: UUID,&#xA;  user_inventory_id: UUID,&#xA;  product_inventory_id: UUID,&#xA;  quantity: number,&#xA;  created_at: Date,&#xA;  updated_at: Date,&#xA;  deleted_at?: Date,&#xA;}&#xA;</code></pre>&#xA;",6560430,,,,2022-11-21 06:43:59,Knex.js: Make sure people can't buy more products than we have inventory for,<typescript><postgresql><graphql><knex.js>,1,1,0,2022-11-21 02:46:57
74515088,2,,74513700,0,,"<p>Your error seems to be there, you remove <code>1</code> from your inventory (<code>quantity: inventory.quantity - 1,</code>) but you add <code>quantity</code> to the total cart quantity (<code>total_quantity: cart.total_quantity + quantity,</code>)</p>&#xA;<pre class=""lang-js prettyprint-override""><code>      await trx&lt;sql.ProductInventory&gt;(TABLE.PRODUCT_INVENTORY).where({ id: inventory.id }).update({&#xA;        // here&#xA;        quantity: inventory.quantity - 1,&#xA;      });&#xA;      await trx&lt;sql.Cart&gt;(TABLE.CART).where({ id: cart.id }).update({&#xA;        total_price: cart.total_price + product.price,&#xA;        // and here&#xA;        total_quantity: cart.total_quantity + quantity,&#xA;      });&#xA;</code></pre>&#xA;<p><strong>Solution</strong></p>&#xA;<pre class=""lang-js prettyprint-override""><code>      await trx&lt;sql.ProductInventory&gt;(TABLE.PRODUCT_INVENTORY).where({ id: inventory.id }).update({&#xA;        quantity: inventory.quantity - quantity,&#xA;      });&#xA;      await trx&lt;sql.Cart&gt;(TABLE.CART).where({ id: cart.id }).update({&#xA;        // I'm not sure but I thing you are missing a `* quantity` here&#xA;        total_price: cart.total_price + product.price * quantity,&#xA;        total_quantity: cart.total_quantity + quantity,&#xA;      });&#xA;</code></pre>&#xA;",12239272,,12239272,2022-11-21 06:43:59,2022-11-21 06:43:59,"",,0,0,0,2022-11-21 06:38:53
74526163,1,,,0,7,"<p>this graphQL query works for me through the <a href=""https://api.github.com/graphql"" rel=""nofollow noreferrer"">GitHub GraphQL API</a>:</p>&#xA;<pre><code>query {&#xA;    repository(owner: &quot;MY_Org&quot;, name: &quot;My_Repo&quot;) {&#xA;        object(expression: &quot;master:README.md&quot;) {&#xA;            ... on Blob {&#xA;                text&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>However, if I try and run the command against <a href=""https://github.comcast.com/api/graphql"" rel=""nofollow noreferrer"">GitHub-Enterprise GraphQL</a> I just get back null for the <code>... Blob</code> inline <a href=""https://graphql.org/learn/queries/#inline-fragments"" rel=""nofollow noreferrer"">fragment</a>.</p>&#xA;<p>Is this a limitation of GitHub Enterprise?  Also is there another way I can accomplish reading a file via GHE GQL someone can suggest?</p>&#xA;<p><strong>Thank you!</strong></p>&#xA;<p>Also, here's the response I am getting indicating GQL is querying the repo correctly:</p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;        &quot;repository&quot;: {&#xA;            &quot;name&quot;: &quot;My_Repo&quot;,&#xA;            &quot;url&quot;: &quot;https://github.[my_company].com/[My_Org]/[My_repo]&quot;,&#xA;            &quot;object&quot;: null&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",8540648,,,,2022-11-22 00:15:01,Access a GitHub file via Github Enterprise GraphQL,<graphql><github-enterprise>,0,0,0,2022-11-22 00:15:01
74531970,1,,,0,18,<p>I am currently using this graphQL query within the cart to retrieve each products weight</p>&#xA;<pre><code>` query productWeights {&#xA;   site {&#xA;     products (entityIds: [${productIDs}]) {&#xA;       edges {&#xA;         node {&#xA;           name&#xA;           sku&#xA;           weight {&#xA;            value&#xA;           }&#xA;         }&#xA;       }&#xA;     }&#xA;   }&#xA;}`&#xA;</code></pre>&#xA;<p>This brings back the weight of each individual item so I now need to calculate the weight of the amount of items in the cart. How can I get the quantity of items within this query to enable a calculation of the total weight added to cart?</p>&#xA;,20571673,,,,2022-11-22 11:33:31,How to get total weight of cart items in BigCommerce,<javascript><graphql><bigcommerce>,0,0,0,2022-11-22 11:33:31
74547906,2,,46309272,0,,"<p>The closest match to get the equivalent of v3 REST API url <code>/repos/$USER/$REPO/contributors</code> i could find is:</p>&#xA;<pre><code>query {&#xA;  repository(owner: &quot;peek&quot;, name: &quot;peek&quot;) {&#xA;    id&#xA;    name&#xA;    mentionableUsers {&#xA;      totalCount&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>It seems to count all contributors in a repository that could be matched to Github users (most probable through their emails).</p>&#xA;",3903974,,,,2022-11-23 13:51:30,"",,0,0,0,2022-11-23 13:51:30
74553522,1,,,-1,19,"<p>Wish to run a nested query within as <strong>Apollo GraphiQL browser playground</strong>.</p>&#xA;<p>Schema for two queries intended to be nested and a response type:</p>&#xA;<pre><code>getByMaxResults(maxResults: Int = null): [ID!]!&#xA;&#xA;appById(id: ID!): AppOutputGraphType&#xA;&#xA;AppOutputGraphType = {&#xA;  accountIdGuid: ID!&#xA;  createdAt: DateTime!&#xA;  description: String!&#xA;  id: ID!&#xA;  updatedAt: DateTime!&#xA;  userId: ID&#xA;}&#xA;</code></pre>&#xA;<p>Query <code>getByMaxResults: [ID!]!</code>, the result is an array of element <strong>ID</strong>:</p>&#xA;<p><a href=""https://i.stack.imgur.com/zgx2G.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zgx2G.png"" alt=""GraphiQL browser playground: Query getByMaxResults"" /></a></p>&#xA;<p>Query <code>appById(id: ID!)</code> requesting a couple of <code>AppOutputGraphType</code> fields:</p>&#xA;<p><a href=""https://i.stack.imgur.com/ARoMK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ARoMK.png"" alt=""GraphiQL browser playground: Query appById"" /></a></p>&#xA;<p>Is there a way within the GraphiQL browser sandbox to nest these two Queries?:</p>&#xA;<ol>&#xA;<li>query <code>getByMaxResults</code> gather an array of <strong>IDs</strong>.</li>&#xA;<li>Iterate this array and perform multiple queries <code>appById</code> with each <strong>ID</strong>.</li>&#xA;</ol>&#xA;<p>Thank you</p>&#xA;",5302993,,,,2022-11-23 22:39:16,Apollo GraphiQL browser playground: How to nest queries?,<graphql><nested-queries>,1,0,0,2022-11-23 22:11:37
74563086,1,,,0,15,"<p>I have a GraphQL query, where one of the variables &quot;query&quot; is an array. An example of the log would be:</p>&#xA;<pre><code>Array [ {…}, {…} ]&#xA;​&#xA;0: Object { txt: &quot;apple&quot;, type: &quot;fruit&quot; }&#xA;​&#xA;1: Object { txt: &quot;banana&quot;, typ: &quot;fruit&quot; }&#xA;​&#xA;length: 2&#xA;</code></pre>&#xA;<p>This array is just one of the variables used to fetch the data, the query uses three variables total (source and date). My problem is, when I want to fetch the data for the objects, I am only able to fetch for the first object (in the case above, I will only receive data for &quot;apple&quot;. Is there a way to loop, so I can also receive information for the other objects (&quot;banana&quot;)?</p>&#xA;<p>It is important to note that the query accepts one singular variable &quot;context&quot;, which is defined by &quot;source&quot;, &quot;date&quot; and &quot;query&quot;. So the actual fetch will look like this:</p>&#xA;<pre><code>// define context with three variables&#xA;interface QueryContext {&#xA;    source: Source;&#xA;    query: QueryItem //(made up of txt and type as seen in example);&#xA;    date: string;&#xA;}&#xA;&#xA;context:QueryContext;&#xA;getContext(context);&#xA;</code></pre>&#xA;<p>I am implementing all this using TypeScript (React, Redux).</p>&#xA;",16455624,,16455624,2022-11-24 15:42:39,2022-11-24 15:42:39,GraphQL: Fetch for different objects within array,<reactjs><typescript><redux><graphql>,0,0,0,2022-11-24 15:30:36
74569241,1,,,0,14,"<p>Can I pass gql`query for refetch.&#xA;In some vars I need refetch with different scheamas</p>&#xA;<pre><code> gql`query&#xA;  Products (&#xA;    $afterCursor: String,&#xA;    $first: Int!,&#xA;  ){&#xA;    products (&#xA;      afterCursor: $afterCursor,&#xA;      first: $first,&#xA;    ) {&#xA;      items {&#xA;        email&#xA;        &#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>or</p>&#xA;<pre><code> gql`query&#xA;  Products (&#xA;    $afterCursor: String,&#xA;     $search: String&#xA;    $first: Int!,&#xA;  ){&#xA;    products (&#xA;      afterCursor: $afterCursor,&#xA;      first: $first,&#xA;      search: $search&#xA;    ) {&#xA;      items {&#xA;        email&#xA;        &#xA;  }&#xA;`;&#xA;&#xA; const refetchRequest = (rest) =&gt; refetch({&#xA;    ...rest,&#xA;  });&#xA;</code></pre>&#xA;",1673376,,,,2022-11-25 21:37:14,How dynamic pass gql schema's for refetch?,<reactjs><apollo>,1,0,0,2022-11-25 07:00:17
74581225,1,,,2,26,"<p>I'm fetching emails from IMAP and want to store them in PostgreSQL via Hasura GraphQL API. As HTML and special characters can't be in the valid GraphQL query, I need to get rid of them. Remove or replace with something acceptable. That ends up with ugly and unformatted content in the DB. Googled but can't really find a good or at least near-perfect solution for getting the most readable (ideally lossless) content in PostgreSQL.</p>&#xA;<p>I have to create an admin panel where emails can be assigned to users and have other relations and different rights (eg. one role won't see email addresses and possible phone numbers and other contacts removed from the email content). But they can reply from the system. Everything is easy except the question of how to get the modified HTML email to the DB.</p>&#xA;<p>Maybe I shouldn't use GraphQL. Maybe not JavaScript. I can code in PHP, too if that's easier but I prefer JavaScript as I use N8N.io workflow and I can easily use JavaScript there. Option I was also considering is to use PostgreSQL compression but then I can not use the Directus.io admin panel (that is used) for viewing, editing and adding relations to the emails.</p>&#xA;",1016423,,1016423,2022-11-26 10:13:16,2022-11-26 10:13:16,How to mutate via GraphQL special characters and HTML with JavaScript?,<javascript><postgresql><graphql><special-characters><directus>,0,2,0,2022-11-26 10:02:27
74588271,1,,,0,20,"<p>I would like to query security advisories on GitHub, similar to e.g.</p>&#xA;<blockquote>&#xA;<p><a href=""https://github.com/advisories?query=keycloak"" rel=""nofollow noreferrer"">https://github.com/advisories?query=keycloak</a></p>&#xA;</blockquote>&#xA;<p>I could not find a proper GraphQL query which I can execute from say cURL or from within Python code.</p>&#xA;<p>Also, I am interested why the above link shows different (more) results than when I visit repository's advisories at</p>&#xA;<blockquote>&#xA;<p><a href=""https://github.com/keycloak/keycloak/security/advisories"" rel=""nofollow noreferrer"">https://github.com/keycloak/keycloak/security/advisories</a></p>&#xA;</blockquote>&#xA;<p>Many thanks in advance</p>&#xA;",3659652,,,,2022-11-27 07:31:41,Search security advisories from GitHub programatically,<security><github><graphql><github-api>,0,0,0,2022-11-27 07:31:41
74590741,1,,,-1,23,"<p>so i'm working on a scientific paper where i have to retrieve list of all commits of a github project, so i used graphql to write a query for it, actually when i use the totalCount in the History count i get 22175 which is right but the result of the detail of every commits is unfortunately not enough as i copy paste in a text editor and there are only 8600 lines which can't be possible so i'm wondering why i'm not getting the whole list of commits??</p>&#xA;<p>Query:</p>&#xA;<pre><code> {&#xA;      repository(owner: &quot;dashpay&quot;, name: &quot;dash&quot;) {&#xA;        name&#xA;        refs(refPrefix: &quot;refs/heads/&quot;, first: 100) {&#xA;          totalCount&#xA;          edges {&#xA;            node {&#xA;              ... on Ref {&#xA;                name&#xA;                target {&#xA;                  ... on Commit {&#xA;                    history {&#xA;                      totalCount&#xA;                      edges {&#xA;                        node {&#xA;                          ... on Commit {&#xA;                            committedDate&#xA;                            author {&#xA;                              date&#xA;                              email&#xA;                              name&#xA;                            }&#xA;                          }&#xA;                        }&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;    &#xA;</code></pre>&#xA;<p>Result:</p>&#xA;<pre><code>data&quot;: {&#xA;    &quot;repository&quot;: {&#xA;      &quot;name&quot;: &quot;dash&quot;,&#xA;      &quot;refs&quot;: {&#xA;        &quot;totalCount&quot;: 17,&#xA;        &quot;edges&quot;: [&#xA;          {&#xA;            &quot;node&quot;: {&#xA;              &quot;name&quot;: &quot;develop&quot;,&#xA;              &quot;target&quot;: {&#xA;                &quot;history&quot;: {&#xA;                  &quot;totalCount&quot;: 22327,&#xA;                  &quot;edges&quot;: [&#xA;                    {&#xA;                      &quot;node&quot;: {&#xA;                        &quot;committedDate&quot;: &quot;2022-11-22T17:34:46Z&quot;,&#xA;                        &quot;author&quot;: {&#xA;                          &quot;date&quot;: &quot;2022-11-22T23:04:46.000+05:30&quot;,&#xA;                          &quot;email&quot;: &quot;63189531+kittywhiskers@users.noreply.github.com&quot;,&#xA;                          &quot;name&quot;: &quot;Kittywhiskers Van Gogh&quot;&#xA;                        }&#xA;                      }&#xA;                    },&#xA;                    {&#xA;</code></pre>&#xA;",14353641,,14353641,2022-11-27 14:20:20,2022-11-27 14:20:20,Retrieve the list of all commits of a Github project with Graphql,<json><api><github><graphql>,0,0,0,2022-11-27 14:16:04
74592243,1,,,1,28,"<p>I am using this library <a href=""https://github.com/phpclassic/php-shopify"" rel=""nofollow noreferrer"">https://github.com/phpclassic/php-shopify</a> to retrieve translations from the Shopify GraphQL API.</p>&#xA;<p>Unfortunately I get this error:</p>&#xA;<blockquote>&#xA;<p><strong>Fatal error</strong>: Uncaught PHPShopify\Exception\ApiException: message - Variable $gqlGid is used by anonymous query but not declared</p>&#xA;</blockquote>&#xA;<p>Can somebody help to debug this? My code looks like this:</p>&#xA;<pre><code>    $gqlVariables = array(&quot;gqlGid&quot;=&gt;'gid://shopify/OnlineStoreArticle/557585301654');&#xA;&#xA;    $graphQL = &lt;&lt;&lt;Query&#xA;    query {&#xA;        translatableResource(resourceId: \$gqlGid) {&#xA;        resourceId&#xA;        translations(locale: &quot;de&quot;) {&#xA;          key&#xA;          value&#xA;        }&#xA;      }&#xA;    }&#xA;    Query;&#xA;&#xA;    $data = $shopify-&gt;GraphQL-&gt;post($graphQL, null, null, $gqlVariables);&#xA;</code></pre>&#xA;<p>I have used this library and the Shopify GraphQL API before, without having this issue. I do not know why this is happening.</p>&#xA;",15025097,,,,2022-11-27 17:27:28,Variable is used by anonymous query but not declared,<php><api><graphql><shopify-api>,0,0,0,2022-11-27 17:27:28
74592817,1,,,0,8,"<p>I've been trying to test my GraphQL mutation but I'm having this error:</p>&#xA;<pre><code>    $order = $this-&gt;generateOrder();&#xA;&#xA;    $request = $this-&gt;request(/** @lang GraphQL */&#xA;        'mutation {&#xA;              approveOrder(input: {&#xA;                id: &quot;/api/orders/&quot;' . $order-&gt;getId() . ',&#xA;              }&#xA;              ){&#xA;                order {&#xA;                  id, status&#xA;                }&#xA;              }&#xA;           }');&#xA;&#xA;    print_r($request);&#xA;</code></pre>&#xA;<p>But the error I get is:</p>&#xA;<pre><code>DomainException: Response error: Syntax Error: Expected Name, found Int &quot;14&quot;&#xA;</code></pre>&#xA;<p>Anyone has any tips?</p>&#xA;",5434563,,,,2022-11-27 18:42:49,Expected name found Int 14 graphql testing,<testing><graphql><mutation>,0,0,0,2022-11-27 18:42:49
74602707,2,,68024702,0,,"<p>I often see areas where &quot;filtering&quot; an endpoint falls short and the answer is always to use the <code>search</code> node. You can use the search API, but if you really like GraphQL there's a <code>search</code> endpoint there, too.</p>&#xA;<p><a href=""https://docs.github.com/en/graphql/reference/queries#search"" rel=""nofollow noreferrer"">https://docs.github.com/en/graphql/reference/queries#search</a></p>&#xA;<pre><code>query {&#xA;   search(query=&quot;repo:another-user/another-repo+label:label1+label:label2) {&#xA;     nodes {&#xA;       //work with nodes as usual&#xA;       __typename&#xA;       ... on Issue {&#xA;         author {&#xA;         }&#xA;         createdAt&#xA;       }&#xA;     }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<hr />&#xA;<p>Search Query Syntax</p>&#xA;<p>I find the documentation a little lacking here because they do not explain the <code>+</code> syntax used in <a href=""https://stackoverflow.com/a/68060029/456809"">@rbennett485</a>'s query, but you can infer that it is the opposite of the <code>-</code> (exclusion) to mean it <em>must</em> include the search criteria (label/repo/etc).</p>&#xA;<ul>&#xA;<li><a href=""https://docs.github.com/en/search-github/getting-started-with-searching-on-github/understanding-the-search-syntax"" rel=""nofollow noreferrer""><em>Understanding the search syntax</em></a></li>&#xA;</ul>&#xA;<hr />&#xA;<p><a href=""https://graphql.org/learn/queries/#inline-fragments"" rel=""nofollow noreferrer"">GraphQL Inline Fragments</a></p>&#xA;<p>Because the <code>search</code> node returns a &quot;Union&quot; (<a href=""https://docs.github.com/en/graphql/reference/unions#searchresultitem"" rel=""nofollow noreferrer"">SearchItemResultItem</a>) type we need to be able to switch on the particular object returned.</p>&#xA;<p>This is where <a href=""https://graphql.org/learn/queries/#inline-fragments"" rel=""nofollow noreferrer"">GraphQL Inline Fragments</a> come into play. In my example I &quot;switch&quot; based on the <a href=""https://graphql.org/learn/queries/#meta-fields"" rel=""nofollow noreferrer""><code>__typename</code></a> of the returned node. <a href=""https://graphql.org/learn/queries/#meta-fields"" rel=""nofollow noreferrer""><code>__typename</code></a> is known as a &quot;Meta Field&quot; and will be available in any spec compliant GraphQL server (<a href=""https://spec.graphql.org/October2021/#sec-Type-Name-Introspection"" rel=""nofollow noreferrer""><em>GraphQL: October 2021 Edition:4.4 Type Name Introspection</em></a>). For more see <a href=""https://graphql.org/learn/introspection/"" rel=""nofollow noreferrer""><em>Introspection</em></a>.</p>&#xA;",456809,,,,2022-11-28 15:15:59,"",,0,0,0,2022-11-28 15:15:59
74606714,2,,74585984,0,,<p>You need to specify the mapping of your query variables. Also your syntax is assuming string substitution rather than query variables.</p>&#xA;<p>Try:</p>&#xA;<pre><code>const LOAD_PRODUCTS = gql`&#xA;  query myQuery ( $category: String! ) {&#xA;    category(input: { title: $category }){ &#xA;      name&#xA;      products {&#xA;        …&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;,2805154,,,,2022-11-28 21:36:40,"",,0,0,0,2022-11-28 21:36:40
74611103,1,,,0,39,"<p>I have a list of product IDs. I would like to use them in my GraphQL query so that I can return information on the matching products.</p>&#xA;<p>Tried <a href=""https://stackoverflow.com/questions/63461975/query-graphql-with-a-list-of-values"">this</a> but didn't work for me.</p>&#xA;<pre><code>    code = ['123', '456']&#xA;    lists = json.dumps(ids)&#xA;&#xA;    &quot;&quot;&quot;&#xA;    Variant_ID_query = f&quot;&quot;&quot;&#xA;    query{{&#xA;        product(id: &quot;gid://shopify/Product/{lists}&quot;){{&#xA;            variants(first: 3) {{&#xA;                edges {{&#xA;                    node {{&#xA;                    id&#xA;                    }}&#xA;                }}&#xA;            }}&#xA;        }}&#xA;    }}&#xA;    &quot;&quot;&quot;&#xA;</code></pre>&#xA;<pre><code>Expected outcome:&#xA;&#xA;product(id: &quot;gid://shopify/Product/123&quot;)&#xA;variants&#xA;&#xA;product(id: &quot;gid://shopify/Product/456&quot;)&#xA;variants&#xA;</code></pre>&#xA;",20631169,,2805154,2022-11-29 21:46:27,2022-11-29 21:46:27,How to request a list of products in Shopify using the GraphQL api from a list of IDs?,<graphql><shopify-api>,0,0,0,2022-11-29 08:31:32
74616593,2,,74496225,0,,"<p>A solution has appeared! After a ton of research, I found that adding the following resolver to my jest.config.ts allowed the tests to execute successfully.</p>&#xA;<pre><code>/* eslint-disable */&#xA;import { pathsToModuleNameMapper } from 'ts-jest';&#xA;const { paths } = require('../../../tsconfig.base.json').compilerOptions;&#xA;&#xA;export default {&#xA;  displayName: 'shared-data-access-auth',&#xA;  preset: 'jest-preset-angular',&#xA;  setupFilesAfterEnv: ['../../../jest-setup.ts'],&#xA;  moduleNameMapper: pathsToModuleNameMapper(paths, {&#xA;    prefix: '&lt;rootDir&gt;/../../..',&#xA;  }),&#xA;  globals: {&#xA;    'ts-jest': {&#xA;      tsconfig: '&lt;rootDir&gt;/tsconfig.spec.json',&#xA;    },&#xA;  },&#xA;  transform: {&#xA;    '^.+.(ts|mjs|js|html)$': 'jest-preset-angular',&#xA;  },&#xA;  transformIgnorePatterns: ['node_modules/(?!.*\\.mjs$)'],&#xA;  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json'],&#xA;  resolver: 'jest-preset-angular/build/resolvers/ng-jest-resolver.js',&#xA;};&#xA;</code></pre>&#xA;<p>The key factors of this fix were the transformIgnorePatterns of <code>['node_modules/(?!.*\\.mjs$)'],</code> and the resolver of <code>'jest-preset-angular/build/resolvers/ng-jest-resolver.js',</code></p>&#xA;<p>Hope this helps someone else!</p>&#xA;",3749339,,,,2022-11-29 15:40:32,"",,0,0,0,2022-11-29 15:40:32
74652605,2,,74652429,0,,"<p>The &quot;graphql&quot; library allows you to define different graphql elements using code. I'm not sure if it can output the full query or you have to do further modifications to it, but it's a good start to at least define the query body with it's keys, types, etc.</p>&#xA;<p><a href=""https://www.apollographql.com/blog/backend/schema-design/three-ways-to-represent-your-graphql-schema/#graphql-js-graphqlschema-object"" rel=""nofollow noreferrer"">https://www.apollographql.com/blog/backend/schema-design/three-ways-to-represent-your-graphql-schema/#graphql-js-graphqlschema-object</a></p>&#xA;<p><a href=""https://graphql.org/graphql-js/type/"" rel=""nofollow noreferrer"">https://graphql.org/graphql-js/type/</a></p>&#xA;",10520839,,,,2022-12-02 08:11:34,"",,0,0,0,2022-12-02 08:11:34
74655088,1,,,0,13,<p>please tell me what is the difference between resetStore and clearStore in the apollo client? what will happen to an already active request with clearReset?</p>&#xA;,14391863,,2805154,2022-12-02 22:27:44,2022-12-02 22:27:44,what to use resetStore or clearStore to reset apollo client cache?,<apollo-client>,0,0,0,2022-12-02 11:29:06
74659128,1,,,0,15,"<p>I have modelled a many-to-many relationship in Amplify between Product and Order. However, I cannot pass a productID when creating an Order. I get the error :</p>&#xA;<blockquote>&#xA;<p>The variables input contains a field name 'products' that is not defined for input object type 'CreateOrderInput'</p>&#xA;</blockquote>&#xA;<h2>Product Model</h2>&#xA;<pre><code>type Product @model @auth(rules: [{allow: public}]) {&#xA;  id: ID!&#xA;  name: String&#xA;  price: Int&#xA;  Orders: [Order] @manyToMany(relationName: &quot;ProductOrder&quot;)&#xA;}&#xA;</code></pre>&#xA;<h2>Order Model</h2>&#xA;<pre><code>type Order @model @auth(rules: [{allow: public}]) {&#xA;  id: ID!&#xA;  totalprice: Int&#xA;  products: [Product] @manyToMany(relationName: &quot;ProductOrder&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>As per documentation, amplify creates a join table &quot;ProductOrder&quot; in dynamodb.</p>&#xA;<h2>createProduct according to Amplify</h2>&#xA;<p>Amplify tells me that I can create a product with:</p>&#xA;<pre><code>const newProduct = await API.graphql({&#xA;    query: createProduct,&#xA;    variables: {&#xA;        input: {&#xA;        &quot;name&quot;: &quot;Lorem ipsum dolor sit amet&quot;,&#xA;        &quot;price&quot;: 1020,&#xA;        &quot;Orders&quot;: [],&#xA;    }&#xA;    }&#xA;});&#xA;</code></pre>&#xA;<p>As I don't have any orders yet, I create a product without linking it to an order. All working fine.</p>&#xA;<h2>createOrder according to Amplify</h2>&#xA;<pre><code>const newOrder = await API.graphql({&#xA;    query: createOrder,&#xA;    variables: {&#xA;        input: {&#xA;        &quot;totalprice&quot;: 1020,&#xA;        &quot;products&quot;: [],&#xA;    }&#xA;    }&#xA;});&#xA;</code></pre>&#xA;<p>When I want to create an order (and already have a product), I'm getting an error message.</p>&#xA;<blockquote>&#xA;<p>The variables input contains a field name 'products' that is not defined for input object type 'CreateOrderInput'</p>&#xA;</blockquote>&#xA;<p>I analyze 'CreateOrderInput' and indeed it looks like this:</p>&#xA;<pre><code>input CreateOrderInput {&#xA;    id: ID&#xA;    totalprice: Int!&#xA;}&#xA;</code></pre>&#xA;<p>So, basically what is the correct way of creating a new Order and passing a productID with it? Do I have to create the Order and then manually call createProductOrder and manually create a record in the join table (ProductOrder) ?</p>&#xA;",7184811,,,,2022-12-02 17:01:15,Correct way to work with a many-to-many relationship in Amplify. Unable to make mutation,<javascript><graphql><aws-amplify>,0,0,0,2022-12-02 17:01:15
74659848,2,,74438362,0,,"<p>If you are receiving the error &quot;lib/graphql has no exported mutation&quot; for a mutation that you have defined in your GraphQL schema, there are a few possible causes:</p>&#xA;<p>The mutation is not correctly defined in your schema. Make sure that the mutation is defined using the mutation keyword and that it is properly named and formatted.&#xA;The mutation is not being imported correctly in your code. Make sure that you are importing the mutation using the correct syntax and that it is being imported from the correct file.&#xA;The mutation is not being added to the exports object in your lib/graphql.ts file. This file defines the list of mutations, queries, and subscriptions that are available to your code. Make sure that the mutation is being added to the exports object in this file.&#xA;There is a type error in your code. This error can sometimes occur if the mutation is being called with the wrong type of arguments. Make sure that the arguments passed to the mutation are of the correct type and that they match the schema definition.&#xA;To troubleshoot this error, you can try the following steps:</p>&#xA;<p>Double-check the schema definition for the mutation and make sure that it is properly defined and formatted.&#xA;Check the import statement for the mutation in your code and make sure that it is correct and is being imported from the correct file.&#xA;Check the lib/graphql.ts file and make sure that the mutation is being added to the exports object.&#xA;Check your code for type errors and make sure that the arguments passed to the mutation are of the correct type and match the schema definition.&#xA;If you are still unable to resolve the error, you can try to isolate the problem by creating a minimal reproduction of the error using a smaller codebase. This can help you identify the cause of the error and find a solution more easily</p>&#xA;",1848929,,,,2022-12-02 18:08:07,"",,0,0,0,2022-12-02 18:08:07
74674028,1,,,0,16,"<p>Let's say I created a new github repository with</p>&#xA;<pre><code>mutation AddRepository($name: String!) {&#xA;    createRepository(&#xA;        input: {&#xA;            name: $name&#xA;            visibility: PRIVATE&#xA;        }) {&#xA;            repository {&#xA;                name&#xA;                nameWithOwner&#xA;            }&#xA;        }&#xA;}&#xA;</code></pre>&#xA;<p>Now I want to make a commit and push to it. The <code>makeCommitOnBranch</code> mutation requires an existing oid for a parent commit, and an existing branch. Neither of these exist because the repo is brand new. How can I create my first commit using graphql?</p>&#xA;<p>I know in the v3 github API there is an auto-init field available when  creating a new repo, but I am hoping to do it all with graphql and not combine the graphql and REST apis in my app.</p>&#xA;",3117372,,3117372,2022-12-04 08:59:03,2022-12-04 08:59:03,github graphql making first commit after repo creation,<graphql><github-api>,0,1,0,2022-12-04 08:46:46
