Id,PostTypeId,AcceptedAnswerId,ParentId,Score,ViewCount,Body,OwnerUserId,OwnerDisplayName,LastEditorUserId,LastEditDate,LastActivityDate,Title,Tags,AnswerCount,CommentCount,FavoriteCount,CreationDate
11084098,2,,11059833,0,,"<p>Apollo's user manual describes <a href=""http://activemq.apache.org/apollo/documentation/user-manual.html#Stomp_Protocol_Options"" rel=""nofollow"">how you can configure apollo to automatically add a user header which is set to the sending user's id</a>.</p>&#xA;&#xA;<p>Basically you want to configure the connector's stomp protocol with something like:</p>&#xA;&#xA;<pre><code>&lt;connector id=""tcp"" bind=""tcp://0.0.0.0:61613""&gt;&#xA;  &lt;stomp&gt;&#xA;    &lt;add_user_header separator="",""&gt;JMSXUserID&lt;/add_user_header&gt;&#xA;  &lt;/stomp&gt;&#xA;&lt;/connector&gt;&#xA;</code></pre>&#xA;&#xA;<p>Unfortunately the Openwire protocol does not support this yet.  <a href=""https://issues.apache.org/jira/browse/APLO-213"" rel=""nofollow"">Issue APLO-213</a> is open to address it. </p>&#xA;",305364,,,,2012-06-18 13:36:59,"",,0,0,0,2012-06-18 13:36:59
12344574,1,,,2,665,"<p>Using C# framework 4.0 where the broker is running as a service on Windows 7 32bit I am seeing the following errors on both the stable and development versions.</p>&#xA;&#xA;<pre><code>2012-09-09 20:25:03,524 | WARN  | Internal Server Error: org.apache.activemq.apollo.util.path.PathParser$PathException: Invalid destination: 'ID\cEros201-30171-634828191032886763-1\c0\c1', it does not match regex: [ a-zA-Z0-9\_\-\%\~\:]+ | org.apache.activemq.apollo.stomp.StompProtocolHandler | hawtdispatch-DEFAULT-2&#xA;2012-09-09 20:25:03,542 | WARN  | Internal Server Error: org.apache.activemq.apollo.util.path.PathParser$PathException: Invalid destination: 'ID\cEros201-30171-634828191032886763-1\c0\c1', it does not match regex: [ a-zA-Z0-9\_\-\%\~\:]+ | org.apache.activemq.apollo.stomp.StompProtocolHandler | hawtdispatch-DEFAULT-3&#xA;</code></pre>&#xA;&#xA;<p>The end result of this is I am unable to use temporary queues as the call blocks on the client and the session times out before I can respond to the exception.</p>&#xA;&#xA;<pre><code>Versions &#xA;    Client dlls Stomp 1.5.2 NMS 1.5.0 &#xA;    Broker server apache-apollo-1.4 and apache-apollo-99-trunk-SNAPSHOT&#xA;</code></pre>&#xA;",1658960,,80901,2015-06-29 17:51:24,2015-06-29 17:51:24,Apollo Stomp ActiveMQ Creates Invalid Temporary Destination Names,<c#><activemq><stomp><apollo>,1,3,0,2012-09-10 01:57:48
13312106,2,,11345677,2,,"<p>Users of Apollo 1.3 are encouraged to reconfigure the server to use the BDB since that is more stable.  Apollo even logs a message on start up to let you know about this:</p>&#xA;&#xA;<pre><code>Using the pure java LevelDB implementation which is still experimental. If &#xA;the JNI version is not available for your platform, please switch to the BDB &#xA;store instead.&#xA;</code></pre>&#xA;&#xA;<p>Now, just recently Apollo 1.5 was released with support for the JNI version of leveldb on windows.  So if you feel like upgrading to 1.5, that should also fix the problem too.</p>&#xA;",305364,,,,2012-11-09 16:33:01,"",,0,0,0,2012-11-09 16:33:01
20656746,2,,20597388,0,,"<p>Solved it. If you start a transaction, there is no need of receipt headers, thus the official STOMP documentation (maybe, this is Apollo-related issue) must be fixed.</p>&#xA;",25705,,,,2013-12-18 11:21:10,"",,0,0,0,2013-12-18 11:21:10
31596123,2,,19707647,4,,"<p>I had installed java and used alternatives to create a symbolic link. When I tried to create an Apollo instance, I got the same error message as you. Apparently the Apollo install expects keytool to be available in your search path.</p>&#xA;&#xA;<p>I added a symbolic link for keytool, removed the previous aborted instance, and then the Apollo instance creation completed successfully.</p>&#xA;&#xA;<p>In my case, the alternatives command was:</p>&#xA;&#xA;<pre><code>sudo alternatives --install /usr/bin/keytool keytool /opt/jre1.8.0_51/bin/keytool 1&#xA;</code></pre>&#xA;&#xA;<p>This assumes you want to put the link in /usr/bin. And of course the second path argument needs to match where you've put the Java install.</p>&#xA;",12304,,,,2015-07-23 19:10:06,"",,0,0,0,2015-07-23 19:10:06
33478309,1,,,1,803,"<p>hai i m trying to fetch the graphql service in react-native,but it giving an error &#xA;No suitable request handler found for graphql url&#xA;<a href=""https://i.stack.imgur.com/2CICN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2CICN.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>i wrote the code like this for fetching</p>&#xA;&#xA;<pre><code>var string = ""mutation M { signUp(email:\""""+email+""\"",password:\""""+password+""\"",devicetoken: \""1234567\"",devicetype: \""IOS\"", version: \""5.1\"") {_id,email,password}}""&#xA;   fetch(REQUEST_URL,{&#xA;       method:'POST',&#xA;       headers:{&#xA;           'Accept':'application/json',&#xA;          'content-Type':'application/graphql'&#xA;       },&#xA;      body:string&#xA;  })&#xA;</code></pre>&#xA;&#xA;<p>can any tell me that is there any wrong in mycode,give me suggestions that how to fetch the graphql query in react-native,Any help much appreciated</p>&#xA;",4973173,,,,2015-11-02 13:06:03,"Error:NO suitable request handler found, when fetching graphql query in react-native",<react-native><graphql>,0,1,0,2015-11-02 13:06:03
33509643,1,33536535,,9,11153,"<p>I'm having issues creating a schema.json file that can be parsed with babel-relay-plugin without running into an error. Taking a look at the <a href=""https://github.com/facebook/relay/blob/master/examples/todo/data/schema.json"" rel=""noreferrer"">schema.json</a> file included in relay's example folder, I tried to copy the query in GraphiQL but I can't seem to get it right. I'm using <a href=""https://github.com/Folkloreatelier/laravel-graphql"" rel=""noreferrer"">Laravel</a> as the backend. Is this something I can accomplish through GraphiQL or sending a request to the GraphQL endpoint and saving the response?</p>&#xA;&#xA;<p>The error occurring when attempting to parse the schema.json file:</p>&#xA;&#xA;<pre><code>Cannot read property 'reduce' of undefined while parsing file: /Users/username/Sites/Homestead/Code/ineedmg-graphql/resources/assets/js/app.js&#xA;</code></pre>&#xA;&#xA;<p>Last attempt using GraphiQL:</p>&#xA;&#xA;<pre><code>{&#xA;  __schema {&#xA;    queryType { &#xA;      name&#xA;    },&#xA;    types {&#xA;        kind,&#xA;        name,&#xA;        description,&#xA;        fields {&#xA;            name,&#xA;            description,&#xA;            type {&#xA;              name,&#xA;              kind,&#xA;              ofType {&#xA;                name&#xA;                description&#xA;              }&#xA;            }&#xA;            isDeprecated,&#xA;            deprecationReason,&#xA;        },&#xA;      inputFields {&#xA;        name&#xA;        description&#xA;      }&#xA;      interfaces {&#xA;        kind&#xA;        name&#xA;        description&#xA;      },&#xA;      enumValues {&#xA;        name&#xA;        description&#xA;        isDeprecated&#xA;        deprecationReason&#xA;      }&#xA;    },&#xA;    mutationType { &#xA;      name&#xA;    },&#xA;    directives {&#xA;      name,&#xA;      description,&#xA;      onOperation,&#xA;      onFragment,&#xA;      onField,&#xA;      args {&#xA;        name&#xA;        description&#xA;        defaultValue&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",584594,,,,2015-11-05 04:09:32,Generate schema.json with GraphiQL or GraphQL endpoint,<reactjs><graphql><relayjs><graphql-js>,1,0,0,2015-11-03 21:43:55
35074562,2,,35070316,9,,"<p>Sure is. The official GraphQL specs outline <a href=""https://facebook.github.io/graphql/#sec-Schema-Introspection"">the introspection specifics</a>. An example of fetching the available mutations might look like so ...</p>&#xA;&#xA;<pre><code>{&#xA;  __schema {&#xA;    mutationType {&#xA;      fields {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",294120,,,,2016-01-29 00:04:41,"",,0,1,0,2016-01-29 00:04:41
35288600,1,,,1,297,"<p>I am building a relay compliant GraphQL server where some types will only ever have 1 of each in existence.</p>&#xA;&#xA;<p>A few examples:</p>&#xA;&#xA;<p>Getting the version number of the application:</p>&#xA;&#xA;<pre><code>query version {&#xA;  version {&#xA;     version,&#xA;     buildDate,&#xA;     builtBy&#xA;  }  &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Getting the current resource usage (for simplicity, the server only sends the readings measured at the time of the request):</p>&#xA;&#xA;<pre><code>query usage {&#xA;   resource {&#xA;      memory{&#xA;         total,&#xA;         used&#xA;      },&#xA;&#xA;      cpu{&#xA;         total,&#xA;         used&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In all the above examples, only 1 of <code>version</code>, <code>resource</code>, <code>memory</code> and <code>cpu</code> can exist.</p>&#xA;&#xA;<p>The <a href=""https://facebook.github.io/relay/graphql/objectidentification.htm"" rel=""nofollow"">relay object identification spec</a> says that all objects should have an identity. However, in this case, the existence of an <code>id</code> seems quite superfluous.</p>&#xA;&#xA;<p>Do all objects within a relay-compliant GraphQL server absolutely need an id?</p>&#xA;",624884,,,,2016-02-10 09:50:51,Do all nodes in a relay-compliant GraphQL server need to have an id?,<relayjs><graphql>,1,1,0,2016-02-09 09:44:21
35863107,1,,,1,207,"<p>I deployed MyBroker service on Ubuntu 14.04 Virtual Machine and get the following logs:&#xA;apollo.log:</p>&#xA;&#xA;<pre><code>    2016-03-07 13:52:28,301 | INFO  | java.io.IOException: Connection reset by peer | 1535101acf6&#xA;2016-03-07 13:52:28,301 | INFO  | java.io.IOException: Connection reset by peer | 1535101acf8&#xA;2016-03-07 13:52:28,302 | INFO  | java.io.IOException: Connection reset by peer | 1535101acfa&#xA;2016-03-07 13:52:28,302 | INFO  | java.io.IOException: Connection reset by peer | 1535101acfc&#xA;2016-03-07 13:52:28,303 | INFO  | java.io.IOException: Connection reset by peer | 1535101acfe&#xA;2016-03-07 13:52:28,303 | INFO  | java.io.IOException: Connection reset by peer | 1535101ad00&#xA;2016-03-07 13:52:28,303 | INFO  | java.io.IOException: Connection reset by peer | 1535101ad02&#xA;2016-03-07 13:52:37,923 | INFO  | java.io.IOException: Connection reset by peer | 1535101ad04&#xA;2016-03-07 13:53:07,938 | INFO  | java.io.IOException: Connection reset by peer | 1535101ad06&#xA;2016-03-07 13:53:27,963 | INFO  | java.io.IOException: Connection reset by peer | 1535101ad08&#xA;</code></pre>&#xA;&#xA;<p>connection.log</p>&#xA;&#xA;<pre><code>2016-03-07 13:53:22,817 connected: local:/127.0.0.1:61613, remote:/127.0.0.1:53221&#xA;2016-03-07 13:53:22,825 connected: local:/127.0.0.1:61613, remote:/127.0.0.1:53222&#xA;2016-03-07 13:53:22,847 connected: local:/127.0.0.1:61613, remote:/127.0.0.1:53222&#xA;2016-03-07 13:53:22,852 connected: local:/127.0.0.1:61613, remote:/127.0.0.1:53221&#xA;2016-03-07 13:53:27,045 disconnected: local:/127.0.0.1:61613, remote:/127.0.0.1:53222&#xA;2016-03-07 13:53:27,963 Shutting connection '/127.0.0.1:53221'  down due to: java.io.IOException: Connection reset by peer&#xA;2016-03-07 13:53:27,964 disconnected: local:/127.0.0.1:61613, remote:/127.0.0.1:53221&#xA;</code></pre>&#xA;&#xA;<p>stacktrace.log</p>&#xA;&#xA;<pre><code>2016-03-04 14:31:40,305 | WARN  | stackref=153416c3084&#xA;java.lang.ArrayIndexOutOfBoundsException: 32&#xA;    at org.fusesource.mqtt.codec.SUBSCRIBE.decode(SUBSCRIBE.java:65)&#xA;    at org.apache.activemq.apollo.mqtt.MqttSession.on_transport_command(MqttSession.java:334)&#xA;    at org.apache.activemq.apollo.mqtt.MqttSession$3.call(MqttSession.java:142)&#xA;    at org.apache.activemq.apollo.util.UnitFn1.apply(Scala2JavaHelper.scala:41)&#xA;    at org.apache.activemq.apollo.mqtt.MqttProtocolHandler.on_transport_command(MqttProtocolHandler.java:377)&#xA;    at org.apache.activemq.apollo.broker.BrokerConnection.on_transport_command(Connection.scala:144)&#xA;    at org.apache.activemq.apollo.broker.Connection$$anon$1.onTransportCommand(Connection.scala:71)&#xA;    at org.apache.activemq.apollo.broker.jetty.WebSocketTransportFactory$WebSocketTransport.drain_inbound(WebSocketTransportFactory.scala:480)&#xA;    at org.apache.activemq.apollo.broker.jetty.WebSocketTransportFactory$WebSocketTransport$$anonfun$onMessage$1.apply$mcV$sp(WebSocketTransportFactory.scala:403)&#xA;    at org.fusesource.hawtdispatch.package$$anon$4.run(hawtdispatch.scala:357)&#xA;    at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)&#xA;    at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)&#xA;    at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)&#xA;2016-03-04 14:31:44,370 | WARN  | stackref=153416c3088&#xA;java.lang.ArrayIndexOutOfBoundsException: 32&#xA;    at org.fusesource.mqtt.codec.SUBSCRIBE.decode(SUBSCRIBE.java:65)&#xA;    at org.apache.activemq.apollo.mqtt.MqttSession.on_transport_command(MqttSession.java:334)&#xA;    at org.apache.activemq.apollo.mqtt.MqttSession$3.call(MqttSession.java:142)&#xA;    at org.apache.activemq.apollo.util.UnitFn1.apply(Scala2JavaHelper.scala:41)&#xA;    at org.apache.activemq.apollo.mqtt.MqttProtocolHandler.on_transport_command(MqttProtocolHandler.java:377)&#xA;    at org.apache.activemq.apollo.broker.BrokerConnection.on_transport_command(Connection.scala:144)&#xA;    at org.apache.activemq.apollo.broker.Connection$$anon$1.onTransportCommand(Connection.scala:71)&#xA;    at org.apache.activemq.apollo.broker.jetty.WebSocketTransportFactory$WebSocketTransport.drain_inbound(WebSocketTransportFactory.scala:480)&#xA;    at org.apache.activemq.apollo.broker.jetty.WebSocketTransportFactory$WebSocketTransport$$anonfun$onMessage$1.apply$mcV$sp(WebSocketTransportFactory.scala:403)&#xA;    at org.fusesource.hawtdispatch.package$$anon$4.run(hawtdispatch.scala:357)&#xA;    at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)&#xA;    at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)&#xA;    at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)&#xA;2016-03-07 08:47:06,569 | WARN  | stackref=153416c320c&#xA;java.lang.ArrayIndexOutOfBoundsException&#xA;2016-03-07 08:47:07,227 | WARN  | stackref=153416c320e&#xA;java.lang.ArrayIndexOutOfBoundsException&#xA;2016-03-07 09:35:08,660 | WARN  | stackref=153416c3319&#xA;java.lang.NullPointerException&#xA;    at org.apache.activemq.apollo.broker.DeliveryProducerRoute$$anonfun$unbind$1$$anonfun$apply$mcV$sp$4$$anonfun$apply$4.apply(Router.scala:258)&#xA;    at org.apache.activemq.apollo.broker.DeliveryProducerRoute$$anonfun$unbind$1$$anonfun$apply$mcV$sp$4$$anonfun$apply$4.apply(Router.scala:256)&#xA;    at scala.collection.TraversableLike$$anonfun$filterNot$1.apply(TraversableLike.scala:274)&#xA;    at scala.collection.TraversableLike$$anonfun$filterNot$1.apply(TraversableLike.scala:274)&#xA;    at scala.collection.TraversableLike$$anonfun$filter$1.apply(TraversableLike.scala:264)&#xA;    at scala.collection.immutable.List.foreach(List.scala:309)&#xA;    at scala.collection.TraversableLike$class.filter(TraversableLike.scala:263)&#xA;    at scala.collection.AbstractTraversable.filter(Traversable.scala:105)&#xA;    at scala.collection.TraversableLike$class.filterNot(TraversableLike.scala:274)&#xA;    at scala.collection.AbstractTraversable.filterNot(Traversable.scala:105)&#xA;    at org.apache.activemq.apollo.broker.DeliveryProducerRoute$$anonfun$unbind$1$$anonfun$apply$mcV$sp$4.apply(Router.scala:256)&#xA;    at org.apache.activemq.apollo.broker.DeliveryProducerRoute$$anonfun$unbind$1$$anonfun$apply$mcV$sp$4.apply(Router.scala:251)&#xA;    at scala.collection.TraversableLike$$anonfun$filterNot$1.apply(TraversableLike.scala:274)&#xA;    at scala.collection.TraversableLike$$anonfun$filterNot$1.apply(TraversableLike.scala:274)&#xA;    at scala.collection.TraversableLike$$anonfun$filter$1.apply(TraversableLike.scala:264)&#xA;    at scala.collection.immutable.List.foreach(List.scala:309)&#xA;    at scala.collection.TraversableLike$class.filter(TraversableLike.scala:263)&#xA;    at scala.collection.AbstractTraversable.filter(Traversable.scala:105)&#xA;    at scala.collection.TraversableLike$class.filterNot(TraversableLike.scala:274)&#xA;    at scala.collection.AbstractTraversable.filterNot(Traversable.scala:105)&#xA;    at org.apache.activemq.apollo.broker.DeliveryProducerRoute$$anonfun$unbind$1.apply$mcV$sp(Router.scala:251)&#xA;    at org.apache.activemq.apollo.util.DeferringDispatched$$anon$1.run(Dispatched.scala:38)&#xA;    at org.apache.activemq.apollo.util.DeferringDispatched$$anonfun$dispatch_queue_task_source$1$$anonfun$apply$mcV$sp$1.apply(Dispatched.scala:45)&#xA;    at org.apache.activemq.apollo.util.DeferringDispatched$$anonfun$dispatch_queue_task_source$1$$anonfun$apply$mcV$sp$1.apply(Dispatched.scala:45)&#xA;    at scala.collection.immutable.List.foreach(List.scala:309)&#xA;    at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:32)&#xA;    at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:45)&#xA;    at org.apache.activemq.apollo.util.DeferringDispatched$$anonfun$dispatch_queue_task_source$1.apply$mcV$sp(Dispatched.scala:45)&#xA;    at org.fusesource.hawtdispatch.package$$anon$4.run(hawtdispatch.scala:357)&#xA;    at org.fusesource.hawtdispatch.internal.HawtCustomDispatchSource$1.run(HawtCustomDispatchSource.java:127)&#xA;    at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)&#xA;    at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)&#xA;2016-03-07 09:37:13,687 | WARN  | stackref=153416c334d&#xA;java.lang.ArrayIndexOutOfBoundsException&#xA;2016-03-07 09:37:14,493 | WARN  | stackref=153416c334f&#xA;java.lang.ArrayIndexOutOfBoundsException&#xA;2016-03-07 09:37:15,274 | WARN  | stackref=153416c3351&#xA;java.lang.ArrayIndexOutOfBoundsException&#xA;2016-03-07 09:37:16,555 | WARN  | stackref=153416c3353&#xA;java.lang.ArrayIndexOutOfBoundsException&#xA;2016-03-07 09:38:49,275 | WARN  | stackref=153416c335f&#xA;java.lang.ArrayIndexOutOfBoundsException&#xA;2016-03-07 09:38:50,234 | WARN  | stackref=153416c3361&#xA;java.lang.ArrayIndexOutOfBoundsException&#xA;2016-03-07 09:38:50,990 | WARN  | stackref=153416c3363&#xA;java.lang.ArrayIndexOutOfBoundsException&#xA;2016-03-07 09:38:51,752 | WARN  | stackref=153416c3365&#xA;java.lang.ArrayIndexOutOfBoundsException&#xA;2016-03-07 09:38:52,515 | WARN  | stackref=153416c3367&#xA;java.lang.ArrayIndexOutOfBoundsException&#xA;2016-03-07 10:48:21,306 | WARN  | stackref=1535072b8fc&#xA;java.lang.ArrayIndexOutOfBoundsException: 80&#xA;    at org.fusesource.mqtt.codec.SUBSCRIBE.decode(SUBSCRIBE.java:65)&#xA;    at org.apache.activemq.apollo.mqtt.MqttSession.on_transport_command(MqttSession.java:334)&#xA;    at org.apache.activemq.apollo.mqtt.MqttSession$3.call(MqttSession.java:142)&#xA;    at org.apache.activemq.apollo.util.UnitFn1.apply(Scala2JavaHelper.scala:41)&#xA;    at org.apache.activemq.apollo.mqtt.MqttProtocolHandler.on_transport_command(MqttProtocolHandler.java:377)&#xA;    at org.apache.activemq.apollo.broker.BrokerConnection.on_transport_command(Connection.scala:144)&#xA;    at org.apache.activemq.apollo.broker.Connection$$anon$1.onTransportCommand(Connection.scala:71)&#xA;    at org.apache.activemq.apollo.broker.jetty.WebSocketTransportFactory$WebSocketTransport.drain_inbound(WebSocketTransportFactory.scala:480)&#xA;    at org.apache.activemq.apollo.broker.jetty.WebSocketTransportFactory$WebSocketTransport$$anonfun$onMessage$1.apply$mcV$sp(WebSocketTransportFactory.scala:403)&#xA;    at org.fusesource.hawtdispatch.package$$anon$4.run(hawtdispatch.scala:357)&#xA;    at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)&#xA;    at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)&#xA;    at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)&#xA;2016-03-07 10:51:57,043 | WARN  | stackref=1535072b916&#xA;java.lang.ArrayIndexOutOfBoundsException: 80&#xA;    at org.fusesource.mqtt.codec.SUBSCRIBE.decode(SUBSCRIBE.java:65)&#xA;    at org.apache.activemq.apollo.mqtt.MqttSession.on_transport_command(MqttSession.java:334)&#xA;    at org.apache.activemq.apollo.mqtt.MqttSession$3.call(MqttSession.java:142)&#xA;    at org.apache.activemq.apollo.util.UnitFn1.apply(Scala2JavaHelper.scala:41)&#xA;    at org.apache.activemq.apollo.mqtt.MqttProtocolHandler.on_transport_command(MqttProtocolHandler.java:377)&#xA;    at org.apache.activemq.apollo.broker.BrokerConnection.on_transport_command(Connection.scala:144)&#xA;    at org.apache.activemq.apollo.broker.Connection$$anon$1.onTransportCommand(Connection.scala:71)&#xA;    at org.apache.activemq.apollo.broker.jetty.WebSocketTransportFactory$WebSocketTransport.drain_inbound(WebSocketTransportFactory.scala:480)&#xA;    at org.apache.activemq.apollo.broker.jetty.WebSocketTransportFactory$WebSocketTransport$$anonfun$onMessage$1.apply$mcV$sp(WebSocketTransportFactory.scala:403)&#xA;    at org.fusesource.hawtdispatch.package$$anon$4.run(hawtdispatch.scala:357)&#xA;    at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)&#xA;    at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)&#xA;    at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)&#xA;2016-03-07 13:30:06,035 | WARN  | stackref=1535101abf7&#xA;java.lang.ArrayIndexOutOfBoundsException: 32&#xA;    at org.fusesource.mqtt.codec.SUBSCRIBE.decode(SUBSCRIBE.java:65)&#xA;    at org.apache.activemq.apollo.mqtt.MqttSession.on_transport_command(MqttSession.java:334)&#xA;    at org.apache.activemq.apollo.mqtt.MqttSession$3.call(MqttSession.java:142)&#xA;    at org.apache.activemq.apollo.util.UnitFn1.apply(Scala2JavaHelper.scala:41)&#xA;    at org.apache.activemq.apollo.mqtt.MqttProtocolHandler.on_transport_command(MqttProtocolHandler.java:377)&#xA;    at org.apache.activemq.apollo.broker.BrokerConnection.on_transport_command(Connection.scala:144)&#xA;    at org.apache.activemq.apollo.broker.Connection$$anon$1.onTransportCommand(Connection.scala:71)&#xA;    at org.apache.activemq.apollo.broker.jetty.WebSocketTransportFactory$WebSocketTransport.drain_inbound(WebSocketTransportFactory.scala:480)&#xA;    at org.apache.activemq.apollo.broker.jetty.WebSocketTransportFactory$WebSocketTransport$$anonfun$onMessage$1.apply$mcV$sp(WebSocketTransportFactory.scala:403)&#xA;    at org.fusesource.hawtdispatch.package$$anon$4.run(hawtdispatch.scala:357)&#xA;    at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)&#xA;    at org.fusesource.hawtdispatch.internal.SerialDispatchQueue.run(SerialDispatchQueue.java:100)&#xA;    at org.fusesource.hawtdispatch.internal.pool.SimpleThread.run(SimpleThread.java:77)&#xA;</code></pre>&#xA;&#xA;<p>My assumption is that the virtual machine with Ubuntu 14.04 (and 1,5 GB RAM) can not handle all the services (Running also other servies like a Tomcat on the same machine) - Someone got an idea based on the posted logfiles? (I only see a NullPointException for the Threads in the stacktrace.log)</p>&#xA;",4606342,,,,2016-03-08 14:36:19,Apache Apollo on Ubuntu 14.04 - Can not connect to Websocket (Thread issue?),<multithreading><apache><ubuntu><jvm><apollo>,1,1,0,2016-03-08 09:05:54
37011111,1,37011479,,0,137,"<p>I'm looking to use graphQL to query a docker machine api and get a list of containers for react docker admin style project. I'm using dockerode an NPM module to make the request. The first function getCOntainerById is how I would typically return some items from rethinkdb.</p>&#xA;&#xA;<p>I can't seem to figure out how to return the containers array in the docker.listContainers function as it's only defined inside the scope and undefined at the end of the fetchContainers function return.</p>&#xA;&#xA;<pre><code>import Docker from 'dockerode'&#xA;var docker = new Docker({host: 'http://127.0.0.1', port: 52376});&#xA;&#xA;export default {&#xA;  getContainerById: {&#xA;    type: Container,&#xA;    args: {&#xA;      id: {type: new GraphQLNonNull(GraphQLID)}&#xA;    },&#xA;    async resolve(source, {id}, {rootValue}) {&#xA;      isLoggedIn(rootValue);&#xA;      const container = await r.table('containers').get(id);&#xA;      if (!container) {&#xA;        throw errorObj({_error: 'Container not found'});&#xA;      }&#xA;      return container;&#xA;    }&#xA;  },&#xA;  fetchContainers: {&#xA;    type: new GraphQLList(Container),&#xA;    async resolve(source, {id}, {rootValue}) {&#xA;      isLoggedIn(rootValue);&#xA;      docker.listContainers(function(err, containers) {&#xA;&#xA;      });&#xA;&#xA;      if (!containers) {&#xA;        throw errorObj({_error: 'Container not found'});&#xA;      }&#xA;&#xA;      return containers&#xA;    }&#xA;  }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Help would be greatly appreciated. Thank you.</p>&#xA;",4289267,,,,2016-05-03 18:14:55,Returning value outside of function,<javascript><node.js><docker><graphql><graphql-js>,1,0,0,2016-05-03 17:55:34
37049219,1,37137907,,1,1752,"<p>I tried to make a request using Apollo Client into non-Apollo GraphQL server as below:</p>&#xA;&#xA;<pre><code>import ApolloClient, { createNetworkInterface } from 'apollo-client';&#xA;&#xA;// Register gql globally&#xA;import { registerGqlTag } from 'apollo-client/gql';&#xA;registerGqlTag();&#xA;&#xA;const networkInterface = createNetworkInterface(' http://localhost:8080/graphql', {&#xA;  headers: {&#xA;  'Content-type': ""application/json""&#xA;  }&#xA;});&#xA;&#xA;var client = new ApolloClient({&#xA;  networkInterface&#xA;});&#xA;&#xA;client.query({&#xA;  query: gql`&#xA;    query getTodo($todoId: Int!) {&#xA;      node(id: $todoId) {&#xA;        ... on Todo {&#xA;          id&#xA;          text&#xA;        }&#xA;      }&#xA;    }&#xA;  `,&#xA;  variables: {&#xA;    todoId: ""todo:100000"",&#xA;  },&#xA;  forceFetch: false,&#xA;}).then((graphQLResult) =&gt; {&#xA;  var errors  = graphQLResult.errors;&#xA;  var data = graphQLResult.data;&#xA;&#xA;  if (data) {&#xA;    console.log('got data', data);&#xA;  }&#xA;&#xA;  if (errors) {&#xA;    console.log('got some GraphQL execution errors', errors);&#xA;  }&#xA;}).catch((error) =&gt; {&#xA;  console.log('there was an error sending the query', error);&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>However I keep getting an error while running the code:&#xA;<code>there was an error sending the query [ReferenceError: fetch is not defined]</code></p>&#xA;&#xA;<p>I try to search the issue related to that, however the documentation doesn't really helpful.  </p>&#xA;&#xA;<p>Thanks before.</p>&#xA;",4394770,,357578,2016-06-06 20:20:05,2017-10-11 19:01:23,Unable to query from non-Apollo GraphQL server from Apollo client,<graphql><apollo>,2,1,0,2016-05-05 11:17:32
37104552,2,,37094655,0,,"<p>There was an issue with publishing of <code>0.3.3</code> version of <code>apollo-client</code>. The issue has been fixed in <code>0.3.4</code>.</p>&#xA;&#xA;<p>Ref: <a href=""https://github.com/apollostack/apollo-client/issues/186"" rel=""nofollow"">https://github.com/apollostack/apollo-client/issues/186</a></p>&#xA;",295639,,,,2016-05-08 20:34:48,"",,0,0,0,2016-05-08 20:34:48
37398132,2,,37397886,18,,"<p>You can use GraphQL-JS's introspection query to get everything you'd like to know about the schema:</p>&#xA;&#xA;<pre><code>import { introspectionQuery } from 'graphql';&#xA;</code></pre>&#xA;&#xA;<p>If you want just the information for types, you can use this:</p>&#xA;&#xA;<pre><code>{&#xA;    __schema: {&#xA;        types: {&#xA;            ...fullType&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Which uses the following fragment from the introspection query:</p>&#xA;&#xA;<pre><code>fragment FullType on __Type {&#xA;    kind&#xA;    name&#xA;    description&#xA;    fields(includeDeprecated: true) {&#xA;      name&#xA;      description&#xA;      args {&#xA;        ...InputValue&#xA;      }&#xA;      type {&#xA;        ...TypeRef&#xA;      }&#xA;      isDeprecated&#xA;      deprecationReason&#xA;    }&#xA;    inputFields {&#xA;      ...InputValue&#xA;    }&#xA;    interfaces {&#xA;      ...TypeRef&#xA;    }&#xA;    enumValues(includeDeprecated: true) {&#xA;      name&#xA;      description&#xA;      isDeprecated&#xA;      deprecationReason&#xA;    }&#xA;    possibleTypes {&#xA;      ...TypeRef&#xA;    }&#xA;  }&#xA;  fragment InputValue on __InputValue {&#xA;    name&#xA;    description&#xA;    type { ...TypeRef }&#xA;    defaultValue&#xA;  }&#xA;  fragment TypeRef on __Type {&#xA;    kind&#xA;    name&#xA;    ofType {&#xA;      kind&#xA;      name&#xA;      ofType {&#xA;        kind&#xA;        name&#xA;        ofType {&#xA;          kind&#xA;          name&#xA;          ofType {&#xA;            kind&#xA;            name&#xA;            ofType {&#xA;              kind&#xA;              name&#xA;              ofType {&#xA;                kind&#xA;                name&#xA;                ofType {&#xA;                  kind&#xA;                  name&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>If that seems complicated, it's because fields can be arbitrarility deeply wrapped in nonNulls and Lists, which means that technically even the query above does not reflect the full schema if your fields are wrapped in more than 7 layers (which probably isn't the case).</p>&#xA;&#xA;<p>You can see the source code for introspectionQuery <a href=""https://github.com/graphql/graphql-js/blob/master/src/utilities/introspectionQuery.js"" rel=""noreferrer"">here</a>.</p>&#xA;",6268377,,,,2016-05-23 18:34:46,"",,0,2,0,2016-05-23 18:34:46
37611774,1,,,2,824,"<p>I successfully worked through the Angular2 tutorial. Now I want to replace the HTTP server from the last step with an Apollo-GraphQL server (<a href=""http://docs.apollostack.com/apollo-client/angular2.html"" rel=""nofollow"">http://docs.apollostack.com/apollo-client/angular2.html</a>).</p>&#xA;&#xA;<p>I added the Apollo-dependencies to my <code>package.json</code>:</p>&#xA;&#xA;<pre><code>""angular2-apollo"": ""0.1.0"",&#xA;""apollo-client"": ""0.3.12"",&#xA;""graphql"": ""^0.5.0"",&#xA;""graphql-tools"": ""^0.3.8"",&#xA;</code></pre>&#xA;&#xA;<p>In my <code>main.js</code> I am bootstrapping the Apollo providers:</p>&#xA;&#xA;<pre><code>import { APOLLO_PROVIDERS } from 'angular2-apollo';&#xA;...&#xA;bootstrap(AppComponent, [ APOLLO_PROVIDERS ]);&#xA;</code></pre>&#xA;&#xA;<p>Unfortunately, this gives me a 404 when I start the server:</p>&#xA;&#xA;<pre><code>16.06.03 11:55:47 404 GET /angular2-apollo/index.js&#xA;</code></pre>&#xA;&#xA;<p>I adapted the SystemJS-config like this:</p>&#xA;&#xA;<pre><code>var map = {&#xA;  ...&#xA;    'angular2-apollo':            'node_modules/angular2-apollo/src',&#xA;  ...&#xA;};&#xA;var packages = {&#xA;  ...&#xA;    'angular2-apollo':            { main: 'index.js', defaultExtension: 'js' },&#xA;  ...&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>This worked for the angular2-apollo module. But now every other imported module inside the angular2-apollo module gets a 404.&#xA;Of course I could go through the whole dependency tree and add every module to SystemJS (in fact I did this until a depth of ~3). But this is clearly not how it is supposed to work?</p>&#xA;&#xA;<p>Is there a convenient way to get Angular2 working with the Apollo Integration?</p>&#xA;",6418845,,791538,2016-06-08 18:33:06,2016-06-08 18:33:06,Angular2 Tutorial with Apollo Integration,<angular><graphql><graphql-js><apollo>,0,3,0,2016-06-03 10:19:56
37688952,1,,,0,265,"<p>I have working <a href=""https://github.com/javascriptiscoolpl/graphQL-tinySQL"" rel=""nofollow"">tinySQL GraphQL server</a> running at 127.0.0.1:3000. I would like to create <strong>any working</strong> Relay client for it. I mean any working example for query: </p>&#xA;&#xA;<pre><code>{&#xA;  groupBy (age: 20, job: ""student"") {&#xA;    id,&#xA;    name,&#xA;    age,&#xA;    job&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>that will output in React component something like that:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""groupBy"": [&#xA;      {&#xA;        ""id"": 1,&#xA;        ""name"": ""Marie"",&#xA;        ""age"": 20,&#xA;        ""job"": ""student""&#xA;      },&#xA;      {&#xA;        ""id"": 5,&#xA;        ""name"": ""Jessie"",&#xA;        ""age"": 20,&#xA;        ""job"": ""student""&#xA;      }&#xA;    ]&#xA;  }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>Most important thing is I want to be able to set GraphQL host IP and port and also don't want to change anything in GraphQL server code. Is it possible to do it? Is it possible to do it without babelRelayPlugin.js, babel-relay-plugin, webpack, webpack-dev-server or any other magic tricks?</p>&#xA;&#xA;<p>EDIT:</p>&#xA;&#xA;<p>I mean:</p>&#xA;&#xA;<pre><code>class App extends React.Component {&#xA;  render() {&#xA;    return (&#xA;      &lt;div&gt;&#xA;      // Simple example here?&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;Relay.injectNetworkLayer(&#xA;  new Relay.DefaultNetworkLayer('http://127.0.0.1:3000')&#xA;);&#xA;&#xA;const AppContainer = Relay.createContainer(App, {&#xA;  // Simple example here?&#xA;});&#xA;&#xA;ReactDOM.render(&#xA;  // Simple example here?&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>Anyone? Is it possible to do it like this?</p>&#xA;",6437218,,6437218,2016-06-08 09:22:07,2016-06-08 09:22:07,Relay client for existing working graphQL server?,<javascript><reactjs><graphql><relayjs><relay>,1,0,0,2016-06-07 20:41:29
37782593,2,,36743905,0,,"<p>One way to do that would be to introspect the schema with GraphQL’s introspection query sent in as a string (shown below). You can perform type validation in the native app that way by cross-checking the type that’s returned from the schema. Other than that, you can send in a request using GraphiQL (<a href=""https://github.com/graphql/graphiql"" rel=""nofollow"">https://github.com/graphql/graphiql</a>) to make sure your query/mutation is correct before you include it in your app.</p>&#xA;&#xA;<pre><code>query IntrospectionQuery {&#xA; __schema {&#xA; queryType { name }&#xA; mutationType { name }&#xA; subscriptionType { name }&#xA; types {&#xA; ...FullType&#xA; }&#xA; directives {&#xA; name&#xA; description&#xA; locations&#xA; args {&#xA; ...InputValue&#xA; }&#xA; }&#xA; }&#xA;}&#xA;fragment FullType on __Type {&#xA; kind&#xA; name&#xA; description&#xA; fields(includeDeprecated: true) {&#xA; name&#xA; description&#xA; args {&#xA; ...InputValue&#xA; }&#xA; type {&#xA; ...TypeRef&#xA; }&#xA; isDeprecated&#xA; deprecationReason&#xA; }&#xA; inputFields {&#xA; ...InputValue&#xA; }&#xA; interfaces {&#xA; ...TypeRef&#xA; }&#xA; enumValues(includeDeprecated: true) {&#xA; name&#xA; description&#xA; isDeprecated&#xA; deprecationReason&#xA; }&#xA; possibleTypes {&#xA; ...TypeRef&#xA; }&#xA;}&#xA;fragment InputValue on __InputValue {&#xA; name&#xA; description&#xA; type { ...TypeRef }&#xA; defaultValue&#xA;}&#xA;fragment TypeRef on __Type {&#xA; kind&#xA; name&#xA; ofType {&#xA; kind&#xA; name&#xA; ofType {&#xA; kind&#xA; name&#xA; ofType {&#xA; kind&#xA; name&#xA; }&#xA; }&#xA; }&#xA;}&#xA;</code></pre>&#xA;",6452097,,,,2016-06-13 05:48:51,"",,0,0,0,2016-06-13 05:48:51
37903571,1,37915420,,0,131,"<p>I am learning Relay framework and GraphQL. I am following the <a href=""https://web.archive.org/web/20171115114905/http://facebook.github.io:80/relay/docs/tutorial.html"" rel=""nofollow noreferrer"">tutorial from its official website.</a> In that tutorial, I would build a game using GraphQL mutations. The goal of the game is to find a hidden treasure in a grid of 9 squares. Everything was fine when I run it on the server, but when I did a click action to one of the grid, the app threw an error:</p>&#xA;<pre><code>Uncaught TypeError: this.props.relay.commitUpdate is not a function&#xA;</code></pre>&#xA;<p>From the console's log, I could clearly see that there is no <code>commitUpdate()</code> function in <code>this.props.relay</code>, but I got confused since in the <a href=""https://facebook.github.io/relay/prototyping/playground.html#source=%2F**%0A%20*%20Copyright%20(c)%202013-present%2C%20Facebook%2C%20Inc.%0A%20*%20All%20rights%20reserved.%0A%20*%0A%20*%20This%20source%20code%20is%20licensed%20under%20the%20BSD-style%20license%20found%20in%20the%0A%20*%20LICENSE%20file%20in%20the%20root%20directory%20of%20this%20source%20tree.%20An%20additional%20grant%0A%20*%20of%20patent%20rights%20can%20be%20found%20in%20the%20PATENTS%20file%20in%20the%20same%20directory.%0A%20*%2F%0A%0A%2F%2F%20Welcome%20to%20Relay.%0A%2F%2F%20Allow%20us%20to%20introduce%20you%20to%20the%20four%20elements.%0A%0A%2F**%0A%20*%20%231%20-%20Your%20React%20components%0A%20*%20This%20will%20look%20familiar%20to%20React%20developers.%0A%20*%0A%20*%20To%20learn%20more%20about%20React%2C%20visit%3A%0A%20*%20%20https%3A%2F%2Ffacebook.github.io%2Freact%0A%20*%2F%0Aclass%20HelloApp%20extends%20React.Component%20%7B%0A%20%20_handleClick()%7B%0A%20%20%20%20console.log(this.props.relay)%3B%0A%20%20%7D%0A%20%20renderMain()%7B%0A%20%20%20%20const%20%7Bgoodbye%7D%20%3D%20this.props.greetings%3B%0A%20%20%20%20return%20%3Ch1%20onClick%3D%7Bthis._handleClick.bind(this)%7D%3E%7Bgoodbye%7D%3C%2Fh1%3E%0A%20%20%7D%0A%20%20render()%20%7B%0A%20%20%20%20%2F%2F%20Relay%20will%20materialize%20this%20prop%20based%20on%20the%0A%20%20%20%20%2F%2F%20result%20of%20the%20query%20in%20the%20next%20component.%0A%20%20%20%20console.log(this.props.greetings)%3B%0A%20%20%20%20const%20%7Bhello%7D%20%3D%20this.props.greetings%3B%0A%20%20%20%20return%20%3Cdiv%3E%3Ch1%20onClick%3D%7Bthis._handleClick.bind(this)%7D%3E%7Bhello%7D%3C%2Fh1%3E%7Bthis.renderMain()%7D%3C%2Fdiv%3E%3B%0A%20%20%7D%0A%7D%0A%0A%2F**%0A%20*%20%232%20-%20Relay%20containers%0A%20*%20Compose%20your%20React%20components%20with%20a%20declaration%20of%0A%20*%20the%20GraphQL%20query%20fragments%20that%20fetch%20their%20data.%0A%20*%0A%20*%20To%20learn%20more%20about%20Relay%20containers%2C%20visit%3A%0A%20*%20%20%20https%3A%2F%2Ffacebook.github.io%2Frelay%2Fdocs%2Fguides-containers.html%0A%20*%2F%0AHelloApp%20%3D%20Relay.createContainer(HelloApp%2C%20%7B%0A%20%20fragments%3A%20%7B%0A%20%20%20%20%2F%2F%20This%20GraphQL%20query%20executes%20against%0A%20%20%20%20%2F%2F%20the%20schema%20in%20the%20%27schema%27%20tab%20above.%0A%20%20%20%20%2F%2F%0A%20%20%20%20%2F%2F%20To%20learn%20more%20about%20Relay.QL%2C%20visit%3A%0A%20%20%20%20%2F%2F%20%20%20https%3A%2F%2Ffacebook.github.io%2Frelay%2Fdocs%2Fapi-reference-relay-ql.html%0A%20%20%20%20greetings%3A%20()%20%3D%3E%20Relay.QL%60%0A%20%20%20%20%20%20fragment%20on%20Greetings%20%7B%0A%20%20%20%20%20%20%20%20hello%2C%0A%20%20%20%20%20%20%20%20goodbye%2C%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%60%2C%0A%20%20%7D%0A%7D)%3B%0A%0A%2F**%0A%20*%20%233%20-%20Relay%20routes%0A%20*%20Define%20a%20root%20GraphQL%20query%20into%20which%20your%0A%20*%20containers%27%20query%20fragments%20will%20be%20composed.%0A%20*%0A%20*%20To%20learn%20more%20about%20Relay%20routes%2C%20visit%3A%0A%20*%20%20%20https%3A%2F%2Ffacebook.github.io%2Frelay%2Fdocs%2Fguides-routes.html%0A%20*%2F%0Aclass%20HelloRoute%20extends%20Relay.Route%20%7B%0A%20%20static%20routeName%20%3D%20%27Hello%27%3B%20%20%2F%2F%20A%20unique%20name%0A%20%20static%20queries%20%3D%20%7B%0A%20%20%20%20%2F%2F%20Here%2C%20we%20compose%20your%20Relay%20container%27s%0A%20%20%20%20%2F%2F%20%27greetings%27%20fragment%20into%20the%20%27greetings%27%0A%20%20%20%20%2F%2F%20field%20at%20the%20root%20of%20the%20GraphQL%20schema.%0A%20%20%20%20greetings%3A%20(Component)%20%3D%3E%20Relay.QL%60%0A%20%20%20%20%20%20query%20GreetingsQuery%20%7B%0A%20%20%20%20%20%20%20%20greetings%20%7B%0A%20%20%20%20%20%20%20%20%20%20%24%7BComponent.getFragment(%27greetings%27)%7D%2C%0A%20%20%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%60%2C%0A%20%20%7D%3B%0A%7D%0A%0A%2F**%0A%20*%20%234%20-%20Relay%20root%20containers%0A%20*%20Compose%20a%20Relay%20container%20with%20a%20Relay%20route.%0A%20*%20This%20enables%20Relay%20to%20synthesize%20a%20complete%20query%0A%20*%20to%20fetch%20the%20data%20necessary%20to%20render%20your%20app.%0A%20*%0A%20*%20To%20learn%20more%20about%20Relay%20root%20containers%2C%20visit%3A%0A%20*%20%20%20https%3A%2F%2Ffacebook.github.io%2Frelay%2Fdocs%2Fguides-root-container.html%0A%20*%2F%0AReactDOM.render(%0A%20%20%3CRelay.RootContainer%0A%20%20%20%20Component%3D%7BHelloApp%7D%0A%20%20%20%20route%3D%7Bnew%20HelloRoute()%7D%0A%20%20%2F%3E%2C%0A%20%20mountNode%0A)%3B%0A&amp;schema=%2F**%0A%20*%20Copyright%20(c)%202013-present%2C%20Facebook%2C%20Inc.%0A%20*%20All%20rights%20reserved.%0A%20*%0A%20*%20This%20source%20code%20is%20licensed%20under%20the%20BSD-style%20license%20found%20in%20the%0A%20*%20LICENSE%20file%20in%20the%20root%20directory%20of%20this%20source%20tree.%20An%20additional%20grant%0A%20*%20of%20patent%20rights%20can%20be%20found%20in%20the%20PATENTS%20file%20in%20the%20same%20directory.%0A%20*%2F%0A%0Aimport%20%7B%0A%20%20GraphQLObjectType%2C%0A%20%20GraphQLSchema%2C%0A%20%20GraphQLString%2C%0A%7D%20from%20%27graphql%27%3B%0A%0Aconst%20GREETINGS%20%3D%20%7B%0A%20%20hello%3A%20%27Hello%27%2C%0A%20%20goodbye%3A%20%27Goodbye%27%0A%7D%3B%0A%0A%2F**%0A%20*%20Objects.%0A%20*%20Build%20up%20a%20portrait%20of%20your%20data%20universe%0A%20*%20using%20the%20object%20type.%20Here%2C%20we%20define%20a%0A%20*%20type%20of%20object%20that%20has%20a%20%27hello%27%20field%0A%20*%20that%20is%20of%20the%20string%20type.%0A%20*%2F%0Aconst%20GreetingsType%20%3D%20new%20GraphQLObjectType(%7B%0A%20%20name%3A%20%27Greetings%27%2C%0A%20%20fields%3A%20()%20%3D%3E%20(%7B%0A%20%20%20%20hello%3A%20%7Btype%3A%20GraphQLString%7D%2C%0A%20%20%20%20goodbye%3A%20%7Btype%3A%20GraphQLString%7D%0A%20%20%7D)%2C%0A%7D)%3B%0A%0A%2F**%0A%20*%20The%20schema.%0A%20*%20Here%20we%20export%20a%20schema%20that%20offers%20one%20root%0A%20*%20field%20named%20%27greetings%27%2C%20and%20a%20method%20to%0A%20*%20resolve%20its%20data.%0A%20*%0A%20*%20To%20learn%20more%20about%20writing%20GraphQL%20schemas%20for%20Relay%2C%20visit%3A%0A%20*%20%20%20https%3A%2F%2Fgithub.com%2Fgraphql%2Fgraphql-relay-js%0A%20*%2F%0Aexport%20default%20new%20GraphQLSchema(%7B%0A%20%20query%3A%20new%20GraphQLObjectType(%7B%0A%20%20%20%20name%3A%20%27Query%27%2C%0A%20%20%20%20fields%3A%20()%20%3D%3E%20(%7B%0A%20%20%20%20%20%20greetings%3A%20%7B%0A%20%20%20%20%20%20%20%20type%3A%20GreetingsType%2C%0A%20%20%20%20%20%20%20%20%2F%2F%20Here%20we%20define%20a%20resolver%20that%20returns%0A%20%20%20%20%20%20%20%20%2F%2F%20the%20data%20defined%20above.%20Were%20this%20schema%0A%20%20%20%20%20%20%20%20%2F%2F%20executing%20on%20the%20server%20side%2C%20you%20could%0A%20%20%20%20%20%20%20%20%2F%2F%20write%20a%20resolve%20method%20that%20fetches%0A%20%20%20%20%20%20%20%20%2F%2F%20live%20data%20from%20a%20database.%0A%20%20%20%20%20%20%20%20resolve%3A%20()%20%3D%3E%20GREETINGS%2C%0A%20%20%20%20%20%20%7D%2C%0A%20%20%20%20%7D)%2C%0A%20%20%7D)%2C%0A%7D)%3B%0A"" rel=""nofollow noreferrer"">Relay's playground</a>, I could see that there is a <code>commitUpdate()</code> function in <code>this.props.relay</code>.</p>&#xA;<p>Any thoughts?</p>&#xA;",3200803,,4751173,2021-11-08 06:46:03,2021-11-08 06:46:03,Relay Framework uncaught TypeError: this.props.relay.commitUpdate is not a function,<reactjs><graphql><relay>,2,0,0,2016-06-19 03:05:11
37915420,2,,37903571,1,,"<p>@asubanovsky The <a href=""https://github.com/CoericK/relay-starter-kit"" rel=""nofollow"">Relay Starter Kit</a> seems to be outdated compared with the <a href=""https://facebook.github.io/relay/docs/tutorial.html#writing-the-game"" rel=""nofollow"">Relay Documentation</a>, so a better solution would be to update your version of 'react-relay' from 0.8.1 to 0.9.0 and then <code>npm install</code>, undo the change that u made to <code>Relay.Store.commitUpdate</code> and you will be ready to go.</p>&#xA;",913426,,,,2016-06-20 05:55:34,"",,0,1,0,2016-06-20 05:55:34
38289999,2,,38266673,0,,"<p>By default, STOMP clients can connect to Apollo on port <strong>61613</strong>. Port 61680 is for the web admin interface.</p>&#xA;&#xA;<p>Your configuration contains</p>&#xA;&#xA;<pre><code>&lt;connector id=""tcp"" bind=""tcp://0.0.0.0:61613"" connection_limit=""2000""/&gt;&#xA;</code></pre>&#xA;&#xA;<p>so I assume that </p>&#xA;&#xA;<pre><code>private let port: UInt = 61613&#xA;</code></pre>&#xA;&#xA;<p>in your code should solve the problem</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Note: you can use netstat or TCPView to verify that the port 61613 is open</p>&#xA;",80901,,80901,2016-07-10 08:51:20,2016-07-10 08:51:20,"",,0,1,0,2016-07-10 08:20:18
38444062,1,,,9,421,"<p>My Relay/GraphQL fragment contains two different queries, both of which return objects of the same type, and there is often some overlap between the result sets returned by either (and that's perfectly fine with me). I see the following warnings in the browser:</p>&#xA;&#xA;<pre><code>Attempted to add an ID already in GraphQLSegment: client:client:15254944391:UmV2aWV3ZXI6MQ==&#xA;cra.dll.js:106483 Attempted to add noncontiguous index to GraphQLSegment: 52 to (0, 2)&#xA;cra.dll.js:106483 Attempted to add noncontiguous index to GraphQLSegment: 53 to (0, 2)&#xA;cra.dll.js:106483 Attempted to add noncontiguous index to GraphQLSegment: 54 to (0, 2)&#xA;cra.dll.js:106483 Attempted to add noncontiguous index to GraphQLSegment: 55 to (0, 2)&#xA;</code></pre>&#xA;&#xA;<p>Can someone confirm that this is indeed due to me seeing the same Relay object twice? How do I silence the warning or at least debug it further?</p>&#xA;",629578,,710693,2017-08-11 00:16:56,2017-08-11 00:16:56,Attempted to add an ID already in GraphQLSegment,<reactjs><graphql><relayjs>,1,2,0,2016-07-18 18:54:29
38600657,2,,38598284,0,,"<p>Have you tried naming the query? I.e. writing <code>query abc {</code> instead of just <code>query {</code>. If that fixes the problem, you should file an issue on react-apollo.</p>&#xA;&#xA;<p>If it doesn't work, you can start narrowing down the error by checking if there are any errors in the console and checking in the network tab if the browser actually makes a request.</p>&#xA;",6268377,,,,2016-07-26 22:08:21,"",,0,0,0,2016-07-26 22:08:21
38689117,1,,,2,149,"<h3>Generally:</h3>&#xA;&#xA;<p>Do these four systems have caches? And if so, what is the method for clearing each?</p>&#xA;&#xA;<h3>Specifically:</h3>&#xA;&#xA;<p>Having trouble with a react app we are developing. Seemingly sporadically we get the following error when developing locally:</p>&#xA;&#xA;<blockquote>&#xA;  <p>""Invariant Violation: RelayQL: Unexpected invocation at runtime. Either the Babel transform was not set up, or it failed to identify this call site. Make sure it is being used verbatim as `Relay.QL`.""</p>&#xA;</blockquote>&#xA;&#xA;<p>Am yet to notice any particular reason why/when this starts happening. </p>&#xA;&#xA;<p>I finally found a hack solution which involved me going into the referenced component file referenced (further in the error msg, unshown) and deleting the RelayQL fragment inside e.g.</p>&#xA;&#xA;<pre><code>export default Relay.createContainer(PinterestShare, {&#xA;    fragments: {&#xA;        resource: () =&gt; Relay.QL`&#xA;        fragment on Resource {&#xA;            id&#xA;            title&#xA;            files {&#xA;                type&#xA;                images {&#xA;                    medium { url width }&#xA;                }&#xA;            }&#xA;        }&#xA;        `&#xA;    }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>to </p>&#xA;&#xA;<pre><code>export default Relay.createContainer(PinterestShare, {&#xA;    fragments: {&#xA;        resource: () =&gt; Relay.QL`&#xA;        `&#xA;    }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I then save, and reboot the app. It crashes, obviously, as the fragment is malformed. So I undo the change back to the original, and reboot the app again. Now, the original error is fixed, despite no code actually changing.</p>&#xA;&#xA;<p>So what happened? Somehow doing this process is flushing some cache? Is this in node, webpack, relay, or babel? I've tried rebooting my machine inbetween, as well as <code>killall node</code>, neither which work, which implies to me it is not RAM based...</p>&#xA;&#xA;<p>The annoying part now is I am having to do this for all of my individual component files. Surely there must be a way to purge this mystery cache enmass for the whole app?</p>&#xA;",2387812,,893780,2016-08-02 06:16:27,2016-08-02 06:16:27,Babel / Node / Relay / Webpack cache?,<node.js><webpack><babeljs><graphql><relay>,0,4,0,2016-07-31 23:07:38
39129877,1,,,0,73,"<p>With relay.js, for some reason when I do a mutation and get a return value with REQUIRED_CHILDREN in <code>getConfigs</code>, connections are being returned with a strange alias: <code>_tierItems2EmfF3</code>where it should be <code>tierItems</code>.</p>&#xA;&#xA;<p>When I make the same mutation through GraphiQL, the connection is returned properly.</p>&#xA;&#xA;<p>I am not sure if this is some kind of configuration issue, but I have no idea what could be causing this.</p>&#xA;",6748860,,,,2016-08-25 03:04:45,relayjs returning strange values for connections via REQUIRED_CHILDREN after mutation,<reactjs><graphql><relayjs>,1,0,0,2016-08-24 17:45:58
39278457,2,,39268365,0,,"<p>I can suggest you to use <a href=""http://crossbar.io"" rel=""nofollow"">WAMP protocol</a> and then build a network of all of your functionality.&#xA;Finally serve it under 1 GraphQL server</p>&#xA;",2770306,,2770306,2016-09-27 18:35:37,2016-09-27 18:35:37,"",,0,1,0,2016-09-01 18:22:04
39279290,2,,38538791,1,,"<p>While running the todomvc-relay-java, use this to get the schema using httpie:</p>&#xA;&#xA;<p><code>echo '{""query"": ""{ __schema { types { name }}}"", ""variables"": {}}' | http post localhost:8080/graphql</code></p>&#xA;&#xA;<p>Or for curl:</p>&#xA;&#xA;<p><code>curl -XPOST -H 'Content-Type:application/json' -d '{""query"": ""{ __schema { types { name }}}"", ""variables"": {}}' localhost:8080/graphql</code></p>&#xA;",1858656,,,,2016-09-01 19:16:59,"",,0,0,0,2016-09-01 19:16:59
39280362,2,,39279578,1,,"<p>So, this could be because you have something else running on 8080 on your laptop. Maybe try logging uncaught express errors to the console?</p>&#xA;&#xA;<p>Another possibility is that you're not trying exactly the same URL on your desktop. Version 0.2 of apolloServer currently allows only POST requests. When you navigate to the address in your browser, it will try to send a GET request, which will result in a 404. Try spinning up graphiql on a separate route and see if you can access that.</p>&#xA;&#xA;<p>PS: If you get a chance, you should make a PR to the repo where you copy-pasted the code snippet from, so other people won't run into the same issue ;-)</p>&#xA;",6268377,,6268377,2016-09-02 07:48:24,2016-09-02 07:48:24,"",,0,7,0,2016-09-01 20:27:58
39309878,1,,,0,1290,"<p>In GraphiQL at <code>http://localhost:8080/graphiql</code>, I'm using this query:</p>&#xA;&#xA;<pre><code>{&#xA;  instant_message(fromID: ""1""){&#xA;    fromID&#xA;    toID&#xA;    msgText&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm getting this response:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""instant_message"": {&#xA;      ""fromID"": null,&#xA;      ""toID"": null,&#xA;      ""msgText"": null&#xA;    }&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Resolve function for \""instant_message.fromID\"" returned undefined"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 3,&#xA;          ""column"": 5&#xA;        }&#xA;      ]&#xA;    },&#xA;    {&#xA;      ""message"": ""Resolve function for \""instant_message.toID\"" returned undefined"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 4,&#xA;          ""column"": 5&#xA;        }&#xA;      ]&#xA;    },&#xA;    {&#xA;      ""message"": ""Resolve function for \""instant_message.msgText\"" returned undefined"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 5,&#xA;          ""column"": 5&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I tried to set up my system according to the examples found here:</p>&#xA;&#xA;<p><a href=""https://medium.com/apollo-stack/tutorial-building-a-graphql-server-cddaa023c035#.s7vjgjkb7"" rel=""nofollow"">https://medium.com/apollo-stack/tutorial-building-a-graphql-server-cddaa023c035#.s7vjgjkb7</a></p>&#xA;&#xA;<p>Looking at that article, it doesn't seem to be necessary to set up individual resolvers for string fields, but I must be missing something.</p>&#xA;&#xA;<p>What is the correct way to update my resolvers so as to return results from string fields? Example code would be greatly appreciated!</p>&#xA;&#xA;<p>Thanks very much in advance to all for any thoughts or info.</p>&#xA;&#xA;<p><strong>CONNECTORS</strong></p>&#xA;&#xA;<pre><code>import Sequelize from 'sequelize';&#xA;&#xA;//SQL CONNECTORS&#xA;const db = new Sequelize(Meteor.settings.postgres.current_dev_system.dbname, Meteor.settings.postgres.current_dev_system.dbuser, Meteor.settings.postgres.current_dev_system.dbpsd, {&#xA;  host: 'localhost',&#xA;  dialect: 'postgres',&#xA;&#xA;});&#xA;&#xA;db&#xA;    .authenticate()&#xA;    .then(function(err) {&#xA;        console.log('Connection to Sequelize has been established successfully.');&#xA;    })&#xA;    .catch(function (err) {&#xA;        console.log('Unable to connect to the Sequelize database:', err);&#xA;    });&#xA;&#xA;const IMModel = db.define('IM', {&#xA;    id: {type: Sequelize.INTEGER, primaryKey: true, autoIncrement: true},&#xA;    fromID: {type: Sequelize.STRING},&#xA;    toID: {type: Sequelize.STRING},&#xA;    msgText: {type: Sequelize.STRING}&#xA;});&#xA;&#xA;IMModel.sync({force: true}).then(function () {&#xA;    // Table created&#xA;    return IMModel.create({&#xA;        fromID: '1',&#xA;        toID: '2',&#xA;        msgText: 'msg set up via IMModel.create'&#xA;    });&#xA;});&#xA;&#xA;const IM = db.models.IM;&#xA;export {db, IM };&#xA;</code></pre>&#xA;&#xA;<p><strong>SCHEMA</strong></p>&#xA;&#xA;<pre><code>const typeDefinitions = [`&#xA;&#xA;type instant_message {&#xA;  id: Int&#xA;  fromID: String&#xA;  toID: String&#xA;  msgText: String&#xA;}&#xA;type Query {&#xA;  instant_message(fromID: String, toID: String, msgText: String): instant_message&#xA;}&#xA;type RootMutation {&#xA;  createInstant_message(&#xA;    fromID: String!&#xA;    toID: String!&#xA;    msgText: String!&#xA;  ): instant_message&#xA;}&#xA;schema {&#xA;  query: Query,&#xA;  mutation: RootMutation&#xA;}&#xA;`];&#xA;&#xA;export default typeDefinitions;&#xA;</code></pre>&#xA;&#xA;<p><strong>RESOLVERS</strong></p>&#xA;&#xA;<pre><code>import * as connectors from './db-connectors';&#xA;import { Kind } from 'graphql/language';&#xA;const b = 100;&#xA;&#xA;const resolvers = {&#xA;    Query: {&#xA;        instant_message(_, args) {&#xA;            const a = 100;&#xA;            return connectors.IM.find({ where: args });&#xA;        }&#xA;    },&#xA;    RootMutation: {&#xA;        createInstant_message: (__, args) =&gt; { return connectors.IM.create(args); },&#xA;  },&#xA;&#xA;};&#xA;&#xA;export default resolvers;&#xA;</code></pre>&#xA;",364966,,,,2016-09-05 16:43:13,Apollo/GraphQL: Setting Up Resolver for String Fields?,<meteor><graphql><apollo-server>,2,0,0,2016-09-03 18:02:06
39320575,2,,39309878,0,,"<p>The issue is that the query does not expect an array,&#xA;Please fix it:&#xA;<code>&#xA;type Query {&#xA;  instant_message(fromID: String, toID: String, msgText: String): [instant_message]&#xA;}&#xA;</code></p>&#xA;&#xA;<p>Then you should make sure the resolver returns Array of objects, if it doesnt work then the resolver is not returning an Array.</p>&#xA;",2770306,,2770306,2016-09-05 16:43:13,2016-09-05 16:43:13,"",,0,1,0,2016-09-04 19:15:06
39344559,2,,38172479,0,,"<p>If anyone comes across this, we went with Kafka in the end. Its performance is impressive and so far it's very stable on linux. No attempt yet to run it on windows in production deployments.</p>&#xA;&#xA;<p><strong>UPDATE 12/3/2017:</strong>&#xA;Works fine and very stable on Linux, but on Windows this is not usable in production. Old data never gets deleted due to leaky file handles, the relevant Jira is being ignored since 2013: <a href=""https://issues.apache.org/jira/browse/KAFKA-1194"" rel=""nofollow noreferrer"">https://issues.apache.org/jira/browse/KAFKA-1194</a></p>&#xA;",3654309,,3654309,2017-03-12 14:09:44,2017-03-12 14:09:44,"",,0,0,0,2016-09-06 08:47:37
39480846,1,39518997,,1,1079,"<p>I have this mutation working correctly in GraphIQL at <a href=""http://localhost:8080/graphiql"" rel=""nofollow"">http://localhost:8080/graphiql</a>:</p>&#xA;&#xA;<p><strong>QUERY</strong></p>&#xA;&#xA;<pre><code>mutation($fromID: String!, $toID: String!, $msgText: String!){&#xA;  createIM(fromID: $fromID, toID: $toID, msgText: $msgText){&#xA;    fromID&#xA;    toID&#xA;    msgText&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>...AND QUERY VARIABLES</strong></p>&#xA;&#xA;<pre><code>{&#xA;  ""fromID"": ""1"",&#xA;  ""toID"": ""2"",&#xA;  ""msgText"": ""Test from GraphIQL #3. It's working!!!""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now I need to implement this in code.</p>&#xA;&#xA;<p><strong>CLIENT CODE</strong></p>&#xA;&#xA;<pre><code>sendInstantMsg(){&#xA;    const {textToSend} = this.refs;&#xA;    const {toID} = this.props;&#xA;&#xA;    const fromID = Meteor.userId();&#xA;    const msgText = trimInput(textToSend.getValue());&#xA;&#xA;    client.query({&#xA;        query: gql`&#xA;            query mutation($fromID: String!, $toID: String!, $msgText: String!){&#xA;                createIM(fromID: $fromID, toID: $toID, msgText: $msgText){&#xA;                    fromID&#xA;                    toID&#xA;                    msgText&#xA;                }&#xA;            }&#xA;        `,&#xA;        variables: {&#xA;            fromID: fromID,&#xA;            toID: toID,&#xA;            msgText: msgText&#xA;        },&#xA;        forceFetch: false,&#xA;    }).then(({ data }) =&gt; {&#xA;        console.log('got data', data);&#xA;    }).catch((error) =&gt; {&#xA;        console.log('there was an error sending the query', error);&#xA;    });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The query variables (fromID, toID, and msgText) come in to the function as expected, but Apollo throws an error:</p>&#xA;&#xA;<p><code>message: ""Network error: Unexpected token &lt; in JSON at position 0""</code></p>&#xA;&#xA;<p>What am I missing?</p>&#xA;",364966,,791538,2016-09-14 22:12:30,2016-09-15 19:34:17,"Apollo/GraphQL Mutation Works in GraphIQL, but Not in Client Code?",<graphql><apollostack>,1,3,0,2016-09-14 00:31:23
39518997,2,,39480846,2,,"<p>Please try this instead..&#xA;you should use mutate for mutations not query..</p>&#xA;&#xA;<pre><code>client.mutate({&#xA;            mutation: gql`&#xA;                mutation createIM($fromID: String!, $toID: String!, $msgText: String!){&#xA;                    createIM(fromID: $fromID, toID: $toID, msgText: $msgText){&#xA;                        fromID&#xA;                        toID&#xA;                        msgText&#xA;                    }&#xA;                }&#xA;            `,&#xA;            variables: {&#xA;                fromID: fromID,&#xA;                toID: toID,&#xA;                msgText: msgText&#xA;            },&#xA;            forceFetch: false,&#xA;        }).then(({ data }) =&gt; {&#xA;</code></pre>&#xA;",2770306,,,,2016-09-15 19:34:17,"",,0,0,0,2016-09-15 19:34:17
39760234,2,,39759988,11,,"<p>You have to declare INPUT_OBJECT to be an input type:</p>&#xA;&#xA;<pre><code>input INPUT_OBJECT {&#xA;  field1: String,&#xA;  # etc.&#xA;}&#xA;</code></pre>&#xA;",6268377,,,,2016-09-29 02:03:12,"",,0,2,0,2016-09-29 02:03:12
39786443,2,,39733798,0,,"<p>The problem was combination of incorrect relay query usage and bug in isomorphic-relay-router: <a href=""https://github.com/denvned/isomorphic-relay-router/issues/52#issuecomment-250403011"" rel=""nofollow"">link to the issue</a></p>&#xA;",1915075,,,,2016-09-30 07:56:21,"",,0,0,0,2016-09-30 07:56:21
39841256,1,39841324,,1,1630,"<p>I'm working on learning the new Apollo pubsub code, using examples from GitHunt-API and GitHunt-React. When I call <code>subscribe</code> on the client, I'm getting the console log error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>""Cannot query field ""createIM"" on type ""Subscription"".</p>&#xA;</blockquote>&#xA;&#xA;<p>I've tried to follow the sample code very closely, but I'm missing something.</p>&#xA;&#xA;<p>How can I correct this error?</p>&#xA;&#xA;<p><strong>CREATE_IM.JSX</strong></p>&#xA;&#xA;<pre><code>class CreateIM extends React.Component {&#xA;[.....]&#xA;    subscribe(fromID, toID, updateCommentsQuery) {&#xA;        const SUBSCRIPTION_QUERY = gql`&#xA;          subscription IMAdded($fromID: String!, $toID: String!, $msgText: String!){&#xA;              createIM(fromID: $fromID, toID: $toID, msgText: $msgText){&#xA;                fromID&#xA;                toID&#xA;                msgText&#xA;  }&#xA;}&#xA;    `;&#xA;        this.subscriptionObserver = this.props.client.subscribe({&#xA;            query: SUBSCRIPTION_QUERY,&#xA;            variables: { fromID: this.fromID, toID: this.toID },&#xA;        }).subscribe({&#xA;            next(data) {&#xA;                debugger;&#xA;                const newComment = data.commentAdded;&#xA;                updateCommentsQuery((previousResult) =&gt; {&#xA;                    // if it's our own mutation, we might get the subscription result&#xA;                    // after the mutation result.&#xA;                    if (isDuplicateComment(newComment, previousResult.entry.comments)) {&#xA;                        return previousResult;&#xA;                    }&#xA;                    // update returns a new ""immutable"" list with the new comment&#xA;                    // added to the front.&#xA;                    return update(&#xA;                        previousResult,&#xA;                        {&#xA;                            entry: {&#xA;                                comments: {&#xA;                                    $unshift: [newComment],&#xA;                                },&#xA;                            },&#xA;                        }&#xA;                    );&#xA;                });&#xA;            },&#xA;            error(err) { debugger; console.error('err', err); }, //&lt;== ERROR ON THIS LINE&#xA;        });&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p><strong>SCHEMA</strong></p>&#xA;&#xA;<pre><code>import Resolvers from '/imports/api/resolvers';&#xA;import Connectors from '/imports/api/db-connectors';&#xA;import { makeExecutableSchema } from 'graphql-tools';&#xA;&#xA;const typeDefinitions = [`&#xA;&#xA;type instant_message {&#xA;  id: Int&#xA;  fromID: String&#xA;  toID: String&#xA;  msgText: String&#xA;}&#xA;type Query {&#xA;  instant_message(fromID: String, toID: String, msgText: String): [instant_message]&#xA;}&#xA;type Mutation {&#xA;  createIM(&#xA;    fromID: String!&#xA;    toID: String!&#xA;    msgText: String!&#xA;  ): instant_message&#xA;}&#xA;type Subscription {&#xA;  # Subscription fires on every comment added&#xA;  IMAdded(fromID: String!, toID: String!, msgText: String!): instant_message&#xA;}&#xA;&#xA;schema {&#xA;  query: Query,&#xA;  mutation: Mutation&#xA;  subscription: Subscription&#xA;}&#xA;&#xA;`];&#xA;&#xA;&#xA;const executableSchema = makeExecutableSchema({&#xA;    typeDefs: typeDefinitions,&#xA;    resolvers: Resolvers,&#xA;    connectors: Connectors,&#xA;    logger: console,&#xA;});&#xA;&#xA;export default executableSchema;&#xA;</code></pre>&#xA;&#xA;<p><strong>SUBSCRIPTIONS (SERVER CODE)</strong></p>&#xA;&#xA;<pre><code>import { print } from 'graphql-tag/printer';&#xA;import { PubSub, SubscriptionManager } from 'graphql-subscriptions';&#xA;import schema from '/imports/api/schema';&#xA;&#xA;const pubsub = new PubSub();&#xA;const subscriptionManager = new SubscriptionManager({&#xA;    schema,&#xA;    pubsub,&#xA;    setupFunctions: {&#xA;        IMAdded: (options, args) =&gt; ({&#xA;            IMAdded: comment =&gt; true, //not quite sure yet what validation needs to be here&#xA;        }),&#xA;    },&#xA;});&#xA;&#xA;export { subscriptionManager, pubsub };&#xA;</code></pre>&#xA;&#xA;<p><strong>RESOLVERS</strong></p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;    Query: {&#xA;        instant_message(_, args) {&#xA;            var ret = connectors.IM.findAll({ where: args }).then((res) =&gt; res.map((item) =&gt; item.dataValues));&#xA;            return ret;&#xA;        }&#xA;    },&#xA;    Mutation: {&#xA;        createIM(root, args, context) {&#xA;            return Promise.resolve()&#xA;                .then(() =&gt; (&#xA;                    connectors.IM.create(args)&#xA;                ))&#xA;                .then(([args]) =&gt;&#xA;                    connectors.IM.findAll({ where: args }).then((res) =&gt; res.map((item) =&gt; item.dataValues))&#xA;                )&#xA;                .then(comment =&gt; {&#xA;                    // publish subscription notification&#xA;                    pubsub.publish('IMAdded', comment);&#xA;                    return comment;&#xA;                });&#xA;        },&#xA;  },&#xA;    Subscription: {&#xA;        IMAdded(fromID, toID, msgText) {&#xA;            // the subscription payload is the comment.&#xA;            return msgText;&#xA;        },&#xA;    }&#xA;&#xA;};&#xA;</code></pre>&#xA;",364966,,,,2016-10-03 22:44:09,Apollo Publish & Subscribe Error: Cannot Query Field?,<graphql><apollo><apollo-server>,1,0,0,2016-10-03 22:15:52
39874675,2,,39833400,0,,"<p>That's really strange, check the upper lines if there's any other problem like missing a ';', not closing quotations or missing a 'var' declaration.</p>&#xA;&#xA;<p>Check your node version too, try using the latest release.</p>&#xA;",6548718,,,,2016-10-05 13:00:17,"",,0,0,0,2016-10-05 13:00:17
39907374,2,,39833400,2,,<p>I had the same issue in a windows machine.&#xA;resolved upgrading from the LTS version to the Current one. </p>&#xA;&#xA;<p>Hope it helps</p>&#xA;,6558547,,,,2016-10-06 23:56:51,"",,0,1,0,2016-10-06 23:56:51
40074777,1,40094827,,1,1003,"<p>I have an Apollo query that works correctly in localhost:3010/graphiql:</p>&#xA;&#xA;<p><strong>QUERY</strong></p>&#xA;&#xA;<pre><code>query getIMs($fromID: String!, $toID: String!){&#xA;  instant_message(fromID:$fromID, toID: $toID){&#xA;    fromID,&#xA;    toID,&#xA;    msgText&#xA;  }&#xA;}  &#xA;</code></pre>&#xA;&#xA;<p><strong>QUERY VARIABLES</strong></p>&#xA;&#xA;<pre><code>{&#xA;  ""fromID"": ""1"",&#xA;  ""toID"": ""2""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here's my code to run the query via a call to graphql():</p>&#xA;&#xA;<pre><code>const GETIMS_QUERY = gql`&#xA;query getIMs($fromID: String!, $toID: String!){&#xA;  instant_message(fromID:$fromID, toID: $toID){&#xA;    fromID,&#xA;    toID,&#xA;    msgText&#xA;  }&#xA;}  `;&#xA;&#xA;&#xA;const CreateIMPageWithDataAndMutations = graphql(GETIMS_QUERY, {&#xA;    options({ toID, userID }) {&#xA;        return {&#xA;            variables: { fromID: `${userID}`, toID: `${toID}`}&#xA;        };&#xA;    }&#xA;})(CreateIMPageWithMutations);&#xA;</code></pre>&#xA;&#xA;<p>The Chrome Network tab shows the expected Request Payload:</p>&#xA;&#xA;<blockquote>&#xA;  <p>operationName:""getIMs"" query: ""query getIMs($fromID: String!, $toID:&#xA;  String!) {↵  instant_message(fromID: $fromID, toID: $toID) {↵<br>&#xA;  fromID↵    toID↵    msgText↵    __typename↵  }↵}↵"" &#xA;  variables:{fromID: ""DsmkoaYPeAumREsqC"", toID: ""572bddac4ecbbac0ffe37fdd""}&#xA;  fromID:""DsmkoaYPeAumREsqC"" &#xA;  toID:""572bddac4ecbbac0ffe37fdd""</p>&#xA;</blockquote>&#xA;&#xA;<p>But the <code>data</code> object is coming back with an ApolloError:</p>&#xA;&#xA;<blockquote>&#xA;  <p>""Network error: Unexpected token &lt; in JSON at position 0""</p>&#xA;</blockquote>&#xA;&#xA;<p>How can I correct this?</p>&#xA;&#xA;<p><strong>Update</strong></p>&#xA;&#xA;<p>Here's a screen shot of the Network tab:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/sgq1p.png"" rel=""nofollow""><img src=""https://i.stack.imgur.com/sgq1p.png"" alt=""enter image description here""></a></p>&#xA;",364966,,364966,2016-10-17 18:30:13,2016-10-17 20:15:46,Apollo Query Works in GraphIQL but Not in Call to graphql()?,<graphql><apollo><apollostack>,1,7,0,2016-10-16 19:55:55
40094827,2,,40074777,1,,"<p>With the help of Marc Greenstock and @neophi, I found the answer.  I had this code setting up Apollo Client:</p>&#xA;&#xA;<pre><code>const networkInterface = createNetworkInterface({&#xA;    uri: '/graphql',&#xA;    opts: {&#xA;        credentials: 'same-origin',&#xA;    },&#xA;    transportBatching: true,&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>This was defining the uri relatively and using the same port (3000) that Meteor is running on.  But the GraphQL server is of course running on a different port, 3010 in my case. This fixed it:</p>&#xA;&#xA;<pre><code>const networkInterface = createNetworkInterface({&#xA;    uri: 'http://localhost:3010/graphql',&#xA;    opts: {&#xA;        credentials: 'same-origin',&#xA;    },&#xA;    transportBatching: true,&#xA;});&#xA;</code></pre>&#xA;",364966,,364966,2016-10-17 20:15:46,2016-10-17 20:15:46,"",,0,0,0,2016-10-17 20:08:59
40295170,2,,40295099,2,,"<p>Here a couple things to check. On my schema, it has some syntax I'm not seeing in yours at the moment. See the <code>: instant_message</code> after the query strings?</p>&#xA;&#xA;<pre><code>const typeDefinitions = [`&#xA;&#xA;type instant_message {&#xA;  id: Int&#xA;  fromID: String&#xA;  toID: String&#xA;  msgText: String&#xA;}&#xA;type Query {&#xA;  instant_message(id: Int, fromID: String, toID: String, msgText: String): [instant_message]&#xA;}&#xA;type Mutation {&#xA;  createIM(&#xA;    fromID: String!&#xA;    toID: String!&#xA;    msgText: String!&#xA;  ): instant_message&#xA;}&#xA;type Subscription {&#xA;  # Subscription fires on every comment added&#xA;  IMAdded(id: Int, fromID: String!, toID: String!): instant_message&#xA;}&#xA;&#xA;schema {&#xA;  query: Query,&#xA;  mutation: Mutation&#xA;  subscription: Subscription&#xA;}&#xA;&#xA;`];&#xA;</code></pre>&#xA;&#xA;<p>I've got some different syntax on the client as well:</p>&#xA;&#xA;<pre><code>subscribe(fromID, toID, updateQueryViaSubscription) {&#xA;    const SUBSCRIPTION_QUERY = gql`&#xA;      subscription getIMsViaSubscription($fromID: String!, $toID: String!){&#xA;          IMAdded(fromID:$fromID, toID: $toID){&#xA;            id,&#xA;            fromID,&#xA;            toID,&#xA;            msgText&#xA;          }&#xA;        } &#xA;`;&#xA;    this.subscriptionObserver = this.props.client.subscribe({&#xA;        query: SUBSCRIPTION_QUERY,&#xA;        variables: { fromID: this.fromID, toID: this.toID },&#xA;    }).subscribe({&#xA;        next(data) {&#xA;            const newMsag = data.IMAdded;&#xA;            updateQueryViaSubscription((previousResult) =&gt; {&#xA;                // if it's our own mutation, we might get the subscription result&#xA;                // after the mutation result.&#xA;                // if (isDuplicateIM(newComment, previousResult.entry.comments)) {&#xA;                //     return previousResult;&#xA;                // }&#xA;                // update returns a new ""immutable"" list with the new comment&#xA;                // added to the front.&#xA;                return update(&#xA;                    previousResult,&#xA;                    {&#xA;                        instant_message: {&#xA;                            $push: [newMsag],&#xA;                        },&#xA;                    }&#xA;                );&#xA;            });&#xA;        },&#xA;        error(err) {&#xA;            console.error('err', err); },&#xA;    });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Please check that and let me know if the updated code gets rid of that error yet.</p>&#xA;&#xA;<p><strong>UPDATE:</strong> Per our discussion on Slack, you found that you needed your executableSchema to be like this:</p>&#xA;&#xA;<pre><code>const executableSchema = makeExecutableSchema({&#xA;    typeDefs: typeDefinitions,&#xA;    resolvers: Resolvers,&#xA;    connectors: Connectors,&#xA;    logger: console,&#xA;});&#xA;&#xA;export default executableSchema;&#xA;</code></pre>&#xA;&#xA;<p>Here's the resolver I'm using:</p>&#xA;&#xA;<pre><code>Subscription: {&#xA;    IMAdded(IMThatWasAdded) {&#xA;        var ret = IMThatWasAdded;&#xA;        return ret;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",364966,,364966,2016-10-28 16:40:03,2016-10-28 16:40:03,"",,0,1,0,2016-10-27 22:26:21
40487240,2,,39271864,5,,"<p>Turns out, of course, it was human error.  I had cacheDirectory as <code>true</code> in my babel-loader query.  You can read about it on the babel-loader readme (just do a find on page for 'cacheDirectory') <a href=""https://github.com/babel/babel-loader"" rel=""noreferrer"">https://github.com/babel/babel-loader</a></p>&#xA;&#xA;<p>Once I changed that to <code>false</code>, which is the default.  The problem went away. Hope that helps others.</p>&#xA;",105500,,,,2016-11-08 12:40:35,"",,0,0,0,2016-11-08 12:40:35
40621077,2,,40434746,2,,"<p>This was a reported as an issue on github and is now fixed: <a href=""https://github.com/graphql-python/graphene-django/issues/8"" rel=""nofollow noreferrer"">https://github.com/graphql-python/graphene-django/issues/8</a></p>&#xA;&#xA;<p>Upgrade to graphene 1.1 and you should be good to go.</p>&#xA;",476414,,,,2016-11-15 22:46:35,"",,0,4,0,2016-11-15 22:46:35
40796065,2,,40766475,2,,<p>I think you should try with: <code>$unshift: [{node: addedReview}]</code>. Depending on your <code>addCodeReview</code> mutation.</p>&#xA;,6304017,,,,2016-11-25 00:15:27,"",,0,1,0,2016-11-25 00:15:27
41103181,2,,40843037,1,,"<p>You can check if there is a network layer implementation set via <code>Relay.Store._storeData._networkLayer._implementation</code>. If this is defined, your network layer has been injected. Fair warning, the underscore prefix tells me this is an undocumented API and is subject to change at any time. </p>&#xA;",1569757,,,,2016-12-12 14:33:51,"",,0,0,0,2016-12-12 14:33:51
41349742,1,,,1,1926,"<p>In node.js to run the endpoint locally, I use the following snippet in my app.js</p>&#xA;&#xA;<pre><code>app.use('/graphql', (0, _expressGraphql2.default)(function (req) {&#xA;  return {&#xA;    schema: _schema2.default,&#xA;    pretty: true,&#xA;    context: _extends({ db: _models2.default }, (0, _isUser2.default)(req.headers['authorization'].split(' ')[1]))&#xA;  };&#xA;}));&#xA;app.listen(8080, function () {&#xA;</code></pre>&#xA;&#xA;<p>However, my app isn't receiving any response from the endpoint on trying to reach hostname:8080/graphql. This works on my local machine.</p>&#xA;",3740387,,4495081,2016-12-27 19:37:56,2017-01-24 15:12:21,Running GraphQL server on Google Cloud App Engine,<node.js><google-app-engine><google-cloud-endpoints><graphql><graphql-js>,1,3,0,2016-12-27 17:45:41
41752189,2,,38466284,0,,"<p>You can use a webpack-dev-server's proxy option to proxy all <code>/graphql</code> requests from port 3000 to port 4444.</p>&#xA;&#xA;<pre><code>devServer:{&#xA;  contentBase: '../frontend/src/www',  //Relative directory for base of server&#xA;  proxy: {'/': 'http://localhost:3000'},&#xA;  devtool: 'eval',&#xA;  hot: true,        //Live-reload&#xA;  inline: true,&#xA;  port: 3001        //Port Number&#xA;}, &#xA;</code></pre>&#xA;&#xA;<p>Checkout here for more info: <a href=""https://github.com/bfwg/relay-gallery/blob/master/config/webpack-dev-server.config.js#L20"" rel=""nofollow noreferrer"">https://github.com/bfwg/relay-gallery/blob/master/config/webpack-dev-server.config.js#L20</a></p>&#xA;",5718107,,,,2017-01-19 21:38:58,"",,0,0,0,2017-01-19 21:38:58
41815590,2,,41349742,1,,"<p>The title of your post indicates that your node.js app is deployed in Google App Engine. There is no need to worry about assigning an IP address to your instance in that environment. Instances are managed by the App Engine, and so is the routing of requests to your application. </p>&#xA;&#xA;<p>To access the app, once deployed to the App Engine, one only needs to address it following the pattern: app_name.appspot.com. Alternatively, for a custom domain, you can follow the “Using Custom Domains and SSL” guide [1]. Sub-chapter “Adding SSL to your custom domain” of this document may help you with the setting up of SSL, if needed.</p>&#xA;&#xA;<p>The app listens on port 8080 by default in the app engine. This is of no concern to an outside caller, who can only use the following the pattern: app_name.appspot.com to call the app. This situation is valid for the app engine environment. </p>&#xA;&#xA;<p>[1] <a href=""https://cloud.google.com/appengine/docs/flexible/nodejs/using-custom-domains-and-ssl"" rel=""nofollow noreferrer"">https://cloud.google.com/appengine/docs/flexible/nodejs/using-custom-domains-and-ssl</a></p>&#xA;",6938128,,6938128,2017-01-24 15:12:21,2017-01-24 15:12:21,"",,0,3,0,2017-01-23 21:04:05
41841435,2,,41840798,5,,"<p>This can be done using an <a href=""http://graphql.org/learn/introspection/"" rel=""noreferrer"">introspection query</a>.</p>&#xA;&#xA;<p>In your case this is one possible solution:</p>&#xA;&#xA;<pre><code>{&#xA;    __type(name: ""timeSeriesIntervalEnum"") {&#xA;    name&#xA;    enumValues {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The response contains a list of all possible types:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""__type"": {&#xA;      ""name"": ""timeSeriesIntervalEnum"",&#xA;      ""enumValues"": [&#xA;        {&#xA;          ""name"": ""YEAR""&#xA;        },&#xA;        {&#xA;          ""name"": ""QUARTER""&#xA;        },&#xA;        {&#xA;          ""name"": ""MONTH""&#xA;        },&#xA;        {&#xA;          ""name"": ""WEEK""&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1176596,,,,2017-01-25 00:30:27,"",,0,1,0,2017-01-25 00:30:27
41902647,1,,,2,1504,"<p>I'm working on an apollo-express graphql server. I attempted to integrate the module 'graphql-type-json' but when I followed <a href=""http://dev.apollodata.com/tools/graphql-tools/scalars.html#Own-GraphQLScalarType-instance"" rel=""nofollow noreferrer"">this description</a> on how to integrate, I've tried many things but it seems that the type isn't being passed to the resolver correctly - but I've hit a wall in my debugging and could use a little help. Here is a summary of what I'm doing.</p>&#xA;&#xA;<pre><code>import { makeExecutableSchema } from 'graphql-tools';&#xA;const GraphQLJSON = require('graphql-type-json');&#xA;//Have also tried import GraphQLJSON from 'graphql-type-json';&#xA;&#xA;const schema = `&#xA;scalar JSON&#xA;&#xA;type Device {&#xA;  deviceconfig: JSON&#xA;}&#xA;&#xA;type Query {&#xA;  foo: Foo&#xA;}&#xA;`;&#xA;&#xA;const resolveFunctions = {&#xA;   JSON: GraphQLJSON,&#xA;   //JSON: {return GraphQLJSON} stops error but other issues come up...&#xA;   Query: ...&#xA; };&#xA;&#xA;const jsSchema = makeExecutableSchema({&#xA;typeDefs: schema,&#xA;resolvers: resolveFunctions,&#xA;resolverValidationOptions: {&#xA;  requireResolversForNonScalar: false,&#xA;},&#xA;allowUndefinedInResolve: true,&#xA;printErrors: true,&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Not sure if it's relevant but there are a few issues with my npm:</p>&#xA;&#xA;<pre><code>graphql-type-json@0.1.4&#xA;&#xA;UNMET PEER DEPENDENCY graphql@0.8.2 invalid&#xA;&#xA;├─┬ graphql-tools@0.4.2&#xA;&#xA;│ ├── UNMET PEER DEPENDENCY graphql@^0.5.0 || ^0.6.0&#xA;&#xA;&#xA;npm ERR! peer dep missing: graphql@^0.6.1 || ^0.7.0, required by apollo-server@0.3.3&#xA;&#xA;npm ERR! peer dep missing: graphql@^0.5.0, required by graphql-tools@0.4.2&#xA;&#xA;npm ERR! extraneous: casual@1.5.8 /home/apollo/node_modules/casual&#xA;&#xA;npm ERR! extraneous: mongoose@4.6.6 /home/apollo/node_modules/mongoose&#xA;&#xA;npm ERR! extraneous: mysql-events@0.0.8 /home/apollo/node_modules/mysql-events&#xA;&#xA;npm ERR! peer dep missing: graphql@^0.5.0 || ^0.6.0, required by express-widgetizer@0.5.11&#xA;</code></pre>&#xA;",7480501,,2607840,2017-01-27 21:27:07,2017-06-28 05:44:51,"Apollo Graphql Custom Scalar JSON - complains ""TypeError: type.getFields is not a function""",<json><graphql><graphql-js><apollo>,1,2,0,2017-01-27 20:39:57
41968712,1,,,0,134,"<p>I am currently trying to upload a file via Relay but I am receiving a syntax error from our GraphQL server implementation whenever I try to execute the mutation. I am currently using graphql-js-0.4.18 and graphql-relay-js-0.3.6. I am assuming that one (or both) of these package versions is the culprit. Does anyone know which minimum versions of these packages I would need to properly support file uploads? I am forced to port these packages to a different language which is why I am concerned about the minimum versions required. Thanks in advance!</p>&#xA;&#xA;<p><strong>Mutation Request</strong></p>&#xA;&#xA;<pre><code>------WebKitFormBoundaryKwC5gIWABIRSXoeW&#xA;Content-Disposition: form-data; name=""query""&#xA;&#xA;mutation UploadFileMutation($input_0:CTI_Mutation_UploadFileInput!) {&#xA;  uploadFile(input:$input_0) {&#xA;    clientMutationId,&#xA;    ...F0&#xA;  }&#xA;}&#xA;fragment F0 on CTI_Mutation_UploadFilePayload {&#xA;  success&#xA;}&#xA;------WebKitFormBoundaryKwC5gIWABIRSXoeW&#xA;Content-Disposition: form-data; name=""variables""&#xA;&#xA;{""input_0"":{""fileName"":""test_file_upload.txt"",""clientMutationId"":""3""}}&#xA;------WebKitFormBoundaryKwC5gIWABIRSXoeW&#xA;Content-Disposition: form-data; name=""file""; filename=""test_file_upload.txt""&#xA;Content-Type: text/plain&#xA;&#xA;&#xA;------WebKitFormBoundaryKwC5gIWABIRSXoeW--&#xA;</code></pre>&#xA;&#xA;<p><strong>Mutation Response</strong></p>&#xA;&#xA;<pre><code>{""errors"":[{""message"":""Syntax Error GraphQL request (1:2) Invalid number, expected digit but got: \""-\"".\n\n1: ------WebKitFormBoundaryKwC5gIWABIRSXoeW\n    ^\n2: Content-Disposition: form-data; name=\""query\""\n"",""locations"":[{""column"":2,""line"":1}]}]}&#xA;</code></pre>&#xA;",440566,,,,2017-02-01 16:00:26,Which versions of graphql-js and graphql-relay-js are required to support file upload via the Relay Mutation getFiles function?,<file-upload><graphql><relayjs><relay><graphql-js>,1,1,0,2017-01-31 22:32:39
42073780,1,43796287,,3,372,"<p>I'm playing around graphQL and relay, I make backend in .NET <a href=""https://github.com/graphql-dotnet/graphql-dotnet"" rel=""nofollow noreferrer"">using graphQL-dotnet</a></p>&#xA;&#xA;<p>I have problem with client, I send my query using relay as I see in dev tools client receive all data and nothing happened, just receive warning in console: </p>&#xA;&#xA;<blockquote>&#xA;  <p>dataID.startsWith is not a function</p>&#xA;</blockquote>&#xA;&#xA;<p>This issue occurse when I trying to get data in schema like:</p>&#xA;&#xA;<pre><code>ListOfItems{&#xA;  listProp{&#xA;    itemName&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>where <code>listProp</code> is <code>ListGraphType</code></p>&#xA;&#xA;<p>When I trying to ask about diffrent data that is not a List It working fine. </p>&#xA;&#xA;<p>Can someone help me with this?</p>&#xA;",6779944,,710693,2017-08-11 00:32:41,2017-08-11 00:32:41,Relay - dataID.startsWith is not a function,<graphql><relayjs>,1,2,0,2017-02-06 17:29:30
42211751,2,,42211204,5,,"<p>This is possible using a GraphQL introspection query. </p>&#xA;&#xA;<p>Enum types on Graphcool are named ""MODEL_FIELD"", so in your case you can run this query:</p>&#xA;&#xA;<pre><code>{&#xA;  __type(name: ""LISTING_CATEGORY"") {&#xA;    name&#xA;    enumValues {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can find more information in <a href=""https://stackoverflow.com/a/41841435"">this answer to a similar question</a>. </p>&#xA;",1176596,,-1,2017-05-23 12:09:12,2017-02-13 19:13:13,"",,0,2,0,2017-02-13 19:13:13
42256553,1,,,1,108,"<p>The context object is always empty when the browser is IE11      </p>&#xA;&#xA;<pre><code>Mutation: {&#xA;    insertBusinessIdea (_, {name}, context) {&#xA;&#xA;      if (!context.userId) {&#xA;        throw new Meteor.Error('User must be logged in to create a new Business Idea')&#xA;      } // IE11 not working&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It happens only when deployed in production and only using IE11. On localhost:3000 it works just fine, even using IE11</p>&#xA;&#xA;<p>It might be worth saying that on production it's deployed as a docker container behind an nginx reverse proxy. </p>&#xA;",5546463,,,,2017-02-15 17:43:58,Context is always empty in Apollo Meteor Integration when using IE11 on production,<meteor><graphql><apollo>,0,0,0,2017-02-15 17:43:58
42477520,2,,42477022,1,,<p>I discovered that the stack trace is being issued because the default setting of <code>GraphQLOptions.debug</code> is <code>true</code>.</p>&#xA;&#xA;<p>Setting that to false in the initialisation of the server cleans everything up.</p>&#xA;&#xA;<p>Conclusion: throwing an exception is the right way to do it.</p>&#xA;,554807,,,,2017-02-27 03:49:29,"",,0,0,0,2017-02-27 03:49:29
42509469,1,,,-2,119,"<p>I need to test graphql on a .net environment. It should be on a .net environment.</p>&#xA;&#xA;<p>Any hints where I can start? I already have the graphql official docs and I was already googled too. I need help ""only"" with the .net part of the problem.</p>&#xA;&#xA;<p>Any docs, examples, libraries? </p>&#xA;",5136828,,,,2018-07-07 10:09:39,graphQL on .net. Any thoughts?,<.net><api><graphql>,1,3,0,2017-02-28 13:02:31
42546023,2,,42545259,0,,<p>This error is fixed in the latest version of apollo.</p>&#xA;&#xA;<p>Upgrade <code>apollo-client</code> to <code>0.10.0</code></p>&#xA;&#xA;<p>Upgrade <code>react-apollo</code> to <code>0.13.1</code> (just released)</p>&#xA;,1930168,,,,2017-03-02 02:58:07,"",,0,0,0,2017-03-02 02:58:07
42589100,2,,41753872,0,,"<p>Changing to an older version in the <code>package.json</code> will fix the problem for some lucky ones.</p>&#xA;&#xA;<pre><code>""lokka"": ""^1.7.0"",&#xA;""lokka-transport-http"": ""1.3.2"",&#xA;</code></pre>&#xA;&#xA;<p>More at <a href=""https://github.com/kadirahq/lokka/issues/19"" rel=""nofollow noreferrer"">https://github.com/kadirahq/lokka/issues/19</a></p>&#xA;",669670,,,,2017-03-03 21:55:00,"",,0,0,0,2017-03-03 21:55:00
42611308,2,,42610533,5,,"<p>What GitHub calls ""Explorer"" is actually just Facebook's open source GraphQL console called <a href=""https://github.com/graphql/graphiql"" rel=""noreferrer"">GraphiQL</a> (pronounced ""graphical""). Someone built a standalone version with electron <a href=""https://github.com/skevy/graphiql-app"" rel=""noreferrer"">here</a>.</p>&#xA;",6268377,,,,2017-03-05 17:05:26,"",,0,1,0,2017-03-05 17:05:26
42919420,2,,42723989,0,,"<p>This worked for me (I'm using react_on_rails):</p>&#xA;&#xA;<pre><code>import { ApolloClient, createNetworkInterface } from 'react-apollo';&#xA;import ReactOnRails from 'react-on-rails';&#xA;&#xA;const networkInterface = createNetworkInterface({&#xA;  uri: '/graphql',&#xA;  opts: {&#xA;    credentials: 'same-origin'&#xA;  }&#xA;});&#xA;networkInterface.use([{&#xA;  applyMiddleware(req, next) {&#xA;    if (!req.options.headers) {&#xA;      req.options.headers = {&#xA;        ""X-CSRF-Token"": ReactOnRails.authenticityToken()&#xA;      }&#xA;    }&#xA;    next();&#xA;  }&#xA;}]);&#xA;&#xA;const client = new ApolloClient({&#xA;  networkInterface&#xA;});&#xA;&#xA;export default client&#xA;</code></pre>&#xA;&#xA;<p>I was missing <strong>opts: { credentials: 'same-origin' }</strong> , resulting in the same error: Can't verify CSRF token authenticity.&#xA;Completed 422 Unprocessable Entity</p>&#xA;",302668,,,,2017-03-21 05:56:37,"",,0,0,0,2017-03-21 05:56:37
43116362,2,,42896746,1,,"<p>ran into the same issue, but an upgrade to <code>apollo-client@1.0.0-rc.9</code> and <code>react-apollo@1.0.0-rc.3</code> seems to have solved it: the connected component now refetches its query every time it's rendered. Try upgrading.</p>&#xA;&#xA;<p>(Can't comment, so posting this as an ""answer"". Sorry about that.)</p>&#xA;",2942491,,,,2017-03-30 11:18:22,"",,0,1,0,2017-03-30 11:18:22
43483526,2,,43304986,2,,<p>It seems that you're using an old version of Apollo. Those warnings have been fixed in the recent stable version.</p>&#xA;&#xA;<p>I suggest you replace</p>&#xA;&#xA;<pre><code>classpath 'com.apollographql.android:gradle-plugin:0.1.0'&#xA;</code></pre>&#xA;&#xA;<p>with</p>&#xA;&#xA;<pre><code>classpath 'com.apollographql.apollo:gradle-plugin:0.3.0'&#xA;</code></pre>&#xA;&#xA;<p>and get rid of the <code>generateClasses = true</code> block and the <code>converter-pojo</code> and <code>apollo-api</code> dependencies. Those are no longer needed with the latest version.</p>&#xA;&#xA;<p>Run a clean build after that.</p>&#xA;,5282825,,,,2017-04-18 22:55:54,"",,0,0,0,2017-04-18 22:55:54
43572904,1,,,1,889,"<p>I'm attempting to connect to an <a href=""https://github.com/graphql/express-graphql"" rel=""nofollow noreferrer"">Express-GraphQL</a> endpoint in a Create-React-App using Apollo Client with a custom proxy config for development.  I receive the following error: <a href=""https://i.stack.imgur.com/a15VH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/a15VH.png"" alt=""enter image description here""></a>.</p>&#xA;&#xA;<p><strong>Apollo Client Network Interface:</strong> </p>&#xA;&#xA;<pre><code> import {ApolloProvider, ApolloClient, createNetworkInterface} from 'react-apollo';&#xA;    import './index.css';&#xA;&#xA;    const client = new ApolloClient({&#xA;  networkInterface: createNetworkInterface({&#xA;  uri:""http://localhost:8080/graphql"",&#xA;}),&#xA;  connectToDevTools: true&#xA;});&#xA;</code></pre>&#xA;&#xA;<p><strong>Express Server / GraphQL Server</strong></p>&#xA;&#xA;<pre><code>const graphqlHTTP = require('express-graphql');&#xA;const app = express();&#xA;&#xA;app.use('/graphql', graphqlHTTP(request =&gt;{&#xA;   return {&#xA;   schema: schema,&#xA;   graphiql: true,&#xA;   rootValue: root&#xA;} }));&#xA;let server;&#xA;function runServer(dbUrl, host, port=3001) {&#xA;  return new Promise((resolve, reject) =&gt; {&#xA;    mongoose.Promise = global.Promise;&#xA;    mongoose.connect(dbUrl, err =&gt; {&#xA;      if (err) {&#xA;        return reject(err);&#xA;      }&#xA;      server = app.listen(port, host, () =&gt; {&#xA;        console.log(`Your app is listening on port ${port}`);&#xA;        resolve();&#xA;      })&#xA;</code></pre>&#xA;&#xA;<p><strong>The Proxy</strong>&#xA;(With <a href=""https://github.com/chimurai/http-proxy-middleware"" rel=""nofollow noreferrer"">http-proxy-middlewear</a>)</p>&#xA;&#xA;<pre><code>const express = require('express');&#xA;const proxy = require('http-proxy-middleware');&#xA;const app = express();&#xA;const runServer = require('./server').runServer;&#xA;&#xA;const app = express();&#xA;    // Proxy everything through to Create React App&#xA;    app.use(proxy('http://localhost:3000/', {&#xA;        logLevel: 'warn', // Keep the logs clean&#xA;        ws: true, // Proxy websockets too&#xA;        router: {&#xA;            // Anything to /api goes to our backend&#xA;            'http://localhost:8080/graphql': 'http://localhost:3001/',&#xA;        }&#xA;    }));&#xA;       app.listen(8080);&#xA;</code></pre>&#xA;&#xA;<p><strong>Top Level package.json aka The Reason</strong>&#xA;(3 package.json's for client, server, and top level)</p>&#xA;&#xA;<pre><code>""scripts"": {&#xA;    ""start"": ""node index.js"",&#xA;    ""heroku-postbuild"": ""cd client &amp;&amp; npm install --only=dev &amp;&amp; npm run build"",&#xA;    ""dev"": ""run-p dev:server dev:client start"",&#xA;    ""dev:client"": ""cd client &amp;&amp; cross-env BROWSER=none npm start -- --color=always | xp http://localhost:3000/ http://localhost:8080/"",&#xA;    ""dev:server"": ""cd server &amp;&amp; npm start"",&#xA;    ""install"": ""run-s install:server install:client"",&#xA;    ""install:server"": ""cd server &amp;&amp; npm install"",&#xA;    ""install:client"": ""cd client &amp;&amp; npm install""&#xA;  },&#xA;</code></pre>&#xA;",5257936,,5257936,2017-04-23 18:56:37,2017-04-23 18:56:37,Troubleshoot Resolving Express-GraphQL Endpoint with Apollo Client and Proxy Config,<node.js><proxy><graphql><apollo>,0,3,0,2017-04-23 15:18:13
43607279,1,43607507,,2,1663,"<p>So, I'm having an issue when attempting to create an Apollo/GraphCool subscription, which is throwing up the following error message:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>[React Transform HMR] There was an error updating C:/Users/d0475/Documents/Projects/learn-redux-graphql/client/components/Comments.js:&#xD;&#xA;(anonymous) @ index.js:59&#xD;&#xA;hotApply @ bootstrap ac9bfc0…:514&#xD;&#xA;cb @ process-update.js:52&#xD;&#xA;hotUpdateDownloaded @ bootstrap ac9bfc0…:311&#xD;&#xA;hotAddUpdateChunk @ bootstrap ac9bfc0…:283&#xD;&#xA;webpackHotUpdateCallback @ bootstrap ac9bfc0…:4&#xD;&#xA;(anonymous) @ 0.92fd6f4….hot-update.js:1&#xD;&#xA;index.js:60 Error: ReactClassInterface: You are attempting to define `constructor` on your component more than once. This conflict may be due to a mixin.&#xD;&#xA;    at invariant (invariant.js:39)&#xD;&#xA;    at validateMethodOverride (ReactClass.js:384)&#xD;&#xA;    at mixSpecIntoComponent (ReactClass.js:420)&#xD;&#xA;    at Object.createClass (ReactClass.js:726)&#xD;&#xA;    at Object.&lt;anonymous&gt; (Comments.js?32c0:17)&#xD;&#xA;    at Object.748 (0.92fd6f4….hot-update.js:207)&#xD;&#xA;    at __webpack_require__ (bootstrap ac9bfc0…:555)&#xD;&#xA;    at Object.hotApply [as apply] (bootstrap ac9bfc0…:510)&#xD;&#xA;    at cb (process-update.js:52)&#xD;&#xA;    at hotUpdateDownloaded (bootstrap ac9bfc0…:311)&#xD;&#xA;    at hotAddUpdateChunk (bootstrap ac9bfc0…:283)&#xD;&#xA;    at webpackHotUpdateCallback (bootstrap ac9bfc0…:4)&#xD;&#xA;    at 0.92fd6f4….hot-update.js:1</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>My Comments.js reads as follows:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>import { subscriptionObservable } from '../apolloClient';&#xD;&#xA;&#xD;&#xA;const Comments = React.createClass({&#xD;&#xA;  &#xD;&#xA;  constructor() {&#xD;&#xA;    this.subscription = this.subscribe();&#xD;&#xA;    console.log(`Subscribed for new messages with ID: ${this.subscription._networkSubscriptionId}`);&#xD;&#xA;  },&#xD;&#xA;  subscribe() {&#xD;&#xA;    return subscriptionObservable.subscribe({&#xD;&#xA;      error: (error) =&gt; {&#xD;&#xA;        console.log(`Subscription error: ${error}`);&#xD;&#xA;      },&#xD;&#xA;      next: (result) =&gt; {&#xD;&#xA;        console.log(`Subscription result: ${result}`);&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;  },&#xD;&#xA;  render() {&#xD;&#xA;    const comments = this.props.post.comments || [];&#xD;&#xA;    return (&#xD;&#xA;      &lt;div className=""comments""&gt;&#xD;&#xA;&#xD;&#xA;        {_.map(comments, this.renderComment)}&#xD;&#xA;&#xD;&#xA;        &lt;form onSubmit={this.handleSubmit} ref=""commentForm"" className=""comment-form""&gt;&#xD;&#xA;          &lt;input type=""text"" ref=""author"" placeholder=""author""/&gt;&#xD;&#xA;          &lt;input type=""text"" ref=""comment"" placeholder=""comment""/&gt;&#xD;&#xA;          &lt;input type=""submit"" hidden/&gt;&#xD;&#xA;        &lt;/form&gt;&#xD;&#xA;      &lt;/div&gt;&#xD;&#xA;    );&#xD;&#xA;  }&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;Comments.propTypes = {&#xD;&#xA;  client: React.PropTypes.instanceOf(ApolloClient).isRequired,&#xD;&#xA;}&#xD;&#xA;const CommentsWithApollo = withApollo(Comments);&#xD;&#xA;&#xD;&#xA;export default CommentsWithApollo;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>And my apolloClient.js reads as follows:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>import ApolloClient, {&#xD;&#xA;  createNetworkInterface,&#xD;&#xA;  addTypeName,&#xD;&#xA;} from 'apollo-client';&#xD;&#xA;&#xD;&#xA;import { &#xD;&#xA;    SubscriptionClient, &#xD;&#xA;    addGraphQLSubscriptions,&#xD;&#xA;} from 'subscriptions-transport-ws';&#xD;&#xA;&#xD;&#xA;import { &#xD;&#xA;  Subscription_Add_Delete_Comment_Query,&#xD;&#xA;} from './graphql/mutations-queries';&#xD;&#xA;&#xD;&#xA;// Create WebSocket client&#xD;&#xA;const wsClient = new SubscriptionClient('wss://subscriptions.graph.cool/v1/myID', {&#xD;&#xA;  reconnect: true,&#xD;&#xA;  connectionParams: {&#xD;&#xA;    // Pass any arguments you want for initialization&#xD;&#xA;  }&#xD;&#xA;})&#xD;&#xA;const networkInterface = createNetworkInterface({ &#xD;&#xA;  uri: 'https://api.graph.cool/simple/v1/myID',&#xD;&#xA;  opts: {&#xD;&#xA;    // Additional fetch options like `credentials` or `headers`&#xD;&#xA;    credentials: 'same-origin',&#xD;&#xA;  }&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;const networkInterfaceWithSubscriptions = addGraphQLSubscriptions(&#xD;&#xA;  networkInterface,&#xD;&#xA;  wsClient&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;const client = new ApolloClient({&#xD;&#xA;  networkInterface: networkInterfaceWithSubscriptions,&#xD;&#xA;  dataIdFromObject: (o) =&gt; o.id,&#xD;&#xA;   addTypeName: true&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;let createDeleteSubscription = {&#xD;&#xA;  query: Subscription_Add_Delete_Comment_Query,&#xD;&#xA;  variables: {}&#xD;&#xA;};&#xD;&#xA;&#xD;&#xA;export let subscriptionObservable = client.subscribe(createDeleteSubscription);&#xD;&#xA;&#xD;&#xA;export default client;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>What am I overlooking here?</p>&#xA;",5613904,,,,2017-04-25 10:00:25,ReactClassInterface: You are attempting to define `constructor` on your component more than once. This conflict may be due to a mixin,<javascript><reactjs><apollo>,1,0,0,2017-04-25 09:51:46
43628211,2,,43628138,1,,<p>The reason is because of the wrong name .</p>&#xA;&#xA;<p><code>apolloClient.subscribe</code> fixes my issue</p>&#xA;,4221420,,,,2017-04-26 07:59:11,"",,0,0,0,2017-04-26 07:59:11
43733055,2,,40562727,3,,"<p>One way to do this would be to use webpack like this:</p>&#xA;&#xA;<pre><code>const webpack = require('webpack');&#xA;const path = require('path');&#xA;&#xA;module.exports = {&#xA;  // watch: true,&#xA;  entry: {&#xA;    ApolloClient: './config/ApolloClient.js',&#xA;    createNetworkInterface: './config/createNetworkInterface.js',&#xA;    Redux: './config/Redux.js',&#xA;  },&#xA;  output: {&#xA;    path: path.join(__dirname, 'build/Libs'),&#xA;    filename: '[name].js',&#xA;    library: '[name]',&#xA;    libraryTarget: 'commonjs',&#xA;  },&#xA;  module: {&#xA;    rules: [&#xA;      {&#xA;        use: 'babel-loader',&#xA;        test: /\.js$/,&#xA;        exclude: /node_modules/,&#xA;      },&#xA;    ],&#xA;  },&#xA;  plugins: [&#xA;    new webpack.DefinePlugin({&#xA;      'process.env.NODE_ENV': JSON.stringify(process.env.NODE_ENV),&#xA;    }),&#xA;  ],&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Then in <code>config</code> directory you could have:</p>&#xA;&#xA;<pre><code>/* ApolloClient.js */&#xA;import { ApolloClient } from 'apollo-client';&#xA;&#xA;export default ApolloClient;&#xA;</code></pre>&#xA;&#xA;<p>and</p>&#xA;&#xA;<pre><code>/* createNetworkInterface.js */&#xA;import { createNetworkInterface } from 'apollo-client/transport/networkInterface';&#xA;&#xA;export default createNetworkInterface;&#xA;</code></pre>&#xA;&#xA;<p>plus if you want to have Redux as well:</p>&#xA;&#xA;<pre><code>/* Redux.js */&#xA;import * as Redux from 'redux';&#xA;&#xA;export default Redux;&#xA;</code></pre>&#xA;&#xA;<p>However I was not able to get <code>gql</code> done this way and had to use bolav's fusepm.&#xA;Which you would use exactly as bolav has mention, first install it globally:&#xA;<code>npm install -G fusepm</code> and then <code>fusepm npm graphql-tag</code></p>&#xA;&#xA;<p>Once you have all these in place you can require them as follow:</p>&#xA;&#xA;<pre><code>var Redux = require('build/Libs/Redux');&#xA;var ApolloClient = require('build/Libs/ApolloClient');&#xA;var createNetworkInterface = require('build/Libs/createNetworkInterface');&#xA;var gql = require('fusejs_lib/graphql-tag_graphql-tag.umd');&#xA;</code></pre>&#xA;&#xA;<p>This way still could use some TLC but for now, it works and get's the job done:</p>&#xA;&#xA;<pre><code>var networkInterface = createNetworkInterface.createNetworkInterface({&#xA;  uri: 'http://localhost:8000/graphql',&#xA;});&#xA;&#xA;var client = new ApolloClient.ApolloClient({&#xA;  networkInterface,&#xA;});&#xA;&#xA;client.query({&#xA;  query: gql`&#xA;    query {&#xA;      allPosts {&#xA;        edges {&#xA;          node {&#xA;            id&#xA;            headline&#xA;            summary(length: 80)&#xA;            body&#xA;            createdAt&#xA;            updatedAt&#xA;            personByAuthorId {&#xA;              firstName&#xA;              lastName&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  `,&#xA;})&#xA;.then(data =&gt; data.data.allPosts.edges.forEach(node =&gt; pages.add(createPage(node))))&#xA;.catch(error =&gt; console.log(error));&#xA;</code></pre>&#xA;&#xA;<p>Also if you like I've setup a whole project along with server that might be of an interest to you: <a href=""https://github.com/Bartekus/fuseR"" rel=""nofollow noreferrer"">fuseR</a></p>&#xA;",4102907,,,,2017-05-02 08:06:31,"",,0,0,0,2017-05-02 08:06:31
43860781,1,,,1,1138,"<p>I'm getting this long error when trying to query data. This is data that is valid (tested against the GraphQLi). Any guidance would be greatly appreciated!</p>&#xA;&#xA;<pre><code>Error: Network error: Cannot read property 'slice' of undefined&#xA;    at new ApolloError (eval at ./node_modules/apollo-client/errors/ApolloError.js (main.js:914), &lt;anonymous&gt;:34:28)&#xA;    at ObservableQuery.currentResult (eval at ./node_modules/apollo-client/core/ObservableQuery.js (main.js:826), &lt;anonymous&gt;:83:25)&#xA;    at GraphQL.dataForChild (eval at ./node_modules/react-apollo/lib/graphql.js (main.js:2728), &lt;anonymous&gt;:339:62)&#xA;    at GraphQL.render (eval at ./node_modules/react-apollo/lib/graphql.js (main.js:2728), &lt;anonymous&gt;:377:33)&#xA;    at eval (eval at ./node_modules/react-dom/lib/ReactCompositeComponent.js (main.js:2984), &lt;anonymous&gt;:796:21)&#xA;    at measureLifeCyclePerf (eval at ./node_modules/react-dom/lib/ReactCompositeComponent.js (main.js:2984), &lt;anonymous&gt;:75:12)&#xA;    at ReactCompositeComponentWrapper._renderValidatedComponentWithoutOwnerOrContext (eval at ./node_modules/react-dom/lib/ReactCompositeComponent.js (main.js:2984), &lt;anonymous&gt;:795:25)&#xA;    at ReactCompositeComponentWrapper._renderValidatedComponent (eval at ./node_modules/react-dom/lib/ReactCompositeComponent.js (main.js:2984), &lt;anonymous&gt;:822:32)&#xA;    at ReactCompositeComponentWrapper._updateRenderedComponent (eval at ./node_modules/react-dom/lib/ReactCompositeComponent.js (main.js:2984), &lt;anonymous&gt;:746:36)&#xA;    at ReactCompositeComponentWrapper._performComponentUpdate (eval at ./node_modules/react-dom/lib/ReactCompositeComponent.js (main.js:2984), &lt;anonymous&gt;:724:10)&#xA;</code></pre>&#xA;",1050085,,,,2018-02-03 09:56:47,Apollo GraphQL Error: Error: Network error: Cannot read property 'slice' of undefined,<apollo><react-apollo><apollo-client>,1,0,0,2017-05-09 03:52:00
44030489,1,46395252,,1,234,"<p>So, I'm running an SPA (<a href=""https://learn-redux.firebaseapp.com"" rel=""nofollow noreferrer"">https://learn-redux.firebaseapp.com</a>) which obtains all of its data from an Apollo/GraphCool endpoint, and utilises the offline-plugin for offline functionality.</p>&#xA;&#xA;<p>When the network is set to 'offline' the application fails to display the data that was prviously display, and instead issues the following (See attached image):</p>&#xA;&#xA;<p><code>&#xA;POST https://api.graph.cool/simple/v1/projID net::ERR_INTERNET_DISCONNECTED&#xA;</code></p>&#xA;&#xA;<p>Is it possible for offline-plugin to cache all retrieved Graphcool data, so that the app is still usable in offline mode?</p>&#xA;&#xA;<p>My webpack.config file is as follows:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>module.exports = {&#xD;&#xA;  devtool: 'source-map',&#xD;&#xA;  context: __dirname,&#xD;&#xA;  entry: {&#xD;&#xA;    main: path.resolve(__dirname, './client/app'),&#xD;&#xA;  },&#xD;&#xA;  output: {&#xD;&#xA;    path: path.join(__dirname, '/public'),&#xD;&#xA;    filename: '[name]-[hash].js',&#xD;&#xA;    publicPath: '/'&#xD;&#xA;  },&#xD;&#xA;  plugins: [&#xD;&#xA;    new webpack.optimize.OccurenceOrderPlugin(),&#xD;&#xA;    new Dotenv({&#xD;&#xA;      path: './.env', // Path to .env file (this is the default) &#xD;&#xA;      safe: true // load .env.example (defaults to ""false"" which does not use dotenv-safe) &#xD;&#xA;    }),&#xD;&#xA;    new webpack.DefinePlugin({&#xD;&#xA;      'process.env': {&#xD;&#xA;        'NODE_ENV': ""'production'""&#xD;&#xA;      }&#xD;&#xA;    }),&#xD;&#xA;    new webpack.optimize.UglifyJsPlugin({&#xD;&#xA;      compressor: {&#xD;&#xA;        warnings: false&#xD;&#xA;      }&#xD;&#xA;    }),&#xD;&#xA;    new HtmlWebpackPlugin({&#xD;&#xA;      title: 'Flamingo City',&#xD;&#xA;      filename: 'index.html',&#xD;&#xA;      template: './index_template.ejs',&#xD;&#xA;    }),&#xD;&#xA;    new CopyWebpackPlugin([&#xD;&#xA;      { from: '404.html' }, // Copies file from root to specified output:path:&#xD;&#xA;      { from: 'manifest.json' },&#xD;&#xA;      { from: 'images', to: 'images' },&#xD;&#xA;    ]),&#xD;&#xA;   new OfflinePlugin({&#xD;&#xA;      publicPath: '/',&#xD;&#xA;      safeToUseOptionalCaches: true,&#xD;&#xA;      caches: {&#xD;&#xA;        main: [&#xD;&#xA;          'main-*.js',&#xD;&#xA;          'index.html',&#xD;&#xA;        ],&#xD;&#xA;        additional: [&#xD;&#xA;          ':externals:'&#xD;&#xA;        ],&#xD;&#xA;        optional: [&#xD;&#xA;          ':rest:'&#xD;&#xA;        ]&#xD;&#xA;      },&#xD;&#xA;      externals: [&#xD;&#xA;        '/'&#xD;&#xA;      ],&#xD;&#xA;      ServiceWorker: {&#xD;&#xA;        navigateFallbackURL: '/',&#xD;&#xA;        events: true&#xD;&#xA;      },&#xD;&#xA;      AppCache: {&#xD;&#xA;        FALLBACK: {&#xD;&#xA;          '/': '/offline-page.html'&#xD;&#xA;        },&#xD;&#xA;        events: true&#xD;&#xA;      }&#xD;&#xA;    })&#xD;&#xA;  ],&#xD;&#xA;  module: {&#xD;&#xA;    loaders: [&#xD;&#xA;    // js&#xD;&#xA;    {&#xD;&#xA;      test: /\.js$/,&#xD;&#xA;      loaders: ['babel'],&#xD;&#xA;      include: path.join(__dirname, 'client')&#xD;&#xA;    },&#xD;&#xA;    // CSS&#xD;&#xA;    { &#xD;&#xA;      test: /\.styl$/, &#xD;&#xA;      include: path.join(__dirname, 'client'),&#xD;&#xA;      loader: 'style-loader!css-loader!stylus-loader'&#xD;&#xA;    }&#xD;&#xA;    ]&#xD;&#xA;  }&#xD;&#xA;};</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>and my apollo client onnnection is as follows:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>import ApolloClient, {&#xD;&#xA;  createNetworkInterface,&#xD;&#xA;  addTypeName,&#xD;&#xA;} from 'apollo-client';&#xD;&#xA;&#xD;&#xA;import { &#xD;&#xA;    SubscriptionClient, &#xD;&#xA;    addGraphQLSubscriptions,&#xD;&#xA;} from 'subscriptions-transport-ws';&#xD;&#xA;&#xD;&#xA;// Create WebSocket client&#xD;&#xA;const wsClient = new SubscriptionClient('wss://subscriptions.graph.cool/v1/projID', {&#xD;&#xA;  reconnect: true,&#xD;&#xA;  connectionParams: {&#xD;&#xA;    // Pass any arguments you want for initialization&#xD;&#xA;  }&#xD;&#xA;})&#xD;&#xA;const networkInterface = createNetworkInterface({ &#xD;&#xA;  uri: 'https://api.graph.cool/simple/v1/projID',&#xD;&#xA;  opts: {&#xD;&#xA;    // Additional fetch options like `credentials` or `headers`&#xD;&#xA;    credentials: 'same-origin',&#xD;&#xA;  }&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;// Extend the network interface with the WebSocket&#xD;&#xA;const networkInterfaceWithSubscriptions = addGraphQLSubscriptions(&#xD;&#xA;  networkInterface,&#xD;&#xA;  wsClient&#xD;&#xA;)&#xD;&#xA;&#xD;&#xA;const client = new ApolloClient({&#xD;&#xA;  networkInterface: networkInterfaceWithSubscriptions,&#xD;&#xA;  dataIdFromObject: (o) =&gt; o.id,&#xD;&#xA;   addTypeName: true&#xD;&#xA;})&#xD;&#xA;&#xD;&#xA;export default client;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/qMMCA.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qMMCA.jpg"" alt=""Network error""></a></p>&#xA;",5613904,,209259,2017-05-17 17:04:49,2017-09-24 21:54:17,Cache Graphcool data for offline use,<webpack><offline-caching><progressive-web-apps><apollo>,1,0,0,2017-05-17 16:39:31
44069012,2,,43977636,0,,<p>I have solved the issue. It was server side issue. Server side should contain CORS configuration.</p>&#xA;,3916953,,,,2017-05-19 11:34:56,"",,0,0,0,2017-05-19 11:34:56
44125034,1,,,0,522,"<p>I'm been working in a project to test Graphql and is working fine in the server, but I can not connect my React Native app to the ""API"" server that is configured in Heroku with Django + Postgress + Graphene. You can test it here: <a href=""https://hosting-api.herokuapp.com/graphiql"" rel=""nofollow noreferrer"">https://hosting-api.herokuapp.com/graphiql</a></p>&#xA;&#xA;<p>I choose Apollo for the React Native app to manage the connection following this example: <a href=""http://dev.apollodata.com/react/simple-example.html"" rel=""nofollow noreferrer"">http://dev.apollodata.com/react/simple-example.html</a></p>&#xA;&#xA;<p>The app works ok with the default URL: <a href=""http://api.githunt.com/graphql"" rel=""nofollow noreferrer"">http://api.githunt.com/graphql</a> but when I change to my server I got the error in the image. 403 is the code for forbidden, but I have already added '*' to the allowed_hosts and cors_origin_whitelist. Also, when I change to another URL, e.g. my blog, it returns a 200 error which is ok because I don't have Graphql configured there but at least the app can make a connection.</p>&#xA;&#xA;<p>Any ideas or suggestions?</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/fa52x.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fa52x.jpg"" alt=""error message""></a></p>&#xA;",2636562,,,,2017-05-24 20:17:05,React Native with Apollo can't connect to Graphql server in Heroku,<heroku><react-native><react-apollo><graphene-python>,1,0,0,2017-05-23 02:56:29
44153362,2,,44148549,1,,"<p>One thing that does not look correct. You want to populate for the path sections but the string is in capital letter. See the <a href=""http://mongoosejs.com/docs/api.html#query_Query-populate"" rel=""nofollow noreferrer"">docu</a>.</p>&#xA;&#xA;<p>So it should look like this:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>CourseSchema.statics.findSections = function(id) {&#xD;&#xA;  return this.findById(id)&#xD;&#xA;    .populate('sections') // lower case&#xD;&#xA;    .then(course =&gt; {&#xD;&#xA;      return course.sections&#xD;&#xA;    });&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",4500001,,,,2017-05-24 08:46:02,"",,0,5,0,2017-05-24 08:46:02
44153679,1,44283512,,1,119,"<p>Let's say I have data that comes from external API called “posts”. Each post in the “posts” has “title” and “content” field. I have no way to control this external API, “posts“ comes as it is.</p>&#xA;&#xA;<p>In my application, locally, I want to add couple more fields to each post. These fields are “category” and “tags”.</p>&#xA;&#xA;<p>Then, I want to query my backend API using graphql, so my query pulls data from both external API and local one. For instance</p>&#xA;&#xA;<pre><code>{&#xA;  post (id: 2){&#xA;    title, # external&#xA;    content, # external&#xA;    category, # local&#xA;    tags # local&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can I accomplish it?&#xA;Should I make a third piece of data (model) that somehow will merge together both external and local data together and then query this data? Or, should my local fields somehow extract IDs from external nodes and save them along with their own data on these fields mutation? </p>&#xA;",1897222,,,,2017-05-31 11:25:33,Merge external and local data and query it as single data using graphql,<graphql><graphql-js>,1,0,0,2017-05-24 08:59:53
44198890,2,,44089255,8,,"<p>I was having the same problem. Turns out you have to opt in by setting <code>notifyOnNetworkStatusChange</code> to <code>true</code> in your options:</p>&#xA;&#xA;<p><a href=""http://dev.apollodata.com/react/api-queries.html#graphql-config-options-notifyOnNetworkStatusChange"" rel=""nofollow noreferrer"">http://dev.apollodata.com/react/api-queries.html#graphql-config-options-notifyOnNetworkStatusChange</a></p>&#xA;&#xA;<p><strong>P.S.</strong> I had an additional problem of using old versions of <code>apollo-client</code> and <code>react-apollo</code> so I had to upgrade to the latest versions (at the time of writing <code>apollo-client@1.2.2</code> and <code>react-apollo@1.2.0</code>) so make sure you're on a latest enough version for these options to be available.</p>&#xA;",4912979,,4653792,2019-12-12 09:04:38,2019-12-12 09:04:38,"",,0,0,0,2017-05-26 10:09:04
44277035,1,,,0,4684,"<p>I'm experimenting with building a GraphQL server and I'm trying to use the GraphiQL Chrome extension to play with it.</p>&#xA;&#xA;<p>As soon as I set the endpoint to my server, <a href=""http://localhost:3000/graphql"" rel=""nofollow noreferrer"">http://localhost:3000/graphql</a>, GraphiQL sends an empty query:</p>&#xA;&#xA;<pre><code>Request URL:http://localhost:3000/graphql&#xA;Request Method:POST&#xA;Status Code:200 OK&#xA;Remote Address:[::1]:3000&#xA;Referrer Policy:no-referrer-when-downgrade&#xA;</code></pre>&#xA;&#xA;<p>I made it return an empty response, but then, I get this JavaScript error in Chrome:</p>&#xA;&#xA;<pre><code>react.min.js:14 Uncaught TypeError: Cannot read property 'length' of undefined&#xA;    at GraphiQL.autoCompleteLeafs (chrome-extension://fkkiamalmpiidkljmicmjfbieiclmeij/ext/graphiql/graphiql.js:1060:33)&#xA;    at GraphiQL._runEditorQuery (chrome-extension://fkkiamalmpiidkljmicmjfbieiclmeij/ext/graphiql/graphiql.js:1131:13)&#xA;    at Object.r (chrome-extension://fkkiamalmpiidkljmicmjfbieiclmeij/ext/react.min.js:14:10134)&#xA;    at i (chrome-extension://fkkiamalmpiidkljmicmjfbieiclmeij/ext/react.min.js:12:21911)&#xA;    at Object.u [as executeDispatchesInOrder] (chrome-extension://fkkiamalmpiidkljmicmjfbieiclmeij/ext/react.min.js:12:22122)&#xA;    at p (chrome-extension://fkkiamalmpiidkljmicmjfbieiclmeij/ext/react.min.js:12:18475)&#xA;    at f (chrome-extension://fkkiamalmpiidkljmicmjfbieiclmeij/ext/react.min.js:12:18601)&#xA;    at Array.forEach (native)&#xA;    at r (chrome-extension://fkkiamalmpiidkljmicmjfbieiclmeij/ext/react.min.js:15:26156)&#xA;    at Object.processEventQueue (chrome-extension://fkkiamalmpiidkljmicmjfbieiclmeij/ext/react.min.js:12:19721)&#xA;﻿&#xA;</code></pre>&#xA;&#xA;<p>After that, GraphiQL doesn't work at all. I can type any query, click the play button and all it does is repeat the error:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/R80sQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/R80sQ.png"" alt=""enter image description here""></a>&#xA;    ​&#xA;What am I missing? Is GraphiQL expecting some sort of schema from a blank query?</p>&#xA;",6068,,,,2017-05-31 07:46:19,What should a blank GraphQL query return?,<graphql><graphiql>,1,0,0,2017-05-31 06:15:59
44283394,1,44283890,,1,2255,"<p>I am developing an react-native application using Relay for working with graphql. &#xA;Before earlier versions I have been using Relay classic with RootContainer and renderer following the 'sibelius' <a href=""https://github.com/sibelius/react-native-relay-example"" rel=""nofollow noreferrer"">react-native-relay-example</a> also combined with these two posts: <a href=""http://www.mot.la/2016-05-08-getting-started-with-react-native-and-relay.html"" rel=""nofollow noreferrer"">first</a> and &#xA;<a href=""https://medium.com/@salujaharkirat/using-react-native-with-relay-18b940c2403c"" rel=""nofollow noreferrer"">second</a>.</p>&#xA;&#xA;<p>So I have changed the react-relay version from 0.10.0 to 1.0.0 and for starters put a simple query at first screen using relay modern implementation. I did not change babel-relay-plugin. When ever I run the app I get<code>graphql: Unexpected invocation at runtime. Either the Babel transform was not set up, or it failed to identify this call site. Make sure it is being used verbatim as 'graphql'</code></p>&#xA;&#xA;<p>I am also a starter at developing react-native apps and overall using graphql so I have this constant feeling I am missing something not mentioned in the docs which I suppose to already know when working with react.</p>&#xA;&#xA;<p>This is my .babelrc file:</p>&#xA;&#xA;<pre><code>{&#xA;  ""plugins"": [""./data/babelRelayPlugin""],&#xA;  ""presets"": [""react-native""]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>babelRelayPlugin.js</p>&#xA;&#xA;<pre><code>const getBabelRelayPlugin = require('babel-relay-plugin');&#xA;const schemaData = require('./schema.json');&#xA;module.exports = getBabelRelayPlugin(schemaData.data);&#xA;</code></pre>&#xA;&#xA;<p>I am creating a RelayEnvironment which I am importing to the QueryRenderer:</p>&#xA;&#xA;<pre><code>import {&#xA;  Environment,&#xA;  Network,&#xA;  Store,&#xA;  RecordSource&#xA;} from 'relay-runtime';&#xA;&#xA;const fetchQuery = (operation, variables, cacheConfig, uploadables) =&gt; {&#xA;  return (&#xA;    fetch('https://../graphql', {&#xA;        method: 'POST',&#xA;        headers: {&#xA;          'content-type': 'application/json'&#xA;        },&#xA;        body: JSON.stringify({&#xA;          query: operation.text,&#xA;          variables,&#xA;        }),&#xA;      }).then( response =&gt; {&#xA;        return response.json();&#xA;      }).catch( err =&gt; console.log(err) )&#xA;  );&#xA;}&#xA;&#xA;const source = new RecordSource();&#xA;const store = new Store(source);&#xA;const network = Network.create(fetchQuery);&#xA;const handlerProvider = null;&#xA;&#xA;export const RelayEnvironment = new Environment({&#xA;  handlerProvider,&#xA;  network,&#xA;  store,&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>This is my QueryRenderer in jsx:</p>&#xA;&#xA;<pre><code>        &lt;QueryRenderer&#xA;          environment={ RelayEnvironment }&#xA;          query={ graphql`query {&#xA;            content(path: ""/latest-updates""){&#xA;              title&#xA;              children{&#xA;                entries{&#xA;                  key: id&#xA;                  title&#xA;                  flyTitle&#xA;                  teaser&#xA;                  mainImageObj{&#xA;                    path&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }` }&#xA;          render={ ({error, props}) =&gt; {&#xA;            if(error){&#xA;              console.log(error);&#xA;            } else if(props) {&#xA;              console.log(props);&#xA;              return &lt;Text&gt; Done &lt;/Text&gt; ;&#xA;            } else {&#xA;              console.log('loading...');&#xA;            }&#xA;          }}&#xA;        /&gt;&#xA;</code></pre>&#xA;&#xA;<p>If I run this query in graphiql I do get the expected result.</p>&#xA;",3580952,,3580952,2017-05-31 11:28:01,2017-05-31 13:39:22,Error loading graphql with react-relay modern,<reactjs><react-native><babeljs><graphql><relayjs>,1,0,0,2017-05-31 11:19:33
44352658,1,44900050,,1,778,"<p>I know that some initial flow typing were <a href=""https://github.com/apollographql/apollo-client/pull/1688"" rel=""nofollow noreferrer"">merged</a> in apollo-client. </p>&#xA;&#xA;<ul>&#xA;<li>How can I use it?</li>&#xA;<li>Should I declare my own lib definitions? (I use flow-typed currently).</li>&#xA;<li>Could you please share an example of such definitions (particularly for react-apollo)? </li>&#xA;</ul>&#xA;&#xA;<p>For example, If I have such code:</p>&#xA;&#xA;<pre><code>// @flow&#xA;import { ApolloClient, createNetworkInterface } from 'react-apollo';&#xA;import fetch from 'isomorphic-fetch';&#xA;&#xA;let apolloClient = null;&#xA;&#xA;// Polyfill fetch() on the server (used by apollo-client)&#xA;if (!process.browser) {&#xA;  global.fetch = fetch;&#xA;}&#xA;&#xA;function create() {&#xA;  return new ApolloClient({&#xA;    ssrMode: !process.browser, // Disables forceFetch on the server (so queries are only run once)&#xA;    networkInterface: createNetworkInterface({&#xA;      uri: 'https://api.graph.cool/simple/v1/cixmkt2ul01q00122mksg82pn', // Server URL (must be absolute)&#xA;      opts: {&#xA;        // Additional fetch() options like `credentials` or `headers`&#xA;        credentials: 'same-origin',&#xA;      },&#xA;    }),&#xA;  });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and on the other side in my lib def I have:</p>&#xA;&#xA;<pre><code>declare module 'react-apollo' {&#xA;  declare module.exports: any;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>what should I type here(examples would be helpful) to have type checking?</p>&#xA;",6406634,,901387,2017-06-06 03:56:20,2018-11-12 09:21:30,How to properly setup flow to work with react-apollo?,<graphql><flowtype><react-apollo>,2,0,0,2017-06-04 09:33:59
44358006,2,,44349707,0,,"<p>This turned out to be an anomaly with Sequelize's automatic pluralizing of table names. </p>&#xA;&#xA;<p>By default, Sequelize automatically pluralizes table names. It is supposed to be possible to turn this behavior off by using Sequelize's <code>freezeTableName</code> property. However, per <a href=""https://github.com/sequelize/sequelize/issues/1808"" rel=""nofollow noreferrer"">this Sequelize issue post</a>, there are cases in which Sequelize ignores the <code>freezeTableName</code> property and pluralizes (and sometimes singularizes) the table names anyway. </p>&#xA;&#xA;<p>After discovering this I was able to resolve the anomaly by pluralizing the relevant table name and going through all my Apollo code to update the references to this table so that they would be pluralized as well.</p>&#xA;",364966,,,,2017-06-04 19:31:38,"",,0,0,0,2017-06-04 19:31:38
44479036,1,,,0,490,"<p>I'm upgrading my code from using a 6-months-plus-old version of Apollo, to using the current version.</p>&#xA;&#xA;<p>This code used to work for doing a one-off query, but no longer works:</p>&#xA;&#xA;<p><strong>SET UP</strong></p>&#xA;&#xA;<pre><code>const subscriptionClient = new SubscriptionClient(`ws://localhost:5000/`, {&#xA;    reconnect: true&#xA;});&#xA;&#xA;// Create a normal network interface:&#xA;const networkInterface = createNetworkInterface({&#xA;    uri: 'http://localhost:3000',&#xA;    opts: {&#xA;        credentials: 'same-origin',&#xA;    },&#xA;    transportBatching: true,&#xA;    batchInterval: 10&#xA;&#xA;});&#xA;&#xA;// Extend the network interface with the WebSocket&#xA;const networkInterfaceWithSubscriptions = addGraphQLSubscriptions(&#xA;    networkInterface,&#xA;    subscriptionClient&#xA;);&#xA;&#xA;const ApolloClientWithSubscribeEnabled = new ApolloClient({&#xA;    networkInterface: networkInterfaceWithSubscriptions,&#xA;    queryTransformer: addTypename,&#xA;    dataIdFromObject: (result) =&gt; {&#xA;        if (result.id &amp;&amp; result.__typename) { // eslint-disable-line no-underscore-dangle&#xA;            return result.__typename + result.id; // eslint-disable-line no-underscore-dangle&#xA;        }&#xA;        return null;&#xA;    },&#xA;    shouldBatch: true,&#xA;    initialState: window.__APOLLO_STATE__, // eslint-disable-line no-underscore-dangle&#xA;});&#xA;</code></pre>&#xA;&#xA;<p><strong>ONE-OFF QUERY</strong></p>&#xA;&#xA;<pre><code>getUserInfoForCurrentUser() {&#xA;    const userIsLoggedIn = Meteor.userId() ? true : false;&#xA;    if ((userIsLoggedIn) &amp;&amp; (this.originatingUser == null)){&#xA;        const localThis = this;&#xA;        const userID = Meteor.userId();&#xA;        this.client.query({&#xA;            query: GET_USER_INFO_QUERY,&#xA;            variables: {userID: userID},&#xA;        }).then((result) =&gt; {&#xA;            localThis.originatingUser = result.data.getUserData[0];&#xA;        });&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Searching the Apollo docs, I see <a href=""http://dev.apollodata.com/react/api.html"" rel=""nofollow noreferrer"">a reference to one-off queries</a>, but I haven't yet found docs showing how to do it. Searching the Apollo sample app, ""GitHunt-React-master"", I also haven't yet found an example of how to do this.</p>&#xA;&#xA;<p>What is the correct way to do a one-off query in the current 1.x version of Apollo?</p>&#xA;",364966,,,,2017-06-10 23:28:49,Apollo GraphQL One-Off Query?,<graphql><apollo><react-apollo>,0,7,0,2017-06-10 23:28:49
44508004,1,,,2,609,"<p>I am attempting to set up a GraphQL mockServer from 'gralphql-tools' in a Relay-Modern app but am getting this error:</p>&#xA;&#xA;<pre><code>parser.js:152 Uncaught &#xA;GraphQLError {message: ""Syntax Error GraphQL (1:1) Unexpected Name ""data""↵…GVUeXBlIHsKICBVUAogIERPV04KICBDQU5DRUwKfQo=↵   ^↵"", locations: Array(1), path: undefined, stack: ""GraphQLError↵    at syntaxError (http://localhost:…tp://localhost:3000/static/js/bundle.js:33240:27)"", nodes: undefined…}&#xA;locations&#xA;:&#xA;Array(1)&#xA;message&#xA;:&#xA;""Syntax Error GraphQL (1:1) Unexpected Name ""data""↵↵1: &#xA;</code></pre>&#xA;&#xA;<p>I'm attempting to implement the strategy outlined in <a href=""http://graphql.org/blog/mocking-with-graphql/"" rel=""nofollow noreferrer"">http://graphql.org/blog/mocking-with-graphql/</a> with the relay-modern-hello-world <a href=""https://github.com/apollographql/relay-modern-hello-world"" rel=""nofollow noreferrer"">repo</a>.</p>&#xA;&#xA;<p>I've basically tried to replace the fetchQuery() to replace the post request to the API included in the example:</p>&#xA;&#xA;<pre><code>function fetchQuery() {&#xA;    mockServer(schema, {&#xA;        Int: () =&gt; 6,&#xA;        Float: () =&gt; 22.1,&#xA;        String: () =&gt; 'Hello',&#xA;    });&#xA;&#xA;    const appQuery = `&#xA;        query AppFeedQuery {&#xA;            feed (type: NEW, limit: 5) {&#xA;                ...Feed&#xA;            }&#xA;        }&#xA;    `;&#xA;&#xA;    return mockServer.query(appQuery);&#xA;}&#xA;&#xA;// Create a network layer from the fetch function&#xA;const network = Network.create(fetchQuery);&#xA;&#xA;const source = new RecordSource();&#xA;const store = new Store(source);&#xA;</code></pre>&#xA;&#xA;<p>My attempt can be found at <a href=""https://github.com/sdee/relay-modern-hello-world"" rel=""nofollow noreferrer"">https://github.com/sdee/relay-modern-hello-world</a></p>&#xA;&#xA;<p>I'd appreciate any ideas. I'm new to Relay and GraphQL. Thanks! </p>&#xA;",1227001,,1227001,2017-06-13 19:37:54,2017-06-13 19:37:54,Setting up GraphQL mock server for Relay Modern,<mocking><graphql><relay><react-apollo>,0,0,0,2017-06-12 20:15:07
44520038,1,,,4,1607,"<p>so I am working on relay for react application with server side rendering. I'm trying to use relay to get data from graphql endpoint.</p>&#xA;&#xA;<p>I was kinda following <a href=""https://hackernoon.com/getting-started-with-relay-modern-for-building-isomorphic-web-apps-ae049e4e23c1"" rel=""nofollow noreferrer"">this</a>, using <code>fetchQuery</code> to get data by making request from compiled graphql by relay-compiler.</p>&#xA;&#xA;<p>e.g.</p>&#xA;&#xA;<pre><code>import { graphql, fetchQuery } from 'react-relay'&#xA;&#xA;const query = graphql`&#xA;   query SomeQuery($id: ID) {&#xA;      author(id: $id) {&#xA;         name&#xA;         ...SomeFragment_authorData&#xA;      }&#xA;   }&#xA;`&#xA;&#xA;const variables = { ""id"" : ""1f"" };&#xA;&#xA;fetchQuery(env, query, variables)&#xA;   .then((jsonData) =&gt; { console.log(jsonData); })&#xA;</code></pre>&#xA;&#xA;<p>when it finishes running, it gives me some sort of this object:</p>&#xA;&#xA;<pre><code>{&#xA;  author: {&#xA;    __fragment: { ... }&#xA;    ...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Which I assume will be used by children components wrapped with <code>createFragmentContainer()</code> to get the real data.</p>&#xA;&#xA;<p>Since I'm not using <code>createFragmentContainer()</code>, I'm not sure how to get the data properly, is there any way to transform above response into the real data?&#xA;any help would be appreciated!</p>&#xA;&#xA;<p>Note:</p>&#xA;&#xA;<p>At the moment this is what I do to get the data: <code>env._network.fetch(query(), variables)</code>. It is working, but it doesn't seem right that I need to dig into private variable, in order to get the <code>fetch</code> that I provided to <code>Network</code> object.</p>&#xA;",4162778,,,,2019-02-25 20:09:47,Relay Modern - How to use fetchQuery without fragmentContainer,<javascript><ecmascript-6><graphql><relayjs><relay>,2,2,0,2017-06-13 11:18:47
44605984,1,44607865,,0,1767,"<p>I am new to React-apollo I just trying to figure out how to do Server side rendering with apollo and it always throws me an error 404 and I am pretty sure my &#xA;grapiql endpoint is working.</p>&#xA;&#xA;<p>this is my error</p>&#xA;&#xA;<pre><code>{ Error: Network error: Network request failed with status 404 - ""Not Found""&#xA;    at new ApolloError (C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\errors\ApolloError.js:32:28)&#xA;    at C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\core\QueryManager.js:268:41&#xA;    at C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\core\QueryManager.js:705:25&#xA;    at Array.forEach (native)&#xA;    at C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\core\QueryManager.js:702:27&#xA;    at Array.forEach (native)&#xA;    at QueryManager.broadcastQueries (C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\core\QueryManager.js:699:42)&#xA;    at Array.&lt;anonymous&gt; (C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\core\QueryManager.js:65:23)&#xA;    at dispatch (C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\redux\lib\createStore.js:186:19)&#xA;    at C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\ApolloClient.js:174:30&#xA;  graphQLErrors: [],&#xA;  networkError:&#xA;   { Error: Network request failed with status 404 - ""Not Found""&#xA;       at C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\transport\networkInterface.js:116:33&#xA;       at process._tickCallback (internal/process/next_tick.js:109:7)&#xA;     response:&#xA;      Body {&#xA;        url: 'http://localhost:3000',&#xA;        status: 404,&#xA;        statusText: 'Not Found',&#xA;        headers: [Object],&#xA;        ok: false,&#xA;        body: [Object],&#xA;        bodyUsed: true,&#xA;        size: 0,&#xA;        timeout: 0,&#xA;        _raw: [Object],&#xA;        _abort: false,&#xA;        _bytes: 140 },&#xA;     parseError:&#xA;      { Error&#xA;          at C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\node-fetch\lib\body.js:48:31&#xA;          at process._tickCallback (internal/process/next_tick.js:109:7)&#xA;        name: 'FetchError',&#xA;        message: 'invalid json response body at http://localhost:3000 reason: Unexpected token &lt; in JSON at position 0',&#xA;        type: 'invalid-json' } },&#xA;  message: 'Network error: Network request failed with status 404 - ""Not Found""',&#xA;  extraInfo: undefined,&#xA;  queryErrors: [ [Circular] ] }&#xA;</code></pre>&#xA;&#xA;<p>this is my server.js</p>&#xA;&#xA;<pre><code>import express from 'express';&#xA;import bodyParser from 'body-parser';&#xA;&#xA;import path from 'path';&#xA;import expressGraphQL from 'express-graphql';&#xA;import schema from './GraphQL/Schema';&#xA;import React from 'react';&#xA;import ReactDOMServer from 'react-dom/server'&#xA;import { StaticRouter } from 'react-router';&#xA;import { ApolloClient, createNetworkInterface, ApolloProvider } from 'react-apollo';&#xA;import { getDataFromTree } from ""react-apollo""&#xA;import store from '../client/Redux/Store/store';&#xA;&#xA;require('es6-promise').polyfill();&#xA;require('isomorphic-fetch');&#xA;&#xA;import WApp from '../client/App';&#xA;&#xA;&#xA;//Dev HMR&#xA;import HMR from './serverUtils/HMR';&#xA;&#xA;const app = express();&#xA;app.use(bodyParser.json());&#xA;&#xA;app.use('/api', expressGraphQL({&#xA;    schema,&#xA;    graphiql: true&#xA;}));&#xA;app.use('/static',express.static('build'));&#xA;HMR(app);&#xA;&#xA;function Html({ content, state }) {&#xA;    return (&#xA;        &lt;html&gt;&#xA;        &lt;body&gt;&#xA;        &lt;div id=""app""  dangerouslySetInnerHTML={{ __html: content }}/&gt;&#xA;        &lt;script src=""/static/app.js"" /&gt;&#xA;        &lt;script dangerouslySetInnerHTML={{&#xA;            __html: `window.__APOLLO_STATE__=${JSON.stringify(state).replace(/&lt;/g, '\\u003c')};`,&#xA;        }} /&gt;&#xA;        &lt;/body&gt;&#xA;        &lt;/html&gt;&#xA;    );&#xA;}&#xA;&#xA;app.get('*',(req,res) =&gt; {&#xA;&#xA;&#xA;     const context = {};&#xA;    const client = new ApolloClient({&#xA;        ssrMode: true,&#xA;        // Remember that this is the interface the SSR server will use to connect to the&#xA;        // API server, so we need to ensure it isn't firewalled, etc&#xA;        networkInterface: createNetworkInterface({&#xA;            uri: 'http://localhost:3000',&#xA;            opts: {&#xA;                credentials: 'same-origin',&#xA;                // transfer request headers to networkInterface so that they're accessible to proxy server&#xA;                // Addresses this issue: https://github.com/matthew-andrews/isomorphic-fetch/issues/83&#xA;                headers: req.headers,&#xA;            },&#xA;        }),&#xA;&#xA;&#xA;&#xA;&#xA;    });&#xA;&#xA;&#xA;     const app = (&#xA;         &lt;StaticRouter location={req.url} context={context}&gt;&#xA;             &lt;ApolloProvider store={store} client={client} &gt;&#xA;&#xA;                     &lt;WApp/&gt;&#xA;&#xA;             &lt;/ApolloProvider&gt;&#xA;         &lt;/StaticRouter&gt;&#xA;&#xA;     );&#xA;&#xA;&#xA;     getDataFromTree(app).then(() =&gt; {&#xA;         const content  = ReactDOMServer.renderToString(app);&#xA;         const initialState = {[client.reduxRootKey]: client.getInitialState()  };&#xA;         const html = &lt;Html content={content} state={initialState} /&gt;;&#xA;         console.log('Initial State',initialState);&#xA;         res.status(200);&#xA;         res.send(`&lt;!doctype html&gt;\n${ReactDOMServer.renderToStaticMarkup(html)}`);&#xA;         res.end();&#xA;     }).catch(err =&gt; console.log(err))&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;});&#xA;&#xA;&#xA;&#xA;&#xA;app.listen(3000,() =&gt; {&#xA;    console.log('Man I on')&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>Update according to the answer</p>&#xA;&#xA;<p>it throws me an error like this</p>&#xA;&#xA;<pre><code>{ Error: Network error: Network request failed with status 200 - ""OK""&#xA;    at new ApolloError (C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\errors\ApolloError.js:32:28)&#xA;    at C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\core\QueryManager.js:268:41&#xA;    at C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\core\QueryManager.js:705:25&#xA;    at Array.forEach (native)&#xA;    at C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\core\QueryManager.js:702:27&#xA;    at Array.forEach (native)&#xA;    at QueryManager.broadcastQueries (C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\core\QueryManager.js:699:42)&#xA;    at Array.&lt;anonymous&gt; (C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\core\QueryManager.js:65:23)&#xA;    at dispatch (C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\redux\lib\createStore.js:186:19)&#xA;    at C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\ApolloClient.js:174:30&#xA;  graphQLErrors: [],&#xA;  networkError:&#xA;   { Error: Network request failed with status 200 - ""OK""&#xA;       at C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\apollo-client\src\transport\networkInterface.js:116:33&#xA;       at process._tickCallback (internal/process/next_tick.js:109:7)&#xA;     response:&#xA;      Body {&#xA;        url: 'http://localhost:3000/api',&#xA;        status: 200,&#xA;        statusText: 'OK',&#xA;        headers: [Object],&#xA;        ok: true,&#xA;        body: [Object],&#xA;        bodyUsed: true,&#xA;        size: 0,&#xA;        timeout: 0,&#xA;        _raw: [Object],&#xA;        _abort: false,&#xA;        _bytes: 37593 },&#xA;     parseError:&#xA;      { Error&#xA;          at C:\Users\arfo\Desktop\all folder\FinalHustleBoilerPlate\node_modules\node-fetch\lib\body.js:48:31&#xA;          at process._tickCallback (internal/process/next_tick.js:109:7)&#xA;        name: 'FetchError',&#xA;        message: 'invalid json response body at http://localhost:3000/api reason: Unexpected token &lt; in JSON at position 0',&#xA;        type: 'invalid-json' } },&#xA;  message: 'Network error: Network request failed with status 200 - ""OK""',&#xA;  extraInfo: undefined,&#xA;  queryErrors: [ [Circular] ] }&#xA;</code></pre>&#xA;&#xA;<p>HINT: Because of json parse error I am adding root query file I am using axios with fake data</p>&#xA;&#xA;<pre><code>import { GraphQLObjectType ,GraphQLNonNull,GraphQLID,GraphQLList} from 'graphql';&#xA;import axios from 'axios';&#xA;&#xA;//All types&#xA;import PostType from './Post_Type';&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;const RootQueryType = new GraphQLObjectType({&#xA;    name:'RootQueryType',&#xA;    fields:{&#xA;        posts:{&#xA;            type:new GraphQLList(PostType),&#xA;            resolve(parentValue,args){&#xA;&#xA;                  return axios.get('https://jsonplaceholder.typicode.com/posts' )&#xA;                .then(res =&gt; res.data)&#xA;            }&#xA;&#xA;        },&#xA;        post:{&#xA;            type:PostType,&#xA;            args:{ id: { type:new GraphQLNonNull(GraphQLID) } },&#xA;            resolve(parentValue,{id}){&#xA;                return axios.get(`https://jsonplaceholder.typicode.com/posts/${id}`)&#xA;                    .then(res =&gt; res.data)&#xA;            }&#xA;        }&#xA;&#xA;    }&#xA;});&#xA;&#xA;export default RootQueryType&#xA;</code></pre>&#xA;",5947166,,5947166,2017-06-18 04:30:37,2017-06-18 04:30:37,React-Apollo throws an network error 404?,<javascript><reactjs><express><redux><apollo>,1,0,0,2017-06-17 14:51:51
44622510,2,,44618039,0,,"<p>This edit on the client seems to have fixed it:</p>&#xA;&#xA;<pre><code>//import ApolloClient, { createBatchingNetworkInterface, addTypename } from 'apollo-client';&#xA;// import {addGraphQLSubscriptions} from '/imports/api/subscriptions-client';&#xA;&#xA;import {GET_USERINFOFORIMS_QUERY} from '/imports/api/query-library';&#xA;&#xA;import { ApolloClient, createNetworkInterface } from 'react-apollo';&#xA;const networkInterface = createNetworkInterface({&#xA;    uri: 'http://localhost:3010/graphql'&#xA;});&#xA;const ApolloClientWithSubscribeEnabled = new ApolloClient({&#xA;    networkInterface: networkInterface&#xA;});&#xA;</code></pre>&#xA;",364966,,,,2017-06-19 04:56:25,"",,0,0,0,2017-06-19 04:56:25
44693530,2,,44659157,1,,"<p>When authentifying your user, re-creates the Relay environment.&#xA;You will drop any existing cache. This is what is recommended as anyways your cache should be different depending on which user is logged in, so dropping it entirely is OK.</p>&#xA;&#xA;<p>Pseudo-code:</p>&#xA;&#xA;<pre><code>class App extends PureComponent {&#xA;  state = {&#xA;    environment: createRelayEnvironment(),&#xA;  };&#xA;&#xA;  login = () =&gt; {&#xA;    doLoginMutation({&#xA;      onSuccess: () =&gt; this.setState({ environment: createRelayEnvironment() }),&#xA;    })&#xA;  }&#xA;&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;",3076424,,,,2017-06-22 07:59:28,"",,0,1,0,2017-06-22 07:59:28
44815430,1,45418197,,2,4123,"<p>I'm running Apollo/React with Express and I'm trying to get server side rendering to work. The <a href=""http://dev.apollodata.com/react/server-side-rendering.html#server-initialization"" rel=""nofollow noreferrer"">Apollo docs</a> suggest the following initialisation code for connecting to the API server:</p>&#xA;&#xA;<pre><code>app.use((req, res) =&gt; {&#xA;  match({ routes, location: req.originalUrl }, (error, redirectLocation, renderProps) =&gt; {&#xA;    const client = new ApolloClient({&#xA;      ssrMode: true,&#xA;      networkInterface: createNetworkInterface({&#xA;        uri: 'http://localhost:3000', // Instead of 3010&#xA;        opts: {&#xA;          credentials: 'same-origin',&#xA;          headers: {&#xA;            cookie: req.header('Cookie'),&#xA;          },&#xA;        },&#xA;      }),&#xA;    });&#xA;&#xA;    const app = (&#xA;      &lt;ApolloProvider client={client}&gt;&#xA;        &lt;RouterContext {...renderProps} /&gt;&#xA;      &lt;/ApolloProvider&gt;&#xA;    );&#xA;&#xA;    getDataFromTree(app).then(() =&gt; {&#xA;      const content = ReactDOM.renderToString(app);&#xA;      const initialState = {[client.reduxRootKey]: client.getInitialState()  };&#xA;      const html = &lt;Html content={content} state={initialState} /&gt;;&#xA;      res.status(200);&#xA;      res.send(`&lt;!doctype html&gt;\n${ReactDOM.renderToStaticMarkup(html)}`);&#xA;      res.end();&#xA;    });&#xA;&#xA;  });&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>which uses the <a href=""https://github.com/ReactTraining/react-router/blob/v3/modules/match.js#L18"" rel=""nofollow noreferrer""><code>match()</code></a> function from React Router v3 (as evidenced by <a href=""https://github.com/apollographql/GitHunt-React/blob/master/package.json"" rel=""nofollow noreferrer"">package.json</a> in the ""GitHunt"" example linked from the docs). I'm using React Router v4 from which <code>match()</code> is absent, so I refactored the code as follows, using <code>renderRoutes()</code> from the <a href=""https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config"" rel=""nofollow noreferrer""><code>react-router-config</code> package</a>.</p>&#xA;&#xA;<pre><code>app.use((req, res) =&gt; {&#xA;  const client = new ApolloClient(/* Same as above */)&#xA;&#xA;  const context = {}&#xA;&#xA;  const app = (&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;StaticRouter context={context} location={req.originalUrl}&gt;&#xA;        { renderRoutes(routes) }&#xA;      &lt;/StaticRouter&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  )&#xA;&#xA;  getDataFromTree(app).then(/* Same as above */)&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>My understanding is that <code>&lt;StaticRouter&gt;</code> obviates the use of <code>match()</code>. However <code>react-router-config</code> provides a <a href=""https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config#matchroutesroutes-pathname"" rel=""nofollow noreferrer""><code>matchRoutes()</code></a> function which seems to provide a similar functionality (albeit without the callback) if needed.</p>&#xA;&#xA;<p>When I visit <a href=""http://localhost:3000"" rel=""nofollow noreferrer"">http://localhost:3000</a>, the page loads as expected and I can follow links to subdirectories (e.g. <a href=""http://localhost:3000/folder"" rel=""nofollow noreferrer"">http://localhost:3000/folder</a>). <strong>When I try to directly load a subdirectory by typing in the name in the address bar,</strong> my browser keeps waiting for the server to respond. After about six seconds, Terminal shows one of the following errors (not sure what causes the error to change on subsequent tries):</p>&#xA;&#xA;<blockquote>&#xA;  <p>(node:1938) UnhandledPromiseRejectionWarning: Unhandled promise&#xA;  rejection (rejection id: 1): Error: Network error: request to&#xA;  <a href=""http://localhost:3000"" rel=""nofollow noreferrer"">http://localhost:3000</a> failed, reason: <strong>getaddrinfo ENOTFOUND</strong> localhost&#xA;  localhost:3000</p>&#xA;</blockquote>&#xA;&#xA;<p>or</p>&#xA;&#xA;<blockquote>&#xA;  <p>(node:8691) UnhandledPromiseRejectionWarning: Unhandled promise&#xA;  rejection (rejection id: 1): Error: Network error: request to&#xA;  <a href=""http://localhost:3000"" rel=""nofollow noreferrer"">http://localhost:3000</a> failed, reason: <strong>socket hang up</strong></p>&#xA;</blockquote>&#xA;&#xA;<p>I've been struggling with this problem for a few hours now, but can't seem to figure it out. The solution to a <a href=""https://stackoverflow.com/questions/17690803/node-js-getaddrinfo-enotfound"">similar problem</a> seems unrelated to this case. Any help will be much appreciated!</p>&#xA;&#xA;<p><strong>Further information</strong></p>&#xA;&#xA;<p>If I don't kill the nodemon server, after some time I get thousands of the following errors:</p>&#xA;&#xA;<blockquote>&#xA;  <p>POST / - - ms - -</p>&#xA;  &#xA;  <p>(node:1938) UnhandledPromiseRejectionWarning:&#xA;  Unhandled promise rejection (rejection id: 4443): Error: Network&#xA;  error: request to <a href=""http://localhost:3000"" rel=""nofollow noreferrer"">http://localhost:3000</a> failed, reason: <strong>socket hang up</strong></p>&#xA;</blockquote>&#xA;&#xA;<p>If I do kill the server, however, I immediately get this error instead:</p>&#xA;&#xA;<blockquote>&#xA;  <p>/Users/.../node_modules/duplexer/index.js:31</p>&#xA;&#xA;<pre><code>writer.on(""drain"", function() {&#xA;&#xA;      ^&#xA;</code></pre>&#xA;  &#xA;  <p>TypeError: Cannot read property 'on' of undefined</p>&#xA;  &#xA;  <p>at duplex (/Users/.../node_modules/duplexer/index.js:31:11)</p>&#xA;  &#xA;  <p>at Object.module.exports (/Users/.../node_modules/stream-combiner/index.js:8:17)</p>&#xA;  &#xA;  <p>at childrenOfPid (/Users/.../node_modules/ps-tree/index.js:50:6)</p>&#xA;  &#xA;  <p>at kill (/Users/.../node_modules/nodemon/lib/monitor/run.js:271:7)</p>&#xA;  &#xA;  <p>at Bus.onQuit (/Users/.../node_modules/nodemon/lib/monitor/run.js:327:5)</p>&#xA;  &#xA;  <p>at emitNone (events.js:91:20)</p>&#xA;  &#xA;  <p>at Bus.emit (events.js:188:7)</p>&#xA;  &#xA;  <p>at process. (/Users/.../node_modules/nodemon/lib/monitor/run.js:349:9)</p>&#xA;  &#xA;  <p>at Object.onceWrapper (events.js:293:19)</p>&#xA;  &#xA;  <p>at emitNone (events.js:86:13)</p>&#xA;</blockquote>&#xA;&#xA;<p>Also, port 3000 is correct. If I change the number, I get a different error instead:</p>&#xA;&#xA;<blockquote>&#xA;  <p>(node:2056) UnhandledPromiseRejectionWarning: Unhandled promise&#xA;  rejection (rejection id: 1): Error: Network error: request to&#xA;  <a href=""http://localhost:3010"" rel=""nofollow noreferrer"">http://localhost:3010</a> failed, reason: <strong>connect ECONNREFUSED</strong>&#xA;  127.0.0.1:3010</p>&#xA;</blockquote>&#xA;",6568628,,6568628,2017-07-01 11:37:53,2017-07-31 18:05:48,Server side rendering with Apollo: getaddrinfo ENOTFOUND,<node.js><express><react-router><apollo><react-apollo>,2,6,0,2017-06-29 02:31:32
44851558,1,44852430,,0,1521,"<p>When I'm trying to do two different query I get this error how do I fix it </p>&#xA;&#xA;<p>``Error: query option is required. You must specify your GraphQL document in the query option.</p>&#xA;&#xA;<p>Here's a snippet of the code  </p>&#xA;&#xA;<pre><code>//in my index class I dispatch some actions&#xA;&#xA;componentDidMount () {&#xA; this.props.fetchNavigationBarDataThunk();&#xA; this.props.fetchActionToDoTitleDataThunk();&#xA;} &#xA;&#xA;//then in my action I have something like that &#xA;&#xA;import ApolloClient, { createNetworkInterface } from 'apollo-client';&#xA;import gql from 'graphql-tag';&#xA;&#xA;const opts = {uri: 'http://localhost:8080/wfgen/graphql'};&#xA;const networkInterface = createNetworkInterface(opts);&#xA;const client = new ApolloClient({networkInterface});&#xA;&#xA;var query1 = gql`query {...}`;&#xA;&#xA;var query2= gql`query {...}`;&#xA;&#xA;&#xA;export function fetchActionToDoTitleDataThunk () {&#xA;return (dispatch) =&gt; {&#xA;dispatch(fetchActionToDoTitleData())&#xA;client.query({ query2 }).then((results) =&gt; {&#xA;  if (results.networkStatus === 7 &amp;&amp; results.loading === false) {&#xA;    dispatch(fetchActionToDoTitleDataFulFilled(results));&#xA;  }&#xA;  else{&#xA;  ...&#xA;&#xA;&#xA;export function fetchNavigationBarDataThunk () {&#xA;return (dispatch) =&gt; {&#xA;&#xA;dispatch(fetchNavigationBarData())&#xA;client.query({query}).then((results) =&gt; {&#xA;  if (results.networkStatus === 7 &amp;&amp; results.loading === false) {&#xA;    dispatch(fetchNavigationBarDataFulFilled(results));&#xA;  }&#xA;  else{&#xA; ....&#xA;</code></pre>&#xA;",0,user7768004,,,2017-06-30 17:58:37,React apollo multiple query in redux action,<reactjs><redux><react-redux><graphql><apollo>,1,0,0,2017-06-30 16:56:57
44903537,1,44938614,,1,1925,"<p>Suppose I'm on a host machine with docker-compose running 2 containers/services:</p>&#xA;&#xA;<ul>&#xA;<li>backend graphql (ports: 8000:8000)</li>&#xA;<li>frontend react (ports: 8081:8081)</li>&#xA;</ul>&#xA;&#xA;<p>In the frontend container, where my react + apollo code lives, I need to set this const:</p>&#xA;&#xA;<pre><code>// frontend container code&#xA;export const APOLLO = {&#xA;    uri: 'http://0.0.0.0:8000/graphql' // &lt;&lt; not working, what to use here?&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>However, the uri value is not able to connect successfully to the backend graphql endpoint. I'm receiving errors such as <code>Error Network error: request to http://0.0.0.0:8000/graphql failed, reason: connect ECONNREFUSED 0.0.0.0:8000</code></p>&#xA;&#xA;<p>The containers work fine on their own. I am able to navigate to <code>http://0.0.0.0:8000</code>, <code>http://0.0.0.0:8000/graphql</code>, <code>http://0.0.0.0:8081</code> to interact with them individually. I am also able to enter each container and reach the other via their service name-spaces with <code>ping backend</code> or <code>ping frontend</code>.</p>&#xA;&#xA;<p>However, when I do <code>uri: 'http://backend:8000/graphql'</code> or <code>uri: 'http://backend/graphql'</code> in my code, i get the error <code>Error Network error: only absolute urls are supported</code>.</p>&#xA;&#xA;<p>On <code>docker inspect backend</code>, I get the backend container's IP address as: <code>'172.18.0.5'</code>. Which i tried to plug into the uri as <code>uri: 'http://172.18.0.5/graphql'</code>, but I get <code>Error Network error: Network request failed with status 403 - ""Forbidden""</code></p>&#xA;&#xA;<p>How should I connect backend docker container to the frontend within the code given these scenarios?</p>&#xA;&#xA;<p>Thanks!</p>&#xA;",3532313,,,,2017-10-20 16:55:43,Connect Docker Containers: Frontend to GraphQL Backend via Docker Compose on the same Host,<docker><docker-compose><graphql>,2,1,0,2017-07-04 10:31:10
44931684,2,,43196733,2,,"<p>This is a bug in graphene-django. It was fixed in version 1.3.&#xA;<a href=""https://github.com/graphql-python/graphene-django/releases"" rel=""nofollow noreferrer"">Changelog</a></p>&#xA;&#xA;<p>Regards.</p>&#xA;",6157645,,,,2017-07-05 16:35:39,"",,0,0,0,2017-07-05 16:35:39
44938614,2,,44903537,3,,<p>Fixed it by running the servers locally instead of Docker and found that backend was rejecting frontend entry due to CORS headers not set. Whitelisted frontends' ip and it worked. Tested again in Docker containers with the backend ip <code>http://172.18.0.5/graphql</code> and connection was perfect.</p>&#xA;&#xA;<p>Hope this helps!</p>&#xA;&#xA;<p><strong>Edit</strong>: Referring to the container name in the url hostname i.e. <code>http://backend/graphql</code> also works thanks to the docker network bridge setup by docker compose. This is a better solution than hardcoding the docker container ip above.</p>&#xA;,3532313,,3532313,2017-07-06 09:14:09,2017-07-06 09:14:09,"",,0,0,0,2017-07-06 01:56:39
44941209,2,,42723989,1,,"<p>To clarify some of the above answers, since one of the users noted that passing in the uri as a first argument to createNetworkInterface works but logs a deprecation message in the console: you have to pass in options like ""credentials"" and ""headers"" in as properties of an options object like so:</p>&#xA;&#xA;<pre><code>const networkInterface = createNetworkInterface({&#xA;  uri: '/graphql',&#xA;  opts: {&#xA;    credentials: 'same-origin',&#xA;    headers: {&#xA;      'X-CSRF-TOKEN': $('meta[name=csrf-token]').attr('content'),&#xA;    },&#xA;  },&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>See the second example under Fetch in the docs: <a href=""http://dev.apollodata.com/core/network.html"" rel=""nofollow noreferrer"">http://dev.apollodata.com/core/network.html</a></p>&#xA;",6425720,,,,2017-07-06 06:22:41,"",,0,0,0,2017-07-06 06:22:41
44971132,2,,44815430,2,,"<p>Are you running your server / project inside a container / containers. I had the same issue as this and ended up doing the following to fix it. </p>&#xA;&#xA;<p><code>const networkInterface = createNetworkInterface({&#xA;   uri: process.browser &#xA;         ? 'http://0.0.0.0:1111/graphql' &#xA;         : 'http://my-docker-container-name:8080/graphql'&#xA;})</code></p>&#xA;&#xA;<p>I have an internal docker network created for my containers in my docker-compose.yml, which allows the containers to communicate with each other, however the browser communicates to the GQL server on a different URL, causing the issue you described on SSR the <code>getaddrinfo ENOTFOUND</code>, so although it was working client side, on the SSR it would fail. </p>&#xA;&#xA;<p>I am using nextJS framework which gives the ability to detect the browser or SSR, i'm sure you could do the same outside of nextJS. </p>&#xA;",662739,,,,2017-07-07 12:45:49,"",,0,2,0,2017-07-07 12:45:49
44989304,1,,,1,433,"<p>I just started looking at Relay Modern recently and creating a simple app with a GraphQL backend (which works perfectly fine when testing with GraphIQL). However, I'm running into problems with Relay not sending network requests to retrieve <em>any</em> data. I'm not 100% confident about the below code but I definitely would expect it to at least send a network request to <code>http://localhost:3000/graphql</code>, but the devtools don't show any such request (or server logs).</p>&#xA;&#xA;<p><strong>environment.js</strong></p>&#xA;&#xA;<pre><code>import { Environment, Network, RecordSource, Store } from 'relay-runtime';&#xA;&#xA;const store = new Store(new RecordSource());&#xA;&#xA;const network = Network.create((operation, variables) =&gt;&#xA;  fetch('http://localhost:3000/graphql', {&#xA;    method: 'POST',&#xA;    headers: {&#xA;      // Add authentication and other headers here&#xA;      Accept: 'application/json',&#xA;      'Content-Type': 'application/json',&#xA;    },&#xA;    body: JSON.stringify({&#xA;      query: operation.text, // GraphQL text from input&#xA;      variables,&#xA;    }).then(res =&gt; res.json()),&#xA;  })&#xA;);&#xA;&#xA;const environment = new Environment({&#xA;  network,&#xA;  store,&#xA;});&#xA;&#xA;export default environment;&#xA;</code></pre>&#xA;&#xA;<p><strong>App.jsx</strong></p>&#xA;&#xA;<pre><code>import React, { Component } from 'react';&#xA;import { graphql, QueryRenderer } from 'react-relay';&#xA;&#xA;import environment from '@utilities/environment';&#xA;&#xA;class App extends Component {&#xA;  render() {&#xA;    console.log(this.props); // Empty object {} here&#xA;&#xA;    return (&#xA;      &lt;div&gt;&#xA;        Hello World!&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;const Query = graphql`&#xA;  query AppQuery {&#xA;    user(id: ""u01"") {&#xA;      id&#xA;      username&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;const AppQuery = () =&gt;&#xA;  (&lt;QueryRenderer&#xA;    environment={environment}&#xA;    graphql={Query}&#xA;    variables={{}}&#xA;    render={({ error, props }) =&gt; {&#xA;      console.log(error, props); // Get (undefined, {}) here&#xA;      if (error) {&#xA;        return &lt;div&gt;{error.message}&lt;/div&gt;;&#xA;      } else if (props) {&#xA;        return &lt;App {...props} /&gt;;&#xA;      }&#xA;      return &lt;div&gt;Loading!&lt;/div&gt;;&#xA;    }}&#xA;  /&gt;);&#xA;&#xA;export default AppQuery;&#xA;</code></pre>&#xA;&#xA;<p>Am I missing something obvious? There are no console/webpack errors and the app renders properly, such as it is, but simply no GraphQL/Relay data. Thanks!</p>&#xA;",4206438,,,,2017-07-13 23:51:31,Relay Modern isn't sending network request to GraphQL Server,<javascript><reactjs><graphql><relay>,1,0,0,2017-07-08 18:07:38
45227015,1,,,0,970,"<p>I have the following code in Angular 2 querying a GraphQL endpoint using Apollo:</p>&#xA;&#xA;<pre><code>getStudentPersonalDetails(studentId?: number) {&#xA;    console.log(studentId)&#xA;    this.apollo.watchQuery&lt;QueryResponse&gt;({&#xA;        query: StudentPersonalDetailsQ,&#xA;        variables: {&#xA;            studentId: studentId&#xA;        }&#xA;    }).subscribe(({ data }) =&gt; {&#xA;        if (typeof data.allStudentDetails != 'undefined') {&#xA;            console.log(data)&#xA;            this.loading = data.loading;&#xA;            this.personalDetails.studentId = data.allStudentDetails.nodes[0].studentPk;&#xA;            this.personalDetails.firstName = data.allStudentDetails.nodes[0].firstName;&#xA;            this.personalDetails.middleName = data.allStudentDetails.nodes[0].middleName;&#xA;            this.personalDetails.lastName = data.allStudentDetails.nodes[0].lastName;&#xA;            this.personalDetails.preferredName = data.allStudentDetails.nodes[0].preferredName;&#xA;            this.personalDetails.onlyOneName = data.allStudentDetails.nodes[0].onlyOneName;&#xA;            this.personalDetails.dob = data.allStudentDetails.nodes[0].dob;&#xA;            this.personalDetails.sex = data.allStudentDetails.nodes[0].sex;&#xA;            this.personalDetails.birthCountry = data.allStudentDetails.nodes[0].metaCountryByBirthCountryId.countryName;&#xA;            this.personalDetails.passportCountry = data.allStudentDetails.nodes[0].metaCountryByPassportCountryId.countryName;&#xA;            this.personalDetails.passportNumber = data.allStudentDetails.nodes[0].passportNumber;&#xA;            this.personalDetails.contactCountry = data.allStudentDetails.nodes[0].metaCountryByContactCountryId.countryName;&#xA;            this.personalDetails.personalEmail = data.allStudentDetails.nodes[0].personalEmail;&#xA;            console.log(data.allStudentDetails);&#xA;        }&#xA;    }, (error) =&gt; {&#xA;        console.log('there was an error sending the query', error);&#xA;    });&#xA;</code></pre>&#xA;&#xA;<p>I am testing the method by deliberately passing a student ID that doesn't exist and therefore getting back <code>Cannot read property 'studentPk' of undefined</code>. However, I am trying to avoid this error by detecting if <code>allStudentDetails</code> is undefined and moving onto the error catch.</p>&#xA;&#xA;<p>How do I add error handling to deal with <code>undefined</code> data and then appropriately feed that up from the service to a component that will use a toaster to display a user friendly error?</p>&#xA;",2836841,,,,2017-07-21 15:08:38,Error Handling For Undefined From Subscription - Apollo and Angular 2,<angular><graphql><apollo>,1,2,0,2017-07-21 00:09:40
45227731,2,,45227015,0,,"<p>If I'm understanding the question, you could first run the response through <code>map</code> and throw an error at that level. Something like (this is untested, of course):</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>getStudentPersonalDetails(studentId?: number) {&#xA;    console.log(studentId)&#xA;    this.apollo.watchQuery&lt;QueryResponse&gt;({&#xA;        query: StudentPersonalDetailsQ,&#xA;        variables: {&#xA;            studentId: studentId&#xA;        }&#xA;    }).map((data) =&gt; {&#xA;        console.log(data.allStudentDetails);&#xA;        if (typeof data.allStudentDetails.nodes[0] === 'undefined') {&#xA;            // Could also check if array length is 0&#xA;            // data.allStudentDetails.nodes.length &lt;= 0&#xA;            throw new Error('This student does not exist!');&#xA;        }&#xA;        return data;&#xA;    }).subscribe((data) =&gt; {&#xA;        console.log(data)&#xA;        this.loading = data.loading;&#xA;        this.personalDetails.studentId = data.allStudentDetails.nodes[0].studentPk;&#xA;        this.personalDetails.firstName = data.allStudentDetails.nodes[0].firstName;&#xA;        this.personalDetails.middleName = data.allStudentDetails.nodes[0].middleName;&#xA;        this.personalDetails.lastName = data.allStudentDetails.nodes[0].lastName;&#xA;        this.personalDetails.preferredName = data.allStudentDetails.nodes[0].preferredName;&#xA;        this.personalDetails.onlyOneName = data.allStudentDetails.nodes[0].onlyOneName;&#xA;        this.personalDetails.dob = data.allStudentDetails.nodes[0].dob;&#xA;        this.personalDetails.sex = data.allStudentDetails.nodes[0].sex;&#xA;        this.personalDetails.birthCountry = data.allStudentDetails.nodes[0].metaCountryByBirthCountryId.countryName;&#xA;        this.personalDetails.passportCountry = data.allStudentDetails.nodes[0].metaCountryByPassportCountryId.countryName;&#xA;        this.personalDetails.passportNumber = data.allStudentDetails.nodes[0].passportNumber;&#xA;        this.personalDetails.contactCountry = data.allStudentDetails.nodes[0].metaCountryByContactCountryId.countryName;&#xA;        this.personalDetails.personalEmail = data.allStudentDetails.nodes[0].personalEmail;&#xA;    }, (error) =&gt; {&#xA;        console.log(error.message);&#xA;    });&#xA;</code></pre>&#xA;",715597,,715597,2017-07-21 15:08:38,2017-07-21 15:08:38,"",,0,2,0,2017-07-21 01:49:59
45229106,1,,,0,1904,"<blockquote>&#xA;  <p>I  got this error in my application ( react-native ) when internet connection is lost.&#xA;  When i start the app on offline mode, Initial component renders, try to execute the query, app crashes.&#xA;  it works perfect when my app is connected with internet. But my application crashes when its not. How can i handle this error?</p>&#xA;</blockquote>&#xA;&#xA;<p><strong><em>ExceptionsManager.js:71 ""Unhandled error Network error: Network request failed Error: Network error: Network request failed at new ApolloError""</em></strong></p>&#xA;&#xA;<pre><code>import ApolloClient, { createNetworkInterface } from 'apollo-client';&#xA;import { AsyncStorage } from 'react-native';&#xA;import {SubscriptionClient, addGraphQLSubscriptions} from 'subscriptions-transport-ws';&#xA;&#xA;const wsClient = new SubscriptionClient('wss://172.20.32.6:5000', {&#xA;  reconnect: true,&#xA;  connectionParams: {&#xA;    accessToken: 'jka sdhkjashd jkashdjk ashdas'&#xA;  }&#xA;});&#xA;&#xA;const networkInterface = createNetworkInterface({&#xA;   uri: 'http://172.20.32.6:8000/graphql',&#xA;   opts: {&#xA;    credentials: 'same-origin'&#xA;    }&#xA;});&#xA;const networkInterfaceWithSubscriptions = addGraphQLSubscriptions(&#xA;  networkInterface,&#xA;  wsClient&#xA;);&#xA;const client = new ApolloClient({&#xA;  dataIdFromObject: o =&gt; o.id,&#xA;  networkInterface: networkInterfaceWithSubscriptions&#xA;&#xA;});&#xA;networkInterface.use([{&#xA;  applyMiddleware(req, next) {&#xA;    if (!req.options.headers) {&#xA;      req.options.headers = {};  // Create the header object if needed.&#xA;    }&#xA;    // get the authentication token from local storage if it exists&#xA;    AsyncStorage.getItem('sessionToken').then((token) =&gt; {&#xA;      req.options.headers.Authorization = token ? `${token}` : null;&#xA;      next();&#xA;    }&#xA;    );&#xA;  }&#xA;}]);&#xA;export default client;&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/uX1gI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uX1gI.png"" alt=""enter image description here""></a></p>&#xA;",5401122,,,,2017-09-22 07:46:47,Unhandled error Network error: Network request failed Error: Network request failed Error: at new ApolloError,<android><react-native><apollo-client>,1,0,0,2017-07-21 04:42:06
45290799,2,,45253821,1,,"<p>Have you checked your .flowconfig to see if you are ignoring /node_modules/* ?</p>&#xA;&#xA;<p>I am able to fix the issue by removing the ignore.  I do, however, have other issues I have been running into.  </p>&#xA;",3827338,,,,2017-07-24 22:02:46,"",,0,1,0,2017-07-24 22:02:46
45291792,2,,45247969,0,,"<p>Script was running on an older version of node, updating to 6.9 fixed the issue</p>&#xA;",242769,,,,2017-07-24 23:55:49,"",,0,0,0,2017-07-24 23:55:49
45297104,2,,45264880,2,,"<p>Do you mean to enable graphiql on development only and disable it on production. If so just exclude the /graphiql handler</p>&#xA;&#xA;<pre><code>if (process.env.NODE_ENV === 'development') {&#xA;  app.all(&#xA;    '/graphiql',&#xA;    graphiqlExpress({&#xA;      endpointURL: '/graphql',&#xA;    }),&#xA;  );&#xA;}&#xA;</code></pre>&#xA;",4152263,,,,2017-07-25 07:51:24,"",,0,1,0,2017-07-25 07:51:24
45325152,2,,45312904,3,,"<p>To use the latest build from the bintray repository change the dependency version. You can find the releases <a href=""https://bintray.com/andimarek/graphql-java/graphql-java"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;&#xA;<pre><code>&lt;dependencies&gt;&#xA;    &lt;dependency&gt;&#xA;        &lt;groupId&gt;com.graphql-java&lt;/groupId&gt;&#xA;        &lt;artifactId&gt;graphql-java&lt;/artifactId&gt;&#xA;        &lt;version&gt;2019-04-09T05-29-53-bd9240c&lt;/version&gt;&#xA;    &lt;/dependency&gt;&#xA;&lt;/dependencies&gt;&#xA;</code></pre>&#xA;&#xA;<p>If you want to use the latest stable version (11.0.0) <strong>remove the unnecessary repositories declaration</strong> and use it this way.</p>&#xA;&#xA;<pre><code>&lt;!-- https://mvnrepository.com/artifact/com.graphql-java/graphql-java --&gt;&#xA;&lt;dependency&gt;&#xA;    &lt;groupId&gt;com.graphql-java&lt;/groupId&gt;&#xA;    &lt;artifactId&gt;graphql-java&lt;/artifactId&gt;&#xA;    &lt;version&gt;11.0.0&lt;/version&gt;&#xA;&lt;/dependency&gt;&#xA;</code></pre>&#xA;",4446383,,4446383,2019-04-14 13:43:54,2019-04-14 13:43:54,"",,0,1,0,2017-07-26 11:07:29
45361050,1,,,3,2440,"<p>I'm in the learning process of relay and facing a very wired issue. Relay is not returning the data from network response if I use fragment spread operator (actual data is returning from graphql, confirmed from the network tab). But if I define the field requirements in the query itself, it returns data.</p>&#xA;&#xA;<p>This is <code>index.js</code> of the app:</p>&#xA;&#xA;<pre><code>import React from 'react'&#xA;import ReactDOM from 'react-dom'&#xA;import {&#xA;  graphql,&#xA;  QueryRenderer&#xA;} from 'react-relay'&#xA;import environment from './relay/environment'&#xA;import AllTodo from './components/AllTodo'&#xA;&#xA;const query = graphql`&#xA;  query frontendQuery {&#xA;    ...AllTodo_todos&#xA;  }&#xA;`&#xA;&#xA;ReactDOM.render(&#xA;  &lt;QueryRenderer&#xA;    environment={environment}&#xA;    query={query}&#xA;    render={({ error, props }) =&gt; {&#xA;      if (error) return &lt;div&gt;{error}&lt;/div&gt;&#xA;      else if (props) {&#xA;        console.log(props)&#xA;        return &lt;AllTodo { ...props } /&gt;&#xA;      }&#xA;      else return &lt;div&gt;loading...&lt;/div&gt;&#xA;    }}&#xA;  /&gt;,&#xA;  document.getElementById('root')&#xA;)&#xA;</code></pre>&#xA;&#xA;<p><code>AllTodo</code> component:</p>&#xA;&#xA;<pre><code>import React, { Component } from 'react'&#xA;import { graphql, createFragmentContainer } from 'react-relay'&#xA;&#xA;class AllTodo extends Component {&#xA;  render() {&#xA;    return (&#xA;      &lt;div&gt;&#xA;        { this.props.todos.map(todo =&gt; {&#xA;          &lt;div&gt;{ todo.id } { todo.description }&lt;/div&gt;&#xA;        }) }&#xA;      &lt;/div&gt;&#xA;    )&#xA;  }&#xA;}&#xA;&#xA;export default createFragmentContainer(AllTodo, graphql`&#xA;  fragment AllTodo_todos on RootQueryType {&#xA;    allTodos {&#xA;      id&#xA;      description&#xA;      complete&#xA;    }&#xA;  }&#xA;`);&#xA;</code></pre>&#xA;&#xA;<p>Relay <code>environment</code>:</p>&#xA;&#xA;<pre><code>import {&#xA;  Environment,&#xA;  Network,&#xA;  RecordSource,&#xA;  Store,&#xA;} from 'relay-runtime'&#xA;import { BACKEND_URL } from '../../constants'&#xA;&#xA;// a function that fetches the results of an operation (query/mutation/etc)&#xA;// and returns its results as a Promise:&#xA;function fetchQuery(&#xA;  operation,&#xA;  variables,&#xA;  cacheConfig,&#xA;  uploadables,&#xA;) {&#xA;  return fetch(BACKEND_URL + '/graphql', {&#xA;    method: 'POST',&#xA;    headers: {&#xA;      'content-type': 'application/json'&#xA;    },&#xA;    body: JSON.stringify({&#xA;      query: operation.text,&#xA;      variables,&#xA;    }),&#xA;  }).then(response =&gt; {&#xA;    return response.json();&#xA;  });&#xA;}&#xA;&#xA;// a network layer from the fetch function&#xA;const network = Network.create(fetchQuery);&#xA;&#xA;// export the environment&#xA;export default new Environment({&#xA;  network: network,&#xA;  store: new Store(new RecordSource())&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>The graphql <code>schema</code>:</p>&#xA;&#xA;<pre><code>schema {&#xA;  query: RootQueryType&#xA;  mutation: RootMutationType&#xA;}&#xA;&#xA;type RootMutationType {&#xA;  # Create a new todo item&#xA;  createTodo(description: String): Todo&#xA;&#xA;  # Update a todo item&#xA;  updateTodo(id: String, description: String, complete: Boolean): Todo&#xA;&#xA;  # Delete a single todo item&#xA;  deleteTodo(id: String): Todo&#xA;}&#xA;&#xA;type RootQueryType {&#xA;  # List of all todo items&#xA;  allTodos: [Todo]&#xA;&#xA;  # A single todo item&#xA;  todo(id: String): Todo&#xA;}&#xA;&#xA;# A single todo item&#xA;type Todo {&#xA;  id: String&#xA;  description: String&#xA;  complete: Boolean&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is the response I'm getting while <code>console.log(props)</code> on <code>index.js</code>:&#xA;<a href=""https://i.stack.imgur.com/2gVFh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2gVFh.png"" alt=""response from relay""></a></p>&#xA;&#xA;<p>Please help me to understand what I'm missing here. Thanks in advance.</p>&#xA;",3000825,,,,2017-08-24 22:44:48,relay fragment spread not working,<reactjs><graphql><relayjs><relay><graphql-js>,1,2,0,2017-07-27 21:09:13
45370765,2,,45370593,0,,<p>Server restart fix my issue. Not sure why this was required with hot-reloading. The code was correct.</p>&#xA;,799618,,,,2017-07-28 10:13:17,"",,0,0,0,2017-07-28 10:13:17
45463585,2,,45458428,3,,"<p>How about doing it like this:</p>&#xA;&#xA;<pre><code>const userFragment = gql`&#xA;  fragment Relationship_user on User {&#xA;    ...User_user&#xA;  }&#xA;  ${User.fragments.user}&#xA;`;&#xA;Relationship.fragments = {&#xA;  user1: userFragment,&#xA;  user2: userFragment,&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Apart from that, I'd recommend you scope your fragment names as shown above, as some kind of name spacing is required, because otherwise it's more likely you'll run into using the same fragment names twice.</p>&#xA;&#xA;<p>i.e. </p>&#xA;&#xA;<ul>&#xA;<li><code>User.fragments.user</code> => <code>User_user</code></li>&#xA;<li><code>Relationship.fragments.user</code> => <code>Relationship_user</code></li>&#xA;</ul>&#xA;",945365,,,,2017-08-02 14:25:16,"",,0,2,0,2017-08-02 14:25:16
45468180,1,45471744,,0,663,"<p>According to the documentation here, the second argument to a resolver function in the graphql-tools library is an object passed into the query</p>&#xA;&#xA;<p><a href=""http://dev.apollodata.com/tools/graphql-tools/resolvers.html#Resolver-function-signature"" rel=""nofollow noreferrer"">http://dev.apollodata.com/tools/graphql-tools/resolvers.html#Resolver-function-signature</a></p>&#xA;&#xA;<p>However, if I run graphql-tools with a version of graphql >= 0.8.0, the ""object"" passed as the second argument is missing some object properties. For example, <code>arg.constructor</code> and <code>arg.hasOwnProperty</code> are undefined.</p>&#xA;&#xA;<p>In the previous version, 0.7.2, both these statements would evaluate to true:</p>&#xA;&#xA;<pre><code>arg.consructor === Object&#xA;arg.hasOwnProperty === 'function'&#xA;</code></pre>&#xA;&#xA;<p>Does anyone know what is actually getting passed as the second argument, or why these properties which usually exist on JS objects are undefined?</p>&#xA;&#xA;<p>edit below:</p>&#xA;&#xA;<p>I can get by this by doing something like this:</p>&#xA;&#xA;<pre><code>async resolverFuncForMutation(root, nonObjArgs, context) {&#xA;  const args = Object.assign({}, nonObjArgs);&#xA;</code></pre>&#xA;&#xA;<p>But I don't want to have to remember how to do that for every resolver function. Does anyone know how to if there's a way to configure that to happen in some kind of pre-resolution hook?</p>&#xA;",3284046,,3284046,2017-08-02 19:13:18,2017-08-02 22:02:16,Arguments to graphql-tools mutation resolver is not an object in v > 0.8.0?,<javascript><graphql><graphql-js><apollo><apollo-server>,1,0,0,2017-08-02 18:14:16
45509228,1,51311768,,12,4600,<p>I can't find or I am looking in the wrong place for any documentation on how fragments are matched. When I use the vanilla Apollo client if I turn off the option of <code>addTypename</code> when I use fragments I get a warning <code>heuristic fragment matching going on!</code> and if I add it this goes away but my response contains many <code>__typename</code> fields which I don't need.  Why do they help?</p>&#xA;,112665,,112665,2017-08-04 16:29:35,2019-09-04 02:27:46,Why do GraphQL fragments need __typename in queries?,<graphql><apollo><apollo-client>,1,1,0,2017-08-04 14:21:11
45510327,2,,45471337,1,,<p>It seems this issue only occurs when the JS Debugger is enabled (the one that opens a tunnel to your desktop chrome). If it's disabled the app works as expected.</p>&#xA;,340688,,,,2017-08-04 15:17:00,"",,0,0,0,2017-08-04 15:17:00
45515006,2,,43314395,0,,<p>Actually the code in the question above is a good example of how to do it.  The function <strong>is</strong> there. The problem is JSON.stringify is not showing functions ‍♂️. At least this question serves as an example of how to do it </p>&#xA;,1832177,,,,2017-08-04 20:28:26,"",,0,0,0,2017-08-04 20:28:26
45592614,2,,45123526,0,,"<p>This was a bug in PostGraphQL; it's been fixed in version 4 (which has not been released yet, but you can install via <code>npm install postgraphql@next</code>)</p>&#xA;&#xA;<p>More information: <a href=""https://github.com/postgraphql/postgraphql/issues/516"" rel=""nofollow noreferrer"">https://github.com/postgraphql/postgraphql/issues/516</a></p>&#xA;",141284,,,,2017-08-09 13:49:07,"",,0,0,0,2017-08-09 13:49:07
45723832,2,,45694291,1,,"<p>I found some excellent documentation from Apollo Data that deals exactly with this issue, <a href=""http://dev.apollodata.com/core/network.html#CustomNetworkInterfaceExample"" rel=""nofollow noreferrer"">http://dev.apollodata.com/core/network.html#CustomNetworkInterfaceExample</a></p>&#xA;&#xA;<p>I combined this with the <a href=""https://github.com/rauliyohmc/react-native-offline"" rel=""nofollow noreferrer"">react-native-offline</a> package to get me an <code>isConnected</code> prop, which I can pass alongside my <a href=""http://dev.apollodata.com/core/apollo-client-api.html#ApolloClient.query"" rel=""nofollow noreferrer"">query variables</a>, and created a new <code>HybridNetworkInterface</code>:</p>&#xA;&#xA;<pre><code>import {createNetworkInterface} from 'apollo-client'&#xA;import {createLocalNetworkInterface} from './LocalNetworkInterface'&#xA;&#xA;export class HybridNetworkInterface {&#xA;  constructor(opts) {&#xA;    this.localInterface = createLocalNetworkInterface(opts)&#xA;    this.networkInterface = createNetworkInterface(opts) // createNetworkInterface&#xA;  }&#xA;  query(request) {&#xA;    if (request.variables &amp;&amp; request.variables.isConnected) {&#xA;      return this.networkInterface.query(request)&#xA;    }&#xA;    return this.localInterface.query(request)&#xA;  }&#xA;  use(middlewares) {&#xA;    this.networkInterface.use(middlewares)&#xA;    this.localInterface.use(middlewares)&#xA;    return this&#xA;  }&#xA;  useAfter(afterwares) {&#xA;    this.networkInterface.useAfter(afterwares)&#xA;    this.localInterface.useAfter(afterwares)&#xA;    return this&#xA;  }&#xA;}&#xA;&#xA;export function createHybridNetworkInterface(opts) {&#xA;  return new HybridNetworkInterface(opts)&#xA;}&#xA;</code></pre>&#xA;",3456726,,,,2017-08-16 22:16:07,"",,0,0,0,2017-08-16 22:16:07
45904060,1,,,3,2064,"<p>I'am currently switching my existing app from create-react-app to next.js,&#xA;everything seems to work correctly except my api end point running on another node app on port 4000, which i can't access from my next.js app. &#xA;I followed the examples in the repo but i can't make it work,&#xA;In production i use nginx as reverse proxy with no problem , but i'am in dev mode .&#xA;For setting up Apollo with Redux i followed this example :<a href=""https://github.com/zeit/next.js/tree/master/examples/with-apollo-and-redux"" rel=""nofollow noreferrer"">with-apollo-and-redux</a> and for proxy i used this example <a href=""https://github.com/zeit/next.js/tree/master/examples/with-custom-reverse-proxy"" rel=""nofollow noreferrer"">with-custom-reverse-proxy</a></p>&#xA;&#xA;<p>I know , am making something wrong, i just can't figure it out at the moment</p>&#xA;&#xA;<p>in the initApollo.js</p>&#xA;&#xA;<pre><code>...    &#xA;function create() {&#xA;      return new ApolloClient({&#xA;        ssrMode: !process.browser,&#xA;        networkInterface: createNetworkInterface({&#xA;          uri: ""/api"" &#xA;        })&#xA;      });&#xA;    }&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>in server.js</p>&#xA;&#xA;<pre><code>...    &#xA;const devProxy = {&#xA;      ""/api/"": {&#xA;        target: ""http://localhost:4000/api/"",&#xA;        changeOrigin: true&#xA;      }&#xA;    };&#xA;&#xA;    app&#xA;      .prepare()&#xA;      .then(() =&gt; {&#xA;        const server = express();&#xA;&#xA;        if (dev &amp;&amp; devProxy) {&#xA;          const proxyMiddleware = require('http-proxy-middleware')&#xA;          Object.keys(devProxy).forEach(function (context) {&#xA;            server.use(proxyMiddleware(context, devProxy[context]))&#xA;          })&#xA;        }&#xA;&#xA;        server.all(""*"", (req, res) =&gt; handle(req, res));&#xA;&#xA;        server.listen(3000, err =&gt; {&#xA;          if (err) throw err;&#xA;          console.log(""&gt; Ready on http://localhost:3000"");&#xA;        });&#xA;      })&#xA;      .catch(ex =&gt; {&#xA;        console.error(ex.stack);&#xA;        process.exit(1);&#xA;      });&#xA;</code></pre>&#xA;",3857110,,3857110,2017-08-27 16:24:44,2017-08-27 17:50:44,Request Graphql api running on different port from Next.js app in development mode localhost,<node.js><express><react-apollo><apollo-client><next.js>,1,1,0,2017-08-27 10:40:46
45907764,2,,45904060,3,,"<p>Ok i finally found the problem which, is <strong>NOT</strong> related to Next.js or Apollo client. but instead it's all about my server running on port 4000 (my graphql server). i had to deal with CORS, and the express middlware <code>express-graphql</code> which i think it's not supported by default .</p>&#xA;&#xA;<p>so i add the following to my server running graphql</p>&#xA;&#xA;<pre><code>app.use(""/api"", function(req, res, next) {&#xA;  res.header(""Access-Control-Allow-Origin"", ""*"");&#xA;  res.header(&#xA;    ""Access-Control-Allow-Headers"",&#xA;    ""Content-Type, Authorization, Content-Length, X-Requested-With""&#xA;  );&#xA;  if (req.method === ""OPTIONS"") {&#xA;    res.sendStatus(200);&#xA;  } else {&#xA;    next();&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>and also in the apollo client i had to put absolut path to my api server</p>&#xA;&#xA;<pre><code>networkInterface: createNetworkInterface({&#xA;      uri: ""http://localhost:4000/api/""&#xA;    })&#xA;</code></pre>&#xA;&#xA;<p>that's it </p>&#xA;",3857110,,,,2017-08-27 17:50:44,"",,0,0,0,2017-08-27 17:50:44
45951319,2,,44737454,3,,"<p><strong>Problem:</strong> </p>&#xA;&#xA;<p>When you're getting your connection:</p>&#xA;&#xA;<p><code>const connection = ConnectionHandler.getConnection(viewerProxy, 'Link_votes')</code> </p>&#xA;&#xA;<p>you're trying to get the connection 'Link_votes' on the ViewerProxy. However what you want to be doing is getting the connection on the link.</p>&#xA;&#xA;<p><strong>Solution:</strong></p>&#xA;&#xA;<p>First you would need to get the id of the link that your adding the vote to.</p>&#xA;&#xA;<p><code>const linkId = newVote.getLinkedRecord('link').getValue('id');</code></p>&#xA;&#xA;<p>Then you want to get the Link Proxy so that you can then get the correct connection.</p>&#xA;&#xA;<p><code>const linkProxy = proxyStore.get(LinkId)</code></p>&#xA;&#xA;<p>Now that you have the Link Proxy that represents the link that you wanted the connection for, you can now get that connection.</p>&#xA;&#xA;<p><code>const connection = ConnectionHandler.getConnection(linkProxy, 'Link_votes')</code></p>&#xA;&#xA;<p>Sweet so now you've got the connection. Which solves the issue you're having.</p>&#xA;&#xA;<p>However there is another problem, the way you go on to add the vote is wrong first you need to create an Edge out of it, and then add the edge.</p>&#xA;&#xA;<p>First we need to create an edge </p>&#xA;&#xA;<p><code>const voteEdge = createEdge(proxyStore, connection, newVote, 'VoteEdge');</code></p>&#xA;&#xA;<p>Now that we have the voteEdge we can append it to the connection.</p>&#xA;&#xA;<p><code>ConnectionHandler.insertEdgeAfter(connection, voteEdge).</code></p>&#xA;&#xA;<p>Now it should all work. However you probably shouldn't be using the updater function for this kind of action. You should be using the RANGE_ADD configuration <a href=""https://facebook.github.io/relay/docs/mutations.html#range-add"" rel=""nofollow noreferrer"">https://facebook.github.io/relay/docs/mutations.html#range-add</a> and change how your server responds to that mutation.</p>&#xA;",3685809,,,,2017-08-30 03:14:36,"",,0,0,0,2017-08-30 03:14:36
46016514,2,,45455877,4,,"<p>I had the same problem and I found my solution here <a href=""https://github.com/apollographql/apollo-client/issues/1757"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client/issues/1757</a></p>&#xA;&#xA;<p>Basically you need to use your computer's ip-address in the createNetworkInterface function, so change this: </p>&#xA;&#xA;<pre><code>const networkInterface = createNetworkInterface({ uri: 'http://localhost:3000/graphql' });&#xA;</code></pre>&#xA;&#xA;<p>to this:</p>&#xA;&#xA;<pre><code>const networkInterface = createNetworkInterface({ uri: 'http://YOURIPADDRESS:3000/graphql' });&#xA;</code></pre>&#xA;",5165491,,,,2017-09-02 17:42:51,"",,0,2,0,2017-09-02 17:42:51
46103247,2,,46103079,0,,<p>Fixed. My framework is Meteor and I had to set <code>ROOT_URL = 10.0.1.10:3000/</code>.</p>&#xA;,364966,,,,2017-09-07 18:51:41,"",,0,0,0,2017-09-07 18:51:41
46134134,1,,,3,773,"<p>I am learning GraphQL with <code>react-apollo</code> and wanted to look request in Chrome Devtools under Networks tab, but unfortunately I could see only this.&#xA;<a href=""https://i.stack.imgur.com/inDFj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/inDFj.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Though I could see response with chrome extension called <code>GraphQL Network</code>.&#xA;I am very curious, what can cause such behavior?</p>&#xA;&#xA;<p>As I know it is impossible to hide AJAX response.</p>&#xA;&#xA;<p><strong>UPDATE</strong> </p>&#xA;&#xA;<p>Status of request is success 200 and I can see data from server successfully, but I noticed one thing, that type of request instead of <code>xhr</code> is <code>fetch</code>.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/b1G5T.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/b1G5T.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>I guess it is because used <code>fetch</code> API, though don't know should be any differences between them, aren't they same XHR?</p>&#xA;",5352526,,5352526,2017-09-09 21:13:17,2021-07-24 21:24:51,Apollo GraphQL response is invisible in chrome devtools,<ajax><reactjs><google-chrome-devtools><graphql><react-apollo>,1,0,0,2017-09-09 19:01:10
46136227,2,,46135502,1,,"<p>I think I've figured it out. I'm using the LetsEncrypt free SSL and the nginx rules from <a href=""https://cipherli.st"" rel=""nofollow noreferrer"">https://cipherli.st</a> and it was the NginX (reverse proxy running the ssl + rules) that rejected the connection from my c# graphql client via RestSharp.</p>&#xA;&#xA;<p>To fix the error, you just need to add this to your app:</p>&#xA;&#xA;<pre><code>ServicePointManager.SecurityProtocol = &#xA;    SecurityProtocolType.Tls12 | &#xA;    SecurityProtocolType.Tls11 | &#xA;    SecurityProtocolType.Tls;&#xA;</code></pre>&#xA;",2332336,,,,2017-09-10 00:21:12,"",,0,0,0,2017-09-10 00:21:12
46348800,2,,44903537,0,,"<p>This is an issue that occurs when node-fetch does not have access to a protocol or hostname</p>&#xA;&#xA;<p><a href=""https://github.com/bitinn/node-fetch/blob/e2603d31c767cd5111df2ff6e2977577840656a4/src/request.js#L125"" rel=""nofollow noreferrer"">https://github.com/bitinn/node-fetch/blob/e2603d31c767cd5111df2ff6e2977577840656a4/src/request.js#L125</a></p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>if (!parsedURL.protocol || !parsedURL.hostname) {&#xA;    throw new TypeError('Only absolute URLs are supported');&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Depending on how your graphql backend processes queries, it might be a good idea to log out the URLs for each of your service endpoint and ensure the URL contains a host AND protocol or the fetch will fail.</p>&#xA;&#xA;<p>For myself, the error occurred for me when my host variable was coming back from the ENV for my service endpoints as <code>undefined</code>.   </p>&#xA;",1426788,,1426788,2017-10-20 16:55:43,2017-10-20 16:55:43,"",,0,0,0,2017-09-21 16:21:51
46349512,1,,,3,2600,"<p>OS: Windows 10 Pro<br>&#xA;Browser: Opera 47.0.2631.71 (PGO)<br>&#xA;apollo-client: 1.9.2<br>&#xA;subscriptions-transport-ws: 0.6.0<br>&#xA;vue: 2.4.2<br>&#xA;vue-apollo: 2.1.0-rc.5  </p>&#xA;&#xA;<p>So, I'm experiencing the above mentioned error when attempting to run a query with a graphcool endpoint. The issue only occurs when attempting to up-vote a newly created link item. What is the issue here?</p>&#xA;&#xA;<p>The full error is:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>""allLinks({\""first\"":5,\""skip\"":0,\""orderBy\"":\""createdAt_DESC\""})"": [&#xD;&#xA;    {&#xD;&#xA;      ""type"": ""id"",&#xD;&#xA;      ""id"": ""Link:cj7ui2wn78joh0118s471fvgs"",&#xD;&#xA;      ""generated"": false&#xD;&#xA;    },&#xD;&#xA;    {&#xD;&#xA;      ""type"": ""id"",&#xD;&#xA;      ""id"": ""Link:cj7ue9p2pyk9e0118w9dc3eav"",&#xD;&#xA;      ""generated"": false&#xD;&#xA;    },&#xD;&#xA;    {&#xD;&#xA;      ""type"": ""id"",&#xD;&#xA;      ""id"": ""Link:cj7uaj5vwsa5b0126inei4jz0"",&#xD;&#xA;      ""generated"": false&#xD;&#xA;    },&#xD;&#xA;    {&#xD;&#xA;      ""type"": ""id"",&#xD;&#xA;      ""id"": ""Link:cj7toqpwstxmp0168exm6lihp"",&#xD;&#xA;      ""generated"": false&#xD;&#xA;    },&#xD;&#xA;    {&#xD;&#xA;      ""type"": ""id"",&#xD;&#xA;      ""id"": ""Link:cj7too3wgteq20154ax1agats"",&#xD;&#xA;      ""generated"": false&#xD;&#xA;    }&#xD;&#xA;  ],&#xD;&#xA;  ""_allLinksMeta"": {&#xD;&#xA;    ""type"": ""id"",&#xD;&#xA;    ""id"": ""$ROOT_QUERY._allLinksMeta"",&#xD;&#xA;    ""generated"": true&#xD;&#xA;  },&#xD;&#xA;  ""allLinks({\""first\"":5,\""skip\"":5,\""orderBy\"":\""createdAt_DESC\""})"": [&#xD;&#xA;    {&#xD;&#xA;      ""type"": ""id"",&#xD;&#xA;      ""id"": ""Link:cj7toe2egt9j40115r74dzmzi"",&#xD;&#xA;      ""generated"": false&#xD;&#xA;    },&#xD;&#xA;    {&#xD;&#xA;      ""type"": ""id"",&#xD;&#xA;      ""id"": ""Link:cj7to769uslpc0163giiymaeq"",&#xD;&#xA;      ""generated"": false&#xD;&#xA;    },&#xD;&#xA;    {&#xD;&#xA;      ""type"": ""id"",&#xD;&#xA;      ""id"": ""Link:cj7tdamdkb2c401074qhjw2ig"",&#xD;&#xA;      ""generated"": false&#xD;&#xA;    },&#xD;&#xA;    {&#xD;&#xA;      ""type"": ""id"",&#xD;&#xA;      ""id"": ""Link:cj7qlm4qb8vd501967t9jkvix"",&#xD;&#xA;      ""generated"": false&#xD;&#xA;    },&#xD;&#xA;    {&#xD;&#xA;      ""type"": ""id"",&#xD;&#xA;      ""id"": ""Link:cj7qawaic5wgz0133mzzqvmat"",&#xD;&#xA;      ""generated"": false&#xD;&#xA;    }&#xD;&#xA;  ]&#xD;&#xA;}.&#xD;&#xA;    at readStoreResolver (readFromStore.js?f639:42)&#xD;&#xA;    at executeField (graphql.js?206d:74)&#xD;&#xA;    at eval (graphql.js?206d:31)&#xD;&#xA;    at Array.forEach (&lt;anonymous&gt;)&#xD;&#xA;    at executeSelectionSet (graphql.js?206d:26)&#xD;&#xA;    at graphql (graphql.js?206d:20)&#xD;&#xA;    at diffQueryAgainstStore (readFromStore.js?f639:75)&#xD;&#xA;    at readQueryFromStore (readFromStore.js?f639:18)&#xD;&#xA;    at TransactionDataProxy.readQuery (proxy.js?d9b2:114)&#xD;&#xA;    at VueComponent.updateStoreAfterVote (LinkItem.vue?42d3:51)&#xD;&#xA;tryFunctionOrLogError @ errorHandling.js?e4be:7&#xD;&#xA;data @ store.js?2706:115&#xD;&#xA;apolloReducer @ store.js?8997:42&#xD;&#xA;combination @ combineReducers.js?a3f5:120&#xD;&#xA;computeNextEntry @ VM314:2&#xD;&#xA;recomputeStates @ VM314:2&#xD;&#xA;(anonymous) @ VM314:2&#xD;&#xA;dispatch @ createStore.js?8c3f:165&#xD;&#xA;dispatch @ VM314:2&#xD;&#xA;(anonymous) @ ApolloClient.js?f973:237&#xD;&#xA;(anonymous) @ store.js?8997:16&#xD;&#xA;(anonymous) @ QueryManager.js?2cbe:142&#xD;&#xA;Promise resolved (async)&#xD;&#xA;(anonymous) @ QueryManager.js?2cbe:127&#xD;&#xA;QueryManager.mutate @ QueryManager.js?2cbe:124&#xD;&#xA;ApolloClient.mutate @ ApolloClient.js?f973:197&#xD;&#xA;mutate @ vue-apollo.esm.js?1632:3069&#xD;&#xA;voteForLink @ LinkItem.vue?42d3:38&#xD;&#xA;boundFn @ vue.runtime.esm.js?a427:180&#xD;&#xA;click @ LinkItem.vue?219f:18&#xD;&#xA;invoker @ vue.runtime.esm.js?a427:1817</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>Query:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>export const ALL_LINKS_QUERY = gql`&#xD;&#xA;query AllLinksQuery($first: Int, $skip: Int, $orderBy: LinkOrderBy) {&#xD;&#xA;  allLinks(first: $first, skip: $skip, orderBy: $orderBy) {&#xD;&#xA;    id&#xD;&#xA;    createdAt&#xD;&#xA;    url&#xD;&#xA;    description&#xD;&#xA;    postedBy {&#xD;&#xA;      id&#xD;&#xA;      name&#xD;&#xA;    }&#xD;&#xA;    votes {&#xD;&#xA;      id&#xD;&#xA;      user {&#xD;&#xA;        id&#xD;&#xA;      }&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;  _allLinksMeta {&#xD;&#xA;    count&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;`</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>Code:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>      voteForLink () {&#xD;&#xA;        const userId = localStorage.getItem(GC_USER_ID)&#xD;&#xA;        const voterIds = this.link.votes.map(vote =&gt; vote.user.id)&#xD;&#xA;        if (voterIds.includes(userId)) {&#xD;&#xA;          alert(`User (${userId}) already voted for this link.`)&#xD;&#xA;          return&#xD;&#xA;        }&#xD;&#xA;        const linkId = this.link.id&#xD;&#xA;        this.$apollo.mutate({&#xD;&#xA;          mutation: CREATE_VOTE_MUTATION,&#xD;&#xA;          variables: {&#xD;&#xA;            userId,&#xD;&#xA;            linkId&#xD;&#xA;          },&#xD;&#xA;          update: (store, { data: { createVote } }) =&gt; {&#xD;&#xA;            this.updateStoreAfterVote(store, createVote, linkId)&#xD;&#xA;          }&#xD;&#xA;        })&#xD;&#xA;      },&#xD;&#xA;      updateStoreAfterVote (store, createVote, linkId) {&#xD;&#xA;        // 1&#xD;&#xA;        const data = store.readQuery({&#xD;&#xA;          query: ALL_LINKS_QUERY&#xD;&#xA;        })&#xD;&#xA;&#xD;&#xA;        // 2&#xD;&#xA;        const votedLink = data.allLinks.find(link =&gt; link.id === linkId)&#xD;&#xA;        votedLink.votes = createVote.link.votes&#xD;&#xA;&#xD;&#xA;        // 3&#xD;&#xA;        store.writeQuery({ query: ALL_LINKS_QUERY, data })&#xD;&#xA;      }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",5613904,,,,2017-09-21 18:00:11,Apollo-client - Error: Can't find field allLinks({}) on object (ROOT_QUERY),<vue.js><apollo><apollo-client><graphcool><vue-apollo>,1,0,0,2017-09-21 17:06:03
46438035,2,,46249101,0,,"<p>Solved it! It turns out my server setup was fine.</p>&#xA;&#xA;<p>Server-side I was building the WSS url like so:</p>&#xA;&#xA;<pre><code>var websocketUri = Meteor.absoluteUrl('subscriptions').replace(/http/, 'ws').replace('3100', '3200');&#xA;</code></pre>&#xA;&#xA;<p>The Meteor docs for <a href=""http://docs.meteor.com/api/core.html#Meteor-absoluteUrl"" rel=""nofollow noreferrer"">absoluteUrl</a> say:</p>&#xA;&#xA;<blockquote>&#xA;  <p>The server reads from the ROOT_URL environment variable to determine where it is running.</p>&#xA;</blockquote>&#xA;&#xA;<p>In Webstorm I have ROOT_URL set to <code>https://10.0.nn.nn:3100</code>. But for some reason absoluteUrl was returning <code>http://10.0.nn.nn:3000</code>.  I.e. it had the wrong port.</p>&#xA;&#xA;<p>After correcting the port-- it’s working!</p>&#xA;&#xA;<p><strong>UPDATE:</strong> I thought I had it solved when I posted a few days ago, but I was still missing something. </p>&#xA;&#xA;<p>I'm now using <a href=""https://ngrok.com/"" rel=""nofollow noreferrer"">ngrok</a> to provide SSL to my dev system for use with HTTPS and WSS.</p>&#xA;&#xA;<p>Here are a few details.</p>&#xA;&#xA;<ul>&#xA;<li>I run Meteor on localhost:3000.</li>&#xA;<li>I assign the value of ""<a href=""http://localhost:3000"" rel=""nofollow noreferrer"">http://localhost:3000</a>"" to the ROOT_URL environment variable.</li>&#xA;<li>I run two simultaneous ngrok connections, one for HTTPS and one for WSS:</li>&#xA;</ul>&#xA;&#xA;<p><code>&#xA;./ngrok http 3000 &#xA;./ngrok http 3200&#xA;</code> </p>&#xA;&#xA;<ul>&#xA;<li>This gives me two ngrok urls, for example:</li>&#xA;</ul>&#xA;&#xA;<blockquote>&#xA;  <p>Forwarding  <a href=""https://9b785bd3.ngrok.io"" rel=""nofollow noreferrer"">https://9b785bd3.ngrok.io</a> -> localhost:3000<br>&#xA;  Forwarding  <a href=""https://ec3d8027.ngrok.io"" rel=""nofollow noreferrer"">https://ec3d8027.ngrok.io</a> -> localhost:3200   </p>&#xA;</blockquote>&#xA;&#xA;<p>I access my app via the ngrok url, for example:</p>&#xA;&#xA;<blockquote>&#xA;  <p><a href=""https://9b785bd3.ngrok.io"" rel=""nofollow noreferrer"">https://9b785bd3.ngrok.io</a></p>&#xA;</blockquote>&#xA;&#xA;<p>I build my HTTPS links and WSS links based on the ngrok addresses. For example:</p>&#xA;&#xA;<p><code>const wssEndpoint = 'wss://ec3d8027.ngrok.io/subscriptions';</code></p>&#xA;&#xA;<p>I hope this is helpful to others looking into this.</p>&#xA;",364966,,364966,2017-10-01 06:36:31,2017-10-01 06:36:31,"",,0,0,0,2017-09-27 01:17:40
46441954,2,,46419338,0,,"<p><code>aor-simple-graphql-client</code> has been deprecated. Note that <code>aor-graphql-client</code> is meant to be used for admin-on-rest requests. If you need to send your own queries, you should use a custom ApolloClient and follow their documentation</p>&#xA;",6908463,,,,2017-09-27 07:32:10,"",,0,0,0,2017-09-27 07:32:10
46480743,2,,46480742,1,,"<p>So the function <code>addGraphQLSubscriptions</code> is deprecated, although they haven't fixed it as of now, you can use </p>&#xA;&#xA;<p><code>npm i --save add-graphql-subscriptions</code></p>&#xA;&#xA;<p>and import it into your index.js app</p>&#xA;&#xA;<p><code>import { addGraphQLSubscriptions } from 'add-graphql-subscriptions';</code></p>&#xA;&#xA;<p>Also, I had to use <code>subscriptions-transport-ws</code> version 0.7 as well to get it working. </p>&#xA;",8430249,,8430249,2017-09-29 02:58:04,2017-09-29 02:58:04,"",,0,0,0,2017-09-29 02:09:45
46543255,2,,37397886,92,,"<p>This is the query that <a href=""https://github.com/graphql/graphiql"" rel=""noreferrer"">GraphiQL</a> uses (network capture):</p>&#xA;&#xA;<pre class=""lang-html prettyprint-override""><code>query IntrospectionQuery {&#xA;  __schema {&#xA;    queryType {&#xA;      name&#xA;    }&#xA;    mutationType {&#xA;      name&#xA;    }&#xA;    subscriptionType {&#xA;      name&#xA;    }&#xA;    types {&#xA;      ...FullType&#xA;    }&#xA;    directives {&#xA;      name&#xA;      description&#xA;      locations&#xA;      args {&#xA;        ...InputValue&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;fragment FullType on __Type {&#xA;  kind&#xA;  name&#xA;  description&#xA;  fields(includeDeprecated: true) {&#xA;    name&#xA;    description&#xA;    args {&#xA;      ...InputValue&#xA;    }&#xA;    type {&#xA;      ...TypeRef&#xA;    }&#xA;    isDeprecated&#xA;    deprecationReason&#xA;  }&#xA;  inputFields {&#xA;    ...InputValue&#xA;  }&#xA;  interfaces {&#xA;    ...TypeRef&#xA;  }&#xA;  enumValues(includeDeprecated: true) {&#xA;    name&#xA;    description&#xA;    isDeprecated&#xA;    deprecationReason&#xA;  }&#xA;  possibleTypes {&#xA;    ...TypeRef&#xA;  }&#xA;}&#xA;&#xA;fragment InputValue on __InputValue {&#xA;  name&#xA;  description&#xA;  type {&#xA;    ...TypeRef&#xA;  }&#xA;  defaultValue&#xA;}&#xA;&#xA;fragment TypeRef on __Type {&#xA;  kind&#xA;  name&#xA;  ofType {&#xA;    kind&#xA;    name&#xA;    ofType {&#xA;      kind&#xA;      name&#xA;      ofType {&#xA;        kind&#xA;        name&#xA;        ofType {&#xA;          kind&#xA;          name&#xA;          ofType {&#xA;            kind&#xA;            name&#xA;            ofType {&#xA;              kind&#xA;              name&#xA;              ofType {&#xA;                kind&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;&#xA;",8579313,,,,2017-10-03 11:13:46,"",,0,1,0,2017-10-03 11:13:46
46622493,2,,46620547,0,,<p>The subscriptions-transport-ws has some breaking changes in 0.9.x version. You can install 0.8.3 or try to make the newer version work.</p>&#xA;,8737031,,,,2017-10-07 16:27:17,"",,0,0,0,2017-10-07 16:27:17
46635701,1,46636192,,0,382,"<p>I try connect React with Laravel's Folklore\GraphQL.</p>&#xA;&#xA;<p>In ReactJS I have this code ind <code>index.js</code>:</p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import ReactDOM from 'react-dom';&#xA;import registerServiceWorker from './registerServiceWorker';&#xA;&#xA;import { ApolloClient, ApolloProvider, createNetworkInterface } from 'react-apollo';&#xA;import Devices from './components/Devices.js'&#xA;&#xA;const networkInterface = createNetworkInterface({&#xA;    uri: 'http://127.0.0.1:8000/graphiql',&#xA;    opts: {&#xA;        credentials: 'same-origin',&#xA;        mode: 'no-cors',&#xA;    },&#xA;});&#xA;const client = new ApolloClient({ networkInterface });&#xA;&#xA;ReactDOM.render(&#xA;  &lt;ApolloProvider client={client}&gt;&#xA;    &lt;Devices /&gt;&#xA;  &lt;/ApolloProvider&gt;,&#xA;  document.getElementById('root')&#xA;)&#xA;</code></pre>&#xA;&#xA;<p>And in <code>Devices.js</code></p>&#xA;&#xA;<pre><code>import React, { Component } from 'react';&#xA;import { graphql } from 'react-apollo';&#xA;import gql from 'graphql-tag';&#xA;&#xA;class Devices extends Component {&#xA;    render() {&#xA;        console.log(this.props);&#xA;        return(&#xA;            &lt;div&gt;Hello&lt;/div&gt;&#xA;        );&#xA;    }&#xA;}&#xA;&#xA;const query = gql`&#xA;{&#xA;    devices {&#xA;        id_device,&#xA;        name,&#xA;        type,&#xA;    }&#xA;}&#xA;`;&#xA;export default graphql(query)(Devices);&#xA;</code></pre>&#xA;&#xA;<p>But show the error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>POST <a href=""http://127.0.0.1:8000/graphiql"" rel=""nofollow noreferrer"">http://127.0.0.1:8000/graphiql</a> 405 (Method Not Allowed)</p>&#xA;</blockquote>&#xA;&#xA;<p>and if I add to <code>method:'GET'</code> in <code>opts</code> show the following error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Unhandled (in react-apollo) Error: Network error: Failed to execute&#xA;  'fetch' on 'Window': Request with GET/HEAD method cannot have body.</p>&#xA;</blockquote>&#xA;&#xA;<p>How can I added the method POST to Folklore\GraphQL? &#xA;How can I set the method to GET to ApolloClient?</p>&#xA;",6637520,,,,2017-10-08 21:20:27,Enable POST method to Laravel Folklore\GraphQL or enable GET method in react-apollo,<reactjs><laravel-5><graphql><react-apollo>,1,0,0,2017-10-08 20:25:46
46656426,1,46656847,,5,7743,"<p>Running into a frustrating issue with Apollo getting content from a Rails backend. The issue seems to be resolving around the use of CORS in my Apollo project.</p>&#xA;&#xA;<p><strong>Tech</strong></p>&#xA;&#xA;<ul>&#xA;<li>apollo-client: 1.9.3</li>&#xA;<li>graphql: 0.11.7</li>&#xA;<li>react: 15.6.1</li>&#xA;<li>react-apollo: 1.4.16</li>&#xA;</ul>&#xA;&#xA;<p><strong>cors.rb</strong></p>&#xA;&#xA;<pre><code>Rails.application.config.middleware.insert_before 0, Rack::Cors do&#xA;  allow do&#xA;    origins `*`&#xA;&#xA;    resource '*',&#xA;      headers: :any,&#xA;      methods: [:get, :post, :put, :patch, :delete, :options, :head]&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p><em>rails is running on port 3001</em> <code>rails s -p 3001</code></p>&#xA;&#xA;<p>With this backend you can make <code>curl</code> requests and everything works as expected</p>&#xA;&#xA;<p><strong>Working Curl</strong></p>&#xA;&#xA;<pre><code>curl -X POST -H ""Content-Type: application/json"" -d '{""query"": ""{users{first_name}}""}' http://localhost:3001/graphql&#xA;</code></pre>&#xA;&#xA;<p>This returns back expected data</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>So this is all pointing to an issue with Apollo and the frontend of the application. </p>&#xA;&#xA;<p><strong>index.jsx</strong></p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import ReactDOM from 'react-dom';&#xA;import ApolloClient from 'apollo-client';&#xA;import { ApolloProvider, createNetworkInterface } from 'react-apollo';&#xA;&#xA;import App from './containers/App.jsx';&#xA;&#xA;const client = new ApolloClient({&#xA;  networkInterface: createNetworkInterface({&#xA;    uri: 'http://localhost:3001/graphql', &lt;&lt;&lt;&lt;&lt; There is a different endpoint then the standard 'graphql' which is why this is declared&#xA;  })&#xA;});&#xA;&#xA;ReactDOM.render(&#xA;  &lt;ApolloProvider client={client}&gt;&#xA;    &lt;App /&gt;&#xA;  &lt;/ApolloProvider&gt;,&#xA;  document.getElementById('root')&#xA;);&#xA;</code></pre>&#xA;&#xA;<p><strong>App.jsx</strong></p>&#xA;&#xA;<pre><code>import React, { Component } from 'react';&#xA;import gql from 'graphql-tag';&#xA;import { graphql } from 'react-apollo';&#xA;&#xA;class App extends Component {&#xA;  render() {&#xA;    console.log(this.props);&#xA;    return (&#xA;      &lt;div&gt;Application&lt;/div&gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;const query = gql`&#xA;  {&#xA;    users {&#xA;      first_name&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;export default graphql(query)(App);&#xA;</code></pre>&#xA;&#xA;<p>This returns the error </p>&#xA;&#xA;<blockquote>&#xA;  <p>Failed to load <a href=""http://localhost:3001/graphql"" rel=""noreferrer"">http://localhost:3001/graphql</a>: Response to preflight&#xA;  request doesn't pass access control check: No&#xA;  'Access-Control-Allow-Origin' header is present on the requested&#xA;  resource. Origin '<a href=""http://localhost:8080"" rel=""noreferrer"">http://localhost:8080</a>' is therefore not allowed&#xA;  access. If an opaque response serves your needs, set the request's&#xA;  mode to 'no-cors' to fetch the resource with CORS disabled.</p>&#xA;</blockquote>&#xA;&#xA;<p><strong>app.jsx (change mode)</strong></p>&#xA;&#xA;<pre><code>const client = new ApolloClient({&#xA;  networkInterface: createNetworkInterface({&#xA;    uri: 'http://localhost:3001/graphql',&#xA;    opts: {&#xA;      mode: 'no-cors'&#xA;    }&#xA;  })&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>This returns the error</p>&#xA;&#xA;<blockquote>&#xA;  <p>Unhandled (in react-apollo) Error: Network error: Network request&#xA;  failed with status 0 - """"`</p>&#xA;</blockquote>&#xA;&#xA;<p>Looking at the request:</p>&#xA;&#xA;<p>GENERAL</p>&#xA;&#xA;<pre class=""lang-none prettyprint-override""><code>Request URL:http://localhost:3001/graphql&#xA;Request Method:POST&#xA;Status Code:200 OK&#xA;Remote Address:[::1]:3001&#xA;Referrer Policy:no-referrer-when-downgrade&#xA;</code></pre>&#xA;&#xA;<p>RESPONSE HEADERS</p>&#xA;&#xA;<p>Cache-Control:max-age=0, private, must-revalidate&#xA;Content-Type:application/json; charset=utf-8&#xA;Transfer-Encoding:chunked&#xA;Vary:Origin</p>&#xA;&#xA;<p>REQUEST HEADERS</p>&#xA;&#xA;<pre class=""lang-none prettyprint-override""><code>Accept:*/*&#xA;Connection:keep-alive&#xA;Content-Length:87&#xA;Content-Type:text/plain;charset=UTF-8 &lt;&lt;&lt; I'm wondering if this needs to be application/json?&#xA;Host:localhost:3001&#xA;Origin:http://localhost:8080&#xA;Referer:http://localhost:8080/&#xA;User-Agent:Chrome/61&#xA;</code></pre>&#xA;&#xA;<p>REQUEST PAYLOAD</p>&#xA;&#xA;<pre class=""lang-none prettyprint-override""><code>{query: ""{↵ users {↵ first_name↵ __typename↵ }↵}↵"", operationName: null}&#xA;operationName&#xA;:&#xA;null&#xA;query&#xA;:&#xA;""{↵  users {↵    first_name↵    __typename↵  }↵}↵""&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>So what I did to get some sort of response was to install the Chrome Extension <a href=""https://chrome.google.com/webstore/detail/allow-control-allow-origi/nlfbmbojpeacfghkpbjhddihlkkiljbi?hl=en"" rel=""noreferrer"">Allow-Control-Allow-Origin: *</a></p>&#xA;&#xA;<p>If <code>mode: 'no-cors'</code> is removed and this extension is active, data can be retrieved.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>In looking through the Apollo docs I'm unable to find much on this topic. I tried implementing the <a href=""http://dev.apollodata.com/react/auth.html#Header"" rel=""noreferrer"">Apollo Auth Header</a> but this simply produced the same errors as above. </p>&#xA;&#xA;<p>What in my Apollo code could be causing these errors? And what steps are there to fix the problem?</p>&#xA;&#xA;<p>Searching over GitHub issues and other Google searches are either for much-older versions of Apollo in which issues ""have been addressed"" or do not work when implemented.</p>&#xA;&#xA;<p><strong>Edit</strong></p>&#xA;&#xA;<p>Adding Ruby on Rails tag just in case there is more configuration needed in Rails. Upon researching the Apollo Client issues found <a href=""https://github.com/apollographql/apollo-client/issues/2004"" rel=""noreferrer"">Network error: Network request failed with status 0 - """"</a> This issued was resolved by the OP because of an issue on the backend. </p>&#xA;",3060325,,3060325,2017-10-09 23:49:52,2018-01-25 23:39:58,Apollo and GraphQL CORS,<ruby-on-rails><reactjs><cors><graphql><react-apollo>,1,0,0,2017-10-09 23:23:47
46695701,2,,37049219,1,,<p>If you're working in node environment you need to add fetch to <code>global</code>object:</p>&#xA;&#xA;<pre><code>import fetch from 'node-fetch';&#xA;&#xA;global.fetch = fetch;&#xA;</code></pre>&#xA;,5484330,,,,2017-10-11 19:01:23,"",,0,0,0,2017-10-11 19:01:23
46719459,2,,46719337,20,,<p>Docker toolbox doesn't map ports to localhost. It maps it to the Docker VM IP's</p>&#xA;&#xA;<p>Run below command to get the IP</p>&#xA;&#xA;<pre><code>docker-machine ip&#xA;</code></pre>&#xA;&#xA;<p>Then use the <code>http://&lt;IP&gt;:8080</code> in your browser</p>&#xA;,2830850,,,,2017-10-12 21:54:09,"",,0,4,0,2017-10-12 21:54:09
46720834,2,,46719337,6,,"<p>If you avoid specifying the IP 0.0.0.0</p>&#xA;&#xA;<pre><code>app.listen(process.env.SERVER_PORT, function () {&#xA;   console.log('Listening on port '+ process.env.SERVER_PORT);&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>and</p>&#xA;&#xA;<pre><code>docker run -it -p 8080:8080  nodeapi&#xA;</code></pre>&#xA;&#xA;<p>it will let you load the site as</p>&#xA;&#xA;<pre><code>http://localhost:8080&#xA;</code></pre>&#xA;",3562464,,,,2017-10-13 00:34:36,"",,0,0,0,2017-10-13 00:34:36
46756129,1,,,2,1149,"<p>This is my first attempt at using Relay Modern.&#xA;Fetching for a specific User from a <code>PostgraphQL GraphQL Server</code>.&#xA;It is fetching the data successfully but not passing to render function:</p>&#xA;&#xA;<pre><code>import {createFragmentContainer, QueryRenderer, graphql} from 'react-relay'&#xA;import environment from 'environment'&#xA;&#xA;@CSSModules(styles) export default class Profile extends Component {   &#xA;  render() {&#xA;    var {props: {children}} = this&#xA;    return (&#xA;      &lt;QueryRenderer&#xA;        environment={environment}&#xA;        query={graphql`&#xA;          query ProfileQuery {&#xA;            userById(id: ""f0301eaf-55ad-46db-ac90-b52d6138489e"") {&#xA;              firstName&#xA;              userName&#xA;            }&#xA;          }&#xA;        `}&#xA;        render={({error, relayProps}) =&gt; {&#xA;          if (error) {&#xA;            return &lt;div&gt;{error.message}&lt;/div&gt;&#xA;          } else if (relayProps) {&#xA;            ...&#xA;          }&#xA;          return &lt;div&gt;Loading...&lt;/div&gt;&#xA;        }}&#xA;      /&gt;&#xA;    )   &#xA;  }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>Only ""Loading..."" is rendered.  </p>&#xA;&#xA;<p>I am guessing because it successfully fetches data that the graphql server and environment are ok.  </p>&#xA;&#xA;<p>I am not using React 16 and the project also uses Redux.</p>&#xA;&#xA;<p><strong>Any suggestions please as to why relayProps wouldn't have a value (e.g. relayProps.user)?</strong></p>&#xA;&#xA;<p>One further thing that may help, the environment (file) is in the main application and the <code>QueryRenderer</code> and components are in an imported npm package (to be shared across a number of applications).  As mentioned, the query seems to work fine so I did not think this was a problem. I also run the relay compiler on the package but not the main application since there are no relay components there.</p>&#xA;&#xA;<p>Just in case it's needed the environment is setup using:</p>&#xA;&#xA;<pre><code>const {&#xA;  Environment,&#xA;  Network,&#xA;  RecordSource,&#xA;  Store,&#xA;} = require('relay-runtime')&#xA;&#xA;// Instantiate Store for Cached Data&#xA;const store = new Store(new RecordSource())&#xA;&#xA;// Create Network for GraphQL Server&#xA;const network = Network.create((operation, variables) =&gt; {&#xA;  // GraphQL Endpoint&#xA;  return fetch(config.gqlapiProtocol + ""://"" + config.gqlapiHost + config.gqlapiUri + ""/a3/graphql"" , {&#xA;    method: 'POST',&#xA;    headers: {&#xA;      'Content-Type': ""application/json"",&#xA;      'Accept': 'application/json',&#xA;    },&#xA;    body: JSON.stringify({&#xA;      query: operation.text,&#xA;      variables,&#xA;    }),&#xA;  }).then(response =&gt; {&#xA;    return response.json()&#xA;  })&#xA;})&#xA;&#xA;// Instantiate Environment&#xA;const environment = new Environment({&#xA;  network,&#xA;  store,&#xA;})&#xA;&#xA;// Export environment&#xA;export default environment&#xA;</code></pre>&#xA;",1935088,,4089357,2017-10-24 14:55:51,2017-10-25 05:10:18,Why are Relay Modern QueryRenderer render props undefined?,<javascript><graphql><relaymodern>,1,2,0,2017-10-15 14:28:34
46760395,2,,46759547,6,,"<blockquote>&#xA;  <p>EDIT: I believe this is now possible with the new graphql-tools 3.0!</p>&#xA;  &#xA;  <p><a href=""https://dev-blog.apollodata.com/the-next-generation-of-schema-stitching-2716b3b259c0"" rel=""nofollow noreferrer"">https://dev-blog.apollodata.com/the-next-generation-of-schema-stitching-2716b3b259c0</a></p>&#xA;</blockquote>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>Original answer:</strong></p>&#xA;&#xA;<p>Here is a solution (hack?) I came up with, but probably there are better ways to do it:</p>&#xA;&#xA;<ol>&#xA;<li>Get the remote schema by using <code>introspectSchema</code> and <code>makeRemoteExecutableSchema</code></li>&#xA;<li>Get the schema type defs by using <code>printSchema</code></li>&#xA;<li>Rename the root typedefs <code>Query</code> and <code>Mutation</code> received by printSchema to something else, e.g. <code>GitHubQuery</code> and <code>GitHubMutation</code></li>&#xA;<li>Create the root Query typedef with a <code>github</code> field with the type <code>GitHubQuery</code></li>&#xA;<li>Create a <code>github</code> resolver that uses the <code>execute</code> method to run the <code>GitHubQuery</code> in the remote github schema</li>&#xA;</ol>&#xA;&#xA;<p><strong>Source code: <a href=""https://launchpad.graphql.com/3xlrn31pv"" rel=""nofollow noreferrer"">https://launchpad.graphql.com/3xlrn31pv</a></strong></p>&#xA;&#xA;<pre><code>import 'apollo-link'&#xA;import fetch from 'node-fetch'&#xA;import {&#xA;  introspectSchema,&#xA;  makeExecutableSchema,&#xA;  makeRemoteExecutableSchema,&#xA;} from 'graphql-tools'&#xA;import { HttpLink } from 'apollo-link-http'&#xA;import { execute, printSchema } from 'graphql'&#xA;&#xA;const link = new HttpLink({ uri: 'http://api.githunt.com/graphql', fetch })&#xA;&#xA;async function getGithubRemoteSchema() {&#xA;  return makeRemoteExecutableSchema({&#xA;    schema: await introspectSchema(link),&#xA;    link,&#xA;  })&#xA;}&#xA;&#xA;async function makeSchema() {&#xA;  const githubSchema = await getGithubRemoteSchema()&#xA;  const githubTypeDefs = printSchema(githubSchema)&#xA;&#xA;  const typeDefs = `&#xA;        ${githubTypeDefs // ugly hack #1&#xA;      .replace('type Query', 'type GitHubQuery')&#xA;      .replace('type Mutation', 'type GitHubMutation')}&#xA;&#xA;    type Query {&#xA;      github: GitHubQuery&#xA;    }&#xA;&#xA;    type Mutation {&#xA;      github: GitHubMutation&#xA;    }&#xA;    `&#xA;&#xA;  return makeExecutableSchema({&#xA;    typeDefs,&#xA;    resolvers: {&#xA;      Query: {&#xA;        async github(parent, args, context, info) {&#xA;          // TODO: FIX THIS&#xA;&#xA;          // ugly hack #2&#xA;          // remove github root field from query&#xA;          const operation = {&#xA;            ...info.operation,&#xA;            selectionSet:&#xA;              info.operation.selectionSet.selections[0].selectionSet,&#xA;          }&#xA;          const doc = { kind: 'Document', definitions: [operation] }&#xA;&#xA;          const result = await execute(&#xA;            githubSchema,&#xA;            doc,&#xA;            info.rootValue,&#xA;            context,&#xA;            info.variableValues,&#xA;            info.operation.name&#xA;          )&#xA;&#xA;          return (result || {}).data&#xA;        },&#xA;      },&#xA;    },&#xA;  })&#xA;}&#xA;&#xA;export const schema = makeSchema()&#xA;</code></pre>&#xA;",2228575,,2228575,2018-05-12 18:18:21,2018-05-12 18:18:21,"",,0,2,0,2017-10-15 21:55:36
46819137,2,,46811965,1,,"<p>The documentation is referencing the 2.0 version of graphene, which got rid of some of those arguments. The major version of the django package was bumped as well. Upgrade both with:</p>&#xA;&#xA;<pre><code>pip install ""graphene&gt;=2.0.dev""&#xA;pip install ""graphene-django&gt;=2.0.dev""&#xA;</code></pre>&#xA;",1286813,,,,2017-10-18 20:59:34,"",,0,0,0,2017-10-18 20:59:34
46965564,1,,,7,6408,"<p>I did this sample: <a href=""https://github.com/Akryum/vueconf-2017-demo"" rel=""noreferrer"">https://github.com/Akryum/vueconf-2017-demo</a></p>&#xA;&#xA;<p>As a result, I have the same file in my project: <a href=""https://github.com/Akryum/vueconf-2017-demo/blob/master/src/apollo-client.js"" rel=""noreferrer"">https://github.com/Akryum/vueconf-2017-demo/blob/master/src/apollo-client.js</a></p>&#xA;&#xA;<p>This is the code used in my application:</p>&#xA;&#xA;<pre><code>import { ApolloClient, createNetworkInterface } from 'apollo-client'&#xA;&#xA;const apolloClient = new ApolloClient({&#xA;  networkInterface: createNetworkInterface({&#xA;    uri: 'http://localhost:3000/graphql',&#xA;    transportBatching: true,&#xA;  }),&#xA;  connectToDevTools: true,&#xA;})&#xA;&#xA;export default apolloClient&#xA;</code></pre>&#xA;&#xA;<p>As a result, I get this error (warning) to the console:</p>&#xA;&#xA;<pre><code>warning  in ./src/apollo/client.js&#xA;&#xA;15:23-45 ""export 'createNetworkInterface' was not found in 'apollo-client'&#xA;</code></pre>&#xA;&#xA;<p>And this is from the browser console:</p>&#xA;&#xA;<pre><code>TypeError: Object(__WEBPACK_IMPORTED_MODULE_0_apollo_client__[""createNetworkInterface""]) is not a function. (In 'Object(__WEBPACK_IMPORTED_MODULE_0_apollo_client__[""createNetworkInterface""])({&#xA;    uri: 'http://localhost:3000/graphql',&#xA;    transportBatching: true&#xA;  })', 'Object(__WEBPACK_IMPORTED_MODULE_0_apollo_client__[""createNetworkInterface""])' is an instance of Object)&#xA;</code></pre>&#xA;&#xA;<p>What is the problem?</p>&#xA;",5640806,,5640806,2017-10-27 00:21:32,2019-06-27 15:02:52,"""export 'createNetworkInterface' was not found in 'apollo-client'",<javascript><graphql><graphql-js><apollo><vue-apollo>,2,2,0,2017-10-27 00:03:00
46974103,2,,46965564,9,,"<p>It looks like that repo hasn't been updated to use <code>apollo-client</code>'s latest version. The Apollo client underwent major changes in version 2.0. You can see a summary of those changes and an upgrade guide <a href=""https://github.com/apollographql/apollo-client/blob/master/docs/source/recipes/2.0-migration.md"" rel=""nofollow noreferrer"">here</a>. One of the breaking changes implemented was a switch from <code>NetworkInterface</code> to <code>ApolloLink</code>, which is why you are seeing an error that <code>createNetworkInterface</code> cannot be found.</p>&#xA;&#xA;<p>Either downgrade to version 1.9.3</p>&#xA;&#xA;<pre><code>npm install apollo-client@1.9.3&#xA;</code></pre>&#xA;&#xA;<p>or follow the upgrade guide in the link above to see how to use version 2.0 in your project.</p>&#xA;",6024220,,6024220,2019-06-27 15:02:52,2019-06-27 15:02:52,"",,0,2,0,2017-10-27 11:35:16
47027283,1,49583395,,0,2269,"<p>After adding some interface types to our graphql queries our react-apollo app was getting the fragmentMatcher error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>You are using the simple (heuristic) fragment matcher, but your&#xA;  queries contain union or interface types.&#xA;       Apollo Client will not be able to able to accurately map fragments.To make this error go away, use the&#xA;  IntrospectionFragmentMatcher as described in the docs:&#xA;  <a href=""http://dev.apollodata.com/react/initialization.html#fragment-matcher"" rel=""nofollow noreferrer"">http://dev.apollodata.com/react/initialization.html#fragment-matcher</a></p>&#xA;</blockquote>&#xA;&#xA;<p>I have followed the guide and the error does not go away, it still says I am using the heuristic fragment matcher even though I am not? Any thoughts?</p>&#xA;&#xA;<p>Using <code>react-apollo@1.2.0</code> &amp; <code>apollo-cache-inmemory@1.0.0</code> and here is my apollo config:</p>&#xA;&#xA;<pre><code>...&#xA;&#xA;import {&#xA;  ApolloClient,&#xA;  createNetworkInterface,&#xA;  IntrospectionFragmentMatcher,&#xA;} from 'react-apollo'&#xA;import {InMemoryCache} from 'apollo-cache-inmemory'&#xA;import SchemaData from '../data/schema.json'&#xA;&#xA;const filteredData = SchemaData.data.__schema.types.filter(&#xA;  type =&gt; type.possibleTypes !== null,&#xA;)&#xA;const fragmentMatcher = new IntrospectionFragmentMatcher({&#xA;  introspectionQueryResultData: {&#xA;    __schema: {&#xA;      types: filteredData,&#xA;    },&#xA;  },&#xA;})&#xA;const cache = new InMemoryCache({fragmentMatcher})&#xA;...&#xA;&#xA;const client = new ApolloClient({&#xA;  cache,&#xA;  networkInterface,&#xA;  dataIdFromObject: result =&gt; {&#xA;    if (result.uuid &amp;&amp; result.__typename) {&#xA;      return result.__typename + result.uuid&#xA;    }&#xA;    return null&#xA;  },&#xA;})&#xA;</code></pre>&#xA;",0,user6144056,,2017-10-31 03:28:03,2018-03-31 01:41:53,Graphql react-apollo IntrospectionFragmentMatcher issues,<javascript><reactjs><graphql><react-apollo><apollo-client>,2,0,0,2017-10-31 03:10:17
47056844,1,61719830,,10,948,"<h1>Background</h1>&#xA;&#xA;<p>We are working on a fairly large <a href=""https://www.apollographql.com/"" rel=""nofollow noreferrer"">Apollo</a> project. A very simplified version of our api looks like this:</p>&#xA;&#xA;<pre class=""lang-apollo prettyprint-override""><code>type Operation {&#xA;    foo: String&#xA;    activity: Activity&#xA;}&#xA;&#xA;type Activity {&#xA;    bar: String&#xA;    # Lots of fields here ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>We've realised splitting <code>Operation</code> and <code>Activity</code> does no benefit and adds complexity. We'd like to merge them. But there's a lot of queries that assume this structure in the code base. In order to make the transition gradual we add <code>@deprecated</code> directives:</p>&#xA;&#xA;<pre class=""lang-apollo prettyprint-override""><code>type Operation {&#xA;    foo: String&#xA;    bar: String&#xA;    activity: Activity @deprecated&#xA;}&#xA;&#xA;type Activity {&#xA;    bar: String @deprecated(reason: ""Use Operation.bar instead"")&#xA;    # Lots of fields here ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<h1>Actual question</h1>&#xA;&#xA;<p>Is there some way to highlight those deprecations going forward? Preferably by printing a warning in the browser console when (in the test environment) running a query that uses a deprecated field?</p>&#xA;",439034,,439034,2020-05-11 08:57:36,2020-05-11 08:57:36,Emit deprecation warnings with Apollo client,<graphql><apollo><apollo-client>,1,3,0,2017-11-01 14:10:20
47060337,2,,47058707,0,,"<p>Ah this was actually rather simple to achieve. In fact, calling <code>fetch</code> on <code>this.props.relay.environment._network</code> only reused the function that's passed into the <code>Network</code> when it's created. So, it's possible to just reuse this function, in my case it's called <code>fetchQuery</code>:</p>&#xA;&#xA;<h3><code>Environment.js</code></h3>&#xA;&#xA;<pre><code>import {GC_AUTH_TOKEN} from './constants'&#xA;import { SubscriptionClient } from 'subscriptions-transport-ws'&#xA;&#xA;const {&#xA;  Environment,&#xA;  Network,&#xA;  RecordSource,&#xA;  Store,&#xA;} = require('relay-runtime')&#xA;&#xA;const store = new Store(new RecordSource())&#xA;&#xA;// Export it here so it can be reused in other files&#xA;export const fetchQuery = (operation, variables) =&gt; {&#xA;  return fetch('https://api.graph.cool/relay/v1/cj9h5g99s24fb0100nsp81d4y', {&#xA;    method: 'POST',&#xA;    headers: {&#xA;      'Accept': 'application/json',&#xA;      'Content-Type': 'application/json',&#xA;      'Authorization': `Bearer ${localStorage.getItem(GC_AUTH_TOKEN)}`&#xA;    },&#xA;    body: JSON.stringify({&#xA;      query: operation.text,&#xA;      variables,&#xA;    }),&#xA;  }).then(response =&gt; {&#xA;    return response.json()&#xA;  })&#xA;}&#xA;&#xA;const network = Network.create(fetchQuery)&#xA;&#xA;const environment = new Environment({&#xA;  network,&#xA;  store,&#xA;})&#xA;&#xA;export default environm&#xA;</code></pre>&#xA;&#xA;<p>ent</p>&#xA;",1779113,,,,2017-11-01 17:19:41,"",,0,0,0,2017-11-01 17:19:41
47111486,2,,47109964,4,,"<p>It sounds like you're using Apollo Client 2.0.You should downgrade to an older version (1.9.3) to continue using network interfaces, including the batching one.</p>&#xA;&#xA;<p>The newest version of the client uses Links instead. You can check out the upgrade guide <a href=""https://github.com/apollographql/apollo-client/blob/master/Upgrade.md"" rel=""nofollow noreferrer"">here</a> if you are interested. you can still batch requests in 2.0 using <a href=""https://www.npmjs.com/package/apollo-link-batch-http"" rel=""nofollow noreferrer"">apollo-link-batch-http</a>.</p>&#xA;",6024220,,,,2017-11-04 13:53:13,"",,0,1,0,2017-11-04 13:53:13
47215257,2,,47198402,5,,"<p>The Apollo client uses (<a href=""https://github.com/apollographql/apollo-client/blob/v1.9.0/src/transport/networkInterface.ts#L186"" rel=""noreferrer"">v1.9</a> and <a href=""https://github.com/apollographql/apollo-link/blob/master/packages/apollo-link-http/src/httpLink.ts#L169"" rel=""noreferrer"">apollo-link-http</a>) the fetch API to send the requests. Therefore there <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API#Aborting_a_fetch"" rel=""noreferrer"">is no cross-browser way to abort a fetch</a>. You could create you own Networkinterface or Link and use something like this:</p>&#xA;&#xA;<pre><code>const oldfetch = fetch;&#xA;fetch = function(input, opts) {&#xA;  return new Promise((resolve, reject) =&gt; {&#xA;      setTimeout(reject, opts.timeout);&#xA;      oldfetch(input, opts).then(resolve, reject);&#xA;  });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But be careful as this doesn't actually abort the request. You can end up with a lot running requests and hit a browser limit.</p>&#xA;&#xA;<p>BTW it looks like apollo-link-http <a href=""https://github.com/apollographql/apollo-link/blob/master/packages/apollo-link-http/src/httpLink.ts#L191"" rel=""noreferrer"">is prepared</a> for the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/AbortController"" rel=""noreferrer"">AbortController</a> ;-)</p>&#xA;",286432,,,,2017-11-10 03:33:02,"",,0,2,0,2017-11-10 03:33:02
47215484,2,,46469715,1,,"<p>You could query for all the fields first and use the result to query all fields:</p>&#xA;&#xA;<pre><code>{ __type(name:""Person"") {&#xA;    fields {&#xA;      name&#xA;      }  &#xA;    }&#xA;}&#xA;</code></pre>&#xA;",286432,,,,2017-11-10 04:02:53,"",,0,3,0,2017-11-10 04:02:53
47233659,1,,,1,150,"<p>For example, say I am rewriting Facebook and I'd like my API to display previous versions of a Post. Take these for example:</p>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>Post 1.0</strong></p>&#xA;&#xA;<p>""I went to the beach today.""</p>&#xA;&#xA;<p><strong>Post 1.1</strong></p>&#xA;&#xA;<p>""I went to the beach today <strong>and I got really sunburned.</strong>""</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>I know that GraphQL APIs themselves are versionless but there has to be some way to actually version a specific resource. I'm currently building an app (that I can't disclose details on) and versioning resources/types aren't necessarily a requirement but it is something the company is shooting for. How would I be able to access Post 1.0 and Post 1.1? Is this even possible?</p>&#xA;&#xA;<p>If I can help out more with this question, just let me know. I haven't been able to figure this out so I appreciate any responses!</p>&#xA;",7339855,,,,2017-11-11 02:08:48,How can I version a specific resource in GraphQL,<api><version><graphql>,0,0,0,2017-11-11 02:08:48
47287449,1,,,1,662,"<p>I'm trying to connect my create-react-app frontend to my graphql-php server using Apollo. As both are running on different ports on my local machine (3000 and 8080 respectively) I'm getting some CORS issues.&#xA;Apollo is sending an OPTIONS request which is then throwing a console log message of:</p>&#xA;&#xA;<pre><code> DOMException: Failed to execute 'postMessage' on 'Window': Error: Network request failed with status 200 - ""OK"" could not be cloned.&#xA;        at ApolloClient.hookLogger [as devToolsHookCb] (&lt;anonymous&gt;:14:14)&#xA;        at QueryManager.onBroadcast (http://localhost:3000/static/js/bundle.js:2585:27)&#xA;        at QueryManager../node_modules/apollo-client/core/QueryManager.js.QueryManager.broadcastQueries (http://localhost:3000/static/js/bundle.js:3659:14)&#xA;        at http://localhost:3000/static/js/bundle.js:3230:31&#xA;        at &lt;anonymous&gt;&#xA;</code></pre>&#xA;&#xA;<p>Would love any help that anyone can provide as to how to get these two to talk to each other!</p>&#xA;&#xA;<p>Frontend Apollo config:</p>&#xA;&#xA;<pre><code>const httpLink = new HttpLink({uri:'http://localhost:8080/temps_api/index.php'}); //TODO: Separate into config file&#xA;const client = new ApolloClient({&#xA;    link: httpLink,&#xA;    cache: new InMemoryCache()&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>index.php</p>&#xA;&#xA;<pre><code>&lt;?php&#xA;require_once 'vendor\autoload.php';&#xA;require_once 'core\bootstrap.php';&#xA;&#xA;header('Access-Control-Allow-Origin: *');&#xA;&#xA;use GraphQL\GraphQL;&#xA;use GraphQL\Type\Schema;&#xA;use Temps\Types\Types;&#xA;&#xA;$schema = new Schema([&#xA;    'query' =&gt; Types::query()&#xA;]);&#xA;&#xA;// $data = Data::parseInput();&#xA;&#xA;var_dump(file_get_contents('php://input'));&#xA;&#xA;//Test query&#xA;// $data = [&#xA;//   'query' =&gt; '&#xA;//     {&#xA;//         user(email: ""jane@email.com"", password: ""password"") {&#xA;//             __typename,&#xA;//             username,&#xA;//             userType,&#xA;//             email&#xA;//         }&#xA;//     }'&#xA;// ];&#xA;//This method will vlidate the POST variables and turn them into $data array&#xA;&#xA;$result = GraphQL::executeQuery(&#xA;    $schema,&#xA;    $data['query']&#xA;);&#xA;&#xA;echo json_encode($result);&#xA;</code></pre>&#xA;",8325419,,,,2017-12-18 20:33:47,React Apollo to graphql-php server on different ports,<reactjs><cors><react-apollo><graphql-php>,1,0,0,2017-11-14 13:46:43
47307608,1,,,0,740,<p>i am new at React and i'm trying to deploy on zeit. Deploy is successful but on zeit it gives error like</p>&#xA;&#xA;<blockquote>&#xA;  <p>/usr/src/app/bundle/programs/server/node_modules/fibers/future.js:280&#xA;                          throw(ex);&#xA;                          ^</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>Error: query parameter ssl is an incomplete value pair&#xA;    at module.exports (/usr/src/app/bundle/programs/server/npm/node_modules/meteor/npm-mongo/node_modules/mongodb/lib/url_parser.js:47:15)&#xA;    at connect (/usr/src/app/bundle/programs/server/npm/node_modules/meteor/npm-mongo/node_modules/mongodb/lib/mongo_client.js:401:16)&#xA;    at Function.MongoClient.connect (/usr/src/app/bundle/programs/server/npm/node_modules/meteor/npm-mongo/node_modules/mongodb/lib/mongo_client.js:225:3)&#xA;    at new MongoConnection (packages/mongo/mongo_driver.js:169:11)&#xA;    at new MongoInternals.RemoteCollectionDriver (packages/mongo/remote_collection_driver.js:4:16)&#xA;    at Object.&lt;anonymous&gt; (packages/mongo/remote_collection_driver.js:38:10)&#xA;    at Object.defaultRemoteCollectionDriver (packages/underscore.js:784:19)&#xA;    at new Mongo.Collection (packages/mongo/collection.js:99:40)&#xA;    at AccountsServer.AccountsCommon (packages/accounts-base/accounts_common.js:23:18)&#xA;    at new AccountsServer (packages/accounts-base/accounts_server.js:18:5)&#xA;</code></pre>&#xA;&#xA;<p>if anyone also get same error then please help.</p>&#xA;,8295574,,1561148,2017-11-15 12:39:36,2017-12-23 06:17:34,MongoDB connection error while deploying on ZEIT,<mongodb><reactjs><meteor><graphql><vercel>,2,0,0,2017-11-15 12:35:52
47307711,1,,,0,130,<p>How do you deal with versioning? </p>&#xA;&#xA;<p>Shouldn't the query include some kind of version id along with the query id and variables so that the server is able to serve multiple versions at the same time?</p>&#xA;,8639175,,,,2018-06-29 15:44:56,GraphQL persisted queries versioning,<graphql>,1,0,0,2017-11-15 12:41:27
47308292,1,47316256,,1,56,"<p>I am trying to access graphql API in my local github version enterprise 2.7, but its giving error 404 page not found.</p>&#xA;&#xA;<p>Here is url of graphql&#xA;<a href=""https://10.13.28.120/api/v4"" rel=""nofollow noreferrer"">https://10.13.28.120/api/v4</a></p>&#xA;&#xA;<p>So just want to check from which version graphql is supported in github?</p>&#xA;",3805189,,,,2017-11-15 20:00:56,from which version graphql api is supported in github,<github><graphql><github-api>,1,0,0,2017-11-15 13:11:03
47389059,2,,47156532,1,,"<p>Disclaimer: My response assumes you are having the same problem as me.</p>&#xA;&#xA;<p>Not sure exactly what is going on here, but seems like a problem with webpack on Windows. I'm fortunate enough to be running Parallels (Windows 10) on a MacBook Pro so I was able to overcome this problem by running webpack against my Windows project on the Mac instead of Windows.</p>&#xA;&#xA;<p>Not quite an answer, but a clue, and work around.</p>&#xA;&#xA;<p>If you're not able to build on a Mac though this is not much help in the short term. One more reason to consider switching to Apple if you haven't already ;)</p>&#xA;&#xA;<p>Probs need to log an issue with the webpack team to get the problem fixed <a href=""https://github.com/webpack/webpack/issues"" rel=""nofollow noreferrer"">https://github.com/webpack/webpack/issues</a>, but this work around will get me by for now, so am going to move on.</p>&#xA;",1605933,,,,2017-11-20 09:47:29,"",,0,3,0,2017-11-20 09:47:29
47403264,1,,,0,352,"<p>I am using <code>apollo-fetch</code> to fetch a <code>graphql</code> data.&#xA;I am ending up in a script error and the request does not go through. I an not sure what is going wrong in a fairly simple request like this. Please help.</p>&#xA;&#xA;<p>Here's the error:</p>&#xA;&#xA;<pre><code>Uncaught (in promise) Error: Network request failed to return valid JSON&#xA;    at throwHttpError (apollo-fetch.js:41)&#xA;    at apollo-fetch.js:141&#xA;    at &lt;anonymous&gt;&#xA;    throwHttpError @ apollo-fetch.js:41&#xA;    (anonymous) @ apollo-fetch.js:141&#xA;    Promise rejected (async)&#xA;</code></pre>&#xA;&#xA;<p>Here's the code:</p>&#xA;&#xA;<pre><code>const { createApolloFetch } = require('apollo-fetch');&#xA;&#xA;PlayService.prototype.getPlays = function(playID) {&#xA;  const fetch = createApolloFetch({&#xA;    uri: 'graphql'&#xA;  });&#xA;&#xA; const playQuery = `query ($playid: String) {&#xA;   plays(id: $playid) {&#xA;    id&#xA;    items {&#xA;      nodes {&#xA;        id&#xA;        name&#xA;      }&#xA;    }&#xA;   }&#xA; }`;&#xA; fetch({&#xA;    query: playQuery,&#xA;    variables: { playid: playID }&#xA;  }).then((res) =&gt; {&#xA;    console.log(res.data);&#xA;  });&#xA;};&#xA;</code></pre>&#xA;",4538158,,,,2017-11-26 02:46:36,apollo-fetch ends up in network error for a simple garphql query,<angularjs><node.js><graphql>,1,0,0,2017-11-21 00:14:32
47582915,2,,47486785,7,,"<p>I'm using following dir structure.</p>&#xA;&#xA;<pre><code>api&#xA;  index.js&#xA;  apimock.js&#xA;  apirest.js&#xA;</code></pre>&#xA;&#xA;<p>In index.js you switch implementation depending on NODE_ENV:</p>&#xA;&#xA;<pre><code>if (process.env.NODE_ENV === 'production') {&#xA;  module.exports = require('./apirest');&#xA;} else {&#xA;  module.exports = require('./apimock');&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You will need to use webpack DefinePlugin to set NODE_ENV:</p>&#xA;&#xA;<pre><code>new webpack.DefinePlugin({&#xA;  'process.env': {&#xA;    NODE_ENV: `""${process.env.NODE_ENV || 'development'}""`,&#xA;    ENABLE_DEVTOOLS: JSON.stringify(!!process.env.ENABLE_DEVTOOLS)&#xA;  }&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>Build command (npm script):</p>&#xA;&#xA;<pre><code>NODE_ENV=production webpack --config webpack.config.js&#xA;</code></pre>&#xA;&#xA;<p>or for mock implementation:</p>&#xA;&#xA;<pre><code>NODE_ENV=development webpack --config webpack.config.js&#xA;</code></pre>&#xA;&#xA;<p>Webpack will only bundle single implementation depending on NODE_ENV.</p>&#xA;&#xA;<p>In your component (saga...) you simply import api:</p>&#xA;&#xA;<pre><code>import * as api from 'api';&#xA;</code></pre>&#xA;",3896616,,,,2017-11-30 21:30:12,"",,0,1,0,2017-11-30 21:30:12
47582974,1,47609515,,1,634,"<p>I'm trying to use GraphQL to populate fake data for Styleguidist. I'm using Express to make my GraphQL server but <strong>I'm unsure how to connect Apollo into Styleguidist</strong>? The examples use the index.js file and wrap the root component in an tag for Apollo.</p>&#xA;&#xA;<p>I am unsure how Styleguidist works, I don't know where the index.js file is. </p>&#xA;&#xA;<p>There are ways to configure Styleguidist through webpack, but I don't know how to use webpack to use Apollo.</p>&#xA;",2022724,,438581,2018-03-28 12:16:40,2018-03-28 12:16:40,How to configure using Styleguidist with Apollo/GraphQL,<javascript><graphql><apollo><react-styleguidist>,2,5,0,2017-11-30 21:34:14
47620452,2,,47620181,22,,"<p>Uggg... So it turns out I've been running into a known (thankfully) <a href=""https://github.com/angular/angular/issues/20484"" rel=""noreferrer"">bug in Angular</a>. <code>TransferState</code> on the client <em>is</em> being initiated while the script tag is being processed / loaded in some way. To get around this, currently you need to delay bootstrapping of the angular client side app.</p>&#xA;&#xA;<h3>update <code>main.ts</code></h3>&#xA;&#xA;<pre><code>document.addEventListener('DOMContentLoaded', () =&gt; {&#xA;  platformBrowserDynamic()&#xA;  .bootstrapModule(AppModule)&#xA;});&#xA;</code></pre>&#xA;",5490505,,,,2017-12-03 16:22:02,"",,0,6,0,2017-12-03 16:22:02
47657569,2,,46060752,0,,"<p>You have two options, one is making your application to understand cors, and the second is to disable cors in the fetch options in your apollo client:</p>&#xA;&#xA;<pre><code>const link  = new HttpLink({&#xA;        uri: 'URI',&#xA;        fetchOptions: {&#xA;            mode: 'no-cors'&#xA;        }&#xA;    });&#xA;</code></pre>&#xA;",3947202,,,,2017-12-05 15:49:33,"",,0,0,0,2017-12-05 15:49:33
47791729,2,,47752292,2,,"<p>From <a href=""https://developer.android.com/studio/run/emulator-networking.html"" rel=""nofollow noreferrer"">Android docs</a> :</p>&#xA;<blockquote>&#xA;<p>Each instance of the emulator runs behind a virtual router/firewall&#xA;service that isolates it from your development machine network&#xA;interfaces and settings and from the internet. An emulated device&#xA;can't see your development machine or other emulator instances on the&#xA;network. Instead, it sees only that it is connected through Ethernet&#xA;to a router/firewall.</p>&#xA;<p>The virtual router for each instance manages the 10.0.2/24 network&#xA;address space — all addresses managed by the router are in the form of&#xA;10.0.2.xx, where xx is a number. Addresses within this space are pre-allocated by the emulator/router as follows:</p>&#xA;<p>10.0.2.1  Router/gateway address</p>&#xA;<p><strong>10.0.2.2    Special alias to your host loopback interface (i.e., 127.0.0.1 on your development machine)</strong></p>&#xA;<p>10.0.2.3  First DNS server</p>&#xA;<p>10.0.2.4 / 10.0.2.5 / 10.0.2.6    Optional second, third and fourth DNS server (if any)</p>&#xA;<p>10.0.2.15 The emulated device network/ethernet interface</p>&#xA;<p>127.0.0.1 The emulated device loopback interface</p>&#xA;</blockquote>&#xA;<p>Note that this virtual router is used by AVD emulator only, it may be different for other emulators</p>&#xA;",8900839,,-1,2020-06-20 09:12:55,2017-12-13 11:17:45,"",,0,0,0,2017-12-13 11:17:45
47846202,2,,47743498,0,,"<p>You could use <a href=""https://github.com/graphcool/get-graphql-schema"" rel=""nofollow noreferrer"">get-graphql-schema</a> on your localhost graphql server.</p>&#xA;",404761,,,,2017-12-16 13:32:25,"",,0,4,0,2017-12-16 13:32:25
47937698,2,,47927712,0,,"<p>you dont seem to be the only one having the problem:</p>&#xA;&#xA;<p><a href=""https://github.com/sequelize/sequelize/issues/6725"" rel=""nofollow noreferrer"">https://github.com/sequelize/sequelize/issues/6725</a></p>&#xA;&#xA;<p><a href=""https://github.com/feathersjs-ecosystem/feathers-sequelize/issues/71"" rel=""nofollow noreferrer"">https://github.com/feathersjs-ecosystem/feathers-sequelize/issues/71</a></p>&#xA;&#xA;<p>do you also use mysql, and if yes which version?</p>&#xA;&#xA;<p>seems to work in some versions, and in some not:</p>&#xA;&#xA;<p><a href=""https://github.com/feathersjs-ecosystem/feathers-sequelize/issues/71#issuecomment-255192417"" rel=""nofollow noreferrer"">https://github.com/feathersjs-ecosystem/feathers-sequelize/issues/71#issuecomment-255192417</a></p>&#xA;",1056711,,,,2017-12-22 07:48:06,"",,0,0,0,2017-12-22 07:48:06
47973523,1,,,1,69,"<p>I just realized that my app was wrapped with QueryRecyclerProvider after I've switched my backend technology (from an express (nodejs) apollo server to a Python Graphene, so what's this Component role?</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/67tBL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/67tBL.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Will it impact the normal behavior of my app?</p>&#xA;&#xA;<p>I notice that when I was clicking on store tab into Chrome Apollo Extension Add-in, it makes extension crash.</p>&#xA;",8483084,,,,2017-12-26 03:04:02,What are QueryRecyclerProvider in an Apollo context?,<reactjs><debugging><apollo>,0,0,0,2017-12-26 03:04:02
47982739,1,,,0,194,"<p>I am getting an error in the GraphCool 5 minute tutorial <a href=""https://www.graph.cool/docs/quickstart/frontend/react/apollo-tijghei9go"" rel=""nofollow noreferrer"">https://www.graph.cool/docs/quickstart/frontend/react/apollo-tijghei9go</a></p>&#xA;&#xA;<p><code>graphcool-framework deploy</code></p>&#xA;&#xA;<p>Please choose the cluster you want to deploy to: <code>shared-ap-northeast-1</code></p>&#xA;&#xA;<p>Please choose the target name <code>prod</code></p>&#xA;&#xA;<p>Creating service server in cluster shared-ap-northeast-1... !&#xA; ▸    'ECONNREFUSED': request to <a href=""https://api.graph.cool/system"" rel=""nofollow noreferrer"">https://api.graph.cool/system</a> failed,&#xA; ▸    reason: connect ECONNREFUSED 13.33.35.222:443</p>&#xA;&#xA;<p>A search didn't turn up much on the graphCool forums or here at stack overflow</p>&#xA;",1769594,,,,2017-12-27 04:19:22,graphcool-framework deploy error 'ECONNREFUSED',<graphql><graphcool>,1,0,0,2017-12-26 19:09:52
48005732,1,48087314,,11,5824,"<p>When I call a mutation on my client I get the following warning:</p>&#xA;&#xA;<blockquote>&#xA;  <p>writeToStore.js:111 Missing field updateLocale in {}</p>&#xA;</blockquote>&#xA;&#xA;<p>This is my stateLink:</p>&#xA;&#xA;<pre><code>const stateLink = withClientState({&#xA;  cache,&#xA;  resolvers: {&#xA;    Mutation: {&#xA;      updateLocale: (root, { locale }, context) =&gt; {&#xA;        context.cache.writeData({&#xA;          data: {&#xA;            language: {&#xA;              __typename: 'Language',&#xA;              locale,&#xA;            },&#xA;          },&#xA;        });&#xA;      },&#xA;    },&#xA;  },&#xA;  defaults: {&#xA;    language: {&#xA;      __typename: 'Language',&#xA;      locale: 'nl',&#xA;    },&#xA;  },&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>And this is my component:</p>&#xA;&#xA;<pre><code>export default graphql(gql`&#xA;  mutation updateLocale($locale: String) {&#xA;    updateLocale(locale: $locale) @client&#xA;  }&#xA;`, {&#xA;    props: ({ mutate }) =&gt; ({&#xA;      updateLocale: locale =&gt; mutate({&#xA;        variables: { locale },&#xA;      }),&#xA;    }),&#xA;  })(LanguagePicker);&#xA;</code></pre>&#xA;&#xA;<p>What am I missing?</p>&#xA;",5279965,,,,2018-05-04 04:05:24,apollo-link-state cache.writedata results in Missing field warning,<apollo><react-apollo>,2,0,0,2017-12-28 10:26:01
48012428,2,,41209429,0,,"<p>I have found that it's useful to increase the amount of surrounding context shown. This can only be done by modifying the code in the react-dom package:</p>&#xA;&#xA;<pre><code>diff --git a/node_modules/react-dom/lib/ReactMount.js b/node_modules/react-dom/lib/ReactMount.js&#xA;index bb7d5bf..675a7bd 100644&#xA;--- a/node_modules/react-dom/lib/ReactMount.js&#xA;+++ b/node_modules/react-dom/lib/ReactMount.js&#xA;@@ -499,7 +499,9 @@ var ReactMount = {&#xA;         }&#xA;&#xA;         var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);&#xA;-        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);&#xA;+        // Print num lines of leading and trailing context surrounding&#xA;+        var differenceContext = 40;&#xA;+        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - differenceContext, diffIndex + differenceContext) + '\n (server) ' + rootMarkup.substring(diffIndex - differenceContext, diffIndex + differenceContext);&#xA;&#xA;         !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;&#xA;</code></pre>&#xA;&#xA;<p>As an aside, <a href=""https://github.com/ds300/patch-package"" rel=""nofollow noreferrer"">patch-package</a> is a very useful tool for making changes to packages in <code>node_modules</code>.</p>&#xA;",5932012,,5932012,2017-12-29 11:12:40,2017-12-29 11:12:40,"",,0,0,0,2017-12-28 18:19:28
48016851,2,,48012620,0,,"<p>The current version of <code>meteor/apollo</code> is out of date with the latest apollo npm packages. <a href=""https://github.com/Swydo/ddp-apollo"" rel=""nofollow noreferrer"">https://github.com/Swydo/ddp-apollo</a> is up-to-date and does the integration in a ""meteor way"" </p>&#xA;",627729,,,,2017-12-29 02:53:32,"",,0,1,0,2017-12-29 02:53:32
48087314,2,,48005732,13,,"<p>I was getting the same warning and solved it by returning the data from the mutation method. </p>&#xA;&#xA;<pre><code>updateLocale: (root, { locale }, context) =&gt; {&#xA;&#xA;  const data = {&#xA;    language: {&#xA;      __typename: 'Language',&#xA;      locale,&#xA;    }&#xA;  };&#xA;  context.cache.writeData({ data });&#xA;  return data;&#xA;};&#xA;</code></pre>&#xA;",2658274,,,,2018-01-04 01:02:08,"",,0,0,0,2018-01-04 01:02:08
48154509,1,,,12,11401,"<p>I'm writing unit tests to check my api. Before I merged my <code>git</code> <em>test</em> branch with my <em>dev</em> branch everything was fine, but then I started to get this <em>error</em>:</p>&#xA;&#xA;<pre><code>App running at: http://localhost:4096/&#xA;spacejam: meteor is ready&#xA;spacejam: spawning phantomjs&#xA;phantomjs: Running tests at http://localhost:4096/local using test-in-console&#xA;phantomjs: Error: fetch is not found globally and no fetcher passed, to fix pass a fetch for&#xA;  your environment like https://www.npmjs.com/package/unfetch.&#xA;&#xA;  For example:&#xA;    import fetch from 'unfetch';&#xA;    import { createHttpLink } from 'apollo-link-http';&#xA;&#xA;    const link = createHttpLink({ uri: '/graphql', fetch: fetch });&#xA;</code></pre>&#xA;&#xA;<p>Here's a part of my <code>api.test.js</code> file:</p>&#xA;&#xA;<pre><code>describe('GraphQL API for users', () =&gt; {&#xA;    before(() =&gt; {&#xA;      StubCollections.add([Meteor.users]);&#xA;      StubCollections.stub();&#xA;    });&#xA;&#xA;    after(() =&gt; {&#xA;      StubCollections.restore();&#xA;    });&#xA;&#xA;    it('should do the work', () =&gt; {&#xA;      const x = 'hello';&#xA;      expect(x).to.be.a('string');&#xA;    });&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>The funniest thing is that I don't even have <code>graphql</code> in my tests (although, I use it in my <code>meteor</code> package)&#xA;Unfortunately, I didn't to find enough information (apart from <a href=""https://www.apollographql.com/docs/link/links/http.html"" rel=""noreferrer"">apollo-link-http docs</a> that has examples, but still puzzles me). I did try to use that example, but it didn't help and I still get the same error</p>&#xA;",5084982,,,,2019-03-22 10:04:17,"""fetch is not found globally and no fetcher passed"" when using spacejam in meteor",<javascript><testing><meteor><graphql>,3,1,0,2018-01-08 16:42:15
48160810,2,,48154509,3,,"<p>The problem is this: <code>fetch</code> is defined when you are in the browser, and is available as <code>fetch</code>, or even <code>window.fetch</code></p>&#xA;&#xA;<p>In the server it is not defined, and either needs to be imported explicity, or a polyfill like <a href=""https://www.npmjs.com/package/unfetch"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/unfetch</a> (as suggested in the error message) needs to be imported by your test code to make the problem go away.</p>&#xA;",3975309,,,,2018-01-09 02:49:17,"",,0,1,0,2018-01-09 02:49:17
48189379,1,,,0,605,"<p>The client I am working with at the moment has requested I build a SSR React app which includes i18n. To solve this problem I tried to use NextJS and i18Next.</p>&#xA;&#xA;<p>I managed to get react and apollo linked up without issue but when I tried to connect next + i18n I keep getting a very unhelpful 'an unexpected error' occured, error.</p>&#xA;&#xA;<p>Inspecting the console I also see the following: </p>&#xA;&#xA;<pre><code>Cannot read property 'prototype' of undefined&#xA;TypeError: Cannot read property 'prototype' of undefined&#xA;    at Object.inherits (http://localhost:3000/_next/1515592576452/page/index.js:36080:46)&#xA;    at Object.&lt;anonymous&gt; (http://localhost:3000/_next/1515592576452/page/index.js:30216:6)&#xA;    at Object.&lt;anonymous&gt; (http://localhost:3000/_next/1515592576452/page/index.js:30440:30)&#xA;    at __webpack_require__ (http://localhost:3000/_next/1515592576452/manifest.js:714:31)&#xA;    at fn (http://localhost:3000/_next/1515592576452/manifest.js:117:20)&#xA;    at Object.&lt;anonymous&gt; (http://localhost:3000/_next/1515592576452/page/index.js:28246:12)&#xA;    at Object.module.exports.exports.byteLength (http://localhost:3000/_next/1515592576452/page/index.js:28507:30)&#xA;    at __webpack_require__ (http://localhost:3000/_next/1515592576452/manifest.js:714:31)&#xA;    at fn (http://localhost:3000/_next/1515592576452/manifest.js:117:20)&#xA;    at Object.&lt;anonymous&gt; (http://localhost:3000/_next/1515592576452/page/index.js:24501:18)&#xA;</code></pre>&#xA;&#xA;<p>Also this warning but i'm not sure it's related</p>&#xA;&#xA;<pre><code>warning.js?e7f4ca8:33 Warning: Expected server HTML to contain a matching &lt;div&gt; in &lt;div&gt;.&#xA;</code></pre>&#xA;&#xA;<p>I've also noticed that in ./libs/withData.js there is the following line:</p>&#xA;&#xA;<p><code>enter code here</code>static displayName = <code>WithData(${getComponentDisplayName(&#xA;      ComposedComponent&#xA;    )})</code></p>&#xA;&#xA;<p>My editor flags that as an invalid token but this code came from the <a href=""https://github.com/zeit/next.js/blob/canary/examples/with-apollo/lib/withData.js"" rel=""nofollow noreferrer"">nextjs example</a> and there is no issue on that repo which suggests it's a typo.</p>&#xA;&#xA;<p>I've included all the code that pertains to this issue in the following codepen project.</p>&#xA;&#xA;<p><a href=""https://codepen.io/foxleigh81/project/editor/DnYJWB"" rel=""nofollow noreferrer"">https://codepen.io/foxleigh81/project/editor/DnYJWB</a></p>&#xA;",969329,,11613622,2021-08-19 08:00:07,2021-08-19 08:00:07,NextJS + Apollo + i18n - unexpected error,<javascript><next.js><apollo><react-i18next>,1,0,0,2018-01-10 14:15:43
48199890,2,,48181317,3,,"<p>The problem was caused by unmet peer dependencies. I installed every dependency I use again and it's working now. So if you want to install and use apollo-link-state in a project you started a while ago, you need to update apollo-link-state its peer dependencies.</p>&#xA;",8374919,,8374919,2018-01-12 01:40:42,2018-01-12 01:40:42,"",,0,1,0,2018-01-11 04:43:27
48261057,1,49120137,,7,3313,"<p>I am looking to hot reload my GraphQL schema on my apollo-server-express server. Anyone would have any idea about how to do that?</p>&#xA;&#xA;<p>I'm currently using schemas stitching to gather multiple API's schemas, however I do not want to have to restart my application every time one of these schema changes.</p>&#xA;&#xA;<p>I've tried to look for the express route and remove it but that dit not work, I also tried to call <code>graphQLExpress()</code> again on the same route and that did not update it. </p>&#xA;&#xA;<p>Thanks for your help!</p>&#xA;",8869221,,,,2018-03-05 21:55:28,Graphql - Apollo Server - Hot update schema,<node.js><express><graphql><graphql-js><apollo-server>,2,0,0,2018-01-15 10:27:30
48267534,2,,48261057,1,,"<p>I managed to get it done by removing the express route and then re-creating it. But actually I discovered that because <code>makeRemoteExecutableSchema</code> is sending the introspection query at every request, you actually don't need to update your schema, it gets updated by itself. That does not imply Graphiql though.</p>&#xA;",8869221,,,,2018-01-15 16:58:15,"",,0,0,0,2018-01-15 16:58:15
48278025,1,56853563,,1,2247,"<p>I'm trying to make graphql calls from a React component to a PHP server, using <code>fetch</code>. It is the first time I try using <code>fetch</code>.</p>&#xA;&#xA;<p>I'm using React JS on browser side and Symfony 4 on server side. However all of my calls end up with an empty body on server side, even though my browser dev tools seem to indicate data is sent.</p>&#xA;&#xA;<p>When using graphiql, the requests succeed. I'm trying as much as possible to mimic the graphiql request from React, but the body is always blank.</p>&#xA;&#xA;<p>Here is the call:</p>&#xA;&#xA;<pre><code>fetch('/api', {&#xA;    'method': 'post',&#xA;    'credentials': 'include',&#xA;    'headers': {&#xA;        'Content-Type': 'application/json',&#xA;    },&#xA;    'body': JSON.stringify({&#xA;        ""query"": ""mutation {UpdateActionStatus(input: {actionId: 61, status: TO_DO}) { id }}"",&#xA;        ""variables"": null&#xA;    }),&#xA;}).then(r =&gt; {&#xA;    console.log(r.json());&#xA;&#xA;    return r.json();&#xA;}).catch(error =&gt; {&#xA;    console.log('There has been a problem with your fetch operation: ', error.message);&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I have tried with <code>mode</code> set to <code>cors</code>, <code>no-cors</code>, <code>same-origin</code>, <code>navigate</code>: none of these work.</p>&#xA;&#xA;<p>I have tried with Firefox and Chrome: still no luck.</p>&#xA;&#xA;<p>Changing the content type to <code>application/graphql</code> does not seem to work either.</p>&#xA;&#xA;<p>I have seen many questions dealing with empty bodies in both responses and requests when using <code>fetch</code>, on stackoverflow and elsewhere, but none of the found solutions seem to solve to my case.</p>&#xA;&#xA;<p>I also tried the following, much cruder call, to no avail. It seems I just cannot use fetch at all for a reason I cannot explain:</p>&#xA;&#xA;<pre><code>fetch('/api', {&#xA;    'method': 'post',&#xA;    'credentials': 'include',&#xA;    'headers': {&#xA;        'Content-Type': 'application/x-www-form-urlencoded',&#xA;    },&#xA;    'body': 'test=test',&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>What to do? Am I missing something simple here?</p>&#xA;",2710905,,2710905,2018-01-16 09:44:31,2021-07-21 09:48:42,Empty request body when using fetch,<javascript><ajax><symfony><graphql><fetch-api>,2,4,0,2018-01-16 09:32:37
48316010,1,48396007,,1,415,"<p>I've been trying to use apollo client on my react-native project so that I can connect to a fully developed apollo graphql server. However I'm getting an error that suggests that <code>createNetworkInterface</code> is not the correct way to do it. How should I initialize the apollo client? <a href=""https://i.stack.imgur.com/Pk80p.jpg"" rel=""nofollow noreferrer"">Error from the debugging mobile device</a></p>&#xA;&#xA;<p>The code that I used to initialize the apollo client is:</p>&#xA;&#xA;<pre><code>// Initialize the Apollo Client&#xA;const client = new ApolloClient({&#xA;  networkInterface: createNetworkInterface({&#xA;    uri: 'https://api.graph.cool/simple/v1/ciwce5xw82kh7017179gwzn7q',&#xA;  }),&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>I have really tried my best to look for solutions on how to implement this, but most tutorials/documentations are for react for web and none is for react-native. Sorry about my bad English :(</p>&#xA;",9176265,,,,2018-01-23 07:11:07,error: createNetworkInterface is not a function on React Native and Apollo Client,<android><react-native><apollo><react-apollo><apollo-client>,1,2,0,2018-01-18 07:38:09
48321947,2,,47321158,0,,"<p>github's  doc  is confusing.  if you use  http-server  to start a  server, the port  must be  localhost:8080,so you can change  port  8000->8080</p>&#xA;&#xA;<p>this  server use for get  githubCode.  In the code ,if   your app's Client ID is valid, you can find githubCode In the console.  I can get the githubCode, but after that , mutation has error.  </p>&#xA;",9167031,,,,2018-01-18 12:57:59,"",,0,1,0,2018-01-18 12:57:59
48339975,2,,48294700,0,,"<p>The issue is resolved. It occurred because of the spinjs version change (some dependency node modules deleted while updated to higher version).&#xA;This is somehow related to <a href=""http://github.com/npm/registry/issues/255"" rel=""nofollow noreferrer"">this</a></p>&#xA;",4218556,,,,2018-01-19 11:21:37,"",,0,0,0,2018-01-19 11:21:37
48353943,1,,,2,747,"<p>I have a node.js server that uses sequelize and graphql to provide GraphQL endpoint.</p>&#xA;&#xA;<p>Somehow object fields that are linked with <code>belongsTo</code> are always <code>null</code> in GraphQL query output.</p>&#xA;&#xA;<p>Here are my graphql typedefs:</p>&#xA;&#xA;<pre><code>type Student {&#xA;  id: ID!&#xA;  name: String!&#xA;  age: Int!&#xA;  schoolClass: SchoolClass&#xA;}&#xA;&#xA;type SchoolClass {&#xA;  id: ID!&#xA;  title: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is how sequelize model defined</p>&#xA;&#xA;<pre><code>const SchoolClass = sequelize.define('SchoolClass', {&#xA;  title: Sequelize.STRING&#xA;});&#xA;&#xA;const Student = sequelize.define('Student', {&#xA;  name: Sequelize.STRING,&#xA;  age: Sequelize.TINYINT&#xA;});&#xA;&#xA;Student.belongsTo(SchoolClass);&#xA;</code></pre>&#xA;&#xA;<p>The resolver is</p>&#xA;&#xA;<pre><code>students (root, args, context) {&#xA;    return models.Student.findAll({}, context);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The query:</p>&#xA;&#xA;<pre><code>{ &#xA;  students { &#xA;    id, name, age, schoolClass { id } &#xA;  } &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Typical output: </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""students"": [&#xA;      {&#xA;        ""id"": ""1"",&#xA;        ""name"": ""John"",&#xA;        ""age"": ""18"",&#xA;        ""schoolClass"": null&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there any way to get actual data instead of nulls?</p>&#xA;",2919975,,2919975,2018-01-20 08:10:25,2018-01-20 10:16:43,node.js graphql/sequelize server returns null for linked properties,<node.js><sequelize.js><graphql-js>,1,3,0,2018-01-20 08:05:54
48360535,2,,48359953,0,,"<p>You must change the way you will get the data because Apollo is a layer between you and the Api requested where you can join many Apis into one single query call.&#xA;The example above is very simple and just to explain the way will place your querys and how it connects to Apollo Server. You can set middlewares to log requests on add some headers too. </p>&#xA;&#xA;<p>You will install [<a href=""https://github.com/apollographql/react-apollo]"" rel=""nofollow noreferrer"">https://github.com/apollographql/react-apollo]</a> and [<a href=""https://github.com/apollographql/graphql-tag]"" rel=""nofollow noreferrer"">https://github.com/apollographql/graphql-tag]</a></p>&#xA;&#xA;<p>After that create a connection file in your project that imports</p>&#xA;&#xA;<h1>graphClient.js</h1>&#xA;&#xA;<pre><code>import { ApolloClient, createNetworkInterface } from 'react-apollo';&#xA;const networkInterface = createNetworkInterface({&#xA;  uri: 'yourserver address'&#xA;});&#xA;const client = new ApolloClient({&#xA;  networkInterface,&#xA;});&#xA;export default client;&#xA;</code></pre>&#xA;&#xA;<h1>yourRequestFile.js</h1>&#xA;&#xA;<pre><code>import gql from 'graphql-tag';&#xA;import client from './graphClient';&#xA;&#xA;export const getYourData = () =&gt; ({&#xA;  query: gql`&#xA;  query {&#xA;    products() {&#xA;      info {&#xA;        value {&#xA;          qty&#xA;          value&#xA;        }&#xA;      }&#xA;    }&#xA;  }`,&#xA;});&#xA;const returnYourData = async () =&gt; client.query(getYourdata());&#xA;export default returnYourData;&#xA;</code></pre>&#xA;",1987125,,,,2018-01-20 20:02:21,"",,0,0,0,2018-01-20 20:02:21
48396007,2,,48316010,0,,"<p>I've had the same issue some time back. Unfortunately I couldn't find any other solution other than to downgrade my react-apollo and react-native dependencies as below:</p>&#xA;&#xA;<pre><code>yarn add react-apollo@1.0.0&#xA;</code></pre>&#xA;&#xA;<p>and also install an older version of react-native:</p>&#xA;&#xA;<pre><code>react-native init appName --version react-native@0.45.0&#xA;</code></pre>&#xA;&#xA;<p>You could also refer to some thread on this issue <a href=""https://github.com/apollographql/apollo-client/issues/108"" rel=""nofollow noreferrer"">here</a> and <a href=""https://github.com/apollographql/apollo-client/issues/2458"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;",4031108,,,,2018-01-23 07:11:07,"",,0,0,0,2018-01-23 07:11:07
48514043,2,,48508443,1,,<p>There're some issues with a service worker (cache). Let's just open a page in a new incognito window. :)</p>&#xA;,6696689,,,,2018-01-30 04:47:00,"",,0,1,0,2018-01-30 04:47:00
48539021,1,48540410,,0,27,"<p>My Graphql works very well.&#xA;Query, Create, Anyway I see that it always fetch (Developer Tools -> Network).&#xA;Is this correct? or I have to fix something?</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/VGNi8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VGNi8.png"" alt=""enter image description here""></a></p>&#xA;",8491066,,,,2018-01-31 10:54:28,"My Graphql App from Developer Tools, I see that it always fetch, is this correct?",<javascript><reactjs><graphql>,1,0,0,2018-01-31 09:46:23
48540410,2,,48539021,0,,<p>If it's working fine then there is no problem. The browser is using <code>fetch</code> to communicate with the back-end.</p>&#xA;,2966499,,,,2018-01-31 10:54:28,"",,0,0,0,2018-01-31 10:54:28
48573256,1,48575416,,0,47,"<p>I followed this relay-modern-isomorphic-example tutorial : <a href=""https://github.com/robrichard/relay-modern-isomorphic-example"" rel=""nofollow noreferrer"">Link</a></p>&#xA;&#xA;<p>In that tutorial they have a single page with no routing ,</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>import express from 'express';&#xD;&#xA;import graphQLHTTP from 'express-graphql';&#xD;&#xA;import nunjucks from 'nunjucks';&#xD;&#xA;import path from 'path';&#xD;&#xA;import webpack from 'webpack';&#xD;&#xA;import WebpackDevServer from 'webpack-dev-server';&#xD;&#xA;import {schema} from './data/schema';&#xD;&#xA;import renderServer from './js/renderServer';&#xD;&#xA;import renderServer2 from './js/renderServer2';&#xD;&#xA;const APP_PORT = 3000;&#xD;&#xA;const GRAPHQL_PORT = 8080;&#xD;&#xA;&#xD;&#xA;// Expose a GraphQL endpoint&#xD;&#xA;const graphQLServer = express();&#xD;&#xA;graphQLServer.use('/', graphQLHTTP({schema, pretty: true}));&#xD;&#xA;graphQLServer.listen(GRAPHQL_PORT, () =&gt; console.log(&#xD;&#xA;  `GraphQL Server is now running on http://localhost:${GRAPHQL_PORT}`&#xD;&#xA;));&#xD;&#xA;&#xD;&#xA;// Serve the Relay app&#xD;&#xA;const compiler = webpack({&#xD;&#xA;  entry: path.resolve(__dirname, 'js', 'app.js'),&#xD;&#xA;  module: {&#xD;&#xA;    loaders: [&#xD;&#xA;      {&#xD;&#xA;        exclude: /node_modules/,&#xD;&#xA;        loader: 'babel',&#xD;&#xA;        test: /\.js$/,&#xD;&#xA;      },&#xD;&#xA;    ],&#xD;&#xA;  },&#xD;&#xA;  output: {filename: 'app.js', path: '/'},&#xD;&#xA;  devtool: 'source-map'&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;const app = new WebpackDevServer(compiler, {&#xD;&#xA;  contentBase: '/public/',&#xD;&#xA;  proxy: {'/graphql': `http://localhost:${GRAPHQL_PORT}`},&#xD;&#xA;  publicPath: '/js/',&#xD;&#xA;  stats: {colors: true},&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;nunjucks.configure('views', {autoescape: true});&#xD;&#xA;&#xD;&#xA;// Serve static resources&#xD;&#xA;app.use('/public', express.static(path.resolve(__dirname, 'public')));&#xD;&#xA;app.use('/', renderServer);&#xD;&#xA;app.use('/detailComponent', renderServer2);&#xD;&#xA;app.listen(APP_PORT, () =&gt; {&#xD;&#xA;  console.log(`App is now running on http://localhost:${APP_PORT}`);&#xD;&#xA;});</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>In the above code by default it lands on <code>localhost:3000</code>, likewise i want to add another page with url <code>localhost:3000/detailComponent</code> . But it will showing me the <code>localhost:3000</code> page only . So how to do the routing here , can someone clarify me on this .</p>&#xA;",6396572,,,,2018-02-02 03:46:44,Multiple pages using relay-modern-isomorphic,<reactjs><graphql><react-relay><isomorphic-relay>,1,0,0,2018-02-01 23:09:54
48575701,2,,48575427,0,,<p>I set <code>export NODE_ENV=production</code> and the error is resolved.</p>&#xA;,7969929,,,,2018-02-02 04:27:19,"",,0,0,0,2018-02-02 04:27:19
48676834,1,48697384,,0,589,"<p>Trying to follow this <a href=""https://www.prismagraphql.com/docs/quickstart/backend/node/node-phe8vai1oo"" rel=""nofollow noreferrer"">prisma tutorial</a> to boot a local graphql server, but received the following error while selecting the local as the deployment option:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Error: Could not connect to cluster local. Please use <code>prisma local&#xA;  start</code> to start your local Prisma cluster.</p>&#xA;</blockquote>&#xA;&#xA;<p>But when I run <code>prisma local start</code>, I got another error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Error: Couldn't connect to Docker daemon at&#xA;  http+docker://localunixsocket - is it running?</p>&#xA;  &#xA;  <p>If it's at a non-standard location, specify the URL with the&#xA;  DOCKER_HOST environment variable.</p>&#xA;</blockquote>&#xA;&#xA;<p>I have already installed docker. But not sure where the problem comes from. Maybe it's the location not set correctly? Can some one with relevant experience point out what could be wrong?</p>&#xA;",4983450,,,,2018-02-09 01:24:11,deploy prisma project to local with docker,<ubuntu><docker><graphql><prisma>,1,0,0,2018-02-08 03:02:05
48737125,1,,,3,1149,"<p>I'm having trouble to batch queries using ApolloClient when I'm calling <code>BatchHttpLink</code> in my client. I've opened a issue on <code>react-apollo</code> repo where you can check with more details my code:</p>&#xA;&#xA;<p><a href=""https://github.com/apollographql/react-apollo/issues/1656"" rel=""nofollow noreferrer"">https://github.com/apollographql/react-apollo/issues/1656</a></p>&#xA;&#xA;<p>basically seems like initially Apollo is doing the right thing: batching the queries and returning the results properly, but I'm getting the following error on my console:</p>&#xA;&#xA;<pre>&#xA;&#xA;    ApolloError.js:34 Uncaught (in promise) Error: Network error: Error writing result to store for query:&#xA;     query CategoriesServicesQuery {&#xA;      categories {&#xA;        id&#xA;        name&#xA;        slug&#xA;        tags {&#xA;          id&#xA;          slug&#xA;          name&#xA;          __typename&#xA;        }&#xA;        __typename&#xA;      }&#xA;    }&#xA;&#xA;    Cannot read property 'categories' of undefined&#xA;        at new ApolloError (ApolloError.js:34)&#xA;        at QueryManager.js:277&#xA;        at QueryManager.js:664&#xA;        at Array.forEach ()&#xA;        at QueryManager.js:663&#xA;        at Map.forEach ()&#xA;        at QueryManager.broadcastQueries (QueryManager.js:658)&#xA;        at QueryManager.js:226&#xA;        at &#xA;&#xA;</pre>&#xA;&#xA;<p>the response looks like:</p>&#xA;&#xA;<pre>&#xA;&#xA;    [&#xA;      {&#xA;        query: ,&#xA;        variables: ,&#xA;      },&#xA;      {&#xA;        query: ,&#xA;        variables: ,&#xA;      },&#xA;      {&#xA;        query: &#xA;        variables: ,&#xA;      }&#xA;    ]&#xA;&#xA;</pre>&#xA;&#xA;<p>I believe, somehow under the hood, Apollo should handle this and return <code>this.props.data</code> to the respective app components.</p>&#xA;&#xA;<p>I'm not sure what I'm missing.</p>&#xA;",5302080,,,,2018-04-04 18:52:04,Apollo Client - [BatchHttpLink]: Error writing result to store for query,<reactjs><react-apollo>,0,0,0,2018-02-11 22:24:11
48746736,2,,43123969,4,,"<p>So I got this working using Apollo and Azure Functions. There is a mistake in the example for <code>apollo-server-azure-functions</code>, and a minor error in that wrapper library that returns string and not JSON data. You also need to install <code>graphql-tools</code> separately.</p>&#xA;&#xA;<p>In the example code the schema object is created, but not added to the parameters passed to Apollo server. The working code is below. I've just added schema to the options passed.</p>&#xA;&#xA;<pre><code>const server = require(""apollo-server-azure-functions"");&#xA;const graphqlTools = require(""graphql-tools"");&#xA;&#xA;const typeDefs = `&#xA;  type Random {&#xA;    id: Int!&#xA;    rand: String&#xA;  }&#xA;&#xA;  type Query {&#xA;    rands: [Random]&#xA;    rand(id: Int!): Random&#xA;  }&#xA;`;&#xA;&#xA;const rands = [{ id: 1, rand: ""random"" }, { id: 2, rand: ""modnar"" }];&#xA;&#xA;const resolvers = {&#xA;  Query: {&#xA;    rands: () =&gt; rands,&#xA;    rand: (_, { id }) =&gt; rands.find(rand =&gt; rand.id === id)&#xA;  }&#xA;};&#xA;&#xA;const schema = graphqlTools.makeExecutableSchema({&#xA;  typeDefs,&#xA;  resolvers&#xA;});&#xA;&#xA;module.exports = function run(context, req) {&#xA;  if (req.method === 'POST') {&#xA;    server.graphqlAzureFunctions({&#xA;      endpointURL: '/api/graphql',&#xA;      schema: schema&#xA;    })(context, req);&#xA;  } else if (req.method === 'GET') {&#xA;    return server.graphiqlAzureFunctions({&#xA;      endpointURL: '/api/graphql',&#xA;      schema: schema&#xA;    })(context, req);&#xA;  }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Just doing this change you will start to get data back from your endpoint, but unfortunately it will not be of type <code>application/json</code>. For that a small change needs to be made to <code>apollo-server-azure-functions</code> to convert the body from string to JSON. I've submitted a PR for this to happen, but not sure when they will get to it.</p>&#xA;&#xA;<p>If you're not patient, you can create your own wrapper function with the code below which will work with the example above and return JSON not a string.</p>&#xA;&#xA;<pre><code>""use strict"";&#xA;Object.defineProperty(exports, ""__esModule"", { value: true });&#xA;var apollo_server_core_1 = require(""apollo-server-core"");&#xA;var GraphiQL = require(""apollo-server-module-graphiql"");&#xA;function graphqlAzureFunctions(options) {&#xA;    if (!options) {&#xA;        throw new Error('Apollo Server requires options.');&#xA;    }&#xA;    if (arguments.length &gt; 1) {&#xA;        throw new Error(""Apollo Server expects exactly one argument, got "" + arguments.length);&#xA;    }&#xA;    return function (httpContext, request) {&#xA;        var queryRequest = {&#xA;            method: request.method,&#xA;            options: options,&#xA;            query: request.method === 'POST' ? request.body : request.query,&#xA;        };&#xA;        if (queryRequest.query &amp;&amp; typeof queryRequest.query === 'string') {&#xA;            queryRequest.query = JSON.parse(queryRequest.query);&#xA;        }&#xA;        return apollo_server_core_1.runHttpQuery([httpContext, request], queryRequest)&#xA;            .then(function (gqlResponse) {&#xA;            var result = {&#xA;                status: 200,&#xA;                headers: { 'Content-Type': 'application/json' },&#xA;                body: JSON.parse(gqlResponse),&#xA;            };&#xA;            httpContext.res = result;&#xA;            httpContext.done(null, result);&#xA;        })&#xA;            .catch(function (error) {&#xA;            var result = {&#xA;                status: error.statusCode,&#xA;                headers: error.headers,&#xA;                body: error.message,&#xA;            };&#xA;            httpContext.res = result;&#xA;            httpContext.done(null, result);&#xA;        });&#xA;    };&#xA;}&#xA;exports.graphqlAzureFunctions = graphqlAzureFunctions;&#xA;function graphiqlAzureFunctions(options) {&#xA;    return function (httpContext, request) {&#xA;        var query = request.query;&#xA;        GraphiQL.resolveGraphiQLString(query, options, httpContext, request).then(function (graphiqlString) {&#xA;            httpContext.res = {&#xA;                status: 200,&#xA;                headers: {&#xA;                    'Content-Type': 'text/html',&#xA;                },&#xA;                body: graphiqlString,&#xA;            };&#xA;            httpContext.done(null, httpContext.res);&#xA;        }, function (error) {&#xA;            httpContext.res = {&#xA;                status: 500,&#xA;                body: error.message,&#xA;            };&#xA;            httpContext.done(null, httpContext.res);&#xA;        });&#xA;    };&#xA;}&#xA;exports.graphiqlAzureFunctions = graphiqlAzureFunctions;&#xA;</code></pre>&#xA;&#xA;<p>For this to work you will need to install <code>apollo-server-core</code> and <code>apollo-server-module-grapiql</code> as dependencies via npm.</p>&#xA;",9349878,,,,2018-02-12 12:40:50,"",,0,1,0,2018-02-12 12:40:50
48751074,1,,,7,6898,"<p>Today I've been trying to setup Docker for my GraphQL API that runs with Knex.js, PostgreSQL and Node.js. The problem that I'm facing is that Knex.js is timing out when trying to access data in my database. I believe that it's due to my incorrect way of trying to link them together.</p>&#xA;<p>I've really tried to do this on my own, but I can't figure this out. I'd like to walk through each file that play a part of making this work so (hopefully) someone could spot my mistake(s) and help me.</p>&#xA;<h2>knexfile.js</h2>&#xA;<p>In my knexfile I have a <code>connection</code> key which used to look like this:</p>&#xA;<p><code>connection: 'postgres://localhost/devblog'</code></p>&#xA;<p>This worked just fine, but this wont work if I want to use Docker. So I modified it a bit and ended up with this:</p>&#xA;<pre><code>connection: {&#xA;  host: 'db' || 'localhost',&#xA;  port: process.env.DB_PORT || 5432,&#xA;  user: process.env.DB_USER || 'postgres',&#xA;  password: process.env.DB_PASSWORD || undefined,&#xA;  database: process.env.DATABASE // DATABASE = devblog&#xA;}&#xA;</code></pre>&#xA;<p>I've noticed that something is wrong with <code>host</code>. Since it always times-out when I have something else (in this case, <code>db</code>) than <code>localhost</code>.</p>&#xA;<h2>Dockerfile</h2>&#xA;<p>My Dockerfile looks like this:</p>&#xA;<pre><code>FROM node:9&#xA;WORKDIR /app&#xA;COPY package-lock.json /app&#xA;COPY package.json /app&#xA;RUN npm install&#xA;COPY dist /app&#xA;COPY wait-for-it.sh /app&#xA;CMD node index.js&#xA;EXPOSE 3010&#xA;</code></pre>&#xA;<h2>docker-compose.yml</h2>&#xA;<p>And this file looks like this:</p>&#xA;<pre><code>version: &quot;3&quot;&#xA;services:&#xA;  redis:&#xA;    image: redis&#xA;    networks:&#xA;      - webnet&#xA;  db:&#xA;    image: postgres&#xA;    networks:&#xA;      - webnet&#xA;    environment:&#xA;      POSTGRES_PASSWORD: password&#xA;      POSTGRES_USER: martinnord&#xA;      POSTGRES_DB: devblog&#xA;  web:&#xA;    image: node:8-alpine&#xA;    command: &quot;node /app/dist/index.js&quot;&#xA;    volumes:&#xA;      - &quot;.:/app&quot;&#xA;    working_dir: &quot;/app&quot;&#xA;    depends_on:&#xA;      - &quot;db&quot;&#xA;    ports:&#xA;      - &quot;3010:3010&quot;&#xA;    environment:&#xA;      DB_PASSWORD: password&#xA;      DB_USER: martinnord&#xA;      DB_NAME: devblog&#xA;      DB_HOST: db&#xA;      REDIS_HOST: redis&#xA;networks:&#xA;  webnet:&#xA;</code></pre>&#xA;<p>When I try to run this with <code>docker-compose up</code> I get the following output:</p>&#xA;<pre><code>Starting backend_db_1 ... done&#xA;Starting backend_web_1 ... done&#xA;Attaching to backend_db_1, backend_redis_1, backend_web_1&#xA;redis_1  | 1:C 12 Feb 16:05:21.303 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo&#xA;redis_1  | 1:C 12 Feb 16:05:21.303 # Redis version=4.0.8, bits=64, commit=00000000, modified=0, pid=1, just started&#xA;db_1     | 2018-02-12 16:05:21.337 UTC [1] LOG:  listening on IPv4 address &quot;0.0.0.0&quot;, port 5432&#xA;redis_1  | 1:C 12 Feb 16:05:21.303 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf&#xA;redis_1  | 1:M 12 Feb 16:05:21.311 * Running mode=standalone, port=6379.&#xA;db_1     | 2018-02-12 16:05:21.338 UTC [1] LOG:  listening on IPv6 address &quot;::&quot;, port 5432&#xA;redis_1  | 1:M 12 Feb 16:05:21.311 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.&#xA;redis_1  | 1:M 12 Feb 16:05:21.314 # Server initialized&#xA;redis_1  | 1:M 12 Feb 16:05:21.315 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never &gt; /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.&#xA;db_1     | 2018-02-12 16:05:21.348 UTC [1] LOG:  listening on Unix socket &quot;/var/run/postgresql/.s.PGSQL.5432&quot;&#xA;db_1     | 2018-02-12 16:05:21.367 UTC [20] LOG:  database system was shut down at 2018-02-12 16:01:17 UTC&#xA;redis_1  | 1:M 12 Feb 16:05:21.317 * DB loaded from disk: 0.002 seconds&#xA;redis_1  | 1:M 12 Feb 16:05:21.317 * Ready to accept connections&#xA;db_1     | 2018-02-12 16:05:21.374 UTC [1] LOG:  database system is ready to accept connections&#xA;web_1    | DB_HOST db&#xA;web_1    |&#xA;web_1    |       App listening on 3010&#xA;web_1    |       Env: undefined&#xA;</code></pre>&#xA;<p>But when I try to make a query with GraphQL I get:&#xA;<code>&quot;message&quot;: &quot;Knex: Timeout acquiring a connection. The pool is probably full. Are you missing a .transacting(trx) call?&quot;</code></p>&#xA;<p>I really don't know why this is not working for me and it's driving me nuts. If anyone could help me with this I would be delighted. I have also added a link to my project below.</p>&#xA;<p>Thanks a lot for reading! Cheers.</p>&#xA;<p>LINK TO PROJECT: <a href=""https://github.com/Martinnord/DevBlog/tree/master/backend"" rel=""nofollow noreferrer"">https://github.com/Martinnord/DevBlog/tree/master/backend</a></p>&#xA;<h1>Updated docker-compose file:</h1>&#xA;<pre><code>version: &quot;3&quot;&#xA;services:&#xA;  redis:&#xA;    image: redis&#xA;    networks:&#xA;      - webnet&#xA;  db:&#xA;    image: postgres&#xA;    networks:&#xA;      - webnet&#xA;    environment:&#xA;      POSTGRES_PASSWORD: postgres&#xA;      POSTGRES_USER: martinnord&#xA;      POSTGRES_DB: devblog&#xA;    ports:&#xA;      - &quot;15432:5432&quot;&#xA;  web:&#xA;    image: devblog-server&#xA;    ports:&#xA;      - &quot;3010:3010&quot;&#xA;    networks:&#xA;      - webnet&#xA;    environment:&#xA;      DB_PASSWORD: password&#xA;      DB_USER: martinnord&#xA;      DB_NAME: devblog&#xA;      DB_HOST: db&#xA;      REDIS_HOST: redis&#xA;    command: [&quot;./wait-for-it.sh&quot;, &quot;db:5432&quot;, &quot;--&quot;, &quot;node&quot;, &quot;index.js&quot;]&#xA;networks:&#xA;    webnet:&#xA;</code></pre>&#xA;",7284779,,-1,2020-06-20 09:12:55,2020-10-01 08:31:45,Setting up Docker with Knex.js and PostgreSQL,<node.js><postgresql><docker><graphql><knex.js>,1,0,0,2018-02-12 16:26:58
48800297,1,,,0,668,"<p>I am getting this error after running <code>prisma init</code> command, for node advanced boilerplate.&#xA;Why can not do a simple signup mutation?  I can only get stuff working after a rollback to previous version?. Why is it so?   <a href=""https://imgur.com/a/nMqHG"" rel=""nofollow noreferrer"">https://imgur.com/a/nMqHG</a></p>&#xA;&#xA;<pre><code>warning ""graphql-yoga &gt; apollo-upload-server@4.0.0-alpha.3"" has incorrect peer dependency ""graphql@0.11 - 0.12"".&#xA;warning ""graphql-yoga &gt; graphql-playground-middleware-lambda@1.4.2"" has unmet peer dependency ""aws-lambda@^0.1.2"".&#xA;warning ""graphql-yoga &gt; graphql-subscriptions@0.5.6"" has incorrect peer dependency ""graphql@^0.10.5 || ^0.11.3 || ^0.12.0"".&#xA;warning ""graphql-yoga &gt; graphql-tools@2.18.0"" has incorrect peer dependency ""graphql@^0.11.0 || ^0.12.0"".&#xA;warning ""graphql-yoga &gt; subscriptions-transport-ws@0.9.5"" has incorrect peer dependency ""graphql@^0.10.0 || ^0.11.0 || ^0.12.0"".&#xA;warning ""graphql-yoga &gt; apollo-server-express &gt; apollo-server-core@1.3.2"" has incorrect peer dependency ""graphql@^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0"".&#xA;warning ""prisma-binding &gt; apollo-link@1.0.7"" has incorrect peer dependency ""graphql@^0.11.3 || ^0.12.3"".&#xA;warning ""graphql-yoga &gt; apollo-server-express &gt; apollo-server-core &gt; apollo-cache-control@0.0.9"" has incorrect peer dependency ""graphql@^0.10.0 || ^0.11.0 || ^0.12.0"".&#xA;warning ""graphql-yoga &gt; apollo-server-express &gt; apollo-server-core &gt; apollo-tracing@0.1.3"" has incorrect peer dependency ""graphql@^0.10.0 || ^0.11.0 || ^0.12.0"".&#xA;warning ""graphql-yoga &gt; apollo-server-express &gt; apollo-server-core &gt; graphql-extensions@0.0.7"" has incorrect peer dependency ""graphql@^0.10.0 || ^0.11.0 || ^0.12.0"".&#xA;warning ""prisma-binding &gt; graphql-tools@2.20.2"" has incorrect peer dependency ""graphql@^0.11.0 || ^0.12.0"".&#xA;warning ""graphql-cli &gt; graphql-config@2.0.0"" has unmet peer dependency ""graphql@^0.11.0 || ^0.12.0 || ^0.13.0"".&#xA;warning ""prisma &gt; prisma-cli-core &gt; graphql-cli &gt; graphql-playground-middleware-express@1.5.2"" has unmet peer dependency ""express@^4.16.2"".&#xA;[4/4] Building fresh packages...&#xA;Done in 4.45s.&#xA;[graphql create] Installing node dependencies for /home/hafiz/Documents/fcc-fullstack/votes/server/.install/package.json...&#xA;yarn install v1.3.2&#xA;warning package.json: No license field&#xA;warning ../package.json: No license field&#xA;warning install@0.0.0: No license field&#xA;[1/4] Resolving packages...&#xA;[2/4] Fetching packages...&#xA;[3/4] Linking dependencies...&#xA;warning "" &gt; graphql-boilerplate-install@0.1.8"" has unmet peer dependency ""prisma@1.0.4"".&#xA;</code></pre>&#xA;&#xA;<p>my package.json</p>&#xA;&#xA;<pre><code>{&#xA;  ""name"": ""server"",&#xA;  ""scripts"": {&#xA;    ""start"": ""nodemon -e js,graphql -x node -r dotenv/config src/index.js"",&#xA;    ""debug"": ""nodemon -e js,graphql -x node --inspect -r dotenv/config src/index.js"",&#xA;    ""playground"": ""graphql playground"",&#xA;    ""dev"": ""npm-run-all --parallel start playground""&#xA;  },&#xA;  ""dependencies"": {&#xA;    ""bcryptjs"": ""2.4.3"",&#xA;    ""graphql-yoga"": ""1.3.2"",&#xA;    ""jsonwebtoken"": ""8.1.1"",&#xA;    ""prisma-binding"": ""1.5.10""&#xA;  },&#xA;  ""devDependencies"": {&#xA;    ""dotenv"": ""5.0.0"",&#xA;    ""graphql-cli"": ""2.14.1"",&#xA;    ""nodemon"": ""1.14.12"",&#xA;    ""npm-run-all"": ""4.1.2"",&#xA;    ""prisma"": ""1.2.2""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",8794225,,10262805,2019-08-29 07:23:17,2019-08-29 07:23:17,"lots of warning on prisma , graphqlyoga",<node.js><graphql><graphql-js><prisma>,1,0,0,2018-02-15 05:09:35
48851029,2,,44863974,0,,"<p>I had started using google cloud functions, but then moved to zeit now which is serverless but I am also able to use subscriptions. Maybe you can have a look there too</p>&#xA;",6508289,,,,2018-02-18 11:15:52,"",,0,0,0,2018-02-18 11:15:52
48867632,1,48896571,,1,808,<p>I am trying to connect aws-appsync with a nextjs app. I can't figure out how to do that efficiently. </p>&#xA;&#xA;<p>I have tried using the apollo example in the next js examples on github but did not succeed. I was confused since appsync does not use in-memory cache in the examples on its documentation. </p>&#xA;&#xA;<p>Any help will be appreciated.</p>&#xA;,5541883,,7128479,2018-02-19 15:49:19,2018-02-21 00:49:38,Connect aws-appsync with nextjs,<amazon-web-services><graphql><react-apollo><next.js><aws-appsync>,1,1,0,2018-02-19 13:47:51
48938767,1,,,3,8158,"<p>I'm using Facebook's create-react-app. When I start the web-client I see in console:</p>&#xA;&#xA;<pre><code>You can now view web-client in the browser.&#xA;&#xA;  Local:            http://localhost:3000/&#xA;  On Your Network:  http://192.168.1.107:3000/&#xA;</code></pre>&#xA;&#xA;<p>The problem is my web-client uses localhost to connect to the api-server, which means I can't use the IP address on different devices to debug issues.</p>&#xA;&#xA;<p><strong>env-variables.js:</strong></p>&#xA;&#xA;<pre><code>export const ENV = process.env.NODE_ENV || 'development';&#xA;&#xA;const ALL_ENV_VARS = {&#xA;  development: {&#xA;    GRAPHQL_ENDPOINT_URI: 'http://localhost:4000/graphql',&#xA;  },&#xA;....&#xA;</code></pre>&#xA;&#xA;<p>I tried updating the above with:</p>&#xA;&#xA;<pre><code>GRAPHQL_ENDPOINT_URI: `http://${process.env.ip}:4000/graphql`,&#xA;</code></pre>&#xA;&#xA;<p>That did not work, <code>process.env.ip</code> is returning undefined. How can I get the above GRAPHQL_ENDPOINT_URI to use the IP address which somehow create-react-app is getting?</p>&#xA;",149080,,472495,2018-08-27 13:18:35,2018-08-27 13:18:35,How can I get create-react-app to use an IP to connect to my api server?,<node.js><reactjs><graphql><create-react-app><koa>,1,0,0,2018-02-22 23:13:20
48967857,2,,44321127,0,,"<p>What version of React-Relay are you using? Can you try using 1.5.0, I am facing the same issue, but I can't upgrade 1.5.0 as of now.</p>&#xA;&#xA;<p>I think 1.5.0 release might fix this problem:&#xA;<a href=""https://github.com/facebook/relay/releases/tag/v1.5.0"" rel=""nofollow noreferrer"">https://github.com/facebook/relay/releases/tag/v1.5.0</a></p>&#xA;&#xA;<p>Fix commits:</p>&#xA;&#xA;<ul>&#xA;<li>Fix end cursor when fetch returned zero edges in Pagination Container</li>&#xA;<li>Fix pagination on empty connections</li>&#xA;</ul>&#xA;",1923575,,,,2018-02-24 21:34:11,"",,0,0,0,2018-02-24 21:34:11
48971031,2,,48965279,4,,"<p>There seems to be a compatibility issue where version 0.13.1 of graphql-js breaks graphql-tag.  You can fix by manually working around the versioning issues -</p>&#xA;&#xA;<pre><code>yarn add apollo-boost@0.1.1 graphql@0.13.0 react-apollo@2.0.4&#xA;</code></pre>&#xA;&#xA;<p>For reference, here is the <a href=""https://github.com/apollographql/graphql-tag/issues/155"" rel=""nofollow noreferrer"">issue on github</a></p>&#xA;",3393624,,,,2018-02-25 06:53:54,"",,0,0,0,2018-02-25 06:53:54
48980006,1,,,2,107,"<p>I'm using webpack with my lambda project which in turn is using 'apollo-server-lambda'.  The problem is that in my webpack file I have the following</p>&#xA;&#xA;<pre><code>externals: [nodeExternals({&#xA;        whitelist: ['graphql', 'iterall', 'apollo-server-lambda', 'apollo-server-core', 'apollo-server-module-graphiql']&#xA;    })],&#xA;</code></pre>&#xA;&#xA;<p>When I run this then in turn gives me the following error</p>&#xA;&#xA;<pre><code>""errorMessage"": ""Cannot find module 'graphql-extensions'"",&#xA;</code></pre>&#xA;&#xA;<p>Even if I add this then I get another error and so on.</p>&#xA;&#xA;<p>how do I figure out all the dependencies of a particular module and then add it to the whitelist.  I specifically looking for apollo-server-lambda</p>&#xA;",7385798,,7385798,2018-02-26 00:55:52,2018-02-26 00:55:52,"lambda, webpack using node_externals require apollo-server-lambda",<webpack><apollo-server>,0,0,0,2018-02-26 00:41:05
49015442,2,,48960464,1,,"<p>It's a known issue, which has now been fixed. I imagine it'll get released to the npm registry soon.</p>&#xA;&#xA;<p><a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-js/pull/43"" rel=""nofollow noreferrer"">https://github.com/awslabs/aws-mobile-appsync-sdk-js/pull/43</a></p>&#xA;&#xA;<p><a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-js/commit/d26ea1ca1a8253df11dea8f11c1749e7bad8ef05"" rel=""nofollow noreferrer"">https://github.com/awslabs/aws-mobile-appsync-sdk-js/commit/d26ea1ca1a8253df11dea8f11c1749e7bad8ef05</a></p>&#xA;",5228806,,,,2018-02-27 18:21:33,"",,0,1,0,2018-02-27 18:21:33
49108566,2,,49061701,7,,"<h1>Solution has been found.</h1>&#xA;<p>I am a little embarrassed that this was the problem that I faced and I don't know if I should even accept this answer because of awkward I felt when I fixed the issue. But....</p>&#xA;<p>There was nothing wrong with my code, but there was a problem with the dependencies versions. I tried to backtrack everything on my app, so I decided to start from the beginning and create a new account. I expected it to work just fine, but I got this error:</p>&#xA;<pre><code>Error: Cannot use GraphQLNonNull &quot;User!&quot; from another module or realm.&#xA;&#xA;Ensure that there is only one instance of &quot;graphql&quot; in the node_modules&#xA;directory. If different versions of &quot;graphql&quot; are the dependencies of other&#xA;relied on modules, use &quot;resolutions&quot; to ensure only one version is installed.&#xA;&#xA;https://yarnpkg.com/en/docs/selective-version-resolutions&#xA;&#xA;Duplicate &quot;graphql&quot; modules cannot be used at the same time since different&#xA;versions may have different capabilities and behavior. The data from one&#xA;version used in the function from another could produce confusing and&#xA;spurious results.&#xA;</code></pre>&#xA;<p>Then I understand that something (that I didn't think of) was wrong. I checked my dependencies versions and compared them with Graphcool's example, <a href=""https://github.com/graphcool/graphql-server-example/blob/master/package.json"" rel=""noreferrer"">https://github.com/graphcool/graphql-server-example/blob/master/package.json</a>. And I noticed that my dependencies was outdated. So I upgraded them and everything worked! So that was what I had to do. Update my dependencies.</p>&#xA;<h2>Moral of the story</h2>&#xA;<p>Always, always check your damn dependencies versions...</p>&#xA;",7284779,,-1,2020-06-20 09:12:55,2018-03-05 10:41:44,"",,0,0,0,2018-03-05 10:41:44
49112635,2,,49095461,0,,"<p>I'm the author of that tutorial, which is now unfortunately very outdated...  I'm working on rewriting it in pure graphql-java (without graphql-java-tools), and this is what I'd recommend you try as well.</p>&#xA;&#xA;<p>For the time being, your issue is very likely either because the browser doesn't send the user ID (in the <code>Authorization</code> header) at all or, if it does, it doesn't match the ID in Mongo.</p>&#xA;&#xA;<p>Put a break point in <a href=""https://github.com/JonathanSum/myOwnJavaGraphqlStarterKit/blob/master/src/main/java/com/howtographql/hackernews/GraphQLEndpoint.java#L54"" rel=""nofollow noreferrer""><code>createContext</code> method</a> in <code>GraphQLEndpoint</code> and inspect what happens.</p>&#xA;&#xA;<p>The tutorial explains the code you need to add to the client to start sending the <code>Authorization</code> header, so make sure you followed that. otherwise, just make sure the ID it sends matches what you have in Mongo.</p>&#xA;",294657,,,,2018-03-05 14:26:02,"",,0,1,0,2018-03-05 14:26:02
49116060,2,,48769019,10,,"<p>That error occurs if you have two different versions of <code>graphql</code> in your entire dependency tree.</p>&#xA;&#xA;<p>Your dependencies and dev dependencies for <code>package.json</code> need to use the same version of <code>graphql</code>, and all those dependencies need to have <code>graphql</code> as their peer dependency, like this:</p>&#xA;&#xA;<pre><code>  ""peerDependencies"": {&#xA;    ""graphql"": ""^0.11.0 || ^0.12.0 || ^0.13.0""&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Note that in your own <code>package.json</code>, you don't need the peer dependency. Here's an example of dependencies in your <code>package.json</code> that fulfill the requirements I mentioned above:</p>&#xA;&#xA;<pre><code>  ""dependencies"": {&#xA;    ""graphql-yoga"": ""1.4.3"",&#xA;    ""prisma-binding"": ""1.5.16""&#xA;  },&#xA;  ""devDependencies"": {&#xA;    ""graphql-cli"": ""2.15.8"",&#xA;    ""prisma"": ""1.3.3""&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>I copied the dependencies from <a href=""https://github.com/graphql-boilerplates/typescript-graphql-server/blob/c1ffe6899abc0f6a34c3306bf5161ccd3175de44/advanced/package.json"" rel=""noreferrer"">here</a>.</p>&#xA;&#xA;<p>Update your <code>package.json</code> to the above dependencies , then <code>rm -rf node_modules yarn.lock</code> and <code>npm install</code> or <code>yarn</code>.</p>&#xA;",1176596,,,,2018-03-05 17:20:17,"",,0,0,0,2018-03-05 17:20:17
49128341,2,,49081288,5,,"<p>Can you try:</p>&#xA;<pre><code>student(query:&quot;created_datime BETWEEN {'2018-02-24@14:59:43:842', '2018-02-28@14:59:43:842'}&quot;){&#xA;</code></pre>&#xA;<blockquote>&#xA;<p>Notice the <strong>@</strong> instead of the <strong>T</strong> in question.</p>&#xA;</blockquote>&#xA;",2413303,,495455,2022-01-22 04:49:53,2022-01-22 04:49:53,"",,0,0,0,2018-03-06 10:15:08
49180962,2,,49175623,11,,"<p>Yup, you can mark fields as deprecated like this:</p>&#xA;&#xA;<pre><code>type Car {&#xA;  id: ID!&#xA;  make: String&#xA;  model: String&#xA;  description: String @deprecated(reason: ""Field is deprecated!"")&#xA;}&#xA;</code></pre>&#xA;",6024220,,,,2018-03-08 19:24:44,"",,0,3,0,2018-03-08 19:24:44
49297862,2,,45455877,8,,"<p>Basically, you have to replace lochalhost with your machine's IP address. The issue was reporeted here,  <a href=""https://github.com/apollographql/apollo-client/issues/1757"" rel=""noreferrer"">https://github.com/apollographql/apollo-client/issues/1757</a> </p>&#xA;&#xA;<p>To check your IP address, refer to this video <a href=""https://www.youtube.com/watch?v=TRFtQzx0Y0M"" rel=""noreferrer"">https://www.youtube.com/watch?v=TRFtQzx0Y0M</a></p>&#xA;",7845404,,,,2018-03-15 11:07:05,"",,0,1,0,2018-03-15 11:07:05
49394718,1,,,9,29144,"<p>An Apollo server is setup, and it responds correctly to the query when using graphiql.</p>&#xA;<p>An existing react-redux app with server side rendering needs to start using graphql and make this query.</p>&#xA;<p>A component of this app has been setup to do the same query, it seems to be doing the network request, but it fails with</p>&#xA;<pre><code>Error: {&quot;graphQLErrors&quot;:[],&quot;networkError&quot;:{},&quot;message&quot;:&quot;Network error: Failed to fetch&quot;}&#xA;</code></pre>&#xA;<p>Any troubleshooting advice?</p>&#xA;",4043517,,46914,2022-10-25 04:07:57,2022-10-25 04:09:06,"Apollo client query error: ""Network error: Failed to fetch"" How to troubleshoot?",<reactjs><graphql><apollo>,5,1,0,2018-03-20 21:52:59
49418594,2,,49414923,3,,"<p>Found why <code>Blob</code> does not work, with a help of using button instead of <code>unload</code>. The issue is with chrome browser. Console shows: <code>Uncaught DOMException: Failed to execute 'sendBeacon' on 'Navigator': sendBeacon() with a Blob whose type is not any of the CORS-safelisted values for the Content-Type request header is disabled temporarily. See http://crbug.com/490015 for details.</code></p>&#xA;&#xA;<p>Django is waiting for request of <code>application/json</code> type, which according to the <a href=""http://crbug.com/490015"" rel=""nofollow noreferrer"">link from error</a> is not safe.</p>&#xA;&#xA;<p>For Firefox this issue can be fixed using Django's package <code>corsheaders</code> and add <code>CORS_ALLOW_CREDENTIALS = True</code> to the settings.</p>&#xA;",4992248,,4992248,2018-03-22 01:22:06,2018-03-22 01:22:06,"",,0,0,0,2018-03-22 00:19:42
49436277,2,,49394718,3,,"<p>I was running apollo client on localhost, and apollo server on someDomain.com, so it was a CORS issue.  After loading the page that does the query in chrome incognito mode and refreshing, this error was found in the chrome dev tools console:</p>&#xA;<pre><code>httpLink.js:71 OPTIONS https://someDomain.com/graphql 405 (Method Not Allowed)&#xA;(anonymous) @ httpLink.js:71&#xA;...&#xA;(index):1 Failed to load https://someDomain.com/graphql: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'https://localhost:8443' is therefore not allowed access. The response had HTTP status code 405. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.&#xA;</code></pre>&#xA;<p>A quick fix for this (test only) setup was to setup cors on the express apollo server like this post suggests.&#xA;<a href=""https://blog.graph.cool/enabling-cors-for-express-graphql-apollo-server-1ef999bfb38d"" rel=""nofollow noreferrer"">https://blog.graph.cool/enabling-cors-for-express-graphql-apollo-server-1ef999bfb38d</a></p>&#xA;",4043517,,46914,2022-10-25 04:09:06,2022-10-25 04:09:06,"",,0,0,0,2018-03-22 18:47:42
49518460,1,49519113,,0,210,"<p>I try to make my 1st experience with graphql in the grails context.&#xA;I'm using:  </p>&#xA;&#xA;<p>jdk1.8.0_162  </p>&#xA;&#xA;<p>Eclipse Java EE IDE for Web Developers.  </p>&#xA;&#xA;<p>Version: Oxygen.2 Release (4.7.2)  </p>&#xA;&#xA;<p>Build id: 20171218-0600  </p>&#xA;&#xA;<p>OS: Linux, v.4.4.0-116-generic, x86_64 / gtk 3.18.9<br>&#xA;Grails Version: 3.3.3</p>&#xA;&#xA;<p>Groovy Version: 2.4.14</p>&#xA;&#xA;<p>In build.gradle I entered the graphql-plugin via</p>&#xA;&#xA;<pre><code>compile ""org.grails.plugins:gorm-graphql:1.0.3.BUILD-SNAPSHOT""&#xA;</code></pre>&#xA;&#xA;<p>in the dependencies section. Starting grails ends up with build successful, run-up ends up in</p>&#xA;&#xA;<pre><code>java.lang.ClassNotFoundException: org.grails.compiler.web.converters.RenderConverterTrait&#xA;</code></pre>&#xA;&#xA;<p>Any hints on Incompatibilities or missing entries in build.gradle?</p>&#xA;&#xA;<p>Peter</p>&#xA;",3647093,,3647093,2018-03-27 18:03:58,2018-03-27 18:24:45,Using graphql plugin in grails ends up with: java.lang.ClassNotFoundException: org.grails.compiler.web.converters.RenderConverterTrait,<eclipse><grails><grails-orm><graphql>,1,0,0,2018-03-27 16:53:07
49548738,1,,,0,3162,"<p>I'm just start using graphql with apollo client, I have graphql server setup and is running localhost:4000, and here is my client</p>&#xA;&#xA;<p>index.js</p>&#xA;&#xA;<pre><code>const client = new ApolloClient({&#xA;    uri: ""http://localhost:4000/graphql"",&#xA;    cache: new InMemoryCache()&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>blog.js</p>&#xA;&#xA;<pre><code>const GET_BLOG = gql`&#xA;  {&#xA;    post(id:""5ab2b46d941953bf614e2617"") {&#xA;        title&#xA;        body&#xA;        user {&#xA;            name&#xA;            email&#xA;        }&#xA;    }&#xA;  }&#xA; &lt;Query query={GET_BLOG}&gt;...&lt;/Query&gt;&#xA;</code></pre>&#xA;&#xA;<p>I got everything working, my question is there way I can change the graphql endpoint url name, so instead of graphql, can I have something like /graphql/post, /graphql/user, I have the scheme in graphql server, but if I do two call, it will just return two /graphql in network tab</p>&#xA;",4941492,,4941492,2018-04-11 20:11:33,2018-10-22 23:44:31,How to change graphql endpoint url name,<javascript><reactjs><graphql><react-apollo>,2,0,0,2018-03-29 05:34:28
49565141,1,49576072,,3,228,"<p>I recently deployed the graphiql web app onto an embedded device that I work with and the page is marked up with extra accented ""A"" characters.  What could be causing this?</p>&#xA;&#xA;<p>Details:</p>&#xA;&#xA;<ul>&#xA;<li>This happens in both Linux Chromium and Windows Chrome.&#xA;Linux Firefox has the characters in the left pane, but not the right.</li>&#xA;<li>The cursor is followed by an ""A"" that blinks in unison with the cursor.</li>&#xA;<li>There are no errors in the console.</li>&#xA;<li>graphql version is <a href=""https://github.com/graphql/graphiql/releases"" rel=""nofollow noreferrer"">0.11.11</a>.</li>&#xA;<li>Server is Erlang Cowboy with shopgun/graphql </li>&#xA;</ul>&#xA;&#xA;<p><strong>edit</strong>: </p>&#xA;&#xA;<ul>&#xA;<li>All instances of <code>Â</code> seem to show up beside a <code>&amp;nbsp;</code>, as in <code>Â&amp;nbsp;</code></li>&#xA;<li>Possibly related to <a href=""https://stackoverflow.com/questions/1461907/html-encoding-issues-%C3%82-character-showing-up-instead-of-nbsp"">HTML encoding issues - &quot;&#194;&quot; character showing up instead of &quot;&amp;nbsp;&quot;</a></li>&#xA;</ul>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/eXIkn.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eXIkn.png"" alt=""enter image description here""></a></p>&#xA;",398021,,398021,2018-03-30 02:37:54,2018-03-30 14:15:07,Graphiql app shows extra garbage characters,<google-chrome><firefox><character-encoding><graphql><graphiql>,1,0,0,2018-03-29 21:14:30
49576072,2,,49565141,2,,"<p>It turns out the response did not specify <code>charset=utf-8</code>, hence the default of <code>ISO-8859-1</code> was assumed and caused the problem.  Adding <code>charset=utf-8</code> fixed everything.</p>&#xA;",398021,,,,2018-03-30 14:15:07,"",,0,0,0,2018-03-30 14:15:07
49583395,2,,47027283,0,,"<p>The answer was to include any interface schema you may have:</p>&#xA;&#xA;<pre><code>fragmentMatcher: new IntrospectionFragmentMatcher({&#xA;  introspectionQueryResultData: {&#xA;    __schema: {&#xA;      types: [&#xA;        {&#xA;          kind: 'INTERFACE',&#xA;          name: 'Document',&#xA;          possibleTypes: [&#xA;            {name: 'MyInterface1'},&#xA;            {name: 'SomeInterface2'},&#xA;          ],&#xA;        },&#xA;      ],&#xA;    },&#xA;  },&#xA;}),&#xA;</code></pre>&#xA;&#xA;<p>Although I recommend using apollo v2 if possible.</p>&#xA;",0,user6144056,,,2018-03-31 01:41:53,"",,0,1,0,2018-03-31 01:41:53
49658481,2,,49656535,1,,"<p>You can use <a href=""https://github.com/apollographql/apollo-fetch"" rel=""nofollow noreferrer"">apollo-fetch</a> to run standalone graphql queries that integrate with your Apollo store.</p>&#xA;",2921363,,,,2018-04-04 18:59:48,"",,0,1,0,2018-04-04 18:59:48
49832490,2,,49829531,9,,"<p>To import GraphQL queries you need a specific loader. When you are using webpack you can for example use <code>graphql-tag/loader</code> from <a href=""https://github.com/apollographql/graphql-tag"" rel=""noreferrer"">graphql-tag</a>.&#xA;It will transform your queries to JavaScript modules so that they can be imported by webpack.&#xA;Furthermore you should not put your schema and your query into the same file. I don't think the GraphQL loader is made for exporting schema definition language (even though it might be able to parse it since the GraphQL-JS parser parses both). Create a file specifically for the query. If there is only one query in the file you can import the query as <code>default</code></p>&#xA;&#xA;<pre><code>import UserQuery from 'UserQuery.graphql';&#xA;</code></pre>&#xA;&#xA;<p>If there are multiple definitions, e.g. fragments, mutations, etc. they are exported as named exports with their name.</p>&#xA;&#xA;<p>This makes everything a bit more complicated than it should with the GraphQL loader. A tip for debugging modules: You can <code>console.log</code> or inspect the contents of a module.</p>&#xA;&#xA;<pre><code>import * as file from 'UserQuery.graphql';&#xA;console.log(file);&#xA;</code></pre>&#xA;&#xA;<p>This will print the object to your (browser) console and you can see the exported names as keys in the object.</p>&#xA;",3849167,,,,2018-04-14 14:27:45,"",,0,1,0,2018-04-14 14:27:45
49884895,2,,49883550,1,,"<p>I did receive a hint from @kaqqao who informed me, that my exception is a graphql-java version mismatch. Version 8.0 which I was using is not yet compatible.</p>&#xA;&#xA;<p>Now I use the following graphql-java dependencies, and it works fine:</p>&#xA;&#xA;<pre><code>compile ""com.graphql-java:graphql-java:7.0""&#xA;compile ""com.graphql-java:graphql-java-tools:4.3.0""&#xA;compile ""com.graphql-java:graphql-java-servlet:4.7.0""&#xA;</code></pre>&#xA;&#xA;<p>@kaqqao closed with the comment ""Overriding dependency versions is scary business."". I agree ;-)</p>&#xA;",714104,,,,2018-04-17 18:16:26,"",,0,1,0,2018-04-17 18:16:26
49957205,1,,,0,3839,"<p>I've a <code>graphql-jave v8.0</code> app running on <code>Spring boot v1.5.10</code>, and I'm trying to utilize '<a href=""http://graphql.org/learn/queries/#fragments"" rel=""nofollow noreferrer"">fragment</a>' feature of GraphQL to fetch limited number of fields with the following schema type definition: </p>&#xA;&#xA;<pre><code>type School {&#xA;   id: ID&#xA;   name: String&#xA;   address: String &#xA;   age: String&#xA;   jobTitle: String &#xA;   ...&#xA;}&#xA;&#xA;fragment UserFields on School {&#xA;   age&#xA;   jobTitle&#xA;}&#xA;&#xA;type Query {&#xA;  user (id: String!): School!&#xA;}&#xA;&#xA;schema {&#xA;  query: Query&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I execute this query: </p>&#xA;&#xA;<pre><code>{&#xA;   user (id: ""123"")&#xA;   {&#xA;     ... UserFields &#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The expected result should be:</p>&#xA;&#xA;<pre><code>{&#xA;  ""user"": {&#xA;     ""age"": ""12"",&#xA;     ""jobTitle"": ""student""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, It results in the following error </p>&#xA;&#xA;<pre><code>    ""message"": ""Validation error of type UndefinedFragment: Undefined fragment &#xA;     UserFields @ 'user'"",&#xA;</code></pre>&#xA;&#xA;<p>Off course I can do this with explicitly passing the field name in the query but for the sake of example, I'm interested in utilizing <code>fragment</code> feature of GraphQL. </p>&#xA;&#xA;<p>Any idea what I'm doing wrong please?</p>&#xA;",1257986,,,,2018-04-23 22:54:05,Validation error of type UndefinedFragment: Undefined fragment,<graphql><graphql-java>,2,0,0,2018-04-21 15:15:48
49992457,2,,49826549,1,,"<p>You probably want to use resolve in the block instead of function (which is an option to the field method, and not a helper available on the block):</p>&#xA;&#xA;<pre><code>field 'd2', DirectoryType do                                                                                &#xA;  resolve FindRecord.new(:directory)                                                               &#xA;end   &#xA;</code></pre>&#xA;&#xA;<p>because Functions usually implement the same <code>call(obj, args, ctx)</code> method, then they can be considered <code>Callables</code> and you should be able to use it with the resolve helper instead of the usual way:</p>&#xA;&#xA;<pre><code>field :students, types[StudentType] do&#xA;  argument :grade, types.Int&#xA;  resolve -&gt;(obj, args, ctx) {&#xA;    Student.where(grade: args[:grade])&#xA;  }&#xA;end&#xA;</code></pre>&#xA;",3236163,,,,2018-04-24 02:15:16,"",,0,3,0,2018-04-24 02:15:16
50141915,1,,,0,278,"<p>We are trying to build a nodejs/graphql application and are trying to integrate redis for cache. Our test environment is OSX, all servers are locally installed. &#xA;This how our apollo engine configuration looks like.</p>&#xA;&#xA;<pre><code>const engine = new ApolloEngine({&#xA;      apiKey: '&lt;apollo-engine-api-key&gt;',&#xA;      origins: [{&#xA;        supportsBatch: true,&#xA;        requestTimeout: '60s',&#xA;      }],&#xA;      stores: [&#xA;        {&#xA;          name: 'acme-store',&#xA;          memcache: {&#xA;            url: ['http://127.0.0.1:6379/acme-store'],&#xA;            keyPrefix: 'acme'&#xA;          }&#xA;        }&#xA;      ],&#xA;      queryCache: {&#xA;        publicFullQueryStore: 'acme-store'&#xA;      },&#xA;    });&#xA;</code></pre>&#xA;&#xA;<p>We are using apollo client in our client application. But when the query fires, we are getting an error as follows.</p>&#xA;&#xA;<pre><code>WARN[1332] Query not stored to query cache.              &#xA;error=""error saving response to query cache: dial unix http://127.0.0.1:6379/acme-store: connect: no such file or directory""&#xA;</code></pre>&#xA;&#xA;<p>Any pointers for solving this issue while learn more about graphql/redis integration?</p>&#xA;&#xA;<p>Thanks,</p>&#xA;",2504705,,,,2018-05-02 19:12:41,Error connecting redis server for cache from a nodejs / graphQL application,<node.js><redis><graphql><react-apollo>,0,3,0,2018-05-02 19:12:41
50153422,1,50179746,,0,1227,"<p>This particular code has been now running without issues for months, this morning, without any relevant change I can pinpoint in our setup or our code I started receiving </p>&#xA;&#xA;<pre><code>ERROR Error: Uncaught (in promise): Error: Network error: Cannot convert undefined or null to object Error: Network error: Cannot convert undefined or null to object&#xA;    at new ApolloError (ApolloError.js:43)&#xA;    at eval (QueryManager.js:324)&#xA;    at eval (QueryManager.js:755)&#xA;    at Array.forEach (&lt;anonymous&gt;)&#xA;    at eval (QueryManager.js:754)&#xA;    at Map.forEach (&lt;anonymous&gt;)&#xA;    at QueryManager.broadcastQueries (QueryManager.js:749)&#xA;    at eval (QueryManager.js:251)&#xA;    at ZoneDelegate.invoke (zone.js:388)&#xA;    at Object.onInvoke (core.js:4733)&#xA;    at new ApolloError (ApolloError.js:43)&#xA;    at eval (QueryManager.js:324)&#xA;    at eval (QueryManager.js:755)&#xA;    at Array.forEach (&lt;anonymous&gt;)&#xA;    ...&#xA;    inline.bundle.js:26 (anonymous) @ main.bundle.js:1&#xA;</code></pre>&#xA;&#xA;<p>This happens because of an error at Object.keys(src).forEach:</p>&#xA;&#xA;<pre><code>var hasOwn = Object.prototype.hasOwnProperty;&#xA;export function merge(dest, src) {&#xA;    Object.keys(src).forEach(function (key) {&#xA;        var srcVal = src[key];&#xA;        if (!hasOwn.call(dest, key)) {&#xA;            dest[key] = srcVal;&#xA;        }&#xA;        else if (srcVal &amp;&amp; typeof srcVal === 'object') {&#xA;            merge(dest[key], srcVal);&#xA;        }&#xA;    });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The error is:</p>&#xA;&#xA;<pre><code>""Cannot convert undefined or null to object""&#xA;</code></pre>&#xA;&#xA;<p>merge is called from here:</p>&#xA;&#xA;<pre><code>function executeSelectionSet(selectionSet, rootValue, execContext) {&#xA;    var fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;&#xA;    var result = {};&#xA;    selectionSet.selections.forEach(function (selection) {&#xA;        if (!shouldInclude(selection, variables)) {&#xA;            // Skip this entirely&#xA;            return;&#xA;        }&#xA;        if (isField(selection)) {&#xA;            var fieldResult = executeField(selection, rootValue, execContext);&#xA;            var resultFieldKey = resultKeyNameFromField(selection);&#xA;            if (fieldResult !== undefined) {&#xA;                if (result[resultFieldKey] === undefined) {&#xA;                    result[resultFieldKey] = fieldResult;&#xA;                }&#xA;                else {&#xA;                    merge(result[resultFieldKey], fieldResult);&#xA;                }&#xA;            }&#xA;        }&#xA;        else {&#xA;            var fragment = void 0;&#xA;            if (isInlineFragment(selection)) {&#xA;                fragment = selection;&#xA;            }&#xA;            else {&#xA;                // This is a named fragment&#xA;                fragment = fragmentMap[selection.name.value];&#xA;                if (!fragment) {&#xA;                    throw new Error(""No fragment named "" + selection.name.value);&#xA;                }&#xA;            }&#xA;            var typeCondition = fragment.typeCondition.name.value;&#xA;            if (execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) {&#xA;                var fragmentResult = executeSelectionSet(fragment.selectionSet, rootValue, execContext);&#xA;                merge(result, fragmentResult);&#xA;            }&#xA;        }&#xA;    });&#xA;    if (execContext.resultMapper) {&#xA;        return execContext.resultMapper(result, rootValue);&#xA;    }&#xA;    return result;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>After I identified the field that was being parsed and the fact the it was null valued in the backend I tried to change the value and then the error moved to the next null valued field for the same node. I tried also with other queries and we have the same result. </p>&#xA;&#xA;<p>We are using django and graphene at the backend and apollo-client at the frontend. </p>&#xA;&#xA;<p>I would be grateful for any insight here, I am still trying to understand what has changed between 23:00 yesterday (latest time I tested the code that is now bombing and it all worked) and 1am tonight (time of the automated deployment on our dev server).</p>&#xA;",2028375,,,,2018-05-04 16:49:26,apollo-client Network error if field is null,<graphql><apollo-client>,1,0,0,2018-05-03 10:59:42
50161626,2,,49703299,1,,"<p>Page can be used to solve the cursor issue in mongodb, we can (new PageRequest(environment.getArgument(""Start""), environment.getArgument(""Size"")));&#xA;however the PageRequest is deprecated </p>&#xA;",7208392,,,,2018-05-03 18:24:26,"",,0,0,0,2018-05-03 18:24:26
50259044,2,,50244688,0,,"<p>I just ran into the same error. <s>I fixed it by replacing my usages of <code>watchQuery</code> with just <code>query</code>. </p>&#xA;&#xA;<p>Example old code: </p>&#xA;&#xA;<pre><code>return this.apollo&#xA;  .watchQuery&lt;GetPartnerCollectionsQuery&gt;({&#xA;    query: getPartnerCollectionsQuery,&#xA;    variables,&#xA;  })&#xA;  .valueChanges.pipe(&#xA;    map(result =&gt; {&#xA;      return result.data.getPartnerCollections.collections;&#xA;    })&#xA;  );&#xA;</code></pre>&#xA;&#xA;<p>Example new code:</p>&#xA;&#xA;<pre><code>return this.apollo&#xA;  .query&lt;GetPartnerCollectionsQuery&gt;({&#xA;    query: getPartnerCollectionsQuery,&#xA;    variables,&#xA;  })&#xA;  .pipe(&#xA;    map(result =&gt; {&#xA;      return result.data.getPartnerCollections.collections;&#xA;    })&#xA;  );&#xA;</code></pre>&#xA;&#xA;<p>Kind of bizarre that <code>watchQuery</code> doesn't seem to work anymore since it seems to be the ""correct"" kind of query, but hopefully this is just a temporary bug. </s></p>&#xA;&#xA;<p><strong>Edit:</strong> Just tracked down the official ticket for this bug:</p>&#xA;&#xA;<p><a href=""https://github.com/apollographql/apollo-angular/issues/545"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-angular/issues/545</a> </p>&#xA;&#xA;<p><strong>Edit 2:</strong>: Found official solution, update your packages to new versions that fix this bug:</p>&#xA;&#xA;<pre><code>""apollo-angular"": ""^1.1.0-rc.0"",&#xA;""apollo-angular-link-http"": ""^1.1.0-rc.0"",&#xA;</code></pre>&#xA;",9250021,,9250021,2018-05-09 17:43:33,2018-05-09 17:43:33,"",,0,0,0,2018-05-09 17:32:28
50316701,2,,50315437,1,,<p>It thinks <code>gql</code> is something other than a function (probably undefined).  Should be easy enough to print it out and see.  I wouldn't be surprised if you have a bad version of graphql-tag.  Set it to a fixed version in package.json</p>&#xA;,14609,,,,2018-05-13 13:35:39,"",,0,3,0,2018-05-13 13:35:39
50318913,1,,,1,1739,"<p>Attempting to create a project based off <a href=""https://github.com/serverless/serverless-graphql/blob/master/app-backend/dynamodb/handler.js"" rel=""nofollow noreferrer"">https://github.com/serverless/serverless-graphql/blob/master/app-backend/dynamodb/handler.js</a>. The code works well, but for some reason, I always get a log warning telling me <code>context.done called twice</code>.</p>&#xA;&#xA;<pre><code>import { graphqlLambda, graphiqlLambda, LambdaHandler } from 'apollo-server-lambda'&#xA;import lambdaPlayground from 'graphql-playground-middleware-lambda'&#xA;import { makeExecutableSchema } from 'graphql-tools'&#xA;&#xA;import { resolvers } from './resolvers'&#xA;&#xA;const typeDefs = require('./schema.gql')&#xA;const schema = makeExecutableSchema({ typeDefs, resolvers, logger: console })&#xA;&#xA;export const graphqlHandler: LambdaHandler = async (event, context) =&gt; {&#xA;  const handler = graphqlLambda({ schema })&#xA;  return handler(event, context, (error: Error | undefined, output: any) =&gt; {&#xA;    output.headers['Access-Control-Allow-Origin'] = '*'&#xA;    context.done(error, output)&#xA;  })&#xA;}&#xA;&#xA;export const playgroundHandler = lambdaPlayground({&#xA;  endpoint: '/graphql',&#xA;})&#xA;&#xA;export const graphiqlHandler: any = graphiqlLambda({&#xA;  endpointURL: '/graphql',&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>This code gives me the following result: </p>&#xA;&#xA;<pre><code>Serverless: POST /graphql (λ: graphql)&#xA;Serverless: [200] {""statusCode"":200,""headers"":{""Content-Type"":""application/json"",""Access-Control-Allow-Origin"":""*""},""body"":""{\""data\"":{\""getUserInfo\"":\""ads\""}}""}&#xA;&#xA;Serverless: Warning: context.done called twice within handler 'graphql'!&#xA;</code></pre>&#xA;&#xA;<p>What is even more strange is that if I comment the <code>context.done</code> call, I get the following output (the call stalls as expected):</p>&#xA;&#xA;<pre><code>Serverless: POST /graphql (λ: graphql)&#xA;&#xA;Serverless: Warning: context.done called twice within handler 'graphql'!&#xA;</code></pre>&#xA;",262831,,,,2020-08-10 18:14:39,context.done called twice within handler 'graphql',<node.js><aws-lambda><graphql><serverless>,2,0,0,2018-05-13 17:44:37
50319210,1,,,0,675,<p>I am using makeRemoteExecutableSchema in graphql-tools to retrieve a remote schema and I am then merging it with a local schema.  I would like to add a prefix to the type names on the remote schema.  Is there an easy way to do this?</p>&#xA;,2916256,,,,2018-12-10 17:04:39,Alias type names of remote GraphQL schema,<graphql><graphql-js><graphql-tools>,1,0,0,2018-05-13 18:17:24
50343933,2,,50334424,1,,"<p>OK, so I installed a fresh version of the nuxt starter template today and migrated only the essentials to get apollo working. It worked immediately. I have no clue what was causing the error and due to the fact that I already had a dozen packages installed we probably will never know. </p>&#xA;",4462086,,,,2018-05-15 06:50:27,"",,0,0,0,2018-05-15 06:50:27
50372019,1,,,3,505,"<p>I'm currently using react-apollo in a react-native app and I'm facing an issue.</p>&#xA;&#xA;<p>Whenever I try to make a query containing an union, it fails, throwing the following network error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Network error: Requested keys of a value that is not an object</p>&#xA;</blockquote>&#xA;&#xA;<p>I'm using the exact same code in a React.js app, which works just fine. The GraphQL endpoint is my own server, developed in PHP with the Youshido bundle.</p>&#xA;&#xA;<p>Here's the fragment declaration part :</p>&#xA;&#xA;<pre><code>const httpLink = new HttpLink({uri: 'http://10.1.68.64:8000/graphql'});&#xA;&#xA;const fragmentMatcher = new IntrospectionFragmentMatcher({&#xA;    introspectionQueryResultData: {&#xA;      __schema: {&#xA;        types: [&#xA;          {&#xA;            ""kind"": ""UNION"",&#xA;            ""name"": ""QuestionUnion"",&#xA;            ""possibleTypes"": [&#xA;              {&#xA;                ""name"": ""QuestionUnionTypeA""&#xA;              },&#xA;              {&#xA;                ""name"": ""QuestionUnionTypeB""&#xA;              },&#xA;              {&#xA;                ""name"": ""QuestionUnionTypeC""&#xA;              }&#xA;            ]&#xA;          },&#xA;        ],&#xA;      },&#xA;    }&#xA;});&#xA;&#xA;const cache = new InMemoryCache({ fragmentMatcher });&#xA;&#xA;const client = new ApolloClient({&#xA;    link: httpLink,&#xA;    cache: cache,&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>The query in a Screen.js file (Exactly the same in React.js and react-native):</p>&#xA;&#xA;<pre><code>const FindForm = gql`query FindForm($id: ID!){&#xA;    findForm(id: $id){&#xA;        id&#xA;        title&#xA;        questions {&#xA;            id&#xA;            ... on QuestionUnionTypeA {&#xA;                parameterA&#xA;            } &#xA;            ... on QuestionUnionTypeB {&#xA;                parameterB&#xA;            }&#xA;            ... on QuestionUnionTypeC {&#xA;                parameterC&#xA;            }&#xA;        }&#xA;    }&#xA;}`;&#xA;</code></pre>&#xA;&#xA;<p>The part using the query in the same Screen.js file:</p>&#xA;&#xA;<pre><code>const resultDisplayer = ({ data }) =&gt; {&#xA;    if(data.error){&#xA;        return &lt;Text&gt; {JSON.stringify(data)} &lt;/Text&gt;;&#xA;    }&#xA;    if(data.loading){&#xA;        return &lt;Spinner/&gt;;&#xA;    }&#xA;    else {&#xA;        return &lt;Text&gt; Ok &lt;/Text&gt;;&#xA;    }&#xA;};&#xA;&#xA;const query = graphql(FindForm, {&#xA;    options: {&#xA;        variables: {&#xA;            id: this.state.id,&#xA;        }&#xA;    }&#xA;})(resultDisplayer);&#xA;</code></pre>&#xA;&#xA;<p>The troubling part is that the error is not thrown in a few cases:</p>&#xA;&#xA;<ul>&#xA;<li>When I'm remotely debugging the app</li>&#xA;<li>When the query does not contain the union part</li>&#xA;<li>When the union part has nothing to return (If there are no instance of QuestionUnionTypeA, B and C)</li>&#xA;</ul>&#xA;&#xA;<p>Thus I guess I'm doing something wrong but I can't seem to find where I've been mistaken. If you guys have any idea, I'm willing to try anything that comes up.</p>&#xA;",6315852,,,,2018-05-16 13:16:45,Using GraphQL's union with apollo-react in react-native,<react-native><graphql><apollo><react-apollo>,0,4,0,2018-05-16 13:16:45
50421838,1,,,1,750,"<p>works on every browser except Internet Explorer where the following error occurs.</p>&#xA;&#xA;<blockquote>&#xA;  <p>SCRIPT5022: Cannot use undefined ""Boolean"" from another module or&#xA;  realm. Ensure that there is only one instance of ""graphql"" in the&#xA;  node_modules directory. If different versions of ""graphql"" are the&#xA;  dependencies of other relied on modules, use ""resolutions"" to ensure&#xA;  only one version is installed.&#xA;  <a href=""https://yarnpkg.com/en/docs/selective-version-resolutions"" rel=""nofollow noreferrer"">https://yarnpkg.com/en/docs/selective-version-resolutions</a> Duplicate&#xA;  ""graphql"" modules cannot be used at the same time since different&#xA;  versions may have different capabilities and behavior. The data from&#xA;  one version used in the function from another could produce confusing&#xA;  and spurious results.</p>&#xA;</blockquote>&#xA;&#xA;<p>from <code>./node_modules/graphql/module/jsutils/instanceOf.js</code></p>&#xA;&#xA;<pre><code> if (value) {&#xA;    var valueConstructor = value.constructor;&#xA;    if (valueConstructor &amp;&amp; valueConstructor.name === constructor.name) {&#xA;      throw new Error(""Cannot use "" + constructor.name + "" \"""" + value + ""\"" from another module or realm.Ensure that there is only one instance of \""graphql\"" in the node_modules directory. If different versions of \""graphql\"" are the dependencies of other relied on modules, use \""resolutions\"" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \""graphql\"" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results."");&#xA;</code></pre>&#xA;",5307509,,,,2018-10-18 21:56:32,"IE - graphql - SCRIPT5022: Cannot use undefined ""Boolean"" from another module or realm",<javascript><reactjs><internet-explorer><webpack><graphql>,2,1,0,2018-05-19 04:41:50
50423331,2,,49965663,8,,"<p>This is because you are missing global id field on your type. </p>&#xA;&#xA;<p>I had the same issue, but adding</p>&#xA;&#xA;<pre><code>type MyType = {&#xA;  id: ID&#xA;   ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>solved the problem.</p>&#xA;&#xA;<p>See also <a href=""https://github.com/facebook/relay/issues/1880#issuecomment-307705428"" rel=""noreferrer"">https://github.com/facebook/relay/issues/1880#issuecomment-307705428</a></p>&#xA;",4557188,,441387,2018-12-19 06:27:13,2018-12-19 06:27:13,"",,0,1,0,2018-05-19 08:28:00
50450109,1,,,4,7230,"<p>I do import graphQL query as:</p>&#xA;&#xA;<pre><code>import {getStudents} from'./../graphql/Queries.graphql'&#xA;</code></pre>&#xA;&#xA;<p>Queries.graphql file:</p>&#xA;&#xA;<pre><code>query getStudents($schoolID: Int!){&#xA;  allStudents(schoolId: $schoolID){&#xA;    pickUpLat&#xA;    pickUpLng&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>but when I try to pass the query to the component as:</p>&#xA;&#xA;<pre><code>export default graphql(getStudents, {&#xA;  options: (props) =&gt; ({ variables: { schoolID: props.schoolID } })&#xA;})( StudentsMap );&#xA;</code></pre>&#xA;&#xA;<p>I get this error:</p>&#xA;&#xA;<pre><code>Uncaught Error: Argument of undefined passed to parser was not a valid GraphQL DocumentNode. You may need to use 'graphql-tag' or another method to convert your operation into a document&#xA;    at invariant (browser.js:38)&#xA;    at parser (react-apollo.browser.umd.js:199)&#xA;    at graphql (react-apollo.browser.umd.js:1061)&#xA;    at Object../src/map/StudentsMap.js (StudentsMap.js:96)&#xA;    at __webpack_require__ (bootstrap b06dc52180087582baaa:19)&#xA;    at Object../src/App.js (App.css?9a66:26)&#xA;    at __webpack_require__ (bootstrap b06dc52180087582baaa:19)&#xA;    at Object../src/index.js (index.css?f255:26)&#xA;    at __webpack_require__ (bootstrap b06dc52180087582baaa:19)&#xA;    at Object.0 (registerServiceWorker.js:117)&#xA;</code></pre>&#xA;&#xA;<p>However, if I define the query in the same file of component (not importing it) as:</p>&#xA;&#xA;<pre><code>const getStudents= gql`&#xA;query getStudents($schoolID: Int){&#xA;  allStudents(schoolId: $schoolID){&#xA;    pickUpLat&#xA;    pickUpLng&#xA;  }&#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>then it does work normally, any idea why I get that error when try to import the query?</p>&#xA;&#xA;<p>Here is my <code>webpack.config.js</code> settings: (based on this <a href=""https://www.apollographql.com/docs/react/recipes/webpack.html"" rel=""nofollow noreferrer"">reference</a>)</p>&#xA;&#xA;<pre><code>var webpack = require('webpack');&#xA;&#xA;   module: {&#xA;  rules: [&#xA;    {&#xA;      test: /\.(graphql|gql)$/,&#xA;      exclude: /node_modules/,&#xA;      loader: 'graphql-tag/loader',&#xA;    },&#xA;  ],&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It seems that Loading queries with Webpack fails? or what it could be?</p>&#xA;",396681,,396681,2018-05-22 07:25:58,2018-06-06 16:58:55,Why I get Argument of undefined passed to parser was not a valid GraphQL DocumentNode?,<reactjs><webpack><graphql><graphql-tag>,0,3,0,2018-05-21 13:34:11
50451732,1,52638016,,11,7058,"<p>Is there any reason to use <code>IntrospectionFragmentMatcher</code> to determine concrete types of values returned from interface and union fields? </p>&#xA;&#xA;<p>I'm talking about <code>apollo-client</code>. I'm using <code>InMemoryCache</code> with <code>addTypename: true</code>, so the type is known the moment the client gets the response. </p>&#xA;&#xA;<p>Meanwhile my console is plagued with warnings like these: <a href=""https://i.stack.imgur.com/GPrlY.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/GPrlY.png"" alt=""console warnings""></a></p>&#xA;&#xA;<p>The only reason I see the documentation hint at is response validation. But why validate the server-sent response at all? If the server is not worth trusting, validation is useless anyway.</p>&#xA;",1543004,,,,2021-08-12 07:29:31,Why use IntrospectionFragmentMatcher?,<apollo>,2,1,0,2018-05-21 15:11:12
50477647,2,,50421838,2,,"<p>You need to add a <em>polyfill</em> to support <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name"" rel=""nofollow noreferrer"">Function.name</a> in IE11.</p>&#xA;",9831326,,,,2018-05-22 23:09:22,"",,0,0,0,2018-05-22 23:09:22
50506847,2,,50391575,1,,"<p>When an exception occurs the error is wrapped again in a <code>GraphQLError</code></p>&#xA;&#xA;<blockquote>&#xA;  <p>return new _GraphQLError.GraphQLError(originalError &amp;&amp; originalError.message, originalError &amp;&amp; originalError.nodes || nodes, originalError &amp;&amp; originalError.source, originalError &amp;&amp; originalError.positions, path, originalError);</p>&#xA;</blockquote>&#xA;&#xA;<p>So your actual error is in <code>originalError</code>. So if I change your console to</p>&#xA;&#xA;<pre><code>  console.log(err.originalError.customField); // =&gt; undefined&#xA;</code></pre>&#xA;&#xA;<p>I get correct output</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/msYQa.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/msYQa.png"" alt=""Error custom fields""></a></p>&#xA;",2830850,,,,2018-05-24 10:21:57,"",,0,0,0,2018-05-24 10:21:57
50591209,1,,,1,224,"<p>We are able to extend our remote schema, but with one major caveat: the new field cannot be queried for on it's own; it must be included with at least one field from the remote.  Is it possible to query for just the extended field?  </p>&#xA;&#xA;<p>In the example below, I have extended ""name"" to include the field ""catsName.""  If I query for ""first,"" the query works.  If I query for ""catsName"" and ""first,"" the query works.  If I query for just ""catsName,"" it returns an internal server error with status code 400.</p>&#xA;&#xA;<p>Note :&#xA;- When we extend non-remote fields, we do not have this issue. &#xA;- Our remote GraphQL engine uses Absinthe (Erlang/Elixir).  We use Apollo locally.  Our goal is to support the legacy Absinthe GraphQL implementation.</p>&#xA;&#xA;<p><strong>Working Query :</strong></p>&#xA;&#xA;<pre><code>query{&#xA;    user{&#xA;        profile{&#xA;            personal{&#xA;                name{   // extend type name&#xA;                     catsName // New field&#xA;                     first    // Original field &#xA;}}}}}&#xA;</code></pre>&#xA;&#xA;<p><strong>Non-working Query :</strong></p>&#xA;&#xA;<pre><code>query{&#xA;    user{&#xA;        profile{&#xA;            personal{&#xA;                name{   // extend type name&#xA;                     catsName // New field&#xA;}}}}}&#xA;</code></pre>&#xA;&#xA;<p><strong>Error :</strong></p>&#xA;&#xA;<blockquote>&#xA;  <p>""message"": ""Field \""name\"" of type \""UserPersonalName\"" must have a &#xA;   selection of subfields. Did you mean \""name { ... }\""?""</p>&#xA;</blockquote>&#xA;&#xA;<p>After further research we determined that the reason for this is that user, profile, personal, and name exist on the remote server.  The extension of ""catsName"" exists locally.  If we query for just catsName, our engine has no way of knowing that the root fields exist, and therefore returns an error.  If we include at least one remote field in our query, the local engine knows to fetch the remote and is able to return all of the data.</p>&#xA;",9866067,,9866067,2018-05-30 19:15:23,2018-05-30 19:15:23,Apollo graphql remote schema extending is dependent on remote fields,<graphql><apollo>,0,0,0,2018-05-29 19:00:32
50607532,1,,,3,894,"<p>I have the following setup:</p>&#xA;&#xA;<ul>&#xA;<li>aws-amplify-react</li>&#xA;<li>appsync</li>&#xA;<li>create-react-app</li>&#xA;</ul>&#xA;&#xA;<p>and following this documentation: <a href=""https://aws.github.io/aws-amplify/media/api_guide#connect"" rel=""nofollow noreferrer"">https://aws.github.io/aws-amplify/media/api_guide#connect</a></p>&#xA;&#xA;<p>As in the doc, rendering this gives me 2x <code>undefined</code> data before returning the correct data. This breaks the app, as nested fields (in my example, e.g. <code>getRoom.id</code>) cannot be accessed.</p>&#xA;&#xA;<p>Component example:</p>&#xA;&#xA;<pre><code>export const AppSyncTest = () =&gt; (&#xA;  &lt;Connect query={graphqlOperation(query)}&gt;&#xA;    {({ data: { getRoom } }) =&gt; {&#xA;&#xA;      console.log(getRoom); // returns undefined 2x before data is there&#xA;&#xA;      if (!getRoom) { // without this, app breaks&#xA;        return 'why? (can even happen if loading is false)';&#xA;      }&#xA;&#xA;      return (&#xA;        &lt;div className=""App""&gt;&#xA;          &lt;header className=""App-header""&gt;&#xA;            &lt;h1 className=""App-title""&gt;Welcome to IntelliFM WebApp&lt;/h1&gt;&#xA;          &lt;/header&gt;&#xA;          &lt;p className=""App-intro""&gt;&#xA;            Found room {getRoom.id} with label {getRoom.label} and description{' '}&#xA;            {getRoom.description}&#xA;          &lt;/p&gt;&#xA;        &lt;/div&gt;&#xA;      );&#xA;    }}&#xA;  &lt;/Connect&gt;&#xA;);&#xA;</code></pre>&#xA;",1783228,,,,2019-08-20 06:56:21,aws-amplify-react Connect returns undefined data first,<graphql><aws-appsync><aws-amplify>,2,0,0,2018-05-30 14:43:23
50682133,2,,50667559,0,,<p>You should try to downgrade <code>grapqh</code> and <code>graphql-tag</code></p>&#xA;,3270598,,3270598,2018-06-04 13:53:23,2018-06-04 13:53:23,"",,0,1,0,2018-06-04 13:47:26
50688998,1,50689652,,39,32284,"<p>I am attempting to use an Apollo Client on a node.js server to interface with another GraphQL API using the following code:</p>&#xA;&#xA;<pre><code>import fetch from 'node-fetch'&#xA;import { createHttpLink } from 'apollo-link-http'&#xA;&#xA;import ApolloClient from 'apollo-boost'&#xA;import { API_URL } from '...'&#xA;&#xA;const client = new ApolloClient({&#xA;  link: createHttpLink({&#xA;    uri: API_URL,&#xA;    fetch: fetch,&#xA;  }),&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>Which yields the following error:</p>&#xA;&#xA;<pre><code>module initialization error: Error&#xA;fetch is not found globally and no fetcher passed, to fix pass a fetch for&#xA;your environment like https://www.npmjs.com/package/node-fetch.&#xA;&#xA;For example:&#xA;import fetch from 'node-fetch';&#xA;import { createHttpLink } from 'apollo-link-http';&#xA;&#xA;const link = createHttpLink({ uri: '/graphql', fetch: fetch });&#xA;at Object.checkFetcher (/var/task/node_modules/apollo-link-http-common/lib/bundle.umd.js:78:19)&#xA;at createHttpLink (/var/task/node_modules/apollo-link-http/lib/bundle.umd.js:32:30)&#xA;at new HttpLink (/var/task/node_modules/apollo-link-http/lib/bundle.umd.js:203:38)&#xA;at new DefaultClient (/var/task/node_modules/apollo-boost/lib/index.js:80:24)&#xA;</code></pre>&#xA;&#xA;<p>I understand that the Apollo Client by default is expecting to be run in a browser context where a <code>fetch</code> method will be available, and that in a node.js I need to polyfill or otherwise provide a <code>fetch</code> method, but I having trouble figuring out exactly how to do this.</p>&#xA;&#xA;<p>Following the example code at <a href=""https://www.apollographql.com/docs/link/#apollo-client"" rel=""noreferrer"">https://www.apollographql.com/docs/link/#apollo-client</a> it appears that I should be able to pass this information in using the <code>link</code> option, and reading the <code>apollo-boost</code> source code seems to suggest that you can pass this information in using <code>fetcherOptions</code>, but neither of these solutions seem to work.</p>&#xA;&#xA;<p>Can anyone provide some example code for initializing an Apollo Client in node.js with a fetcher?</p>&#xA;&#xA;<p>For reference here is my <code>package.json</code></p>&#xA;&#xA;<pre><code>{&#xA;  ""name"": ""API-Service"",&#xA;  ""version"": ""1.0.0"",&#xA;  ""description"": """",&#xA;  ""private"": true,&#xA;  ""scripts"": {},&#xA;  ""dependencies"": {&#xA;    ""apollo-boost"": ""^0.1.6"",&#xA;    ""apollo-link-http"": ""^1.5.4"",&#xA;    ""graphql"": ""^0.13.2"",&#xA;    ""babel-polyfill"": ""^6.26.0"",&#xA;    ""json-rules-engine"": ""^2.1.0"",&#xA;    ""node-fetch"": ""^2.1.2"",&#xA;    ""mysql"": ""^2.15.0""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1291473,,1291473,2018-06-04 21:40:06,2020-06-21 16:47:24,"Using ApolloClient with node.js. ""fetch is not found globally and no fetcher passed""",<node.js><polyfills><apollo-client>,6,1,0,2018-06-04 21:25:51
50690493,1,,,2,834,<p>I am trying to get the schema for GitHub using get-graphql-schema but am getting an error :-</p>&#xA;&#xA;<pre><code># npm install -g get-graphql-schema&#xA;# get-graphql-schema https://api.github.com/graphql&#xA;&#xA;*TypeError: Cannot read property '__schema' of undefined&#xA;  at Object.buildClientSchema &#xA;  (C:\Users\Aaron\AppData\Roaming\npm\node_modules\get-graphql-schema\node_modules\graphql\utilities\buildClientSchema.js:48:43)*&#xA;</code></pre>&#xA;&#xA;<p>I get the same for Facebook I am not sure if this is because they don't give the schemas or whether its an error with <strong>get-graphql-schema</strong>.</p>&#xA;&#xA;<p>How do I programmatically get the schema using GraphQl normally in the GraphiQL explorer ?</p>&#xA;,2611132,,2611132,2018-07-10 18:02:56,2018-07-10 18:02:56,Getting GraphQl __schema for GitHub,<facebook><github><schema><graphql>,1,0,0,2018-06-05 00:34:46
50749931,2,,50748288,5,,<p>Thanks for asking this one. Meet my two favorite commands:- </p>&#xA;&#xA;<ol>&#xA;<li><p><code>armaggedon</code> - remove everything and images</p></li>&#xA;<li><p><code>docker-wipe</code> - remove everything but not images</p></li>&#xA;</ol>&#xA;&#xA;<p>Keep them in your environment via the respective profile file. </p>&#xA;&#xA;<pre><code>removecontainers() {&#xA;  docker stop $(docker ps -aq)&#xA;  docker rm $(docker ps -aq)&#xA;}&#xA;&#xA;armaggedon() {&#xA;  removecontainers&#xA;  docker network prune -f&#xA;  docker rmi -f $(docker images --filter dangling=true -qa)&#xA;  docker volume rm $(docker volume ls --filter dangling=true -q)&#xA;  docker rmi -f $(docker images -qa)&#xA;}&#xA;&#xA;docker-wipe() {&#xA;  docker kill $(docker ps -aq)&#xA;  docker rm $(docker ps -aq)&#xA;}&#xA;</code></pre>&#xA;,1366216,,,,2018-06-07 20:46:46,"",,0,1,0,2018-06-07 20:46:46
50779328,1,50780007,,1,633,"<p>My readQuery is returning a <code>field not found</code> error, even though it seems like the field is present in the cache.</p>&#xA;&#xA;<p><strong>QUERY</strong></p>&#xA;&#xA;<pre><code>const GETIMSFROMCACHE_QUERY = gql`&#xA;query getIMsFromCache($fromID: String!){&#xA;  instant_message(fromID:$fromID){&#xA;    id,&#xA;    fromID,&#xA;    toID,&#xA;    msgText&#xA;  }&#xA;}  `;&#xA;</code></pre>&#xA;&#xA;<p><strong>CACHE RESOLVER</strong></p>&#xA;&#xA;<pre><code>client.cache.cacheResolvers = {&#xA;    Query: {&#xA;        instant_message: (_, args) =&gt; toIdValue(client.dataIdFromObject({&#xA;            __typename: 'instant_message',&#xA;            id: args.id&#xA;        })),&#xA;    },&#xA;};&#xA;</code></pre>&#xA;&#xA;<p><strong>READQUERY CALL, IN UPDATE</strong></p>&#xA;&#xA;<pre><code>let instant_message = cache.readQuery({ query: GETIMSFROMCACHE_QUERY, variables: {""fromID"": fromID} });&#xA;</code></pre>&#xA;&#xA;<p><strong>ERROR</strong></p>&#xA;&#xA;<pre><code>Error: Can't find field instant_message({""fromID"":""ayqNLcA7c6r8vip3i""}) on object (ROOT_QUERY) {&#xA;  ""getMyUserData({\""id\"":\""ayqNLcA7c6r8vip3i\""})"": [&#xA;    {&#xA;      ""type"": ""id"",&#xA;      ""generated"": false,&#xA;      ""id"": ""MyUserData:ayqNLcA7c6r8vip3i"",&#xA;      ""typename"": ""MyUserData""&#xA;    }&#xA;  ],&#xA;  ""getMyUserData({\""id\"":\""9W95z8A7Y6i34buk7\""})"": [&#xA;    {&#xA;      ""type"": ""id"",&#xA;      ""generated"": false,&#xA;      ""id"": ""MyUserData:9W95z8A7Y6i34buk7"",&#xA;      ""typename"": ""MyUserData""&#xA;    }&#xA;  ],&#xA;  ""Appts({\""originatingUserID\"":\""ayqNLcA7c6r8vip3i\""})"": [],&#xA;  ""instant_message({\""fromID\"":\""ayqNLcA7c6r8vip3i\"",\""toID\"":\""9W95z8A7Y6i34buk7\""})"": [&#xA;    {&#xA;      ""type"": ""id"",&#xA;      ""generated"": false,&#xA;      ""id"": ""instant_message:126"",&#xA;      ""typename"": ""instant_message""&#xA;    },&#xA;    {&#xA;      ""type"": ""id"",&#xA;      ""generated"": false,&#xA;      ""id"": ""instant_message:127"",&#xA;      ""typename"": ""instant_message""&#xA;    },&#xA;    {&#xA;      ""type"": ""id"",&#xA;      ""generated"": false,&#xA;      ""id"": ""instant_message:128"",&#xA;      ""typename"": ""instant_message""&#xA;    }&#xA;  ]&#xA;}.&#xA;</code></pre>&#xA;&#xA;<p>Looking at the error message, there seems to be a <code>instant_message</code> object present on the ROOT_QUERY object with the target user id, but I'm getting this error.</p>&#xA;&#xA;<p>How can I correct this?</p>&#xA;&#xA;<p>Thanks in advance to all for any info.</p>&#xA;",364966,,364966,2018-06-10 01:53:26,2018-06-10 02:05:40,ApolloGraphQL -- ReadQuery `Field Not Found` Error?,<graphql><apollo><apollo-client><apollostack>,1,0,0,2018-06-09 23:20:11
50840236,2,,50839807,1,,"<p>What the example is saying that <code>genUsers</code> should use the credentials of the current request's user (identified by their auth token) to ensure they can only fetch data that they're allowed to see. Essentially, the loader gets initialised at the start of the request, and then discarded at the end, and never recycled between requests.</p>&#xA;",15687,,,,2018-06-13 14:50:32,"",,0,0,0,2018-06-13 14:50:32
50861444,2,,50848150,1,,"<p>Resolved, the feature <code>inheritResolversFromInterfaces: true</code> was added in version v2.24.0, need to have that version in order to use that feature.</p>&#xA;",9335323,,,,2018-06-14 15:49:11,"",,0,0,0,2018-06-14 15:49:11
50918574,1,,,1,53,"<p>Is join-monster for GraphQL compatible with strapi? are there any implementation how to's available?</p>&#xA;&#xA;<p>Cheers, Rodrigo</p>&#xA;",2877777,,,,2018-06-18 23:06:13,graphql join-monster compatibility with strapi io,<graphql><strapi>,0,0,0,2018-06-18 23:06:13
50938342,2,,46647060,0,,<p>with the following versions </p>&#xA;&#xA;<pre><code>- Apollo (0.8.0):&#xA;    - Apollo/Core (= 0.8.0)&#xA;- Apollo/Core (0.8.0)&#xA;</code></pre>&#xA;&#xA;<p>I had to change</p>&#xA;&#xA;<p><code>$APOLLO_FRAMEWORK_PATH/check-and-run-apollo-codegen.sh</code></p>&#xA;&#xA;<p>to:</p>&#xA;&#xA;<p><code>$APOLLO_FRAMEWORK_PATH/Resources/check-and-run-apollo-codegen.sh</code></p>&#xA;,4573574,,184201,2018-06-20 07:06:06,2018-06-20 07:06:06,"",,0,0,0,2018-06-19 23:46:26
50992284,2,,50991392,2,,"<p>You should use proxy in create-react-app project.</p>&#xA;&#xA;<p>Add following proxy in <code>package.json</code> main object:</p>&#xA;&#xA;<pre><code>""/graphql"": {&#xA;  ""target"": ""http://localhost:8080/"",&#xA;  ""changeOrigin"": true&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It basically proxy's your request from ""<a href=""http://localhost:3000/graphql"" rel=""nofollow noreferrer"">http://localhost:3000/graphql</a>"" to ""<a href=""http://localhost:8080/graphql"" rel=""nofollow noreferrer"">http://localhost:8080/graphql</a>"".</p>&#xA;&#xA;<p>Also change your code to use relative api url. So now it would be: </p>&#xA;&#xA;<pre><code> uri: '/graphql'&#xA;</code></pre>&#xA;&#xA;<p>This will make an api call to your local url and node server will proxy it to mentioned target. Hence no cross origin involved here.</p>&#xA;",3707166,,,,2018-06-22 16:38:24,"",,0,0,0,2018-06-22 16:38:24
51003222,2,,50690493,1,,"<p>Okay heres a GraphQL script that programmatically queries the __schema entry :-</p>&#xA;&#xA;<pre><code>  query IntrospectionQuery {&#xA;    __schema {&#xA;      queryType { name }&#xA;      mutationType { name }&#xA;      subscriptionType { name }&#xA;      types {&#xA;        ...FullType&#xA;      }&#xA;      directives {&#xA;        name&#xA;        description&#xA;        args {&#xA;          ...InputValue&#xA;        }&#xA;        onOperation&#xA;        onFragment&#xA;        onField&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;  fragment FullType on __Type {&#xA;    kind&#xA;    name&#xA;    description&#xA;    fields(includeDeprecated: true) {&#xA;      name&#xA;      description&#xA;      args {&#xA;        ...InputValue&#xA;      }&#xA;      type {&#xA;        ...TypeRef&#xA;      }&#xA;      isDeprecated&#xA;      deprecationReason&#xA;    }&#xA;    inputFields {&#xA;      ...InputValue&#xA;    }&#xA;    interfaces {&#xA;      ...TypeRef&#xA;    }&#xA;    enumValues(includeDeprecated: true) {&#xA;      name&#xA;      description&#xA;      isDeprecated&#xA;      deprecationReason&#xA;    }&#xA;    possibleTypes {&#xA;      ...TypeRef&#xA;    }&#xA;  }&#xA;&#xA;  fragment InputValue on __InputValue {&#xA;    name&#xA;    description&#xA;    type { ...TypeRef }&#xA;    defaultValue&#xA;  }&#xA;&#xA;  fragment TypeRef on __Type {&#xA;    kind&#xA;    name&#xA;    ofType {&#xA;      kind&#xA;      name&#xA;      ofType {&#xA;        kind&#xA;        name&#xA;        ofType {&#xA;          kind&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://gist.github.com/AaronNGray/c873c093f7015389cd7358d7270e1e1e"" rel=""nofollow noreferrer"">https://gist.github.com/AaronNGray/c873c093f7015389cd7358d7270e1e1e</a></p>&#xA;",2611132,,2611132,2018-07-10 18:02:22,2018-07-10 18:02:22,"",,0,0,0,2018-06-23 16:49:52
51107732,1,,,6,14531,"<p>I'm having a block trying to figure out the syntax for a query condition that seems like it would be a pretty common one.</p>&#xA;<p>The typedef below stores an ID value for the agent who represents an Author, in a one-agent-to-many (authors) relationship.  I'd like to extract the name of the agent at the same time I'm getting details from the Author schema.</p>&#xA;<pre><code>type Author {&#xA;    id: ID!&#xA;    firstName: String&#xA;    middleInitial: String&#xA;    lastName: String&#xA;    posts: [Post]&#xA;    agent: ID&#xA;  }&#xA;</code></pre>&#xA;<p>So the enclosing query (returning a list of all Authors) looks like this:</p>&#xA;<pre><code>{&#xA;  authors {&#xA;    firstName&#xA;    lastName&#xA;    agent&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>This gives me back the Agent's ID.  How can I use that same query to fetch the agent's name, from a typedef similar to the one above?</p>&#xA;",2326422,,5312361,2022-10-06 12:30:20,2022-10-06 12:30:20,How to implement graphQL sub-query,<javascript><graphql>,2,0,0,2018-06-29 18:44:20
51107810,2,,51107732,4,,"<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>type Agent {&#xD;&#xA;    id: ID!&#xD;&#xA;    name: String&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;type Author {&#xD;&#xA;    id: ID!&#xD;&#xA;    firstName: String&#xD;&#xA;    middleInitial: String&#xD;&#xA;    lastName: String&#xD;&#xA;    posts: [Post]&#xD;&#xA;    agent: Agent&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;// Query&#xD;&#xA; {&#xD;&#xA;   authors {&#xD;&#xA;     firstName&#xD;&#xA;     lastName&#xD;&#xA;     agent {&#xD;&#xA;         name&#xD;&#xA;      }&#xD;&#xA;    } &#xD;&#xA;  }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",5567387,,,,2018-06-29 18:51:00,"",,0,3,0,2018-06-29 18:51:00
51107815,2,,51107732,0,,"<p>The query would look like this. I'm not sure what your Agent typedef is like, but you get the idea</p>&#xA;&#xA;<pre><code>type Author {&#xA;    id: ID!&#xA;    firstName: String&#xA;    middleInitial: String&#xA;    lastName: String&#xA;    posts: [Post]&#xA;    agent: {&#xA;        id&#xA;        name&#xA;        ...other_agent_properties&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",8433471,,,,2018-06-29 18:51:16,"",,0,1,0,2018-06-29 18:51:16
51130292,2,,51117407,0,,"<p>Try downgrading your <code>apollo-codegen</code> version.</p>&#xA;&#xA;<p>I had the same issue since I upgraded to <code>apollo-codegen 0.20.0</code>, so I downgraded to <code>0.19.0</code> and the interface names are a little bit better.</p>&#xA;",3708153,,,,2018-07-02 06:35:59,"",,0,1,0,2018-07-02 06:35:59
51143270,2,,50603994,4,,"<p>Apparently this was a bug in Apollo or React Apollo package. Don't know which bug or was it just for React Native but I just updated my dependencies &amp; solved it without changing any code</p>&#xA;&#xA;<p>You can check out the full code at <a href=""https://github.com/deadcoder0904/react-native-darkmode-list"" rel=""nofollow noreferrer"">https://github.com/deadcoder0904/react-native-darkmode-list</a></p>&#xA;",6141587,,,,2018-07-02 20:23:36,"",,0,0,0,2018-07-02 20:23:36
51168798,1,,,1,952,"<p>I have a little problem with an isomorphic js application and maybe you can help me with this. I followed this tutorial: <a href=""https://www.apollographql.com/docs/react/features/server-side-rendering.html"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/features/server-side-rendering.html</a> regarding SSR and it basically works just fine. The initial request is rendered correctly, so this is fine. It’s the cache that gives me a headache… Whenever I call <code>client.extract()</code> it returns just an empty object, so my perfectly rendered page gets re-rendered as soon as the client code kicks in since the cache is empty. At this point I’m totally clueless as to why that doesn’t work. I even had a look at the Githunt example but the code in question is basically the same in my app, apart from differences in package versions.</p>&#xA;&#xA;<p>The stack I use:</p>&#xA;&#xA;<ul>&#xA;<li>Docker composition with mongodb, graphql-server and isomorphic app</li>&#xA;<li>Razzle as a framework for the isomorphic application</li>&#xA;<li>Styled components</li>&#xA;</ul>&#xA;&#xA;<p>The package versions:</p>&#xA;&#xA;<pre><code>""dependencies"": {&#xA;    ""apollo-cache-inmemory"": ""^1.2.5"",&#xA;    ""apollo-client"": ""^2.3.5"",&#xA;    ""apollo-link-http"": ""^1.5.4"",&#xA;    ""compression"": ""^1.7.2"",&#xA;    ""connect-mongo"": ""^2.0.1"",&#xA;    ""express"": ""^4.16.3"",&#xA;    ""express-session"": ""^1.15.6"",&#xA;    ""graphql"": ""^0.13.2"",&#xA;    ""graphql-tag"": ""^2.9.2"",&#xA;    ""isomorphic-fetch"": ""^2.2.1"",&#xA;    ""morgan"": ""^1.9.0"",&#xA;    ""razzle"": ""^2.2.0"",&#xA;    ""react"": ""^16.4.1"",&#xA;    ""react-apollo"": ""^2.1.8"",&#xA;    ""react-dom"": ""^16.4.1"",&#xA;    ""react-router-dom"": ""^4.3.1"",&#xA;    ""styled-components"": ""^3.3.3""&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Things I tried to fix the issue:</p>&#xA;&#xA;<ul>&#xA;<li>Remove styled components</li>&#xA;<li>Use <code>getDataFromTree</code> instead of <code>renderToStringWithData</code></li>&#xA;<li>Remove docker composition and running it locally (Mac OS)</li>&#xA;<li>Change package versions to the versions in the Githunt example</li>&#xA;</ul>&#xA;&#xA;<p>The client initialization on the server:</p>&#xA;&#xA;<pre><code>const client = new ApolloClient({&#xA;      ssrMode: true,&#xA;      link: createHttpLink({&#xA;        uri: 'http://server:5000/graphql',&#xA;        fetch: fetch,&#xA;        credentials: 'include',&#xA;        headers: {&#xA;          cookie: req.header('Cookie'),&#xA;          origin: 'frontend:5000'&#xA;        },&#xA;      }),&#xA;      cache: new InMemoryCache()&#xA;    });&#xA;</code></pre>&#xA;&#xA;<p>On client side the cache works just fine.</p>&#xA;",2931310,,,,2020-07-15 12:00:39,Empty cache after server side rendering a request in isomorphic app using Apollo GraphQL and React,<reactjs><graphql><apollo><react-apollo><apollo-client>,2,0,0,2018-07-04 08:10:07
51183489,2,,51166048,0,,"<p>I got it working </p>&#xA;&#xA;<p>The kind of <strong>ItemData</strong> is <strong><code>List</code></strong> so we need to put the data in <code>[]</code> so that it can be listed as a list input</p>&#xA;&#xA;<pre><code>mutation AddAdHoc($doc_no: String!, $bag: Int!,  $cartons: Int!, $destination: String!, $pallets: Int!, $reason: String! ,$source: String!, $type: String!, $version: String, $itemData: [ItemData]){&#xA;addAdHocDetails(input: {doc_no: $doc_no, bag: $bag, cartons: $cartons, destination: $destination, pallets: $pallets, reason: $reason ,source: $source, type: $type, version: $version, itemData: $itemData})&#xA;  {&#xA;    id&#xA; }&#xA;}&#xA;</code></pre>&#xA;",4665938,,,,2018-07-05 04:39:52,"",,0,0,0,2018-07-05 04:39:52
51230722,1,,,-3,1338,<p>How to intercept and send HTTP requests for GraphQL?&#xA;I saw some people are able to find security bugs via GraphQL on Facebook. How do they do it?</p>&#xA;&#xA;<p>Are there any tools available to test these calls?</p>&#xA;,10047688,,321505,2018-07-24 19:45:35,2020-09-05 09:21:24,How to use Facebook GraphQL,<facebook-graph-api><graphql>,1,0,0,2018-07-08 09:44:54
51244498,2,,51244028,3,,"<p>I ran into this problem while writing for our blog. Our suggested fix is this;</p>&#xA;&#xA;<pre><code>function whatYouRunOnPageLoad() {&#xA;    if (typeof window !== undefined) {&#xA;        auth0.parseHash(... etc ...)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>parseHash</code> requires <code>window</code>, which does not exist as part of your render steps. Auth0.js cannot run from serverside, which is what is ""accidentally"" happening when you try to render it the way you are.</p>&#xA;",2114771,,2114771,2018-07-17 10:21:23,2018-07-17 10:21:23,"",,0,4,0,2018-07-09 11:28:57
51274584,1,,,1,250,"<p>Hmm, not sure if this is a bug in lerna or if <em>I am doing it wrong</em>. I have a case where I have a lerna monorepo package that has a peerDependency that it is supposed to find in the ""consuming"" monorepo package:</p>&#xA;&#xA;<pre><code>packages&#xA; | - @red/app&#xA; | - @red/gql&#xA;</code></pre>&#xA;&#xA;<ul>&#xA;<li><code>@red/app</code> has a <code>dependency</code> to <code>@red/gql</code> and to <code>graphql</code></li>&#xA;<li><code>@red/gql</code> has a <code>peerDependency</code> to <code>graphql</code></li>&#xA;</ul>&#xA;&#xA;<p><code>@red/gql</code> makes use of <code>graphql</code> (actually it is one of its dependencies that makes use of it and also requires it as a peer dependency) and when I call it from <code>@red/app</code> it cannot find <code>graphql</code>.</p>&#xA;&#xA;<p>If I do <code>bootstrap</code> with the <code>hoist</code> option it does work so it appears to me that it cannot find the <code>graphql</code> package from <code>@red/gql</code> because it is symlinked and it it searching for <code>graphql</code> in the wrong folder.</p>&#xA;",1183252,,,,2018-07-10 22:10:32,Lerna cannot find peer dependency of symlinked module,<apollo-server><lerna><monorepo>,0,0,0,2018-07-10 22:10:32
51335331,2,,51334907,1,,"<p>The <a href=""https://www.prisma.io/docs/reference/prisma-servers-and-dbs/prisma-servers/docker-aira9zama5/"" rel=""nofollow noreferrer"">documentation mentions</a>:</p>&#xA;&#xA;<blockquote>&#xA;<pre><code>docker ps&#xA;</code></pre>&#xA;  &#xA;  <p>You should see output similar to this:</p>&#xA;&#xA;<pre><code>$ docker ps&#xA;CONTAINER ID        IMAGE                               COMMAND                  CREATED             STATUS              PORTS                    NAMES&#xA;2b799c529e73        prismagraphql/prisma:1.7            ""/bin/sh -c /app/sta…""   17 hours ago        Up 7 hours          0.0.0.0:4466-&gt;4466/tcp   myapp_prisma_1&#xA;757dfba212f7        mysql:5.7                           ""docker-entrypoint.s…""   17 hours ago  &#xA;</code></pre>&#xA;</blockquote>&#xA;&#xA;<p>(Here shown with mysql, but valid with postgresql too)</p>&#xA;&#xA;<p>The point is: there should be <em>two</em> containers running, not one.</p>&#xA;&#xA;<p>Check <code>docker-compose logs</code> to see why the second one (database) did not start.</p>&#xA;",6309,,,,2018-07-14 04:52:39,"",,0,2,0,2018-07-14 04:52:39
51358732,2,,51358422,0,,"<p>This is a bug in Graph QL Servlet (see <a href=""https://github.com/graphql-java/graphql-java-servlet/issues/76"" rel=""nofollow noreferrer"">this</a>). It looks like the issue was fixed 3 days ago, but since the last release (5.1.0) was made 7 days ago, you need to either wait for next release of Graph QL Servlet or build it yourself from sources.  </p>&#xA;",9624452,,,,2018-07-16 09:36:08,"",,0,0,0,2018-07-16 09:36:08
51368634,1,,,25,2375,<p>I have a weird issue with making fetch requests to my API on Android (using React Apollo). In the dev build as well as the release build fetch does not work. As soon as I power up React Native Debugger and enable <em>Enable Network Inspect</em> the requests work.</p>&#xA;&#xA;<p>I have no idea how to debug the requests as they are not shown in the debugger without Network Inspect enabled.</p>&#xA;&#xA;<p>Any ideas how I could find the error or did anyone of you run into the same issue?</p>&#xA;,5411503,,,,2022-06-07 02:05:59,React Native Android: Fetch Requests only working when React Native Debugger is connected,<android><react-native><apollo>,5,4,0,2018-07-16 19:09:45
51381702,2,,51381564,0,,"<p>You can proxy all the queries to a <a href=""https://www.npmjs.com/package/apollo-server-lambda"" rel=""nofollow noreferrer"">graphql-server</a></p>&#xA;",5211519,,,,2018-07-17 12:43:13,"",,0,0,0,2018-07-17 12:43:13
51390663,2,,51365026,0,,"<p>The issue that I faced was due to passing the full Query to the remote schema, MergeSchema Resolver will execute only after the remote schema returns the results.</p>&#xA;&#xA;<p>So In getGroupPublications resolver <code>PublicationResolver.groupPublications(context)</code> I replaced the fields added by extending the type.</p>&#xA;&#xA;<pre><code>            let queryString = context.req.body.query;&#xA;            queryString = queryString.replace(/image[\s\r\n]*?{[^}]*}/gm, """");&#xA;            queryString = queryString.replace(/thumbnail[\s\r\n]*?{[^}]*}/gm, """");&#xA;            return graphql(schema, queryString,&#xA;                null,&#xA;                context,&#xA;                context.req.body.variables)&#xA;</code></pre>&#xA;",1417996,,,,2018-07-17 21:48:01,"",,0,0,0,2018-07-17 21:48:01
51392525,2,,51292522,0,,<p>This issue has been resolved by updating to the v14.0.0-rc.2 release. There is no mention about the issue being resolved. </p>&#xA;,9335323,,,,2018-07-18 02:03:50,"",,0,0,0,2018-07-18 02:03:50
51526944,2,,50118567,20,,<p>Try changing the <code>Content-Type</code> to <code>application/json</code>.</p>&#xA;&#xA;<p>This works for me despite all the docs saying to use <code>application/graphql</code></p>&#xA;,1968612,,,,2018-07-25 20:10:56,"",,0,1,0,2018-07-25 20:10:56
51575567,2,,51439650,1,,"<p>I solved my bug:</p>&#xA;&#xA;<p><a href=""https://github.com/mui-org/material-ui/issues/10649#issuecomment-408624288"" rel=""nofollow noreferrer"">https://github.com/mui-org/material-ui/issues/10649#issuecomment-408624288</a></p>&#xA;&#xA;<p>Just using this in your bash works fine: <code>sed -i 's/material-ui\/core\/SvgIcon/material-ui\/core\/es\/SvgIcon/' 'node_modules/@material-ui/icons/es/utils/createSvgIcon.js'</code></p>&#xA;&#xA;<p>And be sure to ALWAYS use /es versions of material-ui, particulary for the SvgIcon coming with @material-ui/icons/... => @material-ui/icons/es/...</p>&#xA;",8176733,,,,2018-07-28 21:56:20,"",,0,0,0,2018-07-28 21:56:20
51594000,2,,51586801,1,,"<p>You are running into <a href=""https://github.com/prismagraphql/prisma/issues/2308"" rel=""nofollow noreferrer"">this issue</a>.</p>&#xA;&#xA;<p>Basically, this is a known issue with node 6.x. </p>&#xA;&#xA;<p>Please update the node version to fix this issue and track the progress of above issue in case you want to continue to use node 6.x. </p>&#xA;",1366216,,,,2018-07-30 12:28:56,"",,0,0,0,2018-07-30 12:28:56
51670799,1,51684912,,2,1299,"<p>When I install the Apollo Server 2 dependencies, follow the quickstart, and spin up a local server - I see the GraphQL Playground on local host</p>&#xA;&#xA;<p>However, when I deploy the same exact code to a remote server, and visit the url, I see ""GET query missing.""</p>&#xA;&#xA;<p>If I visit the url and supply a query as a parameter - e.g. <a href=""https://example.com?query="" rel=""nofollow noreferrer"">https://example.com?query=</a>{books{title author}} - then I do see relevant results (as json)</p>&#xA;&#xA;<p>What is causing the difference between seeing the playground view vs. just the raw api ""view"" ?</p>&#xA;",784519,,,,2019-01-10 19:05:34,Apollo Playground on remote server,<graphql><apollo><apollo-server>,1,0,0,2018-08-03 10:37:47
51684912,2,,51670799,3,,"<p>Probably what is happening is that when you deploy your code then the <code>NODE_ENV</code> is changed to <code>production</code> and when that happens <code>Graphql Playground</code> is disabled,&#xA;you can find more about it here: <br>&#xA;<a href=""https://www.apollographql.com/docs/apollo-server/features/graphql-playground.html"" rel=""nofollow noreferrer"">apollo-server graphql-playground</a></p>&#xA;&#xA;<p>if you want to enable it in production follow this guide:<br>&#xA;<a href=""https://www.apollographql.com/docs/apollo-server/features/graphql-playground.html#Enabling-GraphQL-Playground-in-production"" rel=""nofollow noreferrer"">Enabling-GraphQL-Playground-in-production</a></p>&#xA;",1368057,,,,2018-08-04 11:00:55,"",,0,0,0,2018-08-04 11:00:55
51689448,1,,,0,223,"<p>I have a graphql mutation file:</p>&#xA;&#xA;<pre><code>import gql from ""graphql-tag"";&#xA;import { graphql } from 'react-apollo';&#xA;import { SomeMutationVariables, SomeMutation } from ""..schemaTypes""        &#xA;&#xA;const someMutation = gql`&#xA;  mutation SomeMutation(&#xA;  $something: String!&#xA;  ) {&#xA;     createSome(&#xA;     input: {&#xA;      something: $something&#xA;     }&#xA;   )&#xA;  }&#xA; `;&#xA;&#xA;&#xA;&#xA;    export interface NewPropsCreateSomething {&#xA;   createSomething: ( variables:  SomeMutationVariable ) =&gt; void;&#xA;    }&#xA;&#xA;&#xA;&#xA;     export const withCreateSomething = graphql&lt;&#xA;      any,&#xA;      SomeMutation,&#xA;      SomeMutationVariable&#xA;      NewPropsCreateSomething&#xA;    &gt;(createSomethingMutation, {&#xA;      props: ({ mutate }) =&gt; ({&#xA;       createSomething async variables =&gt; {&#xA;     if (!mutate) {&#xA;        return;&#xA;        }&#xA;&#xA;        const response = await mutate({&#xA;        variables&#xA;        } );&#xA;       console.log( ""response"", response )  &#xA;           }&#xA;       })&#xA;    });&#xA;</code></pre>&#xA;&#xA;<p>I can not build the code because I am being thrown the error: &#xA;""Exported variable 'withCreateSomething' has or is using name 'React.ComponentClass' from external module ""/../../../../node_modules/@types/react/index"" but cannot be named""</p>&#xA;&#xA;<p>it appears that graphql is using react types;  I can eradicate the error by importing react: </p>&#xA;&#xA;<pre><code>import * as React from 'react';&#xA;</code></pre>&#xA;&#xA;<p>But then of course I receive this error: &#xA; 'React' is declared but its value is never read.</p>&#xA;&#xA;<p>I know this error has appeared in other posts, but I can't find this case addressed since this file has no react specific code,  and other than the type error,  there is no reason to import react.</p>&#xA;&#xA;<p>I try to avoid using @ ts-ignore but so far that is the only method that allows the build to proceed. </p>&#xA;&#xA;<p>Any pointers to an elegant solution is appreciated.</p>&#xA;",3508566,,,,2018-08-04 20:47:04,"TS Error: ""Exported variable 'withCreateSomething' has or is using name 'React.ComponentClass' from external module / but can not be named""",<javascript><reactjs><typescript><graphql>,0,3,0,2018-08-04 20:47:04
51729789,2,,50899426,1,,<p>You can try by replacing localhost with [::1].</p>&#xA;&#xA;<pre><code>http://[::1]:3000&#xA;</code></pre>&#xA;,1562567,,,,2018-08-07 14:55:05,"",,0,0,0,2018-08-07 14:55:05
51764452,1,,,7,3511,"<p>I use <code>graphene-django</code>. Creating an application, <code>GraphiQL</code> worked well for login and other functions. But when I use <code>Insomnia</code>, I get a <code>403 Forbidden</code> error.</p>&#xA;&#xA;<p>I referred to this documentation, &#xA;<a href=""https://github.com/howtographql/howtographql/blob/master/content/backend/graphql-python/4-authentication.md"" rel=""noreferrer"">https://github.com/howtographql/howtographql/blob/master/content/backend/graphql-python/4-authentication.md</a></p>&#xA;&#xA;<p>And I tried:</p>&#xA;&#xA;<ol>&#xA;<li>using <code>csrf_exempt</code>; It works fine, but of course I will not use it.</li>&#xA;<li>using <code>django-cors-headers</code>; It does <strong>not</strong> work well.</li>&#xA;</ol>&#xA;&#xA;<p>How can I solve this <code>403</code> error?</p>&#xA;",8363057,,9225671,2018-08-09 11:32:57,2020-05-10 00:07:58,403 by graphene-django. don't use csrf_exempt,<django><graphql>,4,3,0,2018-08-09 10:19:39
51779954,2,,51688703,1,,"<p>If you want to write your <code>query</code>, <code>mutation</code> with <code>.graphql</code> or <code>.gql</code> file extension.</p>&#xA;&#xA;<p>You need <code>graphql-tag/loader</code>, here is my <code>webpack.config.js</code>:</p>&#xA;&#xA;<pre><code>  {&#xA;    test: /\.(graphql|gql)$/,&#xA;    exclude: /node_modules/,&#xA;    use: 'graphql-tag/loader'&#xA;  }&#xA;</code></pre>&#xA;",6463558,,,,2018-08-10 06:03:21,"",,0,0,0,2018-08-10 06:03:21
51802441,1,,,3,206,"<p>I have a problem with my <code>express</code> app:</p>&#xA;&#xA;<p><a href=""https://glitch.com/edit/#!/enthusiastic-velociraptor"" rel=""nofollow noreferrer"">https://glitch.com/edit/#!/enthusiastic-velociraptor</a></p>&#xA;&#xA;<p>When I navigate to <code>GET</code> <code>/graphql</code> it gives me Playground but in console I have a <code>Not found</code></p>&#xA;&#xA;<p>Why?</p>&#xA;&#xA;<p>Reproducible with these steps:</p>&#xA;&#xA;<ul>&#xA;<li>go to: <a href=""https://glitch.com/edit/#!/enthusiastic-velociraptor"" rel=""nofollow noreferrer"">https://glitch.com/edit/#!/enthusiastic-velociraptor</a></li>&#xA;<li>see the code and open console</li>&#xA;<li>go to: <a href=""https://enthusiastic-velociraptor.glitch.me/graphql"" rel=""nofollow noreferrer"">https://enthusiastic-velociraptor.glitch.me/graphql</a></li>&#xA;<li>Graphql Playground works but in console you have ""Not found"" error!</li>&#xA;</ul>&#xA;",10088259,,,,2018-08-11 18:08:43,"Express.js, apollo-server Playground, Route error ""Not found"" but it works",<express><graphql><apollo-server><graphiql>,0,0,0,2018-08-11 18:08:43
51808889,2,,50688998,4,,"<p>You can use the <a href=""https://github.com/github/fetch#installation"" rel=""nofollow noreferrer""><code>whatwg-fetch</code></a> polyfill:</p>&#xA;&#xA;<pre><code>yarn add whatwg-fetch&#xA;</code></pre>&#xA;&#xA;<p>The installation instructions depend on your usage (e.g Babel, Webpack etc.) and are in the provided link.</p>&#xA;&#xA;<p>In my case I needed the polyfill for my Jest tests so I just put this in my test setup file:</p>&#xA;&#xA;<pre><code>import 'whatwg-fetch';&#xA;</code></pre>&#xA;",4260047,,,,2018-08-12 12:36:04,"",,0,0,0,2018-08-12 12:36:04
51890090,2,,51886417,1,,"<p>The GraphQL mutations have been developed and merged: <a href=""https://github.com/strapi/strapi/pull/1650"" rel=""nofollow noreferrer"">https://github.com/strapi/strapi/pull/1650</a>. They will be published in the next release.</p>&#xA;",3455009,,,,2018-08-17 07:08:54,"",,0,0,0,2018-08-17 07:08:54
51910161,1,52164072,,1,701,"<p>I started to learn nestjs and tried <a href=""https://github.com/nestjs/nest/tree/master/sample/12-graphql-apollo"" rel=""nofollow noreferrer"">this example</a> with graphql.</p>&#xA;&#xA;<p>But the example was written for apollo-server version 1 and now I have problems to get it working with apollo-server version 2.&#xA;Currently it is not clear to me how to get the apollo-server version 2 into the <a href=""https://github.com/nestjs/nest/blob/e39c9d920d75457695a32bc39745c88bbd244bd7/sample/12-graphql-apollo/src/app.module.ts#L27"" rel=""nofollow noreferrer"">consumer</a>:</p>&#xA;&#xA;<pre><code>consumer&#xA;  .apply(&#xA;    graphiqlExpress({&#xA;      endpointURL: '/graphql',&#xA;      subscriptionsEndpoint: `ws://localhost:3001/subscriptions`,&#xA;    }),&#xA;  )&#xA;  .forRoutes('/graphiql')&#xA;  .apply(graphqlExpress(req =&gt; ({ schema, rootValue: req })))&#xA;  .forRoutes('/graphql');&#xA;</code></pre>&#xA;&#xA;<p>Has someone please a tip how this nextjs example can be used with apollo-server version 2?</p>&#xA;",6198723,,4694994,2019-05-07 19:18:42,2019-12-10 02:38:03,Using nestjs with apollo-server version 2,<typescript><apollo-server><nestjs>,1,0,0,2018-08-18 15:36:11
51926375,2,,51890993,1,,"<p>Ok, so I fixed this after much trial and error. It would seem that the initial tutorial I followed used an older version of the primsagraphql/prisma image which needed to be updated. </p>&#xA;&#xA;<p>To fix the issue do the following:</p>&#xA;&#xA;<ul>&#xA;<li><p>Edit your docker-compose.yml with a newer version (for me I upgraded from 1.12 to 1.14)</p>&#xA;&#xA;<p><code>services:&#xA;  prisma:&#xA;    image: prismagraphql/prisma:1.14</code></p></li>&#xA;<li><p>Take your docker images offline then redeploy them. For me I was happy to kill them entirely using the following commands but <strong>if you want to save your data you may want to find a different set of commands to do this</strong>. </p>&#xA;&#xA;<p><code>docker-compose kill&#xA;docker-compose down&#xA;docker-compose up -d</code></p></li>&#xA;</ul>&#xA;&#xA;<p>Let your newly deployed Docker images warm-up a bit. Mine needed a couple of seconds to wake up for some reason :P. After that you should find your subscriptions will work again as expected.</p>&#xA;&#xA;<p>Hope this helps others, it really took me a while to figure out that I needed to update my Docker image not my prisma npm version. </p>&#xA;&#xA;<p>Cheers,</p>&#xA;&#xA;<p>A</p>&#xA;",965734,,,,2018-08-20 07:59:40,"",,0,0,0,2018-08-20 07:59:40
51961050,2,,50359330,4,,<p><code>apollo-server-koa</code> has no <code>graphqlKoa</code> anymore since 2.x. You should use 1.x version.</p>&#xA;,903502,,,,2018-08-22 06:39:25,"",,0,0,0,2018-08-22 06:39:25
52068201,2,,52061453,0,,<p>Dockerize a Node app and deploy to your favorite host while exposing the correct port. Azure Container Service is probably not the best option since it's very expensive.</p>&#xA;,9382513,,,,2018-08-29 01:18:24,"",,0,0,0,2018-08-29 01:18:24
52072464,2,,52072087,1,,"<p>Use the Chrome DevTools (other browsers exist) Network tab to determine what the actual response was from the server; this should make the error a lot clearer.</p>&#xA;&#xA;<p>To do so:</p>&#xA;&#xA;<ol>&#xA;<li>Open the Chrome DevTools by going to the hamburger menu, ""More Tools"", ""Developer Tools""</li>&#xA;<li>Reload the page</li>&#xA;<li>Trigger the network fetch to occur</li>&#xA;<li>Go to the ""Network"" tab of the developer tools</li>&#xA;<li>Select the relevant network request (it should be at/near the bottom; you can filter by XHR to make it more obvious if you like)</li>&#xA;<li>Go to the ""Response"" tab to see what the server sent (the ""Preview"" tab can also be handy as it formats the response in a more readable fashion)</li>&#xA;</ol>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/XoHHB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XoHHB.png"" alt=""Chrome DevTools network tab with response sub-tab selected""></a></p>&#xA;&#xA;<p>I'm guessing that the server has sent you back some HTML, which is not the JSON that Apollo was expecting.</p>&#xA;&#xA;<p>If this doesn't make the error clear, post the results of the response to add more information to your question to help others answer.</p>&#xA;&#xA;<p>Good luck!</p>&#xA;",141284,,,,2018-08-29 08:03:26,"",,0,2,0,2018-08-29 08:03:26
52090083,2,,52089823,3,,"<p><code>ra-data-graphql-simple</code> send an introspection query to your graphql backend when it starts, gathering all possible resources matching the gql dialect it understands.</p>&#xA;&#xA;<p>A dialect is a way to name the queries and mutations for each resource. For a resource to be detected, your schema must have the expected shape defined in the <a href=""https://github.com/marmelab/react-admin/tree/master/packages/ra-data-graphql-simple#expected-graphql-schema"" rel=""nofollow noreferrer"">documentation</a>.</p>&#xA;&#xA;<p>Most of the time, you'll have to implement your own dialect using <code>ra-data-graphql</code>.</p>&#xA;",6908463,,,,2018-08-30 05:58:55,"",,0,7,0,2018-08-30 05:58:55
52169007,1,,,3,782,"<p>I am using GraphQL on a Java project and it was working on a server.&#xA;When I changed to another server, it stopped working and it is throwing the following exception:</p>&#xA;&#xA;<blockquote>&#xA;  <p>java.lang.NoSuchMethodError:&#xA;  graphql.execution.ExecutionStrategy.(Lgraphql/execution/DataFetcherExceptionHandler;)V&#xA;          at graphql.execution.AbstractAsyncExecutionStrategy.(AbstractAsyncExecutionStrategy.java:19)&#xA;          at graphql.execution.AsyncExecutionStrategy.(AsyncExecutionStrategy.java:23)&#xA;          at graphql.GraphQL$Builder.(GraphQL.java:199)&#xA;          at graphql.GraphQL.newGraphQL(GraphQL.java:166)</p>&#xA;</blockquote>&#xA;&#xA;<p>I am using exactly the same Java version (1.8.0_181), the same graphql-java dependency version (7.0) and the same project version.</p>&#xA;&#xA;<p>Am I missing something? Anyone with the same problem?</p>&#xA;&#xA;<p>Thanks in advance,</p>&#xA;&#xA;<h2>Solution</h2>&#xA;&#xA;<p>After analyzing the dependencies of each one of my project dependencies, I noticed <em>graphql-java-annotations</em> was importing version 3.0 of graphql-java library. &#xA;graphql-java library is one of my project dependencies as mentioned before (was using version 7.0). </p>&#xA;&#xA;<p>As consequence, two different versions of graphql-java where being referenced and were conflicting with each other.</p>&#xA;&#xA;<p>To solve this issue, I removed graphql-java dependency and I started using only the version imported on graphql-java-annotations.</p>&#xA;",4027337,,4027337,2018-09-05 11:03:50,2018-09-05 11:03:50,Exception java.lang.NoSuchMethodError on ExecutionStrategy constructor method,<java><graphql>,1,0,0,2018-09-04 14:52:41
52169205,2,,52169007,1,,"<p>Usually this is because dependency confliction.</p>&#xA;&#xA;<p>You can add this to your pom:</p>&#xA;&#xA;<pre><code>&lt;build&gt;&#xA;    &lt;plugins&gt;&#xA;        &lt;plugin&gt;&#xA;            &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;&#xA;            &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;&#xA;            &lt;version&gt;3.1&lt;/version&gt;&#xA;            &lt;configuration&gt;&#xA;                &lt;compilerArgs&gt;&#xA;                    &lt;arg&gt;-verbose&lt;/arg&gt;&#xA;                &lt;/compilerArgs&gt;&#xA;            &lt;/configuration&gt;&#xA;        &lt;/plugin&gt;&#xA;    &lt;/plugins&gt;&#xA;&lt;/build&gt;&#xA;</code></pre>&#xA;&#xA;<p>then try package your application, it will log which jar the <code>graphql.execution.ExecutionStrategy</code> class is loaded from. Then you can check if it is the correct version.</p>&#xA;",6690200,,,,2018-09-04 15:03:25,"",,0,4,0,2018-09-04 15:03:25
52212005,2,,52195461,0,,"<p>I found my problem, it was an outdated npm installs for <code>react-apollo, graphql-tag, and apollo-boost.</code> It sounds pretty obvious that that should have been the first place that I looked, but I had literally just updated them two weeks ago!</p>&#xA;&#xA;<p>For the people passing by, here is a snippet off the package versions that are working for me:</p>&#xA;&#xA;<pre><code>""dependencies"": {&#xA;  ""apollo-boost"": ""^0.1.15"",&#xA;  ""cors"": ""^2.8.4"",&#xA;  ""express"": ""^4.16.3"",&#xA;  ""graphql"": ""^0.13.2"",&#xA;  ""graphql-server-express"": ""^1.4.0"",&#xA;  ""graphql-tag"": ""^2.9.2"",&#xA;  ""react"": ""^16.5.0"",&#xA;  ""react-apollo"": ""^2.1.11"",&#xA;  ""react-dom"": ""^16.4.2"",&#xA;  ""react-router-dom"": ""^4.3.1"",&#xA;  ""react-scripts"": ""1.1.4""&#xA; }&#xA;</code></pre>&#xA;",9802795,,,,2018-09-06 20:52:24,"",,0,0,0,2018-09-06 20:52:24
52244874,1,,,3,1278,"<p>I can't understand why this error occurs in the console</p>&#xA;&#xA;<pre><code>import gql from 'graphql-tag' // import gql&#xA;&#xA;const getBooksQuery = gql`query // describing query&#xA;  {&#xA;    books{&#xA;      name&#xA;      id&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;export default {&#xA;  name: ""BookList"", // template name&#xA;  apollo: { // apollo instance&#xA;    query: getBooksQuery // query&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What am i doing wrong?</p>&#xA;",8107104,,,,2019-06-17 18:50:52,Missing query attribute on result Vue graphql,<vue.js><vuejs2><graphql>,1,3,0,2018-09-09 13:12:20
52262991,2,,51220312,0,,"<p>Newer versions of PostGraphile have much more helpful error messages, often including a suggested solution. The ""An error occurred"" errors like those above now also contain a preview of the underlying error which helps with diagnosis. </p>&#xA;&#xA;<p>There are instructions here on how to set the <code>DEBUG</code> environmental variable here: <a href=""https://www.graphile.org/postgraphile/debugging/#debug-envvars"" rel=""nofollow noreferrer"">https://www.graphile.org/postgraphile/debugging/#debug-envvars</a> </p>&#xA;&#xA;<p>Here's how you might do it in Linux, macOS or Windows:</p>&#xA;&#xA;<pre class=""lang-bash prettyprint-override""><code># Bash (Linux, macOS, etc)&#xA;export DEBUG=""graphile-build:warn"" postgraphile -c postgres://username:password@localhost:5432/my_db&#xA;&#xA;# Windows Console&#xA;set DEBUG=graphile-build:warn &amp; postgraphile -c postgres://username:password@localhost:5432/my_db&#xA;&#xA;# Windows PowerShell&#xA;$env:DEBUG = ""graphile-build:warn""; postgraphile -c postgres://username:password@localhost:5432/my_db&#xA;</code></pre>&#xA;",141284,,,,2018-09-10 17:48:02,"",,0,0,0,2018-09-10 17:48:02
52297328,2,,52296514,0,,<p>so I updated typescript version to 2.8.1 and now it work. The thing is now i receive a warning from angular because angular expect to have version &lt; 2.8.0 but it's just a warning and i can hide that.</p>&#xA;,10353504,,,,2018-09-12 14:16:23,"",,0,0,0,2018-09-12 14:16:23
52331072,2,,52219662,0,,"<p>The first query requires an id as it is singular, so something like this:</p>&#xA;&#xA;<pre><code>query {&#xA;    Asset(id: ""/api/assets/1"") {&#xA;        id&#xA;        name&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can get it to work with plural:</p>&#xA;&#xA;<pre><code>query {&#xA;    Assets {&#xA;        id&#xA;        name&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But for that you need to disable pagination</p>&#xA;&#xA;<pre><code># api/config/packages/api_platform.yaml&#xA;api_platform:&#xA;    collection:&#xA;        pagination:&#xA;            enabled: false&#xA;</code></pre>&#xA;",6769049,,,,2018-09-14 11:30:02,"",,0,0,0,2018-09-14 11:30:02
52371032,1,,,1,1103,"<p>Running </p>&#xA;&#xA;<pre><code>   {&#xA;  __schema{&#xA;    types{&#xA;     name&#xA;      kind&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>gives </p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""GraphQL introspection is not allowed, but the query contained __schema or __type"",&#xA;      ""category"": ""graphql"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 31,&#xA;          ""column"": 3&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am using GraphiQL on windows to a Magento graphql server. I also get the same result if i run <code>graphql get-schema</code> on command line using graphql-cli. How do I allow Graphql introspection?</p>&#xA;",6904106,,,,2018-09-17 16:05:28,How to allow GraphQL introspection on magento graphql,<graphql><magento2>,1,0,0,2018-09-17 15:21:21
52371811,2,,52371032,2,,<p>You need to be in Developer mode to use introspection. </p>&#xA;&#xA;<p>Use <code>deploy:mode:set developer</code></p>&#xA;,7371598,,,,2018-09-17 16:05:28,"",,0,0,0,2018-09-17 16:05:28
52372233,1,52374416,,8,3867,"<p>I am trying to integrate Nextjs with graphql-tag/loader, This is my <code>next.config.js</code> file:</p>&#xA;&#xA;<pre><code>const withSass = require('@zeit/next-sass')&#xA;const graphqlLoader = require('graphql-tag/loader')&#xA;&#xA;module.exports = withSass({&#xA;  webpack: (config, { buildId, dev, isServer, defaultLoaders }) =&gt; {&#xA;    config.module.rules.push({&#xA;      test: /\.(graphql|gql)$/,&#xA;      loader: graphqlLoader,&#xA;      exclude: /node_modules/&#xA;    })&#xA;&#xA;    return config&#xA;  }&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>I am unable to build, I get the error below:</p>&#xA;&#xA;<pre><code>/HOME/node_modules/graphql-tag/loader.js:43&#xA;  this.cacheable();&#xA;       ^&#xA;TypeError: Cannot read property 'cacheable' of undefined&#xA;</code></pre>&#xA;&#xA;<p>Please help.</p>&#xA;",2814580,,,,2018-09-17 19:20:06,Nextjs-Graphql webpack loader: How to integrate Nextjs with Graphql loader,<javascript><webpack><graphql><next.js><graphql-tag>,1,1,0,2018-09-17 16:33:47
52444407,2,,50377318,1,,"<p>This happened to me when using Docker Toolbox on windows, the endpoint had to be changed from using localhost to the VirtualBox default ip within <code>prisma.yml</code>:</p>&#xA;&#xA;<pre><code>endpoint: http://192.168.99.100:4466&#xA;</code></pre>&#xA;",1208488,,1208488,2018-09-21 18:05:33,2018-09-21 18:05:33,"",,0,2,0,2018-09-21 13:03:29
52445503,2,,52434011,13,,"<p>It's a bug in iOSv12, but it's already fixed in iOSv12.1 beta (16B5059d), assuming the current beta code makes it into production.</p>&#xA;<p>The problem is that iOSv12 WebKit preflight OPTIONS calls don't leave the device. I've run WireShark and the iOSv12 simulator to confirm this.</p>&#xA;",10397022,,12892553,2022-01-23 06:08:11,2022-01-23 06:08:11,"",,0,9,0,2018-09-21 14:07:47
52452497,1,,,2,1167,"<p>So i have an apollo-server running using apollo-server-express:</p>&#xA;&#xA;<pre><code>const PORT = process.env.PORT || 8000&#xA;const graphqlPath = process.env.GRAPHQL || 'graphql'&#xA;const app = express()&#xA;&#xA;app.use(cors())&#xA;app.use(bodyParser.text({ type: 'application/graphql' }))&#xA;&#xA;const gqlServer = new ApolloServer({&#xA;  typeDefs: schema,&#xA;  resolvers,&#xA;  context: {&#xA;    me: users[1]&#xA;  },&#xA;  debug: true,&#xA;  tracing: true&#xA;})&#xA;&#xA;gqlServer.applyMiddleware({ app, path: `/${graphqlPath}` })&#xA;&#xA;app.listen(PORT, () =&gt; console.log(`graphql listening on port ${PORT}`))&#xA;&#xA;module.exports = app&#xA;</code></pre>&#xA;&#xA;<p>it runs perfectly on localhost, but deploying it to heroku, it becomes weird when i run the playground:</p>&#xA;&#xA;<ul>&#xA;<li>it says Server cannot be reached </li>&#xA;<li>I can't get the schema</li>&#xA;<li>the queries run (sometimes) and immediately after i see the result, it changes to that json error object</li>&#xA;<li>when i copy the curl request, and run it on my terminal, i always get the result without any problems</li>&#xA;</ul>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/XXGXP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XXGXP.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Here's a sample of the console errors:</p>&#xA;&#xA;<blockquote>&#xA;  <p>POST &lt;graphql_server_url&gt; 400 (Bad Request)<br>&#xA;  Error: Response not successful: Received status code 400</p>&#xA;</blockquote>&#xA;",470772,,470772,2018-09-22 03:53:32,2022-02-09 19:39:50,graphql playground behaving weirdly running on heroku,<heroku><apollo-server>,2,0,0,2018-09-22 00:38:09
52464374,2,,52463778,1,,"<blockquote>&#xA;  <p>I know I could just issue a breaking change to <code>lit-apollo</code>, but how might I address this problem without breaking my classes' APIs?</p>&#xA;</blockquote>&#xA;&#xA;<p>You cannot, really. But it's not your fault:</p>&#xA;&#xA;<blockquote>&#xA;  <p><code>LitElement</code>'s latest version exposes an instance method called <code>update</code></p>&#xA;</blockquote>&#xA;&#xA;<p><em>That</em> was the breaking change. So if you update your <code>lit-element</code> dependency to the latest version, you have to make a major version as well. Renaming your <code>update</code> method for that is natural. Alternatively, keep your API and continue using the old <code>lit-element</code> version.</p>&#xA;",1048572,,,,2018-09-23 08:29:17,"",,0,2,0,2018-09-23 08:29:17
52503781,1,,,1,94,"<p>i just deployed my react+node+graphql app to DigitalOcean, the visuals is there, however its not able to reach my graphql url endpoint /graphql. </p>&#xA;&#xA;<p>The error im getting is:</p>&#xA;&#xA;<blockquote>&#xA;  <p>[Network error]: SyntaxError: Unexpected token &lt; in JSON at position 0</p>&#xA;</blockquote>&#xA;&#xA;<p>And this is the code im using.</p>&#xA;&#xA;<p>Server.js</p>&#xA;&#xA;<pre><code>  app.use('/graphql', graphqlHTTP({&#xA;    schema: schema,&#xA;    graphiql: true&#xA;  }))&#xA;&#xA;  if (process.env.NODE_ENV === 'production') {&#xA;    app.use( express.static(path.join(__dirname, 'build')));&#xA;&#xA;    app.get('*', (req, res)=&gt;{&#xA;      res.sendFile(path.join(__dirname, 'build', 'index.html'));&#xA;    })&#xA;  }&#xA;&#xA;const port = app.get('port') || 3002;&#xA;  app.listen(port, () =&gt; console.log(`The server is running and listening at http://localhost:${port}`));&#xA;</code></pre>&#xA;&#xA;<p>Index.js // here i inject the url that my client should use</p>&#xA;&#xA;<pre><code>const client = new ApolloClient({&#xA;  uri: 'myproductionurl/graphql',&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Does anyone know why this fails?</p>&#xA;",4425707,,,,2018-09-25 17:29:28,Cant access graphql in production from node/react,<node.js><reactjs><apollo>,0,0,0,2018-09-25 17:29:28
52511591,1,52529178,,2,2951,"<p>There were some features I wanted from <code>apollo-server</code> and spent some time refactoring my code to it (was previously using <code>express-graphql</code>). The only problem now is a ""CORS"" problem between my web app (using <code>apollo-client</code>) for authenticated requests. I recall having this problem as well back in version 1.x, and spent a lot of time wrestling with it, but my previous solution does not work in 2.x and would greatly appreciate some help for anyone who has managed to get this to work.</p>&#xA;&#xA;<ul>&#xA;<li>my webapp is hosted on <code>localhost:8081</code></li>&#xA;<li>my server is hosted on <code>localhost:4000</code></li>&#xA;</ul>&#xA;&#xA;<p>Following their code verbatim from <a href=""https://www.apollographql.com/docs/react/recipes/authentication.html"" rel=""nofollow noreferrer"">here</a>, I have the following:</p>&#xA;&#xA;<h3>Client code</h3>&#xA;&#xA;<pre><code>const client = new ApolloClient({&#xA;    link: createHttpLink({&#xA;        uri: 'http://localhost:4000/graphql', &#xA;        credentials: 'include'&#xA;    })&#xA;})&#xA;</code></pre>&#xA;&#xA;<h3>Server code</h3>&#xA;&#xA;<pre><code>// Initializing express app code &#xA;var app = ....&#xA;// Using cors&#xA;app.use(cors({&#xA;    credentials: true, &#xA;    origin: 'http://localhost:8081',&#xA;}));&#xA;&#xA;// Apollo Server create and apply middleware&#xA;var apolloServer = new ApolloServer({ ... });&#xA;apolloServer.applyMiddleware({ app })&#xA;</code></pre>&#xA;&#xA;<p>When the client queries the backend via. <code>apollo-client</code>, I get the following error in Chrome:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/gUjid.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gUjid.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Yet in my server code, I am explicitly setting the origin. When I inspect the network request in console, I get a contradictory story as well as <code>Access-Control-Allow-Origin</code> explicitly is set to <code>http://localhost:8081</code></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/soKaB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/soKaB.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>I don't encounter this problem when using Insomnia to query my backend server and get the expected results. Does anyone have any experience setting up <code>apollo</code> on client and server on <code>localhost</code> and successfully authenticating?</p>&#xA;",4398699,,,,2018-09-27 03:51:26,Access-Control-Allow-Origin is not * but Chrome insists it is (after upgrading apollo-server),<javascript><cors><apollo>,1,5,0,2018-09-26 06:50:39
52517712,2,,52516170,0,,<p>Confirmed as a bug by @michael-hunger</p>&#xA;,1652623,,,,2018-09-26 12:24:46,"",,0,0,0,2018-09-26 12:24:46
52526361,1,,,2,635,"<p>How to connect <code>graphql</code> api which is on private network and accessible through private ip address. My frontend server and api is on the <code>VNET</code>.</p>&#xA;&#xA;<pre><code>import { ApolloClient } from 'apollo-client'&#xA;import { InMemoryCache } from 'apollo-cache-inmemory'&#xA;import { createUploadLink } from 'apollo-upload-client'&#xA;&#xA;const uploadLink = createUploadLink({&#xA;    uri: 'http://10.0.0.10:3000'+'/api'&#xA;})&#xA;&#xA;const client = new ApolloClient({&#xA;    link: uploadLink,&#xA;    cache: new InMemoryCache()&#xA;})&#xA;export default client&#xA;</code></pre>&#xA;&#xA;<p>Both applications are running on <code>kubernetes</code> same cluster different pods. Private services are accessible within cluster and when I <code>exec</code> into the frontend pod I am able to access <code>graphql</code> end point with private ip address.</p>&#xA;&#xA;<p>But, On the browser, it's not connecting and giving this error: <code>ERR_CONNECTION_REFUSED</code></p>&#xA;&#xA;<blockquote>&#xA;  <p>frontend (public ip) --> graphql (private ip)</p>&#xA;</blockquote>&#xA;",3067928,,,,2018-09-27 04:06:27,Connect to private ip address - graphql - kubernetes,<reactjs><kubernetes><graphql>,2,0,0,2018-09-26 21:38:37
52560181,1,,,0,2747,"<p>I'm trying to connect my react application (which is using gatsby) to an XAMPP server that's running an instance of Drupal to perform queries using GraphQL. I keep getting this error about my config file which says:</p>&#xA;&#xA;<pre><code>error Plugin gatsby-source-graphql returned an error&#xA;SyntaxError: Unexpected token &lt; in JSON at position 0&#xA;</code></pre>&#xA;&#xA;<p>Here's my config file code:</p>&#xA;&#xA;<pre><code> module.exports = {&#xA;  siteMetadata: {&#xA;   title: 'Gatsby Default Starter',&#xA;  },&#xA;  plugins: [&#xA;  {&#xA;   resolve: ""gatsby-source-graphql"",&#xA;   options: {&#xA;    typeName: ""DRUPAL"",&#xA;    fieldName: ""drupal"",&#xA;    url: ""http://localhost:8888/graphql"",&#xA;   },&#xA;  },&#xA; ],&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I've tried the localhost with and without the last ""/graphql"", just ""localhost"", and nothing's worked. I've restarted my frontend and backend server twice.</p>&#xA;&#xA;<p>EDIT:&#xA;When I just go in ""<a href=""http://localhost:8888/graphql"" rel=""nofollow noreferrer"">http://localhost:8888/graphql</a>"", it returns this:</p>&#xA;&#xA;<pre><code>{""errors"":[{""message"":""GraphQL Request must include at least one of those two parameters: \u0022query\u0022 or \u0022queryId\u0022"",""category"":""request""}]}&#xA;</code></pre>&#xA;",2457976,,2457976,2018-09-28 18:17:21,2018-09-28 18:17:21,SyntaxError: Unexpected token < in JSON at position 0 (gatsby and graphql),<json><reactjs><graphql><gatsby>,1,0,0,2018-09-28 17:28:28
52564168,2,,52560020,0,,"<p>Once you enable <code>esModuleInterop</code>, it looks like the <code>react-apollo/browser.d.ts</code> breakage was introduced recently by <a href=""https://github.com/apollographql/react-apollo/pull/2332"" rel=""nofollow noreferrer"">this PR</a> (released in version 2.2.0) and fixed today by <a href=""https://github.com/apollographql/react-apollo/pull/2430"" rel=""nofollow noreferrer"">this PR</a> (not yet released).  You'll have to go back to <code>react-apollo</code> version 2.1.11 (or point your dependency to the git repository) until the fix is released.</p>&#xA;",4468617,,,,2018-09-29 00:56:31,"",,0,1,0,2018-09-29 00:56:31
52572216,1,,,0,502,"<h3>Works on the Playground...</h3>&#xA;&#xA;<p>I am trying to query the following enum values:</p>&#xA;&#xA;<pre><code>query {&#xA;  __type(name:""ActivityType"") {&#xA;    enumValues {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I test the query with the playground, it works. I receive a list of the enumeration values for the <code>ActivityType</code>:</p>&#xA;&#xA;<h3>Doesn't work with Apollo-Client...</h3>&#xA;&#xA;<p>When I run the following code with the client, I receive the expected results for the first query, but not for the second:</p>&#xA;&#xA;<pre><code>import ApolloClient, { gql } from 'apollo-boost'&#xA;&#xA;const FIRST_QUERY = gql`&#xA;  query successfulQuery {&#xA;    totalActivities&#xA;  }&#xA;`&#xA;&#xA;const SECOND_QUERY = gql`&#xA;  query unsuccessfulQuery {&#xA;    __type(name:""ActivityType"") {&#xA;      enumValues {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;&#xA;const client = new ApolloClient({ uri: 'http://localhost:4000' })&#xA;&#xA;//&#xA;// First Query returns data&#xA;//&#xA;&#xA;client.query({ query: FIRST_QUERY })&#xA;  .then(console.log)&#xA;  .catch(console.error)&#xA;&#xA;//&#xA;// Second Query does not return data&#xA;//&#xA;&#xA;client.query({ query: SECOND_QUERY })&#xA;  .then(console.log)&#xA;  .catch(console.error)  &#xA;</code></pre>&#xA;&#xA;<p>The results</p>&#xA;&#xA;<pre><code>{ data: {...}, loading: false, networkStatus: 7, stale: false }&#xA;{ data: null, loading: false, networkStatus: 7, stale: false }&#xA;</code></pre>&#xA;&#xA;<p>Is there something special that you have to implement with the client to allow introspective queries?</p>&#xA;",3050450,,,,2018-09-29 20:18:29,Apollo Client Introspective Queries,<graphql><apollo-client><apollo-boost>,0,2,0,2018-09-29 20:18:29
52635916,1,52635917,,19,10029,"<p>Given the following code:</p>&#xA;&#xA;<pre><code>import { graphql } from 'graphql'&#xA;import graphqlTools from 'graphql-tools'&#xA;&#xA;const { makeExecutableSchema } = graphqlTools&#xA;&#xA;const typeDefs = `&#xA;type Query {&#xA;   as: [A]&#xA;}&#xA;&#xA;type A {&#xA;   x: Int,&#xA;   y: Int&#xA;}&#xA;`&#xA;const schema = makeExecutableSchema ({ typeDefs })&#xA;&#xA;graphql(schema, '{ as { x, y } }').then(console.log)&#xA;</code></pre>&#xA;&#xA;<p>I get this error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Error: Cannot use GraphQLSchema ""[object GraphQLSchema]"" from another&#xA;  module or realm.</p>&#xA;  &#xA;  <p>Ensure that there is only one instance of ""graphql"" in the&#xA;  node_modules directory. If different versions of ""graphql"" are the&#xA;  dependencies of other relied on modules, use ""resolutions"" to ensure&#xA;  only one version is installed.</p>&#xA;</blockquote>&#xA;&#xA;<p>What's going on?</p>&#xA;",411632,,,,2022-07-16 19:01:10,"Error: Cannot use GraphQLSchema ""[object GraphQLSchema]"" from another module or realm",<javascript><node.js><ecmascript-6><graphql><graphql-js>,6,0,0,2018-10-03 21:26:57
52638016,2,,50451732,4,,"<p>The warnings seem to be a bug in apollo. <a href=""https://github.com/apollographql/apollo-client/issues/3397"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client/issues/3397</a></p>&#xA;",65385,,,,2018-10-04 02:10:01,"",,0,1,0,2018-10-04 02:10:01
52649073,1,,,0,560,"<p>I have deployed an GraphQL API to AWS Lambda using the Zappa Framework. If I do a request from my local machine to the local server version like this everything works fine:</p>&#xA;&#xA;<pre><code>import requests&#xA;&#xA;url = 'http://127.0.0.1:8000/graphql'&#xA;token = '...'&#xA;headers = {'Authorization': 'JWT '+token}&#xA;&#xA;query = { 'query' : '{ ...}&#xA;&#xA;r = requests.get(url=url, json=query, headers=headers)&#xA;print (r.text)&#xA;</code></pre>&#xA;&#xA;<p>If I do the same request to my AWS URL <a href=""https://xyz.execute-api.eu-central-1.amazonaws.com/production/graphql"" rel=""nofollow noreferrer"">https://xyz.execute-api.eu-central-1.amazonaws.com/production/graphql</a> it yields the following error:</p>&#xA;&#xA;<pre><code>&lt;H1&gt;403 ERROR&lt;/H1&gt;&#xA;&lt;H2&gt;The request could not be satisfied.&lt;/H2&gt;&#xA;&lt;HR noshade size=""1px""&gt;&#xA;Bad request.&#xA;&lt;BR clear=""all""&gt;&#xA;&lt;HR noshade size=""1px""&gt;&#xA;&lt;PRE&gt;&#xA;Generated by cloudfront (CloudFront)&#xA;</code></pre>&#xA;&#xA;<p>It should be noted that the GraphiQL view works properly under the mentioned AWS URL where I can do my queries without any problems. Am I missing something to get it going from other devices machine to machine?</p>&#xA;&#xA;<p>Cheers!</p>&#xA;",6346565,,,,2018-10-04 14:20:16,GraphQL on AWS lambda: The request could not be satisfied. How to solve 403 error?,<django><aws-lambda><graphql><graphene-python><zappa>,0,6,0,2018-10-04 14:20:16
52656118,1,,,2,1321,"<p>Initially, I tried to use a Serverless Lambda function to handle schema stitching for my APIs, but I started to move toward an Elastic Beanstalk server to keep from needing to fetch the initial schema on each request. </p>&#xA;&#xA;<p>Even so, the request to my main API server is taking probably ten times as long to get the result from one of the child API servers as my child servers do. I'm not sure what is making the request so long, but it seems like there is something blocking the request from resolving quickly.</p>&#xA;&#xA;<p>This is my code for the parent API:</p>&#xA;&#xA;<pre><code>import * as express from 'express';&#xA;&#xA;import { introspectSchema, makeRemoteExecutableSchema, mergeSchemas } from 'graphql-tools';&#xA;&#xA;import { ApolloServer } from 'apollo-server-express';&#xA;import { HttpLink } from 'apollo-link-http';&#xA;import fetch from 'node-fetch';&#xA;&#xA;async function run () {&#xA;&#xA;    const createRemoteSchema = async (uri: string) =&gt; {&#xA;        const link = new HttpLink({ uri, fetch });&#xA;&#xA;        const schema = await introspectSchema(link);&#xA;&#xA;        return makeRemoteExecutableSchema({&#xA;            schema,&#xA;            link&#xA;        });&#xA;    };&#xA;&#xA;    const remoteSchema = await createRemoteSchema(process.env.REMOTE_URL);&#xA;&#xA;    const schema = mergeSchemas({&#xA;        schemas: [remoteSchema]&#xA;    });&#xA;&#xA;    const app = express();&#xA;&#xA;    const server = new ApolloServer({&#xA;        schema,&#xA;        tracing: true,&#xA;        cacheControl: true,&#xA;        engine: false&#xA;    });&#xA;&#xA;    server.applyMiddleware({ app });&#xA;&#xA;    app.listen({ port: 3006 });&#xA;};&#xA;&#xA;run();&#xA;</code></pre>&#xA;&#xA;<p>Any idea why it is so slow?</p>&#xA;&#xA;<p><strong>UPDATE:</strong></p>&#xA;&#xA;<p>For anyone trying to stitch together schemas on a local environment, I got a significant speed boost by fetching 127.0.0.1 directly instead of going through localhost.</p>&#xA;&#xA;<p><code>http://localhost:3002/graphql</code> > <code>http://127.0.0.1:3002/graphql</code></p>&#xA;&#xA;<p>This turned out not to be an Apollo issue at all for me.</p>&#xA;",583366,,583366,2018-12-20 12:17:33,2018-12-20 12:17:33,How do you make Schema Stitching in Apollo Server faster?,<graphql><apollo><graphql-js><apollo-server>,1,1,0,2018-10-04 22:42:24
52682231,2,,51537678,1,,"<p>After Googling to solve this for myself I found this.</p>&#xA;&#xA;<p>According to <a href=""https://github.com/airbnb/enzyme/issues/1411"" rel=""nofollow noreferrer"">this</a> Git Issue the problem is in enzyme-adapter-react-16. <a href=""https://github.com/airbnb/enzyme/issues/1411#issuecomment-422975752"" rel=""nofollow noreferrer"">EthanJStark</a> said that updating to enzyme version 1.5.0 corrected it. I can confirm that the error stopped.</p>&#xA;&#xA;<p>tldr;<br/><code>package.json</code> <br/> &ndash; <code>""enzyme-adapter-react-16"": ""^1.1"",</code>&#xA;<br/> + <code>""enzyme-adapter-react-16"": ""^1.5.0"",</code></p>&#xA;",1804634,,,,2018-10-06 18:39:47,"",,0,0,0,2018-10-06 18:39:47
52746879,2,,48725049,1,,"<p>Gatsby now supports an arbitrary GraphQL endpoint as a source which will help: <a href=""https://www.gatsbyjs.org/packages/gatsby-source-graphql/"" rel=""nofollow noreferrer"">https://www.gatsbyjs.org/packages/gatsby-source-graphql/</a></p>&#xA;&#xA;<hr>&#xA;&#xA;<p>You can also use <a href=""https://github.com/hasura/graphql-engine"" rel=""nofollow noreferrer"">Hasura</a> to give you an instant GraphQL API on Postgres and then query that from your Gatsby app. You can follow the tutorial <a href=""https://github.com/hasura/graphql-engine/tree/master/community/sample-apps/gatsby-postgres-graphql"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;&#xA;<p><strong>Step1:</strong> Deploy Hasura against your existing Postgres database: <a href=""https://docs.hasura.io/1.0/graphql/manual/getting-started/using-existing-database.html"" rel=""nofollow noreferrer"">https://docs.hasura.io/1.0/graphql/manual/getting-started/using-existing-database.html</a></p>&#xA;&#xA;<p><strong>Step 2:</strong> Install the <code>gatsby-source-graphql</code> plugin for gatsby: <a href=""https://www.gatsbyjs.org/packages/gatsby-source-graphql/"" rel=""nofollow noreferrer"">https://www.gatsbyjs.org/packages/gatsby-source-graphql/</a></p>&#xA;&#xA;<p><strong>Step 3:</strong> Configure the plugin</p>&#xA;&#xA;<pre><code>{&#xA;  plugins: [&#xA;    {&#xA;      resolve: 'gatsby-source-graphql', // &lt;- Configure plugin&#xA;      options: {&#xA;        typeName: 'HASURA',&#xA;        fieldName: 'hasura', // &lt;- fieldName under which schema will be stitched&#xA;        createLink: () =&gt;&#xA;          createHttpLink({&#xA;            uri: `https://my-graphql.herokuapp.com/v1alpha1/graphql`, // &lt;- Configure connection GraphQL url&#xA;            headers: {},&#xA;            fetch,&#xA;          }),&#xA;        refetchInterval: 10, // Refresh every 10 seconds for new data&#xA;      },&#xA;    },&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Step 4:</strong> Make the GraphQL query in your component</p>&#xA;&#xA;<pre><code>const Index = ({ data }) =&gt; (&#xA;  &lt;div&gt;&#xA;    &lt;h1&gt;My Authors &lt;/h1&gt;&#xA;    &lt;AuthorList authors={data.hasura.author} /&gt;&#xA;  &lt;/div&gt;&#xA;)&#xA;export const query = graphql`&#xA;  query AuthorQuery {&#xA;    hasura {        # &lt;- fieldName as configured in the gatsby-config&#xA;      author {      # Normal GraphQL query&#xA;        id&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Other links:</p>&#xA;&#xA;<ul>&#xA;<li>Sample-app/tutorial:&#xA;<a href=""https://github.com/hasura/graphql-engine/tree/master/community/sample-apps/gatsby-postgres-graphql"" rel=""nofollow noreferrer"">https://github.com/hasura/graphql-engine/tree/master/community/sample-apps/gatsby-postgres-graphql</a></li>&#xA;<li>Blogpost:&#xA;<a href=""https://blog.hasura.io/create-gatsby-sites-using-graphql-on-postgres-603b5dd1e516"" rel=""nofollow noreferrer"">https://blog.hasura.io/create-gatsby-sites-using-graphql-on-postgres-603b5dd1e516</a></li>&#xA;</ul>&#xA;&#xA;<p>Note: I work at Hasura.</p>&#xA;",3364697,,3364697,2019-02-25 07:13:17,2019-02-25 07:13:17,"",,0,0,0,2018-10-10 18:45:48
52766189,1,52766812,,0,1431,"<p>I've been getting this error warning out of a sudden when trying to destroy a record on sequelize using Typescript. I'm using Visual Studio Code as my editor.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Ze50r.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ze50r.png"" alt=""vscode error message""></a></p>&#xA;&#xA;<p>Does anyone know how to fix this annoying error message and return the truthiness value?</p>&#xA;",5746311,,5746311,2018-10-11 17:59:46,2018-10-11 18:32:24,Sequelize destroy cannot be tested for truthiness,<node.js><typescript><visual-studio-code><sequelize.js><graphql>,1,5,0,2018-10-11 17:49:54
52773589,2,,52753464,0,,"<p>The problem was that I was requesting a deprecated, graphql incompatible data structure which still returns data.</p>&#xA;&#xA;<p>If you run into this problem, make sure your graphql queries are compatible with grapql.</p>&#xA;",0,user9861845,,,2018-10-12 06:32:11,"",,0,0,0,2018-10-12 06:32:11
52795782,1,,,1,4130,"<p>This feels basic, so I would expect to find this scenario mentioned, but I have searched and can't find an example that matches my scenario.  I have 2 end points (I am using HTTP data sources) that I'm trying to combine.</p>&#xA;&#xA;<p>Class:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>{&#xD;&#xA;   id: string,&#xD;&#xA;   students: [&#xD;&#xA;      &lt;studentID1&gt;,&#xD;&#xA;      &lt;studentID2&gt;,&#xD;&#xA;      ...&#xD;&#xA;   ]&#xD;&#xA; }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>and Student:</p>&#xA;&#xA;<pre><code>{&#xA;    id: String,&#xA;    lastName: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What I would like is a schema that looks like this:</p>&#xA;&#xA;<pre><code>Student: {&#xA;   id: ID!&#xA;   lastName: String&#xA;}&#xA;Class: {&#xA;   id: ID!,&#xA;   studentDetails: [Student]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>From reading, I know that I need some sort of resolver on Class.studentDetails that will return an array/List of student objects.  Most of the examples I have seen show retrieving the list of Students based on class ID (ctx.source.id), but that won't work in this case.  I need to call the students endpoint 1 time per student, passing in the student ID (I cannot fetch the list of students by class ID).</p>&#xA;&#xA;<p>Is there a way to write a resolver for Class/studentDetails that loops through the student IDs in Class and calls my students endpoint for each one?  </p>&#xA;&#xA;<p>I was thinking something like this in the Request Mapping Template:</p>&#xA;&#xA;<pre><code>#set($studentDetails = [])&#xA;#foreach($student in $ctx.source.students) &#xA;   #util.qr(list.add(...invoke web service to get student details...))&#xA;#end&#xA;$studentDetails&#xA;</code></pre>&#xA;&#xA;<p>Edit: After reading Lisa Shon's comment below, I realized that the batch resolver for DynamoDB data sources that does this, but I don't see a way to do that for HTTP data sources.</p>&#xA;",10500118,,10500118,2018-10-16 12:54:03,2019-10-24 22:53:10,AWS Appsync: How can I create a resolver that retrieves the details for an array of identifiers?,<graphql><aws-appsync><resolver>,3,2,0,2018-10-13 17:59:52
52823698,1,,,0,121,"<p>This is a .net core application with React and GraphQL. Each time I start the application, I get ""Network Error: Failed to fetch"" on the browser.  The errors on the console is in the image below.  Any ideas pls? <a href=""https://i.stack.imgur.com/UVb8U.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UVb8U.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Here is the response from the network tab on the browser&#xA;<a href=""https://i.stack.imgur.com/XB4me.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XB4me.png"" alt=""enter image description here""></a></p>&#xA;",1519100,,1519100,2018-10-15 23:58:45,2018-10-15 23:58:45,Graphql application cannot load due to network error,<reactjs><graphql><apollo-client><apollo-server>,0,3,0,2018-10-15 19:43:05
52864606,1,52901228,,0,212,"<p>With <a href=""http://graphql-ruby.org/"" rel=""nofollow noreferrer"">GraphQL Ruby</a> it possible to have a GraphQL subscription also return resolves when subscribing? For example:</p>&#xA;&#xA;<pre><code>module Types&#xA;  class SampleType &lt; GraphQL::Schema::Object&#xA;    field :greeting, String, null: false&#xA;&#xA;    def greeting&#xA;     'Howdy!'&#xA;    end&#xA;  end&#xA;end&#xA;&#xA;class SampleSchema &lt; GraphQL::Schema&#xA;  subscription Types::SampleType&#xA;  query Types::SampleType&#xA;end&#xA;&#xA;SampleSchema.execute('subscription greeting { greeting }')['data'] # nil - but want the same as query&#xA;SampleSchema.execute('query greeting { greeting }')['data'] # { greeting: 'Howdy!' }&#xA;</code></pre>&#xA;&#xA;<p>Note: have found this <a href=""http://graphql-ruby.org/subscriptions/subscription_type.html"" rel=""nofollow noreferrer"">Subscription Type</a> documents that specify the return value of the resolver is not used for data (only authorization).</p>&#xA;",259900,,,,2018-10-19 23:57:17,GraphQL Ruby Subscription Executing Initial Query,<ruby><graphql><graphql-ruby>,1,0,0,2018-10-17 22:44:43
52904569,1,52905947,,1,2878,"<p>I built a GraphQL server as follows,</p>&#xA;&#xA;<pre><code>import express from 'express';&#xA;import graphqlHTTP from 'express-graphql';&#xA;import { schema } from './data/schema';&#xA;&#xA;const app = express();&#xA;&#xA;app.use(express.static(__dirname + '/public'));&#xA;app.get('/', function(req, res) {&#xA;  res.sendFile('index.html');&#xA;});&#xA;&#xA;app.use('/graphql', graphqlHTTP({&#xA;  schema: schema,&#xA;  graphiql: true&#xA;}));&#xA;&#xA;app.listen(8081, () =&gt; {&#xA;  console.log('Running server on port localhost:8081/graphql');&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>And I can make a POST call from Postman like below,</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Vge3c.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Vge3c.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>However, when I try to call the API with fetch in the app.js file which is loaded in the index.html as follows,</p>&#xA;&#xA;<pre><code>function fetchQuery(query) {&#xA;  return fetch('/graphql', {&#xA;    method: 'POST',&#xA;    header: {&#xA;      'Content-Type': 'application/json'&#xA;    },&#xA;    body: JSON.stringify({ query })&#xA;  }).then(response =&gt; {&#xA;    return response.json();&#xA;  });&#xA;}&#xA;const query = `{&#xA;  friend {&#xA;    firstName&#xA;  }&#xA;}`;&#xA;&#xA;fetchQuery(query).then((data) =&gt; {&#xA;  console.log(data);&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>It says the following errors,<br>&#xA;app.js:2 POST <a href=""http://localhost:8081/graphql"" rel=""nofollow noreferrer"">http://localhost:8081/graphql</a> 400 (Bad Request)<br>&#xA;and response error message: ""Must provide query string.""</p>&#xA;",1527033,,,,2018-10-20 13:02:06,"GraphQL API works with Postman, but failed with Javascript fetch",<javascript><graphql>,1,2,0,2018-10-20 10:16:43
52921858,2,,52842359,1,,"<p>I have the same problem and was able to find this comment from <a href=""https://github.com/apollographql/graphql-tools/issues/957#issuecomment-423504825"" rel=""nofollow noreferrer"">graphql-tools issue #957</a>.</p>&#xA;&#xA;<blockquote>&#xA;  <p>From the <a href=""https://github.com/apollographql/graphql-tools/blob/master/CHANGELOG.md#400"" rel=""nofollow noreferrer"">changelog</a>:</p>&#xA;  &#xA;  <blockquote>&#xA;    <p>NOTE: graphql 14 includes breaking changes. We're bumping the major version of graphql-tools to accommodate those breaking changes. If you're planning on using graphql 14 with graphql-tools 4.0.0, please make sure you've reviewed the graphql breaking changes list.</p>&#xA;  </blockquote>&#xA;  &#xA;  <p>This is likely caused by the fact that <code>graphql-js</code> now requires you to define your directives in your schema, before you attempt to use them. For example:</p>&#xA;&#xA;<pre><code>directive @upper on FIELD_DEFINITION&#xA;&#xA;type TestObject {&#xA;  hello: String @upper&#xA;}&#xA;</code></pre>&#xA;  &#xA;  <p>You can likely work around this by pre-defining your directives in your schema, but I'd like to confirm this. If this works, we'll need to update the docs.</p>&#xA;</blockquote>&#xA;",1512466,,2460879,2018-10-22 13:49:37,2018-10-22 13:49:37,"",,0,1,0,2018-10-22 02:59:51
52931532,2,,52795782,0,,<p>I opened a case with AWS Support and was told that the only way they know to do this is to create a Lambda Resolver that:</p>&#xA;&#xA;<ol>&#xA;<li>Takes an array of student IDs</li>&#xA;<li>Calls the students endpoint for each one</li>&#xA;<li>Returns an array of student details information</li>&#xA;</ol>&#xA;,10500118,,,,2018-10-22 14:17:39,"",,0,0,0,2018-10-22 14:17:39
52999046,1,,,0,336,"<p>Someone has an idea why a project compiled for production, runs well in local, when I deploy it in aws with the same environment, almost all the queries to graphql throw the error:</p>&#xA;&#xA;<pre><code>TypeError: property descriptors must not specify a value or be writable when a getter or setter has been specified&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Qokv0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Qokv0.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><strong>Local OS:</strong>&#xA;nginx 1.14&#xA;manjaro 18</p>&#xA;&#xA;<p><strong>Remote OS (AWS):</strong>&#xA;nginx 1.14&#xA;Ubuntu 18.04</p>&#xA;&#xA;<p><strong>Package.json dependencies, both enviroments:</strong></p>&#xA;&#xA;<p>""@mdi/font"": ""^2.5.94"",<br>&#xA;""apollo-cache-inmemory"": ""^1.2.5"",<br>&#xA;""apollo-client"": ""^2.4.3"",<br>&#xA;""apollo-link-context"": ""^1.0.8"",<br>&#xA;""apollo-link-http"": ""^1.5.4"",<br>&#xA;""apollo-server"": ""^2.1.0"",<br>&#xA;""apollo-upload-client"": ""^9.0.0"",<br>&#xA;""axios"": ""^0.18.0"",<br>&#xA;""buefy"": ""^0.6.7"",<br>&#xA;""cors"": ""^2.8.4"",<br>&#xA;""express"": ""^4.16.3"",<br>&#xA;""graphql"": ""^0.12.3"",<br>&#xA;""graphql-tag"": ""^2.6.1"",<br>&#xA;""moment"": ""^2.22.2"",<br>&#xA;""nprogress"": ""^0.2.0"",<br>&#xA;""sendmail"": ""^1.4.1"",<br>&#xA;""serve-static"": ""^1.13.2"",<br>&#xA;""vue"": ""^2.5.2"",<br>&#xA;""vue-apollo"": ""^3.0.0-alpha.3"",<br>&#xA;""vue-axios"": ""^2.1.3"",<br>&#xA;""vue-clipboard2"": ""^0.2.1"",<br>&#xA;""vue-router"": ""^3.0.1"",<br>&#xA;""vuelidate"": ""^0.7.4"",<br>&#xA;""vuex"": ""^3.0.1""  </p>&#xA;",5513466,,5513466,2018-10-25 22:43:10,2018-10-25 22:43:10,"Any idea why cloneDeep is broken in apollo-utilities with vue, nginx and aws",<amazon-web-services><express><nginx><vue.js><apollo-client>,0,2,0,2018-10-25 22:38:01
53038430,2,,46719337,1,,"<p>when you start the Docker using docker quickstart terminal, you can see the IP Address. (you can get to know the ip-address using the command ""docker-machine ip"" as well)</p>&#xA;&#xA;<p>URL to access will be <a href=""http://ip-address:portbinded"" rel=""nofollow noreferrer"">http://ip-address:portbinded</a></p>&#xA;",2849063,,,,2018-10-29 03:37:33,"",,0,0,0,2018-10-29 03:37:33
53039581,2,,52352612,5,,<p>I solved it by installing them separately.<code>npm install apollo-client apollo-cache-inmemory apollo-link-http react-apollo graphql-tag graphql --save&#xA;</code></p>&#xA;,3125971,,,,2018-10-29 06:00:01,"",,0,1,0,2018-10-29 06:00:01
53060269,1,,,1,1175,"<p>I have a very weird issue with Apollo Client.</p>&#xA;&#xA;<p>We are using apollo-client@1.9.3 with react (react-apollo@1.4.16).&#xA;In our project, we notice that apollo always wait for 1 to 2 seconds before sending the request.</p>&#xA;&#xA;<p>Below is a screenshot of the situation:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/JLKbr.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/JLKbr.jpg"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>This is how our client config looks like:</p>&#xA;&#xA;<pre><code>    const customNetworkInterface = {&#xA;    query: request =&gt;&#xA;        fetch('/graphql', {&#xA;            method: 'POST',&#xA;            credentials: 'include',&#xA;            mode: 'cors',&#xA;            cache: 'default',&#xA;&#xA;            headers: {&#xA;                Accept: '*/*',&#xA;                'Content-Type': 'application/json',&#xA;                'X-Requested-With': 'XMLHttpRequest',&#xA;            },&#xA;            body: JSON.stringify({&#xA;                ...request,&#xA;                query: print(request.query),&#xA;            }),&#xA;        })&#xA;            .then(resp =&gt; resp.json())&#xA;            .then(({ data, errors }) =&gt; {&#xA;                if (errors) {&#xA;                    const userErrors = errors&#xA;                        .filter(({ code }) =&gt; +code &gt;= 400 &amp;&amp; +code &lt;= 401)&#xA;                        .map(({ message }) =&gt; message)&#xA;                        .join('\n');&#xA;                    const serverErrors = errors&#xA;                        .filter(&#xA;                            ({ code }) =&gt; !code || (+code &lt; 400 &amp;&amp; +code &gt; 401)&#xA;                        )&#xA;                        .map(({ message }) =&gt; message)&#xA;                        .join('\n');&#xA;                    if (serverErrors.length &gt; 0) {&#xA;                        error(serverErrors);&#xA;                        if (isProduction) {&#xA;                            window.triggerAlert(&#xA;                                'danger',&#xA;                                'The server encountered an error. Our technical team has been notified.'&#xA;                            );&#xA;                        } else {&#xA;                            window.triggerAlert('danger', serverErrors);&#xA;                        }&#xA;                    } else if (userErrors.length &gt; 0) {&#xA;                        window.triggerAlert('danger', userErrors);&#xA;                    }&#xA;                }&#xA;&#xA;                return { data, errors };&#xA;            }),&#xA;};&#xA;&#xA;const networkInterface = createNetworkInterface({&#xA;    uri: '/graphql',&#xA;    opts: {&#xA;        credentials: 'same-origin',&#xA;    },&#xA;});&#xA;networkInterface.useAfter([&#xA;    {&#xA;        applyAfterware({ response }, next) {&#xA;            response&#xA;                .clone()&#xA;                .json()&#xA;                .then(responseJson =&gt; {&#xA;                    if (responseJson.errors) {&#xA;                        error(&#xA;                            responseJson.errors&#xA;                                .map(({ message }) =&gt; message)&#xA;                                .join('\n')&#xA;                        );&#xA;                    }&#xA;                    next();&#xA;                });&#xA;        },&#xA;    },&#xA;]);&#xA;&#xA;export const client = new ApolloClient({&#xA;    networkInterface: customNetworkInterface,&#xA;    queryDeduplication: true,&#xA;    addTypename: true,&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Then the query code is with react-apollo:</p>&#xA;&#xA;<pre><code>graphql(RaceResultsQuery, {&#xA;    props: ({ ownProps, data }) =&gt; ({&#xA;        race_results: _.get(data, 'me.my_race_results', []),&#xA;    }),&#xA;}),&#xA;</code></pre>&#xA;",406358,,406358,2018-10-30 09:09:13,2022-10-09 22:20:18,Apollo Client delays request,<react-apollo><apollo-client>,1,5,0,2018-10-30 08:36:57
53065017,2,,53053969,5,,"<p>The host <code>*.lp.gql.zone</code> is a Launchpad graphql server. So you have your server running on Launchpad, not on your local machine.</p>&#xA;&#xA;<p>Also connecting to your local machine using Expo does not make a lot of sense. The ""localhost"" in this case is the phone device that runs the app.</p>&#xA;&#xA;<p>I guess what you really want is for the Expo app on the device to connect to your development graphql server on your mac/pc? In this case you should use the IP address you see in the debug view:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/D82ei.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/D82ei.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Your connect url in this case becomes: <code>http://10.10.9.70:8080/graphql</code></p>&#xA;",2846463,,2846463,2018-10-30 13:17:33,2018-10-30 13:17:33,"",,0,1,0,2018-10-30 13:08:07
53073728,2,,53073648,2,,"<p>Just provide a <code>skip</code> function to <code>qraphql</code> hoc:</p>&#xA;&#xA;<pre><code>export default graphql(Query, {&#xA;  skip: ({ start, end }) =&gt; (!start || !end),&#xA;  options: ({ start, end }) =&gt; ({&#xA;    variables: { start, end }&#xA;  })&#xA;})(Comp);&#xA;</code></pre>&#xA;",10319970,,,,2018-10-30 22:23:58,"",,0,5,0,2018-10-30 22:23:58
53077232,1,,,1,522,"<p>I got this error. After get response from the api. (I think when the app reading the response because its related to Http1Codec). Anyone have any idea? It hard to reproduce as well.</p>&#xA;&#xA;<p>(We use okhttp along with <a href=""https://github.com/apollographql/apollo-android"" rel=""nofollow noreferrer"">ApolloGraphQL</a> )</p>&#xA;&#xA;<pre><code>Fatal Exception: java.lang.IllegalStateException&#xA;expected null but was okhttp3.internal.http1.Http1Codec&#xA;&#xA;okhttp3.internal.connection.StreamAllocation.streamFinished (StreamAllocation.java:304)&#xA;okhttp3.internal.http1.Http1Codec$AbstractSource.endOfInput (Http1Codec.java:386)&#xA;okhttp3.internal.http1.Http1Codec$FixedLengthSource.read (Http1Codec.java:416)&#xA;okio.RealBufferedSource.request (RealBufferedSource.java:68)&#xA;okhttp3.logging.HttpLoggingInterceptor.intercept (HttpLoggingInterceptor.java:241)&#xA;okhttp3.internal.http.RealInterceptorChain.proceed (RealInterceptorChain.java:147)&#xA;okhttp3.internal.http.RealInterceptorChain.proceed (RealInterceptorChain.java:121)&#xA;okhttp3.RealCall.getResponseWithInterceptorChain (RealCall.java:200)&#xA;okhttp3.RealCall$AsyncCall.execute (RealCall.java:147)&#xA;okhttp3.internal.NamedRunnable.run (NamedRunnable.java:32)&#xA;</code></pre>&#xA;",1025935,,1025935,2018-10-31 06:19:14,2018-11-01 04:13:17,Got an error on okhttp on Android expected null but was okhttp3.internal.http1.Http1Codec,<java><android><apollo><okhttp>,2,1,0,2018-10-31 06:05:46
53110469,2,,52795782,1,,"<p>It's not ideal, but you can create an intermediate type.</p>&#xA;&#xA;<pre><code>type Student {&#xA;  id: ID!&#xA;  lastName: String&#xA;}&#xA;type Class {&#xA;  id: ID!,&#xA;  studentDetails: [StudentDetails]&#xA;}&#xA;type StudentDetails {&#xA;  student: Student&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In your resolver template for <code>Class</code>, create a list of those student ids</p>&#xA;&#xA;<pre><code>#foreach ($student in $class.students)&#xA;  $util.qr($studentDetails.add({""id"": ""$student.id""}))&#xA;#end&#xA;</code></pre>&#xA;&#xA;<p>and add it to your response object. Then, hook a resolver to the <code>student</code> field of <code>StudentDetails</code> and you will then be able to use <code>$context.source.id</code> for the individual student API call. Each <code>id</code> will be broken out of the array and be its own web request.</p>&#xA;",1241339,,1241339,2019-10-24 22:53:10,2019-10-24 22:53:10,"",,0,1,0,2018-11-01 22:49:06
53168160,1,,,4,3310,"<p>I am getting a Network issue when querying graphql service from a React.js app using the apollo client. </p>&#xA;&#xA;<p>the graphql query gets this error: </p>&#xA;&#xA;<p>[Network error]: SyntaxError: Unexpected end of JSON input.</p>&#xA;&#xA;<p>The query : </p>&#xA;&#xA;<pre><code>&lt;Query&#xA;  query={gql`&#xA;    query {&#xA;      items(&#xA;        param1: ""value1""&#xA;        param2: ""value2""&#xA;        param3: ""value3""&#xA;        param4: ""value4""&#xA;      ) {&#xA;        value&#xA;      }&#xA;    }&#xA;  `}&#xA;&gt;&#xA;</code></pre>&#xA;&#xA;<p>The client is as follows:&#xA;    const client = new ApolloClient({&#xA;    uri: ""<a href=""https://someuri/graphql"" rel=""nofollow noreferrer"">https://someuri/graphql</a>"",&#xA;    fetchOptions: {&#xA;      mode: ""no-cors""&#xA;    }&#xA;   });</p>&#xA;&#xA;<p>I am not sure why this is happening? </p>&#xA;",7510999,,,,2019-04-14 23:32:02,Graphql Apollo Client issue : [Network error]: SyntaxError: Unexpected end of JSON input,<reactjs><graphql><react-apollo><apollo-client>,0,2,0,2018-11-06 08:22:27
53204772,1,,,0,365,"<p>I am trying to deploy a <code>typescript-graphql-postgres</code> server onto heroku. The build was successful, however, when run I get the following from heroku logs:</p>&#xA;&#xA;<blockquote>&#xA;  <p>UnhandledPromiseRejectionWarning: Error: Specified query type ""Query""&#xA;  not found in document. 2018-11-08T08:54:52.660051+00:00 app[web.1]: at&#xA;  /app/node_modules/graphql/utilities/buildASTSchema.js:184:15</p>&#xA;</blockquote>&#xA;&#xA;<p>Anyone encountered and know the fix?</p>&#xA;&#xA;<p>btw, when I run on my computer, the code works</p>&#xA;",7285771,,3211932,2018-11-09 02:06:24,2018-11-09 02:06:24,"Specified query type ""Query"" not found in document when deploying to heroku",<heroku><graphql><heroku-postgres>,1,0,0,2018-11-08 09:25:09
53212856,1,53213170,,3,221,"<p><a href=""https://facebook.github.io/graphql/draft/#sec-Schema-Introspection"" rel=""nofollow noreferrer"">https://facebook.github.io/graphql/draft/#sec-Schema-Introspection</a></p>&#xA;&#xA;<blockquote>&#xA;<pre><code>type __Schema {&#xA;  types: [__Type!]!&#xA;  queryType: __Type!&#xA;  mutationType: __Type&#xA;  subscriptionType: __Type&#xA;  directives: [__Directive!]!&#xA;}&#xA;&#xA;type __Type {&#xA;  kind: __TypeKind!&#xA;  name: String&#xA;  description: String&#xA;...&#xA;</code></pre>&#xA;</blockquote>&#xA;&#xA;<p>Information downloaded from <a href=""https://developer.github.com/v4/guides/intro-to-graphql/#discovering-the-graphql-api"" rel=""nofollow noreferrer"">https://developer.github.com/v4/guides/intro-to-graphql/#discovering-the-graphql-api</a> (<code>curl -H ""Authorization: bearer token"" https://api.github.com/graphql</code>)</p>&#xA;&#xA;<p>(beginning of the file</p>&#xA;&#xA;<blockquote>&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""__schema"": {&#xA;      ""queryType"": {&#xA;        ""name"": ""Query""&#xA;      },&#xA;      ""mutationType"": {&#xA;        ""name"": ""Mutation""&#xA;      },&#xA;      ""subscriptionType"": null,&#xA;      ""types"": [&#xA;        {&#xA;          ""kind"": ""SCALAR"",&#xA;          ""name"": ""Boolean"",&#xA;...&#xA;</code></pre>&#xA;</blockquote>&#xA;&#xA;<h2>Question:</h2>&#xA;&#xA;<p>I interpreted this so this GitHub schema result is invalid because <code>queryType</code> doesn't specify a <code>kind</code> which is <code>nonNullable</code> (<code>kind: __TypeKind!)</code></p>&#xA;&#xA;<p>Is this result violating the schema rules or am I missing something?</p>&#xA;",217408,,,,2018-11-08 17:29:18,Is GitHub API returning an invalid result for the schema query?,<graphql>,1,0,0,2018-11-08 17:11:42
53252347,1,,,13,15974,"<p>I have found that the <a href=""https://github.com/graphql/graphql-js"" rel=""noreferrer"">graphql-js</a>  library does not allow dependencies to also use graphql. </p>&#xA;&#xA;<p>You would get the following error </p>&#xA;&#xA;<p><code>Duplicate ""graphql"" modules cannot be used at the same time since different&#xA;versions may have different capabilities and behavior. The data from one&#xA;version used in the function from another could produce confusing and&#xA;spurious results.</code></p>&#xA;&#xA;<p>from the following code</p>&#xA;&#xA;<pre><code>const express = require('express');&#xA;const graphqlHTTP = require('express-graphql');&#xA;const { GraphQLSchema } = require('graphql'); &#xA;// the module graphql-test-mod-obj-type' has &#xA;// graphql as a depenedency&#xA;const myType = require('graphql-test-mod-obj-type');&#xA;&#xA;const app = express();&#xA;&#xA;const schema = new GraphQLSchema({ query: myType })&#xA;&#xA;app.use('/graphql', graphqlHTTP({&#xA;  schema,&#xA;  graphiql: true&#xA;}));&#xA;&#xA;app.listen(4000);&#xA;</code></pre>&#xA;&#xA;<p>I created a small repo and a small public npm package to demonstrate this &#xA;<a href=""https://github.com/ghinks/graphql-test-consume-graphql-obj-type.git"" rel=""noreferrer"">repo-with-npm-dependency-on-graphql</a> .</p>&#xA;&#xA;<p>This can be quite easily worked around by not having the graphql module as a dependency in the module. But surely this is an issue? Or is this a well known thing?</p>&#xA;",4891711,,,,2022-08-17 04:06:14,"Duplicate ""graphql"" modules cannot be used",<graphql-js>,4,2,0,2018-11-11 19:24:48
53272112,1,53272290,,3,516,"<p>I am making a call that returns questions and their answers. When I make this directly to the server, the response is as expected. Additionally, when react makes the call and I check developer tools, the response is as expected.</p>&#xA;&#xA;<p>Once I get a response from Apollo, the data is mixed and results are bleeding into one another.</p>&#xA;&#xA;<p>You will notice in these two images, the results are the same after a few results are expanded. I am not sure what could be causing this.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/jf5wR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jf5wR.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/VPEav.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VPEav.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Why would freeform be combining?</p>&#xA;&#xA;<p>My setup is like this:</p>&#xA;&#xA;<p>I import the query and then run this on the client which is Apollo:</p>&#xA;&#xA;<pre><code>this.props.client.query({ query: getCoreObjectsQuery, variables: { companyId: 1}})&#xA;              .then((result) =&gt; {&#xA;                console.log(result, 'getCoreObjectsQuery')&#xA;</code></pre>&#xA;&#xA;<p>From there, when I go to look at getCoreObjectsQuery, it looks like the above images!</p>&#xA;",1604072,,,,2018-11-13 01:04:17,Apollo is mixing results from a GraphQL Query in React,<reactjs><graphql><apollo><react-apollo>,1,0,0,2018-11-13 00:36:06
53305314,2,,53261389,0,,"<p>If it works with localhost but not on your running server, perhaps it's something with how the <code>getLoginUser()</code> function is working.</p>&#xA;&#xA;<p>You can console.log the output of that function to debug like so:&#xA;<code>&#xA;graphql(getCicadaByUserIdQuery,{&#xA;    name:""getCicadaByUserIdQuery"",&#xA;    options: () =&gt; {&#xA;      console.log(getLoginUser());&#xA;      return { variables: { id: getLoginUser().id } };&#xA;    }&#xA; }),&#xA;</code></p>&#xA;&#xA;<p>If it's working in localhost then it's probably not an issue with Apollo Client itself.</p>&#xA;",3195751,,,,2018-11-14 17:01:29,"",,0,1,0,2018-11-14 17:01:29
53364041,1,,,0,273,"<p>OS: Windows 10 Pro<br>&#xA;apollo-boost: ""^0.1.16""<br>&#xA;apollo-client: ""^2.4.2""   </p>&#xA;&#xA;<p>Does anyone know how to access the <code>client.mutate</code> method from Apollo now? I wish to do the following:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>  client.mutate({&#xD;&#xA;      mutation: REMOVE_FROM_CART_MUTATION,&#xD;&#xA;      variables: {&#xD;&#xA;         cartItem.id,&#xD;&#xA;      },&#xD;&#xA;  })&#xD;&#xA;  .catch(this.handleSubmitError);&#xD;&#xA;&#xD;&#xA;....&#xD;&#xA;withApollo(CartItem);</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",5613904,,,,2019-03-01 17:01:19,HowTo: Access client.mutate method from Apollo? Refactoring from 1.9.2 to 2.4.2,<reactjs><apollo><react-apollo>,1,0,0,2018-11-18 18:15:06
53367351,1,53370450,,4,1595,"<p>Here is a <a href=""https://github.com/stonecold123/typegraphql-test"" rel=""nofollow noreferrer"">reproducible example</a>. Run <code>app.js</code> and navigate the playground at <a href=""http://localhost:4000/graphql"" rel=""nofollow noreferrer"">http://localhost:4000/graphql</a></p>&#xA;&#xA;<p>You can run queries like:</p>&#xA;&#xA;<pre><code>query RecipeQuery{&#xA;  recipe(title:""Recipe 2""){&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Problem:</p>&#xA;&#xA;<p>I need debugging information from the <code>extensions</code> field in the response data. I'm talking about this <code>extensions</code> field:</p>&#xA;&#xA;<pre><code>  ""data"":{....},&#xA;  ""extensions"": {&#xA;    ""tracing"": {}&#xA;    ""cacheControl"":{}&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>But in reality, I'm only getting the data field:</p>&#xA;&#xA;<pre><code>  ""data"":{....}&#xA;</code></pre>&#xA;&#xA;<p>I have already enabled <code>tracing</code> and <code>cacheControl</code> in the apollo server config but the <code>extensions</code> field is still excluded in the response data. How can I get the <code>extensions</code> data back?</p>&#xA;&#xA;<p>Here's how the apollo engine starts:</p>&#xA;&#xA;<pre><code>const expressApp = express();&#xA;&#xA;const server = new ApolloServer({&#xA;    schema,&#xA;    tracing: true,&#xA;    cacheControl: true,&#xA;    engine: false, // we will provide our own ApolloEngine&#xA;});&#xA;&#xA;server.applyMiddleware({ app: expressApp });&#xA;&#xA;const engine = new ApolloEngine({&#xA;    apiKey: ""YOUR_ID"",&#xA;&#xA;});&#xA;&#xA;engine.listen(&#xA;    {&#xA;        port,&#xA;        expressApp,&#xA;        graphqlPaths: [graphqlEndpointPath],&#xA;    },&#xA;    () =&gt; console.log(`Server with Apollo Engine is running on http://localhost:${port}`),&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>Dependencies</p>&#xA;&#xA;<pre><code>  ""dependencies"": {&#xA;    ""apollo-cache-control"": ""^0.1.1"",&#xA;    ""apollo-engine"": ""^1.1.2"",&#xA;    ""apollo-server-express"": ""^2.2.2"",&#xA;    ""graphql-depth-limit"": ""^1.1.0"",&#xA;    ""graphql-yoga"": ""^1.16.7"",&#xA;    ""type-graphql"": ""^0.15.0""&#xA;  }&#xA;</code></pre>&#xA;",2598292,,2598292,2018-11-19 02:05:24,2019-10-24 10:54:27,`Extensions` field not shown in apollo graphql response data,<node.js><express><graphql><apollo><apollo-server>,1,0,0,2018-11-19 01:58:13
53421653,2,,53415286,2,,"<p>The it turns out that Firefox has issues with websockets (see <a href=""https://bugzilla.mozilla.org/show_bug.cgi?id=712329"" rel=""nofollow noreferrer"">this bug report</a> that has been re-appeared even after the supposed fix). </p>&#xA;&#xA;<p>In Firefox it works directly after starting a novel browser but after some hot reloading it stops working. The following helps out with starting out fresh but not with the reloading issue:</p>&#xA;&#xA;<pre><code>const wsLink = new WebSocketLink({&#xA;  uri: SUBSCRIPTION_URI,&#xA;  options: {&#xA;    reconnect: true,&#xA;    timeout: 20000,&#xA;    lazy: true,&#xA;  },&#xA;});&#xA;&#xA;window.addEventListener('beforeunload', () =&gt; {&#xA;  // @ts-ignore - the function is private in typescript&#xA;  wsLink.subscriptionClient.close();&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I think the bug is related to this SO-question: <a href=""https://stackoverflow.com/questions/14140414/websocket-was-interrupted-while-page-is-loading-on-firefox-for-socket-io"">&quot;websocket was interrupted while page is loading&quot; on Firefox for Socket.io</a></p>&#xA;&#xA;<p>If you want to test different solutions I've created an example repo: <a href=""https://github.com/gforge/subscription_example"" rel=""nofollow noreferrer"">https://github.com/gforge/subscription_example</a> that works both by itself and with a Docker container.</p>&#xA;",409508,,409508,2019-06-08 11:08:46,2019-06-08 11:08:46,"",,0,0,0,2018-11-21 23:01:15
53472309,1,53472352,,0,92,"<p>I am using apollo client to query the server, and I can see the request is being sent and it is successful as I can render the returned data.</p>&#xA;&#xA;<p>But chrome only shows the <code>204</code> status code, whereas Firefox shows both <code>200</code> and <code>204</code>. </p>&#xA;&#xA;<p>Here is the picture from Firebox</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/VzfUD.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VzfUD.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>This is one from chrome:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/fd36r.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fd36r.png"" alt=""enter image description here""></a></p>&#xA;",6680253,,,,2018-11-25 21:52:02,chrome not showing 200 status on apollo requests,<google-chrome><graphql><apollo>,1,0,0,2018-11-25 21:46:17
53491095,1,,,0,122,<p>I have an Apollo app with an express/sequelize API. It runs fine in dev. Can anyone tell me what it should look like in prod? Ive added .env environment variables. Where do those get set on the web server? Do I change the url in Apollo client? How do I build/prepare the API for deployment to web server through FTP? I use bitbucket for CI/CD. I really don't what I'm supposed to do.</p>&#xA;,10614567,,,,2018-11-29 20:07:10,How do I deploy Apollo client and Node Express/Sequelize API?,<node.js><sequelize.js><graphql><apollo-client>,1,2,0,2018-11-27 00:30:31
53495843,2,,53493889,5,,"<p>Turn out that I used the code from some tutorial which is not up to date. There are 2 versions of the Resolver Mapping Template: <code>2018-05-29</code> and <code>2017-02-28</code>. So I need to change the template version to <code>2018-05-29</code> for it to work.</p>&#xA;&#xA;<pre><code>RequestMappingTemplate: |&#xA;  {&#xA;    ""version"": ""2018-05-29"",&#xA;    ""operation"": ""Invoke"",&#xA;    ""payload"": {&#xA;      ""field"": ""getError"",&#xA;      ""arguments"":  $utils.toJson($context.arguments)&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>See the changes between 2 versions here: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-changelog.html#changing-the-version-on-a-function"" rel=""noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-changelog.html#changing-the-version-on-a-function</a></p>&#xA;",2724342,,1480391,2019-01-21 10:24:34,2019-01-21 10:24:34,"",,0,2,0,2018-11-27 08:53:40
53504561,2,,53464569,0,,"<p>In network tab, click on <code>all</code> instead of <code>xhr</code></p>&#xA;",6680253,,,,2018-11-27 16:57:00,"",,0,0,0,2018-11-27 16:57:00
53546769,2,,53491095,0,,"<p>So basically the answer is, with Node, you can't just deploy to a static server and expect it to work. The app created is already it's own server. Therefore, you have to host on in a service like AWS, Heroku or Now to get it to work. This may seem obvious to some but at first this wasn't clear to me.</p>&#xA;",10614567,,,,2018-11-29 20:07:10,"",,0,0,0,2018-11-29 20:07:10
53554682,1,53568928,,1,231,"<p>I've been developing an app in the GRAND stack starter and after overcoming many hurdles, I finally wanted to deploy it and see it run. My goal is to do it all on Amazon. I have the front-end serving correctly, and a Neo4j instance running on an EC2 instance.</p>&#xA;&#xA;<p>Since the GRAND stack starter was using Apollo, their website suggested using Serverless. The problem I am running into I believe is a lack of information about the required folder structure. The GRAND stack starter has a src folder where the core files live with the package.json living a directory higher.</p>&#xA;&#xA;<p>Serverless says to make a serverless.yml file in the root, which I have one directory higher than source. It's contents are run-of-the-mill:</p>&#xA;&#xA;<pre><code># serverless.yml&#xA;service: apollo-lambda&#xA;provider:&#xA;  name: aws&#xA;  runtime: nodejs6.10&#xA;  region: us-west-2&#xA;  stage: production&#xA;functions:&#xA;  graphql:&#xA;    # this is formatted as &lt;FILENAME&gt;.&lt;HANDLER&gt;&#xA;    handler: graphql.graphqlHandler&#xA;    events:&#xA;    - http:&#xA;        path: graphql&#xA;        method: post&#xA;        cors: true&#xA;</code></pre>&#xA;&#xA;<p>Running serverless deploy does succeed in packaging up the files, pushing them to an S3 bucket and adding it to a Lambda. It weighs in at about 10mb. However when I am in AWS Lambda and I attempt to run a test on the Lambda function created, it says ""Cannot find module '/var/task/graphql"".</p>&#xA;&#xA;<p>It feels like it can't access my node_modules. Some people have had the packaged zip file accidentally have a folder wrap everything, but the apollo-lambda.zip generated by Serverless is not doing that. I can see my root structure just fine.</p>&#xA;&#xA;<p>I've spent many hours the past two days troubleshooting what I thought were first 502, then 403 errors, trying to see where I forgot to do something, until I got to this point. Any help would be appreciated.</p>&#xA;&#xA;<p>Frankly I am just not sure how my folder structure should look when deploying. If I move the serverless.yml within the src folder, it won't have the package.json or the node_modules folder</p>&#xA;",669749,,,,2018-12-01 07:58:50,Issues deploying Apollo with GRAND stack using Serverless,<aws-lambda><graphql><serverless><aws-serverless><grandstack>,1,0,0,2018-11-30 09:28:11
53571680,2,,53207275,1,,"<p>Go to <strong><em>node_modules/react-scripts/config/webpack.config</em></strong> (both dev &amp;&amp; prod files)</p>&#xA;&#xA;<pre><code>{&#xA;  test: /\.mjs$/,&#xA;  include: /node_modules/,&#xA;  type: ""javascript/auto""&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>past the above code inside <code>rules: [</code></p>&#xA;",10064641,,5444033,2018-12-01 16:21:16,2018-12-01 16:21:16,"",,0,0,0,2018-12-01 14:17:34
53682939,2,,53682045,0,,"<p>It's most likely because of mismatch of PyTorch versions between the server and your local computer. The notion of <code>Variable</code> being a concept separate from tensors has been deprecated with PyTorch 0.4, so I guess your local installation is newer than the server-side one.</p>&#xA;&#xA;<p>You can check the PyTorch version by running</p>&#xA;&#xA;<pre><code>import torch&#xA;print(torch.__version__)&#xA;</code></pre>&#xA;&#xA;<p>on both machines.</p>&#xA;",4280242,,,,2018-12-08 13:21:41,"",,0,0,0,2018-12-08 13:21:41
53707105,2,,53705378,4,,"<p>The JSON you have is the results of an <a href=""https://facebook.github.io/graphql/June2018/#sec-Introspection"" rel=""nofollow noreferrer"">introspection query</a>. Unfortunately, introspection will not allow you to copy a remote schema. That's because while it does identify what fields exist in a schema, it does not tell you anything about how they should be executed. For example, based on the snippet you posted, we know the remote server exposes a <code>_meta</code> query that returns a <code>Meta</code> type -- but we don't know what code to run to resolve the value returned by the query.</p>&#xA;&#xA;<p>Technically, it's possible to pass the results of an introspection query to <code>buildClientSchema</code> from the <code>graphql/utilities</code> module. However, the schema will not be executable, as the docs point out:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Given the result of a client running the introspection query, creates and returns a GraphQLSchema instance which can be then used with all GraphQL.js tools, but cannot be used to execute a query, as introspection does not represent the ""resolver"", ""parse"" or ""serialize"" functions or any other server-internal mechanisms.</p>&#xA;</blockquote>&#xA;&#xA;<p>If you want to create a proxy to another GraphQL endpoint, the easiest way is to use <code>makeRemoteExecutableSchema</code> from <code>graphql-tools</code>.</p>&#xA;&#xA;<p>Here's the example based on <a href=""https://www.apollographql.com/docs/graphql-tools/remote-schemas.html#makeRemoteExecutableSchema"" rel=""nofollow noreferrer"">the docs</a>:</p>&#xA;&#xA;<pre><code>import { HttpLink } from 'apollo-link-http';&#xA;import fetch from 'node-fetch';&#xA;&#xA;const link = new HttpLink({ uri: 'http://your-endpoint-url/graphql', fetch });&#xA;async function getRemoteSchema () {&#xA;  const schema = await introspectSchema(link);&#xA;  return makeRemoteExecutableSchema({&#xA;    schema,&#xA;    link,&#xA;  });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The resulting schema is a <code>GraphQLSchema</code> object that can be used like normal:</p>&#xA;&#xA;<pre><code>import { GraphQLServer } from 'graphql-yoga'&#xA;&#xA;async function startServer () {&#xA;  const schema = await introspectSchema(link);&#xA;  const executableSchema = makeRemoteExecutableSchema({&#xA;    schema,&#xA;    link,&#xA;  });&#xA;  const server = new GraphQLServer({ schema: executableSchema })&#xA;  server.start()&#xA;}&#xA;&#xA;startServer()&#xA;</code></pre>&#xA;&#xA;<p><code>graphql-tools</code> also allows you to <a href=""https://www.apollographql.com/docs/graphql-tools/schema-stitching.html"" rel=""nofollow noreferrer"">stitch schemas together</a> if you not only wanted to proxy the existing endpoint, but wanted to add on to it as well.</p>&#xA;",6024220,,6024220,2018-12-10 16:55:12,2018-12-10 16:55:12,"",,0,4,0,2018-12-10 13:51:21
53708778,2,,53595130,0,,<p>I think you forgot to use the <code>Settings</code> type in your schema:</p>&#xA;&#xA;<pre><code># import Node from './generated/prisma.graphql'&#xA;&#xA;type MobileSettings {&#xA;  firmware: String&#xA;}&#xA;&#xA;type DesktopSettings {&#xA;  os: String&#xA;}&#xA;&#xA;union Settings = MobileSettings | DesktopSettings&#xA;&#xA;type Device implements Node {&#xA;  id: ID!&#xA;  type: DeviceType&#xA;  settings: Settings # &lt;-- Here&#xA;}&#xA;&#xA;type Query {&#xA;  devices: [Device]&#xA;  node(id: ID!): Node&#xA;}&#xA;</code></pre>&#xA;,10721492,,,,2018-12-10 15:30:04,"",,0,0,0,2018-12-10 15:30:04
53715769,2,,53715260,7,,"<p>From the spec:</p>&#xA;&#xA;<blockquote>&#xA;  <p>A GraphQL server supports introspection over its schema. This schema is queried using GraphQL itself, creating a powerful platform for tool‐building... The schema introspection system is accessible from the meta‐fields __schema and __type which are accessible from the type of the root of a query operation.</p>&#xA;</blockquote>&#xA;&#xA;<p>Tools like GraphQL Playground and GraphiQL utilize introspection to get information about a schema. You don't need any additional tools or libraries to make an introspection query -- since it's just a GraphQL query, you'll make the request the same way you make any other request to the endpoint (using <code>requests</code> for example).</p>&#xA;&#xA;<p>Here's a complete introspection query from <code>graphql-core</code>:</p>&#xA;&#xA;<pre><code>introspection_query = """"""&#xA;  query IntrospectionQuery {&#xA;    __schema {&#xA;      queryType { name }&#xA;      mutationType { name }&#xA;      subscriptionType { name }&#xA;      types {&#xA;        ...FullType&#xA;      }&#xA;      directives {&#xA;        name&#xA;        description&#xA;        locations&#xA;        args {&#xA;          ...InputValue&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;  fragment FullType on __Type {&#xA;    kind&#xA;    name&#xA;    description&#xA;    fields(includeDeprecated: true) {&#xA;      name&#xA;      description&#xA;      args {&#xA;        ...InputValue&#xA;      }&#xA;      type {&#xA;        ...TypeRef&#xA;      }&#xA;      isDeprecated&#xA;      deprecationReason&#xA;    }&#xA;    inputFields {&#xA;      ...InputValue&#xA;    }&#xA;    interfaces {&#xA;      ...TypeRef&#xA;    }&#xA;    enumValues(includeDeprecated: true) {&#xA;      name&#xA;      description&#xA;      isDeprecated&#xA;      deprecationReason&#xA;    }&#xA;    possibleTypes {&#xA;      ...TypeRef&#xA;    }&#xA;  }&#xA;  fragment InputValue on __InputValue {&#xA;    name&#xA;    description&#xA;    type { ...TypeRef }&#xA;    defaultValue&#xA;  }&#xA;  fragment TypeRef on __Type {&#xA;    kind&#xA;    name&#xA;    ofType {&#xA;      kind&#xA;      name&#xA;      ofType {&#xA;        kind&#xA;        name&#xA;        ofType {&#xA;          kind&#xA;          name&#xA;          ofType {&#xA;            kind&#xA;            name&#xA;            ofType {&#xA;              kind&#xA;              name&#xA;              ofType {&#xA;                kind&#xA;                name&#xA;                ofType {&#xA;                  kind&#xA;                  name&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;""""""&#xA;</code></pre>&#xA;",6024220,,,,2018-12-11 00:35:31,"",,0,1,0,2018-12-11 00:35:31
53725327,2,,47282972,3,,"<p>To provide a straightforward answer - <strong>ApolloClient</strong> is no longer a part of the <code>react-apollo</code> package, but made it to a package of it's own: <code>apollo-client</code>.</p>&#xA;&#xA;<p>You may also see it being imported from <code>apollo-boost</code>, a convenience which ""includes some packages that we [Apollo's authors] think are essential to developing with Apollo Client.""</p>&#xA;",8555393,,,,2018-12-11 13:38:06,"",,0,0,0,2018-12-11 13:38:06
53731102,2,,53714832,0,,"<p>As you are using <code>14.0.2</code> which has an issue by <a href=""https://github.com/graphql/graphql-js/pull/1382"" rel=""nofollow noreferrer"">a change</a> to the graphql package introduced in latest release and there is <a href=""https://github.com/graphql/graphql-js/pull/1520"" rel=""nofollow noreferrer"">already a PR</a> which solves this problem. So better if you switch to <code>0.13.2</code> which works perfectly.</p>&#xA;",6673165,,,,2018-12-11 19:31:11,"",,0,1,0,2018-12-11 19:31:11
53756168,2,,53645113,0,,<p>It will query the server to fetch the missing fields.</p>&#xA;,4779229,,,,2018-12-13 06:31:07,"",,0,0,0,2018-12-13 06:31:07
53788462,2,,51334907,9,,"<p>I found this solution to the same problem i was facing</p>&#xA;&#xA;<pre><code>docker-machine ip default&#xA;</code></pre>&#xA;&#xA;<p>Use this address and replace the ""localhost"" with the IP with the above command to look something like this in prisma.yml file</p>&#xA;&#xA;<pre><code>endpoint: http://1xx.1xx.xx.xxx:4466&#xA;</code></pre>&#xA;&#xA;<p>The answer is referred from this <a href=""https://github.com/prisma/prisma/issues/2675#issuecomment-400326500"" rel=""noreferrer"">Github Link</a></p>&#xA;",2187751,,,,2018-12-15 00:20:23,"",,0,4,0,2018-12-15 00:20:23
53792064,1,53864038,,6,2922,"<p>I am working here with a graphql prisma backend and a graphql yoga express server on top of that. In the frontend, I am trying to call a signout mutation but its blocked by the CORS policy. Though I have added cors settings in my graphql yoga server, I keep getting this error. GraphQL Queries are working fine but Mutations are being blocked. My frontend URL is '<a href=""http://localhost:7777"" rel=""noreferrer"">http://localhost:7777</a>' and yoga server is running at '<a href=""http://localhost:4444/"" rel=""noreferrer"">http://localhost:4444/</a>'. The Error was:  </p>&#xA;&#xA;<pre><code>Access to fetch at 'http://localhost:4444/' from origin 'http://localhost:7777' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.&#xA;&#xA;[Network error]: TypeError: Failed to fetch&#xA;</code></pre>&#xA;&#xA;<p>GraphQL Yoga Server Cors Config:</p>&#xA;&#xA;<pre><code>server.start(&#xA;{&#xA;    cors: {&#xA;        credentials: true,&#xA;        origin: [process.env.FRONTEND_URL],&#xA;    },&#xA;},&#xA;deets =&gt; {&#xA;    console.log(&#xA;        `Server is now running on port http://localhost:${deets.port}`&#xA;    );&#xA;}&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>Mutation:</p>&#xA;&#xA;<pre><code>// import React, { Component } from 'react';&#xA;import { Mutation } from 'react-apollo';&#xA;import styled from 'styled-components';&#xA;import gql from 'graphql-tag';&#xA;import { CURRENT_USER_QUERY } from './User';&#xA;import { log } from 'util';&#xA;&#xA;const SIGN_OUT_MUTATION = gql`&#xA;mutation SIGN_OUT_MUTATION {&#xA;    signout {&#xA;        message&#xA;    }&#xA;}&#xA;`;&#xA;&#xA;const SignOutBtn = styled.button`&#xA;color: ${props =&gt; props.theme.textMedium};&#xA;padding: 10px;&#xA;margin-right: 20px;&#xA;text-align: center;&#xA;font-family: garamond-light;&#xA;border: 1px solid ${props =&gt; props.theme.textMedium};&#xA;border-radius: 5px;&#xA;transition: background-color 0.5s ease;&#xA;transition: color 0.5s ease;&#xA;:hover {&#xA;    background: ${props =&gt; props.theme.textMedium};&#xA;    color: ${props =&gt; props.theme.white};&#xA;}&#xA;`;&#xA;&#xA;const Signout = props =&gt; (&#xA;&lt;Mutation&#xA;    mutation={SIGN_OUT_MUTATION}&#xA;    refetchQueries={[{ query: CURRENT_USER_QUERY }]}&#xA;&gt;&#xA;    {signout =&gt; (&#xA;        &lt;SignOutBtn&#xA;            onClick={() =&gt; {&#xA;                console.log(""comes here"")&#xA;                signout();&#xA;            }}&#xA;        &gt;&#xA;            Sign Out&#xA;        &lt;/SignOutBtn&gt;&#xA;    )}&#xA;&lt;/Mutation&gt;&#xA;);&#xA;export default Signout;&#xA;</code></pre>&#xA;&#xA;<p>Please tell me what I am doing wrong here. Thanks in Advance.</p>&#xA;",3316224,,3316224,2018-12-15 12:43:32,2020-10-18 17:58:39,CORS blocks mutation in GraphQL Yoga,<javascript><express><graphql><react-apollo><prisma-graphql>,5,3,0,2018-12-15 11:50:10
53827171,2,,53826329,0,,"<p>You cannot do anything w.r.t GraphQL. Since you need to have the field present in the GraphQL type system. There may be libraries available, which will allow you to specify whether the field <strong>should</strong> be present in the query or not. But, there's no way of allowing non-existent field in the Query.</p>&#xA;&#xA;<p>But what you can do is opt for a <strong>Blue-Green</strong> deployment strategy. In this strategy, you have both the versions running at the same time.</p>&#xA;&#xA;<p>Let's say: <strong>Green</strong> is the version <strong>with Field A</strong> and <strong>Blue</strong> is the version <strong>without Field A</strong>. So when your clients are updated they start requesting the <strong>Blue</strong> version. And once all your clients are updated, shut-down the <strong>Green (<em>with Field A</em>)</strong>.</p>&#xA;",6335075,,,,2018-12-18 05:59:49,"",,0,0,0,2018-12-18 05:59:49
53851386,2,,53789207,0,,"<p>I also ran into this issue, and this is how I've managed it to work.</p>&#xA;&#xA;<ol>&#xA;<li>Go to <a href=""https://www.apollographql.com/docs/apollo-server/essentials/server.html#middleware"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/essentials/server.html#middleware</a> and see the section ""Middleware"". They say that you can add an Apollo Server as a middleware to existing Express server. So, you should install the package <code>apollo-server-express</code> and import ApolloServer from it. Then start your Express server and Apollo Server will be on <code>path-to-your-server/graphql</code>.</li>&#xA;<li>Then you should build your Vue app and specify your path to GraphQL server as a link to your Heroku app plus <code>/graphql</code> (I did it through <code>.env</code> file).</li>&#xA;<li>Deploy to Heroku and that's all! It took me around 10 minutes.</li>&#xA;</ol>&#xA;&#xA;<p>Also, you can see my source code here&#xA;<a href=""https://github.com/kravchenkoegor/fullstack-vue-graphql/blob/master/src/server.js"" rel=""nofollow noreferrer"">https://github.com/kravchenkoegor/fullstack-vue-graphql/blob/master/src/server.js</a></p>&#xA;",9748615,,,,2018-12-19 12:34:17,"",,0,0,0,2018-12-19 12:34:17
53887904,2,,53878634,1,,"<p>Only adding <code>ctx.ctx.apolloClient = apollo</code> in the withApollo.js file, all will work. The complete code would be:</p>&#xA;&#xA;<pre><code>import React from ""react"";&#xA;import Head from ""next/head"";&#xA;import { getDataFromTree } from ""react-apollo"";&#xA;&#xA;import initApollo from ""./initApollo"";&#xA;&#xA;export default App =&gt; {&#xA;  return class WithData extends React.Component {&#xA;    static displayName = `WithData(${App.displayName})`;&#xA;&#xA;    static async getInitialProps(ctx) {&#xA;      const { Component, router } = ctx;&#xA;      const apollo = initApollo({});&#xA;&#xA;      ctx.ctx.apolloClient = apollo;&#xA;&#xA;      let appProps = {};&#xA;      if (App.getInitialProps) {&#xA;        appProps = await App.getInitialProps(ctx);&#xA;      }&#xA;&#xA;      // Run all GraphQL queries in the component tree&#xA;      // and extract the resulting data&#xA;      if (!process.browser) {&#xA;        try {&#xA;          // Run all GraphQL queries&#xA;          await getDataFromTree(&#xA;            &lt;App&#xA;              {...appProps}&#xA;              Component={Component}&#xA;              router={router}&#xA;              apolloClient={apollo}&#xA;            /&gt;&#xA;          );&#xA;        } catch (error) {&#xA;          console.error(""Error while running `getDataFromTree`"", error);&#xA;        }&#xA;&#xA;        // getDataFromTree does not call componentWillUnmount&#xA;        // head side effect therefore need to be cleared manually&#xA;        Head.rewind();&#xA;      }&#xA;&#xA;      // Extract query data from the Apollo store&#xA;      const apolloState = apollo.cache.extract();&#xA;&#xA;      return {&#xA;        ...appProps,&#xA;        apolloState&#xA;      };&#xA;    }&#xA;&#xA;    constructor(props) {&#xA;      super(props);&#xA;      this.apolloClient = initApollo(props.apolloState);&#xA;    }&#xA;&#xA;    render() {&#xA;      return &lt;App {...this.props} apolloClient={this.apolloClient} /&gt;;&#xA;    }&#xA;  };&#xA;};&#xA;</code></pre>&#xA;",8341544,,,,2018-12-21 16:19:37,"",,0,1,0,2018-12-21 16:19:37
53900515,2,,47104382,1,,"<p>There is a helper from the Apollo Client library called <code>createNetworkInterface</code> and you can import it like so:</p>&#xA;&#xA;<pre><code>import ApolloClient, { createNetworkInterface } from 'apollo-client';&#xA;</code></pre>&#xA;&#xA;<p>Then you can implement it like so:</p>&#xA;&#xA;<pre><code>const networkInterface = createNetworkInterface({&#xA;  uri: &#xA;});&#xA;</code></pre>&#xA;&#xA;<p>The Apollo Client assumes that your graphql client on the express side is listening on the endpoint <code>/graphql</code>. You can verify this by going to your <code>server.js</code> file.</p>&#xA;&#xA;<p>You should see something like:</p>&#xA;&#xA;<pre><code>// Instruct Express to pass on any request made to the '/graphql' route&#xA;// to the GraphQL instance.&#xA;app.use(&#xA;  '/graphql',&#xA;  expressGraphQL({&#xA;    schema,&#xA;    graphiql: true&#xA;  })&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>So the <code>uri:</code> option you specify is still GraphQL like so:</p>&#xA;&#xA;<pre><code>const networkInterface = createNetworkInterface({&#xA;  uri: '/graphql'&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>We do this because whenever we create our own <code>networkInterface</code> it no longer assumes the <code>uri</code> is <code>/graphql</code> so we have to directly say it.</p>&#xA;&#xA;<p>The part that really matters is the <code>opts:</code> property like so:</p>&#xA;&#xA;<pre><code>const networkInterface = createNetworkInterface({&#xA;  uri: '/graphql',&#xA;  opts: {&#xA;    credentials: 'same-origin'&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>This is saying its safe to send along cookies whenever it makes a query to the backend server. So you take this <code>networkInterface</code> and pass it along to the Apollo Client like so:</p>&#xA;&#xA;<pre><code>const networkInterface = createNetworkInterface({&#xA;  uri: '/graphql',&#xA;  opts: {&#xA;    credentials: 'same-origin'&#xA;  }&#xA;});&#xA;&#xA;const client = new ApolloClient({&#xA;  networkInterface,&#xA;  dataIdFromObject: o =&gt; o.id&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>So that is pretty much it for getting Apollo to send along cookies along with every single request it makes to the backend.</p>&#xA;",6719819,,,,2018-12-23 01:20:05,"",,0,0,0,2018-12-23 01:20:05
53925260,2,,53257580,-1,,"<p>If your repo is public, you can use a free hosting solution such as <a href=""https://www.jsdelivr.com"" rel=""nofollow noreferrer"">https://www.jsdelivr.com</a> which can serve the file from Github (<a href=""https://www.jsdelivr.com/features#gh"" rel=""nofollow noreferrer"">https://www.jsdelivr.com/features#gh</a>) with the right content-type. You just have to build the url according to :</p>&#xA;&#xA;<pre><code>https://cdn.jsdelivr.net/gh/&lt;user&gt;/&lt;repo&gt;@&lt;branch&gt;/path/to/file.png&#xA;</code></pre>&#xA;&#xA;<p>A few example : </p>&#xA;&#xA;<p><a href=""https://cdn.jsdelivr.net/gh/bertrandmartel/newhaven-oled-dk51@master/img/newhaven-dk51.jpg"" rel=""nofollow noreferrer"">https://cdn.jsdelivr.net/gh/bertrandmartel/newhaven-oled-dk51@master/img/newhaven-dk51.jpg</a>&#xA;<a href=""https://cdn.jsdelivr.net/gh/bertrandmartel/websocket-java@master/exemples/readme_images/clientSide.png"" rel=""nofollow noreferrer"">https://cdn.jsdelivr.net/gh/bertrandmartel/websocket-java@master/exemples/readme_images/clientSide.png</a>&#xA;<a href=""https://cdn.jsdelivr.net/gh/bertrandmartel/fritzing-parts@master/metec-braille-line-20-cell/metec-braille-line-20-cell.svg"" rel=""nofollow noreferrer"">https://cdn.jsdelivr.net/gh/bertrandmartel/fritzing-parts@master/metec-braille-line-20-cell/metec-braille-line-20-cell.svg</a></p>&#xA;",2614364,,,,2018-12-25 19:55:50,"",,0,0,0,2018-12-25 19:55:50
53960809,1,53963709,,2,540,"<p>I'm migrating my connection with GitHub REST API to GraphQL API and I'm confused about getting latest release.</p>&#xA;&#xA;<p>When I use this endpoint bellow to get latest release with REST API it will never return Draft releases or prereleases.</p>&#xA;&#xA;<pre><code>/repos/:owner/:repo/releases/latest&#xA;</code></pre>&#xA;&#xA;<p>But, when I do the same with GraphQL API I can't filter that, using the query bellow I get the latest release but if it is and prerelease I'll have to query again to find another one.</p>&#xA;&#xA;<pre><code>{&#xA;  InovaFarmaApi: repository(owner: ""precisaosistemas"", name: ""inovafarma-api"") {&#xA;    ...releaseData&#xA;  }&#xA;}&#xA;&#xA;fragment releaseData on Repository {&#xA;  releases (last: 2) {&#xA;      nodes {&#xA;        isPrerelease&#xA;      }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Can I filter for only release and not Draft releases or prereleases?</p>&#xA;",4121119,,,,2018-12-28 19:57:13,Get latest release without prerelease in GraphQL,<github><graphql><github-api>,1,1,0,2018-12-28 15:31:54
53995283,1,,,10,6421,"<p>I'm getting started with graphQL and apollo. I'm doing some simple queries and mutations fine but when I try to access data from apollo cache I keep getting ""Can't find field me on object undefined"" but when using apollo chrome plugin it returns data correct.</p>&#xA;&#xA;<p>When logged into my app I run a simple query that fetches the user object from the server. It logs correct, I can see in chome dev apollo under queries and cache that my user data is there.</p>&#xA;&#xA;<pre><code>const ME_QUERY = gql`&#xA;query {&#xA;    me {&#xA;    _id&#xA;    username&#xA;    password&#xA;    exchanges {&#xA;        name&#xA;        active&#xA;        }&#xA;    }&#xA;}&#xA;`;&#xA;&#xA;&lt;Query query={ME_QUERY}&gt;&#xA;  {({loading, error, data}) =&gt; {&#xA;    if (error) {&#xA;      return &lt;Error error={error.message} /&gt;;&#xA;    }&#xA;    if (data) {&#xA;      console.log(data, 'data');&#xA;    }&#xA;    return &lt;div&gt;asdf&lt;/div&gt;&#xA;  }}&#xA;&lt;/Query&gt;&#xA;</code></pre>&#xA;&#xA;<p>I have wrapped withApollo and I can log the client object fine in the component where I'm trying to query. I run the following code:</p>&#xA;&#xA;<pre><code>componentDidMount() {&#xA;    console.log(this.props.client.readQuery, 'propps');&#xA;    const  user = this.props.client.readQuery({&#xA;        query: gql`&#xA;{&#xA;  me {&#xA;    _id&#xA;    username&#xA;    password&#xA;    exchanges {&#xA;      name&#xA;      active&#xA;    }&#xA;  }&#xA;}&#xA;      `&#xA;});&#xA;console.log(user, 'user');&#xA;</code></pre>&#xA;&#xA;<p>And that results in Uncaught Error: Can't find field me on object undefined Ive also tried with adding variables but it doesn't help.</p>&#xA;&#xA;<p>Which object is undefined? Any idea why my query fails?</p>&#xA;",4284613,,,,2019-05-29 05:40:40,readQuery from cache results in Can't find field <field> on object undefined,<react-apollo><apollo-client>,1,1,0,2019-01-01 12:04:55
53997660,2,,45522750,0,,<p>Change to version 1.5.9.RELEASE of the spring-boot-starter-stop and it worked for me</p>&#xA;,7605552,,,,2019-01-01 17:53:52,"",,0,0,0,2019-01-01 17:53:52
54037128,1,,,15,1211,"<p>I'm in the process of setting a graphql endpoint with servlerless/ lambda and am receiving an error when trying to connect to the graphql playground that comes with graphql-yoga. When I go to my route that has the playground (<code>/playground</code>) it launches the playground interface however it just says:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Server cannot be reached</p>&#xA;</blockquote>&#xA;&#xA;<p>In the top right of the playground. It's worth noting i'm using the <code>makeRemoteExecutableSchema</code> utility to proxy to another graphql endpoint (which is my CMS called Prismic). I don't believe this is the issue as I have successfully connected to it with the playground when testing on a normal express server. </p>&#xA;&#xA;<p>Here is the code in my <strong>handler.js</strong></p>&#xA;&#xA;<pre><code>'use strict';&#xA;&#xA;const { makeRemoteExecutableSchema } = require('graphql-tools');&#xA;const { PrismicLink } = require(""apollo-link-prismic"");&#xA;const { introspectSchema } = require('graphql-tools');&#xA;const { ACCESS_TOKEN, CMS_URL } = process.env;&#xA;const { GraphQLServerLambda } = require('graphql-yoga')&#xA;&#xA;const lambda = async () =&gt; {&#xA;  const link = PrismicLink({&#xA;    uri: CMS_URL,&#xA;    accessToken: ACCESS_TOKEN&#xA;  });&#xA;&#xA;  const schema = await introspectSchema(link);&#xA;&#xA;  const executableSchema = makeRemoteExecutableSchema({&#xA;    schema,&#xA;    link,&#xA;  });&#xA;&#xA;  return new GraphQLServerLambda({ &#xA;    schema: executableSchema,&#xA;    context: req =&gt; ({ ...req })&#xA;  });&#xA;}&#xA;&#xA;exports.playground = async (event, context, callback) =&gt; {&#xA;  context.callbackWaitsForEmptyEventLoop = false;&#xA;  const graphQl = await lambda();&#xA;  return graphQl.playgroundHandler(event, context, callback);&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>I have followed <a href=""https://itnext.io/building-a-graphql-api-using-graphql-yoga-lambda-and-mongodb-c0c195621f47"" rel=""noreferrer"">this</a> guide for getting it running up till here and am fairly sure i've followed similar steps for what applies to what i'm trying to do but can't seem to figure out where i've gone wrong.</p>&#xA;&#xA;<p>Thanks,</p>&#xA;",3955685,,174777,2019-01-04 12:36:14,2019-01-16 05:47:23,"Graphql Yoga Playground with Lambda - ""Server cannot be reached""",<javascript><node.js><aws-lambda><graphql>,1,2,0,2019-01-04 10:28:38
54054364,1,,,0,978,"<p>Here's the error message I get when doing a query :</p>&#xA;&#xA;<p><code>[Network error]: ServerParseError: JSON.parse: unexpected character at line 1 column 1 of the JSON data</code></p>&#xA;&#xA;<p>The query works fine locally, when setting the uri of my ApolloClient to <code>http://localhost:4000/graphql</code>, and running the server locally.</p>&#xA;&#xA;<p>However, if I deploy my server to heroku, then set the client's uri to <code>https://my-app.herokuapp.com/</code> it does not work, I get the error message above. The network tab shows a 404 to the POST request to my heroku app, ""cannot POST""</p>&#xA;&#xA;<p>The heroku logs show no error upon pushing. </p>&#xA;&#xA;<p>Any idea what I am missing here ? I have checked all the tutorials I could find, and I don't see anything obvious missing. </p>&#xA;&#xA;<p>Here's my client request :</p>&#xA;&#xA;<p><code>const client = new ApolloClient({&#xA;  uri: 'https://my-app.herokuapp.com/',&#xA;  headers: {&#xA;    authorization: ""Bearer API_KEY"",&#xA;    'content-type': 'application/json'&#xA;  }&#xA;});&#xA;</code></p>&#xA;",7461599,,,,2019-01-07 08:52:30,Network Error when initiating a query to my graphql API,<heroku><graphql><apollo><apollo-boost>,1,0,0,2019-01-05 17:22:50
54105709,2,,54104683,3,,"<p>GraphQL has the <a href=""https://facebook.github.io/graphql/draft/#sec-Schema-Introspection"" rel=""nofollow noreferrer"">introspection system</a> which allow you to query its schema.You can construct GraphQL query to explore its types. </p>&#xA;&#xA;<p>For example ,to find out all the query and mutation root fields , you can <code>POST</code> the following JSON body to <code>http://example.com/graphql</code> with content type set to <code>application/json</code> </p>&#xA;&#xA;<pre><code>{&#xA;   ""query"" : ""{__schema {queryType {name fields {name}}mutationType {name fields {name}}}}""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Or using <code>GET</code> and putting the GraphQL query to the query parameter <code>query</code>  :</p>&#xA;&#xA;<pre><code>http://example.com/graphql/?query={__schema {queryType {name fields {name}}mutationType {name fields {name}}}}&#xA;</code></pre>&#xA;&#xA;<p>which will return something likes: </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""__schema"": {&#xA;      ""queryType"": {&#xA;        ""name"": ""Query"",&#xA;        ""fields"": [&#xA;          {&#xA;            ""name"": ""searchFoo""&#xA;          },&#xA;          {&#xA;            ""name"": ""searchBar""&#xA;          }&#xA;&#xA;        ]&#xA;      },&#xA;      ""mutationType"": {&#xA;        ""name"": ""Mutation"",&#xA;        ""fields"": [&#xA;          {&#xA;            ""name"": ""createFoo""&#xA;          },&#xA;          {&#xA;            ""name"": ""updateFoo""&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>But the much easier way is to use a GraphQL client such as <a href=""https://github.com/graphql/graphiql"" rel=""nofollow noreferrer"">GraphiQL</a> or <a href=""https://insomnia.rest/"" rel=""nofollow noreferrer"">Insomnia</a> or .....  which most probably will provide you an interactive UI to exploring the GraphQL Schema and has some auto-complete/hint feature for assisting you to construct the GraphQL query.</p>&#xA;",339637,,339637,2019-01-09 15:23:36,2019-01-09 15:23:36,"",,0,8,0,2019-01-09 08:13:51
54122649,1,54122745,,1,165,"<p>I have a Vue component with a list of items populated from a DB via Apollo:</p>&#xA;&#xA;<pre><code>&lt;DeviceInfo camId=""abcd""/&gt;&#xA;&lt;DeviceInfo camId=""efgh""/&gt;&#xA;&lt;DeviceInfo camId=""qwer""/&gt;&#xA;</code></pre>&#xA;&#xA;<p>When a response arrives via Apollo <strong>all three</strong> <em>DeviceInfo</em> components get updated with the same data at the same time. In the end they all have the very last response from the DB. I would expect the query to update its own component only. </p>&#xA;&#xA;<p><strong>Any suggestions why the data is shared?</strong></p>&#xA;&#xA;<p>What I know:</p>&#xA;&#xA;<ol>&#xA;<li>the DB responses are correct and contain data for the right camId as far as <em>apollo/data/updated</em> function. </li>&#xA;<li>Vue browser dev-tools show identical data objects for all <em>DeviceInfo</em> siblings. </li>&#xA;<li>I get the same behavior with <em>v-for</em></li>&#xA;</ol>&#xA;&#xA;<pre class=""lang-html prettyprint-override""><code>&lt;v-flex v-for=""item in data.listUserDevices.items"" :key=""item.device""&gt;&#xA;   &lt;DeviceInfo :camId=""item.device""/&gt;&#xA;&lt;/v-flex&gt;&#xA;</code></pre>&#xA;&#xA;<p>Here is the full code of <em>DeviceInfo</em> component:</p>&#xA;&#xA;<pre class=""lang-html prettyprint-override""><code>&lt;template v-if=""hydrated""&gt;&#xA;      &lt;h2&gt;camId: {{camId}} / {{ data.getLatestDeviceState.items[0].device }}&lt;/h2&gt;&#xA;&lt;/template&gt;&#xA;&#xA;&#xA;&lt;script&gt;&#xA;import gql from ""graphql-tag"";&#xA;&#xA;const DEV_INFO_QUERY = gql`query getLatestDeviceState($device: String)&#xA;  {&#xA;    getLatestDeviceState(device: $device) {&#xA;      items {&#xA;        device&#xA;        timestamp&#xA;        version&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;export default {&#xA;  name: ""DeviceInfo"",&#xA;  props: {camId: String},&#xA;  data() {&#xA;      return dt;&#xA;    },&#xA;  async mounted() {&#xA;    await this.$apollo.provider.defaultClient.hydrated();&#xA;    this.hydrated = true;&#xA;  },&#xA;  apollo: {&#xA;    data: {&#xA;      query:  () =&gt; DEV_INFO_QUERY,&#xA;      variables: function() { &#xA;        return {device: this.camId}&#xA;      },&#xA;      update: data =&gt; {&#xA;                return data;&#xA;      }&#xA;    }&#xA;  }&#xA;};&#xA;&#xA;  let dt = {&#xA;    data: {&#xA;      hydrated: false,&#xA;      getLatestDeviceState: {&#xA;        items: [{device:""Loading ...""}]&#xA;      }&#xA;    }&#xA;  };&#xA;&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;",6923661,,283366,2019-01-10 06:01:31,2019-01-10 06:03:22,Apollo query from one component updates all the siblings in Vue,<vue.js><vue-component><vue-apollo>,1,0,0,2019-01-10 05:54:13
54143594,2,,54140974,0,,"<p>You need to import the package at the top of the script</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import { GraphQLDocs } from 'graphql-docs';&#xA;</code></pre>&#xA;&#xA;<p>Change the render to </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>&lt;GraphQLDocs fetcher={fetcher} /&gt;&#xA;</code></pre>&#xA;&#xA;<p>The documentation is not updated. There is an example included in the source code&#xA;<a href=""https://github.com/mhallin/graphql-docs/tree/master/example"" rel=""nofollow noreferrer"">https://github.com/mhallin/graphql-docs/tree/master/example</a></p>&#xA;&#xA;<p>Not recommended to use this package as it did not update since 2 years ago.</p>&#xA;",846053,,,,2019-01-11 09:25:17,"",,0,0,0,2019-01-11 09:25:17
54151318,2,,54146039,0,,"<p>Reason is because of lower version, if you install laravel-graphql version with '~1.0.0',&#xA;go to modify <code>config/graphql.php</code></p>&#xA;&#xA;<pre><code>// The name of the input that contain variables when you query the endpoint.&#xA;// Some library use ""variables"", you can change it here. ""params"" will stay&#xA;// the default for now but will be changed to ""variables"" in the next major&#xA;// release.&#xA;&#xA;'variables_input_name' =&gt; 'variables', // modify here from 'params' to 'variables'&#xA;</code></pre>&#xA;",8654320,,,,2019-01-11 17:24:59,"",,0,0,0,2019-01-11 17:24:59
54155865,1,,,1,272,"<p>When using Material UI hooks (as its <a href=""https://github.com/mui-org/material-ui/tree/master/examples/nextjs-hooks-with-typescript"" rel=""nofollow noreferrer"">example shown here</a>) with NextJS and react-apollo-hooks, received bug - </p>&#xA;&#xA;<pre><code>TypeError: Cannot read property 'theme' of undefined&#xA;    at MyDocument.render (/material-ui/examples/nextjs-hooks-with-typescript/.next/server/static/development/pages/_document.js:156:38)&#xA;</code></pre>&#xA;&#xA;<h2>Expected Behavior </h2>&#xA;&#xA;&#xA;&#xA;<p>Able to use Material UI hooks and Apollo hooks together.</p>&#xA;&#xA;<h2>Current Behavior </h2>&#xA;&#xA;<p><code>undefined</code> <code>pageContext</code> caused <code>TypeError: Cannot read property 'theme' of undefined</code> at line: &#xA;<a href=""https://github.com/ivawzh/material-ui/blob/fc6ae01e66bde4252a08903719a59ef108e05e5f/examples/nextjs-hooks-with-typescript/pages/_document.tsx#L14"" rel=""nofollow noreferrer"">https://github.com/ivawzh/material-ui/blob/fc6ae01e66bde4252a08903719a59ef108e05e5f/examples/nextjs-hooks-with-typescript/pages/_document.tsx#L14</a></p>&#xA;&#xA;<p><img src=""https://user-images.githubusercontent.com/4622799/50978958-95b56600-1549-11e9-8283-6a13298dfe47.png"" alt=""image""></p>&#xA;&#xA;<h2>Steps to Reproduce </h2>&#xA;&#xA;<code>This codesandbox.io template _may_ be a good starting point:&#xA;https://codesandbox.io/s/github/mui-org/material-ui/tree/master/examples/create-react-app&#xA;&#xA;If you're using typescript a better starting point would be&#xA;https://codesandbox.io/s/github/mui-org/material-ui/tree/master/examples/create-react-app-with-typescript&#xA;&#xA;If YOU DO NOT take time to provide a codesandbox.io reproduction, should the COMMUNITY take time to help you?&#xA;</code>&#xA;&#xA;-->&#xA;&#xA;<p>I have prepared a repo here <a href=""https://github.com/ivawzh/material-ui/commit/fc6ae01e66bde4252a08903719a59ef108e05e5f"" rel=""nofollow noreferrer"">https://github.com/ivawzh/material-ui/commit/fc6ae01e66bde4252a08903719a59ef108e05e5f</a></p>&#xA;&#xA;<p>Steps:</p>&#xA;&#xA;<ol>&#xA;<li><code>git clone git@github.com:ivawzh/material-ui.git</code></li>&#xA;<li><code>cd material-ui/examples/nextjs-hooks-with-typescript</code></li>&#xA;<li><code>npm install &amp;&amp; npm run dev</code></li>&#xA;<li>In web browser, open <code>http://localhost:3000/countries2</code></li>&#xA;<li>See the error in your terminal</li>&#xA;</ol>&#xA;&#xA;<h2>Context </h2>&#xA;&#xA;&#xA;&#xA;<p>I am trying to use Apollo hooks with Material UI hooks example. &#xA;From the repo above you will see the non-hook Apollo endpoint at <code>http://localhost:3000/countries</code> is working fine as expected. But when Apollo hooks is in used, app will crash because <code>pageContext</code> becomes undefined.</p>&#xA;&#xA;<h2>Environment </h2>&#xA;&#xA;&#xA;&#xA;<p><a href=""https://github.com/ivawzh/material-ui/tree/fc6ae01e66bde4252a08903719a59ef108e05e5f/examples/nextjs-hooks-with-typescript"" rel=""nofollow noreferrer"">https://github.com/ivawzh/material-ui/tree/fc6ae01e66bde4252a08903719a59ef108e05e5f/examples/nextjs-hooks-with-typescript</a></p>&#xA;&#xA;<p>| Tech         | Version |&#xA;|--------------|---------|&#xA;| Material-UI  | v3.8.1  |&#xA;| React        |     16.7.0-alpha.2    |&#xA;| Browser      |    Chrome     |&#xA;| TypeScript   |     3.2.2    |&#xA;| react-apollo   |     2.3.3    |&#xA;| react-apollo-hooks  |     0.2.1   |</p>&#xA;&#xA;<h2>Related Git issues</h2>&#xA;&#xA;<ul>&#xA;<li><a href=""https://github.com/mui-org/material-ui/issues/14140"" rel=""nofollow noreferrer"">https://github.com/mui-org/material-ui/issues/14140</a></li>&#xA;</ul>&#xA;",1401634,,,,2019-03-25 01:33:58,Bug on integrating Material UI hooks and Apollo hooks,<material-ui><apollo><next.js><react-hooks>,0,0,0,2019-01-12 00:53:56
54162129,1,,,-1,695,"<p>I have a Nodejs client app, and a Nodejs server app. I use Apollo GraphQL for network.</p>&#xA;&#xA;<p>These communicate fine if run on the same pc. They also work fine if the client is on another pc and server on my pc, over LAN only. They fail to communicate via internet.</p>&#xA;&#xA;<p>My code that works right now:</p>&#xA;&#xA;<p>server:</p>&#xA;&#xA;<pre><code>server.listen(PORT, '0.0.0.0',() ...&#xA;</code></pre>&#xA;&#xA;<p>client:</p>&#xA;&#xA;<pre><code> const wsLink = new WebSocketLink({&#xA;&#xA; uri: 'ws://192.168.10.41:8081/subscriptions',&#xA;</code></pre>&#xA;",867900,,,,2019-01-15 23:29:39,NodeJS - How to connect to remote PC that runs Node app?,<javascript><node.js><graphql><apollo>,1,3,0,2019-01-12 17:30:33
54183145,1,,,7,10763,"<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const {&#xD;&#xA;  DEVELOPMENT_SERVER,&#xD;&#xA;  PRODUCTION_BUILD&#xD;&#xA;} = require(""next/constants"");&#xD;&#xA;&#xD;&#xA;require('dotenv').config()&#xD;&#xA;&#xD;&#xA;const path = require('path')&#xD;&#xA;const Dotenv = require('dotenv-webpack')&#xD;&#xA;&#xD;&#xA;const nextConfig = {&#xD;&#xA;  webpack: config =&gt; ({ ...config, node: { fs: ""empty"" } })&#xD;&#xA;};&#xD;&#xA;module.exports = phase =&gt; {&#xD;&#xA;  if (phase === DEVELOPMENT_SERVER || phase === PRODUCTION_BUILD) {&#xD;&#xA;    const withCSS = require(""@zeit/next-css"");&#xD;&#xA;    return withCSS(nextConfig);&#xD;&#xA;  }&#xD;&#xA;  return nextConfig;&#xD;&#xA;};&#xD;&#xA;*module.exports =  {&#xD;&#xA;  webpack: (config) =&gt; {&#xD;&#xA;    config.plugins = config.plugins || []&#xD;&#xA;    config.plugins = [&#xD;&#xA;      ...config.plugins,&#xD;&#xA;      // Read the .env file&#xD;&#xA;      new Dotenv({&#xD;&#xA;        path: path.join(__dirname, '.env'),&#xD;&#xA;        systemvars: true&#xD;&#xA;      })&#xD;&#xA;    ]&#xD;&#xA;    return config&#xD;&#xA;  }&#xD;&#xA;}*&#xD;&#xA;&#xD;&#xA;let prefix;&#xD;&#xA;switch (process.env.NODE_ENV) {&#xD;&#xA;  case ""test"":&#xD;&#xA;    prefix = ""https://test.domain.com/providers"";&#xD;&#xA;    break;&#xD;&#xA;  case ""stage"":&#xD;&#xA;    prefix = ""https://state.domain.com/providers"";&#xD;&#xA;    break;&#xD;&#xA;  case ""production"":&#xD;&#xA;    prefix = ""https://production.domain.com/providers"";&#xD;&#xA;    break;&#xD;&#xA;  default:&#xD;&#xA;    prefix = """";&#xD;&#xA;    break;&#xD;&#xA;}&#xD;&#xA;module.exports = {&#xD;&#xA;  distDir: ""build"",&#xD;&#xA;  assetPrefix: prefix&#xD;&#xA;};</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>Here my next.config.js configuration.&#xA;But when I am trying to run then getting the message like &#xA;Error! Network error: Unexpected token N in JSON at position 0</p>&#xA;&#xA;<p>But when I am trying to run whatever into the bold(*) and kept only that thing into the next.config.js then working fine.&#xA;How to configure multiple plugin into the module.export</p>&#xA;",10841661,,11613622,2021-08-18 20:33:22,2022-08-10 05:49:11,Next JS config multiple plugin configuration,<reactjs><webpack><next.js><apollo>,4,1,0,2019-01-14 14:11:58
54203313,2,,54037128,0,,"<p>Could you take a look at what version of the graphql-yoga package you are using?</p>&#xA;&#xA;<p>I had a similar problem using the Apollo server in combination with Kentico Cloud Headless CMS and I found this issue:</p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://github.com/prisma/graphql-yoga/issues/267"" rel=""nofollow noreferrer"">https://github.com/prisma/graphql-yoga/issues/267</a></li>&#xA;</ul>&#xA;",3529135,,3529135,2019-01-16 05:47:23,2019-01-16 05:47:23,"",,0,1,0,2019-01-15 16:46:59
54217145,1,54223106,,0,675,"<p>I am developing an app using Angular 7 and Apollo GraphQL client and I am trying to use the <a href=""https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm"" rel=""nofollow noreferrer"">client devtools</a> for Chrome. If I understood the documentation correctly, the only thing that I have to do is to run my app in a non-production environment and the Apollo tab will appear on the Google Chrome development tools.</p>&#xA;&#xA;<p>Unfortunately this is not happening. The Apollo Devtools icon appears on my browser, but the Apollo tab does not appear on the devtools.</p>&#xA;&#xA;<p>Am I missing some configuration?</p>&#xA;&#xA;<p>I also tried to force the devtools to appear, by adding: <code>connectToDevTools: true</code> to my GraphQL module (code below), but this didn't solve the problem.</p>&#xA;&#xA;<pre><code>const uri = environment.graphqlURL; // &lt;-- add the URL of the GraphQL server here&#xA;export function createApollo(httpLink: HttpLink) {&#xA;  return {&#xA;    link: httpLink.create({uri}),&#xA;    cache: new InMemoryCache(),&#xA;    connectToDevTools: true&#xA;  };&#xA;}&#xA;&#xA;@NgModule({&#xA;  exports: [ApolloModule, HttpLinkModule],&#xA;  providers: [&#xA;    {&#xA;      provide: APOLLO_OPTIONS,&#xA;      useFactory: createApollo,&#xA;      deps: [HttpLink],&#xA;    },&#xA;  ],&#xA;})&#xA;export class GraphQLModule {}&#xA;</code></pre>&#xA;",839211,,,,2019-01-16 18:21:25,Angular Apollo GraphQL Devtools tab invisible,<graphql><apollo><apollo-client>,1,0,0,2019-01-16 12:31:16
54223106,2,,54217145,0,,"<p>I found out what the problem was: I was having a CORS error when I tried to use my Graphql endpoint from the Angular development server (<code>localhost:4200</code>), so I created a proxy that pointed to my endpoint:</p>&#xA;&#xA;<pre><code>{&#xA;  ""/graphql/*"": {&#xA;    ""target"": ""https://my-endpoint/"",&#xA;    ""secure"": false,&#xA;    ""logLevel"": ""debug"",&#xA;    ""changeOrigin"": true&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And changed the Graphql URL to: <code>http://localhost:4200/graphql</code>. With this I was able to solve my CORS issue, however it seems that the Apollo Dev Tools also uses the <code>/graphql</code> URI.</p>&#xA;&#xA;<p>So I changed my proxy configuration to:</p>&#xA;&#xA;<pre><code>{&#xA;  ""/stg_graphql/*"": {&#xA;    ""target"": ""https://my-endpoint/graphql"",&#xA;    ""secure"": false,&#xA;    ""logLevel"": ""debug"",&#xA;    ""changeOrigin"": true,&#xA;    ""pathRewrite"": {&#xA;      ""^/stg_graphql"": """"&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And pointed the graphql to: <code>http://localhost:4200/stg_graphql</code>. When I did this, everything started working.</p>&#xA;&#xA;<p>Note: to run the development server with the proxy I am using: <code>ng serve --proxy-config proxy.config.json</code>.</p>&#xA;",839211,,,,2019-01-16 18:21:25,"",,0,0,0,2019-01-16 18:21:25
54251284,1,54660227,,2,1640,<p>I'm thinking about adding GraphQL functionalities to my Spring Boot application.</p>&#xA;&#xA;<p>I found there are two artifacts for that.</p>&#xA;&#xA;<p>One is <code>com.graphql-java-kickstart:graphql-spring-boot-starter</code> and the other is <code>com.graphql-java:graphql-spring-boot-starter</code>.</p>&#xA;&#xA;<p>Which one should I choose?</p>&#xA;,330457,,,,2021-04-21 10:40:37,Which graphql-spring-boot-starter should I choose?,<spring-boot><graphql><graphql-java>,1,0,0,2019-01-18 09:45:48
54261412,1,,,2,905,"<p>I am deploying a nodejs server (graphql) application on GCloud AppEngine standard environment and occasionally the first requests fail but the subsequent ones (within 5s) work . I am using the following configuration: </p>&#xA;&#xA;<pre><code>runtime: nodejs10&#xA;instance_class: F2&#xA;service: ...&#xA;env_variables:&#xA;  ...&#xA;  ...&#xA;</code></pre>&#xA;&#xA;<p>and the logs are as follows (see last few lines for the 404s):  </p>&#xA;&#xA;<pre><code>OPTIONS 204 310 B 4.1 s Chrome 71 /graphql OPTIONS 204 310 B 4.1 s Chrome 71 &#xA;OPTIONS 204 310 B 4.1 s Chrome 71 /graphql OPTIONS 204 310 B 4.1 s Chrome 71 &#xA;[start] 2019/01/18 20:46:21.506468 no entrypoint specified, using default entrypoint: /serve &#xA;[start] 2019/01/18 20:46:21.511900 no entrypoint specified, using default entrypoint: /serve &#xA;[start] 2019/01/18 20:46:21.539860 starting app &#xA;[start] 2019/01/18 20:46:21.540272 Executing: /bin/sh -c exec /serve &#xA;[start] 2019/01/18 20:46:21.540122 starting app &#xA;[start] 2019/01/18 20:46:21.540403 Executing: /bin/sh -c exec /serve &#xA;[start] 2019/01/18 20:46:21.560976 waiting for network connection open. subject:""app/invalid"" Address:127.0.0.1:8080 &#xA;[start] 2019/01/18 20:46:21.561742 waiting for network connection open. subject:""app/valid"" Address:127.0.0.1:8081 &#xA;[start] 2019/01/18 20:46:21.561786 waiting for network connection open. subject:""app/invalid"" Address:127.0.0.1:8080 &#xA;[start] 2019/01/18 20:46:21.562055 waiting for network connection open. subject:""app/valid"" Address:127.0.0.1:8081 &#xA;[serve] 2019/01/18 20:46:21.586374 serve started &#xA;[serve] 2019/01/18 20:46:21.586831 args: {runtimeName:nodejs10 memoryMB:256 positional:[]} &#xA;[serve] 2019/01/18 20:46:21.587680 serve started &#xA;[serve] 2019/01/18 20:46:21.588167 args: {runtimeName:nodejs10 memoryMB:256 positional:[]} &#xA;[serve] 2019/01/18 20:46:21.593780 execing to: /bin/sh -c exec node ./dist/index.js &#xA;[serve] 2019/01/18 20:46:21.594081 execing to: /bin/sh -c exec node ./dist/index.js &#xA;[start] 2019/01/18 20:46:25.122334 wait successful. subject:""app/valid"" Address:127.0.0.1:8081 attempts:701 elapsed:3.560382686s &#xA;[start] 2019/01/18 20:46:25.122604 starting nginx &#xA;Go to http://localhost:8081/graphql to run queries! &#xA;[start] 2019/01/18 20:46:25.127939 wait successful. subject:""app/valid"" Address:127.0.0.1:8081 attempts:687 elapsed:3.56541476s &#xA;[start] 2019/01/18 20:46:25.128135 starting nginx &#xA;[start] 2019/01/18 20:46:25.128836 waiting for network connection open. subject:""nginx"" Address:127.0.0.1:8080 &#xA;Go to http://localhost:8081/graphql to run queries! &#xA;[start] 2019/01/18 20:46:25.163712 waiting for network connection open. subject:""nginx"" Address:127.0.0.1:8080 &#xA;[start] 2019/01/18 20:46:25.179456 wait successful. subject:""nginx"" Address:127.0.0.1:8080 attempts:6 elapsed:50.397788ms &#xA;[start] 2019/01/18 20:46:25.184531 wait successful. subject:""nginx"" Address:127.0.0.1:8080 attempts:4 elapsed:20.559325ms &#xA;2019/01/18 20:46:25 [alert] 33#33: prctl(PR_SET_DUMPABLE) failed (22: Invalid argument) &#xA;2019/01/18 20:46:25 [alert] 33#33: prctl(PR_SET_DUMPABLE) failed (22: Invalid argument) &#xA;POST 404 505 B 176 ms Chrome 71 /graphql POST 404 505 B 176 ms Chrome 71 &#xA;POST 404 505 B 185 ms Chrome 71 /graphql POST 404 505 B 185 ms Chrome 71 &#xA;OPTIONS 204 310 B 4 ms Chrome 71 /graphql OPTIONS 204 310 B 4 ms Chrome 71 &#xA;POST 200 679 B 73 ms Chrome 71 /graphql POST 200 679 B 73 ms Chrome 71 &#xA;OPTIONS 204 310 B 3 ms Chrome 71 /graphql OPTIONS 204 310 B 3 ms Chrome 71 &#xA;POST 200 651 B 61 ms Chrome 71 /graphql POST 200 651 B 61 ms Chrome 71 &#xA;OPTIONS 204 310 B 4 ms Chrome 71 /graphql OPTIONS 204 310 B 4 ms Chrome 71 &#xA;OPTIONS 204 310 B 2 ms Chrome 71 /graphql OPTIONS 204 310 B 2 ms Chrome 71 &#xA;POST 200 677 B 131 ms Chrome 71 /graphql POST 200 677 B 131 ms Chrome 71 &#xA;POST 200 653 B 127 ms Chrome 71 /graphql POST 200 653 B 127 ms Chrome 71 &#xA;</code></pre>&#xA;&#xA;<p>Anyone know what could be going wrong? Thanks</p>&#xA;",1029638,,,,2019-01-30 11:26:34,GCloud AppEngine nodejs application returns 404 on first requests but subsequent ones are successful,<node.js><express><google-app-engine><http-status-code-404><express-graphql>,1,0,0,2019-01-18 21:04:00
54267118,1,,,1,1776,"<p>I'm developing a React frontend with a Node/Express backend using Apollo Client and  Server. The frontend was generated using <code>create-react-app</code>.</p>&#xA;&#xA;<p>On my frontend I was adding the GraphQL endpoint using <code>HttpLink</code> from <code>apollo-boost</code> as such:</p>&#xA;&#xA;<pre><code>const httpLink = new HttpLink({ uri: 'http://localhost:8080/graphql' })&#xA;</code></pre>&#xA;&#xA;<p>This is fine when developing locally, however if I want to test the website (and indirectly the GraphQL end point) on a different device - all GraphQL content fails to load because the end point doesn't exist on the localhost of the device.</p>&#xA;&#xA;<p>To combat this I added the following:</p>&#xA;&#xA;<pre><code>const httpLink = new HttpLink({&#xA;  uri:&#xA;    process.env.NODE_ENV === 'development'&#xA;      ? 'http://192.168.1.25:8080/graphql'&#xA;      : 'https://example.com/graphql'&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>This works well, but I find myself doing development on two different machines. So the local IP which serves the GraphQL endpoint is not fixed at <code>192.168.1.25</code>.</p>&#xA;&#xA;<p>I then searched npm and found <a href=""https://www.npmjs.com/package/internal-ip"" rel=""nofollow noreferrer""><code>internal-ip</code></a>. I thought I could just import <code>internal-ip</code> and make the above into a template string as such:</p>&#xA;&#xA;<pre><code>const httpLink = new HttpLink({&#xA;  uri:&#xA;    process.env.NODE_ENV === 'development'&#xA;      ? `http://${internalIp.v4.sync()}:8080/graphql`&#xA;      : 'https://example.com/graphql'&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>However, when ran through webpack <code>internalIp.v4.sync()</code> evaluates to <code>null</code>.</p>&#xA;&#xA;<p>What's the best practise to dynamically set a local IP endpoint when working with React and webpack as outlined in the problem above? In particular, without running <code>npm eject</code>?</p>&#xA;",1510846,,1510846,2019-01-19 21:31:01,2019-01-20 15:11:25,How to set Apollo GraphQL end point to local IP when developing?,<reactjs><graphql><apollo><react-apollo><apollo-client>,2,1,0,2019-01-19 12:31:31
54267495,2,,54267118,0,,"<p>That looks like a node library, so it won't work inside your frontend code. If you're using webpack, you can use <a href=""https://webpack.js.org/plugins/define-plugin/"" rel=""nofollow noreferrer"">DefinePlugin</a> to evaluate some expression and then set it to a global variable that'll be available anywhere in your frontend code.</p>&#xA;&#xA;<p>You could also use a tool like <a href=""https://ngrok.com"" rel=""nofollow noreferrer"">ngrok</a> to expose a public URL for your local development environment.</p>&#xA;&#xA;<pre><code>// webpack.config.js&#xA;new webpack.DefinePlugin({&#xA;  SERVER_URL: JSON.stringify(`${internalIp.v4.sync()}/graphql`),&#xA;})&#xA;&#xA;// elsewhere&#xA;const httpLink = new HttpLink({ uri: SERVER_URL })&#xA;</code></pre>&#xA;",6024220,,,,2019-01-19 13:15:33,"",,0,1,0,2019-01-19 13:15:33
54276463,2,,51287139,0,,"<p>First of all you need to drop your data base and use &#xA;<code>types.graphql</code> as it is</p>&#xA;&#xA;<pre><code>type Profile {&#xA;    id: ID! @isUnique&#xA;    email: String! @isUnique &#xA;    ...&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>deploy it and error would be gone.</p>&#xA;&#xA;<p><strong>Main reason for happening this is you've already deployed data with not null thus it can't changed you need to drop our database, that's it</strong> </p>&#xA;",10483827,,,,2019-01-20 12:30:54,"",,0,0,0,2019-01-20 12:30:54
54276877,1,,,0,523,"<p>Here's the situation, I'm trying to <em>stitch</em> the GitHub graphql schema with an application's local schema. The application uses GitHub oAuth to connect the user to their GitHub data.</p>&#xA;&#xA;<p>Most of the write-ups on schema stitching use an <em>introspection</em> query to get the remote server's schema. Unfortunately, the GitHub graphql api is authenticated with an access token. My original intent was to use the user's oAuth access token to perform the introspection but then I ran into a catch-22 wherein the introspection needs to happen at startup, i.e. before I have any authenticated users.</p>&#xA;&#xA;<p>So the basic question is: <em>How do I make a remote executable schema from the github graphql api?</em></p>&#xA;",2805154,,,,2019-05-21 14:52:52,How do I make a remote executable schema from the github graphql api?,<oauth><graphql><apollo>,1,0,0,2019-01-20 13:23:29
54277818,2,,54267118,0,,"<p>I will definitely suggest the use of .ngrok as already suggested by @Daniel</p>&#xA;&#xA;<p>1.Use .ngrok to expose your local server end point. You will get a public server url which you can consume from anywhere on the internet</p>&#xA;&#xA;<p>2.You can create <strong>.env.development.local</strong> file with an env variable.</p>&#xA;&#xA;<p>For more info regarding env files in <strong>Create React App</strong> priority see this <a href=""https://facebook.github.io/create-react-app/docs/adding-custom-environment-variables#what-other-env-files-can-be-used"" rel=""nofollow noreferrer"">link</a></p>&#xA;&#xA;<p>e.g</p>&#xA;&#xA;<p>REACT_APP_SERVER_URL= <a href=""http://192.168.1.25:8080/graphql"" rel=""nofollow noreferrer"">http://192.168.1.25:8080/graphql</a></p>&#xA;&#xA;<p>// Or the url given by ngrok</p>&#xA;&#xA;<p>3.Use SERVER_URL from .env file without ejecting</p>&#xA;&#xA;<p>const httpLink = new HttpLink({ uri: REACT_APP_SERVER_URL})</p>&#xA;",1745409,,,,2019-01-20 15:11:25,"",,0,3,0,2019-01-20 15:11:25
54314125,2,,53580643,0,,"<p>You can look at my <a href=""https://stackoverflow.com/a/48790703/9278956"">answer</a> to a similar question. It uses a <a href=""https://www.npmjs.com/package/graphql-to-mongodb"" rel=""nofollow noreferrer"">package</a> that relies on the GraphQL ""query object"" to generate everything else and therefore forgoes mongoose to use straight MongoDB.</p>&#xA;",9278956,,,,2019-01-22 18:07:26,"",,0,0,0,2019-01-22 18:07:26
54346545,2,,51537678,1,,"<p>I was getting <code>Invariant Violation: Unable to find node on an unmounted component</code> too with TypeScript and Next.js in the mix.</p>&#xA;&#xA;<p>After creating an isolated project which worked, I knew it had to be my codebase.</p>&#xA;&#xA;<p>The stack trace seemed to stem <code>at invariant (node_modules/react-dom/cjs/react-dom.development.js:55:15)</code>.</p>&#xA;&#xA;<p>So in my case, upgrading from <code>""react-dom"": ""16.5.2""</code> to <code>""react-dom"": ""16.7.0""</code> fixed the issue for me, along with re-creating my <code>yarn.lock</code> file.</p>&#xA;",1998086,,1998086,2019-01-24 14:19:53,2019-01-24 14:19:53,"",,0,0,0,2019-01-24 12:19:36
54355764,1,54372224,,0,123,"<p>I'm running postgraphile and apollo to get data for my react app. I am using npm concurrently to run the react server and to run postgraph using the CLI including --cors flag. Everything works fine when i run the app locally. When I upload everything to AWS elastic beanstalk, I can't access app.com:5000/graphiql and the app gives me a 408 timeout error code saying it is a problem with HTTPLink, then tells me there is a cross origin error. If i run the app on AWS and have it point to my localhost:5000/graphiql it works perfectly, but not when it is deployed to AWS. The part that confuses me is that it does not have a cross origin error when it is going from AWS to my localhost, but it does have a cross origin error when it's going from AWS to AWS. </p>&#xA;",6693315,,441757,2020-07-20 06:21:03,2020-07-20 06:21:03,408 timeout error with postgraphile on AWS elastic beanstalk,<amazon-web-services><react-apollo><postgraphile><postgraphql><http-status-code-408>,1,1,0,2019-01-24 21:44:14
54373289,2,,54357814,0,,"<p>It seems this was a bug with the alpha.v20 and alpha.v21 versions of strapi. A bug fix has been published to solve it, an issue thread on github is <a href=""https://github.com/strapi/strapi/pull/2687"" rel=""nofollow noreferrer"">here.</a></p>&#xA;",10526685,,,,2019-01-25 21:53:07,"",,0,0,0,2019-01-25 21:53:07
54411045,1,,,3,1789,"<p>Following the <a href=""https://github.com/zeit/next.js/tree/canary/examples/with-apollo-auth"" rel=""nofollow noreferrer"">with-apollo-auth</a> example&#xA;Successful behavior when I do client-side ApolloConsumer query. I pass the client through and query works.</p>&#xA;&#xA;<p>Unsuccessful behavior when I attempt to do a server side query through getInitialProps. I pass the client through a handler that calls the same query and I get a ECONN refused error as shown below.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/KH2cH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KH2cH.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><strong>Steps to reproduce the behavior:</strong></p>&#xA;&#xA;<p>I set up my ApolloClient in the init-apollo file as follows:</p>&#xA;&#xA;<pre><code>  const httpLink = createHttpLink({&#xA;    uri: 'http://localhost:8080/api/graphql',&#xA;    credentials: 'same-origin'&#xA;  })&#xA;&#xA;  const authLink = setContext((_, { headers }) =&gt; {&#xA;    const token = getToken()&#xA;    return {&#xA;      headers: {&#xA;        ...headers,&#xA;        authorization: token ? `Bearer ${token}` : ''&#xA;      }&#xA;    }&#xA;  })&#xA;&#xA;  return new ApolloClient({&#xA;    connectToDevTools: process.browser,&#xA;    ssrMode: !process.browser, // Disables forceFetch on the server (so queries are only run once)&#xA;    link: ApolloLink.from([ authLink, httpLink ]),&#xA;    cache: new InMemoryCache().restore(initialState || {})&#xA;  })&#xA;</code></pre>&#xA;&#xA;<p>I set up my query as follows:</p>&#xA;&#xA;<pre><code>import gql from 'graphql-tag'&#xA;&#xA;export default apolloClient =&gt; {&#xA;  apolloClient&#xA;    .query({&#xA;      query: gql`&#xA;        {&#xA;          getUser {&#xA;            id&#xA;          }&#xA;        }&#xA;      `&#xA;    })&#xA;    .then(({data}) =&gt; {&#xA;      console.log(data);&#xA;      return { userDetails: data.getUser }&#xA;    })&#xA;    .catch((err) =&gt; {&#xA;      // Fail gracefully&#xA;      console.log(err);&#xA;      return { userDetails: {} }&#xA;    })&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>I set up my getInitialProps function in the index.js file within the pages directory:</p>&#xA;&#xA;<pre><code>  import getUser from '../shared/services/get-user';&#xA;&#xA;  static async getInitialProps (context) {&#xA;    const results = await getUser(context.apolloClient)&#xA;    console.log(results);&#xA;    return {}&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p><strong>Expected behavior</strong>&#xA;I expect to see a log of the user returned, however I get an ECONNREFUSED error as shown above.</p>&#xA;&#xA;<p>System information&#xA;OS: macOS Mojave&#xA;Browser (if applies) Chrome&#xA;Version of Next.js: 7.0.2&#xA;Version of ApolloClient: 2.4.12l&#xA;Additional context&#xA;Using Absinthe (Elixir+Phoenix) GraphQL API, url specified: <a href=""http://localhost:8080/api/graphq"" rel=""nofollow noreferrer"">http://localhost:8080/api/graphq</a>&#xA;Using docker-compose to spin up multiple containers. API and NextJS client are in separate containers sitting behind nginx server. Nginx server routes to relevant container depending on the url endpoint specified. <strong>THIS COULD VERY WELL BE THE ISSUE BUT I CAN'T SEEM TO FIND A SOLUTION TO THIS.</strong> If url contains api, client will be routed to my API container.</p>&#xA;&#xA;<p>Here is the setup for my nginx configuration:</p>&#xA;&#xA;<pre><code>upstream client {&#xA;  server client:3000;&#xA;}&#xA;&#xA;upstream api {&#xA;  server api:4000;&#xA;}&#xA;&#xA;server {&#xA;  listen 80;&#xA;&#xA;  location / {&#xA;    proxy_pass http://client;&#xA;  }&#xA;&#xA;  location /sockjs-node {&#xA;    proxy_pass http://client;&#xA;    proxy_http_version 1.1;&#xA;    proxy_set_header Upgrade $http_upgrade;&#xA;    proxy_set_header Connection ""Upgrade"";&#xA;  }&#xA;&#xA;  location /api {&#xA;    rewrite /api/(.*) /$1 break;&#xA;    proxy_pass http://api;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",5527293,,,,2019-10-14 10:46:16,ECONNREFUSED when using apollo client to do graphQL query from getInitialProps method in nextjs,<nginx><graphql><apollo-client><next.js>,1,0,0,2019-01-28 22:12:51
54412528,1,54412604,,1,990,"<p>I try to use <code>fragments</code> in <code>GraphQL</code></p>&#xA;&#xA;<p>There is my <code>schema</code></p>&#xA;&#xA;<p><strong>user/getUser.gql</strong></p>&#xA;&#xA;<pre><code>input GetUserByUsernameInput {&#xA;  username: String!&#xA;}&#xA;&#xA;fragment UserFragment on User {&#xA;  username&#xA;  information&#xA;  pictureUrl&#xA;}&#xA;&#xA;type UserType {&#xA;  ...UserFragment&#xA;}&#xA;&#xA;type GetUserByUsernameResponse {&#xA;  user: UserType&#xA;  errors: [Error]!&#xA;}&#xA;&#xA;type Query {&#xA;  getUserByUsername(input: GetUserByUsernameInput!): GetUserByUsernameResponse!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>shared/User.gql</strong></p>&#xA;&#xA;<pre><code>type User {&#xA;  id: Int!&#xA;  username: String!&#xA;  email: String!&#xA;  information: String&#xA;  pictureUrl: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And I got dummy error</p>&#xA;&#xA;<pre><code>(node:26206) UnhandledPromiseRejectionWarning: Syntax Error: Expected Name, found ...&#xA;&#xA;GraphQL request (12:9)&#xA;11: type UserType {&#xA;12:   user: ...UserFragment&#xA;            ^&#xA;13: }&#xA;</code></pre>&#xA;&#xA;<p>How should my code looks like to use <code>GraphQL fragments</code>?</p>&#xA;&#xA;<p>PS. I use <code>graphql-code-generator</code></p>&#xA;",10432429,,10432429,2019-01-29 01:26:00,2019-01-29 01:26:00,How to implement GraphQL fragments in schema?,<graphql><graphql-js>,1,0,0,2019-01-29 01:12:40
54427105,1,,,5,10616,"<p>When I manually write the mutation query (in graphql plugin), it's working:</p>&#xA;&#xA;<pre><code>mutation {&#xA;                    createExam(input: {&#xA;                      data: {&#xA;                        name: ""myName""&#xA;                        desription: ""ggg""&#xA;                        questions: [{gf: ""hello""}]&#xA;                        time: 2&#xA;                        subjects: [""5c468e2d61670b25b46ccdfe""]&#xA;                      }&#xA;                    }) {&#xA;                      exam {&#xA;                        name&#xA;                                desription&#xA;                        time&#xA;&#xA;                      }&#xA;                    }&#xA;                  }&#xA;</code></pre>&#xA;&#xA;<p>But if I code it and pass the exact same array I get an array of the exact same object I get [null, null]</p>&#xA;&#xA;<pre><code>let parsedQuestion = [{gf: ""hello""}];&#xA;&#xA; const response = await strapi.request('POST', '/graphql', {&#xA;            data: {&#xA;                query: `mutation {&#xA;                    createExam(input: {&#xA;                      data: {&#xA;                        name: ""` + examInfo.newExamName + `""&#xA;                        desription: ""` + examInfo.newExamDescription + `""&#xA;                        time: ` + Number(examInfo.newExamTime) + `,&#xA;                        questions: `+ parsedQuestion + `, &#xA;                        subjects: [""` + this.state.modalSubject._id + `""]&#xA;                      }&#xA;                    }) {&#xA;                      exam {&#xA;                        name&#xA;                        desription&#xA;                        time&#xA;                        questions&#xA;&#xA;                      }&#xA;                    }&#xA;                  }`&#xA;            }&#xA;</code></pre>&#xA;&#xA;<p>How can it be? Could it be a bug? I also tried with JSON.stringify but then got an error and the mutation didn't even come through</p>&#xA;&#xA;<p>Thanks a lot in advance</p>&#xA;",9856049,,,,2019-01-30 01:20:01,How to pass JSON object in grpahql and strapi,<json><graphql><strapi>,1,0,0,2019-01-29 18:04:11
54439527,2,,54261412,0,,"<p>I suppose you are referring to below log entries. you say this happens occasionally, is there some pattern of occurence? What are your queries made of? From the logs, it looks like these two requests are the first ones after deploy, maybe they fail as the app is not fully serving, or the traffic still redirecting from previous version. Do you encounter these errors while the app is already deployed or only after a new deployment?</p>&#xA;&#xA;<pre><code>POST 404 505 B 176 ms Chrome 71 /graphql POST 404 505 B 176 ms Chrome 71 &#xA;POST 404 505 B 185 ms Chrome 71 /graphql POST 404 505 B 185 ms Chrome 71 &#xA;</code></pre>&#xA;",10801700,,,,2019-01-30 11:26:34,"",,0,2,0,2019-01-30 11:26:34
54491602,2,,54491202,0,,"<p>Seems it was an local issue.</p>&#xA;&#xA;<p>I just changed </p>&#xA;&#xA;<pre><code>server.start({&#xA;  port: 4444,&#xA;  cors: {&#xA;    credentials: true,&#xA;    origin: process.env.FRONTEND_URL&#xA;  },&#xA;  deets: deets =&gt; {&#xA;    console.log(`Server is now running on localhost:${deets.port}`);&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>to :</p>&#xA;&#xA;<pre><code>&#xA;const options = {{&#xA;  port: 4444,&#xA;  cors: {&#xA;    credentials: true,&#xA;    origin: process.env.FRONTEND_URL&#xA;  },&#xA;  deets: deets =&gt; {&#xA;    console.log(`Server is now running on localhost:${deets.port}`);&#xA;  }&#xA;}};&#xA;&#xA;server.start(options);&#xA;</code></pre>&#xA;&#xA;<p>And it worked perfectly in both.</p>&#xA;&#xA;<p>Then, I changed it back to and it is still working.</p>&#xA;&#xA;<pre><code>server.start(&#xA;  {&#xA;    port: 4444,&#xA;    cors: {&#xA;      credentials: true,&#xA;      origin: process.env.FRONTEND_URL&#xA;    },&#xA;    deets: deets =&gt; {&#xA;      console.log(`Server is now running on localhost:${deets.port}`);&#xA;    }&#xA;  },&#xA;  options&#xA;);&#xA;&#xA;</code></pre>&#xA;&#xA;<p><strong>IMPORTANT:.</strong> I've rebooted the graphql server several times before and it didn't work as it worked when extracting options to a const. Could this be some sort of caching issue?</p>&#xA;",2872968,,2872968,2019-02-02 09:22:37,2019-02-02 09:22:37,"",,0,0,0,2019-02-02 09:13:25
54549525,1,,,5,1090,"<p>I know I'm probably missing something really super basic here, I'm trying to run a graphql query with vue-apollo... if I use  tags, it works fine</p>&#xA;&#xA;<p>If I try to run queries from inside my  code, like in the basic examples in the docs (links below) then nothing happens.  The server never receives any request, and this.$apollo.queries is empty.)</p>&#xA;&#xA;<p>Basic examples from the docs:</p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://akryum.github.io/vue-apollo/guide/apollo/#queries"" rel=""noreferrer"">https://akryum.github.io/vue-apollo/guide/apollo/#queries</a></li>&#xA;<li><a href=""https://vue-apollo.netlify.com/guide/apollo/queries.html#simple-query"" rel=""noreferrer"">https://vue-apollo.netlify.com/guide/apollo/queries.html#simple-query</a>  </li>&#xA;</ul>&#xA;&#xA;<p>I've defined the query in the ""apollo"" property/object... how do I actually execute it when the page loads?  Note that I'm using typescript, which is why it's using a ""<code>get apollo()</code>"" method.</p>&#xA;&#xA;<p>Here's my code...</p>&#xA;&#xA;<pre><code>&lt;script lang=""ts""&gt;&#xA;  import { Component, Vue } from 'vue-property-decorator'&#xA;&#xA;  export default class List extends Vue {&#xA;&#xA;    myQueryName='my default value';&#xA;&#xA;    get apollo() {&#xA;      return {&#xA;        myQueryName: {&#xA;          query: require('../graphql/listMeta.graphql'),&#xA;          // prefetch: true &lt;-- tried with and without this&#xA;        }&#xA;      }&#xA;    }&#xA;&#xA;  }&#xA;&lt;/script&gt;&#xA;&#xA;&lt;template&gt;&#xA;  &lt;div&gt;&#xA;&#xA;    &lt;!-- THIS DOESN""T WORK ... --&gt;&#xA;    queries are: {{this.$apollo.queries}} &lt;!-- THIS JUST SHOWS AN EMPTY OBJECT: {} --&gt;&#xA;    &lt;hr&gt;&#xA;    myQueryName value is: {{myQueryName}} &lt;!-- THIS JUST SHOWS ""my default value""  --&gt;&#xA;&#xA;    &lt;hr&gt;&#xA;    &lt;!--&#xA;    THIS DOES WORK...&#xA;    &lt;ApolloQuery :query=""this.apollo.myQueryName.query"" &gt;&#xA;      &lt;template slot-scope=""{ result: { loading, error, data } }""&gt;&lt;/template&gt;&#xA;    &lt;/ApolloQuery&gt;&#xA;    --&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/template&gt;&#xA;</code></pre>&#xA;&#xA;<p>Note that this.$apollo.queries is empty in the template, probably a clue... but still no idea why its empty. From the docs and examples I've seen it should be populated from my <code>get apollo</code> data method.</p>&#xA;&#xA;<p>Looks basically the same as <a href=""https://github.com/OniVe/vue-apollo-typescript-example/blob/master/pages/index.vue"" rel=""noreferrer"">https://github.com/OniVe/vue-apollo-typescript-example/blob/master/pages/index.vue</a> as far as I can tell, I don't know what the difference is.  </p>&#xA;&#xA;<p>I've tried rebuilding the project from scratch multiple times (with and without nuxt), over teh course of months and many different versions of vue/nuxt/apollo/vue-apollo... the queries never run (from memory) unless I use  tags.</p>&#xA;&#xA;<p>What am I missing?</p>&#xA;",796940,,,,2019-12-01 12:18:08,vue-apollo: GraphQL queries only run when using <ApolloQuery> tags. Never works in script code. this.$apollo.queries is empty,<vue.js><vuejs2><apollo-client><vue-apollo>,1,0,0,2019-02-06 08:42:10
54571488,1,54572602,,0,796,"<p>If i create a new pad, the example Hello world from the repository will also give an error "" TypeError: Failed to fetch"". Also with other queries</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/QaONQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QaONQ.png"" alt=""Here is a new page""></a></p>&#xA;",7151449,,928098,2019-08-16 15:00:33,2019-08-16 15:00:33,Any query returns TypeError: Failed to fetch in launchpad.graphql.com,<graphql>,1,0,0,2019-02-07 10:42:05
54595503,2,,54589989,12,,"<p>Ok, i found it. </p>&#xA;&#xA;<ol>&#xA;<li><p>First issue was that i used <code>no-cors</code> option on the <code>ApolloClient</code> Which prevents it from ready the data thus sending back a empty data object.</p></li>&#xA;<li><p>Second issue was that I needed to set my CORS headers on my GraphQL server properly, just for development accepting all with a * that solved it for the development phase. </p></li>&#xA;<li><p>Third and last issue was that Apollo sends a <code>OPTIONS</code> request to preflight check the CORS headers to see if its all allowed. Magento 2.3 flipped over that because its an empty request thus providing you with a <code>Unable to unserialize value</code> error. </p></li>&#xA;</ol>&#xA;&#xA;<p>What i did to solve that third issue is temporary patching a core file during deployment. The following file needs to be changed: <code>/vendor/magento/module-graph-ql/Controller/GraphQl.php</code></p>&#xA;&#xA;<p>on line 111 the following is needed </p>&#xA;&#xA;<pre><code> - $data = $this-&gt;jsonSerializer-&gt;unserialize($request-&gt;getContent());&#xA; + $content = ($request-&gt;getContent() === '') ? '{}' : $request-&gt;getContent();&#xA; + $data = $this-&gt;jsonSerializer-&gt;unserialize($content);&#xA;</code></pre>&#xA;&#xA;<p>I think there are other solutions for this on the React / Apollo side but haven't found that one yet. </p>&#xA;",1919914,,,,2019-02-08 15:22:54,"",,0,0,0,2019-02-08 15:22:54
54619038,1,,,0,96,"<p>I've build a app using react + nodejs + express + graphql + apollo server /client.</p>&#xA;&#xA;<pre><code>at=error code=H10 desc=""App crashed"" method=GET path=""/""&#xA;at=error code=H10 desc=""App crashed"" method=GET path=""/favicon.ico"" &#xA;</code></pre>&#xA;&#xA;<p>I don't know what is wrong I have done process.env.PORT and I did every line like in tutorials and its still doesn't work.</p>&#xA;&#xA;<p>Deploy was successful but when I try run application, I get a Application error on heroku.</p>&#xA;&#xA;<p>Does anyone know what can be wrong? </p>&#xA;&#xA;<p>Here is link for code&#xA;<a href=""https://github.com/Andrzej-Marek/Heroku_problem"" rel=""nofollow noreferrer"">https://github.com/Andrzej-Marek/Heroku_problem</a></p>&#xA;",11041826,,1333975,2019-02-10 20:39:28,2022-11-11 12:29:13,"Hello Have big problem with my app, Heroku deploy H10 eror",<reactjs><graphql><apollo>,0,4,0,2019-02-10 17:28:17
54707274,1,54742824,,-3,1263,"<p>I need cache my data on disk for offline view, I found ApolloSQLite in the apollo-ios source, but I can't find any documents of ApolloSQLite(I also tried Google search). </p>&#xA;&#xA;<p><strong>Environment:</strong></p>&#xA;&#xA;<pre><code>Xcode 10.1&#xA;macOS 10.14.3&#xA;CocoaPods 1.5.3&#xA;&#xA;Apollo (0.9.5)&#xA;SQLite.swift (0.11.5)&#xA;</code></pre>&#xA;&#xA;<p>Too many errors coming after <code>pod install</code>:</p>&#xA;&#xA;<pre><code>pod 'Apollo'&#xA;pod 'Apollo/SQLite'&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/RhL7r.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RhL7r.png"" alt=""enter image description here""></a></p>&#xA;",3367915,,3367915,2019-02-18 03:53:51,2019-02-18 08:07:43,apollo-ios How to cache data on disk?,<ios><swift><graphql><apollo-ios>,1,0,0,2019-02-15 10:26:36
54733632,2,,53983315,19,,"<p>You can do something like below,and [Object: null prototype] would disappear</p>&#xA;&#xA;<pre><code>const a = JSON.parse(JSON.stringify(args));&#xA;</code></pre>&#xA;&#xA;<p><code>args.category</code> is </p>&#xA;&#xA;<pre><code>[[Object: null prototype] { id: '5c28c79af62fad2514ccc788' }], &#xA;</code></pre>&#xA;&#xA;<p>JSON.parse(JSON.stringify(args.category) would be  <code>{ id: '5c28c79af62fad2514ccc788' }</code></p>&#xA;",10819751,,4099593,2019-07-17 00:51:34,2019-07-17 00:51:34,"",,0,2,0,2019-02-17 13:12:38
54742824,2,,54707274,7,,"<p>When I use <code>CocoaPods 1.5.3</code>, missing the source <code>Apollo/Core</code> after <code>pod install</code>, it causes the errors. I've fixed it by upgrade CocoaPods to 1.6.0.</p>&#xA;&#xA;<p>BTW, the original question is <strong>how to use ApolloSQLite?</strong> Because I've not found any documents for ApolloSQLite. After too many search &amp; query, I list my steps as below for other people for help:</p>&#xA;&#xA;<ol>&#xA;<li>use CocoaPods for manage the libs:</li>&#xA;</ol>&#xA;&#xA;<blockquote>&#xA;<pre><code>pod 'Apollo'&#xA;pod 'Apollo/SQLite'&#xA;</code></pre>&#xA;</blockquote>&#xA;&#xA;<ol start=""2"">&#xA;<li><p>need a file path to save the sqlite file which use for cache data. Paste my codes for refer:</p>&#xA;&#xA;<pre><code>func temporarySQLiteFileURL() -&gt; URL {&#xA;    let applicationSupportPath = NSSearchPathForDirectoriesInDomains(.applicationSupportDirectory, .userDomainMask, true).first!&#xA;    let dbPath = applicationSupportPath + ""/com.[special name].cache""&#xA;&#xA;    if !FileManager.default.fileExists(atPath: dbPath) {&#xA;        try? FileManager.default.createDirectory(atPath: dbPath, withIntermediateDirectories: true, attributes: nil)&#xA;    }&#xA;&#xA;    let url = URL(fileURLWithPath: dbPath)&#xA;    return url.appendingPathComponent(""db.sqlite3"")&#xA;}&#xA;</code></pre></li>&#xA;<li><p>configure the ApolloClient:</p>&#xA;&#xA;<pre><code>    let configuration = URLSessionConfiguration.default&#xA;    configuration.timeoutIntervalForRequest = 10&#xA;&#xA;    let url = URL(string: self.graphQLApiAddress!)!&#xA;    let networkTransport = HTTPNetworkTransport(url: url, configuration: configuration)&#xA;&#xA;    let cache = try? SQLiteNormalizedCache(fileURL: temporarySQLiteFileURL())&#xA;    let store = ApolloStore(cache: cache ?? InMemoryNormalizedCache())&#xA;    self.apolloClient = ApolloClient(networkTransport: networkTransport, store: store)&#xA;</code></pre></li>&#xA;</ol>&#xA;",3367915,,,,2019-02-18 08:07:43,"",,0,1,0,2019-02-18 08:07:43
54747509,2,,54727697,0,,"<p>Fixed by installing graphql-tools 4th version. It tutns out the editor did not even notice that I do not have this dependency and simply took the version of node_modules, which was installed by some other package. Problem was with version 3.x. <a href=""https://github.com/apollographql/graphql-tools/pull/928/commits/39e98f1112cf6cc10867845b15eab6295f4ebe40"" rel=""nofollow noreferrer"">Pull request</a> is where the bug was fixed.</p>&#xA;",6761800,,,,2019-02-18 12:39:16,"",,0,0,0,2019-02-18 12:39:16
54786273,2,,54785426,1,,"<p>Playground settings should be object, but you provide string. You can fix that with <code>require</code>.</p>&#xA;&#xA;<pre><code>const server = new ApolloServer({&#xA;  typeDefs,&#xA;  resolvers,&#xA;  playground: {&#xA;    endpoint: `/blog/`,&#xA;    settings: require('./playground.json')&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Server provides only default settings. Browser has local settings and makes composing.</p>&#xA;",4850916,,,,2019-02-20 12:20:14,"",,0,0,0,2019-02-20 12:20:14
54799463,1,,,1,927,"<p>When I deployed my app on Heroku, it works fine on Chrome, but not loading on Firefox and Safari. Heroku Log shows no particular errors:&#xA;<a href=""https://i.stack.imgur.com/i2q9p.png"" rel=""nofollow noreferrer"">Heroku Log</a></p>&#xA;&#xA;<p>In the console of Firefox, it says: Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource at <a href=""http://localhost:4000/graphql"" rel=""nofollow noreferrer"">http://localhost:4000/graphql</a>. (Reason: CORS request did not succeed).</p>&#xA;&#xA;<p>This is my setup of the server</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>require('dotenv').config();&#xD;&#xA;const express = require(""express"");&#xD;&#xA;const graphqlHTTP = require(""express-graphql"");&#xD;&#xA;const schema = require('./schema/schema');&#xD;&#xA;const mongoose = require('mongoose');&#xD;&#xA;const cors = require('cors');&#xD;&#xA;&#xD;&#xA;mongoose.connect(process.env.mongodburi, { useNewUrlParser: true })&#xD;&#xA;&#xD;&#xA;mongoose.connection.once('open', ()=&gt;{&#xD;&#xA;  console.log('Connected to database');&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;const app = express();&#xD;&#xA;app.use(cors());&#xD;&#xA;app.use(express.static(""public""));&#xD;&#xA;&#xD;&#xA;app.use('/graphql', graphqlHTTP({&#xD;&#xA;  schema,&#xD;&#xA;  graphiql: true&#xD;&#xA;}));&#xD;&#xA;&#xD;&#xA;app.withCredentials = true;&#xD;&#xA;&#xD;&#xA;const port = process.env.PORT;&#xD;&#xA;app.listen(port, ()=&gt;{&#xD;&#xA;  console.log(`Now listening requests on port:${port}`);&#xD;&#xA;})</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>Some people seem to say it's a security license issue. Any idea how to fix it? </p>&#xA;",11093761,,,,2021-02-12 18:52:29,"Front-end app Graphql request blocked by Safari, Firefox, but not Chrome on Heroku",<javascript><express><heroku><graphql><graphql-js>,1,4,0,2019-02-21 04:51:08
54811040,2,,54810014,0,,"<p>This seems to be something GraphQL Playground does if the response code is anything other than 200. I'm not sure if what you're seeing is expected behavior for Playground, but there is a related issue <a href=""https://github.com/prisma/graphql-playground/issues/898"" rel=""nofollow noreferrer"">here</a>. Either way, if you open your network tab and look at the actual response from the server, it's formatted as expected (i.e. it's an object with an <code>errors</code> property).</p>&#xA;",6024220,,,,2019-02-21 15:48:33,"",,0,0,0,2019-02-21 15:48:33
54820192,2,,54819917,0,,"<p>Use this</p>&#xA;&#xA;<pre><code>app.listen(process.env.PORT || 3000, function(){&#xA;    console.log(""Express server listening on port %d in %s mode"", this.address().port, app.settings.env);&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Or run <code>$ heroku config:set PORT=3333</code> as mentioned by ﾃﾞﾋﾞｯﾄ</p>&#xA;",10997917,,,,2019-02-22 04:41:52,"",,0,1,0,2019-02-22 04:41:52
54861403,2,,54861251,1,,<p>I dived into guide and found my error. I installed:</p>&#xA;&#xA;<pre><code>yarn add react-apollo apollo-boost&#xA;</code></pre>&#xA;&#xA;<p>But in guide I must to install:</p>&#xA;&#xA;<pre><code>yarn add apollo-boost react-apollo graphql&#xA;</code></pre>&#xA;&#xA;<p>When I added <code>graphql</code> - error gone.</p>&#xA;,7196144,,,,2019-02-25 07:31:43,"",,0,0,0,2019-02-25 07:31:43
54934559,1,,,2,656,"<p>I have a Next.JS app with React and Apollo Client that's behaving weirdly when deployed to Heroku. The only explanation that fits what I'm seeing is that Heroku config variables aren't set early enough for doing server side rendering.</p>&#xA;&#xA;<p>I have set a config var called API_URL (which is the address of a GraphQL API) and am using it when setting up Apollo Client, like so:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import withApollo from ""next-with-apollo"";&#xA;import ApolloClient, { InMemoryCache } from ""apollo-boost"";&#xA;&#xA;export default withApollo(({ ctx, headers, initialState }) =&gt; {&#xA;&#xA;  // Logging to double check the API_URL&#xA;  console.log(`process.env.API_URL: ${process.env.API_URL}`);&#xA;&#xA;  return new ApolloClient({&#xA;    uri: process.env.API_URL,&#xA;    cache: new InMemoryCache().restore(initialState || {})&#xA;  });&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Then _app.tsx is wrapped with the withApollo-component, like so:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>// ...imports&#xA;&#xA;class MyApp extends App {&#xA;  render() {&#xA;    const { Component, pageProps, apollo } = this.props;&#xA;    return (&#xA;      &lt;Container&gt;&#xA;        &lt;ApolloProvider client={apollo}&gt;&#xA;          &lt;ThemeProvider theme={theme}&gt;&#xA;            &lt;Component {...pageProps} /&gt;&#xA;          &lt;/ThemeProvider&gt;&#xA;        &lt;/ApolloProvider&gt;&#xA;      &lt;/Container&gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;export default withApollo(MyApp);&#xA;&#xA;</code></pre>&#xA;&#xA;<p>All according to the example setup at <a href=""https://github.com/lfades/next-with-apollo"" rel=""nofollow noreferrer"">next-with-apollo</a>.</p>&#xA;&#xA;<p>This all works just fine on localhost, but breaks with a bunch of 501-errors when running on Heroku. The Heroku config var API_URL <em>has</em> been set (I triple checked the Heroku dashboard).</p>&#xA;&#xA;<p>The added logging in <code>withApollo</code> shows that <code>process.env.API_URL</code> is the expected value on localhost but <code>undefined</code> when running on Heroku. </p>&#xA;&#xA;<p>I also tried using the Next.JS <code>getInitialProps</code> function to perform server side rendering and get the same results, console logging the Heroku config var shows it's always <code>undefined</code>.</p>&#xA;&#xA;<p>Requests made after page load does not show this behavior at all.</p>&#xA;&#xA;<p>Finally, when using a default value for the config value everywhere, e.g. <code>uri = process.env.API_URL || ""https://hardcoded.url/""</code> everything works like a charm.</p>&#xA;&#xA;<p>Should I not expect this to work? It seems to me like Heroku just doesn't set the config variables in time to use them when doing server side rendering? </p>&#xA;",1393156,,,,2019-02-28 21:28:24,heroku config var undefined during server side rendering with Next.JS & Apollo Client,<reactjs><heroku><apollo-client><next.js>,0,3,0,2019-02-28 21:28:24
54998492,1,,,3,461,"<p>I am using Nodejs, graphQl, Prisma, docker and PostgreSQL,&#xA;whenever I change Schema the I have to deploy it, but it gives error as follow </p>&#xA;&#xA;<p>ERROR: You can not deploy to a service stage while there is a deployment in progress or a pending deployment scheduled already. Please try again after the deployment finished</p>&#xA;&#xA;<p>""code"": 4008,</p>&#xA;&#xA;<p>""status"": 200</p>&#xA;&#xA;<p>then I wait for a few minutes and try again the result is  same, I tried a lot but the result is same </p>&#xA;",7532747,,,,2020-12-28 10:12:18,postgreSQL's prisma deploy command,<node.js><postgresql><graphql><prisma><prisma-graphql>,1,0,0,2019-03-05 08:36:06
55011045,1,55026878,,5,6691,"<p>I am trying to query data from GraphQL using Gatsby. I followed <a href=""https://www.gatsbyjs.org/docs/client-data-fetching/"" rel=""noreferrer"">Gatsby's</a> instructions on querying data in pages with GraphQL but, I keep getting an error.</p>&#xA;&#xA;<p>Error (this is what I need to fix more than the example below): </p>&#xA;&#xA;<blockquote>&#xA;  <p>Error: Cannot use GraphQLObjectType ""__Directive"" from another module&#xA;  or realm  .   Ensure that there is only one instance of ""graphql"" in&#xA;  the node_modules   directory. If different versions of ""graphql"" are&#xA;  the dependencies of other   relied on modules, use ""resolutions"" to&#xA;  ensure only one version is installed.<br>&#xA;  <a href=""https://yarnpkg.com/en/docs/selective-version-resolutions"" rel=""noreferrer"">https://yarnpkg.com/en/docs/selective-version-resolutions</a>   Duplicate&#xA;  ""graphql"" modules cannot be used at the same time since different<br>&#xA;  versions may have different capabilities and behavior. The data from&#xA;  one   version used in the function from another could produce&#xA;  confusing and   spurious results.</p>&#xA;</blockquote>&#xA;&#xA;<p>Any idea why this is happening? I only have one graphql instance in my node_modules folder</p>&#xA;&#xA;<p><strong>Example of what I am working with:</strong></p>&#xA;&#xA;<p>I am going to be importing my own data from GraphQL but for now as a proof of concept I am working on this Gatsby Rick and Morty Example (link above - I didnt bother with the axios demo yet).</p>&#xA;&#xA;<p>index.js code:</p>&#xA;&#xA;<pre><code>import React, { Component } from 'react'&#xA;import { graphql } from 'gatsby'&#xA;&#xA;// This query is executed at build time by Gatsby.&#xA;export const GatsbyQuery = graphql`&#xA;  {&#xA;    rickAndMorty {&#xA;      character(id: 1) {&#xA;        name&#xA;        image&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;&#xA;class ClientFetchingExample extends Component {&#xA;  render() {&#xA;    const {&#xA;      rickAndMorty: { character },&#xA;    } = this.props.data&#xA;&#xA;    return (&#xA;      &lt;div style={{ textAlign: ""center"", width: ""600px"", margin: ""50px auto"" }}&gt;&#xA;        &lt;h1&gt;{character.name} With His Pupper&lt;/h1&gt;&#xA;        &lt;p&gt;Rick &amp; Morty API data loads at build time.&lt;/p&gt;&#xA;        &lt;div&gt;&#xA;          &lt;img&#xA;            src={character.image}&#xA;            alt={character.name}&#xA;            style={{ width: 300 }}&#xA;          /&gt;&#xA;        &lt;/div&gt;&#xA;        &lt;h2&gt;Image of Rick's pupper&lt;/h2&gt;&#xA;        &lt;p&gt;This will come from a request on the client&lt;/p&gt;&#xA;      &lt;/div&gt;&#xA;    )&#xA;  }&#xA;}&#xA;&#xA;export default ClientFetchingExample&#xA;</code></pre>&#xA;&#xA;<p>gatsby-config.js:</p>&#xA;&#xA;<pre><code>plugins: [&#xA;  {&#xA;    resolve: ""gatsby-source-graphql"",&#xA;    options: {&#xA;      typeName: ""RMAPI"",&#xA;      fieldName: ""rickAndMorty"",&#xA;      url: ""https://rickandmortyapi-gql.now.sh/"",&#xA;    },&#xA;  },&#xA;...&#xA;</code></pre>&#xA;",4279496,,4279496,2019-03-06 17:03:17,2020-07-16 20:05:12,"Error: Cannot use GraphQLObjectType ""__Directive"" from another module or realm",<graphql><gatsby>,2,0,0,2019-03-05 20:29:00
55014091,1,,,2,875,"<p>I have created an ApolloServer that uses a remote schema. The remote schema requires an Authorization token which I can get from the request to my apollo server. Here is the code for the apollo server. I can hard code the token in the customFetch function, and it all works, but I want to pass the token I get on the call to my server.</p>&#xA;&#xA;<pre><code>import {makeRemoteExecutableSchema, introspectSchema, mergeSchemas} from 'graphql-tools';&#xA;import {HttpLink} from 'apollo-link-http';&#xA;import {ApolloServer} from 'apollo-server';&#xA;import fetch from 'node-fetch';&#xA;&#xA;// create executable schemas from remote GraphQL APIs&#xA;const customFetch = (uri, options) =&gt; {&#xA;  // How do I set the token from my server req??&#xA;  options.headers.Authorization =&#xA;    'Bearer eyJhbGciOiJIUzI1NiIsI Not A Real Token kf5iOg9SkxDBVtQnLJuz3hXEDA';&#xA;  return fetch(uri, options);&#xA;};&#xA;&#xA;const createRemoteExecutableSchemas = async () =&gt; {&#xA;  let schemas = [];&#xA;  const link = new HttpLink({&#xA;    uri: 'http://remote.graphql.server:5555/graphql',&#xA;    fetch: customFetch,&#xA;  });&#xA;  const remoteSchema = await introspectSchema(link);&#xA;  const remoteExecutableSchema = makeRemoteExecutableSchema({&#xA;    schema: remoteSchema,&#xA;    link,&#xA;  });&#xA;  schemas.push(remoteExecutableSchema);&#xA;  return schemas;&#xA;};&#xA;&#xA;const createNewSchema = async () =&gt; {&#xA;  const schemas = await createRemoteExecutableSchemas();&#xA;  return mergeSchemas({&#xA;    schemas,&#xA;  });&#xA;};&#xA;&#xA;const runServer = async () =&gt; {&#xA;  const schema = await createNewSchema();&#xA;  const server = new ApolloServer({&#xA;    schema&#xA;  });&#xA;  server.listen().then(({url}) =&gt; {&#xA;    console.log(`  Server ready at ${url}`);&#xA;  });&#xA;};&#xA;&#xA;try {&#xA;  runServer();&#xA;} catch (err) {&#xA;  console.error(err);&#xA;}&#xA;</code></pre>&#xA;",5081767,,,,2019-03-08 09:49:19,Apollo Server: How to pass authorization token to remote schema,<apollo-server>,1,0,0,2019-03-06 01:22:34
55025673,1,55028166,,3,2271,"<p>When making a GraphQL query, and the query fails, Apollo solves this by having a data-object and an error-object.</p>&#xA;&#xA;<p>When an async error is happening, we get the same functionality with one data-object and one error-object. But, this time we get an <code>UnhandledPromiseRejectionWarning</code> too, with information about: <code>DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.</code>.</p>&#xA;&#xA;<p>So, we obviously need to solve this, but we want our async-functions to cast errors all the way up to Apollo. Do we need to try...catch all functions and just pass our error further up the tree? Coming from C#, were an exception just goes all the way to the top if never caught, it sounds like a tedious job to tell Apollo GraphQL that one (or more) leaves failed to retrieve data from the database.</p>&#xA;&#xA;<p>Is there a better way to solve this, or is there any way to tell javascript/node that an uncaught error should be passed further up the call tree, until it's caught?</p>&#xA;",2687506,,,,2019-03-06 16:51:37,How to handle async errors correctly?,<javascript><node.js><graphql><apollo-server>,1,0,0,2019-03-06 14:39:39
55033126,1,,,0,712,"<p>I have a full stack application that uses React on the frontend and GraphQL yoga on the backend. I am trying to deploy the app to Heroku, but I can't get my frontend to be served. When I go to the Heroku URL all I see is the GraphQL playground. </p>&#xA;&#xA;<p>Here is what I have that starts my server:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const options = {&#xA;        port: process.env.PORT || 4000&#xA;      }&#xA;&#xA;    server.start(options, ({ port }) =&gt;&#xA;        console.log(&#xA;            `Server started, listening on port ${port} for incoming requests.`,&#xA;        ),&#xA;    )&#xA;</code></pre>&#xA;&#xA;<p>On the frontend I have this which connects it to my server:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const client = new ApolloClient({&#xA;    uri: ""http://localhost:4000""&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>But I don't know how to get this all running on Heroku.</p>&#xA;",5716464,,,,2019-09-05 00:38:21,How do I deploy react + GraphQL to Heroku?,<reactjs><heroku><deployment><graphql><apollo>,1,4,0,2019-03-06 22:23:05
55091231,1,,,1,279,"<p>I am trying to make my 1st Relay query. I did <code>npm run relay</code> and <code>npm run build</code>. Everything works well, but in console I am getting error:&#xA;<a href=""https://i.stack.imgur.com/nyQsH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nyQsH.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Does anybody know what may cause this error?</p>&#xA;&#xA;<p>Update.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Table.js (component where I want make query)</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>import React, { Component } from 'react';&#xA;import { graphql, QueryRenderer } from 'react-relay';&#xA;&#xA;const environment = import('../../environment.js');&#xA;&#xA;class Table extends Component {&#xA;&#xA;    render() {&#xA;        return (&#xA;&#xA;        &lt;QueryRenderer&#xA;            environment={environment}&#xA;            query={graphql`&#xA;                query TableQuery {&#xA;                    users {&#xA;                        data {&#xA;                            name&#xA;                        }&#xA;                    }&#xA;                  }&#xA;            `}&#xA;            render={({error, props}) =&gt; {&#xA;                return &lt;div&gt;User: 1&lt;/div&gt;;&#xA;            }}&#xA;        /&gt;&#xA;        );&#xA;    }&#xA;}&#xA;&#xA;export default Table;&#xA;</code></pre>&#xA;&#xA;<blockquote>&#xA;  <p>environment.js (relay config)</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>import {&#xA;    Environment,&#xA;    Network,&#xA;    RecordSource,&#xA;    Store,&#xA;} from 'relay-runtime';&#xA;&#xA;function fetchQuery(&#xA;    operation,&#xA;    variables,&#xA;) {&#xA;    return fetch('/graphql', {&#xA;        method: 'POST',&#xA;        headers: {&#xA;            'content-type': 'application/json'&#xA;        },&#xA;        body: JSON.stringify({&#xA;            query: operation.text,&#xA;            variables,&#xA;        }),&#xA;    }).then(response =&gt; {&#xA;        return response.json();&#xA;    });&#xA;}&#xA;&#xA;const network = Network.create(fetchQuery);&#xA;const store = new Store(new RecordSource());&#xA;&#xA;const environment = new Environment({&#xA;    network,&#xA;    store&#xA;});&#xA;&#xA;export default environment;&#xA;</code></pre>&#xA;&#xA;<p>Everything is from docs setup page.</p>&#xA;",10712836,,1751946,2019-05-22 05:21:26,2019-05-22 05:23:54,Cannot read property 'getRequest' of undefined - Relay,<javascript><reactjs><graphql><relay>,1,2,0,2019-03-10 18:58:55
55102854,2,,55102126,8,,"<p>If you are running a standalone instance of GraphQL Playground, the URL is passed directly to the component as a prop:</p>&#xA;&#xA;<pre><code>&lt;Playground&#xA;  endpoint=""http://localhost/graphql""&#xA;  subscriptionEndpoint=""wss://localhost/graphql""&#xA;/&gt;&#xA;</code></pre>&#xA;&#xA;<p>If you're using <code>apollo-server</code>, the endpoint URL should be derived from the <code>subscriptionsPath</code>, but it can also be set directly in the config:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const server = new ApolloServer({&#xA;  typeDefs,&#xA;  resolvers,&#xA;  playground: {&#xA;    subscriptionEndpoint: 'wss://localhost/graphql',&#xA;  },&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>EDIT:</p>&#xA;&#xA;<p>It doesn't appear there's a way to configure the desktop client with a specific subscription URL, unless you're using it with a local repo that contains a <code>.graphqlconfig</code>. In that case, you can provide additional information about your environment, including the subscription url, in the config file as outlined <a href=""https://github.com/prisma/graphql-config"" rel=""noreferrer"">here</a>.</p>&#xA;",6024220,,6024220,2019-03-12 13:27:02,2019-03-12 13:27:02,"",,0,1,0,2019-03-11 13:24:56
55112240,2,,53622747,0,,"<p>You probably did not have a <code>now.json</code> configuration. This file would tell <code>now</code> how to deploy your application. If this configuration was not defined then <code>now</code> would have just uploaded the files.<br>&#xA;The GitHub repo you linked doesn't have a <code>now.json</code> file so this is likely the case.<br>&#xA;<a href=""https://zeit.co/docs/v2/deployments/configuration"" rel=""nofollow noreferrer"">Now deployment configuration docs</a></p>&#xA;",8891686,,,,2019-03-12 00:13:36,"",,0,0,0,2019-03-12 00:13:36
55195114,2,,44564905,-1,,"<p><strong>Over-fetching and under-fetching</strong>&#xA;In a dynamic language like Ruby, over and under fetching are two common pitfalls.</p>&#xA;&#xA;<p><strong>Over-fetching</strong>&#xA;Over-fetching occurs when additional fields are declared in a fragment but are not actually used in the template. This will likely happen when template code is modified to remove usage of a certain field.</p>&#xA;&#xA;<p>If the fragment is not updated along with this changed, the property will still be fetched when we no longer need it. A simple title field may not be a big deal in practice but this property could have been a more expensive nested data tree.</p>&#xA;&#xA;<p><strong>Under-fetching</strong>&#xA;Under-fetching occurs when fields are not declared in a fragment but are used in the template. This missing data will likely surface as a NoFieldError or nil value.</p>&#xA;&#xA;<p>Worse, there may be a latent under-fetch bug when a template does not declare a data dependency but appears to be working because its caller happens to fetch the correct data upstream. But when this same template is rendered from a different path, it errors on missing data.</p>&#xA;",11054242,,,,2019-03-16 09:03:50,"",,0,2,0,2019-03-16 09:03:50
55230593,1,,,0,1207,"<p>I have mutation which works on graphiQL: </p>&#xA;&#xA;<pre><code>mutation ADDRELEASE{&#xA;  createRelease(release: {&#xA;    title: ""Release Title""&#xA;    releaseType: ""Album""&#xA;&#xA;  }) {&#xA;    title&#xA;    id&#xA;  }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>I'm tryng to use <strong>apollo client</strong> with <strong>graphql-tag</strong> and set mutation variables like this:</p>&#xA;&#xA;<pre><code> const CREATE_RELEASE = gql`&#xA;  mutation($release: {&#xA;    $title: String &#xA;    $releaseType: String&#xA;  }){&#xA;    createRelease(release: {&#xA;      title: $title &#xA;      releaseType: $releaseType&#xA;&#xA;    }){&#xA;    id&#xA;   }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>I guess it's matter of syntax. Can't figure out how to make it work. </p>&#xA;",4415461,,,,2019-03-19 01:30:09,How to construct apollo client mutation with custom input and variables,<javascript><graphql><react-apollo><apollo-client><graphql-js>,1,0,0,2019-03-18 21:54:00
55232424,2,,55230593,1,,"<p>There's no need to define a variable for both <code>$release</code> <strong>and</strong> the other two variables if you're only going to use <code>$title</code> and <code>$releaseType</code>. You can do either:</p>&#xA;&#xA;<pre><code># Replace ReleaseInput with the appropriate type based on the schema&#xA;mutation($release: ReleaseInput) {&#xA;  createRelease(release: $release) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>or...</p>&#xA;&#xA;<pre><code>mutation(&#xA;  $title: String &#xA;  $releaseType: String&#xA;) {&#xA;  createRelease(release: {&#xA;    title: $title &#xA;    releaseType: $releaseType&#xA;  }) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>For what it's worth, you can also test queries with variables in GraphiQL. You can open the variable editor by clicking on <code>QUERY VARIABLES</code> in the bottom left corner of the page.</p>&#xA;",6024220,,,,2019-03-19 01:30:09,"",,0,0,0,2019-03-19 01:30:09
55259856,1,55653595,,29,42858,"<p>I tried changing the addTypeName: false in the Apollo client in GraphQL</p>&#xA;&#xA;<pre><code>apollo.create({&#xA;  link: httpLinkWithErrorHandling,&#xA;  cache: new InMemoryCache({ addTypename: false }),&#xA;  defaultOptions: {&#xA;    watchQuery: {&#xA;      fetchPolicy: 'network-only',&#xA;      errorPolicy: 'all'&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>But it works and it throws the following messages in the console</p>&#xA;&#xA;<pre><code>fragmentMatcher.js:26 You're using fragments in your queries, but either don't have the addTypename:true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.Please turn on the addTypename option and include __typename when writing fragments so that Apollo Clientcan accurately match fragments.&#xA;</code></pre>&#xA;&#xA;<p>,</p>&#xA;&#xA;<pre><code>Could not find __typename on Fragment  PopulatedOutageType&#xA;</code></pre>&#xA;&#xA;<p>and</p>&#xA;&#xA;<pre><code>fragmentMatcher.js:28 DEPRECATION WARNING: using fragments without __typename is unsupported behavior and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.&#xA;</code></pre>&#xA;&#xA;<p>even if i change false to true <code>new InMemoryCache({ addTypename: true }),</code> the mutations start failing because of the unwanted typename in the mutation </p>&#xA;&#xA;<p>is there any way to resolve this issue</p>&#xA;",5283532,,,,2022-01-04 15:56:47,How to remove the `__typename` field from the graphql response which fails the mutations,<node.js><graphql><apollo><apollo-client><express-graphql>,1,1,0,2019-03-20 11:36:43
55297699,1,,,3,1181,"<p>I am getting the following error when attempting to fetch a query fragment:</p>&#xA;&#xA;<blockquote>&#xA;  <p>""You are using the simple (heuristic) fragment matcher, but your queries contain union or interface types. Apollo Client will not be able to accurately map fragments. To make this error go away, use the <code>IntrospectionFragmentMatcher</code> as described in the docs: <a href=""https://www.apollographql.com/docs/react/recipes/fragment-matching.html"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/recipes/fragment-matching.html</a>""</p>&#xA;</blockquote>&#xA;&#xA;<p>This is the call that triggers the error.</p>&#xA;&#xA;<pre><code>const sourceData = cache.readFragment({&#xA;        id: `${typename}:${idToAdd}`,&#xA;        fragment: gql`&#xA;          ${sourceFragment}&#xA;        `,&#xA;      });&#xA;</code></pre>&#xA;&#xA;<p>where sourceFragment is</p>&#xA;&#xA;<pre><code>fragment series on PriceSeries {&#xA;    id&#xA;    title&#xA;    description&#xA;    commodity&#xA;    region&#xA;    location&#xA;    isDiscontinued&#xA;    order&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Apollo seems to be classing the return value of the fragment as a union or interface. I don't think adding the IntrospectionFragmentMatcher should be necessary as we have no need of unions or interfaces, although maybe I'm wrong. Adding <code>__typename</code> to the fragment didn't help.</p>&#xA;&#xA;<ul>&#xA;<li>How do I remove this error (I may just be missing some gql syntax for typing?)</li>&#xA;<li>Does using fragments mean we should set up the <code>IntrospectionFragmentMatcher</code> regardless.. (the docs say it should only be needed <code>when using fragments on interfaces or unions</code> which we are not)</li>&#xA;<li>Is the error a bug, should I just be hiding the error (it does work as is if you ignore it) </li>&#xA;</ul>&#xA;&#xA;<p><em>Update</em> </p>&#xA;&#xA;<p>ApolloClient is created as follows</p>&#xA;&#xA;<pre><code> client = new ApolloClient({&#xA;      link: createLink('MY_URL', Apollo.fetch),&#xA;      cache: new InMemoryCache(),&#xA;    });&#xA;</code></pre>&#xA;",168012,,168012,2019-03-25 08:49:08,2019-04-01 07:31:13,readFragment causing IntrospectionFragmentMatcher error although not using interface or unions,<javascript><reactjs><apollo><react-apollo><apollo-client>,1,6,0,2019-03-22 10:33:01
55308679,2,,55299233,0,,<p>For me the issue was that i deployed the project without setting <code>ssl: true</code> in the yml file. After that everything worked fine</p>&#xA;,5376187,,,,2019-03-22 22:38:28,"",,0,0,0,2019-03-22 22:38:28
55349975,2,,50923365,0,,"<p>I solved this by using <a href=""https://www.npmjs.com/package/nookies"" rel=""nofollow noreferrer"">nookies</a>. It works both server side (for getInitialProps) and client side in Next.js</p>&#xA;",7040366,,,,2019-03-26 04:42:07,"",,0,0,0,2019-03-26 04:42:07
55355700,1,,,0,905,"<p>I am new to GatsbyJs - GraphQL, I have been exploring the example provided by gatsby(<a href=""https://github.com/gatsbyjs/gatsby/tree/master/examples/using-gatsby-source-graphql"" rel=""nofollow noreferrer"">https://github.com/gatsbyjs/gatsby/tree/master/examples/using-gatsby-source-graphql</a>), As I tried with local apollo-grapql server, It returns data in the front-end, However it throws above error and blocks the build process, not sure what exactly is typeName I need to pass it in here? any help one this would be much appreciated.</p>&#xA;&#xA;<pre><code>    `gatsby-source-graphql`,&#xA;    {&#xA;      resolve: ""gatsby-source-graphql"",&#xA;     options: {&#xA;      // This type will contain remote schema Query type&#xA;      typeName: ""Query"",&#xA;      // This is field under which it's accessible&#xA;      fieldName: ""blah"",&#xA;      // Url to query from&#xA;      url: ""http://10.113.34.59:4000/graphql"",&#xA;      // this is URL where served exposed its service in local&#xA;  },&#xA;</code></pre>&#xA;",3324028,,,,2019-03-27 07:16:43,Error: Invariant Violation: gatsby-source-graphql requires option `typeName` to be specified,<graphql><gatsby>,1,0,0,2019-03-26 11:09:34
55362097,2,,55359830,1,,"<p>Ahh.. finding out correct version is tricky..</p>&#xA;<p>I created fresh project with <code>gatsby new &lt;project_name&gt;</code> and did <code>npm install</code>.&#xA;Installed plugin with <code>npm install --save gatsby-source-pg</code></p>&#xA;<p>After this I searched for folders named <code>graphql</code> in <code>node_modules</code> and then prepared following resolution list -</p>&#xA;<pre><code>  &quot;resolutions&quot;:{&#xA;    &quot;eslint-plugin-graphql/graphql&quot;: &quot;14.1.1&quot;,&#xA;    &quot;express-graphql/graphql&quot;: &quot;14.1.1&quot;,&#xA;    &quot;graphql-tools/graphql&quot;: &quot;14.1.1&quot;,&#xA;    &quot;apollo-link/graphql&quot;: &quot;14.1.1&quot;,&#xA;    &quot;apollo-utilities/graphql&quot;: &quot;14.1.1&quot;,&#xA;    &quot;gatsby-source-graphql/graphql&quot;: &quot;14.1.1&quot;,&#xA;    &quot;gatsby-source-pg/graphql&quot;: &quot;14.1.1&quot;,&#xA;    &quot;@types/graphql&quot;: &quot;14.1.1&quot;&#xA;  }&#xA;</code></pre>&#xA;<p>But then somehow, when I did <code>yarn install</code>, <code>@types</code> said that it did not like <code>14.1.1</code> and and offered a range of versions. I choose the latest one from the presented list, <code>14.0.7</code> and went ahead with installation. It still generated warnings as below -</p>&#xA;<pre><code>yarn install&#xA;yarn install v1.12.3&#xA;info No lockfile found.&#xA;[1/4] Resolving packages...&#xA;Couldn't find any versions for &quot;@types/graphql&quot; that matches &quot;14.1.1&quot;&#xA;? Please choose a version of &quot;@types/graphql&quot; from this list: 14.0.7&#xA;warning Resolution field &quot;graphql@14.1.1&quot; is incompatible with requested version &quot;graphql@0.13.x&quot;&#xA;[2/4] Fetching packages...&#xA;info fsevents@1.2.7: The platform &quot;win32&quot; is incompatible with this module.&#xA;info &quot;fsevents@1.2.7&quot; is an optional dependency and failed compatibility check. Excluding it from installation.&#xA;[3/4] Linking dependencies...&#xA;warning &quot;gatsby &gt; express-graphql@0.6.12&quot; has incorrect peer dependency &quot;graphql@^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0&quot;.&#xA;warning &quot;gatsby &gt; eslint-plugin-graphql@2.1.1&quot; has incorrect peer dependency &quot;graphql@^0.12.0 || ^0.13.0&quot;.&#xA;warning &quot;gatsby &gt; graphql-tools@3.1.1&quot; has incorrect peer dependency &quot;graphql@^0.13.0&quot;.&#xA;warning &quot;gatsby &gt; pnp-webpack-plugin &gt; ts-pnp@1.0.1&quot; has unmet peer dependency &quot;typescript@*&quot;.&#xA;warning &quot;gatsby-source-pg &gt; gatsby-source-graphql &gt; apollo-link@1.2.1&quot; has incorrect peer dependency &quot;graphql@^0.11.3 || ^0.12.3 || ^0.13.0&quot;.&#xA;[4/4] Building fresh packages...&#xA;success Saved lockfile.&#xA;Done in 37.83s.&#xA;</code></pre>&#xA;<p>But now, I can use <code>GraphiQL</code> playground to execute my graphql queries and in the project as well.</p>&#xA;<h2>Update:</h2>&#xA;<p>You can minimize resolutions and just say:</p>&#xA;<pre><code>&quot;resolutions&quot;: {&#xA;     &quot;graphql&quot;: &quot;14.x&quot;&#xA;}&#xA;</code></pre>&#xA;<p>Special thanks to @benji from Postgraphile</p>&#xA;",10799862,,1639566,2021-05-25 21:43:20,2021-05-25 21:43:20,"",,0,0,0,2019-03-26 16:35:06
55371715,2,,55355700,0,,"<pre><code>`gatsby-source-graphql`, &lt;==== this caused the issue&#xA;{&#xA;  resolve: ""gatsby-source-graphql"",&#xA; options: {&#xA;  // This type will contain remote schema Query type&#xA;  typeName: ""Query"",&#xA;  // This is field under which it's accessible&#xA;  fieldName: ""blah"",&#xA;  // Url to query from&#xA;  url: ""http://10.113.34.59:4000/graphql"",&#xA;  // this is URL where served exposed its service in local&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>Below worked fine</p>&#xA;&#xA;<pre><code>{&#xA;  resolve: ""gatsby-source-graphql"",&#xA; options: {&#xA;  // This type will contain remote schema Query type&#xA;  typeName: ""Query"",&#xA;  // This is field under which it's accessible&#xA;  fieldName: ""blah"",&#xA;  // Url to query from&#xA;  url: ""http://10.113.34.59:4000/graphql"",&#xA;  // this is URL where served exposed its service in local&#xA; },&#xA;</code></pre>&#xA;",3324028,,,,2019-03-27 07:16:43,"",,0,0,0,2019-03-27 07:16:43
55418652,2,,52499428,1,,"<p>Just find out the bug in this library, Just open the subscription.dart file by ctrl+click on Subscription. In that file, it is easy to see that socketClient variable is null. So just define it in initState() function as shown in the docs. Restart your app. And it works like a charm. So, basically, you just need to initialize that variable in the subscription.dart file.</p>&#xA;",8403946,,,,2019-03-29 13:35:30,"",,0,0,0,2019-03-29 13:35:30
55437689,1,,,1,2778,"<p>Here is the problem, I just wanna use 'Get' request to send parameters to graphql based server, since user may save the url as the bookmark and open it directly, like the example in Restful 'www.xxx.com?id=abc'.  But in local environment, my frontend listens port 3000, and backend(graphql) listens port 8000, so it cannot use 'www.localhost.com:3000/graphql?query={getId{id}}' to send request, so what could I do to solve it?</p>&#xA;",11283572,,,,2019-03-31 07:47:17,How to get URL parameters or send 'Get' request to graphql?,<reactjs><graphql>,1,0,0,2019-03-31 03:43:37
55437933,2,,40434746,-1,,<p>try install django-filter.</p>&#xA;&#xA;<pre><code>pip install django-filter&#xA;</code></pre>&#xA;,4783719,,,,2019-03-31 04:41:55,"",,0,0,0,2019-03-31 04:41:55
55447201,1,,,1,970,"<p>I am using react, graphql and node. Currently, my react codes are on codesandbox, whilst my server codes are on my local computer. How do i link up my frontend with my backend in this case? Do i need to deploy my server codes onto heroku or digital ocean before i can link them? I like to be able to test them first before deploying my codes</p>&#xA;&#xA;<p>I am also thinking of migrating my backend codes to codesandbox. In this case, am i still able to link my frontend and backend codes in order to test them out before deploying to the hosting provider servers?</p>&#xA;&#xA;<p>Thanks</p>&#xA;",7285771,,,,2019-04-02 10:00:02,Connecting frontend (react) to backend (node) using codesandbox,<node.js><reactjs><graphql><codesandbox>,1,2,0,2019-04-01 01:54:15
55448308,1,,,1,448,"<p>Describe the bug&#xA;the lighthouse does not install on laravel 5.7</p>&#xA;&#xA;<p>Loading composer repositories with package information&#xA;Updating dependencies (including require-dev)</p>&#xA;&#xA;<pre><code>Your requirements could not be resolved to an installable set of packages.&#xA;&#xA;  Problem 1&#xA;    - Conclusion: don't install nuwave/lighthouse v2.6.4&#xA;    - Conclusion: don't install nuwave/lighthouse v2.6.3&#xA;    - Conclusion: don't install nuwave/lighthouse v2.6.2&#xA;    - Conclusion: don't install nuwave/lighthouse v2.6.1&#xA;    - Conclusion: don't install nuwave/lighthouse v2.6.0&#xA;    - Conclusion: remove webonyx/graphql-php v0.13.1&#xA;    - Installation request for nuwave/lighthouse ^2.6 &#xA;      -&gt; satisfiable by nuwave/lighthouse[2.x-dev, v2.6.0, v2.6.1, v2.6.2, v2.6.3, v2.6.4].&#xA;    - Conclusion: don't install webonyx/graphql-php v0.13.1&#xA;    - nuwave/lighthouse 2.x-dev requires webonyx/graphql-php ^0.12 &#xA;      -&gt; satisfiable by webonyx/graphql-php[0.12.x-dev, v0.12.0, v0.12.1, v0.12.2, v0.12.3, v0.12.4, v0.12.5, v0.12.6].&#xA;    - Can only install one of: webonyx/graphql-php[0.12.x-dev, v0.13.1].&#xA;    - Can only install one of: webonyx/graphql-php[v0.12.0, v0.13.1].&#xA;    - Can only install one of: webonyx/graphql-php[v0.12.1, v0.13.1].&#xA;    - Can only install one of: webonyx/graphql-php[v0.12.2, v0.13.1].&#xA;    - Can only install one of: webonyx/graphql-php[v0.12.3, v0.13.1].&#xA;    - Can only install one of: webonyx/graphql-php[v0.12.4, v0.13.1].&#xA;    - Can only install one of: webonyx/graphql-php[v0.12.5, v0.13.1].&#xA;    - Can only install one of: webonyx/graphql-php[v0.12.6, v0.13.1].&#xA;    - Installation request for webonyx/graphql-php (locked at v0.13.1) &#xA;      -&gt; satisfiable by webonyx/graphql-php[v0.13.1].&#xA;</code></pre>&#xA;",5542093,,6024220,2019-07-24 16:01:30,2019-07-24 16:01:30,Installation lighthouse in laravel 5.7,<laravel><graphql><laravel-lighthouse>,1,2,0,2019-04-01 04:55:50
55471950,2,,55447201,0,,"<p>Charlie is correct. I actually build my react frontend on codesandbox and connected to my node graphql backend on codesandbox too. Both must be running for that to work. Must enable cors too for both to connect. As im using apollo server 2, can pass a cors: true to the apollo server constructor. </p>&#xA;",7285771,,,,2019-04-02 10:00:02,"",,0,1,0,2019-04-02 10:00:02
55474130,1,55486595,,1,433,"<p>Mutating data in the graphql playground says the message of &#xA;Message: Student is not a constructor&#xA;Error: ""TypeError: Student is not a constructor""&#xA;Student is my Mongoose Model.</p>&#xA;&#xA;<p>I've tried reinstalling my node_modules, searching some fix on the github.</p>&#xA;&#xA;<p>This is my Mutation Function</p>&#xA;&#xA;<pre><code> addStudent: async (&#xA;      root,&#xA;      { studentId, firstName, lastName, email, password },&#xA;      { Student }&#xA;    ) =&gt; {&#xA;      const newStudent = await new Student({&#xA;        studentId,&#xA;        firstName,&#xA;        lastName,&#xA;        email,&#xA;        password&#xA;      }).save();&#xA;      return newStudent;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>and this is my Mongoose Model</p>&#xA;&#xA;<pre><code>const mongoose = require(""mongoose"");&#xA;const Schema = mongoose.Schema;&#xA;&#xA;const StudentSchema = new Schema({&#xA;  studentId: {&#xA;    type: String,&#xA;    required: true&#xA;  },&#xA;  firstName: {&#xA;    type: String,&#xA;    required: true&#xA;  },&#xA;  lastName: {&#xA;    type: String,&#xA;    required: true&#xA;  },&#xA;  // sectionId: {&#xA;  //   type: [Schema.Types.ObjectId],&#xA;  //   ref: ""Section"",&#xA;  //   nullable: true&#xA;  // },&#xA;  email: {&#xA;    type: String,&#xA;    required: true&#xA;  },&#xA;  password: {&#xA;    type: String,&#xA;    required: true&#xA;  },&#xA;  createdDate: {&#xA;    type: Date,&#xA;    default: Date.now&#xA;  }&#xA;});&#xA;&#xA;module.exports = mongoose.model(""Student"", StudentSchema);&#xA;&#xA;</code></pre>&#xA;&#xA;<p>The student should be created, but that error pops up with that message.</p>&#xA;",9980769,,,,2019-04-03 03:26:06,"How to fix the ""Name of the mongoose Model"" is not a constructor in graphql when mutating",<mongoose><graphql><apollo-server>,2,0,0,2019-04-02 11:52:18
55516306,2,,55515081,1,,"<p>On what path your Hasura's GraphQL endpoint is configured?</p>&#xA;&#xA;<p>The way your <code>VirtualService</code> is configured, a request to your gateway will behave like this:</p>&#xA;&#xA;<p><code>my.host.com/hasura1</code> --> <code>hasura-1/hasura1</code><br>&#xA;<code>my.host.com/hasura1/anotherpath</code> --> <code>hasura-1/hasura1/anotherpath</code><br>&#xA;<code>my.host.com/hasura2</code> --> <code>hasura-2/hasura2</code></p>&#xA;&#xA;<p><strong>Maybe you are missing a <code>rewrite.uri</code> rule to strip the path from the request.</strong></p>&#xA;&#xA;<p>e.g.: With this rule:</p>&#xA;&#xA;<pre><code>http:&#xA;- match:&#xA;  - uri:&#xA;      prefix: /hasura1&#xA;  rewrite:&#xA;    uri: /&#xA;  route:&#xA;  - destination:&#xA;      host: hasura-1&#xA;      port:&#xA;        number: 80&#xA;</code></pre>&#xA;&#xA;<p>your Hasura container should receive the requests on the root path:</p>&#xA;&#xA;<p><code>my.host.com/hasura1</code> --> <code>hasura-1/</code><br>&#xA;<code>my.host.com/hasura1/anotherpath</code> --> <code>hasura-1/anotherpath</code></p>&#xA;",7641078,,,,2019-04-04 12:43:28,"",,0,2,0,2019-04-04 12:43:28
55520056,1,55520057,,0,189,"<p>I am using the apollo-client grapqhl client for grapqhl requests in my nativescript project. Since the latest update the apollo client is undefined after initialization.</p>&#xA;&#xA;<p>After debugging the app I found an unguarded access to process.env.NODE_ENV, but process is undefined in a nativescript app. Any ideas for a solution?</p>&#xA;",109430,,109430,2019-04-10 16:37:16,2019-04-10 17:48:04,Using apollo-client in a nativescript app - process not defined,<typescript><nativescript><apollo-client>,1,0,0,2019-04-04 15:43:30
55520057,2,,55520056,0,,"<p>I now reported this as a bug and they will fix it. </p>&#xA;&#xA;<p><a href=""https://github.com/apollographql/apollo-client/issues/4665"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client/issues/4665</a></p>&#xA;&#xA;<p>There are some workarounds.</p>&#xA;&#xA;<ol>&#xA;<li>Use a process polyfill, e.g. <a href=""https://www.npmjs.com/package/process"" rel=""nofollow noreferrer"">process</a></li>&#xA;<li><p>Set node env via webpack (if you are using webpack) as @Manoj mentioned</p>&#xA;&#xA;<pre><code>plugins: [&#xA;    // Define useful constants like TNS_WEBPACK&#xA;    new webpack.DefinePlugin({&#xA;        ""global.TNS_WEBPACK"": ""true"",&#xA;        'process.env': {&#xA;          'NODE_ENV': JSON.stringify('production')&#xA;        }&#xA;    }),&#xA;  ]&#xA;</code></pre></li>&#xA;<li><p>Set the process.env variable yourself (might not work if using typescript)</p></li>&#xA;</ol>&#xA;&#xA;<p>Before creating the grapqhl - client I set the process.env variable like this.</p>&#xA;&#xA;<pre><code>process.env = {NODE_ENV: 'production'};&#xA;</code></pre>&#xA;&#xA;<p>Typescript already had a typing for the node process, I just had to set it and add the env variable.</p>&#xA;",109430,,109430,2019-04-10 17:48:04,2019-04-10 17:48:04,"",,0,1,0,2019-04-04 15:43:30
55520511,2,,54707877,0,,"<p>Probably the problem is the version of the ""babel-jest"" module. Try to allineate it with the ""jest"" module.&#xA;These are my dependencies in my package.json:&#xA;    ...&#xA;    ""babel-jest"": ""^23"",&#xA;    ""jest"": ""22.4.3"",&#xA;    ...</p>&#xA;",10290955,,,,2019-04-04 16:04:54,"",,0,0,0,2019-04-04 16:04:54
55525026,1,55527170,,1,1813,"<p>I have two node servers both serving graphql via <code>express-graphql</code>.&#xA;I wish to have my first server stitch its schema with that of the second server.</p>&#xA;&#xA;<p>I have followed these instructions at: <a href=""https://www.apollographql.com/docs/graphql-tools/remote-schemas"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/graphql-tools/remote-schemas</a></p>&#xA;&#xA;<p>as I am using graphql-tools.</p>&#xA;&#xA;<p>I am able to retrieve the schema from my second node server but as soon as I try to print it (with a mere <code>console.log</code>) i get this error:</p>&#xA;&#xA;<pre><code>Uncaught exception TypeError: schema.getDirectives is not a function&#xA;    at printFilteredSchema (/Users/cchabert/git-repo/client-configuration-api/node_modules/graphql/utilities/schemaPrinter.js:61:27)&#xA;    at Object.printSchema (/Users/cchabert/git-repo/client-configuration-api/node_modules/graphql/utilities/schemaPrinter.js:47:10)&#xA;    at makeRemoteExecutableSchema (/Users/cchabert/git-repo/client-configuration-api/node_modules/graphql-tools/dist/stitching/makeRemoteExecutableSchema.js:60:30)&#xA;    at schema (/Users/cchabert/git-repo/client-configuration-api/app/api/schema.js:68:24)&#xA;    at module.exports (/Users/cchabert/git-repo/client-configuration-api/app/routes.js:102:13)&#xA;    at Object.&lt;anonymous&gt; (/Users/cchabert/git-repo/client-configuration-api/app/index.js:15:20)&#xA;    at Module._compile (internal/modules/cjs/loader.js:799:30)&#xA;    at Object.Module._extensions..js (internal/modules/cjs/loader.js:810:10)&#xA;    at Module.load (internal/modules/cjs/loader.js:666:32)&#xA;    at tryModuleLoad (internal/modules/cjs/loader.js:606:12)&#xA;    at Function.Module._load (internal/modules/cjs/loader.js:598:3)&#xA;    at Function.Module.runMain (internal/modules/cjs/loader.js:862:12)&#xA;    at internal/main/run_main_module.js:21:11&#xA;</code></pre>&#xA;&#xA;<p>which causes the server to die but I am also able to see the schema somehow:</p>&#xA;&#xA;<pre><code>received schema:  {""_queryType"":""Query"",""_mutationType"":""Mutation"",&#xA;""_subscriptionType"":null,""_directives"":[""@skip"",""@include"",""@deprecated""],&#xA;""_typeMap"":{""Query"":""Query"",""String"":""String"",""Client"":""Client"",&#xA;""ID"":""ID"",""DateTime"":""DateTime"",[...]}&#xA;</code></pre>&#xA;&#xA;<p>I do see the <code>_directives</code> field in the remote schema definition but the docs isn't super clear on how to deal with this.</p>&#xA;&#xA;<p>I have looked through the github issues of the <code>graphql-tools</code> repo as well but couldn't find anything.</p>&#xA;&#xA;<p>Here is a code snippet:</p>&#xA;&#xA;<pre><code>const {&#xA;  addMockFunctionsToSchema,&#xA;  makeExecutableSchema,&#xA;  makeRemoteExecutableSchema,&#xA;  introspectSchema,&#xA;  mergeSchemas&#xA;} = require('graphql-tools')&#xA;const _ = require('lodash)&#xA;const { createHttpLink } = require('apollo-link-http')&#xA;const fetch = require('node-fetch')&#xA;&#xA;[..]&#xA;const customFetch = (uri, options = {}) =&gt; {&#xA;  const httpOptions = _.merge(options, {&#xA;    headers: {&#xA;      'Content-type': 'application/json'&#xA;    }&#xA;  })&#xA;  return fetch(uri, httpOptions)&#xA;}&#xA;&#xA;function schema() {&#xA;  const Query = `&#xA;    type Query {&#xA;      _empty: String&#xA;    }&#xA;    type Mutation {&#xA;      _empty: String&#xA;    }&#xA;  `&#xA;  const resolvers = {}&#xA;&#xA;  const mocks = {}&#xA;&#xA;  const localSchema = makeExecutableSchema({&#xA;    typeDefs: [Query, [...]],&#xA;    resolvers: [resolvers, [...]]&#xA;  }) // by itself this schema works without any issues&#xA;&#xA;  const mergedMocks = _.merge(mocks, [...])&#xA;&#xA;  addMockFunctionsToSchema({&#xA;    schema: localSchema,&#xA;    mocks: mergedMocks,&#xA;    preserveResolvers: true&#xA;  })&#xA;&#xA;  const infoApiLink = createHttpLink({ uri, fetch: customFetch })&#xA;&#xA;  const remoteSchema = makeRemoteExecutableSchema({&#xA;    schema: introspectSchema(infoApiLink).then(remoteSchema =&gt; {&#xA;      console.log('received schema: ', JSON.stringify(remoteSchema))&#xA;      return remoteSchema&#xA;    }),&#xA;    link: infoApiLink&#xA;  })&#xA;&#xA;  return mergeSchemas({ schemas: [localSchema, remoteSchema] })&#xA;}&#xA;&#xA;module.exports = {&#xA;  schema&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I would also like to make this work using only Promises (no async/await) as mentioned in <a href=""https://github.com/apollographql/graphql-tools/blob/master/docs/source/remote-schemas.md#--introspectschemafetcher-context"" rel=""nofollow noreferrer"">https://github.com/apollographql/graphql-tools/blob/master/docs/source/remote-schemas.md#--introspectschemafetcher-context</a></p>&#xA;&#xA;<p>Any suggestions welcome.</p>&#xA;",1854669,,,,2019-04-05 01:44:54,getDirectives error when printing remote schema with graphql-tools,<node.js><express><graphql><express-graphql><graphql-tools>,1,0,0,2019-04-04 21:15:43
55539540,1,55541225,,1,1746,"<p>I'm getting an error similar to the error described in <a href=""https://stackoverflow.com/q/50760443/5623385"">Query.products is defined in resolvers but not in schema</a> but only when I push to Heroku. Here are the details:</p>&#xA;&#xA;<pre><code>// profile.graphql&#xA;type Profile {&#xA;  id: ID!&#xA;  version: String!&#xA;  // ...&#xA;}&#xA;&#xA;type Query {&#xA;  profile(id: ID!): Profile&#xA;  profiles: [Profile]&#xA;}&#xA;</code></pre>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>// profiles.resolver.ts&#xA;import { Args, Query, Resolver } from '@nestjs/graphql'&#xA;import { Profile } from './profile.entity'&#xA;&#xA;@Resolver('Profile')&#xA;export class ProfileResolver {&#xA;  @Query()&#xA;  public async profile(@Args('id') id: number) {&#xA;    return await Profile.findOne(id)&#xA;  }&#xA;&#xA;  @Query()&#xA;  public async profiles() {&#xA;    return await Profile.find()&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Locally, I can run <code>yarn start:dev</code> and it works great. The application starts successfully and I can query my GraphQL endpoint without a problem.</p>&#xA;&#xA;<p>When I push this to Heroku, the application never starts up.</p>&#xA;&#xA;<pre><code>2019-04-03T15:42:38.102056+00:00 heroku[web.1]: Starting process with command `node dist/main.js`&#xA;2019-04-03T15:42:42.448420+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [NestFactory] Starting Nest application...&#xA;2019-04-03T15:42:42.499150+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] ConfigModule dependencies initialized +51ms&#xA;2019-04-03T15:42:42.499439+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] TypeormConfigModule dependencies initialized +0ms&#xA;2019-04-03T15:42:42.499805+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] TypeOrmModule dependencies initialized +0ms&#xA;2019-04-03T15:42:42.500251+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] ApiModule dependencies initialized +1ms&#xA;2019-04-03T15:42:42.500726+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] PassportModule dependencies initialized +0ms&#xA;2019-04-03T15:42:42.501201+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] DataModule dependencies initialized +1ms&#xA;2019-04-03T15:42:42.501651+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] GqlConfigModule dependencies initialized +0ms&#xA;2019-04-03T15:42:42.502039+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] EntitiesModule dependencies initialized +0ms&#xA;2019-04-03T15:42:42.502411+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] UsersModule dependencies initialized +0ms&#xA;2019-04-03T15:42:42.502819+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] HelpersModule dependencies initialized +0ms&#xA;2019-04-03T15:42:42.503246+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] ProfilesModule dependencies initialized +1ms&#xA;2019-04-03T15:42:42.503676+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] ResourceTypesModule dependencies initialized +0ms&#xA;2019-04-03T15:42:42.504107+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] SchemaMappingsModule dependencies initialized +1ms&#xA;2019-04-03T15:42:42.504580+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] SearchReplaceValuesModule dependencies initialized +0ms&#xA;2019-04-03T15:42:42.505006+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] XpathExpressionsModule dependencies initialized +0ms&#xA;2019-04-03T15:42:42.505581+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] JwtModule dependencies initialized +1ms&#xA;2019-04-03T15:42:42.550301+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] AppModule dependencies initialized +45ms&#xA;2019-04-03T15:42:42.553207+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] GraphQLModule dependencies initialized +3ms&#xA;2019-04-03T15:42:42.553861+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] AuthModule dependencies initialized +0ms&#xA;2019-04-03T15:42:42.674522+00:00 app[web.1]: query: SELECT * FROM ""information_schema"".""tables"" WHERE ""table_schema"" = current_schema() AND ""table_name"" = 'migrations'&#xA;2019-04-03T15:42:42.690182+00:00 app[web.1]: query: SELECT * FROM ""migrations"" ""migrations""&#xA;2019-04-03T15:42:42.693584+00:00 app[web.1]: No migrations are pending&#xA;2019-04-03T15:42:42.696083+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [InstanceLoader] TypeOrmCoreModule dependencies initialized +142ms&#xA;2019-04-03T15:42:42.734620+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [RoutesResolver] AppController {/}: +35ms&#xA;2019-04-03T15:42:42.735243+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [RouterExplorer] Mapped {/, GET} route +4ms&#xA;2019-04-03T15:42:42.735665+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [RoutesResolver] AuthController {/auth}: +0ms&#xA;2019-04-03T15:42:42.737212+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [RouterExplorer] Mapped {/register, POST} route +2ms&#xA;2019-04-03T15:42:42.739125+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [RouterExplorer] Mapped {/login, POST} route +0ms&#xA;2019-04-03T15:42:42.739137+00:00 app[web.1]: [Nest] 4   - 4/3/2019, 3:42:42 PM   [RouterExplorer] Mapped {/refresh, POST} route +0ms&#xA;2019-04-03T15:42:42.849522+00:00 app[web.1]: (node:4) UnhandledPromiseRejectionWarning: Error: Query.profile defined in resolvers, but not in schema&#xA;</code></pre>&#xA;&#xA;<p><strong>Why do I get the error in production and not in development?</strong> What is happening that makes the GraphQL schema not register my <code>profile</code> query?</p>&#xA;",5623385,,,,2019-06-19 07:40:30,"NestJS 5 GraphQL Error Query defined in resolvers, but not in schema",<typescript><heroku><graphql><nestjs>,1,1,0,2019-04-05 16:12:21
55561076,1,55564198,,0,2585,"<p>I'm confused, because i have a problem with this basic tutorial --> <a href=""https://www.howtographql.com/graphql-ruby/4-authentication/"" rel=""nofollow noreferrer"">https://www.howtographql.com/graphql-ruby/4-authentication/</a></p>&#xA;&#xA;<p>I move all queries to another folder (like mutations) with this tutorial -->&#xA;<a href=""https://itnext.io/graphql-with-ruby-on-rails-queries-in-multiple-files-3a7b818354a2"" rel=""nofollow noreferrer"">https://itnext.io/graphql-with-ruby-on-rails-queries-in-multiple-files-3a7b818354a2</a></p>&#xA;&#xA;<p><strong>I got error in GraphiQL console:</strong></p>&#xA;&#xA;<pre><code>TypeError: Cannot read property 'types' of undefined&#xA;    at buildClientSchema (http://localhost:4000/assets/graphiql/rails/application-6f03c7a92432765b0fbe671bfb7a292ee6c37e6704b6e6ac95587e45676bbf72.js:34102:72)&#xA;    at http://localhost:4000/assets/graphiql/rails/application-6f03c7a92432765b0fbe671bfb7a292ee6c37e6704b6e6ac95587e45676bbf72.js:2795:55&#xA;</code></pre>&#xA;&#xA;<p><strong>app/graphql/backend_schema.rb</strong></p>&#xA;&#xA;<pre><code>class BackendSchema &lt; GraphQL::Schema&#xA;  mutation(Types::MutationType)&#xA;  query(Types::QueryType)&#xA;end&#xA;</code></pre>&#xA;&#xA;<p><strong>app/graphql/types/user_type.rb</strong></p>&#xA;&#xA;<pre><code>module Types&#xA;  class UserType &lt; Types::BaseObject&#xA;    field :id, ID, null: false&#xA;    field :name, String, null: false&#xA;    field :email, String, null: false&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p><strong>app/graphql/types/query_type.rb</strong></p>&#xA;&#xA;<pre><code>module Types&#xA;  class QueryType &lt; Types::BaseObject&#xA;     field :get_all_users, resolver: Queries::GetAllUsers&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p><strong>app/graphql/queries/base_queries.rb</strong></p>&#xA;&#xA;<pre><code>module Queries&#xA;  class BaseQuery &lt; GraphQL::Schema::Resolver&#xA;    # null false&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p><strong>app/graphql/queries/get_all_users.rb</strong></p>&#xA;&#xA;<pre><code>module Queries&#xA;  class GetAllUsers &lt; Queries::BaseQuery&#xA;    type [Types::UserType], null: false&#xA;&#xA;    def get_all_users&#xA;      User.all&#xA;    end&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p><strong>Logs from console:</strong></p>&#xA;&#xA;<pre><code>backend git:(master) rails s -p 4000&#xA;=&gt; Booting Puma&#xA;=&gt; Rails 5.2.3 application starting in development &#xA;=&gt; Run `rails server -h` for more startup options&#xA;Puma starting in single mode...&#xA;* Version 3.12.1 (ruby 2.6.2-p47), codename: Llamas in Pajamas&#xA;* Min threads: 5, max threads: 5&#xA;* Environment: development&#xA;* Listening on tcp://localhost:4000&#xA;Use Ctrl-C to stop&#xA;Started GET ""/graphiql"" for ::1 at 2019-04-07 12:55:21 +0100&#xA;   (0.7ms)  SELECT ""schema_migrations"".""version"" FROM ""schema_migrations"" ORDER BY ""schema_migrations"".""version"" ASC&#xA;  ↳ /Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activerecord-5.2.3/lib/active_record/log_subscriber.rb:98&#xA;Processing by GraphiQL::Rails::EditorsController#show as HTML&#xA;  Parameters: {""graphql_path""=&gt;""/graphql""}&#xA;  Rendering /Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb&#xA;  Rendered /Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/graphiql-rails-1.7.0/app/views/graphiql/rails/editors/show.html.erb (166.0ms)&#xA;Completed 200 OK in 171ms (Views: 169.2ms | ActiveRecord: 0.0ms)&#xA;&#xA;&#xA;Started POST ""/graphql"" for ::1 at 2019-04-07 12:55:22 +0100&#xA;Processing by GraphqlController#execute as */*&#xA;  Parameters: {""query""=&gt;""\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  "", ""graphql""=&gt;{""query""=&gt;""\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  ""}}&#xA;uninitialized constant Queries::BaseQuery&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:79:in `block in load_missing_constant'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:8:in `without_bootsnap_cache'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:79:in `rescue in load_missing_constant'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:58:in `load_missing_constant'&#xA;/Users/qwerty/projects/backend/app/graphql/queries/get_all_users.rb:2:in `&lt;module:Queries&gt;'&#xA;/Users/qwerty/projects/backend/app/graphql/queries/get_all_users.rb:1:in `&lt;main&gt;'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:14:in `block in loading'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:13:in `loading'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:48:in `block in require_or_load'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:47:in `require_or_load'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'&#xA;/Users/qwerty/projects/backend/app/graphql/types/query_type.rb:3:in `&lt;class:QueryType&gt;'&#xA;/Users/qwerty/projects/backend/app/graphql/types/query_type.rb:2:in `&lt;module:Types&gt;'&#xA;/Users/qwerty/projects/backend/app/graphql/types/query_type.rb:1:in `&lt;main&gt;'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:14:in `block in loading'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:13:in `loading'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:48:in `block in require_or_load'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:47:in `require_or_load'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'&#xA;/Users/qwerty/projects/backend/app/graphql/backend_schema.rb:3:in `&lt;class:BackendSchema&gt;'&#xA;/Users/qwerty/projects/backend/app/graphql/backend_schema.rb:1:in `&lt;main&gt;'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:54:in `load'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:14:in `block in loading'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/concurrency/share_lock.rb:151:in `exclusive'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/dependencies/interlock.rb:13:in `loading'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:48:in `block in require_or_load'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:47:in `require_or_load'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:60:in `block in load_missing_constant'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:16:in `allow_bootsnap_retry'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/bootsnap-1.4.2/lib/bootsnap/load_path_cache/core_ext/active_support.rb:59:in `load_missing_constant'&#xA;/Users/qwerty/projects/backend/app/controllers/graphql_controller.rb:10:in `execute'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_controller/metal/basic_implicit_render.rb:6:in `send_action'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/abstract_controller/base.rb:194:in `process_action'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_controller/metal/rendering.rb:30:in `process_action'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/abstract_controller/callbacks.rb:42:in `block in process_action'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/callbacks.rb:98:in `run_callbacks'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/abstract_controller/callbacks.rb:41:in `process_action'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_controller/metal/rescue.rb:22:in `process_action'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_controller/metal/instrumentation.rb:34:in `block in process_action'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/notifications.rb:168:in `block in instrument'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/notifications/instrumenter.rb:23:in `instrument'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/notifications.rb:168:in `instrument'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_controller/metal/instrumentation.rb:32:in `process_action'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_controller/metal/params_wrapper.rb:256:in `process_action'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activerecord-5.2.3/lib/active_record/railties/controller_runtime.rb:24:in `process_action'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/abstract_controller/base.rb:134:in `process'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_controller/metal.rb:191:in `dispatch'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_controller/metal.rb:252:in `dispatch'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/routing/route_set.rb:52:in `dispatch'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/routing/route_set.rb:34:in `serve'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/journey/router.rb:52:in `block in serve'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/journey/router.rb:35:in `each'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/journey/router.rb:35:in `serve'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/routing/route_set.rb:840:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/etag.rb:25:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/conditional_get.rb:38:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/head.rb:12:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activerecord-5.2.3/lib/active_record/migration.rb:559:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/middleware/callbacks.rb:28:in `block in call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/callbacks.rb:98:in `run_callbacks'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/middleware/callbacks.rb:26:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/middleware/executor.rb:14:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/middleware/debug_exceptions.rb:61:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/middleware/show_exceptions.rb:33:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/railties-5.2.3/lib/rails/rack/logger.rb:38:in `call_app'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/railties-5.2.3/lib/rails/rack/logger.rb:26:in `block in call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/tagged_logging.rb:71:in `block in tagged'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/tagged_logging.rb:28:in `tagged'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/tagged_logging.rb:71:in `tagged'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/railties-5.2.3/lib/rails/rack/logger.rb:26:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/middleware/remote_ip.rb:81:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/middleware/request_id.rb:27:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/runtime.rb:22:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/activesupport-5.2.3/lib/active_support/cache/strategy/local_cache_middleware.rb:29:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/middleware/executor.rb:14:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/actionpack-5.2.3/lib/action_dispatch/middleware/static.rb:127:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/rack-2.0.7/lib/rack/sendfile.rb:111:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/rack-cors-1.0.3/lib/rack/cors.rb:95:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/railties-5.2.3/lib/rails/engine.rb:524:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/puma-3.12.1/lib/puma/configuration.rb:227:in `call'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/puma-3.12.1/lib/puma/server.rb:660:in `handle_request'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/puma-3.12.1/lib/puma/server.rb:474:in `process_client'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/puma-3.12.1/lib/puma/server.rb:334:in `block in run'&#xA;/Users/qwerty/.rbenv/versions/2.6.2/lib/ruby/gems/2.6.0/gems/puma-3.12.1/lib/puma/thread_pool.rb:135:in `block in spawn_thread'&#xA;Completed 500 Internal Server Error in 12ms (Views: 0.9ms | ActiveRecord: 0.0ms)&#xA;</code></pre>&#xA;&#xA;<p>Thanks for help!</p>&#xA;",8614173,,8614173,2020-04-19 02:10:07,2020-04-19 02:10:07,TypeError: Cannot read property 'types' of undefined,<ruby-on-rails><ruby><graphql>,1,3,0,2019-04-07 16:13:38
55583863,2,,55539298,0,,<p>proxy.pac is a file that tells a web browser which proxy to use for a given request. You generally don't use it as a proxy itself.</p>&#xA;,11331922,,,,2019-04-09 01:26:16,"",,0,0,0,2019-04-09 01:26:16
55596633,2,,55595592,0,,"<p>Ok seemed to have fixed it with help from <a href=""https://github.com/apollographql/graphql-tools/pull/1074"" rel=""nofollow noreferrer"">this discussion</a> pointing to <a href=""https://gist.github.com/owenallenaz/d206464acae26c8612a63e0a69256e73"" rel=""nofollow noreferrer"">this gist</a>. It was a stitching error with a few unnecessary error formatting. I removed the formatError from both <code>ApolloServer({})</code> and reformatted my <em>./src/remoteSchema/index.js</em> to look like:</p>&#xA;&#xA;<pre><code>import { makeRemoteExecutableSchema, introspectSchema } from 'graphql-tools';&#xA;import { ApolloLink } from 'apollo-link';&#xA;import { HttpLink } from 'apollo-link-http';&#xA;import { setContext } from 'apollo-link-context';&#xA;import { onError } from 'apollo-link-error';&#xA;import fetch from 'node-fetch';&#xA;import config from '../../config/config';&#xA;&#xA;&#xA;// graphql API metadata&#xA;const graphqlApis = [&#xA;    { uri: config.USER_DEV_API },&#xA;    { uri: config.BLOG_DEV_API },&#xA;    { uri: config.PROJECT_DEV_API },&#xA;    { uri: config.PROFILE_DEV_API }&#xA;];&#xA;&#xA;// create executable schemas from remote GraphQL APIs&#xA;export default async () =&gt; {&#xA;    const schemas = [];&#xA;&#xA;    /*eslint-disable*/&#xA;    for (const api of graphqlApis) {&#xA;&#xA;        let remoteLink = new HttpLink({ uri : api.uri, fetch });&#xA;        let remoteContext = setContext((req, previous) =&gt; {&#xA;            // if the authorization token doesn't exist, or is malformed, do not pass it upstream&#xA;            if (&#xA;                !previous.graphqlContext.authorization&#xA;                ||&#xA;                !previous.graphqlContext.authorization.match(/^Bearer /)&#xA;            ) {&#xA;                return;&#xA;            }&#xA;&#xA;            return {&#xA;                headers: {&#xA;                    'Authorization': previous.graphqlContext.authorization,&#xA;                }&#xA;            }&#xA;        });&#xA;&#xA;        let remoteError = onError(({ networkError, graphQLErrors }) =&gt; {&#xA;            if (graphQLErrors) {&#xA;                graphQLErrors.forEach((val) =&gt; {&#xA;                    Object.setPrototypeOf(val, Error.prototype);&#xA;                });&#xA;            }&#xA;        });&#xA;        let remoteSchema  = await introspectSchema(remoteLink);&#xA;        let remoteExecutableSchema = makeRemoteExecutableSchema({&#xA;            schema : remoteSchema,&#xA;            link : ApolloLink.from([&#xA;                remoteContext,&#xA;                remoteError,&#xA;                remoteLink&#xA;            ])&#xA;        });&#xA;&#xA;        schemas.push(remoteExecutableSchema);&#xA;    }&#xA;&#xA;    return schemas;&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>This was a week of pain, but from what I've seen they issue will hopefully be resolved in graphql-tools 5.0</p>&#xA;",7268341,,,,2019-04-09 15:45:31,"",,0,0,0,2019-04-09 15:45:31
55617384,1,55617519,,0,1527,"<p>I have been getting below errors while trying to access graphql url from <a href=""https://subdomain-b.abc.com/"" rel=""nofollow noreferrer"">https://subdomain-b.abc.com/</a> service. </p>&#xA;&#xA;<pre><code>POST https://subdomain-a.abc.com/graphql 504&#xA;&#xA;Access to fetch at 'https://subdomain-a.abc.com/graphql' from origin 'https://subdomain-b.abc.com/' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.&#xA;</code></pre>&#xA;&#xA;<p>Both services are running on same aws account on Fargate with ELB sitting in front of them. Route 53 is redirecting requests to ELB.</p>&#xA;&#xA;<p>Most of the answers I googled are related to S3 bucket which is not the case with my setup. Let me know if I can provide some more details.</p>&#xA;",3521300,,,,2019-04-10 16:41:24,Access to fetch at has been blocked by CORS policy while accessing from another subdomain,<graphql><aws-fargate><aws-elb><aws-application-load-balancer>,1,0,0,2019-04-10 16:33:11
55625079,2,,55622941,7,,"<p>Don't know if there is anyone who wants to know about this. &#xA;But apparently, you can do it with <code>GraphQL::RakeTask</code>.&#xA;I'll leave some links here as well.</p>&#xA;&#xA;<p><a href=""https://graphql-ruby.org/api-doc/1.9.3/GraphQL/RakeTask#invoking-the-task-from-ruby"" rel=""noreferrer"">https://graphql-ruby.org/api-doc/1.9.3/GraphQL/RakeTask#invoking-the-task-from-ruby</a>&#xA;<a href=""https://github.com/rmosolgo/graphql-ruby/blob/master/lib/graphql/rake_task.rb"" rel=""noreferrer"">https://github.com/rmosolgo/graphql-ruby/blob/master/lib/graphql/rake_task.rb</a></p>&#xA;",11128859,,,,2019-04-11 05:06:02,"",,0,0,0,2019-04-11 05:06:02
55660924,1,,,1,155,"<p>I have a create-react-app 1.1.4 app that I am trying to upgrade to 2.1.8.</p>&#xA;&#xA;<p>When I upgrade the project to any of the 2.x series of react-scripts, I end up with the following error for tests which contain GraphQL fragments:</p>&#xA;&#xA;<pre><code>  TypeError: Cannot read property 'body' of undefined&#xA;&#xA;  11 | import {get} from 'lodash';&#xA;  12 | &#xA;&gt; 13 | export const GET_ADDRESS = gql`&#xA;     |                                ^&#xA;  14 |  query ConfirmDeleteAddressGetAddress($addressID: String!, $organisationID: String!) {&#xA;  15 |      getSelf {&#xA;  16 |          id&#xA;&#xA;  at Object.gql [as default] (node_modules/graphql-tag/src/index.js:162:36)&#xA;</code></pre>&#xA;&#xA;<p>The application itself seems to run fine and if I remove the fragment then it moves on to give me an error on the next fragment.</p>&#xA;&#xA;<p>Jest has gone from version 20.0.4 in my CRA 1.x app to version 23.6 in the CRA 2.1.8 version.</p>&#xA;&#xA;<p>Is there something within the Jest/CRA configuration that could be causing this?</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Further information on this - if I downgrade graphql to 0.13.2 then the jest test runs but the react app fails to start with:</p>&#xA;&#xA;<pre><code>ReferenceError: process is not defined&#xA;</code></pre>&#xA;",276866,,5849770,2019-04-14 06:05:28,2019-04-14 06:05:28,CRA 2 with Jest GraphQL Fragment test results in TypeError,<graphql><jestjs><create-react-app><apollo><react-apollo>,0,0,0,2019-04-13 00:21:30
55666480,2,,55666016,1,,"<p>i've solved using this kind of configuration for babel/register:</p>&#xA;&#xA;<pre><code>const rootPath=path.resolve(path.join(__dirname, ""../../""));&#xA;&#xA;require(""@babel/register"")({&#xA;    root: rootPath,&#xA;    extends: path.join(rootPath, '.babelrc'),&#xA;    ignore: [/node_modules/],&#xA;    only: [rootPath],&#xA;})&#xA;</code></pre>&#xA;",1964544,,,,2019-04-13 14:19:03,"",,0,0,0,2019-04-13 14:19:03
55688170,2,,54707877,14,,"<p>Just install the older version of babel-jest: 22.&#xA;No need to change the version of jest, latest version can be used.&#xA;Latest version of babel-jest creates the problem</p>&#xA;&#xA;<p>npm install --save-dev babel-jest@22.4.3 </p>&#xA;",11362938,,,,2019-04-15 11:25:25,"",,0,0,0,2019-04-15 11:25:25
55777459,1,,,0,32,"<p>it seems that any long audio (> 4 min) somehow makes an API to spawn two operations instead of one. Whatever I've been doing (using event emitter pattern or promises) it is always like that. </p>&#xA;&#xA;<p>As a result my db have two transcription instead of one (I don't even understand how it could be keeping in mind that mongoose model breaks when second text hit the backend)</p>&#xA;&#xA;<p>Please, help me solve this, I struggle with that issue about two months now.</p>&#xA;&#xA;<p>&#xA;<img src=""https://user-images.githubusercontent.com/4914235/56461927-6452fe80-63b2-11e9-89c2-f43cb7c0d36c.png"" alt=""2019-04-20_21-18-54"">&#xA;</p>&#xA;&#xA;Environment details&#xA;&#xA;<ul>&#xA;<li>OS: MacOS 10.14.4 (18E226)</li>&#xA;<li>Node.js version: 11.2.0</li>&#xA;<li>npm version: </li>&#xA;<li><code>@google-cloud/speech</code> version: 2.3.0</li>&#xA;</ul>&#xA;&#xA;Steps to reproduce&#xA;&#xA;<p>Run code: </p>&#xA;&#xA;<pre><code>async function transcribe(gcsuri, progressCB) {&#xA;  const reducerforSingleAlternative = (obj, item, index, array) =&gt; {&#xA;    item.alternatives[0].words.map(word =&gt; obj.words.push(word));&#xA;    obj.confidence += item.alternatives[0].confidence;&#xA;    obj.transcript += item.alternatives[0].transcript;&#xA;    if (index === (array.length - 1)) {&#xA;      obj.confidence /= array.length;&#xA;    }&#xA;    return obj;&#xA;  };&#xA;&#xA;  process.env.GOOGLE_APPLICATION_CREDENTIALS = process.env.SPEECH_KEY;&#xA;  const speech = require('@google-cloud/speech').v1p1beta1;&#xA;  const client = new speech.SpeechClient();&#xA;  const audio = {&#xA;    uri: gcsuri,&#xA;  };&#xA;  const request = {&#xA;    audio,&#xA;    config: {&#xA;      encoding: 'OGG_OPUS',&#xA;      sampleRateHertz: 24000,&#xA;      languageCode: 'ru',&#xA;      enableSpeakerDiarization: true,&#xA;      enableWordConfidence: true,&#xA;      maxAlternatives: 1,&#xA;      enableWordTimeOffsets: true,&#xA;    },&#xA;  };&#xA;&#xA;  const [operation] = await client.longRunningRecognize(request);&#xA;&#xA;  operation.on('progress', (metadata, apiResponse) =&gt; {&#xA;    console.log('metadata', apiResponse);&#xA;    progressCB(metadata.progressPercent);&#xA;  });&#xA;&#xA;  const [results] = await operation.promise();&#xA;  console.log('promise', typeof results, results);&#xA;&#xA;  return results.results.reduce(reducerforSingleAlternative, { words: [], confidence: 0, transcript: '' });&#xA;</code></pre>&#xA;",4530618,,,,2019-06-18 09:34:02,Long files transcribed twice (have two operations running) - bug,<javascript><google-speech-api><apollo-server>,1,0,0,2019-04-20 20:26:33
55780812,2,,55775415,10,,"<p>By default, Apollo server turns off introspection and playground when running with <code>NODE_ENV=production</code>. Since Heroku sets it by default when you use the <code>node buildpack</code> your playground is disabled.</p>&#xA;&#xA;<p>To circumvent the issue you need to pass to apollo-server 2 options:</p>&#xA;&#xA;<pre><code>const server = new ApolloServer({&#xA;  introspection: true,&#xA;  playground: true&#xA;});&#xA;</code></pre>&#xA;",3806360,,,,2019-04-21 07:30:57,"",,0,0,0,2019-04-21 07:30:57
55796127,2,,55746075,0,,"<p>If anyone gets here I solved by creating a local mutation that calls the server mutation and does whatever it wants as well:</p>&#xA;&#xA;<pre><code>resolver(parent, args, context) {&#xA;  // do anything else&#xA;  return context.client.mutate(...);&#xA;}&#xA;</code></pre>&#xA;",1732725,,,,2019-04-22 14:37:07,"",,0,0,0,2019-04-22 14:37:07
55801390,1,,,0,243,"<p>I am using XAMPP and opening a website hosted on PC <code>desk</code> from another PC in local network. </p>&#xA;&#xA;<p>I am using Laravel Passport with <code>CreateFreshApiToken</code> middleware. When I am posting to my GraphQL API from PC ""<code>desk</code>"", everything works fine, but posting from another PC fails: no cookies are being sent. </p>&#xA;&#xA;<p>Cookies are HTTP-Only. I am wondering if this is some cross domain issue, but I am using the same domain everywhere: <code>http://desk</code> and <code>http://desk/graphql</code> for my API.</p>&#xA;&#xA;<p>Why are cookies not being sent?</p>&#xA;&#xA;<p>Apollo Client setup</p>&#xA;&#xA;<pre><code>const httpLinkSecret = new HttpLink({&#xA;  // You should use an absolute URL here&#xA;  uri: ""http://desk/graphql""&#xA;});&#xA; var csrfToken = window.csrfToken;&#xA;Vue.prototype.csrfToken = window.csrfToken;&#xA;const authMiddleware = new ApolloLink((operation, forward, error) =&gt; {&#xA;  // add authorization to the headers&#xA;  operation.setContext({&#xA;    headers: {&#xA;      ""X-CSRF-TOKEN"": csrfToken&#xA;    }&#xA;  });&#xA;  return forward(operation);&#xA;});&#xA;&#xA;&#xA;const apolloClientSecret = new ApolloClient({&#xA;  link: authMiddleware.concat(errorLink).concat(httpLinkSecret),&#xA;  cache: new InMemoryCache(),&#xA;  connectToDevTools: true&#xA;});&#xA;</code></pre>&#xA;&#xA;<p><strong>EDIT 1</strong></p>&#xA;&#xA;<p>I figured out that on other machines it works on Chrome (only Desktop, not mobile) but not in Edge.</p>&#xA;&#xA;<p><strong>EDIT 2</strong> </p>&#xA;&#xA;<p>If I simply do</p>&#xA;&#xA;<pre><code>var xhr = new XMLHttpRequest();&#xA;xhr.open('POST', '/graphql', true);&#xA;&#xA;xhr.onload = function () {&#xA;  // Request finished. Do processing here.&#xA;};&#xA;&#xA;xhr.send(null);&#xA;</code></pre>&#xA;&#xA;<p>Then cookie header is being appended. Why does it not work with Apollo Client?</p>&#xA;",6019601,,6019601,2019-04-23 10:19:20,2019-04-23 10:19:20,Why no cookies are being sent when in local network?,<laravel><vue.js><graphql><apollo-client><vue-apollo>,0,7,0,2019-04-22 21:32:08
55862250,1,55862694,,0,752,"<p>I am working in graphql using node js. I want to get the hostname of a server and use it in anywhere of file. </p>&#xA;&#xA;<p>here is my code: </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>app.use('/api',graphqlHTTP((req,res)=&gt;({&#xA;&#xA;    context:{&#xA;      oauth_token:req.oauth_token,&#xA;      host : req.headers['host'],&#xA;      ip: req.ip&#xA;    },&#xA;    schema,&#xA;    graphiql: true,       &#xA;})));&#xA;</code></pre>&#xA;&#xA;<p>I am accessing it in schema file through resolver. Like:</p>&#xA;&#xA;<pre><code>resolve: (parent, args, context, resolveInfo) =&gt; {&#xA;        host = context.host;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here I can fetch hostname. But how could I use it in any file?</p>&#xA;",10505739,,10505739,2019-04-26 07:10:43,2019-04-26 07:23:39,How to set a server name or host name globally and use it in any file?,<node.js><express><graphql><graphql-js><express-graphql>,3,0,0,2019-04-26 06:52:11
55862694,2,,55862250,0,,<p>If the hostname is a static value and is something you have control of I would suggest to use the node environmental variables. There are 2 common ways to use it:&#xA; 1. command line&#xA; 2. .env file</p>&#xA;&#xA;<p>1) Simply indicate the name of the variable following by equal sign and then the value itself. After that start your node server</p>&#xA;&#xA;<pre><code>HOST=localhost node server.js&#xA;</code></pre>&#xA;&#xA;<p>And then you can use it in your app like so:</p>&#xA;&#xA;<pre><code>// server.js&#xA;const host = process.env.HOST;&#xA;</code></pre>&#xA;&#xA;<p>2) Create a .env file in the root of your app and set the variables there:</p>&#xA;&#xA;<pre><code>HOST=localhost&#xA;PORT=8080&#xA;API_KEY=123123&#xA;</code></pre>&#xA;&#xA;<p>I would personally prefer the second one as you just set it up once and no need to type it in the console every time you start the server. Just don't forget to include it in your <code>.gitignore</code> as your history will have references to your secrets then</p>&#xA;,11410423,,,,2019-04-26 07:23:39,"",,0,5,0,2019-04-26 07:23:39
55867857,1,,,5,1614,"<p>I am using a custom NextJS server with Apollo Client. I want to fetch the GraphQL data server-side and then send it to the client. I was kind of able to do that, but the client-side fetches it again. I understand that the Apollo cache is available only on the server, then needs to be sent to the client and restored from there.</p>&#xA;&#xA;<p>The <a href=""https://www.apollographql.com/docs/react/features/server-side-rendering"" rel=""noreferrer"">Apollo docs</a> mention SSR but I don't want to fully render my app using the Apollo client, I want to use NextJS, I want to get just the data from the Apollo client and manually inject it into the HTML to restore it on the client. I looked at some examples for NextJS using Apollo, but none of them showed how to do exactly that.</p>&#xA;&#xA;<p>This is my custom handler for requests: </p>&#xA;&#xA;<pre><code>const app = next({ dev: process.env.NODE_ENV !== 'production' });&#xA;&#xA;const customHandler = async (req, res) =&gt; {&#xA;  const rendered = await app.renderToHTML(req, res, req.path, req.query);&#xA;  // somehow get the data from the apollo cache and inject it in the rendered html&#xA;  res.send(rendered);&#xA;}&#xA;</code></pre>&#xA;",11408882,,,,2020-05-22 16:14:37,How to hydrate Apollo client from NextJS server,<javascript><reactjs><apollo><react-apollo><next.js>,1,0,0,2019-04-26 12:39:21
55885337,1,55886620,,22,7579,"<p>I'm building a site with Nuxt/Vue, and it's using a GraphQL backend API. We access this using the Apollo module for Nuxt.</p>&#xA;<p>In a page component, you can do this (I think this is called a Smart Query, but I'm not sure):</p>&#xA;<pre class=""lang-js prettyprint-override""><code>apollo: {&#xA;  pages: {&#xA;    query: pagesQuery,&#xA;      update(data) {&#xA;        return _get(data, &quot;pageBy&quot;, {});&#xA;      }&#xA;    },&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But you can also do the query like this I think, using the Nuxt asyncData hook:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>asyncData(context) {&#xA;  let client = context.app.apolloProvider.defaultClient;&#xA;  client.query({query, variables})&#xA;        .then(({ data }) =&gt; {&#xA;          // do what you want with data&#xA;        });&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I'm not sure what the difference is between these two ways, and which is better. Does anyone know? I couldn't find an explanation in the docs anywhere.</p>&#xA;",503546,,8172439,2021-10-09 23:30:58,2021-10-09 23:30:58,"""Default Apollo Queries"" VS ""AsyncData"" (Nuxt.js)",<vue.js><async-await><graphql><nuxt.js><vue-apollo>,1,1,0,2019-04-27 22:17:17
55929794,2,,55924111,0,,"<p>Welcome to StackOverflow.</p>&#xA;&#xA;<p>This problem is occurring because you are trying to execute frontend code meant for the browser with <code>node</code>.</p>&#xA;&#xA;<p>This does not work as you can see with this example:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/IF1h8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IF1h8.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>The code is meant to be <em>served</em> by your server and <em>executed</em> in a browser.</p>&#xA;&#xA;<p>For the second error, it seems that you are using CRA in the <code>client</code> directory, which has it's own <code>package.json</code>. So you should just be able to <code>npm install --prefix client</code> from the root directory to install the dependencies in the <code>client</code> folder.</p>&#xA;",2921244,,2921244,2019-05-01 22:35:22,2019-05-01 22:35:22,"",,0,5,0,2019-04-30 23:14:40
55961762,1,,,2,663,"<p>I'm using Relay with CRA in an Electron container, and I'm getting a very odd error I can't seem to diagnose: it appears the GraphQL fragment, as imported, contains Webpack artifacts?</p>&#xA;&#xA;<pre><code>Could not create Relay Container for `UsersGrid`. Expected a set of GraphQL fragments, got `function () {&#xA;  const node = __webpack_require__(/*! ./__generated__/UsersGrid_viewer.graphql */ ""./src/components/users-grid/__generated__/UsersGrid_viewer.graphql.js"");&#xA;</code></pre>&#xA;&#xA;<p>Is Webpack compiling the <code>.graphql.js</code> file somehow?  Or is there something else I should be looking at?</p>&#xA;&#xA;<p>This is the Relay container:</p>&#xA;&#xA;<pre><code>import { createFragmentContainer, graphql } from 'react-relay';&#xA;import UsersGrid from './UsersGrid';&#xA;&#xA;export default createFragmentContainer(&#xA;  UsersGrid,&#xA;  graphql`&#xA;    fragment UsersGrid_viewer on Query {&#xA;      user(login: ""jvcjunior"") {&#xA;        followers(first: 10) {&#xA;          edges {&#xA;            node {&#xA;              name&#xA;              avatarUrl&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  `&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>which is getting compiled inline into:</p>&#xA;&#xA;<pre><code>/***/ ""./src/components/users-grid/UsersGrid.relay.js"":&#xA;/*!******************************************************!*\&#xA;  !*** ./src/components/users-grid/UsersGrid.relay.js ***!&#xA;  \******************************************************/&#xA;/*! exports provided: default */&#xA;/***/ (function(module, __webpack_exports__, __webpack_require__) {&#xA;&#xA;""use strict"";&#xA;__webpack_require__.r(__webpack_exports__);&#xA;/* harmony import */ var react_relay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-relay */ ""./node_modules/react-relay/index.js"");&#xA;/* harmony import */ var react_relay__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_relay__WEBPACK_IMPORTED_MODULE_0__);&#xA;/* harmony import */ var _UsersGrid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./UsersGrid */ ""./src/components/users-grid/UsersGrid.js"");&#xA;&#xA;&#xA;/* harmony default export */ __webpack_exports__[""default""] = (Object(react_relay__WEBPACK_IMPORTED_MODULE_0__[""createFragmentContainer""])(_UsersGrid__WEBPACK_IMPORTED_MODULE_1__[""default""], function () {&#xA;  const node = __webpack_require__(/*! ./__generated__/UsersGrid_viewer.graphql */ ""./src/components/users-grid/__generated__/UsersGrid_viewer.graphql.js"");&#xA;&#xA;  if (node.hash &amp;&amp; node.hash !== ""d730274a63d8021d6427a27e7c3e2c27"") {&#xA;    console.error(""The definition of 'UsersGrid_viewer' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."");&#xA;  }&#xA;&#xA;  return __webpack_require__(/*! ./__generated__/UsersGrid_viewer.graphql */ ""./src/components/users-grid/__generated__/UsersGrid_viewer.graphql.js"");&#xA;}));&#xA;&#xA;/***/ }),&#xA;</code></pre>&#xA;",600990,,,,2019-05-03 07:16:22,Could not create Relay Container; graphql.js file appears to have webpack artifacts?,<webpack><electron><graphql><relay>,1,2,0,2019-05-03 00:16:46
56025605,2,,56020127,0,,"<p>You can create a query on the AppSync console, monitor it through the developers tools and then continue with the steps described in this <a href=""https://stackoverflow.com/a/42523727/4692302"">answer</a>. In this way you can see which headers are required and how are they provided.</p>&#xA;",4692302,,,,2019-05-07 15:09:07,"",,0,1,0,2019-05-07 15:09:07
56071725,1,,,2,353,"<p>I am new with graphql.</p>&#xA;&#xA;<p>Visited the site <a href=""https://graphql.org/swapi-graphql/"" rel=""nofollow noreferrer"">https://graphql.org/swapi-graphql/</a> and sent a simple query like so </p>&#xA;&#xA;<pre><code>query {&#xA;    allPeople {&#xA;      people{&#xA;        name&#xA;        birthYear&#xA;      }&#xA;    }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>and got the response like </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""allPeople"": {&#xA;      ""people"": [&#xA;        {&#xA;          ""name"": ""Luke Skywalker"",&#xA;          ""birthYear"": ""19BBY""&#xA;        },&#xA;        {&#xA;          ""name"": ""C-3PO"",&#xA;          ""birthYear"": ""112BBY""&#xA;        }......so on&#xA;        ]&#xA;      }&#xA;   } &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now I have downloaded graphql desktop clients applications like <a href=""https://insomnia.rest/graphql/"" rel=""nofollow noreferrer"">insomnia</a> and <a href=""https://electronjs.org/apps/graphiql"" rel=""nofollow noreferrer"">graphiql</a> </p>&#xA;&#xA;<p>I am trying to run the above same query with insomnia and graphiql desktop apps and so far could not succeed. With Insomnia I get </p>&#xA;&#xA;<pre><code>403 ERROR&#xA;The request could not be satisfied.&#xA;This distribution is not configured to allow the HTTP request method that was used for this request. The distribution supports only cachable requests. &#xA;Generated by cloudfront (CloudFront)&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/T7MLR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/T7MLR.png"" alt=""insomnia 403 error for swapi-graphql""></a></p>&#xA;&#xA;<p>While with graphiql desktop app, there seems to be some similar error where the loader is running non stop. </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/JhtNO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/JhtNO.png"" alt=""graphiql problem for swapi-graphql""></a></p>&#xA;&#xA;<p>So what am I missing, why is the desktop clients not able to connect to the start war api(<a href=""https://graphql.org/swapi-graphql"" rel=""nofollow noreferrer"">https://graphql.org/swapi-graphql</a>) while the google chrome browser is working property. Google chrome is also a client right?</p>&#xA;&#xA;<p>Am I missing something when it comes to desktop app clients?</p>&#xA;",1977871,,,,2019-05-10 06:29:35,GraphQl and insomnia desktop clients not working with graphql.org/swapi-graphql,<graphql><graphiql><insomnia>,1,0,0,2019-05-10 06:13:16
56079440,2,,45253671,1,,"<p>What i understand by your requirement is that if you have the following code</p>&#xA;&#xA;<pre><code>const user = {&#xA;    name:""Rohit"", &#xA;    age:27, &#xA;    marks: [10,15], &#xA;    subjects:[&#xA;        {name:""maths""},&#xA;        {name:""science""}&#xA;    ]&#xA;};&#xA;&#xA;const query = `mutation {&#xA;        createUser(user:${user}) {&#xA;            name&#xA;        }&#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>you must be getting something like </p>&#xA;&#xA;<pre><code>""mutation {&#xA;        createUser(user:[object Object]) {&#xA;            name&#xA;        }&#xA;}""&#xA;</code></pre>&#xA;&#xA;<p>instead of the expected </p>&#xA;&#xA;<pre><code>""mutation {&#xA;        createUser(user:{&#xA;            name: ""Rohit"" ,&#xA;            age: 27 ,&#xA;            marks: [10 ,15 ] ,&#xA;            subjects: [&#xA;                {name: ""maths"" } ,&#xA;                {name: ""science"" } &#xA;                ] &#xA;            }) {&#xA;            name&#xA;        }&#xA;}""&#xA;</code></pre>&#xA;&#xA;<p>If this is what you wanted to achieve, then <a href=""https://github.com/crohit92/gqlast"" rel=""nofollow noreferrer"">gqlast</a> is a nice tag function which you can use to get the expected result</p>&#xA;&#xA;<p>Simply grab the js file from <a href=""https://github.com/crohit92/gqlast"" rel=""nofollow noreferrer"">here</a> and use it as: </p>&#xA;&#xA;<pre><code>const user = {&#xA;    name:""Rohit"", &#xA;    age:27, &#xA;    marks: [10,15], &#xA;    subjects:[&#xA;        {name:""maths""},&#xA;        {name:""science""}&#xA;    ]&#xA;};&#xA;&#xA;const query = gqlast`mutation {&#xA;        createUser(user:${user}) {&#xA;            name&#xA;        }&#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>The result stored in the variable <code>query</code> will be :</p>&#xA;&#xA;<pre><code>""mutation {&#xA;        createUser(user:{&#xA;            name: ""Rohit"" ,&#xA;            age: 27 ,&#xA;            marks: [10 ,15 ] ,&#xA;            subjects: [&#xA;                {name: ""maths"" } ,&#xA;                {name: ""science"" } &#xA;                ] &#xA;            }) {&#xA;            name&#xA;        }&#xA;}""&#xA;</code></pre>&#xA;",2459314,,2459314,2019-05-10 18:13:25,2019-05-10 18:13:25,"",,0,1,0,2019-05-10 14:13:49
56080137,1,,,3,5275,"<p>I am working on an app using a React frontend and Express backend, with GraphQL setup through Apollo (I am following and modifying tutorial <a href=""https://www.youtube.com/playlist?list=PLN3n1USn4xlkdRlq3VZ1sT6SGW0-yajjL"" rel=""nofollow noreferrer"">https://www.youtube.com/playlist?list=PLN3n1USn4xlkdRlq3VZ1sT6SGW0-yajjL</a>)</p>&#xA;&#xA;<p>I am currently attempting deployment, and am doing so with Heroku. Everything functions perfectly on my local machine before deployment and on Heroku in Google Chrome. However, I get the aforementioned errors in Safari and Firefox, respectively. Wondering why this is happening in these browsers and how to fix. </p>&#xA;&#xA;<p>I have spent about 10 hrs doing research on this. Things I tried that made no difference:</p>&#xA;&#xA;<ul>&#xA;<li>I tried adding CORS to my express backend </li>&#xA;<li>I tried serving the graphql endpoint as HTTPS</li>&#xA;<li>Moving app.use(express.static) in main app.js server file</li>&#xA;</ul>&#xA;&#xA;<p>I couldn't find many other things to try. Everywhere I looked seemed to say that CORS fixed the problem, but mine persists.</p>&#xA;&#xA;<p>Github link: <a href=""https://github.com/LucaProvencal/thedrumroom"" rel=""nofollow noreferrer"">https://github.com/LucaProvencal/thedrumroom</a>&#xA;Live Heroku App: <a href=""https://powerful-shore-83650.herokuapp.com/"" rel=""nofollow noreferrer"">https://powerful-shore-83650.herokuapp.com/</a></p>&#xA;&#xA;<p>App.js (express backend):</p>&#xA;&#xA;<pre><code>const cors = require('cors')&#xA;// const fs = require('fs')&#xA;// const https = require('https')&#xA;// const http = require('http')&#xA;&#xA;app.use(express.static(path.join(__dirname, 'client/build')));&#xA;app.use(cors('*')); //NEXT TRY app.use(cors('/login')) etc...&#xA;app.use(cors('/*'));&#xA;app.use(cors('/'));&#xA;app.use(cors('/register'));&#xA;app.use(cors('/login'));&#xA;</code></pre>&#xA;&#xA;<pre><code>app.get('/login', (req, res) =&gt; {&#xA;    res.sendFile(path.join(__dirname, ""client"", ""build"", ""index.html""));&#xA;});&#xA;&#xA;&#xA;app.get('/register', (req, res) =&gt; {&#xA;    res.sendFile(path.join(__dirname, ""client"", ""build"", ""index.html""));&#xA;});&#xA;&#xA;&#xA;server.applyMiddleware({ app }); // app is from the existing express app. allows apollo server to run on same listen command as app&#xA;&#xA;const portVar = (process.env.PORT || 3001) // portVar cuz idk if it will screw with down low here im tired of dis&#xA;&#xA;models.sequelize.sync(/*{ force: true }*/).then(() =&gt; { // syncs sequelize models to postgres, then since async call starts the server after&#xA;    app.listen({ port: portVar }, () =&gt;&#xA;      console.log(` ApolloServer ready at http://localhost:3001${server.graphqlPath}`)&#xA;    )&#xA;    app.on('error', onError);&#xA;    app.on('listening', onListening);&#xA;});&#xA;&#xA;&#xA;app.use(bodyParser.json());&#xA;app.use(bodyParser.urlencoded({ extended: true }));&#xA;&#xA;app.use(function(req, res, next) {&#xA;  res.header(""Access-Control-Allow-Origin"", ""*"");&#xA;  res.header(""Access-Control-Allow-Headers"", ""Origin, X-Requested-With, Content-Type, Accept"");&#xA;  next();&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Full file is on Github, I tried to post only relevant parts above.</p>&#xA;&#xA;<p>The expected result is that it works in all browsers. It seems from my research that since Heroku serves on HTTPS, Safari and Firefox do not allow requests to HTTP (which is where the graphql server is located, <a href=""http://localhost:3001/graphql"" rel=""nofollow noreferrer"">http://localhost:3001/graphql</a>'). When I tried serving Apollo on HTTPS, Heroku just crashed, giving me H13 and 503 errors.</p>&#xA;&#xA;<p>Thanks for any help...</p>&#xA;",6472717,,,,2021-06-13 18:44:16,"""Not allowed to request resource"" in Safari and ""Blocked loading mixed active content"" in Firefox. Perfect functionality in Chrome",<heroku><apollo><react-apollo><apollo-server><express-graphql>,2,0,0,2019-05-10 14:55:53
56082914,2,,40697597,2,,"<p>What i understand by your requirement is that if you have the following code</p>&#xA;&#xA;<pre><code>const user = {&#xA;    name:""Rohit"", &#xA;    age:27, &#xA;    marks: [10,15], &#xA;    subjects:[&#xA;        {name:""maths""},&#xA;        {name:""science""}&#xA;    ]&#xA;};&#xA;&#xA;const query = `mutation {&#xA;        createUser(user:${user}) {&#xA;            name&#xA;        }&#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>you must be getting something like </p>&#xA;&#xA;<pre><code>""mutation {&#xA;        createUser(user:[object Object]) {&#xA;            name&#xA;        }&#xA;}""&#xA;</code></pre>&#xA;&#xA;<p>instead of the expected </p>&#xA;&#xA;<pre><code>""mutation {&#xA;        createUser(user:{&#xA;            name: ""Rohit"" ,&#xA;            age: 27 ,&#xA;            marks: [10 ,15 ] ,&#xA;            subjects: [&#xA;                {name: ""maths"" } ,&#xA;                {name: ""science"" } &#xA;                ] &#xA;            }) {&#xA;            name&#xA;        }&#xA;}""&#xA;</code></pre>&#xA;&#xA;<p>If this is what you wanted to achieve, then <a href=""https://github.com/crohit92/gqlast"" rel=""nofollow noreferrer"">gqlast</a> is a nice tag function which you can use to get the expected result</p>&#xA;&#xA;<p>Simply grab the js file from <a href=""https://github.com/crohit92/gqlast"" rel=""nofollow noreferrer"">here</a> and use it as: </p>&#xA;&#xA;<pre><code>const user = {&#xA;    name:""Rohit"", &#xA;    age:27, &#xA;    marks: [10,15], &#xA;    subjects:[&#xA;        {name:""maths""},&#xA;        {name:""science""}&#xA;    ]&#xA;};&#xA;&#xA;const query = gqlast`mutation {&#xA;        createUser(user:${user}) {&#xA;            name&#xA;        }&#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>The result stored in the variable <code>query</code> will be :</p>&#xA;&#xA;<pre><code>""mutation {&#xA;        createUser(user:{&#xA;            name: ""Rohit"" ,&#xA;            age: 27 ,&#xA;            marks: [10 ,15 ] ,&#xA;            subjects: [&#xA;                {name: ""maths"" } ,&#xA;                {name: ""science"" } &#xA;                ] &#xA;            }) {&#xA;            name&#xA;        }&#xA;}""&#xA;</code></pre>&#xA;",2459314,,,,2019-05-10 18:17:09,"",,0,0,0,2019-05-10 18:17:09
56086735,2,,56080137,2,,"<p>Was going to delete this because it is such a silly problem but maybe it will help someone in the future:</p>&#xA;&#xA;<p>I simply replaced all of my <code>'http://localhost:PORT'</code> endpoints in development with <code>'/graphql'</code>. I assumed that localhost meant local the machine running the code. But an app running on Heroku does not point to localhost. The express server is served on the url (<a href=""https://powerful-shore-83650.herokuapp.com/"" rel=""nofollow noreferrer"">https://powerful-shore-83650.herokuapp.com/</a>) in our case...</p>&#xA;&#xA;<p>At any rate I am so glad I came to a solution. I have a full stack app deployed and connected to a db. Hopefully this post can save someone lots of time. </p>&#xA;",6472717,,,,2019-05-11 02:39:00,"",,0,4,0,2019-05-11 02:39:00
56089623,2,,56088305,1,,"<p>This behavior has not changed in version 2. Apollo Server produces spec-compliant responses and does not <strong>not</strong> wrap any resulting errors in an <code>error</code> object. Instead, this is just <a href=""https://github.com/prisma/graphql-playground/issues/898"" rel=""nofollow noreferrer"">a known bug</a> with GraphQL Playground. With version 2.0, Apollo Server transition from GraphiQL to GraphQL Playground. GraphiQL did not have this same issue, which is why this looks like a bug with Apollo Server. Check the network tab and look at the actual response from your server -- it's actually in the expected format.</p>&#xA;",6024220,,,,2019-05-11 10:54:34,"",,0,1,0,2019-05-11 10:54:34
56122869,2,,56083422,4,,"<p>I solved this issue in 2 places</p>&#xA;&#xA;<ol>&#xA;<li>ApolloServer.installSubscriptionHandler() <strong>TEMPORARILY</strong> replacing middleware.apolloSubscriptions() . I configure the subscriptions middleware following this guide: <a href=""https://www.apollographql.com/docs/graphql-subscriptions/express"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/graphql-subscriptions/express</a> so I'm going to guess there's something messed up w/ the version of one of those packages or the guide itself.</li>&#xA;</ol>&#xA;&#xA;<pre><code>&#xA;    ApolloServer.installSubscriptionHandlers(ws)&#xA;&#xA;    const listener = ws.listen({port: config.PORT}, () =&gt; {&#xA;      middleware.apolloSubscriptions(ws)&#xA;      // middleware.apolloSubscriptions(ws)&#xA;</code></pre>&#xA;&#xA;<ol start=""2"">&#xA;<li>terminatingLink and getMainDefinition are necessary for the client&#xA;<a href=""https://github.com/TGRstack/tgr-apollo-subscription-example-microservice/commit/75b6165f2dc1d035a41f1129f7386a1e18c7ba53#diff-2c47ef33b8ed0e4c893cbc161bcf7814R37"" rel=""nofollow noreferrer"">https://github.com/TGRstack/tgr-apollo-subscription-example-microservice/commit/75b6165f2dc1d035a41f1129f7386a1e18c7ba53#diff-2c47ef33b8ed0e4c893cbc161bcf7814R37</a></li>&#xA;</ol>&#xA;&#xA;<pre><code>  private _terminatingLink = split(&#xA;    ({ query }) =&gt; {&#xA;      const { kind, operation } = getMainDefinition(query)&#xA;      return (&#xA;        kind === 'OperationDefinition' &amp;&amp; operation === 'subscription'&#xA;      )&#xA;    },&#xA;    this._wsLink,&#xA;    this._httpLink,&#xA;  )&#xA;</code></pre>&#xA;",604950,,604950,2019-05-20 21:34:40,2019-05-20 21:34:40,"",,0,0,0,2019-05-14 04:07:49
56188529,2,,56176752,7,,"<p>The answer is NO</p>&#xA;&#xA;<p>If you use Apollo with Next JS you will not have to use <code>getInitialProps</code> on each page to get some initial data rendered server side. The following configuration for <code>getInitialProps</code> is enough for all the components to render out with their respective queries if they have <code>&lt;Query&gt;</code> components in them</p>&#xA;&#xA;<pre><code>static async getInitialProps({ Component, ctx }) {&#xA;    let pageProps = {};&#xA;    if (Component.getInitialProps) {&#xA;      pageProps = await Component.getInitialProps(ctx)&#xA;    }&#xA;    // this exposes the query to the user&#xA;    pageProps.query = ctx.query;&#xA;    return { pageProps };&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>My issue and why I wasnt seeing any server side rendering is that Heroku or Now wouldnt perform SSR with a public URL ie my-app.heroku.com. To resolve this I purchased and applied a custom URL in Heroku and it worked. Along with a custom URL I had the following configuration in my Apollo config</p>&#xA;&#xA;<pre><code>  const request = (operation) =&gt; {&#xA;    operation.setContext({&#xA;      fetchOptions: {&#xA;        credentials: 'include'&#xA;      },&#xA;      headers: { cookie: headers.cookie }&#xA;    });&#xA;  }; &#xA;</code></pre>&#xA;&#xA;<p>This completely resolved it and now I have SSR without the pain of having to manually set <code>getInitialProps</code> on each page</p>&#xA;&#xA;<p>Hope this helps someone</p>&#xA;",3955685,,2628378,2019-12-18 17:26:17,2019-12-18 17:26:17,"",,0,0,0,2019-05-17 14:30:14
56196119,1,,,0,139,"<p><strong>Disclaimer:</strong> I saw many other questions on SO which sound the same. But no, this question and its context, everything is different. NOT DUPLICATE.</p>&#xA;&#xA;<p>Hey, I have setup everything as per&#xA;<a href=""https://github.com/zeit/next.js/tree/canary/examples/with-apollo"" rel=""nofollow noreferrer"">https://github.com/zeit/next.js/tree/canary/examples/with-apollo</a>.</p>&#xA;&#xA;<p>Everything works well except cookies. Earlier in CSR implementation, my <code>withData.js</code> looked like this </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import withApollo from 'next-with-apollo'&#xA;import ApolloClient from 'apollo-boost'&#xA;function createClient({ headers }) {&#xA;&#xA;  return new ApolloClient({&#xA;    uri: `${process.env.ENDPOINT}/graphql`,&#xA;    request: operation =&gt; {&#xA;      operation.setContext({&#xA;        fetchOptions: {&#xA;          credentials: 'include',&#xA;        },&#xA;        headers&#xA;      })&#xA;    }&#xA;  })&#xA;&#xA;}&#xA;&#xA;export default withApollo(createClient)&#xA;</code></pre>&#xA;&#xA;<p>In the above example, cookies worked due to the <code>request</code> function.</p>&#xA;&#xA;<p>But in the SSR implementation as per Next.js example, cookies don't work. Please help.&#xA;I need to integrate <code>next-with-apollo</code> with <code>react-apollo</code> SSR.</p>&#xA;",9506017,,,,2020-01-31 12:23:54,react-apollo Server Side Rendering,<javascript><reactjs><apollo><react-apollo><next.js>,1,0,0,2019-05-18 05:02:13
56201395,2,,56101668,1,,"<p>If you expect all api requests to be bundled into app and not made anymore, thats not how nuxt currently work. It still will do requests to the api`s on client navigation withing app.</p>&#xA;&#xA;<p>There is a plan for making full static mode in nuxt, you can track it here <a href=""https://github.com/nuxt/rfcs/issues/22"" rel=""nofollow noreferrer"">https://github.com/nuxt/rfcs/issues/22</a></p>&#xA;",239354,,,,2019-05-18 17:42:18,"",,0,0,0,2019-05-18 17:42:18
56249802,2,,55091231,1,,"<p>In <code>Table.js</code>, it seems you mixed up the syntax for importing:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const environment = import('../../environment.js'); // Wrong&#xA;&#xA;const environment = require('../../environment.js'); // OK&#xA;import environment from '../../environment.js'; // OK&#xA;</code></pre>&#xA;&#xA;<p>Using <code>import('../../environment.js')</code> makes it a dynamic import which returns a Promise (depending on your bundler config) and is unlikely what you want.</p>&#xA;",1751946,,,,2019-05-22 05:23:54,"",,0,0,0,2019-05-22 05:23:54
56266481,1,,,1,564,"<p>I want to make my <strong>Nuxt.js with apollo-client</strong> to connect to my <strong>internal Apollo-Server</strong> on <strong>Kubernetes</strong>.</p>&#xA;&#xA;<p>My nuxtjs with apollo-client app is exposed via <strong>Traefik</strong> Ingress and when i set my apollo-client URL to the <code>&lt;service&gt;.&lt;namespace&gt;</code> to point to my internal apollo-client i get the following error message on Chrome Console: </p>&#xA;&#xA;<pre><code>net::ERR_NAME_NOT_RESOLVED &#xA;</code></pre>&#xA;&#xA;<p>My Apollo Server is running on port <strong>6666</strong> but my <strong>Service runs on port 443 and targets port 6666</strong></p>&#xA;&#xA;<p><strong>Apollo Config:</strong> </p>&#xA;&#xA;<pre><code>import { HttpLink } from 'apollo-link-http'&#xA;import { InMemoryCache } from 'apollo-cache-inmemory'&#xA;&#xA;// Replace this with your project's endpoint&#xA;const GRAPHCMS_API = process.env.API&#xA;&#xA;export default () =&gt; ({&#xA;  link: new HttpLink({ uri: GRAPHCMS_API }),&#xA;  cache: new InMemoryCache(),&#xA;  defaultHttpLink: false&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>My <strong>API variable:</strong></p>&#xA;&#xA;<pre><code>  API: ""https://service.namespace.svc.cluster.local:443/gql"",&#xA;</code></pre>&#xA;",8625607,,8625607,2019-05-23 00:23:29,2019-06-11 10:48:19,How to access an Apollo Server Internal Kubernetes Service from my Web apollo-client exposed application with Traefik,<kubernetes><apollo><traefik><apollo-client><apollo-server>,1,1,0,2019-05-23 00:07:18
56267530,1,56394711,,0,579,"<p>I am connecting the postgresql with loopback 4 and call the API on frontend using axios + restful and it was sucessfully done.</p>&#xA;&#xA;<p>But when I tried to connect postgresql with loopback 4 and call the API on frontend using axios + graphql, it gives these 3 errors on browser's console:  </p>&#xA;&#xA;<ul>&#xA;<li><p>OPTIONS <a href=""http://localhost:3001/graphql"" rel=""nofollow noreferrer"">http://localhost:3001/graphql</a> 405 (Method Not Allowed)</p></li>&#xA;<li><p>Access to XMLHttpRequest at '<a href=""http://localhost:3001/graphql"" rel=""nofollow noreferrer"">http://localhost:3001/graphql</a>' from origin '<a href=""http://localhost:8081"" rel=""nofollow noreferrer"">http://localhost:8081</a>' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.</p></li>&#xA;<li>Error: Network Error&#xA;at createError (createError.js?2d83:16)&#xA;at XMLHttpRequest.handleError (xhr.js?b50d:87)</li>&#xA;</ul>&#xA;&#xA;<p>I tried to search and read on googles, but most of them are not using loopback.</p>&#xA;&#xA;<p>I followed this tutorial,</p>&#xA;&#xA;<ol>&#xA;<li><a href=""https://v4.loopback.io/getting-started-oasgraph.html"" rel=""nofollow noreferrer"">https://v4.loopback.io/getting-started-oasgraph.html</a></li>&#xA;<li><a href=""https://www.thepolyglotdeveloper.com/2019/01/query-graphql-api-vuejs-axios/"" rel=""nofollow noreferrer"">https://www.thepolyglotdeveloper.com/2019/01/query-graphql-api-vuejs-axios/</a></li>&#xA;</ol>&#xA;&#xA;<p>But still not resolved.</p>&#xA;&#xA;<p>Here is my source code modification, Home.vue.</p>&#xA;&#xA;<pre><code>&lt;template&gt;&#xA;    &lt;div&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/template&gt;&#xA;&#xA;&lt;script&gt;&#xA;    import axios from ""axios"";&#xA;    export default {&#xA;        name: ""HelloWorld"",&#xA;        async mounted() {&#xA;            try {&#xA;                var result = await axios({&#xA;                    method: ""POST"",&#xA;                    url: ""http://localhost:3001/graphql"",&#xA;                    data: {&#xA;                        query: `&#xA;                            {&#xA;                                organizations {&#xA;                                  organizationId&#xA;                                  organizationName&#xA;                                }&#xA;                            }&#xA;                        `&#xA;                    }&#xA;                });&#xA;                console.log(""kk"", result);&#xA;&#xA;            } catch (error) {&#xA;                console.error(error);&#xA;            }&#xA;        }&#xA;    }&#xA;&lt;/script&gt;&#xA;&#xA;&lt;style scoped&gt;&lt;/style&gt;&#xA;</code></pre>&#xA;&#xA;<p>I expect the output inside console should be the API content. Is there any additional settings which I missed out?</p>&#xA;",4725553,,4725553,2019-05-23 03:45:05,2019-05-31 11:59:30,How to fix using loopback 4 (translate rest to graphql) : OPTIONS http://localhost:3001/graphql 405 (Method Not Allowed),<postgresql><vue.js><graphql><loopback><openapi>,1,0,0,2019-05-23 03:03:57
56269655,2,,56269274,5,,"<p>It is a port issue, port <code>6000</code> is one of the ports not consider safe for most browsers, even though you can curl it on the terminal. For example this should work:</p>&#xA;&#xA;<pre><code>curl -X POST http://localhost:6000/graphql \&#xA;-H ""Content-Type: application/json"" \&#xA;-d '{""query"": ""{ books { title } }""}'&#xA;</code></pre>&#xA;&#xA;<p>But running it on the browser should not, as the port is restricted.&#xA;You can see the list of restricted ports on <a href=""https://chromium.googlesource.com/chromium/src.git/+/refs/heads/master/net/base/port_util.cc"" rel=""noreferrer"">Chrome</a> and <a href=""https://www-archive.mozilla.org/projects/netlib/PortBanning.html#portlist"" rel=""noreferrer"">Firefox</a>, other browser should also follow this rules.</p>&#xA;&#xA;<p>If you change your port to 4000 (for example, or any other unrestricted port) everything should work fine.</p>&#xA;",3708153,,,,2019-05-23 06:58:44,"",,0,0,0,2019-05-23 06:58:44
56281463,2,,56226609,0,,"<p>@CopsOnRoad resolved the initial question - for <code>undefined location</code>, you need to make sure the server is running and accessible from the environment you're running in.</p>&#xA;&#xA;<p>See <a href=""https://github.com/zino-app/graphql-flutter/issues/212"" rel=""nofollow noreferrer"">this issue</a> for help troubleshooting</p>&#xA;",2234013,,,,2019-05-23 19:01:25,"",,0,0,0,2019-05-23 19:01:25
56285412,1,,,13,1096,"<p>I would like to save the GraphQL queries and query variables with the GraphQL playground.  I would like to avoid losing the queries when clearing browser cache and avoid copy and pasting to share.</p>&#xA;&#xA;<p>I have tried copy and pasting both the queries and query variables to a cloud file as a back up, which is at minimum two steps.  </p>&#xA;&#xA;<p>Is there a way to save these as query files so they can be backed up in source control?  </p>&#xA;&#xA;<p>Or to add a plugin that saves the queries for sharing with team members?</p>&#xA;",11450299,,,,2022-02-17 19:25:13,How best to save and share GraphQL Playground queries and query variables?,<graphql>,1,0,0,2019-05-24 03:18:24
56303511,1,,,7,2503,"<p>I am setting up the proxy server using setupProxy for my react app using graphql as backend which is running on a different part, doing so The HTTP link proxy is working fine but WebSocket link proxy is giving me an error</p>&#xA;&#xA;<p>For solving the problem I have tried to include options as ws: true, but it's not working.&#xA;The error is as follows:&#xA;SyntaxError: Failed to construct 'WebSocket': The URL '/ws' is invalid.</p>&#xA;&#xA;<p>Error: </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/etqU4.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/etqU4.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>setupProxy.js</p>&#xA;&#xA;<pre><code>const proxy = require(""http-proxy-middleware"");&#xA;&#xA;module.exports = function(app) {&#xA;  app.use(proxy(""/graphql"", { target: ""http://localhost:8001/graphql"" }));&#xA;  app.use(&#xA;    proxy(""/ws"", {&#xA;      target: ""ws://localhost:8001"",&#xA;      ws: true,&#xA;    })&#xA;  );&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>index.js </p>&#xA;&#xA;<pre><code>import { WebSocketLink } from ""apollo-link-ws"";&#xA;import { createUploadLink } from ""apollo-upload-client"";&#xA;//Apollo Imports End&#xA;&#xA;// Declaring constants for GraphQL&#xA;const httpLink = new createUploadLink({&#xA;  uri: ""/graphql""&#xA;});&#xA;&#xA;const wsLink = new WebSocketLink({&#xA;  uri: ""/ws"",&#xA;  options: {&#xA;    reconnect: true&#xA;  }&#xA;});&#xA;&#xA;</code></pre>&#xA;&#xA;<p>I expected the call should be same as normal call but its throwing an error.</p>&#xA;",8144595,,6296561,2019-05-25 10:37:43,2020-03-09 19:22:50,React js - problem with proxy for web socket link in react,<node.js><reactjs><graphql><create-react-app><react-apollo>,3,3,0,2019-05-25 09:26:10
56318066,2,,56318046,0,,"<p>It turns out that I needed to add the following to package.json:</p>&#xA;&#xA;<pre><code>    ""scripts"": {&#xA;        ""start"": ""app.js"",&#xA;        ...&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>And I needed to install packages listed in the heroku logs --tail, but I have had those errors before. Writing the script start key into the package.json file is for when you are deploying your server independently of your react (or client) side.</p>&#xA;",11384657,,,,2019-05-26 23:11:58,"",,0,0,0,2019-05-26 23:11:58
56328551,2,,56309234,1,,"<p>I was also looking for such an implementation but couldn't find one.</p>&#xA;&#xA;<p>So I created a prototype for it: <a href=""https://github.com/Errorname/logical-object-match"" rel=""nofollow noreferrer"">https://github.com/Errorname/logical-object-match</a></p>&#xA;",10721492,,,,2019-05-27 15:05:44,"",,0,1,0,2019-05-27 15:05:44
56359492,2,,56357912,1,,"<p>The fix was just merged into master 6 days ago. You need to update to a later version, like <code>2.6.0-alpha.8</code>.</p>&#xA;",6024220,,,,2019-05-29 11:25:09,"",,0,1,0,2019-05-29 11:25:09
56388879,1,,,0,648,"<p>I have below code written in nodejs10. </p>&#xA;&#xA;<pre><code>const ApolloClient = require('apollo-boost');&#xA;&#xA;const client = new ApolloClient({&#xA;  uri: 'http://localhost:8000/graphql'&#xA;});&#xA;&#xA;</code></pre>&#xA;&#xA;<p>The error I got when running this program is:</p>&#xA;&#xA;<pre><code>const client = ApolloClient({&#xA;               ^&#xA;&#xA;TypeError: ApolloClient is not a function&#xA;</code></pre>&#xA;&#xA;<p>Below is the dependencies:</p>&#xA;&#xA;<pre><code>""apollo-boost"": ""^0.3.1"",&#xA;    ""apollo-cache-inmemory"": ""^1.6.0"",&#xA;    ""apollo-client"": ""^2.6.0"",&#xA;    ""apollo-link-http"": ""^1.5.14"",&#xA;    ""apollo-server"": ""^2.5.0"",&#xA;    ""apollo-server-express"": ""^2.5.1"",&#xA;</code></pre>&#xA;&#xA;<p>I followed the user guide to setup a apollo client to take to me server. But it failed at very beginning stage. I wonder what wrong with my code. Is there anything I missed?</p>&#xA;",5421539,,,,2020-02-02 15:41:51,How to initialise an instance of `ApolloClient` in nodejs?,<graphql><apollo><apollo-client>,2,0,0,2019-05-31 04:58:43
56391940,2,,56321467,11,,"<p>I'm a newbie at this. After hours of looking I finally tracked down the error in the file. On closer inspection, when the environment is production (process.env.NODE_ENV === ""production""), then the error is not detailed. So I looked at what the error would be if the environment was something else, and changed the file to output this to the console. What I got back was:</p>&#xA;&#xA;<pre><code>fetch is not found globally and no fetcher passed, to fix pass a fetch for&#xA;your environment like https://www.npmjs.com/package/node-fetch.&#xA;&#xA;For example:&#xA;import fetch from 'node-fetch';&#xA;import { createHttpLink } from 'apollo-link-http';&#xA;&#xA;const link = createHttpLink({ uri: '/graphql', fetch: fetch });&#xA;</code></pre>&#xA;&#xA;<p>I added fetch to my code, and it built a production version with no errors.</p>&#xA;&#xA;<p>I don't understand why this error was not thrown with the dev environment, but I guess it's something to do with the lazy loading.</p>&#xA;&#xA;<p>Problem fixed.</p>&#xA;",11560516,,,,2019-05-31 09:04:34,"",,0,1,0,2019-05-31 09:04:34
56412609,2,,56412111,1,,"<p>I found out the reason. This is a bug in current nexus release and is already being addressed. Please find the pull request link below</p>&#xA;&#xA;<p><a href=""https://github.com/prisma/nexus/pull/141"" rel=""nofollow noreferrer"">https://github.com/prisma/nexus/pull/141</a></p>&#xA;",8084074,,,,2019-06-02 06:10:33,"",,0,0,0,2019-06-02 06:10:33
56413661,2,,55552232,1,,"<p>this is fixed in version 6 <a href=""https://github.com/SimonCropp/GraphQL.EntityFramework/blob/master/doco/configuration.md#multiple-dbcontexts"" rel=""nofollow noreferrer"">https://github.com/SimonCropp/GraphQL.EntityFramework/blob/master/doco/configuration.md#multiple-dbcontexts</a></p>&#xA;&#xA;<p>Some extra text to get over the silly 30 char min</p>&#xA;",53158,,,,2019-06-02 09:07:32,"",,0,0,0,2019-06-02 09:07:32
56447577,2,,56446091,2,,<p>I was accessing the data incorrectly! Apparently I needed to see the <code>res.data.data.posts.edges[0]</code> </p>&#xA;,10848263,,,,2019-06-04 16:06:23,"",,0,3,0,2019-06-04 16:06:23
56455850,1,,,3,420,<p>I have a Hasure GraphQL engine installed through a droplet installation on Digital Ocean.</p>&#xA;&#xA;<p>Even though I gained root access to the droplet instance using ssh I can't connect to the instance inside Hasura droplet docker image.</p>&#xA;&#xA;<p>What are the list of commands to run to connect to postgres instance inside docker image??</p>&#xA;,10074536,,243392,2020-01-18 11:22:57,2020-01-18 11:22:57,using psql to connect to postgres instance on Hasura created in Digital Ocean droplet,<graphql><digital-ocean><hasura>,1,0,0,2019-06-05 07:21:47
56468593,1,56478478,,1,1335,"<p>What I'm trying to do is deploy react / apollo-server full stack app to heroku. Thus I' trying to serve static client files from express/apollo-server backend, like this: </p>&#xA;&#xA;<pre><code>const path = require('path');&#xA;&#xA;const express = require('express');&#xA;const app = express();&#xA;const cors = require('cors');&#xA;const { ApolloServer } = require('apollo-server');&#xA;&#xA;const { schema } = require('./schema');&#xA;const { resolvers } = require('./resolvers');&#xA;&#xA;app.use(cors());&#xA;&#xA;app.use(express.static('public'));&#xA;&#xA;app.get('*', (req, res) =&gt; {&#xA;  res.sendFile(path.resolve(__dirname, 'public', 'index.html'));&#xA;});&#xA;&#xA;const server = new ApolloServer({&#xA;  typeDefs: schema,&#xA;  resolvers,&#xA;});&#xA;&#xA;server.listen({ port: process.env.PORT || 4000 }).then(({ url }) =&gt; {&#xA;  console.log(`  Server ready at ${url}`);&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>For some reason I don't understand client is not served while deployed to heroku. On heroku URL I'm getting: <code>GET query missing.</code> If I set graphql to enabled in production I can see it, I can play with resolving data. But client is not rendered. I'm guseing app.get with * is not working and then index.html is not catched. </p>&#xA;&#xA;<p>How can I fix that?</p>&#xA;&#xA;<p>Thanks!</p>&#xA;",9223556,,9223556,2019-06-05 22:25:44,2022-05-25 21:11:35,Deploying react/apollo-server app onto Heroku,<reactjs><express><graphql><apollo><apollo-server>,1,0,0,2019-06-05 21:59:31
56471881,1,,,1,31,<p>I'm new to GraphQL. I'm currently using client-side defaults and the @client directive in my queries to fetch the data locally.&#xA;Is there a way to work in local state in development environment and to disable this mode in production? &#xA;As in conditionally adding the @client directive?</p>&#xA;,3152889,,,,2019-06-06 06:21:55,GraphQL: Add @client Directive Only In Local Development Mode,<javascript><graphql>,0,2,0,2019-06-06 06:21:55
56542021,2,,56266481,0,,"<p>Your Nuxt.js based web application needs to have access from outside to your Kubernetes' cluster workload: Apollo Server. This is because Nuxjs runs on client side (web browser), and it does not know anything about cluster internal DNS name ""service.namespace.svc.cluster.local"" given to backend service (Apollo Server) - these DNS names are resolvable only inside the cluster. </p>&#xA;&#xA;<p>You need to expose your Appolo Server on NodePort or LoadBalancer type service, as explained in official doc <a href=""https://kubernetes.io/docs/concepts/services-networking/service/#nodeport"" rel=""nofollow noreferrer"">here</a>. Yet another option is to expose your ""Apollo Server Internal Kubernetes Service"" via Ingress too with <a href=""https://kubernetes.github.io/ingress-nginx/user-guide/tls/"" rel=""nofollow noreferrer"">TLS/HTTPS</a>.</p>&#xA;",10347794,,,,2019-06-11 10:48:19,"",,0,0,0,2019-06-11 10:48:19
56545070,2,,52442334,0,,<p>Well it feels like. You need to do it on the backend.</p>&#xA;&#xA;<pre><code>query someQuery(justAnArg: Int) {&#xA;  someQuery {&#xA;    _justAnArg: $justAnArg&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This should do it.</p>&#xA;,11105020,,,,2019-06-11 13:39:10,"",,0,0,0,2019-06-11 13:39:10
56558513,1,56566299,,0,761,"<p><a href=""https://i.stack.imgur.com/qXcZM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qXcZM.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>So i am having trouble approaching a memory leak in my new web app. Of course it never showed up while developing locally. Every 18 hours, a Kubernetes pod running one web client will run out of memory and restart. I have considered these tools, but am not sure which one is best suited:</p>&#xA;&#xA;<pre><code>The Grinder &#xA;Gatling &#xA;Tsung &#xA;JMeter &#xA;Locust &#xA;</code></pre>&#xA;&#xA;<p>I want to test locally. The plan is to deploy one docker container and then bombard it with requests until it runs out of memory. That should hypothetically work. I have never done this before and am not sure about how to proceed.</p>&#xA;&#xA;<p>Help would be appreciated.</p>&#xA;&#xA;<p>I have a couple of guesses of where the problem is situated (probably ApolloClient in-memory caching...) but i need a way to reliably test it without deploying to master and waiting 18+ hours.</p>&#xA;&#xA;<p>If anyone needs more info, i will gladly provide it.</p>&#xA;",4874369,,,,2019-06-12 16:02:55,Finding a memory leak in ReactJS/NextJS/ApolloClient Web App,<reactjs><docker><kubernetes><memory-leaks><apollo-client>,1,0,0,2019-06-12 09:09:05
56566299,2,,56558513,2,,"<p>You can use Jmeter to bombard number of requests but you have to create script (covering all the application journeys) in Jmeter before doing that. Moreover, you should also know your user load and how many hits/per second your pod is getting because you have to use similar settings in Jmeter to replicate memory leak.&#xA;Apart from that, you would also require profiling tools such as jprofiler on the server end to understand which part of the code is causing memory leakage.</p>&#xA;",10333720,,,,2019-06-12 16:02:55,"",,0,5,0,2019-06-12 16:02:55
56568500,2,,56567937,12,,"<p>GraphQL documents (which typically have a <code>.gql</code> extension) can be imported directly if you use webpack and utilize the loader that comes with <code>graphql-tag</code>. Jest does not work with webpack out of the box and needs to be configured to handle any imports of asset files like stylesheets, images, etc. This process is outlined <a href=""https://jestjs.io/docs/en/webpack"" rel=""noreferrer"">in the docs</a>.</p>&#xA;&#xA;<p>According to the <code>graphql-tag</code> documentation:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Testing environments that don't support Webpack require additional configuration. For Jest use jest-transform-graphql.</p>&#xA;</blockquote>&#xA;&#xA;<p>So you can utilize <a href=""https://github.com/remind101/jest-transform-graphql"" rel=""noreferrer"">jest-transform-graphql</a> along with the <code>babel-jest</code> plugin, which you're probably already using:</p>&#xA;&#xA;<pre><code>""jest"": {&#xA;  ""transform"": {&#xA;    ""\\.(gql|graphql)$"": ""jest-transform-graphql"",&#xA;    "".*"": ""babel-jest""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Mocking the file is technically possible by adding the <code>moduleNameMapper</code> config option as shown in the docs, however, doing so is likely to break your components.</p>&#xA;",6024220,,6024220,2019-06-12 18:45:08,2019-06-12 18:45:08,"",,0,1,0,2019-06-12 18:39:03
56603815,2,,56455850,2,,"<p>Once you <code>ssh</code>ed into your Digital Ocean instance, list all running docker containers:</p>&#xA;&#xA;<pre class=""lang-sh prettyprint-override""><code>docker ps -a&#xA;CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                     NAMES&#xA;....................................................&#xA;</code></pre>&#xA;&#xA;<p>Take note of the <code>CONTAINER ID</code> of the container in question.&#xA;Then you can have a terminal session inside of the container, and use <code>psql</code> to connect to the database:</p>&#xA;&#xA;<pre><code>docker exec -it 05b3a3471f6f bash&#xA;root@a5sd22v5-# psql -U postgres&#xA;</code></pre>&#xA;&#xA;<p>This <a href=""https://stackoverflow.com/questions/37694987/connecting-to-postgresql-in-a-docker-container-from-outside"">SO question</a> is more relevant.</p>&#xA;",4017403,,243392,2020-01-18 11:22:23,2020-01-18 11:22:23,"",,0,0,0,2019-06-14 18:59:24
56607272,1,56639611,,1,643,"<p>I'm using re-graph to make a graphql query to a remote server:</p>&#xA;&#xA;<pre><code>(re-frame/dispatch [::re-graph/init&#xA;                    {:http-url ""https://api.spacex.land/graphql""&#xA;                     :ws-url nil&#xA;                      :http-parameters&#xA;                               {:headers {""Access-Control-Allow-Headers"" ""Content-Type""&#xA;                                          ""Access-Control-Allow-Origin"" ""*""}}}])&#xA;</code></pre>&#xA;&#xA;<p>But I keep getting this CORS error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Access to XMLHttpRequest at '<a href=""https://api.spacex.land/graphql"" rel=""nofollow noreferrer"">https://api.spacex.land/graphql</a>' from&#xA;  origin '<a href=""http://localhost:3449"" rel=""nofollow noreferrer"">http://localhost:3449</a>' has been blocked by CORS policy:&#xA;  Response to preflight request doesn't pass access control check: The&#xA;  value of the 'Access-Control-Allow-Origin' header in the response must&#xA;  not be the wildcard '*' when the request's credentials mode is&#xA;  'include'. The credentials mode of requests initiated by the&#xA;  XMLHttpRequest is controlled by the withCredentials attribute.</p>&#xA;</blockquote>&#xA;&#xA;<p>Any idea what I need to do?</p>&#xA;",251840,,251840,2019-06-15 04:52:41,2022-05-22 11:29:17,re-graph: CORS error with remote graphql server,<graphql><clojurescript><re-frame>,3,0,0,2019-06-15 04:12:39
56634978,1,,,3,620,"<p>I currently have an AKS cluster setup running a GraphQL server and normal nginx ingress. We're attempting to onboard GraphQL Subscriptions, which utilize Websockets. The URL that GraphQL uses for websockets is the same url that is used for GraphQL queries. We've tried adding proxy configuration to enable websocket ingress, but the connection is never established. Running the GraphQL server without Kubernetes is successful, so we think there is something kubernetes-specific going on here...has anyone had any success doing this? Relevant ingress config below</p>&#xA;&#xA;<pre><code>apiVersion: extensions/v1beta1&#xA;kind: Ingress&#xA;metadata:&#xA;  name: web-ingress&#xA;  namespace: web&#xA;  annotations:&#xA;    kubernetes.io/ingress.class: nginx&#xA;    certmanager.k8s.io/cluster-issuer: letsencrypt&#xA;    nginx.ingress.kubernetes.io/use-regex: ""true""&#xA;    nginx.ingress.kubernetes.io/affinity: cookie&#xA;    nginx.ingress.kubernetes.io/proxy-send-timeout: ""3600""&#xA;    nginx.ingress.kubernetes.io/proxy-read-timeout: ""3600""&#xA;    nginx.ingress.kubernetes.io/proxy-connect-timeout: ""30""&#xA;    nginx.ingress.kubernetes.io/configuration-snippet: |&#xA;        proxy_http_version 1.1;&#xA;        proxy_set_header Upgrade $http_upgrade;&#xA;        proxy_set_header Connection ""upgrade"";&#xA;spec:&#xA;  tls:&#xA;  - hosts:&#xA;    - my.host&#xA;    - my-api.host&#xA;    secretName: tls-secret&#xA;  rules:&#xA;  - host: my.host&#xA;    http:&#xA;      paths:&#xA;      - path: /graphql&#xA;        backend:&#xA;          serviceName: webapi&#xA;          servicePort: 80&#xA;      - path: /(.*)&#xA;        backend:&#xA;          serviceName: website&#xA;          servicePort: 80&#xA;  - host: my-api.host&#xA;    http:&#xA;      paths:&#xA;      - backend:&#xA;          serviceName: webapi&#xA;          servicePort: 80&#xA;        path: /(.*)&#xA;</code></pre>&#xA;",9964776,,,,2019-12-28 10:40:31,Websockets on AKS using GraphQL Not Connecting,<websocket><kubernetes><graphql><kubernetes-ingress><azure-aks>,1,2,0,2019-06-17 15:59:10
56637226,2,,52244874,1,,"<p>You have to name the apollo property (<a href=""https://akryum.github.io/vue-apollo/api/smart-query.html#options"" rel=""nofollow noreferrer"">docs</a>, e.g <code>bookList</code>):</p>&#xA;&#xA;<pre><code>export default {&#xA;  name: ""BookList"", // template name&#xA;  apollo: { &#xA;    bookList: {&#xA;       query: getBooksQuery // query&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>or even simpler (when you don't need any configs)</p>&#xA;&#xA;<pre><code>apollo: {&#xA;  bookList: getBooksQuery&#xA;}&#xA;</code></pre>&#xA;",245785,,,,2019-06-17 18:50:52,"",,0,0,0,2019-06-17 18:50:52
56676013,2,,56549752,0,,"<p>Okay so a few things to help you out:</p>&#xA;&#xA;<ul>&#xA;<li>If you are using Chrome and go to the dev tools, go to Network -> Preview. This should display some markup with more information about the error.</li>&#xA;<li>I'm not sure what your graphql mutation file looks like but you should probably be importing it just as <code>import mutation from ../gql/mutation</code>. Then call it with <code>this.get('apollo').mutate({mutation, credentials}, 'createUser')</code></li>&#xA;<li>Make sure that the relative path to your graphql file is correct</li>&#xA;<li>I would recommend having your route extend <code>ComponentQueryManager</code> and then removing the injected Apollo service</li>&#xA;</ul>&#xA;",7741840,,,,2019-06-19 21:20:05,"",,0,0,0,2019-06-19 21:20:05
56686778,2,,56680546,1,,"<p>I don't think you can change resolution like you are doing.</p>&#xA;&#xA;<p>To be honest, I can't understand why you can't use only the middleware for setting or not it. Why you can't generate only that on the middleware?</p>&#xA;&#xA;<p>However, I can see a way of doing that.</p>&#xA;&#xA;<pre><code>@desc ""Return api version""&#xA;field :version, :version_payload do&#xA;  resolve(fn _, _ -&gt; {:ok, %{version: OnCallAPI.version(), other: ""Marcos""}} end)&#xA;&#xA;  middleware fn resolution, _ -&gt;&#xA;    # Here i want to extract the state generated in&#xA;    # the resolver and add to the context&#xA;    IO.inspect(resolution, label: ""Inside resolution"")&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>If you check the console, you sill see the <code>other</code> on the <code>values</code>. Like this:</p>&#xA;&#xA;<pre><code>...&#xA;private: %{},&#xA;root_value: %{},&#xA;schema: OnCallAPIWeb.Schema,&#xA;source: %{},&#xA;state: :resolved,&#xA;value: %{other: ""Marcos"", version: ""0.30.0-rc""}&#xA;</code></pre>&#xA;",1949195,,,,2019-06-20 13:13:31,"",,0,0,0,2019-06-20 13:13:31
56716078,1,,,1,442,"<p>I deployed prisma PostgreSQL and yoga server to heroku,</p>&#xA;&#xA;<p>but the graphql endpoint is public, and anyone can mutate from it.</p>&#xA;&#xA;<p>is there a straightforward way of doing it like hasura does:&#xA;<a href=""https://docs.hasura.io/1.0/graphql/manual/deployment/securing-graphql-endpoint.html"" rel=""nofollow noreferrer"">https://docs.hasura.io/1.0/graphql/manual/deployment/securing-graphql-endpoint.html</a></p>&#xA;&#xA;<p>PS: I didn't use docker to deploy it, i deployed everything through the prisma wizard in: <a href=""https://app.prisma.io"" rel=""nofollow noreferrer"">prisma console</a></p>&#xA;",7808470,,,,2019-07-21 20:14:12,How to secure prisma endpoint deployed to heroku,<heroku><graphql><prisma>,1,0,0,2019-06-22 13:59:59
56716661,1,56716909,,0,1737,"<p>Does anyone have any idea how do I use fragments on unions? I've seen the documentation for React (<a href=""https://www.apollographql.com/docs/react/advanced/fragments/#fragments-on-unions-and-interfaces"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/advanced/fragments/#fragments-on-unions-and-interfaces</a>) but not much on Vue. I have a query that returns two fragments, both with __typename.</p>&#xA;&#xA;<pre><code>query {&#xA;    search(queryString: ""lin"") {&#xA;        ... on Professor {&#xA;            __typename&#xA;            name&#xA;        }&#xA;        ... on Course { &#xA;            __typename&#xA;            name&#xA;            moduleCode&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When the vue app runs, I received the error ""You're using fragments in your queries, but either don't have the addTypename: true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename."" This is the code from my vue app.</p>&#xA;&#xA;<pre><code>data() {&#xA;    return {&#xA;        result: []&#xA;    };&#xA;},&#xA;apollo: {&#xA;    // Query with parameters&#xA;    result: {&#xA;        // gql query&#xA;            query: gql'&#xA;                query search($queryString: String!) {&#xA;                    ... on Professor {&#xA;                        __typename&#xA;                        name&#xA;                    }&#xA;                    ... on Course { &#xA;                        __typename&#xA;                        name&#xA;                        moduleCode&#xA;                    }&#xA;                }&#xA;            ',&#xA;            // Static parameters&#xA;            variables() {&#xA;               return {&#xA;                  queryString: 'lin mei'&#xA;                }&#xA;          }&#xA;    }&#xA;},&#xA;</code></pre>&#xA;&#xA;<pre><code>// In my apollo client options&#xA;// Override default cache&#xA;cache: new InMemoryCache(&#xA;    { addTypename: true }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The error messages I got are</p>&#xA;&#xA;<ul>&#xA;<li>You're using fragments in your queries, but either don't have the addTypename:&#xA;true option set in Apollo Client, or you are trying to write a fragment to the store without the __typename.&#xA;Please turn on the addTypename option and include __typename when writing fragments so that Apollo Client&#xA;can accurately match fragments.</li>&#xA;<li>DEPRECATION WARNING: using fragments without __typename is unsupported behavior and will be removed in future versions of Apollo client. You should fix this and set addTypename to true now.</li>&#xA;<li>GraphQL error: Fragment on Professor can't be spread inside Query; GraphQL error: Fragment on Course can't be spread inside Query; GraphQL error: Variable $queryString is declared by search but not used</li>&#xA;<li>GraphQL error: Fragment on Professor can't be spread inside Query; GraphQL error: Fragment on Course can't be spread inside Query; GraphQL error: Variable $queryString is declared by search but not used</li>&#xA;</ul>&#xA;&#xA;<p>Is anyone able to provide an example of grabbing two fragments from a query in vue?</p>&#xA;",3037578,,,,2019-06-22 15:52:35,How do I use fragments on union in Vue.js?,<vue.js><graphql><vue-apollo>,1,2,0,2019-06-22 15:17:44
56723183,1,,,0,1134,"<p>I am frontend developer so for the first time I got my hands on vue and graphql, I don’t know how exactly to deal with this error:</p>&#xA;&#xA;<pre><code>Missing getMovies attribute on result {movies: Array(20)}&#xA;</code></pre>&#xA;&#xA;<p>Here is my code, and I can see the data is fetched successfully in the response on dev tools in chrome:</p>&#xA;&#xA;<pre><code>{""data"":{""movies"":[{""__typename"":""Movie"",""id"":11,""overview"":&#xA;</code></pre>&#xA;&#xA;<p>Here is the code:</p>&#xA;&#xA;<pre><code>&lt;template&gt;&#xA;  &lt;div class=""hello""&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li v-for=""movie in movies"" :key=""movie.id""&gt;{{movie.title}}&lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/template&gt;&#xA;&#xA;&lt;script&gt;&#xA;import gql from 'graphql-tag'&#xA;export default {&#xA;  name: 'HelloWorld',&#xA;  data(){&#xA;    return {&#xA;      movies: []&#xA;    }&#xA;  },&#xA;  apollo: {&#xA;    getMovies: {&#xA;      query: gql`&#xA;        query StarWars {&#xA;          movies(query: ""Star Wars"") {&#xA;            title&#xA;            overview&#xA;            poster_path&#xA;            id&#xA;          }&#xA;        }      &#xA;      `,&#xA;      result({data}){&#xA;        this.movies = data.movies&#xA;      }&#xA;    }&#xA;  },&#xA;  props: {&#xA;    msg: String&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;",9624577,,,,2019-06-23 11:43:08,Missing movies attribute on result Vue GraphQL,<vue.js><graphql><apollo><vue-apollo>,1,0,0,2019-06-23 10:57:01
56762596,2,,56761917,0,,"<p>The recommendation would be to hydrate (read: pre-load with data) a local SQLite database after install. SQLite is what the 'local cache' uses to persist data on the device.</p>&#xA;&#xA;<p>Refer to this github issue for a code example of how to do this:&#xA;<a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-js/issues/160"" rel=""nofollow noreferrer"">https://github.com/awslabs/aws-mobile-appsync-sdk-js/issues/160</a></p>&#xA;",10886417,,,,2019-06-25 22:01:18,"",,0,6,0,2019-06-25 22:01:18
56763929,1,56776212,,1,774,"<p>I started using schema stitching and while types are not conflicting everything is working.</p>&#xA;&#xA;<p>But I am now merging three schema and I have PageInfo and Edge on local schema and another remote schema. Types Edge and PageInfo are completely different on both and I just need to use local PageInfo and Edge on local schema and remote on remote.</p>&#xA;&#xA;<p>already tried all 3 examples of schema stitching for resolve type conflict but nothing helps.</p>&#xA;&#xA;<p><a href=""https://www.advancedgraphql.com/content/schema-stitching/ex1"" rel=""nofollow noreferrer"">https://www.advancedgraphql.com/content/schema-stitching/ex1</a></p>&#xA;",2770500,,2770500,2019-06-26 15:42:40,2019-06-26 15:42:40,Apollo graphql common type conflict,<graphql><apollo-client>,1,0,0,2019-06-26 01:22:34
56773130,1,,,1,1265,"<p>When I wrote the following code visual studio shows an error which indicates that it can't find something called GraphQL even though I installed the package from nuget on this link: <a href=""https://www.nuget.org/packages/GraphQL/"" rel=""nofollow noreferrer"">https://www.nuget.org/packages/GraphQL/</a> and typed using GraphQL.Http;</p>&#xA;&#xA;<pre><code>var query = @""query($id: String) { device (id: $id) { displayName, id } }"";&#xA;var request = new GraphQLRequest()&#xA;{&#xA;    Query = query,&#xA;    Variables = new { id = 123 }&#xA;};&#xA;</code></pre>&#xA;",10816437,,,,2019-06-26 14:35:17,"Error: The type or name space ""GraphQLRequest"" could not be found",<c#><.net><namespaces><graphql><using>,1,2,0,2019-06-26 12:43:12
56779900,1,,,2,167,"<p>I'm getting this graphql instance error. How should I fix it?</p>&#xA;&#xA;<p>I've tried adding the following in package.json but it produce the same error. </p>&#xA;&#xA;<p>""resolutions"": {&#xA;  ""graphql"": ""0.13.0""&#xA;}</p>&#xA;&#xA;<p>Cannot use t""_Schema"" from another module or realm. Ensure that there is only one instance of ""graphql"" in the node_modules directory. If different versions of ""graphql"" are the dependencies of other relied on modules, use ""resolutions"" to ensure only one version installed.&#xA;<a href=""https://i.stack.imgur.com/PUP9F.jpg"" rel=""nofollow noreferrer"">Screenshot of error is attached here.</a></p>&#xA;",7088970,,7088970,2019-06-26 19:41:11,2019-06-26 19:41:11,"Cannot use t""_Schema"" from another module or realm. Ensure that there is only one instance of ""graphql"" in the node_modules",<react-native><graphql><aws-amplify>,0,0,0,2019-06-26 19:35:42
56824749,2,,56822885,1,,"<p>Errors that occur during the resolution of a field are execution errors. Unless you catch the error yourself, it will be caught by GraphQL and returned as part of the response inside the <code>errors</code> array, as you are seeing. Because the error is caught, it will never show up in the console.</p>&#xA;&#xA;<p>As long as the <code>debug</code> option is set to true and your <code>NODE_ENV</code> is <code>development</code>, the errors returned will include the stack trace inside the response as well. You've truncated the error in your post, but the stack trace should be found at the following path: <code>errors[0]extensions.exception.stacktrace</code>.</p>&#xA;&#xA;<p>The returned error should also include a <code>path</code> property that should point to whichever resolver the issue is happening in.</p>&#xA;",6024220,,,,2019-06-30 12:11:42,"",,0,2,0,2019-06-30 12:11:42
56858397,2,,56666662,1,,"<p>I had the same error this morning and I have a feeling it has something to do with caching. It went away when I renamed the variable.  In your case, change all 'Link' definition/references to 'LinkTwo' and see if the error goes away. Same with 'User'... change it to 'UserTwo'.  If it does, perhaps you can rename them back afterwards.</p>&#xA;",4726822,,,,2019-07-02 18:39:04,"",,0,0,0,2019-07-02 18:39:04
56875895,1,56888696,,1,452,"<p>I try to follow <a href=""https://www.howtographql.com/react-relay/2-queries-loading-links/"" rel=""nofollow noreferrer"">the tutorial</a> about GraphQL and Relay.</p>&#xA;&#xA;<p>And when I run it (or run <code>yarn test</code>):</p>&#xA;&#xA;<pre><code>Invariant Violation: Could not create Relay Container for `Link`. Expected a set of GraphQL fragments, got `function () {&#xA;      const node = require(""./__generated__/Link_link.graphql"");&#xA;&#xA;      if (node.hash &amp;&amp; node.hash !== ""4db5e0eb9875bd761c8f8ef68ea507f3"") {&#xA;        console.error(""The definition of 'Link_link' appears to have changed. Run `relay-compiler` to update the generated files to receive the expected data."");&#xA;      }&#xA;&#xA;      return require(""./__generated__/Link_link.graphql"");&#xA;    }` instead.&#xA;&#xA;      16 | }&#xA;      17 |&#xA;    &gt; 18 | export default createFragmentContainer(Link, graphql`&#xA;         |                ^&#xA;      19 |     fragment Link_link on Link {&#xA;      20 |         id&#xA;      21 |         description&#xA;&#xA;      at invariant (node_modules/fbjs/lib/invariant.js:40:15)&#xA;</code></pre>&#xA;&#xA;<p>I tried to modify <code>graphql.schema</code>:</p>&#xA;&#xA;<pre><code>type Link implements Node {&#xA;  id: ID!&#xA;  description: String!&#xA;  url: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>to match </p>&#xA;&#xA;<pre><code>export default createFragmentContainer(Link, graphql`&#xA;    fragment Link_link on Link {&#xA;        id&#xA;        description&#xA;        url&#xA;    }&#xA;`)&#xA;</code></pre>&#xA;&#xA;<p>yet I receive the same error. Also I tried to remove <code>__generated__</code> folder and rerun <code>relay-compiler</code> with no success.</p>&#xA;&#xA;<p>How can I fix it?</p>&#xA;",11683051,,,,2021-05-16 12:52:26,How can I fix Could not create Relay Container for `Link`,<javascript><graphql-js><relayjs><relay>,2,0,0,2019-07-03 18:15:46
56890766,1,,,1,990,"<p>I am using <a href=""https://github.com/apollographql/react-apollo"" rel=""nofollow noreferrer"">react-apollo</a> to make GraphQL queries, and I am using <a href=""https://www.cypress.io/"" rel=""nofollow noreferrer"">Cypress</a> for testing.</p>&#xA;&#xA;<p>The problem is that these 2 dont seem to play well along. Apollo seems to be making all its requests through the Fetch API.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/S3lSZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/S3lSZ.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>But Cypress seems like it is not able to capture anything, except XHR requests.</p>&#xA;&#xA;<p>So what could I do to solve this problem? Is there a way for Cypress to capture ""fetch"" requests? Is there a way for react-apollo to use ""xhr"" instead of ""fetch""?</p>&#xA;",392684,,,,2021-10-04 13:56:36,Compatibility between cypress and react-apollo,<xmlhttprequest><fetch><apollo><react-apollo><cypress>,3,2,0,2019-07-04 15:14:11
56891409,2,,54481645,5,,"<p>I had solved schema stitching problem by using transform method.<br>&#xA;<strong>Look src/graphql.config/graphql.config.service.ts</strong></p>&#xA;&#xA;<p><a href=""https://codesandbox.io/s/github/OLDIN/nestjs-schema-stitching"" rel=""noreferrer"">here my code</a><br>&#xA;<a href=""https://wic63.sse.codesandbox.io/graphql"" rel=""noreferrer"">link for the test</a></p>&#xA;&#xA;<pre><code>import { Injectable } from '@nestjs/common';&#xA;import { GqlOptionsFactory, GqlModuleOptions } from '@nestjs/graphql';&#xA;import * as ws from 'ws';&#xA;import {&#xA;  makeRemoteExecutableSchema,&#xA;  mergeSchemas,&#xA;  introspectSchema&#xA;} from 'graphql-tools';&#xA;import { HttpLink } from 'apollo-link-http';&#xA;import nodeFetch from 'node-fetch';&#xA;import { split, from, NextLink, Observable, FetchResult, Operation } from 'apollo-link';&#xA;import { getMainDefinition } from 'apollo-utilities';&#xA;import { OperationTypeNode, buildSchema as buildSchemaGraphql, GraphQLSchema, printSchema } from 'graphql';&#xA;import { setContext } from 'apollo-link-context';&#xA;import { SubscriptionClient, ConnectionContext } from 'subscriptions-transport-ws';&#xA;import * as moment from 'moment';&#xA;import { extend } from 'lodash';&#xA;&#xA;import { ConfigService } from '../config';&#xA;&#xA;declare const module: any;&#xA;interface IDefinitionsParams {&#xA;  operation?: OperationTypeNode;&#xA;  kind: 'OperationDefinition' | 'FragmentDefinition';&#xA;}&#xA;interface IContext {&#xA;  graphqlContext: {&#xA;    subscriptionClient: SubscriptionClient,&#xA;  };&#xA;}&#xA;&#xA;@Injectable()&#xA;export class GqlConfigService implements GqlOptionsFactory {&#xA;&#xA;  private remoteLink: string = 'https://countries.trevorblades.com';&#xA;&#xA;  constructor(&#xA;    private readonly config: ConfigService&#xA;  ) {}&#xA;&#xA;  async createGqlOptions(): Promise&lt;GqlModuleOptions&gt; {&#xA;    const remoteExecutableSchema = await this.createRemoteSchema();&#xA;&#xA;    return {&#xA;      autoSchemaFile: 'schema.gql',&#xA;      transformSchema: async (schema: GraphQLSchema) =&gt; {&#xA;        return mergeSchemas({&#xA;          schemas: [&#xA;            schema,&#xA;            remoteExecutableSchema&#xA;          ]&#xA;        });&#xA;      },&#xA;      debug: true,&#xA;      playground: {&#xA;        env: this.config.environment,&#xA;        endpoint: '/graphql',&#xA;        subscriptionEndpoint: '/subscriptions',&#xA;        settings: {&#xA;          'general.betaUpdates': false,&#xA;          'editor.theme': 'dark' as any,&#xA;          'editor.reuseHeaders': true,&#xA;          'tracing.hideTracingResponse': true,&#xA;          'editor.fontSize': 14,&#xA;          // tslint:disable-next-line:quotemark&#xA;          'editor.fontFamily': ""'Source Code Pro', 'Consolas', 'Inconsolata', 'Droid Sans Mono', 'Monaco', monospace"",&#xA;          'request.credentials': 'include',&#xA;        },&#xA;      },&#xA;      tracing: true,&#xA;      installSubscriptionHandlers: true,&#xA;      introspection: true,&#xA;      subscriptions: {&#xA;        path: '/subscriptions',&#xA;        keepAlive: 10000,&#xA;        onConnect: async (connectionParams, webSocket: any, context) =&gt; {&#xA;          const subscriptionClient = new SubscriptionClient(this.config.get('HASURA_WS_URI'), {&#xA;            connectionParams: {&#xA;              ...connectionParams,&#xA;              ...context.request.headers&#xA;            },&#xA;            reconnect: true,&#xA;            lazy: true,&#xA;          }, ws);&#xA;&#xA;          return {&#xA;            subscriptionClient,&#xA;          };&#xA;        },&#xA;        async onDisconnect(webSocket, context: ConnectionContext) {&#xA;          const { subscriptionClient } = await context.initPromise;&#xA;&#xA;          if (subscriptionClient) {&#xA;            subscriptionClient.close();&#xA;          }&#xA;        },&#xA;      },&#xA;      context(context) {&#xA;        const contextModified: any = {&#xA;          userRole: 'anonymous',&#xA;          currentUTCTime: moment().utc().format()&#xA;        };&#xA;&#xA;        if (context &amp;&amp; context.connection &amp;&amp; context.connection.context) {&#xA;          contextModified.subscriptionClient = context.connection.context.subscriptionClient;&#xA;        }&#xA;&#xA;        return contextModified;&#xA;      },&#xA;    };&#xA;  }&#xA;&#xA;  private wsLink(operation: Operation, forward?: NextLink): Observable&lt;FetchResult&gt; | null {&#xA;    const context = operation.getContext();&#xA;    const { graphqlContext: { subscriptionClient } }: any = context;&#xA;    return subscriptionClient.request(operation);&#xA;  }&#xA;&#xA;  private async createRemoteSchema(): Promise&lt;GraphQLSchema&gt; {&#xA;&#xA;    const httpLink = new HttpLink({&#xA;      uri: this.remoteLink,&#xA;      fetch: nodeFetch as any,&#xA;    });&#xA;&#xA;    const remoteIntrospectedSchema = await introspectSchema(httpLink);&#xA;    const remoteSchema = printSchema(remoteIntrospectedSchema);&#xA;    const link = split(&#xA;      ({ query }) =&gt; {&#xA;        const { kind, operation }: IDefinitionsParams = getMainDefinition(query);&#xA;        return kind === 'OperationDefinition' &amp;&amp; operation === 'subscription';&#xA;      },&#xA;      this.wsLink,&#xA;      httpLink,&#xA;    );&#xA;&#xA;    const contextLink = setContext((request, prevContext) =&gt; {&#xA;      extend(prevContext.headers, {&#xA;        'X-hasura-Role': prevContext.graphqlContext.userRole,&#xA;        'X-Hasura-Utc-Time': prevContext.graphqlContext.currentUTCTime,&#xA;      });&#xA;      return prevContext;&#xA;    });&#xA;&#xA;    const buildedHasuraSchema = buildSchemaGraphql(remoteSchema);&#xA;    const remoteExecutableSchema = makeRemoteExecutableSchema({&#xA;      link: from([contextLink, link]),&#xA;      schema: buildedHasuraSchema,&#xA;    });&#xA;&#xA;    return remoteExecutableSchema;&#xA;  }&#xA;&#xA;}&#xA;</code></pre>&#xA;",6761800,,,,2019-07-04 16:01:49,"",,0,0,0,2019-07-04 16:01:49
56909388,1,,,0,1126,"<p>I have encountered a new type of nonsensical errors (<code>Expected type Int, found Int</code>) when running queries with input parameters (not just Ints). They seem to have appeared since early June (when I upgraded to <code>graphql@14.3.1</code>?)</p>&#xA;&#xA;<p>Our setting is a bit different since we are stitching a remote schema to a local one (overlapping types when they exist or adding them when they are not).</p>&#xA;&#xA;<p>Anyone has seen this type of errors and knows how to correct it?</p>&#xA;&#xA;<p>I have traced the problem to the parseLiteral method of the scalar.js file. In the present case, ast.kind equals <code>EnumValue</code> while its value is <code>IntValue</code></p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>var GraphQLInt = new _definition.GraphQLScalarType({&#xA;  name: 'Int',&#xA;  description: '...',&#xA;  serialize: serializeInt,&#xA;  parseValue: coerceInt,&#xA;  parseLiteral: function parseLiteral(ast) {&#xA;    if (ast.kind === _kinds.Kind.INT) {&#xA;      var num = parseInt(ast.value, 10);&#xA;&#xA;      if (num &lt;= MAX_INT &amp;&amp; num &gt;= MIN_INT) {&#xA;        return num;&#xA;      }&#xA;    }&#xA;&#xA;    return undefined;&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>It seems as if the parser arbitrarily converts a value of <code>10</code> to an <code>EnumValue</code> (of type <code>Int</code>), rather than <code>IntValue</code>.</p>&#xA;&#xA;<p>Here is a typical query</p>&#xA;&#xA;<pre><code>combinedStatus(status: ""bad"", start:10, end:20) {&#xA;        status&#xA;        timestamp&#xA;      }&#xA;</code></pre>&#xA;&#xA;<p>I get the following error: <code>GraphQLError: Expected type Int, found Int.</code> at isValidScalar ./node_modules/graphql/validation/rules/ValuesOfCorrectType.js:180:27</p>&#xA;&#xA;<p>the same query with variables will return the expected result and no error:</p>&#xA;&#xA;<pre><code>combinedStatus(status: ""bad"", start:$start, end:$end) {&#xA;        status&#xA;        timestamp&#xA;      }&#xA;</code></pre>&#xA;&#xA;<p>The schema is:</p>&#xA;&#xA;<pre><code>type CdsHealthCheckLocal implements CdsHealthCheckInterface {&#xA;    status: String!&#xA;    combinedStatus(status: String, start: Int, end: Int): CdsHealthCheck&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and the corresponding resolver is:</p>&#xA;&#xA;<pre><code>async (parent, { status, start, end }, context) =&gt; { &#xA;        return {&#xA;        status: `not sure if I am feeling ${status} (${start}, ${end})`&#xA;    }}&#xA;</code></pre>&#xA;",1280012,,1280012,2019-07-08 14:58:24,2019-07-08 14:58:24,"GraphQLError: Expected type Int, found Int",<apollo-server>,0,4,0,2019-07-05 21:25:32
56915434,1,,,5,1125,"<p>I have a Postgres database on Heroku, upon deploying the data model by doing <code>prisma deploy</code> often times the following error is produced.  </p>&#xA;&#xA;<pre><code>ERROR: Whoops. Looks like an internal server error. Search your server logs for request ID: local:cjxrmcnpx00hq0692zuwttqwv&#xA;&#xA;{&#xA; ""data"": {&#xA;   ""addProject"": null&#xA; },&#xA; ""errors"": [&#xA;   {&#xA;     ""message"": ""Whoops. Looks like an internal server error. Search your server logs for request ID: local:cjxrmcnpx00hq0692zuwttqwv"",&#xA;     ""path"": [&#xA;       ""addProject""&#xA;     ],&#xA;     ""locations"": [&#xA;       {&#xA;         ""line"": 2,&#xA;         ""column"": 9&#xA;       }&#xA;     ],&#xA;     ""requestId"": ""local:cjxrmcnpx00hq0692zuwttqwv""&#xA;   }&#xA; ],&#xA; ""status"": 200&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and on checking the Docker logs I am seeing this erorr: </p>&#xA;&#xA;<pre><code>Jul 14, 2019 12:18:34 PM org.postgresql.Driver connect&#xA;prisma_1  | SEVERE: Connection error: &#xA;prisma_1  | org.postgresql.util.PSQLException: FATAL: too many connections for role ""bcueventxumaik""  &#xA;prisma_1  |     at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2433)&#xA;prisma_1  |     at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2566)&#xA;prisma_1  |     at org.postgresql.core.v3.QueryExecutorImpl.&lt;init&gt;(QueryExecutorImpl.java:131)        &#xA;prisma_1  |     at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:210)&#xA;prisma_1  |     at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)&#xA;prisma_1  |     at org.postgresql.jdbc.PgConnection.&lt;init&gt;(PgConnection.java:195)&#xA;prisma_1  |     at org.postgresql.Driver.makeConnection(Driver.java:452)&#xA;prisma_1  |     at org.postgresql.Driver.connect(Driver.java:254)&#xA;prisma_1  |     at slick.jdbc.DriverDataSource.getConnection(DriverDataSource.scala:101)&#xA;prisma_1  |     at slick.jdbc.DataSourceJdbcDataSource.createConnection(JdbcDataSource.scala:68)      &#xA;prisma_1  |     at slick.jdbc.JdbcBackend$BaseSession.&lt;init&gt;(JdbcBackend.scala:453)&#xA;prisma_1  |     at slick.jdbc.JdbcBackend$DatabaseDef.createSession(JdbcBackend.scala:46)&#xA;prisma_1  |     at slick.jdbc.JdbcBackend$DatabaseDef.createSession(JdbcBackend.scala:37)&#xA;prisma_1  |     at slick.basic.BasicBackend$DatabaseDef.acquireSession(BasicBackend.scala:249)        &#xA;prisma_1  |     at slick.basic.BasicBackend$DatabaseDef.acquireSession$(BasicBackend.scala:248)       &#xA;prisma_1  |     at slick.jdbc.JdbcBackend$DatabaseDef.acquireSession(JdbcBackend.scala:37)&#xA;prisma_1  |     at slick.basic.BasicBackend$DatabaseDef$$anon$2.run(BasicBackend.scala:274)&#xA;prisma_1  |     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)    &#xA;prisma_1  |     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)    &#xA;prisma_1  |     at java.lang.Thread.run(Thread.java:748)&#xA;prisma_1  |&#xA;prisma_1  | Exception in thread ""main"" org.postgresql.util.PSQLException: FATAL: too many connections &#xA;prisma_1  |     at org.postgresql.core.v3.QueryExecutorImpl.readStartupMessages(QueryExecutorImpl.java:2566)prisma_1  |     at org.postgresql.core.v3.QueryExecutorImpl.&lt;init&gt;(QueryExecutorImpl.java:131)prisma_1  |     at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:210)&#xA;prisma_1  |     at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)prisma_1  |     at org.postgresql.jdbc.PgConnection.&lt;init&gt;(PgConnection.java:195)&#xA;prisma_1  |     at org.postgresql.Driver.makeConnection(Driver.java:452)&#xA;prisma_1  |     at org.postgresql.Driver.connect(Driver.java:254)prisma_1  |     at slick.jdbc.DriverDataSource.getConnection(DriverDataSource.scala:101)&#xA;prisma_1  |     at slick.jdbc.DataSourceJdbcDataSource.createConnection(JdbcDataSource.scala:68)&#xA;prisma_1  |     at slick.jdbc.JdbcBackend$BaseSession.&lt;init&gt;(JdbcBackend.scala:453)&#xA;prisma_1  |     at slick.jdbc.JdbcBackend$DatabaseDef.createSession(JdbcBackend.scala:46)&#xA;prisma_1  |     at slick.jdbc.JdbcBackend$DatabaseDef.createSession(JdbcBackend.scala:37)&#xA;prisma_1  |     at slick.basic.BasicBackend$DatabaseDef.acquireSession(BasicBackend.scala:249)&#xA;prisma_1  |     at slick.basic.BasicBackend$DatabaseDef.acquireSession$(BasicBackend.scala:248)&#xA;prisma_1  |     at slick.jdbc.JdbcBackend$DatabaseDef.acquireSession(JdbcBackend.scala:37)&#xA;prisma_1  |     at slick.basic.BasicBackend$DatabaseDef$$anon$2.run(BasicBackend.scala:274)&#xA;prisma_1  |     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)&#xA;prisma_1  |     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)&#xA;prisma_1  |     at java.lang.Thread.run(Thread.java:748)&#xA;prisma_prisma_1 exited with code 1&#xA;</code></pre>&#xA;&#xA;<p>The error is saying <em>too many connections</em> but I am firing <em>prisma deploy</em> from only one terminal and at the same time I am able to connect to the database using PgAdmin4. Moreover, the database seems to be perfectly reachable as I am able to ping the database from inside the container.</p>&#xA;&#xA;<p><strong>PS. Updated the docker logs as earlier on running <code>docker logs -f processid</code> I was getting older logs but now upon building the container again using <code>docker-compose up</code> I got the lastest logs</strong></p>&#xA;",7379765,,7379765,2019-07-16 04:17:47,2022-09-12 19:54:30,Getting Internal Server Error on prisma deploy,<docker><pgadmin><heroku-postgres><prisma><prisma-graphql>,3,5,0,2019-07-06 15:27:19
56932295,1,67862424,,13,6638,"<p>I have implemented a <code>LoggingInterceptor</code> which should be able to access the final GraphQL-Response with its data- and error properties + the original request body and the authenticated user, which has been added to the request by <code>AuthGuard</code> before.<em>(EDIT: Partially solved by @jay-mcdoniel: <code>user</code> and <code>body</code> are accessible through <code>GqlExecutionContext.create(context).getContext()</code>)</em></p>&#xA;&#xA;<p>Indeed the Interceptor just provides one fully resolved GraphQL-Object.</p>&#xA;&#xA;<pre><code>@Injectable()&#xA;export class LoggingInterceptor implements NestInterceptor {&#xA;  intercept(context: ExecutionContext, next: CallHandler): Observable&lt;any&gt; {&#xA;    return next.handle().pipe(tap(&#xA;      (allData) =&gt; console.log(allData),&#xA;      (error)=&gt; console.log(error)));&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is my Interceptor-Class. It's just calling the RxJS-Operator <code>tap</code> to log the current values of the observable.</p>&#xA;&#xA;<p>If I run the following GraphQL-Request...</p>&#xA;&#xA;<pre><code>mutation {&#xA;  login(data: { username: ""admin"", password: ""123456"" }) {&#xA;    id&#xA;    username&#xA;    token&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>... my server answers correctly with the following response-body:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""login"": {&#xA;      ""id"": ""6f40be3b-cda9-4e6d-97ce-ced3787e9974"",&#xA;      ""username"": ""admin"",&#xA;      ""token"": ""someToken""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But the content of <code>allData</code> which get's logged to console by my interceptor is the following:</p>&#xA;&#xA;<pre><code>{&#xA;  id: '6f40be3b-cda9-4e6d-97ce-ced3787e9974',&#xA;  isAdmin: true,&#xA;  username: 'admin',&#xA;  firstname: null,&#xA;  lastname: null,&#xA;  email: null,&#xA;  created: 2019-07-05T15:11:31.606Z,&#xA;  token: 'someToken'&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Instead I would like to see the information of the real response-body.</p>&#xA;&#xA;<p>I have additionally tried to access the HttpResponse by <code>context.switchToHttp().getResponse()</code>. But this only contains the parameters of the mutation-login-method:</p>&#xA;&#xA;<pre><code>{&#xA;  data: [Object: null prototype] { username: 'admin', password: '123456' }&#xA;}&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>EDIT</strong>:</p>&#xA;&#xA;<p><code>console.log(GqlExecutionContext.create(context).getContext());</code>&#xA;prints (still no GraphQL-ResponseBody):</p>&#xA;&#xA;<pre><code>{&#xA;  headers: {&#xA;    /*...*/&#xA;  },&#xA;  user: /*...*/,&#xA;  body: {&#xA;    operationName: null,&#xA;    variables: {},&#xA;    query: 'mutation {\n  login(data: {username: ""admin"", password: ' +&#xA;      '""123456""}) {\n    token\n    id\n    username\n    isAdmin\n  }\n' +&#xA;      '}\n'&#xA;  },&#xA;  res: ServerResponse {&#xA;    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },&#xA;    _eventsCount: 1,&#xA;    _maxListeners: undefined,&#xA;    outputData: [],&#xA;    outputSize: 0,&#xA;    writable: true,&#xA;    _last: false,&#xA;    chunkedEncoding: false,&#xA;    shouldKeepAlive: true,&#xA;    useChunkedEncodingByDefault: true,&#xA;    sendDate: true,&#xA;    _removedConnection: false,&#xA;    _removedContLen: false,&#xA;    _removedTE: false,&#xA;    _contentLength: null,&#xA;    _hasBody: true,&#xA;    _trailer: '',&#xA;    finished: false,&#xA;    _headerSent: false,&#xA;    socket: Socket {&#xA;      connecting: false,&#xA;      _hadError: false,&#xA;      _parent: null,&#xA;      _host: null,&#xA;      _readableState: [ReadableState],&#xA;      readable: true,&#xA;      _events: [Object],&#xA;      _eventsCount: 8,&#xA;      _maxListeners: undefined,&#xA;      _writableState: [WritableState],&#xA;      writable: true,&#xA;      allowHalfOpen: true,&#xA;      _sockname: null,&#xA;      _pendingData: null,&#xA;      _pendingEncoding: '',&#xA;      server: [Server],&#xA;      _server: [Server],&#xA;      timeout: 120000,&#xA;      parser: [HTTPParser],&#xA;      on: [Function: socketOnWrap],&#xA;      _paused: false,&#xA;      _httpMessage: [Circular],&#xA;      [Symbol(asyncId)]: 566,&#xA;      [Symbol(kHandle)]: [TCP],&#xA;      [Symbol(lastWriteQueueSize)]: 0,&#xA;      [Symbol(timeout)]: Timeout {&#xA;        /*...*/&#xA;      },&#xA;      [Symbol(kBytesRead)]: 0,&#xA;      [Symbol(kBytesWritten)]: 0&#xA;    },&#xA;    connection: Socket {&#xA;      connecting: false,&#xA;      _hadError: false,&#xA;      _parent: null,&#xA;      _host: null,&#xA;      _readableState: [ReadableState],&#xA;      readable: true,&#xA;      _events: [Object],&#xA;      _eventsCount: 8,&#xA;      _maxListeners: undefined,&#xA;      _writableState: [WritableState],&#xA;      writable: true,&#xA;      allowHalfOpen: true,&#xA;      _sockname: null,&#xA;      _pendingData: null,&#xA;      _pendingEncoding: '',&#xA;      server: [Server],&#xA;      _server: [Server],&#xA;      timeout: 120000,&#xA;      parser: [HTTPParser],&#xA;      on: [Function: socketOnWrap],&#xA;      _paused: false,&#xA;      _httpMessage: [Circular],&#xA;      [Symbol(asyncId)]: 566,&#xA;      [Symbol(kHandle)]: [TCP],&#xA;      [Symbol(lastWriteQueueSize)]: 0,&#xA;      [Symbol(timeout)]: Timeout {&#xA;        _idleTimeout: 120000,&#xA;        _idlePrev: [TimersList],&#xA;        _idleNext: [TimersList],&#xA;        _idleStart: 3273,&#xA;        _onTimeout: [Function: bound ],&#xA;        _timerArgs: undefined,&#xA;        _repeat: null,&#xA;        _destroyed: false,&#xA;        [Symbol(refed)]: false,&#xA;        [Symbol(asyncId)]: 567,&#xA;        [Symbol(triggerId)]: 566&#xA;      },&#xA;      [Symbol(kBytesRead)]: 0,&#xA;      [Symbol(kBytesWritten)]: 0&#xA;    },&#xA;    _header: null,&#xA;    _onPendingData: [Function: bound updateOutgoingData],&#xA;    _sent100: false,&#xA;    _expect_continue: false,&#xA;    req: IncomingMessage {&#xA;      /*...*/&#xA;    },&#xA;    locals: [Object: null prototype] {},&#xA;    [Symbol(isCorked)]: false,&#xA;    [Symbol(outHeadersKey)]: [Object: null prototype] {&#xA;      'x-powered-by': [Array],&#xA;      'access-control-allow-origin': [Array]&#xA;    }&#xA;  },&#xA;  _extensionStack: GraphQLExtensionStack { extensions: [ [CacheControlExtension] ] }&#xA;}&#xA;</code></pre>&#xA;",8398526,,8398526,2019-07-17 08:39:22,2021-06-06 18:29:08,How to access final GraphQL-Reponse in nest.js with interceptor,<node.js><graphql><nestjs>,2,1,0,2019-07-08 09:47:20
56954070,1,56954564,,6,4451,"<p>I created a simple graphQL Chat with Apollo Server and Apollo Client. </p>&#xA;&#xA;<p>It also uses session cookies so I initialized the server with the npm package <code>cors</code> like this:</p>&#xA;&#xA;<pre><code>app.use(&#xA;  cors({&#xA;    credentials: true,&#xA;    origin: ""http://localhost:3000""&#xA;  })&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>On the client side I use apollo client and create a http link like this:</p>&#xA;&#xA;<pre><code>const httpLink = new HttpLink({&#xA;  uri: ""http://localhost:4000/graphql"",&#xA;  credentials: ""include""&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>So I include credentials and the server has the origin of my client (which is indeed <a href=""http://localhost:3000"" rel=""noreferrer"">http://localhost:3000</a> - create-react-app default). </p>&#xA;&#xA;<p>When I want to run a query I get this error in my browser console:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Access to fetch at '<a href=""http://localhost:4000/graphql"" rel=""noreferrer"">http://localhost:4000/graphql</a>' from origin '<a href=""http://localhost:3000"" rel=""noreferrer"">http://localhost:3000</a>' has been blocked by CORS policy: The value of the 'Access-Control-Allow-Origin' header in the response must not be the wildcard '*' when the request's credentials mode is 'include'.</p>&#xA;</blockquote>&#xA;&#xA;<p>Why does it say that the response header has a wildcard * set, but on cors I set a specific origin, so it should not be a wildcard right? </p>&#xA;&#xA;<p>What am I missing here guys? I also restarted both servers of course. </p>&#xA;&#xA;<p>When I set the client like this: </p>&#xA;&#xA;<pre><code>const httpLink = new HttpLink({&#xA;  uri: ""http://localhost:4000/graphql"",&#xA;  credentials: ""same-origin""&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I don't get an error message from cors, but I don't receive a cookie from the server. Cookies work because on graphQL Playground everything works as expected.</p>&#xA;&#xA;<p>If you want to see the full code: <a href=""https://github.com/SelfDevTV/graphql-simple-chat"" rel=""noreferrer"">https://github.com/SelfDevTV/graphql-simple-chat</a></p>&#xA;",8502436,,,,2020-03-14 04:05:59,"Why do I always get a cors error that wildcard * is not allowed, although I specified a origin on the server?",<reactjs><express><cors><graphql>,2,0,0,2019-07-09 13:46:58
56959593,1,,,0,280,"<p>There's an example of injecting NetworkLayer with middlewares on the client side for <a href=""https://github.com/relay-tools/react-relay-network-modern#example-of-injecting-networklayer-with-middlewares-on-the-client-side"" rel=""nofollow noreferrer"">Relay Modern</a> that includes the following lines:</p>&#xA;&#xA;<pre><code>const network = new RelayNetworkLayer([...])&#xA;</code></pre>&#xA;&#xA;<p>On the other hand, my current setup were taken from <a href=""https://github.com/zsl99a/localjs/blob/2bfe6e4a5d720992418935f30e3c79a4c38a7954/webapp/environment.js"" rel=""nofollow noreferrer"">here</a> and include the following:</p>&#xA;&#xA;<pre><code>function fetchQuery(&#xA;  operation,&#xA;  variables&#xA;) {&#xA;  return fetch('/graphql', {&#xA;    method: 'POST',&#xA;    credentials: 'same-origin', // 启用 cookie&#xA;    headers: {&#xA;      'Content-Type': 'application/json',&#xA;    }, // Add authentication and other headers here&#xA;    body: JSON.stringify({&#xA;      query: operation.text, // GraphQL text from input&#xA;      variables,&#xA;    }),&#xA;  }).then(response =&gt; {&#xA;    return response.json()&#xA;  })&#xA;}&#xA;&#xA;const network = Network.create(fetchQuery)&#xA;</code></pre>&#xA;&#xA;<p>How can I combine both into a single object <em>network</em> (is there a special constructor or something like that)?</p>&#xA;&#xA;<p>I'd like to have a support for both middlewares and the query as well. </p>&#xA;",11683051,,,,2019-07-12 23:29:17,How do I combine both environments for Relay Modern?,<javascript><graphql><relayjs><relaymodern>,1,1,0,2019-07-09 19:45:44
57015013,2,,56959593,0,,"<p>Just use <code>react-relay-network-modern</code></p>&#xA;&#xA;<p>This should work same as your fetchQuery function:</p>&#xA;&#xA;<pre><code>import { urlMiddleware, RelayNetworkLayer } from 'react-relay-network-modern'&#xA;&#xA;const network = new RelayNetworkLayer([&#xA;  urlMiddleWare({&#xA;    credentials: 'same-origin',&#xA;    headers: {&#xA;      'Content-Type': 'application/json'&#xA;    }&#xA;  })&#xA;])&#xA;</code></pre>&#xA;",3739087,,,,2019-07-12 23:29:17,"",,0,0,0,2019-07-12 23:29:17
57017055,2,,57016978,1,,<p>You should use <code>http://prisma:4466</code> as the connection URL in your web container. As your containers will be connected to the same network the name of the container will be DNS name and therefor will be resolved to IP of concrete container.</p>&#xA;,4956907,,,,2019-07-13 07:25:39,"",,0,0,0,2019-07-13 07:25:39
57018607,2,,57016978,1,,"<p>The <code>localhost</code> in your Node application points to the container running Node itself, not your host machine. Replace <code>http://localhost:4466</code> with <code>http://prisma:4466</code> or <code>http://&lt;host-machine-local-ip&gt;:4466</code></p>&#xA;&#xA;<p>To get host IP on a Unix machine run:</p>&#xA;&#xA;<pre><code>hostname -i&#xA;</code></pre>&#xA;&#xA;<p>Or</p>&#xA;&#xA;<pre><code>ifconfig | awk '/broadcast/ {print $2}' &#xA;</code></pre>&#xA;",7805254,,,,2019-07-13 11:12:29,"",,0,0,0,2019-07-13 11:12:29
57027535,1,,,2,319,"<p>I already have working application with Apollo graphQl. And now I need to use SSR. I build backend node application with babel (without webpack).</p>&#xA;&#xA;<p>In this case I need my application to build with babel as well as with webpack (hydration version for SSR)</p>&#xA;&#xA;<p>In the no ssr version of application I had webpack loader:</p>&#xA;&#xA;<pre><code>  {&#xA;    test: /\.(graphql|gql)$/,&#xA;    exclude: /node_modules/,&#xA;    loader: 'graphql-tag/loader',&#xA;  },&#xA;</code></pre>&#xA;&#xA;<p>Application worked fine with this loader.</p>&#xA;&#xA;<p>Then I removed this loader from webpack, and added babel plugin: </p>&#xA;&#xA;<pre><code>  ""plugins"": [&#xA;    ""import-graphql"",&#xA;    ""graphql-tag"", &#xA;    ....&#xA;</code></pre>&#xA;&#xA;<p>But I have an error:</p>&#xA;&#xA;<pre><code>invariant.esm.js:12 Uncaught (in promise) Invariant Violation: Argument of {&#xA;  cities {&#xA;    items {&#xA;      id&#xA;      logo&#xA;      name&#xA;      description&#xA;    }&#xA;  }&#xA;} passed to parser was not a valid GraphQL DocumentNode. You may need to use 'graphql-tag' or another method to convert your operation into a document&#xA;</code></pre>&#xA;&#xA;<p>I think, I have forgotten something, but I don't know what. Do you now, what should I do?</p>&#xA;&#xA;<p>P.S The structure of code is: </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/eqfXn.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eqfXn.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>where index.js imports as <code>import CITIES_QUERY from './query.gql';</code></p>&#xA;",8457357,,8457357,2019-07-14 14:33:00,2019-07-14 14:33:00,Precompile graphql using babel instead of webpack,<webpack><graphql><babeljs><apollo><server-side-rendering>,0,0,0,2019-07-14 12:39:54
57065410,2,,57065269,1,,"<p>From the <a href=""https://www.apollographql.com/docs/react/essentials/local-state/"" rel=""nofollow noreferrer"">docs</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>If you're interested in integrating local state handling capabilities with Apollo Client &lt; 2.5, please refer to our (now deprecated) apollo-link-state project. As of Apollo Client 2.5, local state handling is baked into the core, which means it is no longer necessary to use  apollo-link-state</p>&#xA;</blockquote>&#xA;&#xA;<p>The <code>clientState</code> config option was only used with <code>apollo-link-state</code>. You need to add the resolvers directly to the config as shown in the docs:</p>&#xA;&#xA;<pre><code>new ApolloClient({&#xA;  uri: '/graphql',&#xA;  resolvers: { ... },&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>Also note that there is no <code>defaults</code> option anymore -- the cache should be initialized by calling <code>writeData</code> directly on the cache instance (see <a href=""https://www.apollographql.com/docs/react/essentials/local-state/#initializing-the-cache"" rel=""nofollow noreferrer"">here</a>).</p>&#xA;&#xA;<p>I would suggest going through the latest docs and avoiding any examples from external sources (like existing repos or tutorials) since these may be outdated.</p>&#xA;&#xA;<p>Note: As of version 3.0, <code>writeData</code> was removed in favor of <code>writeFragment</code> and <code>writeQuery</code>.</p>&#xA;",6024220,,6024220,2020-04-02 11:56:25,2020-04-02 11:56:25,"",,0,5,0,2019-07-16 21:03:45
57069358,2,,57037413,1,,"<p>As I observe the issue I find that the query is running every time after the mutation but instead of fetching the data from the server(Network) it is fetching the data from the cache memory that's why even after checking the network tab of browser console I was not getting any request for it which made me unable to pinpoint the issue but I was getting the result from the previously-stored result then after googling a lot I find that there is a way to disable the fetch from cache memory so I tried it over and over again until I get it done.</p>&#xA;&#xA;<p>all I did is changed the query from this</p>&#xA;&#xA;<pre><code>export const Query = async (query, variables) =&gt;&#xA;  client.query({&#xA;    query: gql`&#xA;      ${query}&#xA;    `,&#xA;     variables&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>to this</p>&#xA;&#xA;<pre><code>export const Query = async (query, variables) =&gt;&#xA;  client.query({&#xA;    query: gql`&#xA;    ${query}&#xA;   `,&#xA;   variables,&#xA;  fetchPolicy: 'network-only'&#xA; });&#xA;</code></pre>&#xA;",8552376,,8552376,2019-07-23 09:21:56,2019-07-23 09:21:56,"",,0,0,0,2019-07-17 05:57:53
57126969,2,,57104464,3,,"<p>Issue is resolved.</p>&#xA;&#xA;<p>We had kubernetes ingress layer on top of our <code>Apollo Server</code> and that's what was causing changes not to reflect. After we enabled <code>cors</code> on nginx ingress, we were able to make successful calls.</p>&#xA;",4509875,,,,2019-07-20 17:16:58,"",,0,0,0,2019-07-20 17:16:58
57131247,1,57131274,,0,1035,"<p>I am getting the following error when accessing graphql endpoint of flask application. </p>&#xA;&#xA;<blockquote>&#xA;  <p><a href=""http://0.0.0.0:5000/graphql"" rel=""nofollow noreferrer"">http://0.0.0.0:5000/graphql</a></p>&#xA;</blockquote>&#xA;&#xA;<pre><code>TypeError: 'NoneType' object is not callable&#xA;[20190721 13:00:12:974 _internal.py:88 ERROR] Error on request:&#xA;Traceback (most recent call last):&#xA;  File ""/usr/local/python/python-2.7/std/lib/python2.7/site-packages/werkzeug/serving.py"", line 270, in run_wsgi&#xA;    execute(self.server.app)&#xA;  File ""/usr/local/python/python-2.7/std/lib/python2.7/site-packages/werkzeug/serving.py"", line 258, in execute&#xA;    application_iter = app(environ, start_response)&#xA;  File ""/usr/local/python/python-2.7/std/lib/python2.7/site-packages/flask/app.py"", line 1997, in __call__&#xA;    return self.wsgi_app(environ, start_response)&#xA;  File ""/usr/local/python/python-2.7/std/lib/python2.7/site-packages/flask/app.py"", line 1989, in wsgi_app&#xA;    return response(environ, start_response)&#xA;TypeError: 'NoneType' object is not callable&#xA;</code></pre>&#xA;&#xA;<p>Application code:</p>&#xA;&#xA;<pre><code>import graphene&#xA;from   apis.graphql.schema.queries \&#xA;                                import Query&#xA;from   flask                    import Flask&#xA;from   flask_graphql            import GraphQLView&#xA;&#xA;import time&#xA;from prometheus_client import Counter, Histogram, start_http_server&#xA;&#xA;&#xA;FLASK_REQUEST_LATENCY = Histogram('flask_request_latency_seconds', 'Flask Request Latency', ['method', 'endpoint'])&#xA;FLASK_REQUEST_COUNT = Counter('flask_request_count', 'Flask Request Count', ['method', 'endpoint', 'http_status'])&#xA;&#xA;&#xA;def get_options():&#xA;    """"""Function to get the options passed via command line.""""""&#xA;    from cmdline.parse import OptionParser&#xA;    parser = OptionParser()&#xA;&#xA;    # Add the port option with default value 5000&#xA;    parser.add_option(&#xA;        '-port',&#xA;        required=False,&#xA;        type=int,&#xA;        default=5002,&#xA;        help='Port on which to listen for incoming requests. '&#xA;             'Defaults to 5000.'&#xA;    )&#xA;&#xA;    opts, args = parser.parse_args()&#xA;    return opts&#xA;&#xA;&#xA;def before_request():&#xA;    request.start_time = time.time()&#xA;&#xA;&#xA;def after_request(response):&#xA;    request_latency = time.time() - request.start_time&#xA;    FLASK_REQUEST_LATENCY.labels(request.method, request.path).observe(request_latency)&#xA;    FLASK_REQUEST_COUNT.labels(request.method, request.path, response.status_code).inc()&#xA;&#xA;def monitor(app, port, addr=''):&#xA;    app.before_request(before_request)&#xA;    app.after_request(after_request)&#xA;    start_http_server(port, addr)&#xA;&#xA;&#xA;if __name__ == '__main__':&#xA;    # Get the command line options.&#xA;    options = get_options()&#xA;&#xA;    # Create an instance of the Flask class for the web app.&#xA;    app = Flask(__name__)&#xA;&#xA;    # Adds the endpoint /graphql.&#xA;    app.add_url_rule(&#xA;        '/graphql',&#xA;        view_func=GraphQLView.as_view(&#xA;            'graphql', schema=graphene.Schema(Query), graphiql=True&#xA;        )&#xA;    )&#xA;&#xA;    monitor(app, options.port)&#xA;&#xA;    app.run(&#xA;        host = '0.0.0.0',&#xA;        port = 5000,&#xA;        threaded=True&#xA;        )&#xA;</code></pre>&#xA;&#xA;<p>From the above code if I remove monitor decoration of app then flask app works perfectly fine and the URL /graphql opens graphene UI. But as soon as I add monitor function then it throws the above error.</p>&#xA;",7707677,,,,2019-07-21 07:41:14,'NoneType' object is not callable - while starting Flask application,<python><flask><graphql><prometheus>,1,1,0,2019-07-21 07:35:37
57192515,2,,54411045,0,,"<p>Although answered late, your should have given more info on your backend-api framework i.e. which framework are you running? I believe frontend is nextjs. All the same i thik your problem is with nginx configuration. Please <code>proxy_pass</code> your url via a port number and not a <code>\location</code> because they are two different web services. Try this configuration, notice the headers. Also configure your OS to listen port 8030.</p>&#xA;&#xA;<pre>&#xA;&#xA;server {&#xA;  listen 80;&#xA;&#xA;  location / {&#xA;    proxy_pass http://client;&#xA;    proxy_pass_request_headers on;&#xA;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;    proxy_set_header Host $http_host;&#xA;    proxy_set_header X-Forwarded-Proto $scheme;&#xA;    proxy_redirect off;&#xA;  }&#xA;}&#xA;&#xA;server {&#xA;  listen 8030;&#xA;&#xA;  location / {&#xA;    proxy_pass http://api;&#xA;    proxy_pass_request_headers on;&#xA;    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;    proxy_set_header Host $http_host;&#xA;    proxy_set_header X-Forwarded-Proto $scheme;&#xA;    proxy_redirect off;&#xA;  }&#xA;}&#xA;&#xA;</pre> &#xA;",3396327,,,,2019-07-24 23:39:02,"",,0,0,0,2019-07-24 23:39:02
57208686,2,,57191534,2,,"<p>I believe the problem is that you are using <code>localhost</code> as your server URL. That works when your browser is running on the same machine that is hosting the servers, but that's not the case anymore when you are running the client on a mobile device. Try using the local or public IP of the machine being used to host the server in your client URL, like <code>http://192.168.0.8:9000/</code>.</p>&#xA;&#xA;<p>This answer has an explanation for how to get your local IP address on linux: <a href=""https://stackoverflow.com/a/13322549/11804768"">https://stackoverflow.com/a/13322549/11804768</a></p>&#xA;",11804768,,,,2019-07-25 19:06:30,"",,0,1,0,2019-07-25 19:06:30
57226330,2,,54502262,0,,"<p>One way to do it in Javascript is using the fetch api. Something like this is how I've done it in the past. You can test it out by copying the code below and then pasting it into Chrome Dev Tools and running it. </p>&#xA;&#xA;<pre><code>async function makeGraphQlQuery(urlToResource) {&#xA;    const queryObject = {&#xA;      query:&#xA;        '{ trip( from: {place: ""NSR:StopPlace:5533"" }, to: {place:""NSR:StopPlace:5532""}) {tripPatterns{duration}} }',&#xA;    };&#xA;    const response = await fetch(urlToResource, {&#xA;      method: 'POST',&#xA;      headers: { 'Content-Type': 'application/json' },&#xA;      body: JSON.stringify(queryObject),&#xA;    });&#xA;&#xA;    const json = response.json();&#xA;&#xA;    return json;&#xA;}&#xA;&#xA;async function sendAsync() { &#xA;  const res = await makeGraphQlQuery('https://api.entur.io/journey-planner/v2/graphql');&#xA;  console.log(res); &#xA;}&#xA;sendAsync().catch(err =&gt; console.log('Error in query', err));&#xA;</code></pre>&#xA;",11273336,,11273336,2019-07-26 20:02:26,2019-07-26 20:02:26,"",,0,0,0,2019-07-26 19:57:16
57243914,1,,,1,33,"<p>So I have a lambda graphql endpoint set up at <code>app.mydomain.com/graphql</code></p>&#xA;&#xA;<p>The stack is made up of Apollo running on express, resolved by Sequelize, pointed at an RDS database.</p>&#xA;&#xA;<p>My main web app lambda endpoint is <code>app.mydomain.com/</code>, which is made up of express, vue, and the Apollo client. Going forward, I'll call this <em>the webserver</em></p>&#xA;&#xA;<p>With this setup, here are the things that work:</p>&#xA;&#xA;<ol>&#xA;<li><p>Site fetches data when graphql server and webserver are running locally.</p></li>&#xA;<li><p>Site fetches data when webserver is local, but pointed at production graphql endpoint.</p></li>&#xA;<li>Production graphql endpoint can fetch data via graphiql playground it serves at app.mydomain.com/graphiql.</li>&#xA;<li>Production graphql endpoint fetches data from my local machine via <code>curl</code>.</li>&#xA;</ol>&#xA;&#xA;<p>HOWEVER. When my webserver is running in production, it cannot fetch data form my graphql endpoint. The headers of the successful graphiql request and the unsuccessful web server request are completely identical, but the former returns HTTP status <code>200</code> and data, and the latter returns <code>502</code> and no data.</p>&#xA;&#xA;<p>How is this possible? Is there some kind of IAM or VPC setting I need to change to make one Lambda endpoint reach another?</p>&#xA;&#xA;<p>I'm kind of baffled since graphiql and off-domain requests seem to be working fine.</p>&#xA;",11767463,,,,2019-07-28 18:39:12,Lambda GraphQL endpoint works everywhere except another Lambda endpoint on the same domain,<express><aws-lambda><amazon-rds><apollo><serverless>,0,1,0,2019-07-28 18:39:12
57245478,1,,,3,1166,"<p>I'm relatively new to GraphQL.  I have a query like so:</p>&#xA;&#xA;<pre><code> query messages ($assetId: ID!) {&#xA;    messages (assetId: $assetId, offset: 0, limit: 3) {&#xA;      id&#xA;      text&#xA;      time&#xA;      sender {&#xA;        ...on Asset {&#xA;          id&#xA;          name&#xA;        }&#xA;        ...on Contact {&#xA;          id&#xA;          name&#xA;        }&#xA;      }&#xA;      conversation {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>which, when executed via a react-apollo <code>&lt;Query /&gt;</code> component, gives the error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Network error: Missing selection set for object of type Asset returned for query field sender</p>&#xA;</blockquote>&#xA;&#xA;<p>I have no idea why this would be considered a ""Network error"".</p>&#xA;&#xA;<p>According to <a href=""https://stackoverflow.com/a/54265804/1136527"">this answer</a>, the ""Missing Selection set"" refers to the fields requested inside a nested object, which would make sense except I'm clearly including fields on type ""Asset"" in the query above.</p>&#xA;&#xA;<p>Removing the <code>sender</code> fields such that the query looks like this:</p>&#xA;&#xA;<pre><code> query messages ($assetId: ID!) {&#xA;    messages (assetId: $assetId, offset: 0, limit: 3) {&#xA;      id&#xA;      text&#xA;      time&#xA;      sender&#xA;      conversation {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>changes the error to</p>&#xA;&#xA;<blockquote>&#xA;  <p>Network error: Missing selection set for object of type Conversation returned for query field conversation</p>&#xA;</blockquote>&#xA;&#xA;<p>and removing the fields from <code>conversation</code>, the query runs fine (although <code>{}</code> is returned for all <code>sender</code>/<code>conversation</code>s).</p>&#xA;&#xA;<p>Because the error moves to <code>conversation</code> when I effectively skip <code>sender</code>, I think this is unrelated to <code>sender</code> being a Union-type.</p>&#xA;&#xA;<p>I am running this query against an executable schema (via <a href=""https://www.apollographql.com/docs/graphql-tools/generate-schema/"" rel=""nofollow noreferrer""><code>makeExectuableSchema</code></a>) with types:</p>&#xA;&#xA;<pre><code>&#xA;type Asset {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;&#xA;type Contact {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;&#xA;union ConversationMember = Asset | Contact&#xA;&#xA;type Message {&#xA;  id: ID!&#xA;  sender: ConversationMember!&#xA;  conversation: Conversation!&#xA;  time: Time!&#xA;  text: String!&#xA;}&#xA;&#xA;type Conversation {&#xA;  id: ID!&#xA;  members: [ConversationMember!]!&#xA;  messages: [Message!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Am I misunderstanding something obvious?  I can't seem to explain this error in this situation.</p>&#xA;&#xA;<p>Edit:</p>&#xA;&#xA;<p>I am using apollo-boost and creating a client like so:</p>&#xA;&#xA;<pre><code>export default new ApolloClient({&#xA;  cache: new InMemoryCache({&#xA;    fragmentMatcher: new IntrospectionFragmentMatcher({&#xA;      introspectionQueryResultData: introspectionResult&#xA;    })&#xA;  }),&#xA;  link: new SchemaLink({ schema })&#xA;}));&#xA;</code></pre>&#xA;&#xA;<p>Because <code>union</code> types require an <code>IntrospectionFragmentMatcher</code>, I have to introspect the schema to get types.  Hence, I am creating a cache like so:</p>&#xA;&#xA;<pre><code>const query = gql`&#xA;  query {&#xA;    __schema {&#xA;      types {&#xA;        kind&#xA;        name&#xA;        possibleTypes {&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;...&#xA;&#xA;return new InMemoryCache({&#xA;  fragmentMatcher: new IntrospectionFragmentMatcher({&#xA;    introspectionQueryResultData: response.data&#xA;   })&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Interestingly, inspecting the result of the schema query, I see that everything has a <code>__typename</code> of <code>""__Type""</code>:</p>&#xA;&#xA;<pre><code>{kind: ""OBJECT"", name: ""Query"", possibleTypes: null, __typename: ""__Type""},&#xA;{kind: ""OBJECT"", name: ""Asset"", possibleTypes: null, __typename: ""__Type""},&#xA;{kind: ""OBJECT"", name: ""Contact"", possibleTypes: null, __typename: ""__Type""},&#xA;{kind: ""OBJECT"", name: ""Conversation"", possibleTypes: null, __typename: ""__Type""},&#xA;{kind: ""UNION"", name: ""ConversationMember"", possibleTypes: Array(2), __typename: ""__Type""},&#xA;{kind: ""OBJECT"", name: ""Message"", possibleTypes: null, __typename: ""__Type""}&#xA;</code></pre>&#xA;",1136527,,1136527,2019-07-28 23:23:12,2019-07-28 23:23:12,Missing selection set for object of type X returned for query field Y,<javascript><graphql><apollo><react-apollo><graphql-tools>,0,8,0,2019-07-28 22:39:15
57247095,1,57247614,,0,499,"<p>I have a custom schema I need to work with, here's a slightly abbreviated version:</p>&#xA;&#xA;<pre><code>schema {&#xA;  query: Query&#xA;}&#xA;&#xA;type Query {&#xA;  environment(locale: LocaleEnum!): Environment&#xA;}&#xA;&#xA;type Environment {&#xA;  articles(&#xA;    offset: Int = 0&#xA;    limit: Int = 20&#xA;  ): ArticleConnection!&#xA;}&#xA;&#xA;type ArticleConnection {&#xA;  total: Int!&#xA;  items: [Article!]&#xA;}&#xA;&#xA;type Article {&#xA;  id: ID!&#xA;  title: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I was able to get a list of article IDs by running</p>&#xA;&#xA;<pre><code>query {&#xA;  environment(locale: EN) {&#xA;    articles {&#xA;      total,&#xA;      items {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is it possible to filter on the article id? Like, I just want a single, specific article.</p>&#xA;",308851,,,,2019-07-29 05:25:45,GraphQL filtering on an embedded ID,<graphql>,1,2,0,2019-07-29 04:07:55
57263332,1,,,0,279,"<p>I'm trying the new GraphQL addition to Parse-Server. Tried to do a simple query but response is </p>&#xA;&#xA;<blockquote>&#xA;  <p>POST '[parse-server address]' net::ERR_ABORTED 400 (Bad Request)</p>&#xA;  &#xA;  <p>Access to fetch at '[parse-server address]' from origin '<a href=""http://localhost:3000"" rel=""nofollow noreferrer"">http://localhost:3000</a>' has been blocked by CORS policy: The value of the 'Access-Control-Allow-Origin' header in the response must not be the wildcard '*' when the request's credentials mode is 'include'.</p>&#xA;</blockquote>&#xA;&#xA;<p>The Parse GraphQL API guide did not state what is expected from request header, so I'm trying to figure out what should be added into the request header.</p>&#xA;&#xA;<p>Parse-Server version 3.6.0 running on heroku, client request from react 16.8.3 running on localhost.</p>&#xA;&#xA;<p>The request from GraphQL Console in Parse-Dashboard return the correct output with no error, so the parse-server setup should not be a problem. I've allowed CORS in the server and 'Access-Control-Allow-Origin' is set to '<a href=""http://localhost:3000"" rel=""nofollow noreferrer"">http://localhost:3000</a>'. I'm guessing the request header is missing some values so I added ""X-Parse-Application-Id"" &amp; ""X-Parse-Master-Key"".</p>&#xA;&#xA;<p>Simple client request using Lokka:</p>&#xA;&#xA;<p>client.query(<code>&#xA;  {&#xA;    query Health {&#xA;      health&#xA;    }&#xA;  }&#xA;</code>).then(result => {&#xA;  console.log(result.health);&#xA;});</p>&#xA;&#xA;<p>I expect the response should be 200 as in the GraphQL console, but response is 400 Bad Request.</p>&#xA;",3278069,,,,2019-07-30 01:51:09,POST request to parse-server mount with graphql return 400 Bad Request,<parse-platform><graphql>,0,3,0,2019-07-30 01:51:09
57268689,1,57355482,,3,5862,"<p>I am using NextJS with Material UI and Apollo. Although, everything is working properly but the warning is not going. It seems to me that a lot of Material UI components are using <strong>useLayoutEffect</strong> which is warned by React. The error is below.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Warning: useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See fb.me/react-uselayouteffect-ssr for common fixes.</p>&#xA;</blockquote>&#xA;",2060913,,502381,2019-08-05 11:38:51,2020-08-04 16:34:10,"How to fix this warning ""useLayoutEffect"" related warning?",<material-ui><react-hooks><next.js><react-apollo><server-side-rendering>,2,4,0,2019-07-30 09:40:10
57297441,2,,57295523,3,,<p>After check all my dependencies i saw that the command installed me the last version of @nestjs/graphql and my @nestjs/core was incompatible i needed to update my nestjs. Thanks a lot </p>&#xA;,8727275,,,,2019-07-31 19:09:15,"",,0,0,0,2019-07-31 19:09:15
57299335,1,57299517,,0,240,"<p>I got the <a href=""https://grandstack.io/"" rel=""nofollow noreferrer"">demo example from grand-stack</a> and was able to start up graphql, start up the Neo4J sandbox and populate the test database using </p>&#xA;&#xA;<pre><code>npm run seedDb &#xA;</code></pre>&#xA;&#xA;<p>However, when I try to write my own data entries to populate into a neo4j database, I cannot get the relation between nodes to work at all. The error message is the most non-useful message (and I believe it is from the apollo client, and is a status code 400 error). I simplified the code to the most simplest case to make it work, and it still does not. Here is the schema.graphql file:</p>&#xA;&#xA;<pre><code>  type Patient {&#xA;  id: ID!&#xA;  name: String&#xA;  reviews: [Review] @relation(name:""WROTE"", direction:""OUT"")&#xA;&#xA;}&#xA;&#xA;type Review {&#xA;  id: ID!&#xA;  stars: Int&#xA;  text: String&#xA;  date: Date&#xA;  user: Patient @relation(name: ""WROTE"", direction: ""IN"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and here is the seed-mutation.js file:</p>&#xA;&#xA;<pre><code>export default /* GraphQL */ `&#xA;  mutation {&#xA;    p1: CreatePatient(&#xA;      id: ""p1"", &#xA;      name: ""John Doe 1""&#xA;    ) {&#xA;      id&#xA;      name&#xA;    } &#xA;&#xA;   r1: CreateReview(id: ""r1"", stars: 4, text: ""Great IPA selection!"", date: { formatted: ""2016-01-03""}) {&#xA;      id&#xA;    }&#xA;&#xA;  ar1: AddUserReviews(from: { id: ""p1""}, to: { id: ""r1"" }) { from {id}}    &#xA;&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>When I do ""npm run seedDb"", this yields the error message:</p>&#xA;&#xA;<pre><code>{ Error: Network error: Response not successful: Received status code 400&#xA;    at new ApolloError (/Users/xxxx/Downloads/grand-stack-starter-master/api/node_modules/apollo-client/bundle.esm.js:60:28)&#xA;    at Object.error (/Users/xxxx/Downloads/grand-stack-starter-master/api/node_modules/apollo-client/bundle.esm.js:1032:48)&#xA;    at notifySubscription (/Users/xxxx/Downloads/grand-stack-starter-master/api/node_modules/zen-observable/lib/Observable.js:134:18)&#xA;    at onNotify (/Users/xxxx/Downloads/grand-stack-starter-master/api/node_modules/zen-observable/lib/Observable.js:165:3)&#xA;    at SubscriptionObserver.error (/Users/xxxx/Downloads/grand-stack-starter-master/api/node_modules/zen-observable/lib/Observable.js:224:7)&#xA;    at /Users/xxxx/Downloads/grand-stack-starter-master/api/node_modules/apollo-link-http/src/httpLink.ts:184:20&#xA;    at &lt;anonymous&gt;&#xA;    at process._tickDomainCallback (internal/process/next_tick.js:228:7)&#xA;  graphQLErrors: [],&#xA;  networkError: &#xA;   { ServerError: Response not successful: Received status code 400&#xA;    at Object.exports.throwServerError (/Users/xxxx/Downloads/grand-stack-starter-master/api/node_modules/apollo-link-http-common/src/index.ts:114:17)&#xA;    at /Users/xxxx/Downloads/grand-stack-starter-master/api/node_modules/apollo-link-http-common/src/index.ts:145:11&#xA;    at &lt;anonymous&gt;&#xA;    at process._tickDomainCallback (internal/process/next_tick.js:228:7)&#xA;     name: 'ServerError',&#xA;     response: &#xA;      Response {&#xA;        size: 0,&#xA;        timeout: 0,&#xA;        [Symbol(Body internals)]: [Object],&#xA;        [Symbol(Response internals)]: [Object] },&#xA;     statusCode: 400,&#xA;     result: { errors: [Array] } },&#xA;  message: 'Network error: Response not successful: Received status code 400',&#xA;  extraInfo: undefined }&#xA;</code></pre>&#xA;&#xA;<p>I started with multiple complex codes and this is pretty much the most stripped down version. When I run the seedDB command after the seed-mutation.js file was modified to:</p>&#xA;&#xA;<pre><code>export default /* GraphQL */ `&#xA;  mutation {&#xA;    p1: CreatePatient(&#xA;      id: ""p1"", &#xA;      name: ""John Doe 1""&#xA;    ) {&#xA;      id&#xA;      name&#xA;    } &#xA;&#xA;   r1: CreateReview(id: ""r1"", stars: 4, text: ""Great IPA selection!"", date: { formatted: ""2016-01-03""}) {&#xA;      id&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>the database gets populated, however the two nodes are not connected to each other, as expected (basically, this is the code with the AddUserReviews removed). How do I build the relation between the nodes through using graphql and seedDb? What am I missing?</p>&#xA;",8891341,,,,2019-07-31 22:17:38,"Why does ""run seedDb"" fail when I add in relations between nodes moving from graphql to neo4j",<neo4j><graphql><apollo><grandstack>,1,0,0,2019-07-31 21:55:50
57299517,2,,57299335,0,,"<p>You can use GraphQL Playground to inspect the GraphQL API (in the ""Docs"" tab):</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/bC6Gi.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bC6Gi.png"" alt=""GraphQL Playground type definitions""></a></p>&#xA;&#xA;<p>to ensure the mutations you are calling have the correct name and arguments. From inspecting the schema, it looks like instead of <code>AddUserReviews</code>, you want <code>AddPatientReviews</code>?</p>&#xA;",2954199,,,,2019-07-31 22:17:38,"",,0,1,0,2019-07-31 22:17:38
57359576,2,,57298543,0,,"<p>You can't change log format using <code>kubectl</code> but you could change logging driver in your container runtime, for example <a href=""https://docs.docker.com/config/containers/logging/json-file/"" rel=""nofollow noreferrer"">docker</a>.</p>&#xA;",2898919,,,,2019-08-05 13:25:23,"",,0,0,0,2019-08-05 13:25:23
57367926,2,,52423012,1,,"<p>I use Apollo Client 2.x, and Apollo Boost may be the same.&#xA;I had the same problem with Apollo Client 2.x, and below was the solution for me.&#xA;In the root file where you configure your Apollo (e.g. App.js):</p>&#xA;&#xA;<pre><code>cache.writeData({data : defaultData });  # I assume you already have this to initialise your default data.&#xA;&#xA;# Then, you just add below underneath.&#xA;client.onResetStore(() =&gt; {&#xA;  cache.writeData({data : defaultData });&#xA;});&#xA;&#xA;const App = () =&gt; (...&#xA;</code></pre>&#xA;",5089079,,,,2019-08-06 01:51:33,"",,0,0,0,2019-08-06 01:51:33
57369658,1,57406237,,0,996,"<p>I am trying to call a network call(GraphQL - Query) using graphQL into flutter, I need to know exact way to acheive this.</p>&#xA;",4693555,,,,2019-08-08 06:16:52,"How to call a graphQl ""query"" from dart file",<flutter><dart><graphql><mutation>,1,0,0,2019-08-06 05:51:28
57393882,1,,,2,346,"<p>We have a Rails application with GraphQL API in one GIT repository, and React frontend application in another. Both backend and frontend have CI and are deployed separately. But both backend and frontend are still under heavy development and often our staging server doesn't work, because deployment is not synchronized and we don't test the whole application - we test API and we test frontend without API.</p>&#xA;&#xA;<p>What is the best way to deploy frontend and backend only when they are synchronized, I mean when new versions doesn't break functionalities? I thought about third repository with backend and frontend included as GIT modules, acceptance tests and deploying both sides at once. But maybe there is simpler solution? Maybe some versioning?</p>&#xA;",6459331,,,,2019-08-07 16:31:48,How to keep GraphQL API and frontend synchronized on a staging server?,<api><deployment><graphql><versioning><api-design>,1,0,0,2019-08-07 11:53:23
57404971,1,,,2,168,<p>I want to have multiple queries in one network request. I have put all my queries in vue Apollo but I get this error when data revived(I will get the data in network tab but I cant access it!)</p>&#xA;&#xA;<pre><code>error: vue-apollo.esm.js?522d:842 Missing query attribute on result &#xA;</code></pre>&#xA;&#xA;<p>code: </p>&#xA;&#xA;<pre><code>apollo: {&#xA;    query: gql`&#xA;             query {&#xA;                 query1 {someValue}&#xA;                 query2 {someValue}&#xA;             }&#xA;          `&#xA;}&#xA;</code></pre>&#xA;,8978617,,3708153,2019-08-08 07:07:11,2019-08-08 07:07:11,Error in Vue graphql: Missing query attribute on result,<graphql><apollo><vue-apollo><graphql-tag>,0,0,0,2019-08-08 03:52:27
57414828,2,,49184614,3,,"<p>I know it has been a while but in case anyone ends up here, there is an npm package called <a href=""https://www.npmjs.com/package/graphql-list-fields"" rel=""nofollow noreferrer"">graphql-list-fields</a> by <a href=""https://github.com/jakepusateri"" rel=""nofollow noreferrer"">Jake Pusareti</a> that does this. It handles fragments and skip and include directives.&#xA;you can also check the code <a href=""https://github.com/jakepusateri/graphql-list-fields/blob/master/index.js"" rel=""nofollow noreferrer"">here</a>. </p>&#xA;",3700772,,,,2019-08-08 14:22:45,"",,0,0,0,2019-08-08 14:22:45
57433980,2,,57317233,0,,"<p>So a few days ago I made some progress and I've kept looking around and trying different things to make sure this wasn't a fluke or anything. This might be obvious to others but apparently you need to make sure the device you're running the app on is connected to the same network that's hosting the GraphQL server. If they aren't on the same network then the GraphQL server never even receives the query and the app sends the descriptive error described above. </p>&#xA;&#xA;<p>The odd thing is I would sometimes get that error again even when the device was connected to the same network. The only way to solve this was to disconnect my computer from the network, even having to go as far as to forget the network, and then reconnect. Doing this has worked for me so far.   </p>&#xA;&#xA;<p>Now I'm stuck with a 422 error which is a whole other issue now that I'm trying to solve. </p>&#xA;",8904399,,,,2019-08-09 16:25:20,"",,0,0,0,2019-08-09 16:25:20
57448868,1,,,0,74,<p>I'm running a Create React App project locally which uses Apollo Client. I'm attempting to connect to a live GraphQL API.</p>&#xA;&#xA;<p>When I navigate to the GraphQL API in my browser it works. I get the GraphQL playground with no errors. </p>&#xA;&#xA;<p>When I try to use the endpoint in Apollo Client I'm getting a 400 Bad Request error. </p>&#xA;&#xA;<p>If I run a query with the Apollo Dev Tools in Chrome it works fine. </p>&#xA;&#xA;<p>It's been a long time since I worked on this project but it used to work fine so I'm not sure what's changed. </p>&#xA;,467875,,467875,2019-08-11 09:42:03,2019-08-12 07:41:18,400 error in Create React App / Apollo Client running locally attempting to access GraphQL API,<create-react-app><react-apollo>,1,0,0,2019-08-11 09:35:56
57449518,2,,57444135,0,,"<p>The GraphQL playground allows to send GraphQL queries/mutations to your GraphQL server. You can see the requests that are send using the network tab of a browser dev tools.</p>&#xA;&#xA;<p>For example, if a server is in running at the following address <a href=""http://localhost:4000/graphql"" rel=""nofollow noreferrer"">http://localhost:4000/graphql</a>, sending a query/mutation, a XHR request will be sent to it. In the <strong>Request Payload</strong> of the <strong>Headers</strong> section there is the query/mutation itself. </p>&#xA;&#xA;<p>In the <strong>Response</strong> section you can see the returned response. </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/ItVe4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ItVe4.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>You can start having a look at the returned response of your query/mutation. Perhaps there is something wrong in the related resolve function in GraphQL.</p>&#xA;",3881320,,,,2019-08-11 11:17:21,"",,0,1,0,2019-08-11 11:17:21
57450647,2,,52949515,1,,"<p>The cause for this problem is that parceljs tries to find the source files from the source maps. The files are existent you can check that by simply looking into the distributed folder. I do not know why the warnings are shown. However you are not alone with that problem see: <a href=""https://github.com/parcel-bundler/parcel/issues/2185"" rel=""nofollow noreferrer"">https://github.com/parcel-bundler/parcel/issues/2185</a></p>&#xA;&#xA;<p>To suppress the warnings you can use a CLI option: <code>--log-level 1</code>. However keep in mind that you will suppress all warnings, which I do not recommend!</p>&#xA;&#xA;<p>If anyone is coming across the error: <code>Property name expected type of string but got null</code> you can use the following options to solve that problem: <code>npx parcel watch ./server/src/YOUR_SOURCE_INDEX --out-dir ./YOUR_DESTINATION --no-hmr --target node</code></p>&#xA;&#xA;<p>Also there is an issue for that too: <a href=""https://github.com/apollographql/apollo-server/issues/2453"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-server/issues/2453</a></p>&#xA;",4457744,,,,2019-08-11 14:07:22,"",,0,0,0,2019-08-11 14:07:22
57464422,2,,57454016,8,,"<p>Your client configuration is missing a <code>cache</code>:</p>&#xA;&#xA;<pre><code>const client = new ApolloClient({&#xA;  link: authLink.concat(httpLink),&#xA;  cache: new InMemoryCache(), // &lt;-- ADD ME&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>This is the <a href=""https://github.com/apollographql/apollo-client/blob/7eaf4132cd2cd6244260777799406aaa03fcf377/packages/apollo-client/src/ApolloClient.ts#L139"" rel=""noreferrer"">actual error</a> you're seeing:</p>&#xA;&#xA;<blockquote>&#xA;  <p>In order to initialize Apollo Client, you must specify 'link' and 'cache' properties in the options object.&#xA;  These options are part of the upgrade requirements when migrating from Apollo Client 1.x to Apollo Client 2.x.&#xA;  For more information, please visit: <a href=""https://www.apollographql.com/docs/tutorial/client.html#apollo-client-setup"" rel=""noreferrer"">https://www.apollographql.com/docs/tutorial/client.html#apollo-client-setup</a></p>&#xA;</blockquote>&#xA;&#xA;<p>Invariant errors are intentionally obfuscated in production. I'm not sure why you would be seeing that behavior locally but maybe Nuxt is setting <code>NODE_ENV</code> to <code>production</code> at some point before that code evaluates.</p>&#xA;",6024220,,,,2019-08-12 15:52:22,"",,0,1,0,2019-08-12 15:52:22
57469681,1,,,0,118,"<p>My project is failing because one of the tasks in  the project is failing. I don't think its the code since the project is successfully building in another machine. </p>&#xA;&#xA;<p>I have tried the following:&#xA;1> making sure there is no proxy setting. Its currently set to ""Automatically detect settings""&#xA;2> Making sure the environment variables do not have any specific ""HTTP_PROXY"" or ""HTTPS_PROXY"" setting. &#xA;3> Uninstalling nodejs from machine. &#xA;4> Restarting machine. </p>&#xA;&#xA;<p>Error message I am getting is: </p>&#xA;&#xA;<blockquote>&#xA;  <p>Task :location:installApolloCodegen FAILED</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>npm ERR! Windows_NT 10.0.18362&#xA;npm ERR! argv ""C:\\Users\\&lt;user_name&gt;\\&lt;Project_Name&gt;\\common\\location\\.gradle\\nodejs\\node-v6.7.0-win-x64\\node.exe"" &#xA;""C:\\Users\\&lt;user_name&gt;\\&lt;project_name&gt;\\common\\location\\.gradle\\nodejs\\node-v6.7.0-win-x64\\node_modules\\npm\\bin\\npm-cli.js"" ""install"" ""apollo-codegen@0.19.1"" ""--save"" ""--save-exact""&#xA;npm ERR! node v6.7.0&#xA;npm ERR! npm  v3.10.3&#xA;npm ERR! code ECONNRESET&#xA;&#xA;npm ERR! network tunneling socket could not be established, &#xA;cause=getaddrinfo ENOTFOUND 8888 8888:80&#xA;npm ERR! network This is most likely not a problem with npm itself&#xA;npm ERR! network and is related to network connectivity.&#xA;npm ERR! network In most cases you are behind a proxy or have bad network &#xA;settings.&#xA;npm ERR! network&#xA;npm ERR! network If you are behind a proxy, please make sure that the&#xA;npm ERR! network 'proxy' config is set properly.  See: 'npm help config'&#xA;&#xA;npm ERR! Please include the following file with any support request:&#xA;npm ERR!     C:\Users\&lt;user_name&gt;\ &#xA;&lt;project_name&gt;\common\location\build\apollo-codegen\npm-debug.log&#xA;</code></pre>&#xA;&#xA;<p>Appreciate any help/debugging tips. Thanks!</p>&#xA;",5787136,,,,2019-08-13 02:39:06,Task in Android Studio project is failing with getaddrinfo ENOTFOUND 8888 8888:80 error,<android-studio><npm><apollo><codegen>,1,0,0,2019-08-13 00:15:56
57475304,2,,57434157,2,,"<p>Solved by migrating to official @apollo/react-hooks bindings, since I was using <a href=""https://github.com/trojanowski/react-apollo-hooks"" rel=""nofollow noreferrer"">https://github.com/trojanowski/react-apollo-hooks</a></p>&#xA;",1085411,,,,2019-08-13 09:54:41,"",,0,0,0,2019-08-13 09:54:41
57478374,1,57479853,,0,132,"<p>I could use some direction and tool recommendations. I would like to setup and configure <strong>webpack</strong> for this React app that has both <strong>client</strong> and <strong>server</strong> folders and is using <strong>Express.js and GraphQL</strong>.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/dRXzp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/dRXzp.png"" alt=""React Client and Server""></a></p>&#xA;&#xA;<p>Someone recommended that I run webpack twice with two configurations:  one for the frontend, one for the backend. But is this the most optimized performance and quickest build?</p>&#xA;&#xA;<p>See the App.js file has Mongo, Express.js and GraphQL setup:&#xA;<a href=""https://github.com/iamshaunjp/graphql-playlist/blob/lesson-36/server/app.js"" rel=""nofollow noreferrer"">https://github.com/iamshaunjp/graphql-playlist/blob/lesson-36/server/app.js</a></p>&#xA;&#xA;<p><a href=""https://github.com/iamshaunjp/graphql-playlist/tree/lesson-36"" rel=""nofollow noreferrer"">https://github.com/iamshaunjp/graphql-playlist/tree/lesson-36</a></p>&#xA;&#xA;<p>Do you have any recommended tutorials that match this app setup?</p>&#xA;&#xA;<p>Thank you!</p>&#xA;",0,user1426442,,,2019-08-13 14:25:38,"How do I configure Webpack for React app using Express.js, GraphQL, client and server folders?",<reactjs><express><webpack><graphql>,1,0,0,2019-08-13 13:07:20
57501758,1,57600046,,2,2116,"<p>I am using nuxt and apollo together with: <a href=""https://github.com/nuxt-community/apollo-module"" rel=""nofollow noreferrer"">https://github.com/nuxt-community/apollo-module</a></p>&#xA;&#xA;<p>I have a working GraphQL query (tested in GraphiQL):&#xA;(Because I want to fetch the info about my page and also some general SEO information)</p>&#xA;&#xA;<pre><code>{&#xA;  entries(section: [pages], slug: ""my-page-slug"") {&#xA;    slug&#xA;    title&#xA;  }&#xA;  seomatic(uri: ""/"") {&#xA;    metaTitleContainer&#xA;    metaTagContainer&#xA;    metaLinkContainer&#xA;    metaScriptContainer&#xA;    metaJsonLdContainer&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to fetch this data as well with apollo in nuxt:</p>&#xA;&#xA;<p>So I tried:</p>&#xA;&#xA;<pre><code>&lt;script&gt;&#xA;import page from '~/apollo/queries/page'&#xA;import seomatic from '~/apollo/queries/seomatic'&#xA;&#xA;export default {&#xA;  apollo: {&#xA;    entries: {&#xA;      query: page,&#xA;      prefetch: ({ route }) =&gt; ({ slug: route.params.slug }),&#xA;      variables() {&#xA;        return { slug: this.$route.params.slug }&#xA;      }&#xA;    },&#xA;    seomatic: {&#xA;      query: seomatic,&#xA;      prefetch: true&#xA;    }&#xA;  },&#xA;…&#xA;</code></pre>&#xA;&#xA;<p>If I do that I will get an error message:</p>&#xA;&#xA;<pre><code>GraphQL error: Cannot query field ""seomatic"" on type ""Query"".&#xA;</code></pre>&#xA;&#xA;<p>I then found this issue&#xA;<a href=""https://github.com/apollographql/apollo-tooling/issues/648"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-tooling/issues/648</a>&#xA;and I would like to know if ths could be a problem of the apollo nuxt module.&#xA;Because following that fix indicated in the issue does not resolve anything.</p>&#xA;&#xA;<p>I further tried to combine the two calls into one:</p>&#xA;&#xA;<pre><code>fragment SeoMaticFragment on Root {&#xA;  seomatic(uri: ""/"") {&#xA;    metaTitleContainer&#xA;    metaTagContainer&#xA;    metaLinkContainer&#xA;    metaScriptContainer&#xA;    metaJsonLdContainer&#xA;  }&#xA;}&#xA;&#xA;query myQuery($slug: String!) {&#xA;  entries(section: [pages], slug: $slug) {&#xA;    slug&#xA;    title&#xA;  }&#xA;&#xA;  SeoMaticFragment&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>~/apollo/queries/page.gql</code></p>&#xA;&#xA;<p>But this would first throw an error</p>&#xA;&#xA;<blockquote>&#xA;  <p>fragment Unknown type ""Root""</p>&#xA;</blockquote>&#xA;&#xA;<ol>&#xA;<li>So what is the best way to combine?</li>&#xA;<li>Why are the requests failing</li>&#xA;<li>is there an option to activate batching like described here: <a href=""https://blog.apollographql.com/query-batching-in-apollo-63acfd859862"" rel=""nofollow noreferrer"">https://blog.apollographql.com/query-batching-in-apollo-63acfd859862</a></li>&#xA;</ol>&#xA;&#xA;<p>-</p>&#xA;&#xA;<pre><code>const client = new ApolloClient({&#xA; // ... other options ...&#xA; shouldBatch: true,&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>thank you so much in advance.&#xA;Cheers</p>&#xA;",1121268,,,,2020-01-17 19:27:46,Possible to combine apollo queries (within nuxt?),<javascript><vue.js><graphql><nuxt.js><apollo>,1,0,0,2019-08-14 20:39:58
57502716,1,57504242,,0,46,"<p>I have a linux machine assigned to me on AWS cloud and I am running my SpringBoot application in a docker container inside <strong>this</strong> linux machine on AWS cloud. To hit this application's graphQL endpoint from my windows laptop what host name or URL should I use? &#xA;and how can I frame it?</p>&#xA;&#xA;<p>In general if this application is running in my local, I will use something like <a href=""http://localhost:8080/graphQL"" rel=""nofollow noreferrer"">http://localhost:8080/graphQL</a>. </p>&#xA;&#xA;<p>The DockerFile for this application has this command -> EXPOSE 8080.</p>&#xA;&#xA;<p>I am confused because there is a linux machine ip address and also container ip address and I don't know which one to use, so I tried both.</p>&#xA;&#xA;<p>On that linux machine I typed 'ip address' on its terminal and it is throwing me bunch of information and I am not sure which one is my ip address.</p>&#xA;&#xA;<p>To get ip address of container I used below command and it returned me some address. I used it <a href=""https://172.17.5.3:8080/graphql"" rel=""nofollow noreferrer"">https://172.17.5.3:8080/graphql</a> from my windows laptop but it is not returning the response.</p>&#xA;&#xA;<pre><code>    docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}} &#xA;    {{end}}' container_name_or_id&#xA;</code></pre>&#xA;&#xA;<p>Please let me know for any additional information.</p>&#xA;",5262116,,,,2019-08-15 02:36:36,How to frame my URL to send GraphQL request to the application running inside a container on linux machine from windows machine?,<linux><docker><graphql><containers><citrix>,1,0,0,2019-08-14 22:13:52
57504242,2,,57502716,1,,"<blockquote>&#xA;  <p>The DockerFile for this application has this command -> EXPOSE 8080.</p>&#xA;</blockquote>&#xA;&#xA;<p>The <code>EXPOSE</code> directive doesn't really do anything (in this context). It's informative: it tells you that the container will run a service on port 8080. This will not, by default, be available from outside of your Docker host.</p>&#xA;&#xA;<p>You can expose this port on your Linux machine by ""publishing"" it when you start the container.  You can do this using the <code>--publish</code> (<code>-p</code>) option to <code>docker run</code>.  For example, if you were to start your container like:</p>&#xA;&#xA;<pre><code>docker run -p 8080:8080 ...&#xA;</code></pre>&#xA;&#xA;<p>Then you would be be able to access the service on port 8080 of your Linux machine's ip address or hostname, assuming that there aren't firewall rules in place that prevent the connection.</p>&#xA;&#xA;<p>You can read more about Docker port publishing (and networking in general) in <a href=""https://docs.docker.com/config/containers/container-networking/"" rel=""nofollow noreferrer"">this document</a>.</p>&#xA;&#xA;<blockquote>&#xA;  <p>On that linux machine I typed 'ip address' on its terminal and it is throwing me bunch of information and I am not sure which one is my ip address.</p>&#xA;</blockquote>&#xA;&#xA;<p>You would generally use your instance's public ip address. <a href=""https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/using-instance-addressing.html"" rel=""nofollow noreferrer"">This document</a> has information on working with public ip addresses in AWS.</p>&#xA;",147356,,,,2019-08-15 02:36:36,"",,0,0,0,2019-08-15 02:36:36
57540930,1,57541055,,2,3095,"<p>When attempting to use GraphQL Playground, it seemed like a cached version of schema.graphql was being referenced. So, I went ahead and ran <code>php artisan cache:clear</code>, which resulted in an error of ""Server cannot be reached"" and '""error"": ""Response not successful: Received status code 500""'.</p>&#xA;&#xA;<p>I tried running <code>php artisan cache:config</code>, but that didn't resolve the issue.</p>&#xA;&#xA;<p>I'm expecting to be able to connect, but it doesn't seem to want to connect. Connecting wasn't an issue prior to running <code>php artisan cache:clear</code>, just that any attempts to write a query seemed to reference the old schema.graphql, which isn't expected.</p>&#xA;",3727648,,,,2019-08-18 01:31:59,GraphQL Server Cannot Be Reached Status Code 500,<laravel><graphql><laravel-lighthouse>,1,2,0,2019-08-18 00:52:35
57557319,2,,57540842,1,,"<p>It proved to be a problem with my webpack configuration in the end, and a misunderstanding of how the <code>webpack.DefinePlugin</code> plugin works. With this corrected, setting <code>process.env.NODE_TLS_REJECT_UNAUTHORIZED</code> to <code>""0""</code> did in fact have the desired effect.</p>&#xA;",597034,,597034,2019-08-19 22:18:36,2019-08-19 22:18:36,"",,0,0,0,2019-08-19 13:02:33
57575203,1,,,5,1473,"<p>I want to get the data on the dynamic type. For that, I am using fragment in graphql query. Api is working fine in graphql playground but when I am trying to integrate it with react-apollo client it gives me an empty object as well WARNING!heuristic fragment matching going on in console.</p>&#xA;&#xA;<p>It is also working when I am using npm install and npm run start but when I switched to yarn install and yarn run start it gives me an error.</p>&#xA;&#xA;<p>I used IntrospectionFragmentMatcher and set the fetchPolicy as 'cache-and-policy'.</p>&#xA;&#xA;<p>I also shared code for IntrospectionFragmentMatcher for client configuration.</p>&#xA;&#xA;<pre><code>query GetContentSections($contentPageId: Int) {&#xA;  contentSection {&#xA;    searchContentSections(contentPageId: $contentPageId, status: [ACTIVE]) {&#xA;      id&#xA;      contentLayoutId&#xA;      sort&#xA;      sectionContainers {&#xA;        id&#xA;        sort&#xA;        snippets {&#xA;          id&#xA;          sort&#xA;          type: __typename&#xA;          ...quote&#xA;          ...text&#xA;          ...image&#xA;          ...video&#xA;          ...audio&#xA;          ...button&#xA;          ...popup&#xA;          ...map&#xA;          ...code&#xA;          ...app&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;fragment text on ContentSnippetTextType{&#xA;  text&#xA;}&#xA;fragment image on ContentSnippetImageType{&#xA;  assetId&#xA;}&#xA;fragment video on ContentSnippetVideoType{&#xA;  assetId&#xA;}&#xA;fragment audio on ContentSnippetAudioType{&#xA;  assetId&#xA;}&#xA;fragment button on ContentSnippetButtonType{&#xA;  hyperlink&#xA;  innerText&#xA;  foregroundColor&#xA;  fontColor&#xA;  backgroundColor&#xA;}&#xA;fragment popup on ContentSnippetPopupType{&#xA;  text&#xA;  link&#xA;}&#xA;fragment quote on ContentSnippetQuoteType {&#xA;  text&#xA;  author&#xA;}&#xA;fragment map on ContentSnippetMapType {&#xA;  longitude&#xA;  latitude&#xA;  zoom&#xA;}&#xA;fragment code on ContentSnippetCodeType {&#xA;  cssFileLocation&#xA;  htmlFileLocation&#xA;  javascriptFileLocation&#xA;}&#xA;fragment app on ContentSnippetAppType {&#xA;  appId&#xA;}&#xA;&#xA;const fm = new IntrospectionFragmentMatcher({&#xA;  introspectionQueryResultData:{&#xA;    ""__schema"": {&#xA;      ""types"": [&#xA;        {&#xA;          ""kind"": ""INTERFACE"",&#xA;          ""name"": ""ContentSnippetInterface"",&#xA;          ""possibleTypes"": [&#xA;            { ""name"": ""ContentSnippetAppType"" },&#xA;            { ""name"": ""ContentSnippetAudioType"" },&#xA;            { ""name"": ""ContentSnippetButtonType"" },&#xA;            { ""name"": ""ContentSnippetCodeType"" },&#xA;            { ""name"": ""ContentSnippetImageType"" },&#xA;            { ""name"": ""ContentSnippetMapType"" },&#xA;            { ""name"": ""ContentSnippetPopupType"" },&#xA;            { ""name"": ""ContentSnippetQuestionType"" },&#xA;            { ""name"": ""ContentSnippetQuoteType"" },&#xA;            { ""name"": ""ContentSnippetTextType"" },&#xA;            { ""name"": ""ContentSnippetVideoType"" },&#xA;            { ""name"": ""ContentSnippetSpacerType"" }&#xA;          ]&#xA;        },&#xA;      ]&#xA;    }&#xA;  }&#xA;});&#xA;&#xA;export default new ApolloClient({&#xA;  link: authLink.concat(httpLink),&#xA;  cache: new InMemoryCache({ fm }),&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I expect all fields depend on the type. It can be dynamic so it is decided at run time only. But it gives me an empty object.</p>&#xA;",8440056,,8440056,2019-08-20 14:29:30,2019-08-20 15:05:33,Why query with apollo client on fragment gives me an empty object while api is working fine?,<javascript><reactjs><graphql><react-apollo><apollo-client>,1,2,0,2019-08-20 13:50:31
57606297,1,,,0,44,"<p>I building a MERN app with MongoDB atlas, mongoose and apollo. It worked well until few days ago. Since when I start the server it works fine for a few minutes then its spend ages with every database task. If I restart the server it works again for some minutes.</p>&#xA;&#xA;<p>My consoles right after server start and login:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/gFbZ3.png"" rel=""nofollow noreferrer"">Browser console</a><br/>&#xA;<a href=""https://i.stack.imgur.com/hdYqE.png"" rel=""nofollow noreferrer"">Terminal</a></p>&#xA;&#xA;<p>After 10 minutes and a logout( it's uses window.location.reload() ) the same consoles:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Mn9dZ.png"" rel=""nofollow noreferrer"">Browser console</a><br/>&#xA;<a href=""https://i.stack.imgur.com/8Qz8y.png"" rel=""nofollow noreferrer"">Terminal</a></p>&#xA;&#xA;<p>(The data what the logs refers to is my main page's content.)</p>&#xA;&#xA;<p>Anybody met with a problem like this.&#xA;Should I use local db instead cloud or any other suggestion?</p>&#xA;",11282636,,11282636,2019-08-22 19:45:53,2019-08-22 19:45:53,MondoDB Atlas stuck after few minutes,<javascript><mongodb><mongoose><react-apollo>,0,3,0,2019-08-22 09:35:28
57617380,2,,57580352,0,,<p>After much personal pain and anguish I got it running. I removed the Heroku Redis add on and replaced it with the Redis Cloud add on. All works just as expected!</p>&#xA;,11953476,,,,2019-08-22 21:41:56,"",,0,0,0,2019-08-22 21:41:56
57633776,1,,,2,67,"<p>I found there is execute query button there. But I always got 400 Network Error, how can I config it to make it running properly?</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/0xlbS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0xlbS.png"" alt=""enter image description here""></a></p>&#xA;",1257916,,,,2019-08-23 22:47:47,"how visual studio graphql ""execute query"" works?",<visual-studio-code><graphql>,0,0,0,2019-08-23 22:47:47
57641675,2,,55299233,3,,"<p>To me was a solution to change in prisma.yml <a href=""http://localhost:4466"" rel=""nofollow noreferrer"">http://localhost:4466</a> to endpoint with docker ip - <a href=""http://192.168.99.100:4466"" rel=""nofollow noreferrer"">http://192.168.99.100:4466</a></p>&#xA;&#xA;<p>Also, this could be helpful if the problem is in apisecret <a href=""https://github.com/prisma/prisma/issues/4483"" rel=""nofollow noreferrer"">https://github.com/prisma/prisma/issues/4483</a> - here</p>&#xA;",10078118,,,,2019-08-24 21:30:28,"",,0,0,0,2019-08-24 21:30:28
57663518,2,,41201405,0,,"<p>Some attempts are started at <a href=""https://pypi.org/project/graphene-elastic/"" rel=""nofollow noreferrer"">https://pypi.org/project/graphene-elastic/</a></p>&#xA;&#xA;<p>Yet, still alpha.</p>&#xA;",2318839,,,,2019-08-26 19:03:16,"",,0,0,0,2019-08-26 19:03:16
57668865,2,,57667928,5,,"<p>The error shows you forgot <code>version</code> parameter. This is the query template (<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-dynamodb.html#aws-appsync-resolver-mapping-template-reference-dynamodb-query"" rel=""nofollow noreferrer"">docs</a>):</p>&#xA;<pre><code>{&#xA;    &quot;version&quot; : &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot; : &quot;Query&quot;,&#xA;    &quot;query&quot; : {&#xA;        &quot;expression&quot; : &quot;some expression&quot;,&#xA;        &quot;expressionNames&quot; : {&#xA;            &quot;#foo&quot; : &quot;foo&quot;&#xA;        },&#xA;        &quot;expressionValues&quot; : {&#xA;            &quot;:bar&quot; : ... typed value&#xA;        }&#xA;    }&#xA;    &quot;index&quot; : &quot;fooIndex&quot;,&#xA;    &quot;nextToken&quot; : &quot;a pagination token&quot;,&#xA;    &quot;limit&quot; : 10,&#xA;    &quot;scanIndexForward&quot; : true,&#xA;    &quot;consistentRead&quot; : false,&#xA;    &quot;select&quot; : &quot;ALL_ATTRIBUTES&quot;,&#xA;    &quot;filter&quot; : {&#xA;        ...&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>and the <code>version</code> is required:</p>&#xA;<blockquote>&#xA;<p><strong>version</strong></p>&#xA;<p>The template definition version. 2017-02-28 and 2018-05-29 are currently supported. This value is required.</p>&#xA;</blockquote>&#xA;",8786986,,-1,2020-06-20 09:12:55,2019-08-27 06:34:29,"",,0,0,0,2019-08-27 06:34:29
57669063,1,57678556,,2,659,"<p>I'm setting up a remote schema inside the other <strong>hasura</strong> <strong>graphql</strong> schema how can I set up the <strong>reload_remote_schema</strong> using node/express js?</p>&#xA;&#xA;<p>I'm facing below problem.&#xA;Graphql remote schema data is not updating before clicking on the reload button. I don't want to reload remote schema manually, it should refresh automatically via node/express js code.</p>&#xA;",11899803,,,,2019-08-27 16:05:24,is there a way to reload hasura remote schema using nodejs,<node.js><graphql><express-graphql><hasura>,1,0,0,2019-08-27 06:50:40
57678556,2,,57669063,4,,"<p>With any JS http client, you should be able to hit this endpoint:</p>&#xA;&#xA;<pre><code>POST /v1/query HTTP/1.1&#xA;Content-Type: application/json&#xA;X-Hasura-Role: admin&#xA;&#xA;{&#xA;    ""type"": ""reload_remote_schema"",&#xA;    ""args"": {&#xA;        ""name"": ""my remote schema""&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Documentation: <a href=""https://docs.hasura.io/1.0/graphql/manual/api-reference/schema-metadata-api/remote-schemas.html#reload-remote-schema"" rel=""nofollow noreferrer"">https://docs.hasura.io/1.0/graphql/manual/api-reference/schema-metadata-api/remote-schemas.html#reload-remote-schema</a></p>&#xA;&#xA;<p>Any time you update your remote schema (e.g. on a new deploy), you can refresh via API. </p>&#xA;&#xA;<p>It's also possible to refresh your remote schemas via CLI: <a href=""https://docs.hasura.io/1.0/graphql/manual/hasura-cli/hasura_metadata_reload.html#hasura-metadata-reload"" rel=""nofollow noreferrer"">https://docs.hasura.io/1.0/graphql/manual/hasura-cli/hasura_metadata_reload.html#hasura-metadata-reload</a>. But this operation is an exclusive/expensive request (with potential to cause deadlocks as of beta.3 at least).</p>&#xA;",2526423,,,,2019-08-27 16:05:24,"",,0,1,0,2019-08-27 16:05:24
57687205,1,,,0,79,"<p>I have a simple Grails-React app using the React profile that works fine locally but has an issue with the GraphQL plugin not being loaded when deploying to Heroku, it uses:</p>&#xA;&#xA;<ul>&#xA;<li>Grails 3.3.10</li>&#xA;<li>JDK 8</li>&#xA;<li>Gradle 4.4 (locally)  remote on Heroku? I don't know.</li>&#xA;<li>Grails React profile</li>&#xA;<li>GraphQL plugin 1.0.3.BUILD-SNAPSHOT</li>&#xA;</ul>&#xA;&#xA;<p>The code is here: <a href=""https://github.com/wellsst/grails3-react-diceware"" rel=""nofollow noreferrer"">https://github.com/wellsst/grails3-react-diceware</a></p>&#xA;&#xA;<p>Running locally with <code>server:bootRun</code> and <code>heroku local -f ProcfileLocal</code> the log entry appears:&#xA;<code>INFO --- [           main] g.plugins.DefaultGrailsPluginManager     : Grails plug-in [gormGraphql] with version [1.0.3.BUILD-SNAPSHOT] loaded successfully</code></p>&#xA;&#xA;<p>But remotely on Heroku no errors are shown nor is any logging for GraphQL.  </p>&#xA;&#xA;<p>Hitting the ""application"" controller I see nothing GraphQL and only 1 controller:</p>&#xA;&#xA;<pre><code>{""message"":""Welcome to Grails!"",""environment"":""production"",""appversion"":""1"",""grailsversion"":""3.3.10"",""appprofile"":""react"",""groovyversion"":""2.4.17"",""jvmversion"":""1.8.0_222-heroku"",""reloadingagentenabled"":false,""artefacts"":{""controllers"":1,""domains"":1,""services"":0},""controllers"":[{""name"":""grails3.react.diceware.ApplicationController"",""logicalPropertyName"":""application""}],""plugins"":[{""name"":""i18n"",""version"":""3.3.10""},{""name"":""dataBinding"",""version"":""3.3.10""},{""name"":""restResponder"",""version"":""3.3.10""},{""name"":""jsonView"",""version"":""1.2.9""},{""name"":""eventBus"",""version"":""3.3.2""},{""name"":""core"",""version"":""3.3.10""},{""name"":""dataSource"",""version"":""3.3.10""},{""name"":""codecs"",""version"":""3.3.10""},{""name"":""controllers"",""version"":""3.3.10""},{""name"":""urlMappings"",""version"":""3.3.10""},{""name"":""mimeTypes"",""version"":""3.3.10""},{""name"":""domainClass"",""version"":""3.3.10""},{""name"":""converters"",""version"":""3.3.10""},{""name"":""controllersAsync"",""version"":""3.3.2""},{""name"":""hibernate"",""version"":""6.1.12""},{""name"":""services"",""version"":""3.3.10""},{""name"":""interceptors"",""version"":""3.3.10""},{""name"":""cache"",""version"":""4.0.1""}]}&#xA;</code></pre>&#xA;&#xA;<p>I am suspecting it is the version of gradle on Heroku or something about how the GraphQL plugin is configured.  Ideas?</p>&#xA;",593321,,593321,2019-08-29 07:04:45,2019-09-06 02:59:04,Grails GraphQL plugin - controller not running when deployed to Heroku,<heroku><grails><graphql><grails-orm>,1,0,0,2019-08-28 07:37:10
57691065,2,,57650203,0,,"<p>The lambda function of Appsync is called over the Serverless Appsync plugin and within this role the BatchWriteItem is missing in older versions.&#xA;Within your package.json file try changing the plugin version to the latest or the GitHub version in which this problem is fixed. </p>&#xA;&#xA;<p>This should fix it:</p>&#xA;&#xA;<pre><code>""devDependencies"": {&#xA;   ....&#xA;   ""serverless-appsync-plugin"": ""^1.1.0""&#xA;   ....&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>or</p>&#xA;&#xA;<pre><code>""devDependencies"": {&#xA;   ....&#xA;   ""serverless-appsync-plugin"": ""https://github.com/sid88in/serverless-appsync-plugin.git#e33b5cfd""&#xA;   ....&#xA;}&#xA;</code></pre>&#xA;",10413468,,,,2019-08-28 11:11:44,"",,0,2,0,2019-08-28 11:11:44
57691843,2,,57691091,0,,"<p>use docker compose to make them run in the same network, docker-compose will create a network on its own and your service will run in it.&#xA;this might fix the issue</p>&#xA;&#xA;<pre><code>&#xA;version: ""3.3""&#xA;&#xA;services:&#xA;  my_back:&#xA;    image: redis:alpine&#xA;    container_name: redis-db&#xA;    ports:&#xA;      - 6379:6379&#xA;&#xA;  my_front:&#xA;    image: my-image&#xA;    container_name: front-end&#xA;    environment:&#xA;      REDIS_HOSTNAME: ""redis-db""&#xA;&#xA;</code></pre>&#xA;&#xA;<p>container name = the hostname </p>&#xA;",6569084,,6569084,2019-08-28 12:37:10,2019-08-28 12:37:10,"",,0,0,0,2019-08-28 11:54:57
57691993,2,,57691091,0,,"<p>I think your problem may lay in docker networking. Your frontend container may not be able to reach your backend because both containers aren't in the same network. You can perfectly create 2 containers and a network to connect them both.</p>&#xA;&#xA;<p>However, I'd suggest you look into <a href=""https://docs.docker.com/compose/"" rel=""nofollow noreferrer"">docker-compose</a>. In short with a compose file you can define multiple services with volumes, networks, ports connected to the host. You can define a network in your docker-compose file and access the other containers in the network by using the service name where you would put an ip or a hostname in your frontend app. </p>&#xA;&#xA;<pre><code>version: '3.2'&#xA;&#xA;services:&#xA;  frontend:&#xA;    build:&#xA;      context: frontend&#xA;      dockerfile: Dockerfile&#xA;    depends_on:&#xA;      - backend&#xA;    restart: always&#xA;  backend:&#xA;    build:&#xA;      context: backend&#xA;      dockerfile: Dockerfile&#xA;    restart: always&#xA;</code></pre>&#xA;",9641892,,9641892,2019-08-28 12:59:16,2019-08-28 12:59:16,"",,0,2,0,2019-08-28 12:03:40
57694424,2,,57689311,3,,"<p>It seems to have been a bug in an older apollo graphql or nestjs-apollo-graphql version (We use those frameworks in the backend). After upgrading all the backend dependencies to ""latest"", the bug doesn't seem to persist. </p>&#xA;",3914932,,,,2019-08-28 14:12:23,"",,0,0,0,2019-08-28 14:12:23
57700899,1,,,0,32,"<p>Say I have this model...</p>&#xA;&#xA;<pre><code>type Alpha {&#xA;  id: ID!&#xA;  bravos: [Bravo] @connection(name: ""BravoConnection"")&#xA;}&#xA;&#xA;type Bravo {&#xA;  id: ID!&#xA;  alpha: Alpha @connection(name: ""BravoConnection"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If I subscribe to the <code>updateAlpha</code> mutation will I receive updates if a <code>Bravo</code> contained in the <code>Alpha</code>'s bravos field is updated?</p>&#xA;",4397018,,,,2019-09-09 17:22:55,Do AppSync @connection fields pass through updates from connected fields?,<amazon-web-services><graphql><aws-appsync>,1,0,0,2019-08-28 22:46:13
57712104,1,57756636,,0,63,"<p>I have Apollo graphQl front application. This application is building by webpack to static js files. </p>&#xA;&#xA;<p>In dev version of code everything works fine. In prod version on <code>http</code> nginx server all works too. All queries look like:&#xA;<a href=""https://i.stack.imgur.com/rf36o.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rf36o.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>But I have another prod version. There is only one difference between production versions: This one works on <code>https</code>.&#xA;And queries from this version sending without 'query' field.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/qhTQj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qhTQj.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Do you have any suppose, why graphQl loose 'query' field?</p>&#xA;&#xA;<p>P.S js files have the same content. I have compared symbol by symbol</p>&#xA;",8457357,,,,2019-09-02 13:43:59,One of application build remove GraphQl 'query' field,<javascript><https><graphql><apollo><react-apollo>,1,4,0,2019-08-29 14:13:28
57712493,2,,57631751,2,,"<p>For me the following was true. When I ran <code>gatsby develop</code> I got a different error that explains the issue a bit more.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Error: Cannot use GraphQLScalarType ""JSON"" from another module or realm.&#xA;    Ensure that there is only one instance of ""graphql"" in the node_modules&#xA;    directory. If different versions of ""graphql"" are the dependencies of other&#xA;    relied on modules, use ""resolutions"" to ensure only one version is installed.&#xA;    <a href=""https://yarnpkg.com/en/docs/selective-version-resolutions"" rel=""nofollow noreferrer"">https://yarnpkg.com/en/docs/selective-version-resolutions</a>&#xA;    Duplicate ""graphql"" modules cannot be used at the same time since different&#xA;    versions may have different capabilities and behavior. The data from one&#xA;    version used in the function from another could produce confusing and&#xA;    spurious results.</p>&#xA;</blockquote>&#xA;&#xA;<p><code>yarn.lock</code> had a few dependencies which depended on different versions of graphql. This resulted in the build not working.</p>&#xA;&#xA;<p>Deleting <code>node_modules</code> and <code>yarn.lock</code> and running <code>yarn install</code> resolved the issue, but I don't know if deleting <code>yarn.lock</code> is good practice.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>UPDATE</strong></p>&#xA;&#xA;<p>Running <code>yarn upgrade</code> fixed the dependencies in yarn.lock. </p>&#xA;",6931954,,6931954,2019-09-03 08:08:13,2019-09-03 08:08:13,"",,0,0,0,2019-08-29 14:34:55
57713253,1,,,2,702,"<p>My team is going through the task of updating our projects. We have updated Jest and Apollo to the latest version. Running into an issue where we are doing integration testing with Apollo/GraphQL and getting errors stated below: </p>&#xA;&#xA;<pre><code>TypeError: Cannot read property 'bind' of undefined&#xA;&#xA;  4 | &#xA;  5 | import { createTestClient } from 'apollo-server-testing';&#xA;&gt; 6 | import { ApolloServer } from ""apollo-server-express"";&#xA;    | ^&#xA;  7 | &#xA;  8 | import schemaString from './../../schema/schema-string.mjs';&#xA;  9 | import resolvers from '../../../resolvers/query-resolvers.mjs';&#xA;&#xA;  at Object.&lt;anonymous&gt; (node_modules/apollo-server-env/src/index.browser.js:6:15)&#xA;  at Object.&lt;anonymous&gt; (node_modules/apollo-server-core/src/index.ts:1:1)&#xA;  at Object.&lt;anonymous&gt; (node_modules/apollo-server-express/src/index.ts:1:1)&#xA;</code></pre>&#xA;&#xA;<p>Digging into it, seems Apollo polyfils on the global property is not being set. Unsure how to solve this and couldn't find anything online as of yet. We also updated Babel but I don't feel it has anything to do with that unless it's a compiling issue. Any help is appreciated. </p>&#xA;",10001555,,,,2019-09-17 14:30:12,Running Jest with Apollo Server fails global.fetch undefined,<graphql><jestjs><apollo><babel-jest>,1,0,0,2019-08-29 15:18:40
57719273,1,,,3,1169,"<p>As titled, I am still unable to figure out what it is and why we need it after reading their <a href=""https://www.apollographql.com/docs/react/advanced/fragments/#fragments-on-unions-and-interfaces"" rel=""nofollow noreferrer"">Docs</a>.</p>&#xA;&#xA;<p>Apart from that, please also tell me what heuristic fragment matcher means.</p>&#xA;&#xA;<p>thanks</p>&#xA;",403976,,,,2019-08-30 04:00:46,What is a fragment matcher in Apollo,<reactjs><graphql><react-apollo><apollo-client>,1,0,0,2019-08-30 01:01:17
57721151,2,,57721150,8,,"<h3>Use <code>POST</code> request with <code>'Content-Type', 'application/json'</code></h3>&#xA;<pre class=""lang-js prettyprint-override""><code>const yourServerUrl = 'http://example.com/graphql'&#xA;const yourQuery = {&#xA;    query: `{&#xA;        users {&#xA;            firstName&#xA;        }&#xA;    }`&#xA;};&#xA;&#xA;// below ordinary XHR request with console.log&#xA;const xhr = new XMLHttpRequest();&#xA;xhr.responseType = 'json';&#xA;xhr.open('POST', yourServerUrl);&#xA;xhr.setRequestHeader('Content-Type', 'application/json');&#xA;xhr.onload = function () {&#xA;    console.log('data returned:', xhr.response);&#xA;};&#xA;&#xA;xhr.send(JSON.stringify(yourQuery));&#xA;</code></pre>&#xA;<p><a href=""https://medium.com/@seanchatman/basic-graphql-with-vue-and-plain-javascript-f4ec2127e1f0"" rel=""noreferrer"">source</a></p>&#xA;",8163773,,8163773,2020-10-05 06:31:40,2020-10-05 06:31:40,"",,0,0,0,2019-08-30 05:52:23
57776705,1,,,1,134,"<p>I am trying to deploy a personal project using React, NodeJS, GraphQL and  Heroku. This is the first time I use GraphQL and I'm feeling a little lost. I'm doing everything that I would normally do without using GraphQL, but Heroku gets stuck on the bulding phase. Does anyone have an idea of what could be going on? Any help is much appreciated, thanks a lot!</p>&#xA;&#xA;<p>This is my server</p>&#xA;&#xA;<pre><code>const PORT = process.env.PORT || 3002;&#xA;const cors = require(""cors"");&#xA;const graphqlHTTP = require(""express-graphql"");&#xA;var schema = require(""./schema/schema.js"");&#xA;const { ApolloServer } = require(""apollo-server-express"");&#xA;const db = require(""../mongodb/index"");&#xA;&#xA;const app = express();&#xA;&#xA;app.use(cors());&#xA;&#xA;app.use(&#xA;  ""/graphql"",&#xA;  graphqlHTTP({&#xA;    schema,&#xA;    graphiql: true&#xA;  })&#xA;);&#xA;&#xA;const server = new ApolloServer({ schema });&#xA;&#xA;// console.log(server);&#xA;app.use(express.static(""public""));&#xA;&#xA;server.applyMiddleware({ app });&#xA;&#xA;app.listen({ port: PORT }, err =&gt; {&#xA;  if (err) {&#xA;    console.log(""there was an error"", err);&#xA;  } else {&#xA;    console.log(`server ready at http://localhost:3002${server.graphqlPath}`);&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>And my apolloClient in app.jsx looks like this</p>&#xA;&#xA;<pre><code>const client = new ApolloClient({&#xA;  uri: ""/graphql""&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>After I try to deploy using&#xA;<code>git push heroku master</code></p>&#xA;&#xA;<p>it takes a long time and I get the following</p>&#xA;&#xA;<pre><code>remote: webpack is watching the files…&#xA;remote:&#xA;remote:        Hash: ea7bec75c71b31ce8b50&#xA;remote:        Version: webpack 4.39.2&#xA;remote:        Time: 6998ms&#xA;remote:        Built at: 09/03/2019 4:19:47 AM&#xA;remote:            Asset      Size  Chunks             Chunk Names&#xA;remote:        bundle.js  12.4 MiB    main  [emitted]  main&#xA;remote:        Entrypoint main = bundle.js&#xA;remote:        [./client/index.jsx] 182 bytes {main} [built]&#xA;remote:        [./client/queries/queries.jsx] 1.68 KiB {main} [built]&#xA;remote:        [./node_modules/moment/locale sync recursive ^\.\/.*$] ./node_modules/moment/locale sync ^\.\/.*$ 3 KiB {main} [optional] [built]&#xA;remote:        [./node_modules/webpack/buildin/global.js] (webpack)/buildin/global.js 472 bytes {main} [built]&#xA;remote:        [./node_modules/webpack/buildin/harmony-module.js] (webpack)/buildin/harmony-module.js 573 bytes {main} [built]&#xA;remote:        [./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 497 bytes {main} [built]&#xA;remote:            + 873 hidden modules&#xA;error: RPC failed; curl 56 OpenSSL SSL_read: SSL_ERROR_SYSCALL, errno 10054&#xA;fatal: the remote end hung up unexpectedly&#xA;fatal: the remote end hung up unexpectedly&#xA;</code></pre>&#xA;&#xA;<p>I was not able to find anything on this current problem. Has anyone faced a similar issue with Heroku?</p>&#xA;&#xA;<p>Thanks a lot!!</p>&#xA;",11933586,,,,2019-09-03 18:03:15,How can I deploy my express server - which uses graphql - to Heroku. Currently stuck on build,<javascript><express><heroku><graphql>,0,1,0,2019-09-03 18:03:15
57779177,2,,57741390,5,,"<p>Ok, i found the error. There is a known issue with apollo-server-lamdba.</p>&#xA;&#xA;<p>While browsing the playground (at <a href=""https://e9g6evoks0.execute-api.us-east-1.amazonaws.com/dev/graphql"" rel=""noreferrer"">https://e9g6evoks0.execute-api.us-east-1.amazonaws.com/dev/graphql</a>), the url of the endpoint is prefiled but it misses the <code>/dev/</code> part (the stage part defined in serverless.yml). Just add it and this will work fine.</p>&#xA;&#xA;<p>cfr: <a href=""https://github.com/apollographql/apollo-server/issues/2136#issuecomment-458465128"" rel=""noreferrer"">https://github.com/apollographql/apollo-server/issues/2136#issuecomment-458465128</a></p>&#xA;",7462187,,,,2019-09-03 21:54:33,"",,0,2,0,2019-09-03 21:54:33
57780294,1,57780528,,3,330,"<p>I have a <code>vue-apollo</code> (using <code>nuxt</code>) query that is supposed to have a local client field show.  However, when I have the <code>show @client</code> line included in the query the component does not render.  For some reason it also seems to fail silently.</p>&#xA;&#xA;<pre><code>query myAccounts {&#xA;  accounts: myAccounts {&#xA;    email&#xA;    calendars {&#xA;      id&#xA;      name&#xA;      hex_color&#xA;      is_enabled&#xA;      show @client&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am extending the <code>Calendar</code> type in an <code>extensions.js</code> file (pasted below) with two mutations.</p>&#xA;&#xA;<pre><code>import gql from 'graphql-tag'&#xA;&#xA;export const typeDefs = gql`&#xA;  extend type Calendar {&#xA;    show: Boolean&#xA;  }&#xA;  type Mutation {&#xA;    showCalendar(id: ID!): Boolean&#xA;    hideCalendar(id: ID!): Boolean&#xA;  }&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>Here is the resolver that sets the value, along with the Apollo config:</p>&#xA;&#xA;<pre><code>import { InMemoryCache } from 'apollo-cache-inmemory'&#xA;import { typeDefs } from './extensions'&#xA;import MY_ACCOUNTS_QUERY from '~/apollo/queries/MyAccounts'&#xA;&#xA;const cache = new InMemoryCache()&#xA;&#xA;const resolvers = {&#xA;  Mutation: {&#xA;    showCalendar: (_, { id }, { cache }) =&gt; {&#xA;      const data = cache.readQuery({ query: MY_ACCOUNTS_QUERY })&#xA;      const found = data.accounts&#xA;        .flatMap(({ calendars }) =&gt; calendars)&#xA;        .find(({ id }) =&gt; id === '1842')&#xA;      if (found) {&#xA;        found.show = true&#xA;      }&#xA;      cache.writeQuery({ query: todoItemsQuery, data })&#xA;      return true&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;export default context =&gt; {&#xA;  return {&#xA;    cache,&#xA;    typeDefs,&#xA;    resolvers,&#xA;    httpLinkOptions: {&#xA;      credentials: 'same-origin'&#xA;    },&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>along with the <code>nuxt</code> config:</p>&#xA;&#xA;<pre><code>apollo: {&#xA;  defaultOptions: {&#xA;    $query: {&#xA;      loadingKey: 'loading',&#xA;      fetchPolicy: 'cache-and-network',&#xA;    },&#xA;  },&#xA;  errorHandler: '~/plugins/apollo-error-handler.js',&#xA;  clientConfigs: {&#xA;    default: '~/apollo/apollo-config.js'&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1325761,,1325761,2019-09-04 01:24:01,2019-09-04 01:51:08,@client Apollo GQL tag breaks query,<graphql><apollo><apollo-client><vue-apollo>,1,2,0,2019-09-04 01:09:37
57793982,2,,57761320,5,,"<p>So there were two issues:</p>&#xA;&#xA;<ol>&#xA;<li><p>Like <a href=""https://stackoverflow.com/users/4951611/praveenweb"">@praveenweb</a> wrote in the comments (in my case for a mac) I had to replace <code>localhost</code> with <code>host.docker.internal</code> for the container to access the host machine's auth server. So instead of <code>HASURA_GRAPHQL_AUTH_HOOK: http://localhost:8081/webhook</code> -> <code>HASURA_GRAPHQL_AUTH_HOOK: http://host.docker.internal:8081/webhook</code></p></li>&#xA;<li><p>The reason for why I got no successful response anymore on the second day was that I totally forgot to set the <code>DATABASE_URL</code> in the environment variables like shown <a href=""https://github.com/hasura/graphql-engine/tree/master/community/boilerplates/auth-webhooks/passport-js#deploy-locally"" rel=""noreferrer"">here</a>. So in my case <code>export DATABASE_URL=postgres://postgres:@localhost:5432/postgres</code></p></li>&#xA;</ol>&#xA;&#xA;<p>Now everything works as expected. Hope this helps someone else too.</p>&#xA;",5327882,,,,2019-09-04 18:27:53,"",,0,1,0,2019-09-04 18:27:53
57797078,2,,55033126,0,,"<p>Change your apolloClient uri to:</p>&#xA;&#xA;<pre><code>const client = new ApolloClient({&#xA;  uri: ""/graphql""&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>then deploy it again.</p>&#xA;&#xA;<p>If you are using create-react-app, you should add proxy for your client for <strong>Development</strong> use:</p>&#xA;&#xA;<p>In your setupProxy.js file:</p>&#xA;&#xA;<pre><code>const proxy = require('http-proxy-middleware');&#xA;&#xA;module.exports = function(app) {&#xA;    app.use(proxy('/',&#xA;    { target: 'http://localhost:4000' } //your server&#xA;    ));&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Hope it helps.</p>&#xA;",8524588,,,,2019-09-05 00:38:21,"",,0,0,0,2019-09-05 00:38:21
57797385,1,,,2,1668,"<p>I use nuxt with nuxt-apollo in SSR mode. It seems smart query are called two times in SSR and one more in front. If I do that:</p>&#xA;&#xA;<pre><code>import Post from '~/apollo/queries/Post' // Post.gql file&#xA;&#xA;export default {&#xA;apollo: {&#xA;    post: {&#xA;        query() {&#xA;           console.log('Post', Post)&#xA;           return Post&#xA;        }&#xA;    }&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>In the terminal and the devtools console, each one show two logs (devtools with <code>nuxt:ssr</code> tag) like if the query function is called twice. In devtools console, there is also one more log wihtout <code>nuxt:ssr</code> tag like if the query is called one more time in front. I think this last is normal, but there is no reason for two times in SSR...</p>&#xA;&#xA;<p>I can reproduce that in a stackoverflow code snippet, so I created a codesandbox <a href=""https://codesandbox.io/s/nuxt-apollo-smart-query-bug-7p7ni"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;&#xA;<p>Did you see this behavior? Do you know what happens under the hood? Bug??</p>&#xA;",479957,,13329963,2020-06-11 10:22:58,2021-06-12 21:21:36,Nuxt apollo smart query is called twice. What happens under the hood?,<vue.js><nuxt.js><apollo><apollo-server><vue-apollo>,3,0,0,2019-09-05 01:35:43
57815107,2,,57687205,0,,"<p>My fudge around for this was to deploy to Cloud Foundry, no issues.  I suspect it around the different versions of gradle (locally vs remote)</p>&#xA;",593321,,593321,2019-09-06 02:59:04,2019-09-06 02:59:04,"",,0,0,0,2019-09-06 02:48:47
57815724,1,,,4,9776,"<p>Apollo server does not seem to ship with any sort of logging. This makes it difficult to use in production environments as is - it is practically running blind. Is there any recommended way to enable different types of logs?</p>&#xA;&#xA;<p>I am specifically looking at seeing verbose logs, error logs (when server crashes / internal component crashes) and other debug logs.</p>&#xA;&#xA;<p>Update:&#xA;I am already using <code>winston</code> for logging basic events. This question is related to detailed logging - like logging various parts of a request lifecycle, server crash, cache errors, etc.</p>&#xA;",3806323,,3806323,2019-09-06 07:43:43,2022-03-29 13:56:08,Recommended way for logging in apollo-server,<node.js><graphql><apollo><apollo-server>,4,1,0,2019-09-06 04:26:35
57826451,1,,,1,327,"<p>I am using a graphQL api that runs on localhost 3001, and I have a react app that I run with webpack-dev server that runs by default on localhost 8080.</p>&#xA;&#xA;<p>The graphQl api is based on this server: <a href=""https://github.com/marmelab/json-graphql-server"" rel=""nofollow noreferrer"">https://github.com/marmelab/json-graphql-server</a></p>&#xA;&#xA;<p>Normally to consume an api, you go to some url like:</p>&#xA;&#xA;<p><code>https://example.com/users/</code></p>&#xA;&#xA;<p>But this graphQl server is direclty on <code>localhost:3001</code></p>&#xA;&#xA;<p>And my react app runs on port <code>8080</code>.</p>&#xA;&#xA;<p>How can fetch the api on port <code>3001</code></p>&#xA;&#xA;<p>I tried using fetch and passing the port 3001 as url but i get an error:</p>&#xA;&#xA;<p><code>GET http://localhost:3001/ 400 (Bad Request)</code></p>&#xA;&#xA;<pre><code>fetch('http://localhost:3001', {&#xA;  method: 'GET',&#xA;  headers: { 'Content-Type': 'application/json' },&#xA;})&#xA;  .then(res =&gt; res.json())&#xA;  .then(res =&gt; console.log(res.data));&#xA;</code></pre>&#xA;&#xA;<p>a couple of questions,</p>&#xA;&#xA;<p>Is it ok to have webpack dev server running on 8080 and the graphql server on another server(3001)</p>&#xA;&#xA;<p>And if so, how can I hit that port from my react app?</p>&#xA;&#xA;<p>Thanks</p>&#xA;",0,user2643810,,2019-09-06 17:42:11,2019-09-06 17:42:11,How to query a graphql api that runs in another port?,<reactjs><graphql>,0,4,0,2019-09-06 17:38:40
57846407,2,,57780847,2,,"<p>Turns out this was just a misunderstanding on my part of how server side rendering with nextjs works. It does a full render of the React tree before sending the resulting html to the client. Thus, there is no need to do the ""first"" <code>useQuery</code> call in <code>getInitialProps</code> or anything of the sort. It can just be used in the component alone and everything will work fine as long as <code>getDataFromTree</code> is being utilized properly in the server side configuration.</p>&#xA;",4543614,,,,2019-09-08 23:11:26,"",,0,1,0,2019-09-08 23:11:26
57860114,1,,,0,59,"<p>I'm using Botium Box CE from Docker, and until recently it had Playground access through the Botium Box URL, e.g. </p>&#xA;&#xA;<blockquote>&#xA;  <p>""<a href=""https://botiumbox.mydomain.com/playground"" rel=""nofollow noreferrer"">https://botiumbox.mydomain.com/playground</a>""</p>&#xA;</blockquote>&#xA;&#xA;<p>That disappeared in 1.7.4.  Playground can still be accessed through the Prisma service, but I keep getting ""Project not found"", which means I'm getting the default@default behavior for not using the right URL.  The ""<a href=""https://botium.atlassian.net/wiki/spaces/BOTIUM/pages/35553291/Using+the+Botium+Box+GraphQL+API#Launching-the-GraphQL-Playground"" rel=""nofollow noreferrer"">Launching the GraphQL Playground</a>"" documentation entry hasn't changed. What is the correct way to access Playground?</p>&#xA;",10469222,,,,2019-09-09 19:24:16,Botium Box CE Playground access?,<prisma><prisma-graphql>,0,3,0,2019-09-09 19:24:16
57867165,1,,,0,137,"<p>I'm using angular-apollo lib to call backend graphql. I want to reuse my queries generated by <code>gql</code> function. It means I need to use <code>variables</code>, but when I write query like this:</p>&#xA;&#xA;<pre><code>this.apollo.watchQuery&lt;MyQuery&gt;({&#xA;          query: gql`&#xA;            {&#xA;              bar(id: $foo) {&#xA;                id&#xA;            }&#xA;          `,&#xA;          variables: {&#xA;            $foo: 'bar',&#xA;          },&#xA;        }).valueChanges&#xA;</code></pre>&#xA;&#xA;<p>I'm getting not replaced placeholder <code>$foo</code> on the server-side:</p>&#xA;&#xA;<pre><code>...  WARN 16956 --- [nio-8080-exec-8] graphql.GraphQL                          : Query failed to validate : '{&#xA;  bar(id: $foo) {&#xA;    id&#xA;</code></pre>&#xA;&#xA;<p>I'm using following apollo npm packages:</p>&#xA;&#xA;<pre><code>    ""apollo-angular"": ""^1.7.0"",&#xA;    ""apollo-angular-link-http"": ""^1.8.0"",&#xA;    ""apollo-cache-inmemory"": ""^1.6.3"",&#xA;    ""apollo-client"": ""^2.6.4"",&#xA;</code></pre>&#xA;&#xA;<p>Example: <a href=""https://stackblitz.com/edit/basic-apollo-angular-app-fyykeq?file=src%2Fapp%2Fexchange-rates%2Fexchange-rates.component.ts"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/basic-apollo-angular-app-fyykeq?file=src%2Fapp%2Fexchange-rates%2Fexchange-rates.component.ts</a></p>&#xA;&#xA;<p>Does anyone have an idea what I'm doing wrong?</p>&#xA;",5924810,,5924810,2019-09-10 09:07:56,2019-09-10 09:07:56,Apollo watchQuery method ignores passed variables,<angular><graphql><apollo-angular>,0,2,0,2019-09-10 08:48:46
57877222,2,,57876670,4,,"<p>You can run an <a href=""https://graphql.github.io/graphql-spec/June2018/#sec-Introspection"" rel=""nofollow noreferrer"">introspection</a> query:</p>&#xA;&#xA;<pre><code>const { data: { __type: { enumValues } } } = await prisma.request(`&#xA;  {&#xA;    __type(name: ""TRUCKPE_NAME"") {&#xA;      enumValues {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;`)&#xA;const values = enumValues.map(({ name }) =&gt; name)&#xA;</code></pre>&#xA;",6024220,,,,2019-09-10 19:36:46,"",,0,0,0,2019-09-10 19:36:46
57878998,1,,,22,14635,"<p>I have searched all over StackOverflow and saw similar questions but have not found a working solution. Wondering if anyone has a working solution?  I am developing a create react app on localhost:3000 and trying to access through my Apollo Client a URI on a different site (I am testing with <a href=""https://developer.github.com/v4/explorer/"" rel=""noreferrer"">https://developer.github.com/v4/explorer/</a>).</p>&#xA;<p>I have added the fetchOptions mode of 'no-cors' to my new ApolloClient instance but I am still getting a CORS error in my console.  My enitre index.js file is below:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import React from 'react';&#xA;import ReactDOM from 'react-dom';&#xA;&#xA;import { ApolloProvider } from 'react-apollo';&#xA;import { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';&#xA;&#xA;import './index.css';&#xA;import App from './App';&#xA;import * as serviceWorker from './serviceWorker';&#xA;&#xA;&#xA;const client = new ApolloClient({&#xA;    link: new HttpLink({ uri: 'https://developer.github.com/v4/explorer/' }),&#xA;    fetchOptions: {&#xA;        mode: 'no-cors',&#xA;      },&#xA;    cache: new InMemoryCache()&#xA;  });&#xA;  &#xA;  const AppWithProvider = () =&gt; (&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;App /&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  );&#xA;ReactDOM.render(&lt;AppWithProvider /&gt;, document.getElementById('root'));&#xA;&#xA;&#xA;serviceWorker.unregister();&#xA;</code></pre>&#xA;<p>Error message in console:&#xA;Access to fetch at 'https://developer.github.com/v4/explorer/' from origin 'http://localhost:3000' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.</p>&#xA;",11326619,,9535703,2021-09-17 06:49:26,2022-03-29 18:07:13,CORS issue with using localhost:3000 to access graphql API at a different URL,<cors><graphql><create-react-app><react-apollo><apollo-client>,2,3,0,2019-09-10 22:37:24
57899313,2,,57891193,0,,"<p>The issue is resolved in the next beta version <a href=""https://pub.dev/packages/graphql_flutter/versions/2.1.1-beta.2"" rel=""nofollow noreferrer"">https://pub.dev/packages/graphql_flutter/versions/2.1.1-beta.2</a></p>&#xA;&#xA;<p>See: <a href=""https://github.com/zino-app/graphql-flutter/issues/412"" rel=""nofollow noreferrer"">https://github.com/zino-app/graphql-flutter/issues/412</a></p>&#xA;",10584731,,,,2019-09-12 03:27:24,"",,0,0,0,2019-09-12 03:27:24
57905398,2,,57791707,0,,<p>Issue was that these configurations cannot be run on the client and are not compatible with React. </p>&#xA;,10553879,,,,2019-09-12 11:08:44,"",,0,1,0,2019-09-12 11:08:44
57915782,2,,57778722,9,,"<p>If you add:</p>&#xA;&#xA;<pre><code>""resolutions"": {&#xA;  ""apollo-client"": ""2.6.3""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In your <code>package.json</code> and reinstall it should work.</p>&#xA;&#xA;<p>You might see this warning: </p>&#xA;&#xA;<pre><code>Resolution field ""apollo-client@2.6.3"" is incompatible with requested version ""apollo-client@2.4.6""&#xA;</code></pre>&#xA;&#xA;<p>it is because Appsync is relying on a old version of react-apollo, but I've found that is working fine.</p>&#xA;&#xA;<p>You could follow <a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-js/issues/450"" rel=""noreferrer"">this issue</a> which hopefully will be resolved soon and we'll not need to do this anymore.</p>&#xA;",4285914,,,,2019-09-12 23:56:33,"",,0,1,0,2019-09-12 23:56:33
57916587,2,,57916386,1,,"<p>this works for me, creating a function:</p>&#xA;&#xA;<pre><code>function encode(query) {&#xA;  return encodeURIComponent(query).replace(/'/g, ""%27"").replace(/""/g, ""%22"");&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and passing:</p>&#xA;&#xA;<pre><code>const query = {&#xA;    student(id: studentId) {&#xA;      personal {&#xA;        address&#xA;        grade&#xA;        etc {morestuff}&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>returns desired results. Hope this helps someone. </p>&#xA;",4561925,,,,2019-09-13 02:25:52,"",,0,0,0,2019-09-13 02:25:52
57917015,2,,57916913,4,,"<p>I removed graphql from Settings-Editor-FileTypes/Files opened in associated applications, and now it works fine.</p>&#xA;",9957900,,,,2019-09-13 03:40:06,"",,0,0,0,2019-09-13 03:40:06
57950071,2,,57947407,5,,"<p>After looking at the stacktrace you posted, I believe that the actual cause of the error is the following line: </p>&#xA;&#xA;<p><code>Caused by: java.net.UnknownHostException: Unable to resolve host</code></p>&#xA;&#xA;<p>It appears that your device is unable to resolve the server URL through DNS. This means that your DNS server may be unreachable, or you've mistyped the server URL, or your device cannot access the DNS server for some reason (e.g. firewall). I would open a browser inside the device and try to connect to the server (just so that I can establish that a connection is possible). </p>&#xA;",6379785,,,,2019-09-16 03:36:33,"",,0,1,0,2019-09-16 03:36:33
57953678,1,57953753,,1,1648,"<p>I'm working on a <em>NextJS</em> project using <em>Strapi</em> as CMS, with <em>GraphQL</em> plugin and <em>Apollo</em> as GraphQL client. My issue is related to Apollo <em>Hooks</em>. I'm trying to use query fragments with the new <code>useQuery</code> hook, with no success. </p>&#xA;&#xA;<p>Testing my query on GraphQL playground, everything is ok - data are returned correctly, as shown here:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/PnjxH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PnjxH.png"" alt=""GraphQL test""></a></p>&#xA;&#xA;<p>But, by porting this one inside the project, it generates a <code>500 network error</code> in Apollo client like this:</p>&#xA;&#xA;<pre><code>Error while running `getDataFromTree` { Error: Network error: Response not successful: Received status code 500&#xA;    at new ApolloError (/Users/lucacattide/Vagrant/debian/public/LC/front-end/node_modules/apollo-client/bundle.umd.js:92:26)&#xA;    at /Users/lucacattide/Vagrant/debian/public/LC/front-end/node_modules/apollo-client/bundle.umd.js:1587:34&#xA;    at /Users/lucacattide/Vagrant/debian/public/LC/front-end/node_modules/apollo-client/bundle.umd.js:2007:15&#xA;    at Set.forEach (&lt;anonymous&gt;)&#xA;    at /Users/lucacattide/Vagrant/debian/public/LC/front-end/node_modules/apollo-client/bundle.umd.js:2005:26&#xA;    at Map.forEach (&lt;anonymous&gt;)&#xA;    at QueryManager.broadcastQueries (/Users/lucacattide/Vagrant/debian/public/LC/front-end/node_modules/apollo-client/bundle.umd.js:2003:20)&#xA;    at /Users/lucacattide/Vagrant/debian/public/LC/front-end/node_modules/apollo-client/bundle.umd.js:1482:29&#xA;    at process._tickCallback (internal/process/next_tick.js:68:7)&#xA;  graphQLErrors: [],&#xA;  networkError:&#xA;   { ServerError: Response not successful: Received status code 500&#xA;       at Object.exports.throwServerError (/Users/lucacattide/Vagrant/debian/public/LC/front-end/node_modules/apollo-link-http-common/lib/index.js:23:17)&#xA;       at /Users/lucacattide/Vagrant/debian/public/LC/front-end/node_modules/apollo-link-http-common/lib/index.js:48:21&#xA;       at process._tickCallback (internal/process/next_tick.js:68:7)&#xA;     name: 'ServerError',&#xA;     response:&#xA;      Response {&#xA;        size: 0,&#xA;        timeout: 0,&#xA;        [Symbol(Body internals)]: [Object],&#xA;        [Symbol(Response internals)]: [Object] },&#xA;     statusCode: 500,&#xA;     result: { errors: [Array] } },&#xA;  message:&#xA;   'Network error: Response not successful: Received status code 500',&#xA;  extraInfo: undefined }&#xA;</code></pre>&#xA;&#xA;<p>Here's my implementation:</p>&#xA;&#xA;<p><strong>Apollo</strong></p>&#xA;&#xA;<pre><code>// Module Start&#xA;// Apollo Client&#xA;// JS imports&#xA;import {&#xA;  ApolloClient&#xA;} from 'apollo-client';&#xA;import {&#xA;  InMemoryCache&#xA;} from 'apollo-cache-inmemory';&#xA;import {&#xA;  HttpLink&#xA;} from 'apollo-link-http';&#xA;import {&#xA;  onError&#xA;} from 'apollo-link-error';&#xA;import {&#xA;  ApolloLink&#xA;} from 'apollo-link';&#xA;import fetch from 'isomorphic-unfetch';&#xA;&#xA;let apolloClient = null;&#xA;&#xA;/**&#xA; * @description Client definition&#xA; * @author Luca Cattide&#xA; * @date 2019-06-27&#xA; * @param {*} initialState&#xA; * @return {object}&#xA; */&#xA;function create(initialState) {&#xA;  const isBrowser = typeof window !== 'undefined';&#xA;&#xA;  // Check out https://github.com/zeit/next.js/pull/4611 if you want to use the AWSAppSyncClient&#xA;  return new ApolloClient({&#xA;    connectToDevTools: isBrowser,&#xA;    // Disables forceFetch on the server (so queries are only run once)&#xA;    ssrMode: !isBrowser,&#xA;    link: ApolloLink.from([&#xA;      onError(({&#xA;        graphQLErrors,&#xA;        networkError&#xA;      }) =&gt; {&#xA;        if (graphQLErrors)&#xA;          graphQLErrors.forEach(({&#xA;              message,&#xA;              locations,&#xA;              path&#xA;            }) =&gt;&#xA;            console.log(&#xA;              `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,&#xA;            ),&#xA;          );&#xA;        if (networkError) console.log(`[Network error]: ${networkError}`);&#xA;      }),&#xA;      new HttpLink({&#xA;        // Server URL (must be absolute) - Es. https://api.graph.cool/simple/v1/cixmkt2ul01q00122mksg82pn&#xA;        // TODO: Change to proper url in production&#xA;        uri: 'http://localhost:1337/graphql',&#xA;        // Additional fetch() options like `credentials` or `headers`&#xA;        credentials: 'same-origin',&#xA;        // Use fetch() polyfill on the server&#xA;        fetch: !isBrowser &amp;&amp; fetch&#xA;      })&#xA;    ]),&#xA;    cache: new InMemoryCache().restore(initialState || {}),&#xA;  });&#xA;}&#xA;&#xA;/**&#xA; * @description Client initialization&#xA; * @author Luca Cattide&#xA; * @date 2019-06-27&#xA; * @export&#xA; * @param {*} initialState&#xA; * @return {object}&#xA; */&#xA;export default function initApollo(initialState) {&#xA;  // Make sure to create a new client for every server-side request so that data&#xA;  // isn't shared between connections (which would be bad)&#xA;  if (typeof window === 'undefined') {&#xA;    return create(initialState);&#xA;  }&#xA;&#xA;  // Reuse client on the client-side&#xA;  if (!apolloClient) {&#xA;    apolloClient = create(initialState);&#xA;  }&#xA;&#xA;  return apolloClient;&#xA;}&#xA;// Module End&#xA;</code></pre>&#xA;&#xA;<p><strong>Query</strong></p>&#xA;&#xA;<pre><code>// Module Start&#xA;// JS imports&#xA;import gql from 'graphql-tag';&#xA;import Pages from './fragments/pages';&#xA;&#xA;// Queries&#xA;// Page&#xA;const PAGE_QUERY = gql`&#xA;  query Pages($where: JSON, $isHome: Boolean!) {&#xA;    pages(where: $where) {&#xA;      ...PagesFragmentsPage&#xA;      ...PagesFragmentsHome @include(if: $isHome)&#xA;    }&#xA;  }&#xA;&#xA;  ${Pages.fragments.page}&#xA;  ${Pages.fragments.home}&#xA;`;&#xA;&#xA;// Module export&#xA;export default PAGE_QUERY;&#xA;// Module end&#xA;</code></pre>&#xA;&#xA;<p><strong>Fragments</strong></p>&#xA;&#xA;<pre><code>// Module Start&#xA;// JS imports&#xA;import gql from 'graphql-tag';&#xA;&#xA;// Fragments&#xA;const Pages = {};&#xA;&#xA;// Pages&#xA;Pages.fragments = {&#xA;  page: gql`&#xA;    fragment PagesFragmentsPage on Page {&#xA;      id&#xA;      name_en&#xA;      keywords_en&#xA;      description_en&#xA;    }&#xA;  `,&#xA;  home: gql`&#xA;    fragment PagesFragmentHome on Page {&#xA;      headline_en&#xA;      cta_en&#xA;      cta_two_en&#xA;      cta_three_en&#xA;      cta_four_en&#xA;      cta_five_en&#xA;      summary_title_en&#xA;      summary_en&#xA;      headline_two_en&#xA;      headline_three_en&#xA;      headline_four_en&#xA;      headline_five_en&#xA;      section_title_en&#xA;      indicators {&#xA;        id&#xA;        value&#xA;        label_en&#xA;      }&#xA;      testimonials {&#xA;        id&#xA;        name&#xA;        quote_en&#xA;      }&#xA;    }&#xA;  `,&#xA;};&#xA;&#xA;// Module export&#xA;export default Pages;&#xA;// Module End&#xA;</code></pre>&#xA;&#xA;<p><strong>NextJS Page</strong></p>&#xA;&#xA;<pre><code>// Module Start&#xA;// Home&#xA;// Various imports...&#xA;// JS imports&#xA;import dynamic from 'next/dynamic'&#xA;import {useQuery} from '@apollo/react-hooks'&#xA;import PAGE_QUERY from '../backend/queries/pages'&#xA;&#xA;const ErrorDb = dynamic(() =&gt;&#xA;  import('../components/ErrorDb')&#xA;)&#xA;// Main&#xA;const Index = ({origin, pathname}) =&gt; {&#xA;  const {loading, error, data} = useQuery(PAGE_QUERY, {&#xA;    variables: {&#xA;      where: {&#xA;        name_en: 'Home'&#xA;      },&#xA;      isHome: true&#xA;    }&#xA;  });&#xA;  const {pages} = data;&#xA;&#xA;  // Exception check&#xA;  if (error) {&#xA;    return &lt;ErrorDb /&gt;&#xA;  }&#xA;  // DB fetching check&#xA;  if (loading) {&#xA;    return null;&#xA;  }&#xA;&#xA;  return (&#xA;    &lt;&gt;&#xA;      // Implementation...&#xA;    &lt;/&gt;&#xA;  );&#xA;}&#xA;&#xA;// Module export&#xA;export default Index&#xA;// Module End&#xA;</code></pre>&#xA;&#xA;<p>What is generating the error?&#xA;This is my first project by using these technologies, so probably I'm missing something.</p>&#xA;&#xA;<p>Thanks in advance for the help.</p>&#xA;",0,user7554217,,,2019-09-16 09:17:34,Error using GraphQL Fragments with Apollo Hooks,<graphql><apollo><next.js><strapi>,1,0,0,2019-09-16 09:12:55
57958658,2,,56448255,4,,"<p>Try IRI ""/api/menus/1""&#xA;Or you can change prefix in routes/api_platform.yaml</p>&#xA;",5572426,,,,2019-09-16 14:09:32,"",,0,0,0,2019-09-16 14:09:32
57961421,2,,53814647,2,,"<p>I used some of these code examples but had to change it slightly to add the onRequest param to the cy.route and also add the date.Now (could add any auto incrementer, open to other solutions on this) to allow multiple calls to the same GraphQL operation name in the same test. Thanks for pointing me in the right direction!</p>&#xA;&#xA;<pre><code>Cypress.Commands.add('waitForGraph', (operationName) =&gt; {&#xA;  const now = Date.now()&#xA;  let operationNameFromRequest&#xA;  cy.route({&#xA;    method: 'POST',&#xA;    url: '**graphql',&#xA;    onRequest: (xhr) =&gt; {&#xA;      operationNameFromRequest = xhr.request.body.operationName&#xA;    },&#xA;  }).as(`graphqlRequest${now}`)&#xA;&#xA;  //This will capture every request&#xA;  cy.wait(`@graphqlRequest${now}`).then(({ xhr }) =&gt; {&#xA;    // If the captured request doesn't match the operation name of your query&#xA;    // it will wait again for the next one until it gets matched.&#xA;    if (operationNameFromRequest !== operationName) {&#xA;      return cy.waitForGraph(operationName)&#xA;    }&#xA;  })&#xA;})&#xA;&#xA;</code></pre>&#xA;&#xA;<p>to use:</p>&#xA;&#xA;<pre><code>cy.waitForGraph('QueryAllOrganizations').then((xhr) =&gt; { ...&#xA;</code></pre>&#xA;",6539835,,6539835,2019-09-30 21:04:36,2019-09-30 21:04:36,"",,0,0,0,2019-09-16 17:02:47
57962974,1,57965318,,0,123,"<p>i'm trying to log a new custom tag with the name <code>project</code> but in the slack notification just appear the original tags (like logger),</p>&#xA;<p>In sentry if I put:&#xA;<img src=""https://user-images.githubusercontent.com/13756563/64977788-b3c22b80-d879-11e9-9f8a-48a91420e8d6.png"" alt=""Sentry"" /></p>&#xA;<p><img src=""https://user-images.githubusercontent.com/13756563/64984881-5504ae00-d889-11e9-8a77-a638feb9d451.png"" alt=""Slack___capek-dev___Capek___1_nuevo_elemento"" /></p>&#xA;<ul>&#xA;<li><em>doesn't work ^</em></li>&#xA;</ul>&#xA;<p>but if use  a <code>logger</code> tag:&#xA;<img src=""https://user-images.githubusercontent.com/13756563/64977825-c3417480-d879-11e9-97ec-c02afce1ca0b.png"" alt=""Sentry"" /></p>&#xA;<p><img src=""https://user-images.githubusercontent.com/13756563/64984423-75803880-d888-11e9-9551-4724c742abba.png"" alt=""Slack___capek-dev___Capek"" /></p>&#xA;<ul>&#xA;<li><em><code>logger</code> is a custom tag, works fine! ^</em></li>&#xA;</ul>&#xA;<h2> creating a custom tag</h2>&#xA;<p><em>Mode 1</em></p>&#xA;<p>i'm working on python with flask and try to create the custom tag on that way:</p>&#xA;<p><img src=""https://user-images.githubusercontent.com/13756563/64977539-372f4d00-d879-11e9-9430-59c87f0b3dba.png"" alt=""Untitled-1_—_renovacion-urbana-full-stack"" /></p>&#xA;<p><em>Mode 2</em></p>&#xA;<p><img src=""https://user-images.githubusercontent.com/13756563/64977524-30083f00-d879-11e9-8d1e-c5cf025d2963.png"" alt=""Untitled-1_—_renovacion-urbana-full-stack"" /></p>&#xA;<p>neither of these cases work for me, what i'm doing bad?</p>&#xA;<p>Thanks</p>&#xA;",5393621,,-1,2020-06-20 09:12:55,2019-09-17 11:14:15,Slack notification does not trigger on custom tag,<python><graphql><sentry>,1,0,0,2019-09-16 19:04:17
57963964,1,,,1,274,<p>I am trying to do further development on a existing GraphQL application using my local postgreSQL database and angular. The DB is up and running as well as the Backend on my local computer. However when I attempt to login to the app or sign up or do anything that sends anything to the database I get this error: </p>&#xA;&#xA;<p>Error: GraphQL error: The server does not support SSL connections</p>&#xA;&#xA;<p>It works fine if I use the production server and live database. I tried installing OpenSSL and adding these lines to the postgressql.conf however still doesn't work:</p>&#xA;&#xA;<pre><code>ssl = on&#xA;ssl_ca_file = 'E:/Work/SSL/certs'&#xA;ssl_cert_file = 'E:/Work/SSL/certsserver.crt'&#xA;#ssl_crl_file = ''&#xA;ssl_key_file = 'E:/Work/SSL/certsserver.key'&#xA;</code></pre>&#xA;&#xA;<p>any help would be appreciated. </p>&#xA;,3827252,,,,2019-09-16 20:25:18,Error: GraphQL error: The server does not support SSL connections,<node.js><angular><postgresql><graphql>,0,0,0,2019-09-16 20:25:18
57965318,2,,57962974,0,,"<p>Just need put the environment in the init function.</p>&#xA;&#xA;<p>look at here <a href=""https://github.com/getsentry/sentry-python/issues/501"" rel=""nofollow noreferrer"">https://github.com/getsentry/sentry-python/issues/501</a></p>&#xA;",5393621,,,,2019-09-16 22:58:38,"",,0,0,0,2019-09-16 22:58:38
57975644,1,,,4,406,"<p>I am running an AWS AppSync GraphQL API Service, although the question could equally be applied to apollo-server, based on what I know.</p>&#xA;&#xA;<p>From my understanding of GraphQL resolvers and how they chain, it seems that a malicious authorized client could make an authenticated request against an object they have access to, then chain requests together in the body in order to eventually access records they are not authorized for. <strong>What are one or more effective Design Patterns for protecting against such an attack</strong>?</p>&#xA;&#xA;<p>For an example, I will use a situation that is not my actual one, but should be simple enough to see what I mean. Imagine that we are running a student grades database.</p>&#xA;&#xA;<p>There are types called Students, Grades, and Courses.</p>&#xA;&#xA;<p>For convenience, when you look up a Student, there is a resolver within that returns Grades. Also for convenience, when you look up a Grade, there is a resolver to the Course it was in. Also for convenience, when you look up a Course, you can see the enrolled Students.</p>&#xA;&#xA;<p>Now I, as a student, have every reason to call the following:</p>&#xA;&#xA;<pre><code>query {&#xA;  getMyRecord {&#xA;    name&#xA;    studentId&#xA;    ssn&#xA;    grades {&#xA;      gradeValue&#xA;      semester&#xA;      course {&#xA;        name&#xA;        courseId&#xA;        courseNumber&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This would be a very normal call. Also, the GraphQL API supports methods for course admins and professors too, so they have every right to call something like:</p>&#xA;&#xA;<pre><code>query {&#xA;  getCourse {&#xA;    name&#xA;    courseId&#xA;    courseNumber&#xA;    students {&#xA;      studentId&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Again, a very reasonable thing for our GraphQL API to support.</p>&#xA;&#xA;<p>The problem is that a malicious student could examine the schema and decide to extend the first query above to read:</p>&#xA;&#xA;<pre><code>query {&#xA;  getMyRecord {&#xA;    name&#xA;    studentId&#xA;    ssn&#xA;    grades {&#xA;      gradeValue&#xA;      semester&#xA;      course {&#xA;        name&#xA;        courseId&#xA;        courseNumber&#xA;        students { #note here!&#xA;          name&#xA;          ssn&#xA;          grades {&#xA;            gradeValue&#xA;            #... and so on!&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This would result in maliciously beginning to see the grades and ssn's of other students, the courses they are taking, what students are enrolled in THOSE courses, and so on.</p>&#xA;&#xA;<p>I can think of a few design patterns to protect against this, but they all seem inelegant. In particular, I could rerun the authorizer at every single step of a chained resolver, but that will result in a substantially increased workload with lots of duplication of work for 99% of calls.</p>&#xA;&#xA;<p>I very much look forward to learning of established design patterns for protecting against such an attack.</p>&#xA;",4346749,,8786986,2019-09-19 00:47:08,2019-09-19 00:47:08,GraphQL: How to prevent nesting attack to gain access to unauthorized data?,<amazon-web-services><security><graphql><aws-appsync>,2,0,0,2019-09-17 13:44:39
57976518,2,,57713253,0,,"<p>Node doesn't have a global fetch method built in. You will need to polyfill it yourself. There are packages that can assist with this: <a href=""https://www.npmjs.com/package/jest-fetch-mock"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/jest-fetch-mock</a></p>&#xA;",2804256,,,,2019-09-17 14:30:12,"",,0,0,0,2019-09-17 14:30:12
57981803,2,,57981571,1,,"<p>This is likely occurring because Gatsby is inferring your <code>profile.image</code> field as a String instead of a File. This can happen if one or more of the provided path strings does not resolve to a file when you boot Gatsby. Note that Gatsby will not rerun type-inference for existing fields after it boots, so you will need to restart the development server to pick up these changes.</p>&#xA;",203130,,,,2019-09-17 20:42:32,"",,0,5,0,2019-09-17 20:42:32
58001724,1,,,1,1415,"<p>I have an app written with reason-react using apollo-client. I have defined some fragments on the frontend to basically reuse some field definitions. I'm setting up automated tests for a components that uses fragments, but I keep getting this warning saying I need to use the <code>IntrospectionFragmentMatcher</code>.</p>&#xA;&#xA;<pre><code>'You are using the simple (heuristic) fragment matcher, but your queries contain union or interface types. Apollo Client will not be able to accurately map fragments. To make this error go away, use the `IntrospectionFragmentMatcher` as described in the docs: https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher'&#xA;</code></pre>&#xA;&#xA;<p>I've tried setting up the fragment matcher according to the <a href=""https://www.apollographql.com/docs/react/advanced/fragments/#fragments-on-unions-and-interfaces"" rel=""nofollow noreferrer"">docs</a>. The codegen result returns no types:</p>&#xA;&#xA;<pre><code>{&#xA;  ""__schema"": {&#xA;    ""types"": []&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I queried my server and looked at the manual method recommended by apollo-client, I noticed it would also return no types.</p>&#xA;&#xA;<p>Another strange thing is that when I don't use the fragment matcher, I get the mocked response back but I just get the warnings from apollo. If I do use it then the mocked response doesn't return correctly.</p>&#xA;&#xA;<p>Why would I query the graphql api for fragments defined in my frontend code? Why would I only received these errors when running the tests &amp; using mock data, but not when running my actual application?</p>&#xA;",1869534,,7943564,2019-09-19 16:30:46,2019-09-19 16:30:46,How do I generate fragment types for apollo client?,<graphql><apollo-client>,1,0,0,2019-09-18 23:03:04
58009969,2,,58006114,0,,<p>This is actual working. I was testing behind a proxy. I think it was a proxy issue.</p>&#xA;,668499,,,,2019-09-19 11:26:27,"",,0,0,0,2019-09-19 11:26:27
58023665,1,58023753,,3,10863,"<p>I am trying to get the Next.js example called ""With Apollo Auth"" working : <a href=""https://github.com/zeit/next.js/tree/master/examples/with-apollo-auth"" rel=""nofollow noreferrer"">https://github.com/zeit/next.js/tree/master/examples/with-apollo-auth</a></p>&#xA;&#xA;<p>I set everything up but I get the error:</p>&#xA;&#xA;<pre><code>TypeError: Cannot destructure property `req` of 'undefined' or 'null'.&#xA;&#xA;const { AppTree, ctx: { req, res }} = ctx &lt;----- Error line&#xA;</code></pre>&#xA;&#xA;<p>This error comes from the following page which is boilerplate code provided by Next.js:</p>&#xA;&#xA;<pre><code>import initApollo from './initApollo'&#xA;&#xA;function parseCookies (req, options = {}) {&#xA;  return cookie.parse(req ? req.headers.cookie || '' : document.cookie, options)&#xA;}&#xA;&#xA;export default App =&gt; {&#xA;  return class WithData extends React.Component {&#xA;    // It is needed for better devtools experience. Check how react devtools shows it: ""MyApp WithData""&#xA;    static displayName = `WithData(${App.displayName})`&#xA;&#xA;    // Since apolloState is required but it is missed before this method returns the new props,&#xA;    // so it is needed to provide defaults&#xA;    static defaultProps = {&#xA;      apolloState: {}&#xA;    }&#xA;&#xA;    static propTypes = {&#xA;      apolloState: PropTypes.object.isRequired&#xA;    }&#xA;&#xA;    static async getInitialProps (ctx) {&#xA;      const { AppTree, ctx: { req, res }} = ctx&#xA;      const apollo = initApollo(&#xA;        {},&#xA;        {&#xA;          getToken: () =&gt; parseCookies(req).token&#xA;        }&#xA;      )&#xA;&#xA;      ctx.ctx.apolloClient = apollo&#xA;&#xA;      let appProps = {}&#xA;      if (App.getInitialProps) {&#xA;        appProps = await App.getInitialProps(ctx)&#xA;      }&#xA;&#xA;      if (res &amp;&amp; res.finished) {&#xA;        // When redirecting, the response is finished.&#xA;        // No point in continuing to render&#xA;        return {}&#xA;      }&#xA;&#xA;      if (typeof window === 'undefined') {&#xA;        // Run all graphql queries in the component tree&#xA;        // and extract the resulting data&#xA;        try {&#xA;          // Run all GraphQL queries&#xA;          await getDataFromTree(&lt;AppTree {...appProps} apolloClient={apollo} /&gt;)&#xA;        } catch (error) {&#xA;          // Prevent Apollo Client GraphQL errors from crashing SSR.&#xA;          // Handle them in components via the data.error prop:&#xA;          // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error&#xA;          console.error('Error while running `getDataFromTree`', error)&#xA;        }&#xA;&#xA;        // getDataFromTree does not call componentWillUnmount&#xA;        // head side effect therefore need to be cleared manually&#xA;        Head.rewind()&#xA;      }&#xA;&#xA;      // Extract query data from the Apollo's store&#xA;      const apolloState = apollo.cache.extract()&#xA;&#xA;      return {&#xA;        ...appProps,&#xA;        apolloState&#xA;      }&#xA;    }&#xA;&#xA;    constructor (props) {&#xA;      super(props)&#xA;      // `getDataFromTree` renders the component first, the client is passed off as a property.&#xA;      // After that rendering is done using Next's normal rendering pipeline&#xA;      // @ts-ignore&#xA;      this.apolloClient = initApollo(props.apolloState, {&#xA;        getToken: () =&gt; {&#xA;          // @ts-ignore&#xA;          return parseCookies().token&#xA;        }&#xA;      })&#xA;    }&#xA;&#xA;    render () {&#xA;      // @ts-ignore&#xA;      return &lt;App apolloClient={this.apolloClient} {...this.props} /&gt;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm not sure why the ctx is undefined. </p>&#xA;",10553879,,,,2019-09-20 07:30:13,TypeError: Cannot destructure property `req` of 'undefined' or 'null',<next.js><apollo-client>,1,0,0,2019-09-20 07:25:04
58033039,1,,,3,845,"<p>Here's some context: I'm using Rails 5.1.4, Ruby 2.6.1, and GraphQL 1.9. I have my Rails project currently configured as a REST api only project. However, I'm starting to convert it to using GraphQL. After running the graphql related generators, I currently have a <code>graphql_controller.rb</code> file and a <code>query_type.rb</code> file.</p>&#xA;&#xA;<p>For my database model, I have a <code>SchoolCourse</code> model which describes a particular course taught in college. For this model, I've defined a <code>school_course_type.rb</code>. In my <code>query_type.rb</code> file, I've defined a field for the <code>schoolCourse</code> query.</p>&#xA;&#xA;<p>However, there are 2 types of users who can log into my application - teachers and students. If the user is a teacher, then accessing the application and querying for <code>schoolCourse</code> will return all the school courses that this particular instructor teachers. If the user is a student, then accessing the application and querying for <code>schoolCourse</code> will return all the school courses that this particular student attends. In both cases, the <code>schoolCourse</code> data is the same type (<code>school_course_type</code>).</p>&#xA;&#xA;<p>I currently have the <code>schoolCourse</code> query defined in <code>query_type.rb</code> to work for teachers. However, if I want to extend the <code>schoolCourse</code> query to work for students as well, it seems like I'll have to update the <code>schoolCourse</code> query to include <code>if / else</code> logic to look something like this:</p>&#xA;&#xA;<pre><code># This is how it currently looks like:&#xA;&#xA;def schoolCourses&#xA;  teacher_user = context[:current_user]&#xA;  teacher_user.school_courses&#xA;end&#xA;&#xA;&#xA;# This is how I think it would change:&#xA;&#xA;def schoolCourses&#xA;  user = context[:current_user]&#xA;&#xA;  if user.type == 'teacher'&#xA;    user.school_courses&#xA;  else&#xA;    # different way for students to retrieve school courses&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>While this may work, this isn't ideal. <strong>The main problem I want to solve is to have multiple <code>schoolCourse</code> queries defined and have it so that teachers use one version and students use the other version.</strong></p>&#xA;&#xA;<p>In my current application, I have 2 <code>schoolCourse</code> controllers - one for teachers and one for students, and by splitting it into two files, my API is much cleaner. <strong>Is there any way to do something similar with the <code>query_type.rb</code> file where I have a query_type for teachers and another for students?</strong> How have you dealt with this problem in your projects?</p>&#xA;&#xA;<p><strong>Adding more context - 9/20/2019 2:10pm PST</strong></p>&#xA;&#xA;<ol>&#xA;<li><p><strong>How are school courses differentiated between student and teacher?</strong> So school course objects are identical for both students and teachers. Currently in my RESTful backend, I have 2 separate controller files for getting student courses. One is for teachers and the other is for students. When the teacher's school course controller gets called, it's only returning the school courses for the logged in teacher. Similarly, when the student's school course controller gets called, it's only returning the school courses for the logged in student.</p></li>&#xA;<li><p><strong>Can you elaborate on why you want to have multiple school course queries?</strong> The reason why I'm thinking I want multiple school course queries is because I don't want to have to add <code>if / else</code> logic inside the single school course query to do something for teachers and something else for students. I know it'll work but I probably have 50 other models and I don't have to put the same type of <code>if / else</code> logic inside each query.</p></li>&#xA;</ol>&#xA;",1849876,,1849876,2019-09-20 21:13:00,2019-09-20 21:13:00,"For a Rails and GraphQL project, how do you define multiple queries with the same name?",<ruby-on-rails><ruby-on-rails-5><graphql>,1,0,0,2019-09-20 17:47:33
58038945,1,58040379,,6,2782,"<p>I was learning GraphQL and about to finish the tutorial and this never happened before.</p>&#xA;&#xA;<p>The problem is that the GraphQL server keeps receiving requests after opening GraphQL Playground in the browser even though no query or mutation is made.</p>&#xA;&#xA;<p>I see these sort of responses being returned by the server:</p>&#xA;&#xA;<pre><code>{&#xA;    ""name"":""deprecated"",&#xA;    ""description"":""Marks an element of a GraphQL schema as no longer supported."",&#xA;    ""locations"":[&#xA;      ""FIELD_DEFINITION"",&#xA;      ""ENUM_VALUE""&#xA;    ],&#xA;    ""args"":[&#xA;      {&#xA;          ""name"":""reason"",&#xA;          ""description"":""Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax (as specified by [CommonMark](https://commonmark.org/)."",&#xA;          ""type"":{&#xA;            ""kind"":""SCALAR"",&#xA;            ""name"":""String"",&#xA;            ""ofType"":null&#xA;          },&#xA;          ""defaultValue"":""\""No longer supported\""""&#xA;      }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;",10583765,,6024220,2020-02-09 00:58:29,2020-02-09 00:58:29,Apollo GraphQL keeps receiving requests with no queries or mutations being made,<javascript><node.js><typescript><graphql><apollo>,1,0,0,2019-09-21 09:26:26
58063140,1,,,2,1025,"<p>I successfully deployed uwsgi + nginx + Django. But I want to communicate with my server using websocket.</p>&#xA;&#xA;<p>I followed this tutorial to handle normal https requests.&#xA;<a href=""https://uwsgi-docs.readthedocs.io/en/latest/tutorials/Django_and_nginx.html"" rel=""nofollow noreferrer"">https://uwsgi-docs.readthedocs.io/en/latest/tutorials/Django_and_nginx.html</a></p>&#xA;&#xA;<p>The nginx conf file settings are like this:</p>&#xA;&#xA;<pre><code>upstream django {&#xA;    server unix:///path/to/your/mysite/mysite.sock; # for a file socket&#xA;}&#xA;&#xA;# configuration of the server&#xA;server {&#xA;    # the port your site will be served on&#xA;    listen 443 ssl; # managed by Certbot&#xA;    # the domain name it will serve for&#xA;    server_name example.com; # substitute your machine's IP address or FQDN&#xA;    charset     utf-8;&#xA;&#xA;&#xA;&#xA;    location /static {&#xA;        alias /path/to/your/mysite/static; # your Django project's static files - amend as required&#xA;    }&#xA;&#xA;    # Finally, send all non-media requests to the Django server.&#xA;    location / {&#xA;        uwsgi_pass  django;&#xA;        include     /path/to/your/mysite/uwsgi_params; # the uwsgi_params file you installed&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I Googled a lot and found that people recommended to add these settings:</p>&#xA;&#xA;<pre><code>proxy_http_version 1.1;&#xA;proxy_set_header Upgrade $http_upgrade;&#xA;proxy_set_header Connection ""upgrade"";&#xA;proxy_redirect off;&#xA;</code></pre>&#xA;&#xA;<p>It does not work. I did not use <code>proxy_pass</code> because I am already using <code>uwsgi_pass  django;</code> and my client attempts to connect using websocket to the same url (location) I uwsgi_pass to django. I looked into uwsgi docs and found this page:&#xA;<a href=""https://uwsgi-docs.readthedocs.io/en/latest/WebSockets.html"" rel=""nofollow noreferrer"">https://uwsgi-docs.readthedocs.io/en/latest/WebSockets.html</a></p>&#xA;&#xA;<p>According to this page, I do not need additional settings if I just add --http-websockets option. So I did. Like this:</p>&#xA;&#xA;<pre><code>/usr/local/bin/uwsgi --emperor /etc/uwsgi/vassals --http-websockets www-data --daemonize /var/log/uwsgi-emperor.log&#xA;</code></pre>&#xA;&#xA;<p>It is added in /etc/rc.local. This command does not work either. I also tried to add <code>http-websockets = true</code> to .ini file. It even made uwsgi stop. So I removed that option.</p>&#xA;&#xA;<p>What is wrong here?</p>&#xA;&#xA;<p>I get 400 Bad Request for every websocket request. The only data I see is (Opcode -1). There is no graphql error message.</p>&#xA;",11327073,,,,2021-10-15 10:31:02,How to Configure uwsgi + nginx + Django + websocket?,<django><nginx><websocket><uwsgi><graphql-subscriptions>,1,20,0,2019-09-23 13:04:37
58064681,2,,52795782,0,,"<p>Instead of calling your student endpoint in the response, use a pipeline resolver and stitch the response from different steps using stash, context (prev.result/result), etc. </p>&#xA;",3446089,,,,2019-09-23 14:30:44,"",,0,0,0,2019-09-23 14:30:44
58141729,2,,55292947,2,,"<p>Currently I'm using Apollo iOS version 0.16.0 which is the latest release &#xA;<a href=""https://github.com/apollographql/apollo-ios"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-ios</a></p>&#xA;&#xA;<p>There are a few changes related to version lower than 0.13.0, you can take a look at <a href=""https://github.com/apollographql/apollo-ios/releases/tag/0.13.0"" rel=""nofollow noreferrer"">0.13.0 release notes</a> - Don't use <code>(result, error)</code> because they've switched from a tuple of nullable parameters to a Result.</p>&#xA;&#xA;<p>Try to use something like this:</p>&#xA;&#xA;<pre><code>Apollo.shared.client.fetch(query: GetProductQuery(id: id)) { results in&#xA;&#xA;        do {&#xA;&#xA;            if let gqlErrors = try results.get().errors {&#xA;                if(!gqlErrors.isEmpty) {&#xA;                    apiResponseError.message = gqlErrors[0].message&#xA;                    publishSubject.onError(apiResponseError)&#xA;                }&#xA;                return&#xA;            }&#xA;&#xA;            guard let gplResult = try results.get().data?.getProduct else {&#xA;                apiResponseError.message = ""Error getting results""&#xA;                publishSubject.onError(apiResponseError)&#xA;                return&#xA;            }&#xA;&#xA;            publishSubject.onNext(gplResult)&#xA;&#xA;        } catch let errorException {&#xA;            apiResponseError.message = errorException.localizedDescription&#xA;            publishSubject.onError(apiResponseError)&#xA;        }&#xA;&#xA;    }&#xA;</code></pre>&#xA;",4530241,,,,2019-09-27 21:59:57,"",,0,0,0,2019-09-27 21:59:57
58174321,1,,,0,118,"<p>we are seeing database sessions more than the max connections configured. </p>&#xA;&#xA;<p>database.runStream( queryOptions)</p>&#xA;&#xA;<p>below was the session configuration :&#xA;const SESSIONCONFIG = {&#xA;    max: 10,&#xA;    min: 1,&#xA;    keepAlive: 10&#xA;};</p>&#xA;&#xA;<p>How can we print sessionid using database.runStream api call to ensure same sessionid was reused?</p>&#xA;&#xA;<p>created database connection, using session config options. session pool displayed with below details:</p>&#xA;&#xA;<pre><code>'&#xA;pool_:&#xA;   SessionPool {&#xA;     _events:&#xA;      [Object: null prototype] { error: [Function: bound emit], close: [Function] },&#xA;     _eventsCount: 2,&#xA;     _maxListeners: undefined,&#xA;     isOpen: true,&#xA;     database: [Circular],&#xA;     options:&#xA;      { acquireTimeout: Infinity,&#xA;        concurrency: Infinity,&#xA;        fail: false,&#xA;        idlesAfter: 10,&#xA;        keepAlive: '1',&#xA;        labels: [Object],&#xA;        max: '5',&#xA;        maxIdle: 1,&#xA;        min: '1',&#xA;        writes: 0 },&#xA;     _myDatabaseConnection: { readonly: [Array], readwrite: [], borrowed: Set {} },&#xA;     _requests:&#xA;      PQueue {&#xA;        _events: [Object: null prototype] {},&#xA;        _eventsCount: 0,&#xA;        _maxListeners: undefined,&#xA;        _carryoverConcurrencyCount: false,&#xA;        _isIntervalIgnored: true,&#xA;        _intervalCount: 1,&#xA;        _intervalCap: Infinity,&#xA;        _interval: 0,&#xA;        _intervalId: null,&#xA;        _intervalEnd: 0,&#xA;        _timeoutId: null,&#xA;        queue: [PriorityQueue],&#xA;        _queueClass: [Function: PriorityQueue],&#xA;        _pendingCount: 0,&#xA;        _concurrency: Infinity,&#xA;        _isPaused: false,&#xA;        _resolveEmpty: [Function],&#xA;        _resolveIdle: [Function] },&#xA;     _acquires:&#xA;      PQueue {&#xA;        _events: [Object: null prototype] {},&#xA;        _eventsCount: 0,&#xA;        _maxListeners: undefined,&#xA;        _carryoverConcurrencyCount: false,&#xA;        _isIntervalIgnored: true,&#xA;        _intervalCount: 1,&#xA;        _intervalCap: Infinity,&#xA;        _interval: 0,&#xA;        _intervalId: null,&#xA;        _intervalEnd: 0,&#xA;        _timeoutId: null,&#xA;        queue: [PriorityQueue],&#xA;        _queueClass: [Function: PriorityQueue],&#xA;        _pendingCount: 0,&#xA;        _concurrency: 1,&#xA;        _isPaused: false,&#xA;        _resolveEmpty: [Function],&#xA;        _resolveIdle: [Function] },&#xA;     _traces: Map {},&#xA;     _onClose: Promise { &lt;pending&gt; },&#xA;     _evictHandle:&#xA;      Timeout {&#xA;        _called: false,&#xA;        _idleTimeout: 600000,&#xA;        _idlePrev: null,&#xA;        _idleNext: null,&#xA;        _idleStart: 1644,&#xA;        _onTimeout: [Function],&#xA;        _timerArgs: undefined,&#xA;        _repeat: 600000,&#xA;        _destroyed: false,&#xA;        _handle: [Timer],&#xA;        [Symbol(unrefed)]: false,&#xA;        [Symbol(asyncId)]: 76,&#xA;        [Symbol(triggerId)]: 1 },&#xA;     _pingHandle:&#xA;      Timeout {&#xA;        _called: false,&#xA;        _idleTimeout: 60000,&#xA;        _idlePrev: null,&#xA;        _idleNext: null,&#xA;        _idleStart: 1644,&#xA;        _onTimeout: [Function],&#xA;        _timerArgs: undefined,&#xA;        _repeat: 60000,&#xA;        _destroyed: false,&#xA;        _handle: [Timer],&#xA;        [Symbol(unrefed)]: false,&#xA;        [Symbol(asyncId)]: 78,&#xA;        [Symbol(triggerId)]: 1 } } }'&#xA;&#xA;&#xA;return new Promise((resolve, reject) =&gt; {&#xA;    database.runStream(queryOptions)&#xA;        .on('error', (error) =&gt; {&#xA;       // how to ensure same session id object being used&#xA;&#xA;            logger.error( error);&#xA;            reject(error);&#xA;        })&#xA;        .on('data', (row) =&gt; {&#xA;                        allData.push(row.toJSON());&#xA;        })&#xA;        .on('end', () =&gt; {&#xA;            if (allData.length === 1) {&#xA;&#xA;                resolve(allData[0]);&#xA;            } &#xA;        });&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Expected: return session to pool once query execution complete without closing.</p>&#xA;&#xA;<p>Current: Every time a new session created and total number of sessions created exceeds maximum allocated.</p>&#xA;",12144965,,,,2019-10-03 05:27:01,how to find database sessionids for each runstream method api call while executing query in gcloud spanner?,<node.js><graphql><google-cloud-spanner>,1,0,0,2019-09-30 19:42:52
58179439,2,,58179129,0,,"<p>This error is a CORS error generated by the browser. use npm install --save http-proxy-middleware in your front end and add setupProxy.js file in frontend/src/setupProxy.js</p>&#xA;&#xA;<blockquote>&#xA;  <p>setupProxy.js</p>&#xA;</blockquote>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>//run defferent ports for website and api server &#xD;&#xA;const proxy = require('http-proxy-middleware');&#xD;&#xA;&#xD;&#xA;module.exports = function(app) {&#xD;&#xA;  app.use(proxy('/api/', { target: 'http://localhost:8080/' })); //make change as per your application (So you can access your data on  http://localhost:8080/api/ )&#xD;&#xA;};</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p><strong>Alternate solution</strong></p>&#xA;&#xA;<p>If you are using webpack dev server, here's another way to proxy requests without making changes on NodeJS. Adding this to package.json:</p>&#xA;&#xA;<pre><code>  ""proxy"": ""http://localhost:8080""&#xA;</code></pre>&#xA;&#xA;<p>Should allow webpack to proxy requests made to <code>http://localhost:3000</code> to   <code>http://localhost:8080</code>. </p>&#xA;&#xA;<p>But this would mean request will need to be made to <a href=""http://localhost:3000"" rel=""nofollow noreferrer"">http://localhost:3000</a> instead of <a href=""http://localhost:8080"" rel=""nofollow noreferrer"">http://localhost:8080</a>.</p>&#xA;",11982418,,7791976,2019-10-01 07:12:43,2019-10-01 07:12:43,"",,0,4,0,2019-10-01 06:51:45
58188628,2,,55227415,0,,<p><strong>Problem Explained:</strong></p>&#xA;&#xA;<p>This happened in the lighthouse-tutorial repo when I tried following along I found that it was because the config file is returning a string where an array is expected.</p>&#xA;&#xA;<p><strong>FIX</strong></p>&#xA;&#xA;<p>Go to config/graphql-playground.php of the lighthouse-tutorial repo and change &#xA;<code>'route' =&gt; 'graphql-playground'</code>  to <code>'route' =&gt; ['graphql-playground']</code></p>&#xA;&#xA;<p>Then run your <code>composer require nuwave/lighthouse mll-lab/laravel-graphql-playground</code> again.</p>&#xA;&#xA;<p>This fixed it for me.</p>&#xA;,6333651,,,,2019-10-01 16:04:07,"",,0,0,0,2019-10-01 16:04:07
58205088,1,,,1,22,"<p>I was wondering if there was a way of getting the parameters required for a certain query from the introspection __schema.</p>&#xA;&#xA;<p>For example, I can get all aveilable queries of a certain graphQL with:</p>&#xA;&#xA;<pre><code>__schema{&#xA;    queryType{&#xA;        fields{&#xA;            name&#xA;            description&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Or all aveilable types with</p>&#xA;&#xA;<pre><code>__schema{&#xA;    types{&#xA;        name&#xA;        kind&#xA;        description&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is it there a way to get the parameters of a certain query from the introspection? For example, I want to know which parameters I need for getting info from a certain query (Lets name it allPages).</p>&#xA;&#xA;<p>Something like</p>&#xA;&#xA;<pre><code>query{&#xA;    allPages{&#xA;        id&#xA;        name&#xA;        page{&#xA;            id&#xA;            description&#xA;            whatever&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",8160881,,,,2019-10-02 15:54:08,Getting information about a query from introspection tab graphql,<graphql>,0,0,0,2019-10-02 15:54:08
58253337,2,,58115317,0,,"<p>Very hard to know what your issue is with the information provided. Your command works for me on my Mac. </p>&#xA;&#xA;<p>What terminal are you using? Are you copying and pasting text? Is it possible the copied text somehow has ""smart quotes"", using <code>“</code> and <code>”</code> instead of <code>""</code>? What shell (and what version of the shell) are you using? What does <code>command -V curl</code> output? Which version of <code>curl</code> are you using?</p>&#xA;&#xA;<p>I suggest you try this:</p>&#xA;&#xA;<pre><code>/usr/bin/curl -v -H ""Authorization: bearer $GITHUB_TOKEN"" -X POST --data-binary '{ ""query"": ""query { viewer { login } }"" }' 'https://api.github.com/graphql'&#xA;</code></pre>&#xA;",712765,,712765,2019-10-06 00:35:37,2019-10-06 00:35:37,"",,0,0,0,2019-10-06 00:24:42
58350442,1,58350787,,2,4015,"<p>I want to send a request to the server via apollo and get a query:</p>&#xA;&#xA;<pre><code>import React, { Component } from 'react';&#xA;import { gql } from 'apollo-boost';&#xA;import { graphql } from 'react-apollo';&#xA;&#xA;const getBooksQuery = gql`&#xA;{&#xA;    books{&#xA;        name&#xA;        id&#xA;    }&#xA;}&#xA;`&#xA;&#xA;class BookList extends Component {&#xA;    render() {&#xA;        console.log(this.props);&#xA;        return (&#xA;            &lt;div&gt;&#xA;                &lt;ul id=""book-list""&gt;&#xA;                    &lt;li&gt;Book Name&lt;/li&gt;&#xA;                &lt;/ul&gt;&#xA;            &lt;/div&gt;&#xA;        );&#xA;    }&#xA;}&#xA;&#xA;&#xA;export default graphql(getBooksQuery)(BookList);&#xA;&#xA;</code></pre>&#xA;&#xA;<p>But I am getting the following error.</p>&#xA;&#xA;<blockquote>&#xA;  <p>[Network error]: ServerParseError: JSON.parse: unexpected character at line 1 column 1 of the JSON data</p>&#xA;</blockquote>&#xA;&#xA;<p>I have configured backend server with nodejs and graphql.&#xA;But I can easily open ""<a href=""http://localhost:4000/graphql/"" rel=""nofollow noreferrer"">http://localhost:4000/graphql/</a>"" in my browser send below query</p>&#xA;&#xA;<pre>&#xA;&#xA;{&#xA;    books{&#xA;        name&#xA;        id&#xA;    }&#xA;}&#xA;&#xA;</pre>&#xA;&#xA;<p>and fetch data from the db. Does anyone know where the problem is?</p>&#xA;",10303551,,,,2019-10-12 04:13:59,react-apollo Error: [Network error]: ServerParseError: JSON.parse: unexpected character at line 1 column 1 of the JSON data,<node.js><reactjs><graphql><react-apollo>,1,2,0,2019-10-12 02:51:56
58359581,1,58359689,,0,641,"<p>Trying to deploy my yoga server to heroku. Currently getting Web process failed to bind to $PORT within 60 seconds of launch. Saw earlier to use process.env.PORT and have included it but something is still going wrong.</p>&#xA;&#xA;<p>my index.js </p>&#xA;&#xA;<pre><code>import { GraphQLServer, PubSub } from ""graphql-yoga"";&#xA;import Query from ""./resolvers/Query"";&#xA;import Mutation from ""./resolvers/Mutation"";&#xA;import prisma from ""./prisma"";&#xA;&#xA;const pubsub = new PubSub();&#xA;&#xA;const server = new GraphQLServer({&#xA;  typeDefs: ""./src/schema.graphql"",&#xA;  resolvers: {&#xA;    Query,&#xA;    Mutation&#xA;  },&#xA;&#xA;  context(request) {&#xA;    return {&#xA;      pubsub,&#xA;      prisma,&#xA;      request&#xA;    };&#xA;  }&#xA;});&#xA;&#xA;&#xA;&#xA;server.start(&#xA;  {&#xA;    port: process.env.PORT || 4000&#xA;  },&#xA;&#xA;  () =&gt; {&#xA;    console.log(`Server is now running `);&#xA;  }&#xA;);&#xA;&#xA;</code></pre>&#xA;&#xA;<p>log </p>&#xA;&#xA;<pre><code>2019-10-12T22:14:29.407209+00:00 app[web.1]: &gt; gpj@1.0.0 start /app&#xA;2019-10-12T22:14:29.407211+00:00 app[web.1]: &gt; nodemon -e js,graphql -x node src/index.js&#xA;2019-10-12T22:14:29.407213+00:00 app[web.1]:&#xA;2019-10-12T23:56:14.043378+00:00 heroku[web.1]: source=web.1 dyno=heroku.149428446.70e65f6a-6921-48b8-8b81-e79278c9b2a0 sample#memory_total=39.93MB sample#memory_rss=39.92MB sample#memory_cache=0.01MB sample#memory_swap=0.00MB sample#memory_pgpgin=13211pages sample#memory_pgpgout=2989pages sample#memory_quota=512.00MB&#xA;2019-10-12T23:56:36.178695+00:00 heroku[web.1]: source=web.1 dyno=heroku.149428446.70e65f6a-6921-48b8-8b81-e79278c9b2a0 sample#memory_total=39.93MB sample#memory_rss=39.92MB sample#memory_cache=0.01MB sample#memory_swap=0.00MB sample#memory_pgpgin=13211pages sample#memory_pgpgout=2989pages sample#memory_quota=512.00MB&#xA;2019-10-12T23:56:58.275696+00:00 heroku[web.1]: source=web.1 dyno=heroku.149428446.70e65f6a-6921-48b8-8b81-e79278c9b2a0 sample#load_avg_1m=0.00&#xA;2019-10-12T23:56:58.3031+00:00 heroku[web.1]: source=web.1 dyno=heroku.149428446.70e65f6a-6921-48b8-8b81-e79278c9b2a0 sample#memory_total=39.93MB sample#memory_rss=39.92MB sample#memory_cache=0.01MB sample#memory_swap=0.00MB sample#memory_pgpgin=13211pages sample#memory_pgpgout=2989pages sample#memory_quota=512.00MB&#xA;2019-10-12T23:57:01.207399+00:00 heroku[web.1]: Error R10 (Boot timeout) -&gt; Web process failed to bind to $PORT within 60 seconds of launch&#xA;2019-10-12T23:57:01.231953+00:00 heroku[web.1]: Stopping process with SIGKILL&#xA;2019-10-12T23:57:01.324764+00:00 heroku[web.1]: Process exited with status 137&#xA;2019-10-12T23:57:01.373874+00:00 heroku[web.1]: State changed from starting to crashed&#xA;2019-10-12T23:57:03.564778+00:00 heroku[router]: at=error code=H10 desc=""App crashed"" method=GET path=""/"" host=gpj-yoga-prod-1.herokuapp.com request_id=6deb0c4d-07f9-45a4-b8e0-63fb05cc95fd fwd=""74.192.238.100"" dyno= connect= service= status=503 bytes= protocol=https&#xA;2019-10-12T23:57:09.487835+00:00 heroku[router]: at=error code=H10 desc=""App crashed"" method=GET path=""/"" host=gpj-yoga-prod-1.herokuapp.com request_id=d4f2a729-8a6f-470f-afd3-64dc472d775a fwd=""74.192.238.100"" dyno= connect= service= status=503 bytes= protocol=https&#xA;</code></pre>&#xA;",11389490,,11389490,2019-10-13 00:08:58,2019-10-13 00:32:46,Heroku error Web process failed to bind to $PORT within 60 seconds of launch,<node.js><graphql>,1,3,0,2019-10-13 00:01:35
58359689,2,,58359581,1,,"<p>When this appear in heroku log:</p>&#xA;&#xA;<pre><code> sample#memory...&#xA;</code></pre>&#xA;&#xA;<p>It is because your application needs more ram than heroku offers and it is close to exit.</p>&#xA;&#xA;<p>This message </p>&#xA;&#xA;<pre><code>Web process failed to bind to $PORT&#xA;</code></pre>&#xA;&#xA;<p>It does not indicate a fault related to the port, just  tell you that your app was not starting due to previous errors.</p>&#xA;&#xA;<p>Try to run your app in a heroku payed dyno or research why your app needs more than 512 mb of ram.</p>&#xA;",3957754,,,,2019-10-13 00:32:46,"",,0,2,0,2019-10-13 00:32:46
58371732,2,,58313489,0,,<p>did you change parent directory/folder name?&#xA;Once i changed my project's parent directory/folder name and amplify push stopped working.&#xA;When reverted directory/folder name back to original fixed this.</p>&#xA;,12212834,,,,2019-10-14 07:14:38,"",,0,0,0,2019-10-14 07:14:38
58383122,1,,,2,2414,"<p>My goal is to use <strong>AWS Amplify</strong> in a <strong>Sapper</strong> project.</p>&#xA;&#xA;<p>Creating a Sapper project from scratch (using webpack) then adding AWS Amplify and running it in dev is a success, but run it in production throws a GraphQL error in the console (<em>Uncaught Error: Cannot use e ""__Schema"" from another module or realm</em>).</p>&#xA;&#xA;<p>Fixing this error thows another one (<em>Uncaught ReferenceError: process is not defined</em>).</p>&#xA;&#xA;<p>A solution is to upgrade GraphQL from 0.13.0 to 14.0.0 unfortunatly GraphQL 0.13.0 is an AWS Amplify API dependency.</p>&#xA;&#xA;<p>Does anyone know what can be done to get AWS Amplify work with Sapper in production ?</p>&#xA;&#xA;<p>The link to the repo containing the source files is located here: <a href=""https://github.com/ehemmerlin/sapper-aws-amplify"" rel=""nofollow noreferrer"">https://github.com/ehemmerlin/sapper-aws-amplify</a></p>&#xA;&#xA;<hr>&#xA;&#xA;<p><em>(Apologies for the long post but I want to be explicit)</em></p>&#xA;&#xA;<p><strong>Detailled steps</strong></p>&#xA;&#xA;<p>1/ Create a Sapper project using webpack (<a href=""https://sapper.svelte.dev"" rel=""nofollow noreferrer"">https://sapper.svelte.dev</a>).</p>&#xA;&#xA;<pre><code>npx degit ""sveltejs/sapper-template#webpack"" my-app&#xA;cd my-app&#xA;yarn install&#xA;</code></pre>&#xA;&#xA;<p>2/ Add AWS Amplify (<a href=""https://serverless-stack.com/chapters/configure-aws-amplify.html"" rel=""nofollow noreferrer"">https://serverless-stack.com/chapters/configure-aws-amplify.html</a>) and lodash</p>&#xA;&#xA;<pre><code>yarn add aws-amplify&#xA;yarn add lodash&#xA;</code></pre>&#xA;&#xA;<p>3/ Configure AWS Amplify (<a href=""https://serverless-stack.com/chapters/configure-aws-amplify.html"" rel=""nofollow noreferrer"">https://serverless-stack.com/chapters/configure-aws-amplify.html</a>)</p>&#xA;&#xA;<p>Create <strong>src/config/aws.js</strong> config file containing (change the values with yours but works as is for the purpose of this post):</p>&#xA;&#xA;<pre><code>export default {&#xA;  s3: {&#xA;    REGION: ""YOUR_S3_UPLOADS_BUCKET_REGION"",&#xA;    BUCKET: ""YOUR_S3_UPLOADS_BUCKET_NAME""&#xA;  },&#xA;  apiGateway: {&#xA;    REGION: ""YOUR_API_GATEWAY_REGION"",&#xA;    URL: ""YOUR_API_GATEWAY_URL""&#xA;  },&#xA;  cognito: {&#xA;    REGION: ""YOUR_COGNITO_REGION"",&#xA;    USER_POOL_ID: ""YOUR_COGNITO_USER_POOL_ID"",&#xA;    APP_CLIENT_ID: ""YOUR_COGNITO_APP_CLIENT_ID"",&#xA;    IDENTITY_POOL_ID: ""YOUR_IDENTITY_POOL_ID""&#xA;  }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Add the following code to the existing code in <strong>src/client.js</strong>:</p>&#xA;&#xA;<pre><code>import config from './config/aws';&#xA;&#xA;Amplify.configure({&#xA;  Auth: {&#xA;    mandatorySignIn: true,&#xA;    region: config.cognito.REGION,&#xA;    userPoolId: config.cognito.USER_POOL_ID,&#xA;    identityPoolId: config.cognito.IDENTITY_POOL_ID,&#xA;    userPoolWebClientId: config.cognito.APP_CLIENT_ID&#xA;  },&#xA;  Storage: {&#xA;    region: config.s3.REGION,&#xA;    bucket: config.s3.BUCKET,&#xA;    identityPoolId: config.cognito.IDENTITY_POOL_ID&#xA;  },&#xA;  API: {&#xA;    endpoints: [&#xA;      {&#xA;        name: ""notes"",&#xA;        endpoint: config.apiGateway.URL,&#xA;        region: config.apiGateway.REGION&#xA;      },&#xA;    ]&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>4/ Test it</p>&#xA;&#xA;<p>In dev (yarn run dev): it works</p>&#xA;&#xA;<p>In production (yarn run build; node __sapper__/build): it throws an error.</p>&#xA;&#xA;<pre><code>Uncaught Error: Cannot use e ""__Schema"" from another module or realm.&#xA;Ensure that there is only one instance of ""graphql"" in the node_modules&#xA;directory. If different versions of ""graphql"" are the dependencies of other&#xA;relied on modules, use ""resolutions"" to ensure only one version is installed.&#xA;https://yarnpkg.com/en/docs/selective-version-resolutions&#xA;Duplicate ""graphql"" modules cannot be used at the same time since different&#xA;versions may have different capabilities and behavior. The data from one&#xA;version used in the function from another could produce confusing and&#xA;spurious results.&#xA;</code></pre>&#xA;&#xA;<p>5/ Fix it</p>&#xA;&#xA;<p>Following the given link (<a href=""https://yarnpkg.com/en/docs/selective-version-resolutions"" rel=""nofollow noreferrer"">https://yarnpkg.com/en/docs/selective-version-resolutions</a>) I added this code to package.json file:</p>&#xA;&#xA;<pre><code>  ""resolutions"": {&#xA;    ""aws-amplify/**/graphql"": ""^0.13.0""&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>6/ Test it</p>&#xA;&#xA;<pre><code>rm -rf node_modules; yarn install&#xA;</code></pre>&#xA;&#xA;<p>Throws another error in the console (even in dev mode).</p>&#xA;&#xA;<pre><code>Uncaught ReferenceError: process is not defined&#xA;at Module../node_modules/graphql/jsutils/instanceOf.mjs (instanceOf.mjs:3)&#xA;at \_\_webpack_require\_\_ (bootstrap:63)&#xA;at Module../node_modules/graphql/type/definition.mjs (definition.mjs:1)&#xA;at \_\_webpack_require\_\_ (bootstrap:63)&#xA;at Module../node_modules/graphql/type/validate.mjs (validate.mjs:1)&#xA;at \_\_webpack_require\_\_ (bootstrap:63)&#xA;at Module../node_modules/graphql/graphql.mjs (graphql.mjs:1)&#xA;at \_\_webpack_require\_\_ (bootstrap:63)&#xA;at Module../node_modules/graphql/index.mjs (main.js:52896)&#xA;at \_\_webpack_require\_\_ (bootstrap:63)&#xA;</code></pre>&#xA;&#xA;<p>A fix given by this thread (<a href=""https://github.com/graphql/graphql-js/issues/1536"" rel=""nofollow noreferrer"">https://github.com/graphql/graphql-js/issues/1536</a>) is to upgrade GraphQL from 0.13.0 to 14.0.0 unfortunatly GraphQL 0.13.0 is an AWS Amplify API dependency.</p>&#xA;",2161034,,,,2019-10-23 09:10:34,How to use AWS Amplify with Sapper?,<amazon-web-services><graphql><aws-amplify><svelte><sapper>,1,4,0,2019-10-14 19:41:55
58394659,1,58396460,,3,5713,"<p>I have looked this question: <a href=""https://stackoverflow.com/questions/45056347/how-to-use-or-resolve-enum-types-with-graphql-tools"">How to use or resolve enum types with graphql-tools?</a> </p>&#xA;&#xA;<p>And, this doc: <a href=""https://www.apollographql.com/docs/graphql-tools/scalars/#internal-values"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/graphql-tools/scalars/#internal-values</a></p>&#xA;&#xA;<p>Now, I want to custom the value of graphql <code>enum</code>. </p>&#xA;&#xA;<p><code>typeDefs.ts</code>:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import { gql } from 'apollo-server';&#xA;&#xA;export const typeDefs = gql`&#xA;  enum Device {&#xA;    UNKNOWN&#xA;    DESKTOP&#xA;    HIGH_END_MOBILE&#xA;    TABLET&#xA;    CONNECTED_TV&#xA;  }&#xA;&#xA;  type CampaignPerformanceReport {&#xA;    campaignNme: String!&#xA;    campaignId: ID!&#xA;    device: Device&#xA;  }&#xA;&#xA;  type Query {&#xA;    campaignPerformanceReports: [CampaignPerformanceReport]!&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p><code>resolvers.ts</code>:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import { IResolvers } from 'graphql-tools';&#xA;import { IAppContext } from './appContext';&#xA;&#xA;export const resolvers: IResolvers = {&#xA;  Device: {&#xA;    UNKNOWN: 'Other',&#xA;    DESKTOP: 'Computers',&#xA;    HIGH_END_MOBILE: 'Mobile devices with full browsers',&#xA;    TABLET: 'Tablets with full browsers',&#xA;    CONNECTED_TV: 'Devices streaming video content to TV screens',&#xA;  },&#xA;  Query: {&#xA;    async campaignPerformanceReports(_, __, { db }: IAppContext) {&#xA;      return db.campaignPerformanceReports;&#xA;    },&#xA;  },&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>As you can see, I custom the value of <code>Device</code> enum in the resolver.</p>&#xA;&#xA;<p><code>db.ts</code>: a fake db with datas</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>enum Device {&#xA;  UNKNOWN = 'Other',&#xA;  DESKTOP = 'Computers',&#xA;  HIGH_END_MOBILE = 'Mobile devices with full browsers',&#xA;  TABLET = 'Tablets with full browsers',&#xA;  CONNECTED_TV = 'Devices streaming video content to TV screens',&#xA;}&#xA;&#xA;export const db = {&#xA;  campaignPerformanceReports: [&#xA;    {&#xA;      campaignId: 1,&#xA;      campaignNme: 'test',&#xA;      device: Device.DESKTOP,&#xA;    },&#xA;  ],&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>I also made an integration test for this:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code> test.only('should query campaign performance reports correctly with executable graphql schema', async () =&gt; {&#xA;      const schema = makeExecutableSchema({ typeDefs, resolvers });&#xA;      console.log(printSchema(schema));&#xA;      const server: ApolloServerBase = new ApolloServer({ schema, context: { db } });&#xA;      const { query }: ApolloServerTestClient = createTestClient(server);&#xA;      const res: GraphQLResponse = await query({ query: Q.campaignPerformanceReports });&#xA;      expect(res).toMatchInlineSnapshot(`&#xA;        Object {&#xA;          ""data"": Object {&#xA;            ""campaignPerformanceReports"": Array [&#xA;              Object {&#xA;                ""campaignId"": ""1"",&#xA;                ""campaignNme"": ""test"",&#xA;                ""device"": ""DESKTOP"",&#xA;              },&#xA;            ],&#xA;          },&#xA;          ""errors"": undefined,&#xA;          ""extensions"": undefined,&#xA;          ""http"": Object {&#xA;            ""headers"": Headers {&#xA;              Symbol(map): Object {},&#xA;            },&#xA;          },&#xA;        }&#xA;      `);&#xA;    });&#xA;</code></pre>&#xA;&#xA;<p>As you can see, the result of snapshot testing. The value of <code>device</code> field is still <strong>""DESKTOP""</strong>, I expected the value should be <strong>""Computers""</strong></p>&#xA;&#xA;<p>Dependencies version:</p>&#xA;&#xA;<pre><code>""apollo-server"": ""^2.9.3"",&#xA;""apollo-server-express"": ""^2.9.3"",&#xA;""graphql"": ""^14.5.4"",&#xA;</code></pre>&#xA;&#xA;<p>The minimal repo: <a href=""https://github.com/mrdulin/apollo-graphql-tutorial/tree/master/src/custom-scalar-and-enum"" rel=""nofollow noreferrer"">https://github.com/mrdulin/apollo-graphql-tutorial/tree/master/src/custom-scalar-and-enum</a></p>&#xA;",6463558,,6463558,2019-10-15 12:32:29,2019-10-15 14:17:16,Can't custom value of graphql enum,<graphql><graphql-js><apollo-server>,1,1,0,2019-10-15 12:25:28
58401305,1,,,1,66,"<p>I'm building a Typescript client that should be able to talk to multiple version of an API.</p>&#xA;&#xA;<p>For example, there is a type <code>User</code> and there are 2 version: v0.1 and v0.2. In version v0.2 there is a new field on the <code>User</code> type called <code>address</code>. </p>&#xA;&#xA;<p>As a a client of the API, I want to query the <code>User</code> type, but use the same query to talk to both version of the API. What I expect is that API v0.1 will return null for this new property. </p>&#xA;&#xA;<p>Is there a way to do this? At the moment I getting this error:</p>&#xA;&#xA;<pre><code>GraphQL error: Field 'address' doesn't exist on type 'User'&#xA;</code></pre>&#xA;&#xA;<p>If it's not possible, does that mean that for every change to the API, if a client would like to be backward compatible, it needs to store different schema for each version?</p>&#xA;",546750,,,,2019-10-15 19:16:29,graphql query on client with different version of API,<graphql><graphql-js>,0,0,0,2019-10-15 19:16:29
58424293,2,,58421858,4,,<p>Both <code>graphql-spring-boot-starter</code> and <code>graphql-java-tools</code> will include <code>graphql-java</code> under the hood. Both of them are including different version now .</p>&#xA;&#xA;<p>One includes 6.0 while other includes 9.2. 6.0 is somehow takes effect which is a very old version which <code>SimpleInstrumentation</code> is added after this version and hence <code>NoClassDefFoundError</code> happens.</p>&#xA;&#xA;<p>The short answer is to upgrade the version of <code>graphql-spring-boot-starter</code> and <code>graphql-java-tools</code> such that they use the same version of <code>graphql-java</code>. </p>&#xA;&#xA;<p>You can use <code>mvn dependency:tree</code> to check which version of <code>graphql-java</code> is included.</p>&#xA;,339637,,,,2019-10-17 03:05:06,"",,0,1,0,2019-10-17 03:05:06
58444258,1,58445547,,1,391,"<p>i'm using an apollo client in standalone node.js app.</p>&#xA;&#xA;<p><strong>client</strong> (there is no problem with client itself, so i think detailed <code>link</code>, <code>typeDefs</code>, <code>resolvers</code> configs are not so relevant):</p>&#xA;&#xA;<pre><code>apolloCli = new ApolloClient({&#xA;    link,&#xA;    cache: new InMemoryCache(),&#xA;    typeDefs,&#xA;    resolvers&#xA;});&#xA;</code></pre>&#xA;&#xA;<p><strong>queries:</strong></p>&#xA;&#xA;<pre><code>export const hubsQuery = gql`&#xA;    query HubsQuery {&#xA;        hubs {&#xA;            id&#xA;            ip&#xA;            port&#xA;            isOnline&#xA;        }&#xA;    }`;&#xA;&#xA;export const hubsOnlineLocalQuery = gql`&#xA;    query HubsQueryLocal {&#xA;        hubs(isOnline: true) @client {&#xA;            id&#xA;            ip&#xA;            port&#xA;            isOnline&#xA;        }&#xA;    }`;&#xA;</code></pre>&#xA;&#xA;<p><strong>usage:</strong></p>&#xA;&#xA;<pre><code>    const q0 = await apolloCli.query({query: hubsQuery, fetchPolicy: 'network-only'});&#xA;    console.log(q.data);&#xA;&#xA;&#xA;    const q1 = await apolloCli.query({query: hubsOnlineLocalQuery});&#xA;    console.log(r.data)&#xA;</code></pre>&#xA;&#xA;<p>So, despite that <code>q0</code> was successfull and contains an array, the <code>data</code> returned from the <code>q1</code> is <code>null</code>. </p>&#xA;&#xA;<p>My guess is: </p>&#xA;&#xA;<ol>&#xA;<li>some design flaw which i don't understand </li>&#xA;<li>local cache store data uniquely for each <code>query</code>.</li>&#xA;</ol>&#xA;&#xA;<p>I expect <code>q1</code> to return results from the local store filtered by <code>isOnline</code>&#xA;What could be the possible reason of <code>q1</code> data returning <code>null</code> and how to fix it?:)</p>&#xA;",1935987,,,,2019-10-18 07:02:24,apollo client nodejs query local state with filters,<graphql><apollo-client>,1,3,0,2019-10-18 05:06:38
58446991,1,58482843,,1,1322,"<p>I'm currently trying to get data from the <em>Squidex</em> API for a <em>NextJS</em> app, by using <em>Apollo</em> as <em>GraphQL</em> client.&#xA;On <code>localhost</code>, both in <code>dev/production</code> mode, everything works fine. </p>&#xA;&#xA;<p>After deploying the app on <em>Heroku</em>, the same query returns the introspection schema as result, instead of the expected data. On a real example, by running a query like:</p>&#xA;&#xA;<pre><code>{&#xA;    queryPageContents(search: ""Home"") {&#xA;      ...PagesFragmentsPageId&#xA;      data {&#xA;        ...PagesFragmentsPage&#xA;        ...PagesFragmentsHome&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;  ${Pages.fragments.pageId}&#xA;  ${Pages.fragments.page}&#xA;  ${Pages.fragments.home}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Basically I'm asking various data about a webpage, using fragments and so on.&#xA;My expected data should be as follows - such as on <code>localhost</code>:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/wj3Mv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wj3Mv.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>But I'm receiving this on Heroku instead of the above one:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/stOOp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/stOOp.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Because of this, my app fails its rendering because my code looks for a JSON node called <code>queryPageContents</code> - as shown in the first screenshot - but It's currently receiving <code>__schema</code> as query result. So this causes a <code>500</code> error on front-end.</p>&#xA;&#xA;<p>I googled around and I've found this <a href=""https://github.com/helfer/graphql-disable-introspection"" rel=""nofollow noreferrer"">graphql-disable-introspection</a> that has to be installed on server-side. I don't know if it could solve this issue, but I'm not getting how this could happens.</p>&#xA;&#xA;<p>Any advice about this?</p>&#xA;&#xA;<p>Thanks everyone in advance.</p>&#xA;",0,user7554217,,,2019-10-21 08:53:16,Apollo GraphQL client query returns introspection result instead of data,<graphql><next.js><apollo-client>,1,0,0,2019-10-18 08:34:13
58476065,2,,58475780,44,,"<p>In my case, I found that I had <code>react-apollo@3.0.1</code> installed as well as <code>@apollo/react-hooks@3.0.0</code>. Removing <code>@apollo/react-hooks</code> and just relying on <code>react-apollo</code> fixed the invariant issue for me. Make sure that you aren't using any mismatched versions in your lock file or <code>package.json</code></p>&#xA;&#xA;<p>This is what someone said in a GitHub issue thread, which, was the case for me too. Make sure you try it!</p>&#xA;",9196131,,,,2019-10-20 18:33:32,"",,0,4,0,2019-10-20 18:33:32
58478740,1,,,0,602,"<p>I do have a question regarding Graphql, i made it work but when we changed our domain from "".myshopify"" to ""custom"" domain, it stopped working, it returns a error 400.</p>&#xA;&#xA;<p>Here's the complete error.</p>&#xA;&#xA;<p>OPTIONS <a href=""https://testwebsite.myshopify.com/admin/api/graphql.json"" rel=""nofollow noreferrer"">https://testwebsite.myshopify.com/admin/api/graphql.json</a> 400</p>&#xA;&#xA;<p>Access to XMLHttpRequest at '<a href=""https://testwebsite.myshopify.com/admin/api/graphql.json"" rel=""nofollow noreferrer"">https://testwebsite.myshopify.com/admin/api/graphql.json</a>' from origin '<a href=""https://testwebsite.com.au"" rel=""nofollow noreferrer"">https://testwebsite.com.au</a>' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.</p>&#xA;&#xA;<p>Hope you can give me an answer.</p>&#xA;&#xA;<p>Thank you</p>&#xA;",9358568,,,,2019-10-21 01:28:38,Shopify Graphql code returning Error 404. Also noticed that it works on .myshopify domain but not on custom,<api><graphql><shopify><graphql-js><shopify-app>,0,5,0,2019-10-21 01:28:38
58480701,1,,,2,1014,"<p>I'd like to do some search on GraphQL base on different columns, for example, if a string is equal to the first name or the last name.</p>&#xA;&#xA;<p>I would like to be able to do something like that:</p>&#xA;&#xA;<pre><code>{&#xA;  clients(where: {or: [{firstName_contains: ""example""}, {lastName_contains: ""example""}]}){&#xA;    id&#xA;    firstName&#xA;    lastName&#xA;    phone&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Or if there is a way to do an aggregation on multiple where.</p>&#xA;&#xA;<p>The api is built on Strapi JS, but the queries should be standard.</p>&#xA;&#xA;<p><strong>System:</strong></p>&#xA;&#xA;<ol>&#xA;<li>Node.js version: 10.13.0 </li>&#xA;<li>NPM version: 6.12.0  </li>&#xA;<li>Strapi version: 3.0.0-beta.17.1  </li>&#xA;<li>Database: SQLite </li>&#xA;<li>Operating system: Ubuntu</li>&#xA;</ol>&#xA;&#xA;<p>Thanks for your help.</p>&#xA;",10463608,,,,2021-01-22 19:44:21,GraphQL search OR operator,<graphql><graphql-js><strapi>,1,2,0,2019-10-21 06:17:01
58499337,2,,58486595,1,,"<p><code>orderEditBegin</code>is currently in the <strong>unstable</strong> version and it's available only on Preview Developer Stores. More info: <a href=""https://help.shopify.com/en/api/graphql-admin-api/reference/mutation/ordereditbegin"" rel=""nofollow noreferrer"">https://help.shopify.com/en/api/graphql-admin-api/reference/mutation/ordereditbegin</a></p>&#xA;&#xA;<p>If you are not using such store please use a different GraphQL request.</p>&#xA;&#xA;<p>For example: <a href=""https://help.shopify.com/en/api/graphql-admin-api/reference/mutation/orderupdate"" rel=""nofollow noreferrer"">https://help.shopify.com/en/api/graphql-admin-api/reference/mutation/orderupdate</a></p>&#xA;",2329464,,,,2019-10-22 07:44:07,"",,0,1,0,2019-10-22 07:44:07
58518568,1,,,2,4487,"<p>I have a Next.js app and I am using apollo-server-micro and apollo-client. I am unable to set a cookie session when the user hits the login mutation. Here's my server.js setup (npm start)</p>&#xA;&#xA;<pre><code>const express = require('express');&#xA;const next = require('next');&#xA;const { apolloServer } = require('pages/api/graphql');&#xA;const cookieSession = require('cookie-session');&#xA;&#xA;const dev = process.env.NODE_ENV !== 'production';&#xA;const app = nextApp({ dev });&#xA;const handle = app.getRequestHandler();&#xA;&#xA;app.prepare().then(() =&gt; {&#xA;  const server = express();&#xA;&#xA;  server.use(express.static('./public'));&#xA;&#xA;  server.use(&#xA;        '/api',&#xA;        cookieSession({&#xA;            httpOnly: false,&#xA;            keys: ['super-secret-key'],&#xA;            maxAge: 24 * 60 * 60 * 1000,&#xA;            name: 'xyz',&#xA;        })&#xA;    );&#xA;&#xA;  server.get('*', handle);&#xA;&#xA;  server.listen(8000, () =&gt; {&#xA;    console.log('Server running on port 8000');&#xA;  })&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>Within <code>pages/api/graphql.js</code>, I have the following piece of code (straight from Next.js documentation)</p>&#xA;&#xA;<pre><code>import { ApolloServer } from 'apollo-server-micro'&#xA;import { schema } from '../../apollo/schema'&#xA;&#xA;export const apolloServer = new ApolloServer({&#xA;  schema,&#xA;  context: (ctx) =&gt; {&#xA;    return ctx.req;&#xA;  }&#xA;})&#xA;&#xA;export const config = {&#xA;  api: {&#xA;    bodyParser: false&#xA;  }&#xA;}&#xA;&#xA;export default apolloServer.createHandler({ path: '/api/graphql' })&#xA;</code></pre>&#xA;&#xA;<p>Here's the mutation for logging in</p>&#xA;&#xA;<pre><code>const jobs = require('../data/jobs');&#xA;const users = require('../data/users');&#xA;&#xA;const getUserByEmail = email =&gt; users.find(user =&gt; user.email === email);&#xA;&#xA;export const resolvers = {&#xA;  Query: {&#xA;    viewer (_parent, _args, _context, _info) {&#xA;      return { id: 1, name: 'John Smith', status: 'cached' }&#xA;    },&#xA;    jobs: (parent, args, context, info) =&gt; {&#xA;      return jobs;&#xA;    }&#xA;  },&#xA;&#xA;  Mutation: {&#xA;    login: (parent, args, context, info) =&gt; {&#xA;      const { email } = args;&#xA;      const user = getUserByEmail(email);&#xA;      console.log(context.headers);&#xA;      if (user) {&#xA;        context.req = {&#xA;          ...context.req,&#xA;          session: user&#xA;        }&#xA;        return user;&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>There's no encryption and all for now, I just want to get this up and running for now. How would I set the session (so that the cookie appears in Chrome and is available for future incoming requests)</p>&#xA;&#xA;<p>Update: Apollo Client Configuration</p>&#xA;&#xA;<pre><code>import React from 'react'&#xA;import Head from 'next/head'&#xA;import { ApolloProvider } from '@apollo/react-hooks'&#xA;import { ApolloClient } from 'apollo-client'&#xA;import { InMemoryCache } from 'apollo-cache-inmemory'&#xA;&#xA;let apolloClient = null&#xA;&#xA;/**&#xA; * Creates and provides the apolloContext&#xA; * to a next.js PageTree. Use it by wrapping&#xA; * your PageComponent via HOC pattern.&#xA; * @param {Function|Class} PageComponent&#xA; * @param {Object} [config]&#xA; * @param {Boolean} [config.ssr=true]&#xA; */&#xA;export function withApollo (PageComponent, { ssr = true } = {}) {&#xA;  const WithApollo = ({ apolloClient, apolloState, ...pageProps }) =&gt; {&#xA;    const client = apolloClient || initApolloClient(apolloState)&#xA;    return (&#xA;      &lt;ApolloProvider client={client}&gt;&#xA;        &lt;PageComponent {...pageProps} /&gt;&#xA;      &lt;/ApolloProvider&gt;&#xA;    )&#xA;  }&#xA;&#xA;  // Set the correct displayName in development&#xA;  if (process.env.NODE_ENV !== 'production') {&#xA;    const displayName =&#xA;      PageComponent.displayName || PageComponent.name || 'Component'&#xA;&#xA;    if (displayName === 'App') {&#xA;      console.warn('This withApollo HOC only works with PageComponents.')&#xA;    }&#xA;&#xA;    WithApollo.displayName = `withApollo(${displayName})`&#xA;  }&#xA;&#xA;  if (ssr || PageComponent.getInitialProps) {&#xA;    WithApollo.getInitialProps = async ctx =&gt; {&#xA;      const { AppTree } = ctx&#xA;&#xA;      // Initialize ApolloClient, add it to the ctx object so&#xA;      // we can use it in `PageComponent.getInitialProp`.&#xA;      const apolloClient = (ctx.apolloClient = initApolloClient())&#xA;&#xA;      // Run wrapped getInitialProps methods&#xA;      let pageProps = {}&#xA;      if (PageComponent.getInitialProps) {&#xA;        pageProps = await PageComponent.getInitialProps(ctx)&#xA;      }&#xA;&#xA;      // Only on the server:&#xA;      if (typeof window === 'undefined') {&#xA;        // When redirecting, the response is finished.&#xA;        // No point in continuing to render&#xA;        if (ctx.res &amp;&amp; ctx.res.finished) {&#xA;          return pageProps&#xA;        }&#xA;&#xA;        // Only if ssr is enabled&#xA;        if (ssr) {&#xA;          try {&#xA;            // Run all GraphQL queries&#xA;            const { getDataFromTree } = await import('@apollo/react-ssr')&#xA;            await getDataFromTree(&#xA;              &lt;AppTree&#xA;                pageProps={{&#xA;                  ...pageProps,&#xA;                  apolloClient&#xA;                }}&#xA;              /&gt;&#xA;            )&#xA;          } catch (error) {&#xA;            // Prevent Apollo Client GraphQL errors from crashing SSR.&#xA;            // Handle them in components via the data.error prop:&#xA;            // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error&#xA;            console.error('Error while running `getDataFromTree`', error)&#xA;          }&#xA;&#xA;          // getDataFromTree does not call componentWillUnmount&#xA;          // head side effect therefore need to be cleared manually&#xA;          Head.rewind()&#xA;        }&#xA;      }&#xA;&#xA;      // Extract query data from the Apollo store&#xA;      const apolloState = apolloClient.cache.extract()&#xA;&#xA;      return {&#xA;        ...pageProps,&#xA;        apolloState&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;  return WithApollo&#xA;}&#xA;&#xA;/**&#xA; * Always creates a new apollo client on the server&#xA; * Creates or reuses apollo client in the browser.&#xA; * @param  {Object} initialState&#xA; */&#xA;function initApolloClient (initialState) {&#xA;  // Make sure to create a new client for every server-side request so that data&#xA;  // isn't shared between connections (which would be bad)&#xA;  if (typeof window === 'undefined') {&#xA;    return createApolloClient(initialState)&#xA;  }&#xA;&#xA;  // Reuse client on the client-side&#xA;  if (!apolloClient) {&#xA;    apolloClient = createApolloClient(initialState)&#xA;  }&#xA;&#xA;  return apolloClient&#xA;}&#xA;&#xA;/**&#xA; * Creates and configures the ApolloClient&#xA; * @param  {Object} [initialState={}]&#xA; */&#xA;function createApolloClient (initialState = {}) {&#xA;  const ssrMode = typeof window === 'undefined'&#xA;  const cache = new InMemoryCache().restore(initialState)&#xA;&#xA;  // Check out https://github.com/zeit/next.js/pull/4611 if you want to use the AWSAppSyncClient&#xA;  return new ApolloClient({&#xA;    ssrMode,&#xA;    link: createIsomorphLink(),&#xA;    cache&#xA;  })&#xA;}&#xA;&#xA;function createIsomorphLink () {&#xA;  if (typeof window === 'undefined') {&#xA;    const { SchemaLink } = require('apollo-link-schema')&#xA;    const { schema } = require('./schema')&#xA;    return new SchemaLink({ schema })&#xA;  } else {&#xA;    const { HttpLink } = require('apollo-link-http')&#xA;    return new HttpLink({&#xA;      uri: '/apii/graphql',&#xA;      credentials: 'same-origin'&#xA;    })&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Updated: Apollo-server config using apollo micro</p>&#xA;&#xA;<pre><code>import { ApolloServer } from 'apollo-server-micro'&#xA;import { schema } from '../../apollo/schema'&#xA;&#xA;export const apolloServer = new ApolloServer({&#xA;  schema,&#xA;  context: (ctx) =&gt; {&#xA;    return ctx.req;&#xA;  }&#xA;})&#xA;&#xA;export const config = {&#xA;  api: {&#xA;    bodyParser: false&#xA;  }&#xA;}&#xA;&#xA;export default apolloServer.createHandler({ path: '/api/graphql' })&#xA;</code></pre>&#xA;",2700724,,2700724,2019-10-25 00:48:29,2021-06-28 06:59:33,Apollo server set cookie to be accessed in next js app,<node.js><graphql><apollo-client><apollo-server>,2,2,0,2019-10-23 08:24:57
58523390,1,58523646,,2,2207,"<p>This is the pattern to deprecate a field in ApolloServer:</p>&#xA;&#xA;<pre><code>type Car {&#xA;  id: ID!&#xA;  make: String&#xA;  model: String&#xA;  description: String @deprecated(reason: ""Field is deprecated!"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, how do I deprecate a whole type - e.g. the <code>Car</code> type above?</p>&#xA;",1417223,,,,2019-10-23 13:10:42,Deprecate a type in ApolloServer,<graphql><apollo-server>,1,0,0,2019-10-23 12:57:19
58529871,1,58717079,,0,248,"<p>This question is for a Hasura application running against a Postgres database.  When running beta6, everything is working.  However, after updating to beta8, Hasura does not start.</p>&#xA;&#xA;<p>Here is the last log message when starting with beta6:</p>&#xA;&#xA;<pre><code>{&#xA;    ""timestamp"": ""2019-10-23T19:07:55.521+0000"",&#xA;    ""level"": ""info"",&#xA;    ""type"": ""startup"",&#xA;    ""detail"": {&#xA;        ""kind"": ""server"",&#xA;        ""info"": {&#xA;            ""time_taken"": 0.486567746,&#xA;            ""message"": ""starting API server""&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And here is the last log message starting with beta8:</p>&#xA;&#xA;<pre><code>{&#xA;    ""path"": ""$.args[0].args"",&#xA;    ""error"": ""following root fields are duplicated: ******"",&#xA;    ""code"": ""unexpected""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>We are carrying on with beta6 for now, if anyone has an open communications channel with Hasura, it might be good to let them know they introduced a breaking change with their latest release.  It would be good to get on the upgrade pathway again, hopefully we are not stuck on beta6 for whatever reason.</p>&#xA;",752693,,752693,2019-10-23 22:35:43,2019-11-05 18:05:31,"Why is Hasura erring on startup with ""following root fields are duplicated"" in beta8?",<graphql><hasura>,1,2,0,2019-10-23 19:34:43
58530039,1,,,1,157,"<p>We are doing some header checking in our Apollo GraphQL application and noticed that when the user sends a request to initially open Playground in the browser, there are no headers present in this request. </p>&#xA;&#xA;<p>The problem is that in our application, all requests are supposed to contain at least some required headers. If these headers are missing, our code flags these requests and determines the request is not genuine. Therefore, a request to open Playground is flagged because it is missing these required headers.</p>&#xA;&#xA;<p>Is there any way to distinguish whether the incoming request is requesting Playground versus a request that is actually making a call for some data? Is there an attribute somewhere?</p>&#xA;",12064727,,,,2019-10-23 19:48:40,Is there a way to know if a GraphQL request was sent raw or through the Playground?,<javascript><http><graphql><apollo>,0,4,0,2019-10-23 19:48:40
58555197,2,,58546236,-1,,<p>Ok it seems I found an answer myself. It's possible to serve them with nginx in this setup</p>&#xA;,10178020,,1233251,2020-09-05 22:09:01,2020-09-05 22:09:01,"",,0,1,0,2019-10-25 08:49:37
58573869,2,,53674554,0,,<p>I solved this by using fetch on server side.</p>&#xA;,2746313,,,,2019-10-26 19:08:27,"",,0,0,0,2019-10-26 19:08:27
58580194,2,,56431574,0,,"<p>Once you have the server you also need to build the gateway, if you are using docker-compose you can use a reusable docker image as follows:</p>&#xA;&#xA;<pre><code>&#xA;version: '3'&#xA;&#xA;services:&#xA;    a:&#xA;        build: ./a # one service implementing federation&#xA;    b:&#xA;        build: ./b&#xA;    gateway:&#xA;        image: xmorse/apollo-federation-gateway&#xA;        ports:&#xA;            - 8000:80&#xA;        environment: &#xA;            CACHE_MAX_AGE: '5' # default cache&#xA;            ENGINE_API_KEY: '...' # to connect to the apollo engine&#xA;            POLL_INTERVAL: 30 # to update services changes&#xA;            URL_0: ""http://a""&#xA;            URL_1: ""http://b""&#xA;</code></pre>&#xA;&#xA;<p>Check out the <a href=""https://github.com/remorses/apollo-federation-gateway"" rel=""nofollow noreferrer"">github repo</a> for a working example.</p>&#xA;",9090970,,,,2019-10-27 14:17:29,"",,0,0,0,2019-10-27 14:17:29
58592306,1,58712468,,1,1987,"<p>I'm investigating by days with no results about this exception that my <em>NextJS</em> app is currently throwing, in particular when I try to open a single specific URL:</p>&#xA;&#xA;<blockquote>&#xA;  <p>502: BAD_GATEWAY&#xA;  Code: NO_STATUS_CODE_FROM_FUNCTION&#xA;  ID: zrh1:4zx5l-1572269318137-64d401b5d058</p>&#xA;</blockquote>&#xA;&#xA;<p>Here's the screenshot:&#xA;<a href=""https://i.stack.imgur.com/V9NFC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/V9NFC.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Basically, I have on <a href=""https://lucacattide.dev/about/en"" rel=""nofollow noreferrer"">https://lucacattide.dev/about/en</a> a page that this app should open. This is linked to a <em>MongoDB</em> third-party cloud API platform - <a href=""https://squidex.io"" rel=""nofollow noreferrer""><em>Squidex</em></a> - which is responsible to populate the page itself, via <em>GraphQL</em> queries. The app uses <em>Apollo</em> as GraphQL client. The app instead, is hosted on <a href=""http://ZEIT.co"" rel=""nofollow noreferrer""><em>ZEIT.co</em></a> serverless cloud, with <em>Now</em> 2.0 version.</p>&#xA;&#xA;<p>During the development process, everything works fine. The page loads up and data is fetched in the right way. Notice that for development, I'm working on <code>now-dev</code> environment instead of a custom <em>Express</em> server, in order to reproduce the <code>production</code> one, as suggested by ZEIT itself.</p>&#xA;&#xA;<p>The exception is being thrown on the <code>production</code> environment - the live one on the hosting platform, not on <code>localhost</code>; the main problem is that no errors are being shown on live logs or local development. So I'm literally going mad in inspecting the possible cause.</p>&#xA;&#xA;<p>I've already tried to test the involved page, by splitting it in sections and trying to exclude child components, or focusing the inspection on the GraphQL query. But the first hasn't produced results and the latter works fine in every environment.</p>&#xA;&#xA;<p>As last try, I deleted and re-created the back-end contents related to that page, because in the past I had a similar issue due to an old GraphQL edited schema that didn't reflected its modifications through the API - so in that case I was still receiving 502 errors. But this time it didn't worked.</p>&#xA;&#xA;<p>Anyone could help me to understand what's going on, please?</p>&#xA;&#xA;<p>Thanks everyone in advance</p>&#xA;",0,user7554217,,,2019-11-05 13:34:24,Unable to investigate on ZEIT Now 502 eror for a NextJS app,<mongodb><graphql><next.js><apollo-client><vercel>,1,1,0,2019-10-28 14:00:06
58602268,1,,,0,275,"<p>I realise <a href=""https://www.apollographql.com/docs/apollo-server/data/errors/"" rel=""nofollow noreferrer"">the docs</a> talk about this, but my errors look nothing like that. </p>&#xA;&#xA;<p>I'm using React and Apollo Server 2. Have not disabled debug, nor set the environment to production. All my errors are completely unreadable and say nothing useful at all, aside from the message itself. Example:</p>&#xA;&#xA;<pre><code>Error: GraphQL error: Cannot return null for non-nullable field AddSubmissionOutput.id.&#xA;    at new ApolloError (bundle.esm.js:76)&#xA;    at Object.next (bundle.esm.js:1280)&#xA;    at notifySubscription (Observable.js:152)&#xA;    at onNotify (Observable.js:196)&#xA;    at SubscriptionObserver.next (Observable.js:248)&#xA;    at bundle.esm.js:1085&#xA;    at Set.forEach (&lt;anonymous&gt;)&#xA;    at Object.next (bundle.esm.js:1084)&#xA;    at notifySubscription (Observable.js:152)&#xA;    at onNotify (Observable.js:196)&#xA;    at SubscriptionObserver.next (Observable.js:248)&#xA;    at Object.next (bundle.esm.js:32)&#xA;    at notifySubscription (Observable.js:152)&#xA;    at onNotify (Observable.js:196)&#xA;    at SubscriptionObserver.next (Observable.js:248)&#xA;    at bundle.esm.js:107&#xA;</code></pre>&#xA;&#xA;<p>Every single error looks like this, and is essentially useless. </p>&#xA;&#xA;<p>I'm used to Laravel, where it'd say the exact file and line of this error, rather than ""go remove lines of code until you find it"". I gave up on Apollo because it was all too cryptic, but I'm trying again and just can't get past this. </p>&#xA;&#xA;<p>Am I expecting too much from it, or is something wrong here?</p>&#xA;",6448335,,,,2019-11-11 12:33:29,Is there a human-readable stack trace anywhere?,<apollo><react-apollo><apollo-client><apollo-server>,1,0,0,2019-10-29 06:19:31
58617398,1,58760225,,5,5753,"<p>Using next.js example <a href=""https://github.com/zeit/next.js/tree/canary/examples/api-routes-apollo-server-and-client"" rel=""noreferrer"">api-routes-apollo-server-and-client</a>. When I'm trying to implement delay in <code>apollo/resolvers.js</code> this way:</p>&#xA;&#xA;<pre><code>export const resolvers = {&#xA;  Query: {&#xA;    viewer (_parent, _args, _context, _info) {&#xA;      return new Promise((resolve, reject) =&gt; {&#xA;        setTimeout(() =&gt; {&#xA;          resolve({ id: 1, name: 'John Smith', status: 'cached' });&#xA;        }, 1000);&#xA;      })&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Eziry.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Eziry.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>This doesn't work in SSR. The data is empty in the SSR apollo state but user data expected <code>{ id: 1, name: 'John Smith', status: 'cached' }</code>.</p>&#xA;&#xA;<p>I'm using that also with sequelize to fetch the data from database and it doesn't work too. I guess the reason is the same.</p>&#xA;&#xA;<p>Maybe I'm doing something wrong.</p>&#xA;&#xA;<p>Client-side part works fine (data are displayed after React hydratation).</p>&#xA;&#xA;<p>If we're doing static object instead of Promise:</p>&#xA;&#xA;<pre><code>export const resolvers = {&#xA;  Query: {&#xA;    viewer (_parent, _args, _context, _info) {&#xA;      return { id: 1, name: 'John Smith', status: 'cached' };&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Everything works fine and this puts object to initial state returned from SSR server with correct static markup...</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/AXfV3.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/AXfV3.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><strong>What am I expecting?</strong></p>&#xA;&#xA;<p>I want just server render graphql requiest, finish promises, the put the data to apollo state for SSR and does the SSR for SEO purposes. Because for now if I connect to the database - it doesn't work at all (nothing's rendered. just empty page because rendering was interrupted by something).</p>&#xA;",2234977,,2234977,2019-11-02 04:19:19,2019-12-30 18:15:44,Next.JS: Resolver with promise doesn't work in api-routes-server-and-client-test on SSR,<node.js><async-await><graphql><apollo><next.js>,2,7,0,2019-10-30 01:01:09
58656120,2,,58620707,0,,<p>Problem was with the imports.&#xA;Eclipse had added <code>import graphql.nextgen.GraphQL;</code> when i changed that to <code>import graphql.GraphQL;</code> everything worked fine.</p>&#xA;,2299548,,,,2019-11-01 08:22:06,"",,0,0,0,2019-11-01 08:22:06
58660352,1,,,0,430,"<pre><code>    httpURI = 'http://17.25.16.68:4000/graphql' //example&#xA;    const httpLink = createHttpLink({ uri: httpURI });&#xA;    const client = new ApolloClient({ link:httpLink, cache: new InMemoryCache() });&#xA;</code></pre>&#xA;&#xA;<p>The connection works on debug mode, but when I run it on release, no connection is made.</p>&#xA;&#xA;<p>Do I need to enable outgoing connections somewhere in the Android release config?</p>&#xA;",179736,,,,2020-10-13 00:02:01,Cannot connect to Apollo GraphQL server on Android Release [react native],<android><react-native><http><graphql><apollo>,2,1,0,2019-11-01 13:50:24
58662534,2,,45165211,-1,,"<p>I'm using [nuxt-apollo][1] ""nuxt"": ""^2.10.2"" without issues so far.</p>&#xA;&#xA;<pre><code>npm i @nuxtjs/apollo &amp;&amp;&#xA;npm install --save @nuxtjs/apollo&#xA;# if you are using *.gql or *.graphql files add graphql-tag to your dependencies &#xA;npm install --save graphql-tag&#xA;</code></pre>&#xA;&#xA;<p>1.Youll need to set up your config as you've stated above,</p>&#xA;&#xA;<p>In nuxt.config.js</p>&#xA;&#xA;<pre><code>    export default {&#xA;      ...&#xA;      modules: ['@nuxtjs/apollo'],&#xA;      apollo: {&#xA;        clientConfigs: {&#xA;          default: {&#xA;            httpEndpoint: 'https://api.graph.cool/simple/v1/cj1dqiyvqqnmj0113yuqamkuu' //link to your graphql backend.&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<ol start=""2"">&#xA;<li>Make your query</li>&#xA;</ol>&#xA;&#xA;<p>in gql/allCars.gql</p>&#xA;&#xA;<pre><code>{&#xA;  allCars {&#xA;    id&#xA;    make&#xA;    model&#xA;    year&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<ol start=""3"">&#xA;<li><p>use graphql in your component&#xA;in pages /index.vue</p>&#xA;&#xA;<p><code>&lt;script&gt;&#xA;import allCars from '~/apollo/queries/allCars'&#xA;export default {&#xA;  apollo: {&#xA;    allCars: {&#xA;      prefetch: true,&#xA;      query: allCars&#xA;    }&#xA;  },&#xA;  head: {&#xA;    title: 'Cars with Apollo'&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;</code></p></li>&#xA;</ol>&#xA;",10669659,,,,2019-11-01 16:17:26,"",,0,1,0,2019-11-01 16:17:26
58664932,2,,54553264,0,,"<p>I was running exactly the same issue today when using Angular Universal SSR.</p>&#xA;&#xA;<p>My solution was to include this line to the <code>externals</code> object in my webpack config file.</p>&#xA;&#xA;<pre><code>externals: {&#xA;  './dist/server/main': 'require(""./server/main"")'&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>For those running into the same problem when using Angular 8 and Apollo for Graphql, this is the migration guide that threw some light in my soul: <a href=""https://github.com/angular/universal/blob/master/docs/v8-upgrade-guide.md"" rel=""nofollow noreferrer"">Angular Universal v8 upgrade guide</a></p>&#xA;",3227332,,,,2019-11-01 19:34:25,"",,0,0,0,2019-11-01 19:34:25
58674039,1,,,12,2412,"<p>In my query, I use a blend of remote and local properties. The local properties have different values depending on:</p>&#xA;&#xA;<ol>&#xA;<li>The remote properties</li>&#xA;<li>The current unix timestamp</li>&#xA;</ol>&#xA;&#xA;<p>The local resolvers computes the local state according to these rules. Now, I face a scenario whereby I need to forego <code>useQuery</code> and use Apollo Client's <code>query</code> for enhanced flexibility.</p>&#xA;&#xA;<p>Other than structural differences (e.g. <code>useQuery</code> accepts two parameters, whereas <code>client.query</code> takes only one parameter - the options objects), is it safe to use one over the other?</p>&#xA;&#xA;<p>I identified at least one difference not described in the docs. When I call <code>client.query</code> multiple times, the local resolvers are run only once, at the beginning. With <code>useQuery</code>, the data always gets recomputed and it has different values (as per #2 above).</p>&#xA;",3873510,,,,2019-11-02 18:26:35,What is the difference between client.query and useQuery in Apollo?,<apollo><react-apollo><apollo-client><react-apollo-hooks>,0,3,0,2019-11-02 18:26:35
58681452,2,,58666669,0,,"<p>I figured it out: there is no ""resolver order"". The order is given only by the query.</p>&#xA;&#xA;<p>If you run the mock query, this is what gets logged:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>bar&#xA;baz&#xA;qux&#xA;</code></pre>&#xA;&#xA;<p>This is in spite of <code>qux</code> being the first declared resolver. You can only have it logged first if you move <code>qux @client</code> up above in the query, like this:</p>&#xA;&#xA;<pre><code>query Foo {&#xA;  foo {&#xA;    qux @client&#xA;    bar&#xA;    baz&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then the logs would be:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>qux&#xA;bar&#xA;baz&#xA;</code></pre>&#xA;&#xA;<p>Of course, this behaviour may vary depending on what versions you use. Here are mine:</p>&#xA;&#xA;<ul>&#xA;<li>@apolo/react-hooks@3.1.3</li>&#xA;<li>apollo-cache-inmemory@1.6.3</li>&#xA;<li>apollo-client@2.6.4</li>&#xA;<li>apollo-link-http@1.5.16</li>&#xA;<li>graphql@14.5.8</li>&#xA;<li>graphql-tag@2.10.1</li>&#xA;</ul>&#xA;",3873510,,,,2019-11-03 15:06:23,"",,0,0,0,2019-11-03 15:06:23
58687487,2,,58684335,0,,"<pre><code>Caused by: java.lang.NoClassDefFoundError: graphql/schema/CoercingParseLiteralException&#xA;    at graphql.scalars.datetime.DateTimeScalar.&lt;init&gt;(DateTimeScalar.java:27)&#xA;    at graphql.scalars.ExtendedScalars.&lt;clinit&gt;(ExtendedScalars.java:40)&#xA;</code></pre>&#xA;&#xA;<p><code>graphql-java-extended-scalars</code> requires the class <code>CoercingParseLiteralException</code> which is introduced since <a href=""https://github.com/graphql-java/graphql-java/issues/927"" rel=""nofollow noreferrer""><code>graphql-java 8.0</code></a>. However , you are using a very old version of <code>graphql-java</code> which is 6.0 , hence it does not have this class and throw <code>NoClassDefFoundError</code>. </p>&#xA;&#xA;<p>The solution is to update both <code>graphql-spring-boot-starter</code> and  <code>graphql-java-tools</code> versions such that they are using at the same version of <code>graphql-java</code> which is at least version 8.</p>&#xA;&#xA;<p>You can use <code>mvn dependency:tree</code> to check which version of <code>graphql-java</code> is included.</p>&#xA;",339637,,,,2019-11-04 05:09:36,"",,0,3,0,2019-11-04 05:09:36
58695826,2,,56303511,1,,"<p>Just replace with this</p>&#xA;&#xA;<pre><code>const proxy = require(""http-proxy-middleware"");&#xA;&#xA;module.exports = function(app) {&#xA;  app.use(proxy(""/graphql"", { target: ""http://localhost:8001/graphql"" }));&#xA;  app.use(proxy(""ws://locahost:8001""));&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>OR</p>&#xA;&#xA;<pre><code>const proxy = require(""http-proxy-middleware"");&#xA;&#xA;module.exports = function(app) {&#xA;  app.use(proxy(""/graphql"", { target: ""http://localhost:8001/graphql"" }));&#xA;  app.use(proxy('/ws', {&#xA;   target: 'http://localhost:8001',&#xA;   ws: true&#xA;  })&#xA; );&#xA;};&#xA;</code></pre>&#xA;",5409634,,,,2019-11-04 14:49:48,"",,0,3,0,2019-11-04 14:49:48
58699001,1,,,3,612,"<p>here is my schema.graphql</p>&#xA;&#xA;<pre><code>schema {&#xA; query: RootQuery&#xA;}&#xA;&#xA;type RootQuery {&#xA;student(id: String): Student&#xA;students: [Student]&#xA;school(id: String): School&#xA;}&#xA;&#xA;type School {&#xA;id: String&#xA;name: String&#xA;address: String&#xA;students: [Student]&#xA;}&#xA;&#xA;type Student {&#xA;id: String&#xA;name: String&#xA;age: Int&#xA;address: String&#xA;school: School&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>here is my component StudentQuery.js </p>&#xA;&#xA;<pre><code>import React from ""react"";&#xA;import { graphql, QueryRenderer } from ""react-relay"";&#xA;//import graphql from ""babel-plugin-relay/macro"";&#xA;import environment from ""./relayEnvironment"";&#xA;&#xA; export default class Database extends React.Component {&#xA; render() {&#xA; return (&#xA;  &lt;QueryRenderer&#xA;    environment={environment}&#xA;    query={graphql`&#xA;      query StudentQuery {&#xA;        student(id: ""M1"") {&#xA;          name&#xA;        }&#xA;      }&#xA;    `}&#xA;    variables={{}}&#xA;    render={({ error, props }) =&gt; {&#xA;      if (error) {&#xA;        return &lt;div&gt;Error!&lt;/div&gt;;&#xA;      }&#xA;      if (!props) {&#xA;        return &lt;div&gt;Loading...&lt;/div&gt;;&#xA;      }&#xA;      return &lt;div&gt;User ID: {props.student.name}&lt;/div&gt;;&#xA;    }}&#xA;  /&gt;&#xA;   );&#xA;   }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>when i try run the command yarn relay&#xA;it always gives the error</p>&#xA;&#xA;<p>ERROR:&#xA;Internal Error: Unknown type: 'ID'.&#xA;error Command failed with exit code 100.</p>&#xA;&#xA;<p>No auto generated files are created by the relay-compiler.</p>&#xA;&#xA;<p>Thanks in Advance</p>&#xA;",8276963,,,,2019-11-06 17:10:47,Relay compiler does generate auto generated files,<reactjs><graphql><relaymodern>,1,0,0,2019-11-04 18:17:02
58703732,1,,,0,635,"<p>From yesterday i am trying to dockerize following things together for that i used docker-compose&#xA;which contain's definations as follows:</p>&#xA;<h1>docker.compose.yml</h1>&#xA;<pre><code>version: '3'&#xA;networks:&#xA;  network:&#xA;    driver: bridge&#xA;services:&#xA;  server:&#xA;    container_name: truckpeserver&#xA;    restart: always&#xA;    build: .&#xA;    networks:&#xA;      - network&#xA;    links:&#xA;      - redis&#xA;    ports:&#xA;      - '3000:3000'&#xA;  redis:&#xA;    container_name: &quot;redisserver&quot;&#xA;    image: redis:latest&#xA;    networks:&#xA;      - network&#xA;    restart: always&#xA;    command: [&quot;redis-server&quot;, &quot;--bind&quot;, &quot;redis&quot;, &quot;--port&quot;, &quot;6379&quot;]&#xA;  prisma:&#xA;    image: prismagraphql/prisma:1.34&#xA;    restart: always&#xA;    ports:&#xA;      - '4466:4466'&#xA;    networks:&#xA;      - network&#xA;    environment:&#xA;      PRISMA_ENDPOINT: http://prisma:4466/&#xA;      PRISMA_CONFIG: |&#xA;        port: 4466&#xA;        databases:&#xA;          default:&#xA;            connector: mysql&#xA;            host: mysql&#xA;            port: 3306&#xA;            user: root&#xA;            password: prisma&#xA;  mysql:&#xA;    image: mysql:5.7&#xA;    restart: always&#xA;    environment:&#xA;      MYSQL_ROOT_PASSWORD: prisma&#xA;    volumes:&#xA;      - mysql:/var/lib/mysql&#xA;volumes:&#xA;  mysql: ~&#xA;&#xA;</code></pre>&#xA;<p>and dockerfile for running my graphql server which is as follows:</p>&#xA;<pre><code># install node.js&#xA;FROM node:10.15.3&#xA;&#xA;# create necessary directories and&#xA;# permissions&#xA;RUN mkdir -p /home/node/truckpeserver/node_modules &amp;&amp; chown -R node:node /home/node/truckpeserver&#xA;&#xA;# switch to working directory&#xA;WORKDIR /home/node/truckpeserver&#xA;&#xA;# copy package.json files in directory&#xA;COPY package*.json ./&#xA;&#xA;# check and switch to node user.&#xA;USER node&#xA;&#xA;# install node_modules.&#xA;RUN npm install&#xA;&#xA;# remove duplicate packages&#xA;RUN npm dedupe&#xA;&#xA;# copy project files.&#xA;COPY --chown=node:node . .&#xA;&#xA;# build server&#xA;RUN npm run build&#xA;&#xA;# start server&#xA;CMD [&quot;npm&quot;, &quot;start&quot;]&#xA;&#xA;</code></pre>&#xA;<h1>Problem:</h1>&#xA;<p>Everything work's fine except prisma. when every my executing code query prisma i got error as follow's:</p>&#xA;<p>Error</p>&#xA;<pre><code>truckpeserver | FetchError: request to http://localhost:4466/ failed, reason: connect ECONNREFUSED 127.0.0.1:4466&#xA;truckpeserver |     at ClientRequest.&lt;anonymous&gt; (/home/node/truckpeserver/node_modules/cross-fetch/node_modules/node-fetch/lib/index.js:1393:11)&#xA;truckpeserver |     at ClientRequest.emit (events.js:189:13)&#xA;truckpeserver |     at ClientRequest.EventEmitter.emit (domain.js:441:20)&#xA;truckpeserver |     at Socket.socketErrorListener (_http_client.js:392:9)&#xA;truckpeserver |     at Socket.emit (events.js:189:13)&#xA;truckpeserver |     at Socket.EventEmitter.emit (domain.js:441:20)&#xA;truckpeserver |     at emitErrorNT (internal/streams/destroy.js:82:8)&#xA;truckpeserver |     at emitErrorAndCloseNT (internal/streams/destroy.js:50:3)&#xA;truckpeserver |     at process._tickCallback (internal/process/next_tick.js:63:19)&#xA;</code></pre>&#xA;<p>What I have tried already.</p>&#xA;<ol>&#xA;<li>Linking</li>&#xA;<li>Creating a network: bridge</li>&#xA;</ol>&#xA;<p>Everything fails and prisma is not working please help</p>&#xA;",11877990,,-1,2020-06-20 09:12:55,2019-11-05 03:54:31,Prisma failed to connect localhost:4466 from another docker container,<javascript><node.js><docker><docker-compose><prisma-graphql>,1,0,0,2019-11-05 02:42:43
58704265,2,,58703732,1,,"<p>Remove linking any another configuration regarding network as docker-compose will take care of it. in service to service communication, you can use container name to do some call from one container to another.</p>&#xA;&#xA;<p>Now the error is from your <code>truckpeserver</code> container,</p>&#xA;&#xA;<pre><code>truckpeserver | FetchError: request to http://localhost:4466/ failed, reason: connect ECONNREFUSED 127.0.0.1:4466&#xA;</code></pre>&#xA;&#xA;<p>all you need to change <code>localhost</code> to <code>prisma:4466</code>. when you use localhost in some container it will point localhost of that container, you can not access other container using localhost.</p>&#xA;&#xA;<p>From the error logs, it seems you are using cross-fetch? then you can try something like</p>&#xA;&#xA;<pre><code>fetch('//prisma:4466')&#xA;  .then(res =&gt; {&#xA;    if (res.status &gt;= 400) {&#xA;      throw new Error(""Bad response from server"");&#xA;    }&#xA;    return res.json();&#xA;  })&#xA;....&#xA;</code></pre>&#xA;",3288890,,,,2019-11-05 03:54:31,"",,0,0,0,2019-11-05 03:54:31
58704563,1,,,2,3853,"<p>Stumped on a CORS issue while attempting to integrate GraphQL into a ReactJS application. </p>&#xA;&#xA;<p><strong>Situation:</strong></p>&#xA;&#xA;<p>I'm trying to execute a simple graphql query. No use of a database. The program works fine without graphql implementation. </p>&#xA;&#xA;<p><strong>Browser</strong>: Google Chrome Version 78.0.3904.87</p>&#xA;&#xA;<p><strong>Computer</strong>: MacBook Pro, Mid-2015</p>&#xA;&#xA;<p><strong>Relevant dependencies</strong>: </p>&#xA;&#xA;<ul>&#xA;<li>apollo-boost: 0.4.4</li>&#xA;<li>apollo-client: 2.6.4</li>&#xA;<li>cors: 2.8.5</li>&#xA;<li>express: 4.17.0</li>&#xA;<li>graphql: 14.5.8</li>&#xA;<li>react: 16.8.6</li>&#xA;<li>react-apollo: 3.1.3</li>&#xA;</ul>&#xA;&#xA;<p><strong>Here's the error I'm getting in the browser console:</strong></p>&#xA;&#xA;<blockquote>&#xA;  <p>OPTIONS <a href=""http://localhost:5000/graphql"" rel=""nofollow noreferrer"">http://localhost:5000/graphql</a> net::ERR_CONNECTION_REFUSED</p>&#xA;</blockquote>&#xA;&#xA;<p><strong>See the repository/directory structure here:</strong></p>&#xA;&#xA;<p><a href=""https://github.com/curtisyungen/hh-graphql"" rel=""nofollow noreferrer"">https://github.com/curtisyungen/hh-graphql</a></p>&#xA;&#xA;<p><strong>Here's a look at my server.js file:</strong> </p>&#xA;&#xA;<pre><code>const express = require(""express"");&#xA;const graphqlHTTP = require('express-graphql');&#xA;const schema = require('./src/graphql/schema');&#xA;const cors = require('cors');&#xA;&#xA;const PORT = 5000;&#xA;&#xA;const app = express();&#xA;&#xA;app.use(cors());&#xA;app.use('/graphql', graphqlHTTP({&#xA;    schema, &#xA;    graphiql: true,&#xA;}));&#xA;&#xA;app.listen(PORT, () =&gt; {&#xA;    console.log(`Listening on port ${PORT}. Visit http://localhost:${PORT}/ in your browser.`);&#xA;});&#xA;&#xA;module.exports.app = app;&#xA;</code></pre>&#xA;&#xA;<p><strong>Here's how I'm setting up the Apollo Client in my App.js file:</strong> </p>&#xA;&#xA;<pre><code>const cache = new InMemoryCache();&#xA;const link = new HttpLink({&#xA;  uri: 'http://localhost:5000/graphql'&#xA;});&#xA;&#xA;const client = new ApolloClient({&#xA;  cache,&#xA;  link,&#xA;});&#xA;</code></pre>&#xA;&#xA;<p><strong>Here is a screenshot of the Network tab in the browser:</strong></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/45qit.png"" rel=""nofollow noreferrer"">Screenshot of Network Tab in Browser</a></p>&#xA;&#xA;<p>I've scoured the internet for solutions and have tried the following:</p>&#xA;&#xA;<ul>&#xA;<li>app.use(cors());</li>&#xA;<li>adding fetchOptions: { mode: 'no-cors' } to Apollo Client</li>&#xA;<li>adding Access-Control-Allow-Origin extension to Chrome</li>&#xA;<li>using local IP address in lieu of 'localhost'</li>&#xA;</ul>&#xA;&#xA;<p>I was following a YouTube tutorial where the guy solved this issue by importing cors. It worked for him but not for me...any ideas?</p>&#xA;",9980290,,9980290,2019-11-05 15:13:42,2021-06-21 10:10:50,ReactJS + Apollo Client CORS Issue,<reactjs><cors><graphql><react-apollo><apollo-client>,1,2,0,2019-11-05 04:34:19
58729469,1,58802045,,0,948,"<p>I'm working on our webhook locally before building a docker container, and want my (Linux) container to communicate with it, using <code>host.docker.internal:ping</code>.<br>&#xA;It had been working before, but lately, for some reason, I'm getting this error from our <code>graphql-engine</code>, Hasura:  </p>&#xA;&#xA;<pre><code>    { &#xA;   ""timestamp"":""2019-11-05T18:45:32.860+0000"",&#xA;   ""level"":""error"",&#xA;   ""type"":""webhook-log"",&#xA;   ""detail"":{ &#xA;      ""response"":null,&#xA;      ""url"":""http://host.docker.internal:3000/simple/webhook"",&#xA;      ""method"":""GET"",&#xA;      ""http_error"":{ &#xA;         ""type"":""http_exception"",&#xA;         ""message"":""ConnectionFailure Network.Socket.getAddrInfo (called with preferred socket type/protocol: AddrInfo {addrFlags = [AI_ADDRCONFIG], addrFamily = AF_UNSPEC, addrSocketType = Stream, addrProtocol = 0, addrAddress = &lt;assumed to be undefined&gt;, addrCanonName = &lt;assumed to be undefined&gt;}, host name: Just \""host.docker.internal\"", service name: Just \""3000\""): does not exist (Temporary failure in name resolution)""&#xA;      },&#xA;      ""status_code"":null&#xA;   }&#xA;}   &#xA;</code></pre>&#xA;&#xA;<p>Here's my docker compose:  </p>&#xA;&#xA;<pre><code>version: '3.6'&#xA;&#xA;services:&#xA;&#xA;  postgres:  &#xA;    image: postgres:11.2  &#xA;    restart: always  &#xA;    ports:  &#xA;      - 5432:5432  &#xA;    volumes:  &#xA;      - postgres:/var/lib/postgresql/data  &#xA;    environment:  &#xA;      - POSTGRES_DB=postgres  &#xA;      - POSTGRES_USER=...  &#xA;      - POSTGRES_PASSWORD=...  &#xA;&#xA;  graphql-engine:  &#xA;    image: hasura/graphql-engine:latest  &#xA;    depends_on:  &#xA;      - postgres  &#xA;    restart: always  &#xA;    environment:  &#xA;      - HASURA_GRAPHQL_DATABASE_URL=postgres://...:...@postgres:5432/postgres  &#xA;      - HASURA_GRAPHQL_ACCESS_KEY=...  &#xA;      - HASURA_GRAPHQL_AUTH_HOOK=http://host.docker.internal:3000/simple/webhook  &#xA;    command:  &#xA;      - graphql-engine  &#xA;      - serve  &#xA;      - --enable-console  &#xA;    ports:  &#xA;      - 8080:8080  &#xA;       volumes:   &#xA;  postgres:   &#xA;  data:&#xA;</code></pre>&#xA;&#xA;<p>The local project is for sure working and listening to port 3000. Nontheless, it isn't receiving any requests [as it should] from the graphql-engine container. Could it be related to our proxy?</p>&#xA;",11955478,,1491414,2019-11-06 11:54:46,2019-11-11 13:10:27,docker container has no access to localhost webhook,<docker><docker-compose><graphql><localhost><webhooks>,1,2,0,2019-11-06 11:47:46
58735311,2,,58699001,1,,"<p>I had the same problem. I don't know why, but if you add a field with type <code>ID</code> to one of your object types, the error disappears:</p>&#xA;&#xA;<pre><code>type School {&#xA;    strangeID: ID&#xA;    id: String&#xA;    name: String&#xA;    address: String&#xA;    students: [Student]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It must be a bug in the compiler.</p>&#xA;",3052074,,,,2019-11-06 17:10:47,"",,0,0,0,2019-11-06 17:10:47
58753652,2,,58656316,9,,"<p>First add webpack loader to your webpack config according to <a href=""https://www.apollographql.com/docs/angular/recipes/webpack/"" rel=""noreferrer"">apollo document</a>.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>loaders: [&#xA;  {&#xA;    test: /\.(graphql|gql)$/,&#xA;    exclude: /node_modules/,&#xA;    loader: 'graphql-tag/loader'&#xA;  }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>You not must use double quotation in .graphql file for variables. So your queries.graphql must be like this:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>query supplierByName($value: String) {&#xA; Supplier(filter: { name: $value }) {&#xA;    name&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the last you must pass variables to your query as follows:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import supplierByName from './queries.graphql'&#xA; .....&#xA; this.apollo.query({&#xA;  query: supplierByName,&#xA;  variables: {&#xA;    value: supplierName, // your value&#xA;  }&#xA;})&#xA;  .subscribe(....)&#xA;</code></pre>&#xA;",5062890,,,,2019-11-07 16:59:08,"",,0,8,0,2019-11-07 16:59:08
58760225,2,,58617398,1,,"<p>Your code is fully correct and not problem with SSR. I test your code with next.js example <a href=""https://github.com/zeit/next.js/tree/canary/examples/api-routes-apollo-server-and-client"" rel=""nofollow noreferrer"">api-routes-apollo-server-and-client</a> in CSR and SSR mode. For SSR test first run <code>npm run build</code> and then <code>npm start</code>. If your problem not solved try update node.js and re-download example code and again test it.</p>&#xA;",5062890,,,,2019-11-08 04:06:59,"",,0,4,0,2019-11-08 04:06:59
58780426,2,,58738843,0,,"<p>I solved it, apparently I was using the json.dumps incorrectly.</p>&#xA;&#xA;<pre><code>r = requests.post(url, headers=headerz, data=json.dumps(queryz))&#xA;</code></pre>&#xA;",267741,,,,2019-11-09 14:55:13,"",,0,0,0,2019-11-09 14:55:13
58801633,2,,58788720,1,,"<p>I just saw this part of the Apollo client documentation that I think I missed before: <a href=""https://www.apollographql.com/docs/react/data/local-state/#working-with-fetch-policies"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/data/local-state/#working-with-fetch-policies</a>. </p>&#xA;&#xA;<p>Basically it says that the <code>fetch-policies</code> are evaluated before the resolver is called and that they work just like when calling a remote resolver. </p>&#xA;&#xA;<p>So, I ran some tests and by using the default policy (<code>cache-first</code>), my resolver is called only once and the rest of the times the result is returned directly from the cache.</p>&#xA;&#xA;<p>If I change the <code>fetch-policy</code> to <code>network-only</code> than my resolver function is always called.</p>&#xA;",839211,,,,2019-11-11 12:45:23,"",,0,0,0,2019-11-11 12:45:23
58802045,2,,58729469,0,,"<p>Seemed to be an issue with Docker Desktop.&#xA;Uninstalled the whole docker environment and rebuilt it all, that fixed it.</p>&#xA;",11955478,,,,2019-11-11 13:10:27,"",,0,0,0,2019-11-11 13:10:27
58820067,2,,58817642,1,,<p>Looks like you have executed the composer and symfony commands directly from your host and you have setup the project using launchpad.</p>&#xA;&#xA;<p>Try this instead:</p>&#xA;&#xA;<pre><code>~/ez sfrun ezplatform:graphql:generate-schema&#xA;~/ez sfrun cache:clear&#xA;</code></pre>&#xA;&#xA;<p>With ezlaunchpad your app is running in the docker container so you have to execute all common symfony/ez commands through the ~/ez shell. Executing commands from host can lead to file permission issues as well.</p>&#xA;,4791424,,,,2019-11-12 13:44:37,"",,0,0,0,2019-11-12 13:44:37
58842929,1,58844945,,0,1139,"<p>Take the following queries:</p>&#xA;&#xA;<pre><code>query Foo {&#xA;  foo {&#xA;    id&#xA;    bar(id: 1) {&#xA;      id&#xA;      baz&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;query Bar {&#xA;  bar(id: 1) {&#xA;    id&#xA;    baz&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Sometimes, running the 2nd query gets me a cached version of <code>bar</code>. Other times, it doesn't, but I'm not sure if this is because the query is run multiples times or because that's the default behaviour of the Apollo client in React.</p>&#xA;",3873510,,3873510,2019-11-13 20:13:26,2019-11-13 20:17:34,Does the Apollo client cache nested objects in React?,<graphql><apollo><apollo-client><apollo-cache-inmemory>,1,0,0,2019-11-13 17:55:50
58866006,1,,,6,11143,"<p>I'm trying to set <code>timeout</code> with <code>prisma-labs/graphql-request</code>. I've tried the way described here - <a href=""https://github.com/prisma-labs/graphql-request/issues/103"" rel=""noreferrer"">https://github.com/prisma-labs/graphql-request/issues/103</a>.</p>&#xA;&#xA;<pre><code>const client = new GraphQLClient(config.url, {&#xA;  timeout: 30000,&#xA;  headers: {&#xA;    Authorization: `Bearer ${token}`&#xA;  }&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>My compiler complains as timeout is not directly present in Options interface - <a href=""https://github.com/prisma-labs/graphql-request/blob/master/src/types.ts#L7"" rel=""noreferrer"">https://github.com/prisma-labs/graphql-request/blob/master/src/types.ts#L7</a>.</p>&#xA;&#xA;<p>Should I need to extend the Options interface to use timeout field?</p>&#xA;",1881995,,1881995,2019-11-14 22:34:34,2019-11-14 22:34:34,How to set timeout to graphql-client,<graphql><apollo><apollo-client><graphql-js><prisma-graphql>,0,6,0,2019-11-14 20:28:26
58870596,2,,58859146,0,,"<p>Your question did not specify what you're actually using on the backend. But it should be possible to customize the validation rules a GraphQL service uses in any implementation based on the JavaScript reference implementation. Here's how you do it in GraphQL.js:</p>&#xA;&#xA;<pre><code>const { execute, parse, specifiedRules, validate } = require('graphql')&#xA;&#xA;const validationRules = specifiedRules.filter(rule =&gt; rule.name !== 'FieldsOnCorrectType')&#xA;const document = parse(someQuery)&#xA;const errors = validate(schema, document, validationRules)&#xA;const data = await execute({ schema, document })&#xA;</code></pre>&#xA;&#xA;<p>By omitting the <code>FieldsOnCorrectType</code> rule, you won't get any errors and unrecognized fields will simply be left off the response.</p>&#xA;&#xA;<p><strong>But you really shouldn't do that.</strong></p>&#xA;&#xA;<p>Modifying the validation rules will result in spec-breaking changes to your server, which can cause issues with client libraries and other tools you use.</p>&#xA;&#xA;<p>This issue really boils down to your deployment process. You should not push new versions of the client that depend on a newer version of the server API until that version is deployed to the server. Period. That would hold true regardless of whether you're using GraphQL, REST, SOAP, etc.</p>&#xA;",6024220,,,,2019-11-15 05:03:11,"",,0,0,0,2019-11-15 05:03:11
58876611,2,,58626107,0,,"<p>TLDR; In most situations, you can't, so add a bit of redundancy by creating a local property with the correct data type.</p>&#xA;&#xA;<hr>&#xA;&#xA;<h3>Basic Query</h3>&#xA;&#xA;<p>Doesn't work </p>&#xA;&#xA;<pre><code>query Foo {&#xA;  id&#xA;  bar&#xA;  baz {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If you add a resolver like this:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>export default {&#xA;  Foo: {&#xA;    bar: ({ bar }) =&gt; new BigNumber(bar),&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It will NOT work.</p>&#xA;&#xA;<h3>Basic Query with @client</h3>&#xA;&#xA;<p>Works </p>&#xA;&#xA;<pre><code>query Foo {&#xA;  id&#xA;  bar&#xA;  baz {&#xA;    id&#xA;  }&#xA;  qux @client&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Just by adding another property, say <code>qux</code>, that has the <code>@client</code> directive, you will fire the <code>bar</code> resolver defined above.</p>&#xA;&#xA;<h3>Complex Query with Fragments</h3>&#xA;&#xA;<p>Doesn't work </p>&#xA;&#xA;<p>If you rewrite the query like this:</p>&#xA;&#xA;<pre><code>fragment Baz on Foo {&#xA;  id&#xA;}&#xA;&#xA;query Foo {&#xA;  id&#xA;  bar&#xA;  qux @client&#xA;  ...Baz&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It will NOT work anymore, even with the @client directive.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>My environment:</p>&#xA;&#xA;<ul>&#xA;<li>apollo-cache-inmemory@^1.6.3</li>&#xA;<li>apollo-client@^2.6.4</li>&#xA;<li>apollo-link-http@^1.5.16</li>&#xA;<li>graphql@^14.5.8</li>&#xA;<li>graphql-tag@^2.10.1</li>&#xA;</ul>&#xA;&#xA;<p>And I was connecting to a blockchain subgraph hosted on <a href=""https://thegraph.com"" rel=""nofollow noreferrer"">thegraph.com</a>. YMMV.</p>&#xA;",3873510,,,,2019-11-15 11:59:46,"",,0,0,0,2019-11-15 11:59:46
58895069,2,,58826559,0,,"<p>Here a few things to understand:</p>&#xA;&#xA;<ul>&#xA;<li>the bulk loader is not an offline version of the live loader. It is a tool which purpose is to prepare the data for the Dgraph Alpha(s) server(s).</li>&#xA;<li>the bulk loader, seems to be only able to load <a href=""https://docs.dgraph.io/master/mutations/#triples"" rel=""nofollow noreferrer"">triples</a></li>&#xA;<li>the bulk loader can load a schema and files but this is not the graphql schema, the graphql schema must be loaded apart later.</li>&#xA;</ul>&#xA;&#xA;<p>So to answer the question:</p>&#xA;&#xA;<ul>&#xA;<li><p>start the dgraph graphql server using <code>docker run -v $(pwd)/dgraph:/dgraph -p 8000:8000 -p 9000:9000 -p 8080:8080 -p 9080:9080 -p 5080:5080 -it dgraph/standalone:graphql</code> for your information, this image launch the <code>/tmp/run.sh</code> script which will itself run <code>dgraph-ratel &amp; dgraph zero &amp; dgraph alpha --lru_mb $lru_mb &amp; dgraph graphql</code> (where lru_mb is the memory you give to dgraph alpha). Keep the container's id for later find it using <code>docker ps</code> if you lost it.</p></li>&#xA;<li><p>Unless you have + 5 millions of entries (or no time), try using the live loader. If you have troubles with the live loader like: it became very slow after few hundred of thousands entries (300k in my case), this is very likely because your alpha does not have sufficient memory. In my case, I had to tune docker to provide 16Gb of memory to the engine, the script gives to the <code>$lru_mb</code> variable a third of the host memory. </p></li>&#xA;<li><p>Once you imported your full set of data using live loader, you can export the data using <code>docker exec -it yourDockerContainerId curl localhost:8080/admin/export?format=json</code>, the export will generate 2 files for instance: <code>g01.json.gz</code>and <code>g01.schema.gz</code> which corresponds to your entries and their schema (which is not the graphql schema).</p></li>&#xA;<li><p>To import those 2 files <code>g01.json.gz</code>and <code>g01.schema.gz</code> back to your dgraph graphql instance, you need to convert them to group’s ""p"" directory output. To what I understood, the ""p"" directory holds all the data for the Dgraph Alpha. If you delete it, you lose your data, if you replace it with another set, you will replace / restore the data with the one you just copied. Bulk loader is not an instance of dgraph, it is only the tool which will generate those ""p"" directory outputs. I have been successful running it within the container. Just run <code>docker exec -it yourDockerContainerId dgraph bulk -f export/pathTo/g01.json.gz -s export/pathTo/g01.schema.gz --map_shards=1 --reduce_shards=1 --http localhost:8001 --zero=localhost:5080</code>. I will be honest, I do not understand the purpose of the <code>http localhost:8001</code> argument in this command. If the bulk loader ran successfully, it created an <code>out/0/p</code> folder containing the data you can use in your Dgraph Alpha. Stop your docker container <code>docker stop yourDockerContainerId</code> then Replace your current Dgraph Alpha's <code>p</code> folder with the one generated by bulk loader. (Re)start your docker container and you should have your imported data. (perhaps trash the w and zw folders as well, I have no clue about their use).</p></li>&#xA;<li><p>The data is imported but you will have an warning saying something like there is no graphql schema. Okay let's import our schema (assuming you have it at path <code>dgraph/schemas/schema.graphql</code>) <code>schema=$(cat dgraph/schemas/schema.graphql | tr '\\n' ' ');jq -n --arg schema \""$schema\"" '{ query: \""mutation addSchema($sch: String!) { addSchema(input: { schema: $sch }) { schema { schema } } }\"", variables: { sch: $schema }}' | curl -X POST -H \""Content-Type: application/json\"" http://localhost:9000/admin -d @-</code> This might take few minutes as graph will likely have to index your data according to your graphql schema's indexing rule (typically related to the <code>@search</code> decorator)</p></li>&#xA;</ul>&#xA;&#xA;<p>You're done…</p>&#xA;&#xA;<p>Now, I am still not completely answering the question because the data we are importing back is the one we just exported (and the one we actually imported using the live loader). So unfortunately, the bulk loader cannot import nice data like live loader, you have to feed him with triples. Therefore <strong>you have to prepare the data to load</strong> using bulk loader in that format. To help you in this talk, I suggest to</p>&#xA;&#xA;<ul>&#xA;<li><p>Run the dgraph graphql server <code>docker run -v $(pwd)/dgraph:/dgraph -p 8000:8000 -p 9000:9000 -p 8080:8080 -p 9080:9080 -p 5080:5080 -it dgraph/standalone:graphql</code></p></li>&#xA;<li><p>import a graphql schema (assuming the schema is at path <code>dgraph/schemas/schema.graphql</code> ) <code>schema=$(cat dgraph/schemas/schema.graphql | tr '\\n' ' ');jq -n --arg schema \""$schema\"" '{ query: \""mutation addSchema($sch: String!) { addSchema(input: { schema: $sch }) { schema { schema } } }\"", variables: { sch: $schema }}' | curl -X POST -H \""Content-Type: application/json\"" http://localhost:9000/admin -d @-</code></p></li>&#xA;<li><p>create one or two basic / template entries using a graphql client. You can install the <a href=""https://chrome.google.com/webstore/detail/altair-graphql-client/flnheeellpciglgpaodhkhmapeljopja"" rel=""nofollow noreferrer"">Altair chrome extension</a>, connect to <code>http://localhost:9000/graphql</code> then add some data, something like:</p></li>&#xA;</ul>&#xA;&#xA;<pre><code>mutation {&#xA;  addCustomer(input:{name:""Toto""}){&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can also using a <a href=""https://stackoverflow.com/questions/58688652/graphql-dgraph-how-to-batch-import-json-data"">file and the live loader</a></p>&#xA;&#xA;<ul>&#xA;<li><p>Then export your small template data <code>docker exec -it yourDockerContainerId curl localhost:8080/admin/export?format=json</code> </p></li>&#xA;<li><p>Open the <code>g01.json.gz</code> and you will find an example of the data the bulk loader expects to be fed with.</p></li>&#xA;</ul>&#xA;&#xA;<p>What about blank ids ? I am not sure but as the bulk loader is doing a 2 levels mapping on ids, I can imagine you can provide your ids and those will be converted to dgraph ids later.</p>&#xA;",532695,,,,2019-11-16 20:47:40,"",,0,1,0,2019-11-16 20:47:40
58923230,2,,58922713,1,,<pre><code>IEnumerable&lt;Pupil&gt; pupilList = Expression.Lambda&lt;Func&lt;IReadOnlyCollection&lt;Pupil&gt;&gt;&gt;(pupils.Body).Compile()();&#xA;</code></pre>&#xA;&#xA;<p>This part of code is wrong. You pick a part of expression and you compile it. The part you compile have a teacher expression and you break the relation with it. What you can do is :  Compile the main expression which is you already passed in your function. </p>&#xA;&#xA;<pre><code>var pupilList = puplis.Compile()(/* you need to pass here an actual object */); &#xA;</code></pre>&#xA;&#xA;<p>When you compile your expression you create a function which processes an object but you are not passing the object. In your teachers example it has to be a teacher object.</p>&#xA;,12354911,,,,2019-11-18 21:33:02,"",,0,1,0,2019-11-18 21:33:02
59038543,1,,,1,191,"<p>Follow this tutorial of GraphQL in NodeJS with express: <a href=""https://graphql.org/graphql-js/authentication-and-express-middleware/"" rel=""nofollow noreferrer"">https://graphql.org/graphql-js/authentication-and-express-middleware/</a>&#xA;Seems like  is easy get ip, but when i try in local:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Cannot read property 'ip' of undefined TypeError: Cannot read property&#xA;  'ip' of undefined&#xA;      at Object.ip (/Users/mac/Documents/repos/rebuspluginapi/src/app.ts:85:20)&#xA;      at /Users/mac/Documents/repos/rebuspluginapi/src/controllers/social-campaings.controller.ts:41:19&#xA;      at Generator.next ()&#xA;      at /Users/mac/Documents/repos/rebuspluginapi/src/controllers/social-campaings.controller.ts:8:71&#xA;      at new Promise ()</p>&#xA;</blockquote>&#xA;&#xA;<p>The code:</p>&#xA;&#xA;<pre><code>let root = {&#xA;  ip: function (args, request) {&#xA;    return request.ip;&#xA;  }&#xA;};&#xA;// Rutas graphQL&#xA;app.use(&#xA;  '/v1/graphql',&#xA;  cors(),&#xA;  graphqlHTTP({&#xA;    schema: mergeSchemas({ schemas }),&#xA;    rootValue: root,&#xA;    graphiql: true&#xA;  })&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>And error produces when i try to access to IP:</p>&#xA;&#xA;<pre><code>console.log(queryParams.ip);&#xA;</code></pre>&#xA;",5248230,,,,2020-07-27 02:50:08,Get remote ip GraphQL express Node,<node.js><express><graphql>,1,1,0,2019-11-25 19:05:02
59039409,1,,,1,154,"<p>On a Shopify theme that I am developing, the network tab in Chrome Dev Tools shows that a request for <code>/api/graphql</code> returns status code 400 and this error message: &#xA;<code>{""error"":""Online Store channel is locked.""}</code></p>&#xA;&#xA;<p>The payload for this request was:</p>&#xA;&#xA;<pre><code>{&#xA;  shop {&#xA;    paymentSettings {&#xA;      currencyCode&#xA;    }&#xA;  }&#xA;  node(id: ""Z2lkO...."") {&#xA;    ... on ProductVariant {&#xA;      requiresShipping&#xA;      price&#xA;      presentmentPrices(first: 25) {&#xA;        edges {&#xA;          node {&#xA;            price {&#xA;              amount&#xA;              currencyCode&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Why is this failing and how do I fix it?</p>&#xA;",18333,,18333,2019-11-25 20:38:29,2019-11-25 20:38:29,"How do I fix Shopify GraphQL error :""Online Store channel is locked.""",<graphql><shopify><shopify-api>,0,0,0,2019-11-25 20:10:40
59050666,1,59053925,,0,992,"<p>While running any client that connects to my java app with graphQL,&#xA;I get all schema being logged, which is quite a mess, and I would like to disable this log entries (request and response) for:</p>&#xA;&#xA;<blockquote>&#xA;  <p>__schema</p>&#xA;</blockquote>&#xA;&#xA;<p>and</p>&#xA;&#xA;<blockquote>&#xA;  <p>__type</p>&#xA;</blockquote>&#xA;&#xA;<p>I guess sthg like fo JS:&#xA;<a href=""https://github.com/helfer/graphql-disable-introspection"" rel=""nofollow noreferrer"">JS graphQL disable introspection</a></p>&#xA;",2895186,,,,2019-11-26 15:11:52,Disable GraphQL introspection logging in java application,<java><logging><graphql><introspection><disable>,1,0,0,2019-11-26 12:08:54
59056300,1,,,1,590,"<p>Basically I want to get localized values for the entries linking to my unique entry.</p>&#xA;&#xA;<pre><code>movie(id: $movieId) {&#xA;  linkedFrom {&#xA;    spanishMovieLocations: movieLocationCollection(locale: ""es-ES"") { &#xA;      items {//fields with localized values} &#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But instead I get no results in my collection array.  Querying directly for <code>movieLocationCollection(locale: ""es-ES"")</code> gets me localized values and has some matching <code>movie.sys.id</code> that is used in <code>$movieId</code>.</p>&#xA;&#xA;<p>This works fine, but then I dont get the localized fields I need.</p>&#xA;&#xA;<pre><code>movie(id: $movieId) {&#xA;  linkedFrom {&#xA;    movieLocationCollection { &#xA;      items {//fields with non-localized values} &#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",9778051,,,,2020-12-15 21:59:01,Contentful graphql api not fetching localized `linkedfrom` items,<graphql><contentful><contentful-api>,1,1,0,2019-11-26 17:21:51
59065955,2,,57822992,0,,"<p>This was a bug in Apollo, they fixed it in @apollo/react-hooks v3.1.3&#xA;<a href=""https://github.com/apollographql/react-apollo/issues/3690"" rel=""nofollow noreferrer"">See this</a></p>&#xA;",5014741,,,,2019-11-27 08:26:15,"",,0,0,0,2019-11-27 08:26:15
59077796,1,,,0,444,"<p>I have a webapp made with Next.js and Apollo as show in example <a href=""https://github.com/zeit/next.js/tree/canary/examples/with-apollo"" rel=""nofollow noreferrer"">with-apollo</a>. I want to serve multiple domains with my webapp (name-based virtual hosting). Unfortunately <code>HttpLink</code> of <code>ApolloClient</code> requires <a href=""https://github.com/zeit/next.js/blob/c6393b498820b8d8b0f6b43844c1778d20a57f6b/examples/with-apollo/lib/apollo.js#L131"" rel=""nofollow noreferrer"">absolute server URL</a> with domain but this makes backend app unable to recognize domain which user really visited. Is there a way to configure <code>HttpLink</code> with a dynamic URL based on real request or use relative URL or anything else?</p>&#xA;",1795220,,,,2019-12-06 19:25:29,Virtual Hosting on Next.js app with Apollo GraphQL,<apollo><next.js><apollo-client>,2,4,0,2019-11-27 20:10:43
59078958,2,,59057895,-2,,<p>Fixed the issue. It had nothing to do with GraphQl/Apollo code. Thanks</p>&#xA;,4685399,,,,2019-11-27 21:54:35,"",,0,2,0,2019-11-27 21:54:35
59091688,1,59100711,,0,538,"<p>We need a realtime database which we can deploy using docker.</p>&#xA;&#xA;<p>I found a Hasura/PostGreSQL docker container which looks like we can use it for our purpose:&#xA;<a href=""https://docs.hasura.io/1.0/graphql/manual/getting-started/docker-simple.html"" rel=""nofollow noreferrer"">https://docs.hasura.io/1.0/graphql/manual/getting-started/docker-simple.html</a></p>&#xA;&#xA;<p>One thing I figured out was that the URL in the documentation was wrong. It's <code>http://localhost:8080/v1/graphql</code> and not <code>http://localhost:8080/graphql</code>.</p>&#xA;&#xA;<p>But I can't seem to get any results from my subscription...&#xA;I get a BAD_ACCESS crash in the package's SplitNetworkTransport.swift</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/BlnSH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BlnSH.png"" alt=""crash""></a></p>&#xA;&#xA;<p>Am I missing something?</p>&#xA;&#xA;<p>My Apollo client code looks like this:</p>&#xA;&#xA;<pre><code>import Apollo&#xA;import ApolloWebSocket&#xA;&#xA;class Apollo {&#xA;    static let shared = Apollo()&#xA;&#xA;    let client: ApolloClient = {&#xA;        let authPayloads = [ ""x-hasura-admin-secret"": ""secret"" ]&#xA;        let configuration = URLSessionConfiguration.default&#xA;        configuration.httpAdditionalHeaders = authPayloads&#xA;&#xA;        let wsEndpointURL = URL(string: ""ws://localhost:8080/v1alpha1/graphql"")!&#xA;        let endpointURL = URL(string: ""http://localhost:8080/v1alpha1/graphql"")!&#xA;&#xA;        let map: GraphQLMap = authPayloads&#xA;        let websocket = WebSocketTransport(request: URLRequest(url: wsEndpointURL), connectingPayload: map)&#xA;&#xA;        let httpNetworkTransport = HTTPNetworkTransport( url: endpointURL,  session: URLSession(configuration: configuration))&#xA;&#xA;        let splitTransport = SplitNetworkTransport(httpNetworkTransport: httpNetworkTransport, webSocketNetworkTransport: websocket)&#xA;&#xA;        return ApolloClient(networkTransport: splitTransport)&#xA;    }()&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And I'm calling it as follows:</p>&#xA;&#xA;<pre><code>import UIKit&#xA;import Apollo&#xA;&#xA;class ViewController: UIViewController {&#xA;    private var subscription: Cancellable?&#xA;    @IBOutlet weak var label: UILabel!&#xA;&#xA;    override func viewDidLoad() {&#xA;        super.viewDidLoad()&#xA;        // Do any additional setup after loading the view.&#xA;&#xA;        self.subscription = Apollo.shared.client.subscribe(subscription: MySubscriptionSubscription()) { [weak self] result in&#xA;            guard let this = self else { return }&#xA;&#xA;            switch result {&#xA;                case .success(let graphQLResult):&#xA;                    if let data = graphQLResult.data {&#xA;                        this.label.text = ""data""&#xA;                        print(""Simon Says data: \(data)"")//TODO: Remove&#xA;                    }&#xA;                case .failure(let error):&#xA;                    this.label.text = ""error""&#xA;                    print(""Simon Says error: \(error)"")//TODO: Remove&#xA;            }&#xA;        }&#xA;    }&#xA;&#xA;    deinit {&#xA;        self.subscription?.cancel()&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>P.s. I'm using Xcode Version 11.2.1 (11B500), swift 5.1, Apollo swift package 0.20.0 and the docker-compose.yaml from the URL in the Hasura docs linked above.</p>&#xA;",224571,,224571,2019-11-30 13:00:31,2019-11-30 13:00:31,Cant connect to web socket of Hasura PostGreSQL docker container,<ios><docker><graphql><apollo><hasura>,1,0,0,2019-11-28 15:06:17
59185067,1,59185229,,1,467,"<p>For context, I am running graphql on my application. This application utilizes SSR (serverside rendering) and all the calls in that respect are working fine. When the client hits the application, I render the app, like any other standard react app:</p>&#xA;&#xA;<p><code>render(Routes, createClient())</code></p>&#xA;&#xA;<p>The problem is.. in create client (where the apolloclient is created, which tells the provider how to connect to the external graphql server), I reference an env variable.</p>&#xA;&#xA;<pre><code>const serverLocation =&#xA;  process.env.SERVER_LOCATION || 'http://localhost:8080/graphql&#xA;</code></pre>&#xA;&#xA;<p>Now, this is all fine on the server in the SSR case, but there is no notion of an env variable on the client - just undefined. Given that this value can be configurable and gets instantiated on the client, how should I be populating this? </p>&#xA;",8891397,,,,2019-12-04 22:23:50,How can I specify environment variables on the client side for graphql?,<node.js><reactjs><graphql>,1,1,0,2019-12-04 21:43:31
59217435,2,,59155656,0,,<p>It seems like your schema file contains the <code>Mutation</code> type twice.  Try changing it to look something like this:</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;  addPairToItem(input: AddPairToItemInput!): Users!&#xA;  removePairFromItem(input: RemovePairInput!): Users!&#xA;}&#xA;</code></pre>&#xA;,11681626,,,,2019-12-06 17:03:41,"",,0,1,0,2019-12-06 17:03:41
59219167,2,,59077796,0,,"<p>The <code>NextPageContext</code> object passed to <code>getInitialProps</code> includes the <code>req</code> object when called on the server-side. So you can do something like:</p>&#xA;&#xA;<pre><code>WithApollo.getInitialProps = async ctx =&gt; {&#xA;  const { AppTree, req } = ctx&#xA;&#xA;  const linkBaseUrl = req ? req.protocol + '://' + req.get('host') : ''&#xA;&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can then pass this base url down to <code>createApolloClient</code> along with the initial state and prepend your HttpLink's url with it. On the client side, this will prepend an empty string (you only need the full URL on the server).</p>&#xA;",6024220,,,,2019-12-06 19:25:29,"",,0,0,0,2019-12-06 19:25:29
59247540,2,,59237666,0,,<p>Looks like I was having problems connecting to MongoDB in Heroku and it has nothing to GraphQl as previously thought.</p>&#xA;,8681725,,,,2019-12-09 11:05:56,"",,0,0,0,2019-12-09 11:05:56
59272819,1,,,5,3681,"<p>I have a React application with ApolloClient with Apollo-Link-Schema. The application works fine locally but in our staging environment (using GOCD), we get the following error:</p>&#xA;&#xA;<pre><code>Uncaught Error: Cannot use e ""__Schema"" from another module or realm.&#xA;&#xA;Ensure that there is only one instance of ""graphql"" in the node_modules&#xA;directory. If different versions of ""graphql"" are the dependencies of other&#xA;relied on modules, use ""resolutions"" to ensure only one version is installed.&#xA;&#xA;https://yarnpkg.com/en/docs/selective-version-resolutions&#xA;&#xA;Duplicate ""graphql"" modules cannot be used at the same time since different&#xA;versions may have different capabilities and behavior. The data from one&#xA;version used in the function from another could produce confusing and&#xA;spurious results.&#xA;    at t.a (instanceOf.mjs:21)&#xA;    at C (definition.mjs:37)&#xA;    at _ (definition.mjs:22)&#xA;    at X (definition.mjs:284)&#xA;    at J (definition.mjs:287)&#xA;    at new Y (definition.mjs:252)&#xA;    at Y (definition.mjs:254)&#xA;    at Object.&lt;anonymous&gt; (introspection.mjs:459)&#xA;    at u (NominationsApprovals.module.js:80)&#xA;    at Object.&lt;anonymous&gt; (validate.mjs:1)&#xA;</code></pre>&#xA;&#xA;<p>Dependencies are installed with yarn, I've added the <code>resolutions</code> field to the package.json.</p>&#xA;&#xA;<pre><code>    ""resolutions"": {&#xA;        ""graphql"": ""^14.5.8""&#xA;    },&#xA;</code></pre>&#xA;&#xA;<p>I've checked the yarn.lock and can only find one reference for the graphql package.&#xA;<code>npm ls graphql</code> does not display any duplicates.</p>&#xA;&#xA;<p>I thought maybe its a build issue with webpack - I have a different build script for staging, but running that locally I am still able to get the react application to run with that bundle. </p>&#xA;&#xA;<p>Can anyone suggest anything else to help me fix this?</p>&#xA;",6461646,,,,2022-01-28 14:11:11,"`Cannot use e ""__Schema"" from another module or realm.` and `Duplicate ""graphql"" modules` using ApolloClient",<graphql><react-apollo><apollo-client><graphql-tools><apollo-link>,6,0,0,2019-12-10 17:46:42
59289399,2,,59272819,7,,"<p>I managed to find the cause of the issue, if this helps anyone else. The issue is not to do with duplicate instances of the package at all, this is a false positive triggered by us using webpack's DefinePlugin to set the <code>process.env.NODE_ENV</code> to <code>staging</code> for our staging build. </p>&#xA;&#xA;<p>However, in webpack the <code>mode</code> (see <a href=""https://webpack.js.org/configuration/mode/"" rel=""noreferrer"">https://webpack.js.org/configuration/mode/</a>), which sets the process.env.NODE_ENV, only accepts <code>none</code>, <code>development</code> and <code>production</code> as valid values. This was triggering an env check in the graphql package to fail and trigger this error message.</p>&#xA;&#xA;<p>In our case, we need to differentiate between staging and production as our API endpoint differs based on this, but the solution we implemented is to not rely on the <code>process.env.NODE_ENV</code>, but to assign a custom variable on build (e.g. <code>process.env.API_URL</code>)</p>&#xA;",6461646,,,,2019-12-11 15:46:36,"",,0,2,0,2019-12-11 15:46:36
59308852,2,,59307244,0,,"<p>I got the response, but now observer.onNext is undefined.</p>&#xA;&#xA;<p>My updated code environment.js:</p>&#xA;&#xA;<pre><code>const setupSubscription = (config, variables, cacheConfig, observer) =&gt; {&#xA;  const query = config.text&#xA;&#xA;  const subscriptionClient = new SubscriptionClient('ws://192.168.1.19:8000/subscriptions', {reconnect: true})&#xA;  subscriptionClient.request({ query, variables }).subscribe((result) =&gt; {&#xA;    observer.onNext({data: result})&#xA;  });&#xA;&#xA;  return Observable.create(() =&gt; {    &#xA;    return subscriptionClient;&#xA;  });&#xA;}&#xA;&#xA;const environment = new Environment({&#xA;  network: Network.create(fetchQuery, setupSubscription),&#xA;  store: new Store(new RecordSource())&#xA;});&#xA;</code></pre>&#xA;",5579711,,,,2019-12-12 16:22:36,"",,0,0,0,2019-12-12 16:22:36
59320357,2,,59309588,0,,"<p>Seems like I had a wrong query for the introspection. Moving the <code>inputField</code> part out of <code>ofType</code> to the upper level fix the issue:</p>&#xA;&#xA;<pre><code>  kind&#xA;  name&#xA;  inputFields {&#xA;    name&#xA;    description&#xA;    type {&#xA;      kind&#xA;      name&#xA;      ofType {&#xA;        kind&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;  ofType {&#xA;    kind&#xA;    name&#xA;    inputFields {&#xA;      name&#xA;      description&#xA;      type {&#xA;        kind&#xA;        name&#xA;        ofType {&#xA;          kind&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;query CreateCityInputFields {&#xA;  input: __type(name: ""CreateCityInput"") {&#xA;    inputFields {&#xA;      name&#xA;      description&#xA;      type {&#xA;        ...InputTypeRef&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Solved the issue.</p>&#xA;",932755,,,,2019-12-13 10:13:40,"",,0,0,0,2019-12-13 10:13:40
59335790,2,,56305509,2,,"<p>Here’s a complete example of Next.js/Apollo GraphQL running both on Zeit Now (as serverless function/lambda) and Heroku (with an Express server):</p>&#xA;&#xA;<p><strong><a href=""https://github.com/tomsoderlund/nextjs-pwa-graphql-sql-boilerplate"" rel=""nofollow noreferrer"">https://github.com/tomsoderlund/nextjs-pwa-graphql-sql-boilerplate</a></strong></p>&#xA;&#xA;<p><img src=""https://github.com/tomsoderlund/nextjs-pwa-graphql-sql-boilerplate/raw/master/docs/github_preview.jpg"" alt=""nextjs-pwa-graphql-sql-boilerplate""></p>&#xA;",449227,,,,2019-12-14 13:57:56,"",,0,0,0,2019-12-14 13:57:56
59339734,1,,,6,1162,"<p>I'm currently working on a project where I'm using nuxt, vue-apollo, and the nuxt apollo-module that wraps vue-apollo and integrates it into nuxt.</p>&#xA;&#xA;<p>I have a fairly straightforward smart query defined in my page:</p>&#xA;&#xA;<pre><code>&lt;template&gt;&#xA;  &lt;div&gt;&#xA;    &lt;ul&gt;&#xA;      &lt;li v-for=""itinerary in itineraries"" :key=""itinerary.id""&gt;&#xA;        {{ itinerary.id }}&#xA;      &lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/template&gt;&#xA;&#xA;&lt;script&gt;&#xA;import gql from 'graphql-tag';&#xA;&#xA;export default {&#xA;  name: 'HomePage',&#xA;  apollo: {&#xA;    itineraries: {&#xA;      prefetch: true,&#xA;      query: gql`&#xA;        query {&#xA;          itineraries {&#xA;            id&#xA;          }&#xA;        }&#xA;      `&#xA;    }&#xA;  },&#xA;  data() {&#xA;    return {&#xA;      itineraries: []&#xA;    };&#xA;  }&#xA;};&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;&#xA;<p>From what I understand from the docs, prefetch should start the query on the server, but it's not blocking so the server-side render will continue before the data is returned. In order to avoid hydration errors, the nuxt apollo module should be using the apollo cache to store the results, as described here in the Vue SSR guide: <a href=""https://ssr.vuejs.org/guide/data.html#data-store"" rel=""noreferrer"">https://ssr.vuejs.org/guide/data.html#data-store</a> .</p>&#xA;&#xA;<p>However, I am seeing hydration errors in my console when I load the page:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Mismatching childNodes vs. VNodes:<br>&#xA;  NodeList [ li ]</p>&#xA;  &#xA;  <p>Array []&#xA;  vue.runtime.esm.js:6421&#xA;  [Vue warn]: The client-side rendered virtual DOM tree is not matching server-rendered content. This is likely caused by incorrect HTML markup, for example nesting block-level elements inside p, or missing tbody. Bailing hydration and performing full client-side render.</p>&#xA;</blockquote>&#xA;&#xA;<p>In addition, on my graphql server, I'm seeing the itineraries query being received twice. I assume once during SSR and then again on the client side.</p>&#xA;&#xA;<p>None of this seems quite right to me, but I'm honestly not sure if there's a bug with the library or if I just don't understand how prefetch is supposed to work in an SSR scenario.</p>&#xA;&#xA;<p>Can anyone explain how this is supposed to work?</p>&#xA;",23323,,,,2019-12-14 22:35:17,How are prefetch smart queries in vue-apollo and nuxt supposed to work?,<vue.js><nuxt.js><apollo><vue-apollo>,0,0,0,2019-12-14 22:35:17
59362059,1,59362779,,2,6867,"<p>I am trying apollo for the first time.&#xA;My backend server is Phoenix framework(elixir). and running in <a href=""http://localhost:4000/api"" rel=""nofollow noreferrer"">http://localhost:4000/api</a>&#xA;So I tried to do a first query using apollo like this in my code.</p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import { StyleSheet, Text, View } from 'react-native';&#xA;import ApolloClient from 'apollo-boost';&#xA;import { gql } from 'apollo-boost';&#xA;const client = new ApolloClient(&#xA;  {&#xA;    uri: 'http://localhost:4000/api',&#xA;  }&#xA;);&#xA;client.query({&#xA;   query: gql`&#xA;     { &#xA;        users {&#xA;          name&#xA;          email&#xA;        } &#xA;     `}&#xA;}).then(result =&gt; console.log(result));&#xA;</code></pre>&#xA;&#xA;<p>But I got an error.</p>&#xA;&#xA;<pre><code>[Network error]: TypeError: Network request failed&#xA;&#xA;    node_modules/expo/build/logs/LogSerialization.js:166:14 in _captureConsoleStackTrace&#xA;    node_modules/expo/build/logs/LogSerialization.js:41:24 in serializeLogDataAsync&#xA;    ... 9 more stack frames from framework internals&#xA;&#xA;[Unhandled promise rejection: Error: Network error: Network request failed]&#xA;&#xA;    http://192.168.1.8:19001/node_modules/expo/AppEntry.bundle?platform=android&amp;dev=true&amp;minify=false&amp;hot=false:124432:28 in new ApolloError&#xA;    node_modules/apollo-client/bundle.umd.js:1587:12 in &lt;anonymous&gt;&#xA;    node_modules/apollo-client/bundle.umd.js:2007:12 in info.listeners.forEach$argument_0&#xA;    &lt;anonymous&gt;:null in Set.forEach&#xA;    node_modules/apollo-client/bundle.umd.js:2005:17 in queries.forEach$argument_0&#xA;    &lt;anonymous&gt;:null in Map.forEach&#xA;    node_modules/apollo-client/bundle.umd.js:2003:11 in QueryManager.prototype.broadcastQueries&#xA;    http://192.168.1.8:19001/node_modules/expo/AppEntry.bundle?platform=android&amp;dev=true&amp;minify=false&amp;hot=false:125823:31 in &lt;unknown&gt;&#xA;    node_modules/promise/setimmediate/core.js:37:11 in tryCallOne&#xA;    node_modules/promise/setimmediate/core.js:123:14 in setImmediate$argument_0&#xA;</code></pre>&#xA;&#xA;<p>And in my server log said nothing. I think my client doesn't even touch the server.&#xA;What am I missing? any ideas? :(</p>&#xA;",12546761,,,,2019-12-16 19:00:04,[Network error]: TypeError: Network request failed,<react-native><elixir><phoenix-framework><apollo><absinthe>,1,0,0,2019-12-16 18:03:45
59381078,2,,59379971,14,,"<p>Setting the environment variable <code>FUNCTIONS_V2_COMPATIBILITY_MODE</code> to <code>true</code> seems to solve the issue, see <a href=""https://github.com/Azure/azure-functions-host/pull/5286"" rel=""noreferrer"">https://github.com/Azure/azure-functions-host/pull/5286</a>.</p>&#xA;",1219158,,,,2019-12-17 19:42:55,"",,0,0,0,2019-12-17 19:42:55
59406939,2,,58897099,0,,"<p>You could user <a href=""https://www.npmjs.com/package/memwatch-next"" rel=""nofollow noreferrer"">node-memwatch</a> to detect where is memory leak.</p>&#xA;&#xA;<p>It also might be a known issue, here is the <a href=""https://github.com/apollographql/apollo-client/issues/3982"" rel=""nofollow noreferrer"">link</a> with a similar issue.</p>&#xA;",4546641,,,,2019-12-19 09:41:01,"",,0,2,0,2019-12-19 09:41:01
59416412,2,,59415417,0,,"<p>I think you're on the right path. Abstracting away the environment-specific configuration is the way to go in my opinion.</p>&#xA;&#xA;<p>Here are a couple of remarks to enhance your code: </p>&#xA;&#xA;<ul>&#xA;<li>I don't think you necessarily need <code>dotenv</code> or even <code>merge</code> from <code>lodash</code> to make sure that your application code runs regardless of the environment it is in.</li>&#xA;<li>The object you export from <code>environment/index.js</code> should have the same shape for all environments to avoid errors that occur only in one environment, which is not the case in the snippets you provided.</li>&#xA;<li>I would suggest using JSON instead of JS for your config, but that's just a preference.</li>&#xA;<li>I would advise to use as little environment variables as possible. You can simply rely on <code>NODE_ENV</code> (or whatever single environment variable name you want) and make sure that it is defined when you run your <code>npm start</code> script.</li>&#xA;</ul>&#xA;&#xA;<p>Here is the code of what I would recommend to do (where ALL_CAPS strings should be replaced by the actual values you need for your app to run in that environment):</p>&#xA;&#xA;<p><em>development.json</em></p>&#xA;&#xA;<pre><code>{&#xA;  ""port"": 8080,&#xA;  ""db"": {&#xA;    ""username"": ""DEVELOPMENT_USERNAME"",&#xA;    ""password"": ""DEVELOPMENT_PASSWORD"",&#xA;    ""name"": ""DEVELOPMENT_DATABASE_NAME""&#xA;  },&#xA;  ""newfromproduction"": """"&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><em>production.json</em></p>&#xA;&#xA;<pre><code>{&#xA;  ""port"": 8080,&#xA;  ""db"": {&#xA;    ""username"": ""PRODUCTION_USERNAME"",&#xA;    ""password"": ""PRODUCTION_PASSWORD"",&#xA;    ""name"": ""PRODUCTION_DATABASE_NAME""&#xA;  },&#xA;  ""newfromproduction"": ""jkdl""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><em>environment/index.js</em></p>&#xA;&#xA;<pre><code>import development from './development.json';&#xA;import production from './production.json';&#xA;&#xA;const { NODE_ENV: mode } = process.env;&#xA;&#xA;const configuration = {&#xA;  development,&#xA;  production&#xA;};&#xA;&#xA;// using a little bit of destructuring magic but that is not necessary&#xA;export default { ...configuration[mode], mode };&#xA;</code></pre>&#xA;&#xA;<p><em>package.json</em></p>&#xA;&#xA;<pre><code>""scripts"": {&#xA;  ""start"": ""NODE_ENV=production node server"",&#xA;  ""start:dev"": ""NODE_ENV=development nodemon server""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And you can keep the code in <code>server.js</code> the same.</p>&#xA;&#xA;<p>A couple benefits for this approach:</p>&#xA;&#xA;<ul>&#xA;<li>You don't have to commit <code>development.json</code> and <code>production.json</code> in your repository, so your password is safe from developers who don't need to know what it is. If a developer needs the config file to work on the app, simply share an encrypted version of <code>development.json</code> with them. It's not ideal but at least your password is not stored in plaintext in GitHub.</li>&#xA;<li>If you need to add other environments (such as <code>test</code> or <code>stage</code>), you only need to create a JSON file in the <code>environment</code> folder and add a script in <code>package.json</code> (for example <code>""start:stage"": ""NODE_ENV=stage node server""</code> or <code>""test"": ""NODE_ENV=test mocha""</code>). No need to add <code>if</code> statements in <code>environment/index.js</code>.</li>&#xA;</ul>&#xA;&#xA;<p>A small downside:</p>&#xA;&#xA;<ul>&#xA;<li>If the value of <code>NODE_ENV</code> is a string for an environment that is not expected (such as <code>NODE_ENV=abc123</code>) then the app will crash because <code>configuration.abc123</code> is <code>undefined</code>, but that is not necessarily a bad thing (having unexpected environments is not a good idea) and you can also ameliorate the code I provided to handle that case.</li>&#xA;</ul>&#xA;",11439562,,11439562,2019-12-19 22:07:41,2019-12-19 22:07:41,"",,0,10,0,2019-12-19 20:16:57
59426093,2,,57415569,7,,"<p>I had a similar problem recently and managed to fix it by creating a Nuxt plugin which overrides default client's options:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>// plugins/apollo-overrides.ts&#xA;import { Plugin } from '@nuxt/types';&#xA;&#xA;const apolloOverrides: Plugin = ({ app }) =&gt; {&#xA;  // disable caching on all the queries&#xA;  app.apolloProvider.defaultClient.defaultOptions = {&#xA;    query: {&#xA;      fetchPolicy: 'no-cache',&#xA;    },&#xA;  };&#xA;};&#xA;&#xA;export default apolloOverrides;&#xA;</code></pre>&#xA;&#xA;<p>Don't forget to register it in Nuxt's config:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>// nuxt.config.js&#xA;export default {&#xA;  ...&#xA;&#xA;  plugins: [&#xA;    '~/plugins/apollo-overrides',&#xA;  ],&#xA;&#xA;  ...&#xA;};&#xA;</code></pre>&#xA;",3831901,,,,2019-12-20 13:33:34,"",,0,0,0,2019-12-20 13:33:34
59427905,1,59428394,,1,494,"<p>I have been following these two tutorials:</p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://strapi.io/blog/cooking-a-deliveroo-clone-with-nuxt-vue-js-graphql-strapi-and-stripe-dishes-list-part-3-7/"" rel=""nofollow noreferrer"">Deliveroo clone - Nuxt/Apollo/Strapi</a></li>&#xA;<li><a href=""https://strapi.io/blog/build-a-blog-using-nuxt-strapi-and-apollo"" rel=""nofollow noreferrer"">Blog - Nuxt/Apollo/Strapi</a></li>&#xA;</ul>&#xA;&#xA;<p>After <a href=""https://strapi.io/documentation/3.0.0-beta.x/concepts/configurations.html#cron-tasks"" rel=""nofollow noreferrer"">reading through Strapi's documentation</a> and scouring the web I cannot figure out how to set a <code>baseUrl</code> of my application on the frontend so that whatever environment I am in will return the right URL to query the backend, for example:</p>&#xA;&#xA;<ul>&#xA;<li>Production: <code>https://awesomesauce.com</code></li>&#xA;<li>Staging: <code>https://staging.awesomesauce.com</code></li>&#xA;<li>QA: <code>https://qa.awesomesauce.com</code></li>&#xA;<li>Dev: <code>http://localhost:1337</code></li>&#xA;</ul>&#xA;&#xA;<p>If I was in staging then this <code>baseUrl</code> would be set to <code>https://staging.awesomesauce.com</code>, and so on.</p>&#xA;&#xA;<p>For example in these tutorials you'll see when they reference images they do so like this <code>&lt;img src=""http://localhost:1337/img.jpg /&gt;</code>, however in a production environment how would this ever work?</p>&#xA;&#xA;<p>Strapi's documentation has some information about using the <code>server.json</code>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>As an example using this configuration with Nginx your server would respond to <a href=""https://example.com:8443"" rel=""nofollow noreferrer"">https://example.com:8443</a> instead of <a href=""http://localhost:1337"" rel=""nofollow noreferrer"">http://localhost:1337</a></p>&#xA;</blockquote>&#xA;&#xA;<p>I see that there is a <code>config/environments/</code> directory with <code>development</code>, <code>production</code>, and <code>staging</code>, I am lost with how I can access something from these like <code>strapi.currentEnvironment.baseUrl</code> from my frontend application in an <code>&lt;img /&gt;</code> tag or elsewhere. My application is structured like this:</p>&#xA;&#xA;<pre><code>Application&#xA;├── frontend&#xA;├── backend&#xA;</code></pre>&#xA;&#xA;<p>I make the queries from the frontend to the backend using Apollo.</p>&#xA;&#xA;<p>Is there some sort of magic proxy thing going on where references to <code>localhost:1337</code> are redirected to their respective environment URL?</p>&#xA;",4826740,,,,2019-12-20 16:19:18,How do I configure my Nuxt frontend application to know the baseUrl of the backend which uses Strapi?,<vue.js><graphql><nuxt.js><apollo><strapi>,1,0,0,2019-12-20 15:43:51
59428394,2,,59427905,1,,"<p>Just use <a href=""https://nuxtjs.org/api/configuration-env"" rel=""nofollow noreferrer"">ENV variables</a> in your Nuxt app and keep the values in different <code>.env</code> files in sync with your Strapi server settings....</p>&#xA;",381282,,,,2019-12-20 16:19:18,"",,0,0,0,2019-12-20 16:19:18
59467147,2,,59457830,0,,"<p>In your graphQL query you query for English translation with <code>name(locale: \""en\"")""</code> so the result will be directly the String for English and can't be parsed as <code>LocalizedString</code> which is a kind of a Map of Strings per locale.</p>&#xA;&#xA;<p>To fix this you need to change in your <code>EvaProduct</code> class the <code>name</code> field to String or just update your query for to get the object for all locales.</p>&#xA;",1575096,,,,2019-12-24 10:10:32,"",,0,0,0,2019-12-24 10:10:32
59469447,2,,57730283,-1,,<p>I solved this problem. I switched to Ubuntu from Windows and it just worked. #FWindows</p>&#xA;,12000314,,,,2019-12-24 13:20:39,"",,0,0,0,2019-12-24 13:20:39
59475255,1,,,0,239,"<p>I have been building a website with Sanity.io (Netlify) It is working perfectly fine when I'm using localhost. However, when I deploy the site to Netlify, graphql query reverts back to the beginning list. Here is the image of the localhost Graphql</p>&#xA;<p><a href=""https://i.stack.imgur.com/1EFV7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1EFV7.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Then, I can deploy the studio and still everything is fine, but when I push the front end, deployment fails and tells me</p>&#xA;<p><a href=""https://i.stack.imgur.com/NR4OL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NR4OL.png"" alt=""enter image description here"" /></a></p>&#xA;<p>I have done the graphql deploy and tried it again, but the result is the same</p>&#xA;<p>I have been trying to solve it last 2 days, but no luck. Maybe you guys can help me with this.</p>&#xA;<p>Here is the git link as well. <a href=""https://github.com/BoraALAP/jasperspaws.git"" rel=""nofollow noreferrer"">https://github.com/BoraALAP/jasperspaws.git</a></p>&#xA;<p>Thanks,</p>&#xA;",7902078,,-1,2020-06-20 09:12:55,2019-12-25 05:11:35,Resolved: Sanity.io Deploy fails even though local host says query exists,<deployment><graphql><sanity>,1,0,0,2019-12-25 04:33:02
59502059,1,,,0,386,"<p>I am learning nuxtjs. I used it to build a todo app, implementing graphql on the backend (express) to set up my API.&#xA;When I wanted to implement apollo, I found that I had to use @nuxtjs/apollo module, it has a bunch of options to set in <strong>nuxt.config.js</strong>, but only one is required, so I just added the following code to my <strong>nuxt.config.js</strong> file:</p>&#xA;&#xA;<pre><code>modules: [""@nuxtjs/apollo""],&#xA;apollo: {&#xA;  clientConfigs: {&#xA;    default: {&#xA;      httpEndpoint: ""http://localhost:3000/graphql""&#xA;    }&#xA;  }&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>It worked fine developing on my local machine. When I tried to deploy it to heroku I faced some problems.</p>&#xA;&#xA;<p>I figured that the api calls are not done correctly, in my app's logs in heroku's dashboard I saw the following line:&#xA;<code>Error Network error: request to http://localhost:3000/graphql failed, reason: connect ECONNREFUSED 127.0.0.1:3000</code>&#xA;So I figured that I had to change the value of <strong><em>httpEndpoint</em></strong> in my <strong><em>nuxt.config.js</em></strong> file.&#xA;I also noticed that in heroku the host and port changes with every restart of the app, so I will get a uri like this: <code>http://172.18.254.242:24570/</code></p>&#xA;&#xA;<p>I know that I need to change the value of <strong><em>httpEndpoint</em></strong> in my <strong><em>nuxt.config.js</em></strong> file, but to what value exactly? I have no idea.</p>&#xA;&#xA;<p>I searched a lot in the official docs but didn't find any solutions, I also tried every solution I could find on google and stackoverflow but didn't have any luck.</p>&#xA;&#xA;<p>I want to know what value exactly should I pass in <strong><em>httpEndpoint</em></strong> to have my app working.</p>&#xA;",7155926,,,,2019-12-27 19:07:43,"How to deploy a nuxt application that uses the @nuxtjs/apollo module, to heroku?",<heroku><graphql><nuxt.js><apollo><apollo-client>,1,0,0,2019-12-27 14:19:41
59513014,2,,59510481,0,,"<p>It turns out that I missed one of the breaking changes when upgrading strapi to the latest version. The mongose connector changed its name: <a href=""https://strapi.io/documentation/3.0.0-beta.x/migration-guide/migration-guide-beta.17-to-beta.18.html"" rel=""nofollow noreferrer"">https://strapi.io/documentation/3.0.0-beta.x/migration-guide/migration-guide-beta.17-to-beta.18.html</a></p>&#xA;",3793161,,,,2019-12-28 17:01:59,"",,0,0,0,2019-12-28 17:01:59
59567529,1,,,1,98,"<p>I'm using 'gatsby-source-prismic-graphql' to integrate a Prismic repository with an existing Gatsby project, but am finding that the <code>window</code> object is undefined when the site is built. The problem is different (though maybe related?) to that caused by Gatsby's SSR when it generates static files during build (<a href=""https://www.gatsbyjs.org/docs/debugging-html-builds/"" rel=""nofollow noreferrer"">https://www.gatsbyjs.org/docs/debugging-html-builds/</a>). </p>&#xA;&#xA;<p>I'm using safety checks (i.e. <code>typeof window !== 'undefined' ...</code>) recommended by Gatsby, and have no issues building, but the problem persists - namely, eventListener's that work fine locally are unresponsive in the build itself. The window object is properly defined in builds I've tested prior to integrating <code>gatsby-source-prismic-graphql</code> in gatsby-config.js, but is undefined as soon as I integrate it. </p>&#xA;&#xA;<p>Any ideas? I've reproduced the behaviour across multiple new projects (always reoccurring as soon as 'gatsby-source-prismic-graphql'/a Prismic repo is added in config), and am stumped</p>&#xA;",12642470,,,,2020-03-13 10:37:18,Prismic integration with Gatsby causing window to be undefined in build,<reactjs><graphql><gatsby><prismic.io>,0,1,0,2020-01-02 17:30:03
59571721,2,,48329511,2,,"<h3>Some background information that might help you anticipate similar issues in the future</h3>&#xA;&#xA;<p><code>gatsby-transformer-remark</code> and all other plugins that are dependant on GraphQL queries can only read newly added variables when the GraphQL queries are run.</p>&#xA;&#xA;<p>In Gatsby, GraphQL queries are run <strong>ONCE at startup of your development server</strong>. &#xA;The queries will not be refreshed if you alter the code while <code>gatsby develop</code> is still live. You can run your GraphQL queries again by restarting with <code>gatsby develop</code>. </p>&#xA;&#xA;<p>The Gatsby documentation has its own entry of the <a href=""https://www.gatsbyjs.org/docs/overview-of-the-gatsby-build-process/"" rel=""nofollow noreferrer"">Gatsby Build Process</a> that shows when exactly the queries are run:</p>&#xA;&#xA;<pre><code>success open and validate gatsby-configs - 0.051 s&#xA;// ...&#xA;success onPostBootstrap - 0.130 s&#xA;⠀&#xA;info bootstrap finished - 3.674 s&#xA;⠀&#xA;success run static queries - 0.057 s — 3/3 89.08 queries/second  // GraphQL queries here&#xA;success run page queries - 0.033 s — 5/5 347.81 queries/second   // GraphQL queries here&#xA;success start webpack server - 1.707 s — 1/1 6.06 pages/second&#xA;</code></pre>&#xA;&#xA;<p>As a rule of thumb that I learned from experience, if you are wondering why your code changes are not hot reloading</p>&#xA;&#xA;<ul>&#xA;<li>refresh the browser.  </li>&#xA;<li>If that doesn't work, restart <code>gatsby develop</code>.   </li>&#xA;<li>If that doesn't work, run <code>gatsby clean</code>, clear your browser's site cache, and run <code>gatsby develop</code>. </li>&#xA;<li>If that doesn't work you can be <em>almost</em> 100% certain you made a mistake.</li>&#xA;</ul>&#xA;",3689364,,,,2020-01-03 00:22:22,"",,0,0,0,2020-01-03 00:22:22
59576560,1,,,4,1067,"<p>I'm developing a Shopify private app with Node.js and React and using GraphQL api to make requests. Everything works fine when I run it locally and publish it with NGROK, but when I push the codes to Heroku, errors occur. It seems that there's something wrong with ApolloClient, but I can't figure it out.</p>&#xA;&#xA;<p>I set up ApolloClient like this (based on this tutorial <a href=""https://developers.shopify.com/tutorials/build-a-shopify-app-with-node-and-react/fetch-data-with-apollo"" rel=""nofollow noreferrer"">https://developers.shopify.com/tutorials/build-a-shopify-app-with-node-and-react/fetch-data-with-apollo</a>):</p>&#xA;&#xA;<pre><code>import ApolloClient from 'apollo-boost';&#xA;&#xA;const client = new ApolloClient({&#xA;    fetchOptions: {&#xA;        credentials: 'include'&#xA;    }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>When building, an error about <code>fetch</code> occurs so I modified the code (based on <a href=""https://stackoverflow.com/questions/50688998/using-apolloclient-with-node-js-fetch-is-not-found-globally-and-no-fetcher-pas"">Using ApolloClient with node.js. &quot;fetch is not found globally and no fetcher passed&quot;</a>):</p>&#xA;&#xA;<pre><code>import ApolloClient from 'apollo-boost';&#xA;import { fetch } from 'node-fetch'&#xA;&#xA;const client = new ApolloClient({&#xA;    fetch: fetch,&#xA;    fetchOptions: {&#xA;        credentials: 'include'&#xA;    }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>The build succeed, but my GraphQL call returns error <code>graphql error only absolute urls are supported</code>, so I tried to modified the code like this:</p>&#xA;&#xA;<pre><code>import ApolloClient from 'apollo-boost';&#xA;import { fetch } from 'node-fetch'&#xA;&#xA;const client = new ApolloClient({&#xA;    fetch: fetch,&#xA;    fetchOptions: {&#xA;        credentials: 'include'&#xA;    },&#xA;    uri: `https://${shopOrigin}/admin/api/2019-10/graphql.json`&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>The error now occurs to be <code>Network Error: Failed to Fetch</code> with a CORS issue.</p>&#xA;&#xA;<p>Could anyone help me resolved the problem? Please let me know if you need more information.</p>&#xA;",11473582,,11473582,2020-01-03 10:10:42,2020-05-09 21:28:20,Shopify app with GraphQL failed to work when developing on Heroku,<node.js><heroku><graphql><shopify><apollo-client>,1,1,0,2020-01-03 10:04:57
59589297,2,,59582142,7,,<p>Ok I was able to fix it by downgrading <code>graphql-core==3.0.1</code>  to <code>graphql-core&lt;3</code> (and all the depencencies).</p>&#xA;&#xA;<p>I must have missed the errors when performing <code>pip install -r requirements.txt</code></p>&#xA;,4502095,,,,2020-01-04 08:55:19,"",,0,1,0,2020-01-04 08:55:19
59605092,2,,59603560,0,,"<p><code>apollo-boost</code> does not support configuring the <code>link</code> or <code>cache</code> options for its client. <a href=""https://github.com/apollographql/apollo-client/blob/master/packages/apollo-boost/src/index.ts#L29-L46"" rel=""nofollow noreferrer"">These</a> are the only supported configuration options. If you're passing in some other parameter, you should be seeing a warning your console about it.</p>&#xA;&#xA;<p>If you need to customize your ApolloClient instance, you need to <a href=""https://www.apollographql.com/docs/react/migrating/boost-migration/"" rel=""nofollow noreferrer"">migrate to using the full client</a>.</p>&#xA;",6024220,,,,2020-01-05 23:23:59,"",,0,1,0,2020-01-05 23:23:59
59612091,1,,,0,2356,"<p><strong>My app's front-end is Reactjs and backend is Node js. I used express server and graphql-express server. I deployed my app successfully. But it starts with data is loading and then nothing shows. But if I run locally npm start then the heroku app is start working.</strong></p>&#xA;&#xA;<p><strong>This is the error I get it in browser</strong></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/tatN6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tatN6.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><strong>This is my server's package json file. If i run in terminal npm run dev. It opens my react js app.</strong></p>&#xA;&#xA;<pre><code>    {&#xA;  ""name"": ""backend"",&#xA;  ""version"": ""1.0.0"",&#xA;  ""description"": ""personish vol 2"",&#xA;  ""main"": ""server.js"",&#xA;  ""scripts"": {&#xA;    ""start"": ""node server.js"",&#xA;    ""server"": ""node server.js"",&#xA;    ""client"": ""npm start --prefix client"",&#xA;    ""dev"": ""concurrently \""npm run server\"" \""npm run client\""""&#xA;  },&#xA;  ""author"": ""Alak"",&#xA;  ""license"": ""ISC"",&#xA;  ""dependencies"": {&#xA;    ""concurrently"": ""^5.0.2"",&#xA;    ""cors"": ""^2.8.5"",&#xA;    ""express"": ""^4.17.1"",&#xA;    ""express-graphql"": ""^0.9.0"",&#xA;    ""graphql"": ""^14.5.8"",&#xA;    ""pg"": ""^7.15.1"",&#xA;    ""pg-hstore"": ""^2.3.3"",&#xA;    ""sequelize"": ""^5.21.3""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>This is my react's package json</strong></p>&#xA;&#xA;<pre><code>{&#xA;  ""name"": ""client"",&#xA;  ""version"": ""0.1.0"",&#xA;  ""private"": true,&#xA;  ""engines"": {&#xA;    ""node"": ""13.3.0"",&#xA;    ""npm"": ""6.13.0""&#xA;  },&#xA;  ""dependencies"": {&#xA;    ""@testing-library/jest-dom"": ""^4.2.4"",&#xA;    ""@testing-library/react"": ""^9.3.2"",&#xA;    ""@testing-library/user-event"": ""^7.1.2"",&#xA;    ""apollo-boost"": ""^0.4.7"",&#xA;    ""axios"": ""^0.19.0"",&#xA;    ""firebase"": ""^7.6.1"",&#xA;    ""graphql"": ""^14.5.8"",&#xA;    ""pg"": ""^7.15.1"",&#xA;    ""react"": ""^16.12.0"",&#xA;    ""react-apollo"": ""^3.1.3"",&#xA;    ""react-dom"": ""^16.12.0"",&#xA;    ""react-dropzone"": ""^10.2.1"",&#xA;    ""react-redux"": ""^7.1.3"",&#xA;    ""react-redux-firebase"": ""^3.0.5"",&#xA;    ""react-router-dom"": ""^5.1.2"",&#xA;    ""react-scripts"": ""3.3.0"",&#xA;    ""redux"": ""^4.0.4"",&#xA;    ""redux-firestore"": ""^0.11.0"",&#xA;    ""redux-thunk"": ""^2.3.0""&#xA;  },&#xA;  ""scripts"": {&#xA;    ""start"": ""react-scripts start"",&#xA;    ""build"": ""react-scripts build"",&#xA;    ""test"": ""react-scripts test"",&#xA;    ""eject"": ""react-scripts eject""&#xA;  },&#xA;  ""eslintConfig"": {&#xA;    ""extends"": ""react-app""&#xA;  },&#xA;  ""browserslist"": {&#xA;    ""production"": [&#xA;      ""&gt;0.2%"",&#xA;      ""not dead"",&#xA;      ""not op_mini all""&#xA;    ],&#xA;    ""development"": [&#xA;      ""last 1 chrome version"",&#xA;      ""last 1 firefox version"",&#xA;      ""last 1 safari version""&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>This is my express and graphql-express server.</strong></p>&#xA;&#xA;<pre><code>const express = require(""express"");&#xA;const app = express();&#xA;&#xA;const graphqlHTTP = require(""express-graphql"");&#xA;const schema = require(""./schema"");&#xA;const cors = require(""cors""); &#xA;const path = require(""path"");&#xA;&#xA;app.use(cors());&#xA;&#xA;app.use(&#xA;  ""/graphql"",&#xA;  graphqlHTTP({&#xA;    schema,&#xA;    pretty: true,&#xA;    graphiql: true&#xA;  })&#xA;);&#xA;app.use(express.static(path.join(__dirname, ""build"")));&#xA;&#xA;app.get(""/*"", (req, res) =&gt; {&#xA;  res.sendFile(path.join(__dirname, ""build"", ""index.html""));&#xA;});&#xA;&#xA;const port = process.env.PORT || 8081;&#xA;app.listen(port, () =&gt;&#xA;  console.log(`✅  Example app listening on port ${port}!`)&#xA;);&#xA;</code></pre>&#xA;&#xA;<p><strong>This is my react's app file. Where I use Apollo boost to connect with react app and node js app. I think the error comes from here, dont know how to fix it</strong></p>&#xA;&#xA;<pre><code>import React from ""react"";&#xA;import { ApolloClient, HttpLink, InMemoryCache } from ""apollo-boost"";&#xA;import { ApolloProvider } from ""react-apollo"";&#xA;const client = new ApolloClient({&#xA;  link: new HttpLink({&#xA;    uri: ""http://localhost:8081/graphql""&#xA;  }),&#xA;  cache: new InMemoryCache()&#xA;});&#xA;</code></pre>&#xA;&#xA;<p><strong>This is my heroku app</strong></p>&#xA;&#xA;<p><a href=""https://databaseapp2020.herokuapp.com/"" rel=""nofollow noreferrer"">https://databaseapp2020.herokuapp.com/</a></p>&#xA;",12494839,,12494839,2020-01-06 13:17:04,2020-01-07 06:41:24,Deployed my app on heroku but got error: Failed to load resource: net::ERR_CONNECTION_REFUSED,<node.js><reactjs><express><heroku><express-graphql>,1,2,0,2020-01-06 12:24:45
59621245,2,,59620803,13,,"<p>Turns out it was <a href=""https://github.com/jaydenseric/graphql-upload/issues/171"" rel=""noreferrer"">this</a> bug in <code>graphql-upload</code>. Downgraded to node 12 and it's fixed (solution listed there did not help me)</p>&#xA;",8676269,,,,2020-01-07 01:55:43,"",,0,2,0,2020-01-07 01:55:43
59623402,2,,59612091,0,,"<p>your heroku dyno/app would have a name, you would use that to hit your graphql from say a graphiql playground on your laptop, or your react-app... if your heroku app was actually named databaseapp2020 and running then you would use the following assuming your cors was setup properly in the dyno environment variables</p>&#xA;&#xA;<p><a href=""https://databaseapp2020.herokuapp.com/graphql"" rel=""nofollow noreferrer"">https://databaseapp2020.herokuapp.com/graphql</a></p>&#xA;",9876522,,,,2020-01-07 06:41:24,"",,0,2,0,2020-01-07 06:41:24
59626331,1,,,1,559,"<p>I am trying to use the ShopifyAPI::GraphQL from the shopify_api gem, which seemed to work fine in my local environment, but I am having problems in my Heroku environment.</p>&#xA;&#xA;<p>The first error seemed to be related to a bug in the shopify_api gem and was fixed by setting the api version i.e. ShopifyAPI::Base.api_version = ""2019-10"" (even though it was already set in the config/initializers/shopify_app.rb with config.api_version = ""2019-10"").</p>&#xA;&#xA;<p>Moving on I get the following error when starting the server in the Heroku environment:</p>&#xA;&#xA;<pre><code>NoMethodError: undefined method `path=' for nil:NilClass&#xA;info   /app/vendor/bundle/ruby/2.5.0/gems/shopify_api-8.1.0/lib/shopify_api/resources/graphql.rb:10:in `initialize'&#xA;</code></pre>&#xA;&#xA;<p>Looking at the lines in the graphql.rb file from shopify_api that fails:</p>&#xA;&#xA;<pre><code>uri = Base.site.dup #line 9&#xA;uri.path = Base.api_version.construct_graphql_path #line 10&#xA;</code></pre>&#xA;&#xA;<p>it seems to be caused by the fact that Base.site is nil, which makes sense as there is no session at the time the server is started.</p>&#xA;&#xA;<p>As far as I can see, the graphql queries need to be constants, and as they refer the graphql client, I instantiate the graphql client as a class parameter:</p>&#xA;&#xA;<pre><code>@@client = ShopifyAPI::GraphQL.new&#xA;</code></pre>&#xA;&#xA;<p>The above line seem to be initialized during server start (I am very new to rails), and as mentioned the error occurs because there is no session and hence no site at the time.</p>&#xA;&#xA;<p>So I must be using the graphql component wrong. My question is, how am I supposed to use the class ShopifyAPI::GraphQL? Where should I e.g. place the ShopifyAPI::GraphQL.new code?</p>&#xA;&#xA;<p>Or to make the question more general - the graphql-client requires the queries and thus the graphql client ShopifyAPI::GraphQL to be defined as constants. How do I prevent the constants from being initialized during server startup, as the there is no session at server startup which is required when initializing the graphql client?</p>&#xA;&#xA;<p>Thanks,&#xA;-Louise</p>&#xA;",5930834,,5930834,2020-01-07 15:40:21,2020-01-07 15:40:21,How is ShopifyAPI::GraphQL from the shopify_api gem supposed to be used? (undefined method `path=' ),<ruby-on-rails><ruby><graphql><shopify><shopify-api>,0,1,0,2020-01-07 10:13:33
59648039,2,,59324729,0,,"<p>The short answer is you'll have to use something like NGINX <a href=""https://docs.nginx.com/nginx/admin-guide/web-server/compression/"" rel=""nofollow noreferrer"">https://docs.nginx.com/nginx/admin-guide/web-server/compression/</a></p>&#xA;",1449097,,,,2020-01-08 14:31:09,"",,0,0,0,2020-01-08 14:31:09
59702940,2,,59698546,1,,"<p>Haven't used this module before, but it should be like any other async action you want to perform before page rendering in Nuxt.</p>&#xA;&#xA;<p>It only depends if you want to pre-fill the store:<br>&#xA;<a href=""https://github.com/nuxt-community/apollo-module#nuxtserverinit"" rel=""nofollow noreferrer"">https://github.com/nuxt-community/apollo-module#nuxtserverinit</a><br>&#xA;<a href=""https://nuxtjs.org/guide/vuex-store/#the-nuxtserverinit-action"" rel=""nofollow noreferrer"">https://nuxtjs.org/guide/vuex-store/#the-nuxtserverinit-action</a></p>&#xA;&#xA;<p>or only one page:<br>&#xA;<a href=""https://github.com/nuxt-community/apollo-module#asyncdatafetch-method-of-page-component"" rel=""nofollow noreferrer"">https://github.com/nuxt-community/apollo-module#asyncdatafetch-method-of-page-component</a><br>&#xA;<a href=""https://nuxtjs.org/guide/async-data"" rel=""nofollow noreferrer"">https://nuxtjs.org/guide/async-data</a></p>&#xA;&#xA;<p>You can use async/await or promises if you have more than one request before page should be rendered.</p>&#xA;&#xA;<p>When async actions are finished, Nuxt starts rendering the page. This works for SSR and if you navigate to pages on the client (nuxtServerInit will only fire once when real request is made, not when navigating on client side).</p>&#xA;&#xA;<p>Side note: beforeRouteEnter is usually used, to validate params and check if the route is allowed.</p>&#xA;",4239703,,,,2020-01-12 10:35:06,"",,0,0,0,2020-01-12 10:35:06
59727364,2,,59402522,0,,"<p>I had the same problem and was able to solve it. I had a missing peer dependency. </p>&#xA;&#xA;<p>Your package.json is not shown so I am not sure if your problem is the same as mine but I was able to resolve the problem by installing ""apollo-client"".</p>&#xA;&#xA;<p>I am using AWS Appsync for my client and hence did not have apollo-client installed.</p>&#xA;",12699260,,,,2020-01-14 04:02:39,"",,0,0,0,2020-01-14 04:02:39
59745474,2,,59745257,2,,"<p>This is a way to providing a custom implementation of <code>util.inspect</code> as shown in the <a href=""https://nodejs.org/docs/latest-v4.x/api/util.html#util_custom_inspect_function_on_objects"" rel=""nofollow noreferrer"">docs</a>. What's not really made clear in the docs is that this also impacts how <code>console.log</code> behaves:</p>&#xA;&#xA;<pre><code>class Foo {}&#xA;Foo.prototype.inspect = () =&gt; 'FOO!'&#xA;console.log(new Foo()) // prints FOO!&#xA;</code></pre>&#xA;&#xA;<p>However, this method has been <a href=""https://nodejs.org/docs/latest-v8.x/api/deprecations.html#deprecations_dep0079_custom_inspection_function_on_objects_via_inspect"" rel=""nofollow noreferrer"">deprecated</a> in favor of using a symbol:</p>&#xA;&#xA;<pre><code>const { inspect } = require('util')&#xA;class Foo {}&#xA;Foo.prototype[inspect.custom] = () =&gt; 'FOO!'&#xA;console.log(new Foo()) // prints FOO!&#xA;</code></pre>&#xA;",6024220,,6024220,2020-01-15 05:43:20,2020-01-15 05:43:20,"",,0,5,0,2020-01-15 05:14:16
59745812,2,,59608947,9,,"<p>I think this problem caused by different versions between <code>apollo-server-express</code> and <code>apollo-server-testing</code>.&#xA;I've updated to apollo-server-express and apollo-server-testing to 2.9.16. Then, this type error has disappeared.&#xA;Please try it.</p>&#xA;",12715467,,,,2020-01-15 05:56:01,"",,0,1,0,2020-01-15 05:56:01
59778209,1,60676365,,1,224,"<p>Recently I've discovered some weird stuff in Chrome Audits tool, and I have no idea what is going on.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/EA6LD.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EA6LD.png"" alt=""Datacamp in Chrome Audits tool""></a></p>&#xA;&#xA;<p>Does anyone know what <strong>Datacamp</strong> stands for?</p>&#xA;",5654440,,,,2020-03-13 19:38:13,Chrome Audits: Datacamp in third-party code,<reactjs><graphql><apollo><styled-components><pagespeed>,1,2,0,2020-01-16 21:42:04
59801639,2,,59726381,2,,"<p>This was a bug and has been fixed in v4.8.1 <a href=""https://github.com/nuwave/lighthouse/releases/tag/v4.8.1"" rel=""nofollow noreferrer"">https://github.com/nuwave/lighthouse/releases/tag/v4.8.1</a></p>&#xA;",1844650,,,,2020-01-18 14:43:06,"",,0,0,0,2020-01-18 14:43:06
59841331,1,,,0,331,"<p>I apologise if this question is considered answered, however it seems that in my specific circumstances other solutions haven't managed to solve my issue so far. I have a django-vue project which uses GraphQL to communicate between vue and django.</p>&#xA;&#xA;<p>I am trying to serve my web app with uwsgi and NGINX, and the Django portion works fine, however there seems to be some issues when looking for the Vue /dist/ static files e.g. get <a href=""http://ip.ip.ip.ip:8000/js/app.js"" rel=""nofollow noreferrer"">http://ip.ip.ip.ip:8000/js/app.js</a> ERR_ABORTED 404, same goes for CSS for the app and chunk-vendors.</p>&#xA;&#xA;<p>This is unfortunately my first deployment so my understanding is fairly shaky, however it seems pretty clear that NGINX doesn't understand the path to the dist folder correctly, but the variations I've tried so far haven't managed to get it to work.</p>&#xA;&#xA;<p>mysite_nginx.conf:</p>&#xA;&#xA;<pre><code># hubdev_nginx.conf&#xA;&#xA;# the upstream component nginx needs to connect to&#xA;upstream django {&#xA;    server unix:///srv/hub/hub.sock;&#xA;#   server 127.0.0.1:8001;&#xA;}&#xA;&#xA;# configuration for the server&#xA;server {&#xA;    # the port your site will be served on&#xA;    listen 8000;&#xA;    # the domain name it will serve for&#xA;    server_name ip.ip.ip.ip;&#xA;    charset utf-8&#xA;&#xA;    root    /srv/hub/frontend/dist/;&#xA;    index   index.html;&#xA;&#xA;    # max upload size&#xA;    client_max_body_size    75M;    # 'Adjust to taste'&#xA;&#xA;    # Django media&#xA;    # none yet&#xA;&#xA;    # Django static - I've tried both of these&#xA;    location /static {&#xA;    alias /srv/hub/staticfiles;&#xA;#   alias /srv/hub/frontend/dist;&#xA;    }&#xA;&#xA;    # send all non-media requests to the Django server&#xA;    location / {&#xA;        uwsgi_pass  django;&#xA;        include     /srv/hub/uwsgi_params;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I've looked at this question which seems to be similar: <a href=""https://stackoverflow.com/questions/58220698/serving-django-and-vue-with-nginx"">Serving Django and Vue with Nginx</a></p>&#xA;&#xA;<p>but this section of one of the answers doesn't make much sense in terms of how you combine both the paths in one...</p>&#xA;&#xA;<pre><code>location /static {&#xA;        autoindex on;&#xA;        alias *path to you static files both django static files and vue related static files*;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>urlpatterns in urls.py:</p>&#xA;&#xA;<pre><code>url(r'^static/(?P&lt;path&gt;.*)$', serve,&#xA;        {'document_root': settings.STATIC_ROOT}),&#xA;    url(r'^dmedia/(?P&lt;path&gt;.*)$', serve,&#xA;        {'document_root': settings.MEDIA_ROOT}),&#xA;&#xA;    url(r'^media/(?P&lt;path&gt;.*)$', serve,&#xA;        {'document_root': os.path.join(settings.VUE_ROOT, 'media')}),&#xA;    url(r'^img/(?P&lt;path&gt;.*)$', serve,&#xA;        {'document_root': os.path.join(settings.VUE_ROOT, 'img')}),&#xA;    url(r'^js/(?P&lt;path&gt;.*)$', serve,&#xA;        {'document_root': os.path.join(settings.VUE_ROOT, 'js')}),&#xA;    url(r'^css/(?P&lt;path&gt;.*)$', serve,&#xA;        {'document_root': os.path.join(settings.VUE_ROOT, 'css')}),&#xA;    url(r'^fonts/(?P&lt;path&gt;.*)$', serve,&#xA;        {'document_root': os.path.join(settings.VUE_ROOT, 'fonts')}),&#xA;    url(r'^graphql', csrf_exempt(GraphQLView.as_view(graphiql=True))),&#xA;</code></pre>&#xA;&#xA;<p>Where VUE_ROOT is defined in the prod settings to be ""\frontend\dist"" - this works fine on my windows dev environment.</p>&#xA;&#xA;<p>Any help is greatly appreciated.</p>&#xA;",11863470,,,,2020-01-21 15:56:44,Deploying Vue-Django-graphene on NGINX,<django><vue.js><nginx><graphql>,1,0,0,2020-01-21 12:37:11
59848000,2,,49883550,1,,<p>2020 Answer: </p>&#xA;&#xA;<pre><code>implementation 'com.graphql-java-kickstart:graphiql-spring-boot-starter:5.10.0'&#xA;implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:5.10.0'&#xA;implementation 'com.graphql-java-kickstart:graphql-java-tools:5.6.1'&#xA;</code></pre>&#xA;&#xA;<p>Was missing those dependencies</p>&#xA;,1502439,,,,2020-01-21 19:30:18,"",,0,0,0,2020-01-21 19:30:18
59855263,2,,59851864,0,,"<blockquote>&#xA;  <p>My question is: on production when someone share that url on facebook&#xA;  or things like that the metatags on that url (domain.com/my-post) will&#xA;  be the empty ones (before query looks for available slugs) or after&#xA;  the metatags and contents was full filled?  </p>&#xA;</blockquote>&#xA;&#xA;<p>It depends on where you make the request for the slug.&#xA;If you make the request server side (ex. inside <code>getInitialProps</code>) pages will wait  to fetch data before pre-rendering, that means that when the page will render, it will render with metatags.</p>&#xA;&#xA;<p>If you are following the with-apollo example it should <a href=""https://github.com/zeit/next.js/blob/7bd4f4f3bf7696ab0da666105e2220447e1486ef/examples/with-apollo/lib/apollo.js#L45"" rel=""nofollow noreferrer"">render server side</a> obviously only if you are using your HOC in <code>pages</code> else if you are importing your HOC deeper in your component Tree, <code>getInitialProps</code> will be ignored (since it work only in pages)</p>&#xA;",2418529,,,,2020-01-22 08:15:14,"",,0,0,0,2020-01-22 08:15:14
59905064,2,,59903983,1,,"<p>It's hard to know for sure without seeing your full error, including the trace, but I suspect you're not importing <code>from</code> correctly. The <code>apollo-link</code> module does export a class named <code>ApolloLink</code> but this class does not have a static method with the name <code>from</code>. Instead, you're looking for another named export from the same module:</p>&#xA;&#xA;<pre><code>import { from } from 'apollo-link'&#xA;</code></pre>&#xA;&#xA;<p>Also please note that the <code>react-apollo-hooks</code> module is now deprecated because the hooks API is now part of <code>react-apollo</code>. You should upgrade <code>react-apollo</code> and utilize only the single ApolloProvider for both hooks and any legacy components.</p>&#xA;&#xA;<p>EDIT:</p>&#xA;&#xA;<p>Looking at your error, the issue is inside the <code>GamePage</code> constructor (notice the first line is <code>at new GamePage</code>). Again, there's an import issue here because <code>graphql-tag</code> doesn't have a named import named <code>gql</code>. That module only has a default export as shown in the docs:</p>&#xA;&#xA;<pre><code>import gql from 'graphql-tag'&#xA;</code></pre>&#xA;",6024220,,6024220,2020-01-25 13:13:36,2020-01-25 13:13:36,"",,0,6,0,2020-01-24 23:49:40
59923470,1,,,2,1617,"<p>I have a Gatsby site that retrieves data from a Wordpress Rest endpoint. </p>&#xA;&#xA;<p>I am able to run <code>gatsby develop</code> locally on my laptop, but when I run <code>gatsby build</code> on my server to deploy my site, the process crashes and I get the following output with an error at the end:</p>&#xA;&#xA;<pre><code>success open and validate gatsby-configs - 0.085s&#xA;success load plugins - 0.523s&#xA;success onPreInit - 0.005s&#xA;success delete html and css files from previous builds - 0.021s&#xA;info One or more of your plugins have changed since the last time you ran Gatsby. As&#xA;a precaution, we're deleting your site's cache to ensure there's no stale data.&#xA;success initialize cache - 0.022s&#xA;success copy gatsby files - 0.040s&#xA;success onPreBootstrap - 0.014s&#xA;success createSchemaCustomization - 0.009s&#xA; -&gt; wordpress__acf_options fetched : 1&#xA; -&gt; wordpress__acf_v2 fetched : 1&#xA; -&gt; wordpress__wp_api_menus_v2 fetched : 1&#xA; -&gt; wordpress__wp_api_menus_menus_items fetched : 1&#xA; -&gt; wordpress__wp_api_menus_menus fetched : 1&#xA; -&gt; wordpress__wp_api_menus_menu_locations fetched : 1&#xA; -&gt; wordpress__wp_v2 fetched : 1&#xA; -&gt; wordpress__POST fetched : 1&#xA; -&gt; wordpress__PAGE fetched : 7&#xA; -&gt; wordpress__wp_media fetched : 0&#xA; -&gt; wordpress__wp_blocks fetched : 0&#xA; -&gt; wordpress__wp_types fetched : 1&#xA; -&gt; wordpress__wp_statuses fetched : 1&#xA; -&gt; wordpress__wp_taxonomies fetched : 1&#xA; -&gt; wordpress__CATEGORY fetched : 1&#xA; -&gt; wordpress__TAG fetched : 0&#xA; -&gt; wordpress__wp_users fetched : 1&#xA; -&gt; wordpress__wp_comments fetched : 1&#xA; -&gt; wordpress__wp_search fetched : 8&#xA;&#xA;Path: /wp-json/wp/v2/themes?per_page=100&amp;page=1&#xA;The server response was ""400 Bad Request""&#xA;Inner exception message: ""Missing parameter(s): status""&#xA;success source and transform nodes - 3.437s&#xA;warn Plugin `gatsby-source-filesystem` tried to define the GraphQL type `File`, which has already been defined by the plugin `null`.&#xA;warn Plugin `gatsby-source-filesystem` tried to define the GraphQL type `File`, which has already been defined by the plugin `null`.&#xA;warn Plugin `gatsby-source-filesystem` tried to define the GraphQL type `File`, which has already been defined by the plugin `null`.&#xA;success building schema - 0.864s&#xA;success createPages - 0.060s&#xA;success createPagesStatefully - 0.080s&#xA;success onPreExtractQueries - 0.003s&#xA;success update schema - 0.048s&#xA;success extract queries from components - 0.384s&#xA;success write out requires - 0.006s&#xA;success write out redirect data - 0.005s&#xA;success onPostBootstrap - 0.004s&#xA;⠀&#xA;info bootstrap finished - 9.141 s&#xA;⠀&#xA;success Building production JavaScript and CSS bundles - 9.280s&#xA;success run queries - 9.547s - 10/10 1.05/s&#xA;failed Building static HTML for pages - 0.882s&#xA;&#xA; ERROR #95313&#xA;&#xA;Building static HTML failed for path ""/join-us""&#xA;&#xA;See our docs page for more info on this error: https://gatsby.dev/debug-html&#xA;&#xA;&#xA;  10 | const PageTemplate = ({ data }) =&gt; (&#xA;  11 |     &lt;Layout&gt;&#xA;&gt; 12 |         { renderBlocks(data.currentPage.acf.page_blocks, data) }&#xA;     |                                             ^&#xA;  13 |     &lt;/Layout&gt;&#xA;  14 | );&#xA;  15 |&#xA;&#xA;&#xA;  WebpackError: TypeError: Cannot read property 'page_blocks' of null&#xA;&#xA;  - page.js:12 PageTemplate&#xA;    src/templates/page.js:12:45&#xA;</code></pre>&#xA;&#xA;<p>The issue seems to be occurring in the output of a GraphQL query that provides me with the data object. But this doesn't happen in my local setup, and it seems like the GraphQL connection is working and fetching data earlier in the error output. If there were issues with my query or something else then why would the local version be working?</p>&#xA;&#xA;<p>This is the file where the issue is happening:</p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import { graphql } from 'gatsby';&#xA;&#xA;import renderBlocks from '../js/pageBlockRender';&#xA;&#xA;import Layout from '../components/global/Layout';&#xA;&#xA;import '../components/sass/blocks.scss';&#xA;&#xA;const PageTemplate = ({ data }) =&gt; (&#xA;    &lt;Layout&gt;&#xA;        { renderBlocks(data.currentPage.acf.page_blocks, data) }&#xA;    &lt;/Layout&gt;&#xA;);&#xA;&#xA;export default PageTemplate;&#xA;&#xA;export const pageQuery = graphql`&#xA;    query ($id: String!) {&#xA;        currentPage: wordpressPage(id: {eq: $id}) {&#xA;            title&#xA;            id&#xA;            parent {&#xA;                id&#xA;            }&#xA;            template&#xA;            acf {&#xA;                page_blocks {&#xA;                block_type {&#xA;                    acf_fc_layout&#xA;                    cs_title&#xA;                    cs_text&#xA;                    dl_style&#xA;                    hh_background_video&#xA;                    tpc_thought_piece {&#xA;                        post_title&#xA;                        post_excerpt&#xA;                    }    &#xA;                }&#xA;                wordpress_id&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>I'm using the latest versions of React and React-dom, and per <a href=""https://github.com/gatsbyjs/gatsby/issues/10043"" rel=""nofollow noreferrer"">this</a> post I have also tried installing all peer dependencies in node. I've also tried deleting my .cache folder to no avail.</p>&#xA;&#xA;<p>What could be different about <code>gatsby develop</code> and <code>gatsby build</code> that creates this issue?</p>&#xA;&#xA;<p>Could it be the differences between the environment in which the dev and production environment are? </p>&#xA;&#xA;<p><strong>Dev Environment</strong></p>&#xA;&#xA;<pre><code>  System:&#xA;    OS: macOS High Sierra 10.13.6&#xA;    CPU: (4) x64 Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz&#xA;    Shell: 3.2.57 - /bin/bash&#xA;  Binaries:&#xA;    Node: 11.10.0 - ~/.nvm/versions/node/v11.10.0/bin/node&#xA;    Yarn: 1.16.0 - /usr/local/bin/yarn&#xA;    npm: 6.7.0 - ~/.nvm/versions/node/v11.10.0/bin/npm&#xA;  Languages:&#xA;    Python: 2.7.10 - /usr/bin/python&#xA;  Browsers:&#xA;    Chrome: 79.0.3945.130&#xA;    Firefox: 58.0.1&#xA;    Safari: 11.1.2&#xA;  npmPackages:&#xA;    gatsby: ^2.19.5 =&gt; 2.19.5&#xA;    gatsby-image: ^2.2.38 =&gt; 2.2.38&#xA;    gatsby-plugin-react-helmet: ^3.1.18 =&gt; 3.1.18&#xA;    gatsby-plugin-sass: ^2.1.26 =&gt; 2.1.26&#xA;    gatsby-plugin-sharp: ^2.3.13 =&gt; 2.3.13&#xA;    gatsby-plugin-styled-components: ^3.1.14 =&gt; 3.1.14&#xA;    gatsby-source-wordpress: ^3.1.51 =&gt; 3.1.51&#xA;    gatsby-transformer-sharp: ^2.3.12 =&gt; 2.3.12&#xA;  npmGlobalPackages:&#xA;    gatsby-cli: 2.8.16&#xA;</code></pre>&#xA;&#xA;<p><strong>Prod Environment:</strong> </p>&#xA;&#xA;<pre><code>System:&#xA;    OS: Linux 4.15 Ubuntu 18.04.3 LTS (Bionic Beaver)&#xA;    CPU: (4) x64 Intel Xeon Processor (Skylake, IBRS)&#xA;    Shell: 4.4.20 - /bin/bash&#xA;  Binaries:&#xA;    Node: 11.10.0 - ~/.nvm/versions/node/v11.10.0/bin/node&#xA;    npm: 6.7.0 - ~/.nvm/versions/node/v11.10.0/bin/npm&#xA;  Languages:&#xA;    Python: 2.7.17 - /usr/bin/python&#xA;  npmPackages:&#xA;    gatsby: ^2.19.5 =&gt; 2.19.5&#xA;    gatsby-image: ^2.2.38 =&gt; 2.2.38&#xA;    gatsby-plugin-react-helmet: ^3.1.18 =&gt; 3.1.18&#xA;    gatsby-plugin-sass: ^2.1.26 =&gt; 2.1.26&#xA;    gatsby-plugin-sharp: ^2.3.13 =&gt; 2.3.13&#xA;    gatsby-plugin-styled-components: ^3.1.14 =&gt; 3.1.14&#xA;    gatsby-source-wordpress: ^3.1.51 =&gt; 3.1.51&#xA;    gatsby-transformer-sharp: ^2.3.12 =&gt; 2.3.12&#xA;  npmGlobalPackages:&#xA;    gatsby-cli: 2.8.27&#xA;</code></pre>&#xA;&#xA;<p>Here is my <code>gatsby-config.js</code></p>&#xA;&#xA;<pre><code>/**&#xA; * Configure your Gatsby site with this file.&#xA; *&#xA; * See: https://www.gatsbyjs.org/docs/gatsby-config/&#xA; */&#xA;&#xA;module.exports = {&#xA;  siteMetadata: {&#xA;    title: ""{PRIVATE INFO CAN'T MAKE PUBLIC}"",&#xA;    description: ""{PRIVATE INFO CAN'T MAKE PUBLIC}"",&#xA;    author: `{PRIVATE INFO CAN'T MAKE PUBLIC}`&#xA;  },&#xA;  plugins: [&#xA;    `gatsby-plugin-react-helmet`,&#xA;    {&#xA;      resolve: `gatsby-source-filesystem`,&#xA;      options: {&#xA;        name: `pages`,&#xA;        path: `${__dirname}/src/pages/`,&#xA;      },&#xA;    },&#xA;    {&#xA;      resolve: `gatsby-source-filesystem`,&#xA;      options: {&#xA;        name: `data`,&#xA;        path: `${__dirname}/src/data/`,&#xA;        ignore: [`**/\.*`], // ignore files starting with a dot&#xA;      },&#xA;    },&#xA;    'gatsby-plugin-styled-components',&#xA;&#xA;     /** Comment this ↓ out to connect Gatsby to the staging site **/&#xA;    {&#xA;      resolve: 'gatsby-source-wordpress',&#xA;      options: {&#xA;        excludedRoutes: ['/wp/v2/users/**', '/wp/v2/settings*'],&#xA;        baseUrl: '{PRIVATE INFO CAN'T MAKE PUBLIC}/',&#xA;        auth: {&#xA;          htaccess_user: ""{PRIVATE INFO CAN'T MAKE PUBLIC}"",&#xA;          htaccess_pass: ""{PRIVATE INFO CAN'T MAKE PUBLIC}"",&#xA;        },  &#xA;        protocol: 'https',&#xA;        hostingWPCOM: false,&#xA;        useACF: true,&#xA;        searchAndReplaceContentUrls: {&#xA;          sourceUrl: '{PRIVATE INFO CAN'T MAKE PUBLIC}/',&#xA;          replacementUrl: '',&#xA;        }, &#xA;      },&#xA;    }, &#xA;    `gatsby-plugin-sass`,&#xA;    `gatsby-transformer-sharp`,&#xA;    `gatsby-plugin-sharp`,&#xA;    {&#xA;      resolve: `gatsby-source-filesystem`,&#xA;      options: {&#xA;        path: `${__dirname}/src/data/`,&#xA;      },&#xA;    },&#xA;  ],&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is <code>package.json</code></p>&#xA;&#xA;<pre><code>{&#xA;  ""name"": ""gatsby-starter-hello-world"",&#xA;  ""private"": true,&#xA;  ""description"": ""A simplified bare-bones starter for Gatsby"",&#xA;  ""version"": ""0.1.0"",&#xA;  ""license"": ""MIT"",&#xA;  ""scripts"": {&#xA;    ""build"": ""gatsby build"",&#xA;    ""develop"": ""gatsby develop"",&#xA;    ""format"": ""prettier --write \""**/*.{js,jsx,json,md}\"""",&#xA;    ""start"": ""npm run develop"",&#xA;    ""serve"": ""gatsby serve"",&#xA;    ""clean"": ""gatsby clean"",&#xA;    ""test"": ""echo \""Write tests! -&gt; https://gatsby.dev/unit-testing\"" &amp;&amp; exit 1""&#xA;  },&#xA;  ""dependencies"": {&#xA;    ""babel-plugin-styled-components"": ""^1.10.6"",&#xA;    ""bootstrap"": ""^4.4.1"",&#xA;    ""gatsby"": ""^2.19.5"",&#xA;    ""gatsby-image"": ""^2.2.38"",&#xA;    ""gatsby-plugin-react-helmet"": ""^3.1.18"",&#xA;    ""gatsby-plugin-sass"": ""^2.1.26"",&#xA;    ""gatsby-plugin-sharp"": ""^2.3.13"",&#xA;    ""gatsby-plugin-styled-components"": ""^3.1.14"",&#xA;    ""gatsby-source-wordpress"": ""^3.1.51"",&#xA;    ""gatsby-transformer-sharp"": ""^2.3.12"",&#xA;    ""jquery"": ""^3.4.1"",&#xA;    ""node-sass"": ""^4.13.1"",&#xA;    ""popper.js"": ""^1.16.1"",&#xA;    ""react"": ""^16.12.0"",&#xA;    ""react-dom"": ""^16.12.0"",&#xA;    ""react-helmet"": ""^5.2.1"",&#xA;    ""sharp"": ""^0.24.0"",&#xA;    ""slash"": ""^3.0.0"",&#xA;    ""styled-components"": ""^4.4.1"",&#xA;    ""typescript"": ""^3.7.5"",&#xA;    ""utf-8-validate"": ""^5.0.2""&#xA;  },&#xA;  ""devDependencies"": {&#xA;    ""popper"": ""^1.0.1"",&#xA;    ""prettier"": ""^1.19.1""&#xA;  },&#xA;  ""repository"": {&#xA;    ""type"": ""git"",&#xA;    ""url"": ""https://github.com/gatsbyjs/gatsby-starter-hello-world""&#xA;  },&#xA;  ""bugs"": {&#xA;    ""url"": ""https://github.com/gatsbyjs/gatsby/issues""&#xA;  },&#xA;  ""optionalDependencies"": {&#xA;    ""bufferutil"": ""^4.0.1""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any clues? </p>&#xA;",2030942,,,,2020-01-26 22:50:14,"Gatsby build fails with ""Cannot read property 'page_blocks' of null""",<npm><graphql><gatsby>,0,3,0,2020-01-26 22:50:14
59932056,2,,59895803,0,,"<p>First of all please check your prisma and prisma cli version and update if possible, since there was a bug in a previous version of the prisma cli (see <a href=""https://github.com/prisma/prisma/issues/4215"" rel=""nofollow noreferrer"">https://github.com/prisma/prisma/issues/4215</a>). </p>&#xA;&#xA;<p>After that please verify that the endpoint specified in the prisma.yml is indeed accessible and the port is forwarded correctly. Please test if the problem persists when changing endpoint to <code>localhost</code> or <code>127.0.0.1</code>.</p>&#xA;&#xA;<p>Lastly you can try to set the <code>managementApiSecret</code> in the docker config and add <code>PRISMA_MANAGEMENT_API_SECRET</code> to the env file.</p>&#xA;",1398640,,,,2020-01-27 13:23:55,"",,0,0,0,2020-01-27 13:23:55
59933782,1,,,1,659,"<p>I just created a KeystoneJS using <code>yarn create keystone-app my-app</code>.</p>&#xA;&#xA;<p>When I try to run it using <code>yarn dev</code> and browse to it I get the following error:</p>&#xA;&#xA;<pre><code>Error: Cannot use GraphQLSchema ""[object GraphQLSchema]"" from another module or realm.&#xA;&#xA;Ensure that there is only one instance of ""graphql"" in the node_modules&#xA;directory. If different versions of ""graphql"" are the dependencies of other&#xA;relied on modules, use ""resolutions"" to ensure only one version is installed.&#xA;&#xA;https://yarnpkg.com/en/docs/selective-version-resolutions&#xA;&#xA;Duplicate ""graphql"" modules cannot be used at the same time since different&#xA;versions may have different capabilities and behavior. The data from one&#xA;version used in the function from another could produce confusing and&#xA;spurious results.&#xA;    at instanceOf (/my/home/path/my-first-ks-app/node_modules/@keystonejs/keystone/node_modules/graphql/jsutils/instanceOf.js:28:13)&#xA;    at isSchema (/my/home/path/my-first-ks-app/node_modules/@keystonejs/keystone/node_modules/graphql/type/schema.js:36:34)&#xA;    at assertSchema (/my/home/path/my-first-ks-app/node_modules/@keystonejs/keystone/node_modules/graphql/type/schema.js:40:8)&#xA;    at validateSchema (/my/home/path/my-first-ks-app/node_modules/@keystonejs/keystone/node_modules/graphql/type/validate.js:44:28)&#xA;    at graphqlImpl (/my/home/path/my-first-ks-app/node_modules/@keystonejs/keystone/node_modules/graphql/graphql.js:79:62)&#xA;    at /my/home/path/my-first-ks-app/node_modules/@keystonejs/keystone/node_modules/graphql/graphql.js:28:59&#xA;    at new Promise (&lt;anonymous&gt;)&#xA;    at graphql (/my/home/path/my-first-ks-app/node_modules/@keystonejs/keystone/node_modules/graphql/graphql.js:26:10)&#xA;    at _graphQLQuery.&lt;computed&gt; (/my/home/path/my-first-ks-app/node_modules/@keystonejs/keystone/lib/Keystone/index.js:477:7)&#xA;    at Keystone.executeQuery (/my/home/path/my-first-ks-app/node_modules/@keystonejs/keystone/lib/Keystone/index.js:252:14)&#xA;    at Object.module.exports [as onConnect] (/my/home/path/my-first-ks-app/initial-data.js:10:22)&#xA;    at /my/home/path/my-first-ks-app/node_modules/@keystonejs/keystone/lib/Keystone/index.js:323:35&#xA;    at processTicksAndRejections (internal/process/task_queues.js:97:5)&#xA;    at async executeDefaultServer (/my/home/path/my-first-ks-app/node_modules/@keystonejs/keystone/bin/utils.js:114:3)&#xA;error Command failed with exit code 1.&#xA;</code></pre>&#xA;&#xA;<p>I am on Windows 10 / WSL (v1) with Ubuntu. KeystoneJS is running from Linux and MongoDB server is installed and running on Windows. This is because when I had it running in Linux, <code>mongod</code> showed as running and listening but I was not able to connect to it (via KeystoneJS or via shell using <code>mongo</code> command). </p>&#xA;&#xA;<p>How do I fix this issue?</p>&#xA;",1005022,,11210376,2020-01-27 15:10:50,2021-09-08 21:00:06,GraphQL error when launching KeystoneJS application,<mongodb><graphql><yarnpkg><windows-subsystem-for-linux><keystonejs>,2,1,0,2020-01-27 15:07:35
59952699,2,,59912106,1,,"<p>It's bug. You're using a <em>very</em> old version of SPQR (Feb. 2018). This has been fixed a long long time ago. Please try to follow the releases as much as possible, as lots of things are getting fixed and improved.</p>&#xA;&#xA;<p>It <em>is</em> possible to work around the bug by customizing the <code>ResolverBuilder</code>s, but I wouldn't recommend going that route.</p>&#xA;&#xA;<p>The Spring Starter (if even relevant to you) is currently lagging behind (not yet on the latest SPQR version) but I'm actively working on the new release. Should be out very soon.</p>&#xA;&#xA;<p>Btw, your setup has a lot of redundancy. Can be simplified to:</p>&#xA;&#xA;<pre><code>val schema = GraphQLSchemaGenerator()&#xA;                .withOperationsFromSingleton(bookGraph)&#xA;                //replace with your own root package(s)&#xA;                .withBasePackages(""com.example.graphql.spqr"")&#xA;                .generate()&#xA;</code></pre>&#xA;",294657,,294657,2020-01-31 09:29:55,2020-01-31 09:29:55,"",,0,1,0,2020-01-28 16:05:53
59961542,1,,,2,772,"<p>Apollo client dev tool can't connect to my app. I have passed connectToDevTools as true in ApolloClient constructor but nothing happens. I have also tried <a href=""https://github.com/jhen0409/react-native-debugger"" rel=""nofollow noreferrer"">this package</a> but apollo tab shows blank page.</p>&#xA;",9690094,,9690094,2020-01-29 06:45:06,2020-02-04 07:45:11,Apollo client devtool couldn't detect Apollo Client in react native app,<react-native><graphql><google-chrome-devtools><apollo-client><graphql-js>,1,1,0,2020-01-29 06:25:55
59965688,1,,,1,547,"<p>I'm using <code>apollo-boost: ^0.4.3</code> with next.js. I recently added cookie authentication to my website. The biggest change was adding headers and <code>credentials: 'include'</code> to <code>ApolloClient</code> constructor. In addition in the <code>server.js</code> which starts express server for next.js I added this block: </p>&#xA;&#xA;<pre><code>const getServer = (isDevHttps, expressApp) =&gt; {&#xA;  if (isDevHttps) {&#xA;    process.env['NODE_TLS_REJECT_UNAUTHORIZED'] = '0';&#xA;    const httpsServerOptions = {&#xA;      key: fs.readFileSync(path.resolve('cert', 'localhost.key')),&#xA;      cert: fs.readFileSync(path.resolve('cert', 'localhost.crt'))&#xA;    };&#xA;&#xA;    console.info('creating https server');&#xA;    return createServer(httpsServerOptions, expressApp);&#xA;  }&#xA;&#xA;  return expressApp;&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>because I needed to run in https in development. Everything worked in development (I was using <a href=""https://localhost:3000"" rel=""nofollow noreferrer"">https://localhost:3000</a> for client and <a href=""https://localhost:443"" rel=""nofollow noreferrer"">https://localhost:443</a> for the graphql backend server). However when I push ed my code to staging where nginx serves static files and AWS hosts the instance I started getting this error:</p>&#xA;&#xA;<pre><code>ApolloError: Network error: request to https://beta.leafreport.com/graphql/ failed, reason: write EPROTO 140426009438016:error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure:../deps/openssl/openssl/ssl/record/rec_layer_s3.c:1536:SSL alert number 40&#xA;&#xA;    at new ApolloError (/src/node_modules/apollo-client/bundle.umd.js:92:26)&#xA;    at /src/node_modules/apollo-client/bundle.umd.js:1588:34&#xA;    at /src/node_modules/apollo-client/bundle.umd.js:2008:15&#xA;    at Set.forEach (&lt;anonymous&gt;)&#xA;    at /src/node_modules/apollo-client/bundle.umd.js:2006:26&#xA;    at Map.forEach (&lt;anonymous&gt;)&#xA;    at QueryManager.broadcastQueries (/src/node_modules/apollo-client/bundle.umd.js:2004:20)&#xA;    at /src/node_modules/apollo-client/bundle.umd.js:1483:29&#xA;    at runMicrotasks (&lt;anonymous&gt;)&#xA;    at processTicksAndRejections (internal/process/task_queues.js:93:5) {&#xA;  graphQLErrors: [],&#xA;  networkError: FetchError: request to https://staging.mysite.com/graphql/ failed, reason: write EPROTO 140426009438016:error:14094410:SSL routines:ssl3_read_bytes:sslv3 alert handshake failure:../deps/openssl/openssl/ssl/record/rec_layer_s3.c:1536:SSL alert number 40&#xA;</code></pre>&#xA;&#xA;<p>The first time when I pushed the code <code>isDevHttps</code> was <code>true</code> by mistake and <code>NODE_TLS_REJECT_UNAUTHORIZED</code> was set to 0. Afterwards I made sure that <code>isDevHttps</code> is <code>false</code> and redeployed. The SSL certificate we use is provided by AWS Cloudfront.</p>&#xA;&#xA;<p>This is the init code for Apollo Client:</p>&#xA;&#xA;<pre><code>import withApollo from 'next-with-apollo';&#xA;import ApolloClient, { InMemoryCache } from 'apollo-boost';&#xA;import { graphql_url } from 'my-config';&#xA;import { IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';&#xA;import introspectionQueryResultData from '../../fragmentTypes.json';&#xA;&#xA;const fragmentMatcher = new IntrospectionFragmentMatcher({&#xA;  introspectionQueryResultData&#xA;});&#xA;&#xA;function createClient({ ctx, headers, initialState }) {&#xA;  return new ApolloClient({&#xA;    credentials: 'include',&#xA;    uri: graphql_url,&#xA;    cache: new InMemoryCache({ fragmentMatcher }).restore(initialState || {}),&#xA;    headers&#xA;  });&#xA;}&#xA;&#xA;export default withApollo(createClient, { getDataFromTree: 'ssr' });&#xA;</code></pre>&#xA;&#xA;<p>this is my package.json:</p>&#xA;&#xA;<pre><code>  ""dependencies"": {&#xA;    ""@babel/runtime-corejs2"": ""^7.5.1"",&#xA;    ""apollo-boost"": ""^0.4.3"",&#xA;    ""apollo-mocked-provider"": ""^3.0.1"",&#xA;    ""babel-eslint"": ""^10.0.2"",&#xA;    ""body-parser"": ""^1.19.0"",&#xA;    ""clean-css"": ""^4.2.1"",&#xA;    ""compression"": ""^1.7.4"",&#xA;    ""dotenv-load"": ""^2.0.0"",&#xA;    ""graphql"": ""^14.3.1"",&#xA;    ""graphql-tag"": ""^2.10.1"",&#xA;    ""helmet"": ""^3.18.0"",&#xA;    ""morgan"": ""^1.9.1"",&#xA;    ""next"": ""^9.0.1"",&#xA;    ""next-plugin-custom-babel-config"": ""^1.0.2"",&#xA;    ""next-transpile-modules"": ""^2.3.1"",&#xA;    ""next-with-apollo"": ""^4.2.0"",&#xA;    ""nprogress"": ""^0.2.0"",&#xA;    ""path"": ""^0.12.7"",&#xA;    ""react-apollo"": ""^3.0.0"",&#xA;    ""react-cookie-consent"": ""^2.5.0"",&#xA;    ""react-google-login"": ""^3.2.1"",&#xA;    ""react-facebook-login"": ""^4.0.1"",&#xA;    ""react-minimal-pie-chart"": ""^4.2.0"",&#xA;    ""react-motion-drawer"": ""^3.1.0"",&#xA;    ""supports-webp"": ""^2.0.1"",&#xA;    ""express-device"": ""^0.4.2""&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>This is dev.conf in nginx (it's ok that ssl is commented out because the certificate comes from cloudfront):</p>&#xA;&#xA;<pre><code>server {&#xA;    listen       80 default_server;&#xA;&#xA;    server_name staging.mysite.com;&#xA;&#xA;    include not_found.inc;&#xA;    include static_resources.inc;&#xA;    include ads.inc;&#xA;    #include ssl.inc;&#xA;&#xA;    location / {&#xA;        rewrite_log off;&#xA;        include redirects/redirects.conf;&#xA;&#xA;        access_log /var/log/nginx/com-access.log combined;&#xA;        error_log /var/log/nginx/com-error.log notice;&#xA;        include graylog.logging;&#xA;&#xA;        include proxy_pass.inc;&#xA;        auth_basic           ""closed site"";&#xA;        auth_basic_user_file /etc/nginx/.htpasswd;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Only the homepage works from serverside in my website however none other pages don't from serverside and return the handshake error from above. The homepage is a refreshhit from Cloudfront. Some pages open then when clicking on link clientside, however some don't open and result in 500 internal server error (handshake failure). So serverside never works but clientside sometimes works.</p>&#xA;&#xA;<p>Nothing I tried has worked so far including changing AWS instance, removing headers/credentials from apollo client constructor, redeploying multiple times.</p>&#xA;&#xA;<p>I see from the error stack that the error comes from here (node_modules/apollo-client/bundle.umd.js:92:26):</p>&#xA;&#xA;<pre><code>QueryManager.prototype.broadcastQueries = function () {&#xA;  var _this = this;&#xA;&#xA;  this.onBroadcast();&#xA;  this.queries.forEach(function (info, id) {&#xA;    if (info.invalidated) {&#xA;      info.listeners.forEach(function (listener) {&#xA;        if (listener) {&#xA;          listener(_this.queryStore.get(id), info.newData);&#xA;        }&#xA;      });&#xA;    }&#xA;  });&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Why would the client not be able to broadcast queries?</p>&#xA;",5863693,,,,2020-01-29 11:03:49,Why am I getting handshake failure Apollo client error (with EPROTO errno)?,<authentication><ssl><next.js><apollo-client>,0,0,0,2020-01-29 11:03:49
59980092,1,,,0,993,"<p>How can I use graphql.config.js and apollo.config.js with ApolloClient? I want client to read graphql endpoint from the config file.</p>&#xA;&#xA;<p>Also, is it possible to use graphql.config.js with Apollo VS Code extension?</p>&#xA;",158851,,2631715,2020-01-30 07:57:47,2020-02-16 11:32:57,Using graphql.config.js and apollo.config.js with ApolloClient,<visual-studio-code><configuration><apollo-client>,1,0,0,2020-01-30 06:16:27
59987872,1,,,1,231,"<p>I have a local schema and a remote schema.&#xA;The local schema contains a subset of the remote schema and should proxy these to the remote graphql server.</p>&#xA;&#xA;<p>Normally i would use something like:</p>&#xA;&#xA;<pre><code>public async getCar(&#xA;  obj: any,&#xA;  args: any,&#xA;  context: any,&#xA;  info: any&#xA;): Promise&lt;Car&gt; {&#xA;  return info.mergeInfo.delegateToSchema({&#xA;    args: {&#xA;      id: context.userId,&#xA;    },&#xA;    context: {},&#xA;    fieldName: 'car',&#xA;    info,&#xA;    operation: 'query',&#xA;    schema: carExecutableSchema,&#xA;    transforms: [],&#xA;  });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>but the <code>mergeInfo</code> is not available on the <code>info</code> field.</p>&#xA;&#xA;<p>To get the remote schema I'm using:</p>&#xA;&#xA;<pre><code>const fetchRemoteSchema = async (): Promise&lt;GraphQLSchema&gt; =&gt; {&#xA;  const http = new HttpLink({&#xA;    fetch: nodeFetch,&#xA;    uri: process.env.CAR_GRAPHQL_URL,&#xA;  });&#xA;&#xA;  const link = setContext((request, previousContext) =&gt; ({&#xA;    headers: {&#xA;      Authorization: `Basic ${process.env.CAR_BASIC_AUTH_TOKEN}`,&#xA;    },&#xA;  })).concat(http);&#xA;&#xA;  const carSchema = await introspectSchema(link);&#xA;&#xA;  const executableSchema = makeRemoteExecutableSchema({&#xA;    link,&#xA;    schema: carSchema,&#xA;  });&#xA;  return executableSchema;&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>and i use this in the module to initialize graphql</p>&#xA;&#xA;<pre><code>GraphQLModule.forRootAsync({&#xA;    imports: [CarModule],&#xA;    inject: [CarService],&#xA;    useFactory: (mainAppService: MainAppService) =&gt; ({&#xA;      context: async ({ req }) =&gt; {&#xA;        return {&#xA;          userId: 1&#xA;        };&#xA;      },&#xA;      definitions: {&#xA;        outputAs: 'interface',&#xA;        path: '../../myschema.gql',&#xA;      },&#xA;      typePaths: ['./**/*.graphql'],&#xA;    }),&#xA;  }),&#xA;</code></pre>&#xA;&#xA;<p>How could i make <code>mergeInfo</code> available? Or is there an easier way to delegate a graphql request?</p>&#xA;",1782536,,,,2020-02-25 12:20:51,Looking to use delegateToSchema in nestjs resolver,<node.js><express><graphql><nestjs>,1,0,0,2020-01-30 14:08:38
60002158,2,,59526097,0,,"<p>Please check your prisma server and database logs. If you are running docker on a local development environment you can use <code>docker logs CONTAINER</code> or <code>docker-compose logs</code> to search for the error message. </p>&#xA;&#xA;<p>Here you can find more information on how to manage the docker environment: <a href=""https://www.prisma.io/docs/prisma-server/deployment-environments/docker-rty1/"" rel=""nofollow noreferrer"">https://www.prisma.io/docs/prisma-server/deployment-environments/docker-rty1/</a></p>&#xA;",1398640,,,,2020-01-31 10:31:39,"",,0,0,0,2020-01-31 10:31:39
60013994,2,,50688998,15,,"<p>Try <code>cross-fetch</code> without a polyfill in node.</p>&#xA;&#xA;<p>This even works with typescript. &#xA;(conversely, <code>node-fetch</code>'s type is incompatible with the standard whatwg fetch spec.) </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import fetch from 'cross-fetch'&#xA;&#xA;const httpLink = new HttpLink({&#xA;  uri: ""&lt;your-uri&gt;"",&#xA;  fetch,&#xA;})&#xA;</code></pre>&#xA;",8700958,,,,2020-02-01 04:27:16,"",,0,0,0,2020-02-01 04:27:16
60055805,1,,,0,6281,"<p>I have a backend with users that i want to display on my frontend folder.&#xA;In order to do that i need authorization headers to be implemented in React via Apollo Server.</p>&#xA;&#xA;<p>I followed some instruction from here -> <a href=""https://www.apollographql.com/docs/react/networking/authentication/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/networking/authentication/</a></p>&#xA;&#xA;<p>This is my code inside App.js</p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import HeroesDota from './components/HeroesDota';&#xA;&#xA;&#xA;import { ApolloProvider } from '@apollo/react-hooks';&#xA;&#xA;import { ApolloClient } from ""apollo-client"";&#xA;import { InMemoryCache } from ""apollo-cache-inmemory"";&#xA;import { HttpLink } from ""apollo-link-http"";&#xA;import { setContext } from 'apollo-link-context';&#xA;&#xA;&#xA;const httpLink = new HttpLink({&#xA;  uri: ""http://localhost:8000/graphql/"",&#xA;});&#xA;&#xA;&#xA;const client = new ApolloClient({&#xA;  link: authLink.concat(httpLink),&#xA;  cache: new InMemoryCache()&#xA;});&#xA;&#xA;const authLink = setContext((_, { headers }) =&gt; {&#xA;  // get the authentication token from local storage if it exists&#xA;  const token = localStorage.getItem('token');&#xA;  // return the headers to the context so httpLink can read them&#xA;  return {&#xA;    headers: {&#xA;      ...headers,&#xA;      authorization: token ? `Bearer ${token}` : """",&#xA;    }&#xA;  }&#xA;});&#xA;&#xA;const App = () =&gt; {&#xA;return (&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;HeroesDota /&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;)};&#xA;&#xA;export default App;&#xA;</code></pre>&#xA;&#xA;<p>After i run server on localhost:3000 it says: <strong>Uncaught Error: Cannot find module 'apollo-link-context'</strong></p>&#xA;&#xA;<p>I installed apollo-link as dependency. I dont know why this error show up. Here is the actual picture.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/gKyBm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gKyBm.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>package.json</p>&#xA;&#xA;<pre><code>{&#xA;  ""name"": ""frontend"",&#xA;  ""version"": ""0.1.0"",&#xA;  ""private"": true,&#xA;  ""dependencies"": {&#xA;    ""@apollo/react-hooks"": ""^3.1.3"",&#xA;    ""@testing-library/jest-dom"": ""^4.2.4"",&#xA;    ""@testing-library/react"": ""^9.4.0"",&#xA;    ""@testing-library/user-event"": ""^7.2.1"",&#xA;    ""apollo-boost"": ""^0.4.7"",&#xA;    ""apollo-cache-inmemory"": ""^1.6.5"",&#xA;    ""apollo-link"": ""^1.2.13"",&#xA;    ""apollo-link-ws"": ""^1.0.19"",&#xA;    ""bootstrap"": ""^4.4.1"",&#xA;    ""graphql"": ""^14.5.8"",&#xA;    ""react"": ""^16.12.0"",&#xA;    ""react-apollo"": ""^3.1.3"",&#xA;    ""react-bootstrap"": ""^1.0.0-beta.16"",&#xA;    ""react-dom"": ""^16.12.0"",&#xA;    ""react-router"": ""^5.1.2"",&#xA;    ""react-router-dom"": ""^5.1.2"",&#xA;    ""react-scripts"": ""3.3.0"",&#xA;    ""styled-components"": ""^5.0.0"",&#xA;    ""subscriptions-transport-ws"": ""^0.9.16""&#xA;  },&#xA;  ""scripts"": {&#xA;    ""start"": ""react-scripts start"",&#xA;    ""build"": ""react-scripts build"",&#xA;    ""test"": ""react-scripts test"",&#xA;    ""eject"": ""react-scripts eject""&#xA;  },&#xA;  ""eslintConfig"": {&#xA;    ""extends"": ""react-app""&#xA;  },&#xA;  ""browserslist"": {&#xA;    ""production"": [&#xA;      ""&gt;0.2%"",&#xA;      ""not dead"",&#xA;      ""not op_mini all""&#xA;    ],&#xA;    ""development"": [&#xA;      ""last 1 chrome version"",&#xA;      ""last 1 firefox version"",&#xA;      ""last 1 safari version""&#xA;    ]&#xA;  },&#xA;  ""devDependencies"": {}&#xA;}&#xA;</code></pre>&#xA;",12686000,,12686000,2020-02-06 18:56:47,2020-02-06 18:56:47,"Module not found: Can't resolve 'apollo-link-context' - REACT, APOLLO-SERVER",<reactjs><authentication><graphql><apollo>,1,0,0,2020-02-04 10:53:56
60117472,1,60119381,,1,1081,"<p>If I do a GraphQL query usinge <code>node-fetch</code> or <code>curl</code> I get back the expected results. For example, if I have a file <em>gquery.js</em> with the following code:</p>&#xA;&#xA;<pre><code>const fetch = require(""node-fetch"")&#xA;fetch('https://api.example.com/graphql', {&#xA;  method: 'POST',&#xA;  headers: {&#xA;    'Content-Type': 'application/json',&#xA;    'Accept': 'application/json',&#xA;    'X-Api-Service-Key': '123456789077',&#xA;  },&#xA;  body: JSON.stringify({query: ""query($fruitId: String!) { fruit(id: $fruitId) { id, name } }"",&#xA;  variables: { ""fruitId"": ""ikttwwwbvn7"" }})&#xA;})&#xA;  .then(r =&gt; r.json())&#xA;  .then(data =&gt; console.log('data returned:', data));&#xA;</code></pre>&#xA;&#xA;<p>And on my Ubuntu machine I just run <code>$node gquery.js</code> I get back a result. I'll also get a result if I use plain curl, e.g.:</p>&#xA;&#xA;<pre class=""lang-sh prettyprint-override""><code>curl -H 'Content-Type: application/json' -X POST -H ""X-Api-Service-Key: 123456789077"" https://api.example.com/graphql -d '{ ""query"": ""query($fruitId: String!) { fruit(id: $fruitId) { id, name } }"", ""variables"": { ""fruitId"": ""ikttwwwbvn7"" }}'&#xA;</code></pre>&#xA;&#xA;<p>However, if I just use <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch"" rel=""nofollow noreferrer"">fetch</a> on Chrome, e.g.:</p>&#xA;&#xA;<pre><code>fetch('https://api.example.com/graphql', {&#xA;  method: 'POST',&#xA;  headers: {&#xA;    'Content-Type': 'application/json',&#xA;    'Accept': 'application/json',&#xA;    'X-Api-Service-Key': '123456789077',&#xA;  },&#xA;  body: JSON.stringify({query: ""query($fruitId: String!) { fruit(id: $fruitId) { id, name } }"",&#xA;  variables: { ""fruitId"": ""ikttwwwbvn7"" }})&#xA;})&#xA;  .then(r =&gt; r.json())&#xA;  .then(data =&gt; console.log('data returned:', data));&#xA;</code></pre>&#xA;&#xA;<p>I get an error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Access to fetch at '<a href=""https://api.example.com/graphql"" rel=""nofollow noreferrer"">https://api.example.com/graphql</a>' from origin 'chrome-search://local-ntp' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.</p>&#xA;</blockquote>&#xA;&#xA;<p>Note: My endpoint is actually different, but otherwise this example is essentially the same as what I have.</p>&#xA;&#xA;<p>I had a look at a <a href=""https://stackoverflow.com/q/36878255/5362795"">related question</a>, but answers seem to suggest that this cannot be resolved on the client side only. But the fact that I can use <code>curl</code> and <code>node</code> successfully tells me that I just don't have the right code.</p>&#xA;&#xA;<p>To be clear, I don't really care about <code>fetch</code>. I'm happy to use any standalone Javascript solution that does not require the use of a client like apollo or relay.</p>&#xA;",5362795,,5362795,2020-03-02 13:57:35,2020-03-02 13:57:35,How to do a simple GraphQL query in JavaScript,<javascript><graphql>,1,8,0,2020-02-07 16:29:50
60146249,1,,,1,106,"<p>Hi i'm trying to deploy my project with heroku but it's impossible i don't understand &#xA;I already did like that on other project but this time it doesn't works in my server.js i have this code :</p>&#xA;&#xA;<pre><code>const express = require(""express"");&#xA;const graphqlHTTP = require(""express-graphql"");&#xA;const cors = require(""cors"");&#xA;const schema = require(""./schema"");&#xA;const path = require(""path"");&#xA;&#xA;const app = express();&#xA;&#xA;//allow Cross origin&#xA;&#xA;app.use(cors());&#xA;&#xA;app.use(&#xA;  ""/graphql"",&#xA;  graphqlHTTP({&#xA;    schema,&#xA;    graphiql: true&#xA;  })&#xA;);&#xA;&#xA;app.use(express.static('public'));&#xA;&#xA;app.get(""*"", (req, res) =&gt; {&#xA;  res.sendFile(path.resolve(__dirname, 'public', 'index.html'));&#xA;});&#xA;&#xA;const PORT = process.env.PORT || 5000;&#xA;&#xA;app.listen(PORT, () =&gt; console.log(`Server started on port ${PORT}`));&#xA;</code></pre>&#xA;&#xA;<p>In my app.js who is in my Client folder i modify uri for AplolloClient : </p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import './App.css';&#xA;import Logo from ""./logo.png"";&#xA;import Matchs from './components/Matchs'&#xA;import MatchDetail from './components/MatchDetail'&#xA;import ApolloClient from ""apollo-boost"";&#xA;import { ApolloProvider } from ""@apollo/react-hooks"";&#xA;import { BrowserRouter as Router, Route } from ""react-router-dom"";&#xA;&#xA;const client = new ApolloClient({&#xA;  uri: ""/graphql""&#xA;});&#xA;&#xA;function App() {&#xA;  return (&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;Router&gt;&#xA;        &lt;div className=""container""&gt;&#xA;          &lt;img&#xA;            src={Logo}&#xA;            alt=""Nba App""&#xA;            style={{ width: 300, display: ""block"", margin: ""auto"" }}&#xA;          /&gt;&#xA;          &lt;Route exact path=""/"" component={Matchs} /&gt;&#xA;          &lt;Route exact path=""/match/:gameId"" component={MatchDetail} /&gt;&#xA;        &lt;/div&gt;&#xA;      &lt;/Router&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  );&#xA;}&#xA;&#xA;export default App;&#xA;</code></pre>&#xA;&#xA;<p>in my package.json from my client folder i add a proxy :</p>&#xA;&#xA;<pre><code>{&#xA;  ""name"": ""client"",&#xA;  ""version"": ""0.1.0"",&#xA;  ""private"": true,&#xA;  ""dependencies"": {&#xA;    ""@apollo/react-hooks"": ""^3.1.3"",&#xA;    ""@testing-library/jest-dom"": ""^4.2.4"",&#xA;    ""@testing-library/react"": ""^9.3.2"",&#xA;    ""@testing-library/user-event"": ""^7.1.2"",&#xA;    ""apexcharts"": ""^3.15.5"",&#xA;    ""apollo-boost"": ""^0.4.7"",&#xA;    ""classnames"": ""^2.2.6"",&#xA;    ""graphql"": ""^14.6.0"",&#xA;    ""lodash.flowright"": ""^3.5.0"",&#xA;    ""react"": ""^16.12.0"",&#xA;    ""react-apexcharts"": ""^1.3.6"",&#xA;    ""react-apollo"": ""^3.1.3"",&#xA;    ""react-dom"": ""^16.12.0"",&#xA;    ""react-icons"": ""^3.9.0"",&#xA;    ""react-router-dom"": ""^5.1.2"",&#xA;    ""react-scripts"": ""3.3.1""&#xA;  },&#xA;  ""scripts"": {&#xA;    ""start"": ""react-scripts start"",&#xA;    ""build"": ""react-scripts build &amp;&amp; mv build ../public"",&#xA;    ""test"": ""react-scripts test"",&#xA;    ""eject"": ""react-scripts eject""&#xA;  },&#xA;  ""eslintConfig"": {&#xA;    ""extends"": ""react-app""&#xA;  },&#xA;  ""browserslist"": {&#xA;    ""production"": [&#xA;      ""&gt;0.2%"",&#xA;      ""not dead"",&#xA;      ""not op_mini all""&#xA;    ],&#xA;    ""development"": [&#xA;      ""last 1 chrome version"",&#xA;      ""last 1 firefox version"",&#xA;      ""last 1 safari version""&#xA;    ]&#xA;  },&#xA;  ""proxy"": ""http://localhost:5000""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And i made a script to build and move in public/build&#xA;But when i deploy in heroku i have always </p>&#xA;&#xA;<pre><code>VM165:1 POST http://localhost:4000/graphql net::ERR_CONNECTION_REFUSED&#xA;</code></pre>&#xA;&#xA;<p>But i don't know where he take this Url because i think i change all places where it could be problematic&#xA;Thanks a lot</p>&#xA;",12073633,,,,2020-02-10 08:01:59,Deploy React with Heroku,<node.js><reactjs><heroku><graphql>,0,3,0,2020-02-10 08:01:59
60172904,2,,60170927,0,,"<p>ok stupid me, i forgot to add</p>&#xA;&#xA;<pre><code>{&#xA;  resolve: `gatsby-source-graphql`,&#xA;  options: {&#xA;    // This type will contain remote schema Query type&#xA;    typeName: `WPGraphQL`,&#xA;    // This is field under which it's accessible&#xA;    fieldName: `wpgraphql`,&#xA;    // Url to query from&#xA;    url: `blablabla.local/graphql`,&#xA;  },&#xA;</code></pre>&#xA;&#xA;<p>to gatsby-config.js</p>&#xA;&#xA;<p>now my custom post type is available inside wpgraphql{}</p>&#xA;",393704,,,,2020-02-11 15:59:36,"",,0,0,0,2020-02-11 15:59:36
60195594,1,,,1,1479,"<p>I have a Nest.js' application hosted on AWS Lambda using serverless cli. </p>&#xA;&#xA;<p>when I try access the endpoint I receive {""message"": ""Endpoint request timed out""}. I tried to increase the time but the error persists.</p>&#xA;&#xA;<p>How I can solve this?</p>&#xA;&#xA;<p>serverless.yml</p>&#xA;&#xA;<pre><code>  name: aws&#xA;  runtime: nodejs12.x&#xA;  stage: prod&#xA;  profile: default # Config your AWS Profile&#xA;  timeout: 120&#xA;  environment: # Service wide environment variables&#xA;    NODE_ENV: production&#xA;&#xA;plugins:&#xA;  - serverless-offline&#xA;  - serverless-plugin-warmup&#xA;&#xA;custom:&#xA;  # Enable warmup on all functions (only for production and staging)&#xA;  warmup:&#xA;    enabled: true&#xA;&#xA;package:&#xA;  exclude:&#xA;    - .git/**&#xA;    - src/**&#xA;    - test/**&#xA;    - nodemon.json&#xA;    - README.md&#xA;  excludeDevDependencies: true&#xA;&#xA;functions:&#xA;  index:&#xA;    handler: dist/serverless.handler&#xA;    events:&#xA;      - http:&#xA;          cors: true&#xA;          path: '/graphql'&#xA;          method: any&#xA;</code></pre>&#xA;",10615258,,,,2020-02-17 19:52:04,NestJs on AWS Lambda Endpoint request timed out,<amazon-web-services><aws-lambda><graphql><timeout><nestjs>,1,0,0,2020-02-12 19:28:20
60198679,2,,60197851,8,,<p>[Solved]</p>&#xA;&#xA;<p>In reading through the stack trace I noticed the issue was referencing <code>graphql-query-complexity</code> which I was using for validationRules. I removed the validation rules and now everything works! Granted I don't have validation at the moment but at least I can work from here. Thanks to everyone who took the time to respond!</p>&#xA;,11168037,,,,2020-02-13 00:04:54,"",,0,0,0,2020-02-13 00:04:54
60215081,2,,60211779,5,,"<p>There is nothing wrong with the code, it was the backend that didnt have the CORS configuration.</p>&#xA;&#xA;<p>It's a ruby server, and the rack-cors wasn't configurated.</p>&#xA;&#xA;<p>I also changed the apollo client to this, after the backend was fixed:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import ApolloClient from 'apollo-boost';&#xA;&#xA;const client = new ApolloClient({&#xA;  uri: &lt;graphql_server&gt;,&#xA;  headers: {&#xA;    'Content-Type': 'application/json',&#xA;    'Access-Control-Allow-Origin': '*',&#xA;    'Access-Control-Allow-Credentials': true,&#xA;  },&#xA;  fetch,&#xA;});&#xA;&#xA;export default client;&#xA;</code></pre>&#xA;&#xA;<p>Removed the <code>fetchOptions</code> <code>mode: 'no-cors'</code>:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>fetchOptions: {&#xA;   mode: 'no-cors',&#xA;}&#xA;</code></pre>&#xA;",4621381,,4621381,2020-02-13 19:28:45,2020-02-13 19:28:45,"",,0,0,0,2020-02-13 19:22:07
60254646,1,,,4,2417,"<p>I'm trying to get started with <a href=""https://docs.hasura.io/1.0/graphql/manual/index.html"" rel=""nofollow noreferrer"">Hasura GraphQL engine</a> running locally on OSX in Docker and connecting to an existing database but I am having trouble finding the container or the Hasura console.</p>&#xA;&#xA;<p>Here's what I have:</p>&#xA;&#xA;<pre><code>docker -v&#xA;Docker version 19.03.5, build 633a0ea&#xA;docker-compose -v&#xA;docker-compose version 1.25.4, build 8d51620a&#xA;docker images&#xA;hasura/graphql-engine v1.0.0&#xA;hasura version&#xA;INFO hasura cli version=v1.0.0&#xA;</code></pre>&#xA;&#xA;<p>Here's my start script (docker-run.sh) which sets up the port and environment variables for Hasura:</p>&#xA;&#xA;<pre><code>#!/bin/bash&#xA;docker run -d -p 8080:8080 \&#xA;-e HASURA_GRAPHQL_DATABASE_URL=postgres://someuser:somepassword@host.docker.internal:5432/somedb \&#xA;-e HASURA_GRAPHQL_ENABLE_CONSOLE=true \&#xA;hasura/graphql-engine:latest&#xA;</code></pre>&#xA;&#xA;<p>Running <code>./docker-run.sh</code> returns a 64 char hex string, which I assume to be the container ID, but I cannot see a container when I run <code>docker ps</code>, and nothing loads on <code>http://localhost:8080/console</code>.</p>&#xA;&#xA;<p>What am I missing?</p>&#xA;&#xA;<p><strong>UPDATE 1</strong></p>&#xA;&#xA;<p>I can see the container when I run <code>docker ps -a</code> - it has a status of <code>exited(1)</code> (which means application error). </p>&#xA;&#xA;<p>I can see in the logs:</p>&#xA;&#xA;<pre><code>{""path"":""$"",""error"":""pgcrypto extension is required, but the current user doesn’t have permission to create it. Please grant superuser permission, or setup the initial schema via https://docs.hasura.io/1.0/graphql/manual/deployment/postgres-permissions.html"",""code"":""postgres-error""}&#xA;</code></pre>&#xA;&#xA;<p>I have followed the instructions for setting up the initial schema but the result of running <code>./docker-run.sh</code> has not changed.</p>&#xA;&#xA;<p><strong>UPDATE 2</strong></p>&#xA;&#xA;<p>I did not realise that the <strong>pgcrypto</strong> extension had to be installed on the specific database. Now that I have done so, the logs look healthy - although I am still unable to access the console when I run <code>hasura console</code>. </p>&#xA;&#xA;<p>Here's my <strong>config.yaml</strong>:</p>&#xA;&#xA;<p><code>endpoint: http:localhost:8080</code></p>&#xA;&#xA;<p>...and the resulting error:</p>&#xA;&#xA;<pre><code>FATA[0001] version check: failed to get version from server: failed making version api call: Get http:localhost:8080/v1/version: http: no Host in request URL&#xA;</code></pre>&#xA;&#xA;<p>Again, what am I missing?</p>&#xA;&#xA;<p><strong>UPDATE 3</strong></p>&#xA;&#xA;<p>Changed config.yaml...</p>&#xA;&#xA;<p><code>endpoint: http://localhost:8080</code></p>&#xA;&#xA;<p>Whoops (blush).</p>&#xA;&#xA;<p>OK, it's working :)</p>&#xA;",84916,,84916,2020-02-17 02:06:33,2020-02-17 02:06:33,Starting Hasura GraphQL engine Docker image,<docker><graphql><hasura>,0,3,0,2020-02-17 00:42:34
60318661,1,,,1,584,"<p>At first I was getting this error on my local build server, but I managed to fix it there... the query is still the same, but gatsby isn't throwing any errors with the query. But every time I try to deploy on Netlify it fails with the following message:</p>&#xA;&#xA;<pre><code>toFormat seems to be empty, we need a fileExtension to set it.&#xA;    1 | fragment GatsbyContentfulFluid_tracedSVG on ContentfulFluid {&#xA; &gt;  2 |   tracedSVG&#xA;      |   ^&#xA;    3 |   aspectRatio&#xA;    4 |   src&#xA;    5 |   srcSet&#xA;    6 |   sizes&#xA;    7 | }&#xA; failed during stage 'building site': Build script returned non-zero exit code: 1&#xA;    8 |&#xA;    9 | query optbuildreposrccomponentsshopProductsJs2136335468 {&#xA;   10 |   products: allContentfulProduct {&#xA;   11 |     edges {&#xA;   12 |       node {&#xA; Shutting down logging, 22 messages pending&#xA; File path: /opt/build/repo/src/components/shop/Products.js&#xA; Plugin: none&#xA;</code></pre>&#xA;&#xA;<p>This is the same error I was getting locally and I have no idea why it is occurring. There should be no reason that toFormat is a required parameter. This is using the standard <code>gatsby-source-contentful</code> plugin API request which has always served the image without issue in the past. If I change the request to 'fixed' instead of 'fluid' the problem goes away, but I need fluid images for this part of the site.</p>&#xA;&#xA;<p>I emailed the Netlify staff a few days ago, but am yet to receive a reply. Any help would be greatly appreciated.</p>&#xA;",8538922,,,,2020-08-17 15:04:41,"Deploying on Netlify throws an error with my GraphQL/Gatsby/Contentful query, demands needless query parameter",<graphql><gatsby><netlify><contentful>,2,2,0,2020-02-20 11:13:27
60332127,2,,57016978,0,,"<p>Run your docker container by typing <strong>$docker-compose up -d</strong> -d flag is for running container in detach mode.</p>&#xA;&#xA;<p>Instead of using  endpoint as <strong><a href=""http://localhost:4466"" rel=""nofollow noreferrer"">http://localhost:4466</a></strong>  use <strong><a href=""http://127.0.1.1:4466"" rel=""nofollow noreferrer"">http://127.0.1.1:4466</a></strong> Or check your localhost by the cmd: $localhost -i.&#xA;In prisma-binding your constructor should have endpoint as <strong><a href=""http://127.0.1.1:4466"" rel=""nofollow noreferrer"">http://127.0.1.1:4466</a></strong>.</p>&#xA;&#xA;<pre><code>const prisma = new Prisma({&#xA;    typeDefs: './src/generated/prisma.graphql',&#xA;    endpoint: 'http://127.0.1.1:4466'&#xA;});&#xA;</code></pre>&#xA;",8581623,,8581623,2020-02-21 04:20:52,2020-02-21 04:20:52,"",,0,0,0,2020-02-21 04:14:07
60344588,1,60373002,,3,3379,"<p>I'm using apollo server and graphql and it's necessary to set a timeout so I use this with express:</p>&#xA;&#xA;<pre><code>   const server = app.listen({ port: 4000 }, () =&gt;&#xA;       console.log( `The server is running in http://localhost:4000${server.graphqlPath}`));&#xA;&#xA;   server.setTimeout(60000);&#xA;</code></pre>&#xA;&#xA;<p>This works to set a timeout, but I receive the following message in my Apollo Server Playground:</p>&#xA;&#xA;<pre><code>{&#xA;  ""error"": ""Failed to fetch. Please check your connection""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I think is not ok to send only that text, so can I edit that message or add some properties to the error that I receive?, It take me a while to search in some places with no success.</p>&#xA;",12777565,,6463558,2020-02-24 09:37:22,2020-02-24 09:37:22,Apollo server timeout message,<javascript><graphql><apollo-server><graphql-playground>,1,0,0,2020-02-21 18:45:04
60350481,1,,,2,51,"<p>I'm trying to figure out what exactly triggers the following warning when I run ""gatsby develop"" or ""gatsby build"" command for my gatsby site.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/HroO3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/HroO3.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>I've tried googling around, and a fresh install of a new gatsby starter default and the problem still persists.</p>&#xA;&#xA;<p>I'm assuming this warning is specific to Gatsby. If would be great if someone from the Gatsby team could explain what this warning is about.</p>&#xA;",5967161,,,,2020-02-22 08:44:16,Gatsby warning: Plugin `gatsby-source-filesystem` tried to define the GraphQL type `File`,<reactjs><graphql><gatsby>,0,2,0,2020-02-22 08:44:16
60387411,2,,59858301,0,,"<p>Per hotchocolate author in V10.4 and V11.0 this will be straightforward, closing pending final release of those versions.</p>&#xA;",1340169,,,,2020-02-25 04:13:31,"",,0,1,0,2020-02-25 04:13:31
60396023,2,,60360786,1,,"<p>you can testing against a test stage.</p>&#xA;&#xA;<p>all you need is two different env file. one is for the development environment and one is for testing environment.</p>&#xA;&#xA;<ul>&#xA;<li>on .env.dev: <code>http://localhost:4466/default/default</code>  </li>&#xA;<li>on .env.test: <code>http://localhost:4466/default/test</code></li>&#xA;</ul>&#xA;&#xA;<p>after that, you can run docker separately for development and test environment. </p>&#xA;",5534469,,,,2020-02-25 13:42:04,"",,0,0,0,2020-02-25 13:42:04
60416771,1,,,0,141,"<p>I'm getting this warning:</p>&#xA;&#xA;<pre><code>backend.js:6 Missing field getCurrentConfigurations in [&#xA;{&#xA;  ""id"": ""135631"",&#xA;  ""zone"": {&#xA;    ""id"": 2,&#xA;    ""name"": ""ZONA 1"",&#xA;    ""color"": ""#ba9b&#xA;</code></pre>&#xA;&#xA;<p>It's a warning but my entire app has sometimes some weird behaviours. So I wonder how could fix those warnings. Apparently, the app works ok when I trigger a function that send that warning on chrome console, but I don't know why is happening.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/yvyDy.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yvyDy.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>I had to deal with an error about writing to cache some data, the solution in that case was adding an <code>id</code> value to each object and also a <code>__typename</code></p>&#xA;&#xA;<p>About the error and some solutions: <a href=""https://github.com/apollographql/apollo-client/issues/2510"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client/issues/2510</a></p>&#xA;&#xA;<p>About the same but with _<code>typename</code>: <a href=""https://github.com/apollographql/apollo-client/issues/1826"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client/issues/1826</a></p>&#xA;&#xA;<p>...but that's another story, anyway, that error occurs like 1 fro 20 times that I use the same function... it's all weird and random, but now I want to know if some one has a clue about the warning.</p>&#xA;&#xA;<p>This is part of the code that shows what I'm using from Apollo</p>&#xA;&#xA;<pre><code>import AWSAppSyncClient, { createAppSyncLink, AUTH_TYPE } from 'aws-appsync';&#xA;import { setContext } from ""apollo-link-context"";&#xA;import { ApolloLink } from ""apollo-link"";&#xA;import { createHttpLink } from ""apollo-link-http"";&#xA;&#xA;const client = new AWSAppSyncClient(AppSyncConfig, {&#xA;  link: createAppSyncLink({ ...AppSyncConfig,&#xA;    resultsFetcherLink: ApolloLink.from([&#xA;      setContext((request, previousContext) =&gt; ({&#xA;        headers: { ...previousContext.headers,&#xA;          Authorization: localStorage.getItem('token') ? localStorage.getItem('token') : ''&#xA;        }&#xA;      })),&#xA;      createHttpLink({&#xA;        uri: AppSyncConfig.url&#xA;      })&#xA;    ])&#xA;  })&#xA;});&#xA;</code></pre>&#xA;",3541320,,,,2020-02-26 15:01:27,"Apollo, AppSync, Warning about missing field",<apollo><aws-appsync><apollo-link>,0,4,0,2020-02-26 15:01:27
60418580,2,,56311268,0,,"<p>Add the following in gatsby-config.js </p>&#xA;&#xA;<pre><code>module.exports = {&#xA;  plugins: [&#xA;    {&#xA;      resolve: ""gatsby-source-graphql"",&#xA;      options: {&#xA;        // This type will contain remote schema Query type&#xA;        typeName: ""MyGraph"",&#xA;        // This is the field under which it's accessible&#xA;        fieldName: ""myGraph"",&#xA;        // URL to query from&#xA;        url: ""http://localhost:4000/graphql"",&#xA;      },&#xA;    },&#xA;  ],&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then in say  index.js  make the query</p>&#xA;&#xA;<pre><code>export const query = graphql&#xA;  query {&#xA;    myGraph {&#xA;      users {&#xA;        name&#xA;        age&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;",12644744,,8261341,2020-02-26 23:14:29,2020-02-26 23:14:29,"",,0,0,0,2020-02-26 16:38:15
60452998,2,,60452293,2,,"<p>In the context of Apollo Client, there are two types of errors -- GraphQL errors (those returned inside the <code>errors</code> array in the response) and network errors. Any request that returns a status other than 200 is considered to have encountered a network error. The default RetryLink configuration is not that granular -- it only cares about whether a network error occurred, not what kind of error occurred. If you want to <em>not</em> retry on certain errors, provide a <code>retryIf</code> function to the <code>attempts</code> configuration as shown in the <a href=""https://www.apollographql.com/docs/link/links/retry/"" rel=""nofollow noreferrer"">docs</a>:</p>&#xA;&#xA;<pre><code>  attempts: {&#xA;    retryIf: (error, _operation) =&gt; {&#xA;      // return true or false depending on the properties on error&#xA;    }&#xA;  }&#xA;})&#xA;</code></pre>&#xA;",6024220,,,,2020-02-28 13:42:04,"",,0,2,0,2020-02-28 13:42:04
60501584,1,60501692,,1,597,"<p>Integrated Graphql graphql_flutter by following this <a href=""https://pub.dev/packages/graphql_flutter/versions/3.0.0"" rel=""nofollow noreferrer"">documentation</a>. Everything works fine on development mode for both Android and iOS but when i try to deploy Android in release mode, i'm able to generate APK. Once i run on the phone i see this error on Logcat</p>&#xA;&#xA;<pre><code>2020-03-03 12:15:09.822 7384-7408/? E/flutter: [ERROR:flutter/lib/ui/ui_dart_state.cc(157)] Unhandled Exception: NoSuchMethodError: The getter 'host' was called on null.&#xA;Receiver: null&#xA;Tried calling: host&#xA;#0      translateNetworkFailure (package:graphql/src/exceptions/io_network_exception.dart:14)&#xA;#1      translateFailure (package:graphql/src/exceptions/exceptions.dart:13)&#xA;#2      new HttpLink.&lt;anonymous closure&gt;.onListen (package:graphql/src/link/http/link_http.dart:104)&#xA;&lt;asynchronous suspension&gt;&#xA;#3      _runGuarded (dart:async/stream_controller.dart:807)&#xA;#4      _StreamController._subscribe.&lt;anonymous closure&gt; (dart:async/stream_controller.dart:686)&#xA;#5      _BufferingStreamSubscription._guardCallback (dart:async/stream_impl.dart:416)&#xA;#6      _StreamController._subscribe (dart:async/stream_controller.dart:685)&#xA;#7      _ControllerStream._createSubscription (dart:async/stream_controller.dart:820)&#xA;#8      _StreamImpl.listen (dart:async/stream_impl.dart:474)&#xA;#9      Stream.first (dart:async/stream.dart:1251)&#xA;#10     QueryManager._resolveQueryOnNetwork (package:graphql/src/core/query_manager.dart:119)&#xA;#11     QueryManager.fetchQueryAsMultiSourceResult (package:graphql/src/core/query_manager.dart:97)&#xA;#12     ObservableQuery.fetchResults (package:graphql/src/core/observable_query.dart:123)&#xA;#13     new ObservableQuery (package:graphql/src/core/observable_query.dart:32)&#xA;#14     QueryManager.watchQuery (package:graphql/src/core/query_manager.dart:35)&#xA;#15     GraphQLClient.watchQuery (package:graphql/src/graphql_client.dart:99)&#xA;#16     QueryState._initQuery (package:graphql_flutter/src/widgets/query.dart:60)&#xA;#17     QueryState.didChangeDependencies (package:graphql_flutter/src/widgets/query.dart:66)&#xA;#18     StatefulElement._firstBuild (package:flutter/src/widgets/framework.dart:4376)&#xA;#19     ComponentElement.mount (package:flutter/src/widgets/framework.dart:4201)&#xA;#20     Element.inflateWidget (package:flutter/src/widgets/framework.dart:3194)&#xA;#21     Element.updateChild (package:flutter/src/widgets/framework.dart:2988)&#xA;#22     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:4243)&#xA;#23     Element.rebuild (package:flutter/src/widgets/framework.dart:3947)&#xA;#24     ComponentElement._firstBuild (package:flutter/src/widgets/framework.dart:4206)&#xA;#25     ComponentElement.mount (package:flutter/src/widgets/framework.dart:4201)&#xA;#26     Element.inflateWidget (package:flutter/src/widgets/framework.dart:3194)&#xA;#27     Element.updateChild (package:flutter/src/widgets/framework.dart:2988)&#xA;#28     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:4243)&#xA;#29     Element.rebuild (package:flutter/src/widgets/framework.dart:3947)&#xA;#30     ComponentElement._firstBuild (package:flutter/src/widgets/framework.dart:4206)&#xA;#31     ComponentElement.mount (package:flutter/src/widgets/framework.dart:4201)&#xA;#32     Element.inflateWidget (package:flutter/src/widgets/framework.dart:3194)&#xA;#33     Element.updateChild (package:flutter/src/widgets/framework.dart:2988)&#xA;#34     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:4243)&#xA;#35     Element.rebuild (package:flutter/src/widgets/framework.dart:3947)&#xA;#36     ComponentElement._firstBuild (package:flutter/src/widgets/framework.dart:4206)&#xA;#37     ComponentElement.mount (package:flutter/src/widgets/framework.dart:4201)&#xA;#38     Element.inflateWidget (package:flutter/src/widgets/framework.dart:3194)&#xA;#39     Element.updateChild (package:flutter/src/widgets/framework.dart:2988)&#xA;#40     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:4243)&#xA;#41     Element.rebuild (package:flutter/src/widgets/framework.dart:3947)&#xA;#42     ComponentElement._firstBuild (package:flutter/src/widgets/framework.dart:4206)&#xA;#43     ComponentElement.mount (package:flutter/src/widgets/framework.dart:4201)&#xA;#44     Element.inflateWidget (package:flutter/src/widgets/framework.dart:3194)&#xA;#45     Element.updateChild (package:flutter/src/widgets/framework.dart:2988)&#xA;#46     ComponentElement.performRebuild (package:flutter/src/widgets/framework.dart:4243)&#xA;#47     Ele&#xA;</code></pre>&#xA;",1452884,,,,2020-03-03 06:59:22,Flutter: GraphQL Unhandled Exception: NoSuchMethodError: The getter 'host' was called on null,<flutter><graphql>,1,0,0,2020-03-03 06:51:30
60545953,1,,,5,7384,"<p>I'm using <a href=""https://graphql-code-generator.com/"" rel=""noreferrer"">graphQL code generator</a> on an angular app and I'm trying to load my schema from a local nestjs app.</p>&#xA;&#xA;<p>Here is the codegen.yml file:</p>&#xA;&#xA;<pre><code>schema: http://localhost:3000/graphql&#xA;documents: ./src/app/graphql/**/*.graphql&#xA;generates:&#xA;  ./src/app/graphql/types.ts:&#xA;    plugins:&#xA;      - typescript&#xA;      - typescript-operations&#xA;      - typescript-apollo-angular&#xA;</code></pre>&#xA;&#xA;<p>When I run graphql-codegen, I'm getting the following error:</p>&#xA;&#xA;<pre><code> Failed to load schema from http://localhost:3000/graphql:&#xA;&#xA;        invalid json response body at http://localhost:3000/graphql reason: Unexpected token &lt; in JSON at position 0&#xA;        FetchError: invalid json response body at http://localhost:3000/graphql reason: Unexpected token &lt; in JSON at position 0&#xA;    at C:\ngWishList2\node_modules\node-fetch\lib\index.js:271:32&#xA;    at processTicksAndRejections (internal/process/task_queues.js:94:5)&#xA;    at async UrlLoader.load (C:\ngWishList2\node_modules\@graphql-toolkit\url-loader\index.cjs.js:87:22)&#xA;    at async C:\ngWishList2\node_modules\@graphql-toolkit\core\index.cjs.js:682:25        &#xA;    at async Promise.all (index 5)&#xA;    at async loadSingleFile (C:\ngWishList2\node_modules\@graphql-toolkit\core\index.cjs.js:678:5)&#xA;    at async C:\ngWishList2\node_modules\@graphql-toolkit\core\index.cjs.js:556:38        &#xA;    at async Promise.all (index 0)&#xA;    at async loadTypedefs (C:\ngWishList2\node_modules\@graphql-toolkit\core\index.cjs.js:620:5)&#xA;    at async Object.loadSchema (C:\ngWishList2\node_modules\@graphql-toolkit\core\index.cjs.js:705:21)&#xA;    at async loadSchema (C:\ngWishList2\node_modules\@graphql-codegen\cli\bin.js:342:24)  &#xA;    at async C:\ngWishList2\node_modules\@graphql-codegen\cli\bin.js:704:55&#xA;    at async Task.task (C:\ngWishList2\node_modules\@graphql-codegen\cli\bin.js:567:17)   &#xA;&#xA;        GraphQL Code Generator supports:&#xA;          - ES Modules and CommonJS exports (export as default or named export ""schema"")  &#xA;          - Introspection JSON File&#xA;          - URL of GraphQL endpoint&#xA;          - Multiple files with type definitions (glob expression)&#xA;          - String in config file&#xA;&#xA;        Try to use one of above options and run codegen again.&#xA;    Error: Failed to load schema&#xA;        at loadSchema (C:\ngWishList2\node_modules\@graphql-codegen\cli\bin.js:353:15)    &#xA;        at processTicksAndRejections (internal/process/task_queues.js:94:5)&#xA;    Error: Failed to load schema&#xA;        at loadSchema (C:\ngWishList2\node_modules\@graphql-codegen\cli\bin.js:353:15)    &#xA;        at processTicksAndRejections (internal/process/task_queues.js:94:5)&#xA;</code></pre>&#xA;&#xA;<p>When I log the response, I see that its trying to parse the following, which explains the error:</p>&#xA;&#xA;<pre><code>&lt;!DOCTYPE html&gt;&#xA;&lt;html lang=""en""&gt;&#xA;&lt;head&gt;&#xA;&lt;meta charset=""utf-8""&gt;&#xA;&lt;title&gt;Error&lt;/title&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;&lt;pre&gt;Cannot POST /graphql&lt;/pre&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;</code></pre>&#xA;&#xA;<p>If I dig in the index.cjs.cs, and log the generated POST body and response, I'm getting:</p>&#xA;&#xA;<p>BODY:</p>&#xA;&#xA;<pre><code>{""query"":""query IntrospectionQuery {\n  __schema {\n    queryType {\n      name\n    }\n  &#xA;  mutationType {\n      name\n    }\n    subscriptionType {\n      name\n    }\n    types &#xA;{\n      ...FullType\n    }\n    directives {\n      name\n      description\n      locations\n      args {\n        ...InputValue\n      }\n    }\n  }\n}\n\nfragment FullType on __Type {\n  kind\n  name\n  description\n  fields(includeDeprecated: true) {\n    name\n   &#xA; description\n    args {\n      ...InputValue\n    }\n    type {\n      ...TypeRef\n    }\n    isDeprecated\n    deprecationReason\n  }\n  inputFields {\n    ...InputValue\n  }\n  &#xA;interfaces {\n    ...TypeRef\n  }\n  enumValues(includeDeprecated: true) {\n    name\n    &#xA;description\n    isDeprecated\n    deprecationReason\n  }\n  possibleTypes {\n    ...TypeRef\n  }\n}\n\nfragment InputValue on __InputValue {\n  name\n  description\n  type {\n    &#xA;...TypeRef\n  }\n  defaultValue\n}\n\nfragment TypeRef on __Type {\n  kind\n  name\n  ofType {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n  &#xA;          kind\n            name\n            ofType {\n              kind\n&#xA;name\n              ofType {\n                kind\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"",""variables"":{},""operationName"":""IntrospectionQuery""}&#xA;</code></pre>&#xA;&#xA;<p>RESPONSE:</p>&#xA;&#xA;<pre><code>Response {&#xA;  size: 0,&#xA;  timeout: 0,&#xA;  [Symbol(Body internals)]: {&#xA;    body: PassThrough {&#xA;      _readableState: [ReadableState],&#xA;      readable: true,&#xA;      _events: [Object: null prototype],&#xA;      _eventsCount: 2,&#xA;      _maxListeners: undefined,&#xA;      _writableState: [WritableState],&#xA;      writable: false,&#xA;      allowHalfOpen: true,&#xA;      _transformState: [Object]&#xA;    },&#xA;    disturbed: false,&#xA;    error: null&#xA;  },&#xA;  [Symbol(Response internals)]: {&#xA;    url: 'http://localhost:3000/graphql',&#xA;    status: 404,&#xA;    statusText: 'Not Found',&#xA;    headers: Headers { [Symbol(map)]: [Object: null prototype] },&#xA;    counter: 0&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That would make sense if my endpoint was incorrect, but if I try that exact request in postman, I do get a valid response:&#xA;<a href=""https://i.stack.imgur.com/jSwjW.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/jSwjW.png"" alt=""enter image description here""></a> </p>&#xA;&#xA;<p>Any ideas on why is that? Anything else I could check?</p>&#xA;&#xA;<p>Thanks</p>&#xA;",3506548,,,,2022-11-23 15:54:59,GraphQL Code Generator - Cannot load my GQL Schema from Nestjs server endpoint,<graphql><nestjs><graphql-codegen>,5,0,0,2020-03-05 12:58:02
60549787,2,,58814765,1,,"<p>This is indeed because the Prismic GraphQL api uses a GET instead of POST request. I actually did not find any tool which made it possible to introspect a GraphQL endpoint with a GET. After a little digging a came up with the following solution: </p>&#xA;&#xA;<ol>&#xA;<li>This code is based on <a href=""https://github.com/prismicio/apollo-link-prismic"" rel=""nofollow noreferrer"">prismic-apollo-link</a>. I modified it slightly since I'm using it in conjunction with Next JS (I needed isomorphic unfetch). If you're not using Next JS you will still need it since we need fetch to work in Node.</li>&#xA;</ol>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import {ApolloClient} from 'apollo-client'&#xA;import {InMemoryCache} from 'apollo-cache-inmemory'&#xA;import {HttpLink} from 'apollo-link-http'&#xA;import {setContext} from 'apollo-link-context'&#xA;import Prismic from 'prismic-javascript'&#xA;import fetch from 'isomorphic-unfetch'&#xA;&#xA;const baseEndpoint = 'https://&lt;your project&gt;.cdn.prismic.io'&#xA;const accessToken = '&lt;your access token&gt;'&#xA;&#xA;export default function createApolloClient(initialState, ctx) {&#xA;  const primicClient = Prismic.client(`${baseEndpoint}/api`, {accessToken})&#xA;&#xA;  const prismicLink = setContext((req, options) =&gt; {&#xA;    return primicClient.getApi().then(api =&gt; ({&#xA;      headers: {&#xA;        'Prismic-ref': api.masterRef.ref,&#xA;        ...options.headers,&#xA;        ...((api as any).integrationFieldRef&#xA;          ? {'Prismic-integration-field-ref': (api as any).integrationFieldRef}&#xA;          : {}),&#xA;        ...(accessToken ? {Authorization: `Token ${accessToken}`} : {}),&#xA;      },&#xA;    }))&#xA;  })&#xA;&#xA;  const httpLink = new HttpLink({&#xA;    uri: `${baseEndpoint}/graphql`,&#xA;    useGETForQueries: true,&#xA;    fetch,&#xA;  })&#xA;&#xA;  return new ApolloClient({&#xA;    ssrMode: Boolean(ctx),&#xA;    link: prismicLink.concat(httpLink),&#xA;    cache: new InMemoryCache().restore(initialState),&#xA;  })&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<ol start=""2"">&#xA;<li>Make a script to introspect the Prismic GraphQL server:</li>&#xA;</ol>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import createApolloClient from '../apolloClient'&#xA;import gql from 'graphql-tag'&#xA;import path from 'path'&#xA;import fs from 'fs'&#xA;&#xA;const client = createApolloClient({}, null)&#xA;&#xA;const main = async () =&gt; {&#xA;  try {&#xA;    const res = await client.query({&#xA;      query: gql`&#xA;        query IntrospectionQuery {&#xA;          __schema {&#xA;            queryType {&#xA;              name&#xA;            }&#xA;            mutationType {&#xA;              name&#xA;            }&#xA;            subscriptionType {&#xA;              name&#xA;            }&#xA;            types {&#xA;              ...FullType&#xA;            }&#xA;            directives {&#xA;              name&#xA;              description&#xA;              locations&#xA;              args {&#xA;                ...InputValue&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;&#xA;        fragment FullType on __Type {&#xA;          kind&#xA;          name&#xA;          description&#xA;          fields(includeDeprecated: true) {&#xA;            name&#xA;            description&#xA;            args {&#xA;              ...InputValue&#xA;            }&#xA;            type {&#xA;              ...TypeRef&#xA;            }&#xA;            isDeprecated&#xA;            deprecationReason&#xA;          }&#xA;          inputFields {&#xA;            ...InputValue&#xA;          }&#xA;          interfaces {&#xA;            ...TypeRef&#xA;          }&#xA;          enumValues(includeDeprecated: true) {&#xA;            name&#xA;            description&#xA;            isDeprecated&#xA;            deprecationReason&#xA;          }&#xA;          possibleTypes {&#xA;            ...TypeRef&#xA;          }&#xA;        }&#xA;&#xA;        fragment InputValue on __InputValue {&#xA;          name&#xA;          description&#xA;          type {&#xA;            ...TypeRef&#xA;          }&#xA;          defaultValue&#xA;        }&#xA;&#xA;        fragment TypeRef on __Type {&#xA;          kind&#xA;          name&#xA;          ofType {&#xA;            kind&#xA;            name&#xA;            ofType {&#xA;              kind&#xA;              name&#xA;              ofType {&#xA;                kind&#xA;                name&#xA;                ofType {&#xA;                  kind&#xA;                  name&#xA;                  ofType {&#xA;                    kind&#xA;                    name&#xA;                    ofType {&#xA;                      kind&#xA;                      name&#xA;                      ofType {&#xA;                        kind&#xA;                        name&#xA;                      }&#xA;                    }&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      `,&#xA;    })&#xA;&#xA;    if (res.data) {&#xA;      const schema = JSON.stringify(res.data)&#xA;      // Specify where the schema should be written to&#xA;      fs.writeFileSync(path.resolve(__dirname, '../../schema.json'), schema)&#xA;    } else {&#xA;      throw new Error('No Data')&#xA;    }&#xA;    process.exit()&#xA;  } catch (e) {&#xA;    console.log(e)&#xA;    process.exit(1)&#xA;  }&#xA;}&#xA;&#xA;main()&#xA;</code></pre>&#xA;&#xA;<ol start=""3"">&#xA;<li>Include the script your <code>codegen.yml</code>:</li>&#xA;</ol>&#xA;&#xA;<pre class=""lang-yaml prettyprint-override""><code>schema: ""./schema.json""&#xA;documents: ./src/**/*.graphql&#xA;generates:&#xA;  ./src/generated.tsx:&#xA;    plugins:&#xA;      - typescript&#xA;      - typescript-operations&#xA;      - typescript-react-apollo&#xA;    config:&#xA;      withHooks: true&#xA;      withComponent: false&#xA;hooks:&#xA;  afterStart:&#xA;    - ts-node  &lt;path to script&gt;/introspectPrismic.ts&#xA;</code></pre>&#xA;&#xA;<p>Maybe it is not the most elegant solution but it works!</p>&#xA;",9240492,,,,2020-03-05 16:19:01,"",,0,2,0,2020-03-05 16:19:01
60551054,1,,,0,556,"<p>community - can anyone tell me, why i'm getting this error message every time i try to deploy my sanity graphQl? (See image and code snippet).</p>&#xA;&#xA;<pre><code>u: Internal Server Error - An internal server error occurred&#xA;at onResponse (~/Documents/webdev/Zignifikant/Zignifikant/cms/node_modules/@sanity/cli/bin/sanity-cli.js:4504:497)&#xA;at ~/Documents/webdev/Zignifikant/Zignifikant/cms/node_modules/@sanity/cli/bin/sanity-cli.js:2820:241&#xA;at Array.reduce (&lt;anonymous&gt;)&#xA;at ~/Documents/webdev/Zignifikant/Zignifikant/cms/node_modules/@sanity/cli/bin/sanity-cli.js:2820:225&#xA;at ~/Documents/webdev/Zignifikant/Zignifikant/cms/node_modules/@sanity/cli/bin/sanity-cli.js:2808:919&#xA;at ~/Documents/webdev/Zignifikant/Zignifikant/cms/node_modules/@sanity/cli/bin/sanity-cli.js:2808:1028&#xA;at x (~/Documents/webdev/Zignifikant/Zignifikant/cms/node_modules/@sanity/cli/bin/sanity-cli.js:2856:1442)&#xA;at ~/Documents/webdev/Zignifikant/Zignifikant/cms/node_modules/@sanity/cli/bin/sanity-cli.js:2856:2885&#xA;at u.&lt;anonymous&gt; (~/Documents/webdev/Zignifikant/Zignifikant/cms/node_modules/@sanity/cli/bin/sanity-cli.js:1554:181)&#xA;</code></pre>&#xA;&#xA;<p>error Command failed with exit code 1.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/c4Sin.png"" rel=""nofollow noreferrer"">Image of my error</a></p>&#xA;",12763189,,,,2020-03-05 17:32:45,Internal Server Error - An internal server error occurred // SANITY // GATSBY,<graphql><gatsby><sanity>,0,3,0,2020-03-05 17:32:45
60565372,1,61045272,,4,1160,"<p>I don't know exactly how to express it in words to find related problems. In some cases, apparently random, when using JavaScript string templates, the text editor loses becomes white, with bold text and makes editing the code very difficult.</p>&#xA;&#xA;<p>First appearance of the problem was when I started working with javascript string for GraphQL query, then it started showing up working with React and mainly storybook.</p>&#xA;&#xA;<p>The problem does not always occur instantly, for example, I am editing the code and it works perfectly, when I restart the machine and reopen vscode, the template is like this.</p>&#xA;&#xA;<p><strong>The question is, what is the source of this problem and how can I fix it to keep the original hightlight to work?</strong></p>&#xA;&#xA;<p>[EDIT] After disable all extensions, the issue still happen.</p>&#xA;&#xA;<p>This is the minimal example possible without extensions: &#xA;<a href=""https://i.stack.imgur.com/48FTA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/48FTA.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<pre><code>const text1 = `&#xA;  This is a test&#xA;`&#xA;&#xA;const text2 = `&#xA;  This is a test ${string}&#xA;`&#xA;&#xA;const text3 = `&#xA;  This is a test this is a test ${string}&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>What is the exact vscode configuration that set to keep string like text1 and text2 in any possible case? </p>&#xA;",2420666,,540955,2020-03-29 16:52:30,2022-05-24 17:11:01,VSCODE Javascript template string become white and lost highlight in a non deterministic way,<javascript><reactjs><visual-studio-code><graphql><storybook>,3,9,0,2020-03-06 13:46:12
60575418,2,,60567956,0,,"<p>The following sample works: </p>&#xA;&#xA;<pre><code>#!/usr/bin/env python&#xA;&#xA;from ariadne import gql, QueryType, make_executable_schema&#xA;from ariadne.wsgi import GraphQL&#xA;&#xA;type_defs = gql(""""""&#xA;    type Query {&#xA;        hello: String!&#xA;    }&#xA;"""""")&#xA;&#xA;query = QueryType()&#xA;&#xA;@query.field(""hello"")&#xA;def resolve_hello(_, info):&#xA;    ##request = info.context[""request""]&#xA;    ##user_agent = request.headers.get(""user-agent"", ""guest"")&#xA;    user_agent = info.context[""HTTP_USER_AGENT""]&#xA;    return ""Hello, %s!..."" % user_agent #&#xA;&#xA;schema = make_executable_schema(type_defs, query)&#xA;application = GraphQL(schema, debug=True)&#xA;&#xA;if __name__ == '__main__':&#xA;    do_single = False&#xA;    from wsgiref.simple_server import make_server&#xA;    httpd = make_server('localhost', 8051, application)&#xA;    if do_single:&#xA;        # Wait for a single request, serve it and quit.&#xA;        httpd.handle_request()&#xA;    else:&#xA;        httpd.serve_forever(.5)&#xA;</code></pre>&#xA;&#xA;<p>Basically it is the same code provided by the Ariadne intro sample with two changes. For one, it fixed info.context which does not have a request member. And the second is to pass the application to a wsgiref.simple_server.make_server() call. </p>&#xA;&#xA;<p>Once this sample server is running, the Ariadne built-in playground will show in browser the actual request that you can send. It shows two ways of sending a query: </p>&#xA;&#xA;<p>Post from the playground panel: </p>&#xA;&#xA;<pre><code>        query { hello }&#xA;</code></pre>&#xA;&#xA;<p>Or a playground button tip shows the same request sent through curl: </p>&#xA;&#xA;<pre><code>        curl 'http://localhost:8051/graphql' \&#xA;           -H 'Accept-Encoding: gzip, deflate, br' \&#xA;           -H 'Content-Type: application/json' \&#xA;           -H 'Accept: application/json' -H 'Connection: keep-alive' \&#xA;           -H 'DNT: 1' -H 'Origin: http://localhost:8051' \&#xA;           --data-binary '{""query"":""{hello}""}' --compressed&#xA;</code></pre>&#xA;&#xA;<p>The playground also sends introspection queries. Those queries are updated every second or so. The schema is used to validate the query typed by the user into the panel. </p>&#xA;&#xA;<p>A client, which is not tied to Ariadne can be used to send the same request from python: </p>&#xA;&#xA;<pre><code>#!/usr/bin/env python&#xA;#    https://github.com/prisma-labs/python-graphql-client&#xA;&#xA;from graphqlclient import GraphQLClient&#xA;&#xA;client = GraphQLClient('http://127.0.0.1:8051/')&#xA;&#xA;result = client.execute('''&#xA;{&#xA;  hello&#xA;}&#xA;''')&#xA;&#xA;print(result)&#xA;</code></pre>&#xA;",362754,,,,2020-03-07 07:35:45,"",,0,0,0,2020-03-07 07:35:45
60591317,1,60591890,,0,1666,"<p>I have this code in <code>index.js</code>:</p>&#xA;&#xA;<pre><code>const PORT = process.env.PORT || 5000;&#xA;server.listen(PORT).then({ url }) =&gt; {&#xA;  console.log(`Server running at url: ${url}`);&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>In local development, when I went to <code>localhost:5000</code> on my browser, I could test with the <code>GraphQL</code> playground.</p>&#xA;&#xA;<p>Now, I just finished deploying with Heroku. When I go to my URL, I see:&#xA;<code>GET query missing.</code> I assume this happens because apollo is trying to open the <code>GraphQL</code> playground, but it is blocked in production mode.</p>&#xA;&#xA;<p>How can I tell apollo to serve <code>client/index.html</code> instead?</p>&#xA;&#xA;<p>Note: I tried putting index.html in the root directory as well, but nothing changed.</p>&#xA;&#xA;<p>I saw in a tutorial video that the answer to this question in express is:</p>&#xA;&#xA;<pre><code>app.use(express.static('client'));&#xA;&#xA;app.get('*', (req, res) =&gt; {&#xA;  res.sendFile(path.resolve(__dirname, 'client','index.html'));&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I don't know how to do this in Apollo.</p>&#xA;",11587741,,11587741,2020-03-08 19:40:27,2020-03-08 20:43:34,How to serve index.html file with Apollo Server?,<html><heroku><apollo>,1,0,0,2020-03-08 19:35:23
60634902,2,,60632660,9,,"<p>According to this <a href=""https://github.com/nestjs/graphql/issues/38"" rel=""noreferrer"">thread</a> resolver <code>context</code> parameter should contain <code>req</code> but it depends [on configuration].</p>&#xA;&#xA;<p>Resolvers typically takes <code>(parent, args, context, info)</code> arguments - check if context is defined in yours.</p>&#xA;",6124657,,,,2020-03-11 11:23:41,"",,0,1,0,2020-03-11 11:23:41
60640384,1,,,6,1441,"<p>I want to make a subscription to a GraphQL server. The application is running in a NodeJS script (i.e. not in the webbrowser).</p>&#xA;&#xA;<p>Here is what I currently do:</p>&#xA;&#xA;<pre><code>const fetch = require(""node-fetch"").default;&#xA;const apollo = require(""apollo-boost"");&#xA;const ApolloClient = apollo.default;&#xA;const { gql } = require(""apollo-server"");&#xA;&#xA;const apolloClient = new ApolloClient({&#xA;  uri: ""http://localhost:4000/graphql"",&#xA;  fetch&#xA;});&#xA;&#xA;apolloClient.subscribe({&#xA;  query: gql`&#xA;    subscription {&#xA;      startTaskRequested {&#xA;        pkRobot&#xA;        taskName&#xA;      }&#xA;    }&#xA;  `,&#xA;}).subscribe({&#xA;  next(x) { console.log(x) },&#xA;  error(err) { console.log(`Finished with error: ${ err }`) },&#xA;  complete() { console.log('Finished') }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>The resulting ouput is:</p>&#xA;&#xA;<pre><code>{ data: { startTaskRequested: null } }&#xA;Finished&#xA;</code></pre>&#xA;&#xA;<p>On the GraphQL Server, I can see that the corresponding resolver is never called.</p>&#xA;&#xA;<p>If I make the same subscription query using Apollo's Playground, the subscription works and I get the results that I expect: <a href=""https://i.stack.imgur.com/WcfJQ.png"" rel=""noreferrer"">Apollo Playground</a></p>&#xA;&#xA;<p>I bumped my head against this for many hours already and I would greatly appreciate it if someone could point me in the right direction.</p>&#xA;",9182730,,6231376,2020-03-12 10:11:41,2021-11-25 06:23:32,How do I make GraphQL subscriptions in NodeJS via Apollo Client?,<node.js><graphql><apollo><apollo-client><graphql-subscriptions>,2,0,0,2020-03-11 16:18:32
60642395,2,,60641825,2,,"<p>I found I only need to make the typeName: ""Query"" and the fieldName: ""blah"".</p>&#xA;&#xA;<p><a href=""https://stackoverflow.com/questions/55355700/error-invariant-violation-gatsby-source-graphql-requires-option-typename-to"">Error: Invariant Violation: gatsby-source-graphql requires option `typeName` to be specified</a></p>&#xA;&#xA;<pre><code>{&#xA; resolve: ""gatsby-source-graphql"",&#xA; options: {&#xA;  // This type will contain remote schema Query type&#xA;  typeName: ""Query"",&#xA;  // This is field under which it's accessible&#xA;  fieldName: ""blah"",&#xA;  // Url to query from&#xA;  url: ""http://10.113.34.59:4000/graphql"",&#xA;  // this is URL where served exposed its service in local&#xA; },&#xA;</code></pre>&#xA;",0,user12367923,,,2020-03-11 18:26:12,"",,0,0,0,2020-03-11 18:26:12
60661203,2,,60660932,0,,"<ol>&#xA;<li>Your GraphQL mutation is invalid, you declared variables but didn't used them. You should have somthing like this: </li>&#xA;</ol>&#xA;&#xA;<pre><code>const UPDATE_RESULT_MUTATION = gql`&#xA;    mutation updateResultMutation($number: Int!, $input: updateResultInput){&#xA;        updateResult(number: $number, input: $input) {&#xA;            number&#xA;            name  &#xA;        }&#xA;    }&#xA;`&#xA;</code></pre>&#xA;&#xA;<ol start=""2"">&#xA;<li>To execute mutation with some variables you should use this syntax:</li>&#xA;</ol>&#xA;&#xA;<pre><code>          mutation({ variables: {&#xA;                number: 1, &#xA;                input: &#xA;                  {&#xA;                     inputField: ""inputValue"",&#xA;                     //... more fields from your state&#xA;                  } &#xA;          });&#xA;</code></pre>&#xA;&#xA;<p>I'd suggest to rename variables to something more meaningfull -  for example  <code>mutation -&gt; executeUpdateMutation</code></p>&#xA;",921193,,,,2020-03-12 20:06:26,"",,0,1,0,2020-03-12 20:06:26
60676365,2,,59778209,1,,"<p>Look like you use CDN cdn77.<br>&#xA;It is their second name.<br>&#xA;Or some of scripts which you includes, use cdn77 for host some scripts.</p>&#xA;&#xA;<p><a href=""https://www.peeringdb.com/org/19169"" rel=""nofollow noreferrer"">https://www.peeringdb.com/org/19169</a></p>&#xA;",1504248,,,,2020-03-13 19:38:13,"",,0,1,0,2020-03-13 19:38:13
60688706,1,60738310,,0,501,"<p>I have a React/apollo client and an apollo/neo4j backend application based on GRANDStack. &#xA;My React app runs on localhost:3000 and my GraphQL on localhost:4001/graphql, and they communicate without fail. All is working well in the app (with CORS enabled), but I wanted to implement testing with Cypress.</p>&#xA;&#xA;<p>Should I expect Cypress to be able to observe the flow between React and GraphQL without error? Or is this beyond its capability?</p>&#xA;&#xA;<p><strong>What I've tried:</strong>&#xA;I set up Cypress and ran the following test: </p>&#xA;&#xA;<pre><code>it(""Opens myPlan."", function() {&#xA;    cy.visit(""localhost:3000/myPlan"");&#xA;    cy.wait(6000);&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>At first cypress setup, my site loaded. One of the first things that the app does is graphql query a few values, and create a dropdown box based on those values. While this and all other graphql requests work fine in the browser, I get <code>""{""graphQLErrors"":[],""networkError"":{""name"":""ServerParseError"",""response"":{},""statusCode"":404,""bodyText"":""""},""message"":""Network error: Unexpected end of JSON input""}""</code> errors in cypress for the same code.</p>&#xA;&#xA;<p>Presumably, the problem was because there are 2 endpoints, and cy.visit only allows one. I tried disabled ChromeWebSecurity and tried an ""Access-Control-Allow-Origin-master"" plugin.</p>&#xA;&#xA;<p><strong>Edit:</strong> I found someone that knew Cypress, and they suggested adding:</p>&#xA;&#xA;<pre><code>""proxy"": ""http://localhost:4001/"",&#xA;</code></pre>&#xA;&#xA;<p>to my react client config. This avoids the multi-port issues, and Cypress works.</p>&#xA;",7149872,,162698,2020-03-16 12:16:35,2021-04-15 09:55:47,Why does running Cypress on a React/GraphQL app return network errors when normal browsing doesn't?,<graphql><cypress><grandstack>,1,3,0,2020-03-15 00:42:55
60720099,1,,,0,196,"<p>I'm working on implementing <a href=""https://graphql-tools-fork.netlify.com/docs/graphql-tools-fork/schema-stitching/"" rel=""nofollow noreferrer"">schema stitching</a> in a NodeJS/Apollo/GraphQL project I'm working on.  It's written in TypeScript.</p>&#xA;&#xA;<p>The code is</p>&#xA;&#xA;<pre><code>import {&#xA;    makeRemoteExecutableSchema,&#xA;    introspectSchema,&#xA;    mergeSchemas&#xA;} from 'graphql-tools';&#xA;import { HttpLink } from 'apollo-link-http';&#xA;import fetch from 'node-fetch';&#xA;&#xA;&#xA;export default  async () =&gt; {&#xA;    const link = new HttpLink({&#xA;        uri:'http://localhost:4545',&#xA;        fetch&#xA;    })&#xA;    const remoteSchema = await introspectSchema(link);&#xA;    // Make remote executable schema&#xA;    return makeRemoteExecutableSchema({&#xA;        schema: remoteSchema,&#xA;        link&#xA;    });&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and it's complaining that</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/WFnm9.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WFnm9.png"" alt=""enter image description here""></a>.  </p>&#xA;&#xA;<p>The referenced section of the types file is</p>&#xA;&#xA;<pre><code>export interface HttpOptions {&#xA;    uri?: string | UriFunction;&#xA;    includeExtensions?: boolean;&#xA;    fetch?: WindowOrWorkerGlobalScope['fetch'];&#xA;    headers?: any;&#xA;    credentials?: string;&#xA;    fetchOptions?: any;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This seems to be a <a href=""https://github.com/apollographql/apollo-link/issues/1131"" rel=""nofollow noreferrer"">bug that has been fixed</a>, but it doesn't seem fixed here, although I'm using the latest versions and the line </p>&#xA;&#xA;<p><code>fetch?: WindowOrWorkerGlobalScope['fetch'];</code> </p>&#xA;&#xA;<p>does seem to be what is recommended for one of the workarounds, hence, it should be fixed.</p>&#xA;&#xA;<p>For what it's worth, my <code>package.json</code> is</p>&#xA;&#xA;<pre><code>{&#xA;  ""dependencies"": {&#xA;&#xA;    ""apollo-datasource-graphql"": ""^1.3.2"",&#xA;    ""apollo-datasource-rest"": ""^0.7.0"",&#xA;    ""apollo-link-http"": ""^1.5.16"",&#xA;    ""apollo-server"": ""^2.10.1"",&#xA;    ""axios"": ""^0.19.2"",&#xA;    ""dotenv"": ""^8.2.0"",&#xA;    ""graphql"": ""^14.6.0"",&#xA;    ""graphql-tools"": ""^4.0.7"",&#xA;    ""https-proxy-agent"": ""^5.0.0"",&#xA;    ""node-fetch"": ""^2.6.0"",&#xA;    ""uuid"": ""^7.0.1""&#xA;  },&#xA;  ""devDependencies"": {&#xA;    ""@types/node"": ""^13.9.1"",&#xA;    ""@types/ramda"": ""^0.26.43"",&#xA;    ""babel-eslint"": ""^10.0.3"",&#xA;    ""eslint"": ""^6.8.0"",&#xA;    ""eslint-config-airbnb-base"": ""^14.0.0"",&#xA;    ""eslint-config-prettier"": ""^6.10.0"",&#xA;    ""eslint-plugin-prettier"": ""^3.1.2"",&#xA;    ""pino"": ""^5.16.0"",&#xA;    ""prettier"": ""^1.19.1"",&#xA;    ""ramda"": ""^0.26.1"",&#xA;    ""typescript"": ""^3.8.3""&#xA;  },&#xA;  ""scripts"": {&#xA;    ""dev"": ""tsc &amp;&amp; node dist/index.js""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any clues much appreciated!</p>&#xA;",2014843,,2014843,2020-03-17 10:57:52,2020-04-30 03:24:43,"TypeScript, Apollo GraphQL yield not assignable"" error for node-fetch",<node.js><typescript><graphql><apollo><apollo-server>,1,0,0,2020-03-17 10:05:59
60721013,2,,60720764,1,,"<p>You need to use the <code>master</code> version of API Platform (or to wait for the new release).&#xA;The page-based pagination has been added in it.</p>&#xA;&#xA;<p>See <a href=""https://api-platform.com/docs/master/core/graphql/#using-the-page-based-pagination"" rel=""nofollow noreferrer"">https://api-platform.com/docs/master/core/graphql/#using-the-page-based-pagination</a> for the documentation.</p>&#xA;",5049897,,,,2020-03-17 11:01:04,"",,0,1,0,2020-03-17 11:01:04
60723321,2,,60670255,0,,"<p>Note that proxies can mangle requests and break them, so you may need to debug your proxy first.</p>&#xA;&#xA;<p>Furthermore, make sure that the API key you're using to call Google's Places API has whitelisted the proxy's IP address in its <a href=""https://developers.google.com/places/web-service/get-api-key#restrict_key"" rel=""nofollow noreferrer"">application restrictions</a>.</p>&#xA;&#xA;<p>Finally, check that your firewall isn't blocking these requests. See <a href=""https://stackoverflow.com/a/58746596/11742502"">this answer</a>.</p>&#xA;&#xA;<p>Hope this helps!</p>&#xA;",11742502,,11742502,2020-03-24 11:02:37,2020-03-24 11:02:37,"",,0,0,0,2020-03-17 13:23:23
60730117,2,,60714908,0,,"<p>As per @DanielRearden's suggestion, I migrated to the new apollo-client version, and it fixed all my issues. Looks like it was a bug <code>¯\_(ツ)_/¯</code></p>&#xA;",3091753,,1839439,2020-03-17 22:12:37,2020-03-17 22:12:37,"",,0,0,0,2020-03-17 20:57:18
60732251,1,,,1,75,"<p>Is there any way to disable caching during run time if ever the Redis server suddenly fails, for example, a graphic query has been carried out fine in the first request and assuming the response is cached, but suddenly the redis server crashed for some reason and this causes the succeeding request to stuck in loading until such time it times out.</p>&#xA;",10411326,,,,2020-03-18 01:11:16,Apollo Server: How to disregard/bypass caching if Redis connection is lost during run time,<graphql><apollo-server>,0,0,0,2020-03-18 01:11:16
60739197,2,,60719786,0,,"<p>This was staring me in the face, but they warnings were being drowned out in the console. Cookies need to be set with in Chrome.</p>&#xA;&#xA;<pre><code>{&#xA;  ...,&#xA;  sameSite: false,&#xA;  secure: true&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The console had these links to provide insight: </p>&#xA;&#xA;<p><a href=""https://www.chromestatus.com/feature/5088147346030592"" rel=""nofollow noreferrer"">https://www.chromestatus.com/feature/5088147346030592</a></p>&#xA;&#xA;<p><a href=""https://www.chromestatus.com/feature/5633521622188032"" rel=""nofollow noreferrer"">https://www.chromestatus.com/feature/5633521622188032</a></p>&#xA;&#xA;<p>This is a very recent change in Chrome, and I only realized that there was a difference because I randomly opened my site in Firefox, and it worked.</p>&#xA;",4541958,,,,2020-03-18 12:04:27,"",,0,0,0,2020-03-18 12:04:27
60739724,1,,,-2,1156,"<p>I'm trying to query from database when user select a machine from a <code>select input</code> field (which data is also coming from database). I'm using redux-form. My code is like below:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>&lt;div className='universal_form-input'&gt;&#xA;  &lt;label&gt;Mechine Name&lt;/label&gt;&#xA;    &lt;Field&#xA;      type='number'&#xA;      name='machine'&#xA;      component={this.renderSelect}&#xA;     /&gt;&#xA;&lt;/div&gt;&#xA;</code></pre>&#xA;&#xA;<p>And the <code>select input</code> filled with Machine name and <code>value</code> is the <code>id</code> of the corresponding Machine. Now when user will select a machine it state will be updated with the <code>id</code> value of that machine.</p>&#xA;&#xA;<p>On <code>handleChange</code> I'm trying to invoke a method named <code>queryMachineById</code> which should fetch data by specific <code>machine id</code>. And the query should return <code>noOfDispenser</code> of that machine from database. (BTW this query is working on GraphQL playground)</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>handleChange = (event, input) =&gt; {&#xA;    event.preventDefault();&#xA;    const { name, value } = event.target;&#xA;    input.onChange(value);&#xA;    this.setState({ [name]: value });&#xA;    setTimeout(() =&gt; {&#xA;      this.queryMachineById();&#xA;    }, 1000);&#xA;  };&#xA;</code></pre>&#xA;&#xA;<p><code>queryMachineById</code> method is written like below:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code> queryMachineById = () =&gt; {&#xA;    const machineId = parseInt(this.state.machine);&#xA;    console.log(typeof machineId, machineId);&#xA;    return (&#xA;      &lt;Query query={MACHINE_BY_ID_QUERY} variables={{ machineId }}&gt;&#xA;        {({ data, loading, error }) =&gt; {&#xA;          if (loading) return &lt;p&gt;Loading...&lt;/p&gt;;&#xA;          if (error) return &lt;p&gt;Error&lt;/p&gt;;&#xA;          console.log(data);&#xA;          return data.machineById.map(&#xA;            machine =&gt; (initialValues.dispenserNo = machine.noOfDispensers)&#xA;          );&#xA;        }}&#xA;      &lt;/Query&gt;&#xA;    );&#xA;  };&#xA;</code></pre>&#xA;&#xA;<p><code>machineId</code> is also updating with valid <code>id</code> from state. But the <code>console.log(data)</code> inside the <code>queryMachineById</code> is not showing anything, not even empty <code>{}</code> </p>&#xA;&#xA;<p>My <code>GraphQL query</code> looks like this:</p>&#xA;&#xA;<pre><code>export const MACHINE_BY_ID_QUERY = gql`&#xA;  query MACHINE_BY_ID_QUERY($machineId: Int!) {&#xA;    machineById(machineId: $machineId) {&#xA;      id&#xA;      noOfDispensers&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p><code>onClick</code> is also not working. </p>&#xA;",9319451,,1233251,2020-03-19 16:51:07,2020-03-21 12:19:53,"Query from database on onChange event inside select input in React, Redux-Form and GraphQL",<javascript><reactjs><graphql><redux-form><react-apollo>,1,2,0,2020-03-18 12:36:19
60750279,2,,59690194,4,,"<p>Anyone coming here because they're using Craft CMS headless the answer above is correct but to save you some reading basically you have to let Apollo of the schema.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import possibleTypes from './possibleTypes.json';&#xA;import { InMemoryCache, IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';&#xA;const fragmentMatcher = new IntrospectionFragmentMatcher({&#xA;    introspectionQueryResultData: possibleTypes&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>Where you define your client add the following</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>cache: new InMemoryCache({&#xA;    fragmentMatcher&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>To generate your schema you can either do the query below once and then paste the results into <code>possibleTypes.json</code> (wouldn't recommend as you'll be doing it a lot) OR alternatively add that process to your <code>nuxtInitServer</code> function to keep it updated automatically.</p>&#xA;&#xA;<pre><code>query {&#xA;  __schema {&#xA;    types {&#xA;      name&#xA;      kind&#xA;      possibleTypes {&#xA;        name&#xA;        description&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1128680,,,,2020-03-19 02:53:58,"",,0,2,0,2020-03-19 02:53:58
60757895,1,,,3,243,"<p>I have an existing application in which I've encountered a problem.&#xA;The root of the problem, as far as I know, lies in a broken Apollo query (for example, when trying to spread <code>data</code> whilest it's still <code>undefined</code>). This leads to a wierd UI, in which there are humongous icons and to a <strong>warning of such kind</strong>:</p>&#xA;&#xA;<p><code>Warning: Prop className did not match. Server: ""MuiSvgIcon-root-69"" Client: ""MuiSvgIcon-root""</code></p>&#xA;&#xA;<p>After some research, I found out that the reason of this may be the <code>disableGeneration</code> prop which should be set to <code>true</code> for performance reasons, but I also suspect that if it's turned on then MUI skips the className generation and yields correct classnames as the result.</p>&#xA;&#xA;<p>The question is: what is the correct way to use it, or is there any other way to fix this issue? My stacks is as follows:</p>&#xA;&#xA;<ul>&#xA;<li>next.js 9.1.1</li>&#xA;<li>material UI 4.6.0</li>&#xA;<li>react-apollo 3.1.2</li>&#xA;</ul>&#xA;&#xA;<p>I have tried several combinations of using <code>StylesProvider</code> and <code>ServerStyleSheets</code>, though I haven't managed to get the job done. Currently I'm using this in <code>_document.js</code>:</p>&#xA;&#xA;<pre><code>const sheets = new ServerStyleSheets({&#xA;  injectFirst: true&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>And this is the way I use <code>getDataFromTree</code>, though it looks quite odd to me:</p>&#xA;&#xA;<pre><code>const sheets = new ServerStyleSheets({&#xA;  disableGeneration: true&#xA;});&#xA;&#xA;await getDataFromTree(sheets.collect(&lt;AppTree {...appProps} /&gt;));&#xA;</code></pre>&#xA;&#xA;<p>I had done a lot of googling but couldn't find a concise result of how to use SSR with Apollo &amp; Material. Any help would be much appreciated :)</p>&#xA;",5659471,,,,2020-03-19 13:07:29,Configuring Material UI with Next.js and react-apollo; correct usage of getDataFromTree,<javascript><reactjs><material-ui><next.js><react-apollo>,0,1,0,2020-03-19 13:07:29
60786793,2,,60785501,0,,<p>I guess the reason why it does not work is because the image prismagraphql/prisma:1.34 has an entrypoint and at the end of the Dockerfile there is another entrypoint. Docker accepts only a single entrypoint in a Dockerfile...</p>&#xA;,9932078,,,,2020-03-21 10:38:42,"",,0,0,0,2020-03-21 10:38:42
60789668,2,,60785501,0,,"<p>First: In your code, you put the MongoDB container on a specific named network called <code>prisma</code> but you do not do the same thing with the prisma container. When using compose, containers on the same overlay network are resolved by name, but requests will only be routed between containers if they're on the same network.</p>&#xA;&#xA;<p>Next: you shouldn't be running two servers in the same container. It's better to not build your app on top of the prisma image at all, but to build it instead on top of alpine or ubuntu (or anything else really). It should connect to another container where the prisma server is running. In the comments you say that you really want to do this, but you really shouldn't. It's not much harder to run a compose configuration on a client's server rather than a single container, but it is that much harder to run 2 servers in a single container.</p>&#xA;&#xA;<p>Finally: The localhost reference (nexus you say?) should be configurable in some way. Find out how, and have it address something like '<a href=""http://prisma:4466"" rel=""nofollow noreferrer"">http://prisma:4466</a>'. In this way you'll have 3 containers -- mongodb, prisma, and your own app.</p>&#xA;",2051454,,,,2020-03-21 15:30:37,"",,0,0,0,2020-03-21 15:30:37
60801428,2,,60800218,9,,"<p>In order to accomplish this, we need to access the code that gets run every time a <code>fetch</code> happens. This code lives inside your Apollo client's HttpLink. While the <code>@nuxtjs/apollo</code> module gives us many options, we can't quite configure this at such a high level. </p>&#xA;&#xA;<h2>Step 1: Creating a client plugin</h2>&#xA;&#xA;<p>As noted in the <a href=""https://github.com/nuxt-community/apollo-module#setup"" rel=""noreferrer"">setup section</a> of the Apollo module's docs, we can supply a path to a plugin that will define a <code>clientConfig</code>:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>// nuxt.config.js&#xA;{&#xA;  apollo: {&#xA;    clientConfigs: {&#xA;      default: '~/plugins/apollo-client.js'&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This plugin should export a function which receives the <a href=""https://nuxtjs.org/api/context#__layout"" rel=""noreferrer"">nuxt context</a>. It should return the configuration to be passed to the <a href=""https://github.com/Akryum/vue-cli-plugin-apollo/blob/master/graphql-client/src/index.js#L14"" rel=""noreferrer""><code>vue-cli-plugin-apollo</code>'s <code>createApolloClient</code> utility</a>. You don't need to worry about that file, but it is how <code>@nuxtjs/apollo</code> creates the client internally. </p>&#xA;&#xA;<h2>Step 2: Creating the custom <code>httpLink</code></h2>&#xA;&#xA;<p>In <code>createApolloClient</code>'s options, we see we can disable <code>defaultHttpLink</code> and instead supply our own <code>link</code>. <code>link</code> needs to be the output of Apollo's official <code>createHttpLink</code> utility, docs for which can be found <a href=""https://www.apollographql.com/docs/link/links/http/"" rel=""noreferrer"">here</a>. The option we're most interested in is the <code>fetch</code> option which as the docs state, is</p>&#xA;&#xA;<blockquote>&#xA;  <p>a <code>fetch</code> compatible API for making a request</p>&#xA;</blockquote>&#xA;&#xA;<p>This boils down to meaning a function that takes <code>uri</code> and <code>options</code> parameters and returns a <code>Promise</code> that represents the network interaction. </p>&#xA;&#xA;<h2>Step 3: Creating the custom <code>fetch</code> method</h2>&#xA;&#xA;<p>As stated above, we need a function that takes <code>uri</code> and <code>options</code> and returns a promise. This function will be a simple passthrough to the standard <code>fetch</code> method (you may need to add <code>isomorphic-fetch</code> to your dependencies and import it here depending on your setup). </p>&#xA;&#xA;<p>We'll extract your cookie the same as you did in your question, and then set it as a header. The fetch function should look like this: </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>(uri, options) =&gt; {&#xA;  const token = Cookies.get('XSRF-TOKEN')&#xA;&#xA;  options.headers['X-XSRF-TOKEN'] = token&#xA;&#xA;  return fetch(uri, options)&#xA;}&#xA;</code></pre>&#xA;&#xA;<h2>Putting it all together</h2>&#xA;&#xA;<p>Ultimately, your <code>~/plugins/apollo-client.js</code> file should look something like this:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import { createHttpLink } from 'apollo-link-http'&#xA;import fetch from 'isomorphic-fetch'&#xA;&#xA;export default function(context) {&#xA;  return {&#xA;    defaultHttpLink: false,&#xA;    link: createHttpLink({&#xA;      uri: '/graphql',&#xA;      credentials: 'include',&#xA;      fetch: (uri, options) =&gt; {&#xA;        const token = Cookies.get('XSRF-TOKEN')&#xA;&#xA;        options.headers['X-XSRF-TOKEN'] = token&#xA;&#xA;        return fetch(uri, options)&#xA;      }&#xA;    })&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6036033,,,,2020-03-22 15:48:17,"",,0,0,0,2020-03-22 15:48:17
60804372,1,,,5,4839,"<p>I've been having issues getting started with React, Apollo, and AWS-AppSync. I can't resolve this error message:</p>&#xA;&#xA;<pre><code>TypeError: this.currentObservable.query.getCurrentResult is not a function&#xA;</code></pre>&#xA;&#xA;<p>I'm using the updated packages of @apollo/react-hooks and aws-appsync.</p>&#xA;&#xA;<p>My current setup looks like this.</p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import ReactDOM from 'react-dom';&#xA;import './index.css';&#xA;import App from './App';&#xA;import * as serviceWorker from './serviceWorker';&#xA;&#xA;import config from './aws-exports';&#xA;import AWSAppSyncClient from 'aws-appsync';&#xA;import { ApolloProvider } from '@apollo/react-hooks';&#xA;&#xA;const client = new AWSAppSyncClient({&#xA;    url: config.aws_appsync_graphqlEndpoint,&#xA;    region: config.aws_appsync_region,&#xA;    auth: {&#xA;        type: config.aws_appsync_authenticationType,&#xA;        apiKey: config.aws_appsync_apiKey&#xA;    }&#xA;});&#xA;&#xA;ReactDOM.render(&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;        &lt;React.StrictMode&gt;&#xA;            &lt;App /&gt;&#xA;        &lt;/React.StrictMode&gt;&#xA;    &lt;/ApolloProvider&gt;,&#xA;    document.getElementById('root')&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>And I have a function that makes a query that looks like this:</p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import { useQuery } from '@apollo/react-hooks';&#xA;import gql from 'graphql-tag';&#xA;&#xA;const Flavors = () =&gt; {&#xA;&#xA;    const GET_FLAVORS = gql`&#xA;        query listAll {&#xA;            items {&#xA;                name,&#xA;                image&#xA;            }&#xA;        }&#xA;    `;&#xA;&#xA;    const { loading, error, data } = useQuery(GET_FLAVORS);&#xA;&#xA;    if(loading) return &lt;p&gt;loading...&lt;/p&gt;&#xA;    if(error) return &lt;p&gt;Something went wrong...&lt;/p&gt;&#xA;&#xA;    return (&#xA;        &lt;div&gt;&#xA;        {&#xA;            data.listIceCreamTypes.items.map(type =&gt; {&#xA;                return &lt;div key={type.name}&gt;&#xA;                    &lt;img src={type.image} alt={type.name} /&gt;&#xA;                    &lt;h1&gt;{type.name}&lt;/h1&gt;&#xA;                &lt;/div&gt;&#xA;            })&#xA;        }&#xA;        &lt;/div&gt;&#xA;    )&#xA;}&#xA;&#xA;export default Flavors;&#xA;</code></pre>&#xA;&#xA;<p>I've gone through various solutions described in <a href=""https://github.com/apollographql/react-apollo/issues/3148"" rel=""noreferrer"">https://github.com/apollographql/react-apollo/issues/3148</a> such as adding:</p>&#xA;&#xA;<pre><code>""resolutions"": {&#xA;    ""apollo-client"": ""2.6.3""&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>to package.json. Then re-running npm install and restarting the server.</p>&#xA;&#xA;<p>Nothing seems to solve my issues.</p>&#xA;&#xA;<p>Edit** Here's a repo to reproduce the problem: <a href=""https://github.com/Rynebenson/IceCreamQL"" rel=""noreferrer"">https://github.com/Rynebenson/IceCreamQL</a></p>&#xA;",7466884,,7466884,2020-03-22 20:11:02,2021-11-01 18:37:00,"Proper way to setup AWSAppSyncClient, Apollo & React",<graphql><react-apollo><apollo-client><aws-appsync>,3,0,0,2020-03-22 20:04:59
60804869,2,,60545953,0,,<p>This might caused by an incorrect <code>Content-Type</code> or encoding. Is there a reproduction for this issue somewhere? are repo that reproduces it? </p>&#xA;,913684,,,,2020-03-22 20:56:43,"",,0,0,0,2020-03-22 20:56:43
60829386,2,,60828487,2,,"<p>Very annoyingly the example they give in Apollo's docs do not show the import for setContext so the package required should not be imported from ""http-link-context"" but instead from ""@apollo/link-context"" when using the latest version of Apollo (or Apollo 3, anyway). Using the current package it works fine.</p>&#xA;",8483183,,,,2020-03-24 10:40:08,"",,0,0,0,2020-03-24 10:40:08
60831132,2,,60827832,0,,"<p><code>cypress</code> wasn't seeing my <code>graphql</code> queries, because all of them went via <code>fetch</code>. I used this <a href=""https://gist.github.com/yagudaev/2ad1ef4a21a2d1cfe0e7d96afc7170bc"" rel=""nofollow noreferrer"">gist</a> to tranform <code>fetch</code> to <code>xhr</code>. Now I can see the <code>graphql</code> <code>POST</code> calls in <code>cypress</code> UI, but the <code>cy.wait()</code> still times out</p>&#xA;",9793439,,2246272,2021-11-16 12:27:44,2021-11-16 12:27:44,"",,0,1,0,2020-03-24 12:32:00
60842083,2,,52635916,15,,"<p>This situation may also occur when the version of the <code>graphql</code> module you have installed is different from the version installed and used by <code>graphql-tools</code>.</p>&#xA;&#xA;<p>I have found you can correct this by either:</p>&#xA;&#xA;<ol>&#xA;<li><p>Changing the version of <code>graphql</code> in your project's <code>package.json</code> file  to match exactly what <code>graphql-tools</code> depends on in its <code>package.json</code> file.</p></li>&#xA;<li><p>Removing <code>graphql</code> as a dependency and just installing <code>graphql-tools</code>. Then you will automatically receive whatever <code>graphql</code> module version that <code>graphql-tools</code> installs (as long as you don't depend on any other packages that install another, conflicting version).</p></li>&#xA;</ol>&#xA;&#xA;<p>In other cases you might have the correct version, but it may be installed multiple times. You can use <code>npm ls graphql</code> to see all the installed versions. Try running <code>npm dedupe</code> to remove duplicate installations.</p>&#xA;",2168021,,2168021,2020-03-25 02:18:40,2020-03-25 02:18:40,"",,0,1,0,2020-03-25 02:08:19
60852061,1,61064236,,9,4922,"<p>In my apps, I am using following <strong>NPM modules</strong> to play with <a href=""https://strapi.io/"" rel=""noreferrer"">Strapi</a>, <a href=""https://graphql.org/"" rel=""noreferrer"">GraphQL</a> and <a href=""https://nextjs.org/"" rel=""noreferrer"">Next.js</a>:</p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://www.npmjs.com/package/react-apollo"" rel=""noreferrer"">react-apollo</a></li>&#xA;<li><a href=""https://www.npmjs.com/package/next-apollo"" rel=""noreferrer"">next-apollo</a></li>&#xA;<li><a href=""https://www.npmjs.com/package/graphql"" rel=""noreferrer"">graphql</a></li>&#xA;<li><a href=""https://www.npmjs.com/package/gql"" rel=""noreferrer"">gql</a> </li>&#xA;<li><a href=""https://www.npmjs.com/package/recompose"" rel=""noreferrer"">recompose</a></li>&#xA;</ul>&#xA;&#xA;<p>In the next step, I am creating Apollo config file, example below:</p>&#xA;&#xA;<pre><code>import { HttpLink } from ""apollo-link-http"";&#xA;import { withData } from ""next-apollo"";&#xA;&#xA;const config = {&#xA;  link: new HttpLink({&#xA;    uri: ""http://localhost:1337/graphql"",&#xA;  })&#xA;};&#xA;export default withData(config);&#xA;</code></pre>&#xA;&#xA;<p>and then inside a class component, I am using a static method <code>getInitialProps()</code> to fetch data from the Strapi via GraphQL query.</p>&#xA;&#xA;<p>Everything is fine but maybe there is another, better way via React hooks or any other? </p>&#xA;",8241390,,2664350,2020-03-27 12:34:41,2020-04-06 16:17:35,Recommended way to use GraphQL in Next.js app,<reactjs><graphql><next.js><react-apollo><strapi>,2,2,0,2020-03-25 15:32:32
60883100,1,60994325,,2,1777,"<p>I have experience with graphql but its my first time trying apollo federation and kubernetes.</p>&#xA;&#xA;<p>I first tried splitting my monolith graphql server to micro services using apollo federation.&#xA;It worked fine(below is the working code). Now I am trying to run these micro services in kubernetes cluster, but keep having network problems between the apollo gateway and the other backend services.</p>&#xA;&#xA;<p>From the apollo gateway server(when i try running it on kubernetes), I get this error:</p>&#xA;&#xA;<p><code>Encountered error when loading auth at auth-cluster-ip-service: Only absolute URLs are supported</code></p>&#xA;&#xA;<p>This is the part where I services are added to the apollo gateway:</p>&#xA;&#xA;<pre><code>const gateway = new ApolloGateway({&#xA;  serviceList: [&#xA;    { name: 'service1', url: process.env.SERVICE1_URL },&#xA;    { name: 'service2', url: process.env.SERVICE2_URL },&#xA;    { name: 'service3', url: process.env.SERVICE3_URL },&#xA;  ],&#xA;  buildService({ name, url }) {&#xA;    return new AuthenticatedDataSource({ name, url });&#xA;  }&#xA;});&#xA;&#xA;</code></pre>&#xA;&#xA;<p>First I tried, with the following environment variables</p>&#xA;&#xA;<pre><code>(.env)&#xA;SERVICE1_URL =http://localhost:3051&#xA;SERVICE2_URL =http://localhost:3052&#xA;SERVICE3_URL =http://localhost:3053&#xA;</code></pre>&#xA;&#xA;<p>I simply ran 4 node apps on localhost on my laptop and it works!</p>&#xA;&#xA;<p>Now the kubernetes part.</p>&#xA;&#xA;<p>Below is the deployment config file for apollo-gateway. I am suspecting that the problem lies within the environment variables. As you can see, instead of an <code>url</code>, I have the <code>service name</code> on the corresponding environment variables' values. But from what I have learned, kubernetes master will fetch this ""url""(clusterIP name) and replace with the IP address of the corresponding pods. So it should be fine. </p>&#xA;&#xA;<p>It worked well when I practiced kubernetes. In my practice I was connecting to redis and postgres pods, via clusterIP name.</p>&#xA;&#xA;<p>apollo-gateway deploymant config file</p>&#xA;&#xA;<pre><code>apiVersion: apps/v1&#xA;kind: Deployment&#xA;metadata:&#xA;  name: gateway-deployment&#xA;spec:&#xA;  replicas: 1&#xA;  selector:&#xA;    matchLabels:&#xA;      component: gateway&#xA;  template:&#xA;    metadata:&#xA;      labels:&#xA;        component: gateway&#xA;    spec:&#xA;      containers:&#xA;        - name: gateway&#xA;          image:&lt;docker-id&gt;/gateway&#xA;          ports:&#xA;            - containerPort: 4000&#xA;          env:&#xA;            - name: ACCESS_TOKEN_SECRET&#xA;              value: fas69dO2Z15nkev6157&#xA;            - name: SERVICE1_URL&#xA;              value: service1-cluster-ip-service&#xA;            - name: SERVICE2_URL&#xA;              value: service1-cluster-ip-service&#xA;            - name: SERVICE3_URL&#xA;              value: service1-cluster-ip-service&#xA;&#xA;</code></pre>&#xA;&#xA;<p>sample SERVICE cluster-ip config file</p>&#xA;&#xA;<pre><code>apiVersion: v1&#xA;kind: Service&#xA;metadata:&#xA;  name: service1-cluster-ip-service&#xA;spec:&#xA;  type: ClusterIP&#xA;  selector:&#xA;    component: service1&#xA;  ports:&#xA;    - port: 3051&#xA;      targetPort: 3051&#xA;</code></pre>&#xA;&#xA;<p>sample SERVICE deployment config file</p>&#xA;&#xA;<pre><code>apiVersion: apps/v1&#xA;kind: Deployment&#xA;metadata:&#xA;  name: service1-deployment&#xA;spec:&#xA;  replicas: 1&#xA;  selector:&#xA;    matchLabels:&#xA;      component: service1&#xA;  template:&#xA;    metadata:&#xA;      labels:&#xA;        component: service1&#xA;    spec:&#xA;      containers:&#xA;        - name: auth&#xA;          image:&lt;docker-id&gt;/service1&#xA;          ports:&#xA;            - containerPort: 3051&#xA;</code></pre>&#xA;",7444925,,14122,2020-03-28 04:14:39,2020-04-02 14:46:19,apollo gateway (federation) fails to connect to services in kubernetes environment,<docker><kubernetes><apollo><apollo-federation>,1,8,0,2020-03-27 09:19:39
60915813,1,,,2,2779,"<p>I'm fairly new to NextJS and Typescript and I’m implementing the headless CMS Strapi, but am having issues using Apollo. I’ve searched google all weekend to try and understand this issue better. I'm hoping someone can help me out here.</p>&#xA;&#xA;<h3>Error</h3>&#xA;&#xA;<p>Receiving the following Error in my <code>_app.tsx</code></p>&#xA;&#xA;<pre class=""lang-shell prettyprint-override""><code>Property 'apollo' does not exist on type 'AppPropsType&lt;Router, {}&gt;'.&#xA;</code></pre>&#xA;&#xA;<p>The error is occuring on my <code>MyApp</code> function below.</p>&#xA;&#xA;<h3>My <code>_app.tsx</code></h3>&#xA;&#xA;<pre class=""lang-ts prettyprint-override""><code>import * as React from 'react'&#xA;import { AppProps } from 'next/app'&#xA;import { ApolloProvider } from '@apollo/react-hooks'&#xA;import withData from '../../utils/apollo'&#xA;&#xA;import 'circular-std'&#xA;import 'react-multi-carousel/lib/styles.css'&#xA;import '../scss/styles.scss'&#xA;&#xA;function MyApp({ Component, pageProps, apollo }: AppProps) {&#xA;  return (&#xA;    &lt;ApolloProvider client={apollo}&gt;&#xA;      &lt;Component {...pageProps} /&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  )&#xA;}&#xA;&#xA;export default withData(MyApp)&#xA;</code></pre>&#xA;&#xA;<p>Corresponding <a href=""https://strapi.io/blog/build-a-blog-with-next-react-js-strapi-and-apollo#frontendsetup"" rel=""nofollow noreferrer"">Strapi setup tutorial here</a> under section 3 of Front-end Setup.</p>&#xA;",473213,,473213,2020-03-29 15:09:30,2021-01-25 21:56:17,NextJS/Typescript/Apollo error; property does not exist on type,<reactjs><typescript><next.js><apollo><strapi>,2,0,0,2020-03-29 14:39:22
60916403,1,60925562,,-1,890,"<p>I have a simple graphql-server created using the Graphene-Django package. Now I can test the query and mutation successfully in the desktop browser at <a href=""http://127.0.0.1:8000/graphql"" rel=""nofollow noreferrer"">http://127.0.0.1:8000/graphql</a>.&#xA;For testing the query and mutation in the mobile app, I made a simple flutter mobile app using the graphql_flutter package. My flutter app works properly with Hasura and Heroku graphql endpoint. But  it doesn't work with my Graphene-Django graphql endpoint. when I try to run my mobile app, it gives an error message:</p>&#xA;<p><strong>ClientExceptation: Failed to connect to <a href=""http://127.0.0.1:8000/graphql."" rel=""nofollow noreferrer"">http://127.0.0.1:8000/graphql.</a></strong></p>&#xA;<p>Please help me for solving the problem. Thank you so much.</p>&#xA;",13061012,,13061012,2022-07-20 12:29:27,2022-07-20 12:29:27,The connection problem in the graphql-flutter mobile app and the server created by Graphene-Django,<flutter><graphql><connection><graphene-python><graphene-django>,1,0,0,2020-03-29 15:23:13
60924852,2,,56890766,0,,"<p>An easy workaround is to use <code>whatwg-fetch</code>, which you'd add as a dependency via npm and then...</p>&#xA;&#xA;<p><em>cypress/support/fetch_to_xhr.js</em></p>&#xA;&#xA;<pre><code>function fetchToXhr() {&#xA;  let polyfill&#xA;&#xA;  before(() =&gt; {&#xA;    cy.readFile('node_modules/whatwg-fetch/dist/fetch.umd.js')&#xA;      .then((contents) =&gt; polyfill = contents)&#xA;    Cypress.on('window:before:load', (win) =&gt; {&#xA;      delete win.fetch&#xA;      win.eval(polyfill)&#xA;    })&#xA;  })&#xA;}&#xA;&#xA;fetchToXhr()&#xA;</code></pre>&#xA;&#xA;<p><em>cypress/support/index.js</em></p>&#xA;&#xA;<pre><code>import ""./fetch_to_xhr"";&#xA;</code></pre>&#xA;&#xA;<p>After that cypress will capture the graphql requests</p>&#xA;",636733,,,,2020-03-30 06:00:53,"",,0,0,0,2020-03-30 06:00:53
60927040,2,,60926011,1,,<p>It was a mistake on my side. I configured GraphQL to fetch data from localhost when in development mode and from the server in production mode and I didn't update GraphQL schema on the server. Only on localhost</p>&#xA;,10765428,,10765428,2020-04-01 10:08:12,2020-04-01 10:08:12,"",,0,0,0,2020-03-30 08:54:20
60949991,1,,,9,9028,"<p>With project build (or simple Gradle sync), I have the following error:</p>&#xA;&#xA;<p>Caused by: java.lang.NoClassDefFoundError: Could not initialize class org.jetbrains.kotlin.gradle.plugin.sources.DefaultKotlinSourceSetKt</p>&#xA;&#xA;<p>This error shows after change gradle wrapper version from 4.10 to 6.2.2 (because min gradle wrapper version required 5.6.4, but with 5.6.4 Apollo has error ""Access denied"" for build folder)</p>&#xA;&#xA;<p>Sorry for mistakes, my English is very bad(</p>&#xA;&#xA;<p>My build.gradle:</p>&#xA;&#xA;<pre><code>apply plugin: 'com.android.application'&#xA;&#xA;apply plugin: 'kotlin-android'&#xA;&#xA;apply plugin: 'kotlin-android-extensions'&#xA;&#xA;apply plugin: 'com.apollographql.android'&#xA;&#xA;apply plugin: 'io.fabric'&#xA;&#xA;apply plugin: 'com.google.gms.google-services'&#xA;apply plugin: 'org.jetbrains.dokka'&#xA;repositories {&#xA;    mavenCentral()&#xA;    maven { url 'https://maven.fabric.io/public' }&#xA;}&#xA;&#xA;android {&#xA;    compileSdkVersion project.ext.compileSdkVersion&#xA;&#xA;    defaultConfig {&#xA;        applicationId project.ext.applicationId&#xA;        minSdkVersion project.ext.minSdkVersion&#xA;        targetSdkVersion project.ext.targetSdkVersion&#xA;        versionCode project.ext.releaseVersionCode&#xA;        versionName project.ext.releaseVersion&#xA;        setProperty(""archivesBaseName"", ""teleportage-$versionName"")&#xA;        multiDexEnabled true&#xA;    }&#xA;    dokka {&#xA;        outputFormat = 'html'&#xA;        outputDirectory = ""$buildDir/dokka""&#xA;&#xA;        configuration {&#xA;            moduleName = 'data'&#xA;            reportUndocumented = true&#xA;            includeNonPublic = false&#xA;            skipDeprecated = true&#xA;            reportUndocumented = false&#xA;            skipEmptyPackages = true&#xA;            cacheRoot = 'default'&#xA;            noStdlibLink = true&#xA;            platform = ""JVM""&#xA;            classpath = [new File(""$buildDir/other.jar"")]&#xA;            sourceRoot {&#xA;                path = ""src""&#xA;            }&#xA;            jdkVersion = 6&#xA;&#xA;            perPackageOption {&#xA;                prefix = ""android""&#xA;                suppress = true&#xA;            }&#xA;            perPackageOption {&#xA;                prefix = ""androidx""&#xA;                suppress = true&#xA;            }&#xA;            perPackageOption {&#xA;                prefix = ""com""&#xA;                suppress = true&#xA;            }&#xA;            perPackageOption {&#xA;                prefix = ""io""&#xA;                suppress = true&#xA;            }&#xA;            perPackageOption {&#xA;                prefix = ""jp""&#xA;                suppress = true&#xA;            }&#xA;            perPackageOption {&#xA;                prefix = ""net""&#xA;                suppress = true&#xA;            }&#xA;            perPackageOption {&#xA;                prefix = ""wseemann""&#xA;                suppress = true&#xA;            }&#xA;            perPackageOption {&#xA;                prefix = ""app.teleportage.android.main.network.auth""&#xA;                suppress = true&#xA;            }&#xA;            perPackageOption {&#xA;                prefix = ""app.teleportage.android.main.network.main""&#xA;                suppress = true&#xA;            }&#xA;            perPackageOption {&#xA;                prefix = ""app.teleportage.android.main.network.chat""&#xA;                suppress = true&#xA;            }&#xA;            perPackageOption {&#xA;                prefix = ""app.teleportage.android.main.network.messages""&#xA;                suppress = true&#xA;            }&#xA;        }&#xA;    }&#xA;&#xA;    dexOptions {&#xA;        javaMaxHeapSize ""4g""&#xA;    }&#xA;&#xA;    lintOptions {&#xA;        disable 'MissingTranslation'&#xA;    }&#xA;&#xA;    signingConfigs {&#xA;        unsigned {&#xA;            storePassword = """"&#xA;            keyAlias = """"&#xA;            keyPassword = """"&#xA;        }&#xA;&#xA;        release {&#xA;            storeFile file(""../kkk-temp-keystore"")&#xA;            storePassword ""000000""&#xA;            keyAlias ""key0""&#xA;            keyPassword ""000000""&#xA;        }&#xA;    }&#xA;&#xA;    buildTypes {&#xA;        debug {&#xA;            debuggable true&#xA;            minifyEnabled false&#xA;            ext.enableCrashlytics = false&#xA;        }&#xA;        release {&#xA;            debuggable false&#xA;            minifyEnabled false&#xA;            signingConfig signingConfigs.release&#xA;            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'&#xA;        }&#xA;    }&#xA;&#xA;    compileOptions {&#xA;        sourceCompatibility JavaVersion.VERSION_1_8&#xA;        targetCompatibility JavaVersion.VERSION_1_8&#xA;    }&#xA;&#xA;    kotlinOptions {&#xA;        jvmTarget = ""1.8""&#xA;    }&#xA;&#xA;    packagingOptions {&#xA;        exclude 'META-INF/proguard/androidx-annotations.pro'&#xA;    }&#xA;&#xA;    flavorDimensions ""url""&#xA;&#xA;    productFlavors {&#xA;        staging {&#xA;            buildConfigField ""String"", ""SERVER_URL_MAIN"", ""\""http://main.api.test.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MAIN_WS"", ""\""ws://main.api.test.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MAIN_WS_PATH"", ""\""/subscriptions\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_AUTH"", ""\""http://auth.api.test.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_FILE"", ""\""http://files.api.test.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MESS"", ""\""http://messages.api.test.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MESS_WS"", ""\""ws://messages.api.test.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MESS_WS_PATH"", ""\""/subscriptions\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_CHAT"", ""\""http://chat.api.test.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_CHAT_WS"", ""\""ws://chat.api.test.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_CHAT_WS_PATH"", ""\""/subscriptions\""""&#xA;            buildConfigField ""String"", ""PAYMENT_AUTHORIZATION_KEY"", ""\""=\""""&#xA;            dimension ""url""&#xA;        }&#xA;        develop {&#xA;//            buildConfigField ""String"", ""SERVER_URL_MAIN"", ""\""http://255.90.227.154:8090\""""&#xA;//            buildConfigField ""String"", ""SERVER_URL_MAIN_WS"", ""\""ws://255.90.227.154:8090\""""&#xA;//            buildConfigField ""String"", ""SERVER_URL_MAIN_WS_PATH"", ""\""/subscriptions\""""&#xA;//            buildConfigField ""String"", ""SERVER_URL_AUTH"", ""\""http://255.90.227.154:8091\""""&#xA;//            buildConfigField ""String"", ""SERVER_URL_FILE"", ""\""http://255.90.227.154:8092\""""&#xA;//            buildConfigField ""String"", ""SERVER_URL_MESS"", ""\""http://255.90.227.154:8093\""""&#xA;//            buildConfigField ""String"", ""SERVER_URL_MESS_WS"", ""\""ws://255.90.227.154:8093\""""&#xA;//            buildConfigField ""String"", ""SERVER_URL_MESS_WS_PATH"", ""\""/subscriptions\""""&#xA;//            buildConfigField ""String"", ""SERVER_URL_CHAT"", ""\""http://255.90.227.154:8094\""""&#xA;//            buildConfigField ""String"", ""SERVER_URL_CHAT_WS"", ""\""ws://255.90.227.154:8094\""""&#xA;//            buildConfigField ""String"", ""SERVER_URL_CHAT_WS_PATH"", ""\""/subscriptions\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MAIN"", ""\""http://main.api.dev.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MAIN_WS"", ""\""ws://main.api.dev.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MAIN_WS_PATH"", ""\""/subscriptions\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_AUTH"", ""\""http://auth.api.dev.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_FILE"", ""\""http://files.api.devapp\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MESS"", ""\""http://messages.api.dev.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MESS_WS"", ""\""ws://messages.api.devapp\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MESS_WS_PATH"", ""\""/subscriptions\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_CHAT"", ""\""http://chat.api.dev.app\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_CHAT_WS"", ""\""ws://chat.api.devapp\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_CHAT_WS_PATH"", ""\""/subscriptions\""""&#xA;            buildConfigField ""String"", ""PAYMENT_AUTHORIZATION_KEY"", ""\""=\""""&#xA;            dimension ""url""&#xA;        }&#xA;        production {&#xA;            buildConfigField ""String"", ""SERVER_URL_MAIN"", ""\""http://255.90.251.162:8090\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MAIN_WS"", ""\""ws://255.90.251.162:8090\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MAIN_WS_PATH"", ""\""/subscriptions\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_AUTH"", ""\""http://255.90.251.162:8091\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_FILE"", ""\""http://255.90.251.162:8092\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MESS"", ""\""http://255.90.251.162:8093\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MESS_WS"", ""\""ws://255.90.251.162:8093\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_MESS_WS_PATH"", ""\""/subscriptions\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_CHAT"", ""\""http://255.90.251.162:8094\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_CHAT_WS"", ""\""ws://255.90.251.162:8094\""""&#xA;            buildConfigField ""String"", ""SERVER_URL_CHAT_WS_PATH"", ""\""/subscriptions\""""&#xA;            buildConfigField ""String"", ""PAYMENT_AUTHORIZATION_KEY"", ""\""=\""""&#xA;            dimension ""url""&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;dependencies {&#xA;    compileOnly 'org.glassfish:javax.annotation:10.0-b28'&#xA;    implementation fileTree(dir: 'libs', include: ['*.jar'])&#xA;    implementation ""org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version""&#xA;    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1'&#xA;    api 'com.android.support:multidex:1.0.3'&#xA;    api 'com.android.support:appcompat-v7:28.0.0'&#xA;    api 'com.android.support.constraint:constraint-layout:1.1.3'&#xA;    api 'com.android.support:support-v4:28.0.0'&#xA;    api 'com.android.support:design:28.0.0'&#xA;&#xA;    testImplementation 'junit:junit:4.12'&#xA;    androidTestImplementation 'com.android.support.test:runner:1.0.2'&#xA;    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'&#xA;    implementation 'com.apollographql.apollo:apollo-runtime:1.4.3'&#xA;    implementation 'com.apollographql.apollo:apollo-rx2-support:1.4.3'&#xA;    implementation 'com.squareup.okhttp3:okhttp:4.0.1'&#xA;    implementation 'com.squareup.okhttp3:logging-interceptor:4.0.1'&#xA;    implementation 'com.google.code.gson:gson:2.8.2'&#xA;    implementation 'com.github.bumptech.glide:glide:4.8.0'&#xA;    implementation 'jp.wasabeef:glide-transformations:4.0.1'&#xA;//    implementation 'com.github.shts:StoriesProgressView:3.0.0'&#xA;    implementation 'com.google.android.exoplayer:exoplayer:2.9.6'&#xA;    implementation 'com.braintreepayments:card-form:3.5.1'&#xA;    implementation 'com.braintreepayments.api:drop-in:3.7.1'&#xA;    implementation 'com.github.horson:rtmp-rtsp-stream-client-java:ffbe4e2dea'&#xA;    api 'androidx.lifecycle:lifecycle-common:2.1.0-alpha01'&#xA;    api 'androidx.exifinterface:exifinterface:1.0.0'&#xA;    implementation 'com.otaliastudios:cameraview:2.0.0-beta02'&#xA;    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.8'&#xA;    api 'com.github.bosphere.android-fadingedgelayout:fadingedgelayout:1.0.0'&#xA;&#xA;    implementation 'com.google.maps:google-maps-services:0.2.4'&#xA;    implementation 'com.google.android.gms:play-services-maps:16.1.0'&#xA;    implementation 'com.google.android.gms:play-services-location:16.0.0'&#xA;//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'&#xA;&#xA;&#xA;    //FFmpegMediaMetadataRetriever&#xA;    def ffmpegRetrieverVersion = '1.0.14'&#xA;    implementation ""com.github.wseemann:FFmpegMediaMetadataRetriever:$ffmpegRetrieverVersion""&#xA;//    implementation ""com.github.wseemann:FFmpegMediaMetadataRetriever-armeabi:$ffmpegRetrieverVersion""&#xA;//    implementation ""com.github.wseemann:FFmpegMediaMetadataRetriever-armeabi-v7a:$ffmpegRetrieverVersion""&#xA;//    implementation ""com.github.wseemann:FFmpegMediaMetadataRetriever-x86:$ffmpegRetrieverVersion""&#xA;//    implementation ""com.github.wseemann:FFmpegMediaMetadataRetriever-mips:$ffmpegRetrieverVersion""&#xA;//    implementation ""com.github.wseemann:FFmpegMediaMetadataRetriever-x86_64:$ffmpegRetrieverVersion""&#xA;//    implementation ""com.github.wseemann:FFmpegMediaMetadataRetriever-arm64-v8a:$ffmpegRetrieverVersion""&#xA;&#xA;    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'&#xA;&#xA;    implementation 'com.google.firebase:firebase-core:16.0.1'&#xA;    implementation 'com.google.firebase:firebase-messaging:17.3.4'&#xA;    implementation 'com.google.firebase:firebase-analytics:16.0.1'&#xA;    implementation 'com.google.firebase:firebase-dynamic-links:17.0.0'&#xA;    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'&#xA;}&#xA;&#xA;kotlin {&#xA;    experimental {&#xA;        coroutines ""enable""&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",12932842,,,,2020-06-19 17:39:40,How to fix initialization error for DefaultKotlinSourceSetKt?,<android><android-studio><gradle><kotlin><apollo>,2,0,0,2020-03-31 11:55:02
60952286,2,,60536436,0,,"<p>It's working for me using latest. However, I'm not using <code>debug: true</code> try without?</p>&#xA;",104727,,,,2020-03-31 13:54:30,"",,0,0,0,2020-03-31 13:54:30
60956235,1,,,2,1686,"<p>So my Apollo graphql server was working perfectly in development. I just deployed my project to Heroku, and now I receive a 503 error when making any queries.</p>&#xA;&#xA;<p>I am able to get into the graphiql sandbox, but those responses come back as:</p>&#xA;&#xA;<pre><code>SyntaxError: Unexpected token &lt; in JSON at position 0&#xA;</code></pre>&#xA;&#xA;<p>I am using express for my server, and here is what the code looks like:</p>&#xA;&#xA;<pre><code>app.use(cors());&#xA;&#xA;app.use(&#xA;&#xA;  '/graphql',&#xA;&#xA;  graphqlHTTP({&#xA;&#xA;    schema: pgSchema,&#xA;&#xA;    graphiql: true&#xA;&#xA;  })&#xA;&#xA;);&#xA;&#xA;app.use(express.static('../public'));&#xA;&#xA;app.get('*', (req, res) =&gt; {&#xA;&#xA;  res.sendFile(path.resolve(__dirname, '../public', 'index.html'));&#xA;&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Here is where I connect my Apollo client in the React project:</p>&#xA;&#xA;<pre><code>const client = new ApolloClient({&#xA;  uri: '/graphql'&#xA;});&#xA;&#xA;function App() {&#xA;  return (&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;Router&gt;&#xA;        &lt;Route exact path='/' component={Login} /&gt;&#xA;        &lt;Route exact path='/home' component={Home} /&gt;&#xA;      &lt;/Router&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  );&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here are my heroku logs from graphql: </p>&#xA;&#xA;<pre><code>2020-03-31T16:41:23.780542+00:00 heroku[router]: at=info method=POST path=""/graphql"" host=damp-ravine-76294.herokuapp.com request_id=a9e695db-63eb-476a-950f-a5d6561ff85f fwd=""76.116.11.127"" dyno=web.1 connect=1ms service=21ms status=200 bytes=21933 protocol=https&#xA;2020-03-31T16:45:50.392011+00:00 heroku[router]: at=error code=H12 desc=""Request timeout"" method=POST path=""/graphql"" host=damp-ravine-76294.herokuapp.com request_id=650a1d7d-7f9e-4c66-8a5d-000fc60ed29a fwd=""76.116.11.127"" dyno=web.1 connect=1ms service=30001ms status=503 bytes=0 protocol=https&#xA;</code></pre>&#xA;&#xA;<p>Please let me know if you have any ideas. Thanks!</p>&#xA;",10772995,,10772995,2020-03-31 17:23:55,2020-03-31 18:13:50,Apollo server responding with 503 error after deploying to Heroku,<reactjs><graphql><apollo>,1,0,0,2020-03-31 17:16:35
60958527,2,,58760185,1,,"<p>The issue is because nextJs will run the code above in the server and <code>WebSocket</code> is a property that exists only in the browser, to get this fixed you can do:</p>&#xA;&#xA;<pre><code>const socketLink =&#xA;  process.browser &amp;&amp;&#xA;  createAbsintheSocketLink(&#xA;    AbsintheSocket.create(&#xA;      new PhoenixSocket(WS_URI)&#xA;    )&#xA;  )&#xA;</code></pre>&#xA;&#xA;<p>By checking for <code>process.browser</code> you make sure that this function is executed only on client-side.</p>&#xA;",5000831,,,,2020-03-31 19:36:49,"",,0,0,0,2020-03-31 19:36:49
60968512,1,60977884,,0,243,"<p>I have problem with <code>getInitialProps</code> method in NextJS. It is never called. This is project where I have <code>Apollo GraphQL</code> client for some pages and <code>getInitialProps</code> for other. I am not sure how to configure them correctly to work.</p>&#xA;&#xA;<p><code>Apollo</code> is working fine and fetching data as it should. Problem is that <code>getInitialProps</code> isn't called.</p>&#xA;&#xA;<p>Here is my custom <code>_app.js</code> file</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const App = ({ Component, pageProps, apollo }) =&gt; {&#xA;  return (&#xA;    &lt;ApolloProvider client={apollo}&gt;&#xA;      &lt;Component {...pageProps} /&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  )&#xA;}&#xA;&#xA;const API_URL =&#xA;  process.env.NODE_ENV === ""development""&#xA;    ? ""http://localhost/wordpress/index.php?graphql""&#xA;    : ""https://page/index.php?graphql""&#xA;&#xA;export default withApollo(({ initialState }) =&gt; {&#xA;  return new ApolloClient({&#xA;    link: new createHttpLink({&#xA;      uri: API_URL,&#xA;      fetch: fetch&#xA;    }),&#xA;    cache: new InMemoryCache()&#xA;  })&#xA;})(App, { getDataFromTree })&#xA;</code></pre>&#xA;&#xA;<p>And here is how I call <code>getInitialProps</code> on page</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>Coupons.getInitialProps = async function() {&#xA;  const res = await fetch('http://localhost:8000/data/');&#xA;  const data = await res.json();&#xA;&#xA;  console.log(`Data fetched. Count: ${data.length}`);&#xA;&#xA;  return {&#xA;    shows: data.map(entry =&gt; entry.show)&#xA;  };&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Also. Pages where I have <code>Apollo</code> fetching data doesn't need to call this <code>REST API</code>. <code>Apollo</code> pages and <code>REST</code> pages are totally different</p>&#xA;",10765428,,10765428,2020-04-01 11:47:39,2020-04-01 18:29:47,getInitialProps in never called in NextJS,<graphql><next.js><react-apollo>,1,2,0,2020-04-01 10:12:42
60974566,1,60975958,,6,2992,<p>With a GraphQL introspection query like the following I get all the field names on the mutation type of a GraphQL schema. In addition I'd like to get the arguments and their types. How can I query these in addition?</p>&#xA;&#xA;<pre><code>query {&#xA;  __schema {&#xA;    mutationType {&#xA;      name&#xA;      fields {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,5308983,,6024220,2020-04-01 16:42:11,2022-09-24 18:55:43,How can I get the arguments and types of graphql mutations via introspection?,<graphql>,2,0,0,2020-04-01 15:30:07
60975958,2,,60974566,5,,"<pre><code>query {&#xA;  __schema {&#xA;    mutationType {&#xA;      name&#xA;      fields {&#xA;        name&#xA;        args {&#xA;          name&#xA;          defaultValue&#xA;          type {&#xA;            ...TypeRef&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;fragment TypeRef on __Type {&#xA;  kind&#xA;  name&#xA;  ofType {&#xA;    kind&#xA;    name&#xA;    ofType {&#xA;      kind&#xA;      name&#xA;      ofType {&#xA;        kind&#xA;        name&#xA;        ofType {&#xA;          kind&#xA;          name&#xA;          ofType {&#xA;            kind&#xA;            name&#xA;            ofType {&#xA;              kind&#xA;              name&#xA;              ofType {&#xA;                kind&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Read the <a href=""https://spec.graphql.org/June2018/#sec-Introspection"" rel=""nofollow noreferrer"">GraphQL Spec</a>. It is really helpful to find out about the types you can introspect.</p>&#xA;<p>The recursive <code>ofType</code> is necessary to &quot;unwrap&quot; any wrapper types (i.e. List and Non-Null). You can look <a href=""https://github.com/graphql/graphql-js/blob/main/src/utilities/getIntrospectionQuery.ts"" rel=""nofollow noreferrer"">here</a> for an example of a &quot;complete&quot; introspection query. You can also use Graph<em>i</em>QL's or GraphQL Playground's autocompletion feature to help you write these sort of queries.</p>&#xA;",6024220,,1951317,2022-09-24 18:55:43,2022-09-24 18:55:43,"",,0,0,0,2020-04-01 16:40:34
60989813,1,,,0,31,"<h2>I am using the following:</h2>&#xA;&#xA;<ul>&#xA;<li><p>Apollo iOS</p></li>&#xA;<li><p>Neo4j Database (with the GraphQL plugin)</p></li>&#xA;<li><p>GraphQL</p></li>&#xA;</ul>&#xA;&#xA;<hr>&#xA;&#xA;<h2>Singleton Class for Connection</h2>&#xA;&#xA;<p>My code below is to connect to the GraphQL endpoint which happens to be my Neo4j Database.</p>&#xA;&#xA;<pre><code>class Network {&#xA;    static let shared = Network()&#xA;    private(set) lazy var apollo: ApolloClient = {&#xA;&#xA;        let url = URL(string: ""http://localhost:7474/graphql/"")!&#xA;        let keychain = KeychainSwift()&#xA;        let configuration = URLSessionConfiguration.ephemeral&#xA;&#xA;        configuration.httpAdditionalHeaders = [""Authorization"": ""\(String(describing: keychain.get(""neo.auth"")))""]&#xA;&#xA;        return ApolloClient(&#xA;            networkTransport: HTTPNetworkTransport(url: url, session: URLSession(configuration: configuration))&#xA;        )&#xA;    }()&#xA;}&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>When I create data inside my database via my app this works great however if I then query to the database to return all the data, the newly created data is not found. The data is in the database because I can see it in the browser and also if I restart my app and then run the exact same code to return all the data; it returns it.</p>&#xA;&#xA;<p>The other thing I have tried to do is run two instances of my app side by side in the simulator. Both apps have the same features and can import/export data. When I create new data via one instance the data is created in the database successfully however upon importing the data in the other instance of the app - it returns nothing (Both apps being ran at the same time).</p>&#xA;&#xA;<h2>My Import Code</h2>&#xA;&#xA;<pre><code>    func importData(){&#xA;    let apollo = Network.shared.apollo&#xA;    //Import all data from the graph database&#xA;    apollo.fetch(query: GetAllQuery()) { result in&#xA;    guard let data = try? result.get().data else { return }&#xA;        print(data.jsonObject.values)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The only thing I can think of is that the session is not updating when new data is created in the database. The reason I feel this is because if I relaunch the app and run my import function it actually returns all the new data. I need the connection to update when new data is created, is there a way I can refresh the connection upon data creation?</p>&#xA;",9095323,,,,2020-04-02 13:10:16,Update URLSession after new data is created inside database,<swift><neo4j><graphql><apollo>,1,0,0,2020-04-02 10:49:47
60994325,2,,60883100,3,,"<p>When the error message says ""only absolute URLs are supported"", that means the configured URL needs to include the <code>http://</code> scheme part as well as the host name.  You can fix this by changing your environment settings to include that</p>&#xA;&#xA;<pre><code>- name: SERVICE1_URL&#xA;  value: 'http://service1-cluster-ip-service'&#xA;</code></pre>&#xA;&#xA;<p>If the Service is listening on something other than the default HTTP port 80 you'll also need to include that port number in the URL.</p>&#xA;",10008173,,,,2020-04-02 14:46:19,"",,0,0,0,2020-04-02 14:46:19
61032495,2,,61031025,0,,"<blockquote>&#xA;<p>can I implement this auth-server as a remote schema or do I need to run a separate node server?</p>&#xA;</blockquote>&#xA;<p>Yes, you can implement auth-server as a remote schema! You just have to ensure your remote schema can be accessed by an &quot;anonymous&quot; role, bypassing JWT mode that's applied to the rest of the authenticated gql endpoint.</p>&#xA;<blockquote>&#xA;<p>It might be necessary sometimes to bypass Hasura’s authorization system (calling the configured webhook, or validating the JWT), for queries that are for a remote GraphQL server.&#xA;For example, you have a remote GraphQL server which does authentication, i.e. signup and login, and you have added it as a remote schema. In this case, you would not want to perform Hasura’s authorization when the user is making a login/signup request.</p>&#xA;</blockquote>&#xA;<p>Relevant documentation: <a href=""https://hasura.io/docs/1.0/graphql/core/remote-schemas/schema-auth.html#bypassing-hasura-s-authorization-system-for-remote-schema-requests"" rel=""nofollow noreferrer"">https://hasura.io/docs/1.0/graphql/core/remote-schemas/schema-auth.html#bypassing-hasura-s-authorization-system-for-remote-schema-requests</a></p>&#xA;<p>And: <a href=""https://hasura.io/docs/1.0/graphql/manual/auth/authentication/unauthenticated-access.html"" rel=""nofollow noreferrer"">https://hasura.io/docs/1.0/graphql/manual/auth/authentication/unauthenticated-access.html</a>.</p>&#xA;<hr />&#xA;<p>If implementing your own auth server, there are two options or &quot;modes&quot; (Webhooks or JWT) as detailed here: <a href=""https://hasura.io/docs/1.0/graphql/manual/auth/authentication/index.html"" rel=""nofollow noreferrer"">https://hasura.io/docs/1.0/graphql/manual/auth/authentication/index.html</a>. The diagrams are very helpful!</p>&#xA;<p>After setting one of the options up, Hasura will automatically authenticate your requests (before any query or mutation is ever run). You don't need to write a custom resolver and add it as a remote schema.</p>&#xA;<p>Hasura can be configured with environment variables (<code>HASURA_GRAPHQL_AUTH_HOOK</code>, <code>HASURA_GRAPHQL_AUTH_HOOK_MODE</code> or <code>HASURA_GRAPHQL_JWT_SECRET</code>) or flags when running the GraphQL engine (<code>--auth-hook</code> or <code>--jwt-secret</code>), and depending on what you choose you must fit the spec detailed in the docs (how the auth server should respond, or configure the token).</p>&#xA;",2526423,,13267930,2020-09-06 16:58:09,2020-09-06 16:58:09,"",,0,2,0,2020-04-04 18:04:24
61035128,2,,60987965,0,,"<p>I decided to use nginx running inside a docker container as a proxy. And this nginx proxies both server and client with a same port number. This way the server and the client looks like they are both running on the same port and we don't have the CORS problem.</p>&#xA;&#xA;<p>I am using Ubuntu, so <code>host.docker.internal</code> is not available yet. Please see <a href=""https://github.com/docker/for-linux/issues/264"" rel=""nofollow noreferrer"">https://github.com/docker/for-linux/issues/264</a>.</p>&#xA;&#xA;<p>My docker compose looks like:</p>&#xA;&#xA;<pre><code>version: ""3""&#xA;services:&#xA;  nginx:&#xA;    container_name: local-nginx&#xA;    image: nginx:latest&#xA;    ports:&#xA;      - ""8000:80""&#xA;    volumes:&#xA;      - ./data/nginx/local:/etc/nginx/conf.d&#xA;    command: [nginx-debug, ""-g"", ""daemon off;""]&#xA;    extra_hosts:&#xA;      - ""host.docker.internal:172.17.0.1""&#xA;</code></pre>&#xA;&#xA;<p>The docker instance sees 172.17.0.1 as the host IP address</p>&#xA;&#xA;<p>My nginx config looks like</p>&#xA;&#xA;<pre><code>server &#xA;{&#xA;    listen       80;&#xA;    server_name  localhost;&#xA;&#xA;    location /&#xA;    {&#xA;        proxy_pass http://host.docker.internal:3000/;&#xA;    }    &#xA;&#xA;    location /graphql&#xA;    {&#xA;        proxy_pass http://host.docker.internal:8080/graphql;&#xA;    }&#xA;&#xA;    location /health&#xA;    {&#xA;        return 200 '{""message"": ""healthy""}';&#xA;        add_header Content-Type application/json;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My Client runs on 3000 and server runs on 8080. But both are now proxied through 8000.</p>&#xA;",536890,,536890,2020-04-04 21:42:31,2020-04-04 21:42:31,"",,0,0,0,2020-04-04 21:35:38
61044184,1,61045912,,0,52,"<p>I've deployed hasura on heroku, how can I get the DB credentials of the same.</p>&#xA;&#xA;<p>I would like to use those credentials in a django app</p>&#xA;&#xA;<p>--Thx.</p>&#xA;",402579,,,,2020-04-05 16:38:21,DB credentials for Hasura on Heroku,<django><postgresql><heroku><graphql><hasura>,1,0,0,2020-04-05 14:29:27
61045912,2,,61044184,2,,"<p>From your logged-in Heroku web console, click ""Data"" (or click from the DB connected to your Hasura app console:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/6DyGr.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/6DyGr.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Click ""Settings"" > ""View credentials""</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/QcDkJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QcDkJ.png"" alt=""enter image description here""></a></p>&#xA;",2526423,,,,2020-04-05 16:38:21,"",,0,0,0,2020-04-05 16:38:21
61050343,1,61079249,,3,2942,"<p>I have an API built with Laravel and Lighthouse-php(for GraphQL). My client is built with Vue js and uses Apollo for the graphQL client-side implementation. Anytime I make a request, I get the following error:</p>&#xA;&#xA;<pre><code>Access to fetch at 'http://localhost:8000/graphql' from origin 'http://localhost:8080' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.&#xA;</code></pre>&#xA;&#xA;<p>Naturally, I proceeded to install laravel-cors package but I realized afterwards that it came by default with my Laravel installation (7.2.2). Which meant that <code>\Fruitcake\Cors\HandleCors::class</code> was already added to the middleware array in <code>Kernel.php</code> and the cors config file was already in my config directory.</p>&#xA;&#xA;<p>After some googling, I realized that I needed to add <code>\Fruitcake\Cors\HandleCors::class</code> to the <code>route.middleware</code> array in my <code>config/lighthouse.php</code> file</p>&#xA;&#xA;<p>It still did not work. I have restarted the server, cleared cache, cleared config and run <code>composer dump-autoload</code> but I still get the error. I have no idea how to get past this. Any help will be appreciated.</p>&#xA;&#xA;<p><strong>Versions</strong></p>&#xA;&#xA;<p>Laravel 7.2.2 </p>&#xA;&#xA;<p>Laravel Lighthouse 4.10</p>&#xA;",4875485,,,,2020-04-07 11:40:45,CORS Error in Laravel 7 using Laravel Lighthouse,<laravel><graphql><cors><vue-apollo><laravel-lighthouse>,1,0,0,2020-04-05 22:24:22
61050370,2,,60716044,1,,"<p>I'm the maintainer of that package. I was playing with different versions of the dependencies checking how they work together, and I found out that bumping the version of gatsby actually it's what it breaks the project.</p>&#xA;&#xA;<p>Please check you are using the version <code>""gatsby"": ""2.15.22"",</code> in your <code>package.json</code>, <code>yarn.lock</code> and <code>node_modules</code>.</p>&#xA;&#xA;<p>Hope it helps!</p>&#xA;",3426032,,,,2020-04-05 22:27:04,"",,0,0,0,2020-04-05 22:27:04
61055534,1,,,7,9367,"<p>I have build a flask application. This application makes an API call to a graphql server which has a url like ""<a href=""http://xyz:8080/graphql"" rel=""noreferrer"">http://xyz:8080/graphql</a>"".</p>&#xA;&#xA;<p>The application is containerized in docker container and runs on docker compose.</p>&#xA;&#xA;<p>This exterenal graphql server is accessible from the chrome browser and api tools . but when the container calls the server url it gives an error like this.</p>&#xA;&#xA;<pre><code>**HTTPConnectionPool(host='xyz', port=8080): Max retries exceeded with url: /graphql (Caused by NewConnectionError('&lt;urllib3.connection.HTTPConnection object at 0x7f21777&#xA;f0c18&gt;: Failed to establish a new connection: [Errno -5] No address associated with hostname',))**&#xA;</code></pre>&#xA;&#xA;<p>the url is binded with a DNS and IP address is there as well. I dont have an IP address of the server and just the DNS i.e ""xyz""&#xA;any one faced this kind of issue?&#xA;below is the class written to connect to graphql in application.</p>&#xA;&#xA;<pre><code>  import requests&#xA;&#xA;class GraphQL:&#xA;  def graphql(self, query, variables = {}, headers = None):&#xA;    url = 'http://xyz:8080/graphql'&#xA;    response = requests.post(&#xA;        url = url,&#xA;        json = {'query': query, 'variables': variables},&#xA;        headers = headers&#xA;    )&#xA;    return response&#xA;</code></pre>&#xA;",13235150,,,,2021-02-19 14:18:49,"Max retries exceeded with (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object [Errno -5] No address associated with hostname',))",<python-3.x><docker><http><graphql><urllib3>,0,4,0,2020-04-06 08:14:37
61063188,1,61082306,,1,656,"<p>My application fails at the first query trying to initialize GraphQL with this error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>ANTLR Tool version 4.7.2 used for code generation does not match the current runtime version 4.5.1</p>&#xA;</blockquote>&#xA;&#xA;<p>I don't explicitely use this library in my project, I tried to add a newer version to the pom nothing changed.&#xA;Original issue: <a href=""https://github.com/graphql-java-kickstart/graphql-java-servlet/issues/241"" rel=""nofollow noreferrer"">https://github.com/graphql-java-kickstart/graphql-java-servlet/issues/241</a></p>&#xA;&#xA;<p>Full stack trace:</p>&#xA;&#xA;<pre><code>ANTLR Tool version 4.7.2 used for code generation does not match the current runtime version 4.5.1ANTLR Runtime version 4.7.2 used for parser compilation does not match the current runtime version 4.5.1Apr 06, 2020 4:54:41 PM org.apache.catalina.core.ApplicationContext log&#xA;SEVERE: StandardWrapper.Throwable&#xA;java.lang.ExceptionInInitializerError&#xA;    at graphql.parser.Parser.parseDocument(Parser.java:57)&#xA;    at graphql.parser.Parser.parseDocument(Parser.java:39)&#xA;    at graphql.kickstart.tools.SchemaParserBuilder.parseDocuments(SchemaParserBuilder.kt:181)&#xA;    at graphql.kickstart.tools.SchemaParserBuilder.parseDefinitions(SchemaParserBuilder.kt:169)&#xA;    at graphql.kickstart.tools.SchemaParserBuilder.scan(SchemaParserBuilder.kt:162)&#xA;    at graphql.kickstart.tools.SchemaParserBuilder.build(SchemaParserBuilder.kt:207)&#xA;    at it.cims30.core.api.graphql.GraphQLEndpoint.createSchema(GraphQLEndpoint.java:23)&#xA;    at it.cims30.core.api.graphql.GraphQLEndpoint.getConfiguration(GraphQLEndpoint.java:17)&#xA;    at graphql.kickstart.servlet.AbstractGraphQLHttpServlet.init(AbstractGraphQLHttpServlet.java:85)&#xA;    at javax.servlet.GenericServlet.init(GenericServlet.java:158)&#xA;    at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1124)&#xA;    at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1079)&#xA;    at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:761)&#xA;    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:133)&#xA;    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)&#xA;    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:611)&#xA;    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)&#xA;    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)&#xA;    at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:651)&#xA;    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)&#xA;    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)&#xA;    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:407)&#xA;    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)&#xA;    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:754)&#xA;    at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2300)&#xA;    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)&#xA;    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)&#xA;    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)&#xA;    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)&#xA;    at java.base/java.lang.Thread.run(Thread.java:830)&#xA;Caused by: java.lang.UnsupportedOperationException: java.io.InvalidClassException: org.antlr.v4.runtime.atn.ATN; Could not deserialize ATN with UUID 59627784-3be5-417a-b9eb-8131a7286089 (expected aadb8d7e-aeef-4415-ad2b-8204d6cf042e or a legacy UUID).&#xA;    at org.antlr.v4.runtime.atn.ATNDeserializer.deserialize(ATNDeserializer.java:153)&#xA;    at graphql.parser.antlr.GraphqlLexer.&lt;clinit&gt;(GraphqlLexer.java:276)&#xA;    ... 30 more&#xA;Caused by: java.io.InvalidClassException: org.antlr.v4.runtime.atn.ATN; Could not deserialize ATN with UUID 59627784-3be5-417a-b9eb-8131a7286089 (expected aadb8d7e-aeef-4415-ad2b-8204d6cf042e or a legacy UUID).&#xA;    ... 32 more&#xA;&#xA;Apr 06, 2020 4:54:41 PM org.apache.catalina.core.StandardWrapperValve invoke&#xA;SEVERE: Allocate exception for servlet [it.cims30.core.api.graphql.GraphQLEndpoint]&#xA;java.io.InvalidClassException: org.antlr.v4.runtime.atn.ATN; Could not deserialize ATN with UUID 59627784-3be5-417a-b9eb-8131a7286089 (expected aadb8d7e-aeef-4415-ad2b-8204d6cf042e or a legacy UUID).&#xA;    at org.antlr.v4.runtime.atn.ATNDeserializer.deserialize(ATNDeserializer.java:153)&#xA;    at graphql.parser.antlr.GraphqlLexer.&lt;clinit&gt;(GraphqlLexer.java:276)&#xA;    at graphql.parser.Parser.parseDocument(Parser.java:57)&#xA;    at graphql.parser.Parser.parseDocument(Parser.java:39)&#xA;    at graphql.kickstart.tools.SchemaParserBuilder.parseDocuments(SchemaParserBuilder.kt:181)&#xA;    at graphql.kickstart.tools.SchemaParserBuilder.parseDefinitions(SchemaParserBuilder.kt:169)&#xA;    at graphql.kickstart.tools.SchemaParserBuilder.scan(SchemaParserBuilder.kt:162)&#xA;    at graphql.kickstart.tools.SchemaParserBuilder.build(SchemaParserBuilder.kt:207)&#xA;    at it.cims30.core.api.graphql.GraphQLEndpoint.createSchema(GraphQLEndpoint.java:23)&#xA;    at it.cims30.core.api.graphql.GraphQLEndpoint.getConfiguration(GraphQLEndpoint.java:17)&#xA;    at graphql.kickstart.servlet.AbstractGraphQLHttpServlet.init(AbstractGraphQLHttpServlet.java:85)&#xA;    at javax.servlet.GenericServlet.init(GenericServlet.java:158)&#xA;    at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1124)&#xA;    at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1079)&#xA;    at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:761)&#xA;    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:133)&#xA;    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)&#xA;    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:611)&#xA;    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)&#xA;    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)&#xA;    at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:651)&#xA;    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)&#xA;    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)&#xA;    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:407)&#xA;    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)&#xA;    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:754)&#xA;    at org.apache.tomcat.util.net.AprEndpoint$SocketProcessor.doRun(AprEndpoint.java:2300)&#xA;    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)&#xA;    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)&#xA;    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)&#xA;    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)&#xA;    at java.base/java.lang.Thread.run(Thread.java:830)&#xA;</code></pre>&#xA;",11057909,,,,2020-04-07 14:25:31,Can't initialize GraphQL: wrong ANTLR Tool runtime version,<java><servlets><graphql><antlr>,1,2,0,2020-04-06 15:23:51
61069540,1,,,0,20,"<p>I have an existing database served on postgres locally.</p>&#xA;<p>I'd like to fetch that data via GraphQL in my Gatsby app. I'm using <code>gatsby-source-pg</code> to do this.</p>&#xA;<p>It's not clear from the <a href=""https://www.gatsbyjs.org/packages/gatsby-source-pg/"" rel=""nofollow noreferrer"">docs</a> + example <a href=""https://github.com/graphile/gatsby-source-pg-example"" rel=""nofollow noreferrer"">here</a> how to set this up properly. From what I understand, you need the two highlighted portions below.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// ./src/components/test.js&#xA;&#xA;import { graphql } from 'gatsby';&#xA;    &#xA;export const query = graphql` // (1) graphQL query&#xA;  {&#xA;    postgres {&#xA;      allUsers {&#xA;        nodes {&#xA;          id&#xA;          firstLastName&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;const Test = ({data}) =&gt; { // (2) grab the `data` prop (not sure where this comes from)  &#xA;  return (&#xA;    &lt;AppLayout&gt;&#xA;      {data.postgres.allUsers.nodes.map(user =&gt; &lt;p&gt;{user.firstLastName}&lt;/p&gt;)} // data is undefined&#xA;    &lt;/AppLayout&gt;&#xA;  )&#xA;}&#xA;&#xA;export default Test&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>// gatsby-config.js&#xA;    {&#xA;      resolve: &quot;gatsby-source-pg&quot;,&#xA;      options: {&#xA;        connectionString: &quot;postgres://user@localhost:5432/testdb&quot;,&#xA;        schema: &quot;public&quot;,&#xA;      },&#xA;    },&#xA;</code></pre>&#xA;Questions:&#xA;<ul>&#xA;<li>How do I query data from the <code>./src/components</code> directory? The <code>data</code> prop returns <code>undefined</code> if I run the exact code above. I noticed this same setup <em>works</em> when running it from <code>./src/pages/index.js</code>. Maybe I'm missing <code>options</code> parameter in <code>gatsby-source-pg</code> to tell it which directories to look at?</li>&#xA;<li>How is <code>query</code> and <code>data</code> from the code above connected? I couldn't tell by looking at the example.</li>&#xA;</ul>&#xA;",5301193,,-1,2020-06-20 09:12:55,2020-04-06 21:58:30,Gatsby-GraphQL - Fetching remote data from a postgres server,<reactjs><postgresql><graphql><gatsby>,0,3,0,2020-04-06 21:53:16
61082306,2,,61063188,1,,"<p>The current solution is (from the closed issue):</p>&#xA;&#xA;<blockquote>&#xA;  <p>Revert graphql-java-tools to 5.7.1 and graphql-java to 13.0</p>&#xA;</blockquote>&#xA;&#xA;<p>The current version isn't compatible with graphql-java 14.0.&#xA;I also needed to add to my pom this:</p>&#xA;&#xA;<pre class=""lang-xml prettyprint-override""><code>&lt;dependency&gt;&#xA;  &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;&#xA;  &lt;artifactId&gt;commons-lang3&lt;/artifactId&gt;&#xA;  &lt;version&gt;3.10&lt;/version&gt;&#xA;&lt;/dependency&gt;&#xA;</code></pre>&#xA;&#xA;<p>The graphql-java-tools I reverted to used a different version of commons-lang3 that gave a NullPointerException if the JDK version was too new (I'm using 13).</p>&#xA;",11057909,,,,2020-04-07 14:25:31,"",,0,0,0,2020-04-07 14:25:31
61130790,2,,61129800,0,,<p>Turns out Heroku does not provide free SSL. It costs 20$/month. So this can not be done for free.</p>&#xA;,13046230,,,,2020-04-09 21:51:46,"",,0,0,0,2020-04-09 21:51:46
61147130,2,,61114105,-1,,"<p>You might try either set <code>introspection: true</code> flag in the <a href=""https://www.apollographql.com/docs/apollo-server/api/apollo-server/#parameters"" rel=""nofollow noreferrer"">constructor parameters</a> of your apollo-server or, if it is suitable for your needs, to deploy onto heroku the development version of your app.</p>&#xA;&#xA;<p>An explanation:<br>&#xA;To see the schema and docs, your client should obviously fetch it first.&#xA;This request for graphQL schema usually called an ""introspection"".</p>&#xA;&#xA;<p>Having the full schema of backend graphQL API is undoubtedly convenient during the development.<br>&#xA;However, when our app is running in the production environment, we usually should expect malicious clients. Therefore, sending introspection in the production mode might be unsafe, because it would give a lot of additional information to the potential attacker.</p>&#xA;&#xA;<p>That's why the introspection turned off by default in the production environment for the current version of appolo-server.</p>&#xA;",2902432,,,,2020-04-10 19:14:27,"",,0,0,0,2020-04-10 19:14:27
61152565,1,,,7,3340,"<p>I ve been trying to deploy my GraphQl Apollo Server with nodejs on a Lambda function, on serverless offline it works perfectly, when i try to deploy it it fails with the error: &#xA;""Recoverable error occurred (write ECONNRESET), sleeping for ~5 seconds. Try 1 of 4""&#xA;<a href=""https://i.stack.imgur.com/81FKX.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/81FKX.png"" alt=""Once the error appears, the console exits the proccess with no other message""></a>&#xA;Once the error appears, the console exits the proccess with no other message</p>&#xA;&#xA;<p>I'm using Typescript and Webpack</p>&#xA;&#xA;<p>What i ve done already: </p>&#xA;&#xA;<ol>&#xA;<li>Verify all dependencies and types</li>&#xA;<li>Warnings corrections </li>&#xA;<li>Test it with serverless offline plug in and works perfectly on local</li>&#xA;</ol>&#xA;&#xA;<p>yml file:</p>&#xA;&#xA;<pre><code>service: apollo-sever-kisbel&#xA;&#xA;custom:&#xA;  webpack:&#xA;    webpackConfig: ./webpack.config.js&#xA;    includeModules: true&#xA;&#xA;&#xA;plugins:&#xA;  - serverless-webpack&#xA;  - serverless-offline&#xA;&#xA;provider:&#xA;  name: aws&#xA;  runtime: nodejs12.x&#xA;  stage: dev&#xA;&#xA;&#xA;functions:&#xA;  graphql:&#xA;    handler: lib/index.graphqlHandler&#xA;    events:&#xA;      - http:&#xA;          path: ""{proxy+}""&#xA;          method: any&#xA;          cors: true&#xA;</code></pre>&#xA;&#xA;<p>Cheers! </p>&#xA;",10997255,,174777,2020-04-11 12:15:12,2022-04-06 15:38:54,"Serverless deploy: Recoverable error occurred (write ECONNRESET), sleeping for ~5 seconds. Try 1 of 4",<node.js><amazon-s3><aws-lambda><graphql><serverless>,3,3,0,2020-04-11 05:37:09
61162476,2,,61155284,0,,"<p>My apollo-client was configured using apollo-boost and i was using chrome debugger to intercept the network was causing me this issue.</p>&#xA;&#xA;<p>To be more specific I was using the below code to get the network requests sent by my app in the chrome debugger</p>&#xA;&#xA;<pre><code>global.XMLHttpRequest =&#xA;  global.originalXMLHttpRequest || global.XMLHttpRequest;&#xA;global.FormData = global.originalFormData || global.FormData;&#xA;&#xA;if (window.FETCH_SUPPORT) {&#xA;  window.FETCH_SUPPORT.blob = false;&#xA;} else {&#xA;  global.Blob = global.originalBlob || global.Blob;&#xA;  global.FileReader = global.originalFileReader || global.FileReader;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>apollo-upload-client wont send the data in multipart data if we are using chrome debugger. We will face network issue.This <a href=""https://github.com/jaydenseric/apollo-upload-client/issues/82"" rel=""nofollow noreferrer"">issue</a> has the answer. or I had not removed apollo-boost and some part of my app was using it that was also a issue.</p>&#xA;",6847440,,6847440,2020-04-11 20:08:56,2020-04-11 20:08:56,"",,0,0,0,2020-04-11 19:23:28
61163208,1,,,1,765,"<p>I got a website based on React/GraphQL up running. The webpage works fine on Windows and Android Phones. However it comes blank when I try to open it in my iPhone X. Then, I connected it to MacBook with Web Inspector and see the error message:</p>&#xA;&#xA;<p><code>SyntaxError: No identifiers allowed directly after numeric literal</code></p>&#xA;&#xA;<p>pointing to the start of the script:</p>&#xA;&#xA;<pre><code>(this.webpackJsonpperfexam = this.webpackJsonpperfexam || []).push([[2], [function(e, t, r) {&#xA;    ""use strict"";&#xA;    e.exports = r(263)&#xA;}, function(e, t, r) {&#xA;</code></pre>&#xA;&#xA;<p>I also got blank page when I try to open it on my iPhone X using Chrome. However, Chrome on my MacBook can open it without problem. I believe I was able to open it from Safari on my MacBook earlier, but today, I got the same error.</p>&#xA;&#xA;<p>What could it be?</p>&#xA;",458969,,,,2020-06-08 13:40:14,React/GraphQL: SyntaxError: No identifiers allowed directly after numeric literal?,<reactjs><graphql><aws-amplify>,1,3,0,2020-04-11 20:21:25
61196774,2,,61196628,2,,"<p>this resolver ...</p>&#xA;&#xA;<pre><code>memes:()=&gt;fetch(`${VOLATILE_URL}`).then(res=&gt;console.log(res.json())),&#xA;</code></pre>&#xA;&#xA;<p>returns nothing (resolver should)</p>&#xA;&#xA;<p>if you need to debug responses, call return at the end </p>&#xA;&#xA;<pre><code>memes:()=&gt;fetch(`${VOLATILE_URL}`).then(res=&gt; { &#xA;  let response = res.json();&#xA;  console.log(response);&#xA;  return response;&#xA;} ),&#xA;</code></pre>&#xA;",6124657,,,,2020-04-13 21:06:25,"",,0,2,0,2020-04-13 21:06:25
61205964,1,61206827,,2,4880,"<p>I have a realtion like this: </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/gMIBh.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gMIBh.jpg"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>in my resolver I am fetching the enteties like this: </p>&#xA;&#xA;<pre><code>users: async () =&gt; {&#xA;  const users = await db.user.findAll({&#xA;    include: [&#xA;      {&#xA;        model: db.userroles,&#xA;        include: [&#xA;          {&#xA;            model: db.roles,&#xA;            attributes: ['Name'],&#xA;          },&#xA;        ],&#xA;      },&#xA;    ],&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>I log what I get from the db: </p>&#xA;&#xA;<pre><code> console.log('users are', users[0].dataValues.userroles[0].dataValues.role.Name); // logs ""users are developer""&#xA;</code></pre>&#xA;&#xA;<p>Which shows me that the correct roles are fetched. </p>&#xA;&#xA;<p>My graphql schema: </p>&#xA;&#xA;<pre><code>  type user {&#xA;    Id: ID!&#xA;    Email: String&#xA;    RoleId: Int!&#xA;    Password: String&#xA;    ChangedPassword: Boolean&#xA;    WeddingId: Int!&#xA;    AttendantId: Int&#xA;    role: [roles!]&#xA;  }&#xA;&#xA;  type roles {&#xA;    Id: ID!&#xA;    Name: String!&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>In the playground I am sending this: </p>&#xA;&#xA;<pre><code>{users&#xA;  {role&#xA;  {Name}}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>result: </p>&#xA;&#xA;<pre><code>  ""data"": {&#xA;    ""users"": [&#xA;      {&#xA;        ""role"": null&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I log the entire user object that I get back from the db: </p>&#xA;&#xA;<pre><code>users are userroles {&#xA;  dataValues:&#xA;   { UserId: 1,&#xA;     RoleId: 1,&#xA;     role:&#xA;      roles {&#xA;        dataValues: [Object],&#xA;        _previousDataValues: [Object],&#xA;        _changed: {},&#xA;        _modelOptions: [Object],&#xA;        _options: [Object],&#xA;        isNewRecord: false } },&#xA;  _previousDataValues:&#xA;   { UserId: 1,&#xA;     RoleId: 1,&#xA;     role:&#xA;      roles {&#xA;        dataValues: [Object],&#xA;        _previousDataValues: [Object],&#xA;        _changed: {},&#xA;        _modelOptions: [Object],&#xA;        _options: [Object],&#xA;        isNewRecord: false } },&#xA;  _changed: {},&#xA;  _modelOptions:&#xA;   { timestamps: false,&#xA;     validate: {},&#xA;     freezeTableName: true,&#xA;     underscored: false,&#xA;     paranoid: false,&#xA;     rejectOnEmpty: false,&#xA;     whereCollection: null,&#xA;     schema: null,&#xA;     schemaDelimiter: '',&#xA;     defaultScope: {},&#xA;     scopes: {},&#xA;     indexes: [],&#xA;     name: { plural: 'userroles', singular: 'userrole' },&#xA;     omitNull: false,&#xA;     tableName: 'userroles',&#xA;     sequelize:&#xA;      Sequelize {&#xA;        options: [Object],&#xA;        config: [Object],&#xA;        dialect: [MysqlDialect],&#xA;        queryInterface: [QueryInterface],&#xA;        models: [Object],&#xA;        modelManager: [ModelManager],&#xA;        connectionManager: [ConnectionManager],&#xA;        importCache: [Object] },&#xA;     hooks: {} },&#xA;  _options:&#xA;   { isNewRecord: false,&#xA;     _schema: null,&#xA;     _schemaDelimiter: '',&#xA;     include: [ [Object] ],&#xA;     includeNames: [ 'role' ],&#xA;     includeMap: { role: [Object] },&#xA;     includeValidated: true,&#xA;     raw: true,&#xA;     attributes: undefined },&#xA;  isNewRecord: false,&#xA;  role:&#xA;   roles {&#xA;     dataValues: { Name: 'Developer' },&#xA;     _previousDataValues: { Name: 'Developer' },&#xA;     _changed: {},&#xA;     _modelOptions:&#xA;      { timestamps: false,&#xA;        validate: {},&#xA;        freezeTableName: true,&#xA;        underscored: false,&#xA;        paranoid: false,&#xA;        rejectOnEmpty: false,&#xA;        whereCollection: null,&#xA;        schema: null,&#xA;        schemaDelimiter: '',&#xA;        defaultScope: {},&#xA;        scopes: {},&#xA;        indexes: [],&#xA;        name: [Object],&#xA;        omitNull: false,&#xA;        tableName: 'roles',&#xA;        sequelize: [Sequelize],&#xA;        hooks: {} },&#xA;     _options:&#xA;      { isNewRecord: false,&#xA;        _schema: null,&#xA;        _schemaDelimiter: '',&#xA;        include: undefined,&#xA;        includeNames: undefined,&#xA;        includeMap: undefined,&#xA;        includeValidated: true,&#xA;        raw: true,&#xA;        attributes: [Array] },&#xA;     isNewRecord: false } }&#xA;</code></pre>&#xA;&#xA;<p>I am getting the roles I just can't figure out how to present them? </p>&#xA;&#xA;<p>I think that the issue is in my resolver that I am missing yet another set of includes but I cant figure out how to write it. </p>&#xA;",11597904,,11597904,2020-04-14 10:56:41,2020-04-14 11:39:47,How to get user-roles with sequelize?,<javascript><node.js><graphql><sequelize.js>,2,0,0,2020-04-14 10:51:12
61225623,2,,61009159,0,,"<p>I manage to find solution for my use-case so, I'll leave it here in case that anyone bump into this thread...</p>&#xA;&#xA;<p>As already mentioned, stitching should be used to compose single endpoint from multiple API segments (microservices). In case that you try to stitch schemas containing same types or queries, your request will be 'routed' to pre-selected instance (so, only one).</p>&#xA;&#xA;<p>As @xadm suggested, key for 'merging' data from multiple schemas into singe data set is in using custom fetch logic for Link used for remote schema, as explained:</p>&#xA;&#xA;<p>1) Define custom fetch function matching your business needs (simplified example):</p>&#xA;&#xA;<pre><code>const customFetch = async (uri, options) =&gt; {&#xA;&#xA;    // do not merge introspection query results!!!&#xA;    // for introspection query always use predefined (first?) instance&#xA;    if( operationType === 'IntrospectionQuery'){&#xA;      return fetch(services[0].uri, options);&#xA;    }&#xA;&#xA;    // array fecth calls to different endpoints&#xA;    const calls = [&#xA;        fetch(services[0].uri, options),&#xA;        fetch(services[1].uri, options),&#xA;        fetch(services[2].uri, options),&#xA;        ...&#xA;    ];&#xA;&#xA;    // execute calls in parallel&#xA;    const data = await Promise.all(fetchCalls);&#xA;&#xA;    // do whatever you need to merge data according to your needs&#xA;    const retData = customBusinessLogic();&#xA;&#xA;    // return new response containing merged data&#xA;    return new fetch.Response(JSON.stringify(retData),{ ""status"" : 200 });&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>2) Define link using custom fetch function. If you are using identical schemas you don't need to create links to each instance, just one should be enough.</p>&#xA;&#xA;<pre><code>const httpLink = new HttpLink(services[0].uri, fetch: customFetch });&#xA;</code></pre>&#xA;&#xA;<p>3) Use Link to create remote executable schema:</p>&#xA;&#xA;<pre><code>const schema =  await introspectSchema(httpLink );&#xA;return makeRemoteExecutableSchema({ &#xA;    schema, &#xA;    link: httpLink,&#xA;    context: ({ req }) =&gt; {&#xA;        // inject http request headers into context if you need them&#xA;        return {&#xA;            headers: {&#xA;                ...req.headers,&#xA;            }&#xA;        }&#xA;      }, &#xA;})&#xA;</code></pre>&#xA;&#xA;<p>4) If you want to forward http headers all the way to the fetch function, use apollo ContextLink:</p>&#xA;&#xA;<pre><code>   // link for forwarding headers through context&#xA;   const contextLink = setContext( (request, previousContext) =&gt; {&#xA;     if( previousContext.graphqlContext ){&#xA;         return {&#xA;            headers: {&#xA;                ...previousContext.graphqlContext.headers&#xA;            }&#xA;          }   &#xA;    }&#xA;  }).concat(http);  &#xA;</code></pre>&#xA;&#xA;<p>Just to mention, dependencies used for this one:</p>&#xA;&#xA;<pre><code>const { introspectSchema, makeRemoteExecutableSchema, ApolloServer } = require('apollo-server');&#xA;const fetch = require('node-fetch');&#xA;const { setContext } = require('apollo-link-context');&#xA;const { HttpLink } = require('apollo-link-http');&#xA;</code></pre>&#xA;&#xA;<p>I hope that it will be helfull to someone...</p>&#xA;",1188174,,,,2020-04-15 09:40:34,"",,0,0,0,2020-04-15 09:40:34
61239547,2,,57979083,0,,"<p>There are two main modules that you will enjoy using in your tests:</p>&#xA;&#xA;<ul>&#xA;<li>createMockEnvironment</li>&#xA;<li>mockPayloadGenerator</li>&#xA;</ul>&#xA;&#xA;<p>The <code>createMockEnvironment</code> nothing more than an implementation the Relay Environment Interface and it also has an additional mock layer, with methods that allow resolving/reject and control of operations (queries/mutations/subscriptions). It is a special version of Relay Environment with additional API methods for controlling the resolving and rejection operations. Therefore the first thing we should do is tell jest that we don't want the default environment but our environment provided by relay-test-utils.</p>&#xA;&#xA;<p>The <code>mockPayloadGenerator</code> is to improve the process of creating and maintaining the mock data for tested components it can generate dummy data for the selection that you have in your operation.</p>&#xA;&#xA;<p>Check this post with examples: <a href=""https://dev.to/augustocalaca/how-to-test-your-relay-components-with-relay-test-utils-and-react-testing-library-5bk3"" rel=""nofollow noreferrer"">How to test your relay components with relay-test-utils and react-testing-library</a></p>&#xA;",12399912,,,,2020-04-15 22:14:34,"",,0,0,0,2020-04-15 22:14:34
61239607,2,,61015826,0,,"<p>I had the same problem and it turned out i hadn't specified the SITE_URL variable in my gatsby.config file, setting it to localhost:8888 fixed the problem, you are definetly missing this variable in siteMetadata consider adding it.</p>&#xA;",13325328,,13325328,2021-06-21 22:29:22,2021-06-21 22:29:22,"",,0,0,0,2020-04-15 22:20:14
61251381,2,,61250810,1,,"<p>You should pretty much <a href=""https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors"">never use no-cors</a>. Off hand, I'm not sure why that option would cause your request to be malformed, but it will make it impossible for your response to be read anyway. Remove <code>fetchOptions</code> and whitelist your client URL in your CORS <a href=""https://github.com/expressjs/cors#configuration-options"" rel=""nofollow noreferrer"">configuration</a> on the server-side. CORs usage with Nexus is shown <a href=""https://github.com/graphql-nexus/nexus/blob/65918de3b6e036b246e9ea6cf48c40638a59e301/docs/api/modules/main/exports/server.md#express"" rel=""nofollow noreferrer"">here</a> in the docs.</p>&#xA;",6024220,,,,2020-04-16 13:25:15,"",,0,0,0,2020-04-16 13:25:15
61293941,2,,61291222,9,,"<p>SOLVED thanks to: <a href=""https://github.com/MichalLytek/type-graphql/issues/433"" rel=""noreferrer"">https://github.com/MichalLytek/type-graphql/issues/433</a></p>&#xA;&#xA;<p>1) Go into <code>./tsconfig.json</code></p>&#xA;&#xA;<p>2) Change <code>""target"": ""es5""</code> to <code>""target"": ""es6""</code></p>&#xA;",9837259,,,,2020-04-18 18:09:35,"",,0,0,0,2020-04-18 18:09:35
61300692,1,,,0,965,"<p>Hi what I am actually trying is to connect remotly from a MySQL Client in Windows Subsystem for Linux <code>mysql -h 172.18.0.2 -P 3306 -u root -p</code> and before that I started the Docker Container as follows: <code>docker container run --name testdb --network testnetwork -p 3306:3306 -e MYSQL_ROOT_PASSWORD=mysqlRootPassword -e MYSQL_DATABASE=localtestdb -d mariadb/server</code>. </p>&#xA;&#xA;<p>The purpose why I put the container in a own network, is because I also have a dockerized Spring Boot Application (GraphQL-Server) which shall communicated with this db. But always when I try to connect from my built-in mysql client, in my Windows Subsystem for Linux, with the above shown command. I got the error message: <code>ERROR 2002 (HY000): Can't connect to MySQL server on '172.18.0.2' (115)</code>. </p>&#xA;&#xA;<p>What I already tried, to solve the problem on my own is, look up whether the configuration file line (bind-address) is commented out. But it wont work. Interestingly it already worked to set up a docker container with MariaDB and connect from the outside, but now when I try exactly the same, only with the difference that I now put the container in a own existing network, it wont work.</p>&#xA;&#xA;<p>Hopefully there some one out there which is able to help me with this annonying problem.&#xA;Thanks!</p>&#xA;&#xA;<p>So far,&#xA;Daniel</p>&#xA;&#xA;<p>//edit:</p>&#xA;&#xA;<p>Now I tried the solution advice from a guy from this topic: <a href=""https://stackoverflow.com/questions/58931116/how-to-configure-containers-in-one-network-to-connect-to-each-other-server-m?rq=1"">How to configure containers in one network to connect to each other (server -&gt; mysql)?</a>. Futhermore I linked my Spring Boot (server) application with the ""--link databaseContainerName"" parameter to the MariaDB container.</p>&#xA;&#xA;<p>Now I am able to start both containers without any error, but I am still not able to connect remotly to the MariaDB container. Which is now running in a virtual docker network with his own subnet.</p>&#xA;",9612331,,9612331,2020-04-19 07:49:29,2020-04-19 14:18:16,Connect to a MariaDB Docker Container in a own Docker network remotly,<spring-boot><docker><graphql><mariadb>,1,10,0,2020-04-19 06:59:37
61305792,2,,61300692,0,,"<p>I explored this recently - <strong>this is by design - container isolation</strong>. <strong>Usually only main</strong> (service <code>httpd</code>) <strong>host is accessible externally</strong>, hiding internal connections (hosts it communicates to deliver response).</p>&#xA;&#xA;<p>Container created in own network is not accessible from external adresses, even from containers in the same bridge but other network (172.19.0.0/16).</p>&#xA;&#xA;<p>Your container should be accessible on <strong>docker host address</strong> (127.0.0.1 if run locally) and mapped (""-p 3306:3306"") port - <strong>3306</strong>. But of course it won't work if many running db containers have the same mapping to the same host port.</p>&#xA;&#xA;<p>Isolation is done using firewall - iptables. You can list rules (<code>iptables -L</code>) to see that - from docker host level.</p>&#xA;&#xA;<p>You can modify firewall to allow external access to internal networks. I used this rule:</p>&#xA;&#xA;<pre><code>iptables -A DOCKER -d 172.16.0.0/12 -j ACCEPT&#xA;</code></pre>&#xA;&#xA;<p>After that your MySQL containerized engine should be accessible using internal address 172.18.0.2 and source (not mapped) port 3306.</p>&#xA;&#xA;<p>Warnings  </p>&#xA;&#xA;<ul>&#xA;<li>it disables all isolation, dont't use it on production;</li>&#xA;<li>you have to run this after <strong>every docker start</strong> - rules created/modified by docker on the fly</li>&#xA;<li>not every docker container will respond on <code>ping</code>, check it from docker host (linux subsystem in this case) first, from windows <code>cmd</code> later</li>&#xA;</ul>&#xA;&#xA;<p>I used this option (in <code>docker.service</code>) to make rule permanent:</p>&#xA;&#xA;<pre><code>ExecStartPost=/bin/sh -c '/etc/iptables/accept172_16.sh'&#xA;</code></pre>&#xA;&#xA;<p>For docker on external(shared in lan) host you should use <code>route add</code> (or <code>hosts</code> file on your machine or router) to forward 172.x.x.x addresses into lan docker host. </p>&#xA;&#xA;<p>Hint: use <code>portainer</code> project (with restart policy - always) to manage docker containers. It's easier to see config errors, too.</p>&#xA;",6124657,,,,2020-04-19 14:18:16,"",,0,0,0,2020-04-19 14:18:16
61322393,2,,49421853,2,,"<p>Since the link on Raj Chaudhary's answer is dead, here is the official Google Cloud Function integration of GraphQL Server : <a href=""https://github.com/apollographql/apollo-server/tree/master/packages/apollo-server-cloud-functions"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-server/tree/master/packages/apollo-server-cloud-functions</a></p>&#xA;&#xA;<p>You are able to run Apollo GraphQL server on Google Cloud Functions with it.</p>&#xA;",13156536,,,,2020-04-20 12:20:10,"",,0,0,0,2020-04-20 12:20:10
61326073,1,,,1,383,"<p>I have a React app using Next.js and Apollo, and after deploying it to Heroku, I’m encountering problems where the app hangs up and crashes. I’ve figured out that GraphQL queries (but not mutations) are responsible: when a query fires, I can see Heroku’s logs that the server side of the app gets flooded with hundreds of seemingly redundant POST requests (an example request is shown below).  When multiple queries fire at once, the flood of activity can crash the app.</p>&#xA;&#xA;<p>What can I do to fix this?</p>&#xA;&#xA;<p>Here is more information that will hopefully be revealing:  </p>&#xA;&#xA;<ul>&#xA;<li>The queries successfully receive data from the GraphQL server.</li>&#xA;<li>Mutations and local-state queries in Apollo do not cause the same&#xA;flood; they work normally.</li>&#xA;<li>In the browser, the “Network” tab in dev tools shows no POST requests&#xA;happening to the front-end domain; only the usual GET requests (and&#xA;the requests to the GraphQL server domain)</li>&#xA;<li>I don’t detect the same issue in local development.</li>&#xA;<li><p>The requests look like this:</p>&#xA;&#xA;<pre><code> 2020-04-20T05:04:21.861390+00:00 heroku[router]: at=info method=POST path=""/"" host=recipe-market.herokuapp.com request_id=7ac33b80-59cc-4893-a8c0-5224dd2906b9 fwd=""(My IP address here),18.205.161.72"" dyno=web.1 connect=0ms service=79ms status=200 bytes=1151 protocol=https&#xA;</code></pre></li>&#xA;<li><p>… and each subsequent request in the flood is identical including the request ID, except the second address in the <code>fwd</code> field gets duplicated, e.g.: <code>fwd=""(My IP address here), 18.205.161.72,18.205.161.72""</code>&#xA;… and it repeats until there are about 300 duplicates of that second address in the <code>fwd</code> field</p></li>&#xA;<li>the flood of requests does not seem to be infinite; it stops at about 300.  All the queries I have tested trigger the same number of requests.</li>&#xA;</ul>&#xA;",12977038,,,,2020-04-20 15:25:50,GraphQL Queries in an Apollo app trigger hundreds of duplicate requests,<reactjs><heroku><graphql><next.js><apollo>,0,1,0,2020-04-20 15:25:50
61356720,2,,59657450,2,,"<p>Actually there is one more thing that may be causing this as I also had the same exact error ""Topology Closed, please connect"".</p>&#xA;&#xA;<p>The thing is if you have a dynamic IP address then in MongoDB atlas you should try allowing all IP addresses. </p>&#xA;&#xA;<p>Add the IP address: <code>0.0.0.0/0</code>&#xA;All my problems were solved after whitelisting this IP address which allows all. </p>&#xA;&#xA;<p>Image of dynamic IP <code>0.0.0.0/0</code>:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/2e1MB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2e1MB.png"" alt=""enter image description here""></a></p>&#xA;",13376958,,5059916,2020-04-22 07:50:49,2020-04-22 07:50:49,"",,0,1,0,2020-04-22 03:20:32
61367888,1,,,-1,69,"<p>I'm not really sure exactly how long it takes before I get this error, but after a period of time, I get ""The content-type is not JSON compatible"" error. I am able the query just fine from graphql playground but not in my app. I am using persisted queries, so not sure if that is the cause.</p>&#xA;&#xA;<p>The only fix is to restart my app.</p>&#xA;&#xA;<p>Here is the&#xA;<a href=""https://i.stack.imgur.com/4TIyP.png"" rel=""nofollow noreferrer"">stacktrace</a></p>&#xA;",12939818,,,,2020-04-24 01:31:14,"Getting error: ""The content-type is not JSON compatible"" after a period of time",<apollo><apollo-client><apollo-server>,1,0,0,2020-04-22 14:39:36
61372832,1,,,1,287,"<p>Well, I am trying to deploy a website in netlify. It is already in <a href=""https://github.com/ronyahammad/gatsby-restaurant-site"" rel=""nofollow noreferrer"">github</a></p>&#xA;&#xA;<p>When I am trying to deploy the website in netlify, it is showing errors <a href=""https://pastebin.pl/view/bc3e82d7"" rel=""nofollow noreferrer"">but on my local computer it is running without errors</a></p>&#xA;&#xA;<p>The website is running fine in the browser localhost and graphquery is showing data as desired. I made the menu list in contentful... so I had to make an gitignore .env.development file but I inserted CONTENTFUL_ACCESS_TOKEN and CONTENTFUL_SPACE_ID in netlify build environment variables.</p>&#xA;&#xA;<p>What more can I do if there is no error showing while executing on localhost? </p>&#xA;&#xA;<p>Please help</p>&#xA;",13076904,,13076904,2020-04-23 13:03:16,2020-04-23 13:03:16,"Why netlify is showing graph query error though in local, there is no error?",<graphql><web-deployment><gatsby><netlify><gatsby-image>,1,0,0,2020-04-22 18:49:24
61373080,2,,61372832,0,,"<p>Using Gatsby environment variables + Netlify requires a small change in those variables. You need to add <code>GATSBY</code> prefix in all your variables. Like shows this <a href=""https://community.netlify.com/t/how-to-access-environment-variables/1240/2"" rel=""nofollow noreferrer"">Netlify community thread</a> and also <a href=""https://www.gatsbyjs.org/docs/environment-variables/#example-of-using-an-environment-variable"" rel=""nofollow noreferrer"">Gatsby documentation</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Please note that you shouldn’t commit .env.* files to your source&#xA;  control and rather use options given by your Continuous Deployment&#xA;  (CD) provider. An example is Netlify with its build environment&#xA;  variables.&#xA;  Note: since Gatsby uses the Webpack DefinePlugin to make the&#xA;  environment variables available at runtime, they cannot be&#xA;  destructured from process.env; instead, they have to be fully&#xA;  referenced.</p>&#xA;  &#xA;  <p><code>GATSBY_API_URL</code> will be available to your site (Client-side and&#xA;  server-side) as <code>process.env.GATSBY_API_URL</code>.:</p>&#xA;</blockquote>&#xA;&#xA;<p>Of course, this only applies to the Netlify side, not in your local machine but it is recommended to use the same naming on both sides. So you need to change your Contentful variables.</p>&#xA;&#xA;<p><code>CONTENTFUL_ACCESS_TOKEN</code> to <code>GATSBY_CONTENTFUL_ACCESS_TOKEN</code> and <code>CONTENTFUL_SPACE_ID</code> to <code>GATSBY_CONTENTFUL_SPACE_ID</code> (moreover in you <code>gatsby-config.js</code> or wherever you use them). </p>&#xA;&#xA;<p>The next (and final) step is to add those variables in your Netlify dashboard like shows the following screenshot: </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/LHPCp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LHPCp.png"" alt=""Environment configuration""></a>&#xA;The previous configuration can be found under <em>Deploys > Deploy settings</em></p>&#xA;&#xA;<p>Once you have done this, your front side will be able to find your Contentful variables. You may need to delete the Netlify build cache.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/cRbVJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/cRbVJ.png"" alt=""enter image description here""></a></p>&#xA;",5585371,,5585371,2020-04-22 21:10:03,2020-04-22 21:10:03,"",,0,6,0,2020-04-22 19:01:54
61389024,1,,,1,854,"<p>I'm starting to develop web app using flutter web and graphql (<a href=""https://pub.dev/packages/graphql_flutter"" rel=""nofollow noreferrer"">https://pub.dev/packages/graphql_flutter</a>)</p>&#xA;&#xA;<p>when trying to initialize the graphql I got this error :</p>&#xA;&#xA;<pre><code>Uncaught (in promise) Error: Expected a value of type 'String', but got one of type '_Future&lt;String&gt;'&#xA;    at Object.throw_ [as throw] (errors.dart:195)&#xA;    at Object.castError (errors.dart:44)&#xA;    at Object.cast [as as] (operations.dart:406)&#xA;</code></pre>&#xA;",1008924,,,,2020-11-24 12:32:41,Is GraphQL supported in flutter web,<flutter><web><graphql>,2,1,0,2020-04-23 13:57:57
61410494,1,,,0,787,"<p>I'm learning React/Apollo and when I introduce bugs I get the typical red exceptions in my Chrome console. However, with Apollo, it doesn't tell me where <em>in my code</em> the error began as it does in React or other frameworks. When working with hooks that fire off queries in multiple components it makes it exceedingly slow to find the source of the issue. </p>&#xA;&#xA;<p><strong>Do you use any tricks to debug your Apollo code or can you improve the error feedback in some way?</strong></p>&#xA;&#xA;<p>Here's what I see:</p>&#xA;&#xA;<pre><code>ApolloError.ts:46 Uncaught (in promise) Error: GraphQL error: User is not authenticated&#xA;    at new ApolloError (ApolloError.ts:46)&#xA;    at QueryManager.ts:1241&#xA;    at Object.next (Observable.js:322)&#xA;    at notifySubscription (Observable.js:135)&#xA;    at onNotify (Observable.js:179)&#xA;    at SubscriptionObserver.next (Observable.js:235)&#xA;    at observables.ts:12&#xA;    at Set.forEach (&lt;anonymous&gt;)&#xA;    at Object.next (observables.ts:12)&#xA;    at notifySubscription (Observable.js:135)&#xA;    at onNotify (Observable.js:179)&#xA;    at SubscriptionObserver.next (Observable.js:235)&#xA;    at httpLink.ts:142&#xA;</code></pre>&#xA;",169795,,,,2021-12-05 00:21:00,How do I make Apollo Client tell me where in my code the error happened?,<react-hooks><react-apollo><apollo-client><react-apollo-hooks>,2,0,0,2020-04-24 14:16:23
61432424,2,,61430774,0,,"<p>In this case, the secret to props being transferred through via the <code>page</code> was to enable <code>getInitialProps</code> via a custom <code>_app</code>.</p>&#xA;&#xA;<p>Before:</p>&#xA;&#xA;<pre><code>const MyApp = ({ Component, apollo, pageProps }) =&gt; {&#xA;    return (&#xA;        &lt;ApolloProvider client={apollo}&gt;&#xA;            &lt;Page&gt;&#xA;                &lt;Component {...pageProps} /&gt;&#xA;            &lt;/Page&gt;&#xA;        &lt;/ApolloProvider&gt;&#xA;    );&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>After:</p>&#xA;&#xA;<pre><code>const MyApp = ({ Component, apollo, pageProps }) =&gt; {&#xA;    return (&#xA;        &lt;ApolloProvider client={apollo}&gt;&#xA;            &lt;Page&gt;&#xA;                &lt;Component {...pageProps} /&gt;&#xA;            &lt;/Page&gt;&#xA;        &lt;/ApolloProvider&gt;&#xA;    );&#xA;};&#xA;&#xA;MyApp.getInitialProps = async ({ Component, ctx }) =&gt; {&#xA;    let pageProps = {};&#xA;&#xA;    if (Component.getInitialProps) {&#xA;        // calls page's `getInitialProps` and fills `appProps.pageProps`&#xA;        pageProps = await Component.getInitialProps(ctx);&#xA;    }&#xA;    // exposes the query to the user&#xA;    pageProps.query = ctx.query;&#xA;    return { pageProps };&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>The only downfall now is that there is no more static page generation, and server-side-rendering is used on each request.</p>&#xA;",6365308,,,,2020-04-25 20:49:48,"",,0,0,0,2020-04-25 20:49:48
61432709,2,,61431190,1,,"<p>From the docs:</p>&#xA;&#xA;<blockquote>&#xA;  <p><code>getInitialProps</code> enables server-side rendering in a page and allows you to do <strong>initial data population</strong>, it means sending the page with the data already populated from the server... For the initial page load, <code>getInitialProps</code> will run on the server only. <code>getInitialProps</code> will then run on the client when navigating to a different route via the <code>next/link</code> component or by using <code>next/router</code>.</p>&#xA;</blockquote>&#xA;&#xA;<p>Just like its name implies, <code>getInitialProps</code> is only ran once when your page is loaded. Generally, you should avoid using ApolloClient like this -- instead, you should configure it as shown in <a href=""https://github.com/zeit/next.js/tree/canary/examples/with-apollo"" rel=""nofollow noreferrer"">the official examples</a>. This way, you can use the <code>useQuery</code> hook like normal instead of using <code>getInitialProps</code>. When the page is rendered on the server, you'll use <code>getDataFromTree</code> to hydrate your cache based on any <code>useQuery</code> hooks that are rendered.</p>&#xA;",6024220,,,,2020-04-25 21:13:06,"",,0,7,0,2020-04-25 21:13:06
61445577,1,,,0,647,"<p>I can run an app successfully in dev mode but whenever I try to build the app I get a</p>&#xA;&#xA;<pre><code>10 |     function InvariantError(message) {&#xA;11 |         if (message === void 0) { message = genericMessage; }&#xA;&gt; 12 |         var _this = _super.call(this, typeof message === ""number""&#xA; | ^&#xA;13 |             ? genericMessage + "": "" + message + "" (see &#xA;https://github.com/apollographql/invariant-packages)""&#xA;14 |             : message) || this;&#xA;15 |         _this.framesToPop = 1;&#xA;&#xA;&#xA;WebpackError: Invariant Violation: Invariant Violation: 46 (see &#xA;https://github.com/apollographql/invariant-packages)&#xA;&#xA;- invariant.esm.js:12 new InvariantError&#xA;node_modules/ts-invariant/lib/invariant.esm.js:12:1&#xA;</code></pre>&#xA;&#xA;<ul>&#xA;<li><p>invariant.esm.js:24 invariant&#xA;node_modules/ts-invariant/lib/invariant.esm.js:24:1</p></li>&#xA;<li><p>OperationData.js:30 &#xA;MutationData../node_modules/@apollo/client/react/data/OperationData.js.OperationData.refreshClient&#xA;node_modules/@apollo/client/react/data/OperationData.js:30:58</p></li>&#xA;<li><p>MutationData.js:38 MutationData../node_modules/@apollo/client/react/data/MutationData.js.MutationData.execute&#xA;node_modules/@apollo/client/react/data/MutationData.js:38:45</p></li>&#xA;<li><p>useMutation.js:27 useMutation&#xA;node_modules/@apollo/client/react/hooks/useMutation.js:27:1</p></li>&#xA;<li><p>ConfirmationButton.js:32 ConfirmationButton&#xA;src/components/ConfirmationButton.js:32:44</p></li>&#xA;</ul>&#xA;&#xA;<p>error Command failed with exit code 1.</p>&#xA;&#xA;<p>I have currently wrapped my components in the apollo provvider within the gatsby-browser file.</p>&#xA;&#xA;<p>Any help would be much appreciated.</p>&#xA;",8483183,,,,2020-09-18 11:46:46,Apollo 3 useQuery & useMutation causing Gatsby Build to crash,<reactjs><graphql><react-hooks><gatsby><apollo-client>,2,0,0,2020-04-26 18:04:09
61466281,2,,58701920,0,,"<p>The guide you showed is not for react native, but just for react <strong>AND</strong> react-dom. I think you know this already which is why you removed the <code>document.getElementById('root')</code>, but you didn't know that <code>graphql-ruby-client</code>, for some reason needs the DOM. It relies on document, and in react native, there is no <code>document</code> object in the global scope. This is only available in browsers.</p>&#xA;&#xA;<p>I would suggest using a different graphQL client, for example <a href=""https://www.npmjs.com/package/apollo-client"" rel=""nofollow noreferrer"">Apollo Client</a></p>&#xA;",7365866,,,,2020-04-27 18:53:07,"",,0,0,0,2020-04-27 18:53:07
61468962,2,,61468834,10,,"<p>The body you need is pretty involved for an introspection query, but I think you're looking for something like this</p>&#xA;&#xA;<p>introspection_query.json:</p>&#xA;&#xA;<pre><code>{ &#xA;  ""query"": ""query IntrospectionQuery {&#xA;      __schema {&#xA;        queryType { name }&#xA;        mutationType { name }&#xA;        subscriptionType { name }&#xA;        types {&#xA;          ...FullType&#xA;        }&#xA;        directives {&#xA;          name&#xA;          description&#xA;          locations&#xA;          args {&#xA;            ...InputValue&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;&#xA;    fragment FullType on __Type {&#xA;      kind&#xA;      name&#xA;      description&#xA;      fields(includeDeprecated: true) {&#xA;        name&#xA;        description&#xA;        args {&#xA;          ...InputValue&#xA;        }&#xA;        type {&#xA;          ...TypeRef&#xA;        }&#xA;        isDeprecated&#xA;        deprecationReason&#xA;      }&#xA;      inputFields {&#xA;        ...InputValue&#xA;      }&#xA;      interfaces {&#xA;        ...TypeRef&#xA;      }&#xA;      enumValues(includeDeprecated: true) {&#xA;        name&#xA;        description&#xA;        isDeprecated&#xA;        deprecationReason&#xA;      }&#xA;      possibleTypes {&#xA;        ...TypeRef&#xA;      }&#xA;    }&#xA;&#xA;    fragment InputValue on __InputValue {&#xA;      name&#xA;      description&#xA;      type { ...TypeRef }&#xA;      defaultValue&#xA;    }&#xA;&#xA;    fragment TypeRef on __Type {&#xA;      kind&#xA;      name&#xA;      ofType {&#xA;        kind&#xA;        name&#xA;        ofType {&#xA;          kind&#xA;          name&#xA;          ofType {&#xA;            kind&#xA;            name&#xA;            ofType {&#xA;              kind&#xA;              name&#xA;              ofType {&#xA;                kind&#xA;                name&#xA;                ofType {&#xA;                  kind&#xA;                  name&#xA;                  ofType {&#xA;                    kind&#xA;                    name&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and then you can do</p>&#xA;&#xA;<pre><code>curl -i -X POST http://localhost:8080/graphql -H ""Content-Type: application/json"" -d @introspection_query.json&#xA;</code></pre>&#xA;&#xA;<p>Shamefully stolen from&#xA;<a href=""https://gist.github.com/martinheld/9fe32b7e2c8fd932599d36e921a2a825"" rel=""noreferrer"">https://gist.github.com/martinheld/9fe32b7e2c8fd932599d36e921a2a825</a></p>&#xA;",12050506,,12050506,2020-04-27 21:54:42,2020-04-27 21:54:42,"",,0,3,0,2020-04-27 21:43:09
61480275,1,,,0,343,"<p>i want to remove this warning ""missing field"" when running tests.</p>&#xA;&#xA;<p>i am using testing library with jest for react using graphql.</p>&#xA;&#xA;<p>i have my test like below,</p>&#xA;&#xA;<pre><code>test('add button disabled', async () =&gt; {&#xA;    const count_variable: Count = {&#xA;        first: 0,&#xA;        second: 2,&#xA;    };&#xA;    const { getByTestId } = utils.render(&#xA;        &lt;SomeComponent /&gt;,&#xA;            [&#xA;                utils.gqlMock(GET_COUNT, count_variable),&#xA;            ]&#xA;    );&#xA;    //some logic to test&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>the query GET_COUNT looks like below,</p>&#xA;&#xA;<pre><code>query GetCount {&#xA;    getCount {&#xA;        first&#xA;        second&#xA;    }&#xA; }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>Type Count is as below</p>&#xA;&#xA;<pre><code>export interface Count {&#xA;    first: number;&#xA;    second: number;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Could some help me fix the warning ""missing field Count in 0"". Thanks.</p>&#xA;",12018720,,12018720,2020-04-28 13:09:54,2020-04-28 13:09:54,"How to fix the error ""missing field name in "" for the test using testing library and graphql?",<reactjs><graphql>,0,2,0,2020-04-28 12:33:12
61507583,2,,59021064,0,,"<p>I had the same issue and found two solutions to my case:</p>&#xA;&#xA;<ol>&#xA;<li>Remove the <code>fetchPolicy: 'cache-and-network'</code> (maybe not what you want)</li>&#xA;</ol>&#xA;&#xA;<p>OR</p>&#xA;&#xA;<ol start=""2"">&#xA;<li>Upgrade Apollo to the new v3.0 (still in beta when this answer was written)</li>&#xA;</ol>&#xA;&#xA;<p>Both options fixed the warning to me.</p>&#xA;",1732725,,1732725,2020-04-29 17:46:04,2020-04-29 17:46:04,"",,0,1,0,2020-04-29 17:14:08
61528382,1,,,1,91,"<p>I have a Rails application with GraphQL API which works fine when running in development. After I deployed the app to Heroku, visiting the GraphiQL interface at <code>/graphiql</code> I get this error below:</p>&#xA;&#xA;<pre><code>&#xA;Ensure that there is only one instance of ""graphql"" in the node_modules&#xA;directory. If different versions of ""graphql"" are the dependencies of other&#xA;relied on modules, use ""resolutions"" to ensure only one version is installed.&#xA;&#xA;https://yarnpkg.com/en/docs/selective-version-resolutions&#xA;&#xA;Duplicate ""graphql"" modules cannot be used at the same time since different&#xA;versions may have different capabilities and behavior. The data from one&#xA;version used in the function from another could produce confusing and&#xA;spurious results.&#xA;    at n.default (application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:597)&#xA;    at u (application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:807)&#xA;    at o (application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:807)&#xA;    at M (application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:807)&#xA;    at R (application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:807)&#xA;    at new P (application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:807)&#xA;    at P (application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:807)&#xA;    at Object.129.../jsutils/isInvalid (application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:815)&#xA;    at i (application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12)&#xA;    at application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;n.default @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:597&#xA;u @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:807&#xA;o @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:807&#xA;M @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:807&#xA;R @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:807&#xA;P @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:807&#xA;P @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:807&#xA;129.../jsutils/isInvalid @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:815&#xA;i @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;(anonymous) @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;132.../error/GraphQLError @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:831&#xA;i @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;(anonymous) @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;96../execution/execute @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:588&#xA;i @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;(anonymous) @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;97../error @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:588&#xA;i @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;(anonymous) @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;(anonymous) @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:84&#xA;12.../utility/CodeMirrorSizer @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:84&#xA;i @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;(anonymous) @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;22../components/GraphiQL @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:139&#xA;i @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;t @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;(anonymous) @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;(anonymous) @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;(anonymous) @ application-d621ca4100ba6f2e72e972ecd2a7ddcd5d2ec26b6f1fcf2932d68e2e12c78794.js:12&#xA;</code></pre>&#xA;&#xA;<p>Meanwhile, here's my routes file:</p>&#xA;&#xA;<pre><code>Rails.application.routes.draw do&#xA;  mount GraphiQL::Rails::Engine, at: '/graphiql', graphql_path: '/graphql'&#xA;  get 'home/index'&#xA;  post '/graphql', to: 'graphql#execute'&#xA;  root 'home#index'&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>And I am using these versions of <code>graphql</code> and <code>graphiql-rails</code> respectively:</p>&#xA;&#xA;<pre><code>graphql (1.10.8)&#xA;graphiql-rails (1.7.0)&#xA;</code></pre>&#xA;",11276776,,,,2020-04-30 16:36:54,"How to fix Uncaught Error: Cannot use e ""__Schema"" from another module or realm",<ruby-on-rails><heroku><graphql>,0,2,0,2020-04-30 16:36:54
61553980,1,,,0,165,"<p>I'm using Gatsby, Apollo, and a local Postgres server. I want to connect Apollo to my local postgres db to serve data to Gatsby dynamically via GraphQL queries.</p>&#xA;&#xA;<p>I'm getting the error <code>$Network error: Failed to fetch</code> when I load my Gatsby page.</p>&#xA;&#xA;<p>I followed the Gatsby-Apollo example template <a href=""https://github.com/jlengstorf/gatsby-with-apollo"" rel=""nofollow noreferrer"">here</a>. I'm using a <code>postgres address</code> in the <code>uri</code> section of the ApolloClient setup:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import ApolloClient from 'apollo-boost';&#xA;import fetch from 'isomorphic-fetch';&#xA;&#xA;export const client = new ApolloClient({&#xA;  uri: 'postgres://MY_USER@localhost:5432/MY_DB', // I think this part is wrong&#xA;  fetch,&#xA;  fetchOptions: {&#xA;    ""Access-Control-Allow-Origin"": ""*""&#xA;  },&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>In chrome console the error says:&#xA;<code>URL scheme must be ""http"" or ""https"" for CORS request.</code></p>&#xA;&#xA;<p>Which makes me think I need an ""http"" format for the postgres address. What am I missing? Do I need to create my own Apollo server using nodejs, connect it to postgres, then set <em>that</em> server address in the <code>uri</code> parameter above?</p>&#xA;",5301193,,,,2020-09-23 17:43:22,"Problem querying GraphQL with Gatsby-Apollo-Postgres setup: ""Network error: failed to fetch"" [apollo]",<reactjs><graphql><gatsby><react-apollo>,1,0,0,2020-05-02 03:08:48
61572057,2,,57080657,0,,<p>This was resolved in this last gitlab version :)</p>&#xA;,11638080,,,,2020-05-03 09:10:49,"",,0,0,0,2020-05-03 09:10:49
61576751,1,,,0,181,"<p>i have build an application with a React Frontend and ApolloServer Backend. I want to deploy both to a ubuntu server via Docker (two Containers). The Frontend is deployed via Nginx and the backend via pm2 docker images. My question is whether i should make the Server publicly available for Client graphql requests? Or is there an other way to proxy the frontend request through nginx and keeping the backend ""privat""? If this is possible i could use cor to enforce some more security (only accepting localhost requests). &#xA;Thanks a lot for your advises</p>&#xA;",9438092,,,,2020-05-03 15:10:41,React Frontend and Apollo Graphql Server deployment,<reactjs><docker><nginx><graphql><apollo>,0,2,0,2020-05-03 15:10:41
61577275,2,,61575312,28,,<p>So the issue was with node versions. </p>&#xA;&#xA;<p>I probably should have provided more context to start of with but I switched laptops and on new laptop I had version 14.1.0 installed whereas on old laptop I had version 10.13.0 installed!. So switching versions did the trick. </p>&#xA;,10712942,,,,2020-05-03 15:46:47,"",,0,4,0,2020-05-03 15:46:47
61587910,1,61588121,,4,805,"<p>So I recently tried upgrading my node from 13 to 14, but afterwards I was having issues with graphql.</p>&#xA;&#xA;<p>What happened was that I was forever ""pending"" whenever I sent a request to the server. The problem is, there's no errors being thrown.</p>&#xA;&#xA;<p>I'm wondering if anyone has had any issues with graphql when upgrading from 13 to 14.</p>&#xA;&#xA;<p>Packages used:</p>&#xA;&#xA;<ul>&#xA;<li>express-graphql</li>&#xA;<li>graphql</li>&#xA;<li>graphql-iso-date</li>&#xA;<li>graphql-query-builder-v2</li>&#xA;<li>graphql-type-json</li>&#xA;<li>graphql-upload</li>&#xA;</ul>&#xA;&#xA;<p>If you don't have any problems with node 14 and these two graphql packages, please let me know, as it's then other packages that are causing the issue. Thanks.</p>&#xA;&#xA;<p>My current solution is to downgrade node (I'm currently on node 12 since brew doesn't seem to have node 13 yet). </p>&#xA;",6554121,,6554121,2020-05-04 08:28:56,2020-05-05 12:09:12,node 14 causing unknown issues for graphqljs,<javascript><node.js><graphql><graphql-js>,1,9,0,2020-05-04 08:20:59
61618517,1,,,2,1215,"<p>I got the following error after adding Storage to my Amplify project:</p>&#xA;&#xA;<pre><code>AppComponent_Host.ngfactory.js? [sm]:1 ERROR TypeError: Cannot read property 'aws_appsync_region' of null&#xA;    at GraphQLAPIClass.push.../../node_modules/@aws-amplify/api-graphql/lib-esm/GraphQLAPI.js.GraphQLAPIClass._graphqlSubscribe (GraphQLAPI.js:342)&#xA;    at GraphQLAPIClass.push.../../node_modules/@aws-amplify/api-graphql/lib-esm/GraphQLAPI.js.GraphQLAPIClass.graphql (GraphQLAPI.js:247)&#xA;    at APIClass.push.../../node_modules/@aws-amplify/api/lib-esm/API.js.APIClass.graphql (API.js:206)&#xA;    at new APIService (API.service.ts:2004)&#xA;    at core.js:11183&#xA;    at _callFactory (core.js:20296)&#xA;    at _createProviderInstance (core.js:20254)&#xA;    at resolveNgModuleDep (core.js:20229)&#xA;    at NgModuleRef_.push.../../node_modules/@angular/core/fesm5/core.js.NgModuleRef_.get (core.js:20905)&#xA;    at injectInjectorOnly (core.js:628)&#xA;</code></pre>&#xA;&#xA;<p>The project is made in Angular</p>&#xA;&#xA;<pre><code>Angular CLI: 8.3.3&#xA;Node: 12.16.1&#xA;OS: win32 x64&#xA;Angular: 8.2.14&#xA;</code></pre>&#xA;&#xA;<p>This is my main.ts</p>&#xA;&#xA;<pre><code>import { enableProdMode } from '@angular/core';&#xA;import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';&#xA;import Amplify from 'aws-amplify';&#xA;import { AppModule } from './app/app.module';&#xA;import awsconfig from './aws-exports';&#xA;import { environment } from './environments/environment';&#xA;&#xA;if (environment.production) {&#xA;  enableProdMode();&#xA;}&#xA;&#xA;platformBrowserDynamic()&#xA;  .bootstrapModule(AppModule)&#xA;  .catch(err =&gt; console.error(err));&#xA;&#xA;Amplify.configure(awsconfig);&#xA;</code></pre>&#xA;&#xA;<p>When I change the configuration in main.ts to:</p>&#xA;&#xA;<pre><code>import { enableProdMode } from '@angular/core';&#xA;import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';&#xA;import API from '@aws-amplify/api';&#xA;import Auth from '@aws-amplify/auth';&#xA;import PubSub from '@aws-amplify/pubsub';&#xA;import Storage from '@aws-amplify/storage';&#xA;//import Amplify from 'aws-amplify';&#xA;import { AppModule } from './app/app.module';&#xA;import awsconfig from './aws-exports';&#xA;import { environment } from './environments/environment';&#xA;&#xA;if (environment.production) {&#xA;  enableProdMode();&#xA;}&#xA;&#xA;platformBrowserDynamic()&#xA;  .bootstrapModule(AppModule)&#xA;  .catch(err =&gt; console.error(err));&#xA;&#xA;//Amplify.configure(awsconfig);&#xA;&#xA;Auth.configure(awsconfig);&#xA;Storage.configure(awsconfig);&#xA;API.configure(awsconfig);&#xA;PubSub.configure(awsconfig);&#xA;</code></pre>&#xA;&#xA;<p>Then the application loads but I get this error when using the Storage:</p>&#xA;&#xA;<pre><code>[WARN] 42:23.733 AWSS3Provider - ensure credentials error No Auth module registered in Amplify&#xA;No credentials&#xA;</code></pre>&#xA;&#xA;<p>Furthermore, when I change the main.ts to:</p>&#xA;&#xA;<pre><code>import { enableProdMode } from '@angular/core';&#xA;import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';&#xA;import API from '@aws-amplify/api';&#xA;import PubSub from '@aws-amplify/pubsub';&#xA;import Amplify from 'aws-amplify';&#xA;import { AppModule } from './app/app.module';&#xA;import awsconfig from './aws-exports';&#xA;import { environment } from './environments/environment';&#xA;&#xA;if (environment.production) {&#xA;  enableProdMode();&#xA;}&#xA;&#xA;platformBrowserDynamic()&#xA;  .bootstrapModule(AppModule)&#xA;  .catch(err =&gt; console.error(err));&#xA;&#xA;Amplify.configure(awsconfig);&#xA;&#xA;// Auth.configure(awsconfig);&#xA;// Storage.configure(awsconfig);&#xA;API.configure(awsconfig);&#xA;PubSub.configure(awsconfig);&#xA;</code></pre>&#xA;&#xA;<p>This error gets logged when trying to use the Storage:</p>&#xA;&#xA;<pre><code>TypeError: Cannot read property 'put' of undefined&#xA;    at Storage.&lt;anonymous&gt; (Storage.js:229)&#xA;    at step (Storage.js:55)&#xA;    at Object.next (Storage.js:36)&#xA;    at Storage.js:30&#xA;    at new ZoneAwarePromise (zone.js:931)&#xA;    at push.../../node_modules/@aws-amplify/storage/lib-esm/Storage.js.__awaiter (Storage.js:26)&#xA;    at Storage.push.../../node_modules/@aws-amplify/storage/lib-esm/Storage.js.Storage.put (Storage.js:220)&#xA;    at RealtimeSessionService.push../src/app/services/realtime/realtime-session.service.ts.RealtimeSessionService.uploadFileTester (realtime-session.service.ts:355)&#xA;    at NavComponent.push../src/app/components/nav/nav.component.ts.NavComponent.addFile (nav.component.ts:96)&#xA;    at Object.eval [as handleEvent] (NavComponent.html:27)&#xA;core.js:4002 ERROR Error: Uncaught (in promise): No plugin found in Storage for the provider&#xA;    at resolvePromise (zone.js:852)&#xA;    at Function.ZoneAwarePromise.reject (zone.js:944)&#xA;    at Storage.&lt;anonymous&gt; (Storage.js:227)&#xA;    at step (Storage.js:55)&#xA;    at Object.next (Storage.js:36)&#xA;    at Storage.js:30&#xA;    at new ZoneAwarePromise (zone.js:931)&#xA;    at push.../../node_modules/@aws-amplify/storage/lib-esm/Storage.js.__awaiter (Storage.js:26)&#xA;    at Storage.push.../../node_modules/@aws-amplify/storage/lib-esm/Storage.js.Storage.put (Storage.js:220)&#xA;    at RealtimeSessionService.push../src/app/services/realtime/realtime-session.service.ts.RealtimeSessionService.uploadFileTester (realtime-session.service.ts:355)&#xA;</code></pre>&#xA;&#xA;<p>Any suggestions are welcome to try to solve this issue. I have tried to replicate this in a new project but no errors get logged and everything seems to work. The new project just uses </p>&#xA;&#xA;<pre><code>Amplify.configure(awsconfig);&#xA;</code></pre>&#xA;&#xA;<p>Kind regards and thank you in advance!</p>&#xA;",10598407,,,,2020-09-14 18:34:48,Amplify GraphQL Error 'Cannot read property 'aws_appsync_region' of null',<amazon-s3><graphql><aws-amplify>,0,0,0,2020-05-05 16:51:48
61638777,2,,61627790,0,,"<p>When you do an SSR, the code runs on the server. The cookies you added in browser are not available as default. You can access then in <code>getInitialProps</code> or <code>getServerSideProps</code> via <code>req.headers.cookie</code> and pass it to the authentication code again.</p>&#xA;&#xA;<p>Alternately, you can use an npm module like react-cookie <a href=""https://www.npmjs.com/package/react-cookie"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/react-cookie</a> which support isomorphic cookies. More examples on integration are available on the link. </p>&#xA;",7245188,,,,2020-05-06 15:15:16,"",,0,0,0,2020-05-06 15:15:16
61639636,1,,,3,3534,"<p>I'm in the process of learning about the MERN stack by following this book <a href=""https://rads.stackoverflow.com/amzn/click/com/1484243900"" rel=""nofollow noreferrer"" rel=""nofollow noreferrer"">https://www.amazon.com/Pro-MERN-Stack-Development-Express-dp-1484243900/dp/1484243900/ref=mt_paperback?_encoding=UTF8&amp;me=&amp;qid=</a>&#xA;but even if it is a very recent one (published in 2019) the code examples are a travesty.</p>&#xA;&#xA;<p>Basically when I try to start the server contained in this repo <a href=""https://github.com/vasansr/pro-mern-stack-2/tree/05.02-graphql-schema-file"" rel=""nofollow noreferrer"">https://github.com/vasansr/pro-mern-stack-2/tree/05.02-graphql-schema-file</a> with the command npm start the app crashes and it returns an</p>&#xA;&#xA;<p><code>Error: Cannot find module 'graphql/validation/rules/PossibleTypeExtensions'</code></p>&#xA;&#xA;<p>The code in the repo was published directly by the author so I don't exactly know how to solve this, could someone help me? Thanks a lot.</p>&#xA;",3578776,,,,2021-09-20 08:40:37,Cannot find module 'graphql/validation/rules/PossibleTypeExtensions',<graphql>,3,0,0,2020-05-06 15:56:52
61656678,1,,,0,808,"<p>So I'm playing around with Expo + React Native + yoga graphql server + Apollo Client, data fetching with queries works in browser, when from Expo I click on ""Run in Browser"", but it throws a network error if I try to run the app on android simulator/qr code from real phone. P.S. I read similar posts and issues on github so I managed to make my graphql endpoint reachable from ""outside"" with nat and no-ip. (so it's not the localhost problem). Here's the error thrown in the console.log(error):</p>&#xA;&#xA;<blockquote>&#xA;  <p>Network error: Network request failed<br>&#xA;  * <a href=""http://192.168.1.55:19001/node_modules/expo/AppEntry.bundle?platform=android&amp;dev=true&amp;minify=false&amp;hot=false:159227:30"" rel=""nofollow noreferrer"">http://192.168.1.55:19001/node_modules/expo/AppEntry.bundle?platform=android&amp;dev=true&amp;minify=false&amp;hot=false:159227:30</a> in ApolloError<br>&#xA;  - node_modules/@apollo/client/apollo-client.cjs.js:681:35 in ObservableQuery.prototype.getCurrentResult<br>&#xA;  - node_modules/@apollo/client/apollo-client.cjs.js:4957:17 in _this.getQueryResult                                                                                        - node_modules/@apollo/client/apollo-client.cjs.js:5083:24 in                                                                                                  - node_modules/@apollo/client/apollo-client.cjs.js:5235:22 in useDeepMemo<br>&#xA;  - node_modules/@apollo/client/apollo-client.cjs.js:5258:4 in useBaseQuery<br>&#xA;  * <a href=""http://192.168.1.55:19001/node_modules/expo/AppEntry.bundle?platform=android&amp;dev=true&amp;minify=false&amp;hot=false:157867:42"" rel=""nofollow noreferrer"">http://192.168.1.55:19001/node_modules/expo/AppEntry.bundle?platform=android&amp;dev=true&amp;minify=false&amp;hot=false:157867:42</a> in                                      - node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js:10696:27 in renderWithHooks                                                     - node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js:12842:6 in updateFunctionComponent                                              - node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js:20459:25 in beginWork$$1                                                        - node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js:19370:24 in performUnitOfWork<br>&#xA;  - node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js:19347:39 in workLoopSync<br>&#xA;  - node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js:18997:22 in renderRoot<br>&#xA;  * [native code]:null in renderRoot&#xA;  - node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js:18709:28 in runRootCallback&#xA;  * [native code]:null in runRootCallback&#xA;  - node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js:5642:32 in runWithPriority$argument_1&#xA;  - node_modules/scheduler/cjs/scheduler.development.js:643:23 in unstable_runWithPriority&#xA;  - node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js:5638:22 in flushSyncCallbackQueueImpl&#xA;  - node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js:5627:28 in flushSyncCallbackQueue- node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js:18556:30 in scheduleUpdateOnFiber&#xA;  - node_modules/react-native/Libraries/Renderer/implementations/ReactNativeRenderer-dev.js:11484:17 in dispatchAction&#xA;  * [native code]:null in dispatchAction&#xA;  - node_modules/@apollo/client/apollo-client.cjs.js:5174:26 in obsQuery.subscribe$argument_0.error&#xA;  - node_modules/zen-observable/lib/Observable.js:139:8 in notifySubscription&#xA;  * <a href=""http://192.168.1.55:19001/node_modules/expo/AppEntry.bundle?platform=android&amp;dev=true&amp;minify=false&amp;hot=false:165854:23"" rel=""nofollow noreferrer"">http://192.168.1.55:19001/node_modules/expo/AppEntry.bundle?platform=android&amp;dev=true&amp;minify=false&amp;hot=false:165854:23</a> in onNotify&#xA;  - node_modules/zen-observable/lib/Observable.js:239:11 in error&#xA;  * [native code]:null in forEach&#xA;  - node_modules/@apollo/client/apollo-client.cjs.js:956:4 in iterateObserversSafely&#xA;  * <a href=""http://192.168.1.55:19001/node_modules/expo/AppEntry.bundle?platform=android&amp;dev=true&amp;minify=false&amp;hot=false:159700:31"" rel=""nofollow noreferrer"">http://192.168.1.55:19001/node_modules/expo/AppEntry.bundle?platform=android&amp;dev=true&amp;minify=false&amp;hot=false:159700:31</a> in onError&#xA;  - node_modules/@apollo/client/apollo-client.cjs.js:2424:20 in invoke&#xA;  - node_modules/@apollo/client/apollo-client.cjs.js:2785:24 in info.listeners.forEach$argument_0&#xA;  * [native code]:null in forEach&#xA;  - node_modules/@apollo/client/apollo-client.cjs.js:2783:34 in queries.forEach$argument_0&#xA;  * [native code]:null in forEach&#xA;  - node_modules/@apollo/client/apollo-client.cjs.js:2781:8 in QueryManager.prototype.broadcastQueries&#xA;  * <a href=""http://192.168.1.55:19001/node_modules/expo/AppEntry.bundle?platform=android&amp;dev=true&amp;minify=false&amp;hot=false:161498:45"" rel=""nofollow noreferrer"">http://192.168.1.55:19001/node_modules/expo/AppEntry.bundle?platform=android&amp;dev=true&amp;minify=false&amp;hot=false:161498:45</a> in &#xA;  - node_modules/promise/setimmediate/core.js:37:14 in tryCallOne&#xA;  - node_modules/promise/setimmediate/core.js:123:25 in setImmediate$argument_0&#xA;  - node_modules/react-native/Libraries/Core/Timers/JSTimers.js:146:14 in _callTimer&#xA;  - node_modules/react-native/Libraries/Core/Timers/JSTimers.js:194:17 in _callImmediatesPass&#xA;  - node_modules/react-native/Libraries/Core/Timers/JSTimers.js:458:30 in callImmediates&#xA;  * [native code]:null in callImmediates&#xA;  - node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js:407:6 in __callImmediates&#xA;  - node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js:143:6 in __guard$argument_0&#xA;  - node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js:384:10 in __guard&#xA;  - node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js:142:17 in __guard$argument_0&#xA;  * [native code]:null in flushedQueue&#xA;  * [native code]:null in callFunctionReturnFlushedQueue</p>&#xA;</blockquote>&#xA;&#xA;<p>what am I doing wrong? :-(</p>&#xA;",4255992,,,,2020-05-08 09:33:05,Apollo Network Error on Android Device (React Native),<reactjs><react-native><apollo><apollo-client>,1,0,0,2020-05-07 11:29:51
61662625,2,,61639636,5,,<p>I am following the same tutorial and it seems to work if you upgrade the graphgql to 14.6.0</p>&#xA;,10366168,,,,2020-05-07 16:13:22,"",,0,0,0,2020-05-07 16:13:22
61666459,1,64190748,,1,2450,"<p>I am creating graphql API using AWS amplify.&#xA;I ran the command and created the schema.graphql, but when I run <code>Amplify push</code> I get this error: </p>&#xA;&#xA;<blockquote>&#xA;  <p>Fetching updates to backend environment: dev from the&#xA;  cloud.(node:21276) UnhandledPromiseRejectionWarning: NoSuchKey: The&#xA;  specified key does not exist.</p>&#xA;</blockquote>&#xA;&#xA;<p>How can I solve this?</p>&#xA;",4707579,,,2020-05-09 05:43:58,2020-10-04 02:53:16,NoSuchKey: The specified key does not exist. while push amplify graphql API,<amazon-web-services><graphql><aws-amplify>,1,0,0,2020-05-07 19:46:31
61667190,1,,,0,701,"<p>I am trying to deploy my GraphQL server to IIS (not sure if this is the best way to do this) using IISNode.</p>&#xA;&#xA;<p>I've used the following guides but still can't seem to get it going:</p>&#xA;&#xA;<p><a href=""https://harveywilliams.net/blog/installing-iisnode"" rel=""nofollow noreferrer"">Installing IISNode</a></p>&#xA;&#xA;<p><a href=""https://ayerdi.tech/deploy-graphql-express-server-on-windows-using-iisnode/"" rel=""nofollow noreferrer"">Deploying GraphQL Express</a></p>&#xA;&#xA;<p><a href=""https://github.com/Azure/iisnode"" rel=""nofollow noreferrer"">Official IISNode Docs</a></p>&#xA;&#xA;<p>Would anyone have any step by step instructions on how to do this, or maybe a different route I could take all together to host my GraphQL server?</p>&#xA;&#xA;<p>The end goal is to be able to access the GraphQL Playground from any device connected to a local network by doing something like this on the devices browser app:</p>&#xA;&#xA;<p><a href=""http://ip-of-server-hosting-graphql/graphql"" rel=""nofollow noreferrer"">http://ip-of-server-hosting-graphql/graphql</a></p>&#xA;",10686976,,,,2020-05-08 05:27:44,Deploy Apollo Server to IIS,<iis><graphql><apollo-server><iisnode>,1,0,0,2020-05-07 20:30:33
61676110,2,,61656678,2,,"<p>So it turns out that if you want to make your graphql endpoint accessible from the ""external world"" you have to make this under https because expo server runs on a secure connection and it will refuse to load data from an insecure one. I've been trying to implement ssl over graphql-yoga server but at the end of the day it was much faster to deploy the graphql endpoint to heroku or prisma cloud where https is offered out of the box! The stack error I showed above, though, had nothing to do with Apollo not fetching the data, as it still pops out even now! I hope this helps other people spare some time!</p>&#xA;",4255992,,,,2020-05-08 09:33:05,"",,0,1,0,2020-05-08 09:33:05
61700383,2,,61699261,1,,"<p>Referring to Strapi GraphQL <a href=""https://strapi.io/documentation/3.0.0-beta.x/plugins/graphql.html#query-api"" rel=""nofollow noreferrer"">Query API</a></p>&#xA;&#xA;<p>You can use <code>where</code> with the query <code>courses</code> to filter your fields. You will get a list of courses instead of one course</p>&#xA;&#xA;<p>This should work:</p>&#xA;&#xA;<pre><code>{&#xA;  courses(where: { name: ""course1"" }) {&#xA;    name&#xA;    description&#xA;    modules {&#xA;       title&#xA;    } &#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1656749,,1656749,2020-05-09 19:13:20,2020-05-09 19:13:20,"",,0,2,0,2020-05-09 16:50:16
61704327,2,,61690518,0,,"<p>I resolved the problem, actually in the admin project in the .env file the API URL was :</p>&#xA;&#xA;<pre><code>http://localhost:4000/admin/graphql&#xA;&#xA;</code></pre>&#xA;&#xA;<p>I had to change localhost to the Ip address of the instance like so :</p>&#xA;&#xA;<p>(example)</p>&#xA;&#xA;<pre><code>http://15.xxx.xx.xxx:4000/admin/graphql&#xA;&#xA;</code></pre>&#xA;&#xA;<p>and it worked, yet having two API (one for the shop and one for the adminDashboard) &#xA;I had to run one on the 4000 port and the other one on the 4001, Now it works but I still wonder if it's the proper way to deploy such app . thank you all</p>&#xA;",9450258,,,,2020-05-09 22:00:16,"",,0,0,0,2020-05-09 22:00:16
61720088,2,,56263624,0,,"<p>There is a problem or lack with the official <a href=""https://github.com/zeit/next.js/tree/canary/examples/with-apollo"" rel=""nofollow noreferrer"">NextJs apollo example</a>&#xA;Which is reported in this <a href=""https://github.com/apollographql/apollo-client/issues/5089"" rel=""nofollow noreferrer"">issue</a> </p>&#xA;&#xA;<p><em>I'll just stitch together the comments that allowed me to solve this issue</em>  </p>&#xA;&#xA;<p>Here is a modification to the official example, posted by <a href=""https://github.com/derozan10"" rel=""nofollow noreferrer"">derozan10</a>, derived from a post for an anterior version of the example by <a href=""https://github.com/mzygmunt"" rel=""nofollow noreferrer"">mzygmunt</a></p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import { ApolloClient } from 'apollo-client';&#xA;import { InMemoryCache } from 'apollo-cache-inmemory';&#xA;import { HttpLink } from 'apollo-link-http';&#xA;import fetch from 'isomorphic-unfetch';&#xA;import { endpoint } from '../config';&#xA;&#xA;export default function createApolloClient(initialState, ctx) {&#xA;  // The `ctx` (NextPageContext) will only be present on the server.&#xA;  // use it to extract auth headers (ctx.req) or similar.&#xA;&#xA;  const enchancedFetch = (url, init) =&gt;&#xA;    fetch(url, {&#xA;      ...init,&#xA;      headers: {&#xA;        ...init.headers,&#xA;        Cookie: ctx.req.headers.cookie,&#xA;      },&#xA;    }).then(response =&gt; response);&#xA;&#xA;  return new ApolloClient({&#xA;    ssrMode: Boolean(ctx),&#xA;    link: new HttpLink({&#xA;      uri: endpoint, // Server URL (must be absolute)&#xA;      credentials: 'same-origin', // Additional fetch() options like `credentials` or `headers`&#xA;      fetch: ctx ? enchancedFetch : fetch,&#xA;    }),&#xA;    cache: new InMemoryCache().restore(initialState),&#xA;  });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>To make it work I also changed my CORS options on the backend </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>&#xA;// a graphql-yoga + prisma 1 backend (Wes Boss' Advanced React class)&#xA;...&#xA;const cors = require(""cors"");&#xA;&#xA;const server = createServer();&#xA;&#xA;var corsOptions = {&#xA;  origin: process.env.FRONTEND_URL,&#xA;  credentials: true&#xA;};&#xA;server.express.use(cors(corsOptions));&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>And I also updated the dependencies until I could reach a 'no yarn warning' state</p>&#xA;&#xA;<pre><code>""dependencies"": {&#xA;    ""@apollo/react-hooks"": ""^3.1.5"",&#xA;    ""@apollo/react-ssr"": ""^3.1.5"",&#xA;    ""@babel/core"": ""^7.1.2"",&#xA;    ""@types/react"": ""^16.8.0"",&#xA;    ""apollo-cache-inmemory"": ""^1.6.6"",&#xA;    ""apollo-client"": ""^2.6.9"",&#xA;    ""apollo-link-http"": ""^1.5.17"",&#xA;    ""apollo-utilities"": ""^1.3.2"",&#xA;    ""graphql"": ""14.3.1"",&#xA;    ""graphql-tag"": ""^2.10.3"",&#xA;    ""isomorphic-unfetch"": ""^3.0.0"",&#xA;    ""next"": ""latest"",&#xA;    ""prop-types"": ""^15.6.2"",&#xA;    ""react"": ""^16.13.1"",&#xA;    ""react-dom"": ""^16.13.1""&#xA;  },&#xA;  ""devDependencies"": {&#xA;    ""babel-plugin-graphql-tag"": ""^2.5.0""&#xA;  }&#xA;</code></pre>&#xA;",3528232,,,,2020-05-10 23:32:11,"",,0,0,0,2020-05-10 23:32:11
61732397,1,,,1,1114,"<p>I have a backend service that uses prisma/graphql. and backend is running on port 4001.&#xA;This is the proxy-pass of my Nginx config file <code>proxy_pass:http://$host:4001</code></p>&#xA;&#xA;<p>when I run it from the server it works on both <code>http://server:4001</code> and <code>http://server</code>&#xA;But, when I run it from localhost, I am getting the following error:</p>&#xA;&#xA;<p><code>no resolver defined to resolve localhost, client: 172.30.0.1, server: _, request: ""GET / HTTP/1.1"", host: ""localhost""&#xA;</code></p>&#xA;&#xA;<p>what causes this error and how to fix it?</p>&#xA;&#xA;<p>docker-compose:</p>&#xA;&#xA;<pre><code>backend:&#xA;    image: base&#xA;    command: &gt;&#xA;      sh -c ""npm run deploy &amp;&amp; npm run start""&#xA;    env_file: ${ENV_FILE}&#xA;    ports:&#xA;      - '4001:4001'&#xA;    depends_on:&#xA;      - prisma&#xA;    restart: always&#xA;    volumes:&#xA;      - ./deploy/certs:/deploy/certs&#xA;&#xA;  nginx:&#xA;    image: nginx:latest&#xA;    volumes:&#xA;      - ./deploy/certs:/deploy/certs&#xA;      - ./deploy/nginx/conf.d:/etc/nginx/conf.d&#xA;    ports:&#xA;      - 80:80/tcp&#xA;      - 443:443/tcp&#xA;    depends_on:&#xA;      - backend&#xA;    restart: always&#xA;    env_file: ${ENV_FILE}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>nginx config:</p>&#xA;&#xA;<pre><code>server {&#xA;    listen 80 default_server;&#xA;    server_name _;&#xA;&#xA;location / {&#xA;    proxy_set_header Host $host;&#xA;    proxy_set_header X-Forwarded-For $remote_addr;&#xA;    proxy_set_header X-Real-IP $remote_addr;&#xA;    proxy_pass http://$host:4001;&#xA;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",5534469,,5534469,2020-05-12 11:24:25,2020-05-12 11:24:25,nginx: nginx reverse proxy works in server but not working on localhost,<javascript><nginx><graphql><prisma><prisma-graphql>,1,0,0,2020-05-11 14:40:20
61770437,1,61770670,,1,8608,"<p>So I am running a gql query on a React app and passing some default variables. But when the query runs I'm getting this error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Error: GraphQL error: Validation error of type FieldUndefined: Field 'firstname' in type 'HealthcareWorkersPage' is undefined @ 'healthcareWorkers/firstname'</p>&#xA;</blockquote>&#xA;&#xA;<p>This is the query in the .js file :</p>&#xA;&#xA;<pre><code>export const GET_PROFILES = gql`query healthcareWorkers($pageNo: Int = 0, $pageSize:Int =  6) {&#xA;        healthcareWorkers(pageNo: $pageNo, pageSize: $pageSize) {&#xA;            firstname&#xA;        }&#xA;    }`;&#xA;</code></pre>&#xA;&#xA;<p>Earlier the above query was :</p>&#xA;&#xA;<pre><code>export const GET_PROFILES = gql`query {&#xA;healthcareWorkers($pageNo: Int = 0, $pageSize:Int =  6) {&#xA;        healthcareWorkers(pageNo: $pageNo, pageSize: $pageSize) {&#xA;            firstname&#xA;        }&#xA;    }&#xA;    }`;&#xA;</code></pre>&#xA;&#xA;<p>Notice the <code>{}</code> after the query keyword. But in this case I got an error saying <code>Syntax Error: Expected Name, found $</code></p>&#xA;&#xA;<p>I use this query on the playground and it works without any issues:</p>&#xA;&#xA;<pre><code>    query{&#xA;  healthcareWorkers(pageNo: 1, pageSize:6) {&#xA;    healthcareWorkers {&#xA;      firstname&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The healthcareWorkers Schema:&#xA;<a href=""https://i.stack.imgur.com/67quY.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/67quY.png"" alt=""Schema""></a></p>&#xA;",9250257,,,,2020-05-13 09:14:52,Graphql saying Validation error of type undefined,<javascript><reactjs><graphql><apollo>,1,0,0,2020-05-13 09:03:06
61812457,1,,,1,316,"<p>I have the following gql query:</p>&#xA;&#xA;<pre><code>query nearby_users($point: geography!) {&#xA;  users(where: {location: {_st_d_within: {distance: 200000, from: $point}}}) {&#xA;    id&#xA;    location&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In the API console of Hasura, I put the following as query variables:</p>&#xA;&#xA;<pre><code>{&#xA;  ""point"": {&#xA;    ""type"" : ""Point"", &#xA;    ""coordinates"": [43, 11]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In turn, I get the following output (this is what I'm looking for!): </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""users"": [&#xA;      {&#xA;        ""id"": 3,&#xA;        ""location"": {&#xA;          ""type"": ""Point"",&#xA;          ""crs"": {&#xA;            ""type"": ""name"",&#xA;            ""properties"": {&#xA;              ""name"": ""urn:ogc:def:crs:EPSG::4326""&#xA;            }&#xA;          },&#xA;          ""coordinates"": [&#xA;            43.75049,&#xA;            11.03207&#xA;          ]&#xA;        }&#xA;      },&#xA;      {&#xA;        ""id"": 1,&#xA;        ""location"": {&#xA;          ""type"": ""Point"",&#xA;          ""crs"": {&#xA;            ""type"": ""name"",&#xA;            ""properties"": {&#xA;              ""name"": ""urn:ogc:def:crs:EPSG::4326""&#xA;            }&#xA;          },&#xA;          ""coordinates"": [&#xA;            43.75049,&#xA;            11.03207&#xA;          ]&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, when I move things to React Native using an Apollo client, things get a bit tricky. </p>&#xA;&#xA;<p>I create a point as follows:</p>&#xA;&#xA;<pre><code>    const point = JSON.stringify({&#xA;      ""point"": {&#xA;        ""type"" : ""Point"", &#xA;        ""coordinates"": [43, 11]&#xA;      }&#xA;    }); &#xA;</code></pre>&#xA;&#xA;<p>And then query the client: </p>&#xA;&#xA;<pre><code>client.query({ query: GET_USERS_NEARBY, variables: { point }})&#xA;</code></pre>&#xA;&#xA;<p>However, I get the following error:</p>&#xA;&#xA;<pre><code>GraphQL error: postgres query error&#xA;* http://192.168.0.201:19001/node_modules/expo/AppEntry.bundle?platform=ios&amp;dev=true&amp;minify=false&amp;hot=false:136968:30 in ApolloError&#xA;- node_modules/@apollo/client/apollo-client.cjs.js:2465:62 in &lt;anonymous&gt;&#xA;* [native code]:null in forEach&#xA;- node_modules/@apollo/client/apollo-client.cjs.js:2060:12 in QueryInfo.prototype.notify&#xA;* [native code]:null in forEach&#xA;- node_modules/@apollo/client/apollo-client.cjs.js:2720:8 in QueryManager.prototype.broadcastQueries&#xA;* http://192.168.0.201:19001/node_modules/expo/AppEntry.bundle?platform=ios&amp;dev=true&amp;minify=false&amp;hot=false:139848:35 in &lt;unknown&gt;&#xA;- node_modules/zen-observable/lib/Observable.js:321:16 in _this2.subscribe$argument_0.next&#xA;- node_modules/zen-observable/lib/Observable.js:134:6 in notifySubscription&#xA;* http://192.168.0.201:19001/node_modules/expo/AppEntry.bundle?platform=ios&amp;dev=true&amp;minify=false&amp;hot=false:143391:23 in onNotify&#xA;- node_modules/zen-observable/lib/Observable.js:234:11 in next&#xA;* [native code]:null in forEach&#xA;- node_modules/@apollo/client/apollo-client.cjs.js:1911:28 in inner.subscribe$argument_0.next&#xA;- node_modules/subscriptions-transport-ws/dist/client.js:144:37 in executeOperation$argument_1&#xA;- node_modules/subscriptions-transport-ws/dist/client.js:510:16 in SubscriptionClient.prototype.processReceivedData&#xA;* http://192.168.0.201:19001/node_modules/expo/AppEntry.bundle?platform=ios&amp;dev=true&amp;minify=false&amp;hot=false:150646:34 in &lt;unknown&gt;&#xA;- node_modules/event-target-shim/dist/event-target-shim.js:818:39 in EventTarget.prototype.dispatchEvent&#xA;- node_modules/react-native/Libraries/WebSocket/WebSocket.js:232:27 in _eventEmitter.addListener$argument_1&#xA;- node_modules/react-native/Libraries/vendor/emitter/EventEmitter.js:190:12 in emit&#xA;- node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js:436:47 in __callFunction&#xA;- node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js:111:26 in __guard$argument_0&#xA;- node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js:384:10 in __guard&#xA;- node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js:110:17 in __guard$argument_0&#xA;* [native code]:null in callFunctionReturnFlushedQueue&#xA;</code></pre>&#xA;&#xA;<p>After much experimentation, it is very clear that the error is coming from my point constant. </p>&#xA;&#xA;<p>I tried removing the JSON.stringify as follows:</p>&#xA;&#xA;<pre><code>    const point = {&#xA;      ""point"": {&#xA;        ""type"" : ""Point"", &#xA;        ""coordinates"": [43, 11]&#xA;      }&#xA;    }; &#xA;</code></pre>&#xA;&#xA;<p>This leads a network type error:</p>&#xA;&#xA;<pre><code>Network error: key ""type"" not present&#xA;* http://192.168.0.201:19001/node_modules/expo/AppEntry.bundle?platform=ios&amp;dev=true&amp;minify=false&amp;hot=false:136968:30 in ApolloError&#xA;- node_modules/@apollo/client/apollo-client.cjs.js:2465:62 in &lt;anonymous&gt;&#xA;* [native code]:null in forEach&#xA;- node_modules/@apollo/client/apollo-client.cjs.js:2060:12 in QueryInfo.prototype.notify&#xA;* [native code]:null in forEach&#xA;- node_modules/@apollo/client/apollo-client.cjs.js:2720:8 in QueryManager.prototype.broadcastQueries&#xA;* http://192.168.0.201:19001/node_modules/expo/AppEntry.bundle?platform=ios&amp;dev=true&amp;minify=false&amp;hot=false:139313:45 in &lt;unknown&gt;&#xA;- node_modules/promise/setimmediate/core.js:37:14 in tryCallOne&#xA;- node_modules/promise/setimmediate/core.js:123:25 in setImmediate$argument_0&#xA;- node_modules/react-native/Libraries/Core/Timers/JSTimers.js:146:14 in _callTimer&#xA;- node_modules/react-native/Libraries/Core/Timers/JSTimers.js:194:17 in _callImmediatesPass&#xA;- node_modules/react-native/Libraries/Core/Timers/JSTimers.js:458:30 in callImmediates&#xA;* [native code]:null in callImmediates&#xA;- node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js:407:6 in __callImmediates&#xA;- node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js:143:6 in __guard$argument_0&#xA;- node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js:384:10 in __guard&#xA;- node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js:142:17 in __guard$argument_0&#xA;* [native code]:null in flushedQueue&#xA;* [native code]:null in callFunctionReturnFlushedQueue&#xA;</code></pre>&#xA;&#xA;<p>Does anyone have an idea on what I'm doing wrong? Really appreciate it :)</p>&#xA;",5696181,,,,2021-09-08 02:40:35,How to pass a geography query variable in Apollo client (using React Native / Hasura GraphQL),<postgresql><graphql><react-apollo><apollo-client><hasura>,1,1,0,2020-05-15 05:40:03
61825555,2,,61825388,1,,"<p>You should post the relevant code samples directly into your question, because links can be dead in the future. One thing i have noticed is that you are missing closing <code>}</code> in your typeDefs.&#xA;Example from <code>auth.js</code></p>&#xA;&#xA;<pre><code>const { gql } = require(""apollo-server-express"");&#xA;&#xA;module.exports = gql`&#xA;type Query {&#xA;    me: String!&#xA;`;&#xA;</code></pre>&#xA;",1386873,,,,2020-05-15 17:58:54,"",,0,0,0,2020-05-15 17:58:54
61836345,1,,,0,74,"<p>I'm quite new to neo4j and need some help in optimizing my import query. Currently, either the database connection crashes or it takes forever to run.</p>&#xA;&#xA;<p>I have around 70K rows which are basically 25K unique nodes. I'm using the following script to import data and create relationships. The <code>csv</code> file itself is around <code>60MB</code></p>&#xA;&#xA;<p><strong>Creating constraints/indexes</strong></p>&#xA;&#xA;<pre><code>CREATE CONSTRAINT ON (p:Person) ASSERT p.id IS UNIQUE&#xA;CREATE INDEX ON :Session(id)&#xA;CREATE INDEX ON :ReferrerType(id)&#xA;CREATE INDEX ON :Referrer(id)&#xA;CREATE INDEX ON :Landing(id)&#xA;CREATE INDEX ON :eventType(id)&#xA;CREATE INDEX ON :conversion(id)&#xA;</code></pre>&#xA;&#xA;<p><strong>Import data</strong></p>&#xA;&#xA;<pre><code>USING PERIODIC COMMIT 500&#xA;LOAD CSV WITH HEADERS FROM 'file:///df_all.csv' AS row&#xA;MERGE (p:Person {id: row._id})&#xA;MERGE (s:Session {id: row.sessionField})&#xA;MERGE (rt:ReferrerType {id: row.referer_type})&#xA;MERGE (rf:Referrer {id: row.refererField})&#xA;MERGE (l:Landing {id: row.location, device: row.browserName, firstTime: row.first})&#xA;MERGE (et:eventType {id: row.eventType, links: row.linkClick, scroll: row.scrollPage, button: row.buttonClick, search: row.visitorSearch, forms: row.formSubmission})&#xA;MERGE (cf:conversion {id: row.visitorEmail})&#xA;FOREACH(&#xA;  x IN CASE WHEN s.referer_type IS NULL OR NOT row.referer_type IN s.referer_type THEN [1] END | SET s.referer_type = COALESCE(s.referer_type, []) + row.referer_type&#xA;)&#xA;FOREACH(&#xA;  x IN CASE WHEN rf.location IS NULL OR NOT row.location IN rf.location THEN [1] END | SET rf.location = COALESCE(rf.location, []) + row.location&#xA;  )&#xA;FOREACH(&#xA;  x IN CASE WHEN l.eventType IS NULL OR NOT row.eventType IN l.eventType THEN [1] END | SET l.eventType = COALESCE(l.eventType, []) + row.eventType&#xA;  )&#xA;FOREACH(&#xA;  x IN CASE WHEN l.visitorEmail IS NULL OR NOT row.visitorEmail IN l.visitorEmail THEN [1] END | SET l.visitorEmail = COALESCE(l.visitorEmail, []) + row.visitorEmail&#xA;  )&#xA;MERGE (p)-[:HAS_SESSION]-&gt;(s)-[:REF_TYPE]-&gt;(rt)-[:FROM]-&gt;(rf)-[:LANDS_ON]-&gt;(l)-[:EVENT_DONE]-&gt;(et)&lt;-[:VISITOR_TYPE]-(cf)&#xA;RETURN p, s, rt, rf, l, et, cf ORDER BY row._id,row.sessionField,row.timestamp&#xA;</code></pre>&#xA;&#xA;<p>I'm not sure how else to optimize the query. I'm using a GCP VM with <code>8 cores and 30 GB Memory</code>. Most of the cores sit idle and not seeing memory consumption of more than 1-10GB</p>&#xA;&#xA;<p><code>Get this warning usually: The execution plan for this query contains the Eager operator</code></p>&#xA;",4492624,,,,2020-05-16 11:56:53,Neo4j server crashing on importing 70K rows from CSV. Unable to optimize the query,<neo4j><graphql><neo4j-apoc>,0,5,0,2020-05-16 11:56:53
61886756,1,,,9,6050,"<p>How to tell GraphQL requests apart in dev tools network tab when all have identical URL?</p>&#xA;&#xA;<p>All my requests target <code>/api/graphql</code> so to tell them apart I need to click each one, switch to the ""Headers"" tab, scroll down to the ""Request Payload"" section and read the query. This means that I get almost no overview among the requests so I have to click several requests before I find the one I want to inspect.</p>&#xA;&#xA;<p>How do people solve this?</p>&#xA;",5169216,,3001761,2020-05-29 10:39:16,2021-07-30 06:21:53,How to tell GraphQL requests apart in dev tools network tab when all have identical URL?,<graphql><google-chrome-devtools><apollo>,3,4,0,2020-05-19 08:38:01
61913192,1,67403511,,4,1237,"<p>I am implementing a GraphQL server (<a href=""https://hasura.io/"" rel=""nofollow noreferrer"">Hasura</a>), the normal setup looks like this:</p>&#xA;&#xA;<pre><code>docker run -d --net=host \&#xA;-e HASURA_GRAPHQL_DATABASE_URL=postgres://username:password@hostname:port/dbname \&#xA;-e HASURA_GRAPHQL_ENABLE_CONSOLE=true \&#xA;hasura/graphql-engine:latest&#xA;</code></pre>&#xA;&#xA;<p>I couldn't find in the <a href=""https://hasura.io/docs/1.0/graphql/manual/deployment/docker/index.html#"" rel=""nofollow noreferrer"">docs</a> a way to use multiple databases within the same instance, is it even possible?</p>&#xA;",3876830,,,,2021-05-05 14:39:22,Does Hasura (GraphQL) supports multiple databases?,<graphql><hasura>,2,1,0,2020-05-20 12:29:24
61921671,1,,,0,291,"<p>I'm trying to find any documentation with examples to authenticate to hasura on heroku in python and query and mutate data, I couldn't find any info on this topic, can you guy please help me?</p>&#xA;",10341521,,7508700,2020-05-29 21:53:39,2020-05-29 21:53:39,"How to authenticate as admin, query and mutate Hasura in python?",<python><authentication><graphql><hasura>,1,0,0,2020-05-20 19:48:49
61933658,2,,61740996,1,,"<p>Have you tried testing locally but with the netlify environment via <code>netlify functions:invoke</code>? It can help to debug such issues. (See <a href=""https://github.com/netlify/cli/blob/master/docs/netlify-dev.md#locally-testing-functions-with-netlify-functionsinvoke"" rel=""nofollow noreferrer"">https://github.com/netlify/cli/blob/master/docs/netlify-dev.md#locally-testing-functions-with-netlify-functionsinvoke</a>)</p>&#xA;&#xA;<p>Regarding your issue it seems certain files are ignored as you already suggested:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Netlify will access the functions directory&#xA;  during every deploy, zipping and deploying each supported code file as&#xA;  a serverless Lambda function on AWS. (Note that, with one exception,&#xA;  any files in subdirectories will be ignored.)</p>&#xA;</blockquote>&#xA;&#xA;<p>To use multiple files you need to define a folder with the function name and the js in it within your functions folder, otherwise it will only consider the .js file: </p>&#xA;&#xA;<blockquote>&#xA;  <p>You can use either a standalone .js file that exports a handler (e.g.&#xA;  functions/{function_name}.js) or a folder with the same name as a .js&#xA;  file in it that exports a handler (e.g.&#xA;  functions/{function_name}/{function_name}.js).</p>&#xA;</blockquote>&#xA;&#xA;<p>Make sure to use relative imports or consider the full path. </p>&#xA;&#xA;<p>Also you could try deploying unbundled JavaScript starting with CLI version 2.7.0. See: <a href=""https://docs.netlify.com/cli/get-started/#unbundled-javascript-function-deploys"" rel=""nofollow noreferrer"">https://docs.netlify.com/cli/get-started/#unbundled-javascript-function-deploys</a></p>&#xA;",1398640,,,,2020-05-21 11:38:33,"",,0,0,0,2020-05-21 11:38:33
61959539,2,,61938280,3,,"<p>Thanks to Daniel Rearden who commented on the original question, I got to the bottom of it. The problem was that I was importing <code>makeExecutableSchema</code> from <code>apollo-server-express</code>, which depends on <code>graphql-tools</code> version <code>4</code>.</p>&#xA;&#xA;<p>The latest <code>graphql-tools</code> is version <code>6</code>. Adding an explicit dependency on this latest version and importing <code>makeExecutableSchema</code> from it allowed me to upgrade to the latest <code>graphql</code> version (<code>15.0.0</code>).</p>&#xA;",337554,,,,2020-05-22 16:26:04,"",,0,0,0,2020-05-22 16:26:04
61977854,1,,,-2,220,"<p>I'm running into some issues trying to connect a React class component to my Apollo cache data, which for now is just local.</p>&#xA;&#xA;<p>I'm following the docs from <a href=""https://www.apollographql.com/docs/react/development-testing/static-typing/"" rel=""nofollow noreferrer"">here</a>, but I'm running into trouble where VSCode and Webpack are throwing errors when I access data like this: <code>this.props.data.playing</code>, which is how I'd expect to access it. Despite this, in the browser this returns the correct data. However if I access data like this: <code>this.props.data.data.playing</code> the typecheck passes but throws an error in the browser console (<code>Cannot read property 'playing' of undefined</code>). So I'm reasonably sure this is a type definition error, but I'm not sure where I'm going wrong.</p>&#xA;&#xA;<p>I should point out that NPM and all packages are updated.</p>&#xA;&#xA;<pre><code>type AudioData = {&#xA;  bpm: number;&#xA;  beatsPerBar: number;&#xA;  playing: boolean;&#xA;  metronomeSound: string;&#xA;  playPosition: number;&#xA;  playStartTime: number;&#xA;};&#xA;&#xA;type Response = {&#xA;  data: AudioData;&#xA;};&#xA;&#xA;class ConnectedWorkspaceAudio extends React.Component&lt;&#xA;  ChildProps&lt;{}, Response&gt;&#xA;&gt; {&#xA;  _context: AudioContext;&#xA;  _scheduler: Scheduler;&#xA;  _recorder: Recorder;&#xA;&#xA;  constructor(props: ChildProps&lt;{}, Response&gt;) {&#xA;    super(props);&#xA;  }&#xA;&#xA;  componentDidMount(): void {&#xA;    /***/&#xA;  }&#xA;&#xA;  componentDidUpdate(prevProps: ChildProps&lt;{}, Response&gt;): void {&#xA;    console.log(this.props.data.playing); // Fails type check, prints correctly in browser.&#xA;    if (this.props.data.data) {&#xA;      if (this.props.data.data.playing &amp;&amp; !prevProps.data.data.playing) { // Passes type check, gives console error in browser.&#xA;        useApolloClient().writeData({ data: { playing: true } });&#xA;      }&#xA;      if (!this.props.data.data.playing &amp;&amp; prevProps.data.data.playing) {&#xA;        useApolloClient().writeData({ data: { playing: false } });&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;  /** There's some more methods including render() I don't believe are relevant. */&#xA;}&#xA;&#xA;&#xA;const WORKSPACE_AUDIO_QUERY = gql`&#xA;  query AudioState {&#xA;    bpm @client&#xA;    beatsPerBar @client&#xA;    playing @client&#xA;    metronomeSound @client&#xA;    playPosition @client&#xA;    playStartTime @client&#xA;  }&#xA;`;&#xA;&#xA;const WorkspaceAudio = graphql&lt;{}, Response&gt;(WORKSPACE_AUDIO_QUERY)(&#xA;  ConnectedWorkspaceAudio&#xA;);&#xA;&#xA;export { WorkspaceAudio };&#xA;</code></pre>&#xA;",1245581,,1245581,2020-05-23 20:01:54,2020-05-23 21:21:00,React-apollo Typescript errors when using graphql to pass props to higher order component,<javascript><typescript><graphql><react-apollo>,2,0,0,2020-05-23 19:56:51
61978524,1,62138382,,2,7434,"<p>I am using the following book to build a MERN stack CRUD application. I'm having trouble installing and running graphql.</p>&#xA;&#xA;<p><a href=""https://rads.stackoverflow.com/amzn/click/com/1484243900"" rel=""nofollow noreferrer"" rel=""nofollow noreferrer"">https://www.amazon.com/Pro-MERN-Stack-Development-Express-dp-1484243900/dp/1484243900/ref=mt_paperback?_encoding=UTF8&amp;me=&amp;qid=</a>  (published in 2019).</p>&#xA;&#xA;<p>When I try to start the server contained in this repo <a href=""https://github.com/vasansr/pro-mern-stack-2/tree/05.02-graphql-schema-file"" rel=""nofollow noreferrer"">https://github.com/vasansr/pro-mern-stack-2/tree/05.02-graphql-schema-file</a> with the command npm start the app crashes and it returns an</p>&#xA;&#xA;<p>Error: Cannot find module 'graphql/validation/rules/PossibleTypeExtensions'</p>&#xA;&#xA;<p>I then followed some advice from a previous instance of this question on here to npm install karma-sinon-chai for the dependancies. But then I get the following error:</p>&#xA;&#xA;<p>npm WARN apollo-graphql@0.4.4 requires a peer of graphql@^14.2.1 but none is installed. You must install peer dependencies yourself.</p>&#xA;",12854957,,,,2021-08-30 10:42:53,Error: Cannot find module 'graphql/validation/rules/PossibleTypeExtensions',<node.js><express><graphql>,2,0,0,2020-05-23 21:00:41
61988878,2,,61986538,0,,"<p>This appears to be a regression introduced by version 6.0.0 of <code>graphql-tools</code>. Bump your version down to 5.0.0 by running <code>npm install graphql-tools@5.0.0</code>. If an issue hasn't been opened already, you can open one on Github for this bug.</p>&#xA;",6024220,,,,2020-05-24 16:22:53,"",,0,3,0,2020-05-24 16:22:53
62020392,1,,,0,683,"<p>I am getting lots of deprecation warnings. I am not sure why I am getting it. Could anyone please guide me out.</p>&#xA;&#xA;<p>I have created a boilerplate for apollo graph ql with koa node js frameworks. I am planning to use a graph ql subscription in my next project. However, these warnings or errors making me confused. this is my git <a href=""https://github.com/sumitbhavra/graphql-koa.git"" rel=""nofollow noreferrer"">https://github.com/sumitbhavra/graphql-koa.git</a></p>&#xA;&#xA;<pre><code>{&#xA;          ""name"": ""include"",&#xA;          ""description"": ""Directs the executor to include this field or fragment only when the `if` argument is true."",&#xA;          ""locations"": [&#xA;            ""FIELD"",&#xA;            ""FRAGMENT_SPREAD"",&#xA;            ""INLINE_FRAGMENT""&#xA;          ],&#xA;          ""args"": [&#xA;            {&#xA;              ""name"": ""if"",&#xA;              ""description"": ""Included when true."",&#xA;              ""type"": {&#xA;                ""kind"": ""NON_NULL"",&#xA;                ""name"": null,&#xA;                ""ofType"": {&#xA;                  ""kind"": ""SCALAR"",&#xA;                  ""name"": ""Boolean"",&#xA;                  ""ofType"": null&#xA;                }&#xA;              },&#xA;              ""defaultValue"": null&#xA;            }&#xA;          ]&#xA;        },&#xA;        {&#xA;          ""name"": ""deprecated"",&#xA;          ""description"": ""Marks an element of a GraphQL schema as no longer supported."",&#xA;          ""locations"": [&#xA;            ""FIELD_DEFINITION"",&#xA;            ""ENUM_VALUE""&#xA;          ],&#xA;          ""args"": [&#xA;            {&#xA;              ""name"": ""reason"",&#xA;              ""description"": ""Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/)."",&#xA;              ""type"": {&#xA;                ""kind"": ""SCALAR"",&#xA;                ""name"": ""String"",&#xA;                ""ofType"": null&#xA;              },&#xA;              ""defaultValue"": ""\""No longer supported\""""&#xA;            }&#xA;          ]&#xA;        }&#xA;</code></pre>&#xA;",10465583,,,,2020-05-26 11:29:43,Apollo GraphQL Deprecation Warnings,<node.js><graphql><apollo>,1,0,0,2020-05-26 10:46:16
62021154,2,,62020392,1,,"<p>That is not a deprecation warning. That is an introspection result that includes information about the <code>@deprecated</code> directive, which can be used inside your type definitions to mark individual fields or enum values as deprecated.</p>&#xA;",6024220,,,,2020-05-26 11:29:43,"",,0,0,0,2020-05-26 11:29:43
62026768,1,,,0,1306,"<p>I am working with graphql/apollo and Prisma Cloud server and have been attempting to link to my new react client for adding players to a team in a club. I am however getting a 400 status code error. I have been looking through many other similar errors and attempted to replicate and resolve but can't seem to figure this one out. </p>&#xA;&#xA;<p>Here is my app.js</p>&#xA;&#xA;<pre><code>import ApolloClient from 'apollo-boost';&#xA;import { ApolloProvider } from '@apollo/react-hooks';&#xA;&#xA;&#xA;//components&#xA;import TeamList from './components/TeamList'&#xA;import PlayerList from './components/PlayerList';&#xA;import AddPlayer from './components/AddPlayer';&#xA;import AddTeam from './components/AddTeam';&#xA;&#xA;&#xA;//apollo client setup&#xA;const client = new ApolloClient({&#xA;  uri: 'http://localhost:4000'&#xA;});&#xA;&#xA;class App extends Component {&#xA;  render() {&#xA;    return (&#xA;        &lt;ApolloProvider client={client}&gt;&#xA;            &lt;div id=""main""&gt;&#xA;      &lt;h1&gt;Coach Ed&lt;/h1&gt;&#xA;     &lt;TeamList/&gt;&#xA;     &lt;PlayerList/&gt;&#xA;     &lt;AddPlayer/&gt;&#xA;     &lt;AddTeam/&gt;&#xA;     &lt;/div&gt;&#xA;        &lt;/ApolloProvider&gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;export default App;&#xA;</code></pre>&#xA;&#xA;<p>Here is my Add Player component:</p>&#xA;&#xA;<pre><code>class AddPlayer extends Component {&#xA;    constructor(props){&#xA;        super(props);&#xA;        this.state = {&#xA;            playername: """",&#xA;            team: """"&#xA;        };&#xA;    }&#xA;        displayTeams(){&#xA;            var data = this.props.getTeamsQuery;&#xA;            if(data.loading){&#xA;                return( &lt;option disabled&gt;Loading teams&lt;/option&gt; );&#xA;            } else {&#xA;                return data.teams.map(team =&gt; {&#xA;                    return( &lt;option key={ team.id } value={team.id}&gt;{ team.title }&lt;/option&gt; );&#xA;                });&#xA;            }&#xA;        }&#xA;</code></pre>&#xA;&#xA;<p>Here is my add player mutation</p>&#xA;&#xA;<pre><code>const addPlayerMutation = gql`&#xA;    mutation{&#xA;        createPlayer(playername: """", teamId: """"){&#xA;            playername&#xA;            id&#xA;        }&#xA;    }&#xA;`;&#xA;&#xA;export { getPlayersQuery, getTeamsQuery, addPlayerMutation}&#xA;</code></pre>&#xA;&#xA;<p>Here is the schema information from server</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;     createPlayer(data: CreatePlayerInput!): Player!&#xA;  }&#xA;&#xA;type Player {&#xA;    id: ID!&#xA;    playername: String!&#xA;    coachcreator: User!&#xA;    team: Team!&#xA;    updatedAt: String!&#xA;    createdAt: String!&#xA;}&#xA;&#xA;input CreatePlayerInput {&#xA;    playername: String!&#xA;    team: ID!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is my Create Player Mutation on Server</p>&#xA;&#xA;<pre><code>async createPlayer(parent, args, { prisma, request }, info) {&#xA;        const userId = getUserId(request)&#xA;        const teamExists = await prisma.exists.Team({&#xA;            id: args.data.team,&#xA;            published: true&#xA;        })&#xA;&#xA;        if (!teamExists) {&#xA;            throw new Error('Unable to find team')&#xA;        }&#xA;&#xA;        return prisma.mutation.createPlayer({&#xA;            data: {&#xA;                playername: args.data.playername,&#xA;                coachcreator: {&#xA;                    connect: {&#xA;                        id: userId&#xA;                    }&#xA;                },&#xA;                team: {&#xA;                    connect: {&#xA;                        id: args.data.team&#xA;                    }&#xA;                }&#xA;            }&#xA;        }, info)&#xA;    },&#xA;</code></pre>&#xA;&#xA;<p>This is the error that I am receiving </p>&#xA;&#xA;<pre><code>Unhandled Rejection (Error): Network error: Response not successful: Received status code 400&#xA;</code></pre>&#xA;&#xA;<p>and </p>&#xA;&#xA;<pre><code>POST http://localhost:4000/ 400 (Bad Request)&#xA;(anonymous) @   0.chunk.js:7153&#xA;Subscription    @   0.chunk.js:72989&#xA;subscribe   @   0.chunk.js:73067&#xA;(anonymous) @   0.chunk.js:6788&#xA;Subscription    @   0.chunk.js:72989&#xA;subscribe   @   0.chunk.js:73067&#xA;(anonymous) @   0.chunk.js:5126&#xA;Subscription    @   0.chunk.js:72989&#xA;subscribe   @   0.chunk.js:73067&#xA;(anonymous) @   0.chunk.js:5321&#xA;(anonymous) @   0.chunk.js:5316&#xA;step    @   0.chunk.js:71481&#xA;(anonymous) @   0.chunk.js:71412&#xA;(anonymous) @   0.chunk.js:71385&#xA;__awaiter   @   0.chunk.js:71364&#xA;QueryManager.mutate @   0.chunk.js:5256&#xA;ApolloClient.mutate @   0.chunk.js:6626&#xA;MutationData.mutate @   0.chunk.js:1303&#xA;MutationData._this.runMutation  @   0.chunk.js:1254&#xA;submitForm  @   main.chunk.js:175&#xA;callCallback    @   0.chunk.js:40512&#xA;invokeGuardedCallbackDev    @   0.chunk.js:40561&#xA;invokeGuardedCallback   @   0.chunk.js:40614&#xA;invokeGuardedCallbackAndCatchFirstError @   0.chunk.js:40629&#xA;executeDispatch @   0.chunk.js:40714&#xA;executeDispatchesInOrder    @   0.chunk.js:40739&#xA;executeDispatchesAndRelease @   0.chunk.js:43623&#xA;executeDispatchesAndReleaseTopLevel @   0.chunk.js:43632&#xA;forEachAccumulated  @   0.chunk.js:43604&#xA;runEventsInBatch    @   0.chunk.js:43649```&#xA;</code></pre>&#xA;&#xA;<p>plus also</p>&#xA;&#xA;<pre><code>ncaught (in promise) Error: Network error: Response not successful: Received status code 400&#xA;    at new ApolloError (0.chunk.js:4119)&#xA;    at Object.error (0.chunk.js:5357)&#xA;    at notifySubscription (0.chunk.js:72934)&#xA;    at onNotify (0.chunk.js:72973)&#xA;    at SubscriptionObserver.error (0.chunk.js:73030)&#xA;    at 0.chunk.js:5134&#xA;    at Set.forEach (&lt;anonymous&gt;)&#xA;    at Object.error (0.chunk.js:5133)&#xA;    at notifySubscription (0.chunk.js:72934)&#xA;    at onNotify (0.chunk.js:72973)&#xA;    at SubscriptionObserver.error (0.chunk.js:73030)&#xA;    at Object.error (0.chunk.js:6827)&#xA;    at notifySubscription (0.chunk.js:72934)&#xA;    at onNotify (0.chunk.js:72973)&#xA;    at SubscriptionObserver.error (0.chunk.js:73030)&#xA;    at 0.chunk.js:7169&#xA;</code></pre>&#xA;&#xA;<p>I have read up on adding 'cors' but almost all are linked to working with Express and not sure if same principles apply. Also been some discussion on installing Apollo Error Handling and couldn't quite figure out how to implement this with import and versions between Apollo versions being an issue.</p>&#xA;&#xA;<p>Any help with the error shown above would be much appreciated. </p>&#xA;",12945347,,,,2020-05-26 16:20:17,New Apollo Error Unhandled Rejection (Error): Network error: status code 400,<reactjs><graphql><apollo><react-apollo><prisma>,0,3,0,2020-05-26 16:20:17
62044998,1,,,3,236,"<p>First time posting on StackOverflow after many happy years reading it so apologies if this isn't written correctly.&#xA;We recently pushed our React / NextJS app to production, hosted by Heroku. We have a separate GraphQL Yoga server to manipulate and send the right data, also hosted by Heroku. You can visit the app at <a href=""https://www.sayplants.com"" rel=""nofollow noreferrer"">https://www.sayplants.com</a>. My database (Prisma) is reporting 10,000s of requests to our database despite the fact that I am the only person using the site . I checked our Heroku logs and am seeing a very strange pattern. First, a GET request:</p>&#xA;&#xA;<pre><code>2020-05-27T13:40:18.883461+00:00 heroku[router]: at=info method=GET path=""/"" host=www.sayplants.com request_id=36c364a0-012b-4927-813d-314bd3674657 fwd=""176.249.98.203"" dyno=web.1 connect=1ms service=150ms status=200 bytes=4252 protocol=https&#xA;</code></pre>&#xA;&#xA;<p>Then, a POST request with the same request_id, but a proxy added to the ""fwd"" field:</p>&#xA;&#xA;<pre><code>2020-05-27T13:40:18.975987+00:00 heroku[router]: at=info method=POST path=""/"" host=www.sayplants.com request_id=36c364a0-012b-4927-813d-314bd3674657 fwd=""176.249.98.203,54.216.239.50"" dyno=web.1 connect=0ms service=89ms status=200 bytes=4251 protocol=https&#xA;</code></pre>&#xA;&#xA;<p>Then, the POST request repeats itself again and again, adding (the same) proxy to the ""fwd"" (Heroku's shorthand for X-Forwarded-For) each time, so we have <code>fwd=""176.249.98.203, 54.216.239.50""</code>, and in the next log we have <code>fwd=""176.249.98.203, 54.216.239.50, 54.216.239.50""</code>, and then <code>fwd=""176.249.98.203, 54.216.239.50, 54.216.239.50, 54.216.239.50""</code>, and so on until there are hundreds of the same IP address repeated over and over.</p>&#xA;&#xA;<p>On closer inspection we were able to remove this behaviour in production, by removing our User information requests from the NextJS app - removing the following:</p>&#xA;&#xA;<pre><code>const User = props =&gt; (&#xA;  &lt;Query {...props} query={CURRENT_USER_QUERY}&gt;&#xA;    {payload =&gt; props.children(payload)}&#xA;  &lt;/Query&gt;&#xA;);&#xA;&#xA;User.propTypes = {&#xA;  children: PropTypes.func.isRequired,&#xA;};&#xA;&#xA;export default User;&#xA;</code></pre>&#xA;&#xA;<p>Where:</p>&#xA;&#xA;<pre><code>const CURRENT_USER_QUERY = gql`&#xA;  query {&#xA;    me {&#xA;      id&#xA;      email&#xA;      name&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>But obviously we need user functionality! So we have isolated the issue but don't know how to solve it. </p>&#xA;&#xA;<p>If you're still with me, for fullness' sake this is our backend Query resolver:</p>&#xA;&#xA;<pre><code>    async me(parent, args, ctx, info) {&#xA;        if(!ctx.request.userId) {&#xA;            return null;&#xA;        }&#xA;        const user = await ctx.db.query.user({&#xA;            where: { id: ctx.request.userId }&#xA;        }, info);&#xA;        return user&#xA;    },&#xA;</code></pre>&#xA;&#xA;<p>Where the request.userId is set by some Express middleware</p>&#xA;&#xA;<pre><code>server.express.use(cookieParser());&#xA;&#xA;server.express.use((req, res, next) =&gt; {&#xA;  const { token } = req.cookies;&#xA;  if (token) {&#xA;    const { userId } = jwt.verify(token, process.env.APP_SECRET)&#xA;    req.userId = userId&#xA;  }&#xA;  next();&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Any help would be massively appreciated. Banging my head against the wall for days on this one.</p>&#xA;",13342288,,,,2020-11-17 14:48:19,Why do my heroku logs show infinite repetitions of the same request?,<express><heroku><graphql><next.js><http-proxy>,0,0,0,2020-05-27 14:01:47
62054807,1,62077106,,2,2521,"<p>In the <code>Network</code> tab of the Chrome DevTools, I can only find GraphQL queries and mutations requests:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/J7Le1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J7Le1.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>While listening to a GraphQL subscription, and receiving a response, nothing appears in this tab. Is there another place to fetch GraphQL subscription from the Chrome DevTools?</p>&#xA;&#xA;<p>For information, I am using <code>apollo-client</code> with <code>apollo-angular</code>.</p>&#xA;",5486116,,,,2020-05-29 01:17:02,Is there a way to debug Apollo GraphQL subscriptions in Chrome DevTools?,<graphql><google-chrome-devtools><apollo-client><graphql-subscriptions>,1,2,0,2020-05-28 00:00:34
62077106,2,,62054807,3,,"<p>In the <code>Network</code> tab of the Chrome DevTools, you should switch the filter to <code>WS</code> to see and debug your Apollo GraphQL subscription. You can see it in the pictures below:&#xA;<a href=""https://i.stack.imgur.com/YDODM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YDODM.png"" alt=""enter image description here""></a></p>&#xA;",9548285,,,,2020-05-29 01:17:02,"",,0,0,0,2020-05-29 01:17:02
62077593,1,62099127,,4,5142,"<ol>&#xA;<li><p>My Client (next.js) app running at port <code>3000</code></p></li>&#xA;<li><p>My Server (graphql) app running at port <code>4000</code></p></li>&#xA;</ol>&#xA;&#xA;<p>My website is <code>https://example.com</code>, nginx will pass proxy port 3000.</p>&#xA;&#xA;<p>If the user access the site, the page is loaded successfully. </p>&#xA;&#xA;<p>But behind the scene, In my webpage some api requests are sended to graphql server. <code>(http://localhost:4000)</code></p>&#xA;&#xA;<p><strong>This api requests are failed.</strong></p>&#xA;&#xA;<p>I don't know why, but when I access <code>http://example.com:4000/graphql</code> the graphql playground (graphiql?) loaded successfully and I can send some query and result showed well. But request from webpage is failed.</p>&#xA;&#xA;<p><strong>nginx/sites-enabled/example.com</strong></p>&#xA;&#xA;<pre><code>server {&#xA;        listen 80;&#xA;        listen [::]:80;&#xA;        server_name www.example.com example.com;&#xA;        return 301 https://example.com$request_uri;&#xA;}&#xA;&#xA;&#xA;server {&#xA;    listen 80;&#xA;    listen [::]:80;&#xA;    server_name example.com;&#xA;&#xA;&#xA;    location / {&#xA;        proxy_pass http://localhost:3000;&#xA;        proxy_http_version 1.1;&#xA;        proxy_set_header Upgrade $http_upgrade;&#xA;        proxy_set_header Connection 'upgrade';&#xA;        proxy_set_header Host $host;&#xA;        proxy_cache_bypass $http_upgrade;&#xA;    }&#xA;&#xA;    listen [::]:443 ssl ipv6only=on; # managed by Certbot&#xA;    listen 443 ssl; # managed by Certbot&#xA;    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem; # managed by Certbot&#xA;    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem; # managed by Certbot&#xA;    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot&#xA;    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>client app's graphql part</strong></p>&#xA;&#xA;<pre><code>export default function createApolloClient(initialState, ctx) {&#xA;  return new ApolloClient({&#xA;    ssrMode: Boolean(ctx),&#xA;    link: authLink.concat(new HttpLink({&#xA;      uri: 'http://localhost:4000/graphql', // Server URL (must be absolute)&#xA;      credentials: 'same-origin', // Additional fetch() options like `credentials` or `headers`&#xA;      fetch,&#xA;    })),&#xA;    cache: new InMemoryCache({ fragmentMatcher }).restore(initialState),&#xA;    credentials: 'include',&#xA;  })&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>** What I tried...**</p>&#xA;&#xA;<p>I added below snippets to nginx conf (above listen [::]443 part) and restart the nginx service, but nothing changed.</p>&#xA;&#xA;<pre><code>   location /graphql {&#xA;        proxy_pass http://localhost:4000/graphql;&#xA;   }&#xA;</code></pre>&#xA;&#xA;<p>I think I miss something in nginx conf. How do I fix it?</p>&#xA;",3036789,,,,2020-05-30 07:17:18,Nginx + GraphQL Connection Refused,<nginx><graphql><next.js><nginx-config>,1,1,0,2020-05-29 02:13:16
62099445,2,,61946121,0,,"<blockquote>&#xA;  <p>Object is possibly 'null' or 'undefined'.</p>&#xA;</blockquote>&#xA;&#xA;<p>TypeScript warns you that the response data might not exist as the graphql ""server"" might return error instead. So you should use <code>!</code> operator to assert it's not null. </p>&#xA;&#xA;<p>You should also do that after checking it's not undefined with <code>expect()</code>.</p>&#xA;",5472617,,,,2020-05-30 07:53:38,"",,0,0,0,2020-05-30 07:53:38
62101222,1,,,0,1928,"<p>While installing <code>npm install @apollo/react-hooks</code>, I got the following error message. It tells me about installing graphql with a version higher than 14.3.1, but I have 15.0 installed.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/f2ZKU.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/f2ZKU.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<pre><code>npm WARN @apollo/react-common@3.1.4 requires a peer of graphql@^14.3.1 but none is installed. You must install peer dependencies yourself.      &#xA;npm WARN @apollo/react-components@3.1.5 requires a peer of graphql@^14.3.1 but none is installed. You must install peer dependencies yourself.  &#xA;npm WARN @apollo/react-hoc@3.1.5 requires a peer of graphql@^14.3.1 but none is installed. You must install peer dependencies yourself.&#xA;npm WARN graphql-tag@2.10.3 requires a peer of graphql@^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 but none is installed. You &#xA;must install peer dependencies yourself.&#xA;npm WARN react-apollo@3.1.5 requires a peer of graphql@^14.3.1 but none is installed. You must install peer dependencies yourself.&#xA;npm WARN tsutils@3.17.1 requires a peer of typescript@&gt;=2.8.0 || &gt;= 3.2.0-dev || &gt;= 3.3.0-dev || &gt;= 3.4.0-dev || &gt;= 3.5.0-dev || &gt;= 3.6.0-dev || &gt;= 3.6.0-beta || &gt;= 3.7.0-dev || &gt;= 3.7.0-beta but none is installed. You must install peer dependencies yourself.&#xA;npm WARN @apollo/react-hooks@3.1.5 requires a peer of graphql@^14.3.1 but none is installed. You must install peer dependencies yourself.       &#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.2 (node_modules\fsevents):&#xA;npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.2: wanted {""os"":""darwin"",""arch"":""any""} (current: {""os"":""win32"",""arch"":""x64""})&#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\watchpack\node_modules\fsevents):&#xA;npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {""os"":""darwin"",""arch"":""any""} (current: {""os"":""win32"",""arch"":""x64""})&#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\jest-haste-map\node_modules\fsevents):&#xA;npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {""os"":""darwin"",""arch"":""any""} (current: {""os"":""win32"",""arch"":""x64""})&#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\webpack-dev-server\node_modules\fsevents):&#xA; &gt;= 3.6.0-beta || &gt;= 3.7.0-dev || &gt;= 3.7.0-beta but none is installed. You must install peer dependencies yourself.&#xA;npm WARN @apollo/react-hooks@3.1.5 requires a peer of graphql@^14.3.1 but none is installed. You must install peer dependencies yourself.       &#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.2 (node_modules\fsevents):&#xA;npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.2: wanted {""os"":""darwin"",""arch"":""any""} (current: {""os"":""win32"",""arch"":""x64""})&#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\watchpack\node_modules\fsevents):&#xA;npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {""os"":""darwin"",""arch"":""any""} (current: {""os"":""win32"",""arch"":""x64""})&#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\jest-haste-map\node_modules\fsevents):&#xA;npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {""os"":""darwin"",""arch"":""any""} (current: {""os"":""win32"",""arch"":""x64""})&#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\webpack-dev-server\node_modules\fsevents):&#xA;32"",""arch"":""x64""})&#xA;</code></pre>&#xA;",2371290,,3001761,2020-05-30 10:45:43,2022-05-10 10:58:31,"unable to install apollo/react-hooks , requires peer of graphql",<reactjs><graphql>,2,2,0,2020-05-30 10:39:04
62101241,2,,62101222,0,,<p>From the official github repo it seems like you need to install the following peer dependencies &amp; also <code>graphql</code> should be &lt; 15.0.0 since <code>^</code> means minor release i.e >= 14.5.8 and &lt; 15.0.0</p>&#xA;&#xA;<p>So do this <code>npm install graphql@14.6.0</code></p>&#xA;,2837427,,2837427,2020-05-30 11:00:23,2020-05-30 11:00:23,"",,0,4,0,2020-05-30 10:41:08
62116647,2,,62116148,0,,<p>Downgrading to 2.5.4 from 2.5.6 fixed the problem.</p>&#xA;&#xA;<p><strong>Possible Issue</strong></p>&#xA;&#xA;<p>The src/Bridge/Doctrine/Orm/SubresourceDataProvider.php was updated on the version 2.5.5</p>&#xA;,3785533,,,,2020-05-31 13:02:11,"",,0,3,0,2020-05-31 13:02:11
62142165,1,,,0,264,"<p>I am new to Apollo. I set the uri for the remote GraphQL server as instructed in the Apollo documentation: <a href=""https://www.apollographql.com/docs/angular/basics/setup/#request-data"" rel=""nofollow noreferrer"">Apollo Angular Doc: Setup and options</a></p>&#xA;&#xA;<pre><code>const uri = 'http://ip_address:port_number/.../graphql';&#xA;</code></pre>&#xA;&#xA;<p>But I got the following error when trying to send a post request to the remote server:</p>&#xA;&#xA;<pre><code>POST http://localhost:4200/ 404 (Not Found)&#xA;scheduleTask    @   zone-evergreen.js:2845&#xA;scheduleTask    @   zone-evergreen.js:385&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>Looks like the uri I set in graphql.module.ts has no effect. Any suggestion?</p>&#xA;&#xA;<p>Thanks!</p>&#xA;",2630552,,2630552,2020-06-01 23:01:50,2020-06-01 23:57:44,Apollo client does not use the expected uri to connect the remote GraphQL server,<graphql><apollo>,1,1,0,2020-06-01 22:49:46
62145176,1,,,-1,211,"<p>I have been banging my head this few days now, on how to deploy a react app with apollo server at the back end in a local network, with a windows server, the client wants the react app with the back end which is apollo server and monggodb to run on their local network, which is typing the local ip address on the server on their web browser like 192.168.1.129 with the app will run. I cant deploy it to heruko because it will initial additional cost for the client, I had been searching for tutorials this past few days, and found reverse proxy on IIS, NGINX, PM2, but no clear step by step detailed instruction on how to do about it, any help would be highly appreciated... or else 2 months of code will go down the drain,, </p>&#xA;",13523758,,3009199,2020-06-02 08:40:54,2020-06-03 10:21:47,How to deploy react app with apollo cient and apollo-server backend on local network,<reactjs><deployment><apollo><apollo-client><pm2>,1,0,0,2020-06-02 05:02:27
62161284,2,,62051408,0,,"<p>Replace the below code in  CORS config file:</p>&#xA;&#xA;<pre><code>'paths' =&gt; ['api/*', 'graphql'],&#xA;'allowed_methods' =&gt; ['*'],&#xA;'allowed_origins' =&gt; ['*'],&#xA;'allowed_origins_patterns' =&gt; [],&#xA;'allowed_headers' =&gt; ['*'],&#xA;'exposed_headers' =&gt; false,&#xA;'max_age' =&gt; false,&#xA;'supports_credentials' =&gt; false,&#xA;</code></pre>&#xA;",12716668,,,,2020-06-02 20:57:14,"",,0,0,0,2020-06-02 20:57:14
62170506,2,,62145176,0,,"<p>Caveat:&#xA;I'm not familiar with Apollo and the following is just a recommendation based on following Apollo's Getting Started Guide (<a href=""https://www.apollographql.com/docs/apollo-server/getting-started/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/getting-started/</a>)</p>&#xA;&#xA;<ol>&#xA;<li>Run Apollo in the server via <code>node index.js</code>. This will bind to <a href=""http://localhost:4000"" rel=""nofollow noreferrer"">http://localhost:4000</a> (or could be different, just look at what the CLI says)</li>&#xA;</ol>&#xA;&#xA;<blockquote>&#xA;  <p>Running it this way, I think runs the code in Development mode. You might want to have this run in Production mode. I think using <code>NODE_ENV=production node index.js</code> would do it, but I'm not completely sure.</p>&#xA;</blockquote>&#xA;&#xA;<ol start=""2"">&#xA;<li>Reverse proxy in IIS (since you're on Windows) so that going to the IP address of the server, proxies port 80 to localhost:4000. In Nginx, it would something be like:</li>&#xA;</ol>&#xA;&#xA;<pre><code>server {&#xA;    listen 80 default_server;&#xA;&#xA;    location / {&#xA;        proxy_pass http://127.0.0.1:4000;&#xA;        proxy_set_header Host $host;&#xA;        proxy_set_header X-Real-IP $remote_addr;&#xA;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;        proxy_set_header X-Forwarded-Proto $scheme;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<ol start=""3"">&#xA;<li>Figure out how to convert the running of Apollo as a start up &amp; background process. Sadly, I'm not familiar with Windows server administration, but in Ubuntu this would be via <code>systemd</code> service scripts.</li>&#xA;</ol>&#xA;&#xA;<p>Hopefully, that's enough for you to go on.</p>&#xA;",365218,,,,2020-06-03 10:21:47,"",,0,0,0,2020-06-03 10:21:47
62210498,1,62215019,,0,2269,"<p>I'm not sure what changed in Chrome but the Graphiql GUI tool is not loading.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/U0HEw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/U0HEw.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>In Firefox and Safari it works just fine. I have disabled all Chrome extensions, restarted Chrome, and restarted my Mac. The error persists. How do I debug this?</p>&#xA;&#xA;<p>In graphql-workspace.min.js it errors on:</p>&#xA;&#xA;<pre><code>this.state.config.state.proxy || this.state.config.state.headers.forEach(function(e) {&#xA;</code></pre>&#xA;&#xA;<p>Error:</p>&#xA;&#xA;<pre><code>graphiql-workspace.min.js:1 Uncaught TypeError: Cannot read property 'forEach' of undefined&#xA;    at t.value (graphiql-workspace.min.js:1)&#xA;    at t.value (graphiql-workspace.min.js:1)&#xA;    at t.value (graphiql-workspace.min.js:1)&#xA;    at t.value (graphiql-workspace.min.js:1)&#xA;    at performInitialMount (react-dom.min.js:13)&#xA;    at p.mountComponent (react-dom.min.js:13)&#xA;    at Object.mountComponent (react-dom.min.js:14)&#xA;    at mountChildren (react-dom.min.js:14)&#xA;    at m._createInitialChildren (react-dom.min.js:13)&#xA;    at mountComponent (react-dom.min.js:13)&#xA;</code></pre>&#xA;&#xA;<p>Here is a picture of it working in Firefox:&#xA;<a href=""https://i.stack.imgur.com/emMET.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/emMET.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Not sure why <code>headers</code> is undefined.</p>&#xA;&#xA;<p>I am using:&#xA;Elixir, Phoenix, Absinthe, Absinth-Plug, Vue, Vue-Apollo, apollo-boost, graphql,</p>&#xA;&#xA;<p>Since the GUI appears to be loading from a CDN I'm wondering if that's a direction I should explore. However the network tab in chrome shows no failures.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/dAWVQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/dAWVQ.png"" alt=""enter image description here""></a></p>&#xA;",6407609,,6407609,2020-06-05 08:04:22,2020-06-05 12:08:12,Graphiql (GraphQL UI) not loading in Chrome but works in Firefox and Safari,<google-chrome><firefox><graphql><graphiql><absinthe>,1,0,0,2020-06-05 07:46:02
62227039,1,62272240,,1,257,"<p>I have a static Gatsby app that needs the uri from another container for a Hasura GraphQL connection. </p>&#xA;&#xA;<h2>The Problem</h2>&#xA;&#xA;<p>The Gatsby container finishes the docker build before Hasura's, so the URI in Gatsby is set to <code>undefined</code>.</p>&#xA;&#xA;<p>How can I make it so the uri is dynamic and changes to Hasura's actual container IP address when it's done building?</p>&#xA;&#xA;<h2>What I tried</h2>&#xA;&#xA;<ul>&#xA;<li>Add a <code>depends_on</code> in <code>docker-compose.yml</code> to force Gatsby to wait until the Hasura container is ready, so it'll have the IP by the time Gatsby container starts the build. But according to [0] it doesn't guarantee that Gatsby will wait until Hasura finishes to start itself.</li>&#xA;<li>It suggests adding a custom bash script to force the Gatsby container to wait. If I were to use <code>wait-for-it.sh</code>, what should the subcommand be (the command after the wait finishes)?</li>&#xA;</ul>&#xA;&#xA;<p>[0] <a href=""https://docs.docker.com/compose/startup-order/"" rel=""nofollow noreferrer"">https://docs.docker.com/compose/startup-order/</a></p>&#xA;&#xA;<p>docker-compose.yml</p>&#xA;&#xA;<pre><code>version: '3.6'&#xA;&#xA;services:&#xA;  database:&#xA;    image: postgres:12.2&#xA;    container_name: 'postgres-db'&#xA;    env_file:&#xA;      - database.env&#xA;    volumes:&#xA;      - ./schema.sql:/docker-entrypoint-initdb.d/1-schema.sql&#xA;      - ./seed.sql:/docker-entrypoint-initdb.d/2-seed.sql&#xA;&#xA;  hasura:&#xA;    image: hasura/graphql-engine:v1.2.1&#xA;    restart: on-failure&#xA;    container_name: 'hasura'&#xA;    depends_on:&#xA;      - database&#xA;    ports:&#xA;      - '8180:8080'&#xA;    env_file:&#xA;      - hasura.env&#xA;&#xA;  web:&#xA;    build: '.'&#xA;    image: 'webserver'&#xA;    container_name: 'nginx-webserver'&#xA;    restart: on-failure&#xA;    depends_on:&#xA;      - hasura&#xA;    ports:&#xA;      - '8080:80'&#xA;    volumes:&#xA;      - /app/node_modules&#xA;      - .:/app&#xA;    env_file:&#xA;      - webserver.env&#xA;</code></pre>&#xA;&#xA;<p>webserver.env file</p>&#xA;&#xA;<pre><code>NODE_ENV=production&#xA;GATSBY_WEBPACK_PUBLICPATH=/&#xA;HASURA_ENDPOINT=http://hasura:8080/v1/graphql&#xA;</code></pre>&#xA;&#xA;<p>GraphQL Apollo client that needs the Hasura URI:</p>&#xA;&#xA;<pre><code>export const client = new ApolloClient({&#xA;  uri: process.env.HASURA_ENDPOINT,&#xA;  fetch,&#xA;});&#xA;&#xA;</code></pre>&#xA;",5301193,,5301193,2020-06-06 22:26:52,2020-07-22 22:47:52,Accessing a docker container's IP address from a static client,<docker><docker-compose><dockerfile><apollo-client><hasura>,1,3,0,2020-06-06 03:46:27
62240291,1,,,1,334,"<p>Could someone please help me here, I'm getting a warning something related to 'type name collision' as follows. I'm using graphql-spqr-spring-boot-starter.</p>&#xA;&#xA;<pre><code>2020-06-06 19:04:15.972  WARN 22428 --- [           main] i.l.graphql.generator.OperationMapper    : Potential type name collision detected: 'String' bound to multiple types: java.lang.String (loaded by the bootstrap class loader) and @javax.validation.Valid() java.lang.String (loaded by the bootstrap class loader). Assign unique names using the appropriate annotations or override the TypeInfoGenerator. For details and solutions see https://github.com/leangen/graphql-spqr/wiki/Errors#non-unique-type-name. If this warning is a false positive, please report it: https://github.com/leangen/graphql-spqr/issues.&#xA;</code></pre>&#xA;&#xA;<p>I referred to the page <a href=""https://github.com/leangen/graphql-spqr/wiki/Errors#non-unique-type-name"" rel=""nofollow noreferrer"">https://github.com/leangen/graphql-spqr/wiki/Errors#non-unique-type-name</a> but couldn't find/understand how to fix it. I'm new to graphql, anyone's help would be much appreciated.</p>&#xA;",13674089,,,,2021-05-27 17:32:04,Why am I getting a warning related to 'type name collision' using graphql-spqr-spring-boot-starter?,<java><graphql><spring-boot-starter><graphql-spqr-spring-boot-starter>,1,1,0,2020-06-07 02:50:38
62244090,2,,61620506,0,,<p>You will need to apply the Apollo plugin:</p>&#xA;&#xA;<pre><code>plugins {&#xA;    id 'org.springframework.boot' version '2.2.6.RELEASE'&#xA;    id 'io.spring.dependency-management' version '1.0.9.RELEASE'&#xA;    id 'java'&#xA;    id 'com.apollographql.apollo' version '2.1.0'&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You should also bump the Apollo dependencies to '2.1.0' as '1.0.0' is pretty old. </p>&#xA;,752630,,,,2020-06-07 10:38:54,"",,0,0,0,2020-06-07 10:38:54
62247336,1,,,0,398,"<p>I have a use case where I have <code>apollo-server-express</code> running with a React based <code>apollo-client</code>. I have an external <code>graphql-datasource</code> for some queries. Currently, I've configured <code>apollo-datasource-graphql</code> to be used as a data source for my <code>apollo-server-express</code>. However, this requires duplication of work on the resolver in Apollo as well as the resolver on my external <code>graphql</code> system.</p>&#xA;<p>Is there a way for me to pass queries made in the client through the Apollo Server and to the external <code>graphql</code> data source?</p>&#xA;",1411975,,10158227,2021-09-12 17:58:33,2021-09-12 17:58:33,Use Apollo server as a pass through of a query from client,<graphql><apollo-server><apollo-datasource>,1,4,0,2020-06-07 15:07:20
62249926,2,,62249695,1,,"<p>I found that this was fixed in</p>&#xA;&#xA;<p><a href=""https://www.npmjs.com/package/@prisma/cli/v/2.0.0-alpha.1286"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/@prisma/cli/v/2.0.0-alpha.1286</a></p>&#xA;&#xA;<p>5 days ago</p>&#xA;&#xA;<p><a href=""https://github.com/prisma/prisma/issues/2619"" rel=""nofollow noreferrer"">https://github.com/prisma/prisma/issues/2619</a></p>&#xA;&#xA;<p>Quite similar problem was reported there</p>&#xA;&#xA;<p><a href=""https://github.com/prisma/prisma/issues/2619"" rel=""nofollow noreferrer"">https://github.com/prisma/prisma/issues/2619</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>Current status: <code>Waiting for documentation</code></p>&#xA;</blockquote>&#xA;&#xA;<p><a href=""https://github.com/prisma/prisma/issues/2322"" rel=""nofollow noreferrer"">https://github.com/prisma/prisma/issues/2322</a></p>&#xA;&#xA;<p>Progress:</p>&#xA;&#xA;<p><a href=""https://github.com/prisma/prisma/milestone/35"" rel=""nofollow noreferrer"">https://github.com/prisma/prisma/milestone/35</a></p>&#xA;",6398044,,6398044,2020-06-07 18:40:52,2020-06-07 18:40:52,"",,0,0,0,2020-06-07 18:33:55
62250580,1,,,1,136,"<p>I am facing this issue in development, while working in <strong>Nextjs</strong> (on 9.4.4) with <strong>Apollo Micro Server</strong>  (on 2.14.1) as backend and <strong>Apollo Client</strong> (on 2.6.10) on client side. Everything works fine at times and on some occasions server takes forever to bundle files for hot module reload (some times up-to 30-45 minutes). I've tried to find the solutions online or at their repository but nothing seems to work.&#xA;currently my next.config.js looks like</p>&#xA;&#xA;<pre><code>const withCSS = require('@zeit/next-css');&#xA;&#xA;module.exports = withCSS({&#xA;  serverRuntimeConfig: {&#xA;    JWT_SECRET: 'changeme',&#xA;    MONGO_DB_URL: ""mongodb://localhost:27017/example""&#xA;  },&#xA;  plugins: ['styled-jsx/babel'],&#xA;  webpackDevMiddleware: (config) =&gt; {&#xA;    config.watchOptions = {&#xA;      poll: 800,&#xA;      aggregateTimeout: 300,&#xA;    };&#xA;    return config;&#xA;  },&#xA;  webpack: function (config) {&#xA;        config.module.rules.push({&#xA;          test: /\.(eot|woff|woff2|ttf|svg|png|jpg|gif)$/,&#xA;          use: {&#xA;            loader: 'url-loader',&#xA;            options: {&#xA;              limit: 100000,&#xA;              name: '[name].[ext]'&#xA;            }&#xA;          }&#xA;        })&#xA;    return config;&#xA;  },&#xA;});&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/ul0hm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ul0hm.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>apart from server i am facing an other quite odd situation where <strong>CSS</strong> does not gets applied to the page and does not show an error either.</p>&#xA;",7313725,,,,2020-06-07 19:31:06,nextjs with apollo taking forever to bundle in development,<webpack><babeljs><next.js><apollo-server><server-configuration>,0,0,0,2020-06-07 19:31:06
62263441,2,,61163208,0,,"<p>This seems to be caused by a bug in the latest version (as of now) of</p>&#xA;&#xA;<blockquote>&#xA;  <p>graphql-hooks-memcache v1.3.2</p>&#xA;</blockquote>&#xA;&#xA;<p>and once I downgrade to v1.3.1, the problem went away. Please refer to this <a href=""https://github.com/nearform/graphql-hooks/issues/496"" rel=""nofollow noreferrer"">github</a> discussion.</p>&#xA;",458969,,,,2020-06-08 13:40:14,"",,0,0,0,2020-06-08 13:40:14
62272240,2,,62227039,0,,"<p>Found the solution.</p>&#xA;<p>I was thinking about the container network relationship incorrectly.</p>&#xA;<p>The client looks at the HOST'S ip address when connecting, not the container's.</p>&#xA;<h2>Explanation</h2>&#xA;<ul>&#xA;<li>The Hasura container exposes itself to everyone via <code>localhost:8180</code>. If you look at the docker-compose file, port <code>8180:8080</code> means &quot;Make Hasura's port 8080 accessible to localhost's port 8180&quot;.</li>&#xA;<li>The gatsby app (nginx-webserver) should point to <code>localhost:8180</code>, not <code>hasura:8080</code>.</li>&#xA;</ul>&#xA;<p>My final docker-compose.yml:</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>version: '3.6'&#xA;&#xA;    services:&#xA;      database:&#xA;        image: postgres:12.2&#xA;        container_name: 'postgres-db'&#xA;        env_file:&#xA;          - database.env&#xA;        volumes:&#xA;          - ./schema.sql:/docker-entrypoint-initdb.d/1-schema.sql&#xA;          - ./seed.sql:/docker-entrypoint-initdb.d/2-seed.sql&#xA;    &#xA;      hasura:&#xA;        image: hasura/graphql-engine:v1.2.1&#xA;        restart: on-failure&#xA;        container_name: 'hasura'&#xA;        depends_on:&#xA;          - database&#xA;        ports:&#xA;          - '8180:8080'&#xA;        env_file:&#xA;          - hasura.env&#xA;    &#xA;      web:&#xA;        build: '.'&#xA;        image: 'nginx-webserver'&#xA;        container_name: 'web'&#xA;        restart: on-failure&#xA;        ports:&#xA;          - '8080:80'&#xA;        volumes:&#xA;          - .:/app&#xA;          - app/node_modules&#xA;        env_file:&#xA;          - webserver.env&#xA;</code></pre>&#xA;<p>ApolloClient setup:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import ApolloClient from 'apollo-boost';&#xA;import fetch from 'isomorphic-fetch';&#xA;&#xA;export const HASURA_ENDPOINT_URI =&#xA;  process.env.NODE_ENV === 'development'&#xA;    ? 'http://localhost:8090/v1/graphql'&#xA;    : 'http://localhost:8180/v1/graphql';&#xA;&#xA;export const client = new ApolloClient({&#xA;  uri: HASURA_ENDPOINT_URI,&#xA;  fetch&#xA;});&#xA;</code></pre>&#xA;",5301193,,5301193,2020-07-22 22:47:52,2020-07-22 22:47:52,"",,0,0,0,2020-06-08 22:35:42
62288639,2,,62286868,1,,<p>Seems that <strong>graphql/tsutils/Maybe.d.ts</strong> is removed with the graphql version <strong>15.1.0</strong>.</p>&#xA;,13715483,,13715483,2020-06-09 17:47:06,2020-06-09 17:47:06,"",,0,0,0,2020-06-09 17:37:44
62291961,2,,62286868,4,,<p>I found solution my graphql version dont matching with @types/graphql</p>&#xA;&#xA;<pre><code> graphql: ^15.1.0&#xA; @types/graphql: ^14.5.0&#xA;</code></pre>&#xA;&#xA;<p>if there are people who have such a problem just matched your graphql versions with types like</p>&#xA;&#xA;<pre><code>graphql: ^14.5.0&#xA;@types/graphql: ^14.5.0&#xA;</code></pre>&#xA;,8132508,,,,2020-06-09 21:14:40,"",,0,0,0,2020-06-09 21:14:40
62294770,2,,62275347,1,,"<p>You can use Chrome Dev Tools to check if <code>useSubscription</code> connects correctly. In the Network tab of the Chrome DevTools, you should switch the filter to WS to see and debug your Apollo GraphQL subscription. You should read <a href=""https://stackoverflow.com/questions/62054807/is-there-a-way-to-debug-apollo-graphql-subscriptions-in-chrome-devtools/62077106#62077106"">it</a>.</p>&#xA;",9548285,,,,2020-06-10 02:16:26,"",,0,0,0,2020-06-10 02:16:26
62296748,2,,61067099,0,,"<p>It seems that Serverless-Offline does not simulate the execution context reuse:</p>&#xA;&#xA;<p><a href=""https://github.com/dherault/serverless-offline/issues/363"" rel=""nofollow noreferrer"">https://github.com/dherault/serverless-offline/issues/363</a></p>&#xA;",11050903,,,,2020-06-10 05:54:06,"",,0,0,0,2020-06-10 05:54:06
62312923,2,,61852501,4,,"<p>This may not apply to your install of Apollo, but I got the same error because I was using the <code>react-router-dom</code> syntax for <code>Link</code>:</p>&#xA;&#xA;<pre><code> &lt;Link to=""/home""&gt;&#xA;</code></pre>&#xA;&#xA;<p>Changing it to the NextJs syntax fixed it for me:</p>&#xA;&#xA;<pre><code>  &lt;Link href=""/home""&gt;&#xA;</code></pre>&#xA;&#xA;<p>NextJs docs here:&#xA;<a href=""https://nextjs.org/learn/basics/navigate-between-pages/link-component"" rel=""nofollow noreferrer"">https://nextjs.org/learn/basics/navigate-between-pages/link-component</a></p>&#xA;",5425722,,,,2020-06-10 20:52:58,"",,0,0,0,2020-06-10 20:52:58
62335537,1,62336107,,2,1058,"<p>I am trying to scrape the main text of a project from the Kickstarter project webpage. I have the following code which works for the first URL but does not work for the second and third URL.&#xA;I was wondering if there is an easy fix to my code without the need to use other packages?</p>&#xA;&#xA;<pre><code>url = ""https://www.kickstarter.com/projects/1365297844/kuhkubus-3d-escher-figures?ref=discovery_staff_picks_category_newest""&#xA;#url = ""https://www.kickstarter.com/projects/clarissaredwine/swingby-a-voyager-gravity-puzzle?ref=discovery_staff_picks_category_newest""&#xA;#url = ""https://www.kickstarter.com/projects/100389301/us-army-navy-marines-air-force-special-challenge-c?ref=category""&#xA;&#xA;page = requests.get(url)&#xA;soup = BeautifulSoup(page.content, 'html.parser')&#xA;body_text = soup.find(class_='rte__content')&#xA;all_text = body_text.find_all('p')&#xA;for i in all_text:&#xA;    print(i.get_text())&#xA;</code></pre>&#xA;",8234464,,2614364,2020-06-12 07:37:04,2022-01-26 02:26:52,Scraping text from Kickstarter projects return nothing,<html><python-3.x><web-scraping><beautifulsoup><graphql>,1,0,0,2020-06-12 00:11:29
62344660,1,,,0,456,"<p>I am trying to deploy api graphql located in here<br> => <a href=""https://github.com/DimiMikadze/create-social-network"" rel=""nofollow noreferrer"">https://github.com/DimiMikadze/create-social-network</a> <br>&#xA;but I'm facing some issues and a page is still blank. (frontend was deployed at netlify)&#xA;It works in dev mode.&#xA;<strong>I wonder if paid account can solve that problem. I'm not sure is it because of my free heroku account and dyno limit or heroku issue or a broken on production deployment<br></strong>&#xA;It works here => <a href=""https://worldexplorer.netlify.app/"" rel=""nofollow noreferrer"">https://worldexplorer.netlify.app/</a><br>&#xA;Config vars has been added without PORT, should I also add PORT if it's dynamic on heroku?&#xA;My sec guess is a replace function ws, http to ws, https.&#xA;I've checked everything and it's still fail.&#xA;I've added useUnifiedTopology to mongoose.connect() still not working.&#xA;Any suggestions ?</p>&#xA;&#xA;<p><strong>err H12, Stopping all processes with SIGTERM ,Process exited with status 143, dyno=web.1 connect=0ms service=30000ms status=503</strong></p>&#xA;&#xA;<p><strong>Full review of heroku logs -t</strong></p>&#xA;&#xA;<pre><code>2020-06-12T10:44:56.446529+00:00 heroku[web.1]: Restarting&#xA;2020-06-12T10:44:59.369642+00:00 heroku[web.1]: Starting process with command `node index.js`&#xA;2020-06-12T10:45:01.534501+00:00 app[web.1]: (node:4) DeprecationWarning: current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.&#xA;2020-06-12T10:45:01.535655+00:00 app[web.1]: server ready at http://localhost:3044/graphql&#xA;2020-06-12T10:45:01.535782+00:00 app[web.1]: Subscriptions ready at ws://localhost:3044/graphql&#xA;2020-06-12T10:45:01.586325+00:00 app[web.1]: DB connected&#xA;2020-06-12T10:45:03.055672+00:00 heroku[web.1]: Stopping all processes with SIGTERM&#xA;2020-06-12T10:45:03.169058+00:00 heroku[web.1]: Process exited with status 143&#xA;2020-06-12T10:45:06.816310+00:00 app[web.1]: (node:4) DeprecationWarning: current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.&#xA;2020-06-12T10:45:06.817765+00:00 app[web.1]: server ready at http://localhost:3844/graphql&#xA;2020-06-12T10:45:06.817908+00:00 app[web.1]: Subscriptions ready at ws://localhost:3844/graphql&#xA;2020-06-12T10:45:06.883664+00:00 app[web.1]: DB connected&#xA;2020-06-12T10:45:07.327247+00:00 heroku[web.1]: State changed from starting to up&#xA;2020-06-12T10:45:12.038980+00:00 app[api]: Set MAIL_USER config vars by user cichy96@gmail.com&#xA;2020-06-12T10:45:12.038980+00:00 app[api]: Release v11 created by user cichy96@gmail.com&#xA;2020-06-12T10:45:13.562118+00:00 heroku[web.1]: Restarting&#xA;2020-06-12T10:45:13.575923+00:00 heroku[web.1]: State changed from up to starting&#xA;2020-06-12T10:45:14.564507+00:00 heroku[web.1]: Stopping all processes with SIGTERM&#xA;2020-06-12T10:45:14.646488+00:00 heroku[web.1]: Process exited with status 143&#xA;2020-06-12T10:45:17.663370+00:00 heroku[web.1]: Starting process with command `node index.js`&#xA;2020-06-12T10:45:24.976462+00:00 app[api]: Release v12 created by user cichy96@gmail.com&#xA;2020-06-12T10:45:24.976462+00:00 app[api]: Set MAIL_PASS config vars by user cichy96@gmail.com&#xA;2020-06-12T10:45:25.614269+00:00 app[web.1]: (node:4) DeprecationWarning: current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.&#xA;2020-06-12T10:45:25.614985+00:00 app[web.1]: server ready at http://localhost:59382/graphql&#xA;2020-06-12T10:45:25.615090+00:00 app[web.1]: Subscriptions ready at ws://localhost:59382/graphql&#xA;2020-06-12T10:45:25.667679+00:00 app[web.1]: DB connected&#xA;2020-06-12T10:45:25.697175+00:00 heroku[web.1]: State changed from starting to up&#xA;2020-06-12T10:45:26.107722+00:00 heroku[web.1]: Restarting&#xA;2020-06-12T10:45:26.119837+00:00 heroku[web.1]: State changed from up to starting&#xA;2020-06-12T10:45:27.911856+00:00 heroku[web.1]: Stopping all processes with SIGTERM&#xA;2020-06-12T10:45:27.998867+00:00 heroku[web.1]: Process exited with status 143&#xA;2020-06-12T10:45:29.575354+00:00 heroku[web.1]: Starting process with command `node index.js`&#xA;2020-06-12T10:45:36.721995+00:00 app[web.1]: (node:4) DeprecationWarning: current Server Discovery and Monitoring engine is deprecated, and will be removed in a future version. To use the new Server Discover and Monitoring engine, pass option { useUnifiedTopology: true } to the MongoClient constructor.&#xA;2020-06-12T10:45:36.731164+00:00 app[web.1]: server ready at http://localhost:57681/graphql&#xA;2020-06-12T10:45:36.731169+00:00 app[web.1]: Subscriptions ready at ws://localhost:57681/graphql&#xA;2020-06-12T10:45:36.782607+00:00 app[web.1]: DB connected&#xA;2020-06-12T10:45:37.182011+00:00 heroku[web.1]: State changed from starting to up&#xA;2020-06-12T10:50:16.497620+00:00 heroku[router]: at=info method=GET path=""/"" host=qualityprotector.herokuapp.com request_id=043d81b7-80fe-46bb-a5e4-53860f1bc38d fwd=""83.22.243.180"" dyno=web.1 connect=2ms service=14ms status=404 bytes=505 protocol=https&#xA;2020-06-12T10:50:22.382324+00:00 app[web.1]: (node:4) UnhandledPromiseRejectionWarning: JsonWebTokenError: jwt must be provided&#xA;2020-06-12T10:50:22.382358+00:00 app[web.1]: at Proxy.module.exports (/app/node_modules/jsonwebtoken/verify.js:53:17)&#xA;2020-06-12T10:50:22.382359+00:00 app[web.1]: at /app/utils/apollo-server.js:17:32&#xA;2020-06-12T10:50:22.382360+00:00 app[web.1]: at new Promise (&lt;anonymous&gt;)&#xA;2020-06-12T10:50:22.382361+00:00 app[web.1]: at checkAuthorization (/app/utils/apollo-server.js:16:10)&#xA;2020-06-12T10:50:22.382361+00:00 app[web.1]: at ApolloServer.context (/app/utils/apollo-server.js:45:28)&#xA;2020-06-12T10:50:22.382362+00:00 app[web.1]: at ApolloServer.&lt;anonymous&gt; (/app/node_modules/apollo-server-core/dist/ApolloServer.js:467:38)&#xA;2020-06-12T10:50:22.382362+00:00 app[web.1]: at Generator.next (&lt;anonymous&gt;)&#xA;2020-06-12T10:50:22.382363+00:00 app[web.1]: at fulfilled (/app/node_modules/apollo-server-core/dist/ApolloServer.js:5:58)&#xA;2020-06-12T10:50:22.382363+00:00 app[web.1]: at processTicksAndRejections (internal/process/task_queues.js:97:5)&#xA;2020-06-12T10:50:22.382956+00:00 app[web.1]: (node:4) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)&#xA;2020-06-12T10:50:22.384392+00:00 app[web.1]: (node:4) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.&#xA;2020-06-12T10:50:52.373293+00:00 heroku[router]: at=error code=H12 desc=""Request timeout"" method=GET path=""/graphql"" host=qualityprotector.herokuapp.com request_id=c83cff9c-21ec-4a3f-a0e8-c4379571a39e fwd=""83.22.243.180"" dyno=web.1 connect=0ms service=30000ms status=503 bytes=0 protocol=https&#xA;2020-06-12T10:50:52.734000+00:00 heroku[router]: at=info method=GET path=""/favicon.ico"" host=qualityprotector.herokuapp.com request_id=2106dcdb-db6c-4319-89d1-849c5d3c6dd4 fwd=""83.22.243.180"" dyno=web.1 connect=1ms service=4ms status=404 bytes=516 protocol=https&#xA;2020-06-12T10:58:47.000000+00:00 app[api]: Build started by user cichy96@gmail.com&#xA;2020-06-12T10:59:33.211085+00:00 app[api]: Release v13 created by user cichy96@gmail.com&#xA;2020-06-12T10:59:33.211085+00:00 app[api]: Deploy 1fccd247 by user cichy96@gmail.com&#xA;2020-06-12T10:59:34.584781+00:00 heroku[web.1]: Restarting&#xA;2020-06-12T10:59:34.598736+00:00 heroku[web.1]: State changed from up to starting&#xA;2020-06-12T10:59:35.000000+00:00 app[api]: Build succeeded&#xA;2020-06-12T10:59:35.928901+00:00 heroku[web.1]: Stopping all processes with SIGTERM&#xA;2020-06-12T10:59:36.040285+00:00 heroku[web.1]: Process exited with status 143&#xA;2020-06-12T10:59:37.657728+00:00 heroku[web.1]: Starting process with command `node index.js`&#xA;2020-06-12T10:59:45.461692+00:00 app[web.1]: server ready at http://localhost:26575/graphql&#xA;2020-06-12T10:59:45.462171+00:00 app[web.1]: Subscriptions ready at ws://localhost:26575/graphql&#xA;2020-06-12T10:59:45.521392+00:00 app[web.1]: DB connected&#xA;2020-06-12T10:59:45.619943+00:00 heroku[web.1]: State changed from starting to up&#xA;2020-06-12T11:00:47.664793+00:00 heroku[web.1]: Restarting&#xA;2020-06-12T11:00:47.680114+00:00 heroku[web.1]: State changed from up to starting&#xA;2020-06-12T11:00:49.169628+00:00 heroku[web.1]: Stopping all processes with SIGTERM&#xA;2020-06-12T11:00:49.286154+00:00 heroku[web.1]: Process exited with status 143&#xA;2020-06-12T11:00:50.587728+00:00 heroku[web.1]: Starting process with command `node index.js`&#xA;2020-06-12T11:00:56.856897+00:00 app[web.1]: server ready at http://localhost:51664/graphql&#xA;2020-06-12T11:00:56.859410+00:00 app[web.1]: Subscriptions ready at ws://localhost:51664/graphql&#xA;2020-06-12T11:00:56.907031+00:00 app[web.1]: DB connected&#xA;2020-06-12T11:00:57.279110+00:00 heroku[web.1]: State changed from starting to up&#xA;2020-06-12T11:01:34.264690+00:00 heroku[web.1]: Restarting&#xA;2020-06-12T11:01:34.278533+00:00 heroku[web.1]: State changed from up to starting&#xA;2020-06-12T11:01:35.229897+00:00 heroku[web.1]: Stopping all processes with SIGTERM&#xA;2020-06-12T11:01:35.322805+00:00 heroku[web.1]: Process exited with status 143&#xA;2020-06-12T11:01:37.425699+00:00 heroku[web.1]: Starting process with command `node index.js`&#xA;2020-06-12T11:01:46.205694+00:00 app[web.1]: server ready at http://localhost:21876/graphql&#xA;2020-06-12T11:01:46.206253+00:00 app[web.1]: Subscriptions ready at ws://localhost:21876/graphql&#xA;2020-06-12T11:01:46.320655+00:00 heroku[web.1]: State changed from starting to up&#xA;2020-06-12T11:01:46.357976+00:00 app[web.1]: DB connected&#xA;2020-06-12T11:10:41.526938+00:00 app[web.1]: (node:4) UnhandledPromiseRejectionWarning: JsonWebTokenError: jwt must be provided&#xA;2020-06-12T11:10:41.526946+00:00 app[web.1]: at Proxy.module.exports (/app/node_modules/jsonwebtoken/verify.js:53:17)&#xA;2020-06-12T11:10:41.526947+00:00 app[web.1]: at /app/utils/apollo-server.js:17:32&#xA;2020-06-12T11:10:41.526948+00:00 app[web.1]: at new Promise (&lt;anonymous&gt;)&#xA;2020-06-12T11:10:41.526948+00:00 app[web.1]: at checkAuthorization (/app/utils/apollo-server.js:16:10)&#xA;2020-06-12T11:10:41.526949+00:00 app[web.1]: at ApolloServer.context (/app/utils/apollo-server.js:45:28)&#xA;2020-06-12T11:10:41.526949+00:00 app[web.1]: at ApolloServer.&lt;anonymous&gt; (/app/node_modules/apollo-server-core/dist/ApolloServer.js:467:38)&#xA;2020-06-12T11:10:41.526950+00:00 app[web.1]: at Generator.next (&lt;anonymous&gt;)&#xA;2020-06-12T11:10:41.526950+00:00 app[web.1]: at fulfilled (/app/node_modules/apollo-server-core/dist/ApolloServer.js:5:58)&#xA;2020-06-12T11:10:41.526950+00:00 app[web.1]: at processTicksAndRejections (internal/process/task_queues.js:97:5)&#xA;2020-06-12T11:10:41.527095+00:00 app[web.1]: (node:4) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 1)&#xA;2020-06-12T11:10:41.527237+00:00 app[web.1]: (node:4) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.&#xA;2020-06-12T11:11:11.489296+00:00 heroku[router]: at=error code=H12 desc=""Request timeout"" method=GET path=""/graphql"" host=qualityprotector.herokuapp.com request_id=e18fbbb6-1b40-4cd7-a9c1-d0a9acef05f5 fwd=""83.22.243.180"" dyno=web.1 connect=0ms service=30000ms status=503 bytes=0 protocol=https&#xA;2020-06-12T11:35:59.484532+00:00 heroku[web.1]: Idling&#xA;2020-06-12T11:35:59.486103+00:00 heroku[web.1]: State changed from up to down&#xA;2020-06-12T11:36:00.878335+00:00 heroku[web.1]: Stopping all processes with SIGTERM&#xA;2020-06-12T11:36:01.035761+00:00 heroku[web.1]: Process exited with status 143&#xA;&#xA;CHROME CONSOLE OUTPUT - am assuming that Error is caused by heroku free account with dyno limit thats why WS lost connection.&#xA;&#xA;Uncaught TypeError: Cannot read property 'replace' of undefined&#xA;    at Module.93 (index.js:22)&#xA;    at f ((index):1)&#xA;    at Object.66 (background.jpg:1)&#xA;    at f ((index):1)&#xA;    at a ((index):1)&#xA;    at Array.e [as push] ((index):1)&#xA;    at main.43d14637.chunk.js:1&#xA;</code></pre>&#xA;",5678380,,,,2020-06-12 22:51:34,Heroku deploy graphql blank page,<node.js><heroku><deployment><graphql><dyno>,1,0,0,2020-06-12 12:51:23
62349960,1,62350591,,0,292,"<p>I made a react application that works with a prisma - graphql server. The server is located inside the react application. I want to deploy it with Heroku (first time ever using it). When I deploy to Heroku I get this error when I run <code>heroku logs --tail</code></p>&#xA;&#xA;<pre><code>020-06-12T14:10:04.296156+00:00 heroku[web.1]: Process exited with status 0&#xA;2020-06-12T14:10:04.332716+00:00 heroku[web.1]: State changed from starting to crashed&#xA;2020-06-12T14:10:04.335407+00:00 heroku[web.1]: State changed from crashed to starting&#xA;2020-06-12T14:10:15.424387+00:00 heroku[web.1]: Starting process with command `npm start`&#xA;2020-06-12T14:10:17.947363+00:00 app[web.1]:&#xA;2020-06-12T14:10:17.947379+00:00 app[web.1]: &gt; business-scheduler@0.1.0 start /app&#xA;2020-06-12T14:10:17.947379+00:00 app[web.1]: &gt; react-scripts start&#xA;2020-06-12T14:10:17.947379+00:00 app[web.1]:&#xA;2020-06-12T14:10:20.724920+00:00 app[web.1]: ℹ ｢wds｣: Project is running at http://172.19.52.78/&#xA;2020-06-12T14:10:20.725386+00:00 app[web.1]: ℹ ｢wds｣: webpack output is served from&#xA;2020-06-12T14:10:20.725577+00:00 app[web.1]: ℹ ｢wds｣: Content not from webpack is served from /app/public&#xA;2020-06-12T14:10:20.725681+00:00 app[web.1]: ℹ ｢wds｣: 404s will fallback to /&#xA;2020-06-12T14:10:20.725971+00:00 app[web.1]: Starting the development server...&#xA;2020-06-12T14:10:20.725972+00:00 app[web.1]:&#xA;2020-06-12T14:10:20.803624+00:00 heroku[web.1]: Process exited with status 0&#xA;2020-06-12T14:10:20.835709+00:00 heroku[web.1]: State changed from starting to crashed&#xA;2020-06-12T14:27:07.241917+00:00 heroku[router]: at=error code=H10 desc=""App crashed"" method=GET path=""/"" host=appoint-scheduler.herokuapp.com request_id=4a6d7846-488a-4a57-bd76-ee5b84c197fc fwd=""94.227.127.41"" dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-06-12T14:27:07.688859+00:00 heroku[router]: at=error code=H10 desc=""App crashed"" method=GET path=""/favicon.ico"" host=appoint-scheduler.herokuapp.com request_id=83928da3-bc4a-44f5-83fb-66a7c5b2611d fwd=""94.227.127.41"" dyno= connect= service= status=503 bytes= protocol=https&#xA;&#xA;</code></pre>&#xA;&#xA;<p>I am using yarn not npm on my project does anyone know what I need to do to be able to deploy my project? &#xA;Because my project is not running on heroku because I get this when trying to open the deployed version </p>&#xA;&#xA;<pre><code>Application error&#xA;An error occurred in the application and your page could not be served. If you are the application owner, check your logs for details. You can do this from the Heroku CLI with the command&#xA;heroku logs --tail&#xA;</code></pre>&#xA;",9441232,,1611459,2020-07-09 09:21:27,2020-07-09 09:21:27,React application & GraphQl server deployment problem with Heroku,<reactjs><heroku><yarnpkg><heroku-cli><prisma-graphql>,1,0,0,2020-06-12 18:01:34
62353551,2,,62344660,1,,"<p>If you have deployed only the graphql server you can't make <code>GET</code> request on <code>/</code> because there is no routing, also <code>GET</code> on <code>/graphql</code> is disabled.</p>&#xA;&#xA;<blockquote>&#xA;  <p>When <code>NODE_ENV</code> is set to <code>production</code>, GraphQL Playground (as well as introspection) is disabled as a production best-practice.</p>&#xA;</blockquote>&#xA;&#xA;<p>But by default on heroku <code>NODE_ENV</code> is set to production. To test you graphql server with the GraphQL IDE set it to <code>development</code> or <a href=""https://www.apollographql.com/docs/apollo-server/testing/graphql-playground/#enabling-graphql-playground-in-production"" rel=""nofollow noreferrer"">enable playground in production</a>.</p>&#xA;&#xA;<p>You can also use an API client like postman to make only POST request on <code>/graphql</code> without changing your configuration.</p>&#xA;",5245797,,,,2020-06-12 22:51:34,"",,0,1,0,2020-06-12 22:51:34
62379527,2,,62376415,1,,<p>That doesn't appear to be a warning. That looks like you're writing the result to the console somewhere.</p>&#xA;,6024220,,,,2020-06-14 23:59:40,"",,0,0,0,2020-06-14 23:59:40
62387147,2,,62387146,0,,"<p>Seems the issue came from <code>graphql-core</code> version which need to be &gt;=3.</p>&#xA;<p>I was unabled to install the version &gt;=3 so I upgraded Python to 3.8. When installing Ariadne, I get the same version 0.11.0 but now the graphql-core version 3.0.5 and no more the error.</p>&#xA;",10010216,,10010216,2020-07-09 12:02:03,2020-07-09 12:02:03,"",,0,2,0,2020-06-15 11:22:12
62388693,2,,62353974,0,,"<p>I reproduced your problem with current latest Quarkus (contains SmallRye GraphQL 1.0.3) and then tried again after updating SmallRye GraphQL to latest 1.0.4-SNAPSHOT and I wasn't able to reproduce it anymore. So I think your code is correct and should start working once you upgrade to a version of Quarkus that contains SmallRye GraphQL 1.0.4+ (not released yet, but should be soon).</p>&#xA;",615104,,,,2020-06-15 12:56:54,"",,0,0,0,2020-06-15 12:56:54
62394973,2,,59198021,1,,"<p>There is now an official <a href=""https://composition-api.now.sh/helpers/onGlobalSetup.html"" rel=""nofollow noreferrer"">onGlobalSetup</a> helper for this in <code>nuxt-composition-api</code></p>&#xA;&#xA;<p>According to the documentation, you simply use it in a plugin like so:</p>&#xA;&#xA;<pre><code>import { onGlobalSetup } from 'nuxt-composition-api'&#xA;&#xA;export default () =&gt; {&#xA;  onGlobalSetup(() =&gt; {&#xA;    provide('globalKey', true)&#xA;  })&#xA;}&#xA;</code></pre>&#xA;",7146260,,,,2020-06-15 18:51:15,"",,0,7,0,2020-06-15 18:51:15
62395415,2,,62304242,0,,"<p>It seems that when you upgraded your project to use config-v2, a <code>version.yaml</code> was created in <code>/home/hasura_migrations/metadata</code> path. The version in your file seems to be <code>0</code>. Just update it to <code>2</code> to use config-v2 and try again.</p>&#xA;&#xA;<p>Expected content:</p>&#xA;&#xA;<pre><code>~$ cat /home/hasura_migrations/metadata/version.yaml&#xA;version: 2&#xA;</code></pre>&#xA;&#xA;<p>It worked for me.</p>&#xA;",13750582,,,,2020-06-15 19:20:14,"",,0,0,0,2020-06-15 19:20:14
62413191,1,,,1,372,"<p>I'm working in an Angular project integrating with AWS using graphql. When using Chrome, I can see the request (POST) payload of the query I'm running in the ""Request Payload"" section. But in firefox devtools, I can't. Under the request tab when inspecting a XHR, it says ""No parameters for this request"". &#xA;Strange thing in that when in firefox I try to copy the request using ""Copy as Fetch"" or ""Copy as Curl"" it doesn't copy the payload either. </p>&#xA;&#xA;<p>The request is executed correctly returning the expected data.</p>&#xA;&#xA;<p>So, I can't use firefox for debugging this.</p>&#xA;&#xA;<p>Any ideas why?</p>&#xA;&#xA;<p>Thanks</p>&#xA;",13757463,,13757463,2020-06-16 16:36:07,2020-06-16 16:36:07,Firefox devtools not showing POST body,<firefox><graphql><firefox-developer-tools>,0,1,0,2020-06-16 16:25:47
62434741,2,,58012728,1,,"<p>This bug is fixed, closed and released in 10.2. Since the current stable version is even greater than 10.2 you just need to update your libs to fix the issue.</p>&#xA;",876743,,,,2020-06-17 17:18:03,"",,0,0,0,2020-06-17 17:18:03
62442659,2,,62069703,0,,"<p>Found it.  </p>&#xA;&#xA;<p>AJAX calls in Gatsby <em>only</em> ran when we changed the agent to a macOS machine.  </p>&#xA;&#xA;<p>No idea why, but currently neither Windows nor Linux agents work.  They will build and run fine, but AJAX calls throw an error.</p>&#xA;",10339880,,,,2020-06-18 04:58:03,"",,0,0,0,2020-06-18 04:58:03
62462388,2,,62241232,1,,"<p>So there was no problem from my  Code. The issue was with the free tier of <code>Heroku</code> I am using. I tried replacing my subscription with <code>Hasura's</code> Subscription <a href=""https://hasura.io/learn/graphql/android/subscriptions/1-subscription/"" rel=""nofollow noreferrer"">https://hasura.io/learn/graphql/android/subscriptions/1-subscription/</a> and it works.</p>&#xA;",9552485,,,,2020-06-19 02:35:15,"",,0,0,0,2020-06-19 02:35:15
62464926,2,,62394155,1,,"<p>It seems it's a problem with the current Apollo Server version.</p>&#xA;&#xA;<p>Try downgrading to 2.6.3, this worked for me. Haven't tried with any other version though.</p>&#xA;&#xA;<pre><code>npm install apollo-server@2.6.3&#xA;</code></pre>&#xA;",9914648,,,,2020-06-19 07:00:11,"",,0,1,0,2020-06-19 07:00:11
62478973,1,63255312,,1,1494,"<p>I'm using GraphQL (Symfony + API Platform) with Vue Apollo and Nuxt. </p>&#xA;&#xA;<p>I have a detail page for an issue and want to load the specific issue, but I always get <code>Cannot read property 'issueId' of undefined</code> because <code>this</code> is <code>undefined</code>. This is the relevant script part of my Page</p>&#xA;&#xA;<pre><code>&lt;script&gt;&#xA;import gql from 'graphql-tag'&#xA;&#xA;export default {&#xA;  data() {&#xA;    return {&#xA;      issueId: null&#xA;    }&#xA;  },&#xA;  created() {&#xA;    this.issueId = this.$route.params.id&#xA;  },&#xA;  apollo: {&#xA;    issue: {&#xA;      query: gql`&#xA;        query($issueId: ID!) {&#xA;          issue(id: $issueId) {&#xA;            id&#xA;            description&#xA;          }&#xA;        }&#xA;      `,&#xA;      variables: {&#xA;        issueId: this.issueId&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;&#xA;<p>When I set issueId to <code>issues/3</code>, it works</p>&#xA;&#xA;<pre><code>variables: {&#xA;    issueId: 'issues/3'&#xA;}&#xA;</code></pre>&#xA;",1531895,,,,2020-08-04 21:28:19,"""this"" is ""undefined"" in apollo query (vue + nuxt)",<vue.js><graphql><vue-apollo>,2,1,0,2020-06-19 21:46:11
62490848,2,,62321053,0,,"<p>When you deploy via Helm, it creates the Deployments and everything else you've defined  and tells you it's done. That doesn't mean that whatever you deployed is ready to serve requests. That's because each service may have its own boot time, especially the services who advertise High Availability.</p>&#xA;<p>Kubernetes is designed to address this issue with the help of &quot;liveness/readiness probes&quot;. Basically, in your yaml/helm files you instruct K8s what it needs to check before it returns that a pod is ready. This could be for example a 200 HTTP status code from <code>/live</code> endpoint in your app or whatever.</p>&#xA;<p>Check this out: <a href=""https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/"" rel=""nofollow noreferrer"">https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/</a></p>&#xA;",3095643,,,,2020-06-20 19:43:38,"",,0,1,0,2020-06-20 19:43:38
62491454,2,,58116934,0,,"<p>Your statement that Graphileon is not &quot;supposed to work as a stand-alone app&quot; is not correct. Graphileon is also available as a server product. The desktop version is the free Personal Edition. It is available as native MacOS, Windows or Linux app , and you can run the UI also in your browser from localhost:3000</p>&#xA;",1734996,,,,2020-06-20 20:45:01,"",,0,0,0,2020-06-20 20:45:01
62501599,2,,50688998,0,,"<p>I had that exact error, but fortunately I had already included <code>node-fetch</code> in my project, so I have imported it and associated it to the Apollo client.:</p>&#xA;<pre><code>import fetch from 'node-fetch';&#xA;import ApolloClient from 'apollo-boost';&#xA;import {targetServer} from &quot;./apiConstants&quot;;&#xA;import { gql } from &quot;apollo-boost&quot;;&#xA;&#xA;const client = new ApolloClient({&#xA;    fetch: fetch,&#xA;    uri: targetServer + '/graphql',&#xA;});&#xA;</code></pre>&#xA;<p>and in my <code>package.json</code> this is what I have:</p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;learn-starter&quot;,&#xA;  &quot;version&quot;: &quot;0.1.0&quot;,&#xA;  &quot;private&quot;: true,&#xA;  &quot;scripts&quot;: {&#xA;    &quot;dev&quot;: &quot;next dev&quot;,&#xA;    &quot;build&quot;: &quot;next build&quot;,&#xA;    &quot;start&quot;: &quot;next start&quot;&#xA;  },&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@apollo/react-hooks&quot;: &quot;^3.1.5&quot;,&#xA;    &quot;apollo-boost&quot;: &quot;^0.4.9&quot;,&#xA;    &quot;graphql&quot;: &quot;^15.1.0&quot;,&#xA;    &quot;next&quot;: &quot;9.3.5&quot;,&#xA;    &quot;node-fetch&quot;: &quot;^2.6.0&quot;,&#xA;    ...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2735286,,,,2020-06-21 16:47:24,"",,0,0,0,2020-06-21 16:47:24
62533713,1,62553506,,0,210,"<p>I'm new with docker, i got this error i'm using AMZ platform with mongoDB and graphql with Docker everything was working fine cause i didn't wright all the code, and boum i constantly get running and CrashLoopBackOff all the times :( i don't know whyyyy !&#xA;This is what I getting:</p>&#xA;<pre><code>enter code here&#xA;NAME                       READY   STATUS             RESTARTS   AGE&#xA;graphql-xxxxxxxxxx-xxxxx   0/1     CrashLoopBackOff   8          12m&#xA;graphql-xxxxxxxxxx-xxxxx   0/1     CrashLoopBackOff   7          11m&#xA;</code></pre>&#xA;<p>The output from 'kubectl describe pod graphql-xxxxxxxxxx-xxxxx':</p>&#xA;<pre><code>Warning  Unhealthy  11m (x9 over 12m)      kubelet, pool-g1r6uxpbs-a1jl  Liveness probe failed: Get https://10.244.0.5:4000/healthz: dial tcp 10.244.0.5:4000: connect: connection refused&#xA; Warning  BackOff    3m22s (x24 over 9m3s)  kubelet, pool-g1r6uxpbs-a1jl  Back-off restarting failed container&#xA;</code></pre>&#xA;<p>Yes i double check my whitelisted and add me with my current IP.&#xA;The output from 'kubectl describe logs graphql-xxxxxxxxxx-xxxxx':</p>&#xA;<pre><code>{&quot;message&quot;:&quot;Starting server with args []...&quot;,&quot;level&quot;:&quot;info&quot;}&#xA;{&quot;message&quot;:&quot;External IP 167.172.52.238&quot;,&quot;level&quot;:&quot;info&quot;}&#xA;{&quot;message&quot;:&quot;connection error:Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://docs.atlas.mongodb.com/security-whitelist/&quot;,&quot;reason&quot;:{&quot;type&quot;:&quot;ReplicaSetNoPrimary&quot;,&quot;setName&quot;:null,&quot;maxSetVersion&quot;:null,&quot;maxElectionId&quot;:null,&quot;servers&quot;:{},&quot;stale&quot;:false,&quot;compatible&quot;:true,&quot;compatibilityError&quot;:null,&quot;logicalSessionTimeoutMinutes&quot;:null,&quot;heartbeatFrequencyMS&quot;:10000,&quot;localThresholdMS&quot;:15,&quot;commonWireVersion&quot;:null},&quot;level&quot;:&quot;error&quot;,&quot;stack&quot;:&quot;MongooseServerSelectionError: Could not connect to any servers in your MongoDB Atlas cluster. One common reason is that you're trying to access the database from an IP that isn't whitelisted. Make sure your current IP address is on your Atlas cluster's IP whitelist: https://docs.atlas.mongodb.com/security-whitelist/\n    at NativeConnection.Connection.openUri (/home/graphql/node_modules/mongoose/lib/connection.js:826:32)\n    at Mongoose.connect (/home/graphql/node_modules/mongoose/lib/index.js:335:15)\n    at Object.connect (/home/graphql/db/mongo.js:26:33)\n    at Object.&lt;anonymous&gt; (/home/graphql/index.js:83:44)\n    at Module._compile (internal/modules/cjs/loader.js:778:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:789:10)\n    at Module.load (internal/modules/cjs/loader.js:653:32)\n    at tryModuleLoad (internal/modules/cjs/loader.js:593:12)\n    at Function.Module._load (internal/modules/cjs/loader.js:585:3)\n    at Function.Module.runMain (internal/modules/cjs/loader.js:831:12)\n    at startup (internal/bootstrap/node.js:283:19)\n    at bootstrapNodeJSCore (internal/bootstrap/node.js:623:3)&quot;}&#xA;</code></pre>&#xA;<p>Please if someone can give me a away to debug more this error or i dunno...</p>&#xA;",8003368,,8003368,2020-06-24 14:21:55,2020-06-24 14:21:55,CrashLoopBackOff Running Loop : Docker and GraphQl Warning Unhealthy connection refused,<javascript><docker><kubernetes><graphql-js><docker-container>,1,0,0,2020-06-23 11:32:49
62545989,2,,62545713,2,,"<p>That's just how <code>console.log</code> shows objects that have <code>null</code> as their prototype instead of <code>Object.prototype</code>.</p>&#xA;<p>Compare</p>&#xA;<pre><code>console.log({}) // {}&#xA;</code></pre>&#xA;<p>or</p>&#xA;<pre><code>console.log(Object.create()) // {}&#xA;</code></pre>&#xA;<p>with</p>&#xA;<pre><code>console.log(Object.create(null)) // [Object: null prototype] {}&#xA;</code></pre>&#xA;<p><code>Object.create(null)</code> initializes an object that <em>doesn't inherit any properties or methods from <code>Object</code></em>. There's a <a href=""https://stackoverflow.com/questions/15518328/creating-js-object-with-object-createnull"">few reasons</a> to do that.</p>&#xA;",6024220,,,,2020-06-24 01:00:31,"",,0,0,0,2020-06-24 01:00:31
62553506,2,,62533713,0,,"<p>The error <code>getaddrinfo EAI_AGAIN</code> suggests that your docker environment is unable to reach the internet. Hence the call to an external API is failing.</p>&#xA;<p>A simple fix is to create the file <code>/etc/docker/daemon.json</code></p>&#xA;<p>and insert:</p>&#xA;<pre><code>{&#xA;    &quot;dns&quot;: [&quot;10.0.0.2&quot;, &quot;8.8.8.8&quot;]&#xA;}&#xA;</code></pre>&#xA;<p>where 10.0.0.2 is the first DNS server your machine requests records from, and 8.8.8.8 is the fallback DNS server, google in this case.</p>&#xA;",7743705,,,,2020-06-24 10:59:56,"",,0,5,0,2020-06-24 10:59:56
62564839,1,,,1,603,"<p>I used the <strong>apollo-server-lambda</strong> package to create my lambda function with the serverless framework, as we can see, everything went well.</p>&#xA;<pre><code>https://28d1lielb9.execute-api.us-east-1.amazonaws.com/prod&#xA;</code></pre>&#xA;<p>Now I working to place graphql in the same subdomain as my application in CloudFront and I am getting the error <code>GET query missing</code>.</p>&#xA;<pre><code>https://forms.ciro-maciel.me/g/p/&#xA;</code></pre>&#xA;<p>I did several tests with the path, but I was not successful.</p>&#xA;<p>When did we receive the message GET query missing?</p>&#xA;<p>How can I correctly configure my environment?</p>&#xA;<p>Thank you</p>&#xA;",8589328,,,,2022-09-24 04:35:26,GET query missing with apollo-server-lambda in CloudFront Behaviors,<apollo><apollo-server>,2,0,0,2020-06-24 22:12:09
62623970,2,,62501369,4,,<p>I found the problem. It is because android cannot connect to <code>127.0.0.1</code> or <code>localhost</code> from the emulator. I replaced the host with my local IP address and it is working fine now.</p>&#xA;,874564,,,,2020-06-28 14:35:54,"",,0,0,0,2020-06-28 14:35:54
62637225,2,,62424000,0,,<p>Answering my own question here. It turned out to be a difference in Laravel version that apparently caused the problem. A minor version at that.</p>&#xA;<p>Fixed the problem by locking the version for now and getting back to it in next release.</p>&#xA;,1155902,,,,2020-06-29 11:35:07,"",,0,1,0,2020-06-29 11:35:07
62642791,2,,55359830,0,,"<p>Run <code>npm list graphql</code></p>&#xA;<p>Then, check the highest version you found graphql.</p>&#xA;<p>After that, add this to your <code>package.json</code>:</p>&#xA;<pre><code>  &quot;resolutions&quot;:{&#xA;    &quot;graphql&quot;: &quot;&lt;highest found version&gt;&quot;&#xA;  }&#xA;</code></pre>&#xA;<p>Then, delete your <code>package-lock.json</code> and <code>node_modules</code> folder.&#xA;Run <code>npm install</code></p>&#xA;",4934446,,,,2020-06-29 16:39:51,"",,0,0,0,2020-06-29 16:39:51
62651828,1,62652405,,0,211,"<p>When I send the request to my Graphql API gets me errors like following, request ending successful but console shows;</p>&#xA;<p><a href=""https://i.stack.imgur.com/J2P5X.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J2P5X.png"" alt=""enter image description here"" /></a></p>&#xA;<p>I have got a fragmentTypes.json file but I don't know how I integrate to Nuxt and Nuxt config.</p>&#xA;",6926538,,,,2020-06-30 07:32:55,Graphql on Nuxt - Fragment Types,<vue.js><graphql><nuxt.js><nuxtjs>,1,0,0,2020-06-30 06:54:50
62656624,2,,57883739,2,,"<p>I used the next matchers to allow rendering graphiQl</p>&#xA;<pre><code>.antMatchers(&quot;/graphiql&quot;, &quot;/vendor/**&quot;).permitAll()&#xA;</code></pre>&#xA;<p>GraphiQL version is 5.0.2</p>&#xA;",4675415,,,,2020-06-30 11:40:06,"",,0,2,0,2020-06-30 11:40:06
62662871,2,,61445577,0,,<p>You need to add isomorphic-fetch to the Apollo client in gatsby ssr and browser.</p>&#xA;,4478519,,4099593,2020-07-01 04:01:50,2020-07-01 04:01:50,"",,0,1,0,2020-06-30 17:20:01
62678198,2,,62596381,1,,"<p>To date, I still do not clear what was causing the exception in detail. But looking deeply on Prisma docs, I discovered that in version 1 there's the necessity to proxy the app through the <em>Prisma Cloud</em>.&#xA;So probably, deploying straight on Heroku without it, was generating the main issue: basically there wasn't any Prisma container service running on the server.</p>&#xA;<p>What I did is to follow step by step the official doc about how to deploy your server on Prisma Cloud (<a href=""https://www.youtube.com/watch?v=QJe8YBs8Afg"" rel=""nofollow noreferrer"">here's the video version</a>). As in the example shown in the guide, I already have my own project, which is actually splitted in two different apps: respectively one for the client (front-end) and one for the API (back-end). So, instead to generate a new one, I pointed the back-end API endpoint to the remote URL of the Prisma server generated by the cloud (the Heroku container created by following the tutorial). Then, leaving the management secret API key only on the Prisma server container configuration (which has been generated automatically by the cloud) and, on the other hand, the service secret only on the back-end app, finally I was able to run the <code>prisma deploy</code> correctly and run my project remotely.</p>&#xA;",0,user7554217,,,2020-07-01 13:40:13,"",,0,0,0,2020-07-01 13:40:13
62690850,1,62765763,,2,2249,"<p>We use apollo-server-express to expose a graphql server.</p>&#xA;<p>For this server, we have set the introspection variable to false to hide our schema from the outer world which works fine for Graphql calls that go over rest calls.</p>&#xA;<p>However, when we set up a websocket connection with this same server, we manage to execute introspection queries, even though that during the instantiation of the apollo server, the introspection is explicitly set to false</p>&#xA;<p>the config for booting the Apollo-server looks something like this:</p>&#xA;<pre><code>{&#xA;   schema: &lt;schema&gt;,&#xA;   context: &lt;context_function&gt;,&#xA;   formatError: &lt;format_error_function&gt;,&#xA;   debug: false,&#xA;   tracing: false,&#xA;   subscriptions: {&#xA;       path: &lt;graphQl_path&gt;,&#xA;       keepAlive: &lt;keep_alive_param&gt;,&#xA;       onConnect: &lt;connect_function&gt;,&#xA;       onDisconnect: &lt;disconnect_function&gt;&#xA;   },&#xA;   introspection: false,&#xA;   playground: false&#xA;};&#xA;</code></pre>&#xA;<p>Did someone had a similar issue? And if yes, were you able to solve it and how?</p>&#xA;<p>apollo-server-express version = 2.1.0</p>&#xA;<p>npm version = 6.4.1</p>&#xA;<p>node version = 10.13.0</p>&#xA;",4758927,,,,2021-04-01 22:36:28,Apollo-server-express introspection disabled but still possible over websocket connections,<graphql><apollo-server><introspection>,1,0,0,2020-07-02 07:11:29
62701640,2,,62640237,0,,"<p>SSR is sometimes difficult to debug and such problems occure quite often.</p>&#xA;<p><a href=""https://ssr.vuejs.org/#why-ssr"" rel=""nofollow noreferrer"">https://ssr.vuejs.org/#why-ssr</a></p>&#xA;<blockquote>&#xA;<p>some external libraries may need special treatment to be able to run&#xA;in a server-rendered app.</p>&#xA;</blockquote>&#xA;<p>This may be the point. Some vue-components cannot be run via SSR out of the box. This is why I asked about the content from the server.</p>&#xA;<p>So the easiest fix could be to wrap your component with the <code>&lt;no-ssr&gt;</code> tag. You can do this for each component separatly to find out which one causes the problem.&#xA;Once you have isolated the component you can keep the <code>&lt;no-ssr&gt;</code> tag on it and migrate it's functions to the mounted area of your client component.</p>&#xA;",3177115,,3177115,2020-07-02 23:26:16,2020-07-02 23:26:16,"",,0,1,0,2020-07-02 17:10:03
62705199,1,,,1,893,"<p>I'm trying to log nuxt-apollo's requests (headers and response), similar to the chrome devtools network tab, but then server-side. How can I do that with the nuxt-apollo module? I'm running nuxt universal mode. I want to do all graphql calls server-side.</p>&#xA;",7400613,,7400613,2020-07-04 13:30:06,2020-07-27 09:05:53,How to debug nuxt-apollo server-side graphql requests,<vue-apollo><nuxtjs>,2,2,0,2020-07-02 21:19:45
62742439,2,,62742135,0,,<p>This is a bug with the current version of <code>express-graphql</code>. Please use the previous version until a patched version is released.</p>&#xA;<pre><code>npm install express-graphql@0.9.0&#xA;</code></pre>&#xA;<p>Edit: This has been fixed in version <code>0.10.1</code>.</p>&#xA;,6024220,,6024220,2020-07-05 15:18:11,2020-07-05 15:18:11,"",,0,0,0,2020-07-05 15:07:43
62742592,2,,62742135,0,,<p>if you are using version 0.10.0 downgrade it to 0.9.0</p>&#xA;<pre><code>npm i express-graphql@0.9.0&#xA;</code></pre>&#xA;,6550047,,,,2020-07-05 15:17:57,"",,0,0,0,2020-07-05 15:17:57
62746605,1,,,-1,219,"<p>I`ve been struggeling this a quiet a lot and would appreciate help. I want to be able to print the title value in the console with console.log.</p>&#xA;<pre><code>`&lt;script&gt;&#xA;&#xA;const url = &quot;***&quot;;&#xA;&#xA;const opts = {&#xA;  method: &quot;POST&quot;,&#xA;  headers: { &quot;Content-Type&quot;: &quot;application/json&quot; },&#xA;  body: JSON.stringify({ query: &quot;*[_type == 'post']{ _updatedAt, _createdAt, title}[0]&quot; })&#xA;};&#xA;fetch(url, opts)&#xA;  .then(res =&gt; res.json())&#xA;  .then(console.log)&#xA;  .catch(console.error);&#xA;&#xA;&lt;/script&gt;` &#xA;</code></pre>&#xA;<p>Results I get in console now:</p>&#xA;<pre><code>{ms: 6, query: &quot;*[_type == 'post']{ _updatedAt, _createdAt, title}[0]&quot;, result: {…}}&#xA;ms: 6&#xA;query: &quot;*[_type == 'post']{ _updatedAt, _createdAt, title}[0]&quot;&#xA;result:&#xA;title: &quot;Title2&quot;&#xA;_createdAt: &quot;2020-07-02T16:28:49Z&quot;&#xA;_updatedAt: &quot;2020-07-05T13:16:27Z&quot;&#xA;__proto__: Object&#xA;__proto__: Object&#xA;</code></pre>&#xA;",9402020,,,,2020-07-05 21:45:03,Print the values from a Graphql API call in console,<javascript><graphql>,2,0,0,2020-07-05 21:37:47
62746637,2,,62746605,0,,"<p>You want to access the title field of the result object. Try this:</p>&#xA;<pre><code>fetch(url, opts)&#xA;  .then(res =&gt; res.json())&#xA;  .then(console.log)&#xA;  .catch(console.error);&#xA;</code></pre>&#xA;",13873302,,,,2020-07-05 21:41:26,"",,0,0,0,2020-07-05 21:41:26
62764077,1,,,0,1150,"<p>I have a GraphQL application that run inside a container. If I run <code>docker compose build</code> followed by <code>docker compose up</code> I can connect to it via <code>localhost:9999/graphql</code>. Inside the dockerfile the port forwarding is <code>9999:80</code>. When I run the <code>docker container ls</code> command I can see the ports are forewarded as expected.&#xA;I'd like to running this in a VS Code remote container. Selecting <code>Open folder in remote container</code> gives me the option of selecting either the dockerfile or the docker-compose file to build the container. I've tried both options and neither allows me to access the GraphQL playground from localhost. Running from docker-compose I can see that the ports appear to be forwarded in the same manner as if I ran <code>docker compose up</code> but I can't access the site.&#xA;Where am I going wrong?</p>&#xA;<p>Update: If I run <code>docker compose up</code> on the container that is built by vs code, I can connect to localhost and the graphql playground.</p>&#xA;<pre><code>FROM docker.removed.local/node&#xA;MAINTAINER removed&#xA;&#xA;WORKDIR /opt/app&#xA;&#xA;COPY package.json /opt/app/package.json&#xA;COPY package-lock.json /opt/app/package-lock.json&#xA;COPY .npmrc /opt/app/.npmrc&#xA;RUN echo &quot;nameserver 192.168.11.1&quot; &gt; /etc/resolv.conf &amp;&amp; npm ci&#xA;RUN mkdir -p /opt/app/logs&#xA;&#xA;# Setup a path for using local npm packages&#xA;RUN mkdir -p /opt/node_modules&#xA;&#xA;ENV PATH /opt/node_modules/.bin:$PATH&#xA;&#xA;COPY ./ /opt/app&#xA;EXPOSE 80&#xA;&#xA;ENV NODE_PATH /opt:/opt/app:$NODE_PATH&#xA;ARG NODE_ENV&#xA;&#xA;VOLUME [&quot;/opt/app&quot;]&#xA;&#xA;CMD [&quot;forever&quot;, &quot;-o&quot;, &quot;/opt/app/logs/logs.log&quot;, &quot;-e&quot;, &quot;/opt/app/logs/error.log&quot;, &quot;-a&quot;, &quot;server.js&quot;]&#xA;&#xA;version: '3.5'&#xA;services:&#xA;  server:&#xA;      build: .&#xA;      container_name: removed-data-graph&#xA;      command: nodemon --ignore 'public/*' --legacy-watch src/server.js&#xA;      image: docker.removed.local/removed-data-graph:local&#xA;      ports:&#xA;          - &quot;9999:80&quot;&#xA;      volumes:&#xA;          - .:/opt/app&#xA;          - /opt/app/node_modules/&#xA;            #- ${LOCAL_PACKAGE_DIR}:/opt/node_modules&#xA;      depends_on:&#xA;          - redis&#xA;      networks:&#xA;          - company-network&#xA;      environment:&#xA;          - NODE_ENV=dev&#xA;  redis:&#xA;      container_name: redis&#xA;      image: redis&#xA;      networks:&#xA;          - company-network&#xA;      ports:&#xA;          - &quot;6379:6379&quot;&#xA;networks:&#xA;    company-network:&#xA;        name: company-network&#xA;</code></pre>&#xA;",1440590,,1440590,2020-07-07 00:48:32,2020-07-07 00:48:32,How do I make my VS Code dev/remote container port accessible to localhost?,<docker><visual-studio-code><graphql>,0,7,0,2020-07-06 20:33:08
62765763,2,,62690850,1,,"<p>What <a href=""https://github.com/apollographql/apollo-server/blob/54ff1e68b62f9fbdc366f48562caf531cadf6abb/packages/apollo-server-core/src/ApolloServer.ts#L83-L94"" rel=""nofollow noreferrer"">ApolloServer does internally</a> is prevent you from using the <code>__schema</code> and <code>__type</code> resolvers. I assume you could do the same thing:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export const resolvers = {&#xA;  Query: {&#xA;    __type() {&#xA;      throw new Error('You cannot make introspection');&#xA;    },&#xA;    __schema() {&#xA;      throw new Error('You cannot make introspection');&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",652728,,652728,2021-04-01 22:36:28,2021-04-01 22:36:28,"",,0,0,0,2020-07-06 23:07:13
62781389,2,,62780964,2,,"<p>If you use the last version, express-graphql return an object, in this case you should use:</p>&#xA;<pre><code>const { graphqlHTTP } = require('express-graphql')&#xA;</code></pre>&#xA;<p>or in your code</p>&#xA;<pre><code>app.use('/graphql', expressGraphQL.graphqlHTTP({&#xA;    graphiql: true&#xA;}))&#xA;</code></pre>&#xA;",3937980,,,,2020-07-07 18:08:18,"",,0,0,0,2020-07-07 18:08:18
62805255,2,,62798355,0,,<p>So with the help of a friend I realized the mistake. To fix this here issue you just change graphql_path: &quot;/graphql&quot; to the actual path. So in my case it was &quot;/api/v2/graphql/&quot;</p>&#xA;,12125984,,,,2020-07-08 23:43:46,"",,0,0,0,2020-07-08 23:43:46
62810557,1,62810558,,3,1362,"<p>When i connec't from my React frontend app to my graphql backend created in python Ariadne i get this error.</p>&#xA;<p>React query</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const uri = 'http://localhost:8000/'&#xA;const link = new HttpLink({ &#xA;    uri,&#xA;&#xA;const client = new ApolloClient({ &#xA;    link,&#xA;    cache: new InMemoryCache(),&#xA;});&#xA;&#xA;});&#xA;&#xA;client.query({&#xA;  query: gql`&#xA;{&#xA;    &quot;myquery&quot;&#xA;  }&#xA;}&#xA;  `&#xA;}).then(result =&gt; console.log(result));&#xA;</code></pre>&#xA;<p>Ariadne config</p>&#xA;<pre class=""lang-py prettyprint-override""><code>from ariadne import make_executable_schema, load_schema_from_path&#xA;from ariadne.asgi import GraphQL&#xA;&#xA;type_defs = load_schema_from_path(SCHEMA_FILE)&#xA;&#xA;schema = make_executable_schema(type_defs, *types)&#xA;app = GraphQL(schema, debug=True)&#xA;</code></pre>&#xA;<p>I get this error in Chrome console</p>&#xA;<pre><code>Access to fetch at 'http://localhost:8000/' from origin 'http://localhost:3000' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.&#xA;</code></pre>&#xA;<p><code>POST http://localhost:8000/ net::ERR_FAILED</code></p>&#xA;<p>Also uvicorn prints out:</p>&#xA;<p><code>INFO:     127.0.0.1:59910 - &quot;OPTIONS / HTTP/1.1&quot; 405 Method Not Allowed</code></p>&#xA;<p>How to enable CORS?</p>&#xA;",3091149,,,,2020-07-09 08:40:02,Can't enable CORS / allow headers in python graphql framework - ariadne,<python><reactjs><graphql><ariadne-graphql>,1,0,0,2020-07-09 08:26:41
62810558,2,,62810557,3,,"<p>Aridne does not support CORS.&#xA;You need to wrap Ariadne server with starlette, and than allow origins in CORSMiddleware</p>&#xA;<pre class=""lang-py prettyprint-override""><code>from starlette.middleware.cors import CORSMiddleware&#xA;&#xA;(...)&#xA;app = CORSMiddleware(GraphQL(schema, debug=True), allow_origins=['*'], allow_methods=(&quot;GET&quot;, &quot;POST&quot;, &quot;OPTIONS&quot;))&#xA;</code></pre>&#xA;",3091149,,3091149,2020-07-09 08:40:02,2020-07-09 08:40:02,"",,0,1,0,2020-07-09 08:26:41
62811735,2,,62387146,2,,"<p>At the moment Ariadne is not compatible with many of the graphql-core, so the version should be between 3.0 and 3.1 for Ariadne to work.</p>&#xA;<pre><code>pip install &quot;graphql-core&lt;3.1&quot;&#xA;</code></pre>&#xA;<p>Her is some sources:</p>&#xA;<p><a href=""https://github.com/mirumee/ariadne/issues/345"" rel=""nofollow noreferrer"">https://github.com/mirumee/ariadne/issues/345</a></p>&#xA;<p><a href=""https://graphql-core-3.readthedocs.io/en/latest/intro.html#getting-started"" rel=""nofollow noreferrer"">https://graphql-core-3.readthedocs.io/en/latest/intro.html#getting-started</a></p>&#xA;",12868928,,12868928,2020-07-09 09:49:31,2020-07-09 09:49:31,"",,0,0,0,2020-07-09 09:27:34
62861008,2,,58108591,1,,"<p>I have encountered the same issue and made a <a href=""https://github.com/onichandame/apollo-client-ssr/"" rel=""nofollow noreferrer"">package</a> to solve it. It supports query/mutation/subscription with SSR enabled.</p>&#xA;",10560971,,,,2020-07-12 12:21:40,"",,0,0,0,2020-07-12 12:21:40
62875852,1,62883188,,1,564,"<p>I'm a beginner in GraphQL and have been doing some tutorials and simple projects with it. Today I was following a new tutorial and ran into something odd. The GraphiQL interface from graphene_django will not return anything in browsers. I get a different error in every browser:</p>&#xA;<p>(Chrome)</p>&#xA;<pre><code>Cannot read property '1' of null&#xA;</code></pre>&#xA;<p>(Firefox)</p>&#xA;<pre><code>match is null&#xA;</code></pre>&#xA;<p>(Safari)</p>&#xA;<pre><code>null is not an object (evaluating 'match[1]')&#xA;</code></pre>&#xA;<p>However, in Insomnia, everything works just fine.</p>&#xA;<p>I would guess my code works fine since I am getting a response in Insomnia, but my browser just won't let me play. Does anyone know what this could be?</p>&#xA;",13549008,,,,2020-07-13 19:47:11,"Graphene GraphiQL does not work in browsers, but Insomnia client works just fine",<python><django><graphql>,1,0,0,2020-07-13 12:27:46
62883188,2,,62875852,2,,"<p>If you just installed <code>graphene-django</code> then check its version, if it's <strong>2.12.0</strong> then downgrade to version <strong>2.11.1</strong> and it will work perfectly.</p>&#xA;<p>Looks like there is an issue with <strong>2.12.0</strong></p>&#xA;<p>As a temporary workaround, you can give your query a name (check github <a href=""https://github.com/graphql-python/graphene-django/issues/1003#issuecomment-657738053"" rel=""nofollow noreferrer"">here</a>):</p>&#xA;<pre><code>query my_query{&#xA;   type{&#xA;      field&#xA;   }&#xA;}&#xA;</code></pre>&#xA;",11974667,,,,2020-07-13 19:47:11,"",,0,0,0,2020-07-13 19:47:11
62889335,2,,56616121,0,,"<p>Found this earlier today when I ran into a similar problem. Here is my working mutation:</p>&#xA;<pre><code>const ADD_INCIDENT_USER = gql`&#xA;  mutation AddIncidentUser($from: ID!, $to: ID!) {&#xA;    AddIncidentUser(from: { id: $from }, to: { id: $to }) {&#xA;      from {&#xA;        id&#xA;      }&#xA;      to {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>so in your example you would want to change</p>&#xA;<pre><code>mutation AddPersonRoll($PersonInput: ID!, $RollInput: ID!){&#xA;</code></pre>&#xA;<p>to</p>&#xA;<pre><code>mutation AddPersonRoll($from: ID!, $to: ID!){&#xA;</code></pre>&#xA;",1257593,,,,2020-07-14 06:34:38,"",,0,0,0,2020-07-14 06:34:38
62889474,2,,62877027,0,,"<p>Apparently this is a <a href=""https://github.com/vuejs/vue-apollo/issues/1009"" rel=""nofollow noreferrer"">known issue</a> with vue-apollo 4 not being compatible with any version higher than <code>&quot;@vue/composition-api&quot;: &quot;0.5.0&quot;</code>. So downgrading fixed the issue temporarily until <code>vue-apollo 4</code> will merge the <a href=""https://github.com/vuejs/vue-apollo/pull/1000"" rel=""nofollow noreferrer"">fix</a>.</p>&#xA;<pre><code>yarn add @vue/composition-api@0.5.0&#xA;</code></pre>&#xA;",2304170,,,,2020-07-14 06:44:24,"",,0,0,0,2020-07-14 06:44:24
62890338,2,,61771755,1,,"<p>As of Nuxt 2.13, @nuxtjs/dotenv is not required anymore. <a href=""https://nuxtjs.org/blog/moving-from-nuxtjs-dotenv-to-runtime-config"" rel=""nofollow noreferrer"">Read here</a></p>&#xA;<p>The concept that I was missing is that you set up the same named variable in your server / pipeline, so that you have your (always local / never pushed) .env file and a same name variable remotely, not added to your repo (where the value can be the same or different)</p>&#xA;",4239029,,,,2020-07-14 07:45:56,"",,0,0,0,2020-07-14 07:45:56
62910632,1,,,2,1048,"<p>We are using an Apollo Server as an 'interface' server in a large project -- that is it takes various APIs and converts them all to a single GraphQL API using 'schema stitching'.</p>&#xA;<p>Currently our start script is</p>&#xA;<pre><code>&quot;start&quot;: &quot;tsc &amp;&amp; NODE_ENV=development node dist/index.js&quot;&#xA;</code></pre>&#xA;<p>and we changed it to</p>&#xA;<pre><code>&quot;start&quot;: &quot;tsc &amp;&amp; NODE_ENV=production node dist/index.js&quot;&#xA;</code></pre>&#xA;<p>When we pushed to production we started getting errors in the 400 range (I don't have the exact error, as we reverted the push) when the client tried to access the interface server.</p>&#xA;<p>The only other change we made in our <code>/index.ts</code> file was in the configuration of the server itself</p>&#xA;<pre><code>introspection: true,&#xA;        playground: !(process.env.NODE_ENV === 'production')&#xA;</code></pre>&#xA;<p>In any case, as said, we reverted back to 'development', and all works fine.</p>&#xA;<p>What does setting <code>NODE_ENV</code> to <code>production</code> do internally?</p>&#xA;<p>I've looked through the Apollo Server docs but can't find anything.</p>&#xA;<p>I found this, under <a href=""https://www.apollographql.com/docs/apollo-server/deployment/heroku/"" rel=""nofollow noreferrer"">Deploying With Heroku</a> (we are not deploying with Heroku, but it's the only reference I could find)</p>&#xA;<blockquote>&#xA;<p>To enable the production mode of Apollo Server, you need to set the&#xA;NODE_ENV variable to production.</p>&#xA;</blockquote>&#xA;<p>But, again, what is the 'production mode' exactly? It could very well be I've missed the obvious documentation explaining this.</p>&#xA;",2014843,,472495,2020-07-16 17:40:09,2021-07-01 06:28:21,What does setting Apollo Server NODE_ENV to 'production' mode actually do (internally)?,<node.js><graphql><apollo><production><apollo-server>,1,1,0,2020-07-15 08:26:48
62914354,2,,51168798,0,,"<p>I ran into the same problem.&#xA;Perhaps you are using apollo-client v3 and use <code>import { getDataFromTree, renderToStringWithData} from '@apollo/react-ssr';</code>&#xA;Try <code>import {getDataFromTree, renderToStringWithData} from '@apollo/client/react/ssr';</code>&#xA;It helped me. More information here <a href=""https://github.com/apollographql/react-apollo"" rel=""nofollow noreferrer"">https://github.com/apollographql/react-apollo</a></p>&#xA;",9098241,,,,2020-07-15 12:00:39,"",,0,0,0,2020-07-15 12:00:39
62915820,2,,48951549,1,,<p>Check the below:</p>&#xA;<ul>&#xA;<li>max_allowed_packets</li>&#xA;<li>wait_timeout</li>&#xA;<li>net_read_timeout</li>&#xA;</ul>&#xA;<p>Also monitor MySQL process list during the issue to identify timeouts.</p>&#xA;,8491683,,8253209,2020-07-15 13:41:50,2020-07-15 13:41:50,"",,0,0,0,2020-07-15 13:18:37
62918913,1,,,1,461,"<p>My scripts are set up like:</p>&#xA;<pre><code>&quot;start-dev&quot;: &quot;npm-run-all -p client server db&quot;,&#xA;&quot;client&quot;: &quot;gatsby develop&quot;,&#xA;&quot;server&quot;: &quot;nodemon server.js&quot;,&#xA;&quot;db&quot;: &quot;json-server db.json&quot;&#xA;</code></pre>&#xA;<p>So for development I have a mock database served by json-server and an endpoint served by json-server. So I installed the plugin as per the <a href=""https://www.gatsbyjs.org/docs/third-party-graphql/"" rel=""nofollow noreferrer"">docs</a>. And configured the plugin like:</p>&#xA;<pre><code>{&#xA;  resolve: `gatsby-source-graphql`,&#xA;  options: {&#xA;    typeName: `racing`,&#xA;    fieldName: 'members',&#xA;    url: 'http://localhost:3000/api/members',&#xA;  },&#xA;},&#xA;{&#xA;  resolve: `gatsby-source-graphql`,&#xA;  options: {&#xA;    typeName: `racing`,&#xA;    fieldName: 'teams',&#xA;    url: 'http://localhost:3000/api/teams',&#xA;  },&#xA;},&#xA;</code></pre>&#xA;<p>When I run <code>yarn run start-dev</code> I get an error:</p>&#xA;<pre><code>&quot;gatsby-source-graphql&quot; threw an error while running the sourceNodes lifecycle:&#xA;Response not successful: Received status code 404&#xA;  ServerError: Response not successful: Received status code 404&#xA;</code></pre>&#xA;<p>plus there is some stack trace information. Eventual I get the usual links to go to GraphQL (https:localhost:8000/__graphql), but I don't see the API fieldName in available queries in this tool. So the overall question is how should I setup to query a &quot;third-party&quot; API? Specifically, is this an expected error? How do I query the API using the GraphQL tool?</p>&#xA;<p>Thank you.</p>&#xA;",1491433,,8108684,2020-07-15 16:03:19,2020-07-19 15:08:25,Gatsby plugin for third-party APIs throw error,<graphql><gatsby>,1,7,0,2020-07-15 15:56:02
62926640,2,,62926445,1,,"<p>Totally you can.</p>&#xA;<p>Depends on how you deploy Hasura, for example I'm using Docker with Caddy on DigitalOcean. My endpoint should be: <code>http://mydomain-for-example.com/v1/graphql</code>. You need to config your reverse proxy (nginx, apache, caddy) to map the above <code>mydomain-for-example.com</code> to map with the Hasura docker instance.</p>&#xA;",8270395,,,,2020-07-16 02:46:17,"",,0,2,0,2020-07-16 02:46:17
62926712,1,,,2,280,"<p>For a single request, we can monitor its response time by using consol.log(start) at the beginning of request and console.log(end) at the point where the response is sent.&#xA;I want in the event that any request to API hangs for a long period (greater than 5-10s), I should be able to terminate the request, return an error, and log both the request and the stack trace.&#xA;How can I be able to do it at the app-level rather than for adding this console.log for each request?</p>&#xA;<p>On the server, I do have Nginx.</p>&#xA;",5400992,,5400992,2020-07-16 08:22:26,2020-07-26 07:20:22,Handling slow requests in NodeJs,<node.js><graphql>,0,5,0,2020-07-16 02:57:51
62928991,2,,62928315,1,,"<p>The warning is not the cause since it is still <a href=""https://github.com/fastify/fastify/blob/master/docs/Migration-Guide-V3.md#changed-content-type-parser-syntax-2286"" rel=""nofollow noreferrer"">supported in v3</a>.</p>&#xA;<p>Looking the <a href=""https://github.com/autotelic/apollo-server-fastify/blob/master/package.json#L49"" rel=""nofollow noreferrer""><code>@autotelic/apollo-server-fastify</code> package.json</a>, it is designed to work with fastify v2:</p>&#xA;<pre><code>&quot;fastify&quot;: &quot;^2.14.1&quot;,&#xA;</code></pre>&#xA;<p>So you need to downgrade your fastify server or ask to upgrade to the module.</p>&#xA;",3309466,,,,2020-07-16 06:43:02,"",,0,0,0,2020-07-16 06:43:02
62934303,1,,,2,1520,"<p>I have set up a local K8s cluster under Windows like this:</p>&#xA;<ol>&#xA;<li>install docker for desktop</li>&#xA;<li>in docker for desktop, enable kubernetes</li>&#xA;<li>install the nginx ingress controller</li>&#xA;</ol>&#xA;<pre class=""lang-sh prettyprint-override""><code>kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.29.0/deploy/static/mandatory.yaml&#xA;kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.29.0/deploy/static/provider/cloud-generic.yaml&#xA;</code></pre>&#xA;<ol start=""4"">&#xA;<li>add the following domain to the hosts (<code>C:\Windows\System32\drivers\etc\hosts</code>)</li>&#xA;</ol>&#xA;<pre><code>127.0.0.1  localhost api.shopozor&#xA;</code></pre>&#xA;<p>I'm doing nothing special here, I keep everything to the default setup.</p>&#xA;<p>Then, I deployed hasura to my cluster, with the following yamls (I am not showing the postgres deployments for the sake of conciseness):</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>---&#xA;# Source: api/templates/secrets.yaml&#xA;apiVersion: v1&#xA;kind: Secret&#xA;metadata:&#xA;  name: api&#xA;  labels:&#xA;    app.kubernetes.io/name: api&#xA;    helm.sh/chart: api-0.0.0&#xA;    app.kubernetes.io/instance: api&#xA;    app.kubernetes.io/version: &quot;0.0&quot;&#xA;    app.kubernetes.io/managed-by: Helm&#xA;type: Opaque&#xA;data:&#xA;  admin-secret: &quot;c2VjcmV0&quot;&#xA;---&#xA;# Source: api/templates/service.yaml&#xA;apiVersion: v1&#xA;kind: Service&#xA;metadata:&#xA;  name: api&#xA;  labels:&#xA;    app.kubernetes.io/name: api&#xA;    helm.sh/chart: api-0.0.0&#xA;    app.kubernetes.io/instance: api&#xA;    app.kubernetes.io/version: &quot;0.0&quot;&#xA;    app.kubernetes.io/managed-by: Helm&#xA;spec:&#xA;  type: ClusterIP&#xA;  ports:&#xA;    - port: 8080&#xA;      targetPort: 8080&#xA;      # TODO: we cannot use string port because devspace doesn't support it in its UI&#xA;      # targetPort: http&#xA;      protocol: TCP&#xA;      name: http&#xA;  selector:&#xA;    app.kubernetes.io/name: api&#xA;    app.kubernetes.io/instance: api&#xA;---&#xA;# Source: api/templates/deployment.yaml&#xA;apiVersion: apps/v1&#xA;kind: Deployment&#xA;metadata:&#xA;  name: api&#xA;  labels:&#xA;    app.kubernetes.io/name: api&#xA;    helm.sh/chart: api-0.0.0&#xA;    app.kubernetes.io/instance: api&#xA;    app.kubernetes.io/version: &quot;0.0&quot;&#xA;    app.kubernetes.io/managed-by: Helm&#xA;spec:&#xA;  replicas: 1&#xA;  selector:&#xA;    matchLabels:&#xA;      app.kubernetes.io/name: api&#xA;      app.kubernetes.io/instance: api&#xA;  template:&#xA;    metadata:&#xA;      labels:&#xA;        app.kubernetes.io/name: api&#xA;        app.kubernetes.io/instance: api&#xA;    spec:&#xA;      serviceAccountName: api&#xA;      securityContext:&#xA;        {}&#xA;      initContainers:&#xA;      # App has to wait for the database to be online &quot;depends_on&quot; workaround&#xA;      - name: wait-for-db&#xA;        image: darthcabs/tiny-tools:1&#xA;        args:&#xA;        - /bin/bash&#xA;        - -c&#xA;        - &gt;&#xA;          set -x;&#xA;          while [[ &quot;$(nc -zv 'postgres' 5432 &amp;&gt; /dev/null; echo $?)&quot; != 0 ]]; do&#xA;            echo '.'&#xA;            sleep 15;&#xA;          done&#xA;      containers:&#xA;      - name: api&#xA;        securityContext:&#xA;            {}&#xA;        image: shopozor/graphql-engine:EM5Aya&#xA;        imagePullPolicy: &#xA;        env:&#xA;        - name: POSTGRES_USER&#xA;          valueFrom:&#xA;            secretKeyRef:&#xA;              name: shared-postgresql&#xA;              key: postgresql-username&#xA;        - name: POSTGRES_DATABASE&#xA;          value: shopozor&#xA;        - name: POSTGRES_PASSWORD&#xA;          valueFrom:&#xA;            secretKeyRef:&#xA;              name: shared-postgresql&#xA;              key: postgresql-password&#xA;        - name: POSTGRES_HOST&#xA;          value: postgres&#xA;        - name: POSTGRES_PORT&#xA;          value: &quot;5432&quot;&#xA;        - name: HASURA_GRAPHQL_SERVER_PORT&#xA;          value: &quot;8080&quot;&#xA;        - name: HASURA_GRAPHQL_ENABLE_CONSOLE&#xA;          value: &quot;true&quot;&#xA;        - name: HASURA_GRAPHQL_ENABLED_LOG_TYPES&#xA;          value: startup, http-log, webhook-log, websocket-log, query-log&#xA;        - name: HASURA_GRAPHQL_ENABLE_TELEMETRY&#xA;          value: &quot;false&quot;&#xA;        - name: HASURA_GRAPHQL_CORS_DOMAIN&#xA;          value: &quot;*&quot;&#xA;        - name: HASURA_GRAPHQL_DISABLE_CORS&#xA;          value: &quot;false&quot;&#xA;        - name: HASURA_GRAPHQL_UNAUTHORIZED_ROLE&#xA;          value: incognito&#xA;        - name: HASURA_GRAPHQL_ADMIN_SECRET&#xA;          valueFrom:&#xA;            secretKeyRef:&#xA;              name: api&#xA;              key: admin-secret&#xA;        - name: HASURA_GRAPHQL_JWT_SECRET&#xA;          value: &quot;{\&quot;type\&quot;: \&quot;HS256\&quot;, \&quot;key\&quot;: \&quot;my-access-token-signing-key-secret\&quot;, \&quot;audience\&quot;: [\&quot;58640fbe-9a6c-11ea-bb37-0242ac130002\&quot;, \&quot;6e707590-9a6c-11ea-bb37-0242ac130002\&quot;], \&quot;claims_namespace\&quot;: \&quot;https://hasura.io/jwt/claims\&quot;, \&quot;claims_format\&quot;: \&quot;json\&quot;, \&quot;issuer\&quot;: \&quot;shopozor.com\&quot; }&quot;&#xA;        - name: HASURA_GRAPHQL_DATABASE_URL&#xA;          value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DATABASE)&#xA;        - name: FUNCTION_NAMESPACE&#xA;          value: dev&#xA;        ports:&#xA;        - name: http&#xA;          containerPort: 8080&#xA;          protocol: TCP&#xA;        livenessProbe:&#xA;          httpGet:&#xA;            path: /healthz&#xA;            port: http&#xA;        readinessProbe:&#xA;          httpGet:&#xA;            path: /healthz&#xA;            port: http&#xA;        resources:&#xA;            {}&#xA;---&#xA;# Source: api/templates/ingress.yaml&#xA;apiVersion: networking.k8s.io/v1beta1&#xA;kind: Ingress&#xA;metadata:&#xA;  name: api&#xA;  labels:&#xA;    app.kubernetes.io/name: api&#xA;    helm.sh/chart: api-0.0.0&#xA;    app.kubernetes.io/instance: api&#xA;    app.kubernetes.io/version: &quot;0.0&quot;&#xA;    app.kubernetes.io/managed-by: Helm&#xA;  annotations:&#xA;    kubernetes.io/ingress.class: nginx&#xA;spec:&#xA;  rules:&#xA;    - host: &quot;api.shopozor&quot;&#xA;      http:&#xA;        paths:&#xA;          - path: /&#xA;            backend:&#xA;              serviceName: api&#xA;              servicePort: 8080&#xA;</code></pre>&#xA;<p>Now, I have a nuxt frontend that tries to make use of hasura's websocket. I configured apollo in the standard way</p>&#xA;<pre class=""lang-js prettyprint-override""><code>//---&#xA;// nuxt.config.js&#xA;[...]&#xA;  // Give apollo module options&#xA;  apollo: {&#xA;    cookieAttributes: {&#xA;      expires: 7&#xA;    },&#xA;    includeNodeModules: true, &#xA;    authenticationType: 'Basic', &#xA;    clientConfigs: {&#xA;      default: '~/apollo/clientConfig.js'&#xA;    }&#xA;  },&#xA;[...]&#xA;//---&#xA;// apollo/clientConfig.js&#xA;import { InMemoryCache } from 'apollo-cache-inmemory'&#xA;export default function (context) {&#xA;  return {&#xA;    httpLinkOptions: {&#xA;      uri: 'http://api.shopozor/v1/graphql',&#xA;      credentials: 'same-origin'&#xA;    },&#xA;    cache: new InMemoryCache(),&#xA;    wsEndpoint: 'ws://localhost:8080/v1/graphql'&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Notice I need no particular header currently. I should be able to access the websocket without authorization token.</p>&#xA;<p>Now, when I start my application, the websocket connection tries to initialize. If I port-forward my hasura service, then the above configuration is fine. The websocket connection seems to be working. At least, the hasura log shows</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>2020-07-16T06:49:59.937386882Z {&quot;type&quot;:&quot;websocket-log&quot;,&quot;timestamp&quot;:&quot;2020-07-16T06:49:59.937+0000&quot;,&quot;level&quot;:&quot;info&quot;,&quot;detail&quot;:{&quot;event&quot;:{&quot;type&quot;:&quot;accepted&quot;},&quot;connection_info&quot;:{&quot;websocket_id&quot;:&quot;8437b784-1fce-4430-9ca9-a9e7517307f0&quot;,&quot;token_expiry&quot;:null,&quot;msg&quot;:null},&quot;user_vars&quot;:null}}&#xA;</code></pre>&#xA;<p>If I, however, change the <code>wsEndpoint</code> in the above configuration to use the ingress into my hasura instance,</p>&#xA;<pre class=""lang-js prettyprint-override""><code>wsEndpoint: 'ws://api.shopozor/v1/graphql'&#xA;</code></pre>&#xA;<p>then it doesn't work anymore. Instead, I continuously get a <code>404 Not Found</code>. I can, however, access the hasura console through <code>http://api.shopozor</code>. The hasura log shows</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>2020-07-16T10:37:53.564657244Z {&quot;type&quot;:&quot;websocket-log&quot;,&quot;timestamp&quot;:&quot;2020-07-16T10:37:53.564+0000&quot;,&quot;level&quot;:&quot;error&quot;,&quot;detail&quot;:{&quot;event&quot;:{&quot;type&quot;:&quot;rejected&quot;,&quot;detail&quot;:{&quot;path&quot;:&quot;$&quot;,&quot;error&quot;:&quot;only '/v1/graphql', '/v1alpha1/graphql' are supported on websockets&quot;,&quot;code&quot;:&quot;not-found&quot;}},&quot;connection_info&quot;:{&quot;websocket_id&quot;:&quot;5e031467-fb5c-460d-b2a5-11f1e21f22e7&quot;,&quot;token_expiry&quot;:null,&quot;msg&quot;:null},&quot;user_vars&quot;:null}}&#xA;</code></pre>&#xA;<p>So I googled a lot, found some information on annotations I should use in my ingresses, but nothing worked. What am I missing here? Do I need a particular nginx ingress controller configuration? Do I need to pass some special annotations to my hasura ingress? What do I need to do to make it work?</p>&#xA;<h2>EDIT</h2>&#xA;<p>To answer a question to this post, here's my the ingress to hasura I have applied on my cluster:</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>apiVersion: extensions/v1beta1&#xA;kind: Ingress&#xA;metadata:&#xA;  annotations:&#xA;    kubernetes.io/ingress.class: nginx&#xA;    meta.helm.sh/release-name: api&#xA;    meta.helm.sh/release-namespace: dev&#xA;  labels:&#xA;    app.kubernetes.io/instance: api&#xA;    app.kubernetes.io/managed-by: Helm&#xA;    app.kubernetes.io/name: api&#xA;    app.kubernetes.io/version: '0.0'&#xA;    helm.sh/chart: api-0.0.0&#xA;  name: api&#xA;spec:&#xA;  rules:&#xA;    - host: api.shopozor&#xA;      http:&#xA;        paths:&#xA;          - backend:&#xA;              serviceName: api&#xA;              servicePort: 8080&#xA;            path: /&#xA;</code></pre>&#xA;<h2>EDIT 2</h2>&#xA;<p>With the following ingress for my hasura instance</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>apiVersion: extensions/v1beta1&#xA;kind: Ingress&#xA;metadata:&#xA;  annotations:&#xA;    kubernetes.io/ingress.class: nginx&#xA;    meta.helm.sh/release-name: api&#xA;    meta.helm.sh/release-namespace: dev&#xA;    nginx.ingress.kubernetes.io/configuration-snippet: |&#xA;      proxy_http_version 1.1;&#xA;      proxy_set_header Upgrade &quot;websocket&quot;;&#xA;      proxy_set_header Connection &quot;Upgrade&quot;;&#xA;  labels:&#xA;    app.kubernetes.io/instance: api&#xA;    app.kubernetes.io/managed-by: Helm&#xA;    app.kubernetes.io/name: api&#xA;    app.kubernetes.io/version: '0.0'&#xA;    helm.sh/chart: api-0.0.0&#xA;  name: api&#xA;spec:&#xA;  rules:&#xA;    - host: api.shopozor&#xA;      http:&#xA;        paths:&#xA;          - backend:&#xA;              serviceName: api&#xA;              servicePort: 8080&#xA;            path: /&#xA;</code></pre>&#xA;<p>the frontend application still has the same issue with websockets. In addition, it cannot really connect to hasura anymore. Instead, I get the following errors:</p>&#xA;<pre><code> ERROR  Network error: Unexpected token &lt; in JSON at position 0                                                                                                                                         23:17:06&#xA;&#xA;  at new ApolloError (D:\workspace\shopozor\services\node_modules\apollo-client\bundle.umd.js:92:26)&#xA;  at D:\workspace\shopozor\services\node_modules\apollo-client\bundle.umd.js:1588:34&#xA;  at D:\workspace\shopozor\services\node_modules\apollo-client\bundle.umd.js:2008:15&#xA;  at Set.forEach (&lt;anonymous&gt;)&#xA;  at D:\workspace\shopozor\services\node_modules\apollo-client\bundle.umd.js:2006:26&#xA;  at Map.forEach (&lt;anonymous&gt;)&#xA;  at QueryManager.broadcastQueries (D:\workspace\shopozor\services\node_modules\apollo-client\bundle.umd.js:2004:20)&#xA;  at D:\workspace\shopozor\services\node_modules\apollo-client\bundle.umd.js:1483:29&#xA;  at runMicrotasks (&lt;anonymous&gt;)&#xA;  at processTicksAndRejections (internal/process/task_queues.js:97:5)&#xA;&#xA;Global error handler                                                                                                                                                                                    23:17:06&#xA;&#xA; ERROR  Network error: Unexpected token &lt; in JSON at position 0                                                                                                                                         23:17:06&#xA;&#xA;  at new ApolloError (D:\workspace\shopozor\services\node_modules\apollo-client\bundle.umd.js:92:26)&#xA;  at D:\workspace\shopozor\services\node_modules\apollo-client\bundle.umd.js:1486:27&#xA;  at runMicrotasks (&lt;anonymous&gt;)&#xA;  at processTicksAndRejections (internal/process/task_queues.js:97:5)&#xA;</code></pre>&#xA;<p>as well as</p>&#xA;<pre><code>client.js?06a0:49 ApolloError: Network error: Unexpected token &lt; in JSON at position 0&#xA;    at new ApolloError (D:\workspace\shopozor\services\node_modules\apollo-client\bundle.umd.js:92:26)&#xA;    at D:\workspace\shopozor\services\node_modules\apollo-client\bundle.umd.js:1486:27&#xA;    at runMicrotasks (&lt;anonymous&gt;)&#xA;    at processTicksAndRejections (internal/process/task_queues.js:97:5) {&#xA;  graphQLErrors: [],&#xA;  networkError: SyntaxError [ServerParseError]: Unexpected token &lt; in JSON at position 0&#xA;      at JSON.parse (&lt;anonymous&gt;)&#xA;      at D:\workspace\shopozor\services\node_modules\apollo-link-http-common\lib\index.js:35:25&#xA;      at runMicrotasks (&lt;anonymous&gt;)&#xA;      at processTicksAndRejections (internal/process/task_queues.js:97:5) {&#xA;    name: 'ServerParseError',&#xA;    response: Body {&#xA;      url: 'http://api.shopozor/v1/graphql/',&#xA;      status: 404,&#xA;      statusText: 'Not Found',&#xA;      headers: [Headers],&#xA;      ok: false,&#xA;      body: [PassThrough],&#xA;      bodyUsed: true,&#xA;      size: 0,&#xA;      timeout: 0,&#xA;      _raw: [Array],&#xA;      _abort: false,&#xA;      _bytes: 153&#xA;    },&#xA;    statusCode: 404,&#xA;    bodyText: '&lt;html&gt;\r\n' +&#xA;      '&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;\r\n' +&#xA;      '&lt;body&gt;\r\n' +&#xA;      '&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;\r\n' +&#xA;      '&lt;hr&gt;&lt;center&gt;nginx/1.17.8&lt;/center&gt;\r\n' +&#xA;      '&lt;/body&gt;\r\n' +&#xA;      '&lt;/html&gt;\r\n'&#xA;  },&#xA;  message: 'Network error: Unexpected token &lt; in JSON at position 0',&#xA;  extraInfo: undefined&#xA;}&#xA;</code></pre>&#xA;<p>and</p>&#xA;<pre><code>index.js?a6d6:111 OPTIONS http://api.shopozor/v1/graphql/ net::ERR_ABORTED 404 (Not Found)&#xA;</code></pre>&#xA;<p>and</p>&#xA;<pre><code>Access to fetch at 'http://api.shopozor/v1/graphql/' from origin 'http://localhost:3000' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.&#xA;</code></pre>&#xA;<p>Without the new annotations</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>nginx.ingress.kubernetes.io/configuration-snippet: |&#xA;      proxy_http_version 1.1;&#xA;      proxy_set_header Upgrade &quot;websocket&quot;;&#xA;      proxy_set_header Connection &quot;Upgrade&quot;;&#xA;</code></pre>&#xA;<p>on my hasura ingress, the connection between my frontend and hasura is working fine, except for the websockets.</p>&#xA;<h2>EDIT 3</h2>&#xA;<p>I tried the following two ingresses, with no success:</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>apiVersion: extensions/v1beta1&#xA;kind: Ingress&#xA;metadata:&#xA;  annotations:&#xA;    kubernetes.io/ingress.class: nginx&#xA;    meta.helm.sh/release-name: api&#xA;    meta.helm.sh/release-namespace: dev&#xA;    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'&#xA;    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'&#xA;    nginx.ingress.kubernetes.io/configuration-snippet: |&#xA;      proxy_http_version 1.1;&#xA;      proxy_set_header Upgrade &quot;websocket&quot;;&#xA;      proxy_set_header Connection &quot;Upgrade&quot;;&#xA;  labels:&#xA;    app.kubernetes.io/instance: api&#xA;    app.kubernetes.io/managed-by: Helm&#xA;    app.kubernetes.io/name: api&#xA;    app.kubernetes.io/version: '0.0'&#xA;    helm.sh/chart: api-0.0.0&#xA;  name: api&#xA;spec:&#xA;  rules:&#xA;    - host: api.shopozor&#xA;      http:&#xA;        paths:&#xA;          - backend:&#xA;              serviceName: api&#xA;              servicePort: 8080&#xA;            path: /&#xA;</code></pre>&#xA;<p>and</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>apiVersion: extensions/v1beta1&#xA;kind: Ingress&#xA;metadata:&#xA;  annotations:&#xA;    kubernetes.io/ingress.class: nginx&#xA;    meta.helm.sh/release-name: api&#xA;    meta.helm.sh/release-namespace: dev&#xA;    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'&#xA;    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'&#xA;  labels:&#xA;    app.kubernetes.io/instance: api&#xA;    app.kubernetes.io/managed-by: Helm&#xA;    app.kubernetes.io/name: api&#xA;    app.kubernetes.io/version: '0.0'&#xA;    helm.sh/chart: api-0.0.0&#xA;  name: api&#xA;spec:&#xA;  rules:&#xA;    - host: api.shopozor&#xA;      http:&#xA;        paths:&#xA;          - backend:&#xA;              serviceName: api&#xA;              servicePort: 8080&#xA;            path: /&#xA;</code></pre>&#xA;<p>In the latter case, I just get the error</p>&#xA;<pre><code>WebSocket connection to 'ws://api.shopozor/v1/graphql/' failed: Error during WebSocket handshake: Unexpected response code: 404&#xA;</code></pre>&#xA;<p>while the graphql endpoint is functional. In the former case, I can't access to anything on the hasura instance and I get the websocket handshake issue above (so no graphql and no websocket working).</p>&#xA;<h2>EDIT 4</h2>&#xA;<p>With my api ingress configuration (without any additional nginx annotations like the above: <code>nginx.ingress.kubernetes.io/proxy-read-timeout</code>, <code> nginx.ingress.kubernetes.io/proxy-send-timeout</code>, <code>nginx.ingress.kubernetes.io/configuration-snippet</code>), if I do this:</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>curl -i -N -H &quot;Connection: Upgrade&quot; \&#xA; -H &quot;Upgrade: websocket&quot; \&#xA; -H &quot;Origin: http://localhost:3000&quot; \&#xA; -H &quot;Host: api.shopozor&quot; \ &#xA; -H &quot;Sec-Websocket-Version: 13&quot; \&#xA; -H &quot;Sec-WebSocket-Key: B8KgbaRLCMNCREjE5Kvg1w==&quot; \ &#xA; -H &quot;Sec-WebSocket-Protocol: graphql-ws&quot; \&#xA; -H &quot;Accept-Encoding: gzip, deflate&quot; \&#xA; -H &quot;Accept-Language: en-US,en;q=0.9&quot; \&#xA; -H &quot;Cache-Control: no-cache&quot; \&#xA; -H &quot;Pragma: no-cache&quot; \&#xA; -H &quot;Sec-WebSocket-Extensions: permessage-deflate; client_max_window_bits&quot; \&#xA; -H &quot;User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.49 Safari/537.36&quot; \&#xA; http://api.shopozor/v1/graphql&#xA;</code></pre>&#xA;<p>then hasura is happy:</p>&#xA;<pre><code>2020-07-28T07:42:28.903877263Z {&quot;type&quot;:&quot;websocket-log&quot;,&quot;timestamp&quot;:&quot;2020-07-28T07:42:28.894+0000&quot;,&quot;level&quot;:&quot;info&quot;,&quot;detail&quot;:{&quot;event&quot;:{&quot;type&quot;:&quot;accepted&quot;},&quot;connection_info&quot;:{&quot;websocket_id&quot;:&quot;94243bde-41c4-42c8-8d8f-355c47a3492e&quot;,&quot;token_expiry&quot;:null,&quot;msg&quot;:null},&quot;user_vars&quot;:null}}&#xA;</code></pre>&#xA;<p>The headers in my curl above are the very same headers as those sent by my frontend app. Any clue on what I am doing wrong? The difference between the frontend calls and this curl is that in the frontend I define the websocket endpoint to be <code>ws://api.shopozor/v1/graphql</code> while I curl <code>http://api.shopozor/v1/graphql</code>. I cannot, in apollo vue, set the <code>wsEndpoint</code> to <code>http://api.shopozor/v1/graphql</code>. I get an error.</p>&#xA;",4434140,,4434140,2020-07-28 08:17:08,2020-07-28 08:17:08,How do I get hasura websocket to work on my local Kubernetes cluster?,<kubernetes><websocket><nuxt.js><apollo><hasura>,1,2,0,2020-07-16 12:06:22
62958197,2,,62760975,3,,"<p>Had the same issue solved by the above answers.</p>&#xA;<p>For anyone wondering, express-graphql version 0.10.0 is where the relevant change started so you can check your package.json express-graphql dependency version number.</p>&#xA;<p><a href=""https://www.npmjs.com/package/express-graphql/v/0.9.0"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/express-graphql/v/0.9.0</a><br />&#xA;<a href=""https://www.npmjs.com/package/express-graphql/v/0.10.0"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/express-graphql/v/0.10.0</a></p>&#xA;",4781202,,,,2020-07-17 16:31:53,"",,0,0,0,2020-07-17 16:31:53
63020831,1,63025759,,0,458,"<p>I'm currently running Neo4j version 3.4.9 on a Google Cloud VM instance and I'm having an authentication issue I can't resolve.</p>&#xA;<p>My Neo4j server is running fine in the cloud and I can access it directly using Neo4j browser. I have changed the default neo4j user password. I can also successfully query the Neo4j server from the GraphQL playground.</p>&#xA;<p>I've checked both the <code>neo4j-driver</code> and <code>neo4jgraphql-js</code> modules and they are both the latest versions. I have also checked my .env file and it has the correct username and password that matches the default <code>neo4j</code> user and the new password I changed to from the default.</p>&#xA;<p>I have tried running the Neo4j server without authentication by changing the <code>dbms.security.auth_enabled</code> setting to <code>false</code> in the <code>neo4j.conf</code> file but this hasn't helped.</p>&#xA;<p>I have also checked the Neo4j server logs and this is the error on the server side:</p>&#xA;<pre><code>2020-07-21 17:59:48.830+0000 ERROR [o.n.b.t.TransportSelectionHandler] Fatal error occurred during protocol selection for connection: [id: 0x2434a10e, L:/10.154.0.2:7687 ! R:/86.151.231.207:63494] javax.net.ssl.SSLException: Received fatal alert: certificate_unknown&#xA;io.netty.handler.codec.DecoderException: javax.net.ssl.SSLException: Received fatal alert: certificate_unknown&#xA;    at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:459)&#xA;    at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:392)&#xA;    at io.netty.handler.codec.ByteToMessageDecoder.channelInputClosed(ByteToMessageDecoder.java:359)&#xA;    at io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ByteToMessageDecoder.java:342)&#xA;    at io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1028)&#xA;    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)&#xA;    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231)&#xA;    at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224)&#xA;    at io.netty.channel.ChannelInboundHandlerAdapter.channelInactive(ChannelInboundHandlerAdapter.java:75)&#xA;    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)&#xA;    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231)&#xA;    at io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:224)&#xA;    at io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1429)&#xA;    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:245)&#xA;    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:231)&#xA;    at io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:947)&#xA;    at io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:822)&#xA;    at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163)&#xA;    at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:404)&#xA;    at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:309)&#xA;    at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)&#xA;    at java.lang.Thread.run(Thread.java:748)&#xA;Caused by: javax.net.ssl.SSLException: Received fatal alert: certificate_unknown&#xA;    at sun.security.ssl.Alerts.getSSLException(Alerts.java:214)&#xA;    at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1667)&#xA;    at sun.security.ssl.SSLEngineImpl.fatal(SSLEngineImpl.java:1635)&#xA;    at sun.security.ssl.SSLEngineImpl.recvAlert(SSLEngineImpl.java:1801)&#xA;    at sun.security.ssl.SSLEngineImpl.readRecord(SSLEngineImpl.java:1090)&#xA;    at sun.security.ssl.SSLEngineImpl.readNetRecord(SSLEngineImpl.java:913)&#xA;    at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:783)&#xA;    at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:626)&#xA;    at io.netty.handler.ssl.SslHandler$SslEngineType$3.unwrap(SslHandler.java:294)&#xA;    at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1275)&#xA;    at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1177)&#xA;    at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1221)&#xA;    at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:489)&#xA;    at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)&#xA;</code></pre>&#xA;<p>This suggests a certificate error and so I have updated the <code>config_dbms.connector.bolt.tls_level</code> setting in the <code>neo4j.conf</code> file to <code>OPTIONAL</code> but I still get this error. I have also tried setting <code>config_dbms.connector.bolt.tls_level</code> to <code>DISABLED</code> but it doesn't solve the problem and creates lots of others!</p>&#xA;<p>One solution I have explored is setting up a certificate for the Neo4j server on GCP but according to this Neo4j guide <a href=""https://medium.com/neo4j/getting-certificates-for-neo4j-with-letsencrypt-a8d05c415bbd"" rel=""nofollow noreferrer"">here</a> you can only do that with a server that has a must have a valid DNS address, which mine doesn't. I didn't specify a hostname on creation and with GCP you can't add one retrospectively.</p>&#xA;<p>The only other solution I can think of is to build a fresh VM instance on GCP with a hostname, set up the correct DNS records, get the certificate and point my application at the new Neo4j server.</p>&#xA;",4530173,,,,2020-07-22 02:12:58,Neo4j - The client is unauthorized due to authentication failure,<authentication><google-cloud-platform><neo4j><graphql><bolt>,1,4,0,2020-07-21 18:25:17
63022515,2,,62961771,1,,"<p>After digging online found: <a href=""https://github.com/aws-amplify/amplify-js/issues/4311#issuecomment-562789876"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-js/issues/4311#issuecomment-562789876</a></p>&#xA;<p>Using <code>&quot;@aws-amplify/api&quot;: &quot;^2.2.0&quot;,</code> caused mismatch error. I ended up downgrading to:&#xA;<code>&quot;@aws-amplify/api&quot;: &quot;^2.1.0&quot;,</code> as versions greater then &gt; 2.2.0 caused missing identity pool errors.</p>&#xA;<p>Final set of dependencies in my package.json:</p>&#xA;<pre><code>&quot;@aws-amplify/api&quot;: &quot;^2.1.0&quot;,&#xA;&quot;aws-amplify&quot;: &quot;^2.1.0&quot;,&#xA;&quot;aws-sdk&quot;: &quot;^2.6.x&quot;,&#xA;&quot;aws-appsync&quot;: &quot;^2.0.2&quot;,&#xA;&quot;amazon-cognito-identity-js&quot;: &quot;^3.0.x&quot;,&#xA;</code></pre>&#xA;",990207,,,,2020-07-21 20:24:00,"",,0,0,0,2020-07-21 20:24:00
63025759,2,,63020831,0,,"<p>You are using the latest versions of <code>neo4j-driver</code> and <code>neo4jgraphql-js</code>, and yet you are running an old neo4j server version (3.4.9).</p>&#xA;<p>You may need to <a href=""https://neo4j.com/docs/operations-manual/current/upgrade/"" rel=""nofollow noreferrer"">upgrade</a> the neo4j server to the latest version.</p>&#xA;<p>Or, if you cannot do that, you can try using the latest JS packages that are compatible with neo4j 3.4.9. For example, <code>neo4j-driver</code> <a href=""https://www.npmjs.com/package/neo4j-driver/v/1.7.7"" rel=""nofollow noreferrer"">version 1.7.7</a> claims to be &quot;for Neo4j 3.0.0+&quot;.</p>&#xA;",974731,,,,2020-07-22 02:12:58,"",,0,0,0,2020-07-22 02:12:58
63034980,1,63035234,,3,1880,"<p>On a client app built with <a href=""https://github.com/jaydenseric/graphql-react"" rel=""nofollow noreferrer"">graphql-react</a>,</p>&#xA;<p>graphQL query strings are made of multiple fragments like so:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const fragmentAddress = `&#xA;    fragment address on Address {&#xA;        id&#xA;        number&#xA;        street&#xA;        code&#xA;        city&#xA;    }&#xA;`&#xA;&#xA;const fragmentOffice = `&#xA;    fragment office on Office {&#xA;        id&#xA;        address {&#xA;            ...address&#xA;        }&#xA;    }&#xA;&#xA;    ${fragmentAddress}&#xA;`&#xA;&#xA;const User = `&#xA;    query User($id: ID) {&#xA;        address {&#xA;            ...address&#xA;        }&#xA;        office {&#xA;            ...office&#xA;        }&#xA;    }&#xA;&#xA;    ${fragmentAddress}&#xA;    ${fragmentOffice}&#xA;`&#xA;</code></pre>&#xA;<p>A query on <code>User</code> returns this error: <code>GraphQLError: There can be only one fragment named address</code>.</p>&#xA;<p>I saw that <a href=""https://github.com/apollographql/graphql-tag/pull/214"" rel=""nofollow noreferrer"">graphql-tag</a> has a dedup fonction, but it can't give a string back.</p>&#xA;<p>How is it possible to deduplicate fragments from a graphql query string?</p>&#xA;",2112538,,2112538,2020-07-22 13:24:04,2020-07-22 13:24:04,GraphQLError: There can be only one fragment named,<graphql><graphql-js>,1,0,0,2020-07-22 13:09:07
63040323,2,,60891311,0,,"<p>You can try and log your data via fetch.</p>&#xA;<pre><code>export default {&#xA;&#xA;data(){&#xA;    return {&#xA;        mydata: [],&#xA;        query: ''&#xA;    }&#xA;},&#xA;fetch() {&#xA;    console.log(this);&#xA;    console.log(this.users);&#xA;  },&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://nuxtjs.org/blog/understanding-how-fetch-works-in-nuxt-2-12/"" rel=""nofollow noreferrer"">https://nuxtjs.org/blog/understanding-how-fetch-works-in-nuxt-2-12/</a></p>&#xA;<p>I'm sure there is another way to log data/data changes by using watchLoading/errorHandler in your apollo module setup but I could not get it to function - so I am using fetch.</p>&#xA;<p><a href=""https://github.com/nuxt-community/apollo-module"" rel=""nofollow noreferrer"">https://github.com/nuxt-community/apollo-module</a></p>&#xA;",9204447,,,,2020-07-22 17:49:22,"",,0,0,0,2020-07-22 17:49:22
63046324,1,63046848,,0,920,"<p>I'm using next.js app, graphql server, and nginx.</p>&#xA;<p>I have to grep client ip address.</p>&#xA;<p>So in my nginx conf file, I added</p>&#xA;<pre><code> ...&#xA;&#xA; location / {&#xA;    proxy_pass http://localhost:3000;     # next.js server (3000)&#xA;    proxy_http_version 1.1;&#xA;    proxy_set_header Upgrade $http_upgrade;&#xA;    proxy_set_header Connection 'upgrade';&#xA;    proxy_set_header Host $host;&#xA;    proxy_cache_bypass $http_upgrade;&#xA;}&#xA;&#xA;location /graphql {&#xA;    proxy_set_header X-Real-IP $remote_addr;&#xA;    proxy_pass http://localhost:4000/graphql;        # graphql server (4000)&#xA;}&#xA;</code></pre>&#xA;<p>And In my graphql, I added</p>&#xA;<pre><code>const ip = context.req.header('X-Real-IP')&#xA;console.log(ip)&#xA;</code></pre>&#xA;<p>Now I can get client IP very well !</p>&#xA;<p>But, the problem is when user doing SSR (refresh page)</p>&#xA;<p>The ip address is <code>127.0.0.1 or localhost</code></p>&#xA;<p><strong>How could I get real ip address even if user is in server side rendering?</strong></p>&#xA;",3036789,,,,2020-07-23 04:26:10,How can I get user's IP address using NginX + Next.JS + Apollo GraphQL,<nginx><graphql><next.js><apollo-client>,1,1,0,2020-07-23 03:16:51
63046848,2,,63046324,1,,"<p>Looks like your Next.js makes a server to server call, therefore you get the localhost ip.</p>&#xA;<p>You need to attach the user ip that you get in Next.js to the request it makes to the GQL server.</p>&#xA;",6539317,,6539317,2020-07-23 04:26:10,2020-07-23 04:26:10,"",,0,1,0,2020-07-23 04:18:40
63065300,1,63107533,,3,1241,"<p>I am following this link to deploy an Apollo GraphQL Server with Amplify Functions:&#xA;<a href=""https://dev.to/aws/10-minute-tutorial-deploy-an-apollo-graphql-server-with-amplify-functions-38p1"" rel=""nofollow noreferrer"">https://dev.to/aws/10-minute-tutorial-deploy-an-apollo-graphql-server-with-amplify-functions-38p1</a></p>&#xA;<p>However, when I run &quot;npm start&quot;, it fails to access 'http://localhost:3000', showing:</p>&#xA;<pre><code>Access to fetch at 'https://******.execute-api.us-east-1.amazonaws.com/dev/graphql' &#xA;from origin 'http://localhost:3000' has been blocked by CORS policy: No &#xA;'Access-Control-Allow-Origin' header is present on the requested resource. If an &#xA;opaque response serves your needs, set the request's mode to 'no-cors' to fetch &#xA;the resource with CORS disabled.&#xA;</code></pre>&#xA;<pre><code>Failed to load resource: net::ERR_FAILED   &#xA;******.execute-api.us-east-1.amazonaws.com/dev/graphql:1 &#xA;</code></pre>&#xA;<p>Here is how I set exports handler in index.js for Lambda:</p>&#xA;<pre><code>exports.handler = server.createHandler({&#xA;  cors: {&#xA;    origin: &quot;*&quot;,&#xA;    credentials: true,   // I tried setting false is also the same&#xA;  },&#xA;});&#xA;</code></pre>&#xA;<p>I am not sure whether CORS is the root cause because I think the above config should make it work. I suspect that something going wrong for API end point. I see the failure using browser to access REST API endpoint, which is the link in aws-exports.js:</p>&#xA;<pre><code>awsmobile.aws_cloud_logic_custom[0] = &quot;******.execute-api.us-east-1.amazonaws.com/dev&quot;&#xA;</code></pre>&#xA;<p>It shows:</p>&#xA;<pre><code>{&quot;message&quot;:&quot;Missing Authentication Token&quot;}&#xA;</code></pre>&#xA;<p>And I cannot access &quot;******.execute-api.us-east-1.amazonaws.com/dev/graphql&quot; either, showing:</p>&#xA;<pre><code>{&quot;message&quot;: &quot;Internal server error&quot;}&#xA;</code></pre>&#xA;<p>Is it because of missing AWS signature? Anything else I need to config for authentication?</p>&#xA;",7521245,,441757,2020-08-12 00:55:07,2020-08-12 00:55:07,blocked by CORS and also fail accessing REST API endpoint with Amplify Functions,<aws-lambda><aws-api-gateway><aws-amplify><apollo-server>,1,0,0,2020-07-24 01:02:36
63069455,1,,,1,84,"<p><strong>npm run test:cov</strong> <Br/></p>&#xA;<p>Very new to server side programming need some guidance.<br/>&#xA;In my Test report below, it says the &quot;if&quot; is not covered.</p>&#xA;<p><a href=""https://i.stack.imgur.com/DwxMx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/DwxMx.png"" alt=""enter image description here"" /></a></p>&#xA;<p>No matter how I write the if logic it throws this error.<br/>&#xA;How do I fix this?? <br/>&#xA;Where and what should I look for??</p>&#xA;<p><strong>Update:</strong> <br/></p>&#xA;<p>Below is my test data:</p>&#xA;<pre><code>const input = {&#xA;      applicationId,&#xA;      subApplicationId: 'test',&#xA;      alert: '0 General',&#xA;      badge: 1,&#xA;      sound: 'default',&#xA;      createDate: '2020-03-30T03:43:45.773Z',&#xA;      data: JSON.stringify({&#xA;        data: JSON.stringify({}),&#xA;      }),&#xA;    };&#xA;    await notificationService.create(input);&#xA;&#xA;  });&#xA;&#xA;  &#xA;&#xA;  it('General', async () =&gt; {&#xA;    expect(&#xA;      await notificationController.retrieve(&#xA;        {&#xA;          applicationId,&#xA;          targetId: 'B9EF21EE-EA9B-4C9E-9D77-949A7A944AF9',&#xA;          requestDate: '2020-04-01T00:00:00.000Z',&#xA;        },&#xA;        buildRequest({ isAuthorized: false }),&#xA;      ),&#xA;    ).toHaveLength(3);&#xA;  });&#xA;&#xA;  it('General + Personal', async () =&gt; {&#xA;    expect(&#xA;      await notificationController.retrieve(&#xA;        {&#xA;          applicationId,&#xA;          userId: '2019040913083656642537',&#xA;          targetId: 'B9EF21EE-EA9B-4C9E-9D77-949A7A944AF9',&#xA;          requestDate: '2020-04-01T00:00:00.000Z',&#xA;        },&#xA;        buildRequest({ isAuthorized: true }),&#xA;      ),&#xA;    ).toHaveLength(7);&#xA;  });&#xA;&#xA;  it('General + Personal (with userId)', async () =&gt; {&#xA;    expect(&#xA;      await notificationController.retrieve(&#xA;        {&#xA;          applicationId,&#xA;          userId: '2019040913083656642537',&#xA;          requestDate: '2020-04-01T00:00:00.000Z',&#xA;        },&#xA;        buildRequest({ isAuthorized: true }),&#xA;      ),&#xA;    ).toHaveLength(2);&#xA;  });&#xA;&#xA;</code></pre>&#xA;",13246365,,13246365,2020-07-27 01:19:45,2020-07-27 03:14:59,Test Coverage Colour - Backend of React Native App,<javascript><typescript><graphql><jestjs><nestjs>,0,5,0,2020-07-24 08:08:04
63091802,1,,,0,66,"<p>My current project uses apollo-server on the backend &amp; react on the frontend: <a href=""https://github.com/harryd05/earthquake-hunter"" rel=""nofollow noreferrer"">https://github.com/harryd05/earthquake-hunter</a>. I can't find any tutorials on how to deploy this type of project - does anyone have any advice on how to do this? <em>(If possible, the hosting should be free e.g. heroku or netlify)</em></p>&#xA;",13994795,,,,2020-07-25 18:05:55,Deploying an apollo & react full stack app,<deployment><apollo-server><react-fullstack>,0,2,0,2020-07-25 18:05:55
63102451,2,,63072227,3,,<p>Right now fastify v3 has been released few weeks ago and not all the ecosystem has been upgraded as well.</p>&#xA;<p>So you need to install fastify v2 <code>npm i fastify@2</code> since right now the latest is v3.</p>&#xA;,3309466,,,,2020-07-26 15:55:38,"",,0,0,0,2020-07-26 15:55:38
63107533,2,,63065300,1,,"<p>Spent a few days, and found out the root cause. It is neither CORS nor authentication issue.</p>&#xA;<p>According to <a href=""https://docs.aws.amazon.com/apigateway/latest/developerguide/amazon-api-gateway-using-stage-variables.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/apigateway/latest/developerguide/amazon-api-gateway-using-stage-variables.html</a>, it is expected to see &quot;Missing Authentication Token&quot; because I shall access to child resource instead of the endpoint itself. The child resource here is &quot;******.execute-api.us-east-1.amazonaws.com/dev/graphql&quot;.</p>&#xA;<blockquote>&#xA;<p>The Invoke URL link points to the root resource of the API in its beta&#xA;stage. Navigating to the URL by choosing the link calls the beta stage&#xA;GET method on the root resource. If methods are defined on child&#xA;resources and not on the root resource itself, choosing the Invoke URL&#xA;link returns a {&quot;message&quot;:&quot;Missing Authentication Token&quot;} error&#xA;response. In this case, you must append the name of a specific child&#xA;resource to the Invoke URL link.</p>&#xA;</blockquote>&#xA;<p>For why it failed to access &quot;******.execute-api.us-east-1.amazonaws.com/dev/graphql&quot;, I found that error by checking CloudWatch logs. It is a great tool for debug.</p>&#xA;<pre><code>    &quot;stack&quot;: [&#xA;        &quot;Runtime.ImportModuleError: Error: Cannot find module 'apollo-server-lambda'&quot;,&#xA;</code></pre>&#xA;<p>&quot;amplify push&quot; couldn't recognize this package because I used a terminal with node v6.9.5. After I update it to latest node and &quot;amplify push&quot;, problem is solved.</p>&#xA;<p>CORS error is a distract, it doesn't show up after the above issue is fixed. CORS header wouldn't be added because index.js failed to compile.</p>&#xA;",7521245,,7521245,2020-07-27 01:44:08,2020-07-27 01:44:08,"",,0,1,0,2020-07-27 01:32:52
63108264,1,64398890,,2,1829,"<p>I recently deployed a project I'm working on to production. I use <a href=""https://github.com/datadvance/DjangoChannelsGraphqlWs"" rel=""nofollow noreferrer""><code>DjangoChannelsGraphqlWs</code></a> for GraphQL subscription functionalities. and I have GraphQL Playground set up via <a href=""https://github.com/jaydenwindle/django-graphql-playground"" rel=""nofollow noreferrer""><code>django-graphql-playground</code></a>. Everything works fine locally - there are no issues whatsoever - subscriptions work fine. However, when I deployed I get the error below when I hit the Play button in Playground:</p>&#xA;<pre><code>{&#xA;  &quot;error&quot;: &quot;Could not connect to websocket endpoint wss://api-such.andsuch.xyz/graphql/. Please check if the endpoint url is correct.&quot;&#xA;}&#xA;</code></pre>&#xA;<p>...and in my browser console, it says</p>&#xA;<pre><code>WebSocket connection to 'wss://api-such.andsuch.xyz/graphql/' failed: Error during WebSocket handshake: Unexpected response code: 400&#xA;</code></pre>&#xA;<p>One thing to note is that the application is dockerized. Could it be from there? I don't think so because it works locally. Here's what my <code>docker-compose</code> file looks like:</p>&#xA;<pre><code>version: '3.7'&#xA;&#xA;services:&#xA;  nginx:&#xA;    container_name: nginx&#xA;    image: nginx&#xA;    restart: always&#xA;    depends_on:&#xA;      - web&#xA;    volumes:&#xA;      - ./web/dev.nginx.template:/etc/nginx/conf.d/dev.nginx.template&#xA;      - ./static:/static&#xA;      - ./media:/media&#xA;    ports:&#xA;      - &quot;8080:80&quot;&#xA;    networks:&#xA;      - SOME_NETWORK&#xA;    command: /bin/bash -c &quot;envsubst \&quot;`env | awk -F = '{printf \&quot; $$%s\&quot;, $$1}'`\&quot; &lt; /etc/nginx/conf.d/dev.nginx.template &gt; /etc/nginx/conf.d/default.conf &amp;&amp; exec nginx -g 'daemon off;'&quot;&#xA;&#xA;  web:&#xA;    container_name: web&#xA;    restart: always&#xA;    build: ./web&#xA;    networks:&#xA;      - SOME_NETWORK&#xA;    depends_on:&#xA;      - postgres&#xA;      - redis&#xA;    volumes:&#xA;      - ./web:/usr/src/app/&#xA;    environment:&#xA;      - REDIS_HOST=redis&#xA;      - REDIS_PORT=6379&#xA;      - GRAPHQL_ENDPOINT=https://api-such.andsuch.xyz/graphql/&#xA;    command: bash -c /start.sh&#xA;&#xA;  postgres:&#xA;    container_name: postgres&#xA;    restart: always&#xA;    image: postgres:latest&#xA;    networks:&#xA;      - SOME_NETWORK&#xA;    volumes:&#xA;      - pgdata:/var/lib/postgresql/data/&#xA;&#xA;  redis:&#xA;   container_name: redis&#xA;   restart: always&#xA;   image: redis:latest&#xA;   networks:&#xA;    - SOME_NETWORK&#xA;   ports:&#xA;     - &quot;6379:6379&quot;&#xA;   volumes:&#xA;     - redisdata:/data&#xA;&#xA;volumes:&#xA;  pgdata:&#xA;  redisdata:&#xA;&#xA;networks:&#xA;  SOME_NETWORK:&#xA;    name: SOME_NETWORK&#xA;    driver: bridge&#xA;</code></pre>&#xA;<p><code>settings.py</code></p>&#xA;<pre><code>...&#xA;...&#xA;CHANNEL_LAYERS = {&#xA;    'default': {&#xA;        'BACKEND': 'channels_redis.core.RedisChannelLayer',&#xA;        'CONFIG': {&#xA;            'hosts': [(os.getenv('REDIS_HOST', 'redis'), os.getenv('REDIS_PORT', 6379))],&#xA;        }&#xA;    }&#xA;}&#xA;...&#xA;...&#xA;</code></pre>&#xA;<p><code>routing.py</code></p>&#xA;<pre><code>application = ProtocolTypeRouter({&#xA;    'websocket': AuthMiddlewareStack(&#xA;        URLRouter([&#xA;            path('graphql/', GraphQLWSConsumer)&#xA;        ]),&#xA;    )&#xA;})&#xA;&#xA;</code></pre>&#xA;<p><code>consumers.py</code></p>&#xA;<pre><code>class GraphQLWSConsumer(channels_graphql_ws.GraphqlWsConsumer):&#xA;    schema = schema&#xA;&#xA;    async def on_connect(self, payload):&#xA;        self.scope['user'] = await get_user(self.scope)&#xA;</code></pre>&#xA;<p><code>urls.py</code></p>&#xA;<pre><code>...&#xA;...&#xA;from graphql_playground.views import GraphQLPlaygroundView&#xA;&#xA;urlpatterns = [&#xA;    path('admin/', admin.site.urls),&#xA;    path('playground/', GraphQLPlaygroundView.as_view(&#xA;        endpoint=os.getenv('GRAPHQL_ENDPOINT'))),&#xA;]&#xA;...&#xA;</code></pre>&#xA;<p><code>nginx</code></p>&#xA;<pre><code>server {&#xA;    client_max_body_size 10M; &#xA;    &#xA;    listen 443 ssl;&#xA;    listen [::]:443 ssl;&#xA;    &#xA;    server_name api-such.andsuch.xyz;&#xA;    &#xA;    ssl_certificate /etc/ssl/certs/andsuch.xyz.pem;&#xA;    ssl_certificate_key /etc/ssl/certs/andsuch.xyz.key;&#xA;    &#xA;    location = /favicon.ico { access_log off; log_not_found off; }&#xA;    &#xA;    location / {&#xA;        proxy_set_header Host $http_host;&#xA;        proxy_http_version 1.1;&#xA;        proxy_set_header Upgrade $http_upgrade;&#xA;        proxy_set_header Connection ‘upgrade’;&#xA;        proxy_set_header X-Real-IP $remote_addr;&#xA;        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;        proxy_set_header X-Forwarded-Proto $scheme;&#xA;        proxy_pass http://0.0.0.0:8080;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>What could be wrong? I'm outta ideas. Thanks!</p>&#xA;<p><strong>Update</strong>&#xA;I checked the Network tab in chrome's developer console and discovered that websocket connections close immediately. Why is this happening?</p>&#xA;",7426855,,7426855,2020-09-04 03:03:40,2022-09-15 20:41:27,WebSocket connection to 'wss://api-such.andsuch.xyz/graphql/' failed: Error during WebSocket handshake: Unexpected response code: 400,<django><docker-compose><graphql-subscriptions><graphene-django><graphql-playground>,2,2,0,2020-07-27 03:26:16
63110863,2,,63069431,1,,"<p>Found and solved. I am posting the answer so it may help someone facing the same problem.</p>&#xA;<p>The problem was about not using the IntrospectionFragmentMatcher.&#xA;In fact, I have seen this warning but I was planning to solve it later on and did not directly make the link to my problem.</p>&#xA;<p>the solution is as follows:</p>&#xA;<pre><code>import { InMemoryCache, NormalizedCacheObject,IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';&#xA;import {ApolloClient} from &quot;apollo-boost&quot;;&#xA;&#xA;const possibleTypes = {&#xA;  __schema: {&#xA;    types: [{&#xA;        kind: 'UNION',&#xA;        name: 'Action',&#xA;        possibleTypes: [&#xA;          { name: 'Service' },&#xA;          { name: 'Reminder' },&#xA;        ]&#xA;      },&#xA;    ]&#xA;  },&#xA;}&#xA;&#xA;const fragmentMatcher = new IntrospectionFragmentMatcher({&#xA;    introspectionQueryResultData: possibleTypes&#xA;})&#xA;const cache = new InMemoryCache({&#xA;                    fragmentMatcher&#xA;                })&#xA;const uri= 'http://localhost:4000/';&#xA;const link = createHttpLink({ uri, fetch });&#xA;const client= new ApolloClient({&#xA;  cache,&#xA;  link&#xA;});&#xA;</code></pre>&#xA;",2715312,,,,2020-07-27 07:46:33,"",,0,0,0,2020-07-27 07:46:33
63112045,2,,62705199,0,,<p>I recommended you to check your apollo api in SPA mode after you make sure that is true change to UNIVERSAL!</p>&#xA;<p>Because in universal mode you see the result of api in html or js file</p>&#xA;,4528665,,,,2020-07-27 09:05:53,"",,0,0,0,2020-07-27 09:05:53
63120730,2,,48337367,3,,"<p>I have the same issue. The mutation runs for a long time in my case. The mutation resolver was getting called twice because a 2nd POST request was being made to the server. But the client was making only a single request which was evident from the Network tab in browser developer tools.</p>&#xA;<p>As I found out, the issue was not caused by apollo server or the client.</p>&#xA;<p>After a lot of research, I found that <strong>Node.js server by default times out a request after 120 seconds</strong> and closes the connection to the client. This in turn causes the <strong><a href=""https://stackoverflow.com/a/19697278/6385825"">browser to retry the request</a></strong> but the browser doesn't log that retried request in the network tab in developer tools which is a cause of lot of confusion.</p>&#xA;<p>So, <strong><a href=""https://stackoverflow.com/a/58372968/6385825"">changing the request timeout duration</a></strong> in the ExpressJS server resolved the issue for me.</p>&#xA;<p>Originally posted <a href=""https://github.com/apollographql/apollo-server/issues/2589#issuecomment-664530763"" rel=""nofollow noreferrer"">here </a></p>&#xA;",6385825,,,,2020-07-27 17:44:43,"",,0,0,0,2020-07-27 17:44:43
63135812,1,,,1,359,"<p>In my graphQL schema in gatsby, I am getting a deprecation notice about inferred resolvers.  When I declare a list, this is my syntax:</p>&#xA;<pre><code>List: [List]&#xA;</code></pre>&#xA;<p>And then outside of that node, I define it as such.</p>&#xA;<pre><code> List: `&#xA;     subfield1: String&#xA;     subfield2: String&#xA;      `,&#xA;</code></pre>&#xA;<p>I have attempted adding the @link(from: &quot;...&quot;) extension to remove this deprecation notice, but nothing seems to work, either the node isn't fetched correctly or I still get the deprecation notice.&#xA;Here is the actual deprecation notice:</p>&#xA;<pre><code>warn Deprecation warning - adding inferred resolver for field ...&#xA;</code></pre>&#xA;",13528774,,,,2020-10-03 22:17:09,Gatsby Schema Depracation Warning: Inferred Resolvers,<javascript><node.js><graphql><schema><gatsby>,1,0,0,2020-07-28 13:55:56
63163657,1,,,1,127,"<p>My client isn't able to send requests to backend because it can't resolve the host. I'm trying to pass down the container connection info via an environment variable and use it in the client to connect. However, it is unable to do the requests at all. Any help? Nginx works fine for the frontend part but doesn't work for proxying the backend.</p>&#xA;<p>docker-compose.yml</p>&#xA;<pre><code>version: '3.2'&#xA; services:&#xA;server:&#xA;restart: always&#xA;build:&#xA;  dockerfile: Dockerfile&#xA;  context: ./nginx&#xA;depends_on: &#xA;    - backend&#xA;    - frontend&#xA;    - database&#xA;ports:&#xA;  - '5000:80'&#xA;  &#xA;database:&#xA;image: postgres:latest&#xA;container_name: database&#xA;ports:&#xA;    - &quot;5432:5432&quot;&#xA;restart: always&#xA;hostname: database&#xA;expose: &#xA;    - 5432&#xA;&#xA;backend: &#xA;build:&#xA;    context: ./backend&#xA;    dockerfile: ./Dockerfile&#xA;image: kalendae_backend:latest&#xA;hostname: backend&#xA;container_name: backend&#xA;ports:&#xA;  - &quot;5051:5051&quot;&#xA;environment:&#xA;  - WAIT_HOSTS=database:5432&#xA;  - DATABASE_HOST=database&#xA;  - DATABASE_PORT=5432&#xA;  - PORT=5051&#xA;links: &#xA;    - database&#xA;expose: &#xA;    - 5051&#xA;&#xA;frontend:&#xA;build:&#xA;    context: ./frontend&#xA;    dockerfile: ./Dockerfile&#xA;image: kalendae_frontend:latest&#xA;ports:&#xA;    - &quot;5050:5050&quot;&#xA;hostname: frontend&#xA;container_name: frontend&#xA;environment:&#xA;    - WAIT_HOSTS=backend:5051&#xA;    - REACT_APP_BACKEND_HOST=backend&#xA;    - REACT_APP_BACKEND_PORT=5051&#xA;links: &#xA;    - backend&#xA;expose:&#xA;    - 5050&#xA;</code></pre>&#xA;<p>Nginx config</p>&#xA;<pre><code>upstream frontend {&#xA;  server frontend:5050;&#xA;}&#xA;&#xA;upstream backend {&#xA;  server backend:5051;&#xA;}&#xA;&#xA;upstream server {&#xA;  server server:5000;&#xA;}&#xA;&#xA;server {&#xA;   listen 80;&#xA;&#xA;    location / {&#xA;       proxy_pass http://frontend;&#xA;    }&#xA;&#xA;    location backend {&#xA;       proxy_pass http://backend;&#xA;    }&#xA;&#xA;    location /backend {&#xA;        proxy_pass http://backend;&#xA;    }&#xA; }&#xA;</code></pre>&#xA;",10835573,,,,2020-07-29 22:56:23,Docker containers cant communicate (Docker compose / React / NodeJs / Nginx),<node.js><reactjs><nginx><docker-compose><graphql>,0,0,0,2020-07-29 22:56:23
63247899,1,65539368,,0,848,"<p>I am developing a Blazor application initially as a Blazor Server app but the longer term goal is to deploy the same application in a web assembly + server configuration.</p>&#xA;<p>My preference would be to adopt GraphQL from the 1st day of coding while the Blazor Server prototype is created but this creates a situation where GraphQL client code and HotChocolate server code run in the same process. Is this possible?</p>&#xA;<p>The following code in the HotChocolate docs shows it is possible to submit GraphQL queries to Hotchocolate by expressing a query in schema.Execute(q) however I would prefer to code the full GraphQL stack and just skip the network activity when the full stack is running in a single Blazor server process.</p>&#xA;<p><a href=""https://github.com/ChilliCream/hotchocolate-docs/blob/master/docs/introduction.md"" rel=""nofollow noreferrer"">https://github.com/ChilliCream/hotchocolate-docs/blob/master/docs/introduction.md</a></p>&#xA;<pre><code>public class Query&#xA;{&#xA; public string Hello() =&gt; &quot;World!&quot;;&#xA;}&#xA;&#xA;var schema = SchemaBuilder.New().AddQueryType&lt;Query&gt;().Create();&#xA;var executor = schema.MakeExecutable();&#xA;&#xA;Console.WriteLine(executor.Execute(&quot;{ hello }&quot;).ToJson());&#xA;</code></pre>&#xA;",987631,,987631,2020-08-05 08:50:56,2021-01-02 13:00:09,Host HotChocolate server and Strawberry Shake client in a single process,<graphql><hotchocolate>,1,0,0,2020-08-04 13:25:20
63277827,1,,,5,615,"<p>I am trying with Amplify and trying to create my first react application, to just fetch simple Ride model.</p>&#xA;<p>I am always getting 401 unauthorised error on localhost and after hosting to S3.</p>&#xA;<pre><code>errorType: &quot;UnauthorizedException&quot;&#xA;message: &quot;You are not authorized to make this call.&quot;&#xA;</code></pre>&#xA;",13815605,,,,2022-09-08 11:58:45,GraphQL with Amplify gives 401 Unauthorised for React App (Before and After Adding Auth with Cognito),<graphql><aws-amplify>,1,1,0,2020-08-06 06:12:17
63313016,2,,58901404,0,,"<p>I think you just missed one thing i.e. to return the <code>apolloClient</code> while returning the <code>PageProps</code> and <code>ApolloCache</code> when SSR is <code>true</code>.</p>&#xA;<pre><code>// Extract query data from the Apollo store&#xA;const apolloState = apolloClient.cache.extract();&#xA;&#xA;return {&#xA;    ...pageProps,&#xA;    apolloState,&#xA;    // To get access to client while in SSR&#xA;    apolloClient&#xA;};&#xA;</code></pre>&#xA;",7553063,,,,2020-08-08 07:50:38,"",,0,0,0,2020-08-08 07:50:38
63335019,1,63338175,,0,635,"<p>I am trying to deploy a node + apollo server to google app engine so that I can call https://appspot/graphql.  But I don't know how to achieve this.<br />&#xA;https://localhost:8080/graphql runs successfully locally.  I can use as endpoint to query.&#xA;But https://appspot/graphql gives &quot;GET query missing&quot;.&#xA;<a href=""https://i.stack.imgur.com/s4j0o.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/s4j0o.png"" alt=""file"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/RmsK7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RmsK7.png"" alt=""enter image description here"" /></a>&#xA;<a href=""https://i.stack.imgur.com/gvfZw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gvfZw.png"" alt=""file"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/6OZlP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/6OZlP.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Problem solved by add playground:true, introspection: true to ApolloServer.  Also whitelist all network.</p>&#xA;",10417193,,10417193,2020-08-10 23:21:55,2020-08-10 23:21:55,How to properly configure apollo graphql + node.js to google app engine,<node.js><google-app-engine><graphql><google-cloud-sql><apollo-server>,1,0,0,2020-08-10 06:14:08
63362220,2,,63325931,1,,"<p>Are you using <strong>apollo-angular</strong> version 2.0.x?&#xA;Try change to version <strong>1.9.1</strong>, it's a bug in the new version of <a href=""https://www.npmjs.com/package/apollo-angular"" rel=""nofollow noreferrer""><strong>apollo-angular</strong></a> (released 6 days ago) or documentation is outdated in <a href=""https://www.apollographql.com/docs/angular/basics/setup/"" rel=""nofollow noreferrer"">apollo angular setup</a>, change to 1.9.1 can solve your problem.</p>&#xA;",9576498,,,,2020-08-11 16:14:14,"",,0,0,0,2020-08-11 16:14:14
63364205,2,,61805970,2,,"<p>I also had problems with <code>@FieldResolver()</code> I just made a change in tsconfig.json, I changed <code>&quot;target&quot;: &quot;es5&quot;</code> to <code>&quot;target&quot;: &quot;es6&quot;</code></p>&#xA;<p>The <a href=""https://typegraphql.com/docs/installation.html#typescript-configuration"" rel=""nofollow noreferrer"">type-graphql documentation</a> says that you must configure the tsconfig.json for it to work</p>&#xA;<p>I hope I have helped</p>&#xA;",14088747,,,,2020-08-11 18:22:42,"",,0,0,0,2020-08-11 18:22:42
63418040,1,,,1,430,"<p>I am trying to make a react project which can fetch data from a github repo and list all the project dependencies, their current version in the project, latest version available, outdated or not and whether vulnerable. I am trying to use the github graphQL to fetch data but keeps on throwing this error.</p>&#xA;<blockquote>&#xA;<p>Field 'dependencyGraphManifests' doesn't exist on type 'Repository'</p>&#xA;</blockquote>&#xA;<p>. Can anyone help me with this? How can I get these data from github? Is it even possible?</p>&#xA;<p>Thanks in advance</p>&#xA;",10234225,,,,2021-05-19 18:13:39,Field 'dependencyGraphManifests' doesn't exist on type 'Repository',<github><graphql><github-api>,1,0,0,2020-08-14 18:13:19
63427675,1,,,0,447,"<p>Description</p>&#xA;<p>I am trying to use <code>{data.allFile.edges.map(({ node })</code> to render multiple (local) images to a page, but I can't run <code>gatsby develop</code> successfully.</p>&#xA;<h3>Steps to reproduce</h3>&#xA;<p>My code is as follows:</p>&#xA;<pre><code>import React from &quot;react&quot;&#xA;import WideGalleryLayout from &quot;../components/wide-gallery-layout&quot;&#xA;import Img from &quot;gatsby-image&quot;&#xA;import { useStaticQuery, graphql } from &quot;gatsby&quot;&#xA;import { css } from &quot;@emotion/core&quot;&#xA;&#xA;export default () =&gt; {&#xA;  const data = useStaticQuery(graphql`&#xA;    query imageQuery {&#xA;      allFile(&#xA;        filter: {&#xA;          extension: { regex: &quot;/(jpg)/&quot; }&#xA;          relativeDirectory: { eq: &quot;images/japan&quot; }&#xA;        }&#xA;      ) {&#xA;        edges {&#xA;          node {&#xA;            base&#xA;            childImageSharp {&#xA;              fluid {&#xA;                aspectRatio&#xA;                base64&#xA;                src&#xA;                srcSet&#xA;                sizes&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  `)&#xA;&#xA;  return (&#xA;    &lt;WideGalleryLayout&gt;&#xA;      {data.allFile.edges.map(({ node })&#xA;      =&gt; (&#xA;        &lt;Img fluid=&#xA;        {node.childImageSharp.fluid}&#xA;        /&gt;&#xA;      ))}&#xA;    &lt;/WideGalleryLayout&gt;&#xA;  )&#xA;}&#xA;</code></pre>&#xA;<p>When I run <code>gatsby develop</code> I get the below error message:</p>&#xA;<pre><code>success open and validate gatsby-configs - 0.036s&#xA;success load plugins - 1.219s&#xA;success onPreInit - 0.003s&#xA;success initialize cache - 0.005s&#xA;success copy gatsby files - 0.055s&#xA;success onPreBootstrap - 0.015s&#xA;success createSchemaCustomization - 0.008s&#xA;success source and transform nodes - 0.369s&#xA;success building schema - 0.241s&#xA;success createPages - 0.037s&#xA;success createPagesStatefully - 0.075s&#xA;success updating schema - 0.022s&#xA;success onPreExtractQueries - 0.002s&#xA;&#xA; ERROR #85911  GRAPHQL&#xA;&#xA;There was a problem parsing &quot;/Users/oliverholms/Dropbox/omh-blog/src/components/japan-component.js&quot;; any GraphQL&#xA;fragments or queries in this file were not processed.&#xA;&#xA;This may indicate a syntax error in the code, or it may be a file type&#xA;that Gatsby does not know how to parse.&#xA;&#xA;File: src/components/japan-component.js&#xA;&#xA;&#xA; ERROR #85911  GRAPHQL&#xA;&#xA;There was a problem parsing &quot;/Users/oliverholms/Dropbox/omh-blog/src/pages/folio-1.js&quot;; any GraphQL&#xA;fragments or queries in this file were not processed.&#xA;&#xA;This may indicate a syntax error in the code, or it may be a file type&#xA;that Gatsby does not know how to parse.&#xA;&#xA;File: src/pages/folio-1.js&#xA;&#xA;failed extract queries from components - 0.314s&#xA;success write out redirect data - 0.010s&#xA;success onPostBootstrap - 0.002s&#xA;info bootstrap finished - 5.465s&#xA;success run page queries - 0.021s - 4/4 189.04/s&#xA;success write out requires - 0.004s&#xA;warn ESLintError:&#xA;/Users/oliverholms/Dropbox/omh-blog/src/components/layout.js&#xA;  3:26  warning  'Link' is defined but never used           no-unused-vars&#xA;  8:9   warning  'data' is assigned a value but never used  no-unused-vars&#xA;&#xA;✖ 2 problems (0 errors, 2 warnings)&#xA;&#xA;warn ESLintError:&#xA;/Users/oliverholms/Dropbox/omh-blog/src/pages/folio-2.js&#xA;  3:10  warning  'Image' is defined but never used  no-unused-vars&#xA;&#xA;✖ 1 problem (0 errors, 1 warning)&#xA;&#xA;warn ESLintError:&#xA;/Users/oliverholms/Dropbox/omh-blog/src/pages/folio-3.js&#xA;  3:10  warning  'Image' is defined but never used  no-unused-vars&#xA;&#xA;✖ 1 problem (0 errors, 1 warning)&#xA;&#xA;&#xA; ERROR #98123  WEBPACK&#xA;&#xA;Generating development JavaScript bundle failed&#xA;&#xA;&#xA;/Users/oliverholms/Dropbox/omh-blog/src/pages/folio-1.js&#xA;  39:7  error  Parsing error: Unexpected token, expected &quot;,&quot;&#xA;&#xA;  37 |     &lt;WideGalleryLayout&gt;&#xA;  38 |       {data.allFile.edges.map(({ node })&#xA;&gt; 39 |       =&gt; (&#xA;     |       ^&#xA;  40 |         &lt;Img fluid=&#xA;  41 |         {node.childImageSharp.fluid}&#xA;  42 |         /&gt;&#xA;&#xA;✖ 1 problem (1 error, 0 warnings)&#xA;&#xA;&#xA;File: src/pages/folio-1.js&#xA;&#xA;&#xA; ERROR #98123  WEBPACK&#xA;&#xA;Generating development JavaScript bundle failed&#xA;&#xA;/Users/oliverholms/Dropbox/omh-blog/src/pages/folio-1.js: Unexpected token, expected &quot;,&quot; (39:6)&#xA;&#xA;  37 |     &lt;WideGalleryLayout&gt;&#xA;  38 |       {data.allFile.edges.map(({ node })&#xA;&gt; 39 |       =&gt; (&#xA;     |       ^&#xA;  40 |         &lt;Img fluid=&#xA;  41 |         {node.childImageSharp.fluid}&#xA;  42 |         /&gt;&#xA;&#xA;File: src/pages/folio-1.js:39:6&#xA;&#xA;failed Building development bundle - 3.355s&#xA;warn ESLintError:&#xA;/Users/oliverholms/Dropbox/omh-blog/src/components/layout.js&#xA;  3:26  warning  'Link' is defined but never used           no-unused-vars&#xA;  8:9   warning  'data' is assigned a value but never used  no-unused-vars&#xA;&#xA;✖ 2 problems (0 errors, 2 warnings)&#xA;&#xA;warn ESLintError:&#xA;/Users/oliverholms/Dropbox/omh-blog/src/pages/folio-2.js&#xA;  3:10  warning  'Image' is defined but never used  no-unused-vars&#xA;&#xA;✖ 1 problem (0 errors, 1 warning)&#xA;&#xA;warn ESLintError:&#xA;/Users/oliverholms/Dropbox/omh-blog/src/pages/folio-3.js&#xA;  3:10  warning  'Image' is defined but never used  no-unused-vars&#xA;&#xA;✖ 1 problem (0 errors, 1 warning)&#xA;&#xA;&#xA; ERROR #98123  WEBPACK&#xA;&#xA;Generating development JavaScript bundle failed&#xA;&#xA;&#xA;/Users/oliverholms/Dropbox/omh-blog/src/pages/folio-1.js&#xA;  39:7  error  Parsing error: Unexpected token, expected &quot;,&quot;&#xA;&#xA;  37 |     &lt;WideGalleryLayout&gt;&#xA;  38 |       {data.allFile.edges.map(({ node })&#xA;&gt; 39 |       =&gt; (&#xA;     |       ^&#xA;  40 |         &lt;Img fluid=&#xA;  41 |         {node.childImageSharp.fluid}&#xA;  42 |         /&gt;&#xA;&#xA;✖ 1 problem (1 error, 0 warnings)&#xA;&#xA;&#xA;File: src/pages/folio-1.js&#xA;&#xA;&#xA; ERROR #98123  WEBPACK&#xA;&#xA;Generating development JavaScript bundle failed&#xA;&#xA;/Users/oliverholms/Dropbox/omh-blog/src/pages/folio-1.js: Unexpected token, expected &quot;,&quot; (39:6)&#xA;&#xA;  37 |     &lt;WideGalleryLayout&gt;&#xA;  38 |       {data.allFile.edges.map(({ node })&#xA;&gt; 39 |       =&gt; (&#xA;     |       ^&#xA;  40 |         &lt;Img fluid=&#xA;  41 |         {node.childImageSharp.fluid}&#xA;  42 |         /&gt;&#xA;&#xA;File: src/pages/folio-1.js:39:6&#xA;&#xA;failed Re-building development bundle - 0.083s&#xA; ERROR #98123  WEBPACK&#xA;</code></pre>&#xA;<p>I was following the steps in this eggheads video <a href=""https://egghead.io/lessons/gatsby-add-multiple-images-from-a-directory-with-gatsby-image?pl=using-gatsby-image-with-gatsby-ea85129e"" rel=""nofollow noreferrer"">Add multiple images from a directory with gatsby-image</a>. I am 99% sure that I copied his code correctly — with the correct directory for my files, but the CLI can't <code>develop</code> successfully.</p>&#xA;<h3>Expected result</h3>&#xA;<p>I should be able to render multiple images from a directory with <code>gatsby-image</code>. I have checked at http://localhost:8000/___graphql and my graphQL query returns my images with the other data I requested.</p>&#xA;<h3>Actual result</h3>&#xA;<p>I can't <code>gatsby develop</code> successfully or render my images. The terminal error message points to the arrow function as the problem element ('expected comma' etc.)</p>&#xA;<p>I am new to this so please factor that into the technical language in your answers.</p>&#xA;<h3>Environment</h3>&#xA;<pre><code>  System:&#xA;    OS: macOS 10.15.5&#xA;    CPU: (12) x64 Intel(R) Core(TM) i9-8950HK CPU @ 2.90GHz&#xA;    Shell: 5.7.1 - /bin/zsh&#xA;  Binaries:&#xA;    Node: 12.18.1 - /usr/local/bin/node&#xA;    npm: 6.14.5 - /usr/local/bin/npm&#xA;  Languages:&#xA;    Python: 2.7.16 - /usr/bin/python&#xA;  Browsers:&#xA;    Chrome: 84.0.4147.125&#xA;    Safari: 13.1.1&#xA;  npmPackages:&#xA;    gatsby: ^2.23.12 =&gt; 2.23.12&#xA;    gatsby-image: ^2.4.16 =&gt; 2.4.16&#xA;    gatsby-plugin-emotion: ^4.3.10 =&gt; 4.3.10&#xA;    gatsby-plugin-sharp: ^2.6.27 =&gt; 2.6.27&#xA;    gatsby-plugin-typography: ^2.5.10 =&gt; 2.5.10&#xA;    gatsby-source-filesystem: ^2.3.23 =&gt; 2.3.23&#xA;    gatsby-transformer-json: ^2.4.11 =&gt; 2.4.11&#xA;    gatsby-transformer-remark: ^2.8.27 =&gt; 2.8.27&#xA;    gatsby-transformer-sharp: ^2.5.13 =&gt; 2.5.13&#xA;  npmGlobalPackages:&#xA;    gatsby-cli: 2.12.87&#xA;</code></pre>&#xA;",14110657,,,,2021-10-23 23:53:14,Can't get {data.allFile.edges.map(({ node }) to render multiple images with Gatsby + GraphQL,<javascript><reactjs><graphql><gatsby><gatsby-image>,2,1,0,2020-08-15 15:23:46
63430606,1,63432227,,1,830,"<p>I am trying to get the user's ip address in a lambda function called from AWS AppSync.</p>&#xA;<p>I tried with this input resolver:</p>&#xA;<pre><code>{ &#xA;    &quot;version&quot; : &quot;2017-02-28&quot;, &#xA;    &quot;operation&quot;: &quot;Invoke&quot;, &#xA;    &quot;payload&quot;: { &#xA;         &quot;arguments&quot;: $util.toJson($context.arguments),&#xA;         &quot;sourceIp&quot; : $context.identity.sourceIp &#xA;    } &#xA;}&#xA;</code></pre>&#xA;<p>But I found while testing that <code>$context.identity</code> is null when I call the function through the AppSync queries dashboard.</p>&#xA;<p>Are there other ways to get the user's ip address or am I doing something wrong?</p>&#xA;<p>Thank you.</p>&#xA;<p><strong>Update</strong>:&#xA;With the help of aldarisbm, I came up with this input resolver:</p>&#xA;<pre><code>#set ($forwardHeader = &quot;${context.request.headers.X-Forwarded-For}&quot;)&#xA;#set ($comma = $forwardHeader.indexOf(','))&#xA;#set ($ip = $forwardHeader.substring(0, $comma))&#xA;#set ($payload = $context.arguments)&#xA;#set ($discard = $payload.put(&quot;sourceIp&quot;, &quot;${ip}&quot;))&#xA;&#xA;{ &quot;version&quot; : &quot;2017-02-28&quot;, &quot;operation&quot;: &quot;Invoke&quot;, &quot;payload&quot;: $util.toJson($payload) } &#xA;</code></pre>&#xA;",3971619,,3971619,2020-08-16 15:51:50,2020-08-16 15:51:50,AWS AppSync Lambda resolver $context.identity is null,<amazon-web-services><aws-lambda><graphql><aws-appsync>,1,0,0,2020-08-15 20:38:10
63453558,2,,60318661,3,,"<p>For Those who are facing the same issue I came up with a simple solution.</p>&#xA;<ol>&#xA;<li>Remove from all your file places that you used this extension <code>_tracedSVG</code>.</li>&#xA;</ol>&#xA;<p>eg.</p>&#xA;<pre><code>GatsbyContentfulFixed_tracedSVG &#xA;</code></pre>&#xA;<p>to</p>&#xA;<pre><code>GatsbyContentfulFixed&#xA;</code></pre>&#xA;<ol start=""2"">&#xA;<li><p>Stop your gatsby server and use the follow command:</p>&#xA;<p><strong>gatsby clean &amp;&amp; gatsby develop</strong></p>&#xA;</li>&#xA;<li><p>Commit and push your changes (in case you are using Github)</p>&#xA;</li>&#xA;<li><p>On Netlify find the option: <strong>Clear cache and deploy site</strong></p>&#xA;</li>&#xA;</ol>&#xA;<p>It should fix your Deployment on Netlify as well errors on your console :)</p>&#xA;",13008739,,,,2020-08-17 15:04:41,"",,0,0,0,2020-08-17 15:04:41
63490356,2,,63489785,0,,"<p>check with <code>docker ps</code> if any container uses that port, if so stop it if you don't need it, or change the port of your current container.</p>&#xA;<p>it may be also that a non-containerized app uses that port: check this with: <code>sudo lsof -i -P -n | grep LISTEN | grep 4466</code></p>&#xA;",5651972,,5651972,2020-08-19 15:35:05,2020-08-19 15:35:05,"",,0,1,0,2020-08-19 15:29:09
63502609,2,,63500310,0,,"<p>As you are trying to fetch two entities course and trainer. You would need two&#xA;resolvers, one for course and another for trainer.</p>&#xA;<p>In order to resolver courses, we need to have separate resolver under Query.</p>&#xA;<pre><code>    Query : {&#xA;              course(root, args, context, info) {&#xA;                  console.log(args)&#xA;              }&#xA;      }&#xA;</code></pre>&#xA;<p>To resolve trainer inside Course, the resolver for trainer would come under Course type resolver.</p>&#xA;<pre><code>    resolver = {&#xA;    Course : {    &#xA;     trainer: (parent, {Id}, { dataSources }, info) =&gt; {&#xA;              dataSources.someSource.someMethod(Id);&#xA;     }&#xA;    }&#xA;   }&#xA;</code></pre>&#xA;<p>Here Course is the type of course in Query and trainer is the field from Query.</p>&#xA;",8276835,,,,2020-08-20 09:56:07,"",,0,1,0,2020-08-20 09:56:07
63519514,1,63519515,,0,778,"<p>The <code>docker-compose.yaml</code> to spin up Hasura + Postgres locally, have commands to start a single instance of both. How can multiple instances (say, for multiple projects) be setup locally?</p>&#xA;",11915985,,,,2020-08-21 08:45:47,How are multiple instances of Hasura GraphQL Engine and Postgres run locally via Docker?,<graphql><hasura>,1,0,0,2020-08-21 08:45:47
63524758,2,,63523541,0,,<p>If you are using apollo graphql server then we can just configure tracing and check the time taken by request in graphql playground.&#xA;Just need to updated the config with  tracing: true</p>&#xA;,8276835,,,,2020-08-21 14:27:39,"",,0,0,0,2020-08-21 14:27:39
63531432,2,,62164210,1,,<p>Check the version of gatsby-source-strapi. I was running into the same issue and I had version 0.0.10 which was not working with singleTypes. I upgrade to 0.0.12 and I was able to view single types in Graphql</p>&#xA;,5275651,,,,2020-08-22 00:13:11,"",,0,0,0,2020-08-22 00:13:11
63550717,2,,63525235,21,,"<p>Just add <code>__typename</code> to your mock object, when you use a fragment.&#xA;It isn't required with simple query that is free of fragments/unions, but required if you have it.</p>&#xA;<p><a href=""https://medium.com/@jialhe85/testing-tips-for-apolloclient-with-react-b58373eebb96#0e60"" rel=""noreferrer"">read more here</a></p>&#xA;",4729060,,,,2020-08-23 18:36:49,"",,0,1,0,2020-08-23 18:36:49
63557472,2,,63530981,3,,"<p>You can combine multiple GraphQL APIs into a unified endpoint using a technique called GraphQL schema stitching. Apollo has an <a href=""https://www.apollographql.com/docs/apollo-server/features/schema-stitching/"" rel=""nofollow noreferrer"">extensive guide on the topic</a>.</p>&#xA;<p>I've also written a two part guide how to stitch the Contentful API together with other APIs: <a href=""https://www.contentful.com/blog/2019/01/23/combining-apis-graphql-schema-stitching-part-1/"" rel=""nofollow noreferrer"">Part 1</a>, <a href=""https://www.contentful.com/blog/2019/01/30/combining-apis-graphql-schema-stitching-part-2/"" rel=""nofollow noreferrer"">Part 2</a>.</p>&#xA;<p>All of these examples are build around Apollo Server but the same approach works with Apollo Client as well. So you can choose to do the stitching either as part of your API (adding your GraphQL API, Shopify and Contentful to a unified endpoint) or doing it client side. These have both advantages and disadvantages. Server side will generally result less requests to be made from your client while doing it client side will remove the single point of failure that is your stitching proxy.</p>&#xA;<p>A basic set-up, using Apollo Server, would be the following:</p>&#xA;<pre><code>const {ApolloServer} = require('apollo-server');&#xA;const {HttpLink} = require('apollo-link-http');&#xA;const {setContext} = require('apollo-link-context');&#xA;const {&#xA; introspectSchema,&#xA; makeRemoteExecutableSchema,&#xA; mergeSchemas&#xA;} = require('graphql-tools');&#xA;const fetch = require('node-fetch');&#xA;&#xA;const {GITHUB_TOKEN, CONTENTFUL_SPACE, CONTENTFUL_TOKEN} = require('./config.json');&#xA;&#xA;const gitHubLink = setContext((request) =&gt; ({&#xA; headers: {&#xA;   'Authorization': `Bearer ${GITHUB_TOKEN}`,&#xA; }&#xA;})).concat(new HttpLink({uri: 'https://api.github.com/graphql', fetch}));&#xA;&#xA;const contentfulLink = setContext((request) =&gt; ({&#xA; headers: {&#xA;   'Authorization': `Bearer ${CONTENTFUL_TOKEN}`,&#xA; }&#xA;})).concat(new HttpLink({uri: `https://graphql.contentful.com/content/v1/spaces/${CONTENTFUL_SPACE}`, fetch}));&#xA;&#xA;async function startServer() {&#xA; const gitHubRemoteSchema = await introspectSchema(gitHubLink);&#xA;&#xA; const gitHubSchema = makeRemoteExecutableSchema({&#xA;   schema: gitHubRemoteSchema,&#xA;   link: gitHubLink,&#xA; });&#xA;&#xA; const contentfulRemoteSchema = await introspectSchema(contentfulLink);&#xA;&#xA; const contentfulSchema = makeRemoteExecutableSchema({&#xA;   schema: contentfulRemoteSchema,&#xA;   link: contentfulLink,&#xA; });&#xA;&#xA; const schema = mergeSchemas({&#xA;   schemas: [&#xA;     gitHubSchema,&#xA;     contentfulSchema&#xA;   ]&#xA; });&#xA;&#xA; const server = new ApolloServer({schema});&#xA;&#xA; return await server.listen();&#xA;}&#xA;&#xA;startServer().then(({ url }) =&gt; {&#xA; console.log(` Server ready at ${url}`);&#xA;});&#xA;</code></pre>&#xA;<p>Note that this will just merge the two GraphQL schemas. You might have conflicts if two APIs have the same name for a type or root field.</p>&#xA;<p>Two make sure you don't have any conflicts I suggest you transform all schema to give the types and root fields unique prefixes. This could look this:</p>&#xA;<pre><code>async function getContentfulSchema() {&#xA; const contentfulRemoteSchema = await introspectSchema(contentfulLink);&#xA;&#xA; const contentfulSchema = makeRemoteExecutableSchema({&#xA;   schema: contentfulRemoteSchema,&#xA;   link: contentfulLink,&#xA; });&#xA;&#xA; return transformSchema(contentfulSchema, [&#xA;   new RenameTypes((name) =&gt; {&#xA;     if (name.includes('Repository')) {&#xA;       return name.replace('Repository', 'RepositoryMetadata');&#xA;     }&#xA;&#xA;     return name;&#xA;   }),&#xA;   new RenameRootFields((operation, fieldName) =&gt; {&#xA;     if (fieldName.includes('repository')) {&#xA;       return fieldName.replace('repository', 'repositoryMetadata');&#xA;     }&#xA;&#xA;     return fieldName;&#xA;   })&#xA; ]);&#xA;}&#xA;</code></pre>&#xA;<p>This will let you use all the apis in a unified manner but you can't query across the different APIs. To do that, you'll have to stitch together fields. I suggest you dive into the links above, they explain this in more depth.</p>&#xA;",1432249,,,,2020-08-24 08:38:14,"",,0,2,0,2020-08-24 08:38:14
63558395,1,,,0,489,"<p>I want to configure Jmeter to test the performance of following GraphQL API. I am unable to configure.</p>&#xA;<p><strong>API End Point :</strong> <a href=""https://graphqlzero.almansi.me/api"" rel=""nofollow noreferrer"">https://graphqlzero.almansi.me/api</a></p>&#xA;<p><strong>Query :</strong> <code>query: </code>{&#xA;user(id: 1) {&#xA;id&#xA;name&#xA;}&#xA;}``</p>&#xA;<p>Please help me with a solution.</p>&#xA;",8287575,,,,2020-08-24 15:18:12,How to load test GraphQL API with Jmeter,<jmeter><graphql><performance-testing><jmeter-5.0>,2,0,0,2020-08-24 09:38:56
63564194,2,,59946511,1,,"<p>I'm using the same version of @apollo/react-testing as yours and instead of react-apollo, I'm using @apollo/react-hooks and I encountered the same error today.</p>&#xA;<p>Just upgrading @apollo/react-hooks and @apollo/react-testing to v4.0.0 fixed the problem for me.</p>&#xA;",4859791,,,,2020-08-24 15:36:30,"",,0,1,0,2020-08-24 15:36:30
63576818,2,,63569534,0,,<p>I was able to fix this by changing the url value to the actual url directly as a string. I'm not sure why getting the variable from environment didn't work yet.</p>&#xA;,1077462,,,,2020-08-25 10:23:32,"",,0,1,0,2020-08-25 10:23:32
63595720,1,,,10,325,"<p>We are receiving this error Error: [internal apollo-server error] willResolveField called after stopTiming!, this is leading to unhandled rejection and frequent restart of node server.</p>&#xA;<p>Any insight to debug this or in what situation it usually happens.</p>&#xA;<p>&quot;apollo-server&quot;: &quot;^2.14.3&quot;,&#xA;&quot;apollo-engine-reporting&quot;: &quot;2.1.0&quot;</p>&#xA;<p>How do we pinpoint which resolver is causing this issue as entire stack tree is from graphql and apollo server.</p>&#xA;<p>Thanks</p>&#xA;",4477502,,,,2022-10-27 14:15:20,[apollo-engine-reporting]: willResolveField called after stopTiming,<apollo-server><application-restart>,1,1,0,2020-08-26 10:32:11
63595959,1,,,2,545,"<p>First of all sorry for my english.&#xA;So I am trying to fetch some data from GraphQL server and have several problems,&#xA;that's my code:</p>&#xA;<pre><code>import { createHttpLink } from 'apollo-link-http';&#xA;import { gql } from '@apollo/client';&#xA;import { ApolloClient, InMemoryCache } from '@apollo/client';&#xA;import 'babel-polyfill';&#xA;&#xA;const httpLink = createHttpLink({&#xA;  uri: 'https://api.spacex.land/graphql/',&#xA;  headers: {&#xA;      authorization: 'Bearer MY_TOKEN',&#xA;  },&#xA;});&#xA;&#xA;const client = new ApolloClient({&#xA;  link: httpLink,&#xA;  cache: new InMemoryCache(),&#xA;  connectToDevTools: true,&#xA;  query: {&#xA;    fetchPolicy: 'network-only',&#xA;    errorPolicy: 'all',&#xA;  }&#xA;});&#xA;&#xA;async function fetchedData(params) {&#xA;  const fetched = await client.query({&#xA;    query: gql`&#xA;      query {&#xA;        launchesPast(limit: 10) {&#xA;          mission_name&#xA;          launch_date_local&#xA;          launch_site {&#xA;            site_name_long&#xA;          }&#xA;          links {&#xA;            article_link&#xA;            video_link&#xA;          }&#xA;          rocket {&#xA;            rocket_name&#xA;            first_stage {&#xA;              cores {&#xA;                flight&#xA;                core {&#xA;                  reuse_count&#xA;                  status&#xA;                }&#xA;              }&#xA;            }&#xA;            second_stage {&#xA;              payloads {&#xA;                payload_type&#xA;                payload_mass_kg&#xA;                payload_mass_lbs&#xA;              }&#xA;            }&#xA;          }&#xA;          ships {&#xA;            name&#xA;            home_port&#xA;            image&#xA;          }&#xA;        }&#xA;      }&#xA;      `,&#xA;    fetchPolicy: &quot;network-only&quot;,&#xA;    variables: null&#xA;  });&#xA;  return fetched;&#xA;}&#xA;</code></pre>&#xA;<p>export default fetchedData().then((res) =&gt; console.log(res));</p>&#xA;<p><a href=""https://i.stack.imgur.com/Qylxv.png"" rel=""nofollow noreferrer"">Browser tab Network</a>&#xA;<a href=""https://i.stack.imgur.com/Qt6UZ.png"" rel=""nofollow noreferrer"">Browser tab Network</a></p>&#xA;<p>Browser tab Response:</p>&#xA;<blockquote>&#xA;<p>{&quot;errors&quot;:[{&quot;message&quot;:&quot;query exceeds complexity&#xA;limit&quot;,&quot;locations&quot;:[{&quot;line&quot;:1,&quot;column&quot;:1}],&quot;extensions&quot;:{&quot;code&quot;:&quot;GRAPHQL_VALIDATION_FAILED&quot;}}]}</p>&#xA;</blockquote>&#xA;<p>Browser tab console:</p>&#xA;<blockquote>&#xA;<p>POST <a href=""https://api.spacex.land/graphql/"" rel=""nofollow noreferrer"">https://api.spacex.land/graphql/</a> 400 (Bad Request);</p>&#xA;</blockquote>&#xA;<p><strong>And for example the same query via GraphQLClient.request() is working.</strong></p>&#xA;<pre><code>import 'babel-polyfill';&#xA;&#xA;import { GraphQLClient, gql } from 'graphql-request'&#xA;&#xA;async function fetchedData() {&#xA;  const endpoint = 'https://api.spacex.land/graphql/'&#xA;&#xA;  const graphQLClient = new GraphQLClient(endpoint, {&#xA;    headers: {&#xA;      authorization: 'Bearer MY_TOKEN',&#xA;    },&#xA;  })&#xA;&#xA;  const query = gql`query {&#xA;    launchesPast(limit: 10) {&#xA;      mission_name&#xA;      launch_date_local&#xA;      launch_site {&#xA;        site_name_long&#xA;      }&#xA;      links {&#xA;        article_link&#xA;        video_link&#xA;      }&#xA;      rocket {&#xA;        rocket_name&#xA;        first_stage {&#xA;          cores {&#xA;            flight&#xA;            core {&#xA;              reuse_count&#xA;              status&#xA;            }&#xA;          }&#xA;        }&#xA;        second_stage {&#xA;          payloads {&#xA;            payload_type&#xA;            payload_mass_kg&#xA;            payload_mass_lbs&#xA;          }&#xA;        }&#xA;      }&#xA;      ships {&#xA;        name&#xA;        home_port&#xA;        image&#xA;      }&#xA;    }&#xA;  }&#xA;  `&#xA;&#xA;  const data = await graphQLClient.request(query)&#xA;  console.log(JSON.stringify(data, undefined, 2))&#xA;  return data;&#xA;}&#xA;export default fetchedData().catch((error) =&gt; console.error(error));&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/VUdxN.png"" rel=""nofollow noreferrer"">Browser tab Network</a>&#xA;<a href=""https://i.stack.imgur.com/oC9NT.png"" rel=""nofollow noreferrer"">Browser tab Network</a></p>&#xA;<p>And Browser tab response is correct</p>&#xA;",14169144,,6605392,2020-08-26 11:56:34,2020-08-26 11:56:34,Fetching data from GraphQL server via react(ApolloClient.query()) method,<javascript><react-apollo><apollo-client><graphql-js>,1,0,0,2020-08-26 10:47:21
63618211,1,66941542,,5,2810,"<pre><code>ng add apollo-angular&#xA;</code></pre>&#xA;<p>It threw a number of warnings:</p>&#xA;<pre><code>UPDATE src/app/app.module.ts (541 bytes)&#xA;npm WARN notsup Unsupported engine for extract-files@9.0.0: wanted: {&quot;node&quot;:&quot;^10.17.0 || ^12.0.0 || &gt;= 13.7.0&quot;} (current: {&quot;node&quot;:&quot;10.16.3&quot;,&quot;npm&quot;:&quot;6.12.0&quot;})&#xA;npm WARN notsup Not compatible with your version of node/npm: extract-files@9.0.0&#xA;npm WARN karma-jasmine-html-reporter@1.5.4 requires a peer of jasmine-core@&gt;=3.5 but none is installed. You must install peer dependencies yourself.&#xA;npm WARN @apollo/client@3.1.3 requires a peer of react@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;npm WARN @apollo/client@3.1.3 requires a peer of subscriptions-transport-ws@^0.9.0 but none is installed. You must install peer dependencies yourself.&#xA;</code></pre>&#xA;<p>So after adding the peer dependencies I try to add apollo-angular one more time:</p>&#xA;<pre><code>MIA-LT-16354:src SSilwal$ ng add apollo-angular&#xA;Skipping installation: Package already installed&#xA;? Url to your GraphQL endpoint https://o5x5jzoo7z.sse.codesandbox.io/graphql'&#xA;Couldn't read tsconfig.base.json!&#xA;</code></pre>&#xA;<p>Environment:</p>&#xA;<p>@apollo/client: 3.0.0&#xA;apollo-angular:2.0.3&#xA;graphql:15.3.0&#xA;@angular/core:9.1.7&#xA;@angular/cli: 9.1.12&#xA;typescript:3.8.3</p>&#xA;",4734495,,,,2021-04-08 00:26:05,Couldn't read tsconfig.base.json! - Apollo Angular project setup,<angular><apollo-client><graphql-js>,1,4,0,2020-08-27 14:27:35
63652686,1,,,1,209,"<p>I'm using <code>@nestjs/graphql</code> and my code is ↓</p>&#xA;<pre><code>&#xA;@Resolver(() =&gt; Course)&#xA;export default class CourseResolver {&#xA;   @Query(() =&gt; [Course])&#xA;   course(@Args('where', { nullable: true }) where: CourseSearchDto) {&#xA;      return Course.find(where);&#xA;   }&#xA;&#xA;   @ResolveProperty(() =&gt; [Profession])&#xA;   async professions(@Parent() course: Course) {&#xA;      return await Profession.find({ id: course.id });&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>When query like this below, <code>profession</code> method is called for each <code>Course</code> but I want to run just once like a <code>left join</code> in DB.</p>&#xA;<pre><code>&#xA;{&#xA;  course {&#xA;    key,&#xA;    id,&#xA;    professions{&#xA;      id, key&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>Is there any solution to do this once and then join each <code>profession</code> for each <code>course</code> ??</p>&#xA;",3866361,,,,2020-08-29 23:25:05,"Nested query in `@nestjs/graphql`, in more efficient `ResolverProperty` for all previous query result",<graphql><nestjs>,0,1,0,2020-08-29 23:25:05
63680587,2,,63679860,1,,"<p>Heroku row limit was hit on the hobby dev plan. This can be checked on the heroku postgres add-on.</p>&#xA;<p><a href=""https://i.stack.imgur.com/dhlQs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/dhlQs.png"" alt=""enter image description here"" /></a></p>&#xA;<p>See this answer for more detail:&#xA;<a href=""https://stackoverflow.com/questions/22199592/heroku-pg-recover-write-access-revoked"">Heroku PG: Recover Write access revoked</a></p>&#xA;",1828214,,,,2020-09-01 02:42:29,"",,0,1,0,2020-09-01 02:42:29
63682557,2,,63552088,2,,"<p>I opened a <a href=""https://github.com/apollographql/apollo-android/issues/2536"" rel=""nofollow noreferrer"">Github Issue</a> with the apollo-android team and they've merged a fix to remove the Gradle 6 requirement. They've <a href=""https://github.com/apollographql/apollo-android/pull/2539/commits"" rel=""nofollow noreferrer"">dropped the requirement down to 5.6</a> though the fix has yet to be merged into a release. Should be available in the next release after v2.3.1.</p>&#xA;",1758149,,,,2020-09-01 06:35:58,"",,0,0,0,2020-09-01 06:35:58
63683074,1,,,2,1908,"<p>I got hit with below peculiar issue on promise polyfill that should be added by Babel's preset-env for browser compatibility.</p>&#xA;<p>I have a <code>Foo.ts</code> file which uses the <code>async/await</code> syntax to handle promises. After being processed by <code>babel-loader</code>, bundled and started by Webpack dev server, the containing React web application runs successfully in Chrome, Safari, Edge(Mac) but fails in FireFox, IE11 and Edge(Windows).</p>&#xA;<p>The error looks like below, which is identified to be from the npm package <code>@apollo/client</code> which <code>Foo.ts</code> depends on. Does it indicate that the promise polyfill is missing?</p>&#xA;<pre><code>TypeError: &quot;this.fetchQuery(...).finally is not a function&quot;&#xA;</code></pre>&#xA;<p>The Webpack config for babel-loader looks like below.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>module: {&#xA;  rules: [&#xA;    {&#xA;      test: /\.(jsx?|tsx?)$/,&#xA;      exclude: /node_modules\/.*/,&#xA;      use: {&#xA;        loader: 'babel-loader',&#xA;        options: {&#xA;          presets: [&#xA;            '@babel/preset-react',&#xA;            '@babel/preset-typescript',&#xA;            [&#xA;              '@babel/preset-env',&#xA;              {&#xA;                useBuiltIns: 'usage',&#xA;                corejs: '3.6',&#xA;                debug: true,&#xA;              },&#xA;            ],&#xA;          ],&#xA;          plugins: ['react-hot-loader/babel'],&#xA;        },&#xA;      },&#xA;    },&#xA;  ]&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>When the dev server starts, in the console output I am able to see below line that says the promise polyfill has been added to <code>Foo.js</code>.</p>&#xA;<pre><code>Added following core-js polyfills:&#xA;  es.promise { &quot;chrome&quot;:&quot;45&quot;, &quot;edge&quot;:&quot;12&quot;, &quot;firefox&quot;:&quot;45&quot;, &quot;ie&quot;:&quot;11&quot;, &quot;safari&quot;:&quot;10.1&quot; }&#xA;</code></pre>&#xA;<p>Hence I am confused how the problem could have occurred.</p>&#xA;<p>If I manually add <code>import 'core-js/es/promise/finally';</code> to <code>Foo.ts</code>, everything just works.</p>&#xA;<p>I am wondering what could be missing here and why that polyfill is not successfully added by <code>babel-loader</code>.</p>&#xA;<p>The code portion in <code>Foo.ts</code> that involves <code>@apollo/client</code> looks like below. It's compiled to <code>ES2015</code> target by <code>tsc</code> before going through babel transformation.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>try {&#xA;  const response: ApolloQueryResult&lt;QueryType&gt; = await this.apolloClient.query(&#xA;    {&#xA;      query,&#xA;      fetchPolicy: 'no-cache',&#xA;      errorPolicy: 'all',&#xA;      variables,&#xA;    },&#xA;  );&#xA;  return response.data;&#xA;} catch (e) {&#xA;  console.error(e);&#xA;  throw e;&#xA;}&#xA;</code></pre>&#xA;<p><strong>Env Info</strong></p>&#xA;<ul>&#xA;<li>Firefox: 68.8.0esr</li>&#xA;<li>@babel/preset-env: 7.9.5</li>&#xA;<li>core-js: 3.6.5</li>&#xA;<li>Webpack: 4.29.6</li>&#xA;<li>babel-loader: 8.0.5</li>&#xA;</ul>&#xA;",4993386,,4993386,2020-09-03 01:40:14,2020-09-03 01:40:14,Promise polyfill does not work in FireFox and IE11 when added via Webpack babel-loader,<webpack><babeljs><apollo-client><polyfills><babel-loader>,1,0,0,2020-09-01 07:19:17
63703686,1,,,3,1236,"<p>How to monitor GraphQL request  like monitor Rest API with Charles  ?</p>&#xA;<p>I'd like to monitor request with my application's GraphQL request,</p>&#xA;<p>But only get some Rest request from my application in Charles</p>&#xA;<p>Is that possible to monitor GraphQL Request ? How ?</p>&#xA;<p><strong>PS:</strong></p>&#xA;<ol>&#xA;<li>Api works fine, I just want to check API network speed via Charles</li>&#xA;<li>I have setup the wifi proxy of iPhone device to connect my computer as Charles proxy server.</li>&#xA;</ol>&#xA;",1530581,,1530581,2020-09-03 02:07:11,2020-09-03 02:07:11,How to monitor GraphQL request like monitor Rest API with Charles,<graphql><charles-proxy>,1,0,0,2020-09-02 10:31:29
63706162,2,,63700777,0,,"<p>My node version was 14 and downgraded to 12, now it's solved!</p>&#xA;",13976149,,,,2020-09-02 13:05:43,"",,0,0,0,2020-09-02 13:05:43
63710657,2,,60868650,0,,"<p>Did you find a solution to this issue? I'm seeing the same thing with null values being returned except for the id in my types. I was using <code>express-graphql</code> and everything works fine like you describe. When I swap it out for <code>ApolloServer</code> from <code>apollo-server-express</code>, I'm able to see that the schema seems to load fine and display in the GraphQL playground, but the sql queries aren't executing normally, causing null values every where.</p>&#xA;<p>In the latest version of <a href=""https://join-monster.readthedocs.io/en/latest/map-to-table/"" rel=""nofollow noreferrer"">join-monster (3.0, unreleased)</a>, they have moved all of the join-monster specific syntax in the <code>extensions</code> property. I'm thinking this may fix the issue, if it is the extra non-standard GraphQL properties added to the types that is causing it.</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>const User = new GraphQLObjectType({&#xA;  name: 'User',&#xA;  extensions: {&#xA;    joinMonster: {&#xA;      sqlTable: 'accounts', // the SQL table for this object type is called ""accounts""&#xA;      uniqueKey: 'id' // id is different for every row&#xA;    }&#xA;  },&#xA;  fields: () =&gt; ({&#xA;    /*...*/&#xA;  })&#xA;})</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",5130298,,,,2020-09-02 17:24:49,"",,0,0,0,2020-09-02 17:24:49
63715595,2,,63683074,1,,"<p>After further digging, I think the problem is caused by <code>@babel/preset-env</code> not able to inject the correct <code>es.promise</code> polyfill for Firefox. I tested with below config which isolates the target running environment to Firefox only. The issue is only observed for Firefox version set at 68 and lower.</p>&#xA;<pre><code>      targets: {&#xA;        firefox: '68',&#xA;      },&#xA;</code></pre>&#xA;<p>For now my workaround is:</p>&#xA;<ol>&#xA;<li>Config <code>@babel/preset-env</code> to purposely exclude <code>es.promise</code> polyfill.</li>&#xA;</ol>&#xA;<pre><code>exclude: ['es.promise'],&#xA;</code></pre>&#xA;<ol start=""2"">&#xA;<li>Add it through Webpack's entrypoint config since it's still needed.</li>&#xA;</ol>&#xA;<pre><code>entry: ['core-js/es/promise', 'index.ts'],&#xA;</code></pre>&#xA;",4993386,,,,2020-09-03 01:36:52,"",,0,1,0,2020-09-03 01:36:52
63737755,2,,63730359,0,,"<p>Thanks to @xadm I found out that to source data using to use at build-time you need to install a plugin and add it to your config. I use gatsby-source-graphql and forgot to also add the headers here.</p>&#xA;<pre><code>//gatsby-config-js&#xA;    {&#xA;      resolve: &quot;gatsby-source-graphql&quot;,&#xA;      options: {&#xA;        typeName: &quot;Apollo&quot;,&#xA;        fieldName: &quot;apollo&quot;,&#xA;        createLink: (pluginOptions) =&gt; {&#xA;          return createHttpLink({&#xA;            uri: &quot;your uri&quot;,&#xA;            fetch,&#xA;            credentials: &quot;same-origin&quot;,&#xA;            headers: {&#xA;              Authorization: &quot;your authorization&quot;,&#xA;            },&#xA;          })&#xA;        },&#xA;      },&#xA;    },&#xA;</code></pre>&#xA;<p>article about this: <a href=""https://www.gatsbyjs.com/docs/data-fetching/#fetching-data-at-build-time"" rel=""nofollow noreferrer"">https://www.gatsbyjs.com/docs/data-fetching/#fetching-data-at-build-time</a></p>&#xA;",3142832,,3142832,2020-09-04 09:07:11,2020-09-04 09:07:11,"",,0,0,0,2020-09-04 08:43:13
63807669,2,,62640237,0,,"<p>from my experience, nuxt will failed in SSR if you are using v-if unless you wrap in <code>&lt;no-ssr&gt;</code> or <code>&lt;client-only&gt;</code></p>&#xA;",2275399,,,,2020-09-09 08:26:18,"",,0,1,0,2020-09-09 08:26:18
63809226,2,,63150896,6,,"<p>I had the same issue for '@apollo/client/core'</p>&#xA;<pre><code>ERROR in The target entry-point &quot;apollo-angular&quot; has missing dependencies:&#xA;&#xA;@apollo/client/core&#xA;</code></pre>&#xA;<p>The import from &quot;@apollo/client/core&quot; in apollo.d.ts didn't work properly. Downgrading apollo-angular to 1.10.0 solved the issue. The documentation says it has the support for Angular 10. The import in apollo.d.ts in this version looks like below:</p>&#xA;<pre><code>import { ApolloClient, QueryOptions, MutationOptions, ApolloQueryResult, SubscriptionOptions, ApolloClientOptions } from 'apollo-client';&#xA;</code></pre>&#xA;<p>This is how the dependencies in my package.json look like:</p>&#xA;<pre><code>&quot;apollo-angular&quot;: &quot;^1.10.0&quot;,&#xA;&quot;apollo-angular-link-http&quot;: &quot;^1.11.0&quot;,&#xA;&quot;apollo-cache-inmemory&quot;: &quot;^1.6.6&quot;,&#xA;&quot;apollo-client&quot;: &quot;^2.6.10&quot;,&#xA;&quot;apollo-link&quot;: &quot;^1.2.14&quot;,&#xA;&quot;graphql&quot;: &quot;^15.1.0&quot;,&#xA;&quot;graphql-tag&quot;: &quot;^2.10.4&quot;,&#xA;</code></pre>&#xA;",10291805,,,,2020-09-09 09:58:59,"",,0,0,0,2020-09-09 09:58:59
63829749,1,,,2,975,"<p>I have a running backend server that serves GraphQL on endpoint <code>/api</code>. Works like a charme but I still have it externally open and access is possible without authentication.</p>&#xA;<p><a href=""https://i.stack.imgur.com/FwykK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FwykK.png"" alt=""enter image description here"" /></a></p>&#xA;<p>So I started trying the API Gateway beta Google just released. All that was pretty straight forward expcept the part where I have to configure the OpenAPI 2.0 configuration YAML.</p>&#xA;<pre><code>swagger: &quot;2.0&quot;&#xA;info:&#xA;  title: myapp-backend-graphql-api&#xA;  description: &quot;API for GraphQL queries and mutations&quot;&#xA;  version: &quot;1.0.0&quot;&#xA;schemes:&#xA;  - &quot;https&quot;&#xA;paths:&#xA;  &quot;/api&quot;:&#xA;    post:&#xA;      description: &quot;GraphQL Endpoint&quot;&#xA;      operationId: &quot;graphqlEndpoint&quot;&#xA;      x-google-backend:&#xA;        address: https://myapp-backend-43Jasfasd-ew.a.run.app&#xA;      parameters:&#xA;        - in: body&#xA;          name: GraphQl&#xA;          schema:&#xA;            type: object&#xA;      responses:&#xA;        200:&#xA;          description: &quot;Success.&quot;&#xA;          schema:&#xA;            type: object&#xA;&#xA;&#xA;</code></pre>&#xA;<p>So this is my <code>openapi-config.yml</code>. I somewhat struggled a b</p>&#xA;<hr />&#xA;<p>it defining the &quot;REST&quot; endpoint here since I have a GraphQL endpoint. But it's just a POST request, right? So nothing usual for OpenAPI 2.0 I thought.</p>&#xA;<p>Anyways the API Gateway was created successfully according to GCP&#xA;<a href=""https://i.stack.imgur.com/zDgYY.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zDgYY.png"" alt=""enter image description here"" /></a></p>&#xA;<p>However - calling the API now via the Gateway URL <code>https://mystuff-api-9kytelt5.ew.gateway.dev</code> and the endpoint <code>/api</code> fails.</p>&#xA;<pre><code>xetra11@pop-os:~$ curl https://mystuff-api-9kytelt5.ew.gateway.dev/api/schema.json &#xA;{&quot;message&quot;:&quot;Path does not match any requirement URI template.&quot;,&quot;code&quot;:404}&#xA;</code></pre>&#xA;<p>I am somewhat lost with that error message and don't know where I have to adjust something.</p>&#xA;",5967828,,,,2021-02-11 17:06:32,Google API Gateway configuration for a Cloud Run Server that serves GraphQL at endpoint /api,<google-api><graphql><openapi><google-cloud-run>,2,1,0,2020-09-10 12:31:42
63841686,2,,62209156,0,,"<p>It's possible, the setup for apollo is the same as any server, for example, you can use <a href=""https://expressjs.com/en/starter/static-files.html"" rel=""nofollow noreferrer"">express to serve static files</a> and implement apollo with some minor changes see the docs for <a href=""https://www.apollographql.com/docs/apollo-server/v1/servers/express/#express"" rel=""nofollow noreferrer"">apollo server express</a> and implement the one that you are familiar with</p>&#xA;",6030383,,,,2020-09-11 06:15:01,"",,0,0,0,2020-09-11 06:15:01
63848405,2,,62283062,2,,"<p>Joey Yi Zhao, as of today this is a known bug in AWS Appsync queries console, even though you enter OIDC token in input. It is not passed along in case of subscription but it does work fine in case of query and mutations(you can verify the same in dev console of the browser).I got to know about this after contacting AWS support as i was also facing the same issue.&#xA;If you test the subscription with OIDC through other means like aws-appsync package it works as expected.</p>&#xA;",14249083,,,,2020-09-11 13:49:42,"",,0,0,0,2020-09-11 13:49:42
63855659,2,,63829749,1,,"<p>In your openapi-config.yml file, like the example <a href=""https://cloud.google.com/endpoints/docs/openapi/get-started-cloud-run#endpoints_configure"" rel=""nofollow noreferrer"">here</a>, you need to add the host just above the schemes entry. The host is the hostname portion of the URL that Cloud Run creates. Also your path and scheme have double quotes which it doesn't need to be. I made some modification to your example, see if that helps.</p>&#xA;<p>Example:</p>&#xA;<pre><code>swagger: &quot;2.0&quot;&#xA;info:&#xA;  title: myapp-backend-graphql-api&#xA;  description: &quot;API for GraphQL queries and mutations&quot;&#xA;  version: &quot;1.0.0&quot;&#xA;host: myapp-backend-43Jasfasd-ew.a.run.app&#xA;schemes:&#xA;  - https&#xA;paths:&#xA;  /api:&#xA;    post:&#xA;      description: &quot;GraphQL Endpoint&quot;&#xA;      operationId: &quot;graphqlEndpoint&quot;&#xA;      x-google-backend:&#xA;        address: https://myapp-backend-43Jasfasd-ew.a.run.app&#xA;      parameters:&#xA;        - in: body&#xA;          name: GraphQl&#xA;          schema:&#xA;            type: object&#xA;      responses:&#xA;        '200':&#xA;          description: Success&#xA;          schema:&#xA;            type: object&#xA;</code></pre>&#xA;",7187120,,,,2020-09-12 00:08:15,"",,0,3,0,2020-09-12 00:08:15
63856245,2,,63856132,0,,"<p>this bug has been addressed in v0.12.3 <a href=""https://github.com/wp-graphql/wp-graphql/releases/tag/v0.12.3"" rel=""nofollow noreferrer"">https://github.com/wp-graphql/wp-graphql/releases/tag/v0.12.3</a></p>&#xA;",3085058,,,,2020-09-12 02:18:14,"",,0,0,0,2020-09-12 02:18:14
63871545,1,63880520,,3,2199,"<p>I am building a serverless backend using <code>type-graphql</code> and <code>apollo-server-lambda</code>, but after around third request to graphql endpoint I get an error</p>&#xA;<pre><code>Error: Cannot use GraphQLSchema &quot;[object GraphQLSchema]&quot; from another module or realm.&#xA;&#xA;Ensure that there is only one instance of &quot;graphql&quot; in the node_modules&#xA;directory. If different versions of &quot;graphql&quot; are the dependencies of other&#xA;relied on modules, use &quot;resolutions&quot; to ensure only one version is installed.&#xA;</code></pre>&#xA;<p>I have already downgraded <code>type-graphql</code> because version <code>1.0.0</code> requires <code>graphql@^15.3.0</code> while some other dependencies require <code>graphql &lt;= 14</code></p>&#xA;<p>Here are my dependencies</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@types/graphql&quot;: &quot;14.5.0&quot;,&#xA;    &quot;apollo-server-lambda&quot;: &quot;^2.17.0&quot;,&#xA;    &quot;aws-sdk&quot;: &quot;^2.750.0&quot;,&#xA;    &quot;graphql&quot;: &quot;^14.7.0&quot;,&#xA;    &quot;pg&quot;: &quot;^8.3.3&quot;,&#xA;    &quot;reflect-metadata&quot;: &quot;^0.1.13&quot;,&#xA;    &quot;source-map-support&quot;: &quot;^0.5.19&quot;,&#xA;    &quot;type-graphql&quot;: &quot;^0.17.0&quot;,&#xA;  },&#xA;  &quot;devDependencies&quot;: {&#xA;    &quot;@types/aws-lambda&quot;: &quot;^8.10.62&quot;,&#xA;    &quot;@types/aws-sdk&quot;: &quot;^2.7.0&quot;,&#xA;    &quot;@types/jest&quot;: &quot;^26.0.13&quot;,&#xA;    &quot;@types/node&quot;: &quot;^14.10.0&quot;,&#xA;    &quot;apollo-server-testing&quot;: &quot;^2.17.0&quot;,&#xA;    &quot;serverless&quot;: &quot;^2.0.0&quot;,&#xA;    &quot;serverless-offline&quot;: &quot;^6.7.0&quot;,&#xA;    &quot;serverless-webpack&quot;: &quot;^5.3.4&quot;,&#xA;    &quot;ts-jest&quot;: &quot;^26.3.0&quot;,&#xA;    &quot;ts-loader&quot;: &quot;^8.0.3&quot;,&#xA;    &quot;typescript&quot;: &quot;^4.0.2&quot;,&#xA;    &quot;webpack&quot;: &quot;^4.44.1&quot;,&#xA;    &quot;webpack-node-externals&quot;: &quot;^2.5.2&quot;&#xA;  },&#xA;  &quot;resolutions&quot;: {&#xA;    &quot;graphql&quot;: &quot;^14.7.0&quot;,&#xA;  },&#xA;&#xA;</code></pre>&#xA;<p><code>npm ls graphql</code> result</p>&#xA;<pre><code>dives-backend@1.0.0&#xA;├─┬ @types/graphql@14.5.0&#xA;│ └── graphql@14.7.0  deduped&#xA;└── graphql@14.7.0 &#xA;</code></pre>&#xA;<p>and <code>index.ts</code></p>&#xA;<pre class=""lang-js prettyprint-override""><code>import &quot;reflect-metadata&quot;&#xA;import { buildSchemaSync } from &quot;type-graphql&quot;&#xA;import { HelloResolver } from &quot;./src/resolvers/example&quot;&#xA;&#xA;const schema = buildSchemaSync({&#xA;    resolvers: [HelloResolver],&#xA;    validate: false,&#xA;})&#xA;&#xA;const server = new ApolloServer({&#xA;    schema,&#xA;    playground: { endpoint: &quot;/dev/graphql&quot; },&#xA;})&#xA;&#xA;export const handler = server.createHandler({&#xA;        cors: {&#xA;            origin: true,&#xA;            credentials: true,&#xA;        },&#xA;    })&#xA;</code></pre>&#xA;",7054825,,7054825,2020-09-13 13:53:17,2020-09-23 14:36:32,Cannot use GraphQLSchema from another module or realm,<javascript><graphql><apollo-server><graphql-js>,2,2,0,2020-09-13 13:49:21
63877546,1,63877938,,0,305,"<p>I'm trying to deploy my application to a production environment, but having some trouble wiring it all together.</p>&#xA;<p>I've got a <code>create-react-app</code> for my frontend, which is served up by a simple express/serve server. On the backend, I've got <code>NGINX</code> proxying successfully to my API server, which is using Apollo to serve my data. The API is running on port 4000.</p>&#xA;<p>The Apollo-Server is as-follows, and works fine:</p>&#xA;<pre><code>import { resolve } from &quot;path&quot;;&#xA;import dotenv from &quot;dotenv&quot;;&#xA;const envi = process.env.NODE_ENV;&#xA;dotenv.config({ path: resolve(__dirname, `../.${envi}.env`) });&#xA;&#xA;import &quot;reflect-metadata&quot;;&#xA;import { connect } from &quot;./mongodb/connect&quot;;&#xA;import { buildSchema } from &quot;type-graphql&quot;;&#xA;import { ApolloServer } from &quot;apollo-server&quot;;&#xA;import { SenateCommitteeResolver, HouseCommitteeResolver } from &quot;./resolvers&quot;;&#xA;import { populateDatabase } from &quot;./util&quot;;&#xA;&#xA;(async () =&gt; {&#xA;  // Connect to MongoDB&#xA;  await connect();&#xA;  console.log(` Databases connected`);&#xA;  const schema = await buildSchema({&#xA;    resolvers: [HouseCommitteeResolver, SenateCommitteeResolver],&#xA;    emitSchemaFile: resolve(__dirname, &quot;schema.gql&quot;),&#xA;  });&#xA;&#xA;  // If development, set database docs&#xA;  envi === &quot;development&quot; &amp;&amp; (await populateDatabase());&#xA;&#xA;  // Launch the server!&#xA;  const server = new ApolloServer({&#xA;    schema,&#xA;    playground: true,&#xA;  });&#xA;&#xA;  // Server listens at URL&#xA;  const { url } = await server.listen(4000);&#xA;  console.log(` Server ready, at ${url}`);&#xA;})();&#xA;</code></pre>&#xA;<p>I'm trying to connect my express server to the Apollo Server, but that's where I'm running into problems. The application is supposed to connect using Apollo's Client and HTTP Link, because I'm using Apollo Client on the frontend too:</p>&#xA;<pre><code>import React, { useEffect } from &quot;react&quot;;&#xA;import { AppRouter } from &quot;./routers&quot;;&#xA;import ReactGA from &quot;react-ga&quot;;&#xA;import { ApolloProvider } from &quot;@apollo/client&quot;;&#xA;import client from &quot;./graphql/client&quot;;&#xA;&#xA;import &quot;./styles/index.scss&quot;;&#xA;&#xA;function App(): React.ReactElement {    &#xA;  return (&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;AppRouter /&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  );&#xA;}&#xA;&#xA;export default App;&#xA;</code></pre>&#xA;<p>And here's the client file:</p>&#xA;<pre><code>import { ApolloClient, InMemoryCache, createHttpLink } from &quot;@apollo/client&quot;;&#xA;&#xA;const httpLink = createHttpLink({ uri: process.env.REACT_APP_API as string });&#xA;const cache = new InMemoryCache();&#xA;&#xA;const client = new ApolloClient({&#xA;  link: httpLink,&#xA;  cache,&#xA;  connectToDevTools: true,&#xA;});&#xA;&#xA;export default client;&#xA;</code></pre>&#xA;<p>However, when the user navigates to the site and the <em>site itself</em> tries to make a request to my backend, I'm getting a CORS error:</p>&#xA;<pre><code>Access to fetch at 'https://www.cloture.app/' from origin 'https://cloture.app' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.&#xA;</code></pre>&#xA;<p>What's going wrong? How can I connect Apollo's client with my Apollo Server on the backend?</p>&#xA;",7860026,,7860026,2020-09-14 03:11:28,2020-09-14 04:04:14,How can one deploy Apollo Server with Create-React-App?,<reactjs><typescript><graphql><cors><apollo>,1,1,0,2020-09-14 02:59:30
63884088,1,,,0,88,<p>I have recently started working with Cypress and looking forward how to test GraphQL end points.</p>&#xA;,14274781,,,,2020-09-14 12:18:42,How to integrate GraphQl with Cypress,<graphql><cypress>,1,0,0,2020-09-14 12:12:01
63885587,2,,63881595,0,,"<p>I found the issue. it was in happening because of the moduleAlias in my package.json.&#xA;I had created a module aliases like</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    &quot;name&quot;: &quot;apollo-express-server&quot;,&#xA;    &quot;version&quot;: &quot;0.0.0&quot;,&#xA;        &quot;_moduleAliases&quot;: {&#xA;        &quot;@middlewares&quot;: &quot;dist/middlewares&quot;,&#xA;        &quot;@validators&quot;: &quot;dist/validators&quot;,&#xA;        &quot;@models&quot;: &quot;dist/models&quot;,&#xA;        &quot;@shared&quot;: &quot;dist/shared&quot;,&#xA;        &quot;@config&quot;: &quot;dist/config&quot;,&#xA;        &quot;@server&quot;: &quot;dist/Server&quot;,&#xA;        &quot;@apollo&quot;: &quot;dist/ApolloServer&quot;&#xA;    },&#xA;}&#xA;</code></pre>&#xA;<p>Removing the line &quot;@apollo&quot;: &quot;dist/ApolloServer&quot; solved the issue.&#xA;Apparently it was overriding the /node_modules/@apollo/* and pointing it into dist/ApolloServer</p>&#xA;",7124240,,,,2020-09-14 13:43:47,"",,0,0,0,2020-09-14 13:43:47
63891125,1,63891911,,-1,2197,"<p>I'm using Laravel to serve a GraphQL API, using Lighthouse. Everything works fine when I use grapqhl as a URI in the main domain, but when I use it in a subdomain eg. <code>grapql.app.test</code> I get the next error:</p>&#xA;<blockquote>&#xA;<p>Access to fetch at 'http://graphql.app.test/' from origin&#xA;'http://app.test' has been blocked by CORS policy: Response to&#xA;preflight request doesn't pass access control check: No&#xA;'Access-Control-Allow-Origin'</p>&#xA;</blockquote>&#xA;<p>My <code>config\cors</code>:</p>&#xA;<pre><code>'paths' =&gt; ['api/*','graphql'],&#xA;'allowed_methods' =&gt; ['*'],&#xA;'allowed_origins' =&gt; ['*'],&#xA;'allowed_origins_patterns' =&gt; [],&#xA;'allowed_headers' =&gt; ['*'],&#xA;'exposed_headers' =&gt; [],&#xA;'max_age' =&gt; 0,&#xA;'supports_credentials' =&gt; false,&#xA;</code></pre>&#xA;<p>How can I solve this?</p>&#xA;<p>I'm using laravel 8.</p>&#xA;",3927509,,,,2022-02-27 12:11:54,Laravel CORS for subdomain API,<laravel><graphql><cors><laravel-lighthouse><laravel-8>,2,5,0,2020-09-14 20:01:50
63907001,1,,,0,53,"<p>While activate graphql function in parse-server, i got this warning msg in my log:</p>&#xA;<pre><code>warn: Function my-cloud-code-function could not be added to the auto schema because GraphQL names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/.&#xA;</code></pre>&#xA;<p>I know i can remove the warning by fixing the function name and update it to the proper name format. But what i really want is to disable certain function to be automatically included in auto schema graphql parse-server. How can i do that? I believe there should be some parse server graphql option to exclude it from the list, but i can not found.</p>&#xA;",492593,,,,2020-09-15 17:24:55,how to disable certain cloud code to automatically include in auto schema graphql parse-server?,<parse-platform><graphql><parse-cloud-code>,0,3,0,2020-09-15 17:24:55
63912387,2,,57656326,0,,"<p>Make sure to change the node version to 2.2.12</p>&#xA;<p><img src=""https://i.stack.imgur.com/5g70P.png"" alt=""enter image description here"" /></p>&#xA;<p>And add IP address like below:</p>&#xA;<p><img src=""https://i.stack.imgur.com/XhL2p.png"" alt=""enter image description here"" /></p>&#xA;",12500034,,965146,2020-09-30 01:28:16,2020-09-30 01:28:16,"",,0,0,0,2020-09-16 02:45:18
63955795,1,,,1,552,"<p>i'm new with apollo federation. I try to include subscritption which i have on my remote server (on other host written on aiohttp) to federation schema. And there are no issue when i start my node index.js but there is no subscription in docs and if i try in altair the same result. Please take in to account that the subscription itself is fully workable because i can reach it via Swart Web Socket client and it recieve me my count. What i'm missing and how it could be fixed. Thank you in advance.</p>&#xA;<p>Here is my subscription(written on python by aiohttp):</p>&#xA;<pre><code>class Subscriptions(graphene.ObjectType):&#xA;    count_seconds_one = graphene.Float(up_to=graphene.Int())&#xA;&#xA;    @async_generator&#xA;    async def resolve_count_seconds_one(self, info, up_to):&#xA;        for i in range(up_to):&#xA;            await yield_(i)&#xA;            await asyncio.sleep(1.)&#xA;        await yield_(i)&#xA;&#xA;</code></pre>&#xA;<p>here is my index.js</p>&#xA;<pre><code>const { ApolloServer, gql, mergeSchemas, introspectSchema, makeRemoteExecutableSchema } = require('apollo-server')&#xA;const { HttpLink } = require('apollo-link-http')&#xA;const fetch = require('node-fetch')&#xA;const { WebSocketLink } = require('apollo-link-ws')&#xA;const { split } = require('apollo-link')&#xA;const { getMainDefinition } = require('apollo-utilities')&#xA;const { SubscriptionClient } = require('subscriptions-transport-ws')&#xA;const ws = require('ws')&#xA;&#xA;const resolvers = {}&#xA;&#xA;&#xA;async function getRemoteSchema({ uri, subscriptionsUri }) {&#xA;    const httpLink = new HttpLink({ uri, fetch })&#xA;&#xA;    const client = new SubscriptionClient(subscriptionsUri, { reconnect: true }, ws)&#xA;    const wsLink = new WebSocketLink(client)&#xA;&#xA;    const link = split(&#xA;        operation =&gt; {&#xA;            const definition = getMainDefinition(operation.query)&#xA;            console.log(definition)&#xA;            return (&#xA;                definition.kind === 'OperationDefinition' &amp;&amp;&#xA;                definition.operation === 'subscription'&#xA;            )&#xA;        },&#xA;        wsLink,  // &lt;-- Use this if above function returns true&#xA;        httpLink // &lt;-- Use this if above function returns false&#xA;    )&#xA;&#xA;    const schema = await introspectSchema(link)&#xA;    const executableSchema = makeRemoteExecutableSchema({ schema, link })&#xA;&#xA;    return executableSchema&#xA;}&#xA;&#xA;&#xA;async function run() {&#xA;&#xA;    //&#xA;    const remoteSchema1 = await getRemoteSchema({ uri: 'http://127.0.0.1:8000',&#xA;        subscriptionsUri: 'ws://localhost:8005/subscriptions'&#xA;    })&#xA;&#xA;    const remoteSchema3 = await getRemoteSchema({&#xA;        uri: 'http://localhost:8005/graphql',&#xA;        subscriptionsUri: 'ws://localhost:8005/subscriptions'&#xA;    })&#xA;&#xA;    const resolvers = {}&#xA;&#xA;    const schema = mergeSchemas({&#xA;        schemas: [&#xA;            remoteSchema1,&#xA;&#xA;            remoteSchema3,&#xA;&#xA;        ],&#xA;    })&#xA;&#xA;&#xA;    const server = new ApolloServer({ schema })&#xA;&#xA;    server.listen().then(({ url, subscriptionsUrl }) =&gt; {&#xA;        console.log(` Server ready at ${url}`);&#xA;        console.log(` Subscriptions ready at ${subscriptionsUrl}`);&#xA;    })&#xA;}&#xA;&#xA;run().catch(console.log)&#xA;</code></pre>&#xA;",12321233,,,,2020-09-18 13:13:48,apollo federation subscriptions on node 8.11.1,<node.js><graphql><graphql-subscriptions><apollo-federation>,1,0,0,2020-09-18 12:27:59
63969520,2,,63969229,9,,"<p>Query 'body' is not for any kind of operations, no concatenation, no evaluation, no string literals etc.</p>&#xA;<p>You must pass ready, prepared earlier, string as variable.</p>&#xA;<pre><code>variables: {&#xA;  domain: &quot;some domain&quot;,&#xA;  hash: `%${someHashVariable}%`&#xA;}&#xA;&#xA;// in query simply &#xA;// ...  hashtag: {_ilike: $hash}&#xA;</code></pre>&#xA;",6124657,,6124657,2020-09-19 13:55:06,2020-09-19 13:55:06,"",,0,6,0,2020-09-19 13:49:19
63981784,1,63994902,,0,1201,"<p>I'm using the official <code>graphene</code> package in my python project. I have a huge nested JSON data that comes from a running Docker container inspect command and I want to get some fields from that. I can select all those fields each by each and adding them to a dictionary like this:</p>&#xA;<pre><code>def ContainerConfigs(configs):&#xA;    data = {}&#xA;    data['Command'] = configs['Args'][-1]&#xA;    data['Hostname'] = configs['Config']['Hostname']&#xA;    data['Image'] = configs['Config']['Image']&#xA;    data['Distro'] = configs['Config']['Labels']['org.label-schema.name']&#xA;    data['WorkDir'] = configs['Config']['WorkingDir']&#xA;    data['IPAddress'] = configs['NetworkSettings']['Networks']['bridge']['IPAddress']&#xA;&#xA;    return data&#xA;</code></pre>&#xA;<p>But It's a weak solution. I think It can be optimized using GraphQL. There is no server, request, and response. I want to create its <code>Schema</code> class and send the parameters (JSON and Query) and let the function execute that query and turns back the result. Something like this:</p>&#xA;<pre><code>import graphene&#xA;&#xA;# I need to find this part of the code&#xA;# class Schema(..):&#xA;#     ...&#xA;# class Query(...):&#xA;#     ...&#xA;&#xA;def ContainerConfigs(configs, query):&#xA;    schema = graphene.Schema(query=Query)&#xA;    # I need to find a way to pass the configs (Json data) to the Query class to&#xA;    # execute the query_string on the data&#xA;    query_string = &quot;&quot;&quot;&#xA;    query {&#xA;        Args&#xA;        Config {&#xA;            Hostname&#xA;            Image&#xA;            WorkingDir&#xA;            Label{&#xA;                org.label-schema.name&#xA;            }&#xA;        }&#xA;        NetworkSettings{&#xA;            Networks{&#xA;                bridge{&#xA;                    IPAddress&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;    &quot;&quot;&quot;&#xA;    result = schema.execute(query_string)&#xA;    &#xA;    return result&#xA;</code></pre>&#xA;",10061193,,10061193,2020-09-20 17:34:59,2020-09-21 14:59:24,Using GraphQL to Filter a JSON Data in Python,<python><json><docker><graphql><graphene-python>,1,5,0,2020-09-20 17:28:14
64004149,1,,,2,2016,<p>I have graphql-yoga(GraphQL server) application running on Elastic Beanstalk with Application Load Balancer. I am able to do Query and Mutation. But when I tried Subscription using GraphQL playground it does not connect with the below error.&#xA;{&#xA;&quot;error&quot;: &quot;Could not connect to WebSocket endpoint wss://domainname.com/subscriptions. Please check if the endpoint URL is correct.&quot;&#xA;}</p>&#xA;<p>I checked the app is working fine local and also in Heroku dyno.&#xA;I checked the AWS CloudWatch logs. The request is logged with [0mGET /subscriptions [33m404 [0m3.860 ms - 152[0m</p>&#xA;,7730521,,,,2020-11-30 17:12:03,graphql subscription Could not connect to websocket endpoint at elastic beanstalk,<amazon-ec2><graphql><amazon-elastic-beanstalk><aws-application-load-balancer><graphql-subscriptions>,2,0,0,2020-09-22 06:24:19
64018044,1,,,0,173,"<p>I have a problem where my local dev the schema serves fine, but in the docker container I've build from a yarn 2 nested hierarchy it's not serving the schema, queries appear to work fine. I imagine this is something not being copied to the right place, or run from the right place but I'm not certain what it might be. No Errors that I can see in the logs, but we might not be catching them someplace. here's the request/response.</p>&#xA;<pre><code>* Preparing request to http://localhost:4000/&#xA;* Current time is 2020-09-22T21:45:08.957Z&#xA;* Using libcurl/7.69.1 OpenSSL/1.1.1g zlib/1.2.11 brotli/1.0.7 libidn2/2.1.1 libssh2/1.9.0 nghttp2/1.41.0&#xA;* Using default HTTP version&#xA;* Disable timeout&#xA;* Enable automatic URL encoding&#xA;* Enable SSL validation&#xA;* Enable cookie sending with jar of 0 cookies&#xA;* Too old connection (2410 seconds), disconnect it&#xA;* Connection 47 seems to be dead!&#xA;* Closing connection 47&#xA;*   Trying ::1:4000...&#xA;* Connected to localhost (::1) port 4000 (#48)&#xA;&#xA;&gt; POST / HTTP/1.1&#xA;&gt; Host: localhost:4000&#xA;&gt; User-Agent: insomnia/2020.4.0&#xA;&gt; Content-Type: application/json&#xA;&gt; Accept: */*&#xA;&gt; Content-Length: 1765&#xA;&#xA;| {&quot;query&quot;:&quot;\n    query IntrospectionQuery {\n      __schema {\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          description\n          locations\n          args {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      description\n      fields(includeDeprecated: true) {\n        name\n        description\n        args {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        description\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      description\n      type { ...TypeRef }\n      defaultValue\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  &quot;,&quot;operationName&quot;:&quot;IntrospectionQuery&quot;}&#xA;&#xA;* upload completely sent off: 1765 out of 1765 bytes&#xA;* Mark bundle as not supporting multiuse&#xA;&#xA;&lt; HTTP/1.1 400 Bad Request&#xA;&lt; X-Powered-By: Express&#xA;&lt; Vary: Origin&#xA;&lt; Access-Control-Allow-Credentials: true&#xA;&lt; Content-Type: application/json; charset=utf-8&#xA;&lt; Content-Length: 292&#xA;&lt; ETag: W/&quot;124-3pl/vJTvcH05VKWfKO4DAa/Thmw&quot;&#xA;&lt; Date: Tue, 22 Sep 2020 21:45:08 GMT&#xA;&lt; Connection: keep-alive&#xA;&#xA;&#xA; * Received 292 B chunk&#xA; * Connection #48 to host localhost left intact&#xA;</code></pre>&#xA;",206466,,206466,2020-09-22 21:49:35,2020-09-22 22:20:41,How does Apollo Server serve up its schema?,<typescript><graphql><apollo-server>,1,0,0,2020-09-22 21:41:05
64018423,2,,64018044,1,,"<p>From the <a href=""https://www.apollographql.com/docs/apollo-server/api/apollo-server/#options"" rel=""nofollow noreferrer"">docs</a>:</p>&#xA;<blockquote>&#xA;<p><code>introspection</code>: If true, enables schema introspection by clients.</p>&#xA;<p>The default value is true, unless the NODE_ENV environment variable is set to production.</p>&#xA;</blockquote>&#xA;<p>If your <code>NODE_ENV</code> environment variable is set to <code>production</code>, you need to ensure you explicitly set <code>introspection</code> to <code>true</code>. This is also true for the <code>playground</code> option.</p>&#xA;",6024220,,,,2020-09-22 22:20:41,"",,0,2,0,2020-09-22 22:20:41
64081387,1,,,0,886,"<p>I know that the question was asked a lot, but the existing answers didn't help me. Whenever I try to start my server, I get this error:</p>&#xA;<pre><code>[nodemon] 2.0.4&#xA;[nodemon] to restart at any time, enter `rs`&#xA;[nodemon] watching path(s): *.*&#xA;[nodemon] watching extensions: js,graphql&#xA;[nodemon] starting `babel-node src/index.js`&#xA;The server is up!&#xA;Error: Cannot use GraphQLNonNull &quot;[User]!&quot; from another module or realm.&#xA;&#xA;Ensure that there is only one instance of &quot;graphql&quot; in the node_modules&#xA;directory. If different versions of &quot;graphql&quot; are the dependencies of other&#xA;relied on modules, use &quot;resolutions&quot; to ensure only one version is installed.&#xA;&#xA;https://yarnpkg.com/en/docs/selective-version-resolutions&#xA;&#xA;Duplicate &quot;graphql&quot; modules cannot be used at the same time since different&#xA;versions may have different capabilities and behavior. The data from one&#xA;version used in the function from another could produce confusing and&#xA;spurious results.&#xA;    at instanceOf (/Users/yildirim/Desktop/backend/node_modules/graphql-binding/node_modules/graphql/jsutils/instanceOf.js:28:13)&#xA;    at isNonNullType (/Users/yildirim/Desktop/backend/node_modules/graphql-binding/node_modules/graphql/type/definition.js:194:34)&#xA;    at isWrappingType (/Users/yildirim/Desktop/backend/node_modules/graphql-binding/node_modules/graphql/type/definition.js:364:30)&#xA;    at Object.getNamedType (/Users/yildirim/Desktop/backend/node_modules/graphql-binding/node_modules/graphql/type/definition.js:423:12)&#xA;    at buildInfoFromFragment (/Users/yildirim/Desktop/backend/node_modules/graphql-binding/src/info.ts:105:21)&#xA;    at Object.buildInfo (/Users/yildirim/Desktop/backend/node_modules/graphql-binding/src/info.ts:36:12)&#xA;    at Prisma.Delegate.delegateToSchema (/Users/yildirim/Desktop/backend/node_modules/graphql-binding/src/Delegate.ts:159:18)&#xA;    at Prisma.&lt;anonymous&gt; (/Users/yildirim/Desktop/backend/node_modules/graphql-binding/src/Delegate.ts:65:17)&#xA;    at step (/Users/yildirim/Desktop/backend/node_modules/graphql-binding/dist/Delegate.js:32:23)&#xA;    at Object.next (/Users/yildirim/Desktop/backend/node_modules/graphql-binding/dist/Delegate.js:13:53)&#xA;</code></pre>&#xA;<p>Writing &quot;resolutions&quot; to the &quot;package.json&quot; file didn't help me either. So it sounds like a version conflict issue here.</p>&#xA;<p>this is my package.json file:</p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;backend&quot;,&#xA;  &quot;version&quot;: &quot;1.0.0&quot;,&#xA;  &quot;description&quot;: &quot;&quot;,&#xA;  &quot;main&quot;: &quot;index.js&quot;,&#xA;  &quot;scripts&quot;: {&#xA;    &quot;start&quot;: &quot;nodemon src/index.js --ext js,graphql --exec babel-node&quot;,&#xA;    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,&#xA;    &quot;get-schema&quot;: &quot;graphql-codegen --config codegen.yml&quot;&#xA;  },&#xA;  &quot;keywords&quot;: [],&#xA;  &quot;author&quot;: &quot;&quot;,&#xA;  &quot;license&quot;: &quot;ISC&quot;,&#xA;  &quot;devDependencies&quot;: {&#xA;    &quot;@graphql-codegen/cli&quot;: &quot;1.17.8&quot;,&#xA;    &quot;nodemon&quot;: &quot;^2.0.4&quot;,&#xA;    &quot;@graphql-codegen/typescript-document-nodes&quot;: &quot;1.17.8&quot;,&#xA;    &quot;@graphql-codegen/introspection&quot;: &quot;1.17.8&quot;&#xA;  },&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@graphql-codegen/schema-ast&quot;: &quot;^1.17.8&quot;,&#xA;    &quot;babel-cli&quot;: &quot;^6.26.0&quot;,&#xA;    &quot;babel-plugin-transform-object-rest-spread&quot;: &quot;^6.26.0&quot;,&#xA;    &quot;babel-preset-env&quot;: &quot;^1.7.0&quot;,&#xA;    &quot;core-util-is&quot;: &quot;^1.0.2&quot;,&#xA;    &quot;graphql-cli&quot;: &quot;^4.0.0&quot;,&#xA;    &quot;graphql-tools&quot;: &quot;^6.2.3&quot;,&#xA;    &quot;graphql-yoga&quot;: &quot;^1.18.3&quot;,&#xA;    &quot;prisma-binding&quot;: &quot;^2.3.16&quot;,&#xA;    &quot;uuid&quot;: &quot;^8.3.0&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I really do not know how to continue.&#xA;Can anyone help me? thanks in advance! :)</p>&#xA;",10959044,,,,2020-09-26 18:50:23,"Cannot use GraphQLNonNull ""[User]!"" from another module or realm",<node.js><npm><graphql><backend><prisma>,0,2,0,2020-09-26 18:50:23
64100566,2,,64100162,1,,"<p>According to the <a href=""https://github.com/gatsbyjs/gatsby-source-wordpress-experimental/blob/master/docs/plugin-options.md#excludefieldnames-array"" rel=""nofollow noreferrer"">documentation</a> you can pass an array to exclude the field names like:</p>&#xA;<pre><code>{&#xA;  resolve: `gatsby-source-wordpress-experimental`,&#xA;    options: {&#xA;        excludeFieldNames: [`tag1`, `tag2`],&#xA;  },&#xA;},&#xA;</code></pre>&#xA;<p>Besides, <code>excludedRoutes</code> is a configuration only allowed in <a href=""https://www.gatsbyjs.com/plugins/gatsby-source-wordpress/"" rel=""nofollow noreferrer""><code>gatsby source-wordpress</code></a>, not in the experimental version.</p>&#xA;",5585371,,5585371,2020-09-28 12:09:31,2020-09-28 12:09:31,"",,0,2,0,2020-09-28 10:38:05
64104646,2,,64054089,1,,"<p><a href=""https://github.com/apollographql/apollo-client/pull/7065"" rel=""nofollow noreferrer"">Inheritance of type and field policies</a> is coming in the next minor version of <code>@apollo/client</code>, v3.3!</p>&#xA;<p>You can try it out now by installing <code>@apollo/client@3.3.0-beta.5</code>.</p>&#xA;<p>To stay up to date on the progress of the v3.3 release, see <a href=""https://github.com/apollographql/apollo-client/pull/7015"" rel=""nofollow noreferrer"">this pull request</a>.</p>&#xA;",128454,,,,2020-09-28 14:56:48,"",,0,1,0,2020-09-28 14:56:48
64125547,1,,,2,1425,"<p>I deployed a simple apollo grapqhl server to heroku (<a href=""http://filex-database.herokuapp.com"" rel=""nofollow noreferrer"">http://filex-database.herokuapp.com</a>) but when I try to access the playground on my main machine the playground doesn't load and gets stuck at Loading Screen. The playground loads perfectly when I run the server locally.</p>&#xA;<p>The same heroku server works fine if I access it from my laptop though (and even another browser in my machine).</p>&#xA;<p>Maybe it's something to do with Chrome. But I don´t know where to start debugging.</p>&#xA;",3440297,,,,2022-10-29 09:28:11,Graphql playground stuck at loading when accessing my server in heroku,<google-chrome><heroku><apollo-server><graphiql>,1,0,0,2020-09-29 18:28:44
64127230,1,64130352,,0,432,"<p>I am trying to get course data using graphql, but server is always returning <code>null</code> as a response This is my code in file <code>server.js</code> :</p>&#xA;<pre><code>var express=require('express');&#xA;const { graphqlHTTP } = require('express-graphql')&#xA;var {buildSchema}=require('graphql');&#xA;&#xA;//graphql schema&#xA;var schema=buildSchema(`&#xA;type Query {&#xA;    course(id: Int!): Course&#xA;    courses(topic:String!):[Course]&#xA;&#xA;}&#xA;type Course {&#xA;    id: Int&#xA;    title: String&#xA;    author: String&#xA;    description:String&#xA;    topic:String&#xA;    url: String&#xA;}&#xA;`);&#xA;&#xA;var coursesData = [&#xA;    {&#xA;        id: 1,&#xA;        title: 'The Complete Node.js Developer Course',&#xA;        author: 'Andrew Mead, Rob Percival',&#xA;        description: 'Learn Node.js by building real-world applications with Node, Express, MongoDB, Mocha, and more!',&#xA;        topic: 'Node.js',&#xA;        url: 'https://codingthesmartway.com/courses/nodejs/'&#xA;    },&#xA;    {&#xA;        id: 2,&#xA;        title: 'Node.js, Express &amp; MongoDB Dev to Deployment',&#xA;        author: 'Brad Traversy',&#xA;        description: 'Learn by example building &amp; deploying real-world Node.js applications from absolute scratch',&#xA;        topic: 'Node.js',&#xA;        url: 'https://codingthesmartway.com/courses/nodejs-express-mongodb/'&#xA;    },&#xA;    {&#xA;        id: 3,&#xA;        title: 'JavaScript: Understanding The Weird Parts',&#xA;        author: 'Anthony Alicea',&#xA;        description: 'An advanced JavaScript course for everyone! Scope, closures, prototypes, this, build your own framework, and more.',&#xA;        topic: 'JavaScript',&#xA;        url: 'https://codingthesmartway.com/courses/understand-javascript/'&#xA;    }&#xA;]&#xA;&#xA;//root resolver&#xA;var root= {&#xA;    course:getCourse,&#xA;    courses:getCourses&#xA;};&#xA;&#xA;&#xA;var getCourse= function (args){&#xA;    var id=args.id;&#xA;    console.log(&quot;delila&quot;)&#xA;    return coursesData.filter(course=&gt;{&#xA;        return course.id==id&#xA;    })[0]&#xA;&#xA;}&#xA;var getCourses = function(args){&#xA;    if(args.topic){&#xA;        var topic=args.topic;&#xA;        return coursesData.filter(course=&gt;&#xA;            course.topic===topic&#xA;        );&#xA;&#xA;    }&#xA;    else return coursesData&#xA;    &#xA;}&#xA;//create an experess server and graphql endpoint&#xA;var app=express();&#xA;app.use('/graphql', graphqlHTTP({&#xA;    schema: schema,&#xA;    rootValue:root,&#xA;    graphiql:true&#xA;}));&#xA;app.listen(4000,()=&gt;console.log(&quot;delila express graphql server running on localhost 4000&quot;))&#xA;</code></pre>&#xA;<p>When I go to <code>localhost:4000/graphql</code> to get data I am using</p>&#xA;<pre><code>query getSingleCourse($courseID: Int !){&#xA;  course(id:$courseID){&#xA;    title&#xA;    author&#xA;    description&#xA;    url&#xA;    topic&#xA;  }&#xA;}&#xA;&#xA;{&#xA;  &quot;courseID&quot;: 3&#xA;}&#xA;</code></pre>&#xA;<p>But I am constantly getting result <code>null</code>. Look at image&#xA;<a href=""https://i.stack.imgur.com/uiDnE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uiDnE.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Anyone idea why is happening this? Server should return course with <code>id 3</code> but obviously there is something that I am missing</p>&#xA;",9616405,,6463558,2020-09-30 02:54:34,2020-09-30 03:18:13,Graphql query is always returning null,<node.js><express><graphql><express-graphql>,1,1,0,2020-09-29 20:32:42
64131230,2,,64119385,6,,"<ul>&#xA;<li>apollo-boost</li>&#xA;</ul>&#xA;<p>Apollo Boost includes some packages that we think are essential to developing with Apollo Client. Here's what's in the box:</p>&#xA;<ul>&#xA;<li><code>apollo-client</code>: Where all the magic happens</li>&#xA;<li><code>apollo-cache-inmemory</code>: Our recommended cache</li>&#xA;<li><code>apollo-link-http</code>: An Apollo Link for remote data fetching</li>&#xA;<li><code>apollo-link-error</code>: An Apollo Link for error handling</li>&#xA;<li><code>graphql-tag</code>: Exports the gql function for your queries &amp; mutations</li>&#xA;</ul>&#xA;<p>The awesome thing about Apollo Boost is that you don't have to set any of this up yourself! Just specify a few options if you'd like to use these features and we'll take care of the rest. For a full list of available options, please refer to the Apollo Boost configuration options documentation.</p>&#xA;<p>see <a href=""https://www.npmjs.com/package/apollo-boost#whats-in-apollo-boost"" rel=""noreferrer"">What's in Apollo Boost</a></p>&#xA;<ul>&#xA;<li>apollo-client</li>&#xA;</ul>&#xA;<p>The old version(below 3.x) apollo client</p>&#xA;<ul>&#xA;<li>@apollo/client</li>&#xA;</ul>&#xA;<p>The latest version(3.x+) apollo client published as <a href=""https://docs.npmjs.com/using-npm/scope.html"" rel=""noreferrer"">Scoped packages</a></p>&#xA;<p>Check the official <a href=""https://codesandbox.io/s/get-started-coinbase-client-73r10"" rel=""noreferrer"">get started example</a></p>&#xA;",6463558,,6463558,2020-09-30 05:10:01,2020-09-30 05:10:01,"",,0,1,0,2020-09-30 05:04:52
64138196,1,64138942,,-1,2955,"<p>I am trying to display one course and to update course topic, using graphql and apollo-server.&#xA;This is my code:</p>&#xA;<pre><code>const { ApolloServer, gql } = require('apollo-server');&#xA;&#xA;var typeDefs=gql`&#xA;input CourseInput {&#xA;    id: Int&#xA;    title: String&#xA;    author: String&#xA;    description: String&#xA;    topic: String&#xA;    url: String&#xA;}&#xA;type Course {&#xA;    id: Int&#xA;    title: String&#xA;    author: String&#xA;    description:String&#xA;    topic:String&#xA;    url: String&#xA;}&#xA;type Query {&#xA;    course(id: Int!): Course&#xA;    courses(topic:String!):[Course]&#xA;    allcourses:[Course]&#xA;    hello: String&#xA;&#xA;}&#xA;type Mutation {&#xA;    updateCourseTopic(id: Int !, topic: String !): Course&#xA;    createCourse(input: CourseInput): [Course]&#xA;    deleteCourse(id: Int !): [Course]&#xA;}&#xA;`;&#xA;&#xA;var coursesData = [&#xA;    {&#xA;        id: 1,&#xA;        title: 'The Complete Node.js Developer Course',&#xA;        author: 'Andrew Mead, Rob Percival',&#xA;        description: 'Learn Node.js by building real-world applications with Node, Express, MongoDB, Mocha, and more!',&#xA;        topic: 'Node.js',&#xA;        url: 'https://codingthesmartway.com/courses/nodejs/'&#xA;    },&#xA;    {&#xA;        id: 2,&#xA;        title: 'Node.js, Express &amp; MongoDB Dev to Deployment',&#xA;        author: 'Brad Traversy',&#xA;        description: 'Learn by example building &amp; deploying real-world Node.js applications from absolute scratch',&#xA;        topic: 'Node.js',&#xA;        url: 'https://codingthesmartway.com/courses/nodejs-express-mongodb/'&#xA;    },&#xA;    {&#xA;        id: 3,&#xA;        title: 'JavaScript: Understanding The Weird Parts',&#xA;        author: 'Anthony Alicea',&#xA;        description: 'An advanced JavaScript course for everyone! Scope, closures, prototypes, this, build your own framework, and more.',&#xA;        topic: 'JavaScript',&#xA;        url: 'https://codingthesmartway.com/courses/understand-javascript/'&#xA;    }&#xA;]&#xA;var getCourses = function(args){&#xA;    console.log(&quot;delila2&quot;)&#xA;    if(args.topic){&#xA;        console.log(&quot;delila2&quot;)&#xA;        var topic=args.topic;&#xA;        return coursesData.filter(course=&gt;&#xA;            course.topic===topic&#xA;        );&#xA;&#xA;    }&#xA;    else return coursesData&#xA;    &#xA;}&#xA;&#xA;var resolvers= {&#xA;Query:{&#xA;  course:getcourse,&#xA;  courses:getCourses,&#xA;  allcourses:getAllCourses,&#xA;  hello: ()=&gt;&quot;Delila&quot;&#xA;},&#xA;Mutation: {&#xA;  updateCourseTopic:updateCourseTopic,&#xA;  createCourse:createCourse,&#xA;  deleteCourse: deleteCourse,&#xA;}&#xA;};&#xA;&#xA;function getcourse(args){&#xA;    var id=args.id;&#xA;    return coursesData.filter(course=&gt;{&#xA;        return course.id==id&#xA;    })[0]&#xA; &#xA;&#xA;}&#xA;function getAllCourses(){&#xA;    console.log(&quot;all courses&quot;)&#xA;    return coursesData;&#xA;}&#xA;function updateCourseTopic (id, topic){&#xA;  console.log(&quot;id je&quot; ,id)&#xA;    coursesData.map(course=&gt;{&#xA;        if(course.id===id){&#xA;            course.topic=topic;&#xA;            return course&#xA;        }&#xA;    });&#xA;    console.log(&quot;svi&quot;, coursesData);&#xA;    return coursesData.filter(course=&gt;course.id===id)[0]&#xA;    &#xA;}&#xA;function createCourse(input){&#xA;    var id = 4;&#xA;    coursesData = [...coursesData, input.input];&#xA;    console.log(&quot;input je&quot; ,input.input)&#xA;    console.log(&quot;coursesdata&quot; ,coursesData)&#xA;    //coursesData[id] = input;&#xA;    return coursesData;&#xA;&#xA;}&#xA;function deleteCourse(args){&#xA;    var id=args;&#xA;    coursesData.splice(id, 1);&#xA;    return coursesData;&#xA;&#xA;}&#xA;&#xA;// The ApolloServer constructor requires two parameters: your schema&#xA;// definition and your set of resolvers.&#xA;const server = new ApolloServer({ typeDefs, resolvers });&#xA;&#xA;// The `listen` method launches a web server.&#xA;server.listen().then(({ url }) =&gt; {&#xA;  console.log(`  Server ready at ${url}`);&#xA;});&#xA;</code></pre>&#xA;<p>On my localhost server <code>http://localhost:4000</code> using graphql and this code I am trying to fetch data to get one specific course and to update course topic.</p>&#xA;<p>Get single course:</p>&#xA;<pre><code>query getSingleCourse($courseID: Int !){&#xA;  course(id:$courseID){&#xA;    title&#xA;    author&#xA;    description&#xA;    url&#xA;    topic&#xA;  }&#xA;}&#xA;{&#xA;  &quot;courseID&quot;: 3&#xA;}&#xA;</code></pre>&#xA;<p>Update course topic:</p>&#xA;<pre><code>mutation updateCourse($id: Int!, $topic: String !) {&#xA;  updateCourseTopic(id:$id, topic:$topic)&#xA;  {&#xA;    title&#xA;    url&#xA;    description&#xA;    author&#xA;    topic&#xA;  }&#xA;}&#xA;{&#xA;  &quot;id&quot;: 1,&#xA;  &quot;topic&quot;: &quot;something new&quot;&#xA;}&#xA;</code></pre>&#xA;<p>The problem is  with <code>getSingleCourse</code> is that</p>&#xA;<blockquote>&#xA;<p>&quot;errors&quot;: [&#xA;{&#xA;&quot;message&quot;: &quot;Cannot read property 'id' of undefined&quot;,&#xA;&quot;locations&quot;: [&#xA;{&#xA;&quot;line&quot;: 2,&#xA;&quot;column&quot;: 3&#xA;}&#xA;],&#xA;&quot;path&quot;: [&#xA;&quot;course&quot;&#xA;],&#xA;&quot;extensions&quot;: {&#xA;&quot;code&quot;: &quot;INTERNAL_SERVER_ERROR&quot;,&#xA;&quot;exception&quot;: {&#xA;&quot;stacktrace&quot;: [&#xA;&quot;TypeError: Cannot read property 'id' of undefined&quot;,&#xA;&quot;    at getcourse (/Users/admin/newProject/server4.js:116:17)&quot;,</p>&#xA;</blockquote>&#xA;<p>with updateCourse is similar that id and topic are undefined</p>&#xA;<blockquote>&#xA;<p>{   &quot;data&quot;: {&#xA;&quot;updateCourseTopic&quot;: null   } }</p>&#xA;</blockquote>&#xA;<p>You can look at image&#xA;<a href=""https://i.stack.imgur.com/Iiico.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Iiico.png"" alt=""enter image description here"" /></a>&#xA;<a href=""https://i.stack.imgur.com/NhEhe.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NhEhe.png"" alt=""enter image description here"" /></a>&#xA;Anyone help would be appreciated.</p>&#xA;<p>Thank you</p>&#xA;",9616405,,,,2022-08-26 10:05:54,"Graphql is returning ""Cannot read property 'id' of undefined"", [apollo server, node.js]",<node.js><graphql><apollo-server>,2,4,0,2020-09-30 13:03:31
64167725,2,,64146383,0,,<p>By upgrading amplify to the latest version this issue was fixed:</p>&#xA;<pre><code>amplify -v: 4.29.4&#xA;</code></pre>&#xA;,240363,,,,2020-10-02 07:33:33,"",,0,0,0,2020-10-02 07:33:33
64176527,1,,,2,751,"<p>From the Hasura documentation is not possible to order by nested array relationships, the thing is I'm using that relation to get only one element from the array (e.g. the latest entry in that table). There is any way to transform that array (with one element) into an object to be able to perform order by in the root query?. Example:</p>&#xA;<pre><code>query GetMachinesQuery {&#xA;    machines {&#xA;        machine_id&#xA;        machine_detail&#xA;        last_upgrade: upgrades(order_by: { created_at: desc }, limit: 1) {&#xA;            upgrade_state {&#xA;                updated_at&#xA;                status&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Do I have any way to sort the root query by any of the fields (e.g. status) present in the last_upgrade? The possible workaround is create a view  (doing the joins to get latest upgrade info for each machine) and then I can use an object relationship, any other alternatives with hasura?</p>&#xA;<p>Thank you !</p>&#xA;",14381303,,1364771,2020-10-02 20:36:57,2021-06-11 08:19:55,Hasura GraphQL query order by nested array relationships (with only one element)?,<graphql><hasura>,0,3,0,2020-10-02 18:23:29
64192670,2,,63232200,0,,"<p>Starting with upcoming JMeter 5.3.1 or 5.4 you’ll be able to use the GraphQL Http Request.</p>&#xA;<p>Until it is released you can try a nightly build:</p>&#xA;<ul>&#xA;<li><a href=""https://ci.apache.org/projects/jmeter/nightlies/"" rel=""nofollow noreferrer"">https://ci.apache.org/projects/jmeter/nightlies/</a></li>&#xA;</ul>&#xA;<p>See:</p>&#xA;<ul>&#xA;<li><a href=""https://github.com/apache/jmeter/pull/627"" rel=""nofollow noreferrer"">https://github.com/apache/jmeter/pull/627</a></li>&#xA;</ul>&#xA;<p><a href=""https://i.stack.imgur.com/9UDCJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9UDCJ.png"" alt=""GraphQL query"" /></a></p>&#xA;",460802,,460802,2020-10-04 16:01:25,2020-10-04 16:01:25,"",,0,0,0,2020-10-04 08:42:36
64225682,1,,,0,196,"<p>I would like to have a monitoring on my Hasura API on Google Cloud Run. Actually I'm using the monitoring of Google Cloud but It is not really perfect. I have the count of 200 code request. But I want for example, the number of each query / mutation endpoint request.</p>&#xA;<p>I want :</p>&#xA;<pre><code>count 123 : /graphql/user&#xA;count 234 :/graphql/profil&#xA;</code></pre>&#xA;<p>I have :</p>&#xA;<pre><code>count 357 : /graphql&#xA;</code></pre>&#xA;<p>If you have an idea.&#xA;Thanks</p>&#xA;",13278106,,,,2020-10-06 15:00:32,Hasura on Google Cloud Run - Monitoring,<google-cloud-platform><graphql><monitoring><google-cloud-run><hasura>,1,3,0,2020-10-06 12:19:57
64245338,1,,,1,76,"<p>I need to be able to use server resolvers in development env, but in all other evs, I want to use the client resolvers. I was checking if there is an elegant way to skip the @client directive in development.</p>&#xA;<p>For now, it seems that the simplest is to wrap the query that is passed into <code>gql</code> with a custom function that would remove the default @client directive.</p>&#xA;",11292998,,,,2020-10-07 13:43:07,Switch conditionally between client and server resolvers with @client directive,<graphql><apollo><apollo-client><apollo-server><gql>,0,1,0,2020-10-07 13:43:07
64285438,1,64287254,,0,870,"<p>I'm reconfiguring my NextJS/Apollo app to allow for SSG with GraphQL API routes, and I'm using <a href=""https://github.com/vercel/next.js/tree/canary/examples/api-routes-apollo-server-and-client"" rel=""nofollow noreferrer"">this official NextJS starter example</a> as a base for the client config.</p>&#xA;<p>I've run into an interesting issue though in my own app, so I've went back to starter example and tried to reproduce it, and was able to. The issue is that without any context object passed into the query resolvers, everything works fine (in the playground and on the client). However, when you introduce a context object and pass it to the resolvers, it works fine in the playground but the context object is <code>undefined</code> when fired from the client. This is the code from the official NextJS starter example, I'll comment where I've added anything.</p>&#xA;<p><code>graphql.js</code></p>&#xA;<pre><code>import { ApolloServer } from &quot;apollo-server-micro&quot;;&#xA;import { schema } from &quot;../../apollo/schema&quot;;&#xA;&#xA;const apolloServer = new ApolloServer({&#xA;    schema,&#xA;    context: {        // &#xA;        foo: &quot;bar&quot;,   // this is the context object I've added&#xA;    },                //&#xA;});&#xA;&#xA;export const config = {&#xA;    api: {&#xA;        bodyParser: false,&#xA;    },&#xA;};&#xA;&#xA;export default apolloServer.createHandler({ path: &quot;/api/graphql&quot; });&#xA;</code></pre>&#xA;<p><code>typedefs.js</code></p>&#xA;<pre><code>import { gql } from '@apollo/client'&#xA;&#xA;export const typeDefs = gql`&#xA;  type User {&#xA;    id: ID!&#xA;    name: String!&#xA;    status: String!&#xA;  }&#xA;&#xA;  type Query {&#xA;    viewer: User&#xA;  }&#xA;`&#xA;</code></pre>&#xA;<p><code>schema.js</code></p>&#xA;<pre><code>import { makeExecutableSchema } from 'graphql-tools'&#xA;import { typeDefs } from './type-defs'&#xA;import { resolvers } from './resolvers'&#xA;&#xA;export const schema = makeExecutableSchema({&#xA;  typeDefs,&#xA;  resolvers,&#xA;})&#xA;</code></pre>&#xA;<p><code>resolvers.js</code></p>&#xA;<pre><code>export const resolvers = {&#xA;    Query: {&#xA;        viewer: (_parent, _args, context, _info) =&gt; {&#xA;            console.log(&quot;context&quot;, context); // console log check that I've added&#xA;            return { id: 1, name: &quot;John Smith&quot;, status: &quot;cached&quot; };&#xA;        },&#xA;    },&#xA;};&#xA;</code></pre>&#xA;<p>When I run this in the GraphQL playground and query the API, it gives me the correct response, and in my terminal console it returns the context <code>foo: bar</code> object from the console log, so in the server the context object is being passed correctly. However, when I visit the index page in the browser, which is this:</p>&#xA;<p><code>index.js</code></p>&#xA;<pre><code>import gql from &quot;graphql-tag&quot;;&#xA;import Link from &quot;next/link&quot;;&#xA;import { useQuery } from &quot;@apollo/client&quot;;&#xA;import { initializeApollo } from &quot;../apollo/client&quot;;&#xA;&#xA;const ViewerQuery = gql`&#xA;    query ViewerQuery {&#xA;        viewer {&#xA;            id&#xA;            name&#xA;            status&#xA;        }&#xA;    }&#xA;`;&#xA;&#xA;const Index = () =&gt; {&#xA;    const {&#xA;        data: { viewer },&#xA;    } = useQuery(ViewerQuery);&#xA;&#xA;    return (&#xA;        &lt;div&gt;&#xA;            You're signed in as {viewer.name} and you're {viewer.status} goto{&quot; &quot;}&#xA;            &lt;Link href=&quot;/about&quot;&gt;&#xA;                &lt;a&gt;static&lt;/a&gt;&#xA;            &lt;/Link&gt;{&quot; &quot;}&#xA;            page.&#xA;        &lt;/div&gt;&#xA;    );&#xA;};&#xA;&#xA;export async function getStaticProps() {&#xA;    const apolloClient = initializeApollo();&#xA;&#xA;    await apolloClient.query({&#xA;        query: ViewerQuery,&#xA;    });&#xA;&#xA;    return {&#xA;        props: {&#xA;            initialApolloState: apolloClient.cache.extract(),&#xA;        },&#xA;    };&#xA;}&#xA;&#xA;export default Index;&#xA;</code></pre>&#xA;<p>...the viewer name and viewer status are rendered, so the query is actually happening, but in the console, the <code>context</code> object console log is returning <code>undefined</code>. So when used in the client, the <code>context</code> is being lost somehow. I find this interesting, since this is an official NextJS starter example, and unless they've set up the client to not accept context in the resolvers, I can't see what the problem is. And if it <em>is</em> the case that the client is not set up to accept context, is there any other official examples with a client setup that does?</p>&#xA;<p>This is a long question now, but here is the <code>client.js</code> setup:</p>&#xA;<pre><code>import { useMemo } from &quot;react&quot;;&#xA;import { ApolloClient, InMemoryCache } from &quot;@apollo/client&quot;;&#xA;&#xA;let apolloClient;&#xA;&#xA;function createIsomorphLink() {&#xA;    if (typeof window === &quot;undefined&quot;) {&#xA;        const { SchemaLink } = require(&quot;@apollo/client/link/schema&quot;);&#xA;        const { schema } = require(&quot;./schema&quot;);&#xA;        return new SchemaLink({ schema });&#xA;    } else {&#xA;        const { HttpLink } = require(&quot;@apollo/client/link/http&quot;);&#xA;        return new HttpLink({&#xA;            uri: &quot;http://localhost:3000/api/graphql&quot;,&#xA;            credentials: &quot;same-origin&quot;,&#xA;        });&#xA;    }&#xA;}&#xA;&#xA;function createApolloClient() {&#xA;    return new ApolloClient({&#xA;        ssrMode: typeof window === &quot;undefined&quot;,&#xA;        link: createIsomorphLink(),&#xA;        cache: new InMemoryCache(),&#xA;    });&#xA;}&#xA;&#xA;export function initializeApollo(initialState = null) {&#xA;    const _apolloClient = apolloClient ?? createApolloClient();&#xA;&#xA;    // If your page has Next.js data fetching methods that use Apollo Client, the initial state&#xA;    // gets hydrated here&#xA;    if (initialState) {&#xA;        _apolloClient.cache.restore(initialState);&#xA;    }&#xA;    // For SSG and SSR always create a new Apollo Client&#xA;    if (typeof window === &quot;undefined&quot;) return _apolloClient;&#xA;    // Create the Apollo Client once in the client&#xA;    if (!apolloClient) apolloClient = _apolloClient;&#xA;&#xA;    return _apolloClient;&#xA;}&#xA;&#xA;export function useApollo(initialState) {&#xA;    const store = useMemo(() =&gt; initializeApollo(initialState), [initialState]);&#xA;    return store;&#xA;}&#xA;</code></pre>&#xA;<p>I implore anyone to clone this official repo and see if they can figure out how to get context working in the client, or if anyone knows why this client setup isn't working for context and knows a client setup that does accept resolver context, I would appreciate it. This problem has cost me two days now!</p>&#xA;",1684334,,,,2020-10-09 21:00:10,GraphQL resolver context working in Playground but not client in official NextJS starter example,<javascript><graphql><next.js><apollo>,1,0,0,2020-10-09 18:26:19
64293710,2,,64282254,0,,"<p>500 level errors are server side issues. In this case, your server is the one indicating that there is a timeout, so there is nothing to do on the client side. You'll have to check your server configuration and figure it out on that end.</p>&#xA;",8218010,,,,2020-10-10 13:00:27,"",,0,0,0,2020-10-10 13:00:27
64313240,2,,64293094,2,,"<p>It seems that your issue is related to <a href=""https://github.com/nodejs/node/issues/35572"" rel=""nofollow noreferrer"">this</a>. Currently there's an issue with Node.js version <em>12.19.0</em> that Heroku uses and there's a dependency named <code>undici</code> that's causing the issue. It should work if you try it with Node 14 in Heroku.</p>&#xA;",8874351,,,,2020-10-12 07:17:26,"",,0,1,0,2020-10-12 07:17:26
64313389,1,,,0,178,"<p>I am creating a website with Nuxt, graphql and strapi.&#xA;Locally with works well. I then deploy the backend in heuroku with mlab addon and also all good.&#xA;Went to netlify with the heuroku link and deploy it there( follow a tutorial). It said deployed successful  but when I open the page it says page not found. I went to see the deploy log and there is an error:</p>&#xA;<pre><code>Error: Network error: request to http://localhost:1337/graphql failed, reason: connect ECONNREFUSED 127.0.0.1:1337&#xA;10:16:00 AM:     at new ApolloError (/opt/build/repo/node_modules/apollo-client/bundle.umd.js:92:26)&#xA;10:16:00 AM:     at /opt/build/repo/node_modules/apollo-client/bundle.umd.js:1588:34&#xA;10:16:00 AM:     at /opt/build/repo/node_modules/apollo-client/bundle.umd.js:2008:15&#xA;10:16:00 AM:     at Set.forEach (&lt;anonymous&gt;)&#xA;10:16:00 AM:     at /opt/build/repo/node_modules/apollo-client/bundle.umd.js:2006:26&#xA;10:16:00 AM:     at Map.forEach (&lt;anonymous&gt;)&#xA;10:16:00 AM:     at QueryManager.broadcastQueries (/opt/build/repo/node_modules/apollo-client/bundle.umd.js:2004:20)&#xA;10:16:00 AM:     at /opt/build/repo/node_modules/apollo-client/bundle.umd.js:1483:29&#xA;10:16:00 AM:     at processTicksAndRejections (internal/process/task_queues.js:97:5)&#xA;&#xA;</code></pre>&#xA;<p>Any idea how to fix this? I search but couldn't find any answer that helped me.&#xA;Thank you</p>&#xA;",9248614,,,,2020-10-15 01:00:10,Cant deploy with Netlify and Stapi and Graphql,<graphql><nuxt.js><backend><netlify><strapi>,1,2,0,2020-10-12 07:29:16
64317716,1,,,0,46,"<p>I'm using this method to fetch list from 8base database, but I want to refetch query again to fetch latest data but not able to recall it again.</p>&#xA;<pre><code>client.query({&#xA;  query: QUERY_HERE&#xA;})&#xA;.then((res) =&gt; {&#xA;  console.log(res, 'test')&#xA;})&#xA;</code></pre>&#xA;",8864093,,,,2020-10-21 18:23:58,How to refetch query again with 8base,<reactjs><react-apollo>,2,0,0,2020-10-12 12:16:09
64335909,1,,,0,97,"<p>I am working with a full stack GraqlQL based application. The server is working fine and now I need to try out the first queries and mutations on the client side. For some reason, the &quot;monitoring&quot; route, and everything that follows it, is not displayed. Below I will show the files that I have edited or created.</p>&#xA;<p>items.graphql:</p>&#xA;<pre><code>query {&#xA;  items {&#xA;    _id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>environment.js:</p>&#xA;<pre><code>'use strict';&#xA;&#xA;module.exports = function(environment) {&#xA;  let ENV = {&#xA;    apollo: {&#xA;      apiURL: 'http://localhost:5000/graphql'&#xA;    },&#xA;    modulePrefix: 'client',&#xA;    environment,&#xA;    rootURL: '/',&#xA;    locationType: 'auto',&#xA;    EmberENV: {&#xA;      FEATURES: {&#xA;        //&#xA;      },&#xA;      EXTEND_PROTOTYPES: {&#xA;        Date: false&#xA;      }&#xA;    },&#xA;&#xA;    APP: {&#xA;      //&#xA;    }&#xA;  };&#xA;&#xA;  if (environment === 'development') {&#xA;    //&#xA;  }&#xA;&#xA;  if (environment === 'test') {&#xA;    ENV.locationType = 'none';&#xA;&#xA;    ENV.APP.LOG_ACTIVE_GENERATION = false;&#xA;    ENV.APP.LOG_VIEW_LOOKUPS = false;&#xA;&#xA;    ENV.APP.rootElement = '#ember-testing';&#xA;    ENV.APP.autoboot = false;&#xA;  }&#xA;&#xA;  if (environment === 'production') {&#xA;    //&#xA;  }&#xA;&#xA;  return ENV;&#xA;};&#xA;</code></pre>&#xA;<p>monitoring.js (route):</p>&#xA;<pre><code>import Route from '@ember/routing/route';&#xA;import { queryManager } from 'ember-apollo-client';&#xA;import query from 'client/gql/items.graphql';&#xA;&#xA;export default Route.extend({&#xA;  apollo: queryManager(),&#xA;&#xA;  model() {&#xA;    return this.apollo.watchQuery({ query }, 'items');&#xA;  }&#xA;});&#xA;</code></pre>&#xA;<p>monitoring.hbs:</p>&#xA;<pre><code>&lt;h3&gt;Monitoring&lt;/h3&gt;&#xA;&#xA;&lt;div&gt;&#xA;  {{#each model as |item|}}&#xA;    &lt;h3&gt;{{item.name}}&lt;/h3&gt;&#xA;  {{/each}}&#xA;&lt;/div&gt;&#xA;&#xA;{{outlet}}&#xA;</code></pre>&#xA;<p>Thank you for attention!</p>&#xA;<p>I see this error:</p>&#xA;<pre><code>Uncaught (in promise) Error: fetch is not defined - maybe your browser targets are not covering everything you need?&#xA;</code></pre>&#xA;",11553898,,356849,2020-10-13 14:15:58,2020-10-13 16:20:21,How to connect to Graphql server using Ember-Apollo?,<javascript><ember.js><graphql><apollo><ember-cli>,1,10,0,2020-10-13 13:05:32
64343008,1,64358752,,0,732,"<p>My current setup is:</p>&#xA;<pre><code>import {&#xA;  ApolloClient,&#xA;  ApolloProvider,&#xA;  gql,&#xA;  HttpLink,&#xA;} from '@apollo/client';&#xA;import fetch from 'node-fetch';&#xA;import { Agent } from 'https';&#xA;...&#xA;&#xA;const agent = new Agent({&#xA;  rejectUnauthorized: false,&#xA;});&#xA;&#xA;const httpLink = new HttpLink({&#xA;  uri: process.env.REACT_APP_GRAPHQL_URL,&#xA;  fetch: fetch,&#xA;  fetchOptions: {&#xA;    agent: agent&#xA;  },&#xA;});&#xA;...&#xA;const client = new ApolloClient({&#xA;  link: httpLink,&#xA;  cache: cache,&#xA;  typeDefs,&#xA;  connectToDevTools: true,&#xA;});&#xA;...&#xA;ReactDOM.render(&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;App /&gt;&#xA;    &lt;/ApolloProvider&gt;,&#xA;  document.getElementById('root')&#xA;);&#xA;</code></pre>&#xA;<p>When I <code>useQuery</code> I get <code>createHttpLink.ts:121 POST https://*****.test/wp/graphql net::ERR_CERT_INVALID</code>. From what I can tell this is the current way to use a self-signed certificate but it doesn't seem to work. i can't find any documentation otherwise. What's wrong with my current implementation that seems to be ignoring the reject?</p>&#xA;",1305871,,,,2020-10-14 17:41:55,rejectUnauthorized: false not being recognized in ApolloClient,<graphql><create-react-app><apollo-client>,1,3,0,2020-10-13 20:53:09
64358752,2,,64343008,1,,"<p>This is not a complete answer but I'm marking this as solved anyway. It has nothing to do with Apollo Client or node-fetch, I was testing this in Chrome(MacOS to be specific) and <em>it's</em> rejecting the self-signed certificate. I'm just continuing my development with Firefox for now as it will accept the certificate. The agent property still shows up as empty in dev tools, so that is perhaps a red herring? Not sure but I can continue for now.</p>&#xA;",1305871,,,,2020-10-14 17:41:55,"",,0,0,0,2020-10-14 17:41:55
64363420,2,,64313389,0,,"<p>It should be referencing the Heroku url. You need to change your database.js for Heroku. <a href=""https://strapi.io/documentation/3.0.0-beta.x/deployment/heroku.html"" rel=""nofollow noreferrer"">https://strapi.io/documentation/3.0.0-beta.x/deployment/heroku.html</a></p>&#xA;",10803206,,,,2020-10-15 01:00:10,"",,0,0,0,2020-10-15 01:00:10
64398890,2,,63108264,0,,"<p>After going through lots of articles, I discovered <a href=""https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/"" rel=""nofollow noreferrer"">Dockerizing Django with Postgres, Gunicorn, and Nginx</a>, and the section on <a href=""https://testdriven.io/blog/dockerizing-django-with-postgres-gunicorn-and-nginx/#nginx"" rel=""nofollow noreferrer"">Nginx</a> made me realize that the only thing that was wrong was the fact that I didn't expose port 8000 internally to other docker services.</p>&#xA;<p>In my <code>docker-compose</code> file, the web service was supposed to have the following, which resolved the issue.</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>expose:&#xA;    - 8000&#xA;</code></pre>&#xA;",7426855,,1164465,2022-09-15 20:41:27,2022-09-15 20:41:27,"",,0,0,0,2020-10-17 04:05:38
64421566,1,,,2,5181,"<p>Here are my two files. I am trying to mimic the results of this sandbox with my own data: <a href=""https://codesandbox.io/embed/stoic-haze-ispw2?codemirror=1"" rel=""nofollow noreferrer"">https://codesandbox.io/embed/stoic-haze-ispw2?codemirror=1</a></p>&#xA;<p>Essentially I can see the data was fetched and cache updated, but my component ResourceSection list of data isn't updated.</p>&#xA;<p>[UPDATE] Made some major changes based on feedback. Queries were removed from components and I made a skipLimitPagination function. The query works but my cache is not updating or placing the data inside.</p>&#xA;<pre><code>import React from &quot;react&quot;;&#xA;import { BrowserRouter as Router } from &quot;react-router-dom&quot;;&#xA;import &quot;./App.css&quot;;&#xA;import { ApolloClient, InMemoryCache, ApolloProvider } from &quot;@apollo/client&quot;;&#xA;import Home from &quot;./screens&quot;;&#xA;import { skipLimitPagination } from './utils/utilities'&#xA;&#xA;const client = new ApolloClient({&#xA;  uri: `https://graphql.contentful.com/content/v1/spaces/${process.env.REACT_APP_SPACE_ID}/?access_token=${process.env.REACT_APP_CDA_TOKEN}`,&#xA;  cache: new InMemoryCache({&#xA;   typePolicies: {&#xA;     Query: {&#xA;       fields: {&#xA;         resourceCollection: {items: skipLimitPagination()}&#xA;       }&#xA;     }&#xA;   }&#xA;  }),&#xA;});&#xA;&#xA;function App() {&#xA;  return (&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;Router&gt;&#xA;        &lt;Home /&gt;&#xA;      &lt;/Router&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  );&#xA;}&#xA;&#xA;export default App;&#xA;</code></pre>&#xA;<pre><code>import React, { useState } from &quot;react&quot;;&#xA;import Navbar from &quot;../components/Navbar&quot;;&#xA;import MobileNav from &quot;../components/MobileNav&quot;;&#xA;import HeroSection from &quot;../components/HeroSection&quot;;&#xA;import FeaturesSection from &quot;../components/FeatureSection&quot;;&#xA;import Split from &quot;../components/SplitWindow&quot;;&#xA;import Loading from &quot;../components/Loading&quot;;&#xA;import { useQuery, gql } from &quot;@apollo/client&quot;;&#xA;import Resource from &quot;../components/ResourceSection&quot;;&#xA;import Contact from &quot;../components/ContactSection&quot;;&#xA;import Footer from &quot;../components/Footer&quot;;&#xA;&#xA;const MASS_COLLECTION = gql`&#xA;query($skip: Int) {&#xA;  resourceCollection(limit: 5, skip: $skip ) {&#xA; items {&#xA;   type&#xA;   category&#xA;   title&#xA;   link&#xA;   bgColor&#xA;   color&#xA; }&#xA;},&#xA;splitSectionCollection(order: splitId_ASC) {&#xA; items {&#xA;   splitId&#xA;   lightBg&#xA;   left&#xA;   lightText&#xA;   darkText&#xA;   image {&#xA;     url&#xA;   }&#xA;   alt&#xA;   heading&#xA;   content {&#xA;     json&#xA;   }&#xA; }&#xA;} &#xA;&#xA;}&#xA;`;&#xA;&#xA;const Home = () =&gt; {&#xA;  const [isOpen, setIsOpen] = useState(false);&#xA;&#xA;  const { loading, error, data, fetchMore } = useQuery(MASS_COLLECTION, {&#xA;    variables: {&#xA;      skip: 0,&#xA;    },&#xA;  });&#xA;&#xA;  if (loading) return &lt;Loading /&gt;;&#xA;  if (error) return &lt;p&gt;Error&lt;/p&gt;;&#xA;&#xA;  const toggle = () =&gt; {&#xA;    setIsOpen(!isOpen);&#xA;  };&#xA;  return (&#xA;    &lt;&gt;&#xA;      &lt;MobileNav isOpen={isOpen} toggle={toggle} /&gt;&#xA;      &lt;Navbar toggle={toggle} /&gt;&#xA;      &lt;HeroSection /&gt;&#xA;      &lt;FeaturesSection /&gt;&#xA;      {data.splitSectionCollection.items.map((item) =&gt; {&#xA;        return &lt;Split item={item} key={item.splitId} /&gt;;&#xA;      })}&#xA;      &lt;Resource data={data.resourceCollection.items} fetchMore={fetchMore}/&gt;&#xA;      &lt;Contact /&gt;&#xA;      &lt;Footer /&gt;&#xA;    &lt;/&gt;&#xA;  );&#xA;};&#xA;&#xA;export default Home;&#xA;&#xA;</code></pre>&#xA;<pre><code>import React, { useState, useCallback } from &quot;react&quot;;&#xA;import {&#xA;  ResourceContainer,&#xA;  ResourcesWrapper,&#xA;  ResourceRow,&#xA;  TextWrapper,&#xA;  Column1,&#xA;  Heading,&#xA;  Content,&#xA;  Column2,&#xA;  ImgWrap,&#xA;  Img,&#xA;  Form,&#xA;  FormSelect,&#xA;  FormOption,&#xA;  // LinkContainer,&#xA;  // LinkWrapper,&#xA;  // LinkIcon,&#xA;  // LinkTitle,&#xA;  // LoadMore,&#xA;  // ButtonWrapper,&#xA;} from &quot;./ResourceElements&quot;;&#xA;&#xA;const ResourceSection = ({ data, fetchMore }) =&gt; {&#xA;  console.log(data)&#xA;&#xA;  const handleClick = useCallback(() =&gt; {&#xA;    fetchMore({&#xA;      variables: {&#xA;        skip:&#xA;          data &#xA;            ? data.length&#xA;            : 0,&#xA;      },&#xA;    });&#xA;  }, [fetchMore, data]);&#xA;&#xA;  return (&#xA;    &lt;ResourceContainer lightBg={true} id=&quot;resource&quot;&gt;&#xA;      &lt;ResourcesWrapper&gt;&#xA;        &lt;ResourceRow left={true}&gt;&#xA;          &lt;Column1&gt;&#xA;            &lt;TextWrapper&gt;&#xA;              &lt;Heading lightText={false}&gt;Resources&lt;/Heading&gt;&#xA;              &lt;Content darkText={true} className=&quot;split_cms&quot;&gt;&#xA;                Cyber Streets strives in sharing education resources to all.&#xA;                Below you can find an exhaustive list of resources covering&#xA;                everything from computer programming to enterneurship. &quot;Be&#xA;                knowledgeable in your niche, provide some information free of&#xA;                charge, and share other trustworthy people's free resources&#xA;                whenever possible...&quot; - Heather Hart&#xA;              &lt;/Content&gt;&#xA;            &lt;/TextWrapper&gt;&#xA;          &lt;/Column1&gt;&#xA;          &lt;Column2&gt;&#xA;            &lt;ImgWrap&gt;&#xA;              &lt;Img&#xA;                src=&quot;/assets/images/Resource.svg&quot;&#xA;                alt=&quot;Two looking at computer screen svg&quot;&#xA;              /&gt;&#xA;            &lt;/ImgWrap&gt;&#xA;          &lt;/Column2&gt;&#xA;        &lt;/ResourceRow&gt;&#xA;        &lt;Form action=&quot;&quot;&gt;&#xA;          &lt;FormSelect&#xA;          // onChange={(e) =&gt; {&#xA;          //   setCategory(e.target.value);&#xA;          //   // setLimit(5);&#xA;          // }}&#xA;          &gt;&#xA;            &lt;FormOption value=&quot;&quot;&gt;Filter by category&lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;MEDIA&quot;&gt;Media&lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;TEDX&quot;&gt;Ted Talks&lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;INTERNET SAFETY/AWARENESS&quot;&gt;&#xA;              Internet safety &amp;amp; awareness&#xA;            &lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;K-12/COMPUTER SCIENCE&quot;&gt;&#xA;              k-12 &amp;amp; computer science&#xA;            &lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;CODING&quot;&gt;Programming&lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;CYBER/IT OPERATIONS&quot;&gt;&#xA;              Cyber &amp;and; IT operations&#xA;            &lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;ROBOTICS&quot;&gt;Robotics&lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;CLOUD&quot;&gt;Cloud&lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;SCIENCE&quot;&gt;Science&lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;PROFESSIONAL DEVELOPMENT&quot;&gt;&#xA;              Professional Development&#xA;            &lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;3D PRINTING&quot;&gt;3D Printing&lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;ART&quot;&gt;Art&lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;MOOC&quot;&gt;Massive Open Online Courses&lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;GAMES&quot;&gt;Games &amp;amp; Challenges&lt;/FormOption&gt;&#xA;            &lt;FormOption value=&quot;OTHER&quot;&gt;Other&lt;/FormOption&gt;&#xA;          &lt;/FormSelect&gt;&#xA;        &lt;/Form&gt;&#xA;        &lt;div className=&quot;list&quot;&gt;&#xA;          {data.map((resource, i) =&gt; (&#xA;            &lt;div key={resource.title} className=&quot;item&quot;&gt;&#xA;              {resource.title}&#xA;            &lt;/div&gt;&#xA;          ))}&#xA;        &lt;/div&gt;&#xA;&#xA;        &lt;button className=&quot;button&quot; onClick={handleClick}&gt;&#xA;          Fetch!&#xA;        &lt;/button&gt;&#xA;      &lt;/ResourcesWrapper&gt;&#xA;    &lt;/ResourceContainer&gt;&#xA;  );&#xA;};&#xA;&#xA;export default ResourceSection;&#xA;&#xA;</code></pre>&#xA;<p>My cache after clicking the fetch more button. Two separate resource collections, should this be combined? I got this information through apollo chrome plugin.</p>&#xA;<p>I am using the contenful graphql API:</p>&#xA;<p>Here is my resource collection args and fields:</p>&#xA;<pre><code>ResourceCollection&#xA;ARGS&#xA;skip: Int = 0&#xA;limit: Int = 100&#xA;preview: Boolean&#xA;locale: String&#xA;where: ResourceFilter&#xA;order: [ResourceOrder]&#xA;&#xA;Fields&#xA;total: Int!&#xA;skip: Int!&#xA;limit: Int!&#xA;items: [Resource]!&#xA;</code></pre>&#xA;<pre><code>export function skipLimitPagination(keyArgs) {&#xA;    return {&#xA;      keyArgs,&#xA;      merge(existing, incoming, { args }) {&#xA;        const merged = existing ? existing.slice(0) : [];&#xA;        if (args) {&#xA;          const { skip = 0 } = args;&#xA;          for (let i = 0; i &lt; incoming.length; ++i) {&#xA;            merged[skip + i] = incoming[i];&#xA;          }&#xA;        } else {&#xA;  &#xA;          merged.push.apply(merged, incoming);&#xA;        }&#xA;        return merged;&#xA;      },&#xA;    };&#xA;  }&#xA;</code></pre>&#xA;<p>I've been working on this issue for three days straight. I tried the older way with update query but it wasn't working as intended so now I am trying to the most update apollo technique. Please help :(</p>&#xA;",14464927,,14464927,2020-10-22 23:32:14,2022-11-14 22:00:11,"Data not merging, Apollo 3 pagination with field policies",<graphql><apollo><apollo-client>,3,1,0,2020-10-19 05:22:45
64467936,1,,,4,6616,"<p>the context from getStaticProps is undefined.&#xA;If I console.log the context I get:&#xA;<code>{ locales: undefined, locale: undefined }</code></p>&#xA;<p>I need the information from the url...&#xA;If I try the same with getServerSideProps it is working.&#xA;I'm using apollo with nextjs like the example: <a href=""https://github.com/vercel/next.js/tree/canary/examples/with-apollo"" rel=""nofollow noreferrer"">https://github.com/vercel/next.js/tree/canary/examples/with-apollo</a></p>&#xA;<pre><code>export async function getStaticProps(context) {&#xA;    const apolloClient = initializeApollo();&#xA;&#xA;    await apolloClient.query({&#xA;        query: PAGE,&#xA;        variables: variables,&#xA;    });&#xA;&#xA;    console.log(context);&#xA;    // { locales: undefined, locale: undefined }&#xA;    // !!! need the info from the URL !!!&#xA;&#xA;    return {&#xA;        props: {&#xA;            initialApolloState: apolloClient.cache.extract(),&#xA;        },&#xA;        revalidate: 1,&#xA;    };&#xA;}&#xA;</code></pre>&#xA;<p>Thx for any help.</p>&#xA;",12744347,,,,2020-10-22 00:01:43,Nextjs: context undefined in getStaticProps,<next.js><apollo-client>,1,0,0,2020-10-21 16:30:25
64518178,2,,64517948,2,,"<p><code>It was a version problem of the graphql-tools</code>. Checking the <code>node_modules/graphql-tools/package.json</code> file I observed that I was using version 4. I found <a href=""https://github.com/apollographql/apollo-server/pull/4007"" rel=""nofollow noreferrer"">here</a> that version 4 had problems with the directives and the use of version 5 was recommended. This is what I did:</p>&#xA;<pre><code>npm i graphql-tools@5.0.0&#xA;</code></pre>&#xA;<p>I restarted the server and refresh the <code>Playground page</code> and voila, I already have the <code>@include</code> directive and all the others available.</p>&#xA;",1555250,,,,2020-10-24 21:28:44,"",,0,0,0,2020-10-24 21:28:44
64556440,2,,64552949,0,,"<p>Well that's that one solved. Turns out it's Sanity's fault.</p>&#xA;<p><a href=""https://i.stack.imgur.com/yCNEK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yCNEK.png"" alt=""enter image description here"" /></a></p>&#xA;",13010984,,,,2020-10-27 14:19:21,"",,0,0,0,2020-10-27 14:19:21
64557654,1,64602578,,0,837,"<p>I have an Apollo GraphQL server using the <code>apollo-server-plugin-response-cache</code> plugin and I need to determine whether or not I'm going to write to the cache based on incoming parameters. I have the plugin set up and I'm using the <code>shouldWriteToCache</code> hook. I can print out the <code>GraphQLRequestContext</code> object that gets passed into the hook, and I can see the full request source, but <code>request.variables</code> is empty. Other than parsing the <code>query</code> itself, how can I access the actual params for the resolver in this hook? (In the example below, I need the value of <code>param2</code>.)</p>&#xA;<p>Apollo Server:</p>&#xA;<pre><code>new ApolloServer({&#xA;    introspection: true,&#xA;    playground: true,&#xA;    subscriptions: false,&#xA;    typeDefs,&#xA;    resolvers,&#xA;    cacheControl: {&#xA;        defaultMaxAge: 60&#xA;    },&#xA;    plugins: [&#xA;        apolloServerPluginResponseCache({&#xA;            cache,  // This is a &quot;apollo-server-cache-redis&quot; instance&#xA;            shouldWriteToCache: (requestContext) =&gt; {&#xA;                &#xA;                // I get a lot of info here, including the source query, but not the &#xA;                // parsed out query variables&#xA;                console.log(requestContext.request);&#xA;                &#xA;                // What I want to do here is:&#xA;                return !context.request.variables.param2&#xA;                // but `variables` is empty, and I can't see that value parsed anywhere else&#xA;            }&#xA;        })&#xA;    ]&#xA;})&#xA;</code></pre>&#xA;<p>Here is my resolver:</p>&#xA;<pre><code>export async function exapi(variables, context) {&#xA;  // in here I use context.param1 and context.param2&#xA;  // ...&#xA;}&#xA;</code></pre>&#xA;<p>I have also tried:</p>&#xA;<pre><code>export async function exapi(variables, { param1, param2 }) {&#xA;  // ...&#xA;}&#xA;</code></pre>&#xA;<p>Here is what I get logged out from the code above:</p>&#xA;<pre><code>{&#xA;  query: '{\n' +&#xA;    '  exapi(param1: &quot;value1&quot;, param2: true) {\n' +&#xA;    '    records\n' +&#xA;    '  }\n' +&#xA;    '}\n',&#xA;  operationName: null,&#xA;  variables: {},            // &lt;-- this is empty?! How can I get param2's value??&#xA;  extensions: undefined,&#xA;  http: Request {&#xA;    size: 0,&#xA;    timeout: 0,&#xA;    follow: 20,&#xA;    compress: true,&#xA;    counter: 0,&#xA;    agent: undefined,&#xA;    [Symbol(Body internals)]: { body: null, disturbed: false, error: null },&#xA;    [Symbol(Request internals)]: {&#xA;      method: 'POST',&#xA;      redirect: 'follow',&#xA;      headers: [Headers],&#xA;      parsedURL: [Url],&#xA;      signal: null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1985406,,1985406,2020-10-30 14:59:51,2020-10-30 14:59:51,Apollo GraphQL Server - Access query params from cache plugin,<node.js><typescript><graphql><apollo-server>,1,0,0,2020-10-27 15:26:20
64620772,2,,64620133,0,,<p>Separate problems</p>&#xA;<ul>&#xA;<li><p>test API using graphiql/playground (and of course query variables) to check required arg/variables format (for custom date/type types/scalars)</p>&#xA;</li>&#xA;<li><p>... then check if your client (react app) sends variables in required format ... explore browsers dev tools network request body - compare it detaily with playground</p>&#xA;</li>&#xA;</ul>&#xA;,6124657,,,,2020-10-31 10:33:04,"",,0,0,0,2020-10-31 10:33:04
64652407,1,,,3,273,"<p>it's been around two weeks that I'm dealing with this problem.&#xA;at first, it did not work at all. After spending several days searching for a solution I could fix it by adding these lines of code to my index.js file.</p>&#xA;<pre><code>XMLHttpRequest = GLOBAL.originalXMLHttpRequest ?&#xA;    GLOBAL.originalXMLHttpRequest :&#xA;    GLOBAL.XMLHttpRequest;&#xA;    global.Blob = null&#xA;</code></pre>&#xA;<p>After that, it worked fine in the development mode and everything was fine.&#xA;But as soon as I released my app I realized it does not work in the release build!</p>&#xA;<p>I'm kind of sure it's a problem with fetch API that apollo uses behind the scenes. But I don't know what to do to fix it.</p>&#xA;<p>I also tried to run a new project and paste my code on it, but no luck.</p>&#xA;<p>this is my apollo client code:</p>&#xA;<pre><code>import ApolloClient from 'apollo-client'&#xA;import Statics from './statics'&#xA;import {HttpLink} from 'apollo-link-http'&#xA;import { InMemoryCache } from '@apollo/client';&#xA;&#xA;const customFetch = (uri, options) =&gt; {&#xA;  return fetch(uri, options)&#xA;  .then(response =&gt; {&#xA;    if (response.status &gt;= 500) {  // or handle 400 errors&#xA;      return Promise.reject(response.status);&#xA;    }&#xA;    return response;&#xA;  });&#xA;};&#xA;export const client = new ApolloClient({&#xA;  link: new HttpLink({uri:`${Statics.baseUrl}/graphql`, fetch:customFetch}) ,&#xA;  cache: new InMemoryCache(),&#xA;    }); &#xA;</code></pre>&#xA;",11237189,,,,2022-08-11 22:08:50,Apollo GraphQL Client does not work on release build in react native,<react-native><graphql><fetch><apollo><fetch-api>,1,0,0,2020-11-02 19:52:46
64674029,1,,,0,193,"<p>Following the steps described in the official documentation to use <code>vue-apollo 4</code> and the composition <code>API of vue 3</code>, everything works fine when I <code>Firefox</code> but it does not happen when I use <code>Chrome</code>, in <code>Chrome</code>, I get an error like this fetch error,&#xA;<a href=""https://i.stack.imgur.com/hZnQm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hZnQm.png"" alt=""chrome-network-tab"" /></a></p>&#xA;<p>both when making queries and mutations, but in <code>Firefox</code>, all the responses are obtained correctly as seen in the network tabs <code>Firefox</code> response network tab:&#xA;<a href=""https://i.stack.imgur.com/Pfl98.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Pfl98.png"" alt=""firefow-network-tab"" /></a></p>&#xA;<p>and <code>Chrome</code> response network tab:&#xA;<a href=""https://i.stack.imgur.com/nmTzn.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nmTzn.png"" alt=""chrome-response-network-tab"" /></a></p>&#xA;<p>Expected behaviour: Full response in <code>Chrome</code> as the result in <code>Firefox</code>&#xA;Resulting behaviour: Failed to get data on <code>Chrome</code> (empty network tab)</p>&#xA;<p>To try a little more, I have followed the example of Natalia Tepluhina described here <a href=""https://dev.to/n_tepluhina/vue-apollo-v4-the-first-look-c32"" rel=""nofollow noreferrer"">https://dev.to/n_tepluhina/vue-apollo-v4-the-first-look-c32</a> and tested in both browsers, <code>Chrome/Chromium</code> and also <code>Firefox</code> and the result is the same in <code>Firefox</code> it works but not in <code>Chrome</code></p>&#xA;<p>Try in older projects with older versions of <code>vue</code> and <code>vue-apollo</code> with the same result, error in <code>Chrome</code></p>&#xA;<pre><code>Chrome version:  86.0.4240.111 (x86_64)&#xA;Mozilla Firefox: version 82.0 (x86_64)&#xA;</code></pre>&#xA;",14229426,,1294283,2020-11-04 07:42:27,2020-11-04 07:42:27,Vue-apollo 4 does not work properly fetch data with chrome,<javascript><google-chrome><graphql><vuejs3><vue-apollo>,0,2,0,2020-11-04 03:53:42
64674731,1,65282960,,0,742,"<p>I am attempting to write a HackerNews clone using a graphql api written in Go with the graph-gophers package as the backend, and a Vuejs app with the apollo graphql-client as the frontend. Relevant Github Repos <a href=""https://github.com/leggettc18/hackernews-clone-api"" rel=""nofollow noreferrer"">Backend</a>    <a href=""https://github.com/leggettc18/hackernews-vue-apollo"" rel=""nofollow noreferrer"">Frontend</a>.</p>&#xA;<p>I have recently implemented subscription functionality and it does appear to work, but whenever I upvote a link I get a nasty error in the javascript console, the full text for which is below.</p>&#xA;<pre><code>Observable.js?5234:65 Uncaught Invariant Violation: Store error: the application attempted to write an object with no provided id but the store already contains an id of Link:10 for this object. The selectionSet that was trying to be written is:&#xA;{&quot;kind&quot;:&quot;Field&quot;,&quot;name&quot;:{&quot;kind&quot;:&quot;Name&quot;,&quot;value&quot;:&quot;link&quot;},&quot;arguments&quot;:[],&quot;directives&quot;:[],&quot;selectionSet&quot;:{&quot;kind&quot;:&quot;SelectionSet&quot;,&quot;selections&quot;:[{&quot;kind&quot;:&quot;Field&quot;,&quot;name&quot;:{&quot;kind&quot;:&quot;Name&quot;,&quot;value&quot;:&quot;votes&quot;},&quot;arguments&quot;:[],&quot;directives&quot;:[],&quot;selectionSet&quot;:{&quot;kind&quot;:&quot;SelectionSet&quot;,&quot;selections&quot;:[{&quot;kind&quot;:&quot;Field&quot;,&quot;name&quot;:{&quot;kind&quot;:&quot;Name&quot;,&quot;value&quot;:&quot;id&quot;},&quot;arguments&quot;:[],&quot;directives&quot;:[]},{&quot;kind&quot;:&quot;Field&quot;,&quot;name&quot;:{&quot;kind&quot;:&quot;Name&quot;,&quot;value&quot;:&quot;user&quot;},&quot;arguments&quot;:[],&quot;directives&quot;:[],&quot;selectionSet&quot;:{&quot;kind&quot;:&quot;SelectionSet&quot;,&quot;selections&quot;:[{&quot;kind&quot;:&quot;Field&quot;,&quot;name&quot;:{&quot;kind&quot;:&quot;Name&quot;,&quot;value&quot;:&quot;id&quot;},&quot;arguments&quot;:[],&quot;directives&quot;:[]},{&quot;kind&quot;:&quot;Field&quot;,&quot;name&quot;:{&quot;kind&quot;:&quot;Name&quot;,&quot;value&quot;:&quot;__typename&quot;}}]}},{&quot;kind&quot;:&quot;Field&quot;,&quot;name&quot;:{&quot;kind&quot;:&quot;Name&quot;,&quot;value&quot;:&quot;__typename&quot;}}]}},{&quot;kind&quot;:&quot;Field&quot;,&quot;name&quot;:{&quot;kind&quot;:&quot;Name&quot;,&quot;value&quot;:&quot;__typename&quot;}}]}}&#xA;    at new InvariantError (webpack-internal:///./node_modules/ts-invariant/lib/invariant.esm.js:16:28)&#xA;    at invariant (webpack-internal:///./node_modules/ts-invariant/lib/invariant.esm.js:28:15)&#xA;    at StoreWriter.writeFieldToStore (webpack-internal:///./node_modules/apollo-cache-inmemory/lib/bundle.esm.js:680:166)&#xA;    at eval (webpack-internal:///./node_modules/apollo-cache-inmemory/lib/bundle.esm.js:576:27)&#xA;    at Array.forEach (&lt;anonymous&gt;)&#xA;    at StoreWriter.writeSelectionSetToStore (webpack-internal:///./node_modules/apollo-cache-inmemory/lib/bundle.esm.js:567:33)&#xA;    at StoreWriter.writeFieldToStore (webpack-internal:///./node_modules/apollo-cache-inmemory/lib/bundle.esm.js:665:22)&#xA;    at eval (webpack-internal:///./node_modules/apollo-cache-inmemory/lib/bundle.esm.js:576:27)&#xA;    at Array.forEach (&lt;anonymous&gt;)&#xA;    at StoreWriter.writeSelectionSetToStore (webpack-internal:///./node_modules/apollo-cache-inmemory/lib/bundle.esm.js:567:33)&#xA;WriteError @ bundle.esm.js?d5b7:498&#xA;enhanceErrorWithDocument @ bundle.esm.js?d5b7:505&#xA;StoreWriter.writeResultToStore @ bundle.esm.js?d5b7:544&#xA;InMemoryCache.write @ bundle.esm.js?d5b7:875&#xA;eval @ bundle.esm.js?6445:1867&#xA;eval @ bundle.esm.js?6445:1867&#xA;InMemoryCache.performTransaction @ bundle.esm.js?d5b7:943&#xA;DataStore.markMutationResult @ bundle.esm.js?6445:1866&#xA;next @ bundle.esm.js?6445:1011&#xA;notifySubscription @ Observable.js?5234:135&#xA;onNotify @ Observable.js?5234:179&#xA;next @ Observable.js?5234:235&#xA;eval @ bundle.esm.js?6445:866&#xA;next @ bundle.esm.js?6445:866&#xA;notifySubscription @ Observable.js?5234:135&#xA;onNotify @ Observable.js?5234:179&#xA;next @ Observable.js?5234:235&#xA;eval @ bundle.esm.js?8322:76&#xA;setTimeout (async)&#xA;hostReportError @ Observable.js?5234:64&#xA;notifySubscription @ Observable.js?5234:149&#xA;onNotify @ Observable.js?5234:179&#xA;next @ Observable.js?5234:235&#xA;eval @ bundle.esm.js?6445:866&#xA;next @ bundle.esm.js?6445:866&#xA;notifySubscription @ Observable.js?5234:135&#xA;onNotify @ Observable.js?5234:179&#xA;next @ Observable.js?5234:235&#xA;eval @ bundle.esm.js?8322:76&#xA;Promise.then (async)&#xA;eval @ bundle.esm.js?8322:75&#xA;Subscription @ Observable.js?5234:197&#xA;subscribe @ Observable.js?5234:279&#xA;eval @ bundle.esm.js?6445:864&#xA;Subscription @ Observable.js?5234:197&#xA;subscribe @ Observable.js?5234:279&#xA;eval @ bundle.esm.js?6445:1001&#xA;eval @ bundle.esm.js?6445:998&#xA;step @ tslib.es6.js?4d3a:100&#xA;eval @ tslib.es6.js?4d3a:81&#xA;eval @ tslib.es6.js?4d3a:74&#xA;__awaiter @ tslib.es6.js?4d3a:70&#xA;QueryManager.mutate @ bundle.esm.js?6445:950&#xA;ApolloClient.mutate @ bundle.esm.js?6445:2016&#xA;mutate @ vue-apollo.esm.js?ebd5:1286&#xA;voteForLink @ LinkItem.vue?5bee:46&#xA;click @ LinkItem.vue?441e:18&#xA;invokeWithErrorHandling @ vue.esm.js?efeb:1863&#xA;invoker @ vue.esm.js?efeb:2188&#xA;original._wrapper @ vue.esm.js?efeb:7565&#xA;</code></pre>&#xA;<p>I've done enough debugging to confirm that nothing I'm trying to add to the store is missing any ids. I'm not sure what I'm missing here that is causing this error. Everything seems to work but I'd like to know why this error keeps getting thrown.</p>&#xA;",14574929,,,,2020-12-14 02:40:32,Uncaught Invariant Violation: Store error,<go><graphql><store><vue-apollo><graphql-subscriptions>,1,0,0,2020-11-04 05:35:14
64685890,2,,64683218,1,,"<p><strong>I solved the issue !</strong></p>&#xA;<p>I had my bash to automatically update node to the latest version, which in my case was the <strong>15.0.1</strong> (which is including the latest futures). However, it causes some problems when trying to install <strong>NOT</strong> only @apollo/client, but also @material-ui/core, icons and so on...</p>&#xA;<p>So, i switched from my current node version to <strong>14.15.0</strong> (Recommended for most users, as nodejs says) using:</p>&#xA;<pre><code>nvm install 14 &#xA;</code></pre>&#xA;",12169097,,,,2020-11-04 18:40:15,"",,0,0,0,2020-11-04 18:40:15
64708548,2,,60366454,3,,"<p>If you check <a href=""https://github.com/graphql-java-kickstart/graphql-spring-boot/blob/master/README.md"" rel=""nofollow noreferrer"">graphql-spring-boot github README</a>, you'll find out the way to config your graphiql endpoint</p>&#xA;<p>for example like this:</p>&#xA;<pre><code>graphiql:&#xA;    mapping: /graphiql&#xA;    endpoint:&#xA;      graphql: /graphql&#xA;      subscriptions: /subscriptions&#xA;    subscriptions:&#xA;      timeout: 30&#xA;      reconnect: false&#xA;    static:&#xA;      basePath: /&#xA;    enabled: true&#xA;    pageTitle: GraphiQL&#xA;    cdn:&#xA;        enabled: false&#xA;        version: 0.13.0&#xA;    props:&#xA;        resources:&#xA;            query: query.graphql&#xA;            defaultQuery: defaultQuery.graphql&#xA;            variables: variables.graphql&#xA;        variables:&#xA;            editorTheme: &quot;solarized light&quot;&#xA;    headers:&#xA;        Authorization: &quot;Bearer &lt;your-token&gt;&quot;&#xA;</code></pre>&#xA;<p>Since you're using <code>application.properties</code>, all you need to do is changing your properties into this:</p>&#xA;<pre><code>graphiql.enabled=true&#xA;graphiql.endpoint.graphql=/graphql&#xA;graphiql.mapping=graphiql&#xA;</code></pre>&#xA;<p>By adding an extra <code>.graphql</code> behind <code>graphiql.endpoint</code> will fix this problem</p>&#xA;",10550987,,,,2020-11-06 03:42:46,"",,0,0,0,2020-11-06 03:42:46
64728602,2,,64726865,2,,"<p>You need to make sure you're importing <code>SchemaDirectiveVisitor</code> from the right package -- <code>graphql-tools</code> and not <code>apollo-server</code>. Depending on the versions of each package, it's very likely that the <code>SchemaDirectiveVisitor</code> classes exported by each the packages are not compatible with one another.</p>&#xA;",6024220,,,,2020-11-07 14:17:16,"",,0,1,0,2020-11-07 14:17:16
64737625,2,,64732966,0,,"<p>It seems a bug in the current version of Gatsby. Try downgrade the packages to the latest stable working version:</p>&#xA;<pre><code>&quot;gatsby&quot;: &quot;2.20.36&quot;,&#xA;&quot;gatsby-cli&quot;: &quot;^2.12.54&quot;,&#xA;&quot;gatsby-image&quot;: &quot;^2.4.13&quot;,&#xA;&quot;gatsby-plugin-exclude&quot;: &quot;^1.0.2&quot;,&#xA;&quot;gatsby-plugin-google-analytics&quot;: &quot;^2.3.11&quot;,&#xA;&quot;gatsby-plugin-manifest&quot;: &quot;^2.4.18&quot;,&#xA;&quot;gatsby-plugin-offline&quot;: &quot;^3.2.17&quot;,&#xA;&quot;gatsby-plugin-react-helmet&quot;: &quot;^3.3.10&quot;,&#xA;&quot;gatsby-plugin-react-svg&quot;: &quot;^3.0.0&quot;,&#xA;&quot;gatsby-plugin-resolve-src&quot;: &quot;^2.1.0&quot;,&#xA;&quot;gatsby-plugin-sass&quot;: &quot;^2.3.12&quot;,&#xA;&quot;gatsby-plugin-sharp&quot;: &quot;^2.6.19&quot;,&#xA;&quot;gatsby-plugin-use-query-params&quot;: &quot;^1.0.1&quot;,&#xA;&quot;gatsby-source-filesystem&quot;: &quot;^2.3.19&quot;,&#xA;&quot;gatsby-source-graphql&quot;: &quot;^2.6.2&quot;,&#xA;&quot;gatsby-transformer-sharp&quot;: &quot;^2.5.11&quot;,&#xA;</code></pre>&#xA;<p>As shown in this <a href=""https://github.com/gatsbyjs/gatsby/issues/19618"" rel=""nofollow noreferrer"">GitHub thread</a>.</p>&#xA;<p>Remove your <code>package-lock.json</code>, your <code>node_modules</code>, and your cache folder (<code>.cache</code>) and fix the versions to the working ones.</p>&#xA;",5585371,,,,2020-11-08 11:37:57,"",,0,3,0,2020-11-08 11:37:57
64743053,2,,64711076,1,,"<p>I made it using the following launch.json, maybe this helps someone else</p>&#xA;<pre><code>{&#xA;    &quot;version&quot;: &quot;0.2.0&quot;,&#xA;    &quot;configurations&quot;: [&#xA;        {&#xA;          &quot;name&quot;: &quot;Example&quot;,&#xA;          &quot;type&quot;: &quot;node&quot;,&#xA;          &quot;request&quot;: &quot;launch&quot;,&#xA;          &quot;runtimeExecutable&quot;: &quot;node&quot;,&#xA;          &quot;runtimeArgs&quot;: [&quot;--nolazy&quot;, &quot;-r&quot;, &quot;ts-node/register&quot;],&#xA;    &#xA;          &quot;args&quot;: [&quot;src/index.ts&quot;, &quot;--transpile-only&quot;, &quot;hello&quot;],&#xA;          &#xA;          &quot;cwd&quot;: &quot;${workspaceRoot}&quot;,&#xA;          &quot;internalConsoleOptions&quot;: &quot;openOnSessionStart&quot;,&#xA;          &quot;skipFiles&quot;: [&quot;&lt;node_internals&gt;/**&quot;, &quot;node_modules/**&quot;]&#xA;        }&#xA;      ]&#xA;  }&#xA;</code></pre>&#xA;",374179,,,,2020-11-08 21:08:29,"",,0,0,0,2020-11-08 21:08:29
64744566,2,,64701308,14,,"<p>The problem here is certainly with NPM and the packages you are trying to install rather than anything to do with Docker.</p>&#xA;<p>Unfortunately, I am not able to reproduce the exact error that you are facing. That could be because:</p>&#xA;<ul>&#xA;<li>something changed in the time between now and whenever this problem occurred;</li>&#xA;<li>there are some essential details that you are not showing us.</li>&#xA;</ul>&#xA;<p>Either way, there's a general way in which such issues are solved, which should help. But first an explanation.</p>&#xA;<h2>Dependencies, peer dependencies and conflicts</h2>&#xA;<p>NPM's package (dependency) management mechanism allows packages (dependencies) to have:</p>&#xA;<ul>&#xA;<li>(direct) <strong>dependencies</strong> - installed automatically with the package;</li>&#xA;<li><strong>peer dependencies</strong> - have to be manually installed by the consumer of the package.</li>&#xA;</ul>&#xA;<p>However, NPM does <strong>not</strong> allow multiple versions of the same package to coexist.</p>&#xA;<p>Also, as you may know, packages use standard semantic versioning, which means that a major version change indicates a breaking change.</p>&#xA;<p>Due to these two reasons, clashes occur if one package requires dependency A to be v1, while another wants the same dependency A to be v2.</p>&#xA;<h2>NPM v7</h2>&#xA;<p>NPM v7 was recently released and this is the version that current (as of November 2020) <code>node:current</code> images use.</p>&#xA;<p>Probably the biggest changes brought about by NPM7 relate to peer dependencies - NPM should now be able to install them automatically, <em>if possible</em>. <a href=""https://github.com/npm/rfcs/blob/latest/implemented/0025-install-peer-deps.md"" rel=""noreferrer"">Read more here</a>.</p>&#xA;<p>As described in the document, in cases where it's not possible to solve the conflicts, NPM should now throw <em>errors</em> rather than warnings, which is what you are seeing.</p>&#xA;<p>I, on the other hand, only managed to get warnings and no errors using your setup and NPM v7.0.8, and <strong>I don't know why</strong>. The problems reported were essentially the same, however, so the resolution ought to be very similar.</p>&#xA;<h2>How to solve conflicts</h2>&#xA;<p>The only solution that I'm aware of is manual conflict resolution - the developer needs to adjust their dependencies to play along.</p>&#xA;<p>In your specific case the problem seems to be with the <code>graphql</code> package. The latest <code>graphql</code> package is v15, which is also a peer dependency of the latest <code>type-graphql</code> package (v1).</p>&#xA;<p>However, <code>apollo-server-express</code> has a few dependencies, which apparently only support <code>graphql</code> up to and including v14.</p>&#xA;<p>While you wait for <code>apollo-server-express</code> to fully support v15, you may opt for <code>graphql</code> v14 altogether by downgrading the only package that requires v15. So if you change your <code>npm install</code> to this:</p>&#xA;<pre><code>npm install --save cors apollo-server-express express graphql@14 reflect-metadata type-graphql@0 apollo-datasource-rest soap jsonwebtoken&#xA;</code></pre>&#xA;<p>it ought to work... Notice that we are explicitly installing <code>graphql@14</code> and <code>type-graphql@0</code> (yes, version zero).</p>&#xA;<h2>Alternative solution</h2>&#xA;<p>Going to give you some bad advice too. In some cases a missing peer dependency may not be a problem, particularly if you never use the related functionality. In your case, it may be even less of a problem because you <strong>do</strong> have the dependency, just not the required version. It's entirely possible that a wrong version would do just fine. If you feel lucky (or if you're sure of you're doing) and you really wish to proceed with <code>graphql</code> v15, you could either:</p>&#xA;<ul>&#xA;<li>suppress any NPM output to silence the errors;</li>&#xA;<li>downgrade to NPM v6, which works quite differently (although it will still warn you of peer dependency problems).</li>&#xA;</ul>&#xA;<p><strong>Proceed with caution</strong>!</p>&#xA;",3744574,,,,2020-11-09 00:49:52,"",,0,0,0,2020-11-09 00:49:52
64751774,1,64751775,,1,355,"<p>When I add a new React component to my NextJS app (React, TypeScript and GraphQL), my local development environment suddenly breaks with this cryptic error:</p>&#xA;<pre><code>wait  - compiling...&#xA;error - ./node_modules/busboy/lib/main.js:1:0&#xA;Module not found: Can't resolve 'fs'&#xA;null&#xA;</code></pre>&#xA;<p>When I stash my new component, everything works fine. I'm trying to figure out what it is in my new component that's triggering this error.</p>&#xA;<p>Relevant dependencies:</p>&#xA;<ul>&#xA;<li>@apollo/client: ^3.2.5</li>&#xA;<li>apollo-server-micro: ^2.18.2</li>&#xA;<li>graphql: ^15.4.0</li>&#xA;<li>next: 10.0.0</li>&#xA;<li>react: 17.0.1</li>&#xA;<li>react-dom: 17.0.1</li>&#xA;</ul>&#xA;",546967,,,,2022-01-19 03:16:33,error - ./node_modules/busboy/lib/main.js:1:0 Module not found: Can't resolve 'fs',<reactjs><typescript><graphql><next.js><apollo>,1,0,0,2020-11-09 12:33:53
64752262,1,64752978,,1,246,"<p>I am attempting to launch a Dagster pipeline run with the GraphQL API. I have Dagit running locally and a working pipeline that I can trigger via the playground.</p>&#xA;<p>However, I am now trying to trigger the pipeline via GraphQL Playground, available at <code>/graphql</code>.</p>&#xA;<p>I am using the following mutation:</p>&#xA;<pre><code>mutation ExecutePipeline(&#xA;  $repositoryLocationName: String!&#xA;  $repositoryName: String!&#xA;  $pipelineName: String!&#xA;  $runConfigData: RunConfigData!&#xA;  $mode: String!&#xA;)&#xA;</code></pre>&#xA;<p>...and hence am providing the following query params:</p>&#xA;<pre><code>{&#xA;  &quot;repositoryName&quot;: &quot;my_repo&quot;,&#xA;  &quot;repositoryLocationName&quot;: &lt;???&gt;,&#xA;  &quot;pipelineName&quot;: &quot;my_pipeline&quot;,&#xA;  &quot;mode&quot;: &quot;dev&quot;,&#xA;  &quot;runConfigData&quot;: {&lt;MY_RUN_CONFIG&gt;}&#xA;}&#xA;</code></pre>&#xA;<p>I am not sure what value <code>repositoryLocationName</code> should take? I have tried a few but receive the following error:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;launchPipelineExecution&quot;: {&#xA;      &quot;__typename&quot;: &quot;PipelineNotFoundError&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://docs.dagster.io/overview/graphql-api#main"" rel=""nofollow noreferrer"">This</a> is the tutorial I am following.</p>&#xA;",7492289,,,,2021-06-08 11:08:32,What is the value of $repositoryLocationName when running ExecutePipeline in Dagster's GraphQL API?,<graphql><dagster>,2,0,0,2020-11-09 13:06:44
64755278,2,,64613778,3,,"<p>First of all, it appears that Apollo is being started in &quot;production mode&quot; rather than &quot;developpement mode&quot;. By starting it in development mode, Apollo would provide you more detailed error messages. To fix this, start your node process with <code>env.NODE_ENV</code> set to <code>development</code>. Sorry if this is not clear, but I can't be more precise here, as the exact procedure depends on how your application is being started and/or which framework you are using...</p>&#xA;<p>Still, in recent versions, you should have a numeric error code in the error message when run in production mode, such as <code>Invariant Violation: 42</code>. These numeric error codes makes it easier to diagnose problems, even in production mode. Make sure you are using a recent version of @apollo/client (latest is 3.2.5 at the time I'm writing this; see <a href=""https://www.npmjs.com/package/@apollo/client"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/@apollo/client</a>).</p>&#xA;<p>Now, regarding the error itself... The full error message is most likely <code>Invariant Violation: You must wrap the query string in a &quot;gql&quot; tag.</code> It is due to the fact that you are providing an empty query, as shown below:</p>&#xA;<pre><code>await apolloClient.query({&#xA;    query: {},   // &lt;--- Empty query here&#xA;    variables&#xA;});&#xA;</code></pre>&#xA;<p>There are several ways to provide queries to the Apollo client. The simplest way to do so is to embed your GraphQL query in the JavaScript source code, using the &quot;gql tag&quot; notation, such as this:</p>&#xA;<pre><code>await apolloClient.query({&#xA;    query: gql`&#xA;      query TestQuery {&#xA;        launch(id: 56) {&#xA;          id&#xA;          mission {&#xA;            name&#xA;          }&#xA;        }&#xA;      }&#xA;    `,&#xA;    variables&#xA;});&#xA;</code></pre>&#xA;<p>This should work out of the box, but for performance reason, you should add a GraphQL compilation step in your build process. Maybe this process is already in place (for example, if you are started your project using a framework such as Create React Apps or Gatsby...). See this document for explanations on this (<a href=""https://www.apollographql.com/docs/react/performance/babel/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/performance/babel/</a>).</p>&#xA;",2887657,,,,2020-11-09 16:17:47,"",,0,0,0,2020-11-09 16:17:47
64790376,1,,,0,845,"<p>Thanks in advance!</p>&#xA;<p>I'm pulling data from a WP Rest API and when spin up the wordpress site on my local machine with the address http://localhost:8000 and got to the graphqli playground on http://localhost:3000/api/graphql and i enter a query i get the expected results and i can consume the data happily in react but once i change the WP rest API address to <a href=""http://example.com/cms"" rel=""nofollow noreferrer"">http://example.com/cms</a> i get back an error. The only thing that changes is the URL so i'm guessing it has to do with CORS.</p>&#xA;<p>Inspecting the browser window there is no CORS errors so i can rule out CORS being an issue. The strange thing is that when i make the api call via postman i get the response i expect, when i type in the endpoint in a browser i get the results i expect when i use the endpoint to resolve the query request i get an error, so i started to look at the headers as thats the only thing i can see that changes between a postman request and a normal browser request. for the local wp installation @ localhost:8000 looking at the logs i can see the request being made from postman and the browser and axios(used in the query resolver) on the flipside the wp installation thats live on the web the logs show the request from postman and from the browser to the api endpoint but not from the graphql resolver. how do i fix this issue with the resolver not making the request?</p>&#xA;<p>this is my resolver for the query</p>&#xA;<pre><code>const resolvers = {&#xA;    Query: {&#xA;        pages: (_parent, _args, _context) =&gt; {&#xA;            return axios.get(`${wpURL}/wp-json/wp/v2/pages`)&#xA;            .then(res =&gt; res.data)&#xA;                    .catch(error =&gt; {&#xA;                        console.log(&quot;Response Status:&quot;, error.response.status);&#xA;                        console.log(&quot;Response Headers:&quot;, error.response.headers);&#xA;                        console.log(&quot;Response Data:&quot;, error.response.data);&#xA;                    });&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>graphqlserver:</p>&#xA;<pre><code>import {ApolloServer} from 'apollo-server-micro'&#xA;import Cors from 'micro-cors'&#xA;import {schema} from './schema'&#xA;&#xA;const cors = Cors()&#xA;const server = new ApolloServer({schema})&#xA;const handler = server.createHandler({path: '/api/graphql'})&#xA;&#xA;export const config = {&#xA;    api: {&#xA;        bodyParser: false,&#xA;    }&#xA;}&#xA;&#xA;export default cors(handler)&#xA;</code></pre>&#xA;<p>terminal:</p>&#xA;<pre><code>&gt; next dev&#xA;&#xA;ready - started server on http://localhost:3000&#xA;event - compiled successfully&#xA;event - build page: /api/graphql&#xA;wait  - compiling...&#xA;event - build page: /api/graphql&#xA;event - compiled successfully&#xA;</code></pre>&#xA;<p>page: <a href=""https://i.stack.imgur.com/EDTkZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EDTkZ.png"" alt=""enter image description here"" /></a></p>&#xA;<p>What am i doing wrong?</p>&#xA;",6754411,,6754411,2020-11-12 17:58:06,2020-11-12 23:25:21,GraphQL not making request to WP API,<javascript><wordpress><graphql><next.js><wp-api>,1,3,0,2020-11-11 16:32:36
64799192,1,64804573,,4,1736,"<p>I did try searching for the same question but all of those were of either angular or unrelated,</p>&#xA;<p>I am trying to make a <strong>Social app using MongoDB, Express, React, Node, Graphql with Apollo</strong>, I am following a video from freecodecamp : <a href=""https://www.youtube.com/watch?v=n1mdAPFq2Os"" rel=""nofollow noreferrer"">Link to the video</a>&#xA;In that video everything worked fine but in his deployed version he is having the same error as mine</p>&#xA;<blockquote>&#xA;<p>react_devtools_backend.js:2450 TypeError:</p>&#xA;<p>Cannot read property 'getPosts' of undefined</p>&#xA;<p>at ae (Home.js:14)&#xA;at Jo (react-dom.production.min.js:3274)</p>&#xA;</blockquote>&#xA;<p><a href=""https://gracious-shannon-271ede.netlify.app/"" rel=""nofollow noreferrer"">link to the deployed app</a></p>&#xA;<p><strong>My Code:</strong> <strong>I am dropping a link to my github repo</strong> containing the whole project : <a href=""https://github.com/lorstenoplo/merng-app"" rel=""nofollow noreferrer"">Link to github&#xA;repo</a></p>&#xA;<p><strong>Stack Overflow was throwing too many indentation issues so i have linked my github above</strong> as there&#xA;is too much of code</p>&#xA;<ul>&#xA;<li>I'm using semantic-ui for styling</li>&#xA;<li>I'm using graphql the fetch posts from MongoDB</li>&#xA;<li>Apollo Client for rendering data</li>&#xA;</ul>&#xA;<p>This is the error I am getting in the Home.js:&#xA;<strong>Screen Shot of the error:</strong></p>&#xA;<p><a href=""https://i.stack.imgur.com/oVOIj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/oVOIj.png"" alt=""error screen shot"" /></a></p>&#xA;",14522742,,6124657,2021-03-06 15:13:45,2021-12-01 16:46:43,"TypeError: Cannot read property 'getPosts' of undefined - useQuery hook, react Functional Components",<reactjs><graphql><react-hooks><apollo-client><react-functional-component>,5,12,0,2020-11-12 06:51:26
64799927,1,64809953,,0,122,"<p>I created a simple Schedule management app using Hasura GraphQL API and React. I tried to host my app on Heroku by linking by github repository with it however, its not working propwerly. I am using Heroku and GraphQL for the first time so I am unavle to figure out what exactly am I doing wrong.</p>&#xA;<p>My Github Repository Linkfro my source code: <a href=""https://github.com/yash-sethia/Schedule-Management-App-using-GraphQL-and-React"" rel=""nofollow noreferrer"">https://github.com/yash-sethia/Schedule-Management-App-using-GraphQL-and-React</a></p>&#xA;<p>My heroku app link (That show's an error screen) : <a href=""https://schedule-management-app.herokuapp.com/"" rel=""nofollow noreferrer"">https://schedule-management-app.herokuapp.com/</a></p>&#xA;<p>This is the error message displayed in the logs :</p>&#xA;<pre><code>    2020-11-11T04:57:35.434926+00:00 heroku[web.1]: State changed from starting to crashed&#xA;2020-11-11T08:14:26.702564+00:00 heroku[web.1]: State changed from crashed to starting&#xA;2020-11-11T08:14:44.659544+00:00 heroku[web.1]: Starting process with command `npm start`&#xA;2020-11-11T08:14:47.483996+00:00 app[web.1]:&#xA;2020-11-11T08:14:47.484007+00:00 app[web.1]: &gt; webd_project@0.1.0 start /app&#xA;2020-11-11T08:14:47.484007+00:00 app[web.1]: &gt; react-scripts start&#xA;2020-11-11T08:14:47.484008+00:00 app[web.1]:&#xA;2020-11-11T08:14:50.665030+00:00 app[web.1]: ℹ ｢wds｣: Project is running at http://172.18.243.110/&#xA;2020-11-11T08:14:50.665788+00:00 app[web.1]: ℹ ｢wds｣: webpack output is served from&#xA;2020-11-11T08:14:50.665967+00:00 app[web.1]: ℹ ｢wds｣: Content not from webpack is served from /app/public&#xA;2020-11-11T08:14:50.666129+00:00 app[web.1]: ℹ ｢wds｣: 404s will fallback to /&#xA;2020-11-11T08:14:50.666503+00:00 app[web.1]: Starting the development server...&#xA;2020-11-11T08:14:50.666504+00:00 app[web.1]:&#xA;2020-11-11T08:14:50.778105+00:00 heroku[web.1]: Process exited with status 0&#xA;2020-11-11T08:14:51.016955+00:00 heroku[web.1]: State changed from starting to crashed&#xA;2020-11-11T13:52:48.230487+00:00 heroku[web.1]: State changed from crashed to starting&#xA;2020-11-11T13:52:59.344712+00:00 heroku[web.1]: Starting process with command `npm start`&#xA;2020-11-11T13:53:01.550816+00:00 app[web.1]:&#xA;2020-11-11T13:53:01.550849+00:00 app[web.1]: &gt; webd_project@0.1.0 start /app&#xA;2020-11-11T13:53:01.550850+00:00 app[web.1]: &gt; react-scripts start&#xA;2020-11-11T13:53:01.550850+00:00 app[web.1]:&#xA;2020-11-11T13:53:03.757281+00:00 app[web.1]: ℹ ｢wds｣: Project is running at http://172.19.87.134/&#xA;2020-11-11T13:53:03.757641+00:00 app[web.1]: ℹ ｢wds｣: webpack output is served from&#xA;2020-11-11T13:53:03.757738+00:00 app[web.1]: ℹ ｢wds｣: Content not from webpack is served from /app/public&#xA;2020-11-11T13:53:03.757806+00:00 app[web.1]: ℹ ｢wds｣: 404s will fallback to /&#xA;2020-11-11T13:53:03.757993+00:00 app[web.1]: Starting the development server...&#xA;2020-11-11T13:53:03.757994+00:00 app[web.1]:&#xA;2020-11-11T13:53:03.852308+00:00 heroku[web.1]: Process exited with status 0&#xA;2020-11-11T13:53:03.892089+00:00 heroku[web.1]: State changed from starting to crashed&#xA;2020-11-11T19:28:16.774146+00:00 heroku[web.1]: State changed from crashed to starting&#xA;2020-11-11T19:28:34.737934+00:00 heroku[web.1]: Starting process with command `npm start`&#xA;2020-11-11T19:28:37.269259+00:00 app[web.1]:&#xA;2020-11-11T19:28:37.269283+00:00 app[web.1]: &gt; webd_project@0.1.0 start /app&#xA;2020-11-11T19:28:37.269283+00:00 app[web.1]: &gt; react-scripts start&#xA;2020-11-11T19:28:37.269284+00:00 app[web.1]:&#xA;2020-11-11T19:28:39.241913+00:00 app[web.1]: ℹ ｢wds｣: Project is running at http://172.16.104.210/&#xA;2020-11-11T19:28:39.242274+00:00 app[web.1]: ℹ ｢wds｣: webpack output is served from&#xA;2020-11-11T19:28:39.242349+00:00 app[web.1]: ℹ ｢wds｣: Content not from webpack is served from /app/public&#xA;2020-11-11T19:28:39.242427+00:00 app[web.1]: ℹ ｢wds｣: 404s will fallback to /&#xA;2020-11-11T19:28:39.242585+00:00 app[web.1]: Starting the development server...&#xA;2020-11-11T19:28:39.242586+00:00 app[web.1]:&#xA;2020-11-11T19:28:39.306313+00:00 heroku[web.1]: Process exited with status 0&#xA;2020-11-11T19:28:39.339563+00:00 heroku[web.1]: State changed from starting to crashed&#xA;2020-11-12T01:20:50.986428+00:00 heroku[web.1]: State changed from crashed to starting&#xA;2020-11-12T01:21:04.061714+00:00 heroku[web.1]: Starting process with command `npm start`&#xA;2020-11-12T01:21:07.918791+00:00 app[web.1]:&#xA;2020-11-12T01:21:07.918811+00:00 app[web.1]: &gt; webd_project@0.1.0 start /app&#xA;2020-11-12T01:21:07.918812+00:00 app[web.1]: &gt; react-scripts start&#xA;2020-11-12T01:21:07.918812+00:00 app[web.1]:&#xA;2020-11-12T01:21:11.178494+00:00 app[web.1]: ℹ ｢wds｣: Project is running at http://172.18.192.242/&#xA;2020-11-12T01:21:11.178876+00:00 app[web.1]: ℹ ｢wds｣: webpack output is served from&#xA;2020-11-12T01:21:11.178944+00:00 app[web.1]: ℹ ｢wds｣: Content not from webpack is served from /app/public&#xA;2020-11-12T01:21:11.179026+00:00 app[web.1]: ℹ ｢wds｣: 404s will fallback to /&#xA;2020-11-12T01:21:11.179232+00:00 app[web.1]: Starting the development server...&#xA;2020-11-12T01:21:11.179234+00:00 app[web.1]:&#xA;2020-11-12T01:21:11.269635+00:00 heroku[web.1]: Process exited with status 0&#xA;2020-11-12T01:21:11.325157+00:00 heroku[web.1]: State changed from starting to crashed&#xA;2020-11-12T06:57:29.079557+00:00 heroku[web.1]: State changed from crashed to starting&#xA;2020-11-12T06:57:41.430648+00:00 heroku[web.1]: Starting process with command `npm start`&#xA;2020-11-12T06:57:44.032930+00:00 app[web.1]:&#xA;2020-11-12T06:57:44.032950+00:00 app[web.1]: &gt; webd_project@0.1.0 start /app&#xA;2020-11-12T06:57:44.032950+00:00 app[web.1]: &gt; react-scripts start&#xA;2020-11-12T06:57:44.032951+00:00 app[web.1]:&#xA;2020-11-12T06:57:46.396411+00:00 app[web.1]: ℹ ｢wds｣: Project is running at http://172.18.237.234/&#xA;2020-11-12T06:57:46.396697+00:00 app[web.1]: ℹ ｢wds｣: webpack output is served from&#xA;2020-11-12T06:57:46.396777+00:00 app[web.1]: ℹ ｢wds｣: Content not from webpack is served from /app/public&#xA;2020-11-12T06:57:46.396841+00:00 app[web.1]: ℹ ｢wds｣: 404s will fallback to /&#xA;2020-11-12T06:57:46.397012+00:00 app[web.1]: Starting the development server...&#xA;2020-11-12T06:57:46.397013+00:00 app[web.1]:&#xA;2020-11-12T06:57:46.473000+00:00 heroku[web.1]: Process exited with status 0&#xA;2020-11-12T06:57:46.511649+00:00 heroku[web.1]: State changed from starting to crashed&#xA;2020-11-12T07:38:08.135193+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/&quot; host=schedule-management-app.herokuapp.com request_id=64916495-a682-4895-8725-0a876ca78165 fwd=&quot;182.64.168.27&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:38:08.892960+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/favicon.ico&quot; host=schedule-management-app.herokuapp.com request_id=8efbff92-a5f9-401a-ae7b-5afb620fc95b fwd=&quot;182.64.168.27&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:39:14.552520+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/&quot; host=schedule-management-app.herokuapp.com request_id=622ae611-b44e-4738-9987-fa7f2077ceca fwd=&quot;182.64.168.27&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:39:15.245006+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/favicon.ico&quot; host=schedule-management-app.herokuapp.com request_id=740f836f-6c7c-4a71-8069-e3ce75dd8e88 fwd=&quot;182.64.168.27&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:40:41.931479+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/&quot; host=schedule-management-app.herokuapp.com request_id=c1b7dbbd-ef85-4433-b330-ef5e08d27467 fwd=&quot;182.64.168.27&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:40:42.807842+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/favicon.ico&quot; host=schedule-management-app.herokuapp.com request_id=f471954f-6720-450b-a3a7-f8d3448ab11e fwd=&quot;182.64.168.27&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:51:39.028875+00:00 app[api]: Starting process with command `heroku logs --tail` by user yyashsethia@gmail.com&#xA;2020-11-12T07:51:55.700302+00:00 heroku[run.4516]: State changed from starting to up&#xA;2020-11-12T07:51:56.076838+00:00 heroku[run.4516]: Awaiting client&#xA;2020-11-12T07:51:56.130401+00:00 heroku[run.4516]: Starting process with command `heroku logs --tail`&#xA;2020-11-12T07:52:01.025743+00:00 heroku[run.4516]: Process exited with status 127&#xA;2020-11-12T07:52:01.069575+00:00 heroku[run.4516]: State changed from up to complete&#xA;2020-11-12T07:52:12.830669+00:00 app[api]: Starting process with command `logs --tail` by user yyashsethia@gmail.com&#xA;2020-11-12T07:52:29.374524+00:00 heroku[run.2810]: Awaiting client&#xA;2020-11-12T07:52:29.402908+00:00 heroku[run.2810]: Starting process with command `logs --tail`&#xA;2020-11-12T07:52:29.481583+00:00 heroku[run.2810]: State changed from starting to up&#xA;2020-11-12T07:52:33.681435+00:00 heroku[run.2810]: Process exited with status 127&#xA;2020-11-12T07:52:33.728441+00:00 heroku[run.2810]: State changed from up to complete&#xA;2020-11-12T07:54:17.364720+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/&quot; host=schedule-management-app.herokuapp.com request_id=5a9bb0b1-5095-44c8-acb1-0632cda59581 fwd=&quot;182.64.168.27&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:54:19.387732+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/favicon.ico&quot; host=schedule-management-app.herokuapp.com request_id=bebd1fa5-55d4-4da5-a0a4-998b4bec5807 fwd=&quot;182.64.168.27&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:54:56.265063+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/&quot; host=schedule-management-app.herokuapp.com request_id=5f8e7bf2-1de0-444b-85bd-e5bd1c2d0021 fwd=&quot;182.64.168.27&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:54:57.285648+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/favicon.ico&quot; host=schedule-management-app.herokuapp.com request_id=4a299aab-d7d2-4722-ae7e-e696b8d3f361 fwd=&quot;182.64.168.27&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:58:58.856040+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/&quot; host=schedule-management-app.herokuapp.com request_id=572807eb-60db-4cfd-9d94-d867c16ba55f fwd=&quot;34.227.83.108&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:58:58.887428+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/&quot; host=schedule-management-app.herokuapp.com request_id=d82b4c44-506d-4a29-94eb-f4ddb044ba58 fwd=&quot;34.227.83.108&quot; dyno= connect= service= status=503 bytes= protocol=http&#xA;2020-11-12T07:59:04.492151+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=HEAD path=&quot;/&quot; host=schedule-management-app.herokuapp.com request_id=7fe9e10d-a5bd-432f-bd70-c3d7aa0f4931 fwd=&quot;217.182.175.162&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:59:50.143201+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/robots.txt&quot; host=schedule-management-app.herokuapp.com request_id=8f9dd1ec-d7b3-46be-aeee-d52dda0ae196 fwd=&quot;107.23.92.82&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T07:59:50.164349+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/&quot; host=schedule-management-app.herokuapp.com request_id=159cfbb3-c7ae-4c9c-8a1b-8e21783da8ea fwd=&quot;107.23.92.82&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T08:14:04.114629+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/&quot; host=schedule-management-app.herokuapp.com request_id=8ed69468-d73e-4331-8609-7c35a659ce78 fwd=&quot;182.64.168.27&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;2020-11-12T08:14:04.947352+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/favicon.ico&quot; host=schedule-management-app.herokuapp.com request_id=57a5208a-06d3-4ed2-8e2c-657179f357ef fwd=&quot;182.64.168.27&quot; dyno= connect= service= status=503 bytes= protocol=https&#xA;</code></pre>&#xA;<p>My app works perfectly fne on my system so I am assuming that I am making a mistake at hosting. Please help.</p>&#xA;",12208521,,12208521,2020-11-12 08:16:04,2020-11-12 18:48:25,Unable to host my React Hasura GraphQL app on Heroku,<reactjs><heroku><graphql><web-deployment><hasura>,1,0,0,2020-11-12 07:58:50
64809045,2,,64791447,0,,"<p>I didn't realize for localhost testing I need to set full uri.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const link = ApolloLink.from([&#xA;  createPersistedQueryLink({ useGETForHashedQueries: true }),&#xA;  createHttpLink({ uri: &quot;http://localhost:4000/graphql&quot; })&#xA;]);&#xA;</code></pre>&#xA;",9101619,,6022243,2022-05-23 07:39:41,2022-05-23 07:39:41,"",,0,0,0,2020-11-12 17:44:40
64809953,2,,64799927,1,,"<p>You need to specify a buildpack. Follow the official docs <a href=""https://create-react-app.dev/docs/deployment/#heroku"" rel=""nofollow noreferrer"">here</a>. Suggests using the Heroku CLI. I had no problem deploying your repo to heroku using those instructions.</p>&#xA;<p>If you must do it your way (github integration) you can <a href=""https://devcenter.heroku.com/articles/app-json-schema#buildpacks"" rel=""nofollow noreferrer"">set the buildpack in app.json</a>.</p>&#xA;",10290918,,,,2020-11-12 18:48:25,"",,0,6,0,2020-11-12 18:48:25
64813468,1,,,0,70,"<p>I created a simple Schedule management app using Hasura GraphQL API and React. I tried to host my app on Heroku using CLI however, its not working propwerly. It displays a blank white page when I open it. I am using Heroku and GraphQL for the first time so I am unable to figure out what exactly am I doing wrong.</p>&#xA;<p>My Github Repository Link for my source code: <a href=""https://github.com/yash-sethia/Schedule-Management-App-using-GraphQL-and-React"" rel=""nofollow noreferrer"">https://github.com/yash-sethia/Schedule-Management-App-using-GraphQL-and-React</a></p>&#xA;<p>My heroku app link (That show's an error screen) : <a href=""https://schedule-management-app.herokuapp.com/"" rel=""nofollow noreferrer"">https://schedule-management-app.herokuapp.com/</a></p>&#xA;<p>These are the build logs of my app:</p>&#xA;<pre><code>2020-11-12T23:37:16.884955+00:00 app[web.1]: 10.29.25.131 - - [12/Nov/2020:23:37:16 +0000] &quot;GET /Schedule-Management-App-using-GraphQL-and-React/static/css/main.27c6850f.chunk.css HTTP/1.1&quot; 304 0 &quot;https://schedule-app121.herokuapp.com/&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36&quot;&#xA;2020-11-12T23:37:16.886137+00:00 app[web.1]: 10.35.227.185 - - [12/Nov/2020:23:37:16 +0000] &quot;GET /Schedule-Management-App-using-GraphQL-and-React/static/css/2.2a86faee.chunk.css HTTP/1.1&quot; 304 0 &quot;https://schedule-app121.herokuapp.com/&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36&quot;&#xA;2020-11-12T23:37:17.189892+00:00 heroku[router]: at=info method=GET path=&quot;/Schedule-Management-App-using-GraphQL-and-React/static/js/main.dcc84ac6.chunk.js&quot; host=schedule-app121.herokuapp.com request_id=65988f5f-8747-493d-8f00-91cef9ae3ba6 fwd=&quot;182.64.168.27&quot; dyno=web.1 connect=0ms service=2ms status=304 bytes=168 protocol=https&#xA;2020-11-12T23:37:17.191882+00:00 app[web.1]: 10.35.227.185 - - [12/Nov/2020:23:37:17 +0000] &quot;GET /Schedule-Management-App-using-GraphQL-and-React/static/js/main.dcc84ac6.chunk.js HTTP/1.1&quot; 304 0 &quot;https://schedule-app121.herokuapp.com/&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36&quot;&#xA;2020-11-12T23:37:17.195902+00:00 heroku[router]: at=info method=GET path=&quot;/Schedule-Management-App-using-GraphQL-and-React/static/js/2.745ae571.chunk.js&quot; host=schedule-app121.herokuapp.com request_id=f5ae2ec2-4aa6-44f9-bc3b-6e07682fd4e5 fwd=&quot;182.64.168.27&quot; dyno=web.1 connect=1ms service=3ms status=304 bytes=168 protocol=https&#xA;2020-11-12T23:37:17.196943+00:00 app[web.1]: 10.29.25.131 - - [12/Nov/2020:23:37:17 +0000] &quot;GET /Schedule-Management-App-using-GraphQL-and-React/static/js/2.745ae571.chunk.js HTTP/1.1&quot; 304 0 &quot;https://schedule-app121.herokuapp.com/&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36&quot;&#xA;2020-11-12T23:37:18.675068+00:00 heroku[router]: at=info method=GET path=&quot;/Schedule-Management-App-using-GraphQL-and-React/favicon.ico&quot; host=schedule-app121.herokuapp.com request_id=232df477-6277-40fe-970d-3e97b3541355 fwd=&quot;182.64.168.27&quot; dyno=web.1 connect=0ms service=2ms status=304 bytes=168 protocol=https&#xA;2020-11-12T23:37:18.675593+00:00 app[web.1]: 10.35.227.185 - - [12/Nov/2020:23:37:18 +0000] &quot;GET /Schedule-Management-App-using-GraphQL-and-React/favicon.ico HTTP/1.1&quot; 304 0 &quot;https://schedule-app121.herokuapp.com/&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36&quot;&#xA;2020-11-12T23:37:23.523585+00:00 app[web.1]: 10.35.227.185 - - [12/Nov/2020:23:37:23 +0000] &quot;GET /Schedule-Management-App-using-GraphQL-and-React/manifest.json HTTP/1.1&quot; 304 0 &quot;https://schedule-app121.herokuapp.com/&quot; &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.183 Safari/537.36&quot;&#xA;2020-11-12T23:37:23.542497+00:00 heroku[router]: at=info method=GET path=&quot;/Schedule-Management-App-using-GraphQL-and-React/manifest.json&quot; host=schedule-app121.herokuapp.com request_id=a643f987-bcdb-4bae-a8a6-d7d0faa408bc fwd=&quot;182.64.168.27&quot; dyno=web.1 connect=1ms service=2ms status=304 bytes=168 protocol=https&#xA;</code></pre>&#xA;",12208521,,,,2020-11-12 23:42:44,Heroku app displays a blank white page on deploying a React Hasura GraphQL App,<reactjs><api><heroku><graphql><hasura>,0,3,0,2020-11-12 23:42:44
64827642,1,64835877,,1,4357,"<p>I've just deployed my Strapi API to production following the docs: <a href=""https://strapi.io/documentation/v3.x/deployment/heroku.html"" rel=""nofollow noreferrer"">https://strapi.io/documentation/v3.x/deployment/heroku.html</a></p>&#xA;<p>And by making POST requests from other origins, I get this error:</p>&#xA;<p><a href=""https://i.stack.imgur.com/tWZJs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tWZJs.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Since my API works finally on development (localhost to localhost) I presume that the issue is related to CORS, and if it's, that's the cors configuration that I've set on the API:</p>&#xA;<p><code>config/env/production/security.json</code>:</p>&#xA;<pre><code>{&#xA;  &quot;cors&quot;: {&#xA;    &quot;enabled&quot;: true,&#xA;    &quot;origin&quot;: &quot;*&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><code>config/env/production/middleware.js</code>:</p>&#xA;<pre><code>module.exports = {&#xA;  settings: {&#xA;    cors: {&#xA;      enabled: true,&#xA;      origin: &quot;*&quot;,&#xA;    },&#xA;  },&#xA;};&#xA;</code></pre>&#xA;",11681774,,4378314,2021-01-17 14:55:03,2021-12-20 01:57:22,Strapi GraphQL API - 405 Method Not Allowed,<api><heroku><graphql><cors><strapi>,3,2,0,2020-11-13 20:29:11
64835877,2,,64827642,-1,,"<p>I was added the cors config on the development environment...</p>&#xA;<p>In order to change the cors config on the production environment, the above code should be placed on the following path:</p>&#xA;<pre><code>config/env/production/security.json &#xA;config/env/production/middleware.js&#xA;</code></pre>&#xA;",11681774,,,,2020-11-14 16:03:17,"",,0,0,0,2020-11-14 16:03:17
64838691,2,,64837808,0,,<p>Have you tried using a proxy instead? That would allow you to set the host you are poiting to before running your application.</p>&#xA;,0,user12521685,,,2020-11-14 21:15:41,"",,0,0,0,2020-11-14 21:15:41
64851897,2,,63880734,0,,<p><strong>This is the Windows Command</strong></p>&#xA;<pre><code>gradlew :app:downloadApolloSchema --endpoint=&quot;http://****REPLACE_WITH_YOUR_ENDPOINT/graphql/&quot; --schema=&quot;src/main/graphql/com/example/programbuilder/schema.json&quot;&#xA;</code></pre>&#xA;<p>Also the  com.apollographql.apollo.schema deprecated with --schema and com.apollographql.apollo.endpoint deprecated with --endpoint</p>&#xA;,1904778,,,,2020-11-16 02:20:38,"",,0,0,0,2020-11-16 02:20:38
64864655,1,,,1,260,"<p>I've build a small graphQL api in asp.net core that gets some data from a Azure Cosmos database. Locally it runs fine with a CosmosEmulator.</p>&#xA;<p>If I connect the local running api directly to the CosmosDb running in Azure it works also fine.</p>&#xA;<p>When I deploy it through a devops pipeline, the graphQL api gives the following error:</p>&#xA;<pre><code>GraphQL.ExecutionError: Error trying to resolve products.\r\n ---&gt; Microsoft.Azure.Cosmos.CosmosException : Response status code does not indicate success: InternalServerError (500); Substatus: 0; ActivityId: 00000000-0000-0000-0000-000000000000; Reason: (An attempt was made to access a socket in a way forbidden by its access permissions.);\r\n ---&gt; System.Net.Sockets.SocketException (10013): An attempt was made to access a socket in a way forbidden by its access permissions.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n--- Cosmos Diagnostics ---{\&quot;DiagnosticVersion\&quot;:\&quot;2\&quot;,\&quot;Summary\&quot;:{\&quot;StartUtc\&quot;:\&quot;2020-11-16T19:32:58.2689693Z\&quot;,\&quot;RunningElapsedTimeInMs\&quot;:137.7423,\&quot;UserAgent\&quot;:\&quot;cosmos-netstandard-sdk/3.12.0|3.11.4|03|X86|Microsoft Windows 10.0.14393|.NET Core 3.1.8|\&quot;,\&quot;TotalRequestCount\&quot;:0,\&quot;FailedRequestCount\&quot;:0},\&quot;Context\&quot;:[]}\r\n   --- End of inner exception stack trace ---&#xA;</code></pre>&#xA;<p>It seems that something between api and database isn't working but I can't figure it out. Should I change settings in the webapp configuration in Azure?</p>&#xA;",1444019,,,,2020-11-16 19:42:12,Asp.net core api with GraphQL and CosmosDB giving SocketException (10013),<asp.net><.net><asp.net-core><graphql><azure-cosmosdb>,0,9,0,2020-11-16 19:42:12
64886593,2,,59920824,8,,"<p>Please, bear with me as <strong>this answer is long</strong>.</p>&#xA;<p>I ran into this issue as well. It seems the problem happens when using fragments (in this case, inline) and interfaces. I managed to solve it by passing the correct introspection data to Apollo's Heuristic Fragment Matcher (See Step 3).</p>&#xA;<p>Here's a detailed step by step guide on how to solve it:</p>&#xA;<h1>1 - Verify Console Warnings.</h1>&#xA;<p>Verify that there are warnings in your console (Here's an example that happened to me). These are the fields colliding with the default heuristic fragment matcher:</p>&#xA;<p><a href=""https://i.stack.imgur.com/lwBdX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lwBdX.png"" alt=""Firefox Dev Console with warnings"" /></a></p>&#xA;<p>Reading the Apollo docs, I found out the following:</p>&#xA;<blockquote>&#xA;<p>By default, Apollo Client's cache will use a heuristic fragment&#xA;matcher, which assumes that a fragment matched if the result included&#xA;all the fields in its selection set, and didn't match when any field&#xA;was missing. This works in most cases, but it also means that Apollo&#xA;Client cannot check the server response for you, and it cannot tell&#xA;you when you're manually writing invalid data into the store using&#xA;update, updateQuery, writeQuery, etc. <strong>Also, the heuristic fragment&#xA;matcher will not work accurately when using fragments with unions or&#xA;interfaces</strong>. Apollo Client will let you know this with a console&#xA;warning (in development), if it attempts to use the default heuristic&#xA;fragment matcher with unions/interfaces. The&#xA;IntrospectionFragmentMatcher is the solution for working with&#xA;unions/interfaces, and is explained in more detail below.</p>&#xA;</blockquote>&#xA;<p>More info for v2 here:&#xA;<a href=""https://www.apollographql.com/docs/react/v2.6/data/fragments/#fragments-on-unions-and-interfaces"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/v2.6/data/fragments/#fragments-on-unions-and-interfaces</a></p>&#xA;<p>More info for v3 here:&#xA;<a href=""https://www.apollographql.com/docs/react/data/fragments/#using-fragments-with-unions-and-interfaces"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/data/fragments/#using-fragments-with-unions-and-interfaces</a></p>&#xA;<p>To fix this issue, we need to pass the IntrospectionResultData to the Apollo Client (See Step 3). But before that, we need to generate the file or data.</p>&#xA;<p>You have 3 options. Either do it manually or automatically (remote or local).</p>&#xA;<h1>2 - Generate the introspection file</h1>&#xA;<p>Pick <strong>one</strong> of the options below (all of them end up being the same). Read all of them before choosing one.</p>&#xA;<h2>2.1 - Option A - Generating the file manually.</h2>&#xA;<p>Use the following schema to adapt it to your own.&#xA;Note, the following is TypeScript code. Remove the <code>type</code> if you're using plain JS.</p>&#xA;<p>Please see that in my case I had in my .gql file a union type of the following fashion:</p>&#xA;<pre><code>   # GraphQL code omitted. &#xA;  union PlanningResult = Planning | PlanningTechnical&#xA;</code></pre>&#xA;<pre><code>// For Apollo V 2.x&#xA;export interface IntrospectionResultData {&#xA;  __schema: {&#xA;    types: {&#xA;      kind: string;&#xA;      name: string;&#xA;      possibleTypes: {&#xA;        name: string;&#xA;      }[];&#xA;    }[];&#xA;  };&#xA;}&#xA;&#xA;const result: IntrospectionResultData = {&#xA;  __schema: {&#xA;    types: [&#xA;      {&#xA;        kind: 'UNION',&#xA;        name: 'PlanningResult',&#xA;        possibleTypes: [&#xA;          {&#xA;            name: 'Planning',&#xA;          },&#xA;          {&#xA;            name: 'PlanningTechnical',&#xA;          },&#xA;        ],&#xA;      },&#xA;    ],&#xA;  },&#xA;};&#xA;export default result;&#xA;&#xA;</code></pre>&#xA;<pre><code>// For Apollo V3:&#xA;&#xA;      export interface PossibleTypesResultData {&#xA;        possibleTypes: {&#xA;          [key: string]: string[]&#xA;        }&#xA;      }&#xA;      const result: PossibleTypesResultData = {&#xA;  &quot;possibleTypes&quot;: {&#xA;    &quot;PlanningResult&quot;: [&#xA;      &quot;Planning&quot;,&#xA;      &quot;PlanningTechnical&quot;&#xA;    ]&#xA;  }&#xA;};&#xA;      export default result;&#xA;    &#xA;</code></pre>&#xA;<p>Once you've done this, proceed to step 3.</p>&#xA;<h2>2.2 - Option B - Automatic Remote Approach.</h2>&#xA;<p>This is if you have your schema in a remote server and you'd like to fetch it. This is a script extracted directly from the Apollo Docs. For the automatic approach, you can fetch the schema directly as stated in the Apollo Docs:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// This is for V2 only, for V3 use the link down below (They're not the same!).&#xA;&#xA;// For V2: https://www.apollographql.com/docs/react/v2.6/data/fragments/#fragments-on-unions-and-interfaces&#xA;// For V3 please, go to https://www.apollographql.com/docs/react/data/fragments/#generating-possibletypes-automatically&#xA;&#xA;const fetch = require('node-fetch');&#xA;const fs = require('fs');&#xA;&#xA;fetch(`${YOUR_API_HOST}/graphql`, {&#xA;  method: 'POST',&#xA;  headers: { 'Content-Type': 'application/json' },&#xA;  body: JSON.stringify({&#xA;    variables: {},&#xA;    query: `&#xA;      {&#xA;        __schema {&#xA;          types {&#xA;            kind&#xA;            name&#xA;            possibleTypes {&#xA;              name&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    `,&#xA;  }),&#xA;})&#xA;  .then(result =&gt; result.json())&#xA;  .then(result =&gt; {&#xA;    // here we're filtering out any type information unrelated to unions or interfaces&#xA;    const filteredData = result.data.__schema.types.filter(&#xA;      type =&gt; type.possibleTypes !== null,&#xA;    );&#xA;    result.data.__schema.types = filteredData;&#xA;    fs.writeFile('./fragmentTypes.json', JSON.stringify(result.data), err =&gt; {&#xA;      if (err) {&#xA;        console.error('Error writing fragmentTypes file', err);&#xA;      } else {&#xA;        console.log('Fragment types successfully extracted!');&#xA;      }&#xA;    });&#xA;  });&#xA;</code></pre>&#xA;<p>This will generate a json file with the <code>__schema</code> and appropriate types. Once you've done this, proceed to step 3.</p>&#xA;<h2>2.3 - Option C - Automatic Local Approach</h2>&#xA;<p>The options above were difficult for me as I had my schema behind an auth wall. Fortunately, I did have direct local access to the .gql file and was able to generate the introspection file. Read on:</p>&#xA;<p>We use <code>graphql-code-generator</code> to generate the introspection file for us.</p>&#xA;<p>Go to your back-end code, or wherever your graphql.gql file lies, and do:</p>&#xA;<ol>&#xA;<li>Install <a href=""https://graphql-code-generator.com/docs/getting-started/index"" rel=""nofollow noreferrer"">GraphQL Code Generator</a>:</li>&#xA;</ol>&#xA;<pre><code>yarn add graphql&#xA;&#xA;yarn add -D @graphql-codegen/cli&#xA;</code></pre>&#xA;<ol start=""2"">&#xA;<li>Run the initialization wizard:</li>&#xA;</ol>&#xA;<pre><code>yarn graphql-codegen init&#xA;</code></pre>&#xA;<ol start=""3"">&#xA;<li>Fill in the details (adapt to your own)&#xA;In my case, I selected:</li>&#xA;</ol>&#xA;<ul>&#xA;<li>Backend - API or server, Application built with React</li>&#xA;<li>Where is your schema? ./appsync/appSync.gql</li>&#xA;<li>Pick plugins: Fragment Matcher (Feel free to select other plugins as well... this is the important one!)</li>&#xA;<li>document: ./appsync/generated/introspection.ts (This is where you want the file to be outputted)</li>&#xA;</ul>&#xA;<p>This will generate a <code>codegen.yml</code> that will include the plugins and the configuration for <code>graphql-code-generator</code> to run.</p>&#xA;<p>This is mine:</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>overwrite: true&#xA;schema: &quot;./appsync/appSync.gql&quot;&#xA;# documents: &quot;./appsync/**/*.gql&quot;&#xA;generates:&#xA;  ./appsync/generated/introspection.ts:&#xA;    plugins:&#xA;      # - &quot;typescript&quot;&#xA;      # - &quot;typescript-operations&quot;&#xA;      # - &quot;typescript-resolvers&quot;&#xA;      # - &quot;typescript-react-apollo&quot;&#xA;      - &quot;fragment-matcher&quot;&#xA;    config:&#xA;    # NOTE: Remember to specify the CORRECT Apollo Client Version&#xA;      apolloClientVersion: 2&#xA;  ./graphql.schema.json:&#xA;    plugins:&#xA;      - &quot;introspection&quot;&#xA;&#xA;</code></pre>&#xA;<p>For V3:</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>overwrite: true&#xA;schema: &quot;./appsync/appSync.gql&quot;&#xA;generates:&#xA;  ./appsync/generated/introspection.ts:&#xA;    plugins:&#xA;      # - &quot;typescript&quot;&#xA;      # - &quot;typescript-operations&quot;&#xA;      # - &quot;typescript-resolvers&quot;&#xA;      # - &quot;typescript-react-apollo&quot;&#xA;      - &quot;introspection&quot;&#xA;</code></pre>&#xA;<p>I've commented on the parts that are not critical for our mission.</p>&#xA;<p>Then (very important!) Run:</p>&#xA;<pre><code>yarn install&#xA;</code></pre>&#xA;<p>Because the wizard adds packages to our <code>package.json</code>.</p>&#xA;<p>Then, generate the code:</p>&#xA;<pre><code>yarn generate&#xA;</code></pre>&#xA;<p>This will output the introspection.ts file which needs to be included in Apollo to continue.</p>&#xA;<h1>3 - Inject the introspection file to the ApolloClient</h1>&#xA;<p>Now, in your front-end code, copy the <code>introspection.ts</code> file to your repo (if it's not already in there), and include it:</p>&#xA;<p><em>Note: I've renamed my file to fragmentTypes.ts and included it inside the apollo folder:</em></p>&#xA;<pre><code>For V2:&#xA;import ApolloClient from 'apollo-client/ApolloClient';&#xA;import { IntrospectionFragmentMatcher } from 'apollo-cache-inmemory';&#xA;import { InMemoryCache } from 'apollo-cache-inmemory/lib/inMemoryCache';&#xA;// The file we just generated. If it's a .json file &#xA;// remember to include the .json extension&#xA;import introspectionQueryResultData from './apollo/fragmentTypes';&#xA;&#xA;const fragmentMatcher = new IntrospectionFragmentMatcher({&#xA;  introspectionQueryResultData,&#xA;});&#xA;&#xA;export const globalClient = new ApolloClient({&#xA;  link,&#xA;  cache: new InMemoryCache({ fragmentMatcher }),&#xA;});&#xA;&#xA;</code></pre>&#xA;<pre><code>For V3:&#xA;import { InMemoryCache, ApolloClient } from '@apollo/client';&#xA;// In case you used graphql-code-generator&#xA;// import introspectionQueryResultData from './apollo/fragmentTypes';&#xA;// The file we just generated. If it's a .json file &#xA;// remember to include the .json extension&#xA;import possibleTypes from './path/to/possibleTypes.json';&#xA;&#xA;const cache = new InMemoryCache({&#xA;  possibleTypes,&#xA;});&#xA;const client = new ApolloClient({&#xA;  // ...other arguments...&#xA;  cache,&#xA;});&#xA;</code></pre>&#xA;<p>After this, your console warnings should go away and the queries and mutations should perform as normal.</p>&#xA;",1057052,,1057052,2022-07-29 20:57:00,2022-07-29 20:57:00,"",,0,2,0,2020-11-18 03:26:04
64919332,1,67842476,,2,3207,"<p>I have an Apollo GraphQL / Next.js application. After changing my graphql schema and navigating to the graphql playground at &quot;http://localhost:3000/api/graphql&quot;, the old schema is still being referenced in the playground and in my application.</p>&#xA;<p>I've tried clearing node modules and running npm install, clearing cache, restarting everything, and I just can't wrap my head around why my schema is not updating. Am I missing some crucial schema-update step?</p>&#xA;<p><strong>Here is my schema for Series and Publisher (note that a SeriesInput requires a Publisher, NOT a PublisherInput):</strong></p>&#xA;<pre><code>type Series {&#xA;    _id: ID!&#xA;    name: String&#xA;    altID: String&#xA;    publisher: Publisher!&#xA;    comics: [Comic]&#xA;}&#xA;&#xA;input SeriesInput {&#xA;    _id: ID&#xA;    name: String!&#xA;    altID: String&#xA;    publisher: Publisher!&#xA;    comics: [Comic]&#xA;}&#xA;&#xA;type Mutation {&#xA;    addSeries(series: SeriesInput): Series&#xA;}&#xA;&#xA;type Query {&#xA;    series: [Series]&#xA;}&#xA;&#xA;-------------------------&#xA;&#xA;type Publisher {&#xA;    _id: ID!&#xA;    name: String&#xA;    altID: String&#xA;    series: [Series]&#xA;}&#xA;&#xA;input PublisherInput {&#xA;    _id: ID!&#xA;    name: String!&#xA;    altID: String&#xA;    series: [Series]&#xA;}&#xA;&#xA;type Mutation {&#xA;    addPublisher(publisher: PublisherInput): Publisher&#xA;}&#xA;&#xA;type Query {&#xA;    publishers: [Publisher]&#xA;}&#xA;&#xA;</code></pre>&#xA;<p><strong><a href=""https://i.stack.imgur.com/BzN4W.png"" rel=""nofollow noreferrer"">Here</a> is the error message I am getting in GraphQL Playground which is due to the fact that the old series schema requires a PublisherInput type which has a mandatory field of &quot;Name&quot; which I am not passing.</strong></p>&#xA;<p><strong>Here is my graphql apollo server code where I am using mergeResolvers and mergeTypeDefs to merge all of the graphql files into a single schema:</strong></p>&#xA;<pre><code>import { ApolloServer } from &quot;apollo-server-micro&quot;;&#xA;import { mergeResolvers, mergeTypeDefs } from &quot;graphql-tools&quot;;&#xA;import connectDb from &quot;../../lib/mongoose&quot;;&#xA;&#xA;// Mutations and resolvers&#xA;import { comicsResolvers } from &quot;../../api/comics/resolvers&quot;;&#xA;import { comicsMutations } from &quot;../../api/comics/mutations&quot;;&#xA;import { seriesResolvers } from &quot;../../api/series/resolvers&quot;;&#xA;import { seriesMutations } from &quot;../../api/series/mutations&quot;;&#xA;import { publishersResolvers } from &quot;../../api/publishers/resolvers&quot;;&#xA;import { publishersMutations } from &quot;../../api/publishers/mutations&quot;;&#xA;&#xA;// GraphQL Schema&#xA;import Publishers from &quot;../../api/publishers/Publishers.graphql&quot;;&#xA;import Series from &quot;../../api/series/Series.graphql&quot;;&#xA;import Comics from &quot;../../api/comics/Comics.graphql&quot;;&#xA;&#xA;// Merge type resolvers, mutations, and type definitions&#xA;const resolvers = mergeResolvers([&#xA;    publishersMutations,&#xA;    publishersResolvers,&#xA;    seriesMutations,&#xA;    seriesResolvers,&#xA;    comicsMutations,&#xA;    comicsResolvers,&#xA;]);&#xA;const typeDefs = mergeTypeDefs([Publishers, Series, Comics]);&#xA;&#xA;// Create apollo server and connect db&#xA;const apolloServer = new ApolloServer({ typeDefs, resolvers });&#xA;export const config = {&#xA;    api: {&#xA;        bodyParser: false,&#xA;    },&#xA;};&#xA;const server = apolloServer.createHandler({ path: &quot;/api/graphql&quot; });&#xA;export default connectDb(server);&#xA;</code></pre>&#xA;<p><strong>Here is my apollo/next.js code which I used from Vercel's documentation:</strong></p>&#xA;<pre><code> * Code copied from Official Next.js documentation to work with Apollo.js&#xA; * https://github.com/vercel/next.js/blob/6e77c071c7285ebe9998b56dbc1c76aaf67b6d2f/examples/with-apollo/lib/apollo.js&#xA; */&#xA;&#xA;import React, { useMemo } from &quot;react&quot;;&#xA;import Head from &quot;next/head&quot;;&#xA;import { ApolloProvider } from &quot;@apollo/react-hooks&quot;;&#xA;import { ApolloClient } from &quot;apollo-client&quot;;&#xA;import { InMemoryCache } from &quot;apollo-cache-inmemory&quot;;&#xA;import { HttpLink } from &quot;apollo-link-http&quot;;&#xA;import fetch from &quot;isomorphic-unfetch&quot;;&#xA;&#xA;let apolloClient = null;&#xA;&#xA;/**&#xA; * Creates and provides the apolloContext&#xA; * to a next.js PageTree. Use it by wrapping&#xA; * your PageComponent via HOC pattern.&#xA; * @param {Function|Class} PageComponent&#xA; * @param {Object} [config]&#xA; * @param {Boolean} [config.ssr=true]&#xA; */&#xA;export function withApollo(PageComponent, { ssr = true } = {}) {&#xA;    const WithApollo = ({ apolloClient, apolloState, ...pageProps }) =&gt; {&#xA;        const client = useMemo(() =&gt; apolloClient || initApolloClient(apolloState), []);&#xA;        return (&#xA;            &lt;ApolloProvider client={client}&gt;&#xA;                &lt;PageComponent {...pageProps} /&gt;&#xA;            &lt;/ApolloProvider&gt;&#xA;        );&#xA;    };&#xA;&#xA;    // Set the correct displayName in development&#xA;    if (process.env.NODE_ENV !== &quot;production&quot;) {&#xA;        const displayName = PageComponent.displayName || PageComponent.name || &quot;Component&quot;;&#xA;&#xA;        if (displayName === &quot;App&quot;) {&#xA;            console.warn(&quot;This withApollo HOC only works with PageComponents.&quot;);&#xA;        }&#xA;&#xA;        WithApollo.displayName = `withApollo(${displayName})`;&#xA;    }&#xA;&#xA;    if (ssr || PageComponent.getInitialProps) {&#xA;        WithApollo.getInitialProps = async (ctx) =&gt; {&#xA;            const { AppTree } = ctx;&#xA;&#xA;            // Initialize ApolloClient, add it to the ctx object so&#xA;            // we can use it in `PageComponent.getInitialProp`.&#xA;            const apolloClient = (ctx.apolloClient = initApolloClient());&#xA;&#xA;            // Run wrapped getInitialProps methods&#xA;            let pageProps = {};&#xA;            if (PageComponent.getInitialProps) {&#xA;                pageProps = await PageComponent.getInitialProps(ctx);&#xA;            }&#xA;&#xA;            // Only on the server:&#xA;            if (typeof window === &quot;undefined&quot;) {&#xA;                // When redirecting, the response is finished.&#xA;                // No point in continuing to render&#xA;                if (ctx.res &amp;&amp; ctx.res.finished) {&#xA;                    return pageProps;&#xA;                }&#xA;&#xA;                // Only if ssr is enabled&#xA;                if (ssr) {&#xA;                    try {&#xA;                        // Run all GraphQL queries&#xA;                        const { getDataFromTree } = await import(&quot;@apollo/react-ssr&quot;);&#xA;                        await getDataFromTree(&#xA;                            &lt;AppTree&#xA;                                pageProps={{&#xA;                                    ...pageProps,&#xA;                                    apolloClient,&#xA;                                }}&#xA;                            /&gt;&#xA;                        );&#xA;                    } catch (error) {&#xA;                        // Prevent Apollo Client GraphQL errors from crashing SSR.&#xA;                        // Handle them in components via the data.error prop:&#xA;                        // https://www.apollographql.com/docs/react/api/react-apollo.html#graphql-query-data-error&#xA;                        console.error(&quot;Error while running `getDataFromTree`&quot;, error);&#xA;                    }&#xA;&#xA;                    // getDataFromTree does not call componentWillUnmount&#xA;                    // head side effect therefore need to be cleared manually&#xA;                    Head.rewind();&#xA;                }&#xA;            }&#xA;&#xA;            // Extract query data from the Apollo store&#xA;            const apolloState = apolloClient.cache.extract();&#xA;&#xA;            return {&#xA;                ...pageProps,&#xA;                apolloState,&#xA;            };&#xA;        };&#xA;    }&#xA;&#xA;    return WithApollo;&#xA;}&#xA;&#xA;/**&#xA; * Always creates a new apollo client on the server&#xA; * Creates or reuses apollo client in the browser.&#xA; * @param  {Object} initialState&#xA; */&#xA;function initApolloClient(initialState) {&#xA;    // Make sure to create a new client for every server-side request so that data&#xA;    // isn't shared between connections (which would be bad)&#xA;    if (typeof window === &quot;undefined&quot;) {&#xA;        return createApolloClient(initialState);&#xA;    }&#xA;&#xA;    // Reuse client on the client-side&#xA;    if (!apolloClient) {&#xA;        apolloClient = createApolloClient(initialState);&#xA;    }&#xA;&#xA;    return apolloClient;&#xA;}&#xA;&#xA;/**&#xA; * Creates and configures the ApolloClient&#xA; * @param  {Object} [initialState={}]&#xA; */&#xA;function createApolloClient(initialState = {}) {&#xA;    // Check out https://github.com/zeit/next.js/pull/4611 if you want to use the AWSAppSyncClient&#xA;    return new ApolloClient({&#xA;        ssrMode: typeof window === &quot;undefined&quot;, // Disables forceFetch on the server (so queries are only run once)&#xA;        link: new HttpLink({&#xA;            uri: &quot;http://localhost:3000/api/graphql&quot;, // Server URL (must be absolute)&#xA;            credentials: &quot;same-origin&quot;, // Additional fetch() options like `credentials` or `headers`&#xA;            fetch,&#xA;        }),&#xA;        cache: new InMemoryCache().restore(initialState),&#xA;    });&#xA;}&#xA;</code></pre>&#xA;",11645000,,,,2021-07-19 17:27:01,Apollo Server + Next.js - GraphQL Schema Not Updating,<graphql><next.js><apollo><apollo-client><apollo-server>,2,0,0,2020-11-19 20:17:43
64927865,1,,,2,902,"<p>I am trying to use AWS amplify GraphQL subscription like below,</p>&#xA;<pre><code>import Amplify,{ API, Storage, graphqlOperation } from &quot;aws-amplify&quot;;&#xA;import awsmobile from &quot;../../aws-exports&quot;;&#xA;Amplify.configure(awsmobile);&#xA;...&#xA;     const notiSubscription = API.graphql(graphqlOperation(onCreateNotification)).subscribe({&#xA;      next: (todoData) =&gt; {&#xA;        console.log(todoData);&#xA;      },&#xA;    });&#xA;...&#xA;</code></pre>&#xA;<p>onCreateNotification Graphql is,</p>&#xA;<pre><code> subscription OnCreateNotification {&#xA;onCreateNotification {&#xA;  id&#xA;}}&#xA;</code></pre>&#xA;<p>Below is the error I get,</p>&#xA;<pre><code>AWSAppSyncProvider.ts:204 Uncaught (in promise) undefined&#xA;&#xA;rejected    @   AWSAppSyncProvider.ts:204&#xA;Promise.then (async)        &#xA;step    @   AWSAppSyncProvider.ts:204&#xA;(anonymous) @   AWSAppSyncProvider.ts:204&#xA;push../node_modules/@aws-amplify/pubsub/lib-esm/Providers/AWSAppSyncRealTimeProvider.js.__awaiter   @   AWSAppSyncProvider.ts:204&#xA;AWSAppSyncRealTimeProvider._startSubscriptionWithAWSAppSyncRealTime @   AWSAppSyncRealTimeProvider.ts:227&#xA;(anonymous) @   AWSAppSyncRealTimeProvider.ts:185&#xA;Subscription    @   Observable.js:197&#xA;subscribe   @   Observable.js:279&#xA;(anonymous) @   PubSub.ts:171&#xA;...&#xA;</code></pre>&#xA;<p>Please help me out in this, also my config is</p>&#xA;<pre><code>&quot;aws_project_region&quot;: &quot;us-east-1&quot;,&#xA;    &quot;aws_appsync_graphqlEndpoint&quot;: &quot;https://xxx.appsync-api.us-east-1.amazonaws.com/graphql&quot;,&#xA;    &quot;aws_appsync_region&quot;: &quot;us-east-1&quot;,&#xA;    &quot;aws_appsync_authenticationType&quot;: &quot;AMAZON_COGNITO_USER_POOLS&quot;,&#xA;    &quot;aws_appsync_apiKey&quot;: &quot;xxxx&quot;,&#xA;</code></pre>&#xA;",1403610,,,,2020-11-22 16:12:17,Amplify AppSync Subscription Uncaught (in promise),<javascript><reactjs><graphql><aws-amplify><aws-appsync>,1,0,0,2020-11-20 10:32:23
64935859,1,64937228,,0,496,<p>Am running Hasura Graphql engine on docker and I need to make use of the log file that hasura produces.&#xA;How can i find the path of the log file in hasura container?</p>&#xA;,10860255,,,,2020-11-20 21:33:13,Where can I find hasura log file,<docker><logging><graphql><hasura>,1,0,0,2020-11-20 19:39:08
64944349,1,64963356,,0,605,"<p>I have problems trying to deploy a graphql API to Azure web apps (I don't know if it's the right place but here's my case)</p>&#xA;<h2>My expectation</h2>&#xA;<p>I want to deploy a graphql API using a docker-compose file with azure-container-registry. I use docker for local development and everything is correct. In the docker-compose file I define my local enviroment variables, and in my node.js API I reference this variables using <code>process.env.{variable_name}</code></p>&#xA;<h2>My problem</h2>&#xA;<p>In production, I got a blank page (with no visible error log) when I was trying to access my currently deployed app link (For example <a href=""https://myapp.azurewebsites.net/graphql"" rel=""nofollow noreferrer"">https://myapp.azurewebsites.net/graphql</a>)&#xA;<a href=""https://i.stack.imgur.com/tvzEx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tvzEx.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Here's the stack of my graphql API: Apollo Server, Nodejs, Docker compose (I used apollo-server-express)</p>&#xA;<h2>What I tried</h2>&#xA;<p>I used Azure pipelines to deploy the front-end repository of my application and configured a GitHub action too. So I decided to use the same logic with my backend repository.</p>&#xA;<p>I already deployed my mongodb using Atlas.</p>&#xA;<p>I put my docker-compose-prod.yml variables between ${ } symbols because I guess this is necessary for the azure pipelines to detect where I'm going to put my variables</p>&#xA;<p>This is how it looks like.</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>&#xA;# Docker&#xA;# Build and push an image to Azure Container Registry&#xA;# https://learn.microsoft.com/azure/devops/pipelines/languages/docker&#xA;&#xA;trigger:&#xA;- main&#xA;&#xA;resources:&#xA;- repo: self&#xA;&#xA;variables:&#xA;  # Container registry service connection established during pipeline creation&#xA;  dockerRegistryServiceConnection: &lt;.....&gt;&#xA;  imageRepository: 'myimagereposity'&#xA;  containerRegistry: 'mycontainerregistry.azurecr.io'&#xA;  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile.dev'&#xA;  tag: '$(Build.BuildId)'&#xA;  dockerComposeFile: '$(Build.SourcesDirectory)/docker-compose-prod.yml'&#xA;  projectName: $(Build.Repository.Name)&#xA;  # Agent VM image name&#xA;  vmImageName: 'ubuntu-latest'&#xA;&#xA;stages:&#xA;- stage: Build&#xA;  displayName: Build and push stage&#xA;  jobs:  &#xA;  - job: Build&#xA;    displayName: Build&#xA;    pool:&#xA;      vmImage: $(vmImageName)&#xA;    steps:&#xA;    - task: DockerCompose@0&#xA;      inputs:&#xA;        containerregistrytype: 'Azure Container Registry'&#xA;        azureSubscription: 'Suscripcion developer 1(id-subs)'&#xA;        azureContainerRegistry: '{&quot;loginServer&quot;:&quot;mycontainerregistry.azurecr.io&quot;, &quot;id&quot; : &quot;/subscriptions/id-subs/resourceGroups/proyecto-final/providers/Microsoft.ContainerRegistry/registries/mycontainername&quot;}'&#xA;        dockerComposeFile: '**/docker-compose-prod.yml'&#xA;        dockerComposeFileArgs: |&#xA;          DATABASE_URL=mongodb+srv://mydb-user:$(dbpassword)@cluster0.defvz.mongodb.net/$(dbname)?retryWrites=true&amp;w=majority&#xA;          AWS_ACCESS_ID=$(AWS_ACCESS_ID)&#xA;          AWS_SECRET_KEY=$(AWS_SECRET_KEY)&#xA;          AWS_REGION=$(AWS_REGION)&#xA;          S3_BUCKET_NAME=$(S3_BUCKET_NAME)&#xA;          GOOGLE_APPLICATION_CREDENTIALS=$(GOOGLE_APPLICATION_CREDENTIALS)&#xA;        action: 'Build services'&#xA;</code></pre>&#xA;<p>This is my Dockerfile</p>&#xA;<pre><code>FROM node:12-alpine &#xA;&#xA;EXPOSE 8080&#xA;&#xA;WORKDIR /usr/src/app &#xA;&#xA;COPY package*.json ./&#xA;&#xA;RUN npm install --silent &#xA;&#xA;COPY . .&#xA;&#xA;CMD [ &quot;npm&quot;, &quot;run&quot;, &quot;debug&quot; ]&#xA;&#xA;</code></pre>&#xA;<p>This is my docker-compose-prod.yml</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>&#xA;version: '3.7'&#xA;&#xA;services:&#xA;  api:&#xA;    container_name: 'saaga-api'&#xA;    restart: 'always'&#xA;    build:&#xA;      context: .&#xA;      dockerfile: 'Dockerfile.prod'&#xA;    volumes:&#xA;      # - /usr/src/app/node_modules&#xA;      - '.:/usr/src/app'&#xA;    environment:&#xA;      NODE_ENV: production&#xA;      ORIGIN: 'https://myapp.azurewebsites.net'&#xA;      PORT: 8080&#xA;      DATABASE_URL: ${DATABASE_URL}&#xA;      AWS_ACCESS_ID: ${AWS_ACCESS_ID}&#xA;      AWS_SECRET_KEY: ${AWS_SECRET_KEY}&#xA;      AWS_REGION: ${AWS_REGION}&#xA;      S3_BUCKET_NAME: ${S3_BUCKET_NAME}&#xA;      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}&#xA;    ports:&#xA;      - 8080:8080&#xA;      - 9229:9229&#xA;    links:&#xA;      - db&#xA;  db:&#xA;    container_name: 'mongodb'&#xA;    image: 'mongo'&#xA;    ports:&#xA;      - 27017:27017&#xA;&#xA;</code></pre>&#xA;<p>Someone knows what I'm missing or what I'm doing badly? The app works well for the local environment, the problem is only in production.</p>&#xA;<p><a href=""https://i.stack.imgur.com/KBD18.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KBD18.png"" alt=""enter image description here"" /></a></p>&#xA;",9113980,,,,2020-11-23 06:11:23,How can I deploy a graphql API with docker-compose in azure,<node.js><azure><docker><docker-compose><graphql>,1,2,0,2020-11-21 14:46:25
64960375,1,68915996,,4,1409,"<p>For a few days i'm struggling with a strange problem in a <strong>laravel</strong> application that runs in a docker container on an <strong>ubuntu</strong> system and uses <strong>laravel/rebing-graphql</strong> vendor to serve <strong>graphql</strong> query responses.</p>&#xA;<p>So i'm using the <strong>GraphiQL</strong> interface to send graphql requests to my backend.&#xA;The result i receive for my request does not only include the valid response, but also the parameters i send along with the post request;</p>&#xA;<pre><code>&quot;{\&quot;query\&quot;:\&quot;query Users {\\n  users(pagination: {offset: 0, limit: 1}) {\\n    items {\\n      id\\n    }\\n  }\\n}\&quot;,\&quot;variables\&quot;:null,\&quot;operationName\&quot;:\&quot;Users\&quot;}{\&quot;data\&quot;:{\&quot;users\&quot;:{\&quot;items\&quot;:[{\&quot;id\&quot;:53}]}}}&quot;&#xA;</code></pre>&#xA;<p>This response does not come with a content-type: <code>application/json</code> but as <code>text/html</code>.&#xA;It seems like the post request body is prepended to the response data of my API. This results in a JSON parse error on my client. The API data part here itself seems valid.</p>&#xA;<p>The most strange thing of this issue is, that it occurs on every <strong>second</strong>(!) request.&#xA;So about 50% of my requests are receiving a valid response which does come as json and without any prepended post request body.</p>&#xA;<p>I tried to analyse the root cause of this issue and i was <strong>not</strong> able to find a place in the code where the parameters are echoed as an additional output.</p>&#xA;<p><strong>Does an nginx configuration cause a prepending of post request body contents?</strong></p>&#xA;<p>During my further investigation, i started to replace the <code>index.php</code> file inside laravels' public directory and created a custom <code>index.php</code> which contains <strong>nothing but an</strong> <code>exit(&quot;test&quot;)</code>; <strong>execution</strong>.&#xA;The result was unexpected. I still got my post parameters prepended to the output on every second request:</p>&#xA;<pre><code>&quot;{\&quot;query\&quot;:\&quot;query Users {\\n  users(pagination: {offset: 0, limit: 1}) {\\n    items {\\n      id\\n    }\\n  }\\n}\&quot;,\&quot;variables\&quot;:null,\&quot;operationName\&quot;:\&quot;Users\&quot;}test&quot;&#xA;</code></pre>&#xA;<p>I'm using a docker image from nginx:alpine and php:7.4-fpm-alpine.&#xA;The docker container opens a port which gets a proxy from an apache2 server which runs on my root system.</p>&#xA;<p>This is my nginx default config:</p>&#xA;<pre><code>server {&#xA;listen 80;&#xA;&#xA;server_name my-domain.com;&#xA;error_log  /var/log/nginx/error.log;&#xA;access_log /var/log/nginx/access.log;&#xA;&#xA;root /var/www/html/public;&#xA;&#xA;index index.php index.html;&#xA;&#xA;location / {&#xA;    client_max_body_size 100M;&#xA;&#xA;    if ($request_method = 'OPTIONS') {&#xA;        add_header Access-Control-Max-Age 1728000;&#xA;        add_header Access-Control-Allow-Credentials true;&#xA;        add_header Access-Control-Allow-Origin $http_origin;&#xA;        add_header Access-Control-Allow-Methods &quot;GET, POST, OPTIONS, PUT, DELETE, HEAD&quot;;&#xA;        add_header Content-Length 0;&#xA;        add_header Content-Type &quot;text/plain; charset=UTF-8&quot;;&#xA;        add_header Access-Control-Allow-Headers &quot;Origin,X-Requested-With,Content-Type,Accept,X-CSRF-Token,X-XSRF-TOKEN,Authorization&quot;;&#xA;        return 204;&#xA;    }&#xA;&#xA;    try_files $uri $uri/ /index.php?$query_string;&#xA;    gzip_static on;&#xA;}&#xA;&#xA;location ~ \.php$ {&#xA;    client_max_body_size 100M;&#xA;&#xA;    if ($http_origin ~* &quot;^(blob:)?http(s)?://www.my-domain.com(:[0-9]{2,4})?$&quot;) {&#xA;        add_header Access-Control-Allow-Credentials true;&#xA;        add_header Access-Control-Allow-Origin $http_origin;&#xA;        add_header Access-Control-Allow-Methods &quot;GET, POST, PUT, DELETE, OPTIONS&quot;;&#xA;        add_header Access-Control-Allow-Headers &quot;Origin,X-Requested-With,Content-Type,Accept,X-CSRF-Token,X-XSRF-TOKEN,Authorization&quot;;&#xA;    }&#xA;&#xA;    try_files $uri =404;&#xA;    fastcgi_split_path_info ^(.+\.php)(/.+)$;&#xA;    fastcgi_pass epapistagephp:9000;&#xA;    fastcgi_index index.php;&#xA;    include fastcgi_params;&#xA;    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;&#xA;    fastcgi_param PATH_INFO $fastcgi_path_info;&#xA;} &#xA;}&#xA;</code></pre>&#xA;<p>Is there anyone who already experienced this kind of behaviour or do you have a hint on where to start with a further analysation?</p>&#xA;<p>Thank you so much in advance!!</p>&#xA;<p>Greets Jules</p>&#xA;",7489302,,7489302,2021-08-25 02:27:03,2022-01-31 13:56:42,Nginx prepends response data with post request body content from its' buffer?,<php><laravel><docker><nginx><graphql>,3,5,0,2020-11-22 22:40:10
64960708,1,64963939,,3,1688,"<p>I am following <a href=""http://%20https://www.contentful.com/developers/docs/tutorials/general/rich-text-and-gatsby/"" rel=""nofollow noreferrer"">a documentation</a> on how to implement Contentful's RichText field type with Gatsby.</p>&#xA;<p>My GraphQL query only returns a field <code>raw</code> on my RichText field called <code>synopsis</code>:</p>&#xA;<pre><code>query MyQuery {&#xA;  allContentfulCountry {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        synopsis {&#xA;          raw&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>It returns:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;allContentfulCountry&quot;: {&#xA;      &quot;edges&quot;: [&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;id&quot;: &quot;fa07b3db-6acb-5b9a-7c4b-c42ef3c191b0&quot;,&#xA;            &quot;synopsis&quot;: {&#xA;              &quot;raw&quot;: &quot;{\&quot;data\&quot;:{},\&quot;content\&quot;:[{\&quot;data\&quot;:{},\&quot;content\&quot;:[{\&quot;data\&quot;:{},\&quot;marks\&quot;:[],\&quot;value\&quot;:\&quot;The actual rich text...\&quot;,\&quot;nodeType\&quot;:\&quot;text\&quot;}],\&quot;nodeType\&quot;:\&quot;paragraph\&quot;}],\&quot;nodeType\&quot;:\&quot;document\&quot;}&quot;&#xA;            },&#xA;            &quot;slug&quot;: &quot;france&quot;&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The documentation assumes <code>documentToReactComponents(node.bodyRichText.json, options)</code> but I can't access <code>json</code> and need to do this: <code>JSON.parse(country.synopsis.raw)</code></p>&#xA;<p>Am I missing something?</p>&#xA;<pre><code>&quot;@contentful/rich-text-react-renderer&quot;: &quot;^14.1.2&quot;,&#xA;&quot;@contentful/rich-text-types&quot;: &quot;^14.1.2&quot;,&#xA;&#xA;System:&#xA;  OS: macOS 11.0.1&#xA;  CPU: (8) x64 Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz&#xA;  Shell: 5.8 - /bin/zsh&#xA;Binaries:&#xA;  Node: 12.13.0 - ~/.nvm/versions/node/v12.13.0/bin/node&#xA;  npm: 6.14.9 - ~/.nvm/versions/node/v12.13.0/bin/npm&#xA;Languages:&#xA;  Python: 2.7.16 - /usr/bin/python&#xA;Browsers:&#xA;  Firefox: 82.0.3&#xA;npmPackages:&#xA;  gatsby: ^2.26.1 =&gt; 2.26.1 &#xA;  gatsby-image: ^2.6.0 =&gt; 2.6.0 &#xA;  gatsby-plugin-intl: ^0.3.3 =&gt; 0.3.3 &#xA;  gatsby-plugin-newrelic: ^1.0.5 =&gt; 1.0.5 &#xA;  gatsby-plugin-react-helmet: ^3.3.5 =&gt; 3.3.5 &#xA;  gatsby-plugin-sharp: ^2.9.0 =&gt; 2.9.0 &#xA;  gatsby-source-contentful: ^4.1.0 =&gt; 4.1.0 &#xA;  gatsby-transformer-remark: ^2.11.0 =&gt; 2.11.0 &#xA;  gatsby-transformer-sharp: ^2.5.6 =&gt; 2.5.6 &#xA;npmGlobalPackages:&#xA;  gatsby-cli: 2.14.0&#xA;</code></pre>&#xA;",795734,,,,2020-11-23 07:12:42,Contentful with Gatsby: rendering RichText field by accessing json not possible (raw instead),<graphql><gatsby><contentful>,1,0,0,2020-11-22 23:23:44
64963356,2,,64944349,0,,"<p>As I see you expose the ports 8080 and 9229 for the API application, but the Azure Web App only can expose one port from 80 or 443 to the outside. So if you do not use ports 80 and 443, you need to set the environment variable <code>WEBSITES_PORT</code> with the port that you want to expose to outside.</p>&#xA;",9773937,,,,2020-11-23 06:11:23,"",,0,3,0,2020-11-23 06:11:23
64969392,2,,64969023,0,,"<p>Update your Node version up to <code>v10</code>. As you can see in the <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of"" rel=""nofollow noreferrer""><code>for await...of</code> docs</a>, the syntax <code>for await (const place of this.config.searchPlaces)</code> it's available in versions greater than <code>10.0.0</code>.</p>&#xA;",5585371,,,,2020-11-23 13:30:00,"",,0,0,0,2020-11-23 13:30:00
64978480,2,,64977656,1,,"<p>This is an issue with graphql version. For example on version <code>0.5.3</code> I got the same issue as you.</p>&#xA;<pre><code>from graphql import (&#xA;    GraphQLSchema, GraphQLObjectType, GraphQLField, GraphQLString)&#xA;&#xA;schema = GraphQLSchema(&#xA;    query=GraphQLObjectType(&#xA;        name='RootQueryType',&#xA;        fields={&#xA;            'hello': GraphQLField(&#xA;                GraphQLString,&#xA;                resolve=lambda obj, info: 'world')&#xA;        }))&#xA;&gt;&gt;&gt; TypeError: __init__() got an unexpected keyword argument 'resolve'&#xA;</code></pre>&#xA;<p>Just changed to version 3 or higher.</p>&#xA;<pre><code>pip install &quot;graphql-core&gt;=3&quot;&#xA;</code></pre>&#xA;",12483346,,,,2020-11-24 00:13:36,"",,0,0,0,2020-11-24 00:13:36
65012190,1,,,0,794,"<p>I'm using gatsby wordpress experimental and have a build error when I try to upload to Netlify.</p>&#xA;<p><a href=""https://community.netlify.com/t/build-failing-with-gatsby-source-wordpress-experimental/21768/12"" rel=""nofollow noreferrer"">Netlify has told me that it's not an issue with Netlify</a>, but with the build process. However, I cant find my error.</p>&#xA;<p>When I clone my git repository, the build works fine locally. It just cant get pushed through to Netlify. Netlify support says when he cloned the github repo, he saw the same error as what I'm seeing in my Netlify deploy log, which makes me wonder if I have some global package installed on my computer that isn't going Netlify and causing this error.</p>&#xA;<p>I cant re-create the error on my computer tho. The build works for me.</p>&#xA;<p>Public Repo: <a href=""https://github.com/RyanPinPB/pdm-gatsby"" rel=""nofollow noreferrer"">https://github.com/RyanPinPB/pdm-gatsby</a></p>&#xA;<p>The error that I'm stumped on:</p>&#xA;<pre><code>success write out redirect data - 0.018s&#xA;⠁ vips_value_hash: no case for NULL&#xA;    type 64, gchararray&#xA;    generic 53, GParamString&#xA;vips_value_hash: no case for 0.000000&#xA;    type 60, gdouble&#xA;    generic 109, GParamDouble&#xA;vips_value_hash: no case for FALSE&#xA;    type 20, gboolean&#xA;    generic 76, GParamBoolean&#xA;vips_value_hash: no case for ((VipsAccess) VIPS_ACCESS_RANDOM)&#xA;    type 73595104, VipsAccess&#xA;    generic 80, GParamEnum&#xA;vips_value_hash: no case for FALSE&#xA;    type 20, gboolean&#xA;    generic 76, GParamBoolean&#xA;Segmentation fault (core dumped)&#xA;</code></pre>&#xA;<p>Any idea what this error actually means?</p>&#xA;<p>Here's the full build log from Netlify:</p>&#xA;<pre><code>11:01:43 AM: Build ready to start&#xA;11:01:45 AM: build-image version: 09c2cdcdf242cf2f57c9ee0fcad9d298fad9ad41&#xA;11:01:45 AM: build-image tag: v3.5.0&#xA;11:01:45 AM: buildbot version: 8df8a50b1177b0b57364d20e0ea150448924cebf&#xA;11:01:45 AM: Fetching cached dependencies&#xA;11:01:45 AM: Starting to download cache of 244.2MB&#xA;11:01:47 AM: Finished downloading cache in 1.566800161s&#xA;11:01:47 AM: Starting to extract cache&#xA;11:01:56 AM: Finished extracting cache in 9.099291187s&#xA;11:01:56 AM: Finished fetching cache in 10.772692856s&#xA;11:01:56 AM: Starting to prepare the repo for build&#xA;11:01:56 AM: Preparing Git Reference refs/heads/master&#xA;11:01:59 AM: Different publish path detected, going to use the one specified in the Netlify configuration file: 'public' versus 'public/' in the Netlify UI&#xA;11:02:00 AM: Starting build script&#xA;11:02:00 AM: Installing dependencies&#xA;11:02:00 AM: Python version set to 2.7&#xA;11:02:00 AM: Started restoring cached node version&#xA;11:02:03 AM: Finished restoring cached node version&#xA;11:02:04 AM: v12.18.0 is already installed.&#xA;11:02:05 AM: Now using node v12.18.0 (npm v6.14.4)&#xA;11:02:05 AM: Started restoring cached build plugins&#xA;11:02:05 AM: Finished restoring cached build plugins&#xA;11:02:05 AM: Attempting ruby version 2.7.1, read from environment&#xA;11:02:06 AM: Using ruby version 2.7.1&#xA;11:02:06 AM: Using PHP version 5.6&#xA;11:02:06 AM: Started restoring cached node modules&#xA;11:02:06 AM: Finished restoring cached node modules&#xA;11:02:07 AM: Installing NPM modules using NPM version 6.14.4&#xA;11:02:30 AM: &gt; sharp@0.26.3 install /opt/build/repo/node_modules/gatsby-plugin-manifest/node_modules/sharp&#xA;11:02:30 AM: &gt; (node install/libvips &amp;&amp; node install/dll-copy &amp;&amp; prebuild-install) || (node-gyp rebuild &amp;&amp; node install/dll-copy)&#xA;11:02:31 AM: info sharp Downloading https://github.com/lovell/sharp-libvips/releases/download/v8.10.0/libvips-8.10.0-linux-x64.tar.br&#xA;11:02:33 AM: &gt; sharp@0.26.3 install /opt/build/repo/node_modules/gatsby-plugin-sharp/node_modules/sharp&#xA;11:02:33 AM: &gt; (node install/libvips &amp;&amp; node install/dll-copy &amp;&amp; prebuild-install) || (node-gyp rebuild &amp;&amp; node install/dll-copy)&#xA;11:02:34 AM: info sharp Using cached /opt/buildhome/.npm/_libvips/libvips-8.10.0-linux-x64.tar.br&#xA;11:02:36 AM: &gt; core-js-pure@3.8.0 postinstall /opt/build/repo/node_modules/core-js-pure&#xA;11:02:36 AM: &gt; node -e &quot;try{require('./postinstall')}catch(e){}&quot;&#xA;11:02:36 AM: &gt; core-js@3.8.0 postinstall /opt/build/repo/node_modules/gatsby/node_modules/core-js&#xA;11:02:36 AM: &gt; node -e &quot;try{require('./postinstall')}catch(e){}&quot;&#xA;11:02:36 AM: &gt; gatsby-telemetry@1.5.1 postinstall /opt/build/repo/node_modules/gatsby-telemetry&#xA;11:02:36 AM: &gt; node src/postinstall.js || true&#xA;11:02:36 AM: &gt; gatsby-cli@2.14.1 postinstall /opt/build/repo/node_modules/gatsby/node_modules/gatsby-cli&#xA;11:02:36 AM: &gt; node scripts/postinstall.js&#xA;11:02:36 AM: &gt; gatsby@2.27.3 postinstall /opt/build/repo/node_modules/gatsby&#xA;11:02:36 AM: &gt; node scripts/postinstall.js&#xA;11:02:39 AM: npm WARN @reach/alert@0.11.0 requires a peer of react@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN @reach/alert@0.11.0 requires a peer of react-dom@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN @reach/auto-id@0.11.0 requires a peer of react@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN @reach/auto-id@0.11.0 requires a peer of react-dom@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN @reach/router@1.3.4 requires a peer of react@15.x || 16.x || 16.4.0-alpha.0911da3 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN @reach/router@1.3.4 requires a peer of react-dom@15.x || 16.x || 16.4.0-alpha.0911da3 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN @reach/utils@0.11.0 requires a peer of react@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN @reach/utils@0.11.0 requires a peer of react-dom@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN @reach/visually-hidden@0.11.0 requires a peer of react@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN @reach/visually-hidden@0.11.0 requires a peer of react-dom@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN create-react-context@0.3.0 requires a peer of react@^0.14.0 || ^15.0.0 || ^16.0.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN framer-motion@2.9.4 requires a peer of react@^16.8 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN framer-motion@2.9.4 requires a peer of react-dom@^16.8 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN react-clientside-effect@1.2.2 requires a peer of react@^15.3.0 || ^16.0.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN react-focus-lock@2.4.1 requires a peer of react@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN react-paginate@6.5.0 requires a peer of react@^16.0.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN react-remove-scroll@2.4.0 requires a peer of react@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN react-remove-scroll-bar@2.1.0 requires a peer of react@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN react-side-effect@2.1.0 requires a peer of react@^16.3.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN react-style-singleton@2.1.0 requires a peer of react@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN ts-node@9.0.0 requires a peer of typescript@&gt;=2.7 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN tsutils@3.17.1 requires a peer of typescript@&gt;=2.8.0 || &gt;= 3.2.0-dev || &gt;= 3.3.0-dev || &gt;= 3.4.0-dev || &gt;= 3.5.0-dev || &gt;= 3.6.0-dev || &gt;= 3.6.0-beta || &gt;= 3.7.0-dev || &gt;= 3.7.0-beta but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN use-callback-ref@1.2.4 requires a peer of react@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN use-sidecar@1.0.3 requires a peer of react@^16.8.0 but none is installed. You must install peer dependencies yourself.&#xA;11:02:39 AM: npm WARN using-gatsby-source-wordpress-experimental@0.0.1 No repository field.&#xA;11:02:39 AM: npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules/fsevents):&#xA;11:02:39 AM: npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;linux&quot;,&quot;arch&quot;:&quot;x64&quot;})&#xA;11:02:39 AM: npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.3 (node_modules/chokidar/node_modules/fsevents):&#xA;11:02:39 AM: npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.3: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;linux&quot;,&quot;arch&quot;:&quot;x64&quot;})&#xA;11:02:39 AM: added 132 packages from 208 contributors, removed 196 packages, updated 169 packages and audited 2539 packages in 31.091s&#xA;11:02:40 AM: 147 packages are looking for funding&#xA;11:02:40 AM:   run `npm fund` for details&#xA;11:02:40 AM: found 0 vulnerabilities&#xA;11:02:40 AM: NPM modules installed&#xA;11:02:41 AM: Started restoring cached go cache&#xA;11:02:41 AM: Finished restoring cached go cache&#xA;11:02:41 AM: go version go1.14.4 linux/amd64&#xA;11:02:41 AM: go version go1.14.4 linux/amd64&#xA;11:02:41 AM: Installing missing commands&#xA;11:02:41 AM: Verify run directory&#xA;11:02:42 AM: ​&#xA;11:02:42 AM: ────────────────────────────────────────────────────────────────&#xA;11:02:42 AM:   Netlify Build                                                 &#xA;11:02:42 AM: ────────────────────────────────────────────────────────────────&#xA;11:02:42 AM: ​&#xA;11:02:42 AM: ❯ Version&#xA;11:02:42 AM:   @netlify/build 5.3.3&#xA;11:02:42 AM: ​&#xA;11:02:42 AM: ❯ Flags&#xA;11:02:42 AM:   deployId: 5fbeaa17e73bf00007ce6dab&#xA;11:02:42 AM:   mode: buildbot&#xA;11:02:42 AM: ​&#xA;11:02:42 AM: ❯ Current directory&#xA;11:02:42 AM:   /opt/build/repo&#xA;11:02:42 AM: ​&#xA;11:02:42 AM: ❯ Config file&#xA;11:02:42 AM:   No config file was defined: using default values.&#xA;11:02:42 AM: ​&#xA;11:02:42 AM: ❯ Context&#xA;11:02:42 AM:   production&#xA;11:02:42 AM: ​&#xA;11:02:42 AM: ────────────────────────────────────────────────────────────────&#xA;11:02:42 AM:   1. Build command from Netlify app                             &#xA;11:02:42 AM: ────────────────────────────────────────────────────────────────&#xA;11:02:42 AM: ​&#xA;11:02:42 AM: $ gatsby build&#xA;11:02:46 AM: success open and validate gatsby-configs - 0.043s&#xA;11:02:47 AM: success load plugins - 1.200s&#xA;11:02:47 AM: plugin-netlify-cache: Restoring 46 cached files for .cache directory with 0 already existing files.&#xA;11:02:48 AM: plugin-netlify-cache: Netlify cache restored&#xA;11:02:48 AM: success onPreInit - 1.074s&#xA;11:02:48 AM: success delete html and css files from previous builds - 0.003s&#xA;11:02:48 AM: info We've detected that the Gatsby cache is incomplete (the .cache directory existsbut the public directory does not). As a precaution, we're deleting your site's&#xA;11:02:48 AM: cache to ensure there's no stale data.success initialize cache - 0.166s&#xA;11:02:49 AM: success copy gatsby files - 0.036s&#xA;11:02:49 AM: success onPreBootstrap - 0.014s&#xA;11:02:52 AM: ⠀&#xA;11:02:52 AM: info  gatsby-source-wordpress &#xA;11:02:52 AM:    This is either your first build or the cache was cleared.&#xA;11:02:52 AM:    Please wait while your WordPress data is synced to your Gatsby cache.&#xA;11:02:52 AM:    Maybe now's a good time to get up and stretch? :D&#xA;11:02:54 AM: success  gatsby-source-wordpress  writing GraphQL queries to disk at ./WordPress/GraphQL/ - 0.234s&#xA;11:02:54 AM: success  gatsby-source-wordpress  ingest WPGraphQL schema - 2.765s&#xA;11:02:54 AM: success createSchemaCustomization - 5.075s&#xA;11:02:55 AM: success  gatsby-source-wordpress  Comment - 0.806s - fetched 1&#xA;11:02:56 AM: success  gatsby-source-wordpress  User - 2.085s - fetched 1&#xA;11:02:57 AM: success  gatsby-source-wordpress  fetch root fields - 2.642s&#xA;11:02:57 AM: success  gatsby-source-wordpress  Menu - 2.830s - fetched 2&#xA;11:02:57 AM: success  gatsby-source-wordpress  ContentType - 2.884s - fetched 3&#xA;11:02:57 AM: success  gatsby-source-wordpress  Category - 2.914s - fetched 1&#xA;11:02:57 AM: success  gatsby-source-wordpress  MenuItem - 2.973s - fetched 10&#xA;11:02:57 AM: success  gatsby-source-wordpress  UserRole - 3.277s - fetched 0&#xA;11:02:57 AM: success  gatsby-source-wordpress  PostFormat - 3.282s - fetched 0&#xA;11:02:57 AM: success  gatsby-source-wordpress  Tag - 3.299s - fetched 0&#xA;11:02:57 AM: success  gatsby-source-wordpress  Taxonomy - 3.316s - fetched 3&#xA;11:02:57 AM: success  gatsby-source-wordpress  Post - 3.368s - fetched 2&#xA;11:02:57 AM: success  gatsby-source-wordpress  Page - 3.395s - fetched 6&#xA;11:02:59 AM: success  gatsby-source-wordpress  MediaItem - 1.148s - fetched 1&#xA;11:02:59 AM: success  gatsby-source-wordpress  creating nodes - 1.149s&#xA;11:02:59 AM: success  gatsby-source-wordpress  fetching nodes - 4.550s - 30 total&#xA;11:02:59 AM: success Downloading remote files - 0.400s - 1/1 2.50/s&#xA;11:02:59 AM: success Checking for changed pages - 0.000s&#xA;11:02:59 AM: success source and transform nodes - 4.942s&#xA;11:02:59 AM: success building schema - 0.674s&#xA;11:02:59 AM: info Total nodes: 149, SitePage nodes: 9 (use --verbose for breakdown)&#xA;11:02:59 AM: success createPages - 0.090s&#xA;11:02:59 AM: success Checking for changed pages - 0.000s&#xA;11:02:59 AM: success createPagesStatefully - 0.092s&#xA;11:03:00 AM: success update schema - 0.036s&#xA;11:03:00 AM: success onPreExtractQueries - 0.001s&#xA;11:03:01 AM: success extract queries from components - 1.046s&#xA;11:03:01 AM: success write out redirect data - 0.001s&#xA;11:03:01 AM: vips_value_hash: no case for NULL&#xA;11:03:01 AM:    type 64, gchararray&#xA;11:03:01 AM:    generic 53, GParamString&#xA;11:03:01 AM: vips_value_hash: no case for 0.000000&#xA;11:03:01 AM:    type 60, gdouble&#xA;11:03:01 AM:    generic 109, GParamDouble&#xA;11:03:01 AM: vips_value_hash: no case for FALSE&#xA;11:03:01 AM:    type 20, gboolean&#xA;11:03:01 AM:    generic 76, GParamBoolean&#xA;11:03:01 AM: vips_value_hash: no case for ((VipsAccess) VIPS_ACCESS_RANDOM)&#xA;11:03:01 AM:    type 82052320, VipsAccess&#xA;11:03:01 AM:    generic 80, GParamEnum&#xA;11:03:01 AM: vips_value_hash: no case for FALSE&#xA;11:03:01 AM:    type 20, gboolean&#xA;11:03:01 AM:    generic 76, GParamBoolean&#xA;11:03:02 AM: ​&#xA;11:03:02 AM: ────────────────────────────────────────────────────────────────&#xA;11:03:02 AM:   &quot;build.command&quot; failed                                        &#xA;11:03:02 AM: ────────────────────────────────────────────────────────────────&#xA;11:03:02 AM: ​&#xA;11:03:02 AM:   Error message&#xA;11:03:02 AM:   Command was killed with SIGSEGV (Segmentation fault): gatsby build&#xA;11:03:02 AM: ​&#xA;11:03:02 AM:   Error location&#xA;11:03:02 AM:   In Build command from Netlify app:&#xA;11:03:02 AM:   gatsby build&#xA;11:03:02 AM: ​&#xA;11:03:02 AM:   Resolved config&#xA;11:03:02 AM:   build:&#xA;11:03:02 AM:     command: gatsby build&#xA;11:03:02 AM:     commandOrigin: ui&#xA;11:03:02 AM:     publish: /opt/build/repo/public&#xA;11:03:02 AM: Caching artifacts&#xA;11:03:02 AM: Started saving node modules&#xA;11:03:02 AM: Finished saving node modules&#xA;11:03:02 AM: Started saving build plugins&#xA;11:03:02 AM: Finished saving build plugins&#xA;11:03:02 AM: Started saving pip cache&#xA;11:03:02 AM: Finished saving pip cache&#xA;11:03:02 AM: Started saving emacs cask dependencies&#xA;11:03:02 AM: Finished saving emacs cask dependencies&#xA;11:03:02 AM: Started saving maven dependencies&#xA;11:03:02 AM: Finished saving maven dependencies&#xA;11:03:02 AM: Started saving boot dependencies&#xA;11:03:02 AM: Finished saving boot dependencies&#xA;11:03:02 AM: Started saving go dependencies&#xA;11:03:02 AM: Finished saving go dependencies&#xA;11:03:02 AM: Build failed due to a user error: Build script returned non-zero exit code: 2&#xA;11:03:02 AM: Failing build: Failed to build site&#xA;11:03:02 AM: Failed during stage 'building site': Build script returned non-zero exit code: 2&#xA;11:03:02 AM: Finished processing build request in 1m16.889531876s&#xA;</code></pre>&#xA;<p>Here's a screenshot of my Netlify deploy settings:&#xA;<a href=""https://i.stack.imgur.com/Sb5Dw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Sb5Dw.png"" alt=""PDM-Gatsby Netlify deploy settings"" /></a></p>&#xA;",12494781,,12494781,2020-11-25 20:59:23,2022-04-03 07:03:41,Gatsby Failed Build on Netlify,<reactjs><npm><graphql><gatsby><netlify>,2,4,0,2020-11-25 20:23:10
65014576,2,,65012190,1,,"<p>So I've changed nothing in my project, or the gitHub page, but just setting up Netlify's CLI and using &quot;netlify deploy&quot; instead of the auto-deploy on git push setting solved it</p>&#xA;<p>Thanks @DarioRega for getting me to think about that.</p>&#xA;<p>So something between github and netlify might have caused the issue? I'm not sure</p>&#xA;<p>Using Netlify's CLI was way faster for deploying too (compared to pushing to github and triggering an auto-deploy)</p>&#xA;",12494781,,,,2020-11-26 00:32:33,"",,0,0,0,2020-11-26 00:32:33
65019746,1,,,1,69,"<p><strong>Some context:</strong></p>&#xA;<p>We have a nextjs app that renders a page to HTML (using next's <code>renderToHTML</code>). We use a Puppeteer browser page to create a PDF from the HTML, which is then returned from the service running the nextjs app.</p>&#xA;<p>The pages that are rendered using <code>renderToHTML</code> contain one or more queries that are executed using Apollo.</p>&#xA;<p><strong>The problem</strong></p>&#xA;<p>We are experiencing a problem where old queries are being re-run when the app generates a new page.</p>&#xA;<p>For example: if there are 3 requests one after another, the first request will execute the queries needed to generate the page being requested; the second will execute both the queries of the first and the second page; and the third will execute the queries of all three pages.</p>&#xA;<p>We have measured the incoming requests to the PDF service, and how often (and for which pages) that <code>renderToHTML</code> is called, and they are both working correctly (meaning that the service is not being spammed with requests which would cause the repeated queries).</p>&#xA;<p>The issue is that <strong>1 request</strong>, generates <strong>1 page</strong>, but <strong>n Apollo queries</strong> are executed, for both the current and a number of previous requests.</p>&#xA;<p>It seems like a some kind of caching problem, where the pages/requests are being cached and re-executed when a new request comes in, but we aren't sure if it is next or puppeteer that is causing the problem.</p>&#xA;<p>Has anyone encountered this/a similar problem? Any information that anyone has about this issue would be very greatly received!</p>&#xA;<p><strong>Versions</strong></p>&#xA;<p><code>&quot;next&quot;: &quot;10.0.0&quot;</code> (the issue started with <code>&quot;9.5.3&quot;</code>, we tried to update next to see if it solved the problem)&#xA;<code>&quot;@apollo/client&quot;: &quot;3.2.2&quot;</code>&#xA;<code>&quot;puppeteer&quot;: &quot;5.4.0&quot;</code></p>&#xA;",8713319,,,,2020-11-26 10:01:19,Apollo repeating queries in with nextjs + puppeteer,<pdf><next.js><puppeteer><apollo>,0,0,0,2020-11-26 10:01:19
65023280,1,,,0,326,"<p>I am trying to test if I can connect to a graphql API from a <code>rails</code> backend by using <code>graphql-client</code> with the following code:</p>&#xA;<pre><code>require &quot;graphql/client&quot;&#xA;require &quot;graphql/client/http&quot;&#xA;&#xA;HTTP = GraphQL::Client::HTTP.new(&quot;https://x.x.x.x:3100/graphql&quot;) &#xA;&#xA;Schema = GraphQL::Client.load_schema(HTTP)&#xA;&#xA;Client = GraphQL::Client.new(schema: Schema, execute: HTTP)&#xA;</code></pre>&#xA;<p>but I get the following error:</p>&#xA;<pre><code>    9: from db/seeds.rb:14:in `&lt;main&gt;'&#xA;    8: from /Library/Ruby/Gems/2.6.0/gems/graphql-client-0.16.0/lib/graphql/client.rb:61:in `load_schema'&#xA;    7: from /Library/Ruby/Gems/2.6.0/gems/graphql-client-0.16.0/lib/graphql/client.rb:77:in `dump_schema'&#xA;    6: from /Library/Ruby/Gems/2.6.0/gems/graphql-client-0.16.0/lib/graphql/client/http.rb:73:in `execute'&#xA;    5: from /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/lib/ruby/2.6.0/net/http.rb:1470:in `request'&#xA;    4: from /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/lib/ruby/2.6.0/net/http.rb:919:in `start'&#xA;    3: from /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/lib/ruby/2.6.0/net/http.rb:930:in `do_start'&#xA;    2: from /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/lib/ruby/2.6.0/net/http.rb:996:in `connect'&#xA;    1: from /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/lib/ruby/2.6.0/net/protocol.rb:44:in `ssl_socket_connect'&#xA;/System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/lib/ruby/2.6.0/net/protocol.rb:44:in `connect_nonblock': SSL_connect returned=1 errno=0 state=SSLv3 read server hello A: wrong version number (OpenSSL::SSL::SSLError)&#xA;</code></pre>&#xA;<p><code>SSL_connect returned=1 errno=0 state=SSLv3 read server hello A: wrong version number (OpenSSL::SSL::SSLError)</code></p>&#xA;<p>I have no idea how to get that solved as when I look that error up it is always in different situation than mine.</p>&#xA;",3755529,,,,2020-11-26 13:45:52,Graphql-Client ruby OpenSSL::SSL::SSLError,<ruby-on-rails><ruby><graphql><graphqlclient>,0,3,0,2020-11-26 13:45:52
65026758,1,65027059,,0,525,"<p>I'm using <code>Gatsby</code> and I'm trying to fetch some API contents using the <code>Axios</code> library, so far I have added the following configuration in <code>gatsby-config.js</code>:</p>&#xA;<pre><code>proxy: [&#xA;{&#xA;    prefix: &quot;/api&quot;,&#xA;    url: process.env.API_URL,&#xA;  },&#xA;],&#xA;</code></pre>&#xA;<p>where <code>API_URL</code> is loaded at the beginning of <code>gatsby-config.js</code> using:</p>&#xA;<pre><code>require(&quot;dotenv&quot;).config({&#xA;  path: `.env.${process.env.NODE_ENV}`,&#xA;})&#xA;</code></pre>&#xA;<p>now the problem's that when I perform a request like that:</p>&#xA;<pre><code>const res = await axios.get(&quot;/api/sections&quot;)&#xA;</code></pre>&#xA;<p>this is executed using <code>http://localhost:8000/api/sections</code> which is actually weird 'cause I suppose that <code>Gatsby</code> should intercept the <code>/api</code> prefix and then use the url that I gave using <code>API_URL</code> variable.</p>&#xA;<p>I'm running <code>Gatsby</code> in dev mode.</p>&#xA;<p>What I did wrong?</p>&#xA;",10950788,,5585371,2020-11-26 17:56:26,2020-11-26 18:34:21,Cannot use proxy with Gatsby,<node.js><axios><graphql><environment-variables><gatsby>,1,0,0,2020-11-26 17:28:07
65027059,2,,65026758,1,,"<p><code>API_URL</code> is not loaded at the beggining of the <code>gatsby-config.js</code>. The following snippet:</p>&#xA;<pre><code>require(&quot;dotenv&quot;).config({&#xA;  path: `.env.${process.env.NODE_ENV}`,&#xA;})&#xA;</code></pre>&#xA;<p>Tells Gatsby to look for environment variables in <code>.env.development</code> and <code>.env.production</code> (both by default running <code>gatsby develop</code> or <code>gatsby build</code> respectively). Since you are not defining an environment file, Gatsby doesn't know what's <code>process.env.API_URL</code>.</p>&#xA;<p>Create a <code>.env.development</code> and <code>.env.production</code> in the root of your project and define an <code>API_URL</code> variable.</p>&#xA;<pre><code>API_URL= yourUrl.com&#xA;</code></pre>&#xA;<p>Change your axios request to:</p>&#xA;<pre><code>const axios = require('axios');&#xA;const res = await axios.get('/api/sections', {&#xA;  proxy: {&#xA;    host: process.env.API_URL,&#xA;    port: 3000 //remove if not needed&#xA;  }&#xA;});&#xA;</code></pre>&#xA;<p>Afterward, your request will be prefixed.</p>&#xA;<p>Gatsby doesn't catch external request if you are using third-party modules. According to <a href=""https://www.gatsbyjs.com/docs/api-proxy/"" rel=""nofollow noreferrer"">API Proxy docs</a> it seems to work only with the native JavaScript <code>fetch</code> function.</p>&#xA;",5585371,,5585371,2020-11-26 18:34:21,2020-11-26 18:34:21,"",,0,7,0,2020-11-26 17:51:26
65041579,2,,64957942,3,,"<p>Dumb mistake on my part.&#xA;<strong>Solution</strong>:  <em><strong>You must manually stop and restart the client-side react server for the proxy to take effect.  Just saving a file is not sufficient.</strong></em></p>&#xA;<p>Also, the HttpLink <code>uri: &quot;/graphql&quot;</code> is the correct one.  It works as expected (when you restart the react server!)</p>&#xA;",4752250,,,,2020-11-27 17:40:09,"",,0,0,0,2020-11-27 17:40:09
65041941,2,,65041549,3,,"<p>Hasura uses a special way for dealing with CORS, depending on which environment you are using.&#xA;If you are using heroku, in your env variables you need to add Hasura specific variables to enable CORS.</p>&#xA;<pre><code>HASURA_GRAPHQL_CORS_DOMAIN=&quot;https://*.foo.bar.com:8080, http://*.localhost, http://localhost:3000, http://example.com&quot;&#xA;</code></pre>&#xA;<p>Check out the <a href=""https://hasura.io/docs/1.0/graphql/core/deployment/graphql-engine-flags/config-examples.html#configure-cors"" rel=""nofollow noreferrer"">CORS configuration example</a></p>&#xA;",11204400,,,,2020-11-27 18:06:51,"",,0,2,0,2020-11-27 18:06:51
65065013,1,,,2,1970,"<p>In React, NextJS, following the excellent Leigh Halliday YouTube tutorial: <a href=""https://www.youtube.com/watch?v=_HOp7hBEjp8"" rel=""nofollow noreferrer"">https://www.youtube.com/watch?v=_HOp7hBEjp8</a> ,&#xA;I want to fetch my data from an external API, instead of having hardcoded local JSON (file src/data.ts )like him:</p>&#xA;<pre><code>export const data = {&#xA;bio: {&#xA;name: &quot;FirstName Surname&quot;,&#xA;tagline: &quot;Developer&quot;, &#xA;.&#xA;.&#xA;}&#xA;</code></pre>&#xA;<p>I'm trying to do something like this (replaces the hardcoded content in src/data.ts):</p>&#xA;<pre><code>export const data = async () =&gt; {&#xA; const res = await fetch ('https://api...link');&#xA; console.log('in fetch: res: ' + res);&#xA; return res.json();&#xA;};&#xA;</code></pre>&#xA;<p>This fetch fails badly, I can see from the browser developer panel. I never see the console log message, but I can see there is something with the fetch. Any ideas?&#xA;UPDATE: This is the error message:</p>&#xA;<pre><code>name: graphql, status: 400, type: fetch, initiator: createHttpLink.js: 76&#xA;</code></pre>&#xA;",5700213,,5700213,2020-11-29 21:16:45,2020-11-29 21:16:45,How to fetch data from external API and get it into Next.JS?,<reactjs><graphql><next.js><apollo-server>,0,3,0,2020-11-29 20:48:02
65078071,2,,64004149,0,,"<p>I have figured out that the EC2 instance attached with Elastic Beanstalk has a default Nginx configuration.&#xA;I have manually changed nginx.conf with</p>&#xA;<pre><code>proxy_set_header Upgrade $http_upgrade;&#xA;proxy_set_header Connection &quot;upgrade&quot;;&#xA;</code></pre>&#xA;<p>and it worked.<a href=""https://aws.amazon.com/blogs/database/how-to-build-a-chat-application-with-amazon-elasticache-for-redis/"" rel=""nofollow noreferrer"">More Info</a></p>&#xA;",7730521,,,,2020-11-30 17:12:03,"",,0,1,0,2020-11-30 17:12:03
65086678,1,65087368,,-2,52,"<p>I'm developing a GraphQL API on Laravel for mobile and web applications. One of the frontend developer asking me to disable CORS on the server side because he cannot work with the API due to CORS problem. The Vue application on his localhost is making requests to my Test API which is on a URL.</p>&#xA;<p>From what I understand this isn't problem for the server side, CORS is s security measure for the server. I believe for development Vue developer need to handle this problem with adding a proxy to his localhost.</p>&#xA;",2451526,,,,2020-12-01 08:56:05,Who has the responsibility to handle CORS?,<laravel><vue.js><graphql><cors><client-server>,1,2,0,2020-12-01 08:00:05
65102004,1,,,2,225,"<p>I am trying to pickup the MERNG stack and started following a tutorial. My problem is the exact one from the link below:&#xA;<a href=""https://stackoverflow.com/questions/64799192/typeerror-cannot-read-property-getposts-of-undefined-functional-components"">TypeError: Cannot read property &#39;getPosts&#39; of undefined functional components</a></p>&#xA;<p>Much progress was made towards solving the problem in the threads of the link above but the solution fell short since the person is still having the same TypeError after implementing the solutions.</p>&#xA;<p>***I just wanted to add that I went into my Register.js file and imported useContext from react and it seemed to fix my problem. When I took away the import the TypeError came back when clicking the Register button. Not sure if there's a reason for this. Not sure if useContext is directly related in solving the issue.</p>&#xA;<p>For background, the video I am following is <a href=""https://www.youtube.com/watch?v=n1mdAPFq2Os"" rel=""nofollow noreferrer"">https://www.youtube.com/watch?v=n1mdAPFq2Os</a>&#xA;and my issue arose on 3:09:46 when I added <code>props.history.push('/')</code> to</p>&#xA;<pre><code>const [addUser, {loading} = useMutation(REGISTER_USER, {&#xA;   update(_, result){&#xA;       console.log(result)&#xA;       props.history.push('/');&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>Above code found in client&gt;src&gt;pages&gt;Register.js</p>&#xA;<p>Link to github repo: <a href=""https://github.com/hidjou/classsed-graphql-mern-apollo/tree/master/client"" rel=""nofollow noreferrer"">https://github.com/hidjou/classsed-graphql-mern-apollo/tree/master/client</a></p>&#xA;<p>Link to deployed app: <a href=""https://gracious-shannon-271ede.netlify.app/"" rel=""nofollow noreferrer"">https://gracious-shannon-271ede.netlify.app/</a></p>&#xA;",14077628,,482077,2020-12-02 11:03:35,2020-12-02 11:03:35,I get a TypeError: Cannot read property 'getPosts' of undefined when registering a new user,<javascript><reactjs><typeerror><apollo-client>,0,1,0,2020-12-02 03:59:06
65117219,1,,,0,55,"<p>I have a machine with a <a href=""https://github.com/input-output-hk/cardano-graphql"" rel=""nofollow noreferrer"">docker-graphql/server</a> that runs a Graphql API.</p>&#xA;<p>I was normally connecting to that machine with HTTP requests trough:</p>&#xA;<pre class=""lang-rb prettyprint-override""><code>uri = URI.parse(&quot;http://#{ENV['IP_CARDANO_GRAPHQL_API_SERVER']}:3100/&quot;)&#xA;request = Net::HTTP::Post.new(uri)&#xA;request.content_type = &quot;application/json&quot;&#xA;request[&quot;Accept&quot;] = &quot;application/json&quot;&#xA;request[&quot;Connection&quot;] = &quot;keep-alive&quot;&#xA;request[&quot;Dnt&quot;] = &quot;1&quot;&#xA;request[&quot;Origin&quot;] = &quot;http://#{ENV['IP_CARDANO_GRAPHQL_API_SERVER']}:3100&quot;&#xA;&#xA;obj = {&quot;query&quot;: query}&#xA;&#xA;request.body = JSON.dump(obj)&#xA;&#xA;req_options = {&#xA;    use_ssl: uri.scheme == &quot;https&quot;,&#xA;    read_timeout: 5&#xA;}&#xA;&#xA;response = Net::HTTP.start(uri.hostname, uri.port, req_options) do |http|&#xA;    http.request(request)&#xA;end&#xA;# puts response.code&#xA;return JSON.parse(response.body)['data']&#xA;</code></pre>&#xA;<p>but suddenly it stopped working end up with this problem:</p>&#xA;<pre><code>Caused by:&#xA;Net::ReadTimeout: Net::ReadTimeout with #&lt;TCPSocket:(closed)&gt;&#xA;/Users/sergio/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/net/protocol.rb:217:in `rbuf_fill'&#xA;/Users/sergio/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/net/protocol.rb:191:in `readuntil'&#xA;/Users/sergio/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/net/protocol.rb:201:in `readline'&#xA;/Users/sergio/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/net/http/response.rb:40:in `read_status_line'&#xA;/Users/sergio/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/net/http/response.rb:29:in `read_new'&#xA;/Users/sergio/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/net/http.rb:1509:in `block in transport_request'&#xA;/Users/sergio/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/net/http.rb:1506:in `catch'&#xA;/Users/sergio/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/net/http.rb:1506:in `transport_request'&#xA;/Users/sergio/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/net/http.rb:1479:in `request'&#xA;/Users/sergio/Documents/github/learn/front-end/delegations-explorer/Rakefile:218:in `block in query_graphql'&#xA;/Users/sergio/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/net/http.rb:920:in `start'&#xA;/Users/sergio/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/net/http.rb:605:in `start'&#xA;/Users/sergio/Documents/github/learn/front-end/delegations-explorer/Rakefile:217:in `query_graphql'&#xA;/Users/sergio/Documents/github/learn/front-end/delegations-explorer/Rakefile:130:in `block (2 levels) in &lt;top (required)&gt;'&#xA;/Users/sergio/Documents/github/learn/front-end/delegations-explorer/Rakefile:116:in `each'&#xA;/Users/sergio/Documents/github/learn/front-end/delegations-explorer/Rakefile:116:in `block in &lt;top (required)&gt;'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/task.rb:281:in `block in execute'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/task.rb:281:in `each'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/task.rb:281:in `execute'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/task.rb:219:in `block in invoke_with_call_chain'&#xA;/Users/sergio/.rvm/rubies/ruby-2.6.3/lib/ruby/2.6.0/monitor.rb:230:in `mon_synchronize'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/task.rb:199:in `invoke_with_call_chain'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/task.rb:188:in `invoke'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/application.rb:160:in `invoke_task'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/application.rb:116:in `block (2 levels) in top_level'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/application.rb:116:in `each'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/application.rb:116:in `block in top_level'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/application.rb:125:in `run_with_threads'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/application.rb:110:in `top_level'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/application.rb:83:in `block in run'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/application.rb:186:in `standard_exception_handling'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/lib/rake/application.rb:80:in `run'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/gems/rake-13.0.1/exe/rake:27:in `&lt;top (required)&gt;'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/bin/rake:23:in `load'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/bin/rake:23:in `&lt;main&gt;'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/bin/ruby_executable_hooks:24:in `eval'&#xA;/Users/sergio/.rvm/gems/ruby-2.6.3/bin/ruby_executable_hooks:24:in `&lt;main&gt;'&#xA;Tasks: TOP =&gt; getRewards&#xA;</code></pre>&#xA;<p>The playgroung works just fine from the local machine where the ruby script is running from.</p>&#xA;",3755529,,3755529,2020-12-03 11:32:50,2020-12-03 11:32:50,GraphQL API Lost Connection,<ruby><docker-compose><graphql>,0,3,0,2020-12-02 22:38:55
65119200,2,,64933954,1,,<p>I solved this by upgrading apollo gateway to the latest version</p>&#xA;,486158,,,,2020-12-03 02:51:37,"",,0,2,0,2020-12-03 02:51:37
65173943,1,,,0,275,"<p>Here is the error being returned from the query playground when I try to run any query.</p>&#xA;<p>I really have no idea where this error is originating because from the stack trace it looks like it's deep inside the apollo internals.</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;error&quot;: {&#xA;    &quot;errors&quot;: [&#xA;      {&#xA;        &quot;message&quot;: &quot;Cannot convert undefined or null to object&quot;,&#xA;        &quot;extensions&quot;: {&#xA;          &quot;code&quot;: &quot;INTERNAL_SERVER_ERROR&quot;,&#xA;          &quot;exception&quot;: {&#xA;            &quot;stacktrace&quot;: [&#xA;              &quot;TypeError: Cannot convert undefined or null to object&quot;,&#xA;              &quot;    at Function.values (&lt;anonymous&gt;)&quot;,&#xA;              &quot;    at C:\\Users\\ccrow\\Documents\\Repositories\\fullstack-boilerplate\\node_modules\\apollo-server-core\\dist\\requestPipeline.js:343:53&quot;,&#xA;              &quot;    at Generator.next (&lt;anonymous&gt;)&quot;,&#xA;              &quot;    at C:\\Users\\ccrow\\Documents\\Repositories\\fullstack-boilerplate\\node_modules\\apollo-server-core\\dist\\requestPipeline.js:8:71&quot;,&#xA;              &quot;    at new Promise (&lt;anonymous&gt;)&quot;,&#xA;              &quot;    at __awaiter (C:\\Users\\ccrow\\Documents\\Repositories\\fullstack-boilerplate\\node_modules\\apollo-server-core\\dist\\requestPipeline.js:4:12)&quot;,&#xA;              &quot;    at initializeDataSources (C:\\Users\\ccrow\\Documents\\Repositories\\fullstack-boilerplate\\node_modules\\apollo-server-core\\dist\\requestPipeline.js:338:20)&quot;,&#xA;              &quot;    at Object.&lt;anonymous&gt; (C:\\Users\\ccrow\\Documents\\Repositories\\fullstack-boilerplate\\node_modules\\apollo-server-core\\dist\\requestPipeline.js:41:15)&quot;,&#xA;              &quot;    at Generator.next (&lt;anonymous&gt;)&quot;,&#xA;              &quot;    at C:\\Users\\ccrow\\Documents\\Repositories\\fullstack-boilerplate\\node_modules\\apollo-server-core\\dist\\requestPipeline.js:8:71&quot;,&#xA;              &quot;    at new Promise (&lt;anonymous&gt;)&quot;,&#xA;              &quot;    at __awaiter (C:\\Users\\ccrow\\Documents\\Repositories\\fullstack-boilerplate\\node_modules\\apollo-server-core\\dist\\requestPipeline.js:4:12)&quot;,&#xA;              &quot;    at Object.processGraphQLRequest (C:\\Users\\ccrow\\Documents\\Repositories\\fullstack-boilerplate\\node_modules\\apollo-server-core\\dist\\requestPipeline.js:34:12)&quot;,&#xA;              &quot;    at C:\\Users\\ccrow\\Documents\\Repositories\\fullstack-boilerplate\\node_modules\\apollo-server-core\\dist\\runHttpQuery.js:164:62&quot;,&#xA;              &quot;    at Generator.next (&lt;anonymous&gt;)&quot;,&#xA;              &quot;    at C:\\Users\\ccrow\\Documents\\Repositories\\fullstack-boilerplate\\node_modules\\apollo-server-core\\dist\\runHttpQuery.js:8:71&quot;&#xA;            ]&#xA;          }&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Here is a link to my project repo: <a href=""https://github.com/ccrowley96/fullstack-boilerplate"" rel=""nofollow noreferrer"">project repo</a></p>&#xA;<p>Here is a link to the server index file which starts the apollo-server and the express app: <a href=""https://github.com/ccrowley96/fullstack-boilerplate/blob/main/server/index.js"" rel=""nofollow noreferrer"">index.js</a></p>&#xA;",6000216,,6000216,2020-12-06 22:58:23,2020-12-07 00:26:42,Graph QL Apollo Server throwing INTERNAL_SERVER_ERROR. Can't find source of error,<express><graphql><apollo><apollo-server><mern>,1,2,0,2020-12-06 22:53:51
65202333,1,65239010,,-1,425,"<pre><code>My Resource -:&#xA;&lt;Resource name=&quot;ReliabilityEventLog&quot; list={ListGuesser} /&gt;&#xA;&#xA;&#xA;This is my response from the server_:&#xA;&#xA;{&#xA;&quot;data&quot;: {&#xA;&quot;items&quot;: [{&#xA;&quot;createdAt&quot;: &quot;2020-12-04T04:24:00.118Z&quot;,&#xA;&quot;deletedAt&quot;: null,&#xA;&quot;eventName&quot;: &quot;Confirmed Withdraw* between 5 and 24 hrs&quot;,&#xA;&quot;eventDate&quot;: &quot;2020-12-04T00:00:00.000Z&quot;,&#xA;&quot;eventPoint&quot;: -20,&#xA;&quot;shiftId&quot;: 44332,&#xA;&quot;facilityName&quot;: &quot;Tester Facility Friendswood&quot;,&#xA;&quot;facilityId&quot;: 927,&#xA;&quot;id&quot;: 4,&#xA;&quot;nurseId&quot;: 12508,&#xA;]}}&#xA;</code></pre>&#xA;<p>The ListGuesser renders &quot;no results found&quot; and the data was returned from the network tab.</p>&#xA;<p>Is there any explanation for this behavior or how to fix it? Any help will be appraciated.</p>&#xA;",8160309,,8160309,2020-12-08 16:14:12,2020-12-10 17:05:48,"react-admin ListGuesser showing ""No results found""",<reactjs><graphql><apollo-client><react-admin>,2,3,0,2020-12-08 15:55:40
65205959,2,,65205707,0,,<p>It looks like the issue is in this spot where you do <code>{error}</code>. I would double check what error actually is but it looks like its an object and not a string like you are using it</p>&#xA;<pre><code>      &lt;Typography&#xA;        variant={&quot;overline&quot;}&#xA;        className={classes.note}&#xA;        component={&quot;div&quot;}&#xA;        color={&quot;error&quot;}&#xA;      &gt;&#xA;        {error}&#xA;      &lt;/Typography&gt;&#xA;   &#xA;</code></pre>&#xA;,1030730,,,,2020-12-08 19:52:50,"",,0,2,0,2020-12-08 19:52:50
65215867,2,,65154714,0,,"<p>if you run in to this issue, its a bug in the odata module and PR fix is available <a href=""https://github.com/Urigo/graphql-mesh/pull/1276"" rel=""nofollow noreferrer"">here</a></p>&#xA;",2671890,,,,2020-12-09 11:26:04,"",,0,0,0,2020-12-09 11:26:04
65229363,1,,,3,1759,<p>When fetching images it returns</p>&#xA;<pre><code>Fetching image_url is taking a long time time (longer than 15 seconds). This file is File_size MB``` After few of this line it crashes with ```error RequestError: Timeout awaiting 'request' for 30000ms. &#xA;</code></pre>&#xA;<p>How can I increase this 15sec timeout limit?</p>&#xA;,14425902,,5585371,2020-12-10 06:17:50,2021-02-05 15:41:32,Increase timeout limit gatsby-source-wordpress-experimental,<reactjs><wordpress><graphql><gatsby><gatsby-plugin>,2,0,0,2020-12-10 06:10:45
65232953,2,,65232476,0,,"<p>You can do it using the fetch call.</p>&#xA;<pre><code>const query = `query {&#xA;  Some query&#xA;}`;&#xA; &#xA;fetch(url, {&#xA;  method: 'POST',&#xA;  headers: {&#xA;    'Content-Type': 'application/json',&#xA;    'Accept': 'application/json',&#xA;  },&#xA;  body: JSON.stringify({&#xA;    query&#xA;  })&#xA;})&#xA;  .then(r =&gt; r.json())&#xA;  .then(data =&gt; console.log('data returned:', data));&#xA;</code></pre>&#xA;",8580968,,,,2020-12-10 10:40:15,"",,0,3,0,2020-12-10 10:40:15
65255337,1,65255813,,0,1486,"<p>I've been trying to run a MERN stack app on Heroku in which I am using both Express and GraphQL.&#xA;Express for authentication and updates. GraphQL for fetching data for login options (which school you want to sign in to) &amp; save data to React.Context upon login that is related to the user.</p>&#xA;<p>I finished the proposed part of the project and deployed the app to Heroku for testing and gathering feedback.</p>&#xA;<ul>&#xA;<li>The app builds successfully</li>&#xA;<li>Environment variables for mongodb_uri is provided</li>&#xA;</ul>&#xA;<p>The problem is when I open the app, the front disappears after a few seconds when the server responds that the <a href=""https://i.stack.imgur.com/6wSpM.png"" rel=""nofollow noreferrer"">GraphQL connection is refused</a>. However, the app running on my pc running perfectly fine with <code>nodemon</code> using  <code>concurrently</code>.</p>&#xA;<p>I am totally hopeless since:</p>&#xA;<ul>&#xA;<li>The app using CORS</li>&#xA;<li>graphiql is false</li>&#xA;</ul>&#xA;<p>Procfile contains the proper path to the server app and on the front proxy included to connect to 8080 as the app running on 3000.</p>&#xA;<p>Heres related code example for the front:</p>&#xA;<pre><code>// index.js&#xA;const client = new ApolloClient({&#xA;  uri: 'http://localhost:8080/graphql'&#xA;})&#xA;&#xA;ReactDOM.render(&#xA;  &lt;React.StrictMode&gt;&#xA;    &lt;ApolloProvider client={client} &gt;&#xA;      &lt;Router&gt;&#xA;        &lt;App /&gt;&#xA;      &lt;/Router&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  &lt;/React.StrictMode&gt;,&#xA;  document.getElementById('app')&#xA;);&#xA;</code></pre>&#xA;<p>And the back:</p>&#xA;<pre><code>// connect to DB&#xA;mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost/unimeetingsapp', {&#xA;    useNewUrlParser: true,&#xA;    useUnifiedTopology: true,&#xA;    useFindAndModify: false,&#xA;    useCreateIndex: true&#xA;});&#xA;mongoose.connection.on('open', ()=&gt;{&#xA;    console.log('Connected to Database')&#xA;});&#xA;&#xA;// heroku&#xA;if (process.env.NODE_ENV === &quot;production&quot;) {&#xA;    app.use(express.static(&quot;../client/build&quot;));&#xA;}&#xA;  &#xA;app.use(bodyParser.json());&#xA;app.use(cors());&#xA;//app.use(express.urlencoded({ extended: false }));&#xA;&#xA;//////////////////////&#xA;// Routes&#xA;//////////////////////&#xA;&#xA;// user Auth&#xA;app.use(&quot;/api&quot;, userAuth);&#xA;// user Events&#xA;app.use(&quot;/userevent&quot;, addEvent);&#xA;app.use(&quot;/userevent&quot;, confirmEvent);&#xA;app.use(&quot;/userevent&quot;, notification);&#xA;// org Auth&#xA;app.use(&quot;/api/org&quot;, orgAuth);&#xA;// org Events&#xA;app.use(&quot;/api/org&quot;, register);&#xA;&#xA;app.use('/graphql', graphqlHTTP({&#xA;    schema: schema,&#xA;    graphiql: false&#xA;}))&#xA;</code></pre>&#xA;<p>I have not a clue anymore as if I enable graphiql I can access it just by putting url+/graphql so the ports are probably not the problem, and if I miss something in Procfiles Heroku would throw an error log.</p>&#xA;<p>I think the server gets the request for the options to load before it would fire up so it just <a href=""https://i.stack.imgur.com/6wSpM.png"" rel=""nofollow noreferrer"">refuses to connect.</a>&#xA;Any hint on how to solve that if that could be the problem?</p>&#xA;<p>I request the data with graphql from react-apollo in functional component and this is how I print on the front (coming from props):</p>&#xA;<pre><code>        var data = schoolsData;&#xA;        if(data.loading) {&#xA;            return (&lt;option &gt; Loading Options ...&lt;/option&gt;)&#xA;        } else {&#xA;            return data &amp;&amp; data.schools.map(school =&gt; {&#xA;                return(&#xA;                &lt;option key={school.id} value={school.id}&gt;{school.name}&lt;/option&gt;&#xA;                )&#xA;            })&#xA;        }&#xA;        &#xA;    } &#xA;&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/60XAF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/60XAF.png"" alt=""enter image description here"" /></a>&#xA;<a href=""https://i.stack.imgur.com/6wSpM.png"" rel=""nofollow noreferrer"">1</a>:&#xA;<a href=""https://i.stack.imgur.com/60XAF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/60XAF.png"" alt=""enter image description here"" /></a></p>&#xA;",14808851,,6414102,2020-12-11 16:56:02,2020-12-11 17:18:22,GraphQL Refuse connection after deployment,<node.js><reactjs><express><heroku><graphql>,1,2,0,2020-12-11 16:47:13
65255813,2,,65255337,0,,"<p>Add this and let me know its working fine:</p>&#xA;<pre><code>if (data.loading) {&#xA;  return (&lt;option &gt; Loading Options ...&lt;/option&gt;)&#xA;} else {&#xA;  if (data &amp;&amp; data.schools) {&#xA;    data.schools.map(school =&gt; {&#xA;      return (&#xA;        &lt;option key={school.id} value={school.id}&gt;{school.name}&lt;/option&gt;&#xA;      )&#xA;    })&#xA;  }else{&#xA;    return (&lt;option &gt; Data issue, School is missing! &lt;/option&gt;)&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>you said connection refused after deployment it's because you are using <code>localhost:8080</code> as server URL, try to replace it with the deployed server URL.</p>&#xA;<pre><code>// index.js&#xA;const client = new ApolloClient({&#xA;  uri: '&lt;server URL&gt;/graphql' // Need to replace &lt;server URL&gt; with server URL&#xA;})&#xA;&#xA;ReactDOM.render(&#xA;  &lt;React.StrictMode&gt;&#xA;    &lt;ApolloProvider client={client} &gt;&#xA;      &lt;Router&gt;&#xA;        &lt;App /&gt;&#xA;      &lt;/Router&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  &lt;/React.StrictMode&gt;,&#xA;  document.getElementById('app')&#xA;);&#xA;</code></pre>&#xA;",6414102,,,,2020-12-11 17:18:22,"",,0,6,0,2020-12-11 17:18:22
65310461,2,,51807756,6,,<p>I was facing the same issue. Here's how I managed to fix it:</p>&#xA;<pre><code>const { URLSearchParams } = require('url');&#xA;global.URLSearchParams = URLSearchParams;&#xA;</code></pre>&#xA;,6516254,,10951752,2020-12-15 18:01:32,2020-12-15 18:01:32,"",,0,0,0,2020-12-15 17:08:15
65343748,2,,65342280,1,,"<p>There is no option to change this behavior. You can open an issue in the GraphiQL repo (GraphQL Playground is effectively deprecated and will be merged into GraphiQL) to request this feature.</p>&#xA;<p>However, it's also unlikely that such a feature will ever be supported. Duplicate field names are perfectly valid in GraphQL. In addition, it's not uncommon to request the same field multiple times using a different alias and a different set of arguments for each instance of the field:</p>&#xA;<pre><code>query {&#xA;  activeUsers: users(isActive: true) {&#xA;    ...UserFragment&#xA;  }&#xA;  inactiveUsers: users(isActive: false) {&#xA;    ...UserFragment&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>In that context, omitting a field from the list of suggestions just because it was already included in the selection set doesn't really make sense.</p>&#xA;",6024220,,,,2020-12-17 15:36:10,"",,0,0,0,2020-12-17 15:36:10
65347780,2,,65347693,1,,<p>I think <code>talkData.data.listTalks.items</code> is equal to undefined and because of that it throws undefined.map is not a function.</p>&#xA;<pre><code>this.setState({&#xA;    talks: talkData.data.listTalks&#xA;  })&#xA;</code></pre>&#xA;<p>Maybe it happens because of that .items property.</p>&#xA;,11641614,,,,2020-12-17 20:19:45,"",,0,0,0,2020-12-17 20:19:45
65366285,2,,64933954,1,,"<p>Thanks, I solved it by trying different versions of Apollo federation &amp; gateway ( the latest version didn't work for me )</p>&#xA;",11015801,,,,2020-12-19 03:01:43,"",,0,1,0,2020-12-19 03:01:43
65380484,1,,,1,421,"<p>My first Query was :</p>&#xA;<pre><code>const krxStockCloseQuery = gql`&#xA;    query getKrxStock($code: String!, $start: String, $end: String){&#xA;        krxStock(code: $code, start:$start, end:$end){&#xA;            date&#xA;            close&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;<p>And cached data was:</p>&#xA;<pre><code>▾ROOT_QUERY&#xA;krxStock({&quot;code&quot;:&quot;005930&quot;,&quot;start&quot;:&quot;2020-12-13&quot;}):&#xA;0:{&quot;date&quot;:&quot;2020-12-14&quot;,&quot;close&quot;:73800}&#xA;1:{&quot;date&quot;:&quot;2020-12-15&quot;,&quot;close&quot;:73800}&#xA;2:{&quot;date&quot;:&quot;2020-12-18&quot;,&quot;close&quot;:73000}&#xA;</code></pre>&#xA;<p>Then, My second query was ( field changed: close -&gt; volume ):</p>&#xA;<pre><code>const krxStockVolumeQuery = gql`&#xA;    query getKrxStock($code: String!, $start: String, $end: String){&#xA;        krxStock(code: $code, start:$start, end:$end){&#xA;            date&#xA;            volume&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;<p>And then all of the cached data was changed:</p>&#xA;<pre><code>▾ROOT_QUERY&#xA;krxStock({&quot;code&quot;:&quot;005930&quot;,&quot;start&quot;:&quot;2020-12-13&quot;}):&#xA;0:{&quot;date&quot;:&quot;2020-12-14&quot;,&quot;volume&quot;:21510415}&#xA;1:{&quot;date&quot;:&quot;2020-12-15&quot;,&quot;volume&quot;:20863671}&#xA;2:{&quot;date&quot;:&quot;2020-12-18&quot;,&quot;volume&quot;:17380940}&#xA;</code></pre>&#xA;<p>How can I set Cache like below?</p>&#xA;<pre><code>▾ROOT_QUERY&#xA;krxStock({&quot;code&quot;:&quot;005930&quot;,&quot;start&quot;:&quot;2020-12-13&quot;}):&#xA;0:{&quot;date&quot;:&quot;2020-12-14&quot;,&quot;close&quot;:73800,&quot;volume&quot;:21510415}&#xA;1:{&quot;date&quot;:&quot;2020-12-15&quot;,&quot;close&quot;:73800,&quot;volume&quot;:20863671}&#xA;2:{&quot;date&quot;:&quot;2020-12-18&quot;,&quot;close&quot;:73000,&quot;volume&quot;:17380940}&#xA;</code></pre>&#xA;",14859910,,,,2020-12-20 13:36:56,How to merge cached data which are different field but same query in Apollo-React?,<javascript><graphql><apollo><react-apollo><apollo-client>,0,4,0,2020-12-20 13:36:56
65380884,2,,62593072,0,,"<p>I'm assuming that you are using one heroku server for both front-end and back-end.</p>&#xA;<p>If so, they must be separate.</p>&#xA;",14389341,,2664350,2020-12-21 08:02:11,2020-12-21 08:02:11,"",,0,0,0,2020-12-20 14:21:13
65381740,2,,65381601,0,,"<p>Seems to be an existing issue with apollo-server</p>&#xA;<p>You can find solutions here:&#xA;<a href=""https://github.com/apollographql/apollo-server/issues/3508"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-server/issues/3508</a></p>&#xA;<p>One solution is to downgrade node to 12.x</p>&#xA;",14389341,,,,2020-12-20 15:52:53,"",,0,1,0,2020-12-20 15:52:53
65404450,1,,,1,325,"<p>I have a nodejs apollo server (graphql) and almost all the time the status is severe, but the server is working well. Also, there is no cause information about it.</p>&#xA;<p>I have checked all the logs and could not find the reason, anyone has an idea what could be?</p>&#xA;<p>access.log</p>&#xA;<pre><code>IP - - [22/Dec/2020:09:08:53 +0000] &quot;GET /api/subscriptions HTTP/1.1&quot; 101 27 &quot;-&quot; &quot;-&quot; &quot;IP&quot;&#xA;IP - - [22/Dec/2020:09:08:53 +0000] &quot;POST /api/graphql HTTP/1.1&quot; 200 163 &quot;-&quot; &quot;ELB-HealthChecker/2.0&quot; &quot;172.31.37.93, IP&quot;&#xA;IP - - [22/Dec/2020:09:08:53 +0000] &quot;POST /api/graphql HTTP/1.1&quot; 200 187 &quot;-&quot; &quot;ELB-HealthChecker/2.0&quot; &quot;172.31.37.93, IP&quot;&#xA;IP - - [22/Dec/2020:09:08:53 +0000] &quot;POST /api/graphql HTTP/1.1&quot; 200 187 &quot;-&quot; &quot;ELB-HealthChecker/2.0&quot; &quot;172.31.37.93, IP&quot;&#xA;IP - - [22/Dec/2020:09:08:53 +0000] &quot;POST /api/graphql HTTP/1.1&quot; 200 163 &quot;-&quot; &quot;ELB-HealthChecker/2.0&quot; &quot;172.31.37.93, IP&quot;&#xA;IP - - [22/Dec/2020:09:08:54 +0000] &quot;GET /api/subscriptions HTTP/1.1&quot; 101 27 &quot;-&quot; &quot;-&quot; &quot;IP&quot;&#xA;IP - - [22/Dec/2020:09:08:54 +0000] &quot;GET /api/subscriptions HTTP/1.1&quot; 101 27 &quot;-&quot; &quot;-&quot; &quot;IP&quot;&#xA;IP - - [22/Dec/2020:09:08:54 +0000] &quot;GET /api/subscriptions HTTP/1.1&quot; 101 27 &quot;-&quot; &quot;-&quot; &quot;IP&quot;&#xA;IP - - [22/Dec/2020:09:08:54 +0000] &quot;GET /api/subscriptions HTTP/1.1&quot; 101 27 &quot;-&quot; &quot;-&quot; &quot;IP&quot;&#xA;IP - - [22/Dec/2020:09:08:54 +0000] &quot;GET /api/subscriptions HTTP/1.1&quot; 101 27 &quot;-&quot; &quot;-&quot; &quot;IP&quot;&#xA;IP - - [22/Dec/2020:09:08:54 +0000] &quot;GET /api/subscriptions HTTP/1.1&quot; 101 27 &quot;-&quot; &quot;-&quot; &quot;IP&quot;&#xA;</code></pre>&#xA;<p>the health overview pt1:&#xA;<a href=""https://i.stack.imgur.com/BVjNk.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BVjNk.png"" alt=""enter image description here"" /></a></p>&#xA;<p>the health overview pt2:&#xA;<a href=""https://i.stack.imgur.com/k8LIS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/k8LIS.png"" alt=""enter image description here"" /></a></p>&#xA;<p>the monitor of the health:&#xA;<a href=""https://i.stack.imgur.com/Z43QA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Z43QA.png"" alt=""enter image description here"" /></a></p>&#xA;",11750336,,11750336,2020-12-22 09:11:51,2020-12-22 10:27:08,AWS Elastic Beanstalk status severe but no causes and working well,<node.js><amazon-web-services><graphql><amazon-elastic-beanstalk><apollo>,1,5,0,2020-12-22 07:00:11
65407812,2,,54707877,1,,"<p>I had the same issue and the reason was that <code>babel-jest</code> has been upgraded to the latest version without upgrading the rest jest-related modules:</p>&#xA;<pre><code>&quot;babel-jest&quot;: &quot;^26.6.3&quot;,&#xA;&quot;jest&quot;: &quot;^23.6.0&quot;,&#xA;</code></pre>&#xA;<p>In my case upgrading <code>jest</code> to the latest version fixed the issue:</p>&#xA;<pre><code>&quot;babel-jest&quot;: &quot;^26.6.3&quot;,&#xA;&quot;jest&quot;: &quot;^26.6.3&quot;,&#xA;</code></pre>&#xA;",3710047,,,,2020-12-22 11:21:43,"",,0,0,0,2020-12-22 11:21:43
65425080,1,,,1,967,"<p>I have to do a query and I have to pass a nested variable.&#xA;Below is the working query when I use apollo graphql client interface. It is giving me expected result. Below is the working query</p>&#xA;<pre><code>query($input: MyProductInput!){&#xA;  MyProductCategories(input: $input){&#xA;    id,&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Variable which i am passing</p>&#xA;<pre><code>{&#xA;  &quot;input&quot;: {&#xA;    &quot;locale&quot;: &quot;ENG&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><code>MyProductInput</code> type look like this at SERVER</p>&#xA;<pre><code>type MyProductInput {&#xA;  locale: Locale!&#xA;}&#xA;enum Locale {&#xA;  IND&#xA;  AUS&#xA;  ENG&#xA;}&#xA;</code></pre>&#xA;<p>when I try to call the same query from my React App, it is giving me error, It says 400 bad request. My React query look like this.</p>&#xA;<pre><code>const PRODUCT_LIST = gql`&#xA;  query ($locale: String!) {&#xA;    MyProductCategories(input: {locale: $locale}){&#xA;      id,&#xA;      name&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;const { loading, error, data } = useQuery(PRODUCT_LIST, {&#xA;  variables: {&#xA;    &quot;input&quot;: {&#xA;      &quot;locale&quot;: &quot;ENG&quot;&#xA;    }&#xA;  },&#xA;});&#xA;</code></pre>&#xA;<p>How can i convert my react query to accommodate custom types??</p>&#xA;<p><em><strong>Note</strong>: I am using JavaScipt not Typescript at Front-end side</em></p>&#xA;",5280687,,5280687,2020-12-23 15:00:46,2020-12-24 06:04:09,how to create apollo client query with custom types,<javascript><reactjs><graphql><react-apollo>,2,3,0,2020-12-23 13:28:21
65452359,1,,,0,789,"<p>I am unsure as to why I am getting this error please help.</p>&#xA;<pre><code>ERROR in node_modules/@apollo/client/node_modules/ts-invariant/lib/invariant.d.ts:7:78 - error TS1144: '{' or ';' expected.&#xA;&#xA;7 export declare function invariant(condition: any, message?: string): asserts condition;&#xA;                                                                               ~~~~~~~~~&#xA;</code></pre>&#xA;",11690412,,,,2021-01-03 11:13:25,Error using Apollo Angular 2 for Angular ts-invariant/lib/invariant.d.ts:7:78,<angular><typescript><apollo><apollo-client><gql>,1,0,0,2020-12-25 22:45:22
65458247,2,,65441260,0,,"<p>Seems to be an issue with WSL2 running on Windows 10. This thread on github has some insight into the issue.</p>&#xA;<p>Disable Fast Startup to allow access to localhost.</p>&#xA;<p><a href=""https://github.com/microsoft/WSL/issues/5298"" rel=""nofollow noreferrer"">https://github.com/microsoft/WSL/issues/5298</a></p>&#xA;",10016395,,,,2020-12-26 16:07:33,"",,0,0,0,2020-12-26 16:07:33
65493161,1,65493556,,0,2793,"<p>I'm trying to Associations many to many, between 2 models &quot;Trainer &amp; Course&quot; so I do third models &quot;CourseTrainer&quot; to try relation 1 to many.&#xA;but I'm getting this error:</p>&#xA;<p>C:\Users\DELL\Downloads\graphql-12.18.2020\graphql-12.18.2020\graphql-12.18.2020\serverapp\database\database.js:54&#xA;db.trainer.belongsTo(db.tblCourseTrainer, {&#xA;^</p>&#xA;<p>TypeError: Cannot read property 'belongsTo' of undefined&#xA;at Object. (C:\Users\DELL\Downloads\graphql-12.18.2020\graphql-12.18.2020\graphql-12.18.2020\serverapp\database\database.js:54:14)&#xA;at Module._compile (internal/modules/cjs/loader.js:1063:30)&#xA;at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)&#xA;at Module.load (internal/modules/cjs/loader.js:928:32)&#xA;at Function.Module._load (internal/modules/cjs/loader.js:769:14)&#xA;at Module.require (internal/modules/cjs/loader.js:952:19)&#xA;at require (internal/modules/cjs/helpers.js:88:18)&#xA;at Object. (C:\Users\DELL\Downloads\graphql-12.18.2020\graphql-12.18.2020\graphql-12.18.2020\serverapp\graphql\resolvers\user.js:6:12)&#xA;at Module._compile (internal/modules/cjs/loader.js:1063:30)&#xA;at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)</p>&#xA;<p>DB Code:</p>&#xA;<pre><code>const Sequelize = require('sequelize');&#xA;const db = {};&#xA;const sequelize =  new Sequelize(&quot;firstDB&quot;,&quot; &quot;,&quot; &quot;, {&#xA;  //from the DB amazom&#xA;  host: '  ',&#xA;    dialect: 'mysql',&#xA;    define: {&#xA;      timestamps: false,&#xA;      freezeTableName: true&#xA;    },&#xA;    operatorsAliases: false,&#xA;    pool: {&#xA;      max: 5,&#xA;      min: 0,&#xA;      acquire: 30000,&#xA;      idle: 10000&#xA;    },&#xA;  });&#xA;&#xA;  db.sequelize = sequelize&#xA;  db.Sequelize = Sequelize&#xA;  db.Sequelize = sequelize&#xA;  db.Sequelize = sequelize&#xA;  db.Sequelize = sequelize&#xA;  db.Sequelize = sequelize&#xA;  db.Sequelize = sequelize&#xA;&#xA;  &#xA;  db.tblUser = require(&quot;./models/user&quot;)(sequelize, Sequelize);&#xA;  db.vewStudentCourseTrainer = require(&quot;./models/studentCourseTrainer&quot;)(sequelize, Sequelize);&#xA;  db.tblTrainer = require(&quot;./models/trainer&quot;)(sequelize, Sequelize);&#xA;  db.tblCourse = require(&quot;./models/course&quot;)(sequelize,Sequelize);&#xA;  db.tblStudent = require(&quot;./models/student&quot;)(sequelize,Sequelize);&#xA;  db.tblCourseTrainer = require(&quot;./models/courseTrainer&quot;)(sequelize, Sequelize);&#xA;  db.tblStudentCourse = require(&quot;./models/studentCourse&quot;)(sequelize, Sequelize);&#xA;&#xA;  db.tblCourseTrainer.hasMany(db.tblTrainer, { as: &quot;trainer&quot; });&#xA;  db.trainer.belongsTo(db.tblCourseTrainer, {&#xA;    foreignKey: &quot;intTrainerID&quot;,&#xA;    as: &quot;trainerID&quot;,&#xA;  });&#xA;&#xA;  module.exports = db&#xA;</code></pre>&#xA;<p>Models code for CourseTrainer</p>&#xA;<pre><code>module.exports = (sequelize,DataTypes)=&gt;{&#xA;    const CourseTrainer  = sequelize.define(&quot;tblCourseTrainer&quot;,{&#xA;      intCourseTrainerID: {&#xA;        type: DataTypes.INTEGER,&#xA;        primaryKey: true,&#xA;        autoIncrement: true,&#xA;      },             &#xA;      intCourseID: {&#xA;        type: DataTypes.INTEGER,&#xA;        foreignKey: true,&#xA;    },&#xA;    intTrainerID: {&#xA;        type: DataTypes.INTEGER,&#xA;        foreignKey: true,&#xA;    },&#xA;},)&#xA;    return CourseTrainer&#xA;  }&#xA;</code></pre>&#xA;<p>Models code for Trainer</p>&#xA;<pre><code>module.exports = (sequelize,DataTypes)=&gt;{&#xA;    const Trainer  = sequelize.define(&quot;tblTrainer&quot;,{&#xA;      intTrainerID: {&#xA;        type: DataTypes.INTEGER,&#xA;        primaryKey: true,&#xA;        autoIncrement: true,&#xA;      },             &#xA;      strTrainerName: {&#xA;        type: DataTypes.STRING&#xA;    },&#xA;    &#xA;    },)&#xA;    return Trainer&#xA;  }&#xA;</code></pre>&#xA;<p>Models code for Course</p>&#xA;<pre><code>&#xA;module.exports = (sequelize,DataTypes)=&gt;{&#xA;    const Course  = sequelize.define(&quot;tblCourse&quot;,{&#xA;      intCourseID: {&#xA;        type: DataTypes.INTEGER,&#xA;        primaryKey: true,&#xA;        autoIncrement: true,&#xA;      },             &#xA;      strCourseName: {&#xA;        type: DataTypes.STRING&#xA;    },&#xA;    },)&#xA;    return Course&#xA;  }&#xA;</code></pre>&#xA;",14823737,,,,2022-06-05 01:00:42,TypeError: Cannot read property 'belongsTo' of undefined,<node.js><graphql><sequelize.js>,2,1,0,2020-12-29 13:46:14
65493556,2,,65493161,0,,"<p>When you call this:</p>&#xA;<pre><code>db.trainer.belongsTo(...)&#xA;</code></pre>&#xA;<p>There is no <code>.trainer</code> object in the <code>db</code> object and thus <code>db.trainer</code> is <code>undefined</code> and you get the error telling you that you can't access a property <code>.belongsTo()</code> on an <code>undefined</code> value.</p>&#xA;<p>We can see where you declare the <code>db</code> object here:</p>&#xA;<pre><code>const db = {};&#xA;</code></pre>&#xA;<p>And, then follow the code down to where you try to do <code>db.trainer.belongsTo(...)</code> and nowhere in there do you define <code>db.trainer</code>.  You do have this:</p>&#xA;<pre><code>db.tblTrainer = require(&quot;./models/trainer&quot;)(sequelize, Sequelize);&#xA;</code></pre>&#xA;<p>so, perhaps you meant to be using this?</p>&#xA;<pre><code>db.tblTrainer.belongsTo(...)&#xA;</code></pre>&#xA;",816620,,,,2020-12-29 14:15:30,"",,0,2,0,2020-12-29 14:15:30
65502945,1,,,1,92,"<p>We have just updated our Gitlab to version 13.7.1. Our container registry was working fine but after the upgrade, we are getting the following screen while accessing the tags of one of our projects (It works well in a different project). We have gitlab starter license.</p>&#xA;<p>What I have observed is that there are some browser console errors and some production.log errors as well.</p>&#xA;<p><strong>Errors In Browser Console</strong></p>&#xA;<pre><code>vue.esm.js:1897 TypeError: Cannot read property 'name' of undefined&#xA;    at fn (details_header.vue?4c37:1)&#xA;    at Object.r [as imageName] (vue.esm.js:2599)&#xA;    at render (sprintf.js:103)&#xA;    at vue.esm.js:3067&#xA;    at $t (vue.esm.js:3240)&#xA;    at vue.esm.js:3431&#xA;    at qt (vue.esm.js:3362)&#xA;    at e._c (vue.esm.js:3500)&#xA;    at fn (details_header.vue?4c37:1)&#xA;    at r (vue.esm.js:2599)&#xA;</code></pre>&#xA;<p><strong>Errors In production.log</strong></p>&#xA;<pre><code>GraphQL::IntegerEncodingError (Integer out of bounds: 7831330474.&#xA;Consider using ID or GraphQL::Types::BigInt instead.):&#xA;  lib/gitlab/graphql/generic_tracing.rb:40:in `with_labkit_tracing'&#xA;  lib/gitlab/graphql/generic_tracing.rb:30:in `platform_trace'&#xA;  lib/gitlab/graphql/generic_tracing.rb:40:in `with_labkit_tracing'&#xA;  lib/gitlab/graphql/generic_tracing.rb:30:in `platform_trace'&#xA;  app/graphql/gitlab_schema.rb:43:in `multiplex'&#xA;  app/controllers/graphql_controller.rb:68:in `execute_multiplex'&#xA;  app/controllers/graphql_controller.rb:32:in `execute'&#xA;  ee/lib/gitlab/ip_address_state.rb:10:in `with'&#xA;  ee/app/controllers/ee/application_controller.rb:44:in `set_current_ip_address'&#xA;  app/controllers/application_controller.rb:494:in `set_current_admin'&#xA;  lib/gitlab/session.rb:11:in `with_session'&#xA;  app/controllers/application_controller.rb:485:in `set_session_storage'&#xA;  lib/gitlab/i18n.rb:73:in `with_locale'&#xA;  lib/gitlab/i18n.rb:79:in `with_user_locale'&#xA;  app/controllers/application_controller.rb:479:in `set_locale'&#xA;  lib/gitlab/error_tracking.rb:52:in `with_context'&#xA;  app/controllers/application_controller.rb:544:in `sentry_context'&#xA;  app/controllers/application_controller.rb:472:in `block in set_current_context'&#xA;  lib/gitlab/application_context.rb:54:in `block in use'&#xA;  lib/gitlab/application_context.rb:54:in `use'&#xA;  lib/gitlab/application_context.rb:21:in `with_context'&#xA;  app/controllers/application_controller.rb:464:in `set_current_context'&#xA;  lib/gitlab/metrics/elasticsearch_rack_middleware.rb:16:in `call'&#xA;  lib/gitlab/middleware/rails_queue_duration.rb:33:in `call'&#xA;  lib/gitlab/metrics/rack_middleware.rb:16:in `block in call'&#xA;  lib/gitlab/metrics/transaction.rb:56:in `run'&#xA;  lib/gitlab/metrics/rack_middleware.rb:16:in `call'&#xA;  lib/gitlab/request_profiler/middleware.rb:17:in `call'&#xA;  lib/gitlab/jira/middleware.rb:19:in `call'&#xA;  lib/gitlab/middleware/go.rb:20:in `call'&#xA;  lib/gitlab/etag_caching/middleware.rb:21:in `call'&#xA;  lib/gitlab/middleware/multipart.rb:234:in `call'&#xA;  lib/gitlab/middleware/read_only/controller.rb:50:in `call'&#xA;  lib/gitlab/middleware/read_only.rb:18:in `call'&#xA;  lib/gitlab/middleware/same_site_cookies.rb:27:in `call'&#xA;  lib/gitlab/middleware/handle_malformed_strings.rb:21:in `call'&#xA;  lib/gitlab/middleware/basic_health_check.rb:25:in `call'&#xA;  lib/gitlab/middleware/handle_ip_spoof_attack_error.rb:25:in `call'&#xA;  lib/gitlab/middleware/request_context.rb:23:in `call'&#xA;  config/initializers/fix_local_cache_middleware.rb:9:in `call'&#xA;  lib/gitlab/metrics/requests_rack_middleware.rb:76:in `call'&#xA;  lib/gitlab/middleware/release_env.rb:12:in `call'&#xA;&#xA;</code></pre>&#xA;<p>Any help is much appreciated. I have tried shortening the name length of image tag but with no success.</p>&#xA;<p>Thanks in advance.</p>&#xA;",14734969,,,,2020-12-30 06:27:07,Gitlab error while listing image tags: GraphQL::IntegerEncodingError (Integer out of bounds: 7831330474,<graphql><gitlab>,0,0,0,2020-12-30 06:27:07
65520895,1,65522560,,0,2819,"<h2>List 101 Users with GraphQL</h2>&#xA;<p>Why I can not get <strong>all users at once</strong> while using PostGQL?</p>&#xA;<p>It just returns first 100 users while using GraphQL but works fine with a GET request.</p>&#xA;<h3>GraphQL Query</h3>&#xA;<p><a href=""https://i.stack.imgur.com/eECQc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eECQc.png"" alt=""get users"" /></a></p>&#xA;<pre class=""lang-json prettyprint-override""><code>    {&#xA;      users(limit: 101, sort: &quot;username&quot;) {&#xA;        id&#xA;        username&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;<h3>Result</h3>&#xA;<p><a href=""https://i.stack.imgur.com/g86sF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/g86sF.png"" alt=""result"" /></a></p>&#xA;<p>Using <strong>Get Method</strong> returns full set!</p>&#xA;<p>I can get the full data set by <code>GET /users?_limit=-1</code> if I use GET</p>&#xA;<p><strong>NOTE</strong>: using <code>limit: -1</code> does not work either.</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  users(limit: -1) {&#xA;    id&#xA;    username&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<hr />&#xA;<ul>&#xA;<li><strong>Strapi Version</strong>:3.4.1</li>&#xA;<li><strong>Operating System</strong>: Windows, Ubuntu</li>&#xA;<li><strong>Database</strong>: Mysql, PostgreSQL</li>&#xA;<li><strong>Node Version</strong>: 14.15.3</li>&#xA;<li><strong>NPM Version</strong>: 6.14.9</li>&#xA;<li><strong>Yarn Version</strong>: 1.22.5</li>&#xA;</ul>&#xA;",11993949,,11993949,2020-12-31 12:50:40,2020-12-31 15:10:43,How to get all users at once with a GraphQL query?,<graphql><apollo><apollo-server><strapi>,1,0,0,2020-12-31 12:25:22
65548675,2,,65544411,2,,"<p>When dealing with environment variables with Gatsby + Netlify, you have to prefix them with <code>GATSBY_</code> to make them available to Netlify. So:</p>&#xA;<pre><code>PRISMIC_ACCESS_TOKEN&#xA;PRISMIC_REPOSITORY_NAME&#xA;</code></pre>&#xA;<p>Will become:</p>&#xA;<pre><code>GATSBY_PRISMIC_ACCESS_TOKEN&#xA;GATSBY_PRISMIC_REPOSITORY_NAME&#xA;</code></pre>&#xA;<p>Change them locally in your <code>.env</code> files and on Netlify's side by:</p>&#xA;<p><a href=""https://i.stack.imgur.com/tVLGq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tVLGq.png"" alt=""Environment variables in Netlify"" /></a></p>&#xA;<p><em>Note: you can access that configuration in <a href=""https://app.netlify.com/sites/%5BYOUR_PROJECT%5D/settings/deploys#environment"" rel=""nofollow noreferrer"">https://app.netlify.com/sites/[YOUR_PROJECT]/settings/deploys#environment</a></em></p>&#xA;<p>Resources:</p>&#xA;<ul>&#xA;<li><a href=""https://www.gatsbyjs.com/docs/how-to/local-development/environment-variables/"" rel=""nofollow noreferrer"">https://www.gatsbyjs.com/docs/how-to/local-development/environment-variables/</a></li>&#xA;<li><a href=""https://community.netlify.com/t/how-to-access-environment-variables-in-a-react-component/1635"" rel=""nofollow noreferrer"">https://community.netlify.com/t/how-to-access-environment-variables-in-a-react-component/1635</a></li>&#xA;</ul>&#xA;",5585371,,,,2021-01-03 10:13:17,"",,0,1,0,2021-01-03 10:13:17
65552219,1,,,3,242,"<p>How do I pass environment variables to the gatsby-sass-plugin? I'd like to be able to pass an environment variable into the loader that I can then use in my scss files. This is not well documented and I'm not sure how to do it.</p>&#xA;<p>Reference: <a href=""https://www.gatsbyjs.com/plugins/gatsby-plugin-sass/"" rel=""nofollow noreferrer"">https://www.gatsbyjs.com/plugins/gatsby-plugin-sass/</a></p>&#xA;<p>This does not work:</p>&#xA;<pre><code>{&#xA;  resolve: &quot;gatsby-plugin-sass&quot;,&#xA;  options: {&#xA;    additionalData: `$storeName: ${process.env.SHOPIFY_STORE_NAME};`&#xA;  }&#xA;},&#xA;</code></pre>&#xA;",1311774,,5585371,2021-01-03 17:35:31,2021-01-03 17:35:31,How To Pass Env Vars to Sass Plugin in Gatsby?,<javascript><node.js><graphql><gatsby>,1,0,0,2021-01-03 16:29:40
65552335,2,,65552219,1,,"<p>According to <a href=""https://github.com/gatsbyjs/gatsby/issues/27754"" rel=""nofollow noreferrer"">this recent GitHub thread</a>, those options are not directly valid as it:</p>&#xA;<blockquote>&#xA;<p>Invalid options object. Sass Loader has been initialized using an&#xA;options object that does not match the API schema.</p>&#xA;</blockquote>&#xA;<p>This is causing the <code>options</code> object to be undefined.</p>&#xA;<p>Try upgrading your <code>gatsby-plugin-sass</code> to:</p>&#xA;<pre><code>gatsby-plugin-sass@3.0.0-next.2&#xA;</code></pre>&#xA;<p>Check your <code>node-sass</code> version too.</p>&#xA;",5585371,,,,2021-01-03 16:40:55,"",,0,2,0,2021-01-03 16:40:55
65553375,2,,65465917,0,,"<p>The above observed Problem seems to be a bug in the latest release.</p>&#xA;<p>Details: <a href=""https://github.com/prisma/prisma-client-js/issues/955"" rel=""nofollow noreferrer"">https://github.com/prisma/prisma-client-js/issues/955</a></p>&#xA;",2704566,,,,2021-01-03 18:24:26,"",,0,0,0,2021-01-03 18:24:26
65582954,2,,65577191,0,,"<p>I found that is not compatible with string id.&#xA;More details can be found <a href=""https://github.com/GraphQLGuide/apollo-datasource-mongodb/issues/47#issuecomment-754748945"" rel=""nofollow noreferrer"">here</a></p>&#xA;",14943701,,,,2021-01-05 16:37:43,"",,0,0,0,2021-01-05 16:37:43
65591489,1,,,1,188,"<p>When I am upgrading expo from sdk-33 to sdk-40 version of expo. I am getting this issue, I have aws_appsync dependency in my react-native version 59.10.0.&#xA;The problem is occurring when I create new AWSAppSyncClient, I have set &quot;disableOffline&quot; property to true. Still I am getting this issue.</p>&#xA;<p>Is this any issue with upgrade expo or react-native dependencies?</p>&#xA;<blockquote>&#xA;<p>Please help me to upgrade EXPO SDK-33 to SDK-40.</p>&#xA;</blockquote>&#xA;",3509893,,,,2021-01-06 07:03:19,Error: The keyPrefix reduxPersist: is already in use. Multiple clients cannot share the same keyPrefix,<react-native><apollo-client><aws-appsync>,0,1,0,2021-01-06 07:03:19
65600878,2,,65596734,0,,"<p>So this one was a simple one. I have asked for a property that was not defined on my type. Once I removed it, everything started working.</p>&#xA;<p>I found out what was the problem by going to the &quot;Network&quot; tab in Chrome, and by examining a request with the name of 'graphql'.</p>&#xA;",7558396,,,,2021-01-06 17:51:38,"",,0,0,0,2021-01-06 17:51:38
65602563,1,65638319,,0,744,"<p>I need to use <code>apollo-server</code> and <code>graphql-upload</code> to handle file uploads. This is working as expected with the old graphql-upload v9. Updating to the latest v11 results in failing uploads. To make it short, the problem is, that <code>apollo-server</code> (and <code>@nestjs/graphql</code>) are depending on the old <code>graphql-upload</code> v8. (<a href=""https://github.com/jaydenseric/graphql-upload/issues/185#issuecomment-583572804"" rel=""nofollow noreferrer"">For those, who are interested in more</a>) To get everything working, there should only be one version (v11) in my project.</p>&#xA;<p>I'm using <strong>pnpm</strong>. Listing which packages are using <code>graphql-upload</code> I get following:</p>&#xA;<pre><code>@nestjs/graphql 7.9.1&#xA;├─┬ @apollo/gateway 0.17.0&#xA;│ └─┬ apollo-server-core 2.19.0&#xA;│   └── graphql-upload 8.1.0      // &lt;--&#xA;├─┬ apollo-server-core 2.16.1&#xA;│ └── graphql-upload 8.1.0        // &lt;--&#xA;└─┬ apollo-server-testing 2.19.0&#xA;  └─┬ apollo-server-core 2.19.0&#xA;    └── graphql-upload 8.1.0      // &lt;--&#xA;apollo-server 2.19.0&#xA;├─┬ apollo-server-core 2.19.0&#xA;│ └── graphql-upload 8.1.0        // &lt;--&#xA;└─┬ apollo-server-express 2.19.0&#xA;  └─┬ apollo-server-core 2.19.0&#xA;    └── graphql-upload 8.1.0      // &lt;--&#xA;graphql-upload 9.0.0              // &lt;-- only working if &lt;v10&#xA;</code></pre>&#xA;",3142695,,,,2021-01-09 01:00:42,Possible to use only one package version using pnpm?,<npm><graphql><dependencies><apollo-server><pnpm>,1,0,0,2021-01-06 19:53:16
65621732,2,,53930305,14,,"<p>I had the same problem. However, mine was coming from <a href=""https://en.wikipedia.org/wiki/Webpack"" rel=""nofollow noreferrer"">Webpack</a>. Thankfully, they had a great solution <a href=""https://webpack.js.org/configuration/watch/"" rel=""nofollow noreferrer"">on their site</a>:</p>&#xA;<blockquote>&#xA;<p>For some systems, watching many files can result in a lot of CPU or memory usage. It is possible to exclude a huge folder like node_modules using a regular expression:</p>&#xA;</blockquote>&#xA;<h3>File <em>webpack.config.js</em></h3>&#xA;<pre><code>module.exports = {&#xA;  watchOptions: {&#xA;    ignored: /node_modules/&#xA;  }&#xA;};&#xA;</code></pre>&#xA;",10918831,,63550,2022-10-26 21:58:51,2022-10-26 21:58:51,"",,0,0,0,2021-01-08 00:11:36
65624125,1,,,-1,400,"<p><a href=""https://i.stack.imgur.com/pshEX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pshEX.png"" alt=""enter image description here"" /></a>I am running angular application on localhost:4200 while GraphQL are running using the following environment.</p>&#xA;<pre><code>export const environment = {&#xA;  BASE_URL: 'https://iotech.ddns.net/',&#xA;  LOGIN_URL: 'https://iotech.ddns.net/',&#xA;  METRIC_VALUES_URL: `${'https://iotech.ddns.net/' + 'gql/'}v1/graphql`,&#xA;  REST_BASE_URL: ' https://iotech.ddns.net/config/api/v1/',&#xA;  production: true,&#xA;  hmr: false,&#xA;  staging: false,&#xA;  POLL_RATE: 10000&#xA;};&#xA;</code></pre>&#xA;<p>According to GraphQL it's mentioned the CORS are enabled but I am getting the error while accessing.I have also added the proxy.config.json but nothing help.</p>&#xA;<pre><code>{&#xA;    &quot;/gql/v1/graphql&quot;: {&#xA;      &quot;target&quot;: &quot;https://iotech.ddns.net/&quot;,&#xA;      &quot;pathRewrite&quot;: { &quot;^/api&quot;: &quot;&quot; },&#xA;      &quot;secure&quot;: false&#xA;    },&#xA;    &quot;logLevel&quot;: &quot;debug&quot;&#xA;  }&#xA;</code></pre>&#xA;",9515109,,9515109,2021-01-08 06:12:20,2021-01-08 06:21:37,Getting CORS Issue on Hasura Graphql while accessing From Angular 10,<angular><graphql><hasura>,1,0,0,2021-01-08 06:01:08
65625564,2,,65625058,1,,<p>Just import it and return it is as another React component:</p>&#xA;<pre><code>import React from 'react'&#xA;import NotFound from '/path/to/404/page'&#xA;&#xA;const Drafts = () =&gt; {&#xA;&#xA;   if (process.env.NODE_ENV !== 'development') {&#xA;     return &lt;NotFound /&gt;;&#xA;   }&#xA;&#xA;  return (&#xA;     &lt;span&gt;smth&lt;/span&gt;&#xA;   )&#xA;}&#xA;&#xA;&#xA;export default Drafts&#xA;</code></pre>&#xA;<p>You can also make someway automatic:</p>&#xA;<pre><code>import React from 'react'&#xA;import NotFound from '/path/to/404/page'&#xA;&#xA;const Drafts = () =&gt; {&#xA;   let RenderPage= &lt;span&gt;smth&lt;/span&gt;; &#xA; &#xA;   if (process.env.NODE_ENV !== 'development') {&#xA;     RenderPage = NotFound;&#xA;   }&#xA; }&#xA;&#xA;&#xA;export default RenderPage&#xA;</code></pre>&#xA;,5585371,,5585371,2021-01-08 09:52:30,2021-01-08 09:52:30,"",,0,0,0,2021-01-08 08:23:36
65626450,2,,65625058,-1,,"<p>Expanding on Ferran Buireu’s answer: import the 404, and then export based on the environment:</p>&#xA;<pre><code>// src/pages/drafts.js&#xA;import React from 'react'&#xA;import NotFound from './404'&#xA;&#xA;const Drafts = () =&gt; {&#xA;  return (&#xA;    &lt;span&gt;smth&lt;/span&gt;&#xA;  )&#xA;}&#xA;&#xA;export default process.env.NODE_ENV !== 'development' ? NotFound : Drafts&#xA;</code></pre>&#xA;<p>The returned <code>404</code> page has a <code>200</code> status code, which might or not be a problem.</p>&#xA;",976972,,4730812,2021-01-08 21:21:57,2021-01-08 21:21:57,"",,0,1,0,2021-01-08 09:30:40
65645373,2,,65645119,0,,"<p>My mistake was, that i needed to start the mongoDB process manually. If you did not, start it an rerun it, for me that fixed the issue.</p>&#xA;<pre><code>mongod --config /usr/local/etc/mongod.conf --fork&#xA;</code></pre>&#xA;",10750848,,,,2021-01-09 17:12:07,"",,0,0,0,2021-01-09 17:12:07
65647741,2,,59603560,-1,,<p>Restarting my mac solved the issue !</p>&#xA;,9995763,,,,2021-01-09 21:22:56,"",,0,0,0,2021-01-09 21:22:56
65671926,2,,65630756,0,,"<p>[SOLVED] : I disabled WP GraphQL Gutenberg (v0.3.5) and it started to work again. Looks like this plugin might be overloading the wordpress server. It's probably some incompatibility between <code>WP GraphQL (v1.1.0)</code> and WP <code>GraphQL Gutenberg (v0.3.5)</code>. More information about this incompatibility <a href=""https://github.com/pristas-peter/wp-graphql-gutenberg/issues/72"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;",12737833,,,,2021-01-11 17:42:06,"",,0,0,0,2021-01-11 17:42:06
65707593,2,,65704023,18,,"<p>I found this as an open issue on github for the <code>django-graphql-jwt</code> package and was able to resolve it by resorting to the <code>1.7.0</code> version of <code>PyJWT</code>. Currently installed was version <code>2.0</code></p>&#xA;<p><a href=""https://github.com/flavors/django-graphql-jwt/issues/241"" rel=""noreferrer"">https://github.com/flavors/django-graphql-jwt/issues/241</a></p>&#xA;",5630811,,,,2021-01-13 18:14:28,"",,0,0,0,2021-01-13 18:14:28
65716638,2,,65713544,2,,"<p><code>react-apollo</code> <strong>HAS BEEN DEPRECATED</strong>.</p>&#xA;<blockquote>&#xA;<p>React Apollo functionality is now directly available from&#xA;@apollo/client</p>&#xA;</blockquote>&#xA;<p>Read here:&#xA;<a href=""https://github.com/apollographql/react-apollo#readme"" rel=""nofollow noreferrer"">https://github.com/apollographql/react-apollo#readme</a></p>&#xA;<p>Apparently, the problem is with the <strong>versions</strong> of your packages (<code>apollo V3</code> group some client packages to avoid those issues). Read more: <a href=""https://www.apollographql.com/docs/react/migrating/apollo-client-3-migration/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/migrating/apollo-client-3-migration/</a>.</p>&#xA;<p><strong>Use apollo client v3</strong> (Since June 2020)</p>&#xA;<p>Instead use <code>apollo-client</code>: <a href=""https://github.com/apollographql/apollo-client"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client</a>.</p>&#xA;<p>command:</p>&#xA;<pre><code>npm install @apollo/client&#xA;</code></pre>&#xA;<p>import:</p>&#xA;<pre><code>import { ApolloProvider } from '@apollo/client'&#xA;</code></pre>&#xA;<p>Follow this step-by-step example:&#xA;<a href=""https://www.apollographql.com/docs/react/get-started/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/get-started/</a></p>&#xA;",9291557,,9291557,2021-01-15 18:36:33,2021-01-15 18:36:33,"",,0,1,0,2021-01-14 09:45:09
65735723,2,,65735638,1,,"<p>The GraphQL endpoint that Hasura serves would be available at <code>/v1/graphql</code>.</p>&#xA;<p>So in your case, it would be <code>http://localhost:9695/v1/graphql</code>.</p>&#xA;",4951611,,,,2021-01-15 11:59:26,"",,0,1,0,2021-01-15 11:59:26
65742682,1,,,2,438,"<p>I'm trying to create a dataProvider via <code>ra-data-graphql</code>, as described in the <a href=""https://github.com/marmelab/react-admin/blob/master/packages/ra-data-graphql/README.md"" rel=""nofollow noreferrer"">library's README</a>, and am successfully passing in the introspection response to the <code>buildQuery</code> method, but the <code>raFetchType </code> param in my <code>buildQuery</code> method is always undefined, and the query mapping that is supposed to happen fails. It appears as though the <code>raFetchType</code> should be populated automatically by the library, or maybe I'm (or the documentation) missing something.</p>&#xA;<p>Do I need to provide some extra option when injecting <code>buildCustomQuery</code> into <code>buildGraphQLProvider</code>?</p>&#xA;<p><strong>What you were expecting:</strong>&#xA;<code>raFetchType</code> is defined (I'm assuming as one of 'GET_LIST', 'GET_ONE', etc.)</p>&#xA;<p><strong>What happened instead:</strong>&#xA;the <code>raFetchType</code> param in <code>buildQuery</code> (called <code>aorFetchType</code> in the library's source code) is always undefined</p>&#xA;<p><strong>Related code:</strong></p>&#xA;<pre class=""lang-js prettyprint-override""><code>// App.tsx&#xA;&#xA;const [dataProvider, setDataProvider] = useState&lt;DataProvider&gt;();&#xA;const cache = new InMemoryCache();&#xA;const link = createHttpLink({&#xA;  uri: // my graphql API URL&#xA;});&#xA;&#xA;const client = new ApolloClient({&#xA;  cache: cache,&#xA;  link: link,&#xA;});&#xA;&#xA;useEffect(() =&gt; {&#xA;  buildGraphQLProvider({&#xA;    client: { client },&#xA;    buildQuery: buildCustomQuery,&#xA;    introspection: {&#xA;      schema, // JSON previously fetched from my GraphQL API&#xA;      operationNames: introspectionOperationNames, // function that maps the 'Country' resource to the correct query name for 'GET_LIST'&#xA;      include: ['Country'], // just trying it out with a single Resource first&#xA;    },&#xA;  }).then((dataProvider: any) =&gt; {&#xA;    setDataProvider(dataProvider);&#xA;  })&#xA;}, []);&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>// this is called via `buildGraphQLProvider` on init&#xA;export const buildCustomQuery = (introspectionResults: any) =&gt; (raFetchType: any, resourceName: any, params: any) =&gt; {&#xA;   // the introspectionResults contain the 4 properties listed here: https://github.com/marmelab/react-admin/tree/master/packages/ra-data-graphql#specify-your-queries-and-mutations&#xA;   // including the 'Country' resource with the mapped query name&#xA;   // however, `raFetchType` is undefined, and so no query can ever be returned. &#xA;   // I get 'TypeError: Cannot read property 'parseResponse' of undefined' on ra-data-graphql/esm/index.js:113&#xA;    const resource = introspectionResults.resources.find((r: IntrospectionResource) =&gt; r.type.name === resourceName);&#xA;    switch (raFetchType) {&#xA;        case 'GET_LIST':&#xA;            return {&#xA;                query: gql`query ${resource[raFetchType].name}($id: ID) {&#xA;                    data: ${resource[raFetchType].name}(id: $id) {&#xA;                           ...&#xA;                        }&#xA;                    }&#xA;                }`,&#xA;                variables: params, // params = { id: ... }&#xA;                parseResponse: (response: any) =&gt; response.data,&#xA;            }&#xA;            break;&#xA;        // ... other types handled here&#xA;        default:&#xA;            return undefined;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p><strong>Environment</strong></p>&#xA;<ul>&#xA;<li>React-admin version: 3.11.0</li>&#xA;<li>React version: 17.0.1</li>&#xA;<li>Browser: Chrome</li>&#xA;<li>Stack trace: <code>Uncaught (in promise) TypeError: Cannot read property 'parseResponse' of undefined at raDataProvider (index.js:113)</code></li>&#xA;</ul>&#xA;",6206910,,,,2021-01-15 19:49:31,React Admin / building Data Provider via 'ra-data-graphql' library - auto-injected `raFetchType` param is undefined,<graphql><react-admin>,0,0,0,2021-01-15 19:49:31
65746465,1,65746466,,0,1234,"<p>I am developing a client side rendered React web application that has a clearly segregated backend/frontend structure. The backend is a typical graphQL server, and an Apollo graphQL client in the frontend is used to make queries.</p>&#xA;<p>When the app was deployed to customers, I started observing an increase in HTTP request failures. The error messages look like below.</p>&#xA;<p>In Chrome, <code>Failed to fetch</code>.</p>&#xA;<p>In Firefox, <code>NetworkError when attempting to fetch resource.</code>.</p>&#xA;<p>In Safari, <code>Request header field Content-Type is not allowed by Access-Control-Allow-Headers.</code>.</p>&#xA;<p>Upon inspection on the client side error logs collected, I found that these occurred on pretty old browser versions, e.g. Chrome 49 ~ 58, Firefox 57 and Safari 10 ~ 11.</p>&#xA;<p>The issue seems related to CORS and the older browsers seem to have a different behaviour. I tried to extend browser support to such ranges via <a href=""https://github.com/browserslist/browserslist"" rel=""nofollow noreferrer"">browserslist</a> but that didn't help.</p>&#xA;<p>I landed on posts like <a href=""https://stackoverflow.com/questions/32500073/request-header-field-access-control-allow-headers-is-not-allowed-by-itself-in-pr"">this</a> which all talk about adding <code>content-type</code> to the <code>Access-Control-Allow-Headers</code> header in the server's response, but I think my situation is a bit different as this only occurs on older browser versions. If my backend were not acting correctly for CORS, it would affect all requests.</p>&#xA;",4993386,,,,2021-01-16 04:19:13,"CORS exception ""Request header field content-type is not allowed by Access-Control-Allow-Headers in preflight response"" in Apollo graphQL client",<cors><fetch><apollo-client><browser-support>,1,0,0,2021-01-16 04:19:13
65746466,2,,65746465,0,,"<p>I managed to identify the culprit to be the <code>fetch</code> API used behind the scene by the Apollo graphQL client.</p>&#xA;<p>When I tried to reproduce the issue in older browser versions, below error message was observed on the console.</p>&#xA;<pre><code>Fetch API cannot load https://account.xxx.com/ap/sso?openid.pape.max_auth_age=3600&amp;signIn...&#xA;Request header field content-type is not allowed by Access-Control-Allow-Headers in preflight response.&#xA;</code></pre>&#xA;<p>Apparently the request is being redirected for SSO login. That led to me to suspect that the API was not able to attach the cookies properly when sending in the request, hence no auth token was provided.</p>&#xA;<p>This is confirmed on the <a href=""https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"" rel=""nofollow noreferrer"">Fetch API doc</a> that it only changed its default credential policy to <code>same-origin</code> in August 2017. Hence all browsers released before that won't include cookies unless specified otherwise.</p>&#xA;<p>I followed the <a href=""https://www.apollographql.com/docs/react/networking/advanced-http-networking/"" rel=""nofollow noreferrer"">advanced HTTP networking</a> doc of the Apollo client and included below fetch option, and it started working like a charm.</p>&#xA;<p><code>{ credentials: 'same-origin' }</code></p>&#xA;<p>A side note is that if the policy is set to <code>include</code>, it poses a stricter limit on the backend server in CORS situations where the <code>Access-Control-Allow-Origin</code> header cannot be set to wildcard match <code>*</code> in the HTTP response.</p>&#xA;<p>The error message would look like below in such situation.</p>&#xA;<p><code>Access to fetch at 'http://127.0.0.1:1234/graphql' from origin 'http://0.0.0.0:4321' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: The value of the 'Access-Control-Allow-Origin' header in the response must not be the wildcard '*' when the request's credentials mode is 'include’.</code></p>&#xA;",4993386,,,,2021-01-16 04:19:13,"",,0,1,0,2021-01-16 04:19:13
65755471,2,,65751664,0,,"<p>Sorry, I missed <code>initialApolloState</code> in _app.tsx.</p>&#xA;<p><a href=""https://i.stack.imgur.com/XZfmQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XZfmQ.png"" alt=""enter image description here"" /></a></p>&#xA;<p>And in <code>getStaticProps()</code></p>&#xA;<p><a href=""https://i.stack.imgur.com/yizz7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yizz7.png"" alt=""enter image description here"" /></a></p>&#xA;",13815493,,,,2021-01-16 22:39:38,"",,0,0,0,2021-01-16 22:39:38
65757430,2,,65757394,8,,"<p>it's a compatibility issue,</p>&#xA;<p>downgrade <code>PyJWT</code> to <code>1.7.1</code></p>&#xA;<p>source: <a href=""https://github.com/flavors/django-graphql-jwt/issues/242"" rel=""noreferrer"">https://github.com/flavors/django-graphql-jwt/issues/242</a></p>&#xA;",11283442,,,,2021-01-17 04:47:40,"",,0,0,0,2021-01-17 04:47:40
65773413,2,,65156605,0,,"<p>I had the same issue and as it was returning undefined I could not see where was the mistake, and what worked for me was:</p>&#xA;<pre><code>onError(err) {&#xA;  console.log(err)&#xA;} &#xA;</code></pre>&#xA;<p>Then the console told me what was missing and after fixing that everything worked!</p>&#xA;<p>I reinstaured the onError graphQL function when I fixed that, so keep in mind to go back and change it again when you solve it!</p>&#xA;",14531500,,,,2021-01-18 11:11:24,"",,0,3,0,2021-01-18 11:11:24
65786417,1,,,5,1732,"<p>I'm trying to <a href=""https://www.apollographql.com/docs/react/caching/cache-configuration/"" rel=""noreferrer"">configure caching</a> and I'm getting this error:</p>&#xA;<blockquote>&#xA;<p>Missing field 'Customer_ID' while computing key fields</p>&#xA;</blockquote>&#xA;<p>I'm new to version two so I'm upgrading from version one (no caching) to v3. My understanding is that in the <code>typePolicies</code>, you have the <code>type</code> then its fields.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// Code not shown for simplicity&#xA;[..]&#xA;&#xA;const options = {&#xA;  typePolicies: {&#xA;    Customer: { // type&#xA;      keyFields: ['Customer_ID'] // field&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;const cache = new InMemoryCache(options)&#xA;[..]&#xA;</code></pre>&#xA;<p>And here's the type declaration:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type Customer {&#xA;  Customer_ID: Int&#xA;  [..]&#xA;}&#xA;</code></pre>&#xA;<p>Finally, my query, with fragments not shown but you do get the understanding:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>&#xA;const CustomerDetailsFragment = gql`&#xA;  fragment CustomerDetailsFragment on Customer {&#xA;    Customer_ID&#xA;    [..]&#xA;  }&#xA;`;&#xA;&#xA;query GetActiveCustomer {&#xA;  activeCustomer {&#xA;    ...CustomerDetailsFragment&#xA;    [..] // other fields&#xA;  }&#xA;}&#xA;${CustomerDetailsFragment}&#xA;[..] // other fragments&#xA;</code></pre>&#xA;<p>When I inspect the <code>activeCustomer</code> query, I see the <code>Customer_ID</code> so why do I get this error? Have I missed something? Thanks.</p>&#xA;",3581788,,,,2021-01-19 06:22:30,Apollo InMemoryCache cannot find keyfields,<reactjs><apollo-client>,0,0,0,2021-01-19 06:22:30
65789190,1,,,1,314,"<p>I'm using hotchocolate in .net core 3 and I'm trying to stitch / merge two objects of the same type into one object.</p>&#xA;<p><a href=""https://chillicream.com/docs/hotchocolate/v10/stitching#merge-rules"" rel=""nofollow noreferrer"">https://chillicream.com/docs/hotchocolate/v10/stitching#merge-rules</a>&#xA;The documentation here talks about merge rules. &quot;In most cases the default merge rules should be enough. But with more domain knowledge about the source schemas one could write more aggressive merge rules.&quot;</p>&#xA;<p>Where can I find more info about merge rules? How to write one of my own?&#xA;I'm trying to merge two objects of the same type into one. For example</p>&#xA;<pre><code>Object A of type something&#xA;Prop 1&#xA;Prop 2&#xA;&#xA;Object B of type something&#xA;Prop 3&#xA;Prop 4&#xA;</code></pre>&#xA;<p>Should be stitched / merged into</p>&#xA;<pre><code>An object of type something with&#xA;Prop 1&#xA;Prop 2&#xA;Prop 3&#xA;Prop 4&#xA;</code></pre>&#xA;<p>How can I achieve this?&#xA;Edit: I want to accomplish the same as written here: <a href=""https://www.graphql-tools.com/docs/stitch-type-merging/"" rel=""nofollow noreferrer"">https://www.graphql-tools.com/docs/stitch-type-merging/</a></p>&#xA;",7064454,,7064454,2021-01-19 10:15:46,2021-01-19 10:15:46,Merge Rules in Hotchocolate GraphQL?,<graphql><hotchocolate>,0,1,0,2021-01-19 10:01:01
65840761,2,,65834157,0,,"<p>I logged my context and It looks like I was getting the values, but undefined. You need to use the onConnect event to upgrade the context.</p>&#xA;<p>Links than helped me:&#xA;<a href=""https://github.com/MichalLytek/type-graphql/issues/391"" rel=""nofollow noreferrer"">Discussion</a>&#xA;<a href=""https://www.youtube.com/watch?v=EuaVr7vFF5E&amp;t=365s"" rel=""nofollow noreferrer"">Youtube</a></p>&#xA;",14559643,,,,2021-01-22 07:12:03,"",,0,0,0,2021-01-22 07:12:03
65845338,1,65940174,,0,367,"<p>I have my project ready and working but only in my local machine. I want to deploy it so that I can showcase what I have made. My backend is deployed and running <a href=""https://readers-corner-backend.herokuapp.com/graphql?query=%7B%0A%20%20name(name%3A%22ab%22)%20%7B%0A%20%20%20%20name%0A%20%20%20%20id%0A%20%20%20%20genre%0A%20%20%20%20author%20%7B%0A%20%20%20%20%20%20name%0A%20%20%20%20%7D%0A%20%20%20%20description%0A%20%20%20%20rating%0A%20%20%20%20image%0A%20%20%7D%0A%7D%0A"" rel=""nofollow noreferrer"">here</a> the code is <a href=""https://github.com/Pkpratik/Book-Store-Backend"" rel=""nofollow noreferrer"">here</a></p>&#xA;<p>Here is the app.js</p>&#xA;<pre><code>const express = require(&quot;express&quot;);&#xA;const  {graphqlHTTP}  = require(&quot;express-graphql&quot;);&#xA;const schema = require(&quot;./schema/schema&quot;);&#xA;const mongoose = require(&quot;mongoose&quot;);&#xA;//need to see&#xA;const cors = require(&quot;cors&quot;)&#xA;const app = express();&#xA;app.use(cors());&#xA;&#xA;mongoose.connect(&#xA;  &quot;mongodb+srv://administrator:administrator@cluster0.gqs94.mongodb.net/readerscorner?retryWrites=true&amp;w=majority&quot;,&#xA;  { useNewUrlParser: true, useUnifiedTopology: true }&#xA;);&#xA;mongoose.connection.once(&quot;open&quot;, () =&gt; {&#xA;  console.log(&quot;connected&quot;);&#xA;});&#xA;&#xA;app.use(&quot;/graphql&quot;, graphqlHTTP({ schema, graphiql: true }));&#xA;&#xA;const port = process.env.PORT || 4000&#xA;&#xA;// Strating Server&#xA;app.listen(port)&#xA;</code></pre>&#xA;<p>i have my frontend <a href=""https://readerscorner.netlify.app/"" rel=""nofollow noreferrer"">here</a> the code is <a href=""https://github.com/Pkpratik/Book-Store-Frontend"" rel=""nofollow noreferrer"">here</a></p>&#xA;<p>Here is the app.js</p>&#xA;<pre><code>import React, { Component } from &quot;react&quot;;&#xA;import BookList from &quot;./components/BookList&quot;;&#xA;import AddBook from &quot;./components/AddBook&quot;;&#xA;import ApolloClient from &quot;apollo-boost&quot;;&#xA;import { ApolloProvider } from &quot;react-apollo&quot;;&#xA;import LoginButton from &quot;./components/LoginButton&quot;&#xA;import LogoutButton from &quot;./components/LogoutButton&quot;;&#xA;import Profile from &quot;./components/Profile&quot;;&#xA;import {useAuth0} from '@auth0/auth0-react'&#xA;import &quot;./App.css&quot;&#xA;&#xA;//import Search from &quot;./components/Search&quot;;&#xA;&#xA;// components&#xA;&#xA;// apollo client setup&#xA;const client = new ApolloClient({&#xA;  uri: process.env.NODE_ENV === 'development' ? `https://readers-corner-backend.herokuapp.com/graphql` : `http://localhost:4000`,&#xA;});&#xA;&#xA;class App extends Component {&#xA;  render() {&#xA;    &#xA;    &#xA;    return (&#xA;      &lt;ApolloProvider client={client}&gt;&#xA;        &lt;div id=&quot;main&quot;&gt;&#xA;        &lt;nav class=&quot;navbar navbar-expand-lg navbar-light bg-light&quot;&gt;&#xA;        &lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&gt;Readers Corner - The Books Store&lt;/a&gt;&#xA;        &lt;button class=&quot;navbar-toggler&quot; type=&quot;button&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#navbarSupportedContent&quot;&#xA;            aria-controls=&quot;navbarSupportedContent&quot; aria-expanded=&quot;false&quot; aria-label=&quot;Toggle navigation&quot;&gt;&#xA;            &lt;span class=&quot;navbar-toggler-icon&quot;&gt;&lt;/span&gt;&#xA;        &lt;/button&gt;&#xA;&#xA;        &lt;div class=&quot;collapse navbar-collapse&quot; id=&quot;navbarSupportedContent&quot;&gt;&#xA;            &lt;ul class=&quot;navbar-nav ml-auto&quot;&gt;&#xA;            &lt;Profile/&gt;&#xA;                &lt;li class=&quot;nav-item mr-2&quot;&gt;&#xA;                  &lt;LoginButton /&gt;&#xA;                    &#xA;                &lt;/li&gt;&#xA;                &lt;li class=&quot;nav-item&quot;&gt;&#xA;                    &lt;LogoutButton/&gt;&#xA;                    &#xA;                &lt;/li&gt;&#xA;&#xA;            &lt;/ul&gt;&#xA;        &lt;/div&gt;&#xA;    &lt;/nav&gt;&#xA;          &#xA;          &#xA;          &#xA;          &lt;BookList /&gt;&#xA;        &lt;AddBook /&gt;&#xA;        &lt;/div&gt;&#xA;      &lt;/ApolloProvider&gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;export default App;&#xA;</code></pre>&#xA;<p>the problem is that the frontend works only when i have my backend running in the local machine, my deployed frontend is connected to my local backend. how can i make it connect to a deployed backend?</p>&#xA;",11939335,,11939335,2021-01-22 13:40:07,2021-01-28 15:26:50,connect react apollo frontend to graphql backend,<javascript><reactjs><heroku><graphql><frontend>,3,2,0,2021-01-22 12:36:53
65898211,2,,65845338,2,,"<p>This might not solve your issue but are you sure this shouldn't be the other way around?</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// apollo client setup&#xA;const client = new ApolloClient({&#xA;  uri: process.env.NODE_ENV === 'development' ? `https://readers-corner-backend.herokuapp.com/graphql` : `http://localhost:4000`,&#xA;});&#xA;</code></pre>&#xA;<p>You are using the remove URL for <code>development</code></p>&#xA;<p>Try</p>&#xA;<pre><code>uri: process.env.NODE_ENV === 'development' ? `http://localhost:4000` : `https://readers-corner-backend.herokuapp.com/graphql`,&#xA;</code></pre>&#xA;",2890316,,,,2021-01-26 08:44:18,"",,0,4,0,2021-01-26 08:44:18
65910413,1,,,1,138,"<p><strong>Description</strong></p>&#xA;<p>We recently upgraded from Apollo v2 to v3 in our React Native app. Ever since our Detox tests have been failing on Bitrise CI but they work fine locally. We get this odd crash report when we run them on Bitrise CI.</p>&#xA;<p>I can run old code and it passes fine but any new code using Apollo v3 fails.</p>&#xA;<p>Note: We have some websockets / subscriptions that might be the cause of this. Seems like it doesn't release the lock here: <code>willReleaseLock</code>.</p>&#xA;<p><strong>Logs</strong></p>&#xA;<pre><code>detox[24921] INFO:  Group message notification tests: should log in&#xA;detox[24921] ERROR: [Detox.js/APP_CRASH] App crashed in test 'Group message notification tests should log in', here are the crash details: &#xA;Signal 5 was raised&#xA;(&#xA;    0   Detox                               0x000000010a612bd5 __DTXHandleSignal + 59&#xA;    1   libsystem_platform.dylib            0x00007fff5e7305fd _sigtramp + 29&#xA;    2   ???                                 0x0000000113e51a60 0x0 + 4628748896&#xA;    3   JavaScriptCore                      0x00007fff316bd2c6 JSC::JSLock::willReleaseLock() + 246&#xA;    4   JavaScriptCore                      0x00007fff316bd174 JSC::JSLock::unlock(long) + 68&#xA;    5   JavaScriptCore                      0x00007fff316bd461 JSC::JSLock::DropAllLocks::DropAllLocks(JSC::VM*) + 257&#xA;    6   JavaScriptCore                      0x00007fff30d37687 JSC::JSCallbackObject&lt;JSC::JSNonFinalObject&gt;::call(JSC::JSGlobalObject*, JSC::CallFrame*) + 599&#xA;    7   JavaScriptCore                      0x00007fff313fb9e1 JSC::handleHostCall(JSC::JSGlobalObject*, JSC::CallFrame*, JSC::JSValue, JSC::CallLinkInfo*) + 353&#xA;    8   JavaScriptCore                      0x00007fff313fb34f operationLinkCall + 127&#xA;    9   ???                                 0x000027b243202d67 0x0 + 43646583844199&#xA;    10  ???                                 0x000027b24339b6e5 0x0 + 43646585517797&#xA;    11  ???                                 0x000027b2433987c4 0x0 + 43646585505732&#xA;    12  ???                                 0x000027b2436c021c 0x0 + 43646588813852&#xA;    13  ???                                 0x000027b243658b6e 0x0 + 43646588390254&#xA;    14  JavaScriptCore                      0x00007fff30cdaf09 llint_entry + 104453&#xA;</code></pre>&#xA;<p><strong>Versions</strong></p>&#xA;<pre><code>    &quot;detox&quot;: &quot;^17.3.6&quot;,&#xA;    &quot;react-native&quot;: &quot;0.63.3&quot;,&#xA;    &quot;@apollo/client&quot;: &quot;^3.2.9&quot;,&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/qg9NY.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qg9NY.png"" alt=""enter image description here"" /></a></p>&#xA;",559891,,559891,2021-01-29 16:27:31,2021-01-29 16:27:31,Detox and Apollo v3 crash,<react-native><apollo><detox>,0,11,0,2021-01-26 22:50:40
65944266,2,,61766686,2,,"<p>If you want to use apollo-link-rest you will have to use version 0.7.3 and use apollo-client 2.6.10, this fixed the problem for me</p>&#xA;<p>The 0.8.0-beta.0 has not been updated in some time, and it's unclear if this will be maintained to work properly with @apollo/client 3</p>&#xA;",1235783,,,,2021-01-28 19:52:16,"",,0,0,0,2021-01-28 19:52:16
65976157,1,,,3,1371,"<p>I'm trying to make an user-authenticated GraphQL request on the serverside in <code>getServerSideProps</code> using AWS Amplify and Next JS.</p>&#xA;<p>Users in my AWS Database can only access the data if they are the <strong>owner</strong> of the document.</p>&#xA;<p>The error I get from this is <strong>&quot;No current user&quot;</strong>... (which is being logged on the server).&#xA;The problem is, that I need the user available in the getServerSideProps, so I can make the authenticated request happen.</p>&#xA;<p>Here is the code I currently have</p>&#xA;<p><strong>index.tsx:</strong></p>&#xA;<pre><code>import Amplify, { API, graphqlOperation, withSSRContext } from &quot;aws-amplify&quot;;&#xA;import config from &quot;../aws-exports&quot;;&#xA;Amplify.configure({ ...config, ssr: true });&#xA;&#xA;function Index({ bankAccounts }: { bankAccounts: BankAccount[] }) {&#xA;&#xA;  return (&#xA;    ...stuff...&#xA;  );&#xA;}&#xA;</code></pre>&#xA;<p><strong>index.tsx (getServerSideProps):</strong></p>&#xA;<pre><code>export const getServerSideProps: GetServerSideProps = async (context) =&gt; {&#xA;  const { API } = withSSRContext(context);&#xA;&#xA;  const result = (await API.graphql({&#xA;    query: listBankAccounts,&#xA;  })) as {&#xA;    data: ListBankAccountsQuery;&#xA;    errors: any[];&#xA;  };&#xA;&#xA;  if (!result.errors) {&#xA;    return {&#xA;      props: {&#xA;        bankAccounts: result.data.listBankAccounts.items,&#xA;      },&#xA;    };&#xA;  }&#xA;&#xA;  return {&#xA;    props: {&#xA;      bankAccounts: [],&#xA;    },&#xA;  };&#xA;};&#xA;</code></pre>&#xA;<p>I would greatly appreciate any help or advice you could offer!</p>&#xA;",11944725,,,,2021-02-03 10:08:18,No current user - getServerSideProps Next JS and AWS Amplify,<reactjs><amazon-web-services><graphql><next.js><aws-amplify>,1,1,0,2021-01-31 05:50:04
65994360,2,,65991128,6,,"<p>Gatsby's team is actually working on reducing the build time by adding some &quot;cache&quot; features. You can follow the stack trace in their <a href=""https://www.gatsbyjs.com/docs/reference/release-notes/v2.28/"" rel=""noreferrer"">releases notes</a>, they are still in beta testing (some of them are focused mainly on <code>gatsby develop</code>.</p>&#xA;<p>If you want to try it them to check if it improves the build-develop time, you just need to upgrade Gatsby to the latest version (<code>^2.28</code>) and:</p>&#xA;<pre><code>// In your gatsby-config.js&#xA;module.exports = {&#xA;  // your existing config&#xA;  flags: {&#xA;    FAST_DEV: true,&#xA;  },&#xA;}&#xA;</code></pre>&#xA;<p>Regarding the <code>gatsby build</code>, in the meantime, in Netlify, you can activate some plugins (<a href=""https://app.netlify.com/plugins/netlify-plugin-gatsby-cache/install?_ga=2.204323152.1574804292.1612188806-1360369163.1610965804"" rel=""noreferrer"">Gatsby Cache</a> for example).</p>&#xA;<p>Among all this stuff, you can also add the incremental build feature (described in this <a href=""https://www.netlify.com/blog/2020/04/23/enable-gatsby-incremental-builds-on-netlify/"" rel=""noreferrer"">Netlify's post</a> by the great Jason Lengstorf). After you've installed the needed dependencies (upgrade Gatsby and <code>cross-env</code>), just customize the build command (also in Netlify's dashboard) to enable the <code>PAGE_BUILD_ON_DATA</code> feature:</p>&#xA;<pre><code>&quot;build&quot;: &quot;cross-env GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES=true gatsby build --log-pages&quot;&#xA;</code></pre>&#xA;",5585371,,5585371,2021-02-01 16:49:54,2021-02-01 16:49:54,"",,0,3,0,2021-02-01 14:21:17
65994792,1,65995406,,0,2522,"<p>I am using <a href=""https://v4.apollo.vuejs.org/"" rel=""nofollow noreferrer"">VueApollo</a> for GraphQL queries.</p>&#xA;<p>I do have query using unions and it works in standalone GraphQL editors.&#xA;Problem appears when I am trying to query union type with fields that are different for each type.</p>&#xA;<p>I am using VueApollo smart query interface.</p>&#xA;<p>Here is a query:</p>&#xA;<pre><code>{&#xA;    notifications{&#xA;    id,&#xA;    message,&#xA;    recipient {&#xA;      id&#xA;      username&#xA;    }&#xA;    notificable {&#xA;      __typename&#xA;      ... on Comment {&#xA;        id&#xA;        commentable {&#xA;          ... on Post {&#xA;            __typename&#xA;            id&#xA;            title&#xA;          }&#xA;          ... on Comment { &#xA;            __typename&#xA;            id&#xA;            message     &#xA;          }&#xA;        }&#xA;      }&#xA;    }   &#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>The error I do receive in console while query result is being resolved:</p>&#xA;<pre><code>instrument.js:109 Missing field message in {&#xA;  &quot;__typename&quot;: &quot;Post&quot;,&#xA;  &quot;id&quot;: &quot;999bf735-057b-4a69-a164-e2b09a0be2f1&quot;,&#xA;  &quot;title&quot;: &quot;Post&quot;&#xA;}&#xA;</code></pre>&#xA;<p>(notifications.notificable.commentable)&#xA;Error appears when I am adding <em>message</em> field to Comment but it has nothing to do with Post. I am guessing the <em>message</em> field is being forced on <em>Post</em> type while writing to local store.</p>&#xA;<p>Stacktrace:</p>&#xA;<pre><code>(anonymous) @   instrument.js:109&#xA;(anonymous) @   invariant.esm.js:29&#xA;(anonymous) @   bundle.esm.js:575&#xA;push../node_modules/apollo-cache-inmemory/lib/bundle.esm.js.StoreWriter.writeSelectionSetToStore    @   bundle.esm.js:551&#xA;(anonymous) @   bundle.esm.js:603&#xA;push../node_modules/apollo-cache-inmemory/lib/bundle.esm.js.StoreWriter.writeSelectionSetToStore    @   bundle.esm.js:551&#xA;push../node_modules/apollo-cache-inmemory/lib/bundle.esm.js.StoreWriter.writeFieldToStore   @   bundle.esm.js:649&#xA;(anonymous) @   bundle.esm.js:560&#xA;push../node_modules/apollo-cache-inmemory/lib/bundle.esm.js.StoreWriter.writeSelectionSetToStore    @   bundle.esm.js:551&#xA;(anonymous) @   bundle.esm.js:603&#xA;push../node_modules/apollo-cache-inmemory/lib/bundle.esm.js.StoreWriter.writeSelectionSetToStore    @   bundle.esm.js:551&#xA;push../node_modules/apollo-cache-inmemory/lib/bundle.esm.js.StoreWriter.writeFieldToStore   @   bundle.esm.js:649&#xA;(anonymous) @   bundle.esm.js:560&#xA;push../node_modules/apollo-cache-inmemory/lib/bundle.esm.js.StoreWriter.writeSelectionSetToStore    @   bundle.esm.js:551&#xA;(anonymous) @   bundle.esm.js:702&#xA;push../node_modules/apollo-cache-inmemory/lib/bundle.esm.js.StoreWriter.processArrayValue   @   bundle.esm.js:685&#xA;push../node_modules/apollo-cache-inmemory/lib/bundle.esm.js.StoreWriter.writeFieldToStore   @   bundle.esm.js:631&#xA;(anonymous) @   bundle.esm.js:560&#xA;push../node_modules/apollo-cache-inmemory/lib/bundle.esm.js.StoreWriter.writeSelectionSetToStore    @   bundle.esm.js:551&#xA;push../node_modules/apollo-cache-inmemory/lib/bundle.esm.js.StoreWriter.writeResultToStore  @   bundle.esm.js:529&#xA;push../node_modules/apollo-cache-inmemory/lib/bundle.esm.js.InMemoryCache.write @   bundle.esm.js:875&#xA;push../node_modules/apollo-client/bundle.esm.js.DataStore.markQueryResult   @   bundle.esm.js:1781&#xA;push../node_modules/apollo-client/bundle.esm.js.QueryManager.markQueryResult    @   bundle.esm.js:1201&#xA;(anonymous) @   bundle.esm.js:1642&#xA;next    @   Observable.js:322&#xA;notifySubscription  @   Observable.js:135&#xA;onNotify    @   Observable.js:179&#xA;next    @   Observable.js:235&#xA;(anonymous) @   bundle.esm.js:866&#xA;next&#xA;</code></pre>&#xA;<p>What I am doing wrong?</p>&#xA;<p>I did added possible types to apollo cache as described in docs: <a href=""https://www.apollographql.com/docs/react/data/fragments/#defining-possibletypes-manually"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/data/fragments/#defining-possibletypes-manually</a></p>&#xA;<p>possibleTypes.json</p>&#xA;<pre><code>{&quot;Commentable&quot;:[&quot;Comment&quot;,&quot;Post&quot;],&quot;Node&quot;:[&quot;Post&quot;,&quot;User&quot;],&quot;Notificable&quot;:[&quot;Comment&quot;,&quot;Post&quot;]}&#xA;</code></pre>&#xA;<p>it did not helped.</p>&#xA;",2431315,,2431315,2021-02-01 15:15:00,2022-01-24 20:01:00,Unexpected *Missing Field* error while solving union result on graphql query ( Vue Apollo Client ),<graphql><apollo-client><graphql-js><vue-apollo>,2,0,0,2021-02-01 14:50:56
66012367,1,,,1,130,"<p>I have been trying to write junction and I am using join-monster-graphql-tools-adapter. Here is the sample code</p>&#xA;<pre><code>assets:{&#xA;          junction: {&#xA;            sqlTable: 'FPAS',&#xA;          sqlJoins: [(contractTable, junctionTabel) =&gt; `${contractTable}.CONTRACT_ID =${junctionTabel}.CONTRACT_ID`,&#xA;                     (junctionTabel,assetTable) =&gt; `${junctionTabel}.ASSET_ID = ${assetTable}.ASSET_ID`]&#xA;        }&#xA;</code></pre>&#xA;<p>but while testing it fails with error message: <strong>Cannot read property 'sqlTable' of undefined</strong></p>&#xA;<p>Could anyone help me on this.</p>&#xA;",7544358,,,,2021-02-06 10:13:20,Writing junction for multiple joins using join-monster-graphql-tools-adapter in graphql and join-monster,<graphql><apollo-server>,1,0,0,2021-02-02 15:07:53
66028509,2,,64227973,2,,"<p>you have to use onDisconnect property with context.initPromise like this:</p>&#xA;<pre><code>    onDisconnect: async (webSocket, context) =&gt; {&#xA;      console.log('what is the context?: ', context); &#xA;&#xA;      try {&#xA;        const initialContext = await context.initPromise;&#xA;        if (&#xA;          initialContext &amp;&amp;&#xA;          typeof initialContext === 'object' &amp;&amp;&#xA;          Reflect.has(initialContext, 'user')&#xA;        ) {&#xA;          console.log('initialContext: ', initialContext);&#xA;        }&#xA;      } catch (err) {&#xA;        console.log('error', err); // TypeError: &#xA;      }&#xA;    }&#xA;  },&#xA;</code></pre>&#xA;<p><a href=""https://www.codota.com/code/javascript/functions/subscriptions-transport-ws/initPromise"" rel=""nofollow noreferrer"">link</a> and <a href=""https://spectrum.chat/apollo/apollo-server/how-to-access-context-in-ondisconnect-for-subscriptions%7E81dc7677-1907-4e76-b13b-875d14b8aaf3"" rel=""nofollow noreferrer"">link2</a> for reference.</p>&#xA;<p><strong>warning:</strong> this is currently working on my local build but not on my heroku production build</p>&#xA;",1524165,,,,2021-02-03 13:27:00,"",,0,0,0,2021-02-03 13:27:00
66029312,2,,66029311,0,,"<p>Types in KeystoneJS seem to be named with the following format:</p>&#xA;<pre><code>&lt;list name&gt;&lt;field name&gt;Type&#xA;</code></pre>&#xA;<p>Additionally, if the first letter of <code>&lt;list name&gt;</code> or <code>&lt;field name&gt;</code> are lowercase, these are changed to uppercase. So for the example given in the question, the type name for the field <code>status</code> would be:</p>&#xA;<pre><code>OrderStatusType&#xA;</code></pre>&#xA;<p>The available options can then be queried with the following:</p>&#xA;<pre><code>query {&#xA;  __type (name: &quot;OrderStatusType&quot;) {&#xA;    enumValues {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Tested on a standard KeystoneJS install with a Postgres database.</p>&#xA;",2627160,,,,2021-02-03 14:16:38,"",,0,0,0,2021-02-03 14:16:38
66029623,1,,,3,965,"<p>I'm currently maintaining a production Nuxt.js Vue app that integrates GraphQL Apollo Client that's running into page render errors. For the sake of boosting my chances of getting a response, I built a bare-bones code example that showcases only the problem we are running into. Thanks everybody.</p>&#xA;<p><strong>Source Code</strong></p>&#xA;<ul>&#xA;<li>Client, <a href=""https://github.com/sgarcia-dev/error-apollo-client-nuxt"" rel=""nofollow noreferrer"">https://github.com/sgarcia-dev/error-apollo-client-nuxt</a></li>&#xA;<li>Server, <a href=""https://github.com/sgarcia-dev/error-apollo-server"" rel=""nofollow noreferrer"">https://github.com/sgarcia-dev/error-apollo-server</a></li>&#xA;</ul>&#xA;<p><strong>The Problem</strong></p>&#xA;<p>The problem, is that every now and then, the GraphQL server we rely on (we have no control over it) goes down and returns a HTML error page, which crashes Apollo Client due to its attempt to parse the GraphQL spec JSON response. This yields the infamous <code>Unexpected token &lt; in JSON at position 0</code> error that's been reported <a href=""https://github.com/apollographql/apollo-feature-requests/issues/153"" rel=""nofollow noreferrer"">over</a> and <a href=""https://github.com/graphql-boilerplates/node-graphql-server/issues/274"" rel=""nofollow noreferrer"">over</a> again.</p>&#xA;<p>The thing is, because we are using the <code>@nuxt/apollo</code> Nuxt module that integrates Apollo into the render pipeline, this makes Nuxt's page render crash. Giving us a generic server render error page that looks like this;</p>&#xA;<p><a href=""https://i.stack.imgur.com/pWzh0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pWzh0.png"" alt=""Nuxt server error page"" /></a></p>&#xA;<pre><code> ERROR  Network error: Unexpected token &lt; in JSON at position 0                                                            08:11:04&#xA;&#xA;  at new ApolloError (node_modules/apollo-client/bundle.umd.js:92:26)&#xA;  at node_modules/apollo-client/bundle.umd.js:1588:34&#xA;  at node_modules/apollo-client/bundle.umd.js:2008:15&#xA;  at Set.forEach (&lt;anonymous&gt;)&#xA;  at node_modules/apollo-client/bundle.umd.js:2006:26&#xA;  at Map.forEach (&lt;anonymous&gt;)&#xA;  at QueryManager.broadcastQueries (node_modules/apollo-client/bundle.umd.js:2004:20)&#xA;  at node_modules/apollo-client/bundle.umd.js:1483:29&#xA;  at processTicksAndRejections (node:internal/process/task_queues:94:5)&#xA;</code></pre>&#xA;<p><strong>How to reproduce the error</strong></p>&#xA;<p>Clone the repositories from above, and start both of them following the readme.md commands. (for the server error, make sure to run <code>npm run start-express</code> since that's the one that crashes the client).</p>&#xA;<p>You'll notice the <a href=""https://github.com/sgarcia-dev/error-apollo-client-nuxt/blob/master/pages/index.vue#L34"" rel=""nofollow noreferrer"">pages/index.js</a> throws a server error page since the server returns an invalid HTML response.</p>&#xA;<p><strong>What we tried</strong></p>&#xA;<p>We tried following every error handling spec in the Vue Apollo and Nuxt apollo docs, but nothing seems to work. We tried:</p>&#xA;<ul>&#xA;<li>Adding the Nuxt &quot;@apollo/nuxt&quot; module <a href=""https://github.com/nuxt-community/apollo-module/blob/master/README.md#errorhandler-example"" rel=""nofollow noreferrer"">supported error handler syntax</a>. It gets logged correctly, but the error doesn't stop propagating and crashes the page render. Even if we <a href=""https://github.com/sgarcia-dev/error-apollo-client-nuxt/blob/master/apollo/onError.js#L30"" rel=""nofollow noreferrer"">return false at the end</a>. Which we thought that would, since that's what the source code for <a href=""https://github.com/vuejs/vue-apollo/blob/83fb002c39519be0eeadad148d6ec58c552d4cc1/packages/vue-apollo/src/smart-apollo.js#L151-L195"" rel=""nofollow noreferrer"">vue-apollo seems to do</a></li>&#xA;<li>Setting an apollo client <a href=""https://www.apollographql.com/docs/react/data/error-handling/#error-policies"" rel=""nofollow noreferrer"">errorPolicy</a> of <code>ignore</code> and <code>all</code>, but the error still got through and crashed the page render</li>&#xA;<li>Adding individual query <code>error()</code> handlers and not relying on the global one. They stopped propagation to the global page, but it didn't stop the page render error from happening.</li>&#xA;<li>Using <code>apollo-link-error</code>'s approach to <a href=""https://www.apollographql.com/docs/link/links/error/#ignoring-errors"" rel=""nofollow noreferrer"">ignoring errors</a> by adding a <code>link</code> property to our nuxt apollo config and following those steps. The link configuration ran, and errors were indeed logged. But <code>response</code> in that example evaluates to undefined, stopping us from being able to do <code>response.error</code>. I assume its a Nuxt compatibility issue thing being SSR and all, and that this might be designed for React applications.</li>&#xA;</ul>&#xA;<p><strong>Summary</strong></p>&#xA;<p>Even simple pages using nuxt/apollo module crash page render on an invalid GraphQL response, and we have no idea how to stop it from happening other than migrating our app from using nuxt/apollo and instead using apollo client directly which will be quite expensive.... any ideas?</p>&#xA;",2942765,,2942765,2021-02-03 16:01:57,2021-05-22 21:44:44,How to handle apollo client errors crashing page render in Nuxt?,<vue.js><error-handling><graphql><nuxt.js><apollo>,1,6,0,2021-02-03 14:33:00
66030282,1,66141728,,11,8790,"<p><strong>Context</strong></p>&#xA;<p>This question is related to my other question, <a href=""https://stackoverflow.com/questions/66029623/how-to-handle-apollo-client-errors-crashing-page-render-in-nuxt"">How to handle apollo client errors crashing page render in Nuxt?&#xA;</a>, but I'll try to keep this isolated since I'd like this question focused only on Nuxt (minus apollo). However, I decided to ask this separate since I'm looking for an entirely different response/solution.</p>&#xA;<p><strong>The problem</strong></p>&#xA;<p>I'm currently maintaining a production Nuxt/Vue app that is using the <code>@nuxt/apollo</code> module to make GraphQL requests.</p>&#xA;<p>The problem, is that every now and then, the GraphQL server we rely on goes down and returns an HTML error page, which crashes the Apollo client. But because we're loading Apollo as a nuxt module, it crashes the page render pipeline as well. Giving us a generic server error page that looks like this;</p>&#xA;<p><a href=""https://i.stack.imgur.com/OTNr4.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/OTNr4.png"" alt=""page error"" /></a></p>&#xA;<blockquote>&#xA;<p>Server error&#xA;An error occurred in the application and your page could not be served. If you are the application owner, check your logs for details.</p>&#xA;</blockquote>&#xA;<p>And the following stack trace:</p>&#xA;<pre><code> ERROR  Network error: Unexpected token &lt; in JSON at position 0                                                            08:11:04&#xA;&#xA;  at new ApolloError (node_modules/apollo-client/bundle.umd.js:92:26)&#xA;  at node_modules/apollo-client/bundle.umd.js:1588:34&#xA;  at node_modules/apollo-client/bundle.umd.js:2008:15&#xA;  at Set.forEach (&lt;anonymous&gt;)&#xA;  at node_modules/apollo-client/bundle.umd.js:2006:26&#xA;  at Map.forEach (&lt;anonymous&gt;)&#xA;  at QueryManager.broadcastQueries (node_modules/apollo-client/bundle.umd.js:2004:20)&#xA;  at node_modules/apollo-client/bundle.umd.js:1483:29&#xA;  at processTicksAndRejections (node:internal/process/task_queues:94:5)&#xA;</code></pre>&#xA;<p>However, none of this stack trace allows us to see where nuxt is throwing the error, so we can handle it.</p>&#xA;<p><strong>What we tried</strong></p>&#xA;<p>We've exhausted all our options looking into this issue for the past couple of weeks. We first tried to solve it by handling the error directly at Apollo level using all 3 apollo library abstractions's error handling solutions:</p>&#xA;<ul>&#xA;<li><code>@nuxt/apollo</code> module</li>&#xA;<li><code>vue-apollo</code></li>&#xA;<li><code>apollo-client</code></li>&#xA;</ul>&#xA;<p>If you'd like to read up more on that (even though its kind of irrelevant to this question), you can read more on my original question <a href=""https://stackoverflow.com/questions/66029623/how-to-handle-apollo-client-errors-crashing-page-render-in-nuxt"">here</a></p>&#xA;<p>However, right now I'd prefer to know if there's a way to somehow handle these page render errors either by:</p>&#xA;<ul>&#xA;<li>Making the errors fail silently, so the page still renders as normal</li>&#xA;<li>Allowing us to redirect to another page.</li>&#xA;</ul>&#xA;<p>Since the apollo nuxt module we are using currently isn't working for that, I'd like to know if Nuxt supports some kind of way to handle errors.</p>&#xA;<p>It didn't help much that Nuxt's documentation is pretty limited when it comes to error handling. At best, it has information regarding the error pages and how to redirect to the error pages using <code>context.error</code>. But it doesn't have a dedicated page on how to catch common errors. I have a feeling Nuxt hooks could be the answer, but documentation on them is hard to navigate and also sparse.</p>&#xA;<p>The most complete information source I found on nuxt error handling was this article, <a href=""https://www.damirscorner.com/blog/posts/20200904-ErrorHandlingInNuxtjs.html"" rel=""noreferrer"">Error handling in NuxtJS</a>, of which nothing suggested worked for us.</p>&#xA;<p><strong>Summary</strong></p>&#xA;<p>Our nuxt app is crashing when the <code>@nuxt/apollo</code> nuxt module we are using crashes. We'd like to know if there's some kind of standard nuxt way of catching it, or if the only solution possible is just migrating our entire app to not use <code>@nuxt/apollo</code> module and use the ES6 promise syntax and load <code>apollo-client</code> manually into the app as a standalone library that's not deeply integrated into the nuxt lifecycle.</p>&#xA;",2942765,,,,2022-05-11 18:06:20,How to catch server errors in Nuxt.js so it doesn't crash page render? (Vue),<javascript><vue.js><nuxt.js><apollo>,2,3,0,2021-02-03 15:09:54
66041823,2,,52434011,1,,"<p>For anyone running into this issue, the problem is that iOS12 does not like <code>&lt;add name=&quot;Access-Control-Allow-Headers&quot; value=&quot;*&quot; /&gt;</code> when you have any custom headers. This was fixed in a BETA that never seemed to make it into an official release.</p>&#xA;<p>The solution is to specify each custom header individually, for example: <code>&lt;add name=&quot;Access-Control-Allow-Headers&quot; value=&quot;*,customheader1,customheader2&quot; /&gt;</code></p>&#xA;",5658060,,,,2021-02-04 08:24:34,"",,0,0,0,2021-02-04 08:24:34
66060946,2,,65439548,0,,"<p>So I've implemented a custom context factory which is executed automatically on every GraphQL request and constructs the object of desired format:</p>&#xA;<p>app.module.ts:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export interface AppContext {&#xA;  warnings: string[];&#xA;}&#xA;const contextFactory: ContextFunction&lt;any, AppContext&gt; = () =&gt; ({&#xA;  warnings: []&#xA;});&#xA;</code></pre>&#xA;<p>Now we can benefit from our newly created interface to add strong typings whenever we reference the context, e.g.:</p>&#xA;<p>some.resolver.ts</p>&#xA;<pre class=""lang-js prettyprint-override""><code>@Mutation()&#xA;async remove(&#xA;  @Args('id', ParseUUIDPipe) id: string,&#xA;  @Context() ctx: AppContext&#xA;): Promise&lt;FindOneDto&gt;&#xA;{&#xA;  return new FindOneDto(await this.service.remove(id, ctx.warnings));&#xA;}&#xA;</code></pre>&#xA;<p>Here the service can add its own warnings to the context.</p>&#xA;<p>To collect all of them and return to the API caller I override <code>formatResponse</code> function and append the warnings to the extensions (this is a special GraphQL meta-field serving the developing purposes):</p>&#xA;<p>app.module.ts:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const graphqlConfig: GqlModuleOptions = {&#xA;  context: contextFactory,&#xA;  formatResponse: (&#xA;    response: GraphQLResponse | null,&#xA;    context: GraphQLRequestContext&lt;AppContext&gt;,&#xA;  ): GraphQLResponse =&gt;&#xA;  {&#xA;    const warnings = context.context.warnings;&#xA;    if (warnings.length) {&#xA;      if (response) {&#xA;        const extensions = response.extensions || (response.extensions = {});&#xA;        extensions.warnings = warnings;&#xA;      } else {&#xA;        return { extensions: { warnings } };&#xA;      }&#xA;    }&#xA;    return response || {};&#xA;  },&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;<p>Similar approach is used in the official Apollo extension example: <a href=""https://github.com/apollographql/apollo-server/blob/main/packages/apollo-tracing/src/index.ts"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-server/blob/main/packages/apollo-tracing/src/index.ts</a>.</p>&#xA;<p>The only drawback I see now is that injecting the context in resolver's arguments breaks the compliance with auto-generated TypeScript interfaces (I use schema-first approach). In such case, we can switch to per-request-based mode so our resolver/service class instance will be created individually for each and every new request: <a href=""https://docs.nestjs.com/fundamentals/injection-scopes"" rel=""nofollow noreferrer"">https://docs.nestjs.com/fundamentals/injection-scopes</a>. Now we can access a context right in the methods without introducing any additional parameters. But this comes with increased latencies and, perhaps, memory-consumption. Another approach will be to create a standalone Nest interceptor.</p>&#xA;",7782943,,7782943,2021-02-18 23:10:40,2021-02-18 23:10:40,"",,0,12,0,2021-02-05 09:44:03
66455383,2,,60354928,0,,<p>Use <code>prisma1 deploy</code> that should work</p>&#xA;,15094192,,3448527,2021-03-03 10:46:05,2021-03-03 10:46:05,"",,0,0,0,2021-03-03 10:41:02
66506843,2,,65704023,5,,"<p>I'm using the <code>django-graphql-jwt==0.2.1</code> without this problem. Apparently, the problem is related to the new version of <code>django-graphql-jwt</code> which is <code>0.3.0</code> by now. Or, as you mentioned, you could bound the <code>PyJWT</code> to <code>1.7.0</code>.</p>&#xA;<p>The solution is using these bounded packages in your <code>requirements.txt</code> file as follows:</p>&#xA;<pre><code>django-graphql-jwt==0.3.0&#xA;PyJWT==1.7.0&#xA;</code></pre>&#xA;<p>Or</p>&#xA;<pre><code>django-graphql-jwt==0.2.1&#xA;</code></pre>&#xA;",3702377,,3702377,2021-04-14 16:05:11,2021-04-14 16:05:11,"",,0,0,0,2021-03-06 14:40:37
66511595,1,66512819,,0,189,"<p>So I'm trying to build a resolver for graphQL which is supposed to return an array of objects. The values for these objects come from a series of TypeORM selecting operations. And when I tried asking for a response in the graphql playground I only got empty arrays, so I started debugging the resolver using console.logs, but the thing is, inside the forEach loops I use the code seems to have the desired result: an array with objects in it. But when I log the same array right before returning it is empty:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>  @Query(() =&gt; [response])&#xA;  async getTeacherFromSubjectName(&#xA;    @Arg(&quot;subjectName&quot;) subjectName: string, &#xA;  ): Promise&lt;response[] | undefined&gt; {&#xA;    const subject = await Subject.findOne({name: subjectName}); &#xA;    const subjectId = subject?.id; &#xA;    let responseArray: response[] = []; &#xA;&#xA;    const qb = await getConnection()&#xA;      .createQueryBuilder()&#xA;      .select(&quot;teacher&quot;)&#xA;      .from(Teacher, &quot;teacher&quot;)&#xA;      .where(`teacher.subjectId = ${subjectId}`)&#xA;      .getMany()&#xA;&#xA;    qb.forEach(async (teacher) =&gt; {&#xA;     const qb = await getConnection()&#xA;      .createQueryBuilder()&#xA;      .select(&quot;lectureTime&quot;)&#xA;      .from(LectureTime, &quot;lectureTime&quot;)&#xA;      .where(`lectureTime.teacherId = ${teacher.id}`)&#xA;      .getMany()&#xA;&#xA;      responseArray.push( {&#xA;        teacher: teacher.name, &#xA;        lectures: qb, &#xA;      } ); &#xA;      console.log(responseArray) // [{ teacher: 'Dirceu', lectures: [ [LectureTime] ] }, { teacher: &#xA;                                     'Patrícia', lectures: [ [LectureTime], [LectureTime] ] } ]&#xA;    })&#xA;    &#xA;&#xA;    console.log(responseArray) // []&#xA;    return responseArray; &#xA;&#xA;  }&#xA;</code></pre>&#xA;<p>What I get on the console is the following:&#xA;<a href=""https://i.stack.imgur.com/mHGx1.jpg"" rel=""nofollow noreferrer"">link to image</a></p>&#xA;<p>I actually have no idea of what is going on here, you can see in the image that the order of the logs is inverted (log right before return is circled in blue).</p>&#xA;<p>I am certain that it is a silly problem and if you guys could point it out for me I would be very thankful.</p>&#xA;",15020951,,9238134,2021-03-08 01:42:11,2021-03-08 01:42:11,GraphQL response array getting empty out of nowhere right before return(??),<graphql><typeorm>,1,2,0,2021-03-06 23:05:42
66521201,2,,66520061,1,,"<p><strong>EDIT</strong>: <a href=""https://github.com/leangen/graphql-spqr-spring-boot-starter/releases/tag/graphql-spqr-spring-boot-starter-v0.0.6"" rel=""nofollow noreferrer"">GraphQL SPQR Spring Boot starter v0.0.6</a> fixed the issue and should work out of the box.</p>&#xA;<p>This is a bug in the starter. It doesn't properly detect the types when JDK proxies (and not CGLib) are used. I will make sure to fix this for the next release.&#xA;There's a couple of ways to temporarily work around this, but none of them are nice unfortunately.</p>&#xA;<p>You could e.g. force Spring to use CGLIB by e.g.</p>&#xA;<pre><code>@EnableAspectJAutoProxy(proxyTargetClass = true)&#xA;</code></pre>&#xA;<p>but this has potentially wide implications so I would recommend you simply wait a bit. I'll release a new version with a fix in a couple of days, as this is a <em>very</em> important bug.</p>&#xA;",294657,,294657,2021-04-17 11:07:50,2021-04-17 11:07:50,"",,0,4,0,2021-03-07 20:41:26
66531634,2,,61152565,6,,<p>If you have network issues with serverless you can export the AWS variable in your CLI to increase the default timeout <code>export AWS_CLIENT_TIMEOUT=360000</code></p>&#xA;<p>Hope this help you in the future ;)</p>&#xA;,7415698,,,,2021-03-08 14:29:00,"",,0,2,0,2021-03-08 14:29:00
66567565,2,,66343919,0,,"<p>This issue was solved with the latest release of the graphql-java-generator (1.12.3 and above). Thanks to the developers, they also included the extensions node in the code and released it.</p>&#xA;",3970855,,,,2021-03-10 15:12:17,"",,0,0,0,2021-03-10 15:12:17
66587135,2,,66585727,1,,<p>Your GraphQL query must start with a <code>query</code>:</p>&#xA;<pre><code>query($someVar: String!) {&#xA;  someQuery(someArg: $someVar) {&#xA;     ...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,11572438,,,,2021-03-11 17:01:53,"",,0,4,0,2021-03-11 17:01:53
66595854,2,,66365990,0,,"<p>Solution was annoyingly simple after much searching - my response Object wraps the data in wrapped JSON format, so it comes out as data-&gt;data-&gt;__schema, where it should be data-&gt;__schema.</p>&#xA;<p>Simply unwrapping it before the output solves the problem.</p>&#xA;",252276,,,,2021-03-12 07:25:49,"",,0,0,0,2021-03-12 07:25:49
66614355,2,,66614351,3,,<p>hey shresth try using this in your program</p>&#xA;<pre><code>app.use(helmet({ contentSecurityPolicy: (process.env.NODE_ENV === 'production') ? undefined : false })); &#xA;</code></pre>&#xA;,13846577,,,,2021-03-13 13:59:36,"",,0,1,0,2021-03-13 13:59:36
66653507,1,,,1,180,"<p>I'm using <code>apollo-client@2.6.10</code> in a VueJS application.</p>&#xA;<p>I have a <code>user</code> type that has (until recently) used local-only fields. Here is the local query and corresponding mutation:</p>&#xA;<pre><code>query currentUserQuery  {&#xA;  user @client {&#xA;    id&#xA;    email&#xA;    emailVerified&#xA;    displayName&#xA;  }&#xA;}&#xA;&#xA;mutation setCurrentUser($id: ID!, $email: String!, $emailVerified: Boolean!, $displayName: String) {&#xA;  update_current_user(&#xA;    id: $id,&#xA;    email: $email,&#xA;    emailVerified: $emailVerified,&#xA;    displayName: $displayName&#xA;) @client&#xA;}&#xA;</code></pre>&#xA;<p>And I also have a corresponding resolver for the mutation:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>resolvers = {&#xA;  Mutation: {&#xA;    update_current_user: (_, { id, email, emailVerified, displayName }, { cache }) =&gt; {&#xA;      const data = cache.readQuery({ query: currentUserQuery })&#xA;      const user = {&#xA;        __typename: 'User',&#xA;        id,&#xA;        email,&#xA;        emailVerified,&#xA;        displayName&#xA;      }&#xA;      data.user = user&#xA;      cache.writeData({ data })&#xA;      return user&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>So far, so good!</p>&#xA;<p>What I'd like to do now is mix in some additional fields from the remote api. So, I modified the query as such:</p>&#xA;<pre><code>query currentUserQuery  {&#xA;  user {&#xA;    id @client&#xA;    email @client&#xA;    emailVerified @client&#xA;    displayName @client&#xA;    tier {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I also updated the initial cache object written <code>cache.writeQuery</code> to include placeholder <code>tier</code> data.</p>&#xA;<p>But no matter how I try to wrangle this, the tier is always the initialised <code>null</code> value, and after inspecting network traffic I can see that the remote fields are not being fetched.</p>&#xA;<p>Should I be doing something different with resolvers? I've tried using local query resolvers for the local fields (instead of relying on direct fetches from the cache) to no avail.</p>&#xA;<p>After reading through the v2 docs and trying a variety of different approaches I'm at a loss to understand what's not working here.</p>&#xA;<p>Help greatly appreciated!</p>&#xA;",5987360,,5987360,2021-03-16 10:56:45,2021-03-16 10:56:45,Using Apollo to mix local and remote fields using the @client directive,<graphql><apollo><apollo-client><vue-apollo>,0,0,0,2021-03-16 10:37:17
66657772,1,,,0,62,"<p>I'm trying to import <code>.grahphql</code> files into my angular project. I followed the following &quot;tutorial&quot;: <a href=""https://apollo-angular.com/docs/recipes/webpack"" rel=""nofollow noreferrer"">https://apollo-angular.com/docs/recipes/webpack</a></p>&#xA;<p>But something goes wrong, if I do:</p>&#xA;<pre><code>import someQuery from '../../graphql/GetPrimarySystemsQuery.graphql';&#xA;&#xA;export class something {&#xA;&#xA;    function test() {&#xA;        console.log(someQuery )&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>I get <code>undefined</code> in my console</p>&#xA;<p>but if I do the following:</p>&#xA;<pre><code>import * as someQuery from '../../graphql/rankingSystem/queries/GetPrimarySystemsQuery.graphql';&#xA;&#xA;export class something {&#xA;&#xA;    function test() {&#xA;        console.log(someQuery )&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>It works, this seems to be different from what the documentation everywhere suggests, but I have no clue on why this happens</p>&#xA;",1229158,,,,2021-03-16 14:58:15,Importing `.graphql` files are undefined,<angular><graphql><apollo-client>,0,2,0,2021-03-16 14:58:15
66681671,2,,62442422,0,,"<p>I'm not sure if this will help or if your problem is different, but I have found <a href=""https://www.reddit.com/r/graphql/comments/e4veky/i_cannot_figure_out_why_i_am_getting_a_typeerror/f9fgzsj?utm_source=share&amp;utm_medium=web2x&amp;context=3"" rel=""nofollow noreferrer"">this reddit post</a> while I was having a similar problem and it fixed for me, so I'm adding it here for people in the future or with similar problems with react native and apollo.</p>&#xA;<p>You need to check your ApolloClient config, as the comment says:</p>&#xA;<blockquote>&#xA;<p>the uri can't be localhost and instead has to be your device's local ip address. Took me hours to figure this out.</p>&#xA;</blockquote>&#xA;<p>For example, if your config is something like</p>&#xA;<pre><code>const client = new ApolloClient({&#xA;  ...configRest,&#xA;  uri: 'http://localhost:4000/graphql'&#xA;})&#xA;</code></pre>&#xA;<p>You would need to change it to</p>&#xA;<pre><code>const client = new ApolloClient({&#xA;  ...configRest,&#xA;  uri: 'http://YOUR_IP_ADDRESS:4000/graphql'&#xA;})&#xA;</code></pre>&#xA;",9119186,,,,2021-03-17 21:42:05,"",,0,0,0,2021-03-17 21:42:05
66710644,1,,,1,3027,"<p>I am learning apollo. When I run my code it showing this error on my browser I don't know if it is my browser's problem. can anyone help me fix this&#xA;Error message</p>&#xA;<pre><code>./node_modules/@apollo/client/node_modules/optimism/lib/bundle.esm.js&#xA;Error: ENOENT: no such file or directory, open 'C:\Users\bijit\OneDrive\Desktop\wrk\JavaScript\pokemon\node_modules\@apollo\client\node_modules\optimism\lib\bundle.esm.js'&#xA;</code></pre>&#xA;<p>my App.js file</p>&#xA;<pre><code>import React from &quot;react&quot;;&#xA;import ApolloClient from &quot;apollo-boost&quot;;&#xA;import { ApolloProvider } from &quot;@apollo/react-hooks&quot;;&#xA;import PokemonsContainer from &quot;./container/PokemonsContainer&quot;;&#xA;&#xA;function App() {&#xA;  const client = new ApolloClient({&#xA;    uri: &quot;https://graphql-pokemon2.vercel.app/&quot;,&#xA;  });&#xA;  return (&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;main&gt;&#xA;        &lt;PokemonsContainer /&gt;&#xA;      &lt;/main&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  );&#xA;}&#xA;&#xA;export default App;&#xA;</code></pre>&#xA;<p>here is my PokemonsContainer.js file</p>&#xA;<pre><code>import React from 'react'&#xA;&#xA;function PokemonsContainer(){&#xA;    return(&#xA;        &lt;p&gt;i am pokemon&lt;/p&gt;&#xA;    )&#xA;}&#xA;&#xA;&#xA;export default PokemonsContainer&#xA;</code></pre>&#xA;<p>i have already installed apollo client and other dependencies i don't know why this error is occurring here is my package.json</p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;pokemon&quot;,&#xA;  &quot;version&quot;: &quot;0.1.0&quot;,&#xA;  &quot;private&quot;: true,&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@apollo/client&quot;: &quot;^3.3.12&quot;,&#xA;    &quot;@apollo/react-hooks&quot;: &quot;^4.0.0&quot;,&#xA;    &quot;@babel/core&quot;: &quot;^7.13.10&quot;,&#xA;    &quot;@babel/preset-env&quot;: &quot;^7.13.10&quot;,&#xA;    &quot;@testing-library/jest-dom&quot;: &quot;^5.11.4&quot;,&#xA;    &quot;@testing-library/react&quot;: &quot;^11.1.0&quot;,&#xA;    &quot;@testing-library/user-event&quot;: &quot;^12.1.10&quot;,&#xA;    &quot;apollo-boost&quot;: &quot;^0.4.9&quot;,&#xA;    &quot;apollo-cache-inmemory&quot;: &quot;^1.6.6&quot;,&#xA;    &quot;apollo-client&quot;: &quot;^2.6.10&quot;,&#xA;    &quot;apollo-link&quot;: &quot;^1.2.14&quot;,&#xA;    &quot;apollo-link-error&quot;: &quot;^1.1.13&quot;,&#xA;    &quot;apollo-link-http&quot;: &quot;^1.5.17&quot;,&#xA;    &quot;graphql&quot;: &quot;^15.5.0&quot;,&#xA;    &quot;graphql-tag&quot;: &quot;^2.11.0&quot;,&#xA;    &quot;react&quot;: &quot;^17.0.1&quot;,&#xA;    &quot;react-dom&quot;: &quot;^17.0.1&quot;,&#xA;    &quot;react-hook&quot;: &quot;^0.0.1&quot;,&#xA;    &quot;react-scripts&quot;: &quot;4.0.3&quot;,&#xA;    &quot;web-vitals&quot;: &quot;^1.0.1&quot;&#xA;  },&#xA;  &quot;scripts&quot;: {&#xA;    &quot;start&quot;: &quot;react-scripts start&quot;,&#xA;    &quot;build&quot;: &quot;react-scripts build&quot;,&#xA;    &quot;test&quot;: &quot;react-scripts test&quot;,&#xA;    &quot;eject&quot;: &quot;react-scripts eject&quot;&#xA;  },&#xA;  &quot;browserslist&quot;: {&#xA;    &quot;production&quot;: [&#xA;      &quot;&gt;0.2%&quot;,&#xA;      &quot;not dead&quot;,&#xA;      &quot;not op_mini all&quot;&#xA;    ],&#xA;    &quot;development&quot;: [&#xA;      &quot;last 1 chrome version&quot;,&#xA;      &quot;last 1 firefox version&quot;,&#xA;      &quot;last 1 safari version&quot;&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",15346222,,15346222,2021-03-19 16:09:23,2022-04-23 11:53:10,"Error: ENOENT: no such file or directory, open",<javascript><reactjs><apollo-client><apollo-boost>,1,3,0,2021-03-19 15:03:26
66724285,2,,66636817,3,,<p>I just had the same issue. I've changed &quot;gatsby-source-contentful&quot; version from 5.1.1 to 4.6.3 and it worked...</p>&#xA;,10331102,,10331102,2021-03-28 13:12:42,2021-03-28 13:12:42,"",,0,2,0,2021-03-20 17:05:40
66751278,1,,,1,191,"<p>my local GraphQL backend throws Internal server errors, when I try to fetch stuff from the DB. The live environment which is identical runs without those errors. In the chrome DevTools under Network GraphQL outputs following debug message when I try to fetch the data from the frontend (ionic):</p>&#xA;<p>debugMessage: &quot;Warning: rename(D:\pathToLocalBackendFolder\var\cache\dev/doctrine/orm/Proxies__CG__AppEntityProperty.php.6058d378460452.39776425,D:\pathToLocalBackendFolder\var\cache\dev/doctrine/orm/Proxies__CG__AppEntityProperty.php): Zugriff verweigert (code: 5)&quot;</p>&#xA;<p>&quot;Zugriff verweigert&quot; translates to &quot;Access denied&quot;</p>&#xA;<p>The backend is Symfony 5.1. And I run a local apache server with Wampserver64 under <strong>Windows10 Pro</strong>.&#xA;The apache hosts my backend with SSL (wasn't easy to setup) but the problem persists also when I create a virtualhost without SSL.&#xA;It does seem to fetch all the data anyways but I would like to fix those error messages anyways, because later on it could stab me in the back.</p>&#xA;<p>What I tried so far to resolve it:</p>&#xA;<ul>&#xA;<li>Write <em>umask(0000);</em> in the beginning of bin/console and public/index.php</li>&#xA;<li>Run the wampapache64 and wampmysqld64 services as a local admin user (tested the renaming functionality of the specific files by logging in as that user. So the user I let the services run from has all the necessary permissions. Also I double checked by echoing 'whoami' from within GraphQL. It was the correct user I specified before.)</li>&#xA;<li>Gave the var/cache folder and all subfolder and all subfiles full permission (via chmod command and also via Windows folder properties)</li>&#xA;<li>Cleared the cache (var/cache) of symfony a couple of times. Sometimes with php bin/console cache:clear or even by deleting tha content manually</li>&#xA;<li>I did try everything I could from that link: <a href=""https://symfony.com/doc/current/setup/file_permissions.html"" rel=""nofollow noreferrer"">https://symfony.com/doc/current/setup/file_permissions.html</a></li>&#xA;<li>And I also checked out this link and try to apply it: <a href=""https://symfony.com/doc/current/setup/web_server_configuration.html"" rel=""nofollow noreferrer"">https://symfony.com/doc/current/setup/web_server_configuration.html</a></li>&#xA;</ul>&#xA;<p>What can I try next?</p>&#xA;",4615422,,472495,2021-03-22 21:46:59,2021-03-22 21:46:59,GraphQL - Warning: rename .....access denied,<php><apache><symfony><graphql><windows-10>,0,3,0,2021-03-22 17:48:04
66766428,2,,66640541,0,,<p>You have likely found a bug! Please open an issue on the GitHub repo so we can track it. :)</p>&#xA;,1208488,,,,2021-03-23 15:38:07,"",,0,0,0,2021-03-23 15:38:07
66766909,1,,,0,548,"<p>I'm facing an issue with Nuxt.js and Apollo not updating my page's content with the latest from my API source. The server gets 'stuck' on the version when it was started, unless I restart the server the data doesn't get updated. I've searched on Github for any similar issues or even here and couldn't find anything.</p>&#xA;<p>I'm using <code>&quot;@nuxtjs/apollo&quot;: &quot;^4.0.1-rc.5&quot;</code> with <code>&quot;nuxt&quot;: &quot;^2.14.12&quot;</code>.</p>&#xA;<p>When using <code>nuxt dev</code> mode I have no issues, my page data is correctly fetched, and if I change some of its data on my API and then reload the page, the data gets updated.</p>&#xA;<p>Nuxt is set to target the server, so it's not building static files.</p>&#xA;<p>When I'm in SSR with <code>nuxt build &amp;&amp; nuxt start</code> I have the page displays the right data initially, so SSR seems to work. However, if I edit my API's data and then reload the page I don't get the page content updated but rather the version I had when I ran <code>nuxt start</code>.</p>&#xA;<p>If I stop and restart the application and then reload the page, I have the right updated data show up. I feel like this might be a caching-related issue.</p>&#xA;<p>Here's my apollo config that gets loaded into Nuxt:</p>&#xA;<pre><code>import { InMemoryCache, IntrospectionFragmentMatcher } from 'apollo-cache-inmemory'&#xA;import introspectionQueryResultData from './graphql.schema.json'&#xA;&#xA;const fragmentMatcher = new IntrospectionFragmentMatcher({&#xA;  introspectionQueryResultData&#xA;})&#xA;&#xA;const cache = InMemoryCache({ fragmentMatcher })&#xA;&#xA;export default function (ctx) {&#xA;  return {&#xA;    httpEndpoint: MY_ENDPOINT,&#xA;    cache&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I need the Fragment Matcher in order to use GraphQL fragments and generate the types with codegen, my code base is in Typescript. This works like a charm in dev mode but might be the reason why it doesn't work in SSR even though I couldn't find why.</p>&#xA;<p>On my Vue component to render my page here's a sample configuration:</p>&#xA;<pre><code>apollo: {&#xA;  page: {&#xA;    prefetch: true,&#xA;    query: queryPage, // imported GraphQL query with .gql file&#xA;    variables() {&#xA;      return {&#xA;        id: 2&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I do not understand why my server isn't refetching the data after being started. I tried to debug without success in the Nuxt generated server files.</p>&#xA;<p>How can I get my page to fetch the data when loaded, without having to restart the application after each update on my API's content?</p>&#xA;",6043755,,,,2021-03-24 17:59:20,Nuxt.js Server Side Rendering: Data doesn't get updated after starting the server,<nuxt.js><apollo><server-side-rendering>,1,0,0,2021-03-23 16:05:59
66780929,2,,66466099,0,,<p>It seems that in your rake task you've specified the api version &quot;2020-01&quot; but in your initializer you are specifying a different version.</p>&#xA;,956677,,,,2021-03-24 12:21:00,"",,0,0,0,2021-03-24 12:21:00
66782662,1,,,1,83,"<p>I'm trying Neo4j GraphQL Architect graph app for the first time (v0.0.26)</p>&#xA;<p>I successfully installed it to Neo4j Desktop 1.4.3 (on Mac 10.15)</p>&#xA;<p>When I open it against my operational remote db, I get a dialog that says:</p>&#xA;<blockquote>&#xA;<p>Error 0! Boolean cannot represent a non boolean value: &quot;true&quot;</p>&#xA;<p>Error 1! Boolean cannot represent a non boolean value: &quot;true&quot;</p>&#xA;</blockquote>&#xA;<p>Any advice?</p>&#xA;",1756989,,1756989,2021-03-24 14:08:16,2021-06-22 07:20:24,Error when launching GraphQL Architect against remote neo4j,<neo4j><graphql>,0,1,0,2021-03-24 13:59:32
66786720,2,,66766909,0,,<p>For anyone facing a similar issue. Downgrading to <code>&quot;@nuxtjs/apollo&quot;: &quot;4.0.1-rc.1&quot;</code> works.</p>&#xA;,6043755,,,,2021-03-24 17:59:20,"",,0,0,0,2021-03-24 17:59:20
66829410,2,,66636817,1,,"<p>Which version of Gatsby you are using? Gatsby-source-contentful 5 seems to require Gatsby 3. I got a warning in that regard before the error.</p>&#xA;<p>I guess this has to do with Graphql version differences. See this: <a href=""https://www.gatsbyjs.com/docs/reference/release-notes/v3.0/#graphql-15"" rel=""nofollow noreferrer"">https://www.gatsbyjs.com/docs/reference/release-notes/v3.0/#graphql-15</a></p>&#xA;",15407653,,,,2021-03-27 08:33:40,"",,0,0,0,2021-03-27 08:33:40
66843124,2,,57691091,0,,"<p>The problem may lie in your GraphQL Dockerfile.  Do you also need an EXPOSE in here, e.g.:</p>&#xA;<pre><code>EXPOSE 3001&#xA;</code></pre>&#xA;<p>According to the <a href=""https://docs.docker.com/engine/reference/builder/#expose"" rel=""nofollow noreferrer"">documentation</a>:</p>&#xA;<blockquote>&#xA;<p>The EXPOSE instruction informs Docker that the container listens on&#xA;the specified network ports at runtime.</p>&#xA;</blockquote>&#xA;<p>EDIT: Apologies.  According to the docs, the <em>-p</em> flag overrides these settings at runtime, so actually unlikely to make much difference.</p>&#xA;",6333825,,,,2021-03-28 15:33:27,"",,0,0,0,2021-03-28 15:33:27
66858272,2,,59984648,0,,"<p>Just tested and Vetur didn't complain, could have been a bug that is already fixed.</p>&#xA;<p>According to graphql-tag package this case is supported (<a href=""https://github.com/apollographql/graphql-tag#importing-queries-by-name"" rel=""nofollow noreferrer"">docs</a>), so if Vetur complains must be an issue with the extension itself.</p>&#xA;",2087198,,,,2021-03-29 16:49:55,"",,0,0,0,2021-03-29 16:49:55
66858832,2,,66858790,2,,"<p><strong>UPDATE</strong></p>&#xA;<p>This question was regarding Apollo Server 2.0. The links have since been changed and Apollo is now on in version 3.0. If you're not dependent on version 2, I suggest updating your dependency to v3. For those of you stuck on this, here's the pattern:</p>&#xA;<pre><code>// The ApolloServer constructor requires two parameters: your schema&#xA;// definition and your set of resolvers.&#xA;const server = new ApolloServer({ typeDefs, resolvers });&#xA;&#xA;// The `listen` method launches a web server.&#xA;server.listen().then(({ url }) =&gt; {&#xA;  console.log(`  Server ready at ${url}`);&#xA;});&#xA;</code></pre>&#xA;<p><a href=""https://www.apollographql.com/docs/apollo-server/getting-started/"" rel=""nofollow noreferrer"">Here's a fresh URL to confirm it in the docs</a></p>&#xA;<p>FWIW, I found it right after I posted the question. This is a deprecated pattern. (Stale link removed)</p>&#xA;",3450914,,3450914,2022-01-27 13:42:21,2022-01-27 13:42:21,"",,0,2,0,2021-03-29 17:28:31
66895281,2,,66894641,1,,"<p>Have you tried to install corsheaders? or are you sure you have this function</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>function getCookie(name) {&#xA;            var cookieValue = null;&#xA;            if (document.cookie &amp;&amp; document.cookie !== '') {&#xA;                var cookies = document.cookie.split(';');&#xA;                for (var i = 0; i &lt; cookies.length; i++) {&#xA;                    var cookie = cookies[i].trim();&#xA;                    // Does this cookie string begin with the name we want?&#xA;                    if (cookie.substring(0, name.length + 1) === (name + '=')) {&#xA;                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));&#xA;                        break;&#xA;                    }&#xA;                }&#xA;            }&#xA;            return cookieValue;&#xA;        }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",14444273,,,,2021-03-31 21:03:52,"",,0,1,0,2021-03-31 21:03:52
66898696,2,,66287582,5,,<p>I solved it by adding gql_build in pubspec.yaml dependencies.</p>&#xA;<pre><code>dependencies:&#xA;  ferry:&#xA;  gql_http_link:&#xA;  get: ^4.1.1&#xA;  get_storage: ^2.0.1&#xA;  get_it:&#xA;  gql_build: ^0.1.4+2&#xA;&#xA;dependency_overrides:&#xA;  analyzer: ^0.41.2`&#xA;</code></pre>&#xA;,14260268,,14260268,2021-04-01 05:09:00,2021-04-01 05:09:00,"",,0,0,0,2021-04-01 05:03:47
66913898,1,,,0,101,"<p>In my project which uses Apollo 2, I import <code>react-apollo</code> dependencies like this:&#xA;<code>import { QueryProps } from &quot;react-apollo&quot;</code>.</p>&#xA;<p>Now In Apollo 3, I can't found <code>QueryProps</code> in <code>@apollo/client</code>, I have seen in the <a href=""https://www.apollographql.com/docs/react/development-testing/static-typing/#using-the-name-property"" rel=""nofollow noreferrer"">documentation</a> of apollo with typescript, that <code>QueryProps</code> its imported like this <code>import { NamedProps, QueryProps } from</code>@apollo/react-hoc<code>, If I install</code>@apollo/react-hoc<code>I try to import it my IDE thrown</code>TS2305: Module '&quot;../../../node_modules/@apollo/react-hoc&quot;' has no exported member 'QueryProps'.`.</p>&#xA;<p>So how do i import <code>QueryProps</code> dependency into apollo 3?</p>&#xA;",8582246,,,,2021-05-19 13:41:32,Problem updating reac-apollo dependecies to apollo 3,<apollo><react-apollo>,1,0,0,2021-04-02 02:55:48
66920323,2,,59620803,0,,"<p>I've been dealing with this problem multiple times</p>&#xA;<p>the problem is old graphql-upload more accurately version 8 uses of node open stream function which is deprecated and no longer available in 13.x and older node versions.</p>&#xA;<p>so the solution is you can either use nvm to set your node version to 12 or use resolutions in your package.json file.&#xA;first solution(in your favorite terminal):</p>&#xA;<pre><code>nvm install 12; nvm use 12&#xA;</code></pre>&#xA;<p>second solution(in package.json):</p>&#xA;<pre><code>&quot;resolutions&quot;: {&#xA;    &quot;**/**/fs-capacitor&quot;:&quot;^6.2.0&quot;,&#xA;    &quot;**/graphql-upload&quot;: &quot;^11.0.0&quot;&#xA;  }&#xA;</code></pre>&#xA;<p>also this is a problem I've been dealing with for months and apollo team really doesn't like updating their dependencies I think.</p>&#xA;",12774291,,,,2021-04-02 13:49:58,"",,0,0,0,2021-04-02 13:49:58
66949622,2,,66949174,0,,"<p>There is an <a href=""https://github.com/strapi/gatsby-source-strapi/issues/93"" rel=""nofollow noreferrer"">open bug</a> about this. <a href=""https://github.com/strapi/gatsby-source-strapi/pull/146"" rel=""nofollow noreferrer"">The fix</a> has been merged, however, at the time of writing, it has only been added to an alpha release, so use at your own risk.</p>&#xA;<p>To install the latest alpha version of <code>gatsby-source-strapi</code> with npm, execute:</p>&#xA;<pre><code>npm i gatsby-source-strapi@alpha&#xA;</code></pre>&#xA;<p>This adds the component type to <code>strapi_component</code> in the GraphQL.</p>&#xA;<p>Or as an alternative, you could try <a href=""https://www.gatsbyjs.com/plugins/gatsby-source-rest-api/"" rel=""nofollow noreferrer"">gatsby-source-rest-api</a>, which exposes the component type under <code>_xcomponent</code>.</p>&#xA;",811240,,,,2021-04-05 07:30:29,"",,0,0,0,2021-04-05 07:30:29
66999164,2,,66998762,0,,"<p>Nikolas from Prisma here!</p>&#xA;<p>We have written extensive upgrade documentation that walks you through the upgrade process. Here's some guides you can follow:</p>&#xA;<ol>&#xA;<li><a href=""https://www.prisma.io/docs/guides/upgrade-guides/upgrade-from-prisma-1/how-to-upgrade"" rel=""nofollow noreferrer"">How to upgrade</a>: Provides a general overview and explains different upgrade strategies</li>&#xA;<li><a href=""https://www.prisma.io/docs/guides/upgrade-guides/upgrade-from-prisma-1/upgrading-the-prisma-layer-postgres/"" rel=""nofollow noreferrer"">Upgrading the Prisma layer</a>: Explains how to adjust your database schema using the Prisma Upgrade CLI</li>&#xA;<li><a href=""https://www.prisma.io/docs/guides/upgrade-guides/upgrade-from-prisma-1/upgrading-prisma-binding-to-sdl-first"" rel=""nofollow noreferrer""><code>prisma-binding</code> to SDL-first</a>: Explains how to upgrade your GraphQL schema and resolvers</li>&#xA;</ol>&#xA;<p>Feel free to follow up in case you have any questions along the way, always happy to help :)</p>&#xA;",1779113,,,,2021-04-08 07:27:23,"",,0,1,0,2021-04-08 07:27:23
67042652,1,,,0,449,"<p>I have a react native app that works with Apollo client(grapqhl), the problem is that I have a production API and Apollo client works without any problem but if I change the <code>uri</code> in apollo configuration to <code>localhost:8000/graphql</code>, my IDE console thrown the following error:</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>[Unhandled promise rejection: Error: Network request failed]&#xA;at http://192.166.0.14:19000/node_modules%5Cexpo%5CAppEntry.bundle&#xA;?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:358011:25 in new&#xA; ApolloError&#xA;at node_modules\@apollo\client\core\core.cjs.js:1081:45 in self.ge&#xA;tObservableFromLink.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySu&#xA;bscription&#xA;at http://192.168.0.14:19000/node_modules%5Cexpo%5CAppEntry.bundle&#xA;?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:356825:4 in onNo&#xA;tify&#xA;at node_modules\zen-observable\lib\Observable.js:239:4 in &lt;anonymo&#xA;us&gt;&#xA;at node_modules\@apollo\client\utilities\utilities.cjs.js:946:24 i&#xA;n iterateObserversSafely&#xA;at &lt;anonymous&gt;:null in Array.forEach&#xA;at node_modules\@apollo\client\utilities\utilities.cjs.js:945:4 in&#xA; iterateObserversSafely&#xA;at http://192.168.0.14:19000/node_modules%5Cexpo%5CAppEntry.bundle&#xA;?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:339027:12 in Obj&#xA;ect.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySu&#xA;bscription&#xA;</code></pre>&#xA;<p>I have been able to review some <a href=""https://stackoverflow.com/questions/45455877/react-native-apollo-error-network-error-network-request-failed"">questions</a> to similar problems but I have found two things:</p>&#xA;<ol>&#xA;<li>Questions to similar problems are really old and some things have changed, and more with the release of apollo 3</li>&#xA;<li>The solutions they suggest have not worked such as changing the localhost to the IP of my machine.</li>&#xA;<li>I'm running react native with expo, I have tried running the application in expo go and android studio without any good results.</li>&#xA;</ol>&#xA;<h3>Apollo client configuration</h3>&#xA;<pre class=""lang-js prettyprint-override""><code>import { ApolloClient, InMemoryCache } from '@apollo/client';&#xA;&#xA;const client = new ApolloClient({&#xA;  uri: 'http://localhost:8000/graphql/',&#xA;  cache: new InMemoryCache()&#xA;});&#xA;</code></pre>&#xA;<h2>Environment information</h2>&#xA;<pre class=""lang-sh prettyprint-override""><code>&quot;@apollo/client&quot;: &quot;^3.3.11&quot;&#xA;&quot;react-native&quot;: &quot;https://github.com/expo/react-native/archive/sdk-40.0.1.tar.gz&quot;&#xA;&quot;expo&quot;: &quot;~40.0.0&quot;&#xA;&#xA;windows 10&#xA;</code></pre>&#xA;",8582246,,,,2022-01-20 10:36:17,Apollo client / React native error using localhost,<react-native><apollo><apollo-client>,2,0,0,2021-04-11 07:55:17
67051946,1,,,0,393,"<p>I'm currently working on a MERNG app, and i was doing the setup in the fronted, and, when i ran npm run start, this error suddenly appeared</p>&#xA;<pre><code>Error from chokidar (C:\): Error: EBUSY: resource busy or locked, lstat 'C:\hiberfil.sys'&#xA;Compiling...&#xA;</code></pre>&#xA;<p>i've searched for this problem, and i found that, you should delete node_modules, then run npm intall, i tried, didn't work</p>&#xA;<p>This is my package.json</p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;client&quot;,&#xA;  &quot;version&quot;: &quot;0.1.0&quot;,&#xA;  &quot;private&quot;: true,&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@apollo/client&quot;: &quot;^3.3.14&quot;,&#xA;    &quot;@testing-library/jest-dom&quot;: &quot;^5.11.10&quot;,&#xA;    &quot;@testing-library/react&quot;: &quot;^11.2.6&quot;,&#xA;    &quot;@testing-library/user-event&quot;: &quot;^12.8.3&quot;,&#xA;    &quot;apollo-link-context&quot;: &quot;^1.0.20&quot;,&#xA;    &quot;framer-motion&quot;: &quot;^4.1.3&quot;,&#xA;    &quot;moment&quot;: &quot;^2.29.1&quot;,&#xA;    &quot;react&quot;: &quot;^17.0.2&quot;,&#xA;    &quot;react-dom&quot;: &quot;^17.0.2&quot;,&#xA;    &quot;react-file-base64&quot;: &quot;^1.0.3&quot;,&#xA;    &quot;react-redux&quot;: &quot;^7.2.3&quot;,&#xA;    &quot;react-router-dom&quot;: &quot;^5.2.0&quot;,&#xA;    &quot;react-scripts&quot;: &quot;4.0.3&quot;,&#xA;    &quot;redux&quot;: &quot;^4.0.5&quot;,&#xA;    &quot;styled-components&quot;: &quot;^5.2.3&quot;,&#xA;    &quot;styled-icons&quot;: &quot;^10.33.0&quot;,&#xA;    &quot;web-vitals&quot;: &quot;^1.1.1&quot;&#xA;  },&#xA;  &quot;scripts&quot;: {&#xA;    &quot;start&quot;: &quot;react-scripts start&quot;,&#xA;    &quot;build&quot;: &quot;react-scripts build&quot;,&#xA;    &quot;test&quot;: &quot;react-scripts test&quot;,&#xA;    &quot;eject&quot;: &quot;react-scripts eject&quot;&#xA;  },&#xA;  &quot;eslintConfig&quot;: {&#xA;    &quot;extends&quot;: [&#xA;      &quot;react-app&quot;,&#xA;      &quot;react-app/jest&quot;&#xA;    ]&#xA;  },&#xA;  &quot;browserslist&quot;: {&#xA;    &quot;production&quot;: [&#xA;      &quot;&gt;0.2%&quot;,&#xA;      &quot;not dead&quot;,&#xA;      &quot;not op_mini all&quot;&#xA;    ],&#xA;    &quot;development&quot;: [&#xA;      &quot;last 1 chrome version&quot;,&#xA;      &quot;last 1 firefox version&quot;,&#xA;      &quot;last 1 safari version&quot;&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This is my index, i put there my apolloProvider and my redux setup</p>&#xA;<pre><code>import React from &quot;react&quot;;&#xA;import ReactDOM from &quot;react-dom&quot;;&#xA;import ApolloProvider from &quot;./ApolloProvider&quot;;&#xA;&#xA;import { Provider } from &quot;react-redux&quot;;&#xA;import { createStore } from &quot;redux&quot;;&#xA;import { reducer } from &quot;./reducer&quot;;&#xA;&#xA;const store = createStore(reducer);&#xA;&#xA;ReactDOM.render(&#xA;  &lt;Provider store={store}&gt;{ApolloProvider}&lt;/Provider&gt;,&#xA;  document.getElementById(&quot;root&quot;)&#xA;);&#xA;&#xA;</code></pre>&#xA;<p>This is my apollo provider</p>&#xA;<pre><code>import React from &quot;react&quot;;&#xA;import {&#xA;  ApolloClient,&#xA;  InMemoryCache,&#xA;  ApolloProvider,&#xA;  createHttpLink&#xA;} from &quot;@apollo/client&quot;;&#xA;&#xA;import App from &quot;./App&quot;;&#xA;&#xA;const httpLink = new createHttpLink({&#xA;  uri: &quot;http://localhost:5000&quot;&#xA;});&#xA;&#xA;const client = new ApolloClient({&#xA;  link: httpLink,&#xA;  cache: new InMemoryCache()&#xA;});&#xA;&#xA;export default (&#xA;  &lt;ApolloProvider client={client}&gt;&#xA;    &lt;App /&gt;&#xA;  &lt;/ApolloProvider&gt;&#xA;);&#xA;&#xA;</code></pre>&#xA;<p>What is going on with my react app? i'm mad at this because it came out of nowhere, any clue how to fix this? And thank your four time comunnity !</p>&#xA;",15325388,,,,2021-04-12 02:25:19,"Weird problem in react: (C:\): Error: EBUSY: resource busy or locked, lstat 'C:\hiberfil.sys'",<javascript><reactjs><redux><graphql>,0,3,0,2021-04-12 02:25:19
67053439,1,,,8,717,"<p>So I have built a Next app based on <a href=""https://github.com/vercel/next.js/tree/canary/examples/api-routes-apollo-server-and-client"" rel=""noreferrer"">this</a> NextJS example which means I have GraphQL routes and an Apollo server I use to fetch from the API in the app. The example shows how to fetch in getStaticProps() which works fine for me but I need to implement getServerSideProps() since the content served depends on the URL query and params which are up to 6000 different URLs so I cannot use getStaticPaths(). The code works completely fine in development mode... however when deployed to Vercel, it works in the beginning and sometimes later but shows 504 BAD GATEWAY error on the page like 95% of the time.</p>&#xA;<p>Code for [s]/[v].tsx:<a href=""https://pastecord.com/uwojuzudaw.typescript"" rel=""noreferrer"">https://pastecord.com/uwojuzudaw.typescript</a></p>&#xA;",15228621,,,,2021-04-12 06:15:06,Vercel 504 Bad Gateway Error Page though code works in dev mode,<next.js><apollo><server-side-rendering><vercel><getserversideprops>,0,2,0,2021-04-12 06:15:06
67056340,1,,,0,334,"<p>I deploy next.js project implements apollo graphql server into <em>cloud function whithin firebase</em>.</p>&#xA;<p>On localhost it all works properly. I can open graphql playground on <a href=""http:///api/graphql"" rel=""nofollow noreferrer"">/api/graphql</a> url and execute queries and retrieve responses.</p>&#xA;<p>But when deployed to <strong>firebase</strong> it stops working.</p>&#xA;<p>I can reach qraphql playground on <a href=""https://test-course-d1335.web.app/api/graphql"" rel=""nofollow noreferrer"">https://test-course-d1335.web.app/api/graphql</a></p>&#xA;<p>but it displays message:</p>&#xA;<blockquote>&#xA;<p>Server cannot be reached</p>&#xA;</blockquote>&#xA;<p>and no query can be executed.</p>&#xA;<p><em>Cloud function returns &quot;timeout&quot; in firebase console logs.</em></p>&#xA;<p><strong>code listings:</strong></p>&#xA;<pre><code>https://sealmu.gitbook.io/code-example-firebase-cloud-functions-next-js-apol/&#xA;</code></pre>&#xA;<p><strong>on firebase screenshot:</strong>&#xA;<a href=""https://i.stack.imgur.com/SZgSw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/SZgSw.png"" alt=""enter image description here"" /></a></p>&#xA;<p><strong>localhost screenshot</strong>&#xA;<a href=""https://i.stack.imgur.com/5G35w.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5G35w.png"" alt=""enter image description here"" /></a></p>&#xA;",5872230,,5872230,2021-04-13 07:35:57,2021-04-13 07:35:57,firebase cloud functions hosting for next.js with apollo graphql server,<firebase><graphql><google-cloud-functions><next.js><apollo>,0,9,0,2021-04-12 09:55:33
67167870,2,,67135169,10,,"<p>With SvelteKit the subject of CSR vs. SSR and where data fetching should happen is a bit deeper than with other somewhat &quot;similar&quot; solutions. The bellow guide should help you connect some of the dots, but a couple of things need to be stated first.</p>&#xA;<p>To define a server side route create a file with the <code>.js</code> extension anywhere in the <code>src/routes</code> directory tree. This <code>.js</code> file can have all the import statements required without the JS bundles that they reference being sent to the web browser.</p>&#xA;<p>The <code>@apollo/client</code> is quite huge as it contains the <code>react</code> dependency. Instead, you might wanna consider importing just the <code>@apollo/client/core</code> even if you're setting up the Apollo Client to be used only on the server side, as the demo bellow shows. The <code>@apollo/client</code> is not an ESM package. Notice how it's imported bellow in order for the project to build with the node adapter successfully.</p>&#xA;<p>Try going though the following steps.</p>&#xA;<ol>&#xA;<li>Create a new SvelteKit app and choose the 'SvelteKit demo app' in the first step of the SvelteKit setup wizard. Answer the &quot;Use TypeScript?&quot; question with <code>N</code> as well as all of the questions afterwards.</li>&#xA;</ol>&#xA;<pre class=""lang-sh prettyprint-override""><code>npm init svelte@next demo-app&#xA;cd demo-app&#xA;</code></pre>&#xA;<ol start=""2"">&#xA;<li>Modify the <code>package.json</code> accordingly. Optionally check for all packages updates with <code>npx npm-check-updates -u</code></li>&#xA;</ol>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    &quot;name&quot;: &quot;demo-app&quot;,&#xA;    &quot;version&quot;: &quot;0.0.1&quot;,&#xA;    &quot;scripts&quot;: {&#xA;        &quot;dev&quot;: &quot;svelte-kit dev&quot;,&#xA;        &quot;build&quot;: &quot;svelte-kit build --verbose&quot;,&#xA;        &quot;preview&quot;: &quot;svelte-kit preview&quot;&#xA;    },&#xA;    &quot;devDependencies&quot;: {&#xA;        &quot;@apollo/client&quot;: &quot;^3.3.15&quot;,&#xA;        &quot;@sveltejs/adapter-node&quot;: &quot;next&quot;,&#xA;        &quot;@sveltejs/kit&quot;: &quot;next&quot;,&#xA;        &quot;graphql&quot;: &quot;^15.5.0&quot;,&#xA;        &quot;node-fetch&quot;: &quot;^2.6.1&quot;,&#xA;        &quot;svelte&quot;: &quot;^3.37.0&quot;&#xA;    },&#xA;    &quot;type&quot;: &quot;module&quot;,&#xA;    &quot;dependencies&quot;: {&#xA;        &quot;@fontsource/fira-mono&quot;: &quot;^4.2.2&quot;,&#xA;        &quot;@lukeed/uuid&quot;: &quot;^2.0.0&quot;,&#xA;        &quot;cookie&quot;: &quot;^0.4.1&quot;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<ol start=""3"">&#xA;<li>Modify the <code>svelte.config.js</code> accordingly.</li>&#xA;</ol>&#xA;<pre class=""lang-js prettyprint-override""><code>import node from '@sveltejs/adapter-node';&#xA;&#xA;export default {&#xA;    kit: {&#xA;        // By default, `npm run build` will create a standard Node app.&#xA;        // You can create optimized builds for different platforms by&#xA;        // specifying a different adapter&#xA;        adapter: node(),&#xA;&#xA;        // hydrate the &lt;div id=&quot;svelte&quot;&gt; element in src/app.html&#xA;        target: '#svelte'&#xA;    }&#xA;};&#xA;</code></pre>&#xA;<ol start=""4"">&#xA;<li>Create the <code>src/lib/Client.js</code> file with the following contents. This is the Apollo Client setup file.</li>&#xA;</ol>&#xA;<pre class=""lang-js prettyprint-override""><code>import fetch from 'node-fetch';&#xA;import { ApolloClient, HttpLink } from '@apollo/client/core/core.cjs.js';&#xA;import { InMemoryCache } from '@apollo/client/cache/cache.cjs.js';&#xA;&#xA;class Client {&#xA;    constructor() {&#xA;        if (Client._instance) {&#xA;            return Client._instance&#xA;        }&#xA;        Client._instance = this;&#xA;&#xA;        this.client = this.setupClient();&#xA;    }&#xA;&#xA;    setupClient() {&#xA;        const link = new HttpLink({&#xA;            uri: 'http://localhost:4000/graphql',&#xA;            fetch&#xA;        });&#xA;&#xA;        const client = new ApolloClient({&#xA;            link,&#xA;            cache: new InMemoryCache()&#xA;        });&#xA;        return client;&#xA;    }&#xA;}&#xA;&#xA;export const client = (new Client()).client;&#xA;&#xA;</code></pre>&#xA;<ol start=""5"">&#xA;<li>Create the <code>src/routes/qry/test.js</code> with the following contents. This is the server side route. In case the graphql schema doesn't have the <code>double</code> function specify different query, input(s) and output.</li>&#xA;</ol>&#xA;<pre class=""lang-js prettyprint-override""><code>import { client } from '$lib/Client.js';&#xA;import { gql } from '@apollo/client/core/core.cjs.js';&#xA;&#xA;export const post = async request =&gt; {&#xA;    const { num } = request.body;&#xA;&#xA;    try {&#xA;        const query = gql`&#xA;            query Doubled($x: Int) {&#xA;                double(number: $x)&#xA;            }&#xA;        `;&#xA;        const result = await client.query({&#xA;            query,&#xA;            variables: { x: num }&#xA;        });&#xA;&#xA;        return {&#xA;            status: 200,&#xA;            body: {&#xA;                nodes: result.data.double&#xA;            }&#xA;        }&#xA;    } catch (err) {&#xA;        return {&#xA;            status: 500,&#xA;            error: 'Error retrieving data'&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;</code></pre>&#xA;<ol start=""6"">&#xA;<li>Add the following to the <code>load</code> function of <code>routes/todos/index.svelte</code> file within <code>&lt;script context=&quot;module&quot;&gt;...&lt;/script&gt;</code> tag.</li>&#xA;</ol>&#xA;<pre class=""lang-js prettyprint-override""><code>    try {&#xA;        const res = await fetch('/qry/test', {&#xA;            method: 'POST',&#xA;            credentials: 'same-origin',&#xA;            headers: {&#xA;                'Content-Type': 'application/json'&#xA;            },&#xA;            body: JSON.stringify({&#xA;                num: 19&#xA;            })&#xA;        });&#xA;        const data = await res.json();&#xA;        console.log(data);&#xA;    } catch (err) {&#xA;        console.error(err);&#xA;    }&#xA;</code></pre>&#xA;<ol start=""7"">&#xA;<li>Finally execute <code>npm install</code> and <code>npm run dev</code> commands. Load the site in your web browser and see the server side route being queried from the client whenever you hover over the <code>TODOS</code> link on the navbar. In the console's network tab notice how much quicker is the response from the <code>test</code> route on every second and subsequent request thanks to the Apollo <code>client</code> instance being a singleton.</li>&#xA;</ol>&#xA;",14512005,,14512005,2021-06-08 18:39:05,2021-06-08 18:39:05,"",,0,1,0,2021-04-19 18:59:04
67187051,2,,67125011,14,,<p>I took this one and I've resolved it.&#xA;Change version for &quot;github.com/vektah/gqlparser/v2&quot; in your go.mod file.&#xA;From:</p>&#xA;<pre><code>go 1.16&#xA;require (&#xA;    github.com/99designs/gqlgen v0.13.0&#xA;    github.com/vektah/gqlparser/v2 v2.2.0&#xA;)&#xA;</code></pre>&#xA;<p>To:</p>&#xA;<pre><code>github.com/vektah/gqlparser/v2 v2.1.0&#xA;</code></pre>&#xA;<p>Delete <strong>prelude.resolvers.go</strong> after that.</p>&#xA;,15710895,,,,2021-04-20 22:26:37,"",,0,1,0,2021-04-20 22:26:37
67203978,2,,65708640,0,,"<p>I have just run into a similar issue using <code>@apollo/client</code>, and funny enough it's also related to an address model.  My second fragment seems to be completely disregarded and not merged.  I wrote up a <code>foobar</code> code sample below:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type Request = {&#xA;  id: string&#xA;  stops: Array&lt;Stop&gt;&#xA;}&#xA;&#xA;type Stop = {&#xA;  id: string;&#xA;  address: Address;&#xA;}&#xA;&#xA;type Address = {&#xA;  id: string;&#xA;  address1: string;&#xA;  name: string;&#xA;}&#xA;&#xA;const ROOT_FRAGMENT = gql`&#xA;  fragment foo_Request on Request {&#xA;    id&#xA;    stops {&#xA;    ...bar_Stop&#xA;    ...qux_Stop&#xA;    }&#xA;    ${STOP_FRAGMENT_1}&#xA;    ${STOP_FRAGMENT_2}&#xA;}&#xA;`;&#xA;&#xA;const STOP_FRAGMENT_1 = gql`&#xA;  fragment bar_Stop on Stop {&#xA;    id&#xA;    address {&#xA;      id&#xA;      address1&#xA;    }&#xA;  }&#xA;}&#xA;`;&#xA;&#xA;const STOP_FRAGMENT_2 = gql`&#xA;  fragment qux_Stop on Stop {&#xA;    id&#xA;    address {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;`;&#xA;&#xA;/*&#xA;&#xA;expected: &#xA;{&#xA;  id: &quot;request-1&quot;&#xA;  stops: [&#xA;    {&#xA;      id: &quot;stop-1&quot;,&#xA;      address: {&#xA;        id: &quot;address-1&quot;,&#xA;        address1: &quot;123 my way&quot;,&#xA;        name: &quot;Home&quot;,&#xA;      },&#xA;    },&#xA;  ],&#xA;}&#xA;&#xA;actual: &#xA;{&#xA;  id: &quot;request-1&quot;&#xA;  stops: [&#xA;    {&#xA;      id: &quot;stop-1&quot;,&#xA;      address: {&#xA;        id: &quot;address-1&quot;,&#xA;        address1: &quot;123 my way&quot;,&#xA;      },&#xA;    },&#xA;  ],&#xA;}&#xA;&#xA;*/&#xA;&#xA;</code></pre>&#xA;",15727749,,,,2021-04-21 21:55:32,"",,0,1,0,2021-04-21 21:55:32
67299717,2,,67289495,1,,"<p>I found the solution, it was returning no error cause it was NextJs fault. Next js returns undefined on env variables in runtime, to solve this issue just config public runtime in the next.config.js file</p>&#xA;",15541901,,,,2021-04-28 11:52:26,"",,0,0,0,2021-04-28 11:52:26
67339566,1,,,1,112,"<p>I'm fetching a graphql query using jsfiddle to return information about a collection of tokens, along with their names, symbols, ids etc</p>&#xA;<p>Here is the <a href=""https://jsfiddle.net/bentham7246/ydjtvha9/37/"" rel=""nofollow noreferrer"">fiddle</a></p>&#xA;<pre><code> var WalletAddress = &quot;0x980c55E501D2fAd60b5702e2FD88232137e12145&quot;&#xA; var query = `&#xA;  query (&#xA;    $WalletAddress: String!&#xA;) {&#xA;  ethereum(network: bsc) {&#xA;    address(address: {is: $WalletAddress}) {&#xA;      address&#xA;      balances {&#xA;        currency {&#xA;          address&#xA;          decimals&#xA;          name&#xA;          symbol&#xA;        }&#xA;       # value&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;&#xA;      `&#xA; &#xA; &#xA; &#xA; fetch('https://graphql.bitquery.io/', {&#xA;  method: 'POST',&#xA;  headers: {&#xA;    'Content-Type': 'application/json',&#xA;    'Accept': 'application/json',&#xA;    'X-API-KEY': 'BQY1NlSY2ovBeovybKJ07zdWmtDC5cny'&#xA;  },&#xA;  body: JSON.stringify({&#xA;    query,&#xA;    variables: { WalletAddress },&#xA;  }),&#xA;})&#xA;  .then((res) =&gt; res.json())&#xA;  &#xA;  .then((result) =&gt;alert(JSON.stringify(result)))&#xA;  &#xA;  &#xA;</code></pre>&#xA;<p>I need to format this response into a list of the &quot;address&quot; fields,  so something like:</p>&#xA;<p>0x2a9718deff471f3bb91fa0eceab14154f150a385,&#xA;0xad90c05bc51672eedfee36e58b3ff1a78bbc146d,&#xA;0x33a3d962955a3862c8093d1273344719f03ca17c</p>&#xA;<p>Is this something that can be configured within the graphql query itself or do we need do this after the query has run?</p>&#xA;<p>Any advice on how we can fetch only the Address fields would be much appreciated</p>&#xA;",4214984,,,,2021-04-30 19:37:55,Is it possible to format a graphql fetch result into a readable list?,<javascript><graphql><graphql-js>,0,2,0,2021-04-30 19:37:55
67352379,2,,57180186,0,,"<p>you need use 4.18 version, the rest is the same as the documentation</p>&#xA;",10056538,,,,2021-05-02 02:00:54,"",,0,0,0,2021-05-02 02:00:54
67352797,1,,,-1,72,"<p>this behaviour does not make sense to me anymore.</p>&#xA;<p>My mutation:</p>&#xA;<pre><code>export const DEVICE_CREATE_INPUT = gql`&#xA;    mutation CreateDevice(&#xA;        $attributeList: String&#xA;      ) {&#xA;        createDevice(&#xA;          input: {&#xA;            attributeList: $attributeList&#xA;          }&#xA;        ) {&#xA;          device {&#xA;            id&#xA;            _id&#xA;          }&#xA;        }&#xA;      }&#xA;`;&#xA;</code></pre>&#xA;<p>My typescript code:</p>&#xA;<pre><code>private createDeviceRequest(&#xA;    attributeList: string,&#xA;  ) {&#xA;    return this.apollo.mutate({&#xA;      mutation: DEVICE_CREATE_INPUT,&#xA;      variables: {&#xA;        attributeList&#xA;      }&#xA;    });&#xA;  }&#xA;</code></pre>&#xA;<p>When I try to send the mutation (attributeList = &quot;&quot;) it gives me following error message:</p>&#xA;<pre><code>zone-evergreen.js:659 Unhandled Promise rejection: Variable &quot;$attributeList&quot; of type &quot;String&quot; used in position expecting type &quot;Iterable!&quot;. ; Zone: &lt;root&gt; ; Task: Promise.then ; Value: Error: Variable &quot;$attributeList&quot; of type &quot;String&quot; used in position expecting type &quot;Iterable!&quot;.&#xA;    at new ApolloError (index.js:26)&#xA;    at Object.next (QueryManager.js:88)&#xA;    at notifySubscription (Observable.js:135)&#xA;    at onNotify (Observable.js:179)&#xA;    at SubscriptionObserver.next (Observable.js:235)&#xA;    at iteration.js:4&#xA;    at Array.forEach (&lt;anonymous&gt;)&#xA;    at iterateObserversSafely (iteration.js:4)&#xA;    at Object.next (Concast.js:25)&#xA;    at notifySubscription (Observable.js:135) Error: Variable &quot;$attributeList&quot; of type &quot;String&quot; used in position expecting type &quot;Iterable!&quot;.&#xA;    at new ApolloError (http://localhost:8100/vendor.js:62615:28)&#xA;    at Object.next (http://localhost:8100/vendor.js:152614:53)&#xA;    at notifySubscription (http://localhost:8100/vendor.js:136374:18)&#xA;    at onNotify (http://localhost:8100/vendor.js:136418:3)&#xA;    at SubscriptionObserver.next (http://localhost:8100/vendor.js:136474:7)&#xA;    at http://localhost:8100/vendor.js:1059:68&#xA;    at Array.forEach (&lt;anonymous&gt;)&#xA;    at iterateObserversSafely (http://localhost:8100/vendor.js:1059:25)&#xA;    at Object.next (http://localhost:8100/vendor.js:70868:97)&#xA;    at notifySubscription (http://localhost:8100/vendor.js:136374:18)&#xA;</code></pre>&#xA;<p>I did use the type 'Iterable!' at some point, but I wanted to switch to string and changed it everywhere in the frontend where I could find it. If I do a full search now in my frontend code for 'Iterable' I find nothing anymore. Is this a cache problem?</p>&#xA;",4615422,,,,2021-05-02 04:53:24,GraphQL type of mutation variable somehow never changes,<types><graphql><apollo><scalar>,1,0,0,2021-05-02 03:42:49
67373085,2,,36691554,3,,"<ol>&#xA;<li><p>go to the relevant web page and open &quot;inspect&quot; (by write click -&gt;&#xA;inspect || Ctrl+Shift+I in chrome)</p>&#xA;</li>&#xA;<li><p>go to the network tab and copy the cURL command&#xA;<a href=""https://i.stack.imgur.com/7jMve.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7jMve.png"" alt=""enter image description here"" /></a></p>&#xA;</li>&#xA;<li><p>open the postman ,then import -&gt; raw text</p>&#xA;</li>&#xA;<li><p>paste the copied command&#xA;<a href=""https://i.stack.imgur.com/i22cL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/i22cL.png"" alt=""enter image description here"" /></a></p>&#xA;</li>&#xA;<li><p>then,continue -&gt;</p>&#xA;</li>&#xA;</ol>&#xA;<p><a href=""https://i.stack.imgur.com/Pftr6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Pftr6.png"" alt=""enter image description here"" /></a></p>&#xA;",8520923,,,,2021-05-03 17:18:14,"",,0,2,0,2021-05-03 17:18:14
67396140,1,,,0,278,<p>Is it possible to use the CluedIn GraphQL endpoint to extract data out of CluedIn and export it to targets like PowerBI</p>&#xA;,94167,,,,2021-05-06 11:18:12,Can I use GraphQL to extract data directly from CluedIn to PowerBI?,<graphql><cluedin>,1,0,0,2021-05-05 06:26:53
67396987,2,,64969023,0,,<p>you can use nvm use  to switch to a higher version of node. in my case i switch to 14.16. so just do nvm use 14.16 if you have it installed. You should install a higher version later than 10.0.0</p>&#xA;,8692254,,,,2021-05-05 07:37:43,"",,0,0,0,2021-05-05 07:37:43
67449655,2,,67449286,0,,"<p>Ok it seems that I managed identify the problem which is Apollo hook <code>useQuery</code>. Since 2019 developers complains on this issue and now it seems that Apollo team will finally resolve it. According to this post: <a href=""https://github.com/apollographql/apollo-client/issues/7404#issuecomment-776142370"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client/issues/7404#issuecomment-776142370</a> -&#xA;They will silent the warning. Bravo Apollo team!</p>&#xA;",6551189,,,,2021-05-08 16:14:18,"",,0,0,0,2021-05-08 16:14:18
67483578,1,,,0,238,"<p>According to the Apollo graphql site as they mentioned,</p>&#xA;<blockquote>&#xA;<p>Apollo Server's built-in support for file uploads relies on an old version of the graphql-upload npm package for backward compatibility. This old version is not fully compatible with Node 14.</p>&#xA;</blockquote>&#xA;<p>due to that reason, I disable built-in support by passing uploads: false to the ApolloServer constructor. You can then install and use the lastest version of graphql-upload directly as follow,</p>&#xA;<pre><code>const server = new ApolloServer({&#xA;  typeDefs: gql`&#xA;  &#xA;    scalar Upload&#xA;  &#xA;    // here other typedefs&#xA;  `,&#xA;  resolvers: {&#xA;    Upload: GraphQLUpload,&#xA;    Query: {&#xA;      hello: () =&gt; &quot;Hey!&quot;&#xA;    },&#xA;    Mutation: {&#xA;&#xA;      singleUpload: s3Uploader.singleFileUploadResolver.bind(s3Uploader),&#xA;      multipleUpload: s3Uploader.multipleUploadsResolver.bind(s3Uploader)&#xA;    }&#xA;  },&#xA;  uploads:false,&#xA;});&#xA;</code></pre>&#xA;<p>but in that case I got following error when try to upload image as in the below image&#xA;<a href=""https://i.stack.imgur.com/Knag9.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Knag9.png"" alt=""enter image description here"" /></a>&#xA;when it inspect through network that there is a response as above which is,</p>&#xA;<blockquote>&#xA;<p>POST body missing. Did you forget use body-parser middleware?</p>&#xA;</blockquote>&#xA;<p>I tried many ways to solve this issue and you can follow following link to get full code base <a href=""https://codesandbox.io/s/laughing-sunset-uki24"" rel=""nofollow noreferrer"">code base</a></p>&#xA;<p><strong>If remove upload: false and scalar type from apollo constructor and try to run it will only work for node 12 not for node 14</strong></p>&#xA;",11384572,,11384572,2021-05-12 06:03:34,2021-05-12 06:03:34,Apollo grapgql error on image upload on node 14,<node.js><graphql><apollo>,0,2,0,2021-05-11 08:58:01
67505868,1,,,0,437,"<p>i am triying to connect MongoDB with the NextJS API route Apollo example:</p>&#xA;<p><a href=""https://github.com/vercel/next.js/blob/canary/examples/api-routes-apollo-server-and-client"" rel=""nofollow noreferrer"">https://github.com/vercel/next.js/blob/canary/examples/api-routes-apollo-server-and-client</a></p>&#xA;<p>I cannot find any official doc. So i follow this topic:&#xA;<a href=""https://stackoverflow.com/questions/60459747/connect-apollo-with-mongodb"">Connect Apollo with mongodb</a>&#xA;The idea is to connect Mongodb from the context of ApolloServer</p>&#xA;<p>pages/api/graphql.js</p>&#xA;<pre><code>import { ApolloServer } from 'apollo-server-micro';&#xA;import { schema } from '../../apollo/schema';&#xA;import { connectToDatabase } from '../../utils/mongodb';&#xA;&#xA;const apolloServer = new ApolloServer({&#xA;  schema,&#xA;  context: async () =&gt; {&#xA;    const { db } = await connectToDatabase();&#xA;    return { db };&#xA;  },&#xA;});&#xA;&#xA;export const config = {&#xA;  api: {&#xA;    bodyParser: false,&#xA;  },&#xA;};&#xA;&#xA;export default apolloServer.createHandler({ path: '/api/graphql' });&#xA;</code></pre>&#xA;<p>the &quot;connectToDatabase&quot; is coming from the example &quot;with-mongo&quot;&#xA;<a href=""https://github.com/vercel/next.js/blob/canary/examples/with-mongodb/util/mongodb.js"" rel=""nofollow noreferrer"">https://github.com/vercel/next.js/blob/canary/examples/with-mongodb/util/mongodb.js</a></p>&#xA;<p>There is 3 ways of rendering pages in NextJS. When i connect my db like so (inside the ApolloServer context) it works just fine with the client side rendering but not at all with the Static and Server Side Rendering. The context inside my resolver function is undefined.</p>&#xA;<p>apollo/resolvers.js</p>&#xA;<pre><code>export const resolvers = {&#xA;  Query: {&#xA;&#xA;    async getAllCards(_parent, _args, _context, _info) {&#xA;      console.log('_context resolver :&gt;&gt; ', _context);&#xA;&#xA;      const res = await _context.db.db&#xA;        .collection('cards')&#xA;        .find({})&#xA;        .limit(20)&#xA;        .toArray();&#xA;&#xA;      console.log('res :&gt;&gt; ', res);&#xA;&#xA;      return res;&#xA;    },&#xA;  },&#xA;};&#xA;</code></pre>&#xA;<p>At that point i tried to follow this topic&#xA;<a href=""https://stackoverflow.com/questions/64537328/next-js-graphql-context-is-empty-on-ssr-getserversideprops"">Next.js graphql context is empty {} on SSR getServerSideProps</a></p>&#xA;<p>Following thoses steps i am ending with 2 files modified:</p>&#xA;<p>pages/api/graphql</p>&#xA;<pre><code>import { ApolloServer } from 'apollo-server-micro';&#xA;import { schema } from '../../apollo/schema';&#xA;import { connectToDatabase } from '../../utils/mongodb';&#xA;&#xA;async function contextResolver(ctx) {&#xA;  ctx.db = await connectToDatabase();&#xA;&#xA;  return ctx;&#xA;}&#xA;&#xA;const apolloServer = new ApolloServer({&#xA;  schema,&#xA;  context: contextResolver,&#xA;});&#xA;&#xA;export const config = {&#xA;  api: {&#xA;    bodyParser: false,&#xA;  },&#xA;};&#xA;&#xA;export default apolloServer.createHandler({ path: '/api/graphql' });&#xA;&#xA;</code></pre>&#xA;<p>and</p>&#xA;<p>pages/explore_SSR.js</p>&#xA;<pre><code>import gql from 'graphql-tag';&#xA;import Link from 'next/link';&#xA;import { initializeApollo } from '../apollo/client';&#xA;import { connectToDatabase } from '../utils/mongodb';&#xA;&#xA;&#xA;const Explore = () =&gt; {&#xA; &#xA;return (&#xA; // UI Stuff&#xA; )&#xA;}&#xA;&#xA;export async function getServerSideProps(ctx) {&#xA;  console.log('ctx :&gt;&gt; ', ctx);&#xA;  async function contextResolver(ctx) {&#xA;    ctx.db = await connectToDatabase();&#xA;    return ctx;&#xA;  }&#xA;  await contextResolver(ctx);&#xA;  console.log('ctx after :&gt;&gt; ', ctx);&#xA;&#xA;  const apolloClient = initializeApollo(null, ctx);&#xA;&#xA;  await apolloClient.query({&#xA;    query: gql`&#xA;      query GetAllMementoQuery {&#xA;        getAllMemento {&#xA;          title&#xA;        }&#xA;      }&#xA;    `,&#xA;  });&#xA;&#xA;  return {&#xA;    props: {&#xA;      props: { initialApolloState: apolloClient.cache.extract() },&#xA;    },&#xA;  };&#xA;}&#xA;&#xA;export default Explore;&#xA;</code></pre>&#xA;<p>result of the console.log: console.log('ctx after :&gt;&gt; ', ctx);</p>&#xA;<pre><code>ctx after :&gt;&gt;  {&#xA;  req: IncomingMessage {&#xA;    _readableState: ReadableState {&#xA;      objectMode: false,&#xA;      highWaterMark: 16384,&#xA;      buffer: BufferList { head: null, tail: null, length: 0 },&#xA;      length: 0,&#xA;      pipes: [],&#xA;      flowing: null,&#xA;      ended: true,&#xA;      endEmitted: false,&#xA;      reading: false,&#xA;      sync: true,&#xA;      needReadable: false,&#xA;      emittedReadable: false,&#xA;      readableListening: false,&#xA;      resumeScheduled: false,&#xA;      errorEmitted: false,&#xA;      emitClose: true,&#xA;      autoDestroy: false,&#xA;      destroyed: false,&#xA;      errored: null,&#xA;      closed: false,&#xA;      closeEmitted: false,&#xA;      defaultEncoding: 'utf8',&#xA;      awaitDrainWriters: null,&#xA;      multiAwaitDrain: false,&#xA;      readingMore: true,&#xA;      decoder: null,&#xA;      encoding: null,&#xA;      [Symbol(kPaused)]: null&#xA;    },&#xA;    _events: [Object: null prototype] { end: [Function: clearRequestTimeout] },&#xA;    _eventsCount: 1,&#xA;    _maxListeners: undefined,&#xA;    socket: Socket {&#xA;      connecting: false,&#xA;      _hadError: false,&#xA;      _parent: null,&#xA;      _host: null,&#xA;      _readableState: [ReadableState],&#xA;      _events: [Object: null prototype],&#xA;      _eventsCount: 8,&#xA;      _maxListeners: undefined,&#xA;      _writableState: [WritableState],&#xA;      allowHalfOpen: true,&#xA;      _sockname: null,&#xA;      _pendingData: null,&#xA;      _pendingEncoding: '',&#xA;      server: [Server],&#xA;      _server: [Server],&#xA;      parser: [HTTPParser],&#xA;      on: [Function: socketListenerWrap],&#xA;      addListener: [Function: socketListenerWrap],&#xA;      prependListener: [Function: socketListenerWrap],&#xA;      _paused: false,&#xA;      _httpMessage: [ServerResponse],&#xA;      timeout: 0,&#xA;      [Symbol(async_id_symbol)]: 285916,&#xA;      [Symbol(kHandle)]: [TCP],&#xA;      [Symbol(kSetNoDelay)]: false,&#xA;      [Symbol(lastWriteQueueSize)]: 0,&#xA;      [Symbol(timeout)]: Timeout {&#xA;        _idleTimeout: -1,&#xA;        _idlePrev: null,&#xA;        _idleNext: null,&#xA;        _idleStart: 24100466,&#xA;        _onTimeout: null,&#xA;        _timerArgs: undefined,&#xA;        _repeat: null,&#xA;        _destroyed: true,&#xA;        [Symbol(refed)]: false,&#xA;        [Symbol(kHasPrimitive)]: false,&#xA;        [Symbol(asyncId)]: 290206,&#xA;        [Symbol(triggerId)]: 290203&#xA;      },&#xA;      [Symbol(kBuffer)]: null,&#xA;      [Symbol(kBufferCb)]: null,&#xA;      [Symbol(kBufferGen)]: null,&#xA;      [Symbol(kCapture)]: false,&#xA;      [Symbol(kBytesRead)]: 0,&#xA;      [Symbol(kBytesWritten)]: 0,&#xA;      [Symbol(RequestTimeout)]: undefined&#xA;    },&#xA;    httpVersionMajor: 1,&#xA;    httpVersionMinor: 1,&#xA;    httpVersion: '1.1',&#xA;    complete: true,&#xA;    headers: {&#xA;      host: 'localhost:3000',&#xA;      'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:88.0) Gecko/20100101 Firefox/88.0',&#xA;      accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',&#xA;      'accept-language': 'fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3',&#xA;      'accept-encoding': 'gzip, deflate',&#xA;      referer: 'http://localhost:3000/explore_clientSide',&#xA;      dnt: '1',&#xA;      connection: 'keep-alive',&#xA;      'upgrade-insecure-requests': '1',&#xA;      'sec-gpc': '1'&#xA;    },&#xA;    rawHeaders: [&#xA;      'Host',&#xA;      'localhost:3000',&#xA;      'User-Agent',&#xA;      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:88.0) Gecko/20100101 Firefox/88.0',&#xA;      'Accept',&#xA;      'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',&#xA;      'Accept-Language',&#xA;      'fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3',&#xA;      'Accept-Encoding',&#xA;      'gzip, deflate',&#xA;      'Referer',&#xA;      'http://localhost:3000/explore_clientSide',&#xA;      'DNT',&#xA;      '1',&#xA;      'Connection',&#xA;      'keep-alive',&#xA;      'Upgrade-Insecure-Requests',&#xA;      '1',&#xA;      'Sec-GPC',&#xA;      '1'&#xA;    ],&#xA;    trailers: {},&#xA;    rawTrailers: [],&#xA;    aborted: false,&#xA;    upgrade: false,&#xA;    url: '/explore_SSR',&#xA;    method: 'GET',&#xA;    statusCode: null,&#xA;    statusMessage: null,&#xA;    client: Socket {&#xA;      connecting: false,&#xA;      _hadError: false,&#xA;      _parent: null,&#xA;      _host: null,&#xA;      _readableState: [ReadableState],&#xA;      _events: [Object: null prototype],&#xA;      _eventsCount: 8,&#xA;      _maxListeners: undefined,&#xA;      _writableState: [WritableState],&#xA;      allowHalfOpen: true,&#xA;      _sockname: null,&#xA;      _pendingData: null,&#xA;      _pendingEncoding: '',&#xA;      server: [Server],&#xA;      _server: [Server],&#xA;      parser: [HTTPParser],&#xA;      on: [Function: socketListenerWrap],&#xA;      addListener: [Function: socketListenerWrap],&#xA;      prependListener: [Function: socketListenerWrap],&#xA;      _paused: false,&#xA;      _httpMessage: [ServerResponse],&#xA;      timeout: 0,&#xA;      [Symbol(async_id_symbol)]: 285916,&#xA;      [Symbol(kHandle)]: [TCP],&#xA;      [Symbol(kSetNoDelay)]: false,&#xA;      [Symbol(lastWriteQueueSize)]: 0,&#xA;      [Symbol(timeout)]: Timeout {&#xA;        _idleTimeout: -1,&#xA;        _idlePrev: null,&#xA;        _idleNext: null,&#xA;        _idleStart: 24100466,&#xA;        _onTimeout: null,&#xA;        _timerArgs: undefined,&#xA;        _repeat: null,&#xA;        _destroyed: true,&#xA;        [Symbol(refed)]: false,&#xA;        [Symbol(kHasPrimitive)]: false,&#xA;        [Symbol(asyncId)]: 290206,&#xA;        [Symbol(triggerId)]: 290203&#xA;      },&#xA;      [Symbol(kBuffer)]: null,&#xA;      [Symbol(kBufferCb)]: null,&#xA;      [Symbol(kBufferGen)]: null,&#xA;      [Symbol(kCapture)]: false,&#xA;      [Symbol(kBytesRead)]: 0,&#xA;      [Symbol(kBytesWritten)]: 0,&#xA;      [Symbol(RequestTimeout)]: undefined&#xA;    },&#xA;    _consuming: false,&#xA;    _dumped: false,&#xA;    cookies: [Getter/Setter],&#xA;    __NEXT_INIT_QUERY: {},&#xA;    [Symbol(kCapture)]: false,&#xA;    [Symbol(RequestTimeout)]: undefined&#xA;  },&#xA;  res: &lt;ref *1&gt; ServerResponse {&#xA;    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },&#xA;    _eventsCount: 1,&#xA;    _maxListeners: undefined,&#xA;    outputData: [],&#xA;    outputSize: 0,&#xA;    writable: true,&#xA;    destroyed: false,&#xA;    _last: false,&#xA;    chunkedEncoding: false,&#xA;    shouldKeepAlive: true,&#xA;    _defaultKeepAlive: true,&#xA;    useChunkedEncodingByDefault: true,&#xA;    sendDate: true,&#xA;    _removedConnection: false,&#xA;    _removedContLen: false,&#xA;    _removedTE: false,&#xA;    _contentLength: null,&#xA;    _hasBody: true,&#xA;    _trailer: '',&#xA;    finished: false,&#xA;    _headerSent: false,&#xA;    socket: Socket {&#xA;      connecting: false,&#xA;      _hadError: false,&#xA;      _parent: null,&#xA;      _host: null,&#xA;      _readableState: [ReadableState],&#xA;      _events: [Object: null prototype],&#xA;      _eventsCount: 8,&#xA;      _maxListeners: undefined,&#xA;      _writableState: [WritableState],&#xA;      allowHalfOpen: true,&#xA;      _sockname: null,&#xA;      _pendingData: null,&#xA;      _pendingEncoding: '',&#xA;      server: [Server],&#xA;      _server: [Server],&#xA;      parser: [HTTPParser],&#xA;      on: [Function: socketListenerWrap],&#xA;      addListener: [Function: socketListenerWrap],&#xA;      prependListener: [Function: socketListenerWrap],&#xA;      _paused: false,&#xA;      _httpMessage: [Circular *1],&#xA;      timeout: 0,&#xA;      [Symbol(async_id_symbol)]: 285916,&#xA;      [Symbol(kHandle)]: [TCP],&#xA;      [Symbol(kSetNoDelay)]: false,&#xA;      [Symbol(lastWriteQueueSize)]: 0,&#xA;      [Symbol(timeout)]: Timeout {&#xA;        _idleTimeout: -1,&#xA;        _idlePrev: null,&#xA;        _idleNext: null,&#xA;        _idleStart: 24100466,&#xA;        _onTimeout: null,&#xA;        _timerArgs: undefined,&#xA;        _repeat: null,&#xA;        _destroyed: true,&#xA;        [Symbol(refed)]: false,&#xA;        [Symbol(kHasPrimitive)]: false,&#xA;        [Symbol(asyncId)]: 290206,&#xA;        [Symbol(triggerId)]: 290203&#xA;      },&#xA;      [Symbol(kBuffer)]: null,&#xA;      [Symbol(kBufferCb)]: null,&#xA;      [Symbol(kBufferGen)]: null,&#xA;      [Symbol(kCapture)]: false,&#xA;      [Symbol(kBytesRead)]: 0,&#xA;      [Symbol(kBytesWritten)]: 0,&#xA;      [Symbol(RequestTimeout)]: undefined&#xA;    },&#xA;    _header: null,&#xA;    _keepAliveTimeout: 5000,&#xA;    _onPendingData: [Function: bound updateOutgoingData],&#xA;    _sent100: false,&#xA;    _expect_continue: false,&#xA;    statusCode: 200,&#xA;    flush: [Function: flush],&#xA;    write: [Function: write],&#xA;    end: [Function: end],&#xA;    on: [Function: on],&#xA;    writeHead: [Function: writeHead],&#xA;    [Symbol(kCapture)]: false,&#xA;    [Symbol(kNeedDrain)]: false,&#xA;    [Symbol(corked)]: 0,&#xA;    [Symbol(kOutHeaders)]: null&#xA;  },&#xA;  query: {},&#xA;  resolvedUrl: '/explore_SSR',&#xA;  locales: undefined,&#xA;  locale: undefined,&#xA;  defaultLocale: undefined,&#xA;  db: {&#xA;    client: MongoClient {&#xA;      _events: [Object: null prototype],&#xA;      _eventsCount: 1,&#xA;      _maxListeners: undefined,&#xA;      s: [Object],&#xA;      topology: [NativeTopology],&#xA;      [Symbol(kCapture)]: false&#xA;    },&#xA;    db: Db {&#xA;      _events: [Object: null prototype] {},&#xA;      _eventsCount: 0,&#xA;      _maxListeners: undefined,&#xA;      s: [Object],&#xA;      serverConfig: [Getter],&#xA;      bufferMaxEntries: [Getter],&#xA;      databaseName: [Getter],&#xA;      [Symbol(kCapture)]: false&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But it's not working for me. The _context of my resolver is still undefined.&#xA;(console.log in apollo/resolvers.js: _context  :&gt;&gt;  undefined)</p>&#xA;<p>Maybe we cannot use Apollo and Database connection with the API route and Server side rendering mode or i just missing something big.</p>&#xA;<p>Any idea of how i could implement the Mongodb database connection to have acces to it from my resolver in any kind of rendering mode?</p>&#xA;",15852867,,15852867,2021-05-12 19:56:41,2021-05-12 19:56:41,Next.js + Apollo + Mongodb : Unable to have acces to Apollo context in SSR mode,<mongodb><graphql><next.js><apollo-client><apollo-server>,0,2,0,2021-05-12 14:42:49
67534364,2,,67527452,2,,"<p>It looks like you installed <code>graphql</code> explicitly, however, you installed a really old version of it. My guess is that a dependency of yours installs a different version of <code>graphql</code> and the build process is then resolving it to your outdated one, or there's a peer dependency that you're not fulfilling, which would come up as a warning from <code>yarn</code> or <code>npm</code> (depending on which one you're using) on a fresh install.</p>&#xA;<p>The easiest way to resolve this would be for you upgrade to a newer version of <code>graphql</code> as this will just resolve the incompatibility immediately.</p>&#xA;<p>However, it's likely worth checking where you went wrong. Check your package manager for peer dependency warnings, use Yarn or npm's list command to find out what duplicates (if any) of the GraphQL.js package you have, and go from there.</p>&#xA;",1524832,,,,2021-05-14 12:29:10,"",,0,0,0,2021-05-14 12:29:10
67557580,1,,,0,418,"<p>I'm moving some of my applications to Docker and I'm having some trouble configuring networking between them. Here's the basic layout of my application currently. I'm having difficulty connecting the API of my application (an Apollo GraphQL Server) and the frontend (React using Apollo Client).</p>&#xA;<p>Currently, I'm sending all traffic coming through on Port 80 to a Docker container (React App Nginx) that's serving up my pre-built react application. Pretty straightforward.</p>&#xA;<p>That application contains a configuration for the ApolloClient that should create an HttpLink with my backend Server, with <code>process.env.REACT_APP_API</code> pointing to it.</p>&#xA;<p><a href=""https://i.stack.imgur.com/WXqvu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WXqvu.png"" alt=""My current architecture"" /></a></p>&#xA;<p>The <code>REACT_APP_API</code> variable is baked into the Javascript that a user will download into their browser. When the user's browser makes a POST request to a specific endpoint, I'll need to ensure that they are pointed at the backend. How can I configure this architecture so that the Apollo Client, which is getting served up to users in one container, can connect to the API, which is running in another container?</p>&#xA;<p>I could expose that API at <code>http://localhost:3000/graphql</code> for example, or could somehow connect the two over Docker's bridge network...? The API is using <a href=""https://www.npmjs.com/package/apollo-server-express"" rel=""nofollow noreferrer"">apollo-server-express</a>.</p>&#xA;<p>Here's the Dockerfile for my Frontend:</p>&#xA;<pre><code>FROM node:14 AS builder&#xA;LABEL maintainer=&quot;kingofcramers.dev@gmail.com&quot;&#xA;WORKDIR /app&#xA;&#xA;COPY package*.json .&#xA;RUN npm install&#xA;&#xA;COPY tsconfig.json .eslintrc.js .stylelintrc.json .env.production .&#xA;COPY src ./src&#xA;COPY public ./public&#xA;RUN npm run prod:build&#xA;&#xA;###########&#xA;## NGINX ##&#xA;###########&#xA;&#xA;FROM nginx:alpine&#xA;&#xA;WORKDIR /usr/share/nginx/html&#xA;&#xA;RUN rm -rf ./*&#xA;&#xA;# Copy built assets from builder stage into html folder for Nginx to serve&#xA;COPY --from=builder /app/build .&#xA;&#xA;# Expose app on port 80...&#xA;EXPOSE 80&#xA;ENTRYPOINT [&quot;nginx&quot;, &quot;-g&quot;, &quot;daemon off;&quot;]&#xA;</code></pre>&#xA;<p>And for my backend:</p>&#xA;<pre><code>FROM node:14&#xA;LABEL maintainer=&quot;kingofcramers.dev@gmail.com&quot;&#xA;WORKDIR /app&#xA;&#xA;COPY package*.json .&#xA;RUN npm install&#xA;&#xA;COPY tsconfig.json modules.d.ts .&#xA;COPY src ./src&#xA;RUN npm run prod:build&#xA;&#xA;CMD [&quot;node&quot;, &quot;build/index.js&quot;]&#xA;</code></pre>&#xA;",7860026,,7860026,2021-05-16 15:04:52,2021-05-16 15:04:52,How to Connect with Dockerized Apollo GraphQL API,<docker><networking><graphql><apollo-client><apollo-server>,0,3,0,2021-05-16 14:06:14
67594377,2,,66799844,5,,"<p>The <code>Merge</code> button is used for flattening a query with defined fragments.&#xA;It is different from Prettify which retains the original query but just indents it.</p>&#xA;<p>Using the GraphiQL netify demo schema, the following query is &quot;Prettified&quot;</p>&#xA;<pre><code>query {&#xA;  test {&#xA;    person {&#xA;      name&#xA;      age&#xA;      ...friendNames&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;fragment friendNames on Person {&#xA;  friends {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>When clicking the <code>Merge</code> button the result is as follows:</p>&#xA;<pre><code>{&#xA;  test {&#xA;    person {&#xA;      name&#xA;      age&#xA;      friends {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>To see a live demo of the above, you can follow this <a href=""https://graphiql-test.netlify.app/?query=%23%20Click%20the%20merge%20button%20%20%20%20%20%5E%5E%0Aquery%20%7B%0A%20%20test%20%7B%0A%20%20%20%20person%20%7B%0A%20%20%20%20%20%20name%0A%20%20%20%20%20%20age%0A%20%20%20%20%20%20...friendNames%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%0A%0Afragment%20friendNames%20on%20Person%20%7B%0A%20%20friends%20%7B%0A%20%20%20%20name%0A%20%20%7D%0A%7D%0A"" rel=""noreferrer"">link</a></p>&#xA;",411326,,,,2021-05-18 21:52:51,"",,0,1,0,2021-05-18 21:52:51
67621058,1,,,0,347,"<p>I have my client app written in <code>React</code> + <code>Apollo</code> and backend in <code>Python</code> + <code>Ariadne</code>. Is there any way to handle batched arrays of queries in <code>Ariadne</code>?</p>&#xA;<p>I set custom <code>Link</code> in my client:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const apolloClient = new ApolloClient({&#xA;   cache: InMemoryCache(),&#xA;   link: new BatchHttpLink({ uri })&#xA;});&#xA;</code></pre>&#xA;<p>Client started sending queries in the array as expected, but unfortunately I get <code>400 Bad Request</code>, because backend was expecting an object instead of the array.</p>&#xA;<p>I'm not sure if I should create a middleware for <code>Ariadne</code> and handle requests manually or there is some automatic solution? I was trying to Google, but phrases <code>ariadne + batch/batching</code> does not seem to appear together...</p>&#xA;",1252575,,,,2021-05-24 15:41:29,Using BatchHttpLink from Apollo in Ariadne,<python><graphql><apollo><react-apollo><ariadne-graphql>,1,0,0,2021-05-20 13:13:59
67622190,2,,67601205,0,,"<p>After running the same code on another computer, we figured out that the project on my laptop wasn't building for some weird ass reason. The query is correct and there were no problems in general.</p>&#xA;<p>I would just add that you need this line in your *.graphqls:</p>&#xA;<pre><code>getAccidentsForDriver(id: Int!): [AccidentHistory]&#xA;</code></pre>&#xA;",14864319,,,,2021-05-20 14:17:21,"",,0,0,0,2021-05-20 14:17:21
67677676,1,,,4,2169,"<p>I am building a React app with Eslint setup.&#xA;In my app, I am using GraphQL @apollo/client dependency.</p>&#xA;<p>When I tried to do <code>import { setContext } from '@apollo/client/link/context'</code></p>&#xA;<p>I got an eslint error of</p>&#xA;<pre><code>'@apollo/client/link/context' should be listed in the project's dependencies. Run 'npm i -S @apollo/client/link/context' to add it  import/no-extraneous-dependencies&#xA;</code></pre>&#xA;<p>I do have '@apollo/client' dependency in my package.json.&#xA;And import from '@apollo/client/link/context' is the proper way to get 'setContext' according to Apollo documentation.</p>&#xA;<p>Seems like <code>import/no-extreaneous-dependencies</code> is not recognize the nested path from '@apollo/client'.</p>&#xA;<p>When I set <code>&quot;import/no-extraneous-dependencies&quot;: 0</code> in my .eslintrc.js rules, it will work fine.&#xA;But for a proper solution, instead of just turning off the eslint checking, I am assuming that I probably need to set something up with .eslintrc.js rules.</p>&#xA;<p>What other set ups should I write for my rules in my .eslintrc.js in this case for properly solving the problem?</p>&#xA;<p>my package.json:</p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;my-app&quot;,&#xA;  &quot;version&quot;: &quot;0.1.0&quot;,&#xA;  &quot;private&quot;: true,&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@apollo/client&quot;: &quot;^3.3.19&quot;,&#xA;    &quot;@auth0/auth0-react&quot;: &quot;^1.4.0&quot;,&#xA;    &quot;@testing-library/jest-dom&quot;: &quot;^5.11.4&quot;,&#xA;    &quot;@testing-library/react&quot;: &quot;^11.1.0&quot;,&#xA;    &quot;@testing-library/user-event&quot;: &quot;^12.1.10&quot;,&#xA;    &quot;eslint&quot;: &quot;^7.26.0&quot;,&#xA;    &quot;eslint-config-airbnb&quot;: &quot;^18.2.1&quot;,&#xA;    &quot;eslint-plugin-import&quot;: &quot;^2.22.1&quot;,&#xA;    &quot;eslint-plugin-jsx-a11y&quot;: &quot;^6.4.1&quot;,&#xA;    &quot;eslint-plugin-react&quot;: &quot;^7.23.2&quot;,&#xA;    &quot;eslint-plugin-react-hooks&quot;: &quot;^4.2.0&quot;,&#xA;    &quot;graphql&quot;: &quot;^15.5.0&quot;,&#xA;    &quot;react&quot;: &quot;^17.0.2&quot;,&#xA;    &quot;react-big-calendar&quot;: &quot;^0.33.3&quot;,&#xA;    &quot;react-dom&quot;: &quot;^17.0.2&quot;,&#xA;    &quot;react-router-dom&quot;: &quot;^5.2.0&quot;,&#xA;    &quot;react-scripts&quot;: &quot;4.0.3&quot;,&#xA;    &quot;web-vitals&quot;: &quot;^1.0.1&quot;&#xA;  },&#xA;  &quot;scripts&quot;: {&#xA;    &quot;start&quot;: &quot;react-scripts start&quot;,&#xA;    &quot;build&quot;: &quot;react-scripts build&quot;,&#xA;    &quot;test&quot;: &quot;react-scripts test&quot;,&#xA;    &quot;eject&quot;: &quot;react-scripts eject&quot;&#xA;  },&#xA;  &quot;eslintConfig&quot;: {&#xA;    &quot;extends&quot;: [&#xA;      &quot;react-app&quot;,&#xA;      &quot;react-app/jest&quot;&#xA;    ]&#xA;  },&#xA;  &quot;browserslist&quot;: {&#xA;    &quot;production&quot;: [&#xA;      &quot;&gt;0.2%&quot;,&#xA;      &quot;not dead&quot;,&#xA;      &quot;not op_mini all&quot;&#xA;    ],&#xA;    &quot;development&quot;: [&#xA;      &quot;last 1 chrome version&quot;,&#xA;      &quot;last 1 firefox version&quot;,&#xA;      &quot;last 1 safari version&quot;&#xA;    ]&#xA;  },&#xA;  &quot;devDependencies&quot;: {}&#xA;}&#xA;</code></pre>&#xA;<p>and my .eslintrc.js file:</p>&#xA;<pre><code>module.exports = {&#xA;  env: {&#xA;    browser: true,&#xA;    es2021: true,&#xA;  },&#xA;  extends: [&#xA;    'plugin:react/recommended',&#xA;    'airbnb',&#xA;  ],&#xA;  parserOptions: {&#xA;    ecmaFeatures: {&#xA;      jsx: true,&#xA;    },&#xA;    ecmaVersion: 12,&#xA;    sourceType: 'module',&#xA;  },&#xA;  plugins: [&#xA;    'react',&#xA;  ],&#xA;  rules: {&#xA;    'no-console': 1,&#xA;    'react/prop-types': 0,&#xA;    'no-underscore-dangle': ['error', { allow: ['__raw'] }],&#xA;  },&#xA;  overrides: [&#xA;    {&#xA;      files: ['**/*.test.jsx'],&#xA;      env: { jest: true },&#xA;    },&#xA;  ],&#xA;};&#xA;&#xA;</code></pre>&#xA;",10649873,,10649873,2021-05-25 01:23:09,2022-05-17 14:57:17,Eslint import/no-extraneous-dependencies error on path,<reactjs><graphql><eslint><apollo-client><eslintrc>,2,0,0,2021-05-24 19:08:57
67702154,2,,64590173,0,,"<p>I have also had this problem and have discovered that the version of the YAML parser used by Gatsby (currently <code>js-yaml@3.14.1</code>) is parsing strings as base60 where possible. Which I believe is not compliant with the YAML 1.2 spec.</p>&#xA;<p>This issue has <a href=""https://github.com/nodeca/js-yaml/commit/19185199e0cc6357869afde7194bb2239ef67917#diff-06572a96a58dc510037d5efa622f9bec8519bc1beab13c9f251e97e657a9d4ed"" rel=""nofollow noreferrer"">since been fixed in version 4</a> but unfortunately the libraries that Gatsby uses still depend on version 3. <code>gatsby-transformer-remark@4.3.0 -&gt; gray-matter@4.0.3 -&gt; js-yaml@3.14.1</code></p>&#xA;<p>An attempt to force upgrade using <code>npm-force-resolutions</code> did not work but&#xA;fortunately <a href=""https://stackblitz.com/edit/gray-matter-problem"" rel=""nofollow noreferrer"">gray-matter allow engines to be swapped using the options</a>. Also gatsby-transformer-remark allows the gray-matter options to be configured within gatsby-config.js.</p>&#xA;<p>So I have managed to workaround the issue by installing js-yaml@4.1.0 and overriding the engine like so:</p>&#xA;<p>package.json</p>&#xA;<pre><code>{&#xA;...&#xA;  &quot;dependencies&quot;: {&#xA;+    &quot;js-yaml&quot;: &quot;4.1.0&quot;,&#xA;</code></pre>&#xA;<p>gatsby-config.js</p>&#xA;<pre><code>+ const yaml = require('js-yaml');&#xA;...&#xA;    {&#xA;      resolve: &quot;gatsby-transformer-remark&quot;,&#xA;      options: {&#xA;+        engines: {&#xA;+          yaml: {&#xA;+            parse: yaml.load.bind(yaml),&#xA;+            stringify: yaml.dump.bind(yaml)&#xA;+          }&#xA;        },&#xA;&#xA;</code></pre>&#xA;",859295,,,,2021-05-26 09:27:28,"",,0,0,0,2021-05-26 09:27:28
67705318,1,67783340,,1,2104,"<p>I've got a problem in my NestJs app. Project was running perfect until yesterday.</p>&#xA;<p>Apparently my node.js upgraded from <code>14.16.1</code> to <code>14.17.0</code>. So I changed this version number in my <code>engines</code> object, in <code>package.json</code>. I executed <code>yarn install</code> again, to make sure everything was there, and tried <code>yarn start:dev</code> (which translates to <code>nest start --watch</code>).</p>&#xA;<p>But my app isn't running =(&#xA;It seems like there's something wrong regarding my apollo-server-fastify:</p>&#xA;<pre><code>UnhandledPromiseRejectionWarning: Error: You must `await server.start()` before calling `server.createHandler()`&#xA;    at ApolloServer.assertStarted (/app/node_modules/apollo-server-fastify/node_modules/apollo-server-core/dist/ApolloServer.js:213:19)&#xA;    at ApolloServer.createHandler (/app/node_modules/apollo-server-fastify/dist/ApolloServer.js:22:14)&#xA;    at GraphQLModule.&lt;anonymous&gt; (/app/node_modules/@nestjs/graphql/dist/graphql.module.js:150:45)&#xA;    at Generator.next (&lt;anonymous&gt;)&#xA;    at /app/node_modules/tslib/tslib.js:117:75&#xA;    at new Promise (&lt;anonymous&gt;)&#xA;    at Object.__awaiter (/app/node_modules/tslib/tslib.js:113:16)&#xA;    at GraphQLModule.registerFastify (/app/node_modules/@nestjs/graphql/dist/graphql.module.js:143:24)&#xA;    at GraphQLModule.&lt;anonymous&gt; (/app/node_modules/@nestjs/graphql/dist/graphql.module.js:118:28)&#xA;    at Generator.next (&lt;anonymous&gt;)&#xA;(Use `node --trace-warnings ...` to show where the warning was created)&#xA;(node:323734) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). To terminate the node process on unhandled promise rejection, use the CLI flag `--unhandled-rejections=strict` (see https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). (rejection id: 2)&#xA;(node:323734) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.&#xA;</code></pre>&#xA;<p>I know apollo and fastify aren't the best friends right now, I've faced an issue in the past where I needed to downgrade some package, I guess. Does anyone knows how to debug/fix this? I feel clueless.&#xA;Current package versions:</p>&#xA;<pre><code>&quot;@nestjs/common&quot;: &quot;^7.0.0&quot;,&#xA;&quot;@nestjs/graphql&quot;: &quot;^7.7.0&quot;,&#xA;&quot;@nestjs/platform-fastify&quot;: &quot;^7.6.4&quot;,&#xA;&quot;apollo-server-fastify&quot;: &quot;^3.0.0-alpha.3&quot;,&#xA;&quot;graphql&quot;: &quot;^15.5.0&quot;,&#xA;</code></pre>&#xA;<p>(I've also tried to upgrade apollo-server-fastify to alpha 4, but the problem persists).</p>&#xA;",2600554,,214143,2021-06-03 22:13:58,2021-06-03 22:13:58,Problem running apollo server after nodejs upgrade (using nestjs and fastify),<node.js><nestjs><apollo-server><fastify>,1,2,0,2021-05-26 12:53:56
67728906,2,,67728622,2,,"<p>Yes, a problem with a buggy APOC jar in the latest Aura push. I believe all apoc.coll functions and procs may be affected.</p>&#xA;<p>It's being worked on, you can monitor status here:</p>&#xA;<p><a href=""https://status.neo4j.io/"" rel=""nofollow noreferrer"">https://status.neo4j.io/</a></p>&#xA;",92359,,,,2021-05-27 19:41:26,"",,0,1,0,2021-05-27 19:41:26
67739584,1,,,5,1979,"<p>I am currently trying to deploy my NestJS server using Graphql on Google Cloud Run. I also have a React app that I use as a client, that I hosted on Netlify.</p>&#xA;<p>I am getting the following CORS (Cross Origin Resource Sharing) error in the console when I try to run this, however:</p>&#xA;<pre><code>Access to fetch at 'https://google-cloud.run.app/graphql' from origin 'https://myapp.netlify.app' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.&#xA;</code></pre>&#xA;<p>My NestJS app configuration looks as follows:</p>&#xA;<pre><code>  // {cors: true}&#xA;  const app = await NestFactory.create(AppModule);&#xA;  app.enableCors({&#xA;    origin: true,&#xA;    credentials: true,&#xA;    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',&#xA;    allowedHeaders: &quot;Content-Type,Accept,Authorization,Access-Control-Allow-Origin&quot;&#xA;  });&#xA;&#xA;</code></pre>&#xA;<p>In another stackoverflow post, I saw that the GraphQL CORS configuration overrides the NestJS CORS configuration, so I added the CORS logic also into the GraphQL <code>app.module.ts</code> as follows:</p>&#xA;<pre><code>@Module({&#xA;  controllers: [],&#xA;  imports: [&#xA;    ...,&#xA;    GraphQLModule.forRootAsync({&#xA;      useFactory: (configService) =&gt; {&#xA;        const playground = configService.get(&quot;GRAPHQL_PLAYGROUND&quot;);&#xA;        const introspection = configService.get(&quot;GRAPHQL_INTROSPECTION&quot;);&#xA;        return {&#xA;          autoSchemaFile: true,&#xA;          playground,&#xA;          introspection: playground || introspection,&#xA;          cors: {&#xA;            credentials: true,&#xA;            origin: true,&#xA;            methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',&#xA;            allowedHeaders: &quot;Content-Type,Accept,Authorization,Access-Control-Allow-Origin&quot;&#xA;          },&#xA;          context: ({req}) =&gt; {&#xA;            return {req};&#xA;          },&#xA;          installSubscriptionHandlers: true&#xA;        };&#xA;      },&#xA;      inject: [ConfigService],&#xA;      imports: [ConfigModule]&#xA;    }),&#xA;...&#xA;</code></pre>&#xA;<p>When I run the client from <code>localhost</code>, and when there is a direct connection to the Google Cloud Run Container, everyting works fine at this point, and I don't receive any CORS errors. I am using the Apollo GraphQL client to make the API requests.</p>&#xA;<p>When I use the Netlify Client, however, I get the CORS issue above.</p>&#xA;<p>Any idea on how to address this? Is this a Netlify issue? Is this a Google Cloud Run Issue? Or am I missing any headers with the CORS?</p>&#xA;",3262787,,,,2021-05-28 13:16:53,"NestJS Graphql CORS: issue when accessing API through remote host, while functional on localhost",<node.js><graphql><cors><nestjs><netlify>,0,6,0,2021-05-28 13:16:53
67751767,1,,,2,184,"<p>I'm trying to build a website using Wordpress as my backend, WPGraphQL &amp; Apollo-Vue, and Vue for my frontend. It's going ok so far, but Apollo is causing me a lot of grief. I opted to go for Vue3 since it seems that's the future for the library, and I want to learn the latest not the obsolete, and make use of the new features and improvements in 3.</p>&#xA;<p>I'm hearing that a lot of libraries and packages are still incompatible and error prone with Vue 3... Some forum posts are saying things about apollo-vue incompatibilities with Vue3, but I'm also new to the Vue system and it's entirely possible I could just be coding it wrong as well.. I'm not sure... Here is my code.. please tell me what I'm doing wrong so I can stop pulling my hair out..</p>&#xA;<p><em>browser console error</em></p>&#xA;<pre><code>runtime-core.esm-bundler.js?5c40:217 Uncaught TypeError: Object(...) is not a function&#xA;    at setup (HeaderPrimary.vue?da5e:26)&#xA;    at callWithErrorHandling (runtime-core.esm-bundler.js?5c40:154)&#xA;    at setupStatefulComponent (runtime-core.esm-bundler.js?5c40:6542)&#xA;    at setupComponent (runtime-core.esm-bundler.js?5c40:6503)&#xA;    at mountComponent (runtime-core.esm-bundler.js?5c40:4206)&#xA;    at processComponent (runtime-core.esm-bundler.js?5c40:4182)&#xA;    at patch (runtime-core.esm-bundler.js?5c40:3791)&#xA;    at mountChildren (runtime-core.esm-bundler.js?5c40:3975)&#xA;    at mountElement (runtime-core.esm-bundler.js?5c40:3896)&#xA;    at processElement (runtime-core.esm-bundler.js?5c40:3868)&#xA;setup @ HeaderPrimary.vue?da5e:26&#xA;callWithErrorHandling @ runtime-core.esm-bundler.js?5c40:154&#xA;setupStatefulComponent @ runtime-core.esm-bundler.js?5c40:6542&#xA;setupComponent @ runtime-core.esm-bundler.js?5c40:6503&#xA;mountComponent @ runtime-core.esm-bundler.js?5c40:4206&#xA;processComponent @ runtime-core.esm-bundler.js?5c40:4182&#xA;patch @ runtime-core.esm-bundler.js?5c40:3791&#xA;mountChildren @ runtime-core.esm-bundler.js?5c40:3975&#xA;mountElement @ runtime-core.esm-bundler.js?5c40:3896&#xA;processElement @ runtime-core.esm-bundler.js?5c40:3868&#xA;patch @ runtime-core.esm-bundler.js?5c40:3788&#xA;componentEffect @ runtime-core.esm-bundler.js?5c40:4298&#xA;reactiveEffect @ reactivity.esm-bundler.js?a1e9:42&#xA;effect @ reactivity.esm-bundler.js?a1e9:17&#xA;setupRenderEffect @ runtime-core.esm-bundler.js?5c40:4263&#xA;mountComponent @ runtime-core.esm-bundler.js?5c40:4222&#xA;processComponent @ runtime-core.esm-bundler.js?5c40:4182&#xA;patch @ runtime-core.esm-bundler.js?5c40:3791&#xA;render @ runtime-core.esm-bundler.js?5c40:4883&#xA;mount @ runtime-core.esm-bundler.js?5c40:3077&#xA;app.mount @ runtime-dom.esm-bundler.js?830f:1259&#xA;eval @ main.js?56d7:41&#xA;./src/main.js @ app.js:1557&#xA;__webpack_require__ @ app.js:849&#xA;fn @ app.js:151&#xA;1 @ app.js:1582&#xA;__webpack_require__ @ app.js:849&#xA;checkDeferredModules @ app.js:46&#xA;(anonymous) @ app.js:925&#xA;(anonymous) @ app.js:928&#xA;</code></pre>&#xA;<p><em>main.js</em></p>&#xA;<pre><code>import { createApp } from 'vue'&#xA;import App from './App.vue'&#xA;import router from './router'&#xA;import VueCompositionAPI from 'vue'&#xA;// import { DefaultApolloClient } from 'vue'&#xA;import { ApolloClient, createHttpLink, InMemoryCache } from 'vue'&#xA;&#xA;// HTTP connection to the API&#xA;const httpLink = createHttpLink({&#xA;  // You should use an absolute URL here&#xA;  uri: 'http://localhost/websitename/graphql',&#xA;})&#xA;&#xA;// Cache implementation&#xA;const cache = new InMemoryCache()&#xA;&#xA;// Create the apollo client&#xA;const apolloClient = new ApolloClient({&#xA;  link: httpLink,&#xA;  cache,&#xA;})&#xA;&#xA;createApp(App)&#xA;.use(router)&#xA;.use(VueCompositionAPI)&#xA;.use(apolloClient)&#xA;.mount('#app')&#xA;</code></pre>&#xA;<p><em>HeaderPrimary</em></p>&#xA;<pre><code>import { createApp } from 'vue'&#xA;import App from './App.vue'&#xA;import router from './router'&#xA;import VueCompositionAPI from 'vue'&#xA;import { DefaultApolloClient } from 'vue'&#xA;&#xA;createApp(App)&#xA;.use(router)&#xA;.use(VueCompositionAPI) //DO I need to do this? How do I access it in a component.. I'm not clear on how this works..&#xA;.use(DefaultApolloClient) // same question..&#xA;.mount('#app')&#xA;&#xA;&lt;template&gt;&#xA;  &lt;header&gt;&#xA;    &lt;nav id=&quot;nav_primary&quot;&gt;&#xA;       &lt;Loading_Spinner v-if=&quot;loading&quot; /&gt;&#xA;      &lt;ul&gt;&#xA;        &lt;li v-for=&quot;item in menu_items&quot; :key=&quot;item&quot;&gt;&#xA;              &lt;router-link :to=&quot;{ path: '/'+item.ID } &quot;&gt;{{ item.title }}&lt;/router-link&gt;&#xA;        &lt;/li&gt;&#xA;      &lt;/ul&gt;&#xA;    &lt;/nav&gt;&#xA;  &lt;/header&gt;&#xA;&lt;/template&gt;&#xA;&#xA;&lt;script&gt;&#xA;import Loading_Spinner from './Loading_Spinner.vue'&#xA;import { watch, useQuery, gql } from 'vue'&#xA;//const { ref, reactive } = VueCompositionAPI //I don't know what this is? I found it somewhere...&#xA;&#xA;export default {&#xA;  name: 'HeaderPrimary',&#xA;   setup () {&#xA;    const {result} = useQuery(gql`&#xA;       query getMenu {&#xA;        posts {&#xA;          edges {&#xA;            node {&#xA;              id&#xA;              title&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    `)&#xA;&#xA;    watch(() =&gt; {&#xA;      console.log(result.value)&#xA;    })&#xA;  },&#xA;  data() {&#xA;    return {&#xA;      loading: false,&#xA;      menu_items: [],&#xA;    }&#xA;  },&#xA;  components: {&#xA;    Loading_Spinner&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><em>package.json</em></p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;websitename&quot;,&#xA;  &quot;version&quot;: &quot;0.1.0&quot;,&#xA;  &quot;private&quot;: true,&#xA;  &quot;scripts&quot;: {&#xA;    &quot;serve&quot;: &quot;vue-cli-service serve --dest ./&quot;,&#xA;    &quot;build&quot;: &quot;vue-cli-service build&quot;,&#xA;    &quot;lint&quot;: &quot;vue-cli-service lint&quot;&#xA;  },&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@apollo/client&quot;: &quot;^3.3.19&quot;,&#xA;    &quot;@vue/apollo-composable&quot;: &quot;^4.0.0-alpha.12&quot;,&#xA;    &quot;apollo&quot;: &quot;^2.29.0-alpha.0&quot;,&#xA;    &quot;core-js&quot;: &quot;^3.6.5&quot;,&#xA;    &quot;graphql&quot;: &quot;^15.5.0&quot;,&#xA;    &quot;graphql-tag&quot;: &quot;^2.12.4&quot;,&#xA;    &quot;vue&quot;: &quot;^3.0.0&quot;,&#xA;    &quot;vue-apollo&quot;: &quot;^3.0.0-alpha.3&quot;,&#xA;    &quot;vue-ionicons&quot;: &quot;^3.0.5&quot;,&#xA;    &quot;vue-router&quot;: &quot;^4.0.8&quot;&#xA;  },&#xA;  &quot;devDependencies&quot;: {&#xA;    &quot;@vue/cli-plugin-babel&quot;: &quot;~4.5.0&quot;,&#xA;    &quot;@vue/cli-plugin-eslint&quot;: &quot;~4.5.0&quot;,&#xA;    &quot;@vue/cli-service&quot;: &quot;~4.5.0&quot;,&#xA;    &quot;@vue/compiler-sfc&quot;: &quot;^3.0.0&quot;,&#xA;    &quot;babel-eslint&quot;: &quot;^10.1.0&quot;,&#xA;    &quot;eslint&quot;: &quot;^6.7.2&quot;,&#xA;    &quot;eslint-plugin-vue&quot;: &quot;^7.0.0&quot;,&#xA;    &quot;node-sass&quot;: &quot;^6.0.0&quot;,&#xA;    &quot;sass&quot;: &quot;^1.32.13&quot;,&#xA;    &quot;sass-loader&quot;: &quot;^10.2.0&quot;,&#xA;    &quot;vue-cli-plugin-apollo&quot;: &quot;~0.22.2&quot;,&#xA;    &quot;vue-loader&quot;: &quot;^16.2.0&quot;,&#xA;    &quot;vue-template-compiler&quot;: &quot;^2.6.12&quot;,&#xA;    &quot;webpack&quot;: &quot;^4.42.0&quot;&#xA;  },&#xA;  &quot;eslintConfig&quot;: {&#xA;    &quot;root&quot;: true,&#xA;    &quot;env&quot;: {&#xA;      &quot;node&quot;: true&#xA;    },&#xA;    &quot;extends&quot;: [&#xA;      &quot;plugin:vue/vue3-essential&quot;,&#xA;      &quot;eslint:recommended&quot;&#xA;    ],&#xA;    &quot;parserOptions&quot;: {&#xA;      &quot;parser&quot;: &quot;babel-eslint&quot;&#xA;    },&#xA;    &quot;rules&quot;: {}&#xA;  },&#xA;  &quot;browserslist&quot;: [&#xA;    &quot;&gt; 1%&quot;,&#xA;    &quot;last 2 versions&quot;,&#xA;    &quot;not dead&quot;&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;",1536381,,1536381,2021-05-29 22:36:17,2021-05-29 22:36:17,Vue3 Beginner Stuck Trying to Get Apollo-Vue Working w/WPGraphQL on a WordPress CMS Web App,<vue.js><web-frontend><vue-apollo><headless-cms><wp-graphql>,0,0,0,2021-05-29 13:10:23
67759737,1,,,0,261,"<p>I've recently wanted to get back into programming, and I know that Apollo GraphQL has moved to an asynchronous way to firing up the server per their documentation.</p>&#xA;<p>Since switching (and following docs), I can't get my server to fire up, and I don't know why.</p>&#xA;<p>When the server attempts to run, it hangs on the execution of <code>.start()</code> on my <code>ApolloServer</code> instance, even though I'm giving it (what I think) are both valid type definitions and resolvers.</p>&#xA;<p>The current iteration of my tiny boilerplate project is located <a href=""https://codesandbox.io/s/determined-leakey-s48rt"" rel=""nofollow noreferrer"">here</a> on CodeSandbox.</p>&#xA;<p>When I run this code locally, I receive the following error (which isn't shown on CS?):</p>&#xA;<p><code>Argument type {typeDefs: DocumentNode, resolvers: {Query: {hello(): string}}} is not assignable to parameter type ApolloServerExpressConfig</code></p>&#xA;<p>This error is on line 9, where the instance of <code>ApolloServer</code> is created.</p>&#xA;<p>I don't know what I'm doing wrong.  I was previously using <code>babel-plugin-import-graphql</code> but switched away from that to using a normal JS import w/ the <code>gql</code> tag just to be safe.   The problem appears to be with the resolver map, which doesn't make sense:</p>&#xA;<pre><code>const resolvers = {&#xA;  Query: {&#xA;    hello: () =&gt; &quot;world!&quot;&#xA;  }&#xA;};&#xA;&#xA;export default resolvers;&#xA;</code></pre>&#xA;<p>Anyway, thanks in advance!  Would love to get this sorted out today.   I think if I don't, I'll end up just switching over to using Meteor for full-stack stuff and then use React for the front-end and just not worry about it anymore.</p>&#xA;",2867168,,,,2021-05-30 09:39:55,Why is my apollo-server-express instance hanging due to resolvers?,<express><graphql><apollo><apollo-server>,0,4,0,2021-05-30 09:39:55
67760986,2,,52381150,0,,"<p>For anyone ending up here: turns out that in the current version at least (@apollo/client 3.3.6) the data is merged, so this is not an issue.</p>&#xA;",1540547,,,,2021-05-30 12:10:15,"",,0,0,0,2021-05-30 12:10:15
67786859,1,,,0,757,"<p>I have added pom dependency in the spring boot application for graphiql playground with the &quot;<strong>graphiql-spring-boot-starter-5.0.2.jar</strong>&quot; dependency.</p>&#xA;<p>Now I would like to disable the playground for the production environment.</p>&#xA;<p>And have tried with spring boot applications as below, but none of these options working to disable the GraphiQL endpoint.</p>&#xA;<ol>&#xA;<li>graphiql.enabled= false</li>&#xA;<li>dgs.graphql.graphiql.enabled=false</li>&#xA;</ol>&#xA;<p>Could you please suggest how we could disable GraphiQL?</p>&#xA;",12180796,,,,2021-09-05 17:04:54,Disable GraphiQL playground on production in spring boot application,<java><spring-boot><graphql><graphql-java><graphiql>,1,0,0,2021-06-01 10:08:21
67803092,2,,67803091,0,,"<p>This is a problem with older versions of the library, and is <a href=""https://github.com/apollographql/apollo-android/releases/tag/v2.4.5"" rel=""nofollow noreferrer"">fixed in v2.4.5</a>. Update your library to at least that version to resolve it.</p>&#xA;<p><a href=""https://github.com/apollographql/apollo-android/issues/2541"" rel=""nofollow noreferrer"">Here is the issue for it</a>, and <a href=""https://github.com/apollographql/apollo-android/pull/2746"" rel=""nofollow noreferrer"">here is the fix</a>.</p>&#xA;",608312,,,,2021-06-02 10:12:12,"",,0,0,0,2021-06-02 10:12:12
67832121,2,,62272538,1,,"<p>You are trying to request for your local resource <code>localhost:3000</code> in your CI environment.&#xA;You will have to host your backend (Keystone) to some server, I use Heroku, (but anywhere) and get a URL that can be accessible by your CI.</p>&#xA;",565482,,,,2021-06-04 05:57:09,"",,0,0,0,2021-06-04 05:57:09
67832434,2,,67789255,0,,"<p>After a lot of searching, I finally found my issue. We are using a mono repo, and had installed two different version of <code>file-upload</code> in two packages. When I changed the version, at both packages on the same version and the error is gone.</p>&#xA;",9535703,,,,2021-06-04 06:29:37,"",,0,0,0,2021-06-04 06:29:37
67893963,1,,,0,98,"<p><strong>Hello</strong>, <br>&#xA;I tried to upgrade the <strong>axios</strong> package from version <strong>0.18.1</strong> to version <strong>0.21.1</strong>, but after that none of the requests were sent to the server correctly.</p>&#xA;<p>And i guess the problem is with the undefined data property</p>&#xA;<p>axios@0.18.1: <br>&#xA;<code>res.config.data: &quot;{\&quot;query\&quot;:\&quot;{ post(id: 1){ title } }\&quot;}&quot;</code></p>&#xA;<p>axios@0.21.1: <br>&#xA;<code>res.config.data: undefined</code></p>&#xA;<br>&#xA;<p>I used the below code to test the requests of both versions, but this code did not work in version 0.21.1</p>&#xA;<pre><code>const config = {&#xA;    method: 'post',&#xA;    timeout: 15000,&#xA;    data: { query: '{ post(id: 1){ title } }' },&#xA;    baseURL: 'https://graphqlzero.almansi.me/api',&#xA;}&#xA;&#xA;const instance = axios.create(config)&#xA;&#xA;instance()&#xA;  .then((res) =&gt; console.log(res.data.data))&#xA;  .catch((err) =&gt; console.error(&quot;error: &quot;, err))&#xA;</code></pre>&#xA;",13209982,,,,2021-06-08 20:27:39,The axios instance sends an undefined data property to the server,<javascript><axios><graphql>,0,4,0,2021-06-08 20:10:06
67936940,1,,,0,277,"<p>I am trying to implement <a href=""https://github.com/tradingview/charting-library-tutorial/blob/master/documentation/home.md"" rel=""nofollow noreferrer"">this</a> tutorial using <a href=""https://bitquery.io/products/dex"" rel=""nofollow noreferrer"">bitquery</a> API.</p>&#xA;<p>Basically, I want to call crypto data ( Open, high, low, close) and feed it into the tradingview charting library and display the chart.</p>&#xA;<p>Following the tradingview tutorial, I am trying to <code>console.log</code> the API results on the console as the first step.</p>&#xA;<p>I have coded this till now</p>&#xA;<p><code>helpers.js</code></p>&#xA;<pre><code>export async function makeApiRequest() {&#xA;    console.log(&quot;API FUNCTION&quot;)&#xA;    try {&#xA;        const query = `&#xA;        {&#xA;        ethereum(network: bsc){&#xA;        dexTrades(options: {limit: 100, asc: &quot;timeInterval.minute&quot;},&#xA;        date: {since:&quot;2020-11-01&quot;}&#xA;        exchangeName: {is: &quot;Pancake&quot;},&#xA;        baseCurrency: {is: &quot;0xbA2aE424d960c26247Dd6c32edC70B295c744C43&quot;},&#xA;        quoteCurrency: {is: &quot;0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c&quot;}){&#xA;        timeInterval {&#xA;        minute(count: 1)&#xA;        }&#xA;        baseCurrency {&#xA;        symbol&#xA;        address&#xA;        }&#xA;        baseAmount&#xA;        quoteCurrency {&#xA;        symbol&#xA;        address&#xA;        }&#xA;        quoteAmount&#xA;        trades: count&#xA;        quotePrice&#xA;        maximum_price: quotePrice(calculate: maximum)&#xA;        minimum_price: quotePrice(calculate: minimum)&#xA;        open_price: minimum(of: block get: quote_price)&#xA;        close_price: maximum(of: block get: quote_price)&#xA;        }}&#xA;        }`;&#xA;&#xA;    res = await fetch('https://graphql.bitquery.io/', {&#xA;        method: 'POST',&#xA;    headers: new Headers({&#xA;        'Content-Type': 'application/json; charset=utf-8',&#xA;        'X-API-KEY': 'xxxxxxxxxxxxxxxx',&#xA;    }),&#xA;    body: JSON.stringify({ query }),&#xA;    mode: 'cors',&#xA;    });&#xA;    console.log(res)&#xA;    &#xA;    return res;&#xA;    } catch (error) {&#xA;        throw new Error(`API error: ${error.status}`);&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>And this function is being called inside another file called <code>datafeed.js</code> like this.</p>&#xA;<pre><code>import {&#xA;    makeApiRequest,&#xA;    generateSymbol,&#xA;    parseFullSymbol,&#xA;} from './helpers.js';&#xA;&#xA;&#xA;const lastBarsCache = new Map();&#xA;&#xA;const configurationData = {&#xA;    supported_resolutions: ['1D', '5', '1W'],&#xA;    exchanges: [{&#xA;        value: 'Bitfinex',&#xA;        name: 'Bitfinex',&#xA;        desc: 'Bitfinex',&#xA;    },&#xA;    {&#xA;        value: 'Kraken',&#xA;        name: 'Kraken',&#xA;        desc: 'Kraken bitcoin exchange',&#xA;    },&#xA;    // {&#xA;    //  value: 'PancakeSwap',&#xA;    //  name: 'PancakeSwap',&#xA;    //  desc: 'PancakeSwap',&#xA;    // },&#xA;    ],&#xA;    symbols_types: [{&#xA;        name: 'crypto',&#xA;        value: 'crypto',&#xA;    }],&#xA;};&#xA;&#xA;async function getAllSymbols() {&#xA;    const data = await makeApiRequest();&#xA;    console.log(&quot;/////////////&quot;+data)&#xA;    return data;&#xA;}&#xA;&#xA;export default {&#xA;    onReady: (callback) =&gt; {&#xA;&#xA;        console.log('[onReady]: Method call');&#xA;        console.log(getAllSymbols())&#xA;        setTimeout(() =&gt; callback(configurationData));&#xA;    },&#xA;&#xA;    searchSymbols: async (&#xA;        userInput,&#xA;        exchange,&#xA;        symbolType,&#xA;        onResultReadyCallback,&#xA;    ) =&gt; {&#xA;        console.log('[searchSymbols]: Method call');&#xA;        const symbols = await getAllSymbols();&#xA;        console.log(symbols)&#xA;};&#xA;</code></pre>&#xA;<p>This gives the following error</p>&#xA;<pre><code>Uncaught (in promise) Error: API error: undefined&#xA;    at makeApiRequest (helpers.js:48)&#xA;    at async getAllSymbols (datafeed.js:35)&#xA;</code></pre>&#xA;<p>However if you test out the api request on <a href=""https://graphql.bitquery.io/ide"" rel=""nofollow noreferrer"">bitquery online IDE</a> - it works</p>&#xA;<pre><code>{&#xA;ethereum(network: bsc){&#xA;dexTrades(options: {limit: 100, asc: &quot;timeInterval.minute&quot;},&#xA;date: {since:&quot;2020-11-01&quot;}&#xA;exchangeName: {is: &quot;Pancake&quot;},&#xA;baseCurrency: {is: &quot;0xbA2aE424d960c26247Dd6c32edC70B295c744C43&quot;},&#xA;quoteCurrency: {is: &quot;0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c&quot;}){&#xA;timeInterval {&#xA;minute(count: 1)&#xA;}&#xA;baseCurrency {&#xA;symbol&#xA;address&#xA;}&#xA;baseAmount&#xA;quoteCurrency {&#xA;symbol&#xA;address&#xA;}&#xA;quoteAmount&#xA;trades: count&#xA;quotePrice&#xA;maximum_price: quotePrice(calculate: maximum)&#xA;minimum_price: quotePrice(calculate: minimum)&#xA;open_price: minimum(of: block get: quote_price)&#xA;close_price: maximum(of: block get: quote_price)&#xA;}}&#xA;}&#xA;</code></pre>&#xA;<p>What mistake am I making here? How do I get the data to <code>console.log</code> properly?</p>&#xA;<p>Update: I am able to see the data being fetched in the networks tab but it is still not being printed at console.</p>&#xA;<p><a href=""https://i.stack.imgur.com/VV8li.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VV8li.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Errors in the browser console:</p>&#xA;<p><a href=""https://i.stack.imgur.com/TeumG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TeumG.png"" alt=""enter image description here"" /></a></p>&#xA;",15530206,,15530206,2021-06-11 14:32:07,2021-06-11 14:32:07,Unable to console.log an API response which works in another project,<javascript><graphql>,1,2,0,2021-06-11 12:19:51
67953103,2,,57797385,0,,"<p><strong>I had the same problem. In my case, I accidentally put a <code>&lt;body&gt;</code>-tag instead of a <code>&lt;div&gt;</code>-tag in my /layouts/default.vue file.</strong></p>&#xA;<p>This problem was also indicated in the console of the browser by</p>&#xA;<blockquote>&#xA;<p>[Vue warn]: The client-side rendered virtual DOM tree is not matching&#xA;server-rendered content.</p>&#xA;</blockquote>&#xA;<p>In your case it may be another html tag which causes the mismatch between client-side and server-side rendering.</p>&#xA;",2912903,,,,2021-06-12 21:21:36,"",,0,1,0,2021-06-12 21:21:36
67958937,2,,67925324,2,,"<p>bug with React Native 0.62+ that messes up the configuration for multiform requests. It can be fixed by commenting out line 43 in android/app/src/debug/java/com/maxyride/app/drivers/ReactNativeFlipper.java:</p>&#xA;<pre class=""lang-java prettyprint-override""><code>//builder.addNetworkInterceptor(new FlipperOkhttpInterceptor(networkFlipperPlugin)); &#xA;</code></pre>&#xA;",10791541,,,,2021-06-13 13:46:28,"",,0,0,0,2021-06-13 13:46:28
67969528,1,,,3,179,"<p>In NextJS app, I am trying to include unit test using Jest and react-testing-library</p>&#xA;<p>When I tried to test using <code>yarn test</code>, I am getting the following error</p>&#xA;<pre><code> console.error&#xA;Error: Uncaught [TypeError: React.createContext is not a function]&#xA;    at reportException (/home/admin-1/Documents/unit-test/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:62:24)&#xA;</code></pre>&#xA;<p>Current react version:</p>&#xA;<pre><code>&quot;react&quot;: &quot;^17.0.2&quot;,&#xA;&quot;react-dom&quot;: &quot;^17.0.2&quot;,&#xA;</code></pre>&#xA;<p>Current devDependencies :</p>&#xA;<pre><code>&quot;@babel/core&quot;: &quot;^7.8.6&quot;,&#xA;&quot;@babel/preset-env&quot;: &quot;^7.8.6&quot;,&#xA;&quot;@babel/preset-react&quot;: &quot;^7.8.3&quot;,&#xA;&quot;@testing-library/jest-dom&quot;: &quot;^5.1.1&quot;,&#xA;&quot;@testing-library/react&quot;: &quot;^9.4.1&quot;,&#xA;&quot;babel-jest&quot;: &quot;^25.1.0&quot;,&#xA;&quot;babel-plugin-styled-components&quot;: &quot;^1.10.7&quot;,&#xA;&quot;jest&quot;: &quot;^25.1.0&quot;,&#xA;&quot;jest-axe&quot;: &quot;^3.3.0&quot;,&#xA;&quot;prettier&quot;: &quot;^2.2.1&quot;,&#xA;&quot;react-test-renderer&quot;: &quot;^16.13.0&quot;&#xA;</code></pre>&#xA;<p>Tried to:&#xA;Update my react and react-dom node modules (did not help)</p>&#xA;",16184553,,16184553,2021-06-14 12:29:36,2021-06-14 12:29:36,"TypeError: React.createContext is not a function with Apollo, GraphQL and Jest",<jestjs><graphql><next.js><apollo><react-testing-library>,0,1,0,2021-06-14 11:35:56
67971639,1,67976184,,2,1043,"<p>Got a small problem (I guess). I created c# rest web API on docker swarm environment. Rest API is working properly -  tested via the postman. Then I tried to compose Hasura service on the same docker swarm environment. The console is working properly also. The problem is with query action.</p>&#xA;<p>Code:</p>&#xA;<p><strong>Action definition</strong>:</p>&#xA;<pre><code>type Query {&#xA;  getWeatherForecast : [WeatherForecastResonse]&#xA;}&#xA;</code></pre>&#xA;<p><strong>New types definition</strong>:</p>&#xA;<pre><code>type WeatherForecastResonse {&#xA;  date : String&#xA;  temperatureC : Int&#xA;  temperature : Int&#xA;  summary : String&#xA;}&#xA;</code></pre>&#xA;<p><strong>Handler</strong>:</p>&#xA;<pre><code>http://{api ip}:{api port}/WeatherForecast&#xA;</code></pre>&#xA;<p>While trying to execute query:</p>&#xA;<pre><code>query MyQuery {&#xA;  getWeatherForecast {&#xA;    temperature&#xA;    summary&#xA;    date&#xA;    temperatureC&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>All I got from response is error with json:</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;extensions&quot;: {&#xA;        &quot;internal&quot;: {&#xA;          &quot;error&quot;: &quot;invalid json: Error in $: not enough input&quot;,&#xA;          &quot;response&quot;: {&#xA;            &quot;status&quot;: 405,&#xA;            &quot;body&quot;: &quot;&quot;,&#xA;            &quot;headers&quot;: [&#xA;              {&#xA;                &quot;value&quot;: &quot;Mon, 14 Jun 2021 13:54:00 GMT&quot;,&#xA;                &quot;name&quot;: &quot;Date&quot;&#xA;              },&#xA;              {&#xA;                &quot;value&quot;: &quot;Kestrel&quot;,&#xA;                &quot;name&quot;: &quot;Server&quot;&#xA;              },&#xA;              {&#xA;                &quot;value&quot;: &quot;0&quot;,&#xA;                &quot;name&quot;: &quot;Content-Length&quot;&#xA;              },&#xA;              {&#xA;                &quot;value&quot;: &quot;GET&quot;,&#xA;                &quot;name&quot;: &quot;Allow&quot;&#xA;              }&#xA;            ]&#xA;          },&#xA;          &quot;request&quot;: {&#xA;            &quot;body&quot;: {&#xA;              &quot;session_variables&quot;: {&#xA;                &quot;x-hasura-role&quot;: &quot;admin&quot;&#xA;              },&#xA;              &quot;input&quot;: {},&#xA;              &quot;action&quot;: {&#xA;                &quot;name&quot;: &quot;getWeatherForecast&quot;&#xA;              }&#xA;            },&#xA;            &quot;url&quot;: &quot;http://{api ip}:{api port}/WeatherForecast&quot;,&#xA;            &quot;headers&quot;: []&#xA;          }&#xA;        },&#xA;        &quot;path&quot;: &quot;$&quot;,&#xA;        &quot;code&quot;: &quot;unexpected&quot;&#xA;      },&#xA;      &quot;message&quot;: &quot;not a valid json response from webhook&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>I got desired response by using postman white calling: http://{api ip}:{api port}/WeatherForecast  (GET method)</p>&#xA;<p>Where should I improve, to finally get desired result from rest api?</p>&#xA;<p>P.S. hasura version: v2.0.0-alpha.4  (tried also with v1.3.3)</p>&#xA;<p><strong>UPDATE:</strong>&#xA;Released a new version of web API. Inside WeatherForecastController included a new method with POST attribute. Query remained the same, but now graphql query returns what I want.</p>&#xA;<p>So the question is: <strong>Is it possible to call/access web api methods with GET attribute with Hasura action query?</strong></p>&#xA;",10612332,,10612332,2021-06-14 15:45:42,2022-06-29 09:05:23,Hasura query action exception,<docker><graphql><hasura>,2,0,0,2021-06-14 13:59:22
68020116,1,,,2,179,<p>Is there a way to automatically log any queries that involve a deprecated field (i.e. one with a non-null <code>deprecation_reason</code>)?</p>&#xA;<p>It'd be helpful to help work out whether a deprecated field was still in use or could be properly removed.</p>&#xA;,1990221,,,,2021-06-17 13:13:08,Log use of deprecated fields in python graphene,<graphene-python><graphql-python>,0,0,0,2021-06-17 13:13:08
68025376,2,,68022116,0,,"<p>Containers can inter-communicate using container names (e.g. <code>wordpress</code>, <code>php</code>, <code>mysql</code> etc.) and original ports (<code>80</code>, <code>3000</code>).</p>&#xA;<p>Port mappings are used for external access - in this case: docker internal <code>wordpress:80</code> into [docker] host <code>localhost:8000</code>.</p>&#xA;<p>You can check this - log into <code>frontend</code> container and run (or run 'externally') <code>wget http://wordpress/index.php</code>. Response should look like:</p>&#xA;<pre><code>Connecting to php (172.16.238.10:80)&#xA;saving to 'index.php'&#xA;</code></pre>&#xA;<p>In my case (routing mode, internal networks) you can see the container IP and port - notice, original <code>80</code>.</p>&#xA;",6124657,,6124657,2021-06-18 08:08:25,2021-06-18 08:08:25,"",,0,0,0,2021-06-17 19:18:45
68033744,2,,68023464,0,,"<p>First thing i think you missed is <code>docker-compose build</code>. After that you should <code>docker-compose up</code>. Also you have to know what port your docker is configured to. The default value is 80, however your port may already be in use and it is not good practice to leave the docker port to 80. What you should do in your <code>Dockerfile</code> is:</p>&#xA;<pre><code>EXPOSE 5050 #or any other port you want&#xA;CMD [&quot;rails&quot;, &quot;server&quot;, &quot;-b&quot;, &quot;0.0.0.0&quot;]&#xA;</code></pre>&#xA;<p><code>EXPOSE 5050</code> exposes the port 5050 on your local machine for the docker to use&#xA;<code>CMD [&quot;rails&quot;, &quot;server&quot;, &quot;-b&quot;, &quot;0.0.0.0&quot;]</code> lets you use any ip address in its network and you dont have to worry about managing the ip address</p>&#xA;<p>and in your <code>docker-compose.yml</code>:</p>&#xA;<pre><code>your-api:&#xA;    ports:&#xA;      - 5050:5050&#xA;   &#xA;</code></pre>&#xA;<p>So when <code>docker-compose build</code> runs it will compose your docker and open the port 5050 for it to use so then you can access <code>localhost:5050</code> and have access to your dockerised api and endpoints.</p>&#xA;<p>That way you will know for sure your POST request is sent to the docker api when you <code>POST localhost:5050/graphql</code></p>&#xA;<p><a href=""https://docs.docker.com/samples/rails/"" rel=""nofollow noreferrer"">Please have a look at the docker for rails documentation, it will be helpfull</a></p>&#xA;",15887393,,,,2021-06-18 10:43:15,"",,0,0,0,2021-06-18 10:43:15
68040091,1,,,2,446,"<p>I'm using <a href=""https://nextjs.org/docs/api-routes/introduction"" rel=""nofollow noreferrer"">API Routes</a> on a Next.JS app with Apollo-Server, to create a GraphQL API wrapper around a REST endpoint. But I'm running into an issue if the project has a <a href=""https://nextjs.org/docs/api-reference/next.config.js/basepath"" rel=""nofollow noreferrer"">bathPath</a>.</p>&#xA;<p>I've been following <a href=""https://github.com/vercel/next.js/tree/canary/examples/api-routes-graphql"" rel=""nofollow noreferrer"">this example</a>, and a <a href=""https://www.youtube.com/watch?v=y34ym0-KZ8A&amp;t=1461s"" rel=""nofollow noreferrer"">video tutorial on youtube</a>.&#xA;I've replicated my issue by using the <a href=""https://github.com/leighhalliday/apollo-nextjs"" rel=""nofollow noreferrer"">repo</a> from that tutorial. Upon running that code <code>$ yarn dev</code>, and navigating to http://localhost:3000/api/graphql the GraphQl playground shows up, and works as expected.</p>&#xA;<p>However if I add a basepath to the project then the graphQl playground still shows up fine at http://localhost:300/basepath/api/graphql but it gives me the error of &quot;Server cannot be reached&quot; and shows a 404 error in the network tab on the dev tools.</p>&#xA;<p>To add the base path I created a <strong>next.config.js</strong> and added</p>&#xA;<pre><code>module.exports = {&#xA;   basePath: '/basepath'&#xA;}&#xA;</code></pre>&#xA;<p>In <strong>pages/api/graphql.ts</strong> I updated the path from <code>/api/graphql</code> to <code>/basepath/api/graphql</code></p>&#xA;<pre><code>import { ApolloServer } from &quot;apollo-server-micro&quot;;&#xA;import { schema } from &quot;src/schema&quot;;&#xA;&#xA;const server = new ApolloServer({ schema });&#xA;const handler = server.createHandler({ path: &quot;/somewhere/api/graphql&quot; });&#xA;&#xA;export const config = {&#xA;  api: {&#xA;    bodyParser: false,&#xA;  },&#xA;};&#xA;&#xA;export default handler;&#xA;</code></pre>&#xA;<p>In <strong>src/apollo.ts</strong> I updated the HttpLink uri from <code>/api/graphql</code> to <code>/basepath/api/graphql</code></p>&#xA;<pre><code>import {&#xA;  ApolloClient,&#xA;  InMemoryCache,&#xA;  NormalizedCacheObject,&#xA;} from &quot;@apollo/client&quot;;&#xA;import { useMemo } from &quot;react&quot;;&#xA;&#xA;let apolloClient: ApolloClient&lt;NormalizedCacheObject&gt;;&#xA;&#xA;function createIsomorphicLink() {&#xA;  if (typeof window === &quot;undefined&quot;) {&#xA;    // server&#xA;    const { SchemaLink } = require(&quot;@apollo/client/link/schema&quot;);&#xA;    const { schema } = require(&quot;./schema&quot;);&#xA;    return new SchemaLink({ schema });&#xA;  } else {&#xA;    // client&#xA;    const { HttpLink } = require(&quot;@apollo/client/link/http&quot;);&#xA;    return new HttpLink({ uri: &quot;/bathpath/api/graphql&quot; });&#xA;  }&#xA;}&#xA;&#xA;function createApolloClient() {&#xA;  return new ApolloClient({&#xA;    ssrMode: typeof window === &quot;undefined&quot;,&#xA;    link: createIsomorphicLink(),&#xA;    cache: new InMemoryCache(),&#xA;  });&#xA;}&#xA;&#xA;export function initializeApollo(initialState = null) {&#xA;  const _apolloClient = apolloClient ?? createApolloClient();&#xA;&#xA;  if (initialState) {&#xA;    _apolloClient.cache.restore(initialState);&#xA;  }&#xA;&#xA;  if (typeof window === &quot;undefined&quot;) return _apolloClient;&#xA;  apolloClient = apolloClient ?? _apolloClient;&#xA;&#xA;  return apolloClient;&#xA;}&#xA;&#xA;export function useApollo(initialState) {&#xA;  const store = useMemo(() =&gt; initializeApollo(initialState), [initialState]);&#xA;  return store;&#xA;}&#xA;</code></pre>&#xA;<p>Any ideas why adding a basepath would break this setup? and what I'd need to do to fix it?</p>&#xA;<p>This is my first time posting on stack overflow, so I hope my description is good enough, please do ask if I've missed anything and thanks for your help in advance!</p>&#xA;",16262141,,,,2021-06-18 18:41:41,API Routes on Next.JS with Apollo-Server : why does using a basePath cause error?,<graphql><next.js><apollo><apollo-client><apollo-server>,0,1,0,2021-06-18 18:41:41
68049055,1,,,1,3004,"<p>Hello guys I am trying to setup an graphql serverless project, but I am having problems running the graphql server, or at least the graphql playground.&#xA;When I run the server via <code>sls offline start</code>, the playground lunches it cannot reach my schema somehow.&#xA;<a href=""https://i.stack.imgur.com/WXXLM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WXXLM.png"" alt="""" /></a></p>&#xA;<p>My graphql server <code>graphql.ts</code> looks like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { ApolloServer, gql, IResolvers, makeExecutableSchema } from 'apollo-server-lambda';&#xA;&#xA;// // Construct a schema, using GraphQL schema language&#xA;const typeDefs = gql`&#xA;  type Query {&#xA;    hello: String&#xA;  }&#xA;`;&#xA;&#xA;// // Provide resolver functions for your schema fields&#xA;const resolvers = {&#xA;  Query: {&#xA;    hello: () =&gt; 'Hello world!', &#xA;  },&#xA;};&#xA;&#xA;&#xA;const schema = makeExecutableSchema({&#xA;    typeDefs,&#xA;    resolvers: resolvers as IResolvers,&#xA;});&#xA;&#xA;const server = new ApolloServer({ schema });&#xA;&#xA;export const graphqlHandler = server.createHandler({&#xA;  cors: {&#xA;    methods: [&quot;GET&quot;, &quot;POST&quot;],&#xA;    origin: 'http://localhost:3000',&#xA;  },&#xA;});&#xA;</code></pre>&#xA;<p>And my <code>serverless.yml</code> file like this:</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>service: test&#xA;&#xA;frameworkVersion: '2'&#xA;&#xA;provider:&#xA;  name: aws&#xA;  runtime: nodejs14.x&#xA;  lambdaHashingVersion: 20201221&#xA;&#xA;plugins:&#xA;  - serverless-webpack&#xA;  - serverless-offline&#xA;&#xA;custom:&#xA;  webpack:&#xA;    webpackConfig: 'webpack.config.ts'&#xA;    includeModules: true&#xA;&#xA;functions:&#xA;  graphql:&#xA;    handler: src/graphql.graphqlHandler&#xA;    events:&#xA;    - http:&#xA;        path: graphql&#xA;        method: get&#xA;        cors: true&#xA;    - http:&#xA;        path: graphql&#xA;        method: post&#xA;        cors: true&#xA;</code></pre>&#xA;<p>But I guess the <code>serverless.yml</code> shouldn't be the problem because it runs and compiles correctly. And, as You can see the urls are the same as in the playground:</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>Serverless: Bundling with Webpack...&#xA;asset src/graphql.js 4.82 KiB [emitted] (name: src/graphql)&#xA;./src/graphql.ts 670 bytes [built] [code generated]&#xA;external &quot;apollo-server-lambda&quot; 42 bytes [built] [code generated]&#xA;webpack compiled successfully in 217 ms&#xA;Serverless: Watching for changes...&#xA;offline: Starting Offline: dev/us-east-1.&#xA;offline: Offline [http for lambda] listening on http://localhost:3002&#xA;offline: Function names exposed for local invocation by aws-sdk:&#xA;   ┌───────────────────────────────────────────────────────────────────────────┐&#xA;   │                                                                           │&#xA;   │   GET  | http://localhost:3000/dev/graphql                                │&#xA;   │   POST | http://localhost:3000/2015-03-31/functions/graphql/invocations   │&#xA;   │   POST | http://localhost:3000/dev/graphql                                │&#xA;   │   POST | http://localhost:3000/2015-03-31/functions/graphql/invocations   │&#xA;   │                                                                           │&#xA;   └───────────────────────────────────────────────────────────────────────────┘&#xA;</code></pre>&#xA;<p>My webpack config looks like this if it helps:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>module.exports = {&#xA;  context: __dirname,&#xA;  mode: slsw.lib.webpack.isLocal ? 'development' : 'production',&#xA;  entry: slsw.lib.entries,&#xA;  devtool: slsw.lib.webpack.isLocal ? 'eval-cheap-module-source-map' : 'source-map',&#xA;  resolve: {&#xA;    extensions: ['.mjs', '.json', '.ts'],&#xA;    symlinks: false,&#xA;    cacheWithContext: false,&#xA;    // plugins: [&#xA;    //   new TsconfigPathsPlugin({&#xA;    //     configFile: './tsconfig.paths.json',&#xA;    //   }),&#xA;    // ],&#xA;  },&#xA;  output: {&#xA;    libraryTarget: 'commonjs',&#xA;    path: path.join(__dirname, '.webpack'),&#xA;    filename: '[name].js',&#xA;  },&#xA;  optimization: {&#xA;    concatenateModules: false,&#xA;  },&#xA;  target: 'node',&#xA;  externals: [nodeExternals()],&#xA;  module: {&#xA;    rules: [&#xA;      // all files with a `.ts` or `.tsx` extension will be handled by `ts-loader`&#xA;      {&#xA;        test: /\.(tsx?)$/,&#xA;        loader: 'ts-loader',&#xA;        exclude: [&#xA;          [&#xA;            path.resolve(__dirname, 'node_modules'),&#xA;            path.resolve(__dirname, '.serverless'),&#xA;            path.resolve(__dirname, '.webpack'),&#xA;          ],&#xA;        ],&#xA;        options: {&#xA;          transpileOnly: true,&#xA;          experimentalWatchApi: true,&#xA;        },&#xA;      },&#xA;      {&#xA;        test: /\.graphql?$/,&#xA;        use: [&#xA;          {&#xA;            loader: 'webpack-graphql-loader',&#xA;            options: {&#xA;              validate: true,&#xA;              schema: &quot;./src/schema.graphql&quot;&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    ],&#xA;  },&#xA;  plugins: [],&#xA;};&#xA;</code></pre>&#xA;<p>Can someone see what I am missing? Thank You!</p>&#xA;<p><strong>UPDATE</strong> it seems that it is not working when running local. When I deploy the lambda it works perfectly fine. I do not know if its something with the <code>serverless offline</code> or my config.</p>&#xA;",11148124,,11148124,2021-06-19 18:53:26,2021-07-13 10:21:58,GraphQL error: Failed to fetch schema. Please check your connection,<webpack><aws-lambda><graphql><serverless><graphql-playground>,0,0,0,2021-06-19 17:03:37
68049642,2,,68049423,1,,"<p>your problem arises from reading the data before it is loaded.</p>&#xA;<p>depending on your js settings you should be able to use one of the following:</p>&#xA;<p><code>&lt;span&gt;{{ post?.author.node.name }}&lt;/span&gt;</code></p>&#xA;<p>or <code>&lt;span&gt;{{ post ? post.author.node.name : '' }}&lt;/span&gt;</code></p>&#xA;<hr />&#xA;<p>according to the Vue Apollo documentation it could also be a problem with the duplication of the query</p>&#xA;<pre class=""lang-html prettyprint-override""><code>&lt;script&gt;&#xA;import { myQuery } from '~/graphql/posts'&#xA;&#xA;export default {&#xA;  data() {&#xA;    return {&#xA;      posts: [], // initialization&#xA;    }&#xA;  },&#xA;&#xA;  apollo: {&#xA;    posts: {&#xA;      prefetch: false, // to prevent SSR&#xA;      query: myQuery,&#xA;      update: data =&gt; {&#xA;        console.log('overwrite posts with new data', data.posts)&#xA;        return data.posts&#xA;      }&#xA;    },&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;<p>further as there seem to be cases in which the author has more than one entry (perhaps co authors?) I would try to update the author rendering to the following:</p>&#xA;<pre class=""lang-html prettyprint-override""><code>&lt;template&gt;&#xA;    &lt;section class=&quot;featured-projects&quot;&gt;&#xA;      &lt;div class=&quot;featured-projects__wrapper&quot;&gt;&#xA;        &lt;article v-for=&quot;post in posts&quot; :key=&quot;post.id&quot;&gt;&#xA;          &lt;p&gt;{{ post.id }}&lt;/p&gt;&#xA;          &lt;div v-if=&quot;Array.isArray(post.author)&quot;&gt;&#xA;            first author is: {{ post.author[0].node.name }}&#xA;          &lt;/div&gt;&#xA;          &lt;div v-else-if=&quot;post.author&quot;&gt;&#xA;           author is: {{ post.author.node.name }}&#xA;          &lt;/div&gt;&#xA;          &lt;div v-else=&quot;post.author&quot;&gt;&#xA;           no author&#xA;          &lt;/div&gt;&#xA;        &lt;/article&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/section&gt;&#xA;  &lt;/section&gt;&#xA;&lt;/template&gt;&#xA;</code></pre>&#xA;",306838,,306838,2021-06-22 18:45:02,2021-06-22 18:45:02,"",,0,2,0,2021-06-19 18:18:21
68066676,1,69964490,,0,436,"<p>I have a React application with a GraphQL client (Relay).&#xA;I need to make an introspection query to get all the types of a certain enum.&#xA;This is my query:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { graphql } from 'react-relay'&#xA;&#xA;export const corporationTypeEnumQuery = graphql`&#xA;  query corporationTypeEnumQuery {&#xA;    __type(name: &quot;CorporationTypeEnum&quot;) {&#xA;      enumValues {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;&#xA;</code></pre>&#xA;<p>When I try to compile the app, Relay throws the following error:</p>&#xA;<pre><code>Unknown field '__type' on type 'Query'&#xA;</code></pre>&#xA;<p>When I try the exact same query on GraphIQL (the playground that the server offers me), there is no error, and the query is successful.</p>&#xA;<p>Please tell me what could be wrong with my GraphQL query. Any suggestions are well received.</p>&#xA;",13933985,,,,2021-11-14 15:32:40,GraphQL Relay introspection query fails: Unknown field '__type' on type 'Query',<graphql><graphql-js><relay><react-relay>,1,0,0,2021-06-21 10:55:33
68075712,2,,68075395,0,,"<p>I think I found a temporary solution. The main problem is that my computer has  only like 2 GB left of RAM space. So the graphql playground was fetching my local schema every 2 seconds. Here is the playground config:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;editor.cursorShape&quot;: &quot;line&quot;,&#xA;  &quot;editor.fontFamily&quot;: &quot;'Source Code Pro', 'Consolas', 'Inconsolata', 'Droid Sans Mono', 'Monaco', monospace&quot;,&#xA;  &quot;editor.fontSize&quot;: 14,&#xA;  &quot;editor.reuseHeaders&quot;: true,&#xA;  &quot;editor.theme&quot;: &quot;dark&quot;,&#xA;  &quot;general.betaUpdates&quot;: false,&#xA;  &quot;prettier.printWidth&quot;: 80,&#xA;  &quot;prettier.tabWidth&quot;: 2,&#xA;  &quot;prettier.useTabs&quot;: false,&#xA;  &quot;request.credentials&quot;: &quot;omit&quot;,&#xA;  &quot;schema.disableComments&quot;: true,&#xA;  &quot;schema.polling.enable&quot;: false, // Fetch enabled&#xA;  &quot;schema.polling.endpointFilter&quot;: &quot;*localhost*&quot;,&#xA;  &quot;schema.polling.interval&quot;: 2000, &lt;---- Fetch every 2 seconds&#xA;  &quot;tracing.hideTracingResponse&quot;: true,&#xA;  &quot;queryPlan.hideQueryPlanResponse&quot;: true&#xA;}&#xA;</code></pre>&#xA;<p>Setting the <code>schema.polling.enable</code> to <code>false</code> solved the problem, but I suppose I have now to refetch manually the schema every time it changes.</p>&#xA;<p>I still don't know why is the <code>node</code> process increasing in every graphql fetch, even if the schema doesn't change.</p>&#xA;",11148124,,,,2021-06-21 23:07:09,"",,0,0,0,2021-06-21 23:07:09
68085316,2,,67992205,0,,"<p>I was getting the same bug, and it looked like I had tried everything to solve it, including following the instruction in <a href=""https://stackoverflow.com/questions/59920824/usequery-returns-undefined-but-returns-data-on-gql-playground"">useQuery returns undefined, But returns data on gql playground</a>, but it still didn't work.</p>&#xA;<p>Later, I change the variable name—in your case <code>$id</code>—to something else, so it's different from the name in <code>typeDefs</code> (<code>getCategoryProduct(id:ID)</code>), and it now works for me .</p>&#xA;",12515048,,3025856,2021-07-02 01:04:36,2021-07-02 01:04:36,"",,0,0,0,2021-06-22 14:22:47
68086545,1,,,0,65,<p>Has anyone run into 'Cannot read property 'problems' of undefined?</p>&#xA;<p>happening into /node_modules/@sanity/schema/lib/sanity/groupProblems.js when trying to run graphql deploy</p>&#xA;<p>I can provide more info on what I added to the schema but it's nothing related to groupProblems I added. Not even sure what that module is.</p>&#xA;<p>Any help would be appreciated.</p>&#xA;<p>Thanks!</p>&#xA;,16260090,,,,2021-06-22 15:56:34,Sanity groupProblems.js error when running graphql deploy,<graphql><sanity>,1,1,0,2021-06-22 15:32:26
68101369,1,68102089,,1,324,"<p>I'm not super confident in terminals/CMD and I'm trying to install Nuxt's Apollo module after setting up a Nuxt project via <code>npx create-nuxt-app</code>. When I do, via <code>npm install @nuxtjs/apollo@latest</code> in my Nuxt directory, I get the following gumf:</p>&#xA;<pre><code>npm WARN tailwindcss@2.2.2 requires a peer of autoprefixer@^10.0.2 but none is installed. You must install peer dependencies yourself.&#xA;npm WARN vue-cli-plugin-apollo@0.22.2 requires a peer of @vue/cli-shared-utils@^3.0.0 || ^4.0.0-0 but none is installed. You must install peer dependencies yourself.&#xA;npm WARN apollo-link-persisted-queries@0.2.2 requires a peer of graphql@^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 but none is installed. You must install peer dependencies yourself.&#xA;npm WARN ts-node@8.10.2 requires a peer of typescript@&gt;=2.7 but none is installed. You must install peer dependencies yourself.&#xA;npm WARN @apollographql/graphql-language-service-interface@2.0.2 requires a peer of graphql@^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 but none is installed. You must install peer dependencies yourself.&#xA;npm WARN @apollographql/graphql-language-service-utils@2.0.2 requires a peer of graphql@^0.12.0 || ^0.13.0 || ^14.0.0 but none is installed. You must install peer dependencies yourself.&#xA;npm WARN @apollographql/graphql-language-service-types@2.0.2 requires a peer of graphql@^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 but none is installed. You must install peer dependencies yourself.&#xA;npm WARN @apollographql/graphql-language-service-parser@2.0.2 requires a peer of graphql@^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 but none is installed. You must install peer dependencies yourself.&#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.13 (node_modules\watchpack-chokidar2\node_modules\fsevents):&#xA;npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;})&#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.3.2 (node_modules\fsevents):&#xA;npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;})&#xA;</code></pre>&#xA;<p>I've no idea if this is significant. It then invites me to run <code>npm audit fix</code>, which I did, and it then tells me it was able to fix 0 of 15 issues and that they need manually fixing.</p>&#xA;<p>What am I doing wrong?</p>&#xA;",1352288,,8816585,2021-06-23 14:46:09,2021-06-23 14:46:09,NPM warnings when installing @nuxtjs/apollo,<npm><command-line><graphql><nuxt.js><apollo>,1,0,0,2021-06-23 14:01:45
68117211,2,,68112581,2,,"<p>I finally solved this by adding this helmet configuration :</p>&#xA;<pre><code>app.use(&#xA;  helmet({&#xA;    contentSecurityPolicy:&#xA;      process.env.NODE_ENV === 'production' ? undefined : false,&#xA;  }),&#xA;);&#xA;</code></pre>&#xA;",11698446,,,,2021-06-24 13:58:48,"",,0,1,0,2021-06-24 13:58:48
68150420,2,,68148671,0,,"<p>Your certificate has been issued for the domain <code>sketchdaily.club</code> and only this name is included in the certificate. If you now connect to the server using it's IP address the used server name <code>167.99.145.82</code> does not match the name used in the certificate <code>sketchdaily.club</code> and thus the client will refuse connection because the server can not be trusted.</p>&#xA;<p>Just try it out and open <code>https://167.99.145.82</code> in any web browser - it will not work. Therefore for HTTPS you have to use the DNS name of your server or change the registration at Let's Encrypt to also include the IP address of your server into the certificate as &quot;Subject alternative name&quot;, then you can continue to use the IP address.</p>&#xA;",150978,,,,2021-06-27 10:57:58,"",,0,4,0,2021-06-27 10:57:58
68164992,2,,68114615,27,,"<p>After extensive searching, documentation reading and etc. I figured out how I could make this work.</p>&#xA;<p>In the GraphQL playground settings (gear icon), located in the upper right corner of the window:</p>&#xA;<p><a href=""https://i.stack.imgur.com/19LLt.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/19LLt.png"" alt=""Gear icon in graphql playground"" /></a></p>&#xA;<p>I changed the line <code>&quot;request.credentials&quot;</code> to <code>&quot;include&quot;</code> and SAVING the settings in the UI. Read more <a href=""https://github.com/graphql/graphql-playground#settings"" rel=""noreferrer"">here</a>.&#xA;This line is taken directly from the documentation:</p>&#xA;<pre><code>'request.credentials': 'omit', // possible values: 'omit', 'include', 'same-origin'&#xA;</code></pre>&#xA;<p>Then following that, I opened the developer tools window (usually F12), went to the tab <code>Application</code>. In here I simply added a cookie as seen in the screenshot. That cookie was sent together with my request.</p>&#xA;<p><a href=""https://i.stack.imgur.com/fg56X.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/fg56X.png"" alt=""Developer tools application tab"" /></a></p>&#xA;",2302843,,,,2021-06-28 14:17:31,"",,0,2,0,2021-06-28 14:17:31
68184019,1,,,0,38,"<p>I'm getting the following console error in my terminal and don't know how to solve it.</p>&#xA;<p>I am logging with correct information and don't have any error in my code.</p>&#xA;<p>To enter to my aplication I need to log in on form an then enter.  Everything works fine until there but while working on my app and doing some functionalities that it has in my <code>localhost:/4444</code> I get the following error and then the app stop running and the local server lose the connection.</p>&#xA;<p><a href=""https://i.stack.imgur.com/TbyLJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TbyLJ.png"" alt=""enter image description here"" /></a>&#xA;<a href=""https://i.stack.imgur.com/z1DTZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/z1DTZ.png"" alt=""enter image description here"" /></a></p>&#xA;",15053170,,15053170,2021-06-29 18:37:59,2021-06-29 18:37:59,Error while running react app with next js,<reactjs><typescript><cmd><next.js><apollo>,0,4,0,2021-06-29 18:36:17
68203523,2,,68202859,0,,"<p>How to create react app and deploy to CloudFront.</p>&#xA;<p><a href=""https://www.prisma.io/blog/how-to-use-create-react-app-with-graphql-apollo-62e574617cff"" rel=""nofollow noreferrer"">https://www.prisma.io/blog/how-to-use-create-react-app-with-graphql-apollo-62e574617cff</a></p>&#xA;<p><a href=""https://developer.okta.com/blog/2018/10/11/build-simple-web-app-with-express-react-graphql"" rel=""nofollow noreferrer"">https://developer.okta.com/blog/2018/10/11/build-simple-web-app-with-express-react-graphql</a></p>&#xA;",9851598,,,,2021-07-01 02:22:33,"",,0,0,0,2021-07-01 02:22:33
68210416,2,,68208726,2,,"<p>I'm not a graphQL expert but I still achieved to work with it the few last months. At the end, I found out that <code>graphql-tag</code> is only useful when using inline queries directly into your <code>.vue</code> components.</p>&#xA;<p>Like in this <a href=""https://apollo.vuejs.org/guide/apollo/#queries"" rel=""nofollow noreferrer"">documentation section</a></p>&#xA;<pre class=""lang-html prettyprint-override""><code>&lt;template&gt;&#xA;  &lt;div&gt;{{ hello }}&lt;/div&gt;&#xA;&lt;/template&gt;&#xA;&#xA;&lt;script&gt;&#xA;import gql from 'graphql-tag'&#xA;&#xA;export default {&#xA;  apollo: {&#xA;    // Simple query that will update the 'hello' vue property&#xA;    hello: gql`query {&#xA;      hello&#xA;    }`,&#xA;  },&#xA;}&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;<p>Meanwhile, since it's not very flexible, I've ended up importing and using it in Vuex like this</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import myGqlQuery from '~/apollo/queries/test.gql'&#xA;&#xA;const actions = {&#xA;  async myFancyVuexAction({ commit, dispatch }) {&#xA;    try {&#xA;      const { errors, data } = await this.app.apolloProvider.defaultClient.query({ query: myGqlQuery })&#xA;    } else {&#xA;      // error&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>With the <code>.gql</code> imported file being written like this</p>&#xA;<pre><code>query{&#xA;  Entity {&#xA;    things&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>For this kind of configuration, you <strong>don't</strong> need <code>graphql-tag</code>. Also, some people have some flexible configuration inside of their graphql files, they are using vanilla <code>.js</code> files and a mix of their actual GQL query + <code>graphql-tag</code> (needed if it's not a <code>.gql</code> file).</p>&#xA;<hr />&#xA;<p>It is also useful if using TypeScript, here is an example: <a href=""https://github.com/DNature/chef-assignment/blob/master/apollo/queries/index.ts"" rel=""nofollow noreferrer"">https://github.com/DNature/chef-assignment/blob/master/apollo/queries/index.ts</a></p>&#xA;<p>So yeah, those are my 2cts. Not a pro, but things that I understood from my few months fiddling with GraphQL.</p>&#xA;",8816585,,,,2021-07-01 12:42:34,"",,0,0,0,2021-07-01 12:42:34
68227102,1,,,0,300,"<p>I am trying to set up WebSockets in GCP with <code>graphql</code> subscriptions and <code>Nginx</code> but, it is not working as i am getting an issue with the <code>Nginx</code> config.</p>&#xA;<pre><code>server {&#xA;    listen 80;&#xA;    root web-react/build;&#xA;    index index.html;&#xA;&#xA;    location / {&#xA;        try_files $uri /index.html;&#xA;&#xA;    }&#xA;&#xA;    location ^~/graphql {&#xA;    proxy_pass http://localhost:4000/graphql;&#xA;    }&#xA;   &#xA;    location /websocket{&#xA;    proxy_pass http://graphql;&#xA;    proxy_http_version 1.1;&#xA;    proxy_set_header Upgrade $http_upgrade;&#xA;    proxy_set_header Connection &quot;upgrade&quot;;&#xA;    proxy_set_header Host $http_host;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",12028817,,10312071,2021-07-02 22:34:01,2021-07-02 22:34:01,"Websocket with Apollo Express, Nginx and docker-compose",<javascript><reactjs><nginx><google-cloud-platform><graphql>,0,3,0,2021-07-02 14:40:29
68243814,1,,,2,562,"<p>When I'm webpacking my apollo lambda app I consistently get the following error displayed at the bottom.</p>&#xA;<p>I've found &quot;solutions&quot; to this problem on git issue boards.&#xA;<a href=""https://github.com/apollographql/apollo-server/issues/4983"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-server/issues/4983</a></p>&#xA;<p>Many of which suggest that the problem is multiple copies of graphql being found in node_modules But that doesn't seem to be the case for me:</p>&#xA;<pre><code>$ npm ls graphql&#xA;server@1.0.0 /Git/myapp&#xA;└── graphql@15.5.1 &#xA;</code></pre>&#xA;<p>I've added the following which is purported to be a solution. But still no joy.</p>&#xA;<pre><code>graphql$: path.resolve(__dirname, './node_modules/graphql/index.js'),&#xA;&#xA;</code></pre>&#xA;<pre><code>const path = require(&quot;path&quot;)&#xA;const nodeExternals = require('webpack-node-externals');&#xA;&#xA;&#xA;const config = {&#xA;  mode: 'production',&#xA;  entry: {&#xA;    ShopApiHandler: &quot;./graphql/shop-api/handler.ts&quot;, // produces lambda handler ShopApiHandler/index.handler&#xA;  },&#xA;  target: 'node',&#xA;  module: {&#xA;    rules: [&#xA;        {&#xA;            test: /\.(graphql|gql)$/,&#xA;            loader: 'graphql-tag/loader',&#xA;            exclude: /node_modules/,&#xA;          },&#xA;      // all files with a `.ts` or `.tsx` extension will be handled by `ts-loader`&#xA;      {&#xA;        test: /\.(tsx?)$/,&#xA;        loader: 'ts-loader',&#xA;        exclude: [&#xA;          [&#xA;            path.resolve(__dirname, 'node_modules'),&#xA;            path.resolve(__dirname, '.serverless'),&#xA;            path.resolve(__dirname, '.webpack'),&#xA;          ],&#xA;        ],&#xA;        options: {&#xA;          transpileOnly: true,&#xA;          experimentalWatchApi: true,&#xA;        },&#xA;      },&#xA;    ],&#xA;  },&#xA;  resolve: {&#xA;    extensions: ['.ts', '.js'],&#xA;    alias: {&#xA;      graphql$: path.resolve(__dirname, './node_modules/graphql/index.js'),&#xA;  },&#xA;  },&#xA;  output: {&#xA;    filename: &quot;[name]/index.js&quot;,&#xA;    path: path.resolve(__dirname, &quot;.dist/&quot;),&#xA;    libraryTarget: 'commonjs',&#xA;&#xA;  },&#xA;  //externals: [nodeExternals()], // in order to ignore all modules in node_modules folder&#xA;&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>When deploying the application to lambda and running it i get the following Error:</p>&#xA;<pre><code>2021-07-04T20:07:52.273+10:00   2021-07-04T10:07:52.272Z    undefined   ERROR   Uncaught Exception  {&quot;errorType&quot;:&quot;Error&quot;,&quot;errorMessage&quot;:&quot;Expected { __validationErrors: undefined, description: undefined, extensions: undefined, astNode: undefined, extensionASTNodes: [], _queryType: Query, _mutationType: Mutation, _subscriptionType: undefined, _directives: [@cacheControl, @include, @skip, @deprecated, @specifiedBy], _typeMap: { Query: Query, Mutation: Mutation, Shop: Shop, ID: ID, String: String, ShopInput: ShopInput, CacheControlScope: CacheControlScope, Upload: Upload, Int: Int, Boolean: Boolean, __Schema: __Schema, __Type: __Type, __TypeKind: __TypeKind, __Field: __Field, __InputValue: __InputValue, __EnumValue: __EnumValue, __Directive: __Directive, __DirectiveLocation: __DirectiveLocation }, _subTypeMap: {}, _implementationsMap: {} } to be a GraphQL schema.&quot;,&quot;stack&quot;:[&quot;Error: Expected { __validationErrors: undefined, description: undefined, extensions: undefined, astNode: undefined, extensionASTNodes: [], _queryType: Query, _mutationType: Mutation, _subscriptionType: undefined, _directives: [@cacheControl, @include, @skip, @deprecated, @specifiedBy], _typeMap: { Query: Query, Mutation: Mutation, Shop: Shop, ID: ID, String: String, ShopInput: ShopInput, CacheControlScope: CacheControlScope, Upload: Upload, Int: Int, Boolean: Boolean, __Schema: __Schema, __Type: __Type, __TypeKind: __TypeKind, __Field: __Field, __InputValue: __InputValue, __EnumValue: __EnumValue, __Directive: __Directive, __DirectiveLocation: __DirectiveLocation }, _subTypeMap: {}, _implementationsMap: {} } to be a GraphQL schema.&quot;,&quot;    at t.assertSchema (/var/task/ShopApiHandler/index.js:28:7335251)&quot;,&quot;    at b (/var/task/ShopApiHandler/index.js:28:7340500)&quot;,&quot;    at t.assertValidSchema (/var/task/ShopApiHandler/index.js:28:7340190)&quot;,&quot;    at C (/var/task/ShopApiHandler/index.js:28:7038732)&quot;,&quot;    at k (/var/task/ShopApiHandler/index.js:28:7037831)&quot;,&quot;    at Object.t.execute (/var/task/ShopApiHandler/index.js:28:7036943)&quot;,&quot;    at Object.t.generateSchemaHash (/var/task/ShopApiHandler/index.js:28:42878)&quot;,&quot;    at c.generateSchemaDerivedData (/var/task/ShopApiHandler/index.js:14:141)&quot;,&quot;    at new t.ApolloServerBase (/var/task/ShopApiHandler/index.js:2:171971)&quot;,&quot;    at new c (/var/task/ShopApiHandler/index.js:28:51635)&quot;]}&#xA;&#xA;</code></pre>&#xA;",1148920,,,,2021-07-04 10:34:09,Webpack - Expected [object] to be a GraphQL schema error thrown with apollo-server-lambda app,<webpack><graphql><apollo-server><graphql-js>,0,0,0,2021-07-04 10:34:09
68254791,2,,67038249,0,,"<p>Perhaps a bit too late, but here goes anyway:</p>&#xA;<p>According to the documentation under <a href=""https://hasura.io/docs/latest/graphql/core/deployment/graphql-engine-flags/reference.html#command-config"" rel=""nofollow noreferrer""><em>GraphQL engine server config reference -&gt; Command config</em></a> you need to set the <code>HASURA_GRAPHQL_ENABLE_CONSOLE</code> environment variable to enable the console served at <code>/console</code>. Alternatively for the <code>hasura serve</code> command, set the <code>--enable-console</code> option to <code>true</code>:</p>&#xA;<blockquote>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th>Flag</th>&#xA;<th>ENV variable</th>&#xA;<th>Description</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td>...</td>&#xA;<td>...</td>&#xA;<td>...</td>&#xA;</tr>&#xA;<tr>&#xA;<td><code>--enable-console &lt;true|false&gt;</code></td>&#xA;<td><code>HASURA_GRAPHQL_ENABLE_CONSOLE</code></td>&#xA;<td>Enable the Hasura Console (served by the server on <code>/</code> and <code>/console</code>) (default: false)</td>&#xA;</tr>&#xA;<tr>&#xA;<td>...</td>&#xA;<td>...</td>&#xA;<td>...</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div></blockquote>&#xA;<p>So for your <code>docker-compose.yml</code>:</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>...&#xA;      graphql-engine:&#xA;        image: hasura/graphql-engine:v1.2.2.cli-migrations-v2&#xA;        restart: always&#xA;        ports:&#xA;        - &quot;8081:8080&quot;&#xA;        volumes:&#xA;          - ./metadata:/hasura-metadata&#xA;        environment:&#xA;          HSR_GQL_DB_URL: &quot;postgres://postgres@postgres/db-dev-name&quot;&#xA;          HSR_GQL_ADMIN_SECRET: secret&#xA;          HASURA_GRAPHQL_ENABLE_CONSOLE: &quot;true&quot; # add this&#xA;        env_file:&#xA;          - .env&#xA;...&#xA;</code></pre>&#xA;<p>I also read somewhere to make sure to quote <code>true</code> and <code>false</code> values when using environment variables in Docker related situations. This has worked for me, so I would stick with it. Try it out.</p>&#xA;",9242346,,1839439,2021-07-05 10:51:05,2021-07-05 10:51:05,"",,0,0,0,2021-07-05 10:45:20
68258554,1,,,2,47,<p>I'm working on an Apollo Graphql real time app which is deployed to Heroku and contains both client and server files in the same project (the server is serving the create-react-app build files).&#xA;<br /></p>&#xA;<p>I'm trying to open a websocket connection between the client and the server and I can't figure out how to do so.&#xA;<br />&#xA;I tried to set the ws uri in the client to &quot;wss://&quot; but apollo returns an error which is saying that it's not a valid uri.&#xA;<br /></p>&#xA;<p>Previously I had two different projects (client / server) on heroku and I set in the uri the path to the server app and it's worked properly.&#xA;<br /></p>&#xA;<p>Thanks very much in advance for any help.</p>&#xA;,12781909,,,,2021-07-05 15:23:09,Apollo monorepo - WS connection,<heroku><graphql><apollo><apollo-client><apollo-server>,0,2,0,2021-07-05 15:23:09
68278929,1,,,0,190,"<p>I was going through the Hasura tutorial at the following site, and for some reason &quot;Hasura Console&quot; crashed.</p>&#xA;<p><a href=""https://auth0.com/blog/building-a-collaborative-todo-app-with-realtime-graphql-using-hasura"" rel=""nofollow noreferrer"">https://auth0.com/blog/building-a-collaborative-todo-app-with-realtime-graphql-using-hasura</a></p>&#xA;<p>The timing of the crash is not clear, but I think it was when I opened the react sample app, authenticated, and added a task.</p>&#xA;<h2>Current status</h2>&#xA;<h3>Hasura console</h3>&#xA;<p>(Free plan)</p>&#xA;<p>It's crashing.&#xA;The following statement was displayed in the hasura console.</p>&#xA;<pre><code>Application error&#xA;An error occurred in the application and your page could not be served. If you are the application owner, check your logs for details. You can do this from the Heroku CLI with the command&#xA;heroku logs --tail&#xA;</code></pre>&#xA;<h3>Heroku PostgresDB</h3>&#xA;<p>It's working fine.</p>&#xA;<p>When I checked on the &quot;heroku postgres overview&quot;, health was shown as available.</p>&#xA;<h3>Heroku logs</h3>&#xA;<p>Logs were retrieved from the Heroku server using the CLI.</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>2021-07-07T00:03:47.000822+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/v1/graphql&quot; host=toto-inu3.herokuapp.com request_id=87086b11-27e0-44ef-a4da-04ca203af092 fwd=&quot;my ip...&quot; dyno= connect= service= status=503 bytes= protocol=http&#xA;2021-07-07T00:03:58.533683+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/v1/graphql&quot; host=toto-inu3.herokuapp.com request_id=ef9a1f3e-dffc-4a1b-8266-e18b7ddfc06b fwd=&quot;my ip...&quot; dyno= connect= service= status=503 bytes= protocol=http&#xA;2021-07-07T00:04:09.872896+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/v1/graphql&quot; host=toto-inu3.herokuapp.com request_id=2fd61c74-e0ba-4ece-b5b2-67faaa848c8f fwd=&quot;my ip...&quot; dyno= connect= service= status=503 bytes= protocol=http&#xA;2021-07-07T00:04:22.097603+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/v1/graphql&quot; host=toto-inu3.herokuapp.com request_id=a20b4af1-925c-46cb-937b-1c3d71ade87c fwd=&quot;my ip...&quot; dyno= connect= service= status=503 bytes= protocol=http&#xA;2021-07-07T00:04:26.300647+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=OPTIONS path=&quot;/v1/graphql&quot; host=toto-inu3.herokuapp.com request_id=a6f33560-23c6-45ce-99b8-aea0e4225dc8 fwd=&quot;my ip...&quot; dyno= connect= service= status=503 bytes= protocol=http&#xA;2021-07-07T00:04:33.557640+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/v1/graphql&quot; host=toto-inu3.herokuapp.com request_id=33ef0621-d489-488d-94ae-158d25fb5d96 fwd=&quot;my ip...&quot; dyno= connect= service= status=503 bytes= protocol=http&#xA;2021-07-07T00:04:44.698673+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/v1/graphql&quot; host=toto-inu3.herokuapp.com request_id=58a1de21-c975-4c5e-99f9-ac27b8d3aaac fwd=&quot;my ip...&quot; dyno= connect= service= status=503 bytes= protocol=http&#xA;2021-07-07T00:04:56.013882+00:00 heroku[router]: at=error code=H10 desc=&quot;App crashed&quot; method=GET path=&quot;/v1/graphql&quot; host=toto-inu3.herokuapp.com request_id=16ccadb3-a548-40bd-82a2-72d4147413d8 fwd=&quot;my ip...&quot; dyno= connect= service= status=503 bytes= protocol=http&#xA;</code></pre>&#xA;<h2>My idea</h2>&#xA;<p>Since I created the application on Hasura's Free plan, I think there is a possibility that it crashed because it exceeded the &quot;60 requests/minute&quot; limit.</p>&#xA;<p>Even if this is the case, I can't find a way to revert the crash...</p>&#xA;<p>Please help!</p>&#xA;<h1>It was resolved!!!</h1>&#xA;<p>Thank you all for your comments!</p>&#xA;<p>I have checked the Heroku logs and the issue has been resolved successfully.</p>&#xA;<p>It seems that when deploying Hasura on Heroku, the&#xA;Heroku &gt; Settings &gt; Config Vars&#xA;If I enclose the value of &quot;HASURA_GRAPHQL_JWT_SECRET&quot; in single quotation marks, Hasura seems to crash.</p>&#xA;<hr />&#xA;<p>This may not be necessary already, but I'll answer the comments for those who refer to this page in the future.</p>&#xA;<blockquote>&#xA;<p>Is Hasura deployed on Heroku (as mentioned in the blog post) or have you deployed it on Hasura Cloud? The crash logs you have shared seems to be from Heroku</p>&#xA;</blockquote>&#xA;<p>I deployed Hasura on Heroku, not Hasura Cloud.</p>&#xA;<p>I'll Share a SS of the configuration part of...</p>&#xA;<p><a href=""https://i.stack.imgur.com/CRFvT.png"" rel=""nofollow noreferrer"">Heroku &gt; Settings &gt; Config Vars</a></p>&#xA;",14568325,,14568325,2021-07-09 22:44:25,2021-07-09 22:44:25,Hasura crashed while going through the tutorial,<graphql><hasura><hasura-jwt>,0,4,0,2021-07-07 01:16:17
68283319,1,,,1,15,"<p>Going through several documentation of next js and applo client , i see both have methods to do SSR. And i am not able to figure out what practice to follow when i am using both in a single app. I have following queries in context with an Appolo Client-Next app --</p>&#xA;<ol>&#xA;<li>if i do not set <code>ssrMode: true,</code>in Applo client, would i be able to achieve SSR by just using <code>getServerSideProps</code> of next.js? If yes why would we still use <code>ssrMode: true,</code>?</li>&#xA;<li>What difference it would make if call <code>client.query</code> otherwise <code>useQuery</code> inside <code>getServerSideProps</code>? Do one have any benifit over other?</li>&#xA;<li>Why we Execute queries with <code>getDataFromTree</code>, if i have other options like in point no-2?</li>&#xA;<li>i see this <a href=""https://github.com/adamsoffer/next-apollo/blob/master/src/withApollo.tsx"" rel=""nofollow noreferrer"">withApollo</a> utility for creating applo client but i don't see they are using <code>getServerSideProps</code> or <code>getStaticProps</code> anywhere, then how does it works?</li>&#xA;</ol>&#xA;",16397385,,,,2021-07-07 09:22:05,Can Applo client alone or Next js Alone would be able to do SSR in a Next+Applo app?,<next.js><apollo-client>,0,0,0,2021-07-07 09:22:05
68298683,2,,68022116,0,,"<p>I think that <code>Unexpected token &lt; in JSON at position 0</code> you get when using <code>host.docker.internal.</code> is because wordpress is returning the home page html as a response to your next app. You could verify this by inspecting the response. The same thing should happen when you use wordpress container name in the api uri - ex. <code>http://wordpress/graphql</code></p>&#xA;<p>This is because wordpress is unable to resolve the handler for the <code>/graphql</code> endpoint because of what is set as the <code>WordPress Address (URL)</code> (settings/general or wp_options wordpress db table)</p>&#xA;<p>If you change the WordPress Address (URL) to <code>http://wordpress</code> (your service name) it should work, but this isn't ideal because the wordpress URL shouldn't depend on the service name.</p>&#xA;<p>What I did is alter the next service to use the host network mode in order to see the network interface of the docker host:</p>&#xA;<pre><code> frontend:&#xA;    network_mode: &quot;host&quot;&#xA;    ...&#xA;</code></pre>&#xA;<p>It should now be able hit the wordpress container normally without being part of the internal bridge network.</p>&#xA;",7401861,,,,2021-07-08 09:08:34,"",,0,0,0,2021-07-08 09:08:34
68311394,1,,,0,204,"<p>I made a server by apollo-server-express and solved to connect client to server on localhost.&#xA;by the way, I'm trying to connect to server from different location but when I tried to connect to server by my IP Address, the playground shows an error that says &quot;Server cannot be reached&quot;.&#xA;however, these two locations are in the same network, same classes to C. So I assume that the problem is along to apollo server.</p>&#xA;",10723971,,441757,2021-07-09 11:47:44,2021-07-09 11:47:44,is there anyway to access to Apollo Server from diffrent location?,<server><graphql><apollo><apollo-server>,0,6,0,2021-07-09 04:44:45
68326890,2,,68324147,1,,"<p>You need four separate Dockerfiles for this, to launch four separate containers with four different programs.  The Go component Dockerfiles can be fairly straightforward:</p>&#xA;<pre class=""lang-sh prettyprint-override""><code># Dockerfile.accounts&#xA;FROM golang:1.16 AS build&#xA;WORKDIR /app&#xA;COPY . .&#xA;ARG ENV_APP=dev&#xA;RUN go build -tags &quot;$ENV_APP&quot; -o /accounts ./cmd/server/accounts&#xA;&#xA;FROM ubuntu:20.04&#xA;COPY --from=build /accounts /usr/local/bin&#xA;CMD accounts&#xA;</code></pre>&#xA;<p>(If the three images are really identical aside from the specific command directory being built, you could pass that in as an <code>ARG</code> as well.  I'm assuming the <code>./cmd/server/*</code> packages require packages elsewhere in your source directory like a <code>./pkg/support</code> or whatever, which would require the Dockerfiles to be at the top level.)</p>&#xA;<p>Since your script is just running the four programs, I'd generally recommend using <a href=""https://docs.docker.com/compose/"" rel=""nofollow noreferrer"">Docker Compose</a> as a way to launch the four containers together.  &quot;Launch some containers with known options&quot; is the only thing Compose does, but it would do everything your script does.</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code># docker-compose.yml&#xA;version: '3.8'&#xA;services:&#xA;  accounts:&#xA;    build:&#xA;      context: .&#xA;      dockerfile: Dockerfile.accounts&#xA;  events:&#xA;    build:&#xA;      context: .&#xA;      dockerfile: Dockerfile.events&#xA;  places:&#xA;    build:&#xA;      context: .&#xA;      dockerfile: Dockerfile.places&#xA;  gateway:&#xA;    build:&#xA;      context: .&#xA;      dockerfile: Dockerfile.gateway&#xA;      # (Since a Node app can't reuse Go code, this could also&#xA;      # reasonably be `build: cmd/gateway` using a&#xA;      # `cmd/gateway/Dockerfile`)&#xA;    ports:&#xA;      - 3000:3000&#xA;</code></pre>&#xA;<p>Just running <code>docker-compose up</code> will start all four containers in the foreground; once it's up, pressing <kbd>Ctrl</kbd>+<kbd>C</kbd> will stop them all.  You can configure the gateway to use the other container names <code>accounts</code>, <code>events</code>, <code>places</code> as host names; <code>http://accounts/graphql</code> for example.</p>&#xA;<p>You could also adapt your launcher script as-is.  Run <code>docker build</code> instead of <code>go build</code> to build images, <code>docker run</code> to start a container (probably with fixed <code>--name</code>s), <code>docker stop &amp;&amp; docker rm</code> to stop them.  You should <code>docker network create</code> a network and <code>docker run --net</code> all of the containers on them so they can communicate in the same way as the Compose setup.</p>&#xA;",10008173,,,,2021-07-10 10:33:30,"",,0,8,0,2021-07-10 10:33:30
68347521,1,68349817,,1,12494,"<p>While migrating from apollo-boost to @apollo/client 3.x lib. for reactjs-graphql application facing this issue.</p>&#xA;<pre><code>Failed to compile.&#xA;./node_modules/@apollo/react-hooks/lib/react-hooks.esm.js&#xA;Module not found: Can't resolve 'apollo-client' in 'C:\geospat\node_modules\@apollo\react-hooks\lib'&#xA;</code></pre>&#xA;<p>For reference used <a href=""https://www.apollographql.com/docs/react/v2/migrating/boost-migration"" rel=""nofollow noreferrer"">apollo-boost-migration</a> and <a href=""https://www.apollographql.com/docs/react/migrating/apollo-client-3-migration/"" rel=""nofollow noreferrer"">apollo-client-3-migration</a> documents.</p>&#xA;<p>Below is the new <em>package.json</em></p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;gui&quot;,&#xA;  &quot;version&quot;: &quot;0.1.0&quot;,&#xA;  &quot;private&quot;: true,&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@apollo/client&quot;: &quot;^3.3.21&quot;,&#xA;    &quot;graphql&quot;: &quot;14.5.8&quot;,&#xA;    &quot;@material-ui/core&quot;: &quot;^4.11.0&quot;,&#xA;    &quot;leaflet&quot;: &quot;1.5.1&quot;,&#xA;    &quot;luxon&quot;: &quot;^1.24.1&quot;,&#xA;    &quot;moment&quot;: &quot;2.24.0&quot;,&#xA;    &quot;i18next&quot;: &quot;17.0.12&quot;,&#xA;    &quot;i18next-xhr-backend&quot;: &quot;3.1.2&quot;,&#xA;    &quot;@types/jest&quot;: &quot;24.0.17&quot;,&#xA;    &quot;@types/leaflet&quot;: &quot;1.5.1&quot;,&#xA;    &quot;@types/luxon&quot;: &quot;^1.24.0&quot;,&#xA;    &quot;@types/node&quot;: &quot;12.7.1&quot;,&#xA;    &quot;@types/react&quot;: &quot;16.9.1&quot;,&#xA;    &quot;@types/react-dom&quot;: &quot;16.8.5&quot;,&#xA;    &quot;@types/react-leaflet&quot;: &quot;2.4.0&quot;,&#xA;    &quot;@types/react-loader-spinner&quot;: &quot;^3.1.0&quot;,&#xA;    &quot;@types/recharts&quot;: &quot;^1.8.16&quot;,&#xA;    &quot;classnames&quot;: &quot;2.2.6&quot;,   &#xA;    &quot;jest-sonar-reporter&quot;: &quot;2.0.0&quot;,    &#xA;    &quot;node-sass&quot;: &quot;4.12.0&quot;,&#xA;    &quot;normalize.css&quot;: &quot;8.0.1&quot;,&#xA;    &quot;numeral&quot;: &quot;2.0.6&quot;,&#xA;    &quot;ramda&quot;: &quot;0.26.1&quot;,&#xA;    &quot;react&quot;: &quot;16.12.0&quot;,&#xA;    &quot;react-apollo&quot;: &quot;3.1.3&quot;,&#xA;    &quot;react-dom&quot;: &quot;16.12.0&quot;,&#xA;    &quot;react-i18next&quot;: &quot;10.12.2&quot;,&#xA;    &quot;react-idle-timer&quot;: &quot;^4.5.2&quot;,&#xA;    &quot;react-leaflet&quot;: &quot;2.4.0&quot;,&#xA;    &quot;react-loader-spinner&quot;: &quot;^3.1.14&quot;,&#xA;    &quot;react-redux&quot;: &quot;7.1.0&quot;,&#xA;    &quot;react-router-dom&quot;: &quot;5.0.1&quot;,&#xA;    &quot;react-scripts&quot;: &quot;3.3.0&quot;,&#xA;    &quot;redux&quot;: &quot;4.0.4&quot;,&#xA;    &quot;typescript&quot;: &quot;3.5.3&quot;,&#xA;    &quot;use-query-params&quot;: &quot;0.4.5&quot;&#xA;  }, &#xA;  &quot;devDependencies&quot;: {&#xA;    &quot;@types/classnames&quot;: &quot;2.2.9&quot;,&#xA;    &quot;@types/debug&quot;: &quot;4.1.5&quot;,&#xA;    &quot;@types/enzyme&quot;: &quot;3.10.3&quot;,&#xA;    &quot;@types/enzyme-adapter-react-16&quot;: &quot;1.0.5&quot;,&#xA;    &quot;@types/enzyme-to-json&quot;: &quot;1.5.3&quot;,&#xA;    &quot;@types/ramda&quot;: &quot;0.26.29&quot;,&#xA;    &quot;@types/react-redux&quot;: &quot;7.1.1&quot;,&#xA;    &quot;@types/react-router-dom&quot;: &quot;4.3.5&quot;,&#xA;    &quot;@types/redux-mock-store&quot;: &quot;1.0.1&quot;,&#xA;    &quot;enzyme&quot;: &quot;3.10.0&quot;,&#xA;    &quot;enzyme-adapter-react-16&quot;: &quot;1.14.0&quot;,&#xA;    &quot;enzyme-to-json&quot;: &quot;3.4.0&quot;,&#xA;    &quot;mock-apollo-client&quot;: &quot;1.1.0&quot;,&#xA;    &quot;react-dates&quot;: &quot;21.0.1&quot;,&#xA;    &quot;react-leaflet-vectorgrid&quot;: &quot;2.2.1&quot;,&#xA;    &quot;recharts&quot;: &quot;1.7.1&quot;,&#xA;    &quot;redux-devtools-extension&quot;: &quot;2.13.8&quot;,&#xA;    &quot;redux-mock-store&quot;: &quot;1.5.3&quot;,&#xA;    &quot;waait&quot;: &quot;1.0.5&quot;&#xA;  },  &#xA;  &quot;eslintConfig&quot;: {&#xA;    &quot;extends&quot;: &quot;react-app&quot;&#xA;  },&#xA;  &quot;browserslist&quot;: {&#xA;    &quot;production&quot;: [&#xA;      &quot;&gt;0.2%&quot;,&#xA;      &quot;not dead&quot;,&#xA;      &quot;not op_mini all&quot;&#xA;    ],&#xA;    &quot;development&quot;: [&#xA;      &quot;last 1 chrome version&quot;,&#xA;      &quot;last 1 firefox version&quot;,&#xA;      &quot;last 1 safari version&quot;&#xA;    ]&#xA;  },  &#xA;  &quot;jest&quot;: {&#xA;    &quot;collectCoverageFrom&quot;: [&#xA;      &quot;!src/**/*.snap&quot;,&#xA;      &quot;src/components/**/*.{ts,tsx}&quot;,&#xA;      &quot;src/configuration/**/*&quot;&#xA;    ],&#xA;    &quot;transformIgnorePatterns&quot;: []&#xA;  },&#xA;  &quot;jestSonar&quot;: {&#xA;    &quot;reportPath&quot;: &quot;coverage&quot;,&#xA;    &quot;reportFile&quot;: &quot;jest-sonar-report.xml&quot;,&#xA;    &quot;indent&quot;: 4&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Tried deleting old node_modules directory and then ran <code>npm i</code> command but the same error was shown on the console.<br />&#xA;What is missed here?</p>&#xA;",3065102,,,,2022-11-22 07:13:37,Module not found: Can't resolve 'apollo-client',<reactjs><apollo><apollo-client>,2,0,0,2021-07-12 12:39:14
68354663,2,,68354656,58,,"<p>This is a known bug with an open issue <a href=""https://github.com/nestjs/graphql/issues/1621#issuecomment-878474079"" rel=""noreferrer"">and a merged PR to fix it</a>. For now, you can downgrade to <code>apollo-server-express@^2</code></p>&#xA;",9576186,,,,2021-07-12 22:59:30,"",,0,2,0,2021-07-12 22:59:30
68425373,2,,68420427,3,,"<p>This change that you're experiencing might have been caused by upgrading (maybe accidentally or automatically) from Apollo Server v2 to v3. <a href=""https://github.com/apollographql/apollo-server/blob/main/CHANGELOG.md#v300"" rel=""nofollow noreferrer"">The v3.0.0 release of Apollo Server</a> happened 10 days ago.</p>&#xA;<p>Apollo Server v3 changed the default behavior of the server's landing page, but you can still configure the GraphQL Playground by following <a href=""https://www.apollographql.com/docs/apollo-server/api/plugin/landing-pages/#graphql-playground-landing-page"" rel=""nofollow noreferrer"">these instructions</a>.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { ApolloServer } from &quot;apollo-server&quot;;&#xA;import {&#xA;  ApolloServerPluginLandingPageGraphQLPlayground&#xA;} from &quot;apollo-server-core&quot;;&#xA;&#xA;const server = new ApolloServer({&#xA;  typeDefs,&#xA;  resolvers,&#xA;  plugins: [&#xA;    ApolloServerPluginLandingPageGraphQLPlayground(),&#xA;  ],&#xA;});&#xA;</code></pre>&#xA;",3415168,,,,2021-07-18 01:27:34,"",,0,0,0,2021-07-18 01:27:34
68431371,1,,,0,57,"<p>I am on my way to create a GraphQL API with Socket.IO.&#xA;As you guys most likely know, they both run on a port of their own.&#xA;If they run on two seperate ports, could this become a problem when deploying the API to Heroku?&#xA;I have been looking for an answer to this question but found none, and I don't want to start of my API project if it's not possible. I have deployed REST API's before, but that's just one port for the backend and one for the frontend but I am unsure about this working out in the end.</p>&#xA;",14076312,,,,2021-07-18 17:06:30,Deploying GraphQL API with Socket.IO,<heroku><socket.io><graphql>,0,2,0,2021-07-18 17:06:30
68438344,2,,68022116,1,,"<p><strong>TL;DR</strong>&#xA;Use whatever you want in place of &quot;example&quot;.</p>&#xA;<ol>&#xA;<li>Set up WordPress with a site URL and site address in wp-admin to <a href=""http://example.com"" rel=""nofollow noreferrer"">http://example.com</a></li>&#xA;</ol>&#xA;<p><code>http://</code> must be included</p>&#xA;<ol start=""2"">&#xA;<li><p>Edit Windows c:/windows/system32/dirvers/etc/hosts file to add</p>&#xA;<p>127.0.0.1 example.com</p>&#xA;</li>&#xA;<li><p>Make some changes to your docker-compose file, by putting WordPress and nextjs in a network and giving WordPress a hostname.</p>&#xA;</li>&#xA;</ol>&#xA;<p>If you need any clarification everything is listed out below. Enjoy!</p>&#xA;<hr />&#xA;<p><strong>Problem:</strong>&#xA;You have to make the fetch request to the same domain that WP <em><strong>thinks</strong></em> it is. This is written in the WP database, in the options table, row 1: siteurl. I think the problem that is occurring is that making a request to any domain other than the one shown here will trigger a url rewrite in WP(probably from .htaccess rule, apache config, or WP api add_rewrite_rule) changing the domain from whatever your fetch request is directed at to whatever is written in the database. I'm not certain if this totally scraps your original fetch request, or if it changes the origin header and since the request origin header and response origin don't match, node-fetch throws an error (maybe someone can clarify that for me).</p>&#xA;<p>I'll write down all the steps I took below, not necessarily in the order I executed them, but in the order that I would try next time. There are some steps that may be unnecessary so I'll put those at the end and someone can respond with an updated list that doesn't involve extra steps.</p>&#xA;<p><strong>0. Flush rewrite rules:</strong></p>&#xA;<p>You can do a quick search of how to do this, but I believe you go to <em>wp-admin &gt; settings &gt; permalinks</em> and click update. This is just to make sure that the /graphql endpoint is working properly.</p>&#xA;<p><strong>1. Set siteurl and home DB values:</strong></p>&#xA;<p>option a. You can go to your <em>wp-admin &gt; settings &gt; general</em> and change <em>wordpress address</em> and <em>site address</em> to something like <a href=""http://example.com"" rel=""nofollow noreferrer"">http://example.com</a>. The name you choose here can be completely arbitrary, but choose a url you never plan to visit in your browser, as we will be changing windows hosts file later, so don't choose <em>google.com</em> or something like that. Anyway, make sure you <strong>include http://</strong> as that will make it automatically use port 80.&#xA;option b. If you're using the WP container there may be environment variables you can add to your docker-compose file that will do this for you at build time, but you'll need to check their documentation on docker hub or github.&#xA;option c. Alternatively you could set up a phpMyAdmin container on your db network to manually change the values, which is what I did.</p>&#xA;<p>Your WP container probably won't work now. That's ok.</p>&#xA;<p><strong>2. Edit your PC hosts file</strong></p>&#xA;<p>If you want to be able to access your WP from its new domain name, you'll need to tell Windows, or whatever OS, that <a href=""http://example.com"" rel=""nofollow noreferrer"">http://example.com</a> has a local IP and it shouldn't try to fetch that from a DNS server.&#xA;The process to do this on Windows is: Go to windows search bar, type &quot;notepad&quot;, <strong>right</strong> click on the notepad, run as administrator. Then go to file &gt; open &gt; c:/windows/system32/drivers/etc, change file type from text documents to all files and select the hosts file.&#xA;Once that file is open you will probably see a list of ip's and hostnames. Notice that host.docker.internal is also listed here. XD&#xA;All you do is type an ip address followed by example.com(the same you used for the previous step in WP, nix the http://). Here are some options as to how you could go about this.</p>&#xA;<p>Use Loopback IP:</p>&#xA;<pre><code>#in hosts file &#xA;127.0.0.1 example.com&#xA;</code></pre>&#xA;<p>You can look up what loopback ips are currently in use on your local machine by opening CMD and typing</p>&#xA;<pre><code>netstat -a -n -p TCP&#xA;</code></pre>&#xA;<p>They'll probably all be 127.0.0.1 on various ports. I believe you can use any 127.0.0.0/8 ip for this, meaning the zeros can be any number between 0-255, but I also won't guarantee that.&#xA;If 127.0.0.1:80 is listed there already, perhaps try 127.12.34.156 or something(random numbers I just made up). We will need port 80 on the selected ip to be available for this to work.&#xA;OR Use Local Network Address:&#xA;If you're connected to a router, your machine will publish open ports on your machine there to some 192.168.x.x address. You'll have to do more research on how that's set up, but it should be whichever 192.168 <em>local address</em> is listed with the 0.0.0.0 <em>foreign address</em> in the netstat output.</p>&#xA;<blockquote>&#xA;<p>Sidenote, this is cool because if your phone is on the same Wi-Fi&#xA;network you can go to that 192.168.x.x:exposed-container-port and view&#xA;your apps on mobile while developing.</p>&#xA;</blockquote>&#xA;<p>You can add this address to your hosts file like so, if it's available.</p>&#xA;<pre><code>#in hosts file&#xA;192.168.x.x example.com&#xA;</code></pre>&#xA;<p>Great. Now that that's done you have to <strong>restart your computer</strong>. Is there a way to reinitialize the hosts file without restart? I don't know but maybe someone else can comment.</p>&#xA;<p><strong>The Reason this is a necessary step:</strong>&#xA;As mentioned in &quot;the problem&quot; section, WP does weird stuff to your urls. It needs to be requested from the browser as the name that it believes it's called(maybe not always in vanilla WP, but could just be a theme/plugin issue).</p>&#xA;<p>Now you can start up your WP container with docker compose <strong>WITH ONE CHANGE</strong>:</p>&#xA;<pre><code>#in docker-compose.yml&#xA;services:&#xA;  wordpress:&#xA;    ports:&#xA;      - 80:80&#xA;</code></pre>&#xA;<p>You need to expose port 80 of the WP container.</p>&#xA;<blockquote>&#xA;<p>In a hosts file you cannot add ports to the ip addresses</p>&#xA;</blockquote>&#xA;<pre><code># don't do it&#xA;127.0.0.1:8000 example.com       #it won't work, don't do it&#xA;# it doesn't work&#xA;</code></pre>&#xA;<p>We need to expose this port because we're going to use the http:// protocol to access our WP site. There is a way apparently that you can <strong>map ports to these hosts using netsh</strong>, but you'll have to learn about that elsewhere. That will be required if you need multiple containers to expose port 80. For our use case, we only have one container exposing port 80 so it's fine.</p>&#xA;<p>So you've done the following:</p>&#xA;<ol>&#xA;<li>Change WP siteurl and homeurl</li>&#xA;<li>Add to hosts file</li>&#xA;<li>Change docker compose to expose WP container to port 80</li>&#xA;</ol>&#xA;<p>You can now run your WP container to make sure everything is working. Once it's up, try visiting <a href=""http://example.com"" rel=""nofollow noreferrer"">http://example.com</a> or whatever you named your wp. Your WP should be completely functional. If not <strong>you might need to flush rewrite rules again.</strong></p>&#xA;<p><strong>3. Network your containers</strong></p>&#xA;<pre><code>#docker-compose.yml&#xA;version: 3.8&#xA;&#xA;services:&#xA;  #...&#xA;  #db and what not&#xA;  # db is on backend network and does not expose ports&#xA;  wordpress:&#xA;    hostname: example.com&#xA;    networks:&#xA;      frontend:&#xA;      backend:&#xA;  nextjs:&#xA;    networks:&#xA;      frontend:&#xA;&#xA;networks:&#xA;  frontend:&#xA;  backend:&#xA;</code></pre>&#xA;<p>Ok, so what did we add here? By default, your docker containers will be added to the &quot;default [bridge] network&quot;. This means that they are in their own private subnet which has its own ip address and gateway ip. The thing about this network is that you can make internal http requests to your other containers by their service name. The service names I used in the above yml file are wordpress and nextjs. So I could make a server side fetch request from the nextjs application directly to 'http://wordpress' and it would find that container(and http defaults to port 80, otherwise you can specify the port as well).</p>&#xA;<pre><code>// wordpress doesn't like this request for some reason&#xA;const data = await fetch('http://wordpress/graphql', request);&#xA;</code></pre>&#xA;<p>The problem with that is when we make such a request, the 'wordpress' container pulls some funny business with the rewrites or request headers, I'm not sure which, and we can't get an appropriate response in the nextjs container.</p>&#xA;<p>So what we've done here is put our applications in some different networks. The <em>backend</em> network is for WP and the DB to communicate and <em>frontend</em> network is for Next and WP to communicate.</p>&#xA;<p>One very important line here is:</p>&#xA;<pre><code>hostname: example.com&#xA;</code></pre>&#xA;<p>When we run docker-compose up, docker will add the following to the container's /etc/hosts file</p>&#xA;<pre><code>172.0.0.x example.com example&#xA;</code></pre>&#xA;<p>If you want to check this, spin up you containers, open CMD and type</p>&#xA;<pre><code>docker ps&#xA;</code></pre>&#xA;<p>and look at either the CONTAINER ID or NAMES column, then type</p>&#xA;<pre><code>docker exec -it CONTAINER_ID_HERE bash&#xA;or&#xA;docker exec -it CONTAINER_NAME_HERE bash&#xA;</code></pre>&#xA;<p>and replace the id or name with the id or name of your wordpress container. Also you might have to replace the 'bash' part with 'sh' depending on your linux distro.&#xA;What you should see in your cli is</p>&#xA;<pre><code>root@example:/var/www/html&#xA;</code></pre>&#xA;<p>Now type one by one</p>&#xA;<pre><code>cd /etc&#xA;cat hosts&#xA;exit&#xA;</code></pre>&#xA;<p>The cat command will print the hosts file contents into the cli. You should see in the list:</p>&#xA;<pre><code>172.0.0.x example.com example&#xA;</code></pre>&#xA;<p>Where x is corresponds to your container's ip on the docker bridge networks to which it is assigned. Since I have two networks in the above compose.yml file, mine will show two ip's with the hostname designation-- one for each network to which the container is attached; in this case &quot;frontend&quot; and &quot;backend&quot;.</p>&#xA;<p><strong>What's the next step?</strong></p>&#xA;<p>That's it. You're done.</p>&#xA;<p>You can now make a server-side node-fetch request like so:</p>&#xA;<pre><code>// inside of some server-side function i.e. in /pages/api/graphqltest.js    &#xA;//...&#xA;&#xA;const data = await fetch('http://example.com/graphql', request)&#xA;&#xA;// handle data...&#xA;</code></pre>&#xA;<p><strong>A note about DNS resolution in networks.</strong></p>&#xA;<p>Let me try and explain what's going on with these hosts files as well as I understand it. If I make any mistake, someone can notify me in the comments and I'll do my best to correct it here.</p>&#xA;<p>When node makes a server-side request, how it resolves the domain name specified is going to bubble outward from the container.</p>&#xA;<p>Upon request of <a href=""http://example.com"" rel=""nofollow noreferrer"">http://example.com</a>, the server will look first in its hosts file to see if there is a mention of example.com or example. If it's there then it will resolve to whatever IP is listed. in our case there is no example.com listed in the hosts file of the nextjs container. When we set it in the wordpress container it modifies the hosts file for the wordpress container only. Well, it also defines it for the networks we set up on that container, frontend and backend.</p>&#xA;<p>Since the nextsjs app doesn't have this hostname on file, the request next goes to the network. The packet will hit the network's internet gateway. If there is a container in the network with the requested hostname(example.com) in its hosts file, the gateway will send that packet to the container. This is the case in our example.</p>&#xA;<p>In order to prove it, try the following. In CMD type:</p>&#xA;<pre><code>docker exec -it nextjs sh&#xA;</code></pre>&#xA;<p>Here, nextjs should be replaced with the name of your container which you can see using 'docker ps' command. Also the 'sh' option puts us in the command shell for the node-alpine image, but if you use another image you might need to change this to 'bash'</p>&#xA;<p>Once in the shell you can type:</p>&#xA;<pre><code>apk add tcptraceroute&#xA;</code></pre>&#xA;<p>And install the traceroute package. Next do:</p>&#xA;<pre><code>tcptraceroute example.com&#xA;</code></pre>&#xA;<p>The output should look like this:</p>&#xA;<pre><code>Selected device eth0, address 172.x.0.2, port xxxxx for outgoing packets&#xA;Tracing the path to example.com (172.x.0.3) on TCP port 80 (http), 30 hops max&#xA; 1  172.x.0.3 [open]  0.099 ms  0.050 ms  0.097 ms&#xA;</code></pre>&#xA;<p>Let me translate:</p>&#xA;<p><em>--Selected device eth0, address 172.x.0.2, port xxxxx for outgoing packets</em></p>&#xA;<p>The address 172.x.0.2 we see here is the privat IPV4 address of the nextjs app in the frontend network.</p>&#xA;<p><em>--Tracing the path to example.com (172.x.0.3) on TCP port 80 (http), 30 hops max</em></p>&#xA;<p>The address 172.x.0.3 is the private IPV4 address of the wordpress container inside the frontend network</p>&#xA;<p><em>--1  172.x.0.3 [open]  0.099 ms  0.050 ms  0.097 ms</em></p>&#xA;<p>Took one hop, found the host at 172.x.0.3, it's open, took only a fraction of a second.</p>&#xA;<p>Don't forget to exit the shell</p>&#xA;<pre><code>exit&#xA;</code></pre>&#xA;<p><strong>Conclusion</strong></p>&#xA;<p>I know this is a long-winded answer but it's really just a lot of explanation for a few simple steps:</p>&#xA;<ol>&#xA;<li>Change wordpress siteurl</li>&#xA;<li>Add to system hosts file</li>&#xA;<li>Make a few changes to dockerfile</li>&#xA;</ol>&#xA;<p>Here is a complete docker-compose.yml for the copy-pasters:</p>&#xA;<pre><code># docker-compose.yml&#xA;version: '3.8'&#xA;&#xA;services:&#xA;&#xA;  db:&#xA;    image: mariadb:10.3&#xA;    restart: always&#xA;    volumes:&#xA;      - ./db/mysqldata:/var/lib/mysql&#xA;    environment:&#xA;      MYSQL_ROOT_PASSWORD: badpassword&#xA;      MYSQL_DATABASE: WP_BADNAME&#xA;      MYSQL_USER: badusername&#xA;      MYSQL_PASSWORD: badusernamespassword&#xA;    networks:&#xA;        - backend&#xA;&#xA;  phpmyadmin:&#xA;    image: phpmyadmin&#xA;    restart: always&#xA;    ports:&#xA;      - 8080:80&#xA;    environment:&#xA;      - PMA_ARBITRARY=1&#xA;    networks:&#xA;      - backend&#xA;&#xA;  wordpress:&#xA;    image: wordpress&#xA;    restart: always&#xA;    hostname: example.com&#xA;    volumes:&#xA;      # You might want to copy the files &#xA;      # into the container in a dockerfile&#xA;      # for better performance. Alternatively,&#xA;      # You might set up your installation using 'environment' vars.&#xA;      # I use a mix of both. As executed here, changes to these files&#xA;      # will persist, but performance will suffer&#xA;      - ./app/wp/wp-config.php:/var/www/html/wp-config.php&#xA;      - ./app/wp/wp-content:/var/www/html/wp-content&#xA;      - ./app/wp/.htaccess:/var/www/html/.htaccess&#xA;    ports:&#xA;      - 80:80&#xA;    networks:&#xA;      backend:&#xA;      frontend:&#xA;&#xA;&#xA;  nextjs:&#xA;    build:&#xA;      context: ./app/frontend&#xA;      dockerfile: Dockerfile.dev&#xA;    restart: always&#xA;    volumes:&#xA;      - ./app/frontend/:/app&#xA;      - /app/node_modules&#xA;      - /app/.next&#xA;    ports:&#xA;      - 3000:3000&#xA;    networks:&#xA;      - frontend&#xA;&#xA;networks:&#xA;    frontend:&#xA;    backend:&#xA;</code></pre>&#xA;<p>And my Dockerfile.dev in the nextjs directory look like this:</p>&#xA;<pre><code>FROM node:current-alpine&#xA;WORKDIR /app&#xA;COPY package.json .&#xA;RUN npm install&#xA;COPY . .&#xA;&#xA;Expose 3000&#xA;CMD [&quot;npm&quot;, &quot;run&quot;, &quot;dev&quot;]&#xA;</code></pre>&#xA;<p>and to run it, because next uses 'build'</p>&#xA;<pre><code>docker-compose up --build&#xA;</code></pre>&#xA;",16473930,,6045800,2021-07-19 09:52:57,2021-07-19 09:52:57,"",,0,0,0,2021-07-19 09:42:07
68449789,2,,68449542,2,,"<blockquote>&#xA;<p>Why does this happen? It seems like a gatsby or vercel issue.</p>&#xA;</blockquote>&#xA;<p>It's hard to say with the provided details. To me, it seems that the Vercel server is facing a timeout response for some GraphQL queries/products/nodes (the warnings) so it could be a pang of shared guilt.</p>&#xA;<p>To debug and try to fix the issue at the same time, taking into account that the project works perfectly fine locally, I would try to match environments, starting by setting the same Node version. This will assure you that you are running the same dependency version.</p>&#xA;<p>Vercel allows you to configure the Node version from the backoffice or by setting a <code>node</code> property inside <code>engine</code> object in the <code>package.json</code>. From the <a href=""https://vercel.com/docs/runtimes#official-runtimes/node-js/node-js-version"" rel=""nofollow noreferrer"">docs</a>:</p>&#xA;<blockquote>&#xA;<p>Defining the <code>node</code> property inside engines of a <code>package.json</code> file&#xA;will override the selection made in the Project Settings and print a&#xA;Build Step warning if the version does not match.</p>&#xA;<p>In order to find out which Node.js version your Deployment is using,&#xA;run <code>node -v</code> in the Build Command or log the output of&#xA;<code>process.version</code>.</p>&#xA;</blockquote>&#xA;<p>So add:</p>&#xA;<pre><code>&quot;engines&quot;: { &quot;node&quot;: &quot;12.x&quot; }&#xA;</code></pre>&#xA;<p>Being <code>12.x</code> the prompted version when running the <code>node -v</code> command.</p>&#xA;<p>Hopefully, this will fix your issue but if not, it would help you to debug better.</p>&#xA;",5585371,,,,2021-07-20 05:04:52,"",,0,6,0,2021-07-20 05:04:52
68450961,2,,67869431,0,,<p>I was able to resolve the error after upgrading to <code>apollo-server v3</code>. I think the <code>v2</code> was somewhat conflicting with <code>graphql-upload</code> lib</p>&#xA;,9552485,,,,2021-07-20 07:18:25,"",,0,0,0,2021-07-20 07:18:25
68463800,1,,,2,617,"<p>I am trying to setup a severless Apollo server with Vercel, TypeGraphQL &amp; TypeORM (postgres).</p>&#xA;<p>To do so, I followed a few tutorials, and all of them suggest using the <code>apollo-server-micro</code> module as it allows to expose the <code>createHandler</code> method which is great for a serverless environment.</p>&#xA;<h2 id=""code-qabt"">Code</h2>&#xA;<pre class=""lang-js prettyprint-override""><code>// src/api/graphql.ts&#xA;&#xA;import &quot;reflect-metadata&quot;;&#xA;import { ApolloServer } from &quot;apollo-server-micro&quot;;&#xA;import { buildSchema } from &quot;type-graphql&quot;;&#xA;import { createConnection, getConnectionOptions } from &quot;typeorm&quot;;&#xA;&#xA;import path from &quot;path&quot;;&#xA;import { config as configEnv } from &quot;dotenv&quot;;&#xA;import dotEnvExpand from &quot;dotenv-expand&quot;;&#xA;&#xA;if (process.env.NODE_ENV !== &quot;production&quot;) {&#xA;  const env = configEnv({ path: path.resolve(__dirname, &quot;../../.env.local&quot;) });&#xA;  dotEnvExpand(env);&#xA;}&#xA;&#xA;async function bootstrap() {&#xA;  const connectionOptions = await getConnectionOptions();&#xA;  const connection = await createConnection(connectionOptions);&#xA;  console.log(`✅ Connected to a ${connection.options.type} database`);&#xA;&#xA;  const schema = await buildSchema({&#xA;    resolvers: [path.join(__dirname, &quot;/resolvers/*.ts&quot;)],&#xA;  });&#xA;&#xA;  const server = new ApolloServer({ schema });&#xA;&#xA;  exports.handler = server.createHandler({ path: &quot;/api/graphql&quot; });&#xA;}&#xA;&#xA;bootstrap();&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>// src/index.tsx&#xA;&#xA;/* relevant imports */&#xA;...&#xA;&#xA;const client = new ApolloClient({&#xA;  link: createHttpLink({ uri: &quot;/api/graphql&quot; }),&#xA;  cache: new InMemoryCache()&#xA;});&#xA;&#xA;ReactDOM.render(&#xA;  &lt;React.StrictMode&gt;&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;App /&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  &lt;/React.StrictMode&gt;,&#xA;  document.getElementById(&quot;root&quot;)&#xA;);&#xA;&#xA;...&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>/src/components/App/App.tsx&#xA;&#xA;/* relevant imports */&#xA;...&#xA;&#xA;export default function App(): JSX.Element {&#xA;  const initialState: IState = ...&#xA;&#xA;  const [state, dispatch] = useReducer(...);&#xA;&#xA;  // prevent re-rendering children when App re-renders&#xA;  const value = useMemo(() =&gt; ({ state, dispatch }), [state, dispatch]);&#xA;&#xA;  // produced by CodeGen&#xA;  const { loading, error, data } = useUserDetailsQuery({&#xA;    variables: {&#xA;      publicKey: &quot;some public key&quot;&#xA;    }&#xA;  });&#xA;&#xA;  return (&#xA;    &lt;React.Fragment&gt;&#xA;      &lt;GlobalStyle /&gt;&#xA;&#xA;      &lt;Suspense fallback={&lt;Loading /&gt;}&gt;&#xA;        &lt;NavMenu /&gt;&#xA;      &lt;/Suspense&gt;&#xA;&#xA;      {loading ? (&#xA;        &lt;p&gt;Loading ...&lt;/p&gt;&#xA;      ) : error ? (&#xA;        console.log(JSON.stringify(error, null, 2)) // &lt;========== where the error is observed&#xA;      ) : (&#xA;        console.log(JSON.stringify(data?.userDetails, null, 2))&#xA;      )}&#xA;&#xA;      &lt;AppContext.Provider value={value}&gt;&#xA;        &lt;Router&gt;&#xA;          &lt;Suspense fallback={&lt;Loading /&gt;}&gt;&#xA;            &lt;Switch&gt;&#xA;              &lt;Redirect exact from=&quot;/&quot; to=&quot;/wallet&quot; /&gt;&#xA;              &lt;Route path=&quot;/wallet&quot; component={Wallet} /&gt;&#xA;              &lt;Route path=&quot;/mine&quot; component={Mine} /&gt;&#xA;              &lt;Route path=&quot;/blockchain&quot; component={Chain} /&gt;&#xA;              {/* &lt;Redirect from=&quot;*&quot; to=&quot;/wallet&quot; /&gt; */} // &lt;====== Doesn't seem to be the cause&#xA;            &lt;/Switch&gt;&#xA;          &lt;/Suspense&gt;&#xA;        &lt;/Router&gt;&#xA;      &lt;/AppContext.Provider&gt;&#xA;    &lt;/React.Fragment&gt;&#xA;  );&#xA;}&#xA;</code></pre>&#xA;<h2 id=""error-rvzc"">Error</h2>&#xA;<p>When I run <code>vercel dev</code>, I see the following</p>&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;  &quot;graphQLErrors&quot;: [],&#xA;  &quot;networkError&quot;: {&#xA;    &quot;name&quot;: &quot;ServerParseError&quot;,&#xA;    &quot;response&quot;: {},&#xA;    &quot;statusCode&quot;: 404,&#xA;    &quot;bodyText&quot;: &quot;&lt;!DOCTYPE html&gt;\n&lt;html lang=\&quot;en\&quot;&gt;\n&lt;head&gt;\n&lt;meta charset=\&quot;utf-8\&quot;&gt;\n&lt;title&gt;Error&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;pre&gt;Cannot POST /api/graphql&lt;/pre&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n&quot;&#xA;  },&#xA;  &quot;message&quot;: &quot;Unexpected token &lt; in JSON at position 0&quot;&#xA;}&#xA;</code></pre>&#xA;<p>I also see: <code>POST http://localhost:3000/api/graphql 404 (Not Found)</code> at <code>createHttpLink.ts:145</code></p>&#xA;<h2 id=""question-lja5"">Question</h2>&#xA;<p>What am I missing here?&#xA;My database connection works fine as I checked it locally before trying with <code>vercel dev</code>.&#xA;I also added the env variables to vercel (production, preview, and development branches).</p>&#xA;",4298115,,4298115,2021-07-21 04:10:17,2021-07-21 04:10:17,"""Cannot POST /api/graphql"" with Vercel Apollo Server (Serverless)",<graphql><typeorm><serverless><vercel><typegraphql>,0,3,0,2021-07-21 03:59:08
68469945,2,,68437734,26,,"<p>I still haven't found a perfect solution, but for the moment I went for this workaround :</p>&#xA;<p><code>jest --config ./test/jest-e2e.json --forceExit</code></p>&#xA;<p>The <a href=""https://jestjs.io/docs/cli#--forceexit"" rel=""nofollow noreferrer"">--forceExit</a> option kill the openHandles somehow and unlock everything.&#xA;Yet, I'm still looking for the &quot;proper way&quot; of handling that issue.</p>&#xA;",11698446,,6383583,2022-11-02 23:25:27,2022-11-02 23:25:27,"",,0,3,0,2021-07-21 12:59:32
68470158,2,,68363427,5,,"<p>I also have this particular error. It works perfectly in the playground but throw the error in studio explorer. I noticed something interesting though, accessing the explorer on google chrome works perfectly. I use Brave browser and was getting the error but it works fine on Chrome.</p>&#xA;<p>Maybe try using a different browser.</p>&#xA;",16385863,,16385863,2021-07-22 20:11:18,2021-07-22 20:11:18,"",,0,5,0,2021-07-21 13:12:34
68484669,1,68755615,,4,1650,"<p>I have used Spring boot with graphQL (version 11.1.0) and it's working fine but it throws a timeout error when request execution time exceeds the 30s.</p>&#xA;<p>Error:</p>&#xA;<pre><code>GraphQL execution canceled because timeout of 30000 millis was reached. The following query was being executed when this happened:&#xA;// query&#xA;Cannot write GraphQL response, because the HTTP response is already committed. It most likely timed out.&#xA;</code></pre>&#xA;<p>Can anyone tell me how can we configure timeout in graphQL?</p>&#xA;",6755396,,,,2021-08-12 10:22:48,SpringBoot GraphQL request execution timeout issue,<java><spring-boot><graphql>,1,0,0,2021-07-22 12:14:55
68493136,1,68706613,,0,195,"<p>I am very new to docker (apologies in advance for errors in my terminology / gaps in my knowledge) and have three services where one depends on one to finish before it can be built.</p>&#xA;<p>The repo is set up to have them both as submodules with the below docker file composing them.</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>version: &quot;3&quot;&#xA;services:&#xA;  db:&#xA;    image: postgres:12.3&#xA;    restart: always&#xA;    volumes:&#xA;      - db_data:/var/lib/postgresql/data&#xA;    environment:&#xA;      POSTGRES_DB: ${DB_NAME}&#xA;      POSTGRES_INITDB_ARGS: &quot;--data-checksums&quot;&#xA;      POSTGRES_PASSWORD: postgres&#xA;      POSTGRES_USER: postgres&#xA;  actions:&#xA;    build:&#xA;      context: ./action-handlers&#xA;      dockerfile: Dockerfile.stg&#xA;    depends_on:&#xA;      - hasura&#xA;    environment:&#xA;      HASURA_GRAPHQL_ENDPOINT: http://hasura:8080/v1/graphql&#xA;      HASURA_GRAPHQL_ADMIN_SECRET: my-super-secret-password&#xA;      ENVIRONMENT: ${ENVIRONMENT}&#xA;      NODE_ENV: ${NODE_ENV}&#xA;      PORT: 5000&#xA;  hasura:&#xA;    ports:&#xA;      - 8080:8080&#xA;      - 9691:9691&#xA;    build:&#xA;      context: ./hasura&#xA;      dockerfile: .docker/Dockerfile.stg&#xA;    depends_on:&#xA;      - db&#xA;    environment:&#xA;      ACTION_BASE_URL: http://actions:5000&#xA;      HASURA_GRAPHQL_ACTIONS_HANDLER_WEBHOOK_BASEURL: http://actions:5000&#xA;      HASURA_GRAPHQL_ADMIN_SECRET: my-super-secret-password&#xA;      HASURA_GRAPHQL_CONTAINER_HOST_PORT: 8080&#xA;      HASURA_GRAPHQL_ENABLE_CONSOLE: &quot;true&quot;&#xA;      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: &quot;public&quot;&#xA;      DB_NAME: $DB_NAME&#xA;      HASURA_GRAPHQL_DATABASE_URL: &quot;postgres://postgres:postgres@db:5432/$DB_NAME&quot;&#xA;&#xA;volumes:&#xA;  db_data:&#xA;</code></pre>&#xA;<p>The <a href=""https://hasura.io/docs/latest/graphql/core/actions/action-handlers.html"" rel=""nofollow noreferrer"">actions are an extension of Hasura</a> that require Hasura to be up and running before they can be properly set up. Here is what the docker file looks like:</p>&#xA;<pre><code>FROM node&#xA;WORKDIR /app&#xA;COPY package*.json .&#xA;RUN npm install&#xA;COPY . .&#xA;CMD [&quot;npm&quot;, &quot;run&quot;, &quot;graphql&quot;, &quot;&amp;&amp;&quot;, &quot;npm&quot;, &quot;run&quot;, &quot;start&quot;]&#xA;</code></pre>&#xA;<p>The <code>yarn graphql</code> file downloads the graphql schema from Hasura using <code>graphql-codegen</code>.</p>&#xA;<p>Is it possible to orchestrate docker to wait for the Hasura instance to be ready before building the actions? Or do I need a bash script, and if so what would that look like and be run? What I am looking for is a solution where <code>npm run graphql</code> is continuously rerun until it is able to download the graphql schema from Hasura, then run <code>npm run start</code>.</p>&#xA;<p>I am a little out of my depth so any insights or tips are appreciated. I have tried storing the graphql schema locally (so I don't need to wait for Hasura to be ready to get it) however this doesn't work practically as I need Hasura and the actions to be in sync (hence get the schema from Hasura at build time). I have also reach out to the team at <code>graphql-coden</code> and they mention there is no CLI flags or config that allow their code to keep retrying to download the schema until it is ready.</p>&#xA;",10141904,,,,2021-08-09 03:43:40,Make one Docker image wait for another to finish before building,<docker><graphql><hasura><graphql-codegen>,2,0,0,2021-07-23 01:49:13
68494701,2,,68493136,0,,"<p>It's hacky, but you could revert your compose-file's version to 2.1 and then use the old and deprecated &quot;depends-on&quot; together with a health-check that can issue everything from an SQL-command to a CURL command to prove the readiness of the dependent container.</p>&#xA;",1921614,,,,2021-07-23 06:04:52,"",,0,0,0,2021-07-23 06:04:52
68513841,2,,46134134,1,,"<p>The reason is because of the CORS. I presume you've not either configured the server to allow cross origin request or you have added <em>'no-cors'</em> in the request header.&#xA;In that case we are telling the browser to make the request, but we won't be allowed to view the response.(See <a href=""https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors"">Trying to use fetch and pass in mode: no-cors</a>)&#xA;However, surprisingly on checking developer tools for Firefox browser, I could see the response in the developer tools.</p>&#xA;<p>So as a solution, I would recommend you to configure your server config to allow <em>cors</em> request and other <em>cors</em> related parameters. See <a href=""https://drupal.stackexchange.com/a/260163"">this</a> for configuration values example if you are confused.</p>&#xA;<p>Note: For Drupal GraphQL users, It might be a wise idea to create a copy of <code>default.services.yml</code> =&gt; <code>services.yml</code> and change the cors configuration values in <code>services.yml</code> file.</p>&#xA;",8715552,,8715552,2021-07-24 21:24:51,2021-07-24 21:24:51,"",,0,0,0,2021-07-24 21:11:05
68523045,2,,68521459,2,,"<p>Looking at the <a href=""https://github.com/apollographql/apollo-server/blob/main/packages/apollo-server-express/src/index.ts#L16-L22"" rel=""nofollow noreferrer"">apollo-server/packages/apollo-server-express/src/index.ts</a>, that function is not exposed.</p>&#xA;<p><a href=""https://www.graphql-tools.com/docs/legacy-schema-directives/"" rel=""nofollow noreferrer"">SchemaDirectiveVisitor</a> is a legacy function from <code>graphql-tools</code>.</p>&#xA;<p><a href=""https://github.com/apollographql/apollo-server/blob/apollo-server-express%402.25.2/packages/apollo-server-express/src/index.ts#L21"" rel=""nofollow noreferrer"">apollo-server-express@2.X.X (last v2.25.2)</a> used <a href=""https://github.com/ardatan/graphql-tools/blob/v4.0.8/src/index.ts#L6"" rel=""nofollow noreferrer"">graphql-tools 4.0.8</a>&#xA;which still had that function.</p>&#xA;<p>You'll need to pin to a <code>v2</code> version of <code>apollo-server-express</code> to make use of that function.</p>&#xA;",16471349,,,,2021-07-25 22:48:10,"",,0,1,0,2021-07-25 22:48:10
68547707,1,,,1,72,"<p>My goal is to use 2 public apis such as <a href=""https://randomuser.me/api"" rel=""nofollow noreferrer"">https://randomuser.me/api</a> and universities.hipolabs.com/search?country=Australia</p>&#xA;<p>Build a gateway to retreive object results from both APIs.</p>&#xA;<p>For example use &quot;country&quot; in randomuser api and fetch universities by that country.</p>&#xA;",4633838,,,,2021-07-27 15:28:45,Graphql hotchocolate - How to stitch 2 schemas from public rest api in dotnet,<api><.net-core><graphql><hotchocolate>,0,0,0,2021-07-27 15:28:45
68565967,2,,68564879,1,,"<p>It's unclear from your question, but when do you <em>want</em> your query to be run?</p>&#xA;<ul>&#xA;<li>If it's supposed to be build time, why is the backend server not running? Where is Next.js supposed to get the data from then?</li>&#xA;<li>At request time, by the server? Use <a href=""https://nextjs.org/docs/basic-features/pages#server-side-rendering"" rel=""nofollow noreferrer"">getServerSideProps</a></li>&#xA;<li>At request time, by the client (browser?) Check for <code>typeof(window) !== 'undefined'</code> and use fetch + async/await.</li>&#xA;</ul>&#xA;",1737313,,,,2021-07-28 18:53:29,"",,0,2,0,2021-07-28 18:53:29
68568770,1,,,0,97,"<p>I have a PostgreSQL database with various relationships between different entities/tables. E.g. teachers and students, teachers and classrooms, students and classes. In my (express) backend*, I find myself writing a lot of tedious routes to extract data - the routes make similar but slightly different SQL queries (we use sequelize), e.g.</p>&#xA;<ul>&#xA;<li>get students based on age</li>&#xA;<li>get teachers based on school</li>&#xA;<li>get all students that learn with particular teacher(s)</li>&#xA;<li>get all teachers that teach particular student(s)</li>&#xA;<li>get all students that went to a class between certain times</li>&#xA;<li>get all students that went to a class between certain times and had certain teacher(s).</li>&#xA;</ul>&#xA;<p>granted, the last 2 could be merged into one REST endpoint easily by passing null for a when no teachers constraint. Still, there are many many more permutations and that number is only growing with new entities.</p>&#xA;<p>To speed up development, I am wondering if (i) GraphQL would buy us anything (we have ~30 routes today) (ii) if it is even possible to setup and use GraphQL to <em>somehow</em> connect to my postgreSQL (and redis) database without doing a LOT of boiler plate work.</p>&#xA;<p>I have had a look through the Apollo docs (<a href=""https://www.apollographql.com/docs/tutorial/data-source/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/tutorial/data-source/</a>), and looking at SQLDataSource (<a href=""https://github.com/cvburgess/SQLDataSource"" rel=""nofollow noreferrer"">https://github.com/cvburgess/SQLDataSource</a>), it seems that I still need to write/expose endpoints for every one of my scenarios - e.g. if i want to find which students have which teachers I still need to write a manual SQL query to do that and expose that as a method on a SQLDataSource object. I presume I am misunderstanding something here as I thought this was a key value proposition of GraphQL.</p>&#xA;<p>Thank you so much!</p>&#xA;<p>*we just have 1 service today but are adding another shortly</p>&#xA;",527302,,,,2021-07-29 07:51:24,Is GraphQL overkill for my node express backend,<api><rest><graphql><microservices><apollo-client>,1,0,0,2021-07-29 00:32:26
68578034,1,,,1,516,"<p>I have used module federation in Angular 12 with GraphQL integration in the below pattern<br></p>&#xA;<ol>&#xA;<li>Child2: Consists of two different modules(a and b) which are exposes to other mfes</li>&#xA;<li>Child1: Consumes 1 of the module(a) of Child2 and exposes module of its own</li>&#xA;<li>Mfe_Parent: Consumes both Child1 and Child2(with module(b))</li>&#xA;</ol>&#xA;<p>To overcome cache busting, I've used timestamp as queryparam along with remotePaths<br>&#xA;<strong>In Parent Mfe_Parent</strong>:</p>&#xA;<pre><code>const todayTs = new Date().setHours(0, 0, 0, 0);&#xA;module.exports = {&#xA;    plugins: [&#xA;        new ModuleFederationPlugin({&#xA;            remotes: {&#xA;                &quot;child1&quot;: `child1@https://child1.com/child1RemoteEntry.js?v=${todayTs}`,&#xA;                &quot;child2&quot;: `child2@https://child2.com/child2RemoteEntry.js?v=${todayTs}`,&#xA;            },&#xA;       })&#xA;]};&#xA;</code></pre>&#xA;<p><strong>In Child1 Mfe</strong>:</p>&#xA;<pre><code>const todayTs = new Date().setHours(0, 0, 0, 0);&#xA;module.exports = {&#xA;    plugins: [&#xA;        new ModuleFederationPlugin({&#xA;            remotes: {&#xA;                &quot;child2&quot;: `child2@https://child2.com/child2RemoteEntry.js?v=${todayTs}`,&#xA;            },&#xA;       })&#xA;]};&#xA;</code></pre>&#xA;<p>So with this approach the timestamp &quot;todayTs&quot; used will be the same while build and there will be only 1 instance of child2 is created which will be consumed by both Mfe_Parent and Child1. But with this approach if there is any change in Mfe_Parent which requires a deployment, we will still have to deploy Child1 even if there are no changes made, if not the &quot;todayTs&quot; will be different in both the remote paths and two instances will be created for Child2. Due to two instances created, GraphQL is not able to create two difference instance of the module from respective called mfes.</p>&#xA;<p>Is there any possible configuration or any way using which this dependency can be eliminated and only Mfe_Parent can be deployed without having to deploy Child1 always.</p>&#xA;",7591123,,,,2021-07-29 14:43:12,Module Federation: How to have multiple instance of the same remoteEntry file,<angular><graphql><webpack-5><webpack-module-federation>,0,0,0,2021-07-29 14:43:12
68586240,2,,61886756,7,,"<p>Basically, if you're tired of this:&#xA;<a href=""https://i.stack.imgur.com/9enYz.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/9enYz.png"" alt=""devTools network graphql queries"" /></a></p>&#xA;<p>Use this <a href=""https://chrome.google.com/webstore/detail/graphql-network-inspector/ndlbedplllcgconngcnfmkadhokfaaln?hl=en-GB"" rel=""noreferrer"">GraphQL Network Inspector</a> to get this:&#xA;<a href=""https://i.stack.imgur.com/s45SX.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/s45SX.png"" alt=""GraphQL Network Inspector - list query with names"" /></a>&#xA;<a href=""https://i.stack.imgur.com/JAsQO.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/JAsQO.png"" alt=""GraphQL Network Inspector - readable requests"" /></a>&#xA;<a href=""https://i.stack.imgur.com/bOtOz.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/bOtOz.png"" alt=""GraphQL Network Inspector - readable + usable responses"" /></a></p>&#xA;<p>If the link breaks in the future, just search &quot;chrome extensions GraphQL Network Inspector&quot;.</p>&#xA;<p>I know someone suggested this in the question's comment, but that URL is broken.</p>&#xA;<p>Also, I know the op specifically clarifies that they're looking for a in-code solution for all browsers in the comments, <strong>but their original question is what I was looking for &amp; this is my solution</strong>. This answer will be useful for people looking for this, as this extension has really helped me!</p>&#xA;<p>It works for me because while I do test in multiple browsers, most of my development happens in chromium. This solution works for anyone who develops the same way and using a chromium-based browser (chrome, brave, edge, etc).</p>&#xA;",512353,,512353,2021-07-30 06:21:53,2021-07-30 06:21:53,"",,0,3,0,2021-07-30 06:15:25
68590917,2,,68583833,0,,"<p>I seem to have fixed the problem.</p>&#xA;<p>In my case, there was a difference between the version of PostgreSQL I was running on my local machine and my server.</p>&#xA;<p>My server was running postgresql-9.2 while I was using postgresql-13 locally,&#xA;so upgrading my server's Postgres version fixed the issue.</p>&#xA;",14604732,,,,2021-07-30 12:24:05,"",,0,0,0,2021-07-30 12:24:05
68618259,1,,,1,242,"<p>having some issues getting lighthouse and nuxtjs to work together properly.</p>&#xA;<p>lighthouse requires a <code>schema.graphql</code> file inside the graphql directory, inside of this <code>schema.graphql</code> file you have the option to either place all of your code inside of this file, or split your code into specific graphql files (this is what I did) e.g.</p>&#xA;<pre><code>#import routes/*.graphql&#xA;#import posts/*.graphql&#xA;#import index/*.graphql&#xA;&#xA;type Query&#xA;&#xA;&#xA;type Mutation&#xA;&#xA;</code></pre>&#xA;<p>my other graphql files contain some file specific code, e.g. <code>post.graphql</code> contains this</p>&#xA;<pre><code>extend type Query {&#xA;    posts: [Post!]! @all&#xA;}&#xA;&#xA;&#xA;type Post {&#xA;    id:ID!,&#xA;    title:String!,&#xA;    content: String!&#xA;}&#xA;</code></pre>&#xA;<p>Now for simple queries this works fine, but when I started adding mutations things got a bit confusing.</p>&#xA;<p>So, I added a new file called <code>post-mutations.graphql</code> inside of the graphql directory in my laravel back-end, inside of this file I extend the mutation type</p>&#xA;<pre><code>extend type Mutation {&#xA;    createPost(input: createIndexInput! @spread): Post @create&#xA;}&#xA;&#xA;&#xA;input createPostInput{&#xA;    title: String!,&#xA;    slug: String!&#xA;}&#xA;</code></pre>&#xA;<p>this works completly fine, if I go to graphql-playground and call the mutation this works.</p>&#xA;<p>Now when I try calling the mutation on my front end (nuxt) is where it starts to break apart, so on my front-end I have a directory called apollo, inside of this directoy is where my graphql lives. I also have a file called <code>post-mutations.graphql</code> inside of this file is where I call the mutation that I created on the laravel back-end side</p>&#xA;<pre><code>mutation createPost($index: createPostInput!) {&#xA;  createPost(input: $index) {&#xA;    title,&#xA;    slug&#xA;  }&#xA;} &#xA;</code></pre>&#xA;<p>Now the problem here is that my front-end does not have access to the <code>createPostInput</code> type that I declared in my laravel app, so graphql throws an error about now knowing <code>createPostInput</code>, I thought about adding the input type in my front-end but if I have to do this for every type this just seems like I'm needlessly repeating myself?</p>&#xA;<p>also just a sidenote, I use the <code>graphql</code> extension inside of phpStorm, when I start phpStorm it asks me if I want to introspect my schema, if I do this it creates a new <code>schema.grapgql</code> file at the root of my directory, inside of this file are various declarations that seem to improve IDE type completion, maybe this is something worth looking into?</p>&#xA;",11988656,,,,2021-08-02 08:04:45,Laravel lighthouse graphql directory structure with a nuxtjs front-end,<laravel><graphql><laravel-lighthouse>,0,0,0,2021-08-02 08:04:45
68624233,1,,,5,2925,"<p>I updated my nextjs install and apollo,</p>&#xA;<blockquote>&#xA;<p>Error: Cannot find module 'micro' Require stack:</p>&#xA;<ul>&#xA;<li>C:\work\cloud\node_modules\apollo-server-micro\dist\ApolloServer.js</li>&#xA;<li>C:\work\cloud\node_modules\apollo-server-micro\dist\index.js</li>&#xA;<li>C:\work\cloud.next\server\pages\api\auth.js</li>&#xA;<li>C:\work\cloud\node_modules\next\dist\next-server\server\next-server.js</li>&#xA;<li>C:\work\cloud\node_modules\next\dist\server\next.js</li>&#xA;<li>C:\work\cloud\node_modules\next\dist\server\lib\start-server.js</li>&#xA;<li>C:\work\cloud\node_modules\next\dist\cli\next-dev.js</li>&#xA;<li>C:\work\cloud\node_modules\next\dist\bin\next&#xA;at Function.Module._resolveFilename (internal/modules/cjs/loader.js:902:15)&#xA;at Function.mod._resolveFilename (C:\work\cloud\node_modules\next\dist\build\webpack\require-hook.js:4:1855)&#xA;at Function.Module._load (internal/modules/cjs/loader.js:746:27)&#xA;at Module.require (internal/modules/cjs/loader.js:974:19)&#xA;at require (internal/modules/cjs/helpers.js:92:18)&#xA;at Object. (C:\work\cloud\node_modules\apollo-server-micro\dist\ApolloServer.js:5:17)&#xA;at Module._compile (internal/modules/cjs/loader.js:1085:14)&#xA;at Object.Module._extensions..js (internal/modules/cjs/loader.js:1114:10)&#xA;at Module.load (internal/modules/cjs/loader.js:950:32)&#xA;at Function.Module._load (internal/modules/cjs/loader.js:790:14) {   code: 'MODULE_NOT_FOUND',   requireStack: [&#xA;'C:\work\cloud\node_modules\apollo-server-micro\dist\ApolloServer.js',&#xA;'C:\work\cloud\node_modules\apollo-server-micro\dist\index.js',&#xA;'C:\work\cloud\.next\server\pages\api\auth.js',&#xA;'C:\work\cloud\node_modules\next\dist\next-server\server\next-server.js',&#xA;'C:\work\cloud\node_modules\next\dist\server\next.js',&#xA;'C:\work\cloud\node_modules\next\dist\server\lib\start-server.js',&#xA;'C:\work\cloud\node_modules\next\dist\cli\next-dev.js',&#xA;'C:\work\cloud\node_modules\next\dist\bin\next'   ] }</li>&#xA;</ul>&#xA;</blockquote>&#xA;<p>I'm not surewhat's missing as this was working before the package update - reading up on online docs there doesn't seemt o have been any changes made to how apollo server micro works?</p>&#xA;",79891,,,,2022-01-31 07:39:15,Micro MODULE_NOT_FOUND after updating to nextjs 11,<node.js><next.js><apollo><apollo-server>,2,0,0,2021-08-02 15:27:17
68638668,2,,68638667,2,,<p>The solution was to downgrade the <strong>Node version</strong> to <strong>12.18</strong> from <strong>14.17</strong>.</p>&#xA;,9885430,,,,2021-08-03 15:16:49,"",,0,0,0,2021-08-03 15:16:49
68730000,1,68762818,,0,361,"<p>I am developing a graphql api using ariadne and fastapi and thinking of launching it on hypercorn server. I don't have to serve static files and images. So, In my case is it necessary to use nginx or apache2 with hypercorn while I am going in production.</p>&#xA;<p>Note:- There will be a heavy traffic on this server</p>&#xA;<p>If it is necessary to use apache2/nginx , how can I configure to use it with hypercorn ?</p>&#xA;",14260268,,,,2021-08-12 18:53:54,is it neccesary to use nginx or apache for python web in production?,<nginx><apache2><fastapi><hypercorn><ariadne-graphql>,1,0,0,2021-08-10 15:56:43
68733213,2,,68732447,0,,"<p>I fix it by the upgrade to the latest version of  <a href=""https://github.com/enisdenjo/graphql-ws/releases/tag/v5.3.0"" rel=""nofollow noreferrer"">graphql-ws</a></p>&#xA;",3240583,,,,2021-08-10 20:37:13,"",,0,0,0,2021-08-10 20:37:13
68748099,2,,68747887,4,,"<p>Looks like there have been some breaking changes to the MongoDB driver lately. Are you using mongo 4.x?</p>&#xA;<p>The issue is likely coming from <a href=""https://github.com/typeorm/typeorm/blob/master/src/entity-manager/MongoEntityManager.ts#L175"" rel=""nofollow noreferrer"">here</a></p>&#xA;<p>You're going to need to pin your mongo version to 3.x until it's supported.</p>&#xA;<p>Relevant Github issues:</p>&#xA;<ul>&#xA;<li><a href=""https://github.com/typeorm/typeorm/issues/7086"" rel=""nofollow noreferrer"">https://github.com/typeorm/typeorm/issues/7086</a></li>&#xA;<li><a href=""https://github.com/typeorm/typeorm/issues/7907#issuecomment-880518853"" rel=""nofollow noreferrer"">https://github.com/typeorm/typeorm/issues/7907#issuecomment-880518853</a></li>&#xA;</ul>&#xA;",1364771,,,,2021-08-11 19:45:15,"",,0,0,0,2021-08-11 19:45:15
68748146,2,,68747887,1,,"<p>Your <code>@nestjs/common</code>,<code>@nestjs/core</code>, and <code>@nestjs/platform-express</code> versions are back on major version 7, but you're using <code>@nestjs/graphql</code> and <code>@nestjs/typeorm</code> are using major version 8. Make sure these major versions are kept in sync, or you'll end up with errors like these.</p>&#xA;<p>Also, TypeORM does not support Mongo v4, so make sure you have mongo v3 installed as well, as Jesse mentioned.</p>&#xA;<hr />&#xA;<p>If I had to guess what happened, you generated a new project using the Nest CLI on v7, then installed the graphql and typeorm packages for Nest which will install the <code>@latest</code> of them, v8. I'd suggest upgrading your Nest CLI to version 8 to avoid this in the future.</p>&#xA;",9576186,,,,2021-08-11 19:49:49,"",,0,0,0,2021-08-11 19:49:49
68754274,1,68812242,,0,177,"<p>I'm building a project with Laravel 8 and installed <code>https://github.com/rebing/graphql-laravel</code> in order to use GraphQL in my project. I have a mutation called 'UpdateUserMutation' which extends from Mutation, and it has an args function to retrieve data that the user sent. Basically, it looked like this;</p>&#xA;<pre><code>    public function args(): array&#xA;    {&#xA;        return [&#xA;            'id' =&gt; [&#xA;                'name' =&gt; 'id',&#xA;                'type' =&gt; Type::nonNull(Type::int()),&#xA;                'rules' =&gt; [&#xA;                    'required',&#xA;                    'numeric',&#xA;                    'exists:users'&#xA;                ]&#xA;            ],&#xA;&#xA;            'name' =&gt; [&#xA;                'name' =&gt; 'name',&#xA;                'type' =&gt; Type::string(),&#xA;                'rules' =&gt; [&#xA;                    'string',&#xA;                    'min:3',&#xA;                    'max:191'&#xA;                ]&#xA;            ],&#xA;&#xA;            'email' =&gt; [&#xA;                'name' =&gt; 'email',&#xA;                'type' =&gt; Type::string(),&#xA;                'rules' =&gt; [&#xA;                    'string',&#xA;                    'min:3',&#xA;                    'max:191',&#xA;                    'email:rfc,dns',&#xA;                    'unique:users,email,' . 'id'&#xA;                ]&#xA;            ],&#xA;&#xA;            'department_id' =&gt; [&#xA;                'name' =&gt; 'department_id',&#xA;                'type' =&gt; Type::int(),&#xA;                'rules' =&gt; [&#xA;                    'numeric',&#xA;                    'exists:departments,id'&#xA;                ]&#xA;            ]&#xA;        ];&#xA;    }&#xA;```&#xA;&#xA;I define Laravel validation rules inside of each element. I need to define the 'unique' rule for the email field but of course, I need to exclude that user's email address if the user doesn't change his/her email address. So, I need to access the id element which is inside args function. How can I do that?&#xA;</code></pre>&#xA;",10137328,,,,2021-08-17 05:45:23,Laravel GraphQL Access an Arg inside args Function,<laravel><graphql><laravel-8>,1,0,0,2021-08-12 08:47:54
68814406,1,,,0,60,"<p>I'm attempting to send data from my front-end (Nextjs) using a GraphQL Mutation to my backend (Java Spring). My issue is that when I call the Mutation from the GraphQL playground, in my backend, I got an object with null properties. Here is some bribes of the codes:</p>&#xA;<p>My Mutation definition:</p>&#xA;<pre><code>export const SystemMutation = mutationType({&#xA;    definition(t) {&#xA;        t.field(&quot;addSystem&quot;,{&#xA;            type: System,&#xA;            args: {&#xA;                input: arg({&#xA;                    type: SystemInput&#xA;                })&#xA;            },&#xA;            async resolve(_parent, args, _context) {&#xA;                return await createSystem(args.input);&#xA;            }&#xA;        })&#xA;    }&#xA;})&#xA;</code></pre>&#xA;<p>Here is the function to call the backend to store the data.</p>&#xA;<pre><code>export const createSystem = async (system) =&gt; {&#xA;    const res = await axios.post(`${server}/api/system/add`, system);&#xA;    return res.data;&#xA;}&#xA;</code></pre>&#xA;<p>And last the Spring controller that should receive the data in which when I debug the system variable, I got an object with null value in all attributes.</p>&#xA;<pre><code>@PostMapping(&quot;/add&quot;)&#xA;    public ResponseEntity&lt;?&gt; add(@Validated(SystemDto.Create.class) @ModelAttribute SystemDto system,&#xA;                                 BindingResult result) {&#xA;        return this.systemService.createSystem(system, result);&#xA;    }&#xA;</code></pre>&#xA;<p>If I console.log the parameter &quot;system&quot; in the front-end, I got the data I wanna send. But when I send it in the backend I got a null object.</p>&#xA;<p>Do I miss something there?</p>&#xA;<p>Thanks for your lights guys.</p>&#xA;",13465052,,13465052,2021-08-17 09:32:18,2021-08-17 09:32:18,React/Nextjs with GraphQL: Posting data to backend (Spring) getting null object,<typescript><graphql><next.js>,0,4,0,2021-08-17 08:52:30
68818543,1,68820938,,0,129,"<p>I'm having an issue like <a href=""https://github.com/rails/rails/issues/7245"" rel=""nofollow noreferrer"">this</a>. Not all zones are returning with:</p>&#xA;<pre class=""lang-rb prettyprint-override""><code>ActiveSupport::TimeZone.all.sort_by {|t| t.name}.map { |tz|&#xA;  #symbol = tz.tzinfo.identifier.gsub(/[^_a-zA-Z0-9]/, '_').squeeze('_').upcase!&#xA;  &#xA;  tz.to_s #&gt; (GMT+00:00) Edinburgh for example&#xA;}&#xA;</code></pre>&#xA;<p>I need to use the <code>.to_s</code> to get the UTC <code>(GMT+00:00)</code>. With the above, <code>London</code> is missing and I assume others. This one works great:</p>&#xA;<pre class=""lang-rb prettyprint-override""><code>ActiveSupport::TimeZone::MAPPING.sort_by {|k,v| k}.map { |k,v|&#xA;  #symbol = k.gsub(/[^_a-zA-Z0-9]/, '_').squeeze('_').upcase!&#xA;  &#xA;  k #&gt; London London is included with this method&#xA;}&#xA;</code></pre>&#xA;<p>I cannot use this method because I do not know how to get the <code>(GMT+00:00)</code> in <code>(GMT+00:00) London</code></p>&#xA;<p>Has the bug return? How to get all the zones show for the first example?</p>&#xA;<p>Edit.</p>&#xA;<p>I'm using <a href=""https://graphql-ruby.org/"" rel=""nofollow noreferrer"">GraphQL-ruby</a>. I've created an enum to return a list of time zones:</p>&#xA;<pre class=""lang-rb prettyprint-override""><code># Taken from: https://gist.github.com/pedrocarmona/f41d25e631c1144045971c319f1c9e17&#xA;class Types::TimeZoneEnumType &lt; Types::BaseEnum&#xA;  ActiveSupport::TimeZone.all.sort_by {|t| t.name}.map { |tz|&#xA;    symbol = tz.tzinfo.identifier.gsub(/[^_a-zA-Z0-9]/, '_').squeeze('_').upcase&#xA;    value(&quot;TZ_#{symbol}&quot;, tz.to_s)&#xA;  }&#xA;end&#xA;</code></pre>&#xA;<p>Then inside <code>query_type.rb</code></p>&#xA;<pre class=""lang-rb prettyprint-override""><code>[..]&#xA;&#xA;field :time_zones, Types::TimeZoneEnumType, null: false&#xA;&#xA;[..]&#xA;&#xA;</code></pre>&#xA;<p>Next, inside graphiql, I make the query:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>query timeZones{&#xA;  __type(name: &quot;TimeZoneEnum&quot;) {&#xA;    enumValues {&#xA;      name&#xA;      description&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Which returns something like, except London:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>[&#xA;  [..]&#xA;&#xA;  {&#xA;    &quot;name&quot;: &quot;TZ_AMERICA_LA_PAZ&quot;,&#xA;    &quot;description&quot;: &quot;(GMT-04:00) La Paz&quot;&#xA;  },&#xA;  {&#xA;    &quot;name&quot;: &quot;TZ_AMERICA_LIMA&quot;,&#xA;    &quot;description&quot;: &quot;(GMT-05:00) Lima&quot;&#xA;  },&#xA;  {&#xA;    &quot;name&quot;: &quot;TZ_EUROPE_LISBON&quot;,&#xA;    &quot;description&quot;: &quot;(GMT+00:00) Lisbon&quot;&#xA;  },&#xA;  {&#xA;    &quot;name&quot;: &quot;TZ_EUROPE_LJUBLJANA&quot;,&#xA;    &quot;description&quot;: &quot;(GMT+01:00) Ljubljana&quot;&#xA;  },&#xA;  {&#xA;    &quot;name&quot;: &quot;TZ_EUROPE_MADRID&quot;,&#xA;    &quot;description&quot;: &quot;(GMT+01:00) Madrid&quot;&#xA;  },&#xA;  &#xA;  [..]&#xA;]&#xA;</code></pre>&#xA;<p>After <code>Ljubljana</code> I should see &quot;London&quot; but it's not there.</p>&#xA;",3581788,,3581788,2021-08-17 14:39:36,2021-08-17 16:26:06,ActiveSupport TimeZone not returning all zones,<ruby-on-rails><ruby><graphql-ruby>,1,4,0,2021-08-17 13:47:02
68822773,1,,,1,200,"<p>I’m running a GraphQL/Apollo/React stack and am trying to implement MockedProvider in my tests since it seems like a great way of abstracting away a lot of mocks. However, I keep running into the following error. I’ve tried updating, stepping through, and I’m still not sure why the import is failing. Any help would be great, thanks!</p>&#xA;<p><a href=""https://i.stack.imgur.com/muvYL.png"" rel=""nofollow noreferrer"">My test code and the error</a></p>&#xA;<p><strong>Test Code:</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>test.only('Renders with MockedProvider', () =&gt; {&#xA;  render(&#xA;    &lt;MockedProvider mocks={mocks}&gt;&#xA;      &lt;DailyInspection /&gt;&#xA;    &lt;/MockedProvider&gt;&#xA;  )&#xA;})</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p><strong>Error:</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>TypeError: graphql.isType is not a function&#xA;&#xA;       6 | import userEvent from '@testing-library/user-event'&#xA;       7 | import DailyInspection from '../index'&#xA;    &gt;  8 | import { MockedProvider } from '@apollo/client/testing'&#xA;         | ^&#xA;       9 |&#xA;      10 | import {&#xA;      11 |   GetProjectControlPointsIdsAndGuidsDocument,&#xA;&#xA;      at removeTemporaryGlobals (../node_modules/@apollo/client/utilities/globals/graphql.js:4:5)&#xA;      at Object.&lt;anonymous&gt; (../node_modules/@apollo/client/utilities/globals/index.js:5:1)&#xA;      at Object.&lt;anonymous&gt; (../node_modules/@apollo/client/testing/testing.cjs.js:6:17)&#xA;      at Object.&lt;anonymous&gt; (src/views/DailyInspection/__tests__/DailyInspection.test.tsx:8:1)</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",14899219,,,,2021-09-27 08:51:39,"""TypeError: graphql.isType is not a function""",<reactjs><testing><apollo><apollo-client>,0,2,0,2021-08-17 19:04:32
68848395,2,,68808571,1,,"<p>Support for the <code>JWT_COOKIE_SAMESITE</code> setting was added for django-graphql-jwt on version <code>v0.3.2</code>. You can check the releases here <a href=""https://github.com/flavors/django-graphql-jwt/releases"" rel=""nofollow noreferrer"">releases</a>. While the current django-graphql-auth package relies on django-graphql-jwt <code>v0.3.0</code>. Updating your requirements will solve this issue.</p>&#xA;",6781048,,,,2021-08-19 13:02:14,"",,0,0,0,2021-08-19 13:02:14
68874903,1,68875008,,0,265,"<p>I'm running three of my services inside docker containers</p>&#xA;<pre><code>container 1 =&gt; nginx (for routing)&#xA;container 2 =&gt; nextjs app (client)&#xA;container 3 =&gt; apollo server (on top of express)&#xA;</code></pre>&#xA;<p>Is it possible to have direct access to server(container 3) from the client (container 2) ?</p>&#xA;<pre><code>const client = new ApolloClient({&#xA;  uri: &quot;http://api&quot;, // &lt;=== this gives following error&#xA;  cache: new InMemoryCache(),&#xA;});&#xA;&#xA;Error: request to http://api/ failed, reason: connect ECONNREFUSED 172.20.0.3:80&#xA;</code></pre>&#xA;<p>here is my docker-compose file</p>&#xA;<pre><code>version: &quot;3&quot;&#xA;&#xA;services:&#xA;  nginx:&#xA;    restart: always&#xA;    depends_on:&#xA;      - client&#xA;      - api&#xA;    build:&#xA;      dockerfile: Dockerfile.dev&#xA;      context: ./nginx&#xA;    ports:&#xA;      - &quot;80:80&quot;&#xA;  client:&#xA;    build:&#xA;      dockerfile: Dockerfile.dev&#xA;      context: ./client&#xA;    ports:&#xA;      - &quot;3000:3000&quot;&#xA;    links:&#xA;      - &quot;api:server&quot;&#xA;    volumes:&#xA;      - /client/node_modules&#xA;      - ./client:/client&#xA;  api:&#xA;    build:&#xA;      dockerfile: Dockerfile.dev&#xA;      context: ./server&#xA;    ports:&#xA;      - &quot;4000:4000&quot;&#xA;    volumes:&#xA;      - /server/node_modules&#xA;      - ./server/src:/server/src&#xA;</code></pre>&#xA;",1390894,,,,2021-08-21 16:51:04,Apollo client uri configuration inside docker,<node.js><docker><nginx><apollo-client><apollo-server>,1,0,0,2021-08-21 16:34:59
68875008,2,,68874903,0,,"<p>As long as <code>api</code> exposes a port, then yes.</p>&#xA;<p>The error suggests that <code>api</code> is <strong>not</strong> exposing the default port (<code>80</code>) used by <code>http://api/</code></p>&#xA;<p>The Docker Compose defines the container port <code>4000</code> (the value of <code>Y</code> in <code>X:Y</code>) for <code>api</code> and exposes this port on the host (also as <code>4000</code>, the value of <code>X</code> in <code>X:Y</code>).</p>&#xA;<p>If that is accurate, then you'll need to reference the port as <code>http://api:4000/</code>.</p>&#xA;<blockquote>&#xA;<p><strong>NOTE</strong> The <code>ports</code> array only defines port mappings between the host and the container but you must ensure that the container port referenced is indeed exposed by the container.</p>&#xA;</blockquote>&#xA;",609290,,,,2021-08-21 16:51:04,"",,0,1,0,2021-08-21 16:51:04
68882271,1,,,1,229,"<p>Here's my code , and I think I follow the next-urql instruction completely,</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { withUrqlClient } from &quot;next-urql&quot;&#xA;import { dedupExchange,cacheExchange,fetchExchange,ssrExchange } from &quot;urql&quot;;&#xA;// import { cacheExchange } from &quot;@urql/exchange-graphcache&quot;;&#xA;import { Navbar } from &quot;../components/Navbar&quot;&#xA;import { useTodosQuery } from &quot;../generated/graphql&quot;;&#xA;import { createUrqlClient } from &quot;../utils/createUrqlClient&quot;&#xA;&#xA;const Index = () =&gt; {&#xA;  const [{data}] = useTodosQuery();&#xA;  return(&#xA;    &lt;&gt;&#xA;    &lt;Navbar/&gt;&#xA;    &lt;div&gt;Hello world&lt;/div&gt;&#xA;    &lt;br&gt;&lt;/br&gt;&#xA;    {!data ? (&lt;div&gt;Loading...&lt;/div&gt;): data.todos.map((todo) =&gt; &lt;div key={todo.id}&gt;{todo.title}&lt;/div&gt;)}&#xA;    &lt;/&gt;&#xA;  )&#xA;};&#xA;&#xA;export default withUrqlClient( (ssrExchange:any)=&gt;({&#xA;  url:'https://localhost:4000/graphql',&#xA;  //for the cookie to workz&#xA;  fetchOptions:{&#xA;    credentials:&quot;include&quot; &#xA;  },&#xA;  //for cache update&#xA;  exchanges: [dedupExchange,cacheExchange, ssrExchange, fetchExchange]&#xA;}))(Index);&#xA;</code></pre>&#xA;<p>So here's the thing , it works fine when I don't set {ssr:true}, but in order to use server-side-rendering I have to activate it , and after that , My website would'nt send any request to my server, so it failed to work , I wonder why is that</p>&#xA;",11151389,,,,2021-12-20 15:15:54,withUrqlClient does'nt work when activate ssr?,<graphql><next.js><urql>,1,0,0,2021-08-22 14:29:32
68885813,2,,68354656,1,,<p>One other option is to downgrade your apollo to any 2.x.x. It solved my problem</p>&#xA;,2155965,,,,2021-08-22 23:16:07,"",,0,0,0,2021-08-22 23:16:07
68891484,2,,66128225,2,,"<p>I faced the same issues and discovered that my project was making use of <a href=""https://github.com/realm/SwiftLint"" rel=""nofollow noreferrer"">SwiftLint</a>. Please check if you are using SwiftLint in your pod file.</p>&#xA;<p>One of the default enabled SwiftLint rules <a href=""https://github.com/realm/SwiftLint/blob/master/Source/SwiftLintFramework/Rules/Style/IdentifierNameRule.swift"" rel=""nofollow noreferrer"">Identifier Name</a> is causing the Identifier Name Violation error message within the automatically generated Apollo GraphQL API.swift file.</p>&#xA;<p>Description of the Identifier Name rule:</p>&#xA;<blockquote>&#xA;<p>Identifier names should only contain alphanumeric characters and start with a lowercase character or should only contain capital letters. In an exception to the above, variable names may start with a capital letter when they are declared static and immutable. Variable names should not be too long or too short.</p>&#xA;</blockquote>&#xA;<p>You have 2 options to disable this rule.</p>&#xA;<p><strong>Option 1: Disable the rule for your complete project</strong>:</p>&#xA;<p>If you don’t want to use specific SwiftLint rule(s) for your project then you can disable those rules completely by adding and <a href=""https://github.com/realm/SwiftLint#configuration"" rel=""nofollow noreferrer"">configuring</a> .swiftlint.yml in your xcode project.</p>&#xA;<pre><code>disabled_rules: # rule identifiers to exclude from running&#xA;&#xA;  - identifier_name&#xA;</code></pre>&#xA;<p><strong>Option 2: Disable rule at file level</strong></p>&#xA;<p>Add disable <a href=""https://github.com/realm/SwiftLint#disable-rules-in-code"" rel=""nofollow noreferrer"">comment</a> above the line that throws the error with '__typename'.</p>&#xA;<pre><code>// swiftlint:disable:this identifier_name&#xA;</code></pre>&#xA;<p>I would suggest to use <strong>option 1</strong> because option 2 will require you to disable the Generate Apollo GraphQL API Build Phase as this will re-generate your API.swift file.</p>&#xA;<p>My setup:</p>&#xA;<ul>&#xA;<li>Xcode: Version 12.4</li>&#xA;<li>Mac OS X: Version: 10.15.7</li>&#xA;<li>Apollo: apollo/2.33.4 darwin-x64 node-v12.18.3</li>&#xA;</ul>&#xA;",3177963,,3177963,2021-08-23 11:17:10,2021-08-23 11:17:10,"",,0,0,0,2021-08-23 11:03:14
68895508,1,,,0,116,"<p>I'm writing an API in NestJS which fetches data stored in a MongoDB database and uses GraphQL to return it. It's supposed to fetch <code>Devices</code> with an attribute called <code>location</code> - a GeoJSON point. There's also a <code>2dsphere</code> index on it, which allows searching for <code>Devices</code> in a circle using <code>$geoNear</code> query. Everything works fine on a local machine, but when the API is deployed on a server, querying for <code>Devices</code> in a circle returns no records, despite records and the index being present.</p>&#xA;<p>Search query looks like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>  const location = [input.center.lng, input.center.lat]&#xA;&#xA;  return [&#xA;    {&#xA;      $geoNear: {&#xA;        near: {&#xA;          type: 'Point',&#xA;          coordinates: location&#xA;        },&#xA;        distanceField: 'distance',&#xA;        maxDistance: input.radius,&#xA;        key: 'location'&#xA;      }&#xA;    }&#xA;  ]&#xA;</code></pre>&#xA;<p>DevicesService using this pipeline:</p>&#xA;<p>The database is deployed using Kubernetes. Here's the config:</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>apiVersion: apps/v1&#xA;kind: Deployment&#xA;metadata:&#xA;  annotations:&#xA;    kompose.cmd: kompose convert&#xA;    kompose.version: 1.22.0 (955b78124)&#xA;  creationTimestamp: null&#xA;  labels:&#xA;    io.kompose.service: v3-ds-mongo&#xA;  name: v3-ds-mongo&#xA;spec:&#xA;  replicas: 1&#xA;  selector:&#xA;    matchLabels:&#xA;      io.kompose.service: v3-ds-mongo&#xA;  strategy:&#xA;    type: Recreate&#xA;  template:&#xA;    metadata:&#xA;      annotations:&#xA;        kompose.cmd: kompose convert&#xA;        kompose.version: 1.22.0 (955b78124)&#xA;      creationTimestamp: null&#xA;      labels:&#xA;        io.kompose.service: v3-ds-mongo&#xA;    spec:&#xA;      containers:&#xA;        - env:&#xA;            - name: MONGO_INITDB_ROOT_PASSWORD&#xA;              value: password&#xA;            - name: MONGO_INITDB_ROOT_USERNAME&#xA;              value: root&#xA;          image: mongo:latest&#xA;          name: v3-ds-mongo&#xA;          ports:&#xA;            - containerPort: 27017&#xA;          resources: {}&#xA;          volumeMounts:&#xA;            - mountPath: /data/db&#xA;              name: v3-ds-mongo-claim0&#xA;      restartPolicy: Always&#xA;      volumes:&#xA;        - name: v3-ds-mongo-claim0&#xA;          persistentVolumeClaim:&#xA;            claimName: v3-ds-mongo-claim0&#xA;status: {}&#xA;</code></pre>&#xA;<p>Thank you for your help in advance.</p>&#xA;",6350336,,,,2021-08-24 19:31:07,Nest JS / MongoDB - geospatial index not working on deployed server,<mongodb><graphql><nestjs>,1,0,0,2021-08-23 15:45:41
68915155,2,,68913552,0,,"<p>This is a bug that will be fixed with this PR:&#xA;<a href=""https://github.com/ChilliCream/hotchocolate/pull/4129"" rel=""nofollow noreferrer"">https://github.com/ChilliCream/hotchocolate/pull/4129</a></p>&#xA;",7188852,,,,2021-08-24 23:35:28,"",,0,0,0,2021-08-24 23:35:28
68915996,2,,64960375,1,,"<p>After month of struggling and using work arounds like switching to Apache2 etc...&#xA;I guess i found a solution.</p>&#xA;<p>As described in my original Question, the problem occured after a the nginx server was running for a while already. After a reload of the nginx server the problem disappeared temporarily. With apache2 i did not have this problem. So that way i kind of isolated the issue to nginx itself.</p>&#xA;<p>I now tried to disable the request caching of nginx by setting:</p>&#xA;<pre><code>proxy_request_buffering off; &lt;===&#xA;&#xA;client_max_body_size 500M;&#xA;client_body_buffer_size 500M;&#xA;</code></pre>&#xA;<p>I also raised the buffering size for testing and it works right now.&#xA;This issue did not seem to be related to Laravel, Graphql or PHP at all.&#xA;For anyone who may stumble across this topic, i'm going to edit my original question accordingly. I hope this may help someone in the future.</p>&#xA;",7489302,,,,2021-08-25 02:20:47,"",,0,0,0,2021-08-25 02:20:47
68924405,1,,,0,453,"<p>I have my data stored in mongodb and I'm trying to implemet subscription using graphql spqr and project reactive.&#xA;I'm getting respones for when I'm trying to test mutations and query, but I keep on getting the following error message for subsctiptions:</p>&#xA;<blockquote>&#xA;<p>{   &quot;error&quot;: &quot;Could not connect to websocket endpoint&#xA;ws://localhost:8080/subscriptions. Please check if the endpoint url is&#xA;correct.&quot; }</p>&#xA;</blockquote>&#xA;<p>I've done some reserch on this issue and came accross <a href=""https://github.com/leangen/graphql-spqr/issues/140"" rel=""nofollow noreferrer"">this</a>, including &quot;spring-boot-starter-websocket&quot; in my dependencies didn't solve this, anf I'm not using firefox as my browser for the playground gui.</p>&#xA;<p>I followed <a href=""https://github.com/leangen/graphql-spqr-samples/blob/master/spring-boot-starter-sample/src/main/java/io/leangen/graphql/samples/service/TaskService.java#L60"" rel=""nofollow noreferrer"">this</a> example on how to implement subscriptions using graphql spqr, and when I trying to clone the project the subscription actualy worked just fine.</p>&#xA;<p>Can't fine any difference on my implementation from the project above...&#xA;Here is my build.gradle file:</p>&#xA;<pre><code>    configurations {&#xA;&#xA;    compile.exclude module: 'spring-boot-starter-tomcat'&#xA;    compile.exclude group: 'org.apache.tomcat'&#xA;&#xA;    compileOnly {&#xA;        extendsFrom annotationProcessor&#xA;    }&#xA;}&#xA;&#xA;dependencies {&#xA;&#xA;   &#xA;    // https://mvnrepository.com/artifact/de.flapdoodle.embed/de.flapdoodle.embed.mongo&#xA;    testImplementation group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '3.0.0'&#xA;&#xA;    // https://mvnrepository.com/artifact/io.leangen.graphql/graphql-spqr-spring-boot-starter&#xA;    implementation group: 'io.leangen.graphql', name: 'graphql-spqr-spring-boot-starter', version: '0.0.6'&#xA;&#xA;    implementation group: 'io.leangen.graphql', name: 'spqr', version: io_leangen_graphql_spqr&#xA;&#xA;    // https://mvnrepository.com/artifact/com.graphql-java-kickstart/playground-spring-boot-starter&#xA;    implementation group: 'com.graphql-java-kickstart', name: 'playground-spring-boot-starter', version: '11.1.0'&#xA;&#xA;    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-websocket&#xA;    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '2.5.4'&#xA;&#xA;&#xA;    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-mongodb-reactive&#xA;    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb-reactive', version: '2.5.4'&#xA;&#xA;    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux&#xA;    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.5.4'&#xA;&#xA;    compileOnly group: 'org.projectlombok', name: 'lombok', version: org_projectlombok_lombok_version&#xA;    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: org_projectlombok_lombok_version&#xA;}&#xA;</code></pre>&#xA;<p>I'm using</p>&#xA;<pre><code>compile.exclude module: 'spring-boot-starter-tomcat'&#xA;    compile.exclude group: 'org.apache.tomcat'&#xA;</code></pre>&#xA;<p>To start netty instead of tomcat</p>&#xA;<p>And here is my subsctiption implementation:</p>&#xA;<pre><code>@Autowired&#xA;private ProductRepository productRepository;&#xA;&#xA;private final ConcurrentMultiMap&lt;Double, FluxSink&lt;ProductDto&gt;&gt; subscribers = new ConcurrentMultiMap&lt;&gt;();&#xA;&#xA;@GraphQLQuery&#xA;public Flux&lt;ProductDto&gt; getProducts(){&#xA;    return productRepository.findAll().map(AppUtils::ProductEntityToDto);&#xA;}&#xA;&#xA;@GraphQLSubscription&#xA;public Publisher&lt;ProductDto&gt; taskStatusChanged(double price) {&#xA;    return Flux.create(subscriber -&gt; subscribers.add(price, subscriber.onDispose(() -&gt; subscribers.remove(price, subscriber))), FluxSink.OverflowStrategy.LATEST);&#xA;}&#xA;</code></pre>&#xA;<p>Is there something I'm missing in my code? Or a dependancy? Or any other configuration? Any help would be very appreciated...</p>&#xA;",10244272,,10244272,2021-08-25 16:37:45,2021-10-09 04:56:46,"""error"": ""Could not connect to websocket endpoint ws://localhost:8000/subscriptions. Please check if the endpoint url is correct."" for graphql spqr",<spring-webflux><spring-websocket><graphql-subscriptions><graphql-spqr><graphql-spqr-spring-boot-starter>,1,0,0,2021-08-25 14:04:44
68947905,1,68992903,,0,1155,"<p>I have a graphql api with apollo-server. I tested all queries, mutations and subscriptions with Graphql Playground.</p>&#xA;<p>I am developing the client app in Flutter using Ferry package as grapqhl client. All queries and mutations work fine, but subscriptions don't.</p>&#xA;<p>When sending a subscription request the websocket connection is established, however the subscription is not started. I tested the subscription on the Graphql Playground and the connection request messages looks like this</p>&#xA;<p><a href=""https://i.stack.imgur.com/Cq38s.png"" rel=""nofollow noreferrer"">Graphql Playground network panel</a></p>&#xA;<p>but with ferry client it get stuck on connection_init</p>&#xA;<p><a href=""https://i.stack.imgur.com/WpMxb.png"" rel=""nofollow noreferrer"">Flutter Web app network panel</a></p>&#xA;<pre class=""lang-js prettyprint-override""><code>var link = WebSocketLink(&#xA;      &quot;ws://localhost:4000/graphql&quot;,&#xA;      initialPayload: {&quot;subscriptionParam&quot;: arg},&#xA;    );&#xA;var client = Client(link: link);&#xA;client.request(request).listen((data) {//request is an object from autogenerated class from ferry&#xA;      log(data.toString());//never gets here&#xA;    }, onError: (error, stack) {&#xA;      log(&quot;Subscription error: &quot; + error.toString());&#xA;    }); &#xA;</code></pre>&#xA;<p>What is wrong in my code? Help please!</p>&#xA;",15228723,,,,2021-08-31 04:30:56,how can I make Flutter graphql subscription work with ferry package?,<flutter><graphql><subscription><apollo-server>,1,0,0,2021-08-27 04:02:51
68951440,1,68956560,,-1,37,"<p>Here is my query</p>&#xA;<pre><code>  $locale: String! = &quot;$locale&quot;&#xA;  $searchKey: String! = &quot;$searchKey&quot;&#xA;  $contentType: String! = &quot;$contentType&quot;&#xA;  $start : Int = $start&#xA;  $limit : Int = $limit&#xA;) {&#xA;  contents(&#xA;    locale: $locale&#xA;    start: $start&#xA;    limit:  $limit&#xA;    sort: &quot;priority:asc&quot;&#xA;    where: {&#xA;      _or: [&#xA;        { title_contains: $searchKey }&#xA;        { keywords_contains: $searchKey } &#xA;      ]&#xA;      ct_lookup: { code_contains: $contentType }&#xA;    }&#xA;  ) {&#xA;    id&#xA;    title&#xA;    &#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and I'm passing parameters</p>&#xA;<pre><code>{&#xA;  &quot;locale&quot;:&quot;sv&quot;,&#xA;  &quot;searchKey&quot;:&quot;&quot;,&#xA;  &quot;contentType&quot;:&quot;&quot;,&#xA;  &quot;start&quot;: 4,&#xA;  &quot;limit&quot;: 2&#xA;  &#xA;  &#xA;}&#xA;</code></pre>&#xA;<p>In the <strong>query</strong> in 4th line I get an error &quot;Synatax error: unexpected $&quot;&#xA;the line is <code>$start : Int = $start</code>. How to solve this error?</p>&#xA;",9438103,,,,2021-08-27 16:15:52,Graphgql parameter passing error 'Synatax error: unexpected $' for integer?,<graphql>,1,0,0,2021-08-27 09:55:48
68956560,2,,68951440,1,,<p>You set default values to your params.</p>&#xA;<pre><code>  $locale: String! = &quot;$locale&quot; &lt;-- defaultValue&#xA;  $searchKey: String! = &quot;$searchKey&quot; &lt;-- defaultValue&#xA;  $contentType: String! = &quot;$contentType&quot; &lt;-- defaultValue&#xA;  $start : Int = $start &lt;-- defaultValue&#xA;  $limit : Int = $limit &lt;-- defaultValue&#xA;</code></pre>&#xA;<p>Your params should look like this:</p>&#xA;<pre><code> $locale: String!&#xA; $searchKey: String!&#xA; $contentType: String!&#xA; $start : Int&#xA; $limit : Int&#xA;</code></pre>&#xA;,5888214,,,,2021-08-27 16:15:52,"",,0,0,0,2021-08-27 16:15:52
68956777,2,,68933201,0,,"<p>The apollo-server runs in a node environment, so you are able to use any http client you want.</p>&#xA;<p>Example:</p>&#xA;<ul>&#xA;<li><a href=""https://www.npmjs.com/package/axios"" rel=""nofollow noreferrer"">axios</a></li>&#xA;<li><a href=""https://www.npmjs.com/package/node-fetch"" rel=""nofollow noreferrer"">node-fetch</a></li>&#xA;</ul>&#xA;",5888214,,,,2021-08-27 16:35:48,"",,0,0,0,2021-08-27 16:35:48
68977454,2,,36804211,0,,"<p>I would checkout <a href=""https://nextjs.org"" rel=""nofollow noreferrer"">Next.js</a> together with <a href=""https://reverecre.github.io/relay-nextjs/"" rel=""nofollow noreferrer"">relay-nextjs</a> package.</p>&#xA;<p>Next.js solves SSR,the relay-nextjs package as a glue for Relay.&#xA;Also, I recommend check on this medium.com <a href=""https://yashmahalwal.medium.com/relay-modern-ssr-and-next-js-e0a77ec3d7ea"" rel=""nofollow noreferrer"">article</a></p>&#xA;",3261501,,,,2021-08-29 22:38:26,"",,0,0,0,2021-08-29 22:38:26
68994427,1,,,1,976,"<p>when I ran my main.py file I got</p>&#xA;<pre><code>ImportError: cannot import name 'ResolveInfo' from 'graphql' (/Users/apple/.local/share/virtualenvs/pythonProject-CGqZmG8Q/lib/python3.9/site-packages/graphql/__init__.py)&#xA;&#xA;</code></pre>&#xA;<ul>&#xA;<li>However, I am trying to install the following packages but <code>ariadne</code> smeas to incompatible with <code>graphen-core</code> or <code>graphen</code>.</li>&#xA;</ul>&#xA;<pre><code>&#xA;uvicorn = &quot;*&quot;&#xA;fastapi = &quot;*&quot;&#xA;graphene = &quot;*&quot;&#xA;starlette = &quot;*&quot;&#xA;ariadne = &quot;*&quot;&#xA;alembic = &quot;*&quot;&#xA;aniso8601 = &quot;*&quot;&#xA;appdirs = &quot;*&quot;&#xA;asgiref = &quot;*&quot;&#xA;black = &quot;*&quot;&#xA;click = &quot;*&quot;&#xA;colorama = &quot;*&quot;&#xA;graphene-sqlalchemy = &quot;*&quot;&#xA;graphql-relay = &quot;*&quot;&#xA;greenlet = &quot;*&quot;&#xA;h11 = &quot;*&quot;&#xA;mypy-extensions = &quot;*&quot;&#xA;pathspec = &quot;*&quot;&#xA;promise = &quot;*&quot;&#xA;psycopg2 = &quot;*&quot;&#xA;pydantic = &quot;*&quot;&#xA;python-dateutil = &quot;*&quot;&#xA;python-dotenv = &quot;*&quot;&#xA;python-editor = &quot;*&quot;&#xA;regex = &quot;*&quot;&#xA;singledispatch = &quot;*&quot;&#xA;six = &quot;*&quot;&#xA;toml = &quot;*&quot;&#xA;typing-extensions = &quot;*&quot;&#xA;dill = &quot;==0.2.4&quot;&#xA;Mako = &quot;*&quot;&#xA;MarkupSafe = &quot;*&quot;&#xA;Rx = &quot;*&quot;&#xA;SQLAlchemy = &quot;*&quot;&#xA;</code></pre>&#xA;<pre><code>[pipenv.exceptions.ResolutionFailure]: Warning: Your dependencies could not be resolved. You likely have a mismatch in your sub-dependencies.&#xA;  First try clearing your dependency cache with $ pipenv lock --clear, then try the original command again.&#xA; Alternatively, you can use $ pipenv install --skip-lock to bypass this mechanism, then run $ pipenv graph to inspect the situation.&#xA;  Hint: try $ pipenv lock --pre if it is a pre-release dependency.&#xA;ERROR: Could not find a version that matches black (from -r /var/folders/v3/4llt971130g6vvbq53m6k84w0000gn/T/pipenvo1i35v2wrequirements/pipenv-py46372c-constraints.txt (line 24))&#xA;Skipped pre-versions: 18.3a0, 18.3a0, 18.3a1, 18.3a1, 18.3a2, 18.3a2, 18.3a3, 18.3a3, 18.3a4, 18.3a4, 18.4a0, 18.4a0, 18.4a1, 18.4a1, 18.4a2, 18.4a2, 18.4a3, 18.4a3, 18.4a4, 18.4a4, 18.5b0, 18.5b0, 18.5b1, 18.5b1, 18.6b0, 18.6b0, 18.6b1, 18.6b1, 18.6b2, 18.6b2, 18.6b3, 18.6b3, 18.6b4, 18.6b4, 18.9b0, 18.9b0, 19.3b0, 19.3b0, 19.10b0, 19.10b0, 20.8b0, 20.8b1, 21.4b0, 21.4b0, 21.4b1, 21.4b1, 21.4b2, 21.4b2, 21.5b0, 21.5b0, 21.5b1, 21.5b1, 21.5b2, 21.5b2, 21.6b0, 21.6b0, 21.7b0, 21.7b0, 21.8b0, 21.8b0&#xA;&#xA;</code></pre>&#xA;<p>I tried to resolve this by removing the version from the <code>pipenv</code> file, also I tried using older versions.</p>&#xA;<ul>&#xA;<li><p>I got stuck in a closed loop, so When I install older version of <code>graphql-core</code> it runes fine with ariadne but <code>graphene</code> require newer version.</p>&#xA;</li>&#xA;<li><p><strong>Goal</strong></p>&#xA;</li>&#xA;</ul>&#xA;<pre><code># main.py&#xA;import graphene&#xA;from fastapi import FastAPI&#xA;from starlette.graphql import GraphQLApp&#xA;&#xA;import models&#xA;from db_conf import db_session&#xA;from schemas import PostModel, PostSchema&#xA;import asyncio&#xA;import uvicorn&#xA;from ariadne import make_executable_schema, SubscriptionType, QueryType&#xA;from ariadne.asgi import GraphQL&#xA;&#xA;db = db_session.session_factory()&#xA;&#xA;app = FastAPI()&#xA;&#xA;&#xA;class Query(graphene.ObjectType):&#xA;    all_posts = graphene.List(PostModel)&#xA;    post_by_id = graphene.Field(PostModel, post_id=graphene.Int(required=True))&#xA;&#xA;    def resolve_all_posts(self, info):&#xA;        query = PostModel.get_query(info)&#xA;        return query.all()&#xA;&#xA;    def resolve_post_by_id(self, info, post_id):&#xA;        return db.query(models.Post).filter(models.Post.id == post_id).first()&#xA;&#xA;&#xA;class CreateNewPost(graphene.Mutation):&#xA;    class Arguments:&#xA;        title = graphene.String(required=True)&#xA;        content = graphene.String(required=True)&#xA;&#xA;    ok = graphene.Boolean()&#xA;&#xA;    @staticmethod&#xA;    def mutate(root, info, title, content):&#xA;        post = PostSchema(title=title, content=content)&#xA;        db_post = models.Post(title=post.title, content=post.content)&#xA;        db.add(db_post)&#xA;        db.commit()&#xA;        db.refresh(db_post)&#xA;        ok = True&#xA;        return CreateNewPost(ok=ok)&#xA;&#xA;&#xA;class PostMutations(graphene.ObjectType):&#xA;    create_new_post = CreateNewPost.Field()&#xA;&#xA;&#xA;# ariadne copied from https://ariadnegraphql.org/docs/subscriptions&#xA;&#xA;type_def = &quot;&quot;&quot;&#xA;    type Query {&#xA;        _unused: Boolean&#xA;    }&#xA;&#xA;    type Subscription {&#xA;        counter: Int!&#xA;    }&#xA;&quot;&quot;&quot;&#xA;&#xA;subscription = SubscriptionType()&#xA;&#xA;&#xA;@subscription.source(&quot;counter&quot;)&#xA;async def counter_generator(obj, info):&#xA;    for i in range(5):&#xA;        await asyncio.sleep(1)&#xA;        yield i&#xA;&#xA;&#xA;@subscription.field(&quot;counter&quot;)&#xA;def counter_resolver(count, info):&#xA;    return count + 1&#xA;&#xA;&#xA;schema = make_executable_schema(type_def, subscription)&#xA;&#xA;query = QueryType()&#xA;&#xA;app.add_route(&quot;/&quot;, GraphQLApp(schema=graphene.Schema(query=Query, mutation=PostMutations)))&#xA;app.mount(&quot;/ws&quot;, GraphQL(schema, debug=True))&#xA;&#xA;# if __name__ == &quot;__main__&quot;:&#xA;#     uvicorn.run(app, host=&quot;0.0.0.0&quot;, port=8000)&#xA;&#xA;</code></pre>&#xA;",13447052,,,,2021-08-31 07:20:03,ImportError: cannot import name 'ResolveInfo' from 'graphql,<pipe><fastapi><pipenv><starlette><ariadne-graphql>,0,0,0,2021-08-31 07:20:03
69008573,1,,,1,166,"<p>I am facing issues while disabling the introspection query in a spring boot graphql project on a get endpoint query parameter.</p>&#xA;<p>I was replicating this by using one of the GET endpoint and using the below parameter</p>&#xA;<pre><code>baseurl/servicename/insight_graph?query=fragment+FullType+on+__Type+{++kind++name++description++fields(includeDeprecated%3a+true)+{++++name++++description++++args+{++++++...InputValue++++}++++type+{++++++...TypeRef++++}++++isDeprecated++++deprecationReason++}++inputFields+{++++...InputValue++}++interfaces+{++++...TypeRef++}++enumValues(includeDeprecated%3a+true)+{++++name++++description++++isDeprecated++++deprecationReason++}++possibleTypes+{++++...TypeRef++}}fragment+InputValue+on+__InputValue+{++name++description++type+{++++...TypeRef++}++defaultValue}fragment+TypeRef+on+__Type+{++kind++name++ofType+{++++kind++++name++++ofType+{++++++kind++++++name++++++ofType+{++++++++kind++++++++name++++++++ofType+{++++++++++kind++++++++++name++++++++++ofType+{++++++++++++kind++++++++++++name++++++++++++ofType+{++++++++++++++kind++++++++++++++name++++++++++++++ofType+{++++++++++++++++kind++++++++++++++++name++++++++++++++}++++++++++++}++++++++++}++++++++}++++++}++++}++}}query+IntrospectionQuery+{++__schema+{++++queryType+{++++++name++++}++++mutationType+{++++++name++++}++++types+{++++++...FullType++++}++++directives+{++++++name++++++description++++++locations++++++args+{++++++++...InputValue++++++}++++}++}}&#xA;&#xA;and with the below dependencies&#xA;&#xA;   &#xA;&#xA;    &lt;dependency&gt;&#xA;        &lt;groupId&gt;com.graphql-java-kickstart&lt;/groupId&gt;&#xA;        &lt;artifactId&gt;graphql-spring-boot-starter&lt;/artifactId&gt;&#xA;        &lt;version&gt;5.4.1&lt;/version&gt;&#xA;    &lt;/dependency&gt;&#xA;&#xA;    &lt;dependency&gt;&#xA;        &lt;groupId&gt;com.graphql-java-kickstart&lt;/groupId&gt;&#xA;        &lt;artifactId&gt;graphql-java-tools&lt;/artifactId&gt;&#xA;        &lt;version&gt;5.4.1&lt;/version&gt;&#xA;        &lt;exclusions&gt;&#xA;            &lt;exclusion&gt;&#xA;                &lt;artifactId&gt;jackson-module-kotlin&lt;/artifactId&gt;&#xA;                &lt;groupId&gt;com.fasterxml.jackson.module&lt;/groupId&gt;&#xA;            &lt;/exclusion&gt;&#xA;        &lt;/exclusions&gt;&#xA;    &lt;/dependency&gt;&#xA;&#xA;    &lt;dependency&gt;&#xA;        &lt;groupId&gt;com.graphql-java-kickstart&lt;/groupId&gt;&#xA;        &lt;artifactId&gt;graphiql-spring-boot-starter&lt;/artifactId&gt;&#xA;        &lt;version&gt;5.4.1&lt;/version&gt;&#xA;    &lt;/dependency&gt;&#xA;</code></pre>&#xA;<p>This works pretty well when we request the same using post and with the below request body and using graphql.tools.introspection-enabled=false and</p>&#xA;<pre><code>    POST baseurl/servicename/insight_graph&#xA;    &#xA;        [&#xA;    {&#xA;        &quot;operationName&quot;: &quot;IntrospectionQuery&quot;,&#xA;        &quot;variables&quot;: {},&#xA;        &quot;query&quot;: &quot;query IntrospectionQuery {__schema {queryType { name },mutationType { name },subscriptionType { name },types {...FullType},directives {name,description,args {...InputValue},onOperation,onFragment,onField}}}\nfragment FullType on __Type {kind,name,description,fields(includeDeprecated: true) {name,description,args {...InputValue},type {...TypeRef},isDeprecated,deprecationReason},inputFields {...InputValue},interfaces {...TypeRef},enumValues(includeDeprecated: true) {name,description,isDeprecated,deprecationReason},possibleTypes {...TypeRef}}\nfragment InputValue on __InputValue {name,description,type { ...TypeRef },defaultValue}\nfragment TypeRef on __Type {kind,name,ofType {kind,name,ofType {kind,name,ofType {kind,name}}}}&quot;&#xA;    }&#xA;    ]&#xA;</code></pre>&#xA;<p>I also tried this via spring filters and it works fine&#xA;Is there any way to disable introspection via spring boot property for this?</p>&#xA;",7769448,,7769448,2021-09-01 11:15:26,2021-09-01 11:15:26,Disable introspection query in graphql java tools spring boot,<java><spring-boot><graphql>,0,0,0,2021-09-01 06:08:20
69044275,1,,,1,400,"<p>I am trying to develop an app with apollo graphql server and react. i susbscribe to apollo server from react container(visualization) and consume data. If i map ports of apollo server, i can connect to apollo server and react app works fine but if i expose port in docker compose file, connection fails. I cant understand why this happens, normally within the same network containers can talk each other and i haven't faced similar problems before</p>&#xA;<p>Compose File With Expose</p>&#xA;<p><a href=""https://i.stack.imgur.com/Rt8lm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Rt8lm.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Error</p>&#xA;<p><a href=""https://i.stack.imgur.com/oNuGm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/oNuGm.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Compose File With Port</p>&#xA;<p><a href=""https://i.stack.imgur.com/Ysokh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ysokh.png"" alt=""enter image description here"" /></a></p>&#xA;<p>No Error works fine:</p>&#xA;<p><a href=""https://i.stack.imgur.com/lEgZZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lEgZZ.png"" alt=""enter image description here"" /></a></p>&#xA;",7310384,,,,2021-09-03 11:35:42,Apollo Server WebSocket Connection Docker Compose Expose Problem,<docker><docker-compose><apollo-client><graphql-subscriptions>,0,1,0,2021-09-03 11:35:42
69046262,2,,68208282,1,,"<p>I don't think you can. You could develop the lambda in local environment, add package.json with the dependencies zip the function and node_modules and then upload.</p>&#xA;<p><a href=""https://docs.aws.amazon.com/lambda/latest/dg/nodejs-package.html"" rel=""nofollow noreferrer"">Deploy Node.js Lambda functions with .zip file archives</a></p>&#xA;",9926294,,1824795,2021-09-03 16:33:50,2021-09-03 16:33:50,"",,0,0,0,2021-09-03 14:08:12
69049587,2,,68855003,5,,<p>You only have to install apollo(yarn add apollo) and fix the problem</p>&#xA;,14814449,,578041,2021-09-05 11:03:47,2021-09-05 11:03:47,"",,0,1,0,2021-09-03 19:05:12
69052543,1,,,1,654,"<p>I made a Strapi app using MongoDb, Cloudinary (for the images) and Heroku (for deployment). I installed Graphql before deploying it. It works fine in develop mode in localhost, the graphql playground shows normally. But in production I get an error when trying to show graphql playground. It just shows a blank page with this message:</p>&#xA;<p>GET query missing</p>&#xA;<p>How can I query my data using graphql/Apollo if the url &quot;some_name.heroku.com/graphql&quot; doesn't work?</p>&#xA;",15142235,,,,2022-06-09 23:29:08,how to add graphql to heroku in a strapi app?,<url><heroku><deployment><graphql><strapi>,2,0,0,2021-09-04 05:02:17
69058216,2,,69052543,5,,"<p>Ok, I found out in a github forum that I had to add some code in the plugins.js file to make graphql work in production.&#xA;This is the code:</p>&#xA;<pre><code>module.exports = ({ env }) =&gt; ({&#xA;  //&#xA;  graphql: {&#xA;     config: {&#xA;        endpoint: &quot;/graphql&quot;,&#xA;        shadowCRUD: true,&#xA;        playgroundAlways: true,&#xA;        depthLimit: 100,&#xA;        apolloServer: {&#xA;          tracing: false,&#xA;          },&#xA;        },&#xA;     }, &#xA;   });&#xA;</code></pre>&#xA;<p>after that I had to commit the changes in my repo and wait to heroku to deploy it.</p>&#xA;",15142235,,15199227,2022-03-19 17:58:24,2022-03-19 17:58:24,"",,0,0,0,2021-09-04 19:00:47
69059041,2,,69058523,0,,"<p>Apparently this will work with older version of dependencies:</p>&#xA;<pre><code>&quot;dependencies&quot;: {&#xA;&quot;apollo-server-lambda&quot;: &quot;^2.16.1&quot;,&#xA;&quot;graphql&quot;: &quot;^15.3.0&quot;&#xA;},&#xA;&quot;devDependencies&quot;: {&#xA;&quot;serverless-dotenv-plugin&quot;: &quot;^3.0.0&quot;,&#xA;&quot;serverless-offline&quot;: &quot;^6.5.0&quot;,&#xA;&quot;serverless-webpack&quot;: &quot;^5.3.3&quot;,&#xA;&quot;ts-loader&quot;: &quot;^8.0.2&quot;,&#xA;&quot;typescript&quot;: &quot;^3.9.7&quot;,&#xA;&quot;webpack&quot;: &quot;^4.44.1&quot;,&#xA;&quot;webpack-node-externals&quot;: &quot;^2.5.0&quot;&#xA;}&#xA;</code></pre>&#xA;<p>versus what I had before:</p>&#xA;<pre><code>&quot;dependencies&quot;: {&#xA;&quot;apollo-server-lambda&quot;: &quot;^3.3.0&quot;,&#xA;&quot;graphql&quot;: &quot;^15.5.2&quot;&#xA; },&#xA;&quot;devDependencies&quot;: {&#xA;&quot;serverless-dotenv-plugin&quot;: &quot;^3.9.0&quot;,&#xA;&quot;serverless-offline&quot;: &quot;^8.0.0&quot;,&#xA;&quot;serverless-webpack&quot;: &quot;^5.5.3&quot;,&#xA;&quot;ts-loader&quot;: &quot;^9.2.5&quot;,&#xA;&quot;typescript&quot;: &quot;^4.4.2&quot;,&#xA;&quot;webpack&quot;: &quot;^5.52.0&quot;,&#xA;&quot;webpack-node-externals&quot;: &quot;^3.0.0&quot;&#xA;}&#xA;</code></pre>&#xA;",1595977,,,,2021-09-04 21:23:52,"",,0,0,0,2021-09-04 21:23:52
69060236,1,,,0,150,"<p>After successfully running both locally on the localhost,&#xA;I tried to dockerize and run them for dev environment using nodemon.</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>docker-compose up&#xA;</code></pre>&#xA;<p>Both container seems to get launched but get failed connection for some reason.</p>&#xA;<p>How can I solve the issue and coonnect them?</p>&#xA;<p>part of output on the terminal generated error <strong>&quot;ECONNREFUSED&quot;</strong></p>&#xA;<pre><code>...&#xA;mysqldb    | 2021-09-05T01:27:00.926720Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.&#xA;mysqldb    | 2021-09-05T01:27:01.230729Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.&#xA;mysqldb    | 2021-09-05T01:27:01.757576Z 0 [Warning] [MY-013746] [Server] A deprecated TLS version TLSv1 is enabled for channel mysql_main&#xA;mysqldb    | 2021-09-05T01:27:01.757980Z 0 [Warning] [MY-013746] [Server] A deprecated TLS version TLSv1.1 is enabled for channel mysql_main&#xA;mysqldb    | 2021-09-05T01:27:01.761528Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.&#xA;mysqldb    | 2021-09-05T01:27:01.761974Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.&#xA;mysqldb    | 2021-09-05T01:27:01.767829Z 0 [Warning] [MY-011810] [Server] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.&#xA;mysqldb    | 2021-09-05T01:27:01.848770Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.26'  socket: '/var/run/mysqld/mysqld.sock'  port: 0  MySQL Community Server - GPL.&#xA;mysqldb    | 2021-09-05T01:27:01.849567Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Socket: /var/run/mysqld/mysqlx.sock&#xA;mysqldb    | 2021-09-05 01:27:01+00:00 [Note] [Entrypoint]: Temporary server started.&#xA;simple-crud-server-ctn | Error: connect ECONNREFUSED 172.19.0.2:3306&#xA;simple-crud-server-ctn |     at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1148:16) {&#xA;simple-crud-server-ctn |   errno: -111,&#xA;simple-crud-server-ctn |   code: 'ECONNREFUSED',&#xA;simple-crud-server-ctn |   syscall: 'connect',&#xA;simple-crud-server-ctn |   address: '172.19.0.2',&#xA;simple-crud-server-ctn |   port: 3306,&#xA;simple-crud-server-ctn |   fatal: true&#xA;simple-crud-server-ctn | }&#xA;simple-crud-server-ctn | [nodemon] clean exit - waiting for changes before restart&#xA;mysqldb    | Warning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.&#xA;mysqldb    | Warning: Unable to load '/usr/share/zoneinfo/leap-seconds.list' as time zone. Skipping it.&#xA;mysqldb    | Warning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.&#xA;mysqldb    | Warning: Unable to load '/usr/share/zoneinfo/zone1970.tab' as time zone. Skipping it.&#xA;mysqldb    | 2021-09-05 01:27:07+00:00 [Note] [Entrypoint]: Creating database test&#xA;mysqldb    | 2021-09-05 01:27:07+00:00 [Note] [Entrypoint]: Creating user ernest&#xA;mysqldb    | 2021-09-05 01:27:08+00:00 [Note] [Entrypoint]: Giving user ernest access to schema test&#xA;mysqldb    | &#xA;mysqldb    | 2021-09-05 01:27:08+00:00 [Note] [Entrypoint]: Stopping temporary server&#xA;</code></pre>&#xA;<p><strong>docker-compose.yml</strong></p>&#xA;<pre><code>version: '3'&#xA;services:&#xA;  server:&#xA;    image: simple-crud-server&#xA;    container_name: simple-crud-server-ctn&#xA;    restart: always&#xA;    environment:&#xA;      DATABASE_HOST: 'mysqldb'&#xA;      DATABASE_USER: 'ernest'&#xA;      DATABASE_PASS: 'root'&#xA;      DATABASE_NAME: 'test'&#xA;&#xA;    build:&#xA;      context: ./server&#xA;      dockerfile: Dockerfile&#xA;    command: yarn dev:docker&#xA;    ports:&#xA;      - '4000:4000'&#xA;    networks:&#xA;      - simple-crud-app&#xA;    depends_on:&#xA;      - mysqldb&#xA;mysqldb:&#xA;    container_name: mysqldb&#xA;    image: mysql:8.0&#xA;    command: --default-authentication-plugin=mysql_native_password&#xA;    environment:&#xA;      MYSQL_ROOT_PASSWORD: 'root' &#xA;      MYSQL_USER: 'ernest'&#xA;      MYSQL_PASSWORD: 'password'      &#xA;      MYSQL_ROOT_HOST: '%'&#xA;      MYSQL_DATABASE: 'test'    &#xA;    ports:&#xA;      - '3306:3306'&#xA;    volumes:&#xA;      - ./mysqlData:/data/db&#xA;    networks:&#xA;      - simple-crud-app&#xA;volumes:&#xA;  mysqlData:&#xA;networks:&#xA;  simple-crud-app:&#xA;    driver: bridge&#xA;</code></pre>&#xA;<p><strong>index.js in server</strong></p>&#xA;<pre><code>import express from &quot;express&quot;;&#xA;import { graphqlHTTP } from &quot;express-graphql&quot;;&#xA;import { schema } from &quot;./Schema&quot;;&#xA;import cors from &quot;cors&quot;;&#xA;import { createConnection } from &quot;typeorm&quot;;&#xA;import { Users } from &quot;./Entities/Users&quot;;&#xA;&#xA;const main = async () =&gt; {&#xA;&#xA;    await createConnection({&#xA;        type: &quot;mysql&quot;,&#xA;        host: process.env.DATABASE_HOST,&#xA;        database: process.env.DATABASE_NAME,&#xA;        username: process.env.DATABASE_USER,&#xA;        password: process.env.DATABASE_PASS,&#xA;        logging: true,&#xA;        synchronize: false,&#xA;        entities: [Users]&#xA;    });&#xA;&#xA;    const app = express();&#xA;    app.use(cors());&#xA;    app.use(express.json());&#xA;    app.use(&quot;/graphql&quot;, graphqlHTTP({&#xA;        schema,&#xA;        graphiql: true&#xA;    }));&#xA;&#xA;    app.listen(4000, () =&gt; {&#xA;        console.log(&quot;Server is running now on PORT 4000&quot;);&#xA;    });&#xA;};&#xA;</code></pre>&#xA;<p><strong>Dockerfile for server</strong></p>&#xA;<pre><code>## Install packages without output on the terminal&#xA;RUN yarn install --silent&#xA;&#xA;# Copy app source code&#xA;COPY . .&#xA;&#xA;RUN npm run build&#xA;&#xA;# show all files and directories when building image&#xA;RUN echo &quot;Current directory in Docker is ${PWD}&quot; &amp;&amp; ls -a&#xA;&#xA;# port number&#xA;EXPOSE 4000&#xA;&#xA;CMD [&quot;yarn&quot;, &quot;dev:docker&quot;]&#xA;</code></pre>&#xA;",12094680,,12094680,2021-09-05 07:18:33,2021-09-05 07:18:33,Not accessible to Docker MySQL container from Node.js Express-GraphQL server container,<mysql><node.js><docker-compose><express-graphql>,0,3,0,2021-09-05 02:44:47
69065535,2,,67786859,1,,"<p>You can actually add the below configuration in your production profile inside application.yml or application.properties to disable the playground in the production.</p>&#xA;<p>I have tested it with <strong>com.graphql-java:playground-spring-boot-started:11.0.0</strong></p>&#xA;<p>In application.yml</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>graphql:&#xA; playground:&#xA;  enabled: false&#xA;</code></pre>&#xA;<p>In application.properties</p>&#xA;<p><code>graphql.playground.enabled = false</code></p>&#xA;",7295000,,,,2021-09-05 17:04:54,"",,0,0,0,2021-09-05 17:04:54
69079374,2,,69071442,1,,<p>The problem was with using <code>process.env.API_ENDPOINT</code> for creating the apollo client; as there's no access to the environment variables on client-side.</p>&#xA;,14604732,,,,2021-09-06 19:15:57,"",,0,0,0,2021-09-06 19:15:57
69081221,2,,66869388,0,,<p>I was experiencing the same issue and was able to resolve it by upgrading the version of graphql dependency in package.json. My project was using very old version of graphql i.e &quot;0.13.2&quot; and I updated the version to &quot;14.6.0&quot;.</p>&#xA;,5891351,,,,2021-09-07 00:01:10,"",,0,2,0,2021-09-07 00:01:10
69097093,1,,,0,148,"<p>I can't seem to run my apollo-server at the same time I deploy/run (npm run dev) with NextJs. I've tried below and it doesn't work because it gets stuck sitting at apollo server and waiting for GET and POST requests, and same with NextJs which makes sense by their nature didn't know if there was a way to run both on the same server, also I've tried deploying apollo-server to lambda and straight to a server and no luck. Thanks in advance!</p>&#xA;<pre><code>node server &amp; next dev&#xA;</code></pre>&#xA;",16857282,,,,2022-01-18 20:53:54,Is there a way to run apollo-server and nextjs at the same time with Vercel?,<next.js><apollo-server><vercel>,0,3,0,2021-09-08 04:37:18
69173013,1,69178130,,3,60,"<p>In react(nextjs) application, I am using <code>statsig-react</code> to switch the mastergraphql endpoint(urls). Now I am facing an issue while connecting statsig with apollo.</p>&#xA;<p>My app.js is like,</p>&#xA;<pre><code>const apollo = useApollo(pageProps)&#xA;&#xA;const AddStatsig = () =&gt; {&#xA;  &lt;StatsigProvider&#xA;      sdkKey={`${env.statsigKey}`}&#xA;      options={{ environment: { tier: env.environment } }}&#xA;      waitForInitialization={true}&#xA;   &gt;&#xA;     &lt;Component {...pageProps} /&gt;&#xA;  &lt;/StatsigProvider&gt;&#xA;}&#xA;&#xA;return (&#xA;  &lt;ApolloProvider client={apollo}&gt;&#xA;   ...&#xA;   &lt;AddStatsig /&gt;&#xA;   ...&#xA;  &lt;/ApolloProvider&gt;&#xA;)&#xA;</code></pre>&#xA;<p>In apollo.js, I am changing <code>uri</code> like,</p>&#xA;<pre><code>import { useGate } from 'statsig-react'&#xA;&#xA;const statsigFeatureOn = useGate('newurl').value&#xA;&#xA;const withAuth = createHttpLink({&#xA;  uri: statsigFeatureOn ? statsigPath : oldPath,&#xA;  fetch: awsGraphqlFetch,&#xA;})&#xA;</code></pre>&#xA;<p>Here, I am getting <code>statsigFeatureOn</code> as <code>false</code> always. And If I check the <code>useGate</code> value in any other component which is wrapped under the <code>StatsigProvider</code> there will get <code>true</code> value(required output).</p>&#xA;<p>If I wrap an ApolloProvider under StatsigProvider in a normal way will not get the desired output. I tried few ways and got the different kinds of errors and output.</p>&#xA;<p>How can I get <code>true</code> value inside apollo.js at initial load itself?</p>&#xA;",703997,,,,2021-09-14 12:50:31,ReactJs - How to wrap the ApolloProvider inside the StatsigProvider?,<javascript><reactjs><next.js><apollo><statsig>,1,0,0,2021-09-14 06:44:33
69178586,1,69209449,,7,5448,"<p>I'm trying to upgrade our NestJS GraphQL subscriptions server to utilize <code>graphql-ws</code> rather than the current <code>subscriptions-transport-ws</code> (as suggested by the <a href=""https://docs.nestjs.com/graphql/subscriptions"" rel=""noreferrer"">NestJS documentation</a>).&#xA;I upgraded the NestJS version to</p>&#xA;<pre><code>    &quot;@nestjs/core&quot;: &quot;^8.0.6&quot;,&#xA;    &quot;@nestjs/graphql&quot;: &quot;^9.0.4&quot;,&#xA;    &quot;@nestjs/platform-express&quot;: &quot;^8.0.6&quot;,&#xA;    &quot;graphql&quot;: &quot;^15.5.3&quot;,&#xA;    &quot;graphql-tools&quot;: &quot;^8.2.0&quot;,&#xA;    &quot;apollo-server-express&quot;: &quot;^3.3.0&quot;,&#xA;</code></pre>&#xA;<p>And after, I added the <code>subscriptions</code> option to the <code>App.Module</code>:</p>&#xA;<pre><code>    GraphQLModule.forRoot({&#xA;      autoSchemaFile: true,&#xA;      sortSchema: true,&#xA;      playground: true,&#xA;      installSubscriptionHandlers: true,&#xA;      subscriptions: {&#xA;        'graphql-ws': true&#xA;      },&#xA;    }),&#xA;</code></pre>&#xA;<p>However when I subscribe (in playground) to a previously working subscription, I get:</p>&#xA;<pre><code>{&#xA;  &quot;error&quot;: &quot;Could not connect to websocket endpoint ws://localhost:8880/graphql. Please check if the endpoint url is correct.&quot;&#xA;}&#xA;</code></pre>&#xA;<p>And in the console I get:</p>&#xA;<pre><code>WebSocket protocol error occured. It was most likely caused due to an unsupported subprotocol &quot;graphql-ws&quot; requested by the client. graphql-ws implements exclusively the &quot;graphql-transport-ws&quot; subprotocol, please make sure that the client implements it too.&#xA;</code></pre>&#xA;<p>Things I have tried:</p>&#xA;<ul>&#xA;<li>Adding the <code>graphql-ws</code> package</li>&#xA;<li>Upgrading the NestJS version again</li>&#xA;<li>Removing the <code>installSubscriptionHandlers</code> option from config</li>&#xA;<li>Setting <code>graphql-ws</code> configs instead of passing <code>true</code></li>&#xA;<li>Using the <code>WebSocket Test Client</code> Google Chrome extension instead of Playground</li>&#xA;</ul>&#xA;<p>But none have worked. Sorry for the long post. How can I fix this?</p>&#xA;",10626171,,,,2022-05-22 16:00:15,NestJS GraphQL subscriptions not working with `graphql-ws`,<graphql><nestjs><graphql-subscriptions>,2,0,0,2021-09-14 13:20:14
69207858,1,69208622,,0,211,"<p>My objective is to have a functional version of the latest Graphql-java mixed with jetty version 10.</p>&#xA;<p>I have done a lot of tests, using different methods, and now I am stuck with the difference of the WebSocket implementation (on Jetty) between the version 9.4 and 10.0.6.</p>&#xA;<p>To test the implementation I am working on the example from the <a href=""https://github.com/graphql-java-kickstart/samples.git"" rel=""nofollow noreferrer"">graphQL repository sample</a>.</p>&#xA;<p>My tests are on the subproject <code>servlet-hello-world</code>, where a simple graphQL subscription is done and working on jetty 9.4</p>&#xA;<p>I have updated gradle to use the latest version</p>&#xA;<pre><code>def jettyVersion = '9.4.43.v20210629'&#xA;&#xA;dependencies {&#xA;    implementation &quot;com.graphql-java-kickstart:graphql-java-servlet:$LIB_GRAPHQL_SERVLET_VER&quot;&#xA;    implementation &quot;io.projectreactor:reactor-core:3.4.9&quot;&#xA;    implementation 'ch.qos.logback:logback-classic:1.2.5'&#xA;    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha4'&#xA;    implementation &quot;org.eclipse.jetty:jetty-webapp:${jettyVersion}&quot;&#xA;    implementation &quot;org.eclipse.jetty:jetty-annotations:${jettyVersion}&quot;&#xA;    implementation &quot;org.eclipse.jetty.websocket:websocket-api:${jettyVersion}&quot;&#xA;    implementation &quot;org.eclipse.jetty.websocket:websocket-server:${jettyVersion}&quot;&#xA;    implementation &quot;org.eclipse.jetty.websocket:javax-websocket-server-impl:${jettyVersion}&quot;&#xA;    implementation &quot;org.eclipse.jetty.websocket:websocket-common:${jettyVersion}&quot;&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>to</p>&#xA;<pre><code>def jettyVersion = '10.0.6'&#xA;&#xA;dependencies {&#xA;    implementation &quot;com.graphql-java-kickstart:graphql-java-servlet:$LIB_GRAPHQL_SERVLET_VER&quot;&#xA;    implementation &quot;io.projectreactor:reactor-core:3.4.9&quot;&#xA;    implementation 'ch.qos.logback:logback-classic:1.2.5'&#xA;    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha4'&#xA;//    implementation &quot;org.eclipse.jetty:jetty-webapp:${jettyVersion}&quot;&#xA;//    implementation &quot;org.eclipse.jetty:jetty-annotations:${jettyVersion}&quot;&#xA;    implementation &quot;org.eclipse.jetty.websocket:websocket-jetty-api:${jettyVersion}&quot;&#xA;    implementation &quot;org.eclipse.jetty.websocket:websocket-jetty-server:${jettyVersion}&quot;&#xA;//    implementation &quot;org.eclipse.jetty.websocket:javax-websocket-server-impl:${jettyVersion}&quot;&#xA;//    implementation &quot;org.eclipse.jetty.websocket:websocket-common:${jettyVersion}&quot;&#xA;}&#xA;</code></pre>&#xA;<p>Then I am stuck on the changes in the API where the WebSocketServletContainerInitalizer is replaced by JettyWebSocketServletContainerInitializer:</p>&#xA;<pre><code>    var server = new Server();&#xA;    var connector = new ServerConnector(server);&#xA;    connector.setPort(PORT);&#xA;    server.addConnector(connector);&#xA;&#xA;    var context = new ServletContextHandler(ServletContextHandler.SESSIONS);&#xA;    context.setContextPath(&quot;/&quot;);&#xA;    context.addServlet(HelloServlet.class, &quot;/graphql&quot;);&#xA;    server.setHandler(context);&#xA;&#xA;    WebSocketServerContainerInitializer.configure(&#xA;        context,&#xA;        (servletContext, serverContainer) -&gt;&#xA;            serverContainer.addEndpoint(&#xA;                ServerEndpointConfig.Builder.create(SubscriptionEndpoint.class, &quot;/subscriptions&quot;)&#xA;                    .configurator(new GraphQLWSEndpointConfigurer())&#xA;                    .build()));&#xA;&#xA;    server.setHandler(context);&#xA;&#xA;    server.start();&#xA;    server.dump(System.err);&#xA;    server.join();&#xA;  }&#xA;</code></pre>&#xA;<p>The difference is the configurator that has changed the type of the configurator from <code>ServletContainer</code> to a <code>JettyWebSocketServerContainer</code>and there is no addEndpoint method anymore to connect my SubscriptionEndpoint to.</p>&#xA;<p>I have absolutely no clue how to connect my <code>GraphQLWebsocketServlet</code>.</p>&#xA;",3391574,,3391574,2021-09-16 11:54:44,2021-09-16 12:40:04,GraphQL subscription with Jetty 10 embedded,<graphql><jetty><embedded-jetty><graphql-java>,1,0,0,2021-09-16 11:46:37
69212790,1,,,1,188,"<p>I have created few tabs to show example queries on GraphQL playground. While adding tabs I need to set the endpoint/server URL as well, where the queries will be executing actually. Below is my code:</p>&#xA;<pre><code>const startServer = async () =&gt; {&#xA;  const server = new ApolloServer({&#xA;    schema,&#xA;    introspection: true,&#xA;  playground: {&#xA;    tabs: [{&#xA;        name: 'data analysis',&#xA;        endpoint: '', // want to set the server url here&#xA;        query: '{ ... }'&#xA;      }&#xA;    ]&#xA;  }&#xA;});&#xA;&#xA;  server.listen(PORT);&#xA;};&#xA;</code></pre>&#xA;<p>I can set the hardcoded URL for production but I don't want to do that. I want to set it dynamically according to the environment (localhost, dev, production). One way I tried is to get the URL once the server started listening to the port but it is always <code>http://localhost:PORT</code>, which is not correct. Any idea how can I get production server URL dynamically to set over here. I am working in <code>Node.js</code>. Any help would be appreciating.</p>&#xA;",15341187,,15341187,2021-09-16 18:41:17,2021-09-16 18:41:17,Defining endpoint in tabs of Apollo Server playground,<node.js><graphql><apollo-server>,0,0,0,2021-09-16 17:29:30
69214296,1,,,2,290,"<p>I am trying to integrate apollo-angular into my Angular project which uses Angular V8 but getting the following errors:</p>&#xA;<p>The apollo-angular versions im using are the following ones: &quot;@apollo/client&quot;: &quot;^3.4.11&quot;, &quot;apollo-angular&quot;: &quot;^2.6.0&quot;, and &quot;graphql&quot;: &quot;^15.5.3&quot;.</p>&#xA;<p>Also, Wondering if it is actually possible to use those apollo-angular versions with Angular V8 or would I need to upgrade to Angular V10?</p>&#xA;<pre><code>&#xA;38 export type { QueryOptions as PureQueryOptions };&#xA;   ~~~~~~&#xA;node_modules/@apollo/client/core/types.d.ts:38:13 - error TS1005: ';' expected.&#xA;&#xA;38 export type { QueryOptions as PureQueryOptions };&#xA;               ~&#xA;node_modules/@apollo/client/utilities/observables/Observable.d.ts:3:1 - error TS1128: Declaration or statement expected.&#xA;&#xA;3 export type { Observer, ObservableSubscription, Subscriber, };&#xA;  ~~~~~~&#xA;node_modules/@apollo/client/utilities/observables/Observable.d.ts:3:13 - error TS1005: ';' expected.&#xA;&#xA;3 export type { Observer, ObservableSubscription, Subscriber, };&#xA;              ~&#xA;node_modules/@apollo/client/utilities/observables/Observable.d.ts:3:61 - error TS1109: Expression expected.&#xA;&#xA;3 export type { Observer, ObservableSubscription, Subscriber, };&#xA;                                                              ~&#xA;node_modules/ts-invariant/lib/invariant.d.ts:6:87 - error TS1144: '{' or ';' expected.&#xA;&#xA;6 export declare function invariant(condition: any, message?: string | number): asserts condition;&#xA;                                                                                        ~~~~~~~~~&#xA;&#xA;** Angular Live Development Server is listening on localhost:4200, open your browser on http://localhost:4200/ **&#xA;i ｢wdm｣: Failed to compile.```&#xA;&#xA;&#xA;```package.json&#xA;{&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@angular/animations&quot;: &quot;^8.2.14&quot;,&#xA;    &quot;@angular/cdk&quot;: &quot;^8.2.3&quot;,&#xA;    &quot;@angular/cli&quot;: &quot;^8.3.26&quot;,&#xA;    &quot;@angular/common&quot;: &quot;^8.2.14&quot;,&#xA;    &quot;@angular/core&quot;: &quot;^8.2.14&quot;,&#xA;    &quot;@angular/forms&quot;: &quot;^8.2.14&quot;,&#xA;    &quot;@angular/material&quot;: &quot;^8.2.3&quot;,&#xA;    &quot;@angular/platform-browser&quot;: &quot;^8.2.14&quot;,&#xA;    &quot;@angular/platform-browser-dynamic&quot;: &quot;^8.2.14&quot;,&#xA;    &quot;@angular/router&quot;: &quot;^8.2.14&quot;,&#xA;    &quot;@apollo/client&quot;: &quot;^3.4.11&quot;,&#xA;    &quot;@babel/compat-data&quot;: &quot;7.8.0&quot;,&#xA;    &quot;@ng-bootstrap/ng-bootstrap&quot;: &quot;^5.0.0&quot;,&#xA;    &quot;@types/jasmine&quot;: &quot;~3.3.8&quot;,&#xA;    &quot;@types/node&quot;: &quot;~8.9.4&quot;,&#xA;    &quot;angular-cc-library&quot;: &quot;^2.0.1&quot;,&#xA;    &quot;angular-disable-browser-back-button&quot;: &quot;^1.0.2&quot;,&#xA;    &quot;apollo-angular&quot;: &quot;^2.6.0&quot;,&#xA;    &quot;bn-ng-idle&quot;: &quot;^1.0.1&quot;,&#xA;    &quot;bootstrap&quot;: &quot;^4.5.0&quot;,&#xA;    &quot;bootstrap4-toggle&quot;: &quot;^3.6.1&quot;,&#xA;    &quot;cors&quot;: &quot;^2.8.5&quot;,&#xA;    &quot;font-awesome&quot;: &quot;^4.7.0&quot;,&#xA;    &quot;graphql&quot;: &quot;^15.5.3&quot;,&#xA;    &quot;hammerjs&quot;: &quot;^2.0.8&quot;,&#xA;    &quot;jquery&quot;: &quot;^3.5.1&quot;,&#xA;    &quot;moment-timezone&quot;: &quot;^0.5.31&quot;,&#xA;    &quot;ng-bootstrap&quot;: &quot;^1.6.3&quot;,&#xA;    &quot;npm&quot;: &quot;^6.14.5&quot;,&#xA;    &quot;popper.js&quot;: &quot;^1.16.1&quot;,&#xA;    &quot;rxjs&quot;: &quot;~6.4.0&quot;,&#xA;    &quot;timers&quot;: &quot;^0.1.1&quot;,&#xA;    &quot;tslib&quot;: &quot;^1.13.0&quot;,&#xA;    &quot;zone.js&quot;: &quot;~0.9.1&quot;&#xA;  },&#xA;  &quot;devDependencies&quot;: {&#xA;    &quot;@angular-devkit/build-angular&quot;: &quot;^0.803.24&quot;,&#xA;    &quot;@angular/cli&quot;: &quot;^8.3.26&quot;,&#xA;    &quot;@angular/compiler&quot;: &quot;^8.2.14&quot;,&#xA;    &quot;@angular/compiler-cli&quot;: &quot;^8.2.14&quot;,&#xA;    &quot;@angular/language-service&quot;: &quot;^8.2.14&quot;,&#xA;    &quot;@types/jasmine&quot;: &quot;~3.3.8&quot;,&#xA;    &quot;@types/jasminewd2&quot;: &quot;^2.0.8&quot;,&#xA;    &quot;@types/node&quot;: &quot;~8.9.4&quot;,&#xA;    &quot;codelyzer&quot;: &quot;^5.2.2&quot;,&#xA;    &quot;install&quot;: &quot;^0.13.0&quot;,&#xA;    &quot;jasmine-core&quot;: &quot;~3.4.0&quot;,&#xA;    &quot;jasmine-spec-reporter&quot;: &quot;~4.2.1&quot;,&#xA;    &quot;karma&quot;: &quot;~4.1.0&quot;,&#xA;    &quot;karma-chrome-launcher&quot;: &quot;~2.2.0&quot;,&#xA;    &quot;karma-coverage-istanbul-reporter&quot;: &quot;~2.0.1&quot;,&#xA;    &quot;karma-jasmine&quot;: &quot;~2.0.1&quot;,&#xA;    &quot;karma-jasmine-html-reporter&quot;: &quot;^1.5.4&quot;,&#xA;    &quot;npm&quot;: &quot;^6.14.5&quot;,&#xA;    &quot;protractor&quot;: &quot;^5.4.4&quot;,&#xA;    &quot;ts-node&quot;: &quot;~7.0.0&quot;,&#xA;    &quot;tslint&quot;: &quot;~5.15.0&quot;,&#xA;    &quot;typescript&quot;: &quot;~3.5.3&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",16931360,,,,2022-01-21 15:09:53,Integrating apollo-angular V2 with Angular V8,<angular><typescript><graphql><apollo-angular>,1,1,0,2021-09-16 19:43:24
69218049,1,,,1,238,"<p>I want to deprecate an input parameter that's no longer used. But I <strong>do not get</strong> a deprecated warning in GraphQL doc.</p>&#xA;<pre><code>extend type Query {&#xA;    getSomething(&#xA;       param1: String!, &#xA;       param2: String @deprecated(reason: &quot;param2 is no longer used&quot;)&#xA;    ): String!&#xA;}&#xA;</code></pre>&#xA;",11265540,,11265540,2021-09-17 11:23:52,2021-09-17 11:23:52,Is it possible to deprecate an input parameter on GraphQL query?,<node.js><graphql><apollo-server>,0,0,0,2021-09-17 05:12:05
69218825,1,,,2,237,"<p>I need to get deprecated warnings in GraphQL query response as in the below image (inside extensions):</p>&#xA;<p><a href=""https://i.stack.imgur.com/uL0HA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uL0HA.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Currently, once I added <code>@deprecated</code> to the Type definition, I do not get the <code>&quot;extensions&quot;</code> parameter in the response.</p>&#xA;<pre><code>type Post {&#xA;    title: String&#xA;    isPublished: Boolean @deprecated(reason: &quot;no longer supported&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>How I can achieve this with NodeJS <code>apollo-server</code></p>&#xA;",11265540,,11265540,2021-09-17 10:03:41,2021-09-17 10:03:41,How can I get deprecated warnings in GraphQL query response,<node.js><graphql><deprecated><apollo-server><deprecation-warning>,0,0,0,2021-09-17 06:39:38
69219998,2,,69043998,0,,"<p>Your node version is high, please add this in package.js file.</p>&#xA;<pre><code>&quot;resolutions&quot;: {&#xA;    &quot;**/**/fs-capacitor&quot;: &quot;^6.2.0&quot;,&#xA;    &quot;**/graphql-upload&quot;: &quot;^11.0.0&quot;&#xA;}&#xA;</code></pre>&#xA;",14563376,,,,2021-09-17 08:15:40,"",,0,0,0,2021-09-17 08:15:40
69251428,2,,61639636,1,,<p>Upgrade your version<code>npm i graphql@latest</code></p>&#xA;,10784625,,,,2021-09-20 08:40:37,"",,0,0,0,2021-09-20 08:40:37
69255357,2,,69246746,0,,"<p>There is no workaround for this at this time(20/09/2021), however, we merged <a href=""https://github.com/neo4j/graphql/pull/475"" rel=""nofollow noreferrer"">this</a> pull request a few days ago, that includes your desired functionally. It will be released very soon.</p>&#xA;",10687857,,10687857,2021-09-20 17:29:32,2021-09-20 17:29:32,"",,0,1,0,2021-09-20 13:35:18
69303294,2,,69298700,0,,<p>In my case I missed to fill in the root path for assets in the security tab of the Pimcore Data Hub configuration.</p>&#xA;,326016,,,,2021-09-23 15:55:07,"",,0,0,0,2021-09-23 15:55:07
69303843,2,,69300226,2,,"<p>The <code>Domain</code> attribute on you cookie seems to be different from the origin of your request. You're making a cross-site request and receiving a Set Cookie response from the server (of a different domain).</p>&#xA;<p>Normally we run into this issue when running backend and frontend on different domains (for e.g. <code>localhost:3000</code> and <code>localhost:8080</code>).</p>&#xA;<p><strong>Solution:</strong></p>&#xA;<ol>&#xA;<li>Recent Chrome browser versions (from 2020) will only set cookies received from cross-site requests if cookie has <code>SameSite=None</code> and <code>Secure</code> attributes set. With <code>Secure</code> set, a cookie will only be sent to server over HTTPS protocol (you need to implement SSL).<br />&#xA;As of now, you don't have set either. <code>SameSite</code> defaults to <code>Lax</code> not <code>None</code>. You need to explicitly set it.</li>&#xA;</ol>&#xA;<p><em>OR</em></p>&#xA;<ol start=""2"">&#xA;<li>You need implement a proxy such that you will request your webapp on <code>https://rewhite-86006--beta-duoa0dwg.web.app</code> and your webapp will proxy this to your Saleor engine domain <code>rewhite-saleor-engine.herokuapp.com</code>. How you do that depends on what frameworks you're using for serving your webapp. You haven't mentioned your it in your question, but I notice you've tagged it under <code>vue.js</code>, so I'll assume that you're using Vue CLI for serving a Vue app.</li>&#xA;</ol>&#xA;<p>Its very simple to set up a proxy with Vue CLI. Just look for <code>vue.config.js</code> file in your root directory. If its not there, create it and paste the code below:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>module.exports = {&#xA;    devServer: {&#xA;        proxy: {&#xA;            '^/graphql': {&#xA;                target: 'https://rewhite-saleor-engine.herokuapp.com',&#xA;                changeOrigin: true,&#xA;                logLevel: 'debug',&#xA;            },&#xA;        },&#xA;    },&#xA;}&#xA;</code></pre>&#xA;<p>Now instead of fetching the refreshToken from <code>rewhite-saleor-engine.herokuapp.com/graphql</code>, you should send the request to your webapp at <code>https://rewhite-86006--beta-duoa0dwg.web.app/graphql</code>, and your web app local server will forward the request to your Saleor backend on Heroku. To your browser it will appear as though the request's response came form the webapp itself, so it won't be a cross-site request anymore.</p>&#xA;",5309299,,5309299,2021-09-25 17:48:54,2021-09-25 17:48:54,"",,0,13,0,2021-09-23 16:35:45
69312792,2,,69010941,0,,"<p>Don't know how you fixed it but run into same problem yesterday.</p>&#xA;<p>I was using &quot;https://xxxx.myshopify.com/api/2021-07/graphql.json&quot; and the 2021/10 api release will became stable almost on one week.</p>&#xA;<p>The interesting was that doing the following query</p>&#xA;<pre><code>query getSchema {&#xA; __schema {&#xA;    mutationType {&#xA;      fields {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Didn't return any cart field, so the error was from Shopify I think.</p>&#xA;<p>Solution for me:</p>&#xA;<p>Changed to the new upcoming version 2021/10 like ---&gt;&#xA;&quot;https://xxxx.myshopify.com/api/2021-10/graphql.json&quot;, performed the same query and all the cart fields where available and everything worked fine.</p>&#xA;",13735952,,,,2021-09-24 09:36:38,"",,0,0,0,2021-09-24 09:36:38
69323261,1,,,6,3121,"<p>While trying to download the schema using npm run schema:download I am  receiving the following error.</p>&#xA;<blockquote>&#xA;<p>my-app@0.1.0 schema:download&#xA;npx apollo service:download --endpoint=http://localhost:9000/graphql ./src/app/graphql-schema.json</p>&#xA;</blockquote>&#xA;<hr />&#xA;<h2>DEPRECATED: This command will be removed from the <code>apollo</code> CLI in&#xA;its next major version. Replacement functionality is available in&#xA;the new Apollo Rover CLI: <a href=""https://go.apollo.dev/t/migration"" rel=""noreferrer"">https://go.apollo.dev/t/migration</a></h2>&#xA;<p>✔ Loading Apollo Project&#xA;✖ Saving schema to ./src/app/graphql-schema.json&#xA;→ spurious results.&#xA;Error: Cannot use GraphQLSchema &quot;{ __validationErrors: undefined, extensions: undefined, astNode:&#xA;undefined, extensionASTNodes: undefined, __allowedLegacyNames: [], _queryType: Query, _mutationType:&#xA;Mutation, _subscriptionType: null, _directives: [@include, @skip, @deprecated, @specifiedBy],&#xA;_typeMap: { Query: Query, Car: Car, String: String, Float: Float, Mutation: Mutation, NewCarInput:&#xA;NewCarInput, Int: Int, __Schema: __Schema, __Type: __Type, __TypeKind: __TypeKind, Boolean: Boolean,&#xA;__Field: __Field, __InputValue: __InputValue, __EnumValue: __EnumValue, __Directive: __Directive,&#xA;__DirectiveLocation: __DirectiveLocation }, _possibleTypeMap: {}, _implementations: {} }&quot; from another&#xA;module or realm.</p>&#xA;<pre><code>Ensure that there is only one instance of &quot;graphql&quot; in the node_modules&#xA;directory. If different versions of &quot;graphql&quot; are the dependencies of other&#xA;relied on modules, use &quot;resolutions&quot; to ensure only one version is installed.&#xA;&#xA;https://yarnpkg.com/en/docs/selective-version-resolutions&#xA;&#xA;Duplicate &quot;graphql&quot; modules cannot be used at the same time since different&#xA;versions may have different capabilities and behavior. The data from one&#xA;version used in the function from another could produce confusing and&#xA;spurious results.&#xA;</code></pre>&#xA;<p>I have provided the endpoint for schema:download in my package.json as below.</p>&#xA;<pre><code>  &quot;scripts&quot;: {&#xA;&quot;start&quot;: &quot;craco start&quot;,&#xA;&quot;build&quot;: &quot;craco build&quot;,&#xA;&quot;test&quot;: &quot;craco test&quot;,&#xA;&quot;eject&quot;: &quot;react-scripts eject&quot;,&#xA;&quot;schema:download&quot;: &quot;npx apollo service:download --endpoint=http://localhost:9000/graphql ./src/app/graphql-schema.json&quot;,&#xA;&quot;schema:generate-watch&quot;: &quot;npx apollo codegen:generate --localSchemaFile=./src/app/graphql-schema.json --target=typescript --tagName=gql --watch&quot;&#xA;</code></pre>&#xA;<p>},</p>&#xA;<p>Can somebody help me sort out with the issue as Im new to graphql</p>&#xA;",16127553,,,,2022-04-20 18:05:17,"Ensure that there is only one instance of ""graphql"" in the node_modules directory",<reactjs><graphql><apollo-client>,2,0,0,2021-09-25 04:58:09
69330599,1,,,0,63,"<p>I installed graphql shield and using it with Apollo graphql. Since I use shield, I get an error regarding cors every time I execute a mutation. I am not sure why this happens as I am calling the Api just as before from my own server. I also tried to enable cors on my Node.js server but still some cross origin error occurs.</p>&#xA;<pre><code>const cors = require('cors');&#xA;app.use(cors())&#xA;</code></pre>&#xA;",15189040,,,,2021-10-01 11:57:34,Graphql shield asks to enable cors on express server,<express><graphql><apollo><apollo-server><nodejs-server>,1,0,0,2021-09-25 22:52:59
69340835,1,,,1,362,"<p>whenever i try to install graphql from strapi marketplace, i run into this problem</p>&#xA;<pre><code>error Error: Cannot use GraphQLObjectType &quot;Query&quot; from another module or realm.&#xA;&#xA;Ensure that there is only one instance of &quot;graphql&quot; in the node_modules&#xA;directory. If different versions of &quot;graphql&quot; are the dependencies of other&#xA;relied on modules, use &quot;resolutions&quot; to ensure only one version is installed.&#xA;&#xA;https://yarnpkg.com/en/docs/selective-version-resolutions&#xA;&#xA;Duplicate &quot;graphql&quot; modules cannot be used at the same time since different&#xA;versions may have different capabilities and behavior. The data from one&#xA;version used in the function from another could produce confusing and&#xA;spurious results.&#xA;</code></pre>&#xA;",11069129,,,,2022-04-05 21:36:43,"Strapi error Error: Cannot use GraphQLObjectType ""Query"" from another module or realm",<graphql><strapi>,1,0,0,2021-09-27 03:19:07
69343125,2,,69343038,10,,"<p>the solution is to make sure that you have a webpack.config.js file in the root of your project directory that looks something like this:</p>&#xA;<pre><code>const config = {&#xA;  mode: 'production', // &quot;production&quot; | &quot;development&quot; | &quot;none&quot;&#xA;  resolve: {&#xA;    extensions: ['*', '.mjs', '.js', '.json']&#xA;  },&#xA;  module: {&#xA;    rules: [&#xA;      {&#xA;        test: /\.mjs$/,&#xA;        include: /node_modules/,&#xA;        type: 'javascript/auto'&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;&#xA;module.exports = config&#xA;</code></pre>&#xA;<p>also you can take a look <a href=""https://github.com/vanruesc/postprocessing"" rel=""noreferrer"">https://github.com/vanruesc/postprocessing</a></p>&#xA;",11012952,,,,2021-09-27 08:02:47,"",,0,3,0,2021-09-27 08:02:47
69345212,2,,69343038,1,,"<p>Here is a another example for the glahql library</p>&#xA;<pre><code>module.exports = {&#xA;    chainWebpack: config =&gt; {&#xA;        // ...other chains&#xA;        config.module // fixes https://github.com/graphql/graphql-js/issues/1272&#xA;            .rule('mjs$')&#xA;            .test(/\.mjs$/)&#xA;            .include&#xA;                .add(/node_modules/)&#xA;                .end()&#xA;            .type('javascript/auto');&#xA;    },&#xA;    configureWebpack: {&#xA;        resolve: {&#xA;            // .mjs needed for https://github.com/graphql/graphql-js/issues/1272&#xA;            extensions: ['*', '.mjs', '.js', '.vue', '.json']&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",11012952,,,,2021-09-27 10:39:14,"",,0,2,0,2021-09-27 10:39:14
69352991,1,69391576,,-1,209,"<p>I setup two projects, Node.js and React in <a href=""https://nx.dev/l/a/node/overview"" rel=""nofollow noreferrer"">Nx</a> monorepo. I would like to use GraphQL for communication. Projects I'm running with command <code>nx serve api</code>(Node.js) and <code>nx serve totodile</code> (React). Problem is that React cannot access data from <code>/graphql</code> endpoint.</p>&#xA;<p>React is running on <code>http://localhost:4200/</code>.<br />&#xA;Node.js is running on <code>http://localhost:3333/</code>.</p>&#xA;<h3>Node.js part</h3>&#xA;<p>According to <a href=""https://graphql.org/graphql-js/running-an-express-graphql-server/"" rel=""nofollow noreferrer"">GraphQL instructions for Node.js</a> I run Node.js server. I have created two endpoints <code>/api</code> and <code>/graphql</code>.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import * as express from 'express';&#xA;import { graphqlHTTP } from 'express-graphql';&#xA;import { Message } from '@totodile/api-interfaces';&#xA;import { buildSchema } from 'graphql';&#xA;&#xA;const app = express();&#xA;&#xA;const greeting: Message = { message: 'Welcome to api!' };&#xA;&#xA;app.get('/api', (req, res) =&gt; {&#xA;  res.send(greeting);&#xA;});&#xA;&#xA;app.use('/graphql', graphqlHTTP({&#xA;  schema: buildSchema(`&#xA;  type Query {&#xA;    hello : String&#xA;  }&#xA;`),&#xA;  rootValue: {&#xA;    hello: () =&gt; 'Hello world'&#xA;  },&#xA;  graphiql: true,&#xA;}));&#xA;&#xA;const port = process.env.port || 3333;&#xA;const server = app.listen(port, () =&gt; {&#xA;  console.log('Listening at http://localhost:' + port + '/api');&#xA;});&#xA;server.on('error', console.error);&#xA;&#xA;</code></pre>&#xA;<p>In a result I am able to connect to <code>http://localhost:3333/graphql</code> and receive response. So graphql server is working well.</p>&#xA;<pre><code>// graphql response&#xA;{&#xA;  &quot;data&quot;: {&#xA;    &quot;hello&quot;: &quot;Hello world&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<h3>React part</h3>&#xA;<p>Inside functional component I fetch with <code>/api</code> and <a href=""https://graphql.org/graphql-js/graphql-clients/"" rel=""nofollow noreferrer""><code>/graphql</code></a>. First one return valid data, <strong>but /graphql is returning 404</strong>, <em>Cannot POST /graphql</em>.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>  useEffect(() =&gt; {&#xA;    fetch('/api') // successfully return data&#xA;      .then((r) =&gt; r.json())&#xA;      .then(setMessage);  &#xA;&#xA;    fetch('/graphql', { // 404, no data&#xA;      method: 'POST',&#xA;      headers: {&#xA;        'Content-Type': 'application/json',&#xA;        'Accept': 'application/json',&#xA;      },&#xA;      body: JSON.stringify({query: &quot;{ hello }&quot;})&#xA;    })&#xA;      .then(r =&gt; r.json())&#xA;      .then(data =&gt; console.log('data returned:', data)); &#xA;  }, []);&#xA;</code></pre>&#xA;<p>I investigate that:</p>&#xA;<pre><code>http://localhost:4200/api return valid data (&quot;message&quot;: &quot;Welcome to api!&quot;)&#xA;http://localhost:3333/api return valid data (&quot;message&quot;: &quot;Welcome to api!&quot;)&#xA;&#xA;http://localhost:4200/graphql 404 no data&#xA;http://localhost:3333/graphql return valid data (&quot;hello&quot;: &quot;Hello world&quot;)&#xA;</code></pre>&#xA;<p>It must be something with ports.<br />&#xA;I don't understand how <code>/api</code> is able to return any data. Why on both ports?<br />&#xA;What should I do to share data from <code>/graphql</code> to react?</p>&#xA;",13899329,,13899329,2021-09-27 20:47:33,2021-09-30 11:38:41,Send data between GraphQL Node.js server and React in Nx,<javascript><node.js><reactjs><graphql><nx.dev>,1,3,0,2021-09-27 20:37:08
69378125,1,,,0,180,"<p>I am running a react project on Kubernetes and I am having both frontend and backend as services in Kubernetes. The backend is running <code>nestjs</code> and <code>graphql</code>.</p>&#xA;<p>When I tried to spin it up online by using the following url <code>https://my_backend.mydomain</code> everything went as expected, though I realized that with this architecture the backend will be publicly available.</p>&#xA;<p>So I decided to use the internal url of Kubernetes such as <code>http://my_service:my_port</code>, and I got an error: <code>Blocked loading mixed active content</code>. I realized it was for http instead of https, re-configured the url and set up the connection for <code>https://my-service:my_port</code>. Though now I get a: <code>Cross-Origin Request Blocked: The Same Origin Policy disallows reading the remote resource</code>.</p>&#xA;<p>My ingress file looks like the following:</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>kubernetes.io/ingress.class: nginx&#xA;    nginx.ingress.kubernetes.io/enable-cors: &quot;true&quot;&#xA;    nginx.ingress.kubernetes.io/cors-allow-methods: &quot;PUT, GET, POST, OPTIONS&quot;&#xA;    nginx.ingress.kubernetes.io/cors-allow-headers: &quot;DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization&quot;&#xA;    nginx.ingress.kubernetes.io/cors-allow-origin: &quot;$http_origin&quot;&#xA;    nginx.ingress.kubernetes.io/configuration-snippet: |&#xA;      more_set_headers &quot;Content-Security-Policy:  https://cdn.jsdelivr.net:* https://*.rsms.me:* https://rsms.me:* always&quot;;&#xA;      more_set_headers &quot;Access-Control-Allow-Origin: *&quot;;&#xA;spec:&#xA;...&#xA;</code></pre>&#xA;<p>Am I mistaken somewhere? I could not find that much regarding Kubernets+NestJs+CORS. I keep ending up in documentation that says to add &quot;Access-Control-Allow-Origin: *&quot;. But apparently that does not much with my configuration.</p>&#xA;",14281236,,1233251,2021-09-30 18:30:09,2021-09-30 18:30:09,Kubernetes Nest CORS Issue,<kubernetes><graphql><cors><nestjs>,0,6,0,2021-09-29 14:15:22
69391500,1,,,0,58,"<p>I have a GraphQl query that works in development but doesn't work in Staging.</p>&#xA;<pre><code>query all_Products($region: Alpha2Code!) {&#xA;    variantsByregion(region: $region&#xA;      where:{isB2B:{eq:true}}&#xA;      ) {&#xA;        items {&#xA;          productCode,&#xA;          isB2B&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>if I run the above query in my development it will filter with isB2B but as soon as I use this query in Staging I get whole data.</p>&#xA;",9145373,,,,2021-09-30 11:33:46,GraphQl where does not filter in Staging,<c#><graphql><graphql-csharp>,0,2,0,2021-09-30 11:33:46
69391576,2,,69352991,1,,"<p>To fix issue there was 2 steps to do:</p>&#xA;<ol>&#xA;<li>In React I should fetch from endpoint with port <code>fetch('http://localhost:3333/graphql',(...))</code></li>&#xA;<li>In Node.js there is need to use <code>cors</code> library</li>&#xA;</ol>&#xA;<pre class=""lang-js prettyprint-override""><code>import express from &quot;express&quot;;&#xA;import cors from 'cors';&#xA;&#xA;const app = express();&#xA;&#xA;app.use(cors());&#xA;&#xA;app.use('/graphql', graphqlHTTP({&#xA; schema: schema,&#xA; rootValue: root,&#xA; graphiql: true,&#xA;}));&#xA;&#xA;...&#xA;</code></pre>&#xA;",13899329,,,,2021-09-30 11:38:41,"",,0,0,0,2021-09-30 11:38:41
69406268,1,,,1,148,"<p>I'm trying to use <code>BatchHttpLink</code> to batch requests from apollo on a <code>nextjs</code> application using below config:</p>&#xA;<pre><code>import fetch from 'isomorphic-unfetch';&#xA;import { ApolloProvider, ApolloClient, ApolloLink, from } from '@apollo/client'; &#xA;import { onError } from '@apollo/client/link/error'; &#xA;import { BatchHttpLink } from '@apollo/client/link/batch-http';&#xA;&#xA;const batchHttpLink = new BatchHttpLink({&#xA;    uri: process.env.GRAPHQL_URL,&#xA;    batchMax: 5,&#xA;    batchInterval: 20,&#xA;    credentials: 'same-origin',&#xA;    fetch&#xA;});&#xA;&#xA;  /**&#xA;   * to parse batch call response&#xA;   * See more https://spectrum.chat/apollo/apollo-client/batchhttplink-not-working-with-usequery-react-hooks~3eeb6635-c5a8-4b8a-a2fd-3b7fbebc5816&#xA;   */&#xA;  const parseBatchResponseMiddleware = new ApolloLink((operation, forward) =&gt;&#xA;    forward(operation).map((data: any) =&gt; data.payload)&#xA;  );&#xA;&#xA;  const errorLink = onError(({ graphQLErrors, networkError, forward, operation }) =&gt; {&#xA;    if (graphQLErrors) {&#xA;      console.warn(graphQLErrors);&#xA;    }&#xA;    if (networkError) {&#xA;      console.warn(networkError);&#xA;    }&#xA;    forward(operation);&#xA;  });&#xA;&#xA;  return new ApolloClient({&#xA;    ssrMode: typeof window === 'undefined',&#xA;    link: from([parseBatchResponseMiddleware, errorLink, authLink.concat(batchHttpLink)]),&#xA;    cache: new InMemoryCache({&#xA;      possibleTypes: introspectionToPossibleTypes(introspectionQueryResultData)&#xA;    })&#xA;  });&#xA;</code></pre>&#xA;<p>I added <code>parseBatchResponseMiddleware</code> to parse the batch response. When I run app on development mode everything seems correct but as soon as I build app on prod environment it returns 500-internal server error:</p>&#xA;<blockquote>&#xA;<p>TypeError: value.subscribe is not a function&#xA;at Object.complete (/.../node_modules/@apollo/client/utilities/observables/Concast.js:57:43)&#xA;at Concast.start (/.../node_modules/@apollo/client/utilities/observables/Concast.js:83:23)&#xA;at new Concast (/.../node_modules/@apollo/client/utilities/observables/Concast.js:75:19)&#xA;at QueryManager.getObservableFromLink (/.../node_modules/@apollo/client/core/QueryManager.js:551:35)&#xA;at QueryManager.getResultsFromLink (/.../node_modules/@apollo/client/core/QueryManager.js:590:30)&#xA;at resultsFromLink (/.../node_modules/@apollo/client/core/QueryManager.js:755:26)&#xA;at QueryManager.fetchQueryByPolicy (/.../node_modules/@apollo/client/core/QueryManager.js:782:21)&#xA;at fromVariables (/.../node_modules/@apollo/client/core/QueryManager.js:638:26)&#xA;at QueryManager.fetchQueryObservable (/.../node_modules/@apollo/client/core/QueryManager.js:645:15)&#xA;at QueryManager.fetchQuery (/.../node_modules/@apollo/client/core/QueryManager.js:260:21)&#xA;at QueryManager.query (/.../node_modules/@apollo/client/core/QueryManager.js:345:21)&#xA;at ApolloClient.query (/.../node_modules/@apollo/client/core/ApolloClient.js:133:34)&#xA;at Function.Z.t.getInitialProps (/.../src/.next/server/pages/_app.js:158:151526)&#xA;at Function.B.r.getInitialProps (/.../src/.next/server/pages/_app.js:158:147992)</p>&#xA;</blockquote>&#xA;<p>Any ideas to solve this issue is highly appreciated.</p>&#xA;",5374999,,,,2021-10-01 12:56:09,Apollo client TypeError: value.subscribe is not a function,<javascript><next.js><apollo><apollo-client>,0,0,0,2021-10-01 12:56:09
69420942,1,69431311,,-1,335,"<p>Does anyone know how to fix this issue Gatsby with react-spring-3d-carousel:</p>&#xA;<p>import Carousel from &quot;react-spring-3d-carousel&quot;</p>&#xA;<p>and</p>&#xA;<pre><code>&lt;Carousel slides={slides} goToSlide={selectedSlide} /&gt;. &#xA;</code></pre>&#xA;<p>I looked in the docs but still appears error: window is not defined</p>&#xA;<p>gatsby-node.js</p>&#xA;<pre><code>exports.onCreateWebpackConfig = ({ stage, loaders, actions }) =&gt; {&#xA;    if (stage === &quot;build-html&quot;) {&#xA;      actions.setWebpackConfig({&#xA;        module: {&#xA;          rules: [&#xA;            {&#xA;              test: /react-spring-3d-carousel/,&#xA;              use: loaders.null(),&#xA;            },&#xA;          ],&#xA;        },&#xA;      })&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>Any help would be greatly appreciated</p>&#xA;",13199057,,,,2021-10-04 05:36:43,gatsby react-spring-3d issue,<reactjs><graphql><gatsby>,1,4,0,2021-10-02 23:22:46
69431311,2,,69420942,0,,"<p>For others that may be facing similar issues, not only related to <code>react-spring-3d-carousel</code>: if adding a <code>null</code> loader to the SSR transpilation doesn't work, the other possible workaround is adding a loadable component, which in fact, what is doing is to perform a code-splitting in the server-side.</p>&#xA;<pre><code>import loadable from &quot;@loadable/component&quot;; &#xA;const Carousel = loadable(() =&gt; import(&quot;react-spring-3d-carousel&quot;))&#xA;</code></pre>&#xA;",5585371,,,,2021-10-04 05:36:43,"",,0,0,0,2021-10-04 05:36:43
69463317,2,,69462905,0,,"<p>The fix is using the specific version of the phoenix package that overmind-graphql relies on:<br />&#xA;<code>&quot;phoenix&quot;: &quot;1.4.13&quot;</code></p>&#xA;<p>Seems like the re-install didn't help, but just confused me more.</p>&#xA;",11659057,,11659057,2021-10-06 17:12:27,2021-10-06 17:12:27,"",,0,0,0,2021-10-06 09:41:42
69477543,1,69477544,,0,708,"<p>Why I can use nuxt apollo module with nuxt composition API? If I try use this plugin example:</p>&#xA;<pre><code>import {Context} from '@nuxt/types'&#xA;import {&#xA;  provide,&#xA;  onGlobalSetup,&#xA;  defineNuxtPlugin&#xA;} from '@nuxtjs/composition-api'&#xA;import {DefaultApolloClient} from '@vue/apollo-composable/dist'&#xA;&#xA;/**&#xA; * This plugin will connect @nuxt/apollojs with @vue/apollo-composable&#xA; */&#xA;&#xA;export default defineNuxtPlugin(({app}: Context): void =&gt; {&#xA;  onGlobalSetup(() =&gt; {&#xA;    provide(DefaultApolloClient, app.apolloProvider?.defaultClient)&#xA;  })&#xA;})&#xA;</code></pre>&#xA;<p>I get this <code>Error: Apollo client with id default not found. Use provideApolloClient() if you are outside of a component setup</code></p>&#xA;",10824066,,,,2021-10-07 08:07:49,Usage nuxt composition api and nuxt appollo module,<vue.js><nuxt.js><vue-composition-api><vue-apollo>,1,0,0,2021-10-07 08:07:49
69477544,2,,69477543,1,,"<ol>&#xA;<li><p>Install vue/apollo-composable:&#xA;<code>npm install --save @vue/apollo-composable</code></p>&#xA;</li>&#xA;<li><p>Create nuxt plugin(provide-apollo-client.ts):</p>&#xA;</li>&#xA;</ol>&#xA;<pre><code>import { Context } from '@nuxt/types'&#xA;import {&#xA;  onGlobalSetup,&#xA;  defineNuxtPlugin&#xA;} from '@nuxtjs/composition-api'&#xA;// @ts-ignore&#xA;import { provideApolloClient } from '@vue/apollo-composable'&#xA;&#xA;/**&#xA; * This plugin will connect @nuxt/apollojs with @vue/apollo-composable&#xA; */&#xA;&#xA;export default defineNuxtPlugin(({ app }: Context): void =&gt; {&#xA;  onGlobalSetup(() =&gt; {&#xA;    provideApolloClient(app.apolloProvider?.defaultClient)&#xA;  })&#xA;})&#xA;</code></pre>&#xA;",10824066,,,,2021-10-07 08:07:49,"",,0,0,0,2021-10-07 08:07:49
69479561,1,69492184,,0,132,"<p>In Node.js app, I am using <code>graphql</code> to get the list of data. I have created two models called <code>School</code> and <code>Grade</code>. Association for these models like School has many Grades and Grade belongs to School.&#xA;While querying I am getting <code>null</code> value for associated model.</p>&#xA;<p>In model school.js,</p>&#xA;<pre><code>module.exports = (sequelize, Sequelize) =&gt; {&#xA; const School = sequelize.define(&quot;school&quot;, {&#xA;  name: {&#xA;   type: Sequelize.STRING,&#xA;  },&#xA;  email: {&#xA;    type: Sequelize.STRING,&#xA;  },&#xA; });&#xA;&#xA; School.associate = function (models) {&#xA;  School.hasMany(models.Grade, { foreignKey: &quot;school_id&quot; });&#xA; };&#xA;&#xA; return School;&#xA;};&#xA;</code></pre>&#xA;<p>In typeDefs.graphql,</p>&#xA;<pre><code>type Query {&#xA;  getSchoolDetails: [School]&#xA;  getSchoolDetail(id: ID!): School&#xA;  getGradeDetails: [Grade]&#xA;}&#xA;&#xA;type School {&#xA;  id: ID!&#xA;  name: String&#xA;  email: String&#xA;  grades: [Grade]&#xA;}&#xA;&#xA;type Grade {&#xA;  id: ID!&#xA;  school_id: ID!&#xA;  name: String&#xA;  school: School&#xA;}&#xA;</code></pre>&#xA;<p>In resolvers.js,</p>&#xA;<pre><code>const Query = {&#xA; getSchoolDetails: async () =&gt; {&#xA;  try {&#xA;    const schools = await school.findAll();&#xA;    return schools;&#xA;  } catch (err) {&#xA;    console.log(err);&#xA;  }&#xA; },&#xA; getSchoolDetail: async (root, { id }) =&gt; {&#xA;  try {&#xA;    const scl = await school.findByPk(id);&#xA;    return scl;&#xA;  } catch (err) {&#xA;    console.log(err);&#xA;  }&#xA; },&#xA; getGradeDetails: async () =&gt; {&#xA;  try {&#xA;    const grades = await grade.findAll({});&#xA;    return grades;&#xA;  } catch (err) {&#xA;    console.log(err);&#xA;  }&#xA; },&#xA;}&#xA;</code></pre>&#xA;<p>In playground when I query like,</p>&#xA;<pre><code>query {&#xA; getSchoolDetails{&#xA;  id&#xA;  name&#xA;  email&#xA;  grades{&#xA;    name&#xA;  }&#xA; }&#xA;}&#xA;</code></pre>&#xA;<p>Output for this is,</p>&#xA;<pre><code>{&#xA; &quot;data&quot;: {&#xA;   &quot;getSchoolDetails&quot;: [&#xA;    {&#xA;      &quot;id&quot;: &quot;1&quot;,&#xA;      &quot;name&quot;: &quot;Rotary West School&quot;,&#xA;      &quot;email&quot;: &quot;rotary@gmail.com&quot;,&#xA;      &quot;grades&quot;: null&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;2&quot;,&#xA;      &quot;name&quot;: &quot;Excel Public School&quot;,&#xA;      &quot;email&quot;: &quot;excel@gmail.com&quot;,&#xA;      &quot;grades&quot;: null&#xA;    },&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>Same way when I query to get Grades will get school as <code>null</code>. I am learning nodejs relations with graphql, please help me to solve this.</p>&#xA;",703997,,703997,2021-10-07 10:38:41,2021-10-08 07:36:21,Node.js - How to get associated model data using graphql?,<node.js><postgresql><graphql><sequelize.js><associations>,1,0,0,2021-10-07 10:30:11
69492184,2,,69479561,1,,"<p>You have to use include with your queries in resolvers.js file like below</p>&#xA;<pre><code>getSchoolDetails: async () =&gt; {&#xA;                try {&#xA;                    const schools = await school.findAll({&#xA;                        include: [{ model: Grade }],&#xA;                    });&#xA;                    return schools;&#xA;                } catch (err) {&#xA;                    console.log(err);&#xA;                }&#xA;            },&#xA;</code></pre>&#xA;<p>This Will get all the grades associated with schools</p>&#xA;<p>And if you want to <code>include school with grade you have to associate grade with school using Grades belongsTo school </code></p>&#xA;",12761193,,,,2021-10-08 07:36:21,"",,0,0,0,2021-10-08 07:36:21
69512088,2,,59272819,0,,"<p>While changing <code>NODE_ENV</code> to production might solve the issue, if you have different variables for each environment and don't want to mess with your metrics this is not an ideal solution.</p>&#xA;<p>You said you use webpack. If the build with the issue uses some kind of source-map in your devtool, you might want to disable that to see if the problem persists. That's how I solved this without setting my <code>NODE_ENV</code> to production.</p>&#xA;",6736437,,,,2021-10-10 03:36:18,"",,0,0,0,2021-10-10 03:36:18
69515184,2,,69034677,2,,"<p>i had the same problem. This is a known bug with an open issue so that for now, you can downgrade apollo-server-micro@^2.</p>&#xA;<p>My package.json is now as follows and it works flawlessly.</p>&#xA;<pre><code>&quot;dependencies&quot;: {&#xA;  &quot;apollo-server-micro&quot;: &quot;2.25.0&quot;,&#xA;  &quot;graphql&quot;: &quot;^15.6.1&quot;,&#xA;  &quot;micro&quot;: &quot;^9.3.4&quot;,&#xA;  &quot;mongoose&quot;: &quot;^6.0.10&quot;,&#xA;  &quot;next&quot;: &quot;11.1.2&quot;,&#xA;  &quot;react&quot;: &quot;17.0.2&quot;,&#xA;  &quot;react-dom&quot;: &quot;17.0.2&quot; }&#xA;</code></pre>&#xA;",9557854,,,,2021-10-10 12:34:17,"",,0,0,0,2021-10-10 12:34:17
69516498,2,,59920824,1,,"<p>I ran into similar problem when data is shown completely in playground, but empty in actual app. I checked dev tool and saw all the data is in the browser's response, but it just doesn't show up in apollo cache. Then I found out the reason was that I set my apollo client cache option to be {addTypename: false}. After deleting this, it worked as expected.</p>&#xA;",7094619,,1839439,2021-10-10 15:28:57,2021-10-10 15:28:57,"",,0,0,0,2021-10-10 15:23:21
69555904,2,,67042652,0,,<p>I think that localhost is not defined in your device (emulated or not) and you should use the IP address or the name of your server&#xA;I had the same problem and solved it this way</p>&#xA;,5847671,,,,2021-10-13 12:49:13,"",,0,1,0,2021-10-13 12:49:13
69583367,2,,58063140,0,,<p>You need to change socket type from .sock to net (ip:port).&#xA;And use this consruction on NGinx &quot;proxy&quot; and server with django.</p>&#xA;,17158647,,,,2021-10-15 10:31:02,"",,0,0,0,2021-10-15 10:31:02
69590330,2,,69590182,0,,"<p>The gatsby plugin will attempt to retreive the schema from your apollo-server. Ensure that introspection is enabled in production so this step does not fail.</p>&#xA;<pre><code>{&quot;extensions&quot;:{&quot;code&quot;:&quot;GRAPHQL_VALIDATION_FAILED&quot;},&quot;level&quot;:&quot;warn&quot;,&quot;locations&quot;:[{&quot;column&quot;:3,&quot;line&quot;:2}],&quot;message&quot;:&quot;GraphQL introspection is not allowed by Apollo Server, but the query contained __schema or __type. To enable introspection, pass introspection: true to ApolloServer in production&quot;} &#xA;</code></pre>&#xA;<p>By:</p>&#xA;<pre><code>  const server = new ApolloServer({&#xA;     // other properties&#xA;    introspection: true&#xA;  });&#xA;</code></pre>&#xA;",3589092,,3589092,2021-10-15 20:42:01,2021-10-15 20:42:01,"",,0,1,0,2021-10-15 20:35:34
69609508,2,,69592281,3,,"<p>Ah, I know that error. Keystone 6 is in a pre-release period and there are still occasional breaking changes to the API. Recently some changes to the structure of the GraphQL schema were <a href=""https://keystonejs.com/releases/2021-08-17"" rel=""nofollow noreferrer"">released</a>. Running the older style of queries on the new GraphQL schema will produce the error you're seeing.</p>&#xA;<p>In this case, the query can be rewritten as:</p>&#xA;<pre><code>query {&#xA;  posts ( where: { title: { equals: &quot;test&quot; } } ) {&#xA;    title&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The <a href=""https://keystonejs.com/docs/guides/filters#scalar-filters"" rel=""nofollow noreferrer"">GraphQL Queries</a> docs have more usage instructions and examples. There's also an <a href=""https://keystonejs.com/updates/new-graphql-api"" rel=""nofollow noreferrer"">upgrade guide</a> that specifically covers all the changes you'll need to make to your queries from before this upgrade.</p>&#xA;",762028,,,,2021-10-18 00:07:09,"",,0,1,0,2021-10-18 00:07:09
69609927,2,,69602080,1,,<p>I downgraded hotchocolate packages from 12.0.1 to 11.0.8 ad it worked. It was a suggestion to my comment in youtube.</p>&#xA;,6225090,,,,2021-10-18 01:42:08,"",,0,0,0,2021-10-18 01:42:08
69621366,2,,37397886,5,,"<p>I was also looking and came across this <a href=""https://medium.com/@mrthankyou/how-to-get-a-graphql-schema-28915025de0e"" rel=""nofollow noreferrer"">Medium article on GraphQL</a></p>&#xA;<p>The below query returned many details regarding schema, queries and their input &amp; output params type.</p>&#xA;<pre><code>fragment FullType on __Type {&#xA;  kind&#xA;  name&#xA;  fields(includeDeprecated: true) {&#xA;    name&#xA;    args {&#xA;      ...InputValue&#xA;    }&#xA;    type {&#xA;      ...TypeRef&#xA;    }&#xA;    isDeprecated&#xA;    deprecationReason&#xA;  }&#xA;  inputFields {&#xA;    ...InputValue&#xA;  }&#xA;  interfaces {&#xA;    ...TypeRef&#xA;  }&#xA;  enumValues(includeDeprecated: true) {&#xA;    name&#xA;    isDeprecated&#xA;    deprecationReason&#xA;  }&#xA;  possibleTypes {&#xA;    ...TypeRef&#xA;  }&#xA;}&#xA;fragment InputValue on __InputValue {&#xA;  name&#xA;  type {&#xA;    ...TypeRef&#xA;  }&#xA;  defaultValue&#xA;}&#xA;fragment TypeRef on __Type {&#xA;  kind&#xA;  name&#xA;  ofType {&#xA;    kind&#xA;    name&#xA;    ofType {&#xA;      kind&#xA;      name&#xA;      ofType {&#xA;        kind&#xA;        name&#xA;        ofType {&#xA;          kind&#xA;          name&#xA;          ofType {&#xA;            kind&#xA;            name&#xA;            ofType {&#xA;              kind&#xA;              name&#xA;              ofType {&#xA;                kind&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;query IntrospectionQuery {&#xA;  __schema {&#xA;    queryType {&#xA;      name&#xA;    }&#xA;    mutationType {&#xA;      name&#xA;    }&#xA;    types {&#xA;      ...FullType&#xA;    }&#xA;    directives {&#xA;      name&#xA;      locations&#xA;      args {&#xA;        ...InputValue&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;",8390408,,734335,2021-12-26 05:15:58,2021-12-26 05:15:58,"",,0,0,0,2021-10-18 19:13:48
69624807,1,69631300,,1,236,"<p>I have an react frontend and a python backend (using <code>ariadne==0.13.0, uvicorn==0.15.0, uvicorn[standard]==0.15.0, fastapi==0.68.1</code>) communicationg over graphql subscriptions. Everything works fine as long as I do not reload the page or load the page in a new browser window from same IP. Then the page crashes and takes some time to recover - Depending on the websocket timeout configured in uvicorn. I am experiencing the same issue with both my frontend and the graphql playgorund.&#xA;I understand that the different browsers or tabs are identified with the same IP, Port and protocol what possibly messes up the existing connection, but still it should be possible the use the page from different tabs as seen in:&#xA;<a href=""https://fastapi.tiangolo.com/advanced/websockets/"" rel=""nofollow noreferrer"">https://fastapi.tiangolo.com/advanced/websockets/</a></p>&#xA;<p>My code:</p>&#xA;<pre><code>SCHEMA = load_schema_from_path(&quot;schema.graphql&quot;)&#xA;query = QueryType()&#xA;subscription = SubscriptionType()&#xA;app = FastAPI()&#xA;schema = make_executable_schema(SCHEMA, [query, subscription])&#xA;graphql_server = GraphQL(schema, debug=True)&#xA;app.add_route(&quot;/graphql&quot;, graphql_server)&#xA;app.add_websocket_route(&quot;/graphql&quot;, graphql_server)&#xA;app.add_middleware(&#xA;    CORSMiddleware,&#xA;    allow_origins=[&quot;*&quot;],&#xA;    allow_methods=[&quot;POST&quot;, &quot;GET&quot;],&#xA;    allow_headers=[&#xA;        &quot;accept&quot;,&#xA;        &quot;accept-language&quot;,&#xA;        &quot;content-language&quot;,&#xA;        &quot;content-type&quot;,&#xA;        &quot;x-apollo-tracing&quot;,&#xA;    ],&#xA;)&#xA;app.debug = True&#xA;uvicorn.run(app, host='0.0.0.0', port=7996)&#xA;</code></pre>&#xA;",6161333,,,,2021-10-22 18:52:33,GraphQL subscription from multiple browsers/tabs,<websocket><graphql><fastapi><uvicorn><ariadne-graphql>,1,0,0,2021-10-19 03:34:36
69667846,1,,,1,85,"<p>we use GraphQL API to fetch data in my work. this is my query</p>&#xA;<pre><code>q='''{&#xA;  course1:course(id:12){&#xA;    ...CourseFragment&#xA;  }&#xA;  course2:course(id:13){&#xA;    ...CourseFragment&#xA;  }&#xA;}'''&#xA;&#xA;&#xA;fragment CourseFragment on Course {&#xA;  CourseID: _id&#xA;    CourseUUID: id&#xA;    CourseName: name&#xA;}&#xA;&#xA;&#xA;data=requests.post('url',q,headers)&#xA;</code></pre>&#xA;<p>and I am getting the data in json format. my question is what if I want to repeat the query for multiple course ids? is there any other way than repeating the course fragment part. I really appreciate any help or guidance on it. Thank you</p>&#xA;",17213929,,7606764,2021-10-22 08:06:40,2021-10-22 08:06:40,GraphQL API how to repeat a query for different values,<python-3.x><api><graphql>,0,0,0,2021-10-21 19:35:05
69710220,1,,,6,552,"<p><strong>Context:</strong>&#xA;I am trying to deploy GraphQL using Apollo Server Lambda through Netlify. My handler is as below:</p>&#xA;<p><strong>Code:</strong></p>&#xA;<pre><code>exports.handler = server.createHandler({&#xA;  cors: {&#xA;    origin: '*'&#xA;  }&#xA;});&#xA;</code></pre>&#xA;<p>I was able to build and deploy successfully on Netlify - however the server threw an error at launch. Netlify is looking for an event to trigger but the Apollo Server handler I have used does not provide. How do we connect this handler to a handler that uses events?</p>&#xA;<p><strong>Error Message:</strong></p>&#xA;<pre><code>{&quot;errorType&quot;:&quot;Error&quot;,&quot;errorMessage&quot;:&quot;Unable to determine event source based on event.&quot;,&quot;trace&quot;:[&quot;Error: Unable to determine event source based on event.&quot;,&quot;    at getEventSourceNameBasedOnEvent (/var/task/node_modules/@vendia/serverless-express/src/event-sources/utils.js:88:9)&quot;,&quot;    at proxy (/var/task/node_modules/@vendia/serverless-express/src/configure.js:38:51)&quot;,&quot;    at handler (/var/task/node_modules/@vendia/serverless-express/src/configure.js:99:12)&quot;,&quot;    at Runtime.handler (/var/task/node_modules/apollo-server-lambda/dist/ApolloServer.js:51:27)&quot;]}&#xA;</code></pre>&#xA;",17242735,,5403987,2021-10-26 13:29:33,2022-01-09 09:52:21,Serverless handler for Apollo Server throws error that it cant identify events on Netlify,<graphql><serverless><apollo-server><netlify>,1,0,0,2021-10-25 14:50:38
69783292,2,,69740750,0,,"<p>Apparently, the type of <code>GraphQLError.originalError</code> was changed at some point from <code>originalError?: Maybe&lt;Error&gt;</code> to <code>Error | undefined</code>. Downgrading to graphql 15.3.0 solved this for me.</p>&#xA;",2559586,,,,2021-10-31 01:23:36,"",,0,0,0,2021-10-31 01:23:36
69790415,1,69790486,,-1,1279,"<p>I was requesting data from a GraphQL server using fetch function in a file which I called <code>fetching.js</code> as shown below. However, fetchQuery() was getting called twice.</p>&#xA;<pre><code>module.exports = {&#xA;&#xA;    fetchQuery: function(query){&#xA;        console.log(&quot;fetchQuery started&quot;)&#xA;&#xA;        return fetch('http://localhost:4000/', {&#xA;            method: 'POST',&#xA;            headers: {&quot;Content-Type&quot;: &quot;application/json&quot;},&#xA;            body: JSON.stringify({&#xA;                query: query&#xA;            })&#xA;        }).then(res =&gt; {&#xA;            return res.json()&#xA;        })&#xA;    },&#xA; &#xA;    B: function(){&#xA;        console.log(&quot;This is function B. This is just a test.&quot;)&#xA;    }&#xA; &#xA;}&#xA;</code></pre>&#xA;<p>This how I call fetchQuery(). I was trying to render the JSON data into a navigation bar in react. This is the code so far.</p>&#xA;<pre><code>import React from 'react'&#xA;import '../App.css';&#xA;import {fetchQuery} from '../fetching'&#xA;&#xA;&#xA;function NavBar() {&#xA;&#xA;&#xA;    fetchQuery(`&#xA;        query{&#xA;            categories{&#xA;            name&#xA;            }&#xA;        }&#xA;    `).then(data =&gt; {&#xA;&#xA;        const tab = document.createElement('a')&#xA;        tab.innerText = data.data.categories[0].name&#xA;        tab.href = &quot;/&quot; + tab.innerText&#xA;&#xA;        const leftSide = document.getElementById('leftNavElements')&#xA;&#xA;        tab.innerText = data.data.categories[0].name&#xA;&#xA;        leftSide.append(tab)&#xA;&#xA;    })&#xA;&#xA;    return (&#xA;        &lt;div className = &quot;NavBar&quot;&gt;&#xA;            &#xA;            &lt;div className = &quot;leftSide&quot; id = &quot;leftNav&quot;&gt;&#xA;&#xA;                &lt;div className = &quot;links&quot; id=&quot;leftNavElements&quot; &gt;&#xA;                    &lt;a href = &quot;/&quot;&gt;ALL&lt;/a&gt;&#xA;                &lt;/div&gt; &#xA;            &lt;/div&gt;&#xA;&#xA;            &lt;div className = &quot;centerSide&quot;&gt;&#xA;                Logo&#xA;            &lt;/div&gt;&#xA;&#xA;            &lt;div className = &quot;rightSide&quot;&gt;&#xA;                Cart &amp; Currency Change&#xA;            &lt;/div&gt;&#xA;&#xA;        &lt;/div&gt;&#xA;    );&#xA;}&#xA;&#xA;export default NavBar;&#xA;</code></pre>&#xA;<p>Please let me know how could I solve the bug</p>&#xA;",14868452,,,,2021-10-31 20:59:00,Fetch function is called twice,<javascript><reactjs><graphql>,1,1,0,2021-10-31 20:38:40
69790891,2,,69778672,0,,<p>I had the same problem. Downgrade apollo-server-express to 3.1.2.</p>&#xA;<p>Then everything should work.</p>&#xA;,11855954,,,,2021-10-31 21:53:32,"",,0,0,0,2021-10-31 21:53:32
69790938,2,,69788881,0,,<p>Downgrading to apollo-server-express v3.1.2 solved this issue.</p>&#xA;,11855954,,,,2021-10-31 22:04:06,"",,0,0,0,2021-10-31 22:04:06
69800811,2,,69740750,0,,"<p>Note this was fixed in <a href=""https://github.com/graphql/graphql-js/releases/tag/v15.7.1"" rel=""nofollow noreferrer"">graphql.js 15.7.1</a>:</p>&#xA;<p><a href=""https://github.com/graphql/graphql-js/pull/3341"" rel=""nofollow noreferrer"">https://github.com/graphql/graphql-js/pull/3341</a></p>&#xA;",3339558,,,,2021-11-01 17:53:40,"",,0,0,0,2021-11-01 17:53:40
69805671,2,,69010941,0,,"<p><code>cartCreate</code> mutation is not available in Shopify API version <strong>2020-10</strong>, it only available in the Shopify API version <strong>2021-10</strong> and above. So, use the latest version this and error will solve.</p>&#xA;<p>So change your URL from:</p>&#xA;<pre><code>https://jamiegalbreath.myshopify.com/api/2020-10/graphql.json&#xA;</code></pre>&#xA;<p>To</p>&#xA;<pre><code>https://jamiegalbreath.myshopify.com/api/2021-10/graphql.json&#xA;</code></pre>&#xA;",8182248,,,,2021-11-02 05:15:29,"",,0,0,0,2021-11-02 05:15:29
69832859,1,,,0,46,"<p>I running some scripts using protractor on the docker host and in my console I am getting the following error. in my script I have not used any graphQL or fetch but not sure why this error is thrown in console. The scripts are still fine and getting through, but all I concern is about that error or warning. Please let me know if you need to look in to my code for config file or anything else. so I can paste here</p>&#xA;<blockquote>&#xA;<p>[1103/185005.288:INFO:CONSOLE(0)] &quot;Access to fetch at&#xA;'https://graphql-gateway-dev-raven.ocp-nonprod.xxx.xxx.xxx/graphql'&#xA;from origin&#xA;'https://peregrine-webapp-dev-raven.ocp-nonprod.xxx.xxx.xxx' has been&#xA;blocked by CORS policy: No 'Access-Control-Allow-Origin' header is&#xA;present on the requested resource. If an opaque response serves your&#xA;needs, set the request's mode to 'no-cors' to fetch the resource with&#xA;CORS disabled.&quot;, source:&#xA;<a href=""https://peregrine-webapp-dev-raven.ocp-nonprod.xxx.xxx.xxx/mailboxes"" rel=""nofollow noreferrer"">https://peregrine-webapp-dev-raven.ocp-nonprod.xxx.xxx.xxx/mailboxes</a>&#xA;(0)</p>&#xA;</blockquote>&#xA;<blockquote>&#xA;<p>[1103/185005.292:INFO:CONSOLE(2)] &quot;[Network error]: TypeError:&#xA;Failed to fetch&quot;, source:&#xA;<a href=""https://peregrine-webapp-dev-raven.ocp-nonprod.xxx.xxx.xxx/static/js/2.3f6abf4a.chunk.js"" rel=""nofollow noreferrer"">https://peregrine-webapp-dev-raven.ocp-nonprod.xxx.xxx.xxx/static/js/2.3f6abf4a.chunk.js</a>&#xA;(2)</p>&#xA;</blockquote>&#xA;",2262176,,,,2021-11-03 23:24:18,Getting Access to fetch at 'https://graphql error in console when running the protractor script,<javascript><docker><graphql><protractor>,0,2,0,2021-11-03 23:24:18
69866315,2,,69865697,0,,<p>My issue got solved after I restarted redis server</p>&#xA;,9132293,,,,2021-11-06 17:29:28,"",,0,1,0,2021-11-06 17:29:28
69900002,2,,69209354,0,,<p>you just have to update to latest version.</p>&#xA;<pre><code>pip install --upgrade django-graphql-auth&#xA;</code></pre>&#xA;,12060379,,,,2021-11-09 14:34:16,"",,0,1,0,2021-11-09 14:34:16
69946898,1,,,0,445,<p>I have this issue only in graphql. I need to POST base64 html but I didn't find any configuration for graphql to override the 1mb limitation.&#xA;I already setup the middleware.js and choose upper value but it works only for REST API</p>&#xA;,11071209,,,,2022-12-01 08:32:03,Strapi GraphQL 413 Payload too large request error,<graphql><apollo-server><strapi><koa><body-parser>,2,0,0,2021-11-12 17:32:58
69947897,2,,67527452,4,,"<p>I just ran into this same issue, and it ended up being a peer dependency issue—specifically for the <code>graphql</code> package. Installing version 15.x solved the issue for me.</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>npm install graphql@^15.0.0&#xA;</code></pre>&#xA;",6047877,,,,2021-11-12 19:04:03,"",,0,0,0,2021-11-12 19:04:03
69957128,1,,,5,1727,"<pre><code>Error: Looks like you use an incorrect version of the 'graphql' package: &quot;16.0.1&quot;. Please ensure that you have installed a &#xA;version that meets TypeGraphQL's requirement: &quot;^15.3.0&quot;.&#xA;</code></pre>&#xA;<p>Why? 16 &gt; 15? I was just following a tutorial from 2 years ago. I think, I am gonna downgrade to older versions.</p>&#xA;<p>package.json</p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;server&quot;,&#xA;  &quot;version&quot;: &quot;0.0.1&quot;,&#xA;  &quot;description&quot;: &quot;Awesome project developed with TypeORM.&quot;,&#xA;  &quot;devDependencies&quot;: {&#xA;    &quot;@types/express&quot;: &quot;^4.17.13&quot;,&#xA;    &quot;@types/graphql&quot;: &quot;^14.5.0&quot;,&#xA;    &quot;@types/node&quot;: &quot;^16.11.7&quot;,&#xA;    &quot;ts-node&quot;: &quot;10.4.0&quot;,&#xA;    &quot;typescript&quot;: &quot;4.4.4&quot;,&#xA;    &quot;ts-node-dev&quot;: &quot;1.1.8&quot;&#xA;  },&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;apollo-server-express&quot;: &quot;^3.5.0&quot;,&#xA;    &quot;express&quot;: &quot;^4.17.1&quot;,&#xA;    &quot;graphql&quot;: &quot;16.0.1&quot;,&#xA;    &quot;pg&quot;: &quot;^8.4.0&quot;,&#xA;    &quot;reflect-metadata&quot;: &quot;^0.1.10&quot;,&#xA;    &quot;type-graphql&quot;: &quot;1.1.1&quot;,&#xA;    &quot;typeorm&quot;: &quot;0.2.40&quot;&#xA;  },&#xA;  &quot;scripts&quot;: {&#xA;    &quot;start&quot;: &quot;ts-node-dev --respawn src/index.ts&quot;,&#xA;    &quot;typeorm&quot;: &quot;node --require ts-node/register ./node_modules/typeorm/cli.js&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",15502607,,,,2021-12-29 16:16:04,Incompatible versions of GraphQL and TypegraphQL,<graphql><typegraphql>,1,0,0,2021-11-13 18:30:41
69958496,2,,68410686,1,,"<p><strong>Update</strong></p>&#xA;<p>I was able to solve my problem. I had added the helmet middleware to Express and just needed to update the <code>contentSecurityPolicy</code> setting.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export default async (app: express.Application) =&gt; {&#xA;  app.use(config.graphqlPath, express.json());&#xA;  app.use(cors());&#xA;  app.use(&#xA;    helmet({&#xA;      contentSecurityPolicy:&#xA;        process.env.NODE_ENV === 'production' ? undefined : false&#xA;    })&#xA;  );&#xA;};&#xA;</code></pre>&#xA;<p>Not sure if that helps since there were not a lot of details on the environment in the original post, but maybe this can help someone else in the future.</p>&#xA;<p><strong>Original Post</strong></p>&#xA;<p>I'm having the same issue only with Apollo Sandbox. I just get a page stating that I appear to be offline. I checked the console and there are a number of CORS errors.</p>&#xA;<p>I also attempted to switch to the GraphQL Playground as a plugin. It displayed the initial loading screen, but never progressed past that point. I checked the console and also saw similar CORS errors.</p>&#xA;<p>I'm using apollo-server-express. I've created Apollo servers in the past and have never run into this while trying to run tools locally.</p>&#xA;",10150406,,10150406,2021-11-13 22:28:38,2021-11-13 22:28:38,"",,0,0,0,2021-11-13 21:43:19
69960465,2,,69960377,0,,"<p>Try this</p>&#xA;<pre><code>const MODE = &quot;mode&quot;;&#xA;&#xA;const [mode, setMode] = useState(() =&gt; {&#xA;&#xA;    // for the sake of solving this issues&#xA;   // (&quot;ReferenceError: localStorage is not defined&quot;)&#xA;    if (typeof window !== 'undefined') {&#xA;        localStorage.getItem(MODE) || 'dark'&#xA;    }&#xA;});&#xA;&#xA;const colorMode = useMemo(&#xA;    () =&gt; ({&#xA;        toggleColorMode: () =&gt; {&#xA;            setMode(prevMode =&gt; {&#xA;                const nextMode = prevMode === &quot;light&quot; ? &quot;dark&quot; : &quot;light&quot;;&#xA;                localStorage.setItem(MODE, nextMode);&#xA;                return nextMode;&#xA;            });&#xA;        }&#xA;    }),&#xA;    []&#xA;);&#xA;</code></pre>&#xA;",8510405,,8687567,2021-11-14 12:38:45,2021-11-14 12:38:45,"",,0,2,0,2021-11-14 05:17:23
69980066,1,,,0,30,"<p>I'm developing an app using GraphQL in the backend and I want to implement a face comparison method. I am using the <a href=""https://www.npmjs.com/package/facepp-rest-api"" rel=""nofollow noreferrer"">facepp npm package</a>, which gives me an API to perform the comparison. The problem I am having is that when my resolver runs, it finishes before it gets a response from facepp. How can I make it return the response from facepp?</p>&#xA;<pre><code>    module.exports = {&#xA;      Mutation: {&#xA;         checkFace: async () =&gt; {&#xA;           console.log(&quot;Checking.....&quot;);&#xA;&#xA;        let confidence;&#xA;&#xA;        var parameters = {&#xA;          image_url1: &quot;link to image 1&quot;,&#xA;&#xA;          image_url2: &quot;link to image 2&quot;,&#xA;        };&#xA;&#xA;        facepp.post(&quot;/compare&quot;, parameters, function (err, res) {&#xA;            if (!err) {&#xA;                confidence = res.confidence;&#xA;              //return res.confidence doesn't work&#xA;            } else {&#xA;                confidence = &quot;There was an error&quot;&#xA;            }&#xA;        });&#xA;&#xA;        return confidence&#xA;    },&#xA;},&#xA;</code></pre>&#xA;<p>};</p>&#xA;",15873377,,546967,2021-11-18 15:00:28,2021-11-18 15:02:30,How to return the response of a post request in qraphql,<javascript><node.js><graphql>,1,2,0,2021-11-15 19:49:58
69985560,1,,,3,1787,"<p>I'm using Next.js with apollo client. I need to create a seamless workflow between server and client side. In my ssr page, I run a query in getServerSideProps and send the created apollo cache to browser like below;</p>&#xA;<pre><code>export async function getServerSideProps(context: GetServerSidePropsContext) {&#xA;  const apolloClient = initializeApollo();&#xA;&#xA;  await apolloClient.query({&#xA;    query: CitiesQuery,&#xA;    variables: {&#xA;      name: cityParamVar(),&#xA;    },&#xA;  });&#xA;&#xA;  return {&#xA;    props: {&#xA;      initialApolloState: apolloClient.cache.extract(),&#xA;    },&#xA;  };&#xA;}&#xA;</code></pre>&#xA;<p>On the client side, I have my apollo cache already filled with query data, wonderful!.&#xA;Then, I run a second query on client side, so apollo cache will have my second query results as well.&#xA;Then, I navigate to Home page and then come back to my page again. Of course getServerSideProps  will run again. Here, in getServerSideProps  function, is it possible to obtain the same apollo cached filled with my second query results, that was run on client side?</p>&#xA;<p>Can we create a totally seamless workflow between client &amp; server?</p>&#xA;<p>I saw samples just run <strong>const apolloClient = initializeApollo()</strong> in getServerSideProps. So, I won't have the updated cache! Am I missing something?</p>&#xA;",450528,,,,2022-02-25 11:55:46,Next.js using apollo client cache in getServerSideProps,<next.js><apollo-client>,1,0,0,2021-11-16 07:58:04
69991934,2,,65704023,2,,"<p>I faced a similar issue, this was apparently because <code>PyJWT==2.3.0</code> was not compatible with <code>django-graphql-jwt</code> as Dipanshu mentioned in his answer, It worked after downgrading <code>PyJWT==2.3.0</code> to <code>PyJWT==1.7.0</code>.</p>&#xA;<p>Check if the PyJWT package's version in your virtual environment is greater than 2.0.0 using the below pip command</p>&#xA;<pre><code>pip show PyJWT&#xA;</code></pre>&#xA;<p>If it is greater than 2.0.0, use the below pip command to downgrade the package in your virtual environment</p>&#xA;<pre><code>pip install --upgrade PyJWT==1.7.0&#xA;</code></pre>&#xA;",10794757,,10794757,2021-11-16 15:36:30,2021-11-16 15:36:30,"",,0,0,0,2021-11-16 15:31:27
70004272,2,,69984985,0,,<p>needed to update version of &quot;react-testing-library&quot;</p>&#xA;,12972217,,,,2021-11-17 12:17:20,"",,0,0,0,2021-11-17 12:17:20
70007456,1,,,0,19,"<p>How do I pass the <code>applicationId</code> from the root of this query to the <code>timeSlicedEvents</code> method?</p>&#xA;<p>I can't seem to find any GraphQL terminology for this, but I'm probably searching for the wrong terms. I'm assuming there is a directive of some sort?</p>&#xA;<pre><code>  allApplications(onlyMonitored: false) {&#xA;    applicationId&#xA;    name&#xA;    timeSlicedEvents(duration: 1800, slices: 80, applicationId: ??) {&#xA;      sliceId&#xA;      warningCount&#xA;      failureCount&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;",550073,,,,2021-11-17 16:10:13,How to pass current iteration variable to method?,<graphql>,1,0,0,2021-11-17 15:43:53
70007553,1,70025970,,1,1392,"<p>I'm working on a React Native, AWS, DynamoDB, Amplify project, and I'm struggleing to add extra tables (models) to the database.</p>&#xA;<p>The original schema was quite simple. (maybe too simple to be effective)</p>&#xA;<pre><code>type Capture @model {&#xA;    id: ID!&#xA;    captureID: String!&#xA;    userID: String!&#xA;    moodScore: String&#xA;    emotion: String&#xA;    lifeAspect: String&#xA;    activity: String&#xA;    companions: String&#xA;    location: String&#xA;    date: String&#xA;    images: String&#xA;    journalEntry: String&#xA;}&#xA;</code></pre>&#xA;<p>Users keep capturing moments of their life. Everything is stored as a String (for some reason...).</p>&#xA;<p>I'm trying to add more tables to the app. The new tables are not really connected to the current table. The only thing connecting the data us the UserID, that we got from &quot;amplify/auth&quot; when the user is logged in.</p>&#xA;<p>I added a 2nd model to the schema.graphql:</p>&#xA;<pre><code>type Capture @model {&#xA;    id: ID!&#xA;    captureID: String!&#xA;    userID: String!&#xA;    moodScore: String&#xA;    emotion: String&#xA;    lifeAspect: String&#xA;    activity: String&#xA;    companions: String&#xA;    location: String&#xA;    date: String&#xA;    images: String&#xA;    journalEntry: String&#xA;}&#xA;&#xA;type DbConversion @model {&#xA;    id: ID!&#xA;    userID: String!&#xA;    ConversionID: [String!]&#xA;}&#xA;</code></pre>&#xA;<p>I don't want the tables to be connected in DynameDB. I want to use DataStore to only load the current user's data when the user is logged in.</p>&#xA;<pre><code>let uuID = '';&#xA;// Configure datastore to sync based on user identifier.&#xA;DataStore.configure({&#xA;    syncExpressions: [&#xA;        syncExpression(Capture, () =&gt; {&#xA;            return (capture) =&gt; capture.userID('eq', uuID);&#xA;        }),&#xA;        syncExpression(DbConversion, () =&gt; {&#xA;            return (dbconversion) =&gt; dbconversion.userID('eq', uuID);&#xA;        }),&#xA;    ],&#xA;});&#xA;&#xA;// Retrieve user ID and reset datastore sync with new data for uuID.&#xA;export async function changeSync() {&#xA;    uuID = await getData('userID');&#xA;    await DataStore.stop();&#xA;    await DataStore.start();&#xA;}&#xA;</code></pre>&#xA;<p>Everything was working fine until I tried adding the 2nd table. After that, I started getting huge warning messages:</p>&#xA;<pre><code>[WARN] 37:23.730 DataStore - subscriptionError, Connection failed: {&quot;errors&quot;:[{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_version' in type 'Capture' is undefined @ 'onCreateCapture/_version'&quot;},{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_lastChangedAt' in type 'Capture' is undefined @ 'onCreateCapture/_lastChangedAt'&quot;},{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_deleted' in type 'Capture' is undefined @ 'onCreateCapture/_deleted'&quot;}]}&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:117:10 in registerWarning&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:63:8 in warnImpl&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:36:4 in console.warn&#xA;at node_modules\expo\build\environment\react-native-logs.fx.js:18:4 in warn&#xA;at node_modules\@aws-amplify\core\lib-esm\Logger\ConsoleLogger.js:138:12 in prototype._log&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:146334:21 in warn&#xA;at node_modules\@aws-amplify\datastore\lib-esm\sync\processors\subscription.js:357:87 in queryObservable.map.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\zen-observable\lib\Observable.js:329:17 in _this2.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\@aws-amplify\pubsub\lib-esm\PubSub.js:180:37 in observable.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\@aws-amplify\pubsub\lib-esm\Providers\AWSAppSyncRealTimeProvider.js:507:12 in prototype._handleIncomingSubscriptionMessage&#xA;at node_modules\event-target-shim\dist\event-target-shim.js:818:20 in EventTarget.prototype.dispatchEvent&#xA;at node_modules\react-native\Libraries\WebSocket\WebSocket.js:231:8 in _eventEmitter.addListener$argument_1&#xA;at node_modules\react-native\Libraries\vendor\emitter\EventEmitter.js:189:10 in emit&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:416:4 in __callFunction&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:109:6 in __guard$argument_0&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:364:10 in __guard&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:108:4 in callFunctionReturnFlushedQueue&#xA;&#xA;[WARN] 37:23.830 DataStore - subscriptionError, Connection failed: {&quot;errors&quot;:[{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_version' in type 'Capture' is undefined @ 'onUpdateCapture/_version'&quot;},{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_lastChangedAt' in type 'Capture' is undefined @ 'onUpdateCapture/_lastChangedAt'&quot;},{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_deleted' in type 'Capture' is undefined @ 'onUpdateCapture/_deleted'&quot;}]}&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:117:10 in registerWarning&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:63:8 in warnImpl&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:36:4 in console.warn&#xA;at node_modules\expo\build\environment\react-native-logs.fx.js:18:4 in warn&#xA;at node_modules\@aws-amplify\core\lib-esm\Logger\ConsoleLogger.js:138:12 in prototype._log&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:146334:21 in warn&#xA;at node_modules\@aws-amplify\datastore\lib-esm\sync\processors\subscription.js:357:87 in queryObservable.map.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\zen-observable\lib\Observable.js:329:17 in _this2.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\@aws-amplify\pubsub\lib-esm\PubSub.js:180:37 in observable.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\@aws-amplify\pubsub\lib-esm\Providers\AWSAppSyncRealTimeProvider.js:507:12 in prototype._handleIncomingSubscriptionMessage&#xA;at node_modules\event-target-shim\dist\event-target-shim.js:818:20 in EventTarget.prototype.dispatchEvent&#xA;at node_modules\react-native\Libraries\WebSocket\WebSocket.js:231:8 in _eventEmitter.addListener$argument_1&#xA;at node_modules\react-native\Libraries\vendor\emitter\EventEmitter.js:189:10 in emit&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:416:4 in __callFunction&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:109:6 in __guard$argument_0&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:364:10 in __guard&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:108:4 in callFunctionReturnFlushedQueue&#xA;&#xA;[WARN] 37:23.896 DataStore - subscriptionError, Connection failed: {&quot;errors&quot;:[{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_version' in type 'DbConversion' is undefined @ 'onCreateDbConversion/_version'&quot;},{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_lastChangedAt' in type 'DbConversion' is undefined @ 'onCreateDbConversion/_lastChangedAt'&quot;},{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_deleted' in type 'DbConversion' is undefined @ 'onCreateDbConversion/_deleted'&quot;}]}&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:117:10 in registerWarning&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:63:8 in warnImpl&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:36:4 in console.warn&#xA;at node_modules\expo\build\environment\react-native-logs.fx.js:18:4 in warn&#xA;at node_modules\@aws-amplify\core\lib-esm\Logger\ConsoleLogger.js:138:12 in prototype._log&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:146334:21 in warn&#xA;at node_modules\@aws-amplify\datastore\lib-esm\sync\processors\subscription.js:357:87 in queryObservable.map.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\zen-observable\lib\Observable.js:329:17 in _this2.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\@aws-amplify\pubsub\lib-esm\PubSub.js:180:37 in observable.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\@aws-amplify\pubsub\lib-esm\Providers\AWSAppSyncRealTimeProvider.js:507:12 in prototype._handleIncomingSubscriptionMessage&#xA;at node_modules\event-target-shim\dist\event-target-shim.js:818:20 in EventTarget.prototype.dispatchEvent&#xA;at node_modules\react-native\Libraries\WebSocket\WebSocket.js:231:8 in _eventEmitter.addListener$argument_1&#xA;at node_modules\react-native\Libraries\vendor\emitter\EventEmitter.js:189:10 in emit&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:416:4 in __callFunction&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:109:6 in __guard$argument_0&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:364:10 in __guard&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:108:4 in callFunctionReturnFlushedQueue&#xA;&#xA;[WARN] 37:23.967 DataStore - subscriptionError, Connection failed: {&quot;errors&quot;:[{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_version' in type 'Capture' is undefined @ 'onDeleteCapture/_version'&quot;},{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_lastChangedAt' in type 'Capture' is undefined @ 'onDeleteCapture/_lastChangedAt'&quot;},{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_deleted' in type 'Capture' is undefined @ 'onDeleteCapture/_deleted'&quot;}]}&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:117:10 in registerWarning&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:63:8 in warnImpl&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:36:4 in console.warn&#xA;at node_modules\expo\build\environment\react-native-logs.fx.js:18:4 in warn&#xA;at node_modules\@aws-amplify\core\lib-esm\Logger\ConsoleLogger.js:138:12 in prototype._log&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:146334:21 in warn&#xA;at node_modules\@aws-amplify\datastore\lib-esm\sync\processors\subscription.js:357:87 in queryObservable.map.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\zen-observable\lib\Observable.js:329:17 in _this2.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\@aws-amplify\pubsub\lib-esm\PubSub.js:180:37 in observable.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\@aws-amplify\pubsub\lib-esm\Providers\AWSAppSyncRealTimeProvider.js:507:12 in prototype._handleIncomingSubscriptionMessage&#xA;at node_modules\event-target-shim\dist\event-target-shim.js:818:20 in EventTarget.prototype.dispatchEvent&#xA;at node_modules\react-native\Libraries\WebSocket\WebSocket.js:231:8 in _eventEmitter.addListener$argument_1&#xA;at node_modules\react-native\Libraries\vendor\emitter\EventEmitter.js:189:10 in emit&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:416:4 in __callFunction&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:109:6 in __guard$argument_0&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:364:10 in __guard&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:108:4 in callFunctionReturnFlushedQueue&#xA;&#xA;[WARN] 37:24.77 DataStore - subscriptionError, Connection failed: {&quot;errors&quot;:[{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_version' in type 'DbConversion' is undefined @ 'onDeleteDbConversion/_version'&quot;},{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_lastChangedAt' in type 'DbConversion' is undefined @ 'onDeleteDbConversion/_lastChangedAt'&quot;},{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_deleted' in type 'DbConversion' is undefined @ 'onDeleteDbConversion/_deleted'&quot;}]}&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:117:10 in registerWarning&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:63:8 in warnImpl&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:36:4 in console.warn&#xA;at node_modules\expo\build\environment\react-native-logs.fx.js:18:4 in warn&#xA;at node_modules\@aws-amplify\core\lib-esm\Logger\ConsoleLogger.js:138:12 in prototype._log&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:146334:21 in warn&#xA;at node_modules\@aws-amplify\datastore\lib-esm\sync\processors\subscription.js:357:87 in queryObservable.map.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\zen-observable\lib\Observable.js:329:17 in _this2.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\@aws-amplify\pubsub\lib-esm\PubSub.js:180:37 in observable.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\@aws-amplify\pubsub\lib-esm\Providers\AWSAppSyncRealTimeProvider.js:507:12 in prototype._handleIncomingSubscriptionMessage&#xA;at node_modules\event-target-shim\dist\event-target-shim.js:818:20 in EventTarget.prototype.dispatchEvent&#xA;at node_modules\react-native\Libraries\WebSocket\WebSocket.js:231:8 in _eventEmitter.addListener$argument_1&#xA;at node_modules\react-native\Libraries\vendor\emitter\EventEmitter.js:189:10 in emit&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:416:4 in __callFunction&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:109:6 in __guard$argument_0&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:364:10 in __guard&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:108:4 in callFunctionReturnFlushedQueue&#xA;&#xA;[WARN] 37:24.155 DataStore - subscriptionError, Connection failed: {&quot;errors&quot;:[{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_version' in type 'DbConversion' is undefined @ 'onUpdateDbConversion/_version'&quot;},{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_lastChangedAt' in type 'DbConversion' is undefined @ 'onUpdateDbConversion/_lastChangedAt'&quot;},{&quot;message&quot;:&quot;Validation error of type FieldUndefined: Field '_deleted' in type 'DbConversion' is undefined @ 'onUpdateDbConversion/_deleted'&quot;}]}&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:117:10 in registerWarning&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:63:8 in warnImpl&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:36:4 in console.warn&#xA;at node_modules\expo\build\environment\react-native-logs.fx.js:18:4 in warn&#xA;at node_modules\@aws-amplify\core\lib-esm\Logger\ConsoleLogger.js:138:12 in prototype._log&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:146334:21 in warn&#xA;at node_modules\@aws-amplify\datastore\lib-esm\sync\processors\subscription.js:357:87 in queryObservable.map.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\zen-observable\lib\Observable.js:329:17 in _this2.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\@aws-amplify\pubsub\lib-esm\PubSub.js:180:37 in observable.subscribe$argument_0.error&#xA;at node_modules\zen-observable\lib\Observable.js:139:8 in notifySubscription&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:150453:22 in onNotify&#xA;at node_modules\zen-observable\lib\Observable.js:239:11 in error&#xA;at node_modules\@aws-amplify\pubsub\lib-esm\Providers\AWSAppSyncRealTimeProvider.js:507:12 in prototype._handleIncomingSubscriptionMessage&#xA;at node_modules\event-target-shim\dist\event-target-shim.js:818:20 in EventTarget.prototype.dispatchEvent&#xA;at node_modules\react-native\Libraries\WebSocket\WebSocket.js:231:8 in _eventEmitter.addListener$argument_1&#xA;at node_modules\react-native\Libraries\vendor\emitter\EventEmitter.js:189:10 in emit&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:416:4 in __callFunction&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:109:6 in __guard$argument_0&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:364:10 in __guard&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:108:4 in callFunctionReturnFlushedQueue&#xA;&#xA;Setting a timer for a long period of time, i.e. multiple minutes, is a performance and correctness issue on Android as it keeps the timer module awake, and timers can only be called when the app is in the foreground. See https://github.com/facebook/react-native/issues/12981 for more info.&#xA;(Saw setTimeout with duration 102478.61620927726ms)&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:117:10 in registerWarning&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:63:8 in warnImpl&#xA;at node_modules\react-native\Libraries\LogBox\LogBox.js:36:4 in console.warn&#xA;at node_modules\expo\build\environment\react-native-logs.fx.js:18:4 in warn&#xA;at node_modules\react-native\Libraries\Core\Timers\JSTimers.js:226:6 in setTimeout&#xA;at node_modules\@aws-amplify\core\lib-esm\Util\Retry.js:116:45 in __generator$argument_1&#xA;at node_modules\react-native\node_modules\promise\setimmediate\core.js:45:6 in tryCallTwo&#xA;at node_modules\react-native\node_modules\promise\setimmediate\core.js:200:22 in doResolve&#xA;at node_modules\react-native\node_modules\promise\setimmediate\core.js:66:11 in Promise&#xA;at node_modules\@aws-amplify\core\lib-esm\Util\Retry.js:115:40 in __generator$argument_1&#xA;at http://192.168.0.105:19000/node_modules%5Cexpo%5CAppEntry.bundle?platform=android&amp;dev=true&amp;hot=false&amp;minify=false:147977:26 in step&#xA;at node_modules\tslib\tslib.js:122:34 in &lt;anonymous&gt;&#xA;at node_modules\tslib\tslib.js:113:43 in rejected&#xA;at node_modules\react-native\node_modules\promise\setimmediate\core.js:37:13 in tryCallOne&#xA;at node_modules\react-native\node_modules\promise\setimmediate\core.js:123:24 in setImmediate$argument_0&#xA;at node_modules\react-native\Libraries\Core\Timers\JSTimers.js:130:14 in _callTimer&#xA;at node_modules\react-native\Libraries\Core\Timers\JSTimers.js:181:14 in _callImmediatesPass&#xA;at node_modules\react-native\Libraries\Core\Timers\JSTimers.js:441:30 in callImmediates&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:387:6 in __callImmediates&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:135:6 in __guard$argument_0&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:364:10 in __guard&#xA;at node_modules\react-native\Libraries\BatchedBridge\MessageQueue.js:134:4 in flushedQueue&#xA;</code></pre>&#xA;",7726827,,7726827,2021-11-18 19:52:01,2021-11-18 19:57:54,"DataStore - subscriptionError, Connection failed:",<amazon-web-services><graphql><aws-amplify>,1,0,0,2021-11-17 15:50:49
70007862,2,,70007456,0,,"<p>Figured it out. You declare a parameter at the root of your query. Very unintuitive since I have no intention of passing that myself. I assume the server implementation of the GraphQL spec is somehow doing the magic of iterating over the rows from <code>allApplications</code> and then calling the <code>timeSlicedEvents</code> using the current iteration's value.</p>&#xA;<pre><code>query allTheThings($applicationId: Int) {&#xA;  allApplications {&#xA;    applicationId&#xA;    name&#xA;    timeSlicedEvents(duration: 2300, slices: 80, applicationId: $applicationId) {&#xA;      sliceId&#xA;      warningCount&#xA;      failureCount&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",550073,,,,2021-11-17 16:10:13,"",,0,1,0,2021-11-17 16:10:13
70018975,2,,70000829,1,,<p>It problem happens to be coming from the version of graphql. I downgraded it to graphql 15.0.0 everything works fine.</p>&#xA;,2281066,,,,2021-11-18 11:21:40,"",,0,0,0,2021-11-18 11:21:40
70022904,1,,,1,147,"<p>When using ApolloClient in our React NAtive app, we get a memory leak that crashes teh app within 30 seconds of the app making the first apollo request.</p>&#xA;<p>Overall teh code we use is teh following:</p>&#xA;<pre><code>const logErrorLink = onError(({ graphQLErrors, networkError, operation }) =&gt; {&#xA;  reportError(&#xA;    new Error(`Error Apollo ${operation.operationName}`),&#xA;    (report) =&gt; {&#xA;      const _params = {&#xA;        data: {&#xA;          operationName: operation.operationName,&#xA;          extensions: operation.extensions,&#xA;          query: operation.query,&#xA;          variables: operation.variables,&#xA;          conext: operation.getContext(),&#xA;          graphQLErrors,&#xA;          networkError,&#xA;        } as any,&#xA;      };&#xA;      report.addMetadata('report', _params);&#xA;    }&#xA;  );&#xA;&#xA;});&#xA;&#xA;const withToken = setContext(async () =&gt; {&#xA;  const user = auth().currentUser;&#xA;  let token = '';&#xA;  try {&#xA;    if (user) {&#xA;      token = await user.getIdToken();&#xA;    }&#xA;  } catch (error) {&#xA;    consoleDebug('error la', error);&#xA;  }&#xA;  return { token, uid: user?.uid || '' };&#xA;});&#xA;&#xA;const authMiddleware = new ApolloLink((operation, forward) =&gt; {&#xA;  const { token, uid } = operation.getContext();&#xA;  operation.setContext(() =&gt; ({&#xA;    headers: {&#xA;      ...createRequestParams(uid, 'apollo', operation.operationName),&#xA;      Authorization: token ? `Bearer ${token as string}` : '',&#xA;    },&#xA;  }));&#xA;  return forward(operation);&#xA;});&#xA;&#xA;const retryLink = new RetryLink({&#xA;  delay: (retryNumber) =&gt; {&#xA;    const delay = Math.pow(2, retryNumber) * 300;&#xA;    const randomSum = delay * 0.2 * Math.random(); // 0-20% of the delay&#xA;    return delay + randomSum;&#xA;  },&#xA;  attempts: {&#xA;    max: 4,&#xA;    retryIf: async (error, operation) =&gt; {&#xA;      if (error.statusCode === 401) {&#xA;        const user = auth().currentUser;&#xA;        const { uid } = operation.getContext();&#xA;        let token = '';&#xA;        if (user) {&#xA;          token = await user.getIdToken(true);&#xA;          bugsnag.leaveBreadcrumb('new refreshToken apollo');&#xA;        }&#xA;        if (token) {&#xA;          operation.setContext({&#xA;            headers: {&#xA;              ...createRequestParams(uid, 'apollo', operation.operationName),&#xA;              Authorization: `Bearer ${token}`,&#xA;            },&#xA;          });&#xA;          return true;&#xA;        }&#xA;      }&#xA;      return true;&#xA;    },&#xA;  },&#xA;});&#xA;const link = ApolloLink.from([&#xA;  retryLink,&#xA;  logErrorLink,&#xA;  withToken,&#xA;  authMiddleware.concat(persistedQueriesLink.concat(httpLink)),&#xA;]);&#xA;const linkPayment = ApolloLink.from([&#xA;  retryLink,&#xA;  logErrorLink,&#xA;  withToken,&#xA;  authMiddleware.concat(persistedQueriesLink.concat(httpLinkPayment)),&#xA;]);&#xA;&#xA;const client = new ApolloClient({&#xA;  cache: new InMemoryCache(),&#xA;  name: `mobile-${Platform.OS}`,&#xA;  version: DeviceInfo.getReadableVersion(),&#xA;  // link: concat(authMiddleware, httpLink)&#xA;  link,&#xA;});&#xA;&#xA;async processUser(data: any) {&#xA;    try {&#xA;      await client.mutate({&#xA;        mutation: updateUserMutation,&#xA;        variables: {&#xA;          data,&#xA;        },&#xA;      });&#xA;    } catch (e) {&#xA;      console.log('NEw apollo user', e);&#xA;    }&#xA;  }&#xA;&#xA;</code></pre>&#xA;<p>as soon as <code>processUser</code> is called the memory usage for up. (note that this also happens with a query, not just mutations)</p>&#xA;<p>The native stack for where teh memory leak is happening is:</p>&#xA;<pre><code>0 libc++abi.dylib operator new(unsigned long)&#xA;   1 Choose void* std::__1::__libcpp_operator_new&lt;unsigned long&gt;(unsigned long) /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/new:235&#xA;   2 Choose std::__1::__libcpp_allocate(unsigned long, unsigned long) /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/new:261&#xA;   3 Choose std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, void*&gt; &gt;::allocate(unsigned long) /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/memory:870&#xA;   4 Choose std::__1::allocator_traits&lt;std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, void*&gt; &gt; &gt;::allocate(std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, void*&gt; &gt;&amp;, unsigned long) /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/__memory/allocator_traits.h:260&#xA;   5 Choose std::__1::unique_ptr&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, void*&gt;, std::__1::__hash_node_destructor&lt;std::__1::allocator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, void*&gt; &gt; &gt; &gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, std::__1::__unordered_map_hasher&lt;folly::dynamic, std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, folly::detail::DynamicHasher, folly::detail::DynamicKeyEqual, true&gt;, std::__1::__unordered_map_equal&lt;folly::dynamic, std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, folly::detail::DynamicKeyEqual, folly::detail::DynamicHasher, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt; &gt; &gt;::__construct_node&lt;std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;&amp;&amp;, std::__1::tuple&lt;&gt;&amp;&amp;) /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/__hash_table:2455&#xA;   6 Choose std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, std::__1::__unordered_map_hasher&lt;folly::dynamic, std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, folly::detail::DynamicHasher, folly::detail::DynamicKeyEqual, true&gt;, std::__1::__unordered_map_equal&lt;folly::dynamic, std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, folly::detail::DynamicKeyEqual, folly::detail::DynamicHasher, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt; &gt; &gt;::__emplace_unique_impl&lt;std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;&amp;&amp;, std::__1::tuple&lt;&gt;&amp;&amp;) /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/__hash_table:2137&#xA;   7 Choose std::__1::pair&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, void*&gt;*&gt;, bool&gt; std::__1::__hash_table&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, std::__1::__unordered_map_hasher&lt;folly::dynamic, std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, folly::detail::DynamicHasher, folly::detail::DynamicKeyEqual, true&gt;, std::__1::__unordered_map_equal&lt;folly::dynamic, std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, folly::detail::DynamicKeyEqual, folly::detail::DynamicHasher, true&gt;, std::__1::allocator&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt; &gt; &gt;::__emplace_unique&lt;std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;&amp;&amp;, std::__1::tuple&lt;&gt;&amp;&amp;) /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/__hash_table:1096&#xA;   8 Choose std::__1::pair&lt;std::__1::__hash_map_iterator&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, void*&gt;*&gt; &gt;, bool&gt; std::__1::unordered_map&lt;folly::dynamic, folly::dynamic, folly::detail::DynamicHasher, folly::detail::DynamicKeyEqual, std::__1::allocator&lt;std::__1::pair&lt;folly::dynamic const, folly::dynamic&gt; &gt; &gt;::emplace&lt;std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;&amp;&amp;, std::__1::tuple&lt;&gt;&amp;&amp;) /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/unordered_map:1158&#xA;   9 Choose auto std::__1::pair&lt;std::__1::__hash_map_iterator&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, void*&gt;*&gt; &gt;, bool&gt; folly::f14::detail::F14BasicMap&lt;folly::dynamic, folly::dynamic, folly::detail::DynamicHasher, folly::detail::DynamicKeyEqual, std::__1::allocator&lt;std::__1::pair&lt;folly::dynamic const, folly::dynamic&gt; &gt; &gt;::emplace&lt;std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;&amp;&amp;, std::__1::tuple&lt;&gt;&amp;&amp;)::'lambda'(auto&amp;, auto&amp;&amp;...)::operator()&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const, std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(auto&amp;, auto&amp;&amp;...) const /Users/otusweb/Projects/AppChoose/ios/Pods/Headers/Public/RCT-Folly/folly/container/detail/F14MapFallback.h:215&#xA;  10 Choose _ZN5folly6detail22callWithKeyAndPairArgsINS_7dynamicES2_ZNS_3f146detail11F14BasicMapIS2_S2_NS0_13DynamicHasherENS0_15DynamicKeyEqualENSt3__19allocatorINS8_4pairIKS2_S2_EEEEE7emplaceIJRKNS8_21piecewise_construct_tENS8_5tupleIJRNS8_12basic_stringIcNS8_11char_traitsIcEENS9_IcEEEEEEENSJ_IJEEEEEENSA_INS8_19__hash_map_iteratorINS8_15__hash_iteratorIPNS8_11__hash_nodeINS8_17__hash_value_typeIS2_S2_EEPvEEEEEEbEEDpOT_EUlRT_DpOT0_E_SO_JSP_EJEEEDaOT1_RKT2_ONSJ_IJDpT3_EEEONSJ_IJDpT4_EEE /Users/otusweb/Projects/AppChoose/ios/Pods/Headers/Public/RCT-Folly/folly/container/detail/Util.h:125&#xA;  11 Choose _ZN5folly6detail20callWithExtractedKeyINS_7dynamicES2_NS_3f146detail11F14BasicMapIS2_S2_NS0_13DynamicHasherENS0_15DynamicKeyEqualENSt3__19allocatorINS8_4pairIKS2_S2_EEEEE11UsableAsKeyESD_ZNSE_7emplaceIJRKNS8_21piecewise_construct_tENS8_5tupleIJRNS8_12basic_stringIcNS8_11char_traitsIcEENS9_IcEEEEEEENSK_IJEEEEEENSA_INS8_19__hash_map_iteratorINS8_15__hash_iteratorIPNS8_11__hash_nodeINS8_17__hash_value_typeIS2_S2_EEPvEEEEEEbEEDpOT_EUlRT_DpOT0_E_SQ_JELi0EEEDaRT2_OT3_SH_ONSK_IJT4_EEEONSK_IJDpT5_EEE /Users/otusweb/Projects/AppChoose/ios/Pods/Headers/Public/RCT-Folly/folly/container/detail/Util.h:155&#xA;  12 Choose std::__1::pair&lt;std::__1::__hash_map_iterator&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, void*&gt;*&gt; &gt;, bool&gt; folly::f14::detail::F14BasicMap&lt;folly::dynamic, folly::dynamic, folly::detail::DynamicHasher, folly::detail::DynamicKeyEqual, std::__1::allocator&lt;std::__1::pair&lt;folly::dynamic const, folly::dynamic&gt; &gt; &gt;::emplace&lt;std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;, std::__1::tuple&lt;&gt; &gt;(std::__1::piecewise_construct_t const&amp;, std::__1::tuple&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;&amp;&amp;, std::__1::tuple&lt;&gt;&amp;&amp;) /Users/otusweb/Projects/AppChoose/ios/Pods/Headers/Public/RCT-Folly/folly/container/detail/F14MapFallback.h:203&#xA;  13 Choose std::__1::enable_if&lt;folly::detail::EligibleForHeterogeneousInsert&lt;folly::dynamic, folly::detail::DynamicHasher, folly::detail::DynamicKeyEqual, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;::value, std::__1::pair&lt;std::__1::__hash_map_iterator&lt;std::__1::__hash_iterator&lt;std::__1::__hash_node&lt;std::__1::__hash_value_type&lt;folly::dynamic, folly::dynamic&gt;, void*&gt;*&gt; &gt;, bool&gt; &gt;::type folly::f14::detail::F14BasicMap&lt;folly::dynamic, folly::dynamic, folly::detail::DynamicHasher, folly::detail::DynamicKeyEqual, std::__1::allocator&lt;std::__1::pair&lt;folly::dynamic const, folly::dynamic&gt; &gt; &gt;::try_emplace&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;) /Users/otusweb/Projects/AppChoose/ios/Pods/Headers/Public/RCT-Folly/folly/container/detail/F14MapFallback.h:268&#xA;  14 Choose std::__1::enable_if&lt;folly::detail::EligibleForHeterogeneousInsert&lt;folly::dynamic, folly::detail::DynamicHasher, folly::detail::DynamicKeyEqual, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;::value, folly::dynamic&amp;&gt;::type folly::f14::detail::F14BasicMap&lt;folly::dynamic, folly::dynamic, folly::detail::DynamicHasher, folly::detail::DynamicKeyEqual, std::__1::allocator&lt;std::__1::pair&lt;folly::dynamic const, folly::dynamic&gt; &gt; &gt;::operator[]&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;&gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;) /Users/otusweb/Projects/AppChoose/ios/Pods/Headers/Public/RCT-Folly/folly/container/detail/F14MapFallback.h:356&#xA;  15 Choose std::__1::enable_if&lt;!(std::is_convertible&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;, std::__1::__wrap_iter&lt;folly::dynamic*&gt; &gt;::value), void&gt;::type folly::dynamic::insert&lt;std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;, std::nullptr_t&gt;(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt;&amp;, std::nullptr_t&amp;&amp;) /Users/otusweb/Projects/AppChoose/ios/Pods/Headers/Public/RCT-Folly/folly/dynamic-inl.h:834&#xA;  16 Choose facebook::jsi::dynamicFromValue(facebook::jsi::Runtime&amp;, facebook::jsi::Value const&amp;) /Users/otusweb/Projects/AppChoose/node_modules/react-native/ReactCommon/jsi/jsi/JSIDynamic.cpp:187&#xA;  17 Choose facebook::react::JSIExecutor::callNativeModules(facebook::jsi::Value const&amp;, bool) /Users/otusweb/Projects/AppChoose/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSIExecutor.cpp:420&#xA;  18 Choose facebook::react::JSIExecutor::callFunction(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt; &gt; const&amp;, folly::dynamic const&amp;) /Users/otusweb/Projects/AppChoose/node_modules/react-native/ReactCommon/jsiexecutor/jsireact/JSIExecutor.cpp:270&#xA;  19 Choose std::__1::__function::__value_func&lt;void (facebook::react::JSExecutor*)&gt;::operator()(facebook::react::JSExecutor*&amp;&amp;) const /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/functional:1885&#xA;  20 Choose std::__1::function&lt;void (facebook::react::JSExecutor*)&gt;::operator()(facebook::react::JSExecutor*) const /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/functional:2560&#xA;  21 Choose facebook::react::NativeToJsBridge::runOnExecutorQueue(std::__1::function&lt;void (facebook::react::JSExecutor*)&gt;)::$_8::operator()() const /Users/otusweb/Projects/AppChoose/node_modules/react-native/ReactCommon/cxxreact/NativeToJsBridge.cpp:310&#xA;  22 Choose decltype(std::__1::forward&lt;facebook::react::NativeToJsBridge::runOnExecutorQueue(std::__1::function&lt;void (facebook::react::JSExecutor*)&gt;)::$_8&amp;&gt;(fp)()) std::__1::__invoke&lt;facebook::react::NativeToJsBridge::runOnExecutorQueue(std::__1::function&lt;void (facebook::react::JSExecutor*)&gt;)::$_8&amp;&gt;(facebook::react::NativeToJsBridge::runOnExecutorQueue(std::__1::function&lt;void (facebook::react::JSExecutor*)&gt;)::$_8&amp;) /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/type_traits:3694&#xA;  23 Choose void std::__1::__invoke_void_return_wrapper&lt;void, true&gt;::__call&lt;facebook::react::NativeToJsBridge::runOnExecutorQueue(std::__1::function&lt;void (facebook::react::JSExecutor*)&gt;)::$_8&amp;&gt;(facebook::react::NativeToJsBridge::runOnExecutorQueue(std::__1::function&lt;void (facebook::react::JSExecutor*)&gt;)::$_8&amp;) /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/__functional_base:348&#xA;  24 Choose std::__1::__function::__alloc_func&lt;facebook::react::NativeToJsBridge::runOnExecutorQueue(std::__1::function&lt;void (facebook::react::JSExecutor*)&gt;)::$_8, std::__1::allocator&lt;facebook::react::NativeToJsBridge::runOnExecutorQueue(std::__1::function&lt;void (facebook::react::JSExecutor*)&gt;)::$_8&gt;, void ()&gt;::operator()() /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/functional:1558&#xA;  25 Choose std::__1::__function::__func&lt;facebook::react::NativeToJsBridge::runOnExecutorQueue(std::__1::function&lt;void (facebook::react::JSExecutor*)&gt;)::$_8, std::__1::allocator&lt;facebook::react::NativeToJsBridge::runOnExecutorQueue(std::__1::function&lt;void (facebook::react::JSExecutor*)&gt;)::$_8&gt;, void ()&gt;::operator()() /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/functional:1732&#xA;  26 Choose std::__1::__function::__value_func&lt;void ()&gt;::operator()() const /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/functional:1885&#xA;  27 Choose std::__1::function&lt;void ()&gt;::operator()() const /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/functional:2560&#xA;  28 Choose facebook::react::tryAndReturnError(std::__1::function&lt;void ()&gt; const&amp;) /Users/otusweb/Projects/AppChoose/node_modules/react-native/React/CxxModule/RCTCxxUtils.mm:74&#xA;  29 Choose facebook::react::RCTMessageThread::tryFunc(std::__1::function&lt;void ()&gt; const&amp;) /Users/otusweb/Projects/AppChoose/node_modules/react-native/React/CxxBridge/RCTMessageThread.mm:69&#xA;  30 Choose std::__1::__function::__value_func&lt;void ()&gt;::operator()() const /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/functional:1885&#xA;  31 Choose std::__1::function&lt;void ()&gt;::operator()() const /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS15.0.sdk/usr/include/c++/v1/functional:2560&#xA;  32 Choose invocation function for block in facebook::react::RCTMessageThread::runAsync(std::__1::function&lt;void ()&gt;) /Users/otusweb/Projects/AppChoose/node_modules/react-native/React/CxxBridge/RCTMessageThread.mm:45&#xA;  33 CoreFoundation __CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__&#xA;  34 CoreFoundation __CFRunLoopDoBlocks&#xA;  35 CoreFoundation __CFRunLoopRun&#xA;  36 CoreFoundation CFRunLoopRunSpecific&#xA;  37 Choose +[RCTCxxBridge runRunLoop] /Users/otusweb/Projects/AppChoose/node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm:367&#xA;  38 Foundation __NSThread__start__&#xA;  39 libsystem_pthread.dylib _pthread_start&#xA;  40 libsystem_pthread.dylib thread_start&#xA;</code></pre>&#xA;<p>Link to github issue: <a href=""https://github.com/apollographql/apollo-client/issues/9079"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client/issues/9079</a></p>&#xA;",1341768,,,,2021-11-18 15:52:45,Memory leak when using Apollo on react native,<react-native><websocket><apollo-client>,0,0,0,2021-11-18 15:52:45
70025970,2,,70007553,0,,"<p>I found a solution on a GitHub forum:&#xA;<a href=""https://github.com/aws-amplify/amplify-js/issues/4535#issuecomment-589594827"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-js/issues/4535#issuecomment-589594827</a></p>&#xA;<p>This made my API syncable, and the warnings disappeared:</p>&#xA;<pre><code>You could also add this you the transform.conf.json directly:&#xA;{ &quot;Version&quot;: 5, &quot;ResolverConfig&quot;: { &quot;project&quot;: { &quot;ConflictHandler&quot;: &quot;AUTOMERGE&quot;, &quot;ConflictDetection&quot;: &quot;VERSION&quot; } } }&#xA;</code></pre>&#xA;<p>The next question is, How did this work before? :D</p>&#xA;",7726827,,,,2021-11-18 19:57:54,"",,0,0,0,2021-11-18 19:57:54
70026092,2,,70013249,1,,"<p>Turns out there is a bug in JMeter 5.4.1 where any variable that is passed into a GraphQL query through the variable tab will always parse the variable as a string. There is an open <a href=""https://github.com/apache/jmeter/pull/660#pullrequestreview-807018679"" rel=""nofollow noreferrer"">PR</a> to address this, but in the meantime, the variable can be added directly to the query inside the query tab instead of using the variable tab to keep the variable type intact.</p>&#xA;",7627495,,,,2021-11-18 20:09:09,"",,0,0,0,2021-11-18 20:09:09
70054626,2,,70053965,10,,"<p>problem solved.&#xA;due to recent update, class-transformer@0.5.0 makes an error when used in validationPipe of nestJS.</p>&#xA;<p>you should downgrade to class-transformer@0.4.0</p>&#xA;<p><a href=""https://github.com/nestjs/nest/issues/8637"" rel=""noreferrer"">https://github.com/nestjs/nest/issues/8637</a></p>&#xA;",16223438,,,,2021-11-21 12:43:04,"",,0,0,0,2021-11-21 12:43:04
70076734,2,,70071602,8,,<p>Try downgrading to <code>@apollo/client</code> <code>3.4.16</code>.  I just did a round of package updates and the <code>3.5.4</code> broke my build as well.  I'm using the downgraded package with a downgraded version of <code>graphql</code> lib as well -- <code>15.7.2</code>.</p>&#xA;<p>Those are the last versions that worked for me with the current version of Expo / RN.</p>&#xA;<p>Hope that helps you out!</p>&#xA;,17003082,,,,2021-11-23 07:14:25,"",,0,3,0,2021-11-23 07:14:25
70078898,2,,70076468,1,,"<p>You have to update your import to:</p>&#xA;<pre><code>import { MockedProvider } from '@apollo/client/testing';&#xA;</code></pre>&#xA;<p>From the <a href=""https://www.apollographql.com/docs/react/migrating/apollo-client-3-migration/#react-apollo"" rel=""nofollow noreferrer"">Apollo Client 3.0 migration doc</a>:</p>&#xA;<blockquote>&#xA;<p><code>react-apollo</code> v3 is an umbrella package that re-exports the following&#xA;packages:</p>&#xA;<ul>&#xA;<li><code>@apollo/react-common</code></li>&#xA;<li><code>@apollo/react-hooks</code></li>&#xA;<li><code>@apollo/react-components</code></li>&#xA;<li><code>@apollo/react-hoc</code></li>&#xA;<li><code>@apollo/react-ssr</code></li>&#xA;<li><code>@apollo/react-testing</code></li>&#xA;</ul>&#xA;<p>The <code>react-apollo</code> package has been deprecated, and the functionality&#xA;offered by each of the above packages can now be accessed from&#xA;<code>@apollo/client</code> directly:</p>&#xA;<ul>&#xA;<li><code>@apollo/react-hooks</code> -&gt; now available directly from <code>@apollo/client</code></li>&#xA;<li><code>@apollo/react-components</code> -&gt; now available from <code>@apollo/client/react/components</code></li>&#xA;<li><code>@apollo/react-hoc</code> -&gt; now available from <code>@apollo/client/react/hoc</code></li>&#xA;<li><code>@apollo/react-ssr</code> -&gt; now available from <code>@apollo/client/react/ssr</code></li>&#xA;<li><code>@apollo/react-testing</code> -&gt; now available from <code>@apollo/client/testing</code></li>&#xA;</ul>&#xA;</blockquote>&#xA;",11129751,,,,2021-11-23 10:06:21,"",,0,4,0,2021-11-23 10:06:21
70087433,2,,70082448,0,,<p>I had to downgrade <code>graphql</code> packages from version 6 to 4 because the mercurius does not support graphql 6 until now.</p>&#xA;,9918477,,,,2021-11-23 20:32:26,"",,0,0,0,2021-11-23 20:32:26
70105500,2,,70089245,4,,"<p>I was having a similar problem. Traced it back to the issue <a href=""https://github.com/apollographql/apollo-client/issues/9105"" rel=""nofollow noreferrer"">useQuery doesn't seem to use defaultOptions in 3.5</a> in <code>@apollo/client</code> (a dependency of <code>@apollo/react-hooks</code>).</p>&#xA;<p>Solution for me was to downgrade by setting <code>&quot;@apollo/client&quot;: &quot;~3.4.0&quot;</code> in the <code>package.json</code> and run <code>npm install</code>. Check your <code>package-lock.json</code> to ensure you've replaced your <code>3.5.x</code> version.</p>&#xA;",7978198,,,,2021-11-25 03:34:03,"",,0,0,0,2021-11-25 03:34:03
70127313,1,70198867,,2,512,"<p>I have an instance of Hasura running in the Docker container and action handler API written in NodeJS/Express running directly on the machine.</p>&#xA;<p>When I test everything locally it works like a charm ( macOS M1 ), but when I replicate the same setup on the server ( Ubuntu 20.04 ) it returns an action handler does not exist error.</p>&#xA;<p>All other queries and mutations work well, just actions return this error</p>&#xA;<p>You can see that both Hasura and NodeJS apps are running</p>&#xA;<p><a href=""https://i.stack.imgur.com/v0Si9.png"" rel=""nofollow noreferrer"">hasura docker container</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/rXr79.png"" rel=""nofollow noreferrer"">localhost api call</a></p>&#xA;<p>In local development my action handler base url is</p>&#xA;<blockquote>&#xA;<p><a href=""http://host.docker.internal:5000/api"" rel=""nofollow noreferrer"">http://host.docker.internal:5000/api</a></p>&#xA;</blockquote>&#xA;<p>and it is working fine.&#xA;I have also tried</p>&#xA;<blockquote>&#xA;<p>http://localhost:5000/api</p>&#xA;</blockquote>&#xA;<blockquote>&#xA;<p><a href=""http://127.0.0.1:5000/api"" rel=""nofollow noreferrer"">http://127.0.0.1:5000/api</a></p>&#xA;</blockquote>&#xA;<p>This is the exact error Hasura action call returns</p>&#xA;<pre><code>{&#xA;&quot;errors&quot;: [&#xA;    {&#xA;        &quot;extensions&quot;: {&#xA;            &quot;internal&quot;: {&#xA;                &quot;error&quot;: {&#xA;                    &quot;type&quot;: &quot;http_exception&quot;,&#xA;                    &quot;message&quot;: &quot;ConnectionFailure Network.Socket.getAddrInfo (called with preferred socket type/protocol: AddrInfo {addrFlags = [], addrFamily = AF_UNSPEC, addrSocketType = Stream, addrProtocol = 0, addrAddress = 0.0.0.0:0, addrCanonName = Nothing}, host name: Just \&quot;host.docker.internal\&quot;, service name: Just \&quot;5000\&quot;): does not exist (Name or service not known)&quot;&#xA;                },&#xA;                &quot;response&quot;: null,&#xA;                &quot;request&quot;: {&#xA;                    &quot;body&quot;: {&#xA;                        &quot;session_variables&quot;: {&#xA;                            &quot;x-hasura-role&quot;: &quot;public&quot;&#xA;                        },&#xA;                        &quot;input&quot;: {&#xA;                            &quot;email&quot;: &quot;&quot;,&#xA;                            &quot;password&quot;: &quot;&quot;&#xA;                        },&#xA;                        &quot;action&quot;: {&#xA;                            &quot;name&quot;: &quot;login&quot;&#xA;                        }&#xA;                    },&#xA;                    &quot;url&quot;: &quot;http://host.docker.internal:5000/api/auth/login&quot;,&#xA;                    &quot;headers&quot;: []&#xA;                }&#xA;            },&#xA;            &quot;path&quot;: &quot;$&quot;,&#xA;            &quot;code&quot;: &quot;unexpected&quot;&#xA;        },&#xA;        &quot;message&quot;: &quot;http exception when calling webhook&quot;&#xA;    }&#xA;]&#xA;</code></pre>&#xA;<p>}</p>&#xA;",12728201,,,,2021-12-02 11:46:52,Hasura action handler does not exist (Name or service not known),<docker><ubuntu><graphql><hasura><hasura-docker>,1,0,0,2021-11-26 16:17:57
70131836,2,,70131775,0,,"<p>You need to put GRAPHCMS_ENDPOINT in your .env file</p>&#xA;<pre><code>  GRAPHCMS_ENDPOINT=YOUR_GRAPHCMS_URL&#xA;</code></pre>&#xA;<p>Then next.js will convert it to use NEXT_PUBLIC_GRAPHCMS_ENDPOINT in your frontend file. Remember, it will still be GRAPHCMS_ENDPOINT in your API routes and getServersideprops and getStaticProps.</p>&#xA;<p>For more info, check out the <a href=""https://nextjs.org/docs/basic-features/environment-variables"" rel=""nofollow noreferrer"">docs</a></p>&#xA;",9909930,,,,2021-11-27 03:28:18,"",,0,1,0,2021-11-27 03:28:18
70142863,2,,69957128,4,,"<p>Currently <code>type-graphql</code> supports only <code>graphql</code> with major version 15 and minor version above (or equal) to 5.</p>&#xA;<p><code>^15.5.0</code>: <em>you can include everything that does not increment the first non-zero portion of semver</em>.</p>&#xA;<p>For more information see <a href=""https://semver.npmjs.com"" rel=""nofollow noreferrer"">https://semver.npmjs.com</a></p>&#xA;<p>The latests 15th major version of <code>graphql</code> is <a href=""https://github.com/graphql/graphql-js/releases/tag/v15.7.2"" rel=""nofollow noreferrer""><strong>15.7.2</strong></a>.</p>&#xA;<p>Therefore you have to do the following for everything to work:</p>&#xA;<ol>&#xA;<li>Uninstall <code>graphql</code></li>&#xA;</ol>&#xA;<pre class=""lang-sh prettyprint-override""><code>npm uninstall graphql&#xA;</code></pre>&#xA;<ol start=""2"">&#xA;<li>Install <code>graphql</code> version <code>15.7.2</code></li>&#xA;</ol>&#xA;<pre class=""lang-sh prettyprint-override""><code>npm install graphql@15.7.2&#xA;</code></pre>&#xA;<p>Now everything should work as expected.</p>&#xA;",6676781,,,,2021-11-28 11:18:14,"",,0,0,0,2021-11-28 11:18:14
70146011,1,,,1,216,"<p>I made sure I have the same version of graphql in both server and client but sill getting error .&#xA;this is the script I'm running :</p>&#xA;<pre><code>    &quot;schema:download&quot;: &quot;apollo --schema:download --endpoint=http://localhost:4000/graphql&quot;&#xA;</code></pre>&#xA;<p>I'm getting this error :</p>&#xA;<pre><code> Error: Cannot use GraphQLSchema &quot;{ __validationErrors: undefined, description: undefined, &#xA;extensions: undefined, astNode: undefined, extensionASTNodes: undefined, _queryType: Query, &#xA;_mutationType: Mutation, _subscriptionType: null, _directives: [@cacheControl, @skip, @include, &#xA;@deprecated], _typeMap: { Query: Query, User: User, ID: ID, String: String, Mutation: Mutation, &#xA;Boolean: Boolean, __Schema: __Schema, __Type: __Type, __TypeKind: __TypeKind, __Field: __Field, &#xA;__InputValue: __InputValue, __EnumValue: __EnumValue, __Directive: __Directive, &#xA;__DirectiveLocation: __DirectiveLocation, CacheControlScope: CacheControlScope, Upload: Upload, &#xA;Int: Int }, _subTypeMap: {}, _implementationsMap: {} }&quot; from another module or realm.&#xA;&#xA;Ensure that there is only one instance of &quot;graphql&quot; in the node_modules&#xA;directory. If different versions of &quot;graphql&quot; are the dependencies of other&#xA;relied on modules, use &quot;resolutions&quot; to ensure only one version is installed.&#xA;&#xA;https://yarnpkg.com/en/docs/selective-version-resolutions&#xA;&#xA;Duplicate &quot;graphql&quot; modules cannot be used at the same time since different&#xA;versions may have different capabilities and behavior. The data from one&#xA;version used in the function from another could produce confusing and&#xA;spurious results.&#xA;</code></pre>&#xA;",13999386,,,,2021-11-28 17:51:02,can't download graphql schema from server using apollo cli,<graphql><apollo><apollo-client><apollo-server><codegen>,0,0,0,2021-11-28 17:51:02
70148573,2,,70042132,2,,"<p>Generally you <a href=""https://nextjs.org/docs/api-reference/next.config.js/runtime-configuration"" rel=""nofollow noreferrer"">don't want to use</a> <code>publicRuntimeConfig</code> because it adds overhead and is unnecessary for your use-case.  It also disables automatic static optimization.</p>&#xA;<p>Traditionally, environment variables are the way to handle dynamic settings based on the environment.  Next.js has three <a href=""https://nextjs.org/docs/basic-features/environment-variables"" rel=""nofollow noreferrer"">default environments</a> – development, test, and production.</p>&#xA;<p>Your Next.js app will automatically grab (and merge) the correct variables depending on the environment.</p>&#xA;<p>.env.local</p>&#xA;<pre><code>GRAPHQL_URL = localhost:8000/graphql&#xA;</code></pre>&#xA;<p>.env.test</p>&#xA;<pre><code>GRAPHQL_URL = test.example.com/graphql&#xA;</code></pre>&#xA;<p>.env or .env.production</p>&#xA;<pre><code>GRAPHQL_URL = production.example.com/graphql&#xA;</code></pre>&#xA;<p>Apollo config</p>&#xA;<pre class=""lang-js prettyprint-override""><code>new ApolloClient({&#xA; link: createHttpLink({&#xA;  uri: process.env.GRAPHQL_URL,&#xA; })&#xA;});&#xA;</code></pre>&#xA;<hr />&#xA;<h3>Environment variable files</h3>&#xA;<p>In your project root you can create files named</p>&#xA;<ul>&#xA;<li><code>.env</code></li>&#xA;<li><code>.env.local</code></li>&#xA;<li><code>.env.test</code></li>&#xA;<li><code>.env.test.local</code></li>&#xA;<li><code>.env.production</code></li>&#xA;</ul>&#xA;<p><em>I believe you can append <code>.local</code> to any environment to create a local only version <code>.env.production.local</code> - this has limited use in your case</em></p>&#xA;<hr />&#xA;<h3>Next.js Environment variables</h3>&#xA;<p>All environments - <code>.env</code></p>&#xA;<ul>&#xA;<li>loaded in development, test, and production environments. This file is used for defaults across all environments.  The variables in this file will be overroad if another environment variable file has a variable with the same name.</li>&#xA;</ul>&#xA;<p><a href=""https://nextjs.org/docs/basic-features/environment-variables"" rel=""nofollow noreferrer"">Development environment</a> <code>.env.local</code></p>&#xA;<ul>&#xA;<li>loaded only when <code>NODE_ENV = development</code> (next dev)</li>&#xA;</ul>&#xA;<p><a href=""https://nextjs.org/docs/basic-features/environment-variables#test-environment-variables"" rel=""nofollow noreferrer"">Test environment</a> <code>.env.test</code></p>&#xA;<ul>&#xA;<li>loaded only when <code>NODE_ENV = test</code></li>&#xA;</ul>&#xA;<p><a href=""https://nextjs.org/docs/basic-features/environment-variables#test-environment-variables"" rel=""nofollow noreferrer"">Test environment</a> <code>.env.test.local</code></p>&#xA;<ul>&#xA;<li>loaded only when <code>NODE_ENV = test</code> and local</li>&#xA;</ul>&#xA;<p>Production environment <code>.env.production</code></p>&#xA;<ul>&#xA;<li>loaded only when <code>NODE_ENV = production</code> (next start)</li>&#xA;</ul>&#xA;<hr />&#xA;<h3>Example production only variable</h3>&#xA;<p>Create a <code>.env.production</code> and add the variable there. You can repeat the same for test and local only variables.</p>&#xA;<hr />&#xA;<h3>Notes</h3>&#xA;<p>It's good practice to add your .env to your <code>.gitignore</code> so you don't accidently commit secrets to your repositories.  At a minimum you should omit <code>.env*.local</code> files from git.</p>&#xA;<p>Depending on your CI/CD setup you can set your environment variables in the deployment platform like vercel, github actions, etc. This would allow you to set the test and production variables in the hosting platform and not in your code.</p>&#xA;<p>If you need an environment variable <a href=""https://nextjs.org/docs/basic-features/environment-variables#exposing-environment-variables-to-the-browser"" rel=""nofollow noreferrer"">accessible in the browser</a> you need to prefix the variabel with <code>NEXT_PUBLIC_</code></p>&#xA;",15304814,,15304814,2021-11-29 00:20:51,2021-11-29 00:20:51,"",,0,5,0,2021-11-29 00:14:48
70159567,2,,70089245,2,,"<p><code>@apollo/react-hooks</code> has a dependency of <code>@apollo-client</code>.</p>&#xA;<p>If you have imported <code>useQuery</code> from <code>@apollo/react-hooks</code>, then you need to import <code>useQuery</code>/<code>useLazyQuery</code> from <code>@apollo-client</code> instead of <code>@apollo/react-hooks</code>, along with the version lower than 3.5.</p>&#xA;",10983034,,3025856,2021-11-29 19:47:42,2021-11-29 19:47:42,"",,0,0,0,2021-11-29 18:26:57
70212644,2,,70174019,0,,"<p>I think I found a solution! Apparently initially I missed this point in the documentation and began to write my own implementation</p>&#xA;<p>Now I switched to using <a href=""https://laravel.com/docs/8.x/eloquent#soft-deleting"" rel=""nofollow noreferrer""><code>SoftDeletes</code></a> and everything worked as I needed :)</p>&#xA;",16593275,,,,2021-12-03 10:13:59,"",,0,0,0,2021-12-03 10:13:59
70216576,2,,59412890,0,,"<p>I had the same problem with Nuxt. I installed this dependence: <a href=""https://www.npmjs.com/package/jest-transform-graphql"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/jest-transform-graphql</a>, and add this: <strong>'\.(gql|graphql)$': 'jest-transform-graphql'</strong> in jest.config.js file, it works for me</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>  transform: {&#xA;    '^.+\\.js$': 'babel-jest',&#xA;    '.*\\.(vue)$': 'vue-jest',&#xA;    '\\.(gql|graphql)$': 'jest-transform-graphql'&#xA;  },</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",10536504,,,,2021-12-03 15:15:46,"",,0,0,0,2021-12-03 15:15:46
70231669,2,,68354656,2,,<p>There are already some great answers here. But we should know why and where we should call server.start(). From apollo docs -</p>&#xA;<blockquote>&#xA;<p>Always call await server.start() <strong>before calling&#xA;server.applyMiddleware and starting your HTTP server</strong>. This allows&#xA;you to react to Apollo Server startup failures by crashing your&#xA;process instead of starting to serve traffic.</p>&#xA;</blockquote>&#xA;,4757055,,1839439,2021-12-05 05:25:50,2021-12-05 05:25:50,"",,0,0,0,2021-12-05 05:19:56
70264805,1,70278394,,0,103,"<p>I have a working PERN app on my local machine (same repo), and trying to test on Github Codespaces.</p>&#xA;<p>When starting the GraphQL server on Github Codespace I'm getting erros when testing with Postman online <code>Error: Exceeded maxRedirects. Probably stuck in a redirect loop</code>:</p>&#xA;<p><a href=""https://i.stack.imgur.com/agwAA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/agwAA.png"" alt=""Postman errors"" /></a></p>&#xA;<p>I'm under the assumption I have three options based on other ppl's projects:</p>&#xA;<ol>&#xA;<li>Setup a Docker environment</li>&#xA;<li>Resolve CORS or proxy setup</li>&#xA;<li>Host the server on one repo and the frontend on another (and still tackle CORS and proxy issues)</li>&#xA;</ol>&#xA;<p>Ideally in the end I want to continue testing and developing in Github Codespaces.</p>&#xA;<p>What's the best option for Codespaces development and the easiest for when I'm ready to deploy?</p>&#xA;",664933,,664933,2021-12-08 16:25:39,2021-12-08 16:58:40,Setting up PERN Stack with Graphql Server on Github Codespaces,<github><graphql><codespaces><github-codespaces>,1,0,0,2021-12-07 17:53:21
70267329,1,,,1,230,"<p>I'm trying to develop using localhost on one machine (via <code>localhost:5000/graphql</code>) and using Github codespaces on another (via <code>https://githubuser-repo-wackycode-5000.githubpreview.dev/graphql</code>).</p>&#xA;<p>In my <code>index.tsx</code> I have:</p>&#xA;<pre><code>const graphqlHost: string = (process.env.GRAPHQL_HOST as string);&#xA;&#xA;console.log(graphqlHost);&#xA;&#xA;const httpLink = createHttpLink({&#xA;  uri: graphqlHost,&#xA;  credentials: 'same-origin'&#xA;&#xA;});&#xA;</code></pre>&#xA;<p>My .env (located just outside of <code>/src</code> looks as follows:</p>&#xA;<pre><code># GRAPHQL_HOST=&quot;localhost:5000/graphql&quot;&#xA;GRAPHQL_HOST=&quot;https://githubuser-repo-wackycode-5000.githubpreview.dev/graphql&quot;&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/E8sV4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/E8sV4.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Error I'm getting (obviously not resolving .env):&#xA;<code>Module not found: Can't resolve 'graphql' </code></p>&#xA;<p>Everything does would when the <code>uri</code> is hardcoded.</p>&#xA;<p>What's the proper .env setup I'm missing?</p>&#xA;",664933,,,,2021-12-08 17:04:03,Set Graphql URI in React with .env,<reactjs><graphql><environment-variables>,2,0,0,2021-12-07 21:46:51
70272034,1,,,0,123,"<p>Currently I'm using apolloserver + nodejs to my project&#xA;and i want to get server ip address for monitoring log in Sentry.</p>&#xA;<p>Soon i'm gonna add more servers so i want to get which server clients are using for monitoring.</p>&#xA;<p>If i use os.networkInterfaces(), can i get server ip address?</p>&#xA;<p>I was trying to use this code</p>&#xA;<pre><code>const nets = networkInterfaces()&#xA;const ip = nets.en0[0].family != 'IPv6' ? nets.en0[0].address : nets.en0[1].address&#xA;&#xA;Logger.setUser(ip)  // to Sentry&#xA;</code></pre>&#xA;",9067551,,,,2021-12-08 08:35:57,"If i use os.networkInterfaces() and deploy to server, can i get server ip?",<node.js><ip><apollo>,0,5,0,2021-12-08 08:35:57
70276561,2,,70216232,2,,"<p>Sigh,</p>&#xA;<p>This all along was an API version issue. Shopify CLI still spins up Oct 2020 API. Metafieldset was only added in the 2021 API</p>&#xA;<p><a href=""https://shopify.dev/api/admin-graphql/2021-10/mutations/metafieldsset"" rel=""nofollow noreferrer"">https://shopify.dev/api/admin-graphql/2021-10/mutations/metafieldsset</a></p>&#xA;<p>The error messages threw me off</p>&#xA;<p>So to update just update the API version in server.js</p>&#xA;<pre><code>API_VERSION: &quot;2021-10&quot;,&#xA;</code></pre>&#xA;",2389087,,,,2021-12-08 14:21:36,"",,0,1,0,2021-12-08 14:21:36
70278394,2,,70264805,0,,"<p>I never did successfully get Postman to work on Github Codespace... but I did however get my PERN stack running successfully and resolve the CORS and Network ERR issues I was ironically trying to troubleshoot with Postman.</p>&#xA;<ol>&#xA;<li>As suggested by <a href=""https://github.com/vladanpaunovic"" rel=""nofollow noreferrer"">@vladanpaunovic</a> in a Github thread <a href=""https://github.com/graphql/graphql-playground/issues/748#issuecomment-412524510"" rel=""nofollow noreferrer"">here</a>, you can change a setting using GraphQL Playground.  I did have to change from GraphiQL to GraphQL Playground to try out this suggestion.</li>&#xA;</ol>&#xA;<p><a href=""https://i.stack.imgur.com/KcoQF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KcoQF.png"" alt=""enter image description here"" /></a></p>&#xA;<ol start=""2"">&#xA;<li>Then in VS Code (I use the browser) for the Codespace, I made the <code>Port Visibility</code> to <code>Public</code></li>&#xA;</ol>&#xA;<p><a href=""https://i.stack.imgur.com/gq1CP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gq1CP.png"" alt=""enter image description here"" /></a></p>&#xA;",664933,,664933,2021-12-08 16:58:40,2021-12-08 16:58:40,"",,0,0,0,2021-12-08 16:25:26
70302100,2,,68904187,1,,"<p>Make sure all apollo packages (<code>apollo-server</code>, <code>apollo-server-express</code>, <code>apollo-server-core</code>) have the exact same version</p>&#xA;",5619063,,,,2021-12-10 09:11:16,"",,0,0,0,2021-12-10 09:11:16
70302524,1,,,0,93,"<p>I'm trying to learn vue.js so when getting into vue CLI I was looking to install it globally in my laptop but when I tried to using npm to install it using the command <code>npm install -g @vue/cli</code> I faced this issue down below</p>&#xA;<pre><code>npm WARN deprecated @hapi/bourne@1.3.2: This version has been deprecated and is no longer supported or maintained&#xA;npm WARN deprecated @hapi/topo@3.1.6: This version has been deprecated and is no longer supported or maintained&#xA;npm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated&#xA;npm WARN deprecated har-validator@5.1.5: this library is no longer supported&#xA;npm WARN deprecated apollo-tracing@0.15.0: The `apollo-tracing` package is no longer part of Apollo Server 3. See https://www.apollographql.com/docs/apollo-server/migration/#tracing for details&#xA;npm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated&#xA;npm WARN deprecated graphql-extensions@0.15.0: The `graphql-extensions` API has been removed from Apollo Server 3. Use the plugin API instead: https://www.apollographql.com/docs/apollo-server/integrations/plugins/&#xA;npm WARN deprecated @hapi/address@2.1.4: Moved to 'npm install @sideway/address'&#xA;npm WARN deprecated apollo-cache-control@0.14.0: The functionality provided by the `apollo-cache-control` package is built in to `apollo-server-core` starting with Apollo Server 3. See https://www.apollographql.com/docs/apollo-server/migration/#cachecontrol for details.&#xA;npm WARN deprecated uuid@3.4.0: Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.&#xA;npm WARN deprecated uuid@3.4.0: Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.&#xA;npm WARN deprecated request@2.88.2: request has been deprecated, see https://github.com/request/request/issues/3142&#xA;npm WARN deprecated @hapi/hoek@8.5.1: This version has been deprecated and is no longer supported or maintained&#xA;npm WARN deprecated @hapi/joi@15.1.1: Switch to 'npm install joi'&#xA;npm WARN deprecated graphql-tools@4.0.8: This package has been deprecated and now it only exports makeExecutableSchema.\nAnd it will no longer receive updates.\nWe recommend you to migrate to scoped packages such as @graphql-tools/schema, @graphql-tools/utils and etc.\nCheck out https://www.graphql-tools.com to learn what package you should use instead&#xA;&#xA;changed 946 packages, and audited 947 packages in 28s&#xA;&#xA;65 packages are looking for funding&#xA;  run `npm fund` for details&#xA;&#xA;11 vulnerabilities (4 moderate, 7 high)&#xA;&#xA;Some issues need review, and may require choosing&#xA;a different dependency.&#xA;&#xA;Run `npm audit` for details.&#xA;</code></pre>&#xA;<p>and when I try <code>npm audit</code> I get <code>found 0 vulnerabilities</code>&#xA;can any one tell what is wrong with my computer ?</p>&#xA;",13796502,,,,2021-12-10 09:44:39,how to fix npm warning issue when I'm trying to install vue/cli,<node.js><vue.js><npm><graphql>,0,0,0,2021-12-10 09:44:39
70304296,2,,70304001,2,,"<p>NexusJS for this moment doesn't work with graphql 16+&#xA;So you must use older versions.&#xA;In my case 14.5.8 (from GitHub nexus example) workes correctly&#xA;There's pull-request with fixes for graphql 16+ version:&#xA;<a href=""https://github.com/graphql-nexus/nexus/pull/977"" rel=""nofollow noreferrer"">https://github.com/graphql-nexus/nexus/pull/977</a></p>&#xA;",17644275,,,,2021-12-10 12:10:32,"",,0,0,0,2021-12-10 12:10:32
70311103,2,,68855003,5,,"<p>This is a <a href=""https://github.com/apollographql/apollo-tooling/issues/2415"" rel=""noreferrer"">known issue</a> with <code>apollo</code>. I followed the suggestion to <a href=""https://github.com/apollographql/apollo-tooling/issues/2415#issuecomment-898595376"" rel=""noreferrer"">downgrade to <code>node</code> <code>v14.17.5</code></a>, and everything worked.</p>&#xA;",9636,,,,2021-12-10 22:38:36,"",,0,0,0,2021-12-10 22:38:36
70322621,1,,,1,914,"<p>I'm trying to make a GraphQL request by using fetch method to get a schema.&#xA;On AWSAppSync in my settings I see the API URL and API ID, but I have no idea how to configure my fetch POST request properly to get the response with data I need.</p>&#xA;<p>Here is the code I'm trying to use:</p>&#xA;<pre><code>fetch('https://qnwb7jaoxdyky6egh4.appsync-api.us-east-1.amazonaws.com/graphql', {&#xA;    method: 'POST',&#xA;    headers: { &#xA;Authorization: 'Basic bnwak7alhw52rlioy',  &lt;----- this is API ID from AWS AppSync settings&#xA;'Content-Type': 'application/json' &#xA;},&#xA;    body: JSON.stringify({&#xA;      variables: {},&#xA;      query: `&#xA;      {&#xA;        __schema {&#xA;          types {&#xA;            kind&#xA;            name&#xA;            possibleTypes {&#xA;              name&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    `,&#xA;    }),&#xA;  })&#xA;    .then((result) =&gt; result.json())&#xA;    .then((result) =&gt; {&#xA;      debugger;  &lt;--------- here I'm expecting to see the response data, but I see an error &quot;UnauthorizedException&quot;&#xA;&#xA;      // here we're filtering out any type information unrelated to unions or interfaces&#xA;      const filteredData = result.data.__schema.types.filter(&#xA;        (type) =&gt; type.possibleTypes !== null,&#xA;      );&#xA;      &#xA;      result.data.__schema.types = filteredData;&#xA;      fs.writeFile('./fragmentTypes.json', JSON.stringify(result.data), (err) =&gt; {&#xA;        if (err) {&#xA;          console.error('Error writing fragmentTypes file', err);&#xA;        } else {&#xA;          console.log('Fragment types successfully extracted!');&#xA;        }&#xA;      });&#xA;    });&#xA;</code></pre>&#xA;<p>I'm using API URL and API ID from AWS AppSync settings.</p>&#xA;<p>I don't know why, but I get an error: &quot;message: &quot;Unable to parse JWT token.&quot;</p>&#xA;",3748199,,1103511,2021-12-13 06:10:51,2021-12-13 07:37:14,How to do authorization fetch with GraphQL POST request?,<javascript><reactjs><amazon-web-services><graphql><aws-appsync>,2,0,0,2021-12-12 10:15:25
70338215,1,,,8,5821,"<p>after installing new version of apollo client getting this Error. I tried other versions and to downgrade but nothing. Also I tried to specify in metro.config.js to resolve &quot;cjs&quot; type of file (@apollo/client/main.cjs), but nothing.</p>&#xA;<p><em><strong>Error</strong></em></p>&#xA;<pre><code>error: Error: While trying to resolve module `@apollo/client` from file `****\src\api\queries\home.js`, the package `****\node_modules\@apollo\client\package.json` was successfully found. However, this package itself specifies a `main` module field that could not be resolved (`****\node_modules\@apollo\client\main.cjs`. Indeed, none of these files exist:&#xA;</code></pre>&#xA;<p><em><strong>Dependencies</strong></em></p>&#xA;<pre><code>&quot;@apollo/client&quot;: &quot;^3.3.2&quot;,&#xA;&quot;graphql&quot;: &quot;^15.4.0&quot;,&#xA;</code></pre>&#xA;<p>Anyone can help me please? Will be very thankful!</p>&#xA;",13957679,,,,2022-10-18 11:57:41,Error: While trying to resolve module @apollo/client React Native,<react-native><graphql><bundle><apollo-client>,4,0,0,2021-12-13 16:57:09
70353590,2,,66785183,2,,"<p>I was able to fix this issue by closing the app and uninstalling it, then run again and log in to start fetching API</p>&#xA;",9184754,,,,2021-12-14 18:03:52,"",,0,0,0,2021-12-14 18:03:52
70365666,1,,,0,20,<p>I think I'm confused about how to take an ApolloJS app to production.</p>&#xA;<p>In development I have the client spinning up on localhost:3000 and the server at localhost:4000 and the graphql at localhost:4000/graphql.&#xA;Everything works with npm. I then dockerized the client and server and wrote a docker-compose.yml to have them run locally.</p>&#xA;<p>I then upload the images to DockerHub and pull them down to the production server. I want to use docker-compose on the production server but I am unsure how to proceed. I've done some googling but it seems I'm missing something between pulling the image and writing the production docker-compose. I'm tried incorporating nginx as another docker container but I can't quite get it all working together.</p>&#xA;<p>What (in your opinion) is the easiest way to get an ApolloJS app running in production that is still secure? Should I drop docker?</p>&#xA;,11903949,,,,2021-12-15 14:45:27,ApolloJS to Production Best Practices,<docker><express><docker-compose><apollo-client><apollo-server>,0,0,0,2021-12-15 14:45:27
70378334,2,,70369061,0,,<p>It seems like amplify doesn't like webpack 5 which is being included in react-scripts@5.0.0</p>&#xA;,13062332,,,,2021-12-16 11:36:29,"",,0,1,0,2021-12-16 11:36:29
70383618,2,,70381428,1,,"<p>As you observed, the <code>./src/graphql/schema.graphql</code> isn't being packaged to the final artifact Serverless builds and deploys.</p>&#xA;<p>You can add it by specifying the <strong>package</strong> property to your function:</p>&#xA;<pre><code>graphql:&#xA;  handler: src/handlers/graphql.default&#xA;  events:&#xA;    - http:&#xA;        path: ${env:api_prefix}/graphql&#xA;        method: any&#xA;        cors: true&#xA;  package:&#xA;    include:&#xA;      - src/graphql/schema.graphql&#xA;</code></pre>&#xA;<p>Source: <a href=""https://www.serverless.com/framework/docs/providers/aws/guide/packaging#patterns"" rel=""nofollow noreferrer"">https://www.serverless.com/framework/docs/providers/aws/guide/packaging#patterns</a></p>&#xA;",7047805,,,,2021-12-16 17:59:30,"",,0,4,0,2021-12-16 17:59:30
70386792,2,,70369061,3,,"<p>You should try Amplify version <code>4.3.11</code> and above, that is using <code>graphql</code> 15.8.0 which works with Webpack 5</p>&#xA;",12927143,,,,2021-12-16 23:28:02,"",,0,0,0,2021-12-16 23:28:02
70387123,2,,70369061,3,,"<p>In addition to Francisco's suggestion of updating packages,</p>&#xA;<p>You should also uninstall the <code>aws-amplify-react</code> package in favor of the new Amplify UI library. The peer dependencies of that legacy package being locked to older versions of the scoped packages will cause unwanted behaviors.</p>&#xA;<p>You can install the new ui components by running <code>npm i @aws-amplify/ui-react</code></p>&#xA;<p>Here is a link to the new Amplify UI documentation for reference:&#xA;<a href=""https://ui.docs.amplify.aws/"" rel=""nofollow noreferrer"">https://ui.docs.amplify.aws/</a></p>&#xA;",7799768,,,,2021-12-17 00:24:06,"",,0,0,0,2021-12-17 00:24:06
70388832,1,70467387,,4,212,"<p>I have one React Amplify app running with two environments. One environment is for my wife's blog (<a href=""http://www.riahraineart.com"" rel=""nofollow noreferrer"">www.riahraineart.com</a>) and one for my blog (<a href=""http://www.joshmk.com"" rel=""nofollow noreferrer"">www.joshmk.com</a>). Both sites are running off the same repo, I'm just configuring the site's differently based on an environment variable I use to retrieve their configurations from a table.</p>&#xA;<pre><code>  useEffect(() =&gt; {&#xA;    async function fetchData() {&#xA;      const configData = await API.graphql({&#xA;        query: queries.getConfiguration,&#xA;        variables: { id: process.env[configIdName] },&#xA;      });&#xA;      if (configData &amp;&amp; isMounted.current)&#xA;        setConfig(configData.data.getConfiguration || {});&#xA;    }&#xA;    if (process.env[configIdName]) {&#xA;      fetchData();&#xA;    }&#xA;  }, [isMounted, configIdName]);&#xA;</code></pre>&#xA;<p>For my site, when I make the GraphQL request for this configuration, it's successful and the site spins up. For my wife's site, this call to the configurations table silently fails. By silent, I mean there's no helpful response being returned from the API even though it's a successful 200 response.</p>&#xA;<p>When I open AppSync, go to the two environments and run the queries, I receive the configuration items. I also see them when I open dynamodb.</p>&#xA;<p>I'm thinking there could be some expired token for something somewhere but if that was the case, I would think I'd receive a failed response that would state that.</p>&#xA;<p>Another possibility could be that my wife had modified the configuration of her site or created a post with some content that the frontend doesn't expect. But in that case, I would atleast expect to see a response from the call to receive her sites configuration.</p>&#xA;<p>Thank you beforehand for any insights here!</p>&#xA;",7144369,,7144369,2021-12-18 03:46:05,2021-12-23 21:09:07,AWS Appsync GraphQL query silently failing though successful 200 response,<reactjs><amazon-web-services><graphql><aws-amplify><aws-appsync>,1,8,0,2021-12-17 05:35:39
70404422,1,,,0,149,"<p>I have an NX workspace that use NestJS and Angular.</p>&#xA;<p>I would like to autogenerate the types of my API, but also each individual queries used in my application component.</p>&#xA;<p>I have the following package.json command</p>&#xA;<pre><code>    &quot;codegen:api&quot;: &quot;ts-node generate-types&quot;,&#xA;    &quot;codegen:fe&quot;: &quot;apollo codegen:generate --endpoint=http://localhost:3333/graphql --target=typescript&quot;,&#xA;</code></pre>&#xA;<p><code>codegen:api</code> works great, but&#xA;<code>codegen:fe</code> return the following error :</p>&#xA;<pre><code>Error: Cannot use GraphQLObjectType &quot;Query&quot; from another module or realm.&#xA;&#xA;Ensure that there is only one instance of &quot;graphql&quot; in the node_modules&#xA;directory. If different versions of &quot;graphql&quot; are the dependencies of other&#xA;relied on modules, use &quot;resolutions&quot; to ensure only one version is installed.&#xA;&#xA;https://yarnpkg.com/en/docs/selective-version-resolutions&#xA;&#xA;Duplicate &quot;graphql&quot; modules cannot be used at the same time since different&#xA;versions may have different capabilities and behavior. The data from one&#xA;version used in the function from another could produce confusing and&#xA;spurious results.&#xA;</code></pre>&#xA;<p>I added to my package.json</p>&#xA;<pre><code>  &quot;resolutions&quot;: {&#xA;    &quot;graphql&quot;: &quot;^15.7.2&quot;&#xA;  }&#xA;</code></pre>&#xA;<p>but it didn't work.</p>&#xA;<p>I found the following issue :</p>&#xA;<p><code>https://github.com/apollographql/apollo-tooling/issues/2232</code>&#xA;<code>https://github.com/apollographql/apollo-tooling/issues/2422</code></p>&#xA;<p>But I do not know from where the problem come from</p>&#xA;<p>I run</p>&#xA;<pre><code>npm ls --depth=10 | grep 'graphql@'&#xA;│ │ └── graphql@15.7.2 deduped&#xA;│ │ ├── graphql@15.7.2 deduped&#xA;│ ├── graphql@15.7.2 deduped&#xA;│ │ ├── graphql@15.7.2 deduped&#xA;├─┬ @nestjs/graphql@9.1.2&#xA;│ │ ├── apollo-graphql@0.9.5 deduped&#xA;│ │ ├── graphql@15.7.2 deduped&#xA;│ │ ├── graphql@15.7.2 deduped&#xA;│ │ ├── graphql@15.7.2 deduped&#xA;│ │ ├── graphql@15.7.2 deduped&#xA;│ │ │ ├── graphql@15.7.2 deduped&#xA;│ │ │ │ ├── graphql@15.7.2 deduped&#xA;│ │ │ ├── graphql@15.7.2 deduped&#xA;│ │ │ ├── graphql@15.7.2 deduped&#xA;│ │ ├── apollo-graphql@0.9.5 deduped&#xA;│ │ ├── graphql@15.7.2 deduped&#xA;│ │ │ │ └── graphql@14.7.0 deduped&#xA;│ │ │ │ └── graphql@14.7.0 deduped&#xA;│ │ │ │ └── graphql@14.7.0 deduped&#xA;│ │ │ └── graphql@14.7.0 deduped&#xA;│ │ ├── apollo-graphql@0.9.5 deduped&#xA;│ │ │ │ ├── graphql@15.7.2 deduped&#xA;│ │ │ ├── graphql@15.7.2 deduped&#xA;│ │ │ │ ├── graphql@15.7.2 deduped&#xA;│ │ │ ├── graphql@15.7.2 deduped&#xA;│ │ │ └── graphql@15.7.2 deduped&#xA;│ │ ├─┬ graphql@14.7.0&#xA;│ │ ├── graphql@15.7.2 deduped&#xA;│ ├── graphql@15.7.2 deduped&#xA;├── graphql@15.7.2&#xA;</code></pre>&#xA;<p>I see some <code>14.7.0</code> but they are from graphql library, so not quite sure how to fix</p>&#xA;",3241192,,,,2021-12-18 14:53:56,Apollo Angular do not autogenerate types in my NX workspace,<node.js><angular><graphql><nestjs><apollo>,0,0,0,2021-12-18 14:53:56
70412541,1,,,0,953,"<p>I am trying to get a list of all pools containing a token symbol with Uniswap v3 for arbitrage opportunities.  For example, if I want to find all pools containing &quot;WETH&quot;.</p>&#xA;<p>Using the <a href=""https://thegraph.com/hosted-service/subgraph/uniswap/uniswap-v3"" rel=""nofollow noreferrer"">subgraph</a>,</p>&#xA;<pre><code>{&#xA;    tokens(first: 10, where:{symbol:&quot;WETH&quot;}){&#xA;    id&#xA;    name&#xA;    symbol&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Returns:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;tokens&quot;: [&#xA;      {&#xA;        &quot;id&quot;: &quot;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&quot;,&#xA;        &quot;name&quot;: &quot;Wrapped Ether&quot;,&#xA;        &quot;symbol&quot;: &quot;WETH&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Once I have a selected pool, I then will have <code>token0</code> and <code>token1</code> to use later in <code>factory.getPool()</code>.</p>&#xA;<p>Now to find the pools that contain WETH, I use the graph to check if <code>token0</code> OR <code>token1</code> contains the WETH ID, <code>0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2</code>.</p>&#xA;<pre><code>// search token0&#xA;{&#xA;    pools(first:10, where: {&#xA;    token0:&quot;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&quot;,            &#xA;}){&#xA;    token0{&#xA;      name&#xA;      symbol&#xA;      id&#xA;    }&#xA;    token1{&#xA;      name&#xA;      symbol&#xA;      id&#xA;    }&#xA;    }&#xA;}&#xA;&#xA;&#xA;// search token1&#xA;{&#xA;    pools(first:10, where: {&#xA;    token1:&quot;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&quot;,            &#xA;}){&#xA;    token0{&#xA;      name&#xA;      symbol&#xA;      id&#xA;    }&#xA;    token1{&#xA;      name&#xA;      symbol&#xA;      id&#xA;    }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Now I have a list of all pools that that contain &quot;WETH&quot; and the pool ID's to use in factory to perform swaps.</p>&#xA;<p>So, what I would like to know is if there is a much simpler way of doing this please!?</p>&#xA;",172359,,,,2022-04-18 18:20:10,"Using the Uniswap v3 Subgraph or other options, how to find liquidity pools containing a given token symbol?",<graphql><subgraph><uniswap>,1,0,0,2021-12-19 14:59:50
70485386,1,,,0,219,"<p>I have a Django GraphQL API and an Angular 12 UI that uses Apollo to interface with GraphQL.</p>&#xA;<p>The Django app is dockerized and uses NGINX. These are my files:-</p>&#xA;<p>settings.py (only relevant sections pasted below)</p>&#xA;<pre><code>INSTALLED_APPS = [&#xA;    'channels',&#xA;    'corsheaders',&#xA;    'django.contrib.admin',&#xA;    'django.contrib.auth',&#xA;    'django.contrib.contenttypes',&#xA;    'django.contrib.sessions',&#xA;    'django.contrib.messages',&#xA;    'django.contrib.staticfiles',&#xA;    'django.contrib.sites', # This is for altering the domain name in the migration&#xA;    'app',&#xA;    'graphene_django',&#xA;    'graphql_jwt.refresh_token.apps.RefreshTokenConfig',&#xA;    'graphql_auth',&#xA;    'rest_framework',&#xA;    'django_filters',&#xA;]&#xA;&#xA;GRAPHENE = {&#xA;    'SCHEMA': 'project.schema.schema',&#xA;    'MIDDLEWARE': [&#xA;        'graphql_jwt.middleware.JSONWebTokenMiddleware',&#xA;    ],&#xA;    &quot;SUBSCRIPTION_PATH&quot;: &quot;/ws/graphql&quot;&#xA;}&#xA;&#xA;MIDDLEWARE = [&#xA;    'django.middleware.security.SecurityMiddleware',&#xA;    'whitenoise.middleware.WhiteNoiseMiddleware',    &#xA;    'corsheaders.middleware.CorsMiddleware',&#xA;    'django.middleware.common.CommonMiddleware',&#xA;    'django.contrib.sessions.middleware.SessionMiddleware',&#xA;    'django.contrib.auth.middleware.AuthenticationMiddleware',&#xA;    'django.middleware.common.CommonMiddleware',&#xA;    'django.middleware.csrf.CsrfViewMiddleware',&#xA;    'django.contrib.messages.middleware.MessageMiddleware',&#xA;    'django.middleware.clickjacking.XFrameOptionsMiddleware',&#xA;    'common.utils.UpdateLastActivityMiddleware'&#xA;]&#xA;&#xA;AUTHENTICATION_BACKENDS = [&#xA;    'graphql_auth.backends.GraphQLAuthBackend',&#xA;    'django.contrib.auth.backends.ModelBackend',&#xA;]&#xA;&#xA;GRAPHQL_AUTH = {&#xA;    &quot;ALLOW_LOGIN_NOT_VERIFIED&quot;: False&#xA;}&#xA;&#xA;GRAPHQL_JWT = {&#xA;    &quot;JWT_ALLOW_ANY_CLASSES&quot;: [&#xA;        &quot;graphql_auth.mutations.Register&quot;,&#xA;        &quot;graphql_auth.mutations.VerifyAccount&quot;,&#xA;        &quot;graphql_auth.mutations.ResendActivationEmail&quot;,&#xA;        &quot;graphql_auth.mutations.SendPasswordResetEmail&quot;,&#xA;        &quot;graphql_auth.mutations.PasswordReset&quot;,&#xA;        &quot;graphql_auth.mutations.ObtainJSONWebToken&quot;,&#xA;        &quot;graphql_auth.mutations.VerifyToken&quot;,&#xA;        &quot;graphql_auth.mutations.RefreshToken&quot;,&#xA;        &quot;graphql_auth.mutations.RevokeToken&quot;,&#xA;    ],&#xA;    'JWT_PAYLOAD_HANDLER': 'common.utils.jwt_payload',&#xA;    &quot;JWT_VERIFY_EXPIRATION&quot;: True,&#xA;    &quot;JWT_LONG_RUNNING_REFRESH_TOKEN&quot;: True,&#xA;    'JWT_REUSE_REFRESH_TOKENS': True, # Eliminates creation of new db records every time refreshtoken is requested.&#xA;    'JWT_EXPIRATION_DELTA': timedelta(minutes=60), # Expiry time of token&#xA;    'JWT_REFRESH_EXPIRATION_DELTA': timedelta(days=7), # Expiry time of refreshToken&#xA;}&#xA;&#xA;ROOT_URLCONF = 'project.urls'&#xA;&#xA;WSGI_APPLICATION = 'project.wsgi.application'&#xA;&#xA;ASGI_APPLICATION = 'project.router.application'&#xA;&#xA;&#xA;REDIS_URL = env('REDIS_URL')&#xA;hosts = [REDIS_URL]&#xA;&#xA;if DEBUG:&#xA;    hosts = [('redis', 6379)]&#xA;&#xA;CHANNEL_LAYERS = {&#xA;    &quot;default&quot;: {&#xA;        &quot;BACKEND&quot;: &quot;channels_redis.core.RedisChannelLayer&quot;,&#xA;        &quot;CONFIG&quot;: {&#xA;            &quot;hosts&quot;: hosts,&#xA;        },&#xA;    },&#xA;}&#xA;</code></pre>&#xA;<p>router.py</p>&#xA;<pre><code>@database_sync_to_async&#xA;def get_user(token_key):&#xA;    try:&#xA;        decodedPayload = jwt.decode(&#xA;            token_key, key=SECRET_KEY, algorithms=['HS256'])&#xA;        user_id = decodedPayload.get('sub')&#xA;        User = get_user_model()&#xA;        user = User.objects.get(pk=user_id)&#xA;        return user&#xA;    except Exception as e:&#xA;        return AnonymousUser()&#xA;&#xA;# This is to enable authentication via websockets&#xA;# Source - https://stackoverflow.com/a/65437244/7981162&#xA;&#xA;class TokenAuthMiddleware(BaseMiddleware):&#xA;    # We get the auth token from the websocket call where token is passed as a URL param&#xA;    def __init__(self, inner):&#xA;        self.inner = inner&#xA;&#xA;    async def __call__(self, scope, receive, send):&#xA;        query = dict((x.split(&quot;=&quot;)&#xA;                     for x in scope[&quot;query_string&quot;].decode().split(&quot;&amp;&quot;)))&#xA;        token_key = query.get(&quot;token&quot;)&#xA;        scope[&quot;user&quot;] = await get_user(token_key)&#xA;        scope[&quot;session&quot;] = scope[&quot;user&quot;] if scope[&quot;user&quot;] else None&#xA;        return await super().__call__(scope, receive, send)&#xA;&#xA;&#xA;application = ProtocolTypeRouter(&#xA;    {&#xA;        &quot;http&quot;: get_asgi_application(),&#xA;        &quot;websocket&quot;: AllowedHostsOriginValidator(TokenAuthMiddleware(&#xA;            URLRouter(&#xA;                [path(&quot;ws/graphql/&quot;, MyGraphqlWsConsumer.as_asgi())]&#xA;            )&#xA;        )),&#xA;    }&#xA;)&#xA;&#xA;</code></pre>&#xA;<p>docker-compose.yml</p>&#xA;<pre><code>version: &quot;3.9&quot;&#xA;&#xA;services:&#xA;  nginx:&#xA;    build: ./nginx&#xA;    ports:&#xA;      - ${PORT}:80&#xA;    volumes:&#xA;      - static-data:/vol/static&#xA;    depends_on:&#xA;      - web&#xA;    restart: &quot;on-failure&quot;&#xA;  redis:&#xA;    image: redis:latest&#xA;    ports:&#xA;      - 6379:6379&#xA;    volumes:&#xA;      - ./config/redis.conf:/redis.conf&#xA;    command: [&quot;redis-server&quot;, &quot;/redis.conf&quot;]&#xA;    restart: &quot;on-failure&quot;&#xA;  db:&#xA;    image: postgres:13&#xA;    volumes:&#xA;      - ./data/db:/var/lib/postgresql/data&#xA;    env_file:&#xA;      - database.env&#xA;    restart: always&#xA;  pg_admin:&#xA;    image: dpage/pgadmin4:latest&#xA;    container_name: app_io_pgadmin4&#xA;    ports:&#xA;      - &quot;5000:80&quot;&#xA;    logging:&#xA;      driver: none&#xA;    environment:&#xA;      - GUNICORN_THREADS=1&#xA;      - PGADMIN_DEFAULT_EMAIL=admin@email.com&#xA;      - PGADMIN_DEFAULT_PASSWORD=admin&#xA;    depends_on:&#xA;      - db&#xA;    restart: &quot;on-failure&quot;&#xA;&#xA;  web:&#xA;    build: .&#xA;    command: bash -c &quot;python manage.py makemigrations &amp;&amp; python manage.py migrate &amp;&amp; python manage.py runserver 0.0.0.0:8000&quot;&#xA;    container_name: app_io_api&#xA;    volumes:&#xA;      - .:/project&#xA;    ports:&#xA;      - 8000:8000&#xA;    expose:&#xA;      - 8000&#xA;    depends_on:&#xA;      - db&#xA;      - redis&#xA;    restart: &quot;on-failure&quot;&#xA;&#xA;volumes:&#xA;  database-data: # named volumes can be managed easier using docker-compose&#xA;  static-data:&#xA;&#xA;</code></pre>&#xA;<p>Dockerfile</p>&#xA;<pre><code>FROM python:3.8.3&#xA;LABEL maintainer=&quot;https://github.com/ryarasi&quot;&#xA;# ENV MICRO_SERVICE=/app&#xA;# RUN addgroup -S $APP_USER &amp;&amp; adduser -S $APP_USER -G $APP_USER&#xA;# set work directory&#xA;&#xA;&#xA;# set environment variables&#xA;ENV PYTHONDONTWRITEBYTECODE 1&#xA;ENV PYTHONUNBUFFERED 1&#xA;&#xA;COPY ./requirements.txt /requirements.txt&#xA;# create root directory for our project in the container&#xA;RUN mkdir /project&#xA;# COPY ./scripts /scripts&#xA;WORKDIR /project&#xA;&#xA;# Copy the current directory contents into the container at /project&#xA;ADD . /project/&#xA;# Install any needed packages specified in requirements.txt&#xA;&#xA;# This is to create the collectstatic folder for whitenoise&#xA;RUN pip install --upgrade pip &amp;&amp; \&#xA;    pip install --no-cache-dir -r /requirements.txt &amp;&amp; \&#xA;    mkdir -p /vol/web/static &amp;&amp; \&#xA;    mkdir -p /vol/web/media&#xA;&#xA;CMD python manage.py wait_for_db &amp;&amp; python manage.py collectstatic --noinput &amp;&amp; python manage.py migrate &amp;&amp; gunicorn project.wsgi:application --bind 0.0.0.0:$PORT&#xA;&#xA;</code></pre>&#xA;<p>nginx.conf (the $PORT variable here is assigned by Heroku and available as an env variable. Heroku is where I'm deploying all this.</p>&#xA;<pre><code>upstream app {&#xA;    server web:$PORT;&#xA;}&#xA;&#xA;server {&#xA;&#xA;    listen 80;&#xA;&#xA;    location /static {&#xA;        alias /vol/static;&#xA;    }&#xA;    &#xA;    location / {&#xA;        proxy_pass              http://app;&#xA;        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;&#xA;        proxy_set_header        Host web;&#xA;        proxy_redirect          off;&#xA;        client_max_body_size    10M;&#xA;    }&#xA;&#xA;    location /ws/ {&#xA;        proxy_set_header Host               $http_host;&#xA;        proxy_set_header X-Real-IP          $remote_addr;&#xA;        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;&#xA;        proxy_set_header X-Forwarded-Host   $server_name;&#xA;        proxy_set_header X-Forwarded-Proto  $scheme;&#xA;        proxy_set_header X-Url-Scheme       $scheme;&#xA;        proxy_redirect off;&#xA;&#xA;        proxy_http_version 1.1;&#xA;        proxy_set_header Upgrade $http_upgrade;&#xA;        proxy_set_header Connection $connection_upgrade;&#xA;&#xA;        proxy_pass http://app;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Schema.py that handles subscriptions middleware</p>&#xA;<pre><code>schema = graphene.Schema(query=Query, mutation=Mutation,&#xA;                         subscription=Subscription)&#xA;&#xA;&#xA;def subscription_middleware(next_middleware, root, info, *args, **kwds):&#xA;    if(info.operation.name is not None and info.operation.name.value != &quot;IntrospectionQuery&quot;):&#xA;        print(&quot;Subscription Middleware report&quot;)&#xA;        print(&quot; user :&quot;, info.context.user)&#xA;        print(&quot; operation :&quot;, info.operation.operation)&#xA;        print(&quot; resource :&quot;, info.operation.name.value)&#xA;&#xA;    return next_middleware(root, info, *args, **kwds)&#xA;&#xA;&#xA;class MyGraphqlWsConsumer(channels_graphql_ws.GraphqlWsConsumer):&#xA;    async def on_connect(self, payload):&#xA;        self.scope[&quot;user&quot;] = self.scope[&quot;session&quot;]&#xA;        self.user = self.scope[&quot;user&quot;]&#xA;&#xA;    schema = schema&#xA;    middleware = [subscription_middleware]&#xA;</code></pre>&#xA;<p>Everything is working for me in local. In production all the regular http functions are working properly. But the websockets are failing.</p>&#xA;<p>One thing to note here is that in local I am able to use ws:// connections but in Heroku I can only use wss://, i.e. secure websocket connections. So I modify the request from the UI for this.</p>&#xA;<p>This is the error I keep seeing:-</p>&#xA;<pre><code>WebSocket connection to 'wss://&lt;link&gt;.herokuapp.com/ws/graphql/?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3RhZG1pbiIsInN1YiI6IjIiLCJleHAiOjE2NDA1MTA0OTMsIm9yaWdJYXQiOjE2NDA1MDY4OTN9.tGrHphndoCBtE73qHwe2un49fk8qJHej-6QfpYtztrs' failed: &#xA;SubscriptionClient.connect @ client.js:446&#xA;(anonymous) @ client.js:414&#xA;timer @ zone.js:2561&#xA;invokeTask @ zone.js:406&#xA;TaskTrackingZoneSpec.onInvokeTask @ task-tracking.js:73&#xA;invokeTask @ zone.js:405&#xA;onInvokeTask @ core.js:28645&#xA;invokeTask @ zone.js:405&#xA;runTask @ zone.js:178&#xA;invokeTask @ zone.js:487&#xA;ZoneTask.invoke @ zone.js:476&#xA;data.args.&lt;computed&gt; @ zone.js:2541&#xA;</code></pre>&#xA;<p>From the API logs, this is what I see:-</p>&#xA;<pre><code>2021-12-26T09:14:30.059249+00:00 heroku[router]: at=info method=GET path=&quot;/ws/graphql/?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImxlYXJuZXIiLCJzdWIiOiIzIiwiZXhwIjoxNjQwNTExMzUyLCJvcmlnSWF0IjoxNjQwNTA3NzUyfQ.DF16VMpJwIrlhRrnvkua6_-Mo-4CAJrgCPG7wjVSwfo&quot; host=&lt;link&gt;.herokuapp.com request_id=07e05b16-f96a-4655-bf15-3e6f3a70667a fwd=&quot;157.51.140.85&quot; dyno=web.1 connect=0ms service=2ms status=404 bytes=465 protocol=https&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/1Ijxd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1Ijxd.png"" alt=""From the networks tab I can see that it is making the websocket request which fails"" /></a></p>&#xA;<p>I did all of this following the documentation and various blogs online and I will admit that I don't know all the ins and outs of what I did. I simply followed instructions from various sources, primarily from documentation of the packages I'm using - django-channels and django-channels-graphql-ws.</p>&#xA;<p>I'm tired of trying to figure out where the issues exists. I've been wondering what to do about this for months now.</p>&#xA;",7981162,,,,2021-12-26 09:23:22,Django GraphQL subscriptions using websockets within the dockerized API works fine locally but fails in production,<django><asynchronous><websocket><graphql><graphql-subscriptions>,0,1,0,2021-12-26 09:23:22
70500559,1,,,0,63,"<p>In adonisjs i use <code>makeExecutableSchema ({ typeDefs, resolvers })</code> in schema so i used&#xA;<code>const { makeExecutableSchema } = require('graphql-tools')</code>&#xA;but i have error like  <code>Cannot use GraphQLSchema \&quot;[object GraphQLSchema]\&quot; from another module or realm</code> and in package.json i have</p>&#xA;<p>&quot;adonis-apollo-server&quot;: &quot;^1.0.2&quot;,&#xA;&quot;apollo-server&quot;: &quot;^3.5.0&quot;,&#xA;&quot;graphql&quot;: &quot;^15.8.0&quot;,&#xA;&quot;graphql-tools&quot;: &quot;^8.2.0&quot;</p>&#xA;",2304174,,180962,2021-12-28 16:17:08,2021-12-28 16:17:08,"adonis graphql has error cannot use GraphQLSchema \""[object GraphQLSchema]\"" from another module or realm",<node.js><graph><apollo-server><adonis.js>,0,0,0,2021-12-27 21:22:59
70520982,1,,,0,45,"<p>When using graphql.tsx created by <a href=""https://github.com/graphql-nexus/nexus"" rel=""nofollow noreferrer"">grqphql-nexus</a>, the following error occurs.</p>&#xA;<p>I had no problems using it with nextjs.&#xA;But, a problem occurred when I tried to apply it to <a href=""https://github.com/saltyshiomix/nextron"" rel=""nofollow noreferrer"">nextron</a>.</p>&#xA;<p>How can I solve the problem?</p>&#xA;<pre><code>import {useRemoveAllPostMutation} from '@graphql/generated/graphql'&#xA;&#xA;const [removeAllPostMutation, {data, loading, error}] = useRemoveAllPostMutation()&#xA;</code></pre>&#xA;<pre class=""lang-sh prettyprint-override""><code>error - ../graphql_/generated/graphql.tsx&#xA;Module parse failed: Unexpected token (3:7)&#xA;You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders&#xA;| import { gql } from '@apollo/client';&#xA;| import * as Apollo from '@apollo/client';&#xA;&gt; export type Maybe&lt;T&gt; = T | null;&#xA;| export type InputMaybe&lt;T&gt; = Maybe&lt;T&gt;;&#xA;| export type Exact&lt;T extends { [key: string]: unknown }&gt; = { [K in keyof T]: T[K] };&#xA;</code></pre>&#xA;",1502778,,,,2021-12-29 14:47:15,How can I use graphql.tsx generated by graqphql-nexus in electron?,<graphql><electron><nexus>,0,0,0,2021-12-29 14:47:15
70522114,2,,53192184,11,,"<h2>Feb, 2022 Update:</h2>&#xA;<p>I downgraded <strong>graphql</strong> to <strong>15.x</strong> then the problem was solved:</p>&#xA;<pre><code>npm install graphql@15.8.0&#xA;</code></pre>&#xA;<p>If you don't mind <strong>the specific version</strong>:</p>&#xA;<pre><code>npm install graphql@15&#xA;</code></pre>&#xA;<p>If you use <strong>&quot;yarn&quot;</strong>:</p>&#xA;<pre><code>yarn add graphql@15.8.0&#xA;</code></pre>&#xA;<p>If you don't mind <strong>the specific version</strong>:</p>&#xA;<pre><code>yarn add graphql@15&#xA;</code></pre>&#xA;",8172439,,8172439,2022-02-06 10:42:21,2022-02-06 10:42:21,"",,0,0,0,2021-12-29 16:20:38
70535088,1,,,-1,181,"<p>I am hosting Apollo Graphql Node.js server with mariadb on centos 8.</p>&#xA;<p>It is only hosting for API server.</p>&#xA;<p>So my client domain is bought from Namecheap and point to Cloudflare. So I add the api A record in Cloudflare DNS.</p>&#xA;<ol>&#xA;<li><p>DNS only mode</p>&#xA;<pre><code>http://api.domain.com:4000/graphql - it is working(I can query the data). &#xA;https://api.domain.com:4000/graphql - it is not working.&#xA;</code></pre>&#xA;</li>&#xA;<li><p>Proxied mode</p>&#xA;<pre><code>https://api.domain.com:4000/graphql - time out.   &#xA;https://api.domain.com/graphql - ssl is working but could not reach &#xA;to hosting server.&#xA;</code></pre>&#xA;</li>&#xA;</ol>&#xA;<p>How can I configure to work <a href=""https://api.domain.com/graphql"" rel=""nofollow noreferrer"">https://api.domain.com/graphql</a>&#xA;ssl without port no.</p>&#xA;<p>Cloudflare said that calling with port number is not working in Proxied mode.</p>&#xA;",1559116,,,,2021-12-30 18:09:13,Cloudflare ssl and proxied mode is not working,<centos><cloudflare><apollo-server>,1,0,0,2021-12-30 17:53:12
70535239,2,,70535088,1,,"<p>On Cloudflare, port <code>4000</code> can be used to proxy traffic (such as <code>https</code> requests) when configured as a <a href=""https://developers.cloudflare.com/spectrum/get-started"" rel=""nofollow noreferrer"">Cloudflare Spectrum</a> application.</p>&#xA;<p>The standard ports that are supported (without requiring Spectrum) are <a href=""https://developers.cloudflare.com/fundamentals/get-started/network-ports#network-ports-compatible-with-cloudflares-proxy"" rel=""nofollow noreferrer"">listed here</a>.</p>&#xA;<p>Alternatively, you could change the configured port of your own service from <code>4000</code> to one of the supported ports from the above link.</p>&#xA;",968570,,,,2021-12-30 18:09:13,"",,0,1,0,2021-12-30 18:09:13
70536601,2,,70304001,2,,<p>Downgrading to graphql@^15.8.0 resolved the issue for me</p>&#xA;,6284296,,,,2021-12-30 20:54:02,"",,0,0,0,2021-12-30 20:54:02
70543523,1,,,0,119,"<p>I am unable to run query requests with my local dGraph server.</p>&#xA;<p>I am running</p>&#xA;<ol>&#xA;<li>dGraph using docker compose with both zero and alpha</li>&#xA;<li>React client side frontend using apollo-client graphql for running queries.</li>&#xA;</ol>&#xA;<p>dGraph starts up fine, I have connected and run queries/mutations/etc through postman application, but when trying to run the exact same query through apollo it gives &quot;Unable to fetch&quot; error.</p>&#xA;<p>Any idea how I can configure either apollo or dGraph to accept CORS requests and ultimately run the query</p>&#xA;<p>Note - downloaded and ran the queries through apollo using the browser extension for allowing CORS requests and the UI then runs fine - pointing at the issue being something to do with the CORS configuration</p>&#xA;",3206236,,,,2022-05-07 15:08:09,CORS Error with dgraph and apollo graphql,<docker-compose><graphql><cors><apollo-client><dgraph>,1,0,0,2021-12-31 15:10:54
70553210,1,71060121,,5,1327,"<p>Well, I'm a little dumpy. I will try to explain my problem as clearly as possible.</p>&#xA;<p>I use Apollo client to do my GraphQL queries. I also use NextJS.&#xA;I have a page that needs to be rendered on the server side for SEO reasons.</p>&#xA;<p>So I have a <code>getProductFromSlug</code> function that allows me to execute my request.</p>&#xA;<pre><code>export const getProductFromSlug = async (slug: string) =&gt; {&#xA;  try {&#xA;    const { data, error } = await apolloClient.query&lt;{&#xA;      product: Product&#xA;    }&gt;({&#xA;      query: GET_PRODUCT_BY_SLUG_QUERY,&#xA;      variables: {&#xA;        slug,&#xA;      },&#xA;    })&#xA;&#xA;    if (error) {&#xA;      return { errors: [error.message] }&#xA;    }&#xA;&#xA;    if (!('product' in data) || data.product === null) {&#xA;      return { errors: ['Product with specified url not found'] }&#xA;    }&#xA;&#xA;    return {&#xA;      data,&#xA;    }&#xA;  } catch (error) {&#xA;    // @ts-ignore&#xA;    const formattedErrors: ApolloError = isApolloError(error)&#xA;      ? error.graphQLErrors.map((error) =&gt; error.message)&#xA;      : [`Unhandled error : ${error}`]&#xA;&#xA;    return {&#xA;      errors: formattedErrors,&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Here's <code>getServerSideProps</code> to pass data to page</p>&#xA;<pre><code>export const getServerSideProps = async (&#xA;  context: GetServerSidePropsContext&#xA;) =&gt; {&#xA;  // eslint-disable-next-line @typescript-eslint/ban-ts-comment&#xA;  // @ts-ignore&#xA;  const requestData = await getProductFromSlug(context.params.slug as string)&#xA;  return 'errors' in requestData&#xA;    ? { notFound: true, props: requestData }&#xA;    : { props: requestData }&#xA;}&#xA;</code></pre>&#xA;<p>The problem is that when I have a HTTP code 500 from the endpoint, the SSR is crashing and on Vercel, it's causing a serverless crash error.</p>&#xA;<blockquote>&#xA;<p>Error: Response not successful: Received status code 500&#xA;This error happened while generating the page. Any console logs will be displayed in the terminal window</p>&#xA;</blockquote>&#xA;<p>If needed, here's my entry point (_app.tsx):</p>&#xA;<pre><code>function MyApp(props: AppProps) {&#xA;  return (&#xA;    &lt;ApolloProvider client={apolloClient}&gt;&#xA;      &lt;RecoilRoot&gt;&#xA;        &lt;RecoilNexus /&gt;&#xA;        &lt;AuthenticationFromStorage /&gt;&#xA;        &lt;Layout&gt;&#xA;          &lt;props.Component {...props.pageProps} /&gt;&#xA;        &lt;/Layout&gt;&#xA;      &lt;/RecoilRoot&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  )&#xA;}&#xA;</code></pre>&#xA;<p>You can see my Apollo Client here : <a href=""https://gist.github.com/SirMishaa/d67e7229307b77b43a0b594d0c9e6943"" rel=""noreferrer"">https://gist.github.com/SirMishaa/d67e7229307b77b43a0b594d0c9e6943</a></p>&#xA;<p>Stack trace of <code>yarn run dev</code> (next dev -p 3005) :</p>&#xA;<pre><code>ServerError: Response not successful: Received status code 500&#xA;    at Object.throwServerError (C:\Users\misha\Documents\dev\rekk-next\node_modules\@apollo\client\link\utils\utils.cjs:45:17)&#xA;    at C:\Users\misha\Documents\dev\rekk-next\node_modules\@apollo\client\link\http\http.cjs:31:19&#xA;    at runMicrotasks (&lt;anonymous&gt;)&#xA;    at processTicksAndRejections (node:internal/process/task_queues:96:5)&#xA;error - uncaughtException: ServerError: Response not successful: Received status code 500&#xA;error Command failed with exit code 1.&#xA;</code></pre>&#xA;<p><strong>NOTE</strong> :&#xA;<strong>After some try with console.log in try and catch scope, it shows nothing in the Next SSR console, so the internal error of Apollo is not caught for some reason.</strong></p>&#xA;<p>I appreciate your help, thank you!</p>&#xA;<p><a href=""https://i.imgur.com/3zV7TFq.png"" rel=""noreferrer""><img src=""https://i.imgur.com/3zV7TFq.png"" alt=""enter image description here"" /></a></p>&#xA;",10230961,,10230961,2022-02-11 03:58:22,2022-02-15 16:09:44,SSR crashing in Next.js on unsuccessful GraphQL request (HTTP code 500) using Apollo Client,<reactjs><graphql><next.js><apollo><apollo-client>,1,12,0,2022-01-02 02:22:40
70556147,1,,,0,1023,"<p>I am hosting my Apollo Graphql api on digital ocean centos 8.&#xA;I can call the api using http://ip:4000/graphql</p>&#xA;<p>So now I want to replace with ip to subdomain an point to digital ocean ip from cloudflare.</p>&#xA;<p>I called <a href=""https://api.subdomain.com/graphql"" rel=""nofollow noreferrer"">https://api.subdomain.com/graphql</a> but give HTTP ERROR 502.</p>&#xA;<p>May I know what configuration is wrong in caddy server since my qraphql server is up and running correctly.</p>&#xA;<p>docker-compose.yml</p>&#xA;<pre><code>version: &quot;3.7&quot;&#xA;services:&#xA;  data_api:&#xA;    container_name: mycontianer-data-api&#xA;    image: asia.gcr.io/projectid/myimage/data-api&#xA;    expose:&#xA;      - 4000&#xA;    ports:&#xA;      - &quot;4000:4000&quot;&#xA;    depends_on:&#xA;      - db&#xA;    environment:&#xA;      DATABASE_URL: mysql://url&#xA;      ACCESS_TOKEN_SECRET: xx&#xA;      REFRESH_TOKEN_SECRET: xx&#xA;    networks:&#xA;      - gita&#xA;&#xA;  db:&#xA;    container_name: mycontainer-db&#xA;    image: asia.gcr.io/projectid/myimage/db&#xA;    restart: always&#xA;    volumes:&#xA;      - ./db/data/:/var/lib/mariadb/data&#xA;    environment:&#xA;      MARIADB_ROOT_PASSWORD: xxxx&#xA;      MARIADB_DATABASE: mydb&#xA;    expose:&#xA;      - 3306&#xA;    ports:&#xA;      - &quot;3307:3306&quot;&#xA;    networks:&#xA;      - gita&#xA;&#xA;  # Run the caddy server        &#xA;  caddy:&#xA;      container_name: mycontainer-caddy-service&#xA;      image: caddy/caddy:2.4.6-alpine&#xA;      restart: unless-stopped&#xA;      ports:&#xA;        - &quot;80:80&quot;&#xA;        - &quot;443:443&quot; &#xA;      volumes:            &#xA;        - $PWD/Caddyfile:/etc/caddy/Caddyfile&#xA;        - $PWD/site:/srv&#xA;        - caddy_data:/data&#xA;        - caddy_config:/config&#xA;volumes:&#xA;  caddy_data:&#xA;  caddy_config: &#xA;&#xA;networks:&#xA;  gita:&#xA;</code></pre>&#xA;<p>Caddyfile</p>&#xA;<pre><code># Replace example.com with your application's domain&#xA;api.mydomain.com {&#xA;  # node-app:4000 is the docker container running the Node.js application&#xA;  # in our case it's exposed on port 4000&#xA;  reverse_proxy data_api:4000  {&#xA;    header_down Strict-Transport-Security max-age=31536000;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>error log</p>&#xA;<pre><code>{&quot;level&quot;:&quot;error&quot;,&quot;ts&quot;:1641130172.422903,&quot;logger&quot;:&quot;http.log.error&quot;,&quot;ms g&quot;:&quot;dial tcp: lookup data_api on 127.0.0.11:53: no such host&quot;,&quot;request&quot;:{&quot;remote_addr&quot;:&quot;x.x.x.x:63678&quot;,&quot;proto&quot;:&quot;HTTP/2.0&quot;,&quot;method&quot;:&quot;GET&quot;,&quot;host&quot;:&quot;api.mydomain.com&quot;,&quot;uri&quot;:&quot;/graphql&quot;,&quot;headers&quot;:{&quot;Sec-Ch-Ua-Mobile&quot;:[&quot;?0&quot;],&quot;Upgrade-Insecure-Requests&quot;:[&quot;1&quot;],&quot;Sec-Fetch-User&quot;:[&quot;?1&quot;],&quot;Accept-Language&quot;:[&quot;en-GB,en-US;q=0.9,en;q=0.8&quot;],&quot;Sec-Ch-Ua&quot;:[&quot;\&quot; Not A;Brand\&quot;;v=\&quot;99\&quot;, \&quot;Chromium\&quot;;v=\&quot;96\&quot;, \&quot;Google Chrome\&quot;;v=\&quot;96\&quot;&quot;],&quot;Sec-Ch-Ua-Platform&quot;:[&quot;\&quot;macOS\&quot;&quot;],&quot;User-Agent&quot;:[&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36&quot;],&quot;Accept&quot;:[&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;],&quot;Sec-Fetch-Site&quot;:[&quot;none&quot;],&quot;Sec-Fetch-Mode&quot;:[&quot;navigate&quot;],&quot;Sec-Fetch-Dest&quot;:[&quot;document&quot;],&quot;Accept-Encoding&quot;:[&quot;gzip, deflate, br&quot;],&quot;Cache-Control&quot;:[&quot;max-age=0&quot;]},&quot;tls&quot;:{&quot;resumed&quot;:false,&quot;version&quot;:772,&quot;cipher_suite&quot;:4865,&quot;proto&quot;:&quot;h2&quot;,&quot;proto_mutual&quot;:true,&quot;server_name&quot;:&quot;api.mydomain.com&quot;}},&quot;duration&quot;:0.008050226,&quot;status&quot;:502,&quot;err_id&quot;:&quot;ez8m3vaqk&quot;,&quot;err_trace&quot;:&quot;reverseproxy.statusError (reverseproxy.go:886)&quot;}&#xA;</code></pre>&#xA;",1559116,,1559116,2022-01-02 13:37:39,2022-01-02 18:55:28,Caddy server and subdomain point to port not working,<node.js><docker-compose><graphql><caddy>,1,0,0,2022-01-02 12:55:37
70557806,2,,68022116,0,,"<p>Stuck with the same problem and just solved with <a href=""https://docs.docker.com/compose/compose-file/compose-file-v3/#aliases"" rel=""nofollow noreferrer"">network aliases</a> feature.</p>&#xA;<p>My <code>docker-compose.yml</code> simplified example:</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>version: '3.9'&#xA;services:&#xA;  web:&#xA;    build: .&#xA;    image: my_image&#xA;    container_name: web&#xA;    ports:&#xA;      - 3000:3000&#xA;    networks:&#xA;      - frontend&#xA;  nginx:&#xA;    depends_on:&#xA;      - cms&#xA;      - web&#xA;    image: nginx:1.20-alpine&#xA;    container_name: nginx&#xA;    ports:&#xA;      - 80:80&#xA;    networks:&#xA;      frontend:&#xA;        aliases:&#xA;          - nginx&#xA;          # Now you can request nginx with http://wp.site.local/graphql from frontend container! ;)&#xA;          # nginx proxied wp.site.local to cms container&#xA;          - wp.site.local&#xA;&#xA;  cms:&#xA;    depends_on:&#xA;      - db&#xA;    image: wordpress:5.8.2-fpm-alpine&#xA;    container_name: cms&#xA;    networks:&#xA;      - frontend&#xA;      - backend&#xA;&#xA;  db:&#xA;    image: mysql:8.0&#xA;    container_name: db&#xA;    networks:&#xA;      - backend&#xA;&#xA;</code></pre>&#xA;<p>If you need details about <code>nginx.conf</code> please let me know</p>&#xA;",482747,,,,2022-01-02 16:43:30,"",,0,0,0,2022-01-02 16:43:30
70574614,2,,70570296,0,,"<p>It seems to be a known bug as per:</p>&#xA;<ul>&#xA;<li><a href=""https://github.com/strapi/gatsby-source-strapi/issues/256"" rel=""nofollow noreferrer"">https://github.com/strapi/gatsby-source-strapi/issues/256</a></li>&#xA;<li><a href=""https://github.com/strapi/gatsby-source-strapi/issues/257"" rel=""nofollow noreferrer"">https://github.com/strapi/gatsby-source-strapi/issues/257</a></li>&#xA;<li><a href=""https://github.com/strapi/gatsby-source-strapi/issues/252"" rel=""nofollow noreferrer"">https://github.com/strapi/gatsby-source-strapi/issues/252</a></li>&#xA;</ul>&#xA;<p>Apparently, is fixed in this <a href=""https://github.com/strapi/gatsby-source-strapi/pull/258"" rel=""nofollow noreferrer"">pull-request</a> so there's no &quot;definitive&quot; solution right now.</p>&#xA;<p>What you can do in the meantime is:</p>&#xA;<ul>&#xA;<li>Update to Gatsby 4 (at least <code>4.3.0-next.1</code>)</li>&#xA;<li>Downgrading to Gatsby 3</li>&#xA;<li>Install the fork while it's not being merged to the Strapi release:&#xA;<pre><code>npm install marceligrabowski/gatsby-source-strapi#v4_prepublish&#xA;</code></pre>&#xA;</li>&#xA;</ul>&#xA;",5585371,,5585371,2022-01-04 08:05:31,2022-01-04 08:05:31,"",,0,0,0,2022-01-04 06:01:33
70576419,1,,,1,908,"<p>I spend much time finding the solution but didn't get the proper solution.</p>&#xA;<blockquote>&#xA;<p>Uncaught SyntaxError: Unexpected token '&lt;,' Manifest: Line: 1, column:&#xA;1, Syntax error.</p>&#xA;</blockquote>&#xA;<blockquote>&#xA;<p>When I deploy the React on Netlify it render properly But when I try to&#xA;run the client-side from my local computer or also in <em>Heroku</em> it&#xA;giving me the same error</p>&#xA;</blockquote>&#xA;<p><a href=""https://i.stack.imgur.com/J1SdW.png"" rel=""nofollow noreferrer"">My folder structure here </a></p>&#xA;<p><strong>server-side code:</strong></p>&#xA;<p><em>server.js</em></p>&#xA;<pre><code>const express = require('express');&#xA;const app = require(&quot;./app&quot;)&#xA;const { ApolloServer, } = require('apollo-server-express');&#xA;const { createServer } = require('http')&#xA;const { makeExecutableSchema } = require('@graphql-tools/schema');&#xA;const jwt = require('jsonwebtoken');&#xA;const path = require('path');&#xA;const socket = require('./controllers/Socket.io');&#xA;const typeDefs = require('./Graphql/TypeDefs/app');&#xA;const resolvers = require('./Graphql/Resolvers/app');&#xA;const { ApolloServerPluginLandingPageDisabled } = require('apollo-server-core');&#xA;&#xA;&#xA;const PORT = process.env.PORT || 5000;&#xA;&#xA;app.use(express.static(path.join(__dirname, '../client/build')))&#xA;app.get(&quot;*&quot;, (req, res) =&gt; {&#xA;    res.sendFile(path.resolve(__dirname, '../client/build/index.html'))&#xA;})&#xA;&#xA;&#xA;const StartServer = async () =&gt; {&#xA;    try {&#xA;        const httpServer = createServer(app)&#xA;&#xA;        const getUser = token =&gt; {&#xA;            try {&#xA;                if (token) {&#xA;                    return jwt.verify(token, process.env.JWT_SECRET_KEY)&#xA;                }&#xA;                return null&#xA;            } catch (err) {&#xA;                return null&#xA;            }&#xA;        }&#xA;&#xA;        const schema = makeExecutableSchema({ typeDefs, resolvers, });&#xA;&#xA;        const server = new ApolloServer({&#xA;            schema,&#xA;            context: ({ req, res }) =&gt; {&#xA;                const token = req.cookies.token || &quot;&quot;&#xA;                const user = getUser(token)&#xA;                return { req, res, user }&#xA;            },&#xA;            plugins: [&#xA;                ApolloServerPluginLandingPageDisabled(),&#xA;            ],&#xA;        })&#xA;&#xA;        await server.start()&#xA;        server.applyMiddleware({&#xA;            app,&#xA;&#xA;            cors: {&#xA;                origin: '/',&#xA;                credentials: true&#xA;            }&#xA;        })&#xA;&#xA;        const getServer = httpServer.listen(PORT, () =&gt; console.log('server is running on port ', + PORT))&#xA;&#xA;        socket(getServer)&#xA;&#xA;    } catch (error) {&#xA;        throw new Error(error.message)&#xA;    }&#xA;}&#xA;&#xA;StartServer()&#xA;</code></pre>&#xA;<p>app.js</p>&#xA;<pre><code>const express = require(&quot;express&quot;);&#xA;const cors = require('cors');&#xA;const cookieParser = require('cookie-parser');&#xA;const mongoose = require('mongoose');&#xA;&#xA;const app = express();&#xA;&#xA;if (process.env.NODE_ENV !== &quot;PRODUCTION&quot;) {&#xA;    require(&quot;dotenv&quot;).config();&#xA;}&#xA;&#xA;mongoose.connect(process.env.MONGODB_DATABASE_URI).then(success =&gt; {&#xA;    console.log(&quot;Connected successfully....&quot;)&#xA;}).catch(err =&gt; {&#xA;    console.log(err.messege);&#xA;    console.log(&quot;Fail to connect....&quot;)&#xA;})&#xA;&#xA;&#xA;// use this on client &#xA;app.use(cors({&#xA;    credentials: true,&#xA;}))&#xA;&#xA;app.use(express.json({ limit: '50mb' }))&#xA;app.use(cookieParser());&#xA;app.use(express.urlencoded({ extended: true, limit: '50mb' }));&#xA;&#xA;&#xA;&#xA;module.exports = app;&#xA;</code></pre>&#xA;<p><em>package.js of server:</em></p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;my-app&quot;,&#xA;  &quot;version&quot;: &quot;1.0.1&quot;,&#xA;  &quot;description&quot;: &quot;&quot;,&#xA;  &quot;main&quot;: &quot;backend/server.js&quot;,&#xA;  &quot;scripts&quot;: {&#xA;    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,&#xA;    &quot;start&quot;: &quot;node backend/server.js&quot;,&#xA;    &quot;heroku-postbuild&quot;: &quot;NPM_CONFIG_PRODUCTION=false &amp;&amp; npm install --prefix client &amp;&amp; npm run build --prefix client&quot;&#xA;  },&#xA;  &quot;keywords&quot;: [],&#xA;  &quot;author&quot;: &quot;&quot;,&#xA;  &quot;license&quot;: &quot;ISC&quot;,&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@graphql-tools/schema&quot;: &quot;^8.3.1&quot;,&#xA;    &quot;apollo-server-core&quot;: &quot;^3.6.1&quot;,&#xA;    &quot;apollo-server-express&quot;: &quot;^3.5.0&quot;,&#xA;    &quot;bcryptjs&quot;: &quot;^2.4.3&quot;,&#xA;    &quot;cloudinary&quot;: &quot;^1.27.1&quot;,&#xA;    &quot;cookie-parser&quot;: &quot;^1.4.6&quot;,&#xA;    &quot;cors&quot;: &quot;^2.8.5&quot;,&#xA;    &quot;crypto-js&quot;: &quot;^4.1.1&quot;,&#xA;    &quot;dotenv&quot;: &quot;^10.0.0&quot;,&#xA;    &quot;express&quot;: &quot;^4.17.1&quot;,&#xA;    &quot;graphql&quot;: &quot;^16.1.0&quot;,&#xA;    &quot;graphql-subscriptions&quot;: &quot;^2.0.0&quot;,&#xA;    &quot;jsonwebtoken&quot;: &quot;^8.5.1&quot;,&#xA;    &quot;mongoose&quot;: &quot;^6.0.14&quot;,&#xA;    &quot;nodemailer&quot;: &quot;^6.7.2&quot;,&#xA;    &quot;socket.io&quot;: &quot;^4.4.0&quot;,&#xA;    &quot;subscriptions-transport-ws&quot;: &quot;^0.11.0&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><strong>package.json of Client-side:</strong></p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;app&quot;,&#xA;  &quot;version&quot;: &quot;1.1.0&quot;,&#xA;  &quot;private&quot;: true,&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@apollo/client&quot;: &quot;^3.5.6&quot;,&#xA;    &quot;@emotion/react&quot;: &quot;^11.7.1&quot;,&#xA;    &quot;@emotion/styled&quot;: &quot;^11.6.0&quot;,&#xA;    &quot;@mui/icons-material&quot;: &quot;^5.2.1&quot;,&#xA;    &quot;@mui/material&quot;: &quot;^5.2.3&quot;,&#xA;    &quot;@testing-library/jest-dom&quot;: &quot;^5.16.1&quot;,&#xA;    &quot;@testing-library/react&quot;: &quot;^11.2.7&quot;,&#xA;    &quot;@testing-library/user-event&quot;: &quot;^12.8.3&quot;,&#xA;    &quot;graphql&quot;: &quot;^16.1.0&quot;,&#xA;    &quot;react&quot;: &quot;^17.0.2&quot;,&#xA;    &quot;react-dom&quot;: &quot;^17.0.2&quot;,&#xA;    &quot;react-router-dom&quot;: &quot;^6.1.1&quot;,&#xA;    &quot;react-scripts&quot;: &quot;4.0.3&quot;,&#xA;    &quot;socket.io-client&quot;: &quot;^4.4.0&quot;,&#xA;    &quot;subscriptions-transport-ws&quot;: &quot;^0.11.0&quot;,&#xA;    &quot;validator&quot;: &quot;^13.7.0&quot;,&#xA;    &quot;web-vitals&quot;: &quot;^1.1.2&quot;&#xA;  },&#xA;  &quot;scripts&quot;: {&#xA;    &quot;start&quot;: &quot;react-scripts start&quot;,&#xA;    &quot;build&quot;: &quot;react-scripts build&quot;,&#xA;    &quot;test&quot;: &quot;react-scripts test&quot;,&#xA;    &quot;eject&quot;: &quot;react-scripts eject&quot;&#xA;  },&#xA;  &quot;eslintConfig&quot;: {&#xA;    &quot;extends&quot;: [&#xA;      &quot;react-app&quot;,&#xA;      &quot;react-app/jest&quot;&#xA;    ]&#xA;  },&#xA;  &quot;browserslist&quot;: {&#xA;    &quot;production&quot;: [&#xA;      &quot;&gt;0.2%&quot;,&#xA;      &quot;not dead&quot;,&#xA;      &quot;not op_mini all&quot;&#xA;    ],&#xA;    &quot;development&quot;: [&#xA;      &quot;last 1 chrome version&quot;,&#xA;      &quot;last 1 firefox version&quot;,&#xA;      &quot;last 1 safari version&quot;&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>How can I fixed it, help</p>&#xA;",16337614,,,,2022-01-04 14:10:26,Uncaught SyntaxError: Unexpected token '<' when serving the react,<node.js><reactjs><express><graphql>,1,5,0,2022-01-04 09:13:03
70588239,2,,70588128,0,,<p>You can use NVM(Node Version Manager).</p>&#xA;<p>**First Step **</p>&#xA;<pre><code>curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash&#xA;</code></pre>&#xA;<p><strong>Second Step</strong></p>&#xA;<p>Install Specific Version Using NVM</p>&#xA;<pre><code>nvm install &lt;version&gt;&#xA;</code></pre>&#xA;<p>if you are getting any error of nvm use below code</p>&#xA;<pre><code>source ~/.nvm/nvm.sh&#xA;</code></pre>&#xA;<p>then again follow the second step</p>&#xA;<p><strong>Third step</strong></p>&#xA;<p>use this below command</p>&#xA;<pre><code>nvm use &lt;version&gt;&#xA;</code></pre>&#xA;<p>then check the version</p>&#xA;<pre><code>node -v&#xA;</code></pre>&#xA;,15445828,,,,2022-01-05 05:36:50,"",,0,0,0,2022-01-05 05:36:50
70600324,2,,37397886,0,,"<p>The <a href=""https://www.npmjs.com/package/graphql"" rel=""nofollow noreferrer"">graphql</a>  npm package's <code>IntrospectionQuery</code> <a href=""https://github.com/graphql/graphql-js/blob/29b811fca5f726c9a3aa1d979c70ecbced8b4ec8/src/utilities/getIntrospectionQuery.ts#L37-L164"" rel=""nofollow noreferrer"">does</a></p>&#xA;<pre><code>query IntrospectionQuery {&#xA;    __schema {&#xA;        queryType {&#xA;            name&#xA;        }&#xA;        mutationType {&#xA;            name&#xA;        }&#xA;        subscriptionType {&#xA;            name&#xA;        }&#xA;        types {&#xA;            ...FullType&#xA;        }&#xA;        directives {&#xA;            name&#xA;            description&#xA;&#xA;            locations&#xA;            args {&#xA;                ...InputValue&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;fragment FullType on __Type {&#xA;    kind&#xA;    name&#xA;    description&#xA;&#xA;    fields(includeDeprecated: true) {&#xA;        name&#xA;        description&#xA;        args {&#xA;            ...InputValue&#xA;        }&#xA;        type {&#xA;            ...TypeRef&#xA;        }&#xA;        isDeprecated&#xA;        deprecationReason&#xA;    }&#xA;    inputFields {&#xA;        ...InputValue&#xA;    }&#xA;    interfaces {&#xA;        ...TypeRef&#xA;    }&#xA;    enumValues(includeDeprecated: true) {&#xA;        name&#xA;        description&#xA;        isDeprecated&#xA;        deprecationReason&#xA;    }&#xA;    possibleTypes {&#xA;        ...TypeRef&#xA;    }&#xA;}&#xA;&#xA;fragment InputValue on __InputValue {&#xA;    name&#xA;    description&#xA;    type {&#xA;        ...TypeRef&#xA;    }&#xA;    defaultValue&#xA;}&#xA;&#xA;fragment TypeRef on __Type {&#xA;    kind&#xA;    name&#xA;    ofType {&#xA;        kind&#xA;        name&#xA;        ofType {&#xA;            kind&#xA;            name&#xA;            ofType {&#xA;                kind&#xA;                name&#xA;                ofType {&#xA;                    kind&#xA;                    name&#xA;                    ofType {&#xA;                        kind&#xA;                        name&#xA;                        ofType {&#xA;                            kind&#xA;                            name&#xA;                            ofType {&#xA;                                kind&#xA;                                name&#xA;                            }&#xA;                        }&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://github.com/graphql/graphql-js/blob/29b811fca5f726c9a3aa1d979c70ecbced8b4ec8/src/utilities/getIntrospectionQuery.ts#L37-L164"" rel=""nofollow noreferrer"">source</a></p>&#xA;",6100005,,6100005,2022-01-05 23:27:32,2022-01-05 23:27:32,"",,0,0,0,2022-01-05 22:25:57
70611411,2,,70611153,0,,"<p>It seems it is not fault of your code in the frontend. You should check <code>user</code> in <code>console</code>. It may <code>user.novels</code> contain an empty objects caused an error reading <code>novel.name</code>, like this:</p>&#xA;<pre><code>{&#xA;  user: {&#xA;    _id: ...&#xA;    name: ...&#xA;    novels: [&#xA;      null or {}, // novel is null so reading novel.name cause the error. &#xA;      {&#xA;        _id: ...&#xA;        name: ...&#xA;        author: ...&#xA;        rank: ...&#xA;        isComplete: ...&#xA;      }&#xA;    ],&#xA;    ...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>However you can check this in frontend, but technically these empty objects should not be in your response from backend and should fix them.</p>&#xA;",13241358,,13241358,2022-01-07 00:40:00,2022-01-07 00:40:00,"",,0,4,0,2022-01-06 17:49:57
70614186,2,,51788017,-1,,"<p>AppSync released this enhancement today: <a href=""https://aws.amazon.com/blogs/mobile/introducing-configurable-batching-size-for-aws-appsync-lambda-resolvers/"" rel=""nofollow noreferrer"">https://aws.amazon.com/blogs/mobile/introducing-configurable-batching-size-for-aws-appsync-lambda-resolvers/</a></p>&#xA;",17855722,,,,2022-01-06 22:06:17,"",,0,2,0,2022-01-06 22:06:17
70615613,1,70615715,,8,1336,"<p>I'm attempting to create an <code>apollo client</code> plugin for a <code>Nuxt 3</code> application. It's currently throwing an error regarding a package called <code>ts-invariant</code>:</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>file:///Users/[my name]/Repositories/[project]/node_modules/@apollo/client/utilities/globals/fix-graphql.js:1&#xA;import { remove } from &quot;ts-invariant/process/index.js&quot;;&#xA;         ^^^^^^&#xA;SyntaxError: Named export 'remove' not found. The requested module 'ts-invariant/process/index.js' is a CommonJS module, which may not support all module.exports as named exports.&#xA;CommonJS modules can always be imported via the default export, for example using:&#xA;&#xA;import pkg from 'ts-invariant/process/index.js';&#xA;const { remove } = pkg;&#xA;&#xA;    at ModuleJob._instantiate (node:internal/modules/esm/module_job:124:21)&#xA;    at async ModuleJob.run (node:internal/modules/esm/module_job:181:5)&#xA;    at async Promise.all (index 0)&#xA;    at async ESMLoader.import (node:internal/modules/esm/loader:281:24)&#xA;    at async __instantiateModule__ (file:///Users/[my name]/Repositories/[project]/.nuxt/dist/server/server.mjs:4550:3)&#xA;[vite dev] Error loading external &quot;/Users/[my name]/Repositories/[project]/node_modules/@apollo/client/core/index.js&quot;.&#xA;  at file://./.nuxt/dist/server/server.mjs:3170:289  &#xA;  at async __instantiateModule__ (file://./.nuxt/dist/server/server.mjs:4550:3)&#xA;</code></pre>&#xA;<p><strong>I feel like I know enough about this error to know it has something to do with how Nuxt 3 deals with ESM, but I can't be for certain.</strong></p>&#xA;<p>Here's the nuxt plugin: <br />&#xA;<code>plugins/apollo-client.js</code></p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { defineNuxtPlugin } from &quot;#app&quot;&#xA;import { ApolloClient, InMemoryCache } from &quot;@apollo/client/core&quot;&#xA;import { DefaultApolloClient } from &quot;@vue/apollo-composable&quot;&#xA;&#xA;export default defineNuxtPlugin((nuxtApp) =&gt; {&#xA;  const config = useRuntimeConfig()&#xA;  const apolloClient = new ApolloClient({&#xA;    uri: config.PUBLIC_API_ENDPOINT,&#xA;    cache: new InMemoryCache(),&#xA;  })&#xA;  nuxtApp.vueApp.provide(DefaultApolloClient, apolloClient)&#xA;})&#xA;</code></pre>&#xA;<p>In a normal scenario, I might use the nuxt-apollo community module, but it is currently afk regarding a <code>nuxt 3</code> port, so a plugin it is.</p>&#xA;<p>Here's some documentation I relied on for my plugin:<br />&#xA;<a href=""https://v4.apollo.vuejs.org/guide-composable/setup.html#vue-3"" rel=""noreferrer"">https://v4.apollo.vuejs.org/guide-composable/setup.html#vue-3</a><br />&#xA;<a href=""https://v3.nuxtjs.org/docs/directory-structure/plugins"" rel=""noreferrer"">https://v3.nuxtjs.org/docs/directory-structure/plugins</a></p>&#xA;",12027829,,,,2022-03-12 09:45:58,"Apollo Client ""Named export 'remove' not found""",<javascript><vue.js><nuxt.js><apollo-client><nuxtjs3>,2,1,0,2022-01-07 01:34:02
70624279,2,,67724669,1,,"<p>Found this issue, after trying practice by GraphQL tutorial on Youtube.&#xA;To solve it, you need to update your mongoose model to the last version.</p>&#xA;",2408962,,,,2022-01-07 16:25:26,"",,0,1,0,2022-01-07 16:25:26
70640049,2,,69710220,5,,"<p>It looks like the request doesn't contain some <a href=""https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html"" rel=""noreferrer"">AWS lambda specific event params</a> when using Netlify CLI while <code>@vendia/serverless-express</code> <a href=""https://github.com/vendia/serverless-express/blob/mainline/src/event-sources/utils.js#L88"" rel=""noreferrer"">expects them</a>. I was able to fix a similar case in local dev environment with this:</p>&#xA;<pre><code>const serverHandler = server.createHandler({&#xA;  cors: {&#xA;    origin: '*'&#xA;  }&#xA;});&#xA;&#xA;exports.handler = (event, context, callback) =&gt; {&#xA;  return serverHandler(&#xA;    {&#xA;      ...event,&#xA;      requestContext: event.requestContext || {},&#xA;    },&#xA;    context,&#xA;    callback&#xA;  );&#xA;}&#xA;</code></pre>&#xA;",17879589,,17879589,2022-01-09 09:52:21,2022-01-09 09:52:21,"",,0,1,0,2022-01-09 09:44:02
70667821,1,,,2,550,"<p>I have downloaded the chrome extension Apollo Client Devtools. However it is not visible when devtools are open. Is there a way of adding this or is it a bug? <a href=""https://i.stack.imgur.com/Ub6tu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ub6tu.png"" alt=""enter image description here"" /></a></p>&#xA;",11371963,,,,2022-10-18 14:36:24,Add apollo client dev tools to chrome developer tools,<google-chrome-devtools><apollo><apollo-client>,3,0,0,2022-01-11 13:41:39
70668663,1,,,0,151,"<p>I have a graphql ApolloServer  running locally using serverless on Windows 11 inside WSL2 Ubuntu.</p>&#xA;<p>When I open the url it gives, it shows the Apollo Page asking me if I want to query my server. The url, is http://localhost:4500/local/graphql.</p>&#xA;<p>The issue starts when I go to the playground and it seems it cant connect - there are no errors on console, no messages, nothing. I tried using the diagnostic tool they provide on the messages, but it just hangs up when using.</p>&#xA;<p>I read that it might be because localhost is not accessible from outside windows or something.</p>&#xA;<p>The cherry on top is that it works flawlessly if I run it on a Macbook. So the code is not the issue.</p>&#xA;<p>Do I need to forward ports for WSL2? I thought that was done automagically by the system to be accessible, but I cant seem to figure out. Any thoughts on what I can look into ?</p>&#xA;",3512854,,,,2022-01-11 14:42:32,How can I use GraphQl PLayground on a GraphqL Server running in WSl2 Ubuntu?,<windows><graphql><apollo><wsl-2>,0,0,0,2022-01-11 14:42:32
70679585,2,,69046284,0,,"<p>Try using 127.0.0.1 instead of localhost. It worked for me. Also If you have cached queries and mutations that you still want to use, switching back to localhost from 127.0.0.1 will have the localhost working again.</p>&#xA;",10117334,,,,2022-01-12 10:01:41,"",,0,0,0,2022-01-12 10:01:41
70688442,1,,,5,494,"<p>in my react/typescript application I use graphql-request and everything works fine. Just when I compile the application I get a few warnings in the terminal. Did somebody experience the same? The code parts that trigger the warnings are the following:</p>&#xA;<pre><code>import { gql, request } from &quot;graphql-request&quot;&#xA;&#xA;const [id, setId] = useState&lt;number | undefined&gt;(undefined);&#xA;&#xA;const query = gql&#xA;    `query {&#xA;      id &#xA;    }`;&#xA;  useEffect(() =&gt; &#xA;  {&#xA;    request(`${endpoint}/maps`, query).then((data) =&gt; setId(data.id))&#xA;      .catch((error) =&gt; console.error(&quot;Could not load id&quot;, error))&#xA;      .finally(() =&gt; setLoading(false));&#xA;  }, [query]);&#xA;</code></pre>&#xA;<p>These are the warnings I get:</p>&#xA;<pre><code>WARNING in ./node_modules/graphql-request/dist/createRequestBody.js&#xA;Module Warning (from ./node_modules/source-map-loader/dist/cjs.js):&#xA;Failed to parse source map from '/home/lukas/projects/bubble/bubble-os/node_modules/graphql-request/src/createRequestBody.ts' file: Error: ENOENT: no such file or directory, open '/home/lukas/projects/bubble/bubble-os/node_modules/graphql-request/src/createRequestBody.ts'&#xA; @ ./node_modules/graphql-request/dist/index.js 217:42-72&#xA; @ ./src/map_viewer/map_overview.tsx 23:0-47 61:16-19 80:4-11&#xA; @ ./src/dashboard/dashboard.tsx 25:0-51 299:46-55&#xA; @ ./src/App.tsx 4:0-46 10:35-44&#xA; @ ./src/index.tsx 7:0-24 25:33-36&#xA;&#xA;WARNING in ./node_modules/graphql-request/dist/index.js&#xA;Module Warning (from ./node_modules/source-map-loader/dist/cjs.js):&#xA;Failed to parse source map from '/home/lukas/projects/bubble/bubble-os/node_modules/graphql-request/src/index.ts' file: Error: ENOENT: no such file or directory, open '/home/lukas/projects/bubble/bubble-os/node_modules/graphql-request/src/index.ts'&#xA; @ ./src/map_viewer/map_overview.tsx 23:0-47 61:16-19 80:4-11&#xA; @ ./src/dashboard/dashboard.tsx 25:0-51 299:46-55&#xA; @ ./src/App.tsx 4:0-46 10:35-44&#xA; @ ./src/index.tsx 7:0-24 25:33-36&#xA;&#xA;WARNING in ./node_modules/graphql-request/dist/types.js&#xA;Module Warning (from ./node_modules/source-map-loader/dist/cjs.js):&#xA;Failed to parse source map from '/home/lukas/projects/bubble/bubble-os/node_modules/graphql-request/src/types.ts' file: Error: ENOENT: no such file or directory, open '/home/lukas/projects/bubble/bubble-os/node_modules/graphql-request/src/types.ts'&#xA; @ ./node_modules/graphql-request/dist/index.js 219:14-32&#xA; @ ./src/map_viewer/map_overview.tsx 23:0-47 61:16-19 80:4-11&#xA; @ ./src/dashboard/dashboard.tsx 25:0-51 299:46-55&#xA; @ ./src/App.tsx 4:0-46 10:35-44&#xA; @ ./src/index.tsx 7:0-24 25:33-36&#xA;&#xA;3 warnings have detailed information that is not shown.&#xA;Use 'stats.errorDetails: true' resp. '--stats-error-details' to show it.&#xA;&#xA;webpack 5.66.0 compiled with 3 warnings in 5142 ms&#xA;</code></pre>&#xA;<p>I checked already the internet but could not find a solution. Also in the GitHub issues of graphql-request I could not find anything. I tried to reproduce the problem in codesandbox.io but there I do not get any warning.</p>&#xA;<p>Maybe the versions of the packages I use give a clue on what the problem could be:</p>&#xA;<ul>&#xA;<li>node: V16.13.2</li>&#xA;<li>graphql: 16.2.0,</li>&#xA;<li>graphql-request: 3.7.0</li>&#xA;<li>webpack: 5.66.0</li>&#xA;</ul>&#xA;<p>I would be thankful for any hint on what could be wrong.</p>&#xA;",17166576,,,,2022-02-21 03:54:39,graphql-request / webpack warnings in react-typescript,<reactjs><typescript><webpack><graphql>,1,1,0,2022-01-12 21:09:07
70699711,2,,70699445,0,,"<p>There's no version available/compatible for Strapi v4 plugin (<a href=""https://github.com/strapi/gatsby-source-strapi"" rel=""nofollow noreferrer""><code>gatsby-source-strapi</code></a>) yet, as you can see in the repository:</p>&#xA;<blockquote>&#xA;<p>⚠️ This version of <code>gatsby-source-strapi</code> is only compatible with Strapi&#xA;v3 at the moment. We are currently working on a v4 compatible version.</p>&#xA;</blockquote>&#xA;<p>That said, in the meantime, your only chance is to roll back to v3 and wait for a compatible plugin version (if that's an option).</p>&#xA;",5585371,,5585371,2022-01-13 18:33:07,2022-01-13 18:33:07,"",,0,2,0,2022-01-13 16:14:25
70703386,2,,68703997,0,,<p>I found a temporary fix that can be used in the development.</p>&#xA;<pre><code>if (req.headers.host === 'localhost:&lt;Port number&gt;') {&#xA;    return {};&#xA;}&#xA;</code></pre>&#xA;,14088875,,,,2022-01-13 21:35:27,"",,0,0,0,2022-01-13 21:35:27
70728321,2,,70492791,0,,"<p>In <code>src/index.js</code>, I did programming <a href=""https://github.com/echizenyayota/odyssey-lift-off-part1/blob/560c7fbf0fb228722d7a26fb6f1aae145a3c2a75/client/src/index.js#L7-L10"" rel=""nofollow noreferrer"">like this</a>.</p>&#xA;<pre><code>const client = new ApolloClient({&#xA;  uri: 'http://localhost:3000/',&#xA;  cache: new InMemoryCache()&#xA;});&#xA;</code></pre>&#xA;<p>By replacing the <code>http://localhost:3000/</code> into <code>http://localhost:4000/</code>, I fixed the error.&#xA;Also, I noticed that you need to invoke two local hosts at the same time.</p>&#xA;<p>If you want to know the detail, you can ensure that below.</p>&#xA;<p><a href=""https://community.apollographql.com/t/why-does-the-catstronaut-indicate-error-unexpected-token-in-json-at-position-0/2320/4?u=echizenyayota"" rel=""nofollow noreferrer"">https://community.apollographql.com/t/why-does-the-catstronaut-indicate-error-unexpected-token-in-json-at-position-0/2320/4?u=echizenyayota</a></p>&#xA;",17680391,,,,2022-01-16 08:05:37,"",,0,0,0,2022-01-16 08:05:37
70728497,2,,70721226,1,,"<p>Got help from <a href=""https://github.com/smolinari"" rel=""nofollow noreferrer"">Scott</a> in <a href=""https://github.com/quasarframework/app-extension-apollo/issues/116"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>End of the day, it's an RTFM issue. I didn't read <a href=""https://github.com/quasarframework/app-extension-apollo/tree/v2#installation"" rel=""nofollow noreferrer"">README</a> carefully:</p>&#xA;<blockquote>&#xA;<p>The extension will add a configuration file into src/apollo and a boot file. <strong>You'll need to manually register the latter into quasar.conf.js &gt; boot.</strong></p>&#xA;</blockquote>&#xA;<p>Translate that to real-world action, I need to modify quasr.conf.js, find the boot part, and modify it to be:</p>&#xA;<pre><code>    boot: [&quot;apollo.js&quot;],&#xA;</code></pre>&#xA;<p>After that, the error went away, and I could see the call to my GraphQL endpoint from Chrome dev tools.</p>&#xA;",853508,,,,2022-01-16 08:35:04,"",,0,0,0,2022-01-16 08:35:04
70732447,1,,,0,227,"<p>Why am I getting Cannot read property '<strong>APOLLO_STATE</strong>' of undefined from my Apollo client? I got the client from the nextjs example repository on github:&#xA;<a href=""https://github.com/vercel/next.js/tree/canary/examples/with-apollo/lib"" rel=""nofollow noreferrer"">https://github.com/vercel/next.js/tree/canary/examples/with-apollo/lib</a></p>&#xA;",10458581,,,,2022-01-16 17:26:29,NextJS Apollo Client Error Cannot read property '__APOLLO_STATE__' of undefined,<reactjs><next.js><apollo>,0,3,0,2022-01-16 17:26:29
70732664,1,,,2,297,"<p>Imagining that I have a <strong>N-N</strong> relationship between Student and the Course, .NET structure is typical N-N translated to CLR types <strong>Student</strong>, <strong>StudentCourse</strong> and <strong>Course</strong>.</p>&#xA;<h4>Desired result:</h4>&#xA;<p>What I want to achieve when querying for all students like this ...</p>&#xA;<pre><code>query { &#xA; allStudents { &#xA;     name,&#xA;     courses { &#xA;         name,&#xA;         rating&#xA;       }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>... Is to avoid N+1 graph issues.</p>&#xA;<p>Instead I would like to end end up with the query similar to this one:</p>&#xA;<pre><code>SELECT s.Name&#xA;      FROM [Schema].[Student] AS [s]&#xA;      LEFT JOIN (&#xA;          SELECT course_id, student_id&#xA;          FROM [Relationships].[student_course] AS [c]&#xA;          INNER JOIN [Schema].[course] AS [c0] ON [c].[course_id] = [c0].[id]&#xA;      ) AS [t] ON [s].[id] = [t].[student_id]&#xA;      WHERE [m].[id] IN (1, 2, 4, 8, 10, 12) -- All student id's are loaded with data loader?&#xA;      ORDER BY [m].[id], [t].[id]&#xA;</code></pre>&#xA;<h4>Current implementation glimpse:</h4>&#xA;<p><em>I created a resolver GetCoursesForStudent for batch fetching course for student.</em></p>&#xA;<pre><code> public async Task&lt;Course&gt; GetCoursesForStudent([Parent] Student student, &#xA;                                                    CoursesForStudentDataLoader dataLoader, &#xA;                                                    IResolverContext context, &#xA;                                                    CancellationToken cancellationToken = default!)&#xA;    {&#xA;// This is generating a SELECT for each student, maybe load in a batch somehow?&#xA;       var courseIds = await service.GetCourseIdsForStudent(student.Id, cancellationToken);&#xA;&#xA;       return await dataLoader.LoadAsync(student.Id, cancellationToken);&#xA;    }&#xA;</code></pre>&#xA;<p><em>And the data loader</em></p>&#xA;<pre><code>public class CoursesForStudentDataLoader : BatchDataLoader&lt;int, Course&gt;&#xA;    {&#xA;        public CoursesForStudentDataLoader(IBatchScheduler batchScheduler) &#xA;            : base(batchScheduler)&#xA;        {&#xA;        }&#xA;&#xA;        protected override async Task&lt;IReadOnlyDictionary&lt;int, Course&gt;&gt; LoadBatchAsync(IReadOnlyList&lt;int&gt; keys, &#xA;CancellationToken cancellationToken)&#xA;        {&#xA;            var courses = repo.Queryable()&#xA;                           .Where(x =&gt; keys.Contains(x.StudentId))&#xA;                        .Select(item =&gt; item.Course);&#xA;&#xA;            var fetched = await courses.ToDictionaryAsync(key =&gt; key.Id, cancellationToken);&#xA;&#xA;            // fetched contains all the courses!&#xA;            return fetched;&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;<p><em>And object type definition with the resolver for companies.</em></p>&#xA;<pre><code>protected override void Configure(IObjectTypeDescriptor&lt;Student&gt; descriptor)&#xA;    {&#xA;        descriptor.Field&lt;StudentResolvers&gt;(t =&gt; &#xA;                        t.GetCoursesForStudent(default!, default!, default!, default!)).Name(&quot;courses&quot;)&#xA;                            .Type&lt;ListType&lt;NonNullType&lt;CourseObjectType&gt;&gt;&gt;();&#xA;    }&#xA;</code></pre>&#xA;<h4>Current results:</h4>&#xA;<p>Currently this generates a sql query for each student to fetch the course id's for each student. (<strong>N+1 issue</strong>)&#xA;And then it uses a data loader to buffer course ids and executes the query to fetch the courses only once. (N+1 avoided, and this looks good).</p>&#xA;<p>So I end up with the following sql:</p>&#xA;<pre><code>  SELECT [c].[course_id]&#xA;      FROM [Relationships].[student_course] AS [c]&#xA;      WHERE [c].[student_id] = @__studentId_0&#xA;  &#xA;  SELECT [c].[course_id]&#xA;      FROM [Relationships].[student_course] AS [c]&#xA;      WHERE [c].[student_id] = @__studentId_0&#xA;&#xA;  SELECT [c].[course_id]&#xA;      FROM [Relationships].[student_course] AS [c]&#xA;      WHERE [c].[student_id] = @__studentId_0&#xA;&#xA;... - N (clearly undesirable)&#xA;&#xA;&#xA;  SELECT [c].[id], [c].[name], [c].[rating]&#xA;  FROM [Schema].[course] AS [c]&#xA;  WHERE [c].[id] IN (7, 9, 12)&#xA;</code></pre>&#xA;<p>So I wonder what is the way to go with this, is it even possible or I am misinterpreting something.</p>&#xA;",6426768,,,,2022-01-16 17:53:20,How to achieve optimized many to many querying in GraphQL (HotChocolate),<c#><sql-server><graphql><hotchocolate>,0,0,0,2022-01-16 17:53:20
70745411,1,,,0,887,"<p>When I run gatsby build/develop I get multiple identical errors</p>&#xA;<pre><code>&#xA;    (node:22611) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 end listeners added to [PassThrough]. Use emitter.setMaxListeners() to increase limit&#xA;    (Use `node --trace-warnings ...` to show where the warning was created)&#xA;&#xA;&#xA;&#xA;</code></pre>&#xA;<p>I ran &quot;node --trace warnings ...&quot; and here is the output:</p>&#xA;<pre><code>&#xA;    node:internal/modules/cjs/loader:936&#xA;      throw err;&#xA;      ^&#xA;&#xA;    Error: Cannot find module '/Users/soroush/gatsby-test/gatsby-wordpress-starter-files-main'&#xA;        at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)&#xA;        at Function.Module._load (node:internal/modules/cjs/loader:778:27)&#xA;        at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:81:12)&#xA;        at node:internal/main/run_main_module:17:47 {&#xA;      code: 'MODULE_NOT_FOUND',&#xA;      requireStack: []&#xA;    }&#xA;&#xA;    Node.js v17.3.1&#xA;&#xA;&#xA;</code></pre>&#xA;<p>Looking through similar posts, I have gone though a couple of suggested solutions but nothing has worked yet.</p>&#xA;<p>Anybody run into the same issue with Gatsby?</p>&#xA;<p><strong>EDIT 1:</strong> Here is the package.json and gatsby-config.js</p>&#xA;<p>package.json :</p>&#xA;<pre><code>{&#xA;    &quot;name&quot;: &quot;removed&quot;,&#xA;    &quot;private&quot;: true,&#xA;    &quot;description&quot;: &quot;removed&quot;,&#xA;    &quot;version&quot;: &quot;1.0&quot;,&#xA;    &quot;author&quot;: &quot;removed&quot;,&#xA;    &quot;dependencies&quot;: {&#xA;        &quot;@apollo/client&quot;: &quot;^3.5.7&quot;,&#xA;        &quot;@emotion/react&quot;: &quot;^11.7.1&quot;,&#xA;        &quot;@material-ui/core&quot;: &quot;^4.12.3&quot;,&#xA;        &quot;@material-ui/icons&quot;: &quot;^4.11.2&quot;,&#xA;        &quot;babel-plugin-styled-components&quot;: &quot;^2.0.2&quot;,&#xA;        &quot;dotenv&quot;: &quot;^14.0.0&quot;,&#xA;        &quot;gatsby&quot;: &quot;^4.5.3&quot;,&#xA;        &quot;gatsby-cli&quot;: &quot;^4.5.2&quot;,&#xA;        &quot;gatsby-image&quot;: &quot;^3.11.0&quot;,&#xA;        &quot;gatsby-plugin-google-fonts&quot;: &quot;^1.0.1&quot;,&#xA;        &quot;gatsby-plugin-google-gtag&quot;: &quot;^4.5.0&quot;,&#xA;        &quot;gatsby-plugin-image&quot;: &quot;^2.5.0&quot;,&#xA;        &quot;gatsby-plugin-manifest&quot;: &quot;^4.5.1&quot;,&#xA;        &quot;gatsby-plugin-material-ui&quot;: &quot;^4.1.0&quot;,&#xA;        &quot;gatsby-plugin-offline&quot;: &quot;^5.5.1&quot;,&#xA;        &quot;gatsby-plugin-react-helmet&quot;: &quot;^5.5.0&quot;,&#xA;        &quot;gatsby-plugin-remote-images&quot;: &quot;^3.2.0&quot;,&#xA;        &quot;gatsby-plugin-sharp&quot;: &quot;^4.4.0&quot;,&#xA;        &quot;gatsby-plugin-styled-components&quot;: &quot;^5.5.0&quot;,&#xA;        &quot;gatsby-source-filesystem&quot;: &quot;^4.5.2&quot;,&#xA;        &quot;gatsby-source-google-spreadsheet&quot;: &quot;^2.0.0&quot;,&#xA;        &quot;gatsby-source-wordpress&quot;: &quot;^6.5.1&quot;,&#xA;        &quot;gatsby-transformer-sharp&quot;: &quot;^4.4.0&quot;,&#xA;        &quot;lodash&quot;: &quot;^4.17.21&quot;,&#xA;        &quot;prop-types&quot;: &quot;^15.8.1&quot;,&#xA;        &quot;react&quot;: &quot;^17.0.1&quot;,&#xA;        &quot;react-calendly&quot;: &quot;^2.2.2&quot;,&#xA;        &quot;react-dom&quot;: &quot;^17.0.1&quot;,&#xA;        &quot;react-helmet&quot;: &quot;^6.1.0&quot;,&#xA;        &quot;styled-components&quot;: &quot;^5.3.3&quot;,&#xA;        &quot;underscore&quot;: &quot;^1.13.2&quot;&#xA;    },&#xA;    &quot;devDependencies&quot;: {&#xA;        &quot;prettier&quot;: &quot;2.5.1&quot;&#xA;    },&#xA;    &quot;keywords&quot;: [&#xA;        &quot;gatsby&quot;&#xA;    ],&#xA;    &quot;license&quot;: &quot;0BSD&quot;,&#xA;    &quot;scripts&quot;: {&#xA;        &quot;build&quot;: &quot;gatsby build&quot;,&#xA;        &quot;develop&quot;: &quot;gatsby develop&quot;,&#xA;        &quot;format&quot;: &quot;prettier --write \&quot;**/*.{js,jsx,ts,tsx,json,md}\&quot;&quot;,&#xA;        &quot;start&quot;: &quot;npm run develop&quot;,&#xA;        &quot;serve&quot;: &quot;gatsby serve&quot;,&#xA;        &quot;clean&quot;: &quot;gatsby clean&quot;,&#xA;        &quot;test&quot;: &quot;echo \&quot;Write tests! -&gt; https://gatsby.dev/unit-testing\&quot; &amp;&amp; exit 1&quot;&#xA;    },&#xA;    &quot;repository&quot;: {&#xA;        &quot;type&quot;: &quot;git&quot;,&#xA;        &quot;url&quot;: &quot;https://github.com/gatsbyjs/gatsby-starter-default&quot;&#xA;    },&#xA;    &quot;bugs&quot;: {&#xA;        &quot;url&quot;: &quot;https://github.com/gatsbyjs/gatsby/issues&quot;&#xA;    },&#xA;    &quot;resolutions&quot;: {&#xA;        &quot;graphql&quot;: &quot;15.7.2&quot;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>gatsby-config.js :</p>&#xA;<pre><code>&#xA;require(&quot;dotenv&quot;).config({&#xA;  path: `.env.${process.env.NODE_ENV}`,&#xA;}),&#xA;&#xA;module.exports = {&#xA;  siteMetadata: {&#xA;    title: `removed`,&#xA;    description: `removed`,&#xA;    author: `removed`,&#xA;  },&#xA;  plugins: [&#xA;    `gatsby-plugin-react-helmet`,&#xA;    `gatsby-plugin-material-ui`,&#xA;    {&#xA;      resolve: `gatsby-source-filesystem`,&#xA;      options: {&#xA;        name: `images`,&#xA;        path: `${__dirname}/src/images`,&#xA;      },&#xA;    },&#xA;    {&#xA;      resolve: `gatsby-plugin-google-gtag`,&#xA;      options: {&#xA;        // You can add multiple tracking ids and a pageview event will be fired for all of them.&#xA;        trackingIds: [&#xA;         process.env.GA_TRACKING_ID, // Google Analytics / GA&#xA;          // &quot;AW-CONVERSION_ID&quot;, // Google Ads / Adwords / AW&#xA;          // &quot;DC-FLOODIGHT_ID&quot;, // Marketing Platform advertising products (Display &amp; Video 360, Search Ads 360, and Campaign Manager)&#xA;        ],&#xA;        // // This object gets passed directly to the gtag config command&#xA;        // // This config will be shared across all trackingIds&#xA;        // gtagConfig: {&#xA;        //   optimize_id: &quot;OPT_CONTAINER_ID&quot;,&#xA;        //   anonymize_ip: true,&#xA;        //   cookie_expires: 0,&#xA;        // },&#xA;        // This object is used for configuration specific to this plugin&#xA;        pluginConfig: {&#xA;          // Puts tracking script in the head instead of the body&#xA;          head: true,&#xA;          // Setting this parameter is also optional&#xA;&#xA;        },&#xA;      },&#xA;    },&#xA;    {&#xA;      resolve: 'gatsby-source-google-spreadsheet',&#xA;      options: {&#xA;        spreadsheetId: process.env.GATSBY_GOOGLE_CREDENTIALS_SPREADSHEET_ID,&#xA;        spreadsheetName: 'Courses',&#xA;        credentials: {&#xA;          &quot;type&quot;: &quot;service_account&quot;,&#xA;          &quot;project_id&quot;: &quot;project1-293323&quot;,&#xA;          &quot;private_key_id&quot;: process.env.GATSBY_GOOGLE_CREDENTIALS_PRIVATE_KEY_ID,&#xA;          &quot;private_key&quot;: process.env.GATSBY_GOOGLE_CREDENTIALS_PRIVATE_KEY,&#xA;          &quot;client_email&quot;: process.env.GATSBY_GOOGLE_CREDENTIALS_CLIENT_EMAIL,&#xA;          &quot;client_id&quot;: process.env.GATSBY_GOOGLE_CREDENTIALS_CLIENT_ID,&#xA;          &quot;auth_uri&quot;: &quot;https://accounts.google.com/o/oauth2/auth&quot;,&#xA;          &quot;token_uri&quot;: &quot;https://oauth2.googleapis.com/token&quot;,&#xA;          &quot;auth_provider_x509_cert_url&quot;: &quot;https://www.googleapis.com/oauth2/v1/certs&quot;,&#xA;          &quot;client_x509_cert_url&quot;: process.env.GATSBY_GOOGLE_CREDENTIALS_CLIENT_CERT&#xA;          },&#xA;        filterNode: () =&gt; true,&#xA;        mapNode: node =&gt; node&#xA;      }&#xA;    },&#xA;    `gatsby-plugin-image`,&#xA;    `gatsby-transformer-sharp`,&#xA;    `gatsby-plugin-sharp`,&#xA;    {&#xA;      resolve: `gatsby-plugin-manifest`,&#xA;      options: {&#xA;        name: `gatsby-starter-default`,&#xA;        short_name: `starter`,&#xA;        start_url: `/`,&#xA;        background_color: `#663399`,&#xA;        theme_color: `#663399`,&#xA;        display: `minimal-ui`,&#xA;        icon: `src/images/gatsby-icon.png`, // This path is relative to the root of the site.&#xA;      },&#xA;    },&#xA;    {&#xA;      resolve: `gatsby-source-wordpress`,&#xA;      options: {&#xA;        // you need to update this path to make the website&#xA;        url: `http://erndgatsbycourse.local/graphql`,&#xA;      },&#xA;    },&#xA;  &#xA;    {&#xA;      resolve: &quot;gatsby-plugin-remote-images&quot;,&#xA;      options: {&#xA;        nodeType: `GoogleSpreadsheetCoursesMain`,&#xA;        imagePath: `image`,&#xA;        name: `optimized_course_image`,&#xA;      },&#xA;    },&#xA;    `gatsby-plugin-styled-components`,&#xA;    {&#xA;      resolve: `gatsby-plugin-google-fonts`,&#xA;      options: {&#xA;        fonts: [`Teko\:200, 400, 500, 600, 700`],&#xA;        display: `swap`,&#xA;      },&#xA;    },&#xA;&#xA;&#xA;</code></pre>&#xA;<p><strong>Edit 2:</strong></p>&#xA;<p>npm audit report is showing multiple vulnerabilities. <code>npm audit fix --force</code> doesn't work and somehow downgrades many of the dependencies in package.json and breaks the code completely.</p>&#xA;<pre><code># npm audit report&#xA;&#xA;ansi-html  *&#xA;Severity: high&#xA;Uncontrolled Resource Consumption in ansi-html - https://github.com/advisories/GHSA-whgm-jr23-g3j9&#xA;fix available via `npm audit fix --force`&#xA;Will install gatsby@2.19.38, which is a breaking change&#xA;node_modules/ansi-html&#xA;  @gatsbyjs/webpack-hot-middleware  *&#xA;  Depends on vulnerable versions of ansi-html&#xA;  node_modules/@gatsbyjs/webpack-hot-middleware&#xA;    gatsby  2.3.24-ink.60 - 2.3.24-ink.61 || 2.4.0-0 - 2.4.0-alpha.3 || &gt;=2.6.0-alpha.1&#xA;    Depends on vulnerable versions of @gatsbyjs/webpack-hot-middleware&#xA;    Depends on vulnerable versions of @pmmmwh/react-refresh-webpack-plugin&#xA;    Depends on vulnerable versions of gatsby-cli&#xA;    Depends on vulnerable versions of gatsby-plugin-utils&#xA;    Depends on vulnerable versions of react-dev-utils&#xA;    Depends on vulnerable versions of strip-ansi&#xA;    node_modules/gatsby&#xA;      babel-plugin-remove-graphql-queries  &gt;=2.17.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/babel-plugin-remove-graphql-queries&#xA;      gatsby-plugin-catch-links  &gt;=2.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-catch-links&#xA;        gatsby-source-wordpress  2.0.57-0 - 2.0.57-17 || 2.1.0-alpha.03b9df85 - 3.0.0-rc.9 || 3.11.0-alpha-wordpress.44 - 3.11.0-next.0 || &gt;=3.12.0-next.0&#xA;        Depends on vulnerable versions of @rematch/immer&#xA;        Depends on vulnerable versions of gatsby-plugin-catch-links&#xA;        Depends on vulnerable versions of gatsby-plugin-image&#xA;        Depends on vulnerable versions of gatsby-plugin-sharp&#xA;        Depends on vulnerable versions of gatsby-source-filesystem&#xA;        node_modules/gatsby-source-wordpress&#xA;      gatsby-plugin-google-gtag  &gt;=2.9.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-google-gtag&#xA;      gatsby-plugin-image  &gt;=0.8.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-sharp&#xA;      node_modules/gatsby-plugin-image&#xA;      gatsby-plugin-manifest  &gt;=2.4.36&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      node_modules/gatsby-plugin-manifest&#xA;      gatsby-plugin-material-ui  &gt;=3.0.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-material-ui&#xA;      gatsby-plugin-offline  &gt;=3.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-offline&#xA;      gatsby-plugin-page-creator  &gt;=2.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      node_modules/gatsby-plugin-page-creator&#xA;      gatsby-plugin-react-helmet  &gt;=3.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-react-helmet&#xA;      gatsby-plugin-sharp  &gt;=2.0.31&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      Depends on vulnerable versions of svgo&#xA;      node_modules/gatsby-plugin-sharp&#xA;        gatsby-transformer-sharp  &gt;=2.13.0-next.0&#xA;        Depends on vulnerable versions of gatsby&#xA;        Depends on vulnerable versions of gatsby-plugin-sharp&#xA;        node_modules/gatsby-transformer-sharp&#xA;      gatsby-plugin-styled-components  &gt;=3.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-styled-components&#xA;      gatsby-plugin-typescript  &gt;=2.13.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-typescript&#xA;      gatsby-plugin-utils  0.2.27-qod.19 - 0.2.27-qod.21 || 0.2.31-query-modules-debug-missing-sq.23 || &gt;=0.2.35&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-utils&#xA;      gatsby-source-filesystem  &gt;=2.12.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-remote-images/node_modules/gatsby-source-filesystem&#xA;      node_modules/gatsby-source-filesystem&#xA;        gatsby-plugin-remote-images  &gt;=3.0.0&#xA;        Depends on vulnerable versions of gatsby-source-filesystem&#xA;        node_modules/gatsby-plugin-remote-images&#xA;  @pmmmwh/react-refresh-webpack-plugin  &lt;=0.5.0-rc.6&#xA;  Depends on vulnerable versions of ansi-html&#xA;  node_modules/@pmmmwh/react-refresh-webpack-plugin&#xA;&#xA;ansi-regex  &gt;2.1.1 &lt;5.0.1&#xA;Severity: moderate&#xA; Inefficient Regular Expression Complexity in chalk/ansi-regex - https://github.com/advisories/GHSA-93q8-gq69-wqmw&#xA;fix available via `npm audit fix --force`&#xA;Will install gatsby@2.19.38, which is a breaking change&#xA;node_modules/ansi-regex&#xA;  strip-ansi  4.0.0 - 5.2.0&#xA;  Depends on vulnerable versions of ansi-regex&#xA;  node_modules/strip-ansi&#xA;    gatsby  2.3.24-ink.60 - 2.3.24-ink.61 || 2.4.0-0 - 2.4.0-alpha.3 || &gt;=2.6.0-alpha.1&#xA;    Depends on vulnerable versions of @gatsbyjs/webpack-hot-middleware&#xA;    Depends on vulnerable versions of @pmmmwh/react-refresh-webpack-plugin&#xA;    Depends on vulnerable versions of gatsby-cli&#xA;    Depends on vulnerable versions of gatsby-plugin-utils&#xA;    Depends on vulnerable versions of react-dev-utils&#xA;    Depends on vulnerable versions of strip-ansi&#xA;    node_modules/gatsby&#xA;      babel-plugin-remove-graphql-queries  &gt;=2.17.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/babel-plugin-remove-graphql-queries&#xA;      gatsby-plugin-catch-links  &gt;=2.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-catch-links&#xA;        gatsby-source-wordpress  2.0.57-0 - 2.0.57-17 || 2.1.0-alpha.03b9df85 - 3.0.0-rc.9 || 3.11.0-alpha-wordpress.44 - 3.11.0-next.0 || &gt;=3.12.0-next.0&#xA;        Depends on vulnerable versions of @rematch/immer&#xA;        Depends on vulnerable versions of gatsby-plugin-catch-links&#xA;        Depends on vulnerable versions of gatsby-plugin-image&#xA;        Depends on vulnerable versions of gatsby-plugin-sharp&#xA;        Depends on vulnerable versions of gatsby-source-filesystem&#xA;        node_modules/gatsby-source-wordpress&#xA;      gatsby-plugin-google-gtag  &gt;=2.9.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-google-gtag&#xA;      gatsby-plugin-image  &gt;=0.8.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-sharp&#xA;      node_modules/gatsby-plugin-image&#xA;      gatsby-plugin-manifest  &gt;=2.4.36&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      node_modules/gatsby-plugin-manifest&#xA;      gatsby-plugin-material-ui  &gt;=3.0.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-material-ui&#xA;      gatsby-plugin-offline  &gt;=3.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-offline&#xA;      gatsby-plugin-page-creator  &gt;=2.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      node_modules/gatsby-plugin-page-creator&#xA;      gatsby-plugin-react-helmet  &gt;=3.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-react-helmet&#xA;      gatsby-plugin-sharp  &gt;=2.0.31&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      Depends on vulnerable versions of svgo&#xA;      node_modules/gatsby-plugin-sharp&#xA;        gatsby-transformer-sharp  &gt;=2.13.0-next.0&#xA;        Depends on vulnerable versions of gatsby&#xA;        Depends on vulnerable versions of gatsby-plugin-sharp&#xA;        node_modules/gatsby-transformer-sharp&#xA;      gatsby-plugin-styled-components  &gt;=3.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-styled-components&#xA;      gatsby-plugin-typescript  &gt;=2.13.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-typescript&#xA;      gatsby-plugin-utils  0.2.27-qod.19 - 0.2.27-qod.21 || 0.2.31-query-modules-debug-missing-sq.23 || &gt;=0.2.35&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-utils&#xA;      gatsby-source-filesystem  &gt;=2.12.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-remote-images/node_modules/gatsby-source-filesystem&#xA;      node_modules/gatsby-source-filesystem&#xA;        gatsby-plugin-remote-images  &gt;=3.0.0&#xA;        Depends on vulnerable versions of gatsby-source-filesystem&#xA;        node_modules/gatsby-plugin-remote-images&#xA;    gatsby-cli  2.5.9-ink.60 - 2.5.9-ink.61 || &gt;=2.6.0-0&#xA;    Depends on vulnerable versions of strip-ansi&#xA;    Depends on vulnerable versions of yurnalist&#xA;    node_modules/gatsby-cli&#xA;    yurnalist  &gt;=1.0.5&#xA;    Depends on vulnerable versions of strip-ansi&#xA;    node_modules/yurnalist&#xA;&#xA;browserslist  4.0.0 - 4.16.4&#xA;Severity: moderate&#xA;Regular Expression Denial of Service in browserslist - https://github.com/advisories/GHSA-w8qv-6jwh-64r5&#xA;fix available via `npm audit fix --force`&#xA;Will install gatsby@2.19.38, which is a breaking change&#xA;node_modules/react-dev-utils/node_modules/browserslist&#xA;  react-dev-utils  6.0.0-next.03604a46 - 12.0.0-next.60&#xA;  Depends on vulnerable versions of browserslist&#xA;  Depends on vulnerable versions of immer&#xA;  node_modules/react-dev-utils&#xA;    gatsby  2.3.24-ink.60 - 2.3.24-ink.61 || 2.4.0-0 - 2.4.0-alpha.3 || &gt;=2.6.0-alpha.1&#xA;    Depends on vulnerable versions of @gatsbyjs/webpack-hot-middleware&#xA;    Depends on vulnerable versions of @pmmmwh/react-refresh-webpack-plugin&#xA;    Depends on vulnerable versions of gatsby-cli&#xA;    Depends on vulnerable versions of gatsby-plugin-utils&#xA;    Depends on vulnerable versions of react-dev-utils&#xA;    Depends on vulnerable versions of strip-ansi&#xA;    node_modules/gatsby&#xA;      babel-plugin-remove-graphql-queries  &gt;=2.17.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/babel-plugin-remove-graphql-queries&#xA;      gatsby-plugin-catch-links  &gt;=2.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-catch-links&#xA;        gatsby-source-wordpress  2.0.57-0 - 2.0.57-17 || 2.1.0-alpha.03b9df85 - 3.0.0-rc.9 || 3.11.0-alpha-wordpress.44 - 3.11.0-next.0 || &gt;=3.12.0-next.0&#xA;        Depends on vulnerable versions of @rematch/immer&#xA;        Depends on vulnerable versions of gatsby-plugin-catch-links&#xA;        Depends on vulnerable versions of gatsby-plugin-image&#xA;        Depends on vulnerable versions of gatsby-plugin-sharp&#xA;        Depends on vulnerable versions of gatsby-source-filesystem&#xA;        node_modules/gatsby-source-wordpress&#xA;      gatsby-plugin-google-gtag  &gt;=2.9.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-google-gtag&#xA;      gatsby-plugin-image  &gt;=0.8.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-sharp&#xA;      node_modules/gatsby-plugin-image&#xA;      gatsby-plugin-manifest  &gt;=2.4.36&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      node_modules/gatsby-plugin-manifest&#xA;      gatsby-plugin-material-ui  &gt;=3.0.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-material-ui&#xA;      gatsby-plugin-offline  &gt;=3.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-offline&#xA;      gatsby-plugin-page-creator  &gt;=2.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      node_modules/gatsby-plugin-page-creator&#xA;      gatsby-plugin-react-helmet  &gt;=3.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-react-helmet&#xA;      gatsby-plugin-sharp  &gt;=2.0.31&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      Depends on vulnerable versions of svgo&#xA;      node_modules/gatsby-plugin-sharp&#xA;        gatsby-transformer-sharp  &gt;=2.13.0-next.0&#xA;        Depends on vulnerable versions of gatsby&#xA;        Depends on vulnerable versions of gatsby-plugin-sharp&#xA;        node_modules/gatsby-transformer-sharp&#xA;      gatsby-plugin-styled-components  &gt;=3.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-styled-components&#xA;      gatsby-plugin-typescript  &gt;=2.13.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-typescript&#xA;      gatsby-plugin-utils  0.2.27-qod.19 - 0.2.27-qod.21 || 0.2.31-query-modules-debug-missing-sq.23 || &gt;=0.2.35&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-utils&#xA;      gatsby-source-filesystem  &gt;=2.12.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-remote-images/node_modules/gatsby-source-filesystem&#xA;      node_modules/gatsby-source-filesystem&#xA;        gatsby-plugin-remote-images  &gt;=3.0.0&#xA;        Depends on vulnerable versions of gatsby-source-filesystem&#xA;        node_modules/gatsby-plugin-remote-images&#xA;&#xA;immer  &lt;=9.0.5&#xA;Severity: critical&#xA;Prototype Pollution in immer - https://github.com/advisories/GHSA-33f9-j839-rf8h&#xA;Prototype Pollution in immer - https://github.com/advisories/GHSA-9qmh-276g-x5pj&#xA;fix available via `npm audit fix --force`&#xA;Will install gatsby@2.19.38, which is a breaking change&#xA;node_modules/immer&#xA;node_modules/react-dev-utils/node_modules/immer&#xA;  @rematch/immer  *&#xA;  Depends on vulnerable versions of immer&#xA;  node_modules/@rematch/immer&#xA;    gatsby-source-wordpress  2.0.57-0 - 2.0.57-17 || 2.1.0-alpha.03b9df85 - 3.0.0-rc.9 || 3.11.0-alpha-wordpress.44 - 3.11.0-next.0 || &gt;=3.12.0-next.0&#xA;    Depends on vulnerable versions of @rematch/immer&#xA;    Depends on vulnerable versions of gatsby-plugin-catch-links&#xA;    Depends on vulnerable versions of gatsby-plugin-image&#xA;    Depends on vulnerable versions of gatsby-plugin-sharp&#xA;    Depends on vulnerable versions of gatsby-source-filesystem&#xA;    node_modules/gatsby-source-wordpress&#xA;  react-dev-utils  6.0.0-next.03604a46 - 12.0.0-next.60&#xA;  Depends on vulnerable versions of browserslist&#xA;  Depends on vulnerable versions of immer&#xA;  node_modules/react-dev-utils&#xA;    gatsby  2.3.24-ink.60 - 2.3.24-ink.61 || 2.4.0-0 - 2.4.0-alpha.3 || &gt;=2.6.0-alpha.1&#xA;    Depends on vulnerable versions of @gatsbyjs/webpack-hot-middleware&#xA;    Depends on vulnerable versions of @pmmmwh/react-refresh-webpack-plugin&#xA;    Depends on vulnerable versions of gatsby-cli&#xA;    Depends on vulnerable versions of gatsby-plugin-utils&#xA;    Depends on vulnerable versions of react-dev-utils&#xA;    Depends on vulnerable versions of strip-ansi&#xA;    node_modules/gatsby&#xA;      babel-plugin-remove-graphql-queries  &gt;=2.17.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/babel-plugin-remove-graphql-queries&#xA;      gatsby-plugin-catch-links  &gt;=2.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-catch-links&#xA;      gatsby-plugin-google-gtag  &gt;=2.9.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-google-gtag&#xA;      gatsby-plugin-image  &gt;=0.8.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-sharp&#xA;      node_modules/gatsby-plugin-image&#xA;      gatsby-plugin-manifest  &gt;=2.4.36&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      node_modules/gatsby-plugin-manifest&#xA;      gatsby-plugin-material-ui  &gt;=3.0.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-material-ui&#xA;      gatsby-plugin-offline  &gt;=3.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-offline&#xA;      gatsby-plugin-page-creator  &gt;=2.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      node_modules/gatsby-plugin-page-creator&#xA;      gatsby-plugin-react-helmet  &gt;=3.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-react-helmet&#xA;      gatsby-plugin-sharp  &gt;=2.0.31&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      Depends on vulnerable versions of svgo&#xA;      node_modules/gatsby-plugin-sharp&#xA;        gatsby-transformer-sharp  &gt;=2.13.0-next.0&#xA;        Depends on vulnerable versions of gatsby&#xA;        Depends on vulnerable versions of gatsby-plugin-sharp&#xA;        node_modules/gatsby-transformer-sharp&#xA;      gatsby-plugin-styled-components  &gt;=3.11.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-styled-components&#xA;      gatsby-plugin-typescript  &gt;=2.13.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-typescript&#xA;      gatsby-plugin-utils  0.2.27-qod.19 - 0.2.27-qod.21 || 0.2.31-query-modules-debug-missing-sq.23 || &gt;=0.2.35&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-utils&#xA;      gatsby-source-filesystem  &gt;=2.12.0-next.0&#xA;      Depends on vulnerable versions of gatsby&#xA;      node_modules/gatsby-plugin-remote-images/node_modules/gatsby-source-filesystem&#xA;      node_modules/gatsby-source-filesystem&#xA;        gatsby-plugin-remote-images  &gt;=3.0.0&#xA;        Depends on vulnerable versions of gatsby-source-filesystem&#xA;        node_modules/gatsby-plugin-remote-images&#xA;&#xA;nth-check  &lt;2.0.1&#xA;Severity: moderate&#xA;Inefficient Regular Expression Complexity in nth-check - https://github.com/advisories/GHSA-rp65-9cf3-cjxr&#xA;fix available via `npm audit fix --force`&#xA;Will install gatsby-plugin-sharp@2.14.4, which is a breaking change&#xA;node_modules/svgo/node_modules/nth-check&#xA;  css-select  &lt;=3.1.0&#xA;  Depends on vulnerable versions of nth-check&#xA;  node_modules/svgo/node_modules/css-select&#xA;    svgo  1.0.0 - 1.3.2&#xA;    Depends on vulnerable versions of css-select&#xA;    node_modules/svgo&#xA;      gatsby-plugin-sharp  &gt;=2.0.31&#xA;      Depends on vulnerable versions of gatsby&#xA;      Depends on vulnerable versions of gatsby-plugin-utils&#xA;      Depends on vulnerable versions of svgo&#xA;      node_modules/gatsby-plugin-sharp&#xA;        gatsby-plugin-image  &gt;=0.8.0-next.0&#xA;        Depends on vulnerable versions of gatsby&#xA;        Depends on vulnerable versions of gatsby-plugin-sharp&#xA;        node_modules/gatsby-plugin-image&#xA;          gatsby-source-wordpress  2.0.57-0 - 2.0.57-17 || 2.1.0-alpha.03b9df85 - 3.0.0-rc.9 || 3.11.0-alpha-wordpress.44 - 3.11.0-next.0 || &gt;=3.12.0-next.0&#xA;          Depends on vulnerable versions of @rematch/immer&#xA;          Depends on vulnerable versions of gatsby-plugin-catch-links&#xA;          Depends on vulnerable versions of gatsby-plugin-image&#xA;          Depends on vulnerable versions of gatsby-plugin-sharp&#xA;          Depends on vulnerable versions of gatsby-source-filesystem&#xA;          node_modules/gatsby-source-wordpress&#xA;        gatsby-transformer-sharp  &gt;=2.13.0-next.0&#xA;        Depends on vulnerable versions of gatsby&#xA;        Depends on vulnerable versions of gatsby-plugin-sharp&#xA;        node_modules/gatsby-transformer-sharp&#xA;&#xA;object-path  &lt;=0.11.7&#xA;Severity: high&#xA;Prototype Pollution in object-path - https://github.com/advisories/GHSA-8v63-cqqc-6r2c&#xA;Prototype Pollution in object-path - https://github.com/advisories/GHSA-v39p-96qg-c8rf&#xA;fix available via `npm audit fix`&#xA;node_modules/object-path&#xA;  graphql-compose  0.1.0 - 1.5.1 || 7.24.1 - 9.0.2&#xA;  Depends on vulnerable versions of object-path&#xA;  node_modules/graphql-compose&#xA;&#xA;ws  7.0.0 - 7.4.5&#xA;Severity: moderate&#xA;ReDoS in Sec-Websocket-Protocol header - https://github.com/advisories/GHSA-6fc8-4gx4-v693&#xA;fix available via `npm audit fix`&#xA;node_modules/ws&#xA;  @graphql-tools/url-loader  6.4.1-alpha-0ea0f8b7.0 - 6.10.1&#xA;  Depends on vulnerable versions of ws&#xA;  node_modules/@graphql-tools/url-loader&#xA;&#xA;36 vulnerabilities (11 moderate, 23 high, 2 critical)&#xA;&#xA;To address issues that do not require attention, run:&#xA;  npm audit fix&#xA;&#xA;To address all issues (including breaking changes), run:&#xA;  npm audit fix --force&#xA;&#xA;</code></pre>&#xA;",2029775,,2029775,2022-01-20 14:57:32,2022-01-20 14:57:32,Error: MaxListenersExceededWarning: Possible EventEmitter memory leak detected,<node.js><reactjs><graphql><gatsby>,0,5,0,2022-01-17 17:37:39
70784272,1,,,-1,337,"<p>Hi I started playing with BitQuery graphql to see if it would help me with querying blockchain data. I love the idea of single API for most of the blockchains.</p>&#xA;<p>I have a problem tho. The data that Im getting back is critically not accurate and I don't know why.</p>&#xA;<pre><code>{&#xA;  ethereum(network: bsc) {&#xA;    dexTrades(&#xA;      exchangeAddress: {is: &quot;0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73&quot;}&#xA;      baseCurrency: {is: &quot;0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82&quot;}&#xA;      quoteCurrency: {is: &quot;0x55d398326f99059ff775485246999027b3197955&quot;}&#xA;    ) {&#xA;      baseCurrency {&#xA;        symbol&#xA;      }&#xA;      quoteCurrency {&#xA;        symbol&#xA;      }&#xA;      quotePrice&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Given this query I want to get the Price of Cake/USDT. Which it returns as</p>&#xA;<pre><code>{&#xA;  &quot;ethereum&quot;: {&#xA;    &quot;dexTrades&quot;: [&#xA;      {&#xA;        &quot;baseCurrency&quot;: {&#xA;          &quot;symbol&quot;: &quot;Cake&quot;&#xA;        },&#xA;        &quot;quoteCurrency&quot;: {&#xA;          &quot;symbol&quot;: &quot;USDT&quot;&#xA;        },&#xA;        &quot;quotePrice&quot;: 16.96659680611786&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But When I check with the PancakeSwap Exchange directly or coinmarketcap the price is 40% lower that BitQuery result...</p>&#xA;<pre><code>PancakeSwap Price = 10.70&#xA;&#xA;Coingeko Price = 10.75&#xA;</code></pre>&#xA;<p>Am I doing something wrong? Or BitQUery is broken? Or what can be the case? Any Ideas?</p>&#xA;",7962825,,,,2022-04-20 02:46:14,BitQuery wrong data/not real time,<graphql><blockchain><ethereum><smartcontracts>,2,0,0,2022-01-20 10:07:12
70784671,2,,67042652,0,,"<p>Hey I had similar issues. What I did was replaced local host with my development device ip address (eg. <a href=""http://192.168.xx.xx:4000/graphql"" rel=""nofollow noreferrer"">http://192.168.xx.xx:4000/graphql</a> instead of http://localhost:4000/graphql). This was because I was using expo qr scan to run the app on my android device and there was no tunneling over wifi.</p>&#xA;",9791980,,,,2022-01-20 10:36:17,"",,0,0,0,2022-01-20 10:36:17
70789323,1,,,0,155,"<p>I am in a microservice architecture using a SpringBoot java application as backend and React frontend. The data is fetched from backend with GraphQl requests.&#xA;In the backend the schema is generated at runtime by  <a href=""https://github.com/leangen/graphql-spqr"" rel=""nofollow noreferrer"">graphql-spqr</a> which also provides custom type definitions for standard Java classes such as LocalDate and LocalDateTime.</p>&#xA;<pre><code># Built-in scalar representing a local date-time&#xA;scalar LocalDateTime&#xA;&#xA;type Shift {&#xA;  clientRef: Client&#xA;  description: String&#xA;  endTime: LocalDateTime&#xA;  id: Long&#xA;  locked: Boolean&#xA;  resource: Resource&#xA;  shiftCosts: [ShiftCost]&#xA;  shiftType: ShiftType&#xA;  startTime: LocalDateTime&#xA;  status: String&#xA;  version: Int&#xA;}&#xA;</code></pre>&#xA;<p>The front end is utilizing the <code>@apollo/client</code> for querying backend.</p>&#xA;<p>How do I add typemapper to the client to map the <code>string</code> valued  <code>startTime</code> and <code>endTime</code> parameters to JS <code>Date</code> object, and (more importantly) convert the <code>Date</code> object to <code>LocalDateTime</code>?</p>&#xA;<p>The below error is thrown by the client</p>&#xA;<pre><code>Error: Variable 'endTime' has an invalid value : Value {} could not be parsed into a LocalDateTime&#xA;    at new ApolloError (index.ts:58:1)&#xA;    at QueryManager.ts:240:1&#xA;    at both (asyncMap.ts:30:1)&#xA;    at asyncMap.ts:19:1&#xA;    at new Promise (&lt;anonymous&gt;)&#xA;    at Object.then (asyncMap.ts:19:1)&#xA;    at Object.next (asyncMap.ts:31:1)&#xA;    at notifySubscription (module.js:132:1)&#xA;    at onNotify (module.js:176:1)&#xA;    at SubscriptionObserver.next (module.js:225:1)&#xA;    at iteration.ts:13:1&#xA;    at Array.forEach (&lt;anonymous&gt;)&#xA;    at iterateObserversSafely (iteration.ts:13:1)&#xA;    at Object.next (Concast.ts:171:1)&#xA;    at notifySubscription (module.js:132:1)&#xA;    at onNotify (module.js:176:1)&#xA;    at SubscriptionObserver.next (module.js:225:1)&#xA;    at Object.next (module.js:310:1)&#xA;    at notifySubscription (module.js:132:1)&#xA;    at onNotify (module.js:176:1)&#xA;    at SubscriptionObserver.next (module.js:225:1)&#xA;    at notifySubscription (module.js:132:1)&#xA;    at onNotify (module.js:176:1)&#xA;    at SubscriptionObserver.next (module.js:225:1)&#xA;    at createHttpLink.ts:164:1&#xA;</code></pre>&#xA;<p>Using Apollo Client Devtools I see this is the request parsed.</p>&#xA;<pre><code>{&#xA;    shift: {&#xA;        resource: {&#xA;            id: 5           &#xA;        },&#xA;        startTime: '2022-01-21T23:00:00.000Z',&#xA;        endTime: '2022-01-22T23:00:00.000Z',&#xA;        shiftType: {&#xA;            id: 1,&#xA;            requiredSkill: {&#xA;                id: 7&#xA;            }&#xA;        },&#xA;        status: 'REQUESTED'&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p><strong>Edit</strong>&#xA;When logging the operation in first ApolloLink, the time properties of the shift variable is already compromized showing an empty object. This tells the conversion of the variable needs to be done before entering the ApolloLinks.</p>&#xA;<pre><code>variables:&#xA;    shift:&#xA;        endTime: {}&#xA;        resource: {id: 5, skills: Array(2)}&#xA;        shiftType: {id: 1, requiredSkill: {…}}&#xA;        startTime: {}&#xA;        status: &quot;REQUESTED&quot;&#xA;</code></pre>&#xA;",11261245,,11261245,2022-01-23 11:42:02,2022-01-23 11:42:02,Parsing value to custom GraphQl type in external schema with Apollo Client (React),<graphql><react-apollo><graphql-java>,0,0,0,2022-01-20 15:52:02
70799457,1,,,0,106,"<p>We have a project which uses the Apollo client on frontend and Apollo express server on the BE. With following versions,</p>&#xA;<p>BE Apollo server:</p>&#xA;<pre><code>&quot;apollo-engine&quot;: &quot;^1.1.1&quot;,&#xA;&quot;apollo-server-express&quot;: &quot;^1.3.6&quot;,&#xA;</code></pre>&#xA;<p>FE Apollo client:</p>&#xA;<pre><code>&quot;apollo-cache-inmemory&quot;: &quot;^1.2.10&quot;,&#xA;&quot;react-apollo&quot;: &quot;^2.1.6&quot;,&#xA;&quot;apollo-client&quot;: &quot;^2.4.2&quot;,&#xA;&quot;apollo-link-context&quot;: &quot;^1.0.3&quot;,&#xA;&quot;apollo-link-error&quot;: &quot;^1.0.3&quot;,&#xA;&quot;apollo-link-http&quot;: &quot;^1.5.3&quot;,&#xA;&quot;apollo-utilities&quot;: &quot;^1.3.2&quot;,&#xA;</code></pre>&#xA;<p>And have very noob question. Can we upgrade the client on frontend to version 3 or 4, to use hooks and other new optimize functionality without upgrading the BE server. Any help will be appreciated</p>&#xA;",6657891,,,,2022-01-21 10:34:53,"Can any version of Apollo server / express be used with latest version of Apollo client 3, 4 or latest",<reactjs><apollo-client><react-apollo><apollo-server>,1,0,0,2022-01-21 09:58:52
70807434,2,,70688442,1,,"<p>1- To ignore the warnings you can use the following configuration in your <strong>webpack.config.js</strong> file. (<a href=""https://webpack.js.org/loaders/source-map-loader/#ignoring-warnings"" rel=""nofollow noreferrer"">Check here for more information</a>)</p>&#xA;<pre><code>module.exports = {&#xA;  module: {&#xA;    rules: [&#xA;      {&#xA;        test: /\.js$/,&#xA;        enforce: &quot;pre&quot;,&#xA;        use: [&quot;source-map-loader&quot;],&#xA;      },&#xA;    ],&#xA;  },&#xA;  ignoreWarnings: [/Failed to parse source map/],&#xA;};&#xA;</code></pre>&#xA;<p>2- Another solution for similar warnings might be disabling the source maps by adding a <strong>.env</strong> file in the root of your project containing <em>GENERATE_SOURCEMAP=false</em></p>&#xA;",1376715,,1376715,2022-01-21 20:46:54,2022-01-21 20:46:54,"",,0,0,0,2022-01-21 20:41:06
70813570,2,,69931579,0,,"<p>I switched to <a href=""https://www.npmjs.com/package/apollo-link-ws"" rel=""nofollow noreferrer"">apollo-link-ws</a> which fixed it</p>&#xA;",14781875,,,,2022-01-22 14:03:50,"",,0,1,0,2022-01-22 14:03:50
70819226,1,70819277,,0,523,"<p>As long as the line with <code>useLazyQuery</code> in <code>App.js</code> (code below) is removed, it will display simple &quot;HELLO&quot; message (working well), otherwise, I got the below error message</p>&#xA;<pre><code>Error: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:&#xA;1. You might have mismatching versions of React and the renderer (such as React DOM)&#xA;2. You might be breaking the Rules of Hooks&#xA;3. You might have more than one copy of React in the same app&#xA;</code></pre>&#xA;<p>App.js</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import React, { useState } from &quot;react&quot;;&#xA;import ReactDOM from &quot;react-dom&quot;;&#xA;import { syncUser as syncRecord } from &quot;./components/util&quot;;&#xA;import { useLazyQuery } from &quot;@apollo/client&quot;;&#xA;&#xA;export default function App(props) {&#xA;  console.log(&quot;React.version1&quot;, React.version);&#xA;  console.log(&quot;ReactDOM.version1&quot;, ReactDOM.version);&#xA;  const [syncUser] = useLazyQuery(syncRecord, {}); //CULPRIT LINE&#xA;  const [hasToken, setHasToken] = React.useState(false);&#xA;  return &lt;div className=&quot;App&quot;&gt;HELLO&lt;/div&gt;;&#xA;}&#xA;</code></pre>&#xA;<p>A few things I have checked</p>&#xA;<ol>&#xA;<li>React version &amp; React DOM version are same in index.js &amp; App.js i.e. <code>16.13.1</code></li>&#xA;<li>I don't think I broke Hooks rule -- <code>useState</code> working well in the same sample code <code>App.js</code></li>&#xA;<li><code>npm ls react</code> returns long tree with multiple react (but other than react at root tree -- the rest (part of the library) are using same react@16.3.1 deduped</li>&#xA;</ol>&#xA;<p>Apollo Client version</p>&#xA;<pre><code>    &quot;@apollo/client&quot;: &quot;^3.3.15&quot;,&#xA;    &quot;@apollo/react-hooks&quot;: &quot;^4.0.0&quot;,&#xA;</code></pre>&#xA;<p>The base project is node js server-side code, and I created a <code>client</code> directory in it - which contains also a React app.</p>&#xA;<p>client package.json</p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;client&quot;,&#xA;  &quot;version&quot;: &quot;0.1.0&quot;,&#xA;  &quot;private&quot;: true,&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@auth0/auth0-react&quot;: &quot;^1.1.0&quot;,&#xA;    &quot;@testing-library/jest-dom&quot;: &quot;^4.2.4&quot;,&#xA;    &quot;@testing-library/react&quot;: &quot;^9.5.0&quot;,&#xA;    &quot;@testing-library/user-event&quot;: &quot;^7.2.1&quot;,&#xA;    &quot;axios&quot;: &quot;^0.20.0&quot;,&#xA;    &quot;react-scripts&quot;: &quot;3.4.3&quot;&#xA;  },&#xA;  &quot;scripts&quot;: {&#xA;    &quot;start&quot;: &quot;react-scripts start&quot;,&#xA;    &quot;build&quot;: &quot;react-scripts build&quot;,&#xA;    &quot;test&quot;: &quot;react-scripts test&quot;,&#xA;    &quot;eject&quot;: &quot;react-scripts eject&quot;&#xA;  },&#xA;  &quot;eslintConfig&quot;: {&#xA;    &quot;extends&quot;: &quot;react-app&quot;&#xA;  },&#xA;  &quot;proxy&quot;: &quot;http://localhost:4567/&quot;,&#xA;  &quot;browserslist&quot;: {&#xA;    &quot;production&quot;: [&#xA;      &quot;&gt;0.2%&quot;,&#xA;      &quot;not dead&quot;,&#xA;      &quot;not op_mini all&quot;&#xA;    ],&#xA;    &quot;development&quot;: [&#xA;      &quot;last 1 chrome version&quot;,&#xA;      &quot;last 1 firefox version&quot;,&#xA;      &quot;last 1 safari version&quot;&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>server-side package.json</p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;cmis&quot;,&#xA;  &quot;version&quot;: &quot;0.3.0&quot;,&#xA;  &quot;description&quot;: &quot;NodeJS&quot;,&#xA;  &quot;engines&quot;: {&#xA;    &quot;node&quot;: &quot;16.x&quot;&#xA;  },&#xA;  &quot;type&quot;: &quot;module&quot;,&#xA;  &quot;main&quot;: &quot;server.js&quot;,&#xA;  &quot;scripts&quot;: {&#xA;    &quot;start&quot;: &quot;node server.js&quot;,&#xA;    &quot;heroku-postbuild&quot;: &quot;cd client &amp;&amp; npm install &amp;&amp; npm install --only=dev --no-shrinkwrap &amp;&amp; npm run build&quot;,&#xA;    &quot;test&quot;: &quot;node test.js&quot;,&#xA;    &quot;generate&quot;: &quot;plop&quot;,&#xA;    &quot;client&quot;: &quot;cd client &amp;&amp; yarn start&quot;,&#xA;    &quot;server&quot;: &quot;nodemon -e js,graphql server.js&quot;,&#xA;    &quot;dev&quot;: &quot;concurrently --kill-others-on-fail \&quot;yarn server\&quot; \&quot;yarn client\&quot;&quot;&#xA;  },&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@apollo/client&quot;: &quot;^3.3.15&quot;,&#xA;    &quot;@apollo/react-hooks&quot;: &quot;^4.0.0&quot;,&#xA;    &quot;@aws-sdk/client-codebuild&quot;: &quot;^3.20.0&quot;,&#xA;    &quot;@aws-sdk/client-s3&quot;: &quot;^3.20.0&quot;,&#xA;    &quot;@david.kucsai/react-pdf-table&quot;: &quot;^0.3.0&quot;,&#xA;    &quot;@material-ui/core&quot;: &quot;^4.11.0&quot;,&#xA;    &quot;@material-ui/icons&quot;: &quot;^4.9.1&quot;,&#xA;    &quot;@material-ui/lab&quot;: &quot;^4.0.0-alpha.56&quot;,&#xA;    &quot;@react-pdf/renderer&quot;: &quot;^1.6.12&quot;,&#xA;    &quot;@sendgrid/mail&quot;: &quot;^7.4.0&quot;,&#xA;    &quot;apollo-boost&quot;: &quot;^0.4.9&quot;,&#xA;    &quot;apollo-cache-inmemory&quot;: &quot;^1.6.6&quot;,&#xA;    &quot;apollo-client&quot;: &quot;^2.6.10&quot;,&#xA;    &quot;apollo-link-http&quot;: &quot;^1.5.17&quot;,&#xA;    &quot;aws-sdk&quot;: &quot;^2.804.0&quot;,&#xA;    &quot;bull&quot;: &quot;^3.19.1&quot;,&#xA;    &quot;constant-case&quot;: &quot;^3.0.4&quot;,&#xA;    &quot;dataloader&quot;: &quot;^2.0.0&quot;,&#xA;    &quot;dayjs&quot;: &quot;^1.9.3&quot;,&#xA;    &quot;dotenv&quot;: &quot;^8.2.0&quot;,&#xA;    &quot;ejs&quot;: &quot;^2.5.6&quot;,&#xA;    &quot;express&quot;: &quot;^4.17.1&quot;,&#xA;    &quot;express-graphql&quot;: &quot;^0.11.0&quot;,&#xA;    &quot;express-jwt&quot;: &quot;^6.0.0&quot;,&#xA;    &quot;express-jwt-authz&quot;: &quot;^2.4.1&quot;,&#xA;    &quot;file-saver&quot;: &quot;^2.0.5&quot;,&#xA;    &quot;filepond&quot;: &quot;^4.23.1&quot;,&#xA;    &quot;filepond-plugin-file-validate-size&quot;: &quot;^2.2.2&quot;,&#xA;    &quot;filepond-plugin-image-exif-orientation&quot;: &quot;^1.0.9&quot;,&#xA;    &quot;filepond-plugin-image-preview&quot;: &quot;^4.6.4&quot;,&#xA;    &quot;graphql&quot;: &quot;^15.3.0&quot;,&#xA;    &quot;graphql-tools&quot;: &quot;^6.2.1&quot;,&#xA;    &quot;jwks-rsa&quot;: &quot;^1.11.0&quot;,&#xA;    &quot;knex&quot;: &quot;^0.21.5&quot;,&#xA;    &quot;pg&quot;: &quot;^8.3.3&quot;,&#xA;    &quot;pluralize&quot;: &quot;^8.0.0&quot;,&#xA;    &quot;react&quot;: &quot;16.13.1&quot;,&#xA;    &quot;react-apollo&quot;: &quot;^3.1.5&quot;,&#xA;    &quot;react-filepond&quot;: &quot;^7.1.0&quot;,&#xA;    &quot;react-lottie&quot;: &quot;^1.2.3&quot;,&#xA;    &quot;react-redux&quot;: &quot;^7.2.1&quot;,&#xA;    &quot;react-swipeable-views&quot;: &quot;^0.13.9&quot;,&#xA;    &quot;react-typist&quot;: &quot;^2.0.5&quot;,&#xA;    &quot;redis&quot;: &quot;^3.0.2&quot;,&#xA;    &quot;redux&quot;: &quot;^4.0.5&quot;,&#xA;    &quot;redux-persist&quot;: &quot;^6.0.0&quot;,&#xA;    &quot;redux-thunk&quot;: &quot;^2.3.0&quot;,&#xA;    &quot;swiper&quot;: &quot;^6.5.3&quot;,&#xA;    &quot;throng&quot;: &quot;^5.0.0&quot;,&#xA;    &quot;uuid&quot;: &quot;^8.3.0&quot;,&#xA;    &quot;yarn&quot;: &quot;^1.22.10&quot;&#xA;  },&#xA;  &quot;devDependencies&quot;: {&#xA;    &quot;@faker-js/faker&quot;: &quot;^6.0.0-alpha.3&quot;,&#xA;    &quot;concurrently&quot;: &quot;^4.0.1&quot;,&#xA;    &quot;got&quot;: &quot;^11.3.0&quot;,&#xA;    &quot;plop&quot;: &quot;^3.0.5&quot;,&#xA;    &quot;tape&quot;: &quot;^4.7.0&quot;&#xA;  },&#xA;  &quot;repository&quot;: {&#xA;    &quot;type&quot;: &quot;git&quot;,&#xA;    &quot;url&quot;: &quot;https://github.com/heroku/node-js-getting-started&quot;&#xA;  },&#xA;  &quot;keywords&quot;: [&#xA;    &quot;node&quot;,&#xA;    &quot;heroku&quot;,&#xA;    &quot;express&quot;&#xA;  ],&#xA;  &quot;license&quot;: &quot;MIT&quot;&#xA;}&#xA;</code></pre>&#xA;",325192,,325192,2022-01-23 05:58:33,2022-01-23 05:58:33,"Error: Invalid hook call in Apollo useLazyQuery , useMutation, useQuery",<javascript><reactjs><react-hooks><apollo-client>,1,8,0,2022-01-23 04:53:16
70839789,2,,65994792,0,,<p>This error is thrown because of Apollo InMemoryCache. <code>Refreshing the browser window solved the error</code>.</p>&#xA;<p>if it fails restart your development server.</p>&#xA;,9373400,,,,2022-01-24 20:01:00,"",,0,0,0,2022-01-24 20:01:00
70843601,2,,70304001,0,,"<p>They haven't put a stable release right now but the version nexus@1.2.0-next.17 seems to work fine for me atm ref <a href=""https://github.com/graphql-nexus/nexus/pull/1017"" rel=""nofollow noreferrer"">https://github.com/graphql-nexus/nexus/pull/1017</a>&#xA;It's not officially supported yet so you'll have to put in .env or env.local &quot;PEER_DEPENDENCY_CHECK='false'&quot; for now in order for it to disable this peer dependency check.&#xA;then you can have the latest graphql 16+</p>&#xA;<p>it's definitely saved me from having to a prisma migrate dev and prisma db push to remove type errors.</p>&#xA;<p>Hopefully they'll get a stable version 1.2.0 by Q1/Q2 2022 my guess</p>&#xA;",2745797,,,,2022-01-25 04:55:45,"",,0,0,0,2022-01-25 04:55:45
70855606,1,70857317,,0,281,"<p>I'm trying to do a performance test on a</p>&#xA;<ul>&#xA;<li>SPA  with a Frontend in React, deployed with Netlify</li>&#xA;<li>As a backend we're using Hasura Cloud Graphql (std version) <a href=""https://hasura.io/"" rel=""nofollow noreferrer"">https://hasura.io/</a>, where everything from the client goes directly through Hasura to the DB.</li>&#xA;<li>DB is in Postgress housed in Heroku (Std 0 tier).</li>&#xA;<li>We're hoping to be able to have around 800 users <strong>simultaneous</strong>.</li>&#xA;</ul>&#xA;<p>The problem is that i'm loss about how to do it or if i'm doing it correctly, seeing how most of our stuff are <strong>&quot;subscriptions/mutations&quot; that I had to transform into queries</strong>. I tried doing those test with k6 and Jmeter but i'm not sure if i'm doing them properly.</p>&#xA;<p><strong>k6 test</strong></p>&#xA;<p>At first, i did a quick search and collected around 10 subscriptions that are commonly used. Then i tried to create a performance test with k6  <a href=""https://k6.io/docs/using-k6/http-requests/"" rel=""nofollow noreferrer"">https://k6.io/docs/using-k6/http-requests/</a> but i wasn't able to create a working subscription test so i just transform each subscription into a query and perform a http.post with this setup:</p>&#xA;<pre><code>export const options = {&#xA;  stages: [&#xA;    { duration: '30s', target: 75 },&#xA;    { duration: '120s', target: 75 },&#xA;    { duration: '60s', target: 50 },&#xA;    { duration: '30s', target: 30 },&#xA;    { duration: '10s', target: 0 }&#xA;  ]&#xA;};&#xA;&#xA;export default function () {&#xA;  var res = http.post(prod,  &#xA;    JSON.stringify({&#xA;    query: listaQueries.GetDesafiosCursosByKey(&#xA;      keys.desafioCursoKey&#xA;    )}), params);&#xA;  sleep(1)&#xA;}&#xA;</code></pre>&#xA;<p>I did this for every query and ran each test individually. Unfortunately,  the numbers i got were bad, and somehow our test environment was getting better times than production. (The only difference afaik is that we're using Hasura Cloud for production).</p>&#xA;<p>I tried to implement websocket, but i couldn't getthem work and configure them to do a stress/load test.</p>&#xA;<p><a href=""https://i.stack.imgur.com/Q9L8x.png"" rel=""nofollow noreferrer"">K6 result</a></p>&#xA;<p><strong>Jmeter test</strong></p>&#xA;<p>After that, i tried something similar with Jmeter, but again i couldn't figure how to set up a subscription test (after i while, i read in a blog that jmeter doesn't support it&#xA;<a href=""https://qainsights.com/deep-dive-into-graphql-in-jmeter/"" rel=""nofollow noreferrer"">https://qainsights.com/deep-dive-into-graphql-in-jmeter/</a> ) so i simply transformed all subscriptions into a query and tried to do the same, but the numbers I was getting were different and much higher than k6.</p>&#xA;<p><a href=""https://i.stack.imgur.com/dEP4g.png"" rel=""nofollow noreferrer"">Jmeter query Config 1</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/56MsF.png"" rel=""nofollow noreferrer"">Jmeter query config 2</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/I2yZh.png"" rel=""nofollow noreferrer"">Jmeter thread config</a></p>&#xA;<p><strong>Questions</strong></p>&#xA;<p>I'm not sure if i'm doing it correctly, if transforming every subscription into a query and perform a http request is a correct approach for it. (At least I know that those queries return the data correctly).</p>&#xA;<p>Should i just increase the number of VUS/threads until i get a constant timeout to simulate a stress test?  There were some test that are causing a graphql error on the website <a href=""https://i.stack.imgur.com/87b9D.png"" rel=""nofollow noreferrer"">Graphql error</a>, and others were having a</p>&#xA;<p><code>&quot;&quot;WARN[0059] Request Failed    error=&quot;Post \&quot;https://xxxxxxx-xxxxx.herokuapp.com/v1/graphql\&quot;: EOF&quot;&quot;</code></p>&#xA;<p>in the k6 console.&#xA;Or should i just give up with k6/jmeter and try to search for another tool to perfom those test?</p>&#xA;<p>Thanks you in advance, and sorry for my English and explanation, but i'm a complete newbie at this.</p>&#xA;",18031372,,,,2022-01-26 07:32:18,Load/stress test in a SPA with Hasura Cloud Graphql as a backend and subscriptions,<jmeter><load-testing><stress-testing><graphql-subscriptions><k6>,2,0,0,2022-01-25 20:59:19
70856878,2,,70854830,2,,"<p>Which GraphQL client are you using?&#xA;If you're using Apollo, and you really don't have access to the schema/resolvers in the server, you can create a local field and resolve it on your own, and so you can manipulate as much as you want.</p>&#xA;<p>Reference&#xA;<a href=""https://www.apollographql.com/docs/react/local-state/managing-state-with-field-policies/#defining"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/local-state/managing-state-with-field-policies/#defining</a></p>&#xA;<p>Basically, if you're querying a field like:</p>&#xA;<pre><code>query {&#xA;  someQuery(someFilter: {foo: &quot;bar&quot;}) {&#xA;    items {&#xA;      data&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>You can create a local field and write a <code>typePolicy</code> to it. Then you can query something like:</p>&#xA;<pre><code>query {&#xA;  someQuery(someFilter: {foo: &quot;bar&quot;}) {&#xA;    items {&#xA;      data&#xA;    }&#xA;&#xA;    parsedItems @client&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Then you can get data from <code>ìtems</code> and resolve <code>parsedItems</code> locally as you want.</p>&#xA;",9424618,,,,2022-01-25 23:12:21,"",,0,4,0,2022-01-25 23:12:21
70886384,2,,70880237,0,,"<p>Try to use options-api version</p>&#xA;<p><a href=""https://v4.apollo.vuejs.org/guide-option/setup.html#_1-install-vue-apollo-option"" rel=""nofollow noreferrer"">https://v4.apollo.vuejs.org/guide-option/setup.html#_1-install-vue-apollo-option</a></p>&#xA;",17976293,,,,2022-01-27 22:06:57,"",,0,0,0,2022-01-27 22:06:57
70895652,2,,70895614,0,,"<p>The best way to track if a mutation/query is called is via the browser network tab. You'll be able to see all of the network requests with the parameters that were sent. In browser developer tools -&gt; network tab.</p>&#xA;<p>Click on the Fetch/XRH filter as well to limit the results.</p>&#xA;<p>If there is an action that you want to do after the mutation is called, onCompleted will be your best bet.</p>&#xA;<pre><code>const [muationHere] = useMutation(&#xA; MUTATION,&#xA;   {&#xA;      onCompleted(data) {&#xA;        console.log(data);&#xA;      }&#xA;   }&#xA; );&#xA;</code></pre>&#xA;",11465478,,11465478,2022-01-28 15:18:16,2022-01-28 15:18:16,"",,0,2,0,2022-01-28 14:51:04
70912421,2,,70895776,1,,<p>ok it was a bug on the Customer API where it did not display some graphql data points when theres a bug for that particular query. after fixing it the display was able to render.</p>&#xA;,6782594,,,,2022-01-30 06:35:57,"",,0,0,0,2022-01-30 06:35:57
70918391,1,,,1,1397,"<p>Good morning/afternoon stackoverflow.  I'm using an npm package called <a href=""https://www.npmjs.com/package/@graphql-codegen/cli"" rel=""nofollow noreferrer"">@graphql-codegen/cli</a> to generate type definitions/utilites for my GraphQL schema.  Recently, I've been encountering an error each time I try to run graphql-codegen command/script.  This is the error that I get</p>&#xA;<pre><code>&quot;Duplicate &quot;graphql&quot; modules cannot be used at the same time since different&#xA;versions may have different capabilities and behavior. The data from one&#xA;version used in the function from another could produce confusing and&#xA;spurious results.&quot;&#xA;...&#xA;&quot;Ensure that there is only one instance of &quot;graphql&quot; in the node_modules&#xA;directory. If different versions of &quot;graphql&quot; are the dependencies of other&#xA;relied on modules, use &quot;resolutions&quot; to ensure only one version is installed.&quot;&#xA;</code></pre>&#xA;<p>I'm fairly certain this issue is with <strong>my environment, not my project</strong>.  I attempted to create a brand new project from scratch and still received the same error. Here are the things I've tried</p>&#xA;<ul>&#xA;<li>Reinstalling node_modules</li>&#xA;<li>Using the resolutions property in package.json</li>&#xA;<li>Using different versions of the graphql/graphql-cli packages</li>&#xA;<li>Completely wiping out my global npm packages</li>&#xA;</ul>&#xA;<p>I've spent the last couple of days attempting to resolve this error, but I'm all out of ideas. Any thoughts or recommendations are much appreciated. Also, below is a link to a codesandbox that contains the relevant files</p>&#xA;<p><a href=""https://codesandbox.io/s/graphql-codegen-cli-example-qq5cj"" rel=""nofollow noreferrer"">https://codesandbox.io/s/graphql-codegen-cli-example-qq5cj</a></p>&#xA;",9729400,,,,2022-02-27 20:53:27,"Duplicate ""graphql"" modules cannot be used at the same time",<graphql><frontend><graphql-codegen>,1,0,0,2022-01-30 19:59:42
70922564,2,,68624233,3,,"<p>I solved it by running <code>npm i micro</code> then restarting the server, worked fine after that</p>&#xA;",16408442,,,,2022-01-31 07:39:15,"",,0,0,0,2022-01-31 07:39:15
70928992,2,,70928897,0,,"<p>Apparently there is already a similar thread on the Dgraph forum: <a href=""https://discuss.dgraph.io/t/composite-id-fields/13337"" rel=""nofollow noreferrer"">https://discuss.dgraph.io/t/composite-id-fields/13337</a></p>&#xA;",13171776,,,,2022-01-31 16:00:30,"",,0,0,0,2022-01-31 16:00:30
70935714,1,,,1,348,"<p>I am trying to run this query in react app , I am using using apollo client, It run successfully but does give me expected result.&#xA;My Query</p>&#xA;<pre><code>{&#xA;  productProjectionSearch(filters: {string: &quot;categories.id:\&quot;011d3888-27be-4d11-bf1e-4e3ccb737c8b\&quot;&quot;}, fuzzy: true) {&#xA;    count&#xA;    results {&#xA;      categories {&#xA;        id&#xA;      }&#xA;      version&#xA;      published&#xA;      name(locale: &quot;en&quot;)&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>My react apollo client query</p>&#xA;<pre><code>query {&#xA;    productProjectionSearch(&#xA;      filters: {&#xA;        string: categories.id:${'011d3888-27be-4d11-bf1e-4e3ccb737c8b'}&quot;&#xA;      }&#xA;      fuzzy: true&#xA;    ) {&#xA;      count&#xA;      results {&#xA;        categories {&#xA;          id&#xA;        }&#xA;        version&#xA;        published&#xA;        name(locale: &quot;en&quot;)&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>it does not give me expected result , it's not considering the id which I input i.e. string: categories.id:${'011d3888-27be-4d11-bf1e-4e3ccb737c8b'}&quot;</p>&#xA;",18087080,,18087080,2022-02-01 05:03:39,2022-02-01 05:03:39,CommerceTools GraphQl query,<graphql><commercetools>,0,6,0,2022-02-01 04:51:15
70936829,2,,70924698,0,,"<p>The issue here, besides your <code>gatsby-node.js</code> looks good and the pages should be created correctly, is that you don't have a connection to your WordPress site and the code breaks at:</p>&#xA;<pre><code>_.each(result.data.allWpPage.edges, edge =&gt; {&#xA;</code></pre>&#xA;<p>Because <code>allWpPage</code> is <code>undefined</code>.</p>&#xA;<p>In addition, your promise rejection is not doing what it should (because it's not throwing any exception:</p>&#xA;<pre><code>if (result.errors) {&#xA;  console.log(result.errors)&#xA;  reject(result.errors)&#xA;}&#xA;</code></pre>&#xA;<p>Should be something like:</p>&#xA;<pre><code>if (!result) {&#xA;  console.log(result.errors)&#xA;  reject(result.errors)&#xA;}&#xA;</code></pre>&#xA;<p>The issue is:</p>&#xA;<pre><code>{&#xA;    resolve: 'gatsby-source-wordpress',&#xA;    options: {&#xA;      &quot;url&quot;: &quot;http://learn.test/graphql&quot;&#xA;    }&#xA;</code></pre>&#xA;<p>This URL doesn't seem to be providing any valid GraphQL schema.</p>&#xA;<p>I'd recommend following one of the <a href=""https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-wordpress/docs/tutorials/index.md"" rel=""nofollow noreferrer""><code>gatsby-plugin-wordpress</code> tutorials</a> or diving directly on one of the <a href=""https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-wordpress/docs/tutorials/creating-a-new-site-from-a-starter.md"" rel=""nofollow noreferrer"">starters</a> which has a minimum default configuration:</p>&#xA;<pre><code>  resolve: `gatsby-source-wordpress`,&#xA;  options: {&#xA;    url: `https://wpgatsbydemo.wpengine.com/graphql`,&#xA;  },&#xA;</code></pre>&#xA;<p>Here's one of the starters with a valid and running WordPress GraphQL configuration: <a href=""https://www.gatsbyjs.com/starters/gatsbyjs/gatsby-starter-wordpress-blog"" rel=""nofollow noreferrer"">https://www.gatsbyjs.com/starters/gatsbyjs/gatsby-starter-wordpress-blog</a></p>&#xA;",5585371,,,,2022-02-01 07:23:53,"",,0,0,0,2022-02-01 07:23:53
70954528,1,,,1,783,"<p>I need help with a many-to-many problem with typeorm, typegraphql. I tried many ways to add items to the M-T-M relation table but couldn't do it. I followed TypeORM documentation but I think I am missing something.</p>&#xA;<p>When I try to get Teachers from Faculty it returns undefined. What type should it be? I thought it is an array and I can easily push an item to it, or spread what was the old value and add an item. However, none of the above-mentioned methods are worked.</p>&#xA;<pre><code> @ObjectType()&#xA;@Entity()&#xA;export class Faculty extends BaseEntity {&#xA;  @Field(() =&gt; ID)&#xA;  @PrimaryColumn()&#xA;  id: string;&#xA;&#xA;  @Field(() =&gt; [Department])&#xA;  @OneToMany(() =&gt; Department, (department) =&gt; department.faculty)&#xA;  departments: Department[];&#xA;&#xA;  @Field(() =&gt; [Teacher], { nullable: true })&#xA;  @ManyToMany(() =&gt; Teacher)&#xA;  @JoinTable()&#xA;  teachers: Teacher[];&#xA;&#xA;  @BeforeInsert()&#xA;  setId() {&#xA;    this.id = uuid();&#xA;  }&#xA;}&#xA;&#xA;&#xA;&#xA;@ObjectType()&#xA;@Entity()&#xA;export class Teacher extends BaseEntity {&#xA;  @Field(() =&gt; ID)&#xA;  @PrimaryColumn()&#xA;  id: string;&#xA;&#xA;  @Field(() =&gt; [Faculty])&#xA;  @ManyToMany(() =&gt; Faculty, (faculty) =&gt; faculty.teachers)&#xA;  faculties: Faculty[];&#xA;&#xA;  @BeforeInsert()&#xA;  setId() {&#xA;    this.id = uuid();&#xA;  }&#xA;}&#xA;&#xA;&#xA;&#xA; @Mutation(() =&gt; Teacher)&#xA;  async addTeacherToFaculty(&#xA;    @Arg('teacherId') teacher_id: string,&#xA;    @Arg('facultyId') faculty_id: string&#xA;  ): Promise&lt;Teacher&gt; {&#xA;    const teacher = await Teacher.findOne({ where: { id: teacher_id } });&#xA;&#xA;    let faculty = await Faculty.findOne({ where: { id: faculty_id } });&#xA;&#xA;    if (!teacher) {&#xA;      throw new Error('Invalid credentials, please provide correct teacher ID');&#xA;    }&#xA;&#xA;    if (!faculty) {&#xA;      throw new Error('Invalid credentials, please provide correct faculty ID');&#xA;    }&#xA;&#xA;    const { teachers } = faculty;&#xA;&#xA;    if (teachers &amp;&amp; teachers.length == 0) {&#xA;      faculty.teachers = [teacher];&#xA;    } else {&#xA;      faculty.teachers?.push(teacher);&#xA;    }&#xA;&#xA;    console.log(faculty.teachers);&#xA;&#xA;    await faculty.save();&#xA;&#xA;    return teacher;&#xA;  }&#xA;</code></pre>&#xA;",16887957,,,,2022-08-03 12:27:49,How can I add item to many-to-many relationed table with TypeORM,<typescript><typeorm><typegraphql>,2,0,0,2022-02-02 11:07:43
70965072,1,,,0,183,"<p>I've been trying to deploy a Blog / CMS that I've built using NextJS, Apollo and GraphQL. The error I'm getting in Heroku comes from Apollo client.</p>&#xA;<pre><code>export const httpLink = createHttpLink({ &#xA;    fetch,&#xA;    uri: '/api/graphql'&#xA;});&#xA;</code></pre>&#xA;<p>If i use the relative route to the NextJS api folder it gives me this absolute URL error</p>&#xA;<pre><code>Error: Only absolute URLs are supported&#xA;remote:     at new ApolloError (/tmp/build_e89f78dd/node_modules/@apollo/client/errors/errors.cjs:34:28)&#xA;remote:     at /tmp/build_e89f78dd/node_modules/@apollo/client/core/core.cjs:1595:19&#xA;remote:     at both (/tmp/build_e89f78dd/node_modules/@apollo/client/utilities/utilities.cjs:986:53)&#xA;remote:     at /tmp/build_e89f78dd/node_modules/@apollo/client/utilities/utilities.cjs:979:72&#xA;remote:     at new Promise (&lt;anonymous&gt;)&#xA;remote:     at Object.then (/tmp/build_e89f78dd/node_modules/@apollo/client/utilities/utilities.cjs:979:24)&#xA;remote:     at Object.error (/tmp/build_e89f78dd/node_modules/@apollo/client/utilities/utilities.cjs:987:49)&#xA;remote:     at notifySubscription (/tmp/build_e89f78dd/node_modules/zen-observable/lib/Observable.js:140:18)&#xA;remote:     at onNotify (/tmp/build_e89f78dd/node_modules/zen-observable/lib/Observable.js:179:3)&#xA;remote:     at SubscriptionObserver.error (/tmp/build_e89f78dd/node_modules/zen-observable/lib/Observable.js:240:7) {&#xA;remote:   type: 'ApolloError',&#xA;remote:   graphQLErrors: [],&#xA;remote:   clientErrors: [],&#xA;remote:   networkError: {}&#xA;remote: }&#xA;</code></pre>&#xA;<p>Apollo client asks me for an absolute URL that I don't have because the app is not deployed yet, therefore it doesn't exist. I have to deploy it first.&#xA;During development I was able to use the route to localhost like this</p>&#xA;<pre><code>export const httpLink = createHttpLink({ &#xA;    fetch,&#xA;    uri: 'http://localhost:3000/api/graphql'&#xA;});&#xA;</code></pre>&#xA;<p>But now I don't know what URL to use.&#xA;When trying to deploy to vercel i ran into the same issue.</p>&#xA;",15041543,,,,2022-02-03 01:54:08,How to deploy Apollo/GraphQL/NextJS app to Heroku?,<heroku><next.js><apollo><apollo-client><apollo-server>,0,1,0,2022-02-03 01:54:08
70980195,2,,57445294,0,,<p>wow i am also doing the same project from the net ninja youtube tutorial and got the same error actually the version of react-oppollo is changed with the passage of time</p>&#xA;,17102822,,,,2022-02-04 00:40:39,"",,0,0,0,2022-02-04 00:40:39
70981336,1,70985372,,1,43,"<p>I have been working on a project. I always followed this idea. Don't send all the data in one call.</p>&#xA;<p>Here is an example,</p>&#xA;<p>Suppose there is an API to return all the list of students that can be added to test they need to finish.</p>&#xA;<p>So, on UI side every student have one button &quot;add&quot; which will show a pop up if the student is already assigned to take the test. Or it will show a pop up he has already finished the test.</p>&#xA;<p>I could join many table and send all the data in one api call while fetchig students. Or&#xA;I could send the send the students and then on &quot;add&quot; there is another API to make sure the above mentioned conditioned met.</p>&#xA;<p>Which approach is better?</p>&#xA;<p>Because If I send all the data in one api call, there might be only few students be assigned the test.</p>&#xA;",14912334,,,,2022-02-04 11:07:13,Sending unnecessary data in one query response or making multiple queries?,<performance><graphql><backend>,1,0,0,2022-02-04 04:12:38
71021634,2,,57295523,0,,"<p>Your Versions does not compatible.</p>&#xA;<p>From the docs itself: <a href=""https://docs.nestjs.com/graphql/quick-start"" rel=""nofollow noreferrer"">https://docs.nestjs.com/graphql/quick-start</a></p>&#xA;<pre><code>WARNING&#xA;@nestjs/graphql@^9 is compatible with Apollo v3 (check out Apollo Server 3 migration guide for more details), while @nestjs/graphql@^8 only supports Apollo v2 (e.g., apollo-server-express@2.x.x package). Both versions (v9 and v8) are fully compatible with Nest v8 (@nestjs/common@^8, @nestjs/core@^8, etc.).&#xA;</code></pre>&#xA;",4479861,,,,2022-02-07 16:04:21,"",,0,0,0,2022-02-07 16:04:21
71028679,1,,,1,89,"<p><strong>I built a docker image for Scibert for CPU according to instruction here:</strong>&#xA;<a href=""https://www.semi.technology/developers/weaviate/current/modules/text2vec-transformers.html#option-3-custom-build-with-a-private-or-local-model"" rel=""nofollow noreferrer"">https://www.semi.technology/developers/weaviate/current/modules/text2vec-transformers.html#option-3-custom-build-with-a-private-or-local-model</a></p>&#xA;<p><strong>Here the docker file:</strong></p>&#xA;<pre><code>FROM semitechnologies/transformers-inference:custom&#xA;RUN MODEL_NAME=allenai/scibert_scivocab_uncased ./download.py&#xA;</code></pre>&#xA;<p><strong>Here is the docker-compose.yaml for CPU:</strong></p>&#xA;<pre><code>version: '3.4'&#xA;services:&#xA;  weaviate:&#xA;    image: semitechnologies/weaviate:1.7.2&#xA;    restart: on-failure:0&#xA;    ports:&#xA;     - &quot;8080:8080&quot;&#xA;    environment:&#xA;      QUERY_DEFAULTS_LIMIT: 20&#xA;      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'&#xA;      PERSISTENCE_DATA_PATH: &quot;./data&quot;&#xA;      DEFAULT_VECTORIZER_MODULE: text2vec-transformers&#xA;      ENABLE_MODULES: text2vec-transformers&#xA;      TRANSFORMERS_INFERENCE_API: http://t2v-transformers:8080&#xA;  t2v-transformers:&#xA;    image: scibert-inference&#xA;    environment:&#xA;      ENABLE_CUDA: 0&#xA;</code></pre>&#xA;<p><strong>I can run it on CPU without error.&#xA;NOW, I need to run it on the GPU with this docker-compose.yaml:</strong></p>&#xA;<pre><code>version: '3.4'&#xA;services:&#xA;  weaviate:&#xA;    image: semitechnologies/weaviate:1.10.1&#xA;    restart: on-failure:0&#xA;    ports:&#xA;     - &quot;8080:8080&quot;&#xA;    environment:&#xA;      QUERY_DEFAULTS_LIMIT: 20&#xA;      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'&#xA;      PERSISTENCE_DATA_PATH: &quot;./data&quot;&#xA;      DEFAULT_VECTORIZER_MODULE: text2vec-transformers&#xA;      ENABLE_MODULES: text2vec-transformers&#xA;      TRANSFORMERS_INFERENCE_API: http://t2v-transformers:8080&#xA;  t2v-transformers:&#xA;    image: scibert-inference&#xA;    environment:&#xA;      ENABLE_CUDA: '1'&#xA;      NVIDIA_VISIBLE_DEVICES: 'all'&#xA;    deploy:&#xA;      resources:&#xA;        reservations:&#xA;          devices:&#xA;          - capabilities: &#xA;            - 'gpu'&#xA;</code></pre>&#xA;<p><strong>When I ran it on GPU, I had the following error:</strong></p>&#xA;<pre><code>weaviate_1          | {&quot;action&quot;:&quot;transformer_remote_wait_for_startup&quot;,&quot;error&quot;:&quot;send check ready request: Get \&quot;http://t2v-transformers:8080/.well-known/ready\&quot;: dial tcp: lookup t2v-transformers on 127.0.0.11:53: no such host&quot;,&quot;level&quot;:&quot;warning&quot;,&quot;msg&quot;:&quot;transformer remote inference service not ready&quot;,&quot;time&quot;:&quot;2022-02-08T03:47:54Z&quot;}&#xA;</code></pre>&#xA;<p>My system specifications are as follows:</p>&#xA;<pre><code>Cuda compilation tools, release 9.0, V9.0.176&#xA;Client: Docker Engine - Community&#xA; Version:           20.10.7&#xA; API version:       1.41&#xA; Go version:        go1.13.15&#xA; Git commit:        f0df350&#xA; Built:             Wed Jun  2 11:56:47 2021&#xA; OS/Arch:           linux/amd64&#xA; Context:           default&#xA; Experimental:      true&#xA;&#xA;Server: Docker Engine - Community&#xA; Engine:&#xA;  Version:          20.10.7&#xA;  API version:      1.41 (minimum version 1.12)&#xA;  Go version:       go1.13.15&#xA;  Git commit:       b0f5bc3&#xA;  Built:            Wed Jun  2 11:54:58 2021&#xA;  OS/Arch:          linux/amd64&#xA;  Experimental:     false&#xA; containerd:&#xA;  Version:          1.4.6&#xA;  GitCommit:        d71fcd7d8303cbf684402823e425e9dd2e99285d&#xA; runc:&#xA;  Version:          1.0.0-rc95&#xA;  GitCommit:        b9ee9c6314599f1b4a7f497e1f1f856fe433d3b7&#xA; docker-init:&#xA;  Version:          0.19.0&#xA;  GitCommit:        de40ad0&#xA;docker-compose version 1.29.2, build 5becea4c&#xA;</code></pre>&#xA;",9120020,,9120020,2022-02-08 04:51:45,2022-02-11 09:07:46,Running Scibert on GPU,<graphql><gpu><huggingface-transformers><weaviate>,1,0,0,2022-02-08 04:39:39
71036777,2,,70922731,2,,"<p>From their documentation it seems that apollo-server 2 don't support graphql &gt;15</p>&#xA;<p><a href=""https://www.apollographql.com/docs/apollo-server/migration/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/migration/</a></p>&#xA;<p>I would either migrate to apollo-server 3 or downgrade graphql to version 15.</p>&#xA;",16026917,,,,2022-02-08 15:48:09,"",,0,1,0,2022-02-08 15:48:09
71043820,2,,42133734,1,,"<p>I believe Michael Landis was trying to get this point across, but didn't quite provide the solution. If your service is running on locally on 192.168.100.100, then this needs to be in your hosts file (e.g. /etc/hosts on linux):</p>&#xA;<pre><code>192.168.100.100 api-dev.xyz.io&#xA;</code></pre>&#xA;<p>The request that's currently failing needs to be made to api-dev.xyz.io, even during SSR. It's much easier to avoid the requests to &quot;http[s]://localhost/...&quot;.</p>&#xA;",18156375,,,,2022-02-09 03:57:44,"",,0,0,0,2022-02-09 03:57:44
71047659,2,,71039670,6,,"<p><strong>-- Solved --</strong></p>&#xA;<p>So I ran my default project on Spring Boot 2.7.0 and 2.6.3 on my test project. When I changed to 2.6.3 on default, it ran. So it seems like the latest GrahpQL isn't fully compatible with Spring Boot 2.7.0 yet. Which might be obvious because it was released in the last month.</p>&#xA;",15479495,,,,2022-02-09 10:11:58,"",,0,0,0,2022-02-09 10:11:58
71056449,2,,53192184,0,,<p>I faced this with latest version of graphql and @nestjs/graphql :&quot;9.1.2&quot; version.</p>&#xA;<p>Downgraded the version to 15.8.0 and it's started working.</p>&#xA;<p>npm i graphql@15.8.0</p>&#xA;,3792823,,,,2022-02-09 20:43:07,"",,0,0,0,2022-02-09 20:43:07
71064781,2,,71050862,0,,"<p>Where does your GraphQL server run? I assume it doesn't run on the mobile device. If so, you have to specify the URL of the server in Apollo client constructor.</p>&#xA;<p>http://localhost:8000/ --&gt; http://myserver:8000/</p>&#xA;<p>And of course your mobile device should have access to port 8000 of myserver.</p>&#xA;",2773928,,446477,2022-02-10 14:59:39,2022-02-10 14:59:39,"",,0,4,0,2022-02-10 12:03:16
71077093,2,,64110882,0,,<p>Got this while running ESM modules targeting ES2022 on Windows and Node 14.</p>&#xA;<p>Updating to Node 16 fixed the issue.</p>&#xA;,213738,,,,2022-02-11 08:28:26,"",,0,0,0,2022-02-11 08:28:26
71077526,2,,71028679,1,,"<p>Did you set the <code>CUDA_CORE</code> environment variable? Weaviate is using this env variable to pinpoint the <code>cuda device</code> and if <code>CUDA_COR</code>E is not set, then it defaults to <code>cuda:0</code>.</p>&#xA;<p>If you are running this with docker-compose with <code>gpu capabilities</code>, you probably should pinpoint your gpu device properly. So you would have to override <code>CUDA_CORE</code> environment variable to something for example like this: <code>CUDA_CORE=GPU:0</code> like in <a href=""https://docs.docker.com/compose/gpu-support/#enabling-gpu-access-to-service-containers"" rel=""nofollow noreferrer"">this example</a> on docker page.</p>&#xA;<p>I don't know if your gpu device address is actually <code>GPU:0</code> (bc it's not <code>cuda:0</code> since it doesn't start), you can check that in your docker-compose logs.</p>&#xA;",8757741,,,,2022-02-11 09:07:46,"",,0,0,0,2022-02-11 09:07:46
71093177,2,,62760975,5,,"<p>This code was written with an earlier version of <code>express-graphql</code>.</p>&#xA;<p><strong>Prior to v0.10.0</strong>, you could use</p>&#xA;<pre><code>var graphqlHTTP = require('express-graphql');&#xA;</code></pre>&#xA;<p><strong>After v0.10.0</strong>, you need to use</p>&#xA;<pre><code>var { graphqlHTTP } = require('express-graphql');&#xA;</code></pre>&#xA;",7103882,,,,2022-02-12 15:21:49,"",,0,0,0,2022-02-12 15:21:49
71113467,1,71113950,,0,87,"<p>I want to deploy an GraphQL server (ApolloServer) instance to GCP/Firebase Cloud Functions.&#xA;When testing my function locally using Firebase Functions Emulator&#xA;I noticed that each time I open the GraphiQL interface, my terminal starts logging&#xA;function executions - I guess this happens solely because of the polling mechanism in GraphQL.</p>&#xA;<p>Does anyone know if this also means I get billed 1 function execution for each polling request?</p>&#xA;",16697539,,,,2022-02-14 15:05:26,Do I get billed for each http polling request when using ApolloServer on Firebase Cloud Functions?,<firebase><graphql><google-cloud-functions><apollo-server>,1,0,0,2022-02-14 14:28:09
71136669,1,,,2,790,"<p>I upgraded Nestjs server package and tried to start my server. This time I got the following error:</p>&#xA;<pre><code>`TypeError: (0 , apollo_server_core_1.ApolloServerPluginLandingPageGraphQLPlayground) is not a function`&#xA;</code></pre>&#xA;<p>I puzzled...</p>&#xA;",4791116,,,,2022-02-16 05:04:59,"TypeError: (0 , apollo_server_core_1.ApolloServerPluginLandingPageGraphQLPlayground) is not a function",<apollo><apollo-server>,1,0,0,2022-02-16 05:04:59
71155785,2,,69094680,0,,<p>The solution that worked for me was to define <code>@apollo/client</code> as a peer dependency in the root <code>package.json</code> of my shared lirbary (I'm using lerna).</p>&#xA;<p>It didn't work for me to just link the package with <code>yarn link</code> but I had to publish it on npm.</p>&#xA;,8724386,,,,2022-02-17 09:48:28,"",,0,0,0,2022-02-17 09:48:28
71166714,2,,71166198,0,,<p>I think its because of the version of your <code>apollo-client</code></p>&#xA;,17390529,,,,2022-02-17 23:35:05,"",,0,0,0,2022-02-17 23:35:05
71197822,1,71266703,,3,2131,"<p>I'm building an app with micro-frontends using webpack 5's module federation plugin. Everything was fine until I started adding react hooks into my remote app. At that point I received errors about &quot;invalid usage of hooks&quot;, i.e. I discovered I had TWO versions of react loaded, one from the remote and one from the app consuming the remote.</p>&#xA;<p>That problem was solved by adding a <code>shared</code> key to the <code>ModuleFederationPlugin</code> section of my webpack config that marked React as a singleton. Now everything compiles and seems to run just fine.</p>&#xA;<p>However, the webpack compiler is throwing some annoying warnings at me now. Its saying:</p>&#xA;<pre><code>No required version specified and unable to automatically determine one. Unable to find required version for &quot;react&quot; in description file (/Users/myComputer/Development/myapp/node_modules/@apollo/client/react/context/package.json). It need to be in dependencies, devDependencies or peerDependencies.&#xA;</code></pre>&#xA;<p>Here is what my webpack config (in the remote) looks like currently:</p>&#xA;<pre><code>const HtmlWebpackPlugin = require('html-webpack-plugin')&#xA;const ModuleFederationPlugin = require('webpack/lib/container/ModuleFederationPlugin')&#xA;&#xA;const deps = require('./package.json').dependencies&#xA;&#xA;module.exports = {&#xA;  mode: 'development',&#xA;  devServer: { port: 3001 },&#xA;  entry: './src/index.tsx',&#xA;  output: {&#xA;    path: __dirname + '/dist/',&#xA;  },&#xA;  module: {&#xA;    rules: [&#xA;      {&#xA;        test: /\.(ts|tsx)$/,&#xA;        exclude: /node_modules/,&#xA;        resolve: {&#xA;          extensions: ['.ts', '.tsx', '.js', '.json'],&#xA;        },&#xA;        use: 'ts-loader',&#xA;      },&#xA;    ]&#xA;  },&#xA;  devtool: 'source-map',&#xA;  plugins: [&#xA;    new ModuleFederationPlugin(&#xA;      {&#xA;        name: 'myRemote',&#xA;        filename: 'remoteEntry.js',&#xA;        exposes: {&#xA;          './App':&#xA;            './src/App/App.tsx',&#xA;        },&#xA;        shared: {&#xA;          'react': {&#xA;            singleton: true,&#xA;            version: deps['react'],&#xA;          },&#xA;          'react-dom': {&#xA;            singleton: true,&#xA;            version: deps['react-dom'],&#xA;          },&#xA;        },&#xA;      }&#xA;    ),&#xA;    new HtmlWebpackPlugin({&#xA;      template:&#xA;        './index.html',&#xA;    })&#xA;  ]&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>The consuming app's webpack config is almost the same, especially the <code>shared</code> section (there are some slight differences in that it declares the remotes).</p>&#xA;<p>What would be the way to tell webpack that the apollo package will be getting its react dependency from somewhere else? Or if thats not the right thing to tell webpack, what is and how can I get rid of these warnings?</p>&#xA;",2053214,,,,2022-02-25 13:38:30,"Module Federation, React, and Apollo 3 warnings",<reactjs><apollo-client><webpack-5><micro-frontend><webpack-module-federation>,1,1,0,2022-02-20 19:08:24
71205992,2,,69178586,7,,"<p>This will do the job:</p>&#xA;<pre><code>subscriptions: {&#xA;    'graphql-ws': true,&#xA;    'subscriptions-transport-ws': true,&#xA;  },&#xA;</code></pre>&#xA;<p>As mentionned in the <a href=""https://docs.nestjs.com/graphql/subscriptions"" rel=""noreferrer"">doc</a>:</p>&#xA;<blockquote>&#xA;<p>HINT</p>&#xA;<p>You can also use both packages (subscriptions-transport-ws and graphql-ws) at &gt; the same time, for example, for backward compatibility.</p>&#xA;</blockquote>&#xA;",16886156,,,,2022-02-21 12:02:00,"",,0,0,0,2022-02-21 12:02:00
71233748,1,,,0,74,"<p>I'm trying to make graphql query calls using apollo on NuxtJS and I'm getting the following error.</p>&#xA;<pre><code> WARN  Missing field description in {                                                                                                                                                                             11:29:49&#xA;  &quot;__typename&quot;: &quot;EduExp&quot;&#xA;}&#xA;&#xA;&#xA; WARN  Missing field componentName in {                                                                                                                                                                           11:29:49&#xA;  &quot;__typename&quot;: &quot;EduExp&quot;&#xA;}&#xA;&#xA;{                                                                                                                                                                                                                 11:29:49&#xA;  data: null,&#xA;  loading: false,&#xA;  networkStatus: 7,&#xA;  stale: true&#xA;}&#xA;</code></pre>&#xA;<p>Here is my query</p>&#xA;<pre><code>fragment IntroCardFields on IntroCard {&#xA;  legend&#xA;  profile {&#xA;    title&#xA;    url&#xA;  }&#xA;  introList&#xA;  description {&#xA;    json&#xA;  }&#xA;  componentName&#xA;}&#xA;&#xA;query getPage($pageId: String!) {&#xA;  page(id: $pageId) {&#xA;    slug&#xA;    name&#xA;    componentsCollection {&#xA;      items {&#xA;        ...IntroCardFields&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I'm using it like this in vuex</p>&#xA;<pre><code>async fetchPageData({ commit, state }) {&#xA;    const apollo = this.app.apolloProvider.defaultClient;&#xA;&#xA;    const pageData = [];&#xA;    const res = await apollo.query({&#xA;      query: getPage,&#xA;      variables: {&#xA;        pageId: '2S3x7vBmaB2FhTUbNXWvwY',&#xA;      },&#xA;    });&#xA;&#xA;    console.log(res);&#xA;&#xA;    &#xA;  },&#xA;</code></pre>&#xA;<p>When I try this query without parameters on a api tool like postman or insomnia works well.&#xA;I don't get it why not working on Nuxt</p>&#xA;",16731304,,,,2022-02-23 08:44:03,NuxtJS Apollo response is null and Missing field warnings,<vue.js><graphql><nuxt.js><apollo><vue-apollo>,0,0,0,2022-02-23 08:44:03
71240595,2,,67971639,2,,"<p>From the version v2.1.0 and above we can do this using the REST Connectors.<a href=""https://hasura.io/docs/latest/graphql/core/actions/rest-connectors.html#method"" rel=""nofollow noreferrer"">Hasura Actions RESTConnectors Methods</a></p>&#xA;<blockquote>&#xA;<p>Go to the Actions tab on the console and create or modify an action. Scroll down to Configure REST Connectors.</p>&#xA;</blockquote>&#xA;<blockquote>&#xA;<p>In the Configure REST Connectors section, click on Add Request Options Transform</p>&#xA;</blockquote>&#xA;<p>Along with this you can do a lot of other configurations.</p>&#xA;",4928826,,4928826,2022-06-29 09:05:23,2022-06-29 09:05:23,"",,0,2,0,2022-02-23 16:22:39
71241032,2,,71231638,2,,"<p>Here's how it worked for me:</p>&#xA;<ol>&#xA;<li>Open the page you want to scrape.</li>&#xA;<li>Look under the network tab in inspection tools.</li>&#xA;<li>find the GraphQl request that contains the information you want.</li>&#xA;<li>right click on it and go to copy &gt; copy as curl (bash). (This is assuming that you are using chrome, I think other browsers have it too but I use chrome).</li>&#xA;<li>Go to <a href=""https://michael-shub.github.io/curl2scrapy/"" rel=""nofollow noreferrer"">curl2scrapy</a> and paste your curl command. it will give you the headers and payload.</li>&#xA;<li>Before you run it replace all <code>\n</code> in the query with <code>\\n</code>.</li>&#xA;</ol>&#xA;",9908000,,1839439,2022-02-23 16:59:37,2022-02-23 16:59:37,"",,0,1,0,2022-02-23 16:53:41
71248267,2,,70204221,0,,"<p>You can use only this dependency for graphQL playground interfaces and remove the <code>playground-spring-boot-starter</code>:</p>&#xA;<pre><code>&lt;dependency&gt;&#xA;        &lt;groupId&gt;com.graphql-java-kickstart&lt;/groupId&gt;&#xA;        &lt;artifactId&gt;graphql-spring-boot-starter&lt;/artifactId&gt;&#xA;        &lt;version&gt;12.0.0&lt;/version&gt;&#xA;&lt;/dependency&gt;&#xA;</code></pre>&#xA;<p>In your application.yml you need to explicit set the static path for interface files (the path is /vendor/playground/):</p>&#xA;<pre><code>static-path:&#xA;  base: &lt;YOUR-CONTEXT-PATH&gt;/vendor/playground/&#xA;</code></pre>&#xA;<p>Here is a example of some options to enable GraphQL playground, notice that the context-path here is /api:</p>&#xA;<pre><code>graphql:&#xA;  playground:&#xA;    endpoint: /graphql&#xA;    subscriptionEndpoint: /subscriptions&#xA;    enabled: true&#xA;    pageTitle: Playground&#xA;    cdn:&#xA;      enabled: false&#xA;      version: latest&#xA;    static-path:&#xA;      base: /api/vendor/playground/&#xA;</code></pre>&#xA;<p>I had the same issue and the settings above worked for me.</p>&#xA;",11501375,,,,2022-02-24 07:06:22,"",,0,0,0,2022-02-24 07:06:22
71255628,2,,62271614,0,,<p>upgrade django-graphql-jwt to 0.3.4 (or higher) from the tutorial's 0.1.5</p>&#xA;,18301247,,,,2022-02-24 17:02:45,"",,0,2,0,2022-02-24 17:02:45
71263749,1,,,0,730,"<p>I'm trying to practice some CRUD operations using GraphQL,  React and TypeScript. Once I started with the client side I get this error on the devtools console. Is this supposed to happen?  How can I fix this?  I've been looking for answers but they're always a bit different from my problem. I tried checking the versions (usually there's a conflict with reac hook which I'm not using). I don't know what else I could do.</p>&#xA;<p>App.tsx</p>&#xA;<pre><code>function App() {&#xA;const [title, setTitle] = useState(&quot;&quot;);&#xA;const [content, setContent] = useState(&quot;&quot;);&#xA;&#xA;const [name, setName] = useState(&quot;&quot;);&#xA;const [email, setEmail] = useState(&quot;&quot;);&#xA;const [password, setPassword] = useState(&quot;&quot;);&#xA;&#xA;const [createUser, { loading, error }] = useMutation(CREATE_USER);&#xA;const [createPost, { loading: loadingPost, error: errorPost }] =&#xA;useMutation(CREATE_POST);&#xA;&#xA;const client = new ApolloClient({&#xA; uri: &quot;http://localhost:3001/graphql&quot;,&#xA; cache: new InMemoryCache(),&#xA;});&#xA;&#xA;return (&#xA;&lt;ApolloProvider client={client}&gt;&#xA;  &lt;div className=&quot;App&quot;&gt;&#xA;    &lt;div className=&quot;createPost&quot;&gt;&#xA;      &lt;h1&gt;Create Post&lt;/h1&gt;&#xA;      &lt;input&#xA;        type=&quot;text&quot;&#xA;        placeholder=&quot;Title&quot;&#xA;        onChange={(e) =&gt; setTitle(e.target.value)}&#xA;      /&gt;&#xA;      &lt;input&#xA;        type=&quot;text&quot;&#xA;        placeholder=&quot;Content&quot;&#xA;        onChange={(e) =&gt; setContent(e.target.value)}&#xA;      /&gt;&#xA;      &lt;button onClick={() =&gt; createPost({ variables: { title, content } })}&gt;&#xA;        Create Post&#xA;      &lt;/button&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div className=&quot;users&quot;&gt;&#xA;      &lt;h1&gt;Users&lt;/h1&gt;&#xA;      &lt;input&#xA;        type=&quot;text&quot;&#xA;        placeholder=&quot;Name&quot;&#xA;        onChange={(e) =&gt; setName(e.target.value)}&#xA;      /&gt;&#xA;      &lt;input&#xA;        type=&quot;text&quot;&#xA;        placeholder=&quot;Email&quot;&#xA;        onChange={(e) =&gt; setEmail(e.target.value)}&#xA;      /&gt;&#xA;      &lt;input&#xA;        type=&quot;text&quot;&#xA;        placeholder=&quot;Password&quot;&#xA;        onChange={(e) =&gt; setPassword(e.target.value)}&#xA;      /&gt;&#xA;      &lt;button&#xA;        onClick={() =&gt; createUser({ variables: { name, email, password } })}&#xA;      &gt;&#xA;        Create User&#xA;      &lt;/button&gt;&#xA;    &lt;/div&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/ApolloProvider&gt;&#xA;);&#xA;}&#xA;&#xA;export default App;&#xA;</code></pre>&#xA;<p>package.json</p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;client&quot;,&#xA;  &quot;version&quot;: &quot;0.1.0&quot;,&#xA;  &quot;private&quot;: true,&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@apollo/client&quot;: &quot;^3.5.9&quot;,&#xA;    &quot;@testing-library/jest-dom&quot;: &quot;^5.14.1&quot;,&#xA;    &quot;@testing-library/react&quot;: &quot;^12.0.0&quot;,&#xA;    &quot;@testing-library/user-event&quot;: &quot;^13.2.1&quot;,&#xA;    &quot;@types/jest&quot;: &quot;^27.0.1&quot;,&#xA;    &quot;@types/node&quot;: &quot;^16.7.13&quot;,&#xA;    &quot;@types/react&quot;: &quot;^17.0.20&quot;,&#xA;    &quot;@types/react-dom&quot;: &quot;^17.0.9&quot;,&#xA;    &quot;graphql&quot;: &quot;^16.3.0&quot;,&#xA;    &quot;react&quot;: &quot;^17.0.2&quot;,&#xA;    &quot;react-dom&quot;: &quot;^17.0.2&quot;,&#xA;    &quot;react-scripts&quot;: &quot;5.0.0&quot;,&#xA;    &quot;typescript&quot;: &quot;^4.4.2&quot;,&#xA;    &quot;web-vitals&quot;: &quot;^2.1.0&quot;&#xA;  },&#xA;  &quot;scripts&quot;: {&#xA;    &quot;start&quot;: &quot;react-scripts start&quot;,&#xA;    &quot;build&quot;: &quot;react-scripts build&quot;,&#xA;    &quot;test&quot;: &quot;react-scripts test&quot;,&#xA;    &quot;eject&quot;: &quot;react-scripts eject&quot;&#xA;  },&#xA;  &quot;eslintConfig&quot;: {&#xA;    &quot;extends&quot;: [&#xA;      &quot;react-app&quot;,&#xA;      &quot;react-app/jest&quot;&#xA;    ]&#xA;  },&#xA;  &quot;browserslist&quot;: {&#xA;    &quot;production&quot;: [&#xA;      &quot;&gt;0.2%&quot;,&#xA;      &quot;not dead&quot;,&#xA;      &quot;not op_mini all&quot;&#xA;    ],&#xA;    &quot;development&quot;: [&#xA;      &quot;last 1 chrome version&quot;,&#xA;      &quot;last 1 firefox version&quot;,&#xA;      &quot;last 1 safari version&quot;&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>tsconfig.json</p>&#xA;<pre><code>{&#xA;  &quot;compilerOptions&quot;: {&#xA;    &quot;target&quot;: &quot;es5&quot;,&#xA;    &quot;lib&quot;: [&#xA;      &quot;dom&quot;,&#xA;      &quot;dom.iterable&quot;,&#xA;      &quot;esnext&quot;&#xA;    ],&#xA;    &quot;allowJs&quot;: true,&#xA;    &quot;skipLibCheck&quot;: true,&#xA;    &quot;esModuleInterop&quot;: true,&#xA;    &quot;allowSyntheticDefaultImports&quot;: true,&#xA;    &quot;strict&quot;: true,&#xA;    &quot;forceConsistentCasingInFileNames&quot;: true,&#xA;    &quot;noFallthroughCasesInSwitch&quot;: true,&#xA;    &quot;module&quot;: &quot;esnext&quot;,&#xA;    &quot;moduleResolution&quot;: &quot;node&quot;,&#xA;    &quot;resolveJsonModule&quot;: true,&#xA;    &quot;isolatedModules&quot;: true,&#xA;    &quot;noEmit&quot;: true,&#xA;    &quot;jsx&quot;: &quot;react-jsx&quot;&#xA;  },&#xA;  &quot;include&quot;: [&#xA;    &quot;src&quot;&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>The log I get</p>&#xA;<pre><code>Uncaught Invariant Violation: Could not find &quot;client&quot; in the context or passed in as an option. Wrap the root component in an &lt;ApolloProvider&gt;, or pass an ApolloClient instance in via options.&#xA;    at new InvariantError (http://localhost:3000/static/js/bundle.js:40409:24)&#xA;    at invariant (http://localhost:3000/static/js/bundle.js:40422:11)&#xA;    at useApolloClient (http://localhost:3000/static/js/bundle.js:50982:83)&#xA;    at useMutation (http://localhost:3000/static/js/bundle.js:51014:84)&#xA;    at App (http://localhost:3000/static/js/bundle.js:46:67)&#xA;    at renderWithHooks (http://localhost:3000/static/js/bundle.js:24007:22)&#xA;    at mountIndeterminateComponent (http://localhost:3000/static/js/bundle.js:26769:17)&#xA;    at beginWork (http://localhost:3000/static/js/bundle.js:27968:20)&#xA;    at HTMLUnknownElement.callCallback (http://localhost:3000/static/js/bundle.js:12957:18)&#xA;    at Object.invokeGuardedCallbackDev (http://localhost:3000/static/js/bundle.js:13006:20)&#xA;react-dom.development.js:20085 &#xA;The above error occurred in the &lt;App&gt; component:&#xA;&#xA;    at App (http://localhost:3000/static/js/bundle.js:38:76)&#xA;&#xA;Consider adding an error boundary to your tree to customize error handling behavior.&#xA;Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.&#xA;logCapturedError @ react-dom.development.js:20085&#xA;bootstrap:27 &#xA;&#xA;&#xA;Uncaught Invariant Violation: Could not find &quot;client&quot; in the context or passed in as an option. Wrap the root component in an &lt;ApolloProvider&gt;, or pass an ApolloClient instance in via options.&#xA;        at new InvariantError (http://localhost:3000/static/js/bundle.js:40409:24)&#xA;        at invariant (http://localhost:3000/static/js/bundle.js:40422:11)&#xA;        at useApolloClient (http://localhost:3000/static/js/bundle.js:50982:83)&#xA;        at useMutation (http://localhost:3000/static/js/bundle.js:51014:84)&#xA;        at App (http://localhost:3000/static/js/bundle.js:46:67)&#xA;        at renderWithHooks (http://localhost:3000/static/js/bundle.js:24007:22)&#xA;        at mountIndeterminateComponent (http://localhost:3000/static/js/bundle.js:26769:17)&#xA;        at beginWork (http://localhost:3000/static/js/bundle.js:27968:20)&#xA;        at HTMLUnknownElement.callCallback (http://localhost:3000/static/js/bundle.js:12957:18)&#xA;        at Object.invokeGuardedCallbackDev (http://localhost:3000/static/js/bundle.js:13006:20)&#xA;</code></pre>&#xA;",12642729,,,,2022-02-25 09:38:25,"Uncaught Invariant Violation: Could not find ""client"" in the context or passed in as an option",<reactjs><typescript><graphql><apollo>,1,0,0,2022-02-25 09:31:23
71265868,2,,70524028,2,,<p>Install graphene-django in this way. This resolves the issue for me.</p>&#xA;<pre><code>pip install &quot;graphene-django==3.0.0b7&quot;&#xA;</code></pre>&#xA;,8772215,,,,2022-02-25 12:27:21,"",,0,0,0,2022-02-25 12:27:21
71266703,2,,71197822,2,,<p>Fixed my own problem by changing the key <code>version</code> to <code>requiredVersion</code></p>&#xA;,2053214,,,,2022-02-25 13:38:30,"",,0,0,0,2022-02-25 13:38:30
71274516,1,,,0,61,<p>I working with graphQl an apollo cielnt for fetching data from api and everything worked very well but suddenly it gave me a strange error that I searched for and the error was related to python somehow.&#xA;the error&#xA;Error: unhashable type: 'slice'</p>&#xA;<p>the location of error that next.js shows me</p>&#xA;<pre><code>new ApolloError&#xA;file:///X:/Programming/frontend/node_modules/@apollo/client/errors/errors.cjs (34:28)&#xA;</code></pre>&#xA;,16699426,,,,2022-02-26 06:19:12,Error: unhashable type: 'slice' in Next.js with apollo client,<graphql><next.js><apollo-client>,0,0,0,2022-02-26 06:19:12
71287063,2,,71221904,2,,"<p>IIRC, this was a bug that was fixed in 2.5.3. I've just tried the Mutation and input given above with the code for the current 3.0.1 release, and everything seems to be working as expected.</p>&#xA;",18325648,,,,2022-02-27 17:41:13,"",,0,1,0,2022-02-27 17:41:13
71312499,1,71401279,,1,109,"<p>I have a site running Gatsby and Gatsby-Source-Drupal7, it is a plugin that uses Graphql to make an axios get request to <a href=""https://stagingsupply.htm-mbs.com/restws_resource.json"" rel=""nofollow noreferrer"">https://stagingsupply.htm-mbs.com/restws_resource.json</a> and uses the json data to query. I am able to run it just fine on my computer by going to localhost:8000 and it creates over 200k nodes, but when I try to deploy on any cloud service provider like Gatsby Cloud or Netlify it doesn't fetch any nodes or data at all from the site.</p>&#xA;<h2>Warning from console</h2>&#xA;<pre><code>Starting to fetch data from Drupal&#xA;warn The gatsby-source-drupal7 plugin has generated no Gatsby nodes. Do you need&#xA; it?&#xA;</code></pre>&#xA;<h2>Code</h2>&#xA;<p>code from gatsby config</p>&#xA;<pre><code>module.exports = {&#xA;    siteMetadata: {&#xA;      title: `new`,&#xA;        siteUrl: `https://www.yourdomain.tld`,&#xA;    },&#xA;    plugins: [&#xA;      {&#xA;        resolve: `gatsby-source-drupal7`,&#xA;        options: {&#xA;          baseUrl: `https://stagingsupply.htm-mbs.com/`,&#xA;          apiBase: `restws_resource.json`, // optional, defaults to `restws_resource.json`&#xA;        },&#xA;      },&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>gatsby-config.js from node_modules/gatsby-source-drupal7</p>&#xA;<pre><code>const createNode = actions.createNode; // Default apiBase to `jsonapi`&#xA;&#xA;    apiBase = apiBase || `restws_resource.json`; // Fetch articles.&#xA;    // console.time(`fetch Drupal data`)&#xA;&#xA;    console.log(`Starting to fetch data from Drupal`);&#xA;    const data = yield axios.get(`${baseUrl}/${apiBase}`, {&#xA;      auth: basicAuth&#xA;    });&#xA;    const allData = yield Promise.all(_.map(data.data.list,&#xA;</code></pre>&#xA;<p>Link to repo that works on local computer <a href=""https://github.com/nicholastorr/gatsby-d7"" rel=""nofollow noreferrer"">https://github.com/nicholastorr/gatsby-d7</a></p>&#xA;<p>any and all help will be appreciated</p>&#xA;",13771717,,,,2022-03-09 05:33:33,Gatsby Source Drupal not fetching data when trying to deploy to netlify/heroku,<node.js><reactjs><axios><graphql><gatsby>,2,4,0,2022-03-01 17:35:47
71313247,2,,71312499,1,,"<p>As you pointed out, you've played around with the Node versions using <code>NODE_ENV</code> and <code>engines</code> workarounds. My guess also relies on a mismatching Node version between environments but as <a href=""https://docs.netlify.com/configure-builds/manage-dependencies/"" rel=""nofollow noreferrer"">Netlify docs</a> suggests, there are only two ways of customizing Node versions to manage dependencies.</p>&#xA;<blockquote>&#xA;<ul>&#xA;<li>Set a <code>NODE_VERSION</code> environment variable.</li>&#xA;<li>Add a <code>.node-version</code> or <code>.nvmrc</code> file to the site’s base directory in your repository. This will also tell any other developer using the&#xA;repository which version of Node.js it depends on.</li>&#xA;</ul>&#xA;</blockquote>&#xA;<p>Without seeing your Netlify build command (to see the <code>NODE_VERSION</code>) there's no <code>.node-version</code> nor <code>.nvmrc</code> in your repository. I'd try creating it at the root of the project with the <code>v14.17.1</code> in it and trying a fresh install.</p>&#xA;<p>In addition, double-check other server-related conflicts like IP-blocking, etc.</p>&#xA;",5585371,,5585371,2022-03-09 05:33:33,2022-03-09 05:33:33,"",,0,2,0,2022-03-01 18:47:51
71325370,2,,66180090,2,,"<p>The New Relic Java agent starting with version 7.4.0 (Oct 2021) has auto-instrumentation for GraphQL. Use 7.4.3 or higher though.</p>&#xA;<p>With it the transactions are going to be named based on the query.</p>&#xA;<p>Check the <a href=""https://github.com/newrelic/newrelic-java-agent/tree/main/instrumentation/graphql-java-16.2"" rel=""nofollow noreferrer"">documentation</a>.</p>&#xA;",251542,,,,2022-03-02 15:38:27,"",,0,0,0,2022-03-02 15:38:27
71328959,1,,,1,73,"<p>I have just upgraded a project from V2 to V4.8 and a simple mapping that I have in my Gatsby-config doesn't seem to be working anymore. The nodes are being created but any queries are just returning 'null' on the linked field. Here's my mapping in gatsby-config.js:</p>&#xA;<pre><code> mapping: {&#xA;    'MarkdownRemark.frontmatter.tmdb': `TmdbAccountWatchlistMovies.tmdbId`&#xA;  },&#xA;</code></pre>&#xA;<p>The relationship looks like it is being created in graphql:&#xA;<img src=""https://i.stack.imgur.com/SM00I.png"" alt=""query showing linkage"" /></p>&#xA;<p>But, the query just returns null for any of the linked fields:&#xA;<img src=""https://i.stack.imgur.com/iaXmG.png"" alt=""enter image description here"" /></p>&#xA;<p>Anyone have any idea what is happening?</p>&#xA;",4355274,,5585371,2022-03-09 06:08:55,2022-03-15 19:00:02,Gatsby mappings between Markdown node and TMDB nodes not working anymore,<graphql><gatsby>,2,3,0,2022-03-02 20:49:15
71340191,1,,,1,27,<p>I am making graphql application and using apollo client for it. in frontend i use reactjs and appollo/client.</p>&#xA;<p>I am getting query with following code:</p>&#xA;<pre><code>  const TEST_QUERY = gql`&#xA;    {&#xA;      hello&#xA;    }&#xA;  `;&#xA;&#xA;  const { data } = useQuery(TEST_QUERY);&#xA;</code></pre>&#xA;<p>when i try to console.log(data) it gives me whole query result (query result is</p>&#xA;<pre><code>{&#xA; hello: &quot;hello world&quot;&#xA;}&#xA;</code></pre>&#xA;<p>)</p>&#xA;<p>but when i try to console.log(data.hello) it gives me following error in console:</p>&#xA;<p><strong>TypeError: Cannot read properties of undefined (reading 'hello')</strong></p>&#xA;<p>help? thanks.</p>&#xA;,18015767,,,,2022-03-03 16:06:05,apollo@client whole query is defiened but single item undefiened,<reactjs><graphql><apollo-client>,0,1,0,2022-03-03 16:06:05
71376580,1,,,0,736,"<p>Is there a setting or a work-around for me to stop GraphQL queries from being displayed in browser developer tools? In Chrome, my GraphQL queries are listed under the &quot;Payload&quot; tab in the &quot;Network&quot; section. It is a full query that works if I copied and pasted it then sent the request using Postman or in the Playground with the right data.</p>&#xA;<p><a href=""https://i.stack.imgur.com/9vdlE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9vdlE.png"" alt=""Found thru Developer Tools (F12) -&gt; Network -&gt; Fetch/XHR"" /></a></p>&#xA;<p>When I check FaceBook, I don't see a full usable query written out. The shape is not visible.</p>&#xA;<p><a href=""https://i.stack.imgur.com/ZxTGx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZxTGx.png"" alt=""FaceBook viewed using the same method as the first image."" /></a></p>&#xA;",11048997,,,,2022-03-07 04:56:16,How do I stop GraphQL queries from being displayed in browser developer tools? The GraphQL query is dispalyed under payload,<browser><graphql><nestjs><developer-tools>,0,3,0,2022-03-07 04:56:16
71378677,2,,71313993,1,,"<p>You can set the timeout by adding:</p>&#xA;<pre><code>server.listen(4000, '0.0.0.0') =&gt; { console.log(Server ready); })&#xA;.then(s =&gt; s.setTimeout(&lt;your timeout in millis&gt;));;&#xA;&#xA;&#xA;</code></pre>&#xA;",8724386,,,,2022-03-07 09:07:47,"",,0,0,0,2022-03-07 09:07:47
71390918,2,,70574880,0,,<p>install express-graphql before installing express</p>&#xA;,18405396,,,,2022-03-08 06:37:08,"",,0,1,0,2022-03-08 06:37:08
71392997,2,,48863441,0,,<p>You can also use Network tab in Chrome Developer Tools.&#xA;It shows all of the GraphQL and network errors.</p>&#xA;,3145700,,,,2022-03-08 09:52:38,"",,0,0,0,2022-03-08 09:52:38
71411684,1,,,0,58,<p>I have a frontend web application that uses ApolloClient to talk to an ApolloServer GraphQL api.</p>&#xA;<p>I am looking advice for the best value tool to collect logs and metrics which will also allow me monitor those metrics and raise alarms as necessary</p>&#xA;,1180201,,,,2022-03-09 15:16:39,ApolloServer metrics,<apollo-client><apollo-server>,0,0,0,2022-03-09 15:16:39
71434295,1,,,0,482,"<p>Maybe it's duplicated anyway i've searched this specific case without finding anything related.</p>&#xA;<p>I'm working to plot a chart with tradingview and bitquery api using axios and graphql</p>&#xA;<p>The config of my query goes like this:</p>&#xA;<pre><code>&#xA;            Bitquery.endpoint, {&#xA;                query: Bitquery.GET_COIN_INFO,&#xA;                variables: {&#xA;                    &quot;tokenAddress&quot;: symbolName&#xA;                },&#xA;                mode: 'cors',&#xA;                headers: {&#xA;                    &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;                    &quot;X-API-KEY&quot;: &quot;XXXXXXXXXXX&quot;,&#xA;                    &quot;Access-Control-Allow-Origin&quot; : &quot;http://localhost:3000&quot;,&#xA;                    &quot;Access-Control-Allow-Credentials&quot; : &quot;true&quot;,&#xA;                    &quot;Access-Control-Allow-Methods&quot; :&quot; GET, POST, OPTIONS&quot;,&#xA;                    &quot;Access-Control-Allow-Headers&quot; : &quot;Origin, Content-Type, Accept&quot;                    &#xA;                }&#xA;            }&#xA;        );&#xA;&#xA;</code></pre>&#xA;<p>But i still receiving this error on console:</p>&#xA;<pre><code>&#xA;Access to XMLHttpRequest at 'https://graphql.bitquery.io/' from origin 'http://localhost:3000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.&#xA;&#xA;</code></pre>&#xA;<p>Could someone give me a hint upon this? Thank you!</p>&#xA;",14987766,,,,2022-03-17 21:43:57,"Axios, graphql: No 'Access-Control-Allow-Origin' header is present on the requested resource",<axios><graphql>,1,0,0,2022-03-11 06:09:42
71483724,2,,70870431,1,,"<p>Check network tab to see the contents of the error. Also see if you have trailing forward slash in Apollo Client <code>createHttpLink</code> URI parameter.</p>&#xA;<p>It should be like this</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const httpLink = createHttpLink({&#xA;  uri: &quot;http://localhost:5000/graphql&quot;,&#xA;});&#xA;</code></pre>&#xA;<p>Lastly you might need <code>cors</code> in place on the backend, but firstly check network tab to see what you're getting from server</p>&#xA;",6378469,,,,2022-03-15 14:11:57,"",,0,0,0,2022-03-15 14:11:57
71487543,1,,,0,746,"<p>I have a question. So, I recently switched from <code>rest</code> to <code>gql</code>, and I have a problem.&#xA;In <code>rest</code> I got <code>ip address</code> by <code>req.ip</code>. I tried to do it in <code>resolve()</code> function and it wasn't working <code>(undefined)</code>. I searched the web and found this:</p>&#xA;<pre><code>const server = new GraphQLServer({&#xA;  context: context =&gt; ({&#xA;    ...context,&#xA;    db,&#xA;    userIp: maybeGetUserIpAddress(context.request),&#xA;  }),&#xA;});&#xA;&#xA;const maybeGetuserIpAddress = (request): ?string =&gt; {&#xA;  const headers = request.headers;&#xA;  if (!headers) return null;&#xA;  const ipAddress = headers['x-forwarded-for'];&#xA;  if (!ipAddress) return null;&#xA;  return ipAddress;&#xA;};&#xA;&#xA;</code></pre>&#xA;<p>But it returns <code>undefined</code> too.</p>&#xA;<p>So, my questions are:</p>&#xA;<pre><code>1. Is this because I'm hosting my server locally?&#xA;2. What is wrong with the code&#xA;</code></pre>&#xA;",18313052,,,,2022-03-15 19:07:33,Get IP ADDRESS in Express and GraphQL,<typescript><express><graphql>,1,0,0,2022-03-15 18:52:38
71501053,1,,,0,137,"<p>I'm making a static website with NextJS and Amplify. (+ react, typescript etc)</p>&#xA;<p>When I'm using dynamic routing like <code>/projects/[id]</code>,&#xA;It works well on my local but gets some problems after the deployment (after I upload the build files to S3 for static hosting) <br/>&#xA;Because the NextJS make http fetch request on the web by the route.</p>&#xA;<p>For example, when someone access to <code>example.com/projects/1234</code>,&#xA;it call a GET request to <code>example.com/projects/1234</code> automatically.&#xA;And because there are no APIs like that, it returns 404 and do not show the detail page.</p>&#xA;<p>In the NextJS document, it says</p>&#xA;<blockquote>&#xA;<p>FAQ &gt; Why does Next.js have its own Router?  <br/> ... It supports shallow routing which allows you to change the URL without running data fetching methods</p>&#xA;</blockquote>&#xA;<p>But I don't want to fetch the data by URLs... <br/>&#xA;<strong>Q. How can I restrict this feature?</strong></p>&#xA;<p>FYI) I tried 'trailingSlash: true` in the nextConfig with some search results on web, but no luck.&#xA;<br/> Below is my next.config.js</p>&#xA;<pre><code>/** @type {import('next').NextConfig} */&#xA;&#xA;const nextConfig = {&#xA;    reactStrictMode: true,&#xA;    images: {&#xA;        domains: [&#xA;            &quot;some-name.s3.some-region.amazonaws.com&quot;,&#xA;        ],&#xA;    },&#xA;    trailingSlash: true,&#xA;}&#xA;&#xA;module.exports = nextConfig&#xA;&#xA;</code></pre>&#xA;<p>Thanks in advance.</p>&#xA;<p>p.s. nextJS version is 12.1.0</p>&#xA;",14952719,,,,2022-03-18 11:49:56,(NextJS + Amplify graphql + S3 static hosting) How can I restrict the data fetching by URL?,<reactjs><graphql><next.js><aws-amplify><static-web-apps>,1,0,0,2022-03-16 16:44:27
71504548,2,,71344804,4,,"<p>Don't know if this is too late for you, but I was having the same issue. I fixed it by changing the version of my dependencies of Grapghql and @Apollo/Client.</p>&#xA;<p>graphql - 15.8.0&#xA;Apollo-client - 3.3.19</p>&#xA;<p>I am sure there is a better way to fix this, but this is what I found that worked hope it helps!</p>&#xA;",18487234,,,,2022-03-16 21:37:48,"",,0,0,0,2022-03-16 21:37:48
71509126,1,,,0,270,"<p>I am trying to set up tests to test a <a href=""https://remix.run"" rel=""nofollow noreferrer"">Remix</a> loader and noticed that the <code>request</code> function from <a href=""https://github.com/prisma-labs/graphql-request"" rel=""nofollow noreferrer"">graphql-request</a> haphazardly fails when using <a href=""https://mswjs.io"" rel=""nofollow noreferrer"">MSW</a>. If I replace this and use a simple <code>fetch</code> for the requests the tests pass.</p>&#xA;<p>Is there any configuration I need to change? I have created a sample repo that demonstrates the bug. The bug gets worse the more tests you have that are using the same mocked request.</p>&#xA;<p>Sample repo: <a href=""https://github.com/charklewis/sb9or3"" rel=""nofollow noreferrer"">https://github.com/charklewis/sb9or3</a></p>&#xA;<p>Here is a summary of the code I am using:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>//modules/database.server&#xA;import { GraphQLClient } from &quot;graphql-request&quot;;&#xA;const client = new GraphQLClient(&quot;http://some-graphql-api.com/api/graphql&quot;, {});&#xA;&#xA;export const fetchQuery = async (query: any, variables: any) =&gt; {&#xA;  try {&#xA;    const response = await client.request(query, variables || {});&#xA;    return response;&#xA;  } catch (error) {&#xA;    return {};&#xA;  }&#xA;};&#xA;&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>//routes/index&#xA;import type { LoaderFunction } from &quot;remix&quot;;&#xA;import { json } from &quot;remix&quot;;&#xA;import { gql } from &quot;graphql-request&quot;;&#xA;import { fetchQuery } from &quot;~/modules/database.server&quot;;&#xA;&#xA;export const loader: LoaderFunction = async () =&gt; {&#xA;  const query = gql`&#xA;    query MyQuery {&#xA;      demoQuery {&#xA;        value&#xA;      }&#xA;    }&#xA;  `;&#xA;  const response = await fetchQuery(query, {});&#xA;  return json({ value: response.demoQuery.value });&#xA;};&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>//routes/__tests__/index&#xA;import { graphql } from &quot;msw&quot;;&#xA;import { setupServer } from &quot;msw/node&quot;;&#xA;import { loader } from &quot;~/routes/index&quot;;&#xA;&#xA;const createServer = (handlers: any[] = []) =&gt; {&#xA;  const server = setupServer(...handlers);&#xA;  beforeAll(() =&gt; server.listen({ onUnhandledRequest: &quot;bypass&quot; }));&#xA;  afterAll(() =&gt; server.close());&#xA;  afterEach(() =&gt; server.resetHandlers());&#xA;  return server;&#xA;};&#xA;&#xA;&#xA;const createDemoQueryHandler = ({ value = true } = {}) =&gt; {&#xA;  return graphql.query(&quot;MyQuery&quot;, (req, res, ctx) =&gt; {&#xA;    return res(ctx.data({ demoQuery: { value } }));&#xA;  });&#xA;};&#xA;&#xA;createServer([createDemoQueryHandler()]);&#xA;&#xA;test(&quot;the loader returns data (round 1)&quot;, async () =&gt; {&#xA;  const response = await loader({&#xA;    request: new Request(&quot;/&quot;, { method: &quot;GET&quot; }),&#xA;    params: {},&#xA;    context: {},&#xA;  });&#xA;  const data = await response.json();&#xA;  expect(data.value).toBe(true);&#xA;});&#xA;</code></pre>&#xA;<p>My vitest configuration is:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>/// &lt;reference types=&quot;vitest&quot; /&gt;&#xA;/// &lt;reference types=&quot;vite/client&quot; /&gt;&#xA;&#xA;import { defineConfig } from &quot;vite&quot;;&#xA;import react from &quot;@vitejs/plugin-react&quot;;&#xA;import tsconfigPaths from &quot;vite-tsconfig-paths&quot;;&#xA;&#xA;export default defineConfig({&#xA;  plugins: [react(), tsconfigPaths()],&#xA;  test: {&#xA;    globals: true,&#xA;    environment: &quot;jsdom&quot;,&#xA;    setupFiles: &quot;./app/test-utils.ts&quot;,&#xA;    testTimeout: 20000&#xA;  }&#xA;});&#xA;</code></pre>&#xA;",10141904,,,,2022-03-17 08:26:45,Tests haphazardly fail when using graphql-request and MSW,<node.js><graphql><graphql-js><msw><vitest>,0,0,0,2022-03-17 08:26:45
71510570,2,,71509898,1,,<p>This is a known issue and should be fixed by GA. As a workaround use any of the other dedicatd tiers.</p>&#xA;,5069951,,,,2022-03-17 10:14:40,"",,0,0,0,2022-03-17 10:14:40
71511332,1,71517159,,0,397,"<p>So, I don't want to build my nextjs since it will break the code for connecting to the backend. I'm not sure if you get it, and that is what it is... If I launch heroku with npm run build, the frontend and graphql function well, but it doesn't connect to the backend...</p>&#xA;<p>here is my <code>package.json</code>:</p>&#xA;<pre><code>{&#xA;  ...&#xA;  &quot;scripts&quot;: {&#xA;    &quot;f&quot;: &quot;next dev&quot;,&#xA;    &quot;backend&quot;: &quot;cd backend &amp;&amp; npm run s --prefix backend&quot;,&#xA;    &quot;build&quot;: &quot;next build&quot;,&#xA;    &quot;start&quot;: &quot;next start&quot;,&#xA;    &quot;heroku-postbuild&quot;: &quot;NPM_CONFIG_PRODUCTION=false npm install --prefix backend &amp;&amp; npm run build&quot;&#xA;  },&#xA;  ...&#xA;  ...&#xA;  &quot;engines&quot;: {&#xA;    &quot;node&quot;: &quot;14.x&quot;,&#xA;    &quot;npm&quot;: &quot;7.16.0&quot;&#xA;}&#xA;</code></pre>&#xA;<p>my project structure is <code>nextjs project &gt; backend folder &gt; backend files</code></p>&#xA;<p>When I delete &quot;npm run build&quot; from the heroku-postbuild scripts, thethe website no longer displays the client side and instead displays an error stating &quot;heroku tail logs&quot; something... I have many websites hosted on nginx vps making nextjs and nodejs project, but I wanted to use heroku because this website isn't really worth the vps fee.</p>&#xA;<p>Is it possible to do this?</p>&#xA;<p>Details:</p>&#xA;<ul>&#xA;<li>Im on mac</li>&#xA;<li>I installed heroku using brew in terminal</li>&#xA;<li>I ran buildpacks for heroku/nodejs</li>&#xA;<li>I used the method of heroku cli</li>&#xA;<li>I followed the git instructions properly</li>&#xA;<li>My port is 5001 in backend</li>&#xA;<li>When i go to the website-url:5001/graphql it gives me error... and yes ive changed all codes to the website url and not localhost</li>&#xA;</ul>&#xA;",16788088,,16788088,2022-03-17 11:31:22,2022-08-12 15:52:14,How can I deploy nextjs and nodejs on Heroku without using npm run build on the client/frontend side?,<node.js><heroku><deployment><graphql><next.js>,1,0,0,2022-03-17 11:11:18
71517159,2,,71511332,1,,"<p>try using docker, expose one port for backend and another for frontend. you can use nginx which will run on the top of linux image</p>&#xA;",17611209,,17611209,2022-08-12 15:52:14,2022-08-12 15:52:14,"",,0,0,0,2022-03-17 18:10:12
71526618,2,,71501053,0,,"<p>It's my fault.</p>&#xA;<p>I must use 'Link' of NextJS instead of the 'a' tag.</p>&#xA;<p>After compared my another project with this one, I updated some 'a' tag as 'Link' and it started working fine...</p>&#xA;",14952719,,,,2022-03-18 11:49:56,"",,0,0,0,2022-03-18 11:49:56
71552816,2,,61720203,0,,<p>For windows i used</p>&#xA;<p>.\gradlew downloadApolloSchema --endpoint=&quot;https://rickandmortyapi.com/graphql&quot; --schema=app/src/main/graphql/GetRepositories.json</p>&#xA;<p><strong>NOTICE</strong> I used:&#xA;<code>.\</code> instead of <code>./</code></p>&#xA;,13165893,,,,2022-03-21 04:26:37,"",,0,0,0,2022-03-21 04:26:37
71561295,2,,71556473,2,,<p>env variable was undefined on the client-side in nextjs. the problem is solved.</p>&#xA;,12990248,,,,2022-03-21 16:56:14,"",,0,0,0,2022-03-21 16:56:14
71586724,1,,,0,104,"<blockquote>&#xA;<p>Executed 'Functions.GraphQLAPI' (Failed, Id=70c18ea9-5194-4bed-bd04-27c5138e8096, Duration=49ms)<br />&#xA;[2022-03-23T11:37:26.657Z] System.Private.CoreLib: Exception while executing function: Functions.GraphQLAPI. System.Private.CoreLib: Result: Failure<br />&#xA;Exception: RuntimeError: There is no current event loop in thread 'ThreadPoolExecutor-0_0'.</p>&#xA;<p>Stack:</p>&#xA;<p>File &quot;C:\Program Files\Microsoft\Azure Functions Core Tools\workers\python\3.9\WINDOWS\X64\azure_functions_worker\dispatcher.py&quot;, line 370, in _handle__invocation_request&#xA;call_result = await self._loop.run_in_executor(&#xA;File &quot;C:\Users\vpottupalli\AppData\Local\Programs\Python\Python39\lib\concurrent\futures\thread.py&quot;, line 58, in run&#xA;result = self.fn(*self.args, **self.kwargs)&#xA;File &quot;C:\Program Files\Microsoft\Azure Functions Core Tools\workers\python\3.9\WINDOWS\X64\azure_functions_worker\dispatcher.py&quot;, line 548, in _<em>run_sync_func<br />&#xA;return func(**params)</em>&#xA;File &quot;C:\Users\vpottupalli\Documents\Projects\Azure_Repo\GraphQLServer-AzureFunc\GraphQLAPI_<em>init</em>.py&quot;, line 14, in main&#xA;return WsgiMiddleware(app).handle(req, context)&#xA;File &quot;C:\Program Files\Microsoft\Azure Functions Core Tools\workers\python\3.9\WINDOWS\X64\azure\functions_http_wsgi.py&quot;, line 160, in handle&#xA;return self._handle(req, context)&#xA;File &quot;C:\Program Files\Microsoft\Azure Functions Core Tools\workers\python\3.9\WINDOWS\X64\azure\functions_http_wsgi.py&quot;, line 167, in _handle&#xA;wsgi_response = WsgiResponse.from_app(self._app, environ)&#xA;File &quot;C:\Program Files\Microsoft\Azure Functions Core Tools\workers\python\3.9\WINDOWS\X64\azure\functions_http_wsgi.py&quot;, line 124, in from_app&#xA;res._buffer = [x or b'' for x in app(environ, res._start_response)]</p>&#xA;</blockquote>&#xA;<p>Getting this error  while executing the azure function and tried with changing the packages versions also.&#xA;Package           Version</p>&#xA;<hr />&#xA;<p>anyio             3.5.0<br />&#xA;ariadne           0.14.1&#xA;azure-functions   1.10.1&#xA;graphql-core      3.1.7<br />&#xA;idna              3.3<br />&#xA;pip               22.0.4&#xA;setuptools        58.1.0&#xA;sniffio           1.2.0<br />&#xA;starlette         0.17.1&#xA;typing_extensions 4.1.1</p>&#xA;<p>Could you please help me to resolve this issue, even I tried changing the python version 3.8.10 &amp; 3.9.11, but no luck.</p>&#xA;<p>I'm trying to setup GraphQl API in Azure function and I'm referring to this <a href=""https://www.vizeit.com/serverless-graphql-api-on-azure-using-python/"" rel=""nofollow noreferrer"">https://www.vizeit.com/serverless-graphql-api-on-azure-using-python/</a></p>&#xA;<p>Please help to resolve the above issue</p>&#xA;<p>I tried changing the version of azure-functions and extensions and also ariadne but no use.</p>&#xA;<p>As I mentioned above I trying to use Azure-function like GraphQL API.</p>&#xA;",7193576,,13302,2022-04-23 15:56:58,2022-04-23 15:56:58,Azure Function with GraphQL RuntimeError: There is no current event loop in thread 'ThreadPoolExecutor-0_0',<python><azure-functions><ariadne-graphql>,0,1,0,2022-03-23 11:51:11
71588629,2,,71345581,0,,"<p>You can configure environment variables in Elastic BeanStalk by going to</p>&#xA;<p>Configuration &gt; Software Configuration &gt; Environment Properties</p>&#xA;<p>You can add <code>PRISMA_ENGINES_MIRROR</code> in Environment Properties and it will be picked up by <code>.env</code></p>&#xA;<p><a href=""https://i.stack.imgur.com/ERZ6g.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ERZ6g.png"" alt=""EBS Env"" /></a></p>&#xA;",4154062,,,,2022-03-23 14:07:22,"",,0,0,0,2022-03-23 14:07:22
71625064,1,,,0,238,"<h1>What I want to do</h1>&#xA;<p>I want to define Apollo's cacheControl Directive in Nestjs code-first.</p>&#xA;<p>However, I could not find a sample that sets enum for directives in code-first.</p>&#xA;<p><a href=""https://www.apollographql.com/docs/apollo-server/performance/caching/#in-your-schema-static"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/performance/caching/#in-your-schema-static</a></p>&#xA;<h1>Problems occurring</h1>&#xA;<p>An error is displayed when starting the server.</p>&#xA;<h2>Error message</h2>&#xA;<pre><code>Error: Schema must contain uniquely named types but contains multiple types named &quot;CacheControlScope&quot;.&#xA;    at new GraphQLSchema (/Users/seijiomi/git/study/cache-nest/node_modules/graphql/type/schema.js:194:15)&#xA;    at transformSchema (/Users/seijiomi/git/study/cache-nest/node_modules/@nestjs/graphql/dist/utils/transform-schema.util.js:22:12)&#xA;    at GraphQLFederationFactory.overrideOrExtendResolvers (/Users/seijiomi/git/study/cache-nest/node_modules/@nestjs/graphql/dist/federation/graphql-federation.factory.js:87:60)&#xA;    at GraphQLFederationFactory.generateSchema (/Users/seijiomi/git/study/cache-nest/node_modules/@nestjs/graphql/dist/federation/graphql-federation.factory.js:65:33)&#xA;    at async GraphQLFederationFactory.mergeWithSchema (/Users/seijiomi/git/study/cache-nest/node_modules/@nestjs/graphql/dist/federation/graphql-federation.factory.js:28:22)&#xA;    at async ApolloFederationDriver.start (/Users/seijiomi/git/study/cache-nest/node_modules/@nestjs/apollo/dist/drivers/apollo-federation.driver.js:19:32)&#xA;    at async GraphQLModule.onModuleInit (/Users/seijiomi/git/study/cache-nest/node_modules/@nestjs/graphql/dist/graphql.module.js:104:9)&#xA;    at async Object.callModuleInitHook (/Users/seijiomi/git/study/cache-nest/node_modules/@nestjs/core/hooks/on-module-init.hook.js:51:9)&#xA;    at async NestApplication.callInitHook (/Users/seijiomi/git/study/cache-nest/node_modules/@nestjs/core/nest-application-context.js:166:13)&#xA;    at async NestApplication.init (/Users/seijiomi/git/study/cache-nest/node_modules/@nestjs/core/nest-application.js:93:9)&#xA;</code></pre>&#xA;<h1>Sample code</h1>&#xA;<p><a href=""https://github.com/Omi1112/nestjs-code-first-cache/blob/main/src/app.module.ts"" rel=""nofollow noreferrer"">https://github.com/Omi1112/nestjs-code-first-cache/blob/main/src/app.module.ts</a></p>&#xA;<h1>How to execute</h1>&#xA;<pre><code>yarn install&#xA;yarn run start:dev&#xA;</code></pre>&#xA;<h1>Investigation</h1>&#xA;<p>In the case of Code-frist, it seems that the enums set in autoGeneratedSchema and executableSchema are different, resulting in a double definition.</p>&#xA;<p><a href=""https://github.com/nestjs/graphql/blob/4e635ecf77bc794e942caed27a6dbc04615887ff/packages/graphql/lib/federation/graphql-federation.factory.ts#L103-L112"" rel=""nofollow noreferrer"">https://github.com/nestjs/graphql/blob/4e635ecf77bc794e942caed27a6dbc04615887ff/packages/graphql/lib/federation/graphql-federation.factory.ts#L103-L112</a></p>&#xA;<p>However, I don't know why the different values are set.</p>&#xA;",18584770,,,,2022-03-26 03:22:12,Set enum to directive in Code-frist. cacheContorl,<graphql><nestjs>,0,0,0,2022-03-26 03:22:12
71637065,1,,,0,225,"<p>I'm really struggling with deploying my Strapi+React App. I am more of a frontend developer and not so familiar with what happens server side.&#xA;So, I have my own server that I want to deploy to, but I can't find any instructions on how to do it....</p>&#xA;<p>My Strapi is fine and running on port 1337 and I did <code>npm run build</code> in React to deploy the app in a folder that my domain points to and I get the following error:</p>&#xA;<blockquote>&#xA;<p>Error: {&quot;graphQLErrors&quot;:[], &quot;clientErrors&quot;:[], &quot;networkError&quot;:{}, &quot;message&quot;: &quot;Failed to fetch&quot;}</p>&#xA;</blockquote>&#xA;<p>and in the console:</p>&#xA;<blockquote>&#xA;<p>POST <a href=""https://xx.xxx.xx.xx:1337/graphql"" rel=""nofollow noreferrer"">https://xx.xxx.xx.xx:1337/graphql</a> net::ERR_SSL_PROTOCOL_ERROR</p>&#xA;</blockquote>&#xA;<p>When I do <code>npm start</code> and then open <a href=""http://xx.xxx.xx.xx:3000"" rel=""nofollow noreferrer"">http://xx.xxx.xx.xx:3000</a>, I get a (partially) blank page and these errors in the console:</p>&#xA;<blockquote>&#xA;<p>GET <a href=""https://xx.xxx.xx.xx:3000/static/js/bundle.js"" rel=""nofollow noreferrer"">https://xx.xxx.xx.xx:3000/static/js/bundle.js</a> net::ERR_SSL_PROTOCOL_ERROR&#xA;:3000/favicon.ico:1</p>&#xA;</blockquote>&#xA;<blockquote>&#xA;<p>GET <a href=""https://xx.xxx.xx.xx:3000/favicon.ico"" rel=""nofollow noreferrer"">https://xx.xxx.xx.xx:3000/favicon.ico</a> net::ERR_SSL_PROTOCOL_ERROR</p>&#xA;</blockquote>&#xA;<p>So I guess it has something to do with SSL? And I don't know how to fix this...&#xA;Will you need any code to help me?</p>&#xA;<p>Thank you in advance!! I really appreciate any help!</p>&#xA;",11009821,,,,2022-03-27 14:10:59,Strapi + React deployment on own server,<reactjs><ssl><graphql><web-deployment><strapi>,0,0,0,2022-03-27 14:10:59
71668235,2,,65713544,0,,"<p>In my case I was rendering on the server, therefore I needed to combine with a router and routes, ex:</p>&#xA;<p><em>Browser</em>:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>        &lt;ApolloProvider client={client}&gt;&#xA;          &lt;BrowserRouter basename={basename}&gt;&#xA;            &lt;Routes&gt;&#xA;              &lt;Route path=&quot;/&quot; element={&lt;App /&gt;} /&gt;&#xA;            &lt;/Routes&gt;&#xA;          &lt;/BrowserRouter&gt;&#xA;        &lt;/ApolloProvider&gt;&#xA;</code></pre>&#xA;<p><em>Server:</em></p>&#xA;<pre class=""lang-js prettyprint-override""><code>    &lt;ConfigContext.Provider value={config}&gt;&#xA;      &lt;StaticRouter basename={config.app.URL} location={_event.path}&gt;&#xA;        &lt;App /&gt;&#xA;      &lt;/StaticRouter&gt;&#xA;    &lt;/ConfigContext.Provider&gt;,&#xA;&#xA;</code></pre>&#xA;<p>If that's your case the following documentaion:</p>&#xA;<ul>&#xA;<li><a href=""https://reactrouter.com/docs/en/v6/guides/ssr"" rel=""nofollow noreferrer"">https://reactrouter.com/docs/en/v6/guides/ssr</a></li>&#xA;<li><a href=""https://www.apollographql.com/docs/react/performance/server-side-rendering/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/performance/server-side-rendering/</a></li>&#xA;</ul>&#xA;",1970675,,,,2022-03-29 20:10:14,"",,0,0,0,2022-03-29 20:10:14
71669889,2,,71513341,0,,"<p>It is a string, for rich text it is using <a href=""https://editorjs.io/"" rel=""nofollow noreferrer"">https://editorjs.io/</a></p>&#xA;<p>You can inspect the network tab in the dashboard to learn how APIs are being used</p>&#xA;",2983577,,,,2022-03-29 23:31:01,"",,0,0,0,2022-03-29 23:31:01
71688288,1,71689601,,0,121,"<p>I have the following query</p>&#xA;<pre><code>const COURSES = gql`&#xA;  query(&#xA;    $course: Course!&#xA;  ) {&#xA;    **english**(course: $course) {&#xA;      transfers(&#xA;        options: {&#xA;          desc: [&quot;count_in&quot;, &quot;count_out&quot;]&#xA;        }&#xA;      ) {&#xA;        school {&#xA;          address&#xA;          symbol&#xA;          tokenType&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;<p>Note the 5th line starting with 'english' so let's say I have 1000 different courses like ['english', 'politics', 'arts', .... 1000th course). How can I make this course name dynamic. I didn't develop the backend so change in schema is not an option for me. how can I avoid duplication by making course name dynamic.</p>&#xA;<p>To be clear I want to place variable name at the place of <strong>'english'</strong> at line 5 so that this line can behave like below</p>&#xA;<pre><code>   english(course: $course) {&#xA;   politics(course: $course) {&#xA;   art(course: $course) {&#xA;   anyCourseName(course: $course) {&#xA;</code></pre>&#xA;<p>Update:&#xA;I'm calling above query using useQuery and passing parameter $course like below</p>&#xA;<pre><code>useQuery(&#xA;    COURSES,&#xA;    {&#xA;      variables: {&#xA;        course, //this serves as variable $course in above query&#xA;      },&#xA;    }&#xA;  )&#xA;</code></pre>&#xA;",3728916,,3728916,2022-03-31 12:26:11,2022-03-31 12:26:11,Dynamic function name in Graphql,<javascript><reactjs><graphql><apollo-client>,2,7,0,2022-03-31 07:10:10
71689601,2,,71688288,1,,"<pre><code>const COURSES = (c) =&gt; gql`&#xA;  query(&#xA;    $course: Course!&#xA;  ) {&#xA;    ${c}(course: $course) {&#xA;      transfers(&#xA;        options: {&#xA;          desc: [&quot;count_in&quot;, &quot;count_out&quot;]&#xA;        }&#xA;      ) {&#xA;        school {&#xA;          address&#xA;          symbol&#xA;          tokenType&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<pre><code>const query = COURSES('art')&#xA;</code></pre>&#xA;<p>?</p>&#xA;",3573340,,,,2022-03-31 08:53:53,"",,0,0,0,2022-03-31 08:53:53
71690570,2,,71688288,1,,"<p>You can simply do it like this:</p>&#xA;<pre><code>const course = &quot;english&quot;;&#xA;&#xA;const COURSES = gql`&#xA;  query(&#xA;    $course: Course!&#xA;  ) {&#xA;    ${course}(course: $course) {&#xA;      transfers(&#xA;        options: {&#xA;          desc: [&quot;count_in&quot;, &quot;count_out&quot;]&#xA;        }&#xA;      ) {&#xA;        school {&#xA;          address&#xA;          symbol&#xA;          tokenType&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;<p>Or if you have multiple queries:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const courses = [&#xA;  ""english"",&#xA;  ""politics"",&#xA;  ""art"",&#xA;  ""anyCourseName"",&#xA;];&#xA;&#xA;const queries = courses.reduce((acc, query) =&gt; (&#xA;  acc.concat(`${query}(course: $course) {&#xA;      transfers(&#xA;        options: {&#xA;          desc: [""count_in"", ""count_out""]&#xA;        }&#xA;      ) {&#xA;        school {&#xA;          address&#xA;          symbol&#xA;          tokenType&#xA;        }&#xA;      }&#xA;  }\n`)&#xA;), """");&#xA;&#xA;console.log(queries);</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>then use it in your gql:</p>&#xA;<pre><code>const COURSES = gql`&#xA;  query(&#xA;    $course: Course!&#xA;  )&#xA;  {&#xA;    ${queries}&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;",11129751,,11129751,2022-03-31 11:24:32,2022-03-31 11:24:32,"",,0,0,0,2022-03-31 10:01:31
71706537,2,,71704711,0,,"<p>Seems that I was using an old version of <code>jest-preset-angular</code></p>&#xA;<pre><code>&quot;jest-preset-angular&quot;: &quot;^9.0.7&quot;,&#xA;</code></pre>&#xA;<p>I updated to</p>&#xA;<pre><code>&quot;jest-preset-angular&quot;: &quot;^11.1.1&quot;,&#xA;</code></pre>&#xA;<p>I then had a minor breaking change that I fixed removing the <code>import 'jest-preset-angular/setup-jest';</code> line from my <code>setup-jest.ts</code> file and the bug is gone.</p>&#xA;",532695,,,,2022-04-01 11:56:25,"",,0,0,0,2022-04-01 11:56:25
71707130,2,,71707000,-1,,"<p>Inspect a page, Developer Tools =&gt; Network;&#xA;See every request that send your website;&#xA;what script send the request, is it yours or not ?&#xA;analyze the result of each request.&#xA;I think this can help.</p>&#xA;",16544258,,5585371,2022-04-03 15:05:29,2022-04-03 15:05:29,"",,0,1,0,2022-04-01 12:44:25
71723703,2,,65012190,0,,<p>I'm a complete idiot.</p>&#xA;<p>I had set up a <code>/etc/hosts</code> definition for my remote Wordpress headless instance that I was using with Gatsby; and of course it worked just fine on my local.</p>&#xA;<p>And of course Netlify could not see the definition for the IP address that I had created in my laptop's <code>/etc/hosts</code> file.</p>&#xA;<p>So I was getting a timeout error from Netlify.</p>&#xA;<p>Creating an entry in my DNS (I use Google Domains at present) to point to the headless wordpress fixed the problem.</p>&#xA;<p>:facepalm:</p>&#xA;,813919,,,,2022-04-03 07:03:41,"",,0,0,0,2022-04-03 07:03:41
71724804,2,,48863441,0,,"<p>There are two solutions for that</p>&#xA;<p><strong>1) ApolloClientDevTools</strong>&#xA;install it in your Chrome browser!&#xA;It is GraphQL debugging tools for Apollo Client.&#xA;Apollo Client Dev tools is a Chrome extension for the open-source GraphQL client, Apollo Client. This extension has 4 main features:</p>&#xA;<ol>&#xA;<li>A built-in version of the Apollo Studio Explorer that allows you to make queries against your GraphQL server using your app's network interface directly (no configuration necessary).</li>&#xA;<li>A query watcher that shows you which queries are being watched by the current page, when those queries are loading, and what variables those queries are using.</li>&#xA;<li>A mutation inspector that displays the mutations made to your Apollo Client application data.</li>&#xA;<li>A cache inspector that displays your Apollo Client cache data. You can explore the cache through a tree-like interface, and search for specific field keys and values.</li>&#xA;</ol>&#xA;<p><strong>2)<code>console.log(JSON.stringify(error, null, 2));</code></strong></p>&#xA;<p>This will show you an error trace in your console.</p>&#xA;<pre><code>{&#xA;  &quot;graphQLErrors&quot;: [],&#xA;  &quot;networkError&quot;: {&#xA;    &quot;name&quot;: &quot;ServerError&quot;,&#xA;    &quot;response&quot;: {},&#xA;    &quot;statusCode&quot;: 400,&#xA;    &quot;result&quot;: {&#xA;      &quot;errors&quot;: //IT will show you here your issue.&#xA;    }&#xA;  },&#xA;  &quot;message&quot;: &quot;Network error: Response not successful: Received status code 400&quot;,&#xA;  &quot;name&quot;: &quot;Error&quot;,&#xA;  &quot;stack&quot;: &quot;...same as before&quot;&#xA;}&#xA;</code></pre>&#xA;",17151801,,,,2022-04-03 09:58:04,"",,0,0,0,2022-04-03 09:58:04
71746868,2,,68363427,1,,"<p>I got the same error, in Next js With GraphQl But It Solved with</p>&#xA;<pre><code>npm install micro-cors&#xA;&#xA;import micro_cors from &quot;micro-cors&quot;&#xA;&#xA;const cors = micro_cors({origin:&quot;https://studio.apollographql.com&quot;,allowMethods:[&quot;GET&quot;,&quot;POST&quot;],allowHeaders:[&quot;Access-Control-Allow-Credentials&quot;,&quot;true&quot;,&quot;Content-Type&quot;,&quot;Access-Control-Allow-Origin&quot;,&quot;Access-Control-Allow-Headers&quot;]})&#xA;</code></pre>&#xA;<p>then Wrapping this</p>&#xA;<pre><code>export default   cors(async function handler(req, res) {&#xA;          if(req.method===&quot;OPTIONS&quot;){&#xA;                    res.end()&#xA;                    return false&#xA;                   }&#xA;&#xA;          &#xA;        await Server.createHandler({&#xA;                path:&quot;/api/graphql&quot;})(req,res);&#xA;                    })&#xA;</code></pre>&#xA;<p>And please Don't Forget To start the server</p>&#xA;",16948601,,16948601,2022-07-08 06:08:10,2022-07-08 06:08:10,"",,0,0,0,2022-04-05 05:52:37
71747849,2,,71747581,1,,"<p>I never use wp service before, but the docs has <a href=""https://www.wpgraphql.com/docs/interacting-with-wpgraphql/"" rel=""nofollow noreferrer"">this</a>, maybe you can use fetch api to debug if the network work first, and it seems not to be an useQuery issue:</p>&#xA;<pre><code>fetch('https://www.wpgraphql.com/graphql', {&#xA;  method: 'POST',&#xA;  headers: {&#xA;    'Content-Type': 'application/json',&#xA;  },&#xA;  body: JSON.stringify({&#xA;    query: `&#xA;        {&#xA;            generalSettings {&#xA;                url&#xA;            }&#xA;        }&#xA;    `,&#xA;  }),&#xA;})&#xA;  .then(res =&gt; res.json())&#xA;  .then(res =&gt; console.log(res.data))&#xA;</code></pre>&#xA;",16648127,,,,2022-04-05 07:34:37,"",,0,3,0,2022-04-05 07:34:37
71752940,2,,71465981,0,,"<p>Unfortunately it looks like although <a href=""https://shopify.dev/api/admin-graphql/2022-04/queries/appinstallations"" rel=""nofollow noreferrer"">it's documented</a> and there are no warnings about required scopes, it requires a scope that is no longer available to any apps other than the Shopify GraphiQL app:</p>&#xA;<ul>&#xA;<li><a href=""https://community.shopify.com/c/shopify-apis-and-sdks/access-scope-for-listing-appinstallations/m-p/866587"" rel=""nofollow noreferrer"">https://community.shopify.com/c/shopify-apis-and-sdks/access-scope-for-listing-appinstallations/m-p/866587</a></li>&#xA;<li><a href=""https://community.shopify.com/c/shopify-apis-and-sdks/grapql-admin-api-issue-access-denied/td-p/456388"" rel=""nofollow noreferrer"">https://community.shopify.com/c/shopify-apis-and-sdks/grapql-admin-api-issue-access-denied/td-p/456388</a></li>&#xA;</ul>&#xA;",2498471,,,,2022-04-05 13:48:11,"",,0,0,0,2022-04-05 13:48:11
71756378,1,,,0,273,"<p>I am using AWS services for my app, and got an error I have no idea how to handle or correct it.</p>&#xA;<p>When sending a post request using:</p>&#xA;<pre><code>  async function _publishPost(){&#xA;    try {&#xA;      const newPost = {&#xA;        name: username,&#xA;        id: 12345678,&#xA;      };&#xA;      await API.graphql(graphqlOperation(createPost, { input: newPost }));&#xA;    } catch (e) { console.log(e); }&#xA;  }&#xA;</code></pre>&#xA;<p>When running it under low network I get the error:</p>&#xA;<pre><code>  //AFTER A FEW SECONDS&#xA;  [ERROR] 14:41.398 axios-http-handler - Network Error&#xA;  at node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js:127:15 in prototype._log&#xA;  at node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js:210:8 in prototype.error&#xA;  at node_modules/@aws-amplify/storage/lib-esm/providers/axios-http-handler.js:178:20 in axios.request.then._catch$argument_0&#xA;  &#xA;  //AFTER WAITING A FEW MINUTE &#xA;  [ERROR] 17:52.671 axios-http-handler - Request failed with status code 400&#xA;  at node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js:127:15 in prototype._log&#xA;  at node_modules/@aws-amplify/core/lib-esm/Logger/ConsoleLogger.js:210:8 in prototype.error&#xA;  at node_modules/@aws-amplify/storage/lib-esm/providers/axios-http-handler.js:178:20 in axios.request.then._catch$argument_0&#xA;</code></pre>&#xA;<p>I expected the error to be logged by the catch block and logged but the errors arent caught by the trycatch. I am not sure how I'd catch the error, cancel the request early enough and not let it freeze the app with a loading screen</p>&#xA;<p>I retried uploading it under the same network circumstace and I get the same error. With fair network connection it works perfectly.</p>&#xA;<p>*I am using expo to run the app</p>&#xA;",18677155,,18677155,2022-04-07 17:19:39,2022-04-07 17:19:39,How to handle network errors or cancel post request when using a try/catch block in javascript,<javascript><reactjs><amazon-web-services><react-native><graphql>,0,0,0,2022-04-05 17:57:56
71761616,1,,,2,373,"<p>Assume that there is a query such as:</p>&#xA;<pre><code>query test1 {&#xA;  students {&#xA;    id&#xA;    name&#xA;    address_pin&#xA;    address_city&#xA;    yearAdmitted&#xA;    laptopOS&#xA;    phoneOS&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I can access this entire query text at runtime in graphql-java.</p>&#xA;<p>Is there anyway to get the query-name 'students'?</p>&#xA;<p>Tried this and it works for basic queries, not sure if this is the correct way to do so.</p>&#xA;<pre><code>    private String getQueryName(String input) {&#xA;    Document doc = new Parser().parseDocument(input);&#xA;    List&lt;OperationDefinition&gt; definitionList = doc.getDefinitionsOfType(OperationDefinition.class);&#xA;    for (OperationDefinition definition : definitionList) {&#xA;        if (definition != null &amp;&amp; definition.getOperation().toString().equalsIgnoreCase(&quot;QUERY&quot;)) {&#xA;            Field field = definition.getSelectionSet().getSelectionsOfType(Field.class).stream().findFirst().orElse(null);&#xA;            if (field != null) {&#xA;                return field.getName();&#xA;            }&#xA;        }&#xA;    }&#xA;    return null;&#xA;}&#xA;</code></pre>&#xA;",1635197,,1635197,2022-04-07 02:17:41,2022-04-07 02:17:41,Get GraphQL query name from the entire query text in graphql-java,<graphql><graphql-java>,0,0,0,2022-04-06 05:50:10
71779206,1,,,1,172,"<p>I am facing an issue , when i installed sentry to my next js project , suddenly CORS error occured in my apollo client 3.x.x , but the thing is it only give CORS error in useQuery not in useMutation.</p>&#xA;<pre><code>Access to fetch at 'http://localhost:1337/graphql' from origin 'http://localhost:3000' has been blocked by CORS policy: Request header field access-control-allow-origin is not allowed by Access-Control-Allow-Headers in preflight response.&#xA;</code></pre>&#xA;<p>its just weird. i have add option of integration in Sentry.init</p>&#xA;<pre><code>integrations: [&#xA;    new BrowserTracing({&#xA;      tracingOrigins: [&quot;http://localhost:1337/graphql&quot;],&#xA;    }),&#xA;  ],&#xA;&#xA;</code></pre>&#xA;<p>Help Needed !!</p>&#xA;",13082761,,,,2022-04-07 09:00:57,"Apollo Client 3.x.x , Next JS, Sentry, Strapi",<reactjs><next.js><apollo-client><sentry>,0,1,0,2022-04-07 09:00:57
71795993,2,,59810092,0,,"<p>Now raw-loader is deprecated, you can load them like this.</p>&#xA;<p>In the webpack config</p>&#xA;<pre><code> module: {&#xA;  rules: [&#xA;    {&#xA;      test: /\.gql/,&#xA;      type: &quot;asset/source&quot;,&#xA;    },&#xA;  ],&#xA;},&#xA;</code></pre>&#xA;<p>Then import</p>&#xA;<pre><code>import myGraphQlQuery from &quot;myGraphQlQuery.gql&quot;&#xA;</code></pre>&#xA;",10869461,,,,2022-04-08 11:11:26,"",,0,1,0,2022-04-08 11:11:26
71805503,2,,71805418,0,,"<p>Turns out, upgrading nextjs simply to 12.1.14 worked a charm &amp; no my project is working great ! </p>&#xA;",14188379,,,,2022-04-09 05:27:16,"",,0,1,0,2022-04-09 05:27:16
71808281,2,,70524028,1,,"<p>You can install <code>graphene-django==3.0.0b7</code></p>&#xA;<p>It's beta version, but i don't know why graphene-django 2.15 does'nt work, when patch note said they fixed issue since 2.8.1 version.</p>&#xA;<p>Thank's to @Behoston from this <a href=""https://github.com/graphql-python/graphene-django/issues/1284"" rel=""nofollow noreferrer"">Github issue</a> for this solution</p>&#xA;",9204594,,,,2022-04-09 12:58:21,"",,0,0,0,2022-04-09 12:58:21
71808314,2,,70382084,0,,"<p>You can install graphene-django version 3.0.0b7&#xA;run the following command in your terminal:</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>pip install graphene-django==3.0.0b7 &#xA;</code></pre>&#xA;<p>It's beta version, but i don't know why graphene-django 2.15 does'nt work, when patch note said they fixed issue since 2.8.1 version.</p>&#xA;<p>Thank's to @Behoston from this Github issue for this solution</p>&#xA;",9204594,,,,2022-04-09 13:02:11,"",,0,0,0,2022-04-09 13:02:11
71813136,1,,,0,45,"<p>I am new to Heroku, MongoDb, Graphql and the development.&#xA;I created an app, deployed it to Heroku, everything was working just fine until I changed my schema (added 3 new fields). I used git push heroku main, heroku restart, and nothing seem to happen. When I go to localhost everything is updated and works just fine, meaning I can create users using new schema.&#xA;Please advise.</p>&#xA;",15260411,,,,2022-04-10 01:30:26,Heroku doesn't update graphql schema once redeployed,<mongodb><heroku><deployment><express-graphql>,0,2,0,2022-04-10 01:30:26
71842789,2,,48614730,0,,"<p>There is a bug in Albert reply. If you have <code>&quot;:</code> somewhere in your string like <code>&quot;field&quot;: &quot;\&quot;Hello\&quot;: World&quot;</code>, then after regexp replace you will end up with something like this: <code>field: &quot;\\Hello\\: World&quot;</code>.</p>&#xA;<p>I fixed this by adding <code>[^\\&quot;]+</code> to the regexp, so it looks like</p>&#xA;<p><code>imageServicesClean.replace(/&quot;([^(&quot;)&quot;]+[^\\&quot;]+)&quot;:/g, &quot;$1:&quot;);</code></p>&#xA;<p>I am not quite sure if this is a right fix and do not causes any bugs, but it works for me for now</p>&#xA;",13575283,,,,2022-04-12 12:31:30,"",,0,0,0,2022-04-12 12:31:30
71856572,1,,,0,186,"<p><strong>The bug</strong></p>&#xA;<ul>&#xA;<li>Aliased attributes in union types resolve to null instead of their correct value when using schema stitching to combine two remote schemas.</li>&#xA;<li>The same query returns the correct result on the &quot;non-stitched&quot; schema when issued to the non-stitched schema at localhost:/4001/graphql</li>&#xA;</ul>&#xA;<p><strong>To Reproduce</strong>&#xA;Steps to reproduce the behavior:</p>&#xA;<ul>&#xA;<li>checkout the <a href=""https://github.com/xddq/stitch-alias-null"" rel=""nofollow noreferrer"">github repo</a></li>&#xA;<li>follow the README.md steps:&#xA;<ul>&#xA;<li><code>npm i &amp;&amp; npm run start</code></li>&#xA;<li>gateway on localhost:4444/graphql</li>&#xA;<li>remote-1 on localhost:4001/graphql</li>&#xA;<li>remote-2 on localhost:4002/graphql</li>&#xA;</ul>&#xA;</li>&#xA;<li>go to localhost:4444/graphql (the stitched schema) and query</li>&#xA;<li></li>&#xA;</ul>&#xA;<pre><code>query {articles {title {&#xA; ... on TitleOne {text}&#xA; ... on TitleTwo {renamedText: text}&#xA;}}}&#xA;</code></pre>&#xA;<p><strong>Expected behavior</strong></p>&#xA;<ul>&#xA;<li>result should contain correct values. E.g.</li>&#xA;</ul>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;articles&quot;: [&#xA;      {&#xA;        &quot;title&quot;: {&#xA;          &quot;text&quot;: &quot;hello world&quot;&#xA;        }&#xA;      },&#xA;      {&#xA;        &quot;title&quot;: {&#xA;          &quot;renamedText&quot;: 1&#xA;        }&#xA;      },&#xA;      {&#xA;        &quot;title&quot;: {&#xA;          &quot;renamedText&quot;: 2&#xA;        }&#xA;      },&#xA;      {&#xA;        &quot;title&quot;: {&#xA;          &quot;text&quot;: &quot;bye&quot;&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>** Actual Behaviour **</p>&#xA;<ul>&#xA;<li>result contains &quot;null&quot; for aliased fields</li>&#xA;</ul>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;articles&quot;: [&#xA;      {&#xA;        &quot;title&quot;: {&#xA;          &quot;text&quot;: &quot;hello world&quot;&#xA;        }&#xA;      },&#xA;      {&#xA;        &quot;title&quot;: {&#xA;          &quot;renamedText&quot;: null&#xA;        }&#xA;      },&#xA;      {&#xA;        &quot;title&quot;: {&#xA;          &quot;renamedText&quot;: null&#xA;        }&#xA;      },&#xA;      {&#xA;        &quot;title&quot;: {&#xA;          &quot;text&quot;: &quot;bye&quot;&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p><strong>Environment:</strong></p>&#xA;<ul>&#xA;<li>OS: ubuntu 18.04</li>&#xA;<li>&quot;@graphql-tools/load&quot;: &quot;^7.5.8&quot;,</li>&#xA;<li>&quot;@graphql-tools/schema&quot;: &quot;^8.3.8&quot;,</li>&#xA;<li>&quot;@graphql-tools/stitch&quot;: &quot;^8.6.6&quot;,</li>&#xA;<li>&quot;@graphql-tools/url-loader&quot;: &quot;^7.9.11&quot;,</li>&#xA;<li>&quot;@graphql-tools/wrap&quot;: &quot;^8.4.13&quot;,</li>&#xA;<li>NodeJS: v14.19.1</li>&#xA;</ul>&#xA;<p>Does anyone know how I can get this to return the correct values instead of &quot;null&quot;?</p>&#xA;",13997768,,,,2022-04-13 11:15:07,How to fix graphql-tools/stitch stitched schemas returning null for aliased fields on union types?,<node.js><graphql><schema><graphql-tools><stitch>,0,0,0,2022-04-13 11:15:07
71859853,2,,71847200,0,,"<p>It turns out my final thought was correct. The mutation is 100% being run, and the log statements are being hit.&#xA;The issue is due to AWS EC2 CodePipeline deployment. The backend server is perpetually being run on AWS's end, so the <code>console</code> where the logs occur is no longer my VSC terminal, but the instance's AWS console.&#xA;This is also the same with the front end, where if I run the code locally, none of the new logs get hit. I can only see ALL of the frontend logs if I am on the IP adress in the browser, not the localhost.&#xA;This all being said, I currently have no idea how to view the console in AWS and if anyone was privy to that information and cared to share that would be greatly appreciated</p>&#xA;",0,user17306847,,,2022-04-13 15:13:59,"",,0,1,0,2022-04-13 15:13:59
71868868,2,,71749793,0,,"<p>It has many different causes, such as:</p>&#xA;<ul>&#xA;<li>slow computer processing speed</li>&#xA;<li>spring-webflux glitch</li>&#xA;<li>long / unwieldy code</li>&#xA;<li>local environment issue / can't run on it</li>&#xA;</ul>&#xA;<p>Try running the code on a different computer or a public environment</p>&#xA;",0,user18492526,,,2022-04-14 08:45:51,"",,0,1,0,2022-04-14 08:45:51
71902222,1,,,0,457,"<p>I am trying to change the version of the graphql API the app is using.</p>&#xA;<p>setup:</p>&#xA;<ul>&#xA;<li>shopify CLI ver 2.15.6</li>&#xA;<li>type node.js</li>&#xA;</ul>&#xA;<p>in code I cannot see the URL the app is calling, is there an ENV or some server side&#xA;settings to change to the latest API version?</p>&#xA;<p>on next.js I see this on the server/client.js</p>&#xA;<pre><code>export const createClient = (shop, accessToken) =&gt; {&#xA;  return new ApolloClient({&#xA;    uri: `https://${shop}/admin/api/2019-10/graphql.json`,&#xA;</code></pre>&#xA;<p>but this is not used in embedded app bridge calls.</p>&#xA;<p>I would like to use the 2022-04 (latest) version</p>&#xA;",148397,,,,2022-04-17 15:10:39,shopify app development changing graphql API version,<node.js><graphql><shopify-app>,1,0,0,2022-04-17 13:17:28
71903017,2,,71902222,0,,"<p>I think you need to initialise it using the context, according to the <a href=""https://github.com/Shopify/shopify-node-api/blob/HEAD/docs/getting_started.md#set-up-context"" rel=""nofollow noreferrer"">docs</a></p>&#xA;<blockquote>&#xA;<p>While setting up Context, you'll be able to set which version of the&#xA;Admin API your app will be using.</p>&#xA;</blockquote>&#xA;<pre><code>Shopify.Context.initialize({&#xA;  API_KEY,&#xA;  API_SECRET_KEY,&#xA;  SCOPES: [SCOPES],&#xA;  HOST_NAME: HOST.replace(/https:\/\//, &quot;&quot;),&#xA;  IS_EMBEDDED_APP: {boolean},&#xA;  API_VERSION: ApiVersion.{version} // all supported versions are available, as well as &quot;unstable&quot; and &quot;unversioned&quot;&#xA;});&#xA;</code></pre>&#xA;",1749403,,,,2022-04-17 15:10:39,"",,0,2,0,2022-04-17 15:10:39
71911244,2,,71911031,1,,"<p>looking at your docker-compose.yml and checking the database connection string, you are referring to the IP. In docker you should always try to focus on &quot;dns/alias&quot; instead of IP, since IP will probably be different each time you run it (unless you define a static ipv4 address in the network spec part of the compose).</p>&#xA;<p>You should try to adjust: HASURA_GRAPHQL_DATABASE_URL: postgres://docker:123@172.25.0.3:5432/docker   # postgres://username:password@hostname:port/dbname - to use the &quot;db&quot; alias instead of &quot;172.25.0.3&quot; IP.</p>&#xA;",13887112,,13887112,2022-04-18 17:34:56,2022-04-18 17:34:56,"",,0,0,0,2022-04-18 11:34:29
71920637,1,,,0,61,"<p>i am using Adobe AEM with GraphQL and i am trying to use Fragments here (because i want to query the data with Gatsby.js, but this is not related i think).</p>&#xA;<p>When i try to run this Query:</p>&#xA;<pre><code>{&#xA;  testList {&#xA;    items {&#xA;      typename&#xA;      headline&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>the result is</p>&#xA;<pre><code>&#xA;{&#xA;  &quot;data&quot;: {&#xA;    &quot;testList&quot;: {&#xA;      &quot;items&quot;: [&#xA;        {&#xA;          &quot;typename&quot;: &quot;TestModel&quot;,&#xA;          &quot;headline&quot;: &quot;test headline&quot;&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>which looks fine.. BUT when i try to query with fragments, the field is getting no data (headline is null)</p>&#xA;<pre><code>{&#xA;  testList {&#xA;    items {&#xA;      typename&#xA;      ...TestModelFragment&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;fragment TestModelFragment on TestModel {&#xA;  headline&#xA;}&#xA;&#xA;{&#xA;  &quot;data&quot;: {&#xA;    &quot;testList&quot;: {&#xA;      &quot;items&quot;: [&#xA;        {&#xA;          &quot;typename&quot;: &quot;TestModel&quot;,&#xA;          &quot;headline&quot;: null&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>can someone explain this or am i missing something here?</p>&#xA;",4902826,,,,2022-04-19 06:39:01,Graphql Fragment not resolving fields,<graphql><adobe><aem>,0,2,0,2022-04-19 06:39:01
71933526,2,,70784272,0,,"<p>The data returned from Bitquery seems to be correct as I checked from <a href=""https://pancakeswap.finance/info/tokens"" rel=""nofollow noreferrer"">https://pancakeswap.finance/info/tokens</a> which comes out to be around $8.60.</p>&#xA;<p>Your GraphQL query returns a different value somehow. I have tried to change the GraphQL query you made which you can check from this link</p>&#xA;<p><a href=""https://graphql.bitquery.io/ide/httpsstackoverflowcomquestions70784272bitquery-wrong-data-not-real-time"" rel=""nofollow noreferrer"">https://graphql.bitquery.io/ide/httpsstackoverflowcomquestions70784272bitquery-wrong-data-not-real-time</a></p>&#xA;<p>The GraphQL query is as follows:-</p>&#xA;<pre><code>{&#xA;  ethereum(network: bsc) {&#xA;    dexTrades(&#xA;      exchangeAddress: {is: &quot;0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73&quot;}&#xA;      baseCurrency: {is: &quot;0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82&quot;}&#xA;      quoteCurrency: {is: &quot;0x55d398326f99059ff775485246999027b3197955&quot;}&#xA;    ) {&#xA;      baseCurrency {&#xA;        symbol&#xA;      }&#xA;      quoteCurrency {&#xA;        symbol&#xA;      }&#xA;      quotePrice(calculate: any)&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",18872642,,,,2022-04-20 02:46:14,"",,0,0,0,2022-04-20 02:46:14
71957085,2,,67796217,3,,<p>I had this issue in my NextJs project. after changing the .env.local file to .env everything worked.</p>&#xA;,5187065,,,,2022-04-21 15:29:55,"",,0,0,0,2022-04-21 15:29:55
71961246,1,,,0,137,"<p>I am running a React App, using a GraphQL / Prisma Database and Express server with an Apollo Middleware, and I am having an issue with one specific mutation.&#xA;Whenever I run this locally, everything works fine. I have a CI/CD deployment set up on an EC2 Instance on Amazon, meaning the code I have in my GitHub should match exactly with what is on AWS.&#xA;Like I said, running the issue locally does not cause an issue, but running it deployed returns me with the following error:</p>&#xA;<pre><code>Error: Error: &#xA;Invalid `prisma.weeklyReport.create()` invocation:&#xA;&#xA;{&#xA;  data: {&#xA;    rank: 48,&#xA;    speedingEventRate: '0',&#xA;    distractionsRate: '0',&#xA;    followingDistanceRate: '0',&#xA;    signalViolationsRate: '0',&#xA;    deliveryCompletionRate: '1',&#xA;    deliveredAndRecieved: '0',&#xA;+   photoOnDelivery: String,&#xA;+   attendedDeliveryAccuracy: Int,&#xA;?   customerDeliveryFeedback?: NullableJsonNullValueInput | Json,&#xA;?   id?: String,&#xA;?   createdAt?: DateTime,&#xA;?   hadAccident?: Boolean,&#xA;?   acknowledged?: Boolean,&#xA;?   acknowledgedAt?: String | null,&#xA;?   netradyne?: NullableJsonNullValueInput | Json,&#xA;?   deliveryAssociate?: NullableJsonNullValueInput | Json,&#xA;?   defects?: NullableJsonNullValueInput | Json,&#xA;?   hasManyAccidents?: NullableJsonNullValueInput | Json,&#xA;?   belongsToTeam?: NullableJsonNullValueInput | Json,&#xA;?   attendance?: NullableJsonNullValueInput | Json,&#xA;?   productivity?: NullableJsonNullValueInput | Json&#xA;  }&#xA;}&#xA;&#xA;Argument photoOnDelivery for data.photoOnDelivery is missing.&#xA;Argument attendedDeliveryAccuracy for data.attendedDeliveryAccuracy is missing.&#xA;&#xA;Note: Lines with + are required, lines with ? are optional.&#xA;</code></pre>&#xA;<p>With the issue being that there are no values for <code>photoOnDelivery</code> or <code>attendedDeliveryAccuracy</code> which are apparently non-optional. This is not true, however, since in the <code>schema.prisma</code> file, there is a <code>?</code> after both aforementioned values, indicating they are optional, and furthermore at no point during the type definitions do I use <code>!</code> which would make the fields mandatory. So, I am at a loss for why the computer thinks there are neccessary on the deployed side of things but not locally. Does anyone have any ideas?</p>&#xA;",18899735,,,,2022-04-21 21:47:53,"Lines with + are required, lines with ? are optional Error on Deployment but not Locally",<reactjs><json><graphql><apollo><mutation>,0,0,0,2022-04-21 21:47:53
71961852,1,71961898,,1,116,"<p>I'm building a graphql application with apollo server and I'm having trouble figuring out how to log stack traces serverside in production mode.</p>&#xA;<p>I found <a href=""https://www.apollographql.com/docs/apollo-server/data/errors/#omitting-or-including-stacktrace"" rel=""nofollow noreferrer"">these docs</a> but it's not clear how to correctly log stack traces in production.</p>&#xA;<p>I have the following <code>formatError</code> function:</p>&#xA;<pre><code>    formatError: ((err) =&gt; {&#xA;      console.error(err.originalError)&#xA;      return err&#xA;  })&#xA;</code></pre>&#xA;<p>and when one of my resolvers throws an error with <code>NODE_ENV=production</code> I see the following output:</p>&#xA;<pre><code>Error: Unexpected error value: &quot;could not get config value&quot;&#xA;    at locatedError (/tripvector/node_modules/graphql/error/locatedError.js:24:9)&#xA;    at /tripvector/node_modules/graphql/execution/execute.js:491:54&#xA;    at processTicksAndRejections (node:internal/process/task_queues:96:5)&#xA;    at async execute (/tripvector/node_modules/apollo-server-core/dist/requestPipeline.js:204:20)&#xA;    at async processGraphQLRequest (/tripvector/node_modules/apollo-server-core/dist/requestPipeline.js:138:28)&#xA;    at async processHTTPRequest (/tripvector/node_modules/apollo-server-core/dist/runHttpQuery.js:187:30)&#xA;</code></pre>&#xA;<p>However, when I run in debug mode, the original error is printed as I expect:</p>&#xA;<pre><code>Error: could not get config value&#xA;    at validate (file:///Users/paymahn/code/tripvector/tripvector-mono/backend/lib/settings/settings.js:11:15)&#xA;    at getGoogleSecret (file:///Users/paymahn/code/tripvector/tripvector-mono/backend/lib/settings/settings.js:29:12)&#xA;    at Object.loginWithGoogle (file:///Users/paymahn/code/tripvector/tripvector-mono/backend/api/users/graphql/mutations.js:141:30)&#xA;    at field.resolve (/Users/paymahn/code/tripvector/tripvector-mono/backend/node_modules/apollo-server-core/dist/utils/schemaInstrumentation.js:52:26)&#xA;    at executeField (/Users/paymahn/code/tripvector/tripvector-mono/backend/node_modules/graphql/execution/execute.js:469:20)&#xA;    at /Users/paymahn/code/tripvector/tripvector-mono/backend/node_modules/graphql/execution/execute.js:365:22&#xA;    at promiseReduce (/Users/paymahn/code/tripvector/tripvector-mono/backend/node_modules/graphql/jsutils/promiseReduce.js:23:9)&#xA;    at executeFieldsSerially (/Users/paymahn/code/tripvector/tripvector-mono/backend/node_modules/graphql/execution/execute.js:361:43)&#xA;    at executeOperation (/Users/paymahn/code/tripvector/tripvector-mono/backend/node_modules/graphql/execution/execute.js:335:14)&#xA;    at execute (/Users/paymahn/code/tripvector/tripvector-mono/backend/node_modules/graphql/execution/execute.js:130:20)&#xA;</code></pre>&#xA;<p>I throw the error with the following code:</p>&#xA;<pre><code>function validate(val) {&#xA;    if (!val) {&#xA;        throw new Error('could not get config value')&#xA;    }&#xA;    return val&#xA;}&#xA;</code></pre>&#xA;<p>How can I correctly configure apollo server to print stack traces for errors, even in production?</p>&#xA;",1489726,,,,2022-04-21 23:32:17,Cannot log stack traces with apollo server,<apollo-server><graphql-js>,1,0,0,2022-04-21 23:24:30
71997686,1,,,-1,249,"<p>When using the Apollo client to fetch data, I'm getting the Error from the Apollo client: 'Network error: JSON.parse: unexpected end of data at line 1 column 1 of the JSON data'. (With Firefox)</p>&#xA;<p><a href=""https://i.stack.imgur.com/3LK0M.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3LK0M.png"" alt=""enter image description here"" /></a></p>&#xA;<p>With Chrome the Error message is a bit different:</p>&#xA;<p><a href=""https://i.stack.imgur.com/z4kMA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/z4kMA.png"" alt=""&gt;  Error: Network error: Unexpected end of JSON input at new ApolloError (webpack-internal:///./node_modules/apollo-client/bundle.esm.js:80:28) at eval (webpack-internal:///./node_modules/apollo-client/bundle.esm.js:1178:43)"" /></a></p>&#xA;<p>Maybe it's Important to notice that Mutations are working.</p>&#xA;<p>In the main.ts file I'm using:</p>&#xA;<pre><code> const defaultClient = new ApolloClient({&#xA;  link: createHttpLink({&#xA;    uri: ` MY URL`,&#xA;    fetchOptions: {&#xA;      mode: 'no-cors',&#xA;          },&#xA;  }),&#xA;  cache: new InMemoryCache(),&#xA;});&#xA;</code></pre>&#xA;<p>I'm Using Vue3 with:  apollo-composable&quot;: &quot;^4.0.0-alpha.16&quot;</p>&#xA;<p>Here are the headers:</p>&#xA;<p><a href=""https://i.stack.imgur.com/4Trqp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4Trqp.png"" alt=""enter image description here"" /></a></p>&#xA;<p>When looking at the browser console in the Network Monitors Response tab, I'm getting a Status 200 POST with a valid JSON object:&#xA;(I checked it with a JSON format validator... It's valid JSON)</p>&#xA;<p><a href=""https://i.stack.imgur.com/XcQm9.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XcQm9.png"" alt=""enter image description here"" /></a></p>&#xA;<p>So what really seems strange to me is that I'm getting back a valid JSON Object according to the response, but Apollo is giving me the JSON.parse error.</p>&#xA;<p>One thing I noticed is that when sending the Apollo request with mode: 'no-cors', the request headers Content-Type is 'text/plain' and when setting mode:'cors' the Content-Type is 'application/json'.</p>&#xA;<p>With mode:'cors' everything works fine. No errors.</p>&#xA;<p>I did some research and found out that with 'no-cors' the Content-Type 'application/json' is not allowed. But I don't know if that is causing the error. Also want to mention that mode:'no-cors' is needed from the backend requirements.</p>&#xA;<p>Headers when setting  mode: 'cors' option:</p>&#xA;<p><a href=""https://i.stack.imgur.com/16Q1M.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/16Q1M.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Thanks a lot for helping :)</p>&#xA;",10154279,,10154279,2022-04-25 12:53:16,2022-04-25 16:10:09,How to solve JSON.parse Error from Vue Apollo Client with fetchOptions: {mode: 'no-cors'},<cors><apollo><fetch-api><apollo-client><vue-apollo>,1,0,0,2022-04-25 09:57:05
72002553,2,,71997686,0,,"<p><code>fetch(..., {mode: &quot;no-cors&quot;})</code> performs the request but is not able to access the response if the request is cross-origin. In other words,</p>&#xA;<pre class=""lang-js prettyprint-override""><code>fetch(..., {mode: &quot;no-cors&quot;}).then(r=&gt;r.body)&#xA;</code></pre>&#xA;<p>resolves to <code>null</code>. This explains the &quot;unexpected end of data&quot;.</p>&#xA;<p>If you leave out the <code>mode</code> option, a CORS request will be made, and this will succeed if the server that you call sets the <code>Access-Control-Allow-*</code> headers.</p>&#xA;",16462950,,,,2022-04-25 16:10:09,"",,0,0,0,2022-04-25 16:10:09
72024748,2,,66392757,0,,"<p>You can monitor the console, under the network tab. You will be able to see what endpoints the application is calling. If it uses cached data, there will be no new request to your endpoint logged</p>&#xA;",9790029,,,,2022-04-27 07:20:30,"",,0,0,0,2022-04-27 07:20:30
72030515,1,72031688,,0,271,"<p>i can't get <a href=""https://formidable.com/open-source/urql/docs/advanced/subscriptions/"" rel=""nofollow noreferrer"">urql subscriptions</a> to work with <code>NextJS</code> because of imports problem.</p>&#xA;<p>Basically i'm using this <code>graphql-ws</code> lib that is recommended in urql docs, that needs ws implementation library (eg: <code>'ws'</code>). And when i <code>import WebSocket from 'ws'</code> i get this error: <code>Module not found: Can't resolve 'net'</code></p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { createClient, defaultExchanges, subscriptionExchange, Client } from 'urql';&#xA;import { createClient as createWSClient } from 'graphql-ws';&#xA;import WebSocket from 'ws'; // &lt;-- This causes the error&#xA;&#xA;export const createUrqlClient = (): Client =&gt; {&#xA;  const wsClient = createWSClient({&#xA;    url: 'ws://xxx/graphql',&#xA;    webSocketImpl: WebSocket,&#xA;  });&#xA;&#xA;  const client = createClient({&#xA;    url: 'http://xxx/graphql',&#xA;    exchanges: [&#xA;      ...defaultExchanges,&#xA;      subscriptionExchange({&#xA;        forwardSubscription: operation =&gt; ({&#xA;          subscribe: sink =&gt; ({&#xA;            unsubscribe: wsClient.subscribe(operation, sink),&#xA;          }),&#xA;        }),&#xA;      }),&#xA;    ],&#xA;  });&#xA;&#xA;  return client;&#xA;};&#xA;</code></pre>&#xA;<p>I tried nextjs dynamic import and both of these didn't work as well:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const WebSocket = dynamic(() =&gt; import('ws'), { ssr: false });&#xA;const WebSocket = dynamic(() =&gt; import('ws').then(module =&gt; module.default), { ssr: false });&#xA;</code></pre>&#xA;<p>I also tried to alter webpack config in next.config.js to not bundle these libs at all:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>webpack: (config, { isServer }) =&gt; {&#xA;  if (!isServer) {&#xA;    config.resolve.fallback = {&#xA;      child_process: false,&#xA;      process: false,&#xA;      fs: false,&#xA;      util: false,&#xA;      http: false,&#xA;      https: false,&#xA;      tls: false,&#xA;      net: false,&#xA;      crypto: false,&#xA;      path: false,&#xA;      os: false,&#xA;      stream: false,&#xA;      zlib: false,&#xA;      querystring: false,&#xA;      events: false,&#xA;      'utf-8-validate': false,&#xA;      bufferutil: false,&#xA;    };&#xA;  }&#xA;  return config;&#xA;},&#xA;</code></pre>&#xA;<p>but then i get these errors:</p>&#xA;<pre><code>./node_modules/ws/lib/validation.js&#xA;Module not found: Can't resolve 'utf-8-validate' in '/home/danko/app/node_modules/ws/lib'&#xA;warn  - ./node_modules/ws/lib/buffer-util.js&#xA;Module not found: Can't resolve 'bufferutil' in '/home/danko/app/node_modules/ws/lib'&#xA;</code></pre>&#xA;<p>if i add <code>'utf-8-validate': false</code> and <code>bufferutil: false</code> to the cfg as well i get this err:</p>&#xA;<pre><code>TypeError: Class extends value undefined is not a constructor or null&#xA;</code></pre>&#xA;<p>So basically nothing works properly then as you can see...</p>&#xA;<p>How hard can this be, i can't be the only person that uses urql subscriptions with nextjs, hope somebody can help me with this. Thanks!</p>&#xA;",8618649,,8618649,2022-04-27 14:31:17,2022-04-27 15:43:00,Nextjs urql subscription exchange import problem,<reactjs><graphql><next.js><urql>,1,0,0,2022-04-27 14:25:20
72031688,2,,72030515,0,,"<p>Basically as i thought, impl was not needed because native html5 websocket can be used, problem was trash nextjs with it's server side thing.</p>&#xA;<p>I pretty much don't use that exchange when <code>typeof window !== 'undefined'</code>&#xA;this is the working code:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { createClient, dedupExchange, cacheExchange, subscriptionExchange, Client, Exchange } from 'urql';&#xA;import { multipartFetchExchange } from '@urql/exchange-multipart-fetch';&#xA;import { createClient as createWSClient } from 'graphql-ws';&#xA;&#xA;export const createUrqlClient = (): Client =&gt; {&#xA;  const graphqlEndpoint = process.env!.NEXT_PUBLIC_GRAPHQL_ENDPOINT as string;&#xA;  const graphqlWebsocketEndpoint = process.env!.NEXT_PUBLIC_GRAPHQL_WS_ENDPOINT as string;&#xA;&#xA;  let exchanges: Exchange[] | undefined = [dedupExchange, cacheExchange, multipartFetchExchange];&#xA;&#xA;  if (typeof window !== 'undefined') {&#xA;    const wsClient = createWSClient({&#xA;      url: graphqlWebsocketEndpoint,&#xA;    });&#xA;&#xA;    const subExchange = subscriptionExchange({&#xA;      forwardSubscription: operation =&gt; ({&#xA;        subscribe: sink =&gt; ({&#xA;          unsubscribe: wsClient.subscribe(operation, sink),&#xA;        }),&#xA;      }),&#xA;    });&#xA;&#xA;    exchanges.push(subExchange);&#xA;  }&#xA;&#xA;  const client = createClient({&#xA;    url: graphqlEndpoint,&#xA;    requestPolicy: 'cache-and-network',&#xA;    exchanges,&#xA;    fetchOptions: () =&gt; ({&#xA;      credentials: 'include',&#xA;    }),&#xA;  });&#xA;&#xA;  return client;&#xA;};&#xA;&#xA;</code></pre>&#xA;",8618649,,,,2022-04-27 15:43:00,"",,0,0,0,2022-04-27 15:43:00
72067685,1,,,1,71,"<p>I have a nextjs webapp with serverless functions that run behind ssl certificates, I want to treat the nextjs webapp as an interface to a hasura graphql query and subscription API that is not running with ssl.</p>&#xA;<p>I figure nextjs serverless functions would be a good way to go, I have already used it to forward requests like so: http.get('http://yoururl.com', response =&gt; response.pipe(res)).</p>&#xA;<p>However I can't work out a way to do this for post/subscriptions, there's a http.request function but that doesn't support body params and I'm even less sure about forwarding websocket connections.</p>&#xA;<p>I tried to just forward the request as a fetch but had issues with the header mismatching:</p>&#xA;<pre><code>export default async (req: NextApiRequest, res: NextApiResponse) =&gt; {    &#xA;    return fetch({&#xA;        method: 'POST',&#xA;        url: 'http://myurl.com/v1/graphql',&#xA;        headers: req.headers,&#xA;        body: req.body&#xA;    })&#xA;}&#xA;</code></pre>&#xA;",79891,,3081018,2022-04-30 17:23:10,2022-04-30 17:23:10,Forward a https/wss request to http/ws,<ssl><websocket><https><graphql><hasura>,0,0,0,2022-04-30 10:26:53
72072102,1,,,0,31,"<p>My app runs perfectly in the browser but will not open on Heroku. The build succeeds. When I check the logs tail it says &quot;code: 'MODULE_NOT_FOUND', requireStack: [: '/app/server/node_modules/readable-stream/lib/_stream_readable.js',]</p>&#xA;<p>However, in my package.json I have</p>&#xA;<pre><code>    &quot;dependencies&quot;: {&#xA;    &quot;@reduxjs/toolkit&quot;: &quot;^1.8.1&quot;,&#xA;    &quot;@stripe/stripe-js&quot;: &quot;^1.29.0&quot;,&#xA;    &quot;are-we-there-yet&quot;: &quot;^3.0.0&quot;,&#xA;    &quot;readable-stream&quot;: &quot;^3.6.0&quot;,&#xA;    &quot;streams&quot;: &quot;^0.0.7&quot;&#xA;  }&#xA;</code></pre>&#xA;<p>I have also tried removing node_modules and package-lock and reinstalling multiple times. The same application error persists on Heroku. Please help if you can!</p>&#xA;<p>My full code repo is <a href=""https://github.com/K-G-J/shop-shop-redux"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>This is the logs message&#xA;<a href=""https://i.stack.imgur.com/jTiAB.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jTiAB.jpg"" alt=""heroku logs tail"" /></a></p>&#xA;",18552948,,,,2022-04-30 20:54:55,Heroku RequireStack failing for installed module read-stream,<heroku><graphql><apollo><apollo-client><apollo-server>,0,0,0,2022-04-30 20:54:55
72086149,1,,,1,217,"<p>I try to add multiple remote schema to hasura and i got the error bellow.</p>&#xA;<p>The first schema is  : <a href=""http://host.docker.internal:3000/shop-api"" rel=""nofollow noreferrer"">http://host.docker.internal:3000/shop-api</a></p>&#xA;<p>The second schema is : <a href=""http://host.docker.internal:3000/admin-api"" rel=""nofollow noreferrer"">http://host.docker.internal:3000/admin-api</a></p>&#xA;<p>It seems that hasura found the field &quot;collections&quot; in the 2 schemas and refused to add the second schema.</p>&#xA;<p>Why hasura did not isolate each schema with its name ?</p>&#xA;<p>Please any help.</p>&#xA;<p>Thank you</p>&#xA;<pre><code>&#xA;[&#xA;    {&#xA;        &quot;definition&quot;: {&#xA;            &quot;definition&quot;: {&#xA;                &quot;timeout_seconds&quot;: 60,&#xA;                &quot;url&quot;: &quot;http://host.docker.internal:3000/admin-api&quot;,&#xA;                &quot;headers&quot;: [],&#xA;                &quot;forward_client_headers&quot;: true&#xA;            },&#xA;            &quot;remote_relationships&quot;: [],&#xA;            &quot;name&quot;: &quot;Vandure-admin&quot;,&#xA;            &quot;permissions&quot;: [],&#xA;            &quot;comment&quot;: &quot;&quot;&#xA;        },&#xA;        &quot;reason&quot;: &quot;Inconsistent object: Duplicate remote field 'collections'&quot;,&#xA;        &quot;name&quot;: &quot;remote_schema Vandure-admin&quot;,&#xA;        &quot;type&quot;: &quot;remote_schema&quot;&#xA;    }&#xA;]&#xA;</code></pre>&#xA;",6076897,,,,2022-05-02 11:40:14,Hasura remote schema Inconsistent object: Duplicate remote field 'collections',<graphql><schema><hasura>,0,0,0,2022-05-02 11:40:14
72096480,2,,72086256,0,,"<blockquote>&#xA;<p>Previously I was using <a href=""https://pub.dev/packages/graphql_flutter"" rel=""nofollow noreferrer"">graphql</a> version 3.1.0 and it was working fine, able to receive request as expected, but recently I had to update my flutter version to 2.10.3 and all other packages, including graphql.</p>&#xA;</blockquote>&#xA;<p>Welcome to the present.</p>&#xA;<p>Try to look in the migrate guide <a href=""https://github.com/zino-hofmann/graphql-flutter/blob/main/changelog-v3-v4.md"" rel=""nofollow noreferrer"">https://github.com/zino-hofmann/graphql-flutter/blob/main/changelog-v3-v4.md</a> this will solve your problem!</p>&#xA;<p>In addition, your query needs to contain <code>__typename</code> as described in the example <a href=""https://github.com/zino-hofmann/graphql-flutter/blob/main/packages/graphql/README.md#query"" rel=""nofollow noreferrer"">https://github.com/zino-hofmann/graphql-flutter/blob/main/packages/graphql/README.md#query</a></p>&#xA;",10854225,,,,2022-05-03 08:10:34,"",,0,0,0,2022-05-03 08:10:34
72122302,2,,71287018,1,,"<p>I could not make it work so I ended up using <strong>GraphQL Network Inspector</strong> Chrome extension&#xA;<a href=""https://chrome.google.com/webstore/detail/graphql-network-inspector/ndlbedplllcgconngcnfmkadhokfaaln"" rel=""nofollow noreferrer"">https://chrome.google.com/webstore/detail/graphql-network-inspector/ndlbedplllcgconngcnfmkadhokfaaln</a></p>&#xA;<p>No alternative for Firefox...</p>&#xA;",7725032,,,,2022-05-05 05:25:11,"",,0,0,0,2022-05-05 05:25:11
72123829,2,,72115080,3,,<p>Based on @Michael Ingmar Staib comment. I upgraded Hot chocolate to version 13 preview packages. Now it is working fine.</p>&#xA;,5345188,,,,2022-05-05 07:58:50,"",,0,0,0,2022-05-05 07:58:50
72126095,2,,72093454,0,,"<p>The warning can be removed by adding <code>GENERATE_SOURCEMAP=false</code> to your .env file</p>&#xA;<p>For more information =&gt; <a href=""https://github.com/facebook/create-react-app/pull/11752"" rel=""nofollow noreferrer"">https://github.com/facebook/create-react-app/pull/11752</a></p>&#xA;",15322762,,,,2022-05-05 11:00:51,"",,0,0,0,2022-05-05 11:00:51
72143321,1,,,0,240,"<p>I have a Frontend app that is built in React and it is connected to a GraphQL backend using Apollo Client.</p>&#xA;<p>Queries and Mutations are working fine in all browsers, but I have an issue with the Subscriptions. On Google Chrome and Safari are working fine, but <strong>on Firefox I get always this two errors</strong>:</p>&#xA;<p><code>Firefox can’t establish a connection to the server at wss://my-backend.net/graphql-ws</code></p>&#xA;<p><code>GET wss://my-backend.net/graphql-ws - Error 400 Bad Request</code></p>&#xA;<p>And the wsLink in the Frontend looks like follows:</p>&#xA;<pre><code>import { WebSocketLink } from '@apollo/client/link/ws';&#xA;&#xA;        const wsLink = new WebSocketLink({&#xA;            uri: process.env.REACT_APP_WEBSOCKET_URL || '',&#xA;            options: {&#xA;                reconnect: true,&#xA;                reconnectionAttempts: getReconnectAttempts(process.env.REACT_APP_WEBSOCKET_RECONNECTION_ATTEMPTS),&#xA;                connectionParams: () =&gt; ({&#xA;                    Authorization: authStore.token,&#xA;                    'Ocp-Apim-Subscription-Key': process.env.REACT_APP_SUBSCRIPTION_TOKEN as string,&#xA;                }),&#xA;            },&#xA;        });&#xA;</code></pre>&#xA;<p>Does anyone have any idea of what is happening here? Why is it working well on Chrome and not on Firefox?</p>&#xA;<p>Thank you all in advance.</p>&#xA;",13449318,,13449318,2022-05-09 15:48:44,2022-05-09 15:48:44,GraphQL Subscriptions not working on Firefox - Error 400 bad Request,<reactjs><graphql><apollo-client><react-apollo><graphql-subscriptions>,0,0,0,2022-05-06 14:42:37
72151033,2,,72148024,1,,<p>I solved this by upgrading <code>apollo-cache-inmemory</code> from <code>1.1.5</code> to <code>1.3.0</code></p>&#xA;,11062476,,,,2022-05-07 09:04:37,"",,0,0,0,2022-05-07 09:04:37
72153739,2,,70543523,-1,,"<p>After a lot of searching, I found that wildcards in the cors configuration on dgraph does not work. It must specify the full url.&#xA;After specifying http://localhost:3000 then Cors started working</p>&#xA;",3206236,,,,2022-05-07 15:08:09,"",,0,0,0,2022-05-07 15:08:09
72155721,2,,72083468,3,,"<p>Version <code>3.6</code> implements <code>useQuery</code> using <code>useSyncExternalStore</code> API from React 18. Since expo currently supports React 17 you can solve the issue by downgrading <code>@apollo/client</code> to version <code>3.5.4</code> and <code>graphql</code> to version <code>^16.3.0</code> for now. You can find more information <a href=""https://github.com/apollographql/apollo-client/releases/tag/v3.6.0"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;",13035510,,,,2022-05-07 19:15:59,"",,0,0,0,2022-05-07 19:15:59
72164930,2,,71372395,0,,<p>I got this error because I was using the incorrect Node version. My project didn't have a .nvrmc file (yet) so I was using Node 10 on a project that uses Node 14. So after switching to the correct Node version this error went away</p>&#xA;,14023142,,,,2022-05-08 20:39:05,"",,0,0,0,2022-05-08 20:39:05
72166411,1,,,0,186,"<p>So I'm starting to learn react-native and wanted to test some graphql queries within it, but I can't quite get the hang of it.</p>&#xA;<p>I'm hosting a localserver on a notebook running ubuntu 20.04 and I'm trying to do the requests via an Iphone through Expo GO. I should say I can query my graphql server directly via the iphone browser, it's just inside the app that it doesn't work.</p>&#xA;<p>I've tried a lot of things I saw on similar questions, like disabling the firewall and putting the machines local ip at the graphql client, but none worked.</p>&#xA;<p>I've set up my apollo-client with the IP like this:</p>&#xA;<p><a href=""https://i.stack.imgur.com/sPZsT.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sPZsT.png"" alt=""apollo-client setup"" /></a></p>&#xA;<p>The query I'm trying to run just returns a string and this is how I'm calling it:</p>&#xA;<p><a href=""https://i.stack.imgur.com/RLKkc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RLKkc.png"" alt=""query set up"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/COW1T.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/COW1T.png"" alt=""query call"" /></a></p>&#xA;<p>I can see the query is working through the web view for the app on the same pc the server's running, but just cant get it to render at the Expo GO thing.</p>&#xA;",14443585,,,,2022-05-09 02:23:22,How to connect IOS Expo GO to localhost on another machine,<reactjs><react-native><graphql><expo><expo-go>,0,0,0,2022-05-09 02:23:22
72171005,1,,,1,384,"<p>I want to use graphql <code>@include</code> and/or <code>@skip</code> directives for compatibility between frontend and backend.&#xA;Assume backend and frontend have a differing schema:&#xA;backend:</p>&#xA;<pre><code>type Foo {&#xA;  someOldProp: Int!&#xA;}&#xA;</code></pre>&#xA;<p>frontend:</p>&#xA;<pre><code>type Foo {&#xA;  someOldProp: Int! @deprecated(reason: &quot;Use someNewProp instead&quot;)&#xA;  someNewProp: Int!&#xA;}&#xA;</code></pre>&#xA;<p>now in frontend I define following fragment:</p>&#xA;<pre><code>fragment FooFragment on Foo {&#xA;  someOldProp @skip(if: $hasNew)&#xA;  someNewProp @include(if: $hasNew)&#xA;}&#xA;</code></pre>&#xA;<p>When passing <code>$hasNew</code> as <code>false</code> in a query, the fragment should be resolved as:</p>&#xA;<pre><code>fragment FooFragment on Foo {&#xA;  someOldProp&#xA;}&#xA;</code></pre>&#xA;<p>which would be a valid fragment to be used with the backend schema above.&#xA;However, even in this case our graphql service complains about&#xA;<code>Cannot query field 'someOldProp' on type 'Foo'</code>.</p>&#xA;<p>Reading <a href=""https://spec.graphql.org/October2021/#sec--skip"" rel=""nofollow noreferrer"">the spec</a>, it's not totally clear to me whether this is a bug in our graphql implementation (which should not attempt accessing a field when <code>@include</code>/<code>@skip</code> exclude the field),&#xA;or whether these directives are only to be used when all underlying fields are available, but when a subset of them is not needed by the client.</p>&#xA;<p>In the latter case a graphql implementation would be free to query a field at first, and only erase it before handing it to the client which would explain the error-message.</p>&#xA;<p>Does anyone have some insight?</p>&#xA;",9742406,,,,2022-05-09 11:09:20,graphql @skip @include directives cannot query field,<graphql><graphql-schema>,0,0,0,2022-05-09 11:09:20
72176728,2,,72083468,3,,"<p>Unfortunately, this is a known bug, which happened in apollo client 3.6. The last proper working version was 3.5.10. After that, useQuery and useLazyQuery stopped working (stuck on loading), but only on mobile devices/emulators. The web version still working properly.&#xA;Try to downgrade to 3.5.10.</p>&#xA;<p><a href=""https://github.com/apollographql/apollo-client/issues/9689"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client/issues/9689</a></p>&#xA;<p>EDIT: The new alpha version solves that case (3.7.0-beta.3).</p>&#xA;<p>Try : <code>npm i @apollo/client@beta</code></p>&#xA;",9973445,,9973445,2022-06-23 13:03:40,2022-06-23 13:03:40,"",,0,0,0,2022-05-09 18:34:34
72181896,1,72183139,,0,60,"<p>Why I get this error when I want to start the grahpql server?&#xA;I have no error on line 7&#xA;I want to start this server on port 3000 with json-graphql-server servergql.json.&#xA;<a href=""https://i.stack.imgur.com/SqCUn.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/SqCUn.png"" alt=""Error"" /></a></p>&#xA;<p>This is my data from servergql.json. But I have no error on line 7..why I get this error? Please help. Is a problem with node modules?</p>&#xA;<pre><code>{&#xA;    students: [&#xA;        {&#xA;            id: 1,&#xA;            name: &quot;Pop Ion&quot;&#xA;        },&#xA;        {&#xA;            id: 2,&#xA;            name: &quot;Pop Maria&quot;&#xA;        }&#xA;        ],&#xA;&#xA;    courses: [&#xA;        {&#xA;            id: 1,&#xA;            title: &quot;Web development&quot;,&#xA;            teacher: {&#xA;                id: 1,&#xA;                name: &quot;Popescu Ion&quot;,&#xA;                office: 404&#xA;            }&#xA;        },&#xA;        {&#xA;            id: 2,&#xA;            title: &quot;Java&quot;,&#xA;            teacher: {&#xA;                id: 1,&#xA;                name: &quot;Ionescu Maria&quot;,&#xA;                office: 403&#xA;            }&#xA;        },&#xA;        {&#xA;            id: 3,&#xA;            title: &quot;Databases&quot;,&#xA;            teacher: {&#xA;                id: 1,&#xA;                name: &quot;Marian Vasile&quot;,&#xA;                office: 401&#xA;            }&#xA;        }&#xA;        ],&#xA;&#xA;    grades: [&#xA;        {&#xA;            course_id: 1,&#xA;            student_id: 1,&#xA;            grade: 7&#xA;        },&#xA;        {&#xA;            course_id: 1,&#xA;            student_id: 2,&#xA;            grade: 5&#xA;        },&#xA;        {&#xA;            course_id: 2,&#xA;            student_id: 1,&#xA;            grade: 5&#xA;        },&#xA;        {&#xA;            course_id: 2,&#xA;            student_id: 2,&#xA;            grade: 5&#xA;        },&#xA;        {&#xA;            course_id: 3,&#xA;            student_id: 2,&#xA;            grade: 10&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;",16353122,,,,2022-05-10 08:38:57,Unexpected token s in JSON at position 7 at parse (<anonymous>),<json><graphql>,1,0,0,2022-05-10 06:58:19
72183139,2,,72181896,2,,"<p>The JSON you've written is malformed - for a valid JSON file your object keys must be strings and must be contained within quotes (&quot;&quot;).</p>&#xA;<p>The error you're seeing somewhat shows you what the problem is: <code>unexpected token s in JSON at position 7</code> which is highlighting that <code>students</code> is not expected in the object yet.</p>&#xA;<p>Valid JSON would be:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    &quot;students&quot;: [&#xA;        {&#xA;            &quot;id&quot;: 1,&#xA;            &quot;name&quot;: &quot;Pop Ion&quot;&#xA;        },&#xA;        {&#xA;            &quot;id&quot;: 2,&#xA;            &quot;name&quot;: &quot;Pop Maria&quot;&#xA;        }&#xA;        ],&#xA;    &quot;courses&quot;: [&#xA;        {&#xA;            &quot;id&quot;: 1,&#xA;            &quot;title&quot;: &quot;Web development&quot;,&#xA;            &quot;teacher&quot;: {&#xA;                &quot;id&quot;: 1,&#xA;                &quot;name&quot;: &quot;Popescu Ion&quot;,&#xA;                &quot;office&quot;: 404&#xA;            }&#xA;        },&#xA;        {&#xA;            &quot;id&quot;: 2,&#xA;            &quot;title&quot;: &quot;Java&quot;,&#xA;            &quot;teacher&quot;: {&#xA;                &quot;id&quot;: 1,&#xA;                &quot;name&quot;: &quot;Ionescu Maria&quot;,&#xA;                &quot;office&quot;: 403&#xA;            }&#xA;        },&#xA;        {&#xA;            &quot;id&quot;: 3,&#xA;            &quot;title&quot;: &quot;Databases&quot;,&#xA;            &quot;teacher&quot;: {&#xA;                &quot;id&quot;: 1,&#xA;                &quot;name&quot;: &quot;Marian Vasile&quot;,&#xA;                &quot;office&quot;: 401&#xA;            }&#xA;        }&#xA;        ],&#xA;&#xA;    &quot;grades&quot;: [&#xA;        {&#xA;            &quot;course_id&quot;: 1,&#xA;            &quot;student_id&quot;: 1,&#xA;            &quot;grade&quot;: 7&#xA;        },&#xA;        {&#xA;            &quot;course_id&quot;: 1,&#xA;            &quot;student_id&quot;: 2,&#xA;            &quot;grade&quot;: 5&#xA;        },&#xA;        {&#xA;            &quot;course_id&quot;: 2,&#xA;            &quot;student_id&quot;: 1,&#xA;            &quot;grade&quot;: 5&#xA;        },&#xA;        {&#xA;            &quot;course_id&quot;: 2,&#xA;            &quot;student_id&quot;: 2,&#xA;            &quot;grade&quot;: 5&#xA;        },&#xA;        {&#xA;            &quot;course_id&quot;: 3,&#xA;            &quot;student_id&quot;: 2,&#xA;            &quot;grade&quot;: 10&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>There are lots of online and development environment tools that you can use to lint your JSON to highlight any issues before you run into them in production (i.e. <a href=""https://codebeautify.org/jsonvalidator"" rel=""nofollow noreferrer"">https://codebeautify.org/jsonvalidator</a>)</p>&#xA;",13551686,,,,2022-05-10 08:38:57,"",,0,1,0,2022-05-10 08:38:57
72183262,1,,,0,20,"<p>I am using react-native with apollo.</p>&#xA;<p>The problem is that when i activates the app on physical device android, there are not any responds about any my request.</p>&#xA;<p>But, In IOS case and android simulator on debug mode, There are no problem. Very well done in request-respond.</p>&#xA;<p>This issue has not occurred so far.</p>&#xA;<p>This is what I found out while trying to test in release mode on an Android device.</p>&#xA;",14208489,,,,2022-05-10 08:49:53,apollo does not take a request sending react-native,<android><react-native><apollo>,0,0,0,2022-05-10 08:49:53
72193476,2,,70667821,1,,"<p>I had the same issue, tried closing the tab and re-opening, closing chrome and re-opening but nothing of that helped. Then I installed a totally different extension (React Developer Tools) and all of a sudden the Apollo dev tools showed up, it seems that adding a new plugin somehow refreshed the plugins and it showed.</p>&#xA;",7038009,,,,2022-05-10 22:16:45,"",,0,0,0,2022-05-10 22:16:45
72208553,2,,72083468,1,,"<p>Upgrading to the new alpha version (3.7.0-beta.3)&#xA;from @Dominik Myszkowski fixed my issue, downgrading to 3.5.4 did not.</p>&#xA;",5590106,,,,2022-05-11 23:17:14,"",,0,1,0,2022-05-11 23:17:14
72225525,1,,,0,59,"<p>I ran the command: <code>npm install expo-cli</code> and got these errors. I already upgraded  npm on ubuntu.</p>&#xA;<p>Do I need to install these tools one by one or there's something wrong with my package?</p>&#xA;<pre class=""lang-none prettyprint-override""><code>npm WARN deprecated graphql-tools@3.0.0: This package has been deprecated and now it only exports makeExecutableSchema.\nAnd it will no longer receive updates.\nWe recommend you to migrate to scoped packages such as @graphql-tools/schema, @graphql-tools/utils and etc.\nCheck out https://www.graphql-tools.com to learn what package you should use instead&#xA;npm WARN deprecated subscriptions-transport-ws@0.9.8: The `subscriptions-transport-ws` package is no longer maintained. We recommend you use `graphql-ws` instead. For help migrating Apollo software to `graphql-ws`, see https://www.apollographql.com/docs/apollo-server/data/subscriptions/#switching-from-subscriptions-transport-ws    For general help using `graphql-ws`, see https://github.com/enisdenjo/graphql-ws/blob/master/README.md&#xA;npm WARN deprecated svgo@1.3.2: This SVGO version is no longer supported. Upgrade to v2.x.x.&#xA;npm WARN deprecated source-map-resolve@0.5.3: See https://github.com/lydell/source-map-resolve#deprecated&#xA;npm WARN deprecated source-map-url@0.4.1: See https://github.com/lydell/source-map-url#deprecated&#xA;npm WARN deprecated resolve-url@0.2.1: https://github.com/lydell/resolve-url#deprecated&#xA;npm WARN deprecated urix@0.1.0: Please see https://github.com/lydell/urix#deprecated&#xA;npm WARN deprecated querystring@0.2.0: The querystring API is considered Legacy. new code should use the URLSearchParams API instead.&#xA;npm WARN deprecated chokidar@2.1.8: Chokidar 2 does not receive security updates since 2019. Upgrade to chokidar 3 with 15x fewer dependencies&#xA;npm WARN deprecated fsevents@1.2.13: fsevents 1 will break on node v14+ and could be using insecure binaries. Upgrade to fsevents 2.&#xA;npm WARN saveError ENOENT: no such file or directory, open '/home/ishi/package.json'&#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@~2.3.2 (node_modules/chokidar/node_modules/fsevents):&#xA;npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.3.2: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;linux&quot;,&quot;arch&quot;:&quot;x64&quot;})&#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.2.7 (node_modules/watchpack-chokidar2/node_modules/chokidar/node_modules/fsevents):&#xA;npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;linux&quot;,&quot;arch&quot;:&quot;x64&quot;})&#xA;npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@^1.2.7 (node_modules/webpack-dev-server/node_modules/chokidar/node_modules/fsevents):&#xA;npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.13: wanted {&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;} (current: {&quot;os&quot;:&quot;linux&quot;,&quot;arch&quot;:&quot;x64&quot;})&#xA;npm WARN enoent ENOENT: no such file or directory, open '/home/ishi/package.json'&#xA;npm WARN ishi No description&#xA;npm WARN ishi No repository field.&#xA;npm WARN ishi No README data&#xA;npm WARN ishi No license field.&#xA;&#xA;+ expo-cli@5.4.3&#xA;added 1426 packages from 674 contributors and audited 1818 packages in 94.488s&#xA;&#xA;119 packages are looking for funding&#xA;  run `npm fund` for details&#xA;&#xA;found 45 vulnerabilities (6 low, 16 moderate, 21 high, 2 critical)&#xA;  run `npm audit fix` to fix them, or `npm audit` for details&#xA;</code></pre>&#xA;",19107755,,1611459,2022-05-13 08:33:26,2022-05-13 08:33:26,NPM Installation Issues on Ubuntu: Installing Expo-Cli,<node.js><linux><npm><graphql>,0,0,0,2022-05-13 06:55:37
72239089,1,72239724,,0,842,"<p>I'm trying to integrate Vue Apollo in a a Vite project using the composition API.&#xA;My main.js file look like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { createApp } from 'vue'&#xA;import App from './App.vue'&#xA;import * as apolloProvider from '../apollo.provider'&#xA;import router from './router'&#xA;&#xA;&#xA;const app = createApp(App)&#xA;&#xA;app&#xA;.use(router)&#xA;.use(apolloProvider.provider)&#xA;.mount('#app')&#xA;</code></pre>&#xA;<p>In the vue4 setup section is written to update the main.js in this way:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { createApp, provide, h } from 'vue'&#xA;import { DefaultApolloClient } from '@vue/apollo-composable'&#xA;&#xA;const app = createApp({&#xA;  setup () {&#xA;    provide(DefaultApolloClient, apolloClient)&#xA;  },&#xA;&#xA;  render: () =&gt; h(App),&#xA;})&#xA;</code></pre>&#xA;<p>Can anyone help me to integrate this code into my main.js?&#xA;I've tryied to do that but as soon as I import <strong>DefaultApolloClient</strong>, my app goes in loop refreshing itself.&#xA;How can I solve this problem?</p>&#xA;<p>p.s.&#xA;here my packages.json content:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;name&quot;: &quot;kiddo-vite-frontend&quot;,&#xA;  &quot;private&quot;: true,&#xA;  &quot;version&quot;: &quot;0.0.0&quot;,&#xA;  &quot;scripts&quot;: {&#xA;    &quot;dev&quot;: &quot;vite&quot;,&#xA;    &quot;build&quot;: &quot;vite build&quot;,&#xA;    &quot;preview&quot;: &quot;vite preview&quot;&#xA;  },&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@vue/apollo-composable&quot;: &quot;^4.0.0-alpha.17&quot;,&#xA;    &quot;apollo-boost&quot;: &quot;^0.4.9&quot;,&#xA;    &quot;apollo-cache-inmemory&quot;: &quot;^1.6.6&quot;,&#xA;    &quot;apollo-client&quot;: &quot;^2.6.10&quot;,&#xA;    &quot;apollo-link&quot;: &quot;^1.2.14&quot;,&#xA;    &quot;apollo-link-context&quot;: &quot;^1.0.20&quot;,&#xA;    &quot;apollo-link-http&quot;: &quot;^1.5.17&quot;,&#xA;    &quot;graphql&quot;: &quot;^16.5.0&quot;,&#xA;    &quot;graphql-tag&quot;: &quot;^2.12.6&quot;,&#xA;    &quot;vue&quot;: &quot;^3.2.30&quot;,&#xA;    &quot;vue-apollo&quot;: &quot;^3.1.0&quot;,&#xA;    &quot;vue-router&quot;: &quot;^4.0.15&quot;&#xA;  },&#xA;  &quot;devDependencies&quot;: {&#xA;    &quot;@vitejs/plugin-vue&quot;: &quot;^2.3.3&quot;,&#xA;    &quot;vite&quot;: &quot;^2.9.9&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Thank you</p>&#xA;<p>Valerio</p>&#xA;",12613828,,6277151,2022-05-14 11:26:12,2022-05-14 11:26:12,how to integrate Vue Apollo in Vue Vite project?,<javascript><vue.js><vuejs3><vue-composition-api><vue-apollo>,1,0,0,2022-05-14 09:53:01
72258630,1,,,2,450,"<p>When I use Nuxt3 + Vue Apollo + GraphQL, running <code>yarn build</code> and <code>node .output/server/index.mjs</code>, getting the error:</p>&#xA;<pre><code>Cannot find module '/mnt/d/projects/.output/server/node_modules/graphql/language/printer' imported from /mnt/d/projects/.output/server/chunks/app/server.mjs&#xA;Did you mean to import graphql/language/printer.js?&#xA;  at new NodeError (node:internal/errors:371:5)&#xA;  at finalizeResolution (node:internal/modules/esm/resolve:416:11)&#xA;  at moduleResolve (node:internal/modules/esm/resolve:932:10)&#xA;  at defaultResolve (node:internal/modules/esm/resolve:1044:11)&#xA;  at ESMLoader.resolve (node:internal/modules/esm/loader:422:30)&#xA;  at ESMLoader.getModuleJob (node:internal/modules/esm/loader:222:40)&#xA;  at ModuleWrap.&lt;anonymous&gt; (node:internal/modules/esm/module_job:76:40)&#xA;  at link (node:internal/modules/esm/module_job:75:36)&#xA;</code></pre>&#xA;<p>This is my environment and configuration:</p>&#xA;<ul>&#xA;<li>Operating System: Linux version 5.4.72-microsoft-standard-WSL2</li>&#xA;<li>Node Version: v16.13.0</li>&#xA;<li>Npm Version: v8.1.0</li>&#xA;</ul>&#xA;<p>package.json:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;devDependencies&quot;: {&#xA;    &quot;@apollo/client&quot;: &quot;^3.6.2&quot;,&#xA;    &quot;@vue/apollo-composable&quot;: &quot;^4.0.0-alpha.17&quot;,&#xA;    &quot;@vue/apollo-util&quot;: &quot;^4.0.0-alpha.17&quot;,&#xA;    &quot;graphql&quot;: &quot;^15.8.0&quot;,&#xA;    &quot;graphql-tag&quot;: &quot;2.12.6&quot;,&#xA;    &quot;nuxt3&quot;: &quot;3.0.0-27470397.9ebea90&quot;,&#xA;    ...&#xA;  },&#xA;}&#xA;</code></pre>&#xA;<p>nuxt.config.ts:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { defineNuxtConfig } from 'nuxt3';&#xA;&#xA;export default defineNuxtConfig({&#xA;  build: {&#xA;    transpile: ['tslib', '@apollo/client', 'ts-invariant/process'],&#xA;  },&#xA;  ...&#xA;});&#xA;</code></pre>&#xA;<p>I don't know what the problem is, how to solve?</p>&#xA;",18689695,,8816585,2022-05-16 16:22:46,2022-09-09 11:45:34,nuxt3 cannot find module 'node_modules/graphql/language/printer' imported from /mnt/d/projects/.output/server/chunks/app/server.mjs,<graphql><nuxt.js><apollo-client><nuxtjs3>,1,1,0,2022-05-16 11:41:10
72260337,2,,72028455,1,,"<p>AWS provides a migration guide: <a href=""https://docs.amplify.aws/cli/migration/transformer-migration/"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/migration/transformer-migration/</a> but unfortunately they don't specify how to actually set your API to use the new/old version.</p>&#xA;<p>If you look in your <code>amplify</code> folder you will find a <code>cli.json</code> file, to set your backend to use version 1 of the GraphQLTransformer you simply need to edit the file and set the following two properties:</p>&#xA;<pre><code>  &quot;features&quot;: {&#xA;    &quot;graphqltransformer&quot;: {&#xA;      ...&#xA;      &quot;useexperimentalpipelinedtransformer&quot;: false,&#xA;      &quot;transformerversion&quot;: 1,&#xA;      ...&#xA;    },&#xA;</code></pre>&#xA;<p>From there you simply <code>amplify push</code> and assuming you've catered for all of the changes the migration guide describes it will update your endpoint correctly.</p>&#xA;<p>EDIT: For those looking to upgrade to V2 instead of downgrading to V1 you will need to set the properties as follows:</p>&#xA;<pre><code>  &quot;features&quot;: {&#xA;    &quot;graphqltransformer&quot;: {&#xA;      ...&#xA;      &quot;useexperimentalpipelinedtransformer&quot;: true,&#xA;      &quot;transformerversion&quot;: 2,&#xA;      ...&#xA;    },&#xA;</code></pre>&#xA;",3368558,,3368558,2022-05-17 06:05:50,2022-05-17 06:05:50,"",,0,0,0,2022-05-16 13:52:21
72277901,2,,72267585,0,,"<p>Apparently this was a known bug. In case anyone else encounters this, upgrading to the beta solved it for me:</p>&#xA;<p><a href=""https://stackoverflow.com/questions/72083468/loading-remains-true-when-loading-data-with-usequery-using-apolloclient-in"">&#39;loading&#39; remains true when loading data with &#39;useQuery&#39; using &#39;apolloClient&#39; in react-native</a></p>&#xA;",17379701,,,,2022-05-17 16:51:01,"",,0,0,0,2022-05-17 16:51:01
72285817,1,,,1,141,"<p>I am trying to set up a web socket between the Apollo server and the Nuxt client.</p>&#xA;<p><a href=""https://www.apollographql.com/docs/apollo-server/data/subscriptions"" rel=""nofollow noreferrer"">Apollo documentation</a>  recommends using <a href=""https://www.npmjs.com/package/graphql-ws"" rel=""nofollow noreferrer"">graphql-ws</a> over <a href=""https://www.npmjs.com/package/subscriptions-transport-ws"" rel=""nofollow noreferrer"">subscriptions-transport-ws</a> as the last one is deprecated.</p>&#xA;<p>I already have sever set up using <code>graphql-ws</code>, but nuxt is using <code>subscriptions-transport-ws</code> and they are not compatible.</p>&#xA;<p>Can someone provide me with an example of how to use <code>graphql-ws</code> as a plug-in in Nuxt for Graphql subscriptions?</p>&#xA;",11022645,,,,2022-05-18 08:38:07,Graphql subscriptions in Nuxt,<graphql><nuxt.js><publish-subscribe>,0,1,0,2022-05-18 08:38:07
72300631,1,,,0,357,"<p>I am upgrading my react app to version 18, its still in progress but i am facing a weird behaviour with graphql queries. I am using React Apollo to manage all the frontend store data and graphql macro to load all graphql files. Earlier also every time we make any changes in *.gql. We used to restart the server as those files are not by default watched(hot reload) in CRA config but currently even if i had made any changes, added or removed any fields from gql query/mutations. My application is still trying to load the previous queries. Even restarting the server is not helping. Sometime it works and most of the time it does not work.</p>&#xA;",7970641,,,,2022-05-19 09:10:06,React Apollo - GraphQL files are not updating/reflecting the changes,<apollo-client><react-apollo><react-18>,1,0,0,2022-05-19 07:50:04
72322137,1,,,0,544,"<p>I'm struggling to understand how to capture Next.js SSR errors (from <code>getServerSideProps</code>) in a way that allows me to meaningfully take action on the error. I have set up my Apollo client to capture errors and report them to Sentry like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const errorLink = onError(({ graphQLErrors, networkError }) =&gt; {&#xA;  if (publicRuntimeConfig.ENVIRONMENT === &quot;PRODUCTION&quot;) {&#xA;    if (graphQLErrors)&#xA;      graphQLErrors.forEach((error) =&gt; {&#xA;        Sentry.captureException(error.message);&#xA;      });&#xA;    if (networkError) {&#xA;      Sentry.captureException(networkError);&#xA;    }&#xA;  }&#xA;});&#xA;const apolloLinks = from([&#xA;  errorLink,&#xA;  createHttpLink({&#xA;    credentials: &quot;include&quot;,&#xA;    fetch: enhancedFetch,&#xA;    headers,&#xA;    uri: publicRuntimeConfig.API_ENDPOINT&#xA;  })&#xA;]);&#xA;return new ApolloClient({&#xA;  cache: new InMemoryCache().restore(initialState),&#xA;  connectToDevTools:&#xA;    isBrowser &amp;&amp; publicRuntimeConfig.ENVIRONMENT !== &quot;PRODUCTION&quot;,&#xA;  link: apolloLinks,&#xA;  ssrMode: !isBrowser&#xA;});&#xA;</code></pre>&#xA;<p>And on a Next.js page with <code>getServerSideProps</code>, I'm running a query like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const apolloClient = initializeApollo(context);&#xA;const { data } = await apolloClient.query({&#xA;  query: REFERRAL_CODE_QUERY,&#xA;  variables: {&#xA;    id: context.params.referralCode&#xA;  }&#xA;});&#xA;</code></pre>&#xA;<p>Sentry receives an error when it happens, but it's not reporting the contents of the error, only that it happened</p>&#xA;<pre><code>ServerError: Response not successful: Received status code 400&#xA;</code></pre>&#xA;<p>My <code>_error.tsx</code> page is identical to what is described in Sentry's documentation: <a href=""https://docs.sentry.io/platforms/javascript/guides/nextjs/manual-setup/#create-a-custom-_error-page"" rel=""nofollow noreferrer"">https://docs.sentry.io/platforms/javascript/guides/nextjs/manual-setup/#create-a-custom-_error-page</a></p>&#xA;<p>My question: <strong>How can I log meaningful errors to Sentry during an SSR failure so I know what happened?</strong> Right now I only know that something failed, but I don't know <em>what</em> the server says went wrong as part of the request.</p>&#xA;",2246272,,,,2022-05-20 16:34:31,Next.js SSR errors not being fully logged to Sentry from Apollo Client,<reactjs><next.js><apollo><apollo-client><sentry>,0,0,0,2022-05-20 16:34:31
72332401,1,,,-1,331,"<p>I want to create a many-to-many relationship between two objects - courses and students. I use MongoDB. When creating a new student I want to be able to add the courses. In createStudent mutation I am calling the query for getting the course which I defined in Course Resolver, but the following error occurs:</p>&#xA;<blockquote>&#xA;<p>Type 'Promise[]' is not assignable to type 'Course[]'.   Type&#xA;'Promise' is missing the following properties from type&#xA;'Course': _id, title, description, subject, and 3 more.</p>&#xA;</blockquote>&#xA;<p>When creating a new student, I want to pass the courses id as a string array. Then in the mutation method I would like to map these ids to the Course objects from the database and return an array of courses which I want to pass to the student data. How can I do this?</p>&#xA;<p>Here is the student entity:</p>&#xA;<pre><code>@ObjectType()&#xA;export class Student {&#xA;    @Field()&#xA;    readonly _id: ObjectId;&#xA;&#xA;    @Field()&#xA;    @Prop({ required: true })&#xA;    name: string;&#xA;&#xA;    @Field()&#xA;    @Prop({ required: true, unique: true })&#xA;    email: string;&#xA;&#xA;    @Field()&#xA;    @Prop({ required: true })&#xA;    password: string;&#xA;&#xA;    @Field()&#xA;    @Prop({ required: true, unique: true })&#xA;    facultyNumber: number;&#xA;&#xA;    @Field()&#xA;    @Prop({ default: Date.now() })&#xA;    lastLogin?: number;&#xA;&#xA;    @Field(type =&gt; [Course])&#xA;    @ManyToMany(() =&gt; Course, course =&gt; course._id, { cascade: true })&#xA;    @JoinTable({ name: &quot;student_courses&quot;,joinColumn: { name: &quot;student_id&quot; }, inverseJoinColumn: { name: &quot;course_id&quot; } })&#xA;    @Prop({default: []})&#xA;    courses?: Course[]&#xA;&#xA;}&#xA;&#xA;export const StudentModel = getModelForClass(Student, { schemaOptions: { timestamps: true } });&#xA;</code></pre>&#xA;<p>Courses entity:</p>&#xA;<pre><code>@ObjectType()&#xA;export class Course {&#xA;  @Field()&#xA;  readonly _id: ObjectId;&#xA;&#xA;  @Field()&#xA;  @Prop({ required: true })&#xA;  title: string;&#xA;&#xA;  @Field()&#xA;  @Prop({ required: true })&#xA;  description: string;&#xA;&#xA;  @Field()&#xA;  @Prop({ required: true })&#xA;  subject: string;&#xA;&#xA;  @Field()&#xA;  @Prop({ required: true })&#xA;  credits: number;&#xA;&#xA;  @Field()&#xA;  @Prop({ required: true })&#xA;  tutor: string;&#xA;&#xA;  @Field(() =&gt; [Student])&#xA;  @ManyToMany(() =&gt; Student, student =&gt; student._id, { cascade: true})&#xA;  students!: Student[]&#xA;}&#xA;&#xA;export const CourseModel = getModelForClass(Course);&#xA;</code></pre>&#xA;<p>The input arguments for student creation:</p>&#xA;<pre><code>@InputType({ description: &quot;New student data&quot; })&#xA;export class StudentInput {&#xA;&#xA;    @Field()&#xA;    @MaxLength(50)&#xA;    name: string;&#xA;&#xA;    @Field()&#xA;    @IsEmail()&#xA;    @MaxLength(30)&#xA;    email: string;&#xA;&#xA;    @Field()&#xA;    @MinLength(6)&#xA;    password: string;&#xA;&#xA;    @Field()&#xA;    @IsInt()&#xA;    @IsPositive()&#xA;    @Min(1000000000)&#xA;    facultyNumber: number;&#xA;&#xA;    @Field(type =&gt; [String], { nullable: true})&#xA;    coursesIDs?: string[]&#xA;}&#xA;</code></pre>&#xA;<p>Student resolver:</p>&#xA;<pre><code>@Resolver()&#xA;export class StudentResolver {&#xA;    &#xA;    @Mutation(returns =&gt; Student)&#xA;    async createStudent(@Arg(&quot;data&quot;) data: StudentInput): Promise&lt;Student&gt; {&#xA;        const a: CourseResolver = new CourseResolver();&#xA;&#xA;        const courses: Course[] = data.coursesIDs.map((id) =&gt; {&#xA;            return Promise.resolve(a.course(id));&#xA;        });&#xA;        const studentData = { ...data, password: bcryptjs.hashSync(data.password, 5) }&#xA;        const newStudent = new StudentModel(studentData);&#xA;        newStudent.courses = courses;&#xA;        await newStudent.save();&#xA;        return newStudent;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Course resolver:</p>&#xA;<pre><code>@Resolver()&#xA;export class CourseResolver {&#xA;    @Query(returns =&gt; Course)&#xA;    async course(@Arg(&quot;_id&quot;) _id: string): Promise&lt;Course&gt; {&#xA;        return await CourseModel.findById(_id);&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",14644191,,,,2022-05-21 21:13:30,Type 'Promise<Course>[]' is not assignable to type 'Course[]',<typescript><graphql><mutation><typegraphql>,1,3,0,2022-05-21 18:52:22
72340043,1,,,0,34,"<p>Has anyone successfully implemented GraphQL.NET v5 in .NET 6 and been able to register in Program.cs as there is no Startup.cs?  There are breaking changes from V4.</p>&#xA;<p><a href=""https://i.stack.imgur.com/tkoh0.png"" rel=""nofollow noreferrer"">This is the message I get after upgrade to v5</a>&#xA;regards,&#xA;Olafur</p>&#xA;",6593881,,6593881,2022-05-22 18:03:06,2022-05-22 18:03:06,GraphQL.Net v5 and .Net 6 Installation,<.net-6.0><graphql.net>,0,0,0,2022-05-22 17:55:14
72362463,2,,72361248,0,,"<p>I end up using fetch to do a post request</p>&#xA;<p>working code here</p>&#xA;<pre><code>shortlink() {&#xA;  const requestOptions = {&#xA;    method: 'POST',&#xA;    headers: { 'Content-Type': 'application/json' },&#xA;    body: JSON.stringify({ &#xA;      dynamicLinkInfo: {&#xA;        domainUriPrefix: &quot;https://website.page.link&quot;,&#xA;        link: &quot;https://website.com?someid=1,&#xA;        androidInfo: {&#xA;          androidPackageName: &quot;package_name&quot;&#xA;        },&#xA;        iosInfo: {&#xA;          iosBundleId: &quot;bundle_name&quot;&#xA;        }&#xA;      }&#xA;    })&#xA;  };&#xA;  fetch(import.meta.env.VITE_FIREBASE_BASE_URL, requestOptions)&#xA;    .then(async response =&gt; {&#xA;      const data = await response.json();&#xA;&#xA;      if (!response.ok) {&#xA;        const error = (data &amp;&amp; data.message) || response.status;&#xA;        return Promise.reject(error);&#xA;      }&#xA;&#xA;      this.shortLink = data.shortLink;&#xA;    })&#xA;    .catch(error =&gt; {&#xA;      this.errorMessage = error;&#xA;      console.error('There was an error!', error);&#xA;    });&#xA;}&#xA;</code></pre>&#xA;",2274697,,,,2022-05-24 11:54:45,"",,0,0,0,2022-05-24 11:54:45
72366885,2,,60565372,0,,"<p>for me I disabled the mysql-inline-decorator extension and it worked, so if you have it installed remove or disable it!</p>&#xA;",15036525,,,,2022-05-24 17:11:01,"",,0,0,0,2022-05-24 17:11:01
72367117,1,,,1,246,"<p>I had a GraphQL server that I swear worked just a few weeks ago, but now, it's suddenly throwing &quot;cannot null non-nullable field&quot; errors.</p>&#xA;<p>Yes, I have checked for duplicates. Yes, I have googled it. Yes, I have checked for related GitHub issues.</p>&#xA;<p>I created a minimal repro here: <a href=""https://stackblitz.com/edit/graphql-drkgtc?file=index.js"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/graphql-drkgtc?file=index.js</a>. Either I'm tired, or there's some breaking change in a minor package version somewhere that I missed.</p>&#xA;<p>Does anyone have an idea what is going on here?</p>&#xA;",8006046,,8006046,2022-05-24 18:56:02,2022-05-27 15:49:03,"Why does this throw ""Cannot return null for non-nullable field Query.hello.""?",<javascript><server><graphql><backend><graphql-js>,1,0,0,2022-05-24 17:31:16
72407126,1,72424345,,0,68,"<p>I have two GraphQL files: <code>mutations.js</code> and <code>queries.js</code> under a <code>gql</code> folder...</p>&#xA;<p>This folder contains GraphQL mutations and queries used across the app.</p>&#xA;<pre><code> gql&#xA;   mutations.js&#xA;   queries.js&#xA;</code></pre>&#xA;<p>I set up the GraphQL endpoint, but i keep getting this error:</p>&#xA;<blockquote>&#xA;<p>Uncaught (in promise) Error: GraphQL error: field &quot;users&quot; not found in type: 'query_root'</p>&#xA;</blockquote>&#xA;<p>NB: None of the GraphQL queries or mutation contain errors</p>&#xA;",18372785,,584676,2022-05-29 19:02:45,2022-05-29 19:02:45,having problem with graphql and magic api . how to apply mutations and queries on a server to create a schema,<vue.js><graphql><hasura><hasura-jwt><magic-sdk>,1,0,0,2022-05-27 14:42:10
72426802,2,,72338020,1,,<p>Your version of <code>graphql-java-tools</code> (5.2.4) seems very old and not compatible with <code>graphql-java:18.1</code> version.</p>&#xA;<p>So you need to upgrade your <code>graphql-java-tools</code> to the version which is compatible with <code>graphql-java:18.1</code> in your classpath.</p>&#xA;,668148,,,,2022-05-29 19:47:34,"",,0,0,0,2022-05-29 19:47:34
72438478,2,,53161551,0,,<p>Loos like your server does not have CORS configured correctly</p>&#xA;,13229340,,,,2022-05-30 18:11:18,"",,0,1,0,2022-05-30 18:11:18
72454277,2,,72447663,3,,"<p>It appears that there are breaking changes in the latest patch version of <code>@apollo/subgraph@2.0.3</code>.  You may need to downgrade to <code>2.0.2</code>:</p>&#xA;<pre><code>npm install @apollo/subgraph@2.0.2&#xA;</code></pre>&#xA;<p>Also recommend you pin this version, e.g. make sure the version is explicit, and not <code>@apollo/subgraph@^2.0.0</code></p>&#xA;",16872831,,,,2022-05-31 21:24:40,"",,0,1,0,2022-05-31 21:24:40
72454943,2,,66392757,0,,"<p>If you are trying to verify this locally, one good option is to setup a local proxy so that you can see all the network calls being made. (no network call meaning the call was read from cache) Then you can simply configure your app using this <a href=""https://www.apollographql.com/docs/apollo-server/proxy-configuration/"" rel=""nofollow noreferrer"">apollo documentation</a> to forward all outgoing calls through a proxy like <a href=""https://mitmproxy.org/"" rel=""nofollow noreferrer"">mitmproxy</a>.</p>&#xA;",5932164,,,,2022-05-31 23:10:36,"",,0,0,0,2022-05-31 23:10:36
72456988,1,,,0,152,"<p>I am not able to send or receive http messages between my localhost server and my flutter app using the android emulator. Don't think that this has anything to do with it - but I am using graphql for the messages. For the record: it must be an emulator problem as the webapp (which is also running on localhost) works. So generally it works well.</p>&#xA;<p>I tried the following:</p>&#xA;<ul>&#xA;<li>using <code>'http://10.0.2.2:3000/appdata/apiv2'</code></li>&#xA;<li>using <code>'http://localhost:3000/appdata/apiv2'</code> with <code>adb reverse tcp:3000 tcp:3000</code></li>&#xA;<li>Putting Firewall off</li>&#xA;<li>Trying older and newer android versions</li>&#xA;<li>Desperately playing around with the Extended Controls -&gt; Settings -&gt; Proxy using android studio http proxy settings, or don't use proxy and also manual proxy configuration (maybe i did not find the right proxy configuration here, but actually I don't think that proxy configurations can help me - maybe I am wrong)</li>&#xA;</ul>&#xA;<p>I am desperated and need your help :) what else can I do? All the other stackoverflow questions with that question are just happy using the <code>10.0.2.2</code> IP address.</p>&#xA;",3255080,,,,2022-06-01 05:51:34,Android emulator cannot send or receive http messages between localhost server and flutter app,<android><flutter><http><graphql><android-emulator>,0,8,0,2022-06-01 05:51:34
72468595,1,,,0,81,<p>I've setup a Dgraph using the docker version. I'm currently able to manipulate the schema and query the graph using Ratel (dgraphs' official tooling); but I want to be able to connect to my graph using Apollo Studio. I tried http://localhost:8080 and http://localhost:8080/graphql in the apollo studio but it can't connect. It was said somewhere in their forum that I need to setup apollo server in front of the dgraph to be able to use apollo studio. Can someone guide me on the steps needed to do so?</p>&#xA;,15826454,,,,2022-08-23 00:08:23,How to use Apollo Studio to explore Dgraph,<dgraph><apollo-studio>,1,1,0,2022-06-01 22:12:28
72483461,2,,68855003,0,,<p>I've tried on a windows PC instead of mac with following versions&#xA;apollo/2.34.0 win32-x64 node-v10.15.3</p>&#xA;<p>That worked for me</p>&#xA;,8327096,,,,2022-06-03 00:05:29,"",,0,1,0,2022-06-03 00:05:29
72496018,1,,,0,19,"<p>I'm new to graphql and I'm looking to build a query for an existing API (<a href=""https://thegraph.com/hosted-service/subgraph/aavegotchi/aavegotchi-core-matic"" rel=""nofollow noreferrer"">link</a>). This Schema has the entity <code>ClaimedToken</code> that has a field called <code>lending</code> which is of type <code>GotchiLending</code> (another object). What I am trying to do, is simply to list all <code>ClaimedTokens</code> based on the <code>borrower</code> of <code>GotchiLending</code> (<code>claimedToken.lending.borrower === &quot;0x081b0ebac365be1d64febdcc66bdb4f14c37813b&quot;</code>).</p>&#xA;<p>Here is what I have tried:</p>&#xA;<ul>&#xA;<li>Put borrower on lending field</li>&#xA;</ul>&#xA;<pre><code>{&#xA;  claimedTokens {&#xA;    lending(borrower: &quot;0x081b0ebac365be1d64febdcc66bdb4f14c37813b&quot;) {&#xA;      borrower&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<ul>&#xA;<li>Put borrower on claimedTokens</li>&#xA;</ul>&#xA;<pre><code>{&#xA;  claimedTokens(borrower: &quot;0x081b0ebac365be1d64febdcc66bdb4f14c37813b&quot;) {&#xA;    lending {&#xA;      borrower&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<ul>&#xA;<li>Using where</li>&#xA;</ul>&#xA;<pre><code>{&#xA;  claimedTokens {&#xA;    lending(where: { borrower: &quot;0x081b0ebac365be1d64febdcc66bdb4f14c37813b&quot; }) {&#xA;      borrower&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<ul>&#xA;<li>Using find</li>&#xA;</ul>&#xA;<pre><code>{&#xA;  claimedTokens {&#xA;    lending(find: { borrower: &quot;0x081b0ebac365be1d64febdcc66bdb4f14c37813b&quot; }) {&#xA;      borrower&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Surprisingly, all my queries were ignored and no errors or warnings were raised. Again, I'm a beginner in graphql so I might be missing something obvious.</p>&#xA;<p>Thanks in advance,&#xA;Ernani</p>&#xA;",3708726,,,,2022-06-03 23:25:44,GraphQL Seach Items By Attribute,<graphql>,0,0,0,2022-06-03 23:25:44
72523213,1,,,0,29,<p>What I am frequently running into is after ending a react or express app &amp; if I restart it I am getting the message <code>EADDRINUSE: address already in use ::Port#</code>. So then we can list the processes on that port by <code>lsof -i :3000</code> then <code>kill -9 1111</code> and then the port is free &amp; the app can start again.</p>&#xA;<p>What I am wondering if there is a node package or some way to avoid having to go though those steps and when the app is stopped the processes/port are free and I don't have to find the processes &amp; kill them?</p>&#xA;,17877,,,,2022-06-06 20:36:42,In a node app is there a way to avoid having to list the processes on a port then kill them when address is already in use?,<node.js><reactjs><express><apollo><apollo-server>,0,4,0,2022-06-06 20:36:42
72525199,2,,51368634,0,,"<p>This is presumably because, when this question was asked, React Native did not support <code>fetch</code>, if I'm not mistaken - and when debugging at that time you had to beware of some oddities, such as the debugger having access to objects/methods which were not available in the actual React Native runtime.</p>&#xA;<p>When the debugger was connected, the code is executed in the debugger rather than on the actual device, creating this effect.</p>&#xA;<p>You can see here that <a href=""https://www.npmjs.com/package/react-native-fetch-polyfill"" rel=""nofollow noreferrer""><code>fetch</code></a> requires a polyfill in versions from 2018.</p>&#xA;<p>We had to deal with other frustrations in this vein, like the authentication for our app needing to be re-authenticated when first connecting the debugger.</p>&#xA;",6025788,,,,2022-06-07 02:05:59,"",,0,0,0,2022-06-07 02:05:59
72534090,2,,35811116,1,,"<p>I've found that the easiest way to do this is by using the <a href=""https://www.npmjs.com/package/@apollo/client"" rel=""nofollow noreferrer"">Apollo Client</a> library <code>@apollo/client</code>. You should note however that this library unfortunately makes the assumption that you're using React, and there's no vanilla JS client, but you can still import the classes you need from <code>core</code> and avoid any React dependencies.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import {&#xA;    ApolloClient,&#xA;    InMemoryCache,&#xA;    HttpLink&#xA;} from &quot;@apollo/client/core&quot;&#xA;// Use cross-fetch for Node versions lower than 18.&#xA;import fetch from 'cross-fetch'&#xA;&#xA;const client = new ApolloClient({&#xA;    link: new HttpLink({ uri, fetch }),&#xA;    cache: new InMemoryCache(),&#xA;    name: &quot;my client&quot;,&#xA;    version: &quot;1.0.0&quot;,&#xA;    assumeImmutableResults: true&#xA;})&#xA;&#xA;const query = gql`&#xA;    query Query {&#xA;        hello&#xA;    }&#xA;`&#xA;const response = await client.query({ query })&#xA;</code></pre>&#xA;<p>Also note that there used to be a bug with old versions of <code>@apollo/client/core</code> having an unnecessary React dependency, I'm using <code>&quot;@apollo/client&quot;: &quot;^3.6.5&quot;</code> and don't have that issue.</p>&#xA;",4124574,,,,2022-06-07 15:41:34,"",,0,0,0,2022-06-07 15:41:34
72539058,1,,,1,248,"<p>I am new to Sequelize and I am stuck at this error which I am not able to replicate in my local. The local works just perfect with the same db credentials but is giving a code <code>PROTOCOL_CONNECTION_LOST</code> when its deployed.&#xA;Here's the connection string:</p>&#xA;<pre><code>  CONFIG.DB,&#xA;  CONFIG.DB_USER,&#xA;  CONFIG.DB_PASSWORD,&#xA;  {&#xA;    host: CONFIG.DB_HOST,&#xA;    port: CONFIG.DB_PORT,&#xA;    dialect: CONFIG.DB_DIALECT,&#xA;    define: {&#xA;      freezeTableName: true,&#xA;    },&#xA;    pool: {&#xA;      max: 5,&#xA;      min: 0,&#xA;      acquire: 30000,&#xA;      idle: 10000,&#xA;    },&#xA;    operatorsAliases: 0,&#xA;  }&#xA;);&#xA;</code></pre>&#xA;<p>Here is the error that I am getting:</p>&#xA;<pre><code>    {&#xA;      &quot;message&quot;: &quot;Connection lost: The server closed the connection.&quot;,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 2,&#xA;          &quot;column&quot;: 3&#xA;        }&#xA;      ],&#xA;      &quot;path&quot;: [&#xA;        &quot;filtered_employee_records&quot;&#xA;      ],&#xA;      &quot;extensions&quot;: {&#xA;        &quot;code&quot;: &quot;INTERNAL_SERVER_ERROR&quot;,&#xA;        &quot;exception&quot;: {&#xA;          &quot;name&quot;: &quot;SequelizeConnectionError&quot;,&#xA;          &quot;parent&quot;: {&#xA;            &quot;fatal&quot;: true,&#xA;            &quot;code&quot;: &quot;PROTOCOL_CONNECTION_LOST&quot;&#xA;          },&#xA;          &quot;original&quot;: {&#xA;            &quot;fatal&quot;: true,&#xA;            &quot;code&quot;: &quot;PROTOCOL_CONNECTION_LOST&quot;&#xA;          },&#xA;          &quot;stacktrace&quot;: [&#xA;            &quot;SequelizeConnectionError: Connection lost: The server closed the connection.&quot;,&#xA;            &quot;    at ConnectionManager.connect (/home/app/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:102:17)&quot;,&#xA;            &quot;    at async ConnectionManager._connect (/home/app/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:220:24)&quot;,&#xA;            &quot;    at async /home/app/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:174:32&quot;,&#xA;            &quot;    at async ConnectionManager.getConnection (/home/app/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:197:7)&quot;,&#xA;            &quot;    at async /home/app/node_modules/sequelize/lib/sequelize.js:301:26&quot;,&#xA;            &quot;    at async MySQLQueryInterface.select (/home/app/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)&quot;,&#xA;            &quot;    at async Function.findAll (/home/app/node_modules/sequelize/lib/model.js:1134:21)&quot;&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  ],&#xA;</code></pre>&#xA;<p>Any idea on why it could be happening and how to tackle this? TYIA</p>&#xA;",16573639,,,,2022-06-08 01:21:56,SequelizeConnectionError PROTOCOL_CONNECTION_LOST,<node.js><sequelize.js><apollo-server>,0,0,0,2022-06-08 01:21:56
72588644,1,,,1,576,"<p>I'm seeing the mentioned error, with stack trace below</p>&#xA;<p>Error: Cannot find module 'src/auth/guards/jwt-auth.guard'&#xA;Require stack:</p>&#xA;<pre><code>~/Documents/Code/nestjs-passport-learning/dist/src/user/user.service.js&#xA;~/Documents/Code/nestjs-passport-learning/dist/src/user/user.module.js&#xA;~/Documents/Code/nestjs-passport-learning/dist/src/app.module.js&#xA;~/Documents/Code/nestjs-passport-learning/dist/src/main.js&#xA;at Function.Module._resolveFilename (node:internal/modules/cjs/loader:939:15)&#xA;</code></pre>&#xA;<p>This error makes no sense, though, as the user module/service is not looking for that auth file at all. It was at one time, but I removed it while trying to debug the error. It seems like something internal to node itself is bugged and still looking at an outdated version of the code.</p>&#xA;<p>What happened:</p>&#xA;<ol>&#xA;<li>Code was working/running perfectly</li>&#xA;<li>I decided to add &quot;UseGuards(JwtAuthGuard)&quot; to one of my user.service methods</li>&#xA;<li>At the same time I decided to setup debugging, so I added a launch.json file</li>&#xA;<li>Tried running the code. It built, but had a ton of &quot;can't find bla bla&quot; errors at runtime.</li>&#xA;<li>I stopped the app and figured the error was do to me not exporting the class in auth.module and not importing the AuthModule in UserModule(which was true).</li>&#xA;<li>I fixed that error, and restarted</li>&#xA;<li>Now getting the error message above</li>&#xA;<li>I removed the &quot;UseGuards(JwtAuthGuard)&quot; and all imports to it and AuthModule import in UserModule, as well as the launch.json file(ie revert back to exactly the code that was running perfectly 10 minutes earlier)</li>&#xA;<li>Still getting the same error(despite there being nothing in the user module that looks for it.</li>&#xA;</ol>&#xA;<p>Why is user.service.ts still looking for that jwt-auth.guard.ts file?</p>&#xA;<p>Other things I've tried:</p>&#xA;<ul>&#xA;<li>removing the &quot;jwt-auth-guard.ts&quot; file itself</li>&#xA;<li>checking out an earlier version of the code where &quot;jwt-auth-guard.ts&quot; hadn't even been written yet</li>&#xA;<li>restarting my machine</li>&#xA;</ul>&#xA;<p>Nothing worked, no matter what, I get that same error, despite the code not being any different the code that worked.</p>&#xA;<p><a href=""https://github.com/richard12511/nestjs-passport-learning"" rel=""nofollow noreferrer"">link to github repo</a></p>&#xA;<p>Any help would be greatly appreciated, as I have no idea what's going on, and no idea what to google to even try to fix this problem.</p>&#xA;",2483528,,,,2022-07-31 04:38:19,"Error: Cannot find module ""src/auth/guards/jwt-auth.guard.ts"" despite nothing even looking for it",<node.js><typescript><graphql><nestjs><passport.js>,1,5,0,2022-06-12 00:00:01
72591614,1,,,0,918,"<p>I am working on a nodejs and graphql project. I was using nodejs 12 for a few years. But now when I updated to nodejs 16, I am getting these warnings, but the project works as before. Below warings are generated for every graphql types.</p>&#xA;<pre><code>(node:21588) Warning: Accessing non-existent property 'UpdateCourseResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'UpdateCourseResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'UpdateCourseResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'UpdateCourseResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'GetCoursesResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'GetCoursesResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'GetCoursesResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'GetCoursesResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'GetCoursesResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'GetCourseResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'GetCourseResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'GetCourseResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'GetCourseResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'DeleCourseResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'DeleCourseResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'DeleCourseResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'DeleCourseResponse' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'GuidesKeyValue' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'GuidesKeyValue' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'EvalGuides' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'EvalGuides' of module exports inside circular dependency&#xA;(node:21588) Warning: Accessing non-existent property 'Fee' of module exports inside circular dependency   &#xA;(node:21588) Warning: Accessing non-existent property 'Fee' of module exports inside circular dependency   &#xA;(node:21588) Warning: Accessing non-existent property 'Lesson' of module exports inside circular dependency(node:21588) Warning: Accessing non-existent property 'Lesson' of module exports inside circular dependency(node:21588) Warning: Accessing non-existent property 'Partner' of module exports inside circular dependency&#xA;</code></pre>&#xA;<p>When I run  <code>--trace-warnings</code> I got the source of the warning, it is coming from <code>makeExecutableSchema</code> of the <code>@graphql-tools</code>. What is going on here actually and how to resolve this warning?</p>&#xA;<pre><code>Warning: Accessing non-existent property 'ApplyVoucherResponse' of module exports inside circular dependency&#xA;    at emitCircularRequireWarning (node:internal/modules/cjs/loader:707:11)&#xA;    at Object.get (node:internal/modules/cjs/loader:721:5)&#xA;    at MapperKind.COMPOSITE_FIELD (E:\ProjectFolder\Office\OCA\OCA_COURSE\oca_course_server_up\node_modules\@graphql-tools\schema\index.js:397:44)&#xA;    at mapFields (E:\ProjectFolder\Office\OCA\OCA_COURSE\oca_course_server_up\node_modules\@graphql-tools\utils\index.js:2577:37)&#xA;    at Object.mapSchema (E:\ProjectFolder\Office\OCA\OCA_COURSE\oca_course_server_up\node_modules\@graphql-tools\utils\index.js:2444:37)&#xA;    at createNewSchemaWithResolvers (E:\ProjectFolder\Office\OCA\OCA_COURSE\oca_course_server_up\node_modules\@graphql-tools\schema\index.js:302:20)&#xA;    at addResolversToSchema (E:\ProjectFolder\Office\OCA\OCA_COURSE\oca_course_server_up\node_modules\@graphql-tools\schema\index.js:192:11)&#xA;    at makeExecutableSchema (E:\ProjectFolder\Office\OCA\OCA_COURSE\oca_course_server_up\node_modules\@graphql-tools\schema\index.js:501:14)&#xA;    at Object.&lt;anonymous&gt; (E:\ProjectFolder\Office\OCA\OCA_COURSE\oca_course_server_up\graphql\index.js:7:16)&#xA;    at Module._compile (node:internal/modules/cjs/loader:1105:14)&#xA;    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)&#xA;    at Module.load (node:internal/modules/cjs/loader:981:32)&#xA;    at Function.Module._load (node:internal/modules/cjs/loader:822:12)&#xA;    at Module.require (node:internal/modules/cjs/loader:1005:19)&#xA;    at require (node:internal/modules/cjs/helpers:102:18)&#xA;    at Object.&lt;anonymous&gt;&#xA;</code></pre>&#xA;<p>This is how I merged all the types</p>&#xA;<pre><code>const path = require('path');&#xA;const { loadFilesSync } = require('@graphql-tools/load-files');&#xA;const { mergeTypeDefs } = require('@graphql-tools/merge');&#xA;const typesArray = loadFilesSync(path.join(__dirname, '.'), { extensions: ['gql'], ignoreIndex: true });&#xA;const typeDefs = mergeTypeDefs(typesArray);&#xA;module.exports =  typeDefs ;&#xA;</code></pre>&#xA;<p>This is how I merged all the resolvers</p>&#xA;<pre><code>const path = require('path');&#xA;const { loadFilesSync } = require('@graphql-tools/load-files');&#xA;const { mergeResolvers  } = require('@graphql-tools/merge');&#xA;const resolversArray = loadFilesSync(path.join(__dirname, '.'), { extensions: ['js'] });&#xA;const resolvers = mergeResolvers(resolversArray);&#xA;module.exports =  resolvers ;&#xA;</code></pre>&#xA;<p>I am using  <code>@graphql-tools</code> to merge all my types and resolver like below:</p>&#xA;<pre><code>const { makeExecutableSchema } = require('@graphql-tools/schema');&#xA;const  typeDefs  = require(&quot;./types/index&quot;);&#xA;const resolvers  = require(&quot;./resolvers/index&quot;);&#xA;// const { UpperCaseDirective, AuthDirective } = require('./directives');&#xA;&#xA;const schema = makeExecutableSchema({&#xA;    typeDefs,&#xA;    resolvers&#xA;});&#xA;&#xA;module.exports =  schema ;&#xA;</code></pre>&#xA;",5973003,,5973003,2022-06-12 11:11:17,2022-06-12 11:11:17,Accessing non-existent property of module exports inside circular dependency @graphql-tools makeExecutableSchema,<node.js><express><graphql><apollo-server><graphql-tools>,0,0,0,2022-06-12 11:05:39
72595717,1,,,1,437,"<p><strong>Hi, I' m tring to deploy this subgraph to a local graph node that is connected to a local ethereum node on the goerli network.</strong></p>&#xA;<p>The <strong>OS</strong> is xubuntu v21.10 .</p>&#xA;<p>The <strong>node</strong> is hyperledger besu v22.1.2.</p>&#xA;<p>The <strong>graph-node</strong> version is 0.26.0 and run with docker-compose .</p>&#xA;<p><strong>In the subgraph.yaml i have removed this:</strong></p>&#xA;<p>graft:</p>&#xA;<pre><code>  base: &#xA;&#xA;  block: &#xA;</code></pre>&#xA;<p>Because i haven't this subgraph deployed local, i changed the network to goerli and the start block to '7011478'.&#xA;For the deploy I use these commands:&#xA;<strong>yarn</strong></p>&#xA;<p><strong>yarn codegen</strong></p>&#xA;<p><strong>yarn create-local</strong></p>&#xA;<p><strong>yarn deploy-local</strong></p>&#xA;<p>After deployment and after some blocks have been indexed I get this <strong>error</strong>:</p>&#xA;<p>ERRO Handler skipped due to execution failure, error: Mapping aborted at ~<strong>lib/@graphprotocol/graph-ts/index.ts, line 811, column 4</strong>, with message: <strong>Value is not a BigInt</strong>. wasm backtrace:        0: 0x25f8 - !<strong>src/types/schema/Token#get:decimals</strong>       1: 0x2611 - !~<strong>lib/@graphprotocol/graph-ts/index/BigDecimal#constructor</strong>     2: 0x29e3 - !src/mappings/&#xA;position-manager/<strong>handleDecreaseLiquidity</strong>    , handler: handleIncreaseLiquidity, block_hash: 0x41ea414f5ef6ef940b2b0557d0f403f8b2c1c32c22616dd4d45e0cf3a81dc8d0, block_number: 7011552, sgd: 1, subgraph_id:&#xA;QmNwsfk3kJi8zzmBDVEiCGqioRnpyZM1iSTPPVYVNyDsop, component: SubgraphInstanceManager</p>&#xA;<p><strong>With which version of graph-node was this subgraph deployed?</strong></p>&#xA;<p><strong>Does anyone have any idea what it could be?</strong></p>&#xA;",19325916,,,,2022-06-12 20:38:27,"Deploy uniswap v3 subgraph to local graph-node error: indexing handleIncreaseLiquidity Token#get:decimals with message: ""Value is not a BigInt""",<node.js><graphql><ethereum><hyperledger><uniswap>,0,2,0,2022-06-12 20:38:27
72604725,1,,,0,50,"<p>I need to toggle introspection in apollo-graphql nodejs server. It means that user has to have ability to turn on and turn off introspection when he wants it.&#xA;I found two ways to do it:</p>&#xA;<ol>&#xA;<li>During graphql instance creation <a href=""https://www.apollographql.com/blog/graphql/security/why-you-should-disable-graphql-introspection-in-production/#:%7E:text=You%20can%20turn%20off%20introspection,on%20your%20Apollo%20Server%20instance."" rel=""nofollow noreferrer"">link</a></li>&#xA;<li>Or via middleware which filter out all &quot;__schema&quot;  and &quot;__types&quot; requests - <a href=""https://www.npmjs.com/package/graphql-disable-introspection"" rel=""nofollow noreferrer"">link</a></li>&#xA;</ol>&#xA;<p>Is there anything else? I don't want to restart server after each toggle or use dirty tricks as middleware.</p>&#xA;",18668497,,,,2022-06-13 15:40:13,How to toggle introspection in graphql (nodejs)?,<node.js><graphql><apollo-server>,1,0,0,2022-06-13 14:41:33
72612853,1,72615419,,1,412,"<p>I started working with the Prefect Orchestration tool.&#xA;My goal is to set up a server managing my automation on different other PCs and servers.&#xA;I do not fully understand the architecture of Prefect yet (with all these Agents etc.) but I managed to start a server on a remote Ubuntu environment.&#xA;To access the UI remotely I created a config.toml and added following lines:</p>&#xA;<pre><code>[server]&#xA;endpoint = &quot;&lt;IPofserver&gt;:4200/graphql&quot;&#xA;    [server.ui]&#xA;        apollo_url = &quot;http://&lt;IPofserver&gt;:4200/graphql&quot;&#xA;[telemetry]&#xA;    [server.telemetry]&#xA;        enabled = false&#xA;</code></pre>&#xA;<p>The telemetry part is just to disable sending analysis data to Prefect.&#xA;Afterswards it was possible to accesss the UI from another PC and also to start an Agent on another PC with:</p>&#xA;<pre><code>prefect agent local start --api &quot;http://&lt;IPofserver&gt;:4200/graphql&quot;&#xA;</code></pre>&#xA;<p>But how can I deploy flows now? A do not find an option to set their api like for the agent.&#xA;Even if I try to register a flow on the machine where the server itself is runnig I get following error message:</p>&#xA;<blockquote>&#xA;<p>Traceback (most recent call last):   File &quot;&quot;, line 1, in&#xA;   File&#xA;&quot;/usr/local/lib/python3.10/dist-packages/prefect/core/flow.py&quot;, line&#xA;1726, in register&#xA;registered_flow = client.register(   File &quot;/usr/local/lib/python3.10/dist-packages/prefect/client/client.py&quot;,&#xA;line 831, in register&#xA;project = self.graphql(query_project).data.project  # type: ignore   File&#xA;&quot;/usr/local/lib/python3.10/dist-packages/prefect/client/client.py&quot;,&#xA;line 443, in graphql&#xA;result = self.post(   File &quot;/usr/local/lib/python3.10/dist-packages/prefect/client/client.py&quot;,&#xA;line 398, in post&#xA;response = self._request(   File &quot;/usr/local/lib/python3.10/dist-packages/prefect/client/client.py&quot;,&#xA;line 633, in _request&#xA;response = self._send_request(   File &quot;/usr/local/lib/python3.10/dist-packages/prefect/client/client.py&quot;,&#xA;line 497, in _send_request&#xA;response = session.post(   File &quot;/usr/local/lib/python3.10/dist-packages/requests/sessions.py&quot;, line&#xA;635, in post&#xA;return self.request(&quot;POST&quot;, url, data=data, json=json, **kwargs)   File &quot;/usr/local/lib/python3.10/dist-packages/requests/sessions.py&quot;,&#xA;line 587, in request&#xA;resp = self.send(prep, **send_kwargs)   File &quot;/usr/local/lib/python3.10/dist-packages/requests/sessions.py&quot;, line&#xA;695, in send&#xA;adapter = self.get_adapter(url=request.url)   File &quot;/usr/local/lib/python3.10/dist-packages/requests/sessions.py&quot;, line&#xA;792, in get_adapter&#xA;raise InvalidSchema(f&quot;No connection adapters were found for {url!r}&quot;) requests.exceptions.InvalidSchema: No connection adapters&#xA;were found for ':4200/graphql'</p>&#xA;</blockquote>&#xA;<p>Used Example Code:</p>&#xA;<pre><code>import prefect&#xA;from prefect import task, Flow&#xA;&#xA;@task&#xA;def say_hello():&#xA;    logger = prefect.context.get(&quot;logger&quot;)&#xA;    logger.info(&quot;Hello, Cloud!&quot;)&#xA;&#xA;with Flow(&quot;hello-flow&quot;) as flow:&#xA;    say_hello()&#xA;&#xA;# Register the flow under the &quot;tutorial&quot; project&#xA;flow.register(project_name=&quot;Test&quot;)&#xA;</code></pre>&#xA;",19335187,,,,2022-06-14 10:32:07,How to deploy flow remotly on Prefect server?,<python><server><graphql><orchestration><prefect>,1,0,0,2022-06-14 07:11:37
72627520,2,,72624087,0,,"<p>It looks like a limitation or bug of the GraphQL HTTP Request sampler, you might want to raise it via <a href=""https://jmeter.apache.org/issues.html"" rel=""nofollow noreferrer"">JMeter Bugzilla</a></p>&#xA;<p>In the meantime you can consider manually changing <a href=""https://en.wikipedia.org/wiki/Line_break"" rel=""nofollow noreferrer"">line breaks</a> to <code>\n</code> using <a href=""https://jmeter-plugins.org/wiki/Functions/#strReplacesupfont-color-gray-size-1-since-1-4-0-font-sup"" rel=""nofollow noreferrer"">__strReplace() function</a>, something like:</p>&#xA;<pre><code>${__strReplace(${__FileToString(${fileName},,)},\r\n,\\n,)}&#xA;</code></pre>&#xA;<p>should do the trick for you.</p>&#xA;<p>You can install <code>__strReplace()</code> funciton as a part of <strong>Custom JMeter Functions</strong> bundle using <a href=""https://jmeter-plugins.org/wiki/PluginsManager/"" rel=""nofollow noreferrer"">JMeter Plugins Manager</a></p>&#xA;<p>More information: <a href=""https://www.blazemeter.com/blog/how-to-use-the-custom-jmeter-functions-plugin"" rel=""nofollow noreferrer"">How to Use the Custom JMeter Functions Plugin</a></p>&#xA;",2897748,,,,2022-06-15 07:37:14,"",,0,1,0,2022-06-15 07:37:14
72631395,2,,50434490,0,,<p>Updated <code>@graphql-codegen/cli</code> package to latest version(2.6.2) and it's working fine.</p>&#xA;<p>For anybody who use hasura also.</p>&#xA;<p>Problem was</p>&#xA;<pre><code>  query: query_root&#xA;  # query: Query # wrong value before upgrade&#xA;  mutation: mutation_root&#xA;  subscription: subscription_root&#xA;}```&#xA;</code></pre>&#xA;,5538912,,,,2022-06-15 12:26:59,"",,0,0,0,2022-06-15 12:26:59
72634326,2,,69274503,0,,<p>Note! I'm only refer to the title of the question and not to the content. This  error also can be raised also when you don't working with the right node version like in situation when using nvm with old node version.</p>&#xA;,1412783,,,,2022-06-15 15:49:09,"",,0,0,0,2022-06-15 15:49:09
72645840,1,,,0,183,"<p>I've added this snippet into <code>./config/plugins.js</code> <br></p>&#xA;<pre><code>module.exports = {&#xA;  graphql: {&#xA;    enabled: true,&#xA;    config: {&#xA;      endpoint: &quot;/graphql&quot;,&#xA;      shadowCRUD: true,&#xA;      playgroundAlways: process.env.NODE_ENV === &quot;development&quot;,&#xA;      depthLimit: 50,&#xA;      amountLimit: 100,&#xA;      defaultLimit: 100,&#xA;      maxLimit: 100,&#xA;      apolloServer: {&#xA;        tracing: true,&#xA;      },&#xA;    },&#xA;  },&#xA;  ckeditor: true,&#xA;};&#xA;&#xA;</code></pre>&#xA;<br>&#xA;I also have changed `playgroundAlways` value like this:<br>&#xA;<pre><code>    playgroundAlways:false&#xA;</code></pre>&#xA;<p>But I can see graphql playground in development and production mode.&#xA;<br>&#xA;How can I hide or disable graphql playground?</p>&#xA;",12669201,,,,2022-10-10 09:33:13,How to disable strapi graphql playground on production mode,<graphql><strapi><graphql-playground><graphql-config>,1,0,0,2022-06-16 12:25:23
72661135,2,,72361047,1,,"<p>The owner of the package just chooses to restrict importing everything from the index file, so to run the new version (&gt; 13.0.0) you have to change the way you are importing the package:</p>&#xA;<pre><code>const graphqlUploadExpress = require('graphql-upload/graphqlUploadExpress.js');&#xA;</code></pre>&#xA;<p>or</p>&#xA;<pre><code>const GraphQLUpload = require('graphql-upload/GraphQLUpload.js');&#xA;</code></pre>&#xA;<p>Alternatively, you can download grade your package to version 13.0.0</p>&#xA;",7845404,,,,2022-06-17 14:44:17,"",,0,0,0,2022-06-17 14:44:17
72665426,2,,72511877,0,,"<p>It ended up as a misunderstanding of how BroadcastProcessor is used. See <a href=""https://github.com/quarkusio/quarkus/discussions/25967"" rel=""nofollow noreferrer"">https://github.com/quarkusio/quarkus/discussions/25967</a> for details.</p>&#xA;",3659012,,,,2022-06-17 22:41:58,"",,0,0,0,2022-06-17 22:41:58
72680412,1,,,0,45,"<p>When I test getServerSideProps() in development mode, prop data in my landing page is updated constantly, because the app is under fast build mode.</p>&#xA;<p>But when the app is deployed in vercel, the data in landing page is not updated even though my database (mongoDB) has been updated.</p>&#xA;<p>If I check Heroku logs (where backend is deployed), there is no POST request by client when I (user) visit landing page second time. Therefore, I am assuming that my browser uses the cached html page and not sending request to server.</p>&#xA;<p>Could anyone help me to explain what is the issue?</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>import { ApolloClient, InMemoryCache } from ""@apollo/client"";&#xA;import { GetServerSideProps } from ""next"";&#xA;import { GetAllPosts as query } from ""@network/queries"";&#xA;&#xA;&#xA;const client = new ApolloClient({&#xA;  uri: //my backend uri,&#xA;  cache: new InMemoryCache(),&#xA;});&#xA;&#xA;&#xA;//pages/_app.ts&#xA;import type { AppProps } from ""next/app"";&#xA;&#xA;function MyApp({ Component, pageProps }: AppProps) {&#xA;  return (&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;AuthContext.Provider value={authService}&gt;&#xA;        &lt;Component {...pageProps} /&gt;&#xA;      &lt;/AuthContext.Provider&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  );&#xA;}&#xA;&#xA;&#xA;//pages/index.tsx&#xA;export const getServerSideProps: GetServerSideProps = async () =&gt; {&#xA;  let posts = [];&#xA;&#xA;  try {&#xA;    const {&#xA;      data: { getAllPosts },&#xA;    } = await client.query({ query });&#xA;    posts = !!getAllPosts.length &amp;&amp; getAllPosts;&#xA;  } catch (err) {&#xA;    console.error(`----------error --------- ${err}`);&#xA;  } finally {&#xA;    return {&#xA;      props: {&#xA;        posts,&#xA;      },&#xA;    };&#xA;  }&#xA;};&#xA;&#xA;export default function Landing({ posts }: Props) {&#xA; ////// react code&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",17895991,,17895991,2022-06-19 21:43:03,2022-06-19 21:43:03,"Nextjs + Apollo-client, getServerSideProps : prop data is not updated in production",<next.js><apollo-client>,0,0,0,2022-06-19 21:21:48
72696135,1,,,0,120,"<p>Am using node version 10.24.0.</p>&#xA;<p>But when I try the example from the official site.</p>&#xA;<pre><code>const graphql = require('graphql');&#xA;&#xA;const schema = graphql.buildSchema(`&#xA;    type Query {&#xA;    hello: String&#xA;}`);&#xA;</code></pre>&#xA;<p>I get the following error.</p>&#xA;<pre><code>TypeError: nodes.flatMap is not a function&#xA;</code></pre>&#xA;<p>Am using grapql@16.5.0</p>&#xA;<p>On the graphql official page, it says</p>&#xA;<p><code>Before getting started, you should have Node v6 installed, although the examples should mostly work in previous versions of Node as well.</code></p>&#xA;<p>So What can I do to get graphql to work here?</p>&#xA;",5015623,,5015623,2022-06-24 07:15:17,2022-06-24 07:15:17,buildschema from graphql throws 'TypeError: nodes.flatMap is not a function',<javascript><node.js><express><graphql-js><express-graphql>,0,0,0,2022-06-21 06:21:16
72712770,2,,72696120,0,,"<p>Turns out, the change to an async method for starting the apollo server was to blame.</p>&#xA;<p>In Apollo 3 you need to first call <code>start()</code> and then apply the actual middleware:</p>&#xA;<pre><code>// app: ExpressApplication&#xA;const apolloServer = new ApolloServer(...);&#xA;apolloServer.start().then(() =&gt; server.applyMiddleware({ app }));&#xA;</code></pre>&#xA;<p>As this is an asynchronous method, the SSR middleware I applied was actually ordered <em>before</em> the Apollo middleware</p>&#xA;<pre><code>createApolloServer(app); // see above&#xA;app.use(renderDom); // see question&#xA;</code></pre>&#xA;<p>And as such the SSR was executed before the Apollo Server, requiring me to add the if-clause to prevent the <code>/graphql</code> route being rendered by SSR.</p>&#xA;<p>Another fix of course is to properly wait for the async function and then apply the SSR middleware afterwards:</p>&#xA;<pre><code>createApolloServer(app).then(() =&gt; {&#xA;    app.use(renderDom);&#xA;    app.listen(...);&#xA;});&#xA;</code></pre>&#xA;",204693,,,,2022-06-22 09:15:10,"",,0,0,0,2022-06-22 09:15:10
72713377,2,,71999160,1,,"<p>I restarted my PC and this issue was resolved for me according to <a href=""https://github.com/vercel/next.js/issues/30491#issuecomment-972811344"" rel=""nofollow noreferrer"">this post on github</a></p>&#xA;",6189492,,,,2022-06-22 09:58:05,"",,0,0,0,2022-06-22 09:58:05
72719230,1,,,2,87,"<p>Apollo server express v3 works like a charm, and it returns properly&#xA;however, after a while of hitting server on intervals,&#xA;it returns null instead of the correct response</p>&#xA;<p>I can see in the server console log that the returned value is correct in the resolver, but something gets messed up with the graphql itself.</p>&#xA;<p>After server restart, it works fine again.</p>&#xA;<p>This occurs every once in a while for no apparent reason.</p>&#xA;<p>Has anyone encountered the same issue and have a solution for it?</p>&#xA;",14516830,,,,2022-06-22 16:47:40,Apollo Server Express 3 returns unexpected null value after a while,<graphql><apollo-server>,0,2,0,2022-06-22 16:47:40
72722885,1,,,0,217,"<p>I am developing a webapp with Django, PostGres, Docker and a GraphQL API.</p>&#xA;<p>I am attempting to write a pytest test that will look at the current server address (localhost or not), send a request to the GraphQL url at that address, and assert the result. The test relies on a <code>notification</code> fixture, which simply creates a record in the Django model. My GraphQL query is working (the query receives results from the API using a browser), but the same query used in the test results in the following error:</p>&#xA;<p>&quot;FAILED api/tests/test_api.py::test_get_all_notifications - requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=2448): Max retries exceeded with url: /graphql ...&quot;</p>&#xA;<p>Here is what I have so far:</p>&#xA;<pre class=""lang-py prettyprint-override""><code>import requests, json&#xA;&#xA;def get_current_server_url():&#xA;    # TODO: &lt;---- THIS FAILS, EVEN THOUGH THIS IS THE WORKING API URL&#xA;    return &quot;http://localhost:2448/graphql&quot;&#xA;&#xA;def test_get_all_notifications(db, notification):&#xA;    query = &quot;&quot;&quot;{&#xA;      allNotifications {&#xA;        id&#xA;      }&#xA;    }&quot;&quot;&quot;&#xA;    url = get_current_server_url()&#xA;    request = requests.post(url, json={'query': query })&#xA;    data = json.loads(request.text)['data']&#xA;    assert len(data['allNotifications']) == 1&#xA;</code></pre>&#xA;<p>Please let me know if I can clarify my question in any way.</p>&#xA;<p><a href=""https://stackoverflow.com/questions/2491605/how-to-get-the-current-url-name-using-django"">This StackOverflow question</a> is helpful, but only if I was attempting to get the URL from inside the view, not from inside pytest.</p>&#xA;",13650013,,13650013,2022-06-23 05:29:14,2022-06-23 05:29:14,Is there a way to write a pytest test case to test the current api url?,<python-3.x><django><graphql><pytest>,0,0,0,2022-06-22 23:07:15
72789002,1,,,0,31,"<p>I thought that relay modern implemented a system whereby it would not try to fetch data until it was rendering the component that declared it. I am talking about fragment components. I have tried to test this but it is fetching all the data.</p>&#xA;<pre><code>import React from &quot;react&quot;;&#xA;import { Environment, Network, RecordSource, Store } from &quot;relay-runtime&quot;;&#xA;import {&#xA;  RelayEnvironmentProvider,&#xA;} from &quot;react-relay/hooks&quot;;&#xA;import &quot;./App.css&quot;;&#xA;import QueryLoaderComponent from &quot;./QueryLoaderComponent&quot;;&#xA;import QueryComponent from &quot;./QueryComponent&quot;;&#xA;&#xA;async function fetchGraphQL(text: string, variables: Record&lt;any, any&gt;) {&#xA;&#xA;  // Fetch data from GitHub's GraphQL API:&#xA;  const response = await fetch(&quot;https://countries.trevorblades.com/&quot;, {&#xA;    method: &quot;POST&quot;,&#xA;    headers: {&#xA;      &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;    },&#xA;    body: JSON.stringify({&#xA;      query: text,&#xA;      variables,&#xA;    }),&#xA;  });&#xA;&#xA;  // Get the response as JSON&#xA;  return await response.json();&#xA;}&#xA;&#xA;async function fetchRelay(params: any, variables: any) {&#xA;  console.log(&#xA;    `fetching query ${params.name} with ${JSON.stringify(variables)}`&#xA;  );&#xA;  return fetchGraphQL(params.text, variables);&#xA;}&#xA;&#xA;// Export a singleton instance of Relay Environment configured with our network function:&#xA;const environment = new Environment({&#xA;  network: Network.create(fetchRelay),&#xA;  store: new Store(new RecordSource()),&#xA;});&#xA;&#xA;function App() {&#xA;  &#xA;  return (&#xA;    &lt;RelayEnvironmentProvider environment={environment}&gt;&#xA;      {/* &lt;QueryLoaderComponent /&gt; */}&#xA;      &lt;QueryComponent /&gt;&#xA;    &lt;/RelayEnvironmentProvider&gt;&#xA;  );&#xA;}&#xA;&#xA;export default App;&#xA;</code></pre>&#xA;<pre><code>import { useState } from &quot;react&quot;;&#xA;// @ts-ignore&#xA;import graphql from &quot;babel-plugin-relay/macro&quot;;&#xA;import { QueryComponentQuery } from &quot;./__generated__/QueryComponentQuery.graphql&quot;;&#xA;import { PreloadedQuery, useLazyLoadQuery, usePreloadedQuery } from &quot;react-relay&quot;;&#xA;// import FragmentComponent from &quot;./FragmentComponent&quot;;&#xA;&#xA;const query = graphql`&#xA;  query QueryComponentQuery($id: ID!) {&#xA;    country(code: $id) {&#xA;      name&#xA;      ...FragmentComponent_country&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;interface Props {&#xA;  // queryRef: PreloadedQuery&lt;QueryComponentQuery&gt;;&#xA;}&#xA;&#xA;const QueryComponent = ({&#xA;  // queryRef&#xA;}: Props) =&gt; {&#xA;  const data = useLazyLoadQuery&lt;QueryComponentQuery&gt;(query, { id: &quot;US&quot;});&#xA;  const [showContinent, setShowContinent] = useState(false);&#xA;  return (&#xA;    &lt;div&gt;&#xA;      &lt;button onClick={() =&gt; setShowContinent(!showContinent)}&gt;&#xA;        {showContinent ? &quot;Hide&quot; : &quot;Show&quot;} continent&#xA;      &lt;/button&gt;&#xA;      &lt;h1&gt;{data.country?.name}&lt;/h1&gt;&#xA;      {/* &lt;ul&gt;&#xA;        {data.countries.map((country: any) =&gt; (&#xA;          &lt;li key={country.name}&gt;&#xA;            {country.name}{&quot; &quot;}&#xA;            {showContinent &amp;&amp; &lt;FragmentComponent country={country} /&gt;}&#xA;          &lt;/li&gt;&#xA;        ))}&#xA;      &lt;/ul&gt; */}&#xA;    &lt;/div&gt;&#xA;  );&#xA;};&#xA;&#xA;export default QueryComponent;&#xA;</code></pre>&#xA;<pre><code>import { useFragment } from &quot;react-relay&quot;;&#xA;// @ts-ignore&#xA;import graphql from &quot;babel-plugin-relay/macro&quot;;&#xA;import { FragmentComponent_country$key } from &quot;./__generated__/FragmentComponent_country.graphql&quot;;&#xA;&#xA;export const fragment = graphql`&#xA;  fragment FragmentComponent_country on Country {&#xA;    continent {&#xA;      name&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;interface Props {&#xA;  country: FragmentComponent_country$key;&#xA;}&#xA;&#xA;const FragmentComponent = ({ country }: Props) =&gt; {&#xA;  const data = useFragment(fragment, country);&#xA;  return &lt;div&gt;{data.continent.name}&lt;/div&gt;;&#xA;};&#xA;&#xA;export default FragmentComponent;&#xA;</code></pre>&#xA;<p>this is fetching the data for the fragment component even though it is not rendering the fragment component. is there a way to defer it until it is rendering the component?</p>&#xA;",8896573,,,,2022-07-13 06:43:47,how to not fetch fragment data until component renders react GraphQL,<reactjs><graphql><relaymodern><react-relay>,1,0,0,2022-06-28 15:10:48
72801076,1,,,0,17,"<p>I'm following the <a href=""https://graphql.org/graphql-js/running-an-express-graphql-server/"" rel=""nofollow noreferrer"">GraphQL documentation</a> to create a Node/Express server. When I get to the 2nd page, it instructs to enter the following code into my browser's developer console:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>fetch('/graphql', {&#xA;  method: 'POST',&#xA;  headers: {&#xA;    'Content-Type': 'application/json',&#xA;    'Accept': 'application/json',&#xA;  },&#xA;  body: JSON.stringify({query: &quot;{ hello }&quot;})&#xA;})&#xA;  .then(r =&gt; r.json())&#xA;  .then(data =&gt; console.log('data returned:', data));&#xA;</code></pre>&#xA;<p>The console returns the following error:&#xA;<code>VM100:7 Refused to connect to 'http://localhost:4000/graphql' because it violates the following Content Security Policy directive: &quot;default-src 'none'&quot;. Note that 'connect-src' was not explicitly set, so 'default-src' is used as a fallback.</code></p>&#xA;<p>How do I explicitly set <code>connect-src</code>?</p>&#xA;",11664580,,,,2022-06-29 11:59:58,"GraphQL error in browser when following documentation for Node/Express server: ""Refused to connect... Content Security Policy directive""",<node.js><express><graphql>,0,0,0,2022-06-29 11:59:58
72832777,2,,59920824,0,,"<p>It may be very late, but my setup's problem was that my environment variables related to ApolloClient configuration didn't have the correct names. So <code>apolloClient</code> wasn't getting configured properly.&#xA;In NextJS, if you want to expose environment variables to the browser, then the environment variable's name should begin with <code>NEXT_PUBLIC_</code>.</p>&#xA;",12215015,,,,2022-07-01 17:26:44,"",,0,0,0,2022-07-01 17:26:44
72844714,1,72853078,,0,81,"<p>I have an app which I had pushed to heroku a few days ago, where it works fine, but when deploying the app to Netlify, the app deploys but the graphQL connection throws a 404 error. Here are some images.</p>&#xA;<p><a href=""https://i.stack.imgur.com/mlq9Y.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mlq9Y.png"" alt=""enter image description here"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/54Onl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/54Onl.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Here is the code I use in App.js</p>&#xA;<p><a href=""https://i.stack.imgur.com/1MHln.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1MHln.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Is there anyone that knows how I can fix this? Much appreciated</p>&#xA;",14524050,,441757,2022-07-03 07:51:11,2022-07-06 06:11:10,Netlify throws 404 error with /graphql only when deployed,<javascript><graphql><http-status-code-404><netlify>,1,0,0,2022-07-03 07:39:16
72853078,2,,72844714,0,,"<p>Netlify doesn't run a app server like Heroku, it only runs a static file server. From your code, it appears that you're trying to serve a app that you could connect to and provide yourself with GraphQL access. This is not possible on Netlify, at least not directly.</p>&#xA;<p>The only server-like solution that Netlify currently provides in Netlify Functions. However, those are limited to 10 sec by default and provide, one-time data connection - not something that you could keep on using for GraphQL.</p>&#xA;<p>So if your requirement is to keep the GraphQL server running (for example like what Gatsby does during <code>gatsby develop</code>), Netlify is not the solution for you. If you wish to send the data one-time and add some server-side processing, you can take a look at Netlify Functions.</p>&#xA;",9579545,,9579545,2022-07-06 06:11:10,2022-07-06 06:11:10,"",,0,2,0,2022-07-04 07:23:57
72871871,2,,68352140,0,,"<p>Did you define a possibleTypes option in your initialization for the InMemoryCache?</p>&#xA;<p>see: <a href=""https://www.apollographql.com/docs/react/data/fragments#using-fragments-with-unions-and-interfaces"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/data/fragments#using-fragments-with-unions-and-interfaces</a></p>&#xA;<p>It could be that your client is not able to match the fragments. There are some libraries for fragment-matching out there. (f.e. <a href=""https://www.graphql-code-generator.com/"" rel=""nofollow noreferrer"">https://www.graphql-code-generator.com/</a>)</p>&#xA;",18080735,,,,2022-07-05 15:20:48,"",,0,0,0,2022-07-05 15:20:48
72886714,2,,72835644,3,,<p>Looks like it only works with the unstable version currently:</p>&#xA;<p>https://&quot;+shop_name+&quot;.myshopify.com/admin/api/unstable/graphql.json</p>&#xA;<p>Got a successful response with this.</p>&#xA;,6357649,,,,2022-07-06 16:04:31,"",,0,1,0,2022-07-06 16:04:31
72908456,2,,70013249,0,,"<p>The bug has been fixed. A new version is available:&#xA;<a href=""https://jmeter.apache.org/download_jmeter.cgi"" rel=""nofollow noreferrer"">jmeter 5.5</a></p>&#xA;<p>I just tested it and it works!</p>&#xA;",18629072,,,,2022-07-08 08:07:40,"",,0,0,0,2022-07-08 08:07:40
72913407,2,,56858461,0,,"<p>In my case, my code is implementing this plugin <code>graphql-query-complexity</code> for which there is a known bug: <a href=""https://github.com/slicknode/graphql-query-complexity/issues/69"" rel=""nofollow noreferrer"">https://github.com/slicknode/graphql-query-complexity/issues/69</a>.&#xA;Wrapping the plugin in a try/catch I am able to skip the error validation.</p>&#xA;",1783283,,,,2022-07-08 15:05:20,"",,0,0,0,2022-07-08 15:05:20
72936717,1,,,2,84,"<p>I want to fetch a json dynamically in a component and in SSR mode. I'm using Apollo Client and a GraphQL api.&#xA;With Apollo useQuery hook, we can fetch graphql api with SSR mode, is it possible to use useQuery to fetch a json in ssr way too ? or another method ? fetch api is only on client side</p>&#xA;",1540156,,,,2022-07-18 19:57:42,fetch static file with Apollo and SSR,<reactjs><json><fetch><apollo><server-side-rendering>,0,0,0,2022-07-11 09:57:31
72942786,2,,66245229,0,,"<p>The app seems unable to connect to the localhost server that has been set. If you're running into this issue with your Flutter app running on an Android emulator trying to connect to your localhost server, you need to configure the IP address of the host machine - which is <code>10.0.2.2</code>. The reason for this config is discussed in more detail on this <a href=""https://stackoverflow.com/a/9515414"">post</a>.</p>&#xA;",2497859,,,,2022-07-11 17:58:10,"",,0,0,0,2022-07-11 17:58:10
72950876,1,,,0,35,"<p>I'm having problem with CORS.&#xA;My Node.js Server with apollo-server-express(version 3.7)</p>&#xA;<p>My problem is CORS is not constant.</p>&#xA;<p>My React Project request api server and works well.&#xA;But sometimes api server response this error&#xA;Access to fetch at 'https://api.example.com/' from origin 'https://example.com' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.</p>&#xA;<p>Why same client request sometime response cors error?</p>&#xA;<p>Please Help.</p>&#xA;",19533596,,,,2022-07-12 10:31:27,Cors Option not constant,<apollo-server>,0,0,0,2022-07-12 10:31:27
72959074,2,,69343038,4,,"<p>Make sure you have <code>&quot;react-scripts&quot;: &quot;^5.0.1&quot;</code> on your package.json dependencies, then use command <code>npm install</code>. For some reason my react-scripts version was 3.x.x and that was causing the problem. I used cra too.</p>&#xA;",12656865,,,,2022-07-12 22:37:24,"",,0,0,0,2022-07-12 22:37:24
72960414,2,,72894886,1,,"<p>This is a known bug with older PostgreSQL versions and Prisma.</p>&#xA;<p><a href=""https://github.com/prisma/prisma/issues/7251"" rel=""nofollow noreferrer"">https://github.com/prisma/prisma/issues/7251</a></p>&#xA;<p>Upgrading to PostgreSQL version 12 or higher should resolve this error. Alternatively, you can create single migration files whose only purpose is to update the enum.</p>&#xA;",2246272,,,,2022-07-13 02:55:16,"",,0,0,0,2022-07-13 02:55:16
72961130,1,,,0,53,"<p>I am creating graphql in laravel for the Shopify app. I was use rebing/graphql-laravel package(<a href=""https://github.com/rebing/graphql-laravel"" rel=""nofollow noreferrer"">link here</a> ). I want to get a custom header in the resolve method of query/mutation.</p>&#xA;<p>If anyone has an idea about this then help me.</p>&#xA;",18903932,,,,2022-07-13 04:56:58,How to get a custom header in the resolve method of rebing/graphql-laravel package in graphql?,<php><laravel><graphql><shopify>,0,0,0,2022-07-13 04:56:58
72965580,1,,,0,77,"<p>When I tried to execute a query in hasura console, the response returns 504 after 20.20s.&#xA;How to solve this? Is hasura application to have any environment variables to configure the request timeout?</p>&#xA;",12198981,,,,2022-07-13 11:35:20,Hasura Graphql endpoing throwing 504 Error,<graphql><hasura><http-status-code-504>,0,0,0,2022-07-13 11:35:20
72995661,1,,,0,41,"<p>I'm trying to build an app with all dynamic pages so they can be updated by the logged in admin.  In the db (mongoDB) I have a pages collection with _id, pageTitle, and content.  So far I just have the home page so the pageTitle is home.  I am using express with apollo-express-server on the backend and reat for the front end.</p>&#xA;<p>I can add a page and query the page by the pageTitle from the graphql playground, but I cannot query the page content from the front end.</p>&#xA;<p>Here is my App.js:</p>&#xA;<pre><code>import {&#xA;  ApolloClient,&#xA;  InMemoryCache,&#xA;  ApolloProvider,&#xA;  createHttpLink,&#xA;} from '@apollo/client';&#xA;import { Route, Routes, BrowserRouter as Router } from 'react-router-dom';&#xA;import Home from './pages/Home';&#xA;&#xA;// Construct our main GraphQL API endpoint&#xA;const httpLink = createHttpLink({&#xA;  uri: '/graphql',&#xA;});&#xA;&#xA;const client = new ApolloClient({&#xA;  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API&#xA;  //link: authLink.concat(httpLink),&#xA;  cache: new InMemoryCache(),&#xA;});&#xA;&#xA;function App() {&#xA;  return (&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;Router&gt;&#xA;        &lt;Routes&gt;&#xA;          &lt;Route path='/:pageTitle' element={&lt;Home /&gt;}&gt;&#xA;            Home&#xA;          &lt;/Route&gt;&#xA;        &lt;/Routes&gt;&#xA;      &lt;/Router&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  );&#xA;}&#xA;&#xA;export default App;&#xA;</code></pre>&#xA;<p>Here is the Home.js page:</p>&#xA;<pre><code>import React from 'react';&#xA;import { GET_SINGLE_PAGE } from '../utils/queries';&#xA;import { useQuery } from '@apollo/client';&#xA;import { useParams } from 'react-router-dom';&#xA;&#xA;const Home = () =&gt; {&#xA;  const { pageTitle } = useParams();&#xA;  console.log(pageTitle);&#xA;  const { data } = useQuery(GET_SINGLE_PAGE, {&#xA;    variables: { pageTitle: pageTitle },&#xA;  });&#xA;  const page = data?.page;&#xA;  console.log(page);&#xA;&#xA;  return (&#xA;    &lt;div&gt;&#xA;      &lt;h1&gt;Denver Judo&lt;/h1&gt;&#xA;      &lt;p&gt;Just some placeholder text&lt;/p&gt;&#xA;    &lt;/div&gt;&#xA;  );&#xA;};&#xA;&#xA;export default Home;&#xA;</code></pre>&#xA;<p>When I got to localhost://3000/home it loads the page and where I concole.log(pageTitle) I get home, but below when I console.log(page) I get undefined.&#xA;Here is the /utils/queries.js</p>&#xA;<pre><code>import { gql } from '@apollo/client';&#xA;&#xA;export const GET_SINGLE_PAGE = gql`&#xA;  query Page($pageTitle: String!) {&#xA;    page(pageTitle: $pageTitle) {&#xA;      _id&#xA;      pageTitle&#xA;      content&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>Here is my frontend package.json file as well:</p>&#xA;<pre><code>{&#xA;  &quot;name&quot;: &quot;client&quot;,&#xA;  &quot;version&quot;: &quot;0.1.0&quot;,&#xA;  &quot;private&quot;: true,&#xA;  &quot;proxy&quot;: &quot;http://localhost:5000&quot;,&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;@apollo/client&quot;: &quot;^3.6.9&quot;,&#xA;    &quot;@testing-library/jest-dom&quot;: &quot;^5.16.4&quot;,&#xA;    &quot;@testing-library/react&quot;: &quot;^13.3.0&quot;,&#xA;    &quot;@testing-library/user-event&quot;: &quot;^13.5.0&quot;,&#xA;    &quot;axios&quot;: &quot;^0.27.2&quot;,&#xA;    &quot;jwt-decode&quot;: &quot;^3.1.2&quot;,&#xA;    &quot;react&quot;: &quot;^18.2.0&quot;,&#xA;    &quot;react-dom&quot;: &quot;^18.2.0&quot;,&#xA;    &quot;react-router-dom&quot;: &quot;^6.3.0&quot;,&#xA;    &quot;react-scripts&quot;: &quot;5.0.1&quot;,&#xA;    &quot;web-vitals&quot;: &quot;^2.1.4&quot;&#xA;  },&#xA;  &quot;scripts&quot;: {&#xA;    &quot;start&quot;: &quot;react-scripts start&quot;,&#xA;    &quot;build&quot;: &quot;react-scripts build&quot;,&#xA;    &quot;test&quot;: &quot;react-scripts test&quot;,&#xA;    &quot;eject&quot;: &quot;react-scripts eject&quot;&#xA;  },&#xA;  &quot;eslintConfig&quot;: {&#xA;    &quot;extends&quot;: [&#xA;      &quot;react-app&quot;,&#xA;      &quot;react-app/jest&quot;&#xA;    ]&#xA;  },&#xA;  &quot;browserslist&quot;: {&#xA;    &quot;production&quot;: [&#xA;      &quot;&gt;0.2%&quot;,&#xA;      &quot;not dead&quot;,&#xA;      &quot;not op_mini all&quot;&#xA;    ],&#xA;    &quot;development&quot;: [&#xA;      &quot;last 1 chrome version&quot;,&#xA;      &quot;last 1 firefox version&quot;,&#xA;      &quot;last 1 safari version&quot;&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>If you need to see the backend files I can add them, just let me know.</p>&#xA;",7649860,,,,2022-07-15 18:44:51,Cannot query page details from frontend,<reactjs><graphql><apollo-server>,1,0,0,2022-07-15 14:36:38
73019334,1,,,0,172,"<p>Using an <a href=""https://insomnia.rest"" rel=""nofollow noreferrer"">Insomnia</a> <em>design document</em>, I created a <em>query</em> and a <em>unit test</em> that runs tests on that query. The query has a <em>query variable</em> which is configured as part of the query in the &quot;Debug&quot; tab in Insomnia.</p>&#xA;<p>The query looks like this:</p>&#xA;<pre><code>query Test($bar: String!) {&#xA;  dummy(where: {foo: {contains: $bar}} ) { foo }&#xA;}&#xA;</code></pre>&#xA;<p>With the following query variables:</p>&#xA;<pre><code>{&#xA;  &quot;bar&quot;: &quot;Bar&quot;&#xA;}&#xA;</code></pre>&#xA;<p>On the &quot;Tests&quot; tab I can create a unit test and select the &quot;Test&quot; query. Is it possible to pass in different query variables as the one configured in the &quot;Debug&quot; tab?</p>&#xA;<p>I want to create two unit tests, one that uses the query variable defined in the &quot;Debug&quot; tab and one that uses a different query variable, e.g.:</p>&#xA;<pre><code>{&#xA;  &quot;bar&quot;: &quot;capybara&quot;&#xA;}&#xA;</code></pre>&#xA;<p>My current solution is to duplicate the query in the &quot;Debug&quot; tab for each unit test. While this works, it obviously creates a lot of duplication which makes adapting the tests to changes in the GraphQL schema a lot more labor intense than it could be.</p>&#xA;",10069673,,10069673,2022-07-19 07:43:54,2022-07-19 07:43:54,Pass in custom query variables to a GraphQL query in an Insomnia Unit Test,<unit-testing><graphql><insomnia>,1,0,0,2022-07-18 08:24:39
73026341,1,,,1,57,"<p>I have a React app with:</p>&#xA;<ul>&#xA;<li>react-app-rewired</li>&#xA;<li>Apollo Client 3.5.5</li>&#xA;</ul>&#xA;<p>I have an error when I try to use this import:</p>&#xA;<pre><code>import { MockedProvider } from '@apollo/client/testing';&#xA;</code></pre>&#xA;<p>If I do <code>console.log(MockedProvider</code>enter code here<code>)</code> I got: <code>undefined</code>.</p>&#xA;<p>If in my jest config I add this:</p>&#xA;<pre><code>&quot;transformIgnorePatterns&quot;: [&quot;&lt;rootDir&gt;/node_modules/.*&quot;]&#xA;</code></pre>&#xA;<p>It works and I got the proper console.log: <code>[Function: MockedProvider] { defaultProps: { addTypename: true } }</code></p>&#xA;<p>That's fine, yes, but I'm getting errors in other partes of the app, like:</p>&#xA;<pre><code>SyntaxError: Invalid or unexpected token&#xA;&#xA;  4 | import Loader from 'react-loaders';&#xA;  5 |&#xA;&gt; 6 | import 'loaders.css/loaders.css';&#xA;</code></pre>&#xA;<p>So, what could I do?</p>&#xA;<p>I don't get how to apply that only for Apollo Client.</p>&#xA;",3541320,,3541320,2022-07-19 18:08:41,2022-07-19 18:08:41,"react-app-rewired, transformIgnorePatterns on Apollo Client 3",<jestjs><apollo-client><react-app-rewired>,0,0,0,2022-07-18 17:32:43
73027097,2,,56693067,1,,"<p>In my case, I solved with:</p>&#xA;<p>autoLoadEntities: true,</p>&#xA;<p>in app.module.ts</p>&#xA;",19574396,,,,2022-07-18 18:39:16,"",,0,1,0,2022-07-18 18:39:16
73027738,1,,,0,672,"<p>I'm using GraphQL in React Native, but it doesn't have much to do with the fact that I'm using RN. When I want to make a request to an endpoint that I want, it throws me the error [TypeError: Network request failed], but only in the function that I want, I tried with some examples, and it responds correctly</p>&#xA;<p><strong>I leave 3 functions and the output in the terminal:</strong></p>&#xA;<pre><code>const fetchh = async () =&gt; {&#xA;await fetch('https://api.thegraph.com/subgraphs/name/ensdomains/ens', {&#xA;  method: 'POST',&#xA;  headers: {&#xA;    'Content-Type': 'application/json',&#xA;  },&#xA;  body: JSON.stringify({&#xA;    query: `&#xA;    query ($name: String!)&#xA;        {&#xA;          domains(first: 75, where: {name_contains: $name, resolvedAddress_not: null, name_ends_with: &quot;.eth&quot;}) {    &#xA;            name    &#xA;          }&#xA;        }&#xA;    `,&#xA;    variables: {&#xA;      name: 'asd',&#xA;    },&#xA;  }),&#xA;})&#xA;  .then(res =&gt; res.json())&#xA;  .then(result =&gt; console.log(result, 'RESULTADO'))&#xA;  .catch(err =&gt; console.log(JSON.stringify(err), 'ERROR FETCH1'));&#xA;};&#xA;</code></pre>&#xA;<p>====</p>&#xA;<pre><code>  const fetch2 = async () =&gt; {&#xA;fetch('https://www.learnwithjason.dev/graphql', {&#xA;  method: 'POST',&#xA;  headers: {&#xA;    'Content-Type': 'application/json',&#xA;  },&#xA;  body: JSON.stringify({&#xA;    query: `&#xA;      query GetLearnWithJasonEpisodes($now: DateTime!) {&#xA;        allEpisode(limit: 10, sort: {date: ASC}, where: {date: {gte: $now}}) {&#xA;          date&#xA;          title&#xA;          guest {&#xA;            name&#xA;            twitter&#xA;          }&#xA;          description&#xA;        }&#xA;      }&#xA;    `,&#xA;    variables: {&#xA;      now: new Date().toISOString(),&#xA;    },&#xA;  }),&#xA;})&#xA;  .then(res =&gt; res.json())&#xA;  .then(result =&gt; console.log(result, 'FETCH 2'));&#xA;};&#xA;</code></pre>&#xA;<p>======</p>&#xA;<pre><code>const fetch3 = async () =&gt; {&#xA;fetch('https://api.thegraph.com/subgraphs/name/ensdomains/ens', {&#xA;  method: 'POST',&#xA;  headers: {&#xA;    'Content-Type': 'application/json',&#xA;  },&#xA;  body: JSON.stringify({&#xA;    query: `query ($address: ID!)&#xA;  { &#xA;      accounts(where: {id: $address}, first: 1000) {&#xA;          registrations {&#xA;              domain {                      &#xA;                name&#xA;                subdomains {&#xA;                  name&#xA;                }&#xA;              }&#xA;              expiryDate&#xA;          }   &#xA;      } &#xA;  }`,&#xA;    variables: {&#xA;      address: '0x9844'.toLowerCase(),&#xA;    },&#xA;  }),&#xA;})&#xA;  .then(res =&gt; res.json())&#xA;  .then(result =&gt; console.log(result))&#xA;  .catch(err =&gt; console.log(err, 'ERROR FETCH 3'));&#xA;};&#xA;</code></pre>&#xA;<pre><code>LOG [TypeError: Network request failed] ERROR FETCH 3&#xA;LOG {&quot;line&quot;:25338,&quot;column&quot;:33,&quot;sourceURL&quot;:&quot;localhost:8081/index.bundle?platform=android&amp;dev=true&amp;minify=false&amp;app=com.welookapp&amp;modulesOnly=false&amp;runModule=true&quot;} ERROR FETCH1&#xA;&#xA;LOG {&quot;data&quot;: {&quot;allEpisode&quot;: [[Object], [Object], [Object], [Object], [Object], [Object]]}} FETCH 2&#xA;</code></pre>&#xA;<p>The error FETCH 1 and FETCH 3 are the same except for FETCH1 I put JSON.stringify in the .catchIt can also be seen that FETCH 2 brought the results correctly, do you know what could be happening?</p>&#xA;",15516523,,933198,2022-07-18 23:48:46,2022-07-18 23:48:46,Fetch Error : [TypeError: Network request failed],<javascript><reactjs><react-native><graphql><fetch-api>,0,2,0,2022-07-18 19:38:04
73051823,2,,72925003,2,,"<p>Apollo Studio has a special exception that allows it to communicate with &quot;localhost&quot; over http, but all other endpoints must be over https.</p>&#xA;<p>If you (like me) are running virtual machines on your local machine and need to use Apollo Studio, the only solutions are to make the connection https somehow, or forward a port in your host OS so that you can access it via localhost. How to do THAT depends on your OS.</p>&#xA;",9340326,,,,2022-07-20 12:40:39,"",,0,0,0,2022-07-20 12:40:39
73053047,2,,73052043,2,,"<p>Filtering by subfield is a new feature just added to the Graph.<br />&#xA;The syntax supported is as follows: <code>where: {token0_: { subfield : &quot;value&quot; }}</code></p>&#xA;<p>For instance to get swaps where the first token has the symbol &quot;WETH&quot;:</p>&#xA;<pre><code>{&#xA;  swaps(first: 1, where: {token0_: {symbol : &quot;WETH&quot;}}) {&#xA;    token0 {symbol}&#xA;    token1 {symbol}&#xA;    amount0&#xA;    amount1&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Result:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;swaps&quot;: [&#xA;      {&#xA;        &quot;token0&quot;: {&#xA;          &quot;symbol&quot;: &quot;WETH&quot;&#xA;        },&#xA;        &quot;token1&quot;: {&#xA;          &quot;symbol&quot;: &quot;USDT&quot;&#xA;        },&#xA;        &quot;amount0&quot;: &quot;39.227335678972562535&quot;,&#xA;        &quot;amount1&quot;: &quot;-101256.052655&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>A more reliable way to do it would be to filter by token's ID, that way scam token someone named &quot;WETH&quot; would not be included, but I used symbol for the sake of clarity of the example.</p>&#xA;",2435820,,,,2022-07-20 13:59:36,"",,0,0,0,2022-07-20 13:59:36
73075603,2,,70673936,0,,"<p>I think what you need is Push Notifications (<a href=""https://capacitorjs.com/docs/apis/push-notifications"" rel=""nofollow noreferrer"">@capacitor/push_notifications</a>).</p>&#xA;<p>When a subscription happens in your server (eg. new message) you then send a push notification to your devices. The push notification will be displayed in the device and when you click/open the app you can fetch new data from the server.</p>&#xA;",18947113,,,,2022-07-22 05:45:08,"",,0,1,0,2022-07-22 05:45:08
73109523,2,,72230166,2,,"<p>I eventually end up using <a href=""https://www.npmjs.com/package/tiny-invariant"" rel=""nofollow noreferrer"">tiny-invariant</a> package for this. Consider the ff code</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const {data} = useUserQuery({variables: {id}});&#xA;&#xA;// more codes here...&#xA;&#xA;invariant(data.user.__typename === &quot;User&quot;);&#xA;&#xA;// now we should get the type that we want here&#xA;</code></pre>&#xA;",13920314,,,,2022-07-25 12:48:34,"",,0,0,0,2022-07-25 12:48:34
73122526,2,,62938649,1,,"<p>You can safely ignore this warning, it has been removed in React 18.</p>&#xA;<p><a href=""https://github.com/reactwg/react-18/discussions/82"" rel=""nofollow noreferrer"">https://github.com/reactwg/react-18/discussions/82</a></p>&#xA;",9307290,,,,2022-07-26 11:25:05,"",,0,0,0,2022-07-26 11:25:05
73153699,2,,72155396,1,,"<p>I faced the same problem because of an old tutorial.</p>&#xA;<p>I configured my Apollo client in the wrong way.</p>&#xA;<p>Do the same as described in the <a href=""https://www.apollographql.com/docs/react/get-started/"" rel=""nofollow noreferrer"">get started guide</a> from graphql and it will work perfect.</p>&#xA;",12073379,,,,2022-07-28 13:21:37,"",,0,0,0,2022-07-28 13:21:37
73162985,1,,,0,390,"<p>I just connected Datadog RUM on my React SPA application, this application is not connected to a backend but uses graphql apis from another application which has Datadog tracing agent set on it</p>&#xA;<pre><code>datadogRum.init({&#xA;  applicationId: 'xxxxxxxxx',&#xA;  clientToken: 'xxxxxxxxxxxxxx',&#xA;  site: 'datadoghq.com',&#xA;  service: 'order',&#xA;  env: 'staging',&#xA;  // Specify a version number to identify the deployed version of your application in Datadog&#xA;  // version: '1.0.0',&#xA;  sampleRate: 100,&#xA;  premiumSampleRate: 100,&#xA;  trackInteractions: true,&#xA;  defaultPrivacyLevel: 'mask-user-input',&#xA;  allowedTracingOrigins: [/https:\/\/(?:api|app)\.example\.(?:cc|com)\/graphql/],&#xA;})&#xA;</code></pre>&#xA;<p>I already have datadog tracing agent set on. app.example.com which is a monolith Ruby on rails application but also exposes a graphql api</p>&#xA;<p>I want to be able to get the graphql calls made from the React frontend  to the ROR app on the Datadog RUM traces tab, but with my current setup nothing happens.<br />&#xA;on the Datadog docs these are the prerequisite for this to work.</p>&#xA;<ul>&#xA;<li>You have set up APM tracing on the services targeted by your RUM applications.</li>&#xA;<li>Your services use an HTTP server.</li>&#xA;<li>Your HTTP servers are using a library that supports distributed tracing.</li>&#xA;<li>You have XMLHttpRequest (XHR) or Fetch resources on the RUM Explorer to your allowedTracingOrigins.</li>&#xA;<li>You have a corresponding trace for requests to allowedTracingOrigins.</li>&#xA;</ul>&#xA;<p>I think I have all those met I am not completely sure, but my question is how do I properly connect Datadog RUM to traces.</p>&#xA;",10706845,,,,2022-07-29 07:21:32,How to connect Datadog Rum to traces,<reactjs><graphql><datadog><distributed-tracing>,0,5,0,2022-07-29 07:21:32
73170780,2,,71991563,0,,"<p>The IP address seen by Atlas is not necessarily the IP address of your workstations. If behind a router that does NAT or using VPN the address seen is the one of the router or the exit point of the VPN.</p>&#xA;<p>First try to Allow Access From Anywhere. If it works it is most likely because you whitelisted an IP address that is not your public address. Find your public IP with <a href=""https://www.whatismyip.com/"" rel=""nofollow noreferrer"">https://www.whatismyip.com/</a></p>&#xA;<p>If the above does not work then we need more information to help.</p>&#xA;",9689193,,,,2022-07-29 20:37:03,"",,0,0,0,2022-07-29 20:37:03
73172384,1,,,0,247,"<p>I've been learning the mern stack from this <a href=""https://rads.stackoverflow.com/amzn/click/com/1484243900"" rel=""nofollow noreferrer"" rel=""nofollow noreferrer"">book</a></p>&#xA;<p>I'm now on Nested Routes under React Router chapter</p>&#xA;<p>The web application is supposed to render this on the page.</p>&#xA;<p><a href=""https://i.stack.imgur.com/4jJds.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4jJds.jpg"" alt=""c1"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/kUPee.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/kUPee.jpg"" alt=""c2"" /></a></p>&#xA;<p>When clicking the <code>Select</code> link under the <code>Action</code> column, the description of&#xA;an issue is displayed on the bottom part of the page.</p>&#xA;<p>But in my case, this thing happens:</p>&#xA;<p><a href=""https://i.stack.imgur.com/MGLR7.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/MGLR7.jpg"" alt=""w-err"" /></a></p>&#xA;<p>and at the same time this error is being thrown in the console:</p>&#xA;<p><a href=""https://i.stack.imgur.com/h108A.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/h108A.jpg"" alt=""enter image description here"" /></a></p>&#xA;<p>The only time the web application runs properly is when I downgraded the&#xA;graphql version to <strong>0.13.2</strong> (this is the version the book uses).</p>&#xA;<p>The thing is I try to use up to date versions of the project dependencies&#xA;as much as possible. There has never been much trouble as I follow the book&#xA;until I got into this.</p>&#xA;<p>I don't understand, why is this error being thrown when I use a more up to&#xA;date version of the graphql over the old version?&#xA;(I use graphql version <strong>15.8.0</strong> and apollo-server-express version <strong>2.25.4</strong>)</p>&#xA;<p>I tried to modify the .jsx file that renders the description data&#xA;on the page.</p>&#xA;<pre><code>async loadData() {&#xA;  const { match: { params: { id } } } = this.props;&#xA;  //I tried to parse the id to make it an int type before getting it into&#xA;  //the graphql query&#xA;  id = parseInt(id); // this is the thing that I've added&#xA;  const query = `query issue($id: Int!) {&#xA;    issue (id: $id) {&#xA;      id description&#xA;    }&#xA;  }`;&#xA;&#xA;  const data = await graphQLFetch(query, { id });&#xA;  if (data) {&#xA;    this.setState({ issue: data.issue });&#xA;  } else {&#xA;    this.setState({ issue: {} });&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This is the codes graphQLFetch function</p>&#xA;<pre><code>const dateRegex = new RegExp('^\\d\\d\\d\\d-\\d\\d-\\d\\d');&#xA;&#xA;function jsonDateReviver(key, value) {&#xA;  if (dateRegex.test(value)) return new Date(value);&#xA;  return value;&#xA;}&#xA;&#xA;async function graphQLFetch(query, variables = {}) {&#xA;  try {&#xA;    const response = await fetch(window.ENV.UI_API_ENDPOINT, {&#xA;      method: 'POST',&#xA;      headers: { 'Content-Type': 'application/json' },&#xA;      body: JSON.stringify({ query, variables }),&#xA;    });&#xA;    const body = await response.text();&#xA;    const result = JSON.parse(body, jsonDateReviver);&#xA;&#xA;    if (result.errors) {&#xA;      const error = result.errors[0];&#xA;      if (error.extensions.code === 'BAD_USER_INPUT') {&#xA;        const details = error.extensions.exception.errors.join('\n');&#xA;        alert(`${error.message}:\n ${details}`);&#xA;      } else {&#xA;        alert(`${error.extensions.code}: ${error.message}`);&#xA;      }&#xA;    }&#xA;    return result.data;&#xA;  } catch (e) {&#xA;    alert(`Error in sending data to server: ${e.message}`);&#xA;    return null;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>When I did this, it doesn't throw any error anymore but it doesn't render&#xA;the description data on the page either.</p>&#xA;<p>Can someone please help me with this?? Thanks in advance...</p>&#xA;",10410243,,10410243,2022-08-02 03:58:58,2022-08-02 03:58:58,"Variable ""$id"" got invalid value ""1""; Int cannot represent non-integer value: ""1""",<javascript><reactjs><graphql><mern>,0,3,0,2022-07-30 02:03:14
73172746,2,,73158298,1,,<p>The only fix that I've come up with is downgrading to version 2.10.0 of graphql code generator.</p>&#xA;<p>In your package.json make this change -&gt; &quot;@graphql-codegen/cli&quot;: &quot;2.10.0&quot;</p>&#xA;<p>then npm install</p>&#xA;,18534819,,,,2022-07-30 03:55:38,"",,0,0,0,2022-07-30 03:55:38
73194556,1,,,0,89,"<p>I have run into an issue with @apollo/client. I get this error on v3.4.17 and v3.4.0 which were mentioned in earlier posts. I think the issue is caused by @apollo/react-hooks.&#xA;This is my package.json</p>&#xA;<pre><code>&quot;@apollo/client&quot;: &quot;~3.4.17&quot;,&#xA;   &quot;@apollo/react-hooks&quot;: &quot;^4.0.0&quot;,&#xA;   &quot;@apollo/react-ssr&quot;: &quot;^4.0.0&quot;,&#xA;</code></pre>&#xA;<p>but my package-lock.json looks like this</p>&#xA;<pre><code> &quot;@apollo/react-hooks&quot;: {&#xA;      &quot;version&quot;: &quot;4.0.0&quot;,&#xA;      &quot;resolved&quot;: &quot;https://registry.npmjs.org/@apollo/react-hooks/-/react-hooks-4.0.0.tgz&quot;,&#xA;      &quot;integrity&quot;: &quot;sha512-fCu0cbne3gbUl0QbA8X4L33iuuFVQbC5Jo2MIKRK8CyawR6PoxDpFdFA1kc6033ODZuZZ9Eo4RdeJFlFIIYcLA==&quot;,&#xA;      &quot;requires&quot;: {&#xA;        &quot;@apollo/client&quot;: &quot;^3.6.9&quot;&#xA;      },&#xA;      &quot;dependencies&quot;: {&#xA;        &quot;@apollo/client&quot;: {&#xA;          &quot;version&quot;: &quot;3.6.9&quot;,&#xA;          &quot;resolved&quot;: &quot;https://registry.npmjs.org/@apollo/client/-/client-3.6.9.tgz&quot;,&#xA;          &quot;integrity&quot;: &quot;sha512-Y1yu8qa2YeaCUBVuw08x8NHenFi0sw2I3KCu7Kw9mDSu86HmmtHJkCAifKVrN2iPgDTW/BbP3EpSV8/EQCcxZA==&quot;,&#xA;          &quot;requires&quot;: {&#xA;            &quot;@graphql-typed-document-node/core&quot;: &quot;^3.1.1&quot;,&#xA;            &quot;@wry/context&quot;: &quot;^0.6.0&quot;,&#xA;            &quot;@wry/equality&quot;: &quot;^0.5.0&quot;,&#xA;            &quot;@wry/trie&quot;: &quot;^0.3.0&quot;,&#xA;            &quot;graphql-tag&quot;: &quot;^2.12.6&quot;,&#xA;            &quot;hoist-non-react-statics&quot;: &quot;^3.3.2&quot;,&#xA;            &quot;optimism&quot;: &quot;^0.16.1&quot;,&#xA;            &quot;prop-types&quot;: &quot;^15.7.2&quot;,&#xA;            &quot;symbol-observable&quot;: &quot;^4.0.0&quot;,&#xA;            &quot;ts-invariant&quot;: &quot;^0.10.3&quot;,&#xA;            &quot;tslib&quot;: &quot;^2.3.0&quot;,&#xA;            &quot;zen-observable-ts&quot;: &quot;^1.2.5&quot;&#xA;          }&#xA;        },&#xA;}&#xA;</code></pre>&#xA;<p>Any suggestions?</p>&#xA;",12504153,,,,2022-09-07 11:36:15,"client.watchQuery cannot be called with fetchPolicy set to ""standby""",<reactjs><apollo-client>,1,0,0,2022-08-01 13:36:06
73198098,2,,72361047,0,,"<p>Just ran into this problem.&#xA;Apparently, the the new version <code>i.e. ^16</code> ,has a major <a href=""https://github.com/jaydenseric/graphql-upload/releases/tag/v16.0.0"" rel=""nofollow noreferrer"">update</a></p>&#xA;<p>now you need to do</p>&#xA;<p><code>const Upload = require('graphql-upload/Upload.mjs');</code></p>&#xA;<p>or</p>&#xA;<p><code>import { default as Upload } from 'graphql-upload/Upload.mjs';</code></p>&#xA;<p>Instead of <code>.js</code>, all the imports needs to be from <code>.mjs</code>.</p>&#xA;<p>Hope this helps!</p>&#xA;",5885373,,,,2022-08-01 18:30:15,"",,0,0,0,2022-08-01 18:30:15
73206268,2,,58271819,0,,"<p>There is an online converter:</p>&#xA;<p><a href=""https://datafetcher.com/graphql-json-body-converter"" rel=""nofollow noreferrer"">https://datafetcher.com/graphql-json-body-converter</a></p>&#xA;<p>But if use token address, you need add backslash before double quotes (tested in postman).&#xA;For example this is graphql query:</p>&#xA;<pre><code>{&#xA;  pairs(where: {token0: &quot;0x1381f369d9d5df87a1a04ed856c9dbc90f5db2fa&quot;, token1: &quot;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&quot;}) {&#xA;    token0 {&#xA;      name&#xA;      symbol&#xA;    }&#xA;    token0Price&#xA;    token1 {&#xA;      name&#xA;      symbol&#xA;    }&#xA;    token1Price&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And this is result of conversion to JSON from previous link:</p>&#xA;<pre><code>{&#xA;  &quot;query&quot;: &quot;{ pairs(where: {token0: &quot;0x1381f369d9d5df87a1a04ed856c9dbc90f5db2fa&quot;, token1: &quot;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&quot;}) { token0 { name symbol } token0Price token1 { name symbol } token1Price }}&quot;&#xA;}&#xA;</code></pre>&#xA;<p>Just add backslashes before double quotes near token addresses. Result:</p>&#xA;<pre><code>{&#xA;  &quot;query&quot;: &quot;{ pairs(where: {token0: \&quot;0x1381f369d9d5df87a1a04ed856c9dbc90f5db2fa\&quot;, token1: \&quot;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\&quot;}) { token0 { name symbol } token0Price token1 { name symbol } token1Price }}&quot;&#xA;}&#xA;</code></pre>&#xA;",19545224,,,,2022-08-02 10:50:44,"",,0,0,0,2022-08-02 10:50:44
73228575,2,,57828407,0,,<p>A late reply...</p>&#xA;<p>Had the same issue deploying ApolloServer to Heroku.</p>&#xA;<p>Adding the AUTH0_DOMAIN=&quot;xxx&quot; and API_IDENTIFIER=&quot;xxx&quot; to the Heroku Config Vars list worked.(i.e. use the values you would have in the local .env file)</p>&#xA;,3307965,,,,2022-08-03 22:44:32,"",,0,0,0,2022-08-03 22:44:32
73257603,2,,71919084,1,,"<p>It's a long topic to be covered that's exactly what I have started developing recently, the entire source code is available on Github at <a href=""https://github.com/mdarif/project-management"" rel=""nofollow noreferrer"">https://github.com/mdarif/project-management</a></p>&#xA;<p>This is MERN app where I have deployed Server/Client and MongoDB all in once on Heroku, there is also a Dockerize Version of the same MERN app available using Github Actions.</p>&#xA;<p>Below important things should be taken care of:</p>&#xA;<ul>&#xA;<li>Environment variables for Dev and Config Vars on Heroku</li>&#xA;<li>Add Handler to Client Build in <code>server/index.js or server.js</code></li>&#xA;</ul>&#xA;<pre><code>// Serve Frontend&#xA;if (process.env.NODE_ENV === 'production') {&#xA;  // Set build folder as static folder&#xA;  app.use(express.static(path.join(__dirname, '../client/build')))&#xA;&#xA;  app.get('*', (req, res) =&gt; {&#xA;    res.sendFile(path.join(__dirname, '../client/build/index.html'))&#xA;  })&#xA;} else {&#xA;  app.get('/', (req, res) =&gt; {&#xA;    res.status(200).json({ message: 'Welcome to the Project...' })&#xA;  })&#xA;}&#xA;</code></pre>&#xA;<ul>&#xA;<li>Add Scripts to package.json (server)</li>&#xA;</ul>&#xA;<pre><code>  &quot;scripts&quot;: {&#xA;    ...&#xA;    &quot;heroku-postbuild&quot;: &quot;NPM_CONFIG_PRODUCTION=false npm install --prefix client &amp;&amp; npm run build --prefix client&quot;&#xA;  },&#xA;</code></pre>&#xA;<ul>&#xA;<li>Make sure to test your client &amp; server build separately</li>&#xA;<li>Connecting Heroku to GitHub&#xA;<ul>&#xA;<li>Go to heroku.com</li>&#xA;<li>Choose Connect to GitHub as the deployment method</li>&#xA;<li>If your GitHub account isn’t connected to Heroku, do so</li>&#xA;<li>Search for, and choose the project repository we created in the previous step</li>&#xA;<li>Enable automatic deployments and select the deployment branch</li>&#xA;<li>Click on Deploy Branch</li>&#xA;</ul>&#xA;</li>&#xA;</ul>&#xA;<p>And that’s it! You’re done. Your app would now be deployed. If you face errors, you can debug them using Heroku’s logs.</p>&#xA;",181174,,,,2022-08-06 06:19:46,"",,0,0,0,2022-08-06 06:19:46
73281950,2,,60165374,0,,"<p>I also encountered a similar and weird kind of issue, as types were mentioned clearly but that wasn't accepted in variables by <a href=""https://www.npmjs.com/package/graphql-request"" rel=""nofollow noreferrer"">graphql-request</a> version <code>3.1.4</code>, I mapped them again in a variable that is working at my end so far.</p>&#xA;<pre><code>const variables = {&#xA;    orderId: +orderId,&#xA;    vendorIds: vendorIds.map(id =&gt; +id),&#xA;  };&#xA;</code></pre>&#xA;",10474176,,,,2022-08-08 17:34:58,"",,0,0,0,2022-08-08 17:34:58
73284703,1,,,1,256,"<p>I've been trying to get this combination working for a while and fiddled with versions &amp; compatibilities issue until I've hit this brick wall.</p>&#xA;<p>The app works in production once you build it -- it appears to solely be a vite issue when running in development mode.</p>&#xA;<p>I've created a minium repository where the issue is reproducible: <a href=""https://github.com/sebastiangug/nest-graphql-vite"" rel=""nofollow noreferrer"">https://github.com/sebastiangug/nest-graphql-vite</a></p>&#xA;<p>The graphql configuration:</p>&#xA;<pre><code>        const config: ApolloDriverConfig = {&#xA;          debug: true,&#xA;          playground: true,&#xA;          autoSchemaFile: 'schema.gql',&#xA;          sortSchema: true,&#xA;          path: &quot;/graphql&quot;,&#xA;          cors: {&#xA;            origin: ['*'],&#xA;          },&#xA;        };&#xA;</code></pre>&#xA;<p>Even if the request is not Graphql related, when the second HTTP request hits the server, vite attempts to do something that causes that schema error.</p>&#xA;<p>This seems to be a problem unique to this combination of tools.</p>&#xA;",10064334,,10064334,2022-08-08 23:08:40,2022-08-08 23:08:40,"NestJS + Vite + Graphql, playground loads once but then immediately throws ""Schema must contain uniquely named type"" reproducible git repo inside",<node.js><nestjs><vite><nestjs-graphql><vite-node>,0,0,0,2022-08-08 22:32:09
73318268,2,,73294299,0,,"<p>Here's how I solved it - the issue was caused by my local dev environment having tomcat9, and the staging/qa environment I was deploying to having tomcat7 (not supporting WebFlux properly).</p>&#xA;<p>Please note that the app.enable-cors is a property defined in my application.properties file - you will need to add this if you are just copying+pasting this code.</p>&#xA;<p>I created two configuration classes, overriding both the Mvc and WebFlux Configurer.addCorsMapping(CorsRegistry registry) method. Depending on which auto configuration is loaded, the correct overriden method will be run. Code as follows:</p>&#xA;<p>First, the WebFlux version</p>&#xA;<pre><code>import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;&#xA;import org.springframework.context.annotation.Configuration;&#xA;import org.springframework.web.reactive.config.CorsRegistry;&#xA;import org.springframework.web.reactive.config.WebFluxConfigurer;&#xA;&#xA;@Configuration&#xA;@ConditionalOnProperty(name = &quot;app.enable-cors&quot;, havingValue = &quot;true&quot;)&#xA;public class GraphQLWebFluxConfiguration implements WebFluxConfigurer {&#xA;    @Override&#xA;    public void addCorsMappings(CorsRegistry corsRegistry){&#xA;        corsRegistry.addMapping(&quot;/**&quot;)&#xA;                .allowedOrigins(&quot;*&quot;)&#xA;                .allowedHeaders(&quot;*&quot;)&#xA;                .allowedMethods(&quot;*&quot;);&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Secondly the MVC version</p>&#xA;<pre><code>import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;&#xA;import org.springframework.context.annotation.Configuration;&#xA;import org.springframework.web.servlet.config.annotation.CorsRegistry;&#xA;import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;&#xA;&#xA;@Configuration&#xA;@ConditionalOnProperty(name = &quot;app.enable-cors&quot;, havingValue = &quot;true&quot;)&#xA;public class GraphQLWebMvcConfiguration implements WebMvcConfigurer {&#xA;&#xA;    @Override&#xA;    public void addCorsMappings(CorsRegistry corsRegistry){&#xA;        corsRegistry.addMapping(&quot;/**&quot;)&#xA;                .allowedOrigins(&quot;*&quot;)&#xA;                .allowedHeaders(&quot;*&quot;)&#xA;                .allowedMethods(&quot;*&quot;);&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>I obviously have this disabled for the prod environment, but as a workaround for your QA/local environment it works well.</p>&#xA;",17270036,,17270036,2022-08-11 09:48:06,2022-08-11 09:48:06,"",,0,0,0,2022-08-11 09:19:25
73345508,2,,73345160,-1,,<p>Please run docker inspect command and you will get IP and then run through that ip in browser</p>&#xA;,8197898,,,,2022-08-13 15:25:16,"",,0,1,0,2022-08-13 15:25:16
73379691,1,74242927,,0,2774,"<p>So I have a serverless express application running in a Lambda. One request (response size around 800KB) keeps returning a <code>LAMBDA_RUNTIME Failed to post handler success response. Http response code: 413.</code> error.&#xA;I thought it could be due to some internal logic timing out, and added logs, and all the fetch and processing takes maximum 6 seconds, but the lamdba still returns this error.</p>&#xA;<p>These are the response headers</p>&#xA;<pre><code>x-amz-cf-pop: YTO50-C3&#xA;x-amzn-errortype: InternalServerErrorException&#xA;x-amzn-requestid: f291230-342-4324-324-cb7df188944c&#xA;x-cache: Error from cloudfront&#xA;</code></pre>&#xA;<p>The response size is definitely not too big, I am returning a response with right data, no errors are being thrown in the logs. Any idea why this could be happening? Also any suggestions on how I can debug this issue? Everything of course works in local, but is there a way for me debug the actual lambda? The logs I added indicate that the full process completes, yet somehow there is an error being returned.</p>&#xA;<p>Updated my serverless.yml config</p>&#xA;<pre><code>service: my-service&#xA;variablesResolutionMode: 20210326&#xA;useDotenv: true&#xA;&#xA;custom:&#xA;  serverless-offline:&#xA;    useChildProcesses: true&#xA;  webpack:&#xA;    webpackConfig: ./webpack.config.js&#xA;    packager: &quot;yarn&quot;&#xA;    includeModules: true&#xA;  prune:&#xA;    automatic: true&#xA;    includeLayers: true&#xA;    number: 3&#xA;  customDomain:&#xA;    domainName: &quot;abc.com&quot;&#xA;    basePath: &quot;val&quot;&#xA;    stage: ${someval}&#xA;    createRoute53Record: true&#xA;&#xA;plugins:&#xA;  - serverless-domain-manager&#xA;  - serverless-webpack&#xA;  - serverless-prune-plugin&#xA;  - serverless-webpack-prisma&#xA;  - serverless-offline&#xA;&#xA;provider:&#xA;  lambdaHashingVersion: &quot;20201221&quot;&#xA;  name: aws&#xA;  runtime: nodejs14.x&#xA;  region: us-east-1&#xA;  timeout: 30&#xA;  apiGateway:&#xA;    minimumCompressionSize: 1024 &#xA;  iamRoleStatements:&#xA;    - Effect: Allow&#xA;      Action: ssm:Get*&#xA;      Resource:&#xA;        - &quot;abc/${opt:stage}/backend/*&quot;&#xA;        - &quot;abc/${opt:stage}/services/*&quot;&#xA;    - Effect: Allow&#xA;      Action: kms:Decrypt&#xA;      Resource: &quot;*&quot;&#xA;    - Effect: &quot;Allow&quot;&#xA;      Action: s3:PutObject&#xA;      Resource: &quot;abc/*&quot;&#xA;    - Effect: &quot;Allow&quot;&#xA;      Action:&#xA;        - sns:Publish&#xA;      Resource: &quot;*&quot;&#xA;&#xA;  environment:&#xA;    - myvars: 'abc'&#xA;&#xA;functions:&#xA;  graphql:&#xA;    handler: src/index.graphqlHandler&#xA;    events:&#xA;      - http:&#xA;          path: /graphql&#xA;          method: options&#xA;      - http:&#xA;          path: /graphql&#xA;          method: get&#xA;      - http:&#xA;          path: /graphql&#xA;          method: post&#xA;</code></pre>&#xA;",2010545,,2010545,2022-08-16 20:22:29,2022-10-29 05:01:15,Unexpected LAMBDA_RUNTIME Failed to post handler success response. Http response code: 413 error,<amazon-web-services><express><aws-lambda><graphql><serverless>,1,3,0,2022-08-16 20:01:10
73391054,1,,,0,47,"<p>I'm migrating hasura from v1.1 (with config v1) to v2.10 (with config v3).&#xA;Locally, I had no issue. I followed <a href=""https://hasura.io/blog/migrating-from-hasura-v1-3-to-v2-0/"" rel=""nofollow noreferrer"">this guide</a></p>&#xA;<p>When deploying to test, I can't make it work.&#xA;I'm using the <code>hasura/graphql-engine.v2.9.10.cli-migrations-v3</code> image. I recreated my database to process from scratch.</p>&#xA;<p>I have the following error :</p>&#xA;<p><a href=""https://i.stack.imgur.com/8YZsh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8YZsh.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Test and local env are different on the following points :</p>&#xA;<ul>&#xA;<li>host and ip: (localhost:8080 on local VS classic DNS with 80 port for test env) but I used the <code>HASURA_GRAPHQL_ENDPOINT</code> to override the url with my DNS (for instance HASURA_GRAPHQL_ENDPOINT=https://my-custom-url.com)</li>&#xA;<li>In local, my db is &quot;default&quot; but its &quot;ebeton-recette&quot; in test env. But my metadata/databases/databases.yaml use</li>&#xA;</ul>&#xA;<p>When using the <code>hasura/graphql-engine.v2.9.10</code> image (without the suffix) it works and I can apply metadata/migrations using <code>--endpoint</code> and <code>--admin-secret</code> flags. But I really want the migrations and metadata to be auto applied when deploying...</p>&#xA;<p>The &quot;3) Server might me unhealthy...&quot; is indeed true because it fails instantly on deploy...</p>&#xA;",9977082,,,,2022-08-17 15:21:48,Hasura connecting to graphql-engine server failed,<graphql><hasura><hasura-docker><hasura-cli>,0,0,0,2022-08-17 15:21:48
73404572,2,,70791293,0,,"<p>As of 12.0.0, environment.getGraphQLContext() is not supported. This lack of support is referenced in the project's github (<a href=""https://github.com/graphql-java-kickstart/graphql-spring-boot/issues/808"" rel=""nofollow noreferrer"">https://github.com/graphql-java-kickstart/graphql-spring-boot/issues/808</a>)</p>&#xA;<p>As of version 13.0.0, you can access the HttpServletRequest by using</p>&#xA;<pre><code>HttpServletRequest httpServletRequest = environment.getGraphQlContext().get(HttpServletRequest.class);&#xA;</code></pre>&#xA;<p>If you need to use version 12.0.0, my suggestion would be to use a OncePerRequestFilter and store the header information you need in a ThreadLocal value. Just remember to clear that thread local value after the request has been processed. This will only work if you turn off &quot;async mode&quot; that the GraphQL library introduced in 11.0.0, as &quot;async mode&quot; processes the request filters and graphql resolvers in different threads.</p>&#xA;",1720720,,,,2022-08-18 14:12:10,"",,0,0,0,2022-08-18 14:12:10
73405006,2,,59788754,0,,"<p>I had the same error and what ended up being the issue for me was that I was using axios as the base api client for fetching graphql and my return was incorrect. After the post call I had to return <code>response.data</code></p>&#xA;<pre class=""lang-js prettyprint-override""><code>const client = getAxiosClient();&#xA;const res = await client.post(&quot;&quot;, query);&#xA;return res.data;&#xA;</code></pre>&#xA;<p>A few other issues I resolved were found by mimicking the configuration from this link:&#xA;<a href=""https://relay.dev/docs/getting-started/step-by-step-guide/"" rel=""nofollow noreferrer"">https://relay.dev/docs/getting-started/step-by-step-guide/</a></p>&#xA;",19718450,,19718450,2022-08-18 15:03:01,2022-08-18 15:03:01,"",,0,0,0,2022-08-18 14:41:18
73405734,1,,,0,18,"<p>Here is existing curl statement to get specific version&#xA;<strong>Request</strong></p>&#xA;<pre><code>curl -H &quot;Authorization: bearer &lt;&lt;****&gt;&gt;&quot; -d &quot; &#xA;    { \&quot;query\&quot;: \&quot;query { repository(owner: \\\&quot;EmpireSouthWest\\\&quot;, name: \\\&quot;esw-email\\\&quot;) &#xA;    { packages(names: \\\&quot;esw-email\\\&quot;, first: 1) &#xA;    { nodes {version(version: \\\&quot;1.0.0\\\&quot;){id,version } } } } }\&quot; } &quot; &#xA;    https://api.github.com/graphql&#xA;</code></pre>&#xA;<p>Response&#xA;`</p>&#xA;<pre><code>{&quot;data&quot;:{&quot;repository&quot;:{&quot;packages&quot;:{&quot;nodes&quot;:[]}}}}&#xA;</code></pre>&#xA;<p>`</p>&#xA;<p>This issue has been occurring since 2nd August 2022.</p>&#xA;<p>We are getting blank nodes in response, however we are seeing proper response from the same query for packages which were published before 2nd August 2022..</p>&#xA;<p>Request&#xA;`</p>&#xA;<pre><code>curl -H &quot;Authorization: bearer &lt;&lt;****&gt;&gt;&quot; -d &quot; &#xA;    { \&quot;query\&quot;: \&quot;query { repository(owner: \\\&quot;EmpireSouthWest\\\&quot;, name: \\\&quot;esw-rest-client\\\&quot;) &#xA;    { packages(names: \\\&quot;esw-rest-client\\\&quot;, first: 1) &#xA;    { nodes {version(version: \\\&quot;1.0.0\\\&quot;){id,version } } } } }\&quot; } &quot; &#xA;    https://api.github.com/graphql&#xA;</code></pre>&#xA;<p><code>Response</code></p>&#xA;<pre><code>{&quot;data&quot;:{&quot;repository&quot;:{&quot;packages&quot;:{&quot;nodes&quot;:[{&quot;version&quot;:{&quot;id&quot;:&quot;PV_lADOFt9JQc4AFowbzgE7XsQ&quot;,&quot;version&quot;:&quot;1.0.0&quot;}}]}}}}&#xA;</code></pre>&#xA;<p>`</p>&#xA;<p>We are able to publish new packages with new version on registry <a href=""https://npm.pkg.github.com/empiresouthwest"" rel=""nofollow noreferrer"">https://npm.pkg.github.com/empiresouthwest</a></p>&#xA;<p>When we access <a href=""https://npm.pkg.github.com/empiresouthwest/esw-header"" rel=""nofollow noreferrer"">https://npm.pkg.github.com/empiresouthwest/esw-header</a>, we get <code>{&quot;error&quot;:&quot;Permission denied&quot;}</code></p>&#xA;<p>Content of npmrc file</p>&#xA;<pre><code>registry=https://registry.npmjs.org/&#xA;@empiresouthwest:registry=https://npm.pkg.github.com/empiresouthwest&#xA;//npm.pkg.github.com/:_authToken=*******&#xA;legacy-peer-deps=true&#xA;python=C:\Python27\python.exe&#xA;</code></pre>&#xA;",8494529,,,,2022-08-18 15:29:12,We are not able to retrieve package details from GraphQL query,<javascript><github><graphql><npm-publish><go-cd>,0,0,0,2022-08-18 15:29:12
73409405,1,,,0,20,<p>I am new in the GraphQl world and I am currently trying to convert my API call to graphQl.</p>&#xA;<p>I am trying to make a call to the confluence and pass the page ID.</p>&#xA;<p><strong>This is the code which works without the page ID</strong> (This works)</p>&#xA;<pre><code>query SomeQuery {&#xA;    getConfluence&#xA;}&#xA;&#xA;//url = https://abc.atlassian.net/wiki/rest/api/content/?limit=1&#xA;</code></pre>&#xA;<p><strong>What I really want is to pass the page ID</strong> (Doesn't Work)</p>&#xA;<pre><code>//url = https://abc.atlassian.net/wiki/rest/api/content/12345&#xA;&#xA;query SomeQuery {&#xA;    getConfluence(pageId:&quot;12345&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>the above query doesn't display anything</p>&#xA;,3361650,,,,2022-08-18 21:02:50,GraphQL - writing query with dynamic value without any argument,<api><graphql><confluence>,0,0,0,2022-08-18 21:02:50
73413932,2,,73413756,0,,"<p>You can specify Authorization in your MutationType</p>&#xA;<pre><code>public class MutationType : ObjectType&lt;Mutation&gt;&#xA;{&#xA;    protected override void Configure(IObjectTypeDescriptor&lt;Mutation&gt; descriptor)&#xA;    {&#xA;&#xA;&#xA;        descriptor.Field(x =&gt; x.ImageAdd(default!, default!, default!))&#xA;            .Type&lt;ImageTye&gt;()&#xA;            .Name(&quot;AddImage&quot;) //Through this name you can access it in playground&#xA;            .Argument(&quot;productId&quot;, a =&gt; a.Type&lt;LongType&gt;())&#xA;            .Authorize(new[] { &quot;Specific Role&quot; });&#xA;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Make sure you add <code>.AddAuthorization()</code> and <code>.AddMutationType&lt;MutationType&gt;()</code> to services and <code>app.UseAuthentication();</code> as well.</p>&#xA;<p>If you choose this way you have to describe every Mutation this way, because you can only add one MutationType (use <code>.AddMutationType&lt;MutationType&gt;()</code> once)</p>&#xA;",18102554,,18102554,2022-08-19 08:41:39,2022-08-19 08:41:39,"",,0,2,0,2022-08-19 08:31:15
73452118,2,,72468595,0,,"<p>Here is the docker-compose.yaml that I use:</p>&#xA;<pre><code>version: &quot;3.2&quot;&#xA;services:&#xA;  zero:&#xA;    image: dgraph/dgraph:latest&#xA;    volumes:&#xA;      - d:/dgraph:/dgraph&#xA;    ports:&#xA;      - 5080:5080&#xA;      - 6080:6080&#xA;    restart: on-failure&#xA;    command: dgraph zero --my=zero:5080&#xA;  alpha:&#xA;    image: dgraph/dgraph:latest&#xA;    volumes:&#xA;      - d:/dgraph:/dgraph&#xA;    ports:&#xA;      - 8080:8080&#xA;      - 9080:9080&#xA;    restart: on-failure&#xA;    command: dgraph alpha --my=alpha:7080 --zero=zero:5080 --security whitelist=0.0.0.0/0&#xA;  ratel:&#xA;    image: dgraph/ratel:latest&#xA;    ports:&#xA;      - 8000:8000&#xA;    command: dgraph-ratel&#xA;</code></pre>&#xA;<p>Here whitelist=0.0.0.0/0 which I wouldn't leave it like that but this is a temporary test environment for me.</p>&#xA;<p>And in apollo (<a href=""https://studio.apollographql.com/sandbox/explorer"" rel=""nofollow noreferrer"">https://studio.apollographql.com/sandbox/explorer</a>) I can use:</p>&#xA;<pre><code>http://localhost:8080/graphql&#xA;http://localhost:8080/admin&#xA;</code></pre>&#xA;<p>Note: In my case I use local d:\DGraph for dgraph data folder.</p>&#xA;",894977,,,,2022-08-23 00:08:23,"",,0,0,0,2022-08-23 00:08:23
73462241,2,,73420172,0,,<p>I'm not exactly sure what it was but making sure all the schema was named correct everywhere relaunching VS Code and rerunning the server fixed it.  I think it was the linter getting confused on old version of the schema that were never getting pushed to it.</p>&#xA;,19730434,,,,2022-08-23 16:32:58,"",,0,0,0,2022-08-23 16:32:58
73475866,1,,,1,68,"<p>I am testing Hasura with docker on my localhost, and I would like to add a remote schema, from a graphql endpoint on my local environment (rails app, <code>http://localhost:3000/graphql</code>)</p>&#xA;<p>When I try to add the remote schema URL on Hasura (via <code>http://host.docker.internal:3000/graphql</code>), it fails with the following message:</p>&#xA;<pre><code>Adding remote schema failed&#xA;Error in $: Failed reading: not a valid json value at '&lt;!DOCTYPEhtml&gt;'&#xA;</code></pre>&#xA;<p>And, I have no log on my rails server.</p>&#xA;<p>I tried to use ngrok to have an <code>https</code> endpoint, (<code>https://6e12fa99336b.ngrok.io</code> forwarding to <code>localhost:3000</code>) but I had the same message. My ngrok console did show a post to <code>/graphql</code>, with <code>403 Forbidden</code>, and still no log on the rails server</p>&#xA;<p>However it works with a public external API (<code>https://countries.trevorblades.com/graphql</code> for instance)</p>&#xA;<p>Is there something that I am doing wrong, some headers missing ?</p>&#xA;",5764661,,,,2022-09-07 09:04:31,Add a remote schema on Hasura from localhost rails server fails,<ruby-on-rails><graphql><hasura>,1,2,0,2022-08-24 15:27:52
73486635,1,73489195,,0,123,"<p>I'm trying to run a NodeJS app with an AWS Lambda handler. My <code>package.json</code> is very simple:</p>&#xA;<pre><code>...&#xA;  &quot;dependencies&quot;: {&#xA;    &quot;aws-appsync&quot;: &quot;^4.1.7&quot;,&#xA;    &quot;aws-sdk&quot;: &quot;^2.1202.0&quot;,&#xA;    &quot;graphql-tag&quot;: &quot;^2.12.6&quot;&#xA;  }&#xA;</code></pre>&#xA;<p>When I try to run anything I get:</p>&#xA;<pre><code>&#xA;Invariant Violation: &#xA;fetch is not found globally and no fetcher passed, to fix pass a fetch for&#xA;your environment like https://www.npmjs.com/package/node-fetch.&#xA;&#xA;For example:&#xA;import fetch from 'node-fetch';&#xA;import { createHttpLink } from 'apollo-link-http';&#xA;&#xA;const link = createHttpLink({ uri: '/graphql', fetch: fetch });&#xA;    at new InvariantError (/Users/jamesdaniels/Code/node_modules/ts-invariant/lib/invariant.js:16:28)&#xA;    at Object.exports.checkFetcher (/Users/jamesdaniels/Code/node_modules/apollo-link-http-common/lib/index.js:65:15)&#xA;    at Object.createHttpLink (/Users/jamesdaniels/Code/node_modules/apollo-link-http/lib/bundle.umd.js:47:30)&#xA;    at Object.exports.createAppSyncLink (/Users/jamesdaniels/Code/node_modules/aws-appsync/lib/client.js:144:201)&#xA;    at new AWSAppSyncClient (/Users/jamesdaniels/Code/node_modules/aws-appsync/lib/client.js:214:72)&#xA;    at Object.&lt;anonymous&gt; (/Users/jamesdaniels/Code/utils/appsync.js:16:23)&#xA;</code></pre>&#xA;<p>The error appears to be with the <code>aws-appsync</code> package. The error only occurs when I introduce that to my app:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const AWS = require(&quot;aws-sdk&quot;) // Works fine&#xA;const AUTH_TYPE = require(&quot;aws-appsync&quot;).AUTH_TYPE;&#xA;const AWSAppSyncClient = require(&quot;aws-appsync&quot;).default;&#xA;&#xA;// GraphQL client config&#xA;const appSyncClientConfig = {&#xA;    url: &quot;https://xxxxxxxxxxxxxxxxx.appsync-api.eu-west-2.amazonaws.com/graphql&quot;,&#xA;    region: &quot;eu-west-2&quot;,&#xA;    auth: {&#xA;      type: AUTH_TYPE.AWS_IAM,&#xA;      credentials: AWS.config.credentials,&#xA;    },&#xA;    disableOffline: true,&#xA;  };&#xA;&#xA;// Initialise the AppSync client&#xA;const appSyncClient = new AWSAppSyncClient(appSyncClientConfig);&#xA;</code></pre>&#xA;<p>An error is thrown from dependent modules <code>aws-appsync</code> &gt; <code>apollo-link-http</code> &gt; <code>apollo-link-http-common</code>.</p>&#xA;",11664580,,11664580,2022-08-25 13:09:24,2022-08-25 14:20:12,"Invariant Violation: fetch is not found globally and no fetcher passed, to fix pass a fetch for your environment",<node.js><aws-lambda><aws-sdk><aws-appsync><graphql-tag>,1,0,0,2022-08-25 11:25:18
73489195,2,,73486635,0,,"<p>Turns out the error message was telling me exactly what I needed to know. <code>aws-appsync</code> isn't designed for a back-end environment. It's intended for front-end environments, where <code>fetch</code> is available globally. In the back-end we need to create our own global variable for our own fetch if we want it to be available for any node packages that we've installed.</p>&#xA;<p>The solution is to download <a href=""https://www.npmjs.com/package/node-fetch"" rel=""nofollow noreferrer""><code>node-fetch</code></a> and then follow the instructions in the &quot;Provide Global Access&quot; section:</p>&#xA;<p><strong>Providing global access</strong></p>&#xA;<p>To use fetch() without importing it, you can patch the global object in node:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// fetch-polyfill.js&#xA;import fetch, {&#xA;  Blob,&#xA;  blobFrom,&#xA;  blobFromSync,&#xA;  File,&#xA;  fileFrom,&#xA;  fileFromSync,&#xA;  FormData,&#xA;  Headers,&#xA;  Request,&#xA;  Response,&#xA;} from 'node-fetch'&#xA;&#xA;if (!globalThis.fetch) {&#xA;  globalThis.fetch = fetch&#xA;  globalThis.Headers = Headers&#xA;  globalThis.Request = Request&#xA;  globalThis.Response = Response&#xA;}&#xA;&#xA;// index.js&#xA;import './fetch-polyfill'&#xA;&#xA;// ...&#xA;</code></pre>&#xA;",11664580,,,,2022-08-25 14:20:12,"",,0,0,0,2022-08-25 14:20:12
73496424,2,,72927879,0,,"<p>On my machine, Next.js didn't work if, in Windows Terminal, the disk letter (for example, <code>C:</code>) of the &quot;current directory&quot; was written in lowercase (as <code>c:</code> in this example).</p>&#xA;<p>After I changed the current directory from <code>c:\dev\project</code> to <code>C:\dev\project</code>, the error went away.</p>&#xA;<p>Source: <a href=""https://github.com/vercel/next.js/issues/7626#issuecomment-541430221"" rel=""nofollow noreferrer"">https://github.com/vercel/next.js/issues/7626#issuecomment-541430221</a></p>&#xA;",970769,,,,2022-08-26 05:27:25,"",,0,0,0,2022-08-26 05:27:25
73497456,2,,73497385,0,,"<p><code>Graphql-sequelize</code> does not support version <code>^16</code> of <code>graphql</code> only up until version <code>^14</code></p>&#xA;<p><a href=""https://github.com/mickhansen/graphql-sequelize/blob/master/package.json"" rel=""nofollow noreferrer"">Graphql sequelize Package.json</a></p>&#xA;<pre class=""lang-bash prettyprint-override""><code>  &quot;peerDependencies&quot;: {&#xA;    ...&#xA;    &quot;graphql&quot;: &quot;^0.5.0 || ^0.6.0 || ^0.7.0 || ^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14&quot;,&#xA;    ...&#xA;  },&#xA;</code></pre>&#xA;",11941549,,,,2022-08-26 07:23:21,"",,0,0,0,2022-08-26 07:23:21
73503999,1,,,0,7,"<p>I have developed a GraphQL server and used Heroku to deploy it. I can see that I'm able to connect to the deployed site properly, but when I add /graphql, I receive the following message where it asks me to make a post request. Is there a way to avoid this and be able to access the graphql playground or is this expected? Also please let me know if I need to do some changes in the code to avoid this. Actually I don't have an issue if the query made from my React app would be successful, however I doubt for that to happen considering the message. Please have a look at the image below.&#xA;<a href=""https://i.stack.imgur.com/ntkbL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ntkbL.png"" alt=""enter image description here"" /></a></p>&#xA;",17945646,,,,2022-08-26 16:26:00,Issue while connecting to GraphQL server after deployment,<heroku><graphql><heroku-cli>,0,0,0,2022-08-26 16:26:00
73531304,1,,,0,16,"<p>When I connect my other module to the main application using npm link, an error appears: &quot;Cannot use GraphQLObjectType &quot;Query&quot; from another module or realm.&quot;</p>&#xA;<p>Graphql versions are the same in both modules.&#xA;There are no other graphics folders in the node_modules folder&#xA;All versions of graphql in npm ls are identical. What could be the problem?&#xA;GraphQL added to peerDependencies in the plug-in&#xA;The options with the removal of package-lock, resolution and npm dedupe did not work. And the problem only occurs with npm link.</p>&#xA;",19872088,,,,2022-08-29 15:44:18,"Multiple ""graphql"" instances with npm link",<javascript><node.js><typescript><graphql-js>,0,2,0,2022-08-29 15:44:18
73531675,1,,,0,18,"<p>I published my first and only Gatsby V3 site about a year ago via FTP. The site uses Wordpress with GraphQL as a Backend.&#xA;My clients wished to update the site themselves so I wanted to switch to Vercel and deploying via a deploy hook.&#xA;The deployment does seem to work but the content (example <code>&lt;h3&gt;Foo&lt;/h3&gt;</code> from a previous edit instead of <code>&lt;h3&gt;Fink&lt;/h3&gt;</code>) is not shown on the <a href=""https://fink.studio/about"" rel=""nofollow noreferrer"">live site</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/7VLQZ.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7VLQZ.jpg"" alt=""enter image description here"" /></a></p>&#xA;<p>Despite logging on Vercel</p>&#xA;<p><a href=""https://i.stack.imgur.com/4UGSB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4UGSB.png"" alt=""enter image description here"" /></a></p>&#xA;<p>It does work on the local site, especially after cleaning the local environment.&#xA;From what I understand, Vercel automatically builds the Site ( as suggested <a href=""https://stackoverflow.com/questions/63564882/gatsby-site-deployed-on-netlify-not-updating-data-from-graphcms"">here</a> ) and should therefore update the content.</p>&#xA;<p>What could be the issue? And is there a way of cleaning the environment on the live server? I'd rather have them wait a while than not deploying at all.</p>&#xA;<p>Full disclosure: I do get a couple of dependency warnings and one error <code>error Could not check if Gatsby supports onPluginInit lifecycle</code> in Vercel but I highly doubt that that is the issue since it sporadically does update the content</p>&#xA;",7095568,,5585371,2022-08-30 05:04:11,2022-08-30 05:04:11,Content of Gatsby site not fetched on deploy via Vercel,<wordpress><graphql><vercel>,0,0,0,2022-08-29 16:14:31
73537959,1,,,1,51,"<pre>CONTAINER ID   IMAGE                           COMMAND                   CREATED          STATUS                          PORTS                                       NAMES&#xA;9894549e2edd   hasura/graphql-engine:v2.10.1   &quot;/bin/sh -c &apos;\&quot;${HGE_…&quot;   29 seconds ago   Up Less than a second           0.0.0.0:8080-&gt;8080/tcp, :::8080-&gt;8080/tcp   backend-graphql-engine-1&#xA;03af36df02d1   postgres:10                     &quot;docker-entrypoint.s…&quot;    29 seconds ago   Restarting (1) 11 seconds ago                                               backend-postgres-1&#xA;</pre>&#xA;",17508957,,,,2022-09-02 10:09:57,hasura/graphql engine always restarting while i user online heroku db,<docker><graphql><restart><hasura>,1,1,0,2022-08-30 06:23:30
73538206,2,,73538099,2,,"<p><code>hotelDetails</code> is resulting in undefined simply because <code>data.getHotelDetailsByIds.items[0]</code> (and <code>data.getHotelDetailsByIds</code> in the previous version of your question) is undefined. When you inspect <code>data</code>, you should see the issue.</p>&#xA;",3145115,,3145115,2022-08-30 07:04:12,2022-08-30 07:04:12,"",,0,2,0,2022-08-30 06:46:44
73550649,1,,,0,103,"<p>I am encountering a weird CORS issue when using C# ASP.NET Core 3.1 and GraphQL (Version=&quot;3.3.2&quot;). In the <code>Startup.cs</code> file, I have setup the UseCors like this:</p>&#xA;<pre><code>public void Configure(IApplicationBuilder app, ILoggerFactory loggerFactory)&#xA;{&#xA;    if (Environment.IsDevelopment())&#xA;    {&#xA;        app.UseDeveloperExceptionPage();&#xA;    }&#xA;&#xA;    app.UseCors (x =&gt; x&#xA;                .AllowAnyOrigin ()&#xA;                .AllowAnyMethod ()&#xA;                .AllowAnyHeader ());&#xA;            ...&#xA;}&#xA;</code></pre>&#xA;<p>And also create a <code>ConfigureCors</code> function like this:</p>&#xA;<pre><code>private void ConfigureCors(IServiceCollection services)&#xA;{&#xA;    var requestOrigins = Configuration.GetSection(&quot;RequestOrigins&quot;)?&#xA;                .GetChildren()&#xA;                .Select(url =&gt; url.Value)&#xA;                .ToArray() ?? new string[] {};&#xA;            &#xA;    services.AddCors(options =&gt;&#xA;            {&#xA;                options.AddPolicy(name: AllowSpecificOrigins,&#xA;                    builder =&gt;&#xA;                    {&#xA;                        builder.WithOrigins(requestOrigins)&#xA;                            .AllowAnyHeader()&#xA;                            .AllowCredentials()&#xA;                            .AllowAnyMethod();&#xA;                    });&#xA;            });&#xA;}&#xA;</code></pre>&#xA;<p>Called the <code>ConfigureCors</code> like this:</p>&#xA;<pre><code>public void ConfigureServices(IServiceCollection services)&#xA;{&#xA;         ConfigureCors(services);&#xA;         ...&#xA;}&#xA;</code></pre>&#xA;<p>In <code>appsetting.{env}.json</code>, I set the <code>RequestOrigins</code>:</p>&#xA;<pre><code>&quot;RequestOrigins&quot;: [&#xA;    &quot;http://localhost:8889&quot;&#xA;  ]&#xA;</code></pre>&#xA;<p>When using frontend React to call the mutation like this:</p>&#xA;<pre><code>const link = new HttpLink({&#xA;  uri: 'https://localhost:5001/graphql/v1',&#xA;  fetchOptions: {&#xA;    credentials: 'include'&#xA;  },&#xA;  headers : {Authorization: `Bearer ${localStorage.getItem('Token')}`}&#xA;})&#xA;&#xA;export default new ApolloClient({&#xA;  link,&#xA;  cache&#xA;});&#xA;</code></pre>&#xA;<p>It will throw the CORS issue:</p>&#xA;<blockquote>&#xA;<p>Access to fetch at 'https://localhost:5001/graphql/v1' from origin 'http://localhost:8889' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: The value of the 'Access-Control-Allow-Origin' header in the response must not be the wildcard '*' when the request's credentials mode is 'include'.</p>&#xA;</blockquote>&#xA;<p>However the backend log shows:</p>&#xA;<blockquote>&#xA;<p>info: Microsoft.AspNetCore.Hosting.Diagnostics[1]<br />&#xA;Request starting HTTP/1.1 OPTIONS https://localhost:5001/graphql/v1</p>&#xA;<p>info: Microsoft.AspNetCore.Cors.Infrastructure.CorsService[4]<br />&#xA;CORS policy execution successful.</p>&#xA;</blockquote>&#xA;<p>I am very confused:</p>&#xA;<ol>&#xA;<li>Why are the <code>OPTIONS</code> not the <code>POST</code>, since I am calling a graphql mutation?</li>&#xA;<li>Why backend shows CORS policy execution successful, but frontend got CORS blocker?</li>&#xA;</ol>&#xA;<p>However, if I commented out the Authentication part like this:</p>&#xA;<pre><code>const link = new HttpLink({&#xA;      uri: 'https://localhost:5001/graphql/v1',&#xA;      //fetchOptions: {&#xA;        //credentials: 'include'&#xA;      //},&#xA;      //headers : {Authorization: `Bearer ${localStorage.getItem('Token')}`}&#xA;    })&#xA;</code></pre>&#xA;<p>Got the authorization failed error, but not CORS blocker. The token I have validated work in Postman. If I remove the <code>app.UseCors</code>, the CORS blocker comes back which is understandable. My guess is some CORS related configuration I didn't do right, but not sure which part, anyone knows what's going on? Thanks a lot!</p>&#xA;",4985852,,13302,2022-08-31 04:04:18,2022-08-31 07:42:03,CORS Origin issue using ASP.NET Core 3.1,<c#><reactjs><asp.net-core><graphql>,1,4,0,2022-08-31 03:44:09
73551482,1,73626420,,-2,427,"<p>I've been reading posts about CORS the last two days, and tried every?.. combination of tips, but still can't get this working.</p>&#xA;<p>I used Node and installed 'graphql', 'express' and 'express-graphql'.</p>&#xA;<p>The GraphiQL GUI page works fine. Server running at :6969</p>&#xA;<p>Then I have a web-server that I also installed with Node for my front-end running at :8000&#xA;It's installed globally with -g. I'd be amazed it matters thought. And when I try to make requests to the API I get this error in my browser:</p>&#xA;<blockquote>&#xA;<p>Access to fetch at 'http://127.0.0.1:6969/graphql' from origin&#xA;'http://127.0.0.1:8000' has been blocked by CORS policy: Response to&#xA;preflight request doesn't pass access control check: No&#xA;'Access-Control-Allow-Origin' header is present on the requested&#xA;resource. If an opaque response serves your needs, set the request's&#xA;mode to 'no-cors' to fetch the resource with CORS disabled.</p>&#xA;</blockquote>&#xA;<p>Why am I getting CORS errors when they have the same origin? Because they are listed at different ports?</p>&#xA;<p>I have tried installing an configuring 'cors' in my GraphQL-server. It didn't change anything.&#xA;I have tried modifying my request using:</p>&#xA;<pre><code>mode: 'no-cors'&#xA;</code></pre>&#xA;<p>which only give me: 400 Bad request. I believe an opaque response is not what I want anyway.&#xA;And I have tried adding these to my request.</p>&#xA;<pre><code>mode: 'cors'&#xA;credentials: 'include',&#xA;</code></pre>&#xA;<p>I have also tried modifying the header. This is the different headers I have tried:</p>&#xA;<pre><code>let headers = new Headers()&#xA;headers.append('Content-Type', 'application/json')&#xA;headers.append('Accept', 'application/json')&#xA;headers.append('Origin',' http://127.0.0.1:6969/graphql')&#xA;headers.append('Access-Control-Allow-Origin', 'http://127.0.0.1:6969/graphql')&#xA;headers.append('Access-Control-Allow-Origin', '*')&#xA;headers.append('Access-Control-Allow-Credentials', 'true')&#xA;headers.append('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept')&#xA;</code></pre>&#xA;<p>I have also tried accessing from different IP's but I still can't escape this error.&#xA;I just don't understand where the &quot;crossing&quot; is supposed to be?</p>&#xA;<p>Here is the rest of my request:</p>&#xA;<p>...</p>&#xA;<pre><code>fetch(' http://127.0.0.1:6969/graphql', {&#xA;        // mode: 'cors',&#xA;        // mode: 'no-cors',&#xA;        credentials: 'include',&#xA;        method: 'POST',&#xA;        headers: headers,&#xA;        // headers: {'Content-Type': 'application/json'},&#xA;        body: JSON.stringify(requestBody),&#xA;    })&#xA;    .then(res =&gt; {&#xA;        if (res.status !== 200 &amp;&amp; res.status !== 201) {&#xA;            throw new Error('Failed HTTP request!')&#xA;        }&#xA;        return res.json()&#xA;    })&#xA;    .then(resData =&gt; {&#xA;        window.thisDiv.innerHTML = resData.data&#xA;    })&#xA;    .catch(err =&gt; {&#xA;        window.thisDiv.innerHTML = `Server error! ${err}`&#xA;    })&#xA;}&#xA;</code></pre>&#xA;",6926199,,,,2022-09-06 18:55:54,"Unable to connect to GraphQL API with fetch, getting CORS error",<node.js><graphql><cors>,2,5,0,2022-08-31 06:02:59
73563418,2,,73551482,-2,,<p>I found a temporary solution by Aditya Patnaik in a thread about CORS and localhost.</p>&#xA;<p>Just Run this line:</p>&#xA;<h2>Disable web security and site isolation trials in Chrome</h2>&#xA;<pre><code>chrome.exe  --disable-site-isolation-trials --disable-web-security --user-data-dir=&quot;PATH_TO_PROJECT_DIRECTORY&quot;&#xA;</code></pre>&#xA;<p>PS: chrome added around 800 files and 300 folder to my directory. I'm still looking for a simpler solution where I only change the appropriate header or make the cors package work.</p>&#xA;,6926199,,,,2022-09-01 01:24:49,"",,0,0,0,2022-09-01 01:24:49
73567139,2,,71981671,0,,"<p>I bumped into the same problem when upgrading my existing setup with FeathersJS and Apollo to Apollo 3. For me I was able to fix it, when I finally figured that for some reason the FeathersJS not found middleware was being triggered instead of the Apollo one. My quick fix was to modify app.js as such:</p>&#xA;<pre><code>const notFound = express.notFound();&#xA;app.use(function (req, res, next) {&#xA;  const isGraphQl = req.url.startsWith('/graphql');&#xA;  return isGraphQl ? next() : notFound(req, res, next);&#xA;});&#xA;</code></pre>&#xA;<p>There's probably some better way to do it and it's probably somehow related to some async code running at the wrong time, but this at least fixed it for me.</p>&#xA;<p><strong>Update:</strong></p>&#xA;<p>The problem was caused by the Apollo handler registering after the notFound handler. I fixed this by turning my whole Feathers app initialization into an async function. In app.js:</p>&#xA;<pre><code>async function getApp() {&#xA;  const app = express(feathers());&#xA;  app.configureAsync = async function configureAsync(fn) {&#xA;    await fn.call(this, this);&#xA;&#xA;    return this;&#xA;  };&#xA;  ...&#xA;  await app.configureAsync(graphQLService);&#xA;  ...&#xA;  return app;&#xA;}&#xA;</code></pre>&#xA;<p>Then in index.js:</p>&#xA;<pre><code>async function start() {&#xA;  const app = await getApp();&#xA;  const port = app.get('port');&#xA;  const server = app.listen(port);&#xA;&#xA;  server.on('listening', () =&gt;&#xA;    logger.info('Feathers application started on http://%s:%d', app.get('host'), port)&#xA;  );&#xA;}&#xA;&#xA;start();&#xA;</code></pre>&#xA;<p>You can take a look at my code here: <a href=""https://github.com/Purrrrrr/Tanssiaistietokanta/tree/main/backend"" rel=""nofollow noreferrer"">https://github.com/Purrrrrr/Tanssiaistietokanta/tree/main/backend</a></p>&#xA;",19894525,,19894525,2022-09-01 09:55:05,2022-09-01 09:55:05,"",,0,0,0,2022-09-01 09:32:24
73578519,1,,,0,27,"<p>I have update the @graphql-mesh with to latest version and below are the packages</p>&#xA;<pre><code> &quot;@graphql-mesh/config&quot;: &quot;^6.1.0&quot;,&#xA; &quot;@graphql-mesh/graphql&quot;: &quot;^0.29.12&quot;,&#xA; &quot;@graphql-mesh/openapi&quot;: &quot;^0.31.2&quot;,&#xA; &quot;@graphql-mesh/runtime&quot;: &quot;0.42.2&quot;,&#xA; &quot;@graphql-mesh/soap&quot;: &quot;0.12.12&quot;&#xA;</code></pre>&#xA;<p>After upgrade I got error for below function</p>&#xA;<pre><code>import { findAndParseConfig } from '@graphql-mesh/cli';&#xA;</code></pre>&#xA;<p>findAndParseConfig is not available in latest version. Can anyone suggest from which module I can call this function or is there any alternative to do so?</p>&#xA;<p>Added same on github as well:</p>&#xA;<p><a href=""https://github.com/OpenSourceHelpCommunity/Questions/issues/109"" rel=""nofollow noreferrer"">https://github.com/OpenSourceHelpCommunity/Questions/issues/109</a></p>&#xA;",3082137,,,,2022-09-05 07:05:36,Unable to update @graphql-mesh,<graphql><graphql-mesh>,1,0,0,2022-09-02 06:21:36
73601169,1,,,0,106,"<p>I am using <a href=""https://github.com/apollographql/apollo-kotlin"" rel=""nofollow noreferrer"">Apollo GraphQL Android</a>, And recently I have been getting many crashes in <code>Android vitals</code> in the Google play console.</p>&#xA;<p><img src=""https://i.stack.imgur.com/aOhh4.png"" alt=""Google play console stats"" /></p>&#xA;<p>Here is my current config for <code>ApolloClient</code>.</p>&#xA;<pre><code>ApolloClient.Builder()&#xA;                .serverUrl(SERVER_URL)&#xA;                .build()&#xA;</code></pre>&#xA;<p>Log from google play console</p>&#xA;<pre><code>Exception : android.system.GaiException android_getaddrinfo failed&#xA;  at android.app.ActivityThread.performLaunchActivity (ActivityThread.java:3921)&#xA;  at android.app.ActivityThread.handleLaunchActivity (ActivityThread.java:4078)&#xA;  at android.app.servertransaction.LaunchActivityItem.execute (LaunchActivityItem.java:103)&#xA;  at android.app.servertransaction.TransactionExecutor.executeCallbacks (TransactionExecutor.java:135)&#xA;  at android.app.servertransaction.TransactionExecutor.execute (TransactionExecutor.java:95)&#xA;  at android.app.ActivityThread$H.handleMessage (ActivityThread.java:2423)&#xA;  at android.os.Handler.dispatchMessage (Handler.java:106)&#xA;  at android.os.Looper.loopOnce (Looper.java:233)&#xA;  at android.os.Looper.loop (Looper.java:334)&#xA;  at android.app.ActivityThread.main (ActivityThread.java:8333)&#xA;  at java.lang.reflect.Method.invoke (Method.java)&#xA;  at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run (RuntimeInit.java:582)&#xA;  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:1065)&#xA;Caused by io.dHWJSxa.ba: Failed to execute GraphQL http network request&#xA;  at com.apollographql.apollo3.network.http.DefaultHttpEngine.execute (DefaultHttpEngine.java:12)&#xA;  at com.apollographql.apollo3.network.http.HttpNetworkTransport$EngineInterceptor.intercept (HttpNetworkTransport.java:2)&#xA;  at com.apollographql.apollo3.network.http.DefaultHttpInterceptorChain.proceed (DefaultHttpInterceptorChain.java)&#xA;  at com.apollographql.apollo3.api.http.HttpResponse.getHeaders (HttpResponse.java)&#xA;  at com.apollographql.apollo3.network.http.DefaultHttpInterceptorChain.proceed (DefaultHttpInterceptorChain.java)&#xA;  at com.w3saver.typography.api.RequestInterceptor.intercept (RequestInterceptor.java:10)&#xA;  at com.apollographql.apollo3.network.http.DefaultHttpInterceptorChain.proceed (DefaultHttpInterceptorChain.java:6)&#xA;  at com.apollographql.apollo3.network.http.HttpNetworkTransport$execute$1.invokeSuspend (HttpNetworkTransport.java:6)&#xA;  at com.apollographql.apollo3.network.http.HttpNetworkTransport$execute$1.invoke (HttpNetworkTransport.java:2)&#xA;  at kotlinx.coroutines.flow.SafeFlow.collectSafely (SafeFlow.java:3)&#xA;  at kotlinx.coroutines.flow.AbstractFlow.collect (AbstractFlow.java:3)&#xA;  at kotlinx.coroutines.flow.internal.ChannelFlowOperatorImpl.flowCollect (ChannelFlowOperatorImpl.java)&#xA;  at kotlinx.coroutines.flow.internal.ChannelFlowOperator.collect$suspendImpl (ChannelFlowOperator.java:1)&#xA;  at kotlinx.coroutines.flow.FlowKt__ReduceKt.single (FlowKt__ReduceKt.java:1)&#xA;  at kotlinx.coroutines.flow.FlowKt.single (FlowKt.java:1)&#xA;  at com.apollographql.apollo3.ApolloCall.execute (ApolloCall.java:25)&#xA;  at com.w3saver.typography.UserInitialPingQuery$Data.getGetUser (UserInitialPingQuery.java)&#xA;  at com.xxx.xxx.HomeActivity$fetchUseCaseRequestAndStoreInitialData$1$1.invokeSuspend (HomeActivity.java)&#xA;  at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith (BaseContinuationImpl.java)&#xA;  at kotlinx.coroutines.DispatchedTask.run (DispatchedTask.java)&#xA;  at kotlinx.coroutines.internal.LimitedDispatcher.run (LimitedDispatcher.java)&#xA;  at kotlinx.coroutines.scheduling.TaskImpl.run (TaskImpl.java)&#xA;  at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely (CoroutineScheduler.java)&#xA;  at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask (CoroutineScheduler.java:5)&#xA;Caused by java.net.UnknownHostException: Unable to resolve host &quot;***app.com&quot;: No address associated with hostname&#xA;  at java.net.Inet6AddressImpl.lookupHostByName (Inet6AddressImpl.java:156)&#xA;  at java.net.Inet6AddressImpl.lookupAllHostAddr (Inet6AddressImpl.java:103)&#xA;  at java.net.InetAddress.getAllByName (InetAddress.java:1152)&#xA;  at okhttp3.Dns$Companion$DnsSystem.lookup (Dns.java)&#xA;  at okhttp3.internal.connection.RouteSelector.resetNextInetSocketAddress (RouteSelector.java:30)&#xA;  at okhttp3.internal.connection.ExchangeFinder.findConnection (ExchangeFinder.java:30)&#xA;  at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection (ExchangeFinder.java:30)&#xA;  at okhttp3.internal.connection.ExchangeFinder.find (ExchangeFinder.java:12)&#xA;  at okhttp3.internal.connection.RealCall.initExchange$okhttp (RealCall.java:12)&#xA;  at okhttp3.internal.connection.ConnectInterceptor.intercept (ConnectInterceptor.java:12)&#xA;  at okhttp3.internal.http.RealInterceptorChain.proceed (RealInterceptorChain.java:3)&#xA;  at okhttp3.internal.cache.CacheInterceptor.intercept (CacheInterceptor.java:27)&#xA;  at okhttp3.internal.http.RealInterceptorChain.proceed (RealInterceptorChain.java:3)&#xA;  at okhttp3.internal.http.BridgeInterceptor.intercept (BridgeInterceptor.java:28)&#xA;  at okhttp3.internal.http.RealInterceptorChain.proceed (RealInterceptorChain.java:3)&#xA;  at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept (RetryAndFollowUpInterceptor.java:26)&#xA;  at okhttp3.internal.http.RealInterceptorChain.proceed (RealInterceptorChain.java:3)&#xA;  at okhttp3.internal.connection.RealCall.getResponseWithInterceptorChain$okhttp (RealCall.java:10)&#xA;  at okhttp3.internal.connection.RealCall.execute (RealCall.java:7)&#xA;Caused by android.system.GaiException: android_getaddrinfo failed: EAI_NODATA (No address associated with hostname)&#xA;  at libcore.io.Linux.android_getaddrinfo (Linux.java)&#xA;  at libcore.io.ForwardingOs.android_getaddrinfo (ForwardingOs.java:133)&#xA;  at libcore.io.BlockGuardOs.android_getaddrinfo (BlockGuardOs.java:222)&#xA;  at libcore.io.ForwardingOs.android_getaddrinfo (ForwardingOs.java:133)&#xA;  at java.net.Inet6AddressImpl.lookupHostByName (Inet6AddressImpl.java:135)&#xA;</code></pre>&#xA;<p>I cannot reproduce it on my device but 8% of my users are affected by this exception.</p>&#xA;<p>network_security_config.xml</p>&#xA;<pre><code>&lt;network-security-config&gt;&#xA;    &lt;base-config cleartextTrafficPermitted=&quot;false&quot;/&gt;&#xA;    &lt;domain-config cleartextTrafficPermitted=&quot;true&quot;&gt;&#xA;        &lt;domain includeSubdomains=&quot;true&quot;&gt;192.168.1.14&lt;/domain&gt;&#xA;    &lt;/domain-config&gt;&#xA;&lt;/network-security-config&gt;&#xA;</code></pre>&#xA;",7405050,,7405050,2022-09-04 17:06:19,2022-09-04 17:06:19,Having android.system.GaiException in Apollo Android GraphQL,<android><graphql>,0,0,0,2022-09-04 16:47:52
73606741,2,,73567795,0,,"<p>After running 'gatsby develop' in command, I realized there's an error showing&#xA;ERROR #11467</p>&#xA;<p>The new node didn't pass validation: &quot;internal.contentFilePath&quot; is not allowed&#xA;<a href=""https://i.stack.imgur.com/GULoa.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GULoa.png"" alt=""Error Message"" /></a></p>&#xA;<p>So after researching, it seems that all I had to do was upgrade gatsby.&#xA;'npm upgrade gatsby' solved the issue.</p>&#xA;<p>Now my graphql allMdx shows frontmatter:&#xA;<a href=""https://i.stack.imgur.com/i7g5E.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/i7g5E.png"" alt=""graphql resolved"" /></a></p>&#xA;",18307675,,,,2022-09-05 08:45:41,"",,0,0,0,2022-09-05 08:45:41
73626902,2,,70695974,0,,"<p>This worked for me Strapi v.4 on Heroku with postgreSQL</p>&#xA;<p>config/plugins.js</p>&#xA;<pre><code>module.exports = ({ env }) =&gt; ({        &#xA;  graphql: {&#xA;    enabled: true,&#xA;    config: {&#xA;      endpoint: &quot;/graphql&quot;,&#xA;      shadowCRUD: true,&#xA;      playgroundAlways: true,&#xA;      defaultLimit: 10,&#xA;      maxLimit: 20,&#xA;      apolloServer: {&#xA;        tracing: true,&#xA;      },&#xA;    },&#xA;  },&#xA;});&#xA;</code></pre>&#xA;",3487579,,3487579,2022-09-06 20:18:39,2022-09-06 20:18:39,"",,0,0,0,2022-09-06 19:28:15
73632762,2,,73475866,0,,"<p>Ok, finally got it ! The issue was with rails, not having <code>host.docker.internal</code> as a registered host, thus rendering an HTML error page.&#xA;After adding <code>host.docker.internal</code> to <code>config.host</code> everything worked.</p>&#xA;",5764661,,,,2022-09-07 09:04:31,"",,0,0,0,2022-09-07 09:04:31
73634816,2,,73194556,0,,<p>Downgrading the version of <code>&quot;@apollo/react-hooks&quot;: &quot;^4.0.0&quot;</code> to <code>&quot;@apollo/react-hooks&quot;: &quot;~3.1.3&quot;</code> in the package.json is working for me.</p>&#xA;<p>The <code>&quot;@apollo/react-hooks&quot;: &quot;^4.0.0&quot;</code> requires the internal dependency of <code>&quot;@apollo/client&quot;: &quot;^3.6.9&quot;</code> which is causing the issue. <strong>So downgrading the version of <code>@apollo/client</code> won't work when <code>&quot;@apollo/react-hooks&quot;: &quot;^4.0.0&quot;</code> is used.</strong></p>&#xA;,19940365,,,,2022-09-07 11:36:15,"",,0,0,0,2022-09-07 11:36:15
73728540,2,,71453813,0,,<p>You can do it in codecov.yml (external tools)</p>&#xA;<p>...&#xA;...&#xA;...</p>&#xA;<p>ignore:</p>&#xA;<ul>&#xA;<li>&quot;path-for-file-to-ignore&quot;</li>&#xA;</ul>&#xA;,5388157,,,,2022-09-15 09:17:20,"",,0,0,0,2022-09-15 09:17:20
73728643,1,,,0,88,"<p>I am getting the error <code>could not find react-redux context value; please ensure the component is wrapped in a &lt;Provider&gt;</code> even after adding the shared dependencies with singleton as true. The QuoteCardContainer makes a graphql call, so i added <code>@apollo/graphql</code> and <code>graphql</code> as shared dependencies as well.</p>&#xA;<p><a href=""https://i.stack.imgur.com/hYdAz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hYdAz.png"" alt=""enter image description here"" /></a></p>&#xA;<p>PFB the relevant webpack configuration (same for my remotes and host).</p>&#xA;<pre><code>shared: {&#xA;          ...dependencies,&#xA;          react: {&#xA;            singleton: true,&#xA;            requiredVersion: dependencies[&quot;react&quot;],&#xA;          },&#xA;          &quot;react-dom&quot;: {&#xA;            singleton: true,&#xA;            requiredVersion: dependencies[&quot;react-dom&quot;],&#xA;          },&#xA;          &quot;react-router-dom&quot;: {&#xA;            singleton: true,&#xA;            requiredVersion: dependencies[&quot;react-router-dom&quot;],&#xA;          },&#xA;          redux: {&#xA;            singleton: true,&#xA;            requiredVersion: dependencies[&quot;redux&quot;],&#xA;          },&#xA;          &quot;redux-saga&quot;: {&#xA;            singleton: true,&#xA;            requiredVersion: dependencies[&quot;redux-saga&quot;],&#xA;          },&#xA;          &quot;react-redux&quot;: {&#xA;            singleton: true,&#xA;            requiredVersion: dependencies[&quot;react-redux&quot;],&#xA;          },&#xA;          &quot;react-flow-renderer&quot;: {&#xA;            singleton: true,&#xA;            requiredVersion: dependencies[&quot;react-flow-renderer&quot;],&#xA;          },&#xA;          &quot;@apollo/client&quot;: {&#xA;            singleton: true,&#xA;            requiredVersion: dependencies[&quot;@apollo/client&quot;],&#xA;          },&#xA;          graphql: {&#xA;            singleton: true,&#xA;            requiredVersion: dependencies[&quot;graphql&quot;],&#xA;          },&#xA;        },&#xA;</code></pre>&#xA;<p>Please help me out in identifying what could I be missing.</p>&#xA;",10784689,,10784689,2022-09-29 05:41:46,2022-09-29 05:41:46,Module Federation : could not find react-redux context value; please ensure the component is wrapped in a <Provider>,<reactjs><redux><graphql><micro-frontend><webpack-module-federation>,0,0,0,2022-09-15 09:25:33
73729495,1,,,0,27,"<p>I have integrated <code>graphql_flutter</code> version <code>^5.0.0</code> in my mobile project for my queries in particular. Everything works fine when I test on my dev environment (emulators) but not on a real device. Please, how will I solve this problem? I recently upgraded my flutter SDK to version <code>3.3.0</code>.</p>&#xA;",11465681,,,,2022-09-15 10:25:04,What solution is available for graphql_flutter production bug,<flutter><graphql><graphql-flutter>,0,7,0,2022-09-15 10:25:04
73736789,1,,,0,25,"<p>I was asked to created application using class components and fetch date via GraphQL.</p>&#xA;<p>I did not have projects like this so I willingly started work.</p>&#xA;<p>index.js</p>&#xA;<pre><code>import React from 'react';&#xA;import ReactDOM from 'react-dom/client';&#xA;import './index.css';&#xA;import Footer from './components/footer';&#xA;// import { Provider } from 'react-redux';&#xA;// import { store } from './Redux/store/index';&#xA;import { ApolloClient, InMemoryCache, ApolloProvider, gql } from '@apollo/client';&#xA;&#xA;const client = new ApolloClient({&#xA;  uri: 'http://localhost:4000/graphql',&#xA;  cache: new InMemoryCache(),&#xA;});&#xA;&#xA;const root = ReactDOM.createRoot(document.getElementById('root'));&#xA;root.render(&#xA;  &#xA;  &lt;React.StrictMode&gt;&#xA;    &lt;ApolloProvider client={client}&gt;&#xA; &lt;Provider value={client}&gt;&#xA;          &lt;Footer /&gt;&#xA;      &lt;/Provider&gt;&#xA;      &lt;/ApolloProvider&gt;,&#xA;18&#xA;&#xA;&#xA;  &lt;/React.StrictMode&gt;&#xA;);&#xA;&#xA;&#xA;</code></pre>&#xA;<p>then tried to display on app.js</p>&#xA;<pre><code>import React, { Component } from 'react';&#xA;import gql from &quot;graphql-tag&quot;;&#xA;import  {Query}  from &quot;react-apollo&quot;;&#xA;&#xA;const GET_DATA = gql`&#xA; {&#xA;  currencies {&#xA;    label&#xA;    symbol&#xA;  }&#xA;}&#xA;`&#xA;&#xA;class Footer extends Component{&#xA;render(){&#xA;&#xA;    return(&#xA;     &lt;Query query={GET_DATA}&gt;&#xA;        {({ error, loading, data }) =&gt; {&#xA;        if (error) return 'something went wrong';&#xA;        if (loading) return 'loading...';&#xA;        if (data) console.log(data)&#xA;        }}&#xA;    &lt;/Query&gt;&#xA;    &#xA;    )&#xA;&#xA;    }&#xA;  }&#xA;&#xA;&#xA;  export default Footer&#xA;</code></pre>&#xA;<p>but I get tons of errors like:</p>&#xA;<pre><code>ERROR in ./node_modules/@apollo/client/link/http/selectHttpOptionsAndBody.js 31:56-69&#xA;&#xA;export '__spreadArray' (imported as '__spreadArray') was not found in 'tslib' (possible exports: __assign, __asyncDelegator, __asyncGenerator, __asyncValues, __await, __awaiter, __classPrivateFieldGet, __classPrivateFieldSet, __createBinding, __decorate, __exportStar, __extends, __generator, __importDefault, __importStar, __makeTemplateObject, __metadata, __param, __read, __rest, __spread, __spreadArrays, __values)&#xA;&#xA;&#xA;ERROR in ./node_modules/@apollo/client/utilities/common/mergeDeep.js 58:55-68&#xA;&#xA;export '__spreadArray' (imported as '__spreadArray') was not found in 'tslib' (possible exports: __assign, __asyncDelegator, __asyncGenerator, __asyncValues, __await, __awaiter, __classPrivateFieldGet, __classPrivateFieldSet, __createBinding, __decorate, __exportStar, __extends, __generator, __importDefault, __importStar, __makeTemplateObject, __metadata, __param, __read, __rest, __spread, __spreadArrays, __values)&#xA;&#xA;&#xA;ERROR in ./node_modules/@apollo/client/utilities/graphql/fragments.js 22:17-30&#xA;&#xA;export '__spreadArray' (imported as '__spreadArray') was not found in 'tslib' (possible exports: __assign, __asyncDelegator, __asyncGenerator, __asyncValues, __await, __awaiter, __classPrivateFieldGet, __classPrivateFieldSet, __createBinding, __decorate, __exportStar, __extends, __generator, __importDefault, __importStar, __makeTemplateObject, __metadata, __param, __read, __rest, __spread, __spreadArrays, __values)&#xA;&#xA;&#xA;ERROR in ./node_modules/@apollo/client/utilities/graphql/transform.js 137:22-35&#xA;&#xA;export '__spreadArray' (imported as '__spreadArray') was not found in 'tslib' (possible exports: __assign, __asyncDelegator, __asyncGenerator, __asyncValues, __await, __awaiter, __classPrivateFieldGet, __classPrivateFieldSet, __createBinding, __decorate, __exportStar, __extends, __generator, __importDefault, __importStar, __makeTemplateObject, __metadata, __param, __read, __rest, __spread, __spreadArrays, __values)&#xA;&#xA;&#xA;ERROR in ./node_modules/@apollo/client/utilities/graphql/transform.js 137:36-49&#xA;&#xA;export '__spreadArray' (imported as '__spreadArray') was not found in 'tslib' (possible exports: __assign, __asyncDelegator, __asyncGenerator, __asyncValues, __await, __awaiter, __classPrivateFieldGet, __classPrivateFieldSet, __createBinding, __decorate, __exportStar, __extends, __generator, __importDefault, __importStar, __makeTemplateObject, __metadata, __param, __read, __rest, __spread, __spreadArrays, __values)&#xA;&#xA;&#xA;ERROR in ./node_modules/@apollo/client/utilities/policies/pagination.js 12:24-37&#xA;&#xA;export '__spreadArray' (imported as '__spreadArray') was not found in 'tslib' (possible exports: __assign, __asyncDelegator, __asyncGenerator, __asyncValues, __await, __awaiter, __classPrivateFieldGet, __classPrivateFieldSet, __createBinding, __decorate, __exportStar, __extends, __generator, __importDefault, __importStar, __makeTemplateObject, __metadata, __param, __read, __rest, __spread, __spreadArrays, __values)&#xA;</code></pre>&#xA;<p>Anyone know convenient  way to display date via graphQL using class components and redux (Appolo have feature of statemenagment by another GraphQL client do not..).</p>&#xA;",19715801,,,,2022-09-15 20:01:41,How to connect Appolo with Redux in class component react?,<reactjs><graphql><apollo-client>,0,0,0,2022-09-15 20:01:41
73738317,2,,50684231,0,,"<h1>TLDR: it means throw an error if value is null</h1>&#xA;<p>User tried to send <code>null</code> for an input field which has <code>!</code> -&gt; instant error response</p>&#xA;<p>Server tried to return <code>null</code> for a field that has <code>!</code> -&gt; return an error instead</p>&#xA;<h1>Why would you add <code>!</code> if it only throws errors ?</h1>&#xA;<p>If you know that a <code>null</code> in the input would crash your server then better to throw the error early.</p>&#xA;<p>If you know that a <code>null</code> in the response would crash your client then better to throw the error early.</p>&#xA;<p>I'm using &quot;crash&quot; broadly to refer to all possible bugs or volnurabilities that could occur.</p>&#xA;<h1>Example</h1>&#xA;<p>Schema:</p>&#xA;<pre><code>type Query&#xA;{&#xA;    data(input: InputType!): ResponseType!&#xA;}&#xA;&#xA;input InputType&#xA;{&#xA;    inputField: String!&#xA;}&#xA;&#xA;type ResponseType&#xA;{&#xA;    field: String!&#xA;}&#xA;</code></pre>&#xA;<p>Input Variables which are OK:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    input: {&#xA;        inputField: &quot;sample text&quot;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Input Variables which will throw errors:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>// error: inputField is null&#xA;{&#xA;    input: {&#xA;        inputField: null&#xA;    }&#xA;}&#xA;&#xA;// error: inputField is null (because it's missing)&#xA;{&#xA;    input: {&#xA;    }&#xA;}&#xA;&#xA;// error: input is null&#xA;{&#xA;    input:  null &#xA;}&#xA;&#xA;// error: input is null (because it's missing)&#xA;{&#xA;}&#xA;</code></pre>&#xA;<p>Server Response which is OK:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    data: {&#xA;        field: &quot;sample text&quot;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Server Responses which will throw errors:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>// error: field is null&#xA;{&#xA;    data: {&#xA;        field: null&#xA;    }&#xA;}&#xA;&#xA;// error: field is null (because it's missing)&#xA;{&#xA;    data: {&#xA;    }&#xA;}&#xA;&#xA;// error: data is null&#xA;{&#xA;    data: null&#xA;}&#xA;</code></pre>&#xA;",2100372,,,,2022-09-15 23:22:33,"",,0,0,0,2022-09-15 23:22:33
73743772,1,,,0,24,"<p>I am trying to run this vaex program to perform a graphql query. I believe the operation is not lazily-evaluated. I could confirm that the memory consumption for my python program increases continuously.</p>&#xA;<pre><code>import vaex&#xA;import time&#xA;from vaex.graphql import DataFrameAccessorGraphQL&#xA;&#xA;vaex.cache.off()&#xA;start = {'start' : time.ctime()}&#xA;print('reading from parquet...', time.ctime())&#xA;df = vaex.open('./File_00000.parquet')&#xA;print('trying to execute graphql', time.ctime())&#xA;result = df.graphql.execute(&quot;&quot;&quot;&#xA;    {&#xA;        df {&#xA;            min {&#xA;                col_int10&#xA;            }&#xA;            mean {&#xA;                col_float10&#xA;            }&#xA;            max {&#xA;                col_int20&#xA;            }&#xA;            groupby {&#xA;                col_str10 {&#xA;                   count&#xA;                   mean {&#xA;                       col_float20&#xA;                   }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;    &quot;&quot;&quot;)&#xA;print(&quot;The execution is done&quot;, time.ctime())&#xA;stop = {'stop' : time.ctime()}&#xA;print(result.data, start, stop)&#xA;</code></pre>&#xA;<p>The parquet file used here is around 50MB with 20,000 rows and 500 columns.</p>&#xA;<p>I am running <strong>vaex using conda in my Mac M1</strong> that has 32GB RAM. I killed the python program when RAM usage was showing 16.7GB.</p>&#xA;<p>These are the version info:</p>&#xA;<pre><code>Name                     Version                  Build   Channel&#xA;vaex                      4.8.0                    pypi_0    pypi&#xA;vaex-astro                0.9.0                    pypi_0    pypi&#xA;vaex-core                 4.8.0                    pypi_0    pypi&#xA;vaex-graphql              0.2.0                    pypi_0    pypi&#xA;vaex-hdf5                 0.12.0                   pypi_0    pypi&#xA;vaex-jupyter              0.7.0                    pypi_0    pypi&#xA;vaex-ml                   0.17.0                   pypi_0    pypi&#xA;vaex-server               0.8.1                    pypi_0    pypi&#xA;vaex-viz                  0.5.1                    pypi_0    pypi&#xA;</code></pre>&#xA;<p>Is there any way i could run this operation with lazy loading (i.e. similar to df operations that don't use RAM much), i.e. as a graphql query?</p>&#xA;<p>I couldn't find information about this in the documentation:</p>&#xA;<p><a href=""https://vaex.readthedocs.io/en/docs/api.html#graphql-operations"" rel=""nofollow noreferrer"">https://vaex.readthedocs.io/en/docs/api.html#graphql-operations</a></p>&#xA;<p>Thanks!! Happy to provide any more info.</p>&#xA;",20009922,,,,2022-09-16 10:57:41,Is vaex.graphql operation NOT 'lazy' evaluated?,<graphql><vaex>,0,0,0,2022-09-16 10:57:41
73751706,1,,,2,213,"<p>I'm trying to figure out how to open the apollo studio for my next js app.</p>&#xA;<p>When I run the local host, I get a message that says:</p>&#xA;<blockquote>&#xA;<p>Server started at http://localhost:5555/graphql</p>&#xA;</blockquote>&#xA;<p>When I click that link, I get a page that says:</p>&#xA;<blockquote>&#xA;<p>GET query missing.</p>&#xA;</blockquote>&#xA;<p>I'm trying to find a way to get to the apollo studio explorer.</p>&#xA;",2860931,,,,2022-10-02 22:24:38,How to connect nextjs app to graphql studio,<graphql><apollo>,3,0,0,2022-09-17 02:16:55
73752076,2,,73751797,1,,"<p>Reference to the function <code>onChangeSimilarBook</code> changes every render. You have somehow make it stable by reference. You could try to use <code>useEvent</code>.</p>&#xA;<p><a href=""https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md"" rel=""nofollow noreferrer"">useevent.md</a></p>&#xA;",12656448,,,,2022-09-17 04:11:57,"",,0,0,0,2022-09-17 04:11:57
73783147,1,,,0,57,"<p>I am unit testing my angular apollo app. I always get the same error:</p>&#xA;<pre><code>Error: Expected one matching operation for criteria &quot;Match DocumentNode&quot;, found none.&#xA;            at ApolloTestingBackend.expectOne (node_modules/apollo-angular/fesm2020/ngApolloTesting.mjs:135:19)&#xA;            at UserContext.apply (src/app/my-service.service.spec.ts:66:35)&#xA;            at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:372:26)&#xA;            at ProxyZoneSpec.onInvoke (node_modules/zone.js/fesm2015/zone-testing.js:287:39)&#xA;            at _ZoneDelegate.invoke (node_modules/zone.js/fesm2015/zone.js:371:52)&#xA;            at Zone.run (node_modules/zone.js/fesm2015/zone.js:134:43)&#xA;            at runInTestZone (node_modules/zone.js/fesm2015/zone-testing.js:582:34)&#xA;            at UserContext.&lt;anonymous&gt; (node_modules/zone.js/fesm2015/zone-testing.js:597:20)&#xA;            at &lt;Jasmine&gt;&#xA;Chrome 103.0.5060.53 (Linux x86_64): Executed 1 of 1 (1 FAILED) (0.108 secs / 0.092 secs)&#xA;</code></pre>&#xA;<p>This error occurs on the line:</p>&#xA;<pre><code>const op = apolloController.expectOne(QUERY_GQL);&#xA;</code></pre>&#xA;<p>I have already reviewed all the related posts and none of them solve the problem. Someone could help me?</p>&#xA;<p>I am waiting for a response from someone who can solve my problem. Thank you very much.</p>&#xA;<p>Greetings.</p>&#xA;",9976815,,9976815,2022-09-20 08:30:24,2022-09-20 08:30:24,Error in unit test in service of my angular apollo application,<angular><unit-testing><graphql><apollo><apollo-angular>,0,0,0,2022-09-20 07:40:26
73815764,2,,64373379,3,,"<p>usePaginationFragment does not do any fetch</p>&#xA;<p>you need to useLazyLoadQuery or usePreloadQuery to do the fetch</p>&#xA;<p>useFragment, usePaginationFragment only declares data requirements for fragments</p>&#xA;<p>check the new example here <a href=""https://github.com/relayjs/relay-examples/pull/104"" rel=""nofollow noreferrer"">https://github.com/relayjs/relay-examples/pull/104</a></p>&#xA;",20062109,,,,2022-09-22 13:44:17,"",,0,0,0,2022-09-22 13:44:17
73817719,1,,,0,95,"<p>I have a v9 <code>Nestjs</code>, <code>graphql</code> that works locally without any issues but when deployed on a digital ocean droplet with nginx, accessing <code>playground</code> says <code>Server cannot be reached</code>. And as such the Schema and Doc tabs on the playground don't load. However, a query or mutation request works. How can I solve this?</p>&#xA;<p><a href=""https://i.stack.imgur.com/xRuC5.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xRuC5.jpg"" alt=""enter image description here"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/b1ScO.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/b1ScO.jpg"" alt=""enter image description here"" /></a></p>&#xA;<p>I applied cors as shown below but it made no difference</p>&#xA;<pre><code>  const app = await NestFactory.create(AppModule, {&#xA;    cors: {&#xA;      credentials: true,&#xA;      origin: ['http://localhost:3000', 'https://api.my-live-server.io'],&#xA;    },&#xA;  &#xA;  });&#xA;</code></pre>&#xA;<p>The related dependencies are:</p>&#xA;<pre><code>    &quot;@nestjs/apollo&quot;: &quot;10.1.0&quot;,&#xA;    &quot;@nestjs/graphql&quot;: &quot;10.1.2&quot;,&#xA;</code></pre>&#xA;<p>Worth-noting that an issue almost similar as asked <a href=""https://stackoverflow.com/questions/69046284/apollo-server-express-playground-cannot-be-reached"">here</a> on Stackoverflow and the answer pointed to a Github <a href=""https://github.com/graphql/graphql-playground/issues/877"" rel=""nofollow noreferrer"">issue</a> that doesn't have exactly the same circumstance and doesn't resolve this.</p>&#xA;",4247897,,,,2022-09-22 16:06:47,"Nestjs graphql playground ""Server cannot be reached""",<nestjs><apollo-server><graphql-playground><nestjs-graphql>,0,0,0,2022-09-22 16:06:47
73844532,2,,73032950,0,,<p>I ran into the same problem with you. I think it is resolved in the latest version of <code>@graphql-yoga/node</code> (2.13.13 for me).</p>&#xA;<p>You can update the package version to latest by:</p>&#xA;<blockquote>&#xA;<p>yarn upgrade @graphql-yoga/node --latest</p>&#xA;</blockquote>&#xA;<p>or</p>&#xA;<blockquote>&#xA;<p>npm i @graphql-yoga/node@latest</p>&#xA;</blockquote>&#xA;<p>if you are using npm</p>&#xA;,7160380,,,,2022-09-25 12:38:02,"",,0,0,0,2022-09-25 12:38:02
73868703,1,,,0,57,"<p>I try to access a graphql api.&#xA;The post request goes via a proxy chain of:</p>&#xA;<p><code>local http proxy -&gt; local socks5 proxy -&gt; graphql api host</code></p>&#xA;<p>However, I get <code>java.util.concurrent.ExecutionException: javax.net.ssl.SSLHandshakeException: Failed to create SSL connection</code> in&#xA;<code>io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy#postSync</code></p>&#xA;<p>I did not find any info or method to disable ssl checks, like <code>verify hosts = false</code> etc. in the used <code>TypesafeGraphQLClientBuilder</code>nor in the built client.</p>&#xA;<p>How to get rid of the ssl checks in this local dev only test setup?</p>&#xA;<p>In debug I see that the built client <code>io.smallrye.graphql.client.vertx.typesafe.VertxTypesafeGraphQLClientProxy</code>&#xA;has <code>httpClient.options.verifyHost=true</code> which I would like to set to false.&#xA;But I don't know how/where to manipulate or replace the <code>httpClient</code> within the <code>VertxTypesafeGraphQLClientProxy</code>.</p>&#xA;<p>Any hints please?</p>&#xA;",753724,,,,2022-09-27 13:46:03,How to disable SSL verification in Quarkus graphql client,<graphql><proxy><quarkus>,0,0,0,2022-09-27 13:46:03
73870544,2,,53930305,0,,"<p>You should follow answers such as this one:</p>&#xA;<p><a href=""https://stackoverflow.com/a/55411444/9316077"">cjs'</a></p>&#xA;<p>Or:</p>&#xA;<p><a href=""https://stackoverflow.com/a/55543310/9316077"">Isac Moura's</a></p>&#xA;<p>And for latest Ubuntu versions, run <code>sudo sysctl --system</code> to read these settings anew.</p>&#xA;<p>However, in my case, my changes to these configuration files were not picked up, because I had already tweaked these settings a while ago... and forgot about it. And I had placed the conflicting configuration file in the wrong place.</p>&#xA;<p>According to <code>man sysctl.d</code>, these settings can be placed in <code>/etc/sysctl.d/*.conf</code>, <code>/run/sysctl.d/*.conf</code> and <code>/usr/lib/sysctl.d/*.conf</code>.</p>&#xA;<p>In my case I had two files:</p>&#xA;<pre class=""lang-none prettyprint-override""><code>/etc/sysctl.d/10-user-watches.conf&#xA;/usr/lib/sysctl.d/30-tracker.conf     &lt;&lt;&lt; Older file, with lower limit&#xA;</code></pre>&#xA;<p>Due to the naming convention, my older file was read last, and took precedence.</p>&#xA;",9316077,,63550,2022-10-26 22:26:39,2022-10-26 22:26:39,"",,0,0,0,2022-09-27 16:02:02
73871436,1,,,0,24,<p>I've trying to scrape data from graphql using the ghql package. It went perfect for queries with only one variable but now im struggling with a query with variable and filter. Any advice?</p>&#xA;,20103087,,5221626,2022-09-27 18:23:54,2022-09-27 18:23:54,How can I fetch data from graphql if query have variable and filter,<r><graphql>,0,0,0,2022-09-27 17:12:41
73879833,2,,71999160,2,,<p>I needed to remove</p>&#xA;<pre><code>assetPrefix: &quot;./&quot;&#xA;</code></pre>&#xA;<p>from <code>next.config.js</code> so HMR worked and those warnings disappeared.&#xA;Problem was both in FF and Chrome for me.</p>&#xA;,6348431,,,,2022-09-28 10:21:57,"",,0,0,0,2022-09-28 10:21:57
73884054,1,,,0,14,"<p>Does anyone know how to conditionally remove all script tags from a SSR rendered react page/site (using ApolloServer / Express)?  We are not trying to trick crawlers or serve different content or anything like that.</p>&#xA;<p><strong>Here is the problem we are facing with google:</strong></p>&#xA;<ol>&#xA;<li>Our content is dynamic and pages change and are created daily so this can't be done at build.</li>&#xA;<li>Google downloads page data &amp; saves it to their server.</li>&#xA;<li>Google then renders it later and frequently receives an error on the reflow which&#xA;blanks out the content during that render. (this may happen due to recent pushes or other things that may cause a DOM missmatch - this is a guess).</li>&#xA;<li>Because of this, google is not actually able to crawl the page content or internal links.</li>&#xA;</ol>&#xA;<p>We've added some CSP headers to block 3rd party sites from rendering our JS but sometimes cloudflare sends the JS to run and at this point, it's just blanking out the page all together on render.</p>&#xA;<p>I've tested the site with JS disabled and the SSR renders a fully functional static web pages - this is exactly what I'd like to serve to web crawlers.  It's the same view users get, its fast/efficient on the crawlers resources, overall just seems like a win-win solution.</p>&#xA;<p>In short, how can we get the full version of the HTML (after webpack adds all it's stuff) so we can then remove all the <code>&lt;script&gt;</code> tags on the final rendered SSR page IF userAgent is Bot?  If not bot, return it as normal.</p>&#xA;<p>Potential solutions:</p>&#xA;<ol>&#xA;<li>Is there a way to get the pre-rendered HTML including all js files included by webpack so we can then conditionally remove all the JS script blocks from the DOM before serving the page,  If agentType = Bot?  <em>Seems like we can get it before webpack but not after.</em></li>&#xA;<li>Instead of using webpack, we manually (and conditionally) include which files to add to the SSR rendered page.  This means we abort webpack and manually handle the js files to include.</li>&#xA;</ol>&#xA;<p>It's a big app and moving over to NextJS isn't feasable.  Simply removing the <code>&lt;script&gt;</code> tags from the final rendered string (if userAgent==Bot) would be the ideal solution to test right now.</p>&#xA;<p>UPDATE: I don't know react so I'm shooting in the dark but I found this in the code and I am wondering if this is where we could manipulate the pre-rendered code by adding a conditional that removes 'getScriptElements' from headElements if agentType=Bot:</p>&#xA;<pre><code>const htmlProps: HtmlProps = {&#xA;    content,&#xA;    headElements: [&#xA;      ...extractor.getScriptElements(),&#xA;      ...extractor.getLinkElements(),&#xA;      ...extractor.getStyleElements()&#xA;    ],&#xA;    css: sheet.getStyleElement().map((el, idx) =&gt; (el ? &#xA;React.cloneElement(el, { key: idx }) : el)),&#xA;    helmet,&#xA;    state: { ...client.extract() }&#xA;  };&#xA;&#xA;  res.status(200).send(`&lt;!doctype html&gt;\n${ReactDOMServer.renderToStaticMarkup(&lt;Html {...htmlProps} /&gt;)}`);&#xA;</code></pre>&#xA;",4130559,,4130559,2022-09-28 16:26:27,2022-09-28 16:26:27,Conditionally remove all script (JS) tags from SSR rendered page before serving it? React / ApolloGraphQL Server / Express,<node.js><reactjs><express><webpack><apollo-server>,0,0,0,2022-09-28 15:26:11
73895536,1,,,1,20,"<p>We picked up a rather poorly written legacy project that has two APIs: one for authentication and another called dashboard.</p>&#xA;<p>With a certain level of inconsistency, some of the dashboard api calls hang if I open two tabs on the same page. If I refresh one of the pages (or close it/navigate elsewhere), the other's query will instantly succeed.</p>&#xA;<p>This seems to happen somewhat randomly; just before posting this question, I noticed it was working fine on localhost and so I pushed my latest changes to staging, restarting the backends in the process. After the restart, the problem returned.</p>&#xA;<p>It only seems to happen when both tabs are using the same browser and both are incognito or not. I've observed it while using both Google Chrome and Opera, both locally and on stage.</p>&#xA;<p>The frontend is written in React, using <code>apollo/client</code> <code>v3.6.8</code>, <code>graphql</code> <code>v15.8.0</code>. Both backends are written in go, using <code>graphql-go/graphql</code> <code>v0.7.9</code> and <code>graphql-go/handler</code> <code>v0.2.3</code>.</p>&#xA;",14922849,,472495,2022-10-12 22:44:59,2022-10-12 22:44:59,Apollo gql queries hanging when having more than one tab open on the same page,<reactjs><go><graphql><apollo>,0,3,0,2022-09-29 12:26:06
73896440,2,,62271614,0,,<p>Faced this issue when we moved from Django 2.2 to Django 4.0.5 version.&#xA;Updated the DRF version from 3.12.0 to 3.14.0 to fix this issue.</p>&#xA;<p>pip install djangorestframework==3.14.0</p>&#xA;,16082959,,,,2022-09-29 13:34:08,"",,0,0,0,2022-09-29 13:34:08
73897814,1,73900329,,2,210,"<p>After generating the code using GqlGen there are some field resolvers method that has been created. I need to access the query input param in the field resolver but I'm not sure how to access it.&#xA;Do I need to get these values from context? Or is there any other way?</p>&#xA;<p>Query Resolver:</p>&#xA;<pre><code>func (r *queryResolver) Main(ctx context.Context, device string) (*models.Main, error) {&#xA;...&#xA;}&#xA;</code></pre>&#xA;<p>Field Resolver:</p>&#xA;<pre><code>// Version is the resolver for the version field.&#xA;func (r *mainResolver) Version(ctx context.Context, obj *models.Main) (*models.Version, error) {&#xA;        // I NEED TO ACCESS device param here which is passed in Main method&#xA;    panic(fmt.Errorf(&quot;not implemented: Version - version&quot;))&#xA;}&#xA;</code></pre>&#xA;<p>Thanks,</p>&#xA;",5377229,,,,2022-09-30 11:23:42,GqlGen - Accessing query input params in field resolver,<go><graphql><gqlgen>,1,0,0,2022-09-29 15:07:45
73910202,2,,66441463,0,,"<p>Please note, if you are hitting this issue with <code>@apollo/client v3.5.x</code> there was a <a href=""https://github.com/apollographql/apollo-client/issues/6916"" rel=""nofollow noreferrer"">bug</a> related to this which was <a href=""https://github.com/apollographql/apollo-client/pull/9504"" rel=""nofollow noreferrer"">fixed</a> from <code>v3.6.0+</code>. That commit solved the duplicated execution issue in my case.</p>&#xA;",787625,,,,2022-09-30 14:20:53,"",,0,0,0,2022-09-30 14:20:53
73910952,1,73911084,,0,53,"<p>I would like to call an external graphql API (without authentication for the moment).&#xA;Here is my code :</p>&#xA;<pre><code>local open_api = &quot;https://graphqlzero.almansi.me/api&quot;&#xA;&#xA;local payload = '{&quot;query&quot;: &quot;query { post(id: 1) { id title body }}&quot;}'&#xA;&#xA;local headers = {&#xA;}&#xA;&#xA;&#xA;local function craftCall()&#xA;    local response&#xA;    local data&#xA;&#xA;  pcall(function ()&#xA;        response = HttpService:PostAsync(open_api, payload,  Enum.HttpContentType.ApplicationJson, false, headers)&#xA;        data = HttpService:JSONDecode(response)&#xA;    end)&#xA;&#xA;    if not data then return false end&#xA;&#xA;  print(data)&#xA;    return false&#xA;end &#xA;    &#xA;    &#xA;    &#xA;if craftCall() then&#xA;    print(&quot;Success&quot;)&#xA;else&#xA;    print(&quot;Something went wrong&quot;)&#xA;end&#xA;</code></pre>&#xA;<p>I get always <code>something went wrong</code>. I need some help on what is going wrong... Specially I don't know if am I correctly formatting the Payload.</p>&#xA;",1879453,,,,2022-09-30 15:40:48,Roblox - Call external GraphQL API,<api><graphql><roblox><postasync>,1,0,0,2022-09-30 15:29:20
73911084,2,,73910952,1,,"<p>After your http call, you never return a success result. You've only outlined failure cases :</p>&#xA;<pre class=""lang-lua prettyprint-override""><code>    if not data then return false end&#xA;    print(data)&#xA;    return false&#xA;</code></pre>&#xA;<p>So your conditional, <code>if craftCall() then</code> always evaluates to false.</p>&#xA;<p>Why not make it return <code>true</code> or <code>data</code> after the <code>print(data)</code>? Then you'll know that it made it to the end of the call successfully.</p>&#xA;<pre class=""lang-lua prettyprint-override""><code>local function craftCall()&#xA;    local success, result = pcall(function()&#xA;        local response = HttpService:PostAsync(open_api, payload,  Enum.HttpContentType.ApplicationJson, false, headers)&#xA;        return HttpService:JSONDecode(response)&#xA;    end)&#xA;&#xA;    if not success then&#xA;        warn(&quot;PostAsync failed with error : &quot;, result)&#xA;        return false&#xA;    end&#xA;    &#xA;    -- return the parsed data&#xA;    return result&#xA;end&#xA;</code></pre>&#xA;",2860267,,,,2022-09-30 15:40:48,"",,0,1,0,2022-09-30 15:40:48
73942672,2,,73890050,0,,"<p><a href=""https://i.stack.imgur.com/b8YhZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/b8YhZ.png"" alt=""enter image description here"" /></a></p>&#xA;<p>BSC network in graph node has disabled by the graph protocol team.<br />&#xA;Maybe, I think that they are fixing or updating something for BSC network.</p>&#xA;",13936013,,,,2022-10-04 02:45:23,"",,0,0,0,2022-10-04 02:45:23
73944481,1,,,0,148,"<p>I am using POST api built by different team in our application and since its taking more than 1 minute to return a response our graphql mutation is returning Internal_Server_error (<a href=""https://www.apollographql.com/docs/apollo-server/v2/data/errors#internal_server_error"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/v2/data/errors#internal_server_error</a>). We are using @types/node-fetch: &quot;1.6.9&quot; to consume these endpoints. I tried to set the timeout in the options  object of the request as mentioned in github (<a href=""https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/node-fetch/index.d.ts#L59"" rel=""nofollow noreferrer"">https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/node-fetch/index.d.ts#L59</a>) but Apollo server is still giving Internal_Server_Error. I tried using AbortController but our application is currently using Node 12.x.x and abort controller requires node 14.x.x.</p>&#xA;<p>I just want to know if there is anything we can do from our end to make apollo server wait for the request to be successful which should take 1 minute and 10 seconds and not give out 504.</p>&#xA;<p>This is how I am setting  the timeout</p>&#xA;<pre><code>   import fetch from &quot;node-fetch&quot;;&#xA;&#xA;   const res = await fetch(`${this.baseURL}/api/v1/dummy?${query}`,&#xA;     {&#xA;      method: &quot;POST&quot;,&#xA;      body: JSON.stringify({&#xA;       -----&#xA;       -----&#xA;      }),&#xA;      timeout: 60000,&#xA;      headers: {&quot;Content-Type&quot;: &quot;application/json&quot;},&#xA;    });&#xA;</code></pre>&#xA;<p>Value of res variable after running the mutation:</p>&#xA;<pre><code> Body {&#xA;  url: 'secret_url',&#xA;  status: 504,&#xA;  statusText: 'Gateway Time-out',&#xA;  headers: Headers {&#xA;    _headers: {&#xA;      server: [Array],&#xA;      date: [Array],&#xA;      'content-type': [Array],&#xA;      'content-length': [Array],&#xA;      connection: [Array],&#xA;      'set-cookie': [Array]&#xA;    }&#xA;  },&#xA;  ok: false,&#xA;  body: PassThrough {&#xA;    _readableState: ReadableState {&#xA;      objectMode: false,&#xA;      highWaterMark: 16384,&#xA;      buffer: BufferList { head: [Object], tail: [Object], length: 1 },&#xA;      length: 132,&#xA;      pipes: null,&#xA;      pipesCount: 0,&#xA;      flowing: null,&#xA;      ended: true,&#xA;      endEmitted: false,&#xA;      reading: false,&#xA;      sync: false,&#xA;      needReadable: false,&#xA;      emittedReadable: false,&#xA;      readableListening: false,&#xA;      resumeScheduled: false,&#xA;      emitClose: true,&#xA;      autoDestroy: false,&#xA;      destroyed: false,&#xA;      defaultEncoding: 'utf8',&#xA;      awaitDrainWriters: null,&#xA;      multiAwaitDrain: false,&#xA;      readingMore: false,&#xA;      decoder: null,&#xA;      encoding: null,&#xA;      [Symbol(kPaused)]: null&#xA;    },&#xA;    readable: true,&#xA;    _events: [Object: null prototype] { prefinish: [Function: prefinish] },&#xA;    _eventsCount: 1,&#xA;    _maxListeners: undefined,&#xA;    _writableState: WritableState {&#xA;      objectMode: false,&#xA;      highWaterMark: 16384,&#xA;      finalCalled: false,&#xA;      needDrain: false,&#xA;      ending: true,&#xA;      ended: true,&#xA;      finished: true,&#xA;      destroyed: false,&#xA;      decodeStrings: true,&#xA;      defaultEncoding: 'utf8',&#xA;      length: 0,&#xA;      writing: false,&#xA;      corked: 0,&#xA;      sync: false,&#xA;      bufferProcessing: false,&#xA;      onwrite: [Function: bound onwrite],&#xA;      writecb: null,&#xA;      writelen: 0,&#xA;      afterWriteTickInfo: null,&#xA;      bufferedRequest: null,&#xA;      lastBufferedRequest: null,&#xA;      pendingcb: 0,&#xA;      prefinished: true,&#xA;      errorEmitted: false,&#xA;      emitClose: true,&#xA;      autoDestroy: false,&#xA;      bufferedRequestCount: 0,&#xA;      corkedRequestsFree: [Object]&#xA;    },&#xA;    writable: false,&#xA;    allowHalfOpen: true,&#xA;    _transformState: {&#xA;      afterTransform: [Function: bound afterTransform],&#xA;      needTransform: false,&#xA;      transforming: false,&#xA;      writecb: null,&#xA;      writechunk: null,&#xA;      writeencoding: 'buffer'&#xA;    },&#xA;    [Symbol(kCapture)]: false&#xA;  },&#xA;  bodyUsed: false,&#xA;  size: 0,&#xA;  timeout: 180000,&#xA;  _raw: [],&#xA;  _abort: false&#xA;}&#xA;</code></pre>&#xA;<p>Response from swagger-ui</p>&#xA;<p><a href=""https://i.stack.imgur.com/ChF5l.png"" rel=""nofollow noreferrer"">swagger-ui response</a></p>&#xA;",14535550,,,,2022-10-04 07:35:15,Getting Timeout error(504) from an https POST endpoint in swagger-ui,<https><graphql><apollo-server><node-fetch><graphql-mutation>,0,0,0,2022-10-04 07:35:15
73983324,1,,,2,73,"<p>I am getting following error when using latest <code>ariadne 0.16.1</code> with <code>graphql-core 3.2.3</code> and Python 3.10. It's a FastAPI app.</p>&#xA;<p><code>from fastapi import FastAPI</code>&#xA;<code>from ariadne.asgi import GraphQL</code></p>&#xA;<p>Second line throws the error</p>&#xA;<p><code> from graphql.type import GraphQLEnumType, GraphQLNamedType, GraphQLSchema ModuleNotFoundError: No module named 'graphql.type'</code></p>&#xA;<p>I tried changing libraries versions both upgrading and downgrading but no luck.</p>&#xA;<p>Thanks</p>&#xA;<p><strong>UPDATE</strong></p>&#xA;<p>issue is resolved. There was a graphql directory in the project. renaming it fixed the issue. Thanks.</p>&#xA;",5793305,,5793305,2022-10-07 07:03:07,2022-10-07 07:03:07,Ariadne Python : ModuleNotFoundError: No module named 'graphql.type',<python><graphql><ariadne-graphql>,0,2,0,2022-10-07 06:41:24
73986807,1,,,0,99,"<p>There's an <a href=""https://github.com/nuxt-modules/apollo/issues/288"" rel=""nofollow noreferrer"">open issue</a> with some examples of using <code>@vue/apollo-composable</code> but they don't work with Nuxt 2 Bridge.</p>&#xA;",2771889,,,,2022-10-07 11:55:43,How to provide $apollo for Nuxt 2 Bridge composition API?,<nuxt.js><apollo><vue-composition-api><nuxtjs3><nuxt-bridge>,1,0,0,2022-10-07 11:55:43
73988803,2,,73780579,0,,"<p>I figured out a work around by disabling static generation for the page using the nextjs <a href=""https://nextjs.org/docs/advanced-features/automatic-static-optimization"" rel=""nofollow noreferrer"">getInitialProps</a> method:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>PageComponent.getInitialProps = async () =&gt; {&#xA;  return {}&#xA;}&#xA;</code></pre>&#xA;<p>Definitely a hacky solution but it let me build the site.</p>&#xA;",6890908,,,,2022-10-07 14:35:51,"",,0,0,0,2022-10-07 14:35:51
74003734,2,,74003714,3,,"<p>There is a <a href=""https://github.com/kamilkisiela/apollo-angular/issues/1818"" rel=""nofollow noreferrer"">current issue</a>.</p>&#xA;<p>Use the version 3.6.9 of <code>@apollo/client</code> as a workaround.</p>&#xA;",884123,,,,2022-10-09 09:53:27,"",,0,0,0,2022-10-09 09:53:27
74008616,2,,71956866,0,,"<p>The first imports the helpers that the apollo client library rexports and the second imports the helpers directly.&#xA;I'd use the first way, as it ensures you use the version that apollo client expects.&#xA;The second one can give you a different version if you have <code>graphql-tag</code> as a direct dependency or another dependency requires it in a different version.</p>&#xA;",321492,,,,2022-10-09 21:55:04,"",,0,0,0,2022-10-09 21:55:04
74008696,2,,60678035,0,,"<p>Looks to me like your SSR doesn't wait for the data fetching.&#xA;One solution for you could be, if your data changes rarely, to staticelly generate you pages with data:&#xA;<a href=""https://nextjs.org/docs/basic-features/pages#scenario-1-your-page-content-depends-on-external-data"" rel=""nofollow noreferrer"">https://nextjs.org/docs/basic-features/pages#scenario-1-your-page-content-depends-on-external-data</a></p>&#xA;<p>If you use SSR, make sure you use an async <code>getServerSideProps</code> that <code>await</code>s your data requests:&#xA;<a href=""https://nextjs.org/docs/basic-features/pages#server-side-rendering"" rel=""nofollow noreferrer"">https://nextjs.org/docs/basic-features/pages#server-side-rendering</a></p>&#xA;",321492,,,,2022-10-09 22:08:36,"",,0,0,0,2022-10-09 22:08:36
74012169,2,,72256270,0,,"<p>This happened because the app process is still open and listening to the port.&#xA;Normally when you close your app using Ctrl+C it should kill the process also.&#xA;I suppose it's a bug.</p>&#xA;<p><strong>How to fix it the easy way with NodeJS</strong></p>&#xA;<pre><code>npx kill-port 9229&#xA;</code></pre>&#xA;<p><strong>How to fix it the not that easy way for Mac/Linux</strong></p>&#xA;<pre><code>sudo lsof -i :&lt;PORT&gt;&#xA;kill -9 &lt;PID&gt;&#xA;</code></pre>&#xA;<p><strong>How to fix it for Windows users</strong></p>&#xA;<p>Open the task manager, look for the process/service using the port and end it using the right click.</p>&#xA;",1512310,,,,2022-10-10 08:36:16,"",,0,0,0,2022-10-10 08:36:16
74012676,2,,66265638,0,,"<p>Perhaps you are not setting the NODE_ENV=production.</p>&#xA;<p>In development, Apollo Server enables GraphQL Playground on the same URL as the GraphQL server itself (e.g. http://localhost:4000/graphql) and automatically serves the GUI to web browsers. When NODE_ENV is set to production, GraphQL Playground (as well as introspection) is disabled as a production best-practice.</p>&#xA;",9534430,,,,2022-10-10 09:21:42,"",,0,0,0,2022-10-10 09:21:42
74012706,2,,52250522,0,,"<p>You would need to set your NODE_ENV=production&#xA;or set <code>playgroundAlways:false</code></p>&#xA;<pre><code>const server = new ApolloServer({&#xA;  schema, &#xA;  introspection: false,&#xA;  playground: false,&#xA;});&#xA;</code></pre>&#xA;<p>In development, Apollo Server enables GraphQL Playground on the same URL as the GraphQL server itself (e.g. http://localhost:4000/graphql) and automatically serves the GUI to web browsers. When NODE_ENV is set to production, GraphQL Playground (as well as introspection) is disabled as a production best-practice.</p>&#xA;",9534430,,,,2022-10-10 09:25:04,"",,0,0,0,2022-10-10 09:25:04
74025582,1,,,0,11,"<p>I have created a <code>hello world</code> application to reproduce a issue (source: <a href=""https://gist.github.com/piotrkonieczny/f9f2659799a384ec2e4f9fc18eed5364"" rel=""nofollow noreferrer"">https://gist.github.com/piotrkonieczny/f9f2659799a384ec2e4f9fc18eed5364</a>). The problem is that if I query two identical objects I receive different results.</p>&#xA;<p>Output from Ubuntu 20.04.1 (WSL2) and Windows 10 is the same:</p>&#xA;<pre><code>npm start&#xA;&#xA;&gt; graphql_playground@1.0.0 start&#xA;&gt; node index.js&#xA;&#xA;{&quot;hello&quot;:&quot;Hello world!&quot;} { hello: 'Hello world!' }&#xA;{&quot;hello&quot;:&quot;Hello world!&quot;} { hello: 'Hello world!' }&#xA;[Object: null prototype] { hello: null }&#xA;[Object: null prototype] { hello: 'Hello world!' }&#xA;</code></pre>&#xA;<p>Env:</p>&#xA;<pre><code>$ node -v&#xA;v16.17.1&#xA;$ npm -v&#xA;8.15.0&#xA;</code></pre>&#xA;<p>Any ideas? :)</p>&#xA;",20211860,,,,2022-10-11 09:04:31,Why there is a different result of graphQL query?,<graphql>,0,0,0,2022-10-11 09:04:31
74035625,2,,55397762,0,,"<p>You can use <strong>Fetch</strong> with <a href=""https://www.npmjs.com/package/isomorphic-fetch"" rel=""nofollow noreferrer"">isomorphic-fetch</a>&#xA;This will work in modern browsers with no libraries but will require a polyfill in some browsers.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>require('isomorphic-fetch');&#xA;&#xA;fetch('http://localhost:4000', {&#xA;  method: 'POST',&#xA;  headers: { 'Content-Type': 'application/json' },&#xA;  body: JSON.stringify({ query: `&#xA;    query {&#xA;      todos {&#xA;        edges {&#xA;          node {&#xA;            completed&#xA;            id&#xA;            text&#xA;          }&#xA;    }&#xA;      }&#xA;    }` &#xA;  }),&#xA;})&#xA;.then(res =&gt; res.json())&#xA;.then(res =&gt; console.log(res.data));&#xA;</code></pre>&#xA;<p>In <strong>Chrome’s DevTools</strong> the following output will be printed to the console.&#xA;<a href=""https://i.stack.imgur.com/dWVzw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/dWVzw.png"" alt=""output-graphql-api"" /></a></p>&#xA;",9207553,,,,2022-10-12 01:41:34,"",,0,0,0,2022-10-12 01:41:34
74044192,2,,74036238,0,,<p>SOLVED. I had forgotten to add a proxy value to the client's package.json - <code>&quot;proxy&quot;: &quot;http://localhost:3001&quot;</code>. That fixed it.</p>&#xA;,18958537,,,,2022-10-12 15:10:55,"",,0,0,0,2022-10-12 15:10:55
74066516,1,,,3,60,"<p>I'm building a nuxt2 website getting all data from a headless Wordpress using wp-graphql and apollo.</p>&#xA;<p>As I need possibleTypes data, I've externalized the clientConfigs to another files, here's the info:</p>&#xA;<p>nuxt.config.js</p>&#xA;<pre><code>...&#xA;  apollo: {&#xA;    includeNodeModules: true,&#xA;    clientConfigs: {&#xA;      default: '@/apollo/client-configs/default.js',&#xA;    },&#xA;  },&#xA;...&#xA;</code></pre>&#xA;<p>apollo/client-configs/default.js</p>&#xA;<pre><code>import {&#xA;  InMemoryCache,&#xA;  IntrospectionFragmentMatcher,&#xA;} from 'apollo-cache-inmemory'&#xA;import introspectionQueryResultData from './schema.json'&#xA;&#xA;const fragmentMatcher = new IntrospectionFragmentMatcher({&#xA;  introspectionQueryResultData,&#xA;})&#xA;&#xA;export default (context) =&gt; {&#xA;  return {&#xA;    httpEndpoint: process.env.API_URL,&#xA;    cache: new InMemoryCache({ fragmentMatcher }),&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>When doing that , the SSR is working great, but as soon as I click on a NuxtLink to reach another page, the website crashes with a &quot;Network error: Unexpected token '&lt;', &quot;&lt;!DOCTYPE &quot;... is not valid JSON&quot; error. Looking to the nextwork access, I can see that it's trying to reach the wrong client endpoint:</p>&#xA;<p><a href=""https://i.stack.imgur.com/0LmYt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0LmYt.png"" alt=""enter image description here"" /></a></p>&#xA;<p>When I switch back my clientConfigs without the external modules, using:</p>&#xA;<p>nuxt.config.js</p>&#xA;<pre><code>...&#xA;  apollo: {&#xA;    includeNodeModules: true,&#xA;    clientConfigs: {&#xA;      default: {&#xA;        httpEndpoint: process.env.API_URL,&#xA;      },&#xA;    },&#xA;  },&#xA;...&#xA;</code></pre>&#xA;<p>The server and client side rendering are both okay now. The network panels of the chrome dev tools can give me the confirmation the good url is reached:</p>&#xA;<p><a href=""https://i.stack.imgur.com/TWKxv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TWKxv.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Do someone of you knows why the correct endpoint cannot be reached when using external modules? I'm using <code>&quot;@nuxtjs/apollo&quot;: &quot;^4.0.0-rc.19&quot;</code> and <code>&quot;nuxt&quot;: &quot;^2.15.8&quot;</code></p>&#xA;",3584610,,,,2022-10-20 16:30:14,Apollo client reaching the wrong httpEndpoint URL when using external config file,<javascript><nuxt.js><apollo><wp-graphql>,0,0,0,2022-10-14 08:35:46
74066789,1,74094544,,5,104,"<p>I'm trying to generate code following this <a href=""https://www.apollographql.com/docs/ios/get-started"" rel=""nofollow noreferrer"">steps</a> using cocoa pods.&#xA;On step: 5. Setup and run code generation using <code>appolo-ios-cli generate</code> command I'm getting this error:</p>&#xA;<pre><code> Error: Cannot query field &quot;getAuthServiceHealth&quot; on type &quot;undefined&quot;&#xA; ./../NetworkInterface/GraphQL/QueriesList.graphql:2:2&#xA;1 | query Health {&#xA;2 |     getAuthServiceHealth{&#xA;  |  ^&#xA;3 |         status&#xA;</code></pre>&#xA;<p>Queries.graphql:</p>&#xA;<pre><code>query Health {&#xA;    getAuthServiceHealth{&#xA;        status&#xA;        service&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>schema:</p>&#xA;<pre><code>{&#xA;  &quot;__schema&quot;: {&#xA;    &quot;queryType&quot;: {&#xA;      &quot;name&quot;: &quot;Query&quot;&#xA;    },&#xA;    &quot;mutationType&quot;: null,&#xA;    &quot;subscriptionType&quot;: null,&#xA;    &quot;types&quot;: [&#xA;      {&#xA;        &quot;kind&quot;: &quot;OBJECT&quot;,&#xA;        &quot;name&quot;: &quot;Query&quot;,&#xA;        &quot;description&quot;: null,&#xA;        &quot;fields&quot;: [&#xA;          {&#xA;            &quot;name&quot;: &quot;getAuthServiceHealth&quot;,&#xA;            &quot;description&quot;: null,&#xA;            &quot;args&quot;: [],&#xA;            &quot;type&quot;: {&#xA;              &quot;kind&quot;: &quot;NON_NULL&quot;,&#xA;              &quot;name&quot;: null,&#xA;              &quot;ofType&quot;: {&#xA;                &quot;kind&quot;: &quot;OBJECT&quot;,&#xA;                &quot;name&quot;: &quot;HealthResponse&quot;,&#xA;                &quot;ofType&quot;: null&#xA;              }&#xA;            },&#xA;            &quot;isDeprecated&quot;: false,&#xA;            &quot;deprecationReason&quot;: null&#xA;          },&#xA;</code></pre>&#xA;<p>Why I'm getting this error?</p>&#xA;<p>Thanks</p>&#xA;",3569115,,3569115,2022-10-14 09:23:54,2022-10-17 08:34:20,"Apollo iOS client code generation: ""Error: Cannot query field""",<ios><graphql><apollo><apollo-client>,1,0,0,2022-10-14 08:58:11
74067829,2,,61570406,0,,"<p>In my case (using Docker), I had to clear cached volumes with:</p>&#xA;<pre><code>docker system prune -a&#xA;</code></pre>&#xA;<p>After rebuild, schema.gql was updated.</p>&#xA;",16795034,,,,2022-10-14 10:21:31,"",,0,0,0,2022-10-14 10:21:31
74093154,2,,74074514,0,,"<p>Take a look at:</p>&#xA;<ol>&#xA;<li><a href=""https://github.com/Blazemeter/jmeter-bzm-plugins/blob/master/directory-listing/DirectoryListing.md#directory-listing-config"" rel=""nofollow noreferrer"">Directory Listing Config</a> plugin (can be installed using <a href=""https://www.blazemeter.com/blog/jmeter-plugins-manager"" rel=""nofollow noreferrer"">JMeter Plugins Manager</a>)</li>&#xA;<li><a href=""https://jmeter.apache.org/usermanual/functions.html#__FileToString"" rel=""nofollow noreferrer"">__FileToString() function</a></li>&#xA;</ol>&#xA;<p>The idea is to point the Directory Listing Config to the folder where your files containing GraphQL queries live. It will pick up the next file on each iteration of each virtual user and return the path to the file.</p>&#xA;<p><a href=""https://i.stack.imgur.com/G2Io5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/G2Io5.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Then you can read the content of your file using the aforementioned __FileToString() function directly in the sampler's body:</p>&#xA;<p><a href=""https://i.stack.imgur.com/TXtzE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TXtzE.png"" alt=""enter image description here"" /></a></p>&#xA;",2897748,,,,2022-10-17 06:11:01,"",,0,0,0,2022-10-17 06:11:01
74113411,2,,70507413,0,,"<p>I found usefull informations on this Stack post : <a href=""https://stackoverflow.com/questions/39830580/jest-test-fails-typeerror-window-matchmedia-is-not-a-function"">https://stackoverflow.com/questions/58117890/how-to-test-components-using-new-react-router-hooks/58206121#58206121</a></p>&#xA;<p>The right way to mock useOutletContext is to use the mock function like this :</p>&#xA;<pre><code>jest.mock('react-router-dom', () =&gt; ({&#xA;  ...jest.requireActual('react-router-dom'),&#xA;  useOutletContext: () =&gt; ({&#xA;    data: mockedData,&#xA;  }),&#xA;}));&#xA;</code></pre>&#xA;<p>The mockedData is an object of data I'm using for the test.</p>&#xA;<p>At this point I had a small error <code>TypeError: window.matchMedia is not a function</code>. I found a solution in an other stack <a href=""https://stackoverflow.com/questions/39830580/jest-test-fails-typeerror-window-matchmedia-is-not-a-function"">post</a> (the solution is mentioned in <a href=""https://jestjs.io/docs/manual-mocks#mocking-methods-which-are-not-implemented-in-jsdom"" rel=""nofollow noreferrer"">jest documentation</a>)</p>&#xA;<p>Here is the code to add to your test :</p>&#xA;<pre><code>Object.defineProperty(window, 'matchMedia', {&#xA;  writable: true,&#xA;  value: jest.fn().mockImplementation(query =&gt; ({&#xA;    matches: false,&#xA;    media: query,&#xA;    onchange: null,&#xA;    addListener: jest.fn(), // deprecated&#xA;    removeListener: jest.fn(), // deprecated&#xA;    addEventListener: jest.fn(),&#xA;    removeEventListener: jest.fn(),&#xA;    dispatchEvent: jest.fn(),&#xA;  })),&#xA;});&#xA;</code></pre>&#xA;",13337703,,,,2022-10-18 15:14:00,"",,0,0,0,2022-10-18 15:14:00
74128067,2,,72973564,0,,"<p>This looks like <a href=""https://github.com/apollographql/apollo-kotlin/pull/4383"" rel=""nofollow noreferrer"">this issue</a>, for which <a href=""https://github.com/apollographql/apollo-kotlin/pull/4383"" rel=""nofollow noreferrer"">a fix</a> is currently pending to be part of the next release of Apollo Android 2.x.</p>&#xA;",15695,,,,2022-10-19 15:30:17,"",,0,0,0,2022-10-19 15:30:17
74145712,1,,,0,27,"<p>I'm using <strong>Uvicorn</strong> and <strong>Starlette</strong> with <strong>Ariadne</strong> for GraphQL queries, but the <strong>GraphQL</strong> handler does not seem to be working.</p>&#xA;<p>I'm using poetry so this is what my <code>pyproject.toml</code> file looks like:</p>&#xA;<pre><code>[tool.poetry]&#xA;name = &quot;app-backend&quot;&#xA;version = &quot;0.1.0&quot;&#xA;description = &quot;&quot;&#xA;authors = [&quot;user &lt;email@gmail.com&gt;&quot;]&#xA;license = &quot;BSD-2&quot;&#xA;packages = [&#xA;  { include=&quot;api&quot;, from=&quot;.&quot; }&#xA;]&#xA;&#xA;[tool.poetry.dependencies]&#xA;python = &quot;^3.10&quot;&#xA;ariadne = &quot;=0.16.1&quot;&#xA;alembic = &quot;1.8.1&quot;&#xA;psycopg2-binary = &quot;2.9.4&quot;&#xA;PyJWT = &quot;^2.3.0&quot;&#xA;starlette = &quot;0.20.4&quot;&#xA;&quot;marrow.mailer&quot; = &quot;^4.0.3&quot;&#xA;gunicorn = &quot;^20.1.0&quot;&#xA;python-multipart = &quot;^0.0.5&quot;&#xA;SQLAlchemy = &quot;1.4.42&quot;&#xA;rauth = &quot;^0.7.3&quot;&#xA;aiohttp = &quot;3.8.3&quot;&#xA;aiofiles = &quot;22.1.0&quot;&#xA;SQLAlchemy-Utils = &quot;^0.38.3&quot;&#xA;BroadCast = &quot;^1.1.2&quot;&#xA;broadcaster = {extras = [&quot;postgres&quot;], version = &quot;^0.2.0&quot;}&#xA;websockets = &quot;^10.3&quot;&#xA;graphql-core = &quot;3.2.3&quot;&#xA;anyio = &quot;3.6.2&quot;&#xA;uvicorn = {extras = [&quot;standard&quot;], version = &quot;^0.19.0&quot;}&#xA;pytest = &quot;^7.1.3&quot;&#xA;&#xA;[tool.poetry.scripts]&#xA;init_app = &quot;api.scripts.initial_config:main&quot;&#xA;&#xA;[build-system]&#xA;requires = [&quot;poetry-core&gt;=1.0.0&quot;]&#xA;build-backend = &quot;poetry.core.masonry.api&quot;&#xA;</code></pre>&#xA;<p>This is my code</p>&#xA;<pre><code>import uvicorn&#xA;import asyncio&#xA;from ariadne.asgi import GraphQL&#xA;from ariadne.asgi.handlers import GraphQLTransportWSHandler&#xA;from ariadne import MutationType, make_executable_schema&#xA;from starlette.applications import Starlette&#xA;from starlette.routing import (Route, WebSocketRoute)&#xA;&#xA;&#xA;type_defs = &quot;&quot;&quot;&#xA;  type Query {&#xA;    _unused: Boolean&#xA;  }&#xA;&#xA;  type Message {&#xA;    sender: String&#xA;    message: String&#xA;  }&#xA;&#xA;  type Mutation {&#xA;    send(sender: String!, message: String!): Boolean&#xA;  }&#xA;&#xA;  type Subscription {&#xA;    message: Message&#xA;  }&#xA;&quot;&quot;&quot;&#xA;&#xA;mutation = MutationType()&#xA;schema = make_executable_schema(type_defs, mutation)&#xA;&#xA;graphql_handler = GraphQL(&#xA;  schema=schema,&#xA;  debug=True,&#xA;  introspection=True,&#xA;  websocket_handler=GraphQLTransportWSHandler(),&#xA;  logger=&quot;admin.graphql&quot;&#xA;)&#xA;&#xA;routes = [&#xA; Route(&quot;/api/graphql&quot;, graphql_handler, name=&quot;graphql&quot;),&#xA; WebSocketRoute(&quot;/api/subscriptions&quot;, endpoint=graphql_handler.websocket_handler, name=&quot;graphqlws&quot;),&#xA;]&#xA;app = Starlette(routes=routes)&#xA;&#xA;async def main():&#xA;    config = uvicorn.Config(&quot;main:app&quot;, port=8000, log_level=&quot;info&quot;, log_config=&quot;log.json&quot;, ws=&quot;websockets&quot;)&#xA;    server = uvicorn.Server(config)&#xA;    await server.serve()&#xA;&#xA;if __name__ == &quot;__main__&quot;:&#xA;    asyncio.run(main())&#xA;</code></pre>&#xA;<p>Which I'm running like this:</p>&#xA;<pre><code>poetry run python3 main2.py&#xA;</code></pre>&#xA;<p>But trying to open a new websocket connection seems to fail:</p>&#xA;<pre><code>new WebSocket('ws://localhost:8000/api/subscriptions');&#xA;</code></pre>&#xA;<p>I get the following errors:</p>&#xA;<pre><code>Traceback (most recent call last):&#xA;  File &quot;&lt;...&gt;/lib/python3.10/site-packages/uvicorn/protocols/websockets/websockets_impl.py&quot;, line 230, in run_asgi&#xA;    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)&#xA;  File &quot;&lt;...&gt;/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py&quot;, line 78, in __call__&#xA;    return await self.app(scope, receive, send)&#xA;  File &quot;&lt;...&gt;/lib/python3.10/site-packages/starlette/applications.py&quot;, line 124, in __call__&#xA;    await self.middleware_stack(scope, receive, send)&#xA;  File &quot;&lt;...&gt;/lib/python3.10/site-packages/starlette/middleware/errors.py&quot;, line 149, in __call__&#xA;    await self.app(scope, receive, send)&#xA;  File &quot;&lt;...&gt;/lib/python3.10/site-packages/starlette/middleware/cors.py&quot;, line 76, in __call__&#xA;    await self.app(scope, receive, send)&#xA;  File &quot;&lt;...&gt;/lib/python3.10/site-packages/starlette/middleware/authentication.py&quot;, line 48, in __call__&#xA;    await self.app(scope, receive, send)&#xA;  File &quot;&lt;...&gt;/lib/python3.10/site-packages/starlette/middleware/base.py&quot;, line 24, in __call__&#xA;    await self.app(scope, receive, send)&#xA;  File &quot;&lt;...&gt;/lib/python3.10/site-packages/starlette/middleware/exceptions.py&quot;, line 51, in __call__&#xA;    await self.app(scope, receive, send)&#xA;  File &quot;&lt;...&gt;/lib/python3.10/site-packages/starlette/routing.py&quot;, line 680, in __call__&#xA;    await route.handle(scope, receive, send)&#xA;  File &quot;&lt;...&gt;/lib/python3.10/site-packages/starlette/routing.py&quot;, line 334, in handle&#xA;    await self.app(scope, receive, send)&#xA;TypeError: 'GraphQLTransportWSHandler' object is not callable&#xA;</code></pre>&#xA;<p>I've looked at <a href=""https://ariadnegraphql.org/docs/subscriptions#writing-subscriptions"" rel=""nofollow noreferrer"">Ariadne's docs on subscriptions</a> and, although using websocket_handler on a websocket route is not documented (it was clarified on one of ariadne's PR's), neither is this behaviour.</p>&#xA;<p>Is there something I missed?</p>&#xA;",1442255,,,,2022-10-20 20:03:04,GraphQL websocket handler not working on Ariadne (object is not callable),<websocket><graphql><uvicorn><starlette>,0,0,0,2022-10-20 20:03:04
74147942,1,,,0,17,"<p>do you guys know what's the Graphql Endpoint for Strapi deployment on DigitalOcean ?. Usually for localhost, it is localhost:1337/graphql. With my app that is hosted on cloud - DigitalOcean, i tried to make it <a href=""https://strapi-app-official-36lyd.ondigitalocean.app/graphql"" rel=""nofollow noreferrer"">https://strapi-app-official-36lyd.ondigitalocean.app/graphql</a>, the error message said 'GET QUERY MISSING&quot;. Any idea what happened?</p>&#xA;<p>In mt Strapi config, i've included the config in plugin.ts as below:</p>&#xA;<pre><code>export default {&#xA;  //&#xA;  graphql: {&#xA;    config: {&#xA;      endpoint: &quot;/graphql&quot;,&#xA;      shadowCRUD: true,&#xA;      playgroundAlways: false,&#xA;      depthLimit: 7,&#xA;      amountLimit: 100,&#xA;      apolloServer: {&#xA;        tracing: false,&#xA;      },&#xA;    },&#xA;  },&#xA;};&#xA;</code></pre>&#xA;<p>Thank you.</p>&#xA;",8850095,,,,2022-10-21 01:44:16,Graphql Endpoint for Strapi deployment on DigitalOcean?,<graphql><digital-ocean><strapi>,0,0,0,2022-10-21 01:44:16
74167395,1,,,0,15,"<p>react admin version is 2.9.8</p>&#xA;<p>graphql</p>&#xA;<pre><code>&#xA;type TradeApplication {&#xA;    records: TradeApplicationRecords&#xA;}&#xA;&#xA;type TradeApplicationRecords {&#xA;    before: TradeApplicationRecord&#xA;    after: TradeApplicationRecord&#xA;}&#xA;</code></pre>&#xA;<p>Actual generated query checked in chrome devtools</p>&#xA;<pre><code>...&#xA;records {&#xA;    after {&#xA;        applicantBalance&#xA;        registrantBalance&#xA;        __typename&#xA;    }&#xA;    __typename&#xA;}&#xA;...&#xA;</code></pre>&#xA;<p>query result in chrome devtools</p>&#xA;<pre><code>...&#xA;&quot;records&quot;: {&#xA;    &quot;after&quot;: {&#xA;        &quot;applicantBalance&quot;: 717.36000000,&#xA;        &quot;registrantBalance&quot;: 13625.66625985,&#xA;        &quot;__typename&quot;: &quot;TradeApplicationRecord&quot;&#xA;    }, &quot;__typename&quot;: &quot;TradeApplicationRecords&quot;&#xA;},&#xA;...&#xA;</code></pre>&#xA;<p>Why is 'before' missing from the created query? So, of course, only 'after' and 'before' do not appear in the result.</p>&#xA;<p>Please give me a little hint.</p>&#xA;",20311016,,20311016,2022-10-24 00:52:09,2022-10-24 00:52:09,"The same type, the problem that only comes out when it is a different attribute",<graphql><react-admin>,0,0,0,2022-10-22 22:02:08
74170372,2,,72657239,0,,<p>You should downgrade your react version to <code>react@&quot;^16.8.0&quot;</code> in <code>package.json</code> because <code>@apollo/react-common@3.1.4</code> reports is incompatible with 17. You must wait until they upgrade or remove the package.</p>&#xA;,1392807,,,,2022-10-23 10:25:50,"",,0,0,0,2022-10-23 10:25:50
74171778,1,,,1,51,"<p>I Have tried every possible Nginx config but it's showing connection failed every time.</p>&#xA;<p>config file:</p>&#xA;<pre><code>    location / {&#xA;            # First attempt to serve request as file, then&#xA;            # as directory, then fall back to displaying a 404.&#xA;            #try_files $uri $uri/ =404;&#xA;            proxy_pass http://127.0.0.1:1337;&#xA;            proxy_set_header   X-Forwarded-For $remote_addr;&#xA;            proxy_set_header   Host $http_host;&#xA;    }&#xA;&#xA;    location /graphql {&#xA;    proxy_pass         https://bakbakgraphql.com/graphql;&#xA;    proxy_http_version 1.1;&#xA;    proxy_set_header   Upgrade $http_upgrade;&#xA;    proxy_set_header   Connection &quot;upgrade&quot;;&#xA;    proxy_set_header   Host $host;&#xA;}&#xA;</code></pre>&#xA;<p>Error:</p>&#xA;<p><a href=""https://i.stack.imgur.com/bAlGS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bAlGS.png"" alt=""enter image description here"" /></a></p>&#xA;",8321025,,2050455,2022-10-23 20:12:34,2022-10-23 20:12:34,Graphql web socket connection failed over production,<javascript><node.js><nginx><graphql>,0,4,0,2022-10-23 14:07:13
74171898,1,,,0,14,"<p>Follow the <a href=""https://www.apollographql.com/docs/apollo-server/getting-started/"" rel=""nofollow noreferrer"">official doc</a> I have buit a simple graphql server, and use express to serve it locally (for development), I also build a web app which uses Apollo-Client to get the data from the server.</p>&#xA;<p>Now I want to deploy my Apollo-Server to another computer which is on the same LAN, you can consider it as the &quot;PROD&quot;.</p>&#xA;<p>I saw on the official site it recommends using <a href=""https://www.apollographql.com/docs/apollo-server/deployment/heroku/"" rel=""nofollow noreferrer"">Heroku</a>, but I don't need any cloud platforms. What are the steps to serve my Apollo-Serve on a local machine? (because it's internal use only, I also want to turn on the graphql playground)</p>&#xA;",3011354,,,,2022-10-23 20:20:13,How to deploy GraphQL Apollo-Server on a local machine?,<graphql>,1,0,0,2022-10-23 14:23:01
74173271,2,,72032247,0,,"<ol>&#xA;<li>Create a <a href=""https://www.apollographql.com/docs/react/api/link/introduction/"" rel=""nofollow noreferrer"">custom link</a> in your Apollo Client code</li>&#xA;<li>Inspect or <code>console.log()</code> the <a href=""https://www.apollographql.com/docs/react/api/link/introduction/#the-operation-object"" rel=""nofollow noreferrer"">operation object</a> in your custom link</li>&#xA;<li><code>operation.query</code> will contain the parsed gql code</li>&#xA;<li><code>operation.variables</code> will contain the gql variables</li>&#xA;</ol>&#xA;",2805154,,,,2022-10-23 17:22:31,"",,0,0,0,2022-10-23 17:22:31
74174493,2,,74171898,0,,"<p>Assuming that:</p>&#xA;<ol>&#xA;<li>You have your GraphQL server running at <code>localhost:4000</code> (or any other port)</li>&#xA;<li>You have enabled the playground (it's enabled by default)</li>&#xA;<li>Your machine allows inbound network connections (at least from your LAN)</li>&#xA;</ol>&#xA;<p>Then this is just a matter of figuring out what your machine's local network name or IP address is.</p>&#xA;<p>Let's say your local network name is <code>wtf.local</code> - then you should be able to connect to your server from another machine by going to the url <code>http://wtf.local:4000</code></p>&#xA;<p>Or if you know your local IP, say <code>192.168.0.22</code>, then try <code>http://192.168.0.22:4000</code></p>&#xA;",2805154,,,,2022-10-23 20:20:13,"",,0,0,0,2022-10-23 20:20:13
74192846,1,,,0,52,"<p>Trying to reverse proxy graphql APIs created using spring-boot (using leangen spring-boot starter).</p>&#xA;<p>Was able to execute APIs using direct host, but while using reverse proxy host, it was getting 403 error (/graphql). However, we could able to open query browser (gui) using reverse proxy&#xA;Any clue</p>&#xA;<p>Regards&#xA;Venkata</p>&#xA;",8394088,,,,2022-10-25 10:45:35,403 Error for spring-boot graphql API with reverse proxy,<spring-boot><graphql><reverse-proxy>,0,0,0,2022-10-25 10:45:35
74218582,2,,74003714,0,,"<p>Turns out you must upgrade to the version <code>4.1.0</code> of the <code>apollo-angular</code>. I was able to fix the issue after upgrading.</p>&#xA;<p>Check out this <a href=""https://github.com/kamilkisiela/apollo-angular/releases/tag/v4.1.0"" rel=""nofollow noreferrer"">release</a>.</p>&#xA;",2637261,,,,2022-10-27 07:55:14,"",,0,0,0,2022-10-27 07:55:14
74223583,2,,63595720,0,,"<p>The error is coming from <code>ApolloServerPluginUsageReporting</code></p>&#xA;<p>This issue is fixed on apollo-server-core version v3.8.2. <a href=""https://github.com/apollographql/apollo-server/issues/4472"" rel=""nofollow noreferrer"">Github issue Reference</a></p>&#xA;<p>If you cannot upgrade your Apollo version, alternatively, you can try to create wrapper around function <code>willResolveField</code> (apollo-server-core) with try/catch to suppress it.</p>&#xA;<pre><code>  public willResolveField(info: GraphQLResolveInfo): () =&gt; void {&#xA;    if (!this.startHrTime) {&#xA;      throw internalError('willResolveField called before startTiming!');&#xA;    }&#xA;&#xA;    try { &lt;&lt;-- put your wrapper here&#xA;      if (this.stopped) { &#xA;        throw internalError('willResolveField called after stopTiming!');&#xA;      }&#xA;    } catch(){}&#xA;&#xA;    const path = info.path;&#xA;    const node = this.newNode(path);&#xA;    node.type = info.returnType.toString();&#xA;    node.parentType = info.parentType.toString();&#xA;    node.startTime = durationHrTimeToNanos(process.hrtime(this.startHrTime));&#xA;    if (typeof path.key === 'string' &amp;&amp; path.key !== info.fieldName) {&#xA;      // This field was aliased; send the original field name too (for FieldStats).&#xA;      node.originalFieldName = info.fieldName;&#xA;    }&#xA;&#xA;    return () =&gt; {&#xA;      node.endTime = durationHrTimeToNanos(process.hrtime(this.startHrTime));&#xA;    };&#xA;  }&#xA;</code></pre>&#xA;",1118978,,,,2022-10-27 14:15:20,"",,0,0,0,2022-10-27 14:15:20
74244163,2,,64125547,0,,"<p>I have faced this same problem recently.</p>&#xA;<p>After some research, it appears that I have to set some ENV VAR in order to correctly run GraphQL playground. On Heroku, I set the following:</p>&#xA;<pre><code>GRAPHQL_PLAYGROUND_ENABLED=true&#xA;NODE_ENV=development&#xA;PRODUCTION=false&#xA;</code></pre>&#xA;<p>After that, I rerun the dynos of the app, and the playground loaded correctly.</p>&#xA;<p>From my understanding, it is not a good practice to serve GraphQL playground in production environment. So take care of flipping the ENV VAR for production, or even build an app for development, and another for production.</p>&#xA;<p>Hope it could help.</p>&#xA;",6831871,,,,2022-10-29 09:28:11,"",,0,0,0,2022-10-29 09:28:11
74260658,2,,74177864,0,,<p>I contacted Microsoft about this issue and they told me that it is a bug on the service side.&#xA;The product team is working on the fix and it will be released in v.33 (4 to 6 weeks).</p>&#xA;,16970390,,,,2022-10-31 08:38:42,"",,0,0,0,2022-10-31 08:38:42
74264345,1,,,0,11,"<p>In my React app I am using <a href=""https://www.apollographql.com/docs/react/"" rel=""nofollow noreferrer"">Apollo Client</a>.</p>&#xA;<p>When I am logged-in in the cms <em>and</em> when I am selecting the jwt token in Chrome devtools:&#xA;I get <code>Status Code: 200</code>. When I am not logged in I get <code>Status Code: 403</code> on the Request URL: <code>https://my-domain.com/jwt/token</code>.</p>&#xA;<p>I can see this in Chrome devtools &gt; Network tab &gt; Selecting the 'token' &gt; and then in the Headers tab.</p>&#xA;<p>In my React app I have to make a condition based on above values.</p>&#xA;<p>Also in the <code>Response Headers</code> I need access to the <code>content-type</code>.</p>&#xA;",4822666,,4822666,2022-10-31 18:31:58,2022-10-31 18:31:58,Make a condition based on Request URL Status Code and Response Header value in React app,<reactjs><jwt><http-status-code-404><apollo-client><response-headers>,0,0,0,2022-10-31 13:53:56
74276232,2,,74274373,0,,"<p>Not many details in the post but I'll give it a go.</p>&#xA;<p>If you are receiving an error whilst in development similar to the one pictured below, then it means the server you are trying to contact does not allow the host you are developing on. This can be fixed either by either changing the security settings of your browser or installing a plugin that disables CORS.</p>&#xA;<p>However, if you are receiving this error in a non-local environment, then it means you should add the hostname of your frontend into the Access-Control-Allow-Origin on the serverside (<a href=""https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin"" rel=""nofollow noreferrer"">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Origin</a>).</p>&#xA;<p>Links for more details</p>&#xA;<ol>&#xA;<li>Disable CORS in Chrome + Safari and the plugin for Firefox - <a href=""https://medium.com/swlh/avoiding-cors-errors-on-localhost-in-2020-5a656ed8cefa"" rel=""nofollow noreferrer"">https://medium.com/swlh/avoiding-cors-errors-on-localhost-in-2020-5a656ed8cefa</a></li>&#xA;<li>Plugin for Chrome - <a href=""https://stackoverflow.com/questions/10883211/why-does-my-http-localhost-cors-origin-not-work"">Why does my http://localhost CORS origin not work?</a>&#xA;<a href=""https://i.stack.imgur.com/jBYVu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jBYVu.png"" alt=""CORS error"" /></a></li>&#xA;</ol>&#xA;",13728487,,,,2022-11-01 12:50:48,"",,0,0,0,2022-11-01 12:50:48
74350192,1,,,0,27,"<p>I have a GraphQL query that looks like this:</p>&#xA;<pre><code>query ($device_id: ID!) {&#xA;  device(id: $device_id) {&#xA;    hostname: name&#xA;    tags {&#xA;      name&#xA;    }&#xA;  }&#xA;  vlans {&#xA;    name&#xA;    tags {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Instead of dumping all vlans along with the device, I would like to only return vlans where the vlan tags share a common tag with the device tags. Any way to achieve this?</p>&#xA;",5407271,,,,2022-11-07 17:28:40,GraphQL Query where two datasets share common list items,<graphql>,1,1,0,2022-11-07 16:58:04
74350564,2,,74350192,0,,<p>You're running two queries at the same time. These will run independently but can share query variables.</p>&#xA;<p>I suggest creating a second <code>vlans</code> query as:</p>&#xA;<pre><code>query vlansByDevice(id: ID!): [vlan]&#xA;</code></pre>&#xA;<p>Which looks at the <code>id</code> variable to find the appropriate vlans based on common tags.</p>&#xA;<p>Then you could do:</p>&#xA;<pre><code>query ($device_id: ID!) {&#xA;  device(id: $device_id) {&#xA;    hostname: name&#xA;    tags {&#xA;      name&#xA;    }&#xA;  }&#xA;  vlansByDevice(id: $device_id) {&#xA;    name&#xA;    tags {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,2805154,,,,2022-11-07 17:28:40,"",,0,1,0,2022-11-07 17:28:40
74395010,2,,74388732,0,,"<p>If you're using Apollo the answer is right there <a href=""https://www.apollographql.com/blog/graphql/security/why-you-should-disable-graphql-introspection-in-production/#turning-off-introspection-in-production"" rel=""nofollow noreferrer"">in the docs</a>.</p>&#xA;<pre><code>const server = new ApolloServer({&#xA;  typeDefs,&#xA;  resolvers,&#xA;  introspection: process.env.NODE_ENV !== 'production'&#xA;});&#xA;</code></pre>&#xA;<p>This disables introspection in production.</p>&#xA;<p>If you want to disable it always (not recommended as it makes it harder to develop):</p>&#xA;<pre><code>introspection: false&#xA;</code></pre>&#xA;",2805154,,,,2022-11-10 20:31:03,"",,0,0,0,2022-11-10 20:31:03
74412536,1,,,0,15,"<blockquote>&#xA;<p>My English is not good, I rely on Google Translate.</p>&#xA;</blockquote>&#xA;<p>Tech stack:</p>&#xA;<ul>&#xA;<li>Next</li>&#xA;<li>Apollo</li>&#xA;</ul>&#xA;<p>I want to use <code>getServerSideProps</code> method in Apollo <code>useQuery</code> hook,&#xA;But React's eslint rules can't be used like this.</p>&#xA;<p>e.g</p>&#xA;<pre><code>// server render&#xA;export const getServerSideProps: GetServerSideProps = async () =&gt; {&#xA;&#xA;  // here&#xA;  const { data } = await useQuery(info)&#xA;  console.log('data ==== ', data)&#xA;&#xA;  return {&#xA;    props: {&#xA;    },&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Is there any alternative please?&#xA;Allows me to use GraphQL to fetch data while SSR.</p>&#xA;<p>thx</p>&#xA;<p>import the <code>client</code> instance directly in <code>_app.tsx</code></p>&#xA;<p>e.g</p>&#xA;<pre><code>import { client } from './_app'&#xA;&#xA;export const getServerSideProps: GetServerSideProps = async () =&gt; {&#xA;&#xA;  // here&#xA;  const res = await client.query(info)&#xA;  console.log('res ==== ', res)&#xA;&#xA;  return {&#xA;    props: {&#xA;    },&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>result</p>&#xA;<pre><code>Invariant Violation: query option is required. You must specify your GraphQL document in the query option.&#xA;</code></pre>&#xA;",16267705,,,,2022-11-12 11:33:01,I want to use getServerSideProps method in Apollo useQuery,<react-hooks><next.js><graphql><apollo><apollo-client>,0,0,0,2022-11-12 11:33:01
74416678,2,,70554364,1,,"<p>You can find the solution <a href=""https://docs.amplify.aws/cli/graphql/data-modeling/#has-many-relationship"" rel=""nofollow noreferrer"">here</a> as for the documentation.&#xA;Please make sure that you don't read the legacy docs, as @connection directive is deprecated.</p>&#xA;<p>Hope it helps!</p>&#xA;",13438544,,,,2022-11-12 21:20:17,"",,0,0,0,2022-11-12 21:20:17
74430259,2,,60609167,0,,"<p>It seems this issue got fixed:</p>&#xA;<p><a href=""https://i.stack.imgur.com/KOSjw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KOSjw.png"" alt=""Query with output in GitHub GraphQL Explorer"" /></a></p>&#xA;",1114918,,,,2022-11-14 10:34:29,"",,0,0,0,2022-11-14 10:34:29
74433720,2,,74433336,0,,"<p>Playground was removed from version 5.</p>&#xA;<p>From <a href=""https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v4-to-v5/"" rel=""nofollow noreferrer"">here</a></p>&#xA;<blockquote>&#xA;<p><strong>Removal of GraphQL Playground</strong>&#xA;Maybe you didn’t know, but Gatsby supported GraphQL Playground as an alternative to GraphiQL for some time now. With Gatsby 5 we’ve updated GraphiQL to v2 which has feature parity with GraphQL Playground. Thus we removed the GATSBY_GRAPHQL_IDE environment variable and GraphQL Playground. Visit the GraphiQL guide to learn more about GraphiQL v2.</p>&#xA;</blockquote>&#xA;",11067821,,,,2022-11-14 15:03:31,"",,0,0,0,2022-11-14 15:03:31
74434341,1,,,1,21,"<p>So I'm using apollo-graphql,&#xA;I have a subgraph named Course, in this subgraph I have a type Course which looks like this:</p>&#xA;<pre><code>type Course {&#xA;  _id: ID&#xA;  title: String&#xA;}&#xA;</code></pre>&#xA;<p>Now I have a second subgraph named progress, in this one I extend the Course type and add a field:</p>&#xA;<pre><code>extend type Course @key(fields: &quot;_id&quot;) {&#xA;  _id: ID @external&#xA;  totalProgression: Int&#xA;}&#xA;</code></pre>&#xA;<p>And now I want to query it like this:</p>&#xA;<pre><code>Courses {&#xA;  _id&#xA;  title&#xA;  totalProgression&#xA;}&#xA;</code></pre>&#xA;<p>(Courses is a query which returns all courses)&#xA;This query works, but the problem is, it's way too slow. And that's because for each course, it is going to make a db request to get the totalProgression. If I add another nested field from another subgraph, it is going to take even longer.</p>&#xA;<p>My question here is, is there any way I could make this faster? For example could I make one db request to get all the totalProgression and then putting them in the courses? Without having to merge my subgraphs.</p>&#xA;<p>My only solution for now is to get the totalProgressions inside the Courses resolvers, but that would kill the point of making another subgraph. Yes I could juste merge all my subgraphes, but that's not how graphql is supposed to work.</p>&#xA;",18232344,,18232344,2022-11-14 16:02:44,2022-11-14 16:02:44,Graphql query way too slow with nested fields,<node.js><graphql><apollo>,0,0,0,2022-11-14 15:47:52
74453995,1,,,4,143,"<p>I'm receiving many <code>npm WARN</code> alerts after installing a fresh copy of Gatsby 5, and I can't make sense of the output. I have three questions, really,</p>&#xA;<ol>&#xA;<li>What is causing these errors?</li>&#xA;<li>Why are these errors happening with a fresh install?</li>&#xA;<li>What is the proper method for diagnosing and resolving a problem like this?</li>&#xA;</ol>&#xA;<p>I ask these questions because I think I'll likely come across more errors like this in the future, and I'd like to pre-emptively learn how to deal with them correctly.</p>&#xA;<p>I was reading some questions on S.O, and some recommend installing <code>--legacy</code> deps but I question why a fresh install of a new release, I.e. (Gatsby 5.0) needs legacy deps. Further to this, I don't see any recommendation of legacy deps in my example (As such, I'm not sure what I need to do).</p>&#xA;<p>(Any reading material on solving a problem like this would be most welcome.)</p>&#xA;<p>I'm running the following Gatsby CLI Command:</p>&#xA;<pre class=""lang-bash prettyprint-override""><code>gatsby new blog https://github.com/gatsbyjs/gatsby-starter-blog&#xA;</code></pre>&#xA;<p>I'm currently using the following node version:</p>&#xA;<pre class=""lang-bash prettyprint-override""><code>node -v&#xA;v18.11.0&#xA;&#xA;npm -v&#xA;8.19.2&#xA;</code></pre>&#xA;<p>This is the output;</p>&#xA;<pre class=""lang-bash prettyprint-override""><code>npm WARN ERESOLVE overriding peer dependency&#xA;npm WARN While resolving: express-graphql@0.12.0&#xA;npm WARN Found: graphql@16.6.0&#xA;npm WARN node_modules/graphql&#xA;npm WARN   peer graphql@&quot;*&quot; from @ardatan/relay-compiler@12.0.0&#xA;npm WARN   node_modules/@ardatan/relay-compiler&#xA;npm WARN     @ardatan/relay-compiler@&quot;12.0.0&quot; from @graphql-tools/relay-operation-optimizer@6.5.10&#xA;npm WARN     node_modules/@graphql-tools/relay-operation-optimizer&#xA;npm WARN   28 more (@graphql-codegen/add, @graphql-codegen/core, ...)&#xA;npm WARN &#xA;npm WARN Could not resolve dependency:&#xA;npm WARN peer graphql@&quot;^14.7.0 || ^15.3.0&quot; from express-graphql@0.12.0&#xA;npm WARN node_modules/express-graphql&#xA;npm WARN   express-graphql@&quot;^0.12.0&quot; from gatsby@5.0.0&#xA;npm WARN   node_modules/gatsby&#xA;npm WARN &#xA;npm WARN Conflicting peer dependency: graphql@15.8.0&#xA;npm WARN node_modules/graphql&#xA;npm WARN   peer graphql@&quot;^14.7.0 || ^15.3.0&quot; from express-graphql@0.12.0&#xA;npm WARN   node_modules/express-graphql&#xA;npm WARN     express-graphql@&quot;^0.12.0&quot; from gatsby@5.0.0&#xA;npm WARN     node_modules/gatsby&#xA;npm WARN ERESOLVE overriding peer dependency&#xA;npm WARN While resolving: react-server-dom-webpack@0.0.0-experimental-c8b778b7f-20220825&#xA;npm WARN Found: react@18.2.0&#xA;npm WARN node_modules/react&#xA;npm WARN   react@&quot;^18.1.0&quot; from the root project&#xA;npm WARN   8 more (@gatsbyjs/reach-router, gatsby, gatsby-link, ...)&#xA;npm WARN &#xA;npm WARN Could not resolve dependency:&#xA;npm WARN peer react@&quot;0.0.0-experimental-c8b778b7f-20220825&quot; from react-server-dom-webpack@0.0.0-experimental-c8b778b7f-20220825&#xA;npm WARN node_modules/react-server-dom-webpack&#xA;npm WARN   react-server-dom-webpack@&quot;0.0.0-experimental-c8b778b7f-20220825&quot; from gatsby@5.0.0&#xA;npm WARN   node_modules/gatsby&#xA;npm WARN &#xA;npm WARN Conflicting peer dependency: react@0.0.0-experimental-c8b778b7f-20220825&#xA;npm WARN node_modules/react&#xA;npm WARN   peer react@&quot;0.0.0-experimental-c8b778b7f-20220825&quot; from react-server-dom-webpack@0.0.0-experimental-c8b778b7f-20220825&#xA;npm WARN   node_modules/react-server-dom-webpack&#xA;npm WARN     react-server-dom-webpack@&quot;0.0.0-experimental-c8b778b7f-20220825&quot; from gatsby@5.0.0&#xA;npm WARN     node_modules/gatsby&#xA;&#xA;changed 3 packages, and audited 1478 packages in 3s&#xA;&#xA;302 packages are looking for funding&#xA;  run `npm fund` for details&#xA;&#xA;found 0 vulnerabilities&#xA;</code></pre>&#xA;",2220339,,5585371,2022-11-16 07:19:54,2022-11-16 07:19:54,Fresh `npm WARN ERESOLVE overriding peer dependency`,<npm><graphql>,0,0,0,2022-11-16 01:08:47
74506480,1,,,0,34,"<p><code>Hi</code>.<br />&#xA;I have this most simple express graphql server.<br />&#xA;I want to use <code>sofa-api</code> to make it &quot;rest-able&quot;.</p>&#xA;<p>Two problems:</p>&#xA;<ol>&#xA;<li>when you go to <code>/api/hello</code> it should say &quot;Hello World!&quot;, now its null. the <code>/graphql</code> route does work correctly and return &quot;Hello World!&quot;.</li>&#xA;<li>The rest swagger interface is not loading at <code>/api</code><br />&#xA;you can play with it here: <a href=""https://stackblitz.com/edit/node-p6jnji?file=index.js,package.json"" rel=""nofollow noreferrer"">https://stackblitz.com/edit/node-p6jnji?file=index.js,package.json</a></li>&#xA;</ol>&#xA;<pre class=""lang-js prettyprint-override""><code>&#xA;var schema = buildSchema(`&#xA;type Query{&#xA;    hello:String&#xA;}`);&#xA;&#xA;const openApi = OpenAPI({&#xA;  schema,&#xA;  info: {&#xA;    title: 'Example API',&#xA;    version: '3.0.0',&#xA;  },&#xA;});&#xA;&#xA;var root = {&#xA;  hello: () =&gt; {&#xA;    return 'Hello World!';&#xA;  },&#xA;};&#xA;&#xA;var app = express();&#xA;app.use(&#xA;  '/graphql',&#xA;  graphqlHTTP({&#xA;    schema: schema,&#xA;    rootValue: root,&#xA;    graphiql: true,&#xA;  })&#xA;);&#xA;&#xA;app.use(&#xA;  '/api',&#xA;  useSofa({&#xA;    schema,&#xA;    basePath: '/api',&#xA;    onRoute(info) {&#xA;      openApi.addRoute(info, {&#xA;        basePath: '/api',&#xA;      });&#xA;    },&#xA;  })&#xA;);&#xA;&#xA;writeFileSync('./swagger.json', JSON.stringify(openApi.get(), null, 2));&#xA;app.listen(4400);&#xA;</code></pre>&#xA;<p>Thanks</p>&#xA;",936651,,936651,2022-11-20 14:38:34,2022-11-24 16:53:18,Using sofa api with the most simple express server,<express><graphql><sofa-api>,1,0,0,2022-11-20 07:57:05
74508409,2,,74500500,0,,"<p>Still have no solution to the issue after several changes. I did upgrade to Node16, but more importantly, I followed the documentation here:&#xA;<a href=""https://www.prisma.io/docs/guides/deployment/deployment-guides/deploying-to-aws-lambda#deployment-using-serverless-webpack"" rel=""nofollow noreferrer"">https://www.prisma.io/docs/guides/deployment/deployment-guides/deploying-to-aws-lambda#deployment-using-serverless-webpack</a>&#xA;The npm package serverless-esbuild started me in the right direction, but it had issues with prisma.&#xA;I don't like having to use webpack, and I am still getting a CORS error, but the original issue of not finding the module is fixed.&#xA;Also changed my handler file to look like this:</p>&#xA;<pre><code>import app from './app';&#xA;import serverless from 'serverless-http';&#xA;&#xA;const handler = () =&gt; {&#xA;    return serverless(app);&#xA;}&#xA;export { handler };&#xA;</code></pre>&#xA;<p>I was surprised to see the difference in the webpack build and the esbuild. esbuild is 1.2 MB, where the webpack build is 96 MB! Subsequent runs hit the aws max at around 200MB and failed to upload. It also takes at least 2x as long to complete. I am considering looking at alternatives to serverless as it seems to be tough to configure for what I have to think is a basic graphql implementation.</p>&#xA;",3349255,,3349255,2022-11-22 21:29:05,2022-11-22 21:29:05,"",,0,0,0,2022-11-20 13:15:13
74515792,2,,74514782,0,,"<p>Heroku recommends using the config vars function without saving .env or something to files.</p>&#xA;<p>If you save your configuration as a file, be careful because confidential information will likely be disclosed in a public repository.</p>&#xA;<p>Please see Heroku's article:<a href=""https://devcenter.heroku.com/articles/config-vars"" rel=""nofollow noreferrer"">https://devcenter.heroku.com/articles/config-vars</a></p>&#xA;",20559618,,20559618,2022-11-21 08:02:09,2022-11-21 08:02:09,"",,0,0,0,2022-11-21 08:01:31
74525259,1,,,0,37,"<p>:)</p>&#xA;<p>I am starting a new Laravel project with <a href=""https://lighthouse-php.com/"" rel=""nofollow noreferrer"">Lighthouse</a> and have been problems with resolving non root fields.<br />&#xA;According to the <a href=""https://lighthouse-php.com/5/the-basics/fields.html#resolving-non-root-fields"" rel=""nofollow noreferrer"">documentation</a> here for each of the fields that have complex types, there should be a model and a query provided for the field.<br />&#xA;So in this example I have a <code>Version</code> object which has two subfields: <code>appVersion</code> and <code>apiVersion</code>. Here is what I have in my <code>schema.graphql</code> file:</p>&#xA;<pre><code>type Query {&#xA;    version: Version&#xA;}&#xA;&#xA;type Version {&#xA;    appVersion: String&#xA;    apiVersion: String&#xA;}&#xA;</code></pre>&#xA;<p>And in addition, here is my model for <code>Version</code>:</p>&#xA;<pre><code>&lt;?php&#xA;&#xA;namespace App\Models;&#xA;&#xA;class Version {&#xA;&#xA;    private string $appVersion;&#xA;&#xA;    private string $apiVersion;&#xA;&#xA;    public function __construct() {&#xA;        $composer = file_get_contents('../composer.json');&#xA;        $content = json_decode($composer, true);&#xA;&#xA;        $this-&gt;appVersion = $content['app-version'];&#xA;        $this-&gt;apiVersion = $content['version'];&#xA;    }&#xA;&#xA;    public function getAppVersion() : string {&#xA;        return $this-&gt;appVersion;&#xA;    }&#xA;&#xA;    public function getApiVersion() : string {&#xA;        return $this-&gt;apiVersion;&#xA;    }&#xA;&#xA;    function export() : array {&#xA;        return [&#xA;            'app' =&gt; $this-&gt;getAppVersion(),&#xA;            'api' =&gt; $this-&gt;getApiVersion(),&#xA;        ];&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>And the Query file for <code>Version</code>:</p>&#xA;<pre><code>&lt;?php&#xA;&#xA;namespace App\GraphQL\Queries;&#xA;&#xA;use GraphQL\Type\Definition\ResolveInfo;&#xA;use Nuwave\Lighthouse\Support\Contracts\GraphQLContext;&#xA;&#xA;final class Version {&#xA;&#xA;    public function __invoke ($version, array $args, GraphQLContext $context, ResolveInfo $resolveInfo) {&#xA;        return $version-&gt;export()[$resolveInfo-&gt;fieldName];&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>However the <code>$version</code> seems to be always null when I try to query version using the following:</p>&#xA;<pre><code>{&#xA;  version {&#xA;    appVersion&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And I cannot figure our why. I tried to follow the docs as best as I could, but I am probably missing something really simple here :/&#xA;I should also mention that querying simple fields (like fields that don't have a sub selection) works here for me.&#xA;Any help would be much appreciated :)</p>&#xA;<p>I implemented a graphql resolver, however the models were not resolved correctly.</p>&#xA;",8092143,,,,2022-11-22 10:59:20,Problem with graphql resolvers using Lighthouse Graphql with Laravel,<php><laravel><graphql><laravel-lighthouse>,2,0,0,2022-11-21 21:47:31
74529495,2,,74525259,0,,"<p>Add <a href=""https://lighthouse-php.com/master/api-reference/directives.html#field"" rel=""nofollow noreferrer"">@field</a> directive to your schema:</p>&#xA;<pre><code>type Query {&#xA;    version: Version @field(resolver: &quot;App\GraphQL\Queries\Version&quot;)&#xA;}&#xA;</code></pre>&#xA;",19372996,,,,2022-11-22 08:24:04,"",,0,0,0,2022-11-22 08:24:04
74556332,2,,74545138,0,,"<p>I needed to upgrade to the latest version of react-scripts, in my case version 5.0.1.</p>&#xA;",20547034,,,,2022-11-24 06:13:06,"",,0,0,0,2022-11-24 06:13:06
74570625,2,,74546212,0,,"<p>The issue was an SSR on client side.&#xA;<a href=""https://github.com/apollographql/apollo-client/issues/10311"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client/issues/10311</a></p>&#xA;",16703396,,,,2022-11-25 09:27:53,"",,0,0,0,2022-11-25 09:27:53
74577517,1,,,0,14,"<p>I'm trying to generate my graphql file by running <code>graphql-codegen --config codegen.yml</code> and I'm getting this error:</p>&#xA;<pre><code>    Error: Cannot use GraphQLInterfaceType &quot;AbstractEntity&quot; from another module or realm.&#xA;&#xA;    Ensure that there is only one instance of &quot;graphql&quot; in the node_modules&#xA;    directory. If different versions of &quot;graphql&quot; are the dependencies of other&#xA;    relied on modules, use &quot;resolutions&quot; to ensure only one version is installed.&#xA;&#xA;    https://yarnpkg.com/en/docs/selective-version-resolutions&#xA;&#xA;    Duplicate &quot;graphql&quot; modules cannot be used at the same time since different&#xA;    versions may have different capabilities and behavior. The data from one&#xA;    version used in the function from another could produce confusing and&#xA;    spurious results.&#xA;</code></pre>&#xA;<p>I'm running my web and api server inside docker containers so I know there aren't any other graphql installations. Does anyone have any ideas as to why I'm getting this?</p>&#xA;",17548523,,,,2022-11-25 20:13:06,"Can't generate graphql file graphql-codegen Cannot use GraphQLInterfaceType ""AbstractEntity"" from another module or realm",<typescript><npm><graphql><graphql-codegen>,0,3,0,2022-11-25 20:13:06
74592457,1,,,0,23,"<p>Long story short i was building some react app, which depends(data) on local graphql server which i downloaded and am using for my project.&#xA;Graphql server is working normaly when i run npm start it goes on http://localhost:4000/graphql.</p>&#xA;<p>Since i want now to deploy my react app on netlify like i always do, what to do now with this graphql data and files, since i need them in order for my app to run?</p>&#xA;<p>Thank you...</p>&#xA;<p>I tryed to deploy graphql server on netlify(connected via github), it doesnt work.</p>&#xA;",20616523,,,,2022-11-28 07:34:03,Deploy Graphql server online,<reactjs><graphql>,1,0,0,2022-11-27 17:56:10
74597340,2,,74592457,0,,"<p>Netlify hosting is for the Jamstack, as they say, i.e. only static files, no processing on the server. The idea is to make use of other mechanisms to get your data dynamically, such as APIs hosted elsewhere, which you query straight from the browser, or when you build your site.&#xA;So you can use heroku or your own server hosting</p>&#xA;",15938843,,,,2022-11-28 07:34:03,"",,0,0,0,2022-11-28 07:34:03
74599226,2,,56693067,0,,"<p>This issue happened randomly to me between 2 file saves. I didn't solved it by updating <code>entities</code> key (it was set to <code>[__dirname + '/**/*.entity{.ts,.js}']</code>) or enabling <code>autoLoadEntities</code>, but by downgrading my typeorm version to <code>0.2.22</code>.</p>&#xA;<p>Check this issue for more info : <a href=""https://github.com/typeorm/typeorm/issues/5676"" rel=""nofollow noreferrer"">https://github.com/typeorm/typeorm/issues/5676</a></p>&#xA;",11217287,,,,2022-11-28 10:29:18,"",,0,0,0,2022-11-28 10:29:18
74599948,1,,,0,14,"<p>I'm using GraphQL for Api Call and recently updated the graphql-java version from 15.0 to 19.2.&#xA;Before update the version its working great but after updating getting error like</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;errorClassification&quot;: &quot;DataFetchingException&quot;,&#xA;      &quot;cause&quot;: {&#xA;        &quot;className&quot;: &quot;i18n.Validation_en_IN&quot;,&#xA;        &quot;key&quot;: &quot;&quot;,&#xA;        &quot;detailMessage&quot;: &quot;Can't find bundle for base name i18n.Validation, locale en_IN&quot;,&#xA;        &quot;stackTrace&quot;: [],&#xA;        &quot;suppressedExceptions&quot;: []&#xA;      },&#xA;      &quot;stackTrace&quot;: [],&#xA;      &quot;suppressedExceptions&quot;: []&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>I have already tried like this : <a href=""https://www.digitalocean.com/community/tutorials/java-i18n-internationalization-in-java"" rel=""nofollow noreferrer"">https://www.digitalocean.com/community/tutorials/java-i18n-internationalization-in-java</a>. But Not worked.&#xA;<code>ResourceBundle bundleSWE = ResourceBundle.getBundle(&quot;ApplicationMessages&quot;, new Locale(&quot;sv&quot;, &quot;SE&quot;));</code></p>&#xA;",4061846,,,,2022-11-28 11:31:33,"GraphIQL Error: Can't find bundle for base name i18n.Validation, locale en_IN",<java><spring><graph><graphql-java>,0,0,0,2022-11-28 11:31:33
74606156,1,,,1,21,"<p>I'm trying to make a request to graphql api and it's aborting me after I added <code>no-cors</code>. Before this it was giving me this error <code>Access to fetch at 'https://venia.magento.com/graphql' from origin 'http://localhost:5173' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.</code></p>&#xA;<p>And now I'm getting this: <code>createHttpLink.ts:166 POST https://venia.magento.com/graphql net::ERR_ABORTED 500</code> with error message: <code>ServerParseError: Unexpected end of JSON input at JSON.parse (&lt;anonymous&gt;) at parseJsonBody</code></p>&#xA;<p>Does anybody else has this problem ? And what could be the solution? Thank you for your answers:)</p>&#xA;<p>main.js:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { createApp, h, provide } from 'vue'&#xA;import './style.css'&#xA;import App from './App.vue'&#xA;&#xA;import { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client/core'&#xA;import { DefaultApolloClient } from '@vue/apollo-composable'&#xA;&#xA;// HTTP connection to the API&#xA;const httpLink = new HttpLink({&#xA;  // You should use an absolute URL here&#xA;  uri: 'https://venia.magento.com/graphql',&#xA;  fetchOptions: {&#xA;    mode: 'no-cors',&#xA;  },&#xA;  headers:{&#xA;    'Content-Type': 'application/graphql',&#xA;    'Access-Control-Allow-Origin': '*',&#xA;    'Access-Control-Allow-Credentials': true,&#xA;  }&#xA;})&#xA;&#xA;&#xA;// Cache implementation&#xA;const cache = new InMemoryCache()&#xA;&#xA;// Create the apollo client&#xA;const apolloClient = new ApolloClient({&#xA;  link: httpLink,&#xA;  cache,&#xA;})&#xA;&#xA;&#xA;&#xA;const app = createApp({&#xA;  setup () {&#xA;    provide(DefaultApolloClient, apolloClient)&#xA;  },&#xA;&#xA;  render: () =&gt; h(App),&#xA;})&#xA;app.mount('#app');&#xA;</code></pre>&#xA;<p>and this is my App.vue:</p>&#xA;<pre class=""lang-html prettyprint-override""><code>&lt;template&gt;&#xA;  &#xA;&lt;/template&gt;&#xA;&lt;script setup&gt;&#xA;import {useQuery} from '@vue/apollo-composable'&#xA;import { watchEffect } from '@vue/runtime-core';&#xA;import gql from 'graphql-tag';&#xA;&#xA;const PRODUCTS_QUERY = gql`&#xA;query products {&#xA;  products(filter: {sku: {eq: &quot;&quot;}}, pageSize: 5, currentPage: 3) {&#xA;    items {&#xA;      name&#xA;      sku&#xA;      price_range {&#xA;        minimum_price {&#xA;          regular_price {&#xA;            value&#xA;            currency&#xA;          }&#xA;          final_price {&#xA;            value&#xA;            currency&#xA;          }&#xA;          discount {&#xA;            amount_off&#xA;            percent_off&#xA;          }&#xA;        }&#xA;        maximum_price {&#xA;          regular_price {&#xA;            value&#xA;            currency&#xA;          }&#xA;          final_price {&#xA;            value&#xA;            currency&#xA;          }&#xA;          discount {&#xA;            amount_off&#xA;            percent_off&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;`;&#xA;&#xA;const { result, loading, error } = useQuery(PRODUCTS_QUERY);&#xA;watchEffect(() =&gt; console.log(result))&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;",17045992,,8816585,2022-11-29 02:44:32,2022-11-29 02:44:32,apolloClient aborted after graphql request,<vue.js><graphql><apollo-client>,0,0,0,2022-11-28 20:31:31
74608019,1,,,0,16,"<p>I'm reading while coding a book(Pro MERN Stack 2nd Edition) and I get the error:</p>&#xA;<p><code>typeerror (0 graphql _1.is definition node) is not a function</code></p>&#xA;<p>in my GitCMD.&#xA;<a href=""https://i.stack.imgur.com/uAj8B.png"" rel=""nofollow noreferrer"">Click here to see the error in CMD</a></p>&#xA;<p>I have tried <a href=""https://www.stackoverflow.com/"">this</a>, from another StackOverflow error but since Im using the <code>apollo-server-express</code> I think is kind of different.</p>&#xA;<p>Also tried installing older and newer package versions of the following:</p>&#xA;<pre><code>&quot;apollo-server-express&quot;: &quot;^3.11.1&quot;&#xA;</code></pre>&#xA;<p>and</p>&#xA;<pre><code>&quot;graphql&quot;: &quot;^0.13.2&quot;,&#xA;</code></pre>&#xA;<p>The code looks like this:</p>&#xA;<pre><code>const express = require('express');&#xA;const { ApolloServer } = require('apollo-server-express');&#xA;let aboutMessage = &quot;Issue Tracker API v1.0&quot;;&#xA;&#xA;const typeDefs = `&#xA;    type Query {&#xA;        about: String!&#xA;    }&#xA;    type Mutation {&#xA;        setAboutMessage(message: String!): String&#xA;    }&#xA;`;&#xA;&#xA;const resolvers = {&#xA;    Query: {&#xA;        about: ()=&gt; aboutMessage,&#xA;    },&#xA;    Mutation: { &#xA;        setAboutMessage,       &#xA;    },&#xA;};&#xA;&#xA;function setAboutMessage(_, { message }) {&#xA;    return aboutMessage = message;&#xA;}&#xA;&#xA;const server = new ApolloServer({&#xA;    typeDefs,&#xA;    resolvers&#xA;});&#xA;&#xA;const app = express();&#xA;&#xA;app.use(express.static('public'));&#xA;&#xA;server.applyMiddleware({ app, path: '/graphql' });&#xA;&#xA;app.listen(3000, function () {&#xA;    console.log('App started on port 3000');&#xA;});&#xA;</code></pre>&#xA;<p>this part alone:</p>&#xA;<pre><code>const express = require('express');&#xA;&#xA;const app = express();&#xA;&#xA;app.use(express.static('public'));&#xA;&#xA;app.listen(3000, function () {&#xA;    console.log('App started on port 3000');&#xA;});&#xA;</code></pre>&#xA;<p>worked perfectly fine, but since I added the rest of it, it returns me the error :/</p>&#xA;",20591858,,,,2022-11-29 16:30:16,typeerror (0 graphql _1.is definition node) is not a function,<url><graphql><routes><apollo-server>,1,0,0,2022-11-29 00:50:16
74631313,2,,58042147,0,,<p>Another solution maybe help</p>&#xA;<p>Code with issue: For example mainReason and actionTaken fields are text inputs and data contains some white spaces. This action give error: Unterminated string</p>&#xA;<pre><code>mutation { updateApplicationForm(input:{ where:{id:&quot;${ticketData.id}&quot;} &#xA;data:{ &#xA;  mainReason: &quot;${ticketData.mainReason}&quot;&#xA;  actionTaken: &quot;${ticketData.actionTaken}&quot;&#xA;  appStatus: ${ticketData.appStatus}&#xA;  action: &quot;${ticketData.action}&quot;&#xA;} &#xA;</code></pre>&#xA;<p>Fix this problem with JSON.stringify method</p>&#xA;<pre><code>mutation { updateApplicationForm(input:{ where:{id:&quot;${ticketData.id}&quot;} &#xA;  data:{ &#xA;    mainReason:${JSON.stringify(ticketData.mainReason)} &#xA;    actionTaken:${JSON.stringify(ticketData.actionTaken)}&#xA;    appStatus: ${ticketData.appStatus}&#xA;    action: &quot;${ticketData.action}&quot;&#xA;  }&#xA;</code></pre>&#xA;,11302100,,,,2022-11-30 16:45:57,"",,0,0,0,2022-11-30 16:45:57
74638461,2,,72307046,0,,"<p>I dont know what is ios simulator, but when you use from your Iphone, you probably connecting to your localhost server.</p>&#xA;<p>Try to change ApolloClient uri from localhost to your local ip.</p>&#xA;",18804571,,18804571,2022-12-01 07:53:12,2022-12-01 07:53:12,"",,0,0,0,2022-12-01 07:46:29
74638940,2,,69946898,0,,"<p>I resolved <strong>payload is too large</strong> issue on strapi graphql , in REST apis after I configure json limit and formlimit its working but not in graphql strapi in new version. so I find out the solution. and its working great.</p>&#xA;<p>config/plugins.js</p>&#xA;<pre><code>module.exports = {&#xA;  graphql: {&#xA;    config: {&#xA;      endpoint: &quot;/graphql&quot;,&#xA;      shadowCRUD: true,&#xA;      playgroundAlways: false,&#xA;      depthLimit: 7,&#xA;      amountLimit: 2000,&#xA;      apolloServer: {&#xA;        tracing: false,&#xA;        bodyParserConfig: {&#xA;          // koa-bodyparser/node_modules/co-body/lib/json.js#36&#xA;          limit: &quot;256mb&quot;,&#xA;          // koa-bodyparser/index.js#69&#xA;          formLimit: &quot;256mb&quot;,&#xA;          jsonLimit: &quot;256mb&quot;,&#xA;          textLimit: &quot;256mb&quot;,&#xA;          xmlLimit: &quot;256mb&quot;,&#xA;        },&#xA;      },&#xA;    },&#xA;  },&#xA;};&#xA;</code></pre>&#xA;",12075561,,,,2022-12-01 08:32:03,"",,0,0,0,2022-12-01 08:32:03
74641388,1,,,0,23,"<p>System Information</p>&#xA;<ul>&#xA;<li>Strapi Version: 4.5.2</li>&#xA;<li>Operating System: VPS Ubuntu nginx</li>&#xA;<li>Database: sqlite</li>&#xA;<li>Node Version: 16.17.1</li>&#xA;<li>NPM Version: 8.15.0</li>&#xA;</ul>&#xA;<p>Hello ! I am trying to register users with graphql unfortunately every time I try to register a new one I have this error that comes out:</p>&#xA;<p><a href=""https://i.stack.imgur.com/e2ng7.png"" rel=""nofollow noreferrer"">Screenshot error</a></p>&#xA;<p>I have all the permissions checked in the Admin panel. I tested both in development and in production the problem persists. I just saw that the problem was related to enabling confirmation email in Settings &gt; Advanced Settings. I use @strapi/provider-email-sendgrid to send email.</p>&#xA;<p>Any idea how to fix this?</p>&#xA;",20655714,,20655714,2022-12-01 11:49:11,2022-12-01 11:49:11,Strapi - How fix unauthorized register user with GraphQL when confirmation email is enabled?,<graphql><sendgrid><strapi>,0,0,0,2022-12-01 11:47:42
74673781,1,74673802,,0,10,"<p>My Next.js app worked fine yesterday but today it has an error like this:</p>&#xA;<pre><code>error - ./node_modules/@urql/core/dist/ddbb86ae.mjs:1:0&#xA;Module not found: Can't resolve 'graphql'&#xA;&#xA;Import trace for requested module:&#xA;./node_modules/@urql/core/dist/urql-core.mjs&#xA;./node_modules/urql/dist/urql.es.js&#xA;./pages/_app.js&#xA;&#xA;https://nextjs.org/docs/messages/module-not-found&#xA;</code></pre>&#xA;<p>I have no idea what happened so I <code>git reset --hard</code> but the problem is still there.&#xA;Please help me fix it. I appreciate it.</p>&#xA;<p>_app.js:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { StateContext } from &quot;../lib/context&quot;;&#xA;import { Provider, createClient } from &quot;urql&quot;;&#xA;&#xA;const client = createClient({ url: &quot;http://localhost:1337/graphql&quot; });&#xA;&#xA;function MyApp({ Component, pageProps }) {&#xA;  return (&#xA;    &lt;StateContext&gt;&#xA;      &lt;Provider value={client}&gt;&#xA;        &lt;Nav /&gt;&#xA;        &lt;Component {...pageProps} /&gt;&#xA;      &lt;/Provider&gt;&#xA;    &lt;/StateContext&gt;&#xA;  );&#xA;}&#xA;&#xA;export default MyApp;&#xA;</code></pre>&#xA;",12640100,,,,2022-12-04 08:09:20,Module not found: Can't resolve 'graphql'?,<next.js><graphql><urql>,1,0,0,2022-12-04 08:04:45
74674315,2,,74674006,0,,"<p>You can try these following ways,&#xA;One, you can find graphql directory in the project, on python path. renaming it will fix the issue.&#xA;And also you can try these commands,</p>&#xA;<pre><code>pip install pip --upgrade&#xA;pip install setuptools --upgrade&#xA;pip install gql[all]&#xA;</code></pre>&#xA;<p>Hope this helps, if not please let know. Thanks</p>&#xA;",19515543,,,,2022-12-04 09:33:48,"",,0,1,0,2022-12-04 09:33:48
74677295,1,,,0,9,"<p>I am trying to connect the below graphql query with nuxtjs.</p>&#xA;<pre><code>query getContent($slug: String!) {&#xA;  contents (filters: { slug: { eq: $slug } }) {&#xA;    data {&#xA;      id&#xA;      attributes {&#xA;        title&#xA;        content {&#xA;          __typename&#xA;          ... on ComponentContentParagraph {&#xA;                content&#xA;            }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I am getting the following error and not getting the result from the query.</p>&#xA;<pre><code>You are using the simple (heuristic) fragment matcher, but your queries contain union or interface types. Apollo Client will not be able to accurately map fragments. To make this error go away, use the `IntrospectionFragmentMatcher` as described in the docs: https://www.apollographql.com/docs/react/advanced/fragments.html#fragment-matcher&#xA;</code></pre>&#xA;<p>I have checked the questions and answers available here.</p>&#xA;<p><a href=""https://stackoverflow.com/questions/59690194/apollographql-heuristic-fragment-manual-matching"">Apollo+GraphQL - Heuristic Fragment Manual Matching</a></p>&#xA;<p>I have followed the docs from apollo as well.</p>&#xA;<p><a href=""https://www.apollographql.com/docs/react/data/fragments/#fragment-matcher"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/data/fragments/#fragment-matcher</a></p>&#xA;<p>I managed to generate <code>possibleTypes</code> as mentioned in the docs.</p>&#xA;<p>Here is my next config.</p>&#xA;<pre><code>  apollo: {&#xA;    includeNodeModules: true,&#xA;    clientConfigs: {&#xA;      default: &quot;~/graphql/default.js&quot;,&#xA;    },&#xA;  },&#xA;</code></pre>&#xA;<p>This is the <code>default.js</code></p>&#xA;<pre><code>import { InMemoryCache } from &quot;apollo-cache-inmemory&quot;;&#xA;import possibleTypes from &quot;./possibleTypes.json&quot;;&#xA;&#xA;export default () =&gt; {&#xA;  return {&#xA;    httpEndpoint: process.env.BACKEND_URL || &quot;http://localhost:1337/graphql&quot;,&#xA;    cache: new InMemoryCache({ possibleTypes }),&#xA;  };&#xA;};&#xA;&#xA;</code></pre>&#xA;<p>I am using strapi for the backend and this query works fine when running from graphql interface.</p>&#xA;",2507725,,,,2022-12-04 13:58:43,Getting an error when having heuristic fragment matching with Apollo & Nuxt.js,<graphql><nuxt.js><apollo><nuxtjs2>,0,0,0,2022-12-04 13:58:43
