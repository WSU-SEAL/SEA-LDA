Id,PostTypeId,AcceptedAnswerId,ParentId,Score,ViewCount,Body,OwnerUserId,OwnerDisplayName,LastEditorUserId,LastEditDate,LastActivityDate,Title,Tags,AnswerCount,CommentCount,FavoriteCount,CreationDate
16216667,2,,15643726,2,,"<p>I suspect the topic is being auto deleted once there are no producers or consumers attached to the topic. To disable auto delete 'feature', add the following XML element within the virual_host config element in apollo.xml: </p>&#xA;&#xA;<pre><code>&lt;topic auto_delete_after=""0""/&gt;&#xA;</code></pre>&#xA;&#xA;<p>Future versions of apollo will avoid deleting the topic when holds a retained message <a href=""https://issues.apache.org/jira/browse/APLO-319"" rel=""nofollow"">APLO-319 </a>.</p>&#xA;",305364,,,,2013-04-25 13:54:35,"",,0,0,0,2013-04-25 13:54:35
32708730,1,32739164,,1,2198,"<p>I am recently started working with GraphQL. I am able to fetch all the records from the database, but I want to get only limited records (like 10 at a time).&#xA;Any one please guide me to achieve this. Thanks</p>&#xA;",5283410,,5283410,2015-09-22 07:24:41,2015-09-23 12:07:16,How to fetch the Limited records(pagination) from the database using GraphQL,<node.js><mongodb><graphql>,1,0,0,2015-09-22 05:02:52
33577928,2,,33550843,7,,"<p>Different applications have very different requirements for the form of access control, so baking something into the basic Relay framework or GraphQL reference implementation probably doesn't make sense.</p>&#xA;&#xA;<p>An approach that I have seen pretty successful is to bake the privacy/access control into the data model/data loader framework. Every time you load an object, you wouldn't just load it by id, but also provide the context of the viewer. If the viewer cannot see the object, it would fail to load <em>as if it doesn't exist</em> to prevent even leaking the existence of the object. The object also retains the viewer context and certain fields might have restricted access that are checked before being returned from the object. Baking this in the lower level data loading mechanism helps to ensure that bugs in higher level product / GraphQL code doesn't leak private data.</p>&#xA;&#xA;<p>In a concrete example, I might not be allowed to see some User, because he has blocked me. You might be allowed to see him in general, but no his email, since you're not friends with him.</p>&#xA;&#xA;<p>In code something like this:</p>&#xA;&#xA;<pre><code>var viewer = new Viewer(getLoggedInUser());&#xA;User.load(id, viewer).then(&#xA;  (user) =&gt; console.log(""User name:"", user.name),&#xA;  (error) =&gt; console.log(""User does not exist or you don't have access."")&#xA;)&#xA;</code></pre>&#xA;&#xA;<p>Trying to implement the visibility on GraphQL level has lots of potential to leak information. Think of the many way to access a user in GraphQL implementation for Facebook:</p>&#xA;&#xA;<pre><code>node($userID) { name }&#xA;node($postID) { author { name } }&#xA;node($postID) { likers { name } }&#xA;node($otherUserID) { friends { name } }&#xA;</code></pre>&#xA;&#xA;<p>All of these queries could load a user's name and if the user has blocked you, none of them should return the user or it's name. Having the access control on all these fields and not forgetting the check anywhere is a recipe for missing the check <em>somewhere</em>.</p>&#xA;",593684,,,,2015-11-07 01:00:04,"",,0,2,0,2015-11-07 01:00:04
35940528,1,35951483,,51,38020,"<p>GraphQL has mutations, Postgres has INSERT; GraphQL has queries, Postgres has SELECT's; etc., etc.. I haven't found an example showing how you could use both in a project, for example passing all the queries from front end (React, Relay) in GraphQL, but to a actually store the data in Postgres. </p>&#xA;&#xA;<p>Does anyone know what Facebook is using as DB and how it's connected with GraphQL? </p>&#xA;&#xA;<p>Is the only option of storing data in Postgres right now to build custom ""adapters"" that take the GraphQL query and convert it into SQL?</p>&#xA;",672226,,672226,2017-05-10 12:18:51,2021-08-30 17:31:45,How to connect GraphQL and PostgreSQL,<postgresql><graphql>,8,2,0,2016-03-11 12:40:20
36047291,1,36050731,,3,876,"<p>I'm thinking about using graphql/relay solution for my app, and I wonder which companies are using graphql/relay in production (except facebook).&#xA;Can you list here companies that uses it and their case studies.</p>&#xA;&#xA;<p>Thanks. </p>&#xA;",4242757,,,,2017-02-16 21:21:57,Graphql & Relay production cases,<reactjs><redux><graphql><relay><graphql-js>,2,1,0,2016-03-16 21:28:00
37312378,2,,34820629,3,,"<p>I create a rule base access control to be used with GraphQL.</p>&#xA;&#xA;<p><a href=""https://github.com/joonhocho/graphql-rule"" rel=""nofollow"">https://github.com/joonhocho/graphql-rule</a></p>&#xA;&#xA;<p>It is simple and unopionated that it can be used with or without GraphQL.</p>&#xA;&#xA;<p>You can use it with a plain javascript objects.</p>&#xA;&#xA;<p>Hope it helps GraphQLers!</p>&#xA;",692528,,,,2016-05-19 01:10:05,"",,0,2,0,2016-05-19 01:10:05
37663399,2,,37528382,4,,"<p>GraphiQL expects particular HTTP endpoint shape by default. You can find the actual HTTP request here:</p>&#xA;&#xA;<p><a href=""https://github.com/graphql/graphiql/blob/master/example/index.html#L93"" rel=""nofollow"">https://github.com/graphql/graphiql/blob/master/example/index.html#L93</a></p>&#xA;&#xA;<p>You can customize it in <code>index.html</code>, if your graphql-java based endpoint has a different shape, or you can add another HTTP endpoint that has following shape:</p>&#xA;&#xA;<ul>&#xA;<li>HTTP method: <code>POST</code></li>&#xA;<li>URL path: <code>/graphql</code></li>&#xA;<li><code>POST</code> body is a JSON document that contains following fields:&#xA;&#xA;<ul>&#xA;<li><code>query</code> - String - the GraphQL query itself</li>&#xA;<li><code>oprationName</code> - String (optional) - in case you have several named operations in a query, this field controls which one should be executed</li>&#xA;<li><code>variables</code> - String | Object (optional) - JSON Object that contains variables for a query execution</li>&#xA;</ul></li>&#xA;</ul>&#xA;&#xA;<p>Here is an example of request that you may get from GraphiQL</p>&#xA;&#xA;<pre><code>POST /graphql&#xA;{&#xA;  ""query"": ""query Fooo($humanId: String!) {\n  human(id: $humanId) {\n    id\n    name\n  }\n}"",&#xA;  ""variables"": ""{\n  \""humanId\"": \""1000\""\n}"",&#xA;  ""operationName"": ""Fooo""&#xA;}&#xA;</code></pre>&#xA;",576766,,,,2016-06-06 17:22:34,"",,0,0,0,2016-06-06 17:22:34
37917240,1,,,0,265,"<p>Let's say I have an User model with a relationship to its pictures. I'd like to to do something like that:</p>&#xA;&#xA;<pre><code>{&#xA;    users {&#xA;        rights(min: ""admin"") {&#xA;             id&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'd like to have <strong>only admin users</strong>: ""I want all admin users with their rights""</p>&#xA;&#xA;<p>The key is, can the query arguments for an inner field affect the whole results ? Or the parent results ?</p>&#xA;&#xA;<p>For now I'm doing</p>&#xA;&#xA;<pre><code>{&#xA;    users(rightsMin: ""admin"") {&#xA;        rights {&#xA;            id&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there any other way ?</p>&#xA;",979206,,979206,2016-06-23 10:55:59,2016-06-23 10:55:59,Subfield query impact on object graphql,<relationship><graphql>,0,4,0,2016-06-20 07:57:07
37981269,1,37981802,,49,48644,"<p>How do you query using GraphQL in a manor similar to SQL's <code>like</code> operator?</p>&#xA;&#xA;<p>Example: What users have a first name starting with <code>jason</code>?</p>&#xA;&#xA;<p><code>select * from users where first_name like ""jason%""</code></p>&#xA;",136584,,,,2017-11-14 23:33:17,How to search string values in GraphQL,<graphql>,2,0,0,2016-06-23 02:19:52
38001676,2,,37995394,22,,"<p>I figured out the answer.  The key is to pass the <code>graphql.GraphQLString</code> into <code>graphql.GraphQLList()</code></p>&#xA;&#xA;<p>The schema becomes:</p>&#xA;&#xA;<pre><code>var ColorType = new graphql.GraphQLObjectType({&#xA;  name: 'colors',&#xA;  fields: function() {&#xA;    return {&#xA;      name: { type: graphql.GraphQLString },&#xA;      keys: { type: new graphql.GraphQLList(graphql.GraphQLString)&#xA;    };&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Using this query: </p>&#xA;&#xA;<p><em>query { colors { name, keys } }</em></p>&#xA;&#xA;<p>I get the desired results:</p>&#xA;&#xA;<pre><code>{&#xA;  name: ""colors"",&#xA;  keys: [""red"", ""blue""]&#xA;}&#xA;</code></pre>&#xA;",1282310,,,,2016-06-23 20:54:13,"",,0,2,0,2016-06-23 20:54:13
38266673,1,,,1,814,"<p>I have installed Apache Apollo and running it successfully. I can access its web dashboard at <a href=""http://127.0.0.1:61680/"" rel=""nofollow"">http://127.0.0.1:61680/</a>.</p>&#xA;&#xA;<p>I want to connect to this via STOMP. I'm using the library [StompKit][1] to do this.</p>&#xA;&#xA;<pre><code>private let host: String = ""127.0.0.1""&#xA;private let port: UInt = 61680&#xA;&#xA;private var client: STOMPClient!&#xA;&#xA;override func viewDidLoad() {&#xA;    super.viewDidLoad()&#xA;&#xA;    client = STOMPClient(host: host, port: port)&#xA;    connect()&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Connecting fails with the error <strong>Connection refused</strong>.</p>&#xA;&#xA;<p>This is the <em>apollo.xml</em> file.</p>&#xA;&#xA;<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?&gt;&#xA;&lt;!--&#xA;  Licensed to the Apache Software Foundation (ASF) under one or more&#xA;  contributor license agreements. See the NOTICE file distributed with&#xA;  this work for additional information regarding copyright ownership.&#xA;  The ASF licenses this file to You under the Apache License, Version&#xA;  2.0 (the ""License""); you may not use this file except in compliance&#xA;  with the License. You may obtain a copy of the License at&#xA;  http://www.apache.org/licenses/LICENSE-2.0 Unless required by&#xA;  applicable law or agreed to in writing, software distributed under&#xA;  the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES&#xA;  OR CONDITIONS OF ANY KIND, either express or implied. See the&#xA;  License for the specific language governing permissions and&#xA;  limitations under the License.&#xA;--&gt;&#xA;&#xA;&lt;!--&#xA;  For more information on how configure this file please&#xA;  reference:&#xA;&#xA;  http://activemq.apache.org/apollo/versions/1.7.1/website/documentation/user-manual.html&#xA;  --&gt;&#xA;&lt;broker xmlns=""http://activemq.apache.org/schema/activemq/apollo""&gt;&#xA;&#xA;  &lt;notes&gt;&#xA;    The default configuration with tls/ssl enabled.&#xA;  &lt;/notes&gt;&#xA;&#xA;  &lt;log_category console=""console"" security=""security"" connection=""connection"" audit=""audit""/&gt;&#xA;&#xA;&#xA;  &lt;authentication domain=""apollo""/&gt;&#xA;  &lt;!-- Give admins full access --&gt;&#xA;  &lt;access_rule allow=""admins"" action=""*""/&gt;&#xA;  &lt;access_rule allow=""*"" action=""connect"" kind=""connector""/&gt;&#xA;&#xA;&#xA;  &lt;virtual_host id=""mybroker""&gt;&#xA;    &lt;!--&#xA;      You should add all the host names that this virtual host is known as&#xA;      to properly support the STOMP 1.1 virtual host feature.&#xA;      --&gt;&#xA;    &lt;host_name&gt;mybroker&lt;/host_name&gt;&#xA;    &lt;host_name&gt;localhost&lt;/host_name&gt;&#xA;    &lt;host_name&gt;127.0.0.1&lt;/host_name&gt;&#xA;&#xA;    &lt;!-- Uncomment to disable security for the virtual host --&gt;&#xA;    &lt;!-- &lt;authentication enabled=""false""/&gt; --&gt;&#xA;&#xA;    &lt;!-- Uncomment to disable security for the virtual host --&gt;&#xA;    &lt;!-- &lt;authentication enabled=""false""/&gt; --&gt;&#xA;    &lt;access_rule allow=""users"" action=""connect create destroy send receive consume""/&gt;&#xA;&#xA;&#xA;    &lt;!-- You can delete this element if you want to disable persistence for this virtual host --&gt;&#xA;    &lt;leveldb_store directory=""${apollo.base}/data""/&gt;&#xA;&#xA;&#xA;  &lt;/virtual_host&gt;&#xA;&#xA;  &lt;web_admin bind=""http://127.0.0.1:61680""/&gt;&#xA;  &lt;web_admin bind=""https://127.0.0.1:61681""/&gt;&#xA;&#xA;  &lt;connector id=""tcp"" bind=""tcp://0.0.0.0:61613"" connection_limit=""2000""/&gt;&#xA;  &lt;connector id=""tls"" bind=""tls://0.0.0.0:61614"" connection_limit=""2000""/&gt;&#xA;  &lt;connector id=""ws""  bind=""ws://0.0.0.0:61623""  connection_limit=""2000""/&gt;&#xA;  &lt;connector id=""wss"" bind=""wss://0.0.0.0:61624"" connection_limit=""2000""/&gt;&#xA;&#xA;  &lt;key_storage file=""${apollo.base}/etc/keystore"" password=""password"" key_password=""password""/&gt;&#xA;&#xA;&lt;/broker&gt;&#xA;</code></pre>&#xA;&#xA;<p><strong>Attempt 1</strong></p>&#xA;&#xA;<p>Only answer I could find related to this is [this][2] (Although it's for MQTT). Anyway, I modified the apollo.xml file by adding the <code>authentication</code> line.</p>&#xA;&#xA;<pre><code>&lt;virtual_host id=""mybroker""&gt;&#xA;    &lt;authentication enabled=""false""/&gt;&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>But that changed nothing.</p>&#xA;&#xA;<p><strong>Attempt 2:</strong></p>&#xA;&#xA;<p>The web dashboard has a username/password login. So I tried a different method of StompKit.</p>&#xA;&#xA;<pre><code>client.connectWithLogin(""admin"", passcode: ""password"") { connectedFrame, error in&#xA;    if let error = error {&#xA;        print(""Error during connecting: \(error.localizedDescription)"")&#xA;    } else {&#xA;        print(""Connected!"")&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Still the error persists. </p>&#xA;&#xA;<p>What am I doing wrong here?</p>&#xA;",1077789,,,,2016-07-10 08:51:20,Apache Apollo Connection Refused,<apache><connection><messaging><stomp><apollo>,1,0,0,2016-07-08 12:27:41
38523533,1,,,0,109,"<p>Below is my code for adding and removing a person from a group.</p>&#xA;&#xA;<p>For some reason, <code>getOptimisticResponse</code> is not working for this mutation.</p>&#xA;&#xA;<p>Could this be due to having an argument <code>groupId</code> for <code>isInGroup</code> field?</p>&#xA;&#xA;<pre><code>class GroupAddRemovePersonMutation extends Relay.Mutation {&#xA;  static initialVariables = {&#xA;    groupId: null,&#xA;  }&#xA;&#xA;  static prepareVariables(prevVars) {&#xA;    return prevVars;&#xA;  }&#xA;&#xA;  static fragments = {&#xA;    person: () =&gt; Relay.QL`&#xA;      fragment on Person {&#xA;        id&#xA;        isInGroup(groupId: $groupId)&#xA;      }&#xA;    `,&#xA;  }&#xA;&#xA;  getMutation() {&#xA;    return this.props.isInGroup ?&#xA;      Relay.QL`mutation { groupRemovePerson }` :&#xA;      Relay.QL`mutation { groupAddPerson }`;&#xA;  }&#xA;&#xA;  getVariables() {&#xA;    const {groupId, person} = this.props;&#xA;    return {&#xA;      personId: person.id,&#xA;      groupId,&#xA;    };&#xA;  }&#xA;&#xA;  getCollisionKey() {&#xA;    const {groupId, person} = this.props;&#xA;    return `groupPerson_${groupId}_${person.id}`;&#xA;  }&#xA;&#xA;  getFatQuery() {&#xA;    const {groupId, person, isInGroup} = this.props;&#xA;    return isInGroup ?&#xA;      Relay.QL`&#xA;        fragment on GroupRemovePersonMutationPayload {&#xA;          person {&#xA;            id&#xA;            groups { id }&#xA;            isInGroup(groupId: ""${groupId}"")&#xA;          }&#xA;          group {&#xA;            id&#xA;            person&#xA;            hasPerson(personId: ""${person.id}"")&#xA;          }&#xA;        }&#xA;      ` :&#xA;      Relay.QL`&#xA;        fragment on GroupAddPersonMutationPayload {&#xA;          person {&#xA;            id&#xA;            groups { id }&#xA;            isInGroup(groupId: ""${groupId}"")&#xA;          }&#xA;          group {&#xA;            id&#xA;            person&#xA;            hasPerson(personId: ""${person.id}"")&#xA;          }&#xA;        }&#xA;      `;&#xA;  }&#xA;&#xA;  getConfigs() {&#xA;    const {groupId, person} = this.props;&#xA;    return [{&#xA;      type: 'FIELDS_CHANGE',&#xA;      fieldIDs: {&#xA;        person: person.id,&#xA;        group: groupId,&#xA;      },&#xA;    }];&#xA;  }&#xA;&#xA;  getOptimisticResponse() {&#xA;    const {groupId, person, isInGroup} = this.props;&#xA;    return {&#xA;      person: {&#xA;        id: person.id,&#xA;        isInGroup: !isInGroup,&#xA;      },&#xA;      group: {&#xA;        id: groupId,&#xA;        hasPerson: !isInGroup,&#xA;      },&#xA;    };&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",692528,,,,2016-07-28 01:06:40,getOptimisticResponse is not working for fields with arguments,<graphql><relayjs><relay>,1,0,0,2016-07-22 09:58:48
38680193,2,,38679179,0,,"<blockquote>&#xA;  <p>A Relay mutation is defined as an ""operations that consist of writes to the data store followed by a fetch of any changed fields."". What about something such as logging?</p>&#xA;</blockquote>&#xA;&#xA;<p>If I understand your confusion about <strong>logging</strong> correctly, you want to log something in your server, but you don't have anything to update on your client-side. You should model this logging operation as a mutation, if you want to use GraphQL and Relay for logging. Query is actually a read-only operation.</p>&#xA;&#xA;<p>If <strong>logging</strong> was a typo and you actually meant <strong>login</strong>, there are quite a few previous answers regarding authentication in Relay and GraphQL land. Check the following SO and blog posts:</p>&#xA;&#xA;<ol>&#xA;<li><a href=""https://stackoverflow.com/questions/33053617/relayjs-graphql-user-authentication"">Relayjs Graphql user authentication</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/34796788/authentication-and-privileges-on-relay-graphql"">javascript - Authentication and privileges on Relay/GraphQL</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/34952792/how-do-i-structure-authenticated-queries-with-graphql"">api - How do I structure authenticated queries with GraphQL?</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/34820629/what-is-a-good-pattern-for-implementing-access-control-in-a-graphql-server"">node.js - What is a good pattern for implementing access control in a GraphQL server?</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/33550843/authentication-and-access-control-with-relay"">graphql - Authentication and Access Control with Relay</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/37356362/how-to-check-permissions-and-other-conditions-in-graphql-query/37356630#37356630"">node.js - How to check permissions and other conditions in GraphQL query?</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/34725621/how-to-tell-the-user-to-log-in-with-relay"">relayjs - How to tell the user to log in with relay?</a></li>&#xA;<li><a href=""https://medium.com/apollo-stack/a-guide-to-authentication-in-graphql-e002a4039d1#.bcx3wexzw"" rel=""nofollow noreferrer"">A guide to authentication in GraphQL — Building Apollo — Medium</a></li>&#xA;<li><a href=""https://medium.com/apollo-stack/auth-in-graphql-part-2-c6441bcc4302#.qslxqskvt"" rel=""nofollow noreferrer"">Auth in GraphQL — Part 2 — Building Apollo — Medium</a></li>&#xA;</ol>&#xA;&#xA;<blockquote>&#xA;  <p>I have not found a formal definition of mutations vs query as one would find in the REST POST vs GET vs PUT protocols.</p>&#xA;</blockquote>&#xA;&#xA;<p>From <a href=""https://facebook.github.io/graphql/#sec-Language.Operations"" rel=""nofollow noreferrer"">GraphQL draft specification</a>:</p>&#xA;&#xA;<pre><code>There are two types of operations that GraphQL models:&#xA;&#xA;* query – a read‐only fetch.&#xA;* mutation – a write followed by a fetch.&#xA;</code></pre>&#xA;&#xA;<blockquote>&#xA;  <p>Am I correct that one would use a mutation when there is a desire to have data be modified and returned but if I just need to update something then a standard query is fine?</p>&#xA;</blockquote>&#xA;&#xA;<p>No, that is incorrect. Mutation is the operation that you should use for any kind of modification to your data. If you don't need to fetch any data after the update, you just don't include anything in the <a href=""https://facebook.github.io/relay/docs/guides-mutations.html#the-fat-query"" rel=""nofollow noreferrer"">fat query</a>. As of now, GraphQL does not have any specific operation type for update without fetching data afterwards.</p>&#xA;",2821632,,-1,2017-05-23 12:14:51,2016-07-31 02:19:32,"",,0,1,0,2016-07-31 02:19:32
38680548,2,,38654122,1,,"<p>According to the <a href=""https://github.com/graphql/graphql-js/blob/3cf66f33e30d467b068b4054e120562b01d885b7/src/execution/execute.js#L286-L322"" rel=""nofollow"">JavaScript reference implementation for GraphQL</a>, the same mutation <code>changeTheNumber</code> of the selection set will be executed in the given order. If error occurs in the second mutation, its <a href=""https://github.com/graphql/graphql-js/blob/3cf66f33e30d467b068b4054e120562b01d885b7/src/execution/execute.js#L584"" rel=""nofollow"">result will be an Error object</a>. The following mutations in that selection set will not be aborted.</p>&#xA;",2821632,,,,2016-07-31 03:41:38,"",,0,0,0,2016-07-31 03:41:38
38907092,1,38917514,,0,537,"<p>I'm using sangria as a GraphQL server. The pertinent part of the schema is:</p>&#xA;&#xA;<pre><code>  val Account =&#xA;    ObjectType(&#xA;      ""Account"",&#xA;      ""An account with a municipal unit"",&#xA;      fields[Unit, Account](&#xA;        Field(""id"", StringType, Some(""The account id""), resolve = _.value.id),&#xA;        Field(""mu"", OptionType(MunicipalUnit), Some(""The municipal unit this account is with""), resolve = ctx =&gt; ctx.ctx.asInstanceOf[ObjectResolver].resolve[MunicipalUnit](ctx.value.mu)),&#xA;        Field(""eu"", OptionType(EconomicUnit), Some(""The economic unit this account belongs to""), resolve = ctx =&gt; ctx.ctx.asInstanceOf[ObjectResolver].resolve[EconomicUnit](ctx.value.eu)),&#xA;        Field(""location"", OptionType(Location), Some(""The physical location associated with this account""), resolve = ctx =&gt; ctx.ctx.asInstanceOf[ObjectResolver].resolve[Location](ctx.value.location)),&#xA;        Field(""amountDue"", BigDecimalType, Some(""The amount currently due""), resolve = _.value.amountDue)&#xA;      ))&#xA;&#xA;  val Citizen =&#xA;    ObjectType(&#xA;      ""Citizen"",&#xA;      ""A Citizen"",&#xA;      interfaces[Unit, Citizen](EconomicUnit),&#xA;      fields[Unit, Citizen](&#xA;        Field(""id"", StringType, Some(""The ID of the citizen""), resolve = _.value.id),&#xA;        Field(""name"", StringType, Some(""The name of the citizen""), resolve = _.value.id),&#xA;        Field(""delegates"", OptionType(ListType(OptionType(EconomicUnit))), Some(""The delegates of the citizen""), resolve = ctx =&gt; DeferDelegates(ctx.value.delegates)),&#xA;        Field(""locations"", OptionType(ListType(OptionType(Location))), Some(""The locations of the citizen""), resolve = ctx =&gt; DeferLocations(ctx.value.locations)),&#xA;        Field(""accounts"", OptionType(ListType(OptionType(Account))), Some(""The accounts of the citizen""), resolve = ctx =&gt; DeferAccounts(ctx.value.accounts))&#xA;      )&#xA;    )&#xA;</code></pre>&#xA;&#xA;<p>with the deferral code being</p>&#xA;&#xA;<pre><code>  def resolveByType[T](ids: List[Any])(implicit m: Manifest[T]) = ids map (id =&gt; resolver.resolve[T](id))&#xA;&#xA;  override def resolve(deferred: Vector[Deferred[Any]], ctx: Any) = deferred flatMap {&#xA;    case DeferAccounts(ids) =&gt; resolveByType[Account](ids)&#xA;    case DeferLocations(ids) =&gt; resolveByType[Location](ids)&#xA;    case DeferDelegates(ids) =&gt; resolveByType[EconomicUnit](ids)&#xA;    case DeferMUs(ids) =&gt; resolveByType[MunicipalUnit](ids)&#xA;&#xA;    case _ =&gt;&#xA;      List(Future.fromTry(Try(List[Any]())))&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Everything works for individual objects, however when I try to request an object with its children, I only get one child coming back</p>&#xA;&#xA;<p>query:</p>&#xA;&#xA;<pre><code>{&#xA;    citizen(id: ""12345"") {&#xA;    name&#xA;    accounts {&#xA;      id&#xA;      amountDue&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>response:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""citizen"": {&#xA;      ""name"": ""12345"",&#xA;      ""accounts"": [&#xA;        {&#xA;          ""id"": ""12345"",&#xA;          ""amountDue"": 12.34&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So - it's correct, and I can see on the back end that all elements of the list are being loaded, but they don't seem to be returned.</p>&#xA;",70226,,,,2016-08-12 12:03:52,sangria graphql query returning 1 element list,<scala><graphql><sangria>,1,0,0,2016-08-11 22:30:47
39026832,2,,39026831,23,,"<p>For example, if you are using <code>authentication_classes = (TokenAuthentication,)</code> in your API views, you could add an endpoint to a GraphQLView decorated in this way:</p>&#xA;&#xA;<p><strong>urls.py:</strong></p>&#xA;&#xA;<pre><code># ...&#xA;from rest_framework.authentication import TokenAuthentication&#xA;from rest_framework.permissions import IsAuthenticated&#xA;from rest_framework.decorators import authentication_classes, permission_classes, api_view&#xA;&#xA;def graphql_token_view():&#xA;    view = GraphQLView.as_view(schema=schema)&#xA;    view = permission_classes((IsAuthenticated,))(view)&#xA;    view = authentication_classes((TokenAuthentication,))(view)&#xA;    view = api_view(['GET', 'POST'])(view)&#xA;    return view&#xA;&#xA;urlpatterns = [&#xA;# ...&#xA;    url(r'^graphql_token', graphql_token_view()),&#xA;    url(r'^graphql', csrf_exempt(GraphQLView.as_view(schema=schema))),&#xA;    url(r'^graphiql', include('django_graphiql.urls')),&#xA;# ...&#xA;</code></pre>&#xA;&#xA;<p>Note that we added a new <code>^graphql_token</code> endpoint and kept the original <code>^graphql</code> which is used by the GraphiQL tool.</p>&#xA;&#xA;<p>Then, you should set the <code>Authorization</code> header in your GraphQL client and point to the <code>graphql_token</code> endpoint.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>UPDATE: See <a href=""https://github.com/graphql-python/graphene/issues/249"" rel=""nofollow noreferrer"">this GitHub issue</a> where people have suggested alternative solutions and full working examples.</p>&#xA;",149444,,149444,2020-01-09 12:45:53,2020-01-09 12:45:53,"",,0,4,0,2016-08-18 20:19:56
39045483,2,,38021899,18,,"<p>In GraphiQL you can choose from a list of queries specified by the operation name. Here's some screenshots to help make this make sense.</p>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/N83Ov.png"" alt=""enter image description here""></p>&#xA;&#xA;<p>When you have two mutations / queries side-by-side and they don't have an operation name you can't run them.</p>&#xA;&#xA;<p>When they have operation names they can be listed when you click the play / run button.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/yTRH7.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/yTRH7.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>This is the biggest case for having an operation name that I've seen so far.</p>&#xA;&#xA;<p>But it's not necessary because when you just have run query / mutation that's what's gonna run.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/kpHB8.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/kpHB8.png"" alt=""enter image description here""></a></p>&#xA;",340688,,,,2016-08-19 18:20:13,"",,0,0,0,2016-08-19 18:20:13
39563333,1,,,1,84,"<p>Suppose I have two types, <code>User</code> and <code>Permission</code>, e.g.</p>&#xA;&#xA;<pre><code>type User {&#xA;  id: ID!&#xA;  firstName: String!&#xA;  lastName: String!&#xA;  email: String!&#xA;  permissions: [Permission!]&#xA;}&#xA;&#xA;type Permission {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>User</code> has <code>permissions</code> field, which contains a list of associated <code>Permission</code> type records.</p>&#xA;&#xA;<p>How do I structure a mutation query that updates which permissions user has?</p>&#xA;",368691,,,,2016-09-20 19:18:33,How to reference a list of types representing existing records?,<graphql>,2,0,0,2016-09-18 22:44:22
39563334,2,,39563333,1,,"<p>I have simply used a list of <code>ID</code> type for the <code>permissions</code> parameter in the mutation </p>&#xA;&#xA;<p>I have set <code>permissions</code> parameter to a list of <a href=""http://graphql.org/docs/api-reference-type-system/#graphqlid"" rel=""nofollow""><code>GraphQLID</code></a>.</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;  updateUser (&#xA;    id: ID!&#xA;    email: String&#xA;    password: String&#xA;    firstName: String&#xA;    lastName: String&#xA;    # List of Permission IDs&#xA;    permissions: [ID!]&#xA;  ): User&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The problem with this approach is that this does not define relation between <code>Permission</code> type and <code>ID</code>. Therefore, I have added ""List of Permission IDs"" comment.</p>&#xA;&#xA;<p>Another approach would be to create a dedicated input type, e.g.</p>&#xA;&#xA;<pre><code>input PermissionInput {&#xA;    id: ID!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And use that in instead of <code>ID</code> in the <code>updateUser</code> permissions parameter. However, this does not solve the reference issue.</p>&#xA;",368691,,,,2016-09-18 22:44:22,"",,0,1,0,2016-09-18 22:44:22
39806455,1,,,0,131,"<p>So I cannot seem to figure out the syntax for RethinkDb's web UI data explorer. I have a ""secondary index"" within a table, within a db. It has approx 20k documents. I would like to just see the documents output to JSON, perhaps the 100 most recent documents.</p>&#xA;&#xA;<p>Here's what I have so far, which doesn't seem to be working:</p>&#xA;&#xA;<pre><code>r.db('users').table('leads').orderBy('createdAt').limit(10).coerceTo('array').toJSON()&#xA;</code></pre>&#xA;",4165140,,,,2016-10-04 18:45:17,How to view a secondary index in RethinkDB data explorer?,<database><rethinkdb><graphql>,1,0,0,2016-10-01 12:10:19
39859584,2,,39806455,0,,"<p>You should probably use something like <a href=""https://www.rethinkdb.com/api/javascript/get_all/"" rel=""nofollow""><code>getAll("""", {index: ""secondary_index""})</code></a> that allows you to query with an index. And you might have to play around with the first arg to see what you can do to get all the entries where that field isn't null.</p>&#xA;",6452097,,,,2016-10-04 18:45:17,"",,0,0,0,2016-10-04 18:45:17
40328992,1,40330933,,1,1216,"<p>I have an array of ids, and I created a mutation that allow me to delete an item using only 1 id. <br/>Is there any way to call this mutation multiple times using <code>Relay.Store.commitUpdate</code> or <code>this.props.relay.commitUpdate</code> ?</p>&#xA;",5156161,,710693,2017-08-11 01:11:31,2017-08-11 01:11:31,How to call multiple mutations at the same time?,<graphql><relayjs>,1,0,0,2016-10-30 12:21:07
40421174,2,,40421132,0,,"<p>After further investigation it seems like this is expected behaviour.</p>&#xA;&#xA;<p><a href=""http://facebook.github.io/graphql/#sec-All-Variables-Used"" rel=""nofollow noreferrer"">http://facebook.github.io/graphql/#sec-All-Variables-Used</a></p>&#xA;&#xA;<p>Operation variables must be used when defining an operation.</p>&#xA;",799618,,,,2016-11-04 11:10:32,"",,0,0,0,2016-11-04 11:10:32
40570671,2,,38794060,2,,"<p>You can put query variables anywhere in your schema, not just at the top level:</p>&#xA;&#xA;<p><a href=""https://learngraphql.com/basics/query-variables/3"" rel=""nofollow noreferrer"">https://learngraphql.com/basics/query-variables/3</a></p>&#xA;",627729,,,,2016-11-13 04:44:54,"",,0,0,0,2016-11-13 04:44:54
40657250,1,40657477,,4,3940,"<p>Since you can have multiple steps run sequentially in a mutation, can you have a conditional if statement in graphql so that later steps only run if the result from a previous step meets a condition?</p>&#xA;&#xA;<p>e.g.</p>&#xA;&#xA;<pre><code> mutation upsertLogin($idToken: String!, $email: String!, $username: String!) {&#xA;&#xA;    User(email: $email, username: $username) {&#xA;      id&#xA;    }&#xA;&#xA;    // only do the next step if no id from from previous step&#xA;&#xA;    createUser(email: $email, username: $username) {&#xA;      id&#xA;    }&#xA;&#xA;  }&#xA;</code></pre>&#xA;",611750,,,,2017-07-20 18:12:38,Does graphql allow conditional execution of a step in a mutation?,<graphql>,3,0,0,2016-11-17 14:18:05
40658953,2,,40655390,0,,"<p>Have a look at <a href=""https://stackoverflow.com/questions/32304486/how-to-make-a-mutation-query-for-inserting-a-list-of-array-fields-in-graphql"">How to make a mutation query for inserting a list of (Array) fields in GraphQL</a>. This question does a good job of showing an example of a mutation using Node.js</p>&#xA;",2711603,,-1,2017-05-23 12:13:44,2016-11-17 20:57:29,"",,0,3,0,2016-11-17 15:34:32
41213017,2,,41206123,11,,"<h1>Introduction</h1>&#xA;&#xA;<p>First of all, a common approach for <em>authentication</em> as you state is using a signed JWT that contains the id of the user making the request.</p>&#xA;&#xA;<p>Now let's have a look at the different <em>parameters</em> we can use when considering the <em>authorization</em> of a given request.</p>&#xA;&#xA;<ul>&#xA;<li><p><strong>who is making the request?</strong></p>&#xA;&#xA;<p>determined by the user id mentioned above. More information about the requester like associated user roles can be looked up in the database. This means that we need to maintain a <code>User</code> table if we are using SQL for example, and add new users to this table on registration.</p></li>&#xA;<li><p><strong>which operation should be executed?</strong></p>&#xA;&#xA;<p>users might be granted read-only access. Certain mutations or queries are only allowed for certain users.</p></li>&#xA;<li><p><strong>which fields are included in the query/mutation response?</strong></p>&#xA;&#xA;<p>some fields should be only accessed by certain users.</p></li>&#xA;</ul>&#xA;&#xA;<h1>Permissions</h1>&#xA;&#xA;<p>With this information in mind, we can come up with different permission systems. Most commonly, in such a system, no operation is allowed by default. When a request comes in, the parameters mentioned above can be matched with the existing permissions and if a matching permission is found, the request is granted.</p>&#xA;&#xA;<h2>Role-based permissions</h2>&#xA;&#xA;<p>In certain applications, a role-based approach works great. &#xA;For example, for a simpler version of Stack Overflow, we could have the roles <code>EVERYONE</code>, <code>AUTHENTICATED</code> and <code>MODERATOR</code>. A sensible permission rule could be this:</p>&#xA;&#xA;<ul>&#xA;<li><code>EVERYONE</code> can read questions/answers&#xA;&#xA;<ul>&#xA;<li><strong>requester</strong>: doesn't matter (everyone)</li>&#xA;<li><strong>operations</strong>: <code>allQuestions</code>, <code>allAnswers</code> queries</li>&#xA;<li><strong>fields</strong>: <code>text</code></li>&#xA;</ul></li>&#xA;</ul>&#xA;&#xA;<p>Other rules (leaving parameters out):&#xA;* <code>AUTHENTICATED</code> users can create new questions/answers&#xA;* <code>MODERATOR</code> users can create new questions/answers&#xA;* <code>MODERATOR</code> users can delete questions/answers.</p>&#xA;&#xA;<p>Now for example, if a non-authenticated requests comes in that asks for the <code>allQuestions</code> query, that's fine as we find a permission that allows it (the first).</p>&#xA;&#xA;<p>If on the other hand an authenticated requests comes in for a user that doesn't have the <code>MODERATOR</code> role and includes the <code>deleteQuestion</code> mutation, there is no permission to be found for these parameters. So the request is rejected.</p>&#xA;&#xA;<h2>Graph permissions</h2>&#xA;&#xA;<p>While role-based permissions represent a solid permission system already, they are not suited at all if we want to make granting permission dependant on things like the relation between the requester and the requested node. In our example, it would be quite the work to add the simple rule that any user is allowed to delete their own questions/answers.</p>&#xA;&#xA;<p>At <a href=""http://graph.cool"" rel=""noreferrer"">Graphcool</a>, we have come up with a powerful yet rather simple approach that we call <strong>graph permissions</strong> to tackle this issue. Let's make the following additional <strong>parameters</strong> available when checking permissions:</p>&#xA;&#xA;<ul>&#xA;<li><p><strong>which node is about to be accessed or modified?</strong></p>&#xA;&#xA;<p>determined by a node id</p></li>&#xA;</ul>&#xA;&#xA;<p>Then we can express permissions using a GraphQL query against a special <strong>permission schema</strong> to grant or reject permissions on a node level. Access to a given node is only given, if the permission query contains at least one leaf-node that is not <code>null</code>.</p>&#xA;&#xA;<p>In our case, we could specify this permission query:</p>&#xA;&#xA;<pre><code>query {&#xA;  allAnswers(filter:{&#xA;      authorId: $userId,&#xA;      id: $nodeId&#xA;  }) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>For a given node and user specified by GraphQL variables <code>$userId</code> and <code>$nodeId</code>, we use a query argument <code>filter</code> to either return an empty list if the node wasn't created by the current user, or something non-null otherwise.</p>&#xA;",1176596,,1176596,2016-12-23 18:58:09,2016-12-23 18:58:09,"",,0,0,0,2016-12-18 21:21:38
41688883,1,41729269,,4,3732,"<p>I'm using Graph.cool graphql as a service and am wondering how to do a mass update to the collection, similar to a SQL update.</p>&#xA;&#xA;<p>In my case I need to update the suffix of a url, in the imageUrl column of my database.  I need to swap out a {someid}_sm.jpg to {someid}_lg.jpg</p>&#xA;&#xA;<p>How do I do that with a graphql mutation?  I don't want to reload the entire dataset again and am looking for a way to do it that doesn't involve manually interating through the entire list with a graphql client.</p>&#xA;&#xA;<pre><code>mutation {&#xA;  updatePost() // what goes here?&#xA;}&#xA;</code></pre>&#xA;",611750,,1176596,2017-01-17 13:52:18,2018-09-03 14:16:28,How to update all records in a collection using graphql,<graphql><graphcool>,1,1,0,2017-01-17 04:04:27
41756589,2,,41734312,0,,"<p>Thank you to everyone that helped me out.</p>&#xA;&#xA;<p>I've tried the suggested methods, but couldn't get the desired data set.</p>&#xA;&#xA;<p>So I took this approach where an <code>actorMovie</code> contains separate fields for <code>actor</code> and <code>movie</code>:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""actorMovies"": {&#xA;      ""edges"": [&#xA;        {&#xA;          ""node"": {&#xA;            ""movie"": {&#xA;              name: ""Cool Movie 1"",&#xA;            },&#xA;            ""myActor"": {&#xA;              ""name"": ""John Smith""&#xA;            }&#xA;          },&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This removes the worry of overlapping IDs causing unintentional groupings.</p>&#xA;",4776002,,,,2017-01-20 05:19:25,"",,0,0,0,2017-01-20 05:19:25
42121304,1,42123493,,0,332,"<p>I have two databases/models <code>User</code> and <code>Listing</code>.</p>&#xA;&#xA;<p>I am trying to create two relations:</p>&#xA;&#xA;<ul>&#xA;<li>One <code>User</code> to <em>one</em> <code>Listing</code> called ""ListingOwner""</li>&#xA;<li>One <code>User</code> to <strong>many</strong> <code>Listing</code> called ""ListingCreator""</li>&#xA;</ul>&#xA;&#xA;<p>My users can create multiple listings. I want to keep that as ""Creator"". But any user is allowed to come in and ""claim"" a listing, making them the ""Owner"". However in graph.cool I can't create more then one relationshp between <code>User</code> and <code>Listing</code> model, it gives me this error:</p>&#xA;&#xA;<p><a href=""https://i.imgur.com/8xxEfJM.png"" rel=""nofollow noreferrer"">http://i.imgur.com/8xxEfJM.png</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>Server request for mutation <code>AddRelationMutation</code> failed for the following reasons: 1. A field with the name 'listing' already exists AddRelationInput!) {addRelation(input:$input_0) {clientMutat ^^^</p>&#xA;</blockquote>&#xA;",1828637,,1828637,2017-02-08 20:57:05,2017-02-08 20:59:39,Multiple relation between two models,<graphql><graphcool>,1,0,0,2017-02-08 18:50:30
42188197,2,,42185581,1,,"<p>You can add a new mutation that encodes this functionality.</p>&#xA;&#xA;<p>For example <code>updateWorkingDays(modelId: ID!, index: Int!, workDay: String)</code> that updates the working day of model <code>modelId</code> at <code>index</code> to the new <code>workDay</code>.</p>&#xA;",1176596,,,,2017-02-12 13:36:47,"",,0,0,0,2017-02-12 13:36:47
42284882,2,,36047291,0,,"<p><a href=""https://github.com/graphql/graphql.github.io/blob/source/site/users/index.html.js"" rel=""nofollow noreferrer"">Moderated list</a> on Facebook repo(the accept pool requests  from companies that want to highlight their usage of GraphQL)</p>&#xA;&#xA;<p>And <a href=""http://graphql.org/users/"" rel=""nofollow noreferrer"">Users Page</a></p>&#xA;",1262924,,,,2017-02-16 21:21:57,"",,0,0,0,2017-02-16 21:21:57
42285845,2,,42270840,0,,"<p>So I wrote this little something for myself, it works, it might help others:</p>&#xA;&#xA;<p>Dependencies:</p>&#xA;&#xA;<pre><code>function isObject(avar) {&#xA;    // cosntructor.name tested for `function Animal(){}; var a = new Animal(); isObject(a);` will return true otherwise as it is [Object object]&#xA;    return Object.prototype.toString.call(avar) === '[object Object]' &amp;&amp; avar.constructor.name === 'Object';&#xA;}&#xA;&#xA;function deepAccessUsingString(obj, dotpath) {&#xA;  dotpath.split('.').reduce((nested, key) =&gt; nested[key], obj);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And here is the code:</p>&#xA;&#xA;<pre><code>import { PropTypes } from 'react';&#xA;&#xA;function createPropTypeShape(obj) {&#xA;    let shape = {};&#xA;    let isrequired = obj.isRequired;&#xA;    delete obj.isRequired;&#xA;    let isarray = obj.isArray;&#xA;    delete obj.isArray;&#xA;&#xA;    for (let [key, val] of Object.entries(obj))&#xA;        shape[key] = isObject(val) ? createPropTypeShape(val) : deepAccessUsingString(PropTypes, val);&#xA;&#xA;    let rshape = PropTypes.shape(shape);&#xA;    if (isarray) rshape = PropTypes.arrayOf(rshape);&#xA;    return isrequired ? rshape.isRequired : rshape;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I added a feature, for a key to be <code>isRequired</code> bool, and <code>isArray</code> bool this tells me if the shape is required: using it on the OP:</p>&#xA;&#xA;<pre><code>const SHAPE = {&#xA;    isRequired: true,&#xA;    id: 'string.isRequired',&#xA;    name: 'string.isRequired',&#xA;    address: 'string.isRequired',&#xA;    creator: {&#xA;        isRequired: false, // can omit falsey value&#xA;        displayname: 'string.isRequired',&#xA;        id: 'string.isRequired'&#xA;    },&#xA;    comments {&#xA;        isArray: true,&#xA;        isRequired: true,&#xA;        text: 'string.isRequired'&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>createPropTypesShape(SHAPE)</code> gives: </p>&#xA;&#xA;<pre><code>PropTypes.shape({&#xA;    id: PropTypes.string.isRequired,&#xA;    name: PropTypes.string.isRequired,&#xA;    address: PropTypes.string.isRequired,&#xA;    creator: PropTypes.shape({&#xA;        displayname: PropTypes.string.isRequired,&#xA;        id: PropTypes.string.isRequired&#xA;    }) // notice that this is NOT required&#xA;    comments: PropTypes.arrayOf(PropTypes.shape({ // notice that this is arrayOf due to `isArray: true`&#xA;        text: PropTypes.string.isRequired&#xA;    }))&#xA;}).isRequired&#xA;</code></pre>&#xA;&#xA;<h3>GraphQL part</h3>&#xA;&#xA;<p>If you're interested in the grpahql query generator, here is that:</p>&#xA;&#xA;<pre><code>export function createGqlQuery(obj) {&#xA;    let shape = [];&#xA;&#xA;    delete obj.isRequired;&#xA;    delete obj.isArray;&#xA;&#xA;    for (let [key, val] of Object.entries(obj))&#xA;      shape.push(isObject(val) ? `${key} ${createGqlQuery(val)}` : key);&#xA;&#xA;    return '{' + shape.join(' ') + '}';&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>running this on the shape above gives:</p>&#xA;&#xA;<p><code>createGqlQuery(SHAPE)</code> -> <code>{id name address creator {displayname id} comments {text}}</code></p>&#xA;",1828637,,1828637,2017-02-16 23:17:48,2017-02-16 23:17:48,"",,0,0,0,2017-02-16 22:23:58
42931516,1,,,1,740,"<p>using the documented RequiresAuthValidationRule implementation;</p>&#xA;&#xA;<p><a href=""https://github.com/graphql-dotnet/graphql-dotnet/blob/master/docs/learn.md"" rel=""nofollow noreferrer"">https://github.com/graphql-dotnet/graphql-dotnet/blob/master/docs/learn.md</a></p>&#xA;&#xA;<p>There is an example of checking if a field has certain permission and if a user can access that field.</p>&#xA;&#xA;<p>_.Match(fieldAst =>{...})</p>&#xA;&#xA;<p>It looks like the GraphQL engine is walking a tree and calling the IValidationRule.Validate(...) at each node.</p>&#xA;&#xA;<p>What is the best way to know what the full path of the field is.</p>&#xA;&#xA;<p>The starwars example;<br>&#xA;<a href=""https://github.com/graphql-dotnet/graphql-dotnet/blob/master/docs/getting-started.md"" rel=""nofollow noreferrer"">https://github.com/graphql-dotnet/graphql-dotnet/blob/master/docs/getting-started.md</a></p>&#xA;&#xA;<p>i.e. i want to know that the field is human->friends->name  when I am at the 'name' node.</p>&#xA;&#xA;<p>From what I can see I only have visibility to the current field node and it children, but not its parents.</p>&#xA;",988768,,,,2017-03-24 15:12:18,GraphQL.NET: How to find the full field path using IValidationRule,<graphql-dotnet>,2,0,0,2017-03-21 15:31:39
42957080,1,,,1,522,"<p>I'm building an application based on GraphQL and I'm wondering if there're standard way to secure a GraphQL API?</p>&#xA;&#xA;<p>For instance, if the API can provide a list of all accounts, I don't want that someone not granted can access this list.</p>&#xA;&#xA;<pre><code>{&#xA;   allUsers&#xA;   {&#xA;      Token&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there another way to implement that?</p>&#xA;",6816869,,,,2017-03-22 16:08:20,How to secure a GraphQL API?,<security><ssl><graphql>,0,2,0,2017-03-22 16:08:20
43089989,1,48831179,,0,402,"<p>Currently, I'm connecting to database and creating tables with Sequelize, and doing the rest with Graphql, making the schemas, queries and resolvers.</p>&#xA;&#xA;<p>I seem to have hit a wall with how to ask for the data from these 3 linked tables:</p>&#xA;&#xA;<p><code>CITY           CompLocations                   CompIssue&#xA;| id |         | locationID | compID |         | locationID | issueLevel |&#xA;|*1* | -----&gt;  | 1          |  45    | ------&gt; | 45         | *5*&#xA;| 2  |         | 2          |  203   |         | 203        | 3</code></p>&#xA;&#xA;<p>I just need to retrieve all the CompIssue.issueLevel's associated with CITY.id, via this existing relation/association.</p>&#xA;&#xA;<p>Im looking at associations and querying in Sequelize's API. How would one query the above within a Grapql/Apollo resolver function?</p>&#xA;",1341935,,1341935,2017-03-31 09:02:32,2018-02-16 16:37:50,Querying existing linked tables from mySQL in a graphql resolver?,<javascript><mysql><sequelize.js><graphql-js>,1,0,0,2017-03-29 09:46:49
43123969,1,,,2,6213,"<p>is there a way to implement Graphql  via azure functions and nodejs. For example, something like - <a href=""https://www.npmjs.com/package/graphql-server-lambda"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/graphql-server-lambda</a> </p>&#xA;",7793438,,4167200,2018-12-08 04:40:56,2020-11-02 01:09:29,Graphql with Azure functions,<azure><graphql><azure-functions>,4,1,0,2017-03-30 16:53:57
43143585,2,,43143177,1,,"<p>This error is because the component <code>Photo</code> requires a property name <code>data</code> that <code>isRequired</code>. This comes from code:</p>&#xA;&#xA;<pre><code>Photo.propTypes = {&#xA;  data: React.PropTypes.shape({&#xA;    loading: React.PropTypes.bool.isRequired,&#xA;    error: React.PropTypes.bool.isRequired,&#xA;    updatePosts: React.PropTypes.object,&#xA;  }).isRequired&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You must send to <code>Photo</code> aproperty <code>data</code> with the specified shape.</p>&#xA;&#xA;<p>Verify what does <code>withApollo</code>: does it insert <code>data</code> in <code>Photo</code>? If not, verify how is called the exported component <code>PhotoWithApollo</code>. There should be something like:</p>&#xA;&#xA;<pre><code>&lt;PhotoWithApollo data={{loading: true, error:'my error', updatePosts:{}}}/&gt;&#xA;</code></pre>&#xA;",1346701,,,,2017-03-31 14:48:26,"",,0,1,0,2017-03-31 14:48:26
43196022,2,,43147285,1,,"<p>In apollo-graphql, when you use <a href=""http://dev.apollodata.com/tools/graphql-tools/mocking.html"" rel=""nofollow noreferrer""><code>addMockFunctionsToSchema</code></a>, it returns a random string for type <code>ID</code> and <code>Hello World</code> for type <code>String</code> - and None of your resolvers will be called when you enable mocking.</p>&#xA;&#xA;<p>So, you might have mocking enabled.</p>&#xA;",556124,,556124,2017-04-04 12:38:54,2017-04-04 12:38:54,"",,0,0,0,2017-04-03 23:38:32
43381794,2,,43335698,1,,"<p>Per some <a href=""https://github.com/rmosolgo/graphql-ruby/issues/670"" rel=""nofollow noreferrer"">clarification from the gem contributors</a>— <strong>defining an Object Type is the correct tool for this job, rather than a Scaler Type</strong>.</p>&#xA;",6112494,,,,2017-04-13 00:43:04,"",,0,0,0,2017-04-13 00:43:04
43690400,1,43698236,,5,9285,"<p>I am working on setting up a graphQL schema in node. The <code>/graphql</code> endpoint will typically be hit with argument(s) passed.&#xA;For example, one API call may be looking for ""checking"" accounts:</p>&#xA;&#xA;<pre><code>query {&#xA;  accounts(type: ""checking"") {&#xA;    id&#xA;    type&#xA;    country&#xA;    currency&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Another may be looking for all accounts in the ""US"":</p>&#xA;&#xA;<pre><code>query {&#xA;  accounts(country: ""US"") {&#xA;    id&#xA;    type&#xA;    country&#xA;    currency&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>...and yet another may be looking for ""savings"" accounts in the ""UK"" denominated in ""GBP"":</p>&#xA;&#xA;<pre><code>query {&#xA;  accounts(type: ""savings"", country: ""UK"", currency: ""GBP"") {&#xA;    id&#xA;    type&#xA;    country&#xA;    currency&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is the proper approach defining this query as taking optional parameters for <code>type</code>, <code>country</code>, and <code>currency</code>?</p>&#xA;",3084511,,,,2017-04-29 16:56:02,Passing arguments to graphQL query,<graphql><graphql-js>,1,0,0,2017-04-28 23:59:23
43945302,1,,,3,611,"<p>I've begun writing a schema for supporting GraphQL connections on my server, however, I'm not understanding how to populate the connection with data for the response.</p>&#xA;&#xA;<p>I'm using a single root query design. I'm not sure if this can support more complex structures such as connections and pagination, or if I need to use <code>GraphQLObjectType</code>s.</p>&#xA;&#xA;<p>Here's what my graphql server looks like:</p>&#xA;&#xA;<pre><code>import express from 'express';&#xA;import cors from 'cors';&#xA;import graphqlHTTP from 'express-graphql';&#xA;&#xA;// Functions that call legacy REST endpoints&#xA;import { accounts } from './api/accounts';&#xA;import { user } from './api/users';&#xA;import schema from './schema';&#xA;&#xA;// GraphQL API&#xA;const root = {&#xA;  user,&#xA;  accounts,&#xA;};&#xA;&#xA;const app = express();&#xA;app.use(cors());&#xA;&#xA;app.use('/graphql', graphqlHTTP({&#xA;  schema,&#xA;  rootValue: root,&#xA;  graphiql: true&#xA;}));&#xA;</code></pre>&#xA;&#xA;<p>And this is my schema:</p>&#xA;&#xA;<pre><code>import {&#xA;  buildSchema,&#xA;} from 'graphql';&#xA;&#xA;export default buildSchema(`&#xA;  type PageInfo {&#xA;    startCursor: String&#xA;    endCursor: String&#xA;    hasNextPage: Boolean&#xA;  }&#xA;&#xA;  type User {&#xA;    firstName: String&#xA;    lastName: String&#xA;    personId: Int&#xA;    accountsConnection(&#xA;      first: Int,&#xA;      after: String,&#xA;      last: Int,&#xA;      before: String&#xA;    ): UserAccountsConnection&#xA;  }&#xA;&#xA;  type UserAccountsConnection {&#xA;    pageInfo: PageInfo!&#xA;    edges: [UserAccountsEdge]&#xA;    totalCount: Int&#xA;  }&#xA;&#xA;  type UserAccountsEdge {&#xA;    cursor: String!&#xA;    node: Account&#xA;  }&#xA;&#xA;  type Account {&#xA;    accountName: String&#xA;    accountId: ID&#xA;  }&#xA;&#xA;  type Query {&#xA;    user(personId: Int): User&#xA;    users: [User]!&#xA;    accounts: [Account]!&#xA;    accountsConnection(first: Int): UserAccountsConnection&#xA;  }&#xA;`);&#xA;</code></pre>&#xA;&#xA;<p>I'm receiving null for the accountsConnection.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Zr8Eb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Zr8Eb.png"" alt=""enter image description here""></a></p>&#xA;",933711,,933711,2017-05-12 20:23:55,2017-07-25 07:25:17,How do I resolve connections on GraphQL Types using express-graphql?,<express><graphql><react-apollo>,0,1,0,2017-05-12 19:38:02
43969787,2,,43123969,3,,"<p>There's no native support for this, but there's nothing preventing you from creating a GraphQL schema that calls into Azure Functions.</p>&#xA;&#xA;<p>However, there are some community offerings in the space like scaphold which work to integrate Azure Functions / serverless providers with GraphQL:</p>&#xA;&#xA;<p><a href=""https://docs.scaphold.io/custom-logic/"" rel=""nofollow noreferrer"">https://docs.scaphold.io/custom-logic/</a></p>&#xA;",5915331,,34315,2019-01-09 10:45:35,2019-01-09 10:45:35,"",,0,1,0,2017-05-14 23:35:09
44131347,2,,44130930,0,,"<p>You would need to catch the errors without the <code>throw</code> statement because you don't want to interrupt your process. Instead, you can create an array called errors and <code>.push()</code> the errors into it. When you see fit, near the end of your process, you can check to see if there are errors inside the errors array. If there are, you can display them or handle them as you wish</p>&#xA;&#xA;<pre><code>// example&#xA;var errors = [];&#xA;&#xA;doSomething(function(err,res){&#xA;&#xA;    if(err){&#xA;        errors.push(err);&#xA;    }&#xA;    console.log(""we did a thing"");&#xA;    doSomethingElse(function(err,res2){&#xA;&#xA;         if(err){&#xA;              errors.push(err);&#xA;         };&#xA;         console.log(""we did another thing"");&#xA;&#xA;         // check and throw errors&#xA;         if(errors.length &gt; 0){&#xA;             throw errors;&#xA;         }&#xA;&#xA;&#xA;&#xA;    });&#xA;&#xA;});&#xA;</code></pre>&#xA;",4184194,,,,2017-05-23 09:48:16,"",,0,1,0,2017-05-23 09:48:16
44214961,2,,42041371,5,,"<p><strong>WARNING:</strong> The original <code>BatchedExecutionStrategy</code> has been deprecated and will get removed. The current preferred solution is the <a href=""https://github.com/graphql-java/java-dataloader"" rel=""nofollow noreferrer"">Data Loader library</a>. Also, the entire execution engine is getting replaced in the future, and the new one will again support batching ""natively"". You can already use <a href=""https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/nextgen/GraphQL.java"" rel=""nofollow noreferrer"">the new engine</a> and <a href=""https://github.com/graphql-java/graphql-java/blob/master/src/main/java/graphql/execution/nextgen/BatchedExecutionStrategy.java"" rel=""nofollow noreferrer"">the new <code>BatchedExecutionStrategy</code></a> (both in <code>nextgen</code> packages) but they have limited support for instrumentations. The answer below applies equally to both the legacy and the nextgen execution engine.</p>&#xA;&#xA;<p>Look at it like this. Normal <code>DataFetchers</code>s receive a single object as source (<code>DataFetchingEnvironment#getSource</code>) and return a single object as a result. For example, if you had a query like:</p>&#xA;&#xA;<pre><code>{&#xA;   user (name: ""John"") {&#xA;       company {&#xA;           revenue&#xA;       }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Your <code>company</code> resolver (fetcher) would get a <code>User</code> object as source, and would be expected to somehow return a <code>Company</code> based on that e.g.</p>&#xA;&#xA;<pre><code>User owner = (User) environment.getSource();&#xA;Company company = companyService.findByOwner(owner);&#xA;return company;&#xA;</code></pre>&#xA;&#xA;<p>Now, in the exact same scenario, if your <code>DataFetcher</code> was batched, and you used <code>BatchedExecutionStrategy</code>, instead of receiving a <code>User</code> and returning a <code>Company</code>, you'd receive a <code>List&lt;User&gt;</code> and would return a <code>List&lt;Company&gt;</code> instead.</p>&#xA;&#xA;<p>E.g.</p>&#xA;&#xA;<pre><code>List&lt;User&gt; owners = (List&lt;User&gt;) environment.getSource();&#xA;List&lt;Company&gt; companies = companyService.findByOwners(owners);&#xA;return companies;&#xA;</code></pre>&#xA;&#xA;<p>Notice that this means your underlying logic must have a way to fetch multiple things at once, otherwise it wouldn't be batched. So your <code>myService.getData</code> call would need to change, unless it can already fetch data for multiple source object in one go.</p>&#xA;&#xA;<p>Also notice that batched resolution makes sense in nested queries only, as the top level resolver can already fetch a list of object, without the need for batching.</p>&#xA;",294657,,294657,2020-04-09 09:52:23,2020-04-09 09:52:23,"",,0,0,0,2017-05-27 09:03:23
44377518,1,,,5,2246,"<p>I want to do 2 creations in my GraphQL query. (I know my query structure is not correct, but it's to illustrate my question)</p>&#xA;&#xA;<pre><code>mutation {&#xA;    affiliateCreate(company: ""test mutation"") {&#xA;    $id: id,&#xA;    affiliateUserCreate(affiliate_id: $id, name: ""test name"") {&#xA;      id, &#xA;      name&#xA;    },&#xA;    company&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want my first id result to be in variable who i pass to the second creation call? I'm very new to GraphQL and i was wondering if it's possible.</p>&#xA;&#xA;<p>Is there any other way possible to do such thing? Or i must do 2 mutation call? The first with <code>affiliateCreate</code> and in it's fallback the second one?</p>&#xA;&#xA;<p>Thank you </p>&#xA;",5369102,,,,2020-07-17 19:51:46,GraphQL - Is it possible to set a variable with a result for a mutation,<graphql>,1,0,0,2017-06-05 20:53:33
44440349,1,,,0,384,"<p>I'm writing a authorization component to validate GraphQL queries.</p>&#xA;&#xA;<p>Using the <code>ValidationContext</code>object I manage to get the operation type (mutation/query), operation name and the non-scalar field names contained in the query.</p>&#xA;&#xA;<p>What I need is to get the GraphQL type of these non-scalar fields.</p>&#xA;&#xA;<p>Here is the code I'm using for the validator (using Typescript):</p>&#xA;&#xA;<pre><code>let entitiesArray:Array&lt;string&gt; = new Array&lt;string&gt;()&#xA;&#xA;function getRecursiveSelectionSetNodes (selSetNode:SelectionSetNode) {&#xA;  selSetNode.selections.forEach ((node:FieldNode, index, array) =&gt; {&#xA;    if (node.selectionSet) {&#xA;      entitiesArray.push(node.name.value) // I could push the whole node, and make an array of nodes if necessary &#xA;      getRecursiveSelectionSetNodes (node.selectionSet)&#xA;    }&#xA;  })&#xA;}&#xA;&#xA;export const authorizeQuery = function authorizeQuery (context: ValidationContext): any {&#xA;&#xA;  let opNode:OperationDefinitionNode = getOperationAST(context.getDocument())&#xA;&#xA;  let opType = opNode.operation&#xA;  console.log ('_________________ AUTH OPERATION TYPE: ', opType)&#xA;&#xA;  let opFieldNode:FieldNode = &lt;FieldNode&gt;opNode.selectionSet.selections[0]&#xA;  let opName = opFieldNode.name.value&#xA;&#xA;  console.log ('_________________ AUTH OPERATION NAME: ', opName)&#xA;&#xA;    let selSetUser:SelectionSetNode = opFieldNode.selectionSet&#xA;  // Selected fields by the user&#xA;  // Here, first-level nodes will be objects requested by the query&#xA;  // The nodes without a nested ""SelectionSet"" node will be scalar&#xA;  // Nodes with a nested ""SelectionSet"" are non-scalar that need to be checked&#xA;&#xA;  getRecursiveSelectionSetNodes (selSetUser)&#xA;&#xA;  console.log ('_________________ AUTH ENTITIES: ', JSON.stringify(entitiesArray))&#xA;&#xA;  return []&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This code returns the field names, not the type, so I need to map the field name ""users"" with the graphQL type ""User[]"", and so on, so I can perform authorization based on the graphql type being requested.</p>&#xA;&#xA;<p>Any ideas?</p>&#xA;",1475008,,1475008,2017-06-08 15:57:37,2017-06-08 15:57:37,Get object type from FieldNode in a GraphQL validator,<node.js><typescript><graphql>,0,4,0,2017-06-08 15:51:55
44441566,1,,,5,2414,"<p>I understand that mutations are sequential, so it makes sense to me that if Mutation 1 creates an entity and returns an id, that Mutation 2 should have access to that id. However I don't see any examples online and can't seem to get it to work. I see that people say you need to handle this in the resolve function of your route but it seems like extra unnecessary code if I can get this in just the query. </p>&#xA;&#xA;<p>For example I have the following where accounts belong to clients and hence need the clientId before being created. However this does not work...</p>&#xA;&#xA;<pre><code>mutation createClientAndAccount($account: AccountInput, $client: ClientInput){&#xA;      createClient(client: $client){ clientId }&#xA;      createAccount(account: $account, clientId: USE_CLIENT_ID_FROM_ABOVE) { ... } &#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>I've also tried nesting mutations but didn't have much luck there either...</p>&#xA;&#xA;<p>Is what i'm trying to do possible? Would the resolve function of <code>createAccount</code> have the return data from <code>createClient</code>?</p>&#xA;",1455043,,,,2022-01-09 13:30:38,graphql multiple mutations using prior mutation return results?,<graphql><graphql-js>,2,1,0,2017-06-08 16:54:41
44449989,1,,,4,577,"<p>I want to do a API with django-graphene, but i want to apply the django default group permission when i user make a request this will have permission if his user-group allow him to CRUD.</p>&#xA;&#xA;<p>Thanks.</p>&#xA;",5374194,,-1,2020-11-13 09:32:44,2020-11-13 09:32:44,How to use django default group permission in django-graphene?,<django><permissions><graphql><graphene-python>,1,0,0,2017-06-09 05:35:37
44981566,2,,44980989,10,,"<p>Inside your Query type definition, you wrote:</p>&#xA;&#xA;<pre><code>fields: Companies&#xA;</code></pre>&#xA;&#xA;<p>It should be</p>&#xA;&#xA;<pre><code>fields: { Companies }&#xA;</code></pre>&#xA;&#xA;<p>Looking at the <a href=""http://graphql.org/graphql-js/type/"" rel=""noreferrer"">docs</a>, fields takes an object or a function returning an object, with that object's keys mapping to the names of all the fields in the type (all the queries in your schema in this case).</p>&#xA;&#xA;<p>Also, for clarity, since queries and mutations are fields of their respective types, it may be better to name them in camelCase rather than PascalCase (i.e. { companies: Companies }</p>&#xA;",6024220,,,,2017-07-08 01:09:29,"",,0,0,0,2017-07-08 01:09:29
45123526,1,,,2,1483,"<p>I'm using a postgraphql autogenerated mutation to create a row with graphql in a in a postgres table that has a column of datatype UUID[].</p>&#xA;&#xA;<p>However, there doesn't seem to be a way to save this UUID[] data with graphql? Is this a datatype that graphql doesn't account for or am I wrongly forming the array?</p>&#xA;&#xA;<p>When I go to create the row in graphiql: </p>&#xA;&#xA;<pre><code>mutation {&#xA;  createJob(&#xA;    input: {&#xA;      user_ids: [""5b7323ac-e235-4edb-bbf9-97495d9a42a1""], &#xA;      instructions: ""Job Instructions"", &#xA;      publishedDate: ""2017-06-07""}&#xA;   }&#xA; )&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get the following error:</p>&#xA;&#xA;<pre><code>""message"": ""column \""user_ids\"" is of type uuid[] but expression is of type text[]""&#xA;</code></pre>&#xA;&#xA;<p>Is a UUID technically not stored like text? I've tried different ways of forming the the UUID array but nothing seems to work </p>&#xA;",3532919,,,,2017-08-09 13:49:07,Graphql mutation for a column of type UUID[],<postgresql><uuid><graphql><postgraphql>,2,0,0,2017-07-15 23:07:19
45239005,2,,45238631,2,,"<p>Because <code>getAccount</code> <strong>is not</strong> a query name. It's just a regular field on the root query type <code>Query</code>.</p>&#xA;&#xA;<p>And having results on <strong>the exact same shape</strong> as the query is one of the core design principles of GraphQL:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Y5YXF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Y5YXF.png"" alt=""enter image description here""></a>&#xA;<em>Screenshot from <a href=""http://graphql.org/"" rel=""nofollow noreferrer"">http://graphql.org/</a> site</em></p>&#xA;&#xA;<p>Query name in GraphQL goes after <code>query</code> keyword:</p>&#xA;&#xA;<pre><code>query myQueryName {&#xA;  getAccount(email: ""test@testing.com"") {&#xA;    firstName&#xA;    lastName&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1749888,,,,2017-07-21 13:31:14,"",,0,2,0,2017-07-21 13:31:14
45332321,1,45336692,,3,1427,"<h1>Situation:</h1>&#xA;&#xA;<p>I am using <a href=""https://github.com/Folkloreatelier/laravel-graphql"" rel=""nofollow noreferrer"">laravel-graphql</a> as a backend GraphQL service and <a href=""https://github.com/Akryum/vue-apollo"" rel=""nofollow noreferrer"">vue-apollo</a> as a frontend client. </p>&#xA;&#xA;<p>In my Vue component I have a gql query as follows: (relation: A Song has more SongParts)</p>&#xA;&#xA;<pre><code>const getSong = gql`&#xA;    query FetchSong ($id:Int!){&#xA;        song(id: $id) {&#xA;            id,&#xA;            name,&#xA;            authors_lyrics,&#xA;            authors_music&#xA;            song_parts{&#xA;                type&#xA;                lyrics&#xA;            }&#xA;        }&#xA;    }`;&#xA;</code></pre>&#xA;&#xA;<p>Now there's a mutation that i want to use to update given song:</p>&#xA;&#xA;<pre><code>const updateSong = gql`&#xA;    mutation updateSongMutation ($id:Int!,$name:String,$authors_lyrics:String,$authors_music:String, $song_parts: [SongPart]) {&#xA;        updateSongMutation(id: $id, name: $name, authors_lyrics: $authors_lyrics, authors_music: $authors_music, song_parts: $song_parts) {&#xA;            id&#xA;        }&#xA;    }`;&#xA;</code></pre>&#xA;&#xA;<p>.. and in the Vue component used this way:</p>&#xA;&#xA;<pre><code>methods: {&#xA;            save: function(){&#xA;                this.$apollo.mutate({&#xA;                    mutation: updateSong,&#xA;                    variables: this.songData,&#xA;                }).then((result) =&gt; {&#xA;                    console.log(result);&#xA;                }).catch((error) =&gt; {&#xA;                    console.log(error);&#xA;                })&#xA;            }&#xA;        },&#xA;</code></pre>&#xA;&#xA;<p>However, to update the song_parts array I need to define a custom input type:</p>&#xA;&#xA;<pre><code>input SongPart{&#xA;    id: Int!&#xA;    lyrics: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<h1>Problem</h1>&#xA;&#xA;<p>I can't figure out, where to define this input type. When I'm using GraphiQL in Chrome WebTools, there's no problem defining it in front of the mutation. I also found some info for apollo server, but I need it in the client. </p>&#xA;&#xA;<p>So basically the problem is about mutating a list of data.</p>&#xA;",3742417,,,,2017-07-26 20:21:37,How to define GraphQL input type in vue-apollo client,<vuejs2><graphql><apollo><apollo-client><vue-apollo>,1,0,0,2017-07-26 16:12:02
45574370,1,,,0,73,"<p>I'm relatively new to GraphQL, and I've noticed that you can select related fields in one of two different ways.  Let's say we have a <code>droids</code> table and a <code>humans</code> table, and <code>droids</code> have an <code>owner</code> which is a record in the <code>humans</code> table.  There's (at least) two ways you can express this:</p>&#xA;&#xA;<pre><code>query DroidsQuery {&#xA;  id&#xA;  name&#xA;  owner {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>or:</p>&#xA;&#xA;<pre><code>query DroidsQuery {&#xA;  id&#xA;  name&#xA;  ownerId # this resolves to owner.id&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>At first glance the former seems more idiomatic, and obviously if you're selecting multiple fields it has advantages (<code>owner { id name }</code> vs. having to make a new <code>ownerName</code> so you can do <code>ownerId ownerName</code>).  However, there's a certain explicitness to the <code>ownerId</code> style, as you're expressing ""here's this thing I specifically expected you to select"".</p>&#xA;&#xA;<p>Also, from an implementation standpoint, it seems like <code>owner { id }</code> would lend itself to the resolver making an unnecessary <code>JOIN</code>, as it would translate <code>owner { id }</code> as the <code>id</code> column of the <code>humans</code> table (vs. an <code>ownerId</code> field which, with its own resolver, knows it doesn't need a JOIN to get the <code>owner_id</code> column of the <code>droids</code> table).</p>&#xA;&#xA;<p>As I said, I'm new to GraphQL, so I'm sure there's plenty of nuances to this question that I'd appreciate if I'd been using it longer.  Therefore, I was hoping for insight from someone who has used GraphQL into the upsides/downsides of either approach.  And just to be clear (and to avoid having this answer closed) I'm looking for explicit ""here's what is objectively bad/good about one approach over the other"", not subjective ""I prefer one approach"" answers.</p>&#xA;",5921,,5921,2017-08-08 18:04:41,2017-08-10 21:09:16,GraphQL: Are either of these two patterns better/worse?,<graphql>,1,0,0,2017-08-08 17:15:56
45579741,2,,45566784,1,,"<p>I believe your GraphQL is malformed in that the <code>query</code> key is supposed to contain a string, not a complex structure. See also <a href=""https://developer.github.com/v4/guides/forming-calls/#communicating-with-graphql"" rel=""nofollow noreferrer"">this example</a> from the GitHub API documentation.</p>&#xA;&#xA;<p>You may also want to set <code>Content-Type</code> to <code>application/json</code> as is recommended by the <a href=""http://graphql.org/learn/serving-over-http/#post-request"" rel=""nofollow noreferrer"">GraphQL introduction</a>. <code>application/graphql</code> does not seem to be a <a href=""https://www.iana.org/assignments/media-types/media-types.xhtml#application"" rel=""nofollow noreferrer"">registered media type</a> and appears to <a href=""https://stackoverflow.com/a/43732764/3012385"">alter the behaviour</a> of GraphQL.</p>&#xA;",3012385,,,,2017-08-09 00:10:08,"",,0,2,0,2017-08-09 00:10:08
45654328,1,46013277,,1,1754,"<p>I'm building a GraphQL API. When returning a union / interface type field, is it possible to have the server tell me the object type? i.e. something like this</p>&#xA;&#xA;<pre><code>{&#xA;  search(text: ""an"") {&#xA;    ... on Human {&#xA;      __type&#xA;      name&#xA;      height&#xA;    }&#xA;    ... on Droid {&#xA;      __type&#xA;      name&#xA;      primaryFunction&#xA;    }&#xA;    ... on Starship {&#xA;      name&#xA;      length&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;// or even better&#xA;&#xA; {&#xA;  search(text: ""an"") {&#xA;    __type // &lt;--- even though it's a Union query, everything has a type right? :/&#xA;&#xA;    ... on Human {&#xA;      name&#xA;      height&#xA;    }&#xA;    ... on Droid {&#xA;      name&#xA;      primaryFunction&#xA;    }&#xA;    ... on Starship {&#xA;      name&#xA;      length&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>which would return</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""search"": [&#xA;      {&#xA;        ""__type"": ""Human"",&#xA;        ""name"": ""Han Solo"",&#xA;        ""height"": 1.8&#xA;      },&#xA;      {&#xA;        ""__type"": ""Human"",&#xA;        ""name"": ""Leia Organa"",&#xA;        ""height"": 1.5&#xA;      },&#xA;      {&#xA;        ""name"": ""TIE Advanced x1"",&#xA;        ""length"": 9.2&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Obviously, I could manually add this functionality by adding ""type"" fields to objects as needed, but I imagine something like this is already built into GraphQL? Seeing as all of the objects already have names. Basically I'm trying to access introspection information as part of a normal query.</p>&#xA;",5490505,,5057736,2017-08-12 19:53:29,2017-09-02 11:24:31,How to return object type with union query results in GraphQL?,<graphql><graphql-ruby>,1,0,0,2017-08-12 19:51:34
45728562,1,,,0,46,"<p>For example I have <code>posts</code> endpoint, <code>post</code> have <code>title</code>, <code>description</code>, <code>status</code>. When I show post to user I want to limit <code>post</code> fields to <code>title</code> and <code>description</code>. But when I show <code>post</code> to admin I want to send all fields of <code>post</code>, so how it spit ? I can create two post models, for user which consist of <code>title</code> and <code>description</code>, for admin with all fields, look what is role of the user and decide which model to chose. Or create rule on every model and role, which look at role and cut data by role. I use graphql and can fetch only fields thats I need, but it isn't security because, user can modify request and gat all data. How resolve this problem ?</p>&#xA;&#xA;<p>Thank You !</p>&#xA;",5763321,,5763321,2017-08-17 07:16:57,2017-08-17 13:06:20,How to split data fields and logic based on authorization?,<api><security><authorization><graphql>,1,0,0,2017-08-17 07:03:28
45735957,2,,45728562,1,,"<p>I wouldn't make two models, but limit the access of a user to only <code>title</code> and <code>description</code> on server side.</p>&#xA;&#xA;<p>On client side I would only ask for <code>status</code> additionally if the user is admin. (To make this elegant, see <a href=""http://graphql.org/learn/queries/#fragments"" rel=""nofollow noreferrer"" title=""fragments"">fragments</a>.)</p>&#xA;&#xA;<p>You need to identify on server side if someone is admin or normal user, otherwise no API can save you from modified requests.</p>&#xA;",1829772,,,,2017-08-17 13:06:20,"",,0,0,0,2017-08-17 13:06:20
45895395,1,,,6,566,"<p>how do I update the ui with a new item in relay modern? </p>&#xA;&#xA;<p>I have all other CRUD working and but can't figure out the updater on commit mutation for a new item. When I refresh the page it there. All examples use viewer object which I don't have one in my schema.</p>&#xA;&#xA;<p>schema.graphql  </p>&#xA;&#xA;<pre><code>type Note {&#xA;  id: String&#xA;  avatar: String&#xA;  message: String&#xA;  date: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>create_mutation.js</p>&#xA;&#xA;<pre><code>export function createMutation({ mutation, variables, environment, create }) {&#xA;  const fragment = mutation().fragment;&#xA;  const operation = fragment.selections[0].name;&#xA;  const mutationName = fragment.name;&#xA;  const type = fragment.selections[0].concreteType;&#xA;  const id = 'client:${operation}:${cuid()}';&#xA;  const config = {&#xA;    mutation,&#xA;    variables,&#xA;    optimisticUpdater: proxyStore =&gt; {&#xA;      // 1. Create mock record that to be added to the store&#xA;      const record = proxyStore.create(id, type);&#xA;      Object.keys({ ...variables, id }).forEach(key =&gt;&#xA;        record.setValue(key, `${key}`)&#xA;      );&#xA;&#xA;      const viewerProxy = proxyStore.get(operation);&#xA;      const connection = ConnectionHandler.getConnection(record, mutationName);&#xA;&#xA;      if (connection) {&#xA;        ConnectionHandler.insertEdgeAfter(viewerProxy, record);&#xA;      }&#xA;    },&#xA;    updater: proxyStore =&gt; {},&#xA;    onError: error =&gt; console.log(error)&#xA;  };&#xA;&#xA;  commitMutation(environment, config);&#xA;}&#xA;</code></pre>&#xA;",1286026,,10319970,2018-09-22 17:06:07,2018-09-22 17:06:07,How to use optimisticUpdater and updater in relay modern for create without edges?,<javascript><graphql><relay>,0,2,0,2017-08-26 12:30:57
46129341,2,,45974975,0,,"<p>You can query based on authorization results. In your Todo example:</p>&#xA;&#xA;<ol>&#xA;<li>Ask the authorization server whose todos you're allowed to see,</li>&#xA;<li><code>SELECT * FROM todos WHERE owner IN [&lt;permitted owners]]</code> </li>&#xA;</ol>&#xA;",675311,,,,2017-09-09 09:50:00,"",,0,0,0,2017-09-09 09:50:00
46192772,2,,44648925,0,,"<p>If you are planning to use <a href=""https://github.com/Folkloreatelier/laravel-graphql"" rel=""nofollow noreferrer"">this</a> package you can do that easily.</p>&#xA;&#xA;<p>For example, define multiple schemes like this:&#xA;<a href=""https://github.com/Folkloreatelier/laravel-graphql#schemas"" rel=""nofollow noreferrer"">https://github.com/Folkloreatelier/laravel-graphql#schemas</a></p>&#xA;&#xA;<p>Then in your routes/web.php file define </p>&#xA;&#xA;<pre><code>Route::get('/graphql/secret', ['middleware' =&gt; ['api:auth']], function () {&#xA;</code></pre>&#xA;&#xA;<p>});</p>&#xA;&#xA;<p>Public data can be accessed on routes like this:&#xA;<a href=""http://your.domain/graphql?query=query+FetchUsers"" rel=""nofollow noreferrer"">http://your.domain/graphql?query=query+FetchUsers</a>{users{name}}</p>&#xA;&#xA;<p>Protected data can be accessed on routes like this:&#xA;<a href=""http://your.domain/graphql/secret?query=query+FetchUsers"" rel=""nofollow noreferrer"">http://your.domain/graphql/secret?query=query+FetchUsers</a>{users{id,email,name}}</p>&#xA;",5617150,,,,2017-09-13 08:39:11,"",,0,0,0,2017-09-13 08:39:11
46195445,2,,46190903,0,,"<p>Think about the different access scenarios and then create the queries and mutations first.</p>&#xA;&#xA;<p>For you case, query could be something like &#xA;<code>&#xA;query { customer(id: 1234) { balance maxcredit noOfOrders } }&#xA;</code>&#xA;And now build the server accordingly.</p>&#xA;",1829772,,,,2017-09-13 10:44:32,"",,0,0,0,2017-09-13 10:44:32
46243862,2,,45920986,1,,"<p>Setting up an AWS Lambda is left as an exercise for the reader.</p>&#xA;&#xA;<p>To get to see what GraphQL queries (or in this case, mutations) your Apollo client code is sending to the server, for cutting+pasting (and presumably parameterising) into your lambda code, this tool exists: <a href=""https://dev-blog.apollodata.com/inspecting-your-graphql-client-in-the-browser-2481f8bcdd55"" rel=""nofollow noreferrer"">Apollo GraphQL Dev Tools</a> which now allows you to watch your mutations being executed.</p>&#xA;",3857002,,,,2017-09-15 16:18:48,"",,0,0,0,2017-09-15 16:18:48
46510967,2,,46510312,1,,<p>You will have to create a GraphQL server with a Query resolver to get this data. Try something like this</p>&#xA;&#xA;<pre><code>type Query {&#xA;   posts(...your post options): [Post]&#xA;}&#xA;&#xA;type Post {&#xA; ...your post keys&#xA;}&#xA;</code></pre>&#xA;,3752942,,,,2017-10-01 09:21:52,"",,0,2,0,2017-10-01 09:21:52
46764922,1,,,-1,88,<p>This is query is perfectly working on with mySQl but it is not working with hql name query any one can help me it is grateful</p>&#xA;&#xA;<p>this is my SQL</p>&#xA;&#xA;<pre><code>SELECT * FROM ( SELECT * FROM EsEvent  ORDER BY eventTimestamp DESC ) e WHERE isReset=1 GROUP BY eventId;&#xA;</code></pre>&#xA;&#xA;<p>this is my HQL name query which i wrote.</p>&#xA;&#xA;<pre><code>FROM ( FROM EsEvent es ORDER BY es.eventTimestamp DESC ) EsEvent e WHERE e.isReset=1 GROUP BY e.eventId&#xA;</code></pre>&#xA;&#xA;<p>but this is not working it will and up with an error</p>&#xA;&#xA;<blockquote>&#xA;  <p>Failed to create sessionFactory object: org.hibernate.HibernateException: Errors in named queries: HQL_GET_ALL_ESEVENT_GROUP_BY_EVENT_ID_ORDER_BY_EVENT_TIMESTAMP_AND_RESET_ID_ONE</p>&#xA;</blockquote>&#xA;&#xA;<p>my purpose is before i evaluate the where clause i need order it any one can help me.</p>&#xA;,4950352,,,,2017-10-16 08:39:05,How to convert mySQL subquery into HQL name query,<mysql><hibernate><subquery><hql><graphql>,1,0,0,2017-10-16 07:22:12
46765017,2,,46764922,0,,"<p>Try this in HQL:</p>&#xA;&#xA;<pre><code>SELECT e FROM &#xA;(SELECT es FROM EsEvent es ORDER BY es.eventTimestamp DESC ) EsEvent e&#xA;WHERE e.isReset=1 GROUP BY e.eventId&#xA;</code></pre>&#xA;&#xA;<p>But a simple way is:</p>&#xA;&#xA;<pre><code>SELECT es FROM EsEvent es &#xA;WHERE es.isReset=1&#xA;GROUP BY es.eventId&#xA;ORDER BY es.eventTimestamp DESC&#xA;</code></pre>&#xA;&#xA;<p><strong>Pay attention:</strong></p>&#xA;&#xA;<p>Normally, when you use a <code>GROUP BY</code> clause in your field list you must use only grouped fields or aggregate (by function) fields</p>&#xA;",2577734,,2577734,2017-10-16 08:39:05,2017-10-16 08:39:05,"",,0,10,0,2017-10-16 07:27:38
46821218,1,,,1,2100,"<p>I have some data I'm getting back from an API call to GraphQL, which I would like to do some transformation to and then, have that transformed data sent back to the client. What would be the best way to accomplish this?</p>&#xA;",4475995,,4475995,2017-10-19 01:10:01,2017-10-19 01:10:01,What is the best way to transform data from an API in GraphQL,<javascript><facebook-graph-api><graphql>,1,0,0,2017-10-19 00:30:42
46886957,1,,,3,388,"<p>I have the below graphql microservices &#xA;<code>&#xA;- /graphql1 - with userList as the query - fetches the user records from nosql db&#xA;- /graphql2 - with accountList as the query - fetches the account records from sql db&#xA;- /graphql3 - with transactionList as the query - fetches the transactions records from static file&#xA;</code></p>&#xA;&#xA;<p>All these 3 microservice run on their own docker container.</p>&#xA;&#xA;<p>i would like to host these 3 microservices through one single aws api gateway&#xA;i.e. <code>/api</code>&#xA;when the &#xA;<code>&#xA;query is userlist - api should redirect the request to /graphql1&#xA;query is accountList - api should redirect the request to /graphql2&#xA;query is transactionList - api should redirect the request to /graphql3&#xA;</code></p>&#xA;&#xA;<p>AWS API gateway can point to different endpoint based on method or contexturl, in this case , all graphql requests would be post to /api , with query as the body. Hence the challenge. Any help or guidance is really appreciated.</p>&#xA;",2178209,,,,2017-10-23 10:17:04,AWS api gateway - multiple graphql microservices endpoint api routing,<api><amazon-web-services><graphql><microservices><gateway>,0,0,0,2017-10-23 10:17:04
47028793,1,51937343,,4,5876,"<p>How can I merge any duplicate rows I receive in a request response?</p>&#xA;&#xA;<p>I requested the last 200 books that have been viewed by the user and, in the results, I have duplicates.</p>&#xA;&#xA;<p>The result looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;        ""view_book"": [&#xA;            {&#xA;                ""views"": 4,&#xA;                ""book"": {&#xA;                    ""id"": ""26910093"",&#xA;                    ""title"": ""Book name 1"",&#xA;                }&#xA;            },&#xA;            {&#xA;                ""views"": 7,&#xA;                ""book"": {&#xA;                    ""id"": ""26910093"",&#xA;                    ""title"": ""Book name 1"",&#xA;                }&#xA;            },&#xA;        ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So, is it possible to suppress the duplication with GraphQL?</p>&#xA;",7198006,,4093278,2019-06-12 11:21:18,2019-06-12 12:25:15,Suppress duplicates in GraphQL response,<graphql>,2,0,0,2017-10-31 05:59:48
47142986,1,,,2,1698,"<p>I´m using Relay Modern as my client GraphQL interface. I wish to know if is possible to build my query statement dynamically inside Relay Modern, something like changing that original:</p>&#xA;&#xA;<pre><code>const ComponentQuery = graphql`&#xA;    query ComponentQuery ($companyId: ID!) {&#xA;        viewer {&#xA;            company(id: $companyId) {&#xA;                id&#xA;                name&#xA;                enabled&#xA;                users {&#xA;                    id&#xA;                    username&#xA;                    email&#xA;                    firstName&#xA;                    lastName&#xA;                    jobTitle&#xA;                    phone&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>To the following:</p>&#xA;&#xA;<pre><code>let queryFields = ['name', 'enabled'];&#xA;let userFields = ['username', 'email', 'firstName', 'lastName', 'jobTitle', 'phone' ];&#xA;&#xA;&#xA;const ComponentQuery = graphql`&#xA;    query ComponentQuery ($companyId: ID!) {&#xA;        viewer {&#xA;            company(id: $companyId) {&#xA;                id&#xA;                queryFields&#xA;                name&#xA;                enabled&#xA;                users {&#xA;                    id&#xA;                    userFields&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>Naturally, as the GraphQL Schema is static, the fields must all be present in the GraphQL schema. All I want is to build the query dynamically, not having a dynamic GraphQL schema.</p>&#xA;",2697571,,,,2017-11-25 20:28:26,Build relay queries dynamically,<javascript><reactjs><graphql><relayjs>,2,0,0,2017-11-06 17:58:47
47246635,1,,,1,3926,"<p>I want to join 3 tables just like we do in mysql based on primary and foreign keys.</p>&#xA;&#xA;<p>Can I do such using graphql(<a href=""http://graphql.org/"" rel=""nofollow noreferrer"">http://graphql.org/</a>)&#xA;My table structure along with graphql query is below. Thanks</p>&#xA;&#xA;<pre><code>query($companyId:String){&#xA;  Data{&#xA;    reach{&#xA;     department {&#xA;       departmentId&#xA;       departmentName&#xA;       description&#xA;     }&#xA;      companyDepartment(companyId:$companyId) {&#xA;        primaryId&#xA;        departmentId&#xA;        companyId&#xA;        createdDate&#xA;        modifiedDate&#xA;        modifiedBy&#xA;      }&#xA;      company(companyId:$companyId) {&#xA;        companyId&#xA;        companyName&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6688223,,326111,2017-12-20 06:16:29,2017-12-20 06:16:29,join 3 tables using graphql query,<graphql><graphql-js><express-graphql>,1,0,0,2017-11-12 07:49:17
47294038,1,47944468,,2,303,"<p>I'm using the template graphcool/templates/auth/email-password with Graphcool and I'd like to add the ability to manage user roles.</p>&#xA;&#xA;<p>This is my definition schema:</p>&#xA;&#xA;<pre><code>type User @model {&#xA;    id: ID! @isUnique&#xA;    createdAt: DateTime!&#xA;    updatedAt: DateTime!&#xA;    email: String! @isUnique&#xA;    password: String!&#xA;    role: UserRole!&#xA;}&#xA;&#xA;enum UserRole {&#xA;    EDITOR,&#xA;    MODERATOR,&#xA;    ADMIN&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm already receiving the role in the query and saving it in local storage, but anyone would be able to change it affecting the frontend UI (if we add permissions, we shouldn't worry in the server side). What's the best/secure way to manage it?</p>&#xA;",1876555,,,,2017-12-22 16:19:23,Manage user roles with Graphcool,<javascript><jwt><graphql><react-apollo><graphcool>,1,0,0,2017-11-14 19:45:53
47342121,1,47352029,,0,512,"<p>I have limited capabilities on my client, and need to send unstructured data to GraphQL.</p>&#xA;&#xA;<p>I'll have a query like this:</p>&#xA;&#xA;<pre><code>mutation createDroid {&#xA;  payload: ""R2-D2,Astromech,NEWHOPE\,EMPIRE\,JEDI""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And want to turn it into schema like this:</p>&#xA;&#xA;<pre><code>type Droid {&#xA;  name: String!&#xA;  function: String!&#xA;  appearsIn: [Episode]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Would this be the right way to define the <code>Mutator</code></p>&#xA;&#xA;<pre><code>type Mutation {&#xA;  createDroid(string payload): Droid&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>All I would have to do is make sure the resolver returns an Object with <code>name</code> <code>function</code> and <code>appearsIn</code> properties to invoke the schema validation?</p>&#xA;&#xA;<p>Something makes me think I would need to build a new query and call <code>&#xA;graphql(schema, query, resolvers)</code> again.</p>&#xA;",586631,,,,2017-11-17 13:43:22,GraphQL and data transform,<node.js><graphql><apollo>,1,0,0,2017-11-17 01:54:37
47414949,2,,47294131,1,,"<p>So apparently, update does NOT return affected rows for MSSQL,  only the number of records affected.  </p>&#xA;&#xA;<p>This is true only for postgres when returning: true:</p>&#xA;&#xA;<pre><code>public static update(values: Object, options: Object): Promise&lt;Array&lt;affectedCount, affectedRows&gt;&gt;&#xA;</code></pre>&#xA;&#xA;<p>Setting returning: true (for MSSQL) returns undefined (and order of params in the array is not even in the right order... i.e. first affectedRows -> undefined, then affectedCount ->num of affected rows.)</p>&#xA;&#xA;<p>Tho get an object back you would need to do something like this:</p>&#xA;&#xA;<pre><code>Mutation: {&#xA;createUser: async (obj, args) =&gt;&#xA;  (await User.create(args.user)),&#xA;updateUser: async (obj, args, context, info) =&gt;{        &#xA;  let user = args.user;&#xA;  let response = await User.update(user,&#xA;      {&#xA;        where: {&#xA;          [Op.or]: [{ email: user.email }, { id: user.id }, { username: user.username }, { lastname: user.lastname}]&#xA;        },&#xA;        //returning: true //not working... only for postgres db :(&#xA;      }).then(ret =&gt; {   &#xA;        console.log('ret', ret);         &#xA;        return ret[0];&#xA;      }).catch(error =&gt; {&#xA;        console.log('error', error)&#xA;      });&#xA;&#xA;  if (response &gt; 0) return user; //return record &#xA;&#xA;  //return response &gt; 0; //return true&#xA;}      &#xA;</code></pre>&#xA;&#xA;<p>}</p>&#xA;",3520042,,,,2017-11-21 14:01:07,"",,0,0,0,2017-11-21 14:01:07
47422865,1,47561987,,6,1732,"<p>I'm just starting to explorer GraphQL as an option for my analytic platform API layer.</p>&#xA;&#xA;<p>My UI is mainly built from tables and charts. most of the times the data represents some DB columns grouped by a dimension.</p>&#xA;&#xA;<p>I've found the following article <a href=""https://www.microsoft.com/developerblog/2017/09/28/data-independent-graphql-using-view-model-based-schemas/"" rel=""noreferrer"">https://www.microsoft.com/developerblog/2017/09/28/data-independent-graphql-using-view-model-based-schemas/</a> from Microsoft, describing their take on how suck GraphQL schemas should be designed (see below).</p>&#xA;&#xA;<pre><code>type Query {&#xA;  channels(source: String!, query:String!, appId:String!, apiKey:String!): [Channel]&#xA;  lineCharts(source: String!, query:String!, appId:String!, apiKey:String!, filterKey:String, filterValues:[String]): [LineChart]&#xA;  pieCharts(source: String!, query:String!, appId:String!, apiKey:String!): [PieChart]&#xA;  barCharts(source: String!, query:String!, appId:String!, apiKey:String!, filterKey:String, filterValues:[String]): [BarChart]&#xA;}&#xA;&#xA;type Channel {&#xA;  name: String&#xA;  id: Int&#xA;}&#xA;&#xA;type LineChart {&#xA;  id: String&#xA;  seriesData : [Series]&#xA;}&#xA;&#xA;type PieChart {&#xA;  id: String&#xA;  labels: [String]&#xA;  values: [Int]&#xA;}&#xA;&#xA;type BarChart {&#xA;  id: String&#xA;  seriesData : [Series]&#xA;}&#xA;&#xA;type Series {&#xA;  label: String&#xA;  x_values: [String]&#xA;  y_values: [Int]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It seems to me that this design is strict, forcing any new chart to be added to the root Query. How can the schema be more generic, without loosing GraphQL benefits?</p>&#xA;",1116068,,1421222,2017-12-01 14:56:51,2017-12-01 14:56:51,Designing a GraphQL schema for an analytics platform,<schema><analytics><graphql>,1,0,0,2017-11-21 21:15:46
47490228,2,,47142986,3,,"<p>Though it's not possible to craft queries dynamically in an unbounded way as you have sketched out in your second example, you can use the <code>@include</code> and <code>@skip</code> directives to make a fixed number of choices.</p>&#xA;&#xA;<h2>At the fragment level:</h2>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>query ComponentQuery(&#xA;  $companyId: ID!,&#xA;  $showUserDetails: Boolean!,&#xA;) {&#xA;  viewer {&#xA;    company(id: $companyId) {&#xA;      id&#xA;      name&#xA;      enabled&#xA;      users {&#xA;        id&#xA;        firstName&#xA;        lastName&#xA;        ... on User @include(if: $showUserDetails) {&#xA;          email&#xA;          jobTitle&#xA;          phone&#xA;          username&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<h2>At the field level:</h2>&#xA;&#xA;<pre class=""lang-graphql prettyprint-override""><code>query ComponentQuery(&#xA;  $companyId: ID!,&#xA;  $showUserContactDetails: Boolean!,&#xA;  $showUserRealName: Boolean!,&#xA;  $showUserRole: Boolean!,&#xA;  $showUserUnixname: Boolean!,&#xA;) {&#xA;  viewer {&#xA;    company(id: $companyId) {&#xA;      id&#xA;      name&#xA;      enabled&#xA;      users {&#xA;        id&#xA;        firstName @include(if: $showUserRealName)&#xA;        lastName @include(if: $showUserRealName)&#xA;        username @include(if: $showUserUnixname)&#xA;        email @include(if: $showUserContactDetails)&#xA;        jobTitle @include(if: $showUserRole)&#xA;        phone @include(if: $showUserContactDetails)&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",802047,,,,2017-11-25 20:28:26,"",,0,0,0,2017-11-25 20:28:26
47500652,1,47502890,,0,197,"<p>How to manage permissions in GraphQL?</p>&#xA;&#xA;<p>For example if someone makes query to retrieve posts, and user doesn't have permissions, what should be response in such case?</p>&#xA;&#xA;<p>How should be response when no permissions for subcollection? For example posts+comments, when user have permissions for posts but not for comments.</p>&#xA;",2845619,,,,2017-11-27 02:03:08,Permissions in GraphQL,<permissions><graphql>,1,0,0,2017-11-26 20:22:14
47626218,2,,45625548,4,,"<p>AWS AppSync (<a href=""https://aws.amazon.com/appsync/"" rel=""nofollow noreferrer"">https://aws.amazon.com/appsync/</a>) provides this with functionality known as ""Complex Objects"" where you can have a types for the S3 Object and the input:</p>&#xA;&#xA;<pre><code>type S3Object {&#xA;    bucket: String!&#xA;    key: String!&#xA;    region: String!&#xA;}&#xA;&#xA;input S3ObjectInput {&#xA;    bucket: String!&#xA;    key: String!&#xA;    region: String!&#xA;    localUri: String&#xA;    mimeType: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You could then do something like this to define this object as part of another type:</p>&#xA;&#xA;<pre><code>type UserProfile {&#xA;    id: ID!&#xA;    name: String&#xA;    file: S3Object&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And then specify a mutation to add it:</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;    addUser(id: ID! name: String file: S3ObjectInput): UserProfile!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Your client operations would need to specify the appropriate bucket, key (with file extension), region, etc.</p>&#xA;&#xA;<p>More here: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-react.html#complex-objects"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-react.html#complex-objects</a></p>&#xA;",2733539,,,,2017-12-04 03:47:52,"",,0,1,0,2017-12-04 03:47:52
47656197,1,47663261,,0,470,"<p>There is an entity list that has data from two sources. Dimensions like id, name, label, ... and metrics like games played, wins and so on.&#xA;Those are stored in different endpoints. I want to query filtered data from one source and having ids ask for data from another source at once, not by one entity by one of all entities? A primary set of the list can be queried from both or resources depending on sort options.</p>&#xA;",1942614,,1942614,2017-12-05 17:15:10,2017-12-05 21:52:55,Apollo GraphQL map list entities from multiple sources,<graphql><apollo><apollo-server>,1,5,0,2017-12-05 14:38:49
47712782,1,47714620,,0,1849,"<p>I have a GraphQL API with mixed public and private queries and mutation. I'm looking for a way to check whether an operation requires the user to be authenticated and also a permission checker, so that the user can only modify his own data.</p>&#xA;&#xA;<p>I noticed that the resolver function has a fourth argument, <code>info</code> that includes <code>path.key</code> which returns the name of the operation (documented <a href=""https://www.apollographql.com/docs/graphql-tools/resolvers.html#Resolver-function-signature"" rel=""nofollow noreferrer"">here</a>).</p>&#xA;&#xA;<p>My solution was to add a checker function inside every resolver, like so:</p>&#xA;&#xA;<pre><code>// modify user details&#xA;resolve: async (parent, args, { mongo: { User }, loggedUser }, info) =&gt; {&#xA;    // auth check&#xA;    authChecker(info.path.key, loggedUser, args.id);&#xA;&#xA;  // continue resolving&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>And in another file:</p>&#xA;&#xA;<pre><code>function authChecker(operationName, loggedUser, userId) {&#xA;  if (PUBLIC_OPERATIONS.includes(operationName) {&#xA;    // public operation&#xA;    return true;&#xA;  } else {&#xA;    // private operation&#xA;    if (args.id) {&#xA;      // private operation that requires a permission check&#xA;      ...&#xA;    } else {&#xA;      // private operation that only requires user to be logged in&#xA;      ...&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The function either returns true or throws an error if conditions are not met.</p>&#xA;&#xA;<p>I was wondering if this was an ok solution or if there was a way that this could be done with a middleware somehow so that I wouldn't have to repeat the code in every resolver. The problem is that I wouldn't have access to the operation name if I'd use a middleware. Any suggestions?</p>&#xA;",161619,,,,2017-12-08 12:39:59,GraphQL resolver middleware for auth check,<javascript><graphql><graphql-js><express-graphql>,1,1,0,2017-12-08 10:48:37
47837422,2,,47835022,3,,"<p>AWS AppSync will handle this for you and has an Apollo plug in:</p>&#xA;&#xA;<pre><code>yarn add aws-appsync&#xA;yarn add aws-appsync-react&#xA;</code></pre>&#xA;&#xA;<p>This will perform offline caching and automatic synchronization as well as conflict resolution. You can also control Optimistic UI using the AppSync plugin and Apollo: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-react.html#offline-settings"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-react.html#offline-settings</a></p>&#xA;",2733539,,,,2017-12-15 17:46:56,"",,0,2,0,2017-12-15 17:46:56
47865555,1,,,0,1570,"<p>Currently we are using graphql/graphql-ruby library. I have wrote few queries and mutations as per our requirement. </p>&#xA;&#xA;<p>I have the below use case, where i am not sure how to implement it,</p>&#xA;&#xA;<ol>&#xA;<li><p>I have already an query/endpoint named <code>allManagers</code> which return all manager details.</p></li>&#xA;<li><p>Today i have got requirement to implement another query to return all the managers based on the <code>region</code> filter.</p></li>&#xA;</ol>&#xA;&#xA;<p>I have <strong>2 options to handle this scenario</strong>.</p>&#xA;&#xA;<ol>&#xA;<li><p>Create an optional argument for region , and inside the query i need to check if the region is passed then filter based on region.</p></li>&#xA;<li><p>Use something like <a href=""https://www.howtographql.com/graphql-ruby/7-filtering/"" rel=""nofollow noreferrer"">https://www.howtographql.com/graphql-ruby/7-filtering/</a> . </p></li>&#xA;</ol>&#xA;&#xA;<p>Which approach is the correct one ?</p>&#xA;",1337630,,,,2018-01-07 20:31:00,How to write filtering query with graphql?,<ruby-on-rails><ruby><graphql><graphql-js><graphql-ruby>,1,0,0,2017-12-18 09:38:55
47944468,2,,47294038,2,,"<p>Are you using the Graphcool framework?</p>&#xA;&#xA;<p>If you need to setup permissions in the graphcool.yml. I would include the following:</p>&#xA;&#xA;<p><strong>graphcool.yml</strong></p>&#xA;&#xA;<pre><code>- operation: User.create&#xA;  authenticated: true&#xA;  query: permissions/User.graphql:adminRole&#xA;- operation: User.read&#xA;  authenticated: true&#xA;  query: permissions/User.graphql:adminRole&#xA;- operation: User.update&#xA;  authenticated: true&#xA;  query: permissions/User.graphql:adminRole&#xA;- operation: User.delete&#xA;  authenticated: true&#xA;  query: permissions/User.graphql:adminRole&#xA;&#xA;- operation: User.read&#xA;  authenticated: true&#xA;  query: permissions/User.graphql:user&#xA;  fields:&#xA;  - id&#xA;  - name&#xA;  - role&#xA;  - createdAt&#xA;  - updatedAt&#xA;  - email&#xA;  - company&#xA;- operation: User.update&#xA;  authenticated: true&#xA;  query: permissions/User.graphql:user&#xA;  fields:&#xA;  - name&#xA;  - company&#xA;</code></pre>&#xA;&#xA;<p><strong>User.graphql</strong></p>&#xA;&#xA;<pre><code>query user($node_id: ID, $user_id: ID!) {&#xA;  SomeUserExists(filter: {AND: [{id: $user_id}, {id: $node_id}]})&#xA;}&#xA;&#xA;query adminRole($user_id: ID!) {&#xA;  SomeUserExists(filter: {id: $user_id, role: ADMIN})&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This way the user can only update their name and company. Then the ADMIN user can do read and edit everyone. Only ADMIN users can create or update new users.</p>&#xA;&#xA;<p>Then you're probably asking how do you create new users?&#xA;I would use the FaaS code from Graphcool templates for email-password authentication found here:</p>&#xA;&#xA;<p><a href=""https://github.com/graphcool/templates/tree/master/auth/email-password"" rel=""nofollow noreferrer"">https://github.com/graphcool/templates/tree/master/auth/email-password</a></p>&#xA;&#xA;<p>The <code>signup.ts</code> file should you how a new user can signup and then the admin creates a new user for you. Inside the signup function you can default the UserRole to what ever you want.</p>&#xA;&#xA;<p><a href=""https://github.com/graphcool/templates/blob/master/auth/email-password/src/signup.ts"" rel=""nofollow noreferrer"">https://github.com/graphcool/templates/blob/master/auth/email-password/src/signup.ts</a></p>&#xA;",8011705,,,,2017-12-22 16:19:23,"",,0,0,0,2017-12-22 16:19:23
48003906,2,,48003767,19,,<p>In simple words the query is SELECT statement and mutation is INSERT Operation.</p>&#xA;&#xA;<p>Query in graphql is used to fetch data while mutation is used for INSERT/UPDATE/DELETE operation.</p>&#xA;,5254189,,3605712,2017-12-28 10:26:34,2017-12-28 10:26:34,"",,0,6,0,2017-12-28 08:10:22
48006452,1,48031198,,-2,4458,"<p>I am using node js, I am trying to upload a CSV file to the Amazon S3 Bucket and it should give me the url of csv in response.&#xA;I have the JSON data in below format :- </p>&#xA;&#xA;<pre><code>[""a"",""b"",""c"",""d""]&#xA;</code></pre>&#xA;&#xA;<p>How can I ahieve the same ?</p>&#xA;",8295574,,3397757,2018-03-15 09:41:04,2019-03-07 20:49:38,Uploading a CSV file to S3 Bucket from JSON data,<javascript><mongodb><amazon-s3><amazon-ec2><graphql>,2,3,0,2017-12-28 11:16:03
48026357,2,,48006452,1,,"<p>Since you're using Javascript you might look at AWS Amplify's Storage component: <a href=""https://github.com/aws/aws-amplify/blob/master/media/storage_guide.md"" rel=""nofollow noreferrer"">https://github.com/aws/aws-amplify/blob/master/media/storage_guide.md</a></p>&#xA;&#xA;<p>For your use case it would be something like:</p>&#xA;&#xA;<pre><code>Storage.put('userfile.csv', 'User XXX CSV uploading')&#xA;    .then (result =&gt; console.log(result))&#xA;    .catch(err =&gt; console.log(err));&#xA;</code></pre>&#xA;",2733539,,,,2017-12-29 17:44:06,"",,0,1,0,2017-12-29 17:44:06
48122722,1,48130222,,2,745,"<p>GitHub API v4 does not show the results for companies when <code>user</code> query is used. If I use <code>repositoryOwner</code> instead, it returns results for both users and companies. However, <code>user</code> query can return more detailed information such as biography, website, location etc. which is not included in <code>repositoryOwner</code> query.</p>&#xA;&#xA;<p>Is there an alternative option covering all type of users?</p>&#xA;",1449456,,2614364,2018-01-06 17:59:44,2018-01-06 17:59:44,GitHub v4 API query for both organizations and users,<github><graphql><github-api><github-graphql>,1,0,0,2018-01-05 23:29:00
48134104,1,,,1,174,"<p>I am trying to save a user id to a new biz. I keep getting a 400 error and can not figure out why. I am using django for the backend with graphql and apollo client for the front with vue js. I am able to get the owner id but not able to save it for some reason. </p>&#xA;&#xA;<h1>Create Biz Mutation Apollo</h1>&#xA;&#xA;<pre><code>export const CREATE_BIZ_MUTATION = gql`&#xA;&#xA;    mutation CreateBizMutation($name: String!, $owner: ID!) {&#xA;      createBiz(name: $name, ownerId: $owner) {&#xA;        name&#xA;&#xA;      }&#xA;    }`&#xA;</code></pre>&#xA;&#xA;<h1>Create Biz mutation Django</h1>&#xA;&#xA;<pre><code>class CreateBiz(graphene.Mutation):&#xA;    id = graphene.Int()&#xA;    name = graphene.String()&#xA;    code = graphene.String()&#xA;    owner = graphene.Field(UserType)&#xA;&#xA;&#xA;    class Arguments:&#xA;        name = graphene.String()&#xA;&#xA;&#xA;    def mutate(self, info, name):&#xA;        user = get_user(info) or None&#xA;        code = ''.join(random.SystemRandom().choice(string.ascii_uppercase + string.digits + string.ascii_lowercase) for _ in range(6))&#xA;        biz = Biz(&#xA;            code = code,&#xA;            name = name,&#xA;            owner = user&#xA;        )&#xA;&#xA;        biz.save()&#xA;&#xA;        return CreateBiz(&#xA;            id= biz.id,&#xA;            name = biz.name,&#xA;            code = biz.code,&#xA;            owner = biz.owner&#xA;        )&#xA;</code></pre>&#xA;&#xA;<h1>Create Biz Component</h1>&#xA;&#xA;<pre><code>createBiz () {&#xA;        const owner = localStorage.getItem(DJANGO_USER_ID)&#xA;        if (!owner) {&#xA;            console.error('No user logged in')&#xA;            return&#xA;        }&#xA;        const { name } = this.$data&#xA;        this.$apollo.mutate({&#xA;            mutation: CREATE_BIZ_MUTATION,&#xA;            variables: {&#xA;                name,&#xA;                owner&#xA;            }&#xA;        }).catch((error) =&gt; {&#xA;                    console.log(error)&#xA;                    })&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;",6317608,,,,2018-01-07 03:34:30,Saving user object to post Graphql/Apollo Vue,<django><vue.js><graphql><apollo><apollo-client>,0,0,0,2018-01-07 03:34:30
48146283,1,,,0,244,<p>Let's say I have <code>users</code> and users can see other users but there are also <code>admins</code> and they can see some properties that regular users not supposed to see.</p>&#xA;&#xA;<p>How do I implement it in GraphQL?</p>&#xA;&#xA;<p>Should I create different root calls <code>users</code> for regular users and <code>usersForAdmins</code> for admins and restrict access to that root call?</p>&#xA;&#xA;<p>What is the right way to do it?</p>&#xA;,916497,,107625,2018-01-08 08:03:08,2018-01-08 08:53:10,Limiting access in GraphQL,<graphql>,1,0,0,2018-01-08 08:01:19
48146868,2,,48146283,0,,<p>You can check users privileges in resolvers and  return different data</p>&#xA;,1375027,,,,2018-01-08 08:53:10,"",,0,8,0,2018-01-08 08:53:10
48159697,1,,,2,156,"<p>I am trying to save a user id to a new biz. I keep getting a 400 error and can not figure out why. I am using django for the backend with graphql and apollo client for the front with vue js. On my request the user ID is sent but for some reason throws a 400 bad request error. </p>&#xA;&#xA;<h1>Create Biz Mutation Apollo</h1>&#xA;&#xA;<pre><code>export const CREATE_BIZ_MUTATION = gql`&#xA;&#xA;    mutation CreateBizMutation($name: String!, $owner: ID!) {&#xA;      createBiz(name: $name, ownerId: $owner) {&#xA;        name&#xA;&#xA;      }&#xA;    }`&#xA;</code></pre>&#xA;&#xA;<h1>Create Biz mutation Django</h1>&#xA;&#xA;<pre><code>class CreateBiz(graphene.Mutation):&#xA;    id = graphene.Int()&#xA;    name = graphene.String()&#xA;    code = graphene.String()&#xA;    owner = graphene.Field(UserType)&#xA;&#xA;&#xA;    class Arguments:&#xA;        name = graphene.String()&#xA;&#xA;&#xA;    def mutate(self, info, name):&#xA;        user = get_user(info) or None&#xA;        code = ''.join(random.SystemRandom().choice(string.ascii_uppercase + string.digits + string.ascii_lowercase) for _ in range(6))&#xA;        biz = Biz(&#xA;            code = code,&#xA;            name = name,&#xA;            owner = user&#xA;        )&#xA;&#xA;        biz.save()&#xA;&#xA;        return CreateBiz(&#xA;            id= biz.id,&#xA;            name = biz.name,&#xA;            code = biz.code,&#xA;            owner = biz.owner&#xA;        )&#xA;</code></pre>&#xA;&#xA;<h1>Create Biz Component</h1>&#xA;&#xA;<pre><code>createBiz () {&#xA;        const owner = localStorage.getItem(DJANGO_USER_ID)&#xA;        if (!owner) {&#xA;            console.error('No user logged in')&#xA;            return&#xA;        }&#xA;        const { name } = this.$data&#xA;        this.$apollo.mutate({&#xA;            mutation: CREATE_BIZ_MUTATION,&#xA;            variables: {&#xA;                name,&#xA;                owner&#xA;            }&#xA;        }).catch((error) =&gt; {&#xA;                    console.log(error)&#xA;                    })&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;",6317608,,,,2018-01-08 23:52:43,Save user Graphql Apollo Client,<javascript><django><graphql><apollo><graphene-python>,0,1,0,2018-01-08 23:52:43
48166281,1,48168129,,1,4064,"<p>I've been starting working with <code>GraphQL server</code> and <code>Apollo client</code>. The code is written in <code>Reactjs</code>. Now I want to get data from GraphQL server using any queries, and show data to the table in the UI. I use npm <code>react-table</code> for table. </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/2Qpp3.png"" rel=""nofollow noreferrer"">The table could look like this:</a></p>&#xA;&#xA;<p>I can easily get and show data if the query response has no array. For example, I have the query input string below:</p>&#xA;&#xA;<pre><code>{&#xA;  account {&#xA;    firstName&#xA;    lastName&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And query result with no array</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""account"": {&#xA;      ""firstName"": ""Marlen"",&#xA;      ""lastName"": ""Marquardt"",&#xA;      ""id"": 2&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In ReactTable component, I just fetch the data using <code>data.account.firstName</code></p>&#xA;&#xA;<pre><code>&lt;ReactTable&#xA;  data={[&#xA;    {&#xA;      firstName: data.account.firstName,&#xA;      lastName: data.account.lastName,&#xA;      id: data.account.id,&#xA;    }&#xA;  ]}&#xA;  columns={columns}&#xA;/&gt;&#xA;</code></pre>&#xA;&#xA;<p>However, if query result has array I don't know how to fetch the data. Please take a look the picture&#xA;<a href=""https://i.stack.imgur.com/gRbfG.png"" rel=""nofollow noreferrer"">query result with array</a></p>&#xA;&#xA;<p>So how can I show all 5 toy's <code>title</code> to table ? &#xA;This is my old code:</p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import s from './Test.css';&#xA;import { ApolloClient } from 'apollo-client';&#xA;import { HttpLink } from 'apollo-link-http';&#xA;import { InMemoryCache } from 'apollo-cache-inmemory';&#xA;import fetch from 'node-fetch';&#xA;import { graphql } from 'react-apollo';&#xA;import gql from 'graphql-tag';&#xA;import ReactTable from 'react-table'&#xA;import 'react-table/react-table.css';&#xA;&#xA;const localURL = 'http://localhost:3000/graphql';&#xA;const client = new ApolloClient({&#xA;  link: new HttpLink({ uri: localURL, fetch }),&#xA;  cache: new InMemoryCache()&#xA;});&#xA;const columns = [&#xA;  {&#xA;    Header: ""ID"",&#xA;    accessor: ""id""&#xA;  },&#xA;  {&#xA;    Header: ""First Name"",&#xA;    accessor: ""firstName""&#xA;  },&#xA;  {&#xA;    Header: ""Last Name"",&#xA;    accessor: ""lastName""&#xA;  }&#xA;]&#xA;&#xA;class Table extends React.Component {&#xA;  render() {&#xA;    let { data } = this.props;&#xA;    return (&#xA;      &lt;div&gt;&#xA;        &lt;h2&gt; ADMIN &lt;/h2&gt;&#xA;        &lt;ReactTable&#xA;          data={[&#xA;            {&#xA;              firstName: data.account.firstName,&#xA;              lastName: data.account.lastName,&#xA;              id: data.account.id,&#xA;            }&#xA;          ]}&#xA;          columns={columns}&#xA;          defaultPageSize={10}&#xA;        /&gt;&#xA;      &lt;/div&gt;&#xA;    );&#xA;  }&#xA;}&#xA;&#xA;const queryAccountList = gql`&#xA;  query {&#xA;    account{&#xA;      firstName&#xA;      lastName&#xA;      id&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;&#xA;const AccountListWithData = graphql(queryAccountList)(Table);&#xA;&#xA;export default AccountListWithData;&#xA;</code></pre>&#xA;",7216499,,7216499,2018-01-09 16:31:49,2018-01-09 16:31:49,How to show data from GraphQL server to npm react-table?,<reactjs><graphql><react-apollo><react-table>,1,0,0,2018-01-09 10:37:03
48243916,1,,,2,223,"<p>I have a rest api generated from cloudformation template. This rest method takes one query parameter ""query"" as input. This parameter holds graphql query so req uri look like this:</p>&#xA;&#xA;<p>/ScheduleResource?query={getInfoByFoo(foo:""bar"")} </p>&#xA;&#xA;<p>If i test it on sam local it works but when I deploy it to api gateway this api returns status 400 with empty body. </p>&#xA;&#xA;<p>It looks like this problem <a href=""https://nicholasjackson.io/2016/12/13/using-graphql-with-aws-lambda/"" rel=""nofollow noreferrer"">https://nicholasjackson.io/2016/12/13/using-graphql-with-aws-lambda/</a> that in integration request stage of http call api gateway is trying to parse the query as json and fails (of course), but im afraid that solution works only on POST methods with body.</p>&#xA;&#xA;<p>How can I solve this and pass query to lambda fcn as string parameter?</p>&#xA;&#xA;<p>This is my cloudformation template:</p>&#xA;&#xA;<pre><code>AWSTemplateFormatVersion: '2010-09-09'&#xA;Transform: AWS::Serverless-2016-10-31&#xA;Description: Outputs the time&#xA;Resources:&#xA;  ScheduleFunction:&#xA;    Type: AWS::Serverless::Function&#xA;    Properties:&#xA;      Handler: dist/index.handler&#xA;      Runtime: nodejs6.10&#xA;      CodeUri: ./&#xA;      Events:&#xA;        MyTimeApi:&#xA;          Type: Api&#xA;          Properties:&#xA;            Path: /ScheduleResource&#xA;            Method: GET&#xA;</code></pre>&#xA;",3143992,,,,2018-01-13 20:16:28,How to disable parsing of query parameter in http request in aws api gateway?,<aws-lambda><graphql><aws-api-gateway>,0,1,0,2018-01-13 20:16:28
48268066,2,,48265028,0,,"<p>I think what you want is a <code>@connection</code> directive. This will allow you to cache your entities query without the limit/offset arguments.</p>&#xA;&#xA;<pre><code>query EntityList($limit: Int!, $offset: Int!) {&#xA;  entities (&#xA;    limit: $limit,&#xA;    offset: $offset&#xA;  ) @connection(key: ""EntityList_entities"") {&#xA;    __typename&#xA;    EntityId&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Making a successive call with the same connection should return all the entities from that key.</p>&#xA;&#xA;<pre><code>query LocalEntityList {&#xA;  entities @connection(key: ""EntityList_entities"") {&#xA;    EntityId&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2774176,,,,2018-01-15 17:36:12,"",,0,1,0,2018-01-15 17:36:12
48291161,1,48301517,,1,730,"<p>I'm curious if it's possible to define a case class's field as deferred while still using the <code>deriveObjectType</code> macro to define everything else.</p>&#xA;&#xA;<p>Here's an example. Dashboards contain a sequence of tabs:</p>&#xA;&#xA;<pre><code>case class Tab(id: Long, dashboardId: Long, name: String, order: Long)&#xA;&#xA;case class Dashboard(id: Long, name: String, tabs: Seq[Tab])&#xA;</code></pre>&#xA;&#xA;<p>I'm deferring resolution of the <code>Dashboard.tabs</code> field using a <code>Fetcher</code>, AND I'd like to continue using the <code>deriveObjectType</code> macro (if possible). So here's how I've defined my <code>ObjectType</code>s:</p>&#xA;&#xA;<pre><code>val TabType = deriveObjectType[Unit, Dashboard]()&#xA;&#xA;val DashboardType = deriveObjectType[Unit, Dashboard](&#xA;  AddFields(&#xA;    fields =&#xA;      Field(&#xA;        name = ""tabs"",&#xA;        fieldType = ListType(TabType),&#xA;        resolve = ctx =&gt; {&#xA;          TabsFetcher.fetcher.defer(ctx.value.id)&#xA;        }&#xA;      )&#xA;  )&#xA;)&#xA;</code></pre>&#xA;&#xA;<p>But, when I run the code, I get the following error:</p>&#xA;&#xA;<pre><code>sangria.schema.NonUniqueFieldsError: All fields within 'Dashboard' type should have unique names! Non-unique fields: 'tabs'.&#xA;</code></pre>&#xA;&#xA;<p>If I remove the <code>tabs</code> field from the <code>Dashboard</code> case class the error goes away, but I lose some of the benefit of using a case class (especially in unit tests). And if I avoid the use of the <code>deriveObjectType</code> macro (and define the <code>Dashboard</code>'s <code>ObjectType</code> manually), then I lose the benefits of the macro (less boilerplate).</p>&#xA;&#xA;<p>So, I'm curious if there's a better way, or another way, around this issue short of defining the <code>DashboardType</code> without the use of the macro or removing the <code>tags</code> field from the <code>Dashboard</code> case class.</p>&#xA;&#xA;<p>(I was hoping that there might be some sort of <code>@GraphQLDeferred</code> annotation that I could apply to the <code>Dashboard.tabs</code> field or something similar???)</p>&#xA;",1339939,,,,2018-01-17 12:45:41,"Sangria GraphQL: How to mix deferred fields, deriveObjectType, and case classes",<scala><graphql><sangria>,1,0,0,2018-01-16 22:57:14
48335065,1,,,0,402,<p>How can i split my serverless graphql endpoint which runs in one lambda function into multiple micro lambda functions for scalability?&#xA;is it need to have multiple graphql end points ? or need to have only one graphql endpoint and resolvers split into seperate lambda functions ? what is the best architecture ?</p>&#xA;,5247621,,5247621,2018-01-19 06:24:27,2018-02-05 18:26:14,Serverless graphql split into micro services,<amazon-web-services><lambda><graphql><serverless>,1,0,0,2018-01-19 06:06:32
48337367,1,,,2,1230,"<p>I'm having an issue with React/Apollo/AppSync with mutations triggering twice (or more). I have a React app that has an update mutation triggered by the usual UI button onClick.</p>&#xA;&#xA;<pre><code>&lt;button className={`btn btn-sm`} onClick={(event) =&gt; { that.toggleSubscription(event, subscriptionid, serviceid, status); }}&gt;&#xA;    &lt;i className={`fas ${icon} fa-fw`} /&gt;&#xA;    {title}&#xA;&lt;/button&gt;&#xA;</code></pre>&#xA;&#xA;<p>The toggleSubscription function looks like this:</p>&#xA;&#xA;<pre><code>toggleSubscription = async (event, subscriptionid, serviceid, currentStatus) =&gt; {&#xA;    event.preventDefault();&#xA;    event.stopPropagation();&#xA;&#xA;    if (currentStatus === ""mandatory"") return;&#xA;    console.log(serviceid);&#xA;    await this.props.toggleSubscription(this.props.match.params.id, serviceid);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the graphql mutation in question (although this seems to happen on all mutations). This is on the export statement:</p>&#xA;&#xA;<pre><code>export default compose(&#xA;    graphql(&#xA;        MutationToggleSubscription,&#xA;        {&#xA;            props: ({ ownProps, mutate }) =&gt; ({&#xA;                toggleSubscription: (personid, serviceid) =&gt; mutate({&#xA;                    variables: { personid: personid, serviceid: serviceid }&#xA;                })&#xA;            }),&#xA;        }&#xA;    ),&#xA;...&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Gk00o.png"" rel=""nofollow noreferrer"">Shows multiple and simultaneous calls to the GraphQL server</a>&#xA;The calls are <strong>almost</strong> identical, but there are some additional stacktrace calls:&#xA;<a href=""https://i.stack.imgur.com/twB8s.png"" rel=""nofollow noreferrer"">The two requests are almost identical. The calls highlighted in Red seem to be the difference between the two</a></p>&#xA;&#xA;<p>Any help would be hugely appreciated!</p>&#xA;",485856,,,,2020-07-27 17:44:43,Reactjs/Apollo/AppSync Mutation triggered twice,<reactjs><graphql><react-apollo><apollo-client><aws-appsync>,2,1,0,2018-01-19 09:00:16
48351434,1,,,2,3301,"<p>Is there any way of connecting appsync to dynamodb with option to put multiple items at once? I'm asking about dynamodb reuqest mapping.</p>&#xA;&#xA;<p>Let's say we have saveVotes mutation</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;    saveVotes(votes: [VoteInput]): [Vote]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How should I design dynamo request template to get each vote saved as separate object in the dynamodb? Each VoteInput has ID. I'm sending 5 VoteInput, and I want to have 5 separate object, with separate ID in the dynamodb.&#xA;In the AWS docs there are examples just for single putItem which is not enough for me&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-dynamodb.html#aws-appsync-resolver-mapping-template-reference-dynamodb-putitem"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-dynamodb.html#aws-appsync-resolver-mapping-template-reference-dynamodb-putitem</a></p>&#xA;",2925210,,,,2018-04-24 17:51:32,AWS Appsync - add multiple items,<amazon-web-services><graphql><aws-appsync>,2,2,0,2018-01-20 00:34:04
48369339,1,,,0,542,"<p>I am writing a serverless app using aws lambdas. we are using apollo graphql for single endpoint. graphql endpoint run in one single lamda, how can i split graphql query mutation resolvers into seperate lamda functions, like in graphcool and aws app-sync. </p>&#xA;",5247621,,5247621,2018-02-02 12:45:17,2019-12-05 00:20:28,Graphql query resolvers split into seperate lamdas,<aws-lambda><graphql><serverless>,2,0,0,2018-01-21 16:58:11
48372674,2,,48346700,1,,"<p>There's three things that you'll need to do:</p>&#xA;&#xA;<p>1.) If you haven't already, modify the schema on your server so that your query accepts the id as an input, for example:</p>&#xA;&#xA;<pre><code>type Query {&#xA;  #other queries&#xA;  group(id: ID!): Group&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>2.) Modify your resolver so that it handles the passed-in id. Assuming you're using <code>graphql-tools</code>:</p>&#xA;&#xA;<pre><code>group(root, { id }) {&#xA;  return Groups.findOne(id); // did you mean something like findOne({id}) ?&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>3.) Modify your client-side code. Typically, you'll make the id a prop you pass in to your component, and then use that as a variable in your request.</p>&#xA;&#xA;<pre><code>const groupQuery = gql`&#xA;    query Group($id: ID!) {&#xA;        group(id: $id) {&#xA;            _id&#xA;            name&#xA;        }&#xA;    }&#xA;`;&#xA;&#xA;// assuming that the component prop is called groupId&#xA;export default graphql(groupQuery, {&#xA;    options: ({ groupId }) =&gt; ({&#xA;      variables: { id: groupId },&#xA;    }),&#xA;})(GroupPage);&#xA;</code></pre>&#xA;&#xA;<p>Instead of an object, options can be a function, in which case it's passed the component's props as its first parameter. You can then use those props to define the variables your query will use. You can read more about using variables with Apollo client <a href=""https://www.apollographql.com/docs/react/basics/queries.html#graphql-options"" rel=""nofollow noreferrer"">here</a> and <a href=""https://www.apollographql.com/docs/react/basics/queries.html#graphql-config-options-variables"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;",6024220,,,,2018-01-21 23:07:34,"",,0,4,0,2018-01-21 23:07:34
48392074,1,48392447,,2,5797,"<p>I'm currently working on a GraphQL/Node/Express server that retrieves data from another API. I have absolutely no access to the other API except for the data I receive back.</p>&#xA;&#xA;<p>My problem is that the response is XML and there are certain fields that should be returned as arrays but instead are being returned as objects (or dictionaries) if the array has only one item in it.</p>&#xA;&#xA;<p><a href=""https://tapadoo.com/2011/regular-problem-with-xml-to-json-converters/"" rel=""nofollow noreferrer"">This blog post</a> explains the issue in more detail.</p>&#xA;&#xA;<p>Is there a way in GraphQL to design the schema in such a way that if it receives an object for a property that is defined as an array, that it places the object into an array?</p>&#xA;&#xA;<p><strong>Examples</strong></p>&#xA;&#xA;<p><em>Current behaviour</em></p>&#xA;&#xA;<pre class=""lang-xml prettyprint-override""><code>&lt;team&gt;&#xA;  &lt;employee&gt;&#xA;    &lt;name&gt;Joe&lt;/name&gt;&#xA;    &lt;surname&gt;Bloggs&lt;/surname&gt;&#xA;  &lt;/employee&gt;&#xA;  &lt;employee&gt;&#xA;    &lt;name&gt;Jane&lt;/name&gt;&#xA;    &lt;surname&gt;Doe&lt;/surname&gt;&#xA;  &lt;/employee&gt;&#xA;&lt;/team&gt;&#xA;</code></pre>&#xA;&#xA;<p>The above XML will convert to JSON as below</p>&#xA;&#xA;<pre><code>{&#xA;  team:{&#xA;    employee:[&#xA;      {&#xA;        name:'Joe',&#xA;        surname:'Bloggs'&#xA;      },&#xA;      {&#xA;        name:'Jane',&#xA;        surname:'Doe'&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But if there is only one employee</p>&#xA;&#xA;<pre class=""lang-xml prettyprint-override""><code>&lt;team&gt;&#xA;  &lt;employee&gt;&#xA;    &lt;name&gt;Joe&lt;/name&gt;&#xA;    &lt;surname&gt;Bloggs&lt;/surname&gt;&#xA;  &lt;/employee&gt;&#xA;&lt;/team&gt;&#xA;</code></pre>&#xA;&#xA;<p>The above XML will convert to JSON as below, where <code>employee</code> becomes an object rather than an array</p>&#xA;&#xA;<pre><code>{&#xA;  team:{&#xA;    employee:{&#xA;      name:'Joe',&#xA;      surname:'Bloggs'&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3936685,,,,2020-06-21 19:36:24,Can GraphQL handle XML responses where single item arrays are converted to dictionaries?,<json><xml><graphql><apollo-server>,1,0,0,2018-01-22 23:50:51
48396123,1,48401378,,0,1839,"<p>If an existing service supporting the following GraphQL queries respectively:</p>&#xA;&#xA;<p><strong>query to a person's bank account:</strong></p>&#xA;&#xA;<pre><code>query {&#xA;    balance(id: ""1"") {&#xA;      checking&#xA;      saving&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>result</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""balance"": {&#xA;      ""checking"": ""800"",&#xA;      ""saving"": ""3000""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>query to a person's pending order:</strong></p>&#xA;&#xA;<pre><code>query {&#xA;    pending_order(id: ""1"") {&#xA;      books&#xA;      tickets&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>result</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""pending_order"": {&#xA;      ""books"": ""5"",&#xA;      ""tickets"": ""2""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The source code achieving the above functionality is something like this:</p>&#xA;&#xA;<pre><code>module.exports = new GraphQLObjectType({&#xA;  name: 'Query',&#xA;  description: 'Queries individual fields by ID',&#xA;&#xA;  fields: () =&gt; ({&#xA;    balance: {&#xA;      type: BalanceType,&#xA;      description: 'Get balance',&#xA;      args: {&#xA;        id: {&#xA;          description: 'id of the person',&#xA;          type: GraphQLString&#xA;        }&#xA;      },&#xA;      resolve: (root, { id }) =&gt; getBalance(id)&#xA;    },&#xA;    pending_order: {&#xA;      type: OrderType,&#xA;      description: 'Get the pending orders',&#xA;      args: {&#xA;        id: {&#xA;          description: 'id of the person',&#xA;          type: GraphQLString&#xA;        }&#xA;      },&#xA;      resolve: (root, { id }) =&gt; getPendingOrders(id)&#xA;    }&#xA;  })&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Now, I want to make my GraphQL service schema support person level schema, i.e.,</p>&#xA;&#xA;<pre><code>query {&#xA;    person (id: ""1"") {&#xA;      balance&#xA;      pending_order&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and get the following results:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;     ""balance"": {&#xA;       ""checking"": ""800"",&#xA;       ""saving"": ""3000""&#xA;    }&#xA;    ""pending_order"": {&#xA;      ""books"": ""5"",&#xA;      ""tickets"": ""2""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can I re-structure the schema, and how can I reuse the existing query service?</p>&#xA;&#xA;<p><strong>EDIT (after reading Daniel Rearden's answer)</strong>:</p>&#xA;&#xA;<p>Can we optimize the GraphQL service so that we make service call based upon the query? i.e., if the incoming query is </p>&#xA;&#xA;<pre><code>query {&#xA;    person (id: ""1"") {&#xA;      pending_order&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>my actually query becomes</p>&#xA;&#xA;<pre><code>person: {&#xA;  ...&#xA;  resolve: (root, { id }) =&gt; Promise.all([&#xA;    getBalance(id)&#xA;  ]) =&gt; ({ balance})&#xA;}&#xA;</code></pre>&#xA;",152859,,152859,2018-01-23 14:40:03,2018-01-23 19:38:09,How can GraphQL enable an ID based query at sub fields level?,<graphql><graphql-js><express-graphql>,1,0,0,2018-01-23 07:17:19
48403968,1,48405626,,0,1256,"<p>Im using Apollo 2. With the GraphiQL interface I can run a query which returns all groups fine. However when I try to pass a name to find just 1 group it doenst work. </p>&#xA;&#xA;<p>Schema</p>&#xA;&#xA;<pre><code>type Query {&#xA;    hi: String&#xA;    groups: [Group]&#xA;    group(name: String): Group&#xA;}&#xA;&#xA;type Group {&#xA;    name: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Resolvers:</p>&#xA;&#xA;<pre><code>Query: {&#xA;        hi() {&#xA;            return 'howdy';&#xA;        },&#xA;        groups() {&#xA;            return Groups.find().fetch();&#xA;        },&#xA;        group(one, two, three) {&#xA;            console.log('group resolver called');&#xA;            console.log(one, two, three);&#xA;            //return Groups.findOne(two.name);&#xA;        },&#xA;    },&#xA;</code></pre>&#xA;&#xA;<p>This is my GraphiQL groups query which works fine: </p>&#xA;&#xA;<pre><code>{&#xA;  groups {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But my group query returns an error: </p>&#xA;&#xA;<pre><code>{&#xA;  group(name: ""some name"") {&#xA;    name&#xA;  }&#xA;}&#xA;&#xA;{&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Unknown argument \""name\"" on field \""group\"" of type \""Query\""."",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 2,&#xA;          ""column"": 9&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>UPDATE - This is my full file: </p>&#xA;&#xA;<pre><code>import { createApolloServer } from 'meteor/apollo';&#xA;import { makeExecutableSchema } from 'graphql-tools';&#xA;import merge from 'lodash/merge';&#xA;&#xA;import GroupsSchema from '../../api/groups/Groups.graphql';&#xA;import GroupsResolvers from '../../api/groups/resolvers';&#xA;&#xA;const typeDefs = [GroupsSchema];&#xA;const resolvers = merge(GroupsResolvers);&#xA;&#xA;const schema = makeExecutableSchema({&#xA;    typeDefs,&#xA;    resolvers,&#xA;});&#xA;&#xA;createApolloServer({ schema });&#xA;</code></pre>&#xA;&#xA;<p>In resolvers.js</p>&#xA;&#xA;<pre><code>import Groups from './groups';&#xA;&#xA;export default {&#xA;    Query: {&#xA;        hi() {&#xA;            return 'howdy';&#xA;        },&#xA;        groups() {&#xA;            return [{ name: '1', test: 'test 1' }, { name: '2', test: 'test 2' }];&#xA;            // return Groups.find().fetch();&#xA;        },&#xA;        group(one, two, three) {&#xA;            console.log('group resolver called');&#xA;            console.log(one, two, three);&#xA;            // return Groups.findOne('Apon9HKE9MeZqeXsZ');&#xA;        },&#xA;    },&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>In Groups.graphql</p>&#xA;&#xA;<pre><code>type Query {&#xA;    hi: String&#xA;    groups: [Group]&#xA;    group(name: String): Group&#xA;}&#xA;&#xA;type Group {&#xA;    name: String&#xA;}&#xA;</code></pre>&#xA;",467875,,467875,2018-01-23 15:16:39,2018-01-23 15:44:18,Unknown argument in GraphiQL trying to pass an ID from the client to the GraphQL server?,<graphql><apollo-client>,1,6,0,2018-01-23 14:20:56
48415936,1,48435914,,1,641,"<p>I am making graphql api server with tinkerpop3 graph database (aws neptune)<br>&#xA;for example, I want implementation of graphql below </p>&#xA;&#xA;<pre><code>{&#xA;    post {&#xA;        id&#xA;        title,&#xA;        comments {&#xA;            id&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and I make gremlin query like below</p>&#xA;&#xA;<pre><code>g.V().hasLabel('post').match(&#xA;    __.id().as('id'),&#xA;    __.values('title').as('title'),&#xA;    __.union(&#xA;        out('has_comment').match(&#xA;            __.id().as('id')&#xA;        ).select('id')&#xA;    ).fold().as('comments')&#xA;).select('id', 'title', 'comments')&#xA;</code></pre>&#xA;&#xA;<p>but this query isn't working correctly. because <code>id</code> of comment is overlap with <code>id</code> of post. </p>&#xA;&#xA;<p>I want use <code>.as('id')</code> locally in match statement.&#xA;is there any solution?</p>&#xA;",8625533,,,,2018-01-25 04:54:41,Is gremlin local variable in match?,<graphql><gremlin><local-variables><tinkerpop3><amazon-neptune>,1,2,0,2018-01-24 06:16:59
48432576,1,48434481,,8,4411,"<p>I'm planning to use AWS Appsync to migrate a graphQL endpoint in a lambda function, which is being triggered by a POST via the API Gateway. I'm looking into AppSync mainly because of the subscriptions, which I can't create using a Lambda function.</p>&#xA;&#xA;<p>My Authentication mechanism is based on Auth0, using passwordless, and my authorization mechanism in based on the data from several tables in DynamoDB and it's embedded in the graphQL resolvers, as recommended by Facebook and Apollo.</p>&#xA;&#xA;<p>What is more, it is based on every part of the request, which includes checking permission to invoke the query/mutation, and after that, the different entities included in the query, as the appropriate resolvers are being fired.</p>&#xA;&#xA;<p>As far as I can see, this is far away from being possible in AWS AppSync, as it enforces using Cognito. Maybe some kind of custom authorizer, like in the API Gateway could do the work, but it's still uncertain, because it needs to be executed many times during the graphQL request resolution (remember, one per nested object apart from the initial operation check).</p>&#xA;&#xA;<p>Maybe I can make a workaround regarding the subscriptions using notifications and refresh the queries, but I'll have to look into that as well.</p>&#xA;&#xA;<p>Anyone else with this problem too? How do you plan to, or have solved it?</p>&#xA;&#xA;<p>Any help will be much appreciated</p>&#xA;&#xA;<p>Carlos</p>&#xA;",1475008,,,,2018-04-24 17:45:07,AWS AppSync Authorization,<amazon-web-services><lambda><graphql><graphql-subscriptions><aws-appsync>,1,0,0,2018-01-24 22:13:39
48434481,2,,48432576,7,,"<p>At this point AppSync supports AuthZ checks using the metadata in the resource you are querying, or you can pass through the data and check it in the resolver. For instance you can store authorization metadata on the DynamoDB table and check it and then return data, but you cannot check a separate data source. However there will be more auth methods opened up in the future as AppSync is still not GA.</p>&#xA;&#xA;<p>In the meantime some options:</p>&#xA;&#xA;<ul>&#xA;<li><p>Use Lambda as your resolver and do your AuthZ check there before reading/writing to DynamoDB</p></li>&#xA;<li><p>Federate your Auth0 identity with AWS IAM and use those credentials in the resolver as a check. AppSync supports these credentials.</p></li>&#xA;<li><p>Check the JWT claims in the resolver that you pass through for your AuthZ check. You can use <code>$context.identity.claims.attrib�</code> in the Velocity language for this.</p></li>&#xA;</ul>&#xA;&#xA;<p>Please keep checking the AppSync documentation page in the coming months as the service evolves for more options here.</p>&#xA;&#xA;<p><strong>EDIT</strong> There is now a guide in the documentation for AppSync authorization scenarios and use cases: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/security-authorization-use-cases.html"" rel=""noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/security-authorization-use-cases.html</a></p>&#xA;&#xA;<p><strong>EDIT #2</strong> There is a new blog post for using multiple data sources with your resolvers for advanced authorization scenarios: <a href=""https://hackernoon.com/graphql-authorization-with-multiple-data-sources-using-aws-appsync-dfae2e350bf2"" rel=""noreferrer"">https://hackernoon.com/graphql-authorization-with-multiple-data-sources-using-aws-appsync-dfae2e350bf2</a></p>&#xA;",2733539,,2733539,2018-04-24 17:45:07,2018-04-24 17:45:07,"",,0,5,0,2018-01-25 01:58:11
48468708,2,,48369339,0,,"<p>AWS AppSync has the concept of Datasources which can be individual Lambda functions (or you can use DynamoDB tables or Elasticsearch domains). In your GraphQL schema you would then attach a resolver to a field (like a query or mutation) and this resolver would invoke the Lambda datasource. AppSync lets you do this as a single Lambda invocation or ""BatchInvoke"" for having the Lambda hit multiple resources and return a LIST.</p>&#xA;&#xA;<p>The resolver template (written in Velocity Template Language) is fairly straightforward to send your GraphQL request on through to Lambda, and adding this is a drop down selection from the samples in the console:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"": ""Invoke"",&#xA;    ""payload"": $util.toJson($context.arguments)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can read more about this here: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html</a></p>&#xA;",2733539,,,,2018-01-26 20:01:09,"",,0,1,0,2018-01-26 20:01:09
48476154,1,48483256,,12,6213,"<p>Im using Graphcool but this may be a general GraphQL question. Is there a way to make one of two fields required? </p>&#xA;&#xA;<p>For instance say I have a Post type. Posts must be attached to either a Group or to an Event. Can this be specified in the schema? </p>&#xA;&#xA;<pre><code>type Post {&#xA;  body: String!&#xA;  author: User!&#xA;  event: Event // This or group is required&#xA;  group: Group // This or event is required&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My actual requirements are a bit more complicated. Posts can either be attached to an event, or must be attached to a group and a location.</p>&#xA;&#xA;<pre><code>type Post {&#xA;  body: String!&#xA;  author: User!&#xA;  event: Event // Either this is required, &#xA;  group: Group // Or both Group AND Location are required &#xA;  location: Location &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So this is valid:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  createPost(&#xA;   body: ""Here is a comment"",&#xA;   authorId: ""&lt;UserID&gt;"",&#xA;   eventId: ""&lt;EventID&gt;""&#xA;  ){&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As is this:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  createPost(&#xA;   body: ""Here is a comment"",&#xA;   authorId: ""&lt;UserID&gt;"",&#xA;   groupID: ""&lt;GroupID&gt;"",&#xA;   locationID: ""&lt;LocationID&gt;""&#xA;  ){&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But this is not:</p>&#xA;&#xA;<p>As is this:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  createPost(&#xA;   body: ""Here is a comment"",&#xA;   authorId: ""&lt;UserID&gt;"",&#xA;   groupID: ""&lt;GroupID&gt;"",&#xA;  ){&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",467875,,467875,2018-01-27 13:24:25,2020-06-19 08:40:39,Make one of two fields required in GraphQL schema?,<graphql><graphcool>,2,1,0,2018-01-27 13:13:17
48532627,2,,48532135,0,,"<p>There are so many ways to do this but a simple implementation would be to use a JS Object to map the queries and then serialize using <code>JSON.stringify()</code></p>&#xA;&#xA;<p>If you can access the above query as a string then you can do what I'm saying. AFAIK, a query would blow up if it weren't a string once in a JS environment and not an IDE like GraphiQL.</p>&#xA;&#xA;<pre><code>let QueryStore = {}&#xA;&#xA;const getHNTopStoriesQuery = `&#xA;    query getHNTopStories {&#xA;        hn {&#xA;            topStories(limit: 3) {&#xA;                title&#xA;                url&#xA;                timeISO&#xA;                by {&#xA;                id&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;`   &#xA;&#xA;const addQuery = (queryToAdd, queries) =&gt; {&#xA;    let key = queryToAdd.trim().split(' ')[1]&#xA;    let queryEntry = {}&#xA;    queryEntry[key] = queryToAdd&#xA;&#xA;    return Object.assign({}, queries, queryEntry)&#xA;}&#xA;&#xA;const queryToGraphiQLQueryString = query =&gt; {&#xA;    let lines = query.trim().split('\n')&#xA;    let queryLines =lines.slice(1, -1).map(line =&gt; line.trim())&#xA;&#xA;    return encodeURIComponent(`{${queryLines.join(' ')}}`)&#xA;}&#xA;&#xA;// Add Query to Store&#xA;QueryStore = addQuery(getHNTopStoriesQuery, QueryStore)&#xA;&#xA;// Get a GraphiQL URI query string of a Query&#xA;let qs = queryToGraphiQLQueryString(QueryStore['getHNTopStories'])&#xA;console.log(qs)&#xA;&#xA;// Print a prettified JSON of the QueryStore&#xA;console.log(JSON.stringify(QueryStore, null, 2))&#xA;</code></pre>&#xA;",2980607,,2980607,2018-01-31 01:02:02,2018-01-31 01:02:02,"",,0,0,0,2018-01-31 00:24:52
48614730,1,48675160,,4,5075,"<p>I'm working with React, and I send this information:</p>&#xA;&#xA;<pre><code>const imageServicesClean = JSON.stringify(imageServices);&#xA;const query = `&#xA;    mutation {&#xA;        companyUpdate(&#xA;                idCompany:${idCompany},&#xA;                name:${nameClean},&#xA;                imageServices:${imageServicesClean})&#xA;            {&#xA;            idCompany&#xA;            name&#xA;            imageServices {&#xA;                idImageService&#xA;                name&#xA;                url&#xA;                key&#xA;            }&#xA;        }&#xA;    }`;&#xA;</code></pre>&#xA;&#xA;<p>And the imageServicesClean is sent in this way, but return error:</p>&#xA;&#xA;<pre><code>[{&#xA;    ""idImageService"": 1,&#xA;    ""name"": ""Service1"",&#xA;    ""url"": """",&#xA;    ""key"": ""asdasdas""&#xA;}, {&#xA;    ""idImageService"": 2,&#xA;    ""name"": ""Service2"",&#xA;    ""url"": ""sdsads"",&#xA;    ""key"": ""sddsfsds_""&#xA;}]&#xA;</code></pre>&#xA;&#xA;<p>Because my GraphQL server (Laravel) just allows the variable without quotes, in this way:</p>&#xA;&#xA;<pre><code>[{&#xA;    idImageService: 1,&#xA;    name: ""Service1"",&#xA;    url: """",&#xA;    key: ""sdofunc4938urcnnwikk""&#xA;}, {&#xA;    idImageService: 2,&#xA;    name: ""Service2"",&#xA;    url: ""sdsads"",&#xA;    key: ""sddsfsdssss8347yuirh""&#xA;}]&#xA;</code></pre>&#xA;&#xA;<p>So the function <code>JSON.stringify</code> don't work for build format in GraphQL. How can I convert the object array to GraphQL format in Javascript?</p>&#xA;",6637520,,,,2022-04-12 12:31:30,How can I convert the object array to GraphQL format in Javascript?,<laravel><reactjs><graphql>,2,2,0,2018-02-05 01:24:57
48735707,1,49722344,,4,6335,<p>I'm new to GraphQL and going to build a solution using GraphQL.</p>&#xA;&#xA;<p>Everything looks cool but just concerned on how to implement the role based authorization inside GraphQL server (I'm considering using GraphQL.js/ apollo server)</p>&#xA;&#xA;<p>I will have a users table which contains all users. Inside the users table there's a roles field which contains the roles of the particular user. The queries and mutations will be granted based on the roles of the user.</p>&#xA;&#xA;<p>How can I implement this structure? </p>&#xA;&#xA;<p>THANKS!</p>&#xA;,9346974,,,,2019-12-11 21:30:23,graphql role based authorization,<graphql><apollo><express-graphql>,2,0,0,2018-02-11 19:46:21
48752605,2,,48748599,0,,"<ol>&#xA;<li>You can log all the queries/schemas that are being sent to the GraphQL server</li>&#xA;<li>from there you can check which objects and fields are being selected</li>&#xA;<li>as part of the request that was made, you should have an IP address or an API key that can be used to identify the client</li>&#xA;</ol>&#xA;",0,user9903,,,2018-02-12 17:55:44,"",,0,0,0,2018-02-12 17:55:44
48800565,2,,48529063,2,,"<p>Can you try this again? There were enhancements to the AppSync SDK for Javascript which no longer require you to use Optimistic Response. You can use it optionally if you still want an optimistic UI.</p>&#xA;&#xA;<p>Additionally you can also now disable offline if that's not a requirement for your app by using <code>disableOffline</code> like so:</p>&#xA;&#xA;<pre><code>const client = new AWSAppSyncClient({&#xA;    url: AppSync.graphqlEndpoint,&#xA;    region: AppSync.region,&#xA;    auth: {&#xA;        type: AUTH_TYPE.API_KEY,&#xA;        apiKey: AppSync.apiKey,&#xA;    },&#xA;    disableOffline: true&#xA;});&#xA;</code></pre>&#xA;",2733539,,,,2018-02-15 05:37:33,"",,0,0,0,2018-02-15 05:37:33
48831179,2,,43089989,0,,"<p>I know this is an older question but I hit on a similar issue recently. In my case I am using seriate to connect to an MSSQL server from Nodejs and wanted to create the GraphQL schema dynamically based on the DB design (following the linked fields and such to create the sub-queries). Going this route I got the sql: </p>&#xA;&#xA;<pre><code>`SELECT &#xA;   BASE_TABLE = t.TABLE_NAME, &#xA;   BASE_COLUMN = col.COLUMN_NAME, &#xA;   DATA_TYPE, &#xA;   LEN_PRECISION = COALESCE(&#xA;                             CHARACTER_MAXIMUM_LENGTH, &#xA;                             numeric_precision, &#xA;                             datetime_precision&#xA;                   ), &#xA;   LINKED_TABLE = keys.Data_Table, &#xA;   LINKED_COLUMN = keys.Data_Column &#xA;FROM INFORMATION_SCHEMA.TABLES t INNER JOIN &#xA;   INFORMATION_SCHEMA.COLUMNS col ON &#xA;      t.TABLE_NAME = col.TABLE_NAME LEFT JOIN &#xA;   ( SELECT &#xA;            Base_Table = FK.TABLE_NAME, &#xA;            Base_Column = CU.COLUMN_NAME, &#xA;            Data_Table = PK.TABLE_NAME, &#xA;            Data_Column = PT.COLUMN_NAME, &#xA;            Constraint_Name = C.CONSTRAINT_NAME &#xA;     FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS C INNER JOIN &#xA;            INFORMATION_SCHEMA.TABLE_CONSTRAINTS FK ON &#xA;               C.CONSTRAINT_NAME = FK.CONSTRAINT_NAME INNER JOIN &#xA;            INFORMATION_SCHEMA.TABLE_CONSTRAINTS PK ON &#xA;               C.UNIQUE_CONSTRAINT_NAME = PK.CONSTRAINT_NAME INNER JOIN &#xA;            INFORMATION_SCHEMA.KEY_COLUMN_USAGE CU ON &#xA;               C.CONSTRAINT_NAME = CU.CONSTRAINT_NAME INNER JOIN &#xA;            ( SELECT &#xA;                     i1.TABLE_NAME, &#xA;                     i2.COLUMN_NAME &#xA;              FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS i1 INNER JOIN &#xA;                     INFORMATION_SCHEMA.KEY_COLUMN_USAGE i2 ON &#xA;                         i1.CONSTRAINT_NAME = i2.CONSTRAINT_NAME &#xA;              WHERE i1.CONSTRAINT_TYPE = 'PRIMARY KEY' &#xA;             ) PT ON &#xA;             PT.TABLE_NAME = PK.TABLE_NAME &#xA;   ) keys ON &#xA;      keys.Base_Table = t.TABLE_NAME AND &#xA;      keys.Base_Column = col.COLUMN_NAME &#xA;WHERE t.TABLE_TYPE = 'BASE TABLE'`&#xA;</code></pre>&#xA;&#xA;<p>This may not be the most elegant, and is likely to hit some performance issues on larger databases, but it worked well for me. The final dataset will give you the list of table/column pairs with any links to other table/column pairs from your database design. </p>&#xA;&#xA;<p>From this dataset it should be ""trivial"" to check for the links and create any sub-queries you need in your GraphQL setup.</p>&#xA;",6232231,,,,2018-02-16 16:37:50,"",,0,0,0,2018-02-16 16:37:50
48851800,1,48855172,,11,2916,"<p>Dataloader is able to batch and cache requests, but it can only be used by either calling load(key) or loadMany(keys). </p>&#xA;&#xA;<p>The problem I am having is that sometimes I do not know they keys of the items I want to load in advance.</p>&#xA;&#xA;<p>I am using an sql database and this works fine when the current object has a foreign key from a belongsTo relation with another model. </p>&#xA;&#xA;<p>For example a user that belongs to a group and so has a groupId. To resolve the group you would just call groupLoader.load(groupId).</p>&#xA;&#xA;<p>On the other hand, if I wanted to resolve the users within a group, of which there could be many I would want a query such as </p>&#xA;&#xA;<pre><code>SELECT * from users where user.groupId = theParticularGroupId&#xA;</code></pre>&#xA;&#xA;<p>but a query such as this doesn't use the keys of the users and so I am not sure how make use of dataloader.</p>&#xA;&#xA;<p>I could do another request to get the keys like</p>&#xA;&#xA;<pre><code>SELECT id from users where user.groupId = theParticularGroupId&#xA;</code></pre>&#xA;&#xA;<p>and then call loadMany with those keys... But I could have just requested the data directly instead.</p>&#xA;&#xA;<p>I noticed that dataloader has a prime(key, value) function which can be used to prime the cache, however that can only be done once the data is already fetched. At which point many queries would already have been sent, and duplicate data could have been fetched.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Another example would be the following query</p>&#xA;&#xA;<pre><code>query {&#xA;  groups(limit: 10) {&#xA;    id&#xA;    ...&#xA;    users {&#xA;      id&#xA;      name&#xA;      ...&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I cannot know the keys if I am searching for say the first or last 10 groups. Then once I have these 10 groups. I cannot know the keys of their users, and if each resolver would resolve the users using a query such as </p>&#xA;&#xA;<pre><code>SELECT * from users where user.groupId = theParticularGroupId&#xA;</code></pre>&#xA;&#xA;<p>that query will be executed 10 times. Once the data is loaded I could now prime the cache, but the 10 requests have already been made.</p>&#xA;&#xA;<p>Is there any way around this issue? Perhaps a different pattern or database structure or maybe dataloader isn't even the right solution.</p>&#xA;",3128875,,1253156,2018-02-18 12:42:28,2018-05-25 09:17:04,GraphQL Dataloader not knowing keys in advance,<javascript><node.js><caching><graphql><batching>,1,0,0,2018-02-18 12:41:46
48855172,2,,48851800,7,,"<p>You'll want a dataloader instance for the lookup you can do, in this case you have a group ID and you want the users:</p>&#xA;&#xA;<pre><code>import DataLoader from 'dataloader';&#xA;&#xA;const userIdsForGroupLoader = new DataLoader(groupIds =&gt; batchGetUsersIdsForGroups(groupIds));&#xA;</code></pre>&#xA;&#xA;<p>Now your <code>batchGetUsersForGroups</code> function is essentially has to convert an array of group IDs to an array of arrays of users (one array of user IDs for each group).</p>&#xA;&#xA;<p>You'd start off with an <code>IN</code> query:</p>&#xA;&#xA;<pre><code>SELECT id from users where user.groupId in (...groupIds)&#xA;</code></pre>&#xA;&#xA;<p>This will give you a single result set of users, which you'll have to manipulate, by grouping them by their <code>groupId</code>, the array should be ordered according to the original array of <code>groupIds</code>. Make sure you return an empty array for groupIds that don't have any users.</p>&#xA;&#xA;<p>Note that in this we're only returning the user ids, but you can batch fetch the users in one go once you have them. You could tweak it slightly to return the users themselves, you'll have to decide for yourself if that's the right approach.</p>&#xA;&#xA;<p>Everything I mention in <a href=""https://dev-blog.apollodata.com/optimizing-your-graphql-request-waterfalls-7c3f3360b051"" rel=""noreferrer"">this article</a> can be achieved using clever use of Dataloader. But the key takeaway is that the values you pass to the load/loadMany functions don't have to correspond to the IDs of the objects you're trying to return.</p>&#xA;",15687,,4570426,2018-05-25 09:17:04,2018-05-25 09:17:04,"",,0,4,0,2018-02-18 18:31:25
48876445,1,,,0,2415,"<p>My query input is something like:</p>&#xA;&#xA;<pre><code>[{name: ""joe"", age: 20}, {name: ""bob"", age: 30}]&#xA;</code></pre>&#xA;&#xA;<p>Then I use a resolver to return something similar like:</p>&#xA;&#xA;<pre><code>[{name: ""joe"", age: 20}, {name: ""bob"", age: 30}, {name: ""jane"", age: 21}]&#xA;</code></pre>&#xA;&#xA;<p>Suppose I don't change the dataset, so no need to use mutate. </p>&#xA;&#xA;<p>I am using <code>flask_graphql</code> and <code>graphene</code></p>&#xA;&#xA;<p>What's the better way to implement this? (I mean how to build the schema) Thanks! </p>&#xA;",6591057,,,,2018-05-29 08:09:01,graphene schema for query input is list of dictionary / object,<graphene-python><flask-graphql>,1,0,0,2018-02-20 01:01:19
48881919,2,,48879109,2,,"<p>You can actually do that with one operation. Using <code>aliases</code> you can request the same field multiple times with different arguments.</p>&#xA;&#xA;<p>Here is the official <a href=""http://graphql.org/learn/queries/#aliases"" rel=""nofollow noreferrer"">explanation about aliases</a>.</p>&#xA;&#xA;<p>In your case it would be something similar to:</p>&#xA;&#xA;<pre><code>  query GetAllPages {&#xA;      page1rows: rows(skip: 0, limit: 50) { # ""skip"" and ""limit"" are just regular variable names&#xA;          #...rowFields&#xA;      }&#xA;      page2rows: rows(skip: 50, limit: 50) {&#xA;          #...rowFields&#xA;      }&#xA;      #... etc.&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>In this example <code>page1rows</code> and <code>page2rows</code> are aliases for the <code>rows</code> field. You can choose other aliases.</p>&#xA;&#xA;<p>Note that <code>skip</code> and <code>limit</code> are nothing special, they are plain variables and their use depends on the schema and resolvers on the server. I see in your code you use <code>skip</code>, if you <strong>know</strong> you'll always get 50 rows then <code>limit</code> is redundant.</p>&#xA;&#xA;<p>The response should be something like:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""page1rows"": [&#xA;      //... rows&#xA;    ],&#xA;    ""page2rows"": [&#xA;      //... rows&#xA;    ],&#xA;    //... etc.&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That way works without additional user action, you get all pages at once and there's no need to use <code>fetchMore</code>.</p>&#xA;",2805067,,,,2018-02-20 09:33:40,"",,0,2,0,2018-02-20 09:33:40
48896571,2,,48867632,2,,"<p>Can you use Apollo with Next? If so then maybe try disabling the offline feature of the AWS AppSync client by setting <code>disableOffline</code> to true:</p>&#xA;&#xA;<pre><code>const client = new AWSAppSyncClient({&#xA;  disableOffline: true,&#xA;  url: appSyncConfig.graphqlEndpoint,&#xA;  region: appSyncConfig.region,&#xA;  auth: {&#xA;    type: appSyncConfig.authenticationType,&#xA;    apiKey: appSyncConfig.apiKey,&#xA;  }&#xA;});&#xA;</code></pre>&#xA;",2733539,,,,2018-02-21 00:49:38,"",,0,0,0,2018-02-21 00:49:38
48960807,1,,,2,769,"<p>I'm using apollo-client on the front end to send graphql requests to my aws lambda app.  I looked at using apollo on the lambda as well, but this seems to complicated, instead I just want to use plain graphqljs, how do I go about this?  All the examples I looked seem to itnegrate with apollo on the lambda end.</p>&#xA;",7385798,,,,2018-02-25 18:48:02,apollo-client integrate with aws lambda,<lambda><apollo-client>,1,0,0,2018-02-24 08:16:58
48968872,1,49000735,,0,684,"<p>I have the following graphql schema and I am trying to execute businessUser query</p>&#xA;&#xA;<pre><code>type Query {&#xA;  businessUser(id: String!): BusinessUser&#xA;}&#xA;&#xA;type BusinessUser {&#xA;  id: ID!,&#xA;  firstName: String,&#xA;  lastName: String,&#xA;  email: String,&#xA;  posts: [BusinessPostFormat]&#xA;}&#xA;&#xA;type BusinessPostFormat {&#xA;  postId: Int,&#xA;  user: String,&#xA;  isActive: Boolean,&#xA;  postText: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In my resolver I am joining my Post table with my businessPost table to retrieve a 'isActive' column. When I print out what Sequilize is returning I see that I am getting back exactly the data object that should map to the BusinessPostFormat type:</p>&#xA;&#xA;<pre><code>post {&#xA;    dataValues: &#xA;     { postId: '188',&#xA;       postText: 'blah blah blah',&#xA;       user: 'userName',&#xA;       isActive: false },&#xA;</code></pre>&#xA;&#xA;<p>However when I execute the query in graphiql the isActive field is coming back as null. I dont understand why thats happening if I can see that the resolver is returning exactly what BusinessPostFormat type is expecting?</p>&#xA;&#xA;<p>resolver function below:</p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;  Query: {&#xA;    businessUser(_, args) {&#xA;      return BusinessUser.findById(args.id);&#xA;    }&#xA;},&#xA;BusinessUser: {&#xA;    posts(businessUser) {&#xA;      return businessUser.getPosts({&#xA;        attributes: {&#xA;          include: [[Sequelize.literal('business_posts.is_active'), 'isActive']],&#xA;          exclude: ['business_user_id']&#xA;        },&#xA;        include: [{ model: BusinessPost, attributes: ['is_active'] }]&#xA;      })&#xA;    },&#xA;  }&#xA;</code></pre>&#xA;",4104734,,4104734,2018-02-25 00:06:56,2018-02-27 03:40:57,graphql.js: field is null even though resolver is returning value for sequilize query,<node.js><sequelize.js><graphql-js><apollo-server>,1,0,0,2018-02-24 23:59:12
48977128,2,,48960807,1,,"<p>This isn't pure Lambda as the public endpoint, but if you want to use AWS AppSync (<a href=""https://aws.amazon.com/appsync/"" rel=""nofollow noreferrer"">https://aws.amazon.com/appsync/</a>) you can have that as your GraphQL layer and then use an AWS Lambda resolver to execute your business logic. Here is information on using Lambda resolvers: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html</a></p>&#xA;&#xA;<p>At that point you can use the Apollo client with AppSync and choose your authorization method. Using React as an example, it looks like this:</p>&#xA;&#xA;<pre><code>import AWSAppSyncClient from 'aws-appsync'&#xA;import AppSyncConfig from './aws-exports'&#xA;import { ApolloProvider } from 'react-apollo'&#xA;import { Rehydrated } from 'aws-appsync-react' // this is included with aws-appsync&#xA;&#xA;import App from './App'&#xA;&#xA;const client = new AWSAppSyncClient({&#xA;  url: AppSyncConfig.graphqlEndpoint,&#xA;  region: AppSyncConfig.region,&#xA;  auth: {&#xA;    type: AppSyncConfig.authType,&#xA;    apiKey: AppSyncConfig.apiKey,&#xA;  }&#xA;})&#xA;&#xA;const WithProvider = () =&gt; (&#xA;  &lt;ApolloProvider client={client}&gt;&#xA;    &lt;Rehydrated&gt;&#xA;      &lt;App /&gt;&#xA;    &lt;/Rehydrated&gt;&#xA;  &lt;/ApolloProvider&gt;&#xA;)&#xA;&#xA;export default WithProvider&#xA;</code></pre>&#xA;",2733539,,,,2018-02-25 18:48:02,"",,0,0,0,2018-02-25 18:48:02
49015524,1,,,1,423,"<p>Im am trying to get to grips with admin on rest with graphql client. I am using 'aor-graphql-client-graphcool' and an endpoint on launch pad.&#xA;Debugging the app shows a zero length array assigned to the resource key.  The types/queries look ok so I think introspection is working OK.</p>&#xA;&#xA;<pre><code>introspectionResults {types: Array(39), queries: Array(9), resources: Array(0)}&#xA;</code></pre>&#xA;&#xA;<p>I have implemented getPageOf[Resource]s and get[Resource] queries in my endpoint but its not clear in the documentation if I need to do anything more than this.  </p>&#xA;&#xA;<p>I am initialising the client in a next.js react component as shown in the documentation:</p>&#xA;&#xA;<pre><code>componentDidMount() {&#xA;  buildApolloClient({&#xA;    clientOptions: {&#xA;      uri: 'https://xxxxxxxxx.lp.gql.zone/graphql'&#xA;    }&#xA;  }).then((restClient) =&gt; {&#xA;    this.setState({ restClient });&#xA;  });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have also tried to disable introspection and passed in custom queries but in this case I get a null for the introspectionResults.</p>&#xA;&#xA;<p>I am wondering the following:</p>&#xA;&#xA;<ul>&#xA;<li>Is launchpad compatible with the graphcool client?</li>&#xA;<li>Do I need more in config in my client initialisation to get the resources populated.</li>&#xA;<li>Is admin on rest the silver bullet it claims to be, i.e. can it decipher my schema via introspection queries and present the data.</li>&#xA;</ul>&#xA;&#xA;<p>I really hope so because this thing looks so cool!</p>&#xA;",3246418,,3246418,2018-02-27 19:38:21,2020-12-23 14:36:05,Admin on Rest graphql client returns empty resources,<graphql><admin-on-rest>,2,0,0,2018-02-27 18:26:39
49032132,2,,48889965,0,,"<p>In your GraphQL definition, you should have </p>&#xA;&#xA;<pre><code>persons = graphene.List(lambda: Person)&#xA;</code></pre>&#xA;",8807593,,,,2018-02-28 14:40:52,"",,0,0,0,2018-02-28 14:40:52
49048465,2,,49047259,35,,"<p>You can use <a href=""https://www.npmjs.com/package/graphql-tag"" rel=""noreferrer"">graphql-tag</a> :</p>&#xA;&#xA;<pre><code>const gql = require('graphql-tag');&#xA;&#xA;const query = `&#xA;  {&#xA;    qQueryEndpoint {&#xA;      id&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;const obj = gql`&#xA;  ${query}&#xA;`;&#xA;&#xA;console.log('operation', obj.definitions[0].operation);&#xA;console.log('name', obj.definitions[0].selectionSet.selections[0].name.value);&#xA;</code></pre>&#xA;&#xA;<p>Prints out :</p>&#xA;&#xA;<pre><code>operation query&#xA;name qQueryEndpoint&#xA;</code></pre>&#xA;&#xA;<p>And with your mutation :</p>&#xA;&#xA;<pre><code>operation mutation&#xA;name saveSomething&#xA;</code></pre>&#xA;",5211519,,,,2018-03-01 11:14:08,"",,0,2,0,2018-03-01 11:14:08
49071788,2,,48888676,0,,"<p>It's possible insert in specific position:   </p>&#xA;&#xA;<pre><code>let i = AwardInput['position'];&#xA;</code></pre>&#xA;&#xA;<p>Create Update expression:</p>&#xA;&#xA;<pre><code>let expression = ""set awards["" + i +""].title = :title, ""&#xA;    expression = expression + ""awards["" + i +""].description = :description, "" &#xA;    expression = expression + ""awards["" + i +""].initialDate = :initialDate, "" &#xA;    expression = expression + ""awards["" + i +""].updated_at = :updated_at ""&#xA;</code></pre>&#xA;&#xA;<p>Update table:</p>&#xA;&#xA;<pre><code>    docClient.update(&#xA;      {&#xA;        TableName: process.env.USER_TABLE,&#xA;        Key: { 'id': AwardInput.id, },&#xA;        UpdateExpression: expression,&#xA;        ExpressionAttributeValues: {&#xA;                                      "":title"": AwardInput['title'],&#xA;                                      "":description"": AwardInput['description'],&#xA;                                      "":initialDate"": AwardInput['initialDate'],&#xA;                                      "":updated_at"":  AwardInput['updated_at'] ,&#xA;&#xA;                                   },&#xA;        ReturnValues: 'UPDATED_NEW',&#xA;      },&#xA;</code></pre>&#xA;",4199187,,,,2018-03-02 15:03:12,"",,0,0,0,2018-03-02 15:03:12
49141643,2,,49118378,4,,"<p>I just chatted through this with the Engineer that worked on this code. What you're seeing is the bookeeping process that the AWS AppSync SDK process uses under the covers to ensure data integrity. It is <strong>NOT</strong> actually running a mutation 4 times against your API.</p>&#xA;&#xA;<p>When the AppSync client gets an optimistic response the update function runs twice - once for the local response and once for the network response. This is standard Apollo behavior. What the AppSync client does under the covers is on the first optimistic response, we treat it as if it were the network response and store the data in a persistent storage medium (local storage for web, Async Storage for React Native) to allow optimistic UI when in an offline state. This is essentially an ""outbox"" that the data first gets written to when offline (currently the implementation uses Redux Offline) and if you disable offline with <code>disableOffline:true</code> you will no longer see this behavior.</p>&#xA;&#xA;<p>When you come back online, the synchronization process gets executed and you see another mutation message (which is actually the original mutation) of the client sending this to the server and the appropriate response.</p>&#xA;&#xA;<p>Note that if you are creating unique IDs in your optimistic response on the client AND also creating unique IDs on the server, for instance using the <code>$util.autoId()</code> then you could have duplicate records as we will not overwrite any local data you've explicitly assigned an ID. You can do invalidation of any locally-created IDs if you wish by using the <strong>Offline-enabled put item</strong> and <strong>Offline-enabled response</strong> templates in the DynamoDB resolvers for AppSync which use an ephemeral key called <code>relayState</code> (that you'll need to add as a field for the type you're creating) that you can use to track the local ID and match it up with the ID that was created at the server.</p>&#xA;&#xA;<p>There are more additions we're going to be making to this bookeeping process in the future and would welcome suggestions in our GitHub issues repo: <a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-js/issues"" rel=""nofollow noreferrer"">https://github.com/awslabs/aws-mobile-appsync-sdk-js/issues</a> </p>&#xA;",2733539,,,,2018-03-06 23:21:38,"",,0,2,0,2018-03-06 23:21:38
49153301,1,,,1,72,"<p>I'm thinking about moving our API from a standard HTTP endpoint to GraphQL.&#xA;On the client we have data tables in which the user can choose what columns they want to have visible.&#xA;Users can save their column layout for the next time they open the application.</p>&#xA;&#xA;<p>The problem is the first time such a table is shown, the client requires two things:</p>&#xA;&#xA;<ul>&#xA;<li>What columns has the user saved</li>&#xA;<li>The data of these columns for each record</li>&#xA;</ul>&#xA;&#xA;<p>Currently we have a single endpoint returning both of these in JSON.</p>&#xA;&#xA;<p>URL: <code>/contacts/table</code></p>&#xA;&#xA;<pre><code>{&#xA;    ""columns"": [""a"", ""b"", ""c""],&#xA;    ""rows"": [&#xA;        { &#xA;            ""a"": 0, &#xA;            ""b"": 1,&#xA;            ""c"": 2 &#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there a nice way to get the above working in a GraphQL API?</p>&#xA;&#xA;<h1>Some things I've tried:</h1>&#xA;&#xA;<ul>&#xA;<li><p>Have an API that returns key value pairs</p>&#xA;&#xA;<pre><code>""columns"": [""a"", ""b"", ""c""]&#xA;""rows"": [&#xA;    [&#xA;        {&#xA;            ""key"": ""a""&#xA;            ""value"": 0&#xA;        },&#xA;        {&#xA;            ""key"": ""b""&#xA;            ""value"": 1&#xA;        }&#xA;    ]&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>Problems with this approach:</p>&#xA;&#xA;<ol>&#xA;<li>It has a lot of overhead</li>&#xA;<li>It feels like reinventing the wheel seeing as JSON is already key/value based.</li>&#xA;<li>Doesn't work well with caching frameworks such as apollo when the same type needs to be accessed in a non-table way</li>&#xA;</ol></li>&#xA;<li><p>Custom syntax</p>&#xA;&#xA;<pre><code>query {&#xA;  tables {&#xA;    contacts {&#xA;     columns @provideFragment(""ContactColumns"")&#xA;    } &#xA;  }&#xA;&#xA;  contacts {&#xA;    ..ContactsColumns&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Problems with this approach:</p>&#xA;&#xA;<ol>&#xA;<li>It's not standard (as far as I know), so it might not work with other tooling.</li>&#xA;</ol></li>&#xA;</ul>&#xA;",5082427,,,,2018-03-07 13:38:02,Better way to query server-provided fields in GraphQL,<graphql>,0,2,0,2018-03-07 13:38:02
49182143,2,,49122677,0,,"<p>Have you checked out AWS AppSync? <a href=""https://aws.amazon.com/appsync/"" rel=""nofollow noreferrer"">https://aws.amazon.com/appsync/</a></p>&#xA;",2733539,,,,2018-03-08 20:46:16,"",,0,1,0,2018-03-08 20:46:16
49216885,1,,,1,466,"<p>AppSync appears to be loading the incorrect resolver template for some fields of nested objects. Also, it appears to only happen when the nested object has a field with the same name as a field on the parent object.</p>&#xA;&#xA;<p>I've included an example below because I think that might be the best way to explain the issue. As you can see, the <code>id</code> fields for the nested objects are not being resolved correctly. </p>&#xA;&#xA;<p>Each type, Task, User, List, and Tag, have a resolver for their <code>id</code> field because the data for each has a prefix on the id field. For example, Task.id has a resolver that returns <code>$context.source.task_id</code> and User.id has a resolver that returns <code>$context.source.user_id</code>. Same for List and Tag. </p>&#xA;&#xA;<p>What appears to be happening is AppSync is loading the <code>id</code> resolver template for the parent type. You can see that this is the case for <code>task.owner.id</code>, where <code>owner</code> is a User but the <code>id</code> gets resolved as <code>""$context.source.task_id""</code>. Same for <code>task.list.id</code> where <code>list</code> is a List. Again we can see this for <code>task.tags[0].owner.id</code>. <code>owner</code> is once again a User except this time the parent is a Tag so <code>task.tags[0].owner.id</code> is resolved as <code>""$context.source.tag_id""</code>. These three example show that the problem is not with a particular type since User and List are behaving the same when they are nested in a Task. Also, we can see that the issue is not with Task since User is behaving similarly when nested in a Tag. Lastly, we can see that <code>task.tags[1].owner.id</code> actually behaves correctly. This indicates that the issue only presents itself on first execution.</p>&#xA;&#xA;<p>At this point I strongly suspect this is a bug with AppSync however, I'm not 100% on that. Has anyone else experienced this issue? Am I doing something terribly wrong?</p>&#xA;&#xA;<p><strong>Example</strong></p>&#xA;&#xA;<p>Query</p>&#xA;&#xA;<pre><code>{&#xA;  task(id: ""task-123"") {&#xA;    id,&#xA;    title,&#xA;    owner {&#xA;      id,&#xA;      username,&#xA;    },&#xA;    list {&#xA;      id,&#xA;      name,&#xA;    },&#xA;    tags {&#xA;      id,&#xA;      name,&#xA;      owner {&#xA;        id,&#xA;        username,&#xA;      },&#xA;    },&#xA;  },&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Result</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""task"": {&#xA;      ""id"": ""task-123"",&#xA;      ""title"": ""First Task"",&#xA;      ""owner"": {&#xA;        ""id"": ""$context.source.task_id"",&#xA;        ""username"": ""tom""&#xA;      },&#xA;      ""list"": {&#xA;        ""id"": ""$context.source.task_id"",&#xA;        ""name"": ""Inbox""&#xA;      },&#xA;      ""tags"": [&#xA;        {&#xA;          ""id"": ""tag-123"",&#xA;          ""name"": ""one"",&#xA;          ""owner"": {&#xA;            ""id"": ""$context.source.tag_id"",&#xA;            ""username"": ""tom""&#xA;          }&#xA;        },&#xA;        {&#xA;          ""id"": ""tag-234"",&#xA;          ""name"": ""two"",&#xA;          ""owner"": {&#xA;            ""id"": ""user-123"",&#xA;            ""username"": ""tom""&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Task Schema</p>&#xA;&#xA;<pre><code>type Task {&#xA;    id: ID!&#xA;    title: String!&#xA;    owner: User!&#xA;    list: List&#xA;    tags: [Tag]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>User Schema</p>&#xA;&#xA;<pre><code>type User {&#xA;    id: ID!&#xA;    username: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>List Schema</p>&#xA;&#xA;<pre><code>type List {&#xA;    id: ID!&#xA;    name: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Tag Schema</p>&#xA;&#xA;<pre><code>type Tag {&#xA;    id: ID!&#xA;    name: String!&#xA;    owner: User!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Task Data</p>&#xA;&#xA;<pre><code>{&#xA;    task_id: ""task-123"",&#xA;    title: ""First Task"",&#xA;    owner_id: ""user-123"",&#xA;    list_id: ""list-123"",&#xA;    tags: [&#xA;        ""tag-123"",&#xA;        ""tag-234""&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>User Data</p>&#xA;&#xA;<pre><code>{&#xA;    user_id: ""user-123"",&#xA;    username: ""tom""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>List Data</p>&#xA;&#xA;<pre><code>{&#xA;    list_id: ""list-123"",&#xA;    name: ""Inbox""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Tag Data</p>&#xA;&#xA;<pre><code>{&#xA;    tag_id: ""tag-123"",&#xA;    name: ""one"",&#xA;    owner_id: ""user-123""&#xA;}&#xA;&#xA;{&#xA;    tag_id: ""tag-234"",&#xA;    name: ""two"",&#xA;    owner_id: ""user-123""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Example id resolver (User)</p>&#xA;&#xA;<p>Request Mapping Template</p>&#xA;&#xA;<pre><code>{&#xA;  ""version"": ""2017-02-28"",&#xA;  ""payload"": ""$context.source.user_id""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Response Mapping Template</p>&#xA;&#xA;<pre><code>$util.toJson($context.result)&#xA;</code></pre>&#xA;&#xA;<p>The id resolvers for the other types are very similar</p>&#xA;&#xA;<p>It may also be worth noting that I created different None Data Sources for each type, Task, User, List, and Tag. The id resolver for each type is using their respective None Data Source.</p>&#xA;",679612,,679612,2018-03-11 05:26:15,2018-03-11 05:26:15,AppSync loading incorrect resolver for field,<amazon-web-services><graphql><aws-appsync>,0,1,0,2018-03-11 05:15:09
49242267,2,,49212271,4,,<p>Are you using <code>API Key</code> for authorization in <code>AppSync</code>? If you are using <code>API Key</code> only one subscription is supported by the SDK at this point. Could you switch to <code>IAM</code> (Cognito Identity) or <code>Cognito UserPools</code> based auth and see if multiple subscriptions work for you?</p>&#xA;,5045692,,6241856,2018-05-08 05:04:45,2018-05-08 05:04:45,"",,0,4,0,2018-03-12 18:35:50
49317788,1,,,2,4703,"<p>I'm new to GraphQL and I'm trying to set up a demo app to give a little introductory talk to my colleagues. </p>&#xA;&#xA;<p><strong>I'm working with NodeJS.</strong></p>&#xA;&#xA;<p>I've come up with the following schema:</p>&#xA;&#xA;<pre><code>type Query {&#xA;  author(id:Int!): Author&#xA;  song(id:Int!): Song&#xA;}&#xA;type Author {&#xA;  id:Int!&#xA;  name:String!&#xA;  songs(max:Int):[Song]!&#xA;}&#xA;type Song {&#xA;  id:Int!&#xA;  name:String!&#xA;  author:Author!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And this is the part of the resolvers relevant to the Song.author association:</p>&#xA;&#xA;<pre><code>[...]&#xA;Song: {&#xA;  author: ({ id }, args, context, info) =&gt; {&#xA;    return mergeInfo.delegate(&#xA;      'query',&#xA;      'author',&#xA;      { id },&#xA;      context,&#xA;      info,&#xA;    );&#xA;  }&#xA;}&#xA;[...]&#xA;</code></pre>&#xA;&#xA;<p>So the problem with this approach is that I need to add the Song.id to the containing query to be able to include the Song.author in it:</p>&#xA;&#xA;<pre><code>{&#xA;  song(id: 1) {&#xA;    id&#xA;    author {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The following would not work:</p>&#xA;&#xA;<pre><code>{&#xA;  song(id: 1) {&#xA;    author {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Depending on the implementation it would give me an error or <code>null</code> (that would be even worse).</p>&#xA;&#xA;<p>This forces who writes the query to know the implementation details of the back-end and this is obviously bad. :P</p>&#xA;&#xA;<p><strong>Does anyone have any solution to this issue? Is there anything that I overlooked?</strong></p>&#xA;&#xA;<p>I've tried using the <code>info</code> object, but this would solve the problem just because the id I need is part of the query, but I could come up with a scenario in which the param that I need is in the data available only in the back-end.</p>&#xA;&#xA;<p><strong>UPDATE:</strong></p>&#xA;&#xA;<p>As requested by Daniel (thanks), this is the whole test file that creates the schema including the stitching:</p>&#xA;&#xA;<pre><code>const { makeExecutableSchema, mergeSchemas } = require('graphql-tools');&#xA;&#xA;const DATA = {&#xA;  authors: {&#xA;    1: { id: 1, name: 'John' },&#xA;    2: { id: 2, name: 'Paul' },&#xA;  },&#xA;  songs: {&#xA;    1: { id: 1, name: 'Love me do', authorId: 1 },&#xA;    2: { id: 2, name: 'I wanna be your man', authorId: 1 },&#xA;    3: { id: 3, name: 'I\'ll be back', authorId: 2 },&#xA;  }&#xA;};&#xA;&#xA;const authorsTypes = `&#xA;  type Query {&#xA;    author(id:Int!): Author&#xA;  }&#xA;  type Author {&#xA;    id:Int!&#xA;    name:String!&#xA;  }&#xA;`;&#xA;const authorSchema = makeExecutableSchema({&#xA;  typeDefs: authorsTypes,&#xA;  resolvers: {&#xA;    Query: {&#xA;      author: (_, { id }) =&gt; DATA.authors[id],&#xA;    },&#xA;  },&#xA;});&#xA;const authorsLinksTypes = `&#xA;  extend type Author {&#xA;    songs(max:Int):[Song]!&#xA;  }&#xA;`;&#xA;const authorsLinksResolvers = mergeInfo =&gt; ({&#xA;  Author: {&#xA;    songs: ({ id }, args, context, info) =&gt; {&#xA;      return Object.values(DATA.songs).filter(it =&gt; it.authorId === id)&#xA;    }&#xA;  },&#xA;});&#xA;&#xA;const songsTypes = `&#xA;  type Query {&#xA;    song(id:Int!): Song&#xA;  }&#xA;  type Song {&#xA;    id:Int!&#xA;    name:String!&#xA;  }&#xA;`;&#xA;const songsSchema = makeExecutableSchema({&#xA;  typeDefs: songsTypes,&#xA;  resolvers: {&#xA;    Query: {&#xA;      song: (_, { id }) =&gt; DATA.songs[id],&#xA;    },&#xA;  },&#xA;});&#xA;const songsLinksTypes = `&#xA;  extend type Song {&#xA;    author:Author!&#xA;  }&#xA;`;&#xA;const songsLinksResolvers = mergeInfo =&gt; ({&#xA;  Song: {&#xA;    author: ({ id }, args, context, info) =&gt; {&#xA;      return mergeInfo.delegate(&#xA;        'query',&#xA;        'author',&#xA;        { id },&#xA;        context,&#xA;        info,&#xA;      );&#xA;    }&#xA;  },&#xA;});&#xA;&#xA;module.exports = mergeSchemas({&#xA;  schemas: [authorSchema, songsSchema, songsLinksTypes, authorsLinksTypes],&#xA;  resolvers: mergeInfo =&gt; ({&#xA;    ...songsLinksResolvers(mergeInfo),&#xA;    ...authorsLinksResolvers(mergeInfo),&#xA;  }),&#xA;});&#xA;</code></pre>&#xA;",279481,,279481,2018-03-16 13:16:22,2018-03-17 06:08:26,GraphQL nested resolvers,<node.js><graphql><graphql-js>,1,3,0,2018-03-16 09:57:39
49333050,2,,49317788,1,,"<p>The easiest way to handle this would be to utilize context to pass down the song id. That means you would need to modify the resolver for the <code>song</code> query like this:</p>&#xA;&#xA;<pre><code>Query: {&#xA;  song: (_, { id }, context) =&gt; {&#xA;    context.songId = id&#xA;    return DATA.songs[id]&#xA;  },&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>and then you can grab the id from the context inside your author resolver</p>&#xA;&#xA;<pre><code>Song: {&#xA;  author: (song, args, context, info) =&gt; {&#xA;    const id = song.id || context.songId&#xA;    return mergeInfo.delegate(&#xA;      'query',&#xA;      'author',&#xA;      { id },&#xA;      context,&#xA;      info,&#xA;    );&#xA;  }&#xA;},&#xA;</code></pre>&#xA;",6024220,,,,2018-03-17 06:08:26,"",,0,3,0,2018-03-17 06:08:26
49350265,1,49352792,,1,3336,"<p>So I have a type like this:</p>&#xA;&#xA;<pre><code>type CardStatus {&#xA;  status: String&#xA;  lastUpdated: String&#xA;}&#xA;&#xA;type CardCompany {&#xA;  cardStatus: CardStatus&#xA;}&#xA;&#xA;type ExternalAccounting {&#xA;  cardCompany: CardCompany&#xA;}&#xA;&#xA;type User {&#xA;  balance: String&#xA;  externalAccounting: ExternalAccounting&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And my resolver looks something like this</p>&#xA;&#xA;<pre><code>const User = {&#xA;  balance: (root, args, context) =&gt; getBalance().then((res)=&gt;res)&#xA;  cardStatus: (??)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to use a resolver to set  the nested cardStatus field in the user object.</p>&#xA;&#xA;<p>Balance is the direct field of an object, it's easy- I just run a resolver and return the result to get balance. I want to run a cardStatus api call for the deeply nested cardStatus field, but I have no idea how to do this. I've tried something in my resolver like this:</p>&#xA;&#xA;<pre><code>  const User = {&#xA;    balance: {...}&#xA;    externalAccounting: {&#xA;      cardCompany: {&#xA;        cardStatus: (root) =&gt; { (...) },&#xA;      },&#xA;    },&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>But it doesn't work in that it does not set the cardStatus nested field of the user object. Seems like it should be relatively easy but I can't find an example online..</p>&#xA;",6150829,,6150829,2018-03-18 18:34:28,2018-03-18 21:03:58,Apollo Graphql Resolver for a Nested Object,<graphql><apollo-server>,1,1,0,2018-03-18 16:29:34
49410746,1,,,1,735,"<p>Given a simple schema:</p>&#xA;&#xA;<pre><code>type Feed {&#xA;  posts:[Post]&#xA;  authors:[Author]&#xA;}&#xA;type Post {&#xA;  title:String&#xA;  authorId:String&#xA;  author:Author&#xA;}&#xA;type Author {&#xA;  id:String&#xA;  name:String&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>A consuming app can go ahead and request a feed of posts and their authors in two different ways:&#xA;1) the ""normal"" way to list authors:</p>&#xA;&#xA;<pre><code>Feed { posts { title, author { name } } }&#xA;</code></pre>&#xA;&#xA;<p>2) a way so the app does it's own indexing of authors and therefore limits the response body size (since only unique authors are responded with their details).</p>&#xA;&#xA;<pre><code>Feed { posts { title, authorId } authors {id, name} } &#xA;</code></pre>&#xA;&#xA;<p>This however poses a problem in resolving the query/authors since the list of required author id's is only known after resolving the posts, thus requiring the resolve of authors to wait until posts are resolved.</p>&#xA;&#xA;<p>In short: a field needs to be able to wait on the resolving of a ""sister"" field, prior to be able to resolve itself.</p>&#xA;&#xA;<p>One way of doing it is to create an event emitter, shared through the request context. And this does do the trick, however...&#xA;<strong>I was wondering if there is a better / more elegant solution?</strong></p>&#xA;&#xA;<p>FYI: the above example is simplified, in my use-case there are multiple fields holding relations to ""entities"", making the case for an ""indexed approach"" a lot more efficient.</p>&#xA;&#xA;<pre><code>type RelationType1 { entityId }&#xA;type RelationType2 { entityId, owningEntityId }&#xA;type RelationType3 { entityId, owningEntityId, representedEntityId }&#xA;type Item { rel1:[RelationType1], rel2:[RelationType2], rel3:[RelationType3] ... }&#xA;...&#xA;</code></pre>&#xA;",8952886,,,,2018-03-21 22:34:23,"GraphQL resolving based on ""sister"" fields results",<graphql><apollo>,1,0,0,2018-03-21 15:44:34
49417565,2,,49417113,0,,"<p>In addition to what @H.B. said, your error description:</p>&#xA;&#xA;<blockquote>&#xA;  <p>""I get the error ""Type 'QueryRef>'&#xA;  is not an array type or a string type.""</p>&#xA;</blockquote>&#xA;&#xA;<p>Leads me to believe that <code>this.posts</code> is an object in which case you cannot use the <strong>for'of</strong> syntax. For objects you have to use <strong>for'in</strong>. </p>&#xA;&#xA;<pre><code>for (let key in this.posts) {&#xA;      console.log(""Post name is: "" + this.posts[key].name);&#xA;    }&#xA;</code></pre>&#xA;",6335049,,,,2018-03-21 22:29:13,"",,0,3,0,2018-03-21 22:29:13
49418710,1,,,0,213,"<p>Let's say that I have the following query schema: </p>&#xA;&#xA;<pre><code>schema {&#xA;    query: Query&#xA;}&#xA;&#xA;type Query {&#xA;    money(id: Long!): Money&#xA;    coin(id: Long!): Coin &#xA;}&#xA;&#xA;type Money {&#xA;  id: Long!&#xA;  coins: [Coin!]!&#xA;}&#xA;&#xA;type Coin {&#xA;  id: Long!&#xA;  name: String!&#xA;  history: [DateVal!]&#xA;}&#xA;&#xA;type DateVal {&#xA;   date: String!&#xA;   val: Long!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have two endpoints: <code>/money</code> and <code>/coin</code>, both of which take an id. When I make a request to <code>/money</code> I get back a response like below:</p>&#xA;&#xA;<pre><code>{&#xA;  ""id"": 5,&#xA;  ""coins"": [&#xA;    { ""id"" : 1, ""name"" : ""N1"", ""history"": null},&#xA;    { ""id"" : 2, ""name"" : ""N2"", ""history"": null},&#xA;  ]  &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If I call the <code>coin</code> endpoint with the coin id, I get the full history for the coin. </p>&#xA;&#xA;<p>Is there a way to make GraphQL take a response like this and recursively call the <code>/coin</code> endpoint using the id of each coin in order to fill the history? I tried the following the following query but it didn't recursively call the <code>coin</code> endpoint.</p>&#xA;&#xA;<pre><code>{&#xA;  money(id: 1) {&#xA;    id&#xA;    coins {&#xA;      id&#xA;      name&#xA;      history {&#xA;        date&#xA;        val&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2548635,,,,2018-03-22 00:35:36,Make requests for a list of objects in Graphql response,<graphql>,0,3,0,2018-03-22 00:35:36
49421853,1,49476341,,1,2761,"<p>I want to run Apollo GraphQL server on Google Cloud Functions. It basically boils down to running an Express server with different routes I suppose. Is it possible and if yes then how? Do note that I don't wish to use any Firebase libraries for the same as highlighted here:</p>&#xA;&#xA;<p>1) <a href=""https://stackoverflow.com/questions/43579442/cloud-functions-for-firebase-and-express"">Cloud Functions for Firebase and Express</a></p>&#xA;&#xA;<p>2) <a href=""https://codeburst.io/graphql-server-on-cloud-functions-for-firebase-ae97441399c0"" rel=""nofollow noreferrer"">https://codeburst.io/graphql-server-on-cloud-functions-for-firebase-ae97441399c0</a></p>&#xA;&#xA;<p>3) <a href=""https://codeburst.io/express-js-on-cloud-functions-for-firebase-86ed26f9144c"" rel=""nofollow noreferrer"">https://codeburst.io/express-js-on-cloud-functions-for-firebase-86ed26f9144c</a></p>&#xA;&#xA;<p>Thanks.</p>&#xA;",9162463,,9162463,2018-03-22 17:26:57,2020-12-13 17:37:58,Run Apollo GraphQL Server on Google Cloud Functions,<google-cloud-platform><graphql><google-cloud-functions><apollo-server>,2,0,0,2018-03-22 06:21:09
49476341,2,,49421853,0,,"<p>Thanks to the fantastic work by James Hegedus, this is possible. Check out <a href=""https://github.com/jthegedus/firebase-gcp-examples/tree/main/deprecated/gcp-functions-graphql"" rel=""nofollow noreferrer"">https://github.com/jthegedus/firebase-gcp-examples/tree/main/deprecated/gcp-functions-graphql</a> for the solution.</p>&#xA;",9162463,,380607,2020-12-13 17:37:58,2020-12-13 17:37:58,"",,0,2,0,2018-03-25 13:22:12
49575203,1,49653053,,7,2216,<p>I am interested in the offline and sync capabilities of Amazon's app-sync but I was wondering if it could be used without dynamoDB as the backend.  The graphQL resolvers written in VTL for dynamoDB look atrocious. It seems it would be much nicer to use a mongo backend.  Is that possible?</p>&#xA;,1732297,,,,2018-10-29 06:11:59,Can AWS App-Sync be used without dynamoDB,<mongodb><amazon-dynamodb><graphql><aws-appsync>,2,0,0,2018-03-30 13:16:37
49585938,2,,46849235,9,,"<p>In my case I was getting this error because I wasn't using the correct key in my request to the graphql server.</p>&#xA;&#xA;<p>I was sending a <code>mutation</code> request and I thought the key in the object needed to be <code>""mutation""</code> but it turns out both query and mutation requests use the key <code>""query""</code>.</p>&#xA;&#xA;<pre><code>xhr.open('POST', '/graphql');&#xA;xhr.setRequestHeader(""Content-Type"", ""application/json"");&#xA;&#xA;xhr.send(JSON.stringify({&#xA;  query: mutationString,&#xA;}));&#xA;</code></pre>&#xA;",3498950,,,,2018-03-31 08:42:46,"",,0,0,0,2018-03-31 08:42:46
49653053,2,,49575203,11,,"<p>Yes, you can use AppSync without DynamoDB. You can use ElasticSearch out of the box (you will need to provision the ES cluster and then setup the resolvers) or you can use Lambda and pipe your data to any source, such as mySQL. Here's info on ElasticSearch:&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-elasticsearch-resolvers.html"" rel=""noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-elasticsearch-resolvers.html</a></p>&#xA;",362859,,,,2018-04-04 14:01:31,"",,0,2,0,2018-04-04 14:01:31
49658999,2,,49658886,0,,"<p>Here is a dynamic example for such problems, Please note that this example is working in SQL Server, could not try on mysql for now. Please let me know how it works.</p>&#xA;&#xA;<pre><code>CREATE TABLE mytable&#xA;    (&#xA;      number INT,&#xA;      score INT&#xA;    )&#xA;&#xA;INSERT  INTO mytable VALUES  ( 1, 100)&#xA;INSERT  INTO mytable VALUES  ( 2, 100)&#xA;INSERT  INTO mytable VALUES  ( 2, 120)&#xA;INSERT  INTO mytable VALUES  ( 2, 110)&#xA;INSERT  INTO mytable VALUES  ( 3, 120)&#xA;INSERT  INTO mytable VALUES  ( 3, 150)&#xA;&#xA;SELECT *&#xA;FROM mytable m&#xA;WHERE &#xA;        (&#xA;            SELECT  COUNT(*) &#xA;            FROM    mytable  m2&#xA;            WHERE   m2.number = m.number AND &#xA;                    m2.score &gt;= m.score&#xA;        ) &lt;= 2&#xA;</code></pre>&#xA;",1761307,,,,2018-04-04 19:30:40,"",,0,0,0,2018-04-04 19:30:40
49681144,1,49681533,,1,766,"<p>What follows is all in the AWS console.  My lambda function defines <code>deletePost</code></p>&#xA;&#xA;<pre><code>case ""deletePost"":&#xA;   var id = event.arguments.id;&#xA;   callback(null, {id:-1,author:""me"",title:""title""}); //note, regardless of what your args are right now it is returning id:-1&#xA;   break;&#xA;</code></pre>&#xA;&#xA;<p>My schema is</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;   ...&#xA;   deletePost(id: ID!): Post!&#xA;}&#xA;type Post {&#xA;   id: ID!&#xA;   author: String!&#xA;   title: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and my graphiQL query is</p>&#xA;&#xA;<pre><code>mutation DeletePost{&#xA; deletePost(id: 3){&#xA;  id&#xA; }  &#xA;} &#xA;</code></pre>&#xA;&#xA;<p>For some reason it just parrots <code>id=3</code> back to me when i've hard coded id as -1?  If I ask for author or title to be return in my query I don't get them back at all.  </p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Update  full lambs fxn.  Just a slightly modified version of the template that is provided with the aws appSync docs.</p>&#xA;&#xA;<pre><code>exports.handler = (event, context, callback) =&gt; {&#xA;console.log(""Received event {}"", JSON.stringify(event, 3));&#xA;var posts = { //in memory array store (simulates DB)&#xA;    ""1"": {""id"": ""1"", ""title"": ""First book"", ""author"": ""Author1""},&#xA;    ""2"": {""id"": ""2"", ""title"": ""Second book"", ""author"": ""Author2""},&#xA;    ""3"": {""id"": ""3"", ""title"": ""Third book"", ""author"": ""Author3""},&#xA;    ""4"": {""id"": ""4"", ""title"": ""Fourth book"", ""author"": ""Author4""},&#xA;    ""5"": {""id"": ""5"", ""title"": ""Fifth book"", ""author"": ""Author5""} };&#xA;&#xA;console.log(""Got an Invoke Request: ""+event.field);&#xA;switch(event.field) {&#xA;    case ""getPost"":&#xA;        var id = event.arguments.id;&#xA;        callback(null, posts[id]);&#xA;        break;&#xA;    case ""updatePost"":&#xA;        posts[event.arguments.id]=event.arguments;&#xA;        console.log(posts);&#xA;        callback(null, event.arguments);&#xA;        break;&#xA;    case ""deletePost"":&#xA;        var id = event.arguments.id;&#xA;        //delete posts[event.arguments.id];&#xA;        callback(null, {id:-1,author:""me"",title:""tits""});&#xA;        break;&#xA;    case ""allPosts"":&#xA;        var values = [];&#xA;        for(var d in posts){&#xA;            values.push(posts[d]);&#xA;        }&#xA;        callback(null, values);&#xA;        break;&#xA;    case ""addPost"":&#xA;        var id = event.arguments.id;&#xA;        posts[id]=event.arguments;&#xA;        console.log(posts);&#xA;        callback(null, event.arguments);&#xA;        break;&#xA;    case ""addPostErrorWithData"":&#xA;        var id = event.arguments.id;&#xA;        var result = posts[id];&#xA;        // attached additional error information to the post&#xA;        result.errorMessage = 'Error with the mutation, data has changed';&#xA;        result.errorType = 'MUTATION_ERROR';&#xA;        callback(null, result);&#xA;        break;&#xA;    default:&#xA;        callback(""Unknown field, unable to resolve"" + event.field, null);&#xA;        break;&#xA;  }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Resolvers.  For the most part just pass the data straight through.</p>&#xA;&#xA;<pre><code>#request mapping&#xA;{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"": ""Invoke"",&#xA;    ""payload"": {&#xA;        ""field"": ""addPost"",&#xA;        ""arguments"":  $util.toJson($context.arguments)&#xA;    }&#xA;}&#xA;#responce mapping&#xA;$util.toJson($context.result)&#xA;</code></pre>&#xA;",1732297,,271697,2018-08-24 21:31:08,2018-08-24 21:31:08,"AWS appsync w/ Lambd function backend, GraphQL gives unexpected repsonce to Query",<aws-lambda><graphql><aws-appsync>,1,0,0,2018-04-05 20:39:28
49681533,2,,49681144,0,,"<p>It's hard to know without seeing all of the Lambda function and also your resolver templates. From the above code I'm going to guess you used this tutorial as a starting point: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html</a></p>&#xA;&#xA;<p>Assuming you're passing back the result in the response template, like <code>$util.toJson($context.result)</code>, then the issue is most likely with the structure of the callback in your Lambda function</p>&#xA;&#xA;<pre><code>let result = {""id"" :-1, ""author"":""me"", ""title"":""title""}&#xA;callback(null, result);&#xA;</code></pre>&#xA;&#xA;<p>Essentially you need to pass back a result object for it to be seen in the <code>$context</code> object and converted as a GraphQL JSON response to the caller.</p>&#xA;",2733539,,,,2018-04-05 21:07:07,"",,0,2,0,2018-04-05 21:07:07
49697493,1,,,5,2473,"<p>I have a node.js project powered by apollo-server. I use custom <code>@admin</code> directive that does permission checking on queries, mutations and object fields. For queries and mutation this directive throws errors, for fields it returns null instead of real value. </p>&#xA;&#xA;<p>Now, I want to add graphiql ui to my project, so fellow developers can explore my graphql schema. However, I want them to see the schema as anonymous user sees it, i.e. they should not know about existence of <code>@admin</code> fields and <code>@admin</code> queries and all mutations (even non-admin ones). Even those who have credentials to execute these operations (i.e. logged in as admin) should not see those parts of schema.</p>&#xA;&#xA;<p>As far as I understand, graphiql sends special introspection query, which contains <code>__schema</code> and <code>__type</code> fields to display schema and its documentation.</p>&#xA;&#xA;<p>Is it possible to somehow modify my schema, which is constructed using <code>makeExecutableSchema</code> from <code>graphql-tools</code> to achieve my goal?</p>&#xA;",6212547,,,,2019-01-10 21:19:48,How to limit query introspection,<graphql><apollo><graphql-js><apollo-server><graphql-tools>,3,0,0,2018-04-06 16:42:29
49714484,1,,,6,1383,"<p>The graphql spec mentions that you can send multiple operations in request document as long as you select the operation to run:</p>&#xA;&#xA;<p><a href=""http://facebook.github.io/graphql/October2016/#ExecuteRequest()"" rel=""noreferrer"">http://facebook.github.io/graphql/October2016/#ExecuteRequest()</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>To execute a request, the executor must have a parsed Document (as defined in the “Query Language” part of this spec) and a selected operation name to run if the document defines multiple operations, otherwise the document is expected to only contain a single operation.</p>&#xA;</blockquote>&#xA;&#xA;<p>In what situation, would you send such a document with multiple operations? I can only assume this is to allow for switching between operations without having to create a separate document for each one?</p>&#xA;",1884326,,,,2018-10-16 05:57:19,Why would you send multiple operations in a graphql query document when one can only run at a time?,<graphql>,1,0,0,2018-04-08 04:41:45
49722344,2,,48735707,4,,"<p>I've recently implemented role based authorisation by using <a href=""https://github.com/maticzav/graphql-shield"" rel=""nofollow noreferrer"">GraphQL Shield</a>, I found that using that package was the simplest way to do it. Otherwise you could add custom schema directives, here's a good article on how to do that: <a href=""https://dev-blog.apollodata.com/reusable-graphql-schema-directives-131fb3a177d1"" rel=""nofollow noreferrer"">https://dev-blog.apollodata.com/reusable-graphql-schema-directives-131fb3a177d1</a>.</p>&#xA;&#xA;<p>There are a few steps you need to take to setup GraphQL Shield:</p>&#xA;&#xA;<p>1 - Write an authentication function, here's a rough example you'll want to be doing much more than this i.e using JWTs and not passing the id:</p>&#xA;&#xA;<pre><code>export const isAdmin = async ({ id }) =&gt; {&#xA;  try {&#xA;    const exists = await ctx.db.exists.User({&#xA;      id: userId,&#xA;      role: 'ADMIN',&#xA;    });&#xA;&#xA;    return exists&#xA;  } catch (err) {&#xA;    console.log(err);&#xA;    return false&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>2 - In the file where you export all of your mutations and queries add the check:</p>&#xA;&#xA;<pre><code>const resolvers = {&#xA; ...your queries and mutations&#xA;}&#xA;&#xA;const permissions = {&#xA;   Query: {&#xA;     myQuery: isAdmin&#xA;   }&#xA;}&#xA;&#xA;export default shield(resolvers, permissions);&#xA;</code></pre>&#xA;&#xA;<p>This will now the <code>isAdmin</code> function every time your Query is requested.</p>&#xA;&#xA;<p>I hope that helps</p>&#xA;",3416047,,,,2018-04-08 20:17:02,"",,0,0,0,2018-04-08 20:17:02
49734222,1,49740579,,3,787,"<p>Is the S3Object GraphQL type that is available in AppSync (see Complex objects section in <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-ios.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-ios.html</a>) tied to dynamoDB, or could it be used with a Lambda datasource (say one connecting to a mongoDB)?</p>&#xA;&#xA;<p>From the AWS docs linked above...</p>&#xA;&#xA;<pre><code>type Post {&#xA;    id: ID!&#xA;    author: String!&#xA;    title: String&#xA;    content: String&#xA;    url: String&#xA;    ups: Int&#xA;    downs: Int&#xA;    file: S3Object&#xA;    version: Int!&#xA;}&#xA;&#xA;type S3Object {&#xA;    bucket: String!&#xA;    key: String!&#xA;    region: String!&#xA;}&#xA;&#xA;input S3ObjectInput {&#xA;    bucket: String!&#xA;    key: String!&#xA;    region: String!&#xA;    localUri: String&#xA;    mimeType: String&#xA;}&#xA;</code></pre>&#xA;",1732297,,1732297,2018-04-09 13:49:11,2018-04-09 19:47:56,S3Object GraphQL type in AppSync with Lambda datasource?,<mongodb><amazon-s3><aws-lambda><graphql><aws-appsync>,1,0,0,2018-04-09 13:30:33
49740579,2,,49734222,1,,"<p>I haven't tried this, but you should be able to do what you're looking to accomplish and use a Lambda data source that reads/writes to something else like Mongo or even RDS. AppSync needs the GraphQL types of <code>S3Object</code> and <code>S3ObjectInput</code> along with the fields like <code>bucket</code> and so forth listed above for the client SDKs and codegen to properly build out objects, however the S3Link functionality is done in the resolver itself both for reading and writing. You could move this to your logic layer in a Lambda.</p>&#xA;&#xA;<p>If you look at <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html#dynamodb-helpers-in-util-dynamodb"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html#dynamodb-helpers-in-util-dynamodb</a> you will see the mapping function signatures and output:</p>&#xA;&#xA;<pre><code>$util.dynamodb.toS3Object(String key, String bucket, String region) : Map&#xA;$util.dynamodb.toS3ObjectJson(String key, String bucket, String region) : String&#xA;$util.dynamodb.toS3Object(String key, String bucket, String region, String version) : Map&#xA;$util.dynamodb.toS3ObjectJson(String key, String bucket, String region, String version) : String&#xA;$util.dynamodb.fromS3ObjectJson(String) : Map&#xA;</code></pre>&#xA;&#xA;<p>So if you want to move this logic to write/read into a Lambda that's completely possible. If you standup this sample you'll be able to reverse engineer it: <a href=""https://github.com/aws-samples/aws-amplify-graphql"" rel=""nofollow noreferrer"">https://github.com/aws-samples/aws-amplify-graphql</a></p>&#xA;",2733539,,,,2018-04-09 19:47:56,"",,0,0,0,2018-04-09 19:47:56
49742826,2,,49518557,8,,"<p>This is possible in AppSync today.</p>&#xA;&#xA;<p>To accomplish this, you could add a query field to your schema called <code>getUser</code> (<code>getUser</code> makes more sense than <code>getFeeds</code> in this case) and it would have a resolver which retrieves a User object from a data source.</p>&#xA;&#xA;<pre><code>type Query {&#xA;    getAllUsers(limit: Int): [User]&#xA;    getUser(id:ID!): User&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then, you can also add resolvers on the <code>User.following</code> and <code>User.userFeed</code> fields. The <code>User.following</code> resolver would query your data source and retrieve users whom somebody is following. The <code>User.userFeed</code> resolver would query your data source to retrieve a list of user feeds. </p>&#xA;&#xA;<p>Both of these resolvers (<code>User.following</code> and <code>User.userFeed</code>) should utilize <code>$context.source</code> in the resolver's request mapping template. This variable will contain the result of your <code>getUser</code> resolver. The request mapping template's job is to create a query which your data source understands.</p>&#xA;&#xA;<p>An example request mapping template which might be attached to <code>User.following</code> could be similar to the following. It would query a table named ""Following"", which has a primary partition key of id (the id of the user):</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Query"",&#xA;    ""query"" : {&#xA;        ## Provide a query expression. **&#xA;        ""expression"": ""id = :id"",&#xA;        ""expressionValues"" : {&#xA;            "":id"" : {&#xA;                ## Use the result of getUser to populate the query parameter **&#xA;                ""S"" : ""${ctx.source.id}""&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You would have to do something similar for <code>User.userFeed</code> resolver.</p>&#xA;&#xA;<p>After you're all setup, you can run the below query, and the following will happen: </p>&#xA;&#xA;<pre><code>query {&#xA;    getUser(id:""myUserId"") {&#xA;    following {&#xA;      userFeed {&#xA;        id&#xA;        ImageDataUrl&#xA;        textData&#xA;        date&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<ol>&#xA;<li><code>getUser</code> resolver will run first. It will query your User data source and retrieve the user.</li>&#xA;<li><code>User.following</code> resolver will run. It will use the result of it's parent field resolver (<code>getUser</code>) to query the data source for following.</li>&#xA;<li><code>User.userFeed</code> resolver will run. It will use the result of it's parent field resolver (<code>getUser</code>) to query the user feed data source.</li>&#xA;</ol>&#xA;",5683782,,,,2018-04-09 22:51:02,"",,0,0,0,2018-04-09 22:51:02
49858766,1,49991411,,2,1505,"<p>I'm having the serverless error:&#xA;<code>Resolver associated with data sources</code> when building from serverless.yml config file:</p>&#xA;&#xA;<pre><code># serverless.yml&#xA;...&#xA;mappingTemplates:&#xA;  - dataSource: Wallet&#xA;    type: Query&#xA;    field: walletFromId&#xA;    request: ""_dynamo-get-wallet.txt""&#xA;    response: ""_generic-result-response.txt""&#xA;  - dataSource: Wallet&#xA;    type: Query&#xA;    field: walletsFromUser&#xA;    request: ""_dynamo-get-wallets-from-user.txt""&#xA;    response: ""_generic-result-response.txt""&#xA;  - dataSource: Wallet&#xA;    type: Mutation&#xA;    field: registerWallet&#xA;    request: ""_dynamo-put-wallet.txt""&#xA;    response: ""_generic-result-response.txt""&#xA;dataSources:&#xA;  - type: AMAZON_DYNAMODB&#xA;    name: Wallet&#xA;    description: 'Wallet DataSource'&#xA;    config:&#xA;      tableName: ""${self:custom.stage}-Wallet""&#xA;      serviceRoleArn: ""arn:aws:iam::${self:custom.accountId}:role/${self:custom.appSync.serviceRole}""&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>I also have a schema.graphql:</p>&#xA;&#xA;<pre><code>type Query {&#xA;    # query the wallet with given id and get the output with detail info&#xA;    walletFromId(walletId: String!): Wallet!&#xA;    # query wallets with given user id and get list of cards&#xA;    walletsFromUser(userId: String!): [Wallet!]!&#xA;}&#xA;&#xA;type Mutation {&#xA;    # Add a wallet to an existing user&#xA;    registerWallet(userId: String!, number: String!, cvx: String!, expirationDate: String!): Wallet!&#xA;}&#xA;type Wallet {&#xA;    walletId: String!&#xA;    userId: String!&#xA;    number: String!&#xA;    cvx: String!&#xA;    expirationDate: String!&#xA;}&#xA;&#xA;type Subscription {&#xA;    addWallet: Wallet&#xA;    @aws_subscribe(mutations: [""registerWallet""])&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;    mutation: Mutation&#xA;    subscription: Subscription&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I could not find a single clue as to what this error mean, and there isn't anything else I can get from the build logs.</p>&#xA;",2656029,,,,2018-04-23 23:42:59,Error: Resolver associated with data sources,<amazon-dynamodb><graphql><serverless><aws-appsync>,1,0,0,2018-04-16 13:41:34
49952973,1,49959070,,0,17,"<p>According to the <a href=""http://facebook.github.io/graphql/October2016/#sec-Response-Format"" rel=""nofollow noreferrer"">GraphQL specification</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <h3>Response Format</h3>&#xA;  &#xA;  <p>A response to a GraphQL operation must be a map.</p>&#xA;  &#xA;  <p>If the operation <strong>included execution</strong>, the response map must contain a first entry with key data.</p>&#xA;</blockquote>&#xA;&#xA;<p>When does a GraphQL operation not include execution?</p>&#xA;",9335128,,,,2018-04-21 18:40:51,When does an operation not include execution?,<graphql>,1,0,0,2018-04-21 06:20:49
49991411,2,,49858766,8,,<p>This error usually means you are trying to delete a data source that is currently being used by a resolver. If you can identify the resolver pointing to the data source and delete it then you should no longer see the error message.</p>&#xA;,2088684,,,,2018-04-23 23:42:06,"",,0,5,0,2018-04-23 23:42:06
50028568,2,,50028033,0,,"<p>Process api result using map functions </p>&#xA;&#xA;<pre><code>`var newHashmap = {}; &#xA; Object.keys(hashmap).forEach(function(key){ &#xA; var value = hashmap[key]; &#xA; key = key + ""xxx""; &#xA; console.log(""changing:""); &#xA; console.log(key); newHashmap[key] = value &#xA; });`&#xA;</code></pre>&#xA;",9058286,,,,2018-04-25 17:56:43,"",,0,0,0,2018-04-25 17:56:43
50050340,1,,,2,702,"<p>Using Cognito user pools as my auth method, I am able to login verified users through the app and then those authenticated users can write to DynamoDB with an AppSync mutation just fine. The S3Object info is also populated in Dynamo as a JSON string like so:</p>&#xA;&#xA;<pre><code>""pdf"": ""{\""s3\"":{\""key\"":\""6_A_2018-04-26_etc.pdf\"",\""bucket\"":\""#####\"",\""region\"":\""us-west-2\""}}""&#xA;</code></pre>&#xA;&#xA;<p>The request mapping template for the create mutation in AppSync is:</p>&#xA;&#xA;<pre><code>{&#xA;""version"" : ""2017-02-28"",&#xA;""operation"" : ""PutItem"",&#xA;""key"" : {&#xA;    ""id"" : { ""S"" : ""${util.autoId()}"" }&#xA;},&#xA;#set( $attribs = $util.dynamodb.toMapValues($ctx.args.input) )&#xA;#if($util.isNull($ctx.args.input.pdf.version))&#xA;    #set( $attribs.pdf = $util.dynamodb.toS3Object($ctx.args.input.pdf.key, $ctx.args.input.pdf.bucket, $ctx.args.input.pdf.region))&#xA;#else&#xA;    #set( $attribs.pdf = $util.dynamodb.toS3Object($ctx.args.input.pdf.key, $ctx.args.input.pdf.bucket, $ctx.args.input.pdf.region, $ctx.args.input.pdf.version))&#xA;#end&#xA;""attributeValues"" : $util.toJson($attribs)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Response mapping template:</p>&#xA;&#xA;<pre><code>$util.toJson($ctx.result)&#xA;</code></pre>&#xA;&#xA;<p>pdf (S3Object) request mapping template (I've tried both the version and empty payload {} None resolver and this one):</p>&#xA;&#xA;<pre><code>{&#xA;  ""version"" : ""2017-02-28"",&#xA;  ""operation"" : ""Query"",&#xA;  ""query"" : {&#xA;      ## Provide a query expression. **&#xA;      ""expression"": ""id = :id"",&#xA;      ""expressionValues"" : {&#xA;          "":id"" : {&#xA;              ""S"" : ""${ctx.args.id}""&#xA;          }&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Response mapping template for pdf:</p>&#xA;&#xA;<pre><code>$util.toJson($util.dynamodb.fromS3ObjectJson($context.source.pdf))&#xA;</code></pre>&#xA;&#xA;<p>But NO S3 OBJECT is created in the bucket. However, if I use S3TransferUtility.default() on its own to send the upload request, it works perfectly fine, so I must have the correct permissions set for PutObject (also GetObject and ListObjects as I can also list / download objects from the bucket with s3TransferUtility).</p>&#xA;&#xA;<p>Since AppSync is supposed to be using S3TransferUtility.default(), does anyone have any ideas for why the upload is not happening automatically? My view controller is dismissed afterwards, like in the tutorials, but that shouldn't be a problem because I am using the optimistic response method and it is not throwing any errors. I also tried simply using the perform mutation function without the optimistic response. Also I've tried NOT dismissing the view controller and waiting. Still no upload to S3, but the write to Dynamo never fails! Even optimistically updates to Dynamo when I return from airplane mode. File size for PDF doc is ~250KB.</p>&#xA;&#xA;<p>By the way, the following also does work after pulling in my items from Dynamo using a graphql listAll query and only after uploading to S3 manually so it's actually in the bucket (I'm missing some optional chaining I am at work this part is from memory):</p>&#xA;&#xA;<pre><code>let s3Object = S3Object.init(snapshot: selectedItem.pdf.snapshot)&#xA;appSyncClient.s3ObjectManager.download(s3Object: s3Object, toURL: url) { ifSuccess, error in&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>Something like that. It does download the object, but it's because I called it manually. To be fair, I'm actually not sure what the intended functionality of a retrieved S3Object from a graphql query is (is it supposed to download it automatically...? Do I have access to that item as anything other than a AllPostsQuery.Data.ListPost.Item.Pdf or are we meant to download ourselves using the bucket, key, region as I have?) That's off topic, I suppose.</p>&#xA;&#xA;<p>Any help would be much appreciated I'm really banging my head against the wall on this one.</p>&#xA;&#xA;<p>EDIT: <a href=""https://forums.aws.amazon.com/thread.jspa?threadID=281138&amp;tstart=0"" rel=""nofollow noreferrer"">More / updated info here on the AWS Forums</a></p>&#xA;&#xA;<p>EDIT: GitHub issue has elicited a response from AWS and they are <a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-ios/issues/25"" rel=""nofollow noreferrer"">looking into it</a></p>&#xA;",8174507,,8174507,2018-05-21 01:39:10,2018-09-05 10:33:37,AWS Appsync - Unable to upload S3Object to bucket automatically with Cognito User Pools - iOS,<ios><swift><amazon-s3><graphql><aws-appsync>,0,4,0,2018-04-26 19:09:30
50069352,1,51383234,,6,4819,"<p>There is <a href=""https://github.com/serverless/serverless-graphql"" rel=""noreferrer"">this great repository</a> with example implementations of different serverless scenarios.</p>&#xA;&#xA;<p>Right now I'm struggling with the combination of AppSync and Amazon RDS. I tried the implementation of the standalone rds, and the appsync examples provided in the repository. These are working like a charm.&#xA;But obviously there are many differences and difficulties if you'd like to combine these technologies. I used the schema, resolver and handler functions from the rds directory and combined it with the appsync lambda implementation. I adjusted the mapping templates and updated the serverless.yml file.</p>&#xA;&#xA;<p>I could successfully deploy the whole appsync service and all resources without any errors. I'm able to access the graphql endpoint from graphiql and do my queries. But when I try it from the appsync console I get null as a response. I guess it has something to do with the mapping templates, but I'm not quite sure.</p>&#xA;&#xA;<p>Has anybody got any suggestions or maybe a working example of this specific combination?</p>&#xA;",5448519,,,,2021-08-13 20:28:42,Use AppSync and Amazon RDS with serverless-graphql,<node.js><graphql><amazon-rds><serverless-framework><aws-appsync>,1,4,0,2018-04-27 19:47:33
50116611,1,50116831,,0,250,"<p>I have a nodejs lambda function deployed on aws which exposes a lambda endpoint via API Gateway.&#xA;The endpoint is <a href=""https://z8zch5bp3m.execute-api.us-east-1.amazonaws.com/test?query=%7B%0A%09addNumbers(number1%3A1%2C%20number2%3A55)%20%7B%0A%20%20%20%20add%0A%20%20%7D%0A%7D"" rel=""nofollow noreferrer"">here</a> and allows you to access the graphiql endpoint.</p>&#xA;&#xA;<p>I have been trying to call this from my react code but I am getting the following error response</p>&#xA;&#xA;<pre><code>{""message"":""Missing Authentication Token""}&#xA;</code></pre>&#xA;&#xA;<p>And the following console warning</p>&#xA;&#xA;<pre><code>Failed to load https://z8zch5bp3m.execute-api.us-east-1.amazonaws.com/test: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:3000' is therefore not allowed access. The response had HTTP status code 403. If an opaque response serves your needs, set the request's mode to 'no-cors' to fetch the resource with CORS disabled.&#xA;</code></pre>&#xA;&#xA;<p>I have enabled cors in the API gateway but still getting this error.</p>&#xA;&#xA;<p>My simple react code is as follows</p>&#xA;&#xA;<pre><code>import React, { Component } from 'react';&#xA;import { gql } from 'apollo-boost';&#xA;import { Query } from 'react-apollo';&#xA;&#xA;const ADD_NUMBERS = gql`&#xA;  query {&#xA;      addNumbers(number1:1, number2:55) {&#xA;        add&#xA;      }    &#xA;  }&#xA;`&#xA;&#xA;&#xA;const App = () =&gt; (&#xA;  &lt;Query query={ADD_NUMBERS}&gt;&#xA;    {({ loading, error, data }) =&gt; {&#xA;      if (loading) return &lt;div&gt;Loading...&lt;/div&gt;;&#xA;      if (error) return &lt;div&gt;Error :(&lt;/div&gt;;&#xA;&#xA;      return (&#xA;        &lt;div&gt;Data: {data}&lt;/div&gt;&#xA;      )&#xA;    }}&#xA;  &lt;/Query&gt;&#xA;)&#xA;&#xA;export default App;&#xA;</code></pre>&#xA;&#xA;<p>The nodejs code for my lambda function is located <a href=""https://drive.google.com/file/d/1_Hry3waLffFu4PBVrqOb7GbZg0WMiS6d/view?usp=sharing"" rel=""nofollow noreferrer"">here</a></p>&#xA;&#xA;<p>Please let me know if I need to do anything to get this lambda call working.</p>&#xA;",11612,,11612,2018-05-01 12:44:25,2018-05-01 14:23:31,ReactJS - NodeJS - Issue Connecting to Graphql On AWS Lambda,<node.js><lambda><graphql><aws-api-gateway><apollo-client>,2,0,0,2018-05-01 12:38:36
50117672,1,50198626,,0,761,"<p>I'm trying to create a fully AppSync managed API.</p>&#xA;&#xA;<p>I'm using a Custom Lambda Authorizer and I want to authenticate some <code>mutation</code>s. I've read <a href=""https://hackernoon.com/graphql-authorization-with-multiple-data-sources-using-aws-appsync-dfae2e350bf2"" rel=""nofollow noreferrer"">this</a> very interesting post on nested resolvers and <a href=""https://stackoverflow.com/questions/48432576/aws-appsync-authorization"">this</a> stackoverflow post but I still can't find a solution to my problem.</p>&#xA;&#xA;<p>So, I have a <code>mutation</code>, say <code>createReview</code> that should be solved by a DynamoDB resolver and I want my Custom Lambda Authorizer to both authorize and authenticate <code>createReview</code> request.</p>&#xA;&#xA;<p>How should this be organized?</p>&#xA;&#xA;<p>I know I could either solve my <code>createReview</code> request by using a <code>Lambda</code> resolver, or that I could use AWS Cognito as Authorizer, but I'm trying to achieve right what I've asked.</p>&#xA;&#xA;<p>Thank you for any advice</p>&#xA;",2331491,,2331491,2018-05-02 04:43:47,2018-05-06 10:24:28,Authenticate a mutation via a Custom Lambda Authorizer on AppSync,<amazon-web-services><graphql><aws-appsync>,1,0,0,2018-05-01 13:48:05
50134657,1,50135484,,8,17722,"<p>Basically what I'm trying to achieve is send info to the server without quotations e.g Admin instead of ""Admin"", but as we all know Graphql will throw an error is the variable is not defined or is not in quotations. </p>&#xA;",7527762,,,,2020-12-21 17:54:09,How do i define an enum in react native,<javascript><react-native><enums><graphql>,4,0,0,2018-05-02 12:27:39
50198626,2,,50117672,0,,"<p>The post I had linked was already giving enough information to solve the problem.</p>&#xA;&#xA;<p>I was stubbornly hooked on the usage of mutation because I didn't have enough knowledge on GraphQL to know what makes it different from query.</p>&#xA;&#xA;<p>Abandoning mutation and using query is enough to solve the problem.</p>&#xA;&#xA;<p>So I have a </p>&#xA;&#xA;<pre><code>type Object {&#xA;   field1: String!&#xA;   field2: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and a </p>&#xA;&#xA;<pre><code>type AuthObject {&#xA;    field1: String!&#xA;    field2: String&#xA;    data: Object&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>my query is like</p>&#xA;&#xA;<pre><code>type Query {&#xA;    createObject (&#xA;        field1: String!&#xA;        field2: String&#xA;    ) : AuthObject&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and an authenticator lambda function, to which all the arguments and the authentication token are passed. This function's job is to validate the token and, if valid, to return all the arguments. In the output mapping template if the lambda failed to authenticate GraphQL raises an <code>unauthenticated</code> message, otherwise returns the arguments.</p>&#xA;&#xA;<p>Then, I have attached these resolvers:</p>&#xA;&#xA;<pre><code>createObject =&gt; a resolver that calls the lambda and maps input and output&#xA;&#xA;AuthObject.data:Object =&gt; a dynamodb resolver that calls PutItem using `$ctx.source` to retrieve the arguments.&#xA;</code></pre>&#xA;&#xA;<p>It's actually the same as the <a href=""https://hackernoon.com/graphql-authorization-with-multiple-data-sources-using-aws-appsync-dfae2e350bf2"" rel=""nofollow noreferrer"">hackernoon post</a>, I simply used PostItem instead of GetItem.</p>&#xA;",2331491,,,,2018-05-06 10:24:28,"",,0,0,0,2018-05-06 10:24:28
50242992,1,,,1,1090,"<p>I am replacing an existing REST endpoint with GraphQL. </p>&#xA;&#xA;<p>In our existing REST endpoint, we return a JSON array. </p>&#xA;&#xA;<pre><code>[{&#xA;    ""id"": ""ABC""&#xA;  },&#xA;  {&#xA;    ""id"": ""123""&#xA;  },&#xA;  {&#xA;    ""id"": ""xyz""&#xA;  },&#xA;  {&#xA;    ""id"": ""789""&#xA;  }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>GraphQL seems to be wrapping the array in two additional object layers. Is there any way to remove the ""data"" and ""Client"" layers?</p>&#xA;&#xA;<p>Response data: </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""Client"": [&#xA;      {&#xA;        ""id"": ""ABC""&#xA;      },&#xA;      {&#xA;        ""id"": ""123""&#xA;      },&#xA;      {&#xA;        ""id"": ""xyz""&#xA;      },&#xA;      {&#xA;        ""id"": ""789""&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My query: </p>&#xA;&#xA;<pre><code>{&#xA;  Client(accountId: ""5417727750494381532d735a"") {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4242837,,,,2018-05-09 00:35:20,"express-graphql: How to remove external ""data"" object layer.",<express><graphql><express-graphql>,1,0,0,2018-05-08 22:13:51
50244550,2,,50224258,3,,"<p>If you use the <code>aws-amplify</code> libraries, it's a lot easier.  Take a look at the section on authentication in the README.md at <a href=""https://github.com/aws/aws-amplify#2-add-authentication-to-your-app"" rel=""nofollow noreferrer"">https://github.com/aws/aws-amplify#2-add-authentication-to-your-app</a> to use it to add AWS Cognito authentication to your app.  After that, you can configure the credentials for AWS AppSync via the following</p>&#xA;&#xA;<pre><code>import { Auth } from 'aws-amplify';&#xA;import AWSAppSyncClient from 'aws-appsync';&#xA;import { AUTH_TYPE } from 'aws-appsync/lib/link/auth-link'&#xA;import AppSync from './AppSync.js';&#xA;&#xA;const client = new AWSAppSyncClient({&#xA;    url: AppSync.graphqlEndpoint,&#xA;    region: AppSync.region,&#xA;    auth: {&#xA;        type: AUTH_TYPE.AWS_IAM,&#xA;        credentials: () =&gt; Auth.currentCredentials()&#xA;    },&#xA;    complexObjectsCredentials: () =&gt; Auth.currentCredentials(),&#xA;});&#xA;</code></pre>&#xA;",302804,,,,2018-05-09 02:10:54,"",,0,2,0,2018-05-09 02:10:54
50244675,2,,45625548,7,,"<p>The correct approach here is to perform an actual S3 upload via a complex type using AWS AppSync - what you illustrate here looks more like you are attempting to save a base64 encoded image as a string to a field in what I can only assume to be a DynamoDB table entry.  For this to work, though, you need to modify your mutation such that the <code>file</code> field is not a <code>String!</code>, but an <code>S3ObjectInput</code>.</p>&#xA;&#xA;<p>There's a few moving parts under the hood you need to make sure you have in place before this ""just works"" (TM).  First of all, you need to make sure you have an appropriate input and type for an S3 object defined in your GraphQL schema</p>&#xA;&#xA;<pre><code>enum Visibility {&#xA;    public&#xA;    private&#xA;}&#xA;&#xA;input S3ObjectInput {&#xA;    bucket: String!&#xA;    region: String!&#xA;    localUri: String&#xA;    visibility: Visibility&#xA;    key: String&#xA;    mimeType: String&#xA;}&#xA;&#xA;type S3Object {&#xA;    bucket: String!&#xA;    region: String!&#xA;    key: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The <code>S3ObjectInput</code> type, of course, is for use when uploading a new file - either by way of creating or updating a model within which said S3 object metadata is embedded.  It can be handled in the request resolver of a mutation via the following:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""PutItem"",&#xA;    ""key"": {&#xA;        ""id"": $util.dynamodb.toDynamoDBJson($ctx.args.input.id),&#xA;    },&#xA;&#xA;    #set( $attribs = $util.dynamodb.toMapValues($ctx.args.input) )&#xA;    #set( $file = $ctx.args.input.file )&#xA;    #set( $attribs.file = $util.dynamodb.toS3Object($file.key, $file.bucket, $file.region, $file.version) )&#xA;&#xA;    ""attributeValues"": $util.toJson($attribs)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is making the assumption that the S3 file object is a child field of a model attached to a DynamoDB datasource.  Note that the call to <code>$utils.dynamodb.toS3Object()</code> sets up the complex S3 object <code>file</code>, which is a field of the model with a type of <code>S3ObjectInput</code>.  Setting up the request resolver in this way handles the upload of a file to S3 (when all the credentials are set up correctly - we'll touch on that in a moment), but it doesn't address how to get the <code>S3Object</code> back.  This is where a field level resolver attached to a local datasource becomes necessary.  In essence, you need to create a local datasource in AppSync and connect it to the model's <code>file</code> field in the schema with the following request and response resolvers:</p>&#xA;&#xA;<pre><code>## Request Resolver ##&#xA;{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""payload"": {}&#xA;}&#xA;&#xA;## Response Resolver ##&#xA;$util.toJson($util.dynamodb.fromS3ObjectJson($context.source.file))&#xA;</code></pre>&#xA;&#xA;<p>This resolver simply tells AppSync that we want to take the JSON string that is stored in DynamoDB for the <code>file</code> field of the model and parse it into an <code>S3Object</code> - this way, when you do a query of the model, instead of returning the string stored in the <code>file</code> field, you get an object containing the <code>bucket</code>, <code>region</code>, and <code>key</code> properties that you can use to build a URL to access the S3 Object (either directly via S3 or using a CDN - that's really dependent on your configuration).</p>&#xA;&#xA;<p>Do make sure you have credentials set up for complex objects, however (told you I'd get back to this).  I'll use a React example to illustrate this - when defining your AppSync parameters (endpoint, auth, etc.), there is an additional property called <code>complexObjectCredentials</code> that needs to be defined to tell the client what AWS credentials to use to handle S3 uploads, e.g.:</p>&#xA;&#xA;<pre><code>const client = new AWSAppSyncClient({&#xA;    url: AppSync.graphqlEndpoint,&#xA;    region: AppSync.region,&#xA;    auth: {&#xA;        type: AUTH_TYPE.AWS_IAM,&#xA;        credentials: () =&gt; Auth.currentCredentials()&#xA;    },&#xA;    complexObjectsCredentials: () =&gt; Auth.currentCredentials(),&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Assuming all of these things are in place, S3 uploads and downloads via AppSync should work.</p>&#xA;",302804,,302804,2018-05-09 03:56:27,2018-05-09 03:56:27,"",,0,0,0,2018-05-09 02:28:46
50278423,1,50284901,,0,1048,"<p>I'm currently using Amazon's dashboard to create my schema and attach a resolver. When I do a pull request on my command line to sync my changes to my front end client, I pull all the resolvers that were ever created (even the ones where I deleted the associated type in the schema). Is there a way to manually remove resolvers from my AppSync backend?</p>&#xA;",8400466,,,,2018-05-11 04:12:51,Manually delete resolvers from a project on AWS AppSync?,<amazon-web-services><graphql><aws-appsync>,1,0,0,2018-05-10 17:31:32
50284901,2,,50278423,1,,<p>You can use the AWS CLI and call the delete resolver with the following parameters. </p>&#xA;&#xA;<pre><code>  delete-resolver&#xA;     --api-id &lt;value&gt;&#xA;     --type-name &lt;value&gt;&#xA;     --field-name &lt;value&gt;&#xA;</code></pre>&#xA;&#xA;<p>I am on the AWS AppSync team and I will bring this issue up with the team.</p>&#xA;,6241856,,,,2018-05-11 04:12:51,"",,0,1,0,2018-05-11 04:12:51
50306553,2,,46969885,2,,"<p>If your enum values are loaded from a <code>database</code> or any other back-end source, or if the enum list is <code>dynamic</code>, then you can't have a <code>static</code> enum definition in your schema.</p>&#xA;&#xA;<p>The biggest problem with setting enums dynamically is that your schema is meant to be a contract between back-end and front-end and is not suppose to be altered.</p>&#xA;&#xA;<h3>If you are going to use your role as an arbitrary string then define it as such!</h3>&#xA;&#xA;<pre><code>type Mutation {&#xA;  createUser(firstName: String, lastName: String, role: String): User&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The only difference here would be that your resolver will have to check if the role exists, which is what graphql previously did for you when you were using an enum.</p>&#xA;&#xA;<h3>Alternatively</h3>&#xA;&#xA;<p>If the role is used on a lot of queries / mutations, you can define a <code>scalar Role</code> and in the resolved for the scalar you can check if the role exists and simply throw an error if it doesn't.</p>&#xA;&#xA;<p>In this case your mutation would look the same as if you had a dynamic <code>enum Role</code>, but you will not need to alter the schema at all.</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;  createUser(firstName: String, lastName: String, role: Role): User&#xA;}&#xA;</code></pre>&#xA;",2100372,,2100372,2018-05-31 21:31:42,2018-05-31 21:31:42,"",,0,0,0,2018-05-12 13:04:40
50352821,1,,,3,407,"<p>I want to write this raw query using the TypeORM <code>createQueryBuilder</code>. How can I achieve this?</p>&#xA;<pre><code>SELECT *&#xA;FROM Location l&#xA;INNER JOIN LocationType t ON l.TypeId = t.Id&#xA;LEFT JOIN Location p ON l.ParentId = p.Id&#xA;LEFT JOIN (SELECT locationId, SUM(Units) TotalUnits FROM ItemInventory GROUP BY LocationId) qty ON l.Id = qty.LocationId`&#xA;</code></pre>&#xA;",4560868,,10158227,2021-11-15 19:06:14,2021-11-15 19:06:14,How can I write this query using TypeORM createQueryBuilder?,<node.js><graphql><typeorm>,0,1,0,2018-05-15 14:29:47
50354269,2,,50253877,2,,"<p>I finally got it! Here is the proper way to throw, catch, and format errors that are generated in a lambda function with serverless. The trick is to create a modified callback which gets passed into the graphQL Handler. When the function gets resolved, it will run through any code that you want. </p>&#xA;&#xA;<p>Also, Seanvm was right that looking into the type of lambda function is important- serverless sets up a proxy-lambda function by default which necessitates formatting the output like I do below and passing null as the error.</p>&#xA;&#xA;<pre><code>exports.server = (event, context, callback) =&gt; {&#xA;  const modifiedCallback = (error, output) =&gt; {&#xA;    if (output.body.includes('401')) {&#xA;      callback(null, {&#xA;        statusCode: 401,&#xA;        headers: { 'Content-Type': 'application/javascript' },&#xA;        body: JSON.stringify({ message: 'Unauthorized' })&#xA;      });&#xA;    } else {&#xA;      callback(error, output);&#xA;    }&#xA;  };&#xA;  return lambda.graphqlHandler(event, context, modifiedCallback);&#xA;};&#xA;</code></pre>&#xA;",2232620,,,,2018-05-15 15:41:23,"",,0,0,0,2018-05-15 15:41:23
50369374,1,,,3,315,"<p>What does a resolver function look like that returns an enum in graphql-yoga? ‍♀️ I can't find any examples in their docs.</p>&#xA;&#xA;<pre><code>query{&#xA;  search() : CreateUrlResponse!&#xA;}&#xA;&#xA;type CreateUrlResponse {&#xA;    searchResult: String!&#xA;    error: CreateUrlError&#xA;}&#xA;&#xA;enum CreateUrlError {&#xA;  Error1&#xA;  Error2&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>resolver :</p>&#xA;&#xA;<pre><code>export const query = {&#xA;&#xA;    async search(parent, args, ctx: Context, info) {&#xA;      ???&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",5615794,,,,2018-05-16 11:20:01,What does a resolver function look like that returns an enum in graphql-yoga?,<graphql><graphql-js>,2,0,0,2018-05-16 11:12:53
50389859,1,50392525,,15,5898,"<p>I agree Apollo Client is a pain to set up because of lots of boilerplate (although it becomes simple after reading the docs) &amp; things like AWS Amplify, URQL, Apollo Boost &amp; Micro GraphQL React makes it easy to work with GraphQL on the client.</p>&#xA;&#xA;<p>I am currently working with AWS AppSync &amp; want to choose between AWS Amplify &amp; Apollo Client &amp; I was thinking of going in all AWS. </p>&#xA;&#xA;<p>So what is the difference between AWS Amplify &amp; Apollo Client?</p>&#xA;",6141587,,,,2018-05-17 13:20:22,Difference between AWS Amplify & Apollo Client for GraphQL?,<reactjs><graphql><apollo-client><aws-appsync><aws-amplify>,1,0,0,2018-05-17 11:03:28
50414218,1,50414428,,3,434,"<p>I am trying to follow <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-programming-guide.html#setup"" rel=""nofollow noreferrer"">this tutorial on the AWS Site</a>.</p>&#xA;&#xA;<p>I added the <strong>GraphQL Schema</strong> but then when I try to add the <strong>Lambda Function</strong> in the <strong>Data Sources</strong> I can't add it because the <strong>Function ARN</strong> field is disabled.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/v7QsX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/v7QsX.png"" alt=""aws""></a></p>&#xA;&#xA;<p>How do I add Lambda function to AWS AppSync?</p>&#xA;",6141587,,,,2018-05-18 15:15:09,Add Lambda function to AWS AppSync Data Source?,<javascript><amazon-web-services><aws-lambda><graphql><aws-appsync>,1,0,0,2018-05-18 15:02:13
50414428,2,,50414218,3,,"<p>The drop-down lets you select an AWS Lambda function from the region selected in the ""Region"" drop-down. If you don't see anything populated in the list, it usually means that no Lambda functions exist in that region. </p>&#xA;&#xA;<p>Can you check if you have Lambda functions in SA-EAST-1? </p>&#xA;",137598,,,,2018-05-18 15:15:09,"",,0,3,0,2018-05-18 15:15:09
50455073,2,,50263341,3,,"<p>You can do the following to enable this use-case with AppSync.</p>&#xA;&#xA;<ol>&#xA;<li>Add a ""groupId"" argument to your subscription.</li>&#xA;<li>Attach a subscription resolver to your subscription.</li>&#xA;<li>In the subscription resolver's request mapping template, query the User table to determine which groups the caller is authorized for.</li>&#xA;<li>In the subscription response mapping template, cross-check the subscription ""groupId"" argument with the list of groups you retrieved from your User's table query. Reject the request if the caller is attempting to subscribe to a group they are not authorized for.</li>&#xA;<li>Make sure your mutation returns a groupId field so AppSync's subscriptions can properly route your messages.</li>&#xA;</ol>&#xA;&#xA;<p>You can then have a client subscribe multiple times, once for each group they want notifications for.</p>&#xA;&#xA;<p>Here is the subscription authorization documentation which contains an example which is similar to yours: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/security-authorization-use-cases.html#real-time-data"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/security-authorization-use-cases.html#real-time-data</a></p>&#xA;",5683782,,,,2018-05-21 19:01:01,"",,0,0,0,2018-05-21 19:01:01
50466704,1,,,1,3188,"<p>I want to allow one of the fields to be either 1, 2 or 3. I am not exactly sure how to do that in <a href=""http://GraphQL-JS"" rel=""nofollow noreferrer"">http://graphql.org/graphql-js/type/</a></p>&#xA;&#xA;<p>Because I would need to do something like:</p>&#xA;&#xA;<pre><code>var AgeType = new GraphQLEnumType({&#xA;  name: 'Age',&#xA;  values: {&#xA;    1: { value: 0 },&#xA;    2: { value: 1 },&#xA;    3: { value: 2 }&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>And this doesn't work because the key is a number...</p>&#xA;",1196150,,,,2018-09-18 08:48:49,Enum for number in GraphQL (js),<graphql>,1,0,0,2018-05-22 11:36:00
50530266,1,,,1,1129,"<p>I have a problem with Appsync, Dynamodb on Amazon&#xA;So I want to delete multi rows on table. I used batchWriteItem but it showed ""operation unsuportted it"" on Resolver&#xA;So how to use batchWriteItem for delete multi rows.&#xA;Thanks. </p>&#xA;",2180764,,,,2018-05-25 18:53:56,How to use batchWriteItem on Appsync with Resolver,<amazon><graphql>,1,0,0,2018-05-25 13:24:25
50535296,2,,50530266,0,,"<p>Batch operations with DynamoDB resolvers in AWS AppSync are:</p>&#xA;&#xA;<ul>&#xA;<li>BatchPutItem </li>&#xA;<li>BatchGetItem </li>&#xA;<li>BatchDeleteItem</li>&#xA;</ul>&#xA;&#xA;<p>This will also require a <code>""tables""</code> key in your resolver configuration where you can perform these operations against one or multiple tables in a single GraphQL query or mutation.</p>&#xA;&#xA;<p>With a DynamoDB data source you'll also find these listed in the sample templates in the console.</p>&#xA;&#xA;<p>You can find an in-depth tutorial here: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html</a></p>&#xA;",2733539,,,,2018-05-25 18:53:56,"",,0,0,0,2018-05-25 18:53:56
50548188,1,,,4,877,"<p>I have two GraphQL type:</p>&#xA;&#xA;<pre><code>type Author {&#xA;  id: String!&#xA;  name: String!&#xA;}&#xA;&#xA;type Book {&#xA;  id: String!&#xA;  author: Author!&#xA;  name: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In my database, it is implemented by a foreign key inside the books table:</p>&#xA;&#xA;<p>table authors (pseudo code)</p>&#xA;&#xA;<pre><code>`id` INTEGER UNSIGNED&#xA;`name` STRING&#xA;</code></pre>&#xA;&#xA;<p>table books (pseudo code)</p>&#xA;&#xA;<pre><code>`id` INTEGER UNSIGNED&#xA;`author_id` INTEGER UNSIGNED REFERENCE `authors.id`&#xA;`name` STRING&#xA;</code></pre>&#xA;&#xA;<p>So when I resolve a GraphQL query like:</p>&#xA;&#xA;<pre><code>query allTheBooks {&#xA;  id&#xA;  name&#xA;  author {&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I would like to do only one <code>SELECT</code> SQL query like:</p>&#xA;&#xA;<pre><code>SELECT books.id, books.name, authors.id, authors.name&#xA;FROM books&#xA;LEFT JOIN authors ON authors.id = books.author_id&#xA;</code></pre>&#xA;&#xA;<p>Instead of the current:</p>&#xA;&#xA;<pre><code>SELECT books.id, books.name, books.author_id&#xA;FROM books&#xA;&#xA;SELECT authors.id, authors.name&#xA;FROM authors&#xA;WHERE author.id = [one the the books.author_id of the first SELECT]&#xA;&#xA;SELECT authors.id, authors.name&#xA;FROM authors&#xA;WHERE author.id = [one the the books.author_id of the first SELECT]&#xA;&#xA;[...]&#xA;</code></pre>&#xA;&#xA;<p>Is there a way to know which ""child fields"" are queried in a GraphQL resolver ?</p>&#xA;&#xA;<p><strong>Thank you in advance for your answer !</strong></p>&#xA;",4032282,,,,2018-05-27 01:05:06,GraphQL how to do a JOIN request instead of many sequential request?,<javascript><typescript><graphql><apollo><apollo-server>,1,2,0,2018-05-27 00:56:21
50581133,1,50896740,,0,572,"<p>How can I write the resolvers such that I can generate database sub-query in each resolver and effectively combine all of them and fetch the data at once?</p>&#xA;&#xA;<p>For the following schema :</p>&#xA;&#xA;<pre><code>type Node {&#xA;    index: Int!&#xA;    color: String!&#xA;    neighbors(first: Int = null): [Node!]!&#xA;}&#xA;&#xA;type Query {&#xA;    nodes(color: String!): [Node!]!&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>To perform the following query :</p>&#xA;&#xA;<pre><code>{&#xA;    nodes(color: ""red"") {&#xA;        index&#xA;        neighbors(first: 5) {&#xA;            index&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Data store:</p>&#xA;&#xA;<p>In my data store, nodes and neighbors are stored in separate tables. I want to write a resolver so that we can fetch the required data optimally.  </p>&#xA;&#xA;<blockquote>&#xA;  <p>If there are any similar examples, please share the details. (It would be helpful to get an answer in reference to graphql-java)</p>&#xA;</blockquote>&#xA;",9862130,,9862130,2018-05-29 13:36:08,2018-06-18 10:54:17,Fetching the data optimally in GraphQL,<graphql><graphql-java>,2,0,0,2018-05-29 09:40:20
50596609,2,,50596390,2,,"<p>Looks like the path [getMessages, sendBy] is resolving to a <code>null</code> value, and your schema definition (<code>sendBy: Person!</code>) says <code>sendBy</code> field cannot resolve to null. Please check if a resolver is attached to the field <code>sendBy</code> in type <code>Messages</code>.</p>&#xA;&#xA;<p>If there is a resolver attached, please enable CloudWatch logs for this API (This can be done on the Settings page in Console, select ALL option). You should be able to check what the resolved Request/Response mapping was for the path [getMessages, 0, sendBy].</p>&#xA;",640607,,,,2018-05-30 04:52:47,"",,0,4,0,2018-05-30 04:52:47
50624580,1,50632677,,3,2681,"<p>I'm attempting my first GraphQL backend using AWS AppSync. I'm simply trying to figure out how to use one-to-many associations. I expect to receive the many related objects as a list of children, and to be able to write some of these children when creating a new user.</p>&#xA;&#xA;<pre><code>type User {&#xA;    id: ID!&#xA;    name: String!&#xA;    records: [Records!]!&#xA;}&#xA;type Records {&#xA;    id: ID!&#xA;    userId: ID!&#xA;    title: String!&#xA;    ... etc ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Using the AppSync interface, I click on <code>Create Resources</code> once to make a Records table and again to make a Users table, both in DynamoDB. This also automatically adds mutations, subscriptions, input types, and more types, to my schema, and creates resolvers for me.</p>&#xA;&#xA;<p>What is the syntax for a mutation to create Record objects associated with my User objects? How can I PUT the Record data when I create the User?</p>&#xA;&#xA;<p>If needed I can include more of the schema that AppSync is autogenerating.</p>&#xA;",2838051,,2838051,2018-05-31 20:19:15,2018-05-31 20:57:29,How to PUT / UPDATE nested data with GraphQL?,<graphql><aws-appsync>,1,0,0,2018-05-31 12:40:54
50632677,2,,50624580,4,,"<p>Since you are using two DynamoDB tables (Users and Records), you will need to make two DynamoDB calls during the CreateUser mutation. One way to make two DynamoDB calls in a single mutation is to utilize DynamoDB's <strong>BatchPutItem</strong> operation. </p>&#xA;&#xA;<p>To utilize BatchPutItem, you will need to modify the <strong>resolver</strong> which is attached to your CreateUser mutation. The resolver is responsible for taking your graphQL request, converting it into a DynamoDB operation, and then converting the results of the DynamoDB operation into a graphQL response. The resolvers have two components: a request mapping template, and a response mapping template.</p>&#xA;&#xA;<p>The <strong>request mapping template</strong> will be responsible for taking mutation arguments and converting them into a DynamoDB BatchPutItem request.</p>&#xA;&#xA;<p>The resolver's <strong>response mapping template</strong> will be responsible for converting the result of the DynamoDB BatchPutItem operation into your mutation's return type/structure.</p>&#xA;&#xA;<p>Here is a tutorial on how to utilize multi-table BatchPutItem in a resolver: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html</a></p>&#xA;&#xA;<p>Here is a programming guide for using the Template language required for the resolvers: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-programming-guide.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-programming-guide.html</a></p>&#xA;",5683782,,,,2018-05-31 20:57:29,"",,0,0,0,2018-05-31 20:57:29
50649778,1,50729759,,2,794,"<p>I have GraphQL schema similar to the following. There are multiple Alphas in a single Bravo, and they each have a reference to each other. (A Bravo can get its Alphas, and an Alpha can get its Bravo.)</p>&#xA;&#xA;<pre><code>type Alpha {&#xA;  id: ID!&#xA;  value: Int!&#xA;  bravo: Bravo!&#xA;}&#xA;&#xA;type Bravo {&#xA;  value: Int!&#xA;  alphas: [Alpha!]!&#xA;}&#xA;&#xA;input InputAlpha {&#xA;  value: Int!&#xA;}&#xA;&#xA;type Mutation {&#xA;  putAlpha(alpha: InputAlpha): Alpha!&#xA;}&#xA;&#xA;schema {&#xA;  mutation: Mutation&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As you can tell, both types have a value. The value of Alpha is arbitrary, but the value of Bravo is the sum of its associated Alphas. For performance (and cost) reasons, the Bravo's value is cached in the DynamoDB table and modified whenever an Alpha is updated.</p>&#xA;&#xA;<p>Alphas are updated with a simple AppSync DynamoDB <code>PutItem</code> resolver, with the intention being that the value of its Bravo would be updated by a Lambda function watching the table's stream. This works well for the most part; I can put Alphas with random values, and I can get the value of their Bravo.</p>&#xA;&#xA;<p>The problem occurs when I try to request the value of the Bravo in the same request. (The Lambda function takes some time to update it from the stream.)</p>&#xA;&#xA;<pre><code>mutation putAlpha {&#xA;  putAlpha(alpha: {&#xA;      value: 10&#xA;  }) {&#xA;    id&#xA;    value&#xA;    bravo {&#xA;      value&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Naturally this returns the old cached <code>value</code> of <code>bravo</code>, because the Lambda function hasn't been run by the time the Bravo is resolved.</p>&#xA;&#xA;<p>Is there any way to wait until the DynamoDB stream's Lambda function has fired before resolving <code>bravo</code> or perhaps make the <code>PutItem</code> operation synchronous?</p>&#xA;&#xA;<p>The only alternative I can think of is to make the <code>putAlpha</code> resolver a Lambda function instead of a simple resolver and do the Bravo updating logic in there.</p>&#xA;&#xA;<p>Is this kind of Lambda continuously updating a cache value normal, or am I doing something wrong?</p>&#xA;",920772,,,,2018-06-06 21:29:40,AWS AppSync wait for DynamoDB Streams Lambda function before resolving sub-resource,<aws-lambda><amazon-dynamodb><graphql><amazon-dynamodb-streams><aws-appsync>,2,0,0,2018-06-01 19:14:39
50684231,1,50684271,,123,39402,"<p>In a schema file that I have I noticed there are exclamation marks after some types, like</p>&#xA;&#xA;<pre><code># Information on an account relationship&#xA;type AccountEdge {&#xA;  cursor: String!&#xA;  node: Account!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What do these mean? I can't find anything about it in the documentation or through googling </p>&#xA;",3117409,,1480391,2020-04-24 07:44:46,2022-09-15 23:22:33,What is an exclamation point in GraphQL?,<graphql>,3,0,0,2018-06-04 15:39:47
50731095,1,50748820,,1,283,"<p>Is it possible to simulate a signed in user with IAM auth on the appsync web based query tool?  If you have cognito choosen as the auth type, there is a little web tool to sign in as a user, but if i choose IAM, theres doesn't appear to be a way to do this.  Am I missing something?</p>&#xA;",8903213,,,,2018-06-07 19:25:02,Can you use the AWS Appsync query writer to test IAM users?,<amazon-web-services><graphql><aws-appsync>,1,0,0,2018-06-06 23:38:57
50748820,2,,50731095,2,,"<p>You can use whichever IAM user you want to interact with the console, but you will have to sign in via the normal AWS Console sign-in pages.</p>&#xA;&#xA;<p>When you create your IAM user, click the checkbox for enabling <code>AWS Management Console access</code>. This will enable a password to be created for the IAM user so you can sign in to the AWS Console.</p>&#xA;&#xA;<p>This will allow you to sign in, as the given IAM user, and use the AppSync Console.</p>&#xA;&#xA;<p>Here's some documentation on how to sign in as an individual IAM user: <a href=""https://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started_how-users-sign-in.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/IAM/latest/UserGuide/getting-started_how-users-sign-in.html</a> </p>&#xA;",5683782,,,,2018-06-07 19:25:02,"",,0,0,0,2018-06-07 19:25:02
50784881,1,51457839,,3,1520,"<p>Does Amplify support the Offline capabilities outlined here:&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-react.html#offline-settings"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-react.html#offline-settings</a></p>&#xA;&#xA;<p>Should I set it up like this?&#xA;<a href=""https://aws.github.io/aws-amplify/media/api_guide#configuration-for-graphql-server"" rel=""nofollow noreferrer"">https://aws.github.io/aws-amplify/media/api_guide#configuration-for-graphql-server</a></p>&#xA;&#xA;<p>Or for offline capabilities, do I have to use something like Apollo?</p>&#xA;",586631,,,,2018-07-21 16:03:52,AWS Amplify -- AppSync Offline,<apollo><aws-appsync><aws-amplify>,1,0,0,2018-06-10 14:47:50
50787544,2,,50730157,0,,<p>Did you allow read permissions for the fields you are querying? Or are you using a token? Can you actually post the error response you get from the request?</p>&#xA;,7280541,,,,2018-06-10 19:58:35,"",,0,0,0,2018-06-10 19:58:35
50854627,2,,49317787,4,,"<p>I solved this by injecting a pgPool into the <code>postgraphile</code> middleware. And the use the pgPool to query the database.</p>&#xA;&#xA;<pre><code>// ...&#xA;const pool = new Pool({&#xA;  connectionString: pgConnectionString,&#xA;});&#xA;pool.on(""error"", (err, client) =&gt; {&#xA;  console.error(""Unexpected error on idle client"", err);&#xA;});&#xA;app.use(postgraphile(pool, pgSchemas, pgOptions));&#xA;</code></pre>&#xA;",749231,,,,2018-06-14 09:54:18,"",,0,1,0,2018-06-14 09:54:18
50960387,2,,44980989,1,,<p>inside your schema.js &#xA;as you create Object Type for String as </p>&#xA;&#xA;<pre><code> fields: {&#xA;              name: {type: String} &#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>same is needed for your custom fields too&#xA;therefore</p>&#xA;&#xA;<pre><code>fields: {Companies}&#xA;</code></pre>&#xA;,7650901,,,,2018-06-21 04:27:31,"",,0,0,0,2018-06-21 04:27:31
50963195,1,50968716,,1,718,"<p><strong>CONTEXT</strong>  </p>&#xA;&#xA;<p>Using the Last.fm API endpoints to convert them to a GraphQL Object Type. Each key from the JSON object from the API will match its corresponding field in the GraphQL Object. Example in the link below.<br>&#xA;<a href=""https://i.stack.imgur.com/KNwTA.jpg"" rel=""nofollow noreferrer"">API endpoint to GraphQL Object</a></p>&#xA;&#xA;<p><strong>THE PROBLEM</strong>  </p>&#xA;&#xA;<p>Some JSON keys in the API start with the # character which is used in GraphQL to write comments. As a result, they can not be used as a field in a GraphQL Object.&#xA;As shown in the link below.<br>&#xA;<a href=""https://i.stack.imgur.com/WlaTU.png"" rel=""nofollow noreferrer"">The problem</a>  </p>&#xA;&#xA;<p>The resolver for clarification&#xA;</p>&#xA;&#xA;<pre><code>const songResolvers = {&#xA;  Query: {&#xA;    async track(_, { mbid }) {&#xA;      const response = await axios.get(`${BASE_URL}?method=track.getInfo&amp;api_key=${API_KEY}&amp;mbid=${mbid}&amp;format=json`);&#xA;      return response.data.track;&#xA;    },&#xA;  },&#xA;};&#xA;</code></pre>&#xA;&#xA;&#xA;&#xA;<p><strong>THE SOLUTION?</strong>  </p>&#xA;&#xA;<p>I have found a workaround but imo, pretty darn ugly. Basically I rename the keys before returning the response and of course edit the field from the object from '#text' to 'text'.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const images = response.data.track.album.image;&#xA;images.forEach(async (image) =&gt; {&#xA;  Object.defineProperty(&#xA;    image, 'text',&#xA;    Object.getOwnPropertyDescriptor(image, '#text'),&#xA;  );&#xA;  await delete image['#text'];&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>&#xA;I doubt this is the way to go so is there any way to use the # character as a field in a GraphQL Object Type? Or is there a cleaner solution to not use the # character in a GraphQL Object Type than the one above?</p>&#xA;&#xA;<p><strong>PS</strong>  My first question on stackoverflow so if there's anything wrong with how I structured, asked the question etc. Please let me know</p>&#xA;",7369846,,,,2018-06-21 12:34:19,Is it possible to define a field containing the hashtag character (#) in a GraphQL Object Type? Ordinarily used to write a comment,<javascript><graphql>,1,0,0,2018-06-21 07:52:31
50999059,2,,50998986,1,,"<p>Have you heard of <a href=""https://www.w3schools.com/jsref/prop_win_sessionstorage.asp"" rel=""nofollow noreferrer"">sessionStorage</a> ? </p>&#xA;&#xA;<p>you can save data in key/value pair and read it anywhere you want .</p>&#xA;",6725045,,,,2018-06-23 07:40:16,"",,0,0,0,2018-06-23 07:40:16
51072975,1,,,0,584,"<p>When my handler is called I get an error that the mutation is not a function. For some reason my mutation and query are not being attached to my component when I look at <code>this.props</code>. </p>&#xA;&#xA;<p>ERROR: </p>&#xA;&#xA;<pre><code>RelationshipDropDown.js:58 Uncaught TypeError: this.props.deleteSystemDatasets is not a function&#xA;    at RelationshipDropDown.deleteHandler (RelationshipDropDown.js:58)&#xA;    at onClick (RelationshipDropDown.js:92) ...&#xA;</code></pre>&#xA;&#xA;<p>I have tried multiple styles of syntax attempting to pass the mutation and query to the component and have used the style in other components with no error. Can someone explain why they are not being passed? Not sure what I am missing.</p>&#xA;&#xA;<pre><code>    import React from 'react';&#xA;import ReactDOM from 'react-dom';&#xA;&#xA;//Import GraphQL&#xA;import gql from 'graphql-tag';&#xA;import { graphql, compose } from 'react-apollo';&#xA;&#xA;&#xA;export class RelationshipDropDown extends React.Component{&#xA;    constructor(props){&#xA;        super(props);&#xA;        this.state = {key:null, system:null};&#xA;    };&#xA;      deleteHandler() {&#xA;        if (this.state.key) {&#xA;            console.log(this.state.key, this.state.system)&#xA;            console.log(this.props)&#xA;            this.props.deleteSystemDatasets({&#xA;                variables:{key: this.state.key, datasets: [this.state.system]},&#xA;                refetchQueries: [{ query: this.props.getSystemDatasets , variables: {system:this.state.system} }]&#xA;            });&#xA;        console.log(""Dataset "" + this.state.key + ""Deleted From "" + this.state.system);&#xA;          }&#xA;       };&#xA;&#xA;      handleChange(e){&#xA;        let obj = JSON.parse(e.target.value)&#xA;        console.log(e.target.value)&#xA;        console.log(this.props)&#xA;        this.setState({key: obj.key, system: obj.system});&#xA;      };&#xA;&#xA;    render(){&#xA;        return (&#xA;          &lt;div id=""relationship-select""&gt;&#xA;            &lt;select onChange={(e) =&gt; this.handleChange(e)} className=""select-menu"" type=""select""&gt;&#xA;              {this.props.dataArray}&#xA;            &lt;/select&gt;&#xA;            &lt;br/&gt;&#xA;            &lt;button onClick={() =&gt; this.deleteHandler()}&gt;delete&lt;/button&gt;&#xA;            &lt;button&gt;edit&lt;/button&gt;&#xA;          &lt;/div&gt;&#xA;&#xA;        )&#xA;    }&#xA;}&#xA;&#xA;export const GET_SYSTEM_DATASETS = gql`&#xA;  query getSystemDatasets($system: String!){&#xA;          System(name:$system){&#xA;               datasets{&#xA;                   name&#xA;               }&#xA;          }&#xA;      }&#xA;`;&#xA;&#xA;export const DELETE_SYSTEM_DATASET_RELATIONSHIP = gql`&#xA;    mutation deleteSystemDatasets($systemKey: ID!, $datasetKeys: [ID!]!){&#xA;    deleteSystemDatasets(key:$systemKey, datasets: $datasetKeys)&#xA;    }&#xA;`;&#xA;&#xA;const deleteSystemDatasets = graphql(DELETE_SYSTEM_DATASET_RELATIONSHIP, {name: ""deleteSystemDatasets""});&#xA;const getSystemDatasets = graphql(GET_SYSTEM_DATASETS, {name: ""getSystemDatasets""});&#xA;&#xA;export default compose(deleteSystemDatasets, getSystemDatasets)(RelationshipDropDown);&#xA;</code></pre>&#xA;",6535798,,,,2018-06-28 23:08:05,Mutation & Query Props Not Passed to Component,<reactjs><graphql><apollo>,1,0,0,2018-06-28 00:03:14
51161970,1,,,4,436,"<p>The v3 API allowed for the <a href=""https://developer.github.com/v3/repos/contents/#create-a-file"" rel=""nofollow noreferrer"">creation of files</a> but I can't seem to find a way to do this with the v4 GraphQL API. Is it currently possible?</p>&#xA;",620699,,,,2019-07-29 07:44:29,Can the GitHub GraphQL API create files in a repository?,<github><github-api><github-graphql>,1,0,0,2018-07-03 19:51:05
51188498,1,51234491,,1,1260,"<p>Ok, I'm on this problem since a few days.</p>&#xA;&#xA;<p>I try to take this tutorial :&#xA;<a href=""https://serverless.com/blog/make-serverless-graphql-api-using-lambda-dynamodb/"" rel=""nofollow noreferrer"">https://serverless.com/blog/make-serverless-graphql-api-using-lambda-dynamodb/</a></p>&#xA;&#xA;<p>And make it work with apollo-server-lambda. This tutorial help:</p>&#xA;&#xA;<p><a href=""https://medium.com/vessels/apollo-server-serverless-graphql-bliss-68e8e15195ac"" rel=""nofollow noreferrer"">https://medium.com/vessels/apollo-server-serverless-graphql-bliss-68e8e15195ac</a></p>&#xA;&#xA;<p>The problem is that nothing is working (for me) when you tried to use apollo server lambda with a real connection with DynamoDB. I got a list of errors that i can't remember anymore, it's just discouraging.</p>&#xA;&#xA;<p>Here my code :</p>&#xA;&#xA;<pre><code># serverless.yml&#xA;service: graphql-api&#xA;&#xA;provider:&#xA;  name: aws&#xA;  runtime: nodejs6.10&#xA;  region: eu-west-3&#xA;  stage: dev&#xA;  environment:&#xA;    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}&#xA;  iamRoleStatements:&#xA;    - Effect: Allow&#xA;      Action:&#xA;        - dynamodb:GetItem&#xA;        - dynamodb:UpdateItem&#xA;      Resource: ""arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}""&#xA;&#xA;resources:&#xA;  Resources:&#xA;    NicknamesTable:&#xA;      Type: 'AWS::DynamoDB::Table'&#xA;      Properties:&#xA;        AttributeDefinitions:&#xA;          - AttributeName: firstName&#xA;            AttributeType: S&#xA;        KeySchema:&#xA;          - AttributeName: firstName&#xA;            KeyType: HASH&#xA;        ProvisionedThroughput:&#xA;          ReadCapacityUnits: 1&#xA;          WriteCapacityUnits: 1&#xA;        TableName: ${self:provider.environment.DYNAMODB_TABLE}&#xA;&#xA;functions:&#xA;  graphql:&#xA;    handler: handler.graphql&#xA;    events:&#xA;      - http:&#xA;          path: graphql&#xA;          method: post&#xA;          cors: true&#xA;      - http:&#xA;          path: graphql&#xA;          method: get&#xA;          cors: true&#xA;</code></pre>&#xA;&#xA;<p>And my handler:</p>&#xA;&#xA;<pre><code># handler.js&#xA;const AWS = require('aws-sdk');&#xA;const server = require(""apollo-server-lambda"");&#xA;const makeExecutableSchema = require('graphql-tools').makeExecutableSchema;&#xA;const dynamoDb = new AWS.DynamoDB.DocumentClient();&#xA;&#xA;const promisify = foo =&gt; new Promise((resolve, reject) =&gt; {&#xA;    foo((error, result) =&gt; {&#xA;        if (error) {&#xA;            reject(error)&#xA;        } else {&#xA;            resolve(result)&#xA;        }&#xA;    })&#xA;})&#xA;&#xA;const getGreeting = firstName =&gt; promisify(callback =&gt;&#xA;    dynamoDb.get({&#xA;        TableName: process.env.DYNAMODB_TABLE,&#xA;        Key: { firstName },&#xA;    }, callback))&#xA;    .then(result =&gt; {&#xA;        if (!result.Item) {&#xA;            return firstName&#xA;        }&#xA;        return result.Item.nickname&#xA;    })&#xA;    .then(name =&gt; `Hello, ${name}.`)&#xA;&#xA;// add method for updates&#xA;const changeNickname = (firstName, nickname) =&gt; promisify(callback =&gt;&#xA;    dynamoDb.update({&#xA;        TableName: process.env.DYNAMODB_TABLE,&#xA;        Key: { firstName },&#xA;        UpdateExpression: 'SET nickname = :nickname',&#xA;        ExpressionAttributeValues: {&#xA;            ':nickname': nickname&#xA;        }&#xA;    }, callback))&#xA;    .then(() =&gt; nickname)&#xA;&#xA;const typeDefs = `&#xA;    type Query {&#xA;        greeting(firstName: String!): String&#xA;    }&#xA;    type Mutation {&#xA;        changeNickname(&#xA;            firstName: String!&#xA;            nickname: String!&#xA;        ): String&#xA;    }&#xA;`;&#xA;&#xA;const resolvers = {&#xA;    Query: {&#xA;        greeting: (_, { firstName }) =&gt; getGreeting(firstName),&#xA;    },&#xA;    Mutation: {&#xA;        changeNickname: (_, { firstName, nickname }) =&gt; changeNickname(firstName, nickname),&#xA;    }&#xA;};&#xA;&#xA;exports.graphql = function (event, context, callback) {&#xA;    const callbackFilter = function (error, output) {&#xA;        output.headers = output.header || {};&#xA;        output.headers['Access-Control-Allow-Origin'] = '*';&#xA;        callback(error, output);&#xA;    };&#xA;    const handler = server.graphqlLambda({ schema: makeExecutableSchema({ typeDefs, resolvers }) });&#xA;&#xA;    return handler(event, context, callbackFilter);&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>I tried to used Apollo 1 and 2, nothing work. I'm back to the version 1 since there is more forum posts about it. Mostly I have ""internal server error"". I tried differents versions of server that i found on apollo docs but all my request failed, with curl on a terminal or directly on the API Gateway on AWS to test the function. I write the request body following this doc: <a href=""https://www.apollographql.com/docs/apollo-server/requests.html"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/requests.html</a></p>&#xA;&#xA;<p>Here my cloudwatch log:</p>&#xA;&#xA;<pre><code>(node:1) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): SyntaxError: Unexpected token = in JSON at position 8&#xA;</code></pre>&#xA;&#xA;<p>Any help would be greatly appreciate !!</p>&#xA;",9408631,,9408631,2018-07-05 12:40:17,2018-07-08 17:35:05,Serverless framework + AWS + Lambda + DynamoDB + GraphQL + Apollo Server = Can't make POST Request Work,<amazon-web-services><aws-lambda><graphql><serverless-framework><apollo-server>,1,2,0,2018-07-05 10:03:50
51223472,2,,51179522,-1,,"<p>Have you checked out the AppSync guide for ""Building a JavaScript Client App"": <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-javascript.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-javascript.html</a></p>&#xA;&#xA;<p>With AWSAppSyncClient setting up subscriptions is effortless. It uses websockets automatically when setting up subscriptions.</p>&#xA;&#xA;<p>I haven't even been aware of apollo-link-ws and such complexities when using AppSync subscriptions with Apollo. I only have experience of AppSync subscriptions with the React client but the plain JavaScript usage seems comparatively simple.</p>&#xA;&#xA;<p>From the example in the guide:</p>&#xA;&#xA;<pre><code>const client = new AWSAppSyncClient({&#xA;    url: url,&#xA;    region: region,&#xA;    auth: {&#xA;        type: type,&#xA;        credentials: credentials,&#xA;    }&#xA;});&#xA;&#xA;client.hydrated().then(function (client) {&#xA;    //Now subscribe to results&#xA;    const observable = client.subscribe({ query: subquery });&#xA;&#xA;    const realtimeResults = function realtimeResults(data) {&#xA;        console.log('realtime data: ', data);&#xA;    };&#xA;&#xA;    observable.subscribe({&#xA;        next: realtimeResults,&#xA;        complete: console.log,&#xA;        error: console.log,&#xA;    });&#xA;});&#xA;&#xA;// Set up a subscription query&#xA;const subquery = gql(`&#xA;subscription NewPostSub {&#xA;newPost {&#xA;    __typename&#xA;    id&#xA;    title&#xA;    author&#xA;    version&#xA;}&#xA;}`);&#xA;</code></pre>&#xA;&#xA;<p>For Node.js usage, the guide also shows how to set up global.WebSocket and such dependencies in the example code.</p>&#xA;",1207523,,1207523,2018-07-07 13:13:28,2018-07-07 13:13:28,"",,0,3,0,2018-07-07 13:00:36
51223984,1,,,1,2826,<p>I would like to know if it is possible to have multiple dynamodb request using only one dynamo resolver in AppSync? &#xA;Or the only/best way to have more complicated processing is to use a lambda function ?</p>&#xA;,9431240,,4636715,2019-04-08 05:57:47,2020-04-12 14:52:21,AWS Appsync multiple dynamodb requesst in one dynamodb resolver,<amazon-web-services><amazon-dynamodb><graphql><aws-appsync><resolver>,3,0,0,2018-07-07 14:09:05
51225116,2,,51223984,0,,"<p>Have you looked at batch resolvers with AWS AppSync?<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html</a></p>&#xA;&#xA;<p>This will allow you to write to one or more tables in a single request, and also allow you to do multiple write/read/delete operations in a single request. </p>&#xA;",2733539,,,,2018-07-07 16:46:59,"",,0,0,0,2018-07-07 16:46:59
51236075,1,51246111,,1,693,"<p>I'm trying to set up a GraphQL server with PostGraphile (formerly known as PostGraphQL) and I cannot get the row permissions working, meaning that I keep getting permission denied messages, despite it should work. Here is my schema:</p>&#xA;&#xA;<pre><code>create function app.current_user() returns app.profile as $$&#xA;  select *&#xA;  from app.profile&#xA;  where id = current_setting('jwt.claims.person_id')::integer&#xA;$$ language sql stable;&#xA;&#xA;comment on function app.current_user() is 'Gets the person who was identified by our JWT.';&#xA;&#xA;grant select (name,about,created_at,updated_at) on table app.profile to app_user;&#xA;grant update (name,about) on table app.profile to app_user;&#xA;alter table app.profile enable row level security;&#xA;&#xA;&#xA;create policy select_profile on app.profile for select to app_user&#xA;  using (id = current_setting('jwt.claims.person_id')::integer);&#xA;&#xA;create policy update_profile on app.profile for update to app_user&#xA;  using (id = current_setting('jwt.claims.person_id')::integer);&#xA;</code></pre>&#xA;&#xA;<p>as far as I can see in debug output, everything works as it should. I can authenticate, get a JWT token, it complains with a proper error message when the JWT token is invalid, so it's not any of that.</p>&#xA;&#xA;<p>what am I doing wrong, or how can I debug more closely what is happening?</p>&#xA;&#xA;<p>I'm using PostGraphile v4 and PostgreSQL 10.4</p>&#xA;",982364,,982364,2018-07-09 12:54:07,2019-03-28 14:54:13,PostgreSQL / PostGraphile row permissions not working,<postgresql><permissions><postgraphql>,1,1,0,2018-07-08 21:20:17
51246111,2,,51236075,2,,"<p>Found the issue myself. It turns out that you <strong>must</strong> give permissions on the id, even if you don't select it but only use it in the WHERE part.</p>&#xA;&#xA;<p>So in the above example, modify it to:</p>&#xA;&#xA;<blockquote>&#xA;  <p>grant select (id,name,about,created_at,updated_at) on table app.profile to app_user;</p>&#xA;</blockquote>&#xA;&#xA;<p>then it should work.</p>&#xA;",982364,,982364,2018-10-23 07:45:21,2018-10-23 07:45:21,"",,0,1,0,2018-07-09 12:54:52
51298563,1,,,1,149,"<pre><code>const query = require('graphql-tag');&#xA;  const x = query(`&#xA;  mutation Hello {&#xA;  putPost(&#xA;    category: ""College"",&#xA;      institution: ""Some College"",&#xA;      address: ""DisneyLand"",&#xA;      country: ""India"",&#xA;      state: ""Some State"",&#xA;      city: ""Some City""&#xA;  ){&#xA;    category&#xA;  }&#xA;}`);&#xA;&#xA;  const client = new AWSAppSyncClient({&#xA;    url: url,&#xA;    region: region,&#xA;    auth: {&#xA;      type: type,&#xA;      apiKey:apiKey,&#xA;    }&#xA;  });&#xA;  console.log(x);&#xA;&#xA;  client.hydrated().then(function (client) {&#xA;    return client.mutate({mutation : x})&#xA;  }).then(function logData(data) {&#xA;    console.log(""This is the data returned "" + data);&#xA;  }).catch(console.error);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am trying to mutate my database using AWS services and their Apollo SDK, i am unable to mutate my data and an error ""TypeError: Cannot read property 'queryManager' of undefined"" occurs, can anyone help me?</p>&#xA;",9742957,,9742957,2018-07-19 09:51:10,2018-07-21 10:39:25,Mutation in GraphQL using apollo and AWS,<amazon-web-services><apollo-client><aws-appsync>,1,0,0,2018-07-12 06:22:29
51306956,1,51316107,,6,8167,"<p>I have a fairly simple node app using AWS AppSync. I am able to run queries and mutations successfully but I've recently found that if I run a query twice I get the same response - even when I know that the back-end data has changed. In this particular case the query is backed by a lambda and in digging into it I've discovered that the query doesn't seem to be sent out on the network because the lambda is not triggered each time the query runs - just the first time. If I use the console to simulate my query then everything runs fine. If I restart my app then the first time a query runs it works fine but successive queries again just return the same value each time.</p>&#xA;&#xA;<p>Here are some part of my code:</p>&#xA;&#xA;<pre><code>  client.query({&#xA;    query: gql`&#xA;    query GetAbc($cId: String!) {&#xA;      getAbc(cId: $cId) {&#xA;        id&#xA;        name&#xA;        cs&#xA;      }&#xA;    }`,&#xA;    options: {&#xA;      fetchPolicy: 'no-cache'&#xA;    },&#xA;    variables: {&#xA;      cid: event.cid&#xA;    }&#xA;  })&#xA;    .then((data) =&gt; {&#xA;      // same data every time&#xA;    })&#xA;</code></pre>&#xA;&#xA;<p><strong>Edit</strong>: trying other fetch policies like <code>network-only</code> makes no visible difference.</p>&#xA;&#xA;<p>Here is how I set up the client, not super clean but it seems to work:</p>&#xA;&#xA;<pre><code>const makeAWSAppSyncClient = (credentials) =&gt; {&#xA;  return Promise.resolve(&#xA;    new AWSAppSyncClient({&#xA;      url: 'lalala',&#xA;      region: 'us-west-2',&#xA;      auth: {&#xA;        type: 'AWS_IAM',&#xA;        credentials: () =&gt; {&#xA;          return credentials&#xA;        }&#xA;      },&#xA;      disableOffline: true&#xA;    })&#xA;  )&#xA;}&#xA;&#xA;getRemoteCredentials()&#xA;  .then((credentials) =&gt; {&#xA;    return makeAWSAppSyncClient(credentials)&#xA;  })&#xA;  .then((client) =&gt; {&#xA;    return client.hydrated()&#xA;  })&#xA;  .then((client) =&gt; {&#xA;    // client is good to use&#xA;  })&#xA;</code></pre>&#xA;&#xA;<p><code>getRemoteCredentials</code> is a method to turn an IoT authentication into normal IAM credentials which can be used with other AWS SDKs. This is working (because I wouldn't get as far as I do if not).</p>&#xA;&#xA;<p>My issue seems very similar to this one <a href=""https://stackoverflow.com/questions/50099028/graphql-query-runs-sucessfully-one-time-and-fails-to-run-again-using-apollo-and?rq=1"">GraphQL Query Runs Sucessfully One Time and Fails To Run Again using Apollo and AWS AppSync</a>; I'm running in a node environment (rather than react) but it is essentially the same issue.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>I don't think this is relevant but for completeness I should mention I have tried both with and without the setup code from the docs. This appears to make no difference (except annoying logging, see below) but here it is:</p>&#xA;&#xA;<pre><code>global.WebSocket = require('ws')&#xA;global.window = global.window || {&#xA;  setTimeout: setTimeout,&#xA;  clearTimeout: clearTimeout,&#xA;  WebSocket: global.WebSocket,&#xA;  ArrayBuffer: global.ArrayBuffer,&#xA;  addEventListener: function () { },&#xA;  navigator: { onLine: true }&#xA;}&#xA;&#xA;global.localStorage = {&#xA;  store: {},&#xA;  getItem: function (key) {&#xA;    return this.store[key]&#xA;  },&#xA;  setItem: function (key, value) {&#xA;    this.store[key] = value&#xA;  },&#xA;  removeItem: function (key) {&#xA;    delete this.store[key]&#xA;  }&#xA;};&#xA;require('es6-promise').polyfill()&#xA;require('isomorphic-fetch')&#xA;</code></pre>&#xA;&#xA;<p>This is taken from: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-javascript.html"" rel=""noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-javascript.html</a></p>&#xA;&#xA;<p>With this code and without <code>offlineDisabled: true</code> in the client setup I see this line spewed continuously on the console:</p>&#xA;&#xA;<blockquote>&#xA;  <p>redux-persist asyncLocalStorage requires a global localStorage object.&#xA;  Either use a different storage backend or if this is a universal redux&#xA;  application you probably should conditionally persist like so:&#xA;  <a href=""https://gist.github.com/rt2zz/ac9eb396793f95ff3c3b"" rel=""noreferrer"">https://gist.github.com/rt2zz/ac9eb396793f95ff3c3b</a></p>&#xA;</blockquote>&#xA;&#xA;<p>This makes no apparent difference to this issue however.</p>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>Update</strong>: my dependencies from package.json, I have upgraded these during testing so my yarn.lock contains more recent revisions than listed here. Nevertheless: <a href=""https://gist.github.com/macbutch/a319a2a7059adc3f68b9f9627598a8ca"" rel=""noreferrer"">https://gist.github.com/macbutch/a319a2a7059adc3f68b9f9627598a8ca</a></p>&#xA;&#xA;<p><strong>Update #2</strong>: I have also confirmed from CloudWatch logs that the query is only being run <em>once</em>; I have a mutation running regularly on a timer that is successfully invoked and visible in CloudWatch. That is working as I'd expect but the query is not.</p>&#xA;&#xA;<p><strong>Update #3</strong>: I have debugged in to the AppSync/Apollo code and can see that my fetchPolicy is being changed to 'cache-first' in this code in <code>apollo-client/core/QueryManager.js</code> (comments mine):</p>&#xA;&#xA;<pre><code>QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {&#xA;    var _this = this;&#xA;    // Next line changes options.fetchPolicy to 'cache-first'&#xA;    var _a = options.variables, variables = _a === void 0 ? {} : _a, _b = options.metadata, metadata = _b === void 0 ? null : _b, _c = options.fetchPolicy, fetchPolicy = _c === void 0 ? 'cache-first' : _c;&#xA;    var cache = this.dataStore.getCache();&#xA;    var query = cache.transformDocument(options.query);&#xA;    var storeResult;&#xA;    var needToFetch = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';&#xA;    // needToFetch is false (because fetchPolicy is 'cache-first')&#xA;    if (fetchType !== FetchType.refetch &amp;&amp;&#xA;        fetchPolicy !== 'network-only' &amp;&amp;&#xA;        fetchPolicy !== 'no-cache') {&#xA;        // so we come through this branch&#xA;        var _d = this.dataStore.getCache().diff({&#xA;            query: query,&#xA;            variables: variables,&#xA;            returnPartialData: true,&#xA;            optimistic: false,&#xA;        }), complete = _d.complete, result = _d.result;&#xA;        // here complete is true, result is from the cache&#xA;        needToFetch = !complete || fetchPolicy === 'cache-and-network';&#xA;        // needToFetch is still false&#xA;        storeResult = result;&#xA;    }&#xA;    // skipping some stuff&#xA;    ...&#xA;    if (shouldFetch) { // shouldFetch is still false so this doesn't execute&#xA;        var networkResult = this.fetchRequest({&#xA;            requestId: requestId,&#xA;            queryId: queryId,&#xA;            document: query,&#xA;            options: options,&#xA;            fetchMoreForQueryId: fetchMoreForQueryId,&#xA;    }&#xA;    // resolve with data from cache&#xA;    return Promise.resolve({ data: storeResult });&#xA;</code></pre>&#xA;&#xA;<p>If I use my debugger to change the value of <code>shouldFetch</code> to true then at least I see a network request go out and my lambda executes. I guess I need to unpack what that line that is changing my fetchPolicy is doing.</p>&#xA;",141923,,141923,2018-07-16 01:47:46,2020-05-26 06:40:59,AWS AppSync query returns cached response even when offline is disabled,<amazon-web-services><apollo><apollo-client><aws-appsync>,3,3,0,2018-07-12 13:28:15
51310648,2,,51306956,2,,"<p>Set the query <code>fetch-policy</code> to <code>'network-only'</code> when running in an AWS Lambda function.</p>&#xA;&#xA;<p>I recommend using the overrides for <code>WebSocket</code>, <code>window</code>, and <code>localStorage</code> since these objects don't really apply within a Lambda function. The setup I typically use for NodeJS apps in Lambda looks like the following.</p>&#xA;&#xA;<pre><code>'use strict';&#xA;&#xA;// CONFIG&#xA;const AppSync = {&#xA;    ""graphqlEndpoint"": ""..."",&#xA;    ""region"": ""..."",&#xA;    ""authenticationType"": ""..."",&#xA;    // auth-specific keys&#xA;};&#xA;&#xA;// POLYFILLS&#xA;global.WebSocket = require('ws');&#xA;global.window = global.window || {&#xA;    setTimeout: setTimeout,&#xA;    clearTimeout: clearTimeout,&#xA;    WebSocket: global.WebSocket,&#xA;    ArrayBuffer: global.ArrayBuffer,&#xA;    addEventListener: function () { },&#xA;    navigator: { onLine: true }&#xA;};&#xA;global.localStorage = {&#xA;    store: {},&#xA;    getItem: function (key) {&#xA;        return this.store[key]&#xA;    },&#xA;    setItem: function (key, value) {&#xA;        this.store[key] = value&#xA;    },&#xA;    removeItem: function (key) {&#xA;        delete this.store[key]&#xA;    }&#xA;};&#xA;require('es6-promise').polyfill();&#xA;require('isomorphic-fetch');&#xA;&#xA;// Require AppSync module&#xA;const AUTH_TYPE = require('aws-appsync/lib/link/auth-link').AUTH_TYPE;&#xA;const AWSAppSyncClient = require('aws-appsync').default;&#xA;&#xA;// INIT&#xA;// Set up AppSync client&#xA;const client = new AWSAppSyncClient({&#xA;    url: AppSync.graphqlEndpoint,&#xA;    region: AppSync.region,&#xA;    auth: {&#xA;        type: AppSync.authenticationType,&#xA;        apiKey: AppSync.apiKey&#xA;    }&#xA;});&#xA;</code></pre>&#xA;",137598,,,,2018-07-12 16:34:46,"",,0,8,0,2018-07-12 16:34:46
51334366,1,51336088,,2,1503,"<p>I have just build simple Node.js graphql backend server with Prisma, graphql-yoga, prisma-binding.&#xA;And I would like to know if is it possible to create graphql backend server for existing database.&#xA;For example, I am deploying Postgresql database in amazon RDB,  and it is not empty database.&#xA;In this case, </p>&#xA;&#xA;<ol>&#xA;<li><p>How can I build backend server using Graphql and Node.js for existing database?</p></li>&#xA;<li><p>Graphql backend server building is possible for only newly created database or available for existing database?</p></li>&#xA;<li><p>If I would like to deploy graphql database on specific cloud system(for example godaddy), is it possible and how to do it?</p></li>&#xA;</ol>&#xA;&#xA;<p>Thanks!</p>&#xA;",7122343,,8866606,2019-08-29 10:10:28,2019-08-29 10:10:28,How to build Graphql backend server for existing database?,<node.js><graphql>,1,0,0,2018-07-14 01:02:41
51342523,1,51371484,,20,9967,"<p>I try to include nested types defined in the following graphql schema:</p>&#xA;&#xA;<pre><code>type User {&#xA;  id: String!&#xA;  posts: [Post]&#xA;}&#xA;&#xA;type Post {&#xA;  id: String!&#xA;}&#xA;&#xA;type Query {&#xA;  getUser(id: String!): User&#xA;  getPost(id: String!): Post&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As you can see a User has multiple Posts. I am using AppSync with an <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-adjacency-graphs.html"" rel=""noreferrer"">Adjacent List Dynamodb Table</a> (which contains both the User and the Post relevant row) as a data source. Within AppSync I have to use a <em>request mapping template</em>, but after reading the documentation I have not understood how nested types are resolved?</p>&#xA;&#xA;<p>I would imagine that on querying <code>getUser</code> the Post resolver should be called with the User_id. If so how do I access the parent id within the post resolver? Is this where <code>${context.source}</code> comes into place? </p>&#xA;&#xA;<p>As the <code>getPost</code> query resolver would be the same as the Post resolver, called by the getUser Post child, would I have to integrate some logic with request template of the resolver to deal with both cases? </p>&#xA;&#xA;<p>An example would be really helpful!</p>&#xA;",3360590,,3360590,2018-07-14 19:04:56,2018-07-17 17:44:58,AppSync: Nested Type Resolver,<amazon-dynamodb><graphql><velocity><aws-appsync>,2,1,0,2018-07-14 18:59:44
51349000,1,,,4,772,<p>During development of an AppSync app I get this message</p>&#xA;&#xA;<p><code>Exceeded maximum endpoint per user count 10</code></p>&#xA;&#xA;<p>But there are only two APIs in the AppSync console and there are no endpoints in API Gateway. Does anyone know how to fix this error?</p>&#xA;,558721,,,,2018-07-15 13:45:58,AWS AppSync Exceeded maximum endpoint per user count 10,<amazon-web-services><graphql><aws-appsync>,0,6,0,2018-07-15 13:45:58
51354818,1,60762997,,4,1641,"<p>I'm using an external API as my source for data so I can't control what the keys are in the records returned. I have a record with an object like this in it:</p>&#xA;&#xA;<pre><code>images: {&#xA;  '50': 'https://mir-s3-cdncf.behance.net.jpg',&#xA;  '100': 'https://mir-s3-cdn-cf.behance.net/user/100/579c455d13419.jpg',&#xA;  '115': 'https://mir-s3-cdn-cf.behance.net/user/115/.jpg',&#xA;  '138': 'https://mir-s3-cdn-cf.behance.net/user/138/.jpg'&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I can't tell what the keys are going to be in this object up front. Is there a way to handle this in a GraphQL schema? </p>&#xA;",1236296,,,,2020-03-19 18:20:54,GraphQL schema type for object with dynamic keys,<graphql>,1,0,0,2018-07-16 04:57:11
51373327,2,,50596390,0,,"<p>I encountered a similar issue while working on my setup with CloudFormation. In my particular situation I didn't configure the Projection correctly for the Global Secondary Indexes. Since the attributes weren't projected into the index, I was getting an ID in the response but null for all other values. Updating the ProjectionType to 'ALL' resolved my issue. Not to say that is the ""correct"" setting but for my particular implementation it was needed.</p>&#xA;&#xA;<p>More on Global Secondary Index Projection for CloudFormation can be found here: <a href=""https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-projectionobject.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dynamodb-projectionobject.html</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>Attributes that are copied (projected) from the source table into the index. These attributes are additions to the primary key attributes and index key attributes, which are automatically projected.</p>&#xA;</blockquote>&#xA;",9737026,,,,2018-07-17 04:40:02,"",,0,0,0,2018-07-17 04:40:02
51381369,2,,51364638,2,,"<p>There are <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html"" rel=""nofollow noreferrer"">reserved words</a> in DynamoDB and <code>List</code> is among them. When this is the case, <code>expressionNames</code> property must be used. See the <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html#create-an-updatepost-mutation-ddb-updateitem"" rel=""nofollow noreferrer"">section in the doc</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Finally, DynamoDB has reserved words that cannot appear in the expression. [...], we can use name placeholders and define them in the expressionNames field as:</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>{&#xA;  ""version"": ""2017-02-28"",&#xA;  ""operation"": ""UpdateItem"",&#xA;  ""key"": {&#xA;    ""id"": { ""S"": ""${context.arguments.id}"" }&#xA;  },&#xA;  ""update"": {&#xA;    ""expression"": ""SET #List = :List"",&#xA;    ""expressionNames"": {&#xA;      ""#List"" : ""List""&#xA;    },&#xA;    ""expressionValues"": {&#xA;      #set( $List = $context.arguments.List )&#xA;      "":List"": $util.dynamodb.toListJson($List)&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>For a more complicated AppSync-DynamoDB(UpdateItem) example, you can visit <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-dynamodb.html#aws-appsync-resolver-mapping-template-reference-dynamodb-updateitem"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;",4636715,,,,2018-07-17 12:26:25,"",,0,1,0,2018-07-17 12:26:25
51382169,2,,51381564,0,,"<p><a href=""https://www.apollographql.com/docs/apollo-server/v2/deployment/lambda.html"" rel=""nofollow noreferrer"">Apollo GraphQL Server</a> provides a very good setup to deploy a GraphQL server in AWS Lambda.</p>&#xA;",3708153,,,,2018-07-17 13:05:28,"",,0,1,0,2018-07-17 13:05:28
51386933,2,,51381564,3,,"<p>The choice is yours as to how to setup lambda within your AppSync API. It is entirely reasonable to have a lambda function per resolver and have a function be responsible for a single resolver. You can alternatively take an approach like the tutorial and use a single function and some lightweight routing code to take care of calling the correct function. Using a single function can often offer some performance benefits because of how lambda's container warming works (esp. for Java &amp; C# where VM startup time can add up) but has less separation of concerns.</p>&#xA;&#xA;<p>Here are some approaches I have taken in the past:</p>&#xA;&#xA;<p><strong>Option 1: JS</strong></p>&#xA;&#xA;<p>This approach uses JavaScript and should feel familiar to those who have run their own GraphQL servers before.</p>&#xA;&#xA;<pre><code>const Resolvers = {&#xA;  Query: {&#xA;    me: (source, args, identity) =&gt; getLoggedInUser(args, identity)&#xA;  },&#xA;  Mutation: {&#xA;    login: (source, args, identity) =&gt; loginUser(args, identity)&#xA;  }&#xA;}&#xA;&#xA;exports.handler = (event, context, callback) =&gt; {&#xA;    // We are going to wire up the resolver to give all this information in this format.&#xA;    const { TypeName, FieldName, Identity, Arguments, Source } = event&#xA;&#xA;    const typeResolver = Resolvers[TypeName]&#xA;    if (!typeResolver) {&#xA;      return callback(new Error(`No resolvers found for type: ""${TypeName}""`))&#xA;    }&#xA;    const fieldResolver = typeResolver[FieldName]&#xA;    if (!fieldResolver) {&#xA;      return callback(new Error(`No resolvers found for field: ""${FieldName}"" on type: ""${TypeName}""`), null)&#xA;    }&#xA;    // Handle promises as necessary.&#xA;    const result = fieldResolver(Source, Arguments, Identity);&#xA;    return callback(null, result)&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>You can then use a standard lambda resolver from AppSync. For now we have to provide the TypeName and FieldName manually.</p>&#xA;&#xA;<pre><code>#**&#xA;    The value of 'payload' after the template has been evaluated&#xA;    will be passed as the event to AWS Lambda.&#xA;*#&#xA;{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"": ""Invoke"",&#xA;    ""payload"": {&#xA;        ""TypeName"": ""Query"",&#xA;        ""FieldName"": ""me"",&#xA;        ""Arguments"": $util.toJson($context.arguments),&#xA;        ""Identity"": $util.toJson($context.identity),&#xA;        ""Source"": $util.toJson($context.source)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Option 2: Go</strong></p>&#xA;&#xA;<p>For the curious, I have also used go lambda functions successfully with AppSync. Here is one approach that has worked well for me.</p>&#xA;&#xA;<pre><code>package main&#xA;&#xA;import (&#xA;  ""context""&#xA;  ""fmt""&#xA;&#xA;  ""github.com/aws/aws-lambda-go/lambda""&#xA;  ""github.com/fatih/structs""&#xA;  ""github.com/mitchellh/mapstructure""&#xA;)&#xA;&#xA;type GraphQLPayload struct {&#xA;  TypeName    string                 `json:""TypeName""`&#xA;  FieldName   string                 `json:""FieldName""`&#xA;  Arguments   map[string]interface{} `json:""Arguments""`&#xA;  Source      map[string]interface{} `json:""Source""`&#xA;  Identity    map[string]interface{} `json:""Identity""`&#xA;}&#xA;&#xA;type ResolverFunction func(source, args, identity map[string]interface{}) (data map[string]interface{}, err error)&#xA;&#xA;type TypeResolverMap = map[string]ResolverFunction&#xA;&#xA;type SchemaResolverMap = map[string]TypeResolverMap&#xA;&#xA;func resolverMap() SchemaResolverMap {&#xA;  return map[string]TypeResolverMap{&#xA;    ""Query"": map[string]ResolverFunction{&#xA;      ""me"": getLoggedInUser,&#xA;    },&#xA;  }&#xA;}&#xA;&#xA;func Handler(ctx context.Context, event GraphQLPayload) (map[string]interface{}, error) {&#xA;  // Almost the same as the JS option.&#xA;  resolvers := resolverMap()&#xA;  typeResolver := resolvers[event.TypeName]&#xA;  if typeResolver == nil {&#xA;    return nil, fmt.Errorf(""No type resolver for type "" + event.TypeName)&#xA;  }&#xA;  fieldResolver := typeResolver[event.FieldName]&#xA;  if fieldResolver == nil {&#xA;    return nil, fmt.Errorf(""No field resolver for field "" + event.FieldName)&#xA;  }&#xA;  return fieldResolver(event.Source, event.Arguments, event.Identity)&#xA;}&#xA;&#xA;func main() {&#xA;  lambda.Start(Handler)&#xA;}&#xA;&#xA;/**&#xA;* Resolver Functions&#xA; */&#xA;&#xA;/**&#xA; * Get the logged in user&#xA; */&#xA;func getLoggedInUser(source, args, identity map[string]interface{}) (data map[string]interface{}, err error) {&#xA;&#xA;  // Decode the map[string]interface{} into a struct I defined&#xA;  var typedArgs myModelPackage.GetLoggedInUserArgs&#xA;  err = mapstructure.Decode(args, &amp;typedArgs)&#xA;  if err != nil {&#xA;    return nil, err&#xA;  }&#xA;&#xA;  // ... do work&#xA;  res, err := auth.GetLoggedInUser()&#xA;  if err != nil {&#xA;    return nil, err&#xA;  }&#xA;&#xA;  // Map the struct back to a map[string]interface{}&#xA;  return structs.Map(out), nil&#xA;}&#xA;&#xA;// ... Add as many more as needed&#xA;</code></pre>&#xA;&#xA;<p>You can then use the same resolver template as used in option 1. There are many other ways to do this but this is one method that has worked well for me.</p>&#xA;&#xA;<p>Hope this helps :)</p>&#xA;",2088684,,2088684,2018-07-18 04:07:35,2018-07-18 04:07:35,"",,0,0,0,2018-07-17 17:10:46
51388391,1,,,3,1489,"<p>I have a question...</p>&#xA;<p>So I've been looking around, and it seems that GraphQL just cannot optimize its resolvers and &quot;combine&quot; them into one SQL query with multiple joins.</p>&#xA;<p>For example, let's say we have this imaginary relationship:</p>&#xA;<pre><code>user(id=2) {&#xA;  name&#xA;  companies {&#xA;    name&#xA;    country {&#xA;      id&#xA;      name&#xA;      planet {&#xA;       id&#xA;       name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>As far as I know, you could fetch all this data in one sql query:</p>&#xA;<pre class=""lang-sql prettyprint-override""><code>SELECT * &#xA;FROM users &#xA;INNER JOIN companies ON users.id = companies.id &#xA;INNER JOIN countries ON countries.id = companies.country_id &#xA;INNER JOIN planets ON planets.id = countries.planet_id &#xA;WHERE users.id = 2;&#xA;</code></pre>&#xA;<p>It doesn't seem to be possible with GraphQL. At most, you can use a data-loader, which allows me to have 4 queries:</p>&#xA;<ol>&#xA;<li>Get users by id 2</li>&#xA;<li>Get companies where user_id = 2</li>&#xA;<li>Get countries with country_ids from Query (2)</li>&#xA;<li>Get planets with planet_ids from Query (3)</li>&#xA;</ol>&#xA;<p>Am I understanding it right?</p>&#xA;",1076731,,1256041,2021-03-11 10:10:11,2021-03-11 10:11:04,GraphQL and SQL - Is It Possible to Reduce Database Calls with 1 SQL JOIN?,<sql><node.js><postgresql><graphql>,1,0,0,2018-07-17 18:48:58
51457839,2,,50784881,6,,"<p>There is a difference between AWS Amplify and AWS App Sync. </p>&#xA;&#xA;<p><a href=""https://aws.amazon.com/about-aws/whats-new/2017/11/introducing-aws-amplify-a-declarative-javascript-library-for-cloud-development-with-mobile-or-web-applications/"" rel=""noreferrer"">AWS Amplify</a> is a <a href=""https://github.com/aws-amplify/amplify-js"" rel=""noreferrer"">library</a> for web and mobile developement in JavaScript providing better access to AWS services like Auth, Analytics, Storage, APIs, Caching.</p>&#xA;&#xA;<p>AWS AppSync is a combination of service that works as a GraphQL server and SDK (for <a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-js"" rel=""noreferrer"">web</a>, iOS and Android). This SDK extends Apollo Client to provide capabilities like Offline and Realtime synchronization out of the box.</p>&#xA;&#xA;<p>So, to answer your question: AWS AppSync does provide offline via its SDK out of the box and you shouldn’t need to do anything specifically to set up that.</p>&#xA;",3978206,,,,2018-07-21 16:03:52,"",,0,0,0,2018-07-21 16:03:52
51523527,2,,51523319,0,,<p>What does your response template look like in the resolver? It should be <code>$util.toJson($ctx.result.data.QuestionTable)</code> based on the above table name being <code>QuestionTable</code> as that gets automatically translated into the response context.</p>&#xA;,2733539,,,,2018-07-25 16:18:07,"",,0,1,0,2018-07-25 16:18:07
51524024,2,,51523319,2,,"<p>Turns out I'd given batch write permissions to a similarly named role instead of the role affecting this data source. If you see a similar issue, check your IAM roles/permissions. Silly me. </p>&#xA;",1541609,,,,2018-07-25 16:49:46,"",,0,2,0,2018-07-25 16:49:46
51549333,2,,51548795,0,,"<p>Since the data is correctly stored in DynamoDB, it looks like there could be a type mismatch in the Response Mapping template. Please enable Cloudwatch logging for your API with <code>ALL</code> as the setting. You can then check the CloudWatch logs for the evaluated Response Mapping template and then compare <code>ctx.result.data</code> with the shape of the User type.</p>&#xA;&#xA;<p>If it still doesn't work, please post your schema and mapping templates here so I can try and replicate it on my end. Thanks.</p>&#xA;",640607,,,,2018-07-27 00:54:38,"",,0,2,0,2018-07-27 00:54:38
51589107,1,,,3,4331,"<p>I want to use Odata as a query builder in my api's hosted on aws lamda and exposed using AWS api gateway. On reading several aws documentation, I found that people have faced several issues with this earlier. Can someone please tell me about whether it's supported and if not what can be an alternative for the same?</p>&#xA;&#xA;<p>Thanks in advance!  </p>&#xA;",6159686,,,,2018-07-30 08:00:51,Does AWS Api GateWay supports OData?,<api><amazon-web-services><aws-lambda><odata><graphql>,1,0,0,2018-07-30 07:39:07
51643105,2,,36451910,0,,<p>You can use this ES6 syntax in front-end:</p>&#xA;&#xA;<pre><code>Object.keys(data).forEach((key) =&gt; (data[key] == null) &amp;&amp; delete data[key]);&#xA;</code></pre>&#xA;,7213704,,3390419,2018-08-02 00:18:18,2018-08-02 00:18:18,"",,0,0,0,2018-08-01 22:31:31
51659099,1,51659585,,12,3512,"<p>I have a DynamoDB connected to step functions and I am building a UI to display changes. I connected the DB to an AppSync instance and have tried using subscriptions through AppSync, but it seems they only observe mutations within the current AppSync.</p>&#xA;&#xA;<p>How can I subscribe to the data source changes directly?</p>&#xA;",3250569,,,,2018-08-02 17:53:30,How do I subscribe directly to my AWS AppSync data source?,<amazon-dynamodb><graphql><aws-appsync>,1,0,0,2018-08-02 17:20:12
51659585,2,,51659099,14,,"<p>You are correct. Currently, AppSync Subscriptions are only triggered from GraphQL Mutations. If there are changes made to the DynamoDB from a source other than AppSync, subscriptions will not trigger.</p>&#xA;&#xA;<p>If you want to track all changes being made to DynamoDB table and publish them using AppSync, you can do the following:</p>&#xA;&#xA;<p>1) Setup a DynamoDB stream to capture changes and feed the changes to AWS Lambda</p>&#xA;&#xA;<p><a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html"" rel=""noreferrer"">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.html</a>&#xA;<a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.Lambda.html"" rel=""noreferrer"">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.Lambda.html</a></p>&#xA;&#xA;<p>2) Setup an AppSync mutation with a Local (no datasource) resolver. You can use this to publish messages to subscribers without writing to a datasource.</p>&#xA;&#xA;<p><a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-local-resolvers.html"" rel=""noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-local-resolvers.html</a></p>&#xA;&#xA;<p>3) Make the DynamoDB Stream Lambda function (setup in step 1) call the AWS AppSync mutation (setup in step 2).</p>&#xA;&#xA;<p>This will enable publishing ALL changes made to a DynamoDB table to AppSync subscribers, regardless of where the change came from.</p>&#xA;",5683782,,,,2018-08-02 17:53:30,"",,0,7,0,2018-08-02 17:53:30
51679544,1,,,0,286,"<p>Using AWS AppSync, Graphql and DynamoDB</p>&#xA;&#xA;<p>The following query is causing me an issue. </p>&#xA;&#xA;<p>eventId is an optional field. &#xA;When running the below query, records with the optional eventId field trigger an error. I would expect eventId to be null, if the resolver could not execute.. However the below message is triggered. </p>&#xA;&#xA;<p>How would this be resolved?</p>&#xA;&#xA;<pre><code>query listTickets {&#xA;  listTickets {&#xA;    items {&#xA;      id,&#xA;      eventId {&#xA;       id,&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>""message"": ""The provided key element does not match the schema (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException; Request ID: FTFDINCA42EALGI59I2VGH07G7VV4KQNSO5AEMVJF66Q9ASUAAJG)""</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""GetItem"",&#xA;    ""key"": {&#xA;        ""id"": $util.dynamodb.toDynamoDBJson($ctx.args.eventId),&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",401705,,401705,2018-08-03 20:25:31,2018-08-03 20:25:31,AppSync Optional Resolver,<amazon-dynamodb><schema><graphql><resolver><aws-appsync>,0,5,0,2018-08-03 20:13:53
51739550,1,51788879,,2,639,"<p>I have a react project set up with AWS Amplify and Appsync.</p>&#xA;&#xA;<p>I am using the GraphQL functionality in Amplify to interface with AppSync.</p>&#xA;&#xA;<p>I am trying to upload an image to S3 from the react app. Has anyone done this through Amplify GraphQL? Could you please help?</p>&#xA;&#xA;<p>BTW, I have read the documentation about how to do this with Apollo and aws-appsync-react. I am trying to figure out how to do with the GraphQL functionality built into Amplify.</p>&#xA;",1580359,,,,2019-11-08 17:26:18,Upload image with AWS Amplify Appsync in React,<graphql><aws-appsync><aws-amplify>,2,0,0,2018-08-08 06:00:59
51788879,2,,51739550,2,,"<p>I think right now it is not possible to upload complex object via Amplify.API as for uploading with AppSync you need to submit <code>complexObjectsCredentials</code> to AppSync client.</p>&#xA;&#xA;<pre><code>const client = new AWSAppSyncClient({&#xA;    url: ENDPOINT,&#xA;    region: REGION,&#xA;    auth: { .. },&#xA;    complexObjectsCredentials: () =&gt; Auth.currentCredentials(),&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>And it seems you cant provide those credentials when configuring amplify.</p>&#xA;&#xA;<p>Alternatively you could use 'Amplify.Storage' module to upload files without AppSync</p>&#xA;",9359164,,9359164,2018-08-10 15:13:16,2018-08-10 15:13:16,"",,0,0,0,2018-08-10 14:40:01
51803111,1,,,6,5311,"<p>I'm quite new to AppSync (and GraphQL), in general, but I'm running into a strange issue when hooking up resolvers to our DynamoDB tables. Specifically, we have a nested Map structure for one of our item's attributes that is arbitrarily constructed (its complexity and form depends on the type of parent item) &mdash; a little something like this:</p>&#xA;&#xA;<pre><code>""item"" : {&#xA;    ""name"": ""something"",&#xA;    ""country"": ""somewhere"",&#xA;    ""data"" : {&#xA;        ""nest-level-1a"": {&#xA;            ""attr1a"" : ""foo"",&#xA;            ""attr1b"" : ""bar"",&#xA;            ""nest-level-2"" : {&#xA;                ""attr2a"": ""something else"",&#xA;                ""attr2b"": [&#xA;                    ""some list element"",&#xA;                    ""and another, for good measure""&#xA;                ]&#xA;            }&#xA;        }&#xA;    },&#xA;    ""cardType"": ""someType""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Our accompanying GraphQL type is the following:</p>&#xA;&#xA;<pre><code>type Item {&#xA;    name: String!&#xA;    country: String!&#xA;    cardType: String!&#xA;    data: AWSJSON!  ## note: it was originally String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When we query the item we get the following response:</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;        ""genericItemQuery"": {&#xA;            ""name"": ""info/en/usa/bra/visa"",&#xA;            ""country"": ""USA:BRA"",&#xA;            ""cardType"": ""visa"",&#xA;            ""data"": ""{\""tourist\"":{\""reqs\"":{\""sourceURL\"":\""https://travel.state.gov/content/passports/en/country/brazil.html\"",\""visaFree\"":false,\""type\"":\""eVisa required\"",\""stayLimit\"":\""30 days from date of entry\""},\""pages\"":\""One page per stamp required\""}}""&#xA;}}}&#xA;</code></pre>&#xA;&#xA;<p>The problem is we can't seem to get the <code>Item.data</code> field resolver to return a JSON object (even when we attach a separate field-level resolver to it on top of the general Query resolver). It always returns a String and, weirdly, if we change the expected field type to String!, the response will replace all <code>:</code> in data with <code>=</code>. We've tried everything with our response resolvers, including suggestions like <a href=""https://stackoverflow.com/questions/51483182/how-return-json-object-from-dynamodb-with-appsync"">How return JSON object from DynamoDB with appsync?</a>, but we're completely stuck at this point.</p>&#xA;&#xA;<p>Our current response resolver for our query has been reverted back to the standard response after none of the suggestions in the aforementioned post worked:</p>&#xA;&#xA;<pre><code>## 'Before' response mapping template on genericItemQuery query; same result as the 'After' listed below **&#xA;#set($result = $ctx.result)&#xA;#set($result.data = $util.parseJson($ctx.result.data))&#xA;$util.toJson($result)&#xA;&#xA;## 'After' response mapping template **&#xA;$util.toJson($ctx.result)&#xA;</code></pre>&#xA;&#xA;<p>We're trying to avoid a situation where we need to include supporting types for each nest level in <code>data</code> (since it changes based on parent Item type and in cases like the example I gave it can have three or four tiers), and we thought changing the schema type to <code>AWSJSON!</code> would do the trick. I'm beginning to worry there's no way to get around rebuilding our base schema, though. Any suggestions to the contrary would be helpful!</p>&#xA;&#xA;<p>P.S. I've noticed in the CloudWatch logs that the appropriate JSON response exists under the <code>context.result.data</code> response field, but somehow there's the following <code>transformedTemplate</code> (which, again, I find very unusual considering we're not applying any mapping template except to transform the result into valid JSON):</p>&#xA;&#xA;<pre><code>""arn"": ...&#xA;""transformedTemplate"": ""{data={tourist={reqs={sourceURL=https://travel.state.gov/content/passports/en/country/brazil.html, visaFree=false, type=eVisa required, stayLimit=30 days from date of entry}, pages=One page per stamp required}}, resIds=USA:BRA, cardType=visa, id=info/en/usa/bra/visa}"",&#xA;""context"": ...&#xA;</code></pre>&#xA;&#xA;<p>Apologies for the lengthy question, but I'm stumped. </p>&#xA;",5989171,,5989171,2018-08-11 20:03:50,2019-09-06 07:48:25,Return nested JSON in AWS AppSync query,<json><graphql><aws-appsync><vtl>,2,3,0,2018-08-11 19:37:04
51854491,1,51868122,,3,411,"<p>I'm trying to run an apollo graphql server on AWS lambda. The current architecture of the server is this - </p>&#xA;&#xA;<p>One main lambda function which holds the schema and this is the function that the client talks to. Each resolver in this function calls other lambda functions that holds the core logic of the resolver. Other lambda functions are called using lambda.invoke method.</p>&#xA;&#xA;<p>A bunch of other lambda functions each holding logic for a specific tasks. These will be used by resolvers in main lambda function. These functions also talk to dynamoDB for storage.</p>&#xA;&#xA;<p>Problem - Client makes a request, the main lambda function receives it, calls another lambda function for results, the main function gets the result, returns the result to the user.&#xA;The main lambda function is running unnecessarily till it gets result back from the lambda function that it invoked. This is increase cost and there could also be chains going more that 2 levels.</p>&#xA;&#xA;<p>One solution that was suggested was to jam up everything into one function. But wouldn't that be difficult to scale in future? And when it grows I'll again start facing the same problem.</p>&#xA;&#xA;<p>How to typically people structure their graphql server on lambda?</p>&#xA;",10159658,,174777,2018-08-15 23:33:31,2018-08-16 00:29:51,Running a graphql app on AWS lambda,<amazon-web-services><aws-lambda><graphql><serverless>,1,0,0,2018-08-15 07:22:42
51881703,2,,51864539,0,,<p>So it turns out that I had everything setup correctly above. Instead of it being an issue with <code>react-apollo</code> it was an issue with my Info.plist file. I hadn't enabled the ability of the iOS app to make HTTP requests. It was only allowing HTTPS. I fixed it with this entry in my Info.plist.</p>&#xA;&#xA;<pre><code>&lt;key&gt;NSAppTransportSecurity&lt;/key&gt;&#xA;&lt;dict&gt;&#xA;    &lt;key&gt;NSAllowsArbitraryLoads&lt;/key&gt;&#xA;    &lt;true/&gt;&#xA;&lt;/dict&gt;&#xA;</code></pre>&#xA;,922401,,,,2018-08-16 16:35:23,"",,0,0,0,2018-08-16 16:35:23
51910962,1,53930640,,0,531,"<p>I'm preparing a project with <code>GraphQL</code> server, using <code>Prisma</code> to connect with the database, all this with <code>Typscript</code>.</p>&#xA;&#xA;<p>And the compiler is returning me :</p>&#xA;&#xA;<p>Error: Whoops. Looks like an internal server error. Search your server logs for request ID: local:management:cjkzo60s4000e0a01tuoln3l4: {""response"":{""data"":{""deploy"":null},""errors"":[{""message"":""Whoops. Looks like an internal server error. Search your server logs for request ID: local:management:cjkzo60s4000e0a01tuoln3l4"",""path"":[""deploy""],""locations"":[{""line"":2,""column"":9}],""requestId"":""local:management:cjkzo60s4000e0a01tuoln3l4""}],""status"":200},""request"":{""query"":""      mutation($name: String!, $stage: String! $types: String! $dryRun: Boolean $secrets: [String!], $subscriptions: [FunctionInput!], $force: Boolean) {\n        deploy(input: {\n          name: $name\n          stage: $stage\n          types: $types\n          dryRun: $dryRun\n          secrets: $secrets\n          subscriptions: $subscriptions\n          force: $force\n        }) {\n          errors {\n            type\n            field\n            description\n          }\n          warnings {\n            type\n            field\n            description\n          }\n          migration {\n            ...MigrationFragment\n          }\n        }\n      }\n      \nfragment MigrationFragment on Migration {\n  revision\n  steps {\n    type\n    __typename\n    ... on CreateEnum {\n      name\n      ce_values: values\n    }\n    ... on CreateField {\n      model\n      name\n      cf_typeName: typeName\n      cf_isRequired: isRequired\n      cf_isList: isList\n      cf_isUnique: unique\n      cf_relation: relation\n      cf_defaultValue: default\n      cf_enum: enum\n    }\n    ... on CreateModel {\n      name\n    }\n    ... on CreateRelation {\n      name\n      leftModel\n      rightModel\n    }\n    ... on DeleteEnum {\n      name\n    }\n    ... on DeleteField {\n      model\n      name\n    }\n    ... on DeleteModel {\n      name\n    }\n    ... on DeleteRelation {\n      name\n    }\n    ... on UpdateEnum {\n      name\n      newName\n      values\n    }\n    ... on UpdateField {\n      model\n      name\n      newName\n      typeName\n      isRequired\n      isList\n      isUnique: unique\n      relation\n      default\n      enum\n    }\n    ... on UpdateModel {\n      name\n      um_newName: newName\n    }\n  }\n}\n\n    "",""variables"":{""name"":""default"",""stage"":""default"",""types"":""enum UserType {\n    CUSTOMER\n    MAKER\n    ADMIN\n}\n\n\nenum OfferType {\n    NORMAL\n    LTS\n}\n\n\nenum DesignType {\n    MUSIC\n    GRAPHIC_ART\n    PIXEL_ART\n    MOTION_DESIGN\n}\n\nenum StoryType {\n    SMALL\n    LONG\n}\n\ninterface Account {\n    id: ID! @unique\n    registered: Boolean! @default(value: \""false\"")\n    contacts: [Account!]!\n    address: Address\n    favorite: [Service!]!\n}\n\ntype Address {\n    id: ID! @unique\n    city: String!\n    country: String!\n    street: String\n    houseNumber: String\n    phoneNumber: String\n}\n\ntype User implements Account {\n    id: ID! @unique\n    registered: Boolean! @default(value: \""false\"")\n    contacts: [Account!]!\n    address: Address\n    favorite: [Service!]!\n    gender: Gender\n    personalData: PersonalData\n    type: UserType\n}\n\ntype PersonalData {\n    id: ID! @unique\n    firstName: String\n    lastName: String!\n    email: String!\n}\n\ntype Organisation implements Account {\n    id: ID! @unique\n    registered: Boolean! @default(value: \""false\"")\n    contacts: [Account!]!\n    address: Address\n    favorite: [Service!]!\n    responsible: User\n}\n\ntype Payment {\n    id: ID! @unique\n    date: DateTime!\n    price: Int!\n}\n\ntype Purchase {\n    id: ID! @unique\n    payment: Payment!\n    seller: Account!\n    buyer: Account!\n    services: [Service!]!\n}\n\ntype Offer {\n    price: Int!\n    type: OfferType\n}\n\ninterface Service {\n    id: ID! @unique\n    creationDate: DateTime!\n    updateDate: DateTime!\n    comments: [Comment!]!\n    author: Account!\n    offer: Offer\n}\n\ntype Design implements Service {\n    id: ID! @unique\n    creationDate: DateTime!\n    updateDate: DateTime!\n    comments: [Comment!]!\n    author: Account!\n    offer: Offer\n    type: [DesignType!]!\n}\n\ntype Story implements Service {\n    id: ID! @unique\n    creationDate: DateTime!\n    updateDate: DateTime!\n    comments: [Comment!]!\n    author: Account!\n    offer: Offer\n    endDate: DateTime!\n    type: [StoryType!]!\n}\n\ntype Comment {\n    id: ID! @unique\n    author: Account! @relation(name: \""Writer\"")\n    service: Service!\n}\n\n"",""secrets"":null,""subscriptions"":[]}}}&#xA;    at GraphQLClient. (/usr/local/lib/node_modules/prisma/node_modules/graphql-request/src/index.ts:72:13)&#xA;    at step (/usr/local/lib/node_modules/prisma/node_modules/graphql-request/dist/src/index.js:40:23)&#xA;    at Object.next (/usr/local/lib/node_modules/prisma/node_modules/graphql-request/dist/src/index.js:21:53)&#xA;    at fulfilled (/usr/local/lib/node_modules/prisma/node_modules/graphql-request/dist/src/index.js:12:58)&#xA;    at &#xA;    at process._tickCallback (internal/process/next_tick.js:160:7)</p>&#xA;&#xA;<p>I hope you could read, and also hope someone can help me!</p>&#xA;&#xA;<p>Thank you for reading :)</p>&#xA;",7748446,,,,2018-12-26 10:18:19,Compiler error with Prisma,<typescript><graphql><prisma>,1,2,0,2018-08-18 17:13:10
51922631,1,,,2,1060,"<p>I've been playing around with resolvers in graphql and need what's seemingly a simple query, but I can't figure it out. </p>&#xA;&#xA;<p>I want to query a table and get results in something like this: </p>&#xA;&#xA;<pre><code>SELECT hero_id, count(id) FROM ""Build"" &#xA;GROUP BY hero_id&#xA;ORDER BY hero_id&#xA;</code></pre>&#xA;&#xA;<p>How do I write the resolver to return the count of rows by id on a table?</p>&#xA;&#xA;<p>I thought the Table.findAndCountAll() would return results I'm looking for.</p>&#xA;&#xA;<pre><code>const buildCount = {&#xA;&#xA;&#xA;type: BuildCountType,&#xA;&#xA;  resolve(parent, args){&#xA;    return Build.findAndCountAll().then(result =&gt; {&#xA;      console.log(result)&#xA;      return {&#xA;        count: result.rows&#xA;      }&#xA;    })&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Thanks,</p>&#xA;&#xA;<p>StuckAndConfused ;)</p>&#xA;",625044,,,,2018-08-19 23:34:21,How to get count(id) from table with graphql,<graphql>,0,2,0,2018-08-19 23:34:21
51935902,1,52789305,,9,4218,"<p>I am using AWS Appsync where I want to get a response from a successfully executed mutation. When I try my setup in the Appsync Graphql console I get a filled <code>""data"": { ""mutateMeeting"" }</code> response: <a href=""https://i.stack.imgur.com/Qp8bP.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Qp8bP.png"" alt=""Appsync mutation""></a></p>&#xA;&#xA;<p>When I try the same in my react application I can see in the dynamodb database, that the mutations happen, but <em>react-apollo</em> does not return the mutation response. As you can see in the apollo dev tool, the <code>""data"": { ""mutateMeeting"" }</code> is <strong>null</strong> :<a href=""https://i.stack.imgur.com/LxHvW.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/LxHvW.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>What am I missing?</p>&#xA;&#xA;<p>The corresponding <strong>graphql schema</strong> reads:</p>&#xA;&#xA;<pre><code>input MeetingInput {&#xA;  id: String,&#xA;  start: String!,&#xA;  end: String!,&#xA;  agreements: [AgreementInput]!&#xA;}&#xA;&#xA;type Meeting {&#xA;  id: String!&#xA;  start: String!&#xA;  end: String!&#xA;  agreements: [Agreement]&#xA;}&#xA;&#xA;type Mutation { &#xA;  mutateMeeting (&#xA;    companyId: String!,&#xA;    meeting: MeetingInput!&#xA;  ): Meeting!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>the <strong>graphql-tag mutation</strong> reads:</p>&#xA;&#xA;<pre><code>import gql from 'graphql-tag'&#xA;&#xA;export default gql`&#xA;  mutation mutateMeeting($companyId: String!, $meeting: MeetingInput!) {&#xA;    mutateMeeting(companyId: $companyId, meeting: $meeting) {&#xA;      id,&#xA;      start,&#xA;      end&#xA;    }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>and the <strong>react-apollo</strong> inklusion is given by:</p>&#xA;&#xA;<pre><code>import React, { Component } from 'react'&#xA;// antd&#xA;import { Spin } from 'antd'&#xA;// graphql&#xA;import { compose, graphql } from 'react-apollo'&#xA;import mutateMeeting from '../queries/mutateMeeting'&#xA;&#xA;class MeetingStatus extends Component {&#xA;  componentDidMount() {&#xA;    const { mutateMeeting, meeting } = this.props&#xA;    console.log(meeting)&#xA;    const variables = {&#xA;      companyId: meeting.company.id,&#xA;      meeting: {&#xA;        start: meeting.start.toISOString(),&#xA;        end: meeting.end.toISOString(),&#xA;        agreements: meeting.agreements,&#xA;      }&#xA;    }&#xA;    console.log(variables)&#xA;&#xA;    mutateMeeting({&#xA;      variables&#xA;    }).then(({data}) =&gt; console.log('got data', data))&#xA;    .catch(err =&gt; console.log(err))&#xA;  }&#xA;&#xA;  render() {&#xA;    console.log(this.props)&#xA;    return &lt;div&gt;convocado&lt;/div&gt;&#xA;  }&#xA;}&#xA;&#xA;const MeetingStatusWithInfo = compose(&#xA;  graphql(mutateMeeting, { name: 'mutateMeeting' })&#xA;)(MeetingStatus)&#xA;&#xA;export default (MeetingStatusWithInfo)&#xA;</code></pre>&#xA;&#xA;<p><strong>Appsync request</strong></p>&#xA;&#xA;<pre><code>#set($uuid = $util.autoId())&#xA;#set($batchData = [])&#xA;#set( $meeting = ${context.arguments.meeting} )&#xA;&#xA;## Company&#xA;#set( $meetingMap = {&#xA;  ""PK"" : $context.arguments.companyId,&#xA;  ""SK"" : ""Meeting-$uuid"",&#xA;  ""start"" : $meeting.start,&#xA;  ""end"" : $meeting.end&#xA;} )&#xA;$util.qr($batchData.add($util.dynamodb.toMapValues($meetingMap)))&#xA;&#xA;## Meeting&#xA;$util.qr($meetingMap.put(""PK"", $meetingMap.SK))&#xA;$util.qr($batchData.add($util.dynamodb.toMapValues($meetingMap)))&#xA;&#xA;## Agreements&#xA;#foreach($agreement in $meeting.agreements)&#xA;  #set( $agreementId = $util.autoId())&#xA;  #set( $agreementMap = {&#xA;    ""PK"" : $meetingMap.SK,&#xA;    ""SK"" : ""Agreement-$agreementId"",&#xA;    ""name"" : $agreement.name&#xA;  } )&#xA;&#xA;  $util.qr($batchData.add($util.dynamodb.toMapValues($agreementMap)))&#xA;#end&#xA;&#xA;{&#xA;  ""version"" : ""2018-05-29"",&#xA;  ""operation"" : ""BatchPutItem"",&#xA;  ""tables"": {&#xA;    ""Vysae"": $utils.toJson($batchData)&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Appsync response</strong>:</p>&#xA;&#xA;<pre><code>#set( $meeting = $context.result.data.Vysae[1] )&#xA;{&#xA;  ""id"": ""$meeting.PK"",&#xA;  ""start"": ""$meeting.start"",&#xA;  ""end"": ""$meeting.end""&#xA;}&#xA;</code></pre>&#xA;",3360590,,3360590,2018-08-20 18:13:48,2018-10-13 20:18:16,React-Apollo Mutation returns empty response,<reactjs><graphql><apollo><react-apollo><aws-appsync>,2,6,0,2018-08-20 17:36:41
51992527,2,,51986819,0,,"<p>You can use <strong>DynamoDB Batch Resolvers</strong> to accomplish this.</p>&#xA;&#xA;<p>You would attach a resolvers to the <strong>listBookByName</strong> field. The request mapping template (Takes the GraphQL query and converts it to a DynamoDB query) would look like the following:</p>&#xA;&#xA;<pre><code>#set($ids = [])&#xA;#foreach($id in ${ctx.args.bookID})&#xA;    #set($map = {})&#xA;    $util.qr($map.put(""id"", $util.dynamodb.toString($id)))&#xA;    $util.qr($ids.add($map))&#xA;#end&#xA;&#xA;{&#xA;    ""version"" : ""2018-05-29"",&#xA;    ""operation"" : ""BatchGetItem"",&#xA;    ""tables"" : {&#xA;        ""Books"": {&#xA;            ""keys"": $util.toJson($ids),&#xA;            ""consistentRead"": true&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Your response mapping template will then have to marshall the results into your <strong>listBookByNameConnection</strong> type.</p>&#xA;&#xA;<p>Here is an example in the documentation where they have <strong>batchGet</strong> query which takes a list of identifiers, and returns a list of posts.</p>&#xA;&#xA;<p><a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html#single-table-batch"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html#single-table-batch</a></p>&#xA;",5683782,,,,2018-08-23 18:53:22,"",,0,3,0,2018-08-23 18:53:22
51999721,1,52001510,,23,25441,"<p>I'm using ReactJS and <code>aws-amplify</code> to execute graphql operations.</p>&#xA;&#xA;<p><strong>CODE:</strong></p>&#xA;&#xA;<pre><code>import {&#xA;   API,&#xA;   graphqlOperation&#xA;} from 'aws-amplify';&#xA;&#xA;import { UpdateInput } from './mutations.js';&#xA;&#xA;// Call mutation&#xA;const input = { /* some values */ };&#xA;API.graphql(graphqlOperation(UpdateInput, input)).then(...);&#xA;</code></pre>&#xA;&#xA;<p>GraphQL mutation definition:</p>&#xA;&#xA;<pre><code>export const UpdateInput = `mutation UpdateInput($input: Input!) {&#xA;   updateInput(input: $input) {&#xA;      id, &#xA;      name&#xA;   }   &#xA;}`&#xA;</code></pre>&#xA;&#xA;<p>GraphQL Schema:</p>&#xA;&#xA;<pre><code>input Input {&#xA;   id: ID!&#xA;   name: String&#xA;}&#xA;&#xA;type Mutation {&#xA;   updateInput(input: Input!): String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, I get an error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>[Log] Variable 'input' has coerced Null value for NonNull type&#xA;  'Input!'</p>&#xA;</blockquote>&#xA;&#xA;<p>Using AWS console my mutation works and <code>input</code> is NonNull (using a debugger)</p>&#xA;&#xA;<p>Any ideas what's causing the error?</p>&#xA;",8012206,,8012206,2018-08-24 08:07:30,2019-12-10 02:35:37,AWS GraphQL: Variable 'input' has coerced Null value for NonNull type 'Input!',<reactjs><graphql><aws-appsync><aws-amplify>,1,0,0,2018-08-24 07:43:46
52000929,1,,,0,325,<p>I am new in GraphQL so I want to fetch MySQL all table data in Express server and then push it to ReactJS. How do I do this?</p>&#xA;,7841191,,2551894,2019-03-17 15:48:03,2019-03-17 17:15:30,How to Fetch MySQL all table data using GraphQL,<mysql><reactjs><express><graphql>,1,0,0,2018-08-24 09:01:01
52047350,2,,52045369,2,,"<p>To clarify, are you storing objects like this in DynamoDB:</p>&#xA;&#xA;<pre><code>{ PartitionKey (HASH), Tag (SortKey), Name, Version, FBX, CreatedAt, Description }&#xA;</code></pre>&#xA;&#xA;<p>and using a DynamoDB Query operation to fetch all rows for a given HashKey.</p>&#xA;&#xA;<pre><code>Query #PartitionKey = :PartitionKey&#xA;</code></pre>&#xA;&#xA;<p>and getting back a list of objects some of which have a different ""Tag"" value and one of which is ""Model-0"" (aka the same value as the partition key) and I assume that record contains all other values for the record. E.G.</p>&#xA;&#xA;<pre><code>[&#xA;  { PartitionKey, Tag: 'ValueOfPartitionKey', Name, Version, FBX, CreatedAt, ... },&#xA;  { PartitionKey, Tag: 'Tag-Tree' },&#xA;  { PartitionKey: Tag: 'Tag-Building' }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>You can definitely write resolver logic without too much hassle that reduces the list of model objects into a single object with a list of ""Tags"". Let's start with a single item and see how to implement a <code>getModel(id: ID!): Model</code> query:</p>&#xA;&#xA;<p>First define the response mapping template that will get all rows for a partition key:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Query"",&#xA;    ""query"" : {&#xA;        ""expression"": ""#PartitionKey = :id"",&#xA;        ""expressionValues"" : {&#xA;            "":id"" : {&#xA;                ""S"" : ""${ctx.args.id}""&#xA;            }&#xA;        },&#xA;        ""expressionNames"": {&#xA;          ""#PartitionKey"": ""PartitionKey"" # whatever the table hash key is&#xA;        }&#xA;    },&#xA;    # The limit will have to be sufficiently large to get all rows for a key&#xA;    ""limit"": $util.defaultIfNull(${ctx.args.limit}, 100)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then to return a single model object that reduces ""Tag"" to ""Tags"" you can use this response mapping template:</p>&#xA;&#xA;<pre><code>#set($tags = [])&#xA;#set($result = {})&#xA;#foreach( $item in $ctx.result.items )&#xA;    #if($item.PartitionKey == $item.Tag)&#xA;      #set($result = $item)&#xA;    #else&#xA;        $util.qr($tags.add($item.Tag))&#xA;    #end&#xA;#end&#xA;$util.qr($result.put(""Tags"", $tags))&#xA;$util.toJson($result)&#xA;</code></pre>&#xA;&#xA;<p>This will return a response like this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""PartitionKey"": ""..."",&#xA;  ""Name"": ""..."",&#xA;  ""Tags"": [""Tag-Tree"", ""Tag-Building""],&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Fundamentally I see no problem with this but its effectiveness depends upon your query patterns. Extending this to the getAll use is doable but will require a few changes and most likely a really inefficient Scan operation due to the fact that the table will be sparse of actual information since many records are effectively just tags. You can alleviate this with GSIs pretty easily but more GSIs means more $.</p>&#xA;&#xA;<p>As an alternative approach, you can store your Tags in a different ""Tags"" table. This way you only store model information in the Model table and tag information in the Tag table and leverage GraphQL to perform the join for you. In this approach have <em>Query.getAllModels</em> perform a ""Scan"" (or Query) on the Model table and then have a <em>Model.Tags</em> resolver that performs a Query against the Tag table (HK: ModelPartitionKey, SK: Tag). You could then get all tags for a model and later create a GSI to get all models for a tag. You do need to consider that now the nested <em>Model.Tag</em> query will get called once per model but Query operations are fast and I've seen this work well in practice.</p>&#xA;&#xA;<p>Hope this helps :)</p>&#xA;",2088684,,2088684,2018-08-27 21:49:10,2018-08-27 21:49:10,"",,0,0,0,2018-08-27 21:43:11
52047569,2,,52046495,2,,"<p>TLDR: If you have a type</p>&#xA;&#xA;<pre><code>type Post { id: ID! title String! }&#xA;</code></pre>&#xA;&#xA;<p>then <em>util.transform.toDynamoDBFilterExpression</em> would expect the value you provide to look like this:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""Scan"",&#xA;    ""filter"" : $util.transform.toDynamoDBFilterExpression(&#xA;      {&#xA;        id: {&#xA;          beginsWith:""Model""&#xA;        }&#xA;      }&#xA;   )&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The <em>$util.transform</em> utility functions were designed to work with a new project called the GraphQL Transform that was just released as part of AWS Amplify. The gist is that a set of client tools takes a simplified input schema annotated with GraphQL directives and passes it through a series of ""transformers"" that ""transform"" it into a fully descriptive CloudFormation document (and other output formats in the future). That CF doc fully implements the application defined by the schema and set of transformers (which you can write yourself for custom workflows).</p>&#xA;&#xA;<p>You can read more about the project here (<a href=""https://github.com/aws-amplify/amplify-cli/blob/master/graphql-transform-tutorial.md"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/blob/master/graphql-transform-tutorial.md</a>).</p>&#xA;&#xA;<p>And about how to write your own transformers here (<a href=""https://github.com/aws-amplify/amplify-cli/blob/master/how-to-write-a-transformer.md"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/blob/master/how-to-write-a-transformer.md</a>)</p>&#xA;",2088684,,2088684,2018-08-27 22:12:41,2018-08-27 22:12:41,"",,0,1,0,2018-08-27 22:06:01
52067916,2,,52051498,4,,"<p>It turns out Apollo had auto generated the type and all I had to do was declare it correctly in the build.gradle. I didn't need to add any custom type adapter to the ApolloClient.</p>&#xA;&#xA;<p>NOTE: The type Json was provided by our server. </p>&#xA;&#xA;<pre><code>apollo {&#xA;        useSemanticNaming = true&#xA;        customTypeMapping['ISOTime'] = ""java.util.Date""&#xA;        customTypeMapping['Json'] = ""java.lang.String""&#xA;    }&#xA;</code></pre>&#xA;",454509,,454509,2018-08-29 03:51:49,2018-08-29 03:51:49,"",,0,0,0,2018-08-29 00:37:13
52068726,2,,52048116,3,,"<p>I see a few things that I would personally change. The first is that I would avoid the nested DynamoDB scan operations. At least one of these can be replaced with a much faster query operation. The second is that I would consider rethinking how you are storing the data. Currently, there is no good way to list model objects.</p>&#xA;&#xA;<p><strong>Why is there no good way to list model objects?</strong></p>&#xA;&#xA;<p>Assuming each model object will have multiple tags then you are going to have a table that is sparsely populated by model objects. i.e. out of 100 rows you may have 20 - 50 models depending on how many tags the average model has. In DynamoDB, a table is split up based on the partition key causing rows that share the same partition key to be stored near each other to speed up query operations. With your setup where the Partition Key is essentially the unique id of a single model object this means that we can easily get a single model object. You can also quickly get the tags for a single object since those records are nearby as well.</p>&#xA;&#xA;<p><strong>The issue.</strong></p>&#xA;&#xA;<p>The DynamoDB scan operation looks at each partition one at a time, reads as many records as the requests <em>limit</em> allows or all of them if the <em>limit</em> is sufficiently large, and then, only after reading the records from the individual partitions, applies the filter expression before returning the final result. This means you may ask for the first 10 models but since the limit is applied before the scan filter, you may very well only get back 1 model (if that one model had 9 or more tags which would exhaust the limit while DynamoDB was reading the first partition). This may seem strange when coming from many different database systems and is an important consideration of its design.</p>&#xA;&#xA;<p>Here are two solutions to address this concern:</p>&#xA;&#xA;<p><strong>1. Store Models in one table and Tags in another.</strong></p>&#xA;&#xA;<p>NoSQL databases like DynamoDB allow you to store many types of data in the same table but there is nothing wrong with splitting them out. Traditionally it can be a pain to work with multiple tables in a NoSQL database that lacks a join operation or something similar, but fortunately for us we can use GraphQL to ""join"" data for us. With the approach, the <strong>Model</strong> table has a single partition key named ""id"" and your <strong>GetAllModels</strong> resolver is still a scan but this time on the model table. This way the table is not sparse and you will get 10 models when you ask for 10 models. The <strong>Tag</strong> table should have a partition key of <strong>modelId</strong> and a sort key of <strong>tagId</strong>. You would then have a resolver on the <strong>Model.tags</strong> field that does a query against the <strong>Tag</strong> table and looks for rows with the <strong>modelId == $ctx.source.id</strong>.</p>&#xA;&#xA;<p>This is essentially how @model and @connection work in the new graphql transform tooling launched as part of the amplify cli. You can see more here although the docs are as of writing still being improved. <a href=""https://aws-amplify.github.io/amplify-js/media/api_guide"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/amplify-js/media/api_guide</a></p>&#xA;&#xA;<p><strong>2. Store Models and Tags in the same table but change the key structure.</strong></p>&#xA;&#xA;<p>This approach works if you can reliably say that you will have less than 10GB of data per data type (e.g. Model &amp; Tag). For this approach you have a single table with a PartitionKey of <strong>Type</strong> and Sort Key of <strong>id</strong>. When you create objects you create them with a <strong>Type</strong> e.g ""Tag"" or ""Model"" etc and a unique <strong>id</strong> (like a uuid). To list objects of the same type you do a DynamoDB query operation on the partition key of the type to list e.g. ""Tag"" or ""Model"". You can then use GSIs to efficiently look up related objects. In your case you would store a ""modelId"" is every <strong>Tag</strong> object. You would then make a GSI using the ""modelId"" as the Partition Key. To list all the tags for a given model you could then do a DynamoDB query operation against that GSI.</p>&#xA;&#xA;<p>I'm sure there are many more ways to do this but hopefully this helps point in the right direction.</p>&#xA;",2088684,,,,2018-08-29 02:39:40,"",,0,4,0,2018-08-29 02:39:40
52069820,1,52084922,,2,2724,"<p>Struggling with this for sometime now, and applogies I changed the query name for the question to getDeviceReadings, I have been using getAllUserDevices (sorry for any confusion)</p>&#xA;&#xA;<pre><code>type Device {&#xA;   id: String&#xA;   device: String!&#xA;}&#xA;&#xA;type Reading {&#xA;   device: String&#xA;   time: Int&#xA;}&#xA;&#xA;type PaginatedDevices {&#xA;   devices: [Device]&#xA;   readings: [Reading]&#xA;   nextToken: String&#xA;}&#xA;&#xA;type Query {&#xA;   getDevicesReadings(nextToken: String, count: Int): PaginatedDevices&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then I have a resolver on the query getDevicesReadings which works fine and returns all the devices a user has so far so good</p>&#xA;&#xA;<pre><code>{&#xA;""version"": ""2017-02-28"",&#xA;""operation"": ""Query"",&#xA;""query"" : {&#xA;  ""expression"": ""id = :id"",&#xA;    ""expressionValues"" : {&#xA;      "":id"" : { ""S"" : ""${context.identity.username}"" }&#xA;    }&#xA;}&#xA;#if( ${context.arguments.count} )&#xA;    ,""limit"": ${context.arguments.count}&#xA;#end&#xA;#if( ${context.arguments.nextToken} )&#xA;    ,""nextToken"": ""${context.arguments.nextToken}""&#xA;#end&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>now I want to return all the readings that devices has based on the source result so I have a resolver on getDevicesReadings/readings</p>&#xA;&#xA;<pre><code>#set($ids = [])&#xA;#foreach($id in ${ctx.source.devices})&#xA;  #set($map = {})&#xA;  $util.qr($map.put(""device"", $util.dynamodb.toString($id.device)))&#xA;  $util.qr($ids.add($map))&#xA;#end&#xA;&#xA;{&#xA;""version"" : ""2018-05-29"",&#xA;""operation"" : ""BatchGetItem"",&#xA; ""tables"" : {&#xA;    ""readings"": {&#xA;        ""keys"": $util.toJson($ids),&#xA;        ""consistentRead"": true&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>With a response mapping like so .. </p>&#xA;&#xA;<pre><code>$utils.toJson($context.result.data.readings)&#xA;</code></pre>&#xA;&#xA;<p>I run a query </p>&#xA;&#xA;<pre><code>query getShit{&#xA;  getDevicesReadings{&#xA;    devices{&#xA;      device&#xA;     }&#xA;    readings{&#xA;      device&#xA;      time&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>this returns the following results </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getAllUserDevices"": {&#xA;     ""devices"": [&#xA;       {&#xA;         ""device"": ""123""&#xA;       },&#xA;       {&#xA;         ""device"": ""a935eeb8-a0d0-11e8-a020-7c67a28eda41""&#xA;       }&#xA;     ],&#xA;     ""readings"": [&#xA;       null,&#xA;       null&#xA;     ]&#xA;   }&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/9z0cs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9z0cs.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>As you can see on the image the primary partition key is device on the readings table I look at the logs and I have the following </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Yawml.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Yawml.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Sorry if you cant read the log it basically says that there are unprocessedKeys</p>&#xA;&#xA;<p>and the following error message </p>&#xA;&#xA;<pre><code>""message"": ""The provided key element does not match the schema (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException; Request ID: 0H21LJE234CH1GO7A705VNQTJVVV4KQNSO5AEMVJF66Q9ASUAAJG)"",&#xA;</code></pre>&#xA;&#xA;<p>I'm guessing some how my mapping isn't quite correct and I'm passing in readings as my keys ?</p>&#xA;&#xA;<p>Any help greatly appreciated </p>&#xA;",3241785,,,,2018-08-29 19:36:44,AWS Appsync Batch Resolver,<amazon-web-services><graphql><aws-appsync><resolver>,3,0,0,2018-08-29 05:06:46
52071188,2,,52069820,0,,"<p>So you can't have a batch resolver when you have primary sort key ?! </p>&#xA;&#xA;<p>So the answer was to create a lambda function and tack that on as my resolver </p>&#xA;&#xA;<pre><code>import boto3&#xA;from boto3.dynamodb.conditions import Key&#xA;&#xA;def lambda_handler(event, context):&#xA;&#xA;   list = []&#xA;   for device in event['source']['devices'] :&#xA;       dynamodb = boto3.resource('dynamodb')&#xA;       readings  = dynamodb.Table('readings')&#xA;       response = readings.query(&#xA;           KeyConditionExpression=Key('device').eq(device['device'])&#xA;       )&#xA;       items = response['Items']&#xA;       list.extend(items)&#xA;   return list&#xA;</code></pre>&#xA;",3241785,,,,2018-08-29 06:51:31,"",,0,0,0,2018-08-29 06:51:31
52077167,1,52084794,,3,4679,"<p>I'm trying to get a record from a GSI and I'm stucked.</p>&#xA;&#xA;<p>API Schema:</p>&#xA;&#xA;<pre><code>type DriverInfos {&#xA;    id: String!&#xA;    status: Int&#xA;    lastLat: Float&#xA;    lastLng: Float&#xA;    idDriver: String # GSI&#xA;}&#xA;&#xA;type Query {&#xA;    getDriverInfosByDriver(idDriver: String): DriverInfos&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Resolver : </p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Query"",&#xA;    ""index"" : ""idDriver-index"",&#xA;    ""query"" : {&#xA;        ## Provide a query expression. **&#xA;        ""expression"": ""#idDriver = :idDriver"",&#xA;        ""expressionNames"" : {&#xA;            ""#idDriver"" : ""idDriver""&#xA;        },&#xA;        ""expressionValues"" : {&#xA;            "":idDriver"" : {&#xA;                ""S"" : ""${ctx.args.idDriver}""        &#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Query : </p>&#xA;&#xA;<pre><code>query getDriverInfosByDriver{&#xA;  getDriverInfosByDriver(idDriver: ""1"") &#xA;    {    &#xA;      idDriver&#xA;      status&#xA;      lastLat&#xA;      lastLng &#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Return : </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getDriverInfosByDriver"": {&#xA;      ""idDriver"": null,&#xA;      ""status"": null,&#xA;      ""lastLat"": null,&#xA;      ""lastLng"": null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>GSI is well activated : Name : ""idDriver-index"" - PartitionKey : idDriver (String)&#xA;Try with other ids : 2, 3, ...</p>&#xA;&#xA;<p>It seems that it comes from the resolver. I tried with different resolver but it always return an error.</p>&#xA;&#xA;<p>Thank you in advance for your answers.</p>&#xA;",6103744,,,,2018-09-22 06:43:07,AppSync query on Global Secondary Index,<amazon-web-services><react-native><graphql><aws-appsync><resolver>,1,0,0,2018-08-29 12:12:24
52083207,1,52084188,,3,892,"<p>I would like to return the ImageSet type from the AddImageSet mutation. But I seem to be unable to do this because each field on my ImageSet type has it's own resolver, which is overwriting the resolver mapping template.</p>&#xA;&#xA;<p>Schema: </p>&#xA;&#xA;<pre><code>type ImageSet {&#xA;    SetKey: ID&#xA;    SetName: String&#xA;    SetCreatedAt: AWSTimestamp&#xA;    SetDescription: String&#xA;    SetTags: [Tag]&#xA;}&#xA;&#xA;type Mutation {&#xA;    AddImageSet(setName: String!, setDescription: String): ImageSet&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the mutation:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""PutItem"",&#xA;    ""key"" : {&#xA;        ""PartitionKey"" : { ""S"" : ""ImageSet"" },&#xA;        ""SortKey"" : { ""S"" : ""ImageSet-$util.autoId()"" }&#xA;    },&#xA;    ""attributeValues"" : {&#xA;        ""Name"": { ""S"" : ""${context.arguments.setName}"" },&#xA;        ""Description"": { ""S"" : ""${context.arguments.setDescription}"" },&#xA;        ""CreatedAt"": { ""N"" : $util.time.nowEpochSeconds() },&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and the response mapping template</p>&#xA;&#xA;<pre><code>{&#xA;    ""SetKey"" : ""$context.result.SortKey"",&#xA;    ""SetName"" : ""$context.result.Name"",&#xA;    ""SetCreatedAt"" : $context.result.CreatedAt,&#xA;    ""SetDescription"" : ""$context.result.Description""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I run this, the object returned by AddImageSet mutation has every field set as null, because the field resolvers are overwriting the response mapping template of the AddImageSet mutation.</p>&#xA;&#xA;<p>I have solved this by creating a duplicate 'ImageSetResult' type, just without resolvers attached to the field. Then if the AddImageSet Mutation returns that, everything is just fine. But these seems kind of redundant.</p>&#xA;&#xA;<p>Is there a better way to do this?</p>&#xA;",1580359,,1580359,2018-08-29 18:09:29,2018-08-29 18:42:42,Returning Appsync GraphQL type that also has field resolvers,<amazon-dynamodb><graphql><aws-appsync>,1,0,0,2018-08-29 17:30:59
52083465,2,,52069820,2,,"<p>You're correct, the request mapping template you provided doesn't match the primary key on the <code>readings</code> table. A <code>BatchGetItem</code> expects <code>keys</code> to be primary keys, however you are only passing the hash key. </p>&#xA;&#xA;<p>For the <code>BatchGetItem</code> call to succeed you must pass <strong>both hash and sort key</strong>, so in this case, both <code>device</code> and <code>time</code> attributes.</p>&#xA;&#xA;<p>Maybe a <code>Query</code> on the <code>readings</code> table would be more appropriate?</p>&#xA;",1060799,,,,2018-08-29 17:50:01,"",,0,4,0,2018-08-29 17:50:01
52084794,2,,52077167,10,,"<p>The issue is that a Query operation always returns a set of results not just one. If you want to leave your query type like this:</p>&#xA;&#xA;<pre><code>type Query {&#xA;    getDriverInfosByDriver(idDriver: String): DriverInfos&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>then you should to change your response mapping template to this:</p>&#xA;&#xA;<pre><code>#if($ctx.result.items.size() &gt; 0)&#xA;  $util.toJson($ctx.result.items[0])&#xA;#else&#xA;  null&#xA;#end&#xA;</code></pre>&#xA;&#xA;<p>If instead the <strong>getDriverInfosByDriver</strong> query should return multiple info objects then you should change your schema to:</p>&#xA;&#xA;<pre><code>type DriverInfo {&#xA;    id: String!&#xA;    status: Int&#xA;    lastLat: Float&#xA;    lastLng: Float&#xA;    idDriver: String # GSI&#xA;}&#xA;&#xA;type DriverInfoConnection {&#xA;  items: [DriverInfo]&#xA;  nextToken:String&#xA;}&#xA;&#xA;type Query {&#xA;    getDriverInfosByDriver(idDriver: String): DriverInfoConnection&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can then leave your response mapping template as the default:</p>&#xA;&#xA;<pre><code>$util.toJson($ctx.result)&#xA;</code></pre>&#xA;&#xA;<p>and then query it like so</p>&#xA;&#xA;<pre><code>query getDriverInfosByDriver{&#xA;  getDriverInfosByDriver(idDriver: ""1"") {&#xA;    items {    &#xA;      idDriver&#xA;      status&#xA;      lastLat&#xA;      lastLng &#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2088684,,,,2018-08-29 19:28:35,"",,0,3,0,2018-08-29 19:28:35
52084922,2,,52069820,2,,"<p>No, you can absolutely use batch resolvers when you have a primary sort key. The error in your example is that you were not providing the primary sort key to the resolver.</p>&#xA;&#xA;<p>This code needs to provide a ""time"" as well a ""device"" because you need both to fully specify the primary key.</p>&#xA;&#xA;<pre><code>#set($ids = [])&#xA;#foreach($id in ${ctx.source.devices})&#xA;  #set($map = {})&#xA;  $util.qr($map.put(""device"", $util.dynamodb.toString($id.device)))&#xA;  $util.qr($ids.add($map))&#xA;#end&#xA;</code></pre>&#xA;&#xA;<p>You should have something like it:</p>&#xA;&#xA;<pre><code>#set($ids = [])&#xA;#foreach($id in ${ctx.source.devices})&#xA;  #set($map = {})&#xA;  # The tables primary key is made up of ""device"" AND ""time""&#xA;  $util.qr($map.put(""device"", $util.dynamodb.toString($id.device)))&#xA;  $util.qr($map.put(""time"", $util.dynamodb.toString($id.time)))&#xA;  $util.qr($ids.add($map))&#xA;#end&#xA;</code></pre>&#xA;&#xA;<p>If you want to get many records that share the same ""device"" value but that have different ""time"" values, you need to use a DynamoDB Query operation, not a batch get.</p>&#xA;",2088684,,,,2018-08-29 19:36:44,"",,0,0,0,2018-08-29 19:36:44
52086862,1,52087663,,0,964,"<p>Currently I have my resolver as a lambda function :</p>&#xA;&#xA;<pre><code>import boto3&#xA;from boto3.dynamodb.conditions import Key&#xA;&#xA;def lambda_handler(event, context):&#xA;&#xA;  list = []&#xA;  for device in event['source']['devices'] :&#xA;      dynamodb = boto3.resource('dynamodb')&#xA;      readings  = dynamodb.Table('readings')&#xA;      response = readings.query(&#xA;          KeyConditionExpression=Key('device').eq(device['device'])&#xA;      )&#xA;      items = response['Items']&#xA;      list.extend(items)&#xA;  return list&#xA;</code></pre>&#xA;&#xA;<p>I would like to be able to have this as a VTL resolver on the dynamodb. My problem is that my table has a sort key <a href=""https://i.stack.imgur.com/LEgeu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LEgeu.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>This means I can't use a batch resolver to query on a bunch of id's because I would also need to provide the sort key, and I just want all the results by primary partition key. </p>&#xA;&#xA;<p>How do you query with a bunch of ids using VTL, basically replicating my lambda function in VTL. Is this even possible ? </p>&#xA;&#xA;<p>Schema added, please excuse the mess it is a work in progress and am attempting many things. Still very new to graphQL </p>&#xA;&#xA;<pre><code>type Device {&#xA;    id: String&#xA;    device: String!&#xA;}&#xA;&#xA;input DeviceInput {&#xA;    id: String&#xA;   device: String!&#xA;}&#xA;&#xA;type DeviceReadings {&#xA;   devices: [Device]&#xA;}&#xA;&#xA;type Mutation {&#xA;    createDevice(input: DeviceInput): Device&#xA;}&#xA;&#xA;type PaginatedDevices {&#xA;   devices: [Device]&#xA;   readings: [Reading]&#xA;   cows: [cow]&#xA;   nextToken: String&#xA;}&#xA;&#xA;type Query {&#xA;    getAllUserDevices(nextToken: String, count: Int): PaginatedDevices&#xA;    getAllDeviceReadings: DeviceReadings&#xA;    getAllUserReadings: DeviceReadings&#xA;    getAllReadings(deviceId: String!): Readings  &#xA;    getCowReadings(cowId: String!): UserCowReadings&#xA;}&#xA;&#xA;type Reading {&#xA;   device: String&#xA;   time: Int&#xA;   cow: Int&#xA;   battery: String&#xA;}&#xA;&#xA;type Readings {&#xA;    items: [Reading]&#xA;}&#xA;&#xA;type UserCowReadings {&#xA;    devices: [Device]&#xA;    readings: [Reading]&#xA;}&#xA;&#xA;type cow {&#xA;    id: Int&#xA;    device: String&#xA;    nait: String&#xA;}  &#xA;&#xA;schema {&#xA;    query: Query&#xA;    mutation: Mutation&#xA;}&#xA;</code></pre>&#xA;",3241785,,3241785,2018-08-29 23:03:56,2018-08-30 01:32:42,AWS appsync query resolver,<amazon-web-services><graphql><aws-appsync><resolver>,1,3,0,2018-08-29 22:21:08
52087663,2,,52086862,3,,"<p>Yes you can do this but you will need to tweak your schema a bit. In that lambda you are essentially saying ""for each device do a DynamoDB query to get the most recent readings for that device"". Conceptually I would say that <em>devices</em> have many <em>readings</em>. With this in mind, lets make a schema:</p>&#xA;&#xA;<pre><code>type Device {&#xA;  id: ID!&#xA;  name: String&#xA;  # Get the most recent readings for this device.&#xA;  # Do a Query where ""device = $ctx.source.id""&#xA;  readings(limit: Int, nextToken: String): ReadingConnection &#xA;}&#xA;&#xA;type Reading {&#xA;  # Use the source's device id in the table to fetch the real device&#xA;  # GetItem where device = $ctx.source.device (and any sort key condition)&#xA;  device: Device &#xA;  time: Int&#xA;  cow: Int&#xA;  battery: String&#xA;}&#xA;&#xA;type ReadingConnection {&#xA;  items: [Reading]&#xA;  nextToken: String&#xA;}&#xA;&#xA;type DeviceConnection {&#xA;  items: [Device]&#xA;  nextToken: String&#xA;}&#xA;&#xA;type Query {&#xA;  getAllDevices(limit: Int, nextToken: String): DeviceConnection&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You may then paginate through your devices and paginate through each devices readings separately:</p>&#xA;&#xA;<pre><code>query GetAllDevicesAndReadings {&#xA;  getAllDevices(first: 10) {&#xA;    items {&#xA;      id&#xA;      name&#xA;      readings(limit: 10) {&#xA;        time&#xA;        cow&#xA;        battery&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I recommend using the drop down in the AppSync console's resolver page to get more ideas for what you can do with the resolver VTL to implement these GetItems and Queries. This is a good starting point. Let me know if you have trouble implementing the VTL.</p>&#xA;",2088684,,2088684,2018-08-30 01:32:42,2018-08-30 01:32:42,"",,0,2,0,2018-08-30 00:19:26
52119885,2,,52119486,0,,"<p>A single http data source can be used my many resolvers and hit different paths relative to that same root. For this reason when you setup your HTTP data source set the endpoint to <strong><a href=""https://api.logz.io"" rel=""nofollow noreferrer"">https://api.logz.io</a></strong> and then use this for your request mapping template:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2018-05-29"",&#xA;    ""method"": ""POST"",&#xA;    ## E.G. if full path is https://api.xxxxxxxxx.com/posts then resourcePath would be /posts **&#xA;    ""resourcePath"": ""/v1/search"",&#xA;    ""params"":{&#xA;        ""body"":{&#xA;          ""query"": {&#xA;            ""term"": {&#xA;              ""_id"": {&#xA;                ""value"": ""$context.arguments.id""&#xA;              }&#xA;            }&#xA;          }&#xA;        },&#xA;        ""headers"":{&#xA;            ""Content-Type"": ""application/json"",&#xA;            ""X-API-TOKEN"":""API-TOKEN-GENERATED""&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",2088684,,,,2018-08-31 17:00:18,"",,0,1,0,2018-08-31 17:00:18
52133847,1,52159490,,0,169,"<p>Say I have a GraphQL schema similar to:</p>&#xA;&#xA;<pre><code>type Posts &#xA;  @model &#xA;  @auth(rules: [&#xA;      {allow: groups, groups: [""Employees""], mutations: [create, update, delete, get, list]}&#xA;    ])&#xA;{&#xA;  id: ID!&#xA;  name: String&#xA;  groups: [String]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And I want to allow only users who are listed in the Post's <code>groups</code> attribute to have those properties. I'd like to do something like:</p>&#xA;&#xA;<pre><code> @auth(rules: [&#xA;          {allow: groups, groups: [Device.groups], mutations: [create, update, delete, get, list]}&#xA; ]&#xA;</code></pre>&#xA;&#xA;<p>Any ideas where to start? I'm relatively new to GraphQL and it's entirely possible that I'm headed completely in the wrong direction. Please help.</p>&#xA;&#xA;<p><strong>EDIT</strong></p>&#xA;&#xA;<p>I managed to achieve a similar result by modifying the resolver. In the case of <code>list</code>, it looks something like this:</p>&#xA;&#xA;<pre><code>    other code...&#xA;    #foreach( $postGroup in $item.groups )&#xA;        #foreach( $userGroup in $userGroups )&#xA;            #if( $postGroup == $userGroup )&#xA;                $util.qr($items.add($item))&#xA;            #end&#xA;        #end&#xA;    #end&#xA;    ...other code&#xA;</code></pre>&#xA;&#xA;<p>This is of course a very inefficient way to do it (i.e. nested foreach loops), but this stems from my lack of knowledge of Apache VLT and will be resolved at some point.</p>&#xA;&#xA;<p><strong>I do still wonder, however, is it possible to do this directly in the GraphQL schema?</strong></p>&#xA;",2763058,,2763058,2018-09-02 08:36:44,2018-09-04 05:44:58,GraphQL: Access type properties within @auth header,<graphql><aws-appsync><aws-amplify>,1,0,0,2018-09-02 03:56:41
52141588,1,52141738,,3,2442,<p>Is it possible to have business logic on my AppSync's mutation when the datasource is dynamoDB? </p>&#xA;&#xA;<p>I'm fairly new to GraphQL and Appsync. My understanding is when you're using plain GraphQL you can have business logic inside your resolver to validate before updating. How would you achieve the same thing with AWS AppSync when you pass it the GraphQL schema with DynamoDB as the datasource? </p>&#xA;,260574,,,,2018-09-03 14:29:08,AWS Appsync + DynamoDB with business logic,<amazon-web-services><graphql><aws-appsync>,2,0,0,2018-09-02 23:02:27
52141738,2,,52141588,8,,"<p>In AWS AppSync, you would attach a resolver to the field that is mapped to the DynamoDB DataSource. You can then use the Velocity template to have your custom business logic inside the resolver for any validations.</p>&#xA;&#xA;<p>Please refer to the <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-programming-guide.html"" rel=""noreferrer"">following documentation</a> on the Resolver Mapping Template programming guide from AWS.</p>&#xA;&#xA;<p><a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-dynamodb.html"" rel=""noreferrer"">Here is the mapping template reference</a> for DynamoDB resolvers.</p>&#xA;",640607,,,,2018-09-02 23:35:41,"",,0,2,0,2018-09-02 23:35:41
52141743,2,,52141588,2,,"<p>According to <a href=""https://aws.amazon.com/appsync/"" rel=""nofollow noreferrer"">AWS AppSync's Website</a>: <strong>With AppSync, your app can access data in Amazon DynamoDB, trigger AWS Lambda functions, or run Amazon Elasticsearch queries</strong>.</p>&#xA;&#xA;<p>You can think of it as a gateway for clients to access different backends (data sources), defined by mapping templates attached to GraphQL fields (resolvers). </p>&#xA;&#xA;<p>AppSync supports DynamoDB and ElasitcSearch queries natively, but if you want to perform business logic you will have to add a AWS Lambda data source and then use AWS SDKs to R/W DynamoDB or anything else such as another API or maybe even an excel file!</p>&#xA;&#xA;<p>Additionally, you can use <a href=""http://velocity.apache.org/engine/1.7/user-guide.html"" rel=""nofollow noreferrer"">Apache VTL</a> along with AppSync's available helpers such as $context to help you perform authorization or field data access based on permissions. Keep in mind that your DynamoDB or ES resolver can only perform 1 operation at the end, Apache VTL only helps you build the resolver that will be run by AppSync.</p>&#xA;&#xA;<p>Here are two diagrams that compare a traditional approach vs appsync</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/OM9cY.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/OM9cY.jpg"" alt=""Traditional approach""></a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/ApYMu.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ApYMu.jpg"" alt=""Appsync""></a></p>&#xA;",1550485,,1550485,2018-09-03 14:29:08,2018-09-03 14:29:08,"",,0,0,0,2018-09-02 23:36:47
52151022,1,52161475,,1,1009,"<p>Hi i am new in aws AppSync and GraphQl. I have a problem with subscription. I want to get notifiend in real time when new post is posted </p>&#xA;&#xA;<p>Here is my graphql schema ``</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;    addPost(&#xA;        id: ID!,&#xA;        author: String!,&#xA;        title: String,&#xA;        contennt: String,&#xA;        url: String&#xA;    ): Post!&#xA;    updatePost(&#xA;        id: ID!,&#xA;        author: String!,&#xA;        title: String,&#xA;        content: String,&#xA;        ups: Int!&#xA;    ): Post!&#xA;    deletePost(id: ID): Post!&#xA;}&#xA;&#xA;type Post {&#xA;    id: ID!&#xA;    author: String!&#xA;    title: String!&#xA;    url: String&#xA;    content: String&#xA;    ups: Int!&#xA;}&#xA;&#xA;type Query {&#xA;    allPost: [Post]&#xA;    getPost(id: ID!): Post&#xA;}&#xA;&#xA;type Subscription {&#xA;    newPost: Post&#xA;        @aws_subscribe(mutations: [""addPost""])&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;    mutation: Mutation&#xA;    subscription: Subscription&#xA;}&#xA;``&#xA;</code></pre>&#xA;&#xA;<p>Here is my Query for subs:</p>&#xA;&#xA;<pre><code>subscription NewPostSub{&#xA;  newPost{&#xA;    __typename&#xA;    title&#xA;    content&#xA;    author&#xA;    url&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Im getting error that provided key element doesnt match a schema, in dynamodb table pk is id and i generated mapping template.&#xA;Thank you</p>&#xA;",10249507,,,,2018-09-04 07:57:14,AppSync subscription authorization problem,<graphql><aws-appsync><graphql-subscriptions>,1,2,0,2018-09-03 13:44:44
52161475,2,,52151022,2,,"<p>Thanks for the info.</p>&#xA;&#xA;<p>First, you do not need a resolver on your subscription field at all. The only reason you need to add a resolver to a subscription field is to do authorization checks based on the calling identity at connect time. You do not need to add a resolver to make subscriptions work. To fix it, remove the resolver off the subscription (<code>Subscription.newPost</code>) field. </p>&#xA;&#xA;<p>To solve your use case and make it so you only subscribe to posts with a certain id, change your <code>newPost</code> subscription field to <code>newPost(id: ID!)</code>. When you make the subscription query, provide an <code>id</code> and that subscription will only get pushed posts returned by the subscribed to mutation with that id. This is a feature baked into AppSync and the argument equality check happens automatically when you add the arguments to the subscription field.</p>&#xA;&#xA;<p>Secondly as you pasted it in the comment, you currently have this request mapping template for <code>Mutation.addPost</code>:</p>&#xA;&#xA;<pre><code>{ &#xA;  ""version"" : ""2017-02-28"", &#xA;  ""operation"" : ""PutItem"", &#xA;  ""key"" : { &#xA;    $util.dynamodb.toDynamoDBJson($ctx.args.id) &#xA;    ""id"": $util.dynamodb.toDynamoDBJson($util.autoId()), &#xA;  }, &#xA;  ""attributeValues"" : $util.dynamodb.toMapValuesJson($ctx.args) &#xA;} &#xA;</code></pre>&#xA;&#xA;<p>There is a typo and it should be this:</p>&#xA;&#xA;<pre><code>{ &#xA;  ""version"" : ""2017-02-28"", &#xA;  ""operation"" : ""PutItem"", &#xA;  ""key"" : { &#xA;    ""id"": $util.dynamodb.toDynamoDBJson($util.autoId()), &#xA;  }, &#xA;  ""attributeValues"" : $util.dynamodb.toMapValuesJson($ctx.args) &#xA;} &#xA;</code></pre>&#xA;",2088684,,,,2018-09-04 07:57:14,"",,0,1,0,2018-09-04 07:57:14
52178900,1,52194316,,0,182,"<p>I have an AppSync API, and there's a requirement to return the data in a randomised order.</p>&#xA;&#xA;<p>This is what I have currently, I have no idea where to start and can't find any docs on this. </p>&#xA;&#xA;<pre><code>{&#xA;    ""items"": $util.toJson($ctx.result.items)&#xA;}&#xA;</code></pre>&#xA;",1541609,,,,2018-09-05 22:47:51,Is it possible to use VTL to randomise a DynamoDB query result?,<graphql><aws-appsync><vtl>,1,0,0,2018-09-05 06:55:57
52188629,1,52192812,,0,764,"<p>I am using the following Graphql schema:</p>&#xA;&#xA;<pre><code>Connection {&#xA;  items: [String]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>connected to the DynamoDB response resolver:</p>&#xA;&#xA;<pre><code>{&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>which is obviously empty, but still, the GraphiQL console of AWS returns an <strong>array with one null element</strong>:</p>&#xA;&#xA;<pre><code>{&#xA;  data: {&#xA;    items: [null]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is this an intended behavior? I would expect the returned result to be</p>&#xA;&#xA;<pre><code>{&#xA;  data: {&#xA;    items: null&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>(without the array, just null). How do I get <strong>Appsync to only return null?</strong></p>&#xA;",3360590,,,,2018-09-05 20:15:34,"AppSync Resolver does not return null for null-able array field, but [null]",<amazon-web-services><graphql><aws-appsync>,1,1,0,2018-09-05 15:19:50
52192812,2,,52188629,0,,"<p>This setup returns null for items.</p>&#xA;&#xA;<p>Schema:</p>&#xA;&#xA;<pre><code>type Connection {&#xA;  items: [String]&#xA;}&#xA;&#xA;query {&#xA;  listNull: Connection&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Request template:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Scan"",&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Response Template:</p>&#xA;&#xA;<pre><code>{&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Query:</p>&#xA;&#xA;<pre><code>query ListNull {&#xA;  listNull {&#xA;    items&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Result: </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""listNull"": {&#xA;      ""items"": null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",5683782,,,,2018-09-05 20:15:34,"",,0,0,0,2018-09-05 20:15:34
52228189,2,,52208988,1,,"<p>If you go to the AppSync console and click ""Attach"" on a field to add a resolver, there is a drop down in the top right of each resolver template code editor that has a number of commented examples of how to craft resolver templates for DynamoDB. This is a good place to start and has multiple examples of filters and more. You can read more about the full DynamoDB filter syntax here: <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Query.html#Query.FilterExpression"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Query.html#Query.FilterExpression</a>.</p>&#xA;",2088684,,,,2018-09-07 18:52:24,"",,0,0,0,2018-09-07 18:52:24
52259104,2,,52256987,3,,"<p>Subscriptions are not triggered from your dynamo db, but from your mutations (defined in your graphql schema). Try to add records via the mutation your subscription listens on. You can run a mutation from the app sync console under ""queries"". </p>&#xA;&#xA;<p>If your client is set up correctly, it should update accordingly.</p>&#xA;&#xA;<p>Hope this helps :)</p>&#xA;",6940286,,,,2018-09-10 13:40:28,"",,0,0,0,2018-09-10 13:40:28
52278480,1,52281770,,0,3417,"<p>In AppSync i want to update item with array or stringset like this:</p>&#xA;&#xA;<pre><code>mutation addmeta{&#xA;  addMetaDataOnPhoto(id:""xyz"", metadata:[""word1"", ""word2"",...]){&#xA;    metadata&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>this is how my mutation type looks:</p>&#xA;&#xA;<pre><code>type Mutatation{&#xA;    addMetaDataOnPhoto(id: String!, metadata: [String]!): Photo&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My question is how should look resolver for this mutation.&#xA;Thanks! :)</p>&#xA;",10249507,,,,2018-09-11 18:04:50,Update-ing dynamodb item using Appsync,<amazon-web-services><graphql><aws-appsync>,1,0,0,2018-09-11 14:40:01
52281770,2,,52278480,3,,"<p>In order to update an attribute without replacing the entire item, you should use the <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html"" rel=""nofollow noreferrer""><code>UpdateItem</code> DynamoDB operation</a>.</p>&#xA;&#xA;<p>In your example, if you want to replace the <code>metadata</code> array, your request mapping template shoud look like below:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""UpdateItem"",&#xA;    ""key"" : {&#xA;        ""id"" : { ""S"" : ""${context.arguments.id}"" }&#xA;    },&#xA;    ""update"" : {&#xA;        ""expression"" : ""SET metadata = :vals"",&#xA;        ""expressionValues"": {&#xA;            "":vals"" : $util.dynamodb.toDynamoDBJson($ctx.args.metadata)      &#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><em>Note:</em> <code>$util.dynamodb.toDynamoDBJson</code> will convert your array into a DynamoDB typedValue. For more information and utilities see the <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-util-reference.html#dynamodb-helpers-in-util-dynamodb"" rel=""nofollow noreferrer"">AWS AppSync util reference</a>. </p>&#xA;",1060799,,,,2018-09-11 18:04:50,"",,0,3,0,2018-09-11 18:04:50
52286896,1,52294435,,0,1230,"<p>AWS AppSync mutation is throwing error when trying to perform update operation. I have correctly created the table and my </p>&#xA;&#xA;<p>Bellow is the GraphQL Schema</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;  updateStateMutation(input: UpdateData!): ReturnValue&#xA;}&#xA;&#xA;input UpdateData {&#xA;  ID: String&#xA;  OPP: Int&#xA;  loc: [Float]&#xA;  CDC: String&#xA;  MND: String&#xA;  CSP: Int&#xA;}&#xA;&#xA;type ReturnValue {&#xA;  ID: String&#xA;  CDC: String&#xA;  MND: String&#xA;  loc: [Float]&#xA;  CSP: Int&#xA;  OPP: Int&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Bellow is the resolver for the mutation</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""PutItem"",&#xA;    ""key"" : {&#xA;        ""ID"":  $util.dynamodb.toDynamoDBJson($ctx.args.ID),&#xA;    },&#xA;    ""attributeValues"" : $util.dynamodb.toMapValuesJson($ctx.args)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Bellow is the execution part that I perform on the GraphQL</p>&#xA;&#xA;<pre><code>mutation UpdateStateData {&#xA;  updateStateMutation(input: { &#xA;    ID: ""100000000-ofo""&#xA;    CDC: ""3E5E65117E877076L""&#xA;    MND: ""6EA8F0DAE8C3D09F""&#xA;    CSP: 2&#xA;  }){&#xA;    ID&#xA;    CDC&#xA;    MND&#xA;    CSP&#xA;    loc&#xA;    OPP&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When executed I am getting the error shown below.</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""updateStateMutation"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ………&#xA;      ""message"": ""One or more parameter values were invalid: Type mismatch for key ID expected: S actual: NULL (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException; Request ID: MRMBUAFKERB48R7JTH5TUV8I8NVV4KQNSO5AEMVJF66Q9ASUAAJG)""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What is wrong with the above coding. I have correctly given the input but still I am facing the error. &#xA;The Key name in DynamoDB is ID but, it is still throwing the error. </p>&#xA;",559227,,,,2018-09-12 12:22:43,Why does AppSync throwing error on Update?,<graphql><aws-appsync>,1,4,0,2018-09-12 03:03:15
52318955,1,,,0,437,"<p>I am trying to deploy a GraphQL server on node.js platform using Azure functions. I have been able to deploy a basic <code>hello world</code> app.<br>&#xA;However, I need to get data from a backend API in the resolver. I am not able to get either <code>fetch</code> or <code>request</code> package to work in Azure functions.<br>&#xA;Below is my code: </p>&#xA;&#xA;<pre><code>var { graphql, buildSchema } = require('graphql');  &#xA;var fetch = require('node-fetch');&#xA;var request = require('request');&#xA;&#xA;var schema = buildSchema(`&#xA;  type Query {&#xA;    myObject: MyObject&#xA;  }&#xA;&#xA;  type MyObject { &#xA;   someId (data: String) : String&#xA;  }&#xA;`);&#xA;&#xA;var root = { &#xA;  myObject: () =&gt; {&#xA;     return { &#xA;        someId: (args) =&gt; {&#xA;            // Code enters till this point. &#xA;            // I can see context.info messages from here. &#xA;            // return ""hello"";  &lt;--- This works perfectly fine. &#xA;            return request('http://example.com', function (error, response, body) {&#xA;                    // -----&gt; Code never enters here.&#xA;                    return body;&#xA;                });                   &#xA;          }&#xA;       }   &#xA;   }&#xA;};&#xA;&#xA;module.exports = function (context, req) {&#xA;     context.log('JavaScript HTTP trigger function processed a request.');&#xA;     graphql(schema, req.body, root)&#xA;        .then(response =&gt; {&#xA;           context.res = {&#xA;               body: JSON.strigify(response)&#xA;          };&#xA;&#xA;    context.done();&#xA; });&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>I have tried using <code>fetch</code> and <code>request</code> modules. But with both of them, I see the same behavior - the response never returns. The request eventually times out after 5 minutes. If instead of <code>fetch</code> or <code>request</code>, I choose to return some dummy value, I see the response getting returned correctly to the query. With <code>fetch</code>, I don't see the <code>then</code> block or the <code>catch</code> block ever executing. </p>&#xA;&#xA;<p>Note: I have tried both <code>http</code> and <code>https</code> URLs in the request URIs but none of them seem to return any data. </p>&#xA;&#xA;<p>Is it an issue with the way I have implemented the <code>fetch</code>/<code>request</code> or is it an issue with Azure functions in general? </p>&#xA;",1534386,,,,2018-09-15 12:48:50,Getting data from API inside a graphQL resolver deployed on Azure node.js function,<azure><graphql><azure-functions><graphql-js>,1,2,0,2018-09-13 17:33:34
52327021,1,,,0,794,"<p>I have a graphql query response of the shape</p>&#xA;&#xA;<pre><code>{&#xA;  table {&#xA;    id&#xA;    legs {&#xA;      id&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>This normalizes to <code>table</code> and <code>leg</code> entries in my <code>InMemoryCache</code>.</p>&#xA;&#xA;<p>But then if my application retrieves a <code>leg</code> from cache and needs to know the corresponding <code>table</code>, how would I find this?</p>&#xA;&#xA;<p>The two ideas I had are</p>&#xA;&#xA;<ul>&#xA;<li>adding a <code>table</code> prop to each <code>leg</code> when the query response comes in - not sure if/how that would work (I have multiple queries and mutations containing the graphql fragment with above shape)</li>&#xA;<li>having a suitable <code>cache redirect</code>, but I don't know how to do this without searching all <code>tables</code> for the <code>leg</code>.</li>&#xA;</ul>&#xA;&#xA;<p>Does apollo provide any features suitable to achieve this inverse lookup?</p>&#xA;&#xA;<p><em>Update</em>: to clarify, the <code>leg</code> has a <code>table</code> prop, but I since I already have the info in the client before resolving that prop, I'd like to resolve that prop client-side instead of server-side.</p>&#xA;",1827442,,1827442,2018-09-15 20:51:22,2018-09-22 21:21:29,apollo-client: How to get inverse relation from cache?,<graphql><apollo><apollo-client><apollostack>,1,0,0,2018-09-14 07:32:04
52341200,1,,,2,1181,"<p>I'm fairly new to GraphQL and AWS AppSync, and I'm running into an issue downloading files (PDFs and PNGs) from a public S3 bucket via AWS AppSync. I've looked at dozens of tutorials and dug through a mountain of documentation, and I'm just not certain what's going on at this point. This may be nothing more than a misunderstanding about the nature of GraphQL or AppSync functionality, but I'm completely stumped.</p>&#xA;&#xA;<p>For reference, I've heavily sourced from other posts like <a href=""https://stackoverflow.com/questions/48495338/how-to-upload-file-to-aws-s3-using-aws-appsync"">How to upload file to AWS S3 using AWS AppSync</a> (specifically, from the suggestions by the accepted answer author), but none of the solutions (or the variations I've attempted) are working.</p>&#xA;&#xA;<p><strong>The Facts</strong></p>&#xA;&#xA;<ul>&#xA;<li>S3 bucket is publicly accessible &ndash; i.e., included folders and files are not tied to individual users with Cognito credentials</li>&#xA;<li>Files are uploaded to S3 outside of AppSync (so there's no GraphQL mutation); it's a manual file upload</li>&#xA;<li>Schema works for all other queries and mutations</li>&#xA;<li>We are using AWS Cognito to authenticate users and queries</li>&#xA;</ul>&#xA;&#xA;<p><strong>Abridged Schema and DynamoDB Items</strong></p>&#xA;&#xA;<p>Here's an abridged version of the relevant GraphQL schema types:</p>&#xA;&#xA;<pre><code>type MetroCard implements TripCard {&#xA;    id: ID!&#xA;    cardType: String!&#xA;    resIds: String!&#xA;    data: MetroData!&#xA;    file: S3Object&#xA;}&#xA;&#xA;type MetroData implements DataType {&#xA;    sourceURL: String!&#xA;    sourceFileURL: String&#xA;    metroName: String!&#xA;}&#xA;&#xA;type S3Object {&#xA;    bucket: String!&#xA;    region: String!&#xA;    key: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Metadata about the files is stored in DynamoDB and looks something like this:</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;        ""metroName"": ""São Paulo Metro"",&#xA;        ""sourceFileURL"": ""http://www.metro.sp.gov.br/pdf/mapa-da-rede-metro.pdf"",&#xA;        ""sourceURL"": ""http://www.metro.sp.gov.br/en/your-trip/index.aspx""&#xA;    },&#xA;    ""file"": {&#xA;        ""bucket"": ""test-images"",&#xA;        ""key"": ""some_folder/sub_folder/bra-sbgr-metro-map.pdf"",&#xA;        ""region"": ""us-east-1""&#xA;    },&#xA;    ""id"": ""info/en/bra/sbgr/metro""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>VTL Request/Response Resolvers</strong></p>&#xA;&#xA;<p>For our <code>getMetroCard(id: ID!): MetroCard</code> query, the mapping templates are pretty vanilla. The request template is a standard query on a DynamoDB table. The response template is a basic <code>$util.toJson($ctx.result)</code>.</p>&#xA;&#xA;<p>For the field-level resolver on <code>MetroCard.file</code>, we've attached a local data source with an empty <code>{}</code> payload for the request and the following for the response (see referenced link for reasoning):</p>&#xA;&#xA;<pre><code>$util.toJson($util.dynamodb.fromS3ObjectJson($context.source.file)) // we've played with this bit in a couple of ways, including simply returning $context.result but no change&#xA;</code></pre>&#xA;&#xA;<p><strong>Results</strong></p>&#xA;&#xA;<p>All of the query fields resolve appropriately; however, the <code>file</code> field inevitably always returns <code>null</code> no matter what the field-level resolver is mapped to. Interestingly, I've noticed in the CloudWatch logs the value of <code>context.result</code> does change from <code>null</code> to <code>{}</code> with the above mapping template.</p>&#xA;&#xA;<p><strong>Questions</strong></p>&#xA;&#xA;<p>Given the above, I have several questions:</p>&#xA;&#xA;<ol>&#xA;<li>Does AppSync file download require files to be uploaded to S3 with user credentials through a mutation with a complex object handler in order to make them retrievable?</li>&#xA;<li>What should a successful response look like in the AppSync console return &ndash; i.e., I have no client implementation (like a React Native app) to test successful file downloads? More directly, is it actually retrieving the files, and I just don't know it? (Note: I actually have tested it briefly with a React Native client, but nothing rendered so I've just been using the AppSync console returns as direction ever since.)</li>&#xA;<li>Does it make more sense to remove the file download process entirely from our schema? (I'm assuming the answers I need reveal that AppSync just wasn't built for file transfer like this, and so we'll need to rethink our approach.)</li>&#xA;</ol>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>Update</strong></p>&#xA;&#xA;<p>I've started playing around with the data source for <code>MetroCard.file</code> per the suggestion of this recent post <a href=""https://stackoverflow.com/a/52142178/5989171"">https://stackoverflow.com/a/52142178/5989171</a>. If I make the data source the same as the database storing the file metadata, I now get the error mentioned in the ref but his solution doesn't seem to be working for me. Specifically, I now get the following:</p>&#xA;&#xA;<pre><code>""message"": ""Value for field '$[operation]' not found.""&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>Our Solution</strong></p>&#xA;&#xA;<p>For our use case, we've decided to go ahead and use the AWS Amplify Storage module as suggested here: <a href=""https://twitter.com/presbaw/status/1040800650790002689"" rel=""nofollow noreferrer"">https://twitter.com/presbaw/status/1040800650790002689</a>. Despite that, I'm keeping this question open and unanswered, because I'm just genuinely curious about what I'm not understanding here, and I have a feeling I'm not the only one!</p>&#xA;",5989171,,5989171,2018-09-15 04:59:25,2018-12-26 10:12:51,How to download publicly available pdf and png files from S3 with AppSync,<amazon-web-services><amazon-s3><graphql><aws-appsync>,1,0,0,2018-09-15 02:54:28
52347310,1,52347997,,15,28915,"<p>I'm a newbie in GraphQL and I was wondering if there is a easy way to query with ""dynamic conditions"".</p>&#xA;&#xA;<p>For exemple, on GraphiQL I can query for :</p>&#xA;&#xA;<pre><code>query {&#xA;  users{&#xA;    name&#xA;    age&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And It will bring me a list of all users</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""users"": [&#xA;      {&#xA;        ""name"": ""Luis Coimbra"",&#xA;        ""age"": 15&#xA;      },&#xA;      {&#xA;        ""name"": ""Sebastião Campagnucci"",&#xA;        ""age"": 50&#xA;      },&#xA;      {&#xA;        ""name"": ""Giovana Ribeiro"",&#xA;        ""age"": 30&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But is there an easy way for me to bring only, for example, users who are above 18 or any other age ?</p>&#xA;&#xA;<p>An expected solution would be:</p>&#xA;&#xA;<pre><code>query {&#xA;      users{&#xA;        name&#xA;        age &gt; 18&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Haven't found anything like that on documentation...</p>&#xA;",8964303,,,,2019-08-19 10:54:04,GraphQL Conditional Queries,<node.js><express><graphql><graphiql>,2,2,0,2018-09-15 17:45:23
52353052,1,,,0,401,"<p>Need help in Graphql Appsync</p>&#xA;&#xA;<p>Appsync Custom Type :</p>&#xA;&#xA;<pre><code>type Employee {&#xA;        id: ID!&#xA;        name: String&#xA;        experiences: [Experiences]&#xA;        projects: [Projects]&#xA;}&#xA;&#xA;Dynamo DB table Employee&#xA;&#xA;Table: Employee&#xA;{&#xA;    id:’’,&#xA;    name:’’,&#xA;    experience:[&#xA;        {&#xA;            company:’’,&#xA;            from:’’,&#xA;            till:’’&#xA;        },&#xA;        {&#xA;            company:’’,&#xA;            from:’’,&#xA;            till:’’&#xA;        }&#xA;    ],&#xA;    projects:[&#xA;&#xA;        {&#xA;            title:’’,&#xA;            date:’’&#xA;&#xA;        },&#xA;        {&#xA;            title:’’,&#xA;            date:’’&#xA;&#xA;         },&#xA;    ]&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>We need to update experience &amp; Projects in 2 different mutation queries but update should be done in same dynamodb table.&#xA;Here are my doubts:</p>&#xA;&#xA;<ul>&#xA;<li>Do need to create separate dynamodb table for Projects &amp; Experience.&#xA;How to write mutation queries for  this  table updating Projects &amp;&#xA;experience in diff mutation ?</li>&#xA;</ul>&#xA;",2576763,,,,2018-09-17 02:25:06,Graphql Mutation query for DynamoDB table having Custom Type attribute,<graphql><aws-appsync>,1,0,0,2018-09-16 10:12:06
52360059,2,,52353052,1,,"<p>let me try and answer your questions:</p>&#xA;&#xA;<blockquote>&#xA;  <p>We need to update experience &amp; Projects in 2 different mutation queries but update should be done in same dynamodb table.</p>&#xA;</blockquote>&#xA;&#xA;<p>You can create a single DataSource in AppSync, and have 2 mutations that resolve against this DataSource. This way, your mutations accept an array of Experience or Project types, and your resolver takes care of writing into this DynamoDB DataSource.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Do need to create separate dynamodb table for Projects &amp; Experience.</p>&#xA;</blockquote>&#xA;&#xA;<p>This really depends on your usecase. Having separate DynamoDB tables helps you fetch the [1:N] related types using secondary indexes. Separate tables also help you paginate the related types instead of fetching all dependencies in a single call. If you end up using a single table to store Employee/Projects/Experience, refer to the <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html#using-lists-and-maps"" rel=""nofollow noreferrer"">Lists and Maps types</a> section in the DynamoDB resolver.</p>&#xA;&#xA;<blockquote>&#xA;  <p>How to write mutation queries for this table updating Projects &amp; experience in diff mutation?</p>&#xA;</blockquote>&#xA;&#xA;<p>Like I mentioned, you would just define 2 mutations in your Schema that accept a list of types. In the resolver, you would write to appropriate tables. Please refer to the <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html#modifying-the-updatepost-resolver-dynamodb-updateitem"" rel=""nofollow noreferrer"">following documentation on DynamoDB Resolvers</a> in AppSync.</p>&#xA;&#xA;<p>Alternatively, you can also make use of <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html#multi-table-batch"" rel=""nofollow noreferrer"">DynamoDB Batch Resolver</a> to write data into multiple tables.</p>&#xA;",640607,,,,2018-09-17 02:25:06,"",,0,0,0,2018-09-17 02:25:06
52379110,2,,52376123,0,,"<p>Maybe this is what you are looking for <a href=""https://github.com/prisma/graphql-middleware"" rel=""nofollow noreferrer"">prisma/graphql-middleware</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>Allows complete control over your resolvers (Before, After).</p>&#xA;</blockquote>&#xA;",5003695,,,,2018-09-18 04:47:49,"",,0,0,0,2018-09-18 04:47:49
52399001,1,,,2,812,"<p>What is a common pattern to have AWS AppSync resolvers cache their output?</p>&#xA;&#xA;<p>I'm writing an API that fronts data that will not change at all over time. The API returns the contents of books (title, author, chapters, etc.).</p>&#xA;&#xA;<p>My initial idea was to have the resolver request some JSON payload from CloudFront. If the requested document is not in CloudFront, CloudFront would trigger a Lambda function, which would know how to fetch the JSON document (from a database), then put the payload in CloudFront. This seems weird conceptually, but it would solve the caching problem.</p>&#xA;&#xA;<h1>Example</h1>&#xA;&#xA;<pre><code>const query = `{&#xA;   bookById(bookID: ""468c95"") {&#xA;      bookID&#xA;      title&#xA;      author&#xA;      chapters {&#xA;         title&#xA;         text&#xA;      }&#xA;   }&#xA;}`;&#xA;&#xA;const book = query(query);&#xA;// book =&gt; {&#xA;//   bookId: ""468c95"",&#xA;//   title: ""AppSync for Normal People"",&#xA;//   author: null,&#xA;//   chapters: [&#xA;//      {&#xA;//         title: ""Chapter 1: Dawn of Men"",&#xA;//         text: [&#xA;//            ""It was the best of times, it was the worst of times."",&#xA;//            ""...""&#xA;//         ]&#xA;//      },&#xA;//      { ... }&#xA;//   ]&#xA;// }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In other words, calling the fictitious <code>query</code> method will trigger some resolver in AppSync. That resolver will absolutely always return the same data. Thus, why not have the data that the resolver works with (I guess you can view that as the <em>input</em> to the resolver) be cached in CloudFront so it can be served from memory instead of having to hit some backend storage (like a database) or trigger a Lambda?!</p>&#xA;",774907,,774907,2018-09-20 06:41:24,2018-09-20 06:41:24,AWS AppSync resolver cache layer?,<caching><aws-lambda><graphql><aws-appsync>,0,4,0,2018-09-19 05:52:54
52400819,2,,52347310,3,,"<p>You should send your age filter as a parameter.You might try the following one:</p>&#xA;&#xA;<p>In your graphql file</p>&#xA;&#xA;<pre><code>type users {&#xA; name: String,&#xA; age: Int,&#xA; ...&#xA;}&#xA;&#xA;usersQuery(ageLimit: Int): [users]&#xA;</code></pre>&#xA;&#xA;<p>also you can send '>' , '&lt;' , '=' as a parameter. Also it seems like that</p>&#xA;&#xA;<pre><code>usersQuery(ageLimit: Int, ageOperator: String): [users]&#xA;</code></pre>&#xA;&#xA;<p>and you should configure your resolver where statement with these operators. hope it helps you.</p>&#xA;",9526649,,,,2018-09-19 07:52:00,"",,0,0,0,2018-09-19 07:52:00
52433928,1,52434120,,1,3883,<p>Is there a way to implement GraphQL in flutter?&#xA;I was trying making the API call with the query and variables objects in a JSON object.</p>&#xA;&#xA;<p>type '_InternalLinkedHashMap' is not a subtype of type 'String' in type cast</p>&#xA;,9938255,,,,2019-07-01 15:22:19,Implement GraphQL & Flutter,<dart><flutter><graphql>,2,0,0,2018-09-20 22:01:13
52453455,1,52462265,,0,347,"<p>Maybe my terminology is not accurate. I'm using AWS AppSync. My schema:</p>&#xA;&#xA;<pre><code>type Book {&#xA;  title: String&#xA;  author: Author&#xA;}&#xA;&#xA;type Author {&#xA;  name: String&#xA;}&#xA;&#xA;type Query {&#xA;  getBook(title:String!): Book&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The resolver for <code>getBook</code> returns an object shaped as:</p>&#xA;&#xA;<pre><code>{&#xA;  title: &lt;string&gt;&#xA;  authorId: &lt;number&gt;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Where <code>authorId</code> is always returned.</p>&#xA;&#xA;<p>What I'd like to do is specify a resolver for the field <code>Book.author</code> that will receive <code>authorId</code> and fetch that object from its own data store. Is this possible?</p>&#xA;&#xA;<p>If what I'm trying to do is not possible, what is the proper way of doing this, where one data store is a table with two columns - <code>{ title, authorId }</code>, and a separate store has a table with a list of authors, where the primary key is a column <code>authorId</code>. Since these are two different services, I can't just <em>join</em> the two like a SQL query.</p>&#xA;",774907,,,,2018-09-23 01:41:41,GraphQL field resolver needs contextual information,<api><graphql><microservices><aws-appsync>,2,1,0,2018-09-22 04:21:25
52462265,2,,52453455,1,,"<p>As long as <code>authorId</code> is returned from the <code>getBook</code> resolver, it will be accessible via <code>$ctx.source.authorId</code> when resolving <code>Book.author</code>.</p>&#xA;&#xA;<p>I reproduced your API with local resolvers using your schema:</p>&#xA;&#xA;<p><code>Query.getBook</code> request mapping template:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2018-05-29"",&#xA;    ""payload"": {&#xA;        ""title"": ""$context.arguments.title"",&#xA;        ""authorId"": ""2"" ## returned in addition to other fields. It will be used by Book.author resolver.&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>Query.getBook</code> response mapping template:</p>&#xA;&#xA;<pre><code>$util.toJson($context.result)&#xA;</code></pre>&#xA;&#xA;<p><code>Book.author</code> request mapping template:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2018-05-29"",&#xA;    ""payload"": {&#xA;        ""name"": ""author name with authorId: $context.source.authorId""&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>Book.author</code> response mapping template:</p>&#xA;&#xA;<pre><code>$util.toJson($context.result)&#xA;</code></pre>&#xA;&#xA;<p>The following query:</p>&#xA;&#xA;<pre><code>query {&#xA;  getBook(title:""AWS AppSync"") {&#xA;    title &#xA;    author {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>will yield the results:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getBook"": {&#xA;      ""title"": ""AWS AppSync"",&#xA;      ""author"": {&#xA;        ""name"": ""author name with authorId: 2""&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1060799,,,,2018-09-23 01:41:41,"",,0,0,0,2018-09-23 01:41:41
52505789,1,52507507,,0,1501,"<p>Given the graphql union type</p>&#xA;&#xA;<pre><code>union SearchResult = Human | Droid | Starship&#xA;</code></pre>&#xA;&#xA;<p>and the following graphql query:</p>&#xA;&#xA;<pre><code>{&#xA;  search(text: ""an"") {&#xA;    ... on Human {&#xA;      ... on SearchResult {&#xA;        ... on Droid {&#xA;          appearsIn&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Why is it in graphql syntactically correct to go from a ""sub type"" inline fragment (<code>Human</code>) to a ""super type"" inline fragment (<code>SearchResult</code>) and back to another ""sub type"" inline fragment (<code>Droid</code>)? Are there any use cases for this?</p>&#xA;&#xA;<p>For me this really does not make sense and it should throw an error. It leads to dead query parts like the <code>Droid</code> inline fragment above that has no effect on the query result.</p>&#xA;",4217589,,,,2018-09-25 22:33:33,Nested inline fragments in graphql,<graphql><union-types>,1,0,0,2018-09-25 19:54:45
52506995,1,,,0,191,"<p>Im using AWS AppSync in my react native application. I followed many tutorials , this in particular : <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-reactnative.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-reactnative.html</a></p>&#xA;&#xA;<p>In this tutorial, provided by AWS, they use Apollo Graphql : « &#xA; AWS AppSync integrates with the Apollo GraphQL client for building client applications. AWS provides Apollo plugins for offline support, authorization, and subscription handshaking. You can use the Apollo client directly, or you can use it with some of the client helpers provided in the AWS AppSync SDK. » </p>&#xA;&#xA;<p>But, with the new release of the AWS AppSync documentation, we get another way to work. </p>&#xA;&#xA;<p>So my question is : What is the best way to use GraphQL with AWS AppSync? </p>&#xA;&#xA;<p>Why there is no information about Apollo GraphQL in the documentation while it uses in the tutorial?</p>&#xA;&#xA;<p>Thanks you in advance for your answers/advices.</p>&#xA;",6103744,,,,2018-09-25 21:33:56,What is the best way to use GraphQL with AWS AppSync?,<react-native><graphql><react-apollo><apollo-client><aws-appsync>,0,2,0,2018-09-25 21:33:56
52513100,2,,52507099,2,,"<p>The Users and Permissions section of the admin panel is based on the controllers' actions, not of routes. Because default GraphQL queries use these actions, you can use the Users &amp; Permissions section to manage GraphQL security rules.</p>&#xA;&#xA;<p>If you want to add more custom logic or secure your custom GraphQL resolvers, take a look a this section of the documentation: <a href=""https://strapi.io/documentation/guides/graphql.html#execute-a-policy-before-a-resolver"" rel=""nofollow noreferrer"">https://strapi.io/documentation/guides/graphql.html#execute-a-policy-before-a-resolver</a>.</p>&#xA;",3455009,,,,2018-09-26 08:18:59,"",,0,2,0,2018-09-26 08:18:59
52517717,2,,52512011,-3,,"<p>You don't need to pass arguments to sub-query. Base on your schema and use-case, I think you can adjust your schema like below to have a relationship between <code>Author</code> and <code>Book</code><br></p>&#xA;&#xA;<pre><code>type Author {&#xA;    # parent's id&#xA;    bookID: ID!&#xA;    # author id&#xA;    id: ID!&#xA;    name: String!&#xA;}&#xA;&#xA;type Book {&#xA;    id: ID!&#xA;    title: String!&#xA;    author: [Author]!&#xA;}&#xA;&#xA;type Mutation {&#xA;    insertAuthor(bookID: ID!, id: ID!, name: String!): Author&#xA;    insertBook(id: ID!, title: String!): Book&#xA;}&#xA;&#xA;type Query {&#xA;    getBook(id: ID!): Book&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>- Create table Author with <code>Author.bookID</code> as a primary key and <code>Author.id</code> as a sort key<br>&#xA; - Create table Book with <code>Book.id</code> as a primary key</p>&#xA;&#xA;<p>Then, you have to attach a resolver for <code>Book.author</code></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/k6Xia.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/k6Xia.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>And here is a resolver for <code>insertAuthor</code> mutation</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""PutItem"",&#xA;    ""key"" : {&#xA;        ""bookID"" : $util.dynamodb.toDynamoDBJson($ctx.args.bookID),&#xA;        ""id"" : $util.dynamodb.toDynamoDBJson($ctx.args.id)&#xA;    },&#xA;    ""attributeValues"" : {&#xA;        ""name"" : $util.dynamodb.toDynamoDBJson($ctx.args.name)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And when you do query <code>getBook</code> you will get a list of author that has the same book id as below</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/NocKP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NocKP.png"" alt=""enter image description here""></a></p>&#xA;",9270631,,9270631,2018-09-27 05:44:54,2018-09-27 05:44:54,"",,0,0,0,2018-09-26 12:24:58
52520702,1,,,0,979,"<p>I'm working on a project in which I have our models divided into two different databases, PostgreSQL and Elasticsearch.</p>&#xA;&#xA;<p>I'm trying to use GraphQL just for queries (I'm not planning on using mutations), and be able with the same endpoint to launch queries to PostgreSQL or Elasticsearch depending on where the model is stored.</p>&#xA;&#xA;<p>So, depending on the model:</p>&#xA;&#xA;<ol>&#xA;<li>If the model is in PostgreSQL, I can use the default behaviour of GraphQL, parsing and launching the query via ActiveRecord.</li>&#xA;<li>If the model is in Elasticsearch, I need to first transform the GraphQL query into an Elasticsearch query, run that query against Elasticsearch, and transform the result back to GraphQL output format.</li>&#xA;</ol>&#xA;&#xA;<p>So, first problem here is how do I transform queries from GraphQL format to Elasticsearch format. I've been looking over internet and just found <a href=""https://github.com/graphql-compose/graphql-compose-elasticsearch"" rel=""nofollow noreferrer"">this plugin</a> for js and <a href=""https://www.reddit.com/r/graphql/comments/5wbn6y/is_there_a_way_to_get_elasticsearch_working_with/"" rel=""nofollow noreferrer"">this response</a> without no so much information in reddit. </p>&#xA;&#xA;<p>Then, the second problem is how do I make that depending on the model, launch the query against PostgreSQL or Elasticsearch. For this I found nothing :(</p>&#xA;&#xA;<p>And the last problem is parse the response and transform in into the expected GraphQL output. Also found nothing here, but I need to resolve these two first points before starting with this one.</p>&#xA;&#xA;<p>I would like to know if someone has been working on this kind of structure and If he could point me to some guide or resource with which I could start working on my solution.</p>&#xA;",1806881,,,,2018-09-26 14:56:03,Is there a way to work with GraphQL and Elasticsearch in Rails app?,<ruby-on-rails><postgresql><elasticsearch><graphql>,0,2,0,2018-09-26 14:56:03
52549428,2,,52544685,2,,"<p>To search all users by the company, query on the organization. Currently, you are passing a key-value pair as a string to search for instead of value string. Try this query to get all list of employees who have set their company name <code>Github</code>.</p>&#xA;&#xA;<pre><code>{&#xA;  organization(login: ""github"") {&#xA;    email&#xA;    members(first: 100) {&#xA;      totalCount&#xA;      nodes {&#xA;        ... on User {&#xA;          company&#xA;          login&#xA;          name&#xA;          isEmployee&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>See the results in the attached image:&#xA;<a href=""https://i.stack.imgur.com/vFtma.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vFtma.png"" alt=""enter image description here""></a></p>&#xA;",6673165,,,,2018-09-28 06:17:29,"",,0,0,0,2018-09-28 06:17:29
52571220,1,,,1,2220,"<p>I've got a simple AppSync API that has a type for City and Venue, the example is to map small retail shops. I'm trying to create a new City via the ""Queries"" pane within AppSync, I'm also wanting to provide a shortened ID - as opposed to the long autoId so that I can run queries for the shortened ID and the frontend app can use it from the params in the URL.</p>&#xA;&#xA;<p>I'm trying to create a new item in DynamoDB with the following code:</p>&#xA;&#xA;<p>Schema</p>&#xA;&#xA;<pre><code>type City {&#xA;  id: String!&#xA;  name: String!&#xA;}&#xA;&#xA;type Mutation {&#xA;  ...&#xA;  createCity(input: CreateCityInput!): City&#xA;  ...&#xA;}&#xA;&#xA;input CreateCityInput {&#xA;  id: String!&#xA;  name: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Mutation.createCity</p>&#xA;&#xA;<pre><code>// Request mapping template&#xA;&#xA;{&#xA;  ""version"" : ""2017-02-28"",&#xA;  ""operation"" : ""PutItem"",&#xA;  ""key"" : {&#xA;    ## If object ""id"" should come from GraphQL arguments, change to $util.dynamodb.toDynamoDBJson($ctx.args.id)&#xA;    ""id"": $util.dynamodb.toDynamoDBJson($ctx.args.id)&#xA;  },&#xA;  ""attributeValues"" : $util.dynamodb.toMapValuesJson($ctx.args)&#xA;}&#xA;&#xA;// Response mapping template&#xA;$util.toJson($context.result)&#xA;</code></pre>&#xA;&#xA;<p>Here's the mutation that I ran within the Queries page</p>&#xA;&#xA;<pre><code>mutation CreateCity {&#xA;  createCity(input: {&#xA;    id: ""11538062""&#xA;    name: ""Manchester""&#xA;  }) {&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And this is the error that is returned from AppSync and or Dynamo</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""createCity"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""createCity""&#xA;      ],&#xA;      ""data"": null,&#xA;      ""errorType"": ""DynamoDB:AmazonDynamoDBException"",&#xA;      ""errorInfo"": null,&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 32,&#xA;          ""column"": 3,&#xA;          ""sourceName"": null&#xA;        }&#xA;      ],&#xA;      ""message"": ""One or more parameter values were invalid: Type mismatch for key id expected: S actual: NULL (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException; Request ID: 7PU4D2...)""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any help would be really appreciated, I can't see why I'm unable to perform a simple Create using a provided String as the ID and it identifies it as NULL...</p>&#xA;",4684773,,,,2018-09-29 18:31:02,AWS AppSync - Create Mutation returns Null,<amazon-web-services><graphql><aws-appsync>,1,0,0,2018-09-29 18:17:15
52571358,2,,52571220,0,,"<pre><code>## Request Mapping&#xA;&#xA;{&#xA;  ""version"" : ""2017-02-28"",&#xA;  ""operation"" : ""PutItem"",&#xA;  ""key"" : {&#xA;    ""id"" : $util.dynamodb.toDynamoDBJson($ctx.args.input.id)&#xA;  },&#xA;  ""attributeValues"" : {&#xA;    ""name"" : $util.dynamodb.toDynamoDBJson($ctx.args.input.name)&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",9270631,,,,2018-09-29 18:31:02,"",,0,1,0,2018-09-29 18:31:02
52574857,1,52575965,,3,1457,"<p>I am learning graphql so i am using <code>graphene-django</code>. I am developing and api for CRUD apps. However, I am getting an error while updating the company. I get following error 'Argument \""input\"" has invalid value'. </p>&#xA;&#xA;<p>Here is what I have done </p>&#xA;&#xA;<pre><code>class CompanyInput(graphene.InputObjectType):&#xA;&#xA;    name = graphene.String(description='Name of your company')&#xA;    email = graphene.String(description='Email of your company')&#xA;    phone_number = graphene.String(description='Phone number of your company')&#xA;    director = graphene.String(description='Director of your company')&#xA;    franchise_head = graphene.String(description='Franchise Head of your company')&#xA;&#xA;class UpdateCompany(graphene.Mutation):&#xA;&#xA;    class Arguments:&#xA;&#xA;        input = CompanyInput(description=""These fields are required"", required=True)&#xA;        id = graphene.String(required=True)&#xA;&#xA;    class Meta:&#xA;        description = ""Update an existing company""&#xA;        # model = models.Company&#xA;&#xA;    errors = graphene.String()&#xA;    company = graphene.Field(CompanyNode)&#xA;&#xA;    @staticmethod&#xA;    def mutate(root, info, input=None):&#xA;        print('######################')&#xA;        print('root', root)&#xA;        print('######################')&#xA;        print('info', info, info.context, info.context.user, info.context.user.is_authenticated)&#xA;        if not info.context.user.is_authenticated:&#xA;            return UpdateCompany(errors=json.dumps('Please Login to continue'))&#xA;        try:&#xA;            company_instance = models.Company.objects.get(id=id)&#xA;            if company_instance:&#xA;                company = models.Company(owner=info.context.user,&#xA;                                         name=input.name,&#xA;                                         email=input.email,&#xA;                                         phone_number=input.phone_number,&#xA;                                         director=input.director,&#xA;                                         franchise_head=input.franchise_head&#xA;                                         )&#xA;                return UpdateCompany(company=company, instance=company_instance)&#xA;        except models.Company.DoesNotExist:&#xA;            return UpdateCompany(errors=json.dumps('No Company Exist to Update'))&#xA;&#xA;&#xA;class Mutation(graphene.ObjectType):&#xA;&#xA;    create_company = CreateCompany.Field()&#xA;    update_company = UpdateCompany.Field()&#xA;</code></pre>&#xA;&#xA;<p>The query for updating the company is </p>&#xA;&#xA;<pre><code>mutation {&#xA;  updateCompany(input: {id: ""Q29tcGFueU5vZGU6MQ=="", name: ""Demo Company"", email: ""abc@gmail.com"", phoneNumber: ""984217846"", director: ""Mr Director"", franchiseHead: ""Mr Franchise""}) {&#xA;    errors&#xA;    company {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I tried the following query as well</p>&#xA;&#xA;<pre><code>mutation {&#xA;      updateCompany(id: ""Q29tcGFueU5vZGU6MQ=="", input: {name: ""Demo Company"", email: ""abc@gmail.com"", phoneNumber: ""984217846"", director: ""Mr Director"", franchiseHead: ""Mr Franchise""}) {&#xA;        errors&#xA;        company {&#xA;          id&#xA;          name&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>This query throws an error <code>mutate() got an unexpected keyword argument 'id'</code></p>&#xA;",5773335,,,,2018-09-30 08:15:07,"Argument \""input\"" has invalid value id when updating the company",<python><django><graphql><graphene-python>,1,0,0,2018-09-30 05:14:19
52580083,1,52583561,,1,2446,"<p><strong>I am trying to get the list of pets that belongs to a specific username.</strong></p>&#xA;&#xA;<p>Table Design (PetTable):</p>&#xA;&#xA;<pre><code>username: partition key&#xA;petId: sort key, &#xA;</code></pre>&#xA;&#xA;<p>The value of petId is generate by concatenating the string ""petId:"" and random autoId value. So, if autoId is 3838380022, then the value of petId sort key will be ""petId:3838380022""</p>&#xA;&#xA;<p><strong>Schema:</strong></p>&#xA;&#xA;<pre><code>type Pet {&#xA;    username: String!&#xA;    petId: ID!&#xA;}&#xA;&#xA;type PetsConnection {&#xA;    pets: [Pet]&#xA;}&#xA;&#xA;type Query {&#xA;    getPets(username: String): PetsConnection&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Resolver:</strong></p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Query"",&#xA;    ""query"" : {&#xA;        ## Provide a query expression. **&#xA;        ""expression"": ""username = :username and begins_with(petId, :petId)"",&#xA;        ""expressionValues"" : {&#xA;            "":username"" : {&#xA;                ""S"" : ""${ctx.args.username}""&#xA;            },&#xA;            "":petId"" : {&#xA;                ""S"" : ""pet""&#xA;            }&#xA;&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Query:</strong></p>&#xA;&#xA;<pre><code>query GetUserPets {&#xA;  getPets(username: ""test"") {&#xA;    pets {&#xA;      petId&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Query Response:</strong></p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getPets"": {&#xA;      ""pets"": null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In the Dynamodb, I have 2 entires where the petId(SortKey) starts with the text pet.<a href=""https://i.stack.imgur.com/n2VTl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/n2VTl.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Expecting the query should return 2 entries, but it doesn't return anything. Not sure where the mistake is. Any help will be greatly appreciated. Thanks.</p>&#xA;",1827114,,,,2018-10-01 01:30:24,AWS App Sync dynamodb resolver usage with begin_with expression in Sort Key not working,<amazon-dynamodb><graphql><aws-appsync>,2,0,0,2018-09-30 16:54:16
52583513,2,,52580083,3,,"<p>I tried to reproduce your schema and test it as much as possible. It works fine for me</p>&#xA;&#xA;<pre><code>type Pet {&#xA;    username: String!&#xA;    petID: ID!&#xA;}&#xA;&#xA;type Query {&#xA;    getPets(username: String!): [Pet]&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><em>Make sure when you create resource for <code>PetTable</code> (username as <code>PK</code> and petID as <code>sort-key</code>)</em></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/yKLnd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yKLnd.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><em>Attach resolver for the query</em></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/x8ze3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/x8ze3.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><em>DynamoDB</em> </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/XJKPR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XJKPR.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><em>Testing result</em></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/mkcDk.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mkcDk.png"" alt=""enter image description here""></a></p>&#xA;",9270631,,9270631,2018-10-01 01:30:24,2018-10-01 01:30:24,"",,0,0,0,2018-10-01 01:18:22
52583561,2,,52580083,2,,"<p>What is your response mapping template?&#xA;You probably left the default mapping template that returns a list of results, instead of mapping the query results from DynamoDB to your <code>PetConnection</code> type.</p>&#xA;&#xA;<p>I reproduced your API and I was able to get results using the same GraphQL query. </p>&#xA;&#xA;<p>Here is my <strong>Response template</strong>:</p>&#xA;&#xA;<pre><code>#set($petConnection = { 'pets': $ctx.result.items })&#xA;$util.toJson($petConnection)&#xA;</code></pre>&#xA;&#xA;<p>And results:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getPets"": {&#xA;      ""pets"": [&#xA;        {&#xA;          ""petId"": ""petId:1234""&#xA;        },&#xA;        {&#xA;          ""petId"": ""petId:12345""&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Note</strong>: One great way to debug your application is to enable logs from the API settings page. &#xA;See below how to enable logs. Once enabled, head to the Queries pane, tick the logs checkbox and execute a GraphQL query. Your application logs should appear right in the console.&#xA;<a href=""https://i.stack.imgur.com/22S87.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/22S87.jpg"" alt=""enter image description here""></a></p>&#xA;",1060799,,,,2018-10-01 01:27:28,"",,0,0,0,2018-10-01 01:27:28
52587619,1,52709801,,3,477,"<p>I'm using the apollo-server-lambda module to create a lambda that connects to RDS database. The only way I can properly connect to the RDS is the following</p>&#xA;&#xA;<pre><code>    exports.graphqlHandler = function(event, context, callback) { &#xA;&#xA;     context.callbackWaitsForEmptyEventLoop = false;&#xA;&#xA;     sequelize.authenticate()&#xA;&#xA;    .then(() =&gt; {&#xA;     console.log('Connection has been established successfully.');&#xA;     callback(null, ""just stop!"");&#xA;    })&#xA;    .catch(err =&gt; {&#xA;      console.error('Unable to connect to the database:', err);&#xA;      callback(""error"");&#xA;    });&#xA;</code></pre>&#xA;&#xA;<p>How can I do this using the Apollo server lambda createHandler method</p>&#xA;",1796864,,,,2018-10-08 20:41:17,apollo server RDS and aws lambda,<apollo><apollo-server>,1,0,0,2018-10-01 08:59:30
52603898,2,,50607532,1,,"<p>I got the same issue, I think amplify is expecting developer to check if the response is <code>Ready</code>. I solved it by:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>&lt;Connect query={graphqlOperation(someAppSyncQuery)}&gt;&#xD;&#xA;  {this.test}&#xD;&#xA;&lt;/Connect&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;const test = (appSyncResponseObject: any): any =&gt; {&#xD;&#xA;  if (appSyncResponseObject.data == null ||&#xD;&#xA;      appSyncResponseObject.data.getRecords == null) {&#xD;&#xA;      return null;&#xD;&#xA;    } else {&#xD;&#xA;      const records = appSyncResponseObject.data.getRecords;&#xD;&#xA;      return (&#xD;&#xA;        &lt;div&gt;&#xD;&#xA;          &lt;h3&gt;List all records&lt;/h3&gt;&#xD;&#xA;          &lt;ul&gt;&#xD;&#xA;            {records.map(&#xD;&#xA;              (records) =&gt;&#xD;&#xA;                (&lt;li key={records.uuid}&gt;{records.context}&lt;/li&gt;)&#xD;&#xA;            )&#xD;&#xA;            }&#xD;&#xA;          &lt;/ul&gt;&#xD;&#xA;        &lt;/div&gt;&#xD;&#xA;      )&#xD;&#xA;    }&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",1679384,,,,2018-10-02 07:39:22,"",,0,0,0,2018-10-02 07:39:22
52635380,2,,52630225,2,,"<p>With the help of <a href=""https://stackoverflow.com/users/4035768/kamil-kisiela"">Kamil Kisiela</a>, we have find out that it worked again when adding <code>disableOffline: true</code> to <code>AWSAppSyncClient</code>.&#xA;So I looked for bugs that looked like this and I found <a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-js/issues/170"" rel=""nofollow noreferrer"">this</a>.&#xA;Then I upgraded  <code>aws-appsync</code> to <code>1.3.3</code> and it worked all the time, even without <code>disableOffline: true</code>. Yay!</p>&#xA;",2203299,,,,2018-10-03 20:42:19,"",,0,0,0,2018-10-03 20:42:19
52638416,1,,,1,53,"<p>In GraphQL, people usually use graphiql or similar libraries to provide a documentation of the schema (query / mutations etc...) however, how do you do the same for authentication, authorziation requirements? </p>&#xA;&#xA;<p>I'm using .NET to implement graphql. I used graph.authorization to implement a role based authorization. Is there a way to query these security requirement from the schema or do I have to manually write it as part of my description?</p>&#xA;",4200965,,,,2018-10-04 03:11:08,How do you document security in GraphQL Authorization?,<.net><security><graphql><graphiql>,0,0,0,2018-10-04 03:11:08
52647348,1,,,0,254,"<p>I'm using <code>react-admin</code> with <code>ra-data-graphql</code> as my data provider but with a custom buildQuery to match my <code>postgraphile</code> server's graphql flavor.   </p>&#xA;&#xA;<p>After invoking GET_LIST for one of my resources I get the following error:&#xA;<code>&#xA;Warning: Missing translation for key: ""Illegal invocation""&#xA;</code></p>&#xA;&#xA;<p>I tried to log the actions using a custom reducer. I can see that a failure action is being dispacthed but I can't see where and why...  </p>&#xA;&#xA;<p>How can I debug the application to better understand it?  </p>&#xA;&#xA;<p>Sadly I can't share the code right now, many thanks!</p>&#xA;&#xA;<p>Edit:&#xA;In my case the error was thrown because I was missing an <code>id</code> field in  my response.</p>&#xA;",8963382,,8963382,2018-10-05 07:15:46,2018-10-05 07:15:46,How to debug react-admin graphql redux application,<redux><graphql><react-admin>,0,6,0,2018-10-04 12:57:51
52675213,1,,,4,9487,"<p>I have started using AWS AppSync and am running into a permissions issue. </p>&#xA;&#xA;<p>I used AppSync to create a DynamoDB table for my data, and set up authorization for use with Cognito User Pools, which I've already created.</p>&#xA;&#xA;<p>I set the Default Action to <code>ALLOW</code> which, according to the AWS docs -<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/security.html#amazon-cognito-user-pools-authorization"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/security.html#amazon-cognito-user-pools-authorization</a> - should allow public access to run any query/mutation/subscription defined in my schema by default. </p>&#xA;&#xA;<p>The above documentation also says that restricting access is done by adding an <code>@aws_auth</code> to my type definitions. Which I have not added yet.</p>&#xA;&#xA;<p>And so this is what I want: I want my queries to be public - no need to add an <code>@aws_auth</code> directive - and my mutations to be restricted to the Admins group within my Cognito User Pool. So in testing out a query, I should be able to have the data returned to me without being signed in anywhere.</p>&#xA;&#xA;<p>However, when trying to run any test queries inside the AppSync console, I receive the following error message: </p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""errorType"": ""UnauthorizedException"",&#xA;      ""message"": ""Unable to parse JWT token.""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Obviously, this is related to not being signed in with Cognito.</p>&#xA;&#xA;<p>I've tested these queries before without using the Cognito authorization, and they all worked fine. And since my Default Action is set to <code>ALLOW</code> for my Cognito authorizer, my queries should run just the same now since I didn't modify them.</p>&#xA;&#xA;<p>Looking at the code for my queries, types, and resolvers, I can't spot any difference in how they are written. The IAM role allowing access to my DynamoDB table also remains the same and has no restrictions attached to it.</p>&#xA;&#xA;<p>What is going on? Is there a bug with AppSync, or am I missing something here?</p>&#xA;&#xA;<p>Please let me know. Thank you</p>&#xA;",7390291,,,,2022-02-05 22:49:31,AWS AppSync - Unauthorized Exception,<amazon-web-services><authorization><graphql><amazon-cognito><aws-appsync>,2,3,0,2018-10-06 02:29:10
52725737,1,58203840,,8,1454,"<p>Consider the following GraphQL template:</p>&#xA;&#xA;<pre><code>type Foo {&#xA;  id: ID!&#xA;  bars: Bars&#xA;}&#xA;&#xA;type Bar {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;&#xA;type Bars {&#xA;  items: [Bar]!&#xA;  nextToken: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The mapping template for the <code>bars</code> field in the Foo type looks like this:</p>&#xA;&#xA;<pre><code>#set($ids = [])&#xA;#foreach($id in $context.source.bars)&#xA;    #set($map = {})&#xA;    $util.qr($map.put(""id"", $util.dynamodb.toString($id)))&#xA;    $util.qr($ids.add($map))&#xA;#end&#xA;{&#xA;    ""version"" : ""2018-05-29"",&#xA;    ""operation"" : ""BatchGetItem"",&#xA;    ""tables"" : {&#xA;        ""barsTable"" : {&#xA;             ""keys"": $util.toJson($ids),&#xA;             ""consistentRead"": true&#xA;         }&#xA;     }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This works well. But if the <code>bars</code> field contains and empty array <code>[]</code>, the template will obviously crash with the following error:</p>&#xA;&#xA;<pre><code>""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""getFoo"",&#xA;        ""bars""&#xA;      ],&#xA;      ""data"": null,&#xA;      ""errorType"": ""MappingTemplate"",&#xA;      ""errorInfo"": null,&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 59,&#xA;          ""column"": 7,&#xA;          ""sourceName"": null&#xA;        }&#xA;      ],&#xA;      ""message"": ""RequestItem keys '$[tables][barsTable]' can't be empty""&#xA;    }&#xA;  ]&#xA;</code></pre>&#xA;&#xA;<p>So my question is:<br>&#xA;<strong>How do I prevent the query to be executed and just return an empty array to the response template when <code>$context.source.bars</code> is empty ?</strong></p>&#xA;",598812,,598812,2019-10-09 14:16:36,2019-10-09 14:16:36,How to return directly from the request mapper?,<amazon-web-services><graphql><aws-appsync><vtl>,3,0,0,2018-10-09 16:44:21
52730003,2,,52725737,-1,,"<p>You can use </p>&#xA;&#xA;<pre><code>#if(!$array.isEmpty())&#xA;   //do something&#xA;#else&#xA;  //do something else&#xA;#end&#xA;</code></pre>&#xA;&#xA;<p>For more information you can refer the resolver mapping template reference guide <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-programming-guide.html#conditional-checks"" rel=""nofollow noreferrer"">here</a></p>&#xA;",1746370,,,,2018-10-09 22:06:58,"",,0,1,0,2018-10-09 22:06:58
52776731,2,,52725737,-1,,"<p>I tried to reproduce your usecase and finally I came up with one trick to solute the problem.<br>Example schema:</p>&#xA;&#xA;<pre><code>type Query {&#xA;    getTests(ids: [ID!]): [Test]&#xA;}&#xA;type Test {&#xA;    id: ID!&#xA;    title: String!&#xA;}&#xA;schema {&#xA;    query: Query&#xA;}&#xA;</code></pre>&#xA;&#xA;<h3>Solution</h3>&#xA;&#xA;<pre><code>## REQUEST MAPPING&#xA;#set($ids = [])&#xA;## CREATE A FAKE-ID TO RETURN NULL ONLY IF ids IS NULL OR EMPTY&#xA;#if( $ctx.args.ids.isEmpty() || $util.isNull($ctx.args.ids) )&#xA;  #set($map = {})&#xA;  $util.qr($map.put(""id"", $util.dynamodb.toString(""fake-id-to-return-null"")))&#xA;  $util.qr($ids.add($map))&#xA;#else&#xA;  #foreach($id in $ctx.args.ids)&#xA;      #set($map = {})&#xA;      $util.qr($map.put(""id"", $util.dynamodb.toString($id)))&#xA;      $util.qr($ids.add($map))&#xA;  #end&#xA;#end&#xA;&#xA;{&#xA;    ""version"" : ""2018-05-29"",&#xA;    ""operation"" : ""BatchGetItem"",&#xA;    ""tables"" : {&#xA;        ""TestTable"": {&#xA;            ""keys"": $util.toJson($ids),&#xA;            ""consistentRead"": true&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;## RESPONSE MAPPING&#xA;$utils.toJson($ctx.result.data.TestTable)&#xA;</code></pre>&#xA;&#xA;<h3>Another similar solution</h3>&#xA;&#xA;<pre><code>#if( !($util.isNull($ctx.args.ids) || $ctx.args.ids.isEmpty()) ) &#xA;    #set($ids = [])&#xA;    #foreach($id in $ctx.args.ids)&#xA;        #set($map = {})&#xA;        $util.qr($map.put(""id"", $util.dynamodb.toString($id)))&#xA;        $util.qr($ids.add($map))&#xA;    #end&#xA;    {&#xA;        ""version"" : ""2018-05-29"",&#xA;        ""operation"" : ""BatchGetItem"",&#xA;        ""tables"" : {&#xA;            ""TestTable"": {&#xA;                ""keys"": $util.toJson($ids),&#xA;                ""consistentRead"": true&#xA;            }&#xA;        }&#xA;    }&#xA;#else&#xA;    {&#xA;        ""version"": ""2017-02-28"",&#xA;        ""operation"": ""GetItem"",&#xA;        ""key"": {&#xA;            ""id"": $util.dynamodb.toDynamoDBJson("".""),&#xA;        }&#xA;    }&#xA;#end&#xA;</code></pre>&#xA;&#xA;<p>Testing</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/oooaP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/oooaP.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Gnfga.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Gnfga.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/7Tq7O.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7Tq7O.png"" alt=""enter image description here""></a></p>&#xA;",9270631,,9270631,2018-10-12 14:33:32,2018-10-12 14:33:32,"",,0,1,0,2018-10-12 09:41:58
52793416,1,52859435,,1,1988,"<p>Trying to execute a graphql mutation, where the mutation should take custom type. In the App Sync schema, I have defined these custom Types:</p>&#xA;&#xA;<p><strong>Schema:</strong></p>&#xA;&#xA;<pre><code>  input CreateConversationInput {&#xA;        user: UserInput&#xA;        doctor: DoctorInput&#xA;        questionsAndAnsers: [ConversationQAInput]&#xA;        pet: UpdatePetInput&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p><strong>React Native Code:</strong></p>&#xA;&#xA;<pre><code>  const createConversationInput = {&#xA;&#xA;        user: {&#xA;            username: ""deep"",&#xA;            userType: ""Patient"",&#xA;            fullName: ""Deep A""&#xA;        },&#xA;        doctor: {&#xA;            name: ""Raman"",&#xA;            speciality: ""dog"",&#xA;            doctorId: ""0bd9855e-a3f2-4616-8132-aed490973bf7""&#xA;        },&#xA;        questionsAndAnswers: [{ question: ""Question 1"", answer: ""Answer 1"" }, { question: ""Question 2"", answer: ""Answer 2"" }],&#xA;        pet: { username: ""deep39303903"", petId: ""238280340932"", category: ""Canine"" }&#xA;&#xA;&#xA;    }&#xA;&#xA;    API.graphql(graphqlOperation(CreateConversation, createConversationInput)).then(response =&gt; {&#xA;&#xA;        console.log(response);&#xA;&#xA;    }).catch(err =&gt; {&#xA;        console.log(err);&#xA;    });&#xA;</code></pre>&#xA;&#xA;<p>I have define mutation like this:</p>&#xA;&#xA;<pre><code>export const CreateConversation = `mutation CreateConversation( $user: Object, &#xA;    $doctor: Object, $questionsAndAnswers: Object, $pet: Object ) {&#xA;&#xA;        createConversation(&#xA;&#xA;             input : {&#xA;&#xA;                user: $user&#xA;                doctor: $doctor&#xA;                questionsAndAnswers: $questionsAndAnswers&#xA;                pet: $pet&#xA;            }&#xA;        ){&#xA;    username&#xA;    createdAt&#xA;&#xA;  }&#xA;&#xA;  }`;&#xA;</code></pre>&#xA;&#xA;<p>The mutation is working properly from the AWS GraphQL console. However, in the react native app, I get error. </p>&#xA;&#xA;<p><strong>Error:</strong></p>&#xA;&#xA;<blockquote>&#xA;  <p>""Validation error of type UnknownType: Unknown type Object"".</p>&#xA;</blockquote>&#xA;&#xA;<p>I believe the error is because I defined the type as Object in mutations instead of the actual type defined in the AWS Schema. How can I define custom types in the React Native code if this is the issue? </p>&#xA;",1827114,,2673029,2018-10-16 13:09:34,2018-10-17 16:20:48,Getting Error in GraphQL Mutation using AWS Amplify in react native app,<javascript><react-native><graphql><aws-amplify>,1,0,0,2018-10-13 13:27:31
52840557,1,,,4,6089,"<p>I have an AppSync GraphQL API that makes a Query to a DynamoDB and returns a JSON String, however in my Response Mapping Template I use the built-in <code>$util.parseJson()</code> function as listed <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-util-reference.html"" rel=""nofollow noreferrer"">here</a> - but I'm still returned a JSON string in the Query window and when requesting the data in my React app.</p>&#xA;&#xA;<p><strong>Schema file</strong>, I have an ordinary ID &amp; Address field that is of type AWSJSON. </p>&#xA;&#xA;<pre><code>type Venue {&#xA;  id: ID!&#xA;  address: AWSJSON&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When running a mutation, I usually run the address object through a quick <code>JSON.stringify(addressObj)</code> and that formats the object as a string with the \""\"" escaped, meaning that it can be inserted into DynamoDB.</p>&#xA;&#xA;<p><strong>Request Mapping template</strong></p>&#xA;&#xA;<pre><code>{&#xA;  ""version"": ""2017-02-28"",&#xA;  ""operation"": ""GetItem"",&#xA;  ""key"": {&#xA;    ""id"": $util.dynamodb.toDynamoDBJson($ctx.args.id),&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Response Mapping template</strong></p>&#xA;&#xA;<pre><code>#set($result = $ctx.result)&#xA;&#xA;## address - parse back to JSON&#xA;#set($result.address = $util.parseJson($ctx.result.address))&#xA;&#xA;## Return the result&#xA;$util.toJson($result)&#xA;</code></pre>&#xA;&#xA;<p>The idea to create a new variable and then assign the value to the <code>parseJSON</code> value was taken from <a href=""https://stackoverflow.com/questions/51483182/how-return-json-object-from-dynamodb-with-appsync"">How return JSON object from DynamoDB with appsync?</a>. So, as seen below, I am parsing the value through what seems to be the correct method to turn it from stringified JSON, to an object - but it doesn't appear to work.</p>&#xA;&#xA;<p>The current response:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getVenue"": {&#xA;      ""id"": ""31538150"",&#xA;      ""address"": ""{\""lng\"":-1.54511300000001,\""postcode\"":\""LS1 5DL\"",\""short\"":\""New Station St., LS1\"",\""lat\"":53.795231,\""full\"":\""16 New Station St, Leeds LS1 5DL, UK\""}""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Whereas the response that I am wanting is...</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getVenue"": {&#xA;      ""id"": ""31538150"",&#xA;      ""address"": { ""lng"": -1.54511300000001, ""postcode"": ""LS1 5DL"", ""short"": ""New Station St., LS1"", ""lat"": 53.795231, ""full"": ""16 New Station St, Leeds LS1 5DL, UK"" }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any help is greatly appreciated!</p>&#xA;",4684773,,,,2020-01-24 21:48:03,AWS AppSync: How to return valid JSON via DynamoDB,<json><amazon-web-services><amazon-dynamodb><apollo><aws-appsync>,1,3,0,2018-10-16 17:00:50
52846038,1,52938408,,1,817,"<p>The object that will be changed by a mutation contains a <code>permissions</code> array that contains <code>user</code> objects that consist of a <code>userId</code> and a <code>write</code> permission boolean. If a user's <code>userId</code> is present in the list, the user has read permission on the object. If <code>write</code> is set to true, the user also has write permission.</p>&#xA;&#xA;<p>This makes modifying the object easier from a mutation perspective, but it makes handling subscriptions much more difficult, since I don't have access to the object being updated at subscription creation. Thus, I am unable to ensure that user's will only get updates to the object if they have the appropriate permissions.</p>&#xA;&#xA;<p>I don't think it makes a difference (since I can't handle this on the client-side securely), but I'm building a React web client.</p>&#xA;&#xA;<p>Is there any feasible way around this?</p>&#xA;",2763058,,,,2018-10-22 22:07:40,AWS AppSync Subscriptions: Complex Authorization based on Object with in Updated Document,<amazon-web-services><subscription><aws-appsync><appsync-apollo-client>,1,0,0,2018-10-17 01:21:15
52854927,2,,52854703,2,,"<p>You should probably use <code>project()</code></p>&#xA;&#xA;<pre><code>gremlin&gt; g.V().hasLabel('person').&#xA;......1&gt;   project('id','children').&#xA;......2&gt;     by('id').&#xA;......3&gt;     by(out('child').count())&#xA;==&gt;[id:1,children:1]&#xA;==&gt;[id:2,children:2]&#xA;==&gt;[id:3,children:1]&#xA;==&gt;[id:4,children:0]&#xA;==&gt;[id:5,children:0]&#xA;</code></pre>&#xA;&#xA;<p>It takes each vertex and transforms it into a <code>Map</code> of the specified keys. The <code>by()</code> modulators then specify what the values of those keys should be.</p>&#xA;",1831717,,,,2018-10-17 12:30:53,"",,0,2,0,2018-10-17 12:30:53
52885999,1,,,1,1308,"<p>I am trying to integrate an Appsync Graphql api, that has AWS_IAM auth mode, into an Android app. I have followed the AWS documentation related to this but I'm getting the ApolloHttpException: HTTP 401 error.</p>&#xA;&#xA;<pre><code>2018-10-19 09:38:34.853 4679-4739/io.xxxxxxx.android.cognitoiamtest E/AWS: Failed to perform AllPostsQuery&#xA;com.apollographql.apollo.exception.ApolloHttpException: HTTP 401 &#xA;    at com.apollographql.apollo.internal.interceptor.ApolloParseInterceptor.parse(ApolloParseInterceptor.java:147)&#xA;    at com.apollographql.apollo.internal.interceptor.ApolloParseInterceptor.access$100(ApolloParseInterceptor.java:54)&#xA;    at com.apollographql.apollo.internal.interceptor.ApolloParseInterceptor$1.onResponse(ApolloParseInterceptor.java:83)&#xA;    at com.apollographql.apollo.internal.interceptor.ApolloServerInterceptor$1$1.onResponse(ApolloServerInterceptor.java:110)&#xA;    at okhttp3.RealCall$AsyncCall.execute(RealCall.java:141)&#xA;    at okhttp3.internal.NamedRunnable.run(NamedRunnable.java:32)&#xA;    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)&#xA;    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)&#xA;    at java.lang.Thread.run(Thread.java:764)&#xA;</code></pre>&#xA;&#xA;<p>Appsync client code:</p>&#xA;&#xA;<pre><code>val awsConfig = AWSConfiguration(context)&#xA;&#xA;val credentialsProvider = CognitoCachingCredentialsProvider(context, awsConfig)&#xA;&#xA;client = AWSAppSyncClient.builder()&#xA;                .context(context)&#xA;                .awsConfiguration(awsConfig)&#xA;                .credentialsProvider(credentialsProvider)&#xA;                .build()&#xA;</code></pre>&#xA;&#xA;<p>My awsconfiguration.json</p>&#xA;&#xA;<pre><code>{&#xA;    ""UserAgent"": ""aws-amplify-cli/0.1.0"",&#xA;    ""Version"": ""1.0"",&#xA;    ""IdentityManager"": {&#xA;    ""Default"": {}&#xA;    },&#xA;    ""CredentialsProvider"": {&#xA;        ""CognitoIdentity"": {&#xA;            ""Default"": {&#xA;                ""PoolId"": ""xx-xxxx-x:xxxxx-xxxx-xxxx-xxxx-xxxxxxxx"",&#xA;                ""Region"": ""xx-xxxx-x""&#xA;            }&#xA;        }&#xA;    },&#xA;    ""CognitoUserPool"": {&#xA;        ""Default"": {&#xA;            ""PoolId"": ""xx-xxxxx-x_xxxxxx"",&#xA;            ""AppClientId"": ""xxxxxxxxxxxxxxxxxx"",&#xA;            ""AppClientSecret"": ""xxxxxxxxxxxxxxxxxxxxxxxxxxxx"",&#xA;            ""Region"": ""xx-xxxxx-x""&#xA;        }&#xA;    },&#xA;    ""AppSync"": {&#xA;        ""Default"": {&#xA;            ""ApiUrl"": ""https://xxxxxxxxxxxxxxxxxx.appsync-api.xx-xxxxx-x.amazonaws.com/graphql"",&#xA;            ""Region"": ""xx-xxxxx-x"",&#xA;            ""AuthMode"": ""AWS_IAM"",&#xA;            ""ApiKey"": ""xxx-xxxxxxxxxxxxxxxxxxx""&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have also added the following policy to the authenticated role in Identity Pool.</p>&#xA;&#xA;<pre><code>{&#xA;    ""Version"": ""2012-10-17"",&#xA;    ""Statement"": [&#xA;        {&#xA;            ""Effect"": ""Allow"",&#xA;            ""Action"": [&#xA;            ""appsync:GraphQL""&#xA;            ],&#xA;            ""Resource"": [&#xA;                ""arn:aws:appsync:xx-xxxx-x:xxxxxxxxx:apis/CognitoIAMTest/types/Query/fields/listCities""&#xA;            ]&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Though there are very less resources for Appsync with IAM auth for Android but I have tried whatever I could find online. I am not sure what I'm missing. Any help regarding this would be greatly appreciated.</p>&#xA;",6538876,,6538876,2018-10-19 10:50:35,2018-10-19 10:50:35,ApolloHttpException: HTTP 401 while using AWS Appsync with IAM auth mode in Android app,<android><graphql><amazon-cognito><aws-appsync><aws-iam>,0,3,0,2018-10-19 04:42:18
52906187,1,,,0,143,"<p>I am using Aws AppSync with Ionic framework. I tried checking the chat application which is provided by AWS Samples. Mutation call is called only once and there is no post call after that in the network calls. I dont know what the exact problem is, whether it is regarding the cache or the socket connection.</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>import { Injectable } from '@angular/core';&#xD;&#xA;&#xD;&#xA;import AWSAppSyncClient from 'aws-appsync';&#xD;&#xA;import appSyncConfig from './aws-export';&#xD;&#xA;import { ApolloModule, Apollo } from 'apollo-angular';&#xD;&#xA;&#xD;&#xA;import { Subject } from 'rxjs/Subject';&#xD;&#xA;&#xD;&#xA;@Injectable()&#xD;&#xA;export class GraphqlService {&#xD;&#xA;&#xD;&#xA;  constructor(private apollo: Apollo) {&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  hydrated() {&#xD;&#xA;    const appsyncClient = new AWSAppSyncClient({&#xD;&#xA;      url: appSyncConfig.graphqlEndpoint,&#xD;&#xA;      region: appSyncConfig.region,&#xD;&#xA;      auth: {&#xD;&#xA;        type: appSyncConfig.authenticationType,&#xD;&#xA;        apiKey: appSyncConfig.apiKey,&#xD;&#xA;      }&#xD;&#xA;    });&#xD;&#xA;    this.apollo.setClient(appsyncClient);&#xD;&#xA;    return appsyncClient.hydrated();&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code> send(input: any) {&#xD;&#xA;    const chat = {&#xD;&#xA;      userId: input.userId,&#xD;&#xA;      createdAt: new Date().toISOString(),&#xD;&#xA;      message: input.message,&#xD;&#xA;    };&#xD;&#xA;    this.chats.next([...this.chats.getValue(), chat]);&#xD;&#xA;    this.apollo.mutate({mutation: post, variables: chat}).subscribe();&#xD;&#xA;  }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",7818537,,,,2018-10-20 13:29:13,AWS AppSync and Ionic Framework- Mutation not working,<amazon-web-services><ionic-framework><graphql><apollo-client><aws-appsync>,0,4,0,2018-10-20 13:29:13
52936452,1,52939341,,0,828,<p>I just recently started exploring graphQL and I'm very excited about it but I wonder how it might work when the schema can change based on user actions. The types in our application can have user defined attributes and I've read that dynamic schemas can be complicated in graphQL. Is there a solution for this type of schema in graphQl/Apollo.</p>&#xA;,131399,,,,2018-10-23 00:12:22,graphQL schema for types that allow custom attributes,<graphql><apollo>,1,0,0,2018-10-22 19:24:47
52959405,1,54146262,,3,1431,"<p>I have a React app setup with AWS Amplify. The initial purpose of the app is to act as a portal for AWS Appstream. Users can login and kick off a streaming instance via the Appstream api.</p>&#xA;&#xA;<p>The part that generates the streaming url is a Lambda function. Currently, this is called directly from the app via the AWS sdk (the IAM context is materialised via Cognito). However, the portal will grow in functionality and I'm likely to need an api. For this, I'm thinking of using AppSync/GraphQL.</p>&#xA;&#xA;<p>But I was wondering if I could simplify coding patterns in the app by using GraphQL exclusively. That is, can I use GraphQL/AppSync to make a call to the Lambda function that I've created? There's a couple of reasons why I'd like to do this:</p>&#xA;&#xA;<ol>&#xA;<li><p>My main goal is to reduce Amplify to a common protocol (in this case GraphQL). This means that I can create a version of the portal that runs on-premises. It also helps support another goal I have - by using GraphQL it could make changing cloud providers possible (without re-writing everything)</p></li>&#xA;<li><p>I'd like to prototype the app in Elm - to see if coding against Amplify would be practical. With Elm there are no AWS/Amplify libraries. But there is a GraphQL library. This could provide a means to reduce interop</p></li>&#xA;<li><p>I could add a Rest api for the Lambda call, but it would be nice to keep api access to one method</p></li>&#xA;</ol>&#xA;&#xA;<p>Sorry if this is a naive question - I'm currently learning AppSync/GraphQL, Lambda and Amplify.</p>&#xA;&#xA;<p>Looking at AppSync itself, it seems that I could create an object called <code>Fleet</code> and make <code>streamingUrl</code> a property that <code>GetFleet()</code> returns. I could then attach a resolver to the Lambda function for this property. However, there seems no obvious way to configure this via Amplify. I have successfully re-created my Lambda function via <code>amplify function add</code>, which is nice. </p>&#xA;&#xA;<p>Is there a way to automate this via Amplify? Maybe it's a matter of creating my own <a href=""https://aws-amplify.github.io/docs/js/graphql#writing-custom-transformers"" rel=""nofollow noreferrer"">GraphQL Transform</a>? Or is there something in Amplify to do this already and I'm just not seeing it?</p>&#xA;",23401,,,,2019-09-13 13:50:52,Automate Lambda resolver for AppSync using Amplify?,<aws-lambda><graphql><aws-appsync><aws-amplify>,2,0,0,2018-10-24 00:12:12
53003485,2,,52701152,2,,"<p><a href=""https://www.postgresql.org/https://www.postgresql.org/"" rel=""nofollow noreferrer"">PostgreSQL</a> would be a good choice. It addresses your requirements in following ways:</p>&#xA;&#xA;<ol>&#xA;<li><p>As a relational database it performs generally well in aggregation queries</p></li>&#xA;<li><p>There are several ways how to address the shading/archiving data requirement</p>&#xA;&#xA;<ul>&#xA;<li>if the data volume is low just use another column to mark archived data</li>&#xA;<li>use another table with same schema and copy the records (manually or with a trigger)</li>&#xA;<li>use built-in <a href=""https://www.postgresql.org/docs/11/static/ddl-partitioning.html"" rel=""nofollow noreferrer"">partitioning</a> feature</li>&#xA;</ul></li>&#xA;<li><p>Indexes allow to perform time bound queries efficiently.</p></li>&#xA;<li><p>Provides json column type for unstructured data</p></li>&#xA;</ol>&#xA;",951609,,,,2018-10-26 07:20:26,"",,0,0,0,2018-10-26 07:20:26
53031119,2,,49575203,0,,"<p>Yes aws appsync can be used without dynamodb . In datasource section of your appsync module you can see options to which you want to link your appsync module. Even don't worry about schema generation. Appsync help you to do it automatically . Just enable auto generate schema .&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorials.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorials.html</a></p>&#xA;",9800865,,9800865,2018-10-29 06:11:59,2018-10-29 06:11:59,"",,0,0,0,2018-10-28 11:43:17
53061783,1,,,1,2154,"<p>In our company, we are creating an application by implementing <a href=""https://graphql.org/"" rel=""nofollow noreferrer"">graphQL</a>.&#xA;I want to test and automate this APIs for CI/CD. </p>&#xA;&#xA;<p>I have tried REST-assured but since graphQL queries are different than Json,&#xA;REST-assured doesn't have proper support for graphQL queries as discussed <a href=""https://github.com/rest-assured/rest-assured/issues/958"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;&#xA;<ul>&#xA;<li><p>How can we send graphQL query using REST-assured?   </p></li>&#xA;<li><p>Please suggest the best approach to test and automate graphQL APIs&#xA;And tools which can be used for testing and automation.</p></li>&#xA;</ul>&#xA;",2381323,,,,2021-06-07 11:20:29,How to test and automate APIs implemented in GraphQL,<graphql>,2,1,0,2018-10-30 10:04:05
53073966,2,,53056290,2,,"<p>Until Appsync improves here is how I accomplished a subscription that only allows a user to subscribe to events that match their own userID, using the schema I posted above:</p>&#xA;&#xA;<p>Request Mapping Template:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""GetItem"",&#xA;    ""key"": {&#xA;        ""userID"": $util.dynamodb.toDynamoDBJson($ctx.identity.username),&#xA;        ""eventID"": { ""S"" : ""0bfe0d7c-b469-441e-95f6-788fe300f76d"" }&#xA;    },&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The request mapping template is only here for looks (The Appsync web console will not let you save without populating this with something valid) It does a hardcoded lookup every time someone makes a subscription request. This does nothing but succeed, and the data is thrown away. That is how subscriptions work in Appsync.</p>&#xA;&#xA;<p>Subscription Response Mapping Template:</p>&#xA;&#xA;<pre><code>#if(${context.identity.username} != ${context.arguments.userID})&#xA;    $utils.unauthorized()&#xA;#else&#xA;##User is authorized, but we return null to continue&#xA;    null&#xA;#end&#xA;</code></pre>&#xA;&#xA;<p>This is where the magic happens. This basically says if the user <em>did not</em> request a subscription to events with the same username as themselves -- return <code>unauthorized</code>. If the user <strong>did</strong> request a subscription to events with the same userID as the logged in account, <code>null</code> (null is a Response Mapping Template's way of continuing successfully (ie, not erroring).</p>&#xA;&#xA;<p>For thoroughness, here is what the client request looks like:</p>&#xA;&#xA;<pre><code>const eventSub = `subscription eventSub($userID: String!) {&#xA;  onCreateEvent(userID: $userID) {&#xA;    userID&#xA;    email_hash&#xA;    eventID&#xA;    type&#xA;    data&#xA;    dateTime&#xA;  }&#xA;}`;&#xA;</code></pre>&#xA;",6138467,,,,2018-10-30 22:49:01,"",,0,0,0,2018-10-30 22:49:01
53116054,2,,52675213,9,,"<p>I think your API Key expiration date is over.So goto --&#xA;APIs -> select your AppSync -> goto setting -> select your API keys -> then Edit -> &#xA;now you are in ""Configure your API key and change expiration date.""&#xA;-> Select Expires&#xA;Choose when this API Key will expire&#xA;here you can choose for 1 year from the date you create new API keys.</p>&#xA;",10237571,,,,2018-11-02 09:40:32,"",,0,4,0,2018-11-02 09:40:32
53151627,1,53151858,,0,430,"<p>I'm new to all graphql world, so this might be a very easy question, sorry</p>&#xA;&#xA;<p>I'm using graphql-compose-mongoose to generate my graphql schema, here's my mongoose schema:</p>&#xA;&#xA;<pre><code>const ComplainSchema = new Schema({&#xA;    entityId: {type: String, required: true},&#xA;    user: {type: UserInfoSchema, required: true},&#xA;    title: String, // standard types&#xA;    desc: String,&#xA;    state: {required: true, type: String, enum: [""DRAFT"", ""MODERATION"", ""PUBLIC"", ""SOLVED""]},&#xA;    attachments: [{&#xA;        url: {type: String, required: true},&#xA;        name: String,&#xA;        mimeType: String,&#xA;        attachmentId: Schema.Types.ObjectId&#xA;    }],&#xA;&#xA;    createdAt: {type: Date, index: true},&#xA;    updatedAt: {type: Date, index: true},&#xA;&#xA;}, {timestamps: {}})&#xA;export default mongoose.model('Complaint', ComplainSchema)&#xA;</code></pre>&#xA;&#xA;<p>If I attempt the following mutation in graphiql it works fine</p>&#xA;&#xA;<pre><code>mutation {&#xA;  complaintUpdateById(record:{_id:""5bdd9350fe144227042e6a20"", title:""ok"", desc:""updated"", attachments:[{name:""zied"", url:""http://zied.com""}]}){&#xA;        recordId, &#xA;        record{&#xA;            _id, &#xA;                entityId,&#xA;                user {&#xA;                    userId,&#xA;                    userName,&#xA;                    roleInShop&#xA;                },&#xA;                title,&#xA;                desc,&#xA;                createdAt,&#xA;                updatedAt,&#xA;        attachments{&#xA;            name,&#xA;            url&#xA;        }&#xA;            }&#xA;        }&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and returns this (in case there could be helpful to see the response)</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""complaintUpdateById"": {&#xA;      ""recordId"": ""5bdd9350fe144227042e6a20"",&#xA;      ""record"": {&#xA;        ""_id"": ""5bdd9350fe144227042e6a20"",&#xA;        ""entityId"": ""5bd9b1858788f51f44ab678a"",&#xA;        ""user"": {&#xA;          ""userId"": ""5bd9ac078788f51f44ab6785"",&#xA;          ""userName"": ""Zied Hamdi"",&#xA;          ""roleInShop"": ""ASA""&#xA;        },&#xA;        ""title"": ""ok"",&#xA;        ""desc"": ""updated"",&#xA;        ""createdAt"": ""2018-11-03T12:23:44.565Z"",&#xA;        ""updatedAt"": ""2018-11-05T09:02:51.494Z"",&#xA;        ""attachments"": [&#xA;          {&#xA;            ""name"": ""zied"",&#xA;            ""url"": ""http://zied.com""&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now if I try to pass the attachments to apollo, I don't know how to do that, I don't know which type to provide (<strong>Attachment</strong> is not the right type obvisouly):</p>&#xA;&#xA;<pre><code>const UPDATE_COMPLAINT = gql `mutation complaintUpdateById($_id:MongoID!, $title: String!, $desc: String!, $attachments: [Attachment]&#xA;        )&#xA;    {&#xA;    complaintUpdateById(record:{_id:$_id, title:$title, desc:$desc, attachments:$attachments}){&#xA;        recordId, &#xA;        record{&#xA;            _id, &#xA;                entityId,&#xA;                user {&#xA;                    userId,&#xA;                    userName,&#xA;                    roleInShop&#xA;                },&#xA;                title,&#xA;                desc,&#xA;                createdAt,&#xA;                updatedAt&#xA;            }&#xA;        }&#xA;  }`&#xA;</code></pre>&#xA;&#xA;<p>So searching for the right type, I did a introspection of my object, the issue is that I get the type of attachment as null for this query:</p>&#xA;&#xA;<pre><code>{&#xA;  __type(name: ""Complaint"") {&#xA;    kind&#xA;    name&#xA;    fields {&#xA;      name&#xA;      description&#xA;      type {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>this is the response:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""__type"": {&#xA;      ""kind"": ""OBJECT"",&#xA;      ""name"": ""Complaint"",&#xA;      ""fields"": [&#xA;        {&#xA;          ""name"": ""entityId"",&#xA;          ""description"": null,&#xA;          ""type"": {&#xA;            ""name"": ""String""&#xA;          }&#xA;        },&#xA;        {&#xA;          ""name"": ""user"",&#xA;          ""description"": null,&#xA;          ""type"": {&#xA;            ""name"": ""ComplaintUser""&#xA;          }&#xA;        },&#xA;        {&#xA;          ""name"": ""title"",&#xA;          ""description"": null,&#xA;          ""type"": {&#xA;            ""name"": ""String""&#xA;          }&#xA;        },&#xA;        {&#xA;          ""name"": ""desc"",&#xA;          ""description"": null,&#xA;          ""type"": {&#xA;            ""name"": ""String""&#xA;          }&#xA;        },&#xA;        {&#xA;          ""name"": ""state"",&#xA;          ""description"": null,&#xA;          ""type"": {&#xA;            ""name"": ""EnumComplaintState""&#xA;          }&#xA;        },&#xA;        {&#xA;          ""name"": ""attachments"",&#xA;          ""description"": null,&#xA;          ""type"": {&#xA;            ""name"": null&#xA;          }&#xA;        },&#xA;        {&#xA;          ""name"": ""createdAt"",&#xA;          ""description"": null,&#xA;          ""type"": {&#xA;            ""name"": ""Date""&#xA;          }&#xA;        },&#xA;        {&#xA;          ""name"": ""updatedAt"",&#xA;          ""description"": null,&#xA;          ""type"": {&#xA;            ""name"": ""Date""&#xA;          }&#xA;        },&#xA;        {&#xA;          ""name"": ""_id"",&#xA;          ""description"": null,&#xA;          ""type"": {&#xA;            ""name"": null&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>googling didn't help since I don't know how  is this operation called, I don't think it's a nested mutation from what I found...</p>&#xA;",2033675,,,,2018-11-05 09:47:04,"Unable to do a mutation with a property of type ""array of objects"" in apollo",<graphql><react-apollo><graphql-compose-mongoose>,1,0,0,2018-11-05 09:31:59
53189073,1,,,0,227,"<p>While using graphql-js package in my Node.js program, I see the QueryRoot resolver that's meant to return a list of custom objects, returns a list with copies of last item of what it resolves.</p>&#xA;&#xA;<pre><code>const Person = new GraphQLObjectType({&#xA;  name: ""Person"",&#xA;  description: ""This represents Person type"",&#xA;  fields: () =&gt; ({&#xA;    favorite_game: { type: new GraphQLNonNull(GraphQLString) },&#xA;    favorite_movie: { type: new GraphQLNonNull(GraphQLString) }&#xA;  })&#xA;});&#xA;&#xA;const QueryRootType = new GraphQLObjectType({&#xA;  name: ""Schema"",&#xA;  description: ""Query Root"",&#xA;  fields: () =&gt; ({&#xA;    persons: {&#xA;      type: new GraphQLNonNull(new GraphQLList(Person)),&#xA;      description: ""List of persons"",&#xA;      args: {&#xA;        input: {&#xA;          type: new GraphQLNonNull(Name)&#xA;        }&#xA;      },&#xA;      resolve: async (rootValue, input) =&gt; {&#xA;        return new Promise(function(resolve, reject) {&#xA;          getRESTPersonsByName(input, function(searchresults) {&#xA;            console.log(JSON.stringify(searchresults));&#xA;            resolve(searchresults);&#xA;          });&#xA;        });&#xA;      }&#xA;    }&#xA;  })&#xA;});&#xA;&#xA;const Schema = new GraphQLSchema({&#xA;  query: QueryRootType&#xA;});&#xA;&#xA;module.exports = Schema;&#xA;</code></pre>&#xA;&#xA;<p>The result is like below, which shows copies of the last person in the list of 5 persons resolved. I also verified this at the field level resolver, still seeing same person coming in. (The resolver function getRESTPersonsByName is receiving the results fine from underlying API call, as expected)</p>&#xA;&#xA;<pre><code>{&#xA;  data: &#xA;  {&#xA;    persons : &#xA;    [{&#xA;      ""favorite_game"" : ""half life"",&#xA;      ""favorite_movie"" : ""life of pi""&#xA;     },&#xA;     {&#xA;      ""favorite_game"" : ""half life"",&#xA;      ""favorite_movie"" : ""life of pi""&#xA;     },&#xA;     {&#xA;      ""favorite_game"" : ""half life"",&#xA;      ""favorite_movie"" : ""life of pi""&#xA;     },&#xA;     {&#xA;      ""favorite_game"" : ""half life"",&#xA;      ""favorite_movie"" : ""life of pi""&#xA;     },&#xA;     {&#xA;      ""favorite_game"" : ""half life"",&#xA;      ""favorite_movie"" : ""life of pi""&#xA;    }]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Function getRESTPersonsByName goes something like this -</p>&#xA;&#xA;<pre><code>function getRESTPersonsByName(input, callback) {&#xA;  let searchresults = [];&#xA;  let person1 = {favorite_game: ""spider-man"", favorite_movie: ""spider-man""};&#xA;  let person2 = {favorite_game: ""god of war"", favorite_movie: ""lord of the rings""};&#xA;  let person3 = {favorite_game: ""forza horizon 4"", favorite_movie: ""fast and the furios""};&#xA;  let person4 = {favorite_game: ""super mario"", favorite_movie: ""super mario bros""};&#xA;  let person5 = {favorite_game: ""half life"", favorite_movie: ""life of pi""};&#xA;  searchresults.push(person1);&#xA;  searchresults.push(person2);&#xA;  searchresults.push(person3);&#xA;  searchresults.push(person4);&#xA;  searchresults.push(person5);&#xA;  console.log(JSON.stringify(searchresults));&#xA;  return callback(searchresults);&#xA;}&#xA;</code></pre>&#xA;",5917880,,5917880,2018-11-08 11:45:35,2018-11-08 11:45:35,GraphQL resolver returns copies of last item of the list,<list><graphql-js><express-graphql>,0,2,0,2018-11-07 12:01:02
53212575,1,,,1,885,"<p><br/>&#xA;My program uses apollo-server-koa as graphql service and I want to update schema dynamically. For example:<br/>&#xA;- When user uploads data to server, the schema also need to be updated but not restarting service.<br/>&#xA;I read schema transform and schema stitching but these don't meet my requirement.<br/>&#xA;Anyone can give me an advice.<br/>&#xA;Thank you so much!</p>&#xA;",3375096,,,,2018-11-19 19:02:17,How to update schema without restarting service,<graphql><apollo-server>,1,2,0,2018-11-08 16:56:32
53255380,1,53257641,,0,649,"<p>I am using Amplify to auto-generate queries, mutations and subscriptions. and I have this type:</p>&#xA;&#xA;<pre><code>type Message @model {  &#xA;  id: ID!&#xA;  author: User @connection(name: ""UserMessages"")&#xA;  content: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How do I add authorID as a filter to subscriptions for new messages using Amplify generated schema?</p>&#xA;",4056509,,,,2018-11-12 07:36:20,AppSync/Amplify - how to define GraphQL subscriptions,<graphql><aws-appsync><aws-amplify>,1,0,0,2018-11-12 02:49:07
53268991,1,53563376,,7,1855,"<p>I am trying to get started with <a href=""https://aws.amazon.com/appsync"" rel=""noreferrer"">AWS AppSync</a> and <a href=""https://aws-amplify.github.io"" rel=""noreferrer"">AWS Amplify</a>.</p>&#xA;&#xA;<p>So far, I managed to follow the AWS documentation (especially <a href=""https://aws-amplify.github.io/docs/js/api"" rel=""noreferrer"">here</a> and <a href=""https://aws-amplify.github.io/docs/js/react"" rel=""noreferrer"">here</a>) to successfully create a <a href=""https://aws-amplify.github.io/docs/js/api#react-components"" rel=""noreferrer"">sample TODO app</a> (third code snippet) and enable the AppSync GraphQL API like so:</p>&#xA;&#xA;<pre><code>$ amplify add api&#xA;? Please select from one of the below mentioned services GraphQL&#xA;? Provide API name: MySampleTodoAPI&#xA;? Choose an authorization type for the API API key&#xA;? Do you have an annotated GraphQL schema? No&#xA;? Do you want a guided schema creation? true&#xA;? What best describes your project: Single object with fields (e.g., “Todo” with ID, name, description)&#xA;</code></pre>&#xA;&#xA;<p>This generates this ""trivial"" <code>schema.graphql</code> (i.e. containing only a single object):</p>&#xA;&#xA;<pre><code>type Todo @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>amplify push</code> generates a much more involved, secondary <code>schema.graphql</code> from the file above, creates JavaScript code with objects for mutations, queries, etc. and also sets up AWS resources (i.e. DynamoDB table, S3 buckets, etc.). The app seems to have bugs, but essentially works - including adding data entered in the UI to the DynamoDB table.</p>&#xA;&#xA;<p>I have created a second sample Blog app in the same way as above, only this time choosing <code>Single object with fields (e.g., “Todo” with ID, name, description)</code> instead of <code>Single object with fields ...</code>.</p>&#xA;&#xA;<p>This generates this ""complex"" <code>schema.graphql</code> (i.e. containing multiple, connected objects):</p>&#xA;&#xA;<pre><code>type Blog @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  posts: [Post] @connection(name: ""BlogPosts"")&#xA;}&#xA;type Post @model {&#xA;  id: ID!&#xA;  title: String!&#xA;  blog: Blog @connection(name: ""BlogPosts"")&#xA;  comments: [Comment] @connection(name: ""PostComments"")&#xA;}&#xA;type Comment @model {&#xA;  id: ID!&#xA;  content: String&#xA;  post: Post @connection(name: ""PostComments"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Question:</strong> How do I deal with ""complex"" objects in a React application when talking to the AWS AppSync GraphQL backend ?</p>&#xA;&#xA;<p>As a (contrived) example, assuming I want to add a new <code>Blog</code> object with one <code>Post</code> and one <code>Comment</code> object, can I somehow pass all objects to a single mutation in a single <code>Connect</code> React component ? Or do I have to first trigger a <code>Blog</code> mutation, followed by the other two ? Or do I have to look into customizing the (secondary) <code>schema.graphql</code> and JavaScript files that Amplify generates for me ?</p>&#xA;&#xA;<p>Unfortunately, the AWS sample code only deals with ""trivial"" schemas, not ""complex"" ones - and Amplify seems to be so fresh out of the box that all the third party posts and sample projects use other technologies...</p>&#xA;&#xA;<p>Thank you very much for your consideration! :-)</p>&#xA;",217844,,,,2018-11-30 19:02:09,"AWS AppSync React: how to work with ""complex"" GraphQL schema?",<reactjs><amazon-dynamodb><graphql><aws-appsync><aws-amplify>,1,0,0,2018-11-12 19:39:43
53275319,1,,,1,506,"<p>I am trying to save some data using GraphQL which contains backslash in its input in my Angular 5 app.<br>&#xA;For example, while creating a table I want to keep table name as <strong>Indian\Cars</strong></p>&#xA;&#xA;<p>Below is the body of HTTP post call:</p>&#xA;&#xA;<pre><code>{""query"":""mutation { createTable(input:[{name:\""Indian\Cars\""}]) { id } }""}&#xA;</code></pre>&#xA;&#xA;<p><strong>Note: name is a string that's the reason I have added \""\"" to escape.</strong></p>&#xA;&#xA;<p>But GraphQL is throwing an error:  </p>&#xA;&#xA;<p><strong>'SyntaxError: Unexpected token \' in JSON</strong> </p>&#xA;&#xA;<p>I have tried with replacing it. The table name can be anything, an input from UI.So according to that, I am building the HTTP Post call body dynamically as below.</p>&#xA;&#xA;<pre><code>createGraphQLBodyObjectForPostCall(tableName) {&#xA;&#xA;  const newTableName = tableName.replace(/\\/g, '\\\\');&#xA;&#xA;  const bodyObject = {""query"":""mutation { createTable(input:[{name:\\""' + newTableName + '\\""}]) { id } }""};&#xA;&#xA;  return bodyObject;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>but I want to create the table with the exact same name as <strong>Indian\Cars</strong><br>&#xA;I just want to escape it from the HTTP post-call, but in DB it must save the exact input that we are sending.</p>&#xA;",7166652,,7166652,2018-11-13 07:41:47,2018-11-13 07:41:47,Escape backslash in Angular for the http post call on GraphQL,<javascript><angular><typescript><graphql>,0,3,0,2018-11-13 06:49:15
53277720,2,,53180817,5,,"<p>If you have access to the server you can implement <code>upsert</code> operations, and you can reduce all queries to the such one:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  upsertTodoItem(&#xA;    where: {&#xA;      key: $itemKey # Some unique key generated on client&#xA;    }&#xA;    update: {&#xA;      listId: $listId&#xA;      text: $itemText&#xA;    }&#xA;    create: {&#xA;      key: $itemKey&#xA;      listId: $listId&#xA;      text: $itemText&#xA;    }&#xA;  ) {&#xA;    id&#xA;    key&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So you will have a sequence of identical mutations differing only in variables. An optimistic response accordingly, can be configured to this one mutation. On the server you need to check if an item with such a <code>key</code> already exists and create or update an item respectively.</p>&#xA;&#xA;<p>Additionally you might want to use <a href=""https://github.com/helfer/apollo-link-debounce"" rel=""nofollow noreferrer"">apollo-link-debounce</a> to reduce number of requests when user is typing.</p>&#xA;",5721315,,63550,2019-06-27 09:03:55,2019-06-27 09:03:55,"",,0,0,0,2018-11-13 09:26:14
53277983,1,53282755,,8,2046,"<p>I have the following query:</p>&#xA;&#xA;<pre><code>query xxx {&#xA;   getSomething(id: ""id"") {&#xA;      field1&#xA;      field2&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there any way for me to get <code>field1</code> and <code>field2</code> in lambda? For example, to query only those fields in mysql, not get all of them just to be discarded by AppSync later.</p>&#xA;&#xA;<p>I tried logging all the <code>$context</code> in the request mapper VTL file but they are not there. Any ideas? Seems quite stupid to not be able to do that. The only thing I get in lambda is the <code>id</code> argument.</p>&#xA;&#xA;<p>Thanks,&#xA;Mihai</p>&#xA;",1442680,,1442680,2018-11-13 10:36:43,2020-05-21 17:19:28,AWS AppSync Lambda resolver fields,<amazon-web-services><aws-lambda><graphql><aws-appsync>,3,2,0,2018-11-13 09:39:26
53305535,2,,53305242,1,,"<p>You need to define foreign key custom as you are not using default primary key as id</p>&#xA;&#xA;<pre><code>Periodo.belongsTo(models.casa,{foreignKey: 'cod_casa'}); // &lt;--- HERE&#xA;</code></pre>&#xA;&#xA;<p>As per the <a href=""http://docs.sequelizejs.com/manual/tutorial/associations.html"" rel=""nofollow noreferrer""><strong>DOC</strong></a> :</p>&#xA;&#xA;<pre><code>const User = this.sequelize.define('user', {/* attributes */})&#xA;const Company  = this.sequelize.define('company', {/* attributes */});&#xA;&#xA;User.belongsTo(Company); // Will add companyId to user&#xA;&#xA;const User = this.sequelize.define('user', {/* attributes */}, {underscored: true})&#xA;const Company  = this.sequelize.define('company', {&#xA;  uuid: {&#xA;    type: Sequelize.UUID,&#xA;    primaryKey: true&#xA;  }&#xA;});&#xA;&#xA;User.belongsTo(Company); // &lt;----- Will add company_uuid to user&#xA;</code></pre>&#xA;&#xA;<blockquote>&#xA;  <p><strong>NOTE : User.belongsTo(Company); // &lt;----- Will add company_uuid to user , so in your case its casaCodCasa</strong> </p>&#xA;</blockquote>&#xA;",2349407,,,,2018-11-14 17:14:39,"",,0,6,0,2018-11-14 17:14:39
53312175,1,,,2,611,"<p>Having an issue with returning territories related to their Company when running query for retrieving all Companies.  When a company is created, a territory is not set.  Territories are created separately. </p>&#xA;&#xA;<p>The <strong>connections/relations</strong> are ""territories"" within Company and ""parentCompany"" within Territory.  When running getAllTerritories the ""parentCompany"" is populated correctly (I believe this is due to the fact that you choose the parentCompany upon creation of Territory. </p>&#xA;&#xA;<p>So I guess my question is, <strong>What is the best way to populate the territories array on Company when running the getAllCompanies query?</strong></p>&#xA;&#xA;<p>Types: </p>&#xA;&#xA;<pre><code>type Company {&#xA;  _id: ID&#xA;  state: String!&#xA;  name: String&#xA;  territories: [Territory]&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;  createdBy: User!&#xA;}&#xA;&#xA;type Territory {&#xA;  _id: ID&#xA;  name: String&#xA;  parentCompany: Company!&#xA;  issues: [Issue]&#xA;  prodAdmins: [ProdAdmin]&#xA;  masterAgents: [MasterAgent]&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;  createdBy: User!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Query:<code>getAllCompanies: [Company]</code></p>&#xA;&#xA;<pre><code>getAllCompanies: async (_, args, { Company, Territory }) =&gt; {         &#xA;      const companies = await Company.find({})&#xA;        .sort({ createdAt: 'desc' })&#xA;        .populate({&#xA;          path: 'territories',&#xA;          model: 'Territory',&#xA;        })&#xA;        .populate({&#xA;          path: 'createdBy',&#xA;          model: 'User',&#xA;        });    &#xA;      return companies;&#xA;    },&#xA;</code></pre>&#xA;&#xA;<p>On Company schema: </p>&#xA;&#xA;<pre><code>territories: {&#xA;  type: [mongoose.Schema.Types.ObjectId],&#xA;  ref: 'Territory',&#xA;},&#xA;</code></pre>&#xA;",7669917,,7669917,2018-11-15 14:58:53,2018-11-15 14:58:53,GraphQL Type relationship / Mongoose Schema / populate(),<javascript><mongodb><mongoose><graphql><apollo>,0,1,0,2018-11-15 03:50:55
53312297,1,,,10,2696,"<p>I have setup AppSync with a Schema and Resolvers. I can export the Schema to a file, but I cannot see how to export the Resolvers.</p>&#xA;&#xA;<p>I want to store these in a file so that I can source control them. They contain plenty of SQL code that I don't want to lose.</p>&#xA;",3179115,,,,2021-02-04 03:32:06,How do I export AWS AppSync resolvers?,<amazon-web-services><graphql><aws-appsync>,4,0,0,2018-11-15 04:08:50
53341619,1,53341707,,1,1356,"<p>I'd like to pass the following key:value pairs to a GraphQL query. I imagine it working something like this, but have been unable to find a way to achieve this.</p>&#xA;&#xA;<pre><code>query myPortfolio {&#xA;  portfolio(holdings: {""btc"": 0.12, ""ltc"": 12.1}) {&#xA;    # ...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I attempted to create a special type and pass it as an array, but this failed compilation.</p>&#xA;&#xA;<pre><code>type Holding {&#xA;  coin: String!&#xA;  amount: Float!&#xA;}&#xA;&#xA;type Query {  &#xA;  portfolio(holdings: [Holding!]): Portfolio!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>Error: The type of Query.portfolio(holdings:) must be Input Type but got: [Holding!].</code></p>&#xA;",1130342,,,,2018-11-16 16:17:25,GraphQL query argument that accepts key value pairs?,<graphql><apollo>,1,0,0,2018-11-16 16:12:20
53341707,2,,53341619,1,,"<p>like the message says, the arguments needs to be of <code>input</code> type. Change your schema to something like </p>&#xA;&#xA;<pre><code>type Holding {&#xA;  coin: String!&#xA;  amount: Float!&#xA;}&#xA;&#xA;input HoldingInput{&#xA;  coin: String!&#xA;  amount: Float!&#xA;}&#xA;&#xA;type Query {  &#xA;  portfolio(holdings: [HoldingInput!]): Portfolio!&#xA;}&#xA;</code></pre>&#xA;",1746370,,,,2018-11-16 16:17:25,"",,0,0,0,2018-11-16 16:17:25
53347054,1,53347127,,0,56,"<p>I am not familiar with appsync's syntax with graphql. I am trying to update one of my entities using app sync. I used Amazon's option to automatically allocate resources and connect them to DynamoDB. Here is my entity: </p>&#xA;&#xA;<pre><code>type Property {&#xA;  id: ID!&#xA;  address: String!&#xA;  listedDate: AWSDate!&#xA;  notes: String&#xA;  homeType: String!&#xA;  tenantName: String!&#xA;  ownerName: String!&#xA;  leaseExpDate: AWSDate!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Inside of my mutations, I have this: </p>&#xA;&#xA;<pre><code>type Mutation {&#xA;  updateProperty(input: UpdatePropertyInput!): Property&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Along with this input: </p>&#xA;&#xA;<pre><code>input UpdatePropertyInput {&#xA;  id: ID!&#xA;  address: String&#xA;  listedDate: AWSDate&#xA;  notes: String&#xA;  homeType: String&#xA;  tenantName: String&#xA;  ownerName: String&#xA;  leaseExpDate: AWSDate&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is my attempt at the mutation to update the given property: </p>&#xA;&#xA;<pre><code>mutation updateProperty {&#xA;    updateProperty(input: UpdatePropertyInput(id: 'myID')) {&#xA;      address: String!&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The closest implementation that I found in the appsync's docs can be found <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html#modifying-the-updatepost-resolver-dynamodb-updateitem"" rel=""nofollow noreferrer"">here</a>. </p>&#xA;",7223300,,7223300,2018-11-17 00:36:51,2018-11-19 19:21:48,Graphql Update Syntax issue with App sync,<amazon-web-services><graphql><aws-appsync>,1,0,0,2018-11-17 00:26:38
53347093,2,,53312297,5,,"<p>Before you go any farther, I would recommend you look into managing your AppSync resources with CloudFormation. CloudFormation templates can easily be saved in source control.</p>&#xA;&#xA;<p>AppSync &amp; CloudFormation Tutorials:</p>&#xA;&#xA;<ul>&#xA;<li><p><a href=""https://read.acloud.guru/deploy-a-graphql-service-on-aws-with-the-serverless-framework-7af8fc22a01d"" rel=""noreferrer"">https://read.acloud.guru/deploy-a-graphql-service-on-aws-with-the-serverless-framework-7af8fc22a01d</a></p></li>&#xA;<li><p><a href=""https://read.acloud.guru/deploy-an-aws-appsync-graphql-api-with-amazon-cloudformation-9a783fdd8491"" rel=""noreferrer"">https://read.acloud.guru/deploy-an-aws-appsync-graphql-api-with-amazon-cloudformation-9a783fdd8491</a></p></li>&#xA;</ul>&#xA;&#xA;<p>Or if your resolvers aren't doing anything custom, you can use Amplify's GraphQL Transformer. This allows you to annotate your schema and it will automatically generate resolvers from the annotations. Then you can put the annotated schema into source control. Documentation:</p>&#xA;&#xA;<p><a href=""https://aws-amplify.github.io/docs/js/api#using-graphql-transformers"" rel=""noreferrer"">https://aws-amplify.github.io/docs/js/api#using-graphql-transformers</a></p>&#xA;",5683782,,,,2018-11-17 00:33:47,"",,0,3,0,2018-11-17 00:33:47
53372696,1,71349772,,10,1766,"<p>According to the AWS Amplify documentation:</p>&#xA;&#xA;<ul>&#xA;<li>""<a href=""https://aws-amplify.github.io/docs/cli/graphql#directives"" rel=""noreferrer"">objects annotated with @model are stored in Amazon DynamoDB</a>"";</li>&#xA;<li>""<a href=""https://aws-amplify.github.io/docs/cli/graphql#generates"" rel=""noreferrer"">a single @model directive configures ... an Amazon DynamoDB table</a>""; and</li>&#xA;<li>one can ""<a href=""https://aws-amplify.github.io/docs/cli/graphql#quick-start"" rel=""noreferrer"">push updated changes with <code>amplify push</code></a>"".</li>&#xA;</ul>&#xA;&#xA;<p>It seems clear that <code>amplify push</code> creates a DynamoDB table for each @model. </p>&#xA;&#xA;<p>My questions relate to schema updates:</p>&#xA;&#xA;<ul>&#xA;<li><p>I imagine that adding/removing a model or adding/removing a field in a model works by updating the schema document and then running <code>amplify push</code>. Is that right?</p></li>&#xA;<li><p>How does one rename a model or a field? How would <code>amplify push</code> know to rename vs. drop the old and add the new?</p></li>&#xA;<li><p>How does one implement a migration that requires some business logic, e.g., to update the contents of existing rows? Doing this without Amplify <a href=""https://stackoverflow.com/questions/31301160/change-the-schema-of-a-dynamodb-table-what-is-the-best-recommended-way"">has already been addressed</a> but it is unclear whether that would conflict with something that <code>amplify push</code> might try to do.</p></li>&#xA;</ul>&#xA;",972128,,,,2022-03-04 10:09:40,DynamoDB schema updates with AWS Amplify,<amazon-web-services><amazon-dynamodb><graphql><database-migration><aws-amplify>,3,0,0,2018-11-19 10:33:06
53388115,1,53398938,,3,2959,"<p>Is it possible to do input validation with AWS AppSync without adding another ""layer"" of interaction?</p>&#xA;&#xA;<p>I feel like adding a lambda function will defeat the purpose of it.</p>&#xA;&#xA;<p>What I would like to accomplish is at least some regexp validation on strings.</p>&#xA;&#xA;<p>And if not, then how do people that use AppSync or similar solutions (firebase) do so?</p>&#xA;",1620743,,13302,2019-02-03 18:10:43,2022-07-15 12:06:47,Input validation with AWS AppSync,<amazon-web-services><graphql><aws-appsync>,2,0,0,2018-11-20 07:25:53
53396717,1,53402431,,5,4981,"<p>I have an optional String field, <em>notes</em>, that is sometimes empty. If it's empty I want to insert <em>null</em>, otherwise I want to insert the string.</p>&#xA;&#xA;<p>Here is my resolver - </p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"": ""Invoke"",&#xA;        #set($id = $util.autoId())&#xA;        #set($notes = $util.defaultIfNullOrEmpty($context.arguments.notes, 'null'))&#xA;&#xA;        ""payload"": {&#xA;          ""sql"":""INSERT INTO things VALUES ('$id', :NOTES)"",&#xA;          ""variableMapping"": {&#xA;            "":NOTES"" : $notes&#xA;          },&#xA;          ""responseSQL"": ""SELECT * FROM things WHERE id = '$id'""&#xA;        }&#xA;</code></pre>&#xA;&#xA;<p>} </p>&#xA;&#xA;<p>With this graphql</p>&#xA;&#xA;<pre><code>mutation CreateThing{&#xA;  createThing() {&#xA;    id&#xA;    notes&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get -</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""createRoll"": {&#xA;      ""id"": ""6af68989-0bdc-44e2-8558-aeb4c8418e93"",&#xA;     ""notes"": ""null""&#xA;   }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>}</p>&#xA;&#xA;<p>when I really want <em>null</em> without the quotes.</p>&#xA;&#xA;<p>And with this graphql - </p>&#xA;&#xA;<pre><code>mutation CreateThing{&#xA;  createThing(notes: ""Here are some notes"") {&#xA;    id&#xA;    notes&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get -</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""createThing"": {&#xA;      ""id"": ""6af68989-0bdc-44e2-8558-aeb4c8418e93"",&#xA;      ""notes"": ""Here are some notes""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>which is what I want.</p>&#xA;&#xA;<p>How do I get a quoteless null and a quoted string into the same field?</p>&#xA;",3179115,,,,2019-05-17 07:11:06,How do I insert an optional field as null using AppSync Resolvers and Aurora?,<amazon-web-services><graphql><aws-appsync><resolver><amazon-aurora>,2,0,0,2018-11-20 15:50:09
53402431,2,,53396717,9,,"<p><strong>TL;DR</strong> you should use <code>$util.toJson()</code> to print the <code>$context.arguments.notes</code> correctly. Replace your <code>$notes</code> assignment with </p>&#xA;&#xA;<pre><code>#set($notes = $util.toJson($util.defaultIfNullOrEmpty($context.arguments.notes, null)))&#xA;</code></pre>&#xA;&#xA;<p><strong>Explanation:</strong></p>&#xA;&#xA;<p>The reason is VTL prints whatever the <code>toString()</code> method returns and your call to&#xA;<code>$util.defaultIfNullOrEmpty($context.arguments.notes, 'null')</code> will return the string <code>""null""</code>, which will be printed as <code>""null""</code>. </p>&#xA;&#xA;<p>If you replace with <code>$util.defaultIfNullOrEmpty($context.arguments.notes, null)</code> then it will return a <code>null</code> string. However, VTL will print <code>$notes</code> because that is the way it handles <code>null</code> references. In order to print <code>null</code>, which is the valid JSON representation of <code>null</code>, we have to serialize it to JSON. So the correct statement is:</p>&#xA;&#xA;<pre><code>#set($notes = $util.toJson($util.defaultIfNullOrEmpty($context.arguments.notes, null)))&#xA;</code></pre>&#xA;&#xA;<p><strong>Full test:</strong></p>&#xA;&#xA;<p>I'm assuming you started with the RDS sample provided in the AWS AppSync console and modified it. To reproduce, I updated the <code>content</code> field in the Schema to be nullable:</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;   ...&#xA;   createPost(author: String!, content: String): Post&#xA;   ...&#xA;}&#xA;type Post {&#xA;    id: ID!&#xA;    author: String!&#xA;    content: String&#xA;    views: Int&#xA;    comments: [Comment]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and I modified the <code>posts</code> table schema so <code>content</code> can also be null there: (inside the Lambda function)</p>&#xA;&#xA;<pre><code>function conditionallyCreatePostsTable(connection) {&#xA;  const createTableSQL = `CREATE TABLE IF NOT EXISTS posts (&#xA;    id        VARCHAR(64) NOT NULL,&#xA;    author    VARCHAR(64) NOT NULL,&#xA;    content   VARCHAR(2048),&#xA;    views     INT NOT NULL,&#xA;    PRIMARY KEY(id))`;&#xA;  return executeSQL(connection, createTableSQL);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is the request template for the <code>createPost</code> mutation:</p>&#xA;&#xA;<pre><code>    {&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"": ""Invoke"",&#xA;    #set($id = $util.autoId())   &#xA;    ""payload"": {&#xA;      ""sql"":""INSERT INTO posts VALUES ('$id', :AUTHOR, :CONTENT, 1)"",&#xA;      ""variableMapping"": {&#xA;        "":AUTHOR"" : ""$context.arguments.author"",&#xA;        "":CONTENT"" : $util.toJson($util.defaultIfNullOrEmpty($context.arguments.content, null))&#xA;      },&#xA;      ""responseSQL"": ""SELECT id, author, content, views FROM posts WHERE id = '$id'""&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and response template:</p>&#xA;&#xA;<pre><code>$util.toJson($context.result[0])&#xA;</code></pre>&#xA;&#xA;<p>The following query:</p>&#xA;&#xA;<pre><code>mutation CreatePost {&#xA;  createPost(author: ""Me"") {&#xA;    id&#xA;    author&#xA;    content&#xA;    views&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>returns:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""createPost"": {&#xA;      ""id"": ""b42ee08c-956d-4b89-afda-60fe231e86d7"",&#xA;      ""author"": ""Me"",&#xA;      ""content"": null,&#xA;      ""views"": 1&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and </p>&#xA;&#xA;<pre><code>mutation CreatePost {&#xA;  createPost(author: ""Me"", content: ""content"") {&#xA;    id&#xA;    author&#xA;    content&#xA;    views&#xA;  }&#xA;}  &#xA;</code></pre>&#xA;&#xA;<p>returns  </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""createPost"": {&#xA;      ""id"": ""c6af0cbf-cf05-4110-8bc2-833bf9fca9f5"",&#xA;      ""author"": ""Me"",&#xA;      ""content"": ""content"",&#xA;      ""views"": 1&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1060799,,,,2018-11-20 22:17:26,"",,0,0,0,2018-11-20 22:17:26
53421391,2,,53277983,0,,<p>Those fields are in the <code>$context.source</code> object. If you pass the entire <code>$context</code> object to your lambda you'd be able to access those fields in <code>event.source</code></p>&#xA;,1833708,,,,2018-11-21 22:35:58,"",,0,1,0,2018-11-21 22:35:58
53422855,2,,53421982,1,,"<p>There are 2 questions in one, so I'll answer in the order there were asked.</p>&#xA;&#xA;<p><strong>1. return all of the posts associated with an author</strong></p>&#xA;&#xA;<p>Your schema looks correct. The query would look like:</p>&#xA;&#xA;<pre><code>query {&#xA;  author(id: 1) {&#xA;    id&#xA;    posts {&#xA;      id &#xA;      title&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>2. create Post and attach to an author</strong> </p>&#xA;&#xA;<p>In your example if you want to expose an interface to create a Post, then you would have to expose a mutation field in your schema </p>&#xA;&#xA;<p>e.g:</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;  createPost(input: CreatePostInput): Post&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>if you want at the same time of creating a post, to also attach it to an author then you could add the <code>authorId</code> as part of the input, here we only want to attach the Post to an existing Author: </p>&#xA;&#xA;<pre><code>input CreatePostInput {&#xA;  title: String&#xA;  authorId: ID!&#xA;  votes: Int&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>of course this is only the interface definition. We need to actually create the Post and link it to the Author inside the resolver. </p>&#xA;&#xA;<p>The mutation query will look like:</p>&#xA;&#xA;<pre><code>mutation createPost {&#xA;  createPost(input: {&#xA;    title: ""Title""&#xA;    votes: 345&#xA;    authorId: ""authorId1"" &#xA;  }) {&#xA;    id&#xA;    title&#xA;    votes&#xA;    author {&#xA;      id&#xA;      firstName&#xA;      lastName&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Hope that helps!</p>&#xA;",1060799,,,,2018-11-22 01:55:16,"",,0,0,0,2018-11-22 01:55:16
53487333,1,53547715,,0,757,"<p>I have a list of classes stored in memory that I am trying to parse through various types. It is referenced through the method <code>get_inventory()</code>.</p>&#xA;&#xA;<p>When I call the classes individually, they resolve as I would expect.</p>&#xA;&#xA;<p>But when I try to nest one in the other, the value is returning null.</p>&#xA;&#xA;<p>The code, followed by some examples:</p>&#xA;&#xA;<pre><code>class Account(graphene.ObjectType):&#xA;&#xA;    account_name = graphene.String()&#xA;    account_id = graphene.String()&#xA;&#xA;    def resolve_account(&#xA;        self, info,&#xA;        account_id=None,&#xA;        account_name=None&#xA;    ):&#xA;&#xA;        inventory = get_inventory()&#xA;&#xA;        result = [Account(&#xA;            account_id=i.account_id,&#xA;            account_name=i.account_name&#xA;        ) for i in inventory if (&#xA;            (i.account_id == account_id) or &#xA;            (i.account_name == account_name)&#xA;        )]&#xA;&#xA;        if len(result):&#xA;            return result[0]&#xA;        else:&#xA;            return Account()&#xA;&#xA;account = graphene.Field(&#xA;    Account, &#xA;    resolver=Account.resolve_account, &#xA;    account_name=graphene.String(default_value=None),&#xA;    account_id=graphene.String(default_value=None)&#xA;)&#xA;&#xA;class Item(graphene.ObjectType):&#xA;&#xA;    item_name = graphene.String()&#xA;    region = graphene.String()&#xA;    account = account&#xA;&#xA;    def resolve_item(&#xA;        self, info,&#xA;        item_name=None&#xA;    ):&#xA;        inventory = get_inventory()&#xA;&#xA;        result = [Item(&#xA;            item_name=i.item_name,&#xA;            region=i.region,&#xA;            account=Account(&#xA;                account_id=i.account_id&#xA;            )&#xA;        ) for i in inventory if (&#xA;            (i.item_name == item_name)&#xA;        )]&#xA;&#xA;        if len(result):&#xA;            return result[0]&#xA;        else:&#xA;            return Item()&#xA;&#xA;item = graphene.Field(&#xA;    Item, &#xA;    resolver=Item.resolve_item, &#xA;    item_name=graphene.String(default_value=None)&#xA;)&#xA;&#xA;class Query(graphene.ObjectType):&#xA;    account = account&#xA;    item = item&#xA;&#xA;schema = graphene.Schema(query=Query)&#xA;</code></pre>&#xA;&#xA;<p>Let's assume I have an account <code>foo</code> that has an item <code>bar</code>. The below queries return the fields correctly.</p>&#xA;&#xA;<pre><code>{&#xA;  account(accountName:""foo"") {&#xA;    accountName&#xA;    accountId&#xA;  }&#xA;}&#xA;&#xA;{&#xA;  item(itemName: ""bar"") {&#xA;    itemName&#xA;    region&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So if I wanted to find the account that has the item <code>bar</code>, I would think I could query <code>bar</code> and get <code>foo</code>. But it returns the <code>account</code> fields as <code>null</code>.</p>&#xA;&#xA;<pre><code>{&#xA;  item(itemName: ""bar"") {&#xA;    itemName&#xA;    region&#xA;    account {&#xA;      accountId&#xA;      accountName&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Recall that as part of <code>resolve_item</code>, I am doing <code>account=Account(account_id=i.account_id)</code> - I would expect this to work.</p>&#xA;&#xA;<p>If I alter the last return statement of <code>resolve_account</code> to the below, <code>accountId</code> always returns <code>yo</code>.</p>&#xA;&#xA;<pre><code>...&#xA;else:&#xA;    return Account(&#xA;        account_id='yo'&#xA;    )&#xA;</code></pre>&#xA;&#xA;<p>So this tells me that my resolver is firing, but the invocation in <code>resolve_item</code> is not passing <code>account_id</code> properly.</p>&#xA;&#xA;<p>What am I doing wrong?</p>&#xA;",1886901,,,,2018-11-29 21:16:08,Resolver Not Receiving Arguments when Nested,<python><graphql><graphene-python>,2,0,0,2018-11-26 18:53:03
53493889,1,53495843,,6,9061,"<p>I have a question about AppSync error handling. I would like to send <code>errorInfo</code> object along with the error response and I tried with <code>$util.error</code>. Per the document:</p>&#xA;&#xA;<p><a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-util-reference.html"" rel=""noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/resolver-util-reference.html</a></p>&#xA;&#xA;<blockquote>&#xA;  <p><code>$util.error(String, String, Object, Object)</code></p>&#xA;  &#xA;  <p>Throws a custom error. This can be used in request or response mapping&#xA;  templates if the template detects an error with the request or with&#xA;  the invocation result. Additionally, an errorType field, a data field,&#xA;  and a errorInfo field can be specified. The data value will be added&#xA;  to the corresponding error block inside errors in the GraphQL&#xA;  response. Note: data will be filtered based on the query selection&#xA;  set. The errorInfo value will be added to the corresponding error&#xA;  block inside errors in the GraphQL response. Note: errorInfo will NOT&#xA;  be filtered based on the query selection set.</p>&#xA;</blockquote>&#xA;&#xA;<p>And here is what my ResponseMappingTemplate look like:</p>&#xA;&#xA;<pre><code>#if( $context.result &amp;&amp; $context.result.errorMessage )&#xA;  $utils.error($context.result.errorMessage, $context.result.errorType, $context.result.data), $context.result.errorInfo)&#xA;#else&#xA;  $utils.toJson($context.result.data)&#xA;#end&#xA;</code></pre>&#xA;&#xA;<p>Here is what I did on the resolver:</p>&#xA;&#xA;<pre><code>var result = {&#xA;  data: null,&#xA;  errorMessage: 'I made this error',&#xA;  errorType: 'ALWAYS_ERROR',&#xA;  errorInfo: {&#xA;    errorCode: 500,&#xA;    validations: [&#xA;      {&#xA;        fieldName: '_',&#xA;        result: false,&#xA;        reasons: [&#xA;          'Failed! Yay!'&#xA;        ]&#xA;      }&#xA;    ],&#xA;  }&#xA;};&#xA;callback(null, result);&#xA;</code></pre>&#xA;&#xA;<p>And here is what I see in CloudWatch log:</p>&#xA;&#xA;<pre><code>{&#xA;    ""errors"": [&#xA;        ""CustomTemplateException(message=I made this error, errorType=ALWAYS_ERROR, data=null, errorInfo={errorCode=500, validations=[{fieldName=_, result=false, reasons=[Failed! Yay!]}]})""&#xA;    ],&#xA;    ""mappingTemplateType"": ""Response Mapping"",&#xA;    ""path"": ""[getError]"",&#xA;    ""resolverArn"": ""arn:aws:appsync:ap-southeast-1:...."",&#xA;    ""context"": {&#xA;        ""arguments"": {},&#xA;        ""result"": {&#xA;            ""errorMessage"": ""I made this error"",&#xA;            ""errorType"": ""ALWAYS_ERROR"",&#xA;            ""errorInfo"": {&#xA;                ""errorCode"": 500,&#xA;                ""validations"": [&#xA;                    {&#xA;                        ""fieldName"": ""_"",&#xA;                        ""result"": false,&#xA;                        ""reasons"": [&#xA;                            ""Failed! Yay!""&#xA;                        ]&#xA;                    }&#xA;                ]&#xA;            }&#xA;        },&#xA;        ""stash"": {},&#xA;        ""outErrors"": []&#xA;    },&#xA;    ""fieldInError"": true&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And here is what I got in the response:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getError"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""getError""&#xA;      ],&#xA;      ""data"": null,&#xA;      ""errorType"": ""ALWAYS_ERROR"",&#xA;      ""errorInfo"": null,&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 2,&#xA;          ""column"": 3,&#xA;          ""sourceName"": null&#xA;        }&#xA;      ],&#xA;      ""message"": ""I made this error""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Notice that <code>errorInfo</code> is null and I some how got CustomTemplateException. I suspect that is because of the 4th parameter to <code>$utils.error</code>. But I don’t know why. Could anyone help to point out the error or tell me whether sending custom <code>errorInfo</code> is possible</p>&#xA;",2724342,,1480391,2019-01-21 11:50:05,2019-04-27 07:37:25,How to send custom error in AppSync with $util.error,<error-handling><graphql><graphql-js><aws-appsync><vtl>,1,1,0,2018-11-27 06:23:19
53507623,2,,53505041,0,,"<p>Try something like this:</p>&#xA;&#xA;<pre><code>function mapData(data){&#xA;  const mappedResult = {};&#xA;  for (const key in result) {&#xA;    if (result.hasOwnProperty(key)) {&#xA;      mappedResult[key] = result[key] || """";&#xA;    }&#xA;  }&#xA;  return mappedResult;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It should check each key in object, and if it is a falsy one (null || undefined) assign it an empty string.</p>&#xA;&#xA;<p>And to clarify some more - what is <code>i</code> variable?</p>&#xA;",10700015,,,,2018-11-27 20:28:56,"",,0,2,0,2018-11-27 20:28:56
53522190,1,,,3,580,"<p>I am trying to use Apollo to connect to AWSAppSync(Graphql) for my Angular project.</p>&#xA;&#xA;<p>what I've done:</p>&#xA;&#xA;<pre><code>import AWSAppSyncClient from 'aws-appsync';&#xA;import { AUTH_TYPE } from 'aws-appsync/lib/link/auth-link';&#xA;import {Apollo } from 'apollo-angular';&#xA;&#xA;export class GraphqlService {&#xA;&#xA;  constructor(private apollo: Apollo) {&#xA;  }&#xA;&#xA;  hydrated() {&#xA;    const appsyncClient = new AWSAppSyncClient({&#xA;      url: appSyncConfig.graphqlEndpoint,&#xA;      region: appSyncConfig.region,&#xA;      auth: {&#xA;        type: AUTH_TYPE.API_KEY,&#xA;        apiKey: appSyncConfig.apiKey,&#xA;      }&#xA;    });&#xA;    this.apollo.setClient(appsyncClient);&#xA;    return appsyncClient.hydrated();&#xA;  }&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I got a fail compilation.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Argument of type'AWSAppSyncClient' is not&#xA;  assignable to parameter of type 'ApolloClient'.</p>&#xA;</blockquote>&#xA;&#xA;<p>Any suggestion is appreciated.</p>&#xA;",7915196,,,,2019-02-25 23:58:55,Angular: AWSAppSyncClient is not compatible with ApolloClient,<angular><graphql><apollo-client><aws-appsync>,1,0,0,2018-11-28 14:51:58
53547715,2,,53487333,0,,"<p>From what I am seeing, it looks like rather than being passed in as an argument, <code>account_id</code> is being stored already as part of <code>account</code> in the <code>ObjectType</code>.</p>&#xA;&#xA;<p>So if I add the below, I can get to the result that I want.</p>&#xA;&#xA;<p><code>account_id = account_id if getattr(self, ""account"", None) is None else self.account.account_id</code></p>&#xA;",1886901,,,,2018-11-29 21:16:08,"",,0,0,0,2018-11-29 21:16:08
53563376,2,,53268991,8,,"<p>Just to distinguish, Complex Objects is a term used by AWS AppSync to denote working with S3 metadata. In your question by complex, you mean non-trivial schemas.</p>&#xA;&#xA;<p>As I understand this, you would like to to save a bunch of related types using a single mutation. AWS AppSync lets you manage your GraphQL schema, attach datasources to the fields, write custom logic via the VTL resolvers. It also exposes a context variable that holds your query arguments, result from the parent resolvers, utility functions, etc. So you can use these to get what you want. Otherwise, like you had mentioned, you would from your React app first make a mutation to save a blog, followed by other types.</p>&#xA;&#xA;<p>Here are some of the ways you can write a single mutation for related GraphQL types:</p>&#xA;&#xA;<ul>&#xA;<li>Once you create a new GraphQL API using AWS Amplify, you can still go to your AppSync schema (on the AWS Console), and add a new mutation type and custom resolver to handle this single mutation. Since your datasource for the types are all in DynamoDB, you can use BatchWrite across multiple tables.</li>&#xA;<li>We introduced a concept of <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html"" rel=""noreferrer"">pipeline resolvers</a> in the last week. Using this, you can attach a pipeline resolver to the mutation type by passing Blog, Post and Comments to a chain of functions, which update the corresponding DynamoDB tables accordingly.</li>&#xA;<li>Use a Lambda datasource which updates all 3 tables in one go.</li>&#xA;<li>Update the CloudFormation document generated by AWS Amplify, or create a new child CF stack for the same</li>&#xA;<li>Add your own transformer to model your custom resolvers that update all 3 tables in one go, using one of the above approaches.</li>&#xA;</ul>&#xA;&#xA;<p>AWS Amplify would not be able to provide this functionality out of the box, as this will then be too opinionated and use case driven. In many cases it may not be a good idea to write to multiple tables in one go without thinking about making this transactional and apply proper error handling.</p>&#xA;&#xA;<p>We are figuring out several ways to improve the Developer Experience, and you should see some updates in the near future.</p>&#xA;",640607,,,,2018-11-30 19:02:09,"",,0,2,0,2018-11-30 19:02:09
53568928,2,,53554682,2,,<p>So I ended up having to rework a bit of my code. The problem which technically answered my question is that I found the handler option in serverless.yml let me path down so I was able to direct the build to look at my file within src/</p>&#xA;&#xA;<p>The other problem after that however was I had to rework all of my import statements to conts with require statements instead. I couldn't get imports working on Lambda even with updated nodejs versions. There might be a fix for this but I haven't found that quite yet.</p>&#xA;,669749,,,,2018-12-01 07:58:50,"",,0,0,0,2018-12-01 07:58:50
53572662,1,53581931,,0,2777,"<p>I deployed an AWS AppSync GraphQL endpoint with Amplify following this tutorial: </p>&#xA;&#xA;<p><a href=""https://aws-amplify.github.io/docs/js/api#amplify-graphql-client"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/js/api#amplify-graphql-client</a></p>&#xA;&#xA;<p>I created a Lambda function with Node.js and TypeScript to query data the data:</p>&#xA;&#xA;<pre><code>import { APIGatewayEvent, Callback, Context, Handler } from 'aws-lambda';&#xA;import Amplify, { API, graphqlOperation } from ""aws-amplify"";&#xA;import * as queries from './src/graphql/queries';&#xA;import * as mutations from './src/graphql/mutations';&#xA;import { CreateBlogInput } from './src/API';&#xA;import aws_config from ""./src/aws-exports"";&#xA;&#xA;Amplify.configure(aws_config);&#xA;&#xA;export const list: Handler = async (event: APIGatewayEvent, context: Context, cb: Callback) =&gt; {&#xA;  const allBlogs = await API.graphql(graphqlOperation(queries.listBlogs));&#xA;&#xA;  // this seems to be working&#xA;  console.log(JSON.stringify(allBlogs));&#xA;&#xA;  const response = {&#xA;    statusCode: 200,&#xA;    body: JSON.stringify(allBlogs),&#xA;  };&#xA;&#xA;  cb(null, response);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now, when I call the Lambda function via HTTP, it retrieves the data and logs it to the console. But it never finishes the request and responds, it always runs into a timeout, even if I increase the timeout to 30 seconds. The same happens for running a mutation and inserting data.</p>&#xA;&#xA;<p>Any ideas what could be wrong?</p>&#xA;",1967693,,7452905,2018-12-01 20:41:05,2018-12-02 15:52:16,AWS Lambda timeout after GraphQL query on AWS AppSync,<amazon-web-services><aws-lambda><graphql><aws-appsync><aws-amplify>,1,2,0,2018-12-01 16:10:15
53576058,1,,,2,1250,"<p>We have a react mobile frontend and an AWS appsync backend (DynamoDB, step functions, lambdas, graphql, auth)</p>&#xA;&#xA;<p>Is there an easy way to do this? We have an application and backend in production, and now want to make some changes to our GraphQL components (e.g. schema). Ideally, I would like to have an offline environment which mimics that deployed on AWS.</p>&#xA;&#xA;<p>I found this <a href=""https://stackoverflow.com/questions/51776064/is-there-a-way-to-test-appsync-code-locally-and-or-in-ci-cd"">Is there a way to test AppSync code locally and/or in CI/CD?</a>, which didn't really have any clear answers. It seems setting up a duplicate environment on AWS (pretty much a staging envirFor lambdas, we have played around with Serverless a little.</p>&#xA;&#xA;<p>We don't use CloudFormation today (maybe we should?), for lambdas, we have played around with Serverless a little, but had issues testing locally with authentication and I think DynamoDB. Ultimately, we just ended up using the AWS console to create components, and then something like Cloud9's IDE to build and debug before deploying to production. I don't like the fragmented dev experience. Lambdas weren't too bad because of Cloud9, but as for GraphQL doesn't seem to have the equivalent.</p>&#xA;&#xA;<p>Eager to learn what the best practices are, and how best (and easy) it is to setup a good dev environment.</p>&#xA;&#xA;<p>Thanks</p>&#xA;",527302,,,,2021-06-08 18:46:55,Creating a local dev environment for appsync,<amazon-web-services><graphql><staging><aws-appsync>,1,0,0,2018-12-01 23:43:41
53587382,2,,53576058,0,,"<p>If you already have a working Production schema and are looking to simulate a Dev environment, you would have to replicate it manually for now.</p>&#xA;&#xA;<p>We recently <a href=""https://aws.amazon.com/about-aws/whats-new/2018/11/announcing-aws-amplify-console/"" rel=""nofollow noreferrer"">launched</a> <a href=""https://aws.amazon.com/amplify/console/"" rel=""nofollow noreferrer"">Amplify Console</a>, to specifically address the best practices around CI/CD, and manage your API across stages. A recommended practice would be to use <a href=""https://aws-amplify.github.io/docs/cli/concept"" rel=""nofollow noreferrer"">Amplify CLI</a> which internally uses CloudFormation nested stacks to simplify the process of creating and maintaining your AWS AppSync APIs. In addition to this, Amplify CLI also gives you out of the box scaffolding for your Request/Response Mapping Templates in CloudFormation with just a simple annotated schema.</p>&#xA;&#xA;<p>You could use some of these tools as a recommended practice for maintaining cloud resources. We are also actively working towards enhancing the Developer Experience for some of these workflows.</p>&#xA;",640607,,,,2018-12-03 04:13:28,"",,0,1,0,2018-12-03 04:13:28
53625718,2,,53624172,1,,"<p>You can do this via AWS AppSync Console. When you try and attach a resolver to an existing field in your schema, AppSync gives you certain pre-defined resolver templates out of the box. You can use those to connect to your DynamoDB DataSource.</p>&#xA;&#xA;<p>Refer to the <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/configuring-resolvers.html"" rel=""nofollow noreferrer"">following documentation</a> to attach a resolver.</p>&#xA;&#xA;<p>Alternatively, you can use <a href=""https://aws-amplify.github.io/docs/cli/graphql?sdk=js"" rel=""nofollow noreferrer"">AWS Amplify</a> to use <a href=""https://aws-amplify.github.io/docs/cli/graphql#connection"" rel=""nofollow noreferrer"">@connection</a> directive to specify relationship between your <code>Location</code> and <code>Populate</code> types. This will transform it into a fully descriptive CloudFormation template and create DynamoDB tables, give you CRUDL based queries/mutations. It will also scaffold Resolver templates for the same.</p>&#xA;",640607,,,,2018-12-05 05:30:46,"",,0,0,0,2018-12-05 05:30:46
53643099,2,,53642783,1,,"<p>You're not allowed to have a query that ""ends"" at an object type.  When your query selects <code>articles</code> that's a list of objects, but you have to select at least one field from within those objects.  You might try instead</p>&#xA;&#xA;<pre class=""lang-java prettyprint-override""><code>graphQl.execute(""{ articles { id title text } }"")&#xA;</code></pre>&#xA;",10008173,,,,2018-12-06 01:02:27,"",,0,0,0,2018-12-06 01:02:27
53652758,1,53652902,,-2,230,"<p>I constructed my first GraphQL API from online examples and tutorials, but like to know why certain things are done in Python.</p>&#xA;&#xA;<p>A snippet of a class I don't understand:</p>&#xA;&#xA;<pre><code>class UpdateRegion(graphene.Mutation):&#xA;    """"""Update a region.""""""&#xA;    region = graphene.Field(lambda: Region, description=""Region updated by this mutation."")&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>The Region class:</p>&#xA;&#xA;<pre><code>class Region(SQLAlchemyObjectType):&#xA;   class Meta:&#xA;       model = RegionModel&#xA;       interfaces = (relay.Node, )&#xA;</code></pre>&#xA;&#xA;<p>Why are they passing in the <code>Region</code> class as a lambda function?&#xA;To me <code>lambda: Region</code> is the same as <code>f():return Region</code></p>&#xA;",3411864,,296974,2018-12-06 13:46:58,2018-12-06 13:51:11,Why would you pass a class as a lambda?,<python><lambda><sqlalchemy><graphql>,1,5,0,2018-12-06 13:42:15
53652902,2,,53652758,1,,"<blockquote>&#xA;  <p>To me <code>lambda: Region</code> is the same as <code>f():return Region</code></p>&#xA;</blockquote>&#xA;&#xA;<p>For starters, <code>f():return Region</code> isn't valid syntax. This can, of course, be fixed:</p>&#xA;&#xA;<pre><code>def f():&#xA;  return Region&#xA;&#xA;region = graphene.Field(f, ...)&#xA;</code></pre>&#xA;&#xA;<p>This will work and is roughly equivalent to <code>region = graphene.Field(lambda: Region, ...)</code>. The latter is shorter and arguably clearer.</p>&#xA;",367273,,,,2018-12-06 13:51:11,"",,0,3,0,2018-12-06 13:51:11
53653938,2,,46562561,2,,"<p>You can write your own <code>GraphQLScalarType</code> and precisely describe your object and your dynamic keys, what you allow and what you do not allow or transform.</p>&#xA;&#xA;<p>See <a href=""https://graphql.org/graphql-js/type/#graphqlscalartype"" rel=""nofollow noreferrer"">https://graphql.org/graphql-js/type/#graphqlscalartype</a></p>&#xA;&#xA;<p>You can have a look at <a href=""https://github.com/taion/graphql-type-json"" rel=""nofollow noreferrer"">taion/graphql-type-json</a> where he creates a Scalar that allows and transforms any kind of content:</p>&#xA;&#xA;<p><a href=""https://github.com/taion/graphql-type-json/blob/master/src/index.js"" rel=""nofollow noreferrer"">https://github.com/taion/graphql-type-json/blob/master/src/index.js</a></p>&#xA;",1183252,,,,2018-12-06 14:47:03,"",,0,0,0,2018-12-06 14:47:03
53654196,1,53659918,,1,794,"<p><strong>Example Problem:</strong></p>&#xA;&#xA;<p>A user can post their own articles on our website. However, each user can only post 5 articles and when they post their 5th article, we want to send them an email. </p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Using revolvers only, is it possible to return the mutation response on time and then lazily/async invoke a lambda function that sends an email to the user?</p>&#xA;",1334949,,174777,2018-12-07 05:25:39,2018-12-07 05:25:39,Appsync Invoke lambda after response?,<aws-lambda><graphql><aws-appsync><aws-amplify>,1,0,0,2018-12-06 15:01:11
53682352,2,,53678858,0,,"<p>You can send basically any data you want along to the resolvers.</p>&#xA;&#xA;<p>I verify tokens and add my user to the request, and then pass my user into the context as shown below.</p>&#xA;&#xA;<pre><code>const server  = new ApolloServer({schema: schema(), context: ({req}) =&gt; ({context: &#xA;req.user})});&#xA;</code></pre>&#xA;&#xA;<p>Then I have all user data available at my disposable:</p>&#xA;&#xA;<pre><code> saveChat: async (root, {chat}, {context, pubsub}) =&gt; {&#xA;  const user = context || null;&#xA;  chat.author = user._id ? user._id : null;&#xA;  return new ChatModel({...chat}).save();&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>I also was testing some pubsub stuff and sending it through the context also.</p>&#xA;&#xA;<p>It can also be handy when using graphql directives to determine roles and authority:</p>&#xA;&#xA;<pre><code>hasRole(next, src, {roles}, {context}) {&#xA; if (!context) { throw new Error('Must be Authenticated at least.'); }&#xA; let valid  = false;&#xA; roles.forEach((role) =&gt; { valid = !valid ? _.includes(context.roles, role) : &#xA; valid; });&#xA; return valid ? next() : new Error(`Missing correct role to perform this task, you &#xA; have roles: ${context.roles}`);&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>And in Graphql:</p>&#xA;&#xA;<pre><code> directive @hasRole(roles: [String]) on FIELD_DEFINITION&#xA;&#xA; saveChat(chat: ChatSaveInput!): Chat @hasRole(roles: [""admin""])&#xA;</code></pre>&#xA;&#xA;<p>This is loosely based off articles by Ryan Chenkie who has done a few about with &amp; graphql, Worth a look.</p>&#xA;",3620044,,3620044,2018-12-08 12:31:06,2018-12-08 12:31:06,"",,0,3,0,2018-12-08 12:06:16
53683009,1,53703140,,4,2215,"<p>I am using prisma and yoga graphql servers with a postgres DB.</p>&#xA;&#xA;<p>I want to implement authorization for my graphql queries. I saw solutions like <a href=""https://github.com/maticzav/graphql-shield"" rel=""nofollow noreferrer"">graphql-shield</a> that solve <code>column level security</code> nicely - meaning I can define a permission and according to it block or allow a specific table or column of data (on in graphql terms, block a whole entity or a specific field).</p>&#xA;&#xA;<p>The part I am stuck on is <code>row level security</code> - filtering rows by the data they contain - say I want to allow a logged in user to view only the data that is related to him, so depending on the value in a user_id column I would allow or block access to that row (the logged in user is one example, but there are other usecases in this genre).</p>&#xA;&#xA;<p>This type of security requires running a query to check which rows the current user has access to and I can't find a way (that is not horrible) to implement this with prisma.</p>&#xA;&#xA;<p>If I was working without prisma, I would implement this in the level of each resolver but since I am forwarding my queries to prisma I do not control the internal resolvers on a nested query.</p>&#xA;&#xA;<p>But I do want to work with prisma, so one idea we had was handling this in the DB level using postgres <a href=""https://www.postgresql.org/docs/9.5/sql-createpolicy.html"" rel=""nofollow noreferrer"">policy</a>. This could work as follows:</p>&#xA;&#xA;<ol>&#xA;<li>Every query we run will be surrounded with “begin transaction” and “commit transaction”</li>&#xA;<li>Before the query I want to run “set local context.user_id to 5""</li>&#xA;<li>Then I want to run the query (and the policy will filter results according to the current_setting(‘context.user_id’))</li>&#xA;</ol>&#xA;&#xA;<p>For this to work I would need prisma to allow me to either add pre/post queries to each query that runs or let me set a context for the db.</p>&#xA;&#xA;<p>But these options are not available in prisma.</p>&#xA;&#xA;<p>Any ideas?</p>&#xA;",1391050,,,,2019-09-23 23:57:56,Row level security using prisma and postgres,<postgresql><graphql><prisma><row-level-security><prisma-graphql>,2,3,0,2018-12-08 13:29:51
53733176,1,53842808,,4,1065,"<p>When I'm serialising to JSON, I'm used to .NET dictionaries becoming objects with the keys as properties and the values as their values. (<a href=""https://www.newtonsoft.com/json/help/html/SerializeDictionary.htm"" rel=""nofollow noreferrer"">The Json.Net docs have a succinct example.</a>)</p>&#xA;&#xA;<p>I'm using GraphQL and struggling to achieve a similar result. My data for this root query is basically a <code>Dictionary&lt;MyEnum,Dictionary&lt;string,string&gt;&gt;</code>. The closest I've got so far is this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""outterDict"": [&#xA;      {&#xA;        ""key"": ""THING_1"",&#xA;        ""innerDict"": [&#xA;          {&#xA;            ""key"": ""key1"",&#xA;            ""val"": ""val1""&#xA;          },&#xA;          ...&#xA;        ]&#xA;      },&#xA;      {&#xA;        ""key"": ""THING_2"",&#xA;        ""innerDict"": [&#xA;          {&#xA;            ""key"": ""key2"",&#xA;            ""val"": ""val2""&#xA;          },&#xA;          ...&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I want it to be closer to this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""collection"": {&#xA;      ""THING_1"": {&#xA;        ""key1"": ""val1"",&#xA;        ...&#xA;      },&#xA;      ""THING_2"": {&#xA;        ""key2"": ""val2"",&#xA;        ...&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm struggling because <a href=""https://graphql-dotnet.github.io/docs/getting-started/schema-types"" rel=""nofollow noreferrer"">GraphQL .Net only seems to understand lists</a>, not dictionaries.</p>&#xA;&#xA;<p>It doesn't <em>feel</em> like what I'm trying to do is unreasonable. Letting keys be keys seems right and like the most useful way to share this data (e.g. as <a href=""https://softwareengineering.stackexchange.com/a/321542/28132"">suggested by this answer</a>).</p>&#xA;&#xA;<p>Is there a way to do this in GraphQL? Is there a way to do this in GraphQL <em>.Net</em>?</p>&#xA;",50151,,1663001,2019-01-07 02:03:05,2019-01-07 02:03:05,Can I represent my .NET dictionaries as JSON dictionaries in my GraphQL?,<c#><.net><dictionary><graphql><graphql-dotnet>,1,0,0,2018-12-11 22:17:11
53746487,1,,,3,2119,"<p>I have an user table, which consists of email, phone etc., and I would like to query a record based on its email or phone value (instead of #Id). Having not-adequate knowledge to do this - I wrote a schema like this:</p>&#xA;&#xA;<pre><code>type Query {&#xA;    ...&#xA;    getUser(id: ID!): User&#xA;    getUserByEmail(input: GetUserByEmailInput!): User&#xA;    ...&#xA;}&#xA;input GetUserByEmailInput {&#xA;    email: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In resolver against getUserByEmail(..), I tried to experiment but nothing worked so far, so its remain to default state:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/bAl00.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bAl00.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>So when I ran a query like this to the Queries console:</p>&#xA;&#xA;<pre><code>query GetUserByEmail {&#xA;    getUserByEmail(input: {email: ""email@email.com""}) {&#xA;      id&#xA;      name&#xA;      email&#xA;      image&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>this returns an error like this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getUserByEmail"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""getUserByEmail""&#xA;      ],&#xA;      ""data"": null,&#xA;      ""errorType"": ""DynamoDB:AmazonDynamoDBException"",&#xA;      ""errorInfo"": null,&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 41,&#xA;          ""column"": 5,&#xA;          ""sourceName"": null&#xA;        }&#xA;      ],&#xA;      ""message"": ""The provided key element does not match the schema (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException; Request ID: xxx)""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can I query a record by non-Id field value?</p>&#xA;",4227778,,,,2018-12-14 23:17:12,AWS AppSync GraphQL query a record by a field value,<amazon-dynamodb><graphql><aws-appsync>,1,0,0,2018-12-12 15:39:14
53751217,2,,52675213,5,,"<p>Are you talking about in the ""Queries"" console? Even if you are logged in to your AWS account and you go to the AWS AppSync Queries console, you will still need to log in separately as a cognito user. Click the ""Login with User Pools"" button.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/zMHBx.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/zMHBx.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>From there, just enter the info of a cognito user you already created, and that will simulate being logged in for testing purposes. You can find your clientId in your aws-exports.js file in your project on the line: ""aws_user_pools_web_client_id"".</p>&#xA;&#xA;<p>Hope that helps!</p>&#xA;",4697639,,4697639,2018-12-13 02:57:55,2018-12-13 02:57:55,"",,0,1,0,2018-12-12 20:56:34
53767176,1,53788034,,4,2807,"<p>I'm new to flutter and graphQL and currently I'm integrating mutations into my app. So, I have the server side using some custom types defined in the schema, but I don't know how to specify them on the flutter side. Let's see some code:</p>&#xA;&#xA;<pre><code>input DiaryGroupPermission {&#xA;  groupId: Int!&#xA;  permission: Int!&#xA;}&#xA;&#xA;input DiaryInsideCommunity {&#xA;  communityId: Int!&#xA;  permissions: [DiaryGroupPermission]!&#xA;}&#xA;&#xA;createDiary(community: DiaryInsideCommunity, description: String, title: String!): Diary&#xA;</code></pre>&#xA;&#xA;<p>But on the client I don't know how to specify the DiaryInsideCommunity inside the mutation.&#xA;I've tried something like this:</p>&#xA;&#xA;<pre><code>String createDiary = """"""&#xA;  mutation CreateDiary(\$title: String!, \$description: String!, \$community: DiaryInsideCommunity) {&#xA;    createDiary(&#xA;    title: \$title,&#xA;    description: \$description,&#xA;    community: \$community&#xA;  ) {&#xA;    id&#xA;  }&#xA;)}"""""".replaceAll('\n', ' ');&#xA;</code></pre>&#xA;&#xA;<p>And passing my runMutation as follows:</p>&#xA;&#xA;<pre><code>runMutation({&#xA;            ""title"": _generalPage.title(),&#xA;            ""description"": _generalPage.description(),&#xA;            ""community"": {&#xA;              ""communityId"": 1,&#xA;              ""permissions"": _permissionPage.selectedGroups().map((group) {&#xA;                return {&#xA;                  ""groupId"": group.id,&#xA;                  ""permission"": 1,&#xA;                };&#xA;              }).toList(),&#xA;            }&#xA;          });&#xA;</code></pre>&#xA;&#xA;<p>Any idea? Can't find anything on google.</p>&#xA;",3151724,,,,2020-06-17 14:43:09,Flutter / GraphQL - Mutation with custom type as parameter,<dart><flutter><graphql>,2,0,0,2018-12-13 17:26:44
53788034,2,,53767176,3,,"<p>Love to see the community that is created around the graphql_flutter library.</p>&#xA;&#xA;<pre><code>class DiaryGroupPermission {&#xA;  int groupId;&#xA;  int permission;&#xA;&#xA;  DiaryGroupPermission.fromJson(Map json)&#xA;      : groupId = json['groupId'],&#xA;        permission = json['permission'];&#xA;}&#xA;&#xA;class DiaryInsideCommunity {&#xA;  int communityId;&#xA;  List&lt;DiaryGroupPermission&gt; permissions;&#xA;&#xA;  DiaryInsideCommunity.fromJson(Map json)&#xA;      : communityId = json['communityId'],&#xA;        permissions = json['permissions']&#xA;            .map&lt;DiaryGroupPermission&gt;((Map permisionJson) =&gt;&#xA;                DiaryGroupPermission.fromJson(permisionJson))&#xA;            .toList();&#xA;}&#xA;&#xA;class Diary {&#xA;  String body;&#xA;&#xA;  Diary(dynamic value) : body = value.toString();&#xA;}&#xA;&#xA;typedef Diary createDiaryFunction(&#xA;    DiaryInsideCommunity community, String description, String title);&#xA;&#xA;DiaryInsideCommunity community = DiaryInsideCommunity.fromJson({&#xA;  'communityId': 1,&#xA;  'permissions': [&#xA;    {'groupId': 1, 'permission': 1}&#xA;  ]&#xA;});&#xA;&#xA;Diary mutation(DiaryInsideCommunity community,&#xA;        {String description, @required String title}) =&gt;&#xA;    Diary(community.permissions[0].groupId);&#xA;&#xA;Diary mutationResult = mutation(community, description: ""a"", title: ""b"");&#xA;</code></pre>&#xA;&#xA;<p>I implemented the types that you wanted to in dart and created a mockup mutation function to show you how to call it.</p>&#xA;&#xA;<p>There is no easier way to do types in dart.</p>&#xA;&#xA;<p>Cheers from the creator of this library,</p>&#xA;&#xA;<p>Eus</p>&#xA;",6938119,,,,2018-12-14 23:10:26,"",,0,1,0,2018-12-14 23:10:26
53788081,2,,53746487,1,,"<p>If you use the Create Resources flow in the console, it will create a listUsers query that looks like the following for example. Note that the DynamoDb operation will be a Scan that has a DynamoDb filter expression where you can use any field to query DynamoDb. See below for the mapping template.</p>&#xA;&#xA;<pre><code>{&#xA;  ""version"": ""2017-02-28"",&#xA;  ""operation"": ""Scan"",&#xA;  ""filter"": #if($context.args.filter) $util.transform.toDynamoDBFilterExpression($ctx.args.filter) #else null #end,&#xA;  ""limit"": $util.defaultIfNull($ctx.args.limit, 20),&#xA;  ""nextToken"": $util.toJson($util.defaultIfNullOrEmpty($ctx.args.nextToken, null)),&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can find more details about Scans and filter expressions in the AWS AppSync documentation: </p>&#xA;&#xA;<p><a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html</a></p>&#xA;",6241856,,,,2018-12-14 23:17:12,"",,0,2,0,2018-12-14 23:17:12
53792638,2,,50298095,0,,"<p>Just a shot in the dark.</p>&#xA;&#xA;<p>I see you have fixed user id <code>cjgylfv6y004h0958tx9d8j9v</code> in your code. If that user was inserted before deploying your changes to Prisma, it would have a null value for the attribute picture.</p>&#xA;&#xA;<p>Try with a query that lists all your users.</p>&#xA;",4017403,,,,2018-12-15 13:10:30,"",,0,0,0,2018-12-15 13:10:30
53851351,1,53861277,,0,311,"<p>I want to be able to check, validate and modify some existing graphql statements.  For example I generate the below using a template and getting data from Elasticsearch</p>&#xA;&#xA;<pre><code>mutation  {&#xA;  productUpdate(&#xA;    input: {&#xA;      id: ""gid://shopify/Product/1388950487084"",&#xA;      tags: [""one"",""two""]&#xA;    } &#xA;  )&#xA;  {&#xA;    product {&#xA;      id&#xA;      tags&#xA;    }&#xA;    userErrors {&#xA;      field,&#xA;      message&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>From that, what I want to do is say check on the value of id, for example access this value</p>&#xA;&#xA;<p>mutation.productUpdate.input.id</p>&#xA;&#xA;<p>I am only posting to a third party, I am not hosting the schema or anything like that.</p>&#xA;&#xA;<p>To be able to access and modify the payload, do I need to use a library?  And if so, what would be the most lightweight?</p>&#xA;&#xA;<p>Thanks</p>&#xA;",1153768,,,,2018-12-20 01:17:33,Reading\modifying a graphql,<python-2.7><graphql>,1,0,0,2018-12-19 12:32:43
53906218,1,,,2,146,"<p>In one of the tables being generated by my amplify schema, I want to create an index to be used by a lambda to query; not actually anything in GraphQL.  </p>&#xA;&#xA;<p>I've tried adding a <code>@connection</code> directive, but then get <code>Could not find an object type named String.</code></p>&#xA;&#xA;<p>I'd rather do it in a config file so I can commit to git.  What is the appropriate way to do this?</p>&#xA;",1196288,,,,2018-12-23 18:43:08,How do I create a secondary index in my Amplify schema?,<amazon-dynamodb><graphql><aws-amplify>,0,0,0,2018-12-23 18:43:08
53930559,2,,52341200,0,,"<pre><code>$util.toJson($util.dynamodb.fromS3ObjectJson($context.source.file))&#xA;</code></pre>&#xA;&#xA;<p>You can only use this if your DynamoDB save <code>file</code> field as format: <code>{""s3"":{""key"":""file.jpg"",""bucket"":""bucket_name/folder"",""region"":""us-east-1""}}</code></p>&#xA;",3390844,,,,2018-12-26 10:12:51,"",,0,0,0,2018-12-26 10:12:51
53973845,1,,,1,822,"<p>Here is my definition of an entity/model in GraphQL SDL that is used by AWS Amplify to create an App Sync API and its table in DynamoDB.</p>&#xA;&#xA;<p>I want to make the name and author as the business keys. Is there a way to achieve this?  I believe Prism has @Unique directive for the same. Or if it is not possible, can a constraint be added in the table in DynamoDB?</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>type Post &#xA;  @model &#xA;  @versioned &#xA;  @auth(rules: [{allow: owner}]) &#xA;{&#xA;  id: ID!&#xA;  name: String!&#xA;  author: String!&#xA;  description: String&#xA;}&#xA;</code></pre>&#xA;",530993,,846053,2018-12-30 14:51:26,2018-12-30 14:51:26,How to add business keys/unique constraint in GraphQL - AppSync AWS,<amazon-dynamodb><graphql><graphql-js><aws-appsync><aws-amplify>,0,3,0,2018-12-29 22:33:19
54027289,1,54027582,,0,1089,<p>I migrated a flutter native plugin for appsync to amplify.&#xA;Now I wonder how to generate code in the android part of my flutter project after updating the GraphQL in the appsync console.</p>&#xA;&#xA;<p>Initially i used:</p>&#xA;&#xA;<p><code>amplify init&#xA;amplify add api&#xA;amplify add codegen --apiId &lt;MY-API-ID&gt;</code></p>&#xA;&#xA;<p>this worked like a charm. &#xA;However when I want to generate updated code using&#xA;<code>&#xA;amplify api update</code><br>&#xA;I get the reply</p>&#xA;&#xA;<p><code>The selected resource is not managed using AWS Cloudformation. Please use the AWS AppSync Console to make updates to your API - de.sistar.fcsp_rad</code></p>&#xA;&#xA;<p>So I guess I did not understand the whole workflow. How do I update my android client project after updating the GraphQL in the AWS Appsync Console? </p>&#xA;,262850,,,,2019-01-03 18:08:41,How to synchronize GraphQL changes from Appsync to Android using amplify?,<android><graphql><aws-appsync><aws-amplify>,1,0,0,2019-01-03 17:47:21
54028252,1,,,5,3090,"<p>I used AWS Amplify to create an GraphQL API. In DynamoDB the fields createdAt, updatedAt and owner are created automatically. Out of the box I have no way of getting the values for this fields. Now when I add those fields to the annotated schema, I will be able to get the values but the everybody with write-permissions can just overwrite them which is annoying for the time fields and a security risk for the owner field.</p>&#xA;&#xA;<p>So how do I get those values?</p>&#xA;&#xA;<p><em>This is an AWS-Amplify specific question. It's not about how to do this with generic GraphQL. It's very specifically about how to do this with AWS-Amplify's API module and their (sadly very limited) directives (<a href=""https://aws-amplify.github.io/docs/js/api#using-graphql-transformers"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/js/api#using-graphql-transformers</a>).</em></p>&#xA;",2513277,,460281,2020-02-07 12:46:16,2020-02-07 12:46:16,"How to get createdAt, updatedAt and owner fields from AWS Amplify generated GraphQL documents?",<graphql><aws-appsync><aws-amplify>,3,2,0,2019-01-03 18:58:03
54030589,2,,54008245,0,,"<p>It sounds like you need multiple requests to one or more datasources to fulfill this graphQL query. In this case, you can use AppSync's <strong>pipeline resolver</strong> feature.</p>&#xA;&#xA;<p>With <strong>pipeline resolvers</strong>, you can create multiple <strong>functions</strong>, each of which can use the results of the previous function and query a database. These functions run in an order you specify.</p>&#xA;&#xA;<p>An example of something you could do with a pipeline resolver:</p>&#xA;&#xA;<ol>&#xA;<li>One function will query the chat group database</li>&#xA;<li>A second function will use the results of the chat group to fetch messages</li>&#xA;<li>Consolidate all the results into one graphQL response containing group information and messages</li>&#xA;</ol>&#xA;&#xA;<p>Here is the documentation for <strong>pipeline resolvers:</strong> <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html</a></p>&#xA;",5683782,,,,2019-01-03 22:19:37,"",,0,6,0,2019-01-03 22:19:37
54032322,1,54167058,,2,338,"<p>I am trying to query my database to compile a list of posts near a location, that a given user has/hasnot liked. </p>&#xA;&#xA;<pre><code>allPostsNearLocationUserHasLiked(&#xA;    userId: ID,&#xA;    location: LocationInput,&#xA;    radius: Int&#xA;): [Post]&#xA;allPostsNearLocationUserHasNotLiked(&#xA;    userId: ID,&#xA;    location: LocationInput,&#xA;    radius: Int&#xA;): [Post]&#xA;</code></pre>&#xA;&#xA;<p>To do this I am currently using AWSAppSync, with dynamoDB streaming data to Elastic Search. This allows me to easily do geospatial searches and obtain all the posts near a given location. </p>&#xA;&#xA;<p>I am wondering what is the most efficient way is to compute this using dynamoDB? Or would it be better suited for me to switch over to a SQL database for my likes/users?</p>&#xA;&#xA;<p>I have a Users, posts, and Likes DynamoDB table. I was thinking of using a pipeline resolver to:</p>&#xA;&#xA;<p>1) Get the list of all the posts near a users location (Elastic Search)</p>&#xA;&#xA;<p>2) Query the likes table, to get all the likes I have made (DynamoDB)</p>&#xA;&#xA;<p>3) Combine the results item by item.</p>&#xA;&#xA;<p>I have serious doubts about the performance of this especially step 3 which is an O(M*N) operation. </p>&#xA;&#xA;<p>Is there any way to do this whole query natively in Elastic Search?</p>&#xA;&#xA;<pre><code>## DynamoDB Table?? Or maybe SQL?&#xA;type Like {&#xA;    likeId: ID!&#xA;    userId: ID!&#xA;    likedPostId: ID!&#xA;}&#xA;&#xA;type Query {&#xA;    #Implement with Elastic Search&#xA;    allPostsNearLocation(location: LocationInput, radius: Int): [Post]&#xA;&#xA;    ## Elastic search??? &#xA;    allPostsNearLocationUserHasLiked(&#xA;        userId: ID,&#xA;        location: LocationInput,&#xA;        radius: Int&#xA;    ): [Post]&#xA;    allPostsNearLocationUserHasNotLiked(&#xA;        userId: ID,&#xA;        location: LocationInput,&#xA;        radius: Int&#xA;    ): [Post]&#xA;}&#xA;&#xA;type Location {&#xA;    lat: Float!&#xA;    lon: Float!&#xA;}&#xA;&#xA;input LocationInput {&#xA;    way: Float!&#xA;    lon: Float!&#xA;}&#xA;&#xA;type Mutation {&#xA;    putPost(&#xA;        author: String!,&#xA;        title: String!,&#xA;        content: String!,&#xA;        location: LocationInput!,&#xA;        url: String!&#xA;    ): Post&#xA;    putUser(name:String): User&#xA;&#xA;    likePost(userId: ID!, postId: ID!): Like&#xA;}&#xA;&#xA;#DynamoDB Table&#xA;type User{&#xA;    userId: ID!&#xA;    name: String&#xA;    likes: [Like]&#xA;}&#xA;&#xA;#DynamoDB table&#xA;type Post {&#xA;    id: ID!&#xA;    author: String!&#xA;    title: String!&#xA;    content: String!&#xA;    url: String!&#xA;    location: Location!&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;    mutation: Mutation&#xA;}&#xA;</code></pre>&#xA;",6928827,,,,2019-01-13 07:55:18,"How to make a geo distance query only return results that I have not yet ""Liked"", Elastic Search, Dynamo DB",<amazon-web-services><elasticsearch><amazon-dynamodb><graphql><aws-appsync>,2,0,0,2019-01-04 02:11:57
54036334,1,54068677,,1,656,"<p><a href=""https://i.stack.imgur.com/Q1evW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Q1evW.png"" alt=""enter image description here""></a>I am using AWS <code>AppSync</code> in my Android application and following <a href=""https://aws.amazon.com/blogs/mobile/building-an-android-app-with-aws-amplify-part-1/"" rel=""nofollow noreferrer"">this</a> link but I have already created API in my AppSync which I wish to import in my Android app. I am linking the app using <code>Amplify</code>.</p>&#xA;",0,user4035628,,2019-01-05 05:17:04,2019-04-18 06:02:32,AWSAppSyncClient does not detect graphql queries,<android><graphql><aws-appsync><aws-amplify>,2,4,0,2019-01-04 09:39:22
54045370,2,,54037525,7,,"<p>Hey thanks for the question. This is not yet possible by default using the amplify-cli but you could do this yourself using pipeline resolvers and an extra index on your DynamoDB table. The steps to do this are as follows:</p>&#xA;&#xA;<ol>&#xA;<li>Create a GSI on the table where the label is the HASH KEY.</li>&#xA;<li>Create a pipeline resolver on the <code>Mutation.createTag</code> field in your schema. You can turn off the auto-generated <code>Mutation.createTag</code> mutation by changing your @model definition to <code>@model(mutations: { update: ""updateTag"", delete: ""deleteTag"" })</code>.</li>&#xA;<li>Create a function named <code>LookupLabel</code> that issues a <code>Query</code> against the new GSI where the <code>label = $ctx.args.input.label</code>. If this returns a value, throw an error with <code>$util.error(""Label is not unique"")</code>. If it returns no values then continue.</li>&#xA;<li>Create a function named <code>CreateTag</code> that issues a <code>PutItem</code> against the Tag table.</li>&#xA;<li>Add those two functions in order to your pipeline resolver.</li>&#xA;</ol>&#xA;&#xA;<p>You can read more about pipeline resolvers here <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html"" rel=""noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html</a>.</p>&#xA;&#xA;<p>As of writing amplify does not yet support custom &amp; pipeline resolvers but you can read more about the feature here <a href=""https://github.com/aws-amplify/amplify-cli/issues/574"" rel=""noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/574</a> as it will be supported in the future. For now you can add the resolver manually in the AWS AppSync console or via your own CloudFormation template that targets the id of the API created by Amplify. It would also be helpful if you create an issue here (<a href=""https://github.com/aws-amplify/amplify-cli/issues"" rel=""noreferrer"">https://github.com/aws-amplify/amplify-cli/issues</a>) and tag this as a feature request because it would be possible to automate this with an @unique directive but this would need to be planned.</p>&#xA;&#xA;<p>Thanks</p>&#xA;",2088684,,,,2019-01-04 20:07:33,"",,0,7,0,2019-01-04 20:07:33
54069356,1,,,2,1550,"<p>I am trying to seed my Prisma DB using a custom file I created which I then reference in <code>prisma.yml</code>. In this file, I have a few mutations - nothing too crazy. Everything seems to be working fine when I have ONE mutation. However, if I add more than one I end up getting this error: <code>Must provide operation name if query contains multiple operations: {""response"":{""data"":null,""errors"":[{""message"":""Must provide operation name if query contains multiple operations""}],""status"":200}</code>. I assumed this <code>operation name</code> is the <code>createSomething</code> in <code>mutation createSomething {...}</code>, but I guess that is not the case. Is there anything I am missing here?</p>&#xA;&#xA;<p>Having multiple mutations in the playground also seems to be working fine. Looks like the problem is when the seeder tries to run them all one after the other.</p>&#xA;&#xA;<p>prisma.yml</p>&#xA;&#xA;<pre><code>seed:&#xA;  import: seeds/something.graphql&#xA;</code></pre>&#xA;&#xA;<p>something.graphql</p>&#xA;&#xA;<pre><code>mutation createSomething {&#xA;  createSomething(data: { key1: ""val1"", key2: ""val2"" }) {&#xA;    key1&#xA;    val1&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",10877512,,1779113,2019-01-07 07:54:55,2019-01-07 07:57:15,How do you correctly seed a prisma DB with a custom file that has multiple mutations?,<graphql><graphql-js><mutation><prisma><prisma-graphql>,1,0,0,2019-01-07 06:18:26
54069836,1,,,4,437,<p>I am using GraphQL for Java and need to use Set / HashSet datatype for one of the member of my existing POJO to build by GraphQL schema. Any advice and insight is appreciated.</p>&#xA;,1635450,,1635450,2019-01-07 07:54:00,2019-01-07 08:37:55,What's the equivalent schema datatype for java.util.Set?,<java><set><graphql>,1,1,0,2019-01-07 07:04:04
54087453,1,54101799,,0,1837,"<p>Given the following AWS Amplify GraphQL Schema (<code>schema.graphql</code>):</p>&#xA;&#xA;<pre><code>type Organization&#xA;  @model&#xA;  @auth(rules: [&#xA;    { allow: groups, groups: [""Full-Access-Admin""], mutations: [create, update, delete], queries: [list, get] },&#xA;    { allow: owner },&#xA;    { allow: groups, groupsField: ""orgAdminsCognitoGroup"", mutations: null, queries: [list, get] }&#xA;  ]) {&#xA;    id: ID!&#xA;    name: String!&#xA;    address: String!&#xA;    industry: [String]!&#xA;    owner: String&#xA;    orgAdminsCognitoGroup: String&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>I can filter out all organizations except the ones that belong to the current authenticated user via the following:</p>&#xA;&#xA;<pre><code>        res = await API.graphql(graphqlOperation(listOrganizations, {&#xA;            // todo: filter by owner OR by is org admin&#xA;            filter: {&#xA;                owner: {&#xA;                    eq: this.props.currentUser.username&#xA;                }&#xA;            }&#xA;        }));&#xA;</code></pre>&#xA;&#xA;<p>but is there anyway to also filter by the <code>orgAdminsCognitGroup</code> which is a dynamic group in Cognito belonging to the organization? I have not found any success trying to use an additional <code>@model</code> to help with the <code>@auth</code> rules to protect each entity.</p>&#xA;",3989221,,,,2019-01-09 00:46:52,AWS Amplify GraphQL filter by dynamic Cognito User Group,<graphql><aws-appsync><aws-amplify>,1,2,0,2019-01-08 08:00:11
54094578,2,,54093969,1,,"<p>your mutation:</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;    """"""&#xA;    Add multiple items to basket&#xA;    """"""&#xA;    addLicenses(licenses: [License!]!): LicenseMutationBatchResult&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>your interface input:</p>&#xA;&#xA;<pre><code>input License {&#xA;    licenseType: String!&#xA;    licenseAmount: String!&#xA;    isActive: Boolean&#xA;    expirationDate: Date!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>whatever you give back:</p>&#xA;&#xA;<pre><code>type LicenseMutationBatchResult {&#xA;    ...whatever you give back here...&#xA;}&#xA;</code></pre>&#xA;",9424655,,,,2019-01-08 15:06:02,"",,0,0,0,2019-01-08 15:06:02
54101799,2,,54087453,1,,"<p>So, the question is wanting to filter groups that the user is either the owner of, or in the 'orgAdminsCognitoGroup'?</p>&#xA;&#xA;<p>I think it's possible, though I don't think the best way is what you had in mind. Instead, I might recommend you set up a response mapping template that does some server side filtering for you. </p>&#xA;&#xA;<p>Specifically, you would first get the groups from the current user's auth token:</p>&#xA;&#xA;<pre><code>#set($claimPermissions = $ctx.identity.claims.get(""cognito:groups""))&#xA;</code></pre>&#xA;&#xA;<p>Then you could iterate over every organization in the results. If any have an owner that is the current user, add them to a response list. If they aren't, continue to check the orgAdminsCognitoGroup. You'd do that by checking whether or not $claimPermissions contains the group that the orgAdmin is set to for that organization. If it is contained, add it to the response list. If not, ignore it and continue iterating.</p>&#xA;&#xA;<p>It would be possible, theoretically, to do this client side with the token the user has signed in with. Much in the same way the response mapping template did it, the groups the user is in are inside the token. If you crack it open and pull out the groups, you could apply the filtering there. I would recommend not doing this for security reasons, though it is possible.</p>&#xA;",1229845,,,,2019-01-09 00:46:52,"",,0,3,0,2019-01-09 00:46:52
54103177,1,,,1,339,"<p>I'm building a project management app with AWS-Amplify. I have a top level type known as a Company:</p>&#xA;&#xA;<p><code>type Company &#xA;  @model&#xA;  @auth(rules: [&#xA;      {&#xA;        allow: groups,&#xA;        groups: [""SUPERUSER"", ""ADMIN""],&#xA;        queries: [get, list],&#xA;        mutations: [create, update, delete]&#xA;      },&#xA;      {&#xA;        allow: groups,&#xA;        groups: [""MANAGER, CONTRACTOR, CONSULTANT""],&#xA;        queries: [get],&#xA;        mutations: null&#xA;      }&#xA;    ]&#xA;  )&#xA;{&#xA;  id: ID!&#xA;  title: String!&#xA;  projects: [Project] @connection(name: ""CompanyProjects"")&#xA;}</code></p>&#xA;&#xA;<p>It contains a list of projects, another type:</p>&#xA;&#xA;<p><code>type Project&#xA;  @model&#xA;  @auth(rules: [&#xA;      {&#xA;        allow: owner&#xA;      },&#xA;      {&#xA;        allow: groups,&#xA;        groups: [""SUPERUSER"", ""ADMIN"", ""MANAGER""],&#xA;        queries: [get, list],&#xA;        mutations: [create, update]&#xA;      },&#xA;      {&#xA;        allow: groups,&#xA;        groups: [""CONTRACTOR"", ""CONSULTANT""],&#xA;        queries: [get, list],&#xA;        mutations: [update]&#xA;      },&#xA;    ]&#xA;  )&#xA;{&#xA;  id: ID!&#xA;  company: Company! @connection(name: ""CompanyProjects"")&#xA;  createdOn: String!&#xA;  title: String!&#xA;  status: CompletionStatus!&#xA;  description: String&#xA;  documents: [Document] @connection(name: ""ProjectDocuments"")&#xA;}</code></p>&#xA;&#xA;<p>How do I properly use filtering during a query such as <code>listProjects</code> in order to make sure the current user only gets projects related to the company they are a part of?</p>&#xA;",3552872,,,,2019-01-09 04:19:41,"AWS AppSync, filtering lists by @connection",<graphql><aws-appsync>,0,3,0,2019-01-09 04:19:41
54114350,1,,,0,713,"<p>Currently AWS AppSync provides an option to add test context to test your resolver to make sure everything is correct. However, because I am using API Key for authentication, I'm not sure of a way to set this in the request mapping template so that the test context can run and I can test the validity of my API (especially since this is the only auth that doesn't have an identity section in the test context)? Can anyone help?</p>&#xA;",6674013,,,,2019-01-09 23:05:19,Test Resolver in AWS AppSync w/ API Key?,<graphql><aws-appsync><vtl>,1,0,0,2019-01-09 16:21:27
54119536,2,,54114350,0,,"<p>You are correct in the fact that API Key Authorization mode does not populate the identity, even when you are calling your API from a client.</p>&#xA;&#xA;<p>However, you can still add an identity object in your test context. To do this, you need to:</p>&#xA;&#xA;<ol>&#xA;<li>Get the authorization mode you will be using in the future (IAM, Cognito, OIDC).</li>&#xA;<li>Find the fields that authorization mode provides in the ctx.identity. You can find that here: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html#aws-appsync-resolver-context-reference-identity"" rel=""nofollow noreferrer"">Resolver Context Reference</a></li>&#xA;<li><p>Add those fields to your test context. For example, IAM test context might look like this:</p>&#xA;&#xA;<p>{&#xA;    ""identity"": {&#xA;        ""accountId"": ""my aws account"",&#xA;        ""cognitoIdentityPoolId"": ""string"",&#xA;        ""cognitoIdentityId"": ""string"",&#xA;        ""sourceIp"": [""string""],&#xA;        ""username"": ""string"",&#xA;        ""userArn"": ""string""&#xA;    },&#xA;    ""arguments"": {},&#xA;    ""source"": {&#xA;        ""lambda"": ""Hello, world!"",&#xA;        ""testCtx"": ""Hello, world!""&#xA;    },&#xA;    ""result"": ""Hello, world!""&#xA;}</p></li>&#xA;</ol>&#xA;&#xA;<p>The request mapping template could look like this:</p>&#xA;&#xA;<pre><code>{&#xA;    ""account: ""$ctx.identity.accountId""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and the evaluated request mapping template would look like this when your test context is run:</p>&#xA;&#xA;<pre><code>{&#xA;    ""account: ""my aws account""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Note: You may also just want to switch your API to the authorization mode you plan on using, and then try queries as a logged-in user.</p>&#xA;",5683782,,5683782,2019-01-09 23:05:19,2019-01-09 23:05:19,"",,0,2,0,2019-01-09 22:49:48
54124459,2,,54124303,1,,"<p>You don't need to (and should not) perform a <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Scan.html"" rel=""nofollow noreferrer"">Scan</a> for this.</p>&#xA;&#xA;<p>To get all of the projects an employee is working on, you just need to perform a <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Query.html"" rel=""nofollow noreferrer"">Query</a> on the base table, specifying employee ID as the partition key.</p>&#xA;&#xA;<p>To get all of the employees on a project, you should create a GSI on the table. The partition key should be project ID and sort key should be employee ID. Then perform a Query on the GSI, using partition key of project ID.</p>&#xA;&#xA;<p>In order to model this correctly you will probably want three tables</p>&#xA;&#xA;<ol>&#xA;<li>Employee Table</li>&#xA;<li>Project Table</li>&#xA;<li>Employee-Project reference table (i.e. just two attributes of employee ID and project ID)</li>&#xA;</ol>&#xA;",4985580,,,,2019-01-10 08:20:59,"",,0,0,0,2019-01-10 08:20:59
54146262,2,,52959405,2,,"<p>UPDATE:</p>&#xA;&#xA;<p>It seems like this is now possible with AppSync. You can read more about it <a href=""https://aws.amazon.com/blogs/mobile/amplify-adds-support-for-multiple-environments-custom-resolvers-larger-data-models-and-iam-roles-including-mfa/"" rel=""nofollow noreferrer"">here</a> and <a href=""https://aws-amplify.github.io/docs/cli/graphql#add-a-custom-resolver-that-targets-an-aws-lambda-function"" rel=""nofollow noreferrer"">here</a></p>&#xA;&#xA;<p>ORIGINAL ANSWER:</p>&#xA;&#xA;<p>In response to the part of the question about calling the Lambda via GraphQL:</p>&#xA;&#xA;<p>I think that this is possible right now with AppSync but not with Amplify. </p>&#xA;&#xA;<p>Using the AppSync console will allow you to create a Lambda resolver - Amplify currently does not support this. When you publish from Amplify your resolver will be overwritten.</p>&#xA;&#xA;<p>It appears that this issue is being worked on:</p>&#xA;&#xA;<p><a href=""https://github.com/aws-amplify/amplify-cli/issues/74"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/74</a></p>&#xA;&#xA;<p><a href=""https://github.com/aws-amplify/amplify-cli/issues/83"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/83</a></p>&#xA;",2804256,,2804256,2019-02-14 08:20:38,2019-02-14 08:20:38,"",,0,0,0,2019-01-11 12:07:41
54173962,2,,54165366,1,,"<p>Assuming you're using row-level security (RLS) it sounds like the row to be updated does not pass the required security policies for the currently authenticated user.</p>&#xA;&#xA;<p>Here's a small example; you'll want to adjust it to fit your own permissions system</p>&#xA;&#xA;<pre class=""lang-sql prettyprint-override""><code>create table person (id serial primary key, name text);&#xA;alter table person enable row level security;&#xA;grant select, insert(name), update(name), delete on person to graphql;&#xA;create policy select_all on person for select using (true);&#xA;create policy insert_all on person for insert with check(true);&#xA;create policy update_self on person for update using (id = current_person_id());&#xA;create policy delete_self on person for delete using (id = current_person_id());&#xA;</code></pre>&#xA;&#xA;<p>where</p>&#xA;&#xA;<pre class=""lang-sql prettyprint-override""><code>create function current_person_id() returns int as $$&#xA;  select nullif(current_setting('jwt.claims.person_id', true), '')::int;&#xA;$$ language sql stable;&#xA;</code></pre>&#xA;&#xA;<p>If you need more guidance, feel free to drop into <a href=""http://discord.gg/graphile"" rel=""nofollow noreferrer"">the Graphile chat</a>.</p>&#xA;",141284,,,,2019-01-13 22:53:10,"",,0,0,0,2019-01-13 22:53:10
54245637,2,,54220628,0,,"<p>You didn't post the code for your mutation or the resolver, so I'm just guessing here that the problem is in DynamoDB read consistency.</p>&#xA;&#xA;<ol>&#xA;<li><p>Try adding <code>""consistentRead"" : true</code> to your mutation response template in AppSync.</p></li>&#xA;<li><p>Build an optimistic response inside the response template like like this</p></li>&#xA;</ol>&#xA;&#xA;<pre><code>    ## Raise a GraphQL field error in case of a datasource invocation error&#xA;    #if($ctx.error)&#xA;        $util.error($ctx.error.message, $ctx.error.type)&#xA;    #end&#xA;&#xA;    ## Pass back an optimistic result from DynamoDB. **&#xA;    #set ($items = {[{""key"":""setting_a"", ""value"": $ctx.args.setting_a}, {...}]})&#xA;    $util.toJson($items)&#xA;</code></pre>&#xA;",6923661,,,,2019-01-17 23:13:57,"",,0,0,0,2019-01-17 23:13:57
54261482,1,,,5,727,"<p>DynamoDB operates best with a single table per application (<a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-general-nosql-design.html"" rel=""noreferrer"">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-general-nosql-design.html</a>), yet AppSync by default breaks that rule by the way it auto-generates code from the GraphQL schema (that AWS recommends users allow the API to do). Therefore, to use AppSync with GraphQL while upholding DynamoDB's best practices (assuming DynamoDB is the sole data source for the GraphQL API), would this approach work?</p>&#xA;&#xA;<p>First, create a blank DynamoDB table (<code>TheTable</code> in this example) and give it a partition key (<code>partitionKey</code>) and a sort key (<code>sortKey</code>).</p>&#xA;&#xA;<p>Second, manually enforce every GraphQL type to be backed by that table (<code>TheTable</code>). This is where AppSync automatic code generation will go the other direction.</p>&#xA;&#xA;<p><strong>GraphQL schema:</strong></p>&#xA;&#xA;<pre><code>type Pineapple {&#xA;    partitionKey: String!&#xA;    sortKey: String!&#xA;    name: String!&#xA;}&#xA;&#xA;# create varying types as long as they all map to the same table&#xA;type MachineGun {&#xA;    partitionKey: String!&#xA;    sortKey: String!&#xA;    name: String!&#xA;}&#xA;&#xA;input CreatePineappleInput {&#xA;    partitionKey: String!&#xA;    sortKey: String!&#xA;    name: String!&#xA;}&#xA;&#xA;type Mutation {&#xA;    createPineapple(input: CreatePineappleInput!): Pineapple&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Third, configure your own resolvers to handle the schema (again avoid auto-generated code):</p>&#xA;&#xA;<p><strong>Resolver:</strong></p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""PutItem"",&#xA;    ""key"" : {&#xA;        ""partitionKey"": $util.dynamodb.toDynamoDBJson($ctx.args.input.partitionKey),&#xA;        ""sortKey"": $util.dynamodb.toDynamoDBJson($ctx.args.input.sortKey),&#xA;    },&#xA;    ""attributeValues"" : $util.dynamodb.toMapValuesJson($ctx.args.input),&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And when we run the mutation in the AppSync console:</p>&#xA;&#xA;<p><strong>GraphQL operation:</strong></p>&#xA;&#xA;<pre><code>mutation createPineapple($createPineappleInput: CreatePineappleInput!) {&#xA;  createPineapple(input: $createPineappleInput) {&#xA;    name&#xA;  }&#xA;}&#xA;&#xA;{&#xA;  ""createPineappleInput"": {&#xA;    ""partitionKey"": ""attraction123"",&#xA;    ""sortKey"": ""meta"",&#xA;    ""name"": ""Looking OK""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>We get the result we hoped for:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""createPineapple"": {&#xA;      ""name"": ""Looking OK""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there a reason why this wouldn't achieve single-table efficiency using AppSync?</p>&#xA;",4967050,,4967050,2019-01-19 00:57:04,2019-01-19 00:57:04,How to manipulate AWS AppSync and GraphQL to comply with DynamoDB best practices?,<amazon-web-services><amazon-dynamodb><graphql><aws-appsync><aws-amplify>,1,1,0,2019-01-18 21:10:38
54262275,2,,54261482,0,,<p>I'm not sure this statement is true</p>&#xA;&#xA;<blockquote>&#xA;  <p>DynamoDB operates best with a single table per application</p>&#xA;</blockquote>&#xA;&#xA;<p>Do you mind sharing where you saw this? &#xA;DynamoDB does indeed work best if the table schema is built based on the application access patterns. That does not necessarily mean you must fit everything in one table.</p>&#xA;,1060799,,,,2019-01-18 22:32:20,"",,0,1,0,2019-01-18 22:32:20
54273144,1,62071174,,4,2722,"<p>I need to support authenticated and unauthenticated AppSync requests in a React Native app. Since AppSync only allows one authorization type per API, I am setting up two APIs: one for authenticated users (Cognito User Pools), and one for guests (API Key).</p>&#xA;&#xA;<p>I think to make this work I need to have two distinct <code>AWSAppSyncClient</code> configs in the same app. </p>&#xA;&#xA;<pre><code>  // authenticated user    &#xA;  const appSyncAuthenticatedClient = new AWSAppSyncClient({&#xA;    url: Config.APPSYNC_AUTHENTICATED_ENDPOINT,&#xA;    region: Config.APPSYNC_REGION,&#xA;    auth: {&#xA;      type: 'AMAZON_COGNITO_USER_POOLS',&#xA;      jwtToken: async () =&gt;&#xA;        (await Auth.currentSession()).getAccessToken().getJwtToken()&#xA;    }&#xA;  });&#xA;&#xA;  // guest    &#xA;  const appSyncUnauthenticatedClient = new AWSAppSyncClient({&#xA;    url: Config.APPSYNC_UNAUTHENTICATED_ENDPOINT,&#xA;    region: Config.APPSYNC_REGION,&#xA;    auth: {&#xA;      type: 'API_KEY',&#xA;      apiKey: Config.APPSYNC_API_ID&#xA;    }&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>and then determine which to use based on whether or not they are logged in</p>&#xA;&#xA;<pre><code>    Auth.currentAuthenticatedUser()&#xA;      .then(user =&gt; this.appSyncRunningClient = appSyncAuthenticatedClient)&#xA;      .catch(err =&gt; this.appSyncRunningClient = appSyncUnauthenticatedClient);&#xA;&#xA;    const App = props =&gt; {&#xA;      return (&#xA;        &lt;ApolloProvider client={this.appSyncRunningClient}&gt;&#xA;          &lt;Rehydrated&gt;&#xA;              &lt;RootStack/&gt;&#xA;            &lt;/Root&gt;&#xA;          &lt;/Rehydrated&gt;&#xA;        &lt;/ApolloProvider&gt;&#xA;      );&#xA;    };&#xA;&#xA;    export default App;&#xA;</code></pre>&#xA;&#xA;<p>This fails because <code>currentAuthenticatedUser</code> returns a promise, and I'm stuck at how to resolve a promise at this top level instantiation of the app. I'll also need to swap out this config during auth events.</p>&#xA;&#xA;<p>In what way can I dynamically select and change the <code>ApolloProvider</code> config at startup and authentication events?</p>&#xA;",428928,,,,2020-09-29 16:56:54,How do I configure Amplify to to use multiple AppSync endpoints?,<react-native><apollo-client><aws-appsync><aws-amplify>,2,6,0,2019-01-20 02:41:59
54277566,1,54289840,,0,49,"<p>I have an operation and I want to get a list containing its variables and types.</p>&#xA;&#xA;<p>Eg. given the operation</p>&#xA;&#xA;<pre><code>query getResource($id: ID!, $title: String) {&#xA;  resource(id: $id, title: $title) {&#xA;     id&#xA;     title&#xA;     content&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to get something like this</p>&#xA;&#xA;<pre><code>[{type: ""ID"", required: true, name: ""id""}, {type: ""String"", required: false, name: ""title""}]&#xA;</code></pre>&#xA;&#xA;<p>Is this easily attainable?</p>&#xA;&#xA;<p>Edit: I guess what I want to do is to go from a <code>VariableDefinitionNode</code> to an object containing all the information I want, such as <code>type</code>, <code>defaultValue</code>, <code>required</code>, <code>name</code>.</p>&#xA;",4999613,,4999613,2019-01-20 14:51:21,2019-01-21 12:19:23,Get list of types from operation variables,<graphql><graphql-js>,1,0,0,2019-01-20 14:42:43
54289533,2,,54279029,0,,"<p>The problem here will be to do with what data is coming into your query. The execution itself is successful, but you are not getting the company data for some reason.</p>&#xA;&#xA;<p>To debug this, I would look at what data is actually returned in your resolver for the user query by the request. It could be the reference ID parameter is not linking to any results in where you store company details.</p>&#xA;&#xA;<p>I guess one other possibility is that you may have may not pass back the company data into a parameter named 'company', again, looking at the object that is returned to the resolver for 'user' before it is returned by the function should give you an idea of what's not matching up.</p>&#xA;",8731547,,,,2019-01-21 11:59:56,"",,0,0,0,2019-01-21 11:59:56
54289840,2,,54277566,0,,"<p>You should be able to implement this if you change your schema (assuming you can generate this data on the server into this shape)</p>&#xA;&#xA;<pre><code>type Query {&#xA;  resource ($id: ID!, $title: String): [Variable]&#xA;}&#xA;&#xA;type Variable {&#xA;  type: String!&#xA;  required: Boolean!&#xA;  name: String!&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is a very generalised syntax however, returning an array of values like that. If the structure of your resources is known, you would be better off defining that and removing the name parameter as it becomes redundant. (I'm thinking about lookups inside your client-side application)</p>&#xA;&#xA;<pre><code>type Query {&#xA;  resource ($id: ID!, $title: String): Resource&#xA;}&#xA;&#xA;type Resource {&#xA;  id: Variable!&#xA;  title: Variable&#xA;  content: Variable&#xA;}&#xA;&#xA;type Variable {&#xA;  type: String!&#xA;  required: Boolean!&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;",8731547,,,,2019-01-21 12:19:23,"",,0,0,0,2019-01-21 12:19:23
54313298,2,,54299417,2,,"<p>A colleague suggested this, using 3 quotes. It works at the start of a type def:</p>&#xA;&#xA;<pre><code>""""""&#xA;musicians describes the composer(s) of the song&#xA;""""""&#xA;</code></pre>&#xA;",5988562,,,,2019-01-22 17:13:04,"",,0,1,0,2019-01-22 17:13:04
54364934,2,,51927554,0,,"<p>use this query on graphql</p>&#xA;&#xA;<pre><code>{&#xA;user_record(&#xA;    id:""b8faaf26-c8a6-3560-8357-f789f3325b0c"",&#xA;    tenantReference:""lightcoral70""&#xA;) &#xA;{&#xA;   id,&#xA;   tenant_reference,&#xA;   roles,&#xA;   custom_attributes{&#xA;      fred&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>}</p>&#xA;",9221206,,,,2019-01-25 11:59:10,"",,0,0,0,2019-01-25 11:59:10
54372386,2,,54369472,1,,"<p>Generally speaking, I've found the best way to keep my code organized is to put all of the business logic elsewhere, initialized into the <code>context</code> object. If you're using <code>graphql-js</code> directly (it'll be set up differently if you're using something like <code>apollo-server</code>, but the <code>context</code> is still the right place for this):</p>&#xA;&#xA;<p>graphql.js excerpt&#xA;(dataloaders is the SRP logic here)</p>&#xA;&#xA;<pre><code>const { graphql } = require('graphql');&#xA;const dataloaders = require('./dataloaders');&#xA;const typeDefs = require('./type-definitions')&#xA;const schema = require('./schema')&#xA;&#xA;exports.query = (whatever, args) =&gt; {&#xA;  const context = {};&#xA;  context.requestId = 'uuid-something';&#xA;  context.loaders = dataloaders.initialize({ context });&#xA;&#xA;  return graphql(schema, query, null, context)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>schema.js excerpt</p>&#xA;&#xA;<pre><code>const RootQueryType = new GraphQLObjectType({&#xA;  name: 'RootQueryType',&#xA;  fields: {&#xA;    ownerData: {&#xA;      type: OwnerType,&#xA;      description: 'Get all owners',&#xA;      args:{key: {type: GraphQLString} },&#xA;      resolve: (obj, args, context) =&gt; {&#xA;        const key = args.key;&#xA;        return context.loaders.owner({ key });&#xA;      }&#xA;    }&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>dataloaders.js excerpt</p>&#xA;&#xA;<pre><code>exports.initialize = ({ context }) =&gt; {&#xA;  return {&#xA;    owner({ key }) {&#xA;      const url = 'http://localhost:6001/api/.../' + key&#xA;      return fetch(url, { headers: { requestId: context.requestId }})&#xA;        .then(response =&gt; {&#xA;          return response.json()&#xA;        })&#xA;        .then(json =&gt; {&#xA;          return transform(json)&#xA;        })&#xA;        .catch(err =&gt; {&#xA;          console.trace(err)&#xA;        });&#xA;    }&#xA;  }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>In addition to better code organization, doing it this way allows for easier testing, since your resolvers don't need any external dependencies. You can inject your dependencies this way by preloading the context with whatever you want for testing, and you can handle business logic where business logic belongs.</p>&#xA;&#xA;<p>Initializing your business logic with the context of the request also allows you to adjust functionality based off the request: requestId (as I've shown), access control, etc.</p>&#xA;",652728,,652728,2019-01-25 20:40:13,2019-01-25 20:40:13,"",,0,1,0,2019-01-25 20:33:52
54412215,1,54413437,,6,964,"<p>I am using <a href=""https://github.com/apollographql/graphql-tools"" rel=""nofollow noreferrer"">graphql-tool</a> to mock up data for testing.</p>&#xA;&#xA;<p>I hope to simulate when I select a user, it opens a detail page and shows the user company info.</p>&#xA;&#xA;<p><strong>Query</strong></p>&#xA;&#xA;<pre><code>const query = `&#xA;  query User($id: ID!) {&#xA;    user(id: $id) {&#xA;      id&#xA;      company&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p><strong>Mock server</strong></p>&#xA;&#xA;<pre><code>import { addMockFunctionsToSchema } from 'graphql-tools';&#xA;import casual from 'casual';&#xA;&#xA;const allUserIds = ['u1', 'u2', 'u3'];&#xA;&#xA;const mocks = {&#xA;  User: () =&gt; ({&#xA;    id: casual.random_element(allUserIds),&#xA;    name: casual.name,&#xA;    company: casual.company_name&#xA;  })&#xA;};&#xA;&#xA;addMockFunctionsToSchema({ schema, mocks });&#xA;</code></pre>&#xA;&#xA;<p>However, right now, when I query with argument id <code>'u1'</code>, it will return a random user id for example <code>'u2'</code>, which gives me a little trouble to show it in front end.</p>&#xA;&#xA;<p>I thought I can do something like this below, but turns out I am wrong. <code>user</code> is <code>undefined</code> in the code below.</p>&#xA;&#xA;<pre><code>const mocks = {&#xA;  User: (user) =&gt; ({&#xA;    id: user.id || casual.random_element(allUserIds),&#xA;    name: casual.name,&#xA;    company: casual.company_name&#xA;  })&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Is there a way to pass the query arguments in graphql-tools? Thanks</p>&#xA;",2000548,,2000548,2019-01-29 01:30:55,2019-01-29 05:26:48,How to pass query arguments in graphql-tool?,<javascript><graphql><graphql-tools>,1,2,0,2019-01-29 00:26:39
54431503,2,,43747060,0,,"<p>This was important to me because some of the columns in my table contain a lot of data that rarely needs to be read. Also, disclaimer - this may be Apollo specific because that's what I'm using. Not sure if what I'm doing is in the GraphQL spec. </p>&#xA;&#xA;<p>Here's the approach I took:</p>&#xA;&#xA;<ol>&#xA;<li>Pull out <code>selections</code> from <code>info</code> for the Query.</li>&#xA;</ol>&#xA;&#xA;<pre><code>const { selections } = info.fieldNodes[0].selectionSet;&#xA;</code></pre>&#xA;&#xA;<ol start=""2"">&#xA;<li>Build up <code>ExpressionAttributeNames</code> and <code>ProjectionExpression</code>.</li>&#xA;</ol>&#xA;&#xA;<pre><code>  let ExpressionAttributeNames;&#xA;  let ProjectionExpression;    &#xA;  if (selections) {            &#xA;    let current = 'a'.charCodeAt(0);&#xA;    ExpressionAttributeNames = selections&#xA;      .filter(s =&gt; !s.selectionSet)  // Skip nested queries&#xA;      .reduce((obj, { name }) =&gt; {    &#xA;        const key = '#' + String.fromCharCode(current++);&#xA;        obj[key] = name.value; &#xA;        return obj;            &#xA;      }, {});&#xA;&#xA;    ProjectionExpression = Object.keys(ExpressionAttributeNames).join(',');&#xA;  }   &#xA;</code></pre>&#xA;&#xA;<ol start=""3"">&#xA;<li>Pass in <code>ExpressionAttributeNames</code> and <code>ProjectionExpression</code> along with other DynamoDB query params. I'm including this for completeness - steps 1 and 2 are the core of this issue.</li>&#xA;</ol>&#xA;&#xA;<pre><code>  const params = {&#xA;    ExpressionAttributeValues: {&#xA;      ':foo': foo&#xA;    },&#xA;    ExpressionAttributeNames,&#xA;    KeyConditionExpression: 'foo = :foo',&#xA;    ProjectionExpression,&#xA;    TableName: table&#xA;  };&#xA;&#xA;  const response = await db.query(params).promise();&#xA;  return response.Items;&#xA;</code></pre>&#xA;",30697,,,,2019-01-30 00:04:52,"",,0,0,0,2019-01-30 00:04:52
54433121,2,,52512011,15,,"<p>It is possible to pass arguments from parent to child via the response. Let me explain ...</p>&#xA;&#xA;<p>AppSync has several containers inside <code>$context</code>:</p>&#xA;&#xA;<ul>&#xA;<li>arguments</li>&#xA;<li>stash</li>&#xA;<li>source</li>&#xA;</ul>&#xA;&#xA;<p><code>arguments</code> and <code>stash</code> are always cleared before invoking a child resolver as evident from these Cloudwatch logs:</p>&#xA;&#xA;<p><strong>At the very end of the parent execution</strong>  - <code>arguments</code> and <code>stash</code> data are present.</p>&#xA;&#xA;<pre><code>{&#xA;    ""errors"": [],&#xA;    ""mappingTemplateType"": ""After Mapping"",&#xA;    ""path"": ""[getLatestDeviceState]"",&#xA;    ""resolverArn"": ""arn:aws:appsync:us-east-1:xxx:apis/yyy/types/Query/fields/getLatestDeviceState"",&#xA;    ""context"": {&#xA;        ""arguments"": {&#xA;            ""device"": ""ddddd""&#xA;        },&#xA;        ""prev"": {&#xA;            ""result"": {&#xA;                ""items"": [&#xA;                    {&#xA;                        ""version"": ""849"",&#xA;                        ""device"": ""ddddd"",&#xA;                        ""timestamp"": ""2019-01-29T12:18:34.504+13:00""&#xA;                    }&#xA;                ]&#xA;            }&#xA;        },&#xA;        ""stash"": {""testKey"": ""testValue""},&#xA;        ""outErrors"": []&#xA;    },&#xA;    ""fieldInError"": false&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and then <strong>at the very beginning of the child resolver</strong> - <code>arguments</code> and <code>stash</code> are always blank.</p>&#xA;&#xA;<pre><code>{&#xA;""errors"": [],&#xA;""mappingTemplateType"": ""Before Mapping"",&#xA;""path"": ""[getLatestDeviceState, media]"",&#xA;""resolverArn"": ""arn:aws:appsync:us-east-1:yyy:apis/xxx/types/DeviceStatePRODConnection/fields/media"",&#xA;""context"": {&#xA;    ""arguments"": {},&#xA;    ""source"": {&#xA;        ""items"": [&#xA;            {&#xA;                ""version"": ""849"",&#xA;                ""device"": ""ddddd"",&#xA;                ""timestamp"": ""2019-01-29T12:18:34.504+13:00""&#xA;            }&#xA;        ]&#xA;    },&#xA;    ""stash"": {},&#xA;    ""outErrors"": []&#xA;},&#xA;""fieldInError"": false&#xA;}&#xA;</code></pre>&#xA;&#xA;<h1>Workaround 1 - get the argument from the previous result.</h1>&#xA;&#xA;<p>In the example above <code>device</code> is always present in the response of the parent resolver, so I inserted </p>&#xA;&#xA;<pre><code>#set($device = $util.defaultIfNullOrBlank($ctx.args.device, $ctx.source.items[0].device))&#xA;</code></pre>&#xA;&#xA;<p>into the <strong>request mapping template of the child resolver</strong>. It will try to get the ID it needs from the arguments and then fall back onto the previous result.</p>&#xA;&#xA;<h1>Workaround 2 - add the argument to the parent response</h1>&#xA;&#xA;<p>Modify your parent resolver response template to include the arguments:</p>&#xA;&#xA;<pre><code>{&#xA;    ""items"": $utils.toJson($context.result.items),&#xA;    ""device"": ""${ctx.args.device}""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and then retrieve it in the request mapping template of the child the same way as in the first workaround.</p>&#xA;",6923661,,,,2019-01-30 03:52:23,"",,0,2,0,2019-01-30 03:52:23
54481249,2,,53924398,2,,"<p>For save multiple records in database you need to follow every steps carefully</p>&#xA;&#xA;<p>For example</p>&#xA;&#xA;<pre><code>mutation{&#xA;  setMultipleRecord(data: [{title: ""first Title"", name: ""First""},&#xA;                           {title: ""Second Title"", name: ""Second""}])&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You must have schema type  </p>&#xA;&#xA;<pre><code>  `&#xA;  .......&#xA;  input Record {&#xA;    title: String!&#xA;    name: String!&#xA;  }&#xA;  .....&#xA;  ` &#xA;</code></pre>&#xA;&#xA;<p>And add Mutation as given that</p>&#xA;&#xA;<pre><code>  type Mutation/type RootMutation { {&#xA;    ......&#xA;    setMultipleRecord(data: [Record]): String!&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Here you can see <strong>Record</strong> is input type schema object where is <strong>data</strong> parameter holding variable which we are using to get data object.</p>&#xA;&#xA;<p>you can give any name instead of data also change in the argument in mutation</p>&#xA;&#xA;<p>Now in resolver function a</p>&#xA;&#xA;<pre><code>  Mutation: {&#xA;    setMultipleRecord: async(args, { data }) =&gt; {&#xA;      console.log(data)&#xA;      //Here data contain data which you passed which is&#xA;      // [{title: ""first Title"", name: ""First""},&#xA;      //  {title: ""Second Title"", name: ""Second""}]&#xA;      // Perform operation as your requirement&#xA;      // Please return String &#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Now you can change name as par your requirement of object. </p>&#xA;&#xA;<p>You made it successfully...</p>&#xA;",10893484,,10893484,2019-02-01 14:24:29,2019-02-01 14:24:29,"",,0,2,0,2019-02-01 14:12:39
54487179,2,,54424224,0,,"<p>Thanks for the extra information. With an Amplify schema that looks like this:</p>&#xA;&#xA;<pre><code>type Chat @model { &#xA;  id: ID! &#xA;  createdAt: String &#xA;  createdById: String &#xA;  chatWithId: String &#xA;  messsages: [Message] &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>By default, a table with a HASH key storing the id values is created to store the values, and there is no way to efficiently run the query you are trying to run with the default key structure alone. In the future, you will have more tools available to control a @model table's index structure, but for now the only way to do it is via @connection.</p>&#xA;&#xA;<p>Here is an example schema that might help you get started building APIs that can query these relationships more effectively.</p>&#xA;&#xA;<p><a href=""https://github.com/mikeparisstuff/chatql-react/blob/0c782f1391523e3a452a53ea3ee1ac7e5cf53c2c/amplify/backend/api/chatqlreact/schema.graphql#L1-L61"" rel=""nofollow noreferrer"">ChatQL React schema.graphql</a></p>&#xA;",2088684,,,,2019-02-01 21:09:54,"",,0,0,0,2019-02-01 21:09:54
54488356,2,,54474467,0,,"<p>So, this is your query in client side:</p>&#xA;&#xA;<pre><code>import gql from 'graphql-tag';&#xA;&#xA;export const getContentQuery = gql`&#xA;  query getContent {&#xA;    metadata {&#xA;      type&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>The <code>query getContent</code> is the name you are giving to your query in your code, but it's not the actual ""query name"" to send to your backend.&#xA;I think you have to do something like:</p>&#xA;&#xA;<pre><code>import gql from 'graphql-tag';&#xA;&#xA;export const getContentQuery = gql`&#xA;  query getContent {&#xA;    getContent {&#xA;      metadata {&#xA;        type&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;",1522176,,,,2019-02-01 23:15:22,"",,0,0,0,2019-02-01 23:15:22
54555867,2,,45224911,0,,"<p>You can check Persisted queries for Graphene Django</p>&#xA;&#xA;<p><a href=""https://github.com/flavors/django-graphql-persist"" rel=""nofollow noreferrer"">https://github.com/flavors/django-graphql-persist</a></p>&#xA;",1050083,,,,2019-02-06 14:25:59,"",,0,0,0,2019-02-06 14:25:59
54565910,2,,54562531,1,,"<p>If there is no need to make this chain on the frontend, you can do it on AppSync layer if you use <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html"" rel=""nofollow noreferrer"">pipeline</a>. You can create three functions and call them in a resolver of kind <code>PIPELINE</code>.</p>&#xA;",8786986,,,,2019-02-07 03:34:42,"",,0,0,0,2019-02-07 03:34:42
54587191,2,,54553719,6,,<p>AppSync requires the mutation return types in one subscription to be all same. I ended up making a wrapper return type for all mutations and having a union in that wrapper.</p>&#xA;,10159658,,,,2019-02-08 06:39:44,"",,0,0,0,2019-02-08 06:39:44
54609450,1,,,0,696,"<p>When using GraphQL mutations to create records, it expects the full object in return, e.g.:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  createPost(title: ""Good morning"") {&#xA;    id&#xA;    title&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How do I reliably get MySQL to return the newly inserted item? I'm currently doing this:</p>&#xA;&#xA;<pre><code>INSERT INTO posts(title) VALUES('Good morning');&#xA;SELECT * FROM posts WHERE id = LAST_INSERT_ID();&#xA;</code></pre>&#xA;&#xA;<p>But I'm not sure if this is the best way. What if another user happens to perform an <code>INSERT</code> immediately after my own? Would <code>LAST_INSERT_ID()</code> refer to their primary key ID instead of mine?</p>&#xA;",5228806,,,,2019-02-09 18:53:23,"Proper way for MySQL to immediately return a newly-inserted row, for GraphQL use?",<mysql><graphql>,1,2,0,2019-02-09 18:40:01
54609579,2,,54609450,0,,"<p>That's the way we did it at my last job, and never had any problems. <a href=""https://dev.mysql.com/doc/refman/8.0/en/information-functions.html#function_last-insert-id"" rel=""nofollow noreferrer"">The docs</a> say it is per connection, so you don't need to worry about another connection changing it.</p>&#xA;&#xA;<p>One thing to be careful of is inserting multiple rows with one INSERT statement. In this case LAST_INSERT_ID() will return the <em>first</em> inserted ID.</p>&#xA;",1200396,,,,2019-02-09 18:53:23,"",,0,0,0,2019-02-09 18:53:23
54635152,2,,54634201,2,,"<p>Now that I used the angular part of the docu instead of the React part, I found the solution. (@tombraider Thank you for pushing me in the right direction.)</p>&#xA;&#xA;<p>Instead of <code>query</code>, I need to use <code>watchQuery</code>.</p>&#xA;&#xA;<pre><code>  public getPost(id: string) {&#xA;    return this.apollo.watchQuery({&#xA;      query: gql`query getPost($id: String!) {&#xA;        post(id: $id) {&#xA;          id&#xA;          score&#xA;        }&#xA;      }`,&#xA;      variables: { id }&#xA;    }).valueChanges;&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>This changed version of the service-function keeps updateing the GUI.</p>&#xA;",3914932,,,,2019-02-11 16:38:55,"",,0,0,0,2019-02-11 16:38:55
54649575,1,,,1,1203,"<p>I have a many-to-many relation between users and groups in my schema, with a extra enum field for the relation level. I am able to add the extra relation field to my dataset, but I get schema validation error:</p>&#xA;&#xA;<blockquote>&#xA;  <p>""The provided key element does not match the schema (Service:&#xA;  AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException;&#xA;  Request ID: 2615V0KG8272IHVENE3DBSBCTVVV4KQNSO5AEMVJF66Q9ASUAAJG)""</p>&#xA;</blockquote>&#xA;&#xA;<p><em>Schema:</em></p>&#xA;&#xA;<pre><code>type Group {&#xA;    id: ID!&#xA;    created: AWSDateTime!&#xA;    createdById: ID!&#xA;    createdBy: User!&#xA;    title: String!&#xA;    description: String&#xA;    users(first: Int, after: String): GroupUsersConnection&#xA;}&#xA;&#xA;enum GroupRoles {&#xA;    admin&#xA;    user&#xA;}&#xA;&#xA;type GroupUsers {&#xA;    id: ID!&#xA;    created: AWSDateTime!&#xA;    role: GroupRoles!&#xA;    userId: ID!&#xA;    groupId: ID!&#xA;}&#xA;&#xA;type GroupConnection {&#xA;    items: [Group]&#xA;    nextToken: String&#xA;}&#xA;&#xA;type GroupUsersConnection {&#xA;    items: [UserWithRole]&#xA;    nextToken: String&#xA;}&#xA;&#xA;type Mutation {&#xA;    createGroup(input: CreateGroupInput!): Group&#xA;    createUser(input: CreateUserInput!): User&#xA;    createGroupUsers(input: CreateGroupUsersInput!): GroupUsers&#xA;}&#xA;&#xA;type Query {&#xA;    getGroup(id: ID!): Group&#xA;    listGroups(filter: TableGroupFilterInput, limit: Int, nextToken: String): GroupConnection   &#xA;    getUser(id: ID!): User&#xA;    listUsers(filter: TableUserFilterInput, limit: Int, nextToken: String): UserConnection&#xA;}&#xA;&#xA;input TableGroupFilterInput {&#xA;    id: TableIDFilterInput&#xA;    created: TableStringFilterInput&#xA;    createdById: TableIDFilterInput&#xA;    title: TableStringFilterInput&#xA;    description: TableStringFilterInput&#xA;}&#xA;&#xA;input TableUserFilterInput {&#xA;    id: TableIDFilterInput&#xA;    created: TableStringFilterInput&#xA;    email: TableStringFilterInput&#xA;    password: TableStringFilterInput&#xA;    name: TableStringFilterInput&#xA;    avatar: TableStringFilterInput&#xA;    isOnline: TableBooleanFilterInput&#xA;}&#xA;&#xA;type User {&#xA;    id: ID!&#xA;    created: AWSDateTime!&#xA;    email: AWSEmail!&#xA;    password: String!&#xA;    name: String&#xA;    avatar: String&#xA;    isOnline: Boolean!&#xA;    groups(first: Int, after: String): UserGroupsConnection&#xA;}&#xA;&#xA;type UserConnection {&#xA;    items: [User]&#xA;    nextToken: String&#xA;}&#xA;&#xA;type UserGroupsConnection {&#xA;    items: [Group]&#xA;    nextToken: String&#xA;}&#xA;&#xA;type UserWithRole {&#xA;    id: ID!&#xA;    created: AWSDateTime!&#xA;    email: AWSEmail!&#xA;    password: String!&#xA;    name: String&#xA;    avatar: String&#xA;    isOnline: Boolean!&#xA;    role: GroupRoles!&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;    mutation: Mutation&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><em>Resolver for <code>GroupUsersConnection.items</code> with <code>UserTable</code> as datasource:</em></p>&#xA;&#xA;<pre><code>##--------------------------&#xA;## request mapping template&#xA;##--------------------------&#xA;#if( ${ctx.source.items.isEmpty()} )&#xA;{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Scan"",&#xA;    ""consistentRead"": true&#xA;}&#xA;#else&#xA;  #set($userIds = [])&#xA;  #foreach($groupUser in ${ctx.source.items})    &#xA;      #set($userIdMap = {})&#xA;      $util.qr($userIdMap.put(""id"", $util.dynamodb.toString($groupUser.get(""userId""))))&#xA;      $util.qr($userIds.add($userIdMap))&#xA;  #end&#xA;&#xA;  {&#xA;      ""version"" : ""2018-05-29"",&#xA;      ""operation"" : ""BatchGetItem"",&#xA;      ""tables"" : {&#xA;          ""UserTable"": {&#xA;              ""keys"": $util.toJson($userIds),&#xA;              ""consistentRead"": true&#xA;          }&#xA;      }&#xA;  }&#xA;#end&#xA;&#xA;##--------------------------&#xA;## response mapping template&#xA;##--------------------------&#xA;#if ( ! ${ctx.result.data} )&#xA;    $util.toJson([])&#xA;#else&#xA;    #foreach($user in ${ctx.result.data.UserTable})&#xA;        #set($idx = $foreach.count-1)&#xA;        #set($role = $ctx.source.items.get(0).get(""role""))&#xA;        $util.qr($user.put(""role"", $role))&#xA;        $util.qr($usersWithRoles.add($user))        &#xA;    #end&#xA;    $util.toJson($ctx.result.data.UserTable)&#xA;#end&#xA;</code></pre>&#xA;&#xA;<p><em>This is the query I try to run, with full result:</em></p>&#xA;&#xA;<pre><code>query ListGroups {&#xA;  listGroups {&#xA;    items {&#xA;      id&#xA;      title&#xA;      createdById&#xA;      createdBy {&#xA;        name&#xA;        email&#xA;      }&#xA;      users {&#xA;        items {&#xA;          id&#xA;          name&#xA;          role&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;{&#xA;  ""data"": {&#xA;    ""listGroups"": {&#xA;      ""items"": [&#xA;        {&#xA;          ""id"": ""72423554-fe02-4644-92e4-4bd2a2702d85"",&#xA;          ""title"": ""My first group"",&#xA;          ""createdById"": ""e626fab4-b099-4736-91f0-dcbf5fc2e47e"",&#xA;          ""createdBy"": {&#xA;            ""name"": ""John Doe"",&#xA;            ""email"": ""john@doe.com""&#xA;          },&#xA;          ""users"": {&#xA;            ""items"": [&#xA;              null&#xA;            ]&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""listGroups"",&#xA;        ""items"",&#xA;        0,&#xA;        ""users"",&#xA;        ""items"",&#xA;        0,&#xA;        ""role""&#xA;      ],&#xA;      ""data"": null,&#xA;      ""errorType"": ""DynamoDB:AmazonDynamoDBException"",&#xA;      ""errorInfo"": null,&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 105,&#xA;          ""column"": 11,&#xA;          ""sourceName"": null&#xA;        }&#xA;      ],&#xA;      ""message"": ""The provided key element does not match the schema (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException; Request ID: NB3G15C13BUMEQ3OK6VPNVA3LFVV4KQNSO5AEMVJF66Q9ASUAAJG)""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;",1578285,,640607,2019-07-02 23:17:45,2019-07-02 23:17:45,Adding extra field in aws appsync resolver,<amazon-web-services><amazon-dynamodb><graphql><aws-appsync>,1,0,0,2019-02-12 11:54:24
54651893,2,,53973304,0,,"<p>The short answer to that is <strong>no</strong>.</p>&#xA;&#xA;<p>The <code>@searchable</code> annotation and AppSyncs functionalities within ES are super limited out of the box. You can't even pass in fuzzy_matches.</p>&#xA;&#xA;<p>I guess the way to go is to implement it yourself. You can modify the resolvers and thus also modify the ES search query. However, the resolvers are written in VST. Which might be not so easy to dig in.</p>&#xA;",3791380,,,,2019-02-12 14:07:04,"",,0,1,0,2019-02-12 14:07:04
54767325,1,54792882,,1,906,"<p>Sorry for the unspecific title. However, I am having a hard time to describe it.</p>&#xA;&#xA;<p>I am using <code>aws-appsync</code> with <code>aws cognito</code> for authentication.</p>&#xA;&#xA;<p>I've followed the amplify docs about the <code>@auth</code> annotation to handle permissions for mutations and queries.</p>&#xA;&#xA;<p>Here is an example of my schema.&#xA;A user can create an entry and share it with others. However, they should only read the entry and should not have permissions to edit it.</p>&#xA;&#xA;<p>An entry also has multiple notes. (And some more fields)</p>&#xA;&#xA;<pre><code>type Entry @model @versioned @auth (rules: [&#xA;  { allow: owner },&#xA;  { allow: owner, ownerField: ""shared"", queries: [get, list], mutations: []}&#xA;])  @searchable {&#xA;  id: ID!&#xA;  date: AWSDate&#xA;  updated_at: AWSDateTime&#xA;  text: String&#xA;  notes: [Note] @connection(name: ""EntryNotes"")&#xA;  shared: [String]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And here is the note</p>&#xA;&#xA;<pre><code>type Note @model @versioned @auth (rules: [{ allow: owner }]) {&#xA;  id: ID!&#xA;  text: String&#xA;  track: Track!&#xA;  diary: DiaryEntry @connection(name: ""EntryNotes"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This works fine so far. But the problem is the <code>Note</code> connection.&#xA;Because if you create a note you would create it like this: </p>&#xA;&#xA;<pre><code>mutation makeNote {&#xA;  createNote (input: {&#xA;    text: ""Hello there!""&#xA;    noteEntryId: ""444c80ee-6fd9-4267-b371-c2ed4a3ccda4""&#xA;  }) {&#xA;    id&#xA;    text&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The problem is now, that you can create notes for entries that you do not have access to. If you somehow find out which id they have.</p>&#xA;&#xA;<p>Is there a way to check if you have permissions to the entry before creating the note?</p>&#xA;",3791380,,3791380,2019-02-20 08:37:49,2019-02-20 18:23:33,How to check permissions of an entity on create in appsync,<amazon-dynamodb><graphql><aws-appsync>,1,0,0,2019-02-19 13:21:47
54780212,2,,54649575,0,,"<p>This seems to be a 400 error, which could mean that your request mapping template structure does not match the Amazon DynamoDB key structure.</p>&#xA;&#xA;<p>Please enable CloudWatch logs (with ""ALL"" option) from the Settings page of your API. Once you do, run the same query again. This will log the evaluated RequestMapping Template in the logs. You can then introspect the query to DynamoDB, and compare it with your table schema. There should be mismatch in one of the calls.</p>&#xA;&#xA;<p>The ""fieldInError"" boolean field in the mapping template log indicates whether the resolution of a particular path succeeded, so you can just introspect the failed ones.</p>&#xA;",640607,,,,2019-02-20 06:36:05,"",,0,0,0,2019-02-20 06:36:05
54792882,2,,54767325,2,,"<p>Currently, the best way to do this is via custom resolvers within the Amplify CLI. Specifically, you are able to use AppSync pipeline resolvers to perform the authorization check before creating the note. Your pipeline resolver would contain two functions. The first would look up the entry and compare the owner to the $ctx.identity. The second function would handle writing the record to DynamoDB. You can use the same logic found in <code>build/resolvers/Mutation.createNote.re(q|s).vtl</code> to implement the second function by copying it into the top level <code>resolvers/</code> directory and then referencing it from your custom resource. After copying the logic, you will want to disable the default createNote mutation by changing <code>@model</code> to <code>@model(mutations: { update: ""updateNote"", delete: ""deleteNote"" })</code>.</p>&#xA;&#xA;<p>For more information on how to setup custom resolvers see <a href=""https://aws-amplify.github.io/docs/cli/graphql#add-a-custom-resolver-that-targets-a-dynamodb-table-from-model"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/cli/graphql#add-a-custom-resolver-that-targets-a-dynamodb-table-from-model</a>. For more information on pipeline resolvers (slightly different than the example in the amplify docs) see <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html</a>. Also see the CloudFormation reference docs for AppSync <a href=""https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-reference-appsync.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-reference-appsync.html</a>.</p>&#xA;&#xA;<p>Looking towards the future, we are working on a design that would allow you to define auth rules that span @connections. When this is done, it will automatically configure this pattern but there is not yet a set release date.</p>&#xA;",2088684,,2088684,2019-02-20 18:23:33,2019-02-20 18:23:33,"",,0,0,0,2019-02-20 18:18:17
54807000,2,,54805703,0,,"<p>Seems that this may be a naming convention in AppSync. The below worked for me:</p>&#xA;&#xA;<pre><code>mutation createAnswer {&#xA;  createAnswer (input: {&#xA;    text: ""5""&#xA;    answerQuestionId: ""9d38c759-6b64-4c1f-9e0e-d3b95a72b3a8""&#xA;  }) {&#xA;    id&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Adding <em>answer</em> to <code>QuestionId</code> was what was needed.</p>&#xA;",478213,,,,2019-02-21 12:23:09,"",,0,0,0,2019-02-21 12:23:09
54812382,1,54843769,,0,1655,<p>I'm using AWS Appsync and Amplify.&#xA;A snippet of my GraphQL schema look like this:</p>&#xA;&#xA;<pre><code>type Recipe&#xA;@model&#xA;@auth(rules: [{allow: owner}])&#xA;{&#xA; id: ID!&#xA; title: String!&#xA; key: String!&#xA; courses: [Course!]!&#xA;}&#xA;&#xA;type Course&#xA;@model&#xA;@auth(rules: [{allow: owner}])&#xA;{&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>On amplify push it creates the DynamoDB tables <code>Recipe</code> and <code>Course</code></p>&#xA;&#xA;<p>After reading many tutorials I still don't get it how to add a recipe in GraphiQL.</p>&#xA;&#xA;<p>How can i insert a new Recipe that has a reference to a course and avoid duplicates in the Courses table?</p>&#xA;,3411864,,,,2019-02-23 17:23:00,Nested mutation GraphQL,<graphql><aws-amplify>,1,0,0,2019-02-21 16:55:58
54815466,1,,,3,1288,"<p>I've a table with (id, price). id is autoincremented. I want to return the id and full data of last inserted row.</p>&#xA;&#xA;<p>Resolver:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2018-05-29"",&#xA;    ""statements"": [&#xA;        ""insert into notes (price) VALUES (100)"",&#xA;        ""select * from notes WHERE id = $id""&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How can I find the id of last inserted row. Second query of course will not work here as id is not known.</p>&#xA;&#xA;<p>Does SELECT LAST_INSERT_ID(); work well in serverless context? How to store that variable and run third query?</p>&#xA;",1734448,,1734448,2019-02-22 02:47:33,2019-05-16 11:28:30,how to get id of last inserted row in RDS Aurora in GraphQL mutation,<graphql><amazon-rds><aws-appsync><amazon-aurora>,1,3,0,2019-02-21 20:11:41
54843769,2,,54812382,2,,"<p>To create multiples <code>Recipe</code> referencing the same <code>Course</code> without duplicates in the <code>Course</code> table, you need to design a many-to-many relationship.</p>&#xA;&#xA;<p>So far the relationship you have designed is not enough for AppSync to understand, you are missing <code>@connection</code> attributes. You can read <a href=""https://github.com/aws-amplify/amplify-cli/issues/91#issuecomment-419226819"" rel=""nofollow noreferrer"">this answer on github</a> to have an explanation of how to design this many-to-many relation in AppSync</p>&#xA;&#xA;<p>After designing the relation, you will use a mutation to insert data, and it's likely that AppSync will generate the mutation code for you (if not, use <code>amplify codegen</code> in the console). You will then be able to create data. </p>&#xA;&#xA;<p>Since you use DynamoDB with multiple tables (default mode for amplify / AppSync), you will have to either : </p>&#xA;&#xA;<ul>&#xA;<li>Call multiple mutations in a row</li>&#xA;<li>Use a custom resolver, as described in <a href=""https://stackoverflow.com/questions/50624580/how-to-put-update-nested-data-with-graphql"">this SO answer</a></li>&#xA;</ul>&#xA;",7605392,,7605392,2019-02-23 17:23:00,2019-02-23 17:23:00,"",,0,4,0,2019-02-23 16:44:56
54873891,2,,44520038,1,,"<p>you can use relay environment and  relay-runtime utils.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>import {&#xA;  createOperationDescriptor,&#xA;  getRequest,&#xA;} from 'relay-runtime';&#xA;&#xA;&#xA;const request = getRequest(query);&#xA;const operation = createOperationDescriptor(request, variables);&#xA;environment.execute({ operation }).toPromise();&#xA;</code></pre>&#xA;",896465,,,,2019-02-25 20:09:47,"",,0,0,0,2019-02-25 20:09:47
54876866,1,54901424,,0,1380,"<p><code>Basic info</code>: using Postgres in the backend and GraphQL in the front end using Postgraphile.</p>&#xA;&#xA;<p><code>Need</code>: Use a GraphQL mutation to update a row in the Postgres DB.</p>&#xA;&#xA;<p><code>Code</code>:&#xA;Suppose I have a library_account schema which has book table in Postgres which has fields like id, title, borrower_id and is_available. </p>&#xA;&#xA;<p><code>Scenario</code>:  It is getting borrowed for the very first time. </p>&#xA;&#xA;<p><code>Proposed flow</code>: make a GraphQL mutation to update the Postgres table with the borrower_id.</p>&#xA;&#xA;<p>Code I am currently using:</p>&#xA;&#xA;<pre><code>mutation BookUpdates(&#xA;  $title: String,&#xA;  $borrower_id: Int!, #not really an Int but for the sake of ease.&#xA;  $author_id: Int!,&#xA;  $isle_id: Int!,&#xA;  $is_available: Boolean&#xA;) {&#xA;  updateBookByAuthorIdAndIsleId(input: {&#xA;    isle_id: $isle_id,&#xA;    is_available: $is_available,&#xA;    borrower_id: $borrower_id,&#xA;    author_id: $author_id&#xA;}) {&#xA;  bookEdge {&#xA;    node {&#xA;      author_id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here, I am getting an error for <code>borrower_id</code> which says that borrower_id is not defined by type <code>updateBookByAuthorIdAndIsleId</code>.</p>&#xA;&#xA;<p>Any suggestions??</p>&#xA;",8588359,,,,2019-02-27 08:51:59,Update a column value in a Postgres table using Graphql mutation,<database><postgresql><graphql><mutation><postgraphile>,1,0,0,2019-02-26 00:38:38
54894001,2,,52226819,4,,"<p>You can see an example of it on Github from AWS sample.&#xA;Works with AppSync but very similar.</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>// AppSync client instantiation&#xD;&#xA;const client = new AWSAppSyncClient({&#xD;&#xA;  url: GRAPHQL_API_ENDPOINT_URL,&#xD;&#xA;  region: GRAPHQL_API_REGION,&#xD;&#xA;  auth: {&#xD;&#xA;    type: AUTH_TYPE,&#xD;&#xA;    // Get the currently logged in users credential.&#xD;&#xA;    jwtToken: async () =&gt; (await Auth.currentSession()).getAccessToken().getJwtToken(),&#xD;&#xA;  },&#xD;&#xA;  // Amplify uses Amazon IAM to authorize calls to Amazon S3. This provides the relevant IAM credentials.&#xD;&#xA;  complexObjectsCredentials: () =&gt; Auth.currentCredentials()&#xD;&#xA;});</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>Link to the AWS <a href=""https://github.com/aws-samples/aws-amplify-graphql/blob/master/src/App.js"" rel=""nofollow noreferrer"">repo</a></p>&#xA;",9619690,,,,2019-02-26 20:59:32,"",,0,0,0,2019-02-26 20:59:32
54901424,2,,54876866,3,,"<p>When constructing queries and mutations in GraphQL it's often wise to use a client such as GraphiQL which will help you by providing the documentation, giving you auto-complete capabilities, and highlighting where errors have occurred. PostGraphile has GraphiQL built in; it's enabled by default on the CLI but if you're using it in library mode you must pass <code>graphiql: true</code> to enable it. Either way I recommend you use the <code>--enhance-graphiql</code> / <code>enhanceGraphiql: true</code> flags. If you take your mutation and put it into GraphiQL it should tell you where it went wrong, and may even suggest how to fix it!</p>&#xA;&#xA;<p>It looks to me like your mutation is slightly the wrong shape. PostGraphile follows the Relay Input Object Mutations Specification, which means we nest all of the mutation inputs under the input argument, as you have done. However, we also group together the details about the record so that it's easier to separate the ""what"" from the ""how"" when doing updates - e.g. ""what"": <code>authorId: 27, isleId: 93</code>, ""how"": <code>patch: {text: $text}</code> - this also allows you to update the keys (e.g. if you wanted to change the isleId) which wouldn't be possible if all the columns were in together. This is the part you're missing, I believe.</p>&#xA;&#xA;<p>I suspect that your mutation should look more like:</p>&#xA;&#xA;<pre><code>mutation BookUpdates(&#xA;  $borrower_id: Int!, #not really an Int but for the sake of ease.&#xA;  $author_id: Int!,&#xA;  $isle_id: Int!,&#xA;  $is_available: Boolean&#xA;) {&#xA;  updateBookByAuthorIdAndIsleId(input: {&#xA;    isleId: $isle_id,&#xA;    authorId: $author_id&#xA;    bookPatch: {&#xA;      isAvailable: $is_available,&#xA;      borrowerId: $borrower_id,&#xA;    }&#xA;}) {&#xA;  bookEdge {&#xA;    node {&#xA;      authorId&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I've also camelCase'd your field names, but if you've loaded a custom inflector this might not be necessary/desirable.</p>&#xA;",141284,,,,2019-02-27 08:51:59,"",,0,1,0,2019-02-27 08:51:59
54927684,1,55982685,,2,1580,"<p>Summary:&#xA;I am using javascript generated by aws-amplify to send queries and mutation to an AWS graphql endpoint with dynamodb backend. The queries/mutations function well enough (they create, get and delete records as intended). But they constantly throw an error in the process:</p>&#xA;&#xA;<p>""Query condition missed key schema element: authorId (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException;""</p>&#xA;&#xA;<p>My code can't be too bad, or else why does it function so well? Still, I would like to get rid of this annoying error, or at least understand it. Why is this error happening?</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>Details:</p>&#xA;&#xA;<p>My api is generated from the exact schema.graphql file provided in the aws-sample ""aws-appsync-chat""&#xA;<a href=""https://github.com/aws-samples/aws-appsync-chat"" rel=""nofollow noreferrer"">https://github.com/aws-samples/aws-appsync-chat</a></p>&#xA;&#xA;<p>The relevant part of the model is here...</p>&#xA;&#xA;<pre><code>type User &#xA;  @model &#xA;  @auth(rules: [{ allow: owner, ownerField: ""id"", queries: null }]) {&#xA;  id: ID!&#xA;  username: String!&#xA;  conversations: [ConvoLink] @connection(name: ""UserLinks"")&#xA;  messages: [Message] @connection(name: ""UserMessages"")&#xA;    createdAt: String&#xA;    updatedAt: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Sadly, that sample does not really use queries and mutations generated by amplify. Instead, it uses a hand written schema in the file: src/graphql.js. That's right. Generated queries/mutations are included in the project, but not actually used. This was super disappointing to me. But my faith was restored (somewhat), when I managed to rewrite the javascript logic to make it function (more or less) using queries and mutations that were generated by amplify.</p>&#xA;&#xA;<p>Anyway, the first step I took was to write the logic for (1) querying the users table to see if a record exists already for the currently authroized user, and (2) creating the record if the authorized user is not there. For bonus points, I also wrote logic for (3) deleting the user record from the database.</p>&#xA;&#xA;<p>Working inside a vuejs component, I wrote these methods...</p>&#xA;&#xA;<pre><code>methods: {&#xA;    async DeleteUserRecord() {&#xA;        try {&#xA;            let id = store.state.user.username;&#xA;            const input = { id: id };&#xA;            await API.graphql(graphqlOperation(deleteUser, { input }));// works but throws errors&#xA;        } catch (err) {&#xA;            console.log('Error deleting user record:', err)&#xA;        }&#xA;    },&#xA;    async GetUserRecord() {&#xA;        try {&#xA;            let id = store.state.user.username;&#xA;            const result = await API.graphql(graphqlOperation(getUser, { id }));// works but throws errors&#xA;            console.log(result);&#xA;        } catch (err) {&#xA;            console.log('Error getting user record:', err)&#xA;        }&#xA;    },&#xA;    async CreateUserRecord() {&#xA;        let username = store.state.user.username;&#xA;        try {&#xA;            const result = await API.graphql(graphqlOperation(createUser, { input:{ id:username, username: username } })) // works but throws error&#xA;            console.log(result);&#xA;        } catch (err) {&#xA;            console.log('Error creating user record:', err)&#xA;        }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>All three seem to work, but they do throw errors, see attached screenshot for details. </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/GLSCj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GLSCj.png"" alt=""Console errors screenshot""></a></p>&#xA;&#xA;<p>Always the same error:&#xA;""Query condition missed key schema element: authorId (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException;""</p>&#xA;&#xA;<p>The error must be related to the auth rules in the model. But remember that my code does work, so my code is not complete crap.</p>&#xA;&#xA;<p>Can anyone explain this error to me? Is it a bug in AWS? Or is my code written incorrectly?</p>&#xA;&#xA;<p>---------------------------------- UPDATE BELOW -------------------------------</p>&#xA;&#xA;<p>I still do not understand why this error occurs, but I have made some progress in understanding it. </p>&#xA;&#xA;<ol>&#xA;<li><p>As illustrated by the screenshots, the getUser query generated by amplify WILL work if I remove the part that asks for a user's messages.</p></li>&#xA;<li><p>The authorId that appears in the error message must come from the data model of the Message objects.</p></li>&#xA;<li><p>Notice that the graphql schema uses a named connection to link the messages to the user, with a keyField of ""authorId"". </p></li>&#xA;</ol>&#xA;&#xA;<p>So, I could probably get rid of the error by fiddling with the specification of the connection in the data model.</p>&#xA;&#xA;<p>But wait. These are the default queries generated by amplify simply by feeding it a schema that comes EXACTLY from an aws-sample project. Shouldn't these queries work well enough without my editing them?</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Ydk7d.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ydk7d.png"" alt=""Garphql Schema""></a>&#xA;<a href=""https://i.stack.imgur.com/jEDQu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jEDQu.png"" alt=""Working Query""></a>&#xA;<a href=""https://i.stack.imgur.com/yaURi.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yaURi.png"" alt=""Failing Query""></a></p>&#xA;",1974207,,1974207,2019-03-01 15:25:12,2019-05-04 12:49:07,"Graphql queries generated by amplify work well, but throw errors due to auth rules. Why?",<javascript><vuejs2><amazon-dynamodb><graphql><aws-amplify>,1,0,0,2019-02-28 14:14:34
54936032,1,,,2,657,"<p>I can deploy and run successfully my lambda with a GraphqlClient in the URL:</p>&#xA;&#xA;<p><a href=""https://4er563if.execute-api.us-east-1.amazonaws.com/dev/zipcodes"" rel=""nofollow noreferrer"">https://4er563if.execute-api.us-east-1.amazonaws.com/dev/zipcodes</a></p>&#xA;&#xA;<p>As far as I understand, that passes through the AWS API gateway that triggers the lambda, the gateway takes the POST data and delivers it to the lambda.</p>&#xA;&#xA;<p>But now I want to try the code directly on the Lambda browser console. There is the option ""Configure test event"", where I can define and send a JSON string to the lambda, but I don't know what info ""event"" and ""context"" should hold. </p>&#xA;&#xA;<p>I tried: </p>&#xA;&#xA;<pre><code> {&#xA;   ""headers"": {""origin"":true},&#xA;    ""context"": ""{ \""functionName\"": \""getZipdata\"",&#xA;                  \""method\"": \""POST\"",&#xA;                  \""query\"": getZipdata(zip: \""04340\"") {id, name}}""&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>but I'm getting:</p>&#xA;&#xA;<pre><code>  ""body"": ""Apollo Server supports only GET/POST requests.""&#xA;</code></pre>&#xA;",1123717,,,,2019-03-01 03:00:16,Testing Apollo graphql query on AWS lambda web console,<aws-lambda><serverless-framework><apollo-server>,1,0,0,2019-02-28 23:50:08
54938764,2,,54938440,0,,"<p>MySQL make statements using ? as the parameter, And PostgreSQL uses $1, $2 etc.</p>&#xA;&#xA;<p>Now your current query is </p>&#xA;&#xA;<pre><code>const query = `INSERT INTO ""Users"" &#xA;              (email, password, ""createdAt"", ""updatedAt"") &#xA;              VALUES`;&#xA;</code></pre>&#xA;&#xA;<p>You need to convert your query into this format</p>&#xA;&#xA;<pre><code>const query = `INSERT INTO ""Users"" &#xA;               (email, password, ""createdAt"", ""updatedAt"")&#xA;               VALUES &#xA;               ($1, $2, $3, $4)`;&#xA;</code></pre>&#xA;&#xA;<p>Now in your query become</p>&#xA;&#xA;<pre><code>db.Query(`INSERT INTO ""Users"" &#xA;          (email, password, ""createdAt"", ""updatedAt"")&#xA;          VALUES &#xA;          ($1, $2, $3, $4)`, &#xA;          ['test', 'test', '2019-03-01T05:08:34.523Z','2019-03-01T05:08:34.523Z'])&#xA;</code></pre>&#xA;&#xA;<p>You can use string instead of the template string. Just for clearification syntax.</p>&#xA;",10893484,,,,2019-03-01 05:59:01,"",,0,0,0,2019-03-01 05:59:01
54946757,1,54952367,,3,1855,"<p>I recently got into AWS and I'm using appsync alongside a dynamo table with an idex for user id(from the cognito pool) to give only certain user access to certain data. Now I would like to further expand upon this and also give access to certain cognito groups. Here is my code:</p>&#xA;&#xA;<p>1st. my mutation</p>&#xA;&#xA;<pre><code>    ## [Start] Prepare DynamoDB PutItem Request. **&#xA;$util.qr($context.args.input.put(""createdAt"", $util.time.nowISO8601()))&#xA;$util.qr($context.args.input.put(""updatedAt"", $util.time.nowISO8601()))&#xA;$util.qr($context.args.input.put(""__typename"", ""Patient""))&#xA;&#xA;## This line adds the userId, accessed from the $ctx.identity variable&#xA;$util.qr($context.args.input.put(""userId"", $ctx.identity.sub))&#xA;$util.qr($context.args.input.put(""Groupi"", $ctx.identity.claims.get(""cognito:groups"")))&#xA;&#xA;&#xA;&#xA;{&#xA;  ""version"": ""2017-02-28"",&#xA;  ""operation"": ""PutItem"",&#xA;  ""key"": {&#xA;      ""id"":     $util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($ctx.args.input.id, $util.autoId()))&#xA;  },&#xA;  ""attributeValues"": $util.dynamodb.toMapValuesJson($context.args.input),&#xA;  ""condition"": {&#xA;      ""expression"": ""attribute_not_exists(#id)"",&#xA;      ""expressionNames"": {&#xA;          ""#id"": ""id""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and the query</p>&#xA;&#xA;<pre><code>#set( $limit = $util.defaultIfNull($context.args.limit, 10) )&#xA;&#xA;{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Query"",&#xA;    ""limit"": $limit,&#xA;    ""index"": ""userId-index"",&#xA;    ""query"" : {&#xA;        ""expression"": ""userId = :userId"",&#xA;        ""expressionValues"" : {&#xA;            "":userId"" : $util.dynamodb.toDynamoDBJson($ctx.identity.sub)&#xA;        }&#xA;    },&#xA;    ""nextToken"":   #if( $context.args.nextToken )&#xA;      ""$context.args.nextToken""&#xA;&#xA;     #else&#xA;     null&#xA;    #end&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I would like to expand the query to support t6he group aswell. Help would be much appreciated.&#xA;Thanks!</p>&#xA;",11136408,,,,2020-04-02 23:42:55,How to give access to certain user groups in cognito using Appsync,<graphql><amazon-cognito><aws-appsync><aws-amplify>,2,0,0,2019-03-01 14:35:34
54952367,2,,54946757,2,,"<p>The authorization docs have lots of examples you might find helpful: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/security-authorization-use-cases.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/security-authorization-use-cases.html</a></p>&#xA;&#xA;<p>Specifically, this one:</p>&#xA;&#xA;<pre><code>#set($expression = """")&#xA;#set($expressionValues = {})&#xA;#foreach($group in $context.identity.claims.get(""cognito:groups""))&#xA;    #set( $expression = ""${expression} contains(groupsCanAccess, :var$foreach.count )"" )&#xA;    #set( $val = {})&#xA;    #set( $test = $val.put(""S"", $group))&#xA;    #set( $values = $expressionValues.put("":var$foreach.count"", $val))&#xA;    #if ( $foreach.hasNext )&#xA;    #set( $expression = ""${expression} OR"" )&#xA;    #end&#xA;#end&#xA;{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Scan"",&#xA;    ""limit"": #if(${context.arguments.count}) ""${context.arguments.count}"" #else 20 #end,&#xA;    ""nextToken"": #if(${context.arguments.nextToken}) ""${context.arguments.nextToken}"" #else null #end,&#xA;    ""filter"":{&#xA;        ""expression"": ""$expression"",&#xA;        ""expressionValues"": $utils.toJson($expressionValues)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That example has some extra info since it's about a list call rather than a simple get, however you can see it being set in the expression/expression values. This implementation looks a tad different than what you have as it allows a user to be in multiple groups, any one of which could work.</p>&#xA;&#xA;<p>Does that make sense?</p>&#xA;",1229845,,,,2019-03-01 21:11:13,"",,0,2,0,2019-03-01 21:11:13
54976466,2,,54975285,0,,"<p>Did you check with following code ?  </p>&#xA;&#xA;<pre><code>onSubmit={(values) =&gt; this.handleSubmit(values, customerCreate)}&#xA;</code></pre>&#xA;",11134027,,9799857,2019-03-04 05:28:03,2019-03-04 05:28:03,"",,0,1,0,2019-03-04 04:05:32
54976589,1,54980596,,2,2483,"<p>I'm trying to create a custom query type in AppSync to query on a field other than the default id. </p>&#xA;&#xA;<p>Note: I don't have a sort key or a global secondary index configured.</p>&#xA;&#xA;<p>Data source is connected to DynamoDB GameStats table. The record exists in the table but when I query, I get ""The provided key element does not match the schema"". </p>&#xA;&#xA;<pre><code>query getGameByMeetupId {&#xA;  getGameByMeetupId(meetupId: ""259028625"") {&#xA;    name&#xA;    field&#xA;    year&#xA;    month&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Query:&#xA;<code>getGameByMeetupId(meetupId: String): GameStats</code></p>&#xA;&#xA;<p>Request mapping template:</p>&#xA;&#xA;<pre><code>    {&#xA;        ""version"": ""2017-02-28"",&#xA;        ""operation"": ""GetItem"",&#xA;        ""key"": {&#xA;            ""meetupId"": $util.dynamodb.toDynamoDBJson($ctx.args.meetupId)&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Response mapping template:&#xA;<code>$utils.toJson($ctx.result)</code></p>&#xA;&#xA;<p>Error message:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getGameByMeetupId"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""getGameByMeetupId""&#xA;      ],&#xA;      ""data"": null,&#xA;      ""errorType"": ""DynamoDB:AmazonDynamoDBException"",&#xA;      ""errorInfo"": null,&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 2,&#xA;          ""column"": 3,&#xA;          ""sourceName"": null&#xA;        }&#xA;      ],&#xA;      ""message"": ""The provided key element does not match the schema (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException; Request ID: MC71RFG6U85PBICS2OA714TLB7VV4KQNSO5AEMVJF66Q9ASUAAJG)""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;",6636554,,6636554,2019-03-04 04:51:48,2022-06-02 20:24:10,"AppSync DynamoDb, provided key element does not match the schema",<amazon-dynamodb><graphql><aws-appsync>,2,0,0,2019-03-04 04:22:28
54980596,2,,54976589,4,,"<p>To use a DynamoDB <code>Query</code>, you have to specify a value for the partition key.</p>&#xA;&#xA;<p>You mentioned your table has a 'default id' attribute. Is that your partition key? If so, you have two choices:</p>&#xA;&#xA;<p>1) Change the <code>Query</code> to a <code>Scan</code>, and specify a filter on the <code>meetupId</code> attribute</p>&#xA;&#xA;<p>2) Add a GSI, setting <code>meetupId</code> as the partition key, and then update the <code>Query</code> you already have to target the GSI, not the base table</p>&#xA;",4985580,,,,2019-03-04 09:50:35,"",,0,2,0,2019-03-04 09:50:35
55008960,1,,,1,1379,"<p>I have a lambda function that is triggered when a change occur in my dynamodb table. When I use the lambda resolver, I can only invoke a lambda function from my appsync which is not what I am trying to do.</p>&#xA;&#xA;<p>I am trying to follow the answer provided here:</p>&#xA;&#xA;<p><a href=""https://stackoverflow.com/questions/51659099/how-do-i-subscribe-directly-to-my-aws-appsync-data-source"">How do I subscribe directly to my AWS AppSync data source?</a></p>&#xA;&#xA;<p>But I am having problems with the 3rd step.</p>&#xA;&#xA;<p>Thanks</p>&#xA;&#xA;<p>Following @Aaron_H answers this is my lambda function:</p>&#xA;&#xA;<pre><code>module.exports.triggerStream = async (event, context, callback) =&gt; {&#xA;if(event.Records[0].eventName === 'INSERT'){&#xA;return new Promise((resolve, reject) =&gt; {&#xA;    console.log(event.Records[0].eventName)&#xA;    console.log(JSON.stringify(context))&#xA;    console.log(JSON.stringify(event));&#xA;&#xA;&#xA;        const myData = { //this part is hardcoded for my tests&#xA;            ""query"": `&#xA;            mutation UpdateData($myDeviceID : String!, $myTs : String!, $myPayload: payloadInput){&#xA;                updateData(deviceID : $myDeviceID, ts : $myTs, payload : $myPayload){&#xA;                    checkup&#xA;                }&#xA;            }&#xA;            `,&#xA;            ""variables"": {&#xA;                ""myDeviceID"": ""z55-temp"",&#xA;                ""myTs"": ""1549512000"",&#xA;                ""myPayload"":{&#xA;                    ""deviceId"": ""z55-temp"",&#xA;                    ""ts"": 1549512000,&#xA;                    ""value"": 17.25&#xA;                }&#xA;            }&#xA;        };&#xA;    const data=JSON.stringify(myData)&#xA;&#xA;    const options = {&#xA;        host: 'blablabla.appsync-api.us-east-1.amazonaws.com',&#xA;        path: '/graphql',&#xA;        method: 'POST',&#xA;        headers: {'Content-Type': 'application/json',&#xA;            ""X-Api-Key"" : ""myApiKey""}           &#xA;    };      &#xA;&#xA;    var req = https.request(options, (res) =&gt; {&#xA;      console.log('statusCode:', res.statusCode);&#xA;      console.log('headers:', res.headers);&#xA;      res.setEncoding('utf8');&#xA;      resolve('Success');&#xA;&#xA;      res.on('data', (d) =&gt; {&#xA;        process.stdout.write(d);&#xA;&#xA;      });&#xA;    });&#xA;&#xA;    req.on('error', (e) =&gt; {&#xA;      console.error(e);&#xA;      reject(e.message);&#xA;    });&#xA;    // send the request&#xA;    req.write(data);&#xA;    req.end();&#xA;});&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>};   </p>&#xA;&#xA;<p>I am also using serverless framework, this is my serverless.yml config for my lambda function:</p>&#xA;&#xA;<pre><code>function:triggerStream:&#xA;handler: handler.triggerStream&#xA;events:&#xA;   - stream:&#xA;      type: dynamodb&#xA;      batchSize: 1&#xA;      startingPosition: LATEST&#xA;      arn: myExistingTableArn    &#xA;</code></pre>&#xA;&#xA;<p>My problem is that I want to use Amazon Cognito User Pool for my appsync authorization. How am I suppose to use JWT tokens in my header if my request comes from Dynamodb streams? I have an IOT device that insert data in my table.</p>&#xA;&#xA;<p>Thank you!     </p>&#xA;",11029363,,11029363,2019-03-12 19:55:02,2019-03-12 19:55:02,Make the DynamoDB Stream Lambda function call the AWS AppSync mutation,<aws-lambda><amazon-dynamodb><graphql><aws-appsync>,1,0,0,2019-03-05 18:03:36
55018992,1,55019511,,1,512,"<p>I have the following JSON output from my NodeJS Apollo server:</p>&#xA;&#xA;<pre><code>attributes:&#xA;   [ { id: 8,&#xA;       name: 'Size',&#xA;       position: 0,&#xA;       visible: true,&#xA;       variation: true,&#xA;       options: [Array] } ],&#xA;</code></pre>&#xA;&#xA;<p>Now I want to create a graphql scheme for this.&#xA;I can access all the items like id, position, visible.. but the options I can't access.</p>&#xA;&#xA;<p>How can I write the graphql scheme for this?&#xA;Current scheme is:</p>&#xA;&#xA;<pre><code> const ProductAttributes = `&#xA;      type ProductAttributes {&#xA;        id: Int!&#xA;        name: String!&#xA;        position: String!&#xA;        visible: Boolean!&#xA;        Variation: Boolean!&#xA;        // todo Options: [array] ?&#xA;      }&#xA;    `;&#xA;</code></pre>&#xA;&#xA;<p>I found out the options array looks like this but no key is assigned to it:</p>&#xA;&#xA;<pre><code>[ { id: 8,&#xA;    name: 'Size',&#xA;    position: 0,&#xA;    visible: true,&#xA;    variation: true,&#xA;    options:&#xA;     [ 'L32 W35',&#xA;       'L32 W36',&#xA;       'L32 W37',&#xA;       'L32 W38',&#xA;       'L28 W22',&#xA;       'L28 W23',&#xA;       'L28 W24',&#xA;       'L28 W25',&#xA;       'L32 W34' ] } ]&#xA;</code></pre>&#xA;&#xA;<p>Do I have to assign a key to this with GraphQL ? or do I have to do this in my NodeJS ajax request?</p>&#xA;&#xA;<p>e.g.: options: {&#xA;name: 'L32 W35',&#xA;name: 'l32 W36', etc...</p>&#xA;",9697004,,9697004,2019-03-06 09:38:26,2019-03-06 11:45:47,How to iterate json nested array in graphql scheme,<node.js><reactjs><graphql><apollo>,1,0,0,2019-03-06 08:53:17
55045161,1,,,0,553,"<p>I want to query a nested field for multiple variables.&#xA;In this case, I want to query RPR, but only return RPR if the label of the nested Region is given. One variable for the nested Region (field: label) works fine, but how can I filter on multiple variables <em>of the same field</em>?</p>&#xA;&#xA;<p>The way I see it, when I call up the query-client (in my case through Apollo), I want to give an array as a variable and let the query in the backend go through that array and return results based on any of the variables given in the array.</p>&#xA;&#xA;<p>The resolver does nothing more then:</p>&#xA;&#xA;<pre><code>rPRs: (root, args, ctx, info) =&gt; {&#xA; return ctx.db.query.rPRs(args, info);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The relevant part of the schema:</p>&#xA;&#xA;<pre><code>    type RPR {&#xA;      id: ID! @Unique&#xA;      RPRID: String! @Unique&#xA;      state: String&#xA;      region: Region!&#xA;      resource: Resource!&#xA;      price: Float&#xA;      theme: String&#xA;      editionTitle: String&#xA;      information: String&#xA;    }&#xA;&#xA;    type Region {&#xA;      id: ID! @Unique&#xA;      regionID: String! @Unique&#xA;      label: String! @Unique&#xA;      name: String! @Unique&#xA;      aov: Float!&#xA;      aov_multiplier: Float!&#xA;    }&#xA;&#xA;</code></pre>&#xA;&#xA;<p>The current query to retrieve all 'RPR' with nested regions:</p>&#xA;&#xA;<pre><code>&#xA;    query ADVICE_RESOURCES_QUERY($theme: String, $regio: String) {&#xA;      rPRs(where: {&#xA;        theme: $theme,&#xA;        region: {&#xA;          label: $regio&#xA;        }&#xA;      })&#xA;      {&#xA;        RPRID&#xA;        region {&#xA;          label&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;",6840304,,,,2019-03-08 17:29:58,Use array as variable for GraphQL Query,<javascript><graphql><apollo-client><prisma><prisma-graphql>,1,0,0,2019-03-07 13:36:50
55047043,2,,52960709,4,,"<p>Just to add a note about the authentication as it took me a while to work this out:</p>&#xA;&#xA;<p>If the authenticationType is ""API_KEY"" then you have to pass the apiKey as shown in @C.Lee's answer. </p>&#xA;&#xA;<pre><code>  auth: {&#xA;    type: config.aws_appsync_authenticationType,&#xA;    apiKey: config.aws_appsync_apiKey,&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>If the authenticationType is ""AMAZON_COGNITO_USER_POOLS"" then you need the jwkToken, and &#xA;if you're using Amplify you can do this as</p>&#xA;&#xA;<pre><code>  auth: {&#xA;    type: config.aws_appsync_authenticationType,&#xA;    jwtToken: async () =&gt; {&#xA;      const session = await Auth.currentSession();&#xA;      return session.getIdToken().getJwtToken();&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>But if your authenticationType is ""AWS_IAM"" then you need the following:</p>&#xA;&#xA;<pre><code>  auth: {&#xA;    type: AUTH_TYPE.AWS_IAM,&#xA;    credentials: () =&gt; Auth.currentCredentials()&#xA;  }&#xA;</code></pre>&#xA;",326745,,,,2019-03-07 15:10:47,"",,0,2,0,2019-03-07 15:10:47
55067686,1,,,0,164,"<p>I have an Aurora MySql 5.6 serverless database configured and I am trying to set up an AppSync API with a data source to connect this database. </p>&#xA;&#xA;<p>On the AppSync ""Data Sources"" page, I have ""Relational database"" selected as Data source type. The page also has a ""Logical database name"" field and I do not know what to enter there. What goes into this field? Is it arbitrary or it must match some value from my Aurora configuration?</p>&#xA;",9722693,,,,2019-03-11 20:21:58,"What does ""Logical database name"" field refer to on Data Source page of an AppSync API?",<amazon-web-services><graphql><aws-appsync><aws-serverless><amazon-aurora>,1,0,0,2019-03-08 16:57:10
55068192,2,,55045161,0,,"<p>you should be able to use the <code>label_in</code> filter and provide the array of Strings to it.  Your where would then look like this: </p>&#xA;&#xA;<pre><code>where: {&#xA;    theme: $theme,&#xA;    region: {&#xA;      label_in: $regio&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;",9941706,,,,2019-03-08 17:29:58,"",,0,0,0,2019-03-08 17:29:58
55089302,2,,55089046,4,,"<p>From the <a href=""https://facebook.github.io/relay/docs/en/query-renderer.html"" rel=""nofollow noreferrer"">docs</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Note: To enable compatibility mode, relay-compiler enforces the query to be named as Query.</p>&#xA;</blockquote>&#xA;&#xA;<p>This is also outlind in <a href=""https://github.com/facebook/relay/issues/1718"" rel=""nofollow noreferrer"">this issue</a>. If your file is named <code>Table.js</code>, then your operation should be <code>TableQuery</code>.</p>&#xA;",6024220,,,,2019-03-10 15:33:46,"",,0,3,0,2019-03-10 15:33:46
55092737,1,55092814,,0,237,<p>I have a <code>books</code> table and on each row (book) some books have several authors.</p>&#xA;&#xA;<p>Using SQLite I can do this&#xA;<code>CREATE TABLE users (authors text[])</code></p>&#xA;&#xA;<p>How can I insert several values to authors ?</p>&#xA;,11180592,,,,2019-03-10 21:57:21,Several authors for one book in SQL,<javascript><sqlite><graphql>,2,0,0,2019-03-10 21:46:15
55102722,1,,,0,706,"<p>I tried setting up GraphQL with strapi and policies to limit user access. Normal API call gives us user info in <code>ctx.state.user</code>, but while using GraphQL this object is undefined inside api policies. Although I am able to access <code>ctx.state.user</code> inside api controller.</p>&#xA;&#xA;<pre>&#xA;'use strict';&#xA;&#xA;/**&#xA; * `hasViewPermissions` policy.&#xA; */&#xA;&#xA;module.exports = async (ctx, next) => {&#xA;  console.log(ctx.state.user);// Undefined&#xA;&#xA;  await next();&#xA;};&#xA;&#xA;</pre>&#xA;&#xA;<p><strong>schema.graphql for api</strong></p>&#xA;&#xA;<pre><code>module.exports = {&#xA;  resolver: {&#xA;      Query: {&#xA;          posts: {&#xA;              description: 'Return a list of posts',&#xA;              policy: [&#xA;                  'hasViewPermissions',&#xA;              ],&#xA;              resolver: 'Posts.find'&#xA;          },&#xA;      }&#xA;  },&#xA;};&#xA;</code></pre>&#xA;&#xA;<p><code>Node Version: v11.6.0</code>&#xA;<code>Strapi: 3.0.0-alpha.24.1</code></p>&#xA;&#xA;<p>Thanks</p>&#xA;",5396441,,5396441,2019-03-13 10:52:47,2021-05-20 03:07:19,Strapi: GraphQL ctx.state.user undefined inside policies,<javascript><node.js><graphql><strapi>,2,2,0,2019-03-11 13:17:17
55112782,2,,55008960,1,,"<p>In the solution outlined by Michael in the attached SO question, you are not working with any Lambda-type resolvers. Instead, you are setting up a DynamoDB stream to trigger a Lambda function (as outlined in <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.Lambda.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Streams.Lambda.html</a>). Then, the code in that lambda function takes the data changed in DynamoDB to make a call to your AppSync endpoint. Make sure to send any necessary authentication headers along with the request from the Lambda.</p>&#xA;&#xA;<pre><code>+--------+     +---------------+     +----------------+&#xA;|DynamoDB| --&gt; |Lambda Function| --&gt; |AppSync mutation|&#xA;+--------+     +---------------+     +----+-----+-----+&#xA;                                          |     |&#xA;                                     +----+     +----+&#xA;                                     v               v&#xA;                               +----------+    +----------+&#xA;                               |AppSync   |    |AppSync   |&#xA;                               |subscriber|    |subscriber|&#xA;                               +----------+    +----------+&#xA;</code></pre>&#xA;&#xA;<p>The specific operation you are sending to the appsync endpoint is a mutation you have added, that doesn't have a data source (NONE-type datasource), and uses a local resolver to re-broadcast whatever data was sent to that mutation to any subscribers who have make a subscription request. The key point to note is DynamoDB is triggering the Lambda, not AppSync.</p>&#xA;",1457398,,,,2019-03-12 01:24:39,"",,0,4,0,2019-03-12 01:24:39
55113542,1,55113800,,10,18006,"<p>Previously, I just typed my <code>input KeyInput</code> as <code>mode: String!</code>, and I'm looking to change the type from String! to a custom enum.  </p>&#xA;&#xA;<p>I have the tried following schema:</p>&#xA;&#xA;<pre><code>enum Mode= {&#xA;    test&#xA;    live&#xA;}&#xA;&#xA;input KeyInput = {&#xA;    mode: Mode!&#xA;}&#xA;&#xA;type Key {&#xA;    name,&#xA;    mode&#xA;}&#xA;&#xA;type Query {&#xA;    Keys(input: KeyInput): [Key]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And my query looks like this:</p>&#xA;&#xA;<pre><code>query{&#xA;     Keys(input: {mode: ""test""}){&#xA;        name&#xA;     }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, I get the following error:</p>&#xA;&#xA;<pre><code>      ""message"": ""Expected type Mode!, found \""test\""; Did you mean the enum value test?""&#xA;</code></pre>&#xA;&#xA;<p>Is it possible to have enum values resolve String values?  If I remove the quotes from the input, it will work.  However, I need to be able to continue to resolve the Mode as Strings.  </p>&#xA;",1575719,,,,2019-03-12 03:41:50,How to have GraphQL enum resolve Strings,<javascript><graphql><graphql-js><apollo-client><apollo-server>,1,2,0,2019-03-12 03:08:29
55145237,1,55146023,,9,2472,"<p>I'm needing to create a searchable listing table where some records are of type <code>ORGANIZATION</code> or <code>RESOURCE</code>. The relationshipis one-to-many. So, an Organization can have many Resources. How can I create this relationship under one model?</p>&#xA;&#xA;<p>Using AWS Amplify GraphQL API...</p>&#xA;&#xA;<p>Like this? <code>schema.graphql</code></p>&#xA;&#xA;<pre><code>enum ListingType {&#xA;  ORGANIZATION&#xA;  RESOURCE&#xA;}&#xA;type Listing @model {&#xA;  id: ID!&#xA;  title: String!&#xA;  type: ListingType!&#xA;  orginzation: Listing&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Yet, in Mutations, I can't reference a parent organization when creating my first Resource:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/NuHMv.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/NuHMv.png"" alt=""enter image description here""></a></p>&#xA;",3979495,,,,2019-03-13 15:49:42,"In graphql schema, how can I create a parent/child relationship of same model?",<graphql><aws-amplify>,1,3,0,2019-03-13 15:12:00
55151128,1,,,8,3958,"<p>I'm trying to update a GraphQL subscription when a DynamoDb table receives a new row. I got the following code working with only the RekognitionId, but I'm not trying to send the entire NewImage object, and I cannot make it work. I get all sorts of type problems, but with no real information to solve it with. The most telling was: </p>&#xA;&#xA;<p><code>""Error: GraphQL error: Variable 'input' has an invalid value. Expected type 'Map' but was 'String'. Variables for input objects must be an instance of type 'Map'.""</code></p>&#xA;&#xA;<p>Unfortunately, I can't find a single reference to a GraphQL type called ""map"", so it's probably scrambled.</p>&#xA;&#xA;<p>Does anyone have any experience of this? This is my Lambda function, like I said it worked with only RekognitionId formatted as a dynamoDb semi-json-string <code>{""S"": ""id""}</code></p>&#xA;&#xA;<pre><code>global.WebSocket = require('ws');&#xA;require('es6-promise').polyfill();&#xA;require('isomorphic-fetch');&#xA;const AWS = require('aws-sdk');&#xA;const aws_exports = require('./aws-exports').default;&#xA;const AWSAppSyncClient = require('aws-appsync').default;&#xA;&#xA;exports.handler = async (event, context, callback) =&gt; {&#xA;    if(!event.Records.length){&#xA;        console.log('no records');&#xA;        return false;&#xA;    }&#xA;    const AUTH_TYPE = require('aws-appsync/lib/link/auth-link').AUTH_TYPE;&#xA;    const url = aws_exports.ENDPOINT;&#xA;    const region = aws_exports.REGION;&#xA;    const type = AUTH_TYPE.AMAZON_COGNITO_USER_POOLS;&#xA;&#xA;    AWS.config.update({&#xA;        region: aws_exports.REGION,&#xA;        credentials: new AWS.Credentials({&#xA;            accessKeyId: aws_exports.AWS_ACCESS_KEY_ID,&#xA;            secretAccessKey: aws_exports.AWS_SECRET_ACCESS_KEY&#xA;        })&#xA;    });&#xA;    const cognitoIdentityServiceProvider = new AWS.CognitoIdentityServiceProvider({ apiVersion: '2016-04-18' });&#xA;&#xA;    const initiateAuth = async ({ clientId, username, password }) =&gt; cognitoIdentityServiceProvider.initiateAuth({&#xA;        AuthFlow: 'USER_PASSWORD_AUTH',&#xA;        ClientId: clientId,&#xA;        AuthParameters: {&#xA;            USERNAME: username,&#xA;            PASSWORD: password,&#xA;        },&#xA;    }).promise();&#xA;    const { AuthenticationResult } = await initiateAuth({&#xA;        clientId: '*******',&#xA;        username: '*******',&#xA;        password: '*******',&#xA;    });&#xA;    const accessToken = AuthenticationResult &amp;&amp; AuthenticationResult.AccessToken;&#xA;&#xA;    // Import gql helper and craft a GraphQL query&#xA;    const gql = require('graphql-tag');&#xA;    const query = gql(`&#xA;    mutation faceAdded($input: UpdateFaceInput!) {&#xA;        updateFace(input: $input) { &#xA;            RekognitionId&#xA;            Emotions {&#xA;                Confidence&#xA;                Type&#xA;            }&#xA;            AgeRange&#xA;            Beard&#xA;            Mustache&#xA;            Gender&#xA;            Eyeglasses&#xA;        }&#xA;    }`);&#xA;    // Set up Apollo client&#xA;    const client = new AWSAppSyncClient({&#xA;        url: url,&#xA;        region: region,&#xA;        auth: {&#xA;            type: type,&#xA;            jwtToken: accessToken,&#xA;        },&#xA;        disableOffline: true      //Uncomment for AWS Lambda&#xA;    });&#xA;    return runMutationInClient(client, query, event.Records[0], (res) =&gt; {&#xA;        return res;&#xA;    });&#xA;}&#xA;&#xA;const runMutationInClient = async (client, query, RekognitionObj, callback) =&gt; {&#xA;    await client.hydrated().then( async (client) =&gt; {&#xA;        console.log('Running mutation in Lambda: ', query, 'RekognitionId: ', RekognitionObj);&#xA;&#xA;        var inputObj = AWS.DynamoDB.Converter.unmarshall(RekognitionObj.dynamodb.NewImage)&#xA;&#xA;        await client.mutate({&#xA;            mutation: query,&#xA;            variables: {&#xA;                input: {&#xA;                    RekognitionId: {""S"": inputObj.RekognitionId},&#xA;                    Emotion: {""L"": []}&#xA;                }&#xA;            },&#xA;            fetchPolicy: 'no-cache'&#xA;        }).then(function logData(data) {&#xA;            console.log('LAMBDA results of query: ', data);&#xA;            callback(data);&#xA;        })&#xA;        .catch((error)=&gt;{&#xA;            console.log('LAMBDA ERROR:', error);&#xA;            callback(error);&#xA;        });&#xA;&#xA;    });&#xA;};&#xA;</code></pre>&#xA;",1832489,,174777,2019-03-13 22:27:01,2022-01-07 14:35:23,Send graphQL mutation based on DynamoDb stream with NodeJS,<node.js><amazon-web-services><aws-lambda><amazon-dynamodb><graphql>,5,3,0,2019-03-13 21:01:35
55163182,2,,54998492,3,,"<p>This happens when there is an unapplied migration in the management schema.</p>&#xA;<p>To resolve this follow the following steps:</p>&#xA;<ol>&#xA;<li><p>Connect to your database using a GUI(like tableplus.io))</p>&#xA;</li>&#xA;<li><p>Change your database schema to management schema</p>&#xA;<p><img src=""https://v1.prisma.io/forum/uploads/default/original/2X/2/26d2b35b8f914b867836155a0dec99c15442bfd3.jpeg"" alt=""image|268x71"" /></p>&#xA;</li>&#xA;<li><p>Goto the migration table</p>&#xA;<p><img src=""https://v1.prisma.io/forum/uploads/default/original/2X/6/69e2d7149816ac04cf191ad304169293f6cb4e36.png"" alt=""image|189x59"" /></p>&#xA;</li>&#xA;<li><p>Delete the last row</p>&#xA;</li>&#xA;</ol>&#xA;<p><img src=""https://v1.prisma.io/forum/uploads/default/original/2X/7/7b05640f374286b3e5d635644fe3671f676062cf.png"" alt=""image|690x53"" /></p>&#xA;<p>Then try to redeploy your service.</p>&#xA;",7152576,,7152576,2020-12-28 10:12:18,2020-12-28 10:12:18,"",,0,0,0,2019-03-14 12:58:58
55173990,2,,55132782,2,,"<p>By default the Amplify codegen only will operate on top-level filters. You can extend this to include filters for the attributes nested in ArticleMetadata.</p>&#xA;&#xA;<p>You will need to augment the <code>ModelArticleFilterInput</code> type to include the category field. Assuming that the metadata field in the article table is backed by a DynamoDB map, you can filter based on the map value. You will need to modify the listArticles resolver's Request Mapping Template VTL to add the filter expression that contains something like <code>metadata.category = :category</code> when there is a value for cateogry in the filter argument.</p>&#xA;",1457398,,,,2019-03-15 00:37:19,"",,0,3,0,2019-03-15 00:37:19
55181856,1,55182418,,1,1273,"<p>I am using React JS app to submit data with the AWS AppSync client and a GraphQL API to a NoSQL Table in the cloud. I autogenerated the GraphQL operations with AWS Amplify and now I am attempting to submit the following operation in my React code:&#xA;(note and company are mere string values held in React's state)</p>&#xA;&#xA;<pre><code>  createOffer(note, company) {&#xA;    const input = {&#xA;            place: company,&#xA;            title_de: note,&#xA;            category: ""product"",&#xA;        }&#xA;    return API.graphql(graphqlOperation(mutations.createOffers, {input: input&#xA;    }));&#xA;</code></pre>&#xA;&#xA;<p>This produces an exception ""[object Object]""</p>&#xA;&#xA;<p>Now if I pass the strings in directly like so</p>&#xA;&#xA;<pre><code>  createOffer() {&#xA;    const input = {&#xA;            place: ""Example Company "",&#xA;            title_de: ""Example Title"",&#xA;            category: ""product"",&#xA;        }&#xA;    return API.graphql(graphqlOperation(mutations.createOffers, {input: input&#xA;    }));&#xA;</code></pre>&#xA;&#xA;<p>it works fine.&#xA;The only workaround I've found so far is to wrap the variables holding string values in JSON.stringify(company) and JSON.stringify(note). But then the corresponding database entries are wrapped in double quotes ""Example Company"" rather than Example Company.</p>&#xA;&#xA;<p>I want to avoid manually modifying the autogenerated GraphQL API code since I expect it to change frequently. </p>&#xA;&#xA;<p>Is there an option on the client side to get the actual string from React state into the API call without GraphQL identifying it as an object or it ending up with double quotes in the database?</p>&#xA;",4572811,,,,2019-03-15 12:15:53,How to pass a variable holding a string to a GraphQL query via the AWS AppSync client?,<reactjs><graphql><aws-appsync><aws-amplify><appsync-apollo-client>,1,0,0,2019-03-15 11:43:10
55243969,1,55245050,,14,2966,<p>I understand that context is what ever name you define in your Lambda functions but when it comes to Appsync resolvers I'm a bit confused. I've seen both <code>$ctx</code> and <code>$context</code> being used in AppSync resolvers including in AWS docs. Some of AWS's own code generation tools like AWS Amplify CLI create resolvers that use both in the same code! I can't find anything in the docs explaining this. What's going on here?</p>&#xA;,3376065,,,,2019-03-19 15:51:23,AWS Appsync $ctx vs $context in resolvers,<amazon-web-services><graphql><aws-appsync><appsync-apollo-client><aws-appsync-ios>,1,1,0,2019-03-19 14:58:47
55245050,2,,55243969,25,,"<p><em>(AWS AppSync dev here)</em></p>&#xA;&#xA;<p><code>$ctx</code> and <code>$context</code> in AWS AppSync refer to the same <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html"" rel=""noreferrer"">Resolver Context</a>. We added <code>$ctx</code> as an alias for <code>$context</code> to reduce the number of characters users have to type (<code>$ctx</code> is 50% shorter than <code>$context</code>!!)</p>&#xA;&#xA;<p>Choosing <code>$context</code> or <code>$ctx</code> is a personal preference. I prefer <code>$ctx</code> when I'm authoring AWS AppSync resolvers.</p>&#xA;",137598,,,,2019-03-19 15:51:23,"",,0,4,0,2019-03-19 15:51:23
55261889,2,,55261246,0,,<p>Use this code instead of yours and change 127.0.0.1 with your laptop IP</p>&#xA;&#xA;<pre><code>&lt;key&gt;NSAppTransportSecurity&lt;/key&gt;&#xA;    &lt;dict&gt;&#xA;        &lt;key&gt;NSAllowsArbitraryLoads&lt;/key&gt;&#xA;        &lt;true/&gt;&#xA;        &lt;key&gt;NSExceptionDomains&lt;/key&gt;&#xA;        &lt;dict&gt;&#xA;            &lt;key&gt;127.0.0.1&lt;/key&gt;&#xA;            &lt;dict&gt;&#xA;                &lt;key&gt;NSTemporaryExceptionAllowsInsecureHTTPLoads&lt;/key&gt;&#xA;                &lt;true/&gt;&#xA;            &lt;/dict&gt;&#xA;        &lt;/dict&gt;&#xA;    &lt;/dict&gt;&#xA;</code></pre>&#xA;,8370559,,,,2019-03-20 13:29:32,"",,0,2,0,2019-03-20 13:29:32
55261983,1,,,2,5079,"<p>I have mutation as follows:</p>&#xA;&#xA;<pre><code>&lt;Mutation&#xA;    mutation={ADD_NEW_SLOT}&#xA;    refetchQueries={() =&gt; [{ query: GET_COMPANY_ADDRESSES, variables: { companyId: this.props.session.company.id } }]}&#xA;    awaitRefetchQueries={true}&#xA;&gt;&#xA;     .......&#xA;&lt;/Mutation&gt;&#xA;</code></pre>&#xA;&#xA;<p>Where <strong>GET_COMPANY_ADDRESSES</strong> is exported from a parent component.</p>&#xA;&#xA;<p>But it doesn't refresh after the mutation is done.</p>&#xA;&#xA;<p>What am I doing wrong?</p>&#xA;&#xA;<p><strong>UPDATE</strong></p>&#xA;&#xA;<p>The return of the render function in the <strong>parent</strong> component is as follows:</p>&#xA;&#xA;<pre><code>&lt;Query query={GET_COMPANY_ADDRESSES} variables={{companyId: session.company.id}} notifyOnNetworkStatusChange={true} fetchPolicy={'cache-and-network'}&gt;&#xA;    {({loading, error, refetch, data}) =&gt; {&#xA;        if (loading) return &lt;LoadingIndicator/&gt;;&#xA;        if (error) return &lt;ErrorIndicator description={error.message}/&gt;;&#xA;&#xA;        const treeNodes = convertSlotsToTree(data);&#xA;        const address = data.companyAddresses[1];&#xA;&#xA;        return (&#xA;            &lt;AddSlot address={address}&#xA;                     toggleSlotForm={this.props.togglePanel}&#xA;                     session={this.props.session}/&gt;&#xA;        )&#xA;    }}&#xA;&lt;/Query&gt;&#xA;</code></pre>&#xA;&#xA;<p>The graphql query is in the same file and it is as follows:</p>&#xA;&#xA;<pre><code>export const GET_COMPANY_ADDRESSES = gql`&#xA;      query CompanyAddresses($companyId: Int!) {&#xA;        companyAddresses(companyId: $companyId) {&#xA;          id    &#xA;          name&#xA;          default&#xA;          compound&#xA;          address {&#xA;            id&#xA;            addressFull&#xA;            countryCode&#xA;            city&#xA;            postCode&#xA;            slotSet{&#xA;                id&#xA;                area&#xA;                zone&#xA;                aisle&#xA;                side&#xA;                level&#xA;                position&#xA;                disabled&#xA;                col&#xA;                printEntry&#xA;                fullName&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    `;&#xA;</code></pre>&#xA;",3895259,,3895259,2019-03-20 14:37:23,2021-10-12 18:12:44,Refetch queries after Mutation doesn't work,<reactjs><graphql><react-apollo>,2,9,0,2019-03-20 13:34:28
55292420,2,,55261393,2,,"<p>I think you'll need to add a role and IAM signing configuration to the Data Source. Perform the following steps with the AWS CLI.</p>&#xA;&#xA;<ol>&#xA;<li>Attach an IAM role to the data source that grants the appropriate permissions to call the IoT Device Shadow operations. I think it's <code>iot:GetThingShadow</code> for this example.</li>&#xA;<li>Add an IAM configuration section to the AWS AppSync Data Source. This is NOT the resolver template.</li>&#xA;</ol>&#xA;&#xA;<pre><code>{&#xA;    ""endpoint"": ""https://&lt;iot-endpoint&gt;"",&#xA;    ""authorizationConfig"": {&#xA;       ""authorizationType"": ""AWS_IAM"",&#xA;       ""awsIamConfig"": {&#xA;         ""signingRegion"": ""eu-west-1"",&#xA;         ""signingServiceName"": ""iot""&#xA;       }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When AWS AppSync invokes your resolver, it will generate a SigV4 signature using the attached role and call the AWS IoT Device Shadow service. Try this out.</p>&#xA;",137598,,,,2019-03-22 03:18:44,"",,0,3,0,2019-03-22 03:18:44
55333851,2,,55331235,1,,"<p>You could use <a href=""https://graphql.org/learn/schema/#union-types"" rel=""nofollow noreferrer"">Union Types</a> to accomplish that. But as it states on the documentation:</p>&#xA;<blockquote>&#xA;<p>Note that members of a union type need to be concrete object types; you can't create a union type out of interfaces or other unions.</p>&#xA;</blockquote>&#xA;<p>So you cannot use <code>enum</code> or scalars like <code>Boolean</code> when building a <code>union</code> type, but you could do something like:</p>&#xA;<pre><code>enum permission { request, verify, view, modify }&#xA;&#xA;type PassPermission {&#xA;  permissions: permission&#xA;}&#xA;&#xA;type PassFalse {&#xA;  value: Boolean&#xA;}&#xA;&#xA;union Permissions = PassPermission | PassFalse&#xA;</code></pre>&#xA;<p>This way the type <code>Permissions</code> can have one of 2 types <code>PassPermission</code> or <code>PassFalse</code>.</p>&#xA;",3708153,,3708153,2022-05-30 06:19:55,2022-05-30 06:19:55,"",,0,0,0,2019-03-25 08:34:08
55372538,1,55378048,,0,206,"<p>Apollo client converts rest parameters into snake_case. How can I disable it?</p>&#xA;&#xA;<p>This my mutation:</p>&#xA;&#xA;<pre><code>import gql from 'graphql-tag'&#xA;&#xA;      export const CREATE = gql`&#xA;      mutation create(&#xA;        $name: String&#xA;        $email: String&#xA;      ) {&#xA;        account(input: { fields: [&#xA;          { &#xA;            fieldId: name&#xA;            value: $name&#xA;          },&#xA;          { &#xA;            fieldId: email&#xA;            value: $email&#xA;          }&#xA;        ] &#xA;        })&#xA;          @rest(&#xA;            type: ""gateway""&#xA;            path: ""/auth/gateway/create""&#xA;            method: ""POST""&#xA;          ) {&#xA;          __typename&#xA;        }&#xA;      }&#xA;    `&#xA;</code></pre>&#xA;&#xA;<p>where <code>fieldId</code> is converted into <code>field_id</code>. I need to use camelCase format.</p>&#xA;",968379,,,,2019-03-27 13:10:32,Disable apollo rest parameters camelCase conversion,<graphql><apollo><apollo-client>,1,0,0,2019-03-27 08:16:05
55381012,2,,55379640,3,,"<p>According to the official definition of <a href=""https://graphql.org/graphql-js/mutations-and-input-types/"" rel=""nofollow noreferrer"">Mutation</a>.</p>&#xA;&#xA;<blockquote>&#xA;  <p>If you have an API endpoint that alters data, like inserting data into a database or altering data already in a database, you should make this endpoint a Mutation rather than a Query. </p>&#xA;</blockquote>&#xA;&#xA;<p>In the case of checking for availability it does not change or create any data, so it should be a Query.</p>&#xA;",3708153,,,,2019-03-27 15:33:15,"",,0,1,0,2019-03-27 15:33:15
55393289,1,,,1,903,"<p>I am using <code>graphql-ruby</code> in my rails application.&#xA;Currently, my app's directory structure looks like this.</p>&#xA;&#xA;<pre><code>app &#xA; - controllers &#xA;  - application_controller.rb&#xA;  - graphql_controller.rb&#xA;  - admin&#xA;    - application_controller.rb&#xA;    - graphql_controller.rb&#xA;- graphql&#xA;  - types&#xA;  - mutations&#xA;  - graphql_schema.rb&#xA;</code></pre>&#xA;&#xA;<p>I am trying to make a simple admin page but I'm not sure how I should hanlde namespaces with graphql-ruby.</p>&#xA;&#xA;<p>Should I make <code>Admin</code> directory under <code>graphql</code> as well and make <code>types</code> and <code>mutations</code> under it for the data I want to use on the admin page??</p>&#xA;&#xA;<p>Also, should I make another endpoint for <code>Admin</code> like the code below??</p>&#xA;&#xA;<pre class=""lang-rb prettyprint-override""><code>Rails.application.routes.draw do&#xA; namespace :admin do&#xA;   post :graphql, to: 'graphql#execute'&#xA; end&#xA; post :graphql, to: 'graphql#execute'&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>Can you possibly give me the link of a project that does what I am trying to do with graphql-ruby??? That would be a tremendous help.</p>&#xA;",11128859,,11128859,2019-03-28 09:24:09,2019-03-29 03:33:49,GraphQL Ruby Using NameSpace,<ruby-on-rails><graphql><graphql-ruby>,1,0,0,2019-03-28 08:43:26
55407154,1,,,0,563,"<p>I'm setting up permissions for user on a CRUD app, I want to give myself the permission of <code>ADMIN</code> but I can't seem to do it. I have set up my data type for a <code>user</code> as follows:</p>&#xA;&#xA;<p><code>datamodel.graphql</code>:</p>&#xA;&#xA;<pre><code>type User {&#xA;    id: ID! @unique&#xA;    name: String!&#xA;    email: String! @unique&#xA;    password: String!&#xA;    resetToken: String&#xA;    resetTokenExpiry: String&#xA;    permissions: [Permission]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>schema.graphql</code>:</p>&#xA;&#xA;<pre><code>type User {&#xA;    id: ID!&#xA;    name: String!&#xA;    email: String!&#xA;    permissions: [Permission!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When using my Prisma console, I can fill out all the fields <em>except</em> for <code>permissions</code>. </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/1dYGD.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1dYGD.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>And when trying to update an existing user's permissions, I can't seem to type anything in that field to update it. Is my schema wrong?</p>&#xA;",10122964,,,,2019-04-08 16:34:28,How do you update/create a null field in a new record with Prisma,<graphql><prisma>,1,0,0,2019-03-28 21:31:28
55411460,1,,,1,1472,"<p>Although i have created a mutation and inserted it in graphql schema, it returns the error, Checked with other instances of same error there isn't any solution regarding the current issue </p>&#xA;&#xA;<pre><code>'schemas' =&gt; [&#xA;        'default' =&gt; [&#xA;            'query' =&gt; [&#xA;                'articles' =&gt; App\GraphQL\Query\ArticlesQuery::class,&#xA;            ],&#xA;            'mutation' =&gt; [&#xA;                'updatearticle' =&gt; App\GraphQL\Mutation\UpdateArticle::class&#xA;            ],&#xA;            'middleware' =&gt; [],&#xA;            'method' =&gt; ['get', 'post'],&#xA;        ],&#xA;    ],&#xA;</code></pre>&#xA;",11023120,,11023120,2019-03-29 06:47:38,2019-03-29 06:47:38,"Error - Schema is not configured for mutations, although mutation included in the schema",<php><laravel><graphql>,0,3,0,2019-03-29 06:12:37
55439825,1,55449192,,1,1441,"<p>I have successfully created data using mutation but when I update that data I am getting this error </p>&#xA;&#xA;<blockquote>&#xA;  <p>Variable 'input' has coerced Null value for NonNull type 'Int!</p>&#xA;</blockquote>&#xA;&#xA;<p>Here is my query schema</p>&#xA;&#xA;<pre><code>type SmoothstarRegisteration @model @versioned {&#xA;  id: ID!&#xA;&#xA;  active: Boolean!&#xA;&#xA;  type: String!&#xA;  registerationSubmitDate: String&#xA;  registerationApprovedDate: String&#xA;  userId: String!&#xA;  videoInfoReviewed: Boolean!&#xA;&#xA;  registerationAttempts: Int!&#xA;  registerationStatus: String&#xA;&#xA;  orderNum: String&#xA;  orderInfo: OrderInfo @connection(name: ""SmoothstarRegisterationOrder"")&#xA;&#xA;  address: String&#xA;  postCode: String&#xA;  region: String&#xA;  dateOfBirth: String&#xA;  smoothstarModel: String&#xA;  purchaseDate: String&#xA;  shopName: String&#xA;  ocrInfo: OCRInfo @connection(name: ""SmoothstarRegisterationOCR"")&#xA;&#xA;  privacyPolicyReviewed: Boolean!&#xA;  extendedPolicyReviewed: Boolean!&#xA;  termsOfUseReviewed: Boolean!&#xA;&#xA;  files: [RegisterationMedia!] @connection(name: ""SmoothstarRegisterationMedia"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the update query</p>&#xA;&#xA;<pre><code>mutation UpdateSmoothstarRegisteration(&#xA;  $input: UpdateSmoothstarRegisterationInput!&#xA;) {&#xA;  updateSmoothstarRegisteration(input: $input) {&#xA;    id&#xA;    active&#xA;    type&#xA;    registerationSubmitDate&#xA;    registerationApprovedDate&#xA;    userId&#xA;    videoInfoReviewed&#xA;    registerationAttempts&#xA;    registerationStatus&#xA;    orderNum&#xA;    orderInfo {&#xA;      id&#xA;      active&#xA;      type&#xA;      orderNum&#xA;    }&#xA;    address&#xA;    postCode&#xA;    region&#xA;    dateOfBirth&#xA;    smoothstarModel&#xA;    purchaseDate&#xA;    shopName&#xA;    ocrInfo {&#xA;      id&#xA;      active&#xA;      type&#xA;      customerId&#xA;      customerEmail&#xA;      customerPhone&#xA;      orderNum&#xA;      address&#xA;    }&#xA;    privacyPolicyReviewed&#xA;    extendedPolicyReviewed&#xA;    termsOfUseReviewed&#xA;    files {&#xA;      items {&#xA;        id&#xA;        version&#xA;      }&#xA;      nextToken&#xA;    }&#xA;    version&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the code for calling API.</p>&#xA;&#xA;<pre><code>return API.graphql(graphqlOperation(operation, data))&#xA;    .then(response =&gt; {&#xA;      console.log(`API (${name}) Response =&gt; `, response);&#xA;      return response;&#xA;    })&#xA;    .catch(error =&gt; {&#xA;      throw error;&#xA;    });&#xA;</code></pre>&#xA;&#xA;<p>In <code>Operation</code> I am sending the update query where as in data I am putting</p>&#xA;&#xA;<pre><code>{ input: {&#xA;    active: true&#xA;    extendedPolicyReviewed: true&#xA;    id: ""9dfc480f-7bed-42ed-a585-820f5e8c1485""&#xA;    orderNum: ""ABCD1234xyz""&#xA;    privacyPolicyReviewed: true&#xA;    registerationAttempts: 2&#xA;    registerationStatus: ""registered""&#xA;    registerationSubmitDate: ""2019-03-31""&#xA;    smoothstarRegisterationOrderInfoId: ""03b6967d-4b86-4c2d-9115-fb7a40a9c474""&#xA;    termsOfUseReviewed: true&#xA;    type: ""W""&#xA;    userId: ""m.daniyal.awan@gmail.com""&#xA;    videoInfoReviewed: true &#xA;}}&#xA;</code></pre>&#xA;",8977860,,,,2019-04-01 06:29:51,Error updating GraphQL data through mutation in AWS AppSync,<react-native><graphql><aws-appsync><aws-amplify>,1,1,0,2019-03-31 10:08:20
55465466,1,55467448,,1,371,"<p>It's my first time using Amplify and GraphQL. I've used AWS Amplify to create my backend and connect to various cloud services (including a GraphQL API that connects to a DynamoDB table). I want to continue developing my front-end locally but draw data from a local DynamoDB (which I have set up according to this <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html</a>) instead of my cloud resource. Is this possible?</p>&#xA;&#xA;<p>I found this <a href=""https://github.com/99xt/serverless-dynamodb-local"" rel=""nofollow noreferrer"">repo</a> however not sure if I can integrate it with my current amplify/graphQL setup.</p>&#xA;",6755649,,,,2021-08-31 16:39:46,Is it possible to connect to a local Dynamo DB using a GraphQL API setup by AWS Amplify?,<amazon-dynamodb><graphql><aws-appsync><aws-amplify>,2,0,0,2019-04-02 00:51:58
55467448,2,,55465466,0,,"<p>There isn't currently a native integration with DynamoDB local, unfortunately. Might I ask, why would you prefer that to a full table?</p>&#xA;&#xA;<p>You might be able to get some test scenarios worked out with a local resolver, however they'd be hard-coded mocks rather than real, useful scenarios.</p>&#xA;",1229845,,,,2019-04-02 05:22:29,"",,0,2,0,2019-04-02 05:22:29
55486919,1,,,1,263,<p>Would like to know how Hasura works when a graphql query or mutation comes to the endpoint? How it processes query? How it generates schema? How it converts graphql to postgres syntax to access data?</p>&#xA;,6192046,,,,2019-04-03 08:24:08,How Hasura works when a graphql query is sent to it?,<graphql><hasura>,1,0,0,2019-04-03 04:06:42
55490400,2,,55486919,1,,"<p>Here are links to the 2 main resources that should give you more insight into how Hasura is doing things internally:</p>&#xA;<ol>&#xA;<li><p><strong>The query engine:</strong> This is the core that translates GraphQL queries with access control rules to the right SQL</p>&#xA;<p><a href=""https://blog.hasura.io/architecture-of-a-high-performance-graphql-to-sql-server-58d9944b8a87"" rel=""nofollow noreferrer"">https://blog.hasura.io/architecture-of-a-high-performance-graphql-to-sql-server-58d9944b8a87</a></p>&#xA;</li>&#xA;<li><p><strong>The Hasura metadata:</strong> This is the Hasura configuration that gives Hasura indications on how to generate the GraphQL schema, the permissions rules etc.</p>&#xA;<p><a href=""https://docs.hasura.io/1.0/graphql/manual/how-it-works/index.html"" rel=""nofollow noreferrer"">https://docs.hasura.io/1.0/graphql/manual/how-it-works/index.html</a></p>&#xA;</li>&#xA;</ol>&#xA;",3364697,,-1,2020-06-20 09:12:55,2019-04-03 08:24:08,"",,0,0,0,2019-04-03 08:24:08
55491991,1,,,4,3373,"<p>I setup my backend using AWS Amplify, everything works using API_KEY but now I'm trying to use AWS_IAM but it's throwing me the error</p>&#xA;&#xA;<p>I don't want to use AWS Cognito User pools because it won't allow unauth users to access my API</p>&#xA;&#xA;<pre><code>Amplify.configure({&#xA;  API: {&#xA;    ""aws_project_region"": ""ap-southeast-1"",&#xA;    ""aws_appsync_graphqlEndpoint"": ""endpoint"",&#xA;    // ""aws_appsync_authenticationType"": ""API_KEY"",&#xA;    ""aws_appsync_authenticationType"": ""AWS_IAM"",&#xA;  },&#xA;  Auth: {&#xA;    identityPoolId: process.env.REACT_APP_identityPoolId,&#xA;    region: process.env.REACT_APP_awsRegion,&#xA;    userPoolId: process.env.REACT_APP_userPoolId,&#xA;    userPoolWebClientId: process.env.REACT_APP_userPoolAppClientId,&#xA;   },&#xA;  Storage: { &#xA;    bucket: process.env.REACT_APP_bucketName,&#xA;    region: process.env.REACT_APP_awsRegion,&#xA;    identityPoolId: process.env.REACT_APP_identityPoolId&#xA;   }&#xA;});&#xA;</code></pre>&#xA;",4766925,,,,2019-04-03 09:42:38,Getting `Cannot read property 'byteLength' of undefined` when accessing AppSync with AWS_IAM authentication type,<amazon-web-services><graphql>,0,3,0,2019-04-03 09:42:38
55536222,1,55536766,,0,481,"<p>Currently I'm using apollo-server-lambda npm version 1.4.0. After updating the npm to version 2.4.8 it doesn't work.</p>&#xA;&#xA;<p>Here is my serverless lambda code</p>&#xA;&#xA;<pre><code>var {graphqlLambda} = require(""apollo-server-lambda"");&#xA;var {makeExecutableSchema} = require('graphql-tools');&#xA;var {schema} = require('./schema');&#xA;var {resolvers} = require('./resolvers');&#xA;const vandium = require('vandium' );&#xA;const myGraphQLSchema = makeExecutableSchema({&#xA;typeDefs: schema, resolvers,&#xA;logger: console,&#xA;});&#xA;module.exports.graphqlHandler = (event, context, callback) =&gt; {  &#xA;context.callbackWaitsForEmptyEventLoop = false;&#xA;function callbackFilter(error, output) {&#xA;  output.headers['Access-Control-Allow-Origin'] = '*';&#xA;  callback(error, output);&#xA;}&#xA;  const handler = graphqlLambda({ schema: myGraphQLSchema });&#xA;  return handler(event, context, callbackFilter);   &#xA;};&#xA;</code></pre>&#xA;&#xA;<p>It throws an error:&#xA;     Failure: graphqlLambda is not a function</p>&#xA;",9118112,,9118112,2019-04-08 07:00:34,2019-04-08 07:00:34,Serverless lambda doesn't work after updating apollo-server-lambda npm,<node.js><lambda><apollo><serverless><apollo-server>,1,0,0,2019-04-05 13:12:13
55559749,2,,55559511,1,,"<p>This is something that's specific to the server-side implementation. For example, the server's schema could look something like this:</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;  createPost(title: String! url: String!): Post&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In this case, if you're using variables, as a client you're forced to use one variable per argument since GraphQL does not support some kind of ""spread"" syntax. However, the schema can utilize an Input Object Type to group a number of arguments, like this:</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;  createPost(input: CreatePostInput!): Post&#xA;}&#xA;&#xA;input CreatePostInput {&#xA;  title: String!&#xA;  url: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In this case, you can use a single variable that's an object:</p>&#xA;&#xA;<pre><code>mutation($input: CreatePostInput!) {&#xA;  createPost(input: $input) {&#xA;    title&#xA;    url&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But, again, the schema has to support this sort of usage. As a client, you do not have control over that. </p>&#xA;",6024220,,,,2019-04-07 13:59:40,"",,0,2,0,2019-04-07 13:59:40
55565337,1,55576196,,0,946,"<p>I have a basic VueJS app that connects to a AWS Amplify DynamoDB with GraphQL. Everything connects, data is available to work with locally. The app can also be deployed successfully on a given branch.</p>&#xA;&#xA;<p>However, even with the <code>aws-exports</code> file present with the GraphQL endpoint settings, the deployed app doesn't connect to the DB. </p>&#xA;&#xA;<pre><code>// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.&#xA;&#xA;const awsmobile =  {&#xA;    ""aws_appsync_graphqlEndpoint"": ""https://xxxxxxx.appsync-api.us-east-2.amazonaws.com/graphql"",&#xA;    ""aws_appsync_region"": ""us-east-2"",&#xA;    ""aws_appsync_authenticationType"": ""API_KEY"",&#xA;    ""aws_appsync_apiKey"": ""xxxxxxxx"",&#xA;};&#xA;&#xA;export default awsmobile;&#xA;</code></pre>&#xA;&#xA;<p>Instead accessing the app at this link throws this error:</p>&#xA;&#xA;<pre><code>""No graphql endpoint provided.""&#xA;</code></pre>&#xA;&#xA;<p>I deployed using AWS Amplify console. Any advice is appreciated.</p>&#xA;",5513243,,,,2019-04-08 14:53:15,Why doesn't a deployed app connect to the GraphQL endpoint when the the settings exist in the branch?,<deployment><vuejs2><graphql><aws-amplify>,1,0,0,2019-04-08 02:00:28
55576196,2,,55565337,1,,"<p>After some snooping around I found the fix, and it's pretty simple. It's not enough to have the AppSync settings, we have to actually configure Amplify with the GraphQL endpoints and api key like so:</p>&#xA;&#xA;<pre><code>Amplify.configure(aws_exports);&#xA;Vue.use(AmplifyPlugin, AmplifyModules);&#xA;Vue.config.productionTip = false&#xA;&#xA;Amplify.configure({&#xA;  API: {&#xA;    graphql_endpoint: 'https://xx.appsync-api.us-east-2.amazonaws.com/graphql',&#xA;    graphql_headers: async () =&gt; ({&#xA;      'x-api-key': 'xxxx',&#xA;    })&#xA;  }&#xA;});&#xA;</code></pre>&#xA;",5513243,,,,2019-04-08 14:53:15,"",,0,0,0,2019-04-08 14:53:15
55620529,1,,,1,501,"<p>I am using Express + Apollo Server + GraphQL + Mongoose + MongoDB to ""perform"" several CRUD operations on a database. </p>&#xA;&#xA;<p>One of the operations I am trying to make is to get the sites from the database and expand its users with their information for each record like this:</p>&#xA;&#xA;<pre><code>query {&#xA;    getSites {&#xA;        id&#xA;        name&#xA;        owner {&#xA;            name&#xA;            email&#xA;        }&#xA;        origins&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Instead, I am getting these results:</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;        ""getSites"": [{&#xA;                ""id"": ""5cae36182ab9b94e94ba9af5"",&#xA;                ""name"": ""Test site 1"",&#xA;                ""owner"": [{&#xA;                        ""name"": null,&#xA;                        ""email"": null&#xA;                    }&#xA;                ],&#xA;                ""origins"": [&#xA;                    ""test1"",&#xA;                    ""test2""&#xA;                ]&#xA;            }, {&#xA;                ""id"": ""5cae3a3798c302247c036544"",&#xA;                ""name"": ""Test site 2"",&#xA;                ""owner"": [{&#xA;                        ""name"": null,&#xA;                        ""email"": null&#xA;                    }&#xA;                ],&#xA;                ""origins"": [&#xA;                    ""test1"",&#xA;                    ""test2""&#xA;                ]&#xA;            }&#xA;        ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is my <strong>typeDef</strong> code for <strong>Site</strong>:</p>&#xA;&#xA;<pre><code>import { gql } from 'apollo-server-express';&#xA;&#xA;const site = gql `&#xA;    extend type Site {&#xA;        id: ID!&#xA;        name: String!&#xA;        origins: [String]&#xA;        owner: [User]&#xA;        createdOn: String&#xA;        updatedOn: String&#xA;    }&#xA;&#xA;    extend type Query {&#xA;        getSites: [Site]&#xA;        getSite(id: ID!): Site&#xA;    }&#xA;&#xA;    extend type Mutation {&#xA;        addSite(name: String!, owner: [String!], origins: [String]): Site&#xA;    }&#xA;`;&#xA;&#xA;export default site;&#xA;</code></pre>&#xA;&#xA;<p>If I <code>console.log(sites)</code> I see owner is an array of Strings.</p>&#xA;&#xA;<p><strong>Edit</strong>:</p>&#xA;&#xA;<p>If I change <code>addSite(name: String!, owner: [User], origins: [String]): Site</code> then I get when compiling:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Error: The type of Mutation.addSite(owner:) must be Input Type but got: [User]</p>&#xA;</blockquote>&#xA;&#xA;<p>My resolver looks like this:</p>&#xA;&#xA;<pre><code>getSites: async () =&gt; await Site.find().exec()&#xA;</code></pre>&#xA;&#xA;<p>What's the proper way to define relationships today? Thanks.</p>&#xA;",6421288,,6421288,2019-04-11 00:50:43,2019-04-11 00:51:58,Apollo Server Express + GraphQL relationships,<node.js><express><mongoose><graphql><apollo>,1,0,0,2019-04-10 20:05:11
55621611,2,,55435951,0,,"<p>I figured out a way, albeit slightly a cheater way.</p>&#xA;&#xA;<p>When I was creating the resource in the AppSync schema, there's a dropdown for ""additional indexes"" and if I make the initial index by ID, and then the second index ""name"" it'll create a query with a resolver for you.  In my case the</p>&#xA;&#xA;<pre><code>queryIngredientsByNameIndex(name: String!, first: Int, after: String): IngredientConnection&#xA;</code></pre>&#xA;&#xA;<p>query, with a resolver of</p>&#xA;&#xA;<pre><code>{&#xA;  ""version"": ""2017-02-28"",&#xA;  ""operation"": ""Query"",&#xA;  ""query"": {&#xA;    ""expression"": ""#name = :name"",&#xA;    ""expressionNames"": {&#xA;      ""#name"": ""name"",&#xA;    },&#xA;    ""expressionValues"": {&#xA;      "":name"": $util.dynamodb.toDynamoDBJson($ctx.args.name),&#xA;    },&#xA;  },&#xA;  ""index"": ""name-index"",&#xA;  ""limit"": $util.defaultIfNull($ctx.args.first, 20),&#xA;  ""nextToken"": $util.toJson($util.defaultIfNullOrEmpty($ctx.args.after, null)),&#xA;  ""scanIndexForward"": true,&#xA;  ""select"": ""ALL_ATTRIBUTES"",&#xA;}&#xA;</code></pre>&#xA;",5526712,,,,2019-04-10 21:33:44,"",,0,0,0,2019-04-10 21:33:44
55625847,1,,,0,506,"<p>I'm trying to create a resolver for a BatchCreateIngredients mutation I created, but when I run the mutation I'm getting an error of type MappingTemplate and I'm not sure why.</p>&#xA;&#xA;<p>My table's name is IngredientsTable and I'm not using any cognito verification.</p>&#xA;&#xA;<p><strong>The mutation:</strong></p>&#xA;&#xA;<pre><code>mutation batchCreateIngredient {&#xA;  batchCreateIngredients(&#xA;    input: [&#xA;    {name: ""Cookie"" vegan: VEGAN glutenfree: GLUTENFREE},&#xA;    {name: ""Pizza"", vegan: VEGAN, glutenfree: GLUTENFREE},&#xA;]) {&#xA;    items{&#xA;      id&#xA;      name&#xA;      vegan&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>The error message:</strong></p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""batchCreateIngredients"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""batchCreateIngredients""&#xA;      ],&#xA;      ""data"": null,&#xA;      ""errorType"": ""MappingTemplate"",&#xA;      ""errorInfo"": null,&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 6,&#xA;          ""column"": 3,&#xA;          ""sourceName"": null&#xA;        }&#xA;      ],&#xA;      ""message"": ""Item list elements can't be null for table 'IngredientTable' at path '$[tables]'""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>The Relevant Parts of My Schema:</strong></p>&#xA;&#xA;<pre><code>input CreateIngredientInput {&#xA;    name: String!&#xA;    vegan: Vegan!&#xA;    glutenfree: GlutenFree!&#xA;    popularity: Int&#xA;}&#xA;&#xA;enum GlutenFree {&#xA;    GLUTENFREE&#xA;    CONTAINS_GLUTEN&#xA;    UNKNOWN&#xA;}&#xA;&#xA;type Ingredient {&#xA;    name: String!&#xA;    id: ID!&#xA;    vegan: Vegan&#xA;    glutenfree: GlutenFree&#xA;    popularity: Int&#xA;}&#xA;&#xA;type IngredientConnection {&#xA;    items: [Ingredient]&#xA;    nextToken: String&#xA;}&#xA;&#xA;type Mutation {&#xA;    createIngredient(input: CreateIngredientInput!): Ingredient&#xA;    batchCreateIngredients(input: [CreateIngredientInput]): IngredientConnection&#xA;    updateIngredient(input: UpdateIngredientInput!): Ingredient&#xA;    deleteIngredient(input: DeleteIngredientInput!): Ingredient&#xA;}&#xA;&#xA;enum Vegan {&#xA;    VEGAN&#xA;    NON_VEGAN&#xA;    UNKNOWN&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>The Resolver for BatchCreateIngredients:</strong></p>&#xA;&#xA;<pre><code>#set($ingdata = [])&#xA;#foreach($ing in ${ctx.args.input})&#xA;    $util.qr($ingdata.add($util.dynamodb.toMapValues($item)))&#xA;#end&#xA;&#xA;{&#xA;    ""version"" : ""2018-05-29"",&#xA;    ""operation"" : ""BatchPutItem"",&#xA;    ""tables"" : {&#xA;        ""IngredientTable"": $utils.toJson($ingdata)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",5526712,,,,2020-09-10 16:49:53,"Appsync 'Batch Create' Resolver gives ""mapping template"" error",<amazon-dynamodb><graphql><velocity><aws-appsync><resolver>,2,1,0,2019-04-11 06:17:48
55688537,1,55694393,,4,1219,"<p>Im trying to update an item attribute in a <strong>DynamoDb</strong> table with <strong>AppSync</strong>. &#xA;Once successful i want to use the previous value of that attribute as the key in my next call (I'm using pipeline resolvers). </p>&#xA;&#xA;<p>To achieve this with <strong>DynamoDB</strong> you just set <strong>UPDATED_OLD</strong> as the return value.  </p>&#xA;&#xA;<p>I cannot find any documentation for specifying the return value of a DynamoDB resolver for AppSync.&#xA;Ive tried the following.  </p>&#xA;&#xA;<pre><code>{&#xA;  ""version"" : ""2018-05-29"",&#xA;  ""operation"" : ""UpdateItem"",&#xA;  ""key"": {&#xA;        ""id"": $util.dynamodb.toDynamoDBJson(""foo"")&#xA;      },&#xA;   ""condition"" : {&#xA;   ""expression"" : ""attribute_exists(id)""&#xA;    },&#xA;    ""update"" : {&#xA;    ""expression"" : ""SET bar = :bar"",&#xA;    ""expressionValues"" : {&#xA;        "":bar"" :  {""S"" : ""$bar""}&#xA;      }&#xA;    },&#xA;    ""returnValues"": ""UPDATED_OLD""&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>But its not valid syntax.</p>&#xA;&#xA;<pre><code>""message"": ""Unsupported element '$[returnValues]'.""&#xA;</code></pre>&#xA;",2169090,,,,2019-04-15 17:22:30,DynamoDB ReturnValues UPDATED_OLD in AppSync,<amazon-dynamodb><graphql><aws-appsync><vtl>,1,0,0,2019-04-15 11:48:55
55694393,2,,55688537,3,,"<p>The returnValues is not a valid field for the request mapping template of AppSync with DynamoDB. By default AppSync uses the <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html#API_UpdateItem_RequestParameters"" rel=""nofollow noreferrer"">ALL_NEW</a> parameter for updates. </p>&#xA;",1043698,,,,2019-04-15 17:22:30,"",,0,6,0,2019-04-15 17:22:30
55694779,2,,55691278,1,,"<p>Thank you for your interest in AWS AppSync. &#xA;You can create a Lambda datasource by providing your Lambda function arn and then attach a resolver on any field on your schema using that datasource. </p>&#xA;&#xA;<p>There is a tutorial you can follow using Lambda resolvers <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html</a></p>&#xA;",1060799,,,,2019-04-15 17:52:11,"",,0,0,0,2019-04-15 17:52:11
55718474,2,,55469603,0,,"<p>Currently, AppSync does not support passing JWT tokens from the parent to child resolver. The workaround you have mentioned might be one of the current options.</p>&#xA;",10886417,,,,2019-04-17 01:00:22,"",,0,0,0,2019-04-17 01:00:22
55729679,1,,,2,6884,"<p>I'm getting the following error when calling a lambda function through AppSync GraphQL: </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": null,&#xA;  ""errors"": [&#xA;    {&#xA;      ""path"": null,&#xA;      ""locations"": [{ ""line"": 2, ""column"": 3, ""sourceName"": null }],&#xA;      ""message"": ""Validation error of type SubSelectionNotAllowed: Sub selection not allowed on leaf type String of field sendSignatureRequest @ 'sendSignatureRequest'""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I haven't seen this error before. Where should I be looking to fix it? </p>&#xA;",1299229,,,,2019-04-17 14:29:22,How to fix Validation error of type SubSelectionNotAllowed,<aws-lambda><graphql><aws-appsync><aws-amplify>,1,0,0,2019-04-17 14:16:20
55729955,2,,55729679,2,,<p>Figured it out. The lambda function returns a string and I coded an object in the query. </p>&#xA;,1299229,,,,2019-04-17 14:29:22,"",,0,2,0,2019-04-17 14:29:22
55736270,2,,55625847,0,,"<p>From what I can tell, it looks like the issue is in the request mapping template. You have called the loop variable $ing, but you are passing ""$item"" to the toMapValues function. Can you try changing ""item"" to ""ing"" ?</p>&#xA;",6027,,,,2019-04-17 21:32:07,"",,0,0,0,2019-04-17 21:32:07
55793390,1,,,1,1255,"<p>I want to query all the items between two dates using AWS AppSync.&#xA;This my resolver :</p>&#xA;&#xA;<pre><code>{&#xA; ""version"" : ""2017-02-28"",&#xA;""operation"" : ""Query"",&#xA;""index"" : ""userInfoDate-index"",&#xA;""query"" : {&#xA;    ## Provide a query expression. **&#xA;    ""expression"": ""userInfoDate BETWEEN :start AND :end"",&#xA;    ""expressionValues"" : {&#xA;        "":start"" : { ""S"" : ""${ctx.args.start}"" },&#xA;        "":end"" : { ""S"" : ""${ctx.args.end}"" }&#xA;    }&#xA;}&#xA;&#xA;//Schema&#xA;type UserQuestionInfo @model {&#xA;  id: ID!&#xA;  userId: String!&#xA;  userName: String!&#xA;  userInfoDate : String!&#xA;  weight: String!&#xA;  height: String!&#xA;}&#xA;&#xA;type Query {&#xA;   getWeightByCreatedAt(start: String!, end: String!): UserQuestionInfo&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>But I am getting this error :</p>&#xA;&#xA;<p>Query key condition not supported (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException)&#xA;I don't know what's wrong or this does not support between query.&#xA;Please help</p>&#xA;",5470302,,5470302,2019-04-23 05:16:13,2022-08-24 10:27:11,Aws AppSync - query for all items between two dates,<graphql><aws-amplify><aws-appsync>,1,2,0,2019-04-22 11:06:59
55811530,1,55813306,,0,1121,"<p>I am learning to write tests for a MERNQ stack application and I am using cypress as my End to End testing tool. I am trying to make sure that my tests are written correctly so that they work as a long term solution. For now I just have one request for the route in question and I have the following test code:</p>&#xA;&#xA;<pre><code>describe('Song API', () =&gt; {&#xA;    it('should show at least one song', () =&gt; {&#xA;        cy.server();&#xA;        // cy.route('GET', '/graphql').as('graphql');&#xA;        cy.route({&#xA;            method: 'GET', // Route all GET requests&#xA;            url: 'http://localhost:8080/graphql', // that have a URL that matches '/graphql'&#xA;            response: {&#xA;                data: {&#xA;                    loading: false,&#xA;                    songs: [&#xA;                        {&#xA;                            id: 1,&#xA;                            name: 'Boo Ya',&#xA;                        },&#xA;                    ],&#xA;                },&#xA;            },&#xA;        }).as('getSongs');&#xA;        cy.visit('http://localhost:8080').then(() =&gt; {&#xA;            cy.get('.collection').find('.collection-item');&#xA;        });&#xA;    });&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I don't understand what about this code makes it wait for the graphql response to finish before running and additionally I am not getting the data that I set but instead the actual data from the database.</p>&#xA;&#xA;<p>This seems very strange to me.</p>&#xA;&#xA;<p>My component looks like this:</p>&#xA;&#xA;<pre><code>import React from 'react';&#xA;import gql from 'graphql-tag';&#xA;import { graphql } from 'react-apollo';&#xA;&#xA;const SongList = ({ data }) =&gt; {&#xA;    // console.log(data);&#xA;    function renderSongs() {&#xA;        console.log(data);&#xA;        if (data.loading) {&#xA;            return &lt;p&gt;Loading...&lt;/p&gt;;&#xA;        } else {&#xA;            return data.songs.map(song =&gt; {&#xA;                return (&#xA;                    &lt;li key={song.key} className=""collection-item""&gt;&#xA;                        {song.title}&#xA;                    &lt;/li&gt;&#xA;                );&#xA;            });&#xA;        }&#xA;    }&#xA;&#xA;    return &lt;ul className=""collection""&gt;{renderSongs()}&lt;/ul&gt;;&#xA;};&#xA;&#xA;const query = gql`&#xA;    query getSongs {&#xA;        songs {&#xA;            key: id&#xA;            title&#xA;        }&#xA;    }&#xA;`;&#xA;&#xA;export default graphql(query)(SongList);&#xA;</code></pre>&#xA;&#xA;<p>Any thoughts or remarks?</p>&#xA;",8344506,,,,2019-04-23 14:16:51,"Does ""find"" in Cypress wait for GraphQL requests to finish?",<graphql><cypress>,1,2,0,2019-04-23 12:44:21
55813306,2,,55811530,1,,"<p>So I have gotten the stubbed data to respond correctly. My test looks like the following:</p>&#xA;&#xA;<pre><code>describe('Song API', () =&gt; {&#xA;    it('should show at least one song', () =&gt; {&#xA;        cy.server();&#xA;        cy.route('POST', 'http://localhost:8080/graphql', {&#xA;            data: {&#xA;                songs: [&#xA;                    {&#xA;                        key: 1,&#xA;                        title: 'Hey Ya',&#xA;                        __typename: 'SongType',&#xA;                    },&#xA;                    {&#xA;                        key: 2,&#xA;                        title: 'Gangsters Paradise',&#xA;                        __typename: 'SongType',&#xA;                    },&#xA;                    {&#xA;                        key: 3,&#xA;                        title: 'Other Name',&#xA;                        __typename: 'SongType',&#xA;                    },&#xA;                ],&#xA;            },&#xA;        }).as('getSongs');&#xA;        cy.visit('http://localhost:8080')&#xA;            .wait('@getSongs')&#xA;            .then(() =&gt; {&#xA;                cy.get('.collection').find('.collection-item');&#xA;            });&#xA;    });&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I still think there is lots of room for improvement with the ability to get the correct response by the name of the query that is presented.</p>&#xA;",8344506,,,,2019-04-23 14:16:51,"",,0,0,0,2019-04-23 14:16:51
55820820,2,,55710557,2,,"<p>This is not yet supported natively by Amplify. As you said, you are able to replicate this behavior using pipeline resolvers &amp; some VTL and then deploy that via the Amplify CLI or on your own. There are plans to allow you to write your own transformers to encode reproducible logic like this as a resolver (see <a href=""https://github.com/aws-amplify/amplify-cli/issues/1060"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/1060</a>) as well as plans to move towards pipeline resolvers for all Amplify CLI projects (see <a href=""https://github.com/aws-amplify/amplify-cli/issues/1055"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/1055</a>).</p>&#xA;",2088684,,,,2019-04-23 23:45:48,"",,0,1,0,2019-04-23 23:45:48
55865470,1,,,2,384,"<p>Using AWS Amplify Transform to define a schema in ""schema.graphql"" which is then compiled and pushed to AWS Cloudformation. When data is created in DynamoDB a string is automatically created (defined in the automatically produced resolvers) for ""createdAt"" and ""updatedAt"". If I specify an @auth directive related to the ""owner"" it will put the owner field on the record. All of this is defined in the schema.graphql file.</p>&#xA;&#xA;<p>I want something similar to the above, and want to know if I can do it in the schema.graphql transform file, or if I have to start customizing resolvers.</p>&#xA;&#xA;<p>I simply want to record the user name that created and last modified the record. So on every record I want ""createdBy"" and ""updatedBy"". Don't need owner as the application doesn't require it - but I want to know who created it and who last updated and when it all occurred.</p>&#xA;&#xA;<p>So before I go making this more complex than it probably is I wanted to check if there is something simple I can do to achieve this.</p>&#xA;",8781498,,,,2019-05-05 23:42:24,Can AWS Amplify Transform log createdBy/updatedBy user in DynamoDB?,<graphql><aws-amplify><aws-appsync>,1,0,0,2019-04-26 10:17:20
55874515,1,56071347,,0,81,"<p>We are trying to get check-boxed items list from front-end as a request query to a GraphQL endpoint and with that request trigger one function  to manipulate the selected items in Django to return a response.</p>&#xA;&#xA;<p>This is for a web application to process files when get query from front-end to a GraphQL endpoint. And upload it to a s3 bucket and return a link to file as response. Using DRF we could achieve it with request.POST and getting the items with a object filter.&#xA;With GraphQL how to achieve it? Do we need to use mutation or just a query is enough to trigger a function at back-end.</p>&#xA;&#xA;<p>Receive the query request with selected items list, trigger a function to manipulate the items got through query and return a response. How can we implement this with GraphQL and Django?</p>&#xA;",0,user2998076,,,2019-05-10 05:41:08,How to get query strings through GraphQL and trigger a function to return a response with Django?,<django><django-rest-framework><request><graphql><response>,1,0,0,2019-04-26 20:24:57
55896882,2,,55896409,2,,"<p>Thanks for the help.&#xA;I miss the privilege for accessing the database. When I run &#xA;<code>mongod.exe --dbpath ""C:\xampp\htdocs\GraphQL\node-graphql\mongodb\data""</code> &#xA;I get this error</p>&#xA;&#xA;<pre><code>2019-04-29T10:37:08.554+0700 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.&#xA;2019-04-29T10:37:08.557+0700 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.&#xA;</code></pre>&#xA;&#xA;<p>Then I try this solution <a href=""https://stackoverflow.com/questions/41615574/mongodb-server-has-startup-warnings-access-control-is-not-enabled-for-the-dat"">MongoDB: Server has startup warnings &#39;&#39;Access control is not enabled for the database&#39;&#39;</a> and the connection was successful when I start the npm again</p>&#xA;",8355489,,,,2019-04-29 04:16:10,"",,0,0,0,2019-04-29 04:16:10
55904903,2,,55902611,1,,<p>You could just create a helper function for retrieving the header:</p>&#xA;&#xA;<pre><code>getHeader(key: string) {&#xA;  if (this.request &amp;&amp; this.request.headers &amp;&amp; this.request.headers[key]) {&#xA;    return this.request.headers[key];&#xA;  } else if (this.context.request &amp;&amp; this.context.request.headers &amp;&amp; this.context.request.headers[key]) {&#xA;    return this.context.request.headers[key];&#xA;  } else {&#xA;    throw new BadRequestException(`Required header ${key} is missing`);&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,4694994,,,,2019-04-29 13:56:22,"",,0,1,0,2019-04-29 13:56:22
55962703,1,,,2,245,"<p>Using GraphQL <code>alias</code> feature, no updates were received when mutation was invoked.</p>&#xA;&#xA;<pre><code>subscription OnPutItem($id: ID!) {&#xA;  item: onPutItem(id: $id) { // &lt;---------- with alias&#xA;    id&#xA;    data&#xA;  }&#xA;}&#xA;&#xA;mutation PutItem($data: String!) {&#xA;  item: PutItem(data: $data) { // &lt;-------- with alias&#xA;    id&#xA;    data&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It works normally <strong>without</strong> the <code>item</code> alias.</p>&#xA;&#xA;<p>Tested in Appsync console and app using <code>aws-amplify</code>.</p>&#xA;&#xA;<p><a href=""https://graphql.github.io/graphql-spec/June2018/#sec-Field-Alias"" rel=""nofollow noreferrer"">I didn't see any restrictions for <code>alias</code> not to be used in subscription</a>.</p>&#xA;&#xA;<p>Any thoughts?</p>&#xA;",8012206,,,,2019-07-11 19:09:45,Appsync Subscription (with alias) not receiving updates,<amazon-web-services><graphql><aws-amplify><aws-appsync>,1,0,0,2019-05-03 02:52:44
55982685,2,,54927684,2,,"<p>I got the same issue, as you.</p>&#xA;&#xA;<p>I found the working example in the github <a href=""https://github.com/aws-amplify/amplify-cli/pull/1358"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/pull/1358</a></p>&#xA;&#xA;<pre><code>type Post @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  comments: [Comment] @connection(name: ""PostComments"", keyField: ""postId"", sortField: ""statusDate"")&#xA;}&#xA;&#xA;type Comment @model(queries: null) {&#xA;  id: ID!&#xA;  post: Post! @connection(name: ""PostComments"", keyField: ""postId"", sortField: ""statusDate"")&#xA;  postId: ID!&#xA;  statusDate: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The KeyField MUST be the same on the both end of @connection attribute. In the example form the github tutorial the missing part is ""authorId"" from the User type:</p>&#xA;&#xA;<pre><code>type User&#xA;  @model&#xA;  @auth(rules: [{ allow: owner, ownerField: ""id"", queries: null }]) {&#xA;  id: ID!&#xA;  username: String!&#xA;  conversations: [ConvoLink] @connection(name: ""UserLinks"")&#xA;  messages: [Message] @connection(name: ""UserMessages"", keyField: ""authorId"")&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Moreover, it would be better to make authorId as an non null value in the Message type, because message cannot be posted without author.</p>&#xA;&#xA;<pre><code>type Message @model @auth(rules: [{ allow: owner, ownerField: ""authorId"" }]) {&#xA;  id: ID!&#xA;  author: User @connection(name: ""UserMessages"", keyField: ""authorId"")&#xA;  authorId: String!&#xA;  content: String!&#xA;  conversation: Conversation! @connection(name: ""ConvoMsgs"")&#xA;  messageConversationId: ID!&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;}&#xA;</code></pre>&#xA;",11451865,,,,2019-05-04 12:49:07,"",,0,0,0,2019-05-04 12:49:07
55994006,2,,55974842,0,,"<p>This is rather silly, but the problem was caused by a missing permission in CraftQL settings!</p>&#xA;&#xA;<p>The token I was using didn't have the <code>Query any tag</code> access.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/1PxEZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1PxEZ.png"" alt=""enter image description here""></a></p>&#xA;",486780,,,,2019-05-05 16:20:31,"",,0,0,0,2019-05-05 16:20:31
55997330,2,,55865470,2,,"<p>I've worked this out so just updating for others. In the app/resolvers directory you put your custom resolver and enter the following text for the ""type"" (table) you are creating.</p>&#xA;&#xA;<pre><code>## [Start] Prepare DynamoDB PutItem Request. **&#xA;$util.qr($context.args.input.put(""created"", $util.time.nowISO8601()))&#xA;$util.qr($context.args.input.put(""lastModified"", $util.time.nowISO8601()))&#xA;$util.qr($context.args.input.put(""createdBy"", $ctx.identity.username))&#xA;$util.qr($context.args.input.put(""createdById"", $ctx.identity.sub))&#xA;$util.qr($context.args.input.put(""createdByIP"", $ctx.identity.sourceIp))&#xA;$util.qr($context.args.input.put(""lastModifiedBy"", $ctx.identity.username))&#xA;$util.qr($context.args.input.put(""lastModifiedById"", $ctx.identity.sub))&#xA;$util.qr($context.args.input.put(""lastModifiedByIP"", $ctx.identity.sourceIp))&#xA;$util.qr($context.args.input.put(""__typename"", ""Assets""))&#xA;</code></pre>&#xA;",8781498,,,,2019-05-05 23:42:24,"",,0,0,0,2019-05-05 23:42:24
56006927,1,,,1,414,"<p>I need to run a query using aws appsync resolver on dynamodb based on the result of first query.&#xA;I have below user table.&#xA;<a href=""https://i.stack.imgur.com/cVhBx.png"" rel=""nofollow noreferrer"">userTable</a></p>&#xA;&#xA;<p>First query: Find an item where userId=u1 and type=user.&#xA;Second query: Find an item where userId=""RefId returned from first query"" and status=complete. </p>&#xA;&#xA;<p>I need to do this in one query in appsync resolver.</p>&#xA;&#xA;<pre><code>&#xA;#set( $expValues = {} )&#xA;#set($expression=""userId = :userId "")&#xA;$!{expValues.put("":userId "", { ""S"" : $ctx.args.input.userId })}&#xA;&#xA;&#xA;#if(! $util.isNullOrEmpty($ctx.args.input.type))&#xA;  #set($expression=""$expression and begins_with(type)"")&#xA;  $!{expValues.put("":type"", { ""S"" : $type})}&#xA;#end&#xA;&#xA;{&#xA;    ""version"" : ""2018-05-29"",&#xA;    ""operation"" : ""Query"",&#xA;    ""index"" : ""mId_mType_index"",&#xA;    ""scanIndexForward"" : false,&#xA;     ""query"" : {&#xA;        ""expression"":""$expression"",&#xA;&#xA;        #if( !${expValues.isEmpty()} )&#xA;            ""expressionValues"" : $utils.toJson($expValues)&#xA;        #end&#xA;    },&#xA;    #if( ${ctx.args.limit} )&#xA;        ""limit"": ${ctx.args.limit}&#xA;    #end&#xA;    #if( ${ctx.args.nextToken} )&#xA;        ,""nextToken"": ""${ctx.args.nextToken}""&#xA;    #end&#xA;&#xA;}&#xA;</code></pre>&#xA;",8504766,,8504766,2019-05-06 14:17:09,2019-05-06 14:59:46,"Nested query using appsync resolver, aws dymaodb",<amazon-web-services><amazon-dynamodb><graphql><aws-appsync>,1,0,0,2019-05-06 14:11:17
56007758,2,,56006927,2,,"<p>You can do this using a pipeline solver in AWS AppSync. A pipeline resolver can have multiple resolver functions which can have their own data sources. The next function in a pipeline can use the result of the previous resolver.</p>&#xA;&#xA;<blockquote>&#xA;  <p>I need to do this in one query in appsync resolver.</p>&#xA;</blockquote>&#xA;&#xA;<p>I don't know why you (think) you need this, but this is not possible.</p>&#xA;",3163427,,,,2019-05-06 14:59:46,"",,0,0,0,2019-05-06 14:59:46
56016384,1,,,3,196,"<p>I've been using CloudFormation to keep my AppSync API in my source control so it's repeatable and checked into the repo. Problem is that if I make a change directly in the AppSync console (because it's faster and more convenient to experiment there before attempting to update the CloudFormation stack), now I need to remember to, and know how to add my changes back to the CloudFormation template. This is particularly cumbersome when dealing with resolvers, since AppSync doesn't have a tab that shows all of your resolvers - you just need to look at each field/query/mutation in the schema and see the resolvers for them one by one.</p>&#xA;&#xA;<p>My question: Is there any way to extract all of an AppSync's configuration, hopefully in CloudFormation form? For example, I want a file that describes by schema, each function, resolver, and data source. That way it's easy to ensure that each component is added back to my CloudFormation template.</p>&#xA;",774907,,,,2019-05-21 23:14:27,Export AppSync state/config?,<amazon-web-services><graphql><amazon-cloudformation><aws-appsync>,1,2,0,2019-05-07 06:02:02
56027523,1,,,3,328,"<p>I have a GraphQl resolvers that resolves nested data.</p>&#xA;&#xA;<p>for eg. this is my type definitions</p>&#xA;&#xA;<pre><code>type Users {&#xA;  _id: String&#xA;  company: Company&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>For the post I have my resolver which resolves post._id as</p>&#xA;&#xA;<pre><code>Users: {&#xA;  company: (instance, arguments, context, info) =&gt; {&#xA;   return instance.company &amp;&amp; Company.find({_id: instance.company});&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The above example works perfectly fine when I query for </p>&#xA;&#xA;<pre><code>Query {&#xA; Users {&#xA;  _id&#xA;  name&#xA;  username&#xA;  company {&#xA;    _id&#xA;    PAN&#xA;    address&#xA;  }&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But the problem is sometime I don't have to use the <code>company</code> resolver inside <code>Users</code>, because it is coming along with the user so I just need to pass what's in the user object (no need of database call here)</p>&#xA;&#xA;<p>I can achieve this just by checking if instance.company is and _id or <code>Object</code>, if <code>_id</code> get from database otherwise resolve whatever coming in.</p>&#xA;&#xA;<p>But the problem is I have these type of resolvers in many places so I don't think it's a good idea to have this check in all places wherever I have resolver.</p>&#xA;&#xA;<p>Is there a better way where I can define a configuration just to skip this resolver check.</p>&#xA;&#xA;<p>Any feedback or suggestions would be highly appreciated.</p>&#xA;&#xA;<p>Thanks</p>&#xA;",4437469,,,,2019-05-07 17:13:00,Skip GraphQL Resolvers to return data,<node.js><graphql><graphql-js>,0,1,0,2019-05-07 17:13:00
56084196,1,56264090,,0,161,"<p>Today I started taking a look at the offline capabilities being offered by Appsync and it being my first time I was overwhelmed pretty badly. I spent the day going through several tutorials but they never quite offered enough for me to complete the task or maybe I was just to stupid. Well going back to the amplify github docs I came across this</p>&#xA;&#xA;<pre><code>&#xA;import { buildMutation } from 'aws-appsync';&#xA;import { listTodos } from './graphql/queries';&#xA;import { createTodo, CreateTodoInput } from './graphql/mutations';&#xA;&#xA;(async () =&gt; {&#xA;  const result = await client.mutate(buildMutation(client,&#xA;    gql(createTodo),&#xA;    {&#xA;      inputType: gql(CreateTodoInput),&#xA;      variables: {&#xA;        input: {&#xA;          name: 'Use AppSync',&#xA;          description: 'Realtime and Offline',&#xA;        }&#xA;      }&#xA;    },&#xA;    (_variables) =&gt; [ gql(listTodos) ],&#xA;    'Todo'));&#xA;&#xA;  console.log(result);&#xA;})();&#xA;&#xA;</code></pre>&#xA;&#xA;<p>so I tried to use that. but I got the error <code>client is not defined</code> But I have wrapped my app.js in the apolloprovider </p>&#xA;&#xA;<pre><code>const client = new AWSAppSyncClient({&#xA;  url: aws_config.aws_appsync_graphqlEndpoint,&#xA;  region: aws_config.aws_appsync_region,&#xA;  auth: {&#xA;    type: aws_config.aws_appsync_authenticationType,&#xA;    apiKey: aws_config.aws_appsync_apiKey,&#xA;  },&#xA;  offlineConfig: {&#xA;    callback: (err, succ) =&gt; {&#xA;      if(err) {&#xA;        const { mutation, variables } = err;&#xA;&#xA;        console.warn(`ERROR for ${mutation}`, err);&#xA;      } else {&#xA;        const { mutation, variables } = succ;&#xA;&#xA;        console.info(`SUCCESS for ${mutation}`, succ);&#xA;      }&#xA;    },&#xA;  },&#xA;});&#xA;&#xA;const WithProvider = () =&gt; (&#xA;  &lt;ApolloProvider client={client}&gt;&#xA;    &lt;Rehydrated&gt;&#xA;    &lt;ArztRoutes/&gt;&#xA;    &lt;/Rehydrated&gt;&#xA;  &lt;/ApolloProvider&gt;&#xA;</code></pre>&#xA;&#xA;<p>which by my understanding passes down the client to all other classes so why do I keep getting this error and how can I resolve it. Thanks alot!</p>&#xA;",11136408,,,,2019-05-22 19:56:33,Getting With helper for offline capabilities to work,<reactjs><react-apollo><aws-appsync>,1,0,0,2019-05-10 20:08:02
56098004,1,56131898,,1,1732,"<p>I believe the default data source when creating GraphQL API is DynamoDB, I would like to set it to Lambda function instead.</p>&#xA;&#xA;<p><strong>Is there a way to do this with Amplify?</strong></p>&#xA;&#xA;<p>if not, <strong>what is the workaround?</strong></p>&#xA;&#xA;<p>I found this <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html"" rel=""nofollow noreferrer"">AWS tutorial</a> online that states:</p>&#xA;&#xA;<blockquote>&#xA;  <p>we'll show you how to write a Lambda function that performs business logic based on the invocation of a GraphQL field operation.</p>&#xA;</blockquote>&#xA;&#xA;<p>but I couldn't use this with Amplify.</p>&#xA;",6657875,,,,2019-05-14 15:30:50,How to invoke Lambda function with Amplify using GraphQL API?,<aws-lambda><graphql><aws-amplify><aws-appsync>,1,0,0,2019-05-12 09:47:19
56131898,2,,56098004,1,,"<p>For now, you can use this pattern described here to manually setup the correct templates and target a lambda that you setup with Amplify.  </p>&#xA;&#xA;<p><a href=""https://aws-amplify.github.io/docs/cli/graphql#add-a-custom-resolver-that-targets-an-aws-lambda-function"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/cli/graphql#add-a-custom-resolver-that-targets-an-aws-lambda-function</a></p>&#xA;&#xA;<p>Soon (or maybe by the time you read this, based on the status of this <a href=""https://github.com/aws-amplify/amplify-cli/pull/1346"" rel=""nofollow noreferrer"">PR</a>) you'll be able to annotate your GraphQL Schema with @function and have it wire up all that same stuff for you.</p>&#xA;&#xA;<p>Hope this helps.</p>&#xA;",1613200,,1613200,2019-05-14 15:30:50,2019-05-14 15:30:50,"",,0,2,0,2019-05-14 13:40:33
56132400,1,,,1,96,"<p>So i've got two GraphQL queries which im using with React-Apollo:</p>&#xA;&#xA;<pre><code>query query1($id: String, $offset: Int, $limit: Int) {&#xA;  item: data(id: $id, offset: $offset, limit: $limit) {&#xA;    key&#xA;    name&#xA;    description&#xA;  }&#xA;&#xA;query query2($id: String) {&#xA;  item: data(id: $id) {&#xA;    key&#xA;    name&#xA;    description&#xA;    score&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>I call query1 using <code>client.query</code> and it works correctly </p>&#xA;&#xA;<p>I then call query2 using <code>client.query</code> again, but this time, the <code>score</code> field doesn't return to me. I can see it being returned in the network response, but when I try to log it to console for example, all I get is the <code>key, name, description</code> fields. I've tried setting the cachePolicy to <code>no-cache</code> but it just returns the same thing</p>&#xA;&#xA;<p>Why is it doing this?</p>&#xA;&#xA;<pre><code>  async doSomething() {&#xA;    let data = await this.props.client.query({&#xA;      query: query1,&#xA;      variables: { id: id },&#xA;      fetchPolicy: 'no-cache'&#xA;    });&#xA;    this.myFunc(data.data.item)&#xA;  }&#xA;&#xA;&#xA;  myFunc = data =&gt; {&#xA;    console.log(data)&#xA;  };&#xA;</code></pre>&#xA;",2263119,,2263119,2019-05-14 14:56:54,2019-05-14 14:56:54,Why is Apollo using an older GraphQL query and not returning a supplied field,<graphql><apollo><react-apollo>,0,4,0,2019-05-14 14:07:58
56160930,1,,,1,678,"<p>I am using an AppSync API setup with AWS Amplify, I am getting the following error. Both IAM and Cognito Pool authorization methods are failing and produce this error. When I use an API key there is no problem. </p>&#xA;&#xA;<pre><code>    2019-05-15 23:15:44.215 15058-15058/com.example.aaa.amplify E/AndroidRuntime: FATAL EXCEPTION: main&#xA;Process: com.example.aaa.amplify, PID: 15058&#xA;java.lang.RuntimeException: Unable to start activity ComponentInfo{com.example.aaa.amplify/com.example.aaa.amplify.MainActivity}: java.lang.RuntimeException: Failed to read awsconfiguration.json please check that it is correctly formed.&#xA;    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2665)&#xA;    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2726)&#xA;    at android.app.ActivityThread.-wrap12(ActivityThread.java)&#xA;    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1477)&#xA;    at android.os.Handler.dispatchMessage(Handler.java:102)&#xA;    at android.os.Looper.loop(Looper.java:154)&#xA;    at android.app.ActivityThread.main(ActivityThread.java:6119)&#xA;    at java.lang.reflect.Method.invoke(Native Method)&#xA;    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)&#xA;    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)&#xA; Caused by: java.lang.RuntimeException: Failed to read awsconfiguration.json please check that it is correctly formed.&#xA;    at com.amazonaws.mobile.config.AWSConfiguration.readInputJson(AWSConfiguration.java:99)&#xA;    at com.amazonaws.mobile.config.AWSConfiguration.&lt;init&gt;(AWSConfiguration.java:83)&#xA;    at com.amazonaws.mobile.config.AWSConfiguration.&lt;init&gt;(AWSConfiguration.java:68)&#xA;    at com.amazonaws.mobile.config.AWSConfiguration.&lt;init&gt;(AWSConfiguration.java:45)&#xA;    at com.example.aaa.amplify.MainActivity.onCreate(MainActivity.java:33)&#xA;    at android.app.Activity.performCreate(Activity.java:6679)&#xA;    at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1118)&#xA;    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2618)&#xA;    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2726) &#xA;    at android.app.ActivityThread.-wrap12(ActivityThread.java) &#xA;    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1477) &#xA;    at android.os.Handler.dispatchMessage(Handler.java:102) &#xA;    at android.os.Looper.loop(Looper.java:154) &#xA;    at android.app.ActivityThread.main(ActivityThread.java:6119) &#xA;    at java.lang.reflect.Method.invoke(Native Method) &#xA;    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886) &#xA;    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776) &#xA; Caused by: org.json.JSONException: End of input at character 1241 of {    ""UserAgent"": ""aws-amplify-cli/0.1.0"",    ""Version"": ""1.0"",    ""IdentityManager"": {        ""Default"": {}    },    ""AppSync"": {        ""Default"": {            ""ApiUrl"": ""https://xxxxxxxx.appsync-api.us-west-2.amazonaws.com/graphql"",            ""Region"": ""us-west-2"",            ""AuthMode"": ""API_KEY"",            ""ApiKey"": ""da2-xxxxxxxxxxxxxxxx"",            ""ClientDatabasePrefix"": ""xxxxxxxxxxxxxxx-master_API_KEY""        },//        ""Default"": {//            ""ApiUrl"": ""https://xxxxxxxxxxxx.appsync-api.us-west-2.amazonaws.com/graphql"",//            ""Region"": ""us-west-2"",//            ""AuthMode"": ""AWS_IAM"",//            ""ClientDatabasePrefix"": ""xxxxxxxx-master_AWS_IAM""//        },    },    ""CognitoUserPool"": {        ""Default"": {            ""PoolId"": ""us-west-xxxxxxx"",            ""AppClientId"": ""xxxxxxxxxxxxx"",            ""AppClientSecret"": ""xxxxxxxxxxxxxxxxxx"",            ""Region"": ""us-west-2""        }    },    ""Auth"": {        ""Default"": {            ""OAuth"": {                ""AppClientId"": ""xxxxxxxxxxxxxxxxxxxxxxx"",                ""AppClientSecret"": ""xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx""            }        }    }}&#xA;    at org.json.JSONTokener.syntaxError(JSONTokener.java:449)&#xA;    at org.json.JSONTokener.nextValue(JSONTokener.java:97)&#xA;    at org.json.JSONTokener.readObject(JSONTokener.java:361)&#xA;    at org.json.JSONTokener.nextValue(JSONTokener.java:100)&#xA;    at org.json.JSONTokener.readObject(JSONTokener.java:384)&#xA;    at org.json.JSONTokener.nextValue(JSONTokener.java:100)&#xA;    at org.json.JSONObject.&lt;init&gt;(JSONObject.java:156)&#xA;    at org.json.JSONObject.&lt;init&gt;(JSONObject.java:173)&#xA;    at com.amazonaws.mobile.config.AWSConfiguration.readInputJson(AWSConfiguration.java:97)&#xA;    at com.amazonaws.mobile.config.AWSConfiguration.&lt;init&gt;(AWSConfiguration.java:83) &#xA;    at com.amazonaws.mobile.config.AWSConfiguration.&lt;init&gt;(AWSConfiguration.java:68) &#xA;    at com.amazonaws.mobile.config.AWSConfiguration.&lt;init&gt;(AWSConfiguration.java:45) &#xA;    at com.example.aaa.amplify.MainActivity.onCreate(MainActivity.java:33) &#xA;    at android.app.Activity.performCreate(Activity.java:6679) &#xA;    at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1118) &#xA;    at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2618) &#xA;    at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2726) &#xA;    at android.app.ActivityThread.-wrap12(ActivityThread.java) &#xA;    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1477) &#xA;    at android.os.Handler.dispatchMessage(Handler.java:102) &#xA;    at android.os.Looper.loop(Looper.java:154) &#xA;    at android.app.ActivityThread.main(ActivityThread.java:6119) &#xA;    at java.lang.reflect.Method.invoke(Native Method) &#xA;    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886) &#xA;    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)&#xA;</code></pre>&#xA;&#xA;<p> </p>&#xA;&#xA;<p>I have tried directly connecting the API to the project and going through the auto setup with amplify add codegen xxxxxxxxxxxx. I am not having any luck</p>&#xA;&#xA;<p>my awsconfiguration.json file: </p>&#xA;&#xA;<pre><code>//WORKS &#xA;""AppSync"": {&#xA;    ""Default"": {&#xA;        ""ApiUrl"": ""https://xxxxxxxxxxxxxxx.appsync-api.us-west-2.amazonaws.com/graphql"",&#xA;        ""Region"": ""us-west-2"",&#xA;        ""AuthMode"": ""API_KEY"",&#xA;        ""ApiKey"": ""da2-xxxxxxxx"",&#xA;        ""ClientDatabasePrefix"": ""xxxxxx-master_API_KEY""&#xA;    },&#xA;&#xA;//DOES NOT WORK&#xA;   // ""Default"": {&#xA;   //     ""ApiUrl"": ""https://xxxxxxxxxxxxxx.appsync-api.us-west-2.amazonaws.com/graphql"",&#xA;   //     ""Region"": ""us-west-2"",&#xA;   //     ""AuthMode"": ""AWS_IAM"",&#xA;   //     ""ClientDatabasePrefix"": ""xxxxx-master_AWS_IAM""&#xA;   // },&#xA;//DOES NOT WORK&#xA;    // ""Default"": {&#xA;    //     ""ApiUrl"": ""https://xxxxxxxxxxxxxx.appsync-api.us-west-2.amazonaws.com/graphql"",&#xA;    //     ""Region"": ""us-west-2"",&#xA;    //     ""AuthMode"": ""AMAZON_COGNITO_USER_POOLS"",&#xA;    //     ""ClientDatabasePrefix"": ""xxxxxxxxxxx-master_AMAZON_COGNITO_USER_POOLS""&#xA;    // },&#xA;</code></pre>&#xA;&#xA;<p>When I use the API key, I can connect to the back end, but when I try to use a user_pool or IAM role for authentication, I get the error. For development the API is fine, but now the correct setup is to use one of the other methods, Cognito pool or IAM</p>&#xA;",10569286,,,,2019-05-24 17:14:56,How can I use IAM or Cognito Pool as an authentication method instead of API keys on Android,<android><amazon-web-services><graphql><amazon-cognito><aws-appsync>,1,0,0,2019-05-16 04:37:40
56164518,2,,54690893,2,,"<p>You forgot <code>data:{}</code></p>&#xA;&#xA;<pre><code>const UPDATE_USER = gql`&#xA; mutation UpdateAccountForm(&#xA;   data:{$id: ID!, $name: String}     &#xA; ) {&#xA;   UpdateUser(id: $id, name: $name) {&#xA;     id&#xA;   }&#xA; }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>Double check if you can send ID because sometimes it is auto created!</p>&#xA;&#xA;<p>Good luck!</p>&#xA;",9368001,,,,2019-05-16 08:50:10,"",,0,0,0,2019-05-16 08:50:10
56176223,1,,,1,1027,"<p>I have got an error during a graphql API call in AWS amplify</p>&#xA;&#xA;<p>I import the queries like (just like in the documentation with *):</p>&#xA;&#xA;<pre><code>import * as queries from '../graphql/queries';&#xA;</code></pre>&#xA;&#xA;<p>This is my API request where I receive the error (Must provide Source):</p>&#xA;&#xA;<pre><code>const data = await API.graphql(graphqlOperation(queries.nearbyZVL, {filter: filter}));&#xA;</code></pre>&#xA;&#xA;<p>And in the same file another API request like below is working correctly:</p>&#xA;&#xA;<pre><code>const result = await API.graphql(graphqlOperation(queries.getProfile, { id: cognitoUserId }));&#xA;</code></pre>&#xA;&#xA;<p>The nearbyZVL is a custom query and resolver in AWS appsync. In the appsync console the query is working fine!</p>&#xA;&#xA;<p>Some help is appreciated! :)</p>&#xA;",9491785,,,,2019-06-05 04:35:37,Must provide Source with graphql API call in AWS amplify,<amazon-web-services><graphql><aws-amplify><resolver><amplifyjs>,1,0,0,2019-05-16 20:34:29
56181338,2,,53396717,4,,"<p>We were looking into the same issue. For some reason, the accepted answer does not work for us. Maybe because it's a beta feature and there is a new resolver version (2018-05-29 vs 2017-02-28, changes here: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-changelog.html#aws-appsync-resolver-mapping-template-version-2018-05-29"" rel=""nofollow noreferrer"">Resolver Mapping Template Changelog</a>).</p>&#xA;&#xA;<p>We use this for the time being using <code>NULLIF()</code>:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2018-05-29"",&#xA;    ""statements"": [&#xA;        ""INSERT INTO sales_customers_addresses (`id`, `customerid`, `type`, `company`, `country`, `email`) VALUES (NULL, :CUSTOMERID, :TYPE, NULLIF(:COMPANY, ''), NULLIF(:COUNTRY, ''), :EMAIL)""&#xA;    ],&#xA;    ""variableMap"": {&#xA;        "":CUSTOMERID"": $customerid,&#xA;        "":TYPE"": ""$type"",&#xA;        "":COMPANY"": ""$util.defaultIfNullOrEmpty($context.args.address.company, '')"",&#xA;        "":COUNTRY"": ""$util.defaultIfNullOrEmpty($context.args.address.country, '')"",&#xA;        "":EMAIL"": ""$context.args.address.email""&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",3970776,,,,2019-05-17 07:11:06,"",,0,1,0,2019-05-17 07:11:06
56224833,1,56225203,,1,477,<p>I know that in GraphQL: <code>Query</code> is used when you want to read some data from the server while <code>Mutation</code> is used when you want to write data back to the server.</p>&#xA;&#xA;<p>But can’t I go to the resolver in the query and do a write operation.</p>&#xA;&#xA;<p>I don't know why we need to separate the read the write operations and hence mutations are needed.</p>&#xA;,7966638,,,,2019-05-20 16:53:46,GraphQL: Why shouldn't we use `query` to write data,<graphql>,1,1,0,2019-05-20 16:27:13
56241307,1,,,0,155,"<p>I'm creating a Flutter application and reusing a appolographql server.&#xA;The issue is that when i'm Mutating in Flutter, the resolver function is not being triggered.</p>&#xA;&#xA;<p>The resolver is being triggered when using the playground, but not with flutter.</p>&#xA;&#xA;<p>This is the Flutter code :</p>&#xA;&#xA;<pre class=""lang-dart prettyprint-override""><code>Mutation(&#xA;  options: MutationOptions(&#xA;    document: r""""""&#xA;      mutation createOrUpdateHorse($horse:HorseInput,$entityid:ID) {&#xA;        createOrUpdateHorse(horse:$horse,entityid:$entityid) {&#xA;          id&#xA;          name&#xA;          status&#xA;          rating&#xA;        }&#xA;      }&#xA;    """""",&#xA;    // variables: {&#xA;    //   ""horse"": {""id"": 1, ""status"": ""bu""},&#xA;    //   ""entityid"": 1&#xA;    // },&#xA;  ),&#xA;  builder: (&#xA;    RunMutation runMutation,&#xA;    QueryResult result,&#xA;  ) {&#xA;    return IconButton(&#xA;      icon: Icon(Icons.cloud_upload),&#xA;      onPressed: () =&gt; runMutation({&#xA;            ""horse"": {""id"": 1, ""status"": ""bu""},&#xA;            ""entityid"": 1&#xA;          }),&#xA;    );&#xA;  },&#xA;  onCompleted: (resultData) {&#xA;    print(resultData);&#xA;  },&#xA;),&#xA;</code></pre>&#xA;&#xA;<p>This is the request body the server receives in the case of a flutter mutation</p>&#xA;&#xA;<pre><code>{ operationName: 'createOrUpdateHorse',&#xA;  variables: { entityid: 1, horse: { id: 1, status: 'bu' } },&#xA;  query:&#xA;   'mutation createOrUpdateHorse($horse:HorseInput,$entityid:ID) {\n                  createOrUpdateHorse(horse:$horse,entityid:$entityid) {\n                    &#xA;   id\n&#xA;   status\n&#xA;   }\n&#xA;  }\n&#xA;' }&#xA;</code></pre>&#xA;&#xA;<p>This is the request body the server receives in the case of a playground mutation</p>&#xA;&#xA;<pre><code>{operationName:null,&#xA;variables:{},&#xA;query:&#xA; mutation {\n  &#xA;   createOrUpdateHorse(horse: {id: 1, status: \""alo\""}, entityid: 5) &#xA;{\n    &#xA;  id\n&#xA;  status\n  &#xA;}\n&#xA;}\n&#xA;}&#xA;</code></pre>&#xA;",6163688,,,,2019-05-21 15:32:47,Flutter_graphql mutation not triggering apollo server resolver,<flutter><graphql><apollo-server>,2,0,0,2019-05-21 15:08:16
56241660,2,,56241307,0,,"<p>Which version of graphql_flutter are you using? &#xA;in version ^1.0.1 - mutation looks so:</p>&#xA;&#xA;<pre><code>r'''&#xA;mutation createOrUpdateHorse(&#xA;        $horse: HorseInput,&#xA;        $entityid: ID&#xA;        ){&#xA;        action: createOrUpdateHorse(&#xA;          input: {&#xA;            horse: $horse,&#xA;            entityid: $entityid&#xA;          }){&#xA;            id&#xA;            name&#xA;            status&#xA;            rating&#xA;          }&#xA;      } &#xA;'''&#xA;</code></pre>&#xA;",9936537,,,,2019-05-21 15:29:12,"",,0,0,0,2019-05-21 15:29:12
56259697,2,,56258864,1,,"<p>The first <code>query</code> key on your examples is a requirement from GraphQL to actually call the endpoint, it has to be present to actually run <code>queries</code> <strong>or</strong> <code>mutations</code>. You can see it in the <a href=""https://graphql.org/learn/serving-over-http/#post-request"" rel=""nofollow noreferrer"">docs</a>.</p>&#xA;&#xA;<p>The first example works because at the root of a GraphQL Schema there has to be an action with keywords <code>query</code> or <code>mutation</code>, and in your case you are triggering a <code>query</code>.</p>&#xA;&#xA;<p>The second example works because if you don't define what type of action (<code>query</code> or <code>mutation</code>) on your request, it always defaults to execute a query.</p>&#xA;&#xA;<p>The third example does not work because you don't have the action <code>author</code> at the root of your Schema.</p>&#xA;&#xA;<p><em>I guess the first keyword <code>query</code> is what makes some confusion in this case.</em></p>&#xA;",3708153,,,,2019-05-22 14:56:29,"",,0,0,0,2019-05-22 14:56:29
56266130,1,56267041,,2,1391,"<p>Does AppSync support nested single mutation?</p>&#xA;&#xA;<p>I want to call a single mutation which will insert records into two tables, eg: <code>User</code> and <code>Roles</code> tables in DynamoDB.</p>&#xA;&#xA;<p>Something like this for example: </p>&#xA;&#xA;<pre><code>createUser(&#xA;   input: {&#xA;      Name: ""John""&#xA;      Email: ""user@domain.com""&#xA;      LinesRoles: [&#xA;        { Name: ""Role 1"" }&#xA;        { Name: ""Role 2"" }&#xA;      ]&#xA;   }) {&#xA;        Id&#xA;        Name&#xA;        LinesRoles {&#xA;          Id&#xA;          Name&#xA;        }&#xA;      }&#xA;</code></pre>&#xA;&#xA;<p>Do I need to create two resolvers in AppSync for <code>User</code> and <code>Roles</code> to insert the records in both tables?</p>&#xA;",791022,,,,2019-05-23 01:42:14,AppSync - creating nested mutation with array and objects?,<amazon-web-services><graphql><aws-appsync>,1,0,0,2019-05-22 23:13:51
56267041,2,,56266130,3,,"<p>I can think of three ways to achieve this: </p>&#xA;&#xA;<ol>&#xA;<li>Use a <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-dynamodb.html#aws-appsync-resolver-mapping-template-reference-dynamodb-batch-put-item"" rel=""nofollow noreferrer"">BatchPutItem</a> to save records into two tables at once. However, you won’t be able to use any <code>ConditionExpression</code></li>&#xA;<li>Use a <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html"" rel=""nofollow noreferrer"">pipeline resolver</a> with two AppSync functions where one function makes a PutItem to the <code>Roles</code> table and the other to the <code>User</code> table. However, you need to be ok with potentially inconsistent scenarios where the record has been inserted in one table but not in the other. </li>&#xA;<li>Use a <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-lambda.html"" rel=""nofollow noreferrer"">Lambda</a> resolver that does the write to 2 tables inside a DynamoDB transaction.</li>&#xA;</ol>&#xA;",1060799,,,,2019-05-23 01:42:14,"",,0,2,0,2019-05-23 01:42:14
56281561,2,,55977640,6,,"<p>This is known to happen when there are changes to <code>connection</code> directives wich triggers updates DynamoDB GSI. Cloudformation has  update limits for DynamoDB GSIs. Amplify team is actively working on <code>@key</code> directive which will replace the <code>@connection</code> directive. In the time being follow these steps if you're making changes to <code>@connection</code> directive</p>&#xA;&#xA;<ol>&#xA;<li>Make only one change in <code>@connection</code> directive per push. If you want to rename a connection, first remove the connection and do a push and then add it with the new name</li>&#xA;<li>If a push results in failure and subsequent pushes may result in <code>Resolver not found</code>. This is caused by the Cloudformation implementation where a rollback removed the resolvers but did not create the original resolver. You could overcome this issue by adding missing resolvers in AppSync console.</li>&#xA;</ol>&#xA;&#xA;<p>Ref: <a href=""https://github.com/aws-amplify/amplify-cli/issues/1406#issuecomment-494533788"" rel=""noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/1406#issuecomment-494533788</a></p>&#xA;",10100924,,,,2019-05-23 19:08:40,"",,0,0,0,2019-05-23 19:08:40
56295083,1,,,0,1641,"<p>I am using React Apollo to work with a GaphQL backend. The function I am creating allows users to edit the admin permissions of another user.</p>&#xA;&#xA;<p>I have two components. One component contains the React Apollo logic, including the query and the mutation components. When this component is rendered a prop that is passed down from a match parameter in the router specifies what admin to get the permissions of which is used in the GraphQL query. When the data required for the admin permissions component is retrieved it is passed as a prop to the child component which sets the initial state based on the prop. The child component contains no React Apollo logic and simply contains checkboxes and other inputs that update the state of the component as they are changed. When clicking the save changes button the parent's mutation function is called passing the newly updated permissions to insert variables into the mutation query.</p>&#xA;&#xA;<p>The issue that I am facing is that sometimes the state does not change depending on the props. For example, admin 1 is accessed, the router then updates the URL when a button is clicked to access admin 2. It works up to this point. The router then updates the URL again when a button is clicked to access admin 1, admin 2 is still shown in the child component, despite the props being updated with the new values. Note the constructor of the child component is not called again.</p>&#xA;&#xA;<p>Any suggestions on how I can ensure that when the data produced by the GraphQL query displays the correct child componenet instance? Furthermore, any suggestions on how the structure of this componenet can be improved.</p>&#xA;&#xA;<pre><code>render(){&#xA;if(this.props.steamID ===  null) return null;&#xA;&#xA;const QUERY_VARIABLES = {&#xA;  serverID: this.props.serverID,&#xA;  selectedAdminSteamID: this.props.steamID,&#xA;  currentAdminSteamID: Auth.claim.steamID&#xA;};&#xA;&#xA;return (&#xA;  &lt;Query&#xA;    query={QUERY}&#xA;    variables={QUERY_VARIABLES}&#xA;  &gt;&#xA;    {({ loading, error, data }) =&gt; {&#xA;      if (loading) return ( ... );&#xA;      if (error) return ( ... );&#xA;      if(!data.server.selectedAdmin) return ( ... );&#xA;&#xA;      return (&#xA;        &lt;Mutation&#xA;          mutation={MUTATION}&#xA;          update={(cache, { data: { updateAdminPermission } }) =&gt; {&#xA;            const data = cache.readQuery({ query: QUERY, variables: QUERY_VARIABLES });&#xA;            data.server.selectedAdmin = updateAdminPermission;&#xA;            cache.writeQuery({ query: QUERY, variables: QUERY_VARIABLES, data: data, });&#xA;          }}&#xA;        &gt;&#xA;&#xA;          {(updateAdminPermission, { loading, error }) =&gt; (&#xA;            &lt;&gt;&#xA;              &lt;AdminPermissions&#xA;                serverID={this.props.serverID}&#xA;                steamID={this.props.steamID}&#xA;&#xA;                selectedAdmin={data.server.selectedAdmin}&#xA;                currentAdmin={data.server.currentAdmin}&#xA;&#xA;                updatePermissionFunction={(variables) =&gt; {&#xA;                  updateAdminPermission({ variables })&#xA;                }}&#xA;                updatePermissionLoading={loading}&#xA;              /&gt;&#xA;              &lt;GraphQLErrorModal error={error} /&gt;&#xA;            &lt;/&gt;&#xA;          )}&#xA;&#xA;        &lt;/Mutation&gt;&#xA;      );&#xA;    }}&#xA;  &lt;/Query&gt;&#xA;);&#xA;}&#xA;&#xA;class AdminPermissions extends React.Component{&#xA;    constructor(props){&#xA;      super();&#xA;&#xA;      this.state = props.selectedAdmin;&#xA;&#xA;      this.guid = React.createRef();&#xA;      this.updatePermission = this.updatePermission.bind(this);&#xA;      this.saveChanges = this.saveChanges.bind(this);&#xA;    }&#xA;&#xA;    updatePermission(changedPermission, value){&#xA;      if(changedPermission === 'manageAssignPermissions' &amp;&amp; value &gt; 0){&#xA;        for(let permission of panelPermissions.concat(gamePermissions)){&#xA;          if(permission.permission === 'manageAssignPermissions') continue;&#xA;          this.setState({ [permission.permission]: 2 });&#xA;        }&#xA;      }&#xA;      this.setState({ [changedPermission]: value });&#xA;    }&#xA;&#xA;    saveChanges(){&#xA;      this.props.updatePermissionFunction({&#xA;        serverID: this.props.serverID,&#xA;        steamID: this.props.steamID,&#xA;        guid: this.guid.current.value,&#xA;        ...this.state&#xA;      });&#xA;    }&#xA;&#xA;    render(){&#xA;        // renders pairs of checkboxes with checked value based on state and on change event that calls update permissions method passing the name of the associated permission and a value that is calculated based on which boxes in the pair are ticked.&#xA;    }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p><strong>Query (Update)</strong></p>&#xA;&#xA;<pre><code>  query AdminPermission($serverID: Int!, $selectedAdminSteamID: String!, $currentAdminSteamID: String!) {&#xA;    server(id: $serverID) {&#xA;      id&#xA;&#xA;      selectedAdmin: adminPermission(steamID: $selectedAdminSteamID) {    &#xA;        _id&#xA;&#xA;        admin {&#xA;          _id&#xA;&#xA;          steamID&#xA;          displayName&#xA;          avatar&#xA;        }&#xA;&#xA;        player {&#xA;          _id&#xA;          guid&#xA;        }&#xA;&#xA;        manageAssignPermissions&#xA;        viewAdminPermissions&#xA;        ...&#xA;      }&#xA;      currentAdmin: adminPermission(steamID: $currentAdminSteamID) {&#xA;        _id&#xA;&#xA;        admin {&#xA;          _id&#xA;          steamID&#xA;        }&#xA;&#xA;        manageAssignPermissions&#xA;        viewAdminPermissions&#xA;        ...&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;",7122588,,7122588,2019-05-24 19:40:08,2019-05-24 19:40:08,React Apollo - Child not updating based on result change,<javascript><reactjs><react-apollo>,1,8,0,2019-05-24 14:52:48
56297002,2,,56160930,1,,"<p>You need to fix the formatting error in the <code>awsconfiguration.json</code> file. For example if <code>API_KEY</code> is your default authorization mode configured on your AWS AppSync GraphQL API, you will have the following contents in the file.</p>&#xA;&#xA;<pre><code>{&#xA;  ""AppSync"": {&#xA;    ""Default"": {&#xA;      ""ApiUrl"": ""https://xxxxxxxxxxxxxxx.appsync-api.us-west-2.amazonaws.com/graphql"",&#xA;      ""Region"": ""us-west-2"",&#xA;      ""AuthMode"": ""API_KEY"",&#xA;      ""ApiKey"": ""da2-xxxxxxxx"",&#xA;      ""ClientDatabasePrefix"": ""xxxxxx-master_API_KEY""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If you have multiple authorization modes configured, you will have the following file:</p>&#xA;&#xA;<pre><code>{&#xA;  ""AppSync"": {&#xA;    ""Default"": {&#xA;      ""ApiUrl"": ""https://xxxxxxxxxxxxxxx.appsync-api.us-west-2.amazonaws.com/graphql"",&#xA;      ""Region"": ""us-west-2"",&#xA;      ""AuthMode"": ""API_KEY"",&#xA;      ""ApiKey"": ""da2-xxxxxxxx"",&#xA;      ""ClientDatabasePrefix"": ""xxxxxx-master_API_KEY""&#xA;    },&#xA;    ""AWS_IAM"": {&#xA;      ""ApiUrl"": ""https://xxxxxxxxxxxxxxx.appsync-api.us-west-2.amazonaws.com/graphql"",&#xA;      ""Region"": ""us-west-2"",&#xA;      ""AuthMode"": ""AWS_IAM"",&#xA;      ""ClientDatabasePrefix"": ""xxxxxx-master_AWS_IAM""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now you can create multiple AWS AppSync clients to use the different authorization modes. When you need to use the <code>AWS_IAM</code> section from the file, you can do the following:</p>&#xA;&#xA;<pre class=""lang-java prettyprint-override""><code>AWSConfiguration awsConfiguration = new AWSConfiguration(getApplicationContext());&#xA;awsConfiguration.setConfiguration(""AWS_IAM"");&#xA;</code></pre>&#xA;",5169068,,,,2019-05-24 17:14:56,"",,0,1,0,2019-05-24 17:14:56
56299821,2,,52474605,4,,<p><strong>Execute the query without specifying the child fields</strong></p>&#xA;&#xA;<p>graphiql will kindly fill in each field for you.  In your case:</p>&#xA;&#xA;<pre><code>{&#xA;    person(personID: 1)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>will autocomplete to</p>&#xA;&#xA;<pre><code>{&#xA;  person(personID: 1) {&#xA;    name&#xA;    birthYear&#xA;    eyeColor&#xA;    gender&#xA;    hairColor&#xA;    height&#xA;    mass&#xA;    # etc...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,384761,,,,2019-05-24 21:42:15,"",,0,2,0,2019-05-24 21:42:15
56300077,1,,,2,973,"<p>How can I use Lambda functions to query the GraphQL endpoint (AppSync) in Node.js? Which GraphQL Client should I use?</p>&#xA;&#xA;<p>I have seen <a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-js"" rel=""nofollow noreferrer"">AWS AppSync JavaScript</a> SDK which seems to be for mobile app or react/frontend.</p>&#xA;&#xA;<p>PS: I am not talking about AWS Lambda Resolvers.</p>&#xA;",791022,,,,2019-05-25 22:22:40,Lambda functions to query the GraphQL endpoint?,<node.js><amazon-web-services><graphql><aws-appsync>,2,0,0,2019-05-24 22:17:45
56309197,2,,56300077,0,,"<p>If you use AWS_IAM or AMAZON_COGNITO_USER_POOLS as the authentication type, I think AWS AppSync JavaScript SDK is a big help, you just need to set up your code as explained <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-node.html"" rel=""nofollow noreferrer"">here</a>:</p>&#xA;&#xA;<pre><code>""use strict"";&#xA;/**&#xA;* This shows how to use standard Apollo client on Node.js&#xA;*/&#xA;&#xA;global.WebSocket = require('ws');&#xA;require('es6-promise').polyfill();&#xA;require('isomorphic-fetch');&#xA;&#xA;// Require exports file with endpoint and auth info&#xA;const aws_exports = require('./aws-exports').default;&#xA;&#xA;// Require AppSync module&#xA;const AUTH_TYPE = require('aws-appsync/lib/link/auth-link').AUTH_TYPE;&#xA;const AWSAppSyncClient = require('aws-appsync').default;&#xA;&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>Also, you must provide credentials</p>&#xA;&#xA;<pre><code>const AWS = require('aws-sdk');&#xA;AWS.config.update({&#xA;    region: aws_exports.REGION,&#xA;    credentials: new AWS.Credentials({&#xA;        accessKeyId: aws_exports.AWS_ACCESS_KEY_ID,&#xA;        secretAccessKey: aws_exports.AWS_SECRET_ACCESS_KEY&#xA;    })&#xA;});&#xA;const credentials = AWS.config.credentials;&#xA;</code></pre>&#xA;&#xA;<p>or just retrieve Lambda session credentials (don't forget to give permission to Lambda execute GraphQL API).</p>&#xA;",8786986,,,,2019-05-25 22:22:40,"",,0,0,0,2019-05-25 22:22:40
56347904,2,,56325398,0,,"<p>Yes you can issue any DynamoDB query through AppSync. This provides a good introduction that covers PutItem, UpdateItem, and GetItem <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html</a>. If you need to get multiple values by a key then you should use the DynamoDB Query operation <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-dynamodb.html#aws-appsync-resolver-mapping-template-reference-dynamodb-query"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-dynamodb.html#aws-appsync-resolver-mapping-template-reference-dynamodb-query</a>.</p>&#xA;&#xA;<p>When using DynamoDB you need to bake your access patterns into the key schema(s) of your DynamoDB table and secondary indexes. For example, if you want to get a record by ""email"" then you should create a table where the <strong>hash</strong> key is ""email"". You would then be able to perform a GetItem operation by ""email"". If you need to query by email and have records sorted by date, then you would need a table where the <strong>hash</strong> key is ""email"" and the <strong>sort</strong> key is ""date"". Etc..</p>&#xA;&#xA;<p>You are able to create secondary indexes and if you want to get a bit more advanced create composite index values and overload indexes to optimize your DynamoDB tables for your access patterns. Checkout the DynamoDB docs to learn more <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-indexes.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-indexes.html</a>.</p>&#xA;",2088684,,,,2019-05-28 18:11:47,"",,0,1,0,2019-05-28 18:11:47
56352380,1,,,0,1182,"<p>I am creating multiple object in one table, I have here sample DynamoDB table named ""User"" with fields (firstname, lastname, email, companies), can someone know how can I create a resolver to add a new item in histories? Thanks.</p>&#xA;&#xA;<pre><code>{&#xA;  ""id"": ""d7913a57-f458-4b81-8d6e-10f81e2b1dc2"",&#xA;  ""firstName"": ""John"",&#xA;  ""lastName"": ""Doe"",&#xA;  ""email"": ""johndoe@gmail.com"",&#xA;  ""companies"" : [&#xA;      {&#xA;        ""companyId"": ""6059be51-1e66-4f3a-9c8f-ced3bc89d562"",&#xA;        ""createdAt"": 321321,&#xA;        ""histories"": [&#xA;          {&#xA;           ""companyHistoryId"": ""dc9d1a57-fb82-4c25-a6cf-d27dfe114f8f"",&#xA;           ""content"": ""Company A was created."",&#xA;           ""createdAt"": 321321,&#xA;           ""createdBy"": ""d7913a57-f458-4b81-8d6e-10f81e2b1dc2""&#xA;          }&#xA;        ],&#xA;     },&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is the resolver I used to add new company</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""UpdateItem"",&#xA;    ""key"" : {&#xA;        ""id"": { ""S"": ""${context.arguments.id}"" },&#xA;    },&#xA;    ""update"" : {&#xA;        ""expression"" : ""SET companies = list_append(if_not_exists(companies, :emptyList), :newCompany)"",&#xA;        ""expressionValues"" : {&#xA;            "":emptyList"": { ""L"" : [] },&#xA;            "":newCompany"" : { ""L"" : [&#xA;                { ""M"": {&#xA;                    ""name"": { ""S"" : ""${context.arguments.name}"" },&#xA;                    ""createdAt"": { ""N"" : ""${context.arguments.createdAt}"" },&#xA;                    ""companyId"": { ""S"": ""$util.autoId()"" },&#xA;                    ""isActive"": { ""BOOL"" : true },&#xA;                    ""histories"": { ""L"": [&#xA;                        { ""M"": {&#xA;                            ""companyHistoryId"": { ""S"": ""$util.autoId()"" },&#xA;                            ""content"" : { ""S"" : ""${context.arguments.name} was created."" },&#xA;                            ""createdAt"": { ""N"" : ""${context.arguments.createdAt}"" },&#xA;                            ""createdBy"": { ""S"": ""${context.arguments.id}"" }&#xA;                        }}&#xA;                    ] }&#xA;                }}&#xA;            ] },&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",10783762,,8786986,2019-05-29 14:40:46,2019-05-29 14:40:46,Aws Appsync Resolver : How to create a resolver to update item in list map (DynaMoDB),<amazon-web-services><graphql><aws-appsync><resolver>,1,0,0,2019-05-29 02:42:06
56360573,2,,56352380,0,,"<p>Try this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""version"" : ""2017-02-28"",&#xA;  ""operation"" : ""UpdateItem"",&#xA;  ""key"" : {&#xA;      ""id"": { ""S"": ""${context.arguments.id}"" },&#xA;  },&#xA;  ""update"" : {&#xA;      ""expression"" : ""SET companies[$ctx.args.index].histories = list_append(if_not_exists(companies[$ctx.args.index].histories, :emptyList), :history)"",&#xA;      ""expressionValues"" : {&#xA;          "":emptyList"": { ""L"" : [] },&#xA;          "":history"" : { ""L"": [&#xA;              { ""M"": {&#xA;                  ""companyHistoryId"": { ""S"": ""$util.autoId()"" },&#xA;                  ""content"" : { ""S"" : ""${context.arguments.name} was created."" },&#xA;                  ""createdAt"": { ""N"" : ""${context.arguments.createdAt}"" },&#xA;                  ""createdBy"": { ""S"": ""${context.arguments.id}"" }&#xA;              }}&#xA;          ] }&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Remember to pass <code>$ctx.args.index</code> which is the index of <code>companies</code> item whose <code>histories</code> will be updated.</p>&#xA;",8786986,,,,2019-05-29 12:23:29,"",,0,0,0,2019-05-29 12:23:29
56370281,2,,56352841,0,,"<p>Finally figured it out. Apollo 2.x doesn't support delete mutations out of the box. So manual deletion from cache needs to be performed. The solution doesn't look too good (code explosion) but it's currently better than having a rock thrown in your back. </p>&#xA;&#xA;<p>Supposedly version 3.x should address this issue but currently, this is the solution I found works one would expect. </p>&#xA;&#xA;<pre><code>this.trashEmailGQL.mutate({&#xA;      id: mail.id,&#xA;      table: Table.ARCHIVE&#xA;    },  &#xA;    {&#xA;        refetchQueries: [{&#xA;          query: this.getEmailsGQL.document,&#xA;          variables: {table: Table.ARCHIVE}&#xA;        },&#xA;        {&#xA;          query: this.getEmailsGQL.document,&#xA;          variables: {table: Table.TRASH}&#xA;        }], &#xA;        optimisticResponse:{&#xA;          __typename:'Mutation',&#xA;          trashEmail:{&#xA;            __typename:""Email"",&#xA;            id:mail.id,&#xA;            fromEmail:mail.fromEmail,&#xA;            fromName:mail.fromName,&#xA;            fromAddress:mail.fromAddress,&#xA;            cc: mail.cc,&#xA;            bcc: [],&#xA;            replyTo:mail.replyTo,&#xA;            body:mail.body,&#xA;            contentType:mail.contentType,&#xA;            draftId:"""",&#xA;            read:mail.read,&#xA;            inReplyTo:mail.inReplyTo,&#xA;            inReferences:mail.inReferences,&#xA;            created:mail.created&#xA;          }&#xA;        },&#xA;        update: (store, {data :{trashedEmail}}) =&gt; {&#xA;          const data = store.readQuery({query: this.getEmailsGQL.document, variables: {table: Table.ARCHIVE}});&#xA;          if (data &amp;&amp; data.hasOwnProperty('getEmails')) {&#xA;            let cacheList:Email[] = data['getEmails'];&#xA;            let foundItemIndex = cacheList.findIndex(i =&gt; i.id === mail.id);&#xA;            if (foundItemIndex &gt; -1) {&#xA;              cacheList.splice(foundItemIndex,1)&#xA;              data['getEmails'] = cacheList&#xA;              store.writeQuery({query: this.getEmailsGQL.document, variables: {table: Table.ARCHIVE}, data:data});&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;     ).subscribe(({data}) =&gt; {&#xA;      console.log('Trashed email response: ', data);&#xA;    }, (err) =&gt; {&#xA;      this.errorService.handleError(err);&#xA;    });&#xA;</code></pre>&#xA;",10832596,,,,2019-05-30 00:50:52,"",,0,0,0,2019-05-30 00:50:52
56371590,2,,56371131,2,,"<p>Check out the new @key directive: <a href=""https://aws-amplify.github.io/docs/cli/graphql#key"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/cli/graphql#key</a></p>&#xA;",2733539,,,,2019-05-30 04:23:28,"",,0,0,0,2019-05-30 04:23:28
56392558,2,,55563073,0,,"<pre><code>curl -i -H ""Authorization: token &gt;&gt;Insert your token&lt;&lt;"" &#xA;     --data ""{ \""title\"": \""Milestone name\"", \""state\"": \""open\"", \""description\"": \""Write the new description\""}"" &#xA;     -X PATCH  https://api.github.com/repos/&gt;&gt;Github account name or group name&lt;&lt;/&gt;&gt;name of project&lt;&lt;/milestones/&gt;&gt;Id of the milestone&lt;&lt;&#xA;</code></pre>&#xA;&#xA;<p>In the <code>&gt;&gt; &lt;&lt;</code> you need to insert your information </p>&#xA;&#xA;<p>How to do a token <a href=""https://microclimate.dev/creatingpat"" rel=""nofollow noreferrer"">https://microclimate.dev/creatingpat</a></p>&#xA;&#xA;<p>Normaly Id is 1 ... not a high number</p>&#xA;&#xA;<p>this works on Windows cmd  </p>&#xA;",11582442,,7404943,2019-05-31 09:51:45,2019-05-31 09:51:45,"",,0,2,0,2019-05-31 09:42:58
56409045,1,,,4,1062,"<p>I'm currently setting up AWS Amplify with my react app and adding an API so I can use GraphQL.&#xA;I'm currently at a choice to add authorization type and my two options are API key or Amazon cognito user pool.&#xA;It's my understanding that the second choice means if a user is signed in, they can interact with the API calls.&#xA;What does the first choice (API key) mean?&#xA;What is the difference?</p>&#xA;",11466854,,,,2020-12-25 04:33:52,Difference Between Cognito User Pool and API Key For API Auth Type,<graphql><aws-amplify>,2,0,0,2019-06-01 17:45:48
56411561,2,,56409045,0,,"<p>API key is basically for unauthenticated workflows where the app doesn't need private access for different users. User Pools allows you to apply fine grained access controls. Take a look at the options with @auth in the GraphQL Transformer: <a href=""https://aws-amplify.github.io/docs/cli/graphql#auth"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/cli/graphql#auth</a></p>&#xA;",2733539,,,,2019-06-02 01:16:20,"",,0,0,0,2019-06-02 01:16:20
56433743,1,56438716,,25,7079,"<p>When <a href=""https://aws-amplify.github.io/docs/js/api#automated-configuration-with-cli"" rel=""noreferrer"">initializing a new GraphQL backend via the Amplify CLI</a>, the sample schema defines multiple types with the @model annotation. For example...</p>&#xA;&#xA;<pre><code>type Blog @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  posts: [Post] @connection(name: ""BlogPosts"")&#xA;}&#xA;type Post @model {&#xA;  id: ID!&#xA;  title: String!&#xA;  blog: Blog @connection(name: ""BlogPosts"")&#xA;  comments: [Comment] @connection(name: ""PostComments"")&#xA;}&#xA;type Comment @model {&#xA;  id: ID!&#xA;  content: String&#xA;  post: Post @connection(name: ""PostComments"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When pushed, this results in the creation of multiple DynamoDB tables (one per model). So in this example, three separate DynamoDB tables are created (Blogs, Posts, and Comments)</p>&#xA;&#xA;<p>In our case we have a <code>Users</code> model and we're going to have twenty or so small collections associated to the user. I feel uneasy about having to manage twenty different DynamoDB tables when it feels like these small collections all belong with the User object in a single table.</p>&#xA;&#xA;<p>From everything I'm reading it seems like AppSync is encouraging the use of multiple tables. For example, the <strong>Note</strong> in the screenshot below from the AWS AppSync documentation specifically calls out that the blog comments should go into a separate table in a production environment.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/AsMD7.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/AsMD7.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>This contradicts the best practice laid out in the <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-general-nosql-design.html"" rel=""noreferrer"">DynamoDB documentation</a>:</p>&#xA;&#xA;<blockquote>&#xA;  <p>You should maintain as few tables as possible in a DynamoDB application. Most well designed applications require only one table.</p>&#xA;</blockquote>&#xA;&#xA;<p>Is it truly the case that when using AppSync each type belongs in a separate DynamoDB table?</p>&#xA;",1076154,,1076154,2019-06-03 20:50:23,2019-06-04 06:49:19,AWS Amplify - AppSync & Multiple DynamoDB Tables,<amazon-web-services><amazon-dynamodb><graphql><aws-amplify><aws-appsync>,2,0,0,2019-06-03 19:54:14
56434472,2,,56433743,8,,"<blockquote>&#xA;  <p>Is it truly the case that when using AppSync each type belongs in a separate DynamoDB table?</p>&#xA;</blockquote>&#xA;&#xA;<p>No, you can use a single table to store different types (or entities) required for your service. As long as you have well defined access patterns for the data you will be using in your service, you may get away with only using one table. However, this approach might be a bit inflexible since you have to think about your access patterns beforehand and might be hard do add new ones in the future.</p>&#xA;&#xA;<p>There is currently no way of taking advantage of the @model directive in Amplify to have such configuration. You will have to manually create the table and then set up your resolvers accordingly for each Appsync type to query/mutate accordingly.</p>&#xA;&#xA;<p>This is a good article that explains the approach:&#xA;<a href=""https://www.trek10.com/blog/dynamodb-single-table-relational-modeling/"" rel=""noreferrer"">From relational DB to single DynamoDB table: a step-by-step exploration</a> </p>&#xA;",11595864,,,,2019-06-03 20:59:22,"",,0,0,0,2019-06-03 20:59:22
56442830,1,,,0,308,"<p>I am trying to query dynamoDB using AWS App sync codegen feature in iOS app. DynamoDB resolvers have also been created. I am able to query the table from the app sync explorer, However when  I execute the code, the query statement just gets skipped ... or does nothing.</p>&#xA;&#xA;<pre><code>func queryProfile() {&#xA;        print(""I Am Here1"")&#xA;        //appSyncClient?.fetch(query: GetSkill2CustomerEvQuery(skill: ""Doctor"")) { result, error in&#xA;        //appSyncClient?.fetch(query: ListSkill2CustomerEvsQuery()) { (result, error) in&#xA;        appSyncClient?.fetch(query: GetSkill2CustomerEvQuery(skill: ""Doctor""), cachePolicy: .returnCacheDataAndFetch)  { (result, error) in&#xA;        if error != nil {&#xA;                print(""I Am Here3"")&#xA;                print(error?.localizedDescription ?? """")&#xA;                return&#xA;            }&#xA;&#xA;            print(""I Am Here2"")&#xA;            print(result.debugDescription)&#xA;           // print(result?.data?.getSkill2CustomerEv?.userId! as Any)&#xA;        }&#xA;        print(""I Am Here4"")&#xA;    }&#xA;</code></pre>&#xA;&#xA;<blockquote>&#xA;<pre><code> output: &#xA; I Am Here1&#xA; I Am Here4&#xA;</code></pre>&#xA;</blockquote>&#xA;",3473295,,8104378,2019-06-10 18:05:54,2019-06-10 18:05:54,GraphQL query in swift IOS application using AWS app sync not executing (getting skipped),<ios><swift><graphql><aws-appsync>,0,4,0,2019-06-04 11:19:06
56467994,1,56470757,,3,1799,"<p>Is it possible to calling an AppSync mutation with Cognito authentication using Python? How?</p>&#xA;&#xA;<p>I am trying to use boto3, but I don't found a way to execute graphql operations.</p>&#xA;&#xA;<p><a href=""https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/appsync.html"" rel=""nofollow noreferrer"">https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/appsync.html</a></p>&#xA;",1216288,,,,2021-12-10 10:02:36,How to call an AppSync mutation with Cognito authentication using python?,<python><graphql><amazon-cognito><aws-appsync>,2,0,0,2019-06-05 21:04:20
56470757,2,,56467994,3,,"<p>You can turn your API auth mode to be ""API KEY"" and call an AppSync mutation with http.</p>&#xA;&#xA;<p>For example.</p>&#xA;&#xA;<pre class=""lang-py prettyprint-override""><code>import requests&#xA;import json&#xA;&#xA;APPSYNC_API_KEY = 'da2-xxxxxxxxxxxxx'&#xA;APPSYNC_API_ENDPOINT_URL = 'https://xxxxxxxxxxxxx.appsync-api.us-west-2.amazonaws.com/graphql'&#xA;&#xA;headers = {&#xA;    'Content-Type': ""application/graphql"",&#xA;    'x-api-key': APPSYNC_API_KEY,&#xA;    'cache-control': ""no-cache"",&#xA;}&#xA;&#xA;def execute_gql(query):&#xA;    payload_obj = {""query"": query}&#xA;    payload = json.dumps(payload_obj)&#xA;    response = requests.request(""POST"", APPSYNC_API_ENDPOINT_URL, data=payload, headers=headers)&#xA;    return response&#xA;</code></pre>&#xA;&#xA;<p>Imagine you have a model called <code>Items</code> and you can easily make query like below:</p>&#xA;&#xA;<pre class=""lang-py prettyprint-override""><code>if __name__ == '__main__':&#xA;    print(execute_gql(""query { listItems { items { id name } } }"").json())&#xA;</code></pre>&#xA;&#xA;<p>Simply replace the string with the mutation operation.</p>&#xA;",7550592,,7550592,2019-06-06 14:41:24,2019-06-06 14:41:24,"",,0,3,0,2019-06-06 04:05:18
56481482,1,56499800,,0,983,"<p>As of now we are using gstore to query the google cloud datastore, but we're looking to migrate from REST to GraphQL. The problem is I can't find any resources online on how to access the data on the google cloud datastore using GraphQL. I've got GraphQL working with local json files but haven't been able to make it query from the datastore.</p>&#xA;",6308213,,,,2019-06-07 18:49:53,How can I access a google cloud datastore using graphql?,<google-cloud-datastore><graphql-js>,1,0,0,2019-06-06 16:14:33
56489322,2,,56420064,3,,"<p>When you create a <code>@model</code> type using Amplify CLI, it generates your schema with a query called <code>listPosts</code>. This query has multiple parameters, one of them being <code>sortDirection</code>, which is of type <code>ModelSortDirection</code>.</p>&#xA;&#xA;<p>ModelSortDirection is an <code>enum</code> type and has the following shape:</p>&#xA;&#xA;<pre><code>enum ModelSortDirection {&#xA;    ASC&#xA;    DESC&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You can pass <code>DESC</code>. Moreover, if you edit the <code>posts</code> Resolver, from the API Schema page of your <a href=""https://console.aws.amazon.com/appsync/home"" rel=""nofollow noreferrer"">AppSync console</a>, you can see how this parameter is being used. It uses the DynamoDB <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_Query.html#API_Query_RequestParameters"" rel=""nofollow noreferrer"">scanIndexForward</a> to sort the rows coming back from your DataSource.</p>&#xA;&#xA;<pre><code>  ""scanIndexForward"":   #if( $context.args.sortDirection )&#xA;    #if( $context.args.sortDirection == ""ASC"" )&#xA;true&#xA;    #else&#xA;false&#xA;    #end&#xA;</code></pre>&#xA;",640607,,640607,2019-06-07 07:02:52,2019-06-07 07:02:52,"",,0,9,0,2019-06-07 06:54:08
56499800,2,,56481482,1,,"<p>It looks like <a href=""https://github.com/genie-team/graphql-genie"" rel=""nofollow noreferrer"">graphql-genie</a> supports GraphQL on Cloud Datastore.  If that doesn't work for you, should should be able to adapt the Firestore with GraphQL code.</p>&#xA;",7644371,,,,2019-06-07 18:49:53,"",,0,0,0,2019-06-07 18:49:53
56501938,2,,56486524,1,,"<p>Use input types when you need composited fields on the mutations, please check</p>&#xA;&#xA;<p><a href=""https://graphql.org/graphql-js/mutations-and-input-types/"" rel=""nofollow noreferrer"">https://graphql.org/graphql-js/mutations-and-input-types/</a></p>&#xA;&#xA;<p>Your schema, mutation and code should look something similar to this with the input types.</p>&#xA;&#xA;<p>Schema:</p>&#xA;&#xA;<pre><code>input ReservationInput {&#xA;  name: String!&#xA;  hotelName: String!&#xA;  arrivalDate: String!&#xA;  departureDate: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Mutation:</p>&#xA;&#xA;<pre><code>mutation createReservation($data: ReservationInput ){&#xA;     name&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Component:</p>&#xA;&#xA;<pre><code>&lt;Mutation mutation={addReservationMutation}&gt;&#xA;      {(addReservation, { data }) =&gt; (&#xA;        &lt;Button&#xA;          title=""Reserve your!""&#xA;          onPress={() =&gt; {&#xA;            addReservation({&#xA;              variables: {&#xA;                data: {&#xA;                  name: ""Joe"",&#xA;                  hotelName: ""LemonTree"",&#xA;                  arrivalDate: ""06/05/2019"",&#xA;                  departureDate: ""06/12/2019""&#xA;               }&#xA;              }&#xA;            });&#xA;          }}&#xA;        /&gt;&#xA;      )}&#xA;&lt;/Mutation&gt;&#xA;</code></pre>&#xA;",8581745,,,,2019-06-07 22:42:53,"",,0,0,0,2019-06-07 22:42:53
56513518,2,,55102722,0,,"<p>Try adding 'plugins.users-permissions.permissions' for the policies.</p>&#xA;&#xA;<pre><code>module.exports = {&#xA;  resolver: {&#xA;      Query: {&#xA;          posts: {&#xA;              description: 'Return a list of posts',&#xA;              policies: [&#xA;                  'plugins.users-permissions.permissions', &lt;---&#xA;                  'hasViewPermissions',&#xA;              ],&#xA;              resolver: 'Posts.find'&#xA;          },&#xA;      }&#xA;  },&#xA;};&#xA;</code></pre>&#xA;",5993122,,,,2019-06-09 09:39:17,"",,0,0,0,2019-06-09 09:39:17
56513679,1,57728484,,1,2410,"<p>I am using a simple Strapi policy like below to limit the REST result that belongs to the owner only, which documented in the following link.</p>&#xA;&#xA;<p><a href=""https://github.com/strapi/strapi/issues/624"" rel=""nofollow noreferrer"">https://github.com/strapi/strapi/issues/624</a></p>&#xA;&#xA;<pre><code>module.exports = async (ctx, next) =&gt; {&#xA;  const { id, role } = ctx.state.user;&#xA;  if(role !== 'administrator'){&#xA;    ctx.query.owner = id;&#xA;  }&#xA;  await next();&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Now I want to do the same for Graphql results, but it doesn't seems to work with the same code because ""ctx.query"" is undefined. I have tried looking at the all the request API but none of them seems to be work for Graphql query. The URL ended like '<a href=""http://localhost:1337/graphql"" rel=""nofollow noreferrer"">http://localhost:1337/graphql</a>', and 'ctx.request.query' is an empty [].</p>&#xA;&#xA;<p><a href=""https://strapi.io/documentation/3.0.0-beta.x/guides/requests.html#api-reference"" rel=""nofollow noreferrer"">https://strapi.io/documentation/3.0.0-beta.x/guides/requests.html#api-reference</a></p>&#xA;",5993122,,,,2019-08-30 14:18:05,Limit Graphql results that belongs to owner in Strapi,<graphql><strapi>,2,0,0,2019-06-09 10:06:26
56513965,2,,56513679,0,,"<p>Why are you looking at REST docs while searching for graphQL problem? There is no url query parsing at all.</p>&#xA;&#xA;<p>Owner role (permissions) can be checked using policies - it's described <a href=""https://strapi.io/documentation/3.0.0-alpha.x/guides/graphql.html#execute-a-policy-before-a-resolver"" rel=""nofollow noreferrer"">here</a>. </p>&#xA;&#xA;<p>The following sections contain examples of misc permission/customization - resolvers have a <code>context</code> parameter. User data should (did't checked) be available at <code>context.state.user</code>.</p>&#xA;",6124657,,,,2019-06-09 10:51:51,"",,0,8,0,2019-06-09 10:51:51
56518569,1,,,6,5572,"<p>I'm using react native and aws amplify to interface with graphQL. However when making this mutation I receive the error """"Variable 'input' has coerced Null value for NonNull type 'ID!'"". </p>&#xA;&#xA;<pre><code>addStudent = async (classData) =&gt; {&#xA;    try {&#xA;    let user = await Auth.currentAuthenticatedUser();&#xA;    const emailAttribute = user.attributes.email;&#xA;    const studentObj = {&#xA;      name: this.state.studentName,&#xA;      email: emailAttribute,&#xA;      class: classData.id,&#xA;    }&#xA;    await API.graphql(graphqlOperation(mutations.createStudent, { input: studentObj }));&#xA;} catch (err) {&#xA;    console.error(err);&#xA;}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is my schema:</p>&#xA;&#xA;<pre><code>type Class @model @auth(rules: [{ allow: owner, queries: null}]) {&#xA;id: ID!&#xA;name: String!&#xA;password: String!&#xA;email: String!&#xA;students: [Student] @connection(name: ""ClassStudents"")&#xA;}&#xA;&#xA;type Student @model @auth(rules: [{ allow: owner, queries: null}]) {&#xA;id: ID!&#xA;name: String!&#xA;email: String!&#xA;class: Class! @connection(name: ""ClassStudents"")&#xA;attendance: [Attendance] @connection(name: ""StudentAttendance"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And here is the mutation I'm trying to call that AWS generated:</p>&#xA;&#xA;<pre><code>export const createStudent = `mutation CreateStudent($input: CreateStudentInput!) {&#xA;  createStudent(input: $input) {&#xA;id&#xA;name&#xA;email&#xA;class {&#xA;  id&#xA;  name&#xA;  password&#xA;  email&#xA;  students {&#xA;    nextToken&#xA;  }&#xA;}&#xA;attendance {&#xA;  items {&#xA;    id&#xA;    date&#xA;  }&#xA;  nextToken&#xA;}&#xA;}&#xA;}&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>I have tried solutions from similar questions such as changing the syntax of the mutator argument but the error persists. Any idea of how to solve this?</p>&#xA;",9808269,,,,2020-12-05 14:39:35,"AWS graphQL error: ""Variable 'input' has coerced Null value for NonNull type 'ID!'""",<javascript><amazon-web-services><react-native><graphql><aws-sdk>,2,3,0,2019-06-09 21:41:08
56547036,1,,,3,971,"<p>We're seeing some odd behaviors where not all the items are being returned in an AppSync query.  There are 31 items in the database table, but the following query only returns 10 items? </p>&#xA;&#xA;<pre><code>query listAllDocuments {&#xA;        listDocuments {&#xA;          items{&#xA;            userId&#xA;          }&#xA;      }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>It's a simple DynamoDB resolver:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Scan"",&#xA;    ""filter"": #if($ctx.args.filter) $util.transform.toDynamoDBFilterExpression($ctx.args.filter) #else null #end,&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Other queries (that use the filter) also return some sub-set of the actual matching documents.</p>&#xA;",1366972,,,,2021-04-17 04:48:25,What cases will cause AppSync to not return all matching records/items from the DynamoDB table?,<amazon-web-services><graphql><aws-appsync>,2,0,0,2019-06-11 15:27:24
56547284,2,,46446042,3,,"<p>Whit Hasura you can do like this (IDK if that working only on Hasura)</p>&#xA;&#xA;<pre><code>query getConfigurationList($ids: [String!]!) {&#xA;    configuration (where: {id:{_in: $ids}}){&#xA;        id&#xA;        value&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the <a href=""https://docs.hasura.io/1.0/graphql/manual/queries/query-filters.html#list-based-search-operators-in-nin"" rel=""nofollow noreferrer"">docs</a></p>&#xA;",3160692,,,,2019-06-11 15:40:18,"",,0,0,0,2019-06-11 15:40:18
56567938,2,,56532208,-1,,"<p>From your schema, it seems to me that you are able to fetch results, as an array of objects, with an output like this:</p>&#xA;&#xA;<pre><code>[&#xA;    {&#xA;        id: 1,&#xA;        license: ""value1""&#xA;    },&#xA;    {&#xA;        id: 2,&#xA;        license: ""value2""&#xA;    }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>If this is all you need, then the <strong>approximate</strong> query should work:</p>&#xA;&#xA;<pre><code>query Resource {&#xA;    id&#xA;    url&#xA;    license&#xA;    licenseScore&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Once you have your array of objects, you can convert it to an array of arrays, although I would not advise that.</p>&#xA;&#xA;<p>Since you are just getting started in GraphQL, I recommened these resources:</p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://www.howtographql.com/"" rel=""nofollow noreferrer"">HowToGraphql</a>: clean videos/posts on GraphQL</li>&#xA;<li>Apollo Graphql's documentation and blogs. Here is one of the posts on <a href=""https://blog.apollographql.com/the-anatomy-of-a-graphql-query-6dffa9e9e747"" rel=""nofollow noreferrer"">queries</a></li>&#xA;</ul>&#xA;&#xA;<p>Also, if you want to test your queries and get accustomed to them, use <a href=""https://github.com/prisma/graphql-playground"" rel=""nofollow noreferrer"">GraphQL Playground</a></p>&#xA;",4017403,,,,2019-06-12 17:58:17,"",,0,5,0,2019-06-12 17:58:17
56582469,2,,54028252,4,,"<p>You should override create resolver like this:</p>&#xA;<p>Instead of:</p>&#xA;<pre><code>## [Start] Prepare DynamoDB PutItem Request. **&#xA;$util.qr($context.args.input.put(&quot;createdAt&quot;, $util.defaultIfNull($ctx.args.input.createdAt, $util.time.nowISO8601())))&#xA;$util.qr($context.args.input.put(&quot;updatedAt&quot;, $util.defaultIfNull($ctx.args.input.updatedAt, $util.time.nowISO8601())))&#xA;</code></pre>&#xA;<p>You should:</p>&#xA;<pre><code>## [Start] Prepare DynamoDB PutItem Request. **&#xA;$util.qr($context.args.input.put(&quot;createdAt&quot;, $util.time.nowISO8601()))&#xA;$util.qr($context.args.input.put(&quot;updatedAt&quot;, $util.time.nowISO8601()))&#xA;</code></pre>&#xA;<p>In update resolver</p>&#xA;<p>Instead of:</p>&#xA;<pre><code>## Automatically set the updatedAt timestamp. **&#xA;$util.qr($context.args.input.put(&quot;updatedAt&quot;, $util.defaultIfNull($ctx.args.input.updatedAt, $util.time.nowISO8601())))&#xA;</code></pre>&#xA;<p>You should:</p>&#xA;<pre><code>## Automatically set the updatedAt timestamp. **&#xA;$util.qr($context.args.input.put(&quot;updatedAt&quot;, $util.time.nowISO8601()))&#xA;</code></pre>&#xA;<p><a href=""https://www.fullsapps.com/2019/03/aws-amplify-overriding-auto-generated.html"" rel=""nofollow noreferrer"">aws-amplify-overriding-auto-generated</a></p>&#xA;<p>P.S. Place the new resolvers in /resolvers folder. Not in /build/resolvers</p>&#xA;",7061048,,-1,2020-06-20 09:12:55,2019-06-13 14:26:42,"",,0,0,0,2019-06-13 14:12:47
56587735,1,,,0,419,"<p>I have started using the AWS Amplify toolkit on an iOS, SwiftUI prototype.  The guide has this for runQuery:</p>&#xA;&#xA;<pre><code>func runQuery(){&#xA;    appSyncClient?.fetch(query: ListTodosQuery(), cachePolicy: .returnCacheDataAndFetch) {(result, error) in&#xA;        if error != nil {&#xA;            print(error?.localizedDescription ?? """")&#xA;            return&#xA;        }&#xA;        result?.data?.listTodos?.items!.forEach { print(($0?.name)! + "" "" + ($0?.description)!) }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I call it, I get duplicate items in output - cached and fetched.</p>&#xA;&#xA;<p>What is the purpose of the returnCacheDataAndFetch policy? How is this policy used in practice?</p>&#xA;&#xA;<p>NOTE: I have a few changes, not using the Todos but just a generic MyType from the aws cli generator.</p>&#xA;&#xA;<pre class=""lang-swift prettyprint-override""><code>&#xA;func runMutation(){&#xA;    let mutationInput = CreateMyTypeInput(title: ""Use AppSync"", content:""Realtime and Offline"")&#xA;    appSyncClient?.perform(mutation: CreateMyTypeMutation(input: mutationInput)) { (result, error) in&#xA;        if let error = error as? AWSAppSyncClientError {&#xA;            print(""Error occurred: \(error.localizedDescription )"")&#xA;        }&#xA;        if let resultError = result?.errors {&#xA;            print(""Error saving the item on server: \(resultError)"")&#xA;            return&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;func runQuery(){&#xA;    appSyncClient?.fetch(query: ListMyTypesQuery(), cachePolicy: .returnCacheDataAndFetch) {(result, error) in&#xA;        if error != nil {&#xA;            print(error?.localizedDescription ?? """")&#xA;            return&#xA;        }&#xA;        result?.data?.listMyTypes?.items!.forEach { print(($0?.id)! + "" "" + ($0?.title)! + "" "" + ($0?.content)!) }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",1133321,,1133321,2019-06-13 22:30:12,2019-07-01 15:31:37,Why would I use the CachePolicy returnCacheDataAndFetch for AWS AppSync queries?,<swift><amazon-web-services><graphql><aws-amplify><aws-appsync>,1,0,0,2019-06-13 19:55:39
56588035,1,,,1,1413,"<p>I am setting up a read only GraphQL instance using Java. GraphQL as I understand it needs to be told when to re-query its data sources. We are using GCP, and Cloud SQL for our primary data source. Our monolithic system is what is responsible for updating the data.</p>&#xA;&#xA;<p>Is there a way to trigger a web request or pub/sub message from cloud sql without sys_eval(sys_eval('curl <a href=""https://example.com"" rel=""nofollow noreferrer"">https://example.com</a>'));? </p>&#xA;&#xA;<p>or is there a way to turn on sys_eval in cloud sql?</p>&#xA;",2943432,,2943432,2019-06-13 20:39:44,2019-06-17 07:35:30,cloud sql send pubsub message on update/insert,<google-cloud-sql><google-cloud-pubsub><graphql-java>,1,2,0,2019-06-13 20:18:59
56641344,1,56641535,,0,1678,"<p>I want to use an angular object as an input variable to a graphql mutation. I've been researching for hours and have tried seemingly every possible combination per examples including using variables like this, which throws an error that theres a variable mismatch.</p>&#xA;&#xA;<pre><code>return this.apollo.mutate({&#xA;        mutation: gql`&#xA;          mutation saveLicense(license:License) {&#xA;            saveLicense(license:$license) {&#xA;              licenseId,&#xA;              name,&#xA;              body,&#xA;              deprecated,&#xA;              fsfLibre,&#xA;              osiApproved,&#xA;              spdxId,&#xA;              orLaterLicense,&#xA;              familyName,&#xA;              familyNameRegex,&#xA;              cleanName,&#xA;              twoNameRegex,&#xA;              nameAttributeList {&#xA;                attribute,&#xA;                index&#xA;              },&#xA;              attributes {&#xA;                attributeType,&#xA;                key&#xA;              }&#xA;            }&#xA;          }&#xA;        `,&#xA;         variables {license:license}&#xA;     });&#xA;</code></pre>&#xA;&#xA;<p>Ultimately, the query submitted to the server needs to look like this(with values of course):</p>&#xA;&#xA;<pre><code>return this.apollo.mutate({&#xA;        mutation: gql`&#xA;          mutation {&#xA;            saveLicense(&#xA;               license:{&#xA;                   licenseId:"""",&#xA;                                  name:"""",&#xA;                                  licenseFamily:"""",&#xA;                                  version:"""",&#xA;                                  replacementLicenseId:"""",&#xA;                                  spdxId:"""",&#xA;                                  deprecated: false,&#xA;                                  fsfLibre:false,&#xA;                                  osiApproved:false,&#xA;                                  orLaterLicense:false,&#xA;                                  familyName:"""",&#xA;                                  familyNameRegex:"""",&#xA;                                  cleanName:"""",&#xA;                                  twoNameRegex:"""",&#xA;                                  body:"""",&#xA;                                  description:""""&#xA;                }&#xA;              ){&#xA;              licenseId,&#xA;              name,&#xA;              body,&#xA;              deprecated,&#xA;              fsfLibre,&#xA;              osiApproved,&#xA;              spdxId,&#xA;              orLaterLicense,&#xA;              familyName,&#xA;              familyNameRegex,&#xA;              cleanName,&#xA;              twoNameRegex,&#xA;              nameAttributeList {&#xA;                attribute,&#xA;                index&#xA;              },&#xA;              attributes {&#xA;                attributeType,&#xA;                key&#xA;              }&#xA;            }&#xA;          }&#xA;        `,&#xA;     });&#xA;</code></pre>&#xA;&#xA;<p>The above query works, however I CANNOT figure out how to convert an angular object to the graphql string form that I need for the  query. After HOURS of research the only solution I have is to covert the object to a json representation, then back again and pass license as a string. This is obviously a serious hack!</p>&#xA;&#xA;<pre><code>JSON.parse(JSON.stringify(mylicense))&#xA;&#xA;</code></pre>&#xA;&#xA;<p>I'm looking for either an example of how to use variables with angular/Apollo OR a cleaner way of converting angular objects into strings I can use in Graphql.</p>&#xA;",4298102,,4298102,2019-06-18 03:56:32,2019-06-18 04:06:34,Graphql input object from angular object,<angular><graphql><apollo>,2,0,0,2019-06-18 03:23:02
56641557,2,,56641344,1,,"<p>Here is the <a href=""https://graphql.org/learn/queries/#variables"" rel=""nofollow noreferrer"">documentation</a> how to use variables in graphql.</p>&#xA;&#xA;<p>You should change your code as following.</p>&#xA;&#xA;<pre><code>return this.apollo.mutate({&#xA;  mutation: gql`&#xA;    mutation saveLicense($license: License) {&#xA;      saveLicense( license: $license ) {&#xA;        licenseId,&#xA;        name,&#xA;        body,&#xA;        deprecated,&#xA;        fsfLibre,&#xA;        osiApproved,&#xA;        spdxId,&#xA;        orLaterLicense,&#xA;        familyName,&#xA;        familyNameRegex,&#xA;        cleanName,&#xA;        twoNameRegex,&#xA;        nameAttributeList {&#xA;          attribute,&#xA;          index&#xA;        },&#xA;        attributes {&#xA;          attributeType,&#xA;          key&#xA;        }&#xA;      }&#xA;    }&#xA;  `,&#xA;    variables {license: license}&#xA;});&#xA;</code></pre>&#xA;",11600797,,,,2019-06-18 03:55:21,"",,0,0,0,2019-06-18 03:55:21
56663919,1,56715921,,0,1727,"<p>i have read all related question &#xA;but there is no my solution. so please do not do any kind of things....&#xA;and be patient understand problem...</p>&#xA;&#xA;<blockquote>&#xA;  <p>my problem is similar to other but in case of flutter i cannot find any solution</p>&#xA;</blockquote>&#xA;&#xA;<p>My GraphQL result are this.</p>&#xA;&#xA;<pre><code>""user"" : [&#xA;     {&#xA;        ""name"": ""test6"",&#xA;        ""password"": null,&#xA;        ""lastMessageAt"": null,&#xA;        ""profilePhoto"": null,&#xA;        ""aboutme"": null,&#xA;        ""status"": null,&#xA;        ""firstLogin"": false,&#xA;        ""blockedAt"": null&#xA;      },&#xA;      {&#xA;        ""name"": ""asdhihgh"",&#xA;        ""password"": null,&#xA;        ""lastMessageAt"": null,&#xA;        ""profilePhoto"": null,&#xA;        ""aboutme"": null,&#xA;        ""status"": null,&#xA;        ""firstLogin"": false,&#xA;        ""blockedAt"": null&#xA;      },&#xA;      {&#xA;        ""name"": ""Anil Kumar Jat"",&#xA;        ""password"": null,&#xA;        ""lastMessageAt"": null,&#xA;        ""profilePhoto"": null,&#xA;        ""aboutme"": null,&#xA;        ""status"": null,&#xA;        ""firstLogin"": false,&#xA;        ""blockedAt"": null&#xA;      }&#xA;    ]&#xA;</code></pre>&#xA;&#xA;<p>but in flutter take data into&#xA;<code>List _userData = (response.data['user']) as List&lt;dynamic&gt;;</code></p>&#xA;&#xA;<p>after that build ListView using <code>ListView.Builder</code> than </p>&#xA;&#xA;<p>i show only last record replicate in total records... means </p>&#xA;&#xA;<pre><code>name : Anil Kumar Jat&#xA;name : Anil Kumar Jat&#xA;name : Anil Kumar Jat&#xA;</code></pre>&#xA;&#xA;<p>something like this.</p>&#xA;&#xA;<p>My Code in Flutter are follow:</p>&#xA;&#xA;<pre><code>class NewChat extends StatelessWidget {&#xA;   String _allUserQuery {&#xA;      return """"""&#xA;      query {&#xA;        user {&#xA;            _id&#xA;            name&#xA;            mobileNo&#xA;            createdAt&#xA;            status&#xA;            aboutme&#xA;            profilePhoto&#xA;            isBlocked&#xA;          }&#xA;        }&#xA;    """""";&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;  return Scaffold(&#xA;      appBar: AppBar(title:Text('Chat'))&#xA;      body: Container(&#xA;          margin: EdgeInsets.symmetric(vertical: 5.0),&#xA;          child: Query(&#xA;   options: QueryOptions(document: _allUserQuery),&#xA;   builder: (QueryResult result, {VoidCallback refetch}) {&#xA;   if (result.errors != null) {&#xA;       print(result.errors);&#xA;   }&#xA;   if (result.loading) {&#xA;       return Center(child: CircularProgressIndicator());&#xA;   }&#xA;   if (result.data == null) {&#xA;        return Center(child: Text('No Data Found!'));&#xA;   }&#xA;&#xA;    final List _userData = (result.data['user']) as List&lt;dynamic&gt;;&#xA;&#xA;   return ListView.builder(&#xA;         itemCount: model.newUserList.length,&#xA;         itemBuilder: (BuildContext context, int index) {&#xA;             return Column(&#xA;                children: &lt;Widget&gt;[&#xA;                   ListTile(&#xA;                     dense: true,&#xA;                     title: Text(_userData[index]['name'].toString()),&#xA;                     onTap: () {},&#xA;                   ),&#xA;                   Divider(&#xA;                     height: 1.0,&#xA;                   ),&#xA;              ],&#xA;           );&#xA;        },&#xA;      );&#xA;    },&#xA;  ),&#xA; )&#xA; )&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Output like this:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/btBHl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/btBHl.png"" alt=""Output of above code like this""></a></p>&#xA;",2266402,,2266402,2019-06-19 12:20:20,2019-06-22 13:35:34,"why am i get only last record of json array, which received from graphql with flutter?",<mongodb><flutter><graphql>,2,2,0,2019-06-19 09:04:17
56681040,1,,,1,1218,"<p>I am trying to run a query on the query editor in my AppSync console. This AppSync API connects to my Aurora Serverless. I have no idea why my mutation is returning null. </p>&#xA;&#xA;<p>This is my schema:</p>&#xA;&#xA;<pre><code>input CreateMyAWSServiceInput {&#xA;    id: Int!&#xA;    shortName: String&#xA;    longName: String&#xA;    description: String&#xA;    serviceRegionName: String!&#xA;    feedUrl: String&#xA;    imageUrl: String&#xA;}&#xA;&#xA;type Mutation {&#xA;    deleteMyAWSService(id: Int!): MyAWSService&#xA;    createMyAWSService(createMyAWSServiceInput: CreateMyAWSServiceInput!): MyAWSService&#xA;    updateMyAWSService(updateMyAWSServiceInput: UpdateMyAWSServiceInput!): MyAWSService&#xA;}&#xA;&#xA;type MyAWSService {&#xA;    id: Int!&#xA;    shortName: String&#xA;    longName: String&#xA;    description: String&#xA;    serviceRegionName: String!&#xA;    feedUrl: String&#xA;    imageUrl: String&#xA;}&#xA;&#xA;type Query {&#xA;    getMyAWSService(id: Int!): MyAWSService&#xA;    listMyAWSServices: [MyAWSService]&#xA;}&#xA;&#xA;type Subscription {&#xA;    onCreateMyAWSService: MyAWSService&#xA;        @aws_subscribe(mutations: [""createMyAWSService""])&#xA;}&#xA;&#xA;input UpdateMyAWSServiceInput {&#xA;    id: Int!&#xA;    shortName: String&#xA;    longName: String&#xA;    description: String&#xA;    serviceRegionName: String&#xA;    feedUrl: String&#xA;    imageUrl: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is my query:</p>&#xA;&#xA;<pre><code>mutation create {&#xA;  createMyAWSService(createMyAWSServiceInput: {&#xA;    id:3,&#xA;    shortName:""abc"",&#xA;    longName:""defghi"",&#xA;    serviceRegionName: ""123""&#xA;  }){&#xA;    id&#xA;    shortName&#xA;    longName&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>These are my results:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""createMyAWSService"": null&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there a reason why I'm receiving null and not able to write to my table?</p>&#xA;",8061357,,,,2019-06-20 08:09:19,Query is returning Null,<graphql><aws-appsync><amazon-aurora>,1,0,0,2019-06-20 07:27:04
56681694,2,,56681040,2,,"<p>This issue was due to my data source role not having a policy to write data into the RDS. How it was resolved was by going to the IAM and finding the role of the datasource, and then adding in a RDS full permission policy to it. </p>&#xA;",8061357,,,,2019-06-20 08:09:19,"",,0,0,0,2019-06-20 08:09:19
56705274,1,56743001,,1,713,"<p><strong>Subject</strong><br>&#xA;I'm using amplify with GraphQL and DynamoDB as backend which works through AppSync. AppSync generates json based on vtl and executes it (I don't know in fact what part of the service executes it) - so it names as <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-changelog.html"" rel=""nofollow noreferrer"">Resolver Mapping Template</a></p>&#xA;&#xA;<p>I need to cover all my GraphQL endpoints with custom resolvers written by me but development hurts, cause I cannot find any workaround how to simplify development and testing except via aws console, what is slow and inconvenient</p>&#xA;&#xA;<p><strong>What I tried</strong><br>&#xA;As an approach I tried to create <code>DynamoDB</code> json files and upload them via <code>awscli</code>, but <code>AppSync</code> uses another json format - <code>Resolver Mapping Template</code></p>&#xA;&#xA;<p><strong>What I need</strong><br>&#xA;I would like to know any workaround and guidelines how to develop, debug and test my resolvers.&#xA;So I need 2 options or both  </p>&#xA;&#xA;<ol>&#xA;<li>Compare generated template with all <code>$util</code> stuff. nice to have</li>&#xA;<li>Execute generated template via cli into DynamoDB for checking results (or maybe there are any mock system). great to have</li>&#xA;</ol>&#xA;",484582,,,,2019-06-24 19:44:06,Resolver Mapping Template development guidelines,<graphql><aws-amplify><aws-appsync><vtl>,1,5,0,2019-06-21 14:22:29
56713927,2,,56713724,1,,"<p>GraphQL doesn't determine the value of a field, it is simply a transport layer. If your object looks like this:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const user = { name: ""Joe"" };&#xA;</code></pre>&#xA;&#xA;<p>And your query looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;  user {&#xA;    name&#xA;    details&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The GraphQL engine can't figure out the actual details of your user, as the details are null (or undefined, which is the same for this matter). If you wish to send non-null <code>user.details</code>  you must fetch them from somewhere.<br>&#xA;To be specific, if you want your response to look like this:</p>&#xA;&#xA;<pre><code>{&#xA;  name: ""Joe"",&#xA;  details: {&#xA;    phone_number: null&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The user you send must look like this:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const user = {&#xA;  name: ""Joe"",&#xA;  details: {&#xA;    phone_number: null&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3822311,,,,2019-06-22 08:36:41,"",,0,1,0,2019-06-22 08:36:41
56733807,1,56734717,,0,501,"<p>I would like to represent locale information using appsync Type enum. However, there are some special inside locale information. e.g. the <code>-</code> in <code>en-US</code>, <code>en-UK</code>. </p>&#xA;&#xA;<p>If it is possible, I want to retain the format of the locale string.</p>&#xA;",10181124,,,,2019-06-24 10:32:20,How to use special character (-) in appsync enum?,<graphql><aws-appsync>,1,0,0,2019-06-24 09:39:13
56753875,1,,,0,130,"<p>I am using AppSync with DynamoDB and GraphQL API. My current scheme works as expected but when trying to edit existing GSI I am getting an error.</p>&#xA;&#xA;<p>My current scheme looks like this:</p>&#xA;&#xA;<pre><code>type Item @model&#xA;  @key(fields: [""id"", ""version""])&#xA;  @key(name: ""type-subtype"", fields: [""type"", ""subtype""])&#xA;{&#xA;  id: ID!&#xA;  version: String!&#xA;  type: String!&#xA;  subtype: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to change GSI defined here to be:</p>&#xA;&#xA;<pre><code>@key(name: ""version-type-subtype"", fields: [""version"", ""type"", ""subtype""]&#xA;</code></pre>&#xA;&#xA;<p>The error I am getting is <code>Schema Creation Status is FAILED with details: Failed to parse schema document - ensure it's a valid SDL-formatted document</code>.</p>&#xA;&#xA;<p>Can someone help? Is there any constraint using sort key from primary index as hash in GSI that I am not aware of?</p>&#xA;&#xA;<p>Thanks</p>&#xA;",11533874,,11533874,2019-06-26 08:08:28,2019-06-26 08:08:28,Error while editing existing GSI on my scheme,<amazon-dynamodb><graphql><aws-appsync>,0,5,0,2019-06-25 12:17:28
56757430,2,,56753248,2,,"<p>I am missing the context of your use case, but I question why you would need this functionality.</p>&#xA;&#xA;<p>The typical use case would be to hydrate the <strong>data</strong> object with the property name and value as key value pairs, which will allow you to access the data in your JSX template as <strong>data.propertyname</strong>.</p>&#xA;&#xA;<p>If you change the structure to what you are suggesting above, you would need to know the ""name"" of the object when trying to access it in the context of the <strong>data</strong> object.</p>&#xA;",11698383,,11698383,2019-06-26 00:50:30,2019-06-26 00:50:30,"",,0,2,0,2019-06-25 15:26:19
56826035,1,57332663,,2,918,"<p>I'm trying to figure out how can you protect at field level a one-to-many <code>@connection</code> with <code>@auth</code> against mutations that shouldn't be allowed. (ie: deny a specific user to run a mutation that will end-up inserting posts as another user.)</p>&#xA;&#xA;<p>Starting with the example for protecting a mutation at the field level: <a href=""https://aws-amplify.github.io/docs/cli/graphql#field-level-authorization"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/cli/graphql#field-level-authorization</a></p>&#xA;&#xA;<p>I tried doing something like this:</p>&#xA;&#xA;<pre><code>type User @model @auth(rules: [{ allow: owner, ownerField: ""id"" }]) {&#xA;  id: ID!&#xA;  posts: [Post]&#xA;    @connection(name: ""UserPosts"")&#xA;    @auth(rules: [{ allow: owner, ownerField: ""id"" }])&#xA;}&#xA;&#xA;type Post @model {&#xA;  title: String!&#xA;  user: User!&#xA;    @connection(name: ""UserPosts"")&#xA;    @auth(rules: [{ allow: owner, ownerField: ""userPostId"" }])&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then say there already is a user with an id of <code>regular-user-id</code>&#xA;Apparently my auth rules don't stop another user, say with id of: <code>malicious-user-id</code> to run this mutation:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  createPost(input:{&#xA;    title:""Oh this is BAD!""&#xA;    postUserId: ""regular-user-id""&#xA;  }) {&#xA;    title&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Running a simple query to make sure this really happened:</p>&#xA;&#xA;<pre><code>query {&#xA;  getUser(id:""regular-user-id""){&#xA;    posts{&#xA;      items&#xA;      {&#xA;        title&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;=&gt; &#xA;{&#xA;  ""data"": {&#xA;    ""getUser"": {&#xA;      ""posts"": {&#xA;        ""items"": [&#xA;          {&#xA;            ""title"": ""Regular User title""&#xA;          },&#xA;          {&#xA;            ""title"": ""Oh this is BAD!""&#xA;          },&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I tried various ways to figure this one out and couldn't find any documentation about bi-directional field level authentication. I'm fairly new to AppSync so I think I must be not getting something, but then this is such common use-case scenario that I'm really surprised there isn't more documentation about it.</p>&#xA;&#xA;<p>Some help would be really appreciated.</p>&#xA;",1828653,,,,2019-08-02 19:50:23,How to do field level @auth for bi-directional one-to-many @connection with AppSync GraphQL Transform?,<graphql><aws-amplify><aws-appsync>,2,0,0,2019-06-30 15:26:42
56826378,2,,56826250,0,,<p>I managed to work it out. I can access the data using:</p>&#xA;&#xA;<pre><code>&lt;div&gt;&#xA;        {data.allPagesJson.edges.map(({ node }) =&gt; (&#xA;            &lt;div key={node.id}&gt;&#xA;&#xA;                &lt;h1&gt;{node.page_name}&lt;/h1&gt;&#xA;&#xA;&#xA;            &lt;/div&gt;&#xA;          ))}&#xA;&#xA;&#xA;      &lt;/div&gt;&#xA;</code></pre>&#xA;,11702089,,,,2019-06-30 16:22:25,"",,0,0,0,2019-06-30 16:22:25
56831248,2,,56826035,1,,"<p>Should the malicious user be able to update the <code>Post</code> title? I know this isn't an exact answer to your question since you're focusing on the relation field, but from trying to understand how to do these kind of things myself, I read a few things about introducing some form of 'everyone' group so you can define auth for user's who aren't owners. Then you could put auth on the entire <code>Post</code> model so only owners can update any field;</p>&#xA;&#xA;<pre><code>type Post &#xA;  @model &#xA;  @auth(rules: [&#xA;    { allow: owner, ownerField: ""userPostId"" },&#xA;    { allow: groups, groups: [""everyone""], operations: [read] }&#xA;  ]) {&#xA;  title: String!&#xA;  user: User!&#xA;    @connection(name: ""UserPosts"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm super new to amplify (I'm currently evaluating whether to use it for a project I'm starting), so I could be completely wrong here. If you do actually want a semi-open model where just the reference field has auth, I'm not sure how to do that :( </p>&#xA;",155328,,,,2019-07-01 07:02:17,"",,0,2,0,2019-07-01 07:02:17
56844790,1,,,1,34,"<p>Is it possible to specify the subfields allowed for a GraphQL Schema. For example I have this schema:</p>&#xA;&#xA;<pre><code>type User {&#xA;  username: String!&#xA;  mostPersonalSecretEver: String!&#xA;}&#xA;&#xA;type Location {&#xA;  name: String!&#xA;  owner: User!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I want to specify the only field you actually have access to is username. Is there a way to specify this in the schema? I'm guessing not, instead I have done this:</p>&#xA;&#xA;<pre><code>type User {&#xA;  username: String!&#xA;  mostPersonalSecretEver: String!&#xA;}&#xA;&#xA;type SanitizedUser {&#xA;  username: String!&#xA;}&#xA;&#xA;type Location {&#xA;  name: String!&#xA;  owner: SanitizedUser!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm just asking if there is a way I can't find to make a schema specify the fields available like this:</p>&#xA;&#xA;<pre><code>type Location {&#xA;  name: String!&#xA;  owner: User('username')!&#xA;}&#xA;</code></pre>&#xA;",2304751,,,,2019-07-02 03:07:29,Specifying sub-fields allowed in GraphQL Schema,<graphql>,0,0,0,2019-07-02 03:07:29
56847242,1,,,1,1147,"<p>I have a very simple graphQL resolver I am trying to get working and for whatever reason it isn't and keeps returning null even though I have set a GSI on username which is what I am trying to query by.</p>&#xA;&#xA;<p><strong>GraphQL schema:</strong></p>&#xA;&#xA;<pre><code>type Query {&#xA;    getUsersDevByUsername(username: String!): UsersDev&#xA;}&#xA;&#xA;type UsersDev {&#xA;    id: ID!&#xA;    username: String!&#xA;    group: Int&#xA;    hasProfile: Boolean&#xA;    currentSkill: Int&#xA;    highestSkill: Int&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>GraphQL resolver on query:</strong></p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Query"",&#xA;    ""index"" : ""username-index"",&#xA;    ""query"" : {&#xA;        ## Provide a query expression. **&#xA;        ""expression"": ""username = :username"",&#xA;        ""expressionValues"" : {&#xA;            "":username"" : $util.dynamodb.toDynamoDBJson($ctx.args.username)&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Query I am trying to run:</strong></p>&#xA;&#xA;<pre><code>query test {&#xA;  getUsersDevByUsername(username:""testUser""){&#xA;    id&#xA;    username&#xA;    group&#xA;    currentSkill&#xA;    highestSkill&#xA;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Error:</strong></p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getUsersDevByUsername"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""getUsersDevByUsername"",&#xA;        ""id""&#xA;      ],&#xA;      ""locations"": null,&#xA;      ""message"": ""Cannot return null for non-nullable type: 'ID' within parent 'UsersDev' (/getUsersDevByUsername/id)""&#xA;    },&#xA;    {&#xA;      ""path"": [&#xA;        ""getUsersDevByUsername"",&#xA;        ""username""&#xA;      ],&#xA;      ""locations"": null,&#xA;      ""message"": ""Cannot return null for non-nullable type: 'String' within parent 'UsersDev' (/getUsersDevByUsername/username)""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have no idea what I am doing wrong, I included the index I am using in the resolver and am following the example given in the resolver notes.  This is such a simple query and I don't understand why all this complexity is needed. The amount of time spent trying to configure ridiculously easy queries that would take literally 5 seconds to write in SQL is really turning me off to this. It's supposed to be ""so awesome"" but the boilerplate that is required to get it working is comical. </p>&#xA;&#xA;<p>Can someone <strong>PLEASE</strong> help me get this working so I can actually work on something productive rather than why a simple query isn't working?</p>&#xA;&#xA;<p>EDIT:</p>&#xA;&#xA;<p>SO I finally got this working.  Needed to change the result from:</p>&#xA;&#xA;<pre><code>$util.toJson($ctx.result) &#xA;</code></pre>&#xA;&#xA;<p>to: </p>&#xA;&#xA;<pre><code>#if($ctx.result.items.size()&gt;0)&#xA;$util.toJson($ctx.result.items[0])&#xA;#else&#xA;null&#xA;#end)&#xA;</code></pre>&#xA;&#xA;<p>which makes no sense since the AWS example with getting it by id uses the first one, but whatever, at least it's working now.</p>&#xA;",6401734,,6401734,2019-07-02 15:13:01,2019-07-02 18:30:37,AWS AppSync simple graphql resolver in Dynamo DB not working and it's driving me crazy,<amazon-web-services><amazon-dynamodb><graphql><aws-appsync>,1,0,0,2019-07-02 07:19:22
56859562,2,,54868534,0,,"<p>Aws Appsync is preferred when you need realtime and offline capabilities in your app, if I want only push notification the SNS is better than Aws Appsync</p>&#xA;",9718696,,,,2019-07-02 20:21:56,"",,0,0,0,2019-07-02 20:21:56
56859961,1,,,1,493,"<p>We have a React Native App using Apollo, now we are integrating Detox for e2e tests. We need to provide mocking responses to the test for making them feasible, so we are trying to integrate PollyJS for recording the requests.</p>&#xA;&#xA;<p>As far as I know ApolloClient uses <code>fetch</code> to make the http request, so we are trying to use the <code>FetchAdapter</code> in PollyJS to record the requests.</p>&#xA;&#xA;<p>We are expecting to have records from the Apollo client, but only calling fetch actually triggers Polly to record a request.</p>&#xA;",2460590,,2460590,2019-07-02 21:19:13,2019-07-09 00:54:28,Intercept Apollo/GraphQL requests on ReactNative with PollyJS,<react-native><apollo-client><detox>,1,0,0,2019-07-02 20:57:54
56861150,1,,,0,87,"<p>Given the GraphQL Schema:</p>&#xA;&#xA;<pre><code>&#xA;schema {&#xA;    query: Query&#xA;    mutation: Mutation&#xA;    subscription: Subscription&#xA;}&#xA;&#xA;type Mutation {&#xA;    addPost(id: ID! author: String! title: String content: String url: String): Post!&#xA;    updatePost(id: ID! author: String! title: String content: String url: String ups: Int! downs: Int! expectedVersion: Int!): Post!&#xA;    deletePost(id: ID!): Post!&#xA;}&#xA;&#xA;type Post {&#xA;    id: ID!&#xA;    author: String!&#xA;    title: String&#xA;    content: String&#xA;    url: String&#xA;    ups: Int&#xA;    downs: Int&#xA;    version: Int!&#xA;}&#xA;&#xA;type Query {&#xA;    allPost: [Post]&#xA;    getPost(id: ID!): Post&#xA;}&#xA;&#xA;type Subscription {&#xA;    newPost: Post&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>We see that the <code>addPost</code> expects a Post type. So in the resolver function of <code>addPost</code>, we need to retrieve all the data that form a Post type from database, right? But what we are gonna do in our resolver function is to send a <code>PutItem</code> (ex.) request to Post table in database without getting all the data back from database. Then where do we get the data needed for Post type to pass to the children resolvers? </p>&#xA;&#xA;<p>Is there some misunderstanding for me on how resolvers work?</p>&#xA;",10897535,,6024220,2019-07-03 02:01:22,2019-07-03 02:01:22,How could graphql mutation resolver retrieve data to pass to children resolvers,<amazon-dynamodb><graphql><aws-appsync>,0,5,0,2019-07-02 23:26:13
56861287,2,,56829014,1,,"<p>It sounds like you are trying to trigger lambda functions based on incoming mutations. </p>&#xA;&#xA;<p>Like you mentioned in option 3 - lambda resolvers can achieve this functionality but if what you would like to do is invoke a common lambda that publishes to SNS as a step in the execution - then you can utilize Pipeline Resolvers. Where the 'common' lambda function will be the data source for the step in your pipeline and then have the regular resolver you would use for Dynamo/ES/Aurora Serverless.</p>&#xA;&#xA;<p>Docs:&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html</a></p>&#xA;",10886417,,,,2019-07-02 23:50:03,"",,0,1,0,2019-07-02 23:50:03
56862152,2,,56860289,1,,"<p>I found the answer myself after a while digging through the documentation. Pytest needs permission to use the database. So the issue is solved by simply adding the pytest mark <code>@pytest.mark.django_db</code> before the test. As an alternative the whole module can be marked to allow database access by using <code>pytestmark = pytest.mark.django_db</code>. See <a href=""https://pytest-django.readthedocs.io/en/latest/database.html"" rel=""nofollow noreferrer"">pytest-django docs</a>.</p>&#xA;&#xA;<p>The documentation says the tests will fail if db access is not granted, so I would not expect them to stall forever.</p>&#xA;",3154357,,,,2019-07-03 02:31:21,"",,0,0,0,2019-07-03 02:31:21
56863784,1,,,1,909,"<p>I am having some issues with querying an array of Enums in a GraphQL query. I am expecting that the array or permissions will be returned with the user as per the type</p>&#xA;&#xA;<p>Bizarrely, when I make the same query in the playground (for either my Prisma or Apollo-Server servers) I do get back the array.</p>&#xA;&#xA;<p>My query looks like this:</p>&#xA;&#xA;<pre><code>const user = await ctx.db.query.user({&#xA;  where: {&#xA;    id: ctx.userId&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>My type definition looks like this:</p>&#xA;&#xA;<pre><code>type User {&#xA;    id: ID! @id&#xA;    name: String!&#xA;    email: String! @unique&#xA;    password: String!&#xA;    club: String!&#xA;    permissions: [Permission!]! @scalarList(strategy: RELATION)&#xA;    createdAt: DateTime! @createdAt&#xA;    updatedAt: DateTime! @updatedAt&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>permissions looking like</p>&#xA;&#xA;<pre><code>enum Permission {&#xA;    ADMIN&#xA;    CLUB_ADMIN&#xA;    USER&#xA;    FRIEND&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I haven’t included my query resolver as I have just forwarded that to the DB using “forward-to”</p>&#xA;&#xA;<p>But the CL of user is</p>&#xA;&#xA;<pre><code>{ id: 'cjxm9ohfqvkvh0b5963iy734i',&#xA;  name: 'BERTIE BOBBINS',&#xA;  email: 'BERTIE@DOGS.COM',&#xA;  password: '$2b$10$eLPoBuuenogLabiFb4tRFu0KV7LI4LxARhHecPYVbP0qnt5VvcZ3W',&#xA;  club: 'Dog Club',&#xA;  createdAt: '2019-07-02T20:30:49.670Z',&#xA;  updatedAt: '2019-07-02T20:30:49.670Z' }&#xA;</code></pre>&#xA;&#xA;<p>So not including the Permissions array.</p>&#xA;",8483183,,10526685,2019-07-03 08:23:46,2019-12-21 21:00:01,Why is my query not returning an array of Enums,<graphql><apollo-server><prisma>,2,3,0,2019-07-03 05:59:46
56876520,1,,,2,2779,<p>I'm trying to log errors to sentry but all I have access to is <code>formatError</code> option which doesn't include the native error so that sentry can display the stacktrace and more..</p>&#xA;,1870612,,,,2019-07-03 19:48:31,How can I send Apollo Server errors to Sentry?,<node.js><graphql-js><apollo-server>,1,0,0,2019-07-03 19:05:50
56886006,1,,,0,75,"<p>Let's assume, that I have this model structure:</p>&#xA;&#xA;<pre><code>User {&#xA;  id: int&#xA;  group: UserGroup&#xA;}&#xA;&#xA;UserGroup {&#xA;  id: int&#xA;  name: string&#xA;  users: User[]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to have possibility to do these actions:</p>&#xA;&#xA;<ul>&#xA;<li>create users group</li>&#xA;<li>edit group data</li>&#xA;<li>add user to group</li>&#xA;<li>remove user from group</li>&#xA;<li>remove all users from group</li>&#xA;</ul>&#xA;&#xA;<p>What I want to ask is: <strong>what is the best practice for creating fields for such operations in GraphQL?</strong> I'm thinking about some possible options (maybe there are other ones):</p>&#xA;&#xA;<p><strong>1. Many simpler fields</strong></p>&#xA;&#xA;<p>In here, many fields will be added. One field references a single action mentioned above. So this is relatively simple.</p>&#xA;&#xA;<pre><code>createGroup(groupId: Int!, name: String!, users: Array&lt;User&gt;): Group&#xA;editGroup(groupId: Int!, name: String, users: Array&lt;User&gt;): Group&#xA;addUserToGroup(groupId: Int!, user: User!): Group&#xA;removeUserFromGroup(groupId: Int!, userId: Int!): Group&#xA;removeAllUsersFromGroup(groupId: Int!): Group&#xA;</code></pre>&#xA;&#xA;<p><strong>2. Resource fields</strong></p>&#xA;&#xA;<p>In here, fields reference model resources. So in regards to our example, there should be only two of them:</p>&#xA;&#xA;<pre><code>createGroup(groupId: Int!, name: String!, users: Array&lt;User&gt;): Group&#xA;editGroup(groupId: Int!, name: String, users: Array&lt;User&gt;): Group&#xA;</code></pre>&#xA;&#xA;<p>But in case of <code>editGroup</code> node, users list is always overwritten. So in the front-end code, there is always a ""must"" of having a complete list of users. We all should know, that this can be a little overwhelming to implement this. Especially when having lists with many items or not having the whole list in particular part of the system.</p>&#xA;&#xA;<p><strong>3. Resources fields and operation custom type</strong></p>&#xA;&#xA;<pre><code>UsersMutationType {&#xA;  operation: (ADD|DELETE|DELETE_ALL)!,&#xA;  users: Array&lt;int&gt;!&#xA;}&#xA;&#xA;createGroup(groupId: Int!, name: String!, users: Array&lt;User&gt;): Group&#xA;editGroup(groupId: Int!, name: String, users: UsersMutationType): Group&#xA;</code></pre>&#xA;&#xA;<p>So in here, a separate type will be created. This type will tell what users operation should be done (if even should). In here, we eliminate the problem of loading a whole list of users for particular group. So, if we want to remove single user, we just define <code>operation</code> as <code>DELETE</code> and add user id to <code>users</code>. If we want to remove all users, we leave <code>users</code> empty, and set <code>DELETE_ALL</code> as operation value.</p>&#xA;&#xA;<p>Sooo... back to the question. What is the best practice in regards to above topic? Should we create many simpler fields, or is it better to do this with the other presented ways?</p>&#xA;",912130,,6024220,2019-07-04 11:45:00,2019-07-04 11:45:00,Best practices of writing mutation fields in GraphQL,<graphql>,0,3,0,2019-07-04 10:30:38
56900332,1,56943485,,8,1232,"<p>When we request a GraphQL query, for instance,</p>&#xA;<pre><code>query GetPost {&#xA;  singlePost(id: 123) {&#xA;    id&#xA;    title&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and we have configured a Lambda resolver in AWS AppSync, the request mapping template,</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    &quot;version&quot;: &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot;: &quot;Invoke&quot;,&#xA;    &quot;payload&quot;: {&#xA;        &quot;resolve&quot;: &quot;singlePost&quot;,&#xA;        &quot;query&quot;: $utils.toJson($context.arguments)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>allows us to define the event object passed to the lambda handler.</p>&#xA;<p>For the above example, our Lambda handler would be invoked with an event <code>event</code> wherein <code>event.payload.query.id == 123</code> or the like.</p>&#xA;<p>According to  <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html"" rel=""nofollow noreferrer"">the docs</a> the <code>$context</code> object comprises,</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    &quot;arguments&quot; : { ... },&#xA;    &quot;source&quot; : { ... },&#xA;    &quot;result&quot; : { ... },&#xA;    &quot;identity&quot; : { ... },&#xA;    &quot;request&quot; : { ... }&#xA;}&#xA;</code></pre>&#xA;<p><strong>That said, the documentation does not mention where I can access the requested fields of the GraphQL query</strong>.</p>&#xA;<p>For the former example, these fields would correspond to <code>[&quot;id&quot;, &quot;title&quot;]</code>.</p>&#xA;<p>In the case that I need to resolve some nested properties, e.g. a tags array, of an object through an expensive operation, e.g. a SQL join, it would be beneficial if I could check if this nested property is actually requested.</p>&#xA;<p>This question relates to <a href=""https://stackoverflow.com/questions/48004805/how-to-get-requested-fields-inside-graphql-resolver"">How to get requested fields inside GraphQL resolver?</a>, however, it differs from in the GraphQL implementation <code>graphql-tools</code> vs AppSync.</p>&#xA;",1246987,,1480391,2022-01-28 14:52:44,2022-01-28 14:53:14,Access requested fields in resolver mapping template,<graphql><aws-appsync>,3,0,0,2019-07-05 09:31:20
56924857,1,57782139,,7,7782,"<p>I am using Vue.js with Vue-Apollo and trying to fetch shared member list using query. I am using the graphQL service in backend.</p>&#xA;&#xA;<p>I am using apollo 'error' function to handle GraphQL error. When the request is made with invalid input, I can see the errors in the network tab, I can see the JSON for the custom errors messages. But I can't console the errors in 'error' function.</p>&#xA;&#xA;<p>Here is the apollo query that is used to fetch shared member list -</p>&#xA;&#xA;<pre><code>apollo: {&#xA;    sharedMembers: {&#xA;      query: gql`&#xA;        query item($uuid: ID) {&#xA;          item(uuid: $uuid) {&#xA;            ...itemTemplate&#xA;            members {&#xA;              ...member&#xA;              permission&#xA;            }&#xA;          }&#xA;        }&#xA;        ${ITEM_TEMPLATE}&#xA;        ${MEMBER}&#xA;      `,&#xA;      variables() {&#xA;        return {&#xA;          uuid: this.$route.params.uuid,&#xA;        }&#xA;      },&#xA;      update(data) {&#xA;        return data.item.members&#xA;      },&#xA;      error(error) {&#xA;       console.log('errors', error)&#xA;      }&#xA;    },&#xA;  },&#xA;&#xA;</code></pre>&#xA;&#xA;<p>The network response I got -</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/oJlB1.png"" rel=""noreferrer"">network_error</a></p>&#xA;",4743541,,4743541,2020-03-02 06:52:48,2021-04-06 09:21:41,How to handle Apollo Graphql query error in Vue.JS?,<graphql><vue-apollo>,2,3,0,2019-07-07 18:13:46
56925335,1,,,1,457,"<p>I have two different endpoints with the same schema and I want to read all data from one GraphQL endpoint and write it to the other.</p>&#xA;&#xA;<p>One of the endpoints is provided by <a href=""https://graphcms.com/"" rel=""nofollow noreferrer"">https://graphcms.com/</a> service and I recently set up a GraphQL server on AWS based on <a href=""https://strapi.io"" rel=""nofollow noreferrer"">https://strapi.io</a> project. I would like to avoid manually populating the new server with the data that already exist on graphcms so I am looking to write two graphql queries - one to read all nodes from graphcms endpoint and then write it to the other endpoint.</p>&#xA;&#xA;<p>Here is the full schema of the target server (I need to populate only the Microsite type):</p>&#xA;&#xA;<pre><code>directive @cacheControl(&#xA;  maxAge: Int&#xA;  scope: CacheControlScope&#xA;) on FIELD_DEFINITION | OBJECT | INTERFACE&#xA;enum CacheControlScope {&#xA;  PUBLIC&#xA;  PRIVATE&#xA;}&#xA;&#xA;input createMicrositeInput {&#xA;  data: MicrositeInput&#xA;}&#xA;&#xA;type createMicrositePayload {&#xA;  microsite: Microsite&#xA;}&#xA;&#xA;input createRoleInput {&#xA;  data: RoleInput&#xA;}&#xA;&#xA;type createRolePayload {&#xA;  role: UsersPermissionsRole&#xA;}&#xA;&#xA;input createUserInput {&#xA;  data: UserInput&#xA;}&#xA;&#xA;type createUserPayload {&#xA;  user: UsersPermissionsUser&#xA;}&#xA;&#xA;scalar DateTime&#xA;&#xA;input deleteMicrositeInput {&#xA;  where: InputID&#xA;}&#xA;&#xA;type deleteMicrositePayload {&#xA;  microsite: Microsite&#xA;}&#xA;&#xA;input deleteRoleInput {&#xA;  where: InputID&#xA;}&#xA;&#xA;type deleteRolePayload {&#xA;  role: UsersPermissionsRole&#xA;}&#xA;&#xA;input deleteUserInput {&#xA;  where: InputID&#xA;}&#xA;&#xA;type deleteUserPayload {&#xA;  user: UsersPermissionsUser&#xA;}&#xA;&#xA;input editFileInput {&#xA;  name: String&#xA;  hash: String&#xA;  sha256: String&#xA;  ext: String&#xA;  mime: String&#xA;  size: String&#xA;  url: String&#xA;  provider: String&#xA;  public_id: String&#xA;  related: [ID]&#xA;}&#xA;&#xA;input editMicrositeInput {&#xA;  name: String&#xA;  url: String&#xA;  image: String&#xA;  isVideo: Boolean&#xA;  importance: Int&#xA;  location: String&#xA;  parent: ID&#xA;  children: [ID]&#xA;}&#xA;&#xA;input editRoleInput {&#xA;  name: String&#xA;  description: String&#xA;  type: String&#xA;  permissions: [ID]&#xA;  users: [ID]&#xA;}&#xA;&#xA;input editUserInput {&#xA;  username: String&#xA;  email: String&#xA;  provider: String&#xA;  password: String&#xA;  resetPasswordToken: String&#xA;  confirmed: Boolean&#xA;  blocked: Boolean&#xA;  role: ID&#xA;}&#xA;&#xA;input FileInput {&#xA;  name: String!&#xA;  hash: String!&#xA;  sha256: String&#xA;  ext: String&#xA;  mime: String!&#xA;  size: String!&#xA;  url: String!&#xA;  provider: String!&#xA;  public_id: String&#xA;  related: [ID]&#xA;}&#xA;&#xA;input InputID {&#xA;  id: ID!&#xA;}&#xA;&#xA;scalar JSON&#xA;&#xA;scalar Long&#xA;&#xA;type Microsite {&#xA;  id: ID!&#xA;  created_at: DateTime!&#xA;  updated_at: DateTime!&#xA;  name: String&#xA;  url: String&#xA;  image: String&#xA;  isVideo: Boolean&#xA;  importance: Int&#xA;  location: String&#xA;  parent: Microsite&#xA;  children(sort: String, limit: Int, start: Int, where: JSON): [Microsite]&#xA;}&#xA;&#xA;input MicrositeInput {&#xA;  name: String&#xA;  url: String&#xA;  image: String&#xA;  isVideo: Boolean&#xA;  importance: Int&#xA;  location: String&#xA;  parent: ID&#xA;  children: [ID]&#xA;}&#xA;&#xA;union Morph =&#xA;    UsersPermissionsMe&#xA;  | UsersPermissionsMeRole&#xA;  | Microsite&#xA;  | createMicrositePayload&#xA;  | updateMicrositePayload&#xA;  | deleteMicrositePayload&#xA;  | UploadFile&#xA;  | UsersPermissionsPermission&#xA;  | UsersPermissionsRole&#xA;  | createRolePayload&#xA;  | updateRolePayload&#xA;  | deleteRolePayload&#xA;  | UsersPermissionsUser&#xA;  | createUserPayload&#xA;  | updateUserPayload&#xA;  | deleteUserPayload&#xA;type Mutation {&#xA;  createMicrosite(input: createMicrositeInput): createMicrositePayload&#xA;  updateMicrosite(input: updateMicrositeInput): updateMicrositePayload&#xA;  deleteMicrosite(input: deleteMicrositeInput): deleteMicrositePayload&#xA;  createRole(input: createRoleInput): createRolePayload&#xA;  updateRole(input: updateRoleInput): updateRolePayload&#xA;  deleteRole(input: deleteRoleInput): deleteRolePayload&#xA;  createUser(input: createUserInput): createUserPayload&#xA;  updateUser(input: updateUserInput): updateUserPayload&#xA;  deleteUser(input: deleteUserInput): deleteUserPayload&#xA;  upload(refId: ID, ref: String, source: String, file: Upload!): UploadFile!&#xA;}&#xA;&#xA;type Query {&#xA;  microsite(id: ID!): Microsite&#xA;  microsites(sort: String, limit: Int, start: Int, where: JSON): [Microsite]&#xA;  files(sort: String, limit: Int, start: Int, where: JSON): [UploadFile]&#xA;  role(id: ID!): UsersPermissionsRole&#xA;  roles(&#xA;    sort: String&#xA;    limit: Int&#xA;    start: Int&#xA;    where: JSON&#xA;  ): [UsersPermissionsRole]&#xA;  user(id: ID!): UsersPermissionsUser&#xA;  users(&#xA;    sort: String&#xA;    limit: Int&#xA;    start: Int&#xA;    where: JSON&#xA;  ): [UsersPermissionsUser]&#xA;  me: UsersPermissionsMe&#xA;}&#xA;&#xA;input RoleInput {&#xA;  name: String!&#xA;  description: String&#xA;  type: String&#xA;  permissions: [ID]&#xA;  users: [ID]&#xA;}&#xA;&#xA;input updateMicrositeInput {&#xA;  where: InputID&#xA;  data: editMicrositeInput&#xA;}&#xA;&#xA;type updateMicrositePayload {&#xA;  microsite: Microsite&#xA;}&#xA;&#xA;input updateRoleInput {&#xA;  where: InputID&#xA;  data: editRoleInput&#xA;}&#xA;&#xA;type updateRolePayload {&#xA;  role: UsersPermissionsRole&#xA;}&#xA;&#xA;input updateUserInput {&#xA;  where: InputID&#xA;  data: editUserInput&#xA;}&#xA;&#xA;type updateUserPayload {&#xA;  user: UsersPermissionsUser&#xA;}&#xA;&#xA;scalar Upload&#xA;&#xA;type UploadFile {&#xA;  id: ID!&#xA;  created_at: DateTime!&#xA;  updated_at: DateTime!&#xA;  name: String!&#xA;  hash: String!&#xA;  sha256: String&#xA;  ext: String&#xA;  mime: String!&#xA;  size: String!&#xA;  url: String!&#xA;  provider: String!&#xA;  public_id: String&#xA;  related(sort: String, limit: Int, start: Int, where: JSON): [Morph]&#xA;}&#xA;&#xA;input UserInput {&#xA;  username: String!&#xA;  email: String!&#xA;  provider: String&#xA;  password: String&#xA;  resetPasswordToken: String&#xA;  confirmed: Boolean&#xA;  blocked: Boolean&#xA;  role: ID&#xA;}&#xA;&#xA;type UsersPermissionsMe {&#xA;  _id: ID!&#xA;  username: String!&#xA;  email: String!&#xA;  confirmed: Boolean&#xA;  blocked: Boolean&#xA;  role: UsersPermissionsMeRole&#xA;}&#xA;&#xA;type UsersPermissionsMeRole {&#xA;  _id: ID!&#xA;  name: String!&#xA;  description: String&#xA;  type: String&#xA;}&#xA;&#xA;type UsersPermissionsPermission {&#xA;  id: ID!&#xA;  type: String!&#xA;  controller: String!&#xA;  action: String!&#xA;  enabled: Boolean!&#xA;  policy: String&#xA;  role: UsersPermissionsRole&#xA;}&#xA;&#xA;type UsersPermissionsRole {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;  type: String&#xA;  permissions(&#xA;    sort: String&#xA;    limit: Int&#xA;    start: Int&#xA;    where: JSON&#xA;  ): [UsersPermissionsPermission]&#xA;  users(&#xA;    sort: String&#xA;    limit: Int&#xA;    start: Int&#xA;    where: JSON&#xA;  ): [UsersPermissionsUser]&#xA;}&#xA;&#xA;type UsersPermissionsUser {&#xA;  id: ID!&#xA;  created_at: DateTime!&#xA;  updated_at: DateTime!&#xA;  username: String!&#xA;  email: String!&#xA;  provider: String&#xA;  confirmed: Boolean&#xA;  blocked: Boolean&#xA;  role: UsersPermissionsRole&#xA;}&#xA;&#xA;&#xA;</code></pre>&#xA;",5723076,,5723076,2019-07-10 03:30:49,2019-07-10 03:30:49,GraphQL query to copy data from one server to another,<graphql>,0,5,0,2019-07-07 19:14:44
56949689,1,,,0,2685,"<p>How can I create query with multiple string parameters. I have used apollo client and created query as follow. But xcode didnot allow to build.</p>&#xA;&#xA;<pre><code>mutation changePassword($oldPass: String, $newPass: String) {&#xA;    changePassword(old_password: $oldPass, new_password: $newPass) {      &#xA;    }&#xA;}&#xA;</code></pre>&#xA;",6011255,,2822664,2019-07-09 10:51:19,2019-07-09 20:37:18,How to pass multiple string parameter in GraphQl query using apollo client,<graphql><apollo-client><swift4.2>,1,5,0,2019-07-09 09:40:13
56952799,1,56980661,,7,3707,"<p>I am not sure how to send signed http request do AppSync GraphQL endpoint. There is no library for do that in AWS.</p>&#xA;&#xA;<ul>&#xA;<li><code>aws-amplify</code> don't work because works only in browser, not in Lambda function.</li>&#xA;<li><code>aws-sdk</code> for AppSync is only for admin usage, it doesn't have methods for call user side api</li>&#xA;</ul>&#xA;&#xA;<p>It is possible to make IAM signed HTTP request from AWS Lambda? (in some easy way)</p>&#xA;",3939257,,,,2020-07-31 06:24:19,How to send signed HTTP request from AWS Lambda to AppSync GraphQL?,<javascript><amazon-web-services><aws-lambda><graphql><aws-appsync>,3,0,0,2019-07-09 12:39:02
56956415,2,,56946223,0,,"<p>The <code>GraphQLModule</code> actually does not take into account any globalPrefix you have set, so it's endpoint is just at <code>/graphql</code> unless you specify otherwise</p>&#xA;",9576186,,,,2019-07-09 15:53:34,"",,0,0,0,2019-07-09 15:53:34
56958578,2,,56952799,0,,"<p>You can use any graphql client or a sigv4 signed HTTP request. Here's how you create the signature for your request (<a href=""https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html</a>). If you attach an execution role to your lambda you can access it access key from lambda environment variables (<a href=""https://docs.aws.amazon.com/lambda/latest/dg/lambda-environment-variables.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/lambda/latest/dg/lambda-environment-variables.html</a>).</p>&#xA;",11730550,,,,2019-07-09 18:23:31,"",,0,0,0,2019-07-09 18:23:31
56979483,2,,56795531,5,,"<p>So the code below is from a file called PROJECT/STRAPI/config/functions/bootstrap.js&#xA;This automates creating the content types and content with information we keep in an excel spreadsheet. But in order to use those content types, there are roles and permissions that have to be activated so the web ui can access them.&#xA;Basically, we do not want to manually go into the Strapi UI to create your user, create content types, create content or update the permissions. We want a script to do all of that.</p>&#xA;&#xA;<pre><code>'use strict'&#xA;</code></pre>&#xA;&#xA;<p>Our Environment Variables</p>&#xA;&#xA;<pre><code>require('dotenv').config({ path:'../.env' })&#xA;</code></pre>&#xA;&#xA;<p>Excel Spreadsheet Holding our data (attached)</p>&#xA;&#xA;<pre><code>const XLSX = require('xlsx')&#xA;const BOOTSTRAP_DATA = XLSX.readFile(process.env.BOOTSTRAP_DATA).Sheets&#xA;</code></pre>&#xA;&#xA;<p>Variables pulled from .env</p>&#xA;&#xA;<pre><code>const ADMIN_USERNAME = process.env.ADMIN_USERNAME&#xA;const ADMIN_PASSWORD = process.env.ADMIN_PASSWORD&#xA;const ADMIN_EMAIL    = process.env.ADMIN_EMAIL&#xA;</code></pre>&#xA;&#xA;<p>Reading in the XLSX</p>&#xA;&#xA;<pre><code>async function bootstrap_resource(resource_type, resource_service) {&#xA;  strapi.log.info(`Bootstrapping ${resource_type}`)&#xA;&#xA;  const resources = XLSX.utils.sheet_to_json(BOOTSTRAP_DATA[resource_type])&#xA;&#xA;  for (let resource of resources) {&#xA;&#xA;    if (await resource_service.count(resource) === 0) {&#xA;      strapi.log.warn(`Bootstrapping ${resource_type}: ${JSON.stringify(resource)}`)&#xA;&#xA;      await resource_service.create(resource)&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Creating the initial USER for strapi</p>&#xA;&#xA;<pre><code>async function bootstrap_admin() {&#xA;  strapi.log.info(`Bootstrapping Admin`)&#xA;&#xA;  const admin_orm = strapi.admin.queries('administrator', 'admin')&#xA;&#xA;  const admins = await admin_orm.find({username: ADMIN_USERNAME})&#xA;&#xA;  if ( admins.length === 0) {&#xA;    const blocked  = false&#xA;    const username = ADMIN_USERNAME&#xA;    const password = await strapi.admin.services.auth.hashPassword(ADMIN_PASSWORD)&#xA;    const email    = ADMIN_EMAIL&#xA;    const user     = { blocked, username, password, email }&#xA;&#xA;    const data = await admin_orm.create(user)&#xA;&#xA;    strapi.log.warn(`Bootstrapped Admin User: ${JSON.stringify(user)}`)&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The following are get_roles() - required for get_permissions(), and get_permissions() is required for enable_permissions() This is where we turn on those content types so the web ui can see it.</p>&#xA;&#xA;<pre><code>async function get_roles() {&#xA;  const role_orm = strapi.plugins['users-permissions'].queries('role', 'users-permissions')&#xA;&#xA;  const role_list = await role_orm.find({}, [])&#xA;&#xA;  const roles = {}&#xA;&#xA;  for (let role of role_list) {&#xA;    roles[ role._id ] = role&#xA;    roles[ role.name ] = role&#xA;  }&#xA;&#xA;  return roles&#xA;}&#xA;&#xA;async function get_permissions( selected_role, selected_type, selected_controller ) {&#xA;  const roles          = await get_roles()&#xA;  const permission_orm = strapi.plugins['users-permissions'].queries('permission', 'users-permissions')&#xA;&#xA;  let permission_list  = await permission_orm.find({_limit: 999}, [])&#xA;&#xA;  if ( selected_role       ) permission_list = permission_list.filter( ({ role       }) =&gt; `${role}`       === `${roles[selected_role]._id}` )&#xA;  if ( selected_type       ) permission_list = permission_list.filter( ({ type       }) =&gt; `${type}`       === `${selected_type}`            )&#xA;  if ( selected_controller ) permission_list = permission_list.filter( ({ controller }) =&gt; `${controller}` === `${selected_controller}`      )&#xA;&#xA;  return permission_list&#xA;}&#xA;&#xA;async function enable_permissions(role, type, controller) {&#xA;  strapi.log.info(`Setting '${controller}' permissions for '${role}'`)&#xA;&#xA;  const permission_orm = strapi.plugins['users-permissions'].queries('permission', 'users-permissions')&#xA;&#xA;  const permissions = await get_permissions(role, type, controller)&#xA;&#xA;  for (let { _id } of permissions) {&#xA;    permission_orm.update({ _id }, { enabled: true })&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Finally, we run the program</p>&#xA;&#xA;<pre><code>module.exports = async next =&gt; {&#xA;&#xA;  await bootstrap_admin()&#xA;&#xA;  await bootstrap_resource( 'Clients', strapi.services.client )&#xA;  await bootstrap_resource( 'Menus',   strapi.services.menu   )&#xA;&#xA;  enable_permissions('Public', 'application', 'client'     )&#xA;  enable_permissions('Public', 'application', 'github'     )&#xA;  enable_permissions('Public', 'application', 'menu'       )&#xA;  enable_permissions('Public', 'application', 'confluence' )&#xA;&#xA;  next()&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Take out my comments and you have the entire bootstrap.js file. The images below show the 3 tabs of the demo.xlsx workbook that is used to populate everything.&#xA;<a href=""https://i.stack.imgur.com/uSq4j.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/uSq4j.png"" alt=""clients tab""></a>&#xA;<a href=""https://i.stack.imgur.com/TDAZB.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/TDAZB.png"" alt=""menus tab""></a>&#xA;<a href=""https://i.stack.imgur.com/QQE85.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/QQE85.png"" alt=""users tab""></a></p>&#xA;&#xA;<p>Finally, showing the results. Menus (content), permissions set and the public website using Nuxt.&#xA;<a href=""https://i.stack.imgur.com/txCNN.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/txCNN.png"" alt=""list of menus""></a>&#xA;<a href=""https://i.stack.imgur.com/2D1qu.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/2D1qu.png"" alt=""permissions for the public users""></a>&#xA;<a href=""https://i.stack.imgur.com/HSkjm.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/HSkjm.png"" alt=""Nuxt Generate Web Page leveraging strapi""></a></p>&#xA;",4122532,,6519913,2019-07-18 07:44:48,2019-07-18 07:44:48,"",,0,3,0,2019-07-10 22:36:05
56980661,2,,56952799,6,,"<p>i would recommend reading this article: <a href=""https://adrianhall.github.io/cloud/2018/10/26/backend-graphql-trigger-appsync/"" rel=""nofollow noreferrer"">Backend GraphQL: How to trigger an AWS AppSync mutation from AWS Lambda</a>,</p>&#xA;<p>quoting the author, <a href=""https://stackoverflow.com/users/1313441/adrian-hall"">https://stackoverflow.com/users/1313441/adrian-hall</a>, we've:</p>&#xA;<blockquote>&#xA;<p>GraphQL is routed over HTTPS. That means we can simulate the GraphQL client libraries with a simple HTTPS POST. Since we are using IAM, we need to sign the request before we deliver it. Here is my code for this:</p>&#xA;</blockquote>&#xA;<pre class=""lang-js prettyprint-override""><code>// ... more code here&#xA;    // POST the GraphQL mutation to AWS AppSync using a signed connection&#xA;    const uri = URL.parse(env.GRAPHQL_API);&#xA;    const httpRequest = new AWS.HttpRequest(uri.href, env.REGION);&#xA;    httpRequest.headers.host = uri.host;&#xA;    httpRequest.headers['Content-Type'] = 'application/json';&#xA;    httpRequest.method = 'POST';&#xA;    httpRequest.body = JSON.stringify(post_body);&#xA;&#xA;    AWS.config.credentials.get(err =&gt; {&#xA;        const signer = new AWS.Signers.V4(httpRequest, &quot;appsync&quot;, true);&#xA;        signer.addAuthorization(AWS.config.credentials, AWS.util.date.getDate());&#xA;&#xA;        const options = {&#xA;            method: httpRequest.method,&#xA;            body: httpRequest.body,&#xA;            headers: httpRequest.headers&#xA;        };&#xA;&#xA;        fetch(uri.href, options)&#xA;// ... more code here&#xA;</code></pre>&#xA;<p>I've been using it as a template for all my Lambda-&gt;AppSync communication!</p>&#xA;",2521009,,75033,2020-07-31 06:24:19,2020-07-31 06:24:19,"",,0,1,0,2019-07-11 01:53:43
56996450,1,,,1,522,"<p>I am having an issue getting results back from my AppSync API via AWSAppSyncClient. I can run the query in the AWS AppSync console and get the complete results, however when I run the query from my client the portion of the results I am looking for returns an empty array.</p>&#xA;&#xA;<p>I have tried slimming down the query to return less results, as I read at one point that dynamo will run a filter on the results being returned if you do not provide your own. I have also read this could have something to do with the partition keys used in the dynamoDB table, however AppSync provisioned that resource for me and handled the initial config. I am new to working with AppSync so I am sort of drawing a blank on where to even start looking for the issue because there is not even an error message. </p>&#xA;&#xA;<p>The Query I am running</p>&#xA;&#xA;<pre><code>export const getUserConversations = `query getUser($id: ID!) {&#xA;  getUser(id: $id) {&#xA;    id&#xA;    conversations {&#xA;      items {&#xA;        conversation{&#xA;          id&#xA;          associated{&#xA;            items{&#xA;              convoLinkUserId&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;`;&#xA;&#xA;</code></pre>&#xA;&#xA;<p>Call being made in a redux actions file</p>&#xA;&#xA;<pre><code>export const getUserConvos = (id) =&gt; async dispatch =&gt; {&#xA;&#xA;  AppSyncClient.query({&#xA;    query: gql(getUserConversations),&#xA;    variables: {&#xA;      id: id&#xA;    }&#xA;  }).then(res =&gt; {&#xA;    console.log(""RES FROM CONVO QUERY"", res)&#xA;  })&#xA;&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>This is the response I am getting in the browser&#xA;Notice conversations.items returns an empty array.</p>&#xA;&#xA;<pre><code>getUser:&#xA;conversations:&#xA;items: []&#xA;__typename: ""ModelConvoLinkConnection""&#xA;__proto__: Object&#xA;id: ""HIDDEN_ID""&#xA;__typename: ""User""&#xA;__proto__: Object&#xA;__proto__: Object&#xA;</code></pre>&#xA;&#xA;<p>However if i run the exact same query in the playground on the AppSync console I get this...</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getUser"": {&#xA;      ""id"": ""HIDDEN_ID"",&#xA;      ""conversations"": {&#xA;        ""items"": [&#xA;          {&#xA;            ""conversation"": {&#xA;              ""id"": ""HIDDEN_ID"",&#xA;              ""associated"": {&#xA;                ""items"": [&#xA;                  {&#xA;                    ""convoLinkUserId"": ""HIDDEN_ID""&#xA;                  },&#xA;                  {&#xA;                    ""convoLinkUserId"": ""HIDDEN_ID""&#xA;                  }&#xA;                ]&#xA;              }&#xA;            }&#xA;          },&#xA;          {&#xA;            ""conversation"": {&#xA;              ""id"": ""HIDDEN_ID"",&#xA;              ""associated"": {&#xA;                ""items"": [&#xA;                  {&#xA;                    ""convoLinkUserId"": ""HIDDEN_ID""&#xA;                  },&#xA;                  {&#xA;                    ""convoLinkUserId"": ""HIDDEN_ID""&#xA;                  }&#xA;                ]&#xA;              }&#xA;            }&#xA;          }&#xA;        ]&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>*HIDDEN_ID is a placeholder</p>&#xA;&#xA;<p>I know that the objects are in my DB, however if i run the query via my react application I get nothing, and if I run it in the console on AWS I get another. I need to be able to have access to these conversations via the client. What could be causing this?</p>&#xA;",10793042,,,,2019-07-11 19:56:31,AppSync client query not returning complete data response,<amazon-dynamodb><graphql><aws-amplify><aws-appsync><dynamodb-queries>,0,2,0,2019-07-11 19:56:31
57023910,1,,,2,4492,"<p>I'm trying to run GraphQL filter query on array field types, for example on a text ARRAY field type.</p>&#xA;&#xA;<p>In the following example scenario:</p>&#xA;&#xA;<blockquote>&#xA;  <p>CREATE TABLE</p>&#xA;</blockquote>&#xA;&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE TABLE Employee (&#xA;    firstName       text,&#xA;    lastName        text,    &#xA;    tags            text[]&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>And we can filter on text array field in one of the following ways:</p>&#xA;&#xA;<blockquote>&#xA;  <p>SELECT STATEMENT with CONDITION on an ARRAY type</p>&#xA;</blockquote>&#xA;&#xA;<pre class=""lang-sql prettyprint-override""><code>SELECT * FROM Employee WHERE tags @&gt; ARRAY['teamplayer']::varchar[]&#xA;</code></pre>&#xA;&#xA;<p>This works in PostGres and also in Postgraphile implicitly. </p>&#xA;&#xA;<p>On Postgraphile GraphQL, we can query the above table as follows:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Query</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>{&#xA;  allEmployees(filter: {tags: {contains: ""teamplayer""}}) {&#xA;    nodes {&#xA;      firstName&#xA;      lastName&#xA;      tags&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and the result will be:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Response</p>&#xA;</blockquote>&#xA;&#xA;<pre><code>  {&#xA;  ""data"": {&#xA;    ""allEmployees"": {&#xA;      ""nodes"": [&#xA;         {&#xA;             firstName: 'Russell'&#xA;             lastName: 'Dodds'&#xA;             tags: ['teamplayer', 'punctual']&#xA;         },&#xA;         {&#xA;             firstName: 'Emma'&#xA;             lastName: 'Samsin'&#xA;             tags: ['teamplayer']&#xA;         }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Can someone please give me some references or suggestions on how to achieve similar results on ARRAY field types in Hasura?</p>&#xA;",3798932,,3798932,2019-07-15 19:18:04,2019-07-21 15:07:28,How to run GraphQL filter query on an ARRAY field type in Hasura?,<graphql><hasura><postgraphile>,1,2,0,2019-07-14 01:18:30
57043793,1,,,1,1259,"<p>I got a graphql mutation that passes a parent object as well as a list of children like </p>&#xA;&#xA;<pre><code>input CreateQuestionWithManyAnswersInput {&#xA;    question: CreateQuestionInput!&#xA;    answers: [CreateAnswerInput!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The actual types are pretty boring, an ID, some strings, etc.</p>&#xA;&#xA;<p>I have attached a pipeline resolver to the mutation in appsync but I'm don't know how to write the individual request and response mapping templates.</p>&#xA;&#xA;<p>So far I got this for the createQuestion function:</p>&#xA;&#xA;<p><strong>Request mapping template:</strong></p>&#xA;&#xA;<pre><code>{&#xA;    ""operation"": ""PutItem"",&#xA;    ""key"": {&#xA;        ""id"": $util.dynamodb.toDynamoDBJson($ctx.args.input.question.id),&#xA;    },&#xA;    ""attributeValues"" : $util.dynamodb.toMapValuesJson($ctx.args.input.question)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Response mapping template:</strong></p>&#xA;&#xA;<pre><code>$util.qr($ctx.stash.put(""question"", $util.toJson($ctx.result)))&#xA;$util.toJson($ctx.result)&#xA;</code></pre>&#xA;&#xA;<p>For the create answersFunction I got:</p>&#xA;&#xA;<p><strong>Request mapping template:</strong></p>&#xA;&#xA;<pre><code>#set($answersdata = [])&#xA;#foreach($item in ${ctx.args.input.answers})&#xA;    $util.qr($answersdata.add($util.dynamodb.toMapValues($item)))&#xA;#end&#xA;&#xA;{&#xA;    ""operation"" : ""BatchPutItem"",&#xA;    ""tables"" : {&#xA;        ""Answer-ium2s7hanfgl3dwbamwgloetsi-dev"": $utils.toJson($answersdata)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Response mapping template:</strong></p>&#xA;&#xA;<pre><code>$util.qr($ctx.stash.put(""answers"", $util.toJson($ctx.result).items))&#xA;$util.toJson($ctx.result)&#xA;</code></pre>&#xA;&#xA;<p>And in the <strong>after mapping template</strong> of the pipeline I got:</p>&#xA;&#xA;<pre><code>$util.qr($ctx.result.put(""question"", $ctx.stash.question))&#xA;$util.qr($ctx.result.put(""answers"", $ctx.stash.question.answers))&#xA;$util.toJson($ctx.result)&#xA;</code></pre>&#xA;&#xA;<p>However, this fails with:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""createQuestionWithManyAnswers"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""createQuestionWithManyAnswers"",&#xA;        ""question"",&#xA;        ""id""&#xA;      ],&#xA;      ""locations"": null,&#xA;      ""message"": ""Cannot return null for non-nullable type: 'ID' within parent 'Question' (/createQuestionWithManyAnswers/question/id)""&#xA;    },&#xA;    {&#xA;      ""path"": [&#xA;        ""createQuestionWithManyAnswers"",&#xA;        ""question"",&#xA;        ""text""&#xA;      ],&#xA;      ""locations"": null,&#xA;      ""message"": ""Cannot return null for non-nullable type: 'String' within parent 'Question' (/createQuestionWithManyAnswers/question/text)""&#xA;    },&#xA;    {&#xA;      ""path"": [&#xA;        ""createQuestionWithManyAnswers"",&#xA;        ""answers""&#xA;      ],&#xA;      ""locations"": null,&#xA;      ""message"": ""Cannot return null for non-nullable type: 'null' within parent 'QuestionWithManyAnswers' (/createQuestionWithManyAnswers/answers)""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>mutation type</strong></p>&#xA;&#xA;<pre><code>type Mutation {&#xA;    createQuestionWithManyAnswers(input: CreateQuestionWithManyAnswersInput!): QuestionWithManyAnswers&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>update</strong>&#xA;With the help of Tinou I got a little further. Basically my question now boils down to how can I turn the stash into a valid response in the response mapping template?</p>&#xA;&#xA;<p>My log </p>&#xA;&#xA;<pre><code>""stash"": {&#xA;    ""answers"": [&#xA;        {&#xA;            ""correct"": true,&#xA;            ""id"": ""0cbc20a3-09dd-44d8-bc7c-e2ce50d8f9b1"",&#xA;            ""text"": ""a right answer""&#xA;        },&#xA;        {&#xA;            ""correct"": false,&#xA;            ""id"": ""b73b5696-e86b-4ad5-bce4-765234f566df"",&#xA;            ""text"": ""a wrong answer""&#xA;        }&#xA;    ],&#xA;    ""question"": {&#xA;        ""id"": ""b28b8c22-6cdb-41a1-8697-78a799deed6f"",&#xA;        ""text"": ""my new title"",&#xA;        ""explanation"": ""some explanation about this""&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and my response:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""createQuestionWithManyAnswers"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""createQuestionWithManyAnswers"",&#xA;        ""question""&#xA;      ],&#xA;      ""locations"": null,&#xA;      ""message"": ""Cannot return null for non-nullable type: 'Question' within parent 'QuestionWithManyAnswers' (/createQuestionWithManyAnswers/question)""&#xA;    },&#xA;    {&#xA;      ""path"": [&#xA;        ""createQuestionWithManyAnswers"",&#xA;        ""answers""&#xA;      ],&#xA;      ""locations"": null,&#xA;      ""message"": ""Cannot return null for non-nullable type: 'null' within parent 'QuestionWithManyAnswers' (/createQuestionWithManyAnswers/answers)""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Mutation type:</strong></p>&#xA;&#xA;<pre><code>type Mutation {&#xA;    createQuestionWithManyAnswers(input: CreateQuestionWithManyAnswersInput!): QuestionWithManyAnswers&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>QuestionWithManyAnswers type:</strong></p>&#xA;&#xA;<pre><code>type QuestionWithManyAnswers {&#xA;    question: Question!&#xA;    answers: [Answer]!&#xA;}&#xA;</code></pre>&#xA;",417656,,417656,2019-08-26 08:35:14,2019-08-26 08:35:14,Graphql mutation with parent object and array of children on aws-appsync,<graphql><aws-appsync>,1,0,0,2019-07-15 16:25:52
57044874,2,,57043793,0,,"<p>Would you be able to share your Mutation type along with the other type definitions you are using so we can help you reproduce? What is your pipeline resolver before template?</p>&#xA;&#xA;<p>That said, I see a couple of things that could be problematic, first, your <code>createQuestion</code> request mapping template, the util call is missing a <code>$</code>: </p>&#xA;&#xA;<blockquote>&#xA;  <p>""attributeValues"" :&#xA;  **$**util.dynamodb.toMapValuesJson($ctx.args.input.question)</p>&#xA;</blockquote>&#xA;&#xA;<p>Also, in your <code>createAnswersFunction</code>response mapping template, you are trying to access the <code>items</code> property on a json string. The following won't work</p>&#xA;&#xA;<blockquote>&#xA;  <p>$util.toJson($ctx.result).items</p>&#xA;</blockquote>&#xA;&#xA;<p>instead you probably meant</p>&#xA;&#xA;<pre><code>$util.toJson($ctx.result.items)&#xA;</code></pre>&#xA;&#xA;<p>But that will also not work because the result of the BatchPutItem operation is keyed by table so to get the data from your result, you should do</p>&#xA;&#xA;<pre><code>$ctx.result.data.get(""Answer-ium2s7hanfgl3dwbamwgloetsi-dev"")&#xA;</code></pre>&#xA;&#xA;<p>In general while you are in development, I would suggest you enable the CloudWatch Logs at least at <code>Error</code> level. That will give you <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/monitoring.html#field-level-logs"" rel=""nofollow noreferrer"">field level log information</a>, i.e you will have access to the invocation results, your evaluated mapping templates, the content of the stash and so on. This is helpful for debugging.</p>&#xA;",1060799,,,,2019-07-15 17:52:54,"",,0,3,0,2019-07-15 17:52:54
57084650,1,57088993,,4,4607,<p>I'd like to add a string word to the <code>listOfVideosRated[]</code> list in my Users table.</p>&#xA;,10749925,,10749925,2020-01-03 11:23:59,2020-01-03 11:23:59,How do i add items to a list?,<javascript><database><amazon-dynamodb><graphql><aws-appsync>,1,1,0,2019-07-17 22:13:45
57088993,2,,57084650,29,,"<p>If you can post your schema / resolver mapping template I can offer more specific advice, but I'll do my best to answer this with what you've posted so far.</p>&#xA;&#xA;<h2>Simple Way</h2>&#xA;&#xA;<p>If you have the existing item already, one way to do this would be to update the existing Pairs and pass that to your existing mutation.</p>&#xA;&#xA;<pre><code>const existingItem = {&#xA;  id: ""e5eb02ae-04d5-4331-91e6-11efaaf12ea5"",&#xA;  Pairs: [['a', 'b'],['c', 'd'],['e', 'f']]&#xA;}&#xA;&#xA;const newPairs = {&#xA;  number1: ""g"",&#xA;  number2: ""h""&#xA;}&#xA;&#xA;const updateinfo = {&#xA;  id: existingItem.id,&#xA;  // Note that if existingItem.Pairs is always defined this can be simplified to&#xA;  // Pairs: [...existingItem.Pairs, [newPairs.number1, newPairs.number2]]&#xA;  Pairs: existingItem.Pairs ?&#xA;      [...existingItem.Pairs, [newPairs.number1, newPairs.number2]] : &#xA;      [[newPairs.number1, newPairs.number2]]&#xA;}&#xA;&#xA;try {&#xA;  await API.graphql(graphqlOperation (UpdateInfo, { input: updateinfo }))  &#xA;  //mutation&#xA;  console.log('success')&#xA;} &#xA;catch (err) {&#xA;  console.log(err)&#xA;}&#xA;</code></pre>&#xA;&#xA;<h2>Using DynamoDB functions</h2>&#xA;&#xA;<p>If you do not have the existing item or if <code>Pairs</code> can be pretty big, AWS DynamoDB's <code>list_append</code> function can be used instead.</p>&#xA;&#xA;<blockquote>&#xA;  <p>list_append (operand, operand)</p>&#xA;  &#xA;  <p>This function evaluates to a list with a new element added to it. You can append the new element to the start or the end of the list by reversing the order of the operands.</p>&#xA;</blockquote>&#xA;&#xA;<p>Here is an example with a specific mutation that uses it.</p>&#xA;&#xA;<pre><code>### SDL&#xA;type Item {&#xA;    id: ID!&#xA;    Pairs: [[String]]&#xA;}&#xA;&#xA;input AddPairInput {&#xA;    id: ID!&#xA;    number1: String!&#xA;    number2: String!&#xA;}&#xA;&#xA;type Mutation {&#xA;    addPairToItem(input: AddPairInput!): Item!&#xA;}&#xA;&#xA;...rest of schema omitted for brevity &#xA;&#xA;### Resolver Request Mapping Template&#xA;{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""UpdateItem"",&#xA;    ""key"": {&#xA;        ""id"": { ""S"": ""$ctx.args.input.id""}&#xA;    },&#xA;    ""update"": {&#xA;        ### Note: we also use if_not_exists here so this works if Pairs is not yet defined on the item.&#xA;        ""expression"":""SET Pairs = list_append(if_not_exists(Pairs, :emptyList), :newPair)"",&#xA;        ""expressionValues"": &#xA;          { &#xA;            "":newPair"":{""L"": [{""L"":[{""S"":""$ctx.args.input.number1""},&#xA;                                    {""S"":""$ctx.args.input.number2""}]}]},&#xA;            "":emptyList"":{""L"": []}&#xA;          }&#xA;        }&#xA;}&#xA;&#xA;### Resolver Response Mapping Template&#xA;$util.toJson($ctx.result)&#xA;</code></pre>&#xA;&#xA;<p>This way is also nice because if someone else updates Pairs, you won't overwrite their update.  You can also add the new Pair to the beginning of the list by inverting the order of your arguments to the <code>list_append</code> function.</p>&#xA;&#xA;<h2>DynamoDB Functions with AWS Amplify</h2>&#xA;&#xA;<p>If your project was generated by AWS Amplify, you will need to add <a href=""https://aws-amplify.github.io/docs/cli-toolchain/graphql#custom-resolvers"" rel=""noreferrer"">a customer resolver</a>.</p>&#xA;&#xA;<h3>Step 1: Add a new mutation to your schema</h3>&#xA;&#xA;<pre><code>### ./amplify/backend/api/&lt;api_name&gt;/schema.graphql&#xA;type Item @model {&#xA;  id: ID!&#xA;  Pairs: [[String]]&#xA;}&#xA;&#xA;type Mutation {&#xA;  addPairToItem(input: AddPairToItemInput!): Item!&#xA;}&#xA;&#xA;input AddPairToItemInput {&#xA;  id: ID!&#xA;  number1: String!&#xA;  number2: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<h3>Step 2: Add a resolver request mapping template</h3>&#xA;&#xA;<pre><code>### ./amplify/backend/api/&lt;api_name&gt;/resolvers/Mutation.addPairToItem.req.vtl&#xA;{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""UpdateItem"",&#xA;    ""key"": {&#xA;        ""id"": { ""S"": ""$ctx.args.input.id""}&#xA;    },&#xA;    ""update"": {&#xA;        ""expression"":""SET Pairs = list_append(if_not_exists(Pairs, :emptyList), :newPair)"",&#xA;        ""expressionValues"":&#xA;          {&#xA;            "":newPair"":{""L"": [{""L"":[{""S"":""$ctx.args.input.number1""},{""S"":""$ctx.args.input.number2""}]}]},&#xA;            "":emptyList"":{""L"": []}&#xA;          }&#xA;        }&#xA;}&#xA;</code></pre>&#xA;&#xA;<h3>Step 3: Add a resolver response mapping template</h3>&#xA;&#xA;<pre><code>### ./amplify/backend/api/&lt;api_name&gt;/resolvers/Mutation.addPairToItem.res.vtl&#xA;$util.toJson($ctx.result)&#xA;</code></pre>&#xA;&#xA;<h3>Step 4: Add your custom resolver to your CustomResources stack</h3>&#xA;&#xA;<pre><code>### ./amplify/backend/api/&lt;api_name&gt;/stacks/CustomResources.json&#xA;    ""Resources"": {&#xA;        // ...other resources may exist here&#xA;        ""AddPairToItemResolver"": {&#xA;            ""Type"": ""AWS::AppSync::Resolver"",&#xA;            ""Properties"": {&#xA;                ""ApiId"": {&#xA;                    ""Ref"": ""AppSyncApiId""&#xA;                },&#xA;                ""DataSourceName"": ""ItemTable"",&#xA;                ""TypeName"": ""Mutation"",&#xA;                ""FieldName"": ""addPairToItem"",&#xA;                ""RequestMappingTemplateS3Location"": {&#xA;                    ""Fn::Sub"": [&#xA;                        ""s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/Mutation.addPairToItem.req.vtl"",&#xA;                        {&#xA;                            ""S3DeploymentBucket"": {&#xA;                                ""Ref"": ""S3DeploymentBucket""&#xA;                            },&#xA;                            ""S3DeploymentRootKey"": {&#xA;                                ""Ref"": ""S3DeploymentRootKey""&#xA;                            }&#xA;                        }&#xA;                    ]&#xA;                },&#xA;                ""ResponseMappingTemplateS3Location"": {&#xA;                    ""Fn::Sub"": [&#xA;                        ""s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/Mutation.addPairToItem.res.vtl"",&#xA;                        {&#xA;                            ""S3DeploymentBucket"": {&#xA;                                ""Ref"": ""S3DeploymentBucket""&#xA;                            },&#xA;                            ""S3DeploymentRootKey"": {&#xA;                                ""Ref"": ""S3DeploymentRootKey""&#xA;                            }&#xA;                        }&#xA;                    ]&#xA;                }&#xA;            }&#xA;        }&#xA;    },&#xA;</code></pre>&#xA;&#xA;<h3>Step 5: Build and Deploy your new changes</h3>&#xA;&#xA;<ul>&#xA;<li>Run <code>amplify api gql-compile</code> to see the new changes in your generated code (optional).</li>&#xA;<li>Run <code>amplify push</code> to deploy your changes.</li>&#xA;</ul>&#xA;&#xA;<p>Now you can either run <code>amplify api console</code> or use the new generated code to test the changes with your new mutation.</p>&#xA;&#xA;<p>To generate the new code you can run <code>amplify codegen</code>.  You should then be able to do something like this</p>&#xA;&#xA;<pre><code>import Amplify, { API, graphqlOperation } from ""aws-amplify"";&#xA;import * as mutations from './graphql/mutations';&#xA;&#xA;// Mutation&#xA;const addPairToItem = {&#xA;    id: '1',&#xA;    number1: 'a',&#xA;    number2: 'b'&#xA;};&#xA;&#xA;const newItem = await API.graphql(graphqlOperation(mutations.addPairToItem, {input: addPairToItem}));&#xA;</code></pre>&#xA;&#xA;<h2>Additional Examples</h2>&#xA;&#xA;<p>Remember to update your CustomResources.json file with any new resolvers you add.</p>&#xA;&#xA;<h3>Adding a single item to a list of scalar values</h3>&#xA;&#xA;<pre><code>### ./amplify/backend/api/&lt;api_name&gt;/schema.graphql&#xA;type Item @model {&#xA;    id: ID!&#xA;    words: [String]&#xA;}&#xA;&#xA;input AddWordInput {&#xA;    id: ID!&#xA;    word: String!&#xA;}&#xA;&#xA;type Mutation {&#xA;    addWordToItem(input: AddWordInput!): Item!&#xA;}&#xA;&#xA;### ./amplify/backend/api/&lt;api_name&gt;/resolvers/Mutation.addWordToItem.req.vtl&#xA;{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""UpdateItem"",&#xA;    ""key"": {&#xA;        ""id"": { ""S"": ""$ctx.args.input.id""}&#xA;    },&#xA;    ""update"": {&#xA;        ""expression"":""SET words = list_append(if_not_exists(words, :emptyList), :newWord)"",&#xA;        ""expressionValues"":&#xA;          {&#xA;            "":newWord"":{""L"": [{""S"":""$ctx.args.input.word""}]},&#xA;            "":emptyList"":{""L"": []}&#xA;          }&#xA;        }&#xA;}&#xA;&#xA;### ./amplify/backend/api/&lt;api_name&gt;/resolvers/Mutation.addWordToItem.res.vtl&#xA;$util.toJson($ctx.result)&#xA;&#xA;&#xA;### Usage&#xA;import Amplify, { API, graphqlOperation } from ""aws-amplify"";&#xA;import * as mutations from './graphql/mutations';&#xA;&#xA;// Mutation&#xA;const newWord = {&#xA;    id: '1',&#xA;    word: 'foo'&#xA;};&#xA;&#xA;const newItem = await API.graphql(graphqlOperation(mutations.addWordToItem, {input: newWord}));&#xA;</code></pre>&#xA;&#xA;<h3>Adding multiple items to a list of scalar values</h3>&#xA;&#xA;<p>Note: I am introducing <code>$util.dynamodb.toDynamoDBJson</code> here to make constructing our VTL easier.  I've been explicit thus far but this utility can simplify a lot of the work.  <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-util-reference.html#dynamodb-helpers-in-util-dynamodb"" rel=""noreferrer"">More here</a></p>&#xA;&#xA;<pre><code>### ./amplify/backend/api/&lt;api_name&gt;/schema.graphql&#xA;type Item @model {&#xA;    id: ID!&#xA;    words: [String]&#xA;}&#xA;&#xA;input AddWordsInput {&#xA;  id: ID!&#xA;  words: [String!]!&#xA;}&#xA;&#xA;type Mutation {&#xA;  addWordsToItem(input: AddWordsInput!): Item!&#xA;}&#xA;&#xA;### ./amplify/backend/api/&lt;api_name&gt;/resolvers/Mutation.addWordsToItem.req.vtl&#xA;{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""UpdateItem"",&#xA;    ""key"": {&#xA;        ""id"": { ""S"": ""$ctx.args.input.id""}&#xA;    },&#xA;    ""update"": {&#xA;        ""expression"":""SET words = list_append(if_not_exists(words, :emptyList), :newWords)"",&#xA;        ""expressionValues"":&#xA;          {&#xA;            "":newWords"": $util.dynamodb.toDynamoDBJson($ctx.args.input.words),&#xA;            "":emptyList"": $util.dynamodb.toDynamoDBJson([])&#xA;          }&#xA;        }&#xA;}&#xA;&#xA;### ./amplify/backend/api/&lt;api_name&gt;/resolvers/Mutation.addWordsToItem.res.vtl&#xA;$util.toJson($ctx.result)&#xA;&#xA;&#xA;### Usage&#xA;import Amplify, { API, graphqlOperation } from ""aws-amplify"";&#xA;import * as mutations from './graphql/mutations';&#xA;&#xA;// Mutation&#xA;const newWords = {&#xA;    id: '1',&#xA;    words: [""bar"",""xyz"",""bar""]&#xA;};&#xA;&#xA;const newItem = await API.graphql(graphqlOperation(mutations.addWordsToItem, {input: newWords}));&#xA;</code></pre>&#xA;&#xA;<h3>Remove an item from a list of scalar values</h3>&#xA;&#xA;<p>Removing elements from lists in DynamoDB is <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.UpdateExpressions.html#Expressions.UpdateExpressions.REMOVE.RemovingListElements"" rel=""noreferrer"">done using the REMOVE action</a>.  You must specify a non-negative index as part of the update expression.  If the index does not exist on the item, your request will not fail (e.g. no index out of bounds exceptions).</p>&#xA;&#xA;<pre><code>type Item @model {&#xA;    id: ID!&#xA;    words: [String]&#xA;}&#xA;&#xA;input RemoveWordInput {&#xA;  id: ID!&#xA;  wordIndex: Int!&#xA;}&#xA;&#xA;type Mutation {&#xA;    removeWordFromItem(input: RemoveWordInput!): Item!&#xA;}&#xA;&#xA;### ./amplify/backend/api/&lt;api_name&gt;/resolvers/Mutation.removeWordFromItem.req.vtl&#xA;{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""UpdateItem"",&#xA;    ""key"": {&#xA;        ""id"": { ""S"": ""$ctx.args.input.id""}&#xA;    },&#xA;    ""update"": {&#xA;        ""expression"":""REMOVE words[$ctx.args.input.wordIndex]""&#xA;    }&#xA;}&#xA;&#xA;### ./amplify/backend/api/&lt;api_name&gt;/resolvers/Mutation.removeWordFromItem.res.vtl&#xA;$util.toJson($ctx.result)&#xA;&#xA;&#xA;### Usage&#xA;import Amplify, { API, graphqlOperation } from ""aws-amplify"";&#xA;import * as mutations from './graphql/mutations';&#xA;&#xA;// Mutation&#xA;const removeWord = {&#xA;    id: '1',&#xA;    // The index is 0 based so wordIndex: 0&#xA;    // would delete the first item,&#xA;    // wordIndex: 1 deletes the second, etc.&#xA;    wordIndex: 1 &#xA;};&#xA;&#xA;const newItem = await API.graphql(graphqlOperation(mutations.removeWordFromItem, {input: removeWord}));&#xA;</code></pre>&#xA;",11681626,,11681626,2019-08-03 16:46:11,2019-08-03 16:46:11,"",,0,11,0,2019-07-18 07:14:29
57102825,2,,57102658,0,,"<p>I posted a response to a similar question in another question.  The answer to this is to use a DynamoDB function called <code>list_append</code>.</p>&#xA;&#xA;<blockquote>&#xA;  <p>list_append (operand, operand)</p>&#xA;  &#xA;  <p>This function evaluates to a list with a new element added to it. You can append the new element to the start or the end of the list by reversing the order of the operands.</p>&#xA;</blockquote>&#xA;&#xA;<p>You can look here for a detailed response on how to do it using AWS AppSync and AWS Amplify.</p>&#xA;&#xA;<p><a href=""https://stackoverflow.com/a/57088993/11681626"">https://stackoverflow.com/a/57088993/11681626</a></p>&#xA;",11681626,,11681626,2019-07-19 06:24:47,2019-07-19 06:24:47,"",,0,3,0,2019-07-18 21:25:42
57106760,1,57184017,,1,3690,"<p><em>The question is about role permissions in <a href=""https://strapi.io/"" rel=""nofollow noreferrer"">Strapi - Open source Node.js Headless CMS</a></em></p>&#xA;&#xA;<p>How to create new strapi role permissions relative to <code>Authenticated</code> or <code>Public</code> role? I want to create new role with these same all <code>permissions</code> in the bootstrap function.  I'm not sure how should look <code>payload</code> to create new <code>role</code>.</p>&#xA;&#xA;<pre><code>const payload = ?&#xA;strapi.plugins['users-permissions']&#xA;    .queries('role', 'users-permissions')&#xA;    .create(payload)&#xA;</code></pre>&#xA;&#xA;<p>I checked relative stackoverflow question but isn't about creating new strapi role permission&#xA;<a href=""https://stackoverflow.com/questions/56795531/bootstraping-strapi-role-permissions/56979483#56979483"">Bootstraping Strapi Role Permissions</a>!</p>&#xA;&#xA;<p><strong>main problem</strong></p>&#xA;&#xA;<ol>&#xA;<li>How look the best way to resolve above problem?</li>&#xA;</ol>&#xA;&#xA;<p><strong>side questions</strong></p>&#xA;&#xA;<ol>&#xA;<li>Is documented schema for <code>plugins</code> or <code>services</code> if yes where could find it?</li>&#xA;<li>Which api is better use <code>services</code> or <code>orm</code> from <code>queries</code> instance?</li>&#xA;</ol>&#xA;",6519913,,6519913,2019-07-19 07:45:54,2020-08-19 15:44:27,Bootstraping new Strapi Role Permissions,<javascript><node.js><graphql><strapi>,2,2,0,2019-07-19 06:30:53
57109572,1,57111319,,0,184,"<p>I can't find the problem in my code when trying to query with variables from react-native. A simple <code>Hello World!</code> is working. </p>&#xA;&#xA;<p>The render:</p>&#xA;&#xA;<pre><code>render() {&#xA;    return (&#xA;      &lt;AppContext.Consumer&gt;&#xA;        {context =&gt; {&#xA;        const{  userID,employeeID,salonID,currentDay,serviceTime}=context.state&#xA;          return (&#xA;            &lt;Query&#xA;              query={query}&#xA;              variables={{userID:userID,employeeID:employeeID,salonID:salonID,day:currentDay,serviceTime:serviceTime}}&#xA;            &gt;&#xA;              {(response, error) =&gt; {&#xA;                console.log(`response: ${response.data.listOfAppointments}`);&#xA;                console.log(`EMPL: ${response.data.employeeInfo}`);&#xA;                console.log(`\helo: ${response.data.hello}`);&#xA;                return (&#xA;                  &lt;Grid&gt;&#xA;                    &lt;Col&gt;&#xA;                      &lt;MyHeader&#xA;                        navigation={this.props.navigation}&#xA;                        title={context.state.currentDay&#xA;                          .format(""DD.MM.YYYY"")&#xA;                          .toString()}&#xA;                      /&gt;&#xA;                      {!response.data.listOfAppointments? (&#xA;                        &lt;CircularProgress /&gt;&#xA;                      ) : (&#xA;                        &lt;ScheduleList data={response.data.listOfAppointments} /&gt;&#xA;                      )}&#xA;                    &lt;/Col&gt;&#xA;                  &lt;/Grid&gt;&#xA;                );&#xA;              }}&#xA;            &lt;/Query&gt;&#xA;          );&#xA;        }}&#xA;      &lt;/AppContext.Consumer&gt;&#xA;    );&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>The Query:</p>&#xA;&#xA;<pre><code>const query =gql`&#xA;    query Query($userID:String!,$employeeID:String!,$salonID:String!,$day:Int!,$serviceTime:Int){&#xA;      hello&#xA;        listOfAppointments(&#xA;          userID: $userID&#xA;          employeeID: $employeeID&#xA;          salonID: $salonID&#xA;          day: $day&#xA;          serviceTime: $serviceTime&#xA;        ) {&#xA;          start&#xA;          end&#xA;          status&#xA;          disabled&#xA;        }&#xA;        employeeInfo(employeeID: $employeeID&#xA;          salonID: $salonID){&#xA;            token&#xA;            name&#xA;            ID&#xA;            notifyWhenCreated&#xA;            notifyWhenDeleted&#xA;            salonName&#xA;          }&#xA;      }&#xA;    `;&#xA;</code></pre>&#xA;&#xA;<p>The schemas and types:&#xA;<a href=""https://i.stack.imgur.com/7iBr7.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7iBr7.jpg"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>If I delete <code>listOfAppointments</code>,<code>employeeInfo</code> and the part where I declare the variables the <code>hello</code> is working.&#xA;Otherwise it's giving me status code: 400</p>&#xA;&#xA;<p><code>react-native log-android</code> is not throwing anything.&#xA;If I try to <code>console.log()</code> the result it's <code>undefined</code>.</p>&#xA;&#xA;<p>Thanks!</p>&#xA;",10876422,,,,2019-07-19 11:14:24,How to query graphQL with variables from React-Native?,<react-native><graphql>,1,0,0,2019-07-19 09:31:51
57128208,1,57136169,,1,1338,"<p>I am creating a simple AWS Cloudformation template file for an AppSync API. I would like to create the GraphQL schema in a separate file and reference it from the stack template but have been unable to do so.</p>&#xA;&#xA;<p>The stack template is in a file <code>template.yaml</code>. The following snippet defines the GraphQL schema:</p>&#xA;&#xA;<pre><code>  GraphQLSchema:&#xA;    Type: AWS::AppSync::GraphQLSchema&#xA;    Properties: &#xA;      ApiId: !GetAtt AppSyncAPI.ApiId&#xA;      DefinitionS3Location: schema.graphql&#xA;</code></pre>&#xA;&#xA;<p>The GraphQL schema is in the same directory called in a separate file called <code>schema.graphql</code>. </p>&#xA;&#xA;<pre><code>schema {}&#xA;</code></pre>&#xA;&#xA;<p>When in use the aws-cli to create the stack, the following error message appears in the Cloudformation events log when creating the GraphQLSchema:</p>&#xA;&#xA;<p>""S3 location not valid for DefinitionS3Location""</p>&#xA;&#xA;<p>How do I reference a local file for the schema and have the aws-cli automatically bundle it together?</p>&#xA;",6451746,,,,2019-07-21 19:03:50,How to include a graphql schema file into an AWS Cloudformation template?,<amazon-web-services><graphql><amazon-cloudformation><aws-appsync>,2,0,0,2019-07-20 20:10:54
57128406,2,,57128208,1,,<p>It's not possible. There are only two options:</p>&#xA;&#xA;<ol>&#xA;<li><p>Create a script to upload your GraphQL schema to S3 automatically and reference at <code>DefinitionS3Location</code> or</p></li>&#xA;<li><p>create your GraphQL schema directly in your CloudFormation template:</p></li>&#xA;</ol>&#xA;&#xA;<pre><code>AppSyncGraphQLSchema:&#xA;    Type: AWS::AppSync::GraphQLSchema&#xA;    DependsOn: AppSyncGraphQLApi&#xA;    Properties:&#xA;      ApiId: !GetAtt AppSyncGraphQLApi.ApiId&#xA;      Definition: |&#xA;        ...&#xA;        schema {&#xA;          query: Query&#xA;          mutation: Mutation&#xA;        }&#xA;        ...&#xA;</code></pre>&#xA;,8786986,,,,2019-07-20 20:38:00,"",,0,0,0,2019-07-20 20:38:00
57136169,2,,57128208,3,,"<p><a href=""https://docs.aws.amazon.com/cli/latest/reference/cloudformation/create-stack.html"" rel=""nofollow noreferrer""><code>aws cloudformation create-stack</code></a> will not work with a locally referenced schema. </p>&#xA;&#xA;<p>First, package the files with <a href=""https://docs.aws.amazon.com/cli/latest/reference/cloudformation/package.html"" rel=""nofollow noreferrer""><code>aws cloudformation package</code></a> which uploads the schema to the designated S3 bucket and replaces the local reference with the S3 bucket reference in the generated package. Then that package can be deployed using <a href=""https://docs.aws.amazon.com/cli/latest/reference/cloudformation/deploy/index.html"" rel=""nofollow noreferrer""><code>aws cloudformation deploy</code></a>.</p>&#xA;",6451746,,,,2019-07-21 19:03:50,"",,0,0,0,2019-07-21 19:03:50
57139613,1,,,0,106,"<p>I am new to GraphQL.&#xA;I have a graphQL service written in NodeJS. I have to use the service in building a data pipeline in python.</p>&#xA;&#xA;<p>The query look like this</p>&#xA;&#xA;<pre><code>query = getStatement($Statement: {StatementInput}, $paginateBy: PaginateBy) {&#xA;  getStatement(StatementInput: {Statement}, paginateby: {paginateBy}) {&#xA;    status&#xA;    message&#xA;    statusCode&#xA;    metadata {&#xA;      page {&#xA;        number&#xA;        size&#xA;        totalPages&#xA;        totalElements&#xA;      }}}}&#xA;&#xA;variables = {&#xA;       ""StatementsInput"": {&#xA;               ""id"": ""XTYADC""&#xA;          },&#xA;          ""Statement"": {&#xA;""statementDate"": ""12-2018""&#xA;             },&#xA;           ""paginateBy"": {&#xA; ""size"": 20,&#xA;   ""pageNumber"": 1&#xA;           }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have the end point and using requests library.</p>&#xA;",5891408,,1817416,2019-07-22 05:43:15,2019-07-22 05:43:15,How to access NodeJS GraphQL service in Python,<python><node.js><graphql>,1,0,0,2019-07-22 05:24:27
57175079,2,,57170978,0,,"<p>You can us <code>npm qs</code> node module to stringify your where clause object. Beacuse Loopback is using <code>qs</code> under the hood to parse query string. </p>&#xA;&#xA;<pre><code>import * as qs from 'qs';&#xA;&#xA;let query = {&#xA;  // where condition&#xA;}&#xA;&#xA;qs.stringify(query, { addQueryPrefix: true });&#xA;</code></pre>&#xA;&#xA;<p>You can find more info about <code>qs</code> <a href=""https://www.npmjs.com/package/qs"" rel=""nofollow noreferrer"">here</a></p>&#xA;&#xA;<p>Loopback4 query string issue discussion:- <a href=""https://github.com/strongloop/loopback-next/issues/2468"" rel=""nofollow noreferrer"">https://github.com/strongloop/loopback-next/issues/2468</a></p>&#xA;",4575211,,,,2019-07-24 04:04:39,"",,0,1,0,2019-07-24 04:04:39
57179733,1,,,0,53,"<p>I want to get data about user addinfo(bool value).</p>&#xA;&#xA;<p>when i do console.log(data.user), i can get data.user referred to below picture.&#xA;<a href=""https://i.stack.imgur.com/emLlx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/emLlx.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>if when i do console.log(data.user.user), it shows that user is undefined referred to below picture.&#xA;<a href=""https://i.stack.imgur.com/AJQrf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AJQrf.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<pre><code>{&#xA;  user(token: ""eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImI3ZTA5YmVhOTAzNzQ3ODQiLCJleHAiOjE1NjM4OTcxNzksIm9yaWdJYXQiOjE1NjM4OTY4Nzl9.QFB58dAvqIC9RBBohN1b3TdR542dBZEcXOG1MSTqAQQ"") {&#xA;    user {&#xA;      id&#xA;      addinfo&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>this code show that</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""user"": {&#xA;      ""user"": {&#xA;        ""id"": ""4"",&#xA;        ""addinfo"": false&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",7405391,,,,2019-07-24 10:02:01,how to get data from {} in graphql,<django><reactjs><graphql>,2,1,0,2019-07-24 09:34:44
57184017,2,,57106760,9,,"<p>OKay so since the data structure can change I will give you the way to access to useful data that will help you to deal with what you want.</p>&#xA;&#xA;<p>In this <a href=""https://github.com/strapi/strapi/blob/master/packages/strapi-plugin-users-permissions/services/UsersPermissions.js"" rel=""noreferrer"">this file</a> you will find service function that create roles and the function that inits permissions.</p>&#xA;&#xA;<p>You can write your code in your <code>bootstrap.js</code> file.</p>&#xA;&#xA;<ol>&#xA;<li>You will have to call the functions that let you generate permission object</li>&#xA;</ol>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const lang = 'en';&#xA;const plugins = await strapi.plugins[&#xA;  'users-permissions'&#xA;].services.userspermissions.getPlugins(lang);&#xA;&#xA;const permissions = await strapi.plugins[&#xA;  'users-permissions'&#xA;].services.userspermissions.getActions(plugins);&#xA;</code></pre>&#xA;&#xA;<ol start=""2"">&#xA;<li><p>Customize this object (the <code>permissions</code> object) to allow controller functions you want.</p></li>&#xA;<li><p>And finaly create your role</p></li>&#xA;</ol>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const role = {&#xA;  name: 'NewRole',&#xA;  description: 'can be an empty string',&#xA;  permissions, // That is the step 1/2 object&#xA;  users: []&#xA;};&#xA;&#xA;await strapi.plugins[&#xA;  'users-permissions'&#xA;].services.userspermissions.createRole(role);&#xA;</code></pre>&#xA;",9208166,,,,2019-07-24 13:23:28,"",,0,4,0,2019-07-24 13:23:28
57188181,1,,,1,1428,"<p>Setup:</p>&#xA;&#xA;<ul>&#xA;<li>AWS Amplify API w/ GraphQL</li>&#xA;<li>AWS Amplify Auth w/ Cognito User Pools</li>&#xA;</ul>&#xA;&#xA;<p>Say the majority of the platform should be accessible by a logged out user. E.g. they should be able to read forum <code>Topics</code>, but if they want to post, they need to sign in. </p>&#xA;&#xA;<p>I see an @auth resolver that I can use, but whenever I try to make a graphQL call to <code>my.url.amazonawscom/graphql</code> to fetch <code>Topics</code>, it says <code>""errorType"": ""UnauthorizedException""</code>. I'm having trouble figuring out how a logged out user can have authorization to publicly accessible data.</p>&#xA;",6443744,,,,2019-08-01 23:25:00,"With AWS Amplify Auth and GraphQL API, how would you have some public, and some private query/mutation calls?",<amazon-web-services><graphql><aws-amplify><aws-appsync><amplifyjs>,2,0,0,2019-07-24 17:17:38
57188660,2,,57188181,0,,<p>In Cognito identity pool you need to set the policy for unauthorized users. Go to Edit Identity Pool and you can see an option where role can be set for unauthorized</p>&#xA;,5404024,,,,2019-07-24 17:51:53,"",,0,5,0,2019-07-24 17:51:53
57190438,2,,56693422,2,,"<p>For your scenario, it might be better to use only the <code>createAuthLink</code> from <code>aws-appsync</code>, because <code>createAppSyncLink</code> introduces a lot of stuff for offline scenarios that you don't seem to need (also, the full link for appsync depends on apollo's query manager inserting the cache in the operation context).</p>&#xA;&#xA;<p>Something like this might work for you:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const { ApolloLink } = require(`apollo-link`)&#xA;const { createAuthLink } = require(""aws-appsync"");&#xA;&#xA;const link = ApolloLink.from([&#xA;    createAuthLink({&#xA;        url: url,&#xA;        region: REGION,&#xA;        auth: { type, credentials },&#xA;    }),&#xA;    fetcherLink&#xA;]);&#xA;</code></pre>&#xA;",194974,,,,2019-07-24 20:00:53,"",,0,0,0,2019-07-24 20:00:53
57195116,1,,,0,26,"<p>I have a RESTful service that accepts a custom query, like this:</p>&#xA;&#xA;<pre><code>/entities/User?actions=&#xA;&#xA;{&#xA;  ""$link"": {&#xA;    ""entityType"": ""Manager"",&#xA;    ""entity"": {&#xA;      ""name"": ""John Smith""&#xA;    },&#xA;    ""linkName"": ""managers"",&#xA;    ""backLinkName"": ""account"",&#xA;    ""$set"": {&#xA;      ""propertyName"": ""aclWrite"",&#xA;      ""propertyValue"": {&#xA;        ""$ref"": {&#xA;          ""propertyName"": ""entityId""&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Which simply means:</p>&#xA;&#xA;<ul>&#xA;<li>Create a new Entity of type User </li>&#xA;<li>Create a new Entity of type Manager with the field name, linking the User to be created to this Manager through link name ""managers""</li>&#xA;<li>Then back-linking the Manager entity to be created to the User with a link name ""account"" and setting the Manager entity write ACL (Access Control List) to the ID of the User to be created. </li>&#xA;</ul>&#xA;&#xA;<p>I created this query structure because I can't find any suitable Query language that can seem to support such action/procedure. </p>&#xA;&#xA;<p><strong>The question here is are there any Query language that can support such compound action/procedure or can GraphQL handle such?</strong> </p>&#xA;",785349,,,,2019-07-25 11:49:13,Compound queries,<rest><graphql>,1,0,0,2019-07-25 05:48:58
57201802,1,57333289,,0,406,"<p>I have deployed the graphql API on aws using the appsync service. I am able to run queries, mutation, and subscription on amazon console but when I am trying to test subscription on any graphql playground, its shows error.</p>&#xA;&#xA;<p>I have used <strong>serverless graphql-playground</strong> command to run playground for AppSync.</p>&#xA;&#xA;<p>How can I run appsync subscriptions on graphql playground? </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/lk27N.png"" rel=""nofollow noreferrer"">Error Screenshot</a></p>&#xA;",8519881,,8519881,2019-07-25 12:25:50,2019-08-02 20:51:19,How to run Appsync Subscriptions on graphql playground,<graphql><aws-appsync><graphql-subscriptions>,1,0,0,2019-07-25 12:18:04
57207939,2,,57164870,0,,"<p>Great question. With GraphQL, you have the power to expand any field and select the exact subfields you want from it, so if you were using GraphQL on your backend as well this would be a non-issue. There are some workarounds you can do here:</p>&#xA;&#xA;<p>If all of the Author objects are in your Apollo cache and you have access to each Author's id, you could use <a href=""https://www.apollographql.com/docs/react/advanced/caching/#readfragment"" rel=""nofollow noreferrer"">ApolloClient.readFragment</a> to access other properties, like this:</p>&#xA;&#xA;<pre><code>const authorId = ...; // the id of the author&#xA;&#xA;const authorInfo = client.readFragment({&#xA;  id: authorId,&#xA;  fragment: gql`&#xA;    fragment AuthorInfo on Author {&#xA;      id&#xA;      name&#xA;      # anything else you want here&#xA;    }&#xA;  `,&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Although it's worth noting that with your original query in the question, if you have all of the Author objects as a property of the query, you could just use Javascript operations to go from Author id to object.</p>&#xA;&#xA;<pre><code>const authorId = ...; // the id of the author&#xA;data.page.authors.find(author =&gt; author.id === authorId);&#xA;</code></pre>&#xA;",11804768,,,,2019-07-25 18:10:42,"",,0,4,0,2019-07-25 18:10:42
57208387,2,,56845615,1,,"<p>Going to need more information here before answering, but I'm working on the same sample project and was able to get it working so I might be of some help.</p>&#xA;&#xA;<p>Is your project syncing and building? That's a good first step.&#xA;It looks like your .graphql files are being autogenerated in your app-> source -> appsync -> com file, but the classes are not being generated in the app -> <em>build</em> -> source -> appsync -> com folder.</p>&#xA;&#xA;<p>Something I learned in the process of working on this project was that it's important to have all your resolvers and the backend set up fairly completely in the AWS console before calling the <code>amplify add api</code> command. Have you setup the back end with resolvers? </p>&#xA;&#xA;<p>If you have and it's still not working, try running in the app terminal <code>amplify gql-compile</code> then running <code>amplify push</code>to pull the data back into your app from the console, then resync and rebuild as necessary. This should build your Query/Mutation/Subscription classes for you, as well as the Fragment.class, which are the resolvers in your program for the .graphql queries/etc that you want to run in your application. </p>&#xA;&#xA;<p>If that doesn't work, make sure you've completed all the necessary steps in the amplify API like <code>amplify add api</code>, <code>amplify update api</code>. It appears that you've already done that since you have generated .graphql files in the app-> source directory, but in case you haven't, those are first steps. You can also check to make sure that you're actually connected to the DB (and correct api in the console) by running <code>amplify status</code>. Are you connected to the console API that you need to be connected to?</p>&#xA;&#xA;<p>As a last resort, you can copy the Event.class file from github and paste it into the appropriate file/subdirectory, along with the rest of the Query/Mutation/etc .class files that should have been generated by the ApolloGraphql plugin.</p>&#xA;",7243215,,,,2019-07-25 18:44:10,"",,0,0,0,2019-07-25 18:44:10
57215436,2,,57186767,2,,"<p>You simply wrap the type in <code>[]</code>, in your schema.</p>&#xA;&#xA;<p>Example:</p>&#xA;&#xA;<pre><code>extend type Mutation {&#xA;    syncPermissions(roleId: Int!, permissions: [Int!])&#xA;    @field(resolver: ""MyResolver@update"")&#xA;}&#xA;</code></pre>&#xA;",5837633,,,,2019-07-26 07:47:23,"",,0,0,0,2019-07-26 07:47:23
57225861,1,,,1,2928,"<p>I have a requirement to access some information through an API. I need to do this on R. I tried doing on Python and it worked just fine but facing 401 error while doing the same operation on R. </p>&#xA;&#xA;<p>I have the API key and also know the query to be performed. I have attached both Python and R code below. </p>&#xA;&#xA;<p>Python:</p>&#xA;&#xA;<pre><code>import requests&#xA;&#xA;headers = {&#xA;    'Content-Type': 'application/json',&#xA;    'Authorization': 'XXXXXXXXXXXXXXXXXXXXXXXXXXXX',&#xA;}&#xA;&#xA;query = """"""&#xA;{&#xA;    boards (ids: 157244624) {&#xA;        permissions&#xA;    }&#xA;}&#xA;""""""&#xA;&#xA;response = requests.get('https://XYZwebsite.com/', headers=headers, json={'query': query})&#xA;</code></pre>&#xA;&#xA;<p>R:</p>&#xA;&#xA;<pre><code>require(httr)&#xA;&#xA;headers = c(&#xA;  `Content-Type` = 'application/json',&#xA;  `Authorization` = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXX'&#xA;)&#xA;&#xA;data = '{&#xA;    boards (ids: 157244624) {&#xA;        permissions&#xA;    }&#xA;}'&#xA;&#xA;res &lt;- GET(url = 'https://XYZwebsite.com/', add_headers(.headers=headers), body = data)&#xA;</code></pre>&#xA;&#xA;<p>Am i missing out something in the R code? It looks pretty much the same but i am getting a 401 error on R for some weird reason.</p>&#xA;",4257964,,,,2021-10-11 21:50:50,Consuming API with graphql queries throwing 401 error on R but working fine on Python,<python><r><rest><graphql><http-status-code-401>,2,0,0,2019-07-26 19:14:02
57251169,2,,57250581,0,,"<p>What you want to do can be achieved with both <a href=""https://graphql.org/graphql-js/type/#graphqlscalartype"" rel=""nofollow noreferrer"">Scalar Types</a> and <a href=""https://graphql.org/graphql-js/type/#graphqlenumtype"" rel=""nofollow noreferrer"">Enum Types</a>. In your case you probably want to go with an enum because you have a small finite list of allowed values. Using the Enum Type will show the allowed values in the documentation in GraphiQL. In most GraphQL APIs Enum values use all capital values but you could use the <code>value</code> property to transparently map the <code>female</code> value to <code>FEMALE</code>. This would for example allow you to treat the values as lower case on the server side (we do this a lot because the values come in lower case from our postgres). Here some code for inspiration:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const GenderType = new GraphQLEnumType({&#xA;  name: 'Gender',&#xA;  values: {&#xA;    FEMALE: {&#xA;      value: 'female'&#xA;    },&#xA;    MALE: {&#xA;      value: 'male'&#xA;    }&#xA;  }&#xA;});&#xA;</code></pre>&#xA;",3849167,,,,2019-07-29 09:45:32,"",,0,0,0,2019-07-29 09:45:32
57287790,2,,55075434,1,,"<p>I used gem <a href=""https://github.com/exAspArk/graphql-guard#inline-policies"" rel=""nofollow noreferrer"">graphql-guard</a>. </p>&#xA;&#xA;<pre><code>GUARD = lambda do |obj, args, ctx|&#xA;  ...some logics...&#xA;end&#xA;&#xA;field :some_field, String, null: false, guard: GUARD&#xA;</code></pre>&#xA;&#xA;<p>And when I wanted to use only some of the arguments like <code>lambda do |_, args, _|</code></p>&#xA;",3999144,,,,2019-07-31 09:42:22,"",,0,0,0,2019-07-31 09:42:22
57294281,1,,,1,226,"<p>I believe I understand how to extend types with the @key when I need to use different services between each other. Going to give an example in case I, a newbie to this, am incorrect in my understanding. For instance if I have a service for <code>Accounts</code> and one for <code>Users</code> and in the latter I have something like, </p>&#xA;&#xA;<pre><code>type Users @key(fields: ""accountIds"") {&#xA;  id: ID!&#xA;  accountIds: [ID]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I would extend this by adding a file in my <code>Accounts</code> service to extend <code>Users</code> like:</p>&#xA;&#xA;<pre><code>extend type Users @key(fields: ""accountIds"") {&#xA;    accountIds: [ID] @external&#xA;    accounts: [Accounts!]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I would also need to add a resolver to set what <code>accounts</code> should be. First thing, is the above correct? Do I understand what I am doing or did I miss something?</p>&#xA;&#xA;<p>Next. How would I handle a type that, in an existing codebase that was NOT federated, looks like:&#xA;<code>union AccountResult = Accounts | SelectedAccounts</code></p>&#xA;&#xA;<p>If I need to use that <code>AccountResult</code> as a type in some other services how would I make it available? I don't see how I could do that given what I have above. Again, I'm new to this so I appreciate your patience.</p>&#xA;",11252,,,,2021-11-06 09:35:32,Graphql Apollo Federation,<javascript><graphql><apollo><federation>,1,1,0,2019-07-31 15:29:21
57302055,1,,,0,248,"<p>I've a query which I want to run over a list of different input. How can I do this in a single query request ?</p>&#xA;&#xA;<p>My query looks like : </p>&#xA;&#xA;<p><strong>QuerySingle</strong></p>&#xA;&#xA;<pre><code>query($personId:ID!, $vehicleId: ID!) {&#xA;  person(personID: $personId) {&#xA;    name,&#xA;    gender,&#xA;    hairColor&#xA;  },&#xA;  vehicle(id: $vehicleId) {&#xA;      name,&#xA;      model,&#xA;      vehicleClass,&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and arguments are like </p>&#xA;&#xA;<pre><code>  { ""personId"": 1, ""vehicleId"": ""dmVoaWNsZXM6NA=="" }&#xA;</code></pre>&#xA;&#xA;<p>This runs well for a single input. <a href=""https://graphql.org/swapi-graphql?query=query(%24personId%3AID!%2C%20%24vehicleId%3A%20ID!)%20%7B%0A%20%20person(personID%3A%20%24personId)%20%7B%0A%20%20%20%20name%2C%0A%20%20%20%20gender%2C%0A%20%20%20%20hairColor%0A%20%20%7D%2C%0A%20%20vehicle(id%3A%20%24vehicleId)%20%7B%0A%20%20%20%20%20%20name%2C%0A%20%20%20%20%20%20model%2C%0A%20%20%20%20%20%20vehicleClass%2C%0A%20%20%7D%0A%7D&amp;variables=%7B%0A%20%20%22personId%22%3A%201%2C%0A%20%20%22vehicleId%22%3A%20%22dmVoaWNsZXM6NA%3D%3D%22%0A%7D"" rel=""nofollow noreferrer"">Single Input Example</a></p>&#xA;&#xA;<p>But I want to run it over a list of inputs I've like following : </p>&#xA;&#xA;<pre><code>[&#xA;  { ""personId"": 1, ""vehicleId"": ""dmVoaWNsZXM6NA=="" },&#xA;  { ""personId"": 2, ""vehicleId"": ""dmVoaWNsZXM6Ng=="" },&#xA;  { ""personId"": 3, ""vehicleId"": ""dmVoaWNsZXM6Nw=="" },&#xA;  { ""personId"": 4, ""vehicleId"": ""dmVoaWNsZXM6OA=="" },&#xA;  { ""personId"": 5, ""vehicleId"": ""dmVoaWNsZXM6MTQ="" },&#xA;  { ""personId"": 6, ""vehicleId"": ""dmVoaWNsZXM6MTY="" },&#xA;  { ""personId"": 7, ""vehicleId"": ""dmVoaWNsZXM6MTg="" },&#xA;  { ""personId"": 8, ""vehicleId"": ""dmVoaWNsZXM6MTk="" },&#xA;  { ""personId"": 9, ""vehicleId"": ""dmVoaWNsZXM6MjA="" },&#xA;  { ""personId"": 10, ""vehicleId"": ""dmVoaWNsZXM6MjQ="" }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>How can I do this ? </p>&#xA;&#xA;<p>One way which could be use aliases on person and vehicle and provide different input as different variable names. <a href=""https://graphql.org/swapi-graphql?query=query(%24personId_1%3AID!%2C%20%24vehicleId_1%3A%20ID!%2C%24personId_2%3AID!%2C%20%24vehicleId_2%3A%20ID!)%20%7B%0A%20%20person1%3A%20person(personID%3A%20%24personId_1)%20%7B%0A%20%20%20%20...personData%0A%20%20%7D%2C%0A%20%20vehicle1%3A%20vehicle(id%3A%20%24vehicleId_1)%20%7B%0A%20%20%20%20%20...vehicleData%0A%20%20%7D%0A%20%20person2%3A%20person(personID%3A%20%24personId_2)%20%7B%0A%20%20%20%20...personData%0A%20%20%7D%2C%0A%20%20vehicle2%3A%20vehicle(id%3A%20%24vehicleId_2)%20%7B%0A%20%20%20%20%20...vehicleData%0A%20%20%7D%0A%7D%0A%0Afragment%20vehicleData%20on%20Vehicle%20%7B%0A%20%09name%2C%0A%20%20model%2C%0A%20%20vehicleClass%0A%7D%0A%0A%0Afragment%20personData%20on%20Person%20%7B%0A%20%20name%2C%0A%20%20gender%2C%0A%20%20hairColor%0A%7D&amp;variables=%7B%0A%20%20%22personId_1%22%3A%201%2C%0A%20%20%22vehicleId_1%22%3A%20%22dmVoaWNsZXM6NA%3D%3D%22%2C%0A%20%20%22personId_2%22%3A%202%2C%0A%20%20%22vehicleId_2%22%3A%20%22dmVoaWNsZXM6Ng%3D%3D%22%0A%7D"" rel=""nofollow noreferrer"">Example Query with different var aliases</a></p>&#xA;&#xA;<p><strong>QueryMultiUsingAlias</strong></p>&#xA;&#xA;<pre><code>query($personId_1:ID!, $vehicleId_1: ID!,$personId_2:ID!, $vehicleId_2: ID!) {&#xA;  person1: person(personID: $personId_1) {&#xA;    ...personData&#xA;  },&#xA;  vehicle1: vehicle(id: $vehicleId_1) {&#xA;     ...vehicleData&#xA;  }&#xA;  person2: person(personID: $personId_2) {&#xA;    ...personData&#xA;  },&#xA;  vehicle2: vehicle(id: $vehicleId_2) {&#xA;     ...vehicleData&#xA;  }&#xA;}&#xA;&#xA;fragment vehicleData on Vehicle {&#xA;    name,&#xA;  model,&#xA;  vehicleClass&#xA;}&#xA;&#xA;&#xA;fragment personData on Person {&#xA;  name,&#xA;  gender,&#xA;  hairColor&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Parameters: </p>&#xA;&#xA;<pre><code>{&#xA;  ""personId_1"": 1,&#xA;  ""vehicleId_1"": ""dmVoaWNsZXM6NA=="",&#xA;  ""personId_2"": 2,&#xA;  ""vehicleId_2"": ""dmVoaWNsZXM6Ng==""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Question I've are : </p>&#xA;&#xA;<ol>&#xA;<li><p>This query becomes too gross and hard to extend as more different type of data is added per input. or as more number of input parameters are added. Is there a cleaner way to represent this query ?</p></li>&#xA;<li><p>If there's no other way, Is there a functionality available in <code>graphql-java</code> to generate <strong>QueryMultiUsingAlias</strong> from <strong>QuerySingle</strong> based on input length ?</p></li>&#xA;</ol>&#xA;",661195,,,,2019-08-01 08:28:49,Creating GraphQl Request for a list of inputs,<graphql><graphql-java>,1,0,0,2019-08-01 04:59:00
57318157,1,57438060,,0,1036,"<p>First, when the docs at <a href=""https://aws-amplify.github.io/docs/js/api#complex-objects"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/js/api#complex-objects</a> say:</p>&#xA;&#xA;<pre><code>input CreateTodoInput {&#xA;  id: ID&#xA;  name: String!&#xA;  description: String&#xA;  file: S3ObjectInput # This input type will be generated for you&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get an error <code>Type ""S3ObjectInput"" not found in document.</code> and I have to add <code>S3ObjectInput</code> manually.</p>&#xA;&#xA;<p>This is my schema (the docs are not very clear on it so I put it together from similar questions)</p>&#xA;&#xA;<pre><code>type Picture @model {&#xA;  id: ID!&#xA;  file: S3Object!&#xA;  url: String!&#xA;  rating: Int&#xA;  appearedForRanking: Int&#xA;}&#xA;&#xA;type S3Object {&#xA;  bucket: String!&#xA;  key: String!&#xA;  region: String!&#xA;}&#xA;&#xA;input CreatePictureInput {&#xA;  id: ID&#xA;  file: S3ObjectInput!&#xA;  url: String!&#xA;  rating: Int&#xA;  appearedForRanking: Int&#xA;}&#xA;&#xA;input S3ObjectInput {&#xA;  bucket: String!&#xA;  region: String!&#xA;  localUri: String&#xA;  visibility: Visibility&#xA;  key: String&#xA;  mimeType: String&#xA;}&#xA;&#xA;enum Visibility {&#xA;  public&#xA;  protected&#xA;  private&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And this is the client code (with React)</p>&#xA;&#xA;<pre><code>class PictureUpload extends Component {&#xA;&#xA;  state = { fileUrl: '', file: '', filename: '' }&#xA;&#xA;  handleChange = e =&gt; {&#xA;    let file = e.target.files[0]&#xA;    let filext = file.name.split('.').pop()&#xA;    let filename = uuid() + '.' + filext&#xA;&#xA;    this.setState({&#xA;      fileUrl: URL.createObjectURL(file),&#xA;      filename: filename&#xA;    })&#xA;  }&#xA;&#xA;  saveFile = async () =&gt; {&#xA;    let visibility = 'public'&#xA;&#xA;    let fileObj = {&#xA;      bucket: awsConfig.aws_user_files_s3_bucket,&#xA;      region: awsConfig.aws_user_files_s3_bucket_region,&#xA;      key: visibility + '/' + this.state.filename,&#xA;      mimeType:'image/jpeg',&#xA;      localUri: this.state.fileUrl,&#xA;      visibility: visibility&#xA;    }&#xA;&#xA;    try {&#xA;      const picture = await API.graphql(&#xA;        graphqlOperation(mutations.createPicture, {&#xA;          input: {&#xA;            url: this.state.filename,&#xA;            file: fileObj&#xA;          }&#xA;        })&#xA;      )&#xA;</code></pre>&#xA;&#xA;<p>The problem is that the mutation runs without errors, setting the DB records, but the file does not appear in S3. The docs say <code>the SDK uploads the file to Amazon S3 for you.</code> so I don't think I forgot to add something.</p>&#xA;&#xA;<p>Any idea why the upload doesn't happen?</p>&#xA;",747024,,747024,2019-08-01 23:37:01,2020-11-06 14:22:15,Amplify AppSync doesn't upload S3Object file from client,<reactjs><amazon-web-services><graphql><aws-amplify><aws-appsync>,2,0,0,2019-08-01 23:23:23
57318171,2,,57188181,1,,"<p>AWS AppSync recently launched support for multiple authorization types on the same AppSync API. So you could for example enable cognito user pools as the authorization type on your API and add API_KEY as an additional authorization provider.</p>&#xA;&#xA;<p>After this, you would be able to use the @aws_api_key directive to make selected fields from your schema such as for example getForumTopics be api key authenticated. API Keys are in general considered to give public access.</p>&#xA;&#xA;<p>Also Cognito User Pools and Cognito Federated Identities are separate products. Cognito Federated Identities does indeed have an unauthenticated identity role that you can use to secure top level fields in your schema but it looks like the auth type on your API is set to Cognito User Pools.</p>&#xA;",6241856,,,,2019-08-01 23:25:00,"",,0,0,0,2019-08-01 23:25:00
57325376,1,57326185,,0,348,"<p>How do I create a dynamical filter using a computed property from vue when the dataset is from a graphql-query? </p>&#xA;&#xA;<p>I've looked at several articles that all use the array.filter()-method, but I can't get it to work on my dataset (dummy data below):</p>&#xA;&#xA;<pre><code>books: [{&#xA;                node: {&#xA;                title:  'Elon Musk',&#xA;                by:'Ashlee Vance',&#xA;                },&#xA;                node: {&#xA;                title:  'Steve Jobs',&#xA;                by:'George Llian',&#xA;                },&#xA;                node: {&#xA;                title:  'Face of Facebook',&#xA;                by:  'Sandip Paul',&#xA;                },&#xA;                node: {&#xA;                title:  'Tim Cook',&#xA;                by:'Andy Atkins',&#xA;                url:'http://www.voidcanvas.com/'&#xA;                },&#xA;                node: {&#xA;                title:  'Abdul Kalam',&#xA;                by:'Arun Tiwari',&#xA;                },&#xA;                node: {&#xA;                title:  'Story of Elon Musk',&#xA;                by:'BP John',&#xA;                },&#xA;                node: {&#xA;                title:  'Story of Bill Gates',&#xA;                by:'Russel Crook',&#xA;                },&#xA;                node: {&#xA;                title:  'Becoming Steve Jobs',&#xA;                by:'Andrew Russel',&#xA;                }&#xA;            }]&#xA;</code></pre>&#xA;&#xA;<p>Method:</p>&#xA;&#xA;<pre><code>computed: {&#xA;        filteredBooks:  function () {&#xA;            var  books_array  =  this.books,&#xA;            searchString  =  this.searchString;&#xA;            if(!searchString) {&#xA;                return  books_array;&#xA;            }&#xA;            searchString  =  searchString.trim().toLowerCase();&#xA;            books_array  =  books_array.filter(function(item) {&#xA;                if(item.node.title.toLowerCase().indexOf(searchString) !==  -1) {&#xA;                return  item;&#xA;                }&#xA;            });&#xA;            return  books_array;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>HTML:</p>&#xA;&#xA;<pre><code>&lt;div id=""app""&gt;&#xA;  &lt;input type=""text"" v-model=""searchString"" placeholder=""search"" /&gt;&#xA;&#xA;    &lt;ul style=""list-style: none;""&gt;&#xA;      &lt;li v-for=""book in filteredBooks""&gt;&#xA;        &lt;p&gt;{{book.title}} -by- {{book.by}}&lt;/p&gt;&#xA;      &lt;/li&gt;&#xA;    &lt;/ul&gt;&#xA;&lt;/div&gt;&#xA;</code></pre>&#xA;&#xA;<p>This is my first coding project since early 2000, so please feel free to point me in the right direction if this is the wrong forum for this question.</p>&#xA;&#xA;<p>I set up a <a href=""https://jsfiddle.net/3n8yeqmz/"" rel=""nofollow noreferrer"">jsfiddle</a> to play with the case.</p>&#xA;",4931527,,,,2019-08-02 12:12:31,How can I create dynamic filtering in Vue from a graphql dataset?,<javascript><vuejs2><graphql>,1,0,0,2019-08-02 11:14:01
57326185,2,,57325376,1,,"<p>Here is the code with some modifications:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>var app = new Vue({&#xD;&#xA;  el: '#app',&#xD;&#xA;  data: {&#xD;&#xA;    searchString: '',&#xD;&#xA;    books: [{&#xD;&#xA;        title: 'Elon Musk',&#xD;&#xA;        by: 'Ashlee Vance'&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        title: 'Steve Jobs',&#xD;&#xA;        by: 'George Llian'&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        title: 'Face of Facebook',&#xD;&#xA;        by: 'Sandip Paul'&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        title: 'Tim Cook',&#xD;&#xA;        by: 'Andy Atkins',&#xD;&#xA;        url: 'http://www.voidcanvas.com/'&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        title: 'Abdul Kalam',&#xD;&#xA;        by: 'Arun Tiwari'&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        title: 'Story of Elon Musk',&#xD;&#xA;        by: 'BP John'&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        title: 'Story of Bill Gates',&#xD;&#xA;        by: 'Russel Crook'&#xD;&#xA;      },&#xD;&#xA;      {&#xD;&#xA;        title: 'Becoming Steve Jobs',&#xD;&#xA;        by: 'Andrew Russel'&#xD;&#xA;      }&#xD;&#xA;    ]&#xD;&#xA;  },&#xD;&#xA;  computed: {&#xD;&#xA;    filteredBooks: function() {&#xD;&#xA;      return this.books.filter(e =&gt; this.searchString === '' ? false : e.title.toLowerCase().indexOf(this.searchString.toLowerCase()) !== -1 ? true : false);&#xD;&#xA;    }&#xD;&#xA;  }&#xD;&#xA;});</code></pre>&#xD;&#xA;<pre class=""snippet-code-css lang-css prettyprint-override""><code>body {&#xD;&#xA;  background-color: #dbd8d8;&#xD;&#xA;  padding: 20px;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;input {&#xD;&#xA;  width: 300px;&#xD;&#xA;  height: 30px;&#xD;&#xA;  padding: 0.2rem;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;.design {}&#xD;&#xA;&#xD;&#xA;p {&#xD;&#xA;  position: relative;&#xD;&#xA;  display: block;&#xD;&#xA;  padding: .4em .4em .4em 2em;&#xD;&#xA;  margin: .5em 0;&#xD;&#xA;  border: 3px solid white;&#xD;&#xA;  background: #FC756F;&#xD;&#xA;  color: #444;&#xD;&#xA;}</code></pre>&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.17/vue.js""&gt;&lt;/script&gt;&#xD;&#xA;&#xD;&#xA;&lt;div id=""app""&gt;&#xD;&#xA;  &lt;input type=""text"" v-model=""searchString"" placeholder=""search"" /&gt;&#xD;&#xA;&#xD;&#xA;  &lt;ul style=""list-style: none;""&gt;&#xD;&#xA;    &lt;li v-for=""book in filteredBooks""&gt;&#xD;&#xA;      &lt;p&gt;{{book.title}} -by- {{book.by}}&lt;/p&gt;&#xD;&#xA;    &lt;/li&gt;&#xD;&#xA;  &lt;/ul&gt;&#xD;&#xA;&lt;/div&gt;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<ol>&#xA;<li><p>Remove the <strong>node:</strong> from before the objects in the <strong>books</strong> data array - <strong>books</strong> array should contain a bunch of plain objects. If you put <strong>node:</strong> before each object, then you ""say"" that the every <strong>node</strong> is the key of key-value pair of an object (so the keynames will be identical - <strong>node</strong>!!!)</p></li>&#xA;<li><p>Simplify <strong>filteredBooks</strong> computed - no need to store all the variables. This function (filteredBooks) doesn't change the inputs, so you can use <strong>this</strong> here. The <code>filter()</code> functions doesn't change the array it filters - rather it returns a <strong>new array</strong>, containing only values that the iteratee function ""saw"" as true </p></li>&#xA;<li><p>You check for <code>!searchString</code> and that's never the case - <strong>searchString</strong> is always going to be <strong>true</strong> as you initialize it with <code>searchString: ''</code> (an empty value - but a value), so I changed it checking for the empty value in the <strong>filteredBooks</strong> computed.</p></li>&#xA;<li><p>I modified the code so that it compares lowercase to lowercase. With your code if someone typed a search string in uppercase, then there'd have been no match.</p></li>&#xA;</ol>&#xA;",2316540,,2316540,2019-08-02 12:12:31,2019-08-02 12:12:31,"",,0,2,0,2019-08-02 12:05:09
57332377,2,,57227422,3,,"<p>Yes, it is fine in AppSync to require the clientId.</p>&#xA;&#xA;<p>See the AppSync Docs on designing a schema: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/designing-your-schema.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/designing-your-schema.html</a></p>&#xA;&#xA;<p>In particular there is a section from the docs that I will paraphrase here.</p>&#xA;&#xA;<p>Let's say you have a comment type</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code> type Comment {&#xD;&#xA;     todoid: ID!&#xD;&#xA;     commentid: String!&#xD;&#xA;     content: String&#xD;&#xA; }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>In this case there are two id's and both are required, because this corresponds to a DynamoDB primary + sort key combination. You will map these fields to the keys in DynamoDB in your resolver mapping template.</p>&#xA;&#xA;<p>The template could look like:</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>{&#xD;&#xA;    ""version"" : ""2017-02-28"",&#xD;&#xA;    ""operation"" : ""PutItem"",&#xD;&#xA;    ""key"": {&#xD;&#xA;        ""todoid"" : { ""S"" : ""${context.arguments.todoid}"" },&#xD;&#xA;        ""commentid"" : { ""S"" : ""${context.arguments.commentid}"" }&#xD;&#xA;    },&#xD;&#xA;    ""attributeValues"" : {&#xD;&#xA;        ""content"" : { ""S"" : ""${context.arguments.content}"" }&#xD;&#xA;    }&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;&#xA;<p>In short if you are using a DynamoDB table that has two a hash + sort key, it is encouraged in AppSync to have them as required fields on the GraphQL type.</p>&#xA;",10886417,,,,2019-08-02 19:23:24,"",,0,0,0,2019-08-02 19:23:24
57332663,2,,56826035,1,,"<p>To protect the <code>Mutation.createPost</code> mutation such that only the owner of the Post as designated via the <code>postUserId</code> may access it you add an @auth directive to the Post object definition:</p>&#xA;&#xA;<pre><code>type Post @model @auth(rules: [{ allow: owner, ownerField: ""postUserId"" }]) {&#xA;  title: String!&#xA;  # This will use a field 'postUserId' by default.&#xA;  user: User!&#xA;    @connection(name: ""UserPosts"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>With this setup, a mutation:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  createPost(input:{&#xA;    title:""Oh this is BAD!""&#xA;    postUserId: ""regular-user-id""&#xA;  }) {&#xA;    title&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>will fail if the logged in user is not ""regular-user-id"".</p>&#xA;&#xA;<p>This answer may help fill things in as well <a href=""https://github.com/aws-amplify/amplify-cli/issues/1507#issuecomment-513042021"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/1507#issuecomment-513042021</a>.</p>&#xA;",2088684,,,,2019-08-02 19:50:23,"",,0,0,0,2019-08-02 19:50:23
57334616,1,,,3,2599,"<p>I'm using AWS AppSync web console, I created a new API from scratch.</p>&#xA;&#xA;<p>I created a new resource like this:</p>&#xA;&#xA;<pre><code>type ToDo {&#xA;  id: ID!&#xA;  title: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>After AWS AppSync created the DynamoDB table and Schema, what can I do if I want to update the schema and add a new field?</p>&#xA;&#xA;<pre><code>type ToDo {&#xA;  id: ID!&#xA;  title: String!&#xA;  completed: Boolean&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I know AWS Amplify has a command <code>amplify api gql-compile</code> and then <code>amplify push</code> and it will update the schema and the DynamoDB tables.</p>&#xA;&#xA;<p>Is there a way to do this from the AWS AppSync <a href=""https://console.aws.amazon.com/appsync/"" rel=""nofollow noreferrer"">web console</a>?</p>&#xA;",16342,,,,2019-08-03 02:59:41,AWS AppSync Update Schema,<amazon-web-services><graphql><aws-amplify><aws-appsync>,1,5,0,2019-08-03 00:13:27
57343260,1,,,2,557,"<p>I'm pretty new to aws amplify / app sync and I couldn't find an answer for my question. <br>My goal is to develop a social media database, where you can like user posts. <br>The question I have is, if I should aggregate likes (with help of lambda maybe?) of posts or is there any other efficient way to get the like counts.</p>&#xA;&#xA;<p>My schema looks like this right now</p>&#xA;&#xA;<pre><code>type Post @model {&#xA;  id: ID!&#xA;  author: User @connection(name : ""UserPost"")&#xA;  message: String&#xA;  likers: [User]&#xA;  comments: [Comment] @connection(name : ""PostComment"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Im thinking to add a column (like_count) which is getting incremented (by lambda maybe?) when I mutate the likers array. Is that a good way to solve it ?</p>&#xA;",4035864,,,,2019-08-07 19:48:16,Handling likes of users in DynamoDB,<aws-lambda><amazon-dynamodb><graphql><aws-amplify><aws-appsync>,1,0,0,2019-08-04 01:56:49
57346284,2,,57264156,1,,"<p>The best solution to me is to build a new Resource with your currencies.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>&lt;Admin {...props}&gt;&#xA;    {/* Notice you don't have to set any view to declare a resource */}&#xA;    &lt;Resource name=""currencies"" /&gt;&#xA;&lt;/Admin&gt;&#xA;</code></pre>&#xA;&#xA;<p>That way, you'll be able to use a <code>&lt;ReferenceInput&gt;</code> to select your currency in another resource.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>&lt;ReferenceInput label=""Currency"" source=""currency"" reference=""currencies""&gt;&#xA;    &lt;SelectInput optionText=""name"" /&gt;&#xA;&lt;/ReferenceInput&gt;&#xA;</code></pre>&#xA;",3868326,,,,2019-08-04 11:47:55,"",,0,0,0,2019-08-04 11:47:55
57386714,1,,,0,367,"<p>I am using AWS Amplify to configure Appsync in my project. In my schema.graphql, I have the following types:</p>&#xA;&#xA;<pre><code>type Post @model {&#xA;  id: ID!&#xA;  tweet: Tweet&#xA;}&#xA;&#xA;type Tweet {&#xA;  id: ID&#xA;  text: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Tweet is a nested object under Post, it is intentionally not a @model.</p>&#xA;&#xA;<p>When I upload to AWS via the cli (<code>amplify push</code>), it removes the Tweet's <code>id</code> field from <code>TweetInput</code> on the generated schema. This is the generated schema from the AWS console:</p>&#xA;&#xA;<pre><code>input CreatePostInput {&#xA;    id: ID&#xA;    tweet: TweetInput&#xA;}&#xA;&#xA;type Tweet {&#xA;    id: ID&#xA;    text: String!&#xA;}&#xA;&#xA;input TweetInput {&#xA;    text: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have searched the Appsync documentation, but I cannot find anywhere that says I can't use an <code>id</code> field on an object type.</p>&#xA;&#xA;<p>Is there any way around this? I'd like to avoid renaming the field if I can.</p>&#xA;",6342734,,,,2019-08-13 19:31:35,"AWS Amplify removes ""id"" field after uploading GraphQL Schema",<amazon-web-services><graphql>,1,0,0,2019-08-07 03:50:41
57390205,1,,,3,680,"<p>I have created a chat application using AWS Appsync. My problem is I am not able to identify online and offline users. I was thinking of marking user as active in database when they logged in, however i could not mark them as inactive because i am using single sign on and with no log out feature.</p>&#xA;&#xA;<p>I verified the MQTT connection that subscription creates, but could not find anything relevant. Chat application is web application.</p>&#xA;",1897888,,,,2019-08-07 19:37:38,Display Online users in aws appsync based chat application,<amazon-web-services><graphql><aws-appsync>,1,0,0,2019-08-07 08:35:48
57391288,2,,57381292,0,,"<p>Yes, you can query any field you want from the result of <code>mutation</code> in the same way as for <code>query</code>. You just have to return your object after updating it.</p>&#xA;&#xA;<p>For example:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  updateHero(newHero: { name: ""John Doe"" }) {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>One more thing. Although it is recommended to return the updated object from the <code>mutation</code>, on the other side, it is also recommended to design your GraphQL server as per your UI needs. So if you think you won't need the whole object after updating, you can always return only name. </p>&#xA;&#xA;<p>In this schema your schema will look like the following:</p>&#xA;&#xA;<pre><code>Mutation {&#xA;  updateHero(newHero: UpdateHeroInput!): String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the corresponding query will be:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  updateHero(newHero: { name: ""John Doe"" })&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Note, there's no selection of fields as it returns a single scalar value (String).</p>&#xA;",805151,,805151,2019-12-07 01:30:42,2019-12-07 01:30:42,"",,0,4,0,2019-08-07 09:35:28
57401264,2,,57390205,4,,"<p>One option you have here is to use <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/howitworks-ttl.html"" rel=""nofollow noreferrer"">DynamoDB TTL</a>.  You can write a record to a table to enable presence detection, and use a heartbeat mechanism to upsert these records from your application.  DynamoDB will handle deleting the records for you, so you do not need an explicit logout to mark them as inactive.</p>&#xA;",11681626,,,,2019-08-07 19:37:38,"",,0,1,0,2019-08-07 19:37:38
57401415,2,,57343260,1,,"<p>Another way to handle this is to use <a href=""https://aws.amazon.com/blogs/database/dynamodb-streams-use-cases-and-design-patterns/"" rel=""nofollow noreferrer"">DynamoDB streams</a>.  If you had another DynamoDB table that contained the PostId as the partition Key and the UserId as the Sort Key, you can use the streams to control a like count aggregate attribute on your Post table.  Increment the value when a new like record is created and decrement the value when someone deletes / unlikes a post.</p>&#xA;",11681626,,,,2019-08-07 19:48:16,"",,0,0,0,2019-08-07 19:48:16
57419414,1,57420723,,0,330,"<p>I have 2 queries: <code>getGroups(): [Group]</code> and <code>getGroup($id: ID!): Group</code>. One component first loads all groups using <code>getGroups()</code> and then later on a different component needs to access a specific <code>Group</code> data by ID.</p>&#xA;&#xA;<p>I'd expect that Apollo's normalization would already have Group data in cache and would use it when <code>getGroup($id: ID!)</code> query is executed, but that's not the case.</p>&#xA;&#xA;<p>When I set <code>cache-only</code> fetchPolicy nothing is returned. I can access the data using <code>readFragment</code>, but that's not as flexible as just using a query.</p>&#xA;&#xA;<p>Is there an easy way to make Apollo return the cached data from a different query as I would expect?</p>&#xA;",190438,,,,2019-08-08 21:17:15,Apollo query does not return cached data available using readFragment,<graphql><apollo><react-apollo>,1,0,0,2019-08-08 19:24:39
57421024,2,,57420944,2,,"<p>This is called Operation Name. It's optional to declare it but makes easier when debugging. </p>&#xA;&#xA;<p>You can read more here: <a href=""https://graphql.org/learn/queries/#operation-name"" rel=""nofollow noreferrer"">https://graphql.org/learn/queries/#operation-name</a></p>&#xA;",6510884,,,,2019-08-08 21:45:45,"",,0,1,0,2019-08-08 21:45:45
57462073,1,57462534,,2,69,"<p>I'm fairly new to the concept of GraphQL and I'm wondering whether it is considered bad practice to return all results in a query when the argument is left out.</p>&#xA;&#xA;<p>If, for example, I run this query:</p>&#xA;&#xA;<pre><code>query {&#xA;  item(title: ""test"") {&#xA;    title,&#xA;    properties {&#xA;      key,&#xA;      value&#xA;     }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It will return all properties, but if I run this query:</p>&#xA;&#xA;<pre><code>query {&#xA;  item(title: ""test"") {&#xA;    title,&#xA;    properties(group: ""test-group"") {&#xA;      key,&#xA;      value&#xA;     }&#xA;   }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>It will return all properties in the ""test-group"".&#xA;I tried searching for this question online and on StackOverflow but I couldn't find the answer I need.</p>&#xA;&#xA;<p>I did manage to find the following example on the GraphQL website though, but I'm not sure whether it's exactly the same:</p>&#xA;&#xA;<pre><code>{&#xA;  human(id: ""1000"") {&#xA;    name&#xA;    height&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<pre><code>{&#xA;  human(id: ""1000"") {&#xA;    name&#xA;    height(unit: FOOT)&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If anyone could shed some light on this, I'd be very thankful!</p>&#xA;",0,user11917850,,2019-08-12 19:18:24,2019-08-12 19:18:24,Is it bad practice to return all results when an argument is left out?,<graphql>,1,0,0,2019-08-12 13:23:19
57468154,2,,57468031,11,,"<p>The keys in <code>apollo</code> need to match the keys in the returned object. In your case, the request is returning object with <code>client</code> not <code>clients</code>, so you need to change the key in <code>apollo</code> to <code>client</code>:</p>&#xA;&#xA;<pre><code>apollo: {&#xA;    client: {&#xA;        query: allClientsQuery,&#xA;        loadingKey: 'i am loading '&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",4983450,,,,2019-08-12 20:58:11,"",,0,1,0,2019-08-12 20:58:11
57499579,2,,57496403,1,,"<p>You're not creating two entries here; your mutation:</p>&#xA;&#xA;<pre><code>mutation something($name: String!) {&#xA;  createAdminConfigCategory(input: { adminConfigCategory: { name: $name } }) {&#xA;    query { # &lt; Here's the issue&#xA;      allAdminConfigCategories {&#xA;        edges {&#xA;          node {&#xA;            id&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>is requesting the <code>query</code> field on the mutation payload, which gives you access to the entire GraphQL schema again. You're then using that to query <code>allAdminConfigCategories</code> which will give you all of the admin config categories you're allowed to see (not just the one you just created).</p>&#xA;&#xA;<p>The mutation you want is probably more like this:</p>&#xA;&#xA;<pre><code>mutation something($name: String!) {&#xA;  createAdminConfigCategory(input: { adminConfigCategory: { name: $name } }) {&#xA;    adminConfigCategory {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here we're just querying the newly created AdminConfigCategory directly from the mutation payload.</p>&#xA;",141284,,,,2019-08-14 17:39:46,"",,0,3,0,2019-08-14 17:39:46
57513636,1,,,2,43,"<p>I have a picture object with a rating.</p>&#xA;&#xA;<pre><code>type Picture @model {&#xA;  id: ID!&#xA;  file: S3Object!&#xA;  rating: Int&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And I want to get the top 20 pictures that have the highest rating.&#xA;Do I need a custom resolver to do ""sortBy""?&#xA;All my code is autogenerated by Amplify.</p>&#xA;",747024,,,,2019-08-15 17:21:52,How to sort by asc/desc value of a field?,<graphql><aws-amplify><aws-appsync>,0,1,0,2019-08-15 17:21:52
57530724,1,,,0,30,"<p>I have two tables product1 and product2, need to retrieve record by mfgcode which exists in both tables</p>&#xA;&#xA;<p>newbie in graphql any help will be appreicated, tried few things but no luck doing so </p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;    Query: {&#xA;    product1: () =&gt; product1,&#xA;    product2: () =&gt; product2&#xA;    },&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>need to get single record if same mfgcode in both tables matches</p>&#xA;",8237932,,,,2019-08-16 20:25:43,how to associate two tables and query by id in graphql,<graphql>,0,2,0,2019-08-16 20:25:43
57548632,1,,,3,841,"<p>I'm trying to use react-admin with AWS Amplify library and AWS AppSync SDK.</p>&#xA;&#xA;<p>I can't wrap my head around how to use use ra-data-graphql/ra-data-graphql-simple with AWS AppSync API for querying/mutating data. Trying to do a very basic test with <code>master/examples/demo</code> from <a href=""https://github.com/marmelab/react-admin/"" rel=""nofollow noreferrer"">https://github.com/marmelab/react-admin/</a>.</p>&#xA;&#xA;<p>Any guidance will be appreciated.</p>&#xA;&#xA;<p>Currently I'm trying to use dataProvider similar to below:</p>&#xA;&#xA;<pre><code>src/dataProvider/appsync.js:&#xA;&#xA;import gql from 'graphql-tag';&#xA;import AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';&#xA;import buildGraphQLProvider, { buildQuery } from 'ra-data-graphql-simple';&#xA;import { __schema as schema } from './schema';&#xA;&#xA;const client = new AWSAppSyncClient({&#xA;  url: ""https://xxxx.appsync-api.us-east-1.amazonaws.com/graphql"",&#xA;  region: ""us-east-1,&#xA;  auth: {&#xA;    type: AUTH_TYPE.AMAZON_COGNITO_USER_POOLS,&#xA;    jwtToken: async () =&gt; (await Auth.currentSession()).getIdToken().getJwtToken(),&#xA;  }&#xA;&#xA;const myBuildQuery = introspection =&gt; (fetchType, resource, params) =&gt; {&#xA;    const builtQuery = buildQuery(introspection)(fetchType, resource, params);&#xA;&#xA;    if (resource === 'listings' &amp;&amp; fetchType === 'GET_LIST') {&#xA;        return {&#xA;            ...builtQuery,&#xA;            query: gql`&#xA;                query getListings {&#xA;                    data: getListings {&#xA;                        items {&#xA;                            listingId&#xA;                        }&#xA;                    }&#xA;                }`,&#xA;        };&#xA;    }&#xA;&#xA;    return builtQuery;&#xA;}&#xA;&#xA;export default buildGraphQLProvider({ client: client, introspection: { schema }, buildQuery: myBuildQuery })&#xA;&#xA;</code></pre>&#xA;&#xA;<pre><code>src/dataProvider/index.js:&#xA;&#xA;export default type =&gt; {&#xA;    switch (type) {&#xA;        case 'graphql':&#xA;            return import('./graphql').then(factory =&gt; factory.default());&#xA;        case 'appsync':&#xA;            return import('./appsync');&#xA;        default:&#xA;            return import('./rest').then(provider =&gt; provider.default);&#xA;    }&#xA;};&#xA;</code></pre>&#xA;&#xA;<pre><code>src/App.js:&#xA;&#xA;...&#xA;import dataProviderFactory from './dataProvider';&#xA;...&#xA;&#xA;class App extends Component {&#xA;    state = { dataProvider: null };&#xA;    async componentDidMount() {&#xA;        const dataProvider = await dataProviderFactory(&#xA;            process.env.REACT_APP_DATA_PROVIDER&#xA;        );&#xA;        this.setState({ dataProvider });&#xA;    }&#xA;...&#xA;</code></pre>&#xA;&#xA;<pre><code>src/dashboard/Dashboard.js:&#xA;&#xA;...&#xA;    fetchData() {&#xA;        this.fetchListings();&#xA;    }&#xA;&#xA;    async fetchListings() {&#xA;        const { dataProvider } = this.props;&#xA;        const { data: reviews } = await dataProvider(GET_LIST, 'listings');&#xA;        console.log(listings)&#xA;    }&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>Currently no data is returned from the API and the exception is thrown on <code>await dataProvider(GET_LIST, 'listings');</code> saying <code>call: [object Model] is not a function</code>, however I see that buildGraphQLProvider promise was resolved succesfully to a function.</p>&#xA;&#xA;<p>Can anyone suggest what I am doing wrong and what is the right way to approach the task?</p>&#xA;",9987232,,,,2019-08-18 21:51:46,Using ra-data-graphql with AppSync GraphQL API,<reactjs><graphql><aws-amplify><aws-appsync><react-admin>,0,1,0,2019-08-18 21:51:46
57560476,2,,50607532,1,,"<p>See <a href=""https://aws-amplify.github.io/docs/js/api"" rel=""nofollow noreferrer"">AWS API LINK</a></p>&#xA;&#xA;<p>Relevant code snippet from above link:</p>&#xA;&#xA;<pre><code>&lt;Connect query={graphqlOperation(queries.listTodos)}&gt;&#xA;            {({ data: { listTodos }, loading, error }) =&gt; {&#xA;                if (error) return (&lt;h3&gt;Error&lt;/h3&gt;);&#xA;                if (loading || !listTodos) return (&lt;h3&gt;Loading...&lt;/h3&gt;);&#xA;                return (&lt;ListView todos={listTodos.items} /&gt; );&#xA;            }}&#xA;        &lt;/Connect&gt;&#xA;</code></pre>&#xA;&#xA;<p>Notice that the inside of the Connect component comes with not just 'data', but also 'error' and 'loading'. Since this is an asynchronous request, if you try to return data immediately, it will not be there, but if you do as the example above shows (assuming your request returns data of course), you should be good. </p>&#xA;",8317036,,8317036,2019-08-20 06:56:21,2019-08-20 06:56:21,"",,0,0,0,2019-08-19 16:14:27
57594608,1,,,4,2168,"<p>This morning, I asked me ""What are the different tech stacks to deploy a GraphQL server in the cloud (AWS, GCP, etc.)? </p>&#xA;&#xA;<p>And after some research, I found some tutorials which are using AWS Lambda. But is it a good idea to deploy a GraphQL server on Google Cloud Functions or AWS Lambda? Otherwise what are the alternatives?</p>&#xA;&#xA;<p>Some tutorials that I have found which are using AWS Lambda :</p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://serverless.com/blog/running-scalable-reliable-graphql-endpoint-with-serverless/"" rel=""nofollow noreferrer"">https://serverless.com/blog/running-scalable-reliable-graphql-endpoint-with-serverless/</a></li>&#xA;<li><a href=""https://hackernoon.com/create-a-serverless-graphql-server-using-express-apollo-server-and-aws-lambda-c3850a2092b5"" rel=""nofollow noreferrer"">https://hackernoon.com/create-a-serverless-graphql-server-using-express-apollo-server-and-aws-lambda-c3850a2092b5</a></li>&#xA;<li><a href=""https://medium.com/@cody.taft/serverless-graphql-with-aws-f7b6da9d2162"" rel=""nofollow noreferrer"">https://medium.com/@cody.taft/serverless-graphql-with-aws-f7b6da9d2162</a></li>&#xA;</ul>&#xA;",11957830,,11957830,2019-08-21 15:31:28,2019-08-21 15:31:28,Is it a good idea to deploy a GraphQL server on Google Cloud Functions or AWS Lambda? Otherwise what are the alternatives?,<amazon-web-services><google-cloud-platform><aws-lambda><graphql><google-cloud-functions>,0,3,0,2019-08-21 15:10:33
57598785,2,,49319588,1,,"<p>It turns out that, in our case, the problem was the existence of reserved keys defined in out schema (<a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html"" rel=""nofollow noreferrer"">DynamoDB reserved words</a>) even though we are not using Dynamo at all.</p>&#xA;",1564230,,,,2019-08-21 20:27:18,"",,0,1,0,2019-08-21 20:27:18
57608975,1,,,10,1811,"<p>set cookies inside a lambda serverless with apollo-server-lambda</p>&#xA;&#xA;<p>I am migrating from apollo-server to the serverless version. Is there a way I can access the response object or another way to set cookies?</p>&#xA;&#xA;<pre><code>context: ({ event, context }) =&gt; ({&#xA;   headers: event.headers,&#xA;   functionName: context.functionName,&#xA;   event,&#xA;   context,&#xA; }),&#xA;</code></pre>&#xA;&#xA;<p>I was expecting in the context to have access to the res object like it was in the apollo-server.</p>&#xA;",5596463,,,,2020-01-16 22:40:08,How to handle cookies inside apollo-server-lambda,<lambda><graphql><serverless><apollo-server>,3,0,0,2019-08-22 12:04:37
57622786,2,,57621579,0,,<p>I am not sure how does Prisma API read data from this table. </p>&#xA;&#xA;<p>My simple sugesstion is first you have to read <code>first</code> and <code>last ID</code> for last date using <code>createdAt</code> column and group it using this same column and get <code>Min</code> and <code>Max ID</code>. In this first read operation select <code>ID</code> only. </p>&#xA;&#xA;<p>Then select records between these two ID. So you don't need to read all records each time.    </p>&#xA;,5503514,,5503514,2019-08-23 08:56:51,2019-08-23 08:56:51,"",,0,0,0,2019-08-23 08:51:05
57626491,1,,,2,933,"<p>I need to connect my GraphQL server to react-admin, but it needs a custom header for authentication like (Authentication: Bearer + Token)</p>&#xA;&#xA;<p>The simpleRestProvider function accepts an HTTP client function as second argument, but I couldn't find a way to add this using ra-data-graphql / graphcool / data-graphql-simple.</p>&#xA;&#xA;<p>app.js</p>&#xA;&#xA;<pre><code>&#xA;import React, { Component } from 'react';&#xA;&#xA;import { Admin, Resource } from 'react-admin';&#xA;import './App.css';&#xA;import { UserList } from './users';&#xA;&#xA;import UserIcon from '@material-ui/icons/Group';&#xA;import Dashboard from './Dashboard';&#xA;import authProvider from './authProvider-old';&#xA;import graphql from './graphql';&#xA;&#xA;class App extends Component {&#xA;  constructor() {&#xA;    super();&#xA;    this.state = { dataProvider: null };&#xA;  }&#xA;  async componentDidMount() {&#xA;    const dataProvider = await graphql();&#xA;&#xA;    this.setState({ dataProvider })&#xA;  }&#xA;&#xA;  render() {&#xA;    const { dataProvider } = this.state;&#xA;&#xA;    if (!dataProvider) {&#xA;      return &lt;div&gt;Loading&lt;/div&gt;;&#xA;    }&#xA;&#xA;    return (&#xA;      &lt;Admin dashboard={Dashboard} authProvider={authProvider} dataProvider={dataProvider}&gt;&#xA;        &lt;Resource name=""users"" list={UserList} icon={UserIcon} /&gt;&#xA;      &lt;/Admin&gt;&#xA;    )&#xA;  }&#xA;};&#xA;&#xA;export default App;&#xA;&#xA;&#xA;</code></pre>&#xA;&#xA;<p>graphql.js</p>&#xA;&#xA;<pre><code>import buildApolloClient, {&#xA;  buildQuery as buildQueryFactory,&#xA;} from 'ra-data-graphql-simple';&#xA;import { GET_LIST } from 'ra-core';&#xA;import gql from 'graphql-tag';&#xA;const getGqlResource = resource =&gt; {&#xA;  switch (resource) {&#xA;    case 'users':&#xA;      return 'Users';&#xA;&#xA;    default:&#xA;      throw new Error(`Unknown resource ${resource}`);&#xA;  }&#xA;};&#xA;&#xA;const customBuildQuery = introspectionResults =&gt; {&#xA;  const buildQuery = buildQueryFactory(introspectionResults);&#xA;&#xA;  return (type, resource, params) =&gt; {&#xA;    // if (type === DELETE) {&#xA;    //   return {&#xA;    //     query: gql`mutation remove${resource}($id: ID!) {&#xA;    //                 remove${resource}(cursor: 0)&#xA;    //             }`,&#xA;    //     variables: { id: params.id },&#xA;    //     parseResponse: ({ data }) =&gt; {&#xA;    //       if (data[`remove${resource}`]) {&#xA;    //         return { data: { id: params.id } };&#xA;    //       }&#xA;&#xA;    //       throw new Error(`Could not delete ${resource}`);&#xA;    //     },&#xA;    //   };&#xA;    // }&#xA;&#xA;    if (type === GET_LIST) {&#xA;      return {&#xA;        query: gql`query Get${resource}($cursor: Int!) {&#xA;                    get${resource}(cursor: $cursor) {&#xA;                      _id&#xA;                      name&#xA;                      lastName&#xA;                      email&#xA;                      crm&#xA;                    }&#xA;                }`,&#xA;        variables: { cursor: 0 },&#xA;        parseResponse: ({ data }) =&gt; {&#xA;          if (data[`get${resource}`]) {&#xA;            const getResource = data[`get${resource}`].map(({ _id, ...rest }) =&gt; ({ id: _id, ...rest }));&#xA;&#xA;            return { data: getResource, total: getResource.length };&#xA;          }&#xA;&#xA;          throw new Error(`Could not delete ${resource}`);&#xA;        },&#xA;      };&#xA;    }&#xA;&#xA;    const bq = buildQuery(type, resource, params);&#xA;&#xA;    console.log('BQ', bq);&#xA;&#xA;    return bq&#xA;  };&#xA;};&#xA;&#xA;export default () =&gt; {&#xA;  return buildApolloClient({&#xA;    clientOptions: {&#xA;      uri: 'http://localhost:4000/graphql',&#xA;    },&#xA;    buildQuery: customBuildQuery,&#xA;  }).then(dataProvider =&gt; async (type, resource, params) =&gt; {&#xA;    const dataArray = await dataProvider(type, getGqlResource(resource), params);&#xA;&#xA;    return { data: dataArray.data.sort((a, b) =&gt; a.name - b.name), total: dataArray.total }&#xA;  }&#xA;  );&#xA;}&#xA;&#xA;&#xA;&#xA;</code></pre>&#xA;",11967563,,,,2019-09-27 08:14:59,How to add custom Headers with ra-data-graphql-simple?,<reactjs><graphql><react-admin>,1,0,0,2019-08-23 12:37:14
57636653,2,,57595631,2,,"<blockquote>&#xA;  <p>Field \ BairroDelete \ must not have a selection since type \"" Boolean! \ Has no subfields.</p>&#xA;</blockquote>&#xA;&#xA;<p>You need to show us your graphql mutation document. </p>&#xA;&#xA;<p>It looks like you're doing something like this:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  BairroDelete(id: 123) {&#xA;    status&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Which is illegal, since <code>BairroDelete</code> returns boolean scalar, not object type that you can select fields from.</p>&#xA;&#xA;<p>However, this is legal:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  BairroDelete(id: 123)&#xA;}&#xA;</code></pre>&#xA;",5472617,,1660298,2020-04-16 15:40:02,2020-04-16 15:40:02,"",,0,0,0,2019-08-24 09:22:13
57649608,1,57649836,,6,6923,"<p>I am getting following error while invoking GraphQL Query in java application -</p>&#xA;&#xA;<blockquote>&#xA;  <p>""description"": ""Sub selection required for type Account of field&#xA;  accountQuery"",&#xA;              ""validationErrorType"": ""SubSelectionRequired"",&#xA;              ""queryPath"": [&#xA;                  ""accountQuery""&#xA;              ],</p>&#xA;</blockquote>&#xA;&#xA;<p>Here is my schema - </p>&#xA;&#xA;<blockquote>&#xA;  <p>schema {   query: Query }</p>&#xA;  &#xA;  <p>type Query {   accountQuery(nbr: String): Account }</p>&#xA;  &#xA;  <p>type Account {   <br>nbr: String <br>  name: String ... <br>}</p>&#xA;</blockquote>&#xA;&#xA;<p>I have Account POJO defined and i am calling a Service in the backend based on the nbr value passed which is working fine.<br>&#xA;Here is the rest request i am sending - <br></p>&#xA;&#xA;<blockquote>&#xA;  <p>{   accountQuery(nbr: ""123"") }</p>&#xA;</blockquote>&#xA;&#xA;<p>Is the error due to missing id field and if so how do i mark ""nbr"" field as id ?</p>&#xA;",2326907,,,,2019-08-25 21:32:24,graphql error Sub selection required for type object of field Query,<java><graphql>,1,0,0,2019-08-25 20:46:30
57649836,2,,57649608,6,,"<p>In GraphQL, you always need to provide the fields you'd like to get in return from the query.</p>&#xA;&#xA;<p>For example, if you'd like to get from the <code>Account</code> object the name and nbr fields, you need to specify it like that:</p>&#xA;&#xA;<pre><code>{ accountQuery(nbr: ""123"") {name, nbr}}&#xA;</code></pre>&#xA;&#xA;<p>This is a key concept in GraphQL, whenever you query, you need to provide a <code>selection set</code>, that is- A set of fields requested in the query, you can never just return a full object, need to specify exactly which fields you'd like</p>&#xA;",5091073,,5091073,2019-08-25 21:32:24,2019-08-25 21:32:24,"",,0,1,0,2019-08-25 21:25:41
57650203,1,,,6,1016,"<p>I'm trying to batch put a number of items to DynamoDB using AppSync. When I call the resolver it throws no errors but nothing is saved to the database.</p>&#xA;&#xA;<p><strong>Schema</strong></p>&#xA;&#xA;<pre><code>type BoxScore @model {&#xA;  id: ID!&#xA;  userId: String!&#xA;  gameVariant: String!&#xA;  complete: Boolean!&#xA;  failFact: BoxScoreFact @connection&#xA;  totalCorrect: Int!&#xA;}&#xA;&#xA;type BoxScoreFact @model {&#xA;  id: ID!&#xA;  left: Int!&#xA;  right: Int!&#xA;  gameVariant: String!&#xA;  timestamp: Int!&#xA;  correct: Boolean!&#xA;}&#xA;&#xA;input BatchAddCreateBoxScoreFactInput {&#xA;  id: ID&#xA;  left: Int!&#xA;  right: Int!&#xA;  gameVariant: String!&#xA;  timestamp: Int!&#xA;  correct: Boolean!&#xA;  boxScoreFactBoxScoreId: ID!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>IAM Role:</strong></p>&#xA;&#xA;<pre><code>        ""Effect"": ""Allow"",&#xA;        ""Action"": [&#xA;            ""dynamodb:DeleteItem"",&#xA;            ""dynamodb:GetItem"",&#xA;            ""dynamodb:PutItem"",&#xA;            ""dynamodb:Query"",&#xA;            ""dynamodb:Scan"",&#xA;            ""dynamodb:UpdateItem"",&#xA;            ""dynamodb:BatchGetItem"",&#xA;            ""dynamodb:BatchWriteItem""&#xA;        ],&#xA;</code></pre>&#xA;&#xA;<p><strong>Resolver</strong>:</p>&#xA;&#xA;<pre><code>#set($factsdata = [])&#xA;#foreach($item in ${ctx.args.facts})&#xA;    $util.qr($factsdata.add($util.dynamodb.toMapValues($item)))&#xA;#end&#xA;&#xA;{&#xA;    ""version"" : ""2018-05-29"",&#xA;    ""operation"" : ""BatchPutItem"",&#xA;    ""tables"" : {&#xA;        ""TABLENAME"": $utils.toJson($factsdata)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Call from AppSync playground:</strong></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/uTpYb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uTpYb.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><strong>Response mapping template:</strong></p>&#xA;&#xA;<pre><code>  #if($ctx.error)&#xA;      ## Append a GraphQL error for that field in the GraphQL response&#xA;      $utils.error($ctx.error.message, $ctx.error.message)&#xA;  #end&#xA;&#xA;  {&#xA;      ""boxScoreFacts"": $util.toJson({""res"": ""no error"", ""ctx"": $ctx}),&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p><strong>Output template from Function test run:</strong></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/yRHXC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yRHXC.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><strong>DynamoDB Table</strong></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/iQqpX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/iQqpX.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Where <code>TABLENAME</code> is set equal to the DynamoDB table name that is displayed in the DDB console. So something like BoxScoreFact-woieieie99392-prod. </p>&#xA;&#xA;<p>The table is always empty and the response is null. This is lifted almost straight out of the <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html"" rel=""nofollow noreferrer"">example from the docs</a>. Also, I should note, that putting one item using the normal create graphql function does put an item to the intended table.</p>&#xA;&#xA;<p>What am I missing here?</p>&#xA;",4397018,,4397018,2019-08-28 22:53:00,2021-03-19 02:05:16,AppSync BatchPutItem not saving items,<amazon-web-services><amazon-dynamodb><graphql><aws-appsync><vtl>,3,9,0,2019-08-25 22:36:45
57658931,1,57663938,,6,2584,"<p>i am new to graphql and i am having this issue and don't know how to solve it.</p>&#xA;&#xA;<p>for example i have two tables: book and book_author;</p>&#xA;&#xA;<p>book has book_id and name&#xA;book_author has book_author_id, book_id, author_name</p>&#xA;&#xA;<p>that two tables needs to be inserted values at a single request but the book_author table needs the book_id which from the book table it self with be generated.</p>&#xA;&#xA;<p>can someone help me with this? help is much appreciated.</p>&#xA;&#xA;<p>expected result is when calling post request or upon inserting.</p>&#xA;&#xA;<p>for ex. the system generated book_id <em>bk123</em>, the book_id in the table book_author should be the same too.</p>&#xA;",4412566,,,,2022-05-14 07:01:02,"Graphql - Is there a way how to insert two tables at the same time, but the second table is dependent on the return of from the first table?",<javascript><graphql><mutation><hasura>,1,0,0,2019-08-26 13:31:09
57667928,1,57668865,,2,4432,"<p>I'm currently using AppSync to query against a GSI. I've been able to successfully use this block of code in a Pipeline Resolver function, but I don't know why it is not working when I try to use it in a traditional resolver. </p>&#xA;&#xA;<p>I'm currently getting a mapping template error:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""units"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""units""&#xA;      ],&#xA;      ""data"": null,&#xA;      ""errorType"": ""MappingTemplate"",&#xA;      ""errorInfo"": null,&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 2,&#xA;          ""column"": 3,&#xA;          ""sourceName"": null&#xA;        }&#xA;      ],&#xA;      ""message"": ""Value for field '$[version]' not found.""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I tried searching in the AWS docs but adding ""version"" to the GraphQL type didn't work.</p>&#xA;&#xA;<p>I also tried this (even though I'm not using S3)&#xA;<a href=""https://stackoverflow.com/questions/49962225/appsync-s3object-retrieval"">AppSync S3Object retrieval</a>&#xA;And the docs:&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/troubleshooting-and-common-mistakes.html#mapping-template-errors"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/troubleshooting-and-common-mistakes.html#mapping-template-errors</a></p>&#xA;&#xA;<p>Here's the request mapping template:</p>&#xA;&#xA;<pre><code>#set($arg=$context.args)&#xA;&#xA;    {&#xA;    ""operation"": ""Query"",&#xA;    ""index"" : ""userPK-userSK-index"",&#xA;    ""query"": {&#xA;        ""expression"": ""userPK = :pk and begins_with(userSK, :sk)"",&#xA;        ""expressionValues"": {&#xA;            "":pk"": {""S"": ""tenant:${arg.tenantId}"" },&#xA;            "":sk"": {""S"": ""school-year:${arg.schoolYear}:grades:${arg.gradeId}:subject:${arg.subjectId}:unit:""}&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here's the response mapping template:</p>&#xA;&#xA;<pre><code>$util.toJson($ctx.result.items)&#xA;</code></pre>&#xA;&#xA;<p>Here is a snippet of the executed GraphQL:</p>&#xA;&#xA;<pre><code>query GetUnits{&#xA;  units(tenantId: ""5fc30406-346c-42e2-8083-fda33ab6000a""&#xA;schoolYear: ""2019-2020""&#xA;    gradeId: ""c737e341-a0cb-4a16-95de-f3a092049e74""&#xA;subjectId: ""d0306e25-422d-4628-8fcc-c354b67c932a"") {&#xA;  id&#xA;  indicator {&#xA;    id,&#xA;    description&#xA;  }&#xA;  competency {&#xA;    id,&#xA;    description,&#xA;    name&#xA;  }&#xA;  description,&#xA;  name&#xA;}&#xA;&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is a snippet of the GraphQL schema:</p>&#xA;&#xA;<pre><code>&#xA;type Unit {&#xA;  id: ID!&#xA;  competency: Competency&#xA;  indicator: Indicator&#xA;  name: String!&#xA;  description: String&#xA;  version: Int&#xA;}&#xA;&#xA;type Competency {&#xA;  id: ID&#xA;  # grade: Grade&#xA;  # subject: Subject&#xA;  # schoolYear: String&#xA;  name: String&#xA;  description: String&#xA;}&#xA;&#xA;type Indicator { &#xA;  id: ID!&#xA;  description: String&#xA;}&#xA;type Query {&#xA;  units(&#xA;    tenantId: String!&#xA;    schoolYear: String!&#xA;    gradeId: String!&#xA;    subjectId: String!&#xA;  ): [Unit]&#xA;&#xA;</code></pre>&#xA;&#xA;<p>Here's a data example from the DynamoDB table:&#xA;<a href=""https://i.stack.imgur.com/5iW1P.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5iW1P.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Here's a screenshot from a successful query in the Console:&#xA;<a href=""https://i.stack.imgur.com/jgJrR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jgJrR.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Note: I have created a GSI that maps the userPK and userSK as partition key and sort key respectively. I'm querying that Secondary Index. I've been able to query this successfully using the console.</p>&#xA;",1057052,,,,2019-08-27 06:34:29,Value for field not found - AppSync AWS,<amazon-web-services><amazon-dynamodb><graphql><aws-appsync>,1,0,0,2019-08-27 05:02:34
57685054,1,57685073,,-2,41,"<p>Try to add a handler to my Node, React button component, to insert a row in DB, but I got an error, though I am just copying code from an example tutorial. What is wrong?</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/tVuS7.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tVuS7.jpg"" alt=""enter image description here""></a></p>&#xA;",239219,,,,2019-08-28 04:27:45,Why 'handlePost' is not defined?,<reactjs><apollo><react-apollo><relayjs><relay>,1,0,0,2019-08-28 04:24:47
57709018,1,57812102,,1,715,"<p>I have the following query:</p>&#xA;&#xA;<pre><code>query kitchen {&#xA;  getItemKitchen(id:""fakeIdHere"") {&#xA;    id&#xA;    kitchenName&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>which returns: </p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getItemKitchen"": null&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And have defined the query in the schema as such:</p>&#xA;&#xA;<pre><code>type Query @aws_cognito_user_pools&#xA;@aws_api_key {&#xA;    getItemKitchen(id: ID!): ItemKitchen&#xA;</code></pre>&#xA;&#xA;<p>The resolver req template is:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"":""2017-02-28"",&#xA;    ""operation"":""GET"",&#xA;    ""path"":""/myType/myIndex/_search"",&#xA;    ""params"": {&#xA;        ""body"": {&#xA;            ""query"": {&#xA;                ""match"": {&#xA;                    ""id.keyword"": ""${context.arguments.id}""&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And my response template:</p>&#xA;&#xA;<pre><code>$util.toJson($context.result.get(""_source""))&#xA;</code></pre>&#xA;&#xA;<p>I expect the following response:</p>&#xA;&#xA;<pre><code>{&#xA;""result"": {&#xA;        ""_source"": {&#xA;            ""id"": ""HelloWorldTestId"",&#xA;            ""createdAt"": ""Hello, world!""&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I also have a mutation which works fine, enabling me to create items on dynamodb which is then sent to elasticsearch for querying by a lambda function.</p>&#xA;&#xA;<p>I've checked the item exists on elasticsearch.</p>&#xA;&#xA;<p>Both my Elasticsearch and DynamoDb instances sit in a VPC. Before adding the VPC I was able to query the elasticsearch instance and get a response.&#xA;According to the docs, this kind of response means there is no resolver attached, yet the mutations seem to work just fine. I've tried removing and re-attaching the resolvers, but nothing happens.</p>&#xA;&#xA;<p>Any help would be much appreciated as this is becoming extremely frustrating.</p>&#xA;",3078075,,3078075,2019-08-29 12:45:29,2019-09-05 19:46:28,AWS appync query resolver returns null,<elasticsearch><graphql><amazon-vpc><aws-appsync>,1,6,0,2019-08-29 11:18:50
57720083,1,57720291,,4,3395,"<p>I'm currently trying to create a dynamic query using AppSync and Apache Velocity Template Language (VTL).</p>&#xA;&#xA;<p>I want to evaluate series of begins_with with ""OR""</p>&#xA;&#xA;<p>Such as:</p>&#xA;&#xA;<pre><code>{&#xA;    ""operation"": ""Query"",&#xA;    ""query"": {&#xA;        ""expression"": ""pk = :pk and (begins_with(sk,:sk) or begins_with(sk, :sk1)"",&#xA;        ""expressionValues"": {&#xA;      "":pk"": { ""S"": ""tenant:${context.args.tenantId}"",&#xA;      "":sk"": {""S"": ""my-sort-key-${context.args.evidenceId[0]}""},&#xA;      "":sk1"": {""S"": ""my-sort-key-${context.args.evidenceId[1]}""}&#xA;&#xA;   }&#xA;&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>But that isn't working. I've also tried using <code>|</code> instead of <code>or</code> but it hasn't worked either. I get:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Invalid KeyConditionExpression: Syntax error; token: ""|"", near: "") | begins_with"" (Service: AmazonDynamoDBv2;</p>&#xA;</blockquote>&#xA;&#xA;<p>How can I achieve this using VTL?</p>&#xA;",1057052,,,,2019-08-31 19:50:40,Query DynamoDB with multiple begins_with clause in AppSync,<amazon-dynamodb><graphql><velocity><aws-appsync><apache-velocity>,2,0,0,2019-08-30 03:20:09
57726794,1,,,1,449,"<p>How can I perform the following SQL Insert Query as a GraphQL Mutation Insert?</p>&#xA;&#xA;<pre><code>INSERT INTO User (id, name, user_type_id)&#xA;VALUES&#xA;(1, ""Name"", (SELECT id FROM UserType WHERE user_type=""Guest""))&#xA;</code></pre>&#xA;&#xA;<p>Provided that there is a <code>One to Many</code> relation from <code>UserType</code> table (id column) to <code>User</code> table (user_type_id column).</p>&#xA;",6639827,,,,2019-08-30 13:45:57,GraphQL Mutation Insert using Inner Query,<graphql><graphql-mutation>,1,2,0,2019-08-30 12:29:33
57728484,2,,56513679,2,,"<p>Here what I did to solve that problem:</p>&#xA;&#xA;<p>Override the GraphQl Schema in <code>api/activity/config/schema.graphql</code></p>&#xA;&#xA;<pre><code>module.exports = {&#xA;    definition: ``,&#xA;    query: `&#xA;        notifications(sort: String, limit: Int, start: Int, where: JSON): [Activity]&#xA;    `,&#xA;    type: {},&#xA;    resolver: {&#xA;        Query: {&#xA;            notifications: {&#xA;                description: 'Return the auth user notifications',&#xA;                policies: ['plugins.users-permissions.permissions'],&#xA;                resolver: 'Activity.findNotifications'&#xA;            },&#xA;        },&#xA;    },&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Create a new function resolver in <code>api/activity/controllers/Activity.js</code></p>&#xA;&#xA;<pre><code>module.exports = {&#xA;&#xA;    findNotifications(ctx) {&#xA;&#xA;        ctx.query = { ...ctx.query, owner: ctx.state.user.id }&#xA;&#xA;        if (ctx.query._q) {&#xA;            return strapi.services.activity.search(ctx.query);&#xA;        }&#xA;        return strapi.services.activity.find(ctx.query);&#xA;    },&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In the controller you got the query and add the owner id filter.&#xA;Hope it helps.</p>&#xA;",1257567,,,,2019-08-30 14:18:05,"",,0,0,0,2019-08-30 14:18:05
57740246,2,,41560208,1,,"<p>you do not define fragment in the schema. you define on the graphql interface when you do query. this is about do not repeat yourself. </p>&#xA;&#xA;<p>We can make as many as different queries inside a <code>query{ }</code> </p>&#xA;&#xA;<pre><code>query {&#xA;   company(id:""1""){&#xA;    name&#xA;    description&#xA;  }&#xA;  company(id:""4""){&#xA;    name&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>if you do so you will get an ERROR: fields “company” conflicts because they have different arguments. To get rid of this, we can name the result of the query when it comes back by writing out some arbitrary key in front. the reason why we get this error is response object will have 2 nested objects and they both will have ""company"" key value but inside javascript we cannot have duplicate keys on an object.</p>&#xA;&#xA;<pre><code>{&#xA;  apple: company(id:""1""){&#xA;    name&#xA;    description&#xA;  }&#xA;  google: company(id:""4""){&#xA;    name&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>now we tackled this. imagine we wanna do 100 queries in a single query object with too many fields. it would be a big headache. so we define fragment</p>&#xA;&#xA;<pre><code>fragment companyDetails on Company{  &#xA;  name&#xA;  description&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>note that we have to specify <code>on Company</code>. It helps graphql for type checking. graphql checks if those fields are valid under company. finally this is how we use it </p>&#xA;&#xA;<pre><code>{&#xA;  apple: company(id:""1""){&#xA;    ...companyDetails&#xA;  }&#xA;  google: company(id:""4""){&#xA;    ...companyDetails&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",10262805,,,,2019-08-31 17:30:44,"",,0,0,0,2019-08-31 17:30:44
57741390,1,,,2,3545,"<p>I'm trying to following this example, <a href=""https://www.apollographql.com/docs/apollo-server/deployment/lambda/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/deployment/lambda/</a>, to create a serverless GraphQL server which returns 'Hello world'.</p>&#xA;&#xA;<p>The root directory contains essentially just two files, <code>graphql.js</code> and <code>serverless.yml</code>:</p>&#xA;&#xA;<pre><code>&gt; tree . -I node_modules&#xA;.&#xA;├── graphql.js&#xA;├── package-lock.json&#xA;├── package.json&#xA;└── serverless.yml&#xA;</code></pre>&#xA;&#xA;<p>where, as in the example, <code>graphql.js</code> reads</p>&#xA;&#xA;<pre><code>const { ApolloServer, gql } = require('apollo-server-lambda');&#xA;&#xA;const typeDefs = gql`&#xA;  type Query {&#xA;    hello: String&#xA;  }&#xA;`;&#xA;&#xA;const resolvers = {&#xA;  Query: {&#xA;    hello: () =&gt; 'Hello world!',&#xA;  },&#xA;}&#xA;&#xA;const server = new ApolloServer({ typeDefs, resolvers });&#xA;&#xA;exports.graphqlHandler = server.createHandler();&#xA;</code></pre>&#xA;&#xA;<p>and <code>serverless.yml</code> reads</p>&#xA;&#xA;<pre><code>service: apollo-lambda&#xA;&#xA;provider:&#xA;  name: aws&#xA;  runtime: nodejs8.10&#xA;functions:&#xA;  graphql:&#xA;    handler: graphql.graphqlHandler&#xA;    events:&#xA;      - http:&#xA;          path: graphql&#xA;          method: post&#xA;          cors: true&#xA;      - http:&#xA;          path: graphql&#xA;          method: get&#xA;          cors: true&#xA;</code></pre>&#xA;&#xA;<p>This seems to deploy successfully:</p>&#xA;&#xA;<pre><code>&gt; serverless deploy&#xA;Serverless: Packaging service...&#xA;Serverless: Excluding development dependencies...&#xA;Serverless: Creating Stack...&#xA;Serverless: Checking Stack create progress...&#xA;.....&#xA;Serverless: Stack create finished...&#xA;Serverless: Uploading CloudFormation file to S3...&#xA;Serverless: Uploading artifacts...&#xA;Serverless: Uploading service apollo-lambda.zip file to S3 (4.55 MB)...&#xA;Serverless: Validating template...&#xA;Serverless: Updating Stack...&#xA;Serverless: Checking Stack update progress...&#xA;....................................&#xA;Serverless: Stack update finished...&#xA;Service Information&#xA;service: apollo-lambda&#xA;stage: dev&#xA;region: us-east-1&#xA;stack: apollo-lambda-dev&#xA;resources: 12&#xA;api keys:&#xA;  None&#xA;endpoints:&#xA;  POST - https://e9g6evoks0.execute-api.us-east-1.amazonaws.com/dev/graphql&#xA;  GET - https://e9g6evoks0.execute-api.us-east-1.amazonaws.com/dev/graphql&#xA;functions:&#xA;  graphql: apollo-lambda-dev-graphql&#xA;layers:&#xA;  None&#xA;Serverless: Run the ""serverless"" command to setup monitoring, troubleshooting and testing.&#xA;</code></pre>&#xA;&#xA;<p>However, if I go to the playground and query 'hello', I get a 'forbidden' message:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Vpl8y.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Vpl8y.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>That is, my</p>&#xA;&#xA;<pre><code>query {&#xA;  hello&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>rather than resulting in the response documented at <a href=""https://www.apollographql.com/docs/apollo-server/essentials/server/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/essentials/server/</a>, results in a </p>&#xA;&#xA;<pre><code>{&#xA;  ""error"": {&#xA;    ""message"": ""Forbidden""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any idea what I'm doing wrong here?</p>&#xA;",995862,,,,2021-04-13 02:46:52,"Error with ""message"": ""Forbidden"" trying to query an Apollo Serverless Lambda server",<javascript><node.js><graphql><apollo><serverless>,2,0,0,2019-08-31 20:27:19
57743227,2,,57446167,4,,"<h2>My current solution:</h2>&#xA;&#xA;<p>GraphQL doesn't natively support many-to-many relationships yet. I simplified my schema (not ideal but making it work for the time being) to ditch the M2M relationships and added a keyField to my connections. Example:</p>&#xA;&#xA;<pre><code>type Song @model {&#xA;  id: ID!&#xA;  title: String!&#xA;  artist: String!&#xA;  artistObject: User! @connection(name: ""ArtistSong"", keyField: ""userId"")&#xA;  tips: [Tip]! @connection(name: ""SongTip"", sortField: ""createdAt"")&#xA;  totalAmountReceived: Float!&#xA;  inRotation: Boolean!&#xA;}&#xA;&#xA;type User @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  walletAddress: String!&#xA;  totalAmountDonated: Float!&#xA;  totalAmountReceived: Float!&#xA;  songs: [Song]! @connection(name: ""ArtistSong"", keyField: ""userId"")&#xA;  tipsSent: [Tip]! @connection(name: ""FromUserTip"")&#xA;  tipsReceived: [Tip]! @connection(name: ""ToUserTip"")&#xA;  email: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now, a Song must have only one artist (User). I haven't implemented the connection for Tips yet, but it is working for Users &amp; Songs.</p>&#xA;&#xA;<p>I created Songs linked to their respective User objects by using a field in my mutation called <code>songArtistObjectId</code> (referring to the <code>artistObject</code> field on my Song model). </p>&#xA;&#xA;<p>Here is the mutation I used (assuming the User/artist has already been created and you have their ID):</p>&#xA;&#xA;<pre><code>mutation CreateSong {&#xA;  createSong(input: { &#xA;    title: ""Ghost"", &#xA;    artist: ""quickly, quickly"",&#xA;    songArtistObjectId: ""e412ca8a-367c-4cda-bc6f-91aa2d85c180"",&#xA;    totalAmountReceived: 0,&#xA;    inRotation: true&#xA;  }) {&#xA;    id&#xA;    title&#xA;    artist&#xA;    artistObject {&#xA;      id&#xA;      name&#xA;      walletAddress&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If you're also using AWS Amplify/AppSync, after updating your schema locally be sure to push your changes to the cloud via the Amplify CLI:</p>&#xA;&#xA;<pre><code>amplify api gql-compile&#xA;amplify push&#xA;</code></pre>&#xA;&#xA;<p>Hope this helps! Let me know if you have any other questions  (:</p>&#xA;",5942450,,,,2019-09-01 04:38:20,"",,0,1,0,2019-09-01 04:38:20
57762418,1,,,1,32,"<p>This question is about getting the grapqhl request body in server; my use-case is: </p>&#xA;&#xA;<p>I am having a class with the following fields and a corresponding table in PostgreSQL:</p>&#xA;&#xA;<p>1)ID</p>&#xA;&#xA;<p>2)Name</p>&#xA;&#xA;<p>3)age</p>&#xA;&#xA;<p>4)Department</p>&#xA;&#xA;<p>5)City</p>&#xA;&#xA;<p>6)Gender&#xA;.&#xA;.&#xA;.</p>&#xA;&#xA;<p>I am using graphql with apollo-server in nodejs.</p>&#xA;&#xA;<p>My graphql sample request : </p>&#xA;&#xA;<pre><code>Query{&#xA;   Persons{&#xA;     id&#xA;     name&#xA;   }&#xA;}&#xA;&#xA;Query{&#xA;   Person(id:123){&#xA;     id&#xA;     name&#xA;     age&#xA;     gender&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The problem is that for every graphql request I am fetching all columns from Postgresql table :</p>&#xA;&#xA;<blockquote>&#xA;  <p>select * from Person;</p>&#xA;  &#xA;  <p>select * from Person where id=123;</p>&#xA;</blockquote>&#xA;&#xA;<p>If I know what columns are there in the graphql request body, I will fetch those columns from table, which would be more efficient, Is there any way for achieving this ?</p>&#xA;",8137978,,,,2019-09-02 20:31:30,how to get the Graphql request body in apollo-server,<graphql><apollo-server>,0,1,0,2019-09-02 20:31:30
57764007,1,,,0,70,"<p>I am trying to group users of my application together under a 'Company'.</p>&#xA;&#xA;<p>I have done this in other applications by giving the user's an account attribute/property called ""company"", which equals a string.</p>&#xA;&#xA;<p>Then all data associated with that company is available to that user.</p>&#xA;&#xA;<p>How can I do this with the AWS Amplify framework?</p>&#xA;",4148455,,,,2019-09-03 22:47:16,How to group users together by aws-cognito attributes?,<graphql><amazon-cognito><aws-amplify>,1,0,0,2019-09-03 01:27:17
57772461,1,,,0,199,"<p>What I have here is my Account table and my settings table. Basically, there are many settings to one account and I plan on being able to input those settings with GraphQL using relay. Unfortunately, it throws the following error during yarn </p>&#xA;&#xA;<pre><code>relay:&#xA;ERROR:&#xA;GraphQLParser: Unknown field `maxAllowedRecords` on type `AccountObject`. Source: document `CreateAccountMutation` file: `mutations/CreateAccountMutation.js`.&#xA;</code></pre>&#xA;&#xA;<p>maxAllowedRecords is not a field in Account object but rather a setting in the settings table that is related to a particular account object. I have the SQLAlchemy below:</p>&#xA;&#xA;<pre class=""lang-py prettyprint-override""><code>class Account(Base):&#xA;    __tablename__ = 'accounts'&#xA;&#xA;    id = Column(Integer, primary_key=True)&#xA;    raw_id = Column('id', Integer, primary_key=True)&#xA;    name = Column(String(255), nullable=False)&#xA;    num_licenses = Column(Integer, nullable=False)&#xA;    import_records_limit = Column(Integer, nullable=False)&#xA;    max_failed_logins = Column(Integer, nullable=False)&#xA;    status = Column(Integer, nullable=False)&#xA;    employee_lists = relationship('EmployeeList')&#xA;    users = relationship('User')&#xA;    policies = relationship(""Policy"", secondary=accounts_policies, back_populates=""accounts"")&#xA;    settings = relationship('AccountSetting')&#xA;&#xA;class AccountSetting(Base):&#xA;    __tablename__ = 'account_settings'&#xA;&#xA;    id = Column(Integer, primary_key=True)&#xA;    account = relationship('Account')&#xA;    account_id = Column(Integer, ForeignKey('accounts.id'))&#xA;    name = Column(String(30))&#xA;    value = Column(String(1000))&#xA;</code></pre>&#xA;&#xA;<p>Here is the account mutation method </p>&#xA;&#xA;<pre class=""lang-py prettyprint-override""><code>class CreateAccountMutation(graphene.Mutation):&#xA;    class Arguments:&#xA;        name = graphene.String(required=True)&#xA;        num_licenses = graphene.Int(required=True)&#xA;        import_records_limit = graphene.Int(required=True)&#xA;        status = graphene.Int(required=True)&#xA;        max_failed_logins = graphene.Int(required=True)&#xA;        account_type = graphene.String(required=False)&#xA;        max_allowed_records = graphene.String(required=False)&#xA;        password_expiry = graphene.String(required=False)&#xA;        account_type = graphene.String(required=False)&#xA;        reinstated_notifications = graphene.String(required=False)&#xA;        saml_only = graphene.String(required=False)&#xA;        access_ip_range = graphene.String(required=False)&#xA;&#xA;    account = graphene.Field(lambda: AccountObject)&#xA;&#xA;    def mutate(self, info, **kwargs):&#xA;        settings = []&#xA;        for name, value in kwargs.items():&#xA;            if name not in baseproperties:&#xA;                settings.append(AccountSetting(name=name,value=value))&#xA;&#xA;        account = Account(name=kwargs.get('name'), num_licenses=kwargs.get('num_licenses'),&#xA;                import_records_limit=kwargs.get('import_records_limit'), status=kwargs.get('status'),&#xA;                max_failed_logins=kwargs.get('max_failed_logins'), settings=settings, date_created=datetime.utcnow())&#xA;        db_session.add(account)&#xA;        db_session.commit()&#xA;        return CreateAccountMutation(account=account)&#xA;</code></pre>&#xA;&#xA;<p>As you can see here, the additional properties passed that are not in the base properties will be placed in the settings as AccountSetting objects. This works with graphiQL:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  createAccount(name: ""Red Cross"", numLicenses: 76, importRecordsLimit: 50000, maxFailedLogins: 20, status: 1, maxAllowedRecords: ""50"", passwordExpiry: ""90"", accountType: ""fullservice"", reinstatedNotifications: ""1"", samlOnly: ""0"", accessIpRange: ""Test Rangate"") {&#xA;    account {&#xA;      name&#xA;      settings {&#xA;        name&#xA;        value&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But this mutation file doesn't compile:</p>&#xA;&#xA;<pre><code>const mutation =  graphql`&#xA;    mutation CreateAccountMutation(&#xA;        $name: String!, $numLicenses: Int!, $importRecordsLimit: Int!, $status: Int! &#xA;        $maxFailedLogins: Int!, $maxAllowedRecords: String!, $passwordExpiry: String!,&#xA;        $accountType: String!, $reinstatedNotifications: String!, $samlOnly: String!, $accessIpRange: String!&#xA;&#xA;        ) {&#xA;        createAccount(  name: $name, numLicenses: $numLicenses, importRecordsLimit: $importRecordsLimit, status: $status,&#xA;                        maxFailedLogins: $maxFailedLogins, maxAllowedRecords: $maxAllowedRecords, passwordExpiry: $passwordExpiry,&#xA;                        accountType: $accountType, reinstatedNotifications: $reinstatedNotifications, samlOnly: $samlOnly, accessIpRange: $accessIpRange&#xA;                    ) {&#xA;            account {&#xA;                name&#xA;                numLicenses&#xA;                importRecordsLimit&#xA;                status&#xA;                maxFailedLogins&#xA;                maxAllowedRecords&#xA;                passwordExpiry&#xA;                accountType&#xA;                reinstatedNotifications&#xA;                samlOnly&#xA;                accessIpRange&#xA;            }&#xA;        }&#xA;    }&#xA;`;&#xA;&#xA;export default (&#xA;    name,num_licenses,import_records_limit,status,&#xA;    maxFailedLogins,maxAllowedRecords,passwordExpiry,&#xA;    accountType,reinstatedNotifications,samlOnly,&#xA;    accessIpRange,  callback) =&gt; {&#xA;&#xA;    const variables = {&#xA;        name,&#xA;        num_licenses,&#xA;        import_records_limit,&#xA;        status,&#xA;        maxFailedLogins,&#xA;        maxAllowedRecords,&#xA;        passwordExpiry,&#xA;        accountType,&#xA;        reinstatedNotifications,&#xA;        samlOnly,&#xA;        accessIpRange,&#xA;    }&#xA;&#xA;    commitMutation(&#xA;        environment,&#xA;        {&#xA;            mutation,&#xA;            variables,&#xA;            onCompleted: () =&gt; {&#xA;                callback()&#xA;            },&#xA;            onError: err =&gt; console.error(err),&#xA;        },&#xA;    )&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Am I doing something wrong here? Is there another way? A 'correct' way to approach this problem?</p>&#xA;",3011515,,,,2019-09-03 13:26:55,Creating nested mutation in Relay throws unknown field,<javascript><graphql><relayjs><relay><graphene-python>,1,0,0,2019-09-03 13:10:10
57784599,1,,,0,252,"<p>I'm using AWS AppSync, Apollo and React Native. One of the great advantages of using these together is that I get good offline behaviour. In my app, I can make changes while offline and they all get queued up and executed when I get back on line.</p>&#xA;&#xA;<p>However, I'd like to be able to show the user if there are mutations which haven't been sent to the server yet. Just some little icon or something which goes away when everything is up-to-date.</p>&#xA;&#xA;<p>Can anyone point me in the right direction? I've looked at the offline configuration for <code>AWSAppSyncClient</code>, and can see there's a <code>callback</code> I can hook into, but it doesn't give me enough information as far as I can tell.</p>&#xA;&#xA;<p>Thanks!</p>&#xA;",326745,,,,2019-09-04 17:31:14,AWS AppSync how can I tell if there are outstanding mutations when I'm offline?,<graphql><offline><react-apollo><apollo-client><aws-appsync>,1,0,0,2019-09-04 08:37:24
57793283,2,,57784599,1,,"<p>Have you looked into using the amplify library - <a href=""https://aws-amplify.github.io/docs/android/start"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/android/start</a>?</p>&#xA;&#xA;<p>When you make a mutation while the device is offline - it gets added to a local queue (persisted by sqlite). It is from this queue that they are read and sent to server serially once back online.</p>&#xA;&#xA;<p>Now while offline - your appcode would be able to query the local datastore to determine the mutations still 'offline'</p>&#xA;&#xA;<p>Read more here:</p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://aws-amplify.github.io/docs/android/api#client-architecture"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/android/api#client-architecture</a></li>&#xA;<li><a href=""https://aws-amplify.github.io/docs/android/api#offline-mutations"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/android/api#offline-mutations</a></li>&#xA;</ul>&#xA;",10886417,,,,2019-09-04 17:31:14,"",,0,0,0,2019-09-04 17:31:14
57794338,1,,,2,1401,"<p>I'm trying to setup an application using Amplify + AppSync/GraphQL without any prior knowledge on it, but now I'm facing so many issues that I'm questioning if it was a good decision.</p>&#xA;&#xA;<p>I have added an AppSync API through Amplify</p>&#xA;&#xA;<p>The queries are working fine for now, however, I'm having a hard time to make the mutations work, and worse, they don't give me any error.</p>&#xA;&#xA;<p>The important parts of the schema of my database is as follow:</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;    updateVideoOnDemand(input: UpdateVideoOnDemandInput!): VideoOnDemand&#xA;}&#xA;&#xA;type ScriptRow {&#xA;    loop: Int&#xA;    timeStart: Int&#xA;    character: String&#xA;    text: String&#xA;    guessed: Boolean&#xA;}&#xA;&#xA;input ScriptRowInput {&#xA;    loop: Int&#xA;    timeStart: Int&#xA;    character: String&#xA;    text: String&#xA;    guessed: Boolean&#xA;}&#xA;&#xA;input UpdateVideoOnDemandInput {&#xA;    guid: String!&#xA;    thumbNailUrl: [String]&#xA;    startTime: String&#xA;    workflowStatus: String&#xA;    srcVideo: String&#xA;    hlsUrl: String&#xA;    dashUrl: String&#xA;    scriptUrl: String&#xA;    mp4Urls: [String]&#xA;    transcriptUri: String&#xA;    isLoadingLoops: Boolean&#xA;    documentKey: String&#xA;    initialOffset: Int&#xA;    videoOffset: Int&#xA;    scriptRows: [ScriptRowInput!]&#xA;}&#xA;&#xA;type VideoOnDemand {&#xA;    guid: String!&#xA;    thumbNailUrl: [String]&#xA;    startTime: String&#xA;    workflowStatus: String&#xA;    srcVideo: String&#xA;    hlsUrl: String&#xA;    dashUrl: String&#xA;    scriptUrl: String&#xA;    mp4Urls: [String]&#xA;    transcriptUri: String&#xA;    isLoadingLoops: Boolean&#xA;    documentKey: String&#xA;    initialOffset: Int&#xA;    videoOffset: Int&#xA;    scriptRows: [ScriptRow]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then, I have generated the local code using Amplify codegen tool&#xA;Which looks good</p>&#xA;&#xA;<pre><code>export const updateVideoOnDemand = `mutation UpdateVideoOnDemand($input: UpdateVideoOnDemandInput!) {&#xA;  updateVideoOnDemand(input: $input) {&#xA;    guid&#xA;    thumbNailUrl&#xA;    startTime&#xA;    workflowStatus&#xA;    srcVideo&#xA;    hlsUrl&#xA;    dashUrl&#xA;    scriptUrl&#xA;    mp4Urls&#xA;    transcriptUri&#xA;    isLoadingLoops&#xA;    documentKey&#xA;    initialOffset&#xA;    videoOffset&#xA;    scriptRows {&#xA;      loop&#xA;      timeStart&#xA;      character&#xA;      text&#xA;      guessed&#xA;    }&#xA;  }&#xA;}&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>First I tried using the simple AWS API.GraphQL</p>&#xA;&#xA;<pre><code>        API.graphql(graphqlOperation(mutations.updateVideoOnDemand, {&#xA;          input: {&#xA;            guid: video.guid,&#xA;            initialOffset: values.initial_offset,&#xA;            videoOffset: values.video_offset,&#xA;            workflowStatus: 'Test',&#xA;            isLoadingLoops: true,&#xA;            scriptRows: rows,&#xA;          }&#xA;        })).then(&#xA;          updatedVideo =&gt; {&#xA;            message.success('Saved');&#xA;          }&#xA;        ).catch(err =&gt; message.error('Error saving data: ' + err))&#xA;&#xA;</code></pre>&#xA;&#xA;<p>The mapping resolver for the mutation:</p>&#xA;&#xA;<pre><code>{&#xA;  ""version"": ""2017-02-28"",&#xA;  ""operation"": ""UpdateItem"",&#xA;  ""key"": {&#xA;    ""guid"": $util.dynamodb.toDynamoDBJson($ctx.args.input.guid),&#xA;  },&#xA;&#xA;  ## Set up some space to keep track of things we're updating **&#xA;  #set( $expNames  = {} )&#xA;  #set( $expValues = {} )&#xA;  #set( $expSet = {} )&#xA;  #set( $expAdd = {} )&#xA;  #set( $expRemove = [] )&#xA;&#xA;  ## Iterate through each argument, skipping keys **&#xA;  #foreach( $entry in $util.map.copyAndRemoveAllKeys($ctx.args.input, [""guid""]).entrySet() )&#xA;    #if( $util.isNull($entry.value) )&#xA;      ## If the argument is set to ""null"", then remove that attribute from the item in DynamoDB **&#xA;&#xA;      #set( $discard = ${expRemove.add(""#${entry.key}"")} )&#xA;      $!{expNames.put(""#${entry.key}"", ""${entry.key}"")}&#xA;    #else&#xA;      ## Otherwise set (or update) the attribute on the item in DynamoDB **&#xA;&#xA;      $!{expSet.put(""#${entry.key}"", "":${entry.key}"")}&#xA;      $!{expNames.put(""#${entry.key}"", ""${entry.key}"")}&#xA;      $!{expValues.put("":${entry.key}"", $util.dynamodb.toDynamoDB($entry.value))}&#xA;    #end&#xA;  #end&#xA;&#xA;  ## Start building the update expression, starting with attributes we're going to SET **&#xA;  #set( $expression = """" )&#xA;  #if( !${expSet.isEmpty()} )&#xA;    #set( $expression = ""SET"" )&#xA;    #foreach( $entry in $expSet.entrySet() )&#xA;      #set( $expression = ""${expression} ${entry.key} = ${entry.value}"" )&#xA;      #if ( $foreach.hasNext )&#xA;        #set( $expression = ""${expression},"" )&#xA;      #end&#xA;    #end&#xA;  #end&#xA;&#xA;  ## Continue building the update expression, adding attributes we're going to ADD **&#xA;  #if( !${expAdd.isEmpty()} )&#xA;    #set( $expression = ""${expression} ADD"" )&#xA;    #foreach( $entry in $expAdd.entrySet() )&#xA;      #set( $expression = ""${expression} ${entry.key} ${entry.value}"" )&#xA;      #if ( $foreach.hasNext )&#xA;        #set( $expression = ""${expression},"" )&#xA;      #end&#xA;    #end&#xA;  #end&#xA;&#xA;  ## Continue building the update expression, adding attributes we're going to REMOVE **&#xA;  #if( !${expRemove.isEmpty()} )&#xA;    #set( $expression = ""${expression} REMOVE"" )&#xA;&#xA;    #foreach( $entry in $expRemove )&#xA;      #set( $expression = ""${expression} ${entry}"" )&#xA;      #if ( $foreach.hasNext )&#xA;        #set( $expression = ""${expression},"" )&#xA;      #end&#xA;    #end&#xA;  #end&#xA;&#xA;  ## Finally, write the update expression into the document, along with any expressionNames and expressionValues **&#xA;  ""update"": {&#xA;    ""expression"": ""${expression}"",&#xA;    #if( !${expNames.isEmpty()} )&#xA;      ""expressionNames"": $utils.toJson($expNames),&#xA;    #end&#xA;    #if( !${expValues.isEmpty()} )&#xA;      ""expressionValues"": $utils.toJson($expValues),&#xA;    #end&#xA;  },&#xA;&#xA;  ""condition"": {&#xA;    ""expression"": ""attribute_exists(#guid)"",&#xA;    ""expressionNames"": {&#xA;      ""#guid"": ""guid"",&#xA;    },&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The response mapping template:</p>&#xA;&#xA;<pre><code>$util.toJson($context.result)&#xA;</code></pre>&#xA;&#xA;<p>The command seems to run successful, I get the updated video as result, and I can see the updated data on it... however some fields are not being updated on the database side... in this case the fields <code>isLoadingLoops</code> and <code>scriptRows</code> are not updated... and if I reload the page I get the old results again, if I check directly on DynamoDB instance I also see that the 3 first items are updated, but not the rest.</p>&#xA;&#xA;<p>I've tried migrating the code to use AWSAppSync Client/Apollo.... still the error persists.</p>&#xA;&#xA;<p>Any idea what could be causing it?</p>&#xA;&#xA;<h3><em>UPDATE</em></h3>&#xA;&#xA;<p>One thing that I'm not sure if they might be an indicator of something wrong:</p>&#xA;&#xA;<p>When I go to AppSync console -> Queries, and then I click on the ""Play"" icon I see only 2 options to select from: <em>createVideoOnDemand</em> and <em>listVideoOnDemand</em>, I don't see the update there, it might be indicating an issue?</p>&#xA;",1742659,,1742659,2019-09-10 12:41:00,2021-03-26 12:34:30,Amplify + AppSync not mutating object,<graphql><apollo><react-apollo><aws-amplify><aws-appsync>,1,15,0,2019-09-04 18:55:15
57811144,2,,57811143,1,,"<p>You need to enable the <strong>same-origin policy</strong>. See the <a href=""https://github.com/prisma/graphql-playground"" rel=""nofollow noreferrer"">GraphQL Playground docs</a>.</p>&#xA;&#xA;<pre><code>const server = new ApolloServer({&#xA;  schema: MySchema,&#xA;  context: ({ req }) =&gt; ({&#xA;    connection: req.context.db,&#xA;    auth: req.context.auth,&#xA;  }),&#xA;  playground: {&#xA;    settings: {&#xA;      // Needed for auth&#xA;      // Docs: https://github.com/prisma/graphql-playground&#xA;      ['request.credentials']: 'same-origin',&#xA;    },&#xA;  },&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>It's a bit confusing the proper docs live on the page of the company that made the Playground (Prisma). The <a href=""https://www.apollographql.com/docs/apollo-server/"" rel=""nofollow noreferrer"">docs on the Apollo website</a> don't mention this.</p>&#xA;",90998,,,,2019-09-05 18:26:52,"",,0,0,0,2019-09-05 18:26:52
57812102,2,,57709018,2,,"<p>Currently, AppSync does not support Elasticsearch instances that are behind a VPC. &#xA;See the first line of the documentation here:</p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-elasticsearch-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-elasticsearch-resolvers.html</a></li>&#xA;</ul>&#xA;&#xA;<p>This is why the query was working for you prior to adding the VPC.</p>&#xA;",10886417,,,,2019-09-05 19:46:28,"",,0,0,0,2019-09-05 19:46:28
57817794,2,,57646786,0,,"<p>Assuming you're pointing to the right file path for <code>ac.graphql</code>, try the following:</p>&#xA;&#xA;<p><code>type Query {&#xA;    otp: Otp&#xA;}</code> </p>&#xA;&#xA;<p>which uses lower-case for attribute names, and upper-case for the attribute <em>type</em>.</p>&#xA;&#xA;<p>You can't use upper-case <code>Otp</code> as attribute name because it would conflict with the imported <code>Otp</code> <em>type</em>.</p>&#xA;&#xA;<p>(For other types you may use upper-case attribute names, but generally it's good practice to uppercase your types/classes and lowercase all instantiations.)</p>&#xA;",6295318,,,,2019-09-06 07:47:05,"",,0,0,0,2019-09-06 07:47:05
57820410,1,,,10,6972,"<p>I am new to graphql hasura and i'm having this issue how to update multiple rows in one table, because usually i update only one row per table.</p>&#xA;&#xA;<p>i want to update multiple rows in a dynamic way</p>&#xA;&#xA;<p>I have for example existing rows data.</p>&#xA;&#xA;<pre><code>id: 1, name: 'rosie', age: 12&#xA;id: 2, name: 'jane', age: 20&#xA;id: 3, name: 'rafaela', age: 25&#xA;</code></pre>&#xA;&#xA;<p>and I want to edit the 2 rows only.</p>&#xA;&#xA;<pre><code>id: 1, name: 'rosie update', age: 12&#xA;id: 2, name: 'jane update', age: 21&#xA;</code></pre>&#xA;&#xA;<p>i have an array of users.&#xA;it can be 1 or more than 1 users that will be updated.</p>&#xA;&#xA;<pre><code>const users = [&#xA;{id: 1, name: 'rosie update', age: 12}.&#xA;{id: 2, name: 'jane update', age: 21}&#xA;];&#xA;&#xA;mutation update_article {&#xA;  update_user(&#xA;    where: {id: {_eq: users[0].id}},&#xA;    _set: {&#xA;      name: users[0].name,&#xA;      age: users[0].age&#xA;   }&#xA;  ) {&#xA;    affected_rows&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>expected output should be:</p>&#xA;&#xA;<p>want to have mutation code in dynamic way not static.</p>&#xA;&#xA;<pre><code>id: 1, name: 'rosie update', age: 12&#xA;id: 2, name: 'jane update', age: 21&#xA;id: 3, name: 'rafaela', age: 25&#xA;</code></pre>&#xA;",8192321,,,,2022-09-13 14:59:43,How to update dynamically of multiple rows in one table using Graphql,<graphql><hasura>,2,1,0,2019-09-06 10:35:46
57862314,2,,57862232,1,,"<p>Are you trying to update the database directly/bypassing AppSync?</p>&#xA;&#xA;<p>If yes, the lambda solution you mentioned maybe useful.&#xA;If no, by setting up subscriptions and mutations to the database via AppSync is sufficient.</p>&#xA;",5875100,,,,2019-09-09 23:33:43,"",,0,8,0,2019-09-09 23:33:43
57877032,2,,45100167,12,,"<p>You can't have access to ""this"" object like that:</p>&#xA;&#xA;<pre><code>variables: {&#xA;  id: this.$route.params.id // Error here! &#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>But you can like this:</strong></p>&#xA;&#xA;<pre><code>variables () {   &#xA;    return {&#xA;         id: this.$route.params.id // Works here!  &#xA;    }&#xA;}&#xA;</code></pre>&#xA;",8927727,,,,2019-09-10 19:21:23,"",,0,0,0,2019-09-10 19:21:23
57892400,1,57893629,,0,43,"<p>I have added a resources table to my schema, connecting to a Plants table:</p>&#xA;&#xA;<pre><code>type Resource @model&#xA;{&#xA;    id: ID!&#xA;    name: String!&#xA;    Plants: [Plant] @connection(name: ""ResourcePlant"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Ran amplify push, and all resources were created properly.</p>&#xA;&#xA;<p>Now I wanted to add a Resource, and link it to all Plants properly. </p>&#xA;&#xA;<p>Do you know how is the sintaxe I should use to run the recently created mutation createResource in order to add the items on Plant I want to include to that resource?</p>&#xA;&#xA;<p>I tried to run like this:</p>&#xA;&#xA;<pre><code>mutation CreateResource {&#xA;  createResource (input: {&#xA;        name: ""Plant"",&#xA;        Plants : {&#xA;            items :  &#xA;            { id: ""f9a0468e-da74-41d5-8287-1cb6a76b25a5"" }&#xA;    }&#xA;  }&#xA;  ) {&#xA;    name,&#xA;    Plants {&#xA;      items {&#xA;        id&#xA;      }&#xA;      nextToken&#xA;    }&#xA;  } &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This was the error message:</p>&#xA;&#xA;<pre><code>Validation error of type WrongType: argument 'input' with value&#xA; 'ObjectValue{objectFields=[ObjectField{name='name',&#xA; value=StringValue{value='Plant'}}, ObjectField{name='Plants',&#xA; value=ObjectValue{objectFields=[ObjectField{name='items', value=ObjectValue{objectFields=[ObjectField{name='id', &#xA;value=StringValue{value='f9a0468e-da74-41d5-8287-1cb6a76b25a5'}}]}}]}}]}'&#xA; contains a field not in 'CreateResourceInput': 'Plants' @ 'createResource'&#xA;&#xA;</code></pre>&#xA;",6466366,,,,2019-09-12 18:48:20,How can I insert records in AwsAppSync mutation with proper @connection values?,<graphql><aws-amplify><aws-appsync><dynamodb-queries>,2,0,0,2019-09-11 15:28:28
57900419,2,,57900050,1,,"<p>You can use the Amplify client <a href=""https://aws-amplify.github.io/docs/js/api#amplify-graphql-client"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/js/api#amplify-graphql-client</a></p>&#xA;",12056510,,,,2019-09-12 05:47:41,"",,0,0,0,2019-09-12 05:47:41
57901551,1,,,0,98,"<p>I have a problem with my apollo client I'm using in my angular-application. I'm calling an graphQL-Query which returns me the following:</p>&#xA;&#xA;<pre><code>account: {id: 1}&#xA;accountId: 1&#xA;contact: {id: 1}&#xA;contactId: 1&#xA;id: 23&#xA;notes: null&#xA;resultId: null&#xA;stepId: 1&#xA;subject: ""testsubject""&#xA;</code></pre>&#xA;&#xA;<p>I see this result in the browsers developer tools (result preview of the call)&#xA;So far so good, but the appolo-client returns this:</p>&#xA;&#xA;<pre><code>account: {id: 1}&#xA;accountId: 1&#xA;contact: {id: 1}&#xA;contactId: 1&#xA;id: {id: {…}, notes: null, stepId: 1, subject: ""testsubject"", resultId: null, …}&#xA;notes: null&#xA;resultId: null&#xA;stepId: 1&#xA;subject: ""testsubject""&#xA;</code></pre>&#xA;&#xA;<p>I searched the net for this problem, but it seems that I'm the only one with this, trying the solutions of nearly similar problems didn't solve anything.</p>&#xA;&#xA;<p>Disabling cache didn't solve it</p>&#xA;&#xA;<pre><code>      this.apollo.create({&#xA;        link: from([this.logoutLink, this.authMiddleware, graphQLDataLink]),&#xA;        cache:  new InMemoryCache({&#xA;          addTypename: false&#xA;        }),&#xA;        defaultOptions: {&#xA;          query: {&#xA;            fetchPolicy: 'no-cache'&#xA;          }&#xA;        }&#xA;      }&#xA;</code></pre>&#xA;",10613726,,13302,2019-10-30 19:32:03,2019-10-30 19:32:03,How to fix: Angular Apollo-Client returning an array instead of an id,<angular><apollo-client>,1,0,0,2019-09-12 07:17:12
57902498,1,57908276,,2,804,"<p>I am building a GraphQL Server with Apollo.&#xA;And I am experiencing performance issues caused by the precedence of my resolvers.</p>&#xA;&#xA;<p>I have a child type that is resolved on a parent type.&#xA;Apollo Server decides to use the child type resolver instead of the much faster resolver on the parent type.</p>&#xA;&#xA;<h1>Query</h1>&#xA;&#xA;<pre><code>query getAdGroup($id:ID!) {&#xA;  AdGroup(id:$id) {&#xA;    id&#xA;    name&#xA;    Keywords {&#xA;      id&#xA;      bid&#xA;      term&#xA;     }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;&#xA;<h1>Setup</h1>&#xA;&#xA;<h3>AdGroupType (Parent)</h3>&#xA;&#xA;<pre><code>type AdGroup {&#xA;  id&#xA;  name&#xA;  keywords(filter: Filter): [Keyword] &#xA;}&#xA;</code></pre>&#xA;&#xA;<h3>Keyword Type (Child)</h3>&#xA;&#xA;<pre><code>type Keyword {&#xA;  id&#xA;  term&#xA;  bid&#xA;}&#xA;</code></pre>&#xA;&#xA;<h3>AdGroupResolver.js</h3>&#xA;&#xA;<pre><code>// this gets executed&#xA;const getKeywords = (handler, adGroupId, filter) =&gt; handler.knex.raw(`&#xA;  select&#xA;   id,&#xA;   term,&#xA;   bid&#xA;  from keyword&#xA;  where adGroupId = ${adGroupId}&#xA;`);&#xA;&#xA;&#xA;export default {&#xA;  Query: {&#xA;    AdGroup: (parent, { id: adGroupId }, { handler }) =&gt; getAdGroup(handler, id),&#xA;  },&#xA;  AdGroup: {&#xA;    Keywords: ({ id: adGroupId }, { filter }, { handler }) =&gt; getKeywords( handler, adGroupId, filter),&#xA;  }&#xA;};&#xA;</code></pre>&#xA;&#xA;<h3>KeywordResolver.js</h3>&#xA;&#xA;<pre><code>// this gets executed as well&#xA;const getKeywordTerm = (handler, keywordId) =&gt; handler.knex.raw(`&#xA;  select&#xA;   term&#xA;  from keyword&#xA;  where keywordId = ${keywordId}&#xA;`);&#xA;&#xA;// this gets executed as well&#xA;const getKeywordBid = (handler, keywordId) =&gt; handler.knex.raw(`&#xA;  select&#xA;   bid&#xA;  from keyword&#xA;  where keywordId = ${keywordId}&#xA;`);&#xA;&#xA;export default {&#xA;  Query: {&#xA;    Keyword: (parent, { id: keywordId }, { handler }) =&gt; getKeyword(handler, keywordId),&#xA;  },&#xA;  Keyword: {&#xA;    term: ({ id: keywordId }, _, { handler }) =&gt; getKeywordTerm(handler, keywordId),&#xA;    bid: ({ id: keywordId }, _, { handler }) =&gt; getKeywordBid(handler, keywordId),&#xA;  }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>The response time asking for 1000+ keywords on an Ad Group is very long.</p>&#xA;&#xA;<p>But if I remove the term and bid functions on the Keyword resolver, the performance is much better because the values from the Keyword function in the Ad Group resolver are used.</p>&#xA;&#xA;<p>How can I design my schema or configure Apollo to maintain this flexibility while not unnecessarily resolving each Keyword individually when I ask for the AdGroups keywords?</p>&#xA;",11963343,,,,2019-09-12 13:53:35,Specify resolver to use | Resolver order,<graphql><apollo><graphql-js><apollo-server>,1,0,0,2019-09-12 08:16:01
57912907,2,,57892400,0,,"<p>Ok, after some headache, I found what was missing in my model. For me so far it has proved to be the best way of doing this relationship...</p>&#xA;&#xA;<p>I have added on my Plant type, on schema definition, a field named plantResourceId (other than the one used for the @connection directive). What I found out was that, by convention, when inserting/updating a record on ""Plant"" and adding the resource ""id"" field content of the resource I want to ""connect"" to that plant, it will automatically be retrieved when ""Resources"" is queried, for each item - what is better: Out-of-the-box from codegen.</p>&#xA;&#xA;<p>Insert example</p>&#xA;&#xA;<pre><code>mutation CreatePlant {&#xA;   createPlant(input:{&#xA;      name: ""MyPlant"",&#xA;      plantResourceId: ""id-for-connected-resource""&#xA;   }) {&#xA;      name,&#xA;      plantResourceId&#xA;      }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Query example to retrieve items:</p>&#xA;&#xA;<pre><code>query listPlantsOnResource {&#xA;  listResources(filter: {&#xA;    name: {&#xA;      contains: ""myfilter""&#xA;    }&#xA;  }) {&#xA;    items {&#xA;      id&#xA;      name&#xA;      Plants &#xA;        {&#xA;        items {&#xA;          id&#xA;          name&#xA;          description&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It worked very well!</p>&#xA;&#xA;<p>Thanks all who contributed!</p>&#xA;",6466366,,,,2019-09-12 18:48:20,"",,0,0,0,2019-09-12 18:48:20
57924913,2,,52959405,3,,"<p>Yes, you can do this on Amplify.</p>&#xA;<h3>Docs</h3>&#xA;<p>Amplify: <a href=""https://aws-amplify.github.io/docs/cli-toolchain/graphql#function"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/cli-toolchain/graphql#function</a></p>&#xA;<p>AWS AppSync (worth reading also for useful general guidance): <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html</a></p>&#xA;<h3>Example:</h3>&#xA;<p>Walkthrough + Code Repo:</p>&#xA;<ul>&#xA;<li><a href=""https://dev.to/dabit3/lambda-function-graphql-resolvers-11cd"" rel=""nofollow noreferrer"">https://dev.to/dabit3/lambda-function-graphql-resolvers-11cd</a></li>&#xA;<li><a href=""https://github.com/dabit3/lambda-graphql-resolver-examples"" rel=""nofollow noreferrer"">https://github.com/dabit3/lambda-graphql-resolver-examples</a></li>&#xA;</ul>&#xA;",9675092,,-1,2020-06-20 09:12:55,2019-09-13 13:50:52,"",,0,0,0,2019-09-13 13:50:52
57925539,2,,57924792,0,,"<p>media() looks like a function, so in that case the correct syntax would be:</p>&#xA;&#xA;<pre><code>media(type=""ANIME"", search=searchQuery)&#xA;</code></pre>&#xA;&#xA;<p>or if the argument of media() is an object</p>&#xA;&#xA;<pre><code>media({type: ""ANIME"", search: searchQuery})&#xA;</code></pre>&#xA;&#xA;<p>Also, you don't need to use ${} around searchQuery since searchQuery is already a string. The usage for that would be something like</p>&#xA;&#xA;<pre><code>`${searchString}` or `foo${searchString}bar`&#xA;</code></pre>&#xA;&#xA;<p>using the `` around the ${} utility to represent a string and its variable inside the string literal.</p>&#xA;&#xA;<p>Hope it helps!</p>&#xA;",7914940,,,,2019-09-13 14:28:04,"",,0,1,0,2019-09-13 14:28:04
57926450,2,,57924792,4,,"<p>The issue is that given some query like ""naruto"", your current code results in the following text:</p>&#xA;&#xA;<pre><code>media(type:ANIME, search: naruto ) {&#xA;</code></pre>&#xA;&#xA;<p>This is not valid syntax since String literals should be surrounded by double quotes (<code>""</code>).</p>&#xA;&#xA;<p>Don't use string interpolation to provide dynamic values to the query. These should always be expressed as <a href=""https://graphql.github.io/graphql-spec/June2018/#sec-Language.Variables"" rel=""nofollow noreferrer"">variables</a> and included as a separate object inside your request alongside <code>query</code>.</p>&#xA;&#xA;<p>You need to define the variable as part of your operation, providing the appropriate type</p>&#xA;&#xA;<pre><code>var query = `query Search ($searchQuery: String!) {&#xA;</code></pre>&#xA;&#xA;<p>then you can use the variable anywhere inside the operation:</p>&#xA;&#xA;<pre><code>media(type:ANIME, search: $searchQuery) {&#xA;</code></pre>&#xA;&#xA;<p>Now just pass the variable value along with your request.</p>&#xA;&#xA;<pre><code>body: JSON.stringify({&#xA;  query,&#xA;  variables: {&#xA;    searchQuery,&#xA;  }&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>Note that the variable name is prefixed with a <code>$</code> inside the GraphQL document, but outside of it, we don't do that.</p>&#xA;",6024220,,,,2019-09-13 15:28:14,"",,0,0,0,2019-09-13 15:28:14
57930353,1,57934413,,0,484,"<p>I have a series of tables like:</p>&#xA;&#xA;<pre><code>Person:&#xA;person_id&#xA;first_name&#xA;last_name&#xA;&#xA;CompanyPerson&#xA;person_id&#xA;company_id&#xA;&#xA;Company&#xA;company_id&#xA;name&#xA;&#xA;OfficePerson&#xA;office_id&#xA;person_id&#xA;&#xA;Office&#xA;office_id&#xA;company_id&#xA;address_1&#xA;address_2&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>How would I indicate to graphQL, that I the following information: firstName is ""Joe"", company name, office addresses (ONLY office addresses for which JOE belongs to).</p>&#xA;&#xA;<pre><code>people(firstName: ""joe"") {&#xA;  company {&#xA;    name&#xA;    office {&#xA;      address_1&#xA;      address_2&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If this was a singular request, I could set the ""context"" to talk about ""joe""</p>&#xA;&#xA;<pre><code>person(firstName: ""joe"") {&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I could use the graphql query schema to add further context restrictions (user: ""Joe"")</p>&#xA;&#xA;<p>Since this is for multiple people, I don't see a method further refining queries based on information provided in a previous object.</p>&#xA;&#xA;<p>Using: Ruby latest; graphql-ruby latest;</p>&#xA;&#xA;<p>Thank you,</p>&#xA;&#xA;<p>-daniel</p>&#xA;",200394,,,,2019-09-14 10:01:37,GraphQL: referencing other ids,<nested><graphql>,1,0,0,2019-09-13 21:07:09
57954689,1,57987992,,1,2869,"<p>I've recently started looking into AWS Amplify.&#xA;I have managed to setup an API using GraphQl.&#xA;Basically, during the API creation, Amplify ask you a few questions about the API and guides you through its creation.&#xA;At some point, you are requested to create a schema. The schema I selected is as follows:</p>&#xA;&#xA;<pre><code>type User @model {&#xA;  id: ID!&#xA;  username: String!&#xA;  email: String&#xA;}&#xA;&#xA;type Highscore @model {&#xA;  points: Int!,&#xA;  id: ID!&#xA;  ownerId: ID!,&#xA;  numRounds: Int,&#xA;  date: String, &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>with this schema, Amplify is able to generate code that allows me to do things such as:</p>&#xA;&#xA;<ul>&#xA;<li>mutate users and highscores</li>&#xA;<li>query all Users</li>&#xA;<li>query all Highscores</li>&#xA;</ul>&#xA;&#xA;<p>Does anyone know how I could achieve this?</p>&#xA;&#xA;<p>I've looked into the @key directive (<a href=""https://aws-amplify.github.io/docs/cli-toolchain/graphql#key"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/cli-toolchain/graphql#key</a>) but updating the schema to include</p>&#xA;&#xA;<pre><code>type Highscore @model @key((fields: [""points""] {&#xA;...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>did not produce the expected result.</p>&#xA;&#xA;<p>unfortunately, the code generated by Amplify using this schema <strong>does not allow sorting of the query</strong>.</p>&#xA;&#xA;<p><strong>I would like to be able to query all Highscores, and sort it according to the number of points.</strong></p>&#xA;",7238958,,7238958,2019-09-16 13:09:33,2019-09-18 08:10:18,GraphQL with AWS Amplify - how to enable sorting on query,<amazon-web-services><graphql><aws-amplify>,1,0,0,2019-09-16 10:14:31
57969797,1,,,1,85,"<p>I am a newbie in Apollo server, graphql and Dynamodb. Can anyone here help me with Apollo Server 2.0, AWS DynamoDB as datasource integration with schema validation (using joi npm package) and entity-relationship and all?</p>&#xA;&#xA;<p>For example, I have to create a microservice which will keep the records of users like their surname, middlename, nameprefix, namesuffix, gender, emails and addresses etc.</p>&#xA;",5933379,,,,2019-09-17 07:58:33,Apollo server 2.0 with Dynamodb schema validation,<graphql><amazon-dynamodb><apollo-server>,0,0,0,2019-09-17 07:58:33
57972370,1,57974973,,0,790,"<p>How do I omit the variable searchQuery if its value is an empty string, and have this logic inside of template literal?</p>&#xA;&#xA;<p>Code:</p>&#xA;&#xA;<pre><code>var query = `query RunSearch($searchQuery: String, $mType: MediaType, $filterMethod:[MediaSort], $season:MediaSeason){&#xA;  Page(perPage:10, page: 1){&#xA;    pageInfo {&#xA;      total&#xA;      currentPage&#xA;      lastPage&#xA;      hasNextPage&#xA;      perPage&#xA;    }&#xA;&#xA;    media(type: $mType, search: $searchQuery, sort:$filterMethod, season:$season){&#xA;    title{&#xA;    english&#xA;  }&#xA;    format,&#xA;    description(asHtml:true),&#xA;    averageScore,&#xA;    studios(isMain:true) {&#xA;      nodes {&#xA;        name&#xA;      }&#xA;    },&#xA;    coverImage {&#xA;      large&#xA;      color&#xA;    },&#xA;    genres&#xA;  }&#xA;  }&#xA;&#xA;}`;&#xA;</code></pre>&#xA;",6782875,,,,2019-09-17 13:18:41,How to remove variable from graphQL query if it's empty?,<reactjs><ecmascript-6><graphql>,1,4,0,2019-09-17 10:30:20
57979920,1,58002344,,4,586,"<p>Currently, I'm authenticating Linkedin users and calling <code>GetOpenIdTokenForDeveloperIdentity</code> and <code>GetCredentialsForIdentity</code> in a Lambda, and signing in those users with <code>Auth.federatedSignIn()</code>, I am able to retrieve the current authenticated user and credentials.</p>&#xA;&#xA;<p>Using Amplify's APIClass or AWSAppSyncClient, however, I cannot get these users to make GraphQL calls through AppSync, which is configured to authorize Cognito User Pool and AWS IAM users. The Cognito User Pool users have no problem making AppSync calls when the authentication type is changed accordingly.</p>&#xA;&#xA;<p>I have tried each of the following for the federated users:</p>&#xA;&#xA;<pre><code>API.graphql({&#xA;  query: queries.getUserProfile,&#xA;  variables: {&#xA;    input: {&#xA;      email,&#xA;    }&#xA;  },&#xA;  authMode: 'AWS_IAM'&#xA;})&#xA;&#xA;const client = new AWSAppSyncClient({&#xA;  url: process.env.GRAPHQL_ENDPOINT,&#xA;  region: process.env.AWS_REGION,&#xA;  auth: {&#xA;    type: AUTH_TYPE.AWS_IAM,&#xA;    credentials: async () =&gt; Auth.currentCredentials(),&#xA;  },&#xA;  disableOffline: true,&#xA;});&#xA;&#xA;client.query({&#xA;  query: gql(queries.getUserProfile),&#xA;  variables: {&#xA;    input: {&#xA;      email,&#xA;    },&#xA;  },&#xA;  fetchPolicy: 'no-cache',&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>The Identity Pool is provisioned through Serverless resources/CloudFormation templates, and I've set the trust relationship and authenticated role like so:</p>&#xA;&#xA;<pre><code>  ProjectAuthRole:&#xA;    Type: AWS::IAM::Role&#xA;    Properties:&#xA;      AssumeRolePolicyDocument:&#xA;        Version: ""2012-10-17""&#xA;        Statement:&#xA;          - Effect: Allow&#xA;            Principal:&#xA;              Federated: ""cognito-identity.amazonaws.com""&#xA;            Action:&#xA;              - ""sts:AssumeRoleWithWebIdentity""&#xA;            Condition:&#xA;              StringEquals:&#xA;                ""cognito-identity.amazonaws.com:aud"":&#xA;                  - Ref: ProjectIdentityPool&#xA;              ForAnyValue:StringLike:&#xA;                ""cognito-identity.amazonaws.com:amr"": authenticated&#xA;  AuthPolicy:&#xA;    Type: AWS::IAM::Policy&#xA;    Properties:&#xA;      PolicyDocument:&#xA;        Version: '2012-10-17'&#xA;        Statement:&#xA;          - Effect: Allow&#xA;            Action:&#xA;              - mobileanalytics:PutEvents&#xA;              - cognito-sync:*&#xA;              - cognito-identity:*&#xA;            Resource:&#xA;              - ""*""&#xA;          - Effect: Allow&#xA;            Action:&#xA;              - appsync:GraphQL&#xA;            Resource:&#xA;              - ""*""&#xA;      Roles:&#xA;        - Ref: ProjectAuthRole&#xA;</code></pre>&#xA;&#xA;<p>I have been able to make GraphQL calls by adding the @aws_iam schema directive to every type and input definition, but it sounds like this shouldn't even be necessary, as the authorization should be happening AWS AppSync GraphQL API level.</p>&#xA;&#xA;<p>Any ideas where else I might have forgotten to configure?</p>&#xA;",12076814,,12076814,2019-09-17 20:18:40,2019-09-19 00:52:44,Developer authenticated identities federated via an Identity Pool cannot make AppSync calls in Amplify project,<graphql><serverless><aws-amplify><aws-appsync><federated-identity>,1,0,0,2019-09-17 18:17:20
58002306,2,,57975644,1,,"<p>I don't know which type of authorization you're using, but you may lay on a condition using <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html"" rel=""nofollow noreferrer"">context variables</a>. If you are using <strong>AWS_IAM</strong> or <strong>AMAZON_COGNITO_USER_POOLS</strong> authorization, you have <code>username</code> from context and you can return a response based on <code>username</code>. For instance, in your <code>students</code> resolver mapping response, you may have:</p>&#xA;&#xA;<pre><code>{&#xA;   #if($context.result[""username""] == ""$context.identity.username"")&#xA;      $utils.toJson($context.result);&#xA;   #end&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If the <code>username</code> doesn't match this check, only a null response is returned.</p>&#xA;",8786986,,,,2019-09-19 00:46:06,"",,0,0,0,2019-09-19 00:46:06
58002344,2,,57979920,1,,"<p>It looks like the issue was the <code>additionalAuthenticationProviders</code> in our serverless-appsync-plugin YAML file.</p>&#xA;&#xA;<p>My understanding is that schema-level directives must be applied to type definitions in one's schema if you want additional authentication providers (in our case, <code>AWS_IAM</code>) to have access alongside the default authentication provider (in our case, <code>AMAZON_COGNITO_USER_POOLS</code>).</p>&#xA;&#xA;<p>Source for further details:&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/security.html#using-additional-authorization-modes"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/security.html#using-additional-authorization-modes</a></p>&#xA;",12076814,,,,2019-09-19 00:52:44,"",,0,0,0,2019-09-19 00:52:44
58033107,2,,57951815,0,,"<p>CONTAINS is supported for lists: When evaluating ""a CONTAINS b"", ""a"" can be a list; however, ""b"" cannot be a set, a map, or a list.</p>&#xA;",5875100,,,,2019-09-20 17:53:03,"",,0,0,0,2019-09-20 17:53:03
58065494,2,,58062478,1,,"<p>Elasticsearch number of results by default is 10.&#xA;You need to specify how many results (there is a Max:10k I believe?)</p>&#xA;&#xA;<p>The place of the size is important, it should be in the <strong>body</strong> of your request:</p>&#xA;&#xA;<p>See here:&#xA;<a href=""https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-body.html#request-body-search-from-size"" rel=""nofollow noreferrer"">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-body.html#request-body-search-from-size</a></p>&#xA;",8256618,,,,2019-09-23 15:17:37,"",,0,1,0,2019-09-23 15:17:37
58122622,2,,58110362,1,,<p>Can you tell me more about your use case? AppSync is a graphql managed service so you can't use it without graphql. What are you trying to accomplish with AppSync?</p>&#xA;,11730550,,,,2019-09-26 18:19:30,"",,0,0,0,2019-09-26 18:19:30
58126454,1,58140031,,4,1710,"<p>I'm using a Mongoose/MongoDB and I'm getting some odd behaviour when I try to use the spread syntax to return values from a document after I call .save() on it.</p>&#xA;&#xA;<pre><code>// Npc is a Mongoose schema&#xA;const npc = new Npc({&#xA;        ...input,&#xA;        creator: userId&#xA;      });&#xA;&#xA;const createdNpc = await npc.save();&#xA;</code></pre>&#xA;&#xA;<p>I have tried using the spead operator, but the name and description keys do not exist.</p>&#xA;&#xA;<pre><code>return {&#xA;          ...createdNpc&#xA;          creator: userFromId(npc.creator)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>however when I access those values directly they ARE defined</p>&#xA;&#xA;<pre><code>return {&#xA;          description: createdNpc.description,&#xA;          name: createdNpc.name,&#xA;          creator: userFromId(npc.creator)&#xA;        };&#xA;</code></pre>&#xA;&#xA;<p>I've made sure that the spelling of description and name are correct. I've tried logging both <code>{...createdNpc}</code> and <code>{...createdNpc, description: createdNpc.description, name: createdNpc.name}</code>. In the logs I've confirmed that name and description are both not defined (the keys don't exist) inside of {...createdNpc}</p>&#xA;&#xA;<p>I have also tried logging <code>createdNpc</code> and <code>{...createdNpc}</code> and have confirmed that they return different values.</p>&#xA;&#xA;<p>here's createdNpc:</p>&#xA;&#xA;<pre><code>{&#xA;  _id: 5d8d5c7a04fc40483be74b3b,&#xA;  name: 'NPC Name',&#xA;  description: 'My Postman NPC',&#xA;  creator: 5d8d50e0b5c8a6317541d067,&#xA;  __v: 0&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>it doesn't actually look like a Mongoose Document at all. I would post the result of <code>{...createdNPC}</code> to show the difference but it's a huge code snippet and I don't want to clutter the question. I'm happy to provide it if it will help!</p>&#xA;&#xA;<p>I'm still very new to MongoDB &amp; Mongoose. Why would using the spread syntax on a Mongoose Document change its value?</p>&#xA;&#xA;<p>I don't think this should be relevant to the question but just in case I'll also mention this is for a graphql resolver.</p>&#xA;",9021210,,,,2019-09-27 18:49:54,using spread syntax with Mongoose Document after calling the .save method results in undefined keys,<node.js><mongodb><express><mongoose><graphql>,1,1,0,2019-09-27 00:57:57
58126545,1,58420762,,0,519,"<p>I have given an amazon api to integrate. But I have no idea how to use this api </p>&#xA;&#xA;<pre><code> mutation createTrail {&#xA;   createTruckTrailer(input:{truckId: ""077"",trailer:[""AB22D""]}){&#xA;    result&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4162019,,1922685,2019-10-16 22:45:29,2019-10-16 22:45:29,How to integrate Appsync api in android,<amazon-web-services><graphql><aws-amplify><aws-appsync>,2,0,0,2019-09-27 01:18:12
58193485,2,,58193484,0,,"<p>Ruby:</p>&#xA;&#xA;<pre><code>GraphQL::Schema::UniqueWithinType.default_id_separator = '|'&#xA;relay_id = GraphQL::Schema::UniqueWithinType.encode('User', '123')&#xA;# ""VXNlcnwxMjM=""&#xA;Base64.decode64(relay_id)&#xA;# ""User|123""&#xA;</code></pre>&#xA;&#xA;<p>To get ""123"" out of ""VXNlcnwxMjM="" in Postgres SQL you can do this horror show</p>&#xA;&#xA;<pre><code>select  &#xA;    substring(&#xA;        (decode('VXNlcnwxMjM=', 'base64')::text)&#xA;        from (char_length('User|') + 1)&#xA;        for (char_length(decode('VXNlcnwxMjM=', 'base64')::text) - char_length('User|'))&#xA;    )::int&#xA;</code></pre>&#xA;&#xA;<p>Edit: Playing around with this ... on Postgres 9.6.5 the above works... but our staging server is 10.5 and I had to do this instead (which also works on 9.6.5)</p>&#xA;&#xA;<pre><code>select  &#xA;    substring(&#xA;        convert_from(decode('VXNlcnwxMjM=', 'base64'), 'UTF-8')&#xA;        from (char_length('User|') + 1)&#xA;        for (char_length(convert_from(decode('VXNlcnwxMjM=', 'base64'), 'UTF-8')) - char_length('User|'))&#xA;    )::int&#xA;</code></pre>&#xA;",315829,,315829,2019-10-01 23:57:08,2019-10-01 23:57:08,"",,0,0,0,2019-10-01 23:28:58
58201831,2,,58190379,0,,<p>AppSync builds a lot of the functionality for you. What's the Type Def for <code>listPayments</code>?</p>&#xA;&#xA;<p>Did you make a filter input for <code>listPayments</code> that takes a field and a string?</p>&#xA;,6770513,,,,2019-10-02 12:48:00,"",,0,1,0,2019-10-02 12:48:00
58245956,1,,,2,3518,"<p>I'm working on an app that allows users to upload large datasets. The uploader has a ""draft"" version that they can edit in the UI, then they publish snapshots of the draft, which all users can see. The draft files should only be queried if the uploader is logged in.</p>&#xA;&#xA;<p>While non-edit privilege users don't see the draft, the app still queries its entire fileset, which makes fetching the dataset page really slow.</p>&#xA;&#xA;<p>The query has a fragment for the ""drafts"" data, including the conditionally unwanted files. If I omit the files from the fragment, the component works for all users...but then the uploader can't get their draft files. So it's this damned if I do, damned if I don't quandary and my lack of experience with graphql and apollo really shines here.</p>&#xA;&#xA;<p>Here's the query and accompanying hook:</p>&#xA;&#xA;<pre><code>export const getDatasetPage = gql`&#xA;  query dataset($datasetId: ID!) {&#xA;    dataset(id: $datasetId) {&#xA;      id&#xA;      created&#xA;      public&#xA;      following&#xA;      starred&#xA;      ...DatasetDraft&#xA;      ...DatasetPermissions&#xA;      ...DatasetSnapshots&#xA;      ...DatasetIssues&#xA;      ...DatasetMetadata&#xA;      ...DatasetComments&#xA;      uploader {&#xA;        id&#xA;        name&#xA;        email&#xA;      }&#xA;      analytics {&#xA;        downloads&#xA;        views&#xA;      }&#xA;      onBrainlife&#xA;    }&#xA;  }&#xA;  ${DatasetQueryFragments.DRAFT_FRAGMENT}&#xA;  ${DatasetQueryFragments.PERMISSION_FRAGMENT}&#xA;  ${DatasetQueryFragments.DATASET_SNAPSHOTS}&#xA;  ${DatasetQueryFragments.DATASET_ISSUES}&#xA;  ${DatasetQueryFragments.DATASET_METADATA}&#xA;  ${DATASET_COMMENTS}&#xA;`&#xA;&#xA;export const DatasetQueryHook = ({ datasetId }) =&gt; {&#xA;  const {&#xA;    data: { dataset },&#xA;    loading,&#xA;    error,&#xA;  } = useQuery(getDatasetPage, {&#xA;    variables: { datasetId },&#xA;  })&#xA;  if (loading) {&#xA;    return &lt;Spinner text=""Loading Dataset"" active /&gt;&#xA;  } else {&#xA;    if (error) Sentry.captureException(error)&#xA;    return (&#xA;      &lt;ErrorBoundary error={error} subject={'error in dataset page'}&gt;&#xA;        &lt;DatasetQueryContext.Provider&#xA;          value={{&#xA;            datasetId,&#xA;          }}&gt;&#xA;          &lt;DatasetPage dataset={dataset} /&gt;&#xA;        &lt;/DatasetQueryContext.Provider&gt;&#xA;      &lt;/ErrorBoundary&gt;&#xA;    )&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And this is the fragment:</p>&#xA;&#xA;<pre><code>export const DRAFT_FRAGMENT = gql`&#xA;  fragment DatasetDraft on Dataset {&#xA;    id&#xA;    draft {&#xA;      id&#xA;      modified&#xA;      readme&#xA;      partial&#xA;      description {&#xA;        Name&#xA;        Authors&#xA;        DatasetDOI&#xA;        License&#xA;        Acknowledgements&#xA;        HowToAcknowledge&#xA;        Funding&#xA;        ReferencesAndLinks&#xA;      }&#xA;      files {    //when this is removed, it works...except for users with edit privileges&#xA;        id&#xA;        filename&#xA;        size&#xA;      }&#xA;      summary {&#xA;        modalities&#xA;        sessions&#xA;        subjects&#xA;        subjectMetadata {&#xA;          participantId&#xA;          age&#xA;          sex&#xA;          group&#xA;        }&#xA;        tasks&#xA;        size&#xA;        totalFiles&#xA;        dataProcessed&#xA;      }&#xA;    }&#xA;  }&#xA;`&#xA;</code></pre>&#xA;&#xA;<p>Long story short: The query should omit draft files if the user doesn't have edit privileges. I know the logic for hasEdit, but I don't know how I can implement it using a directive. Can I even use <code>@skip</code> on a fragment, and even if so, can I pass its variable conditionally? I can't find anything in the docs about this and at a loss for a solution.</p>&#xA;",11311650,,11311650,2019-10-05 08:12:54,2019-10-05 18:34:31,Can I use a directive on a fragment and call its variable conditionally?,<reactjs><graphql><react-apollo>,1,0,0,2019-10-05 06:33:02
58259015,1,,,1,533,"<p>I'm trying to implement an account switcher similar to what Google has:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/GKZfM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GKZfM.png"" alt=""Google account switcher""></a></p>&#xA;&#xA;<p>I'm wondering how they implement it; is it all on the client, using cookies/local storage?</p>&#xA;&#xA;<p>I have a Nuxt app and am using Nuxt auth package.  I'm wondering what the best way to implement this multiple account switcher is.</p>&#xA;&#xA;<p>I'm also using <code>vue-apollo</code> and assuming that I would <code>this.$apollo.getClient().clearStore()</code> after every switch.</p>&#xA;",1325761,,,,2021-03-13 08:36:25,"Nuxt ""multiple accounts"" login similar to Google",<authentication><nuxt.js><account><vue-apollo>,1,0,0,2019-10-06 16:06:06
58262280,1,,,0,143,"<p>I've been in a feedback loop of trying to figure this out (new to GraphQL + Apollo). I got my directive ""working"" (the boolean does change the part of the fragment that is called, as intended). The problem is in order to write the expression that returns my directive variable, I need the resulting query that the directive is being called on! I don't know how to break this contradiction and am throwing the towel in in hopes that someone more experienced can point me in a better direction.</p>&#xA;&#xA;<p>Here's the query and the hook it's being called on: </p>&#xA;&#xA;<pre><code>export const getDatasetPage = gql`&#xA;  query dataset($datasetId: ID!, $editTrue: Boolean!) {&#xA;    dataset(id: $datasetId) {&#xA;      id&#xA;      created&#xA;      public&#xA;      following&#xA;      starred&#xA;      ...DatasetDraft //editTrue omits a piece of this fragment if user !hasEditPermissions&#xA;      ...DatasetPermissions&#xA;      ...DatasetSnapshots&#xA;      ...DatasetIssues&#xA;      ...DatasetMetadata&#xA;      ...DatasetComments&#xA;      uploader {&#xA;        id&#xA;        name&#xA;        email&#xA;      }&#xA;      analytics {&#xA;        downloads&#xA;        views&#xA;      }&#xA;      onBrainlife&#xA;    }&#xA;  }&#xA;  ${DatasetQueryFragments.DRAFT_FRAGMENT}&#xA;  ${DatasetQueryFragments.PERMISSION_FRAGMENT}&#xA;  ${DatasetQueryFragments.DATASET_SNAPSHOTS}&#xA;  ${DatasetQueryFragments.DATASET_ISSUES}&#xA;  ${DatasetQueryFragments.DATASET_METADATA}&#xA;  ${DATASET_COMMENTS}&#xA;`&#xA;&#xA;// IDEAL CONDITION TO CHECK WRITE PERMISSIONS (won't work because dataset is required //prop...which is the result of the query)&#xA;&#xA;// const editTrue = (dataset) =&gt; {&#xA;//   const user = getProfile()&#xA;//   return (user &amp;&amp; user.admin) ||&#xA;//     hasEditPermissions(dataset.permissions, user &amp;&amp; user.sub)&#xA;// } &#xA;&#xA;export const DatasetQueryHook = ({ datasetId, editTrue }) =&gt; {&#xA;  const {&#xA;    data: { dataset },&#xA;    loading,&#xA;    error,&#xA;  } = useQuery(getDatasetPage, {&#xA;    variables: { datasetId, editTrue },&#xA;  })&#xA;  if (loading) {&#xA;    return &lt;Spinner text=""Loading Dataset"" active /&gt;&#xA;  } else {&#xA;    if (error) Sentry.captureException(error)&#xA;    return (&#xA;      &lt;ErrorBoundary error={error} subject={'error in dataset page'}&gt;&#xA;        &lt;DatasetQueryContext.Provider&#xA;          value={{&#xA;            datasetId,&#xA;          }}&gt;&#xA;          &lt;DatasetPage dataset={dataset} /&gt;&#xA;        &lt;/DatasetQueryContext.Provider&gt;&#xA;      &lt;/ErrorBoundary&gt;&#xA;    )&#xA;  }&#xA;}&#xA;&#xA;const DatasetQuery = ({ match }) =&gt; (&#xA;  &lt;ErrorBoundaryAssertionFailureException subject={'error in dataset query'}&gt;&#xA;    &lt;DatasetQueryHook datasetId={match.params.datasetId} editTrue={editTrue} /&gt;&#xA;  &lt;/ErrorBoundaryAssertionFailureException&gt;&#xA;)&#xA;... &#xA;</code></pre>&#xA;&#xA;<p>After reading tons of gql docs, I'm just frustrated that after finally managing to implement a directive on a piece of a fragment, I'm met with the challenge that the query itself produces a crucial piece of data that determines what that directive is. </p>&#xA;&#xA;<p>To add some context, I'm basically trying to omit certain files being queried when a user doesn't have write permissions to them. Currently, they're being queried for all users despite not being displayed and thus causing hefty load times.</p>&#xA;",11311650,,,,2019-10-07 00:24:52,GraphQL Directive requires its own query result as a variable. What is a smarter way to do this?,<reactjs><graphql><react-apollo>,0,6,0,2019-10-07 00:24:52
58303683,1,,,2,1644,"<p>What are the meanings of the various question marks here?</p>&#xA;&#xA;<pre><code>type GraphQLEnumValueDefinition = {&#xA;  name: string;&#xA;  value?: any;&#xA;  deprecationReason?: string;&#xA;  description?: ?string;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>source: <a href=""https://graphql.org/graphql-js/type/#graphqlenumtype"" rel=""nofollow noreferrer"">https://graphql.org/graphql-js/type/#graphqlenumtype</a></p>&#xA;&#xA;<p>Are there other usages of question mark within graphql?</p>&#xA;",985454,,,,2019-10-09 14:02:54,What is a question mark in graphql?,<graphql>,1,0,0,2019-10-09 12:00:47
58305086,1,,,1,914,"<p>I'm struggeling to find an answer, because I'm not really sure if this is a Drupal, GraphQl or Gatsby question. </p>&#xA;&#xA;<p>I'm building a portfolio-site with Gatsby.js and Drupal-8 as datasource (via <code>gatsby-source-drupal</code>). </p>&#xA;&#xA;<p>GraphQl queries for Nodes, Taxonomy, Users, eg are working without problems. &#xA;But I can not access my created Views at my API-endpoint.  </p>&#xA;&#xA;<p>I have created a working Views-Page with a path. &#xA;I also exposed the data as a Block. &#xA;Tried a REST-Export as serialized JSON, but I can not get it working with JSON:API and JSON-Views-Module.</p>&#xA;&#xA;<p>I expect to access the data from my View at my <code>/jsonapi/</code>endpoint, but my Views are not showing up. </p>&#xA;&#xA;<p>I can't get my head around this. What am I missing? Is it even possible? Thanks!</p>&#xA;",12188548,,,,2020-04-09 12:15:03,How to get Drupal 8 Views working with GraphQL / Gatsby.js,<drupal><graphql><drupal-8><gatsby><drupal-views>,2,4,0,2019-10-09 13:18:11
58310561,1,58315056,,2,3583,"<p>so i have a doubt, about to AppsSync and SAM, and is if i can run the api graphQl in local sam? if is so, what i need to do it, but, without dynamodb?, else i would like know which is the best practices to do a test or approach, on appSync.</p>&#xA;<p>because the examples that i read, all it's on aws account with dynamodb and assembly, and i want to try it on sam local without dynamo and without assembly.</p>&#xA;<p>so i try this basic configuration at the template.yaml, that i found, on this repo <a href=""https://github.com/sbstjn/appsync-resolvers-example/blob/master/template.yml"" rel=""nofollow noreferrer"">enter link description here</a></p>&#xA;<pre><code>AWSTemplateFormatVersion: '2010-09-09'&#xA;Transform: AWS::Serverless-2016-10-31&#xA;Description: &gt;&#xA;  graphql&#xA;&#xA;  Sample SAM Template for graphql&#xA;&#xA;# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst&#xA;plugins:&#xA;  - serverless-appsync-plugin&#xA;  - serverless-webpack&#xA;Resources:&#xA;  HelloWorldFunction:&#xA;    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction&#xA;    Properties:&#xA;      CodeUri: hello_world/&#xA;      Handler: app.lambda_handler&#xA;      Runtime: python3.7&#xA;  &#xA;  Role: &#xA;    Type: AWS::IAM::Role&#xA;    Properties: &#xA;      AssumeRolePolicyDocument: &#xA;        Version: 2012-10-17&#xA;        Statement: &#xA;          - Effect: Allow&#xA;            Principal:&#xA;              Service: appsync.amazonaws.com&#xA;            Action:&#xA;              - sts:AssumeRole&#xA;      Policies: &#xA;        - PolicyName: allow-access-to-lambda-from-appsync&#xA;          PolicyDocument: &#xA;            Version: 2012-10-17&#xA;            Statement: &#xA;              - Effect: Allow&#xA;                Action: lambda:invokeFunction&#xA;                Resource:&#xA;                  - !GetAtt [ HelloWorldFunction, Arn ]&#xA;                  - !Join [ '', [ !GetAtt [ HelloWorldFunction, Arn ], ':*' ] ]&#xA;&#xA;  AppSyncAPI:&#xA;    Type: AWS::AppSync::GraphQLApi&#xA;    Properties:&#xA;      Name: !Join [ -, [ !Ref ParamProjectName, !Ref ParamENV ] ]&#xA;      AuthenticationType: API_KEY&#xA;&#xA;  AppSyncSchema:&#xA;    Type: AWS::AppSync::GraphQLSchema&#xA;    Properties:&#xA;      ApiId: !GetAtt [ AppSyncAPI, ApiId ]&#xA;      DefinitionS3Location: schema.graphql&#xA;&#xA;  AppSyncDataSource:&#xA;    Type: AWS::AppSync::DataSource&#xA;    Properties:&#xA;      ApiId: !GetAtt [ AppSyncAPI, ApiId ]&#xA;      Name: handler&#xA;      Type: AWS_LAMBDA&#xA;      LambdaConfig:&#xA;        LambdaFunctionArn: !GetAtt [ HelloWorldFunction, Arn ]&#xA;      ServiceRoleArn: !GetAtt [ Role, Arn ]&#xA;&#xA;&#xA;&#xA;  AppSyncReolverPeople:&#xA;    Type: AWS::AppSync::reolver&#xA;    properties: &#xA;      ApiId: !GetAtt [AppSyncAPI, ApiId]&#xA;      TypeName: Query&#xA;      FieldName: !GetAtt [AppSyncDataSource, Name]&#xA;      RequestMappingTemplate:&#xA;        '&#xA;        {&#xA;          &quot;version&quot;:&quot;2017-02-28&quot;,&#xA;          &quot;operation&quot;: &quot;Invoke&quot;,&#xA;          &quot;payload&quot;:{&#xA;            &quot;resolve&quot;:&quot;query.people&quot;,&#xA;            &quot;context&quot;:&quot;$utils.toJson($context)&quot;&#xA;          }&#xA;        }&#xA;        '&#xA;    ResponseMappingTemplate: $util.toJson($context.result)&#xA;&#xA;  AppSyncAPIKey:&#xA;      Type: AWS::AppSync::ApiKey&#xA;      Properties:&#xA;        ApiId: !GetAtt [ AppSyncAPI, ApiId ]&#xA;        Expires: !Ref ParamKeyExpiration&#xA;&#xA;Parameters:&#xA;&#xA;  ParamProjectName:&#xA;    Type: String&#xA;  ParamENV:&#xA;    Type: String&#xA;  ParamKeyExpiration:&#xA;    Type: Number&#xA;     &#xA;&#xA;Outputs:&#xA;  APIKey:&#xA;      Description: API Key&#xA;      Value: !GetAtt [ AppSyncAPIKey, ApiKey ]&#xA;&#xA;  GraphQL:&#xA;    Description: GraphQL URL&#xA;    Value: !GetAtt [ AppSyncAPI, GraphQLUrl ]&#xA;&#xA;</code></pre>&#xA;<p>this is the schema.graphql</p>&#xA;<pre><code>type Person {&#xA;    id: Int!&#xA;    name: String!&#xA;    age: Int!&#xA;&#xA;    friends: [Person!]!&#xA;}&#xA;&#xA;type Query {&#xA;    people: [Person!]!&#xA;    person(id: Int): Person!&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;}&#xA;</code></pre>&#xA;<p>and this is the lambda code:</p>&#xA;<pre><code> import json&#xA;&#xA;&#xA;&#xA;&#xA;def lambda_handler(event, context):&#xA;&#xA;    data={&#xA;        &quot;id&quot;:1&#xA;        &quot;name&quot;:&quot;milse&quot;,&#xA;        &quot;age&quot;:12&#xA;    }&#xA;    if event.name==data.name:&#xA;        return {&#xA;        &quot;statusCode&quot;: 200,&#xA;        &quot;body&quot;: json.dumps({&#xA;            &quot;message&quot;: &quot; hi :&quot; + data.name&#xA;             &#xA;        }),&#xA;    }&#xA;    else:&#xA;        return {&#xA;        &quot;statusCode&quot;: 200,&#xA;        &quot;body&quot;: json.dumps({&#xA;            &quot;message&quot;: &quot; the name is not here&quot; &#xA;             &#xA;        }),&#xA;    }&#xA;&#xA;</code></pre>&#xA;<p>so i thanks you, for your help.</p>&#xA;",12096280,,-1,2020-06-20 09:12:55,2021-04-10 16:59:40,How to try AWS Appsync in local sam,<amazon-web-services><graphql><amazon-cloudformation><aws-appsync><aws-serverless>,1,1,0,2019-10-09 18:57:44
58311554,1,,,3,519,"<p>so with this <code>Person</code>, <code>Company</code> example:</p>&#xA;&#xA;<pre><code>type Person {&#xA;    name: string&#xA;    work_for: [Company]&#xA;}&#xA;&#xA;type Company {&#xA;    name: string&#xA;    work_for: [Person]&#xA;}&#xA;&#xA;work_for: [uid] @reverse @count .&#xA;name: string @index(fulltext, term) @count .&#xA;</code></pre>&#xA;&#xA;<p>What would a query to find: <code>All the companies that had any of ""John James Sam"" with total count of those names per company</code> be constructed? I have tried:</p>&#xA;&#xA;<pre><code>  q(func: anyofterms(hashed, ""Jame John Sam"")){&#xA;        uid&#xA;    @groupby work_for{&#xA;      name&#xA;      count(uid)&#xA;    }&#xA;  }&#xA;}```&#xA;&#xA;but that gives the person and the companies they worked for plus the count which is not the company and the number of people with those names that worked for it. Thanks in advance&#xA;</code></pre>&#xA;",6841364,,,,2019-11-03 16:02:10,How to groupby and count dgraph,<graphql><dgraph>,1,0,0,2019-10-09 20:08:49
58313489,1,58330727,,2,1979,"<p>I am using a serverless AWS-based architecture in my react app with AppSync, Cognito, and GraphQL. In the past I have been able to update my graphql schema locally and run <code>amplify api push</code> and it successfully pushes all of my changes to the cloud.</p>&#xA;&#xA;<p>Recently I have been trying to update the cloud through <code>amplify api push</code> as I have in the pass, and the terminal says ""All resources are update in the cloud"". However, it reverts my schema to the schema version I had from last push. And needless to say, it was not updated in the cloud either.</p>&#xA;&#xA;<p>No error messages are showing in the terminal.</p>&#xA;&#xA;<p>The change I want to make is as follows:</p>&#xA;&#xA;<p>Before-</p>&#xA;&#xA;<pre><code>type Topic @model {&#xA;  id: ID!&#xA;  postID: ID!&#xA;  name: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>After-</p>&#xA;&#xA;<pre><code>type Topic @model {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Any help will be much appreciated</p>&#xA;",7982979,,,,2021-02-04 09:16:51,amplify api push does not update schema in cloud and reverts locally,<graphql><schema><serverless><aws-amplify><aws-appsync>,3,0,0,2019-10-09 23:25:38
58315056,2,,58310561,0,,"<p>There's only one way to test AppSync locally: </p>&#xA;&#xA;<p><a href=""https://aws.amazon.com/blogs/mobile/amplify-framework-local-mocking/"" rel=""nofollow noreferrer"">https://aws.amazon.com/blogs/mobile/amplify-framework-local-mocking/</a></p>&#xA;&#xA;<p>SAM does not support it.</p>&#xA;",12056510,,,,2019-10-10 03:31:24,"",,0,3,0,2019-10-10 03:31:24
58325873,1,59348768,,1,1947,"<p>I am having trouble using apollo-client version 2.4.6 to query my AWS AppSync endpoint.<br>&#xA;I can successfully query the AWS AppSync endpoint using a curl command, but the exact same&#xA;GraphQL executed over the Apollo client is returning ""Can't find field getTickets on object undefined.""</p>&#xA;&#xA;<p>I am a newby at GraphQL and Apollo.  Am I doing something stupid to cause that error?  Why does it say NetworkError?  Why is the object undefined?</p>&#xA;&#xA;<p><strong>EDIT: I noticed that if I pass <code>disableOffline: true</code> in the constructor to <code>AWSAppSyncClient</code> then it starts working.  Why?  Why is the default client behavior with <code>disableOffline: false</code> not working?</strong></p>&#xA;&#xA;<p>Here is my super simple schema.graphql deployed at AWS:</p>&#xA;&#xA;<pre><code>schema {&#xA;  query: Query&#xA;}&#xA;&#xA;type Query {&#xA;  getTickets: [EmmDDavidTickets]&#xA;  @aws_api_key&#xA;}&#xA;&#xA;type EmmDDavidTickets @aws_api_key {&#xA;  ticketNumber: ID!&#xA;  pnrNumber: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is the curl command that works to query that endpoint at AWS.  Note the valid response:</p>&#xA;&#xA;<pre><code>$ curl -X POST -H ""x-api-key: --REDACTED--"" https://wm3mz6anrjbrfpgbewnyyrio3u.appsync-api.us-east-1.amazonaws.com/graphql -d '{ ""query"": ""query list {\ngetTickets { ticketNumber\n pnrNumber\n }\n}""}'&#xA;&#xA;{""data"":{""getTickets"":[{""ticketNumber"":""12345"",""pnrNumber"":null},{""ticketNumber"":""0001020202020"",""pnrNumber"":""ABC123""}]}}&#xA;</code></pre>&#xA;&#xA;<p>Here is my NodeJS code to execute the same query using Apollo:</p>&#xA;&#xA;<pre><code>const apiKey ='--REDACTED--';&#xA;const region = 'us-east-1';&#xA;const type = 'API_KEY';&#xA;const url = 'https://wm3mz6anrjbrfpgbewnyyrio3u.appsync-api.us-east-1.amazonaws.com/graphql';&#xA;&#xA;const gql = require('graphql-tag');&#xA;const query = gql(`&#xA;query list {&#xA;  getTickets {&#xA;      ticketNumber&#xA;  }&#xA;}`);&#xA;&#xA;// Set up Apollo client&#xA;const client = new AWSAppSyncClient({&#xA;    url: url,&#xA;    region: region,&#xA;    auth: {&#xA;        type: type,&#xA;        apiKey: apiKey,&#xA;    },&#xA;    disableOffline: false&#xA;});&#xA;&#xA;client.hydrated().then(function (client) {&#xA;    //Now run a query&#xA;    client.query({ query: query })&#xA;        .then(function logData(data) {&#xA;            console.log('results of query: ', data);&#xA;        })&#xA;        .catch(console.error);&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>Here is the error response from Apollo:</p>&#xA;&#xA;<pre><code>ApolloError: Network error: Can't find field getTickets on object undefined.&#xA;    at new ApolloError (/Users/dyoung/workspace//appsync_javascript_test/node_modules/apollo-client/bundle.umd.js:85:32)&#xA;    at /Users/dyoung/workspace//appsync_javascript_test/node_modules/apollo-client/bundle.umd.js:1039:45&#xA;    at /Users/dyoung/workspace//appsync_javascript_test/node_modules/apollo-client/bundle.umd.js:1411:21&#xA;    at Array.forEach (&lt;anonymous&gt;)&#xA;    at /Users/dyoung/workspace//appsync_javascript_test/node_modules/apollo-client/bundle.umd.js:1410:22&#xA;    at Map.forEach (&lt;anonymous&gt;)&#xA;    at QueryManager.broadcastQueries (/Users/dyoung/workspace//appsync_javascript_test/node_modules/apollo-client/bundle.umd.js:1405:26)&#xA;    at /Users/dyoung/workspace//appsync_javascript_test/node_modules/apollo-client/bundle.umd.js:988:35 {&#xA;  graphQLErrors: [],&#xA;  networkError: Error: Can't find field getTickets on object undefined.&#xA;      at /Users/dyoung/workspace//appsync_javascript_test/node_modules/apollo-cache-inmemory/lib/bundle.umd.js:429:27&#xA;      at Array.forEach (&lt;anonymous&gt;)&#xA;      at StoreReader.diffQueryAgainstStore (/Users/dyoung/workspace//appsync_javascript_test/node_modules/apollo-cache-inmemory/lib/bundle.umd.js:426:36)&#xA;      at StoreReader.readQueryFromStore (/Users/dyoung/workspace//appsync_javascript_test/node_modules/apollo-cache-inmemory/lib/bundle.umd.js:401:25)&#xA;      at processOfflineQuery (/Users/dyoung/workspace//appsync_javascript_test/node_modules/aws-appsync/lib/link/offline-link.js:154:34)&#xA;      at /Users/dyoung/workspace//appsync_javascript_test/node_modules/aws-appsync/lib/link/offline-link.js:110:28&#xA;      at new Subscription (/Users/dyoung/workspace//appsync_javascript_test/node_modules/zen-observable/lib/Observable.js:183:34)&#xA;      at Observable.subscribe (/Users/dyoung/workspace//appsync_javascript_test/node_modules/zen-observable/lib/Observable.js:262:14)&#xA;      at /Users/dyoung/workspace//appsync_javascript_test/node_modules/aws-appsync/lib/client.js:182:67,&#xA;  message: ""Network error: Can't find field getTickets on object undefined."",&#xA;  extraInfo: undefined&#xA;}&#xA;</code></pre>&#xA;",1461050,,1461050,2019-10-11 14:03:33,2019-12-15 22:52:47,Apollo GraphQL Client 'Network error: Can't find field XXXX on object undefined' with disableOffline: false,<apollo-client><aws-appsync>,1,0,0,2019-10-10 14:59:37
58340375,2,,58337364,10,,"<p>What's returned by <code>gql</code> is a <a href=""https://github.com/graphql/graphql-js/blob/master/src/language/ast.js#L193"" rel=""noreferrer"">DocumentNode</a> object. A GraphQL document could include multiple definitions, but assuming it only has the one and it's an operation, you can just do:</p>&#xA;&#xA;<pre><code>const operation = doc.definitions[0]&#xA;const operationName = operation &amp;&amp; operation.name&#xA;</code></pre>&#xA;&#xA;<p>If we allow there may be fragments, we probably want to do:</p>&#xA;&#xA;<pre><code>const operation = doc.definitions.find((def) =&gt; def.kind === 'OperationDefinition')&#xA;const operationName = operation &amp;&amp; operation.name&#xA;</code></pre>&#xA;&#xA;<p>Keep in mind it's technically possible for multiple operations to exist in the same document, but if you're running this client-side against your own code that fact may be irrelevant.</p>&#xA;&#xA;<p>The core library also provides a utility function:</p>&#xA;&#xA;<pre><code>const { getOperationAST } = require('graphql')&#xA;const operation = getOperationAST(doc)&#xA;const operationName = operation &amp;&amp; operation.name&#xA;</code></pre>&#xA;",6024220,,,,2019-10-11 11:30:29,"",,0,3,0,2019-10-11 11:30:29
58363666,1,58588041,,1,714,"<p>Here's an example of a data leak that occurs if using standard graphql-ruby setup.</p>&#xA;&#xA;<p>Using the graphql nested request below, the response returns data nested under company 1, that belongs to company 2. I expect the response to be limited to the the accountants log that belongs to the company it is nested within.</p>&#xA;&#xA;<p>That way it is, it is leaking information.</p>&#xA;&#xA;<p>The question is how do we patch that leak so the only data returned in the response and its nested objects is data that belongs to the company (the root object).</p>&#xA;&#xA;<p>This query:</p>&#xA;&#xA;<pre><code>query { &#xA;  company(id: ""1"") {&#xA;    id&#xA;    name&#xA;    activityLog {&#xA;      id&#xA;      activityAt&#xA;      accountant {&#xA;        id&#xA;        name&#xA;      }&#xA;      companyId&#xA;    }&#xA;    accountants {&#xA;      id&#xA;      name&#xA;      activityLog {&#xA;        id&#xA;        activityAt&#xA;        companyId&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>returns this response:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""company"": {&#xA;      ""id"": ""1"",&#xA;      ""name"": ""AwsomeCo"",&#xA;      ""activityLog"": [&#xA;        {&#xA;          ""id"": ""1"",&#xA;          ""activityAt"": ""2019-10-12 16:40:13 UTC"",&#xA;          ""accountant"": {&#xA;            ""id"": ""100"",&#xA;            ""name"": ""Mr Smith"",&#xA;          },&#xA;          ""companyId"": ""1""&#xA;        }&#xA;      ],&#xA;      ""accountants"": [&#xA;        {&#xA;          ""id"": ""100"",&#xA;          ""name"": ""Mr Smith""&#xA;          ""activityLog"": [&#xA;            {&#xA;              ""id"": ""1"",&#xA;              ""activityAt"": ""2019-10-12 16:40:13 UTC"",&#xA;              ""companyId"": ""1""&#xA;            },&#xA;            {&#xA;              ""id"": ""2"",&#xA;              ""activityAt"": ""2019-10-11 16:40:13 UTC"",&#xA;              ""companyId"": ""2""  // OTHER COMPANY, NEED TO PRESERVE PARENT SCOPE&#xA;            },&#xA;          ],&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>leaking transaction log data of company 2, within the nested elements of company 1. </p>&#xA;&#xA;<p>Again, the question is: <em>How do we preserve scope, only displaying data in context of the company it is displaying?</em></p>&#xA;&#xA;<p>Code to reproduce:</p>&#xA;&#xA;<p>GraphQL types (using graphql-ruby gem)</p>&#xA;&#xA;<pre><code>#query_type.rb&#xA;module Types&#xA;  class QueryType &lt; Types::BaseObject&#xA;    # Add root-level fields here.&#xA;    # They will be entry points for queries on your schema.&#xA;    field :company_leak, Types::ExampleLeak::CompanyType, null: false do&#xA;      argument :id, ID, required: true&#xA;    end&#xA;    field :companies_leak, [ Types::ExampleLeak::CompanyType ], null: false&#xA;&#xA;    def company_leak(id: )&#xA;      Company.find(id)&#xA;    end&#xA;&#xA;    def companies_leak&#xA;      Company.all&#xA;    end&#xA;  end&#xA;end&#xA;&#xA;module Types&#xA;  module ExampleLeak&#xA;    class CompanyType &lt; BaseObject&#xA;      field :id, ID, null: false&#xA;      field :name, String, null: false&#xA;      field :transaction_logs, [Types::ExampleLeak::TransactionLogType], null: true&#xA;      field :accountants, [Types::ExampleLeak::AccountantType], null: true&#xA;    end&#xA;  end&#xA;end&#xA;&#xA;module Types&#xA;  module ExampleLeak&#xA;    class AccountantType &lt; BaseObject&#xA;      field :id, ID, null: false&#xA;      field :name, String, null: false&#xA;      field :transaction_logs, [Types::ExampleLeak::TransactionLogType], null: true&#xA;      field :companies, [Types::ExampleLeak::CompanyType], null: true&#xA;    end&#xA;  end&#xA;end&#xA;&#xA;module Types&#xA;  module ExampleLeak&#xA;    class TransactionLogType &lt; BaseObject&#xA;      field :id, ID, null: false&#xA;      field :activity_at, String, null: false&#xA;      field :company_id, ID, null: false&#xA;      field :accountant, Types::ExampleLeak::AccountantType, null: false&#xA;    end&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>Models</p>&#xA;&#xA;<pre><code>class Company &lt; ApplicationRecord&#xA;  has_and_belongs_to_many :accountants&#xA;  has_many :transaction_logs&#xA;end&#xA;&#xA;class Accountant &lt; ApplicationRecord&#xA;  has_and_belongs_to_many :companies&#xA;  has_many :transaction_logs&#xA;end&#xA;&#xA;class TransactionLog &lt; ApplicationRecord&#xA;  belongs_to :company&#xA;  belongs_to :accountant&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>seeds.rb</p>&#xA;&#xA;<pre><code>awesomeco = Company.create!(name: 'AwesomeCo')&#xA;boringco = Company.create!(name: 'BoringCo') &#xA;mr_smith = Accountant.create!(name: ""Mr. Smith"")&#xA;awesomeco.accountants &lt;&lt; mr_smith&#xA;boringco.accountants &lt;&lt; mr_smith&#xA;mr_smith.transaction_logs.create!(company: awesomeco, activity_at: 1.day.ago)&#xA;mr_smith.transaction_logs.create!(company: boringco, activity_at: 2.days.ago)&#xA;</code></pre>&#xA;&#xA;<p>Public repo containing full code, intended as educational resource:</p>&#xA;&#xA;<p><a href=""https://github.com/rubynor/graphql-ruby-training-ground"" rel=""nofollow noreferrer"">https://github.com/rubynor/graphql-ruby-training-ground</a></p>&#xA;",252799,,4025095,2019-10-23 08:52:45,2020-03-02 19:29:50,"Graphql-ruby scoping in habtm, data leak in nested query",<ruby-on-rails><graphql-ruby>,2,8,0,2019-10-13 12:40:21
58365641,2,,58363506,1,,"<p>This boilerplate assumes that both the auth server and Hasura APIs read and write into the same database with <code>users</code> table being the shared entity.</p>&#xA;&#xA;<p>Post signup, the user is inserted into the db (users table). Here's the <a href=""https://github.com/hasura/graphql-engine/blob/master/community/sample-apps/whatsapp-clone-typescript-react/auth-server/controllers/user.js"" rel=""nofollow noreferrer"">source</a> on where it's happening in the Auth server.</p>&#xA;&#xA;<p>If you have configured the auth server to write into a different database, then you need to do a sync of user data post signup.</p>&#xA;",4951611,,,,2019-10-13 16:39:28,"",,0,2,0,2019-10-13 16:39:28
58366439,2,,58294594,1,,"<p>Look at <a href=""https://github.com/Shopify/graphql-batch"" rel=""nofollow noreferrer"">https://github.com/Shopify/graphql-batch</a></p>&#xA;&#xA;<p>It uses allows you to lazy-load your associations at once on demand.</p>&#xA;",467141,,,,2019-10-13 18:13:58,"",,0,2,0,2019-10-13 18:13:58
58390710,1,,,4,1471,"<p>I'm trying to set up a graphql subscription but I'm getting the error:</p>&#xA;&#xA;<pre><code>Unhandled GraphQL subscription error Error: Error during subscription handshake&#xA;</code></pre>&#xA;&#xA;<p>I'm using AWS Cognito User Pools for the authorisation.</p>&#xA;&#xA;<p>To create the Subscription I'm using: </p>&#xA;&#xA;<pre><code>this.subscription = this.props.client.subscribe({ query: gql(onCreateVehicle) }).subscribe({&#xA;  next: response =&gt; {&#xA;    console.log(response.data.onCreateVehicle);&#xA;  },&#xA;  error: error =&gt; {&#xA;    console.warn(error);&#xA;  }&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>'onCreateVehicle' was automatically generated by Amplify and looks like this:</p>&#xA;&#xA;<pre><code>export const onCreateVehicle = `subscription OnCreateVehicle($owner: String!) {&#xA;  onCreateVehicle(owner: $owner) {&#xA;    id&#xA;    name&#xA;    events {&#xA;      items {&#xA;        id&#xA;        name&#xA;        date&#xA;        isDeleted&#xA;        owner&#xA;      }&#xA;      nextToken&#xA;    }&#xA;    sessions {&#xA;      items {&#xA;        id&#xA;        name&#xA;        isDeleted&#xA;        createdAt&#xA;        owner&#xA;      }&#xA;      nextToken&#xA;    }&#xA;    isDeleted&#xA;    owner&#xA;  }&#xA;}&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>Request resolver:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2018-05-29"",&#xA;    ""payload"": {}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Response resolver:</p>&#xA;&#xA;<pre><code>## [Start] Determine request authentication mode **&#xA;#if( $util.isNullOrEmpty($authMode) &amp;&amp; !$util.isNull($ctx.identity) &amp;&amp; !$util.isNull($ctx.identity.sub) &amp;&amp; !$util.isNull($ctx.identity.issuer) &amp;&amp; !$util.isNull($ctx.identity.username) &amp;&amp; !$util.isNull($ctx.identity.claims) &amp;&amp; !$util.isNull($ctx.identity.sourceIp) &amp;&amp; !$util.isNull($ctx.identity.defaultAuthStrategy) )&#xA;  #set( $authMode = ""userPools"" )&#xA;#end&#xA;## [End] Determine request authentication mode **&#xA;## [Start] Check authMode and execute owner/group checks **&#xA;#if( $authMode == ""userPools"" )&#xA;  ## No Static Group Authorization Rules **&#xA;&#xA;&#xA;  ## [Start] Owner Authorization Checks **&#xA;  #set( $isOwnerAuthorized = false )&#xA;  ## Authorization rule: { allow: owner, ownerField: ""owner"", identityClaim: ""cognito:username"" } **&#xA;  #set( $allowedOwners0 = $util.defaultIfNull($ctx.args.owner, null) )&#xA;  #set( $identityValue = $util.defaultIfNull($ctx.identity.claims.get(""username""),&#xA;                        $util.defaultIfNull($ctx.identity.claims.get(""cognito:username""), ""___xamznone____"")) )&#xA;  #if( $util.isList($allowedOwners0) )&#xA;    #foreach( $allowedOwner in $allowedOwners0 )&#xA;      #if( $allowedOwner == $identityValue )&#xA;        #set( $isOwnerAuthorized = true )&#xA;      #end&#xA;    #end&#xA;  #end&#xA;  #if( $util.isString($allowedOwners0) )&#xA;    #if( $allowedOwners0 == $identityValue )&#xA;      #set( $isOwnerAuthorized = true )&#xA;    #end&#xA;  #end&#xA;  ## [End] Owner Authorization Checks **&#xA;&#xA;&#xA;  ## [Start] Throw if unauthorized **&#xA;  #if( !($isStaticGroupAuthorized == true || $isOwnerAuthorized == true) )&#xA;    $util.unauthorized()&#xA;  #end&#xA;  ## [End] Throw if unauthorized **&#xA;#end&#xA;## [End] Check authMode and execute owner/group checks **&#xA;&#xA;$util.toJson(null)&#xA;</code></pre>&#xA;&#xA;<p>I know it has something to do with authorisation as it didn't throw the handshake error when I removed the @auth from the schema.graphql. Should there be something in the request resolver to handle the authorisation?</p>&#xA;&#xA;<p>Adam</p>&#xA;",5884661,,,,2019-10-22 12:16:03,AWS AppSync Subscription fails during handshake,<apollo><aws-amplify><aws-appsync><amplifyjs>,1,2,0,2019-10-15 08:48:45
58393841,1,,,0,49,"<p>I'm working in a GraphQL API that queries a PostgreSQL database. &#xA;Two of the tables that are already created are:</p>&#xA;&#xA;<ul>&#xA;<li>users</li>&#xA;<li>users_follow</li>&#xA;</ul>&#xA;&#xA;<p>In the second table we store two foreign keys for two distinct users, which means that the first one is following the second one.</p>&#xA;&#xA;<p>My colleague in the front end told me that would be handy for him to have a ""followersCount"" field in the user schema in order not to query all the followers of a user just to know how many he has.</p>&#xA;&#xA;<p>My naive (or not) solution was to set up two triggers in the db, one increments the counter in the table user if one new follower was inserted in ""users_follow"" and one decrements it if one deletion happens.</p>&#xA;&#xA;<p>Is it ok for scalability to have such a setup? Should I just ""count()"" to satisfy the ""followersCount"" in the schema?</p>&#xA;",12220273,,,,2019-10-15 11:48:32,Is it advisable to have a dedicated count field in a SQL table?,<sql><postgresql><graphql>,2,0,0,2019-10-15 11:40:20
58397750,1,,,1,132,"<p>I have 2 tables in my Hasura API database, books(id,name,authorId) and authors(id,name). I want to insert data in these tables through the input field on my frontend.</p>&#xA;&#xA;<p>I have the following mutations but I don't know how to define the schema in my frontend so that the data gets saved in the Hasura API tables</p>&#xA;&#xA;<pre><code>const ADD_BOOK = gql`&#xA;  mutation AddBook($type: String!) {&#xA;    addBook(type: $type) {&#xA;      name&#xA;    }&#xA;  }&#xA;`;&#xA;const ADD_AUTHOR = gql`&#xA;  mutation AddAuthor($type: String!) {&#xA;    addAuthor(type: $type) {&#xA;      name&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>this is the input form</p>&#xA;&#xA;<pre><code>function Form(){&#xA;&#xA;  let book,author;&#xA;  return (&#xA;    &lt;Mutation mutation={ADD_BOOK}&gt;&#xA;      {(addBook, { data }) =&gt; (        &#xA;        &lt;Mutation mutation={ADD_AUTHOR}&gt;&#xA;          {(addAuthor, { data }) =&gt; (&#xA;            &lt;div&gt;&#xA;              &lt;form&#xA;                onSubmit={e =&gt; {&#xA;                  e.preventDefault();&#xA;                  addBook({ variables: { type: book.value } });&#xA;                  addAuthor({ variables: { type: author.value } });&#xA;                  book.value = """";&#xA;                  author.value = """";&#xA;                }}&#xA;              &gt;&#xA;                &lt;input&#xA;                  ref={node =&gt; {&#xA;                    book = node;&#xA;                  }}&#xA;                /&gt;&#xA;                &lt;input&#xA;                  ref={node =&gt; {&#xA;                    author = node;&#xA;                  }}&#xA;                /&gt;&#xA;                &lt;button type=""submit""&gt;Add Item&lt;/button&gt;&#xA;              &lt;/form&gt;&#xA;            &lt;/div&gt;&#xA;          )}&#xA;        &lt;/Mutation&gt;&#xA;      )}&#xA;    &lt;/Mutation&gt;&#xA;  );&#xA;&#xA;  }&#xA;</code></pre>&#xA;",11640471,,,,2019-10-17 07:48:44,I want to save data in my hasura API database using the input field of my react app,<reactjs><graphql><hasura>,1,0,0,2019-10-15 15:07:14
58402529,1,58420785,,1,234,"<p>Im new to AWS AppSync however its been pretty easy to learn and understand.</p>&#xA;&#xA;<p>Im trying to create a resolver that when the user runs <code>getChore(id: """")</code> it will return all the chore information. Which its successfully doing, the problem is within the chore there are two fields: <code>createdBy &amp; assignedTo</code> which are linked to a <code>user</code> type.</p>&#xA;&#xA;<pre><code>type Chore {&#xA;    id: ID!&#xA;    title: String&#xA;    desc: String&#xA;    status: String&#xA;    reward: Float&#xA;    retryDeduction: Float&#xA;    required: Boolean&#xA;    createdDate: AWSDateTime&#xA;    date: AWSDateTime&#xA;    interval: String&#xA;    assignedTo: User&#xA;    createdBy: User&#xA;}&#xA;&#xA;type User {&#xA;    id: ID!&#xA;    age: Int&#xA;    f_name: String&#xA;    l_name: String&#xA;    type: Int&#xA;    admin: Boolean&#xA;    family: Family&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>within aws appsync in trying to attach a resolver to <code>assignedTo: User</code> and <code>createdBy: User</code> so my query will look like:</p>&#xA;&#xA;<pre><code> query getChore {&#xA;      getChore(id: ""36d597c8-2c7e-4f63-93ee-38e5aa8f1d5b"") {&#xA;        id&#xA;        ...&#xA;        ...&#xA;        assignedTo {&#xA;          id&#xA;          f_name&#xA;          l_name&#xA;        }&#xA;        createdBy {&#xA;          id&#xA;          f_name&#xA;          l_name&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>however when i fire off this query im getting an error:</p>&#xA;&#xA;<p><code>The provided key element does not match the schema (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException;</code></p>&#xA;&#xA;<p>which i have researched and cant seem to find the correct soltuion.</p>&#xA;&#xA;<p>The resolver im using is:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""GetItem"",&#xA;    ""key"": {&#xA;        ""id"": $util.dynamodb.toDynamoDBJson($ctx.args.id),&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>return:</p>&#xA;&#xA;<pre><code>$util.toJson($ctx.result)&#xA;</code></pre>&#xA;",5394509,,,,2019-10-16 19:53:12,Aws AppSync Query erring out while using a resolver,<graphql><aws-appsync>,1,0,0,2019-10-15 20:56:40
58420762,2,,58126545,0,,"<p>The snippet you've been given is an example of a GraphQL query, which can be sent to a GraphQL-enabled endpoint, such as the one you've been given which is hosted using AWS AppSync. A GraphQL query is structured differently than a REST api call; think of it as a structured way of making REST calls. Requests are sent to the ApiUrl you pasted above in a POST HTTP request, with a request body that looks like:</p>&#xA;&#xA;<pre><code>{&#xA;    ""query"": ""mutation createTrail {\n createTruckTrailer(input:{truckId: \""077\"",trailer:[\""AB22D\""]}){\n result }\n }"",&#xA;    ""operationName"": ""createTrail"",&#xA;    ""variables"": {}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However additional headers are necessary to authenticate with IAM. The response from the server will include the result as JSON. I highly recommend spending just a few minutes to become a little more familiar with GraphQL here: <a href=""https://graphql.org/learn/"" rel=""nofollow noreferrer"">https://graphql.org/learn/</a></p>&#xA;&#xA;<p>To make calls to this AppSync endpont from Android, take a look at the Amplify android client, which explains how to get started here (Skip step 4): <a href=""https://aws-amplify.github.io/docs/android/start"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/android/start</a>, and then setup your client to authenticate with IAM to your backend here: <a href=""https://aws-amplify.github.io/docs/android/api#iam"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/android/api#iam</a></p>&#xA;&#xA;<p>Once your amplify client is fully set up, you can make the GraphQL Mutation shown above by following the steps here: <a href=""https://aws-amplify.github.io/docs/android/api#import-sdk-and-config"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/android/api#import-sdk-and-config</a> </p>&#xA;",1457398,,,,2019-10-16 19:51:43,"",,0,0,0,2019-10-16 19:51:43
58420785,2,,58402529,2,,"<p>When you get the <code>The provided key element does not match the schema</code> error, it's because your request mapping template <code>key</code> doesn't match the primary key in DynamoDB. You can enable CloudWatch Logs in your Application settings to see exactly what was sent to DynamoDB.</p>&#xA;&#xA;<p>I'm not able to know what's wrong with your template because your sample lacks some information, if you can answers the questions pertaining to your application:&#xA;- Where are the users stored? Are they stored in their own DDB table separate from the chores, and is the hash key on the users table <code>id</code> as well?&#xA;- In the <code>chores</code> table how do you know which user your chore is <code>assignedTo</code> or <code>createdBy</code>? Is there a user id stored on the chore DDB item?&#xA;- Is the request mapping template you posted corresponding to the resolver attached to <code>Chore.assignedTo</code>? If yes, using <code>$ctx.args.id</code> will actually do a GetItem based on the chore id not the user it's assigned to.</p>&#xA;&#xA;<p>Finally, I reproduced your application and I was able to make it work with a few changes.</p>&#xA;&#xA;<h3>Prerequisites:</h3>&#xA;&#xA;<ul>&#xA;<li>I have a <code>chores</code> and a <code>users</code> DynamoDB table with both having <code>id</code> as hash key. These two tables are mapped as datasources in AppSync.</li>&#xA;<li>I have one chore in the chores tables that looks like</li>&#xA;</ul>&#xA;&#xA;<pre><code>{&#xA;  ""assignedTo"": ""1"",&#xA;  ""createdBy"": ""2"",&#xA;  ""id"": ""36d597c8-2c7e-4f63-93ee-38e5aa8f1d5b"",&#xA;  ""title"": ""Chore1""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and two users in the users table:</p>&#xA;&#xA;<pre><code>{&#xA;  ""f_name"": ""Alice"",&#xA;  ""id"": ""2"",&#xA;  ""l_name"": ""Wonderland""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and </p>&#xA;&#xA;<pre><code>{&#xA;  ""f_name"": ""John"",&#xA;  ""id"": ""1"",&#xA;  ""l_name"": ""McCain""&#xA;}&#xA;</code></pre>&#xA;&#xA;<ul>&#xA;<li>I used your GraphQL schema</li>&#xA;</ul>&#xA;&#xA;<h3>Resolvers</h3>&#xA;&#xA;<p>Resolver on <code>Query.getChore</code> pointing to the <code>chores</code> table:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""GetItem"",&#xA;    ""key"": {&#xA;        ""id"": $util.dynamodb.toDynamoDBJson($ctx.args.id),&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Resolver on <code>Chore.assignedTo</code> pointing to the users table (note the <code>$ctx.source.assignedTo</code> instead of <code>$ctx.args</code>)</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""GetItem"",&#xA;    ""key"": {&#xA;        ""id"": $util.dynamodb.toDynamoDBJson($ctx.source.assignedTo),&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Similarly, resolver on <code>Chore.createdBy</code> pointing to the users table:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""GetItem"",&#xA;    ""key"": {&#xA;        ""id"": $util.dynamodb.toDynamoDBJson($ctx.source.createdBy),&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>All resolvers response mapping template use the pass-through.</p>&#xA;&#xA;<h3>Running the query</h3>&#xA;&#xA;<p>Finally, when running your query: </p>&#xA;&#xA;<pre><code>query getChore {&#xA;      getChore(id: ""36d597c8-2c7e-4f63-93ee-38e5aa8f1d5b"") {&#xA;        id&#xA;        assignedTo {&#xA;          id&#xA;          f_name&#xA;          l_name&#xA;        }&#xA;        createdBy {&#xA;          id&#xA;          f_name&#xA;          l_name&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>I get the following results:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getChore"": {&#xA;      ""id"": ""36d597c8-2c7e-4f63-93ee-38e5aa8f1d5b"",&#xA;      ""assignedTo"": {&#xA;        ""id"": ""1"",&#xA;        ""f_name"": ""John"",&#xA;        ""l_name"": ""McCain""&#xA;      },&#xA;      ""createdBy"": {&#xA;        ""id"": ""2"",&#xA;        ""f_name"": ""Alice"",&#xA;        ""l_name"": ""Wonderland""&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Hope it helps!</p>&#xA;",1060799,,,,2019-10-16 19:53:12,"",,0,0,0,2019-10-16 19:53:12
58440880,1,58442193,,1,903,<p>Is there a way for me to call a mutation multiple times from the front-end? I have an array of users I need to add to an app and the mutation currently only allows to add one user at a time (we could change the mutation but they want to see if I can batch on the front end first).</p>&#xA;&#xA;<p>This is my current mutation:</p>&#xA;&#xA;<pre><code>export const SHARE_APP = gql`&#xA;  mutation ShareApp(&#xA;    $appId: String!&#xA;    $userId: String!&#xA;  ) {&#xA;    shareApp(&#xA;      appId: $appId&#xA;      userId: $userId&#xA;    ) {&#xA;      updatedApp {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>Can this be done on the front-end or do I need to change the gql code to accept an array for ids?</p>&#xA;,6826746,,6826746,2019-10-17 21:28:03,2019-10-17 23:59:37,Make a mutation call multiple times depending on length of variable,<javascript><reactjs><graphql><react-apollo><graphql-tag>,1,0,0,2019-10-17 21:20:56
58458568,1,58459775,,1,1112,"<p>In Apollo Server, one could use a schema directive to implement a resolver middleware like such:</p>&#xA;&#xA;<pre><code>adminGetUsers(getUsersPL: GetUsersPL!): [User] @hasRole(role: ""ADMIN"")&#xA;</code></pre>&#xA;&#xA;<p><code>@hasRole(role: ""ADMIN"")</code> serves as a middleware to prevent any non-admin user from using this mutation.</p>&#xA;&#xA;<p>So how would one sanitize/transform input data? For example, </p>&#xA;&#xA;<pre><code>getUser(userId: String! @transform): [User]&#xA;</code></pre>&#xA;&#xA;<p><code>@transform</code> will take in userId as a hashed id (ie: <code>xyfd</code>), and transform it to a numbered ID (ie: <code>12</code>). This syntax is not allowed of course. Basically I want a way to modify input data before it goes into resolver.</p>&#xA;",6680253,,6024220,2019-10-19 01:09:11,2019-10-19 01:25:03,Apollo Graphql modify input data,<graphql><apollo><graphql-js><apollo-server>,1,0,0,2019-10-18 21:45:45
58467741,1,,,0,237,"<p>I've just create a new spring boot application with GraphQL + MongoDB. I can retrieve an array from database, but querying by id does not work. Property is null. But I see the data correctly while debugging. It like GraphQL is not capable to match the query with the value return.</p>&#xA;&#xA;<p>I'm new at using GraphQL, it's probably little details...</p>&#xA;&#xA;<p>Schema GraphQL</p>&#xA;&#xA;<pre><code>schema {&#xA;    query: Query&#xA;}&#xA;&#xA;type Query {&#xA;    datasets: [Dataset]&#xA;    dataset(id: String): Dataset&#xA;}&#xA;&#xA;type Dataset {&#xA;    id: String&#xA;    name: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Dataset class look like this:</p>&#xA;&#xA;<pre><code>@Data&#xA;@AllArgsConstructor&#xA;@NoArgsConstructor&#xA;@Builder&#xA;@Document(collection = ""datasets"")&#xA;public class Dataset {&#xA;    private ObjectId id;&#xA;    private String name;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I query with:</p>&#xA;&#xA;<pre><code>{&#xA;    datasets{&#xA;        name&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get this:</p>&#xA;&#xA;<pre><code>{&#xA;    ""datasets"": [&#xA;        {&#xA;            ""name"": ""My Dataset""&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But when I query with:</p>&#xA;&#xA;<pre><code>{&#xA;    dataset(id: ""5dab4ec97ff755534437c8bc""){&#xA;        name&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get this:</p>&#xA;&#xA;<pre><code>{&#xA;    ""dataset"": null&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The id is ok:&#xA;<a href=""https://i.stack.imgur.com/CZaKP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CZaKP.png"" alt=""enter image description here""></a></p>&#xA;",2363069,,,,2019-10-19 20:32:21,Return properties are null value when I get by Id,<mongodb><spring-boot><graphql><graphql-java>,0,2,0,2019-10-19 20:32:21
58479278,1,58509556,,1,389,"<p>I'm quite new using DynamoDB and Quills.</p>&#xA;&#xA;<p>I want to use Quills Deltas to create and display text/images on a website, but I haven't found any documentation regarding the implementation of Quills Deltas using DynamoDB. </p>&#xA;&#xA;<p>How should I add to my graghQl schema? Also, I would like to save the embedded images into an S3 bucket instead of using the default encoding</p>&#xA;",12249090,,,,2019-10-22 17:31:56,How to save Quill.js Delta in DynamoDB,<graphql><amazon-dynamodb><quill>,1,0,0,2019-10-21 03:03:27
58504656,2,,58432382,3,,"<p>You have no Query for getting specific <code>Event</code> with its <code>id</code>. Your ""events"" query does not accept any args and is expected to return an array of <em>Events</em>.</p>&#xA;&#xA;<pre><code>type RootQuery {&#xA;   events: [Event!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>See the following example from the <a href=""https://graphql.org/learn/execution/"" rel=""nofollow noreferrer"">docs</a></p>&#xA;&#xA;<blockquote>&#xA;<pre><code>type Query {&#xA;  human(id: ID!): Human&#xA;}&#xA;&#xA;type Human {&#xA;  name: String&#xA;  appearsIn: [Episode]&#xA;  starships: [Starship]&#xA;}&#xA;&#xA;enum Episode {&#xA;  NEWHOPE&#xA;  EMPIRE&#xA;  JEDI&#xA;}&#xA;&#xA;type Starship {&#xA;  name: String&#xA;}&#xA;</code></pre>&#xA;  &#xA;  <p>In order to describe what happens when a query is executed, let's use&#xA;  an example to walk through.</p>&#xA;&#xA;<pre><code>{&#xA;  human(id: 1002) {&#xA;    name&#xA;    appearsIn&#xA;    starships {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;  &#xA;  <p>Result</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""human"": {&#xA;      ""name"": ""Han Solo"",&#xA;      ""appearsIn"": [&#xA;        ""NEWHOPE"",&#xA;        ""EMPIRE"",&#xA;        ""JEDI""&#xA;      ],&#xA;      ""starships"": [&#xA;        {&#xA;          ""name"": ""Millenium Falcon""&#xA;        },&#xA;        {&#xA;          ""name"": ""Imperial shuttle""&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;</blockquote>&#xA;&#xA;<p>Take note of the example</p>&#xA;&#xA;<pre><code>type Query {&#xA;  human(id: ID!): Human&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In your case, you will have to make something like that from above:</p>&#xA;&#xA;<pre><code>type Event{&#xA;  event(id: ID!): Event&#xA;}&#xA;</code></pre>&#xA;",2678218,,,,2019-10-22 12:45:28,"",,0,0,0,2019-10-22 12:45:28
58508607,1,58508787,,-3,100,"<p>How can I create a javascript function to pull data from JSON based on words? I am using an Task Manager API and want to populate fields based on the title of the task. For Example:</p>&#xA;&#xA;<pre><code>{&#xA; ""data"": {&#xA;    ""boards"": [&#xA;      {&#xA;        ""owner"": {&#xA;          ""id"": 555555555&#xA;        },&#xA;        ""groups"": [&#xA;          {&#xA;            ""id"": ""new_group"",&#xA;            ""title"": ""Forecasts"",&#xA;            ""items"": [&#xA;              {&#xA;                ""id"": ""355670938"",&#xA;                ""name"": ""PIPE: Production &amp; Client Management | STAGE: New Support Intake | NAME: TESTY | DATE: 10/27/2019 | TIME: 8:00 am | TIME ZONE: Central Time | DURATION: 60 minutes | TYPE: All Virtual | AUDIENCE VIEW:""&#xA;              }&#xA;            ]&#xA;          }&#xA;        ]&#xA;      }&#xA;    ]&#xA;  },&#xA;  ""account_id"": 55555555&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I need the information extracted from items.name for DATE, TIME, DURATION, and TYPE. How could i set up a function to pull just this information?</p>&#xA;",9387569,,,,2019-10-22 16:42:03,Javascript function to pull data from JSON?,<javascript><json><graphql>,3,1,0,2019-10-22 16:27:43
58508787,2,,58508607,1,,"<p>You first need to locate where you want to extract the info from.</p>&#xA;&#xA;<p>Then you just split on pipes, and then on colons.</p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>let targetStr = getTree().data.boards[0].groups[0].items[0].name;&#xD;&#xA;let fields = ['DATE', 'TIME', 'DURATION', 'TYPE'];&#xD;&#xA;&#xD;&#xA;console.log(extractData(targetStr, fields));&#xD;&#xA;&#xD;&#xA;function extractData(str, fields) {&#xD;&#xA;  return str.split(/\s*\|\s*/).reduce((res, entry) =&gt; {&#xD;&#xA;    let dat = entry.split(/\s*:\s*/);&#xD;&#xA;    return fields.indexOf(dat[0]) &gt; -1 ? Object.assign(res, { [dat[0]]: dat[1] }) : res;&#xD;&#xA;  }, {});&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function getTree() {&#xD;&#xA;  return {&#xD;&#xA;    ""data"": {&#xD;&#xA;      ""boards"": [{&#xD;&#xA;        ""owner"": {&#xD;&#xA;          ""id"": 555555555&#xD;&#xA;        },&#xD;&#xA;        ""groups"": [{&#xD;&#xA;          ""id"": ""new_group"",&#xD;&#xA;          ""title"": ""Forecasts"",&#xD;&#xA;          ""items"": [{&#xD;&#xA;            ""id"": ""355670938"",&#xD;&#xA;            ""name"": ""PIPE: Production &amp; Client Management | STAGE: New Support Intake | NAME: TESTY | DATE: 10/27/2019 | TIME: 8:00 am | TIME ZONE: Central Time | DURATION: 60 minutes | TYPE: All Virtual | AUDIENCE VIEW:""&#xD;&#xA;          }]&#xD;&#xA;        }]&#xD;&#xA;      }]&#xD;&#xA;    },&#xD;&#xA;    ""account_id"": 55555555&#xD;&#xA;  };&#xD;&#xA;}</code></pre>&#xD;&#xA;<pre class=""snippet-code-css lang-css prettyprint-override""><code>.as-console-wrapper {&#xD;&#xA;  top: 0;&#xD;&#xA;  max-height: 100% !important;&#xD;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",1762224,,,,2019-10-22 16:38:34,"",,0,0,0,2019-10-22 16:38:34
58509556,2,,58479278,2,,"<p>After some reading, I came into the realization that you can just use <code>JSON.stringify()</code> save the String into DynamoDB and <code>JSON.parse()</code> when using it.</p>&#xA;",12249090,,,,2019-10-22 17:31:56,"",,0,2,0,2019-10-22 17:31:56
58518781,1,,,0,713,"<p>(I am a beginner) I am trying to do an AppSync query from my Android app with Amplify. I'm following the steps as in this page- <a href=""https://aws-amplify.github.io/docs/android/api#run-a-query"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/android/api#run-a-query</a>  After executing the following code,</p>&#xA;&#xA;<pre><code>  public void query(){&#xA;        mAWSAppSyncClient.query(ListTodosQuery.builder().build())&#xA;                .responseFetcher(AppSyncResponseFetchers.CACHE_AND_NETWORK)&#xA;                .enqueue(todosCallback);&#xA;    } &#xA;</code></pre>&#xA;&#xA;<p>The GraphQL Callback response is supposed to be like:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""listTodos"": {&#xA;      ""items"": [&#xA;        {&#xA;          ""id"" : ...&#xA;        }]}}}&#xA;</code></pre>&#xA;&#xA;<p>But I keep receiving the response as:</p>&#xA;&#xA;<pre><code>com.apollographql.apollo.api.Response@df0e853&#xA;</code></pre>&#xA;&#xA;<p>It doesn't have any other data. Why is this so? Why is the response in this format? </p>&#xA;&#xA;<p>(I tried running the listTodos query in the AppSync console and I get the right response there, with data and all the items in the DynamoDB)</p>&#xA;",3082551,,91713,2019-10-24 00:38:42,2019-10-24 00:38:42,The response to the AWS AppSync query doesn't have any data. (Using Amplify in an Android app),<android><graphql><aws-amplify><aws-appsync><aws-amplify-sdk-android>,1,0,0,2019-10-23 08:38:05
58534605,1,,,1,60,"<p>I'm making a serverless app on React using aws-amplify, And I want to add Graphql usage in it, but facing some problems.</p>&#xA;&#xA;<p>I want to make a customization to my graphql schema by adding condition such that when svc_level is diploma or high school then it won't ask for course_title and course_name until unless svc_level is selected as college or university. Below is my graphql code:</p>&#xA;&#xA;<pre><code>type AnswersPageData @model {&#xA;  id: ID!&#xA;  svc_title: String!&#xA;  svc_tag: String!&#xA;  svc_level: String!&#xA;  question: [Question]!&#xA;  solution: String!&#xA;}&#xA;&#xA;type Question {&#xA;  header: [QHeader]&#xA;  info: [QInfo]&#xA;  body: [QBody]&#xA;}&#xA;&#xA;type QHeader { &#xA;  title: String!&#xA;  referenceStyle: String&#xA;  pagesNum: Int&#xA;  status: Boolean!&#xA;  rating: Int&#xA;}&#xA;&#xA;type QInfo {&#xA;  course_code: String!&#xA;  course_title: String!&#xA;  university: String&#xA;  country: String&#xA;}&#xA;&#xA;type QBody {&#xA;  Content: String!&#xA;  tags: [String]!&#xA;&#xA;}&#xA;</code></pre>&#xA;",12219204,,3416135,2019-10-25 18:20:28,2019-10-25 18:20:28,Custom Graphql Schema Generation on React using AWS Amplify,<reactjs><amazon-web-services><graphql><amazon-dynamodb><aws-amplify>,0,0,0,2019-10-24 05:21:23
58538624,1,59084255,,0,230,"<p>I created a GraphQL endpoint based on the following article:&#xA;<a href=""http://lifeinide.com/post/2019-04-15-micronaut-graphql-with-transaction-and-security-support/"" rel=""nofollow noreferrer"">http://lifeinide.com/post/2019-04-15-micronaut-graphql-with-transaction-and-security-support/</a></p>&#xA;&#xA;<p>It works properly in my local machine, but not after deploy to AWS lambda by referring to <a href=""https://github.com/micronaut-projects/micronaut-aws/tree/master/examples/api-gateway-example"" rel=""nofollow noreferrer"">https://github.com/micronaut-projects/micronaut-aws/tree/master/examples/api-gateway-example</a>.</p>&#xA;&#xA;<p>I tested the /ping API of the Lambda with postman, it is working perfectly.&#xA;However, when I post a graphql query to /graphql end point, it always return ""415 Unsupported Media Type"".</p>&#xA;&#xA;<p>I think something is missing, but I not sure what is it, appreciate if anyone here could point me a way on how to make it works.</p>&#xA;&#xA;<p>Thank you.</p>&#xA;",303211,,,,2019-11-28 08:09:01,Anyone here deployed Micronaut GraphQL API to AWS Lambda successfully?,<java><aws-lambda><graphql><micronaut>,1,3,0,2019-10-24 09:45:40
58591988,1,58601059,,0,845,"<p>I am new to GraphQL and I am struggling to understand how to access / reference a table in the same logical way that I would approach a normal SQL query. I have created a docker container for postgres and I have initialized the database with a simple table of data.  </p>&#xA;&#xA;<p>To create the table, I ran this in my <code>\init</code> directory. (Running Windows btw)</p>&#xA;&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE TABLE fda.nfl (&#xA;    ""team"" TEXT,&#xA;    ""conference"" TEXT,&#xA;    ""division"" TEXT,&#xA;    ""city"" TEXT,&#xA;    ""wins"" INT,&#xA;    ""losses"" INT,&#xA;    ""ties"" INT&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>In GraphiQL, I can simply select everything with this query:</p>&#xA;&#xA;<pre><code>{&#xA;  allNfls {&#xA;    edges {&#xA;      node {&#xA;        team&#xA;        conference&#xA;        division&#xA;        city&#xA;        wins&#xA;        losses&#xA;        ties&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to run something that can aggregate vertically and horizontally, e.g. <code>sum(losses) as total_losses</code> or <code>(wins / (wins + losses + ties)) as win_ratio</code>. I am unsure how to go about either of those scenarios with GraphQL. I would also need to query on certain conditions, but passing in a column name as an argument to <code>node</code> does not seem to work, i.e. <code>node(team: ""Chiefs"")</code> spits back an error about type <code>allNfls</code></p>&#xA;&#xA;<p>Is referencing a Postgres table like this in GraphQL even possible?</p>&#xA;",7927748,,10008173,2019-10-28 17:05:52,2019-10-29 03:31:55,GraphQL Query Structure to Filter / Aggregate Results from a PostgreSQL Table,<postgresql><graphql><postgraphile>,1,1,0,2019-10-28 13:39:55
58598695,2,,58563426,2,,"<p>This error happens when your DynamoDB data doesn't match the GraphQL schema.</p>&#xA;&#xA;<p>When there is a MAP/Object in the data, when the GraphQL schema is set to expect a LIST/Array.</p>&#xA;",6227440,,,,2019-10-28 21:35:32,"",,0,0,0,2019-10-28 21:35:32
58629138,1,58630168,,0,1026,<p>How to check if my Graphql server is down. Currently I make a query on the server using QueryResult and if I get an error I record it. I want to make sure that graphql is up and running before making a query. Is there any way of checking the same in react js. Thank you.</p>&#xA;,11402025,,,,2020-02-19 19:05:17,how to check if my graphql server is down,<reactjs><graphql><frontend><apollo-client>,2,2,0,2019-10-30 15:47:17
58638447,1,,,1,1113,"<p>I'm using graphql-ruby and trying to protect admin's mutation in schema like that</p>&#xA;&#xA;<pre class=""lang-rb prettyprint-override""><code>class MySchema &lt; GraphQL::Schema&#xA;&#xA;  mutation(Types::Admin::MutationType) if context[:current_user].admin?&#xA;&#xA;  mutation(Types::MutationType)&#xA;  query(Types::QueryType)&#xA;&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>but i don't have the context there.&#xA;Also tried to do the same thing in <code>Types::Admin::MutationType</code>, same result.</p>&#xA;&#xA;<p>Is it possible to check out context anywhere before resolve?</p>&#xA;",12301638,,,,2019-11-01 20:48:35,Get context inside a GraphQL schema,<ruby-on-rails><ruby><graphql><graphql-ruby>,1,0,0,2019-10-31 07:15:38
58646238,1,,,1,891,"<p>We are currently deploying to AppSync using the serverless-appsync plugin and the serverless-framework (naturally).</p>&#xA;&#xA;<p>Our API is 100% public and unauthenticated. All queries and mutations are basically public, since we have at this point no need for users (via a Cognito pool for example).</p>&#xA;&#xA;<p>We have added a first layer of security using api keys but this is undoubtedly not much, as the api key is included as-is in the frontend sources. We would like to add extra roadblocks to make it harder for malicious users to abuse that frontend API.</p>&#xA;&#xA;<p>A few things come to mind:</p>&#xA;&#xA;<ol>&#xA;<li>rate limiting (not currently supported by AppSync but I've read it's apparently in the works). I do not want to do this using a custom made solution in a Lambda for example.</li>&#xA;<li>making sure only traffic from the website is allowed to use our API, in addition to our own devs... I could probably do this with pipeline resolvers but I am not too keen with doing that in that obscure and unwieldy VTL language.</li>&#xA;<li>cors, ...</li>&#xA;</ol>&#xA;&#xA;<p>I'm considering switching to Apollo Server since this solution seems more open and configurable...</p>&#xA;",11826328,,11826328,2019-11-01 17:18:09,2019-11-05 14:20:33,"AppSync security best practices for 100% public, unauthenticated API's",<graphql><aws-appsync>,1,0,0,2019-10-31 15:04:40
58679193,1,,,1,278,"<p>I am using GraphQL to synchronize data in aws dynamoDB using AppSync .</p>&#xA;&#xA;<p>but now I need to store the data that I got from the GraphQL API</p>&#xA;&#xA;<p>here is the code I used using GraphQL :</p>&#xA;&#xA;<pre><code>amazonAppSyncClient = new AmazonAppSyncClient (""ACCESS_KEY_ID"", ""SECRET_ACCESS_KEY"", REGION);&#xA;graphQLClient = new GraphQLClient (""https://6vl6q5h2c5bxrbmlimiia5hldy.appsync-api.us-west-2.amazonaws.com/graphql"",&#xA;    new GraphQLClientOptions {&#xA;        HttpMessageHandler = new AWS4SignerMessageHandler (&#xA;            amazonAppSyncClient,&#xA;            ""ACCESS_KEY_ID"",&#xA;            ""SECRET_ACCESS_KEY"")&#xA;    });&#xA;&#xA;public async Task&lt;List&lt;Book&gt;&gt; GetAllBooks () {&#xA;    var graphQLResponse = await graphQLClient.PostQueryAsync (@""query getBooks {&#xA;      listBooks {&#xA;      items {&#xA;      Id&#xA;      Title&#xA;      ISBN&#xA;      Price&#xA;      PageCount&#xA;      Author}}}"");&#xA;&#xA;    var json = graphQLResponse.Data;&#xA;    var value = json.GetValue (""listBooks"").GetValue (""items"");&#xA;    List&lt;Book&gt; books = value.ToObject&lt;List&lt;Book&gt;&gt; ();&#xA;    return books;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I used this code from here : <a href=""https://gist.github.com/NeilBostrom/cab8b9275e39bb90ecf8e06ab980664b"" rel=""nofollow noreferrer"">https://gist.github.com/NeilBostrom/cab8b9275e39bb90ecf8e06ab980664b</a></p>&#xA;&#xA;<p>How can I synchronize the returned data locally in SQLite or any offline database ?</p>&#xA;",11717311,,,,2019-11-03 10:17:46,How to Synchronize data fetched from GraphQL with SQLite in Xamarin?,<c#><sqlite><xamarin><graphql><amazon-dynamodb>,0,0,0,2019-11-03 10:17:46
58695759,1,,,2,495,"<p>I need some serious help here. I'm using the AWS Amplify Framework, and I've added a GraphQL data source using the command <code>amplify api add-graphql-datasource</code> (I'm using Aurora Serverless). My database uses plural for tables name and snake case for columns and because of that the generated schemas are all messed up:</p>&#xA;&#xA;<pre><code>type users {&#xA;  id: Int!&#xA;  email: String&#xA;  first_name: String&#xA;  last_name: String&#xA;  phone_number: String&#xA;  created_at: AWSDateTime!&#xA;  updated_at: AWSDateTime!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Would it be possible to install an adapter or something to use GraphQL conventions? There is no possibility to change the tables and columns.</p>&#xA;",7479934,,,,2019-11-04 14:45:50,How to add adapter on GraphQL to transform snake case to camelCase in schemas,<graphql><aws-amplify>,0,1,0,2019-11-04 14:45:50
58699571,1,,,8,225,"<p>So, I'm building an app where I have a backend written in Rails and a client written in Vue with Amplify. My database is MySQL and I'm using AWS AppSync with a GraphQL as data source (pointing to my database).</p>&#xA;&#xA;<p>The AWS Amplify has a framework that allows me to generate the schemas based on the table names and columns with one simple command: <code>amplify api add-graphql-datasource</code>. But because I'm using rails migrations, my database is using Rails conventions: pluralized tables with snake cased columns.</p>&#xA;&#xA;<p>Now, the problem with that is the GraphQL schemas are all ugly and not using the correct conventions (singular names for the types and inputs, with camel cased props). Example:</p>&#xA;&#xA;<p>My backend has the following migration:</p>&#xA;&#xA;<pre><code>class CreatePosts &lt; ActiveRecord::Migration[6.0]&#xA;  def change&#xA;    create_table :posts do |t|&#xA;      t.belongs_to :site, null: false&#xA;      t.string :title&#xA;      t.string :url&#xA;      t.text :body&#xA;&#xA;      t.timestamps&#xA;    end&#xA;  end&#xA;end&#xA;</code></pre>&#xA;&#xA;<p>And the schema generated for this is:</p>&#xA;&#xA;<pre><code>type posts {&#xA;  id: Int!&#xA;  site_id: Int!&#xA;  title: String&#xA;  url: String&#xA;  body: String&#xA;  created_at: AWSDateTime!&#xA;  updated_at: AWSDateTime!&#xA;}&#xA;&#xA;type Query {&#xA;  getPosts(id: Int!): posts&#xA;  listPostss: [posts]&#xA;  // ...&#xA;}&#xA;&#xA;schema {&#xA;  query: Query&#xA;  // ...&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Not to mention this:</p>&#xA;&#xA;<pre><code>input CreatepostsInput {&#xA;  id: Int!&#xA;  site_id: Int!&#xA;  title: String&#xA;  url: String&#xA;  body: String&#xA;  created_at: AWSDateTime!&#xA;  updated_at: AWSDateTime!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So, AWS Amplify is new, it's not mature as Rails, and on top of that I didn't find any adapter or transformer to handle the problem in the client... my hope is to find a way to handle it on Rails.</p>&#xA;&#xA;<p>I need to be able to completely change the Rails conventions without breaking anything: migrations, associations, how to manage associations (create_xxx, build_xxx).</p>&#xA;&#xA;<p>This app is really new, so I can recreate all the migrations from scratch.</p>&#xA;&#xA;<p>Thanks</p>&#xA;",7479934,,6245337,2019-11-09 01:41:04,2019-11-09 01:41:04,How to override rails configurations in regard to pluralized tables and snake cased columns,<ruby-on-rails><amazon-web-services><graphql><aws-amplify>,1,0,0,2019-11-04 19:03:01
58713198,2,,58646238,0,,"<p>I would recommend using AppSync's IAM auth option and then use <a href=""https://docs.aws.amazon.com/cognito/latest/developerguide/getting-started-with-identity-pools.html"" rel=""nofollow noreferrer"">Amazon Cognito Identity Pools</a> to vend temporary AWS credentials to your client applications. Identity pools (as opposed to user pools) vend temporary AWS credentials that assume the access of a role of your choosing. When configuring the identity pool, you can define a role with full access to the AppSync API or you may selectively provide access. From the client applications, you use the temporary credentials to sign the requests to AppSync using <a href=""https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"" rel=""nofollow noreferrer"">SigV4</a> and AppSync will only allow requests with a valid signature to be executed. The temporary credentials also provide an extra layer of security as even if they are compromised, each credential will only provide access up to the max allowed time.</p>&#xA;&#xA;<p>I'll also add that you can use multiple auth modes at once with an AppSync API. This allows you to protect all fields as mentioned above and then selectively mark specific other fields such that they are authorized via some other mechanism like user pools or OIDC.</p>&#xA;",2088684,,2088684,2019-11-05 14:20:33,2019-11-05 14:20:33,"",,0,0,0,2019-11-05 14:13:28
58717079,2,,58529871,0,,"<p>Long story short, this was due to a naming convention Hasura uses, to add <code>_aggregate</code> to the table name when defining resolvers for select statements against a table.  We also happen to use <code>_aggregate</code> for our own table naming convention, used when one table rolls up, or aggregates, the values in another table.</p>&#xA;&#xA;<p>This caused the root naming collision in the composed graph.</p>&#xA;&#xA;<p>Hasura was able to provide a manual workaround, documented in the GitHub issue:</p>&#xA;&#xA;<p><a href=""https://github.com/hasura/graphql-engine/issues/3220"" rel=""nofollow noreferrer"">https://github.com/hasura/graphql-engine/issues/3220</a></p>&#xA;",752693,,,,2019-11-05 18:05:31,"",,0,0,0,2019-11-05 18:05:31
58717242,2,,58624224,12,,"<p>After doing some research, I came across a <a href=""https://github.com/graphql-python/graphene/issues/110"" rel=""noreferrer"">GitHub issue</a> that tracks this. The answer seems to be <a href=""https://github.com/graphql-python/graphene/issues/110#issuecomment-366515268"" rel=""noreferrer"">here</a>. I tried this myself and it works. So in your case, you would just change the code to read <code>parent = graphene.Field(lambda: ParentCategoryType)</code> and <code>parent = graphene.Field(lambda: CategoryType)</code></p>&#xA;",7741840,,,,2019-11-05 18:17:41,"",,0,0,0,2019-11-05 18:17:41
58771252,2,,51739550,1,,"<pre class=""lang-js prettyprint-override""><code>import Amplify from 'aws-amplify';&#xA;import awsconfig from './aws-exports';&#xA;Amplify.configure(awsconfig);&#xA;&#xA;// above goes at root of application&#xA;&#xA;// below is example&#xA;&#xA;import { Storage } from 'aws-amplify'&#xA;&#xA;var imageSrc = this.webcam.getScreenshot()&#xA;&#xA;fetch(imageSrc)&#xA;    .then(res =&gt; res.blob() )&#xA;    .then( blob =&gt; {&#xA;        const file = new File( [blob], ""tmp.png"")&#xA;        key = ""uuid_for_image""&#xA;        Storage.put(key, image)       &#xA;    })&#xA;&#xA;&#xA;&#xA;&#xA;</code></pre>&#xA;&#xA;<p>for more info: <a href=""https://aws-amplify.github.io/docs/js/storage"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/js/storage</a></p>&#xA;",7274395,,,,2019-11-08 17:26:18,"",,0,0,0,2019-11-08 17:26:18
58780466,1,58783341,,0,1384,"<p>i'm using apollo-server and want to learn graphql schema, queries and mutations but iam not getting correct resources for understing how mutation works and how to define mutation in resolvers</p>&#xA;&#xA;<p>i have tried something like adding ""mutation"" similar to ""query"" in the resolvers but no use.</p>&#xA;&#xA;<pre><code>#schema&#xA;  const typeDefs = gql`&#xA;  type Book {&#xA;    title: String&#xA;    author: String&#xA;  }&#xA;&#xA;  type Mutation {&#xA;    addBook(title: String, author: String): Book&#xA;  }&#xA;&#xA;  type Query {&#xA;    getBooks: [Book]&#xA;  }&#xA;`;&#xA;&#xA;#resolvers&#xA;const resolvers = {&#xA;  Query: {&#xA;    getBooks: () =&gt; books&#xA;  }&#xA;};&#xA;&#xA;&#xA;#querying  in graphql playground&#xA;mutation{&#xA;  addBook(  title: ""a sad love story"",author:""pavan kalyan""){&#xA;    title&#xA;    author&#xA;  }&#xA;}&#xA;&#xA;#result i got&#xA;{&#xA;  ""data"": {&#xA;    ""addBook"": null&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>i want to get the title and author in the result same as the arguments iam passing in the query&#xA;and no error messages</p>&#xA;",11084090,,,,2019-11-09 20:45:55,"How to solve ""mutation returning data null""?",<graphql><apollo-server>,1,0,0,2019-11-09 14:59:22
58800984,2,,55337645,2,,"<p>As described here <a href=""https://github.com/apollographql/apollo-client/issues/3030#issuecomment-448472845"" rel=""nofollow noreferrer"">https://github.com/apollographql/apollo-client/issues/3030#issuecomment-448472845</a></p>&#xA;&#xA;<blockquote>&#xA;  <p>After several trails I figured data is always null whenever there are&#xA;  missing fields from the projected result. For instance, if we're&#xA;  supposed to query a user like: <code>user { uuid email picture }</code> and for&#xA;  some reason the server does not return field <code>picture</code>, then result will&#xA;  be:</p>&#xA;  &#xA;  <p><code>{ data: null   loading: false   networkStatus: 7   stale: true }</code></p>&#xA;  &#xA;  <p>I've also noticed we'll get a Missing field picture warning on the&#xA;  console.</p>&#xA;  &#xA;  <p>In my particular case, my backend never serializes <code>null</code> values. Since&#xA;  user's picture and many other fields are optional (nullable), we&#xA;  constantly face this problem.</p>&#xA;</blockquote>&#xA;&#xA;<p>This is, almost always, an issue with your backend server. You'll have to carefully serialize everything in the response even if data for any particular field is null. This solved the problem for us. </p>&#xA;",2665606,,,,2019-11-11 12:02:43,"",,0,0,0,2019-11-11 12:02:43
58816318,2,,58803154,1,,"<p>Apparently I made a big mistake! I missed implementing these two functions in the Resolvers:</p>&#xA;&#xA;<pre><code>function pets(parent, args, context) {&#xA;   return context.prisma.user({ id: parent.id }).pets()&#xA;}&#xA;&#xA;function owner(parent, args, context) {&#xA;   return context.prisma.pet({ id: parent.id }).owner() &#xA;}&#xA;</code></pre>&#xA;&#xA;<p>These two fields of our GraphQL scheme that cannot be solved in the same way: ""owner"" in Pet and ""pets"" in User. These fields must be explicitly implemented because our GraphQL server cannot infer where to get that data.</p>&#xA;&#xA;<p>In the owner function (resolver), first are fetching the Link using the prisma client instance and then invoke ""owner"" on it. Notice that the resolver needs to be called ""owner"" because it resolves the ""owner"" field from the Pet type in schema.graphql. We can resolve the pets relation in a similar way.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Sources:<br>&#xA;  <a href=""https://github.com/prisma/prisma/issues/4143#issuecomment-474880883"" rel=""nofollow noreferrer"">https://github.com/prisma/prisma/issues/4143#issuecomment-474880883</a>&#xA;  <a href=""https://www.howtographql.com/graphql-js/6-authentication/"" rel=""nofollow noreferrer"">https://www.howtographql.com/graphql-js/6-authentication/</a></p>&#xA;</blockquote>&#xA;",9435428,,,,2019-11-12 10:06:43,"",,0,0,0,2019-11-12 10:06:43
58816816,1,,,0,1873,"<p>We have a mobile app in which unauthenticated users should be able to read data and they should also see the live updates of Project resource. &#xA;So we enabled graphql subscription to the Project resource, but we are getting unauthorized error when trying to subscribe to Project update.</p>&#xA;&#xA;<p>We have tried the following:</p>&#xA;&#xA;<p>From the <code>aws-amplify</code> documentation:&#xA;<code>You may disable authorization checks on subscriptions or completely turn off subscriptions as well by specifying either public or off in @model: @model (subscriptions: { level: public })</code>, &#xA;we have tried this but it is not working.</p>&#xA;&#xA;<p>We have managed to make it working by specifying update in operations like bellow example&#xA;<code>{ allow: public, provider: iam, operations: [read, update] }</code>&#xA;But we don't want to give access to update operations to unauthorized  users.</p>&#xA;&#xA;<p>Our model Project is defined as this</p>&#xA;&#xA;<pre><code>type Project&#xA;  @model(subscriptions: { level: public })&#xA;  @auth(&#xA;    rules: [&#xA;      {&#xA;        allow: private&#xA;        provider: userPools&#xA;        operations: [read, create, update, delete]&#xA;      }&#xA;      { allow: public, provider: iam, operations: [read] }&#xA;    ]&#xA;  ) {&#xA;</code></pre>&#xA;&#xA;<p>Reading is successful but when the client tries to subscribe to updates we get and error for the unauthorized access.</p>&#xA;&#xA;<pre><code>""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""onUpdateProject""&#xA;      ],&#xA;      ""data"": null,&#xA;      ""errorType"": ""Unauthorized"",&#xA;      ""errorInfo"": null,&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 2,&#xA;          ""column"": 3,&#xA;          ""sourceName"": null&#xA;        }&#xA;      ],&#xA;      ""message"": ""Not Authorized to access onUpdateProject on type Subscription""&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Is it possible to subscribe to updates without allowing read operations for the public?</p>&#xA;",8643387,,8643387,2019-11-23 20:08:51,2019-11-23 20:08:51,How to allow subscription to model without specifying 'update' operation in auth directive,<amazon-web-services><graphql><aws-amplify><amplifyjs><aws-amplify-cli>,1,0,0,2019-11-12 10:33:58
58817239,1,58982245,,1,912,"<p>I'm using AWS appsync along with DynamoDB for my project, and I have the following schema:</p>&#xA;&#xA;<pre><code>type List {&#xA;  id: String!&#xA;  title: String!&#xA;  items: [String!]!       ## it's of String Set (SS) type on DynamoDB&#xA;}&#xA;&#xA;type Item {&#xA;  id: String!&#xA;  name: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to get a specific list along with their items. the ids of these items are in the List object. e.g</p>&#xA;&#xA;<pre><code>e.g:&#xA;&#xA;List&#xA;{&#xA;  id: ""list0001"",&#xA;  title: ""My First list"",&#xA;  items: [""item_001"", ""item_002""]&#xA;}&#xA;&#xA;Item&#xA;{&#xA;  id: ""item_001"",&#xA;  name: ""Item 001""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to have the following result when querying <code>list0001</code></p>&#xA;&#xA;<pre><code>{&#xA;  id: ""list0001"",&#xA;  title: ""My First list"",&#xA;  items: [&#xA;    {&#xA;      id: ""item_001"",&#xA;      name: ""Item 001""&#xA;    },&#xA;    {&#xA;      id: ""item_002"",&#xA;      name: ""Item 002""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I know that I can have the list id on Item type and then I use that id to fetch the items but I want to have it as described above by getting the items from the set of the string in List type. I want to know whether it's feasible. if so, what are the mapping templates for both queries.</p>&#xA;&#xA;<p><strong>N.B:</strong> I'm using serverless for my project with <code>serverless-appsync-plugin</code> plugin. </p>&#xA;",4512924,,13302,2019-11-19 21:55:02,2019-11-21 19:18:10,Can I query objects based on SS in nested types in AppSync,<graphql><aws-appsync>,1,0,0,2019-11-12 10:57:56
58835312,1,,,2,837,"<p>Following AWS documentation (<a href=""https://aws-amplify.github.io/docs/cli-toolchain/graphql"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/cli-toolchain/graphql</a> > Many-To-Many Connections), I try to understand the workaround example they provide for many to many connections (which seems not supported yet by Amplify).</p>&#xA;&#xA;<p>The schema is:</p>&#xA;&#xA;<pre><code>type Post @model {&#xA;  id: ID!&#xA;  title: String!&#xA;  editors: [PostEditor] @connection(name: ""PostEditors"")&#xA;}&#xA;&#xA;# Create a join model and disable queries as you don't need them&#xA;# and can query through Post.editors and User.posts&#xA;type PostEditor @model(queries: null) {&#xA;  id: ID!&#xA;  post: Post! @connection(name: ""PostEditors"")&#xA;  editor: User! @connection(name: ""UserEditors"")&#xA;}&#xA;&#xA;type User @model {&#xA;  id: ID!&#xA;  username: String!&#xA;  posts: [PostEditor] @connection(name: ""UserEditors"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Using AWS AppSync Console, so far I'm able to:</p>&#xA;&#xA;<p>Create a user using this mutation:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  createUser(input:{&#xA;    username: ""theUserName""&#xA;  }){&#xA;    username&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Create a post using this mutation:</p>&#xA;&#xA;<pre><code>mutation {&#xA;  createPost(input: {&#xA;    title: ""second post""&#xA;  }){&#xA;    title&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But I don't understand how to add multiple editors to a post? So far, I'm able to add editors to a post using PostEditor join, but in their example, there is this statement (which I don't understand very well), so I don't think this is the good approach:</p>&#xA;&#xA;<pre><code># Create a join model and disable queries as you don't need them&#xA;# and can query through Post.editors and User.posts&#xA;</code></pre>&#xA;&#xA;<p>So I guess that using this join model to perform mutation is not what I have to do. Nevertheless, to be able to create this relation between a post and an editor, I created a mutation (retrieving ""postEditorPostId"" and ""postEditorEditorId"" from both previous mutations):</p>&#xA;&#xA;<pre><code>mutation {&#xA;  createPostEditor(input:{&#xA;    postEditorPostId: ""XXX-XXX-XXX""&#xA;    postEditorEditorId: ""YYY-YYY-YYY""&#xA;  }){&#xA;    post {&#xA;      title&#xA;    }&#xA;    editor {&#xA;      username&#xA;      posts {&#xA;        items {&#xA;          post {&#xA;            title&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Do I need to perform this previous mutation everytime I add a new editor (so the mutation will remain the same but ""postEditorEditorId"" will change? it seems obviously not a scalable approach, if for example the UI allows an admin to add 50 or more new editors (so it will need 50 mutations).</p>&#xA;&#xA;<p>Finally I can get the information I need using this query:</p>&#xA;&#xA;<pre><code>query{&#xA;  getUser(id: ""YYY-YYY-YYY""){&#xA;    username&#xA;    posts {&#xA;      items {&#xA;        post {&#xA;          title&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is there a better way (I suppose) to add editors to a post?</p>&#xA;&#xA;<p>edit:</p>&#xA;&#xA;<p>Using a promise, I am able to add multiple editors to a post, but it involves to execute as mutation as mutations as there are users:</p>&#xA;&#xA;<pre><code>const users = [{id: ""U1"", username: ""user1""}, {id: ""U2"", username: ""user2""}];&#xA;const post = { id: ""P1"", title: ""Post 1"" };&#xA;/*&#xA;    After creating two users and a post using the approriate mutations&#xA;    Using the CreatePost join below to make user1 and user2 editor on Post 1&#xA;*/&#xA;function graphqlCreatePostEditor(editorID) {&#xA;    return new Promise((resolve, reject) =&gt; {&#xA;        resolve(&#xA;            API.graphql(graphqlOperation(createPostEditor, {&#xA;                input: {&#xA;                    postID: post.id,&#xA;                }&#xA;            }))&#xA;        )&#xA;    })&#xA;}&#xA;&#xA;let promises = users.map(user=&gt; {&#xA;    return graphqlCreatePostEditor(user.id)&#xA;        .then(e =&gt; {&#xA;            console.log(e)&#xA;            return e;&#xA;        })&#xA;    });&#xA;&#xA;Promise.all(promises)&#xA;    .then(results =&gt; {&#xA;        console.log(results)&#xA;    })&#xA;    .catch(e =&gt; {&#xA;        console.error(e);&#xA;    })&#xA;</code></pre>&#xA;&#xA;<p>Still looking if there is a way to pass an array in a sigle mutation.</p>&#xA;",4051111,,4051111,2019-11-14 20:52:23,2021-07-07 23:34:24,AWS AppSync - Implement many to many connections using 1-M @connections and a joining @model,<database><amazon-web-services><graphql><aws-amplify><aws-appsync>,1,1,0,2019-11-13 10:41:57
58835565,1,58837819,,0,91,"<p>Say I have the following query:</p>&#xA;&#xA;<pre><code>Foo($account: String!) {&#xA;  foo(where: { account: $account }) {&#xA;    id&#xA;    bar&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>All good for now, but can I replace the <code>$account: String!</code> parameter with something like this:</p>&#xA;&#xA;<pre><code>Foo($where: Object!) {&#xA;  foo(where: $where) {&#xA;    id&#xA;    bar&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>?</p>&#xA;",3873510,,,,2019-11-13 13:39:27,Pass the `where` object to a dynamic GraphQL query,<graphql>,1,0,0,2019-11-13 10:56:07
58842457,2,,58842327,1,,"<p>Debugging lambda functions is hard! You can try digging through logs if they are configured through CloudWatch, but that won't always give you a workable stack trace, and it's challenging to find the exact invocation you're looking for.</p>&#xA;&#xA;<p>Have you tried deploying with the Serverless Framework Dashboard? That will help give you a full stack trace along with your logs. You can get started by simply running the <code>serverless</code> command in your application root directory.</p>&#xA;&#xA;<p>More information is available <a href=""https://serverless.com/framework/docs/dashboard/"" rel=""nofollow noreferrer"">here</a></p>&#xA;&#xA;<p>Full disclosure - I work for Serverless Inc. on the Serverless Framework.</p>&#xA;",12160881,,12160881,2019-11-13 17:30:16,2019-11-13 17:30:16,"",,0,8,0,2019-11-13 17:23:30
58844501,2,,58816816,2,,"<p>UPDATE:</p>&#xA;&#xA;<p>It seams that there is bug with amplify cli version <code>3.15.0</code>. When there is multi authentication enabled in the API like in our example, GraphQL Transformer doesn't generate required authentication directives to support all authentication types in our API.</p>&#xA;&#xA;<p>The workaround for this issue would be to create custom Subscription for the API.</p>&#xA;&#xA;<p>If you are experiencing a similar issue please refer to this GitHub issue => <a href=""https://github.com/aws-amplify/amplify-cli/issues/2715"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/2715</a></p>&#xA;",8643387,,,,2019-11-13 19:45:44,"",,0,0,0,2019-11-13 19:45:44
58860811,2,,54585565,1,,"<p>You need both <code>RenameTypes</code> and <code>RenameRootFields</code> transforms, &#xA;<code>RenameTypes</code> to transform the typenames</p>&#xA;&#xA;<p>from: <code>Permission</code> and <code>Relation</code> (The colliding types), </p>&#xA;&#xA;<p>to: <code>schema1_Permission</code>, <code>schema2_Permission</code></p>&#xA;&#xA;<p>and: <code>schema1_Relation</code>, <code>schema1_Relation</code></p>&#xA;&#xA;<p><code>RenameRootFields</code> to transform the Query names for those types</p>&#xA;&#xA;<p>from: <code>permission(id: ID!): Permission</code></p>&#xA;&#xA;<p>to: <code>schema1_permission(id: ID!): schema1_Permission</code> and <code>schema2_permission(id: ID!): schema2_Permission</code></p>&#xA;&#xA;<p>and: <code>permissions: [Permission]</code></p>&#xA;&#xA;<p>to: <code>schema1_permissions: [schema1_Permission]</code> and <code>schema2_permissions: [schema2_Permission]</code></p>&#xA;&#xA;<p>The transform would be something like:</p>&#xA;&#xA;<pre><code>const {&#xA;  makeExecutableSchema,&#xA;  addMockFunctionsToSchema,&#xA;  transformSchema,&#xA;  RenameTypes,&#xA;  RenameRootFields&#xA;} = require('graphql-tools');&#xA;&#xA;const schema1 = makeExecutableSchema({&#xA;  typeDefs: `&#xA;    type Permission {&#xA;      id: ID!&#xA;      text: String&#xA;      relation: Relation&#xA;    }&#xA;&#xA;    type Query {&#xA;      permissions: [Permission]&#xA;      permission(id: ID!): Permission&#xA;    }&#xA;&#xA;    enum Relation {&#xA;      ONE&#xA;      TWO&#xA;      THREE&#xA;    }&#xA;  `&#xA;});&#xA;&#xA;addMockFunctionsToSchema({ schema: schema1 });&#xA;&#xA;const renamedSchema1 = transformSchema(&#xA;  schema1,&#xA;  [&#xA;    new RenameTypes(name =&gt; {&#xA;      if (name == 'Relation' || name == 'Permission') {&#xA;        return 'schema1_' + name&#xA;      } else {&#xA;        return name&#xA;      }&#xA;    }, { renameBuiltins: false, renameScalars: true }),&#xA;    new RenameRootFields((_op, name) =&gt; {&#xA;      return name.includes('ermission') ? `schema1_${name}` : name&#xA;    })&#xA;  ]&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>references:&#xA;<a href=""https://www.apollographql.com/docs/graphql-tools/schema-transforms/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/graphql-tools/schema-transforms/</a>&#xA;<a href=""https://www.apollographql.com/docs/graphql-tools/schema-stitching/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/graphql-tools/schema-stitching/</a></p>&#xA;",5798995,,,,2019-11-14 15:52:19,"",,0,0,0,2019-11-14 15:52:19
58875189,2,,58875004,0,,<p>This is not a problem by definition. It looks like client-A has privileges to see 70 additional results in comparison to client-B.</p>&#xA;,436560,,,,2019-11-15 10:36:25,"",,0,0,0,2019-11-15 10:36:25
58907747,2,,58834916,1,,"<p>One can filter their queries over the connection by adding the desired filter field to their respective <code>ModelFilterInput</code>'s. Amplify with Appsync does a great job by generating the resolver and wiring them up to their specific tables just from the schema we define. I, wonder why the generated <code>ModelFilterInput</code>'s for the tables don't include the connection field.</p>&#xA;&#xA;<p>For the schema above defined i have modified the generated code as follows:</p>&#xA;&#xA;<pre><code>input ModelWorkerFilterInput {&#xA;    id: ModelIDFilterInput&#xA;    name: ModelStringFilterInput&#xA;    source: ModelStringFilterInput&#xA;    phone: ModelStringFilterInput&#xA;    workerServiceId: ModelStringFilterInput # added For @connection(name: ""ServiceWorker"")&#xA;    workerDistrictId: ModelStringFilterInput # added For @connection(name: ""DistrictWorker"") &#xA;    and: [ModelWorkerFilterInput]&#xA;    or: [ModelWorkerFilterInput]&#xA;    not: ModelWorkerFilterInput&#xA;} &#xA;</code></pre>&#xA;",2940788,,2940788,2019-11-18 03:54:25,2019-11-18 03:54:25,"",,0,0,0,2019-11-18 03:49:21
58908546,1,,,1,610,"<p>Just for some context: Currently using AppSync + React + Apollo, and I'm trying to send 38 - 40 items to update via AppSync's Apache VTL.</p>&#xA;&#xA;<p>I knew that DynamoDB limited the number of items inserted to <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_BatchWriteItem.html"" rel=""nofollow noreferrer"">25 per request</a>, but I thought AppSync didn't have those limitations. Guess I'm wrong, because my request fails whenever I send more than 25 items (26+). </p>&#xA;&#xA;<p>Here's my VTL script:</p>&#xA;&#xA;<pre class=""lang-java prettyprint-override""><code>#set($isTenantValid = false)&#xA;#foreach($tenant in $context.identity.claims[""https://app.schon.io/tenants""])&#xA;    #if($tenant == $ctx.args.tenantId)&#xA;        #set($isTenantValid = true)&#xA;    #end&#xA;#end&#xA;&#xA;## Needs to verify if the employee has permission to insert students.&#xA;&#xA;#if(!$isTenantValid) &#xA;    $utils.unauthorized()&#xA;#end&#xA;&#xA;&#xA;#set($itemsToPut=[])&#xA;#set($pk=""tenant:${ctx.args.tenantId}"")&#xA;#set($userSK=""tenant:${ctx.args.tenantId}:school-year:${ctx.args.schoolYear}"")&#xA;&#xA;#foreach($student in $ctx.args.students)&#xA;    #set($studentId = ""${util.autoId()}"")&#xA;    #set($sk=""school-year:${ctx.args.schoolYear}:student:${studentId}"")&#xA;    #set($userPK=""student:${studentId}"")&#xA;&#xA;    #set($item = {&#xA;    ""pk"": $pk,&#xA;    ""sk"": $sk,&#xA;    ""id"": $studentId,&#xA;    ""userPK"": $userPK,&#xA;    ""userSK"": $userSK,&#xA;    ""name"": {&#xA;        ""firstName"" : $student.name.firstName,&#xA;        ""lastName"" : $student.name.lastName,&#xA;        ""fullName"": ""${student.name.firstName} ${student.name.lastName}""&#xA;    },&#xA;    ""schoolYear"": $ctx.args.schoolYear,&#xA;    ""createdAt"": ${util.time.nowEpochSeconds()},&#xA;    ""updatedAt"": ${util.time.nowEpochSeconds()},&#xA;    ""gender"": $student.gender,&#xA;    ""retired"": $student.retired&#xA;    })&#xA;    #if(""${student.diseases}"" != """")&#xA;        $util.qr($item.add(""diseases"", $student.diseases)) &#xA;    #end&#xA;    #if(""${student.email}"" != """")&#xA;        $util.qr($item.add(""email"", $student.email)) &#xA;    #end&#xA;    #if(""${student.birthdate}"" != """")&#xA;        $util.qr($item.add(""birthdate"", $student.birthdate)) &#xA;    #end&#xA;&#xA;    $util.qr($itemsToPut.add($util.dynamodb.toMapValues($item)))&#xA;#end&#xA;&#xA;&#xA;{&#xA;    ""version"" : ""2018-05-29"",&#xA;    ""operation"" : ""BatchPutItem"",&#xA;    ""tables"" : {&#xA;        ""SchonDB"": $utils.toJson($itemsToPut)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>In this case, will I need to offload it to a Lambda and do the send and retry logic per 25 items?</p>&#xA;",1057052,,,,2019-11-18 21:26:02,Is it possible to insert more than 25 items on DynamoDB using BatchPutItem (BatchWriteItem) using AppSync VTL?,<reactjs><amazon-dynamodb><apollo><aws-appsync><vtl>,1,3,0,2019-11-18 05:38:01
58922484,2,,53723792,0,,"<p>I would say that you are missing permission to create user, you can test it going to <code>admin/people/permissions</code> and scroll to the bottom of the page and there you can find permission for creating user, add that permission to the anonymous user and then try to execute your mutation again. Hope this works. </p>&#xA;",10687594,,,,2019-11-18 20:33:40,"",,0,0,0,2019-11-18 20:33:40
58975094,2,,58973824,0,,"<p>Try this: </p>&#xA;&#xA;<pre><code>let Account = args.Account&#xA;let condition = { $and: [ {  UserID: args.UserID },{ Status : 1 }]}, { 'Account.Email': args.Account.Email }] }; // here check email in sub document&#xA;UserSettings.updateOne(condition, { $set: { Account: Account } }).exec((err, data) =&gt; {&#xA;    if (err || data.nModified == 0) {&#xA;        UserSettings.updateOne({ UserID: args.UserID  }, { $push: { Account: Account } }).exec((err, data) =&gt; {&#xA;             return {'message':'Updated successfully','data':data}; // Send proper response as per your need&#xA;        });&#xA;    }&#xA;    else {&#xA;             return {'message':'Failed'};// Send proper response as per your need&#xA;    }&#xA;});&#xA;</code></pre>&#xA;",3820189,,,,2019-11-21 12:29:14,"",,0,5,0,2019-11-21 12:29:14
58982245,2,,58817239,3,,"<p>You could set this up with two tables, <code>ListTable</code> and <code>ItemTable</code>.<br>&#xA;The <code>ListTable</code> would store the information about lists. An example entry would look like:</p>&#xA;&#xA;<pre><code>{&#xA;    ""id"": ""list_0000"",&#xA;    ""title"": ""List0""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The <code>ItemTable</code> would be used to to relate Items to the List that they belong to. An example entry would look like:</p>&#xA;&#xA;<pre><code>{&#xA;    ""id"": ""item_0001"",&#xA;    ""name"": ""item1"",&#xA;    ""listId"": ""list_0000""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>You would need to modify your schema as follows:</p>&#xA;&#xA;<pre><code>type List {&#xA;  id: String!&#xA;  title: String!&#xA;  items: [Item!]!       ## A List of Items&#xA;}&#xA;&#xA;type Item {&#xA;  id: String!&#xA;  name: String!&#xA;}&#xA;&#xA;type Query {&#xA;  getList(listId: ID!): List&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This setup would request setting up <strong>2 resolvers</strong>, 1 on <code>getList</code> and 1 on the field <code>items</code> of the type <code>List</code>.</p>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/zWe5f.png"" alt=""Schema Query"">&#xA;<img src=""https://i.stack.imgur.com/RHZbw.png"" alt=""List Type Schema""></p>&#xA;&#xA;<p>Your request mapping template for <code>getList</code> would look like:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""GetItem"",&#xA;    ""key"": {&#xA;        ""id"": $util.dynamodb.toDynamoDBJson($ctx.args.listId),&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The response mapping template would be:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>$util.toJson($ctx.result)&#xA;</code></pre>&#xA;&#xA;<p>Your request mapping template for <code>items</code> of the type <code>List</code> would look like:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2018-05-29"",&#xA;    ""operation"" : ""Query"",&#xA;    ""query"" : {&#xA;        ""expression"": ""listId = :listId"",&#xA;        ""expressionValues"" : {&#xA;            "":listId"" : { ""S"": ""$ctx.source.id"" }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The response mapping template would be:</p>&#xA;&#xA;<pre><code>$util.toJson($ctx.result.items)&#xA;</code></pre>&#xA;&#xA;<p>Running the query:</p>&#xA;&#xA;<pre><code>query {&#xA;  getList(listId: ""list_0000"") {&#xA;    id&#xA;    title&#xA;    items {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Would have a result like:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getList"": {&#xA;      ""id"": ""list_0000"",&#xA;      ""title"": ""List0"",&#xA;      ""items"": [&#xA;        {&#xA;          ""id"": ""item_0001"",&#xA;          ""name"": ""item1""&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",11376091,,,,2019-11-21 19:18:10,"",,0,0,0,2019-11-21 19:18:10
59027023,1,59029405,,0,213,"<p>Currently, I'm working with Postgraphile and I need to enforce permissions at data/field level.</p>&#xA;&#xA;<p>For example, I have a <strong>carmodel</strong> table, with my query is something like:</p>&#xA;&#xA;<pre><code>{&#xA;   carmodel&#xA;      {  &#xA;         id&#xA;         name&#xA;         description&#xA;      }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Well, in this table I have ids (1 = AUDI, 2 = GM, 3 = BMW)&#xA;The current user (on roles/claims) has permission only to see (1=AUDI/3=BMW)</p>&#xA;&#xA;<p>There is a way to enforce permissions based on field data? And return only data filtered on the user permissions?</p>&#xA;",8166117,,,,2019-11-25 10:08:42,Field Authorization level with Postgraphile,<graphql><postgraphile>,1,0,0,2019-11-25 07:30:08
59029405,2,,59027023,2,,"<p>Yes; row-level security can define this declaratively. Something like:</p>&#xA;&#xA;<pre class=""lang-sql prettyprint-override""><code>create policy audi_bmw on carmodel for select using (&#xA;  id in (1, 3)&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>I'm guessing this permission comes from another table though; so it might be more like:</p>&#xA;&#xA;<pre class=""lang-sql prettyprint-override""><code>create policy audi_bmw on carmodel for select using (&#xA;  id in (&#xA;    select car_model_id&#xA;    from user_carmodel_permissions&#xA;    where user_id = current_user_id()&#xA;  )&#xA;);&#xA;&#xA;</code></pre>&#xA;&#xA;<p>assuming you already have a <code>current_user_id</code> function, something like:</p>&#xA;&#xA;<pre class=""lang-sql prettyprint-override""><code>create function current_user_id() returns int as $$&#xA;  select nullif(current_setting('jwt.claims.user_id', true), '')::int;&#xA;$$ language sql stable;&#xA;</code></pre>&#xA;&#xA;<p>Check out <a href=""https://learn.graphile.org/docs/PostgreSQL_Row_Level_Security_Infosheet.pdf"" rel=""nofollow noreferrer"">our row level security cheatsheet</a>.</p>&#xA;",141284,,,,2019-11-25 10:08:42,"",,0,0,0,2019-11-25 10:08:42
59036414,2,,59036251,0,,"<p>You can access each user object with angular function forEach, in your case it's will be something like this</p>&#xA;&#xA;<pre><code>this.apollo.watchQuery&lt;any&gt;(...).valueChanges.subscribe(&#xA;  res=&gt;{ //res here is Users&#xA;    res.forEach(&#xA;    user=&gt;{&#xA;    console.log(user.name);&#xA;  }&#xA;})&#xA;</code></pre>&#xA;",4758224,,4758224,2019-11-25 17:08:19,2019-11-25 17:08:19,"",,0,4,0,2019-11-25 16:40:29
59044115,2,,59043089,0,,"<p>The easier way to do this on AWS is by using a EC2 load balancer. You just need to create an application load balancer and add your instance to the target group. Once you have the load balancer created, you can apply the SSL certificate easily on your load balancer. This approach doesn't require you to change your application code at all.</p>&#xA;&#xA;<p>Please refer this docs.&#xA;<a href=""https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-application-load-balancer.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-application-load-balancer.html</a></p>&#xA;&#xA;<p>If you don't want to use a load balancer, you need to apply the SSL certificate on the application level. Hope this helps.</p>&#xA;",1448679,,,,2019-11-26 05:08:51,"",,0,6,0,2019-11-26 05:08:51
59066224,1,,,2,424,"<p>I am building a simple React Native app. to test AppSync APIs. I am able to do queries, mutations ; but subscriptions don't seem to work. I am trying this out on an Android Emulator.</p>&#xA;&#xA;<p>Here's how i am building my client and creating a subscription.</p>&#xA;&#xA;<pre><code>    const client = new AWSAppSyncClient({&#xA;      url: awsconfig.aws_appsync_graphqlEndpoint,&#xA;      region: awsconfig.aws_appsync_region,&#xA;      auth: {&#xA;        type: AUTH_TYPE.API_KEY, // or type: awsconfig.aws_appsync_authenticationType,&#xA;        apiKey: awsconfig.aws_appsync_apiKey,&#xA;      }&#xA;    });&#xA;&#xA;    subscription = client.subscribe({ query: gql(onCreateBook) }).subscribe({&#xA;        next: data =&gt; {&#xA;          console.log(""got a book---&gt;"");&#xA;        },&#xA;        error: error =&gt; {&#xA;          console.warn(""errror getting book"");&#xA;        }&#xA;      });&#xA;&#xA;</code></pre>&#xA;&#xA;<p>Here is my schema(relevant parts) &amp; subscriptions gql(auto generated by codeGen)</p>&#xA;&#xA;<p><strong>Schema</strong></p>&#xA;&#xA;<pre><code>type Book {&#xA;    title: String!&#xA;    description: String&#xA;}&#xA;&#xA;type Mutation {&#xA;    createBook(input: CreateBookInput!): Book&#xA;    updateBook(input: UpdateBookInput!): Book&#xA;    deleteBook(input: DeleteBookInput!): Book&#xA;}&#xA;&#xA;type Query {&#xA;    getBook(title: String!): Book&#xA;    listBooks(filter: TableBookFilterInput, limit: Int, nextToken: String): BookConnection&#xA;}&#xA;&#xA;type Subscription {&#xA;    onCreateBook(title: String, description: String): Book&#xA;        @aws_subscribe(mutations: [""createBook""])&#xA;    onUpdateBook(title: String, description: String): Book&#xA;        @aws_subscribe(mutations: [""updateBook""])&#xA;    onDeleteBook(title: String, description: String): Book&#xA;        @aws_subscribe(mutations: [""deleteBook""])&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>subscriptions gql</strong></p>&#xA;&#xA;<pre><code>// eslint-disable&#xA;// this is an auto generated file. This will be overwritten&#xA;&#xA;export const onCreateBook = `subscription OnCreateBook($title: String, $description: String) {&#xA;  onCreateBook(title: $title, description: $description) {&#xA;    title&#xA;    description&#xA;  }&#xA;}&#xA;`;&#xA;export const onUpdateBook = `subscription OnUpdateBook($title: String, $description: String) {&#xA;  onUpdateBook(title: $title, description: $description) {&#xA;    title&#xA;    description&#xA;  }&#xA;}&#xA;`;&#xA;export const onDeleteBook = `subscription OnDeleteBook($title: String, $description: String) {&#xA;  onDeleteBook(title: $title, description: $description) {&#xA;    title&#xA;    description&#xA;  }&#xA;}&#xA;`;&#xA;&#xA;</code></pre>&#xA;&#xA;<p><strong>Note</strong> : I have verified that subscriptions are working fine on firing a mutation in AWS Console, but i cant see any errors in ReactNative app.</p>&#xA;",895429,,895429,2019-11-27 09:24:48,2019-11-27 09:24:48,"Appsync Subscriptions not working , but queries and mutations are working fine",<android-emulator><react-native><subscription><aws-appsync><graphql-tag>,0,0,0,2019-11-27 08:43:28
59079416,2,,58962945,0,,"<p>When AWS Lambda imports your file, the export isn't available yet. That's why it complains that your handler is not a function (because it is actually <code>undefined</code> at that time it is being imported).</p>&#xA;&#xA;<p>Here are a couple of suggested solutions:</p>&#xA;&#xA;<p><strong>1. Use only <code>apollo-server-lambda</code> and use <a href=""https://github.com/dherault/serverless-offline"" rel=""nofollow noreferrer""><code>serverless-offline</code></a> for local development.</strong> This way your handler code is exactly the same as what you have in Lambda.</p>&#xA;&#xA;<pre><code>const { ApolloServer: ApolloServerLambda } = require(""apollo-server-lambda"");&#xA;const { typeDefs, resolvers, connect } = require(""./schema.js"");&#xA;&#xA;const server = new ApolloServerLambda({&#xA;  typeDefs,&#xA;  resolvers,&#xA;  playground: true,&#xA;  introspection: true,&#xA;  cors: {&#xA;    origin: ""*"",&#xA;    credentials: true&#xA;  },&#xA;  context: ({ event, context }) =&gt; ({&#xA;    headers: event.headers,&#xA;    functionName: context.functionName,&#xA;    event,&#xA;    context&#xA;  })&#xA;});&#xA;&#xA;exports.graphqlHandler = server.createHandler();&#xA;</code></pre>&#xA;&#xA;<p><strong>2. Use <code>apollo-server-lambda</code> in your Lambda but use <code>apollo-server</code> in another file (e.g. local.js).</strong>. Then, you just use <code>node local.js</code> for local development. No need for that <code>process.env.USERNAME</code> check that you do at the end.</p>&#xA;",1252647,,,,2019-11-27 22:43:16,"",,0,1,0,2019-11-27 22:43:16
59119967,2,,50596390,0,,"<p>I had a similar issue.</p>&#xA;&#xA;<p>What happened to me was a problem with an update resolver. I was updating a field that was used as GSI (Global Secondary Index). But I was not updating the GSI, so when query by GSI the index exists but the key for that attribute had changed.</p>&#xA;&#xA;<p>If you are using Dynamo DB, you can start debugging there. You can check the item and see if you have any reference to the primary key or the indexes.</p>&#xA;",5116210,,,,2019-11-30 20:27:50,"",,0,0,0,2019-11-30 20:27:50
59145134,2,,59136323,0,,"<p>This sounds very similar to <a href=""https://stackoverflow.com/questions/55132782/appsync-graphql-how-to-filter-a-list-by-nested-value"">Appsync &amp; GraphQL: how to filter a list by nested value</a>, in that the default Amplify codegen only generates top-level filters/limits.</p>&#xA;&#xA;<p>There's a feature request around this here that you may want to upvote &amp; comment on: <a href=""https://github.com/aws-amplify/amplify-cli/issues/2311"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/2311</a></p>&#xA;&#xA;<p>Otherwise, there isn't a way to do this out-of-the-box yet without modifying the VTL templates.</p>&#xA;",194290,,,,2019-12-02 18:59:15,"",,0,0,0,2019-12-02 18:59:15
59149488,1,59150518,,1,1241,"<p>I have a GraphQL query called <code>myAccounts</code> which returns an array of accounts.  When I go to the Playground and call the query:</p>&#xA;&#xA;<pre><code>{&#xA;    accounts {&#xA;        email&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get this result:</p>&#xA;&#xA;<pre><code>""data"": {&#xA;    ""accounts"": [&#xA;        {&#xA;            ""email"": ""zach@email-one.com"",&#xA;        },&#xA;        {&#xA;            ""email"": ""zach@email-two.com"",&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>However, when I am in my Component, <code>vue-apollo</code> returns two items in the array, but seems to overwrite the second item with the first.  Here is the query (in <code>MyAccounts.gql</code>):</p>&#xA;&#xA;<pre><code>query myAccounts {&#xA;    accounts: myAccounts {&#xA;        email&#xA;    }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>and here is the Apollo query in the component:</p>&#xA;&#xA;<pre><code>import MY_ACCOUNTS_QUERY from '~/apollo/queries/MyAccounts'&#xA;...&#xA;apollo: {&#xA;    accounts: {&#xA;        query: MY_ACCOUNTS_QUERY,&#xA;        result(data) {&#xA;            console.log(JSON.stringify(data))&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>and here is what <code>vue-apollo</code> logs out through the <code>result</code>:</p>&#xA;&#xA;<pre><code>{&#xA;   ""data"":{&#xA;      ""accounts"":[&#xA;         {&#xA;            ""email"":""zach@email-one.com"",&#xA;            ""__typename"":""Account""&#xA;         },&#xA;         {&#xA;            ""email"":""zach@email-one.com"",&#xA;            ""__typename"":""Account""&#xA;         }&#xA;      ]&#xA;   },&#xA;   ""loading"":false,&#xA;   ""networkStatus"":7,&#xA;   ""stale"":false&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Expected behavior</strong>&#xA;I would expect the data returned in the Playground to be identical to what <code>vue-apollo</code> is fetching.</p>&#xA;&#xA;<p><strong>Versions</strong>&#xA;vue: <code>2.6.10</code>&#xA;vue-apollo: <code>@nuxtjs/apollo: 4.0.0-rc18</code></p>&#xA;&#xA;<p><strong>Additional context</strong>&#xA;I thought the <code>result</code> hook would be the best way to debug, but any other suggestions gladly welcomed.  I assumed that this was a bug in our code, but I cannot figure out what could be causing the repetition (and mismatch).</p>&#xA;",1325761,,,,2019-12-03 05:10:37,Is it possible for vue-apollo to return different results from the Playground?,<graphql><apollo-client><nuxt.js><vue-apollo><graphql-playground>,2,0,0,2019-12-03 02:43:43
59149778,1,,,1,430,"<p>I'm using the <a href=""https://aws-amplify.github.io/docs/js/api#amplify-graphql-client"" rel=""nofollow noreferrer"">Amplify graphql client</a> in my project. After custom auth I have the Access Key ID and Secret Access Key.&#xA;I need to provide these to the Amplify configuration but I can find no documentation whatsoever about it. The closest documentation I've seen is :</p>&#xA;&#xA;<pre><code>const myAppConfig = {&#xA;    // ...&#xA;    'aws_appsync_graphqlEndpoint': 'https://xxxxxx.appsync-api.us-east-1.amazonaws.com/graphql',&#xA;    'aws_appsync_region': 'us-east-1',&#xA;    'aws_appsync_authenticationType': 'AWS_IAM',&#xA;    // ...&#xA;}&#xA;&#xA;Amplify.configure(myAppConfig);&#xA;</code></pre>&#xA;&#xA;<p>But it does not specify where should the credentials be entered.&#xA;They are specified for the AWS Appsync SDK but not the graphql client.</p>&#xA;&#xA;<p>Any assistance or insights are greatly appreciated.&#xA;Thanks</p>&#xA;",3902326,,,,2019-12-05 18:39:45,AWS Amplify graphql client IAM setup,<amazon-web-services><graphql><amazon-iam><aws-amplify><aws-appsync>,1,0,0,2019-12-03 03:28:05
59155656,1,,,0,1145,"<p>I'm trying to run this with errors:</p>&#xA;&#xA;<p>deletepair = async () => {</p>&#xA;&#xA;<pre><code>    const removePair = {&#xA;       id: 'id'&#xA;       pairIndex: 1,&#xA;    };&#xA;&#xA;    try {&#xA;       await API.graphql(graphqlOperation(mutations.removePairItem, {input: removePair}));&#xA;       console.log('done')&#xA;    }&#xA;    catch (err) {&#xA;        console.log('error: ', err)&#xA;    }   &#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>When i run deletepair() i get the error:</p>&#xA;&#xA;<pre><code>  error:  TypeError: Must provide Source. Received: undefined&#xA;</code></pre>&#xA;",10749925,,10749925,2019-12-09 20:01:29,2019-12-09 20:01:29,How to delete a row from DynamoDB with Amplify?,<javascript><graphql><amazon-dynamodb><aws-amplify><aws-appsync>,1,0,0,2019-12-03 11:04:06
59160475,1,,,0,279,"<p>I am trying to create a object relationship using Hasura GraphQL API. Followed the documentation <a href=""https://docs.hasura.io/1.0/graphql/manual/api-reference/schema-metadata-api/relationship.html#create-object-relationship"" rel=""nofollow noreferrer"">https://docs.hasura.io/1.0/graphql/manual/api-reference/schema-metadata-api/relationship.html#create-object-relationship</a>. This is what I did.</p>&#xA;&#xA;<pre><code>{&#xA;  ""type"": ""create_object_relationship"",&#xA;    ""args"": {&#xA;        ""table"": ""article"",&#xA;        ""name"": ""article_detail"",&#xA;        ""using"": {&#xA;            ""manual_configuration"" : {&#xA;                ""remote_table"" : ""article_detail"",&#xA;                ""column_mapping"" : {&#xA;                    ""id"" : ""article_id""&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am getting syntax error <strong>""Expected Name, found String 'type'""</strong></p>&#xA;&#xA;<p>Need help what I am doing wrong ?</p>&#xA;",6681351,,6681351,2019-12-03 15:55:49,2019-12-03 15:55:49,"GraphQL type query: Getting error ""Expected Name, found String 'type'""",<graphql><hasura>,0,2,0,2019-12-03 15:33:11
59221477,2,,58926131,0,,"<p>Thank you for reporting this! This is a bug in the way the C# completion list infers the types of lambda parameters when the lambda is being passed as an argument. I've posted a minimal standalone repro <a href=""https://github.com/dotnet/roslyn/issues/40216#issuecomment-562774125"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;&#xA;<p>In your example, completion should work as expected if you include the <code>description</code> argument (thus aligning the <code>resolve</code> argument with the corresponding <code>resolve</code> parameter on the other side). Can you please give this a try?</p>&#xA;",387777,,387777,2019-12-06 23:40:21,2019-12-06 23:40:21,"",,0,2,0,2019-12-06 23:12:28
59263185,1,59263517,,1,107,"<p>I am new to GraphQl and wondering how do I add the query variables panel in the Graphql interface? I read many docs and looks like they all have the query variables panel by default, but not my case, any ideas? tks.</p>&#xA;&#xA;<p>My graphql view&#xA;<a href=""https://i.stack.imgur.com/dVU0p.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/dVU0p.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Expected graphql view&#xA;<a href=""https://i.stack.imgur.com/8DezP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8DezP.png"" alt=""enter image description here""></a></p>&#xA;",7347939,,,,2019-12-10 09:01:23,graphql how to open query variables panel,<graphql>,1,0,0,2019-12-10 08:41:33
59287672,1,,,10,7655,"<p>I'm trying to call a service through Graphql with Postman. From my app (React) I can use all the services with no problem (so, they are running ok), but I want to test them alone with Postman.</p>&#xA;&#xA;<p>I'm using AppSync, this is my configuration:</p>&#xA;&#xA;<pre><code>const AppSyncConfig = {&#xA;  url: environments.configAws.graphql.aws_appsync_graphqlEndpoint,&#xA;  region: environments.configAws.graphql.aws_appsync_region,&#xA;  auth: {&#xA;    type: AUTH_TYPE.API_KEY,&#xA;    apiKey: environments.configAws.graphql.aws_appsync_apiKey,&#xA;  }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>The environments vars are this:</p>&#xA;&#xA;<pre><code>graphql: {&#xA;    aws_project_region: ""us-east-1"",&#xA;&#xA;    aws_appsync_graphqlEndpoint: ""https://XXXXXXXXXXXXX.appsync-api.us-east-1.amazonaws.com/graphql"",&#xA;    aws_appsync_region: ""us-east-1"",&#xA;    aws_appsync_authenticationType: ""API_KEY"",&#xA;    aws_appsync_apiKey: ""da2-XXXXXXXXXXXX""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the app use this to make a query:</p>&#xA;&#xA;<pre><code>const client = new AWSAppSyncClient(AppSyncConfig, {&#xA;  link: createAppSyncLink({ ...AppSyncConfig,&#xA;    resultsFetcherLink: ApolloLink.from([&#xA;      setContext((request, previousContext) =&gt; ({&#xA;        headers: { ...previousContext.headers,&#xA;          Authorization: localStorage.getItem('token') ? localStorage.getItem('token') : ''&#xA;        }&#xA;      })),&#xA;      createHttpLink({&#xA;        uri: AppSyncConfig.url&#xA;      })&#xA;    ])&#xA;  })&#xA;});&#xA;&#xA;const data_configs = client.readQuery({ query: query_configs });&#xA;</code></pre>&#xA;&#xA;<p>In Postman I have this config, but I'm getting an error:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/eGnzS.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/eGnzS.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>I took this code today, I haven't work before with Graphql (so neither with AppSync, ApolloLink, etc), but I ask in case it has a simple solution, or at least a hint for what should I check. Thanks.</p>&#xA;",3541320,,5052733,2020-01-08 13:28:24,2022-11-04 12:30:38,"Use Postman to test a service with GraphQL in AWS (AppSync, Apollo)",<react-apollo><graphql-js><aws-appsync>,5,0,0,2019-12-11 14:11:37
59295212,1,,,8,1436,"<p>I am using the AWS Amplify to create a website platform that functions mostly as a directory of its registered users with various attributes relating to the business domain. The two primary users for the platform will be registered users and normal unauthenticated users who will be able to list and filter the registered users based on their attributes such as <code>location</code>, <code>age</code>, etc. Registered users will be set all their attributes in the members area.</p>&#xA;&#xA;<p>Some of the attributes are stored in Cognito such as <code>name</code> and <code>address</code> and were setup using Amplify <a href=""https://aws-amplify.github.io/docs/js/authentication"" rel=""noreferrer"">Authentication</a>. These are fields I would like to be to query and mutate through the Amplify <a href=""https://aws-amplify.github.io/docs/js/authentication"" rel=""noreferrer"">GraphQL</a> capabilities.</p>&#xA;&#xA;<p>I can see there are cool authorization patterns that can be achieved with the <code>@auth</code> <a href=""https://aws-amplify.github.io/docs/cli-toolchain/graphql#graphql-transform"" rel=""noreferrer"">directive</a>.</p>&#xA;&#xA;<p>Is it possible to leverage GraphQL Transform such that I can create a model schema where some of the fields link to the Cognito User Pool and some are defined within the GraphQL schema so that they are queryable and mutable? In fact I would like to provide registered users with the facility to update all their fields except email. Or maybe there is some combination of services supported by Amplify that I can hook up together to achieve the same?</p>&#xA;&#xA;<p>I am new to the AWS Serveless ecosystem and it has been exciting so far!</p>&#xA;",1709981,,1709981,2019-12-13 11:58:05,2019-12-18 22:41:48,AWS Amplify GraphQL Schema that is linked to Cognito User Pool,<amazon-web-services><graphql><amazon-cloudformation><amazon-cognito><aws-amplify>,1,0,0,2019-12-11 22:39:51
59295288,2,,59287672,16,,<p>I believe the header name for the API KEY is not API_KEY but x-api-key.</p>&#xA;,6241856,,,,2019-12-11 22:46:43,"",,0,0,0,2019-12-11 22:46:43
59303487,1,,,6,3411,"<p>I'm running a tech stack of react -> graphQL -> appsync -> lambda -> go</p>&#xA;&#xA;<p>When I run my graphQL query from the client I recieve this error back:</p>&#xA;&#xA;<p><code>Unable to assume role arn:aws:iam::&lt;SOMENUMBER&gt;:role/service-role/MyRoleForMyLambda.</code></p>&#xA;&#xA;<p>In fact this was all running fine until I accidentally changed the function ARN and roles on my Datasource to other ones. I changed them back but now Appsync seems to be unable to find the role and function ARN. I tried creating a completely new Datasource but I have the same issue. Often the function ARN and/or roles don't appear in the dropdown and I enter them manually. Sometimes it lets me save without errors - other times when attempting to save the Datasource I get the helpful error message ""Error"". Sometimes after saving when I go to look at them again the function ARN field is blank unless I click on the 'not in drop down' link.</p>&#xA;&#xA;<p>I don't think the problem is with my role itself as it appears that appsync can't even assume the role to start with. I've read about trust policies as a solution but I don't know where to put them.</p>&#xA;&#xA;<p>Any help much appreciated.</p>&#xA;",11782878,,,,2019-12-12 17:51:39,AWS GraphQL Appsync - unable to assume role,<amazon-web-services><aws-lambda><graphql><aws-appsync>,1,0,0,2019-12-12 11:23:38
59310246,2,,59303487,11,,"<p>In your IAM console, you need to add the Appsync service as a trusted entity to the role you are trying to assume &#xA;<a href=""https://i.stack.imgur.com/TRhm6.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/TRhm6.png"" alt=""IAM Trusted Entity""></a></p>&#xA;&#xA;<p>Click edit trust relationship and enter the following:</p>&#xA;&#xA;<pre><code>{&#xA;  ""Version"": ""2012-10-17"",&#xA;  ""Statement"": [&#xA;    {&#xA;      ""Effect"": ""Allow"",&#xA;      ""Principal"": {&#xA;        ""Service"": ""appsync.amazonaws.com""&#xA;      },&#xA;      ""Action"": ""sts:AssumeRole""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;",10221416,,,,2019-12-12 17:51:39,"",,0,2,0,2019-12-12 17:51:39
59311798,1,59315812,,0,910,"<p>I simply want to use an @client (local cache) variable as a query parameter to my apollo server. The docs reference the @export directive (<a href=""https://www.apollographql.com/docs/react/data/local-state/#querying-local-state"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/react/data/local-state/#querying-local-state</a>)</p>&#xA;&#xA;<p>For some reason, I am unable to do something like</p>&#xA;&#xA;<pre><code>export const GET_COMPANY_DATA = gql`&#xA;  query GetCompanyData($id: ID!, $name: STRING!) {&#xA;    group @client @export(as: ""name"")&#xA;    getCompanyData(id: $id) {&#xA;      company {&#xA;        groups(name: $name) {&#xA;          data&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;;&#xA;</code></pre>&#xA;&#xA;<p>Both queries work individually, for example:</p>&#xA;&#xA;<pre><code>{&#xA;  group @client&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>returns a string as it should from the local cache</p>&#xA;&#xA;<pre><code>export const GET_COMPANY_DATA = gql`&#xA;  query GetCompanyData($id: ID!, $name: STRING!) {&#xA;    getCompanyData(id: $id) {&#xA;      company {&#xA;        groups(name: $name) {&#xA;          data&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;;&#xA;</code></pre>&#xA;&#xA;<p>returns the proper object type</p>&#xA;&#xA;<p>In the docs, they show this example with no reference to the schema:</p>&#xA;&#xA;<pre><code>const query = gql`&#xA;  query currentAuthorPostCount($authorId: Int!) {&#xA;    currentAuthorId @client @export(as: ""authorId"")&#xA;    postCount(authorId: $authorId) @client&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>What am I doing wrong? I feel like I am missing some fundamental concept...</p>&#xA;",12289196,,12289196,2019-12-13 01:37:21,2019-12-13 03:38:18,Unable to use @client @export variable in query in Apollo GraphQL,<graphql><apollo><react-apollo><apollo-client><apollo-server>,1,0,0,2019-12-12 19:51:12
59322149,1,59353332,,0,32,"<p>So I have a apollo  component that I wanna send variables to from event.target and so on, it's for a table with different cells I wanna be able to determine what cell is clicked. I found another stack owerflow post where they did something like this, where u inject the variables when you run the function rather then props to the apollo  component.</p>&#xA;&#xA;<p>but I can't get it work, am I missing something here or do I need to structure differently?</p>&#xA;&#xA;<p>This is a much bigger  but I have striped the example of alot of things that are not needed for the example.</p>&#xA;&#xA;<pre><code>    import { **CREATE_BOOKING**, } from ""../queries"";&#xA;&#xA;    const selectBooking = (e, **createBooking**) =&gt; {&#xA;&#xA;      **createBooking**({&#xA;        varibles: {&#xA;          $data: {&#xA;            payed: false,&#xA;            notified: false,&#xA;            activity: props.activity,&#xA;            activityId: props.id,&#xA;            time: moment(e.target.getAttribute(""time"")),&#xA;            cost,&#xA;            selected: true,&#xA;            durationMin&#xA;          }&#xA;        }&#xA;      });&#xA;    }&#xA;  };&#xA;&#xA;    return (&#xA;          &lt;Mutation mutation={**CREATE_BOOKING**} variables={I don't want to enter the variables here}&gt;&#xA;            {(**createBooking**, { data }) =&gt; (&#xA;              &lt;div className=""WeekCalender""&gt;&#xA;&#xA;                        {rows.map(row =&gt; {&#xA;                          return (&#xA;                            &lt;tr key={row}&gt;&#xA;                              &lt;td className=""WeekCalender__Cell""&gt;{row}&lt;/td&gt;&#xA;                              &lt;td&#xA;                                onClick={e =&gt; selectBooking(e, **createBooking**)}&#xA;                                time={getCurrentTime(0, row)}&#xA;                                className={checkIfBooked(&#xA;                                  0,&#xA;                                  row,&#xA;                                  props.activity.name,&#xA;                                  allBookings,&#xA;                                  props.currentBookings&#xA;                                )}&#xA;                              /&gt;&#xA;                            &lt;/tr&gt;&#xA;                          );&#xA;                        })}&#xA;                      &lt;/tbody&gt;&#xA;                    &lt;/table&gt;&#xA;                  &lt;/React.Fragment&gt;&#xA;                )}&#xA;              &lt;/div&gt;&#xA;            )}&#xA;          &lt;/Mutation&gt;&#xA;        );&#xA;</code></pre>&#xA;",11927333,,,,2019-12-16 09:01:47,Inject variables directly to a function passed on from React-Apollo <Mutation /> component and not as props,<reactjs><react-apollo>,1,0,0,2019-12-13 11:56:16
59328695,2,,57950689,-2,,<p>When you create roles you would need to also specify a user since you made it a requirement that can cause errors</p>&#xA;,10854390,,,,2019-12-13 19:27:05,"",,0,0,0,2019-12-13 19:27:05
59335232,1,60641622,,0,75,"<p>I have two types that are connected</p>&#xA;&#xA;<pre><code>type Auction @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  startingDate: AWSDateTime!&#xA;  createdAt: AWSDateTime!&#xA;  updatedAt: AWSDateTime!&#xA;  products: [Product] @connection(name: ""AuctionProducts"")&#xA;}&#xA;&#xA;type Product @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String!&#xA;  price: Int!&#xA;  ownerId: String!&#xA;  createdAt: AWSDateTime!&#xA;  updatedAt: AWSDateTime!&#xA;  auction: Auction @connection(name: ""AuctionProducts"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I would like to query an auction and the products related to it BUT filtered by ownerId&#xA;The idea is that a user could not see the products in an auction that doesn't belong to him.</p>&#xA;&#xA;<p>I would like to do it server side for security issue. I lost myself in filtering the products as if they were in the auction dynamoDB document but they are not.</p>&#xA;&#xA;<p>I have no idea anymore… Is that even possible ?</p>&#xA;",8152912,,,,2020-03-11 17:34:21,Filter subdocument in query result in App Sync,<amazon-web-services><graphql><aws-amplify><aws-appsync>,1,0,0,2019-12-14 12:47:26
59341471,1,59341771,,2,3624,"<p>I'm new to GraphQL. There is a requirement that query all the qualified data from CUSTOMERS table, which meets condition: GENDER == 'MALE' or 'AGE' >= 20. What GQL should looks like for it?  </p>&#xA;",1950216,,,,2022-06-13 15:27:59,How does GraphQL support AND-OR query conditions?,<graphql><graphql-java>,3,0,0,2019-12-15 05:37:13
59346789,1,59346856,,0,1017,"<p>I use GraphQL Transform as part of AWS Amplify. Now I want to create the following mutation. However, it seems the <code>to</code> integer is too long. Reading the documentation it should be able to be much longer. Do you know why I always receive the error: <code>Validation error of type WrongType: argument 'input.to' with value 'IntValue{value=49160381234}' is not a valid 'Int' @ 'createNumber</code></p>&#xA;&#xA;<pre><code>mutation createNumber {&#xA;  createNumber(input: {&#xA;    username: ""mymail@gmail.com""&#xA;    to: 49160381234&#xA;  }) {&#xA;    username&#xA;    to&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here my schema:</p>&#xA;&#xA;<pre><code>type Message&#xA;  @model&#xA;  @auth(rules: [{ allow: owner }])&#xA;  @key(fields: [""to"", ""from""]) # `to` as primary index and `from` as sort key.&#xA;  @key(&#xA;    name: ""byToByTimestamp""&#xA;    fields: [""to"", ""timestamp""]&#xA;    queryField: ""messagesByToByTimestamp""&#xA;  ) {&#xA;  to: Int!&#xA;  from: String!&#xA;  medium: String!&#xA;  messageBody: String!&#xA;  timestamp: Int!&#xA;}&#xA;&#xA;type Number&#xA;  @model&#xA;  @key(fields: [""to""]) # Each number can only exist once.&#xA;  @key(&#xA;    name: ""byUserByTo""&#xA;    fields: [""username"", ""to""]&#xA;    queryField: ""numberByUserByTo""&#xA;  ) {&#xA;  username: String!&#xA;  to: Int!&#xA;  messages: [Message] @connection(keyName: ""byToByTimestamp"", fields: [""to""])&#xA;}&#xA;&#xA;type User @model @key(fields: [""username""]) {&#xA;  username: String!&#xA;  numbers: [Number] @connection(keyName: ""byUserByTo"", fields: [""username""])&#xA;}&#xA;</code></pre>&#xA;",10419791,,,,2019-12-15 18:26:29,GraphQL: Integer too long? (AWS Amplify/GraphQL Transform),<graphql><aws-amplify>,1,0,0,2019-12-15 18:19:12
59353332,2,,59322149,1,,"<pre><code>import { CREATE_BOOKING, } from ""../queries"";&#xA;&#xA;    const selectBooking = async (e, createBooking) =&gt; {&#xA;&#xA;      await createBooking({&#xA;        varibles: {&#xA;          data: {&#xA;            payed: false,&#xA;            notified: false,&#xA;            activity: props.activity,&#xA;            activityId: props.id,&#xA;            time: moment(e.target.getAttribute(""time"")),&#xA;            cost,&#xA;            selected: true,&#xA;            durationMin&#xA;          }&#xA;        }&#xA;      });&#xA;    }&#xA;  };&#xA;&#xA;    return (&#xA;          &lt;Mutation mutation={CREATE_BOOKING}&gt;&#xA;            {(createBooking, { data }) =&gt; (&#xA;              &lt;div className=""WeekCalender""&gt;&#xA;&#xA;                        {rows.map(row =&gt; {&#xA;                          return (&#xA;                            &lt;tr key={row}&gt;&#xA;                              &lt;td className=""WeekCalender__Cell""&gt;{row}&lt;/td&gt;&#xA;                              &lt;td&#xA;                                onClick={e =&gt; selectBooking(e,createBooking)}&#xA;                                time={getCurrentTime(0, row)}&#xA;                                className={checkIfBooked(&#xA;                                  0,&#xA;                                  row,&#xA;                                  props.activity.name,&#xA;                                  allBookings,&#xA;                                  props.currentBookings&#xA;                                )}&#xA;                              /&gt;&#xA;                            &lt;/tr&gt;&#xA;                          );&#xA;                        })}&#xA;                      &lt;/tbody&gt;&#xA;                    &lt;/table&gt;&#xA;                  &lt;/React.Fragment&gt;&#xA;                )}&#xA;              &lt;/div&gt;&#xA;            )}&#xA;          &lt;/Mutation&gt;&#xA;        );&#xA;</code></pre>&#xA;",6597186,,,,2019-12-16 09:01:47,"",,0,0,0,2019-12-16 09:01:47
59380694,1,59412425,,1,136,"<p>Is there a way to conditionally set more than one AuthStrategy depending on a field in the table?</p>&#xA;&#xA;<p>Let's say I have a blog Post type:</p>&#xA;&#xA;<pre><code>type Post&#xA;  @model&#xA;  @auth(rules: [&#xA;    { allow: owner, operations: [read, update, delete] },&#xA;  ])&#xA;{&#xA;  id: ID!&#xA;  owner: String!&#xA;  visibility: Visibility!&#xA;  title: String!&#xA;  body: String!&#xA;  whitelist: [String!]  &#xA;}&#xA;&#xA;enum Visibility {&#xA;  PUBLIC,&#xA;  PRIVATE,&#xA;  PROTECTED,&#xA;  SECRET&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>I want the creator to be able to set whether the Post is:</p>&#xA;&#xA;<ol>&#xA;<li>Public: anyone can see it, logged in or not.</li>&#xA;<li>Private: any logged-in user can see it.</li>&#xA;<li>Protected: this array of users can see it.</li>&#xA;<li>Secret: only the creator can see it.</li>&#xA;</ol>&#xA;&#xA;<p>I know how to hardcode each of these. But programmatically...</p>&#xA;&#xA;<p>Is this even possible, or are AppSync transforms just too basic, and I need to use a custom resolver?</p>&#xA;",1764027,,,,2019-12-19 15:11:22,"In an AppSync GraphQL transform, can I set an @auth rule AuthStrategy based on a field in the table?",<amazon-web-services><graphql><aws-appsync>,1,0,0,2019-12-17 19:13:43
59381854,1,61661821,,3,1263,"<p>Imagine I have the following AppSync GraphQL schema with a <code>User</code> type, and a <code>Post</code> type with an <code>editors</code> field set to an array of <code>User</code>s:</p>&#xA;&#xA;<pre><code>type User&#xA;  @model &#xA;  @auth(rules: [&#xA;    { allow: owner }&#xA;  ])&#xA;{&#xA;  id: ID!&#xA;  owner: String!&#xA;  username: String!&#xA;}&#xA;&#xA;type Post&#xA;  @model&#xA;  @auth(rules: [&#xA;    { allow: owner },&#xA;    # Can I do this?&#xA;    # { allow: owner, ownerField: ""editors.owner"", operations: [update] }&#xA;  ])&#xA;{&#xA;  id: ID!&#xA;  owner: String!&#xA;  title: String!&#xA;  content: String&#xA;  editors: [User]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How do I create an <code>@auth</code> rule to give update permissions to the <code>User</code>s in the <code>editors</code> array?</p>&#xA;",1764027,,,,2020-05-07 18:10:21,"In an AppSync @auth rule, how do I set an ownerField to a property in an array?",<graphql><aws-appsync>,1,5,0,2019-12-17 20:48:10
59383926,1,,,0,1030,"<p>I have a table defined in Hasura (Postgres) using native <code>uuid</code> as the field datatype.  My goal is to create an update mutation from Swift but the uuid type is not mapped implicitly from Postgres through Hasura and Apollo to Swift.  The Hasura documentation states that the uuid type supports using <code>String</code> but when I define the variables, in the update mutation, as a <code>String!</code>, </p>&#xA;&#xA;<pre><code>mutation RedeemMagicLinkCode($code: String!, $iosIdentifierForVendor: String!) {&#xA;  __typename&#xA;  update_entityname(where: {code: {_eq: $code}, iosIdentifierForVendor: {_is_null: true}}, _set: {iosIdentifierForVendor: $iosIdentifierForVendor}) {&#xA;    returning {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get an error from the Apollo code gen build step that <code>Variable ""$code"" of type ""String!"" used in position expecting type ""uuid"".</code>. When I change that to <code>uuid!</code>,</p>&#xA;&#xA;<pre><code>&#xA;mutation RedeemMagicLinkCode($code: uuid!, $iosIdentifierForVendor: uuid!) {&#xA;  __typename&#xA;  update_en...&#xA;</code></pre>&#xA;&#xA;<p>The code gen step completes, producing API.swift, but several instances of the compile error <code>Use of undeclared type 'uuid'</code> raise and are now coming from a failure during compile of the Apollo generated API.swift.  </p>&#xA;&#xA;<pre><code>/// API.swift&#xA;...&#xA;public let operationName = ""RedeemMagicLinkCode""&#xA;&#xA;  public var code: uuid&#xA;  public var iosIdentifierForVendor: uuid&#xA;...&#xA;</code></pre>&#xA;&#xA;<p>Can someone point me in the right direction for letting Swift know what a uuid is or defining my query so that I can pass a String as a parameter through the Apollo managed mutation?  Thanks so much!</p>&#xA;",252290,,,,2019-12-18 15:28:31,How do I use Hasura/postgres uuid with apollo-ios and swift,<swift><hasura><apollo-ios>,1,0,0,2019-12-18 00:22:17
59400974,2,,59295212,3,,"<p>I found out the above can be achieved using the <code>@function</code> directive. It allows us to connect lambda resolvers to the schema. In the lambda we can do virtually anything like read and update Amazon Cognito User Pools.</p>&#xA;&#xA;<p><a href=""https://aws-amplify.github.io/docs/cli-toolchain/graphql#function"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/cli-toolchain/graphql#function</a></p>&#xA;",1709981,,,,2019-12-18 22:41:48,"",,0,1,0,2019-12-18 22:41:48
59451313,1,,,0,3162,"<p>I am trying to get the total count of an index of elasticsearch using nodejs, but i don't know how to get the count. Can anyone please help me in this</p>&#xA;",10401733,,,,2019-12-23 07:57:57,How to get total count or total items of an index in elasticsearch using nodejs,<node.js><elasticsearch><graphql><elasticsearch-2.0>,1,2,0,2019-12-23 07:00:22
59454193,1,,,9,2109,"<p>today checking some of the <a href=""https://aws-amplify.github.io/docs/cli-toolchain/graphql?sdk=js#usage-2"" rel=""noreferrer"">amplify</a> documentation (I know this one says it is a preview in the <a href=""https://aws-amplify.github.io/docs/ios/start"" rel=""noreferrer"">iOS</a> scenario) but I have ran into a road block.</p>&#xA;&#xA;<p><strong>Assumptions</strong></p>&#xA;&#xA;<ol>&#xA;<li>Amplify is correctly configured in my iOS project. I can push data to <code>Person</code> and query the <code>Amplify.API</code></li>&#xA;<li>The schema has been defined as:</li>&#xA;</ol>&#xA;&#xA;<pre><code>type Person @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  possessions: [Thing] # list of things this person owns.&#xA;    @connection(keyName: ""byPerson"", fields: [""id""])&#xA;}&#xA;&#xA;type Thing @model&#xA;           @key(name: ""byPerson"", fields: [""personId""]) {&#xA;&#xA;  id: ID!&#xA;  name: String!&#xA;  personId: ID!&#xA;  ownerOfThings: Person # defining the 'belongsTo' property.&#xA;    @connection(fields: [""personId""])&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This generates the following code:</p>&#xA;&#xA;<pre class=""lang-swift prettyprint-override""><code>public struct Person: Model {&#xA;  public let id: String&#xA;  public var name: String&#xA;  public var possessions: List&lt;Thing&gt;?&#xA;&#xA;  public init(id: String = UUID().uuidString,&#xA;      name: String,&#xA;      possessions: List&lt;Thing&gt;? = []) {&#xA;      self.id = id&#xA;      self.name = name&#xA;      self.possessions = possessions&#xA;  }&#xA;}&#xA;&#xA;public struct Person: Model {&#xA;  public let id: String&#xA;  public var name: String&#xA;  public var ownerOfThings: Person?&#xA;&#xA;  public init(id: String = UUID().uuidString,&#xA;      name: String,&#xA;      ownerOfThings: Person? = nil) {&#xA;      self.id = id&#xA;      self.name = name&#xA;      self.ownerOfThings = ownerOfThings&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here is where I ran into trouble. <code>Amplify.API</code> doesn't seem be saving my object and its associated data in a single mutation. I have to call it as nested operations to have an effect.</p>&#xA;&#xA;<pre class=""lang-swift prettyprint-override""><code>// sample on how I am trying to save data.&#xA;&#xA;var thing = Thing(name: ""Long Claw"")&#xA;let person = Person(&#xA;  name: ""Jon Snow"",&#xA;  possessions: List([ thing ])&#xA;)&#xA;&#xA;Amplify.API.mutate(of: person, type: .create) { ev in&#xA;  // doing something with the event.&#xA;  print(String(describing: ev)) // this works. It saves the instance to DynamoDB&#xA;  // unfortunately, it did not save the instance of thing... let's try to correct this.&#xA;&#xA;  thing.ownerOfThings = person&#xA;  Amplify.API.mutate(of: thing, type: .create) { ev2 in&#xA;    // do something else with this...&#xA;    print(String(describing: ev2))&#xA;    // this ^ crashes badly...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The code above will generate an output similar to:</p>&#xA;&#xA;<pre><code>Result.success(Person(id: ""EC4BEEE1-C1A1-4831-AB86-EA1E22D8AD48"", name: ""Jon Snow"", possessions: nil))&#xA;&#xA;GraphQLResponseError&lt;Thing&gt;: GraphQL service returned a successful response containing errors: [Amplify.GraphQLError(message: ""Variable \'input\' has coerced Null value for NonNull type \'ID!\'"", locations: Optional([Amplify.GraphQLError.Location(line: 1, column: 26)]), path: nil, extensions: nil)]&#xA;</code></pre>&#xA;&#xA;<p>I've tried declaring the relationship as:</p>&#xA;&#xA;<pre><code>type Person @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  possessions: [Thing] # list of things this person owns.&#xA;    @connection(keyName: ""byPerson"", fields: [""id""])&#xA;}&#xA;&#xA;type Thing @model&#xA;           @key(name: ""byPerson"", fields: [""personId""]) {&#xA;&#xA;  id: ID!&#xA;  name: String!&#xA;  personId: ID!&#xA;  # ownerOfThings: Person&#xA;  #   @connection(fields: [""personId""]) # Not belongsTo for you!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Or a variation of this, defining the <code>possessions</code> as <code>possessions: [Thing] @connection</code>.</p>&#xA;&#xA;<p>All of them generate various (although some what related) errors, preventing me from storing my data.</p>&#xA;&#xA;<p><strong>So, the question is:</strong>&#xA;How do you specify the relationship in iOS to save it? </p>&#xA;",332948,,,,2019-12-23 11:01:21,How to store relational (one to many or many to one) data with Amplify iOS (AppSync)?,<ios><swift><graphql><aws-amplify><amplify-ios>,0,6,0,2019-12-23 11:01:21
59460961,1,59461763,,3,718,"<p>I've been having this problem of understanding how to, in simplest way possible,send, by using AWS Lambda, query request over to a certain AppSync GraphQL API ( which has <strong>API KEY auth mode</strong>). </p>&#xA;&#xA;<p>I'm sort of a beginner, hence I've been reading a lot, in search of useful tips and tutorials that might explain this, the closest I came to a solution is this tutorial: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-node.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/building-a-client-app-node.html</a>, which suggests using Apollo Client. &#xA;My first question is, is this the best approach to my goal (using Apollo Client + AWS Lambda to send query,mutations to AppSync GraphQL API)? If not, what would be the best practice/way to do so?</p>&#xA;&#xA;<p>Here's my current code based of the above mentioned tutorial: </p>&#xA;&#xA;<pre><code>const gql  = require('graphql-tag');&#xA;const AWSAppSyncClient = require('aws-appsync').default;&#xA;const AUTH_TYPE = require('aws-appsync-auth-link/lib/auth-link').AUTH_TYPE;&#xA;require('es6-promise').polyfill();&#xA;require('isomorphic-fetch');&#xA;&#xA;&#xA;module.exports.handler =  async function(event, context) {&#xA;&#xA;    //console.log(""before_client_setup"");&#xA;&#xA;    const client = new AWSAppSyncClient({&#xA;      url: '******',&#xA;      region: '******',&#xA;      auth: {&#xA;        type: AUTH_TYPE.API_KEY,&#xA;        apiKey:'******'&#xA;      },&#xA;      disableOffline: true&#xA;    });&#xA;&#xA;    //console.log(""before_gql_query"");&#xA;&#xA;    const query = gql`&#xA;      query listJobs {&#xA;        listJobs{&#xA;          items {&#xA;            id title employer datePosted location url&#xA;          }&#xA;        }&#xA;      }&#xA;    `;&#xA;&#xA;   //console.log(""before_client_call"");&#xA;&#xA;    client.hydrated().then(function (client) {&#xA;      //Now run a query&#xA;&#xA;      //console.log(""before_client_query"");&#xA;&#xA;        client.query({ query: query, fetchPolicy: 'network-only' })   //Uncomment for AWS Lambda&#xA;          .then(function logData(data) {&#xA;              console.log('results of query: ', data);&#xA;          })&#xA;          .catch(console.error);&#xA;    });&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p><strong>url, region, auth</strong> parameters are hard-coded just to test if it works (I know that it's not a best practice), but when I invoke this function trough serverless framework with the command:<code>sls invoke -f streamFunction --stage stg</code> the result I get inside of console is: &#xA;<strong>null</strong></p>&#xA;&#xA;<p>Expected result (which I got when using Postman and passing correct url and api key): &#xA;<a href=""https://i.stack.imgur.com/gAfRL.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/gAfRL.png</a></p>&#xA;&#xA;<p>CloudWatch Logs aren't of any help either, as they are not giving useful insight into what the problem may be. Here's a screenshot of them upon being invoked:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/WKXsP.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/WKXsP.png</a></p>&#xA;&#xA;<p>Any advices?</p>&#xA;",4240472,,,,2019-12-23 22:16:11,How to send query request from AWS Lambda with Serverless Framework to AppSync GraphQL API?,<aws-lambda><graphql><apollo-client><serverless><aws-appsync>,1,0,0,2019-12-23 20:23:58
59461763,2,,59460961,3,,"<p>Ok, so I think the main problem was because I was using this syntax:</p>&#xA;&#xA;<pre><code>client.hydrated().then(function (client) {&#xA;&#xA;      client.query({ query: query, fetchPolicy: 'network-only' })   //Uncomment for AWS Lambda&#xA;      .then(function logData(data) {&#xA;          console.log('results of query: ', data);&#xA;      })&#xA;      .catch(console.error);&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>inside of async function which is my lambda. Instead, <strong>await</strong> keyword should be used. Here's the whole code which solved the problem: </p>&#xA;&#xA;<pre><code>const gql = require('graphql-tag');&#xA;const AWSAppSyncClient = require('aws-appsync').default;&#xA;const AUTH_TYPE = require('aws-appsync-auth-link/lib/auth-link').AUTH_TYPE;&#xA;require('es6-promise').polyfill();&#xA;require('isomorphic-fetch');&#xA;module.exports.handler = async function (event, context) {&#xA;  try {&#xA;    const appSyncClient = new AWSAppSyncClient(&#xA;      {&#xA;        url: '******',&#xA;        region: '******',&#xA;        auth: {&#xA;          type: AUTH_TYPE.API_KEY,&#xA;          apiKey: '******'&#xA;        },&#xA;        disableOffline: true&#xA;      },&#xA;      {&#xA;        defaultOptions: {&#xA;          query: {&#xA;            fetchPolicy: 'network-only',&#xA;            errorPolicy: 'all',&#xA;          },&#xA;        },&#xA;      }&#xA;    );  &#xA;    const query = await gql`&#xA;      query listJobs {&#xA;        listJobs{&#xA;          items {&#xA;            id title employer datePosted location url&#xA;          }&#xA;        }&#xA;      }&#xA;    `;&#xA;    const client = await appSyncClient.hydrated();&#xA;    const data =   await client.query({query});&#xA;    console.log(data);&#xA;&#xA;  } catch (error) {&#xA;    return context.fail(error);&#xA;  }&#xA;  return context.succeed(""success"");&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And here are the logs from CloudWatch:&#xA;<a href=""https://i.stack.imgur.com/O6AcB.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/O6AcB.png</a></p>&#xA;&#xA;<p>Hope this helps :)</p>&#xA;",4240472,,4240472,2019-12-23 22:16:11,2019-12-23 22:16:11,"",,0,1,0,2019-12-23 22:09:34
59465496,1,59477102,,1,214,"<p>I am attempting to add the current user to a <code>create</code> mutation by decorating graphql stages as per <a href=""https://api-platform.com/docs/core/graphql/#workflow-of-the-resolvers"" rel=""nofollow noreferrer"">the documentation</a>.</p>&#xA;&#xA;<p>It is a feature to allow users to block other users in a message system, fyi.</p>&#xA;&#xA;<p>It should satisfy the following access control:</p>&#xA;&#xA;<p><code>""access_control""=""is_granted('IS_AUTHENTICATED_FULLY') and object.getBlocker() == user""</code></p>&#xA;&#xA;<p>Meaning that the user that is blocking is the currently authenticated user. </p>&#xA;&#xA;<p>I can get it done if I modify the above to just:</p>&#xA;&#xA;<p><code>""access_control""=""is_granted('IS_AUTHENTICATED_FULLY')""</code>&#xA;by decorating the <code>deserialize stage</code> like so:</p>&#xA;&#xA;<p>App/Stage/DeserializeStage</p>&#xA;&#xA;<pre><code>/**&#xA; * @param object|null $objectToPopulate&#xA; *&#xA; * @return object|null&#xA; */&#xA;public function __invoke($objectToPopulate, string $resourceClass, string $operationName, array $context)&#xA;{&#xA;    // Call the decorated serialized stage (this syntax calls the __invoke method).&#xA;    $deserializeObject = ($this-&gt;deserializeStage)($objectToPopulate, $resourceClass, $operationName, $context);&#xA;&#xA;    if ($resourceClass === 'App\Entity\BlockedUser' &amp;&amp; $operationName === 'create') {&#xA;        $user = $this-&gt;tokenStorage-&gt;getToken()-&gt;getUser();&#xA;        $deserializeObject-&gt;setBlocker($user);&#xA;    }&#xA;&#xA;    return $deserializeObject;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>As I understand it, in order to get it to work fully satisfying the access control, I would need to decorate the <code>read stage</code>, which comes before the <code>security stage</code> and insert the currently authenticated user to the object. </p>&#xA;&#xA;<p>In that way, it would satisfy the second portion of the access control, ie, &#xA;<code>and object.getBlocker() == user</code></p>&#xA;&#xA;<p>I attempted to do it as follows, but I get a <code>NULL</code> object :</p>&#xA;&#xA;<p>App/Stage/ReadStage</p>&#xA;&#xA;<pre><code>/**&#xA; * @return object|iterable|null&#xA; */&#xA;public function __invoke(?string $resourceClass, ?string $rootClass, string $operationName, array $context)&#xA;{&#xA;    $readObject = ($this-&gt;readStage)($resourceClass, $rootClass, $operationName, $context);&#xA;&#xA;    var_dump($readObject-&gt;getBlocked()-&gt;getUsername()); // throws error 'method getBlocked on NULL&#xA;&#xA;    if ($resourceClass === 'App\Entity\BlockedUser' &amp;&amp; $operationName === 'create') {&#xA;        $userId = $this-&gt;tokenStorage-&gt;getToken()-&gt;getUser();&#xA;        $readObject-&gt;setBlocker($user);&#xA;    }&#xA;&#xA;    return $readObject;&#xA;}&#xA;</code></pre>&#xA;",2127381,,,,2019-12-25 09:42:52,GraphQl - how to add current user to mutation object,<graphql><symfony4><api-platform.com>,1,0,0,2019-12-24 07:43:11
59476919,1,59477768,,0,238,"<p>The below code not returning amazon s3 content, it works when console the data value.&#xA;I have tried declare variable outside function and tried to return from function still, not works</p>&#xA;&#xA;<pre><code>const getMeridianToken1 = () =&gt;{&#xA;&#xA;  s3 = new aws.S3();&#xA;&#xA;  // Create the parameters for calling listObjects&#xA;  var bucketParams = {&#xA;    Bucket: 'bucket-name',&#xA;    Key: 'access_token.json'&#xA;  };&#xA;&#xA;  // Call S3 to obtain a list of the objects in the bucket&#xA;  s3.getObject(bucketParams, function(err, data) {&#xA;    if (!err) {&#xA;      var result = JSON.parse(data.Body.toString());&#xA;      console.log(""working here---"",result.access_token);&#xA;      return result.access_token; //this is not returning&#xA;    }&#xA;  });&#xA;  //return JSON.parse(data.Body.toString()); //if hard code here it works, if i return s3 conteent the data variable not available here&#xA;}&#xA;&#xA;console.log(""not working"",getMeridianToken1);&#xA;</code></pre>&#xA;",11818451,,,,2019-12-25 11:07:12,function not returning value from amazon-s3 file but prints when i console,<javascript><node.js><amazon-s3><graphql>,2,0,0,2019-12-25 09:22:15
59479818,2,,59479703,3,,"<p><a href=""https://stackoverflow.com/a/59479762/7882470"">@norbitrial's answer</a> is correct, as for reference here is a generic sorter (for numbers and strings):</p>&#xA;&#xA;<pre><code>const sorter = (a, b) =&gt; (isNaN(a) &amp;&amp; isNaN(b) ? (a || '').localeCompare(b || '') : a - b);&#xA;</code></pre>&#xA;&#xA;<pre><code>// Usage example with antd table column&#xA;[&#xA;  {&#xA;    title: 'Status',&#xA;    dataIndex: 'status',&#xA;    key: 'status',&#xA;    width: '10%',&#xA;    // status can be Number or String&#xA;    sorter: (a, b) =&gt; sorter(a.status, b.status),&#xA;    render: Name&#xA;  }&#xA;]&#xA;</code></pre>&#xA;",7882470,,,,2019-12-25 15:41:29,"",,0,0,0,2019-12-25 15:41:29
59503969,1,,,8,2709,<p>With the compliance we need to remove introspection queries in production for AppSync endpoints. What is the best way to disable introspection queries with AppSync?</p>&#xA;<p>I don't see any settings with AppSync.</p>&#xA;,299462,,472495,2021-07-07 16:23:20,2022-05-01 16:23:18,How to disable introspection queries with AWS appsync (GraphQL)?,<amazon-web-services><graphql><aws-appsync>,2,2,0,2019-12-27 17:16:10
59505049,2,,59502059,0,,"<p>You should be able to access the app name through <code>process.env.HEROKU_APP_NAME</code> after enabling dyno metadata as suggested <a href=""https://stackoverflow.com/questions/12570579/how-to-get-heroku-app-name-url-from-inside-the-app"">here</a>. The port number should be available through <code>process.env.PORT</code>. So you may be able to build the url yourself:</p>&#xA;&#xA;<pre><code>https://${process.env.HEROKU_APP_NAME}.herokuapp.com:${process.env.PORT}/graphql&#xA;</code></pre>&#xA;",6024220,,,,2019-12-27 19:07:43,"",,0,3,0,2019-12-27 19:07:43
59512248,1,59516268,,-1,656,"<p>I'm using <strong>GraphQL</strong> in ui/playground, with the syntax bellow, works pretty well.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>    mutation {&#xA;      createUnit(unit: {name: ""hehehe great!!!""}) {&#xA;        id,&#xA;        name&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/yLNxL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yLNxL.png"" alt=""inserir a descrição da imagem aqui""></a></p>&#xA;&#xA;<p>My doubt is, how can I use GraphQL in Apollo Client, I found something like that:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>mutation createUnit(unit: {name: String!}) {&#xA;       createUnit(unit: {name: ""looks great!!!""}) {&#xA;                            id,&#xA;                            name&#xA;                        }&#xA;                    }&#xA;</code></pre>&#xA;&#xA;<p>But unfortunately I'm getting the error: </p>&#xA;&#xA;<p><strong>GraphQLError</strong>: Syntax Error: Expected $, found Name ""unit""</p>&#xA;",587480,,,,2019-12-29 01:35:47,"Apollo - GraphQLError: Syntax Error: Expected $, found Name",<graphql><react-apollo><apollo-client><graphql-js>,1,0,0,2019-12-28 15:31:33
59516268,2,,59512248,2,,"<p>Make sure you have defined the type <code>Unit</code> and added  the <code>createUnit</code> type as a mutation in the resolvers</p>&#xA;&#xA;<pre><code>module.exports.Mutation = {&#xA;    createUnit&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>to use it in the graphql playground you just have to specify the variables you are going to use in the mutation like this</p>&#xA;&#xA;<pre><code>mutation($unit: Unit){&#xA;  createUnit(unit: $unit){&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and in the variables add :</p>&#xA;&#xA;<pre><code>{&#xA;  ""unit"": {&#xA;    name: ""looks great!!!""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",12392080,,,,2019-12-29 01:35:47,"",,0,0,0,2019-12-29 01:35:47
59516375,1,59558088,,7,9062,"<p>I tried to use example schema on api doc(""<a href=""https://aws-amplify.github.io/docs/cli-toolchain/graphql?sdk=js"" rel=""noreferrer"">https://aws-amplify.github.io/docs/cli-toolchain/graphql?sdk=js</a>"") like below on Many-To-Many Connections</p>&#xA;&#xA;<pre><code>type Post @model {&#xA;  id: ID!&#xA;  title: String!&#xA;  editors: [PostEditor] @connection(keyName: ""byPost"", fields: [""id""])&#xA;}&#xA;&#xA;# Create a join model and disable queries as you don't need them&#xA;# and can query through Post.editors and User.posts&#xA;type PostEditor&#xA;  @model(queries: null)&#xA;  @key(name: ""byPost"", fields: [""postID"", ""editorID""])&#xA;  @key(name: ""byEditor"", fields: [""editorID"", ""postID""]) {&#xA;  id: ID!&#xA;  postID: ID!&#xA;  editorID: ID!&#xA;  post: Post! @connection(fields: [""postID""])&#xA;  editor: User! @connection(fields: [""editorID""])&#xA;}&#xA;&#xA;type User @model {&#xA;  id: ID!&#xA;  username: String!&#xA;  posts: [PostEditor] @connection(keyName: ""byEditor"", fields: [""id""])&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I created all items and then I tried to delete them but I failed especially on PostEditor.</p>&#xA;&#xA;<p>There is a mutation to delete PostEditor so I called it like below</p>&#xA;&#xA;<p>API.graphql(graphqlOperation((deletePostEditor, {input: {id},})))</p>&#xA;&#xA;<p>It fails with below error message.</p>&#xA;&#xA;<p>Error: Invalid AST Node: {""input"":""b2f7064c-af32-49cd-8c87-*******""}</p>&#xA;&#xA;<p>I think I provided right ID. I checked it on query.</p>&#xA;",3846998,,734289,2021-04-16 04:31:41,2021-04-16 04:31:41,"Error: Invalid AST Node: {""input"":""** } on graphql mutation (Amplify client)",<graphql><aws-amplify><amplifyjs>,1,3,0,2019-12-29 02:10:05
59519278,1,,,0,1016,"<p>I'm trying to implement a GrapgQL API described in following tutorial.</p>&#xA;&#xA;<p><a href=""https://medium.com/@facundofasciolo/graphql-api-using-serverless-aws-appsync-dynamodb-lambda-resolvers-cognito-part-1-8ec947614b86"" rel=""nofollow noreferrer"">GraphQL API using Serverless + AWS AppSync + DynamoDB + Lambda resolvers + Cognito. [Part 1]</a></p>&#xA;&#xA;<p>I'm using the current versions of serverless and other involved dependencies. (see package.json) My OS is Manjaro 5.4.2-1.</p>&#xA;&#xA;<p>My problem is that the common-response.vtl is not working <strong>offline</strong>. Deployed to aws everything is working fine.</p>&#xA;&#xA;<pre><code>* file: mapping-templates/common-response.vtl *&#xA;## If there is a datasource invocation error, we choose to raise the same error&#xA;## the field data will be set to null.&#xA;#if($ctx.error)&#xA;  $util.error($ctx.error.message, $ctx.error.type, $ctx.result)&#xA;#end&#xA;&#xA;$util.toJson($ctx.result)&#xA;</code></pre>&#xA;&#xA;<pre><code>* file: lambda-functions/book/listBooks/index.js *&#xA;exports.handler = async (event) =&gt; {&#xA;  console.log({event});&#xA;&#xA;  const books = [&#xA;    {&#xA;      id: '1',&#xA;      title: 'First mocked book'&#xA;    },&#xA;    {&#xA;      id: '2',&#xA;      title: 'Second mocked book'&#xA;    }&#xA;  ];&#xA;  console.log(books);&#xA;  return books;&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>the lambda resolver log looks good</p>&#xA;&#xA;<pre><code>* console *&#xA;Serverless: dynamoDB started: http://localhost:62226/&#xA;listening for subscriptions at: ws://localhost:38643/&#xA;Serverless: AppSync started: http://localhost:62222/graphql&#xA;Serverless: Starting Offline: local/eu-west-1.&#xA;&#xA;Serverless: Routes for listBooks:&#xA;Serverless: POST /{apiVersion}/functions/sls-appsync-demo-local-listBooks/invocations&#xA;&#xA;Serverless: Offline [HTTP] listening on http://localhost:3001&#xA;Serverless: Enter ""rp"" to replay the last request&#xA;{ event: { arguments: {} } }&#xA;[&#xA;  { id: '1', title: 'First mocked book' },&#xA;  { id: '2', title: 'Second mocked book' }&#xA;]&#xA;{ event: { arguments: {} } }&#xA;[&#xA;  { id: '1', title: 'First mocked book' },&#xA;  { id: '2', title: 'Second mocked book' }&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>but the response in postman is an error</p>&#xA;&#xA;<pre><code>* postman *&#xA;{&#xA;    ""errors"": [&#xA;        {&#xA;            ""message"": ""JSON5: invalid character '&amp;' at 2:3"",&#xA;            ""locations"": [&#xA;                {&#xA;                    ""line"": 2,&#xA;                    ""column"": 3&#xA;                }&#xA;            ],&#xA;            ""path"": [&#xA;                ""listBooks""&#xA;            ]&#xA;        }&#xA;    ],&#xA;    ""data"": {&#xA;        ""listBooks"": null&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I paste the logged response into the resolver, postman prints out the expected result. I also tried to put the result in an error response.</p>&#xA;&#xA;<pre><code>* file: mapping-templates/common-response.vtl *&#xA;## If there is a datasource invocation error, we choose to raise the same error&#xA;## the field data will be set to null.&#xA;#if($ctx.error)&#xA;  $util.error($ctx.error.message, $ctx.error.type, $ctx.result)&#xA;#end&#xA;&#xA;$util.error($ctx.result)&#xA;</code></pre>&#xA;&#xA;<p>and the result is there ...</p>&#xA;&#xA;<pre><code>* postman *&#xA;{&#xA;    ""data"": {&#xA;        ""listBooks"": null&#xA;    },&#xA;    ""errors"": [&#xA;        {&#xA;            ""message"": [&#xA;                {&#xA;                    ""id"": ""1"",&#xA;                    ""title"": ""First mocked book""&#xA;                },&#xA;                {&#xA;                    ""id"": ""2"",&#xA;                    ""title"": ""Second mocked book""&#xA;                }&#xA;            ],&#xA;            ""locations"": [&#xA;                {&#xA;                    ""line"": 2,&#xA;                    ""column"": 3&#xA;                }&#xA;            ],&#xA;            ""path"": [&#xA;                ""listBooks""&#xA;            ],&#xA;            ""errorType"": null,&#xA;            ""data"": null,&#xA;            ""errorInfo"": null&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>so something is wrong with the toJson function in combination with appsync offline but I have no idea how to solve this issue</p>&#xA;&#xA;<p>complete example code: <a href=""https://github.com/kingkomg/sls-appsync-example"" rel=""nofollow noreferrer"">github repo</a></p>&#xA;",2378493,,2378493,2019-12-29 17:58:30,2019-12-30 10:11:51,"AppSync offline - ""JSON5: invalid character '&' at 2:3""",<json><amazon-web-services><graphql><aws-appsync>,0,6,0,2019-12-29 12:11:25
59528867,1,,,2,541,"<p>Hasura is a game changer. When I started to use it was in its infancy stage of development but now it has got multiple customisable features and it allows to create custom postgres function and view. check  the below function which I wrote to manage to make multiple field search query using Hasura GraphQL Engine</p>&#xA;&#xA;<ol>&#xA;<li>I have made a custom postgres profile search function like below also this query allows to search array of elements.</li>&#xA;</ol>&#xA;&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE &#xA;OR &#xA;replace FUNCTION search_profiles(&#xA;    _country text default null,&#xA;    _gender text default null,&#xA;    _marital_status text default null,&#xA;    _religion text[] default null,&#xA;    _age_start integer default null, &#xA;    _age_end integer default null&#xA;) &#xA;returns setof profile AS $$&#xA;SELECT * &#xA;FROM   profile &#xA;WHERE  ((extract( year FROM age(CURRENT_TIMESTAMP, dob) ) &gt;= _age_start &#xA;AND    extract( year FROM age(CURRENT_TIMESTAMP, dob) ) &lt;= _age_end) OR _age_start IS NULL)&#xA;AND    (living_country LIKE _country OR _country IS NULL)&#xA;AND    (gender = _gender OR _gender IS NULL)&#xA;AND    (marital_status LIKE _marital_status OR _marital_status IS NULL)&#xA;AND    (religion IN  (select unnest(_religion)) OR _religion IS NULL)&#xA;$$ language sql stable;&#xA;</code></pre>&#xA;&#xA;<ol start=""2"">&#xA;<li>the graphql query  must be like this</li>&#xA;</ol>&#xA;&#xA;<pre><code>query searchProfileQuery {&#xA;  search_profiles(args: {&#xA;    _country: ""United Kingdom"",&#xA;    _gender: ""male"",&#xA;    _marital_status: ""Un Married"",&#xA;    _religion: ""{hindu, muslim}"",&#xA;    _age_start: 20, &#xA;    _age_end: 29&#xA;  }, order_by: {created_at: asc}) {&#xA;    id&#xA;    income_currency&#xA;    last_name&#xA;    living_city&#xA;    living_country&#xA;    living_state&#xA;    marital_status&#xA;    mother_tongue&#xA;    nationality&#xA;    occupation&#xA;    religion&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3008370,,,,2019-12-30 09:58:07,How did I manage to make multiple field search query using Hasura GraphQL Engine?,<postgresql><graphql><hasura>,0,2,0,2019-12-30 09:58:07
59558088,2,,59516375,11,,"<p>You should pass your parameters as a second parameter of <code>graphqlOperation</code>. so , check your parentheses&#xA;<br>&#xA;<code>API.graphql(graphqlOperation((deletePostEditor, {input: {id},})))</code>,you have one pair extra parenthesis<br></p>&#xA;&#xA;<p>below is correct one<br>&#xA;<code>API.graphql(graphqlOperation(deletePostEditor, { input: { id } }))</code>&#xA;<br></p>&#xA;&#xA;<ul>&#xA;<li>first param=deletePostEditor </li>&#xA;<li>second param={ input: { id } }</li>&#xA;</ul>&#xA;&#xA;<p>tiny mistake, Isn't It?</p>&#xA;",4855817,,,,2020-01-02 03:48:43,"",,0,2,0,2020-01-02 03:48:43
59576162,1,,,0,385,"<p>When i use the new DataStore plugin from aws:</p>&#xA;&#xA;<pre><code>await DataStore.save(&#xA;          new User({&#xA;            firstname: ""John"",&#xA;            lastname: ""Doe""&#xA;          })&#xA;        )&#xA;</code></pre>&#xA;&#xA;<p>The request to the graphql api in appsync contains: userStatusId: null. That leads to the error: ""Type mismatch for Index Key"". I don´t want that field at the time of creating a user. So how do i get rid of it? A user can have one status. A status can be in many users. When i query with <code>DataStore.query(User)</code> I´d like to have all the relational fields like status in it. This parts works when using the schema below.</p>&#xA;&#xA;<pre><code>type User @model {&#xA;  id: ID!&#xA;  firstname: String&#xA;  lastname: String!&#xA;  status: Status @connection(name: ""StatusUsers"")&#xA;}&#xA;&#xA;type Status @model {&#xA;  id: ID!&#xA;  users: [User] @connection(name: ""StatusUsers"")&#xA;  name: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>If i do the relationship the other way around the save part works, but i don´t get the relational Status data when querying the users.</p>&#xA;&#xA;<p>thanks</p>&#xA;",2551169,,2551169,2020-01-04 09:28:57,2020-01-04 09:28:57,What is wrong with this graphql schema? Type mismatch for Index Key,<graphql><amazon-dynamodb><aws-appsync><amplifyjs>,0,6,0,2020-01-03 09:39:28
59617647,2,,59571920,0,,"<p>An alternative way to inject in the schema is like this:</p>&#xA;&#xA;<pre><code>use GraphQL\Language\AST\EnumTypeDefinitionNode;&#xA;use Illuminate\Contracts\Events\Dispatcher;&#xA;use Illuminate\Support\Facades\Schema;&#xA;use Illuminate\Support\ServiceProvider;&#xA;use Modules\AccessControl\Entities\Permission;&#xA;use Nuwave\Lighthouse\Events\ManipulateAST;&#xA;use Nuwave\Lighthouse\Schema\AST\PartialParser;&#xA;use Nuwave\Lighthouse\Schema\Factories\DirectiveFactory;&#xA;&#xA;class GraphQLEnumPermissionServiceProvider extends ServiceProvider&#xA;{&#xA;    public function boot(DirectiveFactory $directiveFactory, Dispatcher $dispatcher): void&#xA;    {&#xA;        if (Schema::hasTable(with(new Permission)-&gt;getTable())) {&#xA;        $permissions = Permission::all();&#xA;    }&#xA;    else {&#xA;        $permissions = (object) [ (object) ['id' =&gt; '0', 'ui_name' =&gt; 'bar']]; // to pass the schema validation when is empty&#xA;    }&#xA;&#xA;    // we need to check if we have permissions in the system&#xA;    $dispatcher-&gt;listen(&#xA;        ManipulateAST::class,&#xA;        function (ManipulateAST $manipulateAST) use($permissions): void {&#xA;            $manipulateAST-&gt;documentAST&#xA;                -&gt;setTypeDefinition(&#xA;                    static::createEnumType(&#xA;                        'EnumObjectName',&#xA;                        'EnumObjectName description',&#xA;                        $permissions&#xA;                    )&#xA;                );&#xA;        }&#xA;    );&#xA;}&#xA;&#xA;public static function createEnumType(string $name, string $description, object $enumValues): EnumTypeDefinitionNode&#xA;    {&#xA;        $enumDefinition = ""\""$description\""\n"";&#xA;        $enumDefinition .= ""enum $name {\n"";&#xA;        foreach ($enumValues as $i =&gt; $permission) {&#xA;            if(!empty($permission-&gt;description)) {&#xA;                $enumDefinition .= ""\""{$permission-&gt;description}\""\n"";&#xA;            }&#xA;&#xA;            $enumDefinition .= $permission-&gt;ui_name . "" @enum(value: \"""".$permission-&gt;id.""\"")\n\n"";&#xA;        }&#xA;        $enumDefinition .= ""}\n"";&#xA;&#xA;        return PartialParser::enumTypeDefinition($enumDefinition);&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The directive @whereConstraints is written like this</p>&#xA;",2943573,,2943573,2020-01-06 19:16:59,2020-01-06 19:16:59,"",,0,0,0,2020-01-06 19:10:37
59631457,1,59637650,,1,1021,"<p>I have an AppSync API that's mostly backed by a DynamoDB store. Most of the resolvers are hooked up directly to the DynamoDB sources, not using lambdas.</p>&#xA;&#xA;<p>Some of the fields should have validation constraints, such as length or a regexp. In one particular case I would like to require that a <code>state</code> field contain an ISO 3166-2 value like <code>US-NY</code>. (GraphQL enums values can't contain hyphens, so that isn't an option here.)</p>&#xA;&#xA;<p>Other than replacing some resolvers with lambdas, the only way I can think of to apply these sorts of validation rules is to do it in VTL in the <code>RequestMappingTemplate</code>. That would work, but it would be tedious and likely result in duplicate code. Are there alternatives?</p>&#xA;",159369,,,,2020-01-07 23:44:30,GraphQL field-level validation in AppSync,<graphql><aws-appsync>,1,0,0,2020-01-07 15:33:19
59637650,2,,59631457,1,,"<p>Unfortunately, only way without lambda is VTL , I suggest that instead of writing validation directly inside <code>RequestMappingTemplate</code>, using pipeline resolver.(less duplicated)</p>&#xA;&#xA;<blockquote>&#xA;  <p><strong>Pipeline Resolvers</strong> contain one or more Functions which are executed in order.&#xA;  <br></p>&#xA;  &#xA;  <p><strong>Functions</strong> allow you to write common logic for reuse across multiple Resolvers in your schema. They are attached directly to a data source and like a Unit resolver, contain the same request and response mapping template format.</p>&#xA;</blockquote>&#xA;&#xA;<p><br>&#xA;You can find a good example <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;",4855817,,,,2020-01-07 23:44:30,"",,0,0,0,2020-01-07 23:44:30
59675995,1,59682998,,0,36,"<p>I'm pondering a rebuild of a meal seating assignment app. I'll make use of GraphQL to query for attendees and their guests of a table at a meal event (assigned seating). The delivered data model looks something like this:</p>&#xA;&#xA;<pre><code>meal event 1&#xA;  table A&#xA;    attendee 1&#xA;      guest 1&#xA;  ...&#xA;meal event 2&#xA;  table L&#xA;    attendee 1 (no guest this time)&#xA;  ...&#xA;</code></pre>&#xA;&#xA;<p>An attendee may attend multiple meal events e.g. at a multi-day conference. That attendee may have a guest(s) at meal event(s). This could be another attendee record (two meal tickets, same info), noted as a guest however as an attendee and their guest(s) need to be seated at the same table (don't want spouse on other side of the room for example). Attendees will usually have the same guest(s) at multiple events, however not always due to cost or conflicting guest commitments or wanting to rotate guests per meal, etc.</p>&#xA;&#xA;<p>How would I model this in a GraphQL schema? In the database I'd use join tables. However for client-facing GraphQL queries and schema types, I need to model this a bit differently (I think?). Here's what I have so far:</p>&#xA;&#xA;<pre><code>type Attendee {&#xA;  name: String&#xA;  ** Can't add guests here as this may change per event&#xA;}&#xA;&#xA;type Event {&#xA;  name: String&#xA;  tables: [Table]&#xA;}&#xA;&#xA;type Table {&#xA;  name: String&#xA;  attendees: [Attendee]&#xA;  ** How do I ""tree"" in guests here for attendees for this table?&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>At this point do I need a join type to get guests per attendee per table per event?</p>&#xA;",1279000,,1279000,2020-01-10 05:42:34,2020-01-10 14:03:22,How would I assign meal event guests per attendee per table per event at a conference in a GraphQL schema?,<graphql>,1,1,0,2020-01-10 05:34:46
59685167,2,,59680570,3,,"<p>Seeing the error <code>Error: 7 PERMISSION_DENIED: The caller does not have permission</code>, it seems you're not using the required service account to call the api. As per <a href=""https://github.com/googleapis/nodejs-logging-bunyan/tree/083d0d2c84e1c2c833734320a1c23fd992c36746#quickstart"" rel=""nofollow noreferrer"">the github page </a> the prerequisites are </p>&#xA;&#xA;<ol>&#xA;<li>Select or create a Cloud Platform project.</li>&#xA;<li>Select or create a Cloud Platform project.</li>&#xA;<li>Enable the Stackdriver Logging API.</li>&#xA;<li><a href=""https://cloud.google.com/docs/authentication/getting-started"" rel=""nofollow noreferrer"">Set up authentication with a service account</a> so you can access the API from your local workstation.</li>&#xA;</ol>&#xA;&#xA;<p>You also mentioned you have enabled the Service account and I am assuming you have provided the correct access as per the <a href=""https://cloud.google.com/logging/docs/access-control"" rel=""nofollow noreferrer"">access control guide</a>.</p>&#xA;&#xA;<p>So, I would like to review the <a href=""https://github.com/googleapis/nodejs-logging-bunyan/tree/083d0d2c84e1c2c833734320a1c23fd992c36746/samples#explict-auth-setup"" rel=""nofollow noreferrer"">Explict Auth Setup</a> to ensure you are calling the API for right project and with correct service account.</p>&#xA;&#xA;<p>NOTE: I am posting this as answer as my current reputation does not support me to comment on your post. Please feel free to let me know if I miss something or if it does not make any sense. I will edit this accordingly.   </p>&#xA;",11866118,,,,2020-01-10 16:06:51,"",,0,0,0,2020-01-10 16:06:51
59705299,1,63494809,,1,1461,"<p>I'm trying to convert my serverless nodejs graphql api to use typescript but serverless throws an error stating that the graphql handler is not a function. </p>&#xA;&#xA;<p>Error message:</p>&#xA;&#xA;<pre><code>Error: Serverless-offline: handler for 'hello' is not a function&#xA;    at Object.createHandler (/home/savnik/serverless-webpack-typescript-apollo/node_modules/serverless-offline/src/functionHelper.js:221:11)&#xA;    at handler (/home/savnik/serverless-webpack-typescript-apollo/node_modules/serverless-offline/src/ApiGateway.js:485:40)&#xA;    at module.exports.internals.Manager.execute (/home/savnik/serverless-webpack-typescript-apollo/node_modules/@hapi/hapi/lib/toolkit.js:41:33)&#xA;    at Object.internals.handler (/home/savnik/serverless-webpack-typescript-apollo/node_modules/@hapi/hapi/lib/handler.js:46:48)&#xA;    at exports.execute (/home/savnik/serverless-webpack-typescript-apollo/node_modules/@hapi/hapi/lib/handler.js:31:36)&#xA;    at Request._lifecycle (/home/savnik/serverless-webpack-typescript-apollo/node_modules/@hapi/hapi/lib/request.js:312:68)&#xA;    at processTicksAndRejections (internal/process/task_queues.js:93:5)&#xA;    at Request._execute (/home/savnik/serverless-webpack-typescript-apollo/node_modules/@hapi/hapi/lib/request.js:221:9)&#xA;</code></pre>&#xA;&#xA;<p>The objective is to create an apollo graphql api which uses typescript and can be used offline for development purpose. </p>&#xA;&#xA;<p>I have reproduced the issue here:&#xA;<a href=""https://github.com/savnik/serverless-webpack-typescript-apollo"" rel=""nofollow noreferrer"">https://github.com/savnik/serverless-webpack-typescript-apollo</a></p>&#xA;&#xA;<p>Any thoughts on what is the root cause for this issue?</p>&#xA;",6533711,,,,2020-08-19 20:51:13,Serverless-offline does not recognize graphql handler as a function,<typescript><webpack><apollo-server><serverless-offline>,1,3,0,2020-01-12 15:27:42
59728206,2,,59727581,0,,"<p>Actually <code>enums</code> are javascript objects. When you creates an <code>enum</code> you've a choice to access the object. </p>&#xA;&#xA;<p>So if your keys contains the alphanumeric and spaces, then you can't access with <code>.</code> after enum name like - <code>StatusCode.Ok 2</code>  This will produce error. </p>&#xA;&#xA;<p>So coming to your case, you need to access your object either with the number you've assigned or the key you've assigned. Its your choice. So you can access like this <code>StatusCode['OK']</code>. </p>&#xA;&#xA;<p>Take a look at below example. &#xA;<a href=""https://www.typescriptlang.org/play/index.html?ssl=25&amp;ssc=2&amp;pln=18&amp;pc=1#code/PTAEFEDsFcFsGdQEMBOBTZoBmakBdp1kATYtY0PAe1ACkkA3JAZQGMUBLABz1A8lAAVAJ5c0bTjwCwAKBCgA7gAsOrJaFhIA1mkQdeueBzQpKNJUkjEANhkhJY5UPDR5EVLKFZVI8PJbcAOllZeQAhYVAyLCRoa15LUDQYWD5EFIAjE1AMpBdiABpnfxQ8fgBzZF4ALxMqAtCwSwpcNVAqHg4fNOR4I3LIJ0T%20djRHSF4MyJ80QKEVPXhG0GgXLDjFJWTKLdAma2gMDnSqXg5YLipSgOCZWWS4UABhKgu8%20AARDnRWMu6Ab1koFAADkrnglA0ZMDwHk8FDgcwqNAIQjQAB1XR4WQAXxCcjAEWQkEgp3wFWJSRS7U6PiKwmRzlcOww%200OAG5liN0OM3F4fGUYBgsChXjt8HskAc0AAufEPVLMfwEeAvMiIQHQ0AAeQA0qAALygABMAAZTWiwkhiAAlNAAR0OfkNoAALOa0QBVewopRXDi1QpA0AABSQwl5dsd33IaIAYlcMhxSMk0WC8AnoFZcfj5ABNRnoHDoSCsDCJBU5SKrClQOAghyzABqUsO%20O8vl4flQgvKXx%20fwERpebz6-bQvy6kECsL8nJkHedrEIJbwSvwqxd65Vat0gT18%20WdYQzmgXEupWQrDLfQpxHwSD4Agyp3UxBjk58iBFYp0wmW1CStKRTNEBhxmKAf63LIi68FQWggnAWSmEa26rLu8D7rq86we0CFISYACSVhoAAHluyroVQ6oANoAER6nRAC6OFfl2eCcJA5RWraDpOrwqGUaq1G6DR7qmixuZgMeiCsIkWRRBwWDFskvB4KIuggcUnGVOpYg9N4sCwD4tzyJ6RhcZgfg6V4iSaDofAGHkximIBZAZNA5RFFkcmrBgEJoMsbLlrwKBZmUjhRFQuigKSoV8TGoAMtAEHWFQ8ErFwLKxQRKDQTIlYAOKNmGxDEVwKKgJqwKellRp0Z6IZ0WiHxUAoQ6gHRHzauiILNcGAAyaBYAJnUDeAcaCP1Wo2hw5RKKNdE2oRhUABJTTmdwEqAhGeMligBBB6DENAZbZZk2QeO0GQAFYTny-BJciKDLPQTASNwoXhecaD0oyckCKM%20DlvynZUnA%20XyAAgqDzoKgA5IgwU9OgXDWEgZYUFMQgaR9PBRIQFQASgljwFwHDo4O7R7c9-JkEU-B%20LgFBXVkFJpfBThnkFHCPokVC3fdVSgGFEw-fluGVgAssiLhQ5%20AjVaAMt%20a17VoirLi1dqKJGPTwaa2gtXEXrgUyHiW24RYVi2Ib8tU0aAAUGODjKyuy2g9tTgAlIaAB8VXBvACj6G0zsK77SvAnJLju35XsmYbauQHKWrAtHX5ULYgRpeUjt0YboDJ3R3vzun6cZOg2hl6AFs4oe227U9KUc1owsBZQJO%20OTtgUG9LDsJ9f0pQDTJm-IfoKNlr7ZAqiBkccCTuILvyIKB6yloO8BQhPbVoAw2R2wrPRxSy6CQ2AggLD0UrwDQHHgVgVzZWoE5t0g5RIIzvBH4OgRJ21SAXJfDJn8rsYOod1DdjwGMVST5TagGtjYNAv8pwXwgCkWSiRiA0GMkQCEiQITHGHrZAQVcKB4KOAIAKywRBiDxrwJBL54KpxAMsBaeAuDwBlCABQfDAh6V0IPHg6MuKBCuOUYAODWDwGAEw9KWhgBz0CAtWA1ggA"" rel=""nofollow noreferrer"">Source</a></p>&#xA;&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>/*&#xD;&#xA;enum StatusCodes {&#xD;&#xA;  OK = 200,&#xD;&#xA;    BadRequest = 400,&#xD;&#xA;    Unauthorized,&#xD;&#xA;    PaymentRequired,&#xD;&#xA;    Forbidden,&#xD;&#xA;    NotFound&#xD;&#xA;};&#xD;&#xA;*/&#xD;&#xA;&#xD;&#xA;// The above enum is converted to the Javasscript object like this. &#xD;&#xA;&#xD;&#xA;var StatusCodes;&#xD;&#xA;(function(StatusCodes) {&#xD;&#xA;  StatusCodes[StatusCodes[""OK""] = 200] = ""OK"";&#xD;&#xA;  StatusCodes[StatusCodes[""BadRequest""] = 400] = ""BadRequest"";&#xD;&#xA;  StatusCodes[StatusCodes[""Unauthorized""] = 401] = ""Unauthorized"";&#xD;&#xA;  StatusCodes[StatusCodes[""PaymentRequired""] = 402] = ""PaymentRequired"";&#xD;&#xA;  StatusCodes[StatusCodes[""Forbidden""] = 403] = ""Forbidden"";&#xD;&#xA;  StatusCodes[StatusCodes[""NotFound""] = 404] = ""NotFound"";&#xD;&#xA;})(StatusCodes || (StatusCodes = {}));&#xD;&#xA;&#xD;&#xA;// Ways to access the enum. &#xD;&#xA;console.log(StatusCodes.OK);&#xD;&#xA;console.log(StatusCodes[""OK""]);&#xD;&#xA;console.log(StatusCodes[""200""]);</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",2845389,,,,2020-01-14 05:54:09,"",,0,0,0,2020-01-14 05:54:09
59728630,1,59731384,,2,515,"<p>So I'm using API platform in my Symfony 4 project, and I've read that it supports graphQl, so I set up an access control in security.yml to allow users to access graphQl API:</p>&#xA;&#xA;<pre><code>- { path: ^/api/graphql, roles: IS_AUTHENTICATED_ANONYMOUSLY }&#xA;</code></pre>&#xA;&#xA;<p>And in each entity I have access controls for itemOperations and collectinOperations. Example:</p>&#xA;&#xA;<pre><code> * @ApiResource(&#xA; *     itemOperations={&#xA; *         ""get""={&#xA; *             ""access_control""=""is_granted('ROLE_ADMIN')""&#xA; *         }&#xA; *     },&#xA; *     collectionOperations={&#xA; *         ""get""={&#xA; *             ""access_control""=""is_granted('ROLE_ADMIN')""&#xA; *         }&#xA; *     }&#xA; * )&#xA;</code></pre>&#xA;&#xA;<p>But issue is, any user can access this entity through graphQL, because graphQL ignores the access controls for these operations.&#xA;Is there a way to force graphQL to follow these rules?</p>&#xA;",12708970,,,,2020-01-14 10:00:57,API Platform GraphQL security,<symfony><graphql><symfony4><api-platform.com>,1,0,0,2020-01-14 06:38:20
59731384,2,,59728630,1,,"<p><code>itemOperations</code> and <code>collectionOperations</code> are not related to GraphQL but only to REST.</p>&#xA;&#xA;<p>You need to add access controls in GraphQL operations or, if you want to target REST <em>and</em> GraphQL (without distinguishing operations though), you can add it as an <code>attribute</code>.</p>&#xA;&#xA;<p>Also, <code>access_control</code> is deprecated. You should use <code>security</code> instead.</p>&#xA;&#xA;<p>You can also read this documentation: <a href=""https://api-platform.com/docs/core/graphql/#security"" rel=""nofollow noreferrer"">https://api-platform.com/docs/core/graphql/#security</a></p>&#xA;",5049897,,,,2020-01-14 10:00:57,"",,0,1,0,2020-01-14 10:00:57
59743243,1,59752294,,7,2157,"<p>I'm using Amplify and Appsync for a react app I'm building. Right now I'm trying to query a user and am using the appsync client: </p>&#xA;&#xA;<pre><code>const client = new AWSAppSyncClient({&#xA;  url: awsconfig.aws_appsync_graphqlEndpoint,&#xA;  region: awsconfig.aws_appsync_region,&#xA;  auth: {&#xA;    type: awsconfig.aws_appsync_authenticationType,&#xA;    jwtToken: async () =&gt; (await Auth.currentSession()).getIdToken().getJwtToken()&#xA;  },&#xA;  complexObjectsCredentials: () =&gt; Auth.currentCredentials()&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>I've been able to successfully run a mutation using the example provided on the amplify website</p>&#xA;&#xA;<pre><code>const result = await client.mutate({&#xA;    mutation: gql(createTodo),&#xA;    variables: {&#xA;      input: {&#xA;        name: 'Use AppSync',&#xA;        description: 'Realtime and Offline',&#xA;      }&#xA;    }&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>but when it comes to running a query using the client, the only example they provide is with a list operation</p>&#xA;&#xA;<pre><code>const result = await client.query({&#xA;    query: gql(listTodos)&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>They don't provide an example for how to query by a specific ID, so I'm wondering if anybody can shine some light on the syntax for this, provide an example, or point me in the direction of a good reference for this? Thank you in advance.</p>&#xA;",9726926,,,,2020-01-15 13:19:23,AWS Appsync Javascript query example and input syntax,<graphql><aws-amplify><aws-appsync>,1,0,0,2020-01-14 23:30:06
59746098,1,,,5,689,"<p>I have created custom sql function in hasura and tracked it.&#xA;But need to write table name  in ""<code>RETURNS SETOF &lt;table-name&gt;</code>"" (Refer: <a href=""https://docs.hasura.io/1.0/graphql/manual/schema/custom-functions.html"" rel=""noreferrer"">https://docs.hasura.io/1.0/graphql/manual/schema/custom-functions.html</a>).&#xA;Here I cannot create new table having schema same as the function is returning columns.&#xA;I have lots of function to create so that I want a solution where I can create a function having return SETOF without table name.</p>&#xA;&#xA;<p>Even in hasura function can't returns virtual table (i.e. <code>RETURNS Table(column1 text, column2 text, column3 text)</code> )</p>&#xA;&#xA;<p>I tried ""create type"" and use it as </p>&#xA;&#xA;<pre><code>CREATE TYPE temp_type AS&#xA;(column1 text, column2 text, column3 text&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>But didn't work and giving following error:</p>&#xA;&#xA;<p>""the function ""my_function"" cannot be tracked because the function does not return a SETOF table""</p>&#xA;&#xA;<p>Any solution on this?</p>&#xA;&#xA;<p>Here is my function </p>&#xA;&#xA;<pre><code>CREATE  FUNCTION my_function(fromDate text, toDate text)&#xA;RETURNS  SETOF  &lt;table-name&gt;  AS $$&#xA;&#xA;// My function logic here &#xA;// which returns column1, column2, column3&#xA;&#xA;$$ LANGUAGE sql STABLE; &#xA;</code></pre>&#xA;",9756906,,9756906,2020-01-15 06:56:52,2020-01-15 06:56:52,Is there any way to return SETOF without table name in Hasura graphql custom sql function,<postgresql><graphql><hasura>,0,5,0,2020-01-15 06:25:58
59746150,1,,,1,650,"<p>I have a graphql type which I would like to update based on the value of one column.&#xA;For example the type has the following columns: id, col1, col2, col3 so I would like to update col3 if only if col1 has a value.&#xA;I am using react as frontend and HASURA as backend</p>&#xA;",11882748,,,,2020-12-31 09:05:59,Graphql Hasura Update if the field is not null,<reactjs><graphql><hasura><graphql-mutation>,1,0,0,2020-01-15 06:31:01
59746258,1,59748763,,7,6380,<p>Is it possible to query results from Firestore firebase in flutter using graphql.&#xA;I have to narrow down some results and have to bring them to the frontend.&#xA;Please help me through this.&#xA;Thanks in advance</p>&#xA;,10948610,,,,2020-01-15 09:47:29,How to use graphql to get data from Cloud Firestore from Firebase using flutter?,<firebase><flutter><google-cloud-firestore><graphql><google-cloud-functions>,1,0,0,2020-01-15 06:41:43
59760084,1,59765509,,2,3829,"<p>I'm modeling a User object with graphql for a react native app using amplify and appsync. I need to update the name field after creating the User but I am getting a DynamoDB: ConditionalCheckFailedException. Creating users and querying the User table works fine, I just can't update the fields of the existing object. </p>&#xA;&#xA;<p>I am defining the User type within my project directory (amplify/backend/api/schema.graphql) and letting the amplify CLI generate GraphQL statements (queries, mutations and subscription) based on my schema types.</p>&#xA;&#xA;<p>The schema I'm using:</p>&#xA;&#xA;<pre><code>type User @model @auth(rules: [{allow: owner}]) {&#xA;   username: String!&#xA;   name: String&#xA;}&#xA;&#xA;&#xA;type Mutation {&#xA;    createUser(input: CreateUserInput!, condition: ModelUserConditionInput): User&#xA;    updateUser(input: UpdateUserInput!, condition: ModelUserConditionInput): User&#xA;    deleteUser(input: DeleteUserInput!, condition: ModelUserConditionInput): User&#xA;}&#xA;&#xA;input UpdateUserInput {&#xA;    username: String&#xA;    name: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I run a mutation to create a User with the credentials of the logged-in user. From the AppSync console, I log in as the Cognito user with same username (745ab477-5702-4f8d-b938-a987a3d9d192) and run this mutation:</p>&#xA;&#xA;<pre><code>mutation updateUser{&#xA;    updateUser(input: {&#xA;      name: ""James""&#xA;    }&#xA;    condition:{&#xA;      username: {eq: ""745ab477-5702-4f8d-b938-a987a3d9d192""}&#xA;    }){&#xA;    username&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Which produces:</p>&#xA;&#xA;<pre><code>  {&#xA;  ""data"": {&#xA;    ""updateUser"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""path"": [&#xA;        ""updateUser""&#xA;      ],&#xA;      ""data"": null,&#xA;      ""errorType"": ""DynamoDB:ConditionalCheckFailedException"",&#xA;      ""errorInfo"": null,&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 40,&#xA;          ""column"": 5,&#xA;          ""sourceName"": null&#xA;        }&#xA;      ],&#xA;      ""message"": ""The conditional request failed (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ConditionalCheckFailedException; Request ID: HND4VSCK8HLM5NC08VDEV51CORVV4KQNSO5AEMVJF66Q9ASUAAJG)""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is the DynamoDB User table after adding the current user:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/3vwUN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3vwUN.png"" alt=""table""></a></p>&#xA;",12573200,,12573200,2020-01-15 21:58:47,2020-01-16 08:25:53,AWS AppSync GraphQL : DynamoDB ConditionalCheckFailedException when updating object in mutation,<graphql><amazon-dynamodb><aws-appsync>,1,0,0,2020-01-15 21:51:45
59765509,2,,59760084,3,,"<p>You should specify the primary key in your schema </p>&#xA;&#xA;<pre><code>type User @model @auth(rules: [{allow: owner}]) {&#xA;   id:ID!,&#xA;   username: String!&#xA;   name: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and change your request like below</p>&#xA;&#xA;<pre><code>  mutation updateSampleUser{&#xA;      updateSampleUser(&#xA;               input:{name:""James"",id:""9f4....""}&#xA;              )&#xA;         {&#xA;           name&#xA;         }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p><br>&#xA;It is equivalent to the following SQL statement&#xA;<br></p>&#xA;&#xA;<pre><code> update tbl1 set name = ""James"" where  id = ""9f4....""&#xA;</code></pre>&#xA;&#xA;<p><br>&#xA;and with <code>@auth(rules: [{allow: owner}])</code> just owner can do update.</p>&#xA;",4855817,,,,2020-01-16 08:25:53,"",,0,1,0,2020-01-16 08:25:53
59767918,1,59807331,,3,811,"<p>I have an amplify react app which allows users to upload <strong>private</strong> files and view them. I would like to implement a feature in which the uploader can dynamically specify who else (which users) can also view &amp; modify these files. However, these files would remain private to only the uploader and the shared with users, no one else.</p>&#xA;&#xA;<p>My app is setup with:</p>&#xA;&#xA;<ul>&#xA;<li>storage: S3 </li>&#xA;<li>auth: Cognito</li>&#xA;<li>db: DynamoDB</li>&#xA;<li>api: graphQL</li>&#xA;</ul>&#xA;&#xA;<p>The app stores private files on the S3 bucket:</p>&#xA;&#xA;<pre><code>import { Storage } from 'aws-amplify';&#xA;const response = await Storage.put(file.name, file, { level: 'private', progress(progress) {...} });&#xA;</code></pre>&#xA;&#xA;<p>The returned file path from <code>response.key</code> is stored in the database using the graphQL api based of this schema:</p>&#xA;&#xA;<pre><code>type File @model @auth(rules: [{ allow: owner }]) {&#xA;    id: ID!&#xA;    s3Key: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When presenting the data &amp; files to the uploader, I query this schema to display the files relevant to the specific user only and fetch them using:</p>&#xA;&#xA;<pre><code>url = await Storage.get(response.key, {level: 'private'})&#xA;</code></pre>&#xA;&#xA;<p>This is because the Cognito identity of that user is used in the S3 policy (somewhere?) to establish access.</p>&#xA;&#xA;<p>Now, I would like to implement file sharing between some users. It was quite easy to do it on the database level with this modification to the schema:</p>&#xA;&#xA;<pre><code>type File @model @auth(rules: [{ allow: owner }, { allow: owner, ownerField: ""owners"" }]) {&#xA;    id: ID!&#xA;    s3Key: String&#xA;    owners: [String]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So now the uploader can specify users who will be able to fetch this data out of the db by simply adding usernames to the array in the <code>owners</code> field.</p>&#xA;&#xA;<p>However, I am not sure how I can make the files stored on the S3 bucket available to the other owners.</p>&#xA;&#xA;<p>I cannot use owner's key because the stored files are only available to the uploader (as they should) and I am not sure how the code could specify the different Cognito identities that can access/modify a particular file. I need to find a way to grant access.</p>&#xA;&#xA;<p>Just to clarify: the uploader of the file lists who specifically (cognito identity / username) can access the file. They can add and remove on the go the accounts with the access to the file (so this is basically a modification to the <code>owners</code> field in the database).</p>&#xA;&#xA;<p>Thanks!</p>&#xA;",4939037,,,,2021-12-17 17:48:37,Amplify: dynamically sharing S3 files between Cognito users,<reactjs><amazon-web-services><amazon-s3><graphql><aws-amplify>,1,0,0,2020-01-16 10:45:23
59791399,1,60272170,,0,658,"<p>I'm building an AppSync project using AWS elasticsearch service as my db, and got this error when querying:</p>&#xA;&#xA;<blockquote>&#xA;  <p>""Can't serialize value (/getUsers/created_at) : Unable to serialize&#xA;  <code>2020-01-18T07:36:13</code> as a valid DateTime Object.""</p>&#xA;</blockquote>&#xA;&#xA;<p>This happens when I get a User object which looks like this:</p>&#xA;&#xA;<pre><code>type Users {&#xA;  id: String!&#xA;  name: String!&#xA;  description: String&#xA;  created_at: AWSDateTime&#xA;  updated_at: AWSDateTime&#xA;  logged_in: AWSDateTime&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The data stored in elasticsearch is of string type and of this format: 2020-01-18T07:36:13. </p>&#xA;&#xA;<p>I saw similar posts of this sort but can't find any solution for it. So, is there any way, I should deserialize it to AWSDataTime in my response mapping template or should I store in some date format in elasticsearch. </p>&#xA;&#xA;<p>One solution I got from this post <a href=""https://stackoverflow.com/questions/58144742/unable-to-serialise-awsdate-from-rds-in-appsync-response-mapping-template"">Unable to serialise AWSDate from RDS in AppSync response mapping template</a> is that to make the type of the date as String. But then, what's the use of AWSDateTime at all.</p>&#xA;",1523785,,,,2020-02-18 00:31:35,Unable to serialise AWSDate from Elasticsearch,<amazon-web-services><elasticsearch><graphql><aws-appsync>,1,0,0,2020-01-17 16:33:34
59798303,2,,53312297,3,,"<p>There is a <code>node.js</code> package specifically made for this:&#xA; <a href=""https://www.npmjs.com/package/export-appsync"" rel=""nofollow noreferrer"">export-appsync</a>. &#xA;But in the long term, it's easier to source control your schema and resolvers of you work from either serverless framework (serverless.com), from <code>cloudformation</code> or the AWS amplify framework. </p>&#xA;",5299799,,5299799,2020-01-30 06:27:16,2020-01-30 06:27:16,"",,0,0,0,2020-01-18 07:04:05
59803472,1,,,0,159,"<p>Could anyone let me know if Amazon AppSync supports integration with Amazon QLDB and point me to the right direction?</p>&#xA;&#xA;<p>Thanks,<br>&#xA;Kunal</p>&#xA;",3254900,,,,2020-01-18 23:47:07,Does Amazon AppSync support Amazon QLDB?,<amazon-web-services><graphql><aws-appsync><amazon-qldb>,1,0,0,2020-01-18 18:11:29
59805896,2,,59803472,1,,"<p>The data sources supported by default include Amazon DynamoDB tables, RDS databases, Amazon Elasticsearch domains, AWS Lambda functions, and third-party HTTP endpoints.&#xA;<br>But you can utilize AWS Lambda to integrate with alternative data sources like Amazon QLDB.<a href=""https://aws.amazon.com/blogs/mobile/integrating-aws-appsync-neptune-elasticache/"" rel=""nofollow noreferrer"">This</a> article gives an explanation.</p>&#xA;",4855817,,,,2020-01-18 23:47:07,"",,0,0,0,2020-01-18 23:47:07
59823014,1,,,1,812,"<p>I'm using AWS GraphQL Transform to build my schema, and I can't find any resources that point me to how I make a connection between one user and another without creating another type object.</p>&#xA;&#xA;<pre><code>   type User @model)&#xA;{&#xA;    id: ID!&#xA;    email: String!&#xA;    password: String!&#xA;    friends: [User] @connection(name: ""UserFriendConn"")&#xA;    blockedUsers: [User] @connection(name: ""UserBlockedConn"")&#xA;    friendRequests: [User] @connection(name: ""UserFriendRequestConn"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Calling <em>amplify api gql-compile</em> will throw error: <strong>InvalidDirectiveError: Found one half of connection ""UserFriendConn"" at User.friends but no related field on type User</strong>.</p>&#xA;&#xA;<p>Am I applying an entirely wrong pattern here?</p>&#xA;",11889613,,,,2020-02-07 01:31:38,User connection to another User as a friend relationship - AWS GraphQL Transform,<amazon-web-services><graphql><aws-amplify>,1,1,0,2020-01-20 12:10:39
59829598,1,59851827,,1,250,"<p>I'm using Graphene, Django and <a href=""https://github.com/jaydenwindle/graphene-subscriptions"" rel=""nofollow noreferrer"">graphene-subscriptions</a> to define a GraphQL Subscription. I'm trying to receive updates whenever a new <code>Book</code> with a specific <code>Author</code> is created. I've followed the getting started guide, and I'm trying to use the following code:</p>&#xA;&#xA;<pre class=""lang-py prettyprint-override""><code>class SubscriptionBook(graphene.ObjectType):&#xA;    NewBooks = graphene.Field(BookType, Author = graphene.String(required=True))&#xA;&#xA;    def resolve_NewBooks(root, info, Author):&#xA;&#xA;        return root.filter( &#xA;            lambda event:&#xA;                event.operation == CREATED  and&#xA;                isinstance(event.instance, Book) and&#xA;                event.instance.AuthorID == Author&#xA;        ).map(lambda event: event.instance)&#xA;</code></pre>&#xA;&#xA;<p>But it doesn't seem to work. It appears that this line is failing:</p>&#xA;&#xA;<pre class=""lang-py prettyprint-override""><code>event.instance.AuthorID == Author&#xA;</code></pre>&#xA;&#xA;<p>What am I doing wrong?</p>&#xA;",12270107,,5759719,2020-01-22 05:48:23,2020-01-22 05:48:23,Django GraphQL subscription not returning any data,<django><graphql><subscription><graphene-django>,1,0,0,2020-01-20 19:17:16
59832484,1,59833380,,1,470,"<p>Using Hasura GraphQL Engine, given the following diagram:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/k18PI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/k18PI.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>How can I restrict the <strong>select</strong> action on table <code>company</code> to just allow select the company record that is associated(fk) with user on table <code>user</code>? </p>&#xA;&#xA;<p>I'm using the <strong>x-hasura-user-id</strong> session variable, of course. But how to refer the 'current' <code>company_id</code> while looking into <code>user</code> table?</p>&#xA;&#xA;<p>This is a simple question, but knowing this, I'll be able to make more complex validations in the future.</p>&#xA;",2569440,,515189,2020-01-21 05:17:58,2020-01-21 05:17:58,How to make Hasura's permissions feature work when two tables are involved?,<permissions><graphql><hasura>,1,2,0,2020-01-21 00:02:56
59832488,1,,,0,339,<ol>&#xA;<li>Subscription Listener is registered in android</li>&#xA;<li>Make device offline</li>&#xA;<li>Trigger a mutation from AWS console</li>&#xA;<li>Make device online</li>&#xA;</ol>&#xA;&#xA;<p>I am expecting the subscription block to be called since there is a mutation(I am getting the subscription when device is online)</p>&#xA;&#xA;<p>Is there any way to get the subscription which was triggered when the device was offline ? </p>&#xA;,10261503,,,,2020-04-07 19:01:35,AWS Appsync subscription is not triggered when device came to onlne from offline (event triggered when device was offline),<android><amazon-web-services><aws-appsync><appsync-apollo-client>,1,0,0,2020-01-21 00:03:30
59888300,1,,,0,47,"<p>Let's say I have 10 type <code>Foo</code> entries in my DB, and half look like</p>&#xA;&#xA;<pre><code>{&#xA; bar: Boolean&#xA; baz: Boolean&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and the other half is missing that property, because they're legacy entries that occurred before the schema was updated, and they look like:</p>&#xA;&#xA;<pre><code>{&#xA; bar: Boolean&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now, I want to filter for <code>baz</code>, but half of my entries don't even have that property. What happens if I run a filter here? Will it run correctly if i say {baz: {contains: 'true'}} ?</p>&#xA;&#xA;<p>Using AWS AppSync to manage my GraphQL server, which interfaces with DynamoDB, by the way.</p>&#xA;",6009931,,6024220,2020-01-24 00:02:06,2020-01-24 00:02:06,Can you filter for a property that only half of the queried entries possess?,<javascript><graphql><amazon-dynamodb><aws-appsync>,1,1,0,2020-01-23 23:06:07
59888513,2,,59888300,1,,"<p>After doing some more research, it turns out that after updating your Schema AppSync will actually return that property with a value of <code>null</code>, so you can safely filter. However, note that in DynamoDB you won't see a column that contains those null values... the column just isn't there, so I'm assuming the property is generated by the GraphQL resolver when it fails to find the value in DynamoDB.</p>&#xA;",6009931,,,,2020-01-23 23:32:20,"",,0,1,0,2020-01-23 23:32:20
59904110,2,,52840557,2,,"<p>Old question but thought I would add some notes...</p>&#xA;&#xA;<p>AWSJSON is a string value that will be parsed into DynamoDB as JSON and stringified again on fetching.</p>&#xA;&#xA;<p>So AppSync expects a string (stringified JSON) for inputs and will return a string that can be parsed with <code>JSON.parse</code>. </p>&#xA;&#xA;<p>However this data is parsed before storing in DynamoDB. So of you query DynamoDB separately than through AppSync then you can query it like it was an object. Same with inputing directly into DynamoDB.</p>&#xA;&#xA;<p>The only way to get JSON in the AppSync result is to define each and every field in GraphQL. Sometimes this can be achieved by restructuring data. For example instead of storing:</p>&#xA;&#xA;<pre><code>{&#xA;   bob: { age: 34 },&#xA;   igor: { age: 124 }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Which would need to be stringified as an AWSJSON field. It can however be restructured like this:</p>&#xA;&#xA;<pre><code>[{&#xA;   name: 'bob',&#xA;   age: 34&#xA; }, { &#xA;   name: 'igor',&#xA;   age: 123&#xA;}]&#xA;</code></pre>&#xA;&#xA;<p>Which can be defined in GraphQL as something like this:</p>&#xA;&#xA;<pre><code>type User {&#xA;  age: Int,&#xA;  name: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So that one can now extract specific value such as <code>age</code> from the GraphQL without involving and JSON parse/stringify.</p>&#xA;",856498,,,,2020-01-24 21:48:03,"",,0,0,0,2020-01-24 21:48:03
59937887,2,,53544974,10,,"<p>You have to select the QUERY VARIABLES tab, and put the variable value there. You can check that in the attached image.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/HtYR6.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/HtYR6.png"" alt=""enter image description here""></a></p>&#xA;",7367387,,,,2020-01-27 19:47:09,"",,0,1,0,2020-01-27 19:47:09
59958053,1,,,0,291,"<p>When using AWS AppSync as a backend GraphQL server, what are the advantages of using AppSync client on top of vue-apollo client? Can I just use vue-apollo to interact with my GraphQl server without using AppSync client? </p>&#xA;",1421920,,,,2020-02-10 20:17:35,Why use AWS AppSync client on top of vue-apollo?,<amazon-web-services><vue.js><aws-appsync><vue-apollo><appsync-apollo-client>,1,0,0,2020-01-28 22:29:02
59976537,1,59992499,,0,222,"<p>Q: How do I parse and type a server response in a generic way when one of the parent keys in the response will constantly change?</p>&#xA;&#xA;<p>As a preface: I'm still new to TS and parsing server responses - so maybe this is obvious - but after a day I've not found a good solution. </p>&#xA;&#xA;<p>Background: I'm using Typescript and AWS Amplify. I have a graphql mutation called CreateGroup. It requires input of a code-generated type CreateGroupInput defined as such:</p>&#xA;&#xA;<pre><code>export type CreateGroupInput = {&#xA;  id?: string | null,&#xA;  name: string,&#xA;  createdAt?: string | null,&#xA;  updatedAt?: string | null,&#xA;};&#xA;&#xA;//I'm using this as input to create a new db entry&#xA;const groupInfo: CreateGroupInput = {&#xA;  name: ""new group"",&#xA;  createdAt: time,&#xA;  updatedAt: time&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>I want to parse and type the result of the mutation so that I can access the id that gets created during the mutation process. IDEALLY this is what I would like to do:</p>&#xA;&#xA;<pre><code>const data = API.graphql(graphqlOperation(mutations.createGroup, {input: groupInfo}) as CreateGroupInput;&#xA;&#xA;</code></pre>&#xA;&#xA;<p>and have the data variable be of type CreateGroupInput with the server response all in the correct place. However the result I get back doesn't parse nicely because the structure is a bit different:</p>&#xA;&#xA;<pre><code>{&#xA;    ""data"": {&#xA;        ""createGroup"": {&#xA;            ""id"": ""1d720f68-56bd-46a9-82ef-e060a5b07177"",&#xA;            ""name"": ""new group"",&#xA;            ""createdAt"": ""1580278766358"",&#xA;            ""updatedAt"": ""1580278766358""&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I tried doing different combinations of JSON.Parse and JSON.stringify - but none of them work and honestly it feels like I am doing something really wrong. This function will eventually handle many different mutations - and I expect the name ""createGroup"" in the response to change for each of these - so I can't just parse ""result.data.createGroup"" either. </p>&#xA;&#xA;<p>Which leads me to posting this question. How do I parse and type the server response in a generic way when the key ""createGroup"" in the response will constantly change?</p>&#xA;",11157318,,11157318,2020-01-30 18:40:46,2020-01-30 18:40:46,How to properly parse and type graphql results?,<json><typescript><graphql>,1,0,0,2020-01-29 22:28:10
59983012,1,,,0,282,"<p>I'm using GraphQL to scan a collection in dynamodb that looks like this:</p>&#xA;&#xA;<pre><code>{&#xA;  ""config_name"": ""COLOR_PALETTE"",&#xA;  ""config_value"": {&#xA;    ""SHOW_CUSTOM_SUBSCRIPTION"": ""NO"",&#xA;    ""SHOW_DD_SUBSCRIPTION"": ""NO"",&#xA;    ""SHOW_GRADIENT_SUBSCRIPTION"": ""YES"",&#xA;    ""SHOW_SOLID_SUBSCRIPTION"": ""NO""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to return ""config_value"" as key value pair. How I define AppSync schema and resolver to get ""config_value"" as key value pair ?</p>&#xA;",7671196,,,,2020-01-31 19:42:33,Dynamodb - scan map attribute with GraphQL,<amazon-web-services><graphql><aws-appsync>,1,0,0,2020-01-30 09:42:32
59987042,1,,,0,55,"<p>Hello i'm trying to fetch some data in my mongoDB collections through graphQL,</p>&#xA;&#xA;<p>Here's my graphQl schema : </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>type Account {&#xA;  _id: String&#xA;  id: String&#xA;  account_id: Int&#xA;  limit: Int!&#xA;  products: [String]&#xA;}&#xA;&#xA;type Query {&#xA;  account(_id: String): [Account]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Here's a console log of the resolver return</p>&#xA;&#xA;<pre><code>[ { _id: 5ca4bbc7a2dd94ee58162a49,&#xA;    account_id: 142442,&#xA;    limit: 9000,&#xA;    products:&#xA;     [ 'Commodity',&#xA;       'CurrencyService',&#xA;       'Derivatives',&#xA;       'InvestmentFund',&#xA;       'InvestmentStock' ],&#xA;    id: '5ca4bbc7a2dd94ee58162a49' } ]&#xA;</code></pre>&#xA;&#xA;<p>but here's the query returns from graphiQL</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;  ""data"": {&#xA;    ""account"": [&#xA;      {&#xA;        ""id"": ""5ca4bbc7a2dd94ee58162a49"",&#xA;        ""_id"": ""5ca4bbc7a2dd94ee58162a49"",&#xA;        ""account_id"": null,&#xA;        ""limit"": 9000,&#xA;        ""products"": null&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I can't figure out why my products and account_id fields return a null value, they seems to have the correct type, did i miss something ?</p>&#xA;",9757364,,,,2020-01-30 13:45:37,Cannot fetch array of strings,<javascript><node.js><mongodb><graphql>,1,0,0,2020-01-30 13:21:54
59987454,2,,59987042,1,,"<p>Okay nevermind the problem was in the mongoose schema i forgot to add these fields </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const accounts = new Schema({&#xA;    limit: Number,&#xA;    products: [String],&#xA;    account_id: Number&#xA;})&#xA;</code></pre>&#xA;",9757364,,,,2020-01-30 13:45:37,"",,0,0,0,2020-01-30 13:45:37
59987837,2,,59530140,0,,<p>Although not knowing why <code>@Matches</code> doesn't work you could try the <code>@IsMobilePhone(locale: string)</code> and the <code>@IsPhoneNumber(region: string)</code> decorators which could even be a more elegant solution</p>&#xA;,12806691,,,,2020-01-30 14:07:01,"",,0,0,0,2020-01-30 14:07:01
59992499,2,,59976537,0,,"<p>I found out the results can ALSO be accessed by a key (in retrospect - this should have been obvious) - which allows me to use variables.</p>&#xA;&#xA;<p>I added an extra input to the function ""queryName"" and then accessed the data using </p>&#xA;&#xA;<p><code>result.data[queryName]</code></p>&#xA;&#xA;<p>it's not IDEAL - but way better than the alternatives.</p>&#xA;",11157318,,,,2020-01-30 18:40:25,"",,0,0,0,2020-01-30 18:40:25
59998440,1,,,0,209,"<p>I've been trying to enable public access to appsync graphql, but had no luck.</p>&#xA;&#xA;<p>Within the authorization, it needs cognito/api key/iam setup.</p>&#xA;&#xA;<p>Thanks </p>&#xA;",1077043,,,,2020-01-31 20:01:12,How to open AppSync GraphQL to public?,<graphql><aws-appsync>,1,2,0,2020-01-31 05:37:38
60001157,2,,59989384,2,,"<p>Using FaunaDB Shell:</p>&#xA;&#xA;<pre><code>CreateIndex({&#xA;  name:   ""unique_promo_variable"",&#xA;  source: Collection(""PromoTemplateVariable""),&#xA;  terms: [&#xA;    {&#xA;      field: [""data"", ""promo""]&#xA;    },&#xA;    {&#xA;      field: [""data"", ""variable""]&#xA;    }&#xA;  ],&#xA;  unique: true&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>It's the only way I've found to do this until they implement this feature in the <a href=""https://docs.fauna.com/fauna/current/api/graphql/directives/d_unique"" rel=""nofollow noreferrer"">@unique</a> directive</p>&#xA;",2410347,,,,2020-01-31 09:29:06,"",,0,0,0,2020-01-31 09:29:06
60005436,1,,,1,429,"<p>I am trying to connect a Node.js and express web service with my SQLServer database.</p>&#xA;&#xA;<p>I have been testing and they return the correct values ​​to the database, but the problem is when I try to get the information from Graphql and convert it to JSON</p>&#xA;&#xA;<p>The JSON returns me the structure that I need correctly, but with all the data with null value.</p>&#xA;&#xA;<p>This is the database configuration:</p>&#xA;&#xA;<pre><code>const sql = require('mssql');&#xA;&#xA;const config = {&#xA;user: 'user',&#xA;password: 'password',&#xA;server: 'server',&#xA;database: 'db',&#xA;options: {&#xA;  encrypt: true&#xA;}&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>This is the Method that is called by Graphql:</p>&#xA;&#xA;<pre><code>let getEmpleado = (id) =&gt; {&#xA;let datos = sql.connect(config, function(err){&#xA;   if (err) console.log(err);   &#xA;&#xA;   let sqlQuery = 'SELECT Empleado, Nombre, Apellido1, Apellido2 FROM dbo.Empleados WHERE Empleado=' + id.id;&#xA;   let sqlRequest = new sql.Request();   &#xA;&#xA;//console.log(sqlQuery);&#xA;&#xA;    let datos1 = sqlRequest.query(sqlQuery, function(err, empleado){&#xA;        let datos2;&#xA;        if (err) console.log(err)&#xA;        datos = JSON.stringify(empleado.recordset[0]);&#xA;        sql.close();  &#xA;        console.log(datos);&#xA;    //return datos2; &#xA;   });&#xA;   //return datos1;&#xA;  });&#xA; return datos;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Result:</p>&#xA;&#xA;<pre><code>{&#xA;""data"": {&#xA;  ""empleado"": {&#xA;  ""Empleado"": null,&#xA;  ""Nombre"": null,&#xA;  ""Apellido1"": null,&#xA;  ""Apellido2"": null&#xA;  }&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm quite new with this and I need some help because I've gone crazy looking for information.</p>&#xA;&#xA;<p><strong>Edit 1:</strong></p>&#xA;&#xA;<p>After debugging the function, I have seen that it is being executed in an order that is not logical to me.</p>&#xA;&#xA;<p>I put the code again with a number indicating the steps it does.</p>&#xA;&#xA;<pre><code>let getEmpleado = (id) =&gt; {&#xA; 1- let datos = sql.connect(config, function(err){&#xA;   3- if (err) console.log(err);   &#xA;&#xA;   4- let sqlQuery = 'SELECT Empleado, Nombre, Apellido1, Apellido2 FROM dbo.Empleados WHERE Empleado=' + id.id;&#xA;   5- let sqlRequest = new sql.Request();   &#xA;&#xA;//console.log(sqlQuery);&#xA;&#xA;    6- let datos1 = sqlRequest.query(sqlQuery, function(err, empleado){&#xA;        8- let datos2;&#xA;        9- if (err) console.log(err)&#xA;        10- datos = JSON.stringify(empleado.recordset[0]);&#xA;        11- sql.close();  &#xA;        12- console.log(datos);&#xA;    13- //return datos2; &#xA;   });&#xA;   7- //return datos1;&#xA;  });&#xA; 2- return datos;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Edit 2:</strong></p>&#xA;&#xA;<p>As Daniel sugested i check the mssql documentation and i use the promise Queries Example: <a href=""https://www.npmjs.com/package/mssql#promises"" rel=""nofollow noreferrer"">Promises Queries Example</a>. </p>&#xA;&#xA;<p>After debugging, again some strange order executing the functions.</p>&#xA;&#xA;<pre><code>1- const sql = require('mssql')&#xA;&#xA;2- sql.on('error', err =&gt; {&#xA;  // ... error handler&#xA;})&#xA;&#xA;3- sql.connect(config).then(pool =&gt; {&#xA;// Query&#xA;&#xA;6- return pool.request()&#xA;    .input('input_parameter', sql.Int, id.id)&#xA;    .query('SELECT Empleado, Nombre, Apellido1, Apellido2 FROM dbo.Empleados WHERE Empleado= @input_parameter')&#xA;4- }).then(result =&gt; {&#xA;    7- console.dir(result)&#xA;    8- return result.recordset[0]&#xA;}).catch(err =&gt; {&#xA;    // ... error checks&#xA;});&#xA;&#xA;5- console.log('End')&#xA;</code></pre>&#xA;",2257448,,2257448,2020-02-03 12:15:26,2020-02-04 12:48:52,"Nodejs, GraphQl and SQLServer return null values",<node.js><sql-server><graphql>,1,7,0,2020-01-31 14:05:18
60010277,2,,59983012,1,,"<p>If you set your schema up as follows:</p>&#xA;&#xA;<pre><code>type ConfigValues {&#xA;    SHOW_CUSTOM_SUBSCRIPTION: String!&#xA;    SHOW_DD_SUBSCRIPTION: String!&#xA;    SHOW_GRADIENT_SUBSCRIPTION: String!&#xA;    SHOW_SOLID_SUBSCRIPTION: String!&#xA;}&#xA;&#xA;type Query {&#xA;    getConfigValues(configName: String!): ConfigValues&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>With a resolver on <code>getConfigValues</code> with a request mapping template of:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""GetItem"",&#xA;    ""key"": {&#xA;        ""config_name"": $util.dynamodb.toDynamoDBJson($ctx.args.configName),&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And a response mapping template of:</p>&#xA;&#xA;<pre><code>$util.toJson($ctx.result.config_value)&#xA;</code></pre>&#xA;&#xA;<p>Performing the following query:</p>&#xA;&#xA;<pre><code>query {&#xA;  getConfigValues(configName: ""COLOR_PALETTE"") {&#xA;    SHOW_CUSTOM_SUBSCRIPTION&#xA;    SHOW_DD_SUBSCRIPTION&#xA;    SHOW_GRADIENT_SUBSCRIPTION&#xA;    SHOW_SOLID_SUBSCRIPTION&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Will have the response of:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getConfigValues"": {&#xA;      ""SHOW_CUSTOM_SUBSCRIPTION"": ""NO"",&#xA;      ""SHOW_DD_SUBSCRIPTION"": ""NO"",&#xA;      ""SHOW_GRADIENT_SUBSCRIPTION"": ""YES"",&#xA;      ""SHOW_SOLID_SUBSCRIPTION"": ""NO""&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>This answer assumes that your Primary partition key of your DynamoDB table is set to be <code>config_name</code>.</p>&#xA;",11376091,,,,2020-01-31 19:42:33,"",,0,0,0,2020-01-31 19:42:33
60023765,2,,52512011,0,,"<p><strong>Add this to BookQuery Response Mapping Template</strong></p>&#xA;&#xA;<pre><code>#set( $book = $ctx.result )&#xA;#set($Articles = []);&#xA;#foreach($article in $book.articles)&#xA;    #set( $newArticle = $article )&#xA;    $util.qr($newArticle.put(""bookID"", $book.id))&#xA;    $util.qr($Articles.add($newArticle))&#xA;#end&#xA;$util.qr($book.put(""articles"", $Articles))&#xA;$util.toJson($book)&#xA;</code></pre>&#xA;&#xA;<p>Now, every article will have bookID</p>&#xA;",9842134,,,,2020-02-02 06:28:13,"",,0,0,0,2020-02-02 06:28:13
60048645,1,60158668,,6,1257,"<p>While defining this custom directive:</p>&#xA;&#xA;<p><code>directive @hashField on INPUT_FIELD_DEFINITION</code> </p>&#xA;&#xA;<p>I get this error on the AWS AppSync (Schema tab):</p>&#xA;&#xA;<blockquote>&#xA;  <p>Error parsing schema. Directive definitions are not supported.</p>&#xA;</blockquote>&#xA;&#xA;<p>I understand AWS provides <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/pipeline-resolvers.html#create-a-function"" rel=""noreferrer"">functions</a> that can provide similar functionalities, but these functions won't work for my use case.</p>&#xA;&#xA;<p>What's the alternative for custom directives in AWS AppSync? Is it going to be supported in a future release?</p>&#xA;",376382,,376382,2020-02-03 23:45:31,2022-05-05 00:43:25,AWS AppSync - Defining GraphQL schema with custom directives,<amazon-web-services><graphql><aws-appsync>,2,0,0,2020-02-03 23:38:24
60062350,1,,,1,601,"<p>I have a GraphQL API (AppSync) backed by a DynamoDB table keyed a specific id with timestamp as the range key. I want to retrieve all possible history for that id so I wrote a query in my GraphQL schema that would allow me to do so. Here's the request vtl:</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2017-02-28"",&#xA;    ""operation"": ""Query"",&#xA;    ""query"": {&#xA;        ""expression"": ""id = :id"",&#xA;        ""expressionValues"": {&#xA;            "":id"": {&#xA;                ""S"": ""$context.args.id""&#xA;            }&#xA;        }&#xA;    },&#xA;    ""nextToken"": $util.toJson($util.defaultIfNullOrEmpty($context.args.nextToken, null))&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>There could be thousands of items in the ddb table for an id so I wrote a Lambda function to query for all of them and return the result in a list as such (I know the code can be simplified):</p>&#xA;&#xA;<pre><code>exports.handler = async function (event, context, callback) {&#xA;    const graphqlClient = new appsync.AWSAppSyncClient({&#xA;        url: process.env.APPSYNC_ENDPOINT,&#xA;        region: process.env.AWS_REGION,&#xA;        auth: {&#xA;            type: 'AWS_IAM',&#xA;            credentials: {&#xA;                accessKeyId: process.env.AWS_ACCESS_KEY_ID,&#xA;                secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,&#xA;                sessionToken: process.env.AWS_SESSION_TOKEN&#xA;            }&#xA;        },&#xA;        disableOffline: true&#xA;    });&#xA;&#xA;    const query = gql`query GetAllItemsById(&#xA;        $id: String!&#xA;        $nextToken: String&#xA;    ) {&#xA;        getAllItemsById(&#xA;            id: $id&#xA;            nextToken: $nextToken&#xA;        ) {&#xA;            exampleField {&#xA;                subField1&#xA;                subField2&#xA;                subField3&#xA;            }&#xA;            nextToken&#xA;        }&#xA;    }&#xA;    `;&#xA;&#xA;    const initialResult = await graphqlClient.query({&#xA;        query,&#xA;        variables: {&#xA;            id: event.id&#xA;        }&#xA;    });&#xA;&#xA;    var finalResult = initialResult.data.getAllItemsById.exampleField;&#xA;    var nextToken = initialResult.data.getAllItemsById.nextToken;&#xA;&#xA;    while (nextToken !== null) {&#xA;        const result = await graphqlClient.query({&#xA;            query,&#xA;            variables: {&#xA;                id: event.id,&#xA;                nextToken: nextToken&#xA;            }&#xA;        });&#xA;&#xA;        finalResult = finalResult.concat(result.data.getAllItemsById.exampleField);&#xA;        nextToken = result.data.getAllItemsById.nextToken;&#xA;    }&#xA;&#xA;    console.log(""Total Results: "" + finalResult.length);&#xA;&#xA;    return callback(null, finalResult);&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>For some reason, not all items are being returned. <code>nextToken</code> is null before all results are returned. I know DDB has a 1MB limit for query which is why I'm paginating using <code>nextToken</code> but why is it still not returning all the items in the table? Also, if there's a better way to implement this, I'm open to it.</p>&#xA;",7939065,,,,2020-02-04 17:11:03,DynamoDB returning null nextToken when there are still results in database,<amazon-web-services><aws-lambda><graphql><amazon-dynamodb><aws-appsync>,0,1,0,2020-02-04 17:11:03
60082137,2,,60068428,8,,"<p>The Appsync queries page is actually a conjunction of several things together. You cannot issue queries from the CLI according to (<a href=""https://docs.aws.amazon.com/cli/latest/reference/appsync/index.html"" rel=""noreferrer"">https://docs.aws.amazon.com/cli/latest/reference/appsync/index.html</a>)</p>&#xA;&#xA;<p>You can however use a GUI Client tool to send a POST to your Appsync endpoint. Like Postman or Insomnia (my personal favorite). However is your goal is to truly send GraphQL compliant queries through the CLI, then you will have to resort to 'curl's</p>&#xA;&#xA;<p>Here is an example python script I have that sends a curl request to my Appsync API.</p>&#xA;&#xA;<pre><code>#!/usr/bin/env python3&#xA;import os&#xA;&#xA;cmd = """"""curl -i -H 'Content-Type: application/json' -H ""x-api-key: &lt;ENTER YOUR API KEY FROM THE APPSYNC SETTINGS PAGE&gt;"" -H ""Host: &lt;ENTER YOUR HOST ENDPOINT FROM THE APPSYNC API SETTINGS PAGE &gt;"" -X POST -d '{""query"": ""query {listEvents {items {id}}}""}' https://&lt;ENTER YOUR HOST ENDPOINT FROM THE APPSYNC API SETTINGS PAGE&gt;/graphql""""""&#xA;&#xA;def doGraphqlRequest():    &#xA;    os.system(cmd)&#xA;&#xA;print(""Starting request to Appsync endpoint"")&#xA;doGraphQLRequest()&#xA;print(""Finsihed request to Appsync endpoint"")&#xA;</code></pre>&#xA;&#xA;<p>To explain a bit, you are making a POST request with your query to your appsync given '/graphql/ endpoint.&#xA;You have 3 headers (Denoted by the -H flag)</p>&#xA;&#xA;<ol>&#xA;<li>The x-api-key: Only applicable if you use API KEY as the auth type. Other auth types work too, you might have a AuthToken: Bearer , and Cognito works too but is significantly more complicated from CLI</li>&#xA;<li>The host: This is the name of the ec2 host given by your api. You can find it by looking at your assigned endpoint and deleteing the https:// and /graphql</li>&#xA;<li>The Content-Type: application/json. This is kinda standard, not super sure why but it's a must have.</li>&#xA;</ol>&#xA;&#xA;<p>Hope this helps!</p>&#xA;",12821570,,,,2020-02-05 18:38:45,"",,0,8,0,2020-02-05 18:38:45
60097942,1,60115973,,2,1030,"<p>I'm trying to deploy my updated <code>datamodel.prisma</code> file. However, an error occurs and from what I can understand, it thinks that I'm trying to create a relation between an enum I defined above with the User type.</p>&#xA;&#xA;<p>Here is my file:</p>&#xA;&#xA;<pre><code>enum Permission {&#xA;  ADMIN&#xA;  USER&#xA;  ITEMCREATE&#xA;  ITEMUPDATE&#xA;  ITEMDELETE&#xA;  PERMISSIONUPDATE&#xA;}&#xA;&#xA;type User {&#xA;  id: ID! @id&#xA;  name: String!&#xA;  email: String! @unique&#xA;  password: String!&#xA;  resetToken: String&#xA;  resetTokenExpiry: String&#xA;  permissions: [Permission]&#xA;}&#xA;&#xA;type Item {&#xA;  id: ID! @id&#xA;  title: String!&#xA;  description: String!&#xA;  image: String&#xA;  largeImage: String&#xA;  price: Int!&#xA;  createdAt: DateTime! @createdAt&#xA;  updatedAt: DateTime! @updatedAt&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Running <code>prisma deploy --env-file variables.env</code> gives me this error below:</p>&#xA;&#xA;<pre><code>Errors:&#xA;&#xA;  User&#xA;    ✖ Valid values for the strategy argument of `@scalarList` are: RELATION.&#xA;</code></pre>&#xA;&#xA;<p>If I change <code>permissions: [Permission]</code> to <code>permissions: Permission[]</code>, it gives this error instead (specifically, <code>expected ImplementsInterfaces, DirectivesConst or FieldDefinitions</code>):</p>&#xA;&#xA;<pre><code>ERROR: Syntax error while parsing GraphQL query. Invalid input ""{\n  id: ID! @id\n  name: String!\n  email: String! @unique\n  password: String!\n  resetToken: String\n  resetTokenExpiry: String\n  permissions: Permission["", expected ImplementsInterfaces, DirectivesConst or FieldDefinitions (line 10, column 11):&#xA;type User {&#xA;          ^&#xA;&#xA;{&#xA;  ""data"": {&#xA;    ""deploy"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 2,&#xA;          ""column"": 9&#xA;        }&#xA;      ],&#xA;      ""path"": [&#xA;        ""deploy""&#xA;      ],&#xA;      ""code"": 3017,&#xA;      ""message"": ""Syntax error while parsing GraphQL query. Invalid input \""{\\n  id: ID! @id\\n  name: String!\\n  email: String! @unique\\n  password: String!\\n  resetToken: String\\n  resetTokenExpiry: String\\n  permissions: Permission[\"", expected ImplementsInterfaces, DirectivesConst or FieldDefinitions (line 10, column 11):\ntype User {\n          ^"",&#xA;      ""requestId"": ""us1:ck6au2sum8frx0b00fviv1dom""&#xA;    }&#xA;  ],&#xA;  ""status"": 200&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm not sure what that error means, but I do have a feeling that it doesn't understand the <code>@unique</code> type modifier at the email field. It wasn't there previously and deploys worked fine. Any help is greatly appreciated!</p>&#xA;",12852907,,,,2020-05-13 17:53:10,"Prisma deploy: relations are expected for enums/expecting an interface, directive or definition",<graphql><prisma>,1,0,0,2020-02-06 15:03:48
60098012,1,60100449,,2,996,"<p>I have a database with the following structure.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/JBeSm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/JBeSm.png"" alt=""Graph Database""></a>&#xA;I'm writing a GraphQL resolver for the bottom-most node (the ""rows"" node).</p>&#xA;&#xA;<p>As the image shows, each ""rows"" node corresponds to a specific path. (Company)->(DB)->(Table)->(rows)</p>&#xA;&#xA;<p>A Query would be of the form: </p>&#xA;&#xA;<pre><code>{&#xA;  Company(name: ""Google"") {&#xA;    Database(name: ""accounts"") {&#xA;      Table(name: ""users"") {&#xA;        rows&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Question:</strong> How can I include/access <code>Company.name</code>, <code>Database.name</code>, <code>Table.name</code> information in the <code>rows</code> resolver so that I can determine which <code>rows</code> node to return?</p>&#xA;&#xA;<p>In other words: I know I can access <code>Table.name</code> using <code>parent.name</code>, but is there a way to get <code>parent.parent.name</code> or <code>parent.parent.parent.name</code>?</p>&#xA;&#xA;<p>If there isn't a way to access ancestor properties, should I use arguments or context to pass these properties manually into the <code>rows</code> resolver?</p>&#xA;&#xA;<p>Note: I can't use the neo4j-graphql-js package.</p>&#xA;&#xA;<p>Note: This is the first simple example I thought of and I understand there are structural problems with organizing data this way, but the question still stands.</p>&#xA;",11587741,,11587741,2020-03-26 13:56:45,2020-03-26 13:56:45,How to access query path properties in a resolver? GraphQL,<graphql>,1,2,0,2020-02-06 15:07:08
60098971,1,60100476,,2,2339,"<p>I have a feeling that it must be strongly typed, one way or the other, and am curious if I can accomplish both with the same query, I would want to something like this:</p>&#xA;&#xA;<pre><code>{&#xA;  accounts(accountId: [1,2,3]) {&#xA;    ...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And also be able to make this same call treating it as a plain int:</p>&#xA;&#xA;<pre><code>{&#xA;  accounts(accountId: 1) {&#xA;    ...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",11870194,,,,2020-02-14 13:23:59,"Is it possible in GraphQL to structure a Query to expect an Integer, or an array of Integers?",<graphql><hotchocolate>,2,0,0,2020-02-06 15:56:59
60103579,2,,60103477,4,,"<p>Given your simple description I would go with Amazon's DynamoDB. According to their docs:</p>&#xA;&#xA;<p>""Amazon DynamoDB is a key-value and document database that delivers single-digit millisecond performance at any scale. It's a fully managed, multiregion, multimaster, durable database with built-in security, backup and restore, and in-memory caching for internet-scale applications. DynamoDB can handle more than 10 trillion requests per day and can support peaks of more than 20 million requests per second.""</p>&#xA;&#xA;<p>Seems to fulfill your needs. </p>&#xA;",2543566,,,,2020-02-06 21:10:49,"",,0,2,0,2020-02-06 21:10:49
60110716,1,61318662,,1,1196,"<p>I'm using lighthouse-php to make a graphql api and I'm having a trouble changing middleware (it will be deprecated in new versions) directive to guard.</p>&#xA;&#xA;<pre><code>extend type Query @middleware(checks: [""auth:api""]) {&#xA;    task(id: ID @eq): Task @can(ability: ""view"" find:""id"") @find&#xA;    mytasks: [Task!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Using this code works well. I mean, the system checks if the user is logged and check against the policy if the user can access to their task, but when I try to change the <code>@middleware</code> directive to <code>@guard</code> directive like this: </p>&#xA;&#xA;<pre><code>extend type Query @guard(with: [""api""]){&#xA;    task(id: ID @eq): Task @can(ability: ""view"" find:""id"") @find&#xA;    mytasks: [Task!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Always return that the user is unauthenticated. But, in the last case if I remove the @can directive the system check if the user is logged or not (but I need to check against the policy if the user can access the specified task).</p>&#xA;&#xA;<p>I'm using these versions of packages:</p>&#xA;&#xA;<pre><code>""joselfonseca/lighthouse-graphql-passport-auth"": ""^3.0"",&#xA;    ""laravel/framework"": ""^6.2"",&#xA;    ""laravel/passport"": ""^8.2"",&#xA;    ""laravel/tinker"": ""^2.0"",&#xA;    ""mll-lab/laravel-graphql-playground"": ""^2.0"",&#xA;    ""nuwave/lighthouse"": ""^4.8""&#xA;</code></pre>&#xA;&#xA;<p>Have somebody experimented with this trouble?&#xA;thanks.</p>&#xA;",2505815,,984422,2020-02-07 09:42:35,2020-05-01 13:54:39,Error with authenticated user using guard and can to access to some model,<php><laravel><graphql><laravel-lighthouse>,2,2,0,2020-02-07 09:37:27
60115193,1,,,1,634,"<p>I'm trying to push my AWS Amplify API schema/create the resource but it errors out saying:</p>&#xA;&#xA;<pre><code>✖ An error occurred when pushing the resources to the cloud&#xA;&#xA;managerId field is not of type Int&#xA;</code></pre>&#xA;&#xA;<p>The error goes away if I change managerId to an Int on the Writer type but I don't want to do that. It should be an ID. Any idea what's wrong here?</p>&#xA;&#xA;<p><strong>schema.graphql</strong></p>&#xA;&#xA;<pre><code>type Writer implements Person &#xA;  @model&#xA;  @searchable&#xA;  @key(name: ""byManager"", fields: [""managerId"", ""hourlyPay""])&#xA;  @auth(rules: [&#xA;    {allow: groups, groups: [""Admin""]},&#xA;    {allow: public, provider: iam, operations: [read]}&#xA;  ])&#xA;{&#xA;  id: ID!&#xA;  managerId: ID!&#xA;  name: String!&#xA;  hourlyPay: Float!&#xA;  manager: Manager! @connection(fields: [""managerId""])&#xA;}&#xA;&#xA;type Manager implements Person &#xA;  @model&#xA;  @searchable&#xA;  @auth(rules: [&#xA;    {allow: groups, groups: [""Admin""]},&#xA;    {allow: public, provider: iam, operations: [read]}&#xA;  ])&#xA;{&#xA;  id: ID!&#xA;  name: String!&#xA;  department: String&#xA;  writers: [Writer!]! @connection(keyName: ""byManager"", fields: [""id""])&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Thanks!</p>&#xA;",3288948,,,,2020-11-22 03:15:50,AWS Amplify API error - field is not of type Int,<amazon-web-services><graphql><aws-amplify><aws-appsync>,1,1,0,2020-02-07 14:16:56
60166064,1,,,0,42,"<p>I am new to Rails, I want to save an entry to <strong>table A</strong> that table generates a new id when the creation is done, I need to use that fresh id to create a new entry on <strong>table B</strong>.</p>&#xA;&#xA;<p>At the moment my current solutions just work sometimes, what happens is that the id is strictly necessary to create the entry on <strong>table B</strong> and my guess is that the entry on <strong>table A</strong> is not yet saved when I try to create a new entry on <strong>table B</strong>.</p>&#xA;&#xA;<p><strong>Below is the code</strong> that I am using to accomplish the behavior above:</p>&#xA;&#xA;<pre><code>class Resolvers::CreateTask &lt; GraphQL::Function&#xA;  argument :name, !types.String&#xA;  argument :organization, !types.String&#xA;&#xA;  type Types::TaskType&#xA;&#xA;  def call(_obj, args, ctx)  &#xA;    task = Task.create!(&#xA;      name: args[:name],&#xA;    )&#xA;&#xA;    TaskOrganization.create!(&#xA;      task_id: task.id&#xA;      organization: args[:organization]&#xA;    )&#xA;  end&#xA;end&#xA;</code></pre>&#xA;",12877715,,12877715,2020-02-11 10:06:34,2020-02-11 12:04:15,Saving entries on different tables fails sometimes,<ruby-on-rails><ruby><database><graphql>,1,2,0,2020-02-11 09:51:03
60179423,1,,,10,2856,"<p><strong>The Goal</strong></p>&#xA;&#xA;<p>Launch a React based order form using AWS amplify. Currently fails to submit entries to the database, due to what may be an authentication problem.</p>&#xA;&#xA;<p>I have an AWS Amplify backend that is being used by several front ends - an inventory management system, and a new order form.</p>&#xA;&#xA;<p>The inventory management system has authentication set up (Cognito User Pools, using the withAuthenticator React Component) that requires a user login to access the app. &#xA;When this is completed successfully, it allows the user to make changes to the database (dynamoDB, with GraphQl), get data from the database etc.</p>&#xA;&#xA;<p>The order form requires no user login, but I still need to submit the form entry to the database. When the form is hosted using Amplify Console and i submit a form entry, I get this error:</p>&#xA;&#xA;<p><code>Uncaught (in promise) No current user</code></p>&#xA;&#xA;<p>Has anyone else dealt with this before or something similar? I haven't been able to find any helpful answers to this problem so far.</p>&#xA;&#xA;<p>Thanks for the help!</p>&#xA;",11736847,,,,2021-02-27 23:37:28,No current User AWS Amplify Authentication Error - need access without login,<reactjs><authentication><graphql><aws-amplify>,1,1,0,2020-02-12 00:35:11
60195284,1,60268995,,0,1581,"<p>I spent two days googling for a solution. But couldn't find a proper solution. &#xA;I am provided with the following information.</p>&#xA;&#xA;<pre><code>Cognito Identity pool ids: &#xA;INT: ""us-east-1:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx""&#xA;CRT: ""us-east-1:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx""&#xA;PSS: ""us-east-1:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx""&#xA;PREPROD: ""us-east-1:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx""&#xA;PROD: ""us-east-1:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx""&#xA;&#xA;Api url : https://xxxxxxxxxxxxxxxx.appsync-api.us-east-2.amazonaws.com/graphql&#xA;Api id : 63xxxxxxxxxxxxxxxxxx&#xA;Appsync name : TheAppSyncName&#xA;Authorization mechanism : IAM auth&#xA;</code></pre>&#xA;&#xA;<p>I found there are few different ways to do this in Android, <a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-android"" rel=""nofollow noreferrer"">https://github.com/awslabs/aws-mobile-appsync-sdk-android</a> </p>&#xA;&#xA;<p>But no example could be found with .net c# AWS sdk. </p>&#xA;&#xA;<p>Can someone please explain the meaning of the above values and how it can be used to call the graphql API in .net C#?</p>&#xA;&#xA;<p>Update:&#xA;After trying multiple times I ended up without any solution. Then I found the appsync can't be used with the given information in c# .net. I was provided with the AWS account number and unauth role ARN in addition to above. </p>&#xA;",3035846,,3035846,2020-03-05 13:41:51,2020-03-05 13:41:51,Calling graphql api on AWS with Cognito user pool id,<c#><.net-core><graphql><amazon-cognito><aws-appsync>,1,2,0,2020-02-12 19:05:52
60197953,1,60222708,,1,239,"<p>I'm working on a Many-to-Many relation with Sangria and Slick.&#xA;I have 3 objects: Role, Permission and RolePermission (a mapping table)</p>&#xA;&#xA;<pre><code>case class Role(id: Long, name: String)&#xA;case class Permission(id: Long, name: String)&#xA;case class RolePermission(id: Long, roleId: Long, permissionId: Long)&#xA;</code></pre>&#xA;&#xA;<p>So far I figured out how to define the relation: </p>&#xA;&#xA;<pre><code>val permissionsByRoleId = Relation[Permission, (RolePermission, Permission), Long](""permissionsByRoleId"", tmp ⇒ Seq(tmp._1.roleId), _._2)&#xA;</code></pre>&#xA;&#xA;<p>I don't know how to define the <code>fetcher</code> and how to add the right field to Role Schema, so that I could retrieve the Role's permissions passing by the intermediate table. </p>&#xA;&#xA;<p>Any help ? </p>&#xA;",11677069,,,,2020-02-14 08:39:31,Graphql Sangria Many-to-Many example,<scala><playframework><graphql><slick><sangria>,1,0,0,2020-02-12 22:39:10
60225288,2,,60209274,0,,<p>You have no null check.</p>&#xA;&#xA;<p>Possibly uploadPhoto is null and your end up in type mismatch.</p>&#xA;&#xA;<p>PS share method dart code in text not in picture.</p>&#xA;,12052309,,,,2020-02-14 11:18:36,"",,0,1,0,2020-02-14 11:18:36
60232048,1,,,1,2204,"<p>I'm having trouble with update mutations with react-native and amplify.</p>&#xA;&#xA;<pre><code>addProfileDetails = async (sub) =&gt; {&#xA;    let UserDetails = await API.graphql(graphqlOperation(mutations.updatePeople, {updatePeopleInput: &#xA;         {&#xA;            UserID: sub,&#xA;            Organization: ""Organization""&#xA;            Name: ""name""&#xA;        }&#xA;    }));&#xA;    console.log(UserDetails);&#xA;  };&#xA;</code></pre>&#xA;&#xA;<p>This code doesn't generate any errors, and it's pretty much the same as the code I used to create the record in the first place which works.</p>&#xA;&#xA;<p>but it returns this data and doesn't actually update the record as intended.</p>&#xA;&#xA;<pre><code>Object {&#xA;  ""data"": Object {&#xA;    ""updatePeople"": null,&#xA;  },&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I tested this query on the appsync query editor:</p>&#xA;&#xA;<pre><code>mutation update {&#xA;  updatePeople (updatePeopleInput: {&#xA;    PersonID: ""XXXXXXXXXXXXXXXXXXXXXXXXXX"",&#xA;    Gender: ""Male""&#xA;  })&#xA;    {&#xA;    PersonID&#xA;    Gender&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And it returns the same. Create mutations work, Queries work. I don't understand what is happening here.</p>&#xA;&#xA;<p>Any insights of what I'm doing wrong would be helpful. Also, if you need to the schema or the mutation code, I can provide that.</p>&#xA;",3602664,,3602664,2020-02-14 20:35:03,2020-02-21 17:00:00,Update Mutations in GraphQL with Appsync,<graphql><aws-amplify><aws-appsync>,1,0,0,2020-02-14 18:54:27
60235085,1,,,1,2208,"<p>Amplify automatically generates mutations for delete like this:</p>&#xA;&#xA;<pre><code>export const deleteTodo = /* GraphQL */ `&#xA; mutation DeleteTodo($input: DeleteTodoInput!) {&#xA;  deleteTodo(input: $input) {&#xA;   index&#xA;   body&#xA;   hasRead&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>and this is how I call it in my App.js</p>&#xA;&#xA;<pre><code>await API.graphql(graphqlOperation(mutations.deleteTodo, {input: result}));&#xA;</code></pre>&#xA;&#xA;<p>It returns an error like this. Seems like the data has not been passed</p>&#xA;&#xA;<pre><code>message: ""The variables input contains a field name 'index' that is not defined for input object type 'DeleteTodoInput' ""&#xA;</code></pre>&#xA;",9779634,,,,2021-08-26 12:06:29,Delete and Update Graphql mutation in Amplify ReactJs,<graphql><aws-amplify><graphql-mutation>,2,3,0,2020-02-15 00:44:36
60237441,1,65114552,,3,1216,"<p>I want to set up a dev environment of Hasura on my local machine, that replicates my existing production (same tables, same schema, same data). </p>&#xA;&#xA;<ul>&#xA;<li>What are the required steps to achieve this task? </li>&#xA;</ul>&#xA;",2533548,,,,2022-10-18 14:40:45,"How to create local ""copy"" of remote Hasura server?",<graphql><hasura>,3,1,0,2020-02-15 09:27:37
60237478,2,,60237441,1,,<ol>&#xA;<li>Backup the database.</li>&#xA;<li>Run Hasura with the database.</li>&#xA;<li>Make sure Hasura metadata is synced.</li>&#xA;</ol>&#xA;,8700958,,,,2020-02-15 09:33:30,"",,0,1,0,2020-02-15 09:33:30
60242412,2,,60242048,2,,"<p>If you keep in mind that you're getting back a JSON object, you can think of your GraphQL query as defining the left-hand side of the response (this is intentional in how it was designed), e.g. just the keys. So unless there are null values, what you get back should exactly match the shape of the query.</p>&#xA;&#xA;<p>If you want to see what <em>can</em> be queried, you need access to the schema itself. If it's a schema provided by someone else (looks like WordPress in this case), they should also have provided the means to explore and understand it.</p>&#xA;",15687,,15687,2020-02-15 19:50:09,2020-02-15 19:50:09,"",,0,0,0,2020-02-15 19:34:38
60252869,1,,,0,839,"<p>We have multiple data sources, which have more than a billion records in different tables, most of them are Oracle SQL data sources along with a few NoSQL solutions. The primary fields have different names in different sources. SQL Queries can only join tables in a particular data source. Writing REST API's and stitching data in each API is not possible as our queries are dynamic and might change over time. </p>&#xA;&#xA;<p>How can we tackle this problem, Can GraphQL servers help us stitch multiple data sources and query each with different conditions?</p>&#xA;&#xA;<p>What we seek is a query language that can query across data sources, stitch them together based on certain conditions like join queries and return us the resultset.</p>&#xA;&#xA;<pre><code>Table 1(Oracle SQL server 1):-&#xA;&#xA;|username | age | tenant |&#xA; abc        56    US&#xA; xyz        32    IN&#xA;&#xA;&#xA;&#xA;Table 2 (Oracle SQL server 2):-&#xA;&#xA;|userid | config | duration |&#xA; abc     {..json.}    2100s&#xA;&#xA;the query could be like:- &#xA;select * from table1, table2 where table1.userid=table2.username and duration&gt;2000s&#xA;</code></pre>&#xA;",3511426,,,,2021-05-05 18:02:44,Querying multiple Data Sources together,<sql><node.js><spring><neo4j><graphql>,1,0,0,2020-02-16 20:24:09
60253695,1,,,3,313,"<p>I need to send an email after a mutation. My graphql schema saves to the database using the @model directive but I want to add to it and send an email after the mutation. Can someone please recommend the best way to do this? Below is my graphql schema.</p>&#xA;&#xA;<pre><code>enum Service {&#xA;  AIRPORT_PICKUP&#xA;  AIRPORT_DROPOFF&#xA;  GUIDED_TOUR&#xA;  DRIVER&#xA;}&#xA;&#xA;type Message&#xA;@model&#xA;@auth(&#xA;  rules: [&#xA;    { allow: public, provider: iam, operations: [create] }&#xA;    { allow: groups, groups: [""admin""], operations: [update, delete, read] }&#xA;  ]&#xA;) {&#xA;  id: ID!&#xA;  firstName: String!&#xA;  lastName: String!&#xA;  email: AWSEmail!&#xA;  phoneCountryCode: String&#xA;  phoneNumber: String&#xA;  message: String!&#xA;  arrivalFlightNumber: String&#xA;  arrivalDateTime: AWSDateTime&#xA;  departurelFlightNumber: String&#xA;  departureDateTime: AWSDateTime&#xA;  travelers: Int&#xA;  services: [Service]&#xA;  owner: String&#xA;  group: String&#xA;}&#xA;</code></pre>&#xA;",1516603,,,,2020-02-16 22:14:10,AWS Amplify send an email after graphql mutation,<javascript><reactjs><amazon-web-services><graphql><aws-amplify>,0,3,0,2020-02-16 22:14:10
60268995,2,,60195284,5,,"<p>The answer <a href=""https://stackoverflow.com/a/56838587/11376091"">here</a> will provide you with some context about the AWS SDK.</p>&#xA;&#xA;<p>As that answer mentions, the AWS SDK <strong>does not provide a way invoke your API</strong>. To invoke you API it is as simple as making a post request to your API url.&#xA;There are a lot of answers about using postman for AppSync, which will help you understand the topic:  </p>&#xA;&#xA;<ul>&#xA;<li><a href=""https://stackoverflow.com/questions/42520663/how-to-send-graphql-query-by-postman"">how to send graphql query by postman</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/52287506/how-do-i-integrate-amazon-cognito-login-in-postman"">how do I integrate amazon cognito login in postman</a></li>&#xA;</ul>&#xA;&#xA;<p>Once you understand that you should be able to do the same with any HTTP client of your choosing.</p>&#xA;",11376091,,,,2020-02-17 19:10:22,"",,0,1,0,2020-02-17 19:10:22
60272527,2,,60272223,0,,<p>For performance the two has no significant difference. But for me i would use the current updateMember function so that I wont create a new function just for that one operation.</p>&#xA;,5452148,,,,2020-02-18 01:24:20,"",,0,1,0,2020-02-18 01:24:20
60286792,2,,60277542,1,,"<p>AppSync supports OpenID Connect as an authorization mechanism, you don't need to validate the JWT token yourself in a function. Is there a use case for which you need to do that? </p>&#xA;&#xA;<p>Also, what you described by using pipeline resolvers where the first function validates the authorization information is the current recommended way for doing this.</p>&#xA;",6241856,,,,2020-02-18 17:51:57,"",,0,0,0,2020-02-18 17:51:57
60303156,1,60303661,,0,54,"<p>I would like to use GraphiQL docs to document my GraphQL API. The out-of-the-box version already looks pretty useful, however I would like to enrich it by the information about permissions.</p>&#xA;&#xA;<p>My imagination is that in this</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/39ZWQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/39ZWQ.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>there will be another section, i.e. ""Permissions"", with some description of the permissions.</p>&#xA;&#xA;<p>My question: is this the way to do it? If not, how can one express permissions in the GraphiQL Docs? And if this could be the way, is there any tool capable of doing this?</p>&#xA;",2339620,,,,2020-02-19 15:23:25,Entering custom data into GraphiQL Docs,<permissions><graphql><documentation><graphiql>,1,0,0,2020-02-19 14:58:37
60305518,2,,57650203,0,,"<p>It doesn't look like the mandatory <code>id</code> is being passed among your variables. You can try setting it automatically in your resolver:</p>&#xA;&#xA;<pre><code>#set($factsdata = [])&#xA;#foreach($item in ${ctx.args.facts})&#xA;    $util.qr($item.put(""id"", $util.defaultIfNullOrBlank($item.id, $util.autoId())))&#xA;    $util.qr($factsdata.add($util.dynamodb.toMapValues($item)))&#xA;#end&#xA;&#xA;{&#xA;    ""version"" : ""2018-05-29"",&#xA;    ""operation"" : ""BatchPutItem"",&#xA;    ""tables"" : {&#xA;        ""TABLENAME"": $utils.toJson($factsdata)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",4219317,,,,2020-02-19 16:57:02,"",,0,0,0,2020-02-19 16:57:02
60327516,1,,,0,570,"<p>This problem is boggling my mind.</p>&#xA;&#xA;<p>I'm trying to query an RDS table with a non-primary key inside a graphql query.</p>&#xA;&#xA;<p>Here is the example of two of my queries in appsync</p>&#xA;&#xA;<pre><code>query getloc{&#xA;  getLocationByCounty(County: ""County""){&#xA;    LocationsID&#xA;    State&#xA;    County&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<pre><code>query getLocations{&#xA;  getLocation(LocationsID: 1){&#xA;    LocationsID&#xA;    State&#xA;    County&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The second query here works, and returns exactly the county with that LocationID.&#xA;The first returns the error message: ""Cannot return null for non-nullable type: 'Int' within parent 'Locations' (/getLocationByCounty/LocationsID)""</p>&#xA;&#xA;<p>If I change the schema for locations and make LocationsID non-nullable the error goes away, but it&#xA;returns null.</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getLocationByCounty"": {&#xA;      ""State"": null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My request resolver for the getLocationsByCounty is:</p>&#xA;&#xA;<pre><code>""version"": ""2018-05-29"",&#xA;""statements"": [""select * from Locations where County = '$ctx.args.County'""]&#xA;</code></pre>&#xA;&#xA;<p>Here is the response resolver:</p>&#xA;&#xA;<pre><code>## Raise a GraphQL field error in case of a datasource invocation error&#xA;#if($ctx.error)&#xA;    $utils.error($ctx.error.message, $ctx.error.type)&#xA;#end&#xA;&#xA;$utils.toJson($utils.rds.toJsonObject($ctx.result)[0])&#xA;</code></pre>&#xA;&#xA;<p>Is this just not allowed in graphQL or is am I doing wrong???</p>&#xA;&#xA;<p>It's worth noting that if I just do this query:</p>&#xA;&#xA;<pre><code>select * from Locations where County = 'County'&#xA;</code></pre>&#xA;&#xA;<p>in mySQL, it works exactly as intended.</p>&#xA;",3602664,,3602664,2020-02-21 16:51:39,2020-02-21 16:51:39,I can only query with primary keys in GraphQL on Appync?,<graphql><aws-amplify><aws-appsync>,0,3,0,2020-02-20 19:49:41
60343217,2,,60232048,2,,"<p>I figured this out.</p>&#xA;&#xA;<p>Turns out the default resolvers created by Appsync just don't work update mutations to my RDS.</p>&#xA;&#xA;<p>I solved this by changing the request resolvers:</p>&#xA;&#xA;<pre><code>#set( $updateList = {} )&#xA;#foreach( $entry in $ctx.args.updatePeopleInput.keySet() )&#xA;  #set( $discard = $updateList.put($entry, ""'$ctx.args.updatePeopleInput[$entry]'"") )&#xA;#end&#xA;#set( $update = $updateList.toString().replace(""{"","""").replace(""}"","""") )&#xA;{&#xA;  ""version"": ""2018-05-29"",&#xA;  ""statements"":   [&#xA;    $util.toJson(""UPDATE People SET Gender='$ctx.args.updatePeopleInput.Gender', Username='$ctx.args.updatePeopleInput.Username' WHERE PersonID='$ctx.args.updatePeopleInput.PersonID'""),&#xA;    $util.toJson(""SELECT * FROM People WHERE PersonID='$ctx.args.updatePeopleInput.PersonID'"")&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>before it was this:</p>&#xA;&#xA;<pre><code>#set( $updateList = {} )&#xA;#foreach( $entry in $ctx.args.updatePeopleInput.keySet() )&#xA;  #set( $discard = $updateList.put($entry, ""'$ctx.args.updatePeopleInput[$entry]'"") )&#xA;#end&#xA;#set( $update = $updateList.toString().replace(""{"","""").replace(""}"","""") )&#xA;{&#xA;  ""version"": ""2018-05-29"",&#xA;  ""statements"":   [&#xA;    $util.toJson(""UPDATE People SET $update WHERE PersonID='$ctx.args.updatePeopleInput.PersonID'""),&#xA;    $util.toJson(""SELECT * FROM People WHERE PersonID='$ctx.args.updatePeopleInput.PersonID'"")&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Apparently the $update doesn't work and you must explicitly name the variables to be set.</p>&#xA;",3602664,,,,2020-02-21 17:00:00,"",,0,1,0,2020-02-21 17:00:00
60383337,1,,,2,390,"<p>I'm having troubles finding a way to hide user emails from everyone, except the owner (user has access to only <strong>his</strong> email). Is there a way to hide a certain document field, for a certain roles?</p>&#xA;&#xA;<p>Here is an example I found that creates a role with dynamic access to the whole <code>User</code> collection:</p>&#xA;&#xA;<pre><code>CreateRole({&#xA;  name: ""tier1_role"",&#xA;  membership: {&#xA;    resource: Collection(""User""),&#xA;    predicate: Query(&#xA;      Lambda(""userRef"",&#xA;        // User attribute based rule:&#xA;        // It grants access only if the User has TIER1 role.&#xA;        // If so, further rules specified in the privileges&#xA;        // section are applied next.&#xA;        Equals(Select([""data"", ""role""], Get(Var(""userRef""))), ""TIER1"")&#xA;      )&#xA;    )&#xA;  },&#xA;  privileges: [&#xA;    {&#xA;      // Note: 'allUsers' Index is used to retrieve the&#xA;      // documents from the File collection. Therefore,&#xA;      // read access to the Index is required here as well.&#xA;      resource: Index(""allUsers""),&#xA;      actions: { read: true }&#xA;    }&#xA;  ]&#xA;})&#xA;</code></pre>&#xA;&#xA;<p>I tried to change it a bit, but I wasn't able to set up field-level access.</p>&#xA;&#xA;<p>Let's say I'd set up FaunaDB with GraphQL schema below.</p>&#xA;&#xA;<pre><code>enum UserRole {&#xA;  TIER1&#xA;}&#xA;&#xA;type User {&#xA;  email: String! @unique&#xA;  username: String! @unique&#xA;  role: UserRole!&#xA;}&#xA;&#xA;type Query {&#xA;  allUsers: [User!]&#xA;}&#xA;&#xA;type Mutation {&#xA;  addUsers(new_users: [UserInput]): [User]&#xA;    @resolver(name: ""add_users"", paginated: false)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>How do create a FaunaDB role in such a way that all of the users (<em>except the current one</em>) in resulting array from <code>allUsers</code> query, will not have <code>email</code> field?</p>&#xA;&#xA;<p>I could break <code>User</code> collection into two: one is public, the other is accessible to a document owner, but this sounds wrong.</p>&#xA;&#xA;<p>I'm new to the noSQL concept, so maybe I'm looking at this problem from the wrong perspective?</p>&#xA;",12288104,,12288104,2020-03-02 01:20:06,2020-04-22 17:34:04,Is there a way to setup a field-level authorisation on FaunaDB + GraphQL?,<nosql><graphql><authorization><faunadb>,1,0,0,2020-02-24 20:20:02
60386316,1,,,1,702,"<p>I am creating a webapp that allows users to communicate in several different rooms and am hoping that I can use GraphQL and Hasura for this project. There will be admins which can create/delete rooms (wow-room, lol-Room, pubg-room), create/delete users, and create/delete permissions (admin, wow, lol, pubg) along with assigning roles to users. Users will be able to see any the rooms which they have the permisions to.</p>&#xA;&#xA;<p>The problem is, I want to be sure that only the admins can create/delete these rooms/users/permisions and that only the correct users can see these rooms. Is there a way I can get Hasura to check the permissions of the given user and return the appropriate data? I believe that I need to write a custom resolver but am not sure how that is done or if it is the correct solution.</p>&#xA;",1364586,,,,2020-02-25 19:13:04,Implementing custom user permissions in GraphQL and Hasura,<permissions><graphql><hasura>,1,2,0,2020-02-25 01:30:05
60396637,2,,60356976,1,,"<p>Having similar issue getting popped up during build, following helped as a workaround:</p>&#xA;&#xA;<pre><code>import { Query, QueryResult } from 'react-apollo';&#xA;    ....&#xA;{({ loading, error, data }: QueryResult&lt;any, Record&lt;string, any&gt;&gt;): JSX.Element =&gt; ...&#xA;</code></pre>&#xA;&#xA;<p>Just replace <code>any</code> with whatever suits your case.</p>&#xA;",7523502,,,,2020-02-25 14:15:35,"",,0,0,0,2020-02-25 14:15:35
60401682,2,,60386316,2,,"<p>While Hasura can handle dynamic roles (you can use the API to create new roles and new permission rules on the fly) with Hasura, I think in this case that's not required.</p>&#xA;&#xA;<blockquote>&#xA;  <p>The problem is, I want to be sure that only the admins can&#xA;  create/delete these rooms/users/permisions and that only the correct&#xA;  users can see these rooms. Is there a way I can get Hasura to check&#xA;  the permissions of the given user and return the appropriate data?</p>&#xA;</blockquote>&#xA;&#xA;<p>Hasura allows you to set a permission rule that traverse relationships which makes this possible. Check out the <a href=""https://docs.hasura.io/1.0/graphql/manual/auth/authorization/common-roles-auth-examples.html#collaborators-of-an-article"" rel=""nofollow noreferrer"">article-collaborators example in the Hasura docs</a>.</p>&#xA;&#xA;<p>Assuming that your models are <code>rooms</code>, <code>users</code> and <code>room_users</code> and you have the relationships set up so that <code>room.users</code> returns the list of users for a particular room, the permission for a <code>user</code> role on the <code>rooms</code> table can be expressed as follows:</p>&#xA;&#xA;<pre><code>Allow SELECT on a row in rooms if&#xA;rooms.users.id: _eq: x-hasura-user-id&#xA;</code></pre>&#xA;&#xA;<p>This translates to: if a room's users list contains atleast one <em>user_id</em> that is equal to <em>x-hasura-user-id</em> then grant access to that room.</p>&#xA;&#xA;<p>I've set this up on a heroku app: <a href=""https://multiple-roles-hasura.herokuapp.com/console/api-explorer"" rel=""nofollow noreferrer"">https://multiple-roles-hasura.herokuapp.com/console/api-explorer</a></p>&#xA;&#xA;<p>Try the following queries out in GraphiQL:</p>&#xA;&#xA;<ol>&#xA;<li>Set the headers to:</li>&#xA;</ol>&#xA;&#xA;<pre><code>x-hasura-role: user&#xA;x-hasura-user-id: 1&#xA;</code></pre>&#xA;&#xA;<ol start=""2"">&#xA;<li>Run the following query:</li>&#xA;</ol>&#xA;&#xA;<pre><code> query {&#xA;   rooms {&#xA;     id&#xA;     name&#xA;   }&#xA; }&#xA;</code></pre>&#xA;&#xA;<ol start=""3"">&#xA;<li>You'll see that the response only contains the rooms that <strong>user1</strong> has access to</li>&#xA;<li>Switch <code>x-hasura-user-id</code> through different values 1, 2, 3, 4, 5, 6 and you'll see different results for the same query. Basically the right rooms that the only the current user has access to.</li>&#xA;</ol>&#xA;&#xA;<p>Checkout the models and the permissions for the models on: </p>&#xA;&#xA;<ul>&#xA;<li>User &amp; Room mappings: <a href=""https://multiple-roles-hasura.herokuapp.com/console/data/schema/public/tables/room_users/browse"" rel=""nofollow noreferrer"">https://multiple-roles-hasura.herokuapp.com/console/data/schema/public/tables/room_users/browse</a></li>&#xA;<li>Room permissions: <a href=""https://multiple-roles-hasura.herokuapp.com/console/data/schema/public/tables/rooms/permissions"" rel=""nofollow noreferrer"">https://multiple-roles-hasura.herokuapp.com/console/data/schema/public/tables/rooms/permissions</a></li>&#xA;</ul>&#xA;",3364697,,,,2020-02-25 19:13:04,"",,0,0,0,2020-02-25 19:13:04
60402867,1,60403285,,1,475,"<p>PostGraphile does NOT recommend <a href=""https://www.graphile.org/postgraphile/v4-new-features/#column-level-select-grants-may-now-work"" rel=""nofollow noreferrer"">column-level SELECT grants</a>, instead recommends to</p>&#xA;&#xA;<blockquote>&#xA;  <p>split your concerns into multiple tables and use the&#xA;  one-to-one relationship feature to link them.</p>&#xA;</blockquote>&#xA;&#xA;<p>Now I want my <code>users</code> table to have a <code>role</code> field that can be accessed by <code>role_admin</code> but not by <code>role_consumer</code>. Based on the above recommendation, I created two tables. <code>users</code> table (in public schema) contains all fields that both roles can see, and <code>user_accounts</code> (in private schema) contains <code>role</code> field that only <code>role_admin</code> must be able to see. <code>role</code> field is added to the <code>user</code> GraphQL type via computed columns.</p>&#xA;&#xA;<pre><code>CREATE SCHEMA demo_public;&#xA;CREATE SCHEMA demo_private;&#xA;&#xA;/* users table*/&#xA;CREATE TABLE demo_public.users (&#xA;  user_id SERIAL PRIMARY KEY,&#xA;  first_name VARCHAR(50) NOT NULL,&#xA;);&#xA;&#xA;/* user_accounts */&#xA;CREATE TABLE demo_private.user_accounts (&#xA;  user_id INT PRIMARY KEY REFERENCES demo_public.users (user_id) ON DELETE CASCADE,&#xA;  role text not null default 'role_consumer',&#xA;);&#xA;&#xA;/* role as computed column */&#xA;CREATE FUNCTION demo_public.users_role&#xA;(&#xA;  u demo_public.users&#xA;)&#xA;RETURNS TEXT as $$&#xA;  &lt;code&gt;&#xA;$$ LANGUAGE SQL STRICT STABLE;&#xA;</code></pre>&#xA;&#xA;<p>Now basically I have two potions to set permissions.</p>&#xA;&#xA;<p>1) The first option is to use table level security. IOW to grant select access on table <code>user_accounts</code> to ONLY <code>role_admin</code>.</p>&#xA;&#xA;<pre><code>GRANT SELECT ON TABLE demo_private.user_accounts TO role_admin;&#xA;GRANT EXECUTE ON FUNCTION demo_public.users_role(demo_public.users) TO role_admin;&#xA;ALTER TABLE demo_private.user_accounts ENABLE ROW LEVEL SECURITY;&#xA;CREATE POLICY select_any_user_accounts ON demo_private.user_accounts FOR SELECT TO role_admin using (true);&#xA;</code></pre>&#xA;&#xA;<p>The problem with this approach is that when <code>role_consumer</code> runs a query that contains <code>role</code> field</p>&#xA;&#xA;<pre><code>{&#xA;  me {&#xA;    firstname&#xA;    role&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The above query returns an error. This is not good since the error affect the whole result hiding the result of other sibling fields.</p>&#xA;&#xA;<p>2) The other option is to use row level security besides table level; IOW on table level, to grant select access on table <code>user_accounts</code> to both <code>role_admin</code> and <code>role_consumer</code> but in row level only allow admins to access rows of <code>user_accounts</code>.</p>&#xA;&#xA;<pre><code>GRANT USAGE ON SCHEMA demo_private TO role_consumer;&#xA;GRANT SELECT ON TABLE demo_private.user_accounts TO role_consumer;&#xA;GRANT EXECUTE ON FUNCTION demo_public.users_role(demo_public.users) TO role_consumer;&#xA;ALTER TABLE demo_private.user_accounts ENABLE ROW LEVEL SECURITY;&#xA;CREATE POLICY select_user_accounts ON demo_private.user_accounts FOR SELECT&#xA;  USING ('role_admin' = nullif(current_setting('role', true), ''));&#xA;</code></pre>&#xA;&#xA;<p>Now if the user with <code>consumer_role</code> runs the aforementioned query, the <code>role</code> field will be null, not affecting its sibling fields. But two questions:</p>&#xA;&#xA;<ul>&#xA;<li><p>Should we always avoid errors to prevent them affecting their siblings?</p></li>&#xA;<li><p>If yes, should we always handle things in Row Level and never only in Table Level?</p></li>&#xA;</ul>&#xA;",3383081,,,,2020-02-25 21:18:11,Best practice to handle column level select grants in PostGraphile,<postgresql><graphql><postgraphile>,1,0,0,2020-02-25 20:45:53
60403285,2,,60402867,3,,"<p>For option 1, throwing an error from PostgreSQL during a query is not a good idea in PostGraphile because we compile the entire GraphQL tree into a single SQL query, so an error aborts the entire query. Instead, I would factor the permissions into the function and simply return null (rather than an error) if the user is not allowed to view it. One way to do this is with an additional <code>WHERE</code> clause:</p>&#xA;&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE FUNCTION demo_public.users_role (&#xA;  u demo_public.users&#xA;) RETURNS TEXT AS $$&#xA;  select role&#xA;    from demo_private.user_accounts&#xA;    where user_id = u.id&#xA;    and current_setting('jwt.claims.role') = 'role_admin';&#xA;$$ LANGUAGE SQL STABLE;&#xA;</code></pre>&#xA;&#xA;<p>For option 2: this is a perfectly valid solution.</p>&#xA;&#xA;<blockquote>&#xA;  <p>Should we always avoid errors to prevent them affecting their siblings?</p>&#xA;</blockquote>&#xA;&#xA;<p>It's rare to throw errors when querying things in GraphQL - normally you return null instead. Think of it like visiting a private repository on GitHub when logged out - they don't return the ""forbidden"" error which reveals that the resource exists, instead they return the 404 error suggesting that it doesn't - unless you know better!</p>&#xA;&#xA;<blockquote>&#xA;  <p>If yes, should we always handle things in Row Level and never only in Table Level?</p>&#xA;</blockquote>&#xA;&#xA;<p>I personally only use one role with PostGraphile, <code>app_visitor</code>, and that has been sufficient for all applications I've built with PostGraphile so far.</p>&#xA;",141284,,,,2020-02-25 21:18:11,"",,0,2,0,2020-02-25 21:18:11
60419425,1,60421743,,3,1302,"<p>I have 2 tables <code>users</code> and <code>post</code></p>&#xA;&#xA;<p>Table <code>users</code> has columns <code>id</code> and <code>post</code>, column contains an array of the form <code>[1, 2, 3, 4, 5]</code> - where <code>1, 2, 3, 4, 5</code> is <code>id</code> in table <code>post</code></p>&#xA;&#xA;<p>In the table <code>posts</code> the following columns <code>id</code> and <code>text</code></p>&#xA;&#xA;<p>Table <code>users</code>:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/ywdS7.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/ywdS7.png</a></p>&#xA;&#xA;<p>Table <code>posts</code>:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/IBdpb.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/IBdpb.png</a></p>&#xA;&#xA;<p>in hasura made an array relation</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/311sd.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/311sd.png</a></p>&#xA;&#xA;<p>Next I made the following request</p>&#xA;&#xA;<pre><code>{&#xA;  users_test {&#xA;    postz {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>I would like to receive such data in response:</p>&#xA;&#xA;<pre><code>    postz: [&#xA;       {&#xA;         text: 'qwe'&#xA;       },&#xA;       {&#xA;         text: 'sdf'&#xA;       }&#xA;    ]&#xA;</code></pre>&#xA;&#xA;<p>But with such a request, I get a trace. error:</p>&#xA;&#xA;<pre><code>{&#xA;  ""errors"": [&#xA;    {&#xA;      ""extensions"": {&#xA;        ""internal"": {&#xA;          ""statement"": ""SELECT  coalesce(json_agg(\""root\"" ), '[]' ) AS \""root\"" FROM  (SELECT  row_to_json((SELECT  \""_5_e\""  FROM  (SELECT  \""_4_root.ar.root.postz\"".\""postz\"" AS \""postz\""       ) AS \""_5_e\""      ) ) AS \""root\"" FROM  (SELECT  *  FROM \""public\"".\""users_test\""  WHERE ('true')     ) AS \""_0_root.base\"" LEFT OUTER JOIN LATERAL (SELECT  coalesce(json_agg(\""postz\"" ), '[]' ) AS \""postz\"" FROM  (SELECT  row_to_json((SELECT  \""_2_e\""  FROM  (SELECT  \""_1_root.ar.root.postz.base\"".\""id\"" AS \""id\""       ) AS \""_2_e\""      ) ) AS \""postz\"" FROM  (SELECT  *  FROM \""public\"".\""posts\""  WHERE ((\""_0_root.base\"".\""post\"") = (\""id\""))     ) AS \""_1_root.ar.root.postz.base\""      ) AS \""_3_root.ar.root.postz\""      ) AS \""_4_root.ar.root.postz\"" ON ('true')      ) AS \""_6_root\""      "",&#xA;          ""prepared"": true,&#xA;          ""error"": {&#xA;            ""exec_status"": ""FatalError"",&#xA;            ""hint"": ""No operator matches the given name and argument type(s). You might need to add explicit type casts."",&#xA;            ""message"": ""operator does not exist: json = integer"",&#xA;            ""status_code"": ""42883"",&#xA;            ""description"": null&#xA;          },&#xA;          ""arguments"": [&#xA;            ""(Oid 114,Just (\""{\\\""x-hasura-role\\\"":\\\""admin\\\""}\"",Binary))""&#xA;          ]&#xA;        },&#xA;        ""path"": ""$"",&#xA;        ""code"": ""unexpected""&#xA;      },&#xA;      ""message"": ""postgres query error""&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What am I doing wrong and how can I fix it?</p>&#xA;",12968335,,3364697,2020-02-26 20:02:30,2020-02-26 20:06:42,How can I create a relationship between `json` column and a `int` (id) column in Hasura + Postgres?,<graphql><hasura>,1,0,0,2020-02-26 17:31:13
60462103,1,,,1,994,"<p>How do I use <code>useQuery</code> in a loop. I know that it is not recommended per hook rules that hooks are not inside loops/ conditionals. </p>&#xA;&#xA;<p>scenario: </p>&#xA;&#xA;<pre><code>const getSomething = (key) =&gt; {&#xA;  const [data] = useQuery(someQuery, {variables: key})&#xA;  return data;&#xA;}&#xA;&#xA;const getInfo = () =&gt; {&#xA;  const keys = [""one"", ""two"", ""etc""];&#xA;  // ideally would like to loop over each key and get the data&#xA;  /* ideal code would be:&#xA;     return keys.map(key =&gt; getSomething(key));&#xA;  */&#xA;  // but since hooks can't be used in a loop, I have to end up writing like this:&#xA;  const data1 = getSomething(keys[0]);&#xA;  const data2 = getSomething(keys[1]);&#xA;  const data3 = getSomething(keys[2]);&#xA;  // data manipulation after... &#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>is there anyway to write this better instead of having to hard code for each key and data? And API has to be query with single key. </p>&#xA;",12329520,,,,2020-02-29 04:55:31,UseQuery + loop =?,<react-hooks><react-apollo>,0,2,0,2020-02-29 04:55:31
60503823,1,60505712,,0,493,"<p><a href=""https://i.stack.imgur.com/p2SOX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/p2SOX.png"" alt=""enter image description here""></a>Using Hasura with flutter, getting the following errors, Graphql version ^3.0.0</p>&#xA;&#xA;<pre><code>{&#xA;    ""resource"": ""/D:/example_hasura1/lib/county.dart"",&#xA;    ""owner"": ""dart"",&#xA;    ""code"": ""argument_type_not_assignable"",&#xA;    ""severity"": 8,&#xA;    ""message"": ""The argument type 'Widget Function(QueryResult, {refetch: void Function()})' can't be assigned to the parameter type 'Widget Function(QueryResult, {fetchMore: dynamic Function(FetchMoreOpti[![enter image description here][1]][1]ons), refetch: Future&lt;QueryResult&gt; Function()})'."",&#xA;    ""source"": ""dart"",&#xA;    ""startLineNumber"": 24,&#xA;    ""startColumn"": 9,&#xA;    ""endLineNumber"": 24,&#xA;    ""endColumn"": 347,&#xA;    ""tags"": []&#xA;}&#xA;</code></pre>&#xA;",2132225,,2132225,2020-03-03 09:25:39,2020-03-03 10:58:18,"Using hasura with flutter , getting the following errors , Graphql version ^3.0.0",<flutter><dart><graphql><hasura>,1,1,0,2020-03-03 09:18:07
60505712,2,,60503823,2,,"<p>instead of:&#xA;builder: (QueryResult result, {VoidCallback refetch}) {&#xA;  ...&#xA;}</p>&#xA;&#xA;<p>add a third parameter like this:&#xA;builder: (QueryResult result, {VoidCallback refetch, FetchMore fetchMore}) {&#xA;  ...&#xA;}</p>&#xA;&#xA;<p>and I can see that you're not checking errors. But if you do, then make sure to change it from .error to .hasException</p>&#xA;&#xA;<p>Hope it works</p>&#xA;",12999064,,,,2020-03-03 10:58:18,"",,0,0,0,2020-03-03 10:58:18
60523783,2,,56900332,0,,"<p>The document has been updated, AWS added a new field <code>info</code> to the context, you can access the field name as below：</p>&#xA;<pre><code>{&#xA;    &quot;version&quot; : &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot; : &quot;Invoke&quot;,&#xA;    &quot;payload&quot;: {&#xA;      &quot;resolve&quot;: &quot;$ctx.info.fieldName&quot;,&#xA;      &quot;query&quot;: $utils.toJson($context.arguments)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>You can refer to the document here:</p>&#xA;<p><a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html#aws-appsync-resolver-context-reference-info"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html#aws-appsync-resolver-context-reference-info</a></p>&#xA;",5947101,,1480391,2022-01-28 14:53:14,2022-01-28 14:53:14,"",,0,1,0,2020-03-04 10:19:33
60524513,1,60531557,,1,303,"<p>I have been thinking about building a backend with graphQL.</p>&#xA;&#xA;<p>The aim is to make the life of the backend team easier and iterate quicker rather then have to build REST endpoints or wss actions for each dataset retreivale.</p>&#xA;&#xA;<p>GraphQL seems to be one of solution. We are very familliar with the Lambda environement and therefore in our research we found AppSync. I looks like a perfect solution, however I have some concerened around being locked in AWS and by designing the whole architecture around AppSync.</p>&#xA;&#xA;<p>The beauty of serverless is that with the Serverless Framework, we could redeploy all functions to another cloud provider (Azure Functions) or even dockerize the functions for a deployment onprem.</p>&#xA;&#xA;<p>I am concerned that with AppSync there is really no alternative in either other cloud providers or to easly do this onprem. Does anybody have any experience with this? Would it be more worth it to do the work to deploy an appolo server in lambda and build the connectors/listeners to the data sources our selfs with something like this: <a href=""https://github.com/michalkvasnicak/aws-lambda-graphql/tree/aws-lambda-graphql%400.13.0#design-michalkvasnicak"" rel=""nofollow noreferrer"">https://github.com/michalkvasnicak/aws-lambda-graphql/tree/aws-lambda-graphql%400.13.0#design-michalkvasnicak</a> ?</p>&#xA;",4489629,,,,2020-03-06 18:39:22,AppSync and thoughts on being locked in AWS,<amazon-web-services><graphql><aws-appsync>,2,0,0,2020-03-04 10:58:18
60531557,2,,60524513,2,,"<p>IMHO, it comes down to how exactly the client of the GraphQL endpoint will secure data. One strategy is to secure an app with Amazon identity services like IAM and Cognito. Amplify's strength is secure integration with IAM, Cognito, API Gateway, DynamoDB, S3, and AppSync. A secure GraphQL endpoint on AppSync, for example. The data hosted in each AWS cloud service can be secured with Amplify and there are many other strategies too.</p>&#xA;&#xA;<p>The <a href=""https://s3-us-west-2.amazonaws.com/assets.site.serverless.com/whitepapers/serverless-architecture-use-cases.pdf"" rel=""nofollow noreferrer"">serverless framework</a> is a break through for serverless developer operations. The framework is beautiful. I don't disagree with your concern that Amplify generated cloudformation is not portable. Cloudformation is different DevSecOps culture than the Serverless framework.  Amplify's generated DevSecOps code simply lands in Cloudformation culture.</p>&#xA;&#xA;<p>I'm awfully new to GraphQL on the cloud, FWIW. I don't have experience with  Apollo on Lambda. I cried, it looked difficult to automate the security though a seasoned pro may know. I certainly hope you get to a point where you never have to throw a single line of code away.  I'm not even close, yet.</p>&#xA;",12939925,,,,2020-03-04 17:24:53,"",,0,0,0,2020-03-04 17:24:53
60538999,1,,,1,630,"<p>I need to access an AppSync query without authentication.</p>&#xA;&#xA;<p>I don't want to use API_KEY since it has an expiry date, so I would need to build a flow to update the API_KEY.</p>&#xA;&#xA;<p>I think the best way to do this, would be to use AWS_IAM as the authentication method and allow unauthenticated identities from an Identity Pool.</p>&#xA;&#xA;<p>I have done this successfully in VueJS with the Amplify SDK, but this time I want to do it in dart.</p>&#xA;&#xA;<p>How can I make an AppSync HTTP request for an unauthenticated Identity in dart (Flutter)?</p>&#xA;",11366342,,11833795,2020-03-05 08:27:26,2020-03-05 08:27:26,How to use an AppSync public query in flutter,<flutter><dart><graphql><aws-appsync>,0,1,0,2020-03-05 05:58:06
60560350,1,,,0,503,"<p>I have multiple requests like this one:</p>&#xA;&#xA;<pre><code>await API.graphql(&#xA;      graphqlOperation(mutations.createSomething, { input: something }),&#xA;    )&#xA;</code></pre>&#xA;&#xA;<p>Is it possible to add default variables to input to every request? (don´t mean headers)</p>&#xA;&#xA;<p>thanks</p>&#xA;",2551169,,2551169,2020-03-06 08:49:00,2020-03-06 10:10:06,How can i set default input variables for every request with grapqhql (amplify),<graphql><aws-amplify>,1,0,0,2020-03-06 08:43:17
60561842,2,,60560350,0,,"<p>You can define your own mutation and put a default value there:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const createSomething = `mutation {&#xA;  createSomething(input: { field: ""DEFAULT_VALUE"" }) {&#xA;    id&#xA;  }&#xA;}`;&#xA;&#xA;API.graphql(graphqlOperation(createSomething));&#xA;&#xA;</code></pre>&#xA;",10214845,,,,2020-03-06 10:10:06,"",,0,0,0,2020-03-06 10:10:06
60573759,1,60573823,,0,709,"<p>I am using graphql-tools for mocking the response from Appsync and it is failing for schema which has AWSDateTime as datatype of some fields. Following is the error I am getting:</p>&#xA;&#xA;<blockquote>&#xA;  <p>Uncaught Error: Unknown type ""AWSDateTime"".</p>&#xA;  &#xA;  <p>Unknown type ""AWSDateTime"".</p>&#xA;  &#xA;  <p>Unknown type ""AWSDateTime"".</p>&#xA;</blockquote>&#xA;&#xA;<p>And this is code for which it is failing:</p>&#xA;&#xA;<pre><code>import { SchemaLink } from ""apollo-link-schema"";&#xA;import { makeExecutableSchema, addMockFunctionsToSchema } from ""graphql-tools"";&#xA;&#xA;const typeDefs = `&#xA;type Dates {&#xA;    createdAt: AWSDateTime&#xA;    updatedAt: AWSDateTime&#xA;}&#xA;&#xA;type Query {&#xA;    getDates(id: ID!): Dates&#xA;}`;&#xA;const schema = makeExecutableSchema({ typeDefs });&#xA;</code></pre>&#xA;&#xA;<p>Any idea how can I fix this issue? I know AWSDateTime is scalar type defined specially for appsync, so it may not work. But is there any workaround. With ApolloLink client, it works just fine. </p>&#xA;",1523785,,,,2020-03-07 02:17:18,makeExecutableSchema of graphql-tools failes with AWSDateTime in the schema,<amazon-web-services><graphql><aws-appsync>,1,0,0,2020-03-07 02:04:20
60581197,1,61600957,,2,386,"<p>If we have an Author with no beacons to Articles and thus <em>WroteArticles</em> was null and we wanted to only return Authors who had non-empty/non-null <em>WroteArticles</em>, how could that be done?</p>&#xA;&#xA;<p>As an example we can use the Weaviate <a href=""http://playground.semi.technology/?weaviate_uri=https%3A%2F%2Fdemo.dataset.playground.semi.technology%2Fv1%2Fgraphql&amp;graphiql&amp;gqlquery=%7B%0D%0A++Get+%7B%0D%0A++++Things+%7B%0D%0A++++++Article%28where%3A+%7B%0D%0A++++++++++++path%3A+%5B%22wordCount%22%5D%2C++++%23+Path+to+the+property+that+should+be+used%0D%0A++++++++++++operator%3A+GreaterThan%2C++%23+operator%0D%0A++++++++++++valueInt%3A+1000++++++++++%23+value+%28which+is+always+%3D+to+the+type+of+the+path+property%29%0D%0A++++++++%7D%29+%7B%0D%0A++++++++title%0D%0A++++++%7D%0D%0A++++%7D%0D%0A++%7D%0D%0A%7D"" rel=""nofollow noreferrer"">demo site</a></p>&#xA;&#xA;<p>I've tried filter operations using <em>where</em> and various <em>operators</em>, but I must be missing something obvious. Example of a query I've tried on my own data set below, where I did have a <em>Thing</em> with no beacons.</p>&#xA;&#xA;<pre><code>{&#xA;  Get {&#xA;    Things {&#xA;      Author (where:{&#xA;        operator:Equal,&#xA;        path:[""WroteArticles""]&#xA;        valueString:"" ""&#xA;      }){&#xA;        name&#xA;        WroteArticles {&#xA;          ... on Article {&#xA;            InPublication {&#xA;              ... on Publication {&#xA;                name&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6659127,,,,2020-05-04 20:23:20,Is there a way to filter out null values for literals and references,<graphql><weaviate>,1,3,0,2020-03-07 19:02:38
60607283,2,,44449989,0,,"<p>This may not be an elegant solution, but it's one that works for mutations:</p>&#xA;&#xA;<p>In my mutation, I have a custom function that returns true if the user pulled from info.context.user is in a group, or false if they are not:</p>&#xA;&#xA;<pre><code>class RelayCreateConversation(relay.ClientIDMutation):&#xA;    # Set a variable as the field we want to use&#xA;    conversation = graphene.Field(ConversationNode)&#xA;    # Create a custom response as a string if the user doesn't have authentication&#xA;    custom_response = graphene.String()&#xA;&#xA;    # What is passed through in the mutation&#xA;    class Input:&#xA;        participant_number = graphene.String()&#xA;&#xA;    def mutate_and_get_payload(root, info, **input):&#xA;        submitted_by = info.context.user&#xA;        # How I manage authentication&#xA;        if not group_required(submitted_by, ""send_and_receive_texts""):&#xA;            custom_response = ""You do not have the correct permissions to do this action""&#xA;            return RelayCreateConversation(conversation=custom_response)&#xA;        # mutation code here&#xA;</code></pre>&#xA;&#xA;<p>And then I have a helper function which I import which is dead simple:</p>&#xA;&#xA;<pre><code>def group_required(user, *group_names):&#xA;    if bool(user.groups.filter(name__in=group_names)) | user.is_superuser:&#xA;        return True&#xA;    return False&#xA;</code></pre>&#xA;&#xA;<p><strong>Limitations:</strong> I currently haven't tried to manage queries with this yet, just functions. If someone gets to that before I do, please comment or update my response.</p>&#xA;",12563520,,,,2020-03-09 19:37:21,"",,0,0,0,2020-03-09 19:37:21
60617385,1,,,2,425,<p>I had an issue with updating a graphql schema and got this message (in my case I was updating a FaunaDB schema). I couldn't find reference to this online.</p>&#xA;,8483183,,6024220,2020-03-10 12:45:20,2020-03-26 05:00:25,Error Message: Instance Data is not valid whilst updating a GraphQL schema,<graphql><schema><faunadb>,2,0,0,2020-03-10 12:11:17
60641622,2,,59335232,1,,"<p>Probably figured it out by now, but you'll need to have an Auth service <a href=""https://aws-amplify.github.io/docs/js/react"" rel=""nofollow noreferrer"">configured</a>, Cognito being the easiest to work with. Then use the <code>@auth</code> directive on all of your schema types you'd like to be protected and visible only to owner:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>type Product @model @auth(rules: [{allow: owner, ownerField: ""ownerId""}]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String!&#xA;  price: Int!&#xA;  ownerId: String!&#xA;  createdAt: AWSDateTime!&#xA;  updatedAt: AWSDateTime!&#xA;  auction: Auction @connection(name: ""AuctionProducts"")&#xA;}&#xA;</code></pre>&#xA;",7822426,,,,2020-03-11 17:34:21,"",,0,0,0,2020-03-11 17:34:21
60641825,1,,,2,312,"<p>I am trying to get a demo app that uses Hasura and Gatsby started (<a href=""https://github.com/praveenweb/dynamic-jamstack-gatsby-hasura/tree/master/dynamic-auth-client"" rel=""nofollow noreferrer"">https://github.com/praveenweb/dynamic-jamstack-gatsby-hasura/tree/master/dynamic-auth-client</a>).</p>&#xA;&#xA;<p>I edited the gatsby-config.js file with my Hasura endpoint URL, but I get the following error.</p>&#xA;&#xA;<pre><code>ERROR &#xA;&#xA;UNHANDLED REJECTION Type HASURA must define one or more fields.&#xA;&#xA;  Error: Type HASURA must define one or more fields.&#xA;</code></pre>&#xA;&#xA;<p>gatsby-config.js</p>&#xA;&#xA;<pre><code>module.exports = {&#xA;  siteMetadata: {&#xA;    title: ""projectname"",&#xA;    siteUrl: `https://www.myurlhere.com`,&#xA;  },&#xA;  plugins: [&#xA;    `gatsby-plugin-react-helmet`,&#xA;    `gatsby-plugin-sitemap`,&#xA;    {&#xA;      resolve: `gatsby-plugin-nprogress`,&#xA;      options: {&#xA;        // Setting a color is optional.&#xA;        color: `tomato`,&#xA;        // Disable the loading spinner.&#xA;        showSpinner: false,&#xA;      },&#xA;    },&#xA;    {&#xA;      resolve: ""gatsby-source-graphql"",&#xA;      options: {&#xA;        typeName: ""HASURA"",&#xA;        fieldName: ""hasura"",&#xA;        url: ""https://myurlhere.com/v1/graphql"",&#xA;      },&#xA;    },&#xA;  ],&#xA;}&#xA;</code></pre>&#xA;",0,user12367923,,2020-03-11 18:20:50,2020-03-11 18:26:12,Gatsby-source-graphql requires option `fieldName` to be specified,<graphql><gatsby><hasura>,1,0,0,2020-03-11 17:45:57
60646277,2,,60645944,4,,"<p>According to <a href=""https://typeorm.io/#/listeners-and-subscribers"" rel=""nofollow noreferrer"">TypeORM's Docs</a> the listener hooks get called before or after their respective operation when using the entity manager or repository's <code>save</code> method. As <code>insert</code> and similar operations don't call <code>save</code>, they don't execute the <code>@Before/After*</code> methods</p>&#xA;",9576186,,,,2020-03-12 00:53:31,"",,0,1,0,2020-03-12 00:53:31
60647063,1,,,0,392,"<p>I'm using AWS Amplify, React Native, and Expo to make an app. My DynamoDB tables are set up via a schema.graphql file, and I've generated a bunch of mutations in a mutations.js file. I want to call the following mutations.js mutation from my HomeScreen.js screen file:</p>&#xA;&#xA;<pre><code>export const createConversation = `mutation CreateConversation(&#xA;  $input: CreateConversationInput!&#xA;  $condition: ModelConversationConditionInput&#xA;) {&#xA;  createConversation(input: $input, condition: $condition) {&#xA;    id&#xA;    centralStatement {&#xA;      id&#xA;      description&#xA;      evidence {&#xA;        id&#xA;        description&#xA;        source&#xA;        userScores&#xA;      }&#xA;      source&#xA;      userScores&#xA;    }&#xA;    participants {&#xA;      id&#xA;      username&#xA;      conversations {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;`;&#xA;</code></pre>&#xA;&#xA;<p>Then I call this mutation in HomeScreen.js via a ""Start a conversation"" button:</p>&#xA;&#xA;<pre><code>import { API, graphqlOperation } from 'aws-amplify'&#xA;import { createConversation } from '../src/graphql/mutations'&#xA;&#xA;export default function HomeScreen() {&#xA;&#xA;    let handleConvoStartPress = async () =&gt; {&#xA;&#xA;        let convoData = {&#xA;            id: 'blah',&#xA;            centralStatement: {&#xA;                id: 'blah',&#xA;                description: 'blah',&#xA;                evidence: {&#xA;                    id: 'blah',&#xA;                    description: 'blah',&#xA;                    source: 'blah',&#xA;                    userScores: 'blah',&#xA;                },&#xA;                source: 'blah',&#xA;                userScores: 'blah',&#xA;            },&#xA;            participants: {&#xA;                id: 'blah',&#xA;                username: 'blah',&#xA;                conversations: {&#xA;                    id: 'blah',&#xA;                },&#xA;            },&#xA;        };&#xA;&#xA;        let newConvo = await API.graphql(graphqlOperation(createConversation, {input: convoData}))&#xA;        console.log('*** Success ***');&#xA;        console.log(newConvo);&#xA;    }&#xA;&#xA;    return (&#xA;        &lt;View&gt;&#xA;            &lt;ScrollView&gt;&#xA;                &lt;View&gt;&#xA;                    &lt;TouchableOpacity onPress={handleConvoStartPress}&gt;&#xA;                        &lt;Text&gt;&#xA;                            Start a conversation&#xA;                        &lt;/Text&gt;&#xA;                    &lt;/TouchableOpacity&gt;&#xA;                &lt;/View&gt;&#xA;            &lt;/ScrollView&gt;&#xA;        &lt;/View&gt;&#xA;    );&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But when I press ""Start a conversation"" I get this error:</p>&#xA;&#xA;<pre><code>Possible Unhandled Promise Rejection (id: 0):&#xA;Object {&#xA;  ""data"": Object {},&#xA;  ""errors"": Array [&#xA;    [GraphQLError: Request failed with status code 403],&#xA;  ],&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>-which I think (from <a href=""https://docs.aws.amazon.com/appsync/latest/APIReference/CommonErrors.html"" rel=""nofollow noreferrer"">this</a>) means I need to add a X.509 certificate or AWS access key ID. How do I do that? I'm struggling to find the right instructions/examples.</p>&#xA;",12869028,,,,2020-03-12 03:07:26,AWS Amplify graphql mutation Possible Unhandled Promise Rejection and InvalidClientTokenId,<amazon-web-services><react-native><graphql><expo><aws-amplify>,0,3,0,2020-03-12 03:07:26
60656075,1,60661466,,0,198,"<p>I can use <code>&lt;b-table-simple&gt;</code> with GraphQL queries and it works fine, for example:</p>&#xA;&#xA;<pre><code>&lt;b-table-simple&gt;&#xA;      &lt;b-tbody&gt;&#xA;        &lt;b-tr role=""row"" v-for=""page in $page.allGoogleSheet.edges"" :key=""page.id""&gt;&#xA;          &lt;b-td&gt;&#xA;            {{page.node.Name}}&#xA;          &lt;/b-td&gt;&#xA;          &lt;b-td&gt;&#xA;            {{page.node.Age}}&#xA;          &lt;/b-td&gt;&#xA;          &lt;b-td&gt;&#xA;            {{page.node.Height}}&#xA;          &lt;/b-td&gt;&#xA;        &lt;/b-tr&gt;&#xA;      &lt;/b-tbody&gt;&#xA;&lt;/b-table-simple&gt;&#xA;</code></pre>&#xA;&#xA;<p>But how can i do this with <code>&lt;b-table&gt;</code>?</p>&#xA;",7664160,,,,2020-03-12 20:29:20,How to use GraphQL queries with BootstrapVue b-table?,<vue.js><graphql><bootstrap-vue><gridsome>,1,0,0,2020-03-12 14:22:13
60661466,2,,60656075,0,,"<p>You need to define your <a href=""https://bootstrap-vue.js.org/docs/components/table#fields-column-definitions"" rel=""nofollow noreferrer"">fields</a> to pluck from each row of data:</p>&#xA;&#xA;<pre class=""lang-html prettyprint-override""><code>&lt;template&gt;&#xA;  &lt;b-table :fields=""fields"" :items=""$page.allGoogleSheet.edges""&gt;&#xA;  &lt;/b-table&gt;&#xA;&lt;/template&gt;&#xA;&#xA;&lt;script&gt;&#xA;export default {&#xA;  data() {&#xA;    return {&#xA;      fields: [&#xA;        // Add this entry if you want to see the ID of the entry&#xA;        // { key: 'id', label: 'ID' },&#xA;        { key: 'node.Name', label: 'Name' },&#xA;        { key: 'node.Age', label: 'Age' },&#xA;        { key: 'node.Height', label: 'Height' },&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/script&gt;&#xA;</code></pre>&#xA;",2744776,,,,2020-03-12 20:29:20,"",,0,0,0,2020-03-12 20:29:20
60661758,1,60769569,,1,230,"<p><strong>Context:</strong> I'm in the process of designing an event-driven Python application. Various stakeholders have tasked me with investigating options for deploying the application using GraphQL endpoints within a serverless environment running on Azure Functions. End goal being that as the underlying data structures grow, we'd like to easily maintain the use-ability and performance of the application over time. Based on below resources it appears this is possible:</p>&#xA;&#xA;<p>(<a href=""https://azure.microsoft.com/en-us/resources/videos/build-2019-build-scalable-apis-using-graphql-and-serverless/"" rel=""nofollow noreferrer"">https://azure.microsoft.com/en-us/resources/videos/build-2019-build-scalable-apis-using-graphql-and-serverless/</a>)&#xA;(<a href=""https://azure.microsoft.com/en-us/resources/videos/azure-friday-live-building-serverless-python-apps-with-azure-functions/"" rel=""nofollow noreferrer"">https://azure.microsoft.com/en-us/resources/videos/azure-friday-live-building-serverless-python-apps-with-azure-functions/</a>)&#xA;(<a href=""https://graphene-python.org/"" rel=""nofollow noreferrer"">https://graphene-python.org/</a>)</p>&#xA;&#xA;<p><strong>Question:</strong> User requirements dictate that the Azure Functions MUST be for internal use only and cannot be exposed publicly. Reading through the docs below I haven't found any resources on security config options for private endpoints.</p>&#xA;&#xA;<p><a href=""https://learn.microsoft.com/en-us/azure/azure-functions/"" rel=""nofollow noreferrer"">https://learn.microsoft.com/en-us/azure/azure-functions/</a>&#xA;<a href=""https://stackoverflow.com/questions/58390218/private-endpoint-in-azure"">Private endpoint in Azure</a></p>&#xA;&#xA;<p>Can someone please point me in the right direction? Are Azure Functions even capable of this? And if they aren't can this be achieved with an alternative like Azure App Service? </p>&#xA;",8652893,,,,2020-03-20 06:33:28,Graphene-Python + Private Azure Functions?,<python><azure><graphql><azure-functions><graphene-python>,1,0,0,2020-03-12 20:56:11
60663443,1,,,1,1620,"<p>I have a React AppSync app with AWS resources provisioned using the Amplify CLI. I need to fetch the number of entities in one of my tables that contains several thousand entries, without having to fetch the entries themselves. Besides the stupidity of fetching thousands of entities just to count them, I'm also running into the problem that I can't even get all those records in one request anyway. A simple call like this:</p>&#xA;&#xA;<pre><code>import { API, graphqlOperation } from ""aws-amplify"";&#xA;&#xA;const nodeData = await API.graphql(&#xA;  graphqlOperation(&#xA;    `query allNodeIds {&#xA;      listNodes(limit: 10000) {&#xA;        items {&#xA;          id&#xA;        }&#xA;      }&#xA;    }`,&#xA;    {}&#xA;  )&#xA;);&#xA;&#xA;const nodeCount = nodeData.data.listNodes.items.length;&#xA;</code></pre>&#xA;&#xA;<p>Causes the following console error:</p>&#xA;&#xA;<pre><code>...&#xA;errorType: ""MappingTemplate""&#xA;message: ""List size cannot exceed 1000""&#xA;</code></pre>&#xA;&#xA;<p>It seems I need to write a custom query &amp; resolver to count and return the number of entries in the table, but don't know where to start with writing resolvers (in VTL?), where to put them in the project, etc. Any help?</p>&#xA;&#xA;<p><strong>EDIT</strong>: Wrote a resolver based on one of my other generated resolvers, but it still seems to be capped at 1001 records, though I set the limit to 9999.</p>&#xA;&#xA;<p><strong>Schema</strong></p>&#xA;&#xA;<pre><code>...&#xA;countResponses(filter: ModelResponseFilterInput, limit: Int, nextToken: String): Int&#xA;</code></pre>&#xA;&#xA;<p><strong>Request Mapping Template</strong></p>&#xA;&#xA;<pre><code>#set( $limit = $util.defaultIfNull($context.args.limit, 9999) )&#xA;#set( $ListRequest = {&#xA;  ""version"": ""2017-02-28"",&#xA;  ""limit"": $limit&#xA;} )&#xA;#if( $context.args.nextToken )&#xA;  #set( $ListRequest.nextToken = ""$context.args.nextToken"" )&#xA;#end&#xA;#if( $context.args.filter )&#xA;  #set( $ListRequest.filter = $util.parseJson(""$util.transform.toDynamoDBFilterExpression($ctx.args.filter)"") )&#xA;#end&#xA;#if( !$util.isNull($modelQueryExpression)&#xA;                        &amp;&amp; !$util.isNullOrEmpty($modelQueryExpression.expression) )&#xA;  $util.qr($ListRequest.put(""operation"", ""Query""))&#xA;  $util.qr($ListRequest.put(""query"", $modelQueryExpression))&#xA;  #if( !$util.isNull($ctx.args.sortDirection) &amp;&amp; $ctx.args.sortDirection == ""DESC"" )&#xA;    #set( $ListRequest.scanIndexForward = false )&#xA;  #else&#xA;    #set( $ListRequest.scanIndexForward = true )&#xA;  #end&#xA;#else&#xA;  $util.qr($ListRequest.put(""operation"", ""Scan""))&#xA;#end&#xA;$util.toJson($ListRequest)&#xA;</code></pre>&#xA;&#xA;<p><strong>Response Mapping Template</strong></p>&#xA;&#xA;<pre><code>## [Start] Determine request authentication mode **&#xA;#if( $util.isNullOrEmpty($authMode) &amp;&amp; !$util.isNull($ctx.identity) &amp;&amp; !$util.isNull($ctx.identity.sub) &amp;&amp; !$util.isNull($ctx.identity.issuer) &amp;&amp; !$util.isNull($ctx.identity.username) &amp;&amp; !$util.isNull($ctx.identity.claims) &amp;&amp; !$util.isNull($ctx.identity.sourceIp) &amp;&amp; !$util.isNull($ctx.identity.defaultAuthStrategy) )&#xA;  #set( $authMode = ""userPools"" )&#xA;#end&#xA;## [End] Determine request authentication mode **&#xA;## [Start] Check authMode and execute owner/group checks **&#xA;#if( $authMode == ""userPools"" )&#xA;  ## No Static Group Authorization Rules **&#xA;&#xA;&#xA;  ## [Start] If not static group authorized, filter items **&#xA;  #if( !$isStaticGroupAuthorized )&#xA;    #set( $count = 0 )&#xA;    #foreach( $item in $ctx.result.items )&#xA;      ## No Dynamic Group Authorization Rules **&#xA;&#xA;&#xA;      ## [Start] Owner Authorization Checks **&#xA;      #set( $isLocalOwnerAuthorized = false )&#xA;      ## Authorization rule: { allow: owner, ownerField: ""owner"", identityClaim: ""cognito:username"" } **&#xA;      #set( $allowedOwners0 = $item.owner )&#xA;      #set( $identityValue = $util.defaultIfNull($ctx.identity.claims.get(""username""), $util.defaultIfNull($ctx.identity.claims.get(""cognito:username""), ""___xamznone____"")) )&#xA;      #if( $util.isList($allowedOwners0) )&#xA;        #foreach( $allowedOwner in $allowedOwners0 )&#xA;          #if( $allowedOwner == $identityValue )&#xA;            #set( $isLocalOwnerAuthorized = true )&#xA;          #end&#xA;        #end&#xA;      #end&#xA;      #if( $util.isString($allowedOwners0) )&#xA;        #if( $allowedOwners0 == $identityValue )&#xA;          #set( $isLocalOwnerAuthorized = true )&#xA;        #end&#xA;      #end&#xA;      ## [End] Owner Authorization Checks **&#xA;&#xA;&#xA;      #if( ($isLocalDynamicGroupAuthorized == true || $isLocalOwnerAuthorized == true) )&#xA;        #set( $count = $count + 1)&#xA;      #end&#xA;    #end&#xA;    #set( $ctx = $count )&#xA;  #end&#xA;  ## [End] If not static group authorized, filter items **&#xA;#end&#xA;## [End] Check authMode and execute owner/group checks **&#xA;&#xA;$util.toJson($ctx)&#xA;</code></pre>&#xA;",7822426,,7822426,2020-03-17 07:56:00,2021-09-22 03:15:42,AppSync Custom Resolver to count DynamoDB entries,<reactjs><amazon-web-services><graphql><amazon-dynamodb><aws-appsync>,0,8,0,2020-03-13 00:35:36
60714908,1,,,3,1024,"<h1>Overview</h1>&#xA;&#xA;<p>I am using <code>@apollo/hooks</code> in a react typescript app, and Hasura/Postgres on an aws ec2 instance. When I make a query to the db from react, all the boolean values in one table are returning as false. By making the same query in the Hasura GraphiQL interface, I can confirm in the database that they are not all false.</p>&#xA;&#xA;<h1>More Detail</h1>&#xA;&#xA;<p>I am trying to pull in data from a simple postgres table (no foreign keys, links to other tables, etc) that has only 6 fields: </p>&#xA;&#xA;<pre><code>id: number&#xA;hero_button_pointer: string&#xA;hero_button_text: string&#xA;hero_headline_text: string&#xA;hero_sub_headline_text: string&#xA;active: boolean&#xA;</code></pre>&#xA;&#xA;<p>When I make this query in the Hasura GraphiQL interface </p>&#xA;&#xA;<pre><code>query GetAllHeroInfo {&#xA;  main_page_header(order_by: {id: asc}) {&#xA;    active&#xA;    hero_button_pointer&#xA;    hero_button_text&#xA;    hero_headline_text&#xA;    hero_sub_headline_text&#xA;    id&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;&#xA;<p>it returns all of the values correctly. Most importantly the boolean values are correct. I have <strong>exactly</strong> the same query in my React app:</p>&#xA;&#xA;<pre><code>export const GET_ALL_HERO_INFO = gql`&#xA;  query GetAllHeroInfo {&#xA;    main_page_header(order_by: { id: asc }) {&#xA;      active&#xA;      hero_button_text&#xA;      hero_headline_text&#xA;      hero_sub_headline_text&#xA;      id&#xA;      hero_button_pointer&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;&#xA;<h1>The Big Problem</h1>&#xA;&#xA;<p>In my component I am using the useQuery hook:</p>&#xA;&#xA;<pre><code>import { GET_ALL_HERO_INFO } from ""../../graphQL/queries"";&#xA;&#xA;const MyComponent: React.FC&lt;Props&gt; = () =&gt; {&#xA;&#xA;  const { loading, error, data: heroData } = useQuery(GET_ALL_HERO_INFO);&#xA;  console.log(heroData) //everything logs correctly, except boolean values are all false&#xA;&#xA;  return (&#xA;    // the component&#xA;  )&#xA;};&#xA;&#xA;</code></pre>&#xA;&#xA;<p>and when I <code>console.log(heroData)</code> or try to use the data in any way, all of the boolean values are <code>false</code> even though I can see in the database that they are true. I've updated some of the other string values directly in the database and those changes are coming through correctly. Its just the boolean values that are always false no matter what the database says. </p>&#xA;&#xA;<p>Any ideas?</p>&#xA;&#xA;<h1>Edits</h1>&#xA;&#xA;<p>03-16-2020:20:39 - As suggested by @DanielRearden I checked the network tab to see if its a client-side or server-side issue. Looks like I am getting a response that includes a <code>true</code> value, but still <code>console.log</code>ing false. I've attached photos below:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/xrAYK.png"" rel=""nofollow noreferrer"">Network Tab</a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/adBFs.png"" rel=""nofollow noreferrer"">console.log</a></p>&#xA;",3091753,,3091753,2020-03-17 01:44:54,2020-03-17 22:12:37,React hooks Apollo Graphql Boolean value always returning false,<reactjs><postgresql><graphql><apollo><hasura>,1,7,0,2020-03-17 00:46:02
60716044,1,,,2,3867,"<p>I've decided to build my own blog and chose <em>EmaSuriano's gatsby-starter-mate</em> as my Gatsby Starter <em>(I am absolutely new to Gatsby and Contentful!)</em></p>&#xA;&#xA;<p>I did everything as told, setting up my environment, setting up Contentful space and logged in to Contentful and so on. </p>&#xA;&#xA;<p>Currently, I am on <em>Ubuntu 18.04</em> and  </p>&#xA;&#xA;<pre><code>$ gatsby --version&#xA;Gatsby CLI version: 2.10.10&#xA;Gatsby version: 2.19.45&#xA;&#xA;$ contentful --version&#xA;1.2.14&#xA;</code></pre>&#xA;&#xA;<hr>&#xA;&#xA;<p>Everything below suceeded without problem  </p>&#xA;&#xA;<pre><code>$ gatsby new mate-portfolio https://github.com/EmaSuriano/gatsby-starter-mate  &#xA;$ yarn setup&#xA;</code></pre>&#xA;&#xA;<p>But when I </p>&#xA;&#xA;<pre><code>$ yarn start&#xA;</code></pre>&#xA;&#xA;<p>and enter <em>localhost:8000</em> I get <strong>Failed to Compile</strong> page with huge amount of errors. </p>&#xA;&#xA;<p>I refered to this <a href=""https://github.com/gatsbyjs/gatsby/issues/16455"" rel=""nofollow noreferrer"">https://github.com/gatsbyjs/gatsby/issues/16455</a> issue to solve my problem and tried the solutions available there such as  </p>&#xA;&#xA;<blockquote>&#xA;  <ol>&#xA;  <li>Delete codes in fragments.js file   </li>&#xA;  <li>Delete .cache folder  </li>&#xA;  <li>Add dummy image to my space  </li>&#xA;  </ol>&#xA;</blockquote>&#xA;&#xA;<p>I also installed <code>$ npm install --save gatsby-source-contentful</code>. Did <code>$ yarn add gatsby</code> as well as <code>$ yarn global add contentful-cli</code> too.</p>&#xA;&#xA;<p>But none of them worked. Below is my error that shows on <em>localhost:8000</em> when I <code>$ yarn start</code>.<br>&#xA;Can anyone please help me with this issue? Thank you so much!</p>&#xA;&#xA;<pre><code>There was an error in your GraphQL query:&#xA;&#xA;Unknown type ""ContentfulFixed"".&#xA;&#xA;File: /blog/node_modules/gatsby-source-contentful/src/fragments.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Unknown type ""ContentfulFixed"".&#xA;&#xA;File: /blog/node_modules/gatsby-source-contentful/src/fragments.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Unknown type ""ContentfulFluid"".&#xA;&#xA;File: /blog/node_modules/gatsby-source-contentful/src/fragments.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Unknown type ""ContentfulFluid"".&#xA;&#xA;File: /blog/node_modules/gatsby-source-contentful/src/fragments.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Unknown type ""ContentfulResolutions"".&#xA;&#xA;File: /blog/node_modules/gatsby-source-contentful/src/fragments.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Unknown type ""ContentfulResolutions"".&#xA;&#xA;File: /blog/node_modules/gatsby-source-contentful/src/fragments.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Unknown type ""ContentfulResolutions"".&#xA;&#xA;File: /blog/node_modules/gatsby-source-contentful/src/fragments.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Unknown type ""ContentfulSizes"".&#xA;&#xA;File: /blog/node_modules/gatsby-source-contentful/src/fragments.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Unknown type ""ContentfulSizes"".&#xA;&#xA;File: /blog/node_modules/gatsby-source-contentful/src/fragments.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Unknown type ""ContentfulSizes"".&#xA;&#xA;File: /blog/node_modules/gatsby-source-contentful/src/fragments.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Cannot query field ""contentfulAbout"" on type ""Query"".&#xA;&#xA;If you don't expect ""contentfulAbout"" to exist on the type ""Query"" it is most likely a typo.&#xA;However, if you expect ""contentfulAbout"" to exist there are a couple of solutions to common problems:&#xA;&#xA;- If you added a new data source and/or changed something inside gatsby-node.js/gatsby-config.js, please try a restart of your development server&#xA;- The field might be accessible in another subfield, please try your query in GraphiQL and use the GraphiQL explorer to see which fields you can query and what shape they have&#xA;- You want to optionally use your field ""contentfulAbout"" and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to the GraphQL schema. A quick fix is to add a least one entry with that field (""dummy content"")&#xA;&#xA;It is recommended to explicitly type your GraphQL schema if you want to use optional fields. This way you don't have to add the mentioned ""dummy content"". Visit our docs to learn how you can define the schema for ""Query"":&#xA;https://www.gatsbyjs.org/docs/schema-customization/#creating-type-definitions&#xA;&#xA;File: /blog/src/components/Helmet.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Cannot query field ""contentfulAbout"" on type ""Query"".&#xA;&#xA;If you don't expect ""contentfulAbout"" to exist on the type ""Query"" it is most likely a typo.&#xA;However, if you expect ""contentfulAbout"" to exist there are a couple of solutions to common problems:&#xA;&#xA;- If you added a new data source and/or changed something inside gatsby-node.js/gatsby-config.js, please try a restart of your development server&#xA;- The field might be accessible in another subfield, please try your query in GraphiQL and use the GraphiQL explorer to see which fields you can query and what shape they have&#xA;- You want to optionally use your field ""contentfulAbout"" and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to the GraphQL schema. A quick fix is to add a least one entry with that field (""dummy content"")&#xA;&#xA;It is recommended to explicitly type your GraphQL schema if you want to use optional fields. This way you don't have to add the mentioned ""dummy content"". Visit our docs to learn how you can define the schema for ""Query"":&#xA;https://www.gatsbyjs.org/docs/schema-customization/#creating-type-definitions&#xA;&#xA;File: /blog/src/components/Footer.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Cannot query field ""contentfulAbout"" on type ""Query"".&#xA;&#xA;If you don't expect ""contentfulAbout"" to exist on the type ""Query"" it is most likely a typo.&#xA;However, if you expect ""contentfulAbout"" to exist there are a couple of solutions to common problems:&#xA;&#xA;- If you added a new data source and/or changed something inside gatsby-node.js/gatsby-config.js, please try a restart of your development server&#xA;- The field might be accessible in another subfield, please try your query in GraphiQL and use the GraphiQL explorer to see which fields you can query and what shape they have&#xA;- You want to optionally use your field ""contentfulAbout"" and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to the GraphQL schema. A quick fix is to add a least one entry with that field (""dummy content"")&#xA;&#xA;It is recommended to explicitly type your GraphQL schema if you want to use optional fields. This way you don't have to add the mentioned ""dummy content"". Visit our docs to learn how you can define the schema for ""Query"":&#xA;https://www.gatsbyjs.org/docs/schema-customization/#creating-type-definitions&#xA;&#xA;File: /blog/src/sections/Landing.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Cannot query field ""siteMetadata"" on type ""Site"".&#xA;&#xA;If you don't expect ""siteMetadata"" to exist on the type ""Site"" it is most likely a typo.&#xA;However, if you expect ""siteMetadata"" to exist there are a couple of solutions to common problems:&#xA;&#xA;- If you added a new data source and/or changed something inside gatsby-node.js/gatsby-config.js, please try a restart of your development server&#xA;- The field might be accessible in another subfield, please try your query in GraphiQL and use the GraphiQL explorer to see which fields you can query and what shape they have&#xA;- You want to optionally use your field ""siteMetadata"" and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to the GraphQL schema. A quick fix is to add a least one entry with that field (""dummy content"")&#xA;&#xA;It is recommended to explicitly type your GraphQL schema if you want to use optional fields. This way you don't have to add the mentioned ""dummy content"". Visit our docs to learn how you can define the schema for ""Site"":&#xA;https://www.gatsbyjs.org/docs/schema-customization/#creating-type-definitions&#xA;&#xA;File: /blog/src/sections/Landing.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Cannot query field ""contentfulAbout"" on type ""Query"".&#xA;&#xA;If you don't expect ""contentfulAbout"" to exist on the type ""Query"" it is most likely a typo.&#xA;However, if you expect ""contentfulAbout"" to exist there are a couple of solutions to common problems:&#xA;&#xA;- If you added a new data source and/or changed something inside gatsby-node.js/gatsby-config.js, please try a restart of your development server&#xA;- The field might be accessible in another subfield, please try your query in GraphiQL and use the GraphiQL explorer to see which fields you can query and what shape they have&#xA;- You want to optionally use your field ""contentfulAbout"" and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to the GraphQL schema. A quick fix is to add a least one entry with that field (""dummy content"")&#xA;&#xA;It is recommended to explicitly type your GraphQL schema if you want to use optional fields. This way you don't have to add the mentioned ""dummy content"". Visit our docs to learn how you can define the schema for ""Query"":&#xA;https://www.gatsbyjs.org/docs/schema-customization/#creating-type-definitions&#xA;&#xA;File: /blog/src/sections/Projects.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Cannot query field ""siteMetadata"" on type ""Site"".&#xA;&#xA;If you don't expect ""siteMetadata"" to exist on the type ""Site"" it is most likely a typo.&#xA;However, if you expect ""siteMetadata"" to exist there are a couple of solutions to common problems:&#xA;&#xA;- If you added a new data source and/or changed something inside gatsby-node.js/gatsby-config.js, please try a restart of your development server&#xA;- The field might be accessible in another subfield, please try your query in GraphiQL and use the GraphiQL explorer to see which fields you can query and what shape they have&#xA;- You want to optionally use your field ""siteMetadata"" and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to the GraphQL schema. A quick fix is to add a least one entry with that field (""dummy content"")&#xA;&#xA;It is recommended to explicitly type your GraphQL schema if you want to use optional fields. This way you don't have to add the mentioned ""dummy content"". Visit our docs to learn how you can define the schema for ""Site"":&#xA;https://www.gatsbyjs.org/docs/schema-customization/#creating-type-definitions&#xA;&#xA;File: /blog/src/sections/Writing.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Cannot query field ""allMediumPost"" on type ""Query"".&#xA;&#xA;If you don't expect ""allMediumPost"" to exist on the type ""Query"" it is most likely a typo.&#xA;However, if you expect ""allMediumPost"" to exist there are a couple of solutions to common problems:&#xA;&#xA;- If you added a new data source and/or changed something inside gatsby-node.js/gatsby-config.js, please try a restart of your development server&#xA;- The field might be accessible in another subfield, please try your query in GraphiQL and use the GraphiQL explorer to see which fields you can query and what shape they have&#xA;- You want to optionally use your field ""allMediumPost"" and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to the GraphQL schema. A quick fix is to add a least one entry with that field (""dummy content"")&#xA;&#xA;It is recommended to explicitly type your GraphQL schema if you want to use optional fields. This way you don't have to add the mentioned ""dummy content"". Visit our docs to learn how you can define the schema for ""Query"":&#xA;https://www.gatsbyjs.org/docs/schema-customization/#creating-type-definitions&#xA;&#xA;File: /blog/src/sections/Writing.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Cannot query field ""mediumUser"" on type ""Query"".&#xA;&#xA;If you don't expect ""mediumUser"" to exist on the type ""Query"" it is most likely a typo.&#xA;However, if you expect ""mediumUser"" to exist there are a couple of solutions to common problems:&#xA;&#xA;- If you added a new data source and/or changed something inside gatsby-node.js/gatsby-config.js, please try a restart of your development server&#xA;- The field might be accessible in another subfield, please try your query in GraphiQL and use the GraphiQL explorer to see which fields you can query and what shape they have&#xA;- You want to optionally use your field ""mediumUser"" and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to the GraphQL schema. A quick fix is to add a least one entry with that field (""dummy content"")&#xA;&#xA;It is recommended to explicitly type your GraphQL schema if you want to use optional fields. This way you don't have to add the mentioned ""dummy content"". Visit our docs to learn how you can define the schema for ""Query"":&#xA;https://www.gatsbyjs.org/docs/schema-customization/#creating-type-definitions&#xA;&#xA;File: /blog/src/sections/Writing.js&#xA;&#xA;There was an error in your GraphQL query:&#xA;&#xA;Cannot query field ""contentfulAbout"" on type ""Query"".&#xA;&#xA;If you don't expect ""contentfulAbout"" to exist on the type ""Query"" it is most likely a typo.&#xA;However, if you expect ""contentfulAbout"" to exist there are a couple of solutions to common problems:&#xA;&#xA;- If you added a new data source and/or changed something inside gatsby-node.js/gatsby-config.js, please try a restart of your development server&#xA;- The field might be accessible in another subfield, please try your query in GraphiQL and use the GraphiQL explorer to see which fields you can query and what shape they have&#xA;- You want to optionally use your field ""contentfulAbout"" and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to the GraphQL schema. A quick fix is to add a least one entry with that field (""dummy content"")&#xA;&#xA;It is recommended to explicitly type your GraphQL schema if you want to use optional fields. This way you don't have to add the mentioned ""dummy content"". Visit our docs to learn how you can define the schema for ""Query"":&#xA;https://www.gatsbyjs.org/docs/schema-customization/#creating-type-definitions&#xA;&#xA;File: /blog/src/sections/About.js&#xA;</code></pre>&#xA;",10254407,,10254407,2020-03-17 05:55:30,2020-05-12 04:50:53,"Gatsby Contentful - GraphQL query error: Unknown type ""ContentfulFixed""",<javascript><node.js><graphql><gatsby><contentful>,3,4,0,2020-03-17 03:53:33
60723785,1,,,0,996,"<p>I am using a <code>GraphQL Apollo client</code> for my <code>swift iOS project</code>. During this I have faced some strange result when I got the response from the <code>fetch request</code> of <code>Apollo Client</code>.</p>&#xA;&#xA;<p>My response is look like :</p>&#xA;&#xA;<blockquote>&#xA;  <p>{""getLeadList"":{""totalrecord"": 8.0,""totalpage"": 1.0, ""__typename"":&#xA;  ""Customdatalist"", ""data"":[{\n  \""testTextField_field_id\"" : 53},\n &#xA;  \""textCheckBox\"" : \""1\"",\n  \""phones_field_id\"" : 7,\n  \""owner\"" :&#xA;  [\n    {\n      \""srno\"" : \""1\"",\n      \""id\"" : \""1\"",\n<br>&#xA;  \""value\"" : \""xy@gmail.com\"",\n      \""name\"" : \""Ashish\""\n    }\n &#xA;  ],\n  \""status_update_date\"" : \""1583234662\”}]}}</p>&#xA;</blockquote>&#xA;&#xA;<p>So while parsing using <code>JSONDecoder().decode</code> it goes into the catch with error detail like <code>The data couldn’t be read because it isn’t in the correct format.</code></p>&#xA;&#xA;<p>Here you can see that server schema for this query response is as below.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/a9XMl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/a9XMl.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>And I have tried with many other queries, and in each response whenever Schema datatype for the <code>key</code> is <code>JSON</code> I faced this issue and not able to solve.</p>&#xA;&#xA;<p>I know there is a solution with convert that String with .utf8 into data but this is not a good solution as some times I am not aware which key have this kind of JSONString. In one JSON response some keys have JSONString and some key have proper JSON formate data. So if any once have faced this please help me to out of this issue.</p>&#xA;&#xA;<p>NOTE: The same query and response is working for Android and React Front end client. I am using Apollo client for communicating with the GraphQL server request and query.</p>&#xA;",6053198,,6053198,2020-03-17 14:29:49,2020-03-17 14:29:49,GraphQLResult of JSONObject have JSONString for object whose data type in schema file is JSON,<ios><json><swift><graphql><apollo-client>,0,7,0,2020-03-17 13:53:31
60770088,1,,,2,715,"<p>How would you deal with interfaces and using them for connections in a data model using the AWS Amplify Model Transforms?</p>&#xA;&#xA;<pre><code>interface User @model {&#xA;  id: ID&#xA;  email: String&#xA;  created: AWSTimestamp&#xA;}&#xA;&#xA;type ActiveUser implements User {&#xA;  id: ID&#xA;  first: String&#xA;  last: String&#xA;  email: String&#xA;  created: AWSTimestamp&#xA;}&#xA;&#xA;type InvitedUser implements User {&#xA;  id: ID&#xA;  email: String&#xA;  created: AWSTimestamp&#xA;  invitedBy: String&#xA;}&#xA;&#xA;type Team @model {&#xA;  users: [User] @connection&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>It seems like my choices are to put <strong>@model</strong> on the types but then I get separate Dynamo tables and queries on the Query once amplify update api is run.</p>&#xA;&#xA;<p>Can the transformer support interfaces as documented here: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/interfaces-and-unions.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/interfaces-and-unions.html</a></p>&#xA;&#xA;<p>I also found some support tickets, but was wondering if there was anything out there that enabled this feature. Here are the support tickets I found:</p>&#xA;&#xA;<p><a href=""https://github.com/aws-amplify/amplify-cli/issues/1037"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/1037</a></p>&#xA;&#xA;<p><a href=""https://github.com/aws-amplify/amplify-cli/issues/202"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/202</a></p>&#xA;",989577,,,,2020-09-24 12:34:15,AWS Amplify and GraphQL Interfaces,<interface><graphql><aws-amplify><aws-appsync>,2,0,0,2020-03-20 07:25:18
60770263,1,,,0,136,"<p>I tried using the Node.js API with GraphQL and Apollo for importing into a dataset for training a machine learning model in GCP (Google Cloud Platform). I get the following error:</p>&#xA;&#xA;<pre><code>node --inspect ./gcp-ql.js&#xA;Debugger listening on ws://127.0.0.1:9229/b71e0ac0-aa01-4fd0-9894-44e387fc630e&#xA;For help, see: https://nodejs.org/en/docs/inspector&#xA;  Server ready at http://localhost:4002/&#xA;Proccessing import&#xA;Proccessing import&#xA;9 FAILED_PRECONDITION: No other operations should be working on projects/1044813058227/locations/us-central1/datasets/TCN8942061986888286208.&#xA;Currently running operations on the dataset:&#xA;        projects/1044813058227/locations/us-central1/operations/TCN7607128426931027968&#xA;Call List Operation API to learn more details.&#xA;</code></pre>&#xA;&#xA;<p>For some reason the log statement processing import appears twice which I believe is the function being called twice. Any help on why this is happening will greatly help. </p>&#xA;&#xA;<p>Code used while running the program:</p>&#xA;&#xA;<pre><code>const mlClient = new AutoMlClient();&#xA;importDataset: async (root, args) =&gt; {&#xA;           try {&#xA;            // Construct request&#xA;            const request = {&#xA;              name: mlClient.datasetPath('dumb-269602', 'us-central1', args.datasetInput.datasetId),&#xA;              inputConfig: {&#xA;                gcsSource: {&#xA;                  inputUris: args.datasetInput.path.split(','),&#xA;                },&#xA;              },&#xA;            };&#xA;&#xA;            // Import dataset&#xA;            console.log(`Proccessing import`);&#xA;            const [operation] = await mlClient.importData(request);&#xA;&#xA;            // Wait for operation to complete.&#xA;            const [response] = await operation.promise();&#xA;            console.log(`Dataset imported: ${response}`);&#xA;            return {&#xA;              datasetId: args.datasetInput.datasetId,&#xA;              status: 200&#xA;            }&#xA;&#xA;          } catch (err) {&#xA;            return {&#xA;              datasetId: args.datasetInput.datasetId,&#xA;              status: 404&#xA;            }&#xA;          }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Link to the actual page on GCP: <a href=""https://cloud.google.com/natural-language/automl/docs/datasets"" rel=""nofollow noreferrer"">https://cloud.google.com/natural-language/automl/docs/datasets</a></p>&#xA;",11580194,,,,2020-03-20 07:41:06,Google Cloud Platform Import Into Dataset Failed,<google-cloud-platform><graphql><graphql-js><apollo-server><google-cloud-automl>,0,5,0,2020-03-20 07:41:06
60770834,1,,,2,64,"<p>I have a <code>Team @model</code> with <code>@auth</code> settings. The <code>@model</code> also has an <code>admin</code> field that implies who has CRUD credentials. Here is the model:</p>&#xA;&#xA;<pre><code>type Team&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner, operations: [create, update, delete] }&#xA;      { allow: owner, ownerField: ""admins"", operations: [create, update, delete] }&#xA;      { allow: owner, ownerField: ""members"", operations: [read, update] }&#xA;      { allow: owner, ownerField: ""viewers"", operations: [read] }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  name: String!&#xA;  admins: [User!]!&#xA;  members: [User]&#xA;  viewers: [User]&#xA;  teamInfo: TeamInfo!&#xA;}&#xA;&#xA;type User @model {&#xA;  id: ID!&#xA;  name: String&#xA;}&#xA;&#xA;type TeamInfo @model {&#xA;  id: ID!&#xA;  info: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have a few other tables, such as <code>TeamInfo</code> and others that are connected to the <code>Team @model</code>. How would the other tables inherit the <code>Team @auth</code> rules? </p>&#xA;",989577,,13017141,2020-03-20 22:11:58,2020-03-20 22:11:58,AWS Amplify Appsync Model — auth,<amazon-web-services><authentication><graphql><aws-amplify><aws-appsync>,0,0,0,2020-03-20 08:35:24
60780821,2,,60778538,0,,"<p>Assuming that the <code>userName</code> is unique, create a <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html"" rel=""nofollow noreferrer"">Global Secondary Index</a> with <code>userName</code> as the partition key. <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html#GSI.Projections"" rel=""nofollow noreferrer"">Project</a>, at least, the <code>id</code> attribute into the index. Finally, search that index instead of the underlying table.</p>&#xA;&#xA;<p>Alternatively, if you <em>never</em> need to lookup by <code>id</code>, consider making <code>userName</code> the partition key and <code>id</code> a regular attribute.</p>&#xA;",271415,,,,2020-03-20 19:53:48,"",,0,2,0,2020-03-20 19:53:48
60782405,1,,,1,135,"<p>I am making a Team like database. I want all members of the team to have <code>read</code> access, but ultimately each team member will have different permissions. </p>&#xA;&#xA;<p>I set up my team table like:</p>&#xA;&#xA;<pre><code>type Team&#xA;  @auth(rules: [{ allow: owner, ownerField: ""admins"", operations: [create, update, delete] }])&#xA;  @auth(rules: [{ allow: owner, ownerField: ""members"", operations: [read, update] }])  {&#xA;  id: ID!&#xA;  teamID: ID!&#xA;  userID: ID!&#xA;  permissions: UserPermission!&#xA;  admins: [User!]!&#xA;  members: [User]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I was hoping to have some type of query or function that adds admins or members to the database depending on the current user role. I have a <code>TeamUserConnection</code> table, but I wasn't sure if I should be doing this through that table or the resolver. Any help would be awesome!</p>&#xA;",989577,,,,2020-03-20 22:31:04,Amplify Appsync auth depending on user role,<graphql><aws-amplify><aws-appsync>,0,0,0,2020-03-20 22:31:04
60802974,2,,60802524,1,,"<p><code>poolUsers</code> is an array of UserPool objects, so it doesn't have a <code>getUsers</code> method. You could map over each UserPool and get the users, but this will result in an unnecessarily large number of calls to your database.</p>&#xA;&#xA;<p>You've created an association between <code>Pool</code> and <code>User</code>. So instead you can just do </p>&#xA;&#xA;<pre><code>members: async (pool) =&gt; {&#xA;  return pool.getUsers()      &#xA;}&#xA;</code></pre>&#xA;",6024220,,,,2020-03-22 17:56:39,"",,0,1,0,2020-03-22 17:56:39
60805775,2,,60795261,2,,"<p>You can use the GraphQL JSON Scalar (for example from this <a href=""https://github.com/taion/graphql-type-json"" rel=""nofollow noreferrer"">implementation</a>). I would not recommend doing this though (in fact years ago I did a talk ""GraphQL JSON Scalar considered harmful""). Instead, you might want to transform map-like objects into lists of key-value pairs.</p>&#xA;&#xA;<p>So for example for your <code>counts</code> object you could do the following:</p>&#xA;&#xA;<pre><code>type CreatedByRef {&#xA;  key: ID&#xA;  count: Int&#xA;}&#xA;</code></pre>&#xA;&#xA;<pre><code>Object.keys(counts.created_by_ref).map(key =&gt; ({&#xA;  key,&#xA;  count: counts.created_by_ref[key],&#xA;}));&#xA;</code></pre>&#xA;&#xA;<p>This will change the shape of the result but preserve all the properties of GraphQL.</p>&#xA;",3849167,,3849167,2020-03-23 10:07:52,2020-03-23 10:07:52,"",,0,8,0,2020-03-22 22:40:21
60818312,1,,,-1,150,"<p>I have two graphql queries which return field1, field2 or field1 and field2. Also I have a boolean flags field1 and field2. Could you help me to write the function which will generate one of three qraphql query:</p>&#xA;&#xA;<pre><code>gql&#xA;    query  {&#xA;        employee {&#xA;            name&#xA;        }&#xA;    };&#xA;&#xA;&#xA;gql&#xA;    query  {&#xA;        employee {&#xA;            surname&#xA;        }&#xA;    };&#xA;&#xA;&#xA;gql&#xA;    query  {&#xA;        employee {&#xA;            name&#xA;            surname&#xA;        }&#xA;    }&#xA;&#xA;&#xA;function Form () {&#xA;...&#xA;    const { data } = useQuery(&#xA;        GET_NAME // query &#xA;    );&#xA;&#xA;    const onClick = () =&gt; {&#xA;&#xA;    ....&#xA;    return textInput.current!.value=data.me.name;&#xA;</code></pre>&#xA;&#xA;<p>Will execute the query (maybe by <code>useQuery</code>) and will return one of possible string:</p>&#xA;&#xA;<pre><code>name&#xA;surname&#xA;name + surname&#xA;</code></pre>&#xA;&#xA;<p>For example:</p>&#xA;&#xA;<p>If I check the name the function will generate and execute query </p>&#xA;&#xA;<pre><code>query  {&#xA;    employee {&#xA;        name&#xA;    }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>And will return the value - John </p>&#xA;&#xA;<p>If I check the surname the function will generate and execute query </p>&#xA;&#xA;<pre><code>query  {&#xA;    employee {&#xA;        surname&#xA;    }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>and will return the value - Connor</p>&#xA;&#xA;<p>If I check name and surname   </p>&#xA;&#xA;<pre><code> query  {&#xA;        employee {&#xA;            name&#xA;            surname&#xA;        }&#xA;    };&#xA;</code></pre>&#xA;&#xA;<p>And will return John Connor.</p>&#xA;&#xA;<p>Is it works like with SQL query ?</p>&#xA;&#xA;<p>Detail explaining:&#xA;Suppose I have only one object on server {name: John, surname: Connor}, without id and other fields. When I call onClick function the client application have to generate and execute only one query. Could you help to do it?</p>&#xA;&#xA;<p>For example if I work with SQL DB, I can concatenate String the query&#xA;const q = <code>&#xA;select ${field}&#xA;from employee&#xA;</code></p>&#xA;&#xA;<p>where the fields may by equal ""name"", ""surname"" or ""name, surname"" and generate the queries &#xA;""select name from employee""&#xA;""select surname from employee""&#xA;""select name, surname from employee""</p>&#xA;&#xA;<p>this query will return the ""John"", ""Connor"" or ""John Connor"".&#xA;Is it possible for graphql to generate the query by concatenation or interpolation?</p>&#xA;",13056366,,13056366,2020-03-25 12:31:04,2020-03-25 18:50:04,Custom graphql query,<javascript><graphql>,1,5,0,2020-03-23 17:08:56
60827105,1,60942520,,4,2564,"<p>I have a graphQL server deployed with aws appsync. The thing is that our customers prefer a standard REST API. I'm looking for the simplest way to wrap graphQL query with REST API.</p>&#xA;&#xA;<p>I'm considering using Amazon api gateway to make a REST endpoint, and integrate lambda behind the api gateway. In that way I can let lambda functions to send a fixed graphQL query/mutations and modify the response.</p>&#xA;&#xA;<p>However as you can see from below image, I found AWS Service integration option in Amazon API gateway. I'm wondering whether I can integrate appsync to api gateway directly without using lambda. I searched it from aws documents but couldn't find any related information.</p>&#xA;&#xA;<p>Amazon api gateway setup capture:</p>&#xA;&#xA;<p><img src=""https://i.stack.imgur.com/rzVXF.png"" alt=""Amazon api gateway setup capture""></p>&#xA;&#xA;<ol>&#xA;<li>Is it possible to wrap graphQL API with REST API by integrating appsync to api gateway without using lambda? Just like what I found from the captured image?</li>&#xA;<li>If yes, is there any examples or tutorials?</li>&#xA;<li>If not, should I just integrate lambda? Is there any better ideas or tips?</li>&#xA;</ol>&#xA;",12012823,,11566361,2020-03-24 08:27:14,2022-08-22 21:46:52,Wrapping graphQL(appsync) with REST API using Amazon api gateway,<amazon-web-services><graphql><aws-appsync><amazon-api-gateway>,3,0,0,2020-03-24 08:12:42
60837932,1,,,0,259,"<p>I am kind of confused with the whole thing. Let me try to put this way.&#xA;1. Can I fetch data from appsync using <code>sessionToken</code> which provides </p>&#xA;&#xA;<pre><code>final _credential = new CognitoCredentials(_identityPoolId, _userPool);&#xA;await _credential.getAwsCredentials(token, 'graph.facebook.com');&#xA;print(_credential.sessionToken);&#xA;</code></pre>&#xA;&#xA;<p>I am using dart, flutter to do this. According to <a href=""https://github.com/zino-app/graphql-flutter/issues/209#issuecomment-598835690"" rel=""nofollow noreferrer"">this</a> looks like possible but only via JWT? Are JWT and identity pool's sessiosToken are completely different things? </p>&#xA;&#xA;<p>If that's the case is it possible to fetch the data from appsync sessionToken?</p>&#xA;&#xA;<p>If data fetching is not possible with sessionToken, how do I connect the identity pool to user pool? Each time user logs in I have to update the userpool (like <a href=""https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-integrating-user-pools-with-identity-pools.html"" rel=""nofollow noreferrer"">this</a>, any better example)? After adding the user to userpool I can able to fetch the JWT token using <code>_session.getIdToken().getJwtToken()</code>?</p>&#xA;&#xA;<p>Any help would be great :) I am stuck with this to fetch data from appsync for days now. :(</p>&#xA;",7393155,,7393155,2020-04-01 23:43:42,2020-04-02 06:07:51,How to get data from Appsync using identity provider's sessionToken?,<amazon-web-services><flutter><graphql><amazon-cognito><aws-amplify>,0,2,0,2020-03-24 19:24:17
60870648,1,,,0,135,"<p>I have an AppSync API which runs a series of GraphQL queries/mutations. The sequence was working fine until it randomly threw a 500 error with this in the response header: <code>x-amzn-ErrorType=InvalidUserPoolException</code>. Additionally, there was a mutation before this request which never updated the DynamoDB data source it was attached to. </p>&#xA;&#xA;<p>I don't understand why I would get the <code>InvalidUserPoolException</code> if the requests prior to this error worked fine with that userpool? And I don't know if this would be related to the mutation's failure to update the DynamoDB table? Everything works in our development environment but this is a failure in production.</p>&#xA;",9645918,,,,2020-04-26 02:17:38,InvalidUserPoolException in AWS AppSync,<amazon-web-services><graphql><amazon-dynamodb><aws-appsync><aws-userpools>,1,0,0,2020-03-26 15:27:26
60877199,1,61050680,,0,213,"<p>How can we achieve many to many with dataLoader?</p>&#xA;&#xA;<p>Lets say i want to fetch the companies with there contacts (and a contact can have multiple companies).&#xA;I have a companyLinks as midde table (with companyId/contactId).</p>&#xA;&#xA;<p>I have this which works when there is only 1 contact for a company:</p>&#xA;&#xA;<pre><code>public async Task&lt;ILookup&lt;Guid, Contact&gt;&gt; GetContactsFromCompanyBatchAsync(IEnumerable&lt;Guid&gt; companyIds)    &#xA;{&#xA;  var contacts = _entities.Include(c =&gt; c.CompanyLinks).Where(contact =&gt; contact.CompanyLinks.Any(cl =&gt; companyIds.Contains(cl.CompanyId)));&#xA;  return contacts.ToLookup(cont =&gt; {&#xA;       var res = cont.CompanyLinks.Any() ? cont.CompanyLinks.ElementAt(0).CompanyId : Guid.Empty;&#xA;       return res;&#xA;  });&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But what if a contact has more then 1 company? How can i know the correct companyId ?</p>&#xA;",5289626,,,,2020-04-05 23:05:09,Many to many with dataLoader in graphql-dotnet,<many-to-many><graphql-dotnet>,1,1,0,2020-03-26 22:31:26
60900415,1,,,3,956,"<p>I am trying to manage two linked resources in one <code>Edit</code> > <code>SimpleForm</code>. The relationship between both resources is a one-to-one between two tables.</p>&#xA;&#xA;<p>For instance, let's say we have these two tables:</p>&#xA;&#xA;<h2>User</h2>&#xA;&#xA;<ul>&#xA;<li>id</li>&#xA;<li>email</li>&#xA;<li>password</li>&#xA;<li>name</li>&#xA;<li>address_id</li>&#xA;</ul>&#xA;&#xA;<h2>Address</h2>&#xA;&#xA;<ul>&#xA;<li>id</li>&#xA;<li>street</li>&#xA;<li>number</li>&#xA;<li>postcode</li>&#xA;<li>country_name</li>&#xA;</ul>&#xA;&#xA;<p>I'm using react-admin for managing records from these two tables from PostgreSQL through graphql (using <a href=""https://hasura.io/"" rel=""nofollow noreferrer"">hasura</a>). There are a few options in term of data provider for hasura and graphql. </p>&#xA;&#xA;<p>The first one I tried <a href=""https://github.com/hasura/ra-data-hasura"" rel=""nofollow noreferrer"">ra-data-hasura</a> works using the <a href=""https://hasura.io/docs/1.0/graphql/manual/api-reference/schema-metadata-api/index.html#endpoint"" rel=""nofollow noreferrer""><code>/v1/query</code></a> REST API endpoint of hasura. The documentation for this endpoint is lacking. </p>&#xA;&#xA;<p>I also tried <a href=""https://github.com/marmelab/react-admin/tree/master/packages/ra-data-graphql-simple"" rel=""nofollow noreferrer"">ra-data-graphql-simple</a>, and <a href=""https://github.com/steams/ra-data-hasura-graphql"" rel=""nofollow noreferrer"">ra-data-hasura-graphql</a>. </p>&#xA;&#xA;<p>As far as I can tell, none support querying relations/foreign key tables in one query. Therefore none of these provider can retrieve foreign keys tables and embed the result directly in the main object response json. </p>&#xA;&#xA;<p>Just to be clear, I mean returning something like this for user:</p>&#xA;&#xA;<pre><code>{&#xA; ""id"": 1,&#xA; ""name"": ""John Smith"",&#xA; ""email"": ""john.smith@gmail.com"",&#xA; ""password"": ""password"",&#xA; ""address"": {&#xA;   ""id"": 145,&#xA;   ""street"": ""High Street"",&#xA;   ""number"": ""25b"",&#xA;   ""postcode"": ""EC2 5FG"",&#xA;   ""country_name"": ""United Kingdom""&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Therefore I am trying to retrieve the <code>address</code> record on the <code>Edit</code> form using a separate query, which I did (probably not in the best way, feel free to suggest a better version):</p>&#xA;&#xA;<pre><code>import { useGetOne, Loading, Error } from 'react-admin';&#xA;&#xA;const FetchRelated = ({ record, reference, source, children }) =&gt; {&#xA;    const { data, loading, error } = useGetOne(reference, record[source]);&#xA;    if (loading) return &lt;Loading /&gt;;&#xA;    if (error) return &lt;Error /&gt;;&#xA;    if (!data) return null;&#xA;&#xA;    // this is the only way I found to be able to populate the fields in the form with the address data&#xA;    record[reference] = data;&#xA;&#xA;    return &lt;React.Fragment&gt;{children}&lt;/React.Fragment&gt;;&#xA;};&#xA;&#xA;...&#xA;import { Edit, SimpleForm, TextInput } from 'react-admin';&#xA;&#xA;...&#xA;const UserEdit = props =&gt; (&#xA; &lt;Edit {...props}&gt;&#xA;  &lt;SimpleForm&gt;&#xA;   &lt;FetchRelated reference=""address"" source=""address_id""&gt;&#xA;    &lt;TextInput source=""address.postcode"" label=""Post Code"" /&gt;&#xA;   &lt;/FetchRelated&gt;&#xA;  &lt;/SimpleForm&gt;&#xA; &lt;/Edit&gt;&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>Using this, my <code>record</code> object now looks like this:</p>&#xA;&#xA;<pre><code>{&#xA; ""id"": 1,&#xA; ""name"": ""John Smith"",&#xA; ""email"": ""john.smith@gmail.com"",&#xA; ""password"": ""password"",&#xA; ""address_id"": 145,&#xA; ""address"": {&#xA;   ""id"": 145,&#xA;   ""street"": ""High Street"",&#xA;   ""number"": ""25b"",&#xA;   ""postcode"": ""EC2 5FG"",&#xA;   ""country_name"": ""United Kingdom""&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Now I have to take care of the actual edit query. It seems <code>react-admin</code> uses <a href=""https://github.com/marmelab/react-admin/blob/89ac783fd9f961401d1c2e8d4ca4965053ed1d21/packages/ra-core/src/controller/useEditController.ts#L59"" rel=""nofollow noreferrer""><code>useEditController</code></a> for all the requests triggering (both <a href=""https://github.com/marmelab/react-admin/blob/89ac783fd9f961401d1c2e8d4ca4965053ed1d21/packages/ra-core/src/controller/useEditController.ts#L67-L75"" rel=""nofollow noreferrer""><code>useGetOne</code></a> and <a href=""https://github.com/marmelab/react-admin/blob/89ac783fd9f961401d1c2e8d4ca4965053ed1d21/packages/ra-core/src/controller/useEditController.ts#L96-L120"" rel=""nofollow noreferrer""><code>update</code></a>). While the update method is passed as <code>save</code> attribute to <a href=""https://github.com/marmelab/react-admin/blob/ec8e41e762d516b4caacbc898cfe52cbd8db456f/packages/ra-ui-materialui/src/form/SimpleForm.js#L61"" rel=""nofollow noreferrer""><code>SimpleForm</code></a>, it's not passed to <a href=""https://github.com/marmelab/react-admin/blob/ec8e41e762d516b4caacbc898cfe52cbd8db456f/packages/ra-ui-materialui/src/form/SimpleForm.js#L109-L121"" rel=""nofollow noreferrer""><code>Toolbar</code></a>, which means (from what I can tell) one cannot override the <a href=""https://marmelab.com/react-admin/CreateEdit.html#altering-the-form-values-before-submitting"" rel=""nofollow noreferrer""><code>handleSubmit</code>/<code>handleSubmitWithRedirect</code></a> props of <code>SaveButton</code> without having to essentially replicate all the code for <code>update</code> from <code>useEditController</code>.</p>&#xA;&#xA;<p>Ideally, one could override the <code>handleSubmit</code> and do one <code>update</code> for both resources at once. Using a graphql mutation doing that wouldn't be too much trouble, unfortunately using hasura <code>/v1/graphql</code> endpoint doesn't provide a way to <a href=""https://github.com/hasura/graphql-engine/pull/3852"" rel=""nofollow noreferrer"">update relations</a> in one query. Therefore we need to do two queries, which is fine.</p>&#xA;&#xA;<p>Ideally I would want to re-use the existing <code>update</code> method to update the <code>user</code> record, and add another update call for the <code>address</code>. </p>&#xA;&#xA;<p>What is the best possible approach to achieve something like this?</p>&#xA;&#xA;<pre><code>import React, { useCallback } from 'react';&#xA;import { useForm } from 'react-final-form';&#xA;import { useSelector } from 'react-redux';&#xA;import { Toolbar, SaveButton, DeleteButton, useMutation } from 'react-admin';&#xA;&#xA;const RelatedSaveButton = ({ resourceName, id, handleSubmitWithRedirect, ...props }) =&gt; {&#xA;  const form = useForm();&#xA;  const stateData = useSelector(&#xA;        state =&gt;&#xA;             state.admin.resources[resourceName]&#xA;                 ? state.admin.resources[resourceName].data&#xA;                 : null,&#xA;         [resourceName]&#xA;     );&#xA;  const [update] = useMutation();&#xA;  const handleSave = useCallback((values, redirect) =&gt; {&#xA;    const params = {type: 'update', resource: resourceName, payload: {id: id, data: values[resourceName], previousData: stateData}};&#xA;    update(params, {onSuccess: response =&gt; {&#xA;      // doing something here to update `user` using `save` from `useEditController`&#xA;      // handleSubmitWithRedirect(redirect);&#xA;    }});&#xA;  }, [resourceName, stateData, id, update]);&#xA;&#xA;  return &lt;SaveButton {...props} onSave={handleSave} /&gt;;&#xA;};&#xA;&#xA;const UserToolbar = ({ ...props }) =&gt; (&#xA;  &lt;Toolbar {...props}&gt;&#xA;    &lt;RelatedSaveButton resourceName='address' id={props.record['address_id']} /&gt;&#xA;    &lt;DeleteButton /&gt;&#xA;  &lt;/Toolbar&gt;&#xA;);&#xA;</code></pre>&#xA;",12316148,,,,2020-03-28 11:16:23,Add/Edit multiple resources in one form,<javascript><reactjs><graphql><react-admin>,0,4,0,2020-03-28 11:16:23
60925562,2,,60916403,0,,"<p>I solve above mentioned problem.I exempt my Graphql endpoint from CSRF protection by wrapping the GraphQLView with the csrf_exempt decorator in urls.py file in django project, just same as this (see the <a href=""https://docs.graphene-python.org/projects/django/en/latest/installation/"" rel=""nofollow noreferrer"">source </a>):</p>&#xA;&#xA;<pre><code>from django.conf.urls import url, include&#xA;from django.contrib import admin&#xA;from django.views.decorators.csrf import csrf_exempt&#xA;from graphene_django.views import GraphQLView&#xA;from cookbook.schema import schema&#xA;&#xA;urlpatterns = [&#xA;    url(r'^admin/', admin.site.urls),&#xA;    url(r'^graphql$', csrf_exempt(GraphQLView.as_view(graphiql=True,schema=schema))),&#xA;]&#xA;</code></pre>&#xA;&#xA;<p>it should be mention that i used '<a href=""http://my-IPv4-address:8000/graphql"" rel=""nofollow noreferrer"">http://my-IPv4-address:8000/graphql</a>' in flutter app for successfully connection after above mentioned modification in CSRF Protection settings.&#xA;for achieving IPv4-address follow this <a href=""https://lifehacker.com/how-to-find-your-local-and-external-ip-address-5833108"" rel=""nofollow noreferrer"">guide</a>. after that, i added my-IPv4-address to ALLOWED_HOSTS in settings.py file like this:</p>&#xA;&#xA;<pre><code>ALLOWED_HOSTS = ['192.168.x.xxx', 'localhost', '127.0.0.1']&#xA;</code></pre>&#xA;&#xA;<p>and finally for running graphene-django server i use this command in cmd console:</p>&#xA;&#xA;<pre><code>(env) python ./manage.py runserver 0.0.0.0:8000&#xA;</code></pre>&#xA;",13061012,,13061012,2020-03-30 07:25:33,2020-03-30 07:25:33,"",,0,0,0,2020-03-30 07:06:04
60942520,2,,60827105,2,,"<p>I found out how to integrate appsync to API gateway. &#xA;You can do it with AWS Service integration by setting it as AppSync Data Plane.</p>&#xA;&#xA;<p>In the method setup page:</p>&#xA;&#xA;<ol>&#xA;<li><p>Integration type = AWS Service</p></li>&#xA;<li><p>AWS Service = AppSync Data Plane</p></li>&#xA;<li><p>AWS Subdomain = get it from your appsync endpoint&#xA;(For example: &#xA;<a href=""https://YOUR_AWS_Subdomain.appsync-api.your-region.amazonaws.com/graphql"" rel=""nofollow noreferrer"">https://YOUR_AWS_Subdomain.appsync-api.your-region.amazonaws.com/graphql</a>)</p></li>&#xA;<li><p>HTTP method = POST</p></li>&#xA;<li><p>Action Type = Use path override</p></li>&#xA;<li><p>Path override(optional) = graphql</p></li>&#xA;</ol>&#xA;&#xA;<p>It worked well for me.</p>&#xA;",12012823,,,,2020-03-31 02:27:32,"",,0,4,0,2020-03-31 02:27:32
60942850,1,,,7,1284,"<p>When using AWS Amplify with a dynamodb backend, it's possible to update the AppSync schema and resolvers by modifying the files locally and then executing <code>amplify push</code>.</p>&#xA;&#xA;<p>I'm using RDS (added it with <code>amplify api add-graphql-datasource</code> as described in the documentation). Queries and resolvers are setup in AppSync automatically. When I update the Aurora RDS schema, I run <code>amplify api add-graphql-datasource</code> again to update queries and resolvers.</p>&#xA;&#xA;<p><em>But how do I add new queries/mutations and bind them to new resolvers (defined in <code>vtl</code> files on localhost), using the amplify CLI?</em> </p>&#xA;&#xA;<p>I figured out how to do it by using the AppSync Web console. I modify the schema and create resolvers in AppSync, then use <code>amplify codegen</code> to update <code>App.ts</code>, <code>queries.ts</code>, etc. However, this approach is bad for at least two reasons. </p>&#xA;&#xA;<ol>&#xA;<li>When working with multiple environments, changes to each environment has to be done manually via the AppSync console, which is difficult for larger projects. </li>&#xA;<li><code>amplify codegen</code> doesn't update the <code>schema.graphql</code> file on localhost.</li>&#xA;<li>Executing <code>amplify push</code> after making changes to AppSync over uses the schema defined on localhost and overwrites the schema defined in the AppSync console.</li>&#xA;<li>Custom resolvers in <code>app/amplify/backend/&lt;backend_name&gt;/resolvers</code> are not synchronized with AppSync</li>&#xA;<li>the stack file is not updated automatically. </li>&#xA;</ol>&#xA;&#xA;<p><strong>Am I going about this the wrong way? Is there a better way of updating schema/resolvers using amplify CLI when using and RDS backend?</strong> </p>&#xA;&#xA;<p>Thank you!</p>&#xA;",1056420,,,,2020-09-15 07:42:44,Modifying resolvers in AWS Amplify with RDS backend,<amazon-web-services><graphql><amazon-rds><aws-amplify><aws-amplify-cli>,1,2,0,2020-03-31 03:08:57
60959435,1,,,2,735,"<p>I'm trying to create a single model with a few attributes:</p>&#xA;&#xA;<pre><code>type Guest @model {&#xA;    id: ID!&#xA;    name: String&#xA;    dayGuest: Boolean&#xA;    attending: Boolean&#xA;    dietryRequirements: String&#xA;    owner: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'd like to adjust how different users can access the data within this model:</p>&#xA;&#xA;<ol>&#xA;<li><p>Users that are assigned to the 'admins' group within cognito should be able to create, read, update and delete all the fields within a record.</p></li>&#xA;<li><p>The owner of the record should be able to read every field and update the <code>attending</code> and <code>dietryRequirements</code> fields.</p></li>&#xA;<li>Any user with a valid JWT should be able to update the <code>owner</code> field.</li>&#xA;</ol>&#xA;&#xA;<p>To achieve this I have implemented the following @auth directives:</p>&#xA;&#xA;<ol>&#xA;<li><code>@auth(rules: [{allow: groups, groups: [""admins""]}])</code> on the <code>Guest</code> model</li>&#xA;<li><code>@auth(rules: [{allow: owner, ownerField: ""owner"", operations:[read]}])</code> on the <code>Guest</code> model and <code>@auth(rules: [{allow: owner, ownerField: ""owner"", operations: [update]}])</code> on the <code>attending</code> and <code>dietryRequirements</code> fields.</li>&#xA;<li><code>@auth(rules: [{allow: private, operations: [update]}])</code> on the <code>owner</code> field.</li>&#xA;</ol>&#xA;&#xA;<p>The final model looks like this:</p>&#xA;&#xA;<pre><code>type Guest @model @auth(rules: [{allow: groups, groups: [""admins""]}, {allow: owner, ownerField: ""owner"", operations:[read]}]){&#xA;    id: ID!&#xA;    name: String&#xA;    dayGuest: Boolean&#xA;    attending: Boolean @auth(rules: [{allow: owner, ownerField: ""owner"", operations: [update]}])&#xA;    dietryRequirements: String @auth(rules: [{allow: owner, ownerField: ""owner"", operations: [update]}])&#xA;    owner: String @auth(rules: [{allow: private, operations: [update]}])&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This doesn't seem to work and I can't work out why.&#xA;The admin user can view everything and create new objects.&#xA;A validated user (not owner) cannot update the owner field as this returns an unauthorised error.&#xA;An owner can view all the records regardless of them being the owner of each specific record or not.</p>&#xA;&#xA;<p>How can I achieve what I want?</p>&#xA;",1187884,,,,2021-02-10 18:36:33,How are multiple @auth directives handled on an AWS AppSync GraphQL Schema?,<graphql><amazon-cognito><aws-amplify><aws-appsync><aws-amplify-cli>,1,1,0,2020-03-31 20:33:48
60970471,2,,56968094,2,,"<p>I had the same issue.</p>&#xA;&#xA;<p>Using Windows 10 and MariaDB (XAMPP). I added also the @unique directive - I already had some users in the table -  and still could add users with the same email address without any error messages in the console. However when I opened up the Docker Desktop app, I saw a buch of error messages, regarding duplicate entries (email). Re-deploying prisma seemed to be working in the terminal, but it actually was not.</p>&#xA;&#xA;<p>The answer from @realAlexBarge put me in the right direction:</p>&#xA;&#xA;<blockquote>&#xA;  <p>""Also be careful that the new data model is actually deployed. If you have conflicts with the existing data it might be necessary to use the force flag to overwrite the existing schema anyways if so desired.""</p>&#xA;</blockquote>&#xA;&#xA;<p>So what I did at the end:</p>&#xA;&#xA;<ol>&#xA;<li>stopped docker</li>&#xA;</ol>&#xA;&#xA;<pre><code>docker-compose down -v --rmi all --remove-orphans&#xA;</code></pre>&#xA;&#xA;<ol start=""2"">&#xA;<li>deleted all tables from the database - probably ""users"" and ""migration"" is enough. As it seems the ""migration"" table keeps track of your scheema</li>&#xA;<li>restarted docker </li>&#xA;</ol>&#xA;&#xA;<pre><code>docker-compose up -d&#xA;</code></pre>&#xA;&#xA;<ol start=""4"">&#xA;<li>re-deployed prisma</li>&#xA;</ol>&#xA;&#xA;<pre><code>prisma deploy&#xA;</code></pre>&#xA;&#xA;<p>Hope it helps. </p>&#xA;",13182500,,,,2020-04-01 12:04:50,"",,0,0,0,2020-04-01 12:04:50
60980262,1,,,2,3144,"<p>I currently have a AppSync schema where I created a separate query within the AppSync console in order retain certain parameter (assetId) and get a list of the results in my DynamoDB table. I have tested the query already within the AppSync console and it works fine, I am now just having troubles using Amplify in my React App in order to call the query. I get the following error when running my App:</p>&#xA;&#xA;<pre><code>DisplayCard.js:34 Uncaught (in promise) {data: null, errors: Array(1)}&#xA;""Validation error of type FieldUndefined: Field 'getAssetIdRating' in type 'Query' is undefined @ 'getAssetIdRating'""&#xA;</code></pre>&#xA;&#xA;<p>I have tried following the documentation as per the Amplify site (<a href=""https://aws-amplify.github.io/docs/js/api"" rel=""nofollow noreferrer"">https://aws-amplify.github.io/docs/js/api</a>) but am still receiving this error.</p>&#xA;&#xA;<p>For reference here is the query when I run it in the AppSync console: (returns the desired result)</p>&#xA;&#xA;<pre><code>    query getAssetIdRating {&#xA;      getRatingsAssetId(assetId:""949142fb-91d2-41bd-8c04-1d42ed8166c9"") {&#xA;        items {&#xA;          id&#xA;          assetId&#xA;          rating&#xA;        }&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>The resolver that I am using for this query is the following: (I have created a separate Index)</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Query"",&#xA;    ""index"": ""assetId-index"",&#xA;    ""query"" : {&#xA;        ## Provide a query expression. **&#xA;        ""expression"": ""assetId = :assetId"",&#xA;        ""expressionValues"" : {&#xA;            "":assetId"" : $util.dynamodb.toDynamoDBJson($ctx.args.assetId)&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And now moving onto my React code, this is the current query that I am using within react, under src/graphql/queries.</p>&#xA;&#xA;<pre><code>    export const getAssetIdRating = /* GraphQL */ `&#xA;      query getRatingAssetId($assetId: ID) {&#xA;        getAssetIdRating(assetId: $assetId) {&#xA;          items {&#xA;            id&#xA;            assetId&#xA;            rating&#xA;          }&#xA;        }&#xA;      }&#xA;    `;&#xA;</code></pre>&#xA;&#xA;<p>And when I call it then in my React application:</p>&#xA;&#xA;<pre><code>componentDidMount = async () =&gt; {&#xA;    this.getRatings();&#xA;}&#xA;&#xA;getRatings = async () =&gt; {&#xA;    let { assetIdRatings } = this.state;&#xA;    const result = await API.graphql(graphqlOperation(queries.getAssetIdRating, {assetId: '949142fb-91d2-41bd-8c04-1d42ed8166c9'}));&#xA;    console.log(result);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Note that when I call the listRatings query it works fine, just does not work with this query. And as a side note, I added this query later in manually through the AppSync console, I don't presume that should play an issue?</p>&#xA;&#xA;<p>Either way, any help would be greatly appreciated! And I can upload anymore necessary code if required! Thanks for the help!</p>&#xA;",10992687,,,,2020-04-03 10:30:03,"AppSync/Amplify Query using a Parameter Error """"Validation error of type FieldUndefined:""",<reactjs><graphql><aws-amplify><aws-appsync>,1,0,0,2020-04-01 21:00:48
60988032,1,,,0,353,"<p>First-time Lambda user</p>&#xA;&#xA;<p>I'm trying to get an IOT device payload from IOT Core to a GraphQL endpoint by using an 'Act' with a Lambda function on IOT Core.</p>&#xA;&#xA;<p>I found the below tutorial online and tailored it to my needs but I get a ""Parsing error: Unexpected token client"" error.</p>&#xA;&#xA;<p><a href=""https://aws.amazon.com/blogs/mobile/iot-with-aws-appsync/"" rel=""nofollow noreferrer"">https://aws.amazon.com/blogs/mobile/iot-with-aws-appsync/</a></p>&#xA;&#xA;<p>I have also included the SQL statement used to select the data from the IOT Payload</p>&#xA;&#xA;<pre><code>SELECT &#xA;dev_id AS trackerID,&#xA;timestamp() AS time, &#xA;parse_time(""MM.dd.yyyy HH:mm:ss z"", timestamp(), ""Europe/Belfast"") AS date_time, &#xA;counter, &#xA;payload_fields.gps_1.altitude AS altitude, &#xA;payload_fields.gps_1.latitude AS latitude, &#xA;payload_fields.gps_1.longitude AS longitude, &#xA;payload_fields.analog_in_5 AS batt, &#xA;payload_fields.analog_in_6 AS kmph, &#xA;payload_fields.analog_in_7 AS hdop,  &#xA;hardware_serial, &#xA;metadata &#xA;FROM '#'&#xA;</code></pre>&#xA;&#xA;<p>and a screenshot of the Lambda function</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/a6Lsm.png"" rel=""nofollow noreferrer"">Lambda function screenshot</a></p>&#xA;&#xA;<p>Any assistance or suggestions would be appreciated!!!</p>&#xA;",13195520,,,,2022-04-29 04:32:12,AWS Lamda Error: Parsing error: Unexpected token client,<aws-lambda><graphql><aws-iot>,1,0,0,2020-04-02 09:14:26
60989703,1,61088433,,0,825,"<p>My question is very similar to this question: <a href=""https://stackoverflow.com/questions/56826035/how-to-do-field-level-auth-for-bi-directional-one-to-many-connection-with-apps"">How to do field level @auth for bi-directional one-to-many @connection with AppSync GraphQL Transform?</a> . I'll ask with a slightly different graphql schema and hope for a more generalized answer. An example schema is:</p>&#xA;&#xA;<pre><code>type Blog @model @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {&#xA;    id: ID!   &#xA;    name: String!&#xA;    posts: [Post] @connection }&#xA;&#xA;type Post @model @auth(rules: [{ allow: owner }, { allow: public, operations: [read] }]) {  &#xA;    title: String!&#xA;    bodyText: String!&#xA;</code></pre>&#xA;&#xA;<p>Suppose a user with username ""User1"" creates a Blog item. This db entry ends up as </p>&#xA;&#xA;<pre><code>Blog: { owner: ""User1"", id: ""0b7f6862-1a46-4006-8953-e440334c47ec"", name: ""My First Blog!"" }&#xA;</code></pre>&#xA;&#xA;<p>Now User2 comes along knowing the id of User1's Blog -> namely, ""0b7f6862-1a46-4006-8953-e440334c47ec"". That user runs a createPost mutation with </p>&#xA;&#xA;<pre><code>input: {  postBlogId: ""0b7f6862-1a46-4006-8953-e440334c47ec"", title: ""I'm User1 and I Hate Puppies!"", bodyText: ""Puppies should be illegal!"" }&#xA;</code></pre>&#xA;&#xA;<p>This works! User2 has injected a post that will show up in queries for User1's blog when following the connection to Posts. That seems bad.</p>&#xA;&#xA;<p>The accepted solution in the other question seems to rely on the id field in the table that's the ""one"" field in the ""one-to-many"" connection relationship happening to double as the owner field. But the problem seems to exist in any one-to-many connection, most of which won't have that constraint. </p>&#xA;&#xA;<p>Have people found a way to protect this? I agree with the other question that this seems like something everyone must hit. </p>&#xA;&#xA;<p>I thought of adding field level auth on the id field to restrict it to only allow read by owner plus a secondary id key to give to other users to run Gets with, but doing field level auth on required fields like id breaks subscriptions. The only other way I can think to do it is to block create and update for any types on the ""many"" side of the ""one-to-many"" connection relationship and then add custom mutations that run lambdas on the server that can query the other table to verify that the user has permissions to make the connection. But it seems like the amplify docs would have mentioned it somewhere if that's what you had to do? Would really appreciate being told I missed something dumb.</p>&#xA;",13195008,,,,2020-04-07 19:59:15,How to do @auth for one-to-many @connection with AppSync GraphQL Transform?,<graphql><aws-amplify>,1,0,0,2020-04-02 10:43:19
61010388,1,,,2,265,"<p>I have created a basic api using graphical with PHP and mysql. when i have fire query using postman .&#xA;i am new grapql</p>&#xA;&#xA;<p>{""query"": ""query { getPeople{name,pet{isDog,sound}} }"" } then error come</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/WkQ47.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WkQ47.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>but this query working fine {""query"": ""query { getPeople{name} }"" }&#xA;<a href=""https://i.stack.imgur.com/DkOM7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/DkOM7.png"" alt=""enter image description here""></a>&#xA;Any One explain what was the issue?&#xA;schema file </p>&#xA;&#xA;<pre><code>  type Query {&#xA;      getPeople: [Person]&#xA;    }&#xA;&#xA;    type Person {&#xA;      name: String&#xA;      pet: Pet&#xA;    }&#xA;&#xA;    type Pet {&#xA;      isDog: Boolean&#xA;      sound: String&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>my end point code</p>&#xA;&#xA;<pre><code>require_once FCPATH . 'vendor/autoload.php';&#xA;use GraphQL\Type\Definition\ObjectType;&#xA;use Siler\Graphql;&#xA;use GraphQL\GraphQL as WGraphql;&#xA;use Siler\Http\Request;&#xA;use Siler\Http\Response;&#xA;use Overblog\DataLoader\DataLoader;&#xA;use Overblog\DataLoader\Promise\Adapter\Webonyx\GraphQL\SyncPromiseAdapter;&#xA;use Overblog\PromiseAdapter\Adapter\WebonyxGraphQLSyncPromiseAdapter;&#xA;use GraphQL\Utils\BuildSchema;&#xA;&#xA;Response\header('Access-Control-Allow-Origin', '*');&#xA;        Response\header('Access-Control-Allow-Headers', 'content-type');&#xA;&#xA;        $MyDB = new mysqli(""localhost"", ""root"", ""Oneclick1@"", ""test"");&#xA;&#xA;        if ($MyDB-&gt;connect_errno) {&#xA;            error_log(""Failed to connect to MySQL: ("" . $mysqli-&gt;connect_errno . "") "" . $mysqli-&gt;connect_error);&#xA;        }&#xA;&#xA;        function sql($query) {&#xA;            $MyDB = new mysqli(""localhost"", ""root"", ""Oneclick1@"", ""test"");&#xA;            //echo $query;&#xA;            //print_r([$MyDB, $query]);exit;&#xA;            $result = mysqli_query($MyDB, $query);&#xA;            $rows = mysqli_fetch_all($result, MYSQLI_ASSOC);  &#xA;&#xA;            return $rows;&#xA;        }&#xA;&#xA;        $graphQLSyncPromiseAdapter = new SyncPromiseAdapter();&#xA;        $promiseAdapter = new WebonyxGraphQLSyncPromiseAdapter($graphQLSyncPromiseAdapter);&#xA;&#xA;        $petLoader = new DataLoader(function ($keys) use ($promiseAdapter ) {&#xA;&#xA;            $ids = join(',', $keys);&#xA;            $idMap = array_flip($keys);&#xA;            $rows = sql(""SELECT owner, isDog, sound FROM pets WHERE owner in ({$ids});"");&#xA;            // echo ""&lt;pre&gt;"";&#xA;            // print_r($rows);&#xA;            // exit;&#xA;            foreach ($rows as $r) {&#xA;                $idMap[$r['owner']] = $r;&#xA;            }&#xA;            //print_r($promiseAdapter-&gt;createAll(array_values($idMap)));exit;&#xA;            return $promiseAdapter-&gt;createAll(array_values($idMap));&#xA;        }, $promiseAdapter);&#xA;         //print_r($promiseAdapter);exit;&#xA;        WGraphQL::setPromiseAdapter($graphQLSyncPromiseAdapter);&#xA;&#xA;        $context = [&#xA;            'petLoader' =&gt; $petLoader,&#xA;            'sql' =&gt; function ($query) {&#xA;                return sql($query);&#xA;            }&#xA;        ];&#xA;&#xA;        if (Request\method_is('post')) {&#xA;&#xA;            $schema = include  FCPATH . '/php-graphql-example-master/schema.php';;&#xA;&#xA;            Graphql\init($schema, null, $context);&#xA;        }&#xA;</code></pre>&#xA;&#xA;<p>resolver.php</p>&#xA;&#xA;<p>use Overblog\DataLoader\DataLoader;</p>&#xA;&#xA;<pre><code>return [&#xA;    'Person' =&gt; [&#xA;        'pet' =&gt;  function($root, $args, $context) {&#xA;           // print_r($context);exit;&#xA;            // echo ""33"";&#xA;            // print_r($root['id']);exit;&#xA;            return $context['petLoader']-&gt;load($root['id']);&#xA;        },&#xA;    ],&#xA;    'Query' =&gt; [&#xA;        'getPeople' =&gt; function($root, $args, $context) {&#xA;            return $context['sql'](""SELECT name, id FROM people"");&#xA;        }&#xA;    ]&#xA;];&#xA;</code></pre>&#xA;&#xA;<p>schema.php</p>&#xA;&#xA;<pre><code>use Siler\Graphql;&#xA;&#xA;$typeDefs = file_get_contents(__DIR__.'/schema.graphql');&#xA;$resolvers = include __DIR__.'/resolvers.php';&#xA;&#xA;return Graphql\schema($typeDefs, $resolvers);&#xA;</code></pre>&#xA;",3464049,,5052733,2020-04-08 05:02:25,2020-04-08 05:02:25,Message: Could not resolve promise in GraphQL api with DataLoader,<php><graphql><dataloader>,0,0,0,2020-04-03 11:01:23
61019526,2,,53814647,0,,"<p>Our use case involved multiple GraphQL calls on one page. We had to use a modified version of the responses from above:</p>&#xA;&#xA;<pre><code>Cypress.Commands.add('createGql', operation =&gt; {&#xA;    cy.route({&#xA;        method: 'POST',&#xA;        url: '**/graphql',&#xA;    }).as(operation);&#xA;});&#xA;&#xA;Cypress.Commands.add('waitForGql', (operation, nextOperation) =&gt; {&#xA;    cy.wait(`@${operation}`).then(({ request }) =&gt; {&#xA;        if (request.body.operationName !== operation) {&#xA;            return cy.waitForGql(operation);&#xA;        }&#xA;&#xA;        cy.route({&#xA;            method: 'POST',&#xA;            url: '**/graphql',&#xA;        }).as(nextOperation || 'gqlRequest');&#xA;    });&#xA;});&#xA;</code></pre>&#xA;&#xA;<p>The issue is that ALL GraphQL requests share the same URL, so once you create a <code>cy.route()</code> for one GraphQL query, Cypress will match all the following GraphQL queries to that.  After it matches, we set <code>cy.route()</code> to just a default label of <code>gqlRequest</code> or the next query.</p>&#xA;&#xA;<p>Our test:</p>&#xA;&#xA;<pre><code>cy.get(someSelector)&#xA;  .should('be.visible')&#xA;  .type(someText)&#xA;  .createGql('gqlOperation1')&#xA;  .waitForGql('gqlOperation1', 'gqlOperation2') // Create next cy.route() for the next query, or it won't match&#xA;  .get(someSelector2)&#xA;  .should('be.visible')&#xA;  .click();&#xA;&#xA;cy.waitForGql('gqlOperation2')&#xA;  .get(someSelector3)&#xA;  .should('be.visible')&#xA;  .click();&#xA;</code></pre>&#xA;",4736349,,4736349,2020-04-03 20:12:45,2020-04-03 20:12:45,"",,0,0,0,2020-04-03 19:58:13
61024368,2,,60814393,0,,"<p>Adding another suggestion here to avimoondra's answer:</p>&#xA;&#xA;<p>Computed Fields</p>&#xA;&#xA;<p>with Hasura computed fields you can actually avoid having to make an entirely new view to create this. You can actually just make <code>role</code> a virtual property of the user schema by defining a function on the user object which returns the role. </p>&#xA;&#xA;<p>See more here: <a href=""https://hasura.io/docs/1.0/graphql/manual/schema/computed-fields.html"" rel=""nofollow noreferrer"">https://hasura.io/docs/1.0/graphql/manual/schema/computed-fields.html</a></p>&#xA;",4093656,,,,2020-04-04 06:03:26,"",,0,0,0,2020-04-04 06:03:26
61031025,1,,,0,1301,"<p>I am working on a food delivery webapp. So there will be two types of users, 1. customer. 2. vendor. I can set custom permission on tables for two users in hasura console.&#xA;Now how to implement the authentication setup where user can signup/login two the website with this two different roles.&#xA;In auth0 or firebase we can't have that feature. So custom auth server is the only option.&#xA;So my question here is - how to run the jwt script that we run in auth0 to pass those season variables.?</p>&#xA;&#xA;<pre><code>function (user, context, callback) {&#xA;const namespace = ""https://hasura.io/jwt/claims"";&#xA;context.idToken[namespace] = &#xA;{ &#xA;  'x-hasura-default-role': 'user',&#xA;  // do some custom logic to decide allowed roles&#xA;  'x-hasura-allowed-roles': ['user'],&#xA;  'x-hasura-user-id': user.user_id&#xA;};&#xA;callback(null, user, context);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And do I need to write this auth service as custom resolver and add it as remote schema?&#xA;How do I run the database operation in the resolver?</p>&#xA;",11243364,,,,2020-09-06 16:58:09,How to implement custom authentication with hasura?,<node.js><graphql><hasura>,1,0,0,2020-04-04 16:16:50
61031572,1,62802649,,0,360,"<p>In my project, we create tables in AWS dynamodb based on the user id using AWS lambda (NodeJS).</p>&#xA;&#xA;<p>Once the table is created the lambda function will create a graphql endpoint for that particular table so that the user can get real-time data for that specific table.</p>&#xA;&#xA;<p>Can we create graphql endpoints which will also be seen in AWS appsync from AWS lambda (NodeJs)?</p>&#xA;&#xA;<p>I searched the web but didn't find any tutorial from AWS nor any articles regarding it.</p>&#xA;",11358891,,4621513,2020-04-04 18:08:52,2020-07-08 19:53:04,Creating AWS AppSync using AWS Lambda (NodeJS),<amazon-web-services><aws-lambda><graphql><graphql-js><aws-appsync>,1,1,0,2020-04-04 16:57:11
61032118,1,,,1,1893,"<p>I am trying to build an ios application using Amazon's App Sync, DynomiteDB and GraphQL. I have set up one table that I am able to send API calls to. However, I created a new table in my database and wrote queries for it in the Graphql schema. However, when I make a call to create a new object in the table I get the error: Error saving the item on server: [Unable to assume role arn: ...  I am wondering if it is possible to query two different tables that do not have an explicit relationship (IE. one of the tables contains a list of the objects contained in the other table). </p>&#xA;",10214652,,,,2020-04-10 03:53:16,Query Multiple Tables in Dynamo DB using AWS Appsync and GraphQL,<ios><graphql><amazon-dynamodb><aws-amplify><aws-appsync>,1,0,0,2020-04-04 17:35:45
61037475,1,,,0,48,"<p>For the purpose of searching admin activity in a group I manage, can I authenticate as myself in Postman so that I can try to run some GraphQL as me? And if so, how?</p>&#xA;",2066625,,,,2020-04-05 02:59:00,Facebook GraphQL use in Postman as me?,<facebook><graphql><postman>,0,3,0,2020-04-05 02:59:00
61039416,1,,,0,789,"<pre><code>{&#xA;    ""query"": {&#xA;      ""bool"": {&#xA;        ""must"": {&#xA;          ""bool"": {&#xA;            ""must"": [&#xA;              {&#xA;                ""multi_match"": {&#xA;                  ""query"": ""FGTHSF-2124-6"",&#xA;                  ""type"": ""phrase_prefix"",&#xA;                 ""fields"": [&#xA;                    ""contact.name""&#xA;                  ]&#xA;                }&#xA;              },&#xA;              {&#xA;                ""terms"": {&#xA;                  ""contact.id"": [&#xA;                    ""sdfwerwe"",&#xA;                    ""6789"",&#xA;                    ""4567"",&#xA;                    ""12345""&#xA;                  ]&#xA;                }&#xA;              }&#xA;            ],&#xA;            ""should"": [],&#xA;            ""must_not"": []&#xA;          }&#xA;        },&#xA;        ""filter"": {&#xA;          ""bool"": {&#xA;            ""must"": {&#xA;              ""bool"": {&#xA;                ""must"": [],&#xA;                ""should"": [],&#xA;                ""must_not"": []&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>I have this query if I search it I get no results because the lasst character is single digit but if I give 3 digit it searches proper record...Is there any by default size for phrase prefix query and if it has then how to change it.</p>&#xA;&#xA;<pre><code>&#xA;&#xA;&#xA;&#xA;</code></pre>&#xA;&#xA;<p>I tried giving default operator, prefix_length, max expansions etc.</p>&#xA;",12473922,,12473922,2020-04-15 07:58:12,2020-04-15 07:58:12,Search a Elastic query by Length of string,<node.js><elasticsearch><graphql><elasticsearch-query>,1,6,0,2020-04-05 07:33:49
61043222,1,,,0,32,"<p>Is there a way to add on the premade GraphQL APIs that Amplify autogenerates? For example, I have a listTasks query call but I want to add more input fields. Does Amplify provide a way to do this easily? Right now I just copied the query and put it in my React component and modified the query.</p>&#xA;",2053239,,,,2020-04-05 13:16:29,"AWS Amplify GraphQL API, how do I add onto the premade API calls?",<amazon-web-services><graphql><aws-amplify><aws-appsync>,0,3,0,2020-04-05 13:16:29
61055958,2,,61050997,0,,"<p><strong>after adding:</strong></p>&#xA;&#xA;<pre><code>provider:&#xA;    apiGateway:&#xA;        binaryMediaTypes:&#xA;            - '*/*'&#xA;</code></pre>&#xA;&#xA;<ul>&#xA;<li>or instead of '<em>/</em>' in my case only 'multipart/form-data'</li>&#xA;</ul>&#xA;&#xA;<p>it worked in <strong>lambda AWS</strong> after making <strong>deploy</strong>, but still not working offline using <code>sls offline start</code> it might be a bug in their code or I should add additional thing to let it work offline </p>&#xA;",7276874,,7276874,2020-04-06 08:51:49,2020-04-06 08:51:49,"",,0,0,0,2020-04-06 08:42:53
61060046,1,61060423,,0,966,"<p>A very basic schema:</p>&#xA;&#xA;<pre><code>type Foo {&#xA;    id: String!&#xA;    name: String!&#xA;    createdAt: Date!&#xA;    bars: [Bar]&#xA;}&#xA;&#xA;type Bar {&#xA;    id: String!&#xA;    name: String!&#xA;    fooId: String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then my Resolver map:</p>&#xA;&#xA;<pre><code>Query: {&#xA;    foo: &#xA;      async (&#xA;        _: any,&#xA;        { id }: { id: string }&#xA;      ) =&gt; {&#xA;&#xA;        const { data: fooObj } = await httpRequest({&#xA;          url: `/api/foos/${id}`&#xA;        });&#xA;&#xA;        const barsResponse = await httpRequest({&#xA;          url: `/api/bars/?fooId=${id}`&#xA;        });&#xA;        const response = {&#xA;          ...fooObj.foo,&#xA;          bars: barsResponse.data.bars&#xA;        };&#xA;        return response;&#xA;      }&#xA; }&#xA;</code></pre>&#xA;&#xA;<p>If the user does the following query:</p>&#xA;&#xA;<pre><code>{&#xA;  foo(id: ""123456""){&#xA;    bars {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The the Query resolver correctly fetches and returns the right data in the right shape, however, running this query:</p>&#xA;&#xA;<pre><code>{&#xA;  foo(id: ""123456""){&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Ideally wouldn't do the 2nd fetch request to get the <code>bars</code>. How can I split the Query Resolver up so it only runs the Bars fetch if the query contains <code>bars</code>?</p>&#xA;",478144,,,,2020-04-06 12:58:12,GraphQL only fetch if certain field is requested in query,<node.js><graphql><apollo-server>,1,0,0,2020-04-06 12:37:21
61062915,1,,,0,294,"<p>I use AWS Amplify &amp; GraphQL inside my iOS project. I would like to update my API.swift file based on my changed GraphQL file. The following Amplify CLI command accomplishes this, but pushes changes to the cloud...</p>&#xA;&#xA;<pre><code>amplify push&#xA;</code></pre>&#xA;&#xA;<p>How can I generate an updated GraphQL file without pushing changes to the cloud?</p>&#xA;",6665204,,,,2020-05-04 18:42:05,Generate Swift Code From Changed GraphQL File Without Pushing Changes To The Cloud,<swift><graphql><aws-amplify><aws-amplify-cli>,1,2,0,2020-04-06 15:09:55
61088433,2,,60989703,0,,"<p>Apparently this is a duplicate of <a href=""https://stackoverflow.com/questions/54767325/how-to-check-permissions-of-an-entity-on-create-in-appsync"">How to check permissions of an entity on create in appsync</a>&#xA;The RFC for automatically doing this is still open and hasn't had an update in a year. <a href=""https://github.com/aws-amplify/amplify-cli/issues/1055"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/1055</a></p>&#xA;",13195008,,,,2020-04-07 19:59:15,"",,0,0,0,2020-04-07 19:59:15
61104952,1,,,2,530,"<p>I am using amplify-cli with angular. I have generated GraphQL API based on schema. I need to write custom queries and generate frontend code using <code>amplify codegen</code>.</p>&#xA;&#xA;<p>Now, I know that I can write custom queries in files <code>src/graphql/**/*.graphql</code> to get only selected fields but the underlying function being called must already be present in schema.json - for example in below snippet</p>&#xA;&#xA;<pre><code>query QueryCustom($id:ID!){&#xA; getRelationship(id: $id){     &lt;=== this must be present in schema.json&#xA;    id&#xA;    sourceId&#xA;    targetId&#xA; }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This restricts me to be able to write custom functions for queries (1)to apply filters based on different fields (forexample in above scenario, based on sourceId or targetId) (2) span my query to multiple dynamoDB tables etc.</p>&#xA;&#xA;<p>Thanks for some indications on how to achieve (1) and (2) above</p>&#xA;",1609313,,,,2020-04-08 15:59:35,Custom GraphQL Queries with Amplify Codegen,<angular><graphql><amazon-dynamodb><aws-amplify>,0,0,0,2020-04-08 15:59:35
61131023,1,,,0,1283,"<p>I'm trying to query items from a DynamoDB table using AWS Amplify API, running on React.js.&#xA;<br>&#xA;I have a table named Codes, from which I'm trying to query the items using the following code:</p>&#xA;&#xA;<pre><code>var codesData = await API.graphql(graphqlOperation(queries.listCodes, {&#xA;  filter: {&#xA;    id: {&#xA;      eq: id&#xA;    },&#xA;    num: {&#xA;      eq: 1&#xA;    }&#xA;  }&#xA;}));&#xA;console.log(codesData);&#xA;</code></pre>&#xA;&#xA;<p>As you can see, I want to receive all items that have <code>id</code> value as their ""id"" attribute, and <code>1</code> as their ""num"" attribute.&#xA;<br>&#xA;When I'm printing the <code>codesData</code> to the console, I get the following response:</p>&#xA;&#xA;<pre><code>Object&#xA;    data:&#xA;        listCodes: null&#xA;</code></pre>&#xA;&#xA;<p>So I don't even have the items attribute.</p>&#xA;&#xA;<p>I've tried to search the web for something about that, but couldn't find anything.</p>&#xA;",2378691,,,,2020-10-17 15:31:30,AWS Amplify GraphQL query returns null instead of items array,<javascript><reactjs><graphql><aws-amplify>,1,7,0,2020-04-09 22:08:29
61133329,2,,60237441,1,,"<p>Hasura has a special endpoint for executing pg_dump on the Postgres instance.</p>&#xA;&#xA;<p>Here is a sample CURL request:</p>&#xA;&#xA;<p><code>curl --location --request POST 'https://your-remote-hasura.com/v1alpha1/pg_dump' \&#xA;--header 'Content-Type: application/json' \&#xA;--header 'X-Hasura-Role: admin' \&#xA;--header 'Content-Type: text/plain' \&#xA;--data-raw '{&#xA;  ""opts"": [""-O"", ""-x"",""--inserts"",  ""--schema"", ""public""]&#xA;}'</code></p>&#xA;&#xA;<p>It outputs the schema and data in psql format.</p>&#xA;&#xA;<p>You can use a tool such as Postman for convenience to import, test and run the CURL query.</p>&#xA;&#xA;<p>Please follow the pg_dump documentation to adjust needed opts. </p>&#xA;&#xA;<p>i.e. the above query uses ""--inserts"" opt, which produces ""INSERT INTO"" statements in the output.</p>&#xA;&#xA;<p>The output can be copied, pasted and imported directly to Hasura Panel SQL Tab (""COPY FROM stdin"" statements result in errors when inserted in the panel). </p>&#xA;&#xA;<p><a href=""http://localhost:8080/console/data/sql"" rel=""nofollow noreferrer"">http://localhost:8080/console/data/sql</a></p>&#xA;&#xA;<p>Before import, comment out or delete the line <code>CREATE SCHEMA public;</code> from query, because it already exists.</p>&#xA;&#xA;<p>You also have to select tables and relations to be tracked, during or after executing the query.</p>&#xA;&#xA;<p>If the amout of data is bigger, it might be better to use CLI for import.</p>&#xA;",13161150,,13161150,2020-04-10 03:12:35,2020-04-10 03:12:35,"",,0,0,0,2020-04-10 02:53:10
61133777,2,,61032118,4,,"<p>With DynamoDB unit resolvers, you can query against a single table (outside of DynamoDB Batch Operations but those are reserved for bulk use cases)&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-dynamodb.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-dynamodb.html</a></p>&#xA;&#xA;<p>With Pipeline resolvers, you can query multiple tables but the calls are sequential (query table A, then query table B and so on) and can't be dynamic (you can't query table A and loop through the results and for each item issue a query against table B). Pipeline resolvers are very useful to perform checks, like doing an auth call from table A and then query from table B.</p>&#xA;&#xA;<p>If your use case is more complex, I would advise using a Lambda data source and do the DynamoDB calls inside the Lambda, with the added bonus of being able to use your favorite programming language. </p>&#xA;",1060799,,,,2020-04-10 03:53:16,"",,0,0,0,2020-04-10 03:53:16
61136974,1,,,2,663,"<p>I'm new to Gatsby and have set up the <a href=""https://github.com/aws-samples/aws-appsync-gatsby-sample"" rel=""nofollow noreferrer"">aws-appsync-gatsby-sample</a> project.  The GraphQL data correctly renders in the local site as seen here:</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/J8O4Pm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J8O4Pm.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>However, I want to use the GraphIQL explorer to learn how to further manipulate the GraphIQL queries but the ""explorer"" option that Gatsby typically displays is no longer showing.  Is it because Im using <code>gatsby-source-graphql</code>?</p>&#xA;&#xA;<p><strong>How to I access the GraphIQL explorer to play with this AppSync API data please?&#xA;Alternatively, is there another way to access the GraphIQL explorer on my Mac, or online, to access my data?</strong></p>&#xA;&#xA;<p>Thanks for any help.</p>&#xA;",4981251,,4981251,2020-04-10 11:06:03,2020-05-31 14:13:02,GraphIQL explorer not showing in Gatsby when using gatsby-source-graphql,<graphql><gatsby><aws-appsync><graphiql>,2,0,0,2020-04-10 08:54:38
61140948,1,,,0,53,"<p>Lets say i have a the following requirement, A Project can have only two employees at a time &#xA;and a employee can only be connected to One Project at a time. Whats the Best Possible Schema &#xA;model using AWS AppSync graphql that could possible achieve this ?   </p>&#xA;",6668206,,,,2020-04-10 13:44:00,AppSync Relationship,<amazon-web-services><graphql><aws-appsync>,1,0,0,2020-04-10 13:08:31
61145875,2,,61136974,0,,"<p>I'm not familiar with gatsby but I'm an engineer on the AppSync team. </p>&#xA;&#xA;<p>As long as you point your GraphiQL app correctly to your AppSync API endpoint, it will work. AppSync GraphQL endpoints are no different than other GraphQL endpoints.</p>&#xA;&#xA;<p>The fastest way to get GraphiQL talking to your AppSync API is:</p>&#xA;&#xA;<ol>&#xA;<li>copy the API URL from the Settings pane in the AWS AppSync Console into GraphiQL. It should look like <code>https://abcdef.appsync-api.us-west-2.amazonaws.com/graphql</code></li>&#xA;<li>In GraphiQL, add a <code>X-API-KEY</code> HTTP request header, and use for value an API key you created from the AppSync Console settings pane. It should start with <code>da2-xxxxxx</code>.</li>&#xA;<li>You should now see the documentation explorer populated, proving the introspection request succeeded.</li>&#xA;</ol>&#xA;",1060799,,,,2020-04-10 17:54:16,"",,0,1,0,2020-04-10 17:54:16
61173337,2,,51223984,0,,"<p>You can do it with pipeline resolvers&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-pipeline-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-pipeline-resolvers.html</a></p>&#xA;",4239688,,,,2020-04-12 14:52:21,"",,0,0,0,2020-04-12 14:52:21
61206827,2,,61205964,2,,"<p><code>user</code> and <code>roles</code> have a many-to-many relationship with <code>userRoles</code> as the junction table. If you have not already, should should define this relationship on <code>user</code>:</p>&#xA;&#xA;<pre><code>user.belongsToMany(roles, { through: userRoles })&#xA;</code></pre>&#xA;&#xA;<p>This will let you <code>include</code> roles directly:</p>&#xA;&#xA;<pre><code>const users = await db.user.findAll({&#xA;  include: [&#xA;    db.roles,&#xA;  ],&#xA;});&#xA;</code></pre>&#xA;",6024220,,,,2020-04-14 11:39:47,"",,0,3,0,2020-04-14 11:39:47
61214493,1,,,0,252,"<p>I am using AWS AppSync (via Apollo Vue) and I have the following graphql model.</p>&#xA;&#xA;<pre><code>type Service @model&#xA;{&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String!&#xA;}&#xA;&#xA;type Session @model&#xA;{&#xA;  id: ID!&#xA;  service: Service @connection(keyName: ""ServiceSessionConnection"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Service table resolver:</p>&#xA;&#xA;<pre><code>#set( $limit = $util.defaultIfNull($context.args.limit, 10) )&#xA;#set( $query = {&#xA;  ""expression"": ""#connectionAttribute = :connectionAttribute"",&#xA;  ""expressionNames"": {&#xA;      ""#connectionAttribute"": ""serviceSessionsId""&#xA;  },&#xA;  ""expressionValues"": {&#xA;      "":connectionAttribute"": {&#xA;          ""S"": ""$context.source.id""&#xA;    }&#xA;  }&#xA;} )&#xA;{&#xA;  ""version"": ""2017-02-28"",&#xA;  ""operation"": ""Query"",&#xA;  ""query"":   $util.toJson($query),&#xA;  ""scanIndexForward"":   #if( $context.args.sortDirection )&#xA;    #if( $context.args.sortDirection == ""ASC"" )&#xA;true&#xA;    #else&#xA;false&#xA;    #end&#xA;  #else&#xA;true&#xA;  #end,&#xA;  ""filter"":   #if( $context.args.filter )&#xA;$util.transform.toDynamoDBFilterExpression($ctx.args.filter)&#xA;  #else&#xA;null&#xA;  #end,&#xA;  ""limit"": $limit,&#xA;  ""nextToken"":   #if( $context.args.nextToken )&#xA;$util.toJson($context.args.nextToken)&#xA;  #else&#xA;null&#xA;  #end,&#xA;  ""index"": ""gsi-Service.sessions""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Session table resolver:</p>&#xA;&#xA;<pre><code>{&#xA;  ""version"": ""2017-02-28"",&#xA;  ""operation"": ""GetItem"",&#xA;  ""key"": {&#xA;      ""id"": $util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($ctx.source.sessionServiceId, ""___xamznone____""))&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am creating the following records:</p>&#xA;&#xA;<pre><code>mutation createService {&#xA;   createService {&#xA;     id: ""Id1"",&#xA;     name: ""name"",&#xA;     description: ""desc""&#xA;   }&#xA;}&#xA;mutation createSession {&#xA;   createSession {&#xA;     id: ""Id2"",&#xA;     serviceSessionsId: ""Id1"" //note: serviceSessionsId created part of relationship (it is part of the resolved code above!), and I am setting that to parent ID (in this case serviceId value ""Id1"")&#xA;   }&#xA;} &#xA;</code></pre>&#xA;&#xA;<p>I am trying to run following child table (Session) query with parent (Service) data:</p>&#xA;&#xA;<pre><code>query listSessions {&#xA;  listSessions {&#xA;    items {&#xA;      id,&#xA;      serviceId,&#xA;      service {        //retuns null data&#xA;        id,            //retuns null data&#xA;        name,          //retuns null data&#xA;        description.   //retuns null data&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I am not getting parent (Service object) data. Since I am modeled child-parent <code>@connection(keyName: ""ServiceSessionConnection"")</code> relationship, shouldn't I expect parent data in the query result? Am I missing anything? What else needs to be configured to have relationship data in the query result?  </p>&#xA;",6126081,,6126081,2020-04-15 00:56:51,2020-04-15 03:23:33,Apollo Vue (using AWS Amplify/AppSync) Graphql query does not pull parent data,<graphql><aws-amplify><aws-appsync><quasar><vue-apollo>,1,0,0,2020-04-14 18:17:55
61245783,1,,,5,187,"<p>Is there a method to create unit tests to test the queries and mutations of AWS AppSync before deploying it(using serverless framework).</p>&#xA;&#xA;<p>I have created appsync api and data source is relational database, but now i want to integrate test case for all queries and mutations which are in vtx file format  but not getting relevant information.</p>&#xA;",9763002,,13302,2020-06-15 04:07:48,2020-06-15 04:07:48,Integrate unit testing for appsync mapping templates in serverless framework,<unit-testing><graphql><serverless-framework><aws-appsync>,0,0,0,2020-04-16 08:25:18
61247083,1,,,0,218,"<p>I want to sync users from Auth0 to Hasura using <a href=""https://github.com/devdennysegura/flutter-auth0"" rel=""nofollow noreferrer"">Flutter Auth0</a> and Hasura Auth0 JWT Integration. </p>&#xA;&#xA;<p>I am not able to sync any information in Hasura table from Flutter frontend, I am passing the <code>x-hasura-admin-secret</code> header.</p>&#xA;&#xA;<p>Here is my code: </p>&#xA;&#xA;<pre><code>final HttpLink httpLink = HttpLink(&#xA;            uri: 'https://apppp.herokuapp.com/v1/graphql',&#xA;            headers: {""x-hasura-admin-secret"": ""xxxxx""});&#xA;</code></pre>&#xA;&#xA;<p>Can anyone please guide?</p>&#xA;",13258308,,507348,2020-04-18 12:38:05,2020-05-05 19:10:03,Not able to synchronize users from Auth0 to Hasura,<flutter><dart><graphql><auth0><hasura>,1,1,0,2020-04-16 09:35:45
61260270,1,,,6,1188,"<p>I'm currently using Aws Appsync, Aws Lambda, and Aws Neptune for an application. My Lambda function uses NodeJS 12. Right now my problem is getting back the appropriate JSON format from Neptune (more specifically gremlin) for my graphql api (appsync) when I do a mutation and eventually a query (I want to make sure the mutations are working first). For example:</p>&#xA;&#xA;<ol>&#xA;<li>Here is my type <strong>Post</strong> for my graphql schema with <strong>addPost</strong> mutation right above it:&#xA;<a href=""https://i.stack.imgur.com/TDzf7.png"" rel=""noreferrer"">Post schema</a></li>&#xA;<li>The <strong>addPost</strong> mutation maps to this resolver: <a href=""https://i.stack.imgur.com/iVQQH.png"" rel=""noreferrer"">Post Mutation Resolver</a></li>&#xA;<li>Which then runs this piece of code: <a href=""https://i.stack.imgur.com/Gx9f5.png"" rel=""noreferrer"">Lambda Code</a></li>&#xA;</ol>&#xA;&#xA;<p>When I run this test query to add a post, I get the following error with data being <strong>null</strong>: <a href=""https://i.stack.imgur.com/BzwE5.png"" rel=""noreferrer""><strong>addPost</strong> test query and result</a></p>&#xA;&#xA;<p>Does adding a vertex in gremlin return data/an object? If so, how do I get the appropriate JSON format for my appsync graphql api? I've been reading <a href=""http://kelvinlawrence.net/book/Gremlin-Graph-Guide.html#servertweaks"" rel=""noreferrer"">Practical Gremlin</a> and searching the web but no luck. Thank you in advance.</p>&#xA;",8163331,,,,2020-04-17 17:25:18,Using AWS Appsync with AWS Neptune,<amazon-web-services><aws-lambda><graphql><aws-appsync><amazon-neptune>,1,0,0,2020-04-16 21:24:03
61261006,2,,61260270,4,,"<p>More than likely what you're seeing is related to an incompatibility in Lambda with the default return format for the Node.js GLV.  The default format returned is GraphSONV3, which is JSON-like but not well-formatted JSON.  Lambda is expecting well-formatted JSON.  You can change the mimetype when establishing your connection to Neptune to use GraphSONV2 which Lambda shouldn't have any issues with.</p>&#xA;&#xA;<pre><code>const dc = new DriverRemoteConnection(&#xA;  `wss://&lt;neptune-endpoint&gt;:8182/gremlin`,&#xA;  { mimeType: ""application/vnd.gremlin-v2.0+json"" } &#xA;);&#xA;</code></pre>&#xA;&#xA;<p>The other thing to validate is how you are resolving the promise being returned by the await'd Gremlin query.  It looks like in your sample code that you are taking the result of the await'd query and feeding that into JSON.stringify().  I don't think that will work, as that will effectively return the JSON stringified version of the Promise (which is what you're seeing).  What you can do in this case (if you want to submit queries asynchronously) is to take your Gremlin queries (or maybe even this larger case statement) and put it into an async function outside of the Lambda handler.  Example:</p>&#xA;&#xA;<pre><code>const gremlin = require('gremlin');&#xA;const DriverRemoteConnection = gremlin.driver.DriverRemoteConnection;&#xA;const Graph = gremlin.structure.Graph;&#xA;&#xA;const dc = new DriverRemoteConnection('wss://&lt;neptune-endpoint&gt;:8182/gremlin',&#xA;    { mimeType: ""application/vnd.gremlin-v2.0+json"" }&#xA;    );&#xA;&#xA;const graph = new Graph();&#xA;const g = graph.traversal().withRemote(dc);&#xA;&#xA;async function callNeptune() {&#xA;    const result = await g.addV('Post').property('userId','someid').&#xA;        property('genre','somegenre').&#xA;        property('caption','somecaption').&#xA;        property('timestamp','sometimestamp').&#xA;        toList();&#xA;    console.log(result);&#xA;    dc.close();&#xA;    try {&#xA;        return result;&#xA;    } catch (error) {&#xA;        return error;&#xA;    }&#xA;}&#xA;&#xA;exports.handler = async (event) =&gt; {&#xA;&#xA;    const rawOutput = await callNeptune();&#xA;    const jsonOutput = JSON.stringify(rawOutput);&#xA;    const response = {&#xA;        statusCode: 200,&#xA;        body: jsonOutput,&#xA;    };&#xA;    return response;&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>In this scenario, you're await'ing the async function with your Gremlin query via an await call that is now in the handler.  So you can then take the results from that and feed it into JSON.Stringify() and return it.  The Lambda service will resolve the promise of the handler at that point.</p>&#xA;&#xA;<p>FWIW, there's little benefit to using async/await from a Lambda-backed API layer to Neptune.  Both the Lambda function and the Neptune server side threads will be waiting (and holding up resources) until all of the promises are resolved.  In many cases this can just add complexity over just using synchronous calls.  It would be different if you were doing this from a long-running containerized application or from a web-based front end, where letting other processes in the meantime makes sense.</p>&#xA;",10130372,,10130372,2020-04-17 17:25:18,2020-04-17 17:25:18,"",,0,6,0,2020-04-16 22:20:01
61276373,1,,,0,48,"<p>I'm not sure if this is possible in GraphQL as I can't find any examples like this in the GraphQL docs. I want to use a returned value as a parameter in a sub-query. For example:</p>&#xA;&#xA;<pre><code>{&#xA;  personById(id:""12361067""){&#xA;&#xA;    firstName&#xA;    lastName&#xA;    accountNumber&#xA;&#xA;    accountDetails(accountNumber:[use accountNumber from above]){&#xA;      accountType&#xA;    }&#xA;}&#xA;&#xA;</code></pre>&#xA;",9333553,,,,2020-04-17 16:32:47,GraphQL: Use returned value from field as parameter of sub-query,<graphql>,0,2,0,2020-04-17 16:32:47
61276511,2,,61168854,0,,"<p>Our tutorials for DDB sound like the primer you need to learn schema design for Appsync (<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html</a>).</p>&#xA;&#xA;<p>I would also recommend learning standard graphQL becuase that is what Appsync implements and the relational models stem from graphQL.</p>&#xA;",12821570,,,,2020-04-17 16:40:37,"",,0,0,0,2020-04-17 16:40:37
61278087,1,,,0,86,"<p>I'm trying to setup a NodeJS application with GraphiQL API and MySQL database connection. All of it seem to work until I'm trying to get the data that was fetched from the database be available for GraphQL to be able to do something with it.</p>&#xA;&#xA;<p>Here we have the app.js file, which is the starting point of the backend. Assume that all the imports and declarations are valid.</p>&#xA;&#xA;<pre><code>app.use('/api', graphql({&#xA;    schema: buildSchema(schema),&#xA;    rootValue: resolvers,&#xA;    graphiql: true&#xA;}));&#xA;</code></pre>&#xA;&#xA;<p>The rootValue is as follows.</p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;    regions: () =&gt; {&#xA;        var a = manager.getRegions();&#xA;        console.log(""a: "" + a);&#xA;        return a;&#xA;    }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>The manager object. I have the manager object incase I want to change database type in the future.</p>&#xA;&#xA;<pre><code>const manager = {&#xA;    getRegions : function() {&#xA;        console.log(""getRegions entered..."");&#xA;        return processQuery(""regions"");&#xA;    }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>Finally, under the MySQL script we have.</p>&#xA;&#xA;<pre><code>const processQuery = (query) =&gt; {&#xA;    var res = null;&#xA;    switch (query) {&#xA;        case 'regions':&#xA;        default:&#xA;            db.query(SELECT_REGIONS_QUERY, (err, rows) =&gt; {&#xA;                if (err) {&#xA;                    throw err;&#xA;                } else {&#xA;                    res = JSON.stringify(rows);&#xA;                    console.log(""Stringify: "" + res);&#xA;                }&#xA;            });&#xA;    }&#xA;    return res;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I've read numerous pages and even stackoverflow posts about Promise, callback functions and async/await but neither (atleast to code attempts made by me) seem to make the printout under the rootValue be printed last...</p>&#xA;&#xA;<p>I saw an implementation done by Academind that uses MongoDB instead and he doesn't seem to have to care about this issue. Any ideas on how to solve this? Thank you!</p>&#xA;",2991424,,,,2020-04-17 18:28:09,NodeJS application not waiting for response from MySQL database,<javascript><mysql><node.js><graphql>,1,2,0,2020-04-17 18:16:14
61288957,2,,49047259,3,,"<p>You could use <code>graphql-js</code> like so:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const { parse, visit } = require('graphql');&#xA;&#xA;const query = `&#xA;  {&#xA;    books {&#xA;      ...rest of the query&#xA;    }&#xA;  }&#xA;`&#xA;&#xA;const ast = parse(query);&#xA;&#xA;const newAst = visit(ast, {&#xA;  enter(node, key, parent, path, ancestors) {&#xA;    // do some work&#xA;  },&#xA;  leave(node, key, parent, path, ancestors) {&#xA;    // do some more work&#xA;  }&#xA;});&#xA;&#xA;</code></pre>&#xA;<p>I belive this is what graphql server implementations uses under the hood, I could be mistaken though.</p>&#xA;",2491452,,2491452,2021-01-19 21:02:26,2021-01-19 21:02:26,"",,0,0,0,2020-04-18 12:18:22
61290727,1,,,1,532,<p>I tried to add a new column from datatype BLOB to hold images but I can't find this datatype. &#xA;Why is that?</p>&#xA;,4752738,,,,2020-05-05 19:14:31,Can't find BLOB datatype on Hasura,<postgresql><image><graphql><hasura>,1,0,0,2020-04-18 14:25:19
61292677,2,,61292017,0,,<p>I'm assuming you're configuring everything through the Amplify CLI? Are you using the new or old iOS SDK for Amazon? My workflow has generally been when adjusting my schema.graphql file to run an amplify push command to actually propagate those changes to the backend and making sure to have it generate the API.swift file. Are your graphql operations being run through the autogenerated api.swift file? You can also run amplify codegen to recreate the api.swift file as well.</p>&#xA;,9726926,,,,2020-04-18 16:39:11,"",,0,3,0,2020-04-18 16:39:11
61303642,1,63707494,,1,485,"<p>I'd like to use apollo graphql in a lambda and I found AppSync is for graphql and API Gateway is for REST. Do I have to use <code>AppSync</code> for that? &#xA;I also find out a library <code>apollo-server-lambda</code> which can be used with <code>serverless</code> but I don't want to use <code>serverless</code> because all my infrastructure code is written in Terraform. I don't want to bring another IaC library in my application.&#xA;So is there a way to use API Gateway with apollo graphql in lambda? If yes, how should I declare API Gateway route for that?</p>&#xA;",5421539,,,,2020-09-02 14:15:37,Do I have to use AppSync for apollo graphql in lambda?,<amazon-web-services><graphql><apollo-server>,1,2,0,2020-04-19 11:33:17
61304130,2,,61270661,1,,"<p>I'm going with a different gatsby plugin. <a href=""https://www.npmjs.com/package/gatsby-plugin-local-search"" rel=""nofollow noreferrer"">gatsby-plugin-local-search</a>&#xA;This plugin is able to alter the data before saving it with <code>normalizer</code> Now I can call a method to conditional alter the data per language.</p>&#xA;",7295693,,,,2020-04-19 12:12:47,"",,0,0,0,2020-04-19 12:12:47
61310638,1,61315202,,4,2416,"<p>I am on xcode 11.4, Swift 4. The goal is to:</p>&#xA;&#xA;<ol>&#xA;<li><p>sign up a new user in Cognito User Pool, and then save an associated user record using Amplify GraphQL. </p></li>&#xA;<li><p>CRUD the user's record after signing in with Cognito User Pool. </p></li>&#xA;</ol>&#xA;&#xA;<p>The problem is I do not know how to associate Cognito with Amplify GraphQL. For example, in Google Firebase auth and Firestore, I would get a unique user id <code>UID</code> after signing up, then I would create an associated user record in <code>Firestore</code> with the key as this <code>UID</code>. Then on user signin/authentication, I can get this <code>UID</code> from firebase auth and find the associated record in firestore. </p>&#xA;&#xA;<p>Currently with the AWS stack, I created a user model in <code>schema.graphql</code> as:</p>&#xA;&#xA;<pre><code>type User @model @auth(rules: [{ allow: owner, ownerField: ""id"", operations: [create, update, delete]}]){&#xA;    id: ID!&#xA;    firstName  : String&#xA;    lastName   : String&#xA;    handle     : String&#xA;    email      : String!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So that only authenticated user can create, update and delete. Next somewhere in <code>SignUpController</code> I create a new user:</p>&#xA;&#xA;<pre><code>AWSMobileClient.default().signUp( username: email&#xA;                                , password: password&#xA;                                , userAttributes: [""email"": email]) { (signUpResult, error) in&#xA;    if let signUpResult = signUpResult {&#xA;&#xA;        switch(signUpResult.signUpConfirmationState) {&#xA;            case .confirmed:&#xA;                self.showAlert(msg: ""You already have an account. Please go back and press log in"")&#xA;            case .unconfirmed:&#xA;                break &#xA;            case .unknown:&#xA;                self.showAlert(msg: ""Network error"")&#xA;        }&#xA;    } else if let error = error { ... }&#xA;</code></pre>&#xA;&#xA;<p>And then confirm the user w/ code:</p>&#xA;&#xA;<pre><code>AWSMobileClient.default().confirmSignUp(username: email, confirmationCode: code) { (signUpResult, error) in&#xA;    if let signUpResult = signUpResult {&#xA;        switch(signUpResult.signUpConfirmationState) {&#xA;            case .confirmed:&#xA;               // This is where I need to create an associated user account&#xA;               break&#xA;            case .unconfirmed:&#xA;                self.showAlert(title: ""Error"", msg: ""User is not confirmed and needs verification via \(signUpResult.codeDeliveryDetails!.deliveryMedium) sent at \(signUpResult.codeDeliveryDetails!.destination!)"")&#xA;            case .unknown:&#xA;                self.showAlert(title: ""Error"", msg: ""Network error"")&#xA;        }&#xA;    } else { //if let error = error {&#xA;        self.showAlert(title: ""Error"", msg: ""Network error"")&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>Right now my solution in <code>case .confirmed</code> is to sign in immediately, and then fetch the user's <code>client token</code> via:</p>&#xA;&#xA;<pre><code>class CognitoPoolProvider : AWSCognitoUserPoolsAuthProviderAsync {&#xA;&#xA;    /// this token may not be what you want ...&#xA;    func getLatestAuthToken(_ callback: @escaping (String?, Error?) -&gt; Void) {&#xA;&#xA;        AWSMobileClient.default().getTokens { (token, error) in&#xA;            if let error = error {&#xA;                callback(nil,error)&#xA;            }&#xA;            callback(token?.accessToken?.tokenString, error)&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This turns out to be the wrong solution, since the user's client token changes all the time. </p>&#xA;&#xA;<p>Overall, this is a standard hello-world problem, and there should be a standard out of box solution provided by AWS. I search the docs and github, but cannot find a satisfactory answer. </p>&#xA;",1128571,,1128571,2020-04-19 19:51:50,2020-04-20 04:37:07,Associate user information from Cognito with AWS Amplify GraphQL,<swift><amazon-web-services><graphql><amazon-cognito><aws-amplify>,1,3,0,2020-04-19 19:45:48
61315202,2,,61310638,3,,"<p>The right way is DON'T TRUST CLIENT for creating associate user information from Cognito, you have to do it at server side.</p>&#xA;&#xA;<p>You should create a new Lambda Post Confirmation Trigger for Cognito and code it to create an associate account. You can use <code>event.userName</code> or create custom attribute uuid type likes <code>custom:id</code> to link your associate account.</p>&#xA;&#xA;<p>Ref: <a href=""https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-post-confirmation.html</a></p>&#xA;",3390844,,,,2020-04-20 04:37:07,"",,0,2,0,2020-04-20 04:37:07
61332149,1,61332478,,0,31,"<p>I have a python script that connects to a graphql API and sends a POST, so returning me a JSON this API belongs to a kanban, where it has cards arranged by its workflow, my problem and I have 152 cards, and this query is me returning 143, because some cards are not assigned to people, only exist in the workflow.&#xA;This generates an index error for the so-called <code>'assignees': row ['assignees'][0]['fullname']</code>, I put <code>try/except</code> with index filter, and made him add this line again to the dictionary giving the full name <code>Null</code>, however this seems to have failed because the total number of cards is 153 and not 143. Is there a more elegant way to do this data engineering?</p>&#xA;&#xA;<p><strong>py:</strong></p>&#xA;&#xA;<pre><code>    dataDict = {}&#xA;    for row in ModelData:&#xA;&#xA;        try:&#xA;&#xA;            dataDict.update(&#xA;            { row[""identifier""]: &#xA;            {'title' : row[""title""], &#xA;            'description' : row[""description""], &#xA;            'assignees' : row['assignees'][0]['fullname'], &#xA;            'createdAt' : row[""createdAt""]}})&#xA;&#xA;        except IndexError as e:&#xA;&#xA;            dataDict.update(&#xA;            { row[""identifier""]:&#xA;            {'title' : row[""title""], &#xA;            'description' : row[""description""], &#xA;            'assignees' : """", &#xA;            'createdAt' : row[""createdAt""]}})&#xA;            pass&#xA;</code></pre>&#xA;&#xA;<p><strong>data example:</strong></p>&#xA;&#xA;<pre><code>{&#xA;""identifier"": ""x5g"",&#xA;""title"": ""card name"",&#xA;""description"": ""hello world"",&#xA;""assignees"": {""fullname"": ""John""},&#xA;""createdAt"": ""2020-04-04""&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>What generates error::</strong></p>&#xA;&#xA;<pre><code>{&#xA;""identifier"": ""x6g"",&#xA;""title"": ""card name 2"",&#xA;""description"": ""hello world"",&#xA;""assignees"": {""fullname"": """"},&#xA;""createdAt"": ""2020-04-04""&#xA;}&#xA;</code></pre>&#xA;",11999825,,11999825,2020-04-20 22:05:33,2020-04-20 22:05:33,Filter JSON with null POST query return in API,<python><api><graphql>,1,0,0,2020-04-20 21:13:51
61332478,2,,61332149,1,,"<p>You could do it with an if statement:</p>&#xA;&#xA;<pre><code>&#xA;dataDict.update(&#xA;  { &#xA;    row[""identifier""]: {&#xA;      'title' : row[""title""], &#xA;      'description' : row[""description""], &#xA;      'assignees' : row['assignees'][0]['fullname'] if 'assignees' in row else """", &#xA;      'createdAt' : row[""createdAt""]&#xA;    }&#xA;  })&#xA;&#xA;I dont know what the data you get looks like without the assignees but I think you get the Idea.&#xA;</code></pre>&#xA;",10657739,,,,2020-04-20 21:40:14,"",,0,6,0,2020-04-20 21:40:14
61369220,1,,,1,61,<p>I'm creating new item in the database </p>&#xA;&#xA;<pre><code>val client: AWSAppSyncClient = AWSAppSyncClient.builder()&#xA;    .context(applicationContext)&#xA;    .cognitoUserPoolsAuthProvider(BasicCognitoUserPoolsAuthProvider(userPool))&#xA;    .awsConfiguration(config)&#xA;    .s3ObjectManager(S3ObjectManagerImplementation(s3Client))&#xA;    .build()&#xA;&#xA;fun insertItem(){&#xA;   val userInput: CreateUserInput = CreateUserInput&#xA;            .builder()&#xA;            ....populate values....&#xA;            .build()&#xA;        client.mutate(CreateUserMutation.builder().input(userInput).build())&#xA;            .enqueue(callback)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>after that I see success messagess from <code>callback</code> and new item appears in <code>AWS DB console</code>.</p>&#xA;&#xA;<p>But when I make query request:</p>&#xA;&#xA;<pre><code>client.query(ListUsersQuery.builder().filter(getFilter()).build())&#xA;      .responseFetcher(AppSyncResponseFetchers.NETWORK_ONLY)&#xA;      .enqueue( GraphQLCall.Callback....)&#xA;</code></pre>&#xA;&#xA;<p>I'm not able to see item I added for some time. Request works fine only after few minutes item were inserted. </p>&#xA;&#xA;<p>Is there any way to fetch actual data from <code>DynamoDB</code>?</p>&#xA;,5599807,,3416135,2020-04-22 22:16:16,2020-04-22 22:18:24,DynamoDB requires some time until the data appears in query,<android><kotlin><graphql><amazon-dynamodb><aws-appsync>,0,4,0,2020-04-22 15:41:51
61399696,2,,61380470,0,,"<p>I don't think the issue has anything to do with how you are accessing the <code>muxPlaybackId</code>. The runtime appears to be complaining about <em>assigning</em> something, not <em>accessing</em>.</p>&#xA;&#xA;<p>To be sure, though, instead of using an expression to access the <code>muxPlaybackId</code>, try hardcoding it and see if you have the same problem:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>source={{ uri: ""e6ZNh139bm2Poz5xoPl4V4016fnRCPWcZbkrTxg3Ocys"" }}&#xA;</code></pre>&#xA;&#xA;<p>If this still produces the error, then I would look at the <code>Video</code> component and see what attributes you are allowed to set.</p>&#xA;",7928074,,,,2020-04-24 01:41:12,"",,0,0,0,2020-04-24 01:41:12
61430640,1,61437480,,2,1614,"<p><strong>Details</strong></p>&#xA;&#xA;<p>I am using type-graphql and are trying to restrict data access or actions for a specific group of users with the <code>@Authorized()</code> decorator and a custom auth checker as a guard. Everything is working and access is blocked/allowed appropriately according to the decorator.</p>&#xA;&#xA;<p><strong>Problem</strong></p>&#xA;&#xA;<p>I want the owner/author of the document to be able to edit/delete it even if its marked with <code>@Authorized([""MODERATOR"", ""ADMIN""])</code> optionally I could mark it with something like <code>@Authorized([""OWNER"", ""MODERATOR"", ""ADMIN""])</code> if that makes it easier to implement.</p>&#xA;&#xA;<p>As far as I know I dont have any information as to what Model/document the user is trying to access in the auth checker only the arguments of the mutation. In other words I have the ID of what they want to access but, not the Model it belongs to.</p>&#xA;&#xA;<p><strong>Question</strong></p>&#xA;&#xA;<p>Is there any way I can check if the user owns the document in the auth checker or will I have to mark it as <code>@Authorized()</code> and check if the user owns the document or is an admin/moderator in every mutation/query?</p>&#xA;&#xA;<p><strong>Code</strong></p>&#xA;&#xA;<p>index.d.ts</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>declare module ""type-graphql"" {&#xA;    function Authorized(): MethodAndPropDecorator;&#xA;    function Authorized(roles: AccessLevels[]): MethodAndPropDecorator;&#xA;    function Authorized(...roles: AccessLevels[]): MethodAndPropDecorator;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>types.ts</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>type AccessLevels = ""MODERATOR"" | ""ADMIN"";&#xA;</code></pre>&#xA;&#xA;<p>authChecker.ts</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const authChecker: AuthChecker&lt;{ user: User | null }, AccessLevels&gt; = ({ context }, roles): boolean =&gt; {&#xA;    if (!context.user) {&#xA;        return false;&#xA;    }&#xA;&#xA;    if (roles.length === 0) {&#xA;        return true;&#xA;    }&#xA;&#xA;    if (context.user.accessLevel &gt; 0 &amp;&amp; roles.includes(""MODERATOR"")) {&#xA;        return true;&#xA;    }&#xA;&#xA;    return context.user.accessLevel &gt; 1 &amp;&amp; roles.includes(""ADMIN"");&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>EstablishmentResolver.ts</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>@Authorized([""MODERATOR"", ""ADMIN""])&#xA;@Mutation(() =&gt; EstablishmentType, { description: ""Deletes a establishment by ID"" })&#xA;async deleteEstablishment(@Args() { id }: EstablishmentIdArg): Promise&lt;Establishment&gt; {&#xA;    const establishment = await Establishment.findOne({ where: { id } });&#xA;&#xA;    if (!establishment) {&#xA;        throw new Error(""Establishment does not exist"");&#xA;    }&#xA;&#xA;    await establishment.destroy();&#xA;&#xA;    return establishment;&#xA;}&#xA;</code></pre>&#xA;",9225753,,,,2020-04-26 07:56:07,Type-GraphQL: Allow document owner and admin/moderator access with the @Authorized() decorator,<javascript><typescript><graphql><typegraphql>,1,0,0,2020-04-25 18:34:41
61435018,2,,60890760,0,,"<p>That playground doesn't support users federated through a social provider to the user pool, only usernames and password that are created in the user pool.</p>&#xA;",6241856,,,,2020-04-26 02:13:58,"",,0,0,0,2020-04-26 02:13:58
61435045,2,,60870648,1,,"<p>That error is thrown if in any way based on the configuration you provided related to your user pool, we cannot construct the well known endpoint corresponding to the user pool so I would verify the user pool format.</p>&#xA;",6241856,,,,2020-04-26 02:17:38,"",,0,1,0,2020-04-26 02:17:38
61437480,2,,61430640,4,,"<p>Try to modify the signature and logic to allow passing a callback into the decorator, that will resolve the ""owner"" condition:</p>&#xA;&#xA;<pre><code>@ObjectType&#xA;class User {&#xA;  @Authorized({ &#xA;    roles: [""MODERATOR"", ""ADMIN""],&#xA;    owner: ({ root, context }) =&gt; {&#xA;      return root.id === context.user.id;&#xA;    },&#xA;  })&#xA;  @Field()&#xA;  email: string;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Be aware that you can't always do that inside the authChecker or middleware as they run before your resolver code, so in case of <code>deleteEstablishment</code> there's no universal way to match <code>establishmentId</code> with <code>user.id</code> to detect if it's an owner or not.</p>&#xA;",5472617,,,,2020-04-26 07:56:07,"",,0,1,0,2020-04-26 07:56:07
61460700,2,,60877460,6,,"<p>You’ll see an auto generated field “_version” in your dynamoDB Table. See the value of _version for the ID you want to update area field.when you fetch address,you'll get a field ""_version"". &#xA;Try Something like this</p>&#xA;&#xA;<pre><code>mutation UpdateAddressInput {  &#xA;    updateAddress(input:{&#xA;     id:""af5cd7e6-8213-48b6-aa8e-9d2d6999742c"",&#xA;     area:""New Delhi"",&#xA;&#xA;     _version:variable name // _version value in dynamoDB table for                                &#xA;                            //  the desired row.&#xA;&#xA;    }){&#xA;    id, &#xA;    area   &#xA;  }&#xA;}&#xA;</code></pre>&#xA;",13418145,,13418145,2020-04-28 04:28:09,2020-04-28 04:28:09,"",,0,7,0,2020-04-27 14:04:24
61462240,2,,61462148,0,,"<p>I'm not sure but are using a right Keys ? &#xA;In php my admin go to designer section and select the relation &#xA;if you got will get more clear error &#xA;to know more about designer follow this link &#xA;<a href=""https://kb.bodhost.com/turn-the-designer-mode-on-in-phpmyadmin/"" rel=""nofollow noreferrer"">https://kb.bodhost.com/turn-the-designer-mode-on-in-phpmyadmin/</a></p>&#xA;",7875716,,,,2020-04-27 15:20:34,"",,0,0,0,2020-04-27 15:20:34
61468834,1,61468962,,5,3806,"<p>I have a curl script (as a standin for real code) that can POST to my company's GraphQL endoint and get data. It's working fine.</p>&#xA;<p>It appears that it should also be possible to get the &quot;schema&quot; by crafting the appropriate request, but I have not found any way to do that at a HTTP level.</p>&#xA;<p>If it is possible, what would the curl look like (the data)?</p>&#xA;<p>Are there other requests other than &quot;query&quot; that I can use to gleen other information?</p>&#xA;",1633251,,1633251,2021-02-23 11:45:02,2021-02-23 11:45:02,How to request the schema from a GraphQL service using curl?,<graphql>,1,0,0,2020-04-27 21:34:03
61475869,2,,61475199,4,,"<p>I run in exactly the same problem yesterday. The AWS Android team moved my issue request to the AppSync team. </p>&#xA;&#xA;<p>You can track progress here: <a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-android/issues/273#"" rel=""nofollow noreferrer"">https://github.com/awslabs/aws-mobile-appsync-sdk-android/issues/273#</a> </p>&#xA;",13423623,,,,2020-04-28 08:31:02,"",,0,1,0,2020-04-28 08:31:02
61498135,1,61589638,,0,590,"<p>I need to provide 30 days of trial period for my  Flutter App, I am Using Hasura with Flutter.&#xA;Example if User sign up on 1 april, after 30 days need to direct him to purchase page. How to achieve this in Flutter and Hasura? Can anyone guide?</p>&#xA;",13258308,,,,2020-05-04 10:03:20,Need to add trial period of 30 days in Flutter App with Hasura,<flutter><dart><graphql><hasura>,1,0,0,2020-04-29 09:10:43
61504149,1,,,0,915,"<p>I am a little confused on the best approach in how to update two tables with on GraphQL mutation, I am using AWS AppSync.</p>&#xA;&#xA;<p>I have an application where I need a <code>User</code> to be able to register for an <code>Event</code>.  Given I am using DynamoDB as the database, I had thought about a denormalized data structure for the <code>User</code> and <code>Event</code> tables.  I am thinking of storing an array of brief <code>Event</code> details, such as <code>eventID</code> and <code>title</code> in the <code>User</code> table and an array of <code>entrants</code> in the <code>Events</code> table, holding only brief user info, such as <code>userID</code> and <code>name</code>.  Firstly, is this a good approach or should I have a third <code>join</code> table to hold these 'relationships'.</p>&#xA;&#xA;<p>If it's OK, I am needing to update both tables during the <code>signUp</code> mutation, but I am struggling to get my head around how to update 2 tables with the one mutation and in turn, one request mapping template.</p>&#xA;&#xA;<p>Am I right in thinking I need to use a Pipeline resolver? Or is there another way to do this?</p>&#xA;",1849358,,,,2020-04-30 15:46:13,AppSync update two tables with one mutation,<graphql><amazon-dynamodb><aws-appsync>,1,0,0,2020-04-29 14:23:40
61527385,2,,61504149,2,,<p>There are multiple options for this: </p>&#xA;&#xA;<ol>&#xA;<li>AppSync supports BatchWrite operations to update multiple DynamoDb tables at the same time</li>&#xA;<li>AppSync supports DynamoDb transactions to update multiple DynamoDb tables transactionally at the same time</li>&#xA;<li>Pipeline resolvers</li>&#xA;</ol>&#xA;,6241856,,,,2020-04-30 15:46:13,"",,0,3,0,2020-04-30 15:46:13
61527933,2,,61526487,1,,"<h2>Generally - usually</h2>&#xA;&#xA;<p>... normalization ... of course ... f.e. using <code>apollo</code> and it's normalized cache.</p>&#xA;&#xA;<p><strong>All records returned from API has to be the same shape.</strong></p>&#xA;&#xA;<p>You can get data and render some <code>&lt;MembersList/&gt;</code> component using query for ids and names only (full/paginated).</p>&#xA;&#xA;<p>Later you can render details in some <code>&lt;UserProfile/&gt;</code> component with own query (hook <code>useQuery</code> inside) to fetch additional data from cache/api (controllable).</p>&#xA;&#xA;<h2>Your specific requirements - possible</h2>&#xA;&#xA;<h2>1st option:</h2>&#xA;&#xA;<p>Usually response is of one common shape (as requested), but you can decide on resolver level what to return. This requires query structure changes that allows (API, backend) to null-ify some properties. F.e.</p>&#xA;&#xA;<pre><code>group {&#xA;    id&#xA;    name&#xA;    users {&#xA;        id&#xA;        name&#xA;        profile {&#xA;          photo&#xA;          email&#xA;          address&#xA;</code></pre>&#xA;&#xA;<p>With <code>profile</code> custom json type ... you can construct users resolver to return full data only for 1st record and <code>null</code> for all following users.</p>&#xA;&#xA;<h2>2nd option:</h2>&#xA;&#xA;<p>You can use 2 slightly different queries in <strong>one request</strong>. Use aliases (see docs), in short:</p>&#xA;&#xA;<pre><code>groupWithFullMember: group ( groupId:xxx, limitUsers:1 ) {&#xA;    id&#xA;    name&#xA;    users {&#xA;        id&#xA;        name&#xA;        address&#xA;        email&#xA;        ...&#xA;    }&#xA;}&#xA;&#xA;groupMembers: group ( groupId:xxx ) {&#xA;    id&#xA;    name // not required&#xA;    users {&#xA;        id&#xA;        name&#xA;    }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Group resolver can return it's child <code>users</code> ... or <code>users</code> resolver can access <code>limitUsers</code> param to limit response/modify db query.</p>&#xA;",6124657,,6124657,2020-04-30 16:54:21,2020-04-30 16:54:21,"",,0,2,0,2020-04-30 16:13:23
61529749,2,,44697946,1,,"<p>There is an automatically generated GraphQL API for Cassandra that you can run as a service to expose your CQL tables via GraphQL.</p>&#xA;&#xA;<p>GitHub repo: <a href=""https://github.com/datastax/cassandra-data-apis"" rel=""nofollow noreferrer"">https://github.com/datastax/cassandra-data-apis</a></p>&#xA;&#xA;<p>Small Example:&#xA;Say you have the a table called <code>books</code></p>&#xA;&#xA;<pre><code>CREATE TABLE library.books (&#xA;    title text PRIMARY KEY,&#xA;    author text&#xA;);&#xA;</code></pre>&#xA;&#xA;<p>It will automatically generate these APIs</p>&#xA;&#xA;<pre><code>schema {&#xA;  query: Query&#xA;  mutation: Mutation&#xA;}&#xA;&#xA;type Query {&#xA;  books(value: BooksInput, orderBy: [BooksOrder], options: QueryOptions): BooksResult&#xA;  booksFilter(filter: BooksFilterInput!, orderBy: [BooksOrder], options: QueryOptions): BooksResult&#xA;}&#xA;&#xA;type Mutation {&#xA;  insertBooks(value: BooksInput!, ifNotExists: Boolean, options: UpdateOptions): BooksMutationResult&#xA;  updateBooks(value: BooksInput!, ifExists: Boolean, ifCondition: BooksFilterInput, options: UpdateOptions): BooksMutationResult&#xA;  deleteBooks(value: BooksInput!, ifExists: Boolean, ifCondition: BooksFilterInput, options: UpdateOptions): BooksMutationResult&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And you can query them with</p>&#xA;&#xA;<pre><code>mutation {&#xA;  catch22: insertBooks(value: {title:""Catch-22"", author:""Joseph Heller""}) {&#xA;    value {&#xA;      title&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;query {&#xA;    books (value: {title:""Catch-22""}) {&#xA;      values {&#xA;        title&#xA;        author&#xA;      }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",6921940,,,,2020-04-30 17:54:47,"",,0,0,0,2020-04-30 17:54:47
61536765,1,,,3,2014,"<p>I am fairly new to both GraphQL and AWS amplify so this might be a newbie question. </p>&#xA;&#xA;<p>I have defined the type listed below in schema.graphql. If I create a mutation using a type with <code>id: ID!</code>, I get a <code>Cannot return null for non-nullable field Vocabulary.id</code>. </p>&#xA;&#xA;<p>How do I specify a field should be an <code>identity</code> field in AWS amplify graphql? specifying <code>id: ID!</code> for an <code>identity</code> field, in this <a href=""https://amplify-workshop.go-aws.com/40_graphql/10_setting_up_appsync.html"" rel=""nofollow noreferrer"">AWS amplify workshop</a> seems to work fine. </p>&#xA;&#xA;<p><strong>~\amplify\backend\api\vidaudtranscription\schema.graphql</strong>:</p>&#xA;&#xA;<pre><code>type Vocabulary @model &#xA;@key(fields:[""userId""])&#xA;@auth(rules: [{allow: owner}])&#xA;{&#xA;    id: ID!&#xA;  userId: String!&#xA;  vocabularies: [String!]!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Mutation Request:</strong></p>&#xA;&#xA;<pre><code>mutation MyMutation {&#xA;  createVocabulary(input: {userId: ""abc"", vocabularies: [""123"", ""456""]}) {&#xA;    id&#xA;    owner&#xA;    userId&#xA;    vocabularies&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><strong>Mutation Response:</strong></p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""createVocabulary"": null&#xA;  },&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""Cannot return null for non-nullable field Vocabulary.id."",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 5,&#xA;          ""column"": 5&#xA;        }&#xA;      ],&#xA;      ""path"": [&#xA;        ""createVocabulary"",&#xA;        ""id""&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;",391918,,391918,2020-05-01 04:26:21,2020-10-07 15:02:25,AWS amplify graphql mutation: Cannot return null for non-nullable field,<amazon-web-services><graphql><aws-amplify><aws-appsync>,1,0,0,2020-05-01 04:20:59
61557027,2,,61538437,0,,<p>Make sure the ID attribute is fillable/unguarded.</p>&#xA;,5775556,,,,2020-05-02 09:17:51,"",,0,5,0,2020-05-02 09:17:51
61557542,1,62973209,,13,6269,"<p>Given the following graphql schema</p>&#xA;&#xA;<pre><code># graphql/schema.graphql&#xA;type AppUser {&#xA;  userId: String&#xA;  fullName: String&#xA;}&#xA;&#xA;type Query {&#xA;  getUser(userId: String): AppUser&#xA;  getUsers(): [AppUser]&#xA;}&#xA;&#xA;type Mutation {&#xA;  addUser(user: AppUser!): AppUser&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the following cdk code defined at lib/mystack.ts:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>&#xA;    const graphql = new appsync.GraphQLApi(this, 'GraphQLApi', {&#xA;      name: 'metrolens-graphql-api',&#xA;      logConfig: {&#xA;        fieldLogLevel: appsync.FieldLogLevel.ALL,&#xA;      },&#xA;      authorizationConfig: {&#xA;        defaultAuthorization: {&#xA;          // userPool,&#xA;          defaultAction: appsync.UserPoolDefaultAction.ALLOW,&#xA;        },&#xA;        // additionalAuthorizationModes: [{ apiKeyDesc: 'My API Key' }],&#xA;      },&#xA;      schemaDefinitionFile: props?.schemaDirectory,&#xA;    })&#xA;&#xA;    const lambdaRegister = new nodejs.NodejsFunction(this, 'register', {&#xA;      functionName: 'register',&#xA;      runtime: lambda.Runtime.NODEJS_12_X,&#xA;      timeout: cdk.Duration.seconds(10),&#xA;      entry: './lambda/register/register-0.ts',&#xA;      handler: 'handler',&#xA;      layers: [layer],&#xA;      description: 'Register a user.',&#xA;    })&#xA;&#xA;    const lambdaLogin = new nodejs.NodejsFunction(this, 'login', {&#xA;      functionName: 'login',&#xA;      runtime: lambda.Runtime.NODEJS_12_X,&#xA;      timeout: cdk.Duration.seconds(10),&#xA;      entry: './lambda/login/login-0.ts',&#xA;      handler: 'handler',&#xA;      layers: [layer],&#xA;      description: 'Login a user.',&#xA;    })&#xA;&#xA;    const lambdaRegisterDataSource = graphql.addLambdaDataSource(&#xA;      'lambdaRegister',&#xA;      'Register lambda triggered by appsync',&#xA;      lambdaRegister&#xA;    )&#xA;    lambdaRegisterDataSource.createResolver({&#xA;      typeName: 'Mutation',&#xA;      fieldName: 'addUser',&#xA;      requestMappingTemplate: appsync.MappingTemplate.lambdaRequest(),&#xA;      responseMappingTemplate: appsync.MappingTemplate.lambdaResult(),&#xA;    })&#xA;&#xA;    const lambdaLoginDataSource = graphql.addLambdaDataSource(&#xA;      'lambdaLogin',&#xA;      'Login lambda triggered by appsync',&#xA;      lambdaLogin&#xA;    )&#xA;&#xA;    lambdaLoginDataSource.createResolver({&#xA;      typeName: 'Query',&#xA;      fieldName: 'getUsers',&#xA;      requestMappingTemplate: appsync.MappingTemplate.lambdaRequest(),&#xA;      responseMappingTemplate: appsync.MappingTemplate.lambdaResult(),&#xA;    })&#xA;</code></pre>&#xA;&#xA;<p>I get the following error message during the <code>AWS::AppSync::GraphQLSchema</code> deployment phase:</p>&#xA;&#xA;<p>GraphQLApi/Schema (GraphQLApiSchema5937B126) Schema Creation Status is FAILED with details: Internal Failure while saving the schema.</p>&#xA;&#xA;<p>Has anyone encountered this error before? I suspect there is something wrong with my graphql schema but I couldn't tell what it was. Another answer mentioned that the DynamoDB reserved words at <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html"" rel=""noreferrer"">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html</a> could cause conflicts, even if you don't use DynamoDB, so I renamed the <code>User</code> type to <code>AppSync</code>. However, it looks like <code>Query</code> is also a reserved word, but as far as I understand, that is also necessary for a graphql definition. Please help. AWS CDK suck hard.</p>&#xA;",6106899,,,,2020-07-18 19:59:58,aws cdk appsync Schema Creation Status is FAILED with details: Internal Failure while saving the schema,<typescript><aws-lambda><graphql><aws-appsync><aws-cdk>,2,0,0,2020-05-02 10:02:43
61560580,1,,,1,847,<p>I'm using AWS Appsync with Elasticsearch. I'm aware that the max query size when using DynamoDB as the data source is capped at 1mb. Does the same limit imply when using Elasticsearch as a data source?</p>&#xA;,9239337,,107625,2021-08-11 19:16:12,2021-08-11 19:16:12,Is there a limit on the query response size when using Elasticsearch?,<elasticsearch><graphql>,1,0,0,2020-05-02 14:00:51
61561676,1,,,1,669,"<p>When my schema looks like this, aws cdk deploys fine (notice the mutations are commented out):</p>&#xA;&#xA;<pre><code>schema {&#xA;  query: Query&#xA;  # mutation: Mutation&#xA;}&#xA;&#xA;type AppUser {&#xA;  userId: String&#xA;  fullName: String&#xA;}&#xA;&#xA;type Query {&#xA;  getUser(id: ID!): AppUser&#xA;  getUsers: [AppUser]&#xA;}&#xA;&#xA;# type Mutation {&#xA;#   addUser(id: ID!, newUser: AppUser!): AppUser!&#xA;# }&#xA;</code></pre>&#xA;&#xA;<p>But when I uncomment the Mutation portions:</p>&#xA;&#xA;<pre><code>schema {&#xA;  query: Query&#xA;  mutation: Mutation&#xA;}&#xA;&#xA;type AppUser {&#xA;  userId: String&#xA;  fullName: String&#xA;}&#xA;&#xA;type Query {&#xA;  getUser(id: ID!): AppUser&#xA;  getUsers: [AppUser]&#xA;}&#xA;&#xA;type Mutation {&#xA;  addUser(newUser: AppUser!): AppUser!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The cdk fails at at the <code>AWS::AppSync::GraphQLSchema</code> with the following message:&#xA;<em>Schema Creation Status is FAILED with details: Internal Failure while saving the schema.</em> Help?</p>&#xA;",6106899,,,,2020-05-02 17:47:12,"While using aws cdk with appsync, how to add mutation to graphql schema and prevent deployment from failing?",<typescript><graphql><aws-appsync><aws-cdk>,1,0,0,2020-05-02 15:17:32
61563057,1,,,0,171,"<p>Please let me know your suggestions for connecting GraphQL API to Teradata tables.</p>&#xA;&#xA;<p>Looks like Prisma doesn't cover Teradata. Also, i don't see recommendations for GraphQL to Teradata in Google.</p>&#xA;&#xA;<p>Regards,&#xA;Phani Kiran </p>&#xA;",4841977,,,,2020-05-04 10:45:01,DB connector from GraphQL to Teradata,<graphql><sequelize.js><teradata><apollo-server><prisma-graphql>,1,0,0,2020-05-02 16:52:00
61567841,1,,,1,280,"<p>Imagine the condition that I have a query called ""users"" that returns all the users and these users can be associated with one or more companies, so I have a type UserCompanies (I need it because it saves some more information beyond the relation). I'm using Prisma and I need to force a filter that returns only users that are of the same company as the requester. &#xA;I get the information of the company from JWT and need to inject this to the query before sending it to Prisma.</p>&#xA;&#xA;<p>So, query should be like that:</p>&#xA;&#xA;<pre><code>query allUsers {&#xA;  users {&#xA;    name&#xA;    id&#xA;    status&#xA;    email&#xA;    userCompanies{&#xA;      id&#xA;      role&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and on server side, I should transform it to: (user where is ok, just changing args)</p>&#xA;&#xA;<pre><code>query allUsers {&#xA;  users(where: {&#xA;    userCompanies_some: {&#xA;      companyId: ""companyId-from-jwt""&#xA;    }&#xA;  }) {&#xA;    name&#xA;    id&#xA;    status&#xA;    email&#xA;    userCompanies(where: {&#xA;      companyId: ""companyId-from-jwt""&#xA;    }){&#xA;      id&#xA;      role&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm seeing a few resolutions to this, but I don't know if it is the best way:&#xA;1 - Using addFragmentToInfo, does the job to put conditions on the query, but if the query has a usercompanies already set, it gives me a conflict. Otherwise, it works fine.&#xA;2 - I can use an alias for the query, but after DB result I will need to edit all the results in array to overwrite the result.&#xA;3 - don't use info on Prisma and filter in js.&#xA;4 - Edit info(4th parameter) of type GraphqlResolveInfo</p>&#xA;",3512694,,10074438,2020-05-02 23:55:58,2020-05-02 23:55:58,How to force a filter on server side to a graphql query?,<graphql><nestjs><prisma-graphql><graphql-tools>,0,5,0,2020-05-02 23:49:42
61582172,2,,61566962,0,,"<p>Hi finally I find how to use custom endpoints to do plain querys, including stored procedures.</p>&#xA;&#xA;<p>Maybe is possible implement a module for add admin gui option for that, I try work in that, for the moment this is the example for a select:</p>&#xA;&#xA;<pre><code>use Directus\Application\Http\Request;&#xA;use Directus\Application\Http\Response;&#xA;&#xA;return [&#xA;'' =&gt; [&#xA;    'method' =&gt; 'GET',&#xA;    'handler' =&gt; function (Request $request, Response $response) {&#xA;&#xA;        $container = \Directus\Application\Application::getInstance()-&gt;getContainer();&#xA;        $dbConnection = $container-&gt;get('database');&#xA;        $tableGateway = new \Zend\Db\TableGateway\TableGateway('directus_users', $dbConnection);&#xA;&#xA;        $query = $tableGateway-&gt;getAdapter()-&gt;query(""select * from productos where 1=1"");&#xA;&#xA;        $result = $query-&gt;execute();&#xA;&#xA;        if ($result-&gt;count() &gt; 0) {&#xA;            $returnArr = array();&#xA;            while ($result-&gt;valid()) {&#xA;                $returnArr[] = $result-&gt;current();&#xA;                $result-&gt;next();&#xA;            }&#xA;            if (count($returnArr) &gt; 0) {&#xA;                return $response-&gt;withJson([&#xA;                    'data' =&gt; [&#xA;                        $returnArr,&#xA;                    ],&#xA;                ]);&#xA;            }&#xA;        }&#xA;        return ""{}"";&#xA;    },&#xA;],&#xA;];&#xA;</code></pre>&#xA;&#xA;<p>Sorry for my bad English.</p>&#xA;",1122983,,,,2020-05-03 21:57:33,"",,0,0,0,2020-05-03 21:57:33
61584938,1,,,0,18,"<p>I have a graphQL ApolloServer returning a paginated set of Transaction(s) for an Account. Here is a snippet of my schema:</p>&#xA;&#xA;<pre><code>type Account implements Node {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;type Transaction implements Node {&#xA;  id: ID!&#xA;  name: String!&#xA;  accountId: ID!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The relay spec <a href=""https://relay.dev/graphql/connections.htm"" rel=""nofollow noreferrer"">https://relay.dev/graphql/connections.htm</a> says the field that returns a connection type can take parameters of either:&#xA;1)  <code>before</code> and <code>last</code>&#xA;or &#xA;2)  <code>after</code> and <code>first</code></p>&#xA;&#xA;<p>This implies they cannot all be optional without defining a default <code>after</code> or <code>before</code> opertation</p>&#xA;&#xA;<p>For a query that handles only the <code>after</code> case, I would make a required after thus:</p>&#xA;&#xA;<pre><code>type Query {&#xA;  accounts: [Account]!&#xA;  transactions(accountId: ID!,after: String!, first: Int = 10 ): TransactionsBelongToAccountConnection&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>But for one that handles both the <code>before</code> and <code>after</code> case, I would need to make all four of these parameters optional and declare one of <code>after</code> or <code>before</code> modes to be the default:</p>&#xA;&#xA;<pre><code>type Query {&#xA;  accounts: [Account]!&#xA;  transactions(accountId: ID!, before: Sting, last: Int = 10, after: String, first: Int = 10 ): TransactionsBelongToAccountConnection&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>or (my question is) in graphql is there a way of making exactly one of two parameters required?</p>&#xA;",1978448,,,,2020-05-04 03:56:13,How to define graphql query in schema with exactly one of two parameters required,<graphql><apollo><react-relay>,0,2,0,2020-05-04 03:56:13
61589638,2,,61498135,0,,"<p>This can be achieved in a couple of ways, depending on what level of permissions are required for the app.</p>&#xA;&#xA;<ol>&#xA;<li>Recommended (via _exists permission check)</li>&#xA;</ol>&#xA;&#xA;<p>In the <code>users</code> table of your app, have a boolean column called <code>free_trial</code>. This flag will be true initially. In your permission check, you can make use of <code>_exists</code> check to see if user is still in free trial or not. The condition will roughly look like</p>&#xA;&#xA;<pre><code>{""_exists"":{""_table"":{""name"":""users"",""schema"":""public""},""_where"":{""free_trial"":{""_eq"":true}}}}&#xA;</code></pre>&#xA;&#xA;<p>Now you need to update the free_trial column to <code>false</code> once they cross 30 days. This can be done through a mutation that runs every day (as role admin) to check for signup date and updates the flag in the backend.</p>&#xA;&#xA;<p>In the Flutter app, you can redirect users to payment page based on this flag. Once you have paid users, you can assign them different roles and different permission checks for the same.</p>&#xA;&#xA;<ol start=""2"">&#xA;<li>JWT claim based: </li>&#xA;</ol>&#xA;&#xA;<p>Create a role called “free_trial” and issue a JWT for it with access to specific APIs only. You can define permissions to allow and disallow certain operations in your app based on this role.</p>&#xA;",4951611,,,,2020-05-04 10:03:20,"",,0,0,0,2020-05-04 10:03:20
61593575,2,,61583460,2,,"<p>You could try something like this</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>export const principles = ({ searchQuery, tagIds }) =&gt; {&#xA;  const payload = {&#xA;    where: {&#xA;      OR: [&#xA;        { title: { contains: searchQuery } },&#xA;        { description: { contains: searchQuery } },&#xA;      ],&#xA;      // using the `in` operator like this&#xA;      tagId: { in: tagIds },&#xA;      userId: userIdFromSession,&#xA;    },&#xA;  }&#xA;  console.log('db.principle.findMany(payload)', payload)&#xA;  return db.principle.findMany(payload)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>That should do the trick!</p>&#xA;",8874351,,,,2020-05-04 13:37:32,"",,0,6,0,2020-05-04 13:37:32
61600627,2,,61600171,1,,"<p>It is not possible to have type guard between 2 variables. You can make a link between variable a and b to tell that: if a condition of a is met ==> b is something else. For Apollo React client, I think that strictNullChecks is disabled</p>&#xA;",11025582,,,,2020-05-04 20:01:54,"",,0,0,0,2020-05-04 20:01:54
61600957,2,,60581197,0,,"<p>You can now do this as follows (also in the <a href=""https://www.semi.technology/documentation/weaviate/current/query-data/filters.html#filter-by-count"" rel=""nofollow noreferrer"">documentation</a>):</p>&#xA;&#xA;<pre><code>{&#xA; Get {&#xA;   Things {&#xA;     Author(&#xA;       where:{&#xA;         valueInt: 2&#xA;         operator:GreaterThanEqual&#xA;         path: [""WroteArticles""]&#xA;       }&#xA;     ) {&#xA;       name&#xA;       WroteArticles {&#xA;         ... on Article {&#xA;           title&#xA;         }&#xA;       }&#xA;     }&#xA;   }&#xA; }&#xA;}&#xA;</code></pre>&#xA;",1501285,,,,2020-05-04 20:23:20,"",,0,0,0,2020-05-04 20:23:20
61613744,1,,,4,179,"<p>Let say I have the following schema.graphql:</p>&#xA;&#xA;<pre><code>type Account @model {&#xA;  id: ID!&#xA;  title: String!&#xA;  users: [User] @connection(name: ""AccountUsers"")&#xA;}&#xA;&#xA;type User @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  account: Account @connection(name: ""AccountUsers"")&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>The goal is to allow each User from the Account to have access to this Account entity and to the other users from that Account using <strong>Amazon Cognito User Pools</strong>.</p>&#xA;&#xA;<p>For example, I have a Settings screen where I'd like to show the account title and the list of users from your account.</p>&#xA;&#xA;<p>Pretty common case, I assume, but didn't find much information... Thanks in advance for any help!</p>&#xA;",4346419,,,,2020-05-05 12:57:59,AWS Amplify Datastore - How to Create Account > Users Authorization Rules in Schema?,<graphql><amazon-cognito><aws-amplify><aws-appsync><datastore>,0,0,0,2020-05-05 12:57:59
61618716,1,,,5,623,"<p>I need your help.</p>&#xA;&#xA;<p>My first query result are displayed using ListView widget. And I call fetchMore function(from graphql_flutter) for more result. But instead of just adding new result at the bottom of ListView, It seems refresh whole widget.( it shows Loading widget)</p>&#xA;&#xA;<p>I am very new to Flutter.</p>&#xA;&#xA;<p>Here is builder in Query widget.</p>&#xA;&#xA;<pre><code>builder: (QueryResult result,                                                                                                                                                                                                                                                  &#xA;              {VoidCallback refetch, FetchMore fetchMore}) {                                                                                                                                                                                                                             &#xA;            if (result.hasException) {                                                                                                                                                                                                                                                   &#xA;              return Text(result.exception.toString());                                                                                                                                                                                                                                  &#xA;            }                                                                                                                                                                                                                                                                            &#xA;            if (result.loading) {                                                                                                                                                                                                                                                        &#xA;              return Center(                                                                                                                                                                                                                                                             &#xA;                child: CircularProgressIndicator(),                                                                                                                                                                                                                                      &#xA;              );                                                                                                                                                                                                                                                                         &#xA;            }                                                                                                                                                                                                                                                                            &#xA;&#xA;            List items = result.data['playlistItems']['items'];                                                                                                                                                                                                                          &#xA;&#xA;            String token = result.data['playlistItems']['nextPageToken'];&#xA;            token = token ?? """";&#xA;&#xA;            FetchMoreOptions opts = FetchMoreOptions(&#xA;                variables: {'nextPageToken': token},&#xA;                updateQuery: (previousResultData, fetchMoreResultData) {&#xA;                  final List&lt;dynamic&gt; newItems = [&#xA;                    ...previousResultData['playlistItems']['items']&#xA;                        as List&lt;dynamic&gt;,&#xA;                    ...fetchMoreResultData['playlistItems']['items']&#xA;                        as List&lt;dynamic&gt;&#xA;                  ];&#xA;&#xA;                  fetchMoreResultData['playlistItems']['items'] = newItems;&#xA;                  return fetchMoreResultData;&#xA;                });&#xA;&#xA;              return Stack(&#xA;                children: &lt;Widget&gt;[&#xA;                  VideoList(itemCount: items.length, items: items),&#xA;                  Align(&#xA;                    alignment: Alignment.bottomRight,&#xA;                    child: Padding(&#xA;                      padding: EdgeInsets.symmetric(&#xA;                          vertical: 10.0, horizontal: 10.0),&#xA;                      child: FloatingActionButton.extended(&#xA;                        onPressed: () {&#xA;                          fetchMore(opts);&#xA;                        },&#xA;                        label: Text(""Load More""),&#xA;                        icon: Icon(Icons.more),&#xA;                      ),&#xA;                    ),&#xA;                  ),&#xA;                ],&#xA;              );&#xA;</code></pre>&#xA;&#xA;<p>How can I just add fetch more result at the bottom of the list instead of refreshing whole listview?</p>&#xA;&#xA;<p>What am I missing?</p>&#xA;",12546761,,12546761,2020-06-04 21:40:45,2020-06-04 21:40:45,How to load more in flutter ListView using Flutter graphql,<flutter><dart><graphql>,0,0,0,2020-05-05 17:02:34
61622136,1,61624475,,1,1804,"<p>I have the following relation: </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/l8Fjq.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/l8Fjq.jpg"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Association is: </p>&#xA;&#xA;<pre><code>  users.belongsToMany(""roles"", {&#xA;    through: ""userRoles"",&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>When creating a user I do this: </p>&#xA;&#xA;<pre><code>register: async (obj, args, context, info) =&gt; {&#xA;  const PasswordHash = await bcrypt.hash(args.input.Password, 12);&#xA;&#xA;  const user = db.users.create({&#xA;    ...args.input,&#xA;    Password: PasswordHash,&#xA;  });&#xA;&#xA;  db.userroles.create({&#xA;    UserId: user.Id,&#xA;    RoleId: args.input.roleId,&#xA;  });&#xA;},&#xA;</code></pre>&#xA;&#xA;<p>How to do this in one request? Right now Im doing one when creating the user and then &#xA;getting the Id of the newly created user and adding a role to that user (request 2). </p>&#xA;&#xA;<p>A followup, lets say I would have more then one junction tabel tied to users table, again how would I &#xA;insert to all tables in one db request?</p>&#xA;",11597904,,11597904,2020-05-05 21:26:45,2020-05-05 23:04:40,How to insert data to multiple tables in one db request with sequelize?,<javascript><mysql><node.js><graphql><sequelize.js>,2,3,0,2020-05-05 20:08:44
61623690,2,,56795531,1,,"<p>I find this simpler.</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>// In your bootstrap.js file&#xA;'use strict';&#xA;module.exports = async () =&gt; {&#xA;&#xA;    const authenticated = await strapi.query('role', 'users-permissions').findOne({ type: 'authenticated' });&#xA;    authenticated.permissions.forEach(permission =&gt; {&#xA;&#xA;        if (permission.type === 'application'){ // Whatever permissions you want to change&#xA;            let newPermission = permission;&#xA;            newPermission.enabled = true; // Editing permission as needed&#xA;&#xA;            strapi.query('permission', 'users-permissions').update( { id: newPermission.id }, newPermission ); // Updating Strapi with the permission&#xA;        }&#xA;    });&#xA;    return;&#xA;};&#xA;</code></pre>&#xA;",2159402,,,,2020-05-05 21:50:59,"",,0,0,0,2020-05-05 21:50:59
61627956,1,61647086,,3,3011,"<p>I have a GraphQL API on AWS AppSync pushed by another person and want to connect to it and fetch data in my Android application. According to AWS documentation, to integrate the API with my app I should execute 3 following commands:</p>&#xA;&#xA;<pre><code>  npm install -g @aws-amplify/cli&#xA;  amplify init&#xA;  amplify add codegen --apiId xxxxxx&#xA;</code></pre>&#xA;&#xA;<p>After that, I need to generate Java classes based on the graphql schema. I execute <code>amplify codegen models</code> but get an error ""<strong>No AppSync API configured. Please add an API</strong>"". If execute <code>amplify add api</code>, I get ""<strong>You already have an AppSync API in your project. Use the ""amplify update api"" command to update your existing AppSync API.</strong>""</p>&#xA;&#xA;<p>Why can't I generate classes? </p>&#xA;&#xA;<p>aws-amplify/cli v4.18.1</p>&#xA;",9951845,,,,2020-05-08 09:26:22,How to generate classes for GraphQL API (AWS AppSync) using Amplify,<graphql><aws-amplify><aws-appsync><aws-amplify-cli>,2,0,0,2020-05-06 05:24:29
61628393,2,,61627956,2,,<p>Try running <code>amplify pull</code> to pull down the latest backend environment before running <code>amplify codegen models</code>.</p>&#xA;,11460922,,,,2020-05-06 06:00:00,"",,0,3,0,2020-05-06 06:00:00
61647086,2,,61627956,4,,"<p>You should use Amplify Mobile SDK instead of Amplify Libraries to generate classes for an API created in the AWS Console. It really confuses that you have to use different approaches for generation. In addition, on AWS in the API overview there is a wrong link which refers you not to the mobile sdk, but to the libraries.</p>&#xA;&#xA;<p>Generation process for API created in the console is described in <strong>Code Generation / AppSync APIs Created in the Console</strong> <a href=""https://docs.amplify.aws/sdk/api/graphql/q/platform/android#code-generation"" rel=""nofollow noreferrer"">https://docs.amplify.aws/sdk/api/graphql/q/platform/android#code-generation</a></p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/Yo0SF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Yo0SF.png"" alt=""enter image description here""></a></p>&#xA;",9951845,,9951845,2020-05-06 23:23:39,2020-05-06 23:23:39,"",,0,0,0,2020-05-06 23:16:04
61651475,1,,,1,323,"<p>I have created the following schema which up until yesterday would generate <code>Input</code> using the <code>@connection</code> reference <code>ID</code>. I created a new API which is now creating an <code>Input</code> with the actual nested <code>type</code> as part of the <code>Input</code> for some of the types. E.g:</p>&#xA;&#xA;<pre><code>type Metadata&#xA;    @model(subscriptions: null)&#xA;    @versioned&#xA;    @auth(&#xA;        rules: [&#xA;        ]&#xA;    ) {&#xA;    id: ID!&#xA;    merchant: Merchant! @connection&#xA;&#xA;}&#xA;&#xA;type Merchant&#xA;    @model(subscriptions: null)&#xA;    @versioned&#xA;    @auth(&#xA;        rules: []&#xA;    ) {&#xA;    id: ID!&#xA;    metadata: Metadata! @connection&#xA;&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>would create the Input types:</p>&#xA;&#xA;<pre><code>export type CreateMerchantInput = {&#xA;    id?: string | null,&#xA;    merchantMetadataId: string,&#xA;};&#xA;&#xA;export type CreateMetadataInput = {&#xA;  id?: string | null,&#xA;  merchant: MerchantInput,  &lt;-- Contains this!!&#xA;  metadataMerchantId: string,&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>The Appsync schema shows this too, so it's something on my machine that has compiled the main GraphQL schema and pushed it. Really scary that different machines can compile it differently!!</p>&#xA;&#xA;<p>Does anyone have any ideas what I have changed or am missing or have specified in my schema or Amplify CLI config please?</p>&#xA;",5746996,,,,2020-05-07 06:43:39,Amplify GraphQL adding nested Inputs to Connections,<graphql><aws-amplify><aws-appsync><aws-amplify-cli>,0,0,0,2020-05-07 06:43:39
61661719,1,61680266,,0,180,"<p>I have created appsync api with postgresql as datasource. Now it's very straight to create , update and delete any record with graphql. But i want something like, whenever any update takes places , i can update value of that particular column only. Eg &#xA;lets we have user table with 3 fields:</p>&#xA;&#xA;<pre><code>user_id&#xA;name&#xA;city&#xA;</code></pre>&#xA;&#xA;<p>now when we update city for user than only city should update:</p>&#xA;&#xA;<p><code>mutation update{&#xA;   updateUser(input:{user_id:""xxxxx"",city:""xyz""}){&#xA;   user_id&#xA;   name&#xA;   city&#xA;}}</code></p>&#xA;&#xA;<p>user update input:</p>&#xA;&#xA;<pre><code>input updateUserInput{&#xA;user_id!&#xA;name&#xA;city&#xA;</code></pre>&#xA;&#xA;<p>}</p>&#xA;&#xA;<p>Is there any way to do this in vtx template or we have to use lambda as datasource and then do this. </p>&#xA;",9763002,,,,2020-05-08 13:26:54,Update only the given column value with appsync api and datasource as posgresql,<postgresql><graphql><aws-appsync><aws-aurora-serverless>,1,0,0,2020-05-07 15:31:04
61661821,2,,59381854,3,,"<p>If you're using the amazon Cognito user pool you should set the editor type inside Post to be an array of String and set the values to the Cognito ids of the users that you want to have access. This is explained <a href=""https://docs.amplify.aws/cli/graphql-transformer/directives#owner-authorization"" rel=""nofollow noreferrer"">in the amplify cli documentation</a>.</p>&#xA;&#xA;<p>To have the editors to be of type User I suggest you to create another paramether named differently (for example editorUsers) and connect it to the User model as described <a href=""https://docs.amplify.aws/cli/graphql-transformer/directives#has-many"" rel=""nofollow noreferrer"">here</a> </p>&#xA;&#xA;<p>Your schema should look like this:</p>&#xA;&#xA;<pre><code>type User&#xA;@model&#xA;@key(name: ""byUser"", fields: [""username""]) &#xA;@auth(rules: [&#xA; { allow: owner }&#xA;])&#xA;{&#xA;  id: ID!&#xA;  owner: String!&#xA;  username: String!&#xA;}&#xA;&#xA;type Post&#xA;@model&#xA;@auth(rules: [&#xA;  { allow: owner },&#xA;  { allow: owner, ownerField: ""editors"", operations: [update] }&#xA;])&#xA;{&#xA;  id: ID!&#xA;  owner: String!&#xA;  title: String!&#xA;  content: String&#xA;  editors: [String]&#xA;  editorsUsers: [User] @connection(keyName: ""byUser"", fields: [""id""])&#xA;}&#xA;</code></pre>&#xA;",10156132,,10156132,2020-05-07 18:10:21,2020-05-07 18:10:21,"",,0,0,0,2020-05-07 15:35:50
61667043,1,,,1,788,"<p>I am trying to create a GraphQL Type which the key should accept either 'UP', 'DOWN', 'LEFT' or 'RIGHT', and instead of utilising <code>key: String</code>, I wish I could define similarly to TypeScript, such as <code>key: 'UP' | 'DOWN' | 'LEFT' | 'RIGHT'</code>. </p>&#xA;&#xA;<p>Is that possible and how do I achieve that?&#xA;Many thanks!</p>&#xA;",6593250,,,,2020-05-07 20:25:01,Is there a GraphQL type for multiple specific strings?,<javascript><graphql><apollo>,1,0,0,2020-05-07 20:21:35
61674263,1,,,2,1263,<p>I want to filter graphQL on two fields in Hasura. For example:</p>&#xA;&#xA;<pre><code>table (&#xA;    where: { field1: {_gt: field2}}&#xA;  ) {&#xA;    id&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>Is it possible?</p>&#xA;,2720376,,4420967,2020-05-08 08:33:09,2020-05-08 13:38:16,Compare two fields in GraphQL Hasura,<graphql><hasura>,1,0,0,2020-05-08 07:36:36
61676931,2,,61484668,1,,"<p>why this error occurred? Because you are giving the type which is not defined at the compile time. So, when the compiler tries to compile the file, it searches the type you have specified here it is <code>AccountType</code>. which is not compiled. That's why the <code>OwnerType</code> didn't get the <code>AccountType</code> and you are getting an error.</p>&#xA;&#xA;<p>Simple Solution:</p>&#xA;&#xA;<p>You need to import the <code>AccountType</code> inside the <code>OwnerType</code> file.</p>&#xA;&#xA;<p><code>const AccountType = require('./AccountType.js');</code></p>&#xA;&#xA;<p>before the <code>OwenerType</code> code. This might be helpful.</p>&#xA;",6541218,,,,2020-05-08 10:22:11,"",,0,0,0,2020-05-08 10:22:11
61679495,1,,,1,797,"<p>I keep getting this error message when I try to trigger a mutation through lambda when I <em>add/modify/delete</em> items from DynamoDB:</p>&#xA;&#xA;<blockquote>&#xA;  <p>""message"" : ""Invalid request, <code>query</code> can't be null."",</p>&#xA;</blockquote>&#xA;&#xA;<p>So what I am trying to do is whenever a modification is done directly on <em>dynamodb</em>, the subscribed users will be notified with the changes.</p>&#xA;&#xA;<p>I have created the new mutation with None type data source. I tested it out directly on the query console and it works fine.</p>&#xA;&#xA;<p>I have also created the lambda function based on Python that is able to retrieve the <em>dynamodb</em> streams and has tested it out with <em>cloudwatch</em>.</p>&#xA;&#xA;<p>Now the issue is when I try to do a HTTP post request from the lambda, i get:</p>&#xA;&#xA;<blockquote>&#xA;  <p>error: MalformedHttpRequestException</p>&#xA;  &#xA;  <p>message: invalid request, <code>query</code> can't be null.</p>&#xA;</blockquote>&#xA;&#xA;<hr>&#xA;&#xA;<p>name of mutation: addTodo</p>&#xA;&#xA;<p>the data i am sending over post:</p>&#xA;&#xA;<pre><code>{'operationName': 'addTodo',&#xA;   'variables':{'id': '400',&#xA;                'name': 'some name', &#xA;                'description': 'some description',&#xA;                'query': 'mutation addTodo($id: ID,&#xA;                                           $name: String,&#xA;                                           $description: String)&#xA;                 {addTodo(id: $id,&#xA;                          name: $name,&#xA;                          description: $description)&#xA;                  {id name description}}'&#xA;                }&#xA;}&#xA;</code></pre>&#xA;",13498589,,3396821,2020-05-09 18:47:21,2020-05-09 18:47:21,Trigger Appsync mutation from lambda function,<amazon-web-services><http><graphql><amazon-dynamodb>,1,0,0,2020-05-08 12:47:10
61680266,2,,61661719,1,,"<p>I figured it out how we can achieve it:<br>&#xA;you can do like this:</p>&#xA;&#xA;<pre><code>#set ($updates = """")&#xA;#foreach( $item in $ctx.args.input.keySet())&#xA;    #if($item)&#xA;        #set ($updates = ""$updates, $item = '$ctx.args.input.get($item)'"")&#xA;    #end&#xA;#end&#xA;--------used cognito as authentication , so user id will come in indentity&#xA;#set($user_id = ($ctx.identity.username))  &#xA;#set($updates = ""$updates, updated_at = '$util.time.nowFormatted('yyyy-MM-dd HH:mm:ssZ')'"")&#xA;{&#xA;""version"": ""2018-05-29"",&#xA;""statements"": [&#xA;    $util.toJson(""update public.tableName SET $updates.substring(1)  WHERE user_id = '$user_id'""),&#xA;    $util.toJson(""select * from public.tableName WHERE user_id = '$user_id'"")&#xA;]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I hope it will help someone.</p>&#xA;",9763002,,,,2020-05-08 13:26:54,"",,0,0,0,2020-05-08 13:26:54
61680466,2,,61674263,4,,"<p>No, you'll need to create a PG function that does this for you and query it via Hasura.</p>&#xA;",3095643,,,,2020-05-08 13:38:16,"",,0,1,0,2020-05-08 13:38:16
61683745,1,61685575,,0,531,"<p>I am not able to use postman to query a graphql server written in scala using its sangria library. &#xA;I get a request malformed error in postman if I use the content-type as ""application-json"" and if I use plain text I get content type not supported. The postman version I am using is Version 6.2.4.&#xA;The code is pretty straightforward in which I read data from hbase. I use the sangria macro function <strong>deriveObjectTypeUnit, myCaseClass</strong> to define an object. &#xA;I am however able to use the graphiql console by concatenating a graphiql.html file from the resources to the route created. The issue with the graphiql console is that it marks all the arguments and fields as non-nullable which it should not as by default the fields are all nullable in graphql. I checked this from the documentation tab of the graphiql console where I can see all my fields and the parameters are marked as non-nullable(Suffixed with an exclamation mark <strong>!</strong>). &#xA;Sample query is as follows: </p>&#xA;&#xA;<pre><code>{&#xA;  hBaseTable(date: ""2019-11-21"", key: ""10100003071234"") {&#xA;    RowKey&#xA;    DateOfInt&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My question is how do we set the default nullability in sangria and how does graphql java supports the postman version 6 but not scala implementation.</p>&#xA;",10269088,,,,2020-05-08 18:22:09,"All fields and parameters marked as non-null in Graphiql : Sangria, scala",<scala><graphql><graphiql><sangria>,1,0,0,2020-05-08 16:36:08
61690094,2,,61674195,1,,"<p>This could be because of some issue with the version of <code>connectivity</code> <code>graphql_flutter</code> uses.<br>&#xA;Try <code>flutter clean</code> first, and if that doesn't work, try overriding <code>connectivity</code> in your <code>pubspec.yaml</code>: </p>&#xA;&#xA;<pre class=""lang-yaml prettyprint-override""><code>dependency_overrides:&#xA;  connectivity: 0.4.8+5&#xA;</code></pre>&#xA;",2234013,,,,2020-05-09 00:10:03,"",,0,1,0,2020-05-09 00:10:03
61693685,2,,61649968,1,,"<p><strong>Point 1:</strong> In dynamoDB, you only need to define the data type of your partition key and sort key, and these can be string, number etc. For all the other attributes, you don't need to define anything.</p>&#xA;&#xA;<p><strong>Point 2:</strong> The dynamoDB designers prefer using a single table per application, unless it's impossible to manage data without multiple tables. Keeping this in mind, your table can be something like this.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/933b2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/933b2.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><strong>Please observe:</strong> Only <strong>Id</strong> aka partition key and <strong>Sk</strong> aka sort key column is fixed here, all other columns can be anything per item. This is the beauty of DynamoDB. Refer to <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes"" rel=""nofollow noreferrer"">this</a> document for dynamoDB supported data types.</p>&#xA;",1891088,,,,2020-05-09 08:12:19,"",,0,1,0,2020-05-09 08:12:19
61712101,2,,60745188,6,,"<p>my apologies for the delay, I wasn't sure exactly what the missing information was hence why I commented first :). </p>&#xA;&#xA;<h2>The Schema</h2>&#xA;&#xA;<p>An example of a part of a schema that has arguments:</p>&#xA;&#xA;<pre class=""lang-gql prettyprint-override""><code>type Mutation {&#xA;  register(email: String!, password: String!): Account! @resolver&#xA;  login(email: String!, password: String!): String! @resolver&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When such a schema is imported in FaunaDB there will be placeholder functions provided.</p>&#xA;&#xA;<h2>The UDF parameters</h2>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/RfNc4.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/RfNc4.png"" alt=""Function stubs""></a></p>&#xA;&#xA;<p>As you can see all the function does is Abort with the message that the function still has to be implemented. The implementation starts with a Lambda that takes arguments and those arguments have to match what you defined in the resolver. </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>Query(Lambda(['email', 'password'],&#xA;    ... function body ...&#xA;))&#xA;&#xA;</code></pre>&#xA;&#xA;<p>Using the arguments is done with Var, that means Var('email') or Var('password') in this case. For example, in my specific case we would use the email that was passed in to get an account by email and use the password to pass on to the <strong>Login</strong> function which will return a secret (the reason I do the select here is that the return value for a GraphQL resolver has to be a valid GraphQL result (e.g. plain JSON</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>Query(Lambda(['email', 'password'],&#xA;    Select(&#xA;      ['secret'],&#xA;      Login(Match(Index('accountsByEmail'), Var('email')), {&#xA;        password: Var('password')&#xA;      })&#xA;    )&#xA;))&#xA;</code></pre>&#xA;&#xA;<h2>Calling the UDF resolver via GraphQL</h2>&#xA;&#xA;<p>Finally, how to pass parameters when calling it? That should be clear from the GraphQL playground as it will provide you with the docs and autocompletion. For example, this is what the auto-generated GraphQL docs tell me after my schema import: </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/5GBnK.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/5GBnK.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>Which means we can call it as follows: </p>&#xA;&#xA;<pre class=""lang-gql prettyprint-override""><code>mutation CallLogin {&#xA;  login (&#xA;    email: ""&lt;some email&gt;""&#xA;    password: ""&lt;some pword&gt;""&#xA;  )&#xA;}&#xA;</code></pre>&#xA;&#xA;<h2>Bulk updates</h2>&#xA;&#xA;<p>For bulk updates, you can also pass a list of values to the User Defined Function (UDF). Let's say we would want to group a number of accounts together in a specific team via the UI and therefore want to update multiple accounts at the same time. </p>&#xA;&#xA;<p>The mutation in our Schema could look as follows (ID's in GraphQL are similar to Strings)</p>&#xA;&#xA;<pre class=""lang-gql prettyprint-override""><code>type Mutation { updateAccounts(accountRefs: [ID]): [ID]! @resolver } &#xA;</code></pre>&#xA;&#xA;<p>We could then call the mutation by providing in the id's that we receive from FaunaDB (the string, not the Ref in case you are mixing FQL and GraphQL, if you only use GraphQL, don't worry about it). </p>&#xA;&#xA;<pre class=""lang-gql prettyprint-override""><code>mutation {&#xA;    updateAccounts(accountRefs: [""265317328423485952"", ""265317336075993600""] )&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Just like before, we will have to fill in the User Defined Function that was generated by FaunaDB. A skeleton function that just takes in the array and returns it would look like:</p>&#xA;&#xA;<pre class=""lang-gql prettyprint-override""><code>Query(Lambda(['arr'], &#xA;  Var('arr')&#xA;))&#xA;</code></pre>&#xA;&#xA;<p>Some people might have seen an easier syntax and would be tempted to use this: </p>&#xA;&#xA;<pre class=""lang-gql prettyprint-override""><code>Query(Lambda(arr =&gt; arr))&#xA;</code></pre>&#xA;&#xA;<p>However, this <strong>currently does not work with GraphQL when passing in arrays</strong>, it's a known issue that will be fixed. &#xA;The next step is to actually loop over the array. FQL is not declarative and draws inspiration from functional languages which means you would do that just by using a 'map' or a 'foreach'</p>&#xA;&#xA;<pre class=""lang-gql prettyprint-override""><code>Query(Lambda([""accountArray""], &#xA;  Map(Var(""accountArray""), &#xA;      Lambda(""account"", Var(""account"")))&#xA;))&#xA;</code></pre>&#xA;&#xA;<p>We now loop over the list but don't do anything with it yet since we just return the account in the map's body. We will now update the account and just set a value 'teamName' on there. For that we need the <strong>Update</strong> function which takes a FaunaDB <strong>Reference</strong>. GraphQL sends us strings and not references so we need to transform these ID strings to a reference with <a href=""https://docs.fauna.com/fauna/current/api/fql/functions/ref"" rel=""noreferrer"">Ref</a> as follows: </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code> Ref(Collection('Account'), Var(""account""))&#xA;</code></pre>&#xA;&#xA;<p>If we put it all together we can add an extra attribute to a list of accounts ids as follows: </p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>Query(Lambda([""accountArray""], &#xA;  Map(Var(""accountArray""), &#xA;    Lambda(""account"", &#xA;       Do(&#xA;         Update(&#xA;          Ref(Collection('Account'), Var(""account"")),&#xA;          { data: { teamName: ""Awesome live-coders"" } }&#xA;        ),&#xA;        Var(""account"")&#xA;      )&#xA;    )&#xA;  )&#xA;))&#xA;</code></pre>&#xA;&#xA;<p>At the end of the Map, we just return the ID of the account again with Var(""account"") in order to return something that is just plain JSON, else we would be returning FaunaDB Refs which are more than just JSON and will not be accepted by the GraphQL call.  </p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/dMHjA.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/dMHjA.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<h2>Passing in more complex types.</h2>&#xA;&#xA;<p>Sometimes you want to pass in more complex types. Let's say we have a simple todo schema. </p>&#xA;&#xA;<pre class=""lang-gql prettyprint-override""><code>type Todo {&#xA;  title: String!&#xA;  completed: Boolean!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And we want to set the completed value of a list of todos with specific titles to true. We can see in the extended schema generated by FaunaDB that there is a TodoInput.</p>&#xA;&#xA;<p><a href=""https://i.stack.imgur.com/cqcf5.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/cqcf5.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>If you see that extended schema you might think, ""Hey that's exactly what I need!"" but you can't access it when you write your mutations since you do not have that part of the schema at creation time and therefore can't just write: </p>&#xA;&#xA;<pre class=""lang-gql prettyprint-override""><code>type Mutation { updateTodos(todos: [TodoInput]): Boolean! @resolver } &#xA;</code></pre>&#xA;&#xA;<p>As it will return the following error.&#xA;<a href=""https://i.stack.imgur.com/c5YfM.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/c5YfM.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p>However, we can just add it to the schema ourselves. Fauna will just accept that you already wrote it and not override it (make sure that you keep the required fields, else your generated 'createTodo' mutation won't work anymore). </p>&#xA;&#xA;<pre class=""lang-gql prettyprint-override""><code>type Todo {&#xA;  title: String!&#xA;  completed: Boolean!&#xA;}&#xA;&#xA;input TodoInput {&#xA;  title: String!&#xA;  completed: Boolean!&#xA;}&#xA;&#xA;type Mutation { updateTodos(todos: [TodoInput]): Boolean! @resolver } &#xA;&#xA;</code></pre>&#xA;&#xA;<p>Which means that I can now write: </p>&#xA;&#xA;<pre class=""lang-gql prettyprint-override""><code>mutation {&#xA;  updateTodos(todos: [{title: ""test"", completed: true}])&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>and dive into the FQL function to do things with this input. &#xA;Or if you want to include the ID along with data you can define a new type. </p>&#xA;&#xA;<pre class=""lang-gql prettyprint-override""><code>input TodoUpdateInput {&#xA;  id: ID!&#xA;  title: String!&#xA;  completed: Boolean!&#xA;}&#xA;type Mutation { updateTodos(todos: [TodoUpdateInput]): Boolean! @resolver } &#xA;</code></pre>&#xA;&#xA;<p>Once you get the hang of it and want to learn more about FQL (that's a whole different topic) we are currently writing a series of articles along with code for which the first one appeared here: <a href=""https://css-tricks.com/rethinking-twitter-as-a-serverless-app/"" rel=""noreferrer"">https://css-tricks.com/rethinking-twitter-as-a-serverless-app/</a> which is probably a good gentle introduction. </p>&#xA;",12405269,,12405269,2020-05-12 12:47:59,2020-05-12 12:47:59,"",,0,9,0,2020-05-10 12:38:03
61738204,1,,,0,2223,"<p>I have created simple grapql schema: </p>&#xA;&#xA;<pre><code>type Announcement @model @auth(&#xA;  rules: [{ allow: owner }]){&#xA;  id: ID!&#xA;  name: String!&#xA;  selectedTags: String!&#xA;  owner: String!&#xA;  price: Float&#xA;  description: String!&#xA;  image: S3Object&#xA;  createdAt: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>AWS Amplify generates for me <code>listAnnouncements</code> query that allows me to get all announcements for their owner so on owner's account I will see only those that he has created. On separate view I would like to list all announcements that were created, also by other users. </p>&#xA;&#xA;<p>I thought that the problem was how I was accessing the query, so I checked <code>&lt;UserContext&gt;</code> and <code>&lt;Connect&gt;</code> methods from AWS Amplify but it looks like it didn't solve the problem.</p>&#xA;&#xA;<p>Is there a way for user to get Read access to all <strong>Announcements</strong> and could modify only the ones that he has created?</p>&#xA;",6928598,,5052733,2020-05-15 11:21:04,2020-11-08 03:18:10,AWS Amplify GraphQL query - list all elements and filter the owner's ones in different view,<reactjs><authentication><graphql><aws-amplify><aws-amplify-cli>,1,3,0,2020-05-11 19:57:46
61738515,2,,61737923,1,,"<blockquote>&#xA;  <p><strong>Edit:</strong> This answer was OK until the OP added the following condition: <em>only add missing <code>id</code> to a set or subset if it does not include <code>code</code></em>.</p>&#xA;</blockquote>&#xA;&#xA;<p>If the position of <code>id</code> is not relevant (except the fact that it must not be inserted just before an opening curly bracket):</p>&#xA;&#xA;<pre><code>// Pure JS&#xA;var $string = ""{id name sub1 { attr code sub2 { val key } id  } suba { val key subb { subc { key} } } }"";&#xA;$string = $string.replace(/\bid\b */g, """").replace(/{/g, ""{ id "");&#xA;alert($string);&#xA;</code></pre>&#xA;&#xA;<p>Result: <code>{ id name sub1 { id  attr code sub2 { id  val key } } suba { id  val key subb { id  subc { id  key} } } }</code></p>&#xA;&#xA;<p>Demo: <a href=""https://jsfiddle.net/ft2jhpq0/2/"" rel=""nofollow noreferrer"">https://jsfiddle.net/ft2jhpq0/2/</a></p>&#xA;&#xA;<p>Best regards</p>&#xA;",13486720,,13486720,2020-05-15 11:16:47,2020-05-15 11:16:47,"",,0,2,0,2020-05-11 20:17:57
61753486,1,61760540,,2,530,"<p>I am getting following error as shown in image snapshot below. &#xA;1st Error: Trying to redefine existing 'something' type. But i am only defining it once and i have made no changes to the file. This is autogenerated file from amplify add API command.&#xA;2nd Error: tried to use undeclared directive 'aws_subscribe'</p>&#xA;&#xA;<p>I cannot understand what i am doing wrong.<a href=""https://i.stack.imgur.com/ZINdp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZINdp.png"" alt=""enter image description here""></a></p>&#xA;",9133122,,,,2020-05-12 19:40:39,"Amplify Graphql Error: ""Trying to redefine existing 'something' type"" and tried to use an undeclared directive 'aws_subscribe'",<graphql><aws-amplify><aws-appsync>,1,0,0,2020-05-12 13:51:09
61754182,1,61754355,,2,193,<p>This is my Schema.</p>&#xA;&#xA;<pre><code>Query {&#xA;    me: User @isAuthenticated&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>When I add <code>@isAuthenticated</code> it is handled on server side but in <code>GraphQL Playground</code> the directive doesn't show. I have some role based access system and I want to show all the role directives publicly so that API user can understand what role is wanted for which query.</p>&#xA;,10462697,,,,2020-05-12 14:29:43,Public GraphQL directives,<graphql><apollo><apollo-server><graphql-playground>,1,0,0,2020-05-12 14:21:27
61754355,2,,61754182,1,,"<p>Schema directives can be used to transform the schema or add functionality to it, but they cannot be used to expose any sort of metadata to the client. There's ongoing discussion <a href=""https://github.com/graphql/graphql-spec/issues/300"" rel=""nofollow noreferrer"">here</a> with regards to how to implement that sort of functionality. For the time being, your best bet would be to utilize descriptions.</p>&#xA;&#xA;<pre><code>""""""&#xA;**Required roles**: `ADMIN` &#xA;""""""&#xA;Query {&#xA;  me: User @isAuthenticated&#xA;}&#xA;</code></pre>&#xA;",6024220,,,,2020-05-12 14:29:43,"",,0,1,0,2020-05-12 14:29:43
61765165,1,61792094,,3,1728,"<p>I'm creating my first schema for a new DynamoDB using graphql in AWS Amplify.  I noticed many examples where there is no @key directive to define the primary key such as ""Product"" below:</p>&#xA;&#xA;<pre><code>type Inventory @model&#xA;  @key(name: ""byWarehouseID"", fields: [""warehouseID""], queryField: ""itemsByWarehouseID"")&#xA;  @key(fields: [""productID"", ""warehouseID""]) {&#xA;  productID: ID!&#xA;  warehouseID: ID!&#xA;  inventoryAmount: Int!&#xA;}&#xA;&#xA;type Product @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  orders: [Order] @connection(keyName: ""byProduct"", fields: [""id""])&#xA;  inventories: [Inventory] @connection(fields: [""id""])&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Is the first field automatically used as the primary key (partition key)?</p>&#xA;",9778142,,,,2021-01-15 13:00:45,Default Primary Key in GraphQL DynamoDB Schema?,<react-native><graphql><amazon-dynamodb><aws-amplify><aws-appsync>,1,2,0,2020-05-13 02:08:08
61787292,1,61788068,,1,1186,"<p>I'm have a headless wordpress installation with a React front end that queries wordpress for posts. I'm trying to create a search feature, that allows me to load posts by search term from the url query string (retrieved by using <code>const searchQuery = window.location.search.split(""?q="")[1]</code>), which gives me the string to search on.</p>&#xA;&#xA;<p>However, I get the error ""ERROR: GraphQL error: No post exists with this id:"".</p>&#xA;&#xA;<p>My GraphQL query is as follows:</p>&#xA;&#xA;<pre><code> query postQuery($slug: String) {&#xA;  postBy(slug: $slug) {&#xA;    id&#xA;    slug&#xA;    status&#xA;    title&#xA;    content&#xA;    blocks {&#xA;        tagName&#xA;        type&#xA;        attributes,&#xA;        innerHtml&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have tried implementing the example here: <a href=""https://graphql-search-api.readthedocs.io/en/latest/search-parameters/#fulltext"" rel=""nofollow noreferrer"">https://graphql-search-api.readthedocs.io/en/latest/search-parameters/#fulltext</a>, but it doesn't seem the request is what I need. I have also tried this example: <a href=""https://docs.wpgraphql.com/getting-started/posts/#arguments"" rel=""nofollow noreferrer"">https://docs.wpgraphql.com/getting-started/posts/#arguments</a>, but again, this does not work.</p>&#xA;&#xA;<p>There are two issues here: 1) How do I use the search term from my variable <code>searchQuery</code> in my GraphQL request, and 2) How do I form the query correctly, so that the term can be used to search for and return any post with the search term in either the post title or content of the post?</p>&#xA;&#xA;<p><strong>UPDATE</strong></p>&#xA;&#xA;<p>I have updated my code with a separate query from the rest of the application, but now receiving the error on the page <code>GraphQL error: Cannot query field ""title"" on type ""RootQueryToPostConnection"". GraphQL error: Cannot query field ""content"" on type ""RootQueryToPostConnection</code></p>&#xA;&#xA;<pre><code>const SEARCH_QUERY = gql`&#xA;        query searchPostQuery($searchStr: String) {&#xA;          posts(where: {search: $searchStr}) {&#xA;            title&#xA;            content&#xA;          }&#xA;        }&#xA;    `;&#xA;&#xA;    const APP_QUERY = gql`&#xA;      query appQuery($locationId: MenuLocationEnum!) {&#xA;       ...&#xA;    }`;&#xA;&#xA;    const searchQuery = window.location.search.split(""?q="")[1];&#xA;    function App(props) {&#xA;      return (&#xA;        &lt;ApolloProvider client={graphClient}&gt;&#xA;            &lt;Query query={window.location.pathname === ""/search-results"" ? SEARCH_QUERY : APP_QUERY} variables={{ locationId: ""HEADER_MENU"", searchStr: searchQuery }}&gt;&#xA;              {({ data, loading, error, client }) =&gt; {&#xA;                if (loading) return ""loading..."";&#xA;                if (error) return &lt;p&gt;ERROR: {error.message}&lt;/p&gt;;&#xA;                     return (&#xA;                  &lt;&gt;&#xA;                    &lt;Query query={HEADER_QUERY}&gt;&#xA;                      {({ data, client: headerClient }) =&gt; {&#xA;                      return (&#xA;                      &lt;&gt;&#xA;                      &lt;Router&gt;&#xA;                         ...&#xA;                        &lt;SearchResults&#xA;                           path=""/search-results""&#xA;                        /&gt;&#xA;                      &lt;/Router&gt;&#xA;                  &lt;/&gt;&#xA;                 );&#xA;                }}&#xA;         &lt;/Query&gt;&#xA;      &lt;/ApolloProvider&gt;&#xA;   );&#xA;}&#xA;</code></pre>&#xA;",3438917,,3438917,2020-05-14 15:12:22,2020-05-14 15:16:41,Query Wordpress Posts by string with GraphQL,<reactjs><wordpress><graphql>,1,0,0,2020-05-14 00:42:55
61788068,2,,61787292,0,,"<p>Search is not standarized ... it depends on implementation, provider intentions etc.</p>&#xA;&#xA;<p><code>postBy(slug: $slug)</code> will return [only one] post identified by key/value, slug in this case</p>&#xA;&#xA;<p>General (found on github) WP search query shape:</p>&#xA;&#xA;<pre><code>{&#xA;  posts(where: {search: ""cats""}) {&#xA;    nodes {&#xA;      id&#xA;      title&#xA;      content&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>searchQuery</code> can be read from location or from <code>react-router</code>... you can pass it into query using variables, f.e.:</p>&#xA;&#xA;<pre><code>query searchPostQuery($searchStr: String) {&#xA;  posts(where: {search: $searchStr) {&#xA;    nodes {&#xA;      id&#xA;      slug&#xA;      status&#xA;      title&#xA;</code></pre>&#xA;&#xA;<p>...</p>&#xA;&#xA;<pre><code>variables = { searchStr: searchQuery };&#xA;</code></pre>&#xA;&#xA;<p>Of course you can test query (before using in frontend) in <code>/graphiql</code> - variables can be defined below query.</p>&#xA;",6124657,,6124657,2020-05-14 15:16:41,2020-05-14 15:16:41,"",,0,2,0,2020-05-14 02:06:52
61792094,2,,61765165,5,,"<p>Your question made me realize how poorly documented is this behavior.&#xA;The closest I found is in this article: <a href=""https://medium.com/@dantasfiles/exploring-the-backend-specifications-generated-by-aws-amplify-api-57be2a349fa9"" rel=""nofollow noreferrer"">https://medium.com/@dantasfiles/exploring-the-backend-specifications-generated-by-aws-amplify-api-57be2a349fa9</a></p>&#xA;<p>If you don't specify a key Amplify/AppSync does that for you, creating an <code>id</code> field&#xA;Like it does with other fields (i.e: <code>createdAt</code>, <code>updatedAt</code>)</p>&#xA;<blockquote>&#xA;<p>Because no default @key annotation was specified, the AccountRepresentative table has the default id partition/hash key.</p>&#xA;</blockquote>&#xA;",1742659,,1742659,2021-01-15 13:00:45,2021-01-15 13:00:45,"",,0,1,0,2020-05-14 07:53:32
61804818,2,,61782785,4,,"<p>I had a similar issue and this is how I solved it.</p>&#xA;&#xA;<p>First, your Graphql schema should look like,</p>&#xA;&#xA;<pre><code>type Query {&#xA;    getCitiesForGroups: cityList&#xA;}&#xA;&#xA;type cityList {&#xA;    cities: [String]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Your request mapping template,</p>&#xA;&#xA;<pre><code>{&#xA;    ""version"": ""2018-05-29"",&#xA;    ""statements"": [&#xA;        ""select DISTINCT LOWER(city) as city from public.Groups""&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And finally your response mapping template</p>&#xA;&#xA;<pre><code>#set($cityList = [])&#xA;#set($resMap = {})&#xA;#if($ctx.error)&#xA;    $utils.error($ctx.error.message, $ctx.error.type)&#xA;#end&#xA;&#xA;#foreach($item in $utils.rds.toJsonObject($ctx.result)[0])&#xA;    $util.qr($cityList.add($item.city))&#xA;#end&#xA;$util.qr($resMap.put(""cities"", $cityList))&#xA;&#xA;#return($resMap)&#xA;</code></pre>&#xA;&#xA;<p>Expected response(complete)</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""getCitiesForGroups"": {&#xA;      ""cities"": [&#xA;        ""jaipur"",&#xA;        ""mumbai"",&#xA;        ""delhi"",&#xA;        ""sheros"",&#xA;        ""jalandhar"",&#xA;        ""bengaluru""&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I hope this helps you.</p>&#xA;",1819065,,,,2020-05-14 18:32:17,"",,0,2,0,2020-05-14 18:32:17
61810858,2,,61796139,1,,"<p>AppSync API has two endpoints. </p>&#xA;&#xA;<p><strong>HTTPS endpoint such as <code>&lt;id&gt;.appsync-api.&lt;region&gt;.amazonaws.com</code> :</strong>&#xA;For Query and Mutation, you can use a generic HTTP client to do POST with the GraphQL query as the body. If it's AWS IAM auth, you can refer to this <a href=""https://docs.aws.amazon.com/general/latest/gr/sigv4-signed-request-examples.html"" rel=""nofollow noreferrer"">guide</a>. If it's API key auth, you need to add <code>x-api-key: &lt;key&gt;</code> to the headers. If it's Cognito auth, you need to add <code>Authorization: &lt;jwt&gt;</code> to the headers.</p>&#xA;&#xA;<p><strong>WSS endpoint such as <code>&lt;id&gt;.appsync-realtime-api.&lt;region&gt;.amazonaws.com</code> :</strong> For subscription, you can refer to this <a href=""https://aws.amazon.com/blogs/mobile/appsync-websockets-python/"" rel=""nofollow noreferrer"">tutorial</a> for python client implementation.</p>&#xA;&#xA;<p>Please let me know if you have any question.</p>&#xA;",5286920,,,,2020-05-15 02:46:56,"",,0,0,0,2020-05-15 02:46:56
61818157,1,,,5,892,"<p>What is the current ""out-of-the-box"" way for editing many-to-many relationships in react-admin?</p>&#xA;&#xA;<p>More specifically, is there any way to SelectArrayInput or AutoCompleteArrayInput over a referenced table?</p>&#xA;&#xA;<p>My first table is <code>stream</code>&#xA;<a href=""https://i.stack.imgur.com/3ri9i.png"" rel=""noreferrer"">stream table</a></p>&#xA;&#xA;<p>My second table is <code>subject</code>&#xA;<a href=""https://i.stack.imgur.com/08fsA.png"" rel=""noreferrer"">subject table</a></p>&#xA;&#xA;<p>and the mapping table for them is <code>stream_subject</code>&#xA;<a href=""https://i.stack.imgur.com/v55B1.png"" rel=""noreferrer"">mapping table</a></p>&#xA;&#xA;<p>and I have to display my form like this&#xA;<a href=""https://i.stack.imgur.com/QztSd.png"" rel=""noreferrer"">edit form</a></p>&#xA;&#xA;<p>Currently, I am using reference array input for that but it's not working, my current code is like this:</p>&#xA;&#xA;<pre><code>&lt;ReferenceManyField label='Subject' reference='stream_subject' target='stream_id'&gt;&#xA;    &lt;ReferenceArrayInput label='Subject' reference='subject' source='subject_id'&gt;&#xA;        &lt;SelectArrayInput source='name'&gt;&#xA;            &lt;ChipField source='name' /&gt;&#xA;        &lt;/SelectArrayInput&gt;&#xA;    &lt;/ReferenceArrayInput&gt;&#xA;&lt;/ReferenceManyField&gt;&#xA;</code></pre>&#xA;&#xA;<p>Is there any way to create multi-select dropdown for this, I even tried using <code>useQuery</code> hook from react-admin but unable to make any progress even if anyone can help me out me <code>useQuery</code> methods can solve my problem.&#xA;For this I am using hasura-graphql datprovider: <code>https://github.com/Steams/ra-data-hasura-graphql</code></p>&#xA;&#xA;<p>My graphql is like this:&#xA;<a href=""https://i.stack.imgur.com/jth4s.png"" rel=""noreferrer"">graphql-query</a></p>&#xA;",5727081,,,,2020-05-15 11:29:24,Edit multi select input in react-admin for one-to-many or many-to-many relationship?,<graphql><react-admin><hasura>,0,2,0,2020-05-15 11:29:24
61826481,2,,61583460,5,,"<p>It doesn't look like you are using prisma 2. Prisma 2 uses models (not types) and has arrays classified like Principles[] vs [Principles]. Maybe Redwood does the conversion(Never used it).</p>&#xA;&#xA;<p>I created your model in Prisma 2 and used the following command to get a single principle that has the two tags associated with it. Keep in mind the IDs in there are from my test dataset. Hopefully, you can modify this to your code. If not, please create a sandbox/playground with minimal code for us to test.</p>&#xA;&#xA;<pre><code>export const principles = async ({ searchQuery, tagIds }) =&gt; {      &#xA;  const payload = {&#xA;    where: {&#xA;      OR: [&#xA;        { title: { contains: searchQuery } },&#xA;        { description: { contains: searchQuery } },&#xA;      ],&#xA;      userId: userIdFromSession,&#xA;    },&#xA;  }&#xA;  if (tagIds.length) {&#xA;    const whereAnd = []&#xA;    tagIds.forEach((tagId) =&gt; {&#xA;      whereAnd.push({&#xA;        tags: { some: { id: tagId } },&#xA;      })&#xA;    })&#xA;    payload.where.AND = whereAnd&#xA;  }&#xA;  const result = await db.principle.findMany(payload)&#xA;  return result&#xA;}&#xA;</code></pre>&#xA;",3593908,,470749,2020-05-20 17:35:01,2020-05-20 17:35:01,"",,0,5,0,2020-05-15 18:58:16
61831835,1,61835737,,1,1018,"<p>I'm trying to work with waveapps API. And it seems I'm not getting the mutation operation right.</p>&#xA;&#xA;<p>I want to create a <a href=""https://developer.waveapps.com/hc/en-us/articles/360019968212-API-Reference#moneytransactioncreateinput"" rel=""nofollow noreferrer"">Transaction via WaveApps API</a>.  Below is my code:</p>&#xA;&#xA;<pre><code>query = """""" mutation ($input: MoneyTransactionCreateInput!) {moneyTransactionCreate(input: $input) {moneyTransaction {id externalId date description anchor{accountId amount direction} lineItems[{accountId amount balance}]}}}""""""&#xA;&#xA;moneyTransaction = {'businessId':'5ODAtNzQ3OS00ZGQ4LTg5NWYtMzU4ZWNiNDNmMTI2', &#xA;'externalId':'21', 'date':'2020-05-16', 'description':'my money', 'anchor':{'accountId':'1', &#xA;'amount':'15.00', 'direction':'DEPOSIT'},&#xA;'lineItems':[{'accountId':'1', 'amount':'15.00', 'balance':'CREDIT'}]}&#xA;&#xA;variables = {'input': moneyTransaction}&#xA;&#xA;rex = requests.post(wave_url, json={'query':query, 'variables':variables}, headers=after_headers)&#xA;</code></pre>&#xA;&#xA;<p>I got this error:</p>&#xA;&#xA;<pre><code>'{""errors"":[{""extensions"":{""id"":""e6b88a8d-a5f8-4331-80db-191dbb319690"",""code"":""GRAPHQL_PARSE_FAILED""},""message"":""Syntax Error: Expected Name, found ["",""locations"":[{""line"":1,""column"":183}]}]}\n'&#xA;</code></pre>&#xA;&#xA;<p>I'm missing something but can't figure out the issue. I'm new to Graphql. </p>&#xA;",4233667,,,,2020-05-16 17:04:23,Handling Graphql Mutation With Python Requests,<python><python-requests><graphql>,2,0,0,2020-05-16 04:17:42
61835737,2,,61831835,1,,<p>Your query has extraneous square brackets inside it. Square brackets are only used when specifying a List type -- there's never a need to use them inside a selection set.</p>&#xA;&#xA;<pre><code>mutation ($input: MoneyTransactionCreateInput!) {&#xA;  moneyTransactionCreate(input: $input) {&#xA;    moneyTransaction {&#xA;      id&#xA;      externalId&#xA;      date&#xA;      description&#xA;      anchor {&#xA;        accountId&#xA;        amount&#xA;        direction&#xA;      }&#xA;      lineItems {&#xA;        accountId&#xA;        amount&#xA;        balance&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,6024220,,,,2020-05-16 11:02:54,"",,0,0,0,2020-05-16 11:02:54
61844630,1,,,5,1673,"<p>I have react web app that uses aws amplify to build its backend. This backend consists of a graphql api with a dynamodb table as data source (created by the model declared in my graphql schema) and a lambda function that fetches information from a 3rd party api and saves the results into the dynamodb table to make it available for the app.</p>&#xA;&#xA;<p>Following this tutorial: </p>&#xA;&#xA;<p><a href=""https://docs.amplify.aws/cli/function#graphql-from-lambda"" rel=""noreferrer"">https://docs.amplify.aws/cli/function#graphql-from-lambda</a> </p>&#xA;&#xA;<p>I created the lambda function running the ""amplify add function"" command. I answered ""yes"" when I was asked if the lambda should have access to other amplify resources and I gave the lambda write and update access to my graphql api, so that I can perform mutations from the lambda.</p>&#xA;&#xA;<p>When I finish the creation process, amplify informs me that I have two new environment variables available in the lambda:</p>&#xA;&#xA;<pre><code>API_&lt;MY_APP&gt;_GRAPHQLAPIENDPOINTOUTPUT&#xA;API_&lt;MY_APP&gt;_GRAPHQLAPIIDOUTPUT&#xA;</code></pre>&#xA;&#xA;<p>The problem is, however, that I also need the api key in order to be able to perform the mutations (my graphql api has ""api key"" as primary id method).</p>&#xA;&#xA;<p>The tutorial makes use of process.env.API_KEY. However they don't explain where this variable comes from, as in my case its value is undefined.</p>&#xA;&#xA;<p>Do you know how to make the api key available to my lambda?</p>&#xA;&#xA;<p>P.S.: Hardcoding is not an option, as I have several backend environments.</p>&#xA;",5331881,,174777,2020-05-17 07:04:59,2020-11-27 10:18:46,aws appsync environment variable for api key in lambda function,<amazon-web-services><aws-lambda><graphql><aws-amplify>,1,0,0,2020-05-16 22:48:19
61881253,1,,,3,669,"<p>When running a list query from the AppSync console, I get back an array with 3 items (this is expected, as I have three corresponding items in my DynamoDB table).</p>&#xA;&#xA;<p>When I run the exact same query from my React client application, I get an empty array. I've tried messing around with the @auth decorator in my schema.graphql file, but so far to no avail. I also experience the same behavior when running the query from Postman - I get an empty items array.</p>&#xA;&#xA;<p>Type definition in schema.graphql:</p>&#xA;&#xA;<pre><code>type Item @model @auth(rules: [&#xA;    { allow: owner },&#xA;    { allow: public, provider: iam, operations: [read] }]) {&#xA;    id: ID!&#xA;    itemName: String!&#xA;    anotherProperty: String!&#xA;    anotherProperty: String!&#xA;    anotherProperty: String!&#xA;    anotherProperty: String&#xA;    anotherProperty: AnotherType @connection&#xA;    anotherProperty: String&#xA;    anotherProperty: String&#xA;    anotherProperty: String&#xA;    anotherProperty: String&#xA;    anotherProperty: String&#xA;    anotherProperty: SomeType @connection&#xA;    anotherProperty: [SomeOtherType] @connection(keyName: ""byItemID"", fields: [""id""])&#xA;    anotherProperty: String&#xA;    anotherProperty: [YetAnotherType] @connection(keyName: ""byItemID"", fields: [""id""])&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Client code where I call the API (ClojureScript):</p>&#xA;&#xA;<pre><code>(re-frame/reg-event-fx&#xA;              ::list-items&#xA;              (fn list-items-handler []&#xA;                (-&gt; (.graphql API (graphqlOperation ""query { listItems { items { itemName } } }""))&#xA;                                 (.then (fn list-items-res [url]&#xA;                                          (js/console.log url))))))&#xA;</code></pre>&#xA;&#xA;<p>Response to call from client application:</p>&#xA;&#xA;<pre><code>{""data"":{""listItems"":{""items"":[]}}}&#xA;</code></pre>&#xA;&#xA;<p>Same query from the AppSync Console:</p>&#xA;&#xA;<pre><code>query ListItems {&#xA;  listItems {&#xA;    items {&#xA;      itemName&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Response to call from AppSync Console:</p>&#xA;&#xA;<pre><code>{&#xA;  ""data"": {&#xA;    ""listItems"": {&#xA;      ""items"": [&#xA;        {&#xA;          ""itemName"": ""Thingy""&#xA;        },&#xA;        {&#xA;          ""itemName"": ""Contraption""&#xA;        },&#xA;        {&#xA;          ""itemName"": ""Apparatus""&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I'm not sure what I'm doing wrong. I suspect it has something to do with the permissions set with @auth, but I can't figure out what that might be. Any help would be appreciated. Thanks in advance!</p>&#xA;",5032972,,,,2020-05-19 00:30:50,"AppSync List Query Returns Empty Array from JS Client App, but Populated Array from AppSync Console",<reactjs><graphql><clojurescript><aws-amplify><aws-appsync>,0,1,0,2020-05-19 00:30:50
61887922,1,61888872,,14,4114,"<p>I have been looking into AWS AppSync to create a managed GraphQL API with DynamoDB as the datastore. I know AppSync can use Apache Velocity Template Language as a resolver to fetch data from dynamoDB. However, that means I have to introduce an extra language to the programming stack, so I would prefer to write the resolvers in Javascript/Node.js</p>&#xA;&#xA;<p>Is there any downside of using a lambda function to fetch data from DynamoDB? What reasons are there to use VTL instead of a lambda for resolvers?</p>&#xA;",6406073,,,,2020-05-19 10:40:52,AWS AppSync Resolvers Lambda Function vs Velocity Template Language (VTL),<amazon-web-services><aws-lambda><graphql><aws-appsync>,1,0,0,2020-05-19 09:41:46
61889095,1,,,1,96,"<p>I'm trying to understand if there is a way to structure a GraphQL query that will allow me to get results based on a value on a field.</p>&#xA;&#xA;<p>If I do a general query like:</p>&#xA;&#xA;<pre><code>nodeQuery(filter: {conditions: {field: ""type"", value: ""unit_descriptor"", operator: EQUAL}}) {&#xA;    entities {&#xA;      ...on NodeUnitDescriptor {&#xA;        nid&#xA;        title&#xA;        fieldParentSpec{&#xA;          targetId&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>I get this:</p>&#xA;&#xA;<pre><code>  ""data"": {&#xA;    ""nodeQuery"": {&#xA;      ""entities"": [&#xA;        {&#xA;          ""nid"": 220,&#xA;          ""title"": ""Unit 1: Professional Practice"",&#xA;          ""fieldParentSpec"": {&#xA;            ""targetId"": 1&#xA;          }&#xA;        },&#xA;        {&#xA;          ""nid"": 223,&#xA;          ""title"": ""Unit 2: My Second Unit"",&#xA;          ""fieldParentSpec"": {&#xA;            ""targetId"": 1&#xA;          }&#xA;        },&#xA;        {&#xA;          ""nid"": 245,&#xA;          ""title"": ""Unit 3: Third Unit"",&#xA;          ""fieldParentSpec"": {&#xA;            ""targetId"": 1&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>What I'd like to be able to do is pass the <code>targetId</code> in a query and get back all of the entities that are have the <code>fieldParentSpec.targetId</code> of the value passed into the query.</p>&#xA;&#xA;<p>Is that possible? What does that look like?</p>&#xA;&#xA;<p>(From a GraphQL newbie) Thanks</p>&#xA;",11659823,,,,2020-05-19 10:43:35,GraphQL query for Drupal - node where field value,<graphql><drupal-8>,0,0,0,2020-05-19 10:43:35
61892790,2,,61892306,41,,"<p>You can use Form-Data to do this.</p>&#xA;<p>Key: Operations (this is for the query / mutation )</p>&#xA;<pre><code>{&quot;query&quot;:&quot;mutation updateAvatar($avatar:Upload!) {\n  updateAvatar(avatar: $avatar)\n}&quot;}&#xA;</code></pre>&#xA;<p>Key: map ( this is to map the files to your query / mutation )</p>&#xA;<pre><code>{&quot;0&quot;: [&quot;variables.avatar&quot;]}&#xA;</code></pre>&#xA;<p>Key: 0 ( upload your image/file etc )</p>&#xA;<p><a href=""https://i.imgur.com/YdXVNsc.png"" rel=""noreferrer""><img src=""https://i.imgur.com/YdXVNsc.png"" alt=""postman"" /></a></p>&#xA;",10699327,,2257664,2021-02-19 16:39:16,2021-02-19 16:39:16,"",,0,9,0,2020-05-19 13:53:42
61896354,2,,61896161,-1,,"<p>See the <a href=""https://www.gatsbyjs.org/packages/gatsby-source-wordpress/"" rel=""nofollow noreferrer"">options</a> for the plugin, specifically <code>auth</code>:</p>&#xA;&#xA;<pre><code>auth: {&#xA;  // If auth.user and auth.pass are filled, then the source plugin will be allowed&#xA;  // to access endpoints that are protected with .htaccess.&#xA;  htaccess_user: ""your-htaccess-username"",&#xA;  htaccess_pass: ""your-htaccess-password"",&#xA;</code></pre>&#xA;",532431,,,,2020-05-19 16:42:57,"",,0,1,0,2020-05-19 16:42:57
61904753,1,,,1,271,"<p>Appreciate for any suggestion and help.</p>&#xA;&#xA;<p>I have so many problems with table partition + hasura.</p>&#xA;&#xA;<ol>&#xA;<li>Add schema.</li>&#xA;</ol>&#xA;&#xA;<p>Example: </p>&#xA;&#xA;<p>I have table ""message"" (as a table parent) and ""message_01"", ""message_02"" (as a table child)</p>&#xA;&#xA;<p>Go to Hasura console -> Data -> Schema.</p>&#xA;&#xA;<ul>&#xA;<li>Only table child appear on hasura to add.</li>&#xA;</ul>&#xA;&#xA;<p>=> My problem: table parent ""message"" does not appear on hasura, i can not add.</p>&#xA;&#xA;<p>=> My purpose: want to add table parent and query on table parent. How to do that ?</p>&#xA;&#xA;<ol start=""2"">&#xA;<li>Set permission (insert,update,delete,select) on table parent:</li>&#xA;</ol>&#xA;&#xA;<p>=> My problem: Table ""message"" does not show up. Can not set permission.</p>&#xA;&#xA;<p>=> My purpose: i want to set permission on only table parent (instead of set permission on so many table child)</p>&#xA;&#xA;<p>Thanks in advance.</p>&#xA;",3072853,,,,2020-05-20 03:48:53,Postgres (table partition) + hasura,<postgresql><graphql><partition><hasura>,0,2,0,2020-05-20 03:48:53
61913842,1,,,4,730,"<p>Having a schema.graphql like this one:</p>&#xA;&#xA;<pre><code>type Todo @model @auth(rules: [&#xA;  {&#xA;    allow: owner,&#xA;    operations: [create, read, update, delete],&#xA;    identityClaim: ""sub""&#xA;  }&#xA;]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;  owner: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I have cognito for athentication working on my test app. I can create users, log in as one of them, etc.</p>&#xA;&#xA;<p>What doeas @auth directive exactly? When I use my listTodos query:</p>&#xA;&#xA;<pre><code>const todoData = await API.graphql(graphqlOperation(listTodos));&#xA;</code></pre>&#xA;&#xA;<p>I expect to have back from the server <strong>only</strong> my todos, but I got all of them. Obviously I'm missing something out.</p>&#xA;&#xA;<p>I mean, If I view my table data, the owner field is correctly popullated with my user's ID. </p>&#xA;&#xA;<p>How do I accomplish my use case? Listing only my items</p>&#xA;",646334,,,,2020-05-20 13:04:26,Amplify Graphql list only current user Todo's,<graphql><aws-amplify>,0,7,0,2020-05-20 13:04:26
61915860,2,,61913192,2,,"<p>It's currently not possible.</p>&#xA;&#xA;<p>If you want one graphql endpoint, you can instantiate many Hasura as you need for each tables. One of this Hasura instance could be your main endpoint, and you can add remote schema for each other tables.</p>&#xA;",479957,,,,2020-05-20 14:37:52,"",,0,0,0,2020-05-20 14:37:52
61933116,2,,61917923,0,,"<p>Credit to the guys in the comments - piecing together their recommendations I was able to figure it out.  My real sticking point was not knowing how to get the values from the <em>resolved</em> parent, using the AppSync resolver mapping template for DynamoDB I was able to use <code>#ctx.source.id</code> to get the parent id and therefore I could build by query correctly as - </p>&#xA;&#xA;<pre><code>{&#xA;    ""version"" : ""2017-02-28"",&#xA;    ""operation"" : ""Query"",&#xA;    ""query"" : {&#xA;        ""expression"" : ""#sk = :sk and begins_with(#pk, :pk)"",&#xA;        ""expressionNames"" : {&#xA;            ""#pk"" : ""pk"",&#xA;            ""#sk"" : ""sk""&#xA;        },&#xA;        ""expressionValues"" : {&#xA;            "":pk"" : $util.dynamodb.toDynamoDBJson(""CHILD""),&#xA;            "":sk"" : $util.dynamodb.toDynamoDBJson(""PARENT_$context.source.id"")&#xA;       }&#xA;    },&#xA;    ""index"": ""invertedIndex""&#xA;}&#xA;</code></pre>&#xA;",1849358,,,,2020-05-21 11:08:06,"",,0,2,0,2020-05-21 11:08:06
61983880,1,61987098,,0,662,"<p>I am trying to update the value of a table using the AWS-app sync graphql API,&#xA;I am able to create data and add it in a table using graphql mutation in lambda&#xA;but when I am trying to update the data its not working.&#xA;I am calling this lambda service from an API Gateway.</p>&#xA;&#xA;<p>I am referring this article to code&#xA;<a href=""https://cloudonaut.io/calling-appsync-graphql-from-lambda/"" rel=""nofollow noreferrer"">https://cloudonaut.io/calling-appsync-graphql-from-lambda/</a></p>&#xA;&#xA;<p>I would like to mentioned git no error in cloud watch log </p>&#xA;&#xA;<p>Here is the schema for my graphql </p>&#xA;&#xA;<pre><code>type Mutation {&#xA;createLib_content(input: CreateLib_contentInput!): lib_content&#xA;    @aws_iam&#xA;updateLib_content(input: UpdateLib_contentInput!): lib_content&#xA;    @aws_iam&#xA;deleteLib_content(input: DeleteLib_contentInput!): lib_content&#xA;}&#xA;&#xA;input CreateLib_contentInput {&#xA;content: String&#xA;userId: String&#xA;}&#xA;&#xA;input UpdateLib_contentInput {&#xA;content: String&#xA;id: ID!&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Create Mutation</p>&#xA;&#xA;<pre><code>      graphqlData = await clientDetails.mutate({&#xA;    mutation: gql(`&#xA;   mutation CreateLibContent($input: CreateLib_contentInput!) {&#xA;              createLib_content(input: $input) {&#xA;                                      id&#xA;                                      content&#xA;                                               }&#xA;    }`),&#xA;    variables: {&#xA;      input: {&#xA;          content : {},&#xA;          userId : identitiesDetails.userId&#xA;      }&#xA;    },&#xA;  });&#xA;</code></pre>&#xA;&#xA;<p>Update Mutation</p>&#xA;&#xA;<pre><code>const mutation = gql(`&#xA;   mutation UpdateLibContent($input: UpdateLib_contentInput!) {&#xA;updateLib_content(input: $input) {&#xA;  userId&#xA;  content&#xA;}&#xA; }`);&#xA;  await clientDetails.mutate({&#xA;       mutation,&#xA;       variables: {&#xA;             input: {&#xA;                     id : ""2947c37e-6f76-40d8-8c10-4cd6190d3597"",&#xA;                     content : JSON.stringify(event)&#xA;                    }&#xA;                  }&#xA;  }).promise;&#xA;</code></pre>&#xA;",11358891,,11358891,2020-05-24 10:45:53,2020-05-24 14:04:18,Calling AWS AppSync graphql API from Lambda,<amazon-web-services><aws-lambda><graphql><aws-api-gateway><aws-appsync>,1,9,0,2020-05-24 09:15:53
61994158,1,,,-1,85,"<p>I have a headless WordPress installation, and using a React frontend to query posts with a search query of:</p>&#xA;&#xA;<pre><code>  posts(where: {search: $searchStr}) {&#xA;    nodes {&#xA;        title&#xA;        content&#xA;        link&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>but would like to include media files in the search results as well. I'm able to query and log out the mediaItems from the following additional query:</p>&#xA;&#xA;<pre><code>  mediaItems {&#xA;    nodes {&#xA;      title&#xA;      sourceUrl&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>but unable to figure out how to include these in the search results. How do I combine the <code>posts</code> and <code>mediaItems</code> in the same search query and return all results based on the search string?</p>&#xA;&#xA;<p><strong>Updated with full query</strong></p>&#xA;&#xA;<p>The full query I'm using, passes the search query into the posts GraphQL query. Since <code>mediaItems</code> and <code>posts</code> are both top level in WordPress, how can I combine the two queries so that all posts and all media items are returned based on the search parameter?</p>&#xA;&#xA;<pre><code>query appQuery($searchStr: String) {&#xA;  posts(where: {search: $searchStr}) {&#xA;    nodes {&#xA;        title&#xA;        content&#xA;        link&#xA;        tags{&#xA;          nodes {&#xA;            name&#xA;          }&#xA;        }&#xA;    }&#xA;  }&#xA;  mediaItems {&#xA;    nodes {&#xA;      title&#xA;      sourceUrl&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",3438917,,3438917,2020-05-26 13:19:33,2020-05-26 13:19:33,Include mediaItems in GraphQL Wordpress query search,<reactjs><wordpress><graphql>,1,0,0,2020-05-25 00:38:16
62003230,1,,,0,87,"<p>I am building a graphql in nodejs, using <a href=""https://github.com/michalkvasnicak/aws-lambda-graphql"" rel=""nofollow noreferrer"">michalkvasnicak/aws-lambda-graphql</a> to work with lambda. And use API Gateway as the endpoint for my lambda. It works fine for HTTP connection. But how can I make it work with websocket connection? </p>&#xA;&#xA;<p>I see in the API Gateway, I need to define <code>$connect</code>, <code>$default</code> and routes but I don't know how I can make them work with my graphql lambda? </p>&#xA;",5421539,,1948292,2020-05-25 23:05:36,2020-05-25 23:05:36,How can I build graphql lambda with API Gateway websocket?,<aws-lambda><graphql><aws-api-gateway>,0,2,0,2020-05-25 13:17:41
62003811,1,,,0,594,"<p>For complex field resolver, I know <a href=""https://docs.amplify.aws/cli/graphql-transformer/directives#function"" rel=""nofollow noreferrer"">@function directive</a> is the way to go.</p>&#xA;&#xA;<p>But how about those very simple computed fields. @function directive with lambda is a little too much. I see prisma has inline javascript function supported. see <a href=""https://stackoverflow.com/a/55033761/1443505"">the answer</a> of similar quest.</p>&#xA;&#xA;<p>Not sure whether aws-amplify graphql support inline function. </p>&#xA;",1443505,,,,2020-05-26 12:51:11,aws amplify graphql computed field inline resolver,<graphql><aws-amplify>,1,2,0,2020-05-25 13:50:49
62022571,2,,62003811,2,,"<p>You can override the default VTL resolver for the field, just adding the logic you want.</p>&#xA;&#xA;<p><a href=""https://www.fullsapps.com/2019/03/aws-amplify-overriding-auto-generated.html"" rel=""nofollow noreferrer"">This article</a> goes into detail on a simple use case (similar to yours I think)</p>&#xA;&#xA;<p>Just a few steps</p>&#xA;&#xA;<ul>&#xA;<li>Add the field to your schema</li>&#xA;<li>Build your API</li>&#xA;<li>Look for the auto-generated resolver (<code>amplify/backend/api/client/build/resolvers</code>) The naming convention is straight-forward.</li>&#xA;<li>Copy it to <code>amplify/backend/api/client/resolvers</code></li>&#xA;<li>Change it as needed</li>&#xA;<li>Push your changes to Amplify</li>&#xA;</ul>&#xA;&#xA;<p>In the article he has just added a new set item</p>&#xA;&#xA;<pre><code>## [Start] Prepare DynamoDB PutItem Request. **&#xA;$util.qr($context.args.input.put(""createdAt"", $util.time.nowISO8601()))&#xA;$util.qr($context.args.input.put(""updatedAt"", $util.time.nowISO8601()))&#xA;# The next line was added&#xA;$util.qr($context.args.input.put(""active"", false))&#xA;</code></pre>&#xA;&#xA;<p>AWS has some <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-programming-guide.html"" rel=""nofollow noreferrer"">tutorials</a> over VTL that you might want to take a look.</p>&#xA;&#xA;<p>And Amplify has more <a href=""https://docs.amplify.aws/cli/graphql-transformer/resolvers#overwriting-resolvers"" rel=""nofollow noreferrer"">docs</a> on custom resolvers using VTL</p>&#xA;",1742659,,,,2020-05-26 12:51:11,"",,0,0,0,2020-05-26 12:51:11
62071670,2,,61846995,0,,"<p>Looks like you need to group values from different records&#xA;I guess you have two option here&#xA;1) try to group it on SQL level (maybe better to create dateview)&#xA;2) do it on runtime level, in code. from my point of view - it's bad. any grouping in code it's much slower then the same operation in db-level</p>&#xA;",4679729,,,,2020-05-28 18:12:20,"",,0,0,0,2020-05-28 18:12:20
62130541,1,,,0,447,"<pre><code>{&#xA;  ""version"": ""2018-05-29"",&#xA;  ""operation"": ""Query"",&#xA;  ""index"": ""sportLeague"",&#xA;  ""query"": {&#xA;  ""expression"": ""sportIdLeagueId = :sportIdLeagueId and gsSK = :gsSK"",&#xA;    ""expressionValues"": {&#xA;    #set( $sportIdLeagueId = $util.dynamodb.toDynamoDBJson(""fixture#${ctx.args.input.sportId}#${ctx.args.input.leagueId}"") )&#xA;    "":sportIdLeagueId"": $sportIdLeagueId,&#xA;  }&#xA; },&#xA; ""filter"" : {&#xA;    ""expression"" : ""between(#title, :title)"",&#xA;    ""expressionNames"" : {&#xA;        ""#startDateUtc"" : ""startDateUtc""&#xA;    }&#xA;    ""expressionValues"" : {&#xA;        "":start"" : $util.dynamodb.toDynamoDBJson($ctx.args.input.startDateUtc)&#xA;    }&#xA;}&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>i need a between condition to satisfy the requirement&#xA;requirement: get data between two dates i.e start date and end date</p>&#xA;",10945809,,,,2020-06-01 20:27:38,how to define a resolver in appsync to get a range of data between a particular dates in graphQL,<graphql><amazon-dynamodb><aws-appsync>,1,0,0,2020-06-01 10:52:11
62136495,2,,62093189,2,,"<p>Thanks, @Bms bharadwaj! The issue was on my side in understanding how the data is returned in the dataloader. I ended up using a MappedBatchLoader to bring the data in a map. The key in the map being the accountId.</p>&#xA;&#xA;<pre><code>private DataLoader&lt;Long, List&lt;Customer&gt;&gt; getCustomerDataLoader() {&#xA;    MappedBatchLoader&lt;Long, List&lt;Customer&gt;&gt; customerMappedBatchLoader = accountIds -&gt; CompletableFuture.supplyAsync(() -&gt; {&#xA;        List&lt;Customer&gt; customers = customerRepository.findCustomersByAccountId(accountIds);&#xA;        Map&lt;Long, List&lt;Customer&gt;&gt; groupByAccountId = customers.stream().collect(Collectors.groupingBy(cust -&gt; cust.getAccountId()));&#xA;        return groupByAaccountId;&#xA;    });&#xA;//    }, new SyncTaskExecutor());&#xA;&#xA;    return DataLoader.newMappedDataLoader(customerMappedBatchLoader);&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This seems to have done the trick because before I was issuing hundreds of SQL statement and now down to 2 (one for the driver SQL...accounts and one for the customers).</p>&#xA;",6614960,,,,2020-06-01 16:23:46,"",,0,0,0,2020-06-01 16:23:46
62138934,1,,,1,974,"<p>For Android applications, I used to use the AppSync client to query data from DynamoDB when I use GSIs. Nowadays, I am trying to use Amplify Libraries to utilize the DataStore features. After reading the documentation and code, I realized that the Amplify Libraries don't support these kinds of queries, unless I'm mistaken. The only way I have found so far is using list and applying a filter on the results but that is not ideal considering the Read Capacity. Does anyone find a document about this issue? are there any useful plugins can be used in this case? </p>&#xA;&#xA;<p>For clarification please refer to the following schema from AWS doc:</p>&#xA;&#xA;<pre><code>type Item @model&#xA;  @key(fields: [""orderId"", ""status"", ""createdAt""])&#xA;  @key(name: ""ByStatus"", fields: [""status"", ""createdAt""], queryField: ""itemsByStatus"") {&#xA;  orderId: ID!&#xA;  status: Status!&#xA;  createdAt: AWSDateTime!&#xA;  name: String!&#xA;}&#xA;&#xA;enum Status {&#xA;  DELIVERED&#xA;  IN_TRANSIT&#xA;  PENDING&#xA;  UNKNOWN&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>With AppSync you can query the data based on ByStatus GSI this way:</p>&#xA;&#xA;<pre class=""lang-java prettyprint-override""><code>appSyncClient.query(itemsByStatusQuery.builder().build())&#xA;</code></pre>&#xA;&#xA;<p>Now, I am using Amplify API category. It seems to me that I can only use <code>getItem</code> or <code>listItems</code> queries.</p>&#xA;&#xA;<p>I wonder if there is a way to do the same with Amplify libraries.</p>&#xA;",13477230,,695787,2020-06-08 02:48:51,2020-06-08 02:48:51,DynamoDB GSI based queries using Amplify Libraries,<android><graphql><aws-amplify><aws-appsync><dynamodb-queries>,2,0,0,2020-06-01 18:49:48
62140496,2,,62130541,0,,"<p>You attribute names and values need to match what is in your expression. (<code>:title</code> needs to have a corresponding value in <code>expressionNames</code> and <code>expressionValues</code>)</p>&#xA;&#xA;<p>Also the between operator syntax is <code>BETWEEN :startDateUtc AND :endDateUtc</code></p>&#xA;&#xA;<p>There is a tutorial for using DynamoDB Query in AppSync:</p>&#xA;&#xA;<p><a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html#setting-up-the-allpostsbyauthor-resolver-ddb-query"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html#setting-up-the-allpostsbyauthor-resolver-ddb-query</a></p>&#xA;&#xA;<p>DynamoDB expressions:&#xA;<a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ConditionExpressions.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ConditionExpressions.html</a></p>&#xA;",1060799,,,,2020-06-01 20:27:38,"",,0,0,0,2020-06-01 20:27:38
62145181,1,,,4,370,"<p>I'm using Hasura as my backend and Google's Firebase for auth in a React app. I have the following roles and constructs:</p>&#xA;&#xA;<ul>&#xA;<li><code>Manager</code> - these are my paying customers. They can own 1 or more <code>Team</code>.</li>&#xA;<li><code>Employee</code> - these are just normal users. They must be invited to be part of a <code>Team</code> by a <code>Manager</code> via email</li>&#xA;</ul>&#xA;&#xA;<p>Both <code>Manager</code> and <code>Employee</code> can sign in / sign up using their Google account or their own email/password.</p>&#xA;&#xA;<p>I have the GraphQL models all set up with the correct relationship and everything. The only thing I can't figure out is how to set the <code>x-hasura-role</code> in Firebase function's hook.</p>&#xA;&#xA;<p>How do I put business logic in this snippet? (i.e. how do I distinguish the <code>Manager</code> from the <code>Employee</code> role)</p>&#xA;&#xA;<pre><code>exports.processSignUp = functions.auth.user().onCreate(user =&gt; {&#xA;    const customClaims = {&#xA;        ""https://hasura.io/jwt/claims"": {&#xA;            ""x-hasura-default-role"": ""manager"",&#xA;            ""x-hasura-allowed-roles"": [""manager""], // ????????? how to check ""employee""?&#xA;            ""x-hasura-user-id"": user.uid&#xA;        }&#xA;    };&#xA;&#xA;    ...&#xA;})&#xA;</code></pre>&#xA;",5429504,,,,2020-06-02 05:02:48,Dynamically set X-Hasura-role in the claim with Firebase,<javascript><firebase><graphql><hasura>,0,1,0,2020-06-02 05:02:48
62164027,1,,,1,374,"<p>Consider below query:</p>&#xA;&#xA;<pre class=""lang-js prettyprint-override""><code>const fetchItemsQuery = `query(&#xA;  $paginationPageSize: Int! &#xA;  $paginationPageNumber: Int!&#xA;  $searchByNameRequest: String&#xA;  $categoryID: String&#xA;) {&#xA;  getItems(&#xA;    paginationPageSize: $paginationPageSize&#xA;    paginationPageNumber: $paginationPageNumber&#xA;    searchByNameRequest: $searchByNameRequest&#xA;    categoryID: $categoryID&#xA;  ) {&#xA;    // ...&#xA;  }&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>If to submit it from client side with variables:</p>&#xA;&#xA;<pre><code>{&#xA;  paginationPageSize: 20,&#xA;  paginationPageNumber: 1&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>in AWS App Sync logs, it reads:</p>&#xA;&#xA;<pre><code>{&#xA;  paginationPageSize: 20,&#xA;  paginationPageNumber: 1,&#xA;  searchByNameRequest: null,&#xA;  categoryID: null&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I checked the request payload from browser - no nulls, just</p>&#xA;&#xA;<pre><code>{&#xA;  paginationPageSize: 20,&#xA;  paginationPageNumber: 1&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So the cause is not in frontend side. </p>&#xA;&#xA;<p>I found out that the <code>null</code> substitution occurring in <strong>request resolving template</strong>: </p>&#xA;&#xA;<pre><code>{&#xA;  ""version"" : ""2017-02-28"",&#xA;  ""operation"": ""Invoke"",&#xA;  ""payload"": {&#xA;    ""field"": ""listProduct"",&#xA;    ""arguments"": $util.toJson($context.args) // &lt;- here&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p><code>$util.toJson</code> uses Apache Velocity.</p>&#xA;&#xA;<p>Can I avoid <code>$util.toJson($context.args)</code> will substitute the nulls in my request variables? </p>&#xA;&#xA;<p><strong>Important:</strong> the solution should not touch the <em>explicitly</em> submitted nulls .</p>&#xA;",4818123,,4818123,2020-06-03 08:20:31,2020-06-03 08:20:31,How to avoid implicit 'null' substitution in GraphQL (AWS App Sync)?,<amazon-web-services><graphql><velocity><aws-appsync>,1,1,0,2020-06-03 01:56:28
62173714,2,,59732496,1,,"<p>In my case, it was a permissions issue in Drupal. I solved it by going to admin &rarr; people &rarr; permissions and setting all permissions related to GraphQL for the anonymous user.</p>&#xA;",13672798,,10607772,2020-06-03 19:15:26,2020-06-03 19:15:26,"",,0,0,0,2020-06-03 13:12:56
62174366,1,62174781,,0,13,"<p>Here's the way I pass variables now:</p>&#xA;&#xA;<pre><code>mutation Test($a: Int, $b: Int, $c: Int, $d: Int) {&#xA;  test(a: $a, b: $b, c: $c, d: $d) {&#xA;    id&#xA;  }&#xA;}&#xA;&#xA;// Example&#xA;{&#xA;  a: 1,&#xA;  b: 2,&#xA;  c: 3,&#xA;  d: 4&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I want to put these variables into an input:</p>&#xA;&#xA;<pre><code>// Example&#xA;{&#xA;  first: {&#xA;    a: 1,&#xA;    b: 2&#xA;  },&#xA;  second: {&#xA;    c: 3,&#xA;    d: 4&#xA;  }&#xA;}&#xA;&#xA;// GraphQL&#xA;input TestInput {&#xA;  first: First&#xA;  second: Second&#xA;}&#xA;&#xA;input First {&#xA;  a: Int&#xA;  b: Int&#xA;}&#xA;&#xA;input Second {&#xA;  c: Int&#xA;  d: Int&#xA;}&#xA;&#xA;// The code below doesn't work&#xA;mutation Test($input: TestInput) {&#xA;  test(a: $input.first.a, b: $input.first.b, c: $input.second.c, d: $input.second.d) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This approach will save me from creating mapping functions and VM/Models in my code.&#xA;Is it even possible?</p>&#xA;",4725496,,,,2020-06-03 14:01:01,Use input fields like variables,<graphql>,1,0,0,2020-06-03 13:42:57
62175987,2,,62145701,1,,"<ol>&#xA;<li>Create a new mutation in your schema</li>&#xA;<li>Add a mapping template for your mutation that returns locally (i.e. has no attached datasource)</li>&#xA;<li>Add the mutation to the required subscription</li>&#xA;<li>Call the mutation from your lambda to notify subscribers</li>&#xA;</ol>&#xA;&#xA;<p>See here for more details:&#xA;<a href=""https://aws.amazon.com/premiumsupport/knowledge-center/appsync-notify-subscribers-real-time/"" rel=""nofollow noreferrer"">https://aws.amazon.com/premiumsupport/knowledge-center/appsync-notify-subscribers-real-time/</a></p>&#xA;",1443106,,,,2020-06-03 14:57:07,"",,0,0,0,2020-06-03 14:57:07
62179586,1,62269314,,0,371,"<p>I am implementing an IAM solution for a platform where I require secure login and multiple levels of access control to different parts of the platform. I am using <a href=""https://grandstack.io/"" rel=""nofollow noreferrer"">this</a> tech stack to build an MVP (<a href=""https://grandstack.io/"" rel=""nofollow noreferrer"">https://grandstack.io/</a>)</p>&#xA;",12111060,,,,2020-06-08 18:56:02,How to integrate Keycloak with a graph database like neo4j?,<neo4j><graphql><keycloak><graph-databases><keycloak-services>,1,0,0,2020-06-03 17:59:12
62184628,2,,60235085,0,,"<p>I'm not sure what <code>result</code> is but you can try:</p>&#xA;&#xA;<pre><code>const result = {&#xA;  index: 1,&#xA;  body: 'blabla',&#xA;  hasRead: true,&#xA;}&#xA;&#xA;await API.graphql(graphqlOperation(mutations.deleteTodo, {input: { ...result }}));&#xA;</code></pre>&#xA;",12340869,,10251345,2020-06-04 00:21:05,2020-06-04 00:21:05,"",,0,0,0,2020-06-03 23:51:53
62186847,1,,,2,527,"<p>I am using Appsync as graphql server. I have read through this article <a href=""https://aws.amazon.com/blogs/mobile/using-multiple-authorization-types-with-aws-appsync-graphql-apis/"" rel=""nofollow noreferrer"">https://aws.amazon.com/blogs/mobile/using-multiple-authorization-types-with-aws-appsync-graphql-apis/</a> which allows me to use multiple authorisation methods in graphql. </p>&#xA;&#xA;<p>I have two fields on graphql schema which require API Key authorization. Can I assign one key for one field and a different key for different field?</p>&#xA;&#xA;<p>By looking at the <code>@aws_api_key</code>, it doesn't have extra parameter like <code>name</code> or something. It seems that if a field is authorized by API_KEY, it can be accessed by any API KEY generated by the appsync.</p>&#xA;&#xA;<p>Can I create one APIKEY for a particular field? I am looking for something like below schema:</p>&#xA;&#xA;<pre><code>getAllPosts(): [Post]&#xA;    @aws_api_key(key1)&#xA;&#xA;&#xA;updatePost(post: Post): Post&#xA;    @aws_api_key(key2)&#xA;</code></pre>&#xA;&#xA;<p>I'd like to use <code>key1</code> for <code>getAllPosts</code> and <code>key2</code> for <code>updatePost</code>. How can I achieve this in appsync?</p>&#xA;",5421539,,5421539,2020-06-04 05:38:57,2020-06-05 05:32:58,How can I use two API Key to authorize two graphql fields separately in Appsync?,<amazon-web-services><graphql><aws-appsync>,1,0,0,2020-06-04 04:21:00
62189610,1,,,0,209,"<p>I'm running an Apollo GraphQL server behind a CloudFront distribution.</p>&#xA;&#xA;<p>CloudFront TTL settings are set to the following:</p>&#xA;&#xA;<ul>&#xA;<li>Minimum TTL: 0</li>&#xA;<li>Maximum TTL: 604800</li>&#xA;<li>Default TTL: 60</li>&#xA;</ul>&#xA;&#xA;<p>Testing locally, I'm able to see the <code>cache-control</code> header (no-cache). However behind the CloudFront distribution, <code>cache-control</code> header is missing:</p>&#xA;&#xA;<p><strong>Local Test (no-cache)</strong>&#xA;<a href=""https://i.stack.imgur.com/Y0oBO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Y0oBO.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><strong>CloudFront Test (no-cache)</strong>&#xA;<a href=""https://i.stack.imgur.com/rFLJo.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rFLJo.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<hr>&#xA;&#xA;<p>However, <strong>when I set a cache-control max-age, it works both on my local machine &amp; behind CloudFront</strong>:</p>&#xA;&#xA;<p><strong>Local Test (maxage 60)</strong>&#xA;<a href=""https://i.stack.imgur.com/AZvpz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AZvpz.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<p><strong>Local Test (maxage 60)</strong>&#xA;<a href=""https://i.stack.imgur.com/Pp0vB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Pp0vB.png"" alt=""enter image description here""></a></p>&#xA;&#xA;<hr>&#xA;&#xA;<p><strong>Why does CloudFront ignore the cache-control: no-cache header? It seems that it defaults to my default TTL (60)</strong></p>&#xA;&#xA;<p>Thanks and looking forward to any inputs!</p>&#xA;",7110144,,,,2020-06-04 07:58:18,CloudFront ignores cache-control: no-cache response header,<caching><amazon-cloudfront><apollo-server>,0,2,0,2020-06-04 07:58:18
62197420,1,,,2,72,"<p>I need to develop my backed application in <strong>NodeJS ExpressJS and GraphQL,</strong> and I am using the Apollo GraphQL server for this. Now I have to connect this GraphQL to <strong>ElasticSearch</strong> so that I can directly write the ElasticSearch Queries in <strong>Apollo Playground</strong> like earlier I was using for GraphQL Queries. </p>&#xA;&#xA;<p><em>Can someone help me with this Scenario?</em></p>&#xA;",5371567,,,,2022-11-25 11:32:55,Need Solution to integrate Node+Express+GraphQL+ApolloServer+ElasticSearch,<elasticsearch><graphql><apollo-server><express-graphql><graphql-playground>,2,1,0,2020-06-04 14:41:16
62201051,2,,62145701,0,,"<p>Do you need to include the lambda result in the event you want to publish to your clients? If so, based on what Ben provided, you will need to include the lambda result in the mutation result resolver template. And AppSync will publish the result as part of the event to your clients.</p>&#xA;",5286920,,,,2020-06-04 17:49:51,"",,0,0,0,2020-06-04 17:49:51
62208797,2,,62186847,2,,<p>No you can't use multiple API keys on a single API. However you can configure multiple user pools if you use Amazon Cognito.</p>&#xA;,1060799,,,,2020-06-05 05:32:58,"",,0,2,0,2020-06-05 05:32:58
62212931,1,,,0,837,"<p>Graphql Api and Auth added on a brand new project.</p>&#xA;&#xA;<p>I go to Amplify console -> myapp -> api -> GraphQL API and click on View in AppSync. On the run query part, I run A sample query like this:</p>&#xA;&#xA;<pre><code>{&#xA;  listTodos {&#xA;    items {&#xA;        name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>And the response is a UnauthorizedException. This is expected and working right.</p>&#xA;&#xA;<p>Then, if I log in with a cognito user, the response is some example TODOS. This is also fine.</p>&#xA;&#xA;<p>If I go to Cognito and disable the user, I can still run the query. I was a expecting an unauthorized or something else than actually being able to query for my data (as the <strong>user is disabled</strong>).</p>&#xA;",646334,,,,2020-06-06 03:15:46,Disabled users in AWS Amplify Cognito still can access to data in the API,<amazon-web-services><graphql><amazon-cognito><aws-appsync>,1,0,0,2020-06-05 10:10:18
62248174,1,62248362,,0,309,"<p>I use Apollo Client on my Nuxt projects to query GraphQL endpoints and it works great. But now, I need to query an Elasticsearch endpoint on AWS. How would I query this endpoint using my existing Apollo client?</p>&#xA;",2748245,,,,2020-06-07 16:28:57,How to use ApolloQuery Vue component to query an Elasticsearch endpoint?,<elasticsearch><nuxt.js><apollo-client>,1,0,0,2020-06-07 16:14:12
62248362,2,,62248174,2,,"<p>You should not query the ElasticSearch directly from your Vue component. You should query your ApolloGraph Server that will query your ElasticSearch end point and return the result from that query.</p>&#xA;&#xA;<p>You can query the Elasticsearch from inside your resolver. The ApolloGraphQL resolver accepts an promise as result and will wait for this promise get resolved.</p>&#xA;&#xA;<p>If you have a resolver like this:</p>&#xA;&#xA;<pre><code>const resolvers = {&#xA;  Query: {&#xA;    user(parent, args, context, info) {&#xA;        let bar = args.id; &#xA;        return queryElasticSearch(bar)&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>(For reference: <a href=""https://www.apollographql.com/docs/apollo-server/data/resolvers/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/data/resolvers/</a>)</p>&#xA;&#xA;<p>The ElasticSearch have this client wich you can connect to query your endpoint: <a href=""https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/client-usage.html"" rel=""nofollow noreferrer"">https://www.elastic.co/guide/en/elasticsearch/client/javascript-api/current/client-usage.html</a></p>&#xA;&#xA;<p>and in queryElasticSearch you can have something like this:</p>&#xA;&#xA;<pre><code>async function queryElasticSearch(bar){&#xA;   const result = await client.search({&#xA;   index: 'my-index',&#xA;   body: { foo: bar }&#xA;  })&#xA;  return result;&#xA;}&#xA;</code></pre>&#xA;",1762348,,,,2020-06-07 16:28:57,"",,0,0,0,2020-06-07 16:28:57
62250494,1,62395597,,0,1358,"<p>I have 3 main types: Company, Service, and Specialty. Every Company has a list of Service. Every Service have a list of Specialty. Every Specialty have a list of Specialty (sub-specialties).</p>&#xA;&#xA;<pre><code>Company 1&#xA;- Service 1&#xA;-- Specialty 1&#xA;--- Sub-specialty 1&#xA;</code></pre>&#xA;&#xA;<p>So&#xA;I am working on this datamodel on Prisma 1.34:</p>&#xA;&#xA;<pre><code>type Company {&#xA;  id: ID! @id&#xA;  name: String! @unique&#xA;  services: [Service]&#xA;}&#xA;type Service {&#xA;  id: ID! @id&#xA;  name: String! @unique&#xA;  companies: [Company]! @relation(link: TABLE)&#xA;  specialties: [Specialty]&#xA;}&#xA;type Specialty {&#xA;  id: ID! @id&#xA;  name: String! @unique&#xA;  companies: [Company]! @relation(link: TABLE)&#xA;  services: [Service] @relation(link: TABLE)&#xA;  sub_specialties: [Specialty] @relation(link: TABLE)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>My problem is, when I add one Company and use the same Service for that Company in another Company, all other Specialty and Sub-specialty records are coming along with that Service. I want to make Specialty and Sub-specialty fields unique for every company but they also should be under related Service under every company.</p>&#xA;&#xA;<p>I have been working on it for the past 3 days, I would appreciate any help.</p>&#xA;",7011860,,,,2020-06-15 19:31:01,How to create 4-level nested relationship with Prisma,<graphql><prisma>,2,0,0,2020-06-07 19:23:51
62264113,2,,62263964,1,,"<p><a href=""https://www.apollographql.com/docs/react/data/local-state/#handling-client-fields-with-resolvers"" rel=""nofollow noreferrer"">Handling @client fields with resolvers</a></p>&#xA;&#xA;<pre><code>gqlClient.query({&#xA;    query: gql`&#xA;        {&#xA;            groups {&#xA;                name&#xA;                icon @client&#xA;            }&#xA;        }&#xA;    `,&#xA;});&#xA;</code></pre>&#xA;",8439123,,,,2020-06-08 14:15:01,"",,0,0,0,2020-06-08 14:15:01
62287963,2,,62287863,2,,<p>You don't have return statement from the first <code>#Array.map</code> callback:</p>&#xA;&#xA;<pre><code>this.props.data.allSongsJson.group.map(({ edges }) =&gt; {&#xA;  return edges.map(({ node }) =&gt; {&#xA;    return &lt;p key={node.id}&gt;Hello World&lt;/p&gt;;&#xA;  });&#xA;});&#xA;</code></pre>&#xA;,7882470,,,,2020-06-09 16:59:41,"",,0,0,0,2020-06-09 16:59:41
62300902,2,,62181428,3,,"<p>You can not combine these two queries into one.</p>&#xA;&#xA;<p>What you can do is create a Postgres function and query that function instead as described in Hasura's documentation:</p>&#xA;&#xA;<p><a href=""https://hasura.io/docs/1.0/graphql/manual/schema/custom-functions.html#example-postgis-functions"" rel=""nofollow noreferrer"">https://hasura.io/docs/1.0/graphql/manual/schema/custom-functions.html#example-postgis-functions</a></p>&#xA;",885968,,,,2020-06-10 10:05:27,"",,0,0,0,2020-06-10 10:05:27
62304242,1,,,1,3043,"<p>I want to import the hasura metadata from CI/CD pipeline. I have tried using cli-migrations-v2 image. I am getting following error when it tries to import the metadata.</p>&#xA;&#xA;<pre><code> ... level=fatal msg=""failed to apply metadata: cannot apply metadata on the database: [parse-failed] expected 1 or 2, encountered 0 ($[1].version)""&#xA;&#xA;</code></pre>&#xA;&#xA;<p>The command I am using is as follows-</p>&#xA;&#xA;<pre><code>sudo docker run -d -p 8080:8080 --net=host --name=hasura-metadata-v2 -v /home/hasura_migrations/metadata:/hasura-metadata     -e HASURA_GRAPHQL_DATABASE_URL=postgres://hasurauser:hasurauser@localhost:5432/new_db_migration        -e HASURA_GRAPHQL_ENABLE_CONSOLE=true   hasura/graphql-engine:v1.2.1.cli-migrations-v2&#xA;</code></pre>&#xA;&#xA;<p>It is same as the one mentioned in the hasura documentation <a href=""https://hasura.io/docs/1.0/graphql/manual/migrations/advanced/auto-apply-migrations.html#auto-apply-migrations"" rel=""nofollow noreferrer"">https://hasura.io/docs/1.0/graphql/manual/migrations/advanced/auto-apply-migrations.html#auto-apply-migrations</a></p>&#xA;",6681351,,,,2020-06-15 19:20:14,"hasura cli-migrations-v2 failed to apply metadata: cannot apply metadata on the database: [parse-failed] expected 1 or 2, encountered 0 ($[1].version)",<graphql><hasura><database-metadata>,1,0,0,2020-06-10 13:01:01
62304696,1,62941945,,1,1298,"<p>I'd like to get simple AppSync resolver for EslasticSearch service this way:</p>&#xA;&#xA;<p>Schema:</p>&#xA;&#xA;<pre><code>type Query {&#xA;  searchESIndex(input: ESModelTypeInput!): ESModelRespType&#xA;}&#xA;&#xA;input ESModelTypeInput {&#xA;  es_body: String&#xA;  es_index_name: String&#xA;}&#xA;&#xA;type ESModelRespType {&#xA;  es_resp: String&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>So the point is to give only index name where to search and the body string that contains full stingified body or query&#xA;and to return back full response of ElasticSearch as a string (for further parsing)</p>&#xA;&#xA;<p>Resolver:</p>&#xA;&#xA;<pre><code>{&#xA;  ""version"":""2017-02-28"",&#xA;  ""operation"":""GET"",&#xA;  ""path"":""/$context.args.es_index_name/_search"",&#xA;  ""params"":{&#xA;      ""body"": $util.toJson(""$context.args.es_body"")&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Response template:</p>&#xA;&#xA;<pre><code>## i need full result as a string, but how to convert it?&#xA;$context.result&#xA;</code></pre>&#xA;&#xA;<p>The Query would be:</p>&#xA;&#xA;<pre><code>query searchESIndex($esinput: ESModelTypeInput!) {&#xA;  searchESIndex(input: $esinput) {&#xA;    es_resp&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Variables:</p>&#xA;&#xA;<pre><code>{&#xA;    ""esinput"": {&#xA;        ""es_index_name"": ""test2"",&#xA;        ""es_body"": ""{\""size\"": 10}""&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Also i supposed to have similar mutation</p>&#xA;&#xA;<pre><code>type Mutation {&#xA;    insertToESIndex(input: ESModelTypeInput!): ESModelRespType&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Unfortunately, all my tries were failed.&#xA;Is it possible to do it?&#xA;Could you help me with that?</p>&#xA;",13720962,,13720962,2020-06-10 13:37:21,2020-07-21 17:46:00,simple AWS AppSync schema and resolver for ElasticSearch service,<amazon-web-services><elasticsearch><graphql><aws-appsync>,1,3,0,2020-06-10 13:22:59
62316967,1,62757485,,-1,1478,"<p>Is there a way in apollo-graphql to define name of the field from values passed in input? Something like below, how to define key[i] here?</p>&#xA;&#xA;<pre><code>type response{&#xA;      key[0] : { &#xA;            field1 : String,&#xA;            field2 : String&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>where input is </p>&#xA;&#xA;<pre><code>input request {&#xA;       Keys: [String]&#xA;    }&#xA;</code></pre>&#xA;&#xA;<p>response of rest call that I am trying to read</p>&#xA;&#xA;<pre><code>{&#xA; ""plan"" :  {&#xA;     ""key1"" : {&#xA;           field1 : ""value1""&#xA;           field2 : ""value2""&#xA;      },&#xA;      ""key2"" : {&#xA;           field1 : ""value1""&#xA;           field2 : ""value2""&#xA;      }&#xA;    }&#xA; }&#xA;</code></pre>&#xA;",837593,,,,2020-11-26 07:16:07,Apollo-GraphQL field type for object with dynamic keys from input type,<graphql><apollo-server><express-graphql><restdatasource>,1,0,0,2020-06-11 04:16:16
62323260,1,63314200,,1,173,<p>Is it possible to use AppSync and GraphQL without mapping templates? &#xA;Because Serverless has a limit of 200 resources and every mapping template is new resource.</p>&#xA;&#xA;<p>Thank you!</p>&#xA;,11910258,,,,2020-08-08 10:11:27,Is it possible to use AppSync and GraphQL without mapping templates?,<graphql><aws-appsync><aws-serverless>,2,2,0,2020-06-11 11:22:22
62326165,1,62341915,,1,1678,"<p>I'm using Auth0 for authentication and authorization in my app and I've specified a rule for jwt-tokens. But I get this error message in the console, ""Error: GraphQL error: claims key: '<a href=""https://hasura.io/jwt/claims"" rel=""nofollow noreferrer"">https://hasura.io/jwt/claims</a>' not found"". &#xA;Why? What could I possibly have missed?</p>&#xA;",7575049,,,,2020-08-29 00:07:44,"Why do I get error message ""Error: GraphQL error: claims key: 'https://hasura.io/jwt/claims' not found""?",<authentication><graphql><jwt><auth0><hasura>,1,0,0,2020-06-11 14:00:04
62341135,1,,,4,527,"<p>i have spring boot application which use graphql-java-kickstart&#xA;/&#xA;graphql-spring-boot,</p>&#xA;&#xA;<p>basically i am creating graphQL server using spring boot app&#xA;which i am deploying on AWS lambda </p>&#xA;&#xA;<p>so on local if run spring-boot app then it works fine </p>&#xA;&#xA;<p>but on AWS Lambda getting error <strong>Request method 'POST' not supported</strong></p>&#xA;",4976790,,,,2020-06-19 11:19:41,/graphql POST method not allowed in springboot graphql app deployed on AWS lambda,<java><spring-boot><aws-lambda><graphql>,0,4,0,2020-06-12 09:11:20
62352620,2,,62346001,0,,"<p>When you made the API key, you had to give it access scope permissions. Your key does not have the needed scope for the resource you are trying to get. You need to change the permissions on your key, so it has permission to access the installed Apps listing. Even though that is not a listed scope, you can probably find permission to set in the list of available ones for the setting of private keys.</p>&#xA;",210841,,,,2020-06-12 21:15:56,"",,0,2,0,2020-06-12 21:15:56
62354454,2,,59620803,13,,"<p>Add this to package.json: </p>&#xA;&#xA;<pre><code>""resolutions"": {&#xA;    ""**/**/fs-capacitor"":""^6.2.0"",&#xA;    ""**/graphql-upload"": ""^11.0.0""&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>source: <a href=""https://github.com/jaydenseric/graphql-upload/issues/170#issuecomment-641938198"" rel=""noreferrer"">https://github.com/jaydenseric/graphql-upload/issues/170#issuecomment-641938198</a></p>&#xA;",10206592,,,,2020-06-13 01:16:38,"",,0,1,0,2020-06-13 01:16:38
62357614,1,,,2,541,"<p>I'm building a forum. I have a really simple database setup:</p>&#xA;&#xA;<pre><code>Users: id, display_name, email, profile&#xA;&#xA;Posts: id, title, content, user_id&#xA;</code></pre>&#xA;&#xA;<p>The user_id is a foreign key to the Users table.</p>&#xA;&#xA;<p>Permissions:</p>&#xA;&#xA;<p>For inserting/updating, X-Hasura-User-Id must equal id and user_id for inserting into the Users and Posts table. (so they can only modify their own posts)</p>&#xA;&#xA;<p>For selecting, I have it so a user can read any post, but they can only select the row of the User if id = X-Hasura-User-Id. This is so a User can only read their profile data.</p>&#xA;&#xA;<p>However, for selecting, I obviously need the user to be able to access display_name of the user's table, to display the post's author.</p>&#xA;&#xA;<p>Now I can obviously make it so for select, they only have access to this field, and everything works fine. I can return a GQL query that displays the posts and the author.</p>&#xA;&#xA;<p>But doesn't this also mean that a user can just run a query to the Users table and get a list of all the display_names, essentially showing how many users I have?</p>&#xA;&#xA;<p>Is there a way to set it up so that a user can only select their own info from the User's table, but like, if the query is 'coming from' the server, it can access the display_name? I know there are Admin roles etc but I don't think this applies here.</p>&#xA;",10917908,,,,2020-06-15 09:15:23,Hasura SELECT permissions for table relationships,<permissions><graphql><hasura>,1,0,0,2020-06-13 09:06:29
62382129,1,,,0,232,<p>Is there support for GraphQL and classic dotnet i.e ASP.NET WebAPI and not dot net core.I searched that on internet but did not find any useful resource.</p>&#xA;&#xA;<p>We have exsisting ASP.NET WebAPI where we need to select and update few columns based on request received to API.so in that case we can use GraphQL. But I did not find any resources related to it.Everywhere is dotnet core apps. </p>&#xA;,6666420,,6666420,2020-06-15 08:07:26,2020-06-20 21:54:07,GraphQL support for ASP.NET WebAPI,<c#><.net><asp.net-web-api><graphql-dotnet>,1,0,0,2020-06-15 05:53:20
62385024,2,,62357614,2,,"<blockquote>&#xA;  <p>But doesn't this also mean that a user can just run a query to the Users table and get a list of all the display_names, essentially showing how many users I have?</p>&#xA;</blockquote>&#xA;&#xA;<p>Yes</p>&#xA;&#xA;<blockquote>&#xA;  <p>Is there a way to set it up so that a user can only select their own info from the User's table, but like, if the query is 'coming from' the server, it can access the display_name?</p>&#xA;</blockquote>&#xA;&#xA;<p>No</p>&#xA;&#xA;<hr>&#xA;&#xA;<p>It's a valid concern to worry about data leakage in terms of how many users you have. But in general I would not worry about it.</p>&#xA;&#xA;<p>However, there are a few things you could do to prevent this problem.</p>&#xA;&#xA;<p>What you can do is:</p>&#xA;&#xA;<ul>&#xA;<li><p>Limit the number of rows per request (<a href=""https://hasura.io/docs/1.0/graphql/manual/deployment/production-checklist.html#limit-number-of-rows-returned"" rel=""nofollow noreferrer"">https://hasura.io/docs/1.0/graphql/manual/deployment/production-checklist.html#limit-number-of-rows-returned</a>)</p></li>&#xA;<li><p>Make sure <code>users</code> are not allowed to <strong>aggregation queries</strong>  (<a href=""https://hasura.io/docs/1.0/graphql/manual/queries/aggregation-queries.html#aggregate-fields"" rel=""nofollow noreferrer"">https://hasura.io/docs/1.0/graphql/manual/queries/aggregation-queries.html#aggregate-fields</a>)</p></li>&#xA;</ul>&#xA;&#xA;<p>Also what you can do is create a VIEW where the <code>display_name</code> is joined and added to the <code>posts</code> table.</p>&#xA;",885968,,,,2020-06-15 09:15:23,"",,0,2,0,2020-06-15 09:15:23
62393337,1,,,1,1964,"<p>I've got a very simple Nuxt app with Strapi GraphQL backend that I'm trying to use and learn more about GraphQL in the process.</p>&#xA;&#xA;<p>One of my last features is to implement a search feature where a user enters a search query, and Strapi/GraphQL performs that search based on attributes such as image name and tag names that are associated with that image. I've been reading the <a href=""https://strapi.io/documentation/3.0.0-beta.x/concepts/queries.html#api-reference"" rel=""nofollow noreferrer"">Strapi documentation</a> and there's a segment about performing a search.</p>&#xA;&#xA;<p>So in my <code>schema.graphql</code>, I've added this line:</p>&#xA;&#xA;<pre><code>type Query {&#xA;  ...other generated queries&#xA;  searchImages(searchQuery: String): [Image&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Then in the <code>/api/image/config/schema.graphql.js</code> file, I've added this:</p>&#xA;&#xA;<pre><code>module.exports = {&#xA;  query: `&#xA;    searchImages(searchQuery: String): [Image]&#xA;  `,&#xA;  resolver: {&#xA;    Query: {&#xA;      searchImages: {&#xA;        resolverOf: 'Image.find',&#xA;        async resolver(_, { searchQuery }) {&#xA;          if (searchQuery) {&#xA;            const params = {&#xA;              name_contains: searchQuery,&#xA;              // tags_contains: searchQuery,&#xA;              // location_contains: searchQuery,&#xA;            }&#xA;            const searchResults = await strapi.services.image.search(params);&#xA;            console.log('searchResults: ', searchResults);&#xA;            return searchResults;&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;  },&#xA;};&#xA;</code></pre>&#xA;&#xA;<p>At this point I'm just trying to return results in the GraphQL playground, however when I run something simple in the Playground like:</p>&#xA;&#xA;<pre><code>query($searchQuery: String!) {&#xA;  searchImages(searchQuery:$searchQuery) {&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>I get the error: <code>""TypeError: Cannot read property 'split' of undefined""</code>.</p>&#xA;&#xA;<p>Any ideas what might be going on here?</p>&#xA;&#xA;<p><strong>UPDATE:</strong>&#xA;For now, I'm using deep filtering instead of the search like so:</p>&#xA;&#xA;<pre><code>query($searchQuery: String) {&#xA;  images(&#xA;    where: {&#xA;      tags: { title_contains: $searchQuery }&#xA;      name_contains: $searchQuery&#xA;    }&#xA;  ) {&#xA;    id&#xA;    name&#xA;    slug&#xA;    src {&#xA;      url&#xA;      formats&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is not ideal because it's not an OR/WHERE operator, meaning it's not searching by tag title or image name. It seems to only hit the first where. Ideally I would like to use Strapi's search service.</p>&#xA;",3394654,,3394654,2020-06-16 14:57:10,2021-10-05 02:37:31,Strapi GraphQL search by multiple attributes,<graphql><nuxt.js><strapi>,1,0,0,2020-06-15 17:07:44
62427093,1,,,1,174,"<p>We have a system with large data (about 10 million rows in on a table). We developed it in Django framework and also we want to use Amazon Lambda for serving it. Now I have some question about it:&#xA;1- If we want to use Amazon RDS (MySql, PostgresSQL), which one is better? And relational database is a good solution for doing this? </p>&#xA;&#xA;<p>2- I read somewhere, If we want to use a relational database in Amazon Lambda, Django for each instance, opens a new connection to the DB and it is awful. Is this correct? </p>&#xA;&#xA;<p>3- If we want to use GraphQL and Graph database, Is that a good solution? Or we can combine Django Rest-API and GraphQL together?</p>&#xA;&#xA;<p>4- If we don't use Django and use Amazon AppSync, Is better or not? What are our limitations for use this.</p>&#xA;&#xA;<p>Please help me.&#xA;Thanks</p>&#xA;",4652465,,,,2020-06-17 10:48:13,Django and Amazon Lambda: Best solution for big data with Amazon RDS or GraphQL or Amazon AppSync,<django><amazon-web-services><aws-lambda><graphql><aws-appsync>,1,0,0,2020-06-17 10:41:42
62429807,2,,62414345,0,,"<p>You can use a multi-frontend workflow for that.</p>&#xA;&#xA;<p>Check their <a href=""https://docs.amplify.aws/cli/teams/multi-frontend"" rel=""nofollow noreferrer"">documentation</a> for more on how to use it.</p>&#xA;&#xA;<p><a href=""https://dev.to/norrischebl/multiple-frontends-with-aws-amplify-2p4f"" rel=""nofollow noreferrer"">This</a> post has a step by step guide.</p>&#xA;&#xA;<p>You have to:</p>&#xA;&#xA;<ul>&#xA;<li>Create a new Amplify project</li>&#xA;<li>Pull your app backend: <code>amplify pull --appId ************* --envName *******</code></li>&#xA;<li>Choose ""No"" when asked if you gonna modify your backend</li>&#xA;</ul>&#xA;&#xA;<p>The appId you can find on your <code>Amplify Console</code>.</p>&#xA;&#xA;<p>You are ready to go.</p>&#xA;",1742659,,1742659,2020-06-18 20:01:09,2020-06-18 20:01:09,"",,0,0,0,2020-06-17 13:10:10
62449709,2,,62323260,1,,"<p>No, you have to use mapping templates. You’re correct about the 200 resource limit, but the limit comes from cloudformation which serverless uses under the hood. This limit can be somewhat mitigated by splitting different types of resources into different stacks (via a plugin).</p>&#xA;",1443106,,,,2020-06-18 12:12:32,"",,0,0,0,2020-06-18 12:12:32
62450674,1,,,1,1507,"<p>wanted to ask if it is possible to upsert nested objects? for example, if i have a 'Users' table and a 'Students' table, and I'm inserting a new User(with a taken id), i want to update all fields (using on_conflict and update_columns) including the fields in the 'Students' table.&#xA;Basically replace all user's fields except the primary key.</p>&#xA;&#xA;<pre><code>mutation($UsersData: [core_users_insert_input!]!) {&#xA;    insert_core_users(&#xA;      objects: $UsersData&#xA;      on_conflict: {&#xA;        constraint: core_users_id_unique&#xA;        update_columns: [first_name, last_name, gender]&#xA;      }&#xA;    ) {&#xA;      affected_rows&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;&#xA;<p>The <strong>update_column</strong> array should include fields from the 'Students' table but i can't figure it out.</p>&#xA;",11817652,,,,2020-06-19 00:16:16,How to upsert nested tables values in Hasura GraphQL?,<graphql><hasura>,1,0,0,2020-06-18 13:06:23
62459818,2,,62459178,0,,"<p>The query fails because the <code>roles</code> field was declared as required in your schema, but your resolver obviously returns no roles for the user.</p>&#xA;&#xA;<p>To pass the validation, you need to change the field spec to optional in both GraphQL and Prisma schemas (remove the <code>!</code>s):</p>&#xA;&#xA;<pre><code>  roles: [UserRoles]&#xA;</code></pre>&#xA;",12983408,,,,2020-06-18 21:38:42,"",,0,4,0,2020-06-18 21:38:42
62466497,2,,48476154,4,,"<p>One way to represent this in the schema is to use <a href=""https://graphql.org/learn/schema/#union-types"" rel=""nofollow noreferrer"">unions</a> , in your case it could be something like this:</p>&#xA;&#xA;<pre><code>type LocatedGroup {&#xA;  group: Group!&#xA;  location: Location!&#xA;}&#xA;&#xA;union Attachable = Event | LocatedGroup&#xA;&#xA;type Post {&#xA;  body: String!&#xA;  author: User!&#xA;  attachable: Attachable!&#xA;}&#xA;</code></pre>&#xA;",216804,,,,2020-06-19 08:40:39,"",,0,0,0,2020-06-19 08:40:39
62479896,2,,62479388,1,,"<p>Well, your code to look up coupons on Stripe looks just fine! Looks like Strapi expects your service to be at <code>./order/services/order.js</code>—could it be as simple as that? Your example shows it at <code>./order/controllers/order.js</code>. <a href=""https://strapi.io/documentation/3.0.0-beta.x/concepts/services.html#custom-services"" rel=""nofollow noreferrer"">https://strapi.io/documentation/3.0.0-beta.x/concepts/services.html#custom-services</a></p>&#xA;",7841637,,,,2020-06-19 23:30:23,"",,0,1,0,2020-06-19 23:30:23
62497812,1,,,2,226,<p>The current authorisation model only allows to specify what actions we permit the owner to perform. Is there a way to specify somehow the actions that we don't allow even the owner of that record to be able to perform once it's created.</p>&#xA;,790785,,,,2021-03-05 19:28:59,How to prevent owner from deleting the record created in Graphql on AWS?,<graphql><aws-amplify><aws-appsync>,2,0,0,2020-06-21 11:23:07
62501369,1,62623970,,5,2503,"<p>I am using the package <a href=""https://pub.dev/packages/graphql_flutter"" rel=""noreferrer"">graphql_flutter</a> for GraphQL operations in my flutter app. The queries and mutations are going well but I cannot retrieve the errors by following the ways mentioned in their doc. Every time I receive a generic error message which is,</p>&#xA;<pre><code>ClientException: Failed to connect to http://127.0.0.1:3006/graphql: &#xA;</code></pre>&#xA;<p>That I get by doing,</p>&#xA;<pre><code>print(result.exception.toString());&#xA;</code></pre>&#xA;<p>My mutation looks like,</p>&#xA;<pre><code>final MutationOptions mutationOptions = MutationOptions(&#xA;  documentNode: gql(mutationString),&#xA;  variables: vars&#xA;);&#xA;&#xA;final QueryResult result = await _instance._client.mutate(mutationOptions);&#xA;&#xA;if (result.hasException) {&#xA;  // none of the following prints the expected error.&#xA;  print(result.exception.clientException.message);&#xA;  print(result.exception.graphqlErrors);&#xA;  print(result.exception.toString());&#xA;}&#xA;&#xA;print(result.data);&#xA;&#xA;return result.data;&#xA;</code></pre>&#xA;<p>Whereas in the apollo client, My error is :</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Invalid Phone number provided&quot;,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 2,&#xA;          &quot;column&quot;: 3&#xA;        }&#xA;      ],&#xA;      &quot;path&quot;: [&#xA;        &quot;otp&quot;&#xA;      ],&#xA;      &quot;extensions&quot;: {&#xA;        &quot;code&quot;: &quot;INTERNAL_SERVER_ERROR&quot;,&#xA;         ....&#xA;</code></pre>&#xA;<p>But I get none of that.</p>&#xA;<p>Note: The success response is coming as expected. I would like to know how can I get the graphql errors.</p>&#xA;",874564,,,,2021-08-26 02:36:59,Unable to retrieve errors occured in Graphql mutation in flutter project,<flutter><graphql><flutter-graphql>,3,0,0,2020-06-21 16:25:58
62508371,1,,,0,598,"<p>I can't find out how to update table after deleting row.&#xA;Apollo-server is used in backend and relay for client.&#xA;I'm trying to use <a href=""https://relay.dev/docs/en/mutations#node_delete"" rel=""nofollow noreferrer"">NODE_DELETE</a> but I don't know what I'm doing wrong</p>&#xA;<p>this is delete mutation</p>&#xA;<pre><code>    const mutation = graphql`&#xA;mutation DeleteAdMutation(&#xA;    $id: ID!&#xA;) {&#xA;    deleteEvent(&#xA;        id: $id&#xA;    )&#xA;    {&#xA;        deletedId&#xA;    }&#xA;}`;&#xA;&#xA;export const DeleteEvent = (input) =&gt; {&#xA;return new Promise((resolve, reject) =&gt; {&#xA;    commitMutation(&#xA;        environment,&#xA;        {&#xA;            type: 'NODE_DELETE',&#xA;            deletedIDFieldName: 'deletedId',&#xA;            mutation,&#xA;            variables: input,&#xA;        }&#xA;    )&#xA;});};&#xA;</code></pre>&#xA;<p>deletedId returned successfully but nothing changes in table</p>&#xA;<p>table query:</p>&#xA;<pre><code> const GetADayTours = graphql`&#xA;query GetADayToursQuery(&#xA;    $type: String!,&#xA;    $page: Int!,&#xA;    $row: Int!,&#xA;) {&#xA;    getADayTours(&#xA;        type: $type,&#xA;        page: $page,&#xA;        row: $row,&#xA;    ) {&#xA;        page&#xA;        row&#xA;        total&#xA;        data{&#xA;            ...on aDayTour{&#xA;                ...Row_row&#xA;            }&#xA;        }&#xA;    }&#xA;}`;&#xA;  export default GetADayTours;&#xA;</code></pre>&#xA;<p>and here is row fragment:</p>&#xA;<pre><code>createFragmentContainer(RowComponent&#xA;, {&#xA;    row: graphql`&#xA;        fragment Row_row on aDayTour {&#xA;            _id&#xA;            id&#xA;            title&#xA;        }&#xA;    `,&#xA;});&#xA;</code></pre>&#xA;",6260188,,,,2020-08-11 09:06:16,react-relay delete mutation update,<reactjs><graphql><relay><react-relay>,1,0,0,2020-06-22 06:10:59
62518428,1,62973900,,1,1449,"<p><strong>Question</strong>: How can I stringify JSON object for SQL statement in my Appsync velocity template?</p>&#xA;<p><strong>Explanation</strong>: I have an Aurora RDS table that has a column with data type JSON. AppSync API is already connected to RDS.&#xA;My GraphQL schema looks like</p>&#xA;<pre><code>input CreateServiceCatalogItemInput {&#xA;    serviceName: String!&#xA;    serviceConfig: ServiceConfigInput!&#xA;}&#xA;&#xA;type Mutation {&#xA;    createServiceCatalogItem(input: CreateServiceCatalogItemInput!): ServiceCatalogItem&#xA;}&#xA;&#xA;type Query {&#xA;    getAllServiceCatalogItem: [ServiceCatalogItem]&#xA;}&#xA;&#xA;type ServiceCatalogItem {&#xA;    serviceId: ID!&#xA;    serviceName: String!&#xA;    serviceConfig: ServiceConfig!&#xA;}&#xA;&#xA;type ServiceConfig {&#xA;    connectionType: String&#xA;    capacity: Int&#xA;}&#xA;&#xA;input ServiceConfigInput {&#xA;    connectionType: String&#xA;    capacity: Int&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;    mutation: Mutation&#xA;}&#xA;</code></pre>&#xA;<p>My resolver for createServiceCatalogItem mutation looks like</p>&#xA;<pre><code>{&#xA;    &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;    &quot;statements&quot;: [&#xA;        &quot;INSERT INTO b2b_service_catalog(service_name, service_config) VALUES ('$ctx.args.input.serviceName', '$util.toString($ctx.args.input.serviceConfig)') RETURNING service_id AS \&quot;serviceId\&quot;, service_name AS \&quot;serviceName\&quot;, service_config AS \&quot;serviceConfig\&quot;&quot;,&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>This throws me error:</p>&#xA;<p><strong>Invocation of method 'toString' in  class com.amazonaws.deepdish.transform.util.TransformUtils threw exception java.lang.IllegalArgumentException: wrong number of arguments at ...</strong></p>&#xA;<p>If I do:</p>&#xA;<pre><code>{&#xA;    &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;    &quot;statements&quot;: [&#xA;        &quot;INSERT INTO b2b_service_catalog(service_name, service_config) VALUES ('$ctx.args.input.serviceName', '$util.toJson($ctx.args.input.serviceConfig)') RETURNING service_id AS \&quot;serviceId\&quot;, service_name AS \&quot;serviceName\&quot;, service_config AS \&quot;serviceConfig\&quot;&quot;,&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>This throws me error:</p>&#xA;<p><strong>Unable to parse the JSON document: 'Unexpected character ('c' (code 99)): was expecting comma to separate Array entries\n at ...</strong></p>&#xA;<p>If I do:</p>&#xA;<pre><code>{&#xA;    &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;    &quot;statements&quot;: [&#xA;        &quot;INSERT INTO b2b_service_catalog(service_name, service_config) VALUES ('$ctx.args.input.serviceName', '$ctx.args.input.serviceConfig') RETURNING service_id AS \&quot;serviceId\&quot;, service_name AS \&quot;serviceName\&quot;, service_config AS \&quot;serviceConfig\&quot;&quot;,&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>Then I get error which makes sense:</p>&#xA;<p><strong>RDSHttp:{&quot;message&quot;:&quot;ERROR: invalid input syntax for type json\n  Detail: Token \&quot;connectionType\&quot; is invalid.\n  Position: 222\n  Where: JSON data, line 1: {connectionType...&quot;}</strong></p>&#xA;<p>However, when I hardcode the JSON in my resolver, it works:</p>&#xA;<pre><code>{&#xA;    &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;    &quot;statements&quot;: [&#xA;        &quot;INSERT INTO b2b_service_catalog(service_name, service_config) VALUES ('$ctx.args.input.serviceName', '{\&quot;connectionType\&quot;:\&quot;ftth\&quot;,\&quot;capacity\&quot;:1}') RETURNING service_id AS \&quot;serviceId\&quot;, service_name AS \&quot;serviceName\&quot;, service_config AS \&quot;serviceConfig\&quot;&quot;,&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>So how can I convert {connectionType=ftth, capacity=1} to {&quot;connectionType&quot;:&quot;ftth&quot;, &quot;capacity&quot;:1}? What am I doing wrong or am I missing something? Any help would be highly appreciated.</p>&#xA;",1819065,,1819065,2020-07-02 00:16:42,2020-07-20 22:21:55,Stringify JSON object for SQL query in AWS AppSync,<graphql><velocity><aws-appsync>,2,0,0,2020-06-22 15:50:53
62541503,2,,62479388,0,,"<p>So I ended up creating a Coupon model in the Strapi content builder. This enabled me to more easily return a Coupon object from my GraphQL query. It's not ideal because I'm having to make sure I create both a Stripe and Strapi coupon object to match, however I also don't anticipate on creating too many coupons in the first place.</p>&#xA;<p>My updated code looks like this:&#xA;<em>schema.graphql.js:</em></p>&#xA;<pre><code>const { sanitizeEntity } = require('strapi-utils/lib');&#xA;&#xA;module.exports = {&#xA;  query: `&#xA;    validateCoupon(coupon: String): Coupon&#xA;  `,&#xA;  resolver: {&#xA;    Query: {&#xA;      validateCoupon: {&#xA;        description: 'Validate Stripe coupon',&#xA;        resolver: 'application::order.order.validateCoupon',&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><em>./order/controllers/order.js:</em></p>&#xA;<pre><code>'use strict';&#xA;require('dotenv').config();&#xA;&#xA;const { sanitizeEntity } = require('strapi-utils');&#xA;&#xA;module.exports = {&#xA;  validateCoupon: async ctx =&gt; {&#xA;    const coupon = ctx.query._coupon;&#xA;    const found = await strapi.services.order.validateCoupon({ coupon });&#xA;    return sanitizeEntity(found, { model: strapi.models.order });&#xA;  }&#xA;};&#xA;</code></pre>&#xA;<p><em>./order/services/order.js:</em></p>&#xA;<pre><code>'use strict';&#xA;&#xA;const stripe = require('stripe')(`${process.env.STRIPE_SECRET_KEY}`);&#xA;&#xA;module.exports = {&#xA;  async validateCoupon({ coupon }) {&#xA;    let foundCoupon = null;&#xA;&#xA;    try {&#xA;      const coupons = await stripe.coupons.list();&#xA;      const found = coupons.data.filter(c =&gt; {&#xA;        return (c.name === coupon &amp;&amp; c.valid) ? c : null;&#xA;      });&#xA;      if (found) foundCoupon = found[0];&#xA;    } catch (err) {&#xA;      console.error(err);&#xA;    }&#xA;&#xA;    return foundCoupon;&#xA;  }&#xA;};&#xA;</code></pre>&#xA;",3394654,,,,2020-06-23 18:30:11,"",,0,0,0,2020-06-23 18:30:11
62544588,2,,57317233,0,,<p>use commands of aws from terminal</p>&#xA;<pre><code>amplify env pull --restore&#xA;</code></pre>&#xA;<p>and then</p>&#xA;<pre><code>amplify push // this command plays the role to remove Network exception&#xA;</code></pre>&#xA;,4779407,,,,2020-06-23 22:18:31,"",,0,0,0,2020-06-23 22:18:31
62572238,2,,62560442,0,,"<p>Ok so I will update my question but my problem wasn't in fact with Apollo but with the combination of Appsync and Apollo. As stated here : <a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-js/issues/448"" rel=""nofollow noreferrer"">https://github.com/awslabs/aws-mobile-appsync-sdk-js/issues/448</a>, if you don't set <code>disableOffline</code> to true in you Appsync client, mutations will just hang and do nothing.</p>&#xA;<p>Here is my new Client :</p>&#xA;<pre><code>const client = new AWSAppSyncClient({&#xA;    url: awsconfig.aws_appsync_graphqlEndpoint,&#xA;    region: awsconfig.aws_appsync_region,&#xA;    auth: {&#xA;        type: 'AMAZON_COGNITO_USER_POOLS',&#xA;        jwtToken: async (): Promise&lt;string&gt; =&gt;&#xA;            (await Auth.currentSession()).getIdToken().getJwtToken(),&#xA;    },&#xA;    disableOffline: true,&#xA;});&#xA;</code></pre>&#xA;",10826809,,,,2020-06-25 09:33:13,"",,0,0,0,2020-06-25 09:33:13
62579011,1,,,1,73,<p>I have a use case in Amplify GraphQL where I need certain rows to be access by only the owners (people who created them) and other rows to be readable by everyone. How can I achieve that using Amplify @auth parameters. There is a attribute value in the model that determines which are owner accessed and which are general read. How do I use the @auth to achieve this? I can easily use two tables to do this but there are some common processes that act on all rows in the same way.</p>&#xA;<p>Has anyone implemented this and can they share an example?</p>&#xA;,12095754,,,,2020-06-25 15:32:47,Amplify GraphQL - Allow owner access to certain rows and everyone access to certain rows,<graphql><aws-amplify><aws-appsync>,0,0,0,2020-06-25 15:32:47
62603912,2,,62602545,4,,"<p>This should be possible by calling the autogenerated <code>partialUpdate</code> mutation. You might have not noticed it, since this is currently only available as a <a href=""https://docs.fauna.com/fauna/current/api/graphql/previews/"" rel=""nofollow noreferrer""><em>Schema Preview</em></a> feature.</p>&#xA;<p>This means essentially that in order to enable it, you will need to add the following header to your HTTP Request:</p>&#xA;<pre><code>X-Schema-Preview: partial-update-mutation&#xA;</code></pre>&#xA;<p>Note that since this Schema Preview feature adds a new <em>autogenerated</em> mutation, you will have to add this header when executing a GraphQL operation (i.e., sending request against the <a href=""https://docs.fauna.com/fauna/current/api/graphql/endpoints#graphql"" rel=""nofollow noreferrer"">/graphql</a> endpoint), and not when importing the schema (i.e., sending a request agains the <a href=""https://docs.fauna.com/fauna/current/api/graphql/endpoints#import"" rel=""nofollow noreferrer"">/import</a> endpoint). The reason is basically that all of the autogenerated queries and mutations are derived at <em>runtime</em>, and not when the schema is imported.</p>&#xA;<p>Now, if you have added the header as mentioned above, when calling some introspection query for reading the schema back (like the GraphQL Playground does for instance), you should notice there's a new mutation field and a new input object:</p>&#xA;<pre><code>input PartialUpdateEventInput {&#xA;  name: String&#xA;  email: String&#xA;  eventName: String&#xA;  location: String&#xA;  guests: [PartialUpdateGuestInput!]&#xA;  note: String&#xA;  confirmed: Boolean&#xA;  completed: Boolean&#xA;  dateTimeStart: Time&#xA;  dateTimeEnd: Time&#xA;  sentConfirmation: Boolean&#xA;}&#xA;&#xA;type Mutation {&#xA;  partialUpdateEvent(id: ID!, data: PartialUpdateEventInput!): Event&#xA;}&#xA;</code></pre>&#xA;<p>Since all of the fields are optional for this new input object, you should be able now to update just the <code>sentConfirmation</code> field:</p>&#xA;<pre><code>mutation PartialUpdate {&#xA;  partialUpdateEvent(id: &quot;269434161519919634&quot;, data: {&#xA;    sentConfirmation: true&#xA;  }) {&#xA;    _id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>All of the fields which are not included in the mutation will remain unaffected.</p>&#xA;<p>Establishing a parallel with FQL, this means that GraphQL's <code>update</code> mutation will act as FQL's <a href=""https://docs.fauna.com/fauna/current/api/fql/functions/replace"" rel=""nofollow noreferrer""><code>Replace</code></a> function, and GraphQL's <code>partialUpdate</code> mutation as FQL's <a href=""https://docs.fauna.com/fauna/current/api/fql/functions/update"" rel=""nofollow noreferrer"">Update</a> function.</p>&#xA;",1411652,,,,2020-06-26 22:53:46,"",,0,0,0,2020-06-26 22:53:46
62642324,1,,,1,465,"<p>I'm working on migrating an GraphQL app from using Postgraphql 3.10 with a Postgresql version 9.6 database to using postgraphile version 4.7.0 and a Postgresql version 11 database.</p>&#xA;<p>The graphql query below used to work in the old version but fail in the new version.</p>&#xA;<pre><code>query supplier($id: Int!) {&#xA;    supplierById(id: $id) {&#xA;        id accountId&#xA;        title intro description&#xA;        imageBg imageProfile imageProfileRot&#xA;        rating status&#xA;        productsBySupplierId(condition: {published: true, deleted: false}) { &#xA;            nodes { &#xA;                id type prodTitle prodDescr &#xA;                price currency duration { hours minutes }&#xA;            } &#xA;        }&#xA;        reviewsBySupplierId(condition: {target: SUPPLIER}) {&#xA;            nodes {comment rating createdAt}&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>The failure is because of the condition filter and the error message say:</p>&#xA;<pre><code>&quot;GraphQLError: Field \&quot;published\&quot; is not defined by type ProductCondition.&quot;&#xA;&quot;GraphQLError: Field \&quot;deleted\&quot; is not defined by type ProductCondition.&quot;&#xA;&quot;GraphQLError: Field \&quot;target\&quot; is not defined by type ReviewCondition.&quot;&#xA;</code></pre>&#xA;<p>I can't find any documentation about how to set up the database table to support this condition.&#xA;Do I need to add the fields published, deleted and target to some index for postgraphile to support this condition?</p>&#xA;<p>Postgraphile config in express app</p>&#xA;<pre><code>app.use( postgraphile( `postgres://${account}:${passwd}@localhost:5432/${database}`, schema, {&#xA;        pgDefaultRole: '*****_anonymous',&#xA;        dynamicJson: true,&#xA;        jwtSecret: Buffer.from( secret, 'hex' ).toString(),&#xA;        jwtPgTypeIdentifier: '*****.jwt_token',&#xA;        enableCors: true,&#xA;        disableQueryLog: false,&#xA;        graphiql: config.web.graphiql,&#xA;        graphqlRoute: config.web.graphql,&#xA;        graphiqlRoute: '/qtest',&#xA;        subscriptions: true,&#xA;        watchPg: true,&#xA;        setofFunctionsContainNulls: false,&#xA;        ignoreRBAC: false,&#xA;        ignoreIndexes: false,&#xA;        showErrorStack: &quot;json&quot;,&#xA;        extendedErrors: ['severity', 'code', 'detail', 'hint', 'position', 'internalPosition', 'internalQuery', 'where', 'schema', 'table', 'column', 'dataType', 'constraint', 'file', 'line', 'routine'],&#xA;        //extendedErrors: [&quot;hint&quot;, &quot;detail&quot;, &quot;errcode&quot;],&#xA;        //appendPlugins: [require(&quot;@graphile-contrib/pg-simplify-inflector&quot;)],&#xA;        exportGqlSchemaPath: &quot;schema.graphql&quot;,&#xA;        sortExport: true,&#xA;        enhanceGraphiql: true,&#xA;        allowExplain(req) {&#xA;                // TODO: customise condition!&#xA;                return true;&#xA;        },&#xA;        enableQueryBatching: true,&#xA;        disableDefaultMutations:false,&#xA;        legacyRelations: &quot;omit&quot;&#xA;} ) )&#xA;</code></pre>&#xA;",1257463,,1257463,2020-06-30 15:29:08,2020-06-30 15:29:08,postgraphile condition filter failing,<postgresql><postgraphile><postgraphql>,0,4,0,2020-06-29 16:13:38
62653527,1,,,1,1522,"<p>I am trying to call my AWS AppSync graphQL API from Lambda, but I'm stuck at an error that I can't solve, so I'd like to ask your help to figure out what I'm doing wrong.</p>&#xA;<p>The credentials seems correct and the query should be correct (see below).</p>&#xA;<p>The lambda function is deployed using the Serverless framework and I can invoke it with <code>sls invoke --function &lt;my_function_name&gt;</code>.</p>&#xA;<p>I have been following <a href=""https://janhesters.com/how-to-use-aws-appsync-in-lambda-functions/"" rel=""nofollow noreferrer"">this article</a></p>&#xA;<p><strong>The error I'm getting is:</strong></p>&#xA;<pre><code>{&#xA;&quot;errorType&quot;: &quot;Runtime.UnhandledPromiseRejection&quot;,&#xA;&quot;errorMessage&quot;: &quot;TypeError: Cannot read property 'match' of null&quot;,&#xA;&quot;trace&quot;: [&#xA;    &quot;Runtime.UnhandledPromiseRejection: TypeError: Cannot read property 'match' of null&quot;,&#xA;    &quot;    at process.&lt;anonymous&gt; (/var/runtime/index.js:35:15)&quot;,&#xA;    &quot;    at process.emit (events.js:310:20)&quot;,&#xA;    &quot;    at process.EventEmitter.emit (domain.js:482:12)&quot;,&#xA;    &quot;    at processPromiseRejections (internal/process/promises.js:209:33)&quot;,&#xA;    &quot;    at processTicksAndRejections (internal/process/task_queues.js:98:32)&quot;&#xA;]&#xA;}&#xA;&#xA;Error --------------------------------------------------&#xA;&#xA;Error: Invoked function failed&#xA;  at AwsInvoke.log (/usr/local/lib/node_modules/serverless/lib/plugins/aws/invoke/index.js:101:31)&#xA;  at AwsInvoke.tryCatcher (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/util.js:16:23)&#xA;  at Promise._settlePromiseFromHandler (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:517:31)&#xA;  at Promise._settlePromise (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:574:18)&#xA;  at Promise._settlePromise0 (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:619:10)&#xA;  at Promise._settlePromises (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:699:18)&#xA;  at _drainQueueStep (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:138:12)&#xA;  at _drainQueue (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:131:9)&#xA;  at Async._drainQueues (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:147:5)&#xA;  at Immediate.Async.drainQueues [as _onImmediate] (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:17:14)&#xA;  at runCallback (timers.js:705:18)&#xA;  at tryOnImmediate (timers.js:676:5)&#xA;  at processImmediate (timers.js:658:5)&#xA;  at process.topLevelDomainCallback (domain.js:126:23)&#xA;</code></pre>&#xA;<p><strong>Here is my Lambda function in full:</strong></p>&#xA;<pre><code>'use strict'&#xA;&#xA;const AWS = require('aws-sdk');&#xA;const gql = require('graphql-tag');&#xA;const AWSAppSyncClient = require('aws-appsync').default;&#xA;require('isomorphic-fetch');&#xA;require('es6-promise').polyfill();&#xA;&#xA;module.exports.pushNotificationHandler = async (event, context, callback) =&gt; {&#xA;&#xA;    const appsyncClient = new AWSAppSyncClient({&#xA;        url: process.env.GRAPHQL_API_ID,&#xA;        region: process.env.AWS_REGION,&#xA;        auth: {&#xA;            type: 'AWS_IAM',&#xA;            credentials: AWS.config.credentials&#xA;        },&#xA;        disableOffline: true&#xA;    },&#xA;        {&#xA;            defaultOptions: {&#xA;                query: {&#xA;                    fetchPolicy: 'network-only',&#xA;                    errorPolicy: 'all',&#xA;                },&#xA;            },&#xA;        }&#xA;    );&#xA;&#xA;    const client = await appsyncClient.hydrated();&#xA;&#xA;    try {&#xA;&#xA;        const result = await client.query({&#xA;            query: gql`&#xA;                query GetUser {&#xA;                    getUser(id: &quot;&lt;A_VALID_USER_ID&quot;) {&#xA;                        firstname&#xA;                    }&#xA;                }&#xA;            `,&#xA;            variables: {}&#xA;        });&#xA;&#xA;        console.log(JSON.stringify(result));&#xA;&#xA;        return result;&#xA;&#xA;    } catch (error) {&#xA;        console.log(JSON.stringify(error));&#xA;        return error;&#xA;    }&#xA;&#xA;    callback(null, event);&#xA;&#xA;};&#xA;</code></pre>&#xA;<p><strong>Credentials</strong></p>&#xA;<p>I have checked the credentials by simply logging and checked in <code>CloudWatch</code>. There is both an access key and a session token, so I would assume my credentials are correct.</p>&#xA;<p><strong>Query</strong></p>&#xA;<p>The query I have checked by executing it from the AppSync console. It should work.</p>&#xA;<p><strong>IAM Permissions</strong></p>&#xA;<p>The permissions are set in the Serverless configuration file, but is the same as:</p>&#xA;<pre><code>{&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Effect&quot;: &quot;Allow&quot;,&#xA;            &quot;Action&quot;: [&#xA;                &quot;appsync:GraphQL&quot;&#xA;            ],&#xA;            &quot;Resource&quot;: [&#xA;                &quot;arn:aws:appsync:&lt;REGION&gt;:&lt;ACCOUNTID&gt;:apis/&lt;APIID&gt;/*&quot;&#xA;            ]&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p><strong>What am I doing wrong?</strong></p>&#xA;",1116508,,,,2021-06-09 06:40:41,Unable to call AppSync GraphQL api from Lambda: TypeError: Cannot read property 'match' of null,<node.js><amazon-web-services><aws-lambda><graphql><aws-appsync>,2,0,0,2020-06-30 08:41:35
62670895,1,62680893,,3,1292,"<p>I'm running a docker container with <code>admin secret</code>. In the below image, you can see the roles under the permissions window.&#xA;<a href=""https://i.stack.imgur.com/4TOkh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4TOkh.png"" alt=""enter image description here"" /></a></p>&#xA;<p>For <code>category</code> table, I set <code>public</code> role for <code>SELECT</code> option and there is no restriction for that role to access any query.</p>&#xA;<p><a href=""https://i.stack.imgur.com/Vj0Fc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Vj0Fc.png"" alt=""enter image description here"" /></a></p>&#xA;<p>But my problem is I can't access the query using <code>public</code> role, hasura engine ask <code>admin-secret</code>. see the below image.&#xA;How can I access this API without giving admin credentials?&#xA;<a href=""https://i.stack.imgur.com/ikfZf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ikfZf.png"" alt=""enter image description here"" /></a></p>&#xA;",8109118,,,,2020-07-01 16:05:30,How to access public api in hasura,<graphql><hasura>,1,3,0,2020-07-01 06:27:57
62676609,1,,,0,30,"<p>The graphql mutation below returns an <code>Account</code> type on success:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>@Mutation(() =&gt; Account)&#xA;async updateAccount(&#xA;  @Arg('accountIdentifier', () =&gt; String) accountIdentifier: string,&#xA;  @Arg('input', () =&gt; AccountUpdateInput) input: AccountUpdateInput&#xA;) {&#xA;  await Account.update({ accountIdentifier }, input)&#xA;  return Account.findOne({ accountIdentifier })&#xA;}&#xA;</code></pre>&#xA;<p>To execute this mutation one can use the following:</p>&#xA;<pre><code>mutation {&#xA;  updateAccount(&#xA;    accountIdentifier: &quot;06760b98-9a9b-4686-961c-051d6b01581f&quot;, &#xA;    input: {&#xA;      name: &quot;mark&quot;&#xA;    }) {&#xA;    accountIdentifier&#xA;    email&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>However, using this same mutation without specifying a return value results in an error. I was wondering if it's possible to execute the above mutation or the below mutation (without return value specified) and  at the same time have the mutation executed correctly?</p>&#xA;<pre><code>mutation {&#xA;  updateAccount(&#xA;    accountIdentifier: &quot;06760b98-9a9b-4686-961c-051d6b01581f&quot;, &#xA;    input: {&#xA;      name: &quot;mark&quot;&#xA;    }&#xA;  )&#xA;}&#xA;</code></pre>&#xA;",2304170,,2304170,2020-07-01 12:25:41,2020-07-01 12:25:41,Graphql mutation return value,<javascript><typescript><graphql><typegraphql>,0,4,0,2020-07-01 12:14:30
62680893,2,,62670895,2,,"<p>Relevant docs: <a href=""https://hasura.io/docs/1.0/graphql/manual/auth/authentication/unauthenticated-access.html#unauthenticated-public-access"" rel=""nofollow noreferrer"">https://hasura.io/docs/1.0/graphql/manual/auth/authentication/unauthenticated-access.html#unauthenticated-public-access</a></p>&#xA;<p>If you are using webhook-based authentication, &quot;for unauthenticated access, you can return a <code>200</code> status response with your defined unauthenticated role, e.g: <code>{ &quot;x-hasura-role&quot;: &quot;&lt;anonymous-role&gt;&quot; }</code>.&quot;</p>&#xA;<p>If you are using jwt-based authentication, &quot;you can use the env variable <code>HASURA_GRAPHQL_UNAUTHORIZED_ROLE</code> or <code>--unauthorized-role</code> flag to set a role for unauthenticated (non-logged in) users.&quot;</p>&#xA;<p>The unauthenticated role can be called anything, in your case it would be &quot;public&quot;</p>&#xA;",2526423,,,,2020-07-01 16:05:30,"",,0,1,0,2020-07-01 16:05:30
62691615,1,,,1,217,<p>I have a mutation. How can I create a permission in hasura using variables in the graphql query?</p>&#xA;<p>eg:</p>&#xA;<pre><code>mutation MyMutation($name:String!) {&#xA;  insert_post(objects: {name:$name}){&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>How can I use <code>name</code> variable in the permission?</p>&#xA;,11537438,,9461440,2020-07-02 08:18:31,2020-07-02 12:28:22,How can a graphql variable be used in permission in Hasura?,<graphql><hasura><graphql-mutation>,1,0,0,2020-07-02 07:56:04
62695151,1,,,0,61,"<p><a href=""https://i.stack.imgur.com/J2jGb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J2jGb.png"" alt=""i am getting data along with error object in graph Ql query. I just need data object as it contains some data i require. I am unable to get data object in subscribe response."" /></a></p>&#xA;<p>here i am hitting query to get response i just need to console data object.&#xA;<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code> this.query = this.customerService.getCardHolder(id);&#xA;    this.query.valueChanges.subscribe(&#xA;      (response) =&gt; {&#xA;        console.log(""detail response"",response.errors);&#xA;        //it does not come here.&#xA;      }, (error) =&gt;{&#xA;      //it comes here but did not find data object. just finding error object.&#xA;        console.log(""detail error"", error.graphQLErrors[0]);&#xA; });</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",5925776,,,,2020-07-20 15:43:38,how to get data object when graphQl sends error object along with data object as something is not found in query,<angular><graphql><frontend>,1,0,0,2020-07-02 11:18:06
62696321,2,,62691615,0,,"<p>It's me on Discord.</p>&#xA;<p>Just for somebody has the same question. For currently, Hasura doesn't support to check permission from user input value, It only accepts value from <code>session variables</code> like <code>x-hasura-user-id</code>, etc.</p>&#xA;<p>But I think Hasura approach is correct when doesn't allow set permission base on user input.</p>&#xA;<p>If my answer is wrong, please correct, thanks.</p>&#xA;",8270395,,,,2020-07-02 12:28:22,"",,0,0,0,2020-07-02 12:28:22
62707014,2,,62518428,0,,"<p><strong>Solution 1</strong>:</p>&#xA;<p>Thanks to @cyberwombat I was able to fix this issue. I am posting this as a reference if someone needs it.</p>&#xA;<p>My <code>serviceConfig</code> object is not fixed and may change with time so I modified my resolver to make it more generic and it looks something like this:</p>&#xA;<pre><code>#set($serviceConfigMap = {})&#xA;&#xA;#foreach($key in $ctx.args.input.serviceConfig.keySet())&#xA;    $util.qr($serviceConfigMap.put(&quot;$key&quot;, $ctx.args.input.serviceConfig.get($key)))&#xA;#end&#xA;&#xA;#set($serviceConfigMap = $util.toJson($serviceConfigMap))&#xA;&#xA;{&#xA;    &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;    &quot;statements&quot;: [&#xA;        &quot;INSERT INTO b2b_service_catalog(service_name, service_config) VALUES ('$ctx.args.input.serviceName', '$util.escapeJavaScript($serviceConfigMap)') RETURNING service_id AS \&quot;serviceId\&quot;, service_name AS \&quot;serviceName\&quot;, service_config AS \&quot;serviceConfig\&quot;&quot;,&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p><strong>Old Solution</strong>:</p>&#xA;<p>Here's how I solved this previously.</p>&#xA;<p>I converted my resolver to Pipeline and created a simple Lambda function in NodeJS to stringify the JSON object. This is how my lambda function looks like:</p>&#xA;<pre><code>exports.handler = (event, context, callback) =&gt; {&#xA;&#xA;    const response = {&#xA;        statusCode: 200,&#xA;        body: JSON.stringify(event.input.serviceConfig).replace(/\&quot;/g, '\\\&quot;'),&#xA;    };&#xA;    callback(null, response)&#xA;};&#xA;</code></pre>&#xA;<p>This is how serviceConfig looks like now and exactly how I wanted:</p>&#xA;<pre><code>{\&quot;connectionType\&quot;:\&quot;ftth\&quot;,\&quot;maxUploadCapacity\&quot;:1}&quot;&#xA;</code></pre>&#xA;<p>I can now easily use it in my SQL statement within my resolver.</p>&#xA;",1819065,,1819065,2020-07-20 22:21:55,2020-07-20 22:21:55,"",,0,0,0,2020-07-03 01:00:55
62707205,2,,62695476,2,,"<p>Ok, I found the solution</p>&#xA;<pre><code>type Query {&#xA; Employee(manager_id: Int @where(operator: &quot;=&quot;)): [Employee!]! @all &#xA;}&#xA;&#xA;</code></pre>&#xA;<p>It returns what I wanted :D</p>&#xA;",11293507,,,,2020-07-03 01:31:52,"",,0,1,0,2020-07-03 01:31:52
62709127,1,62881428,,0,309,"<p>If I understand correctly, aws + graphql for mobile app is quite similar to Firebase Realtime Database. As the&#xA;<a href=""https://firebase.googleblog.com/2019/03/rtdb-supports-certificate-transparency.html"" rel=""nofollow noreferrer"">firebase blog</a> certificate pinning is supported behind the scenes. My question is: does graphql support certificate pinning?</p>&#xA;",578309,,578309,2020-07-07 08:29:19,2021-01-13 10:30:26,Does graphql supports certificate pining?,<graphql><certificate><certificate-pinning>,2,0,0,2020-07-03 05:37:42
62710804,2,,62710628,0,,"<p>If do something like this it should work by itself, without all the annotations. Also you have misspelled address as adresss with three s's</p>&#xA;<pre><code>restTemplate.getForObject(&#xA;        HOST,&#xA;        Customer.class,&#xA;        Map.of(&quot;key&quot;, value)&#xA;</code></pre>&#xA;",5390751,,,,2020-07-03 07:46:14,"",,0,0,0,2020-07-03 07:46:14
62721633,1,,,0,184,"<p>My table columns look like <code>name</code>, <code>email</code>, <code>phone</code>, and <code>pin</code>.</p>&#xA;<p>I'm using Hasura for collecting user details.</p>&#xA;<p>Problem:</p>&#xA;<p>I want to hash the <code>pin</code> field using some hashing algorithm. So I decided to have a separate AWS Lambda function to convert a plain <code>pin</code> to hashed one and <code>update</code> it to the same column.</p>&#xA;<p><a href=""https://i.stack.imgur.com/01JOg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/01JOg.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Now I set a trigger (when <code>pin</code> get updated it will trigger the webhook). I successfully updated the hashed one to my database. But the problem is after lambda updated the field Hasura re-trigger the webhook again. The process is to keep on going until I shut down my Hasura instance.</p>&#xA;<p>In Hasura documentation they mentioned below</p>&#xA;<blockquote>&#xA;<p>In case of UPDATE, the events are delivered only if new data is&#xA;distinct from old data. The composite type comparison is used to&#xA;compare the old and new rows. If rows contain columns, which cannot be&#xA;compared using &lt;&gt; operator, then internal binary representation of&#xA;rows by Postgres is compared.</p>&#xA;</blockquote>&#xA;<p>however, after the lambda update, the data is same as old one but why it is kept on calling.</p>&#xA;",8109118,,,,2020-07-04 01:19:47,Hasura graphQl update trigger repeats many time,<graphql><hasura>,1,0,0,2020-07-03 19:27:41
62734103,1,,,0,153,"<p>I am having trouble deriving a mutation in a Hasura table I have. This is my mutation:</p>&#xA;<pre><code>mutation MyMutation {&#xA;  AddReview(body: &quot;fear not, it will work&quot;, id: &quot;xeZiZnx61MFWDxfhgAu-gQ&quot;) {&#xA;    affected_rows&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>However, when I try to derive an action, it gives me the error message: Name &quot;<strong>typename&quot; must not begin with &quot;</strong>&quot;, which is reserved by GraphQL introspection. I am not sure what I am doing incorrectly. All the permissions etc for the table are correct. Did anyone else have this error? Not sure if it is also a Hasura bug...</p>&#xA;",13605597,,,,2020-07-04 20:27:06,Unable to derive mutation in Hasura,<node.js><reactjs><graphql><hasura><yelp-fusion-api>,0,2,0,2020-07-04 20:27:06
62751079,1,,,0,1291,"<p>I am using AWS Amplify Datastore in Expo / React Native to store profile information using GraphQL.</p>&#xA;<p>schema looks like this:</p>&#xA;<pre><code>type User @model  {&#xA;  id: ID!&#xA;  username: String&#xA;  userPhone: String&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;}&#xA;</code></pre>&#xA;<p>Saving it to the datastore...</p>&#xA;<pre><code>let input = {&#xA;    id: id,&#xA;    username: username,&#xA;    userPhone: userPhone,&#xA;    createdAt: createdAt,&#xA;}&#xA;let myDataStore = await DataStore.save(new User({input}));&#xA;</code></pre>&#xA;<p>once it is saved to the Datastore it looks like this.</p>&#xA;<pre><code>dataStore is   User {&#xA;  &quot;_deleted&quot;: undefined,&#xA;  &quot;_lastChangedAt&quot;: undefined,&#xA;  &quot;_version&quot;: undefined,&#xA;  &quot;id&quot;: &quot;f86d3252-7b1d-44f6-b4cd-b8a7a3a88def&quot;,&#xA;  &quot;input&quot;: Object {&#xA;    &quot;createdAt&quot;: 1593774031,&#xA;    &quot;id&quot;: &quot;3722f35e-de54-45b2-b26e-676e2cc48160&quot;,&#xA;    &quot;userPhone&quot;: &quot;&quot;,&#xA;    &quot;username&quot;: &quot;One Two&quot;,&#xA;  },&#xA;}&#xA;</code></pre>&#xA;<p>The <a href=""https://docs.amplify.aws/lib/datastore/data-access/q/platform/js"" rel=""nofollow noreferrer"">code examples</a> show how to retrieve this record by datastore id</p>&#xA;<pre><code>DataStore.query(User, c =&gt; c.id(&quot;eq&quot;, &quot;f86d3252-7b1d-44f6-b4cd-b8a7a3a88def&quot;));&#xA;</code></pre>&#xA;<p>However i want to retrieve it by the User id (&quot;id&quot;: &quot;<strong>3722f35e-de54-45b2-b26e-676e2cc48160</strong>&quot;) because the user id is actually the value of the CognitoUser sub which is readily available.  Querying by datastore id would require saving the datastore id in AsyncStorage, state, context, redux or whatever which is more clunky.</p>&#xA;<p>This does NOT work</p>&#xA;<pre><code>DataStore.query(User, c =&gt; c.input.id(&quot;eq&quot;, &quot;3722f35e-de54-45b2-b26e-676e2cc48160&quot;));&#xA;</code></pre>&#xA;<p>This does NOT work</p>&#xA;<pre><code>DataStore.query(User, c =&gt; c.id.id(&quot;eq&quot;, &quot;3722f35e-de54-45b2-b26e-676e2cc48160&quot;));&#xA;</code></pre>&#xA;<p>I am sure there is a simple answer but i have been googling for days and cannot figure it out.</p>&#xA;<p>Thank you for your help.</p>&#xA;",12133728,,,,2021-08-18 02:43:03,Retrieving AWS Amplify DataStore record by GraphQL Key,<react-native><aws-amplify><graphql-js>,3,0,0,2020-07-06 07:19:59
62766602,1,62781847,,2,4114,"<p>I have an iOS app where users can login and message one another using the backend AWS Amplify. My API is configured using GraphQL and currently looks like this.</p>&#xA;<pre><code>type User @model {&#xA;  id: ID!&#xA;  userSub: String!&#xA;  fullName: String!&#xA;}&#xA;type ChatMessage @model {&#xA;  id: ID!&#xA;  senderUserSub: String&#xA;  recieverUserSub: String&#xA;  messageText: String&#xA;  messageImageFilename: String&#xA;  dateSent: String!&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>I am new to GraphQL and its Schema Definition Language. The schema above works however  inside the dynamodb table there is no structure to it, I am trying to create an efficient way of structuring data for user messaging. The &quot;One to many relationship&quot; is schema example that can be found inside of the Amplify CLI when configuring an API. I try to copy its example base my current one off of.</p>&#xA;<p>Default one to many relationship schema</p>&#xA;<pre><code>type Blog @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  posts: [Post] @connection(keyName: &quot;byBlog&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Post @model @key(name: &quot;byBlog&quot;, fields: [&quot;blogID&quot;]) {&#xA;  id: ID!&#xA;  title: String!&#xA;  blogID: ID!&#xA;  blog: Blog @connection(fields: [&quot;blogID&quot;])&#xA;  comments: [Comment] @connection(keyName: &quot;byPost&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Comment @model @key(name: &quot;byPost&quot;, fields: [&quot;postID&quot;, &quot;content&quot;]) {&#xA;  id: ID!&#xA;  postID: ID!&#xA;  post: Post @connection(fields: [&quot;postID&quot;])&#xA;  content: String!&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>I try to copy its example like this.</p>&#xA;<p>Updated schema</p>&#xA;<pre><code>type User @model {&#xA;  id: ID!&#xA;  userSub: String!&#xA;  fullName: String!&#xA;  messages: [ChatMessage] @connection(keyName: &quot;byUser&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;type ChatMessage @model @key(name: &quot;byUser&quot;, fields: [&quot;messageID&quot;]){&#xA;  id: ID!&#xA;  messageID: ID!&#xA;  senderUserSub: String&#xA;  recieverUserSub: String&#xA;  messageText: String&#xA;  messageImageFilename: String&#xA;  dateSent: String!&#xA;  user: User @connection(fields: [&quot;messageID&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>I was wondering does this updated schema above even look appropriate? If possible can anyone give me pointers as to how to make one correctly for messaging? I am not experienced when it comes to GraphQL SDL.</p>&#xA;",13101982,,13101982,2020-07-09 15:09:12,2020-07-13 20:23:40,How to create a one to many relationship using GraphQL?,<graphql><aws-amplify>,1,0,0,2020-07-07 01:02:05
62781847,2,,62766602,5,,"<p>You don't need to use the @key attribute for this kind of connection. You can give the @connection a name so that amplify understands which connection you are referring to like this:</p>&#xA;<pre><code>@connection(name: &quot;nameOfYourConnection&quot;)&#xA;</code></pre>&#xA;<p>The name must be provided on the connection attribute on both types.</p>&#xA;<pre><code>type User @model {&#xA;  id: ID!&#xA;  userSub: String&#xA;  fullName: String&#xA;  chatMessages: [ChatMessage] @connection(name: &quot;UserChatMessageConnection&quot;) #new&#xA;}&#xA;&#xA;type ChatMessage @model {&#xA;  id: ID!&#xA;  senderUserSub: String &#xA;  recieverUserSub: String&#xA;  messageText: String&#xA;  messageImageFilename: String&#xA;  dateSent: String!&#xA;  user: User @connection(name: &quot;UserChatMessageConnection&quot;) #new&#xA;}&#xA;</code></pre>&#xA;<p>After you have run amplify push you will se in the generated mutations, that when you are creating a ChatMessage object you should give it a value named <code>chatMessagesUserId</code>. This is the reference (the id on the user type) to which user created the ChatMessage.</p>&#xA;",5923873,,13302,2020-07-13 20:23:40,2020-07-13 20:23:40,"",,0,0,0,2020-07-07 18:40:08
62782081,2,,62752716,9,,"<p>To work with many-to-many connections with amplify/app sync you have to create a 'Join' table (type). You can think of the join table as a table where you store the connections.</p>&#xA;<p>I didn't completely understand from your example what you wanted the result to be, so I'll try to explain with an alternate example:</p>&#xA;<p>Lets say you have a system where multiple users can be the creators of a document, and a user also can be one of the creators of multiple documents. To accomplish this you must create three dynamoDb tables (or three types is the schema).</p>&#xA;<pre><code>type User @model {&#xA;  id: ID!&#xA;  name: String&#xA;  documents: [UserDocument] @connection(name: &quot;UserDocumentConnection&quot;)&#xA;}&#xA;&#xA;type Document @model {&#xA;   id: ID!&#xA;   title: String&#xA;   content: String&#xA;   users: [UserDocument] @connection(name: &quot;DocumentUserConnection&quot;)&#xA;}&#xA;&#xA;type UserDocument @model {&#xA;   id: ID!&#xA;   user: User @connection(name: &quot;UserDocumentConnection&quot;)&#xA;   document: Document @connection(name: &quot;DocumentUserConnection&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>Then you have a table containing all your users, a table containing all your Documents, and a table containing all the connections between users and documents.</p>&#xA;<p>So let's say you have a users that is creating a new document. Then you first create the document, then when it is created and you have received the document back from appsync with the new id of the document, then you must create a new object in the UserDocument table, containing the id of the user and the id of the document. You can then also add more users on the document by adding more items to the UserDocument table.</p>&#xA;<p>I hope this will help you to the correct path forwards.</p>&#xA;",5923873,,5923873,2020-07-08 03:00:44,2020-07-08 03:00:44,"",,0,2,0,2020-07-07 18:57:31
62826168,1,,,2,2181,"<p>My project is built with vue.js and severless framework, when I try to integrate it with Aws AppSync and Amplify (by using amplify cli), it auto generated a schema.json under <code>/src/graphql</code> which is almost unreadable. So every time I want to change the schema i go to the appsync console, change it there, then I do one of the following:</p>&#xA;<ol>&#xA;<li><p>execute <code>amplify api update</code> in terminal so that it updates whatever has been change in the cloud and update my local schema accordingly.</p>&#xA;</li>&#xA;<li><p>download the schema.json file from the appsync console after the change. going back and forth is very consuming.</p>&#xA;</li>&#xA;</ol>&#xA;<p>So my question is:</p>&#xA;<ol>&#xA;<li><p>Can I somehow use schema.graphql in my project instead of the unreadable schema.json</p>&#xA;</li>&#xA;<li><p>I also noticed if I comment out every line in schema.json or even removed the schema.json completely in /src/graphql, it does not give me any error when i run it, why is this happening?</p>&#xA;</li>&#xA;</ol>&#xA;<p>Thanks in advance.</p>&#xA;",5083293,,,,2021-09-08 06:55:31,How can I use schema.graphql instead of schema.json in an appsync and amplify project?,<amazon-web-services><graphql><aws-amplify><aws-appsync>,3,0,0,2020-07-10 01:46:32
62826449,2,,62826168,0,,"<p>I don't have much experience with Amplify, but I have used AppSync with Serverless. I maintain the schema (using the cleaner SDL format) under version control in the repo, and a CI script uploads to S3, then update AppSync via Cloudformation (embedded in serverless.yml).</p>&#xA;<p>The <a href=""https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-graphqlschema.html"" rel=""nofollow noreferrer"">AWS::AppSync::GraphQLSchema</a> resource allows for an inline schema (not so clean) or a pull down from S3. Having a separate file also enables you to test locally and better track changes/drift.</p>&#xA;",895717,,,,2020-07-10 02:28:11,"",,0,0,0,2020-07-10 02:28:11
62832089,1,62838935,,4,2721,"<p>I was learning to use AWS amplify with React, and the API it uses is a GraphQL API that leverages AWS AppSync. I'm very new to graphQL and my schema currently is like this. This is the schema inside the amplify app:</p>&#xA;<pre><code>type Note @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;  title: String&#xA;  image: String&#xA;}&#xA;</code></pre>&#xA;<p>To give you an example, I want to store an array of objects inside components in the Note type like this:</p>&#xA;<p><strong>Code-1</strong></p>&#xA;<pre><code>type Note @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;  title: String&#xA;  image: String&#xA;  components: []&#xA;}&#xA;</code></pre>&#xA;<p>But reading the docs I got to know there aren't any array scalar types. I know that I can create another table and do it like this instead:</p>&#xA;<p><strong>Code-2</strong></p>&#xA;<pre><code> type Note @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;  title: String&#xA;  image: String&#xA;  components: [elements!]!&#xA;}&#xA; &#xA; type elements @model {&#xA;  id: ID!&#xA;  item: String!&#xA;}&#xA;</code></pre>&#xA;<p>But I don't want this as it creates a new table. I just want one table containing id, name, description, title, image and a components array where you can store objects in like shown above in <strong>Code-1</strong>. Is there any possible way to do this? Also whats the role of &quot;@modal&quot; in the schema?</p>&#xA;",11361494,,11361494,2020-07-24 10:54:37,2020-07-24 10:54:37,Is there a scalar type for arrays and maps in graphql for schemas in AWS amplify?,<graphql><aws-amplify>,1,2,0,2020-07-10 10:12:57
62835148,1,,,4,1120,"<p>I've been struggling with this for some time now, so I could use some help.</p>&#xA;<p>I can't get onCreate subscription for type <code>HealthPlan</code> working in my react-native app.</p>&#xA;<p>Based on <a href=""https://github.com/dabit3/conference-app-in-a-box/blob/master/src/Discussion.js"" rel=""nofollow noreferrer"">Nader's example</a>:</p>&#xA;<p><strong>schema.graphql</strong></p>&#xA;<pre><code>type HealthPlan {&#xA;    id: ID!&#xA;    name: String!&#xA;    type: String!&#xA;    owner: String&#xA;}&#xA;&#xA;input CreateHealthPlanInput {&#xA;    name: String!&#xA;    type: String!&#xA;}&#xA;&#xA;type Mutation {&#xA;    ....&#xA;    createHealthPlan(input: CreateHealthPlanInput!): HealthPlan&#xA;    ...&#xA;}&#xA;&#xA;type Subscription {&#xA;    ...&#xA;    onCreateHealthPlan(owner: String!): HealthPlan&#xA;        @aws_subscribe(mutations: [&quot;createHealthPlan&quot;])&#xA;    ...&#xA;}&#xA;</code></pre>&#xA;<p><strong>mutations.js</strong></p>&#xA;<pre><code>export const createHealthPlan = /* GraphQL */ `&#xA;  mutation CreateHealthPlan($input: CreateHealthPlanInput!) {&#xA;    createHealthPlan(input: $input) {&#xA;      id&#xA;      name&#xA;      type&#xA;      owner&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p><strong>subscriptions.js</strong></p>&#xA;<pre><code>export const onCreateHealthPlan = /* GraphQL */ `&#xA;  subscription OnCreateHealthPlan($owner: String!) {&#xA;    onCreateHealthPlan(owner: $owner) {&#xA;      id&#xA;      name&#xA;      type&#xA;      owner&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p><strong>Main.js</strong></p>&#xA;<pre><code>import { API, graphqlOperation } from 'aws-amplify';&#xA;import { onCreateHealthPlan } from './subscriptions.js';&#xA;&#xA;const sub = &quot;cognitoSubField&quot;;   // AMAZON_COGNITO_USER_POOLS auth&#xA;&#xA;API.graphql(&#xA;          graphqlOperation(onCreateHealthPlan, {&#xA;            owner: sub,&#xA;          }),&#xA;        ).subscribe({&#xA;          next: response =&gt; {&#xA;            console.log('next data received', response);&#xA;          },&#xA;          error: err =&gt; {&#xA;            console.log('subscription error', err.message);&#xA;          },&#xA;          complete: () =&gt; {&#xA;            console.log('finished');&#xA;          },&#xA;})&#xA;</code></pre>&#xA;<p><strong>Mutation.createHealthPlan.req.vtl</strong></p>&#xA;<pre><code>## [Start] Determine request authentication mode **&#xA;#if( $util.isNullOrEmpty($authMode) &amp;&amp; !$util.isNull($ctx.identity) &amp;&amp; !$util.isNull($ctx.identity.sub) &amp;&amp; !$util.isNull($ctx.identity.issuer) &amp;&amp; !$util.isNull($ctx.identity.username) &amp;&amp; !$util.isNull($ctx.identity.claims) &amp;&amp; !$util.isNull($ctx.identity.sourceIp) &amp;&amp; !$util.isNull($ctx.identity.defaultAuthStrategy) )&#xA;  #set( $authMode = &quot;userPools&quot; )&#xA;#end&#xA;## [End] Determine request authentication mode **&#xA;## [Start] Check authMode and execute owner/group checks **&#xA;#if( $authMode == &quot;userPools&quot; )&#xA;  ## No Static Group Authorization Rules **&#xA;&#xA;&#xA;  ## No Dynamic Group Authorization Rules **&#xA;&#xA;&#xA;  ## [Start] Owner Authorization Checks **&#xA;  #set( $isOwnerAuthorized = false )&#xA;  ## Authorization rule: { allow: owner, ownerField: &quot;owner&quot;, identityClaim: &quot;cognito:username&quot; } **&#xA;  #set( $allowedOwners0 = $util.defaultIfNull($ctx.args.input.owner, null) )&#xA;  #set( $identityValue = $util.defaultIfNull($ctx.identity.claims.get(&quot;username&quot;), $util.defaultIfNull($ctx.identity.claims.get(&quot;cognito:username&quot;), &quot;___xamznone____&quot;)) )&#xA;  #if( $util.isList($allowedOwners0) )&#xA;    #foreach( $allowedOwner in $allowedOwners0 )&#xA;      #if( $allowedOwner == $identityValue )&#xA;        #set( $isOwnerAuthorized = true )&#xA;      #end&#xA;    #end&#xA;  #end&#xA;  #if( $util.isString($allowedOwners0) )&#xA;    #if( $allowedOwners0 == $identityValue )&#xA;      #set( $isOwnerAuthorized = true )&#xA;    #end&#xA;  #end&#xA;  #if( $util.isNull($allowedOwners0) &amp;&amp; (! $ctx.args.input.containsKey(&quot;owner&quot;)) )&#xA;    $util.qr($ctx.args.input.put(&quot;owner&quot;, $identityValue))&#xA;    #set( $isOwnerAuthorized = true )&#xA;  #end&#xA;  ## [End] Owner Authorization Checks **&#xA;&#xA;&#xA;  ## [Start] Throw if unauthorized **&#xA;  #if( !($isStaticGroupAuthorized == true || $isDynamicGroupAuthorized == true || $isOwnerAuthorized == true) )&#xA;    $util.unauthorized()&#xA;  #end&#xA;  ## [End] Throw if unauthorized **&#xA;#end&#xA;## [End] Check authMode and execute owner/group checks **&#xA;&#xA;&#xA;## [Start] Prepare DynamoDB PutItem Request. **&#xA;$util.qr($context.args.input.put(&quot;createdAt&quot;, $util.defaultIfNull($ctx.args.input.createdAt, $util.time.nowISO8601())))&#xA;$util.qr($context.args.input.put(&quot;updatedAt&quot;, $util.defaultIfNull($ctx.args.input.updatedAt, $util.time.nowISO8601())))&#xA;$util.qr($context.args.input.put(&quot;__typename&quot;, &quot;HealthPlan&quot;))&#xA;#set( $condition = {&#xA;  &quot;expression&quot;: &quot;attribute_not_exists(#id)&quot;,&#xA;  &quot;expressionNames&quot;: {&#xA;      &quot;#id&quot;: &quot;id&quot;&#xA;  }&#xA;} )&#xA;#if( $context.args.condition )&#xA;  #set( $condition.expressionValues = {} )&#xA;  #set( $conditionFilterExpressions = $util.parseJson($util.transform.toDynamoDBConditionExpression($context.args.condition)) )&#xA;  $util.qr($condition.put(&quot;expression&quot;, &quot;($condition.expression) AND $conditionFilterExpressions.expression&quot;))&#xA;  $util.qr($condition.expressionNames.putAll($conditionFilterExpressions.expressionNames))&#xA;  $util.qr($condition.expressionValues.putAll($conditionFilterExpressions.expressionValues))&#xA;#end&#xA;#if( $condition.expressionValues &amp;&amp; $condition.expressionValues.size() == 0 )&#xA;  #set( $condition = {&#xA;  &quot;expression&quot;: $condition.expression,&#xA;  &quot;expressionNames&quot;: $condition.expressionNames&#xA;} )&#xA;#end&#xA;{&#xA;  &quot;version&quot;: &quot;2017-02-28&quot;,&#xA;  &quot;operation&quot;: &quot;PutItem&quot;,&#xA;  &quot;key&quot;: #if( $modelObjectKey ) $util.toJson($modelObjectKey) #else {&#xA;  &quot;id&quot;:   $util.dynamodb.toDynamoDBJson($util.defaultIfNullOrBlank($ctx.args.input.id, $util.autoId()))&#xA;} #end,&#xA;  &quot;attributeValues&quot;: $util.dynamodb.toMapValuesJson($context.args.input),&#xA;  &quot;condition&quot;: $util.toJson($condition)&#xA;}&#xA;## [End] Prepare DynamoDB PutItem Request. **&#xA;</code></pre>&#xA;<p><strong>Mutation.createHealthPlan.res.vtl</strong></p>&#xA;<pre><code>$util.toJson($ctx.result)&#xA;</code></pre>&#xA;<p><strong>Subscription.onCreateHealthPlan.req.vtl</strong></p>&#xA;<pre><code>{&#xA;    &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;    &quot;payload&quot;: {}&#xA;}&#xA;</code></pre>&#xA;<p><strong>Subscription.onCreateHealthPlan.res.vtl</strong></p>&#xA;<pre><code>## [Start] Determine request authentication mode **&#xA;#if( $util.isNullOrEmpty($authMode) &amp;&amp; !$util.isNull($ctx.identity) &amp;&amp; !$util.isNull($ctx.identity.sub) &amp;&amp; !$util.isNull($ctx.identity.issuer) &amp;&amp; !$util.isNull($ctx.identity.username) &amp;&amp; !$util.isNull($ctx.identity.claims) &amp;&amp; !$util.isNull($ctx.identity.sourceIp) &amp;&amp; !$util.isNull($ctx.identity.defaultAuthStrategy) )&#xA;  #set( $authMode = &quot;userPools&quot; )&#xA;#end&#xA;## [End] Determine request authentication mode **&#xA;## [Start] Check authMode and execute owner/group checks **&#xA;#if( $authMode == &quot;userPools&quot; )&#xA;  ## No Static Group Authorization Rules **&#xA;&#xA;&#xA;  ## [Start] Owner Authorization Checks **&#xA;  #set( $isOwnerAuthorized = false )&#xA;  ## Authorization rule: { allow: owner, ownerField: &quot;owner&quot;, identityClaim: &quot;cognito:username&quot; } **&#xA;  #set( $allowedOwners0 = $util.defaultIfNull($ctx.args.owner, null) )&#xA;  #set( $identityValue = $util.defaultIfNull($ctx.identity.claims.get(&quot;username&quot;),&#xA;                        $util.defaultIfNull($ctx.identity.claims.get(&quot;cognito:username&quot;), &quot;___xamznone____&quot;)) )&#xA;  #if( $util.isList($allowedOwners0) )&#xA;    #foreach( $allowedOwner in $allowedOwners0 )&#xA;      #if( $allowedOwner == $identityValue )&#xA;        #set( $isOwnerAuthorized = true )&#xA;      #end&#xA;    #end&#xA;  #end&#xA;  #if( $util.isString($allowedOwners0) )&#xA;    #if( $allowedOwners0 == $identityValue )&#xA;      #set( $isOwnerAuthorized = true )&#xA;    #end&#xA;  #end&#xA;  ## [End] Owner Authorization Checks **&#xA;&#xA;&#xA;  ## [Start] Throw if unauthorized **&#xA;  #if( !($isStaticGroupAuthorized == true || $isOwnerAuthorized == true) )&#xA;    $util.unauthorized()&#xA;  #end&#xA;  ## [End] Throw if unauthorized **&#xA;#end&#xA;## [End] Check authMode and execute owner/group checks **&#xA;&#xA;$util.toJson(null)&#xA;</code></pre>&#xA;<p>Every time the code runs, I get:</p>&#xA;<p><code>subscription error</code></p>&#xA;<p>logged to the console.</p>&#xA;<p>Analyzing the console output, I found the following info:</p>&#xA;<pre><code>LOG  [DEBUG] 39:51.456 AWSAppSyncRealTimeProvider - subscription message from AWS AppSyncRealTime: {&quot;type&quot;:&quot;connection_ack&quot;,&quot;payload&quot;:{&quot;connectionTimeoutMs&quot;:300000}}&#xA;LOG  [DEBUG] 39:51.457 AWSAppSyncRealTimeProvider - Notifying connection successful&#xA;LOG  [DEBUG] 39:51.459 AWSAppSyncRealTimeProvider - subscription message from AWS AppSync RealTime: {&quot;type&quot;:&quot;ka&quot;}&#xA;LOG  [DEBUG] 39:51.459 AWSAppSyncRealTimeProvider {&quot;id&quot;: &quot;&quot;, &quot;observer&quot;: null, &quot;query&quot;: &quot;&quot;, &quot;variables&quot;: {}}&#xA;LOG  [DEBUG] 39:51.620 AWSAppSyncRealTimeProvider - subscription message from AWS AppSync RealTime: {&quot;id&quot;:&quot;9f72da89-0d1d-4aa8-8457-78bb1832478b&quot;,&quot;type&quot;:&quot;error&quot;,&quot;payload&quot;:{&quot;errors&quot;:[{&quot;errorType&quot;:&quot;MappingTemplate&quot;,&quot;message&quot;:&quot;Value for field '$[operation]' not found.&quot;}]}}&#xA;LOG  [DEBUG] 39:51.620 AWSAppSyncRealTimeProvider {&quot;id&quot;: &quot;guid&quot;, &quot;observer&quot;: {&quot;_subscription&quot;: {&quot;_cleanup&quot;: [Function anonymous], &quot;_observer&quot;: [Object], &quot;_queue&quot;: undefined, &quot;_state&quot;: &quot;ready&quot;}}, &quot;query&quot;: &quot;subscription OnCreateHealthPlan($owner: String!) {xA;    onCreateHealthPlan(owner: $owner) {&#xA;        id&#xA;        name&#xA;        type&#xA;        ownerxA;    }}&quot;, &quot;variables&quot;: {&quot;owner&quot;: &quot;cognitoSubField&quot;}}&#xA;LOG  [DEBUG] 39:51.622 AWSAppSyncRealTimeProvider - Error while unsubscribing Error: Subscription never connected&#xA;LOG  [DEBUG] 39:52.624 AWSAppSyncRealTimeProvider - closing WebSocket...&#xA;</code></pre>&#xA;<p>It seems that this is the real error:&#xA;<code>Value for field '$[operation]' not found</code></p>&#xA;<p>Any ideas of why this is happening? </p>&#xA;",975324,,975324,2020-07-10 13:22:50,2020-07-10 13:22:50,aws appsync subscriptions won't fire,<aws-amplify><aws-appsync><graphql-subscriptions>,0,1,0,2020-07-10 13:17:39
62838935,2,,62832089,6,,"<p>Checked out the AWS docs and found out that I could use AWSJSON for lists/arrays like [1, 2, 3] and maps like {&quot;upvotes&quot;: 10}, so now my schema is:</p>&#xA;<pre><code>type Note @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;  title: String&#xA;  image: String&#xA;  components: AWSJSON&#xA;}&#xA;</code></pre>&#xA;<p>Here is the link to know more about it <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html#example-schema-usage"" rel=""noreferrer"">AWS Scalar Types</a></p>&#xA;",11361494,,11361494,2020-07-16 04:23:55,2020-07-16 04:23:55,"",,0,2,0,2020-07-10 16:52:17
62851825,1,62855584,,8,1455,"<p>I have the following Query:</p>&#xA;<pre><code>query {&#xA;  table1(where: {table2: {id: {}}}) {&#xA;    id&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>There is a relationship between <code>table1</code> and <code>table2</code> via a foreign key. That is, in <code>table2</code> I have a column named <code>table1_id</code> and so I can access <code>table2</code> from <code>table1</code>. I want to query all rows from <code>table1</code> that have no related rows in <code>table2</code>. That is, if I do the following query:</p>&#xA;<pre><code>query {&#xA;  table1 {&#xA;    table2 {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I want the rows in <code>table1</code> where this query returns an empty array. I have tried the following:</p>&#xA;<pre><code>query {&#xA;  table1(where: {table2: {id: {_in: []}}}) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And</p>&#xA;<pre><code>query {&#xA;  table1(where: {table2: {id: {_is_null: true}}}) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But nothing seems to work (I get back an empty array). What am I doing wrong?</p>&#xA;",6719765,,,,2021-01-08 17:36:03,Check for empty arrays in Hasura,<postgresql><graphql><hasura>,2,0,0,2020-07-11 16:31:01
62861683,2,,62861231,1,,"<p>According to <a href=""https://www.apollographql.com/docs/link/links/rest/#response-transforming"" rel=""nofollow noreferrer"">Response transforming</a>, apollo expects response from REST APIs like the following:</p>&#xA;<pre><code>{&#xA;  &quot;id&quot;: 1,&#xA;  &quot;name&quot;: &quot;Apollo&quot;&#xA;}&#xA;</code></pre>&#xA;<p>If you cannot control backend, you can use customized response transformer:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>responseTransformer: async response =&gt; response.json().then(({data}) =&gt; data.data?.user)&#xA;</code></pre>&#xA;",11792577,,,,2020-07-12 13:27:37,"",,0,0,0,2020-07-12 13:27:37
62895247,2,,62893664,1,,"<p>I would recommend using <a href=""https://www.npmjs.com/package/graphql-bigint"" rel=""nofollow noreferrer"">graphql-bigint</a> package in this case. This implementation gives you 53-bit integers. Any integer-like number above 52bit will have it's lower values truncated. So if you need it above 52bit, using strings would be safer.</p>&#xA;",5862507,,,,2020-07-14 12:30:18,"",,0,2,0,2020-07-14 12:30:18
62920685,1,,,1,166,"<p>I am using FaunaDB to prototype a web app and I have some datas already inserted into an index <code>all_facts</code>. Now I want to sort the facts by a number, no problem following the tutorial on faunadb docs.</p>&#xA;<p>But the problem is that the new index <code>facts_sorted</code> is an <strong>array of array instead an array of objects</strong> like all others indexes. How is supposed to use a created custom index within the graphql endpoint?</p>&#xA;<p>Already saw <a href=""https://stackoverflow.com/questions/62602964/how-do-i-create-an-index-in-fauna-db-that-returns-sorted-data-in-key-value-pairs"">How do I create an index in Fauna DB that returns sorted data in key value pairs</a> but it's not helpful and not speaking at all about the problem with GraphQL endpoint.</p>&#xA;",2426364,,,,2020-07-15 17:35:04,Fauna CreateIndex and sort using with the GraphQL endpoint,<graphql><faunadb>,0,1,0,2020-07-15 17:35:04
62921739,1,,,4,778,"<p>Minor newbie with GraphQL so I'm a little bit lost here. How would I go about creating a CreateOrUpdate mutation/resolver for a model on AWS Amplify?</p>&#xA;<p>I'm running a lambda function after every user auth to hit a third party API and pull back relevant data to that user. The entities that come back may already be stored but related to another user. I'm assuming there's a better way than attempting to Create, catching an error and then attempting to Fetch &amp; Update with the new user appended to the <code>users</code> field?!</p>&#xA;<pre><code>type Event&#xA;@model&#xA;@auth(rules: [&#xA;  {allow: public, provider: apiKey, operations: [read, create, update, delete]}&#xA;  {allow: owner, ownerField: &quot;users&quot;}&#xA;])&#xA;@key(fields: [&quot;venue&quot;, &quot;date&quot;])&#xA;{&#xA;  id: ID!&#xA;  venue: String!&#xA;  date: AWSDate!&#xA;  ref: String!&#xA;  users: [String]!&#xA;}&#xA;</code></pre>&#xA;<p>Any help massively appreciated (even just good resources to read up on writing resolvers - looking at the generated <code>Mutation.updateEvent.req.vtl</code> file for inspiration is a bit intimidating)</p>&#xA;",850200,,,,2022-03-02 21:11:11,AWS Amplify GraphQL CreateOrUpdate / Upsert mutation,<graphql><aws-amplify>,1,3,0,2020-07-15 18:42:52
62941945,2,,62304696,0,,"<p>I feel obligated to update my answer as @cyberwombat pointed out a better solution than I posted previously.</p>&#xA;<p>You can convert your result into stringified JSON by following ways.</p>&#xA;<p><strong>Option 1:</strong></p>&#xA;<pre><code>#set($resultMap = {})&#xA;&#xA;#foreach($key in $ctx.result.keySet())&#xA;    $util.qr($resultMap.put(&quot;$key&quot;, $ctx.result.get($key)))&#xA;#end&#xA;&#xA;#return($util.escapeJavaScript($util.toJson($resultMap)))&#xA;</code></pre>&#xA;<p><strong>Option 2:</strong></p>&#xA;<p>You can convert your resolver to Pipeline and created a simple Lambda function in NodeJS to stringify the JSON object. This is how you lambda function should look like:</p>&#xA;<pre><code>exports.handler = (event, context, callback) =&gt; {&#xA;&#xA;    const response = {&#xA;        statusCode: 200,&#xA;        body: JSON.stringify(event.input.serviceConfig).replace(/\&quot;/g, '\\\&quot;'),&#xA;    };&#xA;    callback(null, response)&#xA;}; &#xA;</code></pre>&#xA;<p>You can now easily use the returned string in your resolver and get the stringified JSON.</p>&#xA;<p><a href=""https://stackoverflow.com/questions/62518428/stringify-json-object-for-sql-query-in-aws-appsync/62707014#62707014"">Link</a> to my question, explanation and complete answer.</p>&#xA;",1819065,,1819065,2020-07-21 17:46:00,2020-07-21 17:46:00,"",,0,0,0,2020-07-16 19:10:20
62950885,1,,,0,140,<p>I want to alter the mutation using Laravel Creating event. I want to fetch task ID from key that is coming from front end. And then i want to add this ID in replace of key so that my task will be create automatically using lighthouse structure. Here is sample mutation</p>&#xA;<pre><code>mutation&#xA;{&#xA;  createUser(input: {&#xA;    firstname: &quot;last&quot;&#xA;    email: &quot;abc@gmaiol.com&quot;&#xA;    task:&#xA;    {&#xA;      create: { &#xA;         key: 'reminder'&#xA;      }&#xA;    }&#xA;  })&#xA;  {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,7162304,,,,2020-07-17 13:17:55,Can we change/alter nested mutation using Laravel events?,<graphql><lighthouse><laravel-lighthouse><graphql-mutation>,1,0,0,2020-07-17 09:13:45
62956136,1,,,0,84,<p>We deploy a Hasura Docker image as part of our build pipeline. The documentation only shows how to use the web UI to create permissions. Is there a way to setup permissions in an infrastructure-as-code way? I couldn't find any configuration files or database tables in which the permissions are persisted.</p>&#xA;,58962,,,,2021-06-30 17:21:28,How to define Hasura permissions via script,<permissions><graphql><hasura>,1,0,0,2020-07-17 14:30:53
62956958,2,,62956136,0,,<p>The current permissions can be exported by running</p>&#xA;<pre><code> hasura metadata export --admin-secret &lt;passwd&gt; --endpoint http://localhost:8080&#xA;</code></pre>&#xA;<p>The <code>tables.yaml</code> will then contain permission definitions.</p>&#xA;,58962,,58962,2020-07-17 16:24:03,2020-07-17 16:24:03,"",,0,0,0,2020-07-17 15:18:43
62961771,1,63022515,,0,146,"<p>I am running a lambda inside my AWS account that is attempting to run mutations against an AppSync instance in the same account which is authenticated via AWS_IAM. I have created a Role that my lambda assumes which has access to my mutations with the following document:</p>&#xA;<pre><code>{&#xA;    &quot;Action&quot;: [&#xA;        &quot;appsync:GraphQL&quot;,&#xA;        &quot;sts:AssumeRole&quot;&#xA;    ],&#xA;    &quot;Resource&quot;: &quot;arn:aws:appsync:us-west-2:&lt;MyAWSAccountId&gt;:apis/&lt;MyAppSyncAPiId&gt;/types/Mutation/fields/*&quot;,&#xA;    &quot;Effect&quot;: &quot;Allow&quot;&#xA;},&#xA;</code></pre>&#xA;<p>However, I receive the following error below:</p>&#xA;<h2>Error</h2>&#xA;<pre><code>{&#xA;  data: {},&#xA;  errors: [&#xA;    GraphQLError: adapter is not a function&#xA;        at APIClass.&lt;anonymous&gt; (/var/task/node_modules/@aws-amplify/api/dist/aws-amplify-api.js:4627:24)&#xA;        at step (/var/task/node_modules/@aws-amplify/api/dist/aws-amplify-api.js:3800:19)&#xA;        at Object.throw (/var/task/node_modules/@aws-amplify/api/dist/aws-amplify-api.js:3730:14)&#xA;        at rejected (/var/task/node_modules/@aws-amplify/api/dist/aws-     amplify-api.js:3692:32)&#xA;        at runNextTicks (internal/process/task_queues.js:62:5)&#xA;        at processImmediate (internal/timers.js:429:9)&#xA;        at process.topLevelDomainCallback (domain.js:137:15)&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>The lambda auth code works when I am running in my test account, and I have verified that the permissions are same between both test account and this account. I have also verified that the account id and api Id are correct and schemas match.</p>&#xA;<p>I am a little lost as to what this error signifies since I am using the same libraries in test and production. Is there anything else that could be mismatched in accounts that can result in this error?</p>&#xA;",990207,,990207,2020-07-21 20:24:13,2020-07-21 20:24:13,AWS Lambda error GraphQlError: Adapter is not a function when attempting to run mutations to AppSync endpoint,<amazon-web-services><graphql><aws-appsync>,1,0,0,2020-07-17 21:07:39
62973900,2,,62518428,2,,"<p>You can build a JSON variable like this:</p>&#xA;<pre><code>#set($json = $util.toJson({&#xA;  &quot;connectionType&quot;: &quot;$ctx.args.input.serviceConfig.connectionType&quot;,&#xA;  &quot;capacity&quot;: $ctx.args.input.serviceConfig.capacity&#xA;  }))&#xA;</code></pre>&#xA;<p>And insert in your query:</p>&#xA;<pre><code>{&#xA;    &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;    &quot;statements&quot;: [&#xA;        &quot;INSERT INTO b2b_service_catalog(service_name, service_config) VALUES ('$ctx.args.input.serviceName', '$util.escapeJavaScript($json)' RETURNING service_id AS \&quot;serviceId\&quot;, service_name AS \&quot;serviceName\&quot;, service_config AS \&quot;serviceConfig\&quot;&quot;,&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>The above is a bit challenging because of all the quotes and escaping but I think the use of <code>escapeJavaScript</code> will do the trick.</p>&#xA;<p>Or directly:</p>&#xA;<pre><code>{&#xA;    &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;    &quot;statements&quot;: [&#xA;        &quot;INSERT INTO b2b_service_catalog(service_name, service_config) VALUES ('$ctx.args.input.serviceName', '{\&quot;connectionType\&quot;:\&quot;$ctx.args.input.serviceConfig.connectionType\&quot;,\&quot;capacity\&quot;: $ctx.args.input.serviceConfig.capacity}') RETURNING service_id AS \&quot;serviceId\&quot;, service_name AS \&quot;serviceName\&quot;, service_config AS \&quot;serviceConfig\&quot;&quot;,&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;",856498,,856498,2020-07-20 22:09:26,2020-07-20 22:09:26,"",,0,1,0,2020-07-18 21:18:37
62990287,1,,,0,593,"<p>I am using Appsync for graphql server. and use `$util.error(String, String, Object, Object)</p>&#xA;<p><code>in the response mapping template to response error to clients. However, the error messages clients get looks like below json. There are too many extra information there. What clients really care about is the message</code>I made this error<code>. How can I response a simple json object like </code>{&quot;errorMessage&quot;: &quot;I made this error&quot;}` to clients?</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;getError&quot;: null&#xA;  },&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;path&quot;: [&#xA;        &quot;getError&quot;&#xA;      ],&#xA;      &quot;data&quot;: null,&#xA;      &quot;errorType&quot;: &quot;ALWAYS_ERROR&quot;,&#xA;      &quot;errorInfo&quot;: null,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 2,&#xA;          &quot;column&quot;: 3,&#xA;          &quot;sourceName&quot;: null&#xA;        }&#xA;      ],&#xA;      &quot;message&quot;: &quot;I made this error&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;",5421539,,,,2020-07-21 06:58:04,How to customize graphql error response format in Appsync?,<amazon-web-services><graphql><aws-appsync>,1,0,0,2020-07-20 07:13:17
63007210,1,,,0,151,"<p>I have hotchoc all connected up to EF and a sqlserver db.  Here is my query...</p>&#xA;<pre><code>query&#xA;{&#xA;  accounts {&#xA;    holdings {&#xA;      holdingId&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>If I don't have [UseSelection] on my accounts method, the sql statement pulls all the fields on the accounts table but doesn't do a join to holdings.  If I put [UseSelection] on accounts then it correctly selects just the fields I want and joins to holdings to get holdingId.  However, it also fires this sql statement...</p>&#xA;<pre><code>SELECT [e].[AccountID]\r\nFROM [Accounts] AS [e]\r\nORDER BY [e].[AccountID]&#xA;</code></pre>&#xA;<p>What is this extra sql statement for?  Have I done something wrong?</p>&#xA;<p>My Account entity...</p>&#xA;<pre><code>public class Account : BaseEntity&#xA;    {&#xA;        public Account()&#xA;        {&#xA;            AccrualTransactions = new HashSet&lt;AccrualTransaction&gt;();&#xA;            Transactions = new HashSet&lt;Transaction&gt;();&#xA;            Holdings = new HashSet&lt;Holding&gt;();&#xA;        }&#xA;&#xA;        public int AccountId { get; set; }&#xA;        public string AccountName { get; set; }&#xA;        public string AccountNumber { get; set; }&#xA;&#xA;        public ICollection&lt;Transaction&gt; Transactions { get; set; }&#xA;        public ICollection&lt;Holding&gt; Holdings { get; set; }&#xA;    }&#xA;</code></pre>&#xA;<p>The table structure is pretty simple.  Holdings table has an AccountId.  The Account table has a lot of fields but nothing suspicous.</p>&#xA;",5460932,,5460932,2020-07-23 00:32:03,2020-09-07 14:59:54,UseSelection is causing an extra sql statement to fire,<graphql><hotchocolate>,1,2,0,2020-07-21 04:06:23
63019445,1,63113308,,0,1243,"<p>The user will input multiple usernames and I would like to search my DynamoDB table for all each user's id in a single API call.&#xA;The following is the important portion of the graphql user schema:</p>&#xA;<pre><code>type User&#xA;  @model&#xA;  @key(name: &quot;byName&quot;, fields: [&quot;username&quot;], queryField: &quot;findUsername&quot;)&#xA;   {&#xA;  id: ID!&#xA;  email: AWSEmail!&#xA;  username: String!&#xA;  firstName: String&#xA;  lastName: String&#xA;  createdAt: AWSDateTime&#xA;  updatedAt: AWSDateTime&#xA;} &#xA;</code></pre>&#xA;<p>I would like to create a query which takes the list of usernames and returns each user's user id in a single api call. I am not sure how to dynamically and separately add the usernames to a query. Btw, I am using aws-amplify to help with dynamodb and graphql. This is also a React Native project.</p>&#xA;",11810715,,,,2020-07-27 10:37:58,"How To Use The Same GraphQL Query Multiple Times In A Single API Call. Amplify, DynamoDB",<react-native><graphql><amazon-dynamodb><aws-amplify><dynamodb-queries>,1,0,0,2020-07-21 17:01:06
63030044,2,,50318913,1,,"<p>I ran into a similar issue. Try remove async in your function if you are not going to use await. It looks like the function waits until you invoke callback or context.done when async is not there. But it runs through all the way with the async keyword. When it runs through though, whatever it returns at the end of your function is calling the context.done. Here is a sample working code.</p>&#xA;<p>Let me also share two useful resources about <a href=""https://aws.amazon.com/blogs/compute/node-js-4-3-2-runtime-now-available-on-lambda/"" rel=""nofollow noreferrer"">callback</a> and <a href=""https://docs.aws.amazon.com/lambda/latest/dg/nodejs-context.html#nodejs-prog-model-context-properties"" rel=""nofollow noreferrer"">context</a> from aws lambda.</p>&#xA;<pre><code>export const handler = (&#xA;  {&#xA;    headers,&#xA;    pathParameters: pathParams,&#xA;    queryStringParameters: queryParams,&#xA;    body,&#xA;  },&#xA;  context,&#xA;  callback&#xA;) =&gt; {&#xA;  context.callbackWaitsForEmptyEventLoop = false;&#xA;&#xA;  const data = JSON.parse(body);&#xA;  const params = {&#xA;    TableName: process.env.EVENT_TABLE,&#xA;    Item: {&#xA;      id: uuid.v4(),&#xA;      title: data.title,&#xA;      creationDate: new Date().getTime(),&#xA;    },&#xA;  };&#xA;&#xA;  dynamoDb.put(params, (err, data) =&gt; {&#xA;    if (err) {&#xA;      callback(err);&#xA;    }&#xA;    callback(null, {&#xA;      statusCode: 200,&#xA;      body: JSON.stringify(data),&#xA;    });&#xA;  });&#xA;};&#xA;</code></pre>&#xA;",2754828,,2754828,2020-08-10 18:14:39,2020-08-10 18:14:39,"",,0,0,0,2020-07-22 08:32:00
63043279,2,,60496743,0,,"<p>You can get term meta using the <code>get_term_meta()</code> function. See more <a href=""https://developer.wordpress.org/reference/functions/get_term_meta/"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>I believe the meta key you want for this <code>swatch_id</code>.</p>&#xA;",7303754,,,,2020-07-22 21:13:06,"",,0,0,0,2020-07-22 21:13:06
63044264,1,,,4,1708,"<p>I have a large schema with ~70 tables and many of them connected to each other(194 @connection directives) like this:</p>&#xA;<pre><code>type table1 @model {&#xA;  id:ID!&#xA;  name: String!&#xA;  ...&#xA;  table2: table2 @connection&#xA;}&#xA;&#xA;type table2 @model {&#xA;  id:ID!&#xA;  ....&#xA;}&#xA;</code></pre>&#xA;<p>This works fine. Now my data amount is steadily growing and I need to be able to query for results and sort them.</p>&#xA;<p>I've read several articles and found one giving me the advice to create a @key directive to generate a GSI with 2 fields so I can say &quot;Filter the results according to my filter property, sort them by the field &quot;name&quot; and return the first 10 entries, the rest accessible via nextToken parameter&quot;</p>&#xA;<p>So I tried to add a GSI like this:</p>&#xA;<pre><code>type table1 @model &#xA;@key(name: &quot;byName&quot;, fields:[&quot;id&quot;,&quot;name&quot;], queryField:&quot;idByName&quot;){&#xA;  id:ID!&#xA;  name: String!&#xA;  ...&#xA;  table2: table2 @connection&#xA;}&#xA;</code></pre>&#xA;<p>running</p>&#xA;<pre><code>amplify push --minify&#xA;</code></pre>&#xA;<p>I receive the error</p>&#xA;<pre><code>Attempting to add a local secondary index to the table1Table table in the table1 stack. Local secondary indexes must be created when the table is created.&#xA;An error occured during the push operation: Attempting to add a local secondary index to the table1Table table in the table1 stack.&#xA;Local secondary indexes must be created when the table is created.&#xA;</code></pre>&#xA;<p>Why does it create a LSI instead of a GSI? Are there any ways to add @key directives to the tables after they have been created and filled? There are so many datasets from different tables linked with each other so just setting up a new schema would take ages.</p>&#xA;<p>Billingmode is PAY_PER_REQUEST if this has some impact.</p>&#xA;<p>Any ideas how to proceed?</p>&#xA;<p>Thanks in advance!</p>&#xA;<p>Regards Christian</p>&#xA;",2390121,,,,2020-09-12 10:33:27,AWS Amplify create Global Secondary Index after DynamoDB table creation,<amazon-web-services><graphql><amazon-dynamodb><aws-amplify>,1,2,0,2020-07-22 22:49:11
63047701,1,63053505,,0,1112,"<p>I have 2 (hopefully newbie) questions that I need input on, from the community:</p>&#xA;<p>(1) I have made changes to my application's schema.graphql file. How do i ensure that the corresponding queries.js, mutations.js, subscriptions.js files are updated? Previously these used to get updated(I think) when I ran the amplify push command but now they no longer do.</p>&#xA;<p>(2) How would I do a partial mutation using aws amplify? eg: if a mutation has fullName, city, how would i update fullName without passing city from the frontend application?&#xA;I could be editing fullname in the first screen and city in second screen. If I do not pass city in the first screen's mutation, it gets overwritten to null.</p>&#xA;<p>Here's how the mutation looks like:</p>&#xA;<p><strong>mutations.js:</strong></p>&#xA;<pre><code>const updateUserProfile =&#xA;  mutation UpdateUserProfile(&#xA;    $input: UpdateUserProfileInput!&#xA;    $condition: ModelUserProfileConditionInput&#xA;  ) {&#xA;    updateUserProfile(input: $input, condition: $condition) {&#xA;      id&#xA;      fullName&#xA;      city&#xA;      createdAt&#xA;      updatedAt&#xA;      owner&#xA;    }&#xA;  }&#xA;;&#xA;</code></pre>&#xA;<p><strong>userprofile.vue</strong></p>&#xA;<pre><code>import { Auth } from 'aws-amplify';&#xA;import { createUserProfile, updateUserProfile} from '@/graphql/mutations';    &#xA;const userProfileInput={&#xA;              id:userId, &#xA;              fullName:'Ajit Goel',  &#xA;            };&#xA;await API.graphql(graphqlOperation(updateUserProfile, {input: userProfileInput}));&#xA;</code></pre>&#xA;<p><strong>schema.graphql:</strong></p>&#xA;<pre><code> type UserProfile @model &#xA;    @key(fields:[&quot;id&quot;])&#xA;    @auth(rules: [{allow: owner}])&#xA;    {&#xA;        id: String!&#xA;      fullName: String&#xA;      city:String&#xA;  }&#xA;</code></pre>&#xA;<p><strong>Error in console when update mutation is run:</strong></p>&#xA;<p><a href=""https://i.stack.imgur.com/nEQPw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nEQPw.png"" alt=""enter image description here"" /></a></p>&#xA;",391918,,391918,2020-07-23 13:37:50,2020-07-23 13:37:50,Aws Amplify: Partial updates(mutations),<vue.js><graphql><aws-amplify><graphql-js><aws-amplify-cli>,1,0,0,2020-07-23 05:50:49
63053505,2,,63047701,1,,<p>Let me try to help you</p>&#xA;<ol>&#xA;<li><p>You should be able to see changes after amplify push completes. Just make sure you save file changes before trying.</p>&#xA;</li>&#xA;<li><p>Depending on your schema city may be set as mandatory with exclamation point. In that case you could either remove the exclamation point or set the city to empty string. You can add this check later in your resolver if you need it for a specific operation.</p>&#xA;</li>&#xA;</ol>&#xA;,4508433,,,,2020-07-23 11:46:12,"",,0,4,0,2020-07-23 11:46:12
63070080,1,63078337,,0,652,"<p>I would like to convert the following postgres query to graphql for hasura. How can I do it?</p>&#xA;<pre><code>Select CONCAT(cast( &quot;vendorId&quot; as text),split_part(&quot;customerUserName&quot;,'+', 2)) as id,&quot;vendorId&quot;,&quot;customerUserName&quot;  from &quot;VendorCustomertList&quot;&#xA;</code></pre>&#xA;",11153412,,,,2020-07-24 17:10:04,How to convert SQL CONCAT To GRAPHQL query for hasura,<sql><postgresql><graphql><hasura>,1,0,0,2020-07-24 08:44:59
63078337,2,,63070080,2,,"<p>You can create a <a href=""https://www.postgresql.org/docs/9.2/sql-createview.html"" rel=""nofollow noreferrer"">Postgres VIEW</a> and track that via Hasura. From there you have all the same capabilities as a table: changing GraphQL field names, relationships, permissions, etc.</p>&#xA;<p><a href=""http://localhost:9695/console/data/sql"" rel=""nofollow noreferrer"">http://localhost:9695/console/data/sql</a> is where you can write custom SQL and have it be tracked as a migration.</p>&#xA;<p><a href=""https://i.stack.imgur.com/pm2at.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pm2at.png"" alt=""enter image description here"" /></a></p>&#xA;",2526423,,,,2020-07-24 17:10:04,"",,0,0,0,2020-07-24 17:10:04
63087113,2,,63085427,1,,"<p><code>Identity</code> encodes the data in a string, which you can pull out and pass around instead.</p>&#xA;<p>Change your <code>Context</code> to:</p>&#xA;<pre><code>struct Context {&#xA;    identity: Option&lt;String&gt;,&#xA;    connection_pool: DatabaseConnectionPool,&#xA;}&#xA;</code></pre>&#xA;<p>And when you construct it, use <code>identity.identity()</code> to obtain the <code>Option&lt;String&gt;</code>.</p>&#xA;",493729,,,,2020-07-25 10:14:58,"",,0,0,0,2020-07-25 10:14:58
63091916,2,,63091844,3,,<p>Your graphql import statement should be:</p>&#xA;<pre><code>const graphql = require(&quot;graphql&quot;);&#xA;</code></pre>&#xA;,2446254,,,,2020-07-25 18:16:54,"",,0,0,0,2020-07-25 18:16:54
63092092,1,63095016,,0,817,"<p>I'm trying to use <a href=""https://hasura.io/docs/1.0/graphql/manual/schema/computed-fields.html#scalar-computed-fields"" rel=""nofollow noreferrer"">Hasura Computed Fields</a> with a table called players to combine firstName and lastName columns. Below is me copying and altering the example shown in the documentation.</p>&#xA;<pre><code>CREATE FUNCTION player_full_name(player_row players)&#xA;RETURNS TEXT AS $$&#xA;    SELECT player_row.firstName || ' ' || player_row.lastName&#xA;$$ LANGUAGE sql STABLE;&#xA;</code></pre>&#xA;<p>Returns the following error:</p>&#xA;<pre><code>SQL Execution Failed&#xA;postgres-error : missing FROM-clause entry for table &quot;player_row&quot;&#xA;</code></pre>&#xA;",1828214,,1828214,2020-07-25 19:03:07,2020-07-26 00:45:21,Trying to create computed field in Hasura with a custom function,<sql><postgresql><graphql><hasura>,2,0,0,2020-07-25 18:34:47
63093152,2,,63092092,0,,"<p>Are your columns named <code>firstName</code> and <code>lastName</code>?</p>&#xA;<p>With <code>first_name</code> and <code>last_name</code> as columns in the <code>players</code> table, I was able to reproduce the error w/the function shared.</p>&#xA;<p>I believe your options are to rename the columns first_name --&gt; firstName, and last_name --&gt; lastName or define the full name function as:</p>&#xA;<pre><code>CREATE FUNCTION player_full_name(player_row players)&#xA;RETURNS TEXT AS $$&#xA;    SELECT player_row.first_name || ' ' || player_row.last_name&#xA;$$ LANGUAGE sql STABLE;&#xA;</code></pre>&#xA;",2526423,,,,2020-07-25 20:16:34,"",,0,1,0,2020-07-25 20:16:34
63095016,2,,63092092,4,,"<p>Just a quick aside, it may not be directly related to your question, but with postgres, anytime you have column names, if there is any capitalization it requires you quote your fields, so in this case you would need the following function:</p>&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE FUNCTION player_full_name(player_row players)&#xA;RETURNS TEXT AS $$&#xA;    SELECT player_row.&quot;firstName&quot; || ' ' || player_row.&quot;lastName&quot;&#xA;$$ LANGUAGE sql STABLE;&#xA;</code></pre>&#xA;<p>Note the double quotes around the column names, postgres automatically lowercases all columns, i believe this is why hasura opts for snake case on their examples.</p>&#xA;<p>Also i noticed you referenced in your function <code>player_row players</code>, make sure the <code>players</code> portion at the end matches the exact name of your table.</p>&#xA;",1880628,,,,2020-07-26 00:45:21,"",,0,1,0,2020-07-26 00:45:21
63111846,2,,60827105,1,,"<p>In case someone using OpenAPI spec for defining APIGW, use the following:</p>&#xA;<pre><code>/graphql:&#xA;  post:&#xA;    x-amazon-apigateway-integration:&#xA;      type: &quot;AWS&quot;&#xA;      httpMethod: &quot;POST&quot;&#xA;      uri: arn:aws:apigateway:&lt;APIGW_REGION&gt;:&lt;APPSYNC_URL_ID&gt;.appsync-api:path/graphql&#xA;      credentials: &lt;INVOCATION_ROLE_ARN&gt;&#xA;</code></pre>&#xA;<p><a href=""https://docs.aws.amazon.com/general/latest/gr/appsync.html#appsync_region_data_plane"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/general/latest/gr/appsync.html#appsync_region_data_plane</a>&#xA;<a href=""https://docs.aws.amazon.com/apigateway/api-reference/resource/integration/#type"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/apigateway/api-reference/resource/integration/#type</a></p>&#xA;",14001685,,,,2020-07-27 08:52:58,"",,0,1,0,2020-07-27 08:52:58
63113308,2,,63019445,3,,"<p>You can run multiple queries and mutations using batch operations in AWS AppSync. Eg: <code>BatchGetItem</code></p>&#xA;<pre><code>type Post {&#xA;    id: ID!&#xA;    title: String&#xA;}&#xA;&#xA;type Query {&#xA;    batchGet(ids: [ID]): [Post]&#xA;}&#xA;</code></pre>&#xA;<p>Sample query</p>&#xA;<pre><code>query get {&#xA;    batchGet(ids:[1,2,3]){&#xA;        id&#xA;        title&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>batchGet.request.vtl</p>&#xA;<pre><code>#set($ids = [])&#xA;#foreach($id in ${ctx.args.ids})&#xA;    #set($map = {})&#xA;    $util.qr($map.put(&quot;id&quot;, $util.dynamodb.toString($id)))&#xA;    $util.qr($ids.add($map))&#xA;#end&#xA;&#xA;{&#xA;    &quot;version&quot; : &quot;2018-05-29&quot;,&#xA;    &quot;operation&quot; : &quot;BatchGetItem&quot;,&#xA;    &quot;tables&quot; : {&#xA;        &quot;Posts&quot;: {&#xA;            &quot;keys&quot;: $util.toJson($ids),&#xA;            &quot;consistentRead&quot;: true&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>batchGet.response.vtl</p>&#xA;<pre><code>$util.toJson($ctx.result.data.Posts)&#xA;</code></pre>&#xA;<p>For more details check out this tutorial.&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html</a></p>&#xA;",4508433,,4508433,2020-07-27 10:37:58,2020-07-27 10:37:58,"",,0,1,0,2020-07-27 10:22:14
63119068,2,,55435951,0,,"<p>I know this is old but I recently had a similar issue that I was able to solve by adding a <code>@key</code> directive to the schema property that I wanted to search by:</p>&#xA;<pre><code>type User @model @key(name: &quot;getUserByCognitoId&quot;, fields: [&quot;cognitoId&quot;], queryField: &quot;getUserByCognitoId&quot;) {&#xA;  id: ID!&#xA;  cognitoId: ID!&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;<p>Docs: <a href=""https://docs.amplify.aws/cli/graphql-transformer/directives#key"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql-transformer/directives#key</a></p>&#xA;<p>This way AppSync generates the resolver for you and adds a sort key to make querying DynamoDB much more efficient</p>&#xA;",1811481,,,,2020-07-27 16:01:52,"",,0,0,0,2020-07-27 16:01:52
63119591,1,63122743,,0,489,"<p>I recently installed and setup apollo-angular, and am having trouble getting data from a query. I've referred to <a href=""https://stackoverflow.com/questions/51693784/query-works-in-graphiql-but-returns-empty-array-in-actual-code-while-using-react"">other questions</a> that dealt with similar issues, but they weren't helpful. What I'm certain of is:</p>&#xA;<ul>&#xA;<li>I've successfully tested a query, so I know that the Apollo &amp; Hasura are communicating.</li>&#xA;<li>Authorization headers are attached the the requests to the graphql endpoint via an interceptor that attaches a token from Auth0; the network request tab shows a 200, everything looks normal except the empty array.</li>&#xA;<li>The query returns the expected results when I use it on the Graphiql tool on the Hasura back-end.</li>&#xA;<li>Permissions are set on the table in the back-end so that it's accessible.</li>&#xA;<li>No console errors or other feedback are available.</li>&#xA;</ul>&#xA;<p>I expect to get string values from this query, and wne I log the results of the response data, all I get is an empty array labeleld with the table name. The component code:</p>&#xA;<pre><code>import { Component, OnInit, OnDestroy } from '@angular/core';&#xA;&#xA;import { Apollo } from 'apollo-angular';&#xA;import gql from 'graphql-tag';&#xA;&#xA;const getGoal = gql`&#xA;  query GetGoal($survey_id: String!) {&#xA;    goals(where: { survey_id: { _eq: $survey_id } }) {&#xA;      survey_id&#xA;      goal&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;@Component({&#xA;  selector: 'app-goals',&#xA;  templateUrl: './goals.component.html',&#xA;  styleUrls: ['./goals.component.css']&#xA;})&#xA;export class GoalsComponent implements OnInit {&#xA;  loading: boolean;&#xA;  goal: any;&#xA;&#xA;  constructor(private apollo: Apollo) {}&#xA;&#xA;  ngOnInit() {&#xA;    this.apollo&#xA;      .watchQuery&lt;any&gt;({&#xA;        query: getGoal,&#xA;        variables: {&#xA;          survey_id: 'test_survey'&#xA;        }&#xA;      })&#xA;      .valueChanges.subscribe(({ data, loading }) =&gt; {&#xA;        this.loading = loading;&#xA;        this.goal = data.goals.goal;&#xA;      });&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",10230719,,10230719,2020-07-27 18:26:19,2020-07-27 20:07:25,Why is apollo-angular Query returning empty array?,<angular><graphql><apollo><hasura><apollo-angular>,1,4,0,2020-07-27 16:34:59
63122743,2,,63119591,0,,"<p>The issue here was permissions being incorrectly configured, so if you get a similar issue, check your permissions, make sure nested tables are properly joined, etc: I haven't dealt with nested permissions much, so I don't know if there's a more efficient way to solve this, but adding a <code>user_id</code> field to the tables I was querying, and adding the standard &quot;user_id _eq x-hasura-user-id&quot; constraint fixed the problem.</p>&#xA;",10230719,,,,2020-07-27 20:07:25,"",,0,0,0,2020-07-27 20:07:25
63129767,1,,,1,160,"<p>I recently added a <code>@key</code> directive to a schema field so that I could search by that field, although I now get an error implying the previously correct data type is not what is expected. It says it expects a string but got a list, although the field is a list containing an enum.</p>&#xA;<p>Is it possible to query by a specific field without using <code>@key</code>? If not, how can I create records when the <code>@key</code> (seemingly) changes the expected type of a list to a string?</p>&#xA;<p>Below is my code, I added the <code>@key</code> to the <code>categories</code> list, but now when I try to create a new <code>Journey</code> I get the error shown below.</p>&#xA;<p>This is the schema:</p>&#xA;<pre><code>type Journey @model&#xA;  @auth(rules: [{ allow: owner, operations: [create, delete, update] }])&#xA;  @key(name: &quot;getJourneysByCategories&quot;, fields: [&quot;categories&quot;], queryField: &quot;getJourneysByCategories&quot;)&#xA;  @key(name: &quot;getJourneysByName&quot;, fields: [&quot;name&quot;], queryField: &quot;getJourneysByName&quot;) {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;  coverImage: String&#xA;  isPrivate: Boolean!&#xA;  members: [JourneyUsersBridge] @connection(name: &quot;JourneyUsers&quot;)&#xA;  moderators: [JourneyModeratorsBridge] @connection(name: &quot;ModeratedBy&quot;)&#xA;  creator: User! @connection(name: &quot;JourneyCreator&quot;)&#xA;  goals: [Goal] @connection(name: &quot;JourneyGoals&quot;)&#xA;  posts: [Post] @connection(name: &quot;JourneyPosts&quot;)&#xA;  categories: [JourneyCategory!]!&#xA;}&#xA;</code></pre>&#xA;<p>This is an example of the code used to create a <code>Journey</code>:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type CreateJourneyInput = {&#xA;  name: string;&#xA;  description?: string | null;&#xA;  coverImage?: string | null;&#xA;  isPrivate: boolean;&#xA;  categories: Array&lt;JourneyCategory | null&gt;;&#xA;  journeyCreatorId: string;&#xA;};&#xA;const journey: CreateJourneyInput = {&#xA;    name: 'My GraphQL Journey',&#xA;    description: 'This Journey was made using GraphQL minus DataStore!',&#xA;    isPrivate: false,&#xA;    categories: [JourneyCategory.EXMAMPLE],&#xA;    journeyCreatorId: userId&#xA;};&#xA;const result = await API.graphql(&#xA;    graphqlOperation(mutations.createJourney, { input: journey })&#xA;);&#xA;</code></pre>&#xA;<p>This is the full error:</p>&#xA;<pre><code>&quot;One or more parameter values were invalid: Type mismatch for Index Key categories Expected: S Actual: L IndexName: getJourneysByCategories (Service: AmazonDynamoDBv2; Status Code: 400; Error Code: ValidationException; Request ID: U4EB7HPO1GU5LHVAOPMGAJJHANVV4KQNSO5AEMVJF66Q9ASUAAJG)&quot;&#xA;</code></pre>&#xA;<p>So I removed the <code>getJourneysByCategories</code> key and the upload worked fine. What's happening here and why?</p>&#xA;<p>I just want to be able to query by <code>categories</code> - perhaps <code>@key</code> wasn't the right route to take? Does the key directive not work with lists?</p>&#xA;",1811481,,,,2020-07-28 08:14:21,AppSync - unable to create a schema with an array when the array property has `@key` directive associated with it,<amazon-web-services><graphql><aws-appsync>,0,0,0,2020-07-28 08:14:21
63139464,2,,63138993,1,,"<pre><code>SELECT pt.fk_people_id AS id, &#xA;       p1.code, &#xA;       pt.user_name &#xA;FROM       Peoples p &#xA;INNER JOIN PeopleFriends pf      ON p.id = pf.fk_user_id &#xA;INNER JOIN Peoples p1            ON p1.id = pf.fk_friend_id&#xA;INNER JOIN PeopleTranslations pt ON pf.fk_friend_id = pt.fk_people_id &#xA;INNER JOIN Languages l           ON pt.fk_language_id = l.id &#xA;WHERE l.code = 'EN'&#xA;  AND p.id = 1&#xA;</code></pre>&#xA;<p>Taken into account the condition in WHERE the query may be simplified to</p>&#xA;<pre><code>SELECT pt.fk_people_id AS id, &#xA;       p1.code, &#xA;       pt.user_name &#xA;FROM       PeopleFriends pf&#xA;INNER JOIN Peoples p1            ON p1.id = pf.fk_friend_id&#xA;INNER JOIN PeopleTranslations pt ON pf.fk_friend_id = pt.fk_people_id &#xA;INNER JOIN Languages l           ON pt.fk_language_id = l.id &#xA;WHERE l.code = 'EN'&#xA;  AND pf.fk_user_id = 1&#xA;</code></pre>&#xA;",10138734,,10138734,2020-07-28 17:32:19,2020-07-28 17:32:19,"",,0,1,0,2020-07-28 17:16:34
63152006,1,,,2,1105,"<p>I've got the following use case I want to solve with AWS AppSync:</p>&#xA;<ol>&#xA;<li>Client sends GraphQL query <code>saved(username: String)</code></li>&#xA;<li>AppSync sends query to an HTTP endpoint which returns a list of items: <code>{&quot;items&quot;: [&quot;a&quot;, &quot;b&quot;] }</code></li>&#xA;<li>For each of these items (a,b) AppSync sends a query to an HTTP endpoint which returns details for the items. I.e. <code>{&quot;images&quot;: [&quot;1.jpg&quot;, &quot;2.jpg&quot;], &quot;panoramas&quot;: [&quot;1a.jpg&quot;]}</code></li>&#xA;<li>This should be combined to an response: <code>{&quot;saved&quot;: [{&quot;images&quot;: [&quot;1.jpg&quot;, &quot;2.jpg&quot;], &quot;panoramas&quot;: [&quot;1a.jpg&quot;]}, {&quot;images&quot;: [&quot;11.jpg&quot;, &quot;22.jpg&quot;], &quot;panoramas&quot;: [&quot;1b.jpg&quot;]}]}</code></li>&#xA;</ol>&#xA;<p>schema:</p>&#xA;<pre><code>type Query {&#xA;    saved(username: String!): [Detail]&#xA;}&#xA;&#xA;type Detail {&#xA;    images: [String]&#xA;    panoramas: [String]&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>The HTTP enpoints are fairly simple:</p>&#xA;<pre><code>GET /users/$username/saved/&#xA;GET /details/$itemid/&#xA;</code></pre>&#xA;<p>I've looked into Pipeline resolvers but couldn't get anything working. Also I tried to attach a resolver directly to &quot;Detail&quot; which is not possible.&#xA;It seems that I lack some basic understanding of AppSync here.&#xA;Can you point me to the right direction?</p>&#xA;",906050,,,,2020-07-30 02:29:21,AppSync perform multiple HTTP requests for one query,<graphql><aws-appsync>,1,0,0,2020-07-29 10:54:41
63157854,2,,63152006,1,,"<p>So, I did some further experimentation and testing, this is the closest I came.</p>&#xA;<p>Modify your schema like this;</p>&#xA;<pre><code>type Query {&#xA;  saved(username: String!): [Item]&#xA;   &#xA;type Item {&#xA;  items: String&#xA;  details: Details&#xA;}&#xA;&#xA;type Details {&#xA;  images: [String]&#xA;  panorama: [String]&#xA;}&#xA;</code></pre>&#xA;<p>For your <code>saved</code> query;</p>&#xA;<p>Request Template</p>&#xA;<pre><code>{&#xA;  &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;  &quot;method&quot;: &quot;GET&quot;,&#xA;  &quot;resourcePath&quot;: &quot;/users/$ctx.args.username/saved&quot;,&#xA;  &quot;params&quot;:{&#xA;      &quot;headers&quot;: {&#xA;          &quot;Content-Type&quot;: &quot;application/json&quot;&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Since your API response is not exactly what AppSync would recognize so we have to do some sanitation. Therefore in response template</p>&#xA;<pre><code>#if($ctx.error)&#xA;  $util.error($ctx.error.message, $ctx.error.type)&#xA;#end&#xA;#if($ctx.result.statusCode == 200)&#xA;    #set($itemList = [])&#xA;    #set($items = $util.parseJson($ctx.result.body).items)&#xA;    #foreach($item in $items)&#xA;      #set($itemJson = {})&#xA;      $util.qr($itemJson.put(&quot;items&quot;, $item))&#xA;      $util.qr($itemList.add($itemJson))&#xA;    #end&#xA;    #return($itemList)&#xA;#else&#xA;    $utils.appendError($ctx.result.body, &quot;$ctx.result.statusCode&quot;)&#xA;#end&#xA;</code></pre>&#xA;<p>Now, you can attach another HTTP resolver with your <code>details</code> like this;</p>&#xA;<p>Request Template</p>&#xA;<pre><code>{&#xA;  &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;  &quot;method&quot;: &quot;GET&quot;,&#xA;  &quot;resourcePath&quot;: &quot;/details/$ctx.source.items&quot;,&#xA;  &quot;params&quot;:{&#xA;      &quot;headers&quot;: {&#xA;          &quot;Content-Type&quot;: &quot;application/json&quot;&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Response template</p>&#xA;<pre><code>#if($ctx.error)&#xA;  $util.error($ctx.error.message, $ctx.error.type)&#xA;#end&#xA;#if($ctx.result.statusCode == 200)&#xA;    $ctx.result.body&#xA;#else&#xA;    $utils.appendError($ctx.result.body, &quot;$ctx.result.statusCode&quot;)&#xA;#end&#xA;</code></pre>&#xA;<p>I tested the above code and it give me this response;</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;saved&quot;: [&#xA;      {&#xA;        &quot;items&quot;: &quot;a&quot;,&#xA;        &quot;details&quot;: {&#xA;          &quot;images&quot;: [&#xA;            &quot;1.jpg&quot;,&#xA;            &quot;2.jpg&quot;&#xA;          ],&#xA;          &quot;panoramas&quot;: [&#xA;            &quot;1a.jpg&quot;&#xA;          ]&#xA;        }&#xA;      },&#xA;      {&#xA;        &quot;items&quot;: &quot;b&quot;,&#xA;        &quot;details&quot;: {&#xA;          &quot;images&quot;: [&#xA;            &quot;11.jpg&quot;,&#xA;            &quot;22.jpg&quot;&#xA;          ],&#xA;          &quot;panoramas&quot;: [&#xA;            &quot;1b.jpg&quot;&#xA;          ]&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I hope this will help you and might not give you exactly what you asked in your question (specially your requirement # 4) but I hope it will at least give you some direction.</p>&#xA;",1819065,,1819065,2020-07-30 02:29:21,2020-07-30 02:29:21,"",,0,2,0,2020-07-29 16:09:27
63168634,1,,,0,169,"<p>I have a survey creation mutation and I want to create nested records with survey creation mutation. I am using query variables to set the data for mutation. When I create only survey without nested attributes it works successfully but when I add nested attributes I get the error as attached.&#xA;I have a backend in nexus prisma2.</p>&#xA;<p>Quick help will highly be appreciated.</p>&#xA;<p><a href=""https://i.stack.imgur.com/fvQb3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fvQb3.png"" alt=""enter image description here"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/MDgf3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/MDgf3.png"" alt=""enter image description here"" /></a></p>&#xA;",2282559,,,,2020-07-30 07:55:51,"Variable \""$data\"" of required type ""Type"" was not provided",<graphql><prisma-graphql><graphql-mutation><nexus-prisma><prisma2>,0,3,0,2020-07-30 07:55:51
63174276,2,,63173639,2,,"<p>Think of codegen as development tool, not as runtime library, so it should provide typings and generate code. The functionality you mentioned refers to the runtime behaviour of you app.</p>&#xA;<p>GraphQL-Codegen doesn't deal with this kind of functionality, but you can create a custom plugin that will create the grouped operations you need (<a href=""https://graphql-code-generator.com/docs/custom-codegen/index"" rel=""nofollow noreferrer"">https://graphql-code-generator.com/docs/custom-codegen/index</a>).</p>&#xA;<p>I think the best way to group operation in runtime is to use batching solution. If you are using Apollo-Client, you can use <code>apollo-link-batch-http</code> (<a href=""https://www.apollographql.com/docs/link/links/batch-http/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/link/links/batch-http/</a>) and it will group GraphQL operations that are executed together (you can customize the timespan).</p>&#xA;",913684,,,,2020-07-30 13:29:36,"",,0,0,0,2020-07-30 13:29:36
63178155,1,,,0,335,"<p>Schema snippet:</p>&#xA;<pre><code>type Query {&#xA;  getPCSData(country: $String, year: $String, payCycle: $String): PCSDataOutput&#xA;}&#xA;</code></pre>&#xA;<p>Dynamodb Resolver:</p>&#xA;<pre><code> PCSDataResolver:&#xA; Type: AWS::AppSync::Resolver&#xA; DependsOn: PCSGraphQLSchema&#xA; Properties:&#xA;   ApiId:&#xA;     Fn::GetAtt: [PCSGraphQLApi, ApiId]&#xA;TypeName: Query&#xA;FieldName: getPCSData&#xA;DataSourceName:&#xA;  Fn::GetAtt: [PCSGraphQLDDBDataSource, Name]&#xA;RequestMappingTemplate: |&#xA;   {&#xA;       &quot;version&quot;: &quot;2017-02-28&quot;,&#xA;       &quot;operation&quot;: &quot;GetItem&quot;,&#xA;       &quot;key&quot;: {&#xA;        &quot;Country_Year_PayCycle&quot;: ?????????&#xA;        }&#xA;   }&#xA;ResponseMappingTemplate: &quot;$util.toJson($ctx.result)&quot;&#xA;</code></pre>&#xA;<p>Here, I am looking to form key Country_Year_PayCycle using all three arguments passed from the query something like this Country_Year_PayCycle = country+ year+payCycle</p>&#xA;<p>Is it possible to concat the query arguments and form key ?</p>&#xA;",13095520,,,,2020-07-30 19:21:15,How to form key using query arguments in Dynamodb resolver request mapping?,<amazon-web-services><graphql><amazon-dynamodb><aws-appsync>,1,0,0,2020-07-30 17:14:05
63179955,2,,63178155,0,,"<p>This is how I resolve</p>&#xA;<pre><code>RequestMappingTemplate: |&#xA;## Set up some space to keep track of things we're updating **&#xA;#set($concat =&quot;_&quot;)&#xA;#set($country = $ctx.args.country )&#xA;#set($year = $ctx.args.year )&#xA;#set($payCycle = $ctx.args.payCycle )&#xA;#set($pk = &quot;$country$concat$year$concat$payCycle&quot;)&#xA;&#xA;{&#xA;    &quot;version&quot;: &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot;: &quot;GetItem&quot;,&#xA;    &quot;key&quot;: {&#xA;        &quot;Country_Year_PayCycle&quot;: $util.dynamodb.toDynamoDBJson($pk)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",13095520,,,,2020-07-30 19:21:15,"",,0,0,0,2020-07-30 19:21:15
63183139,2,,63178861,4,,<p>The way I have done it is to define a schema using AWS AppSync and to have AppSync call Lambda resolvers that use Gremlin Python. AppSync provides a fully managed GraphQL server environment. The Lambda Python code makes Neptune calls and returns the data to AppSync. For my use case it worked very well. I am aware of several other people using the same approach.</p>&#xA;,5442034,,,,2020-07-31 00:13:48,"",,0,1,0,2020-07-31 00:13:48
63203746,1,63203793,,1,56,"<p>How can I pass data to a view and use it directly in the &quot;header&quot;? All tutorials I made are accessing the data in the view body - which works fine - but I want to call a graphlql method from the UpdateAccountView and than render a view based on the result.</p>&#xA;<p>My class for passing data:</p>&#xA;<pre><code>class Account {&#xA;    var tel: Int&#xA;    &#xA;    init(tel: Int) {&#xA;        self.tel = tel&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>My main view where the class is initialised (simplified - normally the &quot;tel&quot; will come from an input)</p>&#xA;<pre><code>struct ContentView: View {&#xA;&#xA;        var account: Account = Account(tel: 123)&#xA;        var body: some View {&#xA;             NavigationView {&#xA;                   NavigationLink(&#xA;                        destination: UpdateAccountView(account: account),&#xA;                        label: {&#xA;                            Text(&quot;Navigate&quot;)&#xA;                        })&#xA;             }&#xA;         }&#xA;}&#xA;&#xA;        &#xA;</code></pre>&#xA;<p>The view I call to do the request and call the next view based on the result&#xA;UpdateAccount is taking tel:Int as a parameter.&#xA;And here is the problem. I cannot access account.tel from the passed data.</p>&#xA;<pre><code>struct UpdateAccountView: View {&#xA;     var account: Account&#xA;     @ObservedObject private var updateAccount: UpdateAccount = UpdateAccount(tel: account.tel)&#xA;&#xA;     @ViewBuilder&#xA;     var body: some View {&#xA;        if updateAccount.success {&#xA;              AccountVerifyView()&#xA;        } else {&#xA;              ContentView()&#xA;        }&#xA;     }&#xA;} &#xA;</code></pre>&#xA;<p>The error:</p>&#xA;<blockquote>&#xA;<p>Cannot use instance member 'account' within property initializer; property initializers run before 'self' is available</p>&#xA;</blockquote>&#xA;<p>Update method (GraphQL):</p>&#xA;<pre><code>class UpdateAccount: ObservableObject {&#xA;   @Published var success: Bool&#xA;   init(tel: Int){&#xA;       self.success = false&#xA;       update(tel: tel)&#xA;    &#xA;   }&#xA;   func update(tel: Int){&#xA;      Network.shared.apollo.perform(mutation: UpdateAccountMutation(tel: tel)) { result in&#xA;      switch result {&#xA;      case .success(let graphQLResult):&#xA;        self.success = graphQLResult.data!.updateAccount.success&#xA;        &#xA;      case .failure(let error):&#xA;        print(&quot;Failure! Error: \(error)&quot;)&#xA;        self.success = false&#xA;        }&#xA;      }&#xA;}&#xA;</code></pre>&#xA;<p>I saw that there is an EnvironmentObject but than the variable become available globally as far as I understood, which is not necessary here.&#xA;Thank you for your help.</p>&#xA;",5192402,,,,2020-08-01 09:39:56,SwiftUI access passed view data in sctruct header,<view><graphql><swiftui><parameter-passing>,1,0,0,2020-08-01 09:33:49
63203793,2,,63203746,2,,"<p>You can make it in explicit <code>init</code>, like</p>&#xA;<pre><code>struct UpdateAccountView: View {&#xA;     var account: Account&#xA;     @ObservedObject private var updateAccount: UpdateAccount  // &lt;&lt; declare&#xA;&#xA;     init(account: Account) {&#xA;        self.account = account&#xA;        self.updateAccount = UpdateAccount(tel: account.tel)   // &lt;&lt; here !!&#xA;     }&#xA;&#xA;     // ... other code&#xA;}&#xA;</code></pre>&#xA;",12299030,,,,2020-08-01 09:39:56,"",,0,0,0,2020-08-01 09:39:56
63227015,1,,,2,635,"<p>I am working on a reservation application. Currently, we use auth0 for authentication in Flutter and Hasura graphql as our db. Our system has two apps: one for users and one for managers.&#xA;The User's app can both Sign Up and Sign In, but in the Manager's app only for Sign In, where the manager user is registered by Administrator.&#xA;In the Manager's app, we have multiple roles such as staff, manager, owner,...&#xA;In the User's app, we have only a user role.</p>&#xA;<p>In Auth0 we can create &quot;rule&quot; to assign a user role when user signUp/signIn as follows.</p>&#xA;<pre><code>function (user, context, callback) {&#xA;  const namespace = &quot;https://hasura.io/jwt/claims&quot;;&#xA;  context.idToken[namespace] = &#xA;    { &#xA;      'x-hasura-default-role': 'user',&#xA;      'x-hasura-allowed-roles': ['user'],&#xA;      'x-hasura-user-id': user.user_id&#xA;    };&#xA;  callback(null, user, context);&#xA;}&#xA;</code></pre>&#xA;<p>this rule run in all the applications we created in Auth0. So, when we create a manager user. The role is set to the user role.&#xA;My question is, I want to create a manager user in manager app, how can I assign a specific role for each user. For example, Admin can create a user with a staff role...</p>&#xA;",3955338,,,,2020-08-03 18:24:50,How to implement custom authentication in auth0 and hasura graphql?,<flutter><graphql><roles><auth0><hasura>,1,0,0,2020-08-03 09:37:25
63233276,1,,,0,249,"<p>I am trying to insert/mutate a data using graphql to a dynamodb, see image below having error while inserting data. I am confused if the error exist while creating the schema or while mutating the data. The table was created using amplify</p>&#xA;<p>this is the schema script</p>&#xA;<pre><code>type PersonalAttributes {&#xA;  FirstName: String&#xA;  LastName: String&#xA;  MiddleName: String&#xA;  Email: String&#xA;  Highlights: String&#xA;}&#xA;&#xA;type Configurations {&#xA;  StudyTopic: String&#xA;  SpokenLanguage: String&#xA;  Gender: String&#xA;  ReadbackSpeed: Float&#xA;}&#xA;&#xA;type Chapter {&#xA;  CTitle: String&#xA;  Content: String&#xA;  TermHighlights: [String]&#xA;}&#xA;&#xA;type Book {&#xA;  Title: String&#xA;  Author: String&#xA;  HighlightsChapter: [Chapter]&#xA;}&#xA;&#xA;type Athena @model {&#xA;  UserKey: ID&#xA;  UserName: String!&#xA;  PersonalInformation: [PersonalAttributes]&#xA;  SysConfig: [Configurations]&#xA;  Books: [Book]&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/LrJR1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LrJR1.png"" alt=""error"" /></a></p>&#xA;",9253041,,,,2020-08-03 19:46:14,Graphql mutation error in aws amplify appsync,<graphql><amazon-dynamodb><aws-amplify><aws-appsync>,1,0,0,2020-08-03 16:27:39
63234867,2,,63227015,0,,"<p>Admins can create users from the Manager's app - I assume they might specify attributes like name, email, etc.</p>&#xA;<p>They may hit a Custom Action or Remote Schema field (with appropriate permissions and login credentials), that makes an authenticated outbound request to create the user in Auth0 (POST /api/v2/users) and then update the reference record in Hasura DB with the auth0 id. In Hasura you can also store the role along with email, name, etc.</p>&#xA;<p>Now after the user has signed up (set their password), they sign in to trigger the custom rule.</p>&#xA;<p>Following <a href=""https://hasura.io/docs/1.0/graphql/manual/guides/integrations/auth0-jwt.html#configure-auth0-rules-callback-urls"" rel=""nofollow noreferrer"">this documentation</a>, as you have, replace</p>&#xA;<pre><code>// do some custom logic to decide allowed roles&#xA;</code></pre>&#xA;<p>With some logic that makes a request to your Hasura endpoint and gets the role information and any other data based on the user email attempting to login. This user-specific data can then be used to construct the JWT. You can hit Hasura from the Auth0 Rule via HASURA_GRAPHQL_ADMIN_SECRET stored in Rule Settings. E.g.</p>&#xA;<pre><code>const adminSecret = configuration.HASURA_GRAPHQL_ADMIN_SECRET&#xA;</code></pre>&#xA;<p>If you want login to work in multiple environments (esp. local), I think you'll need to (a) expose your local hasura to the internet via something like ngrok and (2) pass in custom params into the rule to control its behavior, specifically which Hasura endpoint it's hitting.</p>&#xA;<p>In Auth0 <a href=""https://auth0.com/docs/rules/references/context-object"" rel=""nofollow noreferrer"">Context object</a>, you can pass any data via query params during login. For example:</p>&#xA;<pre><code>const hasuraEndpoint = context.request.query.hasuraEndpoint&#xA;</code></pre>&#xA;<p>can be used in the Rule vs. a statically defined endpoint.</p>&#xA;",2526423,,1839439,2020-08-03 18:24:50,2020-08-03 18:24:50,"",,0,0,0,2020-08-03 18:19:46
63236012,2,,63233276,0,,"<p>I recommend including an <code>id: ID!</code> for your <code>Athena</code> model. Provide a valid ID whenever you create <code>Athena</code> objects.</p>&#xA;<p>The error indicates that no <code>id</code> was provided (Dynamo wanted a valid, non-null String, but it got null.)</p>&#xA;<p>The error results from the create mutation call, not from setup of the Dynamo table.</p>&#xA;",695787,,,,2020-08-03 19:46:14,"",,0,0,0,2020-08-03 19:46:14
63255546,2,,63121013,5,,"<p>The role goes either as a join with the users table (you can keep the auth0 id here) or as <strong>part of the JWT signed by auth0</strong> (there's a Roles feature in its UI) or <strong>as part of an authentication hook</strong> (see Hasura's docs). Roles aren't given by the calling client, because normally you don't control its execution.</p>&#xA;",63621,,63621,2020-08-05 18:59:38,2020-08-05 18:59:38,"",,0,0,0,2020-08-04 21:49:53
63260140,1,,,1,665,"<p>I have learning GraphQL from past few days ,Totally beginner  I tried to fetch some data using graphQL apollo react client . I use apollo server in both backend server and in client(React) . I tried to fetch the data but in response i get duplicate data as take example we have data of user with their department names and have role in it take role as Admin in intial so query i use to fetch is :</p>&#xA;<p>&quot;db.users.aggregate([{$group:{_id:{department:&quot;$department&quot;,role:&quot;Admin&quot;,username:&quot;$username&quot;} } } ])&quot;</p>&#xA;<p>i get perfect response in graphql (Server-side) by using :</p>&#xA;<pre><code>{&#xA;  getUserswithrole{&#xA;    _id{&#xA;      username&#xA;      department&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>but when i tried in React-Apollo-client using useQuery Hooks. The result will look like:</p>&#xA;<pre><code>getUserwithrole[&#xA;    { _id:{ username:&quot;Samename&quot; , role:&quot;Admin&quot; , department:&quot;Samedepartment&quot;} }&#xA;    { _id:{ username:&quot;Samename&quot; , role:&quot;Admin&quot; , department:&quot;Samedepartment&quot;} }&#xA;    { _id:{ username:&quot;Samename&quot; , role:&quot;Admin&quot; , department:&quot;Samedepartment&quot;} }&#xA;]&#xA;</code></pre>&#xA;<p>i tried the find the solution but didn't match with this problem .Solution i looked from source &quot;internet&quot; is GraphQL-deduplicator or GraphQL-crunch .please suggest me the what the possible solution i can try .</p>&#xA;<p>Thank you</p>&#xA;",13279118,,,,2020-08-05 07:12:36,Getting Duplicate Response in React-Apollo-client,<reactjs><graphql><react-apollo><apollo-client><apollo-server>,0,4,0,2020-08-05 07:12:36
63273764,1,,,1,62,<p>I am trying to get data from my jira account but am unable to figure out where to start connecting Apollo server to Atlassian. I have an api token and my apollo server set up so I can query public api's. How do I authenticate my user with the Atlassian server in order to pull data from an account?</p>&#xA;,14056549,,,,2020-08-05 21:28:29,How to authenticate and connect to Atlassian from apollo server?,<reactjs><authentication><graphql><jira><apollo-server>,0,2,0,2020-08-05 21:28:29
63275412,1,,,5,10817,"<p>In my app users have the ability to start a conversation with other users and after the conversation is created they can send messages to one another. However after trying to create a conversation between two users I get an error saying</p>&#xA;<pre><code> Failed to create graphql GraphQLResponseError&lt;Conversation&gt;: GraphQL service returned a successful response containing errors: [Amplify.GraphQLError(message: &quot;Not Authorized to access createConversation on type Conversation&quot;, locations: Optional([Amplify.GraphQLError.Location(line: 2, column: 3)]), path: Optional([Amplify.JSONValue.string(&quot;createConversation&quot;)]), extensions: Optional([&quot;data&quot;: Amplify.JSONValue.null, &quot;errorType&quot;: Amplify.JSONValue.string(&quot;Unauthorized&quot;), &quot;errorInfo&quot;: Amplify.JSONValue.null]))]&#xA;Recovery suggestion: The list of `GraphQLError` contains service-specific messages &#xA;</code></pre>&#xA;<p>This is my first time using GraphQL and it probably shows. I would like to give <code>members</code> of model <code>Conversation</code> the ability to create their convo. Can anyone possibly steer me in the right direction?&#xA;The following is my GraphQL Schema</p>&#xA;<pre><code>type User &#xA;  @model &#xA;  @auth(rules: [{ allow: owner, operations: [create, delete, update]}]) {&#xA;  id: ID!&#xA;  userSub: String!&#xA;  fullName: String!&#xA;  profileImageFileName: String!&#xA;  conversations: [ConvoLink] @connection(name: &quot;UserLinks&quot;)&#xA;  messages: [ChatMessage] @connection(name: &quot;UserMessages&quot;, keyField: &quot;authorId&quot;)&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;}&#xA;&#xA;type Conversation&#xA;  @model&#xA;  @auth(rules: [{ allow: owner, ownerField: &quot;members&quot;, operations: [create, delete, update] }]) {&#xA;  id: ID!&#xA;  messages: [ChatMessage] @connection(name: &quot;ConvoMsgs&quot;, sortField: &quot;createdAt&quot;)&#xA;  associated: [ConvoLink] @connection(name: &quot;AssociatedLinks&quot;)&#xA;  name: String!&#xA;  members: [String!]!&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;}&#xA;&#xA;type ChatMessage &#xA;  @model&#xA;  @auth(rules: [{ allow: owner, ownerField: &quot;authorId&quot; }]) {&#xA;  id: ID!&#xA;  author: User @connection(name: &quot;UserMessages&quot;, keyField: &quot;authorId&quot;)&#xA;  authorId: String&#xA;  content: String!&#xA;  conversation: Conversation! @connection(name: &quot;ConvoMsgs&quot;)&#xA;  messageConversationId: ID!&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;}&#xA;&#xA;type ConvoLink &#xA;  @model(&#xA;    mutations: { create: &quot;createConvoLink&quot;, update: &quot;updateConvoLink&quot; }&#xA;    queries: null&#xA;    subscriptions: null&#xA;  ) {&#xA;  id: ID!&#xA;  user: User! @connection(name: &quot;UserLinks&quot;)&#xA;  convoLinkUserId: ID&#xA;  conversation: Conversation! @connection(name: &quot;AssociatedLinks&quot;)&#xA;  convoLinkConversationId: ID!&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;}&#xA;</code></pre>&#xA;<p>Swift code</p>&#xA;<pre><code>func createConvo(){&#xA;      let conversation = Conversation( messages: List&lt;ChatMessage&gt;.init(), associated: List&lt;ConvoLink&gt;.init(),name: &quot;convo&quot;, members: [currentUserSub, recieverUserSub])&#xA;        _ = Amplify.API.mutate(request: .create(conversation)) { event in&#xA;            switch event {&#xA;            case .success(let result):&#xA;                switch result {&#xA;                case .success(let convo):&#xA;                  //  DispatchQueue.main.async {&#xA;                        &#xA;                        print(&quot;Successfully created the convo: \(convo)&quot;)&#xA;                       // self.messageButton.isHidden = true&#xA;                   // }&#xA;                case .failure(let graphQLError):&#xA;                    print(&quot;Failed to create graphql \(graphQLError)&quot;)&#xA;                    //  self.checkIfOffline()&#xA;                }&#xA;            case .failure(let apiError):&#xA;                print(&quot;Failed to create a todo&quot;, apiError)&#xA;                // self.checkIfOffline()&#xA;            }&#xA;        }&#xA;}&#xA;</code></pre>&#xA;",13101982,,13101982,2020-08-06 01:02:29,2020-08-06 06:03:25,Amplify GraphQL Error not authorized to access create,<swift><graphql><aws-amplify>,1,0,0,2020-08-06 00:57:17
63277717,2,,63275412,1,,"<p>When you use the auth directive on your model types, ie. <code>@auth(rules: [{allow: owner, operations: [create, delete, update]})</code> requires an authenticated user to call the API.</p>&#xA;<p>Have the user signed in using <code>Amplify.Auth.signIn</code> before <code>Amplify.API.mutate/query/subscribe</code>?</p>&#xA;<p><strong>Debugging</strong></p>&#xA;<p>Since you are using the auth directive, provisioning the API would have also provisioned auth category as well. You can open the provisioned auth resource via <code>amplify console auth</code> and select Cognito User Pool. You can create a user via the console and it will be created in a state that requires a new password.</p>&#xA;<p>Then, you can run <code>amplify console api</code>, select GraphQL, to open the AppSync console, then navigate to the Queries tab to test out your API. When testing out your API, the Queries console should indicate which is your primary authorization mode for the API, and will require you to login. Get the web app client Id from the Cognito User Pool console, with the username of the previous user you created and the password. Once you try to login, it will prompt you to enter a new password. Once you have authenticated the user via the Queries console, you can test out your API calls</p>&#xA;<p><strong>In app</strong></p>&#xA;<p>If you are able to get pass the NotAuthorized error by incorporating <code>Amplify.API.signUp/confirmSignUp/signIn</code> flow into your app, but still seeing other issues with the API call, feel free to provide more details in an Issue over in the Github repo here: <a href=""https://github.com/aws-amplify/amplify-ios/issues"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-ios/issues</a> as the repo is actively monitored</p>&#xA;",2464632,,,,2020-08-06 06:03:25,"",,0,2,0,2020-08-06 06:03:25
63282574,1,63458743,,0,112,"<p>Graphql schema:</p>&#xA;<pre><code>type SDKConfig @model &#xA;  @key(name: &quot;byPublisher&quot;, fields: [&quot;publisher_id&quot;, &quot;id&quot;]){&#xA;  id: ID!&#xA;  publisher_id: ID!&#xA;  facebook_app_id: String&#xA;&#xA;  adjust_app_token: String&#xA;}&#xA;&#xA;type GameConfig @model&#xA;  @auth(rules: [&#xA;    {allow: owner},&#xA;    {allow: groups, groupsField: &quot;groups&quot;}]){&#xA;  id: ID!&#xA;  game_name: String!&#xA;  bundle_identifier: String!&#xA;&#xA;  sdkConfigs: [SDKConfig] @connection(keyName: &quot;byPublisher&quot;, fields: [&quot;id&quot;])&#xA;  groups: [String]&#xA;}&#xA;</code></pre>&#xA;<p>Mutations:</p>&#xA;<pre><code>export const createGameConfig = /* GraphQL */ `&#xA;  mutation CreateGameConfig(&#xA;    $input: CreateGameConfigInput!&#xA;    $condition: ModelGameConfigConditionInput&#xA;  ) {&#xA;    createGameConfig(input: $input, condition: $condition) {&#xA;      id&#xA;      game_name&#xA;      bundle_identifier&#xA;      sdkConfigs {&#xA;        items {&#xA;          id&#xA;          publisher_id&#xA;          facebook_app_id&#xA;          adjust_app_token&#xA;          createdAt&#xA;          updatedAt&#xA;        }&#xA;        nextToken&#xA;      }&#xA;      groups&#xA;      createdAt&#xA;      updatedAt&#xA;      owner&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>React function:</p>&#xA;<pre><code>    async function createGame() {&#xA;      try {&#xA;        const newgame = { &#xA;            &quot;game_name&quot;: &quot;deneme&quot;,&#xA;            &quot;bundle_identifier&quot;: &quot;com.magiclab.deneme&quot;,&#xA;            sdkConfigs: [&#xA;                {   &quot;publisher_id&quot;: 5,&#xA;                    &quot;facebook_app_id&quot;: &quot;fb12313&quot;,&#xA;                    &quot;adjust_app_token&quot;: &quot;adjusttoken123123&quot;,&#xA;                }&#xA;            ] &#xA;        }&#xA;        await API.graphql(graphqlOperation(createGameConfig, {input: newgame}))&#xA;      } catch (err) {&#xA;        console.log('error creating game sdk config:', err)&#xA;      }&#xA;    }&#xA;</code></pre>&#xA;<p>Error message:</p>&#xA;<blockquote>&#xA;<p>&quot;The variables input contains a field name 'sdkConfigs' that is not defined for input object type 'CreateGameConfigInput' &quot;</p>&#xA;</blockquote>&#xA;<p>I want to create an array of objects within the object. How to fix input object for graphql ?</p>&#xA;",6784758,,,,2020-08-17 21:13:59,How to create object array in react for graphql,<javascript><reactjs><graphql><aws-amplify>,1,3,0,2020-08-06 11:27:15
63284203,1,63286175,,0,976,"<p>Let's say I have imported a large number of audio files in S3. I would need to map my audio files metadata (including artist, track name, duration, release date, ...) to a DynamoDB table in order to query them using a GraphQL API in a react app. However, I can't yet figure out how to extract these metadata to be mapped in DynamoDB.</p>&#xA;<p>In the DynamoDB developer guide, it is mentioned (p.914) that the S3 object identifier can be stored in the DynamoDB item.</p>&#xA;<p>It is also mentioned that S3 object metadata support can provide a link back to the parent item in DynamoDB (by storing the primary key value of the table item as the S3 metadata).</p>&#xA;<p>However, the process is not really detailed; the closest approach I found is from J. Beswick who uses a lambda function to load a large amount of data from a JSON file stored in an S3 bucket.</p>&#xA;<p>(<a href=""https://www.youtube.com/watch?v=f0sE_dNrimU&amp;feature=emb_logo"" rel=""nofollow noreferrer"">https://www.youtube.com/watch?v=f0sE_dNrimU&amp;feature=emb_logo</a>).</p>&#xA;",11924635,,11924635,2020-08-07 07:56:04,2020-08-07 07:56:04,Mapping S3 bucket object's audio metadata to DynamoDB,<reactjs><amazon-s3><aws-lambda><graphql><amazon-dynamodb>,1,0,0,2020-08-06 13:02:35
63286175,2,,63284203,0,,"<p>S3 object metadata is something different from audio metadata.</p>&#xA;<p>Think this way: everything that you put on S3 is a object. This object has a key (name) and some metadata attached to it by default by S3 and another metadata that you can attach to it. All of these things are explained <a href=""https://docs.aws.amazon.com/AmazonS3/latest/user-guide/add-object-metadata.html#add-object-metadata-user-defined"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>Audio files metadata are a different thing. They are inside the file (let's suppose that it is a mp3 file). To access this data you need to read the file using a api that knows the file format and how to extract the data.</p>&#xA;<p>When you upload the file to s3 it does not extract any kind of data and attach it to your object metadata (artist, track number, etc from mp3 files). You need to do it by yourself.</p>&#xA;<p>A suggested solution would be: for every file that you upload to s3, the upload triggers a lambda function that knows how to extract the audio metadata from the file. It will then extract this metadata and save it on DynamoDB together with the name of the object in s3. After that you can query your table with the search that you planned for and after found the record, point to the correct object in s3.</p>&#xA;<p>In that suggestion you can also run it for all objects already existent in the s3 bucket to avoid requiring new upload.</p>&#xA;",6471284,,,,2020-08-06 14:48:29,"",,0,2,0,2020-08-06 14:48:29
63292232,2,,63291706,1,,"<p>You should save each one of your models if you haven't done so, for example, I see you have created a blog, then a post with the blog. You'll need to save the blog, and then save the post, otherwise the blog does not exist in DynamoDB. It looks correct for Post and Comment since you are saving the post and then the comment (containing the post for association).</p>&#xA;<p>The data is persisted but isn't being returned to your client. Currently the builder that is being used to create the GraphQLRequest <code>.list(Post.self, where: predicate)</code> will only generate the selection set to return the Post, but not the optional list of connected comments. This is by default a walk-depth of 1. Currently Amplify for Android does this differently and there is an existing Issue open in the repo to track whether this should be updated to have a walk depth of 2 by default. <a href=""https://github.com/aws-amplify/amplify-ios/issues/681"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-ios/issues/681</a></p>&#xA;<p>One workaround here is to create your own custom GraphQL request with a selection set that contains both the post and the comments. Or a custom GraphQL request for a list query that has a filter parameter that you set to filter for a particular post.id.</p>&#xA;<p>You can see this example here creates a nested selection set with post and comments: <a href=""https://github.com/aws-amplify/docs/blob/fbe1773bd21476954f379909b7a9a7abf3f02c2a/docs/lib/graphqlapi/fragments/ios/advanced-workflows.md#nested-data"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/docs/blob/fbe1773bd21476954f379909b7a9a7abf3f02c2a/docs/lib/graphqlapi/fragments/ios/advanced-workflows.md#nested-data</a></p>&#xA;<pre><code>extension GraphQLRequest {&#xA;    static func getPostWithComments(byId id: String) -&gt; GraphQLRequest&lt;JSONValue&gt; {&#xA;        let document = &quot;&quot;&quot;&#xA;        query getPost($id: ID!) {&#xA;          getPost(id: $id) {&#xA;            id&#xA;            title&#xA;            rating&#xA;            status&#xA;            comments {&#xA;              items {&#xA;                id&#xA;                postID&#xA;                content&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;        &quot;&quot;&quot;&#xA;        return GraphQLRequest&lt;JSONValue&gt;(document: document,&#xA;                                         variables: [&quot;id&quot;: id],&#xA;                                         responseType: JSONValue.self)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Feel free to post your questions as you have here over in the github repo <a href=""https://github.com/aws-amplify/amplify-ios/issues"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-ios/issues</a> as it will help us in facilitating the conversation</p>&#xA;",2464632,,,,2020-08-06 21:49:38,"",,0,0,0,2020-08-06 21:49:38
63314200,2,,62323260,0,,"<p>The problem was that I was using serverless-appsync-plugin which didn't permit me to use the same GraphQL instance in multiple serverless projects.</p>&#xA;<p>I removed the plugin and referenced the API in different projects like this:</p>&#xA;<pre><code>CreateUserDataSource:&#xA;    Type: AWS::AppSync::DataSource&#xA;    Properties:&#xA;      ApiId: { 'Fn::ImportValue': 'graphQLApiId-${self:provider.stage}' }&#xA;      Name: CreateUser&#xA;      Type: AWS_LAMBDA&#xA;      LambdaConfig: &#xA;        LambdaFunctionArn: {'Fn::GetAtt': [CreateUserLambdaFunction, Arn]}&#xA;      ServiceRoleArn: { 'Fn::ImportValue': 'appSyncServiceRole-${self:provider.stage}' }&#xA;&#xA;  CreateUserResolver:&#xA;    Type: AWS::AppSync::Resolver&#xA;    Properties:&#xA;      ApiId: { 'Fn::ImportValue': 'graphQLApiId-${self:provider.stage}' }&#xA;      DataSourceName: CreateUser&#xA;      FieldName: createUser&#xA;      TypeName: Mutation&#xA;      RequestMappingTemplate: &quot;{&#xA;        \&quot;version\&quot;: \&quot;2017-02-28\&quot;,&#xA;        \&quot;operation\&quot;: \&quot;Invoke\&quot;,&#xA;        \&quot;payload\&quot;: {&#xA;          \&quot;field\&quot;: \&quot;createUser\&quot;,&#xA;          \&quot;arguments\&quot;: $utils.toJson($context.arguments),&#xA;          \&quot;handle\&quot;: $utils.toJson($context.identity)&#xA;        }&#xA;      }&quot;&#xA;      ResponseMappingTemplate: $util.toJson($context.result)&#xA;</code></pre>&#xA;",11910258,,,,2020-08-08 10:11:27,"",,0,0,0,2020-08-08 10:11:27
63317454,2,,63305156,2,,"<p>A way to implement this would be to change your updateUser resolver to update or create these entries.</p>&#xA;<pre><code>{&#xA;    &quot;version&quot; : &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot; : &quot;UpdateItem&quot;,&#xA;    &quot;key&quot; : {&#xA;        &quot;id&quot; : $util.dynamodb.toDynamoDBJson($context.arguments.id)&#xA;    },&#xA;&#xA;    ## Set up some space to keep track of things you're updating **&#xA;    #set( $expNames  = {} )&#xA;    #set( $expValues = {} )&#xA;    #set( $expSet = {} )&#xA;    #set( $expAdd = {} )&#xA;    #set( $expRemove = [] )&#xA;&#xA;    ## Increment &quot;version&quot; by 1 **&#xA;    $!{expAdd.put(&quot;version&quot;, &quot;:one&quot;)}&#xA;    $!{expValues.put(&quot;:one&quot;, { &quot;N&quot; : 1 })}&#xA;&#xA;    ## Iterate through each argument, skipping &quot;id&quot; and &quot;expectedVersion&quot; **&#xA;    #foreach( $entry in $context.arguments.entrySet() )&#xA;        #if( $entry.key != &quot;id&quot; &amp;&amp; $entry.key != &quot;expectedVersion&quot; )&#xA;            #if( (!$entry.value) &amp;&amp; (&quot;$!{entry.value}&quot; == &quot;&quot;) )&#xA;                ## If the argument is set to &quot;null&quot;, then remove that attribute from the item in DynamoDB **&#xA;&#xA;                #set( $discard = ${expRemove.add(&quot;#${entry.key}&quot;)} )&#xA;                $!{expNames.put(&quot;#${entry.key}&quot;, &quot;$entry.key&quot;)}&#xA;            #else&#xA;                ## Otherwise set (or update) the attribute on the item in DynamoDB **&#xA;&#xA;                $!{expSet.put(&quot;#${entry.key}&quot;, &quot;:${entry.key}&quot;)}&#xA;                $!{expNames.put(&quot;#${entry.key}&quot;, &quot;$entry.key&quot;)}&#xA;                $!{expValues.put(&quot;:${entry.key}&quot;, { &quot;S&quot; : &quot;${entry.value}&quot; })}&#xA;            #end&#xA;        #end&#xA;    #end&#xA;&#xA;    ## Start building the update expression, starting with attributes you're going to SET **&#xA;    #set( $expression = &quot;&quot; )&#xA;    #if( !${expSet.isEmpty()} )&#xA;        #set( $expression = &quot;SET&quot; )&#xA;        #foreach( $entry in $expSet.entrySet() )&#xA;            #set( $expression = &quot;${expression} ${entry.key} = ${entry.value}&quot; )&#xA;            #if ( $foreach.hasNext )&#xA;                #set( $expression = &quot;${expression},&quot; )&#xA;            #end&#xA;        #end&#xA;    #end&#xA;&#xA;    ## Continue building the update expression, adding attributes you're going to ADD **&#xA;    #if( !${expAdd.isEmpty()} )&#xA;        #set( $expression = &quot;${expression} ADD&quot; )&#xA;        #foreach( $entry in $expAdd.entrySet() )&#xA;            #set( $expression = &quot;${expression} ${entry.key} ${entry.value}&quot; )&#xA;            #if ( $foreach.hasNext )&#xA;                #set( $expression = &quot;${expression},&quot; )&#xA;            #end&#xA;        #end&#xA;    #end&#xA;&#xA;    ## Continue building the update expression, adding attributes you're going to REMOVE **&#xA;    #if( !${expRemove.isEmpty()} )&#xA;        #set( $expression = &quot;${expression} REMOVE&quot; )&#xA;&#xA;        #foreach( $entry in $expRemove )&#xA;            #set( $expression = &quot;${expression} ${entry}&quot; )&#xA;            #if ( $foreach.hasNext )&#xA;                #set( $expression = &quot;${expression},&quot; )&#xA;            #end&#xA;        #end&#xA;    #end&#xA;&#xA;    ## Finally, write the update expression into the document, along with any expressionNames and expressionValues **&#xA;    &quot;update&quot; : {&#xA;        &quot;expression&quot; : &quot;${expression}&quot;&#xA;        #if( !${expNames.isEmpty()} )&#xA;            ,&quot;expressionNames&quot; : $utils.toJson($expNames)&#xA;        #end&#xA;        #if( !${expValues.isEmpty()} )&#xA;            ,&quot;expressionValues&quot; : $utils.toJson($expValues)&#xA;        #end&#xA;    },&#xA;&#xA;    &quot;condition&quot; : {&#xA;        &quot;expression&quot;       : &quot;version = :expectedVersion&quot;,&#xA;        &quot;expressionValues&quot; : {&#xA;            &quot;:expectedVersion&quot; : $util.dynamodb.toDynamoDBJson($context.arguments.expectedVersion)&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html#create-an-updatepost-mutation-ddb-updateitem"" rel=""nofollow noreferrer"">More details</a></p>&#xA;",4508433,,,,2020-08-08 16:00:11,"",,0,3,0,2020-08-08 16:00:11
63354609,2,,63347634,2,,"<p>I remember that in the past it wasn't possible to add headers to AppSync responses using response mappings. Maybe this changed or will change in the future. You can test it. If it still doesn't work you can add a cloudfront distribution in front of AppSync API and use Lambda@Edge to add the headers to your request.</p>&#xA;<p>You can find more information about how to it in these two amazon articles:</p>&#xA;<ol>&#xA;<li><a href=""https://aws.amazon.com/blogs/mobile/use-a-custom-domain-with-aws-appsync-amazon-cloudfront-and-amazon-route-53/"" rel=""nofollow noreferrer"">Use a custom domain with AWS AppSync, Amazon CloudFront</a></li>&#xA;<li><a href=""https://aws.amazon.com/blogs/networking-and-content-delivery/adding-http-security-headers-using-lambdaedge-and-amazon-cloudfront/"" rel=""nofollow noreferrer"">Adding HTTP Security Headers Using Lambda@Edge and Amazon CloudFront</a></li>&#xA;</ol>&#xA;",6471284,,,,2020-08-11 08:43:24,"",,0,1,0,2020-08-11 08:43:24
63356446,1,,,2,340,"<p>My table has a primary key other than id and react-admin enforces id to be returned in the response by the DataProvider. So can I configure different primary keys/identifiers for my resources?</p>&#xA;<p>I am using this library - <code>https://github.com/Steams/ra-data-hasura-graphql</code></p>&#xA;<p>Right now I have made few changes in my library code to make this work, but I need an idea to implement it, so anyone using this library doesn't need to go thru whole code to make it work.</p>&#xA;<pre><code>const config = { &#xA;  'primaryKey': { &#xA;      'tableName': 'primaryKey1', 'tableName2': 'primaryKey2' &#xA;  } &#xA;};&#xA;</code></pre>&#xA;<p>I was thinking of something like passing configuration like this.</p>&#xA;<p>Thanks.</p>&#xA;",5727081,,,,2021-02-10 19:36:57,How can I have custom identifiers/primary keys for my resources?,<graphql><react-admin><dataprovider><hasura>,1,0,0,2020-08-11 10:38:02
63364259,1,,,0,286,"<p>I'm new to Gatsby and built a basic app with a starter theme. After getting the theme up and running I decided to install a new theme. I couldn't get the theme to work and uninstalled it, but now I'm getting the error:</p>&#xA;<pre><code>There was an error in your GraphQL query:&#xA;&#xA;Cannot query field &quot;themeUiConfig&quot; on type &quot;Query&quot;.&#xA;&#xA;If you don't expect &quot;themeUiConfig&quot; to exist on the type &quot;Query&quot; it is most likely a typo.&#xA;However, if you expect &quot;themeUiConfig&quot; to exist there are a couple of solutions to common problems:&#xA;&#xA;- If you added a new data source and/or changed something inside gatsby-node.js/gatsby-config.js, please try a restart of your development server&#xA;- The field might be accessible in another subfield, please try your query in GraphiQL and use the GraphiQL explorer to see which fields you can query and what shape they have&#xA;- You want to optionally use your field &quot;themeUiConfig&quot; and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to the GraphQL schema. A quick fix is to add a least one entry with that field (&quot;dummy content&quot;)&#xA;&#xA;It is recommended to explicitly type your GraphQL schema if you want to use optional fields. This way you don't have to add the mentioned &quot;dummy content&quot;. Visit our docs to learn how you can define the schema for &quot;Query&quot;:&#xA;https://www.gatsbyjs.org/docs/schema-customization/#creating-type-definitions&#xA;&#xA;File: /Users/nick/Desktop/ui-website-sandbox/gatsby_crash_course/node_modules/gatsby-plugin-theme-ui/src/hooks/configOptions.js&#xA;</code></pre>&#xA;<p>Restarted the server multiple times and it doesn't fix this. How can I fix this?</p>&#xA;",3875620,,,,2020-08-11 18:36:06,"Gatsby: Installed a new theme, deleted it, now my app is broke",<reactjs><graphql><themes><gatsby>,1,1,0,2020-08-11 18:26:18
63372531,2,,60525189,0,,"<p><strong>If you're using prisma2, I guess my answer could help you.</strong></p>&#xA;<ul>&#xA;<li><p>Do not delete a item by Company.&#xA;( EX : <code>prisma.company.delete({where: ~ })</code> )</p>&#xA;</li>&#xA;<li><p>Delete a item by Position.&#xA;( Ex. <code>prisma.position.delete({where:{company:{id:companyId}}})</code> )</p>&#xA;</li>&#xA;<li><p>If it doesn't work and okay to change field attribute, make company field nullable( not required ). Then, delete Company first and delete Position( cuz I guess you want cascade, right? )</p>&#xA;</li>&#xA;</ul>&#xA;<p>Don't forget to use await!</p>&#xA;<p>I solved this problem in this way. But I'm not sure for case in <code>onDelete:CASCADE</code>.&#xA;I reaaaally hope prisma2 release cascade soon..!</p>&#xA;",13228295,,13228295,2020-08-13 01:02:39,2020-08-13 01:02:39,"",,0,0,0,2020-08-12 08:16:53
63397953,2,,63305156,0,,"<p>I stumbled upon <a href=""https://github.com/aws-amplify/amplify-cli/issues/3967"" rel=""nofollow noreferrer"">this question in the Amplify GitHub issues</a> about the AWSJSON scalar having a similar issue. The issue seems to be related to <a href=""https://github.com/aws-amplify/amplify-cli/issues/3967#issuecomment-617261884"" rel=""nofollow noreferrer"">conflict resolution</a> in the API.</p>&#xA;<p>I don't remember setting that up, but I tried <code>amplify update API</code>, chose my GraphQL API and the advanced options, declined any conflict resolution and ran <code>amplify push</code>.</p>&#xA;<p>Now values are saving as expected. When I remove an item from an array it's removed from the backend and visa-versa.</p>&#xA;",1264267,,,,2020-08-13 15:04:21,"",,0,2,0,2020-08-13 15:04:21
63397961,2,,63395616,3,,"<p>There's no difference in how you specify the selection set for a field that returns a single object and a field that returns a list of objects -- the syntax is identical, even though the shape of the response will be different.</p>&#xA;",6024220,,,,2020-08-13 15:04:43,"",,0,0,0,2020-08-13 15:04:43
63411150,2,,63394939,0,,"<p>You can use schema directives to define authorization rules in a declarative manner directly in your Graphql schema.</p>&#xA;<p>A common approach would be to assign roles to a user and then use these roles to allow/block access to certain mutations or queries.</p>&#xA;<p>So for your example, I would imagine any request coming from the <code>client</code> would be made by a user with a role of <code>client</code> and any request coming from admin would have a user role of <code>admin</code></p>&#xA;<p>So to build on your example of limiting the <code>getUsers</code> query to just <code>admins</code> we could add this directive to our schema:</p>&#xA;<pre><code>type User {&#xA;    _id: ID&#xA;    name: String&#xA;    email: String&#xA;&#xA;    confirmed: Boolean&#xA;    banned: Boolean&#xA;}&#xA;&#xA;type Query {&#xA;    getUserById(userId: String): User &#xA;    getUsers(): [User] @hasRole(roles: [admin])&#xA;}&#xA;</code></pre>&#xA;<p>You can read more about how to actually implement the custom directive <code>hasRoles</code> in the nestJs docs <a href=""https://docs.nestjs.com/graphql/directives"" rel=""nofollow noreferrer"">https://docs.nestjs.com/graphql/directives</a></p>&#xA;",5569302,,,,2020-08-14 10:37:45,"",,0,1,0,2020-08-14 10:37:45
63428895,1,63470211,,4,6996,"<p>I dont understad what happen here.</p>&#xA;<p>This is my schema:</p>&#xA;<pre><code>type MonthResume @model @auth(rules: [{allow: owner, identityClaim: &quot;sub&quot;}]){&#xA;   id: ID!&#xA;   incomes: Float!&#xA;   spendingByCategory: [Category]&#xA;}&#xA;&#xA;type Category @model @auth(rules: [{allow: owner, identityClaim: &quot;sub&quot;}]){&#xA;  id: ID!&#xA;  name: String!&#xA;  amount: Float!&#xA;}&#xA;</code></pre>&#xA;<p>This is the autogenerated update mutation that Amplify gives to me:</p>&#xA;<pre><code>export const updateMonthResume = /* GraphQL */ `&#xA;  mutation UpdateMonthResume(&#xA;  $input: UpdateMonthResumeInput!&#xA;  $condition: ModelMonthResumeConditionInput&#xA; ) {&#xA; updateMonthResume(input: $input, condition: $condition) {&#xA;  id&#xA;  incomes&#xA;  spendingByCategory {&#xA;    id&#xA;    name&#xA;    amount&#xA;    createdAt&#xA;    updatedAt&#xA;    owner&#xA;  }&#xA;  createdAt&#xA;  updatedAt&#xA;  owner&#xA;}&#xA;}&#xA;`;&#xA;</code></pre>&#xA;<p>And this is my input:</p>&#xA;<pre><code>{&#xA;  &quot;input&quot;: {&#xA;    &quot;id&quot;: &quot;d7f-ee2971fd3ae5&quot;,&#xA;    &quot;incomes&quot;: 220,&#xA;    &quot;spendingByCategory&quot;: null,&#xA;    &quot;createdAt&quot;: &quot;2020-08-15T17:06:22.192Z&quot;,&#xA;    &quot;updatedAt&quot;: &quot;2020-08-15T17:06:22.192Z&quot;,&#xA;    &quot;owner&quot;: &quot;subId&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I just want update the incomes amount, fot that reason I call the api in this way:</p>&#xA;<pre><code>const input = {&#xA;  incomes: 0,&#xA;}&#xA;&#xA;await API.graphql(graphqlOperation(updateMonthResume, input));&#xA;</code></pre>&#xA;<p>And then, I got the error.</p>&#xA;<p>I dont understand, I dont want to update more than the income, does I need change my input? But I sent a null (Amplify does automatically) for the objetc spendingByCategory.</p>&#xA;<pre><code>input CreateMonthResumeInput {&#xA;   id: ID&#xA;   incomes: Float!&#xA;</code></pre>&#xA;<p>}</p>&#xA;",4694090,,4694090,2020-08-18 11:24:10,2020-10-12 05:37:54,AWS Amplify: The variables input contains a field name that is not defined for input object type,<graphql><aws-amplify>,3,3,0,2020-08-15 17:23:41
63438293,1,63452269,,0,1759,"<p>I have a web app using aws appsync as backend and react + apollo client (v3) as front end. But when I try connecting apollo client to appsync, I get an error message from the library:</p>&#xA;<blockquote>&#xA;<p>./node_modules/aws-appsync-react/lib/offline-helpers.js</p>&#xA;<p>Module not found: Can't resolve 'react-apollo' in '/Users/mypath/web/node_modules/aws-appsync-react/lib'</p>&#xA;</blockquote>&#xA;<p>Here's the config for the client:</p>&#xA;<pre><code>import AWSAppSyncClient from &quot;aws-appsync&quot;;&#xA;import AppSyncConfig from &quot;./aws-exports&quot;;&#xA;&#xA;export const apolloClient = new AWSAppSyncClient({&#xA;  url: AppSyncConfig.aws_appsync_graphqlEndpoint,&#xA;  region: AppSyncConfig.aws_appsync_region,&#xA;  auth: {&#xA;    type: AppSyncConfig.aws_appsync_authenticationType,&#xA;    apiKey: AppSyncConfig.aws_appsync_apiKey,&#xA;  },&#xA;});&#xA;</code></pre>&#xA;<p>And the in my <code>App.ts</code>:</p>&#xA;<pre><code>import { ApolloProvider } from &quot;@apollo/client&quot;;&#xA;import { Rehydrated } from &quot;aws-appsync-react&quot;;&#xA;import { apolloClient } from &quot;./apollo&quot;;&#xA;&#xA;...&#xA;&lt;ApolloProvider client={apolloClient}&gt;&#xA;  &lt;Rehydrated&gt;&#xA;      &lt;MyApp /&gt;&#xA;  &lt;/Rehydrated&gt;&#xA;&lt;/ApolloProvider&gt;&#xA;</code></pre>&#xA;<p>Looks like a compatibility issue?</p>&#xA;<p>I'm using <code>&quot;@apollo/client&quot;: &quot;^3.1.3&quot;, &quot;aws-appsync&quot;: &quot;^4.0.0&quot;,&quot;aws-appsync-react&quot;: &quot;^4.0.0&quot;,</code>.</p>&#xA;",5080370,,,,2020-08-17 13:51:47,Cannot connect apollo client to aws appsync,<reactjs><amazon-web-services><apollo-client><aws-appsync>,1,0,0,2020-08-16 14:53:20
63446542,1,,,2,187,"<p>I'm working on a project where I'm trying to reproduce the react-admin demo <a href=""https://github.com/marmelab/react-admin/tree/master/examples/demo"" rel=""nofollow noreferrer"">https://github.com/marmelab/react-admin/tree/master/examples/demo</a> in a project based on aws amplify.</p>&#xA;<p>I am using this library <a href=""https://github.com/MrHertal/react-admin-amplify"" rel=""nofollow noreferrer"">https://github.com/MrHertal/react-admin-amplify</a> to properly establish the connection.</p>&#xA;<p>The react-admin demo uses data-generator-retail (<a href=""https://github.com/marmelab/react-admin/tree/master/examples/data-generator"" rel=""nofollow noreferrer"">https://github.com/marmelab/react-admin/tree/master/examples/data-generator</a>) in conjunction with &quot;fakerest&quot;, &quot;ra-data  -fakerest &quot;and&quot; fetch-mock &quot;to set the demo data sourc, and show this data structure:</p>&#xA;<pre><code>**customers**&#xA;id: integer&#xA;first_name: string&#xA;last_name: string&#xA;email: string&#xA;address: string&#xA;zipcode: string&#xA;city: string&#xA;avatar: string&#xA;birthday: date&#xA;first_seen: date&#xA;last_seen: date&#xA;has_ordered: boolean&#xA;latest_purchase&#xA;has_newsletter: boolean&#xA;groups: array&#xA;nb_commands: integer&#xA;total_spent: integer&#xA;&#xA;**categories**&#xA;id: number&#xA;name: string&#xA;&#xA;**products**&#xA;id: integer&#xA;category_id: integer&#xA;reference: string&#xA;width: float&#xA;height: float&#xA;price: float&#xA;thumbnail: string&#xA;image: string&#xA;description: string&#xA;stock: integer&#xA;&#xA;**commands**&#xA;id: integer&#xA;reference: string&#xA;date: date&#xA;customer_id: integer&#xA;basket: [{ product_id: integer, quantity: integer }]&#xA;total_ex_taxes: float&#xA;delivery_fees: float&#xA;tax_rate: float&#xA;taxes: float&#xA;total: float&#xA;status: 'ordered' | 'delivered' | 'canceled'&#xA;returned: boolean&#xA;&#xA;**invoices**&#xA;id: integer&#xA;date: date&#xA;command_id: integer&#xA;customer_id: integer&#xA;total_ex_taxes: float&#xA;delivery_fees: float&#xA;tax_rate: float&#xA;taxes: float&#xA;total: float&#xA;&#xA;**reviews**&#xA;id: integer&#xA;date: date&#xA;status: 'pending' | 'accepted' | 'rejected'&#xA;command_id: integer&#xA;product_id: integer&#xA;customer_id: integer&#xA;rating: integer&#xA;comment: string&#xA;</code></pre>&#xA;<p>Does anyone know the best way to represent said schema in aws amplify's &quot;schema.graphql&quot; file to reproduce exactly the same result?</p>&#xA;<p>My apprenticeship attempts led me to this:</p>&#xA;<pre><code>type customers&#xA;@model&#xA;@auth(rules: [&#xA;    { allow: groups, groups: [&quot;admin&quot;] }&#xA;  ])&#xA;  {&#xA;id: ID!&#xA;first_name: String&#xA;last_name: String&#xA;email: AWSEmail&#xA;address: String&#xA;zipcode: String&#xA;city: String&#xA;avatar: String&#xA;birthday: AWSDateTime&#xA;first_seen: AWSDateTime&#xA;last_seen: AWSDateTime&#xA;has_ordered: Boolean&#xA;latest_purchase : AWSDateTime&#xA;has_newsletter: Boolean&#xA;#groups: array #Doubt about which type of data is equivalent&#xA;nb_commands: Int&#xA;total_spent: Int}&#xA;&#xA;type categories&#xA;@model&#xA;@auth(rules: [&#xA;    { allow: groups, groups: [&quot;admin&quot;] }&#xA;  ])&#xA;  {&#xA;id: ID!&#xA;name: String}&#xA;type products&#xA;@model&#xA;@auth(rules: [&#xA;    { allow: groups, groups: [&quot;admin&quot;] }&#xA;  ])&#xA;  {&#xA;id: ID!&#xA;category_id: Int&#xA;reference: String&#xA;width: Float&#xA;height: Float&#xA;price: Float&#xA;thumbnail: String&#xA;image: String&#xA;description: String&#xA;stock: Int}&#xA;type commands&#xA;@model&#xA;@auth(rules: [&#xA;    { allow: groups, groups: [&quot;admin&quot;] }&#xA;  ])&#xA;  {&#xA;id: ID!&#xA;reference: String&#xA;AWSDateTime: AWSDateTime&#xA;customer_id: Int&#xA;#basket: [{ product_id: Int, quantity: Int }] # Doubt about how to represent this field&#xA;total_ex_taxes: Float&#xA;delivery_fees: Float&#xA;tax_rate: Float&#xA;taxes: Float&#xA;total: Float&#xA;status: [&quot;ordered&quot; , &quot;delivered&quot; , &quot;canceled&quot;]&#xA;returned: Boolean}&#xA;type invoices&#xA;@model&#xA;@auth(rules: [&#xA;    { allow: groups, groups: [&quot;admin&quot;] }&#xA;  ])&#xA;  {&#xA;id: ID!&#xA;AWSDateTime: AWSDateTime&#xA;command_id: Int&#xA;customer_id: Int&#xA;total_ex_taxes: Float&#xA;delivery_fees: Float&#xA;tax_rate: Float&#xA;taxes: Float&#xA;total: Float}&#xA;type reviews&#xA;@model&#xA;@auth(rules: [&#xA;    { allow: groups, groups: [&quot;admin&quot;] }&#xA;  ])&#xA;  {&#xA;id: ID!&#xA;AWSDateTime: AWSDateTime&#xA;status: [&quot;pending&quot; , &quot;accepted&quot; , &quot;rejected&quot;]&#xA;command_id: Int&#xA;product_id: Int&#xA;customer_id: Int&#xA;rating: Int&#xA;comment: String}&#xA;</code></pre>&#xA;",2592551,,2592551,2020-08-17 20:56:13,2020-08-17 20:56:13,React-Admin Convert generateData from 'data-generator-retail' in aws amplify schema.graphql,<typescript><graphql><aws-amplify><graphql-js><react-admin>,0,0,0,2020-08-17 07:37:33
63458446,2,,63457351,0,,<p>The problem was I added data in the wrong Database. I added data inside the Cloud Firestore DB instead of adding it to the Realtime Databases.</p>&#xA;,11368518,,,,2020-08-17 20:49:07,"",,0,0,0,2020-08-17 20:49:07
63458743,2,,63282574,1,,"<p>You should run two different mutations, one for creating the <code>GameConfig</code> and anorther one for create the <code>SDKConfig</code> it will be something like this</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>async function createGame() {&#xA;  try {&#xA;    const newgame = {&#xA;      game_name: 'deneme',&#xA;      bundle_identifier: 'com.magiclab.deneme',&#xA;    };&#xA;    const sdk = {&#xA;      publisher_id: null,&#xA;      facebook_app_id: 'fb12313',&#xA;      adjust_app_token: 'adjusttoken123123',&#xA;    };&#xA;    const {&#xA;      data: {&#xA;        createGameConfig: { id: publisher_id },&#xA;      },&#xA;    } = await API.graphql(&#xA;      graphqlOperation(createGameConfig, { input: newgame })&#xA;    );&#xA;    sdk.publisher_id = publisher_id;&#xA;    await API.graphql(graphqlOperation(createSDKConfig, { input: sdk }));&#xA;  } catch (err) {&#xA;    console.log('error creating game sdk config:', err);&#xA;  }&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>then you will use the id return by the first mutation as an input for the second mutation, this identifier will bound these two entries and when you query any gameConfig it will pull in an array any SDKConfig that their publisher_id matches with the gameConfig.</p>&#xA;<p>You could expand these information in this section of the official documentation <a href=""https://docs.amplify.aws/cli/graphql-transformer/directives#belongs-to"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql-transformer/directives#belongs-to</a></p>&#xA;",9281027,,,,2020-08-17 21:13:59,"",,0,0,0,2020-08-17 21:13:59
63458897,2,,45598812,0,,<p>For similar problem I've created schema like this:</p>&#xA;<pre><code>&quot;&quot;&quot;`MetadataEntry` model&quot;&quot;&quot;&#xA;type MetadataEntry {&#xA;  &quot;&quot;&quot;Key of the entry&quot;&quot;&quot;&#xA;  key: String!&#xA;&#xA;  &quot;&quot;&quot;Value of the entry&quot;&quot;&quot;&#xA;  value: String!&#xA;}&#xA;&#xA;&quot;&quot;&quot;Object with metadata&quot;&quot;&quot;&#xA;type MyObjectWithMetadata {&#xA;&#xA;  &quot;&quot;&quot;&#xA;  ... rest of my object fields&#xA;  &quot;&quot;&quot;&#xA;&#xA;  &quot;&quot;&quot;&#xA;  Key-value entries that you can attach to an object. This can be useful for&#xA;  storing additional information about the object in a structured format&#xA;  &quot;&quot;&quot;&#xA;  metadata: [MetadataEntry!]!&#xA;&#xA;  &quot;&quot;&quot;Returns value of `MetadataEntry` for given key if it exists&quot;&quot;&quot;&#xA;  metadataValue(&#xA;    &quot;&quot;&quot;`MetadataEntry` key&quot;&quot;&quot;&#xA;    key: String!&#xA;  ): String&#xA;}&#xA;</code></pre>&#xA;<p>And my queries can look like this:</p>&#xA;<pre><code>query {&#xA;  listMyObjects {&#xA;    # fetch meta values by key&#xA;    meta1Value: metadataValue(key: &quot;meta1&quot;)&#xA;    meta2Value: metadataValue(key: &quot;meta2&quot;)&#xA;    # ... or list them all&#xA;    metadata {&#xA;      key&#xA;      value&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,382655,,,,2020-08-17 21:29:40,"",,0,2,0,2020-08-17 21:29:40
63468014,2,,63465887,1,,"<p><code>wpgraphql</code> <strong>makes use of general WP user capabilities to control visibility of types and properties.</strong></p>&#xA;<p>Not all values visible in <code>graphiql</code> (embedded in admin area) are publicly available. <strong>A public page displaying content works with not registered user rights while graphiql works with administrator capabilities.</strong> Raact/apollo should at least include credentials (for cookie) or use token - for logged in users.</p>&#xA;<p>AFAICR for public content you can overwrite <code>admin's private</code> flag using 'graphql_data_is_private' filter. It looks like:</p>&#xA;<pre><code>function add_graphql_private_visibility_filter($is_private, $model_name, $data, $visibility, $owner, $current_user)&#xA;{&#xA;  // start with UNSAFE 'return false;' here, then make more granular checks&#xA;  if ('PostObject' === $model_name) {&#xA;    // if ('CPT' === $data-&gt;post_type) {&#xA;        if(.....&#xA;          ...&#xA;            return false;&#xA;  ...&#xA;  return $is_private;&#xA;  &#xA; add_filter('graphql_data_is_private', add_graphql_private_visibility_filter', 10, 6);&#xA;</code></pre>&#xA;",6124657,,,,2020-08-18 11:50:21,"",,0,2,0,2020-08-18 11:50:21
63469829,1,,,6,1073,"<p>I am working on DynamoDB with the help of AppSync GraphQL queries.</p>&#xA;<p>I have a one DynamoDB table in which username is Partition key(hash key) and timestamp_value is sort key(range key).</p>&#xA;<p>I am saving two things against one item i.e. <strong>one is reading</strong> and second one is <strong>activity (like exercise, sports etc.)</strong> For adding this two things we have different UI screens. Both things might have same timestamp so it will save in one item.</p>&#xA;<p>So now I need a upsert (insert or update) query which can be used for both the above operations because when you try to insert new reading then it will check that item is present or not. If present then it will update or not then it will insert the item and same thing has to happen when user want to add a new activity.</p>&#xA;<p>I am confused with the documentation and I didn't find exact AppSync request mapping resolver for doing upsert operation.</p>&#xA;<p><strong>Below is the PutItem request mapping resolver :-</strong></p>&#xA;<pre><code>    {&#xA;      &quot;version&quot;: &quot;2017-02-28&quot;,&#xA;      &quot;operation&quot;: &quot;PutItem&quot;,&#xA;      &quot;key&quot;: {&#xA;         &quot;username&quot;: $util.dynamodb.toDynamoDBJson($ctx.identity.username),&#xA;         &quot;timestamp&quot;: $util.dynamodb.toDynamoDBJson($ctx.args.input.timestamp),&#xA;      },&#xA;      &quot;attributeValues&quot;: $util.dynamodb.toMapValuesJson($ctx.args.input),&#xA;      &quot;condition&quot;: {&#xA;         &quot;expression&quot;: &quot;attribute_not_exists(#timestamp)&quot;,&#xA;         &quot;expressionNames&quot;: {&#xA;           &quot;#timestamp&quot;: &quot;timestamp&quot;,&#xA;         },&#xA;      },&#xA;   }&#xA;</code></pre>&#xA;<p><strong>And below is the UpdateItem request mapping resolver:-</strong></p>&#xA;<pre><code>{&#xA;  &quot;version&quot;: &quot;2017-02-28&quot;,&#xA;  &quot;operation&quot;: &quot;UpdateItem&quot;,&#xA;  &quot;key&quot;: {&#xA;    &quot;username&quot;: $util.dynamodb.toDynamoDBJson($ctx.identity.username),&#xA;    &quot;timestamp&quot;: $util.dynamodb.toDynamoDBJson($ctx.args.input.timestamp),&#xA;  },&#xA;&#xA;  ## Set up some space to keep track of things we're updating **&#xA;  #set( $expNames  = {} )&#xA;  #set( $expValues = {} )&#xA;  #set( $expSet = {} )&#xA;  #set( $expAdd = {} )&#xA;  #set( $expRemove = [] )&#xA;&#xA;  ## Iterate through each argument, skipping keys **&#xA;  #foreach( $entry in $util.map.copyAndRemoveAllKeys($ctx.args.input, [&quot;username&quot;, &quot;timestamp&quot;]).entrySet() )&#xA;    #if( $util.isNull($entry.value) )&#xA;      ## If the argument is set to &quot;null&quot;, then remove that attribute from the item in DynamoDB **&#xA;&#xA;      #set( $discard = ${expRemove.add(&quot;#${entry.key}&quot;)} )&#xA;      $!{expNames.put(&quot;#${entry.key}&quot;, &quot;${entry.key}&quot;)}&#xA;    #else&#xA;      ## Otherwise set (or update) the attribute on the item in DynamoDB **&#xA;&#xA;      $!{expSet.put(&quot;#${entry.key}&quot;, &quot;:${entry.key}&quot;)}&#xA;      $!{expNames.put(&quot;#${entry.key}&quot;, &quot;${entry.key}&quot;)}&#xA;      $!{expValues.put(&quot;:${entry.key}&quot;, $util.dynamodb.toDynamoDB($entry.value))}&#xA;    #end&#xA;  #end&#xA;&#xA;  ## Start building the update expression, starting with attributes we're going to SET **&#xA;  #set( $expression = &quot;&quot; )&#xA;  #if( !${expSet.isEmpty()} )&#xA;    #set( $expression = &quot;SET&quot; )&#xA;    #foreach( $entry in $expSet.entrySet() )&#xA;      #set( $expression = &quot;${expression} ${entry.key} = ${entry.value}&quot; )&#xA;      #if ( $foreach.hasNext )&#xA;        #set( $expression = &quot;${expression},&quot; )&#xA;      #end&#xA;    #end&#xA;  #end&#xA;&#xA;  ## Continue building the update expression, adding attributes we're going to ADD **&#xA;  #if( !${expAdd.isEmpty()} )&#xA;    #set( $expression = &quot;${expression} ADD&quot; )&#xA;    #foreach( $entry in $expAdd.entrySet() )&#xA;      #set( $expression = &quot;${expression} ${entry.key} ${entry.value}&quot; )&#xA;      #if ( $foreach.hasNext )&#xA;        #set( $expression = &quot;${expression},&quot; )&#xA;      #end&#xA;    #end&#xA;  #end&#xA;&#xA;  ## Continue building the update expression, adding attributes we're going to REMOVE **&#xA;  #if( !${expRemove.isEmpty()} )&#xA;    #set( $expression = &quot;${expression} REMOVE&quot; )&#xA;&#xA;    #foreach( $entry in $expRemove )&#xA;      #set( $expression = &quot;${expression} ${entry}&quot; )&#xA;      #if ( $foreach.hasNext )&#xA;        #set( $expression = &quot;${expression},&quot; )&#xA;      #end&#xA;    #end&#xA;  #end&#xA;&#xA;  ## Finally, write the update expression into the document, along with any expressionNames and expressionValues **&#xA;  &quot;update&quot;: {&#xA;    &quot;expression&quot;: &quot;${expression}&quot;,&#xA;    #if( !${expNames.isEmpty()} )&#xA;      &quot;expressionNames&quot;: $utils.toJson($expNames),&#xA;    #end&#xA;    #if( !${expValues.isEmpty()} )&#xA;      &quot;expressionValues&quot;: $utils.toJson($expValues),&#xA;    #end&#xA;  },&#xA;&#xA;  &quot;condition&quot;: {&#xA;    &quot;expression&quot;: &quot;SET attribute_exists(#username) AND attribute_not_exists(#timestamp)&quot;,&#xA;    &quot;expressionNames&quot;: {&#xA;      &quot;#username&quot;: &quot;username&quot;,&#xA;      &quot;#timestamp&quot;: &quot;timestamp&quot;,&#xA;    },&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>So how can I update the resolver so that I can do upsert operation?</p>&#xA;",6359310,,472495,2020-08-27 16:58:04,2020-08-27 16:58:04,How to write Upsert mutation query(insert or update) in AWS DynamoDB AppSync resolver,<amazon-web-services><graphql><amazon-dynamodb><aws-appsync><velocity-template-language>,0,0,0,2020-08-18 13:35:46
63490603,2,,57106760,1,,"<p>I took @Jim LAURIE 's answer and made it relevant to updating permissions on existing roles. The pointer to look at <code>node_modules/strapi-plugin-users-permissions/services/UsersPermissions.js</code> was very useful :)</p>&#xA;<p>I have a <code>page</code> and <code>post</code> type, and this code lets the default authenticated and public users do all view actions on them.</p>&#xA;<p>(PS I'm using TypeScript annotations, but this is plain JS).</p>&#xA;<pre><code>// bootstrap.js&#xA;'use strict';&#xA;&#xA;const _ = require(&quot;lodash&quot;);&#xA;&#xA;/**&#xA; * Bootstrap function, run every startup.&#xA; * See https://strapi.io/documentation/v3.x/concepts/configurations.html#bootstrap&#xA; */&#xA;module.exports = async () =&gt; {&#xA;&#xA;  // https://stackoverflow.com/a/57184017/268555&#xA;  // Ref to https://github.com/strapi/strapi/blob/master/packages/strapi-plugin-users-permissions/services/UsersPermissions.js&#xA;  const service = await strapi.plugins[&quot;users-permissions&quot;].services.userspermissions;&#xA;  const plugins = await service.getPlugins(&quot;en&quot;);&#xA;&#xA;  /** @type Role[] */&#xA;  const roles = await service.getRoles();&#xA;&#xA;  /**&#xA;   * @param {Role[&quot;type&quot;]} type&#xA;   */&#xA;  const getRole = async (type) =&gt; {&#xA;    const {id} = _.find(roles, x =&gt; x.type === type);&#xA;    return service.getRole(id, plugins);&#xA;  }&#xA;&#xA;  /**&#xA;   * @param {Role} role&#xA;   * @param {PluginPermissionKey} type&#xA;   * @param {string} controller&#xA;   * @param {string} action&#xA;   * @param {boolean} enabled&#xA;   */&#xA;  const setPermission = (role, type, controller, action, enabled) =&gt; {&#xA;    try {&#xA;      role.permissions[type].controllers[controller][action].enabled = enabled;&#xA;    }&#xA;    catch (e) {&#xA;      console.error(`Couldn't set permission ${role.name} ${type}:${controller}:${action}:${enabled}`);&#xA;    }&#xA;  }&#xA;&#xA;  const authRole = await getRole(&quot;authenticated&quot;);&#xA;  setPermission(authRole, &quot;application&quot;, &quot;page&quot;, &quot;count&quot;, true);&#xA;  setPermission(authRole, &quot;application&quot;, &quot;page&quot;, &quot;find&quot;, true);&#xA;  setPermission(authRole, &quot;application&quot;, &quot;page&quot;, &quot;findone&quot;, true);&#xA;  setPermission(authRole, &quot;application&quot;, &quot;post&quot;, &quot;count&quot;, true);&#xA;  setPermission(authRole, &quot;application&quot;, &quot;post&quot;, &quot;find&quot;, true);&#xA;  setPermission(authRole, &quot;application&quot;, &quot;post&quot;, &quot;findone&quot;, true);&#xA;  await service.updateRole(authRole.id, authRole);&#xA;&#xA;  const publicRole = await getRole(&quot;public&quot;);&#xA;  setPermission(publicRole, &quot;application&quot;, &quot;page&quot;, &quot;count&quot;, true);&#xA;  setPermission(publicRole, &quot;application&quot;, &quot;page&quot;, &quot;find&quot;, true);&#xA;  setPermission(publicRole, &quot;application&quot;, &quot;page&quot;, &quot;findone&quot;, true);&#xA;  setPermission(publicRole, &quot;application&quot;, &quot;post&quot;, &quot;count&quot;, true);&#xA;  setPermission(publicRole, &quot;application&quot;, &quot;post&quot;, &quot;find&quot;, true);&#xA;  setPermission(publicRole, &quot;application&quot;, &quot;post&quot;, &quot;findone&quot;, true);&#xA;  await service.updateRole(publicRole.id, publicRole);&#xA;&#xA;  return;&#xA;};&#xA;</code></pre>&#xA;",268555,,,,2020-08-19 15:44:27,"",,0,0,0,2020-08-19 15:44:27
63504819,2,,63491005,0,,<p>this is not the answer to your question but the <em><strong>suggestion</strong></em> because creating dynamic columns in SQL doesn't look like a good idea to me. Instead of thinking how can you create dynamic schema I think you should rethink on your DB structure.</p>&#xA;<p>Instead of adding new columns in <code>Person</code> table you should have different table for your custom columns like create <code>person_columns</code> table like</p>&#xA;<pre><code>person_columns&#xA;----------&#xA;id | people_id | column_name | column_value&#xA;</code></pre>&#xA;<p>so for every people you can have multiple columns and its corresponding values and you dont have to worry about dynamically creating your graphQL schema. (depending on your requirement you can add more columns to <code>person_columns</code> table for more control)</p>&#xA;,11389012,,,,2020-08-20 12:12:27,"",,0,1,0,2020-08-20 12:12:27
63505622,2,,63491005,1,,<p>I can query the information_schema table or a fields table and get the extra fields for the people table and then use the GraphQLObjectType to build out my schema rather than using SDL.</p>&#xA;,13369852,,,,2020-08-20 12:56:36,"",,0,0,0,2020-08-20 12:56:36
63509707,1,63510168,,0,138,"<p>Suppose I have a graphQL schema built like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>var { buildSchema } = require('graphql');&#xA;&#xA;// Construct a schema, using GraphQL schema language&#xA;var schema = buildSchema(`&#xA;  type Human = // some object type&#xA;  type Droid = // another object type&#xA;  union SearchResult = Human | Droid&#xA;  type Query {&#xA;    result: SearchResult&#xA;  }&#xA;`);&#xA;&#xA;const searchResultVariants = ?&#xA;</code></pre>&#xA;<p>Now I am looking for a way to programmatically find out all the variants of <code>SearchResult</code> type in the same program for the given <code>schema</code>, is there a way for that? Thank you</p>&#xA;",8515210,,,,2020-08-20 17:18:23,"Given a graphql.js schema, how can I find all the variants of a particular union type?",<graphql><graphql-js>,1,0,0,2020-08-20 16:47:43
63513047,1,,,3,317,"<p>I have a graphql model in Amplify as follows:</p>&#xA;<pre><code>type Blog @model @auth(rules: [&#xA;    { allow: owner },&#xA;    { allow: groups, groups: [&quot;admins&quot;] },&#xA;    { allow: public, provider: apiKey, operations: [read] }&#xA;    ]){&#xA;    id: ID!&#xA;    title: String!&#xA;    content: String!&#xA;    author: String&#xA;}&#xA;</code></pre>&#xA;<p>I would like all field to have read access via an API key except the 'author' field.It should only be readable by owner and the 'Admin' group.&#xA;I have tried all sorts of combinations of top level and field level @auth directives but it doesn't work.&#xA;Does anyone knows how to solve this.&#xA;Thank you</p>&#xA;",1270303,,,,2021-04-03 16:23:17,How to prevent access to certain fields in Amplify graphql public API,<graphql><authorization><aws-amplify>,1,1,0,2020-08-20 20:59:51
63522281,1,,,2,130,"<p>So I have 3 collections in my schema</p>&#xA;<pre><code>type User @model(subscriptions: null)  {&#xA;  id: ID!&#xA;  name: String&#xA;  email: String&#xA;  events: [EventUser] @connection(keyName: &quot;byUser&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;</code></pre>&#xA;<pre><code>type Event @model&#xA;  @key(name: &quot;byApiKey&quot;, fields: [&quot;apiKey&quot;])&#xA;  @key(name: &quot;byOrganization&quot;, fields: [&quot;organizationID&quot;], queryField: &quot;eventByOrganization&quot;)&#xA;  {&#xA;  id: ID!&#xA;  apiKey: ID!&#xA;  title: String&#xA;  participants: [EventUser] @connection(keyName: &quot;byEvent&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;</code></pre>&#xA;<pre><code>&#xA;type EventUser @model&#xA;  @key(name: &quot;byUser&quot;, fields: [&quot;userID&quot;], queryField: &quot;eventByUser&quot;)&#xA;  @key(name: &quot;byEvent&quot;, fields: [&quot;eventID&quot;], queryField: &quot;userByEvent&quot;)    {&#xA;  id: ID!&#xA;  userID: ID!&#xA;  eventID: ID!&#xA;  user: User! @connection(fields: [&quot;userID&quot;])&#xA;  event: Event! @connection(fields: [&quot;eventID&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>And I am trying to search the <code>EventUser</code> collection by <code>eventID</code> and <code>user.name</code>. Is there some piece of amplify that can enable me search by the <code>user.name</code> and return the <code>EventUser</code> collection?</p>&#xA;",4381603,,,,2020-08-21 11:42:30,How to search on a @connection with AWS Amplify,<graphql><schema><aws-amplify>,0,0,0,2020-08-21 11:42:30
63526750,1,,,0,223,"<p>My schema and queries are working fine on amplify console but throwing a type mismatch error on the client side. This happens only when there are more than one records in the object returned</p>&#xA;<p><strong>Data successfully returned when there's only one record</strong></p>&#xA;<p><a href=""https://i.stack.imgur.com/uIWYT.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uIWYT.png"" alt=""enter image description here"" /></a></p>&#xA;<p><strong>Error when object contains more than one record</strong></p>&#xA;<p><a href=""https://i.stack.imgur.com/ThwFj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ThwFj.png"" alt=""enter image description here"" /></a></p>&#xA;<p><strong>Schema:</strong></p>&#xA;<pre><code>type Member {&#xA;    Id: ID&#xA;    PartyId: String&#xA;    Status: MemberStatus&#xA;    PersonName: MemberName&#xA;    Email: String&#xA;    UniformId: String&#xA;    Name: String&#xA;}&#xA;&#xA;type MemberName {&#xA;    FirstName: String&#xA;    LastName: String&#xA;    FullName: String&#xA;    InformalName: String&#xA;}&#xA;&#xA;type MemberStatus {&#xA;    PartyStatusId: String&#xA;    Name: String&#xA;    Description: String&#xA;    ActiveStatus: Int&#xA;}&#xA;&#xA;type Query {&#xA;    listMembers(id: ID, firstName: String, lastName: String): [Member]&#xA;}&#xA;</code></pre>&#xA;<p>My query on the frontend</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// Single Record &#xA;const [isLoading, state, error] = useGraphql(queries.listMembers, {&#xA;    firstName: &quot;BlaBle&quot;,&#xA;    lastName: &quot;Blu&quot;,&#xA;})&#xA;&#xA;// Multiple Records&#xA;const [isLoading, state, error] = useGraphql(queries.listMembers, {&#xA;    firstName: &quot;blee&quot;,&#xA;})&#xA;</code></pre>&#xA;<p><em>Resolver</em></p>&#xA;<p><a href=""https://i.stack.imgur.com/AaW93.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AaW93.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Am I missing something or doing something wrong here? Let me know if more info is required.</p>&#xA;<p>Thanks!</p>&#xA;",9430279,,9430279,2020-08-21 16:50:41,2020-08-21 22:22:12,Graphql queries works fine on AppSync Console but throw errors on client side,<reactjs><graphql><aws-amplify><aws-appsync>,1,7,0,2020-08-21 16:35:39
63532739,1,,,0,241,"<p><a href=""https://aws.amazon.com/blogs/mobile/using-multiple-authorization-types-with-aws-appsync-graphql-apis/"" rel=""nofollow noreferrer"">This blog post</a> shows how to set multiple authorisation types to models and fields in graphql transform.</p>&#xA;<p>Lets say I have an <code>@model Blog</code></p>&#xA;<pre><code>type Blog @model {&#xA;   id: ID!&#xA;   adminUserId: String&#xA;   name: String!&#xA;   posts: [Post] @connection(keyName: &quot;byBlog&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>Using this shcema will autogenerate the following mutations/queries;&#xA;<code>createBlog</code>&#xA;<code>updateBlog</code>&#xA;<code>deleteBlog</code>&#xA;<code>getBlog</code>&#xA;<code>listBlogs</code></p>&#xA;<p>I want <code>createBlog</code>, <code>updateBlog</code> and <code>deleteBlog</code> to have authorisation type <code>@aws_iam</code>.&#xA;I want <code>getBlog</code> and <code>listBlogs</code> to have my default authorisation type <code>@aws_cognito_user_pools</code></p>&#xA;<p>How can I define this in my <code>schema.graphql</code>?&#xA;I can not set the authorisation type directly on the mutations/queries as they are not defined in my <code>schema.graphql</code> file.</p>&#xA;<p>I am able to set the auth types directly in the complete schema that is generated in the cloud (<code>AWS AppSync &gt; API Name &gt; Schema</code> ) because here all the queries/mutations are all defined. But this schema will be re-written every time I run <code>amplify push</code>.</p>&#xA;<p>There must be a better way?</p>&#xA;",6387273,,6387273,2020-08-22 06:46:19,2020-08-24 05:25:41,Using multiple authorization types with AWS AppSync GraphQL APIs,<amazon-web-services><graphql><aws-amplify><aws-appsync>,1,0,0,2020-08-22 05:04:14
63542571,1,,,1,247,<p>I'm wondering if there's a way where if given a schema.graphql file Hasura can create the required tables for the GraphQL endpoint? I'm looking for something similar to what keystonejs provides.</p>&#xA;<p>My current understanding is</p>&#xA;<p>Hasura&#xA;Tables --&gt; GraphQL</p>&#xA;<p>KeystoneJS&#xA;Schema --&gt; GraphQL (With automatic creation of tables)</p>&#xA;,3812377,,3812377,2020-08-23 01:36:30,2020-08-23 16:48:31,Is there a way Hasura can generate tables automatically using a schema.graphql file similar to keystonejs?,<graphql><keystonejs><hasura>,2,0,0,2020-08-23 01:22:38
63549092,2,,63532739,0,,"<p>FYI I worked it out. The answer is the auth directive.</p>&#xA;<p>This schema will allow cognito (my default auth) to read only and iam to do everything. This is exactly what I want.</p>&#xA;<pre><code>type Blog @auth(rules: [{ allow: private, provider: iam, operations: [read, create, update, delete] }, { allow: private, operations: [read] }]) @model {&#xA;  id: ID!&#xA;  adminUserId: String&#xA;  name: String!&#xA;  posts: [Post] @connection(keyName: &quot;byBlog&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;</code></pre>&#xA;",6387273,,6387273,2020-08-24 05:25:41,2020-08-24 05:25:41,"",,0,0,0,2020-08-23 15:59:26
63557762,1,,,6,1500,"<h1>Background</h1>&#xA;<p>In a new project I am working on we are looking into using AppSync for our GraphQL server (with Amplify). However, as it depends on an old version of Apollo Client (2.4.6), and Apollo Client has introduced major changes in version 3.0, using the AwsAppSyncClient is not optimal. We cannot wait for AppSync to migrate to Apollo Client 3.0 either, so I am wondering if it is best to use a custom client with Apollo Client 3.0 for now and migrate over to AwsAppSyncClient once their Apollo dependency is migrated to 3.0. Is this a good idea? The current implementation of this can be found below. However, this poses a few new questions.</p>&#xA;<p>(This is my first question on Stack Overflow, so hope this is not too much at once!)</p>&#xA;<p>I have done a fair bit of research, but am still new to the topic of GraphQL, Apollo, AppSync and Amplify, so thought it would be best to ask the experts out there!</p>&#xA;<h1>Questions</h1>&#xA;<ul>&#xA;<li>How to best combine Apollo Client 3.0 with AppSync (see implementation below)? What do you lose by not using AwsAppSyncClient?</li>&#xA;<li>With using a custom Apollo Client with AppSync, is it then possible to query both local and remote data in the same query (e.g. with the @client tag)?</li>&#xA;<li>Is there a way to handle local state management with AwsAppSyncClient like there is with ApolloClient using e.g. <a href=""https://www.apollographql.com/docs/react/local-state/reactive-variables/"" rel=""noreferrer"">reactive variables</a>?</li>&#xA;</ul>&#xA;<h2>Additional question about using AppSync:</h2>&#xA;<p>(Don't know whether I should create a separate question for this?)</p>&#xA;<ul>&#xA;<li>How does querying with AppSync actually work with regards to designing queries from the client? As far as I understand with GraphQL, the whole point is to combine what would have been multiple REST calls, while also only asking for the fields that are actually relevant. With AppSync and codegen, however, the <code>queries.js</code> and <code>mutations.js</code> files are automatically generated with only &quot;basic&quot; queries for each model, with all fields included; much like REST calls. Why is this being done, and how to work with it from the client side?</li>&#xA;</ul>&#xA;<p>Using AppSync with custom client (Apollo Client 3.0)</p>&#xA;<pre><code>import React from &quot;react&quot;;&#xA;import ReactDOM from &quot;react-dom&quot;;&#xA;import App from &quot;./App&quot;;&#xA;import Amplify from &quot;aws-amplify&quot;;&#xA;import {&#xA;  ApolloProvider,&#xA;  ApolloClient,&#xA;  ApolloLink,&#xA;  createHttpLink,&#xA;  InMemoryCache,&#xA;  makeVar&#xA;} from &quot;@apollo/client&quot;;&#xA;import { createAuthLink } from &quot;aws-appsync-auth-link&quot;;&#xA;&#xA;import awsExports from &quot;./aws-exports&quot;;&#xA;&#xA;&#xA;Amplify.configure(awsExports);&#xA;&#xA;const sidebarCollapsedVar = makeVar(false);&#xA;&#xA;const link = ApolloLink.from([&#xA;  createAuthLink({&#xA;    url: awsExports.aws_appsync_graphqlEndpoint,&#xA;    region: awsExports.aws_appsync_region,&#xA;    auth: {&#xA;      type: awsExports.aws_appsync_authenticationType,&#xA;      apiKey: awsExports.aws_appsync_apiKey,&#xA;    },&#xA;  }),&#xA;  createHttpLink({ uri: awsExports.aws_appsync_graphqlEndpoint }),&#xA;]);&#xA;&#xA;const client = new ApolloClient({&#xA;  link,&#xA;  cache: new InMemoryCache({&#xA;    typePolicies: {&#xA;      Query: {&#xA;        fields: {&#xA;          sidebarCollapsed: {&#xA;            read() {&#xA;              return sidebarCollapsedVar();&#xA;            },&#xA;          },&#xA;        },&#xA;      },&#xA;    },&#xA;  }),&#xA;});&#xA;&#xA;ReactDOM.render(&#xA;  &lt;React.StrictMode&gt;&#xA;    &lt;ApolloProvider client={client}&gt;&#xA;      &lt;App /&gt;&#xA;    &lt;/ApolloProvider&gt;&#xA;  &lt;/React.StrictMode&gt;,&#xA;  document.getElementById(&quot;root&quot;)&#xA;);&#xA;</code></pre>&#xA;",14131225,,,,2021-07-21 08:24:55,Using custom Apollo Client with AWS AppSync,<reactjs><apollo-client><aws-appsync><aws-amplify-sdk-js>,0,2,0,2020-08-24 08:57:25
63561433,2,,63532362,1,,"<p>You can use mapping templates to modify the response data before it is returned to the client:</p>&#xA;<blockquote>&#xA;<p>The response mapping template is written with the Apache Velocity templating language (VTL) and translates the results of the resolver back into GraphQL.</p>&#xA;</blockquote>&#xA;<p>In this case you could check if <code>trucks.items</code> is empty and, if so, remove the <code>items</code> array from <code>trucks</code> before it's returned.</p>&#xA;<p>More details here: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-programming-guide.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-programming-guide.html</a></p>&#xA;",616436,,,,2020-08-24 12:51:36,"",,0,1,0,2020-08-24 12:51:36
63564431,1,,,0,239,"<p>I currently have a Gatsby project based on the <a href=""https://github.com/TryGhost/gatsby-starter-ghost"" rel=""nofollow noreferrer"">Gatsby-Ghost-Starter</a> project. The Ghost schema is no longer being generated in Gatsby for some reason, and I can't seem to figure out why. As a result, I get the following error:</p>&#xA;<blockquote>&#xA;<p>There was an error in your GraphQL query:</p>&#xA;<p>Cannot query field &quot;icon&quot; on type &quot;GhostSettings&quot;.</p>&#xA;<p>If you don't expect &quot;icon&quot; to exist on the type &quot;GhostSettings&quot; it is&#xA;most likely a typo. However, if you expect &quot;icon&quot; to exist there are a&#xA;couple of solutions to common problems:</p>&#xA;<ul>&#xA;<li>If you added a new data source and/or changed something inside gatsby-node.js/gatsby-config.js, please try a restart of your&#xA;development server</li>&#xA;<li>The field might be accessible in another subfield, please try your query in GraphiQL and use the GraphiQL explorer to see which fields&#xA;you can query and what shape they have</li>&#xA;<li>You want to optionally use your field &quot;icon&quot; and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to the&#xA;GraphQL schema. A quick fix is to add a least one entry with that&#xA;field (&quot;dummy content&quot;)</li>&#xA;</ul>&#xA;<p>It is recommended to explicitly type your GraphQL schema if you want&#xA;to use optional fields. This way you don't have to add the mentioned&#xA;&quot;dummy content&quot;. Visit our docs to learn how you can define the schema&#xA;for &quot;GhostSettings&quot;:&#xA;<a href=""https://www.gatsbyjs.org/docs/schema-customization/#creating-type-definitions"" rel=""nofollow noreferrer"">https://www.gatsbyjs.org/docs/schema-customization/#creating-type-definitions</a></p>&#xA;</blockquote>&#xA;<p>This error message is basically repeated for every page and query field that uses anything related to the Ghost schema. I pulled up the GraphiQL explorer to see if I could access the fields there, and it indicated there is no schema available (as seen in the screenshot <a href=""https://i.stack.imgur.com/f4FoP.png"" rel=""nofollow noreferrer"">here</a>). I tried rolling back to previous commits, deleting .cache and node_modules, updating all packages, and re-cloning the repo to no avail.</p>&#xA;<p>My latest commit was able to compile with no problem in the production environment, so I think it's some sort of misconfiguration on my machine...The environment variables are all identical, and I tried using the production Ghost server as my &quot;ghost-source&quot; on my local machine (since I know it works if the production build compiled successfully), but nothing changed. I've been stuck on this for days and have no idea how to even debug what's happening right now. Any advice/insights would be greatly appreciated.</p>&#xA;",4468824,,,,2020-08-24 15:50:18,gatsby-source-ghost is failing to create the Ghost schema in Gatsby,<graphql><gatsby><ghost-blog><graphiql><gatsby-plugin>,0,2,0,2020-08-24 15:50:18
63566820,2,,63549982,0,,"<pre><code>const options = []&#xA;  const region = /place/&#xA;  data.allContentfulBlogPost.edges.forEach(async (edge) =&gt; {&#xA;    await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${edge.node.location.lon},${edge.node.location.lat}.json?access_token=${token}`)&#xA;      .then(response =&gt; response.json())&#xA;      .then(json =&gt; options.push({&#xA;        value: json.features.find(place =&gt; place.id.match(region)).text,&#xA;        label: json.features.find(place =&gt; place.id.match(region)).text&#xA;      }))&#xA;    console.log(options)&#xA;  }&#xA;  )&#xA;</code></pre>&#xA;",13557786,,,,2020-08-24 18:36:04,"",,0,0,0,2020-08-24 18:36:04
63606400,1,,,4,619,"<p>I'm using the provided mutations that were created with AWS Amplify. I can delete the 'Store' object on its own using the provided delete function that Amplify generates, but the Product items that have a relation will remain. I know I could delete the Product Items individually, but I wanted to see if there was a more efficient way of doing this.</p>&#xA;<p>This is an example schema of what the relation looks like:</p>&#xA;<pre><code>type Store @model {&#xA;  id: ID!&#xA;  products: [Product] @connection(name:&quot;StoreProducts&quot;,sortField:&quot;createdAt&quot;)&#xA;  createdAt: AWSDateTime&#xA;}&#xA;&#xA;type Product @model {&#xA;  id: ID!&#xA;  Store: Store @connection(name:&quot;StoreProducts&quot;)&#xA;  value: String!&#xA;  createdAt: AWSDateTime&#xA;} &#xA;</code></pre>&#xA;",0,user7806336,,,2020-08-26 22:08:20,How can I delete the items that have a relation to another item in AppSync/Amplify?,<reactjs><graphql><amazon-dynamodb><aws-amplify><aws-appsync>,0,0,0,2020-08-26 22:08:20
63619805,1,,,1,1667,"<p>I have an User entity that can add his/hers contacts from Google using GooglePeopleApi.</p>&#xA;<p>The API provides an array of contacts to the front-end as it is (Nextjs). The question is how to insert all those contacts in one single mutation.</p>&#xA;<p>I could, of course, have the front-end loop through the array and post the contacts one by one, but that is a bit silly.</p>&#xA;<p>It should be possible to create a type array with the Contact input and then, with that, set up a <code>customArgsMutation</code>. ( I've seen some examples of that from Hasura ).</p>&#xA;<p>Entity wise, it looks like this for now ( only relevant code ):</p>&#xA;<p>User.php</p>&#xA;<pre><code> ....&#xA;/**&#xA; * @ORM\OneToMany(targetEntity=&quot;App\Entity\Contact&quot;, mappedBy=&quot;user&quot;)&#xA; * @Groups({&quot;put-contacts&quot;, &quot;get-admin&quot;, &quot;get-owner&quot;})&#xA; */&#xA;private $contacts;&#xA;</code></pre>&#xA;<p>Contact.php</p>&#xA;<pre><code>/**&#xA;* @ApiResource(&#xA;*      attributes={&quot;pagination_enabled&quot;=false},&#xA;*      graphql={&#xA;*          &quot;item_query&quot;={&#xA;*              &quot;normalization_context&quot;={&quot;groups&quot;={&quot;get-admin&quot;, &quot;get-owner&quot;}},&#xA;*          },&#xA;*          &quot;collection_query&quot;={&#xA;*              &quot;normalization_context&quot;={&quot;groups&quot;={&quot;get-admin&quot;, &quot;get-owner&quot;}},&#xA;*          },&#xA;*          &quot;delete&quot;={&quot;security&quot;=&quot;is_granted('IS_AUTHENTICATED_FULLY') and object.getUser() == user&quot;},&#xA;*          &quot;create&quot;={&#xA;*              &quot;security&quot;=&quot;is_granted('IS_AUTHENTICATED_FULLY')&quot;,&#xA;*              &quot;denormalization_context&quot;={&quot;groups&quot;={&quot;post&quot;, &quot;put&quot;}},&#xA;*              &quot;normalization_context&quot;={&quot;groups&quot;={&quot;get-owner&quot;, &quot;get-admin&quot;}},&#xA;*          },&#xA;*      }&#xA;* )&#xA;* @ORM\Entity(repositoryClass=&quot;App\Repository\ContactRepository&quot;)&#xA;*/&#xA;class Contact&#xA;{&#xA;/**&#xA; * @ORM\Id()&#xA; * @ORM\GeneratedValue()&#xA; * @ORM\Column(type=&quot;integer&quot;)&#xA; */&#xA;private $id;&#xA;&#xA;/**&#xA; * @ORM\ManyToOne(targetEntity=&quot;App\Entity\User&quot;, inversedBy=&quot;contacts&quot;)&#xA; * @Groups({&quot;post&quot;, &quot;get-admin&quot;, &quot;get-owner&quot;})&#xA; */&#xA;private $user;&#xA;&#xA;/**&#xA; * @ORM\Column(type=&quot;string&quot;, length=180)&#xA; * @Groups({&quot;post&quot;, &quot;put&quot;, &quot;get-admin&quot;, &quot;get-owner&quot;})&#xA; */&#xA;private $email;&#xA;&#xA;/**&#xA; * @ORM\Column(type=&quot;string&quot;, length=180, nullable=true)&#xA; * @Groups({&quot;post&quot;, &quot;put&quot;, &quot;get-admin&quot;, &quot;get-owner&quot;})&#xA; */&#xA;private $familyName;&#xA;&#xA;/**&#xA; * @ORM\Column(type=&quot;string&quot;, length=180, nullable=true)&#xA; * @Groups({&quot;post&quot;, &quot;put&quot;, &quot;get-admin&quot;, &quot;get-owner&quot;})&#xA; */&#xA;private $givenName;&#xA;&#xA;/**&#xA; * @ORM\Column(type=&quot;string&quot;, length=180, nullable=true)&#xA; * @Groups({&quot;post&quot;, &quot;put&quot;, &quot;get-admin&quot;, &quot;get-owner&quot;})&#xA; */&#xA;private $displayName;&#xA;</code></pre>&#xA;<p>From <code>graphiql</code>, the <code>createContact</code> input looks like this:</p>&#xA;<pre><code> user: String&#xA; email: String!&#xA; familyName: String&#xA; givenName: String&#xA; displayName: String&#xA; clientMutationId: String&#xA;</code></pre>&#xA;",2127381,,,,2021-09-30 13:50:30,Api-Platform graphql - create multiple items in one mutation,<symfony><graphql><api-platform.com><graphql-mutation>,2,0,0,2020-08-27 15:54:51
63639875,1,,,1,1908,"<p>I've searched for answers but I haven't seen talk about this in the context of using Flutter, Firebase, and Hasura GraphQL together.</p>&#xA;<p>Working in Flutter, utilizing a Firebase authentication backend, I am acquiring a user JWT and passing it to a Heroku Hasura GraphQL endpoint (with a query).</p>&#xA;<p>Much of the setup and code follows and is inspired by a tutorial at <a href=""https://hasura.io/blog/build-flutter-app-hasura-firebase-part1/"" rel=""nofollow noreferrer"">https://hasura.io/blog/build-flutter-app-hasura-firebase-part1/</a>, part 2 and part 3, and flutter graphql documentation at <a href=""https://github.com/snowballdigital/flutter-graphql"" rel=""nofollow noreferrer"">https://github.com/snowballdigital/flutter-graphql</a>.</p>&#xA;<p>Firebase is successfully adding new user records to my GraphQL database.  Firebase is returning a JWT and it is getting added to the GraphQL AuthLink during the construction of the GraphQL client.  This is what the JWT looks like (obscuring personal information):</p>&#xA;<p>HEADER:ALGORITHM &amp; TOKEN TYPE</p>&#xA;<pre><code>{&#xA;    &quot;alg&quot;: &quot;RS256&quot;,&#xA;    &quot;kid&quot;: &quot;12809dd239d24bd379c0ad191f8b0edcdb9d3914&quot;,&#xA;    &quot;typ&quot;: &quot;JWT&quot;&#xA;}&#xA;&#xA;FULL PAYLOAD:DATA&#xA;&#xA;{&#xA;    &quot;iss&quot;: &quot;https://securetoken.google.com/&lt;firebase-app-id&gt;&quot;,&#xA;    &quot;aud&quot;: &quot;&lt;firebase-app-id&gt;&quot;,&#xA;    &quot;auth_time&quot;: 1598563214,&#xA;    &quot;user_id&quot;: &quot;iMovnQvpwuO8HiGOV82cYTmZRM92&quot;,&#xA;    &quot;sub&quot;: &quot;iMovnQvpwuO8HiGOV82cYTmZRM92&quot;,&#xA;    &quot;iat&quot;: 1598635486,&#xA;    &quot;exp&quot;: 1598639086,&#xA;    &quot;email&quot;: &quot;&lt;user-email&gt;&quot;,&#xA;    &quot;email_verified&quot;: false,&#xA;    &quot;firebase&quot;: {&#xA;        &quot;identities&quot;: {&#xA;            &quot;email&quot;: [&#xA;                &quot;&lt;user-email&gt;&quot;&#xA;            ]&#xA;        },&#xA;        &quot;sign_in_provider&quot;: &quot;password&quot;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>The Decode JWT tool in the HASURA UI shows this error:</p>&#xA;<blockquote>&#xA;<p>&quot;claims key: 'https://hasura.io/jwt/claims' not found&quot;</p>&#xA;</blockquote>&#xA;<p>According to <a href=""https://hasura.io/docs/1.0/graphql/core/auth/authentication/jwt.html#the-spec"" rel=""nofollow noreferrer"">Hasura's documentation</a> something like this should exist in the token:</p>&#xA;<pre><code>&quot;https://hasura.io/jwt/claims&quot;: {&#xA;    &quot;x-hasura-allowed-roles&quot;: [&quot;editor&quot;,&quot;user&quot;, &quot;mod&quot;],&#xA;    &quot;x-hasura-default-role&quot;: &quot;user&quot;,&#xA;    &quot;x-hasura-user-id&quot;: &quot;1234567890&quot;,&#xA;    &quot;x-hasura-org-id&quot;: &quot;123&quot;,&#xA;    &quot;x-hasura-custom&quot;: &quot;custom-value&quot;&#xA;  }&#xA;</code></pre>&#xA;<p>In the various tutorials and documentation I'm using, the only place I've seen a need for defining hasura custom claims is in the Firebase cloud function where a user is registered:</p>&#xA;<pre><code>exports.registerUser = functions.https.onCall(async (data, context) =&gt; {&#xA;&#xA;const email = data.email;&#xA;const password = data.password;&#xA;const displayName = data.displayName;&#xA;&#xA;if (email === null || password === null || displayName === null) {&#xA;    throw new functions.https.HttpsError('unauthenticated', 'missing information');&#xA;}&#xA;&#xA;try {&#xA;    const userRecord = await admin.auth().createUser({&#xA;        email: email,&#xA;        password: password,&#xA;        displayName: displayName&#xA;    });&#xA;&#xA;    const customClaims = {&#xA;        &quot;https://hasura.io/jwt/claims&quot;: {&#xA;            &quot;x-hasura-default-role&quot;: &quot;user&quot;,&#xA;            &quot;x-hasura-allowed-roles&quot;: [&quot;user&quot;],&#xA;            &quot;x-hasura-user-id&quot;: userRecord.uid&#xA;        }&#xA;    };&#xA;&#xA;    await admin.auth().setCustomUserClaims(userRecord.uid, customClaims);&#xA;    return userRecord.toJSON();&#xA;&#xA;} catch (e) {&#xA;    throw new functions.https.HttpsError('unauthenticated', JSON.stringify(error, undefined, 2));&#xA;}&#xA;</code></pre>&#xA;<p>});</p>&#xA;<p>I'm too new to Firebase and to JWT to understand why the custom claims are not in the token.  I assumed Firebase would hand me a JWT with the custom claims embedded and that passing it to the Hasura backend would be enough.</p>&#xA;<p>My Heroku Hasura application logs also shows this error:</p>&#xA;<blockquote>&#xA;<p>&quot;Malformed Authorization header&quot;,&quot;code&quot;:&quot;invalid-headers&quot;</p>&#xA;</blockquote>&#xA;<p>Does Firebase needs further configuration in order to hand back the proper claims?  Is the missing information in the JWT the same as the server-side error logged as &quot;Malformed Authorization header&quot; or do I need to set additional headers (see Flutter code below).</p>&#xA;<p>Here is the GraphQL configuration code in Flutter:</p>&#xA;<pre><code>import 'dart:async';&#xA;&#xA;import 'package:dailyvibe/services/jwt_service.dart';&#xA;import 'package:flutter/material.dart';&#xA;import 'package:graphql_flutter/graphql_flutter.dart';&#xA;&#xA;class AuthLink extends Link {&#xA;  AuthLink()&#xA;      : super(&#xA;          request: (Operation operation, [NextLink forward]) {&#xA;            StreamController&lt;FetchResult&gt; controller;&#xA;&#xA;            Future&lt;void&gt; onListen() async {&#xA;              try {&#xA;                final String token = JWTSingleton.token;&#xA;                operation.setContext(&lt;String, Map&lt;String, String&gt;&gt;{&#xA;                  'headers': &lt;String, String&gt;{&#xA;                    'Authorization': '''bearer $token'''&#xA;                  }&#xA;                });&#xA;              } catch (error) {&#xA;                controller.addError(error);&#xA;              }&#xA;&#xA;              await controller.addStream(forward(operation));&#xA;              await controller.close();&#xA;            }&#xA;&#xA;            controller = StreamController&lt;FetchResult&gt;(onListen: onListen);&#xA;&#xA;            return controller.stream;&#xA;          },&#xA;        );&#xA;}&#xA;&#xA;class ConfigGraphQLClient extends StatefulWidget {&#xA;  const ConfigGraphQLClient({&#xA;    Key key,&#xA;    @required this.child,&#xA;  }) : super(key: key);&#xA;  final Widget child;&#xA;&#xA;  @override&#xA;  _ConfigGraphQLClientState createState() =&gt; _ConfigGraphQLClientState();&#xA;}&#xA;&#xA;class _ConfigGraphQLClientState extends State&lt;ConfigGraphQLClient&gt; {&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    final cache = InMemoryCache();&#xA;&#xA;    final authLink = AuthLink()&#xA;        .concat(HttpLink(uri: 'https://&lt;myapp&gt;.herokuapp.com/v1/graphql'));&#xA;&#xA;    final ValueNotifier&lt;GraphQLClient&gt; client = ValueNotifier(&#xA;      GraphQLClient(&#xA;        cache: cache,&#xA;        link: authLink,&#xA;      ),&#xA;    );&#xA;&#xA;    return GraphQLProvider(&#xA;      client: client,&#xA;      child: CacheProvider(&#xA;        child: widget.child,&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",14166638,,14166638,2020-08-29 01:05:49,2020-08-31 16:35:30,"Flutter with Firebase JWT sends GraphQL (graphql_flutter) request to Heroku Hasura that has a ""Malformed Authorization header""",<firebase><flutter><graphql><jwt><hasura>,1,0,0,2020-08-28 19:30:44
63648940,1,,,1,233,"<p>I have been tring to implement a graphql application on aws for a while. I am researching the ways to implement graphql on serverless. I have checked couple of examples on how people implements apollo server on lambda.</p>&#xA;<p>My understanding that people use one lambda as their gateway. So one lambda handles queries and mutations. It didn’t seem quite right to me.</p>&#xA;<p>The second solution i am thinking is use an ec2 server as gateway, however this time i lose the power of cognito. (Or i couldnt find anyway to work with cognito and ec2)</p>&#xA;<p>I dont want to use appsync. I am just looking for a way around.</p>&#xA;<p>The question is apollo server implementation correct ? Is there any other way or a good example about this?</p>&#xA;",8467565,,174777,2020-08-30 23:47:42,2020-09-04 06:14:08,Apollo Server Lambda - any practical example about serverless,<amazon-web-services><aws-lambda><graphql><apollo>,1,0,0,2020-08-29 15:52:37
63671616,2,,63654493,8,,"<h2>GraphQL range queries are not supported (yet.. they're coming!)</h2>&#xA;<p>FaunaDB does not provide range queries for their <strong>GraphQL</strong> out-of-the-box, we are working on these features.</p>&#xA;<h2>.. but there is a workaround.</h2>&#xA;<p>That doesn't mean though that it can't do range queries since range queries are supported in <strong>FQL</strong> and you can always 'escape' from GraphQL to FQL to implement more advanced queries by writing a User Defined Function (UDF).</p>&#xA;<h3>.. using resolvers</h3>&#xA;<p>By using the <a href=""https://docs.fauna.com/fauna/current/api/graphql/directives/d_resolver"" rel=""nofollow noreferrer"">@resolver</a> keyword in your schema you can implement GraphQL queries yourself by writing a User Defined Function in FaunaDB in FQL. There are some basic examples in the documentation bt I imagine you might need some help so I'll write you a simple example.</p>&#xA;<p>I added your schema and added two documents:&#xA;<a href=""https://i.stack.imgur.com/RnJIt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RnJIt.png"" alt=""enter image description here"" /></a></p>&#xA;<p>First thing is that our schema will be extended with the resolver:</p>&#xA;<pre><code>type Todo {&#xA;  name: String!&#xA;  created_at: Time&#xA;}&#xA;&#xA;type Query {&#xA;  allTodos: [Todo!]!&#xA;  todosByCreatedAtFlag(created_at: Time!): [Todo!]!&#xA;  todosByCreatedRange(before: Time, after:Time): [Todo!]! @resolver&#xA;}&#xA;</code></pre>&#xA;<p>All this does is add a function for us to implement:&#xA;<a href=""https://i.stack.imgur.com/Y0QO5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Y0QO5.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Which if we call via GraphQL gives us exactly that Abort message we saw in the screenshot before since it has not been implemented yet. But we can see that the GraphQL statement actually calls the function.</p>&#xA;<p><a href=""https://i.stack.imgur.com/3lokJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3lokJ.png"" alt=""enter image description here"" /></a></p>&#xA;<h3>.. UDF implementation</h3>&#xA;<p>First thing we will do is add the parameter which is just writing a name as the first parameter of the lambda:&#xA;<a href=""https://i.stack.imgur.com/86CBC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/86CBC.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Which also takes an array in case you need to pass multiple parameters (which I do in the resolver that I defined in the schema):&#xA;<a href=""https://i.stack.imgur.com/85mC6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/85mC6.png"" alt=""enter image description here"" /></a></p>&#xA;<p>We'll add an index to support our query. Values are for ranges (and for return values and sorting). We'll add created_at to range over it and also add <strong>ref</strong> since we'll need the return value to get the actual document behind the index.&#xA;<a href=""https://i.stack.imgur.com/1VU8n.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1VU8n.png"" alt=""enter image description here"" /></a></p>&#xA;<p>We could then start off by just writing a simple function (that won't work yet)</p>&#xA;<pre class=""lang-js prettyprint-override""><code>Query(&#xA;      Lambda(&#xA;        [&quot;before&quot;, &quot;after&quot;],&#xA;        Paginate(&#xA;          Range(Match(Index(&quot;todosByCreatedAtRange&quot;)), Var(&quot;before&quot;), Var(&quot;after&quot;))&#xA;        )&#xA;      )&#xA;    )&#xA;</code></pre>&#xA;<p>and could test this by calling the function manually via the shell.</p>&#xA;<p><a href=""https://i.stack.imgur.com/VHXBe.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VHXBe.png"" alt=""enter image description here"" /></a></p>&#xA;<p>This indeed returns the two objects (range is inclusive).&#xA;Of course, there is one problem with this, it does <strong>not</strong> return the data in the structure that GraphQL expects it so we'll get these strange errors:&#xA;<a href=""https://i.stack.imgur.com/P0IfU.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/P0IfU.png"" alt=""enter image description here"" /></a></p>&#xA;<p>We can do two things now, either define a type in our Schema that fits these and/or we can adapt the data the returns. We'll do the latter and adapt our result to the expected [Todo!]! result to show you.</p>&#xA;<p>Step one, map over the result. The only thing we introduce here is the Map and the Lambda. We do not do anything special yet, we just return the reference instead of both the ts and the reference as an example.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>Query(&#xA;  Lambda(&#xA;    [&quot;before&quot;, &quot;after&quot;],&#xA;    Map(&#xA;      Paginate(&#xA;        Range(&#xA;          Match(Index(&quot;todosByCreatedAtRange&quot;)),&#xA;          Var(&quot;before&quot;),&#xA;          Var(&quot;after&quot;)&#xA;        )&#xA;      ),&#xA;      Lambda([&quot;created_at&quot;, &quot;ref&quot;], Var(&quot;ref&quot;))&#xA;    )&#xA;  )&#xA;)&#xA;</code></pre>&#xA;<p>Calling it indeed shows that the function now only returns references.&#xA;<a href=""https://i.stack.imgur.com/9UrZ0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9UrZ0.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Let's get the actual documents. I know that FQL is verbose (and with good reasons, although it should become less verbose in the future) so I started adding comments to clarify things</p>&#xA;<pre class=""lang-js prettyprint-override""><code>Query(&#xA;  Lambda(&#xA;    [&quot;before&quot;, &quot;after&quot;],&#xA;    Map(&#xA;      // This is just the query to get your range&#xA;      Paginate(&#xA;        Range(&#xA;          Match(Index(&quot;todosByCreatedAtRange&quot;)),&#xA;          Var(&quot;before&quot;),&#xA;          Var(&quot;after&quot;)&#xA;        )&#xA;      ),&#xA;      &#xA;      // This is a function that will be executed on each result (with the help of Map)&#xA;      Lambda([&quot;created_at&quot;, &quot;ref&quot;], &#xA;        // We'll use Let to structure our queries ( allowing us to use varaibles )&#xA;        Let({ &#xA;          todo: Get(Var(&quot;ref&quot;)) &#xA;        }, &#xA;        // And then we return something&#xA;        Var(&quot;todo&quot;)))&#xA;    )&#xA;  )&#xA;)&#xA;</code></pre>&#xA;<p>Our function now returns data.. woohoo!&#xA;<a href=""https://i.stack.imgur.com/RdQ9h.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RdQ9h.png"" alt=""enter image description here"" /></a></p>&#xA;<p>We still need to make sure this data is conforms to what GraphQL expects, and from the schema we can see that it expects a [Todo!]! (See docs tab) and a Todo looks like (see the schema tab):</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type Todo {&#xA;  _id: ID!&#xA;  _ts: Long!&#xA;  name: String!&#xA;  created_at: Time&#xA;}&#xA;</code></pre>&#xA;<p>As you can also see from that docs tab is that 'non-resolver' queries are automatically changed to return TodoPages. The function we wrote so far actually return pages.</p>&#xA;<h3>Option 1, change the schema and turn it into a paginated resolver.</h3>&#xA;<p>We can fix this by adding the paginated: true option to the resolver. You will have to take into account for extra parameters that will be added to the resolver as explained <a href=""https://docs.fauna.com/fauna/current/api/graphql/directives/d_resolver"" rel=""nofollow noreferrer"">here</a>. I haven't tried that myself, so I'm not 100% certain how that would work. The advantage of a paginated resolve is that you can immediately take advantage of sane pagination in the GraphQL endpoint.</p>&#xA;<h3>Option 2, turn it into a non-paginated result.</h3>&#xA;<p>A paginated result is a result that looks as follows:&#xA;{ data: [ document1, document2, .. ],&#xA;before: ...&#xA;after: ..&#xA;}</p>&#xA;<p>The result doesn't accept pages but an array so I'll change it and retrieve the data field:</p>&#xA;<p><a href=""https://i.stack.imgur.com/NUpEz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NUpEz.png"" alt=""enter image description here"" /></a></p>&#xA;<p>And we have our result.&#xA;<a href=""https://i.stack.imgur.com/6dqWV.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/6dqWV.png"" alt=""enter image description here"" /></a></p>&#xA;<p>The complete query looks as follows:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>Query(&#xA;  Lambda(&#xA;    [&quot;before&quot;, &quot;after&quot;],&#xA;    Select(&#xA;      [&quot;data&quot;],&#xA;      Map(&#xA;        Paginate(&#xA;          Range(&#xA;            Match(Index(&quot;todosByCreatedAtRange&quot;)),&#xA;            Var(&quot;before&quot;),&#xA;            Var(&quot;after&quot;)&#xA;          )&#xA;        ),&#xA;        Lambda(&#xA;          [&quot;created_at&quot;, &quot;ref&quot;],&#xA;          Let({ todo: Get(Var(&quot;ref&quot;)) }, Var(&quot;todo&quot;))&#xA;        )&#xA;      )&#xA;    )&#xA;  )&#xA;)&#xA;</code></pre>&#xA;<h2>Disclaimers</h2>&#xA;<p>Once you go custom, pagination also becomes your responsibility (e.g. pass an extra parameter). You can't fetch relations out of the box anymore as you would normally do by just requesting the relations in the GraphQL body.</p>&#xA;<h2>Some words on the benefits of UDFs and the hybrid of GraphQL/FQL</h2>&#xA;<p>Before you shy away from FQL (and yes, we do have to add range queries and are working on that), here is some explanation on the UDF approach in general and why it makes sense to think about it anyway.</p>&#xA;<p>You will at a certain moment encounter things in GraphQL that are just impossible (complex conditional transactions, e.g. update document and update this other document only if some condition that results form the previous update is true). Users that use other GraphQL implementations typically solve this by writing a serverless function in case you have to implement advanced logic or transactions.</p>&#xA;<p>FaunaDB's answer to this is to use their User Defined Functions (UDFs). This is not a serverless function, it's a FaunaDB function implemented in FQL which might seem cumbersome at first but it's important to realize that it gives you the same benefits ( multi-region/strong consistency/scalability/free-tier/pay-as-you-go) that FaunaDB provides.</p>&#xA;",12405269,,12405269,2021-03-03 13:15:25,2021-03-03 13:15:25,"",,0,4,0,2020-08-31 13:19:41
63674713,2,,63639875,1,,"<p>Answering my own question: custom claims were not in my JWT because I was not calling my registerUser cloud function from Flutter.  Now I am, like this:</p>&#xA;<pre><code>  final HttpsCallable callable = CloudFunctions.instance&#xA;      .getHttpsCallable(functionName: 'registerUser')&#xA;        ..timeout = const Duration(seconds: 30);&#xA;  await callable.call(&lt;String, dynamic&gt;{&#xA;    'email': email,&#xA;    'password': password,&#xA;  });&#xA;</code></pre>&#xA;<p>(This code snippet is thanks to <a href=""https://hasura.io/blog/build-flutter-app-hasura-firebase-part3/"" rel=""nofollow noreferrer"">https://hasura.io/blog/build-flutter-app-hasura-firebase-part3/</a>)</p>&#xA;<p>Instead I was using Firebase's <code>createUserWithEmailAndPassword(email: email, password: password)</code> method, which does not create custom claims or trigger the cloud function.</p>&#xA;",14166638,,,,2020-08-31 16:35:30,"",,0,1,0,2020-08-31 16:35:30
63675458,1,,,0,111,"<p>We have a GraphQL API end point from where fact data is being pulled. In GraphQL you can pull data attributes based on your requirements. ie add or remove attributes to graphql query.&#xA;So, there is a possibility that rules will also change based on the new attribute addition to GraphQL API. We are thinking of handling dynamic graphQL query and rules changes via a custom UI (Angular)</p>&#xA;<p>With this requirement my idea of using a PoJo driving the rules in DRL is out of the window. We don't want to change the underlying code when the API attribute changes. We want to avoid the need for recompilation and re deployments.</p>&#xA;<p>So, my question is, in Drools is there a way to handle changes to Fact schema dynamically without creating a PoJo?</p>&#xA;<p>The idea that I am thinking is to represent the rules in JSON format and then dynamically convert them to DRLs via a Rules Template. Is this feasible? Are there any advanced practitioners who have done something like this in their project?</p>&#xA;",970121,,,,2020-08-31 17:27:22,In drools how to handle dynamic changes to Fact schema,<jboss><graphql><drools>,0,3,0,2020-08-31 17:27:22
63679860,1,63680587,,0,760,"<p>I'm attempting to do an insert on a table in Hasura's UI. I am getting permission denied even though I'm executing the query inside the api-explorer.</p>&#xA;<pre><code>          &quot;error&quot;: {&#xA;            &quot;exec_status&quot;: &quot;FatalError&quot;,&#xA;            &quot;hint&quot;: null,&#xA;            &quot;message&quot;: &quot;permission denied for table players&quot;,&#xA;            &quot;status_code&quot;: &quot;42501&quot;,&#xA;            &quot;description&quot;: null&#xA;          },&#xA;</code></pre>&#xA;<p>My insert mutation:</p>&#xA;<pre><code>mutation insert_players($objects: [players_insert_input!]!) {&#xA;  insert_players(objects: $objects, on_conflict: {&#xA;      constraint: players_pkey,&#xA;      update_columns: [&#xA;         ...&#xA;         accelRating &#xA;         age &#xA;         ...&#xA;      ]&#xA;    }) {&#xA;    returning {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1828214,,,,2021-12-06 14:14:51,Hasura permission denied for table on insert,<graphql><graphql-js><hasura>,1,0,0,2020-09-01 00:40:15
63707494,2,,61303642,0,,"<p>Not really. You can just use the API gateway, Lambda, and Apollo Server. Install the npm library <code>apollo-server-lambda</code> and Import the required modules.</p>&#xA;<p>The current version of Apollo Server Lambda: <code>2.17.0</code></p>&#xA;<p>You can create a GraphQL handler using the function <code>createHandler</code> provided by Apollo server Lambda.</p>&#xA;<p>I am not sure about how it is done using Terraform but you can just declare a route to your handler function via the API gateway.</p>&#xA;<p>Make sure your GET and POST requests route to the same handler.</p>&#xA;<p>Refer to this documentation for more details: <a href=""https://www.apollographql.com/docs/apollo-server/deployment/lambda/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/deployment/lambda/</a></p>&#xA;",8400941,,,,2020-09-02 14:15:37,"",,0,1,0,2020-09-02 14:15:37
63712207,2,,63637367,0,,"<p>Check out the Auth0 React SDk.</p>&#xA;<p>Their docs show how to use getAccessTokenSilently()</p>&#xA;<p><a href=""https://auth0.com/docs/libraries/auth0-react#call-an-api"" rel=""nofollow noreferrer"">https://auth0.com/docs/libraries/auth0-react#call-an-api</a></p>&#xA;",5029898,,,,2020-09-02 19:16:11,"",,0,0,0,2020-09-02 19:16:11
63716173,1,,,3,2708,"<p>I am new to using amplify with GraphQL. I was setting up my DB schema and auto-generating the functions after running amplify push.</p>&#xA;<p>Goals I want to achieve but do not know how to are</p>&#xA;<ol>&#xA;<li>I would like to be able to get user with all connected information (with one to one and one to many relationships) in the returned object from getUser</li>&#xA;<li>I would like to still be able to get userByUserName and see all connected one-to-many relationships as well</li>&#xA;</ol>&#xA;<p>When calling the API generated function to get the user,</p>&#xA;<pre><code>let user = await API.graphql(graphqlOperation(getUser,{id:userId}))&#xA;</code></pre>&#xA;<p>I am getting a user object back, however, it looks like this - even though I am definitely sure that data is set up correctly in the database.</p>&#xA;<pre><code>buttons: {nextToken: null} -- WANT THIS TO INCLUDE ACTUAL INFORMATION ABOUT BUTTONS CONNECTED TO THIS USER&#xA;createdAt: &quot;2020-09-02T23:41:12.278Z&quot;&#xA;customStyles: {id: &quot;e3d1bbef-ec6f-4a6d-9b5d-e693e890d4e0&quot;, bgColor: &quot;F9FF9F&quot;, bgBtnColor: &quot;FFFFFF&quot;, bgBtnHoverColor: &quot;000000&quot;, textColor: &quot;000000&quot;, …}&#xA;defaultStyles: null&#xA;email: &quot;nata@email.edu&quot;&#xA;firstName: &quot;Nata&quot;&#xA;id: &quot;d683a6bb-383e-4cf1-943a-05b3da4e5cc3&quot;&#xA;lastName: &quot;Vache&quot;&#xA;socialNetwork: {nextToken: null} -- WANT THIS TO INCLUDE ACTUAL INFORMATION ABOUT SOCIAL NETWORKS CONNECTED TO THIS USER, THE SAME WAY AS FOR EXAMPLE customStyles IS SHOWN. &#xA;updatedAt: &quot;2020-09-02T23:41:12.278Z&quot;&#xA;userName: &quot;Nata568&quot;&#xA;&#xA;type User @model @key(name: &quot;byUserName&quot;, fields: [&quot;userName&quot;], queryField: &quot;userByUserName&quot;){&#xA;  id: ID!&#xA;  firstName: String!&#xA;  lastName: String!&#xA;  userName: String!&#xA;  email: String!&#xA;  socialNetwork: [UserSocialNetwork] @connection(keyName: &quot;UserSocialNetworkUser&quot;, fields: [&quot;id&quot;])&#xA;  buttons: [Button] @connection(keyName: &quot;ButtonUser&quot;, fields: [&quot;id&quot;])&#xA;  defaultStyles: DefaultStyle @connection&#xA;  customStyles: CustomStyle @connection&#xA;}&#xA;&#xA;type UserSocialNetwork @model @key(name: &quot;UserSocialNetworkUser&quot;, fields: [&quot;userID&quot;, &quot;id&quot;], queryField:&quot;userSocialNetworkByUserID&quot;) {&#xA;  id: ID!&#xA;  socialNetworkUsername: String!&#xA;  userID: ID!&#xA;  supportedSocialNetwork: SupportedSocialNetwork! @connection&#xA;}&#xA;&#xA;type SupportedSocialNetwork @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  address: String!&#xA;}&#xA;&#xA;type Button @model @key(name: &quot;ButtonUser&quot;, fields: [&quot;userID&quot;, &quot;id&quot;], queryField: &quot;buttonByUserID&quot;) {&#xA;  id: ID!&#xA;  name: String!&#xA;  address: String!&#xA;  image: String&#xA;  userID: ID!&#xA;}&#xA;</code></pre>&#xA;<p>This schema does not include all my model definitions - customStyles, defaultStyles, and the rest but they are one to one relationship, which is working perfectly fine. I am having issues with one-to-many relationships, such as User to UserSocialNetwork and User to Buttons.</p>&#xA;<p>I have read lots of resources about this on AWS Amplify Docs, have gone through examples but still have not found anything that I could work with that would allow me to get the information from connections on getUser call and also give me the ability to get the user by username.&#xA;Any input would be appreciated!!!</p>&#xA;",13193223,,10255200,2020-12-25 17:15:14,2021-01-03 06:28:27,One to Many Relationship not showing in the object Amplify Schema definition,<amazon-web-services><aws-amplify><graphql-js><amplifyjs><graphql-schema>,2,1,0,2020-09-03 03:03:32
63718075,2,,63706767,0,,<p>Sorry but it's a bit not what I meant. Here is a code example:</p>&#xA;<pre><code>export const getBooks = gql`&#xA;    query getBooks () {&#xA;        getBooks ()&#xA;            @rest(&#xA;                type: &quot;Book&quot;&#xA;                path: &quot;books&quot;&#xA;                endpoint: &quot;v1&quot;&#xA;            ) {&#xA;            id&#xA;            title&#xA;            author&#xA;        }&#xA;    }&#xA;`&#xA;&#xA;export const getBook = gql`&#xA;    query getBook ($id: Int!) {&#xA;        getBook (id: $id)&#xA;            @rest(&#xA;                type: &quot;Book&quot;&#xA;                path: &quot;book/{args.id}&quot;&#xA;                endpoint: &quot;v1&quot;&#xA;            ) {&#xA;            id&#xA;            title&#xA;            author&#xA;        }&#xA;    }&#xA;`&#xA;</code></pre>&#xA;<p>So we have two different queries. The goal is when we run both in turn the getBook should not make a REST request because we already have the same data in the cache since we get it from getBooks. Before resolvers were deprecated we handle it in resolvers. Like: if this ID is not exist in the cache just make a request if exist give me data from the cache. How we can do that now?</p>&#xA;<p>As u can see fetchPolicy it's completely different.&#xA;Local fields it's also not good because it's something about fields not about the whole entity.</p>&#xA;,4080951,,,,2020-09-03 06:33:44,"",,0,1,0,2020-09-03 06:33:44
63718668,1,,,0,1551,"<p>I am using Amazon's Amplify library for GraphQL. Create mutations are returning&#xA;non-null data in the response, but update mutations return null data in the&#xA;response.</p>&#xA;<pre class=""lang-java prettyprint-override""><code>Amplify.API.query(ModelQuery.list(Login.class), response -&gt; {&#xA;    boolean isThere = false;&#xA;    for (Login login : response.getData()) {&#xA;        if (login.getLoginEmail().equals(loginEmail)) {&#xA;            isThere = true;&#xA;            break;&#xA;        }&#xA;    }&#xA;    if (isThere) {&#xA;        Log.e(&quot;MyAmplifyApp&quot;, &quot;Update Query&quot;);&#xA;        Amplify.API.mutate(ModelMutation.update(todo),&#xA;            response3 -&gt; Log.i(&quot;MyAmplifyApp&quot;, &quot;Updated Todo with id: &quot; + response3.getData().getId()),&#xA;            error -&gt; Log.e(&quot;MyAmplifyApp&quot;, &quot;Update failed&quot;, error)&#xA;        );&#xA;    } else {&#xA;        Log.e(&quot;MyAmplifyApp&quot;, &quot;Insert Query&quot;);&#xA;        Amplify.API.mutate(ModelMutation.create(todo),&#xA;            response2 -&gt; Log.i(&quot;MyAmplifyApp&quot;, &quot;Added Todo with id: &quot; + response2.getData().getId()),&#xA;            error -&gt; Log.e(&quot;MyAmplifyApp&quot;, &quot;Create failed&quot;, error)&#xA;        );&#xA;    }&#xA;}, error -&gt; Log.e(&quot;MyAmplifyApp&quot;, &quot;Query failure&quot;, error));&#xA;</code></pre>&#xA;<p>Error Log:</p>&#xA;<pre class=""lang-java prettyprint-override""><code>java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.String com.amplifyframework.datastore.generated.model.Login.getId()' on a null object reference&#xA;        at com.example.todo.Activity.LoginActivity.lambda$null$0(LoginActivity.java:722)&#xA;        at com.example.todo.Activity.-$$Lambda$LoginActivity$gU4azCKLr7DOG8SII3C8XdBDaxk.accept(lambda)&#xA;        at com.amplifyframework.api.aws.AppSyncGraphQLOperation$OkHttpCallback.onResponse(AppSyncGraphQLOperation.java:140)&#xA;        at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:519)&#xA;        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)&#xA;        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)&#xA;        at java.lang.Thread.run(Thread.java:760)&#xA;</code></pre>&#xA;",8325853,,695787,2020-09-04 06:52:04,2020-10-29 13:50:25,GraphQL mutation returning null on update,<android><graphql><aws-amplify><aws-appsync><amplify>,2,10,0,2020-09-03 07:18:25
63719760,1,63729993,,0,2968,"<p>I am new in AWS Amplify and I am try to make simple project.</p>&#xA;<p>I have two different frontend(react) projects. One of them for blog readers and one of them for editors.For both applications, I want to use same DynamoDB tables(and use graphql api). But I want to use different user pools for each project. How can I implement this?</p>&#xA;<p>I was reading this article - <a href=""https://medium.com/@fullstackpho/aws-amplify-multi-auth-graphql-public-read-and-authenticated-create-update-delete-1bf5443b0ad1"" rel=""nofollow noreferrer"">https://medium.com/@fullstackpho/aws-amplify-multi-auth-graphql-public-read-and-authenticated-create-update-delete-1bf5443b0ad1</a></p>&#xA;<p>I know AWS AppSync supports multiple authorization types like cognito, api key ...&#xA;But does it support two cognito type?</p>&#xA;<p>Thanks,</p>&#xA;",9511257,,1819065,2020-09-03 18:41:48,2020-09-06 03:09:47,Aws Amplify Using Multiple Cognito User Pools in One GraphQL Api,<reactjs><amazon-web-services><graphql><aws-amplify><aws-appsync>,1,1,0,2020-09-03 08:30:10
63720848,2,,63702570,8,,"<p>In my case above the GraphQL is backed by a DynamoDB table;</p>&#xA;<p>Behind the scenes, the GraphQL operations translate to PutItem, UpdateItem, and DeleteItem DynamoDB operations.</p>&#xA;<p>For these data manipulation operations, DynamoDB API allows you to specify a condition expression to determine which items should be modified. If the condition expression evaluates to true, the operation succeeds; otherwise, the operation fails.</p>&#xA;<p>You can read more about use cases for each of these conditions on the AWS <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ConditionExpressions.html"" rel=""noreferrer"">Condition Expressions DynamoDB dev guide</a></p>&#xA;<p>At GraphQL mutation level, only if the record meets the condition, will the mutation go ahead. Otherwise the mutation is not allowed and a ConditionalCheckFailedException is returned:</p>&#xA;<pre><code>&quot;errors&quot;: [&#xA;    {&#xA;      &quot;path&quot;: [&#xA;        &quot;deleteWalletProperty&quot;&#xA;      ],&#xA;      &quot;data&quot;: null,&#xA;      &quot;errorType&quot;: &quot;DynamoDB:ConditionalCheckFailedException&quot;,&#xA;      &quot;errorInfo&quot;: null,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 12,&#xA;          &quot;column&quot;: 3,&#xA;          &quot;sourceName&quot;: null&#xA;        }&#xA;      ],&#xA;      &quot;message&quot;: &quot;The conditional request failed (Service: DynamoDb, Status Code: 400, Request ID: E3PR9OM6M5J1QBHKNT8E4SM1DJVV4KQNSO5AEMVJF66Q9ASUAAJG, Extended Request ID: null)&quot;&#xA;    }&#xA;  ]&#xA;</code></pre>&#xA;",13610288,,13610288,2020-09-04 06:41:04,2020-09-04 06:41:04,"",,0,0,0,2020-09-03 09:36:18
63729993,2,,63719760,2,,"<p>As per AWS <a href=""https://aws.amazon.com/blogs/mobile/graphql-security-appsync-amplify/"" rel=""nofollow noreferrer"">documentation</a>, you can use two different <strong>Cognito groups</strong> to access same AppSync API accessing the same DynamoDB table by following ways, which are pretty straight forward;</p>&#xA;<p>If you use <code>aws_auth</code> directive</p>&#xA;<pre><code>type Query {&#xA;  getPosts:[Post!]! &#xA;  @aws_auth(cognito_groups: [&quot;Bloggers&quot;, &quot;Readers&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>If you use <code>aws_cognito_user_pools</code> directive</p>&#xA;<pre><code>type Query {&#xA;  getPosts:[Post!]!&#xA;  @aws_api_key @aws_cognito_user_pools(cognito_groups: [&quot;Bloggers&quot;, &quot;Readers&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>Now, if you specifically want two different user pools for your same API and DynamoDB table, then you will have to go little extra mile to achieve this. Following are the steps:</p>&#xA;<ol>&#xA;<li>Add both of your user pools as <strong>Additional authorization&#xA;providers</strong> in your AppSync settings.</li>&#xA;<li>Use <code>@aws_cognito_user_pools</code> directive with your queries and&#xA;mutation in the schema and the object these queries and mutations are trying to access.</li>&#xA;<li>This is a tricky one! When you try to access the <code>$ctx.identity.cognitoIdentityPoolId</code> in your query/mutation resolver, it will throw you null. Because <code>cognitoIdentityPoolId</code> is only included in <code>AWS_IAM</code> authorization header and not in <code>AWS_COGNITO_USER_POOLS</code> [<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html#aws-appsync-resolver-context-reference-identity"" rel=""nofollow noreferrer"">Ref.</a>]. However, you can still get user pool ID from <code>iss</code> field in <code>$ctx.identity.claims</code> and it will look something like <code>https://cognito-idp.us-xxxx-x.amazonaws.com/us-xxxx-X_XxxXxxXX</code>. This <code>us-xxxx-X_XxxXxxXX</code> is your user pool ID which you will have to parse somehow.</li>&#xA;<li>After parsing user pool ID, you can filter your users based on&#xA;Cognito pool ID and then granting them the access to the table you&#xA;desire.</li>&#xA;</ol>&#xA;",1819065,,1819065,2020-09-06 03:09:47,2020-09-06 03:09:47,"",,0,1,0,2020-09-03 18:54:22
63730661,1,,,1,45,"<p>I am using appsync with amplify and trying to figure out how to query based on two different selectors.  Basically I need to either query all if neither <code>county or facility</code> are supplied, query with <code>county</code> while <code>facility</code> is empty, or query with <code>facility</code> while <code>county</code> is empty.  I thought I could wrap this into 1 query but it doesn't seem like I can.  My appsync schemas look like this.</p>&#xA;<pre><code>type Client &#xA;  @model&#xA;  @key(name: &quot;clientByCountyOrFacility&quot;, fields: [&quot;county&quot;, &quot;facility&quot;], queryField: &quot;getClientsByCountyOrFacility&quot;) &#xA;  @searchable {&#xA;  id: ID!&#xA;  facility: String!&#xA;  county: String!&#xA;  products: [Product] @connection(name: &quot;ClientProducts&quot;)&#xA;}&#xA;&#xA;type Product &#xA;  @model &#xA;  @searchable {&#xA;  id: ID!&#xA;  client: Client @connection(name: &quot;ClientProducts&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>I can get this to work by using (below query) but I am worried this will run into the 100 scan limit because it uses the <code>listClients</code> query underneath.  Possibly if there was an easy way to change that could be a solution but it seems the files in amplify are autogenerated.</p>&#xA;<pre><code>query getClientsByCountyOrFacility($county: String = &quot;&quot;, $facility: String = &quot;&quot;) {&#xA;    listClients(filter: {&#xA;    county: {&#xA;      contains: $county&#xA;    }&#xA;    facility: {&#xA;      contains: $facility&#xA;    }&#xA;  }) {&#xA;    items {&#xA;      id&#xA;      products {&#xA;        items {&#xA;          id&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I added the <code>@key</code> to see if I could create an index but it doesn't like that and I'm at a lose for how to acquire the data.  How do I go about building this schema and query to get the data back?</p>&#xA;",976709,,976709,2020-09-03 23:34:09,2020-09-03 23:34:09,Query Appsync graphql with 3 different combinations,<graphql><aws-amplify><aws-appsync>,0,0,0,2020-09-03 19:45:56
63743256,1,63747029,,1,232,"<p>I've never seen this before.</p>&#xA;<p>I try to export a function and import it in another file. When I attempt an import, my autoimport tool finds it and imports it. Autocompletion is even there when I reference to it. There are no errors showing in code, but I get a console error when compiling that says the function is not exported...</p>&#xA;<p>Exported from queries...</p>&#xA;<p><a href=""https://i.stack.imgur.com/lXM4m.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lXM4m.png"" alt=""enter image description here"" /></a></p>&#xA;<p>The import statement</p>&#xA;<p><a href=""https://i.stack.imgur.com/pNikM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pNikM.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Note that I've also tried  without success</p>&#xA;<p><code>import { getAllRoles } from '../graphql/queries'</code></p>&#xA;<p>Now where I actually use the imported function...</p>&#xA;<p><a href=""https://i.stack.imgur.com/9yjTG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9yjTG.png"" alt=""enter image description here"" /></a></p>&#xA;<p>As you can see, no syntax / import error highlighted, and when I save and compile...</p>&#xA;<p><a href=""https://i.stack.imgur.com/FJhiA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FJhiA.png"" alt=""enter image description here"" /></a></p>&#xA;<p>On top of all that, note that the queries file containing the exported function is auto-generated by Amplify codegen from an AppSync API, so I can't see why they'd mess it up.</p>&#xA;<p>I'm very confused. Any ideas?</p>&#xA;",7586898,,,,2020-09-04 19:28:52,"Function exported and imported, no errors, but getting '... is not exported from ...'",<javascript><reactjs><graphql><aws-amplify><aws-appsync>,1,0,0,2020-09-04 14:38:00
63778908,2,,63778328,0,,"<p>The first idea I have in mind here is to create two different inputs and/or mutations. E.g. for admins with access to the field:</p>&#xA;<pre><code>updateUserAsAdmin(&#xA;    input: UpdateUserFullInput! @spread&#xA;): User @update &#xA;        @middleware(checks: [&quot;auth:api&quot;]) &#xA;        @can(&quot;users.update.full&quot;)&#xA;</code></pre>&#xA;<p>And <code>UpdateUserFullInput</code> contains the <code>is_admin</code> field.</p>&#xA;<p>I also came across this discussion a few times: <a href=""https://github.com/nuwave/lighthouse/issues/325"" rel=""nofollow noreferrer"">https://github.com/nuwave/lighthouse/issues/325</a>&#xA;Maybe you can also find some useful ideas here.</p>&#xA;<p>You may also want to look at the official docs: <a href=""https://github.com/nuwave/lighthouse/blob/master/docs/master/security/authorization.md#custom-field-restrictions"" rel=""nofollow noreferrer"">https://github.com/nuwave/lighthouse/blob/master/docs/master/security/authorization.md#custom-field-restrictions</a></p>&#xA;",2291097,,2291097,2020-09-08 08:33:23,2020-09-08 08:33:23,"",,0,1,0,2020-09-07 13:50:12
63781548,1,,,2,280,"<p>I have a many:many relationship between 2 tables: <code>note</code> and <code>tag</code>, and want to be able to search all notes by their <code>tagId</code>. Because of the many:many I have a junction table <code>note_tag</code>.</p>&#xA;<p>My goal is to expose a computed field on my Postgraphile-generated Graphql schema that I can query against, along with the other properties of the <code>note</code> table.</p>&#xA;<p>I'm playing around with <code>postgraphile-plugin-connection-filter</code>. This plugin makes it possible to filter by things like authorId (which would be 1:many), but I'm unable to figure out how to filter by a many:many. I have a computed column on my note table called <code>tags</code>, which is JSON. Is there a way to &quot;look into&quot; this json and pick out where id = 1?</p>&#xA;<p>Here is my computed column <code>tags</code>:</p>&#xA;<pre><code>    create or replace function note_tags(note note, tagid text)&#xA;        returns jsonb as $$&#xA;            select&#xA;                json_strip_nulls(&#xA;                    json_agg(&#xA;                        json_build_object(&#xA;                            'title', tag.title, &#xA;                            'id', tag.id,&#xA;                        ) &#xA;                    )&#xA;                )::jsonb &#xA;            from note&#xA;            inner join note_tag on note_tag.tag_id = tagid and note_tag.note_id = note.id&#xA;            left join note_tag nt on note.id = nt.note_id &#xA;            left join tag on nt.tag_id = tag.id&#xA;            where note.account_id = '1'&#xA;            group by note.id, note.title;&#xA;        $$ language sql stable;&#xA;</code></pre>&#xA;<p>as I understand the function above, I am returning jsonb, based on the tagid that was given (to the function): <code>inner join note_tag on note_tag.tag_id = tagid</code>. So why is the json not being filtered by <code>id</code> when the column gets computed?</p>&#xA;<p>I am trying to make a query like this:</p>&#xA;<pre><code>query notesByTagId {&#xA;  notes {&#xA;    edges {&#xA;      node {&#xA;        title&#xA;        id&#xA;        tags(tagid: &quot;1&quot;)&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>but right now when I execute this query, I get back stringified JSON in the <code>tags</code> field. However, all tags are included in the json, whether or not the note actually belongs to that tag or not.</p>&#xA;<p>For instance, this note with id = 1 should only have tags with id = 1 and id = 2. Right now it returns every tag in the database</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;notes&quot;: {&#xA;      &quot;edges&quot;: [&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;id&quot;: &quot;1&quot;,&#xA;            &quot;tags&quot;: &quot;[{\&quot;id\&quot;:\&quot;1\&quot;,\&quot;title\&quot;:\&quot;Psychology\&quot;},{\&quot;id\&quot;:\&quot;2\&quot;,\&quot;title\&quot;:\&quot;Logic\&quot;},{\&quot;id\&quot;:\&quot;3\&quot;,\&quot;title\&quot;:\&quot;Charisma\&quot;}]&quot;,&#xA;            ...&#xA;</code></pre>&#xA;<p>The key factor with this computed column is that the JSON must include all tags that the note belongs to, even though we are searching for notes on a single <code>tagid</code></p>&#xA;<p>here are my simplified tables...</p>&#xA;<p>note:</p>&#xA;<pre><code>create table notes(&#xA;  id text, &#xA;  title text&#xA;)&#xA;</code></pre>&#xA;<p>tag:</p>&#xA;<pre><code>create table tag(&#xA;  id text,&#xA;  title text&#xA;)&#xA;</code></pre>&#xA;<p>note_tag:</p>&#xA;<pre><code>create table note_tag(&#xA;  note_id text FK references note.id&#xA;  tag_id text FK references tag.id&#xA;)&#xA;</code></pre>&#xA;<h1>Update</h1>&#xA;<p>I am changing up the approach a bit, and am toying with the following function:</p>&#xA;<pre><code>    create or replace function note_tags(n note)&#xA;        returns setof tag as $$&#xA;            select tag.*&#xA;            from tag&#xA;            inner join note_tag on (note_tag.tag_id = tag.id)&#xA;            where note_tag.note_id = n.id;&#xA;        $$ language sql stable;&#xA;</code></pre>&#xA;<p>I am able to retrieve all notes with the <code>tags</code> field populated, but now I need to be able to filter out the notes that don't belong to a particular tag, while still retaining all of the tags that belong to a given note.</p>&#xA;<p>So the question remains the same as above: how do we filter a table based on a related table's PK?</p>&#xA;",1170429,,1170429,2020-09-07 19:13:11,2020-09-07 20:18:15,Querying a many:many relationship on PK of the related table (ie. filtering by related table column),<postgresql><graphql><postgraphile>,1,0,0,2020-09-07 16:56:30
63783733,2,,63781548,1,,"<p>After a while of digging, I think I've come across a good approach. Based on <a href=""https://github.com/graphile-contrib/postgraphile-plugin-connection-filter/issues/26#issuecomment-390055186"" rel=""nofollow noreferrer"">this response</a>, I have made a function that returns all <code>notes</code> by a given <code>tagid</code>.</p>&#xA;<p>Here it is:</p>&#xA;<pre><code>    create or replace function all_notes_with_tag_id(tagid text)&#xA;        returns setof note as $$&#xA;            select distinct note.*&#xA;            from tag&#xA;            inner join note_tag on (note_tag.tag_id = tag.id)&#xA;            inner join note on (note_tag.note_id = note.id)&#xA;            where tag.id = tagid;&#xA;        $$ language sql stable;&#xA;</code></pre>&#xA;<p>The error in approach was to expect the computed column to do all of the work, whereas its only job should be to get all of the data. This function <code>all_nuggets_with_bucket_id</code> can now be called directly in graphql like so:</p>&#xA;<pre><code>query MyQuery($tagid: String!) {&#xA;  allNotesWithTagId(tagid: $tagid) {&#xA;    edges {&#xA;      node {&#xA;        id&#xA;        title&#xA;        tags {&#xA;          edges {&#xA;            node {&#xA;              id&#xA;              title&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1170429,,,,2020-09-07 20:18:15,"",,0,1,0,2020-09-07 20:18:15
63784341,1,,,1,388,"<p>I'm trying to run a GraphQL query in the AWS AppSync console:</p>&#xA;<pre><code>query MyQuery {&#xA;  getUserInfoById(id: &quot;1234566789&quot;) {&#xA;    account {&#xA;      id // need this value for getAvailableCourses&#xA;    }&#xA;  }&#xA;  getAvailableCourses(accountId: &quot;&quot;, pageNumber: 0) {&#xA;    data {&#xA;      id&#xA;      name&#xA;      type&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Basically I need the value <code>account.id</code> in <code>getUserInfoById</code> for <code>getAvailableCourses</code>. I'm obviously new to GraphQL.  How would I go about this?</p>&#xA;",2387962,,271697,2020-10-27 18:42:56,2020-11-12 03:53:16,Passing variables in GraphQL,<graphql><aws-appsync>,2,0,0,2020-09-07 21:14:52
63791790,2,,62867425,6,,"<p>Decorate your model with the <code>@searchable</code> directive, like so:</p>&#xA;<pre><code>type Todo @model @searchable&#xA;{&#xA;  id: ID!&#xA;  text: String!&#xA;}&#xA;</code></pre>&#xA;<p>After that, you can query your data with sorting capabilities like below:</p>&#xA;<pre><code>import { searchToDos } from '../graphql/queries';&#xA;import { API, graphqlOperation } from 'aws-amplify';&#xA;&#xA;const toDoData = await API.graphql(graphqlOperation(searchToDos, {&#xA;  sort: {&#xA;    direction: 'asc',&#xA;    field: 'text'&#xA;  }&#xA;}));&#xA;console.log(toDoData.data.searchToDos.items);&#xA;</code></pre>&#xA;<p>For more information, see</p>&#xA;<ul>&#xA;<li><a href=""https://github.com/aws-amplify/amplify-cli/issues/1851#issuecomment-545245633"" rel=""noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/1851#issuecomment-545245633</a></li>&#xA;<li><a href=""https://docs.amplify.aws/cli/graphql-transformer/directives#searchable"" rel=""noreferrer"">https://docs.amplify.aws/cli/graphql-transformer/directives#searchable</a></li>&#xA;</ul>&#xA;",4229687,,4229687,2020-09-08 10:25:50,2020-09-08 10:25:50,"",,0,3,0,2020-09-08 10:16:13
63798065,2,,63784341,1,,"<p>To the best of my knowledge, there can be two ways you can do this.</p>&#xA;<ol>&#xA;<li><p>You can handle this in your frontend by getting user's <code>id</code>&#xA;from the session info and pass it to the other query.</p>&#xA;</li>&#xA;<li><p>You can also merge these two queries and make it one. You will also have to change the respective fields. Then attach a resolver with <code>AvailableCourses</code> and use <code>$ctx.source.id</code> in the resolver to get further details. Schema would look something like this</p>&#xA;<pre><code>type Account {&#xA;  id : ID!&#xA;  availableCourses: AvailableCourses&#xA;  ..&#xA;}&#xA;&#xA;type AvailableCourses {&#xA;  name: String!&#xA;  type: String!&#xA;  ..&#xA;}&#xA;&#xA;type Query {&#xA;  getUserInfoById(id: ID!): Account&#xA;}&#xA;</code></pre>&#xA;</li>&#xA;</ol>&#xA;",1819065,,,,2020-09-08 16:32:19,"",,0,0,0,2020-09-08 16:32:19
63800711,1,,,0,89,"<p>I'm trying to pass my variable to the query object but I think I have a syntax error somewhere:</p>&#xA;<p>When I have the string like this (not passed to Query widget)the api call works:</p>&#xA;<pre><code>String fetchMissingConsignments = &quot;&quot;&quot; query MyQuery {&#xA;  getCountMissingConsignmentNotes(accountId: &quot;66fdc17b-308d-4e71-85ee-0d4a77e3276e&quot;)&#xA;}&quot;&quot;&quot;;&#xA;</code></pre>&#xA;<p>But when I try to pass it to the Query widget like this:</p>&#xA;<pre><code>   String fetchMissingConsignments = &quot;&quot;&quot; query MyQuery(\$accountId: String!){&#xA;          getCountMissingConsignmentNotes(where:{accountId:{ _eq:\$accountId}})&#xA;        }&quot;&quot;&quot;;&#xA;</code></pre>&#xA;<p>I get a null back...</p>&#xA;<p>And the Query Object:</p>&#xA;<pre><code>    @override&#xA;      Widget build(BuildContext context) {&#xA;        return Scaffold(&#xA;          body: Center(&#xA;              child: Query(&#xA;            builder: (QueryResult result, {VoidCallback refetch, FetchMore fetchMore}) {&#xA;              final res = result.data['getCountMissingConsignmentNotes'];&#xA;    &#xA;              return Text(res.toString());&#xA;            },&#xA;            options: QueryOptions(&#xA;              &#xA;              documentNode: gql(fetchMissingConsignments),&#xA;              variables: {'accountId': '66fdc17b-308d-4e71-85ee-0d4a77e3276e'}, //pass variable here &#xA;            ),&#xA;          )),&#xA;    );&#xA;  }&#xA;</code></pre>&#xA;<p><strong>PS</strong>&#xA;Im using this graphql <a href=""https://pub.dev/packages/graphql_flutter"" rel=""nofollow noreferrer"">plugin</a></p>&#xA;",2387962,,,,2021-06-25 08:47:50,Syntax error creating Graphql query in Flutter,<flutter><graphql>,1,0,0,2020-09-08 19:51:36
63829417,2,,60523196,2,,"<p>In case you missed that API Gateway is now available: <a href=""https://cloud.google.com/api-gateway/docs/about-api-gateway"" rel=""nofollow noreferrer"">https://cloud.google.com/api-gateway/docs/about-api-gateway</a></p>&#xA;<p>I am also currently running a Cloud Run service (kotlin/spring-boot) with a GraphQL endpoint and will try to bring it together with the API Gateway (beta)</p>&#xA;",5967828,,,,2020-09-10 12:11:41,"",,0,0,0,2020-09-10 12:11:41
63867677,1,,,1,522,"<p><strong>Scenario:</strong></p>&#xA;<ol>&#xA;<li><p>I created a react project following the steps given on AWS Amplify docs <a href=""https://docs.amplify.aws/start/q/integration/react"" rel=""nofollow noreferrer"">here</a></p>&#xA;</li>&#xA;<li><p>I answered <em><strong>yes</strong></em> to the question <code>Do you want to generate/update all possible GraphQL operations queries, mutations and subscriptions?</code></p>&#xA;</li>&#xA;<li><p>Everything worked as expected locally, I tested using <code>amplify mock</code></p>&#xA;</li>&#xA;<li><p>When the project was getting towards completion, I pushed to the cloud using <code>amplify push</code></p>&#xA;</li>&#xA;<li><p><em><strong>I made changes to</strong></em> the default <code>list</code>, <code>get</code> and <code>update</code> functions in the following (auto-generated) files:</p>&#xA;</li>&#xA;</ol>&#xA;<ul>&#xA;<li><code>src/graphql/queries</code></li>&#xA;<li><code>src/graphql/mutations</code></li>&#xA;</ul>&#xA;<ol start=""7"">&#xA;<li>the app worked as expected</li>&#xA;<li><em><strong>the problem came when</strong></em> I did 'amplify mock' after I had done <code>amplify push</code> earlier already (step 6)</li>&#xA;<li>all my changes to the <code>src/graphql/queries</code> and <code>src/graphql/mutations</code> files were overwritten by the system on running <code>amplify mock</code></li>&#xA;<li>I was able to reproduce this scenario again and again... each time that I ran <code>amplify mock</code> it reset the <code>src/graphql/queries</code> and <code>src/graphql/mutations</code> files.</li>&#xA;</ol>&#xA;<p>My <strong>Question</strong>:</p>&#xA;<ul>&#xA;<li>How to avoid this from happening?</li>&#xA;<li>I can create new files instead of changing <code>src/graphql/queries</code> and <code>src/graphql/mutations</code> files?</li>&#xA;<li>or is there a better solution or a step that I am missing?</li>&#xA;</ul>&#xA;<p>relevant dependencies in my package.json:</p>&#xA;<pre><code>  &quot;dependencies&quot;: {&#xA;    &quot;@aws-amplify/auth&quot;: &quot;^3.4.1&quot;,&#xA;    &quot;@aws-amplify/cli&quot;: &quot;^4.28.2&quot;,&#xA;    &quot;@aws-amplify/ui-react&quot;: &quot;^0.2.17&quot;,&#xA;    &quot;aws-amplify&quot;: &quot;^3.1.0&quot;,&#xA;    &quot;react&quot;: &quot;^16.13.1&quot;,&#xA;    &quot;react-dom&quot;: &quot;^16.13.1&quot;,&#xA;    &quot;react-redux&quot;: &quot;^7.2.1&quot;,&#xA;    &quot;react-router-dom&quot;: &quot;^5.2.0&quot;,&#xA;    &quot;react-scripts&quot;: &quot;3.4.3&quot;,&#xA;    &quot;redux&quot;: &quot;^4.0.5&quot;&#xA;  },&#xA;</code></pre>&#xA;",8757883,,,,2020-12-23 20:23:56,"Running 'amplify mock' resets the changes to queries, mutations",<reactjs><amazon-web-services><graphql><aws-amplify>,1,0,0,2020-09-13 06:04:14
63892857,1,,,1,210,"<p>I have a repository with my basic metadata files for Hasura, also in my production Hasura I'm always adding new metadata configuration like roles but this information shouldn't be stored in the repository because is dynamically generated with an external application and is not always the same.</p>&#xA;<p>How could I manage the deploy of new metadata changes from my repository?</p>&#xA;<p>I was thinking to implement in my CI/CD flow to export the current production metadata and merge it with the metadata that I stored in the repository could be an option but I'm looking to another ideas.</p>&#xA;",10982349,,14048579,2020-09-15 12:01:00,2020-09-16 00:20:00,How to apply metada in hasura using multiple metadata files,<graphql><continuous-deployment><hasura>,1,3,0,2020-09-14 23:03:12
63911458,2,,63892857,0,,"<p>You should read this course <a href=""https://hasura.io/blog/moving-from-local-development-staging-production-with-hasura/"" rel=""nofollow noreferrer"">&quot;Local Dev to Staging to getting Production-Ready with Hasura!&quot;</a>.</p>&#xA;<p>Also, I'm not sure changing metadata in your production environnement is a good practice. You should rethink your roles workflow...</p>&#xA;<p>Anyway. You could export your metadata from your server in your repository:</p>&#xA;<pre><code>hasura metadata export --endpoint https://hasura.prod&#xA;</code></pre>&#xA;<p>And then, reload the metadata:</p>&#xA;<pre><code>hasura metadata reload &#xA;</code></pre>&#xA;",479957,,,,2020-09-16 00:20:00,"",,0,0,0,2020-09-16 00:20:00
63930137,2,,62826168,2,,"<p>This question is a little old, but it might help someone:</p>&#xA;<p>The <code>schema.json</code> file is the <em>introspection schema</em> [1]. It's designed to be machine-readable so your favourite library can help you validate your requests client-side, it's certainly not designed to be human-readable or editable.</p>&#xA;<p>Instead you should edit <code>amplify/backend/api/&lt;apiname&gt;/schema.graphql</code>. When you then <code>amplify api push</code> it will do the following:</p>&#xA;<ol>&#xA;<li>Process that schema file according to the directives and transformers at [2] (you can also add your own transformers if you want to add custom directives that manipulate the schema, cloudformation or other resources). The output of this process is in build/graphql.schema in your API folder.</li>&#xA;<li>Builds cloudformation to deploy this, similar to what @peter-n does himself.</li>&#xA;<li>Deploys it, and</li>&#xA;<li>Fetches the introspection schema (schema.json) for you and saves it to the location given in <code>schemaPath</code> in <code>.graphqlconfig.yml</code>, which is your <code>src/graphql</code> directory by default.</li>&#xA;</ol>&#xA;<p>[1] <a href=""https://graphql.org/learn/introspection/"" rel=""nofollow noreferrer"">https://graphql.org/learn/introspection/</a></p>&#xA;<p>[2] <a href=""https://docs.amplify.aws/cli/graphql-transformer/directives"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql-transformer/directives</a></p>&#xA;",5059360,,,,2020-09-17 01:49:58,"",,0,0,0,2020-09-17 01:49:58
63960097,1,,,3,437,"<p>Following <a href=""https://docs.amplify.aws/lib/graphqlapi/graphql-from-nodejs/q/platform/js"" rel=""nofollow noreferrer"">this documentation</a> to build a Lambda function to do some admin-type stuff for an Amplify-based app.  I have Cognito log in set up for the client side, and that all works. I've added the function (transcript lost) and then modified it:</p>&#xA;<pre><code>&gt; amplify update function&#xA;? Select which capability you want to update: Lambda function (serverless function)&#xA;? Select the Lambda function you want to update categoryAdder&#xA;? Do you want to update the Lambda function permissions to access other resources in this&#xA;project? Yes&#xA;? Select the category api&#xA;Api category has a resource called todoexample&#xA;? Select the operations you want to permit for todoexample create, read, update, delete&#xA;&#xA;You can access the following resource attributes as environment variables from your Lambda&#xA; function&#xA;        API_TODOEXAMPLE_GRAPHQLAPIENDPOINTOUTPUT&#xA;        API_TODOEXAMPLE_GRAPHQLAPIIDOUTPUT&#xA;? Do you want to invoke this function on a recurring schedule? No&#xA;? Do you want to configure Lambda layers for this function? No&#xA;? Do you want to edit the local lambda function now? No&#xA;</code></pre>&#xA;<p>Here is the GraphQL schema:</p>&#xA;<pre><code>type Todo @model&#xA;@auth(rules: [{ allow: owner, operations: [create, delete, update] }])&#xA;{&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;    category: Category&#xA;}&#xA;&#xA;type Category @model&#xA;@auth (rules: [&#xA;    { allow: private, operations: [read] },&#xA;    { allow: private, provider: iam }&#xA;])&#xA;{&#xA;    id: ID!&#xA;    category: String!&#xA;}&#xA;&#xA;type Mutation&#xA;{&#xA;    addCategory(category: String!): Category @function(name: &quot;categoryAdder-${env}&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>The idea is that only the Lambda function can run the <code>addCategory</code> mutation.</p>&#xA;<p>Here's the code:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>/* Amplify Params - DO NOT EDIT&#xA;    API_TODOEXAMPLE_GRAPHQLAPIENDPOINTOUTPUT&#xA;    API_TODOEXAMPLE_GRAPHQLAPIIDOUTPUT&#xA;    ENV&#xA;    REGION&#xA;Amplify Params - DO NOT EDIT */&#xA;&#xA;const https = require('https')&#xA;const urlParse = require('url').URL&#xA;const appsyncUrl = process.env.API_TODOEXAMPLE_GRAPHQLAPIENDPOINTOUTPUT&#xA;const region = process.env.REGION&#xA;const endpoint = new urlParse(appsyncUrl).hostname.toString()&#xA;const AWS = require('aws-sdk')&#xA;require('es6-promise').polyfill()&#xA;require('isomorphic-fetch')&#xA;&#xA;exports.handler = async (event) =&gt; {&#xA;  const mutation = `&#xA;  mutation addCategory($category: String!) {&#xA;    addCategory(category: $category) {&#xA;      id&#xA;      category&#xA;    }&#xA;  }&#xA;`&#xA;&#xA;  AWS.config.update({&#xA;    region,&#xA;    credentials: new AWS.Credentials(&#xA;      process.env.AWS_ACCESS_KEY_ID,&#xA;      process.env.AWS_SECRET_ACCESS_KEY,&#xA;      process.env.AWS_SESSION_TOKEN&#xA;    ),&#xA;  })&#xA;  const credentials = AWS.config.credentials&#xA;&#xA;  const req = new AWS.HttpRequest(appsyncUrl, region)&#xA;  req.method = 'POST'&#xA;  req.path = '/graphql'&#xA;  req.headers.host = endpoint&#xA;  req.headers['Content-Type'] = 'application/json'&#xA;  req.body = JSON.stringify({&#xA;    query: mutation,&#xA;    operationName: 'addCategory',&#xA;    variables: { category: 'Cats' },&#xA;  })&#xA;&#xA;  const signer = new AWS.Signers.V4(req, 'appsync', true)&#xA;  signer.addAuthorization(credentials, AWS.util.date.getDate())&#xA;&#xA;  console.log(`About to do promise...`)&#xA;  const data = await new Promise((resolve, reject) =&gt; {&#xA;    console.log(`About to do https.request...`)&#xA;    const httpRequest = https.request({ ...req, host: endpoint }, (result) =&gt; {&#xA;      console.log(`In https.request callback`)&#xA;      result.on('data', (data) =&gt; {&#xA;        console.log(`In result.on callback, data is`, data.toString())&#xA;        resolve(JSON.parse(data.toString()))&#xA;      })&#xA;    })&#xA;&#xA;    console.log(`About to do httpRequest.write`)&#xA;    httpRequest.write(req.body)&#xA;    httpRequest.end()&#xA;  })&#xA;  console.log(`Returning data`, data)&#xA;&#xA;  return {&#xA;    statusCode: 200,&#xA;    body: data,&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The error I get is &quot;Not Authorized to access addCategory on type Mutation&quot;.</p>&#xA;<p>Any clues appreciated!</p>&#xA;",2151750,,,,2020-09-18 17:12:12,AWS Amplify lambda function unable to access a mutation,<node.js><amazon-web-services><graphql><aws-amplify>,0,0,0,2020-09-18 17:12:12
63995688,1,,,0,465,"<p>So I have my CloudFormation template defined to include a Parameters section with several parameters including</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>Parameters:&#xA;&#xA;    DefaultLimit: &#xA;        Type: Number&#xA;</code></pre>&#xA;<p>I also have a GraphQL API defined in which I am using AppSync PIPELINE resolvers to run multiple operations in sequence.</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>    QueryResolver:&#xA;        Type: AWS::AppSync::Resolver&#xA;        DependsOn: AppSyncSchema&#xA;        Properties:&#xA;            ApiId: !GetAtt [AppSyncAPI, ApiId]&#xA;            TypeName: Query&#xA;            FieldName: getData&#xA;            Kind: PIPELINE&#xA;            PipelineConfig:&#xA;                Functions:&#xA;                    - !GetAtt AuthFunction.FunctionId&#xA;                    - !GetAtt ScanDataFunction.FunctionId&#xA;            RequestMappingTemplate: |&#xA;                { &#xA;                    # Inject value of DefaultLimit in $context object&#xA;                }&#xA;            ResponseMappingTemplate: &quot;$util.toJson($context.result)&quot;&#xA;</code></pre>&#xA;<p>That all works as expected, except for injecting CFN parameter values in mapping templates.</p>&#xA;<p>The issue I am having is this -- I would like to pass the value of <code>DefaultLimit</code> to the <code>before</code> RequestMappingTemplate so that the value is available to the <code>ScanDataFunction</code>.  The goal is for that value be used as the default <code>limit</code> value when the second function does, say a DynamoDB scan operation, and returns paginated results.</p>&#xA;<p>My current approach is to hardcode a default value of 20 for <code>limit</code> in the request mapping template of the <code>ScanDataFunction</code>. I am using a DynamoDB resolver for this operation.  Instead, I would like to inject the parameter value because it would give me the flexibility to set different default values for different deployment environments.</p>&#xA;<p>Any help with this would be appreciated.</p>&#xA;",3846366,,,,2020-09-21 18:47:29,Passing CloudFormation parameters to AppSync Resolver,<amazon-web-services><parameters><graphql><amazon-cloudformation><aws-appsync>,1,0,0,2020-09-21 15:47:03
63998276,2,,63995688,1,,"<p>The <code>|</code> character in YAML starts a block and what you enter indented after that is all treated as text.&#xA;CloudFormation isn't going to process any of that. The solution I have generally seen is to use the <a href=""https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/intrinsic-function-reference-join.html"" rel=""nofollow noreferrer"">Join intrinsic function</a>. It ends up looking pretty bad can be difficult to maintain so I recommend using it sparingly. Below is a rough possible example:</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>Parameters:&#xA;    DefaultLimit: &#xA;        Type: Number&#xA;&#xA;Resourece:&#xA;    QueryResolver:&#xA;        Type: AWS::AppSync::Resolver&#xA;        DependsOn: AppSyncSchema&#xA;        Properties:&#xA;            ApiId: !GetAtt [AppSyncAPI, ApiId]&#xA;            TypeName: Query&#xA;            FieldName: getData&#xA;            Kind: PIPELINE&#xA;            PipelineConfig:&#xA;                Functions:&#xA;                    - !GetAtt AuthFunction.FunctionId&#xA;                    - !GetAtt ScanDataFunction.FunctionId&#xA;            RequestMappingTemplate:&#xA;              Fn::Join:&#xA;                - &quot;&quot;&#xA;                - - &quot;Line 1 of the template\n&quot;&#xA;                  - &quot;Line 2 of the template, DefaultList=&quot;&#xA;                  - Ref: DefaultLimit&#xA;                  - &quot;\nLine 3 of the template&quot;&#xA;            ResponseMappingTemplate: &quot;$util.toJson($context.result)&quot;&#xA;</code></pre>&#xA;<p><em>Untested code warning</em></p>&#xA;",376458,,,,2020-09-21 18:47:29,"",,0,0,0,2020-09-21 18:47:29
64003830,2,,64002628,0,,"<p>The statement you are constructing is <code>INSERT ... ON CONFLICT</code>, which is quite different from <code>UPDATE</code>. The ambiguity arises because it is not clear if you are speaking about the original column value or the new value supolied by the <code>INSERT</code>.</p>&#xA;<p>Qualify the column appropriately:</p>&#xA;<pre><code>SET token = array_append(customer.token, '123132')&#xA;</code></pre>&#xA;<p>The new value from the <code>INSERT</code> would be qualified with <code>excluded</code>.</p>&#xA;",6464308,,,,2020-09-22 05:57:39,"",,0,1,0,2020-09-22 05:57:39
64015025,2,,64014541,2,,<p>To access dynamic key in response use <code>variable[key]</code> notations</p>&#xA;<pre><code>// How I access the dataType key?&#xA;fetch[dataType].edges.map((item) =&gt; {&#xA;  allResults.push(item);&#xA;});&#xA;</code></pre>&#xA;,367878,,,,2020-09-22 17:39:56,"",,0,2,0,2020-09-22 17:39:56
64067845,1,,,0,1652,"<p>I have the following schema</p>&#xA;<pre><code>type League @model&#xA;  @auth(rules: [{ allow: owner }]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  faId: ID!&#xA;  logo: String&#xA;  seasons: [Season] @connection(keyName: &quot;bySeason&quot;, fields: [&quot;id&quot;])&#xA;  division: [Division] @connection(keyName: &quot;byDivision&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;type Season @model @key(name: &quot;bySeason&quot;, fields: [&quot;leagueID&quot;])&#xA;  @auth(rules: [{ allow: owner }]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  faId: ID!&#xA;  yearStart: AWSDate&#xA;  yearEnd: AWSDate&#xA;  leagueID: ID!&#xA;  league: League! @connection(fields: [&quot;leagueID&quot;])&#xA;  division: [Division] @connection(keyName: &quot;byDivision&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;type Division @model @key(name: &quot;byDivision&quot;, fields: [&quot;seasonID&quot;, &quot;leagueID&quot;, &quot;name&quot;])&#xA;  @auth(rules: [{ allow: owner }]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  faId: ID!&#xA;  leagueID: ID!&#xA;  seasonID: ID!&#xA;  league: League! @connection(fields: [&quot;leagueID&quot;])&#xA;  season: Season! @connection(fields: [&quot;seasonID&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>Which compiles perfectly well, I then do a mutation to create a league with:</p>&#xA;<p><a href=""https://i.stack.imgur.com/3q8qs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3q8qs.png"" alt=""enter image description here"" /></a> Which results in the below error</p>&#xA;<pre><code>mutation MyMutation($name: String!, $faId: ID!) {&#xA;  createLeague(input: {name: $name, faId: $faId}) {&#xA;    id&#xA;  }&#xA;}&#xA;&#xA;variables: &#xA;&#xA;{&#xA;  &quot;name&quot;: &quot;test 2&quot;,&#xA;  &quot;faId&quot;: &quot;9031785&quot;&#xA;}&#xA;</code></pre>&#xA;<h1>Error Message</h1>&#xA;<pre><code>Error: Validation error of type UnknownType: Unknown type CreateLeagueInput&#xA;Validation error of type UnknownType: Unknown type ModelLeagueConditionInput&#xA;Validation error of type FieldUndefined: Field 'createLeague' in type 'Mutation' is undefined @ 'createLeague'&#xA;</code></pre>&#xA;<p>This same mutation works with graphiQL:&#xA;<a href=""https://i.stack.imgur.com/aZhWC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/aZhWC.png"" alt=""enter image description here"" /></a></p>&#xA;<p>I have done a <code>codegen</code> and a <code>gql-compile</code></p>&#xA;<h1>Edit... with docs definition.</h1>&#xA;<p><a href=""https://i.stack.imgur.com/xD80b.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xD80b.png"" alt=""enter image description here"" /></a></p>&#xA;",240363,,240363,2020-09-25 21:21:11,2020-09-25 21:21:11,Validation error of type UnknownType: Unknown type CreateLeagueInput AWS Amplify GraphQL,<javascript><amazon-web-services><graphql><aws-amplify>,0,7,0,2020-09-25 16:18:18
64089639,2,,64034497,1,,<p>Double check if you're requesting a token from the correct Tableau Site (if you have multiple sites). Also what permissions does user have and can you share the code where you request the token?</p>&#xA;,0,user10871136,,,2020-09-27 14:38:52,"",,0,10,0,2020-09-27 14:38:52
64111490,1,64191191,,1,618,"<p>How to do same for GraphQL of AWS Amplify?</p>&#xA;<pre class=""lang-js prettyprint-override""><code>fetch('https://trusted-api.co.jp', {&#xA;  mode: 'cors'&#xA;});&#xA;</code></pre>&#xA;<p>I did not found neither the documentation how to do it nor source code which mention to cors.</p>&#xA;<h2>Reference</h2>&#xA;<p>Regular graphQL operation could be called as below:</p>&#xA;<pre><code>import AWSAmplifyAPI, { graphqlOperation as graphQL_Operation, GraphQLResult } from &quot;@aws-amplify/api&quot;;&#xA;import Observable from &quot;zen-observable&quot;;&#xA;&#xA;export default class DataBaseService {&#xA;&#xA;  public static async sendRequestAndExtractDataFromResponse(&#xA;      graphQL_RawRequest: string,&#xA;      requestVariables?: object&#xA;  ): Promise&lt;unknown&gt; {&#xA;&#xA;    const serverRawResponse: GraphQLResult | Observable&lt;unknown&gt; =&#xA;        await AWSAmplifyAPI.graphql(graphQL_Operation(graphQL_RawRequest, requestVariables));&#xA;   // ...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4818123,,,,2020-10-04 04:31:33,How to enable the CORS mode on frontend side in GraphQL/AWS Amplify?,<javascript><graphql><aws-amplify>,1,0,0,2020-09-29 01:02:54
64121828,2,,54273144,2,,"<p>Things may have moved on as AppSync now supports multiple authentication types per API; however providing an answer as to how to auth/unauth on same endpoint for prosperity.  Doesn't answer the how-to multiple endpoints question which is what led me here, but that's no longer required in OPs scenario.</p>&#xA;<p><em>Note: This answer applies to typescript - I'm not overly familiar with react but I think it will work exactly the same...</em></p>&#xA;<ul>&#xA;<li>Unauthenticated access uses AWS_IAM / i.e. CognitoIdentityPool&#xA;(configured to allow unauthenticated access)</li>&#xA;<li>Authenticated Access users AMAZON_COGNITO_USER_POOLS authentication.</li>&#xA;</ul>&#xA;<p>To switch between unauthenticated and authenticated API.graphql() calls. You need to test the current authentication status and use that to override the  authMode as in the arguments to the API.graphql() call.</p>&#xA;<p>As a prerequisite:</p>&#xA;<ul>&#xA;<li>The types in graphql must be setup to allow access via both @aws_iam and @aws_cognito_user_pools (see sample below)</li>&#xA;<li>The AppSync API must be configured to allow both authentication types (The code below assumes the API is configured for AWS_IAM by default, but allowed CognitoUserPools as an additional authentication type). This can be configured in console, or via cloudFormation.</li>&#xA;</ul>&#xA;<p>Sample code for API call</p>&#xA;<pre><code>      let authMode;&#xA;      try {&#xA;        authMode = (await Auth.currentUserPoolUser()) ? GRAPHQL_AUTH_MODE.AMAZON_COGNITO_USER_POOLS : undefined;&#xA;      } catch (err) { }&#xA;&#xA;      const result = await API.graphql({&#xA;        ...graphqlOperation(statement, gqlAPIServiceArguments),&#xA;        authMode&#xA;      });&#xA;</code></pre>&#xA;<p>Example grqphql type</p>&#xA;<pre><code>type Profile @aws_iam @aws_cognito_user_pools {&#xA;  username: ID!&#xA;  stuff: String!&#xA;}&#xA;</code></pre>&#xA;<p>My Amplify Configuration</p>&#xA;<pre><code>{&#xA;  aws_project_region: 'VALUE_HERE',&#xA;  aws_appsync_graphqlEndpoint: 'https://VALUE_HERE/graphql',&#xA;  aws_appsync_region: 'VALUE_HERE',&#xA;  aws_appsync_authenticationType: 'AWS_IAM',&#xA;  aws_appsync_apiKey: 'XXXXXXXXXXXXXXXXXXXXXXXXXX', // This field seems to be required, but the value is ignored.&#xA;  Auth: {&#xA;    identityPoolId: 'VALUE_HERE',&#xA;    region: 'VALUE_HERE',&#xA;    userPoolId: 'VALUE_HERE',&#xA;    userPoolWebClientId: 'VALUE_HERE',&#xA;    oauth: {&#xA;      domain: 'VALUE_HERE',&#xA;      redirectSignIn: 'VALUE_HERE',&#xA;      redirectSignOut: 'VALUE_HERE',&#xA;      scope: ['email', 'openid', 'profile', 'aws.cognito.signin.user.admin'],&#xA;      responseType: 'code'&#xA;    }&#xA;  }&#xA;};&#xA;&#xA;</code></pre>&#xA;",9441353,,9441353,2020-09-29 16:56:54,2020-09-29 16:56:54,"",,0,2,0,2020-09-29 14:34:05
64140993,1,,,6,4992,"<p>So I think this issue comes from me not quite understanding the relationship between AWS cognito user pools and the auth rules in a graphql schema.</p>&#xA;<p>When I run the code below, I get the message &quot;Not Authorized to access createUser on type User&quot;.</p>&#xA;<pre><code>import React from 'react';&#xA;import { Auth, API, graphqlOperation } from 'aws-amplify';&#xA;import { withAuthenticator } from &quot;@aws-amplify/ui-react&quot;;&#xA;&#xA;// This was created automatically from the schema by aws amplify&#xA;const CreateUser = /* GraphQL */ `&#xA;  mutation CreateUser(&#xA;    $input: CreateUserInput!&#xA;    $condition: ModelUserConditionInput&#xA;  ) {&#xA;    createUser(input: $input, condition: $condition) {&#xA;      id&#xA;      username&#xA;      conversations {&#xA;        items {&#xA;          id&#xA;          convoLinkUserId&#xA;          convoLinkConversationId&#xA;          createdAt&#xA;          updatedAt&#xA;        }&#xA;        nextToken&#xA;      }&#xA;      messages {&#xA;        items {&#xA;          id&#xA;          authorId&#xA;          content&#xA;          messageConversationId&#xA;          createdAt&#xA;          updatedAt&#xA;        }&#xA;        nextToken&#xA;      }&#xA;      createdAt&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;async function signIn(username, password) {&#xA;  try {&#xA;      const user = await Auth.signIn(username, password);&#xA;      const { attributes } = user;&#xA;      console.log(&quot;User&quot;, attributes)&#xA;      return user&#xA;  } catch (error) {&#xA;      console.log('error signing in', error);&#xA;  }&#xA;}&#xA;&#xA;async function createUser(id) {&#xA;  // creating a new user in the dynamodb table&#xA;  try {&#xA;    const newUser = {input: {username: id, id}}&#xA;    console.log(&quot;Creating new user&quot;, newUser)&#xA;    await API.graphql(graphqlOperation(CreateUser, newUser))&#xA;  } catch (err) {&#xA;    console.log('Error creating user! :', err)&#xA;  }&#xA;}&#xA;&#xA;async function testApiCalls() {&#xA;  await signIn(&quot;test@test.com&quot;, &quot;notarealpassword123&quot;) // runs successfully&#xA;  await createUser(&quot;test@test.com&quot;) // where the error happens&#xA;}&#xA;&#xA;function App() {&#xA;  testApiCalls()&#xA;&#xA;  return (&#xA;    &lt;div className=&quot;App&quot;&gt;&#xA;      Hello&#xA;    &lt;/div&gt;&#xA;  );&#xA;}&#xA;&#xA;export default withAuthenticator(App);&#xA;</code></pre>&#xA;<p>Other relevant code would be my index.js:</p>&#xA;<pre><code>import React from 'react';&#xA;import ReactDOM from 'react-dom';&#xA;import './index.css';&#xA;import App from './App';&#xA;import Amplify, { Auth } from 'aws-amplify';&#xA;import AWSAppSyncClient from 'aws-appsync'&#xA;import aws_config from './aws-exports';&#xA;import { ApolloProvider } from '@apollo/client';&#xA;&#xA;Amplify.configure(aws_config);&#xA;aws_config.graphql_headers = async () =&gt; { const currentSession = await Auth.currentSession(); return { Authorization: currentSession.getIdToken().getJwtToken() }; };&#xA;&#xA;&#xA;const client = new AWSAppSyncClient({&#xA;  url: aws_config.aws_appsync_graphqlEndpoint,&#xA;  region: aws_config.aws_appsync_region,&#xA;  auth: {&#xA;    type: aws_config.aws_appsync_authenticationType, // AMAZON_COGNITO_USER_POOLS&#xA;    jwtToken: async () =&gt; (await Auth.currentSession()).idToken.jwtToken&#xA;  }&#xA;});&#xA;&#xA;const WithProvider = () =&gt; (&#xA;  &lt;ApolloProvider client={client}&gt;&#xA;      &lt;App/&gt;&#xA;  &lt;/ApolloProvider&gt;&#xA;)&#xA;&#xA;ReactDOM.render(&#xA;  &lt;WithProvider/&gt;,&#xA;  document.getElementById('root')&#xA;);&#xA;</code></pre>&#xA;<p>And the schema definition for the User object:</p>&#xA;<pre><code>type User &#xA;  @model &#xA;  @auth(rules: [{ allow: owner, ownerField: &quot;id&quot;, queries: null }]) {&#xA;  id: ID!&#xA;  username: String!&#xA;  conversations: [ConvoLink] @connection(name: &quot;UserLinks&quot;)&#xA;  messages: [Message] @connection(name: &quot;UserMessages&quot;)&#xA;    createdAt: String&#xA;    updatedAt: String&#xA;}&#xA;</code></pre>&#xA;<p>Ultimately, I'm trying to make something similar to this <a href=""https://github.com/amazon-archives/aws-appsync-chat"" rel=""noreferrer"">example</a>. I've tried reading the aws amplify docs but haven't been able to properly understand how the graphql operations are effected by the authentication.</p>&#xA;",14343051,,,,2022-06-01 10:02:48,'Unauthorized' error when using AWS amplify with grahql to create a new user,<reactjs><amazon-web-services><graphql><aws-amplify>,3,0,0,2020-09-30 15:34:59
64146383,1,,,1,2636,"<p>I am currently working with amplify and GraphQL instance which is fairly simple. I then realised that I need to use things like <code>sum()</code> `average() etc as I am building a football website which uses a lot of stats and writing custom resolvers for all of this will be too much work.</p>&#xA;<p>So I have created a Aurora MySQL database and am trying to add it. It is hosted in Region <code>eu-west-2</code> but it will not come up when trying to add it:</p>&#xA;<pre><code>hutber@hutber:/var/www/unsal.co.uk$ amplify api add-graphql-datasource&#xA;Using datasource: Aurora Serverless, provided by: awscloudformation&#xA;? Provide the region in which your cluster is located: &#xA;  us-east-1 &#xA;  us-east-2 &#xA;  us-west-2 &#xA;  ap-northeast-1 &#xA;❯ eu-west-1 &#xA;</code></pre>&#xA;<p>I believe by adding MySQL I will be able to then query this MySQL instance via my GQL service.</p>&#xA;",240363,,,,2020-10-02 07:33:33,How to add a AWS RDS database to amplify,<mysql><amazon-web-services><graphql><amazon-rds><aws-amplify>,1,0,0,2020-09-30 22:03:41
64183650,2,,64159896,0,,"<p>The context in the resolve arguement for the owner field has a &quot;Source&quot; property, this holds information on the droid type. I was able to get the information I needed from there</p>&#xA;",1446086,,,,2020-10-03 11:22:04,"",,0,0,0,2020-10-03 11:22:04
64190748,2,,61666459,0,,"<p>I realize this issue is 4 months old. Hopefully, you've resolved it by now.</p>&#xA;<p>Check the version of Amplify CLI you are using. This error appeared with 4.21.4, and rolling back to 4.21.3 fixed it. The error appears to have returned in 4.29.4, and rolling back to 4.29.0 resolved it for me.</p>&#xA;<p>For reference: <a href=""https://github.com/aws-amplify/amplify-cli/issues/4612"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/4612</a></p>&#xA;",6322280,,,,2020-10-04 02:53:16,"",,0,2,0,2020-10-04 02:53:16
64198953,2,,61610133,1,,"<p>You need to add some initial data for this field. If you look at console, probably you can see this like:</p>&#xA;<blockquote>&#xA;<ul>&#xA;<li>You want to optionally use your field  and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to&#xA;the GraphQL schema. A quick fix is to add at least one entry with that&#xA;field (&quot;dummy content&quot;)</li>&#xA;</ul>&#xA;</blockquote>&#xA;",2145063,,,,2020-10-04 19:27:02,"",,0,0,0,2020-10-04 19:27:02
64204199,2,,63993989,2,,<p>I am not sure if we are facing the same issue. Basically I wanted to access the GQL schema in my client react app which was in a different repository than the cdk app in which the infrastructure is defined.</p>&#xA;<p>I ended up using the aws-cli to extract the appsync schema using the following command:</p>&#xA;<pre><code>aws appsync get-introspection-schema --api-id [API-ID] --format SDL --no-include-directives outfile=[OUTFILE]&#xA;</code></pre>&#xA;,2118797,,1839439,2020-10-05 07:37:57,2020-10-05 07:37:57,"",,0,1,0,2020-10-05 07:32:06
64205541,1,,,3,5092,"<p>I have a graphql server and a <code>role</code> table, and I would like to save multiple roles within one mutation.</p>&#xA;<p>I searched a lot but found nothing.</p>&#xA;<p>How can I do something like:</p>&#xA;<pre><code>mutation {&#xA;  addRoles (roles: [&#xA;    {&#xA;      name: &quot;role1&quot;,&#xA;      description: &quot;role 1&quot;&#xA;    },&#xA;    {&#xA;      name: &quot;role2&quot;,&#xA;      description: &quot;role 2&quot;&#xA;    },&#xA;    ...&#xA;  ])&#xA;}&#xA;</code></pre>&#xA;<p>In other words, how to implement <code>addRoles</code> and <code>updateRoles</code> resolver?</p>&#xA;<p>Is a for loop the only option?  Is it possible to save all roles in one DB call?</p>&#xA;<p>The <code>role</code> model:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>@Entity(&quot;role&quot;)&#xA;@ObjectType()&#xA;export class Role extends BaseEntity {&#xA;  @Field((type) =&gt; Number)&#xA;  @PrimaryGeneratedColumn()&#xA;  readonly id!: number;&#xA;&#xA;  @Field()&#xA;  @Column({ length: 64 })&#xA;  name!: string;&#xA;&#xA;  @Field({ nullable: true })&#xA;  @Column({ length: 512, nullable: true })&#xA;  description!: string;&#xA;}&#xA;</code></pre>&#xA;<p>And add and update resolver:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>@Resolver((of) =&gt; Role)&#xA;export class RoleResolver {&#xA;&#xA;  @Mutation((returns) =&gt; Boolean)&#xA;  async addRole(&#xA;    @Arg(&quot;role&quot;) role: AddRoleInput&#xA;  ): Promise&lt;Boolean&gt; {&#xA;    const roleExists = await Role.count({ name: role.name });&#xA;    if (roleExists &gt; 0)&#xA;      throw new Error(`Role with name &quot;${role.name}&quot; already exists!`);&#xA;&#xA;    const newRole = Role.create(role);&#xA;    await newRole.save();&#xA;    return true;&#xA;  }&#xA;&#xA;  @Mutation((returns) =&gt; Boolean)&#xA;  async updateRole(&#xA;    @Arg(&quot;role&quot;) role: UpdateRoleInput&#xA;  ): Promise&lt;Boolean&gt; {&#xA;    const oldRole = await Role.findOneOrFail(role.id);&#xA;    Object.assign(oldRole, role);&#xA;    await oldRole.save();&#xA;    return true;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And <code>AddRoleInput</code> and <code>UpdateRoleInput</code></p>&#xA;<pre class=""lang-js prettyprint-override""><code>&#xA;@InputType({ description: &quot;New Role Argument&quot; })&#xA;export class AddRoleInput implements Partial&lt;Role&gt; {&#xA;  @Field()&#xA;  name!: string;&#xA;&#xA;  @Field({ nullable: true })&#xA;  description?: string;&#xA;}&#xA;&#xA;@InputType({ description: &quot;Update Role Argument&quot; })&#xA;export class UpdateRoleInput implements Partial&lt;Role&gt; {&#xA;  @Field()&#xA;  id!: number;&#xA;&#xA;  @Field()&#xA;  name!: string;&#xA;&#xA;  @Field({ nullable: true })&#xA;  description?: string;&#xA;}&#xA;</code></pre>&#xA;",4971866,,,,2020-10-09 02:33:38,Typegraphql+TypeORM: save / update an array of entities,<graphql><typeorm><typegraphql>,2,0,0,2020-10-05 09:02:07
64228450,2,,64225682,0,,"<p>You can't do this with GraphQL unfortunately. All queries are sent to the <code>/v1/graphql</code> endpoint on Hasura, and the only way to distinguish the operations is by parsing the <code>query</code> parameter of the HTTP request and grabbing the operation name.</p>&#xA;<p>If Google Cloud allows you to query properties in logs of HTTP requests, you can set up filters on the body, something like:</p>&#xA;<p>&quot;Where <code>[request params].query</code> includes 'MyQueryName'&quot;</p>&#xA;<p>Otherwise your two options are:</p>&#xA;<ol>&#xA;<li>Use Hasura Cloud (<a href=""https://hasura.io/cloud"" rel=""nofollow noreferrer"">https://hasura.io/cloud</a>), which gives you a count of all operations and detailed metrics (response time, variables, etc) on your console dashboard</li>&#xA;<li>Write and deploy a custom middleware server or a script for a reverse proxy that handles this</li>&#xA;</ol>&#xA;",13485494,,,,2020-10-06 14:58:51,"",,0,1,0,2020-10-06 14:58:51
64233033,2,,64225660,0,,"<p>I'm not so sure about your design, but then I don't know the total spec.&#xA;You're going to have to use some code alongside your database design. To start with, a web page table, I'm also presuming your website has more than one page with posts.</p>&#xA;<p>WEBPAGE Table: WebPageID (PK), WebPageDesc</p>&#xA;<p>Then, we add a table for posts, for each webpage.&#xA;This assigns an ID to each post.</p>&#xA;<p>POST Table: PostID (PK), WebPageID (FK)</p>&#xA;<p>If you only have one page, then you obvs don't need the WEBPAGE table and you can alter the POST table to; just POST Table: PostID (PK)</p>&#xA;<p>Then, as you've worked out, a table to store all video posts, and another for text.</p>&#xA;<p>VIDEOPOSTS Table: VideoPostID (PK), VideoDesc, VideoURL</p>&#xA;<p>TEXTPOSTS Table: TextPostID (PK), TextDesc</p>&#xA;<p>Now you just need a couple of tables to link the different types of posts back to the webpage. Composite primary key in both, saves the need for an ID column.</p>&#xA;<p>POSTSVIDEOPOSTS Table: PostID (PK) (FK to post table), VideoPostID (PK) (FK to videoposts table)</p>&#xA;<p>POSTSTEXTPOSTS Table: PostID (PK) (FK to post table), TextPostID (FK) (FK to textposts table)</p>&#xA;<p>Further thinking:</p>&#xA;<p>You can add a deleted flag next to each post, to decided whether or not they should be included in the web page output or not, depending whether a user can delete posts or not.</p>&#xA;<p>With the above design, it's going to be difficult to sort the posts into the correct order, as you are retrieving them from two separate tables. This design is normalised tho, I think.</p>&#xA;<p>I'm just not sure it's 100% correct. I'd need to see more of the spec to be able to design it better. Perhaps if there is a datetime the post was made, that would make sorting easier?</p>&#xA;<p>But then I'm not 100% confident the original design in your original post using a Type column in the post table is correct either...</p>&#xA;<p>Does the design need to be normalised?</p>&#xA;<p>Happy for the above to be criticised by others, I'm pretty sure it needs further work!</p>&#xA;",14403341,,,,2020-10-06 20:01:14,"",,0,0,0,2020-10-06 20:01:14
64234829,1,,,8,953,"<p>I would like to have in the League tables all of the seasons and divisions as you can see with <code>data &gt; seasons</code>. I have set it up as I believe would work using @connection.</p>&#xA;<p>So the question is, how would I have to change my division schema so that divisions are included in the <code>League</code>.</p>&#xA;<p>I have spent a good time reading over <a href=""https://docs.amplify.aws/cli/graphql-transformer/directives#has-one"" rel=""nofollow noreferrer"">@connections</a> &amp; <a href=""https://docs.amplify.aws/cli/graphql-transformer/directives#key"" rel=""nofollow noreferrer"">@key</a> and understand that when using the key a hash is created with the <code>ID</code> that I have given them. But I do not understand enough having read the connections documentation multiple times as to why this wouldn't work.</p>&#xA;<p>I would love to understand this better, so i am giving all I can to try to develop an understanding!</p>&#xA;<p>n.b I believe it is worth mentioning also, that each time I change my schema and the <code>amplify mock</code> rebuilds the hash keys, they get added. I wonder if this has some impact? Should I be cleaning the SQLite completely with each schema change when keys are involved?&#xA;<a href=""https://i.stack.imgur.com/8G1dM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8G1dM.png"" alt=""enter image description here"" /></a></p>&#xA;<h1>League Schema</h1>&#xA;<pre><code>type League @model&#xA;{&#xA;  id: ID!&#xA;  name: String!&#xA;  faId: ID!&#xA;  logo: String&#xA;  seasons: [Season] @connection(keyName: &quot;bySeason&quot;, fields: [&quot;id&quot;])&#xA;  division: [Division] @connection(keyName: &quot;byDivision&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;</code></pre>&#xA;<h1>Seasons Schama</h1>&#xA;<pre><code>type Season @model @key(name: &quot;bySeason&quot;, fields: [&quot;leagueID&quot;])&#xA;{&#xA;  id: ID!&#xA;  name: String!&#xA;  faId: ID!&#xA;  yearStart: AWSDate&#xA;  yearEnd: AWSDate&#xA;  leagueID: ID!&#xA;  league: League! @connection(fields: [&quot;leagueID&quot;])&#xA;  division: [Division] @connection(keyName: &quot;byDivision&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;</code></pre>&#xA;<h1>Division Schema</h1>&#xA;<pre><code>type Division @model&#xA;@key(name: &quot;byDivisionFromSeason&quot;, fields: [&quot;leagueID&quot; &quot;name&quot;])&#xA;@key(name: &quot;byDivision&quot;, fields: [&quot;seasonID&quot;, &quot;leagueID&quot;])&#xA;{&#xA;  id: ID!&#xA;  name: String!&#xA;  faId: ID!&#xA;  divisionSeasonFaId: String&#xA;  leagueID: ID!&#xA;  seasonID: ID!&#xA;  league: League! @connection(fields: [&quot;leagueID&quot;])&#xA;  season: Season! @connection(fields: [&quot;seasonID&quot;])&#xA;  teams: [TeamConnection] @connection(keyName: &quot;byTeamDivision&quot;, fields: [&quot;id&quot;])&#xA;  games: [Game] @connection(keyName: &quot;byGameForDivision&quot;, fields: [&quot;id&quot;])&#xA;  ageInput: String!&#xA;  level: Int!&#xA;}&#xA;</code></pre>&#xA;<h1>Queries</h1>&#xA;<pre><code>  listLeagues {&#xA;    items {&#xA;      name&#xA;      division {&#xA;        items {&#xA;          name&#xA;        }&#xA;      }&#xA;      seasons {&#xA;        items {&#xA;          name&#xA;          division {&#xA;            items {&#xA;              name&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<h1>Data</h1>&#xA;<p>I have shown here that the structure is correct as the <code>Seasons</code> included in the <code>League</code> have the <code>Divisions</code> as expected</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;listLeagues&quot;: {&#xA;      &quot;items&quot;: [&#xA;        {&#xA;          &quot;name&quot;: &quot;Southern Amateur League&quot;,&#xA;          &quot;division&quot;: {&#xA;            &quot;items&quot;: []&#xA;          },&#xA;          &quot;seasons&quot;: {&#xA;            &quot;items&quot;: [&#xA;              {&#xA;                &quot;name&quot;: &quot;2020-21&quot;,&#xA;                &quot;division&quot;: {&#xA;                  &quot;items&quot;: [&#xA;                    {&#xA;                      &quot;name&quot;: &quot;Junior Section Division 5B South&quot;&#xA;                    },&#xA;                    {&#xA;                      &quot;name&quot;: &quot;Junior Section Division 4 South&quot;&#xA;                    },&#xA;                    {&#xA;                      &quot;name&quot;: &quot;Intermediate Division 3&quot;&#xA;                    },&#xA;                  ]&#xA;                }&#xA;              },&#xA;              {&#xA;                &quot;name&quot;: &quot;2019-20&quot;,&#xA;                &quot;division&quot;: {&#xA;                  &quot;items&quot;: []&#xA;                }&#xA;              },&#xA;            ]&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<h1>Edit</h1>&#xA;<p>Since reducing just the keys on division to <code>seasonID</code> and <code>leagueID</code> on each key, when clearing the data it appears to throw an unusual error. I had believed that return null on a @connection was perfectly valid?</p>&#xA;<p><a href=""https://i.stack.imgur.com/AL1eu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AL1eu.png"" alt=""enter image description here"" /></a></p>&#xA;",240363,,240363,2020-10-27 23:07:16,2020-10-27 23:07:16,GraphQL AWS AMplify @connection not bringing in connected data,<javascript><amazon-web-services><graphql><amazon-dynamodb><aws-amplify>,2,0,0,2020-10-06 22:50:17
64237055,2,,64205541,0,,"<p>The gist of what you'll need to do is define an <code>addRoles</code> field on the Mutation type in your schema.  For example</p>&#xA;<pre><code>export const RoleSchema = gql`&#xA;  type Role {&#xA;    id: Int&#xA;    # Other fields omitted for brevity&#xA;  }&#xA;&#xA;  extend type Mutation {&#xA;    # This should already exist&#xA;    addRole(role: AddRoleInput!): Role!&#xA;&#xA;    # To accept multiple Input Types, use the List construct&#xA;    addRoles(roles: [AddRoleInput!]!): [Role!]&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>Then define <code>addRoles</code> in your resolver and call the appropriate API's.</p>&#xA;",1342297,,,,2020-10-07 04:08:27,"",,0,1,0,2020-10-07 04:08:27
64258827,2,,64257494,0,,"<p>It is not advised to use service account authentication from a web app. But if you would need to run this app locally for testing purposes, I would say you could use <code>google-auth-library</code>. More info and code examples can be found <a href=""https://cloud.google.com/nodejs/getting-started/authenticate-users"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>You would also need the &quot;Cloud Functions Invoker&quot; role for the service account you are using.</p>&#xA;<p>Having said this, I would advise you to offload your authentication to a dedicated authentication provider like Firebase authentication, Auth0, or Okta.</p>&#xA;",7950592,,,,2020-10-08 08:38:20,"",,0,0,0,2020-10-08 08:38:20
64261661,1,64272712,,3,659,"<p>Using Amplify, GraphQL, AppSync, Cognito, DynamoDB</p>&#xA;<p>Having the following model:</p>&#xA;<pre><code>type Post&#xA;@model&#xA;{&#xA;  id: ID!&#xA;  content: String!&#xA;  author: String!&#xA;}&#xA;</code></pre>&#xA;<p>I want my rules to enable the following case:</p>&#xA;<ol>&#xA;<li>Only Admin users can create, update and delete Post</li>&#xA;<li>Some Posts where only premium users allow to read</li>&#xA;<li>Some Posts where all logged in users allow to read</li>&#xA;<li>Some Posts where all users (also unauthenticated) allow to read</li>&#xA;</ol>&#xA;<p>What is the best way to implement it using the mentioned tools?</p>&#xA;<p>Thanks</p>&#xA;",6284842,,6284842,2020-10-09 14:59:09,2020-10-11 07:50:59,AWS Amplify with GraphQL - Defining authentication rules by different types of users,<graphql><amazon-dynamodb><amazon-cognito><aws-amplify><aws-appsync>,2,2,0,2020-10-08 11:33:52
64272712,2,,64261661,2,,"<p>From your question, it is not clear how you define &quot;Some Posts&quot; and how you would differentiate one from another. If I was designing this, I would have at least one more field in my <code>Post</code> type to manage the access level (For example: 3 (Admin) &gt; 2 (Premium) &gt; 1 (Logged-in) &gt; 0 (Unregistered)), like so;</p>&#xA;<pre><code>type Post&#xA;@model&#xA;{&#xA;  id: ID!&#xA;  content: String!&#xA;  author: String!&#xA;  accessLevel: Int!&#xA;}&#xA;</code></pre>&#xA;<p>To manage this on user level, I think your best bet is to manage it using Cognito groups (like mentioned in the <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/security.html#amazon-cognito-user-pools-authorization"" rel=""nofollow noreferrer"">official documentation</a>) and assign appropriate permission for each group.</p>&#xA;<p><strong>Things you would need in Cognito:</strong></p>&#xA;<ol>&#xA;<li><p>A user <strong>pool</strong> which will contain all of your registered users.</p>&#xA;</li>&#xA;<li><p>A user <strong>group</strong> for premium members.</p>&#xA;</li>&#xA;<li><p>A user <strong>group</strong> for your admins.</p>&#xA;</li>&#xA;</ol>&#xA;<p><strong>Things you would need in your AppSync:</strong></p>&#xA;<ol>&#xA;<li><p>For Admin users to create, update and delete Post:</p>&#xA;<pre><code>type Mutation {&#xA;   createPost(id:ID!, content:String!, author:String!):Post!&#xA;   @aws_auth(cognito_groups: [&quot;Admin&quot;])&#xA;   updatePost(id:ID!, content:String!, author:String!):Post!&#xA;   @aws_auth(cognito_groups: [&quot;Admin&quot;])&#xA;   deletePost(id:ID!, content:String!, author:String!):Post!&#xA;   @aws_auth(cognito_groups: [&quot;Admin&quot;])&#xA;}&#xA;</code></pre>&#xA;</li>&#xA;<li><p>For some posts only visible to <strong>premium</strong>, <strong>logged-in</strong> or <strong>unregistered</strong> users to read:</p>&#xA;<pre><code>type Query {&#xA;   getPost(id:ID!):Post!&#xA;   @aws_api_key @aws_cognito_user_pools&#xA;}&#xA;</code></pre>&#xA;<p>Furthermore, you can use the <code>accessLevel</code> in your resolver to filter out the result based on which post you want to be visible to premium, logged-in or unregistered users.</p>&#xA;</li>&#xA;</ol>&#xA;",1819065,,,,2020-10-09 01:22:20,"",,0,1,0,2020-10-09 01:22:20
64272800,2,,64213431,0,,"<p>You can set a graphene request's user in the same way as setting it for Django, by using RequestFactory.  As per my answer in <a href=""https://stackoverflow.com/questions/45493295/testing-graphene-django/47762174#47762174"">Testing Graphene-Django</a> the pattern is</p>&#xA;<pre><code>from django.test import RequestFactory, TestCase&#xA;from graphene.test import Client&#xA;&#xA;&#xA;user = ... (fetch your test superuser)&#xA;api_query = &quot;&quot;&quot;&#xA;        query {&#xA;            gardens {&#xA;                id&#xA;                name&#xA;                owner {&#xA;                    id&#xA;                    email&#xA;                }&#xA;            }&#xA;        }&#xA;        &quot;&quot;&quot;&#xA;request_factory = RequestFactory()&#xA;context_value = request_factory.get('/api/')  # or use reverse() on your API endpoint&#xA;context_value.user = user&#xA;client = Client(schema)&#xA;executed = client.execute(api_query, context_value=context_value)&#xA;output_data = executed.get('data')&#xA;</code></pre>&#xA;",178800,,,,2020-10-09 01:37:50,"",,0,0,0,2020-10-09 01:37:50
64272937,2,,64205541,4,,"<p>I managed to find an answer by trial&amp;error. I'll post it here in case someone had same issue:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>@Resolver((of) =&gt; Role)&#xA;export class RoleResolver {&#xA;&#xA;  @Mutation((returns) =&gt; Boolean)&#xA;  async addRoles(&#xA;    @Arg(&quot;roles&quot;, type =&gt; [AddRoleInput]) roles: AddRoleInput[]&#xA;  ): Promise&lt;Boolean&gt; {&#xA;&#xA;    // also checks at front&#xA;    const roleExists = await Role.count({&#xA;      name: In(roles.map((role) =&gt; role.name)),&#xA;    });&#xA;    if (roleExists &gt; 0)&#xA;      throw new Error(`Role name conflict!`);&#xA; &#xA;    const newRoles = []&#xA;    for (let i=0, i &lt; roles.length, i++) {&#xA;        const newRole = Role.create(roles[i]);&#xA;        newRoles.push(newRole);&#xA;    }&#xA;&#xA;    // this is the solution&#xA;    // turns out an entity class can be used to save instances&#xA;    // failed to found this in the docs though&#xA;    await Role.save(newRoles);&#xA;&#xA;    return true;&#xA;  }&#xA;...&#xA;}&#xA;</code></pre>&#xA;<p>I'll keep the bounty open in case there're better answers.</p>&#xA;",4971866,,4971866,2020-10-09 02:33:38,2020-10-09 02:33:38,"",,0,0,0,2020-10-09 02:01:31
64274369,1,,,0,13,"<ol>&#xA;<li><p><a href=""https://i.stack.imgur.com/fJV1u.png"" rel=""nofollow noreferrer"">enter image description here</a><br />&#xA;Query(&#xA;options: QueryOptions(documentNode: gql(&#xA;r&quot;&quot;&quot;&#xA;query getAllLookups{&#xA;getAllLookups{&#xA;nodes{&#xA;_id&#xA;name&#xA;}&#xA;totalCount    } }&#xA;&quot;&quot;&quot; ),pollInterval: 1),&#xA;builder: (QueryResult result, { VoidCallback refetch, FetchMore fetchMore }){&#xA;return Center(child: result.hasException ? Text(result.exception.toString())&#xA;:Text(&quot;comoplete&quot;));</p>&#xA;<pre><code>        return Center(child: Text(&quot;getting&quot;));&#xA;      }&#xA;&#xA;  ),**strong text**&#xA;</code></pre>&#xA;</li>&#xA;</ol>&#xA;",14407165,,,,2020-10-09 05:24:49,Why undefine location in Flutter coonection with GraphQL?,<flutter><graphql><flutter-layout><flutter-dependencies>,0,2,0,2020-10-09 05:24:49
64281594,1,71272023,,9,1058,<p>By default AWS Amplify transformers creating tables per each graphql type.</p>&#xA;<p>But according DynamoDB documentation it's best practice to</p>&#xA;<ul>&#xA;<li>Keep tables few as possible</li>&#xA;<li>Keep often queried together entries within a same table</li>&#xA;</ul>&#xA;<p>I have an impression Amplify way of doing things stays in contradiction with the statement above.</p>&#xA;<p>I am new to both NoSQL and Amplify&#xA;Can someone suggest ways to address those issues?</p>&#xA;,11775519,,,,2022-02-25 21:44:48,Single table db architecture with AWS Amplify,<amazon-web-services><graphql><nosql><amazon-dynamodb><aws-amplify>,1,3,0,2020-10-09 14:01:05
64287310,1,64287675,,1,334,"<p>I am trying to add a computed field to my graphql table &quot;user&quot; in schema &quot;abc&quot; using the hasura API but receiving the following error :</p>&#xA;<pre><code>Saving computed field failed&#xA;in table &quot;abc.user&quot;: in computed field &quot;full_name&quot;: the computed field &quot;full_name&quot; &#xA;cannot be added to table &quot;abc.user&quot; because the function &quot;abc.fullname&quot; is &#xA;of type VOLATILE; cannot be added as a computed field&#xA;</code></pre>&#xA;<p>The function is added correctly :</p>&#xA;<pre><code>    CREATE OR REPLACE FUNCTION abc.fullname(userrow abc.user)&#xA;    RETURNS TEXT AS $$&#xA;BEGIN&#xA;    SELECT userrow.first_name || ' ' || userrow.last_name;&#xA;END;&#xA;$$ LANGUAGE plpgsql;&#xA;</code></pre>&#xA;<p>I am able to select the function &quot;fullname&quot; from the dropdown but getting an error on adding computed field. Any guidance is appreciated. Thank you.</p>&#xA;<p><a href=""https://i.stack.imgur.com/n8Lj4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/n8Lj4.png"" alt=""enter image description here"" /></a></p>&#xA;",11402025,,11402025,2020-10-09 21:17:03,2020-10-09 21:42:31,GraphQL : Error while adding computed fields,<postgresql><graphql><psql><hasura><computed-field>,1,0,0,2020-10-09 21:05:37
64288754,1,64321501,,1,670,"<p>I am trying to add a computed field to my graphql table &quot;user&quot; in schema &quot;abc&quot; using the hasura API but receiving the following error :</p>&#xA;<pre><code>**Saving computed field failed**&#xA;in table &quot;abc.user&quot;: in computed field &quot;allaccounts&quot;: function &quot;abc.get_accounts&quot; &#xA;is overloaded. Overloaded functions are not supported&#xA;</code></pre>&#xA;<p>The function is added correctly :</p>&#xA;<pre><code>  CREATE OR REPLACE FUNCTION abc.get_accounts(id bigint)&#xA;    RETURNS VARCHAR immutable AS $$&#xA;DECLARE&#xA;    value VARCHAR;&#xA;BEGIN&#xA;    SELECT array_to_string(ARRAY_AGG( name ORDER BY name ASC )::varchar[], ',', '')&#xA;           into value&#xA;    FROM abc.account&#xA;             INNER JOIN abc.user_account ON (account.id=user_account.account_id)&#xA;    where user_account.user_id = id group by user_id;&#xA;    return value;&#xA;END;&#xA;$$ LANGUAGE plpgsql;&#xA;</code></pre>&#xA;<p>id field is present in user table.</p>&#xA;<p>I am able to select the function &quot;get_accounts&quot; from the dropdown but getting an error on adding computed field. Any guidance is appreciated. Thank you.</p>&#xA;",11402025,,,,2020-10-12 16:14:12,GraphQL : OverLoaded function error when adding a computed field,<postgresql><graphql><psql><hasura><computed-field>,2,0,0,2020-10-10 00:13:01
64292619,1,64293737,,0,513,"<p>I am new in the <strong>AWS</strong> and need advice. I have a <code>GraphQL</code> schema described in <code>AppSync</code>. The scheme is simple, it has only one <code>Query</code> called <code>getEmployees</code>. As a Resolver to this query, I use the <code>AWS Lambda</code> function in Python. This AWS Lambda function works without any problem. There are no errors in the logs. When I make a request, I always get empty nulls. What could be the problem? What did I miss?</p>&#xA;<p><strong>GraphQL Schema in AppSync:</strong></p>&#xA;<pre><code>type Employees {&#xA;    employeeId: String!&#xA;    employeeFirstName: String&#xA;    employeeLastName: String&#xA;}&#xA;&#xA;type EmployeesPayload {&#xA;    pagingState: String&#xA;    employees: [Employees]&#xA;}&#xA;&#xA;type Query {&#xA;    getEmployees(organizationId: String!, fetchSize: Int!, pagingState: String): EmployeesPayload&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;}&#xA;</code></pre>&#xA;<p><strong>The AWS Lambda function in Python:</strong></p>&#xA;<pre><code>def lambda_handler(event, context):&#xA;    organization_id = event['arguments']['organizationId']&#xA;    fetch_size = event['arguments']['fetchSize']&#xA;    paging_state = event['arguments']['pagingState']&#xA;&#xA;    # Business logic&#xA;&#xA;    response = json.dumps(&#xA;        {&#xA;            &quot;pagingState&quot;: &quot;c76f05f9-337d-44dc-b131-c1dfee3ceefb&quot;,&#xA;            &quot;employees&quot;: [&#xA;                {&#xA;                    &quot;employeeId&quot;: &quot;bd811630-0d42-49cd-8d63-7679d9eb96bb&quot;,&#xA;                    &quot;employeeFirstName&quot;: &quot;James&quot;,&#xA;                    &quot;employeeLastName&quot;: &quot;Bond&quot;&#xA;                }&#xA;            ]&#xA;        },&#xA;        indent=4,&#xA;        sort_keys=True,&#xA;        ensure_ascii=False,&#xA;        default=utils.json_serializer&#xA;    )&#xA;&#xA;    return response&#xA;</code></pre>&#xA;<p><strong>I make such a query:</strong></p>&#xA;<pre><code>query MyQuery {&#xA;  getEmployees(organizationId: &quot;5d354323-8b47-447e-8bc7-67dae57248b0&quot;, fetchSize: 5, pagingState: null) {&#xA;    pagingState&#xA;    employees {&#xA;      employeeId&#xA;      employeeFirstName&#xA;      employeeLastName&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><strong>Response:</strong></p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;getEmployees&quot;: {&#xA;      &quot;pagingState&quot;: null,&#xA;      &quot;employees&quot;: null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><strong>P.S.</strong> In the AppSync setting, I disabled the request and response mapping template.</p>&#xA;",4332480,,4332480,2020-10-10 12:16:04,2020-10-10 13:02:53,What response format does AppSync expect?,<python><amazon-web-services><aws-lambda><graphql><aws-appsync>,1,0,0,2020-10-10 10:56:39
64296700,1,64403808,,1,2530,"<p>Might be a simple question, but I initially have been using the <code>graphqlOperation</code> for API queries in AWS Amplify. Recently I started utilizing Cognito User Pools. For the life of me, I could not pass <code>authMode</code> into it and ended up using a normal query.</p>&#xA;<pre><code>## normal query - works&#xA;await API.graphql({query: listForms, authMode: 'AMAZON_COGNITO_USER_POOLS'});&#xA;&#xA;## using graphqlOperation - does not work (Unauthorized)&#xA;await API.graphql(graphqlOperation(listForms,  { authMode: 'AMAZON_COGNITO_USER_POOLS' }));&#xA;</code></pre>&#xA;<p>I'm ok with using the normal query but I'm wondering why you'd use the <code>graphqlOperation</code> class at all if the normal query seems to suffice? They both seem to return the same payload. Most documentation seems to reference using <code>graphqlOperation</code>. I'm just not sure what benefit it brings.</p>&#xA;<p>Thanks!&#xA;T</p>&#xA;",3825905,,3825905,2020-10-10 18:22:13,2022-06-23 19:59:00,"AWS Amplify (GraphQL) - Using ""graphqlOperation"" vs Normal Query?",<amazon-web-services><graphql><aws-amplify>,3,0,0,2020-10-10 18:09:20
64301760,2,,64261661,2,,"<p>I used @Myz answers.&#xA;And <a href=""https://aws.amazon.com/blogs/mobile/graphql-security-appsync-amplify/"" rel=""nofollow noreferrer"">https://aws.amazon.com/blogs/mobile/graphql-security-appsync-amplify/</a> for full solution:</p>&#xA;<pre><code>  type Post&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner }&#xA;      { allow: groups, groups: [&quot;Admin&quot;], operations: [create, update, delete] }&#xA;      { allow: groups, groupsField: &quot;group&quot;, operations: [read] }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  content: String!&#xA;  author: String!&#xA;  group: [String] # or String for a single group&#xA;}&#xA;</code></pre>&#xA;",6284842,,,,2020-10-11 07:50:59,"",,0,0,0,2020-10-11 07:50:59
64304286,2,,64234829,1,,"<p>Because you are setting two different types of query patterns on the division (one from the League using the league ID and one from the Season using the season ID), you should create two indexes. Try something like this:</p>&#xA;<pre><code>type League @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  faId: ID!&#xA;  logo: String&#xA;  seasons: [Season] @connection(keyName: &quot;bySeason&quot;, fields: [&quot;id&quot;])&#xA;  division: [Division] @connection(keyName: &quot;byDivision&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Season @model @key(name: &quot;bySeason&quot;, fields: [&quot;leagueID&quot;]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  faId: ID!&#xA;  yearStart: AWSDate&#xA;  yearEnd: AWSDate&#xA;  leagueID: ID!&#xA;  league: League! @connection(fields: [&quot;leagueID&quot;])&#xA;  division: [Division] @connection(keyName: &quot;byDivisionFromSeason&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Division @model&#xA;  @key(name: &quot;byDivisionFromSeason&quot;, fields: [&quot;seasonID&quot;, &quot;leagueID&quot;, &quot;name&quot;])&#xA;  @key(name: &quot;byDivision&quot;, fields: [&quot;leagueID&quot;, &quot;seasonID&quot;, &quot;name&quot;]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  faId: ID!&#xA;  leagueID: ID!&#xA;  seasonID: ID!&#xA;  league: League! @connection(fields: [&quot;leagueID&quot;])&#xA;  season: Season! @connection(fields: [&quot;seasonID&quot;])&#xA;  ageInput: String!&#xA;  level: Int!&#xA;}&#xA;</code></pre>&#xA;",2864119,,,,2020-10-11 13:01:44,"",,0,11,0,2020-10-11 13:01:44
64309085,2,,64305719,0,,"<p>Well, not looking for points here as its my mistake buuuut, should anyone else start to see these errors:</p>&#xA;<p>My issue ended up being the user role I had selected in the api data source:</p>&#xA;<pre><code>Create or use an existing role&#xA;Allow AWS AppSync to securely interact with your data source.&#xA;</code></pre>&#xA;<p>I selected use existing and selected an IAM user associated with a different ddb table and thus the connection was never being made to the correct table and thus no data/timeout...</p>&#xA;<p>Sorry for waisting the space here...</p>&#xA;",965901,,,,2020-10-11 21:17:43,"",,0,0,0,2020-10-11 21:17:43
64312247,2,,63428895,0,,<p>I ran into this problem with a Lambda function and found that in order to pass in the correct user properties (owner) I had to define the input object in the graphql.schema to include the owner - the owner gets passed in from the client to the lambda function that creates the database record.  Not sure who the owner would be if left to graphql since the api call is from the lambda function.</p>&#xA;,2567126,,,,2020-10-12 05:37:54,"",,0,0,0,2020-10-12 05:37:54
64334397,2,,62497812,-1,,"<p>You can omit the operation you want to forbid, e.g. to forbid deleting:</p>&#xA;<pre><code>@auth(rules: [{ allow: owner, operations: [create, read, update] }]) { ... }&#xA;</code></pre>&#xA;",1339963,,,,2020-10-13 11:30:42,"",,0,1,0,2020-10-13 11:30:42
64336995,2,,62441316,14,,"<p>Its because the&#xA;<code>defer conn.Close()</code>&#xA;command will be executed before the connection is even used.</p>&#xA;<p><a href=""https://blog.golang.org/defer-panic-and-recover"" rel=""noreferrer"">From the go blog</a></p>&#xA;<blockquote>&#xA;<p>A defer statement pushes a function call onto a list.  The list of&#xA;saved calls is executed after the surrounding function returns.</p>&#xA;</blockquote>&#xA;<p>So you would remove the line <code>defer conn.Close()</code> and close the connection after it is not used anymore.</p>&#xA;",2361506,,,,2020-10-13 14:17:50,"",,0,0,0,2020-10-13 14:17:50
64343351,1,,,1,691,"<p>I have a DynamoDB table called URLArray that contains a list of URL's (myURL) and a unique video number (myNum).&#xA;<a href=""https://i.stack.imgur.com/0Z5RX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0Z5RX.png"" alt=""My Table"" /></a></p>&#xA;<p>I use AWS Amplify to query my table like so for example:</p>&#xA;<pre><code>URLData = await API.graphql(graphqlOperation(getUrlArray, { id: &quot;173883db-9ff1-4....&quot;}));&#xA;</code></pre>&#xA;<p>Also myNum is a GSI, so i can also query the row using it, for example:</p>&#xA;<pre><code>URLData = await API.graphql(graphqlOperation(getURLinfofromMyNum, { myNum: 5 }));&#xA;</code></pre>&#xA;<p>My question is, I would like to simply query this table to know what the maximum number of <code>myNum</code> is. So in this picture it'd return <code>myNum = 12</code>. How do i query my table to get this?</p>&#xA;",10749925,,75033,2020-10-14 03:35:57,2020-10-14 03:35:57,How to get the maximum number in DynamoDB column?,<database><amazon-web-services><graphql><amazon-dynamodb><aws-appsync>,1,0,0,2020-10-13 21:23:15
64343696,2,,64343209,0,,"<p>You can use the <code>__typename</code> field to get the GraphQL type. This goes outside of the inline fragments since it is a shared field between all types in the union.</p>&#xA;<pre><code>layouts_page {&#xA;  __typename&#xA;&#xA;  ... on WordPressAcf_two_col_image_text {&#xA;    # …&#xA;  }&#xA;  ... on WordPressAcf_two_col_text {&#xA;    # …&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Then your conditional would check for identity like so:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>layout.__typename === &quot;WordPressAcf_two_col_image_text&quot;&#xA;</code></pre>&#xA;<p>There's a more elegant way to construct the whole thing than using a big inline conditional though:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const typeMap = {&#xA;  WordPressAcf_two_col_image_text: TwoColImageText,&#xA;  WordPressAcf_two_col_text: TwoColText,&#xA;}&#xA;&#xA;const Test: FunctionComponent = ({ data }): ReactElement =&gt; {&#xA;  const layouts = data.wordpressPage.edges.node.acf.layouts_page;&#xA;&#xA;  return (&#xA;    &lt;Layout&gt;&#xA;      &lt;main&gt;&#xA;        {layouts.map(({ __typename, ...layoutProps }), index) =&gt; &#xA;          React.createElement(typeMap[__typename], { key: index, ...layoutProps }) &#xA;        )}&#xA;      &lt;/main&gt;&#xA;    &lt;/Layout&gt;&#xA;  );&#xA;};&#xA;</code></pre>&#xA;",203130,,,,2020-10-13 21:52:36,"",,0,0,0,2020-10-13 21:52:36
64343950,2,,64343351,2,,"<p>DynamoDb does not have the equivalent of the SQL expression <code>select MAX(myNum)</code>, so you cannot do what you are asking with your table as-is.</p>&#xA;<p>A few suggestions:</p>&#xA;<ul>&#xA;<li><p>Record the highest value of <code>myNum</code> as you insert items into the table. For example, you could create an item with PK = &quot;METADATA&quot; and an attribute named <code>maxMyNum</code>.  The <code>maxMyNum</code> attribute could be updated conditionally if you have a value that is higher than what is stored in DDB.</p>&#xA;</li>&#xA;<li><p>You could build a secondary index with <code>myNum</code> as the sort key in a single partition.  This would allow you to execute a <code>query</code> operation with <code>ScanIndexForward</code> set to false (descending order), and pick the first returned entry (the max value)</p>&#xA;</li>&#xA;</ul>&#xA;<p>If you are generating an auto incrementing value in your application code, consider checking out the documentation regarding <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/WorkingWithItems.html#WorkingWithItems.AtomicCounters"" rel=""nofollow noreferrer"">atomic counters</a>.</p>&#xA;",13549664,,,,2020-10-13 22:18:37,"",,0,1,0,2020-10-13 22:18:37
64385475,2,,60689628,12,,"<p>It looks like a permissions error. In the section called <strong>Data</strong>, select the corresponding table (<em>project</em> in your case?) and open permissions tab. There, you should set <em>insert</em> permissions to the corresponding role. In case you're not using custom roles, you must modify permissions to <em>public</em> role.</p>&#xA;<p>The key here is that the console uses <em>admin</em> role, so you can do everything in there.</p>&#xA;<p>Be careful, since modifying <em>public</em> role permissions might be risky.</p>&#xA;<p><a href=""https://i.stack.imgur.com/PtXkE.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/PtXkE.png"" alt=""Hasura permissions section"" /></a></p>&#xA;",6247671,,,,2020-10-16 08:22:50,"",,0,0,0,2020-10-16 08:22:50
64396012,1,,,1,626,"<p>I have a nullable attribute in a type:</p>&#xA;<pre><code>type Person {&#xA;  job: String&#xA;}&#xA;</code></pre>&#xA;<p>And a query:</p>&#xA;<pre><code>query Persons() {&#xA;  persons() {&#xA;    job&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Whevener I query the object, I always get the <code>job</code> key, either with a string or a null value.</p>&#xA;<pre><code>{&#xA;  &quot;job&quot;: null&#xA;}&#xA;</code></pre>&#xA;<p>But what I need is the <code>job</code> key to be present in the result only when the job is defined, otherwise I want it to be skipped altogether.</p>&#xA;<pre><code>{}&#xA;</code></pre>&#xA;<p>I have tried returning <code>null</code>, <code>undefined</code> and skipping the key from the data, but Apollo always returns the key no matter what.</p>&#xA;",925649,,,,2020-10-17 13:15:09,Is there a way to avoid returing keys with null values in Apollo GraphQL?,<graphql><apollo><apollo-server>,1,0,0,2020-10-16 20:28:45
64403808,2,,64296700,0,,"<p>You can't use graphqlOperation with authMode. Use just API.graphql() instead.</p>&#xA;<p>&quot;Previous examples uses graphqlOperation function. That function only creates an object with two attributes query and variables. In order to use authMode you need to pass this object as is mentioned on the previous example.&quot;</p>&#xA;<p>See <a href=""https://docs.amplify.aws/lib/graphqlapi/authz/q/platform/js#using-amplify-graphql-client"" rel=""nofollow noreferrer"">Configure authorization modes</a></p>&#xA;",1544659,,,,2020-10-17 14:55:53,"",,0,0,0,2020-10-17 14:55:53
64404186,2,,61131023,0,,"<p>In the amplify docs they say that you must create new items after you have added the @searchable directive to your model:</p>&#xA;<p>See <a href=""https://haverchuck.github.io/docs/cli/graphql?sdk=js"" rel=""nofollow noreferrer"">GraphQL Transform</a></p>&#xA;<p>and there</p>&#xA;<p><code>Note: Support for adding the @searchable directive does not yet provide automatic indexing for any existing data to Elasticsearch.</code></p>&#xA;<p>Create your items anew after you have added @searchable and those items will be displayed.</p>&#xA;",1544659,,,,2020-10-17 15:31:30,"",,0,0,0,2020-10-17 15:31:30
64428536,2,,64427218,1,,"<p>I got the answer in comments, thanks @iamnat. I'll just evolve here with my example for clarity since I still struggled a bit:</p>&#xA;<p>Super simple schema and data as such:</p>&#xA;<pre><code>CREATE EXTENSION IF NOT EXISTS &quot;uuid-ossp&quot;;&#xA;&#xA;CREATE TABLE foo&#xA;(&#xA;    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),&#xA;    name text,&#xA;    data jsonb NOT NULL&#xA;);&#xA;&#xA;CREATE TABLE bar&#xA;(&#xA;    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),&#xA;    name text,&#xA;);&#xA;&#xA;WITH bars AS (&#xA;  INSERT INTO bar (name) VALUES ('bar') RETURNING id&#xA;)&#xA;INSERT INTO foo (name, data) VALUES ('foo', jsonb_build_object('barId', (SELECT id FROM bars)));&#xA;</code></pre>&#xA;<p>I then can create a function for the relationship:</p>&#xA;<pre><code>CREATE FUNCTION foo_bar(foo_row foo)&#xA;RETURNS SETOF bar AS $$&#xA;  SELECT *&#xA;  FROM bar&#xA;  WHERE text(id) = foo_row.data -&gt;&gt; 'barId'&#xA;$$ LANGUAGE sql STABLE;&#xA;</code></pre>&#xA;<p>This I can then use in Hasura as a computed field under &quot;Data&quot; -&gt; foo -&gt; Modify -&gt; Computed fields -&gt; &quot;Add a new computed field&quot;. Just give it a name and reference the function in a dropdown:</p>&#xA;<p><a href=""https://i.stack.imgur.com/vk4pp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vk4pp.png"" alt=""enter image description here"" /></a></p>&#xA;<p>I can then query:</p>&#xA;<pre><code>query MyQuery {&#xA;  foo {&#xA;    name&#xA;    foo_bar {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>with expected result:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;foo&quot;: [&#xA;      {&#xA;        &quot;name&quot;: &quot;foo&quot;,&#xA;        &quot;foo_bar&quot;: [&#xA;          {&#xA;            &quot;name&quot;: &quot;bar&quot;&#xA;          }&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",312873,,,,2020-10-19 13:37:17,"",,0,0,0,2020-10-19 13:37:17
64428537,2,,64428258,0,,"<p>You have to declare the variable in the query header e.g.</p>&#xA;<pre><code>query SearchArticles($searchString: String) {&#xA;    fuzzyArticleByTitle(searchString: $searchString){&#xA;        title&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and then use this specific variable name (you can chose any name in the declaration after the <code>$</code>) in Apollo:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>&lt;Query query={SearchQuery} skip={!search} variables={{searchString: search}}&gt;&#xA;  {({loading, error, data}) =&gt; {&#xA;    if (loading) return null;&#xA;    if (error) throw err;&#xA;     return &lt;h1&gt;{data.search.title}&lt;/h1&gt;&#xA;  }}&#xA;&lt;/Query&gt;&#xA;</code></pre>&#xA;",3849167,,,,2020-10-19 13:37:17,"",,0,0,0,2020-10-19 13:37:17
64429606,2,,60877460,12,,"<p>Even working with AWS Amplify, I prefer to go to the AppSync console and select the queries, and mutations this way you'll see what's happening and what's needed behind the scenes to do your mutations.</p>&#xA;<p>An update mutation sample bellow, extracted from the AppSync console - instead of using <code>codegen</code> from Amplify.</p>&#xA;<pre><code>input UpdateRuralAddressInput {&#xA;    id: ID!&#xA;    latitude: String&#xA;    longitude: String&#xA;    stateCity: String&#xA;    status: Int&#xA;    _version: Int&#xA;}&#xA;</code></pre>&#xA;<p>Note that field <strong>version</strong> is required to do the update.</p>&#xA;<p><em>I'm just pointing it out to help others with this issue, that's how I'm working with Amplify + <strong>Appsync client</strong> in Lambdas</em></p>&#xA;<p>So, before applying any update mutation execute a <em>&quot;get by id&quot;</em> <code>query</code>, plus update the model that comes from the request body accordingly. This way not only the field <strong>version</strong> will remains Ok, but other aspects as well.</p>&#xA;<p>A sample of updating in the Lambda handler function.&#xA;<em>Note: You'll need to delete the property <code>__typename</code></em></p>&#xA;<pre><code>    const updateRuralAddressRequest = JSON.parse(event.body);&#xA;    &#xA;    const client = await appsyncClient.hydrated();&#xA;&#xA;    const ruralAddressQuery = await client.query({ query: gql(queryRuralAddress), variables: { id: updateRuralAddressRequest.id } });&#xA;    const ruralAddressFromDb = ruralAddressQuery.data.getRuralAddress;&#xA;&#xA;&#xA;    const updateRuralAddressInput = { ...ruralAddressFromDb, ...updateRuralAddressRequest };&#xA;    delete updateRuralAddressInput.__typename;&#xA;&#xA;    const data = await client.mutate({ mutation: gql(updateRuralAddressMutation), variables: { updateRuralAddressInput } });&#xA;</code></pre>&#xA;<p>Notice that both my query and my update mutation must contains the <code>version</code> field.</p>&#xA;<pre><code>export const queryRuralAddress = `&#xA;  query GetRuralAddressByID($id: ID!) {&#xA;    getRuralAddress(id: $id) {&#xA;      id,&#xA;      latitude,&#xA;      longitude,&#xA;      stateCity,&#xA;      status,&#xA;      _version&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;export const updateRuralAddressMutation = `&#xA;    mutation UpdateRuralAddress($updateRuralAddressInput:UpdateRuralAddressInput!) {&#xA;      updateRuralAddress(input: $updateRuralAddressInput) {&#xA;        id&#xA;        latitude&#xA;        longitude&#xA;        stateCity&#xA;        status,&#xA;        _version&#xA;      }&#xA;    }`;&#xA;</code></pre>&#xA;",2802802,,2802802,2020-10-19 15:35:43,2020-10-19 15:35:43,"",,0,0,0,2020-10-19 14:36:37
64429915,1,,,0,470,"<p>I have two models, user and accounts. A user can have zero or more accounts. I can fetch all the users (with and without accounts) with the below query.</p>&#xA;<p>I also want to filter the users based on the account name for which I'm using the _ilike operator in line 14.</p>&#xA;<p>However, this will also return users with no accounts. How can we avoid this?&#xA;<a href=""https://i.stack.imgur.com/vu4yn.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vu4yn.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Is there a way skip the condition in the arguments?</p>&#xA;",10179187,,,,2020-10-27 14:26:55,Hasura @skip where condition in query,<postgresql><graphql><hasura>,1,0,0,2020-10-19 14:55:10
64431015,2,,64426929,0,,"<p>After doing some digging, I tried to test the creation and the subscription on the AWS Console.&#xA;And I have seen some errors in the output of my subscription:</p>&#xA;<pre><code>&quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Cannot return null for non-nullable type: 'AWSDateTime' within parent 'Photo' (/onCreatePhoto/createdAt)&quot;,&#xA;      &quot;path&quot;: [&#xA;        &quot;onCreatePhoto&quot;,&#xA;        &quot;createdAt&quot;&#xA;      ]&#xA;</code></pre>&#xA;<p>I have found this issue <a href=""https://github.com/aws-amplify/amplify-cli/issues/4613"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/4613</a></p>&#xA;<p>I have deleted the <code>createdAt</code> and <code>updatedAt</code> from my subscription query and I don't have any errors and I have the right response after creating a photo.</p>&#xA;<p>The problem is that my subscription file is auto generated by amplify, so I don't know how to solve it for ever, not being forced to modify each time amplify will re generate it.</p>&#xA;",235921,,,,2020-10-19 15:59:06,"",,0,3,0,2020-10-19 15:59:06
64436276,1,,,-1,758,"<p>I have just tried to start my <code>amplify mock</code> service and received the follow error:</p>&#xA;<p><code>InternalFailure: The request processing has failed because of an unknown error, exception or failure.</code></p>&#xA;<p>This has previously worked, a few hours ago with no resets or other changes.</p>&#xA;<p>To fix this, I did have success with removing amplify completely, doing <code>amplify init &amp; amplify add api</code> but this means I lose my local data each time, but it happens randomly multiple times in the last few hours.</p>&#xA;<p>For the full log while error is taking place:</p>&#xA;<pre><code>hutber@hutber:/var/www/unsal.co.uk$ amplify mock&#xA;&#xA;GraphQL schema compiled successfully.&#xA;&#xA;Edit your schema at /var/www/unsal.co.uk/amplify/backend/api/unsalcouk/schema.graphql or place .graphql files in a directory at /var/www/unsal.co.uk/amplify/backend/api/unsalcouk/schema&#xA;Failed to start API Mock endpoint InternalFailure&#xA;</code></pre>&#xA;",240363,,,,2020-11-26 14:01:45,"Unable to start amplify mock InternalFailure: The request processing has failed because of an unknown error, exception or failure",<amazon-web-services><graphql><aws-amplify>,1,0,0,2020-10-19 23:13:53
64437207,2,,64436979,2,,"<p>Below is an example of how you could define a query on client and pass non-required argument. Not sure about your client-side config, but you may want to use a lib like graphql-tag to convert string to AST.</p>&#xA;<pre><code>const GET_COMPANIES = gql`&#xA;  query Companies($limit: Int) {&#xA;    companies(limit: $limit) {&#xA;      ... // return fields&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;",8715397,,8715397,2020-10-20 01:54:09,2020-10-20 01:54:09,"",,0,3,0,2020-10-20 01:23:38
64443391,1,,,2,640,"<p>For a new project, we're currently designing a database and an API to access this. We've already established we'll be using PostgresQL for the database, and want to access it via a GraphQL API.</p>&#xA;<p>To ease with maintainability, we looked at several intermediaries between client/API/database, mainly Prisma, PostGraphile and Hasura. PostGraphile stood out, because of ease of use and the focus of handling stuff &quot;in database&quot; as opposed to in your backend code. However, we ran into issues when figuring out how to implement this.</p>&#xA;<p>Allow me to expand on what we designed thus far:</p>&#xA;<hr />&#xA;<p><em>Provisional database design:</em></p>&#xA;<ul>&#xA;<li><code>users</code> table</li>&#xA;<li><code>groups</code> table</li>&#xA;<li><code>roles</code> table:</li>&#xA;<li><code>u_g_r</code> table: A user can be part of multiple groups, and can have multiple roles in each group. This table represents foreign keys for <code>users</code>, <code>groups</code> and <code>roles</code>, as many-to-many relations can exist in virtually all combinations.</li>&#xA;</ul>&#xA;<p><em>Data Permissions:</em></p>&#xA;<p>We want users to grant others access to their personal data in several steps, preferably for each group. For example:</p>&#xA;<ul>&#xA;<li>level 3: Yourself and only absolutely necesary people, such as account manager</li>&#xA;<li>level 2: Only people in group X, Y, etc</li>&#xA;<li>level 1: Everybody</li>&#xA;</ul>&#xA;<p>It would be awesome if it was possible to set this for various types of data, for example grant level 2 for your phone number, but only level 1 for your physical address.&#xA;So, these levels (1, 2, 3) would accompany data in the database, like <code>phone_number</code> and <code>phone_number_access_level</code> for example. Then, in the <code>u_g_r</code> junction table, each combination of <code>user</code>/<code>group</code>/<code>role</code> would have an allowed level attached to it, which must be higher than the required level for the relevant data. Thus, if your <code>role</code> allowed access to data on level 2, you would be able to view data on level 1 and 2, but not level 3.</p>&#xA;<hr />&#xA;<p>Postgres allows both column- and row level security, to let users access certain data. The PostGraphile wiki goes into some detail (<a href=""https://www.graphile.org/postgraphile/security/"" rel=""nofollow noreferrer"">here</a> and <a href=""https://www.graphile.org/postgraphile/jwt-guide/"" rel=""nofollow noreferrer"">here</a>) how you would make this work with JWT claims instead of PostGres roles.&#xA;Our problem arrives when we want to implement the above features. It seems we want a kind of 'field level security' that does not exist, but I can't imagine others not having had the same issues.</p>&#xA;<p>What would you advive us to do? Please let me know if there are options we've missed, or whether there are other options that are better for us!</p>&#xA;<p>Implementing this outside the database, in backend code might might be the easiest way in and of itself, but it greatly impacts maintainability for us, as the main luxury of things like PostGraphile for us is removing the need to write GraphQL schema's and resolvers ourselves.</p>&#xA;",10244326,,,,2021-01-19 09:29:23,How to implement complex permission based data access in Postgres with Postgraphile or alternatives,<postgresql><graphql><prisma><hasura><postgraphile>,2,1,0,2020-10-20 10:36:02
64444429,2,,64443391,1,,"<p>It seems that you want all users to see all table rows, but only certain columns.</p>&#xA;<p>You probably cannot use column permissions, because these can only allow or deny access to the column as a whole and do not respect who “owns” a certain table row.</p>&#xA;<p>So perhaps views can do what you want, for example:</p>&#xA;<pre><code>CREATE VIEW users_view&#xA;WITH (security_barrier = true, check_option = local) AS&#xA;SELECT /* accessible to everyone */&#xA;       username,&#xA;       /* accessible only to certain groups */&#xA;       CASE WHEN pg_has_role('x', 'USAGE') OR pg_has_role('y', 'USAGE')&#xA;            THEN level2_col&#xA;            ELSE NULL&#xA;       END AS level2_col,&#xA;       /* accessible only to admins and owner */&#xA;       CASE WHEN username = current_user OR pg_has_role('admin', 'USAGE')&#xA;            THEN level3_col&#xA;            ELSE NULL&#xA;       END AS level3_col&#xA;FROM users;&#xA;</code></pre>&#xA;<p><code>security_barrier</code> makes sure that nobody can use functoins with side effects to subvert security, and <code>check_option</code> ascertains that nobody can <code>INSERT</code> a row that is not visible to themselves.</p>&#xA;<p>You can allow DML operations on the views if you define <code>INSTEAD OF</code> triggers.</p>&#xA;",6464308,,,,2020-10-20 11:42:54,"",,0,1,0,2020-10-20 11:42:54
64446534,1,,,1,190,"<p>I have a graphql mutation that looks like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>mutation ($entityId: ID!, $reviewId: ID!) {&#xA;  removeReview (entityId: $entityId, reviewId: $reviewId) {&#xA;    ...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Which delegates to another schema to remove an associated entity</p>&#xA;<pre class=""lang-js prettyprint-override""><code>input RemovePostInput {&#xA;  id&#xA;}&#xA;&#xA;mutation ($input: RemovePostInput) {&#xA;  removePost (input: $input) {&#xA;     id&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>And in my resolver, I'm using <code>delegateToSchema</code> but I can't get my transforms right. I'm able to wrap the fieldname, and add my own selectionset as well as the new <code>input</code> argument, but I can't get rid of the incoming two arguments.</p>&#xA;<p>Is there a built-in transformer to remove arguments, or if not, how can I make a <code>transformRequest</code> transformer to convert two arguments into one. If I had one named type transformed to another named type, I would just use a RenameTypes transformer, but the number of arguments is different, which I can't figure out.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>delegateToSchema({&#xA;  schema: remoteSchema,&#xA;  operation: 'mutation',&#xA;  fieldName: 'deletePost',&#xA;  args: { input: { id: postId } },&#xA;  transforms: [&#xA;    new WrapQuery(['deletePost'], POST_WITH_REPLIES_SELECTIONSET, (result) =&gt; result)&#xA;  ],&#xA;  context,&#xA;  info&#xA;});&#xA;</code></pre>&#xA;",381422,,4402119,2020-10-25 23:28:51,2020-10-25 23:28:51,How can I transform a graphql request with two arguments to one with one argument?,<graphql><graphql-js>,0,0,0,2020-10-20 13:47:14
64476230,2,,56795531,3,,"<p>Building on both of the previous answers, it seems you can get away with a single loop and in that you can set permissions for both <code>public</code> and <code>authenticated</code> users.</p>&#xA;<p>This was written against strapi <code>3.2.4</code> and I'm using NodeJS 12 so things like the spread operator <code>...</code> are available.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>  const permOrm = strapi.query('permission', 'users-permissions')&#xA;  const perms = await permOrm.find({ type: 'application' })&#xA;  for (const curr of perms) {&#xA;    if (curr.role.type === 'authenticated') {&#xA;      strapi.log.info(&#xA;        `Allowing authenticated to call ${curr.controller}.${curr.action}`,&#xA;      )&#xA;      permOrm.update({ id: curr.id }, { ...curr, enabled: true })&#xA;      continue&#xA;    }&#xA;    // permission is for public&#xA;    const isReadEndpoint = ['find', 'findone', 'count'].includes(curr.action)&#xA;    if (isReadEndpoint) {&#xA;      strapi.log.info(&#xA;        `Allowing public to call ${curr.controller}.${curr.action}`,&#xA;      )&#xA;      permOrm.update({ id: curr.id }, { ...curr, enabled: true })&#xA;      continue&#xA;    }&#xA;    // TODO add custom logic for any non-standard actions here&#xA;    strapi.log.info(&#xA;      `Disallowing public from calling ${curr.controller}.${curr.action}`,&#xA;    )&#xA;    permOrm.update({ id: curr.id }, { ...curr, enabled: false })&#xA;  }&#xA;</code></pre>&#xA;",1410035,,,,2020-10-22 06:06:19,"",,0,0,0,2020-10-22 06:06:19
64483716,2,,64366834,5,,"<p>Apparently, the reason I didn't get any updates from the subscription was because I tested it by adding a new item to the DB from the DynamoDB console, while AppSync subscriptions only work if the creating call is being made using the same AppSync API.</p>&#xA;",2378691,,,,2020-10-22 13:50:26,"",,0,0,0,2020-10-22 13:50:26
64486418,2,,64455525,0,,"<h3>First, make sure you have an instance of <code>tags</code> in your data.</h3>&#xA;<p><a href=""https://www.gatsbyjs.com/plugins/gatsby-source-contentful/#notes-on-contentful-content-models"" rel=""nofollow noreferrer"">From the documentation</a>:</p>&#xA;<blockquote>&#xA;<p>There are currently some things to keep in mind when building your content models at Contentful.</p>&#xA;<ol>&#xA;<li>At the moment, fields that do not have at least one populated instance will not be created in the GraphQL schema.</li>&#xA;<li>When using reference fields, be aware that this source plugin will automatically create the reverse reference. You do not need to create references on both content types.</li>&#xA;</ol>&#xA;</blockquote>&#xA;<p>This is what your error message was trying to convey with this message:</p>&#xA;<blockquote>&#xA;<p>You want to optionally use your field &quot;tags&quot; and right now it is not used anywhere. Therefore Gatsby can't infer the type and add it to the GraphQL schema. A quick fix is to add at least one entry with that field (&quot;dummy content&quot;). It is recommended to explicitly type your GraphQL schema if you want to use optional fields. This way you don't have to add the mentioned &quot;dummy content&quot;. Visit our docs to learn how you can define the schema for &quot;ContentfulArt&quot;</p>&#xA;</blockquote>&#xA;<h3>Second, make sure that <code>tags</code> are available.</h3>&#xA;<p>If you are using the preview API to pull drafts in development, it's plausible that you haven't published the content that has <code>tags</code> set in Contentful. When you deploy to production and pull from the non-preview API, your draft content wouldn't be available.</p>&#xA;<p>Finally, confirm that you have <a href=""https://docs.netlify.com/configure-builds/environment-variables/"" rel=""nofollow noreferrer"">configured your environment variables in Netlify</a> to include your Contentful access token.</p>&#xA;",203130,,,,2020-10-22 16:21:38,"",,0,4,0,2020-10-22 16:21:38
64520754,1,,,2,592,<p>I am working on an app using AWS AppSync. I have enabled the AuthN and AuthZ.</p>&#xA;<p>One part I am stuck is at adding CORS filter for Appsync subscriptions.</p>&#xA;<p>I have worked on websockets earlier and there too I had this problem. I solved it manually in websockets by filtering the CORS from header during the handshake.</p>&#xA;<p>Do we have a provision to invoke a lambda in Appsync when a client is attempting to connect for subscription ?</p>&#xA;,2763906,,2763906,2020-10-26 11:34:06,2021-06-05 14:54:25,Add CORS filter in AppSync Subscription,<amazon-web-services><graphql><cors><aws-appsync>,0,1,0,2020-10-25 05:49:32
64529927,2,,64234829,2,,"<p>Maybe this should be more a comment than an actual answer, but I need to describe the schema, I will delete it later if you consider it appropriate.</p>&#xA;<p>Jamie, just for testing, can you please try the following schema? It is basically the same schema proposed by Nader, just removing the field <code>name</code> from the <code>key</code>s on <code>Division</code>:</p>&#xA;<pre><code>type League @model&#xA;{&#xA;  id: ID!&#xA;  name: String!&#xA;  faId: ID!&#xA;  logo: String&#xA;  seasons: [Season] @connection(keyName: &quot;bySeason&quot;, fields: [&quot;id&quot;])&#xA;  division: [Division] @connection(keyName: &quot;byDivision&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Season @model @key(name: &quot;bySeason&quot;, fields: [&quot;leagueID&quot;])&#xA;{&#xA;  id: ID!&#xA;  name: String!&#xA;  faId: ID!&#xA;  yearStart: AWSDate&#xA;  yearEnd: AWSDate&#xA;  leagueID: ID!&#xA;  league: League! @connection(fields: [&quot;leagueID&quot;])&#xA;  division: [Division] @connection(keyName: &quot;byDivisionFromSeason&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Division @model&#xA;@key(name: &quot;byDivisionFromSeason&quot;, fields: [&quot;seasonID&quot;, &quot;leagueID&quot;])&#xA;@key(name: &quot;byDivision&quot;, fields: [&quot;leagueID&quot;, &quot;seasonID&quot;])&#xA;{&#xA;  id: ID!&#xA;  name: String!&#xA;  faId: ID!&#xA;  divisionSeasonFaId: String&#xA;  leagueID: ID!&#xA;  seasonID: ID!&#xA;  league: League! @connection(fields: [&quot;leagueID&quot;])&#xA;  season: Season! @connection(fields: [&quot;seasonID&quot;])&#xA;  teams: [TeamConnection] @connection(keyName: &quot;byTeamDivision&quot;, fields: [&quot;id&quot;])&#xA;  games: [Game] @connection(keyName: &quot;byGameForDivision&quot;, fields: [&quot;id&quot;])&#xA;  ageInput: String!&#xA;  level: Int!&#xA;}&#xA;</code></pre>&#xA;<p>I think the error you obtained, i.e.:</p>&#xA;<pre><code>&quot;errors&quot;: [ { &quot;message&quot;: &quot;Query condition missed key schema element&quot;, &quot;errorType&quot;: &quot;DynamoDB:ValidationException&quot;, &quot;data&quot;: null, &quot;errorInfo&quot;: null, &quot;path&quot;: [ &quot;listLeagues&quot;, &quot;items&quot;, 1, &quot;division&quot; ], &quot;locations&quot;: [ { &quot;line&quot;: 10, &quot;column&quot;: 9, &quot;sourceName&quot;: &quot;GraphQL request&quot; } ] }&#xA;</code></pre>&#xA;<p>can be motivated by running a query using the condition <code>name</code>.</p>&#xA;",13942448,,,,2020-10-25 23:39:25,"",,0,26,0,2020-10-25 23:39:25
64540199,1,,,1,935,"<p>I have a nuxtjs app that uses apollo module for graphql communication with FaunaDB.&#xA;I want to make multiple mutations in one transaction to FaunaDB. So I don't want to send a different request for every single mutation to FaunaDB, I want to make a single request that contains all the mutations. Is it possible?</p>&#xA;",5679578,,,,2020-10-27 10:16:45,Does apollo client support transactions?,<transactions><graphql><nuxt.js><apollo-client><vue-apollo>,1,0,0,2020-10-26 15:32:34
64552156,2,,64540199,0,,"<p><strong>Yes transactions are supported by GraphQL</strong></p>&#xA;<p>There is <a href=""https://graphql.org/learn/queries/#multiple-fields-in-mutations"" rel=""nofollow noreferrer"">a graphql guide</a> about <strong>Multiple fields in mutations</strong> .</p>&#xA;<p>And a <a href=""https://stackoverflow.com/questions/49782270/multiple-queries-mutation-in-apollo-2-1"">stackoverflow</a> answer.</p>&#xA;<p><em>multiple mutations</em> is not directly related with vue-apollo, it's a feature of Apollo client.</p>&#xA;<p><strong>Answer is in GraphQL layer.</strong></p>&#xA;<p><a href=""https://www.apollographql.com/docs/react/data/mutations/#executing-a-mutation"" rel=""nofollow noreferrer"">Apollo Client</a> documantation has information about it.</p>&#xA;<p><a href=""https://github.com/Akryum/vue-apollo-todos"" rel=""nofollow noreferrer"">Vue-Apollo-todos</a> is a good example for mutations.</p>&#xA;<p>And there is a example in <a href=""https://github.com/apollographql/react-apollo/issues/238#issuecomment-250652349"" rel=""nofollow noreferrer"">apollographql issues</a></p>&#xA;<pre class=""lang-js prettyprint-override""><code>graphql(gql`&#xA;  query UserQuery ($userId: ID!) {&#xA;    user(id: $userId) {&#xA;      # ... selection set&#xA;    }&#xA;  }&#xA;&#xA;  query PostQuery($postId: ID!) {&#xA;    post(id: $postId) {&#xA;      # ... selection set&#xA;    }&#xA;  }&#xA;&#xA;  mutation CreateUser ($createUserInput: CreateUserInput!) {&#xA;    createUser(data: $createUserInput) {&#xA;      # ... selection set&#xA;    }&#xA;  }&#xA;&#xA;  mutation CreatePost ($createPostInput: CreatePostInput!) {&#xA;    createPost(data: $createPostInput) {&#xA;      # ... selection set&#xA;    }&#xA;  }&#xA;`, {&#xA;  props: ({ data: { loading, user, post }, createUser, createPost }) =&gt; {&#xA;    // ... do stuff with multiple operations&#xA;  }&#xA;});&#xA;</code></pre>&#xA;",11993949,,11993949,2020-10-27 10:16:45,2020-10-27 10:16:45,"",,0,0,0,2020-10-27 10:09:00
64552394,1,64553401,,0,444,"<p>I have Laravel 8 with Lighthouse package for Graph QL,</p>&#xA;<p>I have added @unique directive for &quot;name&quot; attribute, but I am unable to apply this while updating any record, as I want to skip the currently updating record for checking unique,</p>&#xA;<p>Below is schema for update</p>&#xA;<p>updateRole(id: ID, name: String! @trim @rules(apply : [&quot;unique:roles,name&quot;]), isActive: Int!): Role! @update</p>&#xA;<p>When I manually added &quot;id&quot; with rule, it works fine, but I don't know how to make it dynamic rule.</p>&#xA;",7485096,,,,2020-10-27 11:23:29,how to add @unique validation while updating content in laravel Lighthouse?,<php><laravel><graphql><lighthouse><laravel-lighthouse>,1,0,0,2020-10-27 10:22:52
64556575,2,,64429915,0,,"<p>{} evaluates to true if any object exists. so you can use the _and operator as</p>&#xA;<pre><code>_and: [&#xA;    {&#xA;      accounts: { name: { _ilike: $accountName } }&#xA;    },&#xA;    {&#xA;      accounts: {}&#xA;    }&#xA;]&#xA;</code></pre>&#xA;",14529454,,,,2020-10-27 14:26:55,"",,0,0,0,2020-10-27 14:26:55
64574717,2,,64574369,1,,"<p>You should use <a href=""https://hasura.io/docs/1.0/graphql/core/schema/table-relationships/index.html"" rel=""nofollow noreferrer"">table relationships</a> or <a href=""https://hasura.io/docs/1.0/graphql/core/schema/custom-functions.html"" rel=""nofollow noreferrer"">custom functions</a>.</p>&#xA;<p>What you want to do is not very clear, but I think you should redesign your database schema:</p>&#xA;<ul>&#xA;<li>user table with PK</li>&#xA;<li>visitedLocations with one to many relationship with user table</li>&#xA;<li>booksRead with one to many relationship with user table</li>&#xA;</ul>&#xA;<p>So, querying could be:</p>&#xA;<pre><code>query {&#xA;    user {&#xA;        username&#xA;        email&#xA;        visitedLocations {&#xA;            location&#xA;        }&#xA;        booksRead {&#xA;            book&#xA;        }&#xA;    }&#xA;&#xA;}&#xA;</code></pre>&#xA;",479957,,,,2020-10-28 14:16:26,"",,0,0,0,2020-10-28 14:16:26
64616447,1,64639212,,0,1031,"<p>I am trying to delete and update records in cosmosDB using my graphql/nodejs code and getting error - &quot;Entity with the specified id does not exist in the system&quot;. Here is my code</p>&#xA;<pre><code>deleteRecord: async (root, id) =&gt; {&#xA;  const { resource: result } = await container.item(id.id, key).delete();&#xA;  console.log(`Deleted item with id: ${id}`);&#xA;},&#xA;</code></pre>&#xA;<p>Somehow below code is not able to find record, even &quot;container.item(id.id, key).read()&quot; doesn't work.</p>&#xA;<pre><code>await container.item(id.id, key)&#xA;</code></pre>&#xA;<p>But if I try to find record using query spec it works</p>&#xA;<pre><code>await container.items.query('SELECT * from c where c.id = &quot;'+id+'&quot;' ).fetchNext()&#xA;</code></pre>&#xA;<p>FYI- I am able to fetch all records and create new item, so Connection to DB and reading/writing is not an issue.</p>&#xA;<p>What else can it be? Any pointer related to this will be helpful.</p>&#xA;<p>Thanks in advance.</p>&#xA;",837593,,,,2020-11-02 02:47:56,Azure CosmosDB/Nodejs - Entity with the specified id does not exist in the system,<node.js><graphql><azure-cosmosdb><graphql-mutation>,1,0,0,2020-10-30 22:16:20
64639212,2,,64616447,2,,"<p>It seems you pass the wrong key to <code>item(id,key)</code>. According to the Note of this <a href=""https://learn.microsoft.com/en-us/azure/cosmos-db/create-sql-api-nodejs"" rel=""nofollow noreferrer"">documentation</a>:</p>&#xA;<blockquote>&#xA;<p>In both the &quot;update&quot; and &quot;delete&quot; methods, the item has to be selected&#xA;from the database by calling container.item(). The two parameters&#xA;passed in are the id of the item and the item's partition key. In this&#xA;case, the parition key is the value of the &quot;category&quot; field.</p>&#xA;</blockquote>&#xA;<p>So you need to pass the value of your partition key, not your partition key path.&#xA;For example, if you have document like below, and your partition key is '/category', you need to use this code <code>await container.item(&quot;xxxxxx&quot;, &quot;movie&quot;)</code>.</p>&#xA;<pre><code>{&#xA;    &quot;id&quot;:&quot;xxxxxx&quot;,&#xA;    &quot;category&quot;:&quot;movie&quot;&#xA;}&#xA;</code></pre>&#xA;",13367638,,,,2020-11-02 02:47:56,"",,0,1,0,2020-11-02 02:47:56
64641993,1,,,1,274,"<p>I'm struggling to find a way to make a model that can work for multiple organizations within the platform I want to build with AWS Amplify.</p>&#xA;<p>The use case is a sort of corporate intranet, where a user registers on the platform and has access to a Workspace. Within the Workspace, posts are created, and posts are commented on.</p>&#xA;<p>This is the example model:</p>&#xA;<pre><code>&#xA;type Workspace&#xA;@model(subscriptions: null)&#xA;@auth(&#xA;  rules: [&#xA;    { allow: owner, operations: [create, read], ownerField: &quot;owner&quot; }&#xA;    { allow: private, provider: iam, operations: [read, delete] }&#xA;  ]&#xA;) {&#xA;  id: ID!&#xA;  title: String!&#xA;  planCode: PlanType!&#xA;  plan: Plan! @connection(fields: [&quot;planCode&quot;])&#xA;  posts: [Post]! @connection(name: &quot;workspacePosts&quot;, sortField: &quot;createdAt&quot;)&#xA;  totalPosts: Int!&#xA;  owner: String!&#xA;}&#xA;&#xA;type Post&#xA;@model(subscriptions: null)&#xA;@auth(&#xA;  rules: [&#xA;    { allow: owner, ownerField: &quot;owner&quot;, }&#xA;  ]&#xA;) {&#xA;  id: ID!&#xA;  title: String&#xA;  workspace: Workspace! @connection(name: &quot;workspacePosts&quot;)&#xA;  comments: [Comment]! @connection(name: &quot;postComments&quot;)&#xA;  totalComments: Int!&#xA;  owner: String!&#xA;}&#xA;&#xA;type Comment&#xA;@model(subscriptions: null)&#xA;@auth(&#xA;  rules: [&#xA;    { allow: owner, ownerField: &quot;owner&quot;, }&#xA;  ]&#xA;) {&#xA;  id: ID!&#xA;  content: String&#xA;  post: Post! @connection(name: &quot;postComments&quot;)&#xA;  owner: String!&#xA;}&#xA;&#xA;enum PlanType {&#xA;  FREE&#xA;  BASIC&#xA;  PRO&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>The Posts, Comments and the Workspace are private and can only be viewed by the Workspace owner, who will also be the owner of the Posts and comments.</p>&#xA;<p>At some point, the user must be able to invite another user into his Workspace, and the new user must then be able to access all the records that the previous owner has generated (Workspace, Posts and Comments).</p>&#xA;<p>In this case, with the addition of the new user I am forced to:</p>&#xA;<ul>&#xA;<li>get all the Posts related to the Workspace</li>&#xA;<li>get all the Comments related to the Posts related to the Workspace</li>&#xA;<li>update every record from <code>owner: &quot;User_1&quot;</code> to <code>owner: [&quot;User_1&quot;, &quot;User_2&quot;]</code></li>&#xA;</ul>&#xA;<p>Everything related to the Workspace must be visible or &quot;owned&quot; by every new users added to the Workspace.</p>&#xA;<p>Is there a more efficient way?</p>&#xA;<p>For example, is it possible to add an owner to the Workspace and automatically give access to all Posts and Comments related to the workspace, if the user is the owner of the Workspace?</p>&#xA;<p>Are there any other options?</p>&#xA;",8551915,,8551915,2020-11-02 17:50:30,2020-12-05 12:20:00,AWS Amplify dynamic and scalable owner graphql schema,<database><amazon-web-services><authentication><graphql><aws-amplify>,1,0,0,2020-11-02 08:19:23
64695901,1,,,0,215,"<p>I have a GraphQL API that is governed by a permission system that I implemented.</p>&#xA;<p>I tried going with Graphql-shield but I didn't want to error out on the whole request if the client requests a forbidden field, so instead I implemented my own permission system.</p>&#xA;<p>Now, I need to solve a problem:</p>&#xA;<p>The way I implemented the permission system means that every field is checked if it is permitted and if it is not then null is returned. However, I would like to return some indication that the field was not actually null but that the field was &quot;not permitted&quot;.</p>&#xA;<p>I thought about doing it in two ways:</p>&#xA;<ul>&#xA;<li>During each check I append to some query-wide variable all fields that are not accessible and return it along with the query (probably in some middleware of some sort)</li>&#xA;<li>I extend all of the objects in my schema with a &quot;permitted&quot; field in which I return the value of the permission</li>&#xA;</ul>&#xA;<p>Any suggestions ?</p>&#xA;",4268531,,,,2020-11-05 15:12:42,"GraphQL implement ""not permitted""",<node.js><permissions><graphql><graphql-js><express-graphql>,1,0,0,2020-11-05 11:05:43
64701227,1,,,0,23,"<p>I am trying something like this to set the current source and then retrieve previous track using the source (Confirming that <code>currentPandoraStation</code> has an <code>id</code> ):</p>&#xA;<pre><code>self.setPandoraSource(sourceId: currentPandoraStation.id) { (status) in&#xA;                    guard status == true else { return }&#xA;                    self.skipToPreviousPandoraSource(trackViewModel: trackViewModel) { (track) in&#xA;                        self.doPlay(track, startPlayback: true, errorHandler: errorHandler)&#xA;                    }&#xA;                }&#xA;</code></pre>&#xA;<p>My SetSource query :</p>&#xA;<pre><code>mutation SetSource($deviceUuid: String!, $sourceId: String!) {&#xA;    playback {&#xA;    setSource (deviceUuid: $deviceUuid, sourceId: $sourceId) {&#xA;        id&#xA;        type&#xA;        current {&#xA;            ... on TrackItem {&#xA;                index&#xA;                ..(other values fetched)&#xA;            }&#xA;        }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>My previous query:</p>&#xA;<pre><code>mutation SkipToPreviousTrack($deviceUuid: String!, $sourceId: String!, $index: Int!, $elapsedTime: Float!) {&#xA;  playback {&#xA;    previous(deviceUuid: $deviceUuid, sourceId: $sourceId, index: $index, elapsedTime: $elapsedTime) {&#xA;      status&#xA;      current {&#xA;        ... on TrackItem {&#xA;            track {&#xA;                ... on Track {&#xA;                    ...TrackDetails&#xA;                }&#xA;            }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Please let me know if I have not understood the implementation correctly. Thanks.</p>&#xA;",1425178,,1425178,2020-11-05 16:41:24,2020-11-05 18:20:35,Getting error on previous query : [Ensure that source is set with /playback/source before this operation. (SOURCE_NOT_SET)],<swift><graphql><pandora>,1,0,0,2020-11-05 16:24:00
64701787,2,,64573847,0,,"<p>If the built in GQL operations exposed by Hasura don't allow you to get everything you need your best bet is extending the schema with a custom SQL <a href=""https://hasura.io/docs/1.0/graphql/core/schema/custom-functions.html"" rel=""nofollow noreferrer"">function</a> or <a href=""https://hasura.io/docs/1.0/graphql/core/schema/views.html"" rel=""nofollow noreferrer"">view</a></p>&#xA;",1364771,,,,2020-11-05 16:56:52,"",,0,0,0,2020-11-05 16:56:52
64708459,1,,,0,57,"<p>Following alongside the tutorials, but changing some semantic things, I'm getting this error from serverless when I deploy:</p>&#xA;<p><code>An error occurred: GraphQlDsUsersRole - Syntax errors in policy. (Service: AmazonIdentityManagement; Status Code: 400; Error Code: MalformedPolicyDocument; Request ID: 4b486514-e57d-4828-9edc-f9150d8806b4; Proxy: null).</code></p>&#xA;<p>Doing a search on my directory, this role seems to be autogenerated into the .serverless file. How is this generated, and what could I have done to mess it up?</p>&#xA;<p>My serverless.yml file:</p>&#xA;<pre><code>service: graphql-api&#xA;&#xA;plugins:&#xA;  - serverless-appsync-plugin&#xA;  - serverless-pseudo-parameters&#xA;&#xA;package:&#xA;  exclude:&#xA;    - node_modules/**&#xA;    - ./node_modules/**&#xA;&#xA;provider:&#xA;  name: aws&#xA;  runtime: nodejs12.x&#xA;  region: us-east-1&#xA;&#xA;custom:&#xA;  stage: dev&#xA;  appSync:&#xA;    name: ${self:service}-${self:custom.stage}&#xA;    authenticationType: API_KEY&#xA;    mappingTemplates:&#xA;      - dataSource: Users&#xA;        type: Query&#xA;        field: getUsers&#xA;        request: 'getUsers-request-mapping-template.txt'&#xA;        response: 'getUsers-response-mapping-template.txt'&#xA;    schema: schema.graphql&#xA;    dataSources:&#xA;      - type: AMAZON_DYNAMODB&#xA;        name: Users&#xA;        description: User Table&#xA;        config:&#xA;          tableName: { Ref: UserTable }&#xA;          serviceRoleARN: { Fn::GetAtt: [AppSyncDynamoDBServiceRole, Arn]}&#xA;          iamRoleStatements:&#xA;            - Effect: Allow&#xA;              Action:&#xA;                - 'dynamodb:*'&#xA;              Resources:&#xA;                - 'arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/Users'&#xA;                - 'arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/Users/*'&#xA;&#xA;resources:&#xA;  - ${file(resources/roles.yml)}&#xA;  - ${file(resources/dynamodb.yml)}&#xA;</code></pre>&#xA;<p>My roles.yml file:</p>&#xA;<pre><code>  AppSyncDynamoDBServiceRole:&#xA;    Type: &quot;AWS::IAM::Role&quot;&#xA;    Properties:&#xA;      RoleName: &quot;Dynamo-${self:service}-Role&quot;&#xA;      AssumeRolePolicyDocument:&#xA;        Version: &quot;2012-10-17&quot;&#xA;        Statement:&#xA;          - Effect: &quot;Allow&quot;&#xA;            Principal:&#xA;              Service:&#xA;                - &quot;appsync.amazonaws.com&quot;&#xA;                - &quot;dynamodb.amazonaws.com&quot;&#xA;            Action:&#xA;              - &quot;sts:AssumeRole&quot;&#xA;      Policies:&#xA;        - PolicyName: &quot;Dynamo-${self:service}-Policy&quot;&#xA;          PolicyDocument:&#xA;            Version: &quot;2012-10-17&quot;&#xA;            Statement:&#xA;              - Effect: &quot;Allow&quot;&#xA;                Action:&#xA;                  - &quot;dynamodb:Query&quot;&#xA;                  - &quot;dynamodb:BatchWriteItem&quot;&#xA;                  - &quot;dynamodb:GetItem&quot;&#xA;                  - &quot;dynamodb:DeleteItem&quot;&#xA;                  - &quot;dynamodb:PutItem&quot;&#xA;                  - &quot;dynamodb:Scan&quot;&#xA;                  - &quot;dynamodb:UpdateItem&quot;&#xA;                Resource:&#xA;                  - &quot;arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/Users&quot;&#xA;                  - &quot;arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/Users/*&quot;&#xA;</code></pre>&#xA;",14251691,,,,2020-12-19 18:11:28,"""An error occurred: GraphQlDsUsersRole - Syntax errors in policy."" when using serverless-appsync-plugin",<amazon-web-services><graphql><amazon-iam><serverless-framework><aws-appsync>,1,0,0,2020-11-06 03:30:55
64723612,1,,,0,300,"<p>I have an Amplify application, using a DynamoDB table with ~50 items and accessing it via a React app.</p>&#xA;<p>The initial (simplified) model:</p>&#xA;<pre><code>type Video @model&#xA;@key(name: &quot;ByOrganization&quot;, fields: [&quot;videoOrganizationId&quot;, &quot;id&quot;], queryField: &quot;videosByOrganization&quot;)&#xA;{&#xA;  id: ID!&#xA;  createdAt: AWSDateTime&#xA;  title: String!&#xA;  season: Int&#xA;  episode: Int&#xA;  owner: String&#xA;  editor: String&#xA;  organization: Organization @connection&#xA;  videoOrganizationId: ID&#xA;}&#xA;</code></pre>&#xA;<p>on the code I call this query on an Apollo React component:</p>&#xA;<pre><code>  &lt;Query&#xA;    query={query}&#xA;    variables={{&#xA;      {&#xA;         limit: 100,&#xA;      },&#xA;    }}&#xA;    pollInterval={5000}&#xA;  &gt;&#xA;      {children}&#xA;  &lt;/Query&gt;);&#xA;</code></pre>&#xA;<p>The limit of 100 items should be enough to bring all items from the database, however, it is not what happens, and it limit it to a number of items (~20-30 items)</p>&#xA;<p>I have tried adding different indexes to the table:</p>&#xA;<pre><code>@key(name: &quot;ByOrganizationSortedByCreated&quot;, fields: [&quot;videoOrganizationId&quot;, &quot;createdAt&quot;], queryField: &quot;videosByOrganizationSortedByCreated&quot;)&#xA;@key(name: &quot;ByOrganizationSortedByTitle&quot;, fields: [&quot;videoOrganizationId&quot;, &quot;title&quot;], queryField: &quot;videosByOrganizationSortedByTitle&quot;)&#xA;@key(name: &quot;ByOrganizationSortedByTitleSeasonEpisode&quot;, fields: [&quot;videoOrganizationId&quot;, &quot;title&quot;, &quot;season&quot;, &quot;episode&quot;], queryField: &quot;videosByOrganizationSortedByTitleSeasonEpisode&quot;)&#xA;</code></pre>&#xA;<p>None of them have worked&#xA;Some items that clearly should be returned on my query are left behind</p>&#xA;<p>I also was trying to find any reference about limitatinos on DynamoDb number of returned items, or some odd behaviour that I'm not aware of... no success</p>&#xA;<p>There is also some super weird behaviours&#xA;ie: if I just add a <code>sortDirection: 'DESC'</code>, it returns less results!</p>&#xA;<p>Does anyone has any idea why is this happening?</p>&#xA;",1742659,,,,2020-11-07 01:32:50,Amplify Graphql not respecting the limit on my query,<amazon-dynamodb><apollo><aws-appsync><amplify>,0,2,0,2020-11-07 01:32:50
64725801,1,64755799,,1,593,"<p>My problem is the security implementation of the entities when consumed through GraphQL, the queries are perfect, they return the necessary data, but the problem occurs when a query is generated and the many-to-one relationship is limited to having a role &quot;ROLE_ADMIN&quot;, the query returns the data even when the user has the role &quot;IS_AUTHENTICATED_ANONYMOUSLY&quot;</p>&#xA;<p><strong>How to add the security layer so that data from protected relationships cannot be obtained?</strong></p>&#xA;<blockquote>&#xA;<p>The product query must be seen without any role.</p>&#xA;</blockquote>&#xA;<p><em>Additional Information</em></p>&#xA;<p>GraphQL Query User Admin</p>&#xA;<pre><code>query {&#xA;    userAdmin(id: &quot;api/user_admins/1&quot;) {&#xA;        id&#xA;        name&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>GraphQL Query User Admin Result OK</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Sorry, but you don't have access&quot;,&#xA;      &quot;extensions&quot;: {&#xA;        &quot;category&quot;: &quot;graphql&quot;&#xA;      }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>GraphQL Query Product</p>&#xA;<pre><code>query {&#xA;    products {&#xA;        edges {&#xA;            node {&#xA;                name&#xA;                price&#xA;                user {&#xA;                    name&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>GraphQL Query Product Result <strong>FAILED</strong></p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;products&quot;: {&#xA;      &quot;edges&quot;: [&#xA;        {&#xA;          &quot;node&quot;: {&#xA;            &quot;name&quot;: &quot;GERLACH-HAAG&quot;,&#xA;            &quot;price&quot;: &quot;175&quot;,&#xA;            &quot;user&quot;: {&#xA;              &quot;name&quot;: &quot;Sidney Deane&quot; /** this information should not be seen **/&#xA;            }&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Entity Product Configuration</p>&#xA;<pre><code>&lt;?php&#xA;&#xA;/**&#xA; * @ApiResource(&#xA; *     graphql={&#xA; *          &quot;item_query&quot;,&#xA; *          &quot;collection_query&quot;,&#xA; *          &quot;delete&quot;={ &quot;security&quot; = &quot;is_granted('ROLE_ADMIN')&quot; },&#xA; *          &quot;create&quot;={ &quot;security&quot; = &quot;is_granted('ROLE_ADMIN')&quot; },&#xA; *          &quot;update&quot;={ &quot;security&quot; = &quot;is_granted('ROLE_ADMIN')&quot; }&#xA; *     }&#xA; * )&#xA; * @ORM\Table(name=&quot;TBL_PRODUCTS&quot;)&#xA; * @ORM\Entity(repositoryClass=ProductRepository::class)&#xA; * @ORM\HasLifecycleCallbacks()&#xA; */&#xA;class Product&#xA;{&#xA;    /**&#xA;     * @ORM\Id()&#xA;     * @ORM\GeneratedValue()&#xA;     * @ORM\Column(type=&quot;bigint&quot;, name=&quot;ID&quot;)&#xA;     */&#xA;    private $id;&#xA;&#xA;    /**&#xA;     * @ORM\Column(type=&quot;string&quot;, length=180, name=&quot;NAME&quot;)&#xA;     */&#xA;    private $name;&#xA;&#xA;    /**&#xA;     * @ORM\ManyToOne(targetEntity=&quot;App\Entity\UserAdmin&quot;)&#xA;     * @ORM\JoinColumn(name=&quot;USER&quot;, referencedColumnName=&quot;ID&quot;)&#xA;     */&#xA;    private $user;&#xA;</code></pre>&#xA;<p>Entity User Admin Configuration</p>&#xA;<pre><code>&lt;?php&#xA;&#xA;/**&#xA; * @ApiResource(&#xA; *     graphql={&#xA; *          &quot;item_query&quot;={ &quot;security&quot; = &quot;is_granted('ROLE_ADMIN')&quot; },&#xA; *          &quot;collection_query&quot;={ &quot;security&quot; = &quot;is_granted('ROLE_ADMIN')&quot; },&#xA; *          &quot;delete&quot;={ &quot;security&quot; = &quot;is_granted('ROLE_ADMIN')&quot; },&#xA; *          &quot;create&quot;={ &quot;security&quot; = &quot;is_granted('ROLE_ADMIN')&quot; },&#xA; *          &quot;update&quot;={ &quot;security&quot; = &quot;is_granted('ROLE_ADMIN')&quot; }&#xA; *     }&#xA; * )&#xA; * @ORM\Table(name=&quot;TBL_USERS_ADMIN&quot;)&#xA; * @ORM\Entity(repositoryClass=UserAdminRepository::class)&#xA; * @ORM\HasLifecycleCallbacks()&#xA; */&#xA;class UserAdmin implements UserInterface&#xA;{&#xA;    /**&#xA;     * @ORM\Id()&#xA;     * @ORM\GeneratedValue()&#xA;     * @ORM\Column(type=&quot;bigint&quot;, name=&quot;ID&quot;)&#xA;     */&#xA;    private $id;&#xA;&#xA;    /**&#xA;     * @ORM\Column(type=&quot;string&quot;, length=180, name=&quot;USERNAME&quot;)&#xA;     */&#xA;    private $username;&#xA;&#xA;    /**&#xA;     * @ORM\Column(type=&quot;string&quot;, length=180, name=&quot;PASSWORD&quot;)&#xA;     */&#xA;    private $password;&#xA;&#xA;    /**&#xA;     * @ORM\Column(type=&quot;string&quot;, length=180, name=&quot;NAME&quot;)&#xA;     */&#xA;    private $name;&#xA;</code></pre>&#xA;<p><strong>Please help !!!!</strong></p>&#xA;",13160474,,13160474,2020-11-07 08:30:08,2020-11-09 17:04:46,API Platform GraphQL Security in Relationships,<symfony><security><graphql><entity-relationship><api-platform.com>,2,0,0,2020-11-07 08:23:30
64734507,2,,61738204,0,,"<p>One way you can do this is to set up multiple authentication modes for your <code>api</code> (<code>amplify update api</code>), for instance you can set Cognito as the default auth mode with IAM as a secondary mode. Once that is set up (and <code>amplify push</code>ed) you can add the auth rule on your model:</p>&#xA;<pre><code>type Announcement @model @auth(&#xA;  rules: [&#xA;    { allow: owner }&#xA;    { allow: public, provider: iam, operations: [read] }&#xA;  ]&#xA;)&#xA;</code></pre>&#xA;<p>You also need to go into Cognito in your AWS console and enable unauthenticated access in your identity pool:</p>&#xA;<p><a href=""https://i.stack.imgur.com/EAFFt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EAFFt.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Double check the preferred roles are set up for both Auth and UnAuth roles, and then check ✅ that little box that says &quot;Enable access to unauthenticated identites&quot;.</p>&#xA;<p>Lastly, you'll need to <a href=""https://docs.amplify.aws/lib/graphqlapi/authz/q/platform/js#using-amplify-graphql-client"" rel=""nofollow noreferrer"">tweak your code to tell the Amplify graphQL client to use IAM for those unauthenicated queries</a>, something like:</p>&#xA;<pre><code>return API.graphql({ queries.MyQuery, variables, 'AWS_IAM' })&#xA;</code></pre>&#xA;<p>I've used this on a couple projects so far, hope that helps you get going!</p>&#xA;",1401562,,,,2020-11-08 03:18:10,"",,0,0,0,2020-11-08 03:18:10
64747543,1,,,0,312,"<p>I am very new to GraphQL, Appsync and Amplify. I am using AWS AppSync with Amplify to fetch records from a DynamoDB table via GraphQL queries. The front end is in ReactJS. Looking at some examples on the aws docs, it seems like I can fetch records back in JSON format, the same way it was stored in the table. I wanted to find some documentation or example on how to iterate through the recordset returned and perform some calculations on the data returned before it is sent back to the client. But I am not able to relate the documentation online to what I want to achieve.</p>&#xA;<p>For eg. if the json returned has 3 columns because there are only three columns in the backing DynamoDB table, but I would like to return a fourth column that is a computed value based on some external condition that works on the three columns returned from the graphql query's response. What kind of resolver will I need to use? I want to be able to send some parameters to this query as well so that based on the parameters sent in I can filter out the response and the client sees the data only after the custom business logic has been applied on it. Should I create an API that calls the GraphQL Api and then performs some logic within that API or use a DynamoDB resolver or a Lambda resolver or a GraphQL resolver? Amplify generates all the queries and mutations in the amplify project, so not sure where do I write these resolvers. I need all this logic to stay server side only. I am looking for a start point to investigate unless there is a working example available that will help me iterate thru the records returned by the GraphQL API on the server side and return data that has been customized and filtered.</p>&#xA;<p>Thanks for your help.</p>&#xA;",20358,,20358,2020-11-09 08:38:38,2020-11-12 03:14:41,Getting customized responses from GraphQL queries with AWS AppSync and Amplify,<reactjs><amazon-web-services><graphql><aws-amplify><aws-appsync>,1,0,0,2020-11-09 07:44:09
64748491,1,64818371,,-1,287,"<p>I'm using Laravel Lighthouse.</p>&#xA;<p>Following situation:&#xA;I have users, and those users should be allowed to access different datasets and run different mutations.</p>&#xA;<p>My solution:&#xA;The users are assigned roles, and those roles define what datasets the user can access and what mutations can be run.</p>&#xA;<p>I'm stuck at the implementation. What I could do is to write down all my Queries and Mutations in my schema, and have policies to restrict access to them.&#xA;What I would prefer is to have a way to see from the schema which role has access to what.</p>&#xA;<p>My idea:&#xA;Have a type for each role, and in that type associate what data can be accessed and what mutations can be run</p>&#xA;<p>Here's some example code that might explain what I'm going for, even though the syntax is probably invalid:</p>&#xA;<pre><code>type Query {&#xA;    me: User @auth&#xA;}&#xA;&#xA;type User {&#xA;    id: ID&#xA;    username: String&#xA;    first_name: String&#xA;    wage: Float&#xA;    password: String&#xA;&#xA;    roles: [Role]&#xA;    role(name: String! @eq): Role @find&#xA;}&#xA;&#xA;type Role {&#xA;    id: ID&#xA;    name: String&#xA;}&#xA;&#xA;type AdminRole {&#xA;    #set of users whose data the admin has access to&#xA;    #also directly restrict the amount of attributes that are accessible (e.g. password is not accessible)&#xA;    #this is invalid syntax, I know&#xA;    users: [Users] @all {&#xA;        id&#xA;        first_name&#xA;        wage&#xA;    }&#xA;    &#xA;    #a mutation the admin has access to&#xA;    updateUser(id: ID!, wage: Float): User @update&#xA;}&#xA;</code></pre>&#xA;<p>What query I'd like to run for the admin to get all wages:</p>&#xA;<pre><code>query {&#xA;    me {&#xA;        role(name: &quot;AdminRole&quot;) {&#xA;            users {&#xA;                wage&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>What mutation I'd like to run for the admin to update a user's wage:</p>&#xA;<pre><code>mutation {&#xA;    me {&#xA;        role(name: &quot;AdminRole&quot;) {&#xA;            updateUser(id: 7, wage: 10.00) {&#xA;                id&#xA;                wage&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>So instead of writing policies that restrict access to things, I'd rather just have everything defined implicitly in the schema. This would make defining and answering &quot;What can an admin do?&quot; more intuitive and easier to comprehend, because it's written down in a single spot, rather than several policies.</p>&#xA;<p>I assume this is not possible in the way I described above. What's the closest thing to it? Or are there issues with this approach?</p>&#xA;",3884259,,2702894,2020-11-09 11:57:14,2020-11-13 09:23:52,GraphQL define implicitly what a user can do,<laravel><graphql><laravel-lighthouse>,3,0,0,2020-11-09 08:54:24
64755799,2,,64725801,1,,"<p>The <code>security</code> attribute allows to define roles or permissions necessary to execute a given query. However, it doesn't define which relation available trough this query the user can access. To do so, you can use <a href=""https://api-platform.com/docs/core/graphql/#changing-the-serialization-context-dynamically"" rel=""nofollow noreferrer"">dynamic serialization groups</a>.</p>&#xA;<p>Basically, mark the properties requiring a special role to be returned in the response with a specific serialization group, such as <code>@Groups(&quot;admin&quot;)</code>, then create a dynamic serialization context builder to add the special group if the connected user has this special role:</p>&#xA;<pre><code>&lt;?php&#xA;&#xA;namespace App\Serializer;&#xA;&#xA;use ApiPlatform\Core\GraphQl\Serializer\SerializerContextBuilderInterface;&#xA;use App\Entity\Book;&#xA;use Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface;&#xA;&#xA;final class BookContextBuilder implements SerializerContextBuilderInterface&#xA;{&#xA;    private $decorated;&#xA;    private $authorizationChecker;&#xA;&#xA;    public function __construct(SerializerContextBuilderInterface $decorated, AuthorizationCheckerInterface $authorizationChecker)&#xA;    {&#xA;        $this-&gt;decorated = $decorated;&#xA;        $this-&gt;authorizationChecker = $authorizationChecker;&#xA;    }&#xA;&#xA;    public function create(?string $resourceClass, string $operationName, array $resolverContext, bool $normalization): array&#xA;    {&#xA;        $context = $this-&gt;decorated-&gt;create($resourceClass, $operationName, $resolverContext, $normalization);&#xA;        $resourceClass = $context['resource_class'] ?? null;&#xA;&#xA;        if ($resourceClass === Book::class &amp;&amp; isset($context['groups']) &amp;&amp; $this-&gt;authorizationChecker-&gt;isGranted('ROLE_ADMIN') &amp;&amp; false === $normalization) {&#xA;            $context['groups'][] = 'admin';&#xA;        }&#xA;&#xA;        return $context;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>In the master version (API Platform 2.6), <a href=""https://github.com/api-platform/core/pull/3503"" rel=""nofollow noreferrer"">the <code>security</code> attribute is now also available for properties</a>. Unfortunately, this feature is currently available only in the REST subsystem, but we will be very pleased to merge a Pull Request adding support for this attribute to the GraphQL subsystem.</p>&#xA;",1352334,,1352334,2020-11-09 17:04:46,2020-11-09 17:04:46,"",,0,0,0,2020-11-09 16:51:44
64757243,2,,64748491,0,,"<p>What about @can directive? You can use it on query, input or field. With little modifying can be able to set role instead of permission.</p>&#xA;<p>Second idea is serving other schema to different authenticated users based on roles.</p>&#xA;",14505288,,,,2020-11-09 18:25:46,"",,0,0,0,2020-11-09 18:25:46
64760320,1,,,0,494,"<p>I've been following the AWS GraphQL CLI guide for setting up an API for my app, but am having trouble with connections.</p>&#xA;<p>The following is my current Graphql schema, with some attributes removed</p>&#xA;<pre><code>type Employee @model {&#xA;  id: ID!&#xA;  employment: [Employment!] @connection(name: &quot;byEmployeeIDByCompanyID&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Company @model {&#xA;  id: ID!&#xA;  employees: [Employment!] @connection(name: &quot;byCompanyIDByDateHired&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Employment @model&#xA;  @key(name: &quot;byEmployeeIDByCompanyID&quot;, fields: [&quot;employeeID&quot;, &quot;companyID&quot;], queryField: &quot;employmentByEmployeeIDByCompanyID&quot;) {&#xA;  id: ID!&#xA;  companyID: ID!&#xA;  employeeID: ID!&#xA;  company: Company! @connection(fields: [&quot;companyID&quot;])&#xA;  employee: Employee! @connection(fields: [&quot;employeeID&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>When I query Employees or Companys, [Employment] always returns an empty array. Do I need to edit the resolvers for these fields? They should work out of the box, no?</p>&#xA;<p>From my understanding, using @key with 'name' and multiple 'fields' creates a secondary index on the table, and specifying that key with @connection tells the connection to use that key instead of the tables primary index. In the &quot;byEmployeeIDByCompanyID&quot; key, for example, employeeID is the partition key, and companyID is the sort key. A query on the &quot;employmentByEmployeeIDByCompanyID&quot; queryField with an employeeID but no companyID returns all the employments for a given employee, which is what I want, so why isn't the connection working?</p>&#xA;",14608886,,,,2020-11-10 15:28:16,AWS Amplify GraphQL - One to Many connections return empty list when queried,<amazon-web-services><graphql><connection><amplify>,1,1,0,2020-11-09 22:46:20
64771827,2,,64760320,0,,"<p>I found success in editing the resolvers, so I'm going to go with this for now. For Employee.employment, I added:</p>&#xA;<pre><code>&quot;index&quot;: &quot;byEmployeeIDByCompanyID&quot;,&#xA;</code></pre>&#xA;<p>to the request mapping template, and changed the query from:</p>&#xA;<pre><code>{&#xA;  &quot;expression&quot;: &quot;#partitionKey = :partitionKey&quot;,&#xA;  &quot;expressionNames&quot;: {&#xA;      &quot;#partitionKey&quot;: &quot;id&quot;&#xA;  },&#xA;  &quot;expressionValues&quot;: {&#xA;      &quot;:partitionKey&quot;: {&#xA;          &quot;S&quot;: &quot;$context.source.id&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>to</p>&#xA;<pre><code>{&#xA;  &quot;expression&quot;: &quot;#partitionKey = :partitionKey&quot;,&#xA;  &quot;expressionNames&quot;: {&#xA;      &quot;#partitionKey&quot;: &quot;employeeID&quot;&#xA;  },&#xA;  &quot;expressionValues&quot;: {&#xA;      &quot;:partitionKey&quot;: {&#xA;          &quot;S&quot;: &quot;$context.source.id&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",14608886,,,,2020-11-10 15:28:16,"",,0,0,0,2020-11-10 15:28:16
64802081,1,,,0,1373,"<p>Greeting all!&#xA;I have a client application in React that uses an AppSync GraphQL API back end.  I have added storage to amplify and can upload files to the storage. When a file is uploaded to the Storage a Lambda function is triggered and I am able to iterate through the contents. I have configured my AWS AppSync API with Cognito User Pool authentication&#xA;My requirement is I need to make GraphQL mutation from the Lambda Function(written in python) to an AppSync API.</p>&#xA;<p>The requirement in Short:</p>&#xA;<ul>&#xA;<li>Upload an Excel file to the S3 Storage bucket using AppSync</li>&#xA;<li>Trigger a lambda function(python) on upload to extract contents of the Excel file</li>&#xA;<li>Send a GraphQL mutation to the AppSync GraphQL from the Lambda function with the contents of the file using the schema as required.</li>&#xA;</ul>&#xA;<p>I need to use the Cognito user credentials, as I need to get details of the user making the mutations/</p>&#xA;<p>With the last update, I am able to upload content to the Client app, which dumps the Excel sheet in the S3 bucket triggering the Lambda function.</p>&#xA;<p>I tried to use &quot;Assume role&quot; but was getting the below error</p>&#xA;<p>[ERROR] ClientError: An error occurred (AccessDenied) when calling the AssumeRole operation: User: arn:aws:sts::#############:assumed-role/S3Accessfunction/uploadProcessor is not authorized to perform: sts:AssumeRole on resource: AWS:#######################:CognitoIdentityCredentials</p>&#xA;",13086665,,13086665,2020-11-12 10:38:51,2020-11-26 13:04:45,"Perform AppSync Mutation from Lambda(Python) Fuction, Triggered from S3 Upload",<amazon-web-services><aws-lambda><graphql><aws-appsync>,1,0,0,2020-11-12 10:23:11
64866704,2,,64856206,1,,"<p><code>amplify codegen models</code> uses CLI codegen to generate models to be used for the new Amplify API and Amplify DataStore categories, which is separate from the generated code used by the AppSync client.</p>&#xA;<p>To generate models for Amplify API, try using the following command: <code>amplify add api</code>, to add a new API. When prompted to edit your models, follow the instructions to edit the <code>schema.graphql</code> file in specified path.</p>&#xA;<p>If you try <code>amplify codegen models</code> at this point, then you will find that the models are generated.</p>&#xA;",12627236,,,,2020-11-16 22:34:24,"",,0,2,0,2020-11-16 22:34:24
64919983,1,66007471,,1,344,"<p>I searched the database but failed to find any hints. I try to use my aws amplify graphql API with an external service, however, as my platform is secured by Cognito (email &amp; PW) I need some elegant way to authenticate an existing Cognito user in a Userpool for the graphql API (Cognitor user = owner in DynamoDB) to make simple queries to retrieve infos to show in a webpage. Is there a simple way to do this without doing much? What options exist?</p>&#xA;<p>At the moment I get a Unathorised Message when I connect via URL in a browser.</p>&#xA;<p><code>{ &quot;errors&quot; : [ { &quot;errorType&quot; : &quot;UnauthorizedException&quot;, &quot;message&quot; : &quot;Valid authorization header not provided.&quot; } ] }</code></p>&#xA;<p>I am really missing the trick here.</p>&#xA;",12338291,,,,2021-02-02 10:05:42,Amplify API GraphQL external webpage,<amazon-web-services><graphql><amplify>,1,1,0,2020-11-19 21:04:17
64938956,1,,,4,655,"<p>I am in the process of transitioning from <code>Cognito</code> to <code>Auth0</code>. For some of my <code>AppSync</code> queries and mutations, I have applied the @aws_auth directive, which can include a list of <code>Cognito</code> groups to control the level of access.</p>&#xA;<p>The example below displays a mutation, called <code>createEvent</code>, which only allows users who are in the <code>Cognito</code> groups, tracker_admin and pilot_admin, to execute this mutation.</p>&#xA;<p>Here is an example:</p>&#xA;<pre><code>createEvent(input: CreateEventInput!): Event&#xA;    @aws_auth(cognito_groups:[&quot;tracker_admin&quot;, &quot;pilot_admin&quot;])&#xA;</code></pre>&#xA;<p>I have successfully configured an additional authentication provider (<code>OPENID_CONNECT</code>) with <code>Auth0</code> and added the directive <code>@aws_oidc</code> to my <code>GraphQL</code> schema. In my <code>Auth0</code> dashboard I have set up scopes which get added to the user's access token based on their roles when they authenticate with my application client.</p>&#xA;<p>My goal is to update my schema to use the OIDC authentication and to apply  permissions to the directive like so:</p>&#xA;<pre><code>directive @aws_oidc(&#xA;    permissions: [String]&#xA;) on OBJECT | FIELD_DEFINITION&#xA;&#xA;createEvent(input: CreateEventInput!): Event&#xA;    @aws_oidc(permissions:[&quot;create:event&quot;])&#xA;</code></pre>&#xA;<p>My <code>Auth0</code> access_token does have a <code>&quot;permissions&quot;</code> field which includes a list of the scopes that the user has. These list of permissions come into my lambda resolver in the event context in the <code>&quot;identity&quot;</code> under the <code>&quot;claims&quot;</code>.</p>&#xA;<p>How can I accomplish this authorization at the schema level with a directive for <code>@aws_oidc</code> just like I currently have with the <code>@aws_auth</code> for User Pool Cognito Groups?</p>&#xA;",2958518,,2958518,2020-12-09 22:11:09,2021-08-26 14:15:25,How to check roles or permissions on AWS AppSync OIDC directive at the Graphql schema level,<graphql><openid-connect><auth0><directive><aws-appsync>,1,0,0,2020-11-21 01:30:03
64986498,2,,61389024,2,,"<p>I just tried it, using flutter with simple graphql code from this <a href=""https://github.com/CoderJava/flutter-graphql-sample"" rel=""nofollow noreferrer"">https://github.com/CoderJava/flutter-graphql-sample</a>.&#xA;And so far it works for flutter web (Flutter 1.24.0-10.2.pre • channel beta &amp; graphql: ^3.1.0):</p>&#xA;<p><a href=""https://i.stack.imgur.com/Runzh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Runzh.png"" alt=""enter image description here"" /></a></p>&#xA;",10627261,,10627261,2020-11-24 12:32:41,2020-11-24 12:32:41,"",,0,3,0,2020-11-24 12:26:59
65021475,2,,65004578,0,,"<p>The issue got resolved by removing all the data from the Employee collection.&#xA;The reason is collection was holding the mixed data</p>&#xA;<ol>&#xA;<li>Data inserted by Java program in below format.</li>&#xA;</ol>&#xA;<pre><code>{&#xA; &quot;Employee&quot;: {&#xA;    &quot;name&quot;: &quot;ABC&quot;,&#xA;    &quot;account&quot;: {&#xA;        &quot;balance&quot;:&quot;1000&quot;,&#xA;         &quot;limit&quot;:&quot;10000&quot;,&#xA;         &quot;_class&quot;:&quot;com.model.CurrentAccount&quot;&#xA;        }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<ol start=""2"">&#xA;<li>Manually inserted data, in below format.</li>&#xA;</ol>&#xA;<pre><code>{&#xA; &quot;Employee&quot;: {&#xA;    &quot;name&quot;: &quot;ABC&quot;,&#xA;    &quot;account&quot;: {&#xA;        &quot;balance&quot;:&quot;1000&quot;,&#xA;         &quot;limit&quot;:&quot;10000&quot;&#xA;        }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>As manually inserted data dont have _class field, the mongo db was not able to map the abstract account type object to its concrete class and was throwing exception &quot;java.lang.InstantiationError: com.model.Account&quot;.&#xA;Hence after removing all the data or manual entries from the Employee collection, the java program started fetching the data from the Mongo collection.</p>&#xA;",2726766,,,,2020-11-26 11:46:26,"",,0,0,0,2020-11-26 11:46:26
65031634,1,65033953,,0,26,"<p>I'm scanning the site's sitemap using apollo server. but when I send the request from playground, it gives results without waiting for the function to finish. How can I hold the scan for a result? And how can I show the scanned url array of the site instantly on the client side?</p>&#xA;<p>If I use graphql subscription, I need to save the data one by one. this would be a lot of data.</p>&#xA;<p>Note: the system is working and data is being saved in mongoose.</p>&#xA;<pre><code>scanSitemap: async (parent, { id, data }, { WebLink }) =&gt; {&#xA;&#xA;    let dataset = [];&#xA;&#xA;    const generator = await SitemapGenerator('https://example.org', {&#xA;      stripQuerystring: false,&#xA;      filepath: null&#xA;    });&#xA;&#xA;    generator.start();&#xA;&#xA;    generator.on('add', (url) =&gt; {&#xA;      dataset.push(url);&#xA;      console.log(dataset);&#xA;    });&#xA;&#xA;    generator.on('done', () =&gt; {&#xA;      return new WebLink({&#xA;        status: 1, domain: 'test', websiteId: id, urls: dataset&#xA;      }).save();&#xA;    });&#xA;&#xA;  },&#xA;</code></pre>&#xA;",7586040,,,,2020-11-27 08:17:05,how can I show the scanned url array of the site instantly on the client side?,<node.js><graphql><apollo-server>,1,0,0,2020-11-27 03:12:36
65035102,1,65075769,,0,322,<p>I have field 'Timer' and 'Name' in a Table. I want to set it up as when a row is added to that table. The row should autodelete after the timer runs out. How can I set it up? I'm using Hasura as my GraphQL client and having a React Application?</p>&#xA;,11246120,,11246120,2020-11-27 09:52:54,2020-11-30 14:50:03,Auto delete data from a table?,<sql><reactjs><graphql><delete-operator><hasura>,1,4,0,2020-11-27 09:45:03
65035593,2,,61844630,1,,"<p>The env var is called <code>API_&lt;APP_NAME&gt;_GRAPHQLAPIKEYOUTPUT</code>. It appears only if you enable API KEY authentication for your GraphQL API.</p>&#xA;<p>Here is an example of what is printed into the console when you add access permission for a Lambda function to access a GraphQL API:</p>&#xA;<pre><code>You can access the following resource attributes as environment variables from your Lambda function&#xA;        API_AMPLIFYTEST_GRAPHQLAPIENDPOINTOUTPUT&#xA;        API_AMPLIFYTEST_GRAPHQLAPIIDOUTPUT&#xA;        API_AMPLIFYTEST_GRAPHQLAPIKEYOUTPUT&#xA;</code></pre>&#xA;<p>Also, the Amplify CLI generates a comment on top of your Lambda function index file with the list of useful env vars.</p>&#xA;<p>I tested this with Amplify CLI version 4.36.0.</p>&#xA;",1023876,,,,2020-11-27 10:18:46,"",,0,0,0,2020-11-27 10:18:46
65040338,1,,,0,1144,"<p>I'm experimenting with AppSync + DynamoDB. I want to have the following types in my GraphQL Schema:</p>&#xA;<pre><code>type User {&#xA;    user_id: String!&#xA;}&#xA;&#xA;type Box {&#xA;    name: String!&#xA;    user: User!&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>How can I create, in DynamoDB, a table storing items pointing to another table (In my case, I want the field <code>user</code> of the table <code>BoxTable</code> to be a reference to a user in the table <code>UserTable</code>?</p>&#xA;<p>How can I, in AppSync, define the above schema? When I set <code>user: User!</code>, I get the error <code>Expected User! to be a GraphQL input type.</code>?</p>&#xA;",8494473,,,,2020-11-28 01:44:21,How to use custom input types in AppSync GraphQL schema?,<graphql><amazon-dynamodb><aws-appsync>,1,0,0,2020-11-27 16:04:14
65045645,2,,65040338,1,,"<p>As per my understanding of your question, these are my answers.</p>&#xA;<blockquote>&#xA;<p>How can I create, in DynamoDB, a table storing items pointing to another table</p>&#xA;</blockquote>&#xA;<p>DynamoDB is not a relational database and does not offer foreign keys or table joins. Therefore, to achieve what you have mentioned in your post, you would still require two calls to DynamoDB to get all the information for the <code>Box</code> i.e. first get the <code>Box</code> item from <code>BoxTable</code> and then get <code>user</code> from <code>UserTable</code> based on <code>user_id</code>. If your use case is such that you get <code>user</code> first, then you can get the <code>Box</code> using filter by <code>user_id</code>.</p>&#xA;<p>Now to the second part of your post,</p>&#xA;<blockquote>&#xA;<p>How can I, in AppSync, define the above schema?</p>&#xA;</blockquote>&#xA;<p>With DynamoDB unit resolvers, you can query against a single table (outside of DynamoDB Batch Operations but those are reserved for bulk use cases).</p>&#xA;<p>One way of doing this is by defining your schema that should look something like this;</p>&#xA;<pre><code>type User {&#xA;    user_id: String!&#xA;}&#xA;&#xA;type Box {&#xA;    name: String!&#xA;    user: User!&#xA;}&#xA;&#xA;input BoxInput {&#xA;    name: String!&#xA;    user: UserInput!&#xA;}&#xA;&#xA;input UserInput {&#xA;    user_id: String!&#xA;}&#xA;&#xA;type Mutation {&#xA;    createBox(input: BoxInput): Box&#xA;}&#xA;&#xA;type Query {&#xA;    getBox(input: BoxInput): Box&#xA;}&#xA;</code></pre>&#xA;<p>And this is how you can run query and mutation;</p>&#xA;<pre><code>mutation createBox {&#xA;        createBox(input: {&#xA;            name: &quot;abc&quot;&#xA;            user: { user_id: &quot;1234-abcd-5678-efgh&quot;}&#xA;        }){&#xA;            name&#xA;            user { user_id }&#xA;        }&#xA;    }&#xA;&#xA;query getBox {&#xA;        getBox(input: {&#xA;            name: &quot;abc&quot;&#xA;            user: { user_id: &quot;1234-abcd-5678-efgh&quot;}&#xA;        }){&#xA;            name&#xA;            user { user_id }&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;<p>So, beware of the above query and mutation. These will show <code>user</code> as null unless you attach a separate resolver with you <code>user</code> type within your <code>Box</code> type. For example:</p>&#xA;<pre><code>Query that returns Box --&gt; Resolver&#xA;&#xA;type Box {&#xA;    name&#xA;    user --&gt; Attach resolver to get user_id from your UserTable&#xA;}&#xA;</code></pre>&#xA;<p>Other way is to utilize the pipeline resolvers in which you can create multiple functions, each of which can use the results of the previous function and query a database. These functions run in an order you specify. For example:</p>&#xA;<ol>&#xA;<li>Function to get <code>Box</code> from <code>BoxTable</code>.</li>&#xA;<li>Function to get <code>user</code> from <code>UserTable</code> by using <code>user_id</code> from <code>ctx.prev.result</code>.</li>&#xA;<li>And finally consolidating above two result into one JSON object depending upon <code>Box</code> type in your schema.</li>&#xA;</ol>&#xA;",1819065,,,,2020-11-28 01:44:21,"",,0,0,0,2020-11-28 01:44:21
65052980,1,65053267,,0,286,"<p>I'm using React to create a web application. I have a DynamoDB table in AWS and an AppSync API configured.</p>&#xA;<p>I'm using the following to make an api call:</p>&#xA;<pre><code>&#xA;const [items, setItems] = useState([]);&#xA;&#xA;  useEffect(() =&gt; {&#xA;    (async () =&gt; {&#xA;      const apiGroups = await API.graphql(graphqlOperation(queries.getNtig, { PK: &quot;Status&quot;, SK: &quot;Active&quot; }));&#xA;      setItems(apiGroups.data.getNtig.Group);&#xA;    })();&#xA;  }, []);&#xA;</code></pre>&#xA;<p>Later on I use the results to create a dropdown. I had this working perfectly with Rest but I'm trying to switch to using GraphQL.</p>&#xA;<p>I see the JSON response in the webconsole:</p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;        &quot;getNTIG&quot;: {&#xA;            &quot;PK&quot;: &quot;Status&quot;,&#xA;            &quot;SK&quot;: &quot;Active&quot;,&#xA;            &quot;Group&quot;: [&#xA;                &quot;Group1&quot;,&#xA;                &quot;Group2&quot;&#xA;            ]&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>I always get <code>Unhandled Rejection (TypeError): apiGroups.data.getNtig is undefined</code></p>&#xA;<p>Any help greatly appreciated.</p>&#xA;",13616777,,,,2020-11-28 18:43:28,Undefined object result from GraphQL api call - Web console shows JSON response received,<json><reactjs><api><graphql>,1,3,0,2020-11-28 18:14:37
65064766,1,,,6,1261,"<p>For use cases like authentication it may be of use to add custom directives to a GraphQL schema as shown in the documentation: <a href=""https://www.graphql-java.com/documentation/v16/sdl-directives"" rel=""noreferrer"">https://www.graphql-java.com/documentation/v16/sdl-directives</a></p>&#xA;<p>For example the Employee type has a salary field that had a directive on it meaning that only the manager role is allowed to read it:</p>&#xA;<pre class=""lang-graphql prettyprint-override""><code>directive @auth(role: String!) on FIELD_DEFINITION&#xA;&#xA;type Employee {&#xA;  id: ID&#xA;  name: String!&#xA;  startDate: String!&#xA;  salary: Float @auth(role: &quot;manager&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>From the client side I would like to be able to read these directives on the Employee type using an Introspection query.</p>&#xA;<p>Is that possible at all? Would you be able provide a sample query for the example above?</p>&#xA;",7743,,2054072,2021-05-04 04:12:59,2021-05-04 04:12:59,Is there any way to read GraphQL Directives on a Type with Query Introspection?,<graphql><introspection>,1,2,0,2020-11-29 20:20:44
65069729,1,,,1,238,"<p>H,&#xA;for a project, I need to get the profile picture from the URL of an Instagram user.</p>&#xA;<p>I can get it by <a href=""http://www.instagram.com/%7Busername%7D/?__a=1"" rel=""nofollow noreferrer"">www.instagram.com/{username}/?__a=1</a>&#xA;but since it's not documented and googling reveals that this may violate the terms I'm currently looking for an alternative.&#xA;The backend would query the pictures and I can't require every account to manually allow usage of the profile picture. Is there a nice graphql(8/9) way of doing this? It works perfectly with FB&#xA;I would welcome pointers in the right direction.</p>&#xA;<p>Thanks,&#xA;Hellfiend</p>&#xA;",2107478,,,,2020-11-30 07:49:11,How to get profile pictures from instagram,<graphql><instagram><instagram-api><instagram-graph-api>,0,0,0,2020-11-30 07:49:11
65086427,1,,,2,950,<p>We are facing issue while creating AWS GraphQL AppSync API using Amplify. We are not able to connect to the existing tables of DynamoDB. Using GraphQL transformers (e.g &quot;@model&quot;) create new table in DynamoDB.&#xA;Here is my schema code.</p>&#xA;<pre><code>type Planet @model @key(fields: [&quot;guid&quot;])&#xA; {&#xA;  guid: String!&#xA;  name: String!&#xA;  description: String&#xA;}&#xA;</code></pre>&#xA;<p>This schema code creates new table in DynamoDB whereas I want to connect API to the existing table e.g. &quot;Planet&quot;.</p>&#xA;,9191573,,1819065,2020-12-03 19:53:15,2020-12-03 19:53:15,Ability to specify existing DynamoDB source when adding GraphQL API,<reactjs><graphql><amazon-dynamodb><aws-amplify><aws-appsync>,1,0,0,2020-12-01 07:37:41
65094253,2,,65093831,0,,"<p>As the error indicates, your operation includes a variable named <code>$picture</code>, but you have not provided such a variable. When calling <code>mutate</code>, the only variable you're providing is one named <code>$file</code>. You should instead do:</p>&#xA;<pre><code>const response = await mutate({&#xA;  variables: { picture: file },&#xA;});&#xA;</code></pre>&#xA;",6024220,,,,2020-12-01 16:14:03,"",,0,1,0,2020-12-01 16:14:03
65114552,2,,60237441,5,,"<p>I've found this process to work well.</p>&#xA;<ol>&#xA;<li><p>Create a clean empty local postgresql database and Hasura instance. To update an existing local database, <a href=""https://stackoverflow.com/a/2057179/430128"">drop it and recreate it</a>.</p>&#xA;</li>&#xA;<li><p>Dump the schema and data from your existing Hasura server (as per the <a href=""https://stackoverflow.com/a/61133329/430128"">answer</a> by @protob, but with <code>clean_output</code> set so that manual changes to the output do not have to be made. See <a href=""https://hasura.io/docs/latest/api-reference/pgdump/"" rel=""nofollow noreferrer"">pgdump</a> for details.</p>&#xA;<pre><code>curl --location --request POST 'https://example.com/v1alpha1/pg_dump' \&#xA;  --header 'Content-Type: application/json' \&#xA;  --header 'X-Hasura-Role: admin' \&#xA;  --header 'Content-Type: text/plain' \&#xA;  --header 'x-hasura-admin-secret: {SECRET}' \&#xA;  --data-raw '{ &quot;opts&quot;: [&quot;-O&quot;, &quot;-x&quot;,&quot;--inserts&quot;,  &quot;--schema&quot;, &quot;public&quot;], &quot;clean_output&quot;: true}' &gt; hasura-db.sql&#xA;</code></pre>&#xA;</li>&#xA;<li><p>Import the schema and data locally:</p>&#xA;<pre><code>psql -h localhost -U postgres &lt; hasura-db.sql&#xA;</code></pre>&#xA;</li>&#xA;<li><p>The local database has all the migrations because we copied the latest schema, so just mark them as applied:</p>&#xA;<pre class=""lang-bash prettyprint-override""><code># A simple `hasura migrate apply --skip-execution` may work too!&#xA;for x in $(hasura migrate status | grep &quot;Not Present&quot; | awk '{ print $1 }'); do&#xA;  hasura migrate apply --version $x --skip-execution&#xA;done&#xA;&#xA;# and confirm the updated status&#xA;hasura migrate status&#xA;</code></pre>&#xA;</li>&#xA;<li><p>Now finally apply the Hasura metadata using the hasura CLI:</p>&#xA;<pre><code>hasura metadata apply&#xA;</code></pre>&#xA;</li>&#xA;</ol>&#xA;<p>Enjoy your new instance!</p>&#xA;",430128,,430128,2022-10-18 14:40:45,2022-10-18 14:40:45,"",,0,1,0,2020-12-02 19:07:54
65117437,2,,65086427,1,,"<p>According to Amplify <a href=""https://docs.amplify.aws/cli/graphql-transformer/model#usage"" rel=""nofollow noreferrer"">documentation</a>,</p>&#xA;<blockquote>&#xA;<p>A single @model directive configures the following AWS resources:</p>&#xA;<ul>&#xA;<li>An Amazon DynamoDB table with PAY_PER_REQUEST billing mode enabled by&#xA;default.</li>&#xA;<li>An AWS AppSync DataSource configured to access the table&#xA;above.</li>&#xA;<li>An AWS IAM role attached to the DataSource that allows AWS&#xA;AppSync to call the above table on your behalf.</li>&#xA;<li>Up to 8 resolvers&#xA;(create, update, delete, get, list, onCreate, onUpdate, onDelete) but&#xA;this is configurable via the queries, mutations, and subscriptions&#xA;arguments on the @model directive.</li>&#xA;<li>Input objects for create, update,&#xA;and delete mutations.</li>&#xA;<li>Filter input objects that allow you to filter&#xA;objects in list queries and connection fields.</li>&#xA;<li>For list queries the&#xA;default number of objects returned is 100. You can override this&#xA;behavior by setting the limit argument.</li>&#xA;</ul>&#xA;</blockquote>&#xA;<p>That is why your tables are being generated. If you want to connect you API to an existing table, this is what AWS says <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html"" rel=""nofollow noreferrer""> [Ref.]</a>:</p>&#xA;<blockquote>&#xA;<p>You can let AWS AppSync provision DynamoDB resources on your behalf.&#xA;Or, if you prefer, you can connect your existing tables to a GraphQL&#xA;schema by creating a data source and a resolver.</p>&#xA;</blockquote>&#xA;<p>With that being said, if you remove <code>@model</code> directive from the <code>type</code>, you will then have to define datasource, queries, mutations and their respective resolvers by yourself.</p>&#xA;<p>Coming back to your question on how to connect existing DynamoDB table to your GraphQL API, you have the following options.</p>&#xA;<ul>&#xA;<li>Add AppSync DataSource in your Amplify project.</li>&#xA;<li>For existing API, you can create Datasource using AWS AppSync console.</li>&#xA;<li>Also for existing API, you can create Datasource by using Amplify CLI.</li>&#xA;</ul>&#xA;<p><strong>Amplify project/GraphQL Transform:</strong></p>&#xA;<p>For example, in your stack’s <code>Resources</code> block of your API directory, you can define datasource as:</p>&#xA;<pre><code>&quot;DynamoDBDataSource&quot;: {&#xA;   &quot;Type&quot;:&quot;AWS::AppSync::DataSource&quot;,&#xA;   &quot;Properties&quot;:{&#xA;      &quot;ApiId&quot;:{&#xA;         &quot;Ref&quot;:&quot;&lt;YOUR API ID&gt;&quot;&#xA;      },&#xA;      &quot;Name&quot;:&quot;DynamoDbDataSource&quot;,&#xA;      &quot;Type&quot;:&quot;AMAZON_DYNAMODB&quot;,&#xA;      &quot;ServiceRoleArn&quot;:&quot;&lt;SERVICE ROLE ARN&gt;&quot;,&#xA;      &quot;DynamoDBConfig&quot;:{&#xA;         &quot;AwsRegion&quot;:&quot;&lt;DYNAMODB REGION&gt;&quot;,&#xA;         &quot;TableName&quot;:&quot;Planet&quot;&#xA;      }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p><strong>Datasource using Console:</strong>&#xA;This might require you to have extra permission but other than that, this is pretty straightforward. This is the <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/attaching-a-data-source.html"" rel=""nofollow noreferrer"">link</a> to their official guide.</p>&#xA;<p><strong>Datasource using CLI:</strong>&#xA;Since you are using Amplify, following is an example of how you can add Datasource using CLI. {<a href=""https://docs.aws.amazon.com/cli/latest/reference/appsync/create-data-source.html"" rel=""nofollow noreferrer"">Ref.</a>}</p>&#xA;<pre><code>aws appsync create-data-source --api-id &lt;YOUR API ID&gt; --name &lt;NAME OF YOUR DATASOURCE&gt; &#xA;--type AMAZON_DYNAMODB --dynamodb-config &lt;PLAIN JSON AS ABOVE OR LOCATION TO YOUR JSON CONFIG FILE&gt; &#xA;--service-role-arn &lt;ARN OF YOUR IAM ROLE&gt;  --profile default&#xA;</code></pre>&#xA;<p>Once your Datasource is sorted out, you can create resolvers and map them with your queries and mutations for which you can find good documentation on this <a href=""https://docs.amplify.aws/cli/graphql-transformer/resolvers"" rel=""nofollow noreferrer"">link</a>.</p>&#xA;",1819065,,,,2020-12-02 23:02:45,"",,0,0,0,2020-12-02 23:02:45
65142702,1,65142730,,0,77,"<p>I'm seeing this response in the webconsole logs on receipt of a graphQL mutation api call. This is fine because I'm expecting the error and trying to handle it.</p>&#xA;<p>Does this mean &quot;0&quot; is a key here? and if it is, <code>response.0.errorType</code> is invalid syntax.</p>&#xA;<pre><code>    &quot;0&quot;: {&#xA;        &quot;errorType&quot;: &quot;DynamoDB:ConditionalCheckFailedException&quot;,&#xA;        &quot;errorInfo&quot;: null,&#xA;        &quot;locations&quot;: [&#xA;            {&#xA;                &quot;line&quot;: 2,&#xA;                &quot;column&quot;: 3,&#xA;                &quot;sourceName&quot;: null&#xA;            }&#xA;        ],&#xA;        &quot;message&quot;: &quot;The conditional request failed (Service: DynamoDb, Status Code: 400, Request ID: BUEAM6ACKQBPHKDHGNASM49C4BVV4KQNSO5AEMVJF66Q9ASUAAJG, Extended Request ID: null)&quot;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Is there a correct syntax to retrieve the &quot;error.Type&quot; value? Thanks for any help, in advance.</p>&#xA;",13616777,,,,2020-12-05 01:40:21,"React, AWS GraphQL error handling - JSON response",<json><reactjs><error-handling><graphql>,1,1,0,2020-12-04 11:24:08
65146015,1,,,1,237,"<p>So, I am experimenting with Graphql and Fauna DB for the first time, and I need to make a query to populate a table in a Reactjs App.</p>&#xA;<p>The data I need to pass to the table component is an array that looks like this:</p>&#xA;<pre><code>const data = [&#xA;  {&#xA;    account: '1',&#xA;    ... other fields,&#xA;    children:[&#xA;      {&#xA;        account: '1.1'&#xA;        children: [ ... ]&#xA;      }&#xA;    ]&#xA;]&#xA;</code></pre>&#xA;<p>Right now my graphql schema looks like this:</p>&#xA;<pre><code>type Account @collection(name: &quot;accounts&quot;) {&#xA;  name: String!&#xA;  code: String!&#xA;}&#xA;&#xA;type Query {&#xA;  allAccounts: [Account!]! @index(name: &quot;all_accounts&quot;)&#xA;  getAccount(code: String!): Account&#xA;}&#xA;</code></pre>&#xA;<p>I am not sure what would be the best way to do this. One way would be to just store all accounts at the same level, and then structure the data in the front-end (I can loop trough the results and nest the objects according to the account number). But if there is a better way to do it taking advantage of Graphql (or Fauna) I would like to try it.</p>&#xA;<p>Thanks in advance.</p>&#xA;",6740501,,,,2021-08-25 20:50:26,Graphql schema with nested instances of same type,<graphql><faunadb>,1,1,0,2020-12-04 15:11:14
65157869,2,,56518569,0,,"<p>It isn't the student id that is the problem. It has to do with this connection:</p>&#xA;<pre><code>class: Class! @connection(name: &quot;ClassStudents&quot;)&#xA;</code></pre>&#xA;<p>The Class item is a GraphQL connected type. It isn't an id. You probably have a column that is something like: <code>classStudentId</code> or <code>studentClassId</code>. I am still learning exactly how this column gets auto-created in AppSync, but it is how AppSync manages the connection in DynamoDB. You have to specify that id column, not <code>class:</code>.</p>&#xA;<p>eg:</p>&#xA;<pre><code>addStudent = async (classData) =&gt; {&#xA;  try {&#xA;    let user = await Auth.currentAuthenticatedUser();&#xA;    const emailAttribute = user.attributes.email;&#xA;    const studentObj = {&#xA;      name: this.state.studentName,&#xA;      email: emailAttribute,&#xA;      studentClassId: classData.id,&#xA;    }&#xA;    await API.graphql(graphqlOperation(mutations.createStudent, { input: studentObj }));&#xA;  } catch (err) {&#xA;    console.error(err);&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<hr />&#xA;<h2>My Example</h2>&#xA;<p>As an example, I can share the problem I just worked through that led me here while I was trying to fix it:</p>&#xA;<p><strong>Schema</strong>:</p>&#xA;<pre><code>type Message @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner, operations: [create, read, update, delete] }&#xA;      { allow: groups, groups: [&quot;everyone&quot;], operations: [read] }&#xA;    ]&#xA;  )&#xA;  @key(fields: [&quot;associationId&quot;, &quot;createdAt&quot;]) {&#xA;  id: ID!&#xA;  associationId: String!&#xA;  content: String!&#xA;  createdAt: AWSDateTime!&#xA;  author: User! @connection(name: &quot;UserMessages&quot;, keyField: &quot;owner&quot;)&#xA;}&#xA;</code></pre>&#xA;<p><strong>Mutation</strong>:</p>&#xA;<pre><code>export const createMessage = /* GraphQL */ `&#xA;  mutation CreateMessage(&#xA;    $input: CreateMessageInput!&#xA;    $condition: ModelMessageConditionInput&#xA;  ) {&#xA;    createMessage(input: $input, condition: $condition) {&#xA;      id&#xA;      associationId&#xA;      content&#xA;      createdAt&#xA;      owner&#xA;      author {&#xA;        id&#xA;        firstName&#xA;        lastName&#xA;        email&#xA;        phone&#xA;        avatar {&#xA;          bucket&#xA;          region&#xA;          key&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>Normally, I could create a message like this:</p>&#xA;<pre><code>const submitData = {&#xA;  associationId: association.id,&#xA;  content: fields.message,&#xA;}&#xA;await API.graphql(graphqlOperation(CreateMessage, { input: submitData }))&#xA;</code></pre>&#xA;<p>Amplify will get the current user id from Cognito (using auth) and will create a unique id for me.</p>&#xA;<p><strong>However</strong>, since I specified that <code>owner</code> would be the connection key field, I now have to add the user's id to the owner column manually unfortunately, I can't leave it empty and rely on Amplify anymore.</p>&#xA;<p>I have made owner a <em>DynamoDB requirement</em> to connect to the User table instead of just a <em>Cognito connection</em> field that Amplify can use. I could specify the user id in a separate column like <code>authorId</code>, but since the User table uses the Cognito id anyway, I am trying to condense these into one column... So now I have to do this, or I get the same error you were getting:</p>&#xA;<pre><code>const submitData = {&#xA;  associationId: association.id,&#xA;  content: fields.message,&#xA;  owner: user.id,&#xA;}&#xA;await API.graphql(graphqlOperation(CreateMessage, { input: submitData }))&#xA;</code></pre>&#xA;<p>Your situation is obviously different, but you need to find out how it is actually storing the <code>Class</code> id and manually specify it. Or you can force it to use a key field that you want like <code>classId</code>, but you can't use the connection item itself. That isn't how it is stored.</p>&#xA;",76672,,76672,2020-12-05 14:39:35,2020-12-05 14:39:35,"",,0,0,0,2020-12-05 14:16:53
65159947,1,65163258,,0,568,"<p>For example If I have some code like this:</p>&#xA;<pre><code>import gql from 'graphql-tag'&#xA;&#xA;const getUserMeta = /* GraphQL */ `&#xA;  query GetUserMeta($owner: String!) {&#xA;    getUserMeta(owner: $owner) {&#xA;      familyName&#xA;      givenName&#xA;      workAddress&#xA;      facebookUrl&#xA;      owner&#xA;      createdAt&#xA;      updatedAt&#xA;      careers {&#xA;        items {&#xA;          id&#xA;          company&#xA;          companyUrl&#xA;          showCompany&#xA;          owner&#xA;          createdAt&#xA;          updatedAt&#xA;        }&#xA;        nextToken&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;const ast = gql(getUserMeta)&#xA;&#xA;&#xA;// for example if I want to remove the `showCompany` node&#xA;// I expect some method like this would work... but there is no such a method..&#xA;// ast.removeNodeByPath('GetUserMeta.careers.showCompany')&#xA;&#xA;apolloClient.query(query:ast, variables: {limit: 100})&#xA;</code></pre>&#xA;",3577446,,3577446,2020-12-06 10:17:40,2020-12-06 10:17:40,How to remove unwanted node from a parsed graphql?,<graphql><graphql-js>,1,3,0,2020-12-05 17:35:22
65170138,1,,,1,157,"<p>Very new to graphQL (and MongoDB), and I am wondering how to reference an another object in graph QL.</p>&#xA;<p>I have two objects in two collections in MongoDB...</p>&#xA;<pre><code>{&#xA;    _id: 1,&#xA;    companies: [&#xA;        {&#xA;            id: 1,&#xA;            name: 'Google'&#xA;        },&#xA;        {&#xA;            id: 2,&#xA;            name: 'Apple'&#xA;        }&#xA;    ]&#xA;}&#xA;&#xA;{&#xA;    _id: 2,&#xA;    jobs: [&#xA;        {&#xA;            id: 1,&#xA;            title: 'Designer'&#xA;        },&#xA;        {&#xA;            id: 2,&#xA;            name: 'Developer'&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>The Designer job is posted by google, and I want to include that in the returned object from GraphQL (I am using the 'id: 1' as a reference I guess? Presume ObjectID might be the way to go instead tho )</p>&#xA;<p>How would I go about that?</p>&#xA;<p>Ideally I want to return</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;job&quot;: {&#xA;      &quot;id&quot;: 1,&#xA;      &quot;title&quot;: &quot;Designer&quot;,&#xA;      &quot;company&quot;: {&#xA;        id: 1,&#xA;        name: &quot;Google&quot;&#xA;       }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But not sure how to go about it, I currently have...</p>&#xA;<pre><code>resolvers.js&#xA;  export const resolvers = {&#xA;    Query: {&#xA;      jobs: async (_parent, {}, context) =&gt; {&#xA;        const jobs = await context.db&#xA;          .collection('jobs')&#xA;          .findOne()&#xA;          return jobs.jobs&#xA;      },&#xA;      companies: async (_parent, {}, context) =&gt; {&#xA;        const companies = await context.db&#xA;          .collection('companies')&#xA;          .findOne()&#xA;          return companies.companies&#xA;      },&#xA;      job: async (_parent, { id }, context) =&gt; {&#xA;        const job = await context.db.collection('jobs').findOne()&#xA;        return job.jobs.find((job) =&gt; job.id === Number(id))&#xA;      },&#xA;    },&#xA;  }&#xA;&#xA;typeDefs.js&#xA;&#xA;export const typeDefs = gql`&#xA;  type Job {&#xA;    _id: ID&#xA;    id: Int&#xA;    title: String&#xA;  }&#xA;  type Company {&#xA;    _id: ID&#xA;    id: Int&#xA;    name: String&#xA;  }&#xA;  type Query {&#xA;      jobs: [Job]&#xA;      companies: [Company]&#xA;      job(id: Int): Job&#xA;  }&#xA;`&#xA;</code></pre>&#xA;<p>But not sure how to tie these in together? I am using Apollo / GraphQL / MongoDB / NextJS and essentially set up <a href=""https://levelup.gitconnected.com/setting-up-graphql-api-with-mongodb-and-apollo-server-for-a-nextjs-app-cec7a9baedbf"" rel=""nofollow noreferrer"">very close to this</a></p>&#xA;<p>Thanks in advance for any help or guidance!</p>&#xA;",14762698,,,,2020-12-06 16:05:04,Merge or 'reference' and object into another through GraphQL?,<mongodb><graphql><apollo>,0,0,0,2020-12-06 16:05:04
65179788,1,65187969,,1,871,"<p>I have two http endpoints setup:</p>&#xA;<pre><code>GET /users/{userId}&#xA;GET /users/{userId}/notes/{noteId}&#xA;</code></pre>&#xA;<p>The GET User returns a payload which includes a list of multiple <code>noteId</code>s, which can be used to make multiple requests to the GET Note endpoint.</p>&#xA;<p>I am trying to configure Appsync to be able to fetch all of this data in a single query, but I can't get the list to populate with objects.</p>&#xA;<p>Schema:</p>&#xA;<pre><code>type Query {&#xA;  getUser(userId: String!): User&#xA;  getNote(userId: String!, noteId: String!): Note&#xA;}&#xA;&#xA;type User {&#xA;  userId: ID!&#xA;  firstName: String!&#xA;  lastName: String!&#xA;  notes: [Note]&#xA;}&#xA;&#xA;type Note {&#xA;  noteId: ID!&#xA;  noteText: String!&#xA;  createdDatetime: Int!&#xA;}&#xA;</code></pre>&#xA;<p>I have a data source setup for each of the endpoints and I have a resolver for <code>getUser</code> and for <code>getNote</code> - I also have a resolver for <code>User.notes</code> which is the same as <code>getNote</code>. These resolvers have this response mapping:</p>&#xA;<pre><code>#if($ctx.error)&#xA;  $util.error($ctx.error.message, $ctx.error.type)&#xA;#end&#xA;#if($ctx.result.statusCode == 200)&#xA;    $ctx.result.body&#xA;#else&#xA;    $utils.appendError($ctx.result.body, &quot;$ctx.result.statusCode&quot;)&#xA;#end&#xA;</code></pre>&#xA;<p>My resolver for the GET Note (including <code>User.note</code> field resolver) endpoint looks like this:</p>&#xA;<pre><code>{&#xA;    &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;    &quot;method&quot;: &quot;GET&quot;,&#xA;    &quot;resourcePath&quot;: $util.toJson(&quot;/prod/users/$ctx.args.userId/notes/$ctx.args.noteId&quot;),&#xA;    &quot;params&quot;:{&#xA;        &quot;headers&quot;:{&#xA;            &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>I can see from the logs, that Appsync attempts to run the GET Note resolver, but that the resource path doesn't seem to get populated with any ids? (I can see this in the custom Authorizer on the endpoint, which logs out the method ARN which still includes the <code>$ctx.args...</code></p>&#xA;<p>It feels like this is a common use case, but I can't find a solution, or examples anywhere. Is my approach correct, or do I need a different solution?</p>&#xA;",3589383,,3589383,2020-12-07 15:19:56,2020-12-07 19:15:50,How to configure Appsync to retrieve data from a HTTP endpoint to populate a list?,<amazon-web-services><graphql><aws-api-gateway><aws-appsync><vtl>,1,2,0,2020-12-07 10:15:05
65184394,2,,65182508,2,,"<p>You can use track a Postgres view. Your view would have as many fields as you'd like calculated in SQL and tracked as a separate &quot;table&quot; on your graphql api.</p>&#xA;<p>I am giving examples below based on a simplification where you have just table called contacts with just a single field called: <code>id</code> which is an auto-integer. I am just adding the id of the current contact to the avg(id) (a useless endeavor to be sure; just to illustrate...). Obviously you can customize the logic to your liking.</p>&#xA;<p>A simple implementation of a view would look like this (make sure to hit 'track this' in hasura:</p>&#xA;<pre><code>CREATE OR REPLACE VIEW contact_with_custom AS&#xA;SELECT id, (SELECT AVG(ID) FROM contacts) + id as custom FROM contacts;&#xA;</code></pre>&#xA;<p>See <a href=""https://hasura.io/docs/1.0/graphql/core/schema/views.html"" rel=""nofollow noreferrer"">Extend with views</a></p>&#xA;<p>Another option is to use a computed field. This is just a postgres function that takes a row as an argument and returns some data and it just adds a new field to your existing 'table' in the Graphql API that is the return value of said function. (you don't 'track this' function; once created in the SQL section of Hasura, you add it as a 'computed field' under 'Modify' for the relevant table) Important to note that this option does not allow you to filter by this computed function, whereas in a view, all fields are filterable.</p>&#xA;<p>In the same schema mentioned above, a function for a computed field would look like this:</p>&#xA;<pre><code>CREATE OR REPLACE FUNCTION custom(contact contacts)&#xA;RETURNS Numeric AS $$&#xA;    SELECT (SELECT AVG(ID) from contacts ) + contact.id&#xA;$$ LANGUAGE sql STABLE;&#xA;</code></pre>&#xA;<p>Then you select this function for your computed field, naming it whatever you'd like...</p>&#xA;<p>See <a href=""https://hasura.io/docs/1.0/graphql/core/schema/computed-fields.html"" rel=""nofollow noreferrer"">Computed fields</a></p>&#xA;",10290918,,,,2020-12-07 15:19:05,"",,0,0,0,2020-12-07 15:19:05
65205860,2,,60068428,0,,"<p>I do not know from the CLI but you can use Curl from windows/linux console.</p>&#xA;<p>It is described in <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/security.html#api-key-authorization"" rel=""nofollow noreferrer"">AWS at API_KEY Authorization</a> as:</p>&#xA;<pre><code>curl -XPOST -H &quot;Content-Type:application/graphql&quot; -H &quot;x-api-key:ABC123&quot; -d '{ &quot;query&quot;: &quot;query { movies { id } }&quot; }' https://YOURAPPSYNCENDPOINT/graphql&#xA;</code></pre>&#xA;<p>Just replace the 3 fields with the ones that you can find in your AWS account at the APPSYNC SERVICE:</p>&#xA;<ol>&#xA;<li>API_KEY</li>&#xA;<li>APP END POINT</li>&#xA;<li>Query</li>&#xA;</ol>&#xA;<p>If you use <strong>windows</strong>, remember that it <strong>doesn't like single quotation marks</strong>, so try using just &quot; and \&quot; instead of ' for the query, for example:</p>&#xA;<ol>&#xA;<li><p>Ubuntu console:</p>&#xA;<pre><code> curl -XPOST -H &quot;Content-Type:application/graphql&quot; -H &quot;x-api-key:**YOUR_API_KEY**&quot; -d **'{ &quot;query&quot;:&quot;query { listTodos { items { title } } }&quot; }'** https://**YOUR_END_POINT**.amazonaws.com/graphql&#xA;</code></pre>&#xA;</li>&#xA;<li><p>Windows console (check query quotes):</p>&#xA;<pre><code> curl -XPOST -H &quot;Content-Type:application/graphql&quot; -H &quot;x-api-key:**YOUR_API_KEY**&quot; -d **&quot;{ \\&quot;query\\&quot;:\\&quot;query { listTodos { items { title } } }\\&quot; }&quot;** https://**YOUR_END_POINT**.amazonaws.com/graphql&#xA;</code></pre>&#xA;</li>&#xA;</ol>&#xA;",2726494,,1839439,2020-12-08 19:50:49,2020-12-08 19:50:49,"",,0,1,0,2020-12-08 19:45:37
65219284,1,,,1,171,"<p>I am beginning a project with Amplify DataStore and modeling data that has a many-to-many relationship that also requires authorization. I'm having a hard time finding examples of M2M <em>with auth</em>, there are none in the documentation.</p>&#xA;<p>Here is a <a href=""https://docs.amplify.aws/lib/datastore/relational/q/platform/js#many-to-many"" rel=""nofollow noreferrer"">MTM example from the DataStore docs</a>, I want to prevent users that are not PostEditors from being able to load Posts. Currently the plan is to use Cognito, but open to other solutions. How would this be achieved?</p>&#xA;<pre><code>&#xA;type Post @model {&#xA;  id: ID!&#xA;  title: String!&#xA;  editors: [PostEditor] @connection(keyName: &quot;byPost&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type PostEditor&#xA;  @model(queries: null)&#xA;  @key(name: &quot;byPost&quot;, fields: [&quot;postID&quot;, &quot;editorID&quot;])&#xA;  @key(name: &quot;byEditor&quot;, fields: [&quot;editorID&quot;, &quot;postID&quot;]) {&#xA;  id: ID!&#xA;  postID: ID!&#xA;  editorID: ID!&#xA;  post: Post! @connection(fields: [&quot;postID&quot;])&#xA;  editor: User! @connection(fields: [&quot;editorID&quot;])&#xA;}&#xA;&#xA;type User @model {&#xA;  id: ID!&#xA;  username: String!&#xA;  posts: [PostEditor] @connection(keyName: &quot;byEditor&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;</code></pre>&#xA;",2124039,,2124039,2020-12-09 16:48:15,2021-05-04 19:36:39,Add auth to many to many Amplify GraphQL DataStore connection,<graphql><authorization><aws-amplify><aws-appsync>,0,3,0,2020-12-09 15:00:11
65235260,1,,,1,1123,"<p>I have this GraphQL Selection Set inside my AppSync Lambda Resolver:</p>&#xA;<pre><code>{&#xA;  recommendationId&#xA;  items {&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I need the selection set inside <code>items</code>, which will be heavily nested.</p>&#xA;<p>How can I get this output?</p>&#xA;<pre><code>{&#xA;  id&#xA;  name&#xA;}&#xA;</code></pre>&#xA;<p>Context(replaced business object with <code>Object</code>):</p>&#xA;<p>schema.graphql</p>&#xA;<pre><code>type Object {&#xA; id: ID!&#xA; name: String!&#xA;}&#xA;&#xA;type Query {&#xA; getObjectsById(objectsById: ObjectsByID!): [Object] &#xA; listRecommendedObjects(personId: ID!): RecommendedObjects&#xA;}&#xA;&#xA;input ObjectsByID {&#xA;  ids: [ID!]!&#xA;}&#xA;&#xA;type RecommendedObjects {&#xA;  items: [Object]&#xA;  recommendationId: String&#xA;}&#xA;</code></pre>&#xA;<p>Inside resolver:</p>&#xA;<pre><code>const buildQuery = (selectionSetGraphQL) =&gt;&#xA;  `query MyQuery($objectsById: ObjectsByID!) {&#xA;    getObjectsById(objectsById: $objectsById) ${selectionSetGraphQL}&#xA;  }`&#xA;</code></pre>&#xA;<p>Goal:</p>&#xA;<p>Call listRecommendedObjects which will invoke custom lambda that will talk to AWS Personalize to get item IDs.&#xA;Then, i want to use the selection set of <code>Object</code> to call getObjectsById within that Lambda to get the data of Item IDs from Personalize</p>&#xA;",14336440,,14336440,2020-12-10 16:15:21,2020-12-20 13:21:26,GraphQL selection set parsing,<javascript><graphql><aws-appsync>,1,18,0,2020-12-10 13:15:50
65241210,1,65294196,,6,413,"<p>I have three models <strong>User</strong>, <strong>Post</strong>, <strong>Vote</strong></p>&#xA;<blockquote>&#xA;<p><a href=""https://i.stack.imgur.com/XsAxE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XsAxE.png"" alt=""schema"" /></a></p>&#xA;</blockquote>&#xA;<p>I tried to create a role-based authorization where the author (the user who creates a post/blog) can't vote for their own post/blog. To identify users, I used Hasura session variables <code>X-Hasura-User-Id</code>. Configuring (Row insert) Permission Rules for Vote table by,</p>&#xA;<blockquote>&#xA;<p><a href=""https://i.stack.imgur.com/lUTr9.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lUTr9.png"" alt=""picture"" /></a></p>&#xA;</blockquote>&#xA;<h3>Error:</h3>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;extensions&quot;: {&#xA;        &quot;path&quot;: &quot;$.selectionSet.insert_Vote_one.args.object&quot;,&#xA;        &quot;code&quot;: &quot;permission-error&quot;&#xA;      },&#xA;      &quot;message&quot;: &quot;Check constraint violation. insert check constraint failed&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>But which given constraint violation for the author and the other users when they try to vote a post/blog. How to solve that issue for the latter case using Permission Rules?</p>&#xA;<h2>Update</h2>&#xA;<h3>Auth SetUp</h3>&#xA;<p>I use one of my auth server(express) to create user and access_token which contain the <code>user.id</code> as Hasura session variables <code>X-Hasura-User-Id</code>.</p>&#xA;<p>Then I use this access_token to maintain role-based authorization:</p>&#xA;<p><a href=""https://i.stack.imgur.com/Bcw68.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Bcw68.png"" alt=""access_token"" /></a></p>&#xA;",13355189,,13355189,2020-12-12 12:39:46,2020-12-14 18:07:06,Hasura: Allow users to not vote for their own post,<graphql><hasura>,1,2,0,2020-12-10 19:40:08
65267610,2,,65231013,0,,"<p>As @Myz mention in their comment, the solution was to use a Pipeline Resolver.</p>&#xA;<p>In the end, I pushed the header into the <code>$ctx.stash</code> object (which is available to all functions within a Pipeline Resolver) - I did this using:</p>&#xA;<pre><code>$util.qr($ctx.stash.put(&quot;bearerToken&quot;, &quot;Bearer $ctx.request.headers.Authorization&quot;))&#xA;</code></pre>&#xA;<p>I was then able to access this value in each of the Functions (i.e. the child resolvers) using: <code>&quot;$ctx.stash.bearerToken&quot;</code></p>&#xA;",3589383,,,,2020-12-12 17:10:31,"",,0,0,0,2020-12-12 17:10:31
65275785,2,,56795531,0,,"<p>For strapi <code>3.3.x</code> and probably future versions<br />&#xA;Slightly efficient way (queries role one time, uses query to filter permissions)</p>&#xA;<pre class=""lang-js prettyprint-override""><code>'use strict';&#xA;&#xA;module.exports = async () =&gt; {&#xA;  const publicRole = await getRoleByName('Public')&#xA;  await grantPermissions(publicRole, 'application', 'images', ['upload', 'remove'])  // upload, remove in 'images' controller&#xA;  await grantPermissions(publicRole, 'application', 'project') // any action in 'project' controller                      &#xA;};&#xA;&#xA;async function getRoleByName(name) {&#xA;  return strapi.query('role', 'users-permissions').findOne({ name }, [])&#xA;}&#xA;&#xA;async function getPermissions(role, permissionType, controller, actions = null) {&#xA;  const permissionQuery = strapi.query('permission', 'users-permissions')&#xA;  const permissionRequest = {&#xA;    _limit: 1000,&#xA;    role: role.id,&#xA;    type: permissionType,&#xA;    controller: controller&#xA;  }&#xA;&#xA;  if (actions) {&#xA;    permissionRequest.action_in = Array.isArray(actions) ? actions : [actions]&#xA;  }&#xA;&#xA;  return permissionQuery.find(permissionRequest, [])&#xA;}&#xA;&#xA;async function grantPermissions(role, permissionType, controller, actions) {&#xA;  if (actions &amp;&amp; !Array.isArray(actions)) {&#xA;    actions = [ actions ]&#xA;  }&#xA;  strapi.log.info(`Setting '${controller}' [${actions ? actions.join(', ') : '*'}] permissions for '${role.name}'`)&#xA;&#xA;  const permissionQuery = strapi.query('permission', 'users-permissions')&#xA;  const permissions = await getPermissions(role, permissionType, controller, actions)&#xA;  if (permissions.length === 0) {&#xA;    throw new Error(`Error enabling permissions: ${role.name}, ${permissionType}, ${controller}, ${actions}`)&#xA;  }&#xA;&#xA;  for (const { id } of permissions) {&#xA;    await permissionQuery.update({ id }, { enabled: true })&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",2823972,,2823972,2020-12-18 18:03:34,2020-12-18 18:03:34,"",,0,0,0,2020-12-13 12:48:27
65286499,1,65289507,,1,400,"<p>I want to permanently delete a role in Hasura's permissions. For example here i would like to remove &quot;service_admin&quot; role</p>&#xA;<p><a href=""https://i.stack.imgur.com/GMjxq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GMjxq.png"" alt=""enter image description here"" /></a></p>&#xA;",10160302,,10160302,2020-12-14 11:31:19,2020-12-14 13:05:17,Remove role in Hasura,<graphql><hasura>,1,0,0,2020-12-14 09:26:40
65289114,2,,65269246,0,,"<p>You are right, with Prismic you need to create the related documents (for instance your Artist) in order to be able to refer to him/her in their Songs.&#xA;I noted that as a feature request for the Product team, but the editing experience might become unclear for Editors if you start creating new documents from a document that you are editing...&#xA;Maybe you could just open another tab to create the linked Artist, then attach it to the song when you finished on that tab?</p>&#xA;<p>About Author: We recommend to create Authors as entities that you make a Content Relationship to in your Post document.&#xA;This is because it's hard to assign an Author to a document (is it the person who published the last version of the article, or the one who last edited the document before it was published, or the one who create the first published version of the documents (the other might just have corrected a few typos)&#xA;Also, it allows you to add more meta-data about the Author: Have an Avatar image, Role, Team, etc.</p>&#xA;<p>Other than that, on the Prismic side, it seems to fit your other requirements. Let us know which tool you chose eventually!</p>&#xA;",11635557,,,,2020-12-14 12:34:39,"",,0,1,0,2020-12-14 12:34:39
65311799,1,,,0,409,"<p>I would like to know if there are any examples on setting up graphQL for elasticsearch to run the search from NodeJs. I have elastic search working (tested search with the curl calls) and have built my nodejs/React JS app. I want to add search functionality here.&#xA;I would like to know if there are any samples on using graphQL with elasticsearch. I have been following the steps in this medium.com <a href=""https://medium.com/@andrewrymaruk/elasticsearch-graphql-react-node-express-how-cb2c2cc708f8"" rel=""nofollow noreferrer"">article</a>. Would like to know if there are any examples for adding resolvers, I am assuming that is what is needed to actually run queries and retrieve results from graphQl.</p>&#xA;<p>Appreciate any input on this.&#xA;Thanks</p>&#xA;",14832182,,,,2020-12-15 18:41:17,Integrating Elasticsearch with NodeJS with GraphQL,<node.js><reactjs><elasticsearch><graphql>,0,2,0,2020-12-15 18:41:17
65316214,1,,,4,993,"<p>I'm using Amazon Amplify to create a function that accesses the contentment of an AppSync GraphQL endpoint.&#xA;Using the command line I create the new function and API and I can call it correctly from my front end application, however, I keep receiving this error:</p>&#xA;<pre><code>2020-12-16T01:39:40.524Z    979abb8d-4d64-4929-937a-03b0cb495174    INFO    error posting to appsync:  Error: Request failed with status code 401&#xA;    at createError (/var/task/node_modules/axios/lib/core/createError.js:16:15)&#xA;    at settle (/var/task/node_modules/axios/lib/core/settle.js:17:12)&#xA;    at IncomingMessage.handleStreamEnd (/var/task/node_modules/axios/lib/adapters/http.js:244:11)&#xA;    at IncomingMessage.emit (events.js:326:22)&#xA;    at endReadableNT (_stream_readable.js:1223:12)&#xA;    at processTicksAndRejections (internal/process/task_queues.js:84:21) {&#xA;  config: {&#xA;    url: 'https://y63v24inqneirizeuiig7x5g54.appsync-api.us-east-1.amazonaws.com/graphql',&#xA;    method: 'post',&#xA;    data: '{&quot;query&quot;:&quot;query listCompetitions {\\n  listCompetitions {\\n    items {\\n      createdAt\\n      id\\n      likes\\n      updatedAt\\n      votes\\n      websiteImageKey\\n      websiteUrl\\n      user {\\n        username\\n        imageKey\\n      }\\n      websiteDescription\\n    }\\n  }\\n}\\n&quot;}',&#xA;    headers: {&#xA;      Accept: 'application/json, text/plain, */*',&#xA;      'Content-Type': 'application/json;charset=utf-8',&#xA;      'x-api-key': '7aeiasrvb5bczhmlt2nnbpfuyi',&#xA;      'User-Agent': 'axios/0.21.0',&#xA;      'Content-Length': 284&#xA;    },&#xA;</code></pre>&#xA;<p>The code I'm using to call GraphQL from my function is this from this <a href=""https://docs.amplify.aws/guides/functions/graphql-from-lambda/q/platform/js#query"" rel=""nofollow noreferrer"">link</a>.</p>&#xA;<pre><code>const graphqlData = await axios({&#xA;      url: process.env.API_MAINDATA_GRAPHQLAPIENDPOINTOUTPUT,&#xA;      method: &quot;post&quot;,&#xA;      headers: {&#xA;        &quot;x-api-key&quot;: process.env.API_MAINDATA_GRAPHQLAPIIDOUTPUT,&#xA;      },&#xA;      data: {&#xA;        query: print(listCompetition),&#xA;      },&#xA;    });&#xA;</code></pre>&#xA;<p>The URL and KEY is added to the env by Amplify, I already added API_KEY auth for the API in question, so I can't understand why I still get <code>401 error</code>.</p>&#xA;<p>One thing I notice is that the document says to use:</p>&#xA;<p><code>'x-api-key': process.env.API_&lt;YOUR_API_NAME&gt;_GRAPHQLAPIKEYOUTPUT</code></p>&#xA;<p>However <code>_GRAPHQLAPIKEYOUTPUT</code> is not been generated so I use <code>_GRAPHQLAPIIDOUTPUT</code> instead, not sure if this is something that changed or if I'm missing an env constant.</p>&#xA;",5030400,,13337635,2020-12-16 03:29:41,2022-04-09 21:54:33,Failing to call GraphQL from Lambda using Amazon Amplify,<amazon-web-services><aws-lambda><graphql><aws-amplify><aws-appsync>,2,2,0,2020-12-16 01:55:32
65327823,1,65398968,,0,165,"<p>Curious if I constructed and tracked this m2m relationship correctly. Seems strange that every object in those arrays are named <code>&quot;user&quot;: {...}</code> or <code>&quot;pip&quot;: {...}</code></p>&#xA;<p><a href=""https://i.stack.imgur.com/5dxCx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5dxCx.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Seems like these both should work</p>&#xA;<p><a href=""https://i.stack.imgur.com/vjrkW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vjrkW.png"" alt=""enter image description here"" /></a></p>&#xA;<p><strong>Update with screenshots:</strong></p>&#xA;<p>Users table relationships:&#xA;<a href=""https://i.stack.imgur.com/JdMe9.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/JdMe9.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Pips table relationships:&#xA;<a href=""https://i.stack.imgur.com/mtbnH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mtbnH.png"" alt=""enter image description here"" /></a></p>&#xA;",175825,,175825,2020-12-20 01:21:14,2020-12-21 19:41:22,How to simplify Hasura's tracked relationship query responses?,<graphql><hasura>,1,5,0,2020-12-16 17:03:07
65335048,1,,,0,780,"<p>I have a many-to-many relationship in amplify with the following schema</p>&#xA;<pre><code>type Blog &#xA;@model &#xA;@searchable &#xA;{&#xA;  id: ID!&#xA;  title: String!&#xA;  tags: [BlogTag] @connection(keyName: &quot;byBlog&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Tag &#xA;@model &#xA;@searchable&#xA;{&#xA;  id: ID!&#xA;  name: String!&#xA;  blogs: [BlogTag] @connection(keyName: &quot;byTag&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type BlogTag &#xA;@model &#xA;@key(name: &quot;byBlog&quot;, fields: [&quot;blogID&quot;, &quot;tagID&quot;]) &#xA;@key(name: &quot;byTag&quot;, fields: [&quot;tagID&quot;, &quot;blogID&quot;]) &#xA;{&#xA;  id: ID!&#xA;  blogID: ID!&#xA;  tagID: ID!&#xA;  blog: Blog! @connection(fields: [&quot;blogID&quot;])&#xA;  tag: Tag! @connection(fields: [&quot;tagID&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>And when I try to delete a BlogTag entry, I get the following error:</p>&#xA;<pre><code>message: &quot;Conflict resolver rejects mutation.&quot;&#xA;path: [&quot;deleteBlogTag&quot;]&#xA;</code></pre>&#xA;<p>I try to delete the entry with the following code:</p>&#xA;<pre><code>import { API } from &quot;aws-amplify&quot;;&#xA;import {deleteBlogTag} from &quot;../graphql/mutations&quot;;&#xA;&#xA;...&#xA;await API.graphql({&#xA;      query: deleteBlogTag,&#xA;      variables: { input: { id: blogTagId } },&#xA;    });&#xA;</code></pre>&#xA;<p>I don't understand why there would be a conflict. If I were deleting a blog, and there'd be BlogTags pointing to that blog, then of course that's a conflict. But why is it a conflict deleting a BlogTag? Is it something I am missing in the schema?</p>&#xA;",8126328,,,,2021-09-21 22:02:40,AWS Amplify many-to-many - delete not working,<amazon-web-services><graphql><many-to-many><amplify>,1,2,0,2020-12-17 05:13:55
65342101,1,65343822,,3,1069,"<p>I have my AppSync api set up using aws-cdk and am not using their amplify framework. I am trying to figure out how / if I can generate Typescript definitions from my AppSync <code>schema.graphql</code> file while not using amplify, i.e. no access to <code>amplify codegen</code> command. I did try installing and running it, but I assume amplify expects files to be located in certain directories, hence failing.</p>&#xA;<p>I looked into <a href=""https://graphql-code-generator.com"" rel=""nofollow noreferrer"">https://graphql-code-generator.com</a> but it wont work due to special types AppSync uses like <code>AWSDateTime</code>, a work around for this is to have api published and get schema from a graphql endpoint, but this is not ideal i.e. I'd like to be able and generate these types locally without publishing the schema.</p>&#xA;<p>Is this doable?</p>&#xA;",911930,,,,2020-12-17 15:40:59,How to generate Typescript definitions from AppSync GraphQL schema if I am not using amplify?,<typescript><graphql><aws-amplify><aws-appsync><graphql-codegen>,1,1,0,2020-12-17 13:55:05
65343333,1,,,4,4373,"<p>I'm a bit stuck. I am using <a href=""https://github.com/prisma-labs/graphql-request"" rel=""nofollow noreferrer"">graphql-request</a> with <a href=""https://github.com/tannerlinsley/react-query"" rel=""nofollow noreferrer"">react-query</a>, following <a href=""https://github.com/tannerlinsley/react-query/blob/master/examples/basic-graphql-request/src/index.js"" rel=""nofollow noreferrer"">the example code quite closely</a>. I replaced it with my own backend, and it works when I don't use variables, but hardcode the values. It also all works in my GraphiQL test environment.</p>&#xA;<p>So doing this works:</p>&#xA;<pre><code>export default function usePost(postId) {&#xA;  return useQuery(&#xA;    [&quot;post&quot;, postId],&#xA;    async () =&gt; {&#xA;      const { post } = await request(&#xA;        endpoint,&#xA;        gql`&#xA;          query {&#xA;            post(id: &quot;123123123123&quot;) { // &lt;--- with the id hard-coded, it works&#xA;              id&#xA;              heading&#xA;              content&#xA;            }&#xA;          }&#xA;        `&#xA;      )&#xA;&#xA;      return post&#xA;    },&#xA;    {&#xA;      enabled: !!postId,&#xA;    }&#xA;  )&#xA;}&#xA;</code></pre>&#xA;<p>What follows is <em>exactly the same code</em>, but now <em>the previously hard-coded post-id</em> (&quot;123123123123&quot;) is replaced <em>by a variable</em> (<code>${postId}</code>). Exactly as <a href=""https://github.com/tannerlinsley/react-query/blob/master/examples/basic-graphql-request/src/index.js"" rel=""nofollow noreferrer"">described in the example code</a></p>&#xA;<pre><code>export default function usePost(postId) {&#xA;  return useQuery(&#xA;    [&quot;post&quot;, postId],&#xA;    async () =&gt; {&#xA;      const { post } = await request(&#xA;        endpoint,&#xA;        gql`&#xA;          query {&#xA;            post(id: ${postId}) { // &lt;--- with the ${postId} variable, things break, but it's exactly the same syntax as in the react-query example &amp; it works in my graphiql backend. Also console-logged the postId, and it is correct&#xA;              id&#xA;              heading&#xA;              content&#xA;            }&#xA;          }&#xA;        `&#xA;      )&#xA;&#xA;      return post&#xA;    },&#xA;    {&#xA;      enabled: !!postId,&#xA;    }&#xA;  )&#xA;}&#xA;</code></pre>&#xA;<p>The error response is:</p>&#xA;<blockquote>&#xA;<p>commons.js:46154 Error: Syntax Error: Expected :, found ):&#xA;{&quot;response&quot;:{&quot;errors&quot;:[{&quot;message&quot;:&quot;Syntax Error: Expected :, found&#xA;)&quot;,&quot;locations&quot;:[{&quot;line&quot;:3,&quot;column&quot;:46}]}],&quot;status&quot;:400},&quot;request&quot;:{&quot;query&quot;:&quot;\n&#xA;query {\n            post(id: 5fda109506038d9d18fa27e2) {\n<br />&#xA;id\n              heading\n              content\n            }\n<br />&#xA;}\n        &quot;}}&#xA;at GraphQLClient. (commons.js:13039)&#xA;at step (commons.js:12930)&#xA;at Object.next (commons.js:12911)&#xA;at fulfilled (commons.js:12902)</p>&#xA;</blockquote>&#xA;<p>I guess it's some syntax that I am getting wrong? Or could it have to do with the fact that now the quotation marks are missing? Though the example code also doesn't do anything differently... Really not sure anymore, but it's literally that one line that breaks it all and that I cannot figure out.</p>&#xA;",9316628,,,,2020-12-17 16:05:10,Can't pass arguments in useQuery with React-Query + Graphql-Request,<reactjs><graphql><react-hooks><graphql-js><react-query>,1,0,0,2020-12-17 15:10:39
65344222,2,,65343333,1,,"<p>Your id <code>5fda109506038d9d18fa27e2</code> looks to be a string but you're not passing it as a string to your back end, which is why you're getting a syntax error.</p>&#xA;<p>It looks like this</p>&#xA;<pre><code>query {&#xA;  post(id: 5fda109506038d9d18fa27e2) {&#xA;    id&#xA;    title&#xA;    body&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Notice how there aren't any quotation marks around the id? e.g. <code>&quot;5fda109506038d9d18fa27e2&quot;</code>. You can also use integers as ids, I just want to make a point that you're not actually passing an integer. Read more on scalar types <a href=""https://graphql.org/learn/schema/#scalar-types"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>I recommend you pass variables how they're intended by graphql rather than using string interpolation. This will help avoid this problem. Read more on variables in graphql <a href=""https://graphql.org/learn/queries/#variables"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>Here's an example of passing variables in graphql:</p>&#xA;<pre><code>query Post($id: ID!) {&#xA;  post(id: $id) {&#xA;    id&#xA;    title&#xA;    body&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Here's how it would look using your code:</p>&#xA;<pre><code>function usePost(postId) {&#xA;  return useQuery(&#xA;    [&quot;post&quot;, postId],&#xA;    async () =&gt; {&#xA;      const { post } = await request(&#xA;        endpoint,&#xA;        gql`&#xA;          query Post($id: ID!) {&#xA;            post(id: $id) {&#xA;              id&#xA;              title&#xA;              body&#xA;            }&#xA;          }&#xA;        `,&#xA;        { id: postId }&#xA;      );&#xA;      return post;&#xA;    },&#xA;    {&#xA;      enabled: !!postId&#xA;    }&#xA;  );&#xA;}&#xA;</code></pre>&#xA;",613932,,,,2020-12-17 16:05:10,"",,0,2,0,2020-12-17 16:05:10
65360308,1,,,1,499,"<p>First of all thanks for reading this, I have spent the last day on this one bug that I am simply unable to figure out. I had it working before, but for some reason it just stopped. Basically, all the services standalone work as expected. However, once I try to reference another one (let's say I am using the profile service and want to pull the email from the account service) it just returns null. No error message, no nothing. I have added the important code snippets, although if you would like the see the entire code base please let me know and I will will push it to github.</p>&#xA;<p>ACCOUNT TYPE DEFS:</p>&#xA;<pre><code>import { gql } from 'apollo-server';&#xA;&#xA;const typeDefs = gql`&#xA;  # SCALARS&#xA;  &quot;&quot;&quot;&#xA;  An ISO 8601-encoded UTC date string...&#xA;  &quot;&quot;&quot;&#xA;  scalar DateTime&#xA;  # OBJECTS&#xA;  &quot;&quot;&quot;&#xA;  An account is an Auth0 user that provides authentication details.&#xA;  &quot;&quot;&quot;&#xA;  type Account @key(fields: &quot;id&quot;) {&#xA;    &quot;The unique Auth0 ID associated with the account.&quot;&#xA;    id: ID!&#xA;    &quot;The date and time the account was created.&quot;&#xA;    createdAt: DateTime!&#xA;    &quot;The email associated with the account (must be unique).&quot;&#xA;    email: String&#xA;    &quot;Whether the account is blocked.&quot;&#xA;    isBlocked: Boolean&#xA;    &quot;Whether the account has a moderator role.&quot;&#xA;    isModerator: Boolean&#xA;  }&#xA;</code></pre>&#xA;<p>ACCOUNT RESOLVERS:</p>&#xA;<pre><code> Account: {&#xA;    __resolveReference(reference, { dataSources }, info) {&#xA;      return dataSources.accountsAPI.getAccountById(reference.id);&#xA;    },&#xA;    id(account, args, context, info) {&#xA;      return account.user_id;&#xA;    },&#xA;    createdAt(account, args, context, info) {&#xA;      return account.created_at;&#xA;    },&#xA;    isModerator(account, args, context, info) {&#xA;      return (&#xA;        account.app_metadata &amp;&amp;&#xA;        account.app_metadata.roles &amp;&amp;&#xA;        account.app_metadata.roles.includes('moderator')&#xA;      );&#xA;    },&#xA;    isBlocked(account, args, context, info) {&#xA;      return account.blocked;&#xA;    },&#xA;  },&#xA;</code></pre>&#xA;<p>PROFILE TYPE DEFS:</p>&#xA;<pre><code>      extend type Account @key(fields: &quot;id&quot;) {&#xA;        id: ID! @external&#xA;        &quot;Metadata about the user that owns the account.&quot;&#xA;        profile: Profile&#xA;      }&#xA;  type Profile @key(fields: &quot;id&quot;) {&#xA;    &quot;The unique MongoDB document ID of the user's profile.&quot;&#xA;    id: ID!&#xA;    &quot;The Auth0 account tied to this profile.&quot;&#xA;    account: Account!&#xA;    &quot;The URL of the user's avatar.&quot;&#xA;    avatar: String&#xA;    &quot;A short bio or description about the user (max. 256 characters).&quot;&#xA;    description: String&#xA;    &quot;Other users that the user follows.&quot;&#xA;    following(&#xA;      first: Int&#xA;      after: String&#xA;      last: Int&#xA;      before: String&#xA;      orderBy: ProfileOrderByInput&#xA;    ): ProfileConnection&#xA;    &quot;The full name of the user.&quot;&#xA;    fullName: String&#xA;    &quot;The URL of the user's GitHub page.&quot;&#xA;    githubUrl: String&#xA;    &quot;The user's pinned GitHub repositories and gists.&quot;&#xA;    pinnedItems: [PinnableItem]&#xA;    &quot;The unique username of the user.&quot;&#xA;    username: String!&#xA;    &quot;Whether the currently logged in user follows this profile.&quot;&#xA;    viewerIsFollowing: Boolean&#xA;  }&#xA;</code></pre>&#xA;<p>PROFILE RESOLVER:</p>&#xA;<pre><code>Profile: {&#xA;    account(profile, args, context, info) {&#xA;      return { __typename: 'Account', id: profile.account_id };&#xA;    },&#xA;}&#xA;</code></pre>&#xA;",6718136,,,,2021-04-06 00:23:02,Apollo Server Federation not resolving?,<javascript><node.js><apollo-server><apollo-federation>,1,0,0,2020-12-18 16:11:07
65360369,2,,65360308,0,,"<p>While writing this I realized what the problem was, so I will post it here so that none of you will have to waste your time. I don't yet understand why, I will follow up soon, but for some reason, the permissions that I have (using grahpql-shield). Broke everything, after commenting it out when creating the federated service, it magically started working, for those who are curious, here were my permissions.</p>&#xA;<p>ACCOUNT PERMISSION</p>&#xA;<pre><code>import { and, or, rule, shield } from 'graphql-shield';&#xA;&#xA;import getPermissions from '../../lib/getPermissions';&#xA;&#xA;const canReadAnyAccount = rule()((parent, args, { user }, info) =&gt; {&#xA;  const userPermissions = getPermissions(user);&#xA;&#xA;  return userPermissions &amp;&amp; userPermissions.includes('read:any_account');&#xA;});&#xA;&#xA;const canReadOwnAccount = rule()((parent, args, { user }, info) =&gt; {&#xA;  const userPermissions = getPermissions(user);&#xA;&#xA;  return userPermissions &amp;&amp; userPermissions.includes('read:own_account');&#xA;});&#xA;const canEditOwnAccount = rule()((parent, args, { user }, info) =&gt; {&#xA;  const userPermissions = getPermissions(user);&#xA;&#xA;  return userPermissions &amp;&amp; userPermissions.includes('edit:own_account');&#xA;});&#xA;const canBlockAccount = rule()((parent, args, { user }, info) =&gt; {&#xA;  const userPermissions = getPermissions(user);&#xA;&#xA;  return userPermissions &amp;&amp; userPermissions.includes('block:any_account');&#xA;});&#xA;const canPromoteAccount = rule()((parent, args, { user }, info) =&gt; {&#xA;  const userPermissions = getPermissions(user);&#xA;&#xA;  return userPermissions &amp;&amp; userPermissions.includes('promote:any_account');&#xA;});&#xA;const isReadingOwnAccount = rule()(&#xA;  (parent, { id }, { user }, info) =&gt; user.sub === id,&#xA;);&#xA;&#xA;const isEditingOwnAccount = rule()(&#xA;  (parent, { where: { id } }, { user }, info) =&gt; user.sub === id,&#xA;);&#xA;&#xA;const permissions = shield(&#xA;  {&#xA;    Query: {&#xA;      account: or(&#xA;        and(canReadAnyAccount, isEditingOwnAccount),&#xA;        canReadAnyAccount,&#xA;      ),&#xA;      accounts: canReadAnyAccount,&#xA;    },&#xA;    Mutation: {&#xA;      changeAccountBlockedStatus: canBlockAccount,&#xA;      changeAccountModeratorRole: canPromoteAccount,&#xA;      deleteAccount: and(canEditOwnAccount, isEditingOwnAccount),&#xA;      updateAccount: and(canEditOwnAccount, isEditingOwnAccount),&#xA;    },&#xA;  },&#xA;  { debug: process.env.NODE_ENV === 'development' },&#xA;);&#xA;&#xA;export default permissions;&#xA;</code></pre>&#xA;<p>PROFILES PERMISSIONS:</p>&#xA;<pre><code>import { and, or, rule, shield } from 'graphql-shield';&#xA;&#xA;import getPermissions from '../../lib/getPermissions';&#xA;&#xA;const canReadAnyAccount = rule()((parent, args, { user }, info) =&gt; {&#xA;  const userPermissions = getPermissions(user);&#xA;&#xA;  return userPermissions &amp;&amp; userPermissions.includes('read:any_account');&#xA;});&#xA;&#xA;const canReadOwnAccount = rule()((parent, args, { user }, info) =&gt; {&#xA;  const userPermissions = getPermissions(user);&#xA;&#xA;  return userPermissions &amp;&amp; userPermissions.includes('read:own_account');&#xA;});&#xA;const canEditOwnAccount = rule()((parent, args, { user }, info) =&gt; {&#xA;  const userPermissions = getPermissions(user);&#xA;&#xA;  return userPermissions &amp;&amp; userPermissions.includes('edit:own_account');&#xA;});&#xA;const canBlockAccount = rule()((parent, args, { user }, info) =&gt; {&#xA;  const userPermissions = getPermissions(user);&#xA;&#xA;  return userPermissions &amp;&amp; userPermissions.includes('block:any_account');&#xA;});&#xA;const canPromoteAccount = rule()((parent, args, { user }, info) =&gt; {&#xA;  const userPermissions = getPermissions(user);&#xA;&#xA;  return userPermissions &amp;&amp; userPermissions.includes('promote:any_account');&#xA;});&#xA;const isReadingOwnAccount = rule()(&#xA;  (parent, { id }, { user }, info) =&gt; user.sub === id,&#xA;);&#xA;&#xA;const isEditingOwnAccount = rule()(&#xA;  (parent, { where: { id } }, { user }, info) =&gt; user.sub === id,&#xA;);&#xA;&#xA;const permissions = shield(&#xA;  {&#xA;    Query: {&#xA;      account: or(&#xA;        and(canReadAnyAccount, isEditingOwnAccount),&#xA;        canReadAnyAccount,&#xA;      ),&#xA;      accounts: canReadAnyAccount,&#xA;    },&#xA;    Mutation: {&#xA;      changeAccountBlockedStatus: canBlockAccount,&#xA;      changeAccountModeratorRole: canPromoteAccount,&#xA;      deleteAccount: and(canEditOwnAccount, isEditingOwnAccount),&#xA;      updateAccount: and(canEditOwnAccount, isEditingOwnAccount),&#xA;    },&#xA;  },&#xA;  { debug: process.env.NODE_ENV === 'development' },&#xA;);&#xA;&#xA;export default permissions;&#xA;</code></pre>&#xA;<p>I also would like to also thank Mandi from 8 bit-press as she is the reason I am learning graphql with her awesome book. There might be a few errors here or there (not yet sure as I am prone to making mistakes, if not this might be a mistake and will be useful for anyone else reading the book) but I certainly do recommend for anyone looking to learn apollo to check it out&#xA;<a href=""https://8bit.press/book/advanced-graphql"" rel=""nofollow noreferrer"">https://8bit.press/book/advanced-graphql</a></p>&#xA;",6718136,,,,2020-12-18 16:16:01,"",,0,0,0,2020-12-18 16:16:01
65372922,2,,64708459,0,,"<p>Sorry for late response. Not sure if you found a solution yet, but I will answer anyway if that helps anyone</p>&#xA;<p>I notice 2 things here:</p>&#xA;<ul>&#xA;<li><code>serviceRoleARN</code> is misspelled. It should be <code>serviceRoleArn</code></li>&#xA;<li><code>serviceRoleArn</code> and <code>iamRoleStatements</code> are mutually exclusive. <code>serviceRoleArn</code> takes the ARN of a full already-existing role, while <code>iamRoleStatements</code> auto-generates the role for you with the provided policy statement. When both are provided, <code>serviceRoleArn</code> takes precedence.</li>&#xA;</ul>&#xA;<p>So here, what what used was <code>iamRoleStatements</code> (because <code>serviceRoleArn</code> was misspelled).</p>&#xA;<p>The name of the generated resource confirms that: <code>GraphQlDsUsersRole</code></p>&#xA;<p>As for why the policy is malformed, this is because <code>Resource</code> is misspelled too.&#xA;It has to be singular (even if you pass an array).</p>&#xA;",1271112,,1839439,2020-12-19 18:11:28,2020-12-19 18:11:28,"",,0,0,0,2020-12-19 18:05:43
65376719,1,,,5,924,"<p>Update: I have added at the very bottom the schema and generate query that was working before, it seems the addition of _version seems to breaking something, and I am not sure why.</p>&#xA;<p>I can't quite figure this one out. I am getting the following error&#xA;<code>&quot;Cannot return null for non-nullable field Recipe._version.&quot;</code></p>&#xA;<p>It was working prior, but I used aws amplifies new visual data modeling tool and added in the ingredients model. Ran amplify pull and it seemed to break my code, but not exactly sure why.</p>&#xA;<p>Any help would be great.</p>&#xA;<p>Thanks</p>&#xA;<p>Note: I am able to run queries and mutations just fine in graphql playground</p>&#xA;<p>I have the following code</p>&#xA;<pre><code>//...&#xA;import { listRecipes as ListRecipes } from &quot;./graphql/queries&quot;;&#xA;&#xA;&#xA;async function getData() {&#xA;    try {&#xA;      const recipeData = await API.graphql(graphqlOperation(ListRecipes));&#xA;      console.log(&quot;listData:&quot;, recipeData);&#xA;    } catch (err) {&#xA;      console.log(&quot;error fetching recipes...&quot;, err);&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>graphql schema</p>&#xA;<pre><code>type Ingredient&#xA;  @model&#xA;  @auth(rules: [{ allow: private }])&#xA;  @key(name: &quot;byRecipe&quot;, fields: [&quot;recipeID&quot;]) {&#xA;  id: ID!&#xA;  amount: String&#xA;  ingredient: String&#xA;  recipeID: ID!&#xA;}&#xA;&#xA;type Recipe @model @auth(rules: [{ allow: private }]) {&#xA;  id: ID!&#xA;  userId: ID&#xA;  name: String!&#xA;  description: String!&#xA;  recipe: String!&#xA;  comments: [Comment] @connection(name: &quot;RecipeComments&quot;)&#xA;  original_author: String&#xA;  Ingredients: [Ingredient] @connection(keyName: &quot;byRecipe&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Comment @model @auth(rules: [{ allow: private }]) {&#xA;  id: ID!&#xA;  message: String&#xA;  createdBy: String&#xA;  recipe: Recipe @connection(name: &quot;RecipeComments&quot;)&#xA;}&#xA;&#xA;type Test {&#xA;  id: String!&#xA;  name: String!&#xA;  price_usd: String!&#xA;}&#xA;&#xA;type Query {&#xA;  getTest(limit: Int, start: Int): [Test] @function(name: &quot;test-${env}&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>Here is the queries.js file that's generated by amplify mock</p>&#xA;<pre><code>export const listRecipes = /* GraphQL */ `&#xA;  query ListRecipes(&#xA;    $filter: ModelRecipeFilterInput&#xA;    $limit: Int&#xA;    $nextToken: String&#xA;  ) {&#xA;    listRecipes(filter: $filter, limit: $limit, nextToken: $nextToken) {&#xA;      items {&#xA;        id&#xA;        userId&#xA;        name&#xA;        description&#xA;        recipe&#xA;        original_author&#xA;        _version&#xA;        _deleted&#xA;        _lastChangedAt&#xA;        createdAt&#xA;        updatedAt&#xA;      }&#xA;      nextToken&#xA;      startedAt&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>So before I added in the Ingredients model with the data model ui editor I had the following schmea and querie.js file that was working.</p>&#xA;<p>schema</p>&#xA;<pre><code>type Recipe @model {&#xA;  id: ID!&#xA;  userId: ID&#xA;  name: String!&#xA;  description: String!&#xA;  recipe: String!&#xA;  comments: [Comment] @connection(name: &quot;RecipeComments&quot;)&#xA;}&#xA;&#xA;type Comment&#xA;  @model&#xA;  @auth(rules: [{ allow: owner, queries: null, ownerField: &quot;createdBy&quot; }]) {&#xA;  id: ID!&#xA;  message: String&#xA;  createdBy: String&#xA;  recipe: Recipe @connection(name: &quot;RecipeComments&quot;)&#xA;}&#xA;&#xA;type Test {&#xA;  id: String!&#xA;  name: String!&#xA;  price_usd: String!&#xA;}&#xA;&#xA;type Query {&#xA;  getTest(limit: Int, start: Int): [Test] @function(name: &quot;test-${env}&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>queries.js</p>&#xA;<pre><code>export const listRecipes = /* GraphQL */ `&#xA;  query ListRecipes(&#xA;    $filter: ModelRecipeFilterInput&#xA;    $limit: Int&#xA;    $nextToken: String&#xA;  ) {&#xA;    listRecipes(filter: $filter, limit: $limit, nextToken: $nextToken) {&#xA;      items {&#xA;        id&#xA;        userId&#xA;        name&#xA;        description&#xA;        recipe&#xA;        createdAt&#xA;        updatedAt&#xA;      }&#xA;      nextToken&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;",2949184,,2949184,2020-12-20 14:52:01,2020-12-20 14:52:01,"stuck on aws amplify API.graphql(...) call to run query, query works in graphql playground",<javascript><reactjs><async-await><graphql><aws-amplify>,0,6,0,2020-12-20 03:41:17
65384006,2,,65383733,1,,"<p>It seems like there are some debugging details missing from your question.  For example, your error message displays the results of a <code>listPosts</code> query, but you don't show that being called anywhere.  Also, that query apparently returns something, so it would be good to see the database entries backing it.</p>&#xA;<p>If I had to guess, you have entries in your dynamo table that have missing <code>ingredients</code> fields, which is why you see an error: the query is trying to marshal missing/null fields to a return type of <code>String!</code>, which is by definition non-nullable.</p>&#xA;<p>Also, I'm not sure you should be setting <code>id</code> directly on your <code>post</code> state object.  Better to copy the object and set the property on the copy, esp since you're just using it as a parameter.</p>&#xA;",3084820,,3084820,2020-12-20 19:41:27,2020-12-20 19:41:27,"",,0,0,0,2020-12-20 19:34:17
65395564,1,66942148,,6,3742,"<p>I have a simple full-stack amplify app.</p>&#xA;<p>Here is my model:</p>&#xA;<pre><code>type Note @model @auth(rules: [{allow: public}]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;  image: String&#xA;  NoteType: NoteType @connection&#xA;}&#xA;&#xA;type NoteType @model @auth(rules: [{allow: public}]) {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;</code></pre>&#xA;<p>I'm trying to delete a Note with the following payload:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    &quot;query&quot;: &quot;mutation DeleteNote($input: DeleteNoteInput!, $condition: ModelNoteConditionInput) {↵  deleteNote(input: $input, condition: $condition) {↵    id↵    name↵    description↵    image↵    createdAt↵    updatedAt↵    NoteType {↵      id↵      name↵      createdAt↵      updatedAt↵    }↵  }↵}↵&quot;,&#xA;    &quot;variables&quot;: {&quot;input&quot;: {&quot;id&quot;: &quot;0c5e3ced-ffa3-4de8-9010-40b67d5bab68&quot;}}&#xA;}&#xA;</code></pre>&#xA;<p>What I see in the response is the following json:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    &quot;data&quot;: {&#xA;        &quot;deleteNote&quot;: null&#xA;    },&#xA;    &quot;errors&quot;: [&#xA;        {&#xA;            &quot;path&quot;: [&#xA;                &quot;deleteNote&quot;&#xA;            ],&#xA;            &quot;data&quot;: {&#xA;                &quot;id&quot;: &quot;0c5e3ced-ffa3-4de8-9010-40b67d5bab68&quot;,&#xA;                &quot;name&quot;: &quot;bb&quot;,&#xA;                &quot;description&quot;: &quot;bb&quot;,&#xA;                &quot;image&quot;: &quot;icon.png&quot;,&#xA;                &quot;createdAt&quot;: &quot;2020-12-21T12:00:26.743Z&quot;,&#xA;                &quot;updatedAt&quot;: &quot;2020-12-21T12:00:26.743Z&quot;&#xA;            },&#xA;            &quot;errorType&quot;: &quot;ConflictUnhandled&quot;,&#xA;            &quot;errorInfo&quot;: null,&#xA;            &quot;locations&quot;: [&#xA;                {&#xA;                    &quot;line&quot;: 1,&#xA;                    &quot;column&quot;: 88,&#xA;                    &quot;sourceName&quot;: null&#xA;                }&#xA;            ],&#xA;            &quot;message&quot;: &quot;Conflict resolver rejects mutation.&quot;&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>The code was working until I tried to add the <code>NoteType</code>! Is there any conflict regarding the foreign-key here?</p>&#xA;",2094548,,2094548,2020-12-21 16:09:52,2021-07-03 03:06:24,"Error ""Conflict resolver rejects mutation."" when Delete in Amplify",<reactjs><graphql><aws-amplify><amplify>,1,1,0,2020-12-21 15:33:35
65407027,2,,65404450,0,,<p>Could be a linked service such as amazon SNS that has messages in its dead-letter queue. Or a failed deployment. Or something else.. Have you already tried rebuilding the app? AWS EB indeed is sometimes difficult to debug.</p>&#xA;,6918234,,,,2020-12-22 10:27:08,"",,0,0,0,2020-12-22 10:27:08
65414563,1,65432381,,-1,548,"<p>In my aplications I use Hasura for my graphql server and Apollo for the client. I have a postgres schema with snake_case table and field names, but I want to have camelCases keys in my responses' objects. Any known way to achieve that?&#xA;I can see that apollo server offers fieldResolver where it can be done(<a href=""https://stackoverflow.com/questions/53881054/convert-snake-case-to-camelcase-field-names-in-apollo-server-express"">Convert snake_case to camelCase field names in apollo-server-express</a>), but I found no similar option for Hasura/ApolloClient.</p>&#xA;",871354,,,,2020-12-24 15:56:53,How to camelCase my responses' fields and tables in Hausra or ApolloClient?,<apollo-client><hasura>,3,1,0,2020-12-22 19:14:52
65416615,2,,63305156,3,,"<h2>DataStore's Conflict resolution documentation:</h2>&#xA;<p><a href=""https://i.stack.imgur.com/rQ2Ux.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rQ2Ux.png"" alt=""enter image description here"" /></a></p>&#xA;<h2>Updating Conflict Resolution:</h2>&#xA;<ol>&#xA;<li>One way is to update it as the <a href=""https://docs.amplify.aws/lib/datastore/conflict/q/platform/js#custom-conflict-resolution"" rel=""nofollow noreferrer"">documentation</a> suggests (The way I did it).</li>&#xA;</ol>&#xA;<p><a href=""https://i.stack.imgur.com/mwBOZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mwBOZ.png"" alt=""enter image description here"" /></a></p>&#xA;<ol start=""2"">&#xA;<li>I checked which files changed and the only important key to update can be found in <code>amplify/backend/api/&lt;yourApi&gt;/transform.conf.json</code></li>&#xA;</ol>&#xA;<p>From:</p>&#xA;<p><a href=""https://i.stack.imgur.com/ELlSl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ELlSl.png"" alt=""enter image description here"" /></a></p>&#xA;<p>To:</p>&#xA;<p><a href=""https://i.stack.imgur.com/69iUq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/69iUq.png"" alt=""enter image description here"" /></a></p>&#xA;",3645464,,,,2020-12-22 22:28:21,"",,0,1,0,2020-12-22 22:28:21
65427233,2,,64018456,2,,<p>Running <code>amplify pull</code> and then re-running <code>amplify codegen</code> did the job for me</p>&#xA;,7217896,,,,2020-12-23 16:00:20,"",,0,1,0,2020-12-23 16:00:20
65427909,2,,65316214,0,,"<p>Are you signing your request properly? Check out <a href=""https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"" rel=""nofollow noreferrer"">AWS.Signers.V4</a> if you haven't already.</p>&#xA;<p>I ran into a similar problem as you, and I ended up implementing a dedicated Lambda function to execute GraphQL operations. That way, I can just invoke my Lambda function whenever I want to execute a GraphQL operation.</p>&#xA;<p>Something like:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>/* Amplify Params - DO NOT EDIT&#xA;    API_XXXXXX_GRAPHQLAPIENDPOINTOUTPUT&#xA;    API_XXXXXX_GRAPHQLAPIIDOUTPUT&#xA;    ENV&#xA;    REGION&#xA;Amplify Params - DO NOT EDIT */&#xA;&#xA;const AWS = require('aws-sdk')&#xA;const https = require('https')&#xA;const urlParse = require('url').URL&#xA;&#xA;const APPSYNC_URL = process.env['API_XXXXXX_GRAPHQLAPIENDPOINTOUTPUT']&#xA;const REGION = process.env['REGION']&#xA;&#xA;const ENDPOINT = new urlParse(APPSYNC_URL).hostname.toString()&#xA;&#xA;//&#xA;// execute a graphql operation via appsync&#xA;//&#xA;exports.handler = async ({ item, operation, operationName }) =&gt; {&#xA;  const request = createSignedRequest(&#xA;    ENDPOINT,&#xA;    item,&#xA;    operation,&#xA;    operationName,&#xA;    REGION,&#xA;    APPSYNC_URL,&#xA;  )&#xA;  return getResponseFromApi(ENDPOINT, request)&#xA;}&#xA;&#xA;//&#xA;// create a signed graphql operation request&#xA;//&#xA;const createSignedRequest = (&#xA;  endpoint,&#xA;  item,&#xA;  operation,&#xA;  operationName,&#xA;  region,&#xA;  url,&#xA;) =&gt; {&#xA;  const request = new AWS.HttpRequest(url, region)&#xA;  request.method = 'POST'&#xA;  request.path = '/graphql'&#xA;  request.headers.host = endpoint&#xA;  request.headers['Content-Type'] = 'application/json'&#xA;  request.body = JSON.stringify({&#xA;    query: operation,&#xA;    operationName: operationName,&#xA;    variables: item,&#xA;  })&#xA;&#xA;  const signer = new AWS.Signers.V4(request, 'appsync', true)&#xA;  signer.addAuthorization(AWS.config.credentials, AWS.util.date.getDate())&#xA;&#xA;  return request&#xA;}&#xA;&#xA;//&#xA;// send a request to the appsync api and return the response data&#xA;//&#xA;const getResponseFromApi = (endpoint, request) =&gt; {&#xA;  return new Promise((resolve, reject) =&gt; {&#xA;    const httpRequest = https.request(&#xA;      { ...request, host: endpoint },&#xA;      (result) =&gt; {&#xA;        result.on('data', (data) =&gt; {&#xA;          resolve(JSON.parse(data.toString()))&#xA;        })&#xA;      },&#xA;    )&#xA;    httpRequest.write(request.body)&#xA;    httpRequest.end()&#xA;  })&#xA;}&#xA;</code></pre>&#xA;",7358732,,,,2020-12-23 16:49:16,"",,0,0,0,2020-12-23 16:49:16
65430473,1,,,0,127,"<p>I'm working on a chat app that allows group app. In order for me to achieve group chat feature, I added a table called <code>ChatRoomUser</code> that connects <code>ChatRoom</code> and <code>Message</code> tables. I got everything working but can't figure out to query Chat Room in a chronological order.</p>&#xA;<pre><code>query getUser(id: &quot;USER_ID&quot;){&#xA;  chatRoomUser(sortDirection: DESC) {  // Can't query this in chronological order...&#xA;    items {&#xA;      id&#xA;      chatRoom{&#xA;        id&#xA;        receiverHasRead&#xA;        createdBy&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I was going to update <code>updatedAt</code> under <code>ChatRoomUser</code> when there's a new message in a chat room but that won't be efficient when there's many users in a room. Because I will have to update 100 rows if there's 100 users in a chat room.</p>&#xA;<p>What will be the best way to solve this issue?</p>&#xA;<pre><code>type User &#xA;  @model &#xA;  @auth(rules: [&#xA;      { allow: private }&#xA;    ]&#xA;  ) {&#xA;  id: String!&#xA;  chatRoomUser: [ChatRoomUser] @connection(name: &quot;UserChatRoomUser&quot;, sortField: &quot;updatedAt&quot;) # this does not seem like a good way to query&#xA;}&#xA;&#xA;type ChatRoomUser&#xA;  @model&#xA;  @key(name: &quot;gsi-doesChatRoomExist&quot;, fields: [&quot;chatRoomUserUserId&quot;, &quot;members&quot;], queryField: &quot;doesChatRoomExist&quot;)&#xA;  @auth(rules: [&#xA;      { allow: private }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  chatRoomUserUserId: String!&#xA;  chatRoomUserChatRoomId: String!&#xA;  members: String! &#xA;&#xA;  user: User @connection(name: &quot;UserChatRoomUser&quot;)&#xA;  chatRoom: ChatRoom @connection(name: &quot;ChatRoomUserChatRoom&quot;)&#xA;&#xA;  createdAt: AWSDateTime&#xA;  updatedAt: AWSDateTime # I was going to use this as sortField&#xA;}&#xA;&#xA;type ChatRoom &#xA;  @model&#xA;  @auth(rules: [&#xA;      { allow: private }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  createdBy: String!&#xA;  receiverHasRead: Boolean!&#xA;  &#xA;  chatRoomUsers: [ChatRoomUser] @connection(name: &quot;ChatRoomUserChatRoom&quot;)&#xA;  messages: [Message] @connection(name: &quot;chatByChatRoom&quot;, sortField: &quot;createdAt&quot;)&#xA;&#xA;  createdAt: AWSDateTime&#xA;  updatedAt: AWSDateTime&#xA;}&#xA;&#xA;type Message&#xA;@model&#xA;@auth(rules: [&#xA;    { allow: private }&#xA;  ]&#xA;) { &#xA;  id: ID!&#xA;  content: String!&#xA;  messageChatRoomId: String!&#xA;  messageUserId: String!&#xA;&#xA;  user: User @connection(name: &quot;UserMassages&quot;)&#xA;  chatRoom: ChatRoom @connection(name: &quot;chatByChatRoom&quot;)&#xA;&#xA;  createdAt: AWSDateTime!&#xA;  updatedAt: AWSDateTime&#xA;}&#xA;</code></pre>&#xA;<p>I have a feeling that I need to change schema design to make this work but can't think of any solution that can work.</p>&#xA;",7724980,,4157124,2020-12-23 21:32:21,2020-12-23 21:45:32,Schema design for chat app with group chat. I can't query chat room in chronological order,<javascript><graphql><chat><aws-amplify>,1,0,0,2020-12-23 20:21:17
65431309,2,,65430473,0,,"<p>You'll want to implement a key that lets you query your <code>Chatroom</code> for <code>Messages</code> by <code>createdAt</code>. Check out <a href=""https://docs.amplify.aws/cli/graphql-transformer/key"" rel=""nofollow noreferrer"">this page</a> on defining keys for more information.</p>&#xA;",7358732,,,,2020-12-23 21:45:32,"",,0,0,0,2020-12-23 21:45:32
65432381,2,,65414563,1,,"<p>To make a long story short - currently, there is no such a solution for Hasura. The best suggestion I could get was to rename the column names manually, one-by-one via the console =&gt; DATA section =&gt; Modify tab:&#xA;<a href=""https://i.stack.imgur.com/vrI4x.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vrI4x.png"" alt=""enter image description here"" /></a></p>&#xA;",871354,,,,2020-12-23 23:59:21,"",,0,0,0,2020-12-23 23:59:21
65439269,2,,65414563,0,,"<p>you can <strong>expose</strong> any column with a different name in the GraphQLAPI without you having to rename the column itself...&#xA;you can do that in the <strong>hasura console</strong> as in the picture below<a href=""https://i.stack.imgur.com/8sugu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8sugu.png"" alt=""enter image description here"" /></a></p>&#xA;",14529454,,,,2020-12-24 13:55:05,"",,0,0,0,2020-12-24 13:55:05
65452659,1,65452838,,0,1988,"<p>I am following along with this Graphql intro <a href=""https://www.apollographql.com/docs/apollo-server/getting-started/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/getting-started/</a>. I've got my files set up (slightly modified), and the base query is working on http://localhost:4000/.</p>&#xA;<p>My next question after getting through the basics was, how do I get data based on parameters? I've gotten this far, but the query in playground doesn't return results.</p>&#xA;<p><strong>index.js</strong></p>&#xA;<pre><code>const typeDefs = gql`&#xA;    type Item {&#xA;        name: String&#xA;        description: String&#xA;        full_url: String&#xA;        term: String&#xA;    }&#xA;&#xA;    type Query {&#xA;        items: [Item]&#xA;        itemsSearch(term: String!): [Item]&#xA;    }&#xA;`;&#xA;&#xA;const resolvers = {&#xA;    Query: {&#xA;        // this works. it is the example from the guide.&#xA;        items: () =&gt; items,&#xA;        // this doesn't work. `term` is always undefined&#xA;        itemsSearch: term =&gt; {&#xA;            console.log('term', term);&#xA;            console.log('items', items);&#xA;            return items.filter(item =&gt; item.title.indexOf(term) &gt; -1 || item.author.indexOf(term) &gt; -1);&#xA;        },&#xA;    },&#xA;};&#xA;</code></pre>&#xA;<p>Then I'm running this query in playground. (mostly working from <a href=""https://graphql.org/graphql-js/passing-arguments/"" rel=""nofollow noreferrer"">https://graphql.org/graphql-js/passing-arguments/</a>)</p>&#xA;<pre><code>{&#xA;  itemsSearch(term: &quot;Rowling&quot;) {&#xA;    title&#xA;    author&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I get a successful response but no data. As mentioned, logging <code>term</code> in the itemsSearch resolver prints undefined.</p>&#xA;<p>Any idea how I can pass that param <code>term</code> to the resolver and get results? Thanks in advance.</p>&#xA;",1067590,,1067590,2020-12-26 01:17:07,2020-12-26 01:17:07,Apollo graphql query with parameters,<graphql><apollo-server>,1,4,0,2020-12-25 23:46:38
65459654,2,,65459487,1,,"<p>I don't know about graphql, but I can help you with the UI part, for showing data for a particular order.</p>&#xA;<p>You have a table, and the table has a <strong>unique index key</strong> for each row. From the Database, <strong>we can distinguish all the rows using this key</strong>. so, while showing the table you might use node packages for react-tables or the traditional  method,</p>&#xA;<ol>&#xA;<li>create a column named &quot;Action&quot; and action need to have a button for each row.</li>&#xA;<li>Then set the id on its onPress() and then call the API with the id and you will get the detailed data by running the query in the backend, however, you can show the data using the modal or by redirecting to a different page.</li>&#xA;</ol>&#xA;",14885003,,,,2020-12-26 18:52:45,"",,0,0,0,2020-12-26 18:52:45
65477403,1,,,0,366,"<p>I have the following ElasticSearch query that used to retrieve a bunch of pages (search) paginated using a cursor offset.</p>&#xA;<p><strong>Query</strong></p>&#xA;<pre><code>GET _search&#xA;{&#xA;  &quot;search_after&quot;: [&#xA;    1.8574909,&#xA;    &quot;urn:sample/78PsC1EHG6nopQCA/n/749d1ed1-d08d-44a1-abac-9ebad8c76697&quot;&#xA;  ],&#xA;  &quot;sort&quot;: [&#xA;    {&#xA;      &quot;_score&quot;: {&#xA;        &quot;order&quot;: &quot;desc&quot;&#xA;      }&#xA;    },&#xA;    {&#xA;      &quot;_id&quot;: {&#xA;        &quot;order&quot;: &quot;asc&quot;&#xA;      }&#xA;    }&#xA;  ],&#xA;  &quot;size&quot;: 1,&#xA;  &quot;query&quot;: {&#xA;    &quot;bool&quot;: {&#xA;      &quot;must&quot;: [&#xA;        {&#xA;          &quot;bool&quot;: {&#xA;            &quot;should&quot;: [&#xA;              {&#xA;                &quot;bool&quot;: {&#xA;                  &quot;must&quot;: [&#xA;                    {&#xA;                      &quot;term&quot;: {&#xA;                        &quot;type&quot;: &quot;node&quot;&#xA;                      }&#xA;                    },&#xA;                    {&#xA;                      &quot;query_string&quot;: {&#xA;                        &quot;query&quot;: &quot;a&quot;,&#xA;                        &quot;fields&quot;: [&#xA;                          &quot;node.text.string&quot;,&#xA;                          &quot;node.text.string.english&quot;&#xA;                        ]&#xA;                      }&#xA;                    }&#xA;                  ]&#xA;                }&#xA;              }&#xA;            ]&#xA;          }&#xA;        }&#xA;      ],&#xA;      &quot;filter&quot;: {&#xA;        &quot;bool&quot;: {&#xA;          &quot;should&quot;: [&#xA;            {&#xA;              &quot;bool&quot;: {&#xA;                &quot;must&quot;: [&#xA;                  {&#xA;                    &quot;term&quot;: {&#xA;                      &quot;workspace.type&quot;: &quot;space&quot;&#xA;                    }&#xA;                  },&#xA;                  {&#xA;                    &quot;terms&quot;: {&#xA;                      &quot;workspace.id&quot;: [&#xA;                        &quot;72MsGpeV9zGu5ytZ&quot;&#xA;                      ]&#xA;                    }&#xA;                  }&#xA;                ]&#xA;              }&#xA;            },&#xA;            {&#xA;              &quot;bool&quot;: {&#xA;                &quot;must&quot;: [&#xA;                  {&#xA;                    &quot;term&quot;: {&#xA;                      &quot;workspace.type&quot;: &quot;user&quot;&#xA;                    }&#xA;                  },&#xA;                  {&#xA;                    &quot;term&quot;: {&#xA;                      &quot;workspace.id&quot;: &quot;8&quot;&#xA;                    }&#xA;                  }&#xA;                ]&#xA;              }&#xA;            }&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  },&#xA;  &quot;highlight&quot;: {&#xA;    &quot;fields&quot;: {&#xA;      &quot;comment.body.text&quot;: {},&#xA;      &quot;comment.body.text.english&quot;: {},&#xA;      &quot;node.text.string&quot;: {},&#xA;      &quot;node.text.string.english&quot;: {}&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The query works fine in the dev console and returns a hit with an edge.</p>&#xA;<p><strong>Result</strong></p>&#xA;<pre><code>{&#xA;  &quot;took&quot; : 136,&#xA;  &quot;timed_out&quot; : false,&#xA;  &quot;num_reduce_phases&quot; : 2,&#xA;  &quot;_shards&quot; : {&#xA;    &quot;total&quot; : 929,&#xA;    &quot;successful&quot; : 929,&#xA;    &quot;skipped&quot; : 0,&#xA;    &quot;failed&quot; : 0&#xA;  },&#xA;  &quot;hits&quot; : {&#xA;    &quot;total&quot; : 5,&#xA;    &quot;max_score&quot; : null,&#xA;    &quot;hits&quot; : [&#xA;      {&#xA;        &quot;_index&quot; : &quot;sample-development-john&quot;,&#xA;        &quot;_type&quot; : &quot;_doc&quot;,&#xA;        &quot;_id&quot; : &quot;urn:sample:d/78PsC1EHG6nopQCA/n/4230ca5a-5e1e-48ee-a70f-95f7b2d09995&quot;,&#xA;        &quot;_score&quot; : 1.7747711,&#xA;        &quot;_source&quot; : {&#xA;          &quot;document_id&quot; : &quot;78PsC1EHG6nopQCA&quot;,&#xA;          &quot;type&quot; : &quot;node&quot;,&#xA;          &quot;workspace&quot; : {&#xA;            &quot;type&quot; : &quot;space&quot;,&#xA;    ...&#xA;</code></pre>&#xA;<p>However, performing the same query through my NodeJS resolver using the Javascript ES API fails when I copy the exact same query in my code.</p>&#xA;<p><strong>SearchResolver.js</strong></p>&#xA;<pre><code>// parse the cursor argument for pagination.&#xA;search_after = JSON.parse(Buffer.from(args.after, 'base64').toString('ascii'));&#xA;&#xA; const response: ApiResponse&lt;Taskade.Backend.Elasticsearch.SearchBody&gt; = await client.search({&#xA;    index,&#xA;    body: {&#xA;      search_after: [&#xA;        1.8574909,&#xA;        'urn:taskade:d/78PsC1EHG6nopQCA/n/749d1ed1-d08d-44a1-abac-9ebad8c76697',&#xA;      ],&#xA;      sort: [&#xA;        {&#xA;          _score: {&#xA;            order: 'desc',&#xA;          },&#xA;        },&#xA;        {&#xA;          _id: {&#xA;            order: 'asc',&#xA;          },&#xA;        },&#xA;      ],&#xA;      size: 1,&#xA;      query: {&#xA;        bool: {&#xA;          must: [&#xA;            {&#xA;              bool: {&#xA;                should: [&#xA;                  {&#xA;                    bool: {&#xA;                      must: [&#xA;                        {&#xA;                          term: {&#xA;                            type: 'node',&#xA;                          },&#xA;                        },&#xA;                        {&#xA;                          query_string: {&#xA;                            query: 'a',&#xA;                            fields: ['node.text.string', 'node.text.string.english'],&#xA;                          },&#xA;                        },&#xA;                      ],&#xA;                    },&#xA;                  },&#xA;                ],&#xA;              },&#xA;            },&#xA;          ],&#xA;          filter: {&#xA;            bool: {&#xA;              should: [&#xA;                {&#xA;                  bool: {&#xA;                    must: [&#xA;                      {&#xA;                        term: {&#xA;                          'workspace.type': 'space',&#xA;                        },&#xA;                      },&#xA;                      {&#xA;                        terms: {&#xA;                          'workspace.id': ['72MsGpeV9zGu5ytZ'],&#xA;                        },&#xA;                      },&#xA;                    ],&#xA;                  },&#xA;                },&#xA;                {&#xA;                  bool: {&#xA;                    must: [&#xA;                      {&#xA;                        term: {&#xA;                          'workspace.type': 'user',&#xA;                        },&#xA;                      },&#xA;                      {&#xA;                        term: {&#xA;                          'workspace.id': '8',&#xA;                        },&#xA;                      },&#xA;                    ],&#xA;                  },&#xA;                },&#xA;              ],&#xA;            },&#xA;          },&#xA;        },&#xA;      },&#xA;      highlight: {&#xA;        fields: {&#xA;          'comment.body.text': {},&#xA;          'comment.body.text.english': {},&#xA;          'node.text.string': {},&#xA;          'node.text.string.english': {},&#xA;        },&#xA;      },&#xA;    },&#xA;  }&#xA;&#xA;</code></pre>&#xA;<p><strong>Error</strong></p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;parsing_exception&quot;,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 2,&#xA;          &quot;column&quot;: 3&#xA;        }&#xA;      ],&#xA;      &quot;path&quot;: [&#xA;        &quot;search&quot;&#xA;      ],&#xA;      &quot;extensions&quot;: {&#xA;        &quot;code&quot;: &quot;INTERNAL_SERVER_ERROR&quot;,&#xA;        &quot;exception&quot;: {&#xA;          &quot;name&quot;: &quot;ResponseError&quot;,&#xA;          &quot;meta&quot;: {&#xA;            &quot;body&quot;: {&#xA;              &quot;error&quot;: {&#xA;                &quot;root_cause&quot;: [&#xA;                  {&#xA;                    &quot;type&quot;: &quot;parsing_exception&quot;,&#xA;                    &quot;reason&quot;: &quot;Unknown key for a VALUE_STRING in [query].&quot;,&#xA;                    &quot;line&quot;: 1,&#xA;                    &quot;col&quot;: 10&#xA;                  }&#xA;                ],&#xA;                &quot;type&quot;: &quot;parsing_exception&quot;,&#xA;                &quot;reason&quot;: &quot;Unknown key for a VALUE_STRING in [query].&quot;,&#xA;                &quot;line&quot;: 1,&#xA;                &quot;col&quot;: 10&#xA;              },&#xA;              &quot;status&quot;: 400&#xA;            },&#xA;            &quot;statusCode&quot;: 400,&#xA;            &quot;headers&quot;: {&#xA;              &quot;date&quot;: &quot;Mon, 28 Dec 2020 11:58:05 GMT&quot;,&#xA;              &quot;content-type&quot;: &quot;application/json; charset=UTF-8&quot;,&#xA;              &quot;content-length&quot;: &quot;239&quot;,&#xA;              &quot;connection&quot;: &quot;keep-alive&quot;,&#xA;              &quot;access-control-allow-origin&quot;: &quot;*&quot;&#xA;            },&#xA;            &quot;warnings&quot;: null,&#xA;            &quot;meta&quot;: {&#xA;              &quot;context&quot;: null,&#xA;              &quot;request&quot;: {&#xA;                &quot;params&quot;: {&#xA;                  &quot;method&quot;: &quot;POST&quot;,&#xA;                  &quot;path&quot;: &quot;/sample-development-john/_search&quot;,&#xA;                  &quot;body&quot;: &quot;{\&quot;query\&quot;:\&quot;a\&quot;,\&quot;size\&quot;:1,\&quot;sort\&quot;:[{\&quot;_score\&quot;:{\&quot;order\&quot;:\&quot;asc\&quot;}},{\&quot;_id\&quot;:{\&quot;order\&quot;:\&quot;desc\&quot;}}],\&quot;search_after\&quot;:[1.7747711,\&quot;urn:sample:d/78PsC1EHG6nopQCA/n/4230ca5a-5e1e-48ee-a70f-95f7b2d09995\&quot;]}&quot;,&#xA;                  &quot;querystring&quot;: &quot;&quot;,&#xA;                  &quot;headers&quot;: {&#xA;                    &quot;User-Agent&quot;: &quot;elasticsearch-js/6.8.7 (darwin 20.2.0-x64; Node.js v10.21.0)&quot;,&#xA;                    &quot;Content-Type&quot;: &quot;application/json&quot;,&#xA;                    &quot;Content-Length&quot;: &quot;182&quot;&#xA;                  },&#xA;                  &quot;timeout&quot;: 30000&#xA;                },&#xA;                &quot;options&quot;: {&#xA;                  &quot;warnings&quot;: null&#xA;                },&#xA;                &quot;id&quot;: 2&#xA;              },&#xA;              &quot;name&quot;: &quot;elasticsearch-js&quot;,&#xA;              &quot;connection&quot;: {&#xA;                &quot;url&quot;: &quot;https://search-sample-dev-526nv5wyqxj6ahzcql2cyndz5e.us-east-1.es.amazonaws.com/&quot;,&#xA;                &quot;id&quot;: &quot;https://search-sample-dev-526nv5wyqxj6ahzcql2cyndz5e.us-east-1.es.amazonaws.com/&quot;,&#xA;                &quot;headers&quot;: {},&#xA;                &quot;deadCount&quot;: 0,&#xA;                &quot;resurrectTimeout&quot;: 0,&#xA;                &quot;_openRequests&quot;: 0,&#xA;                &quot;status&quot;: &quot;alive&quot;,&#xA;                &quot;roles&quot;: {&#xA;                  &quot;master&quot;: true,&#xA;                  &quot;data&quot;: true,&#xA;                  &quot;ingest&quot;: true,&#xA;                  &quot;ml&quot;: false&#xA;                }&#xA;              },&#xA;              &quot;attempts&quot;: 0,&#xA;              &quot;aborted&quot;: false&#xA;            }&#xA;          },&#xA;          &quot;stacktrace&quot;: [&#xA;            &quot;ResponseError: parsing_exception&quot;,&#xA;            &quot;    at IncomingMessage.response.on (/Users/john/dev/sample/ft/node_modules/@elastic/elasticsearch/lib/Transport.js:296:25)&quot;,&#xA;            &quot;    at IncomingMessage.emit (events.js:203:15)&quot;,&#xA;            &quot;    at IncomingMessage.EventEmitter.emit (domain.js:466:23)&quot;,&#xA;            &quot;    at endReadableNT (_stream_readable.js:1145:12)&quot;,&#xA;            &quot;    at process._tickCallback (internal/process/next_tick.js:63:19)&quot;&#xA;          ]&#xA;        }&#xA;      }&#xA;    }&#xA;  ],&#xA;  &quot;data&quot;: {&#xA;    &quot;search&quot;: null&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>This error occurs when I pass the <code>after</code> (search_after) parameter to my GraphQL call, despite the values for the query all being <strong>hardcoded</strong> (including <code>search_after</code> as seen in the first <code>Query</code> snippet).</p>&#xA;<pre><code>// query will work if `after` is not passed. The values here don't matter since for testing purposes, all values are hardcoded in the resolver.&#xA;query {&#xA;  search(after: &quot;WzEuODU3NDkwOSwidXJuOnRhc2thZGU6ZC83OFBzQzFFSEc2bm9wUUNBL24vNzQ5ZDFlZDEtZDA4ZC00NGExLWFiYWMtOWViYWQ4Yzc2Njk3Il0=&quot;, first:1, filterby:{query:&quot;a&quot;}){&#xA;    edges{&#xA;      cursor&#xA;        node {&#xA;...&#xA;&#xA;</code></pre>&#xA;<p>Why is the query working in the dev console, but not working in my resolver when I pass the <code>after</code> (search_after after parsing the JSON) params to the GQL call despite the query being hardcoded and <strong>identically similar</strong>.</p>&#xA;",6822876,,6822876,2020-12-28 14:35:03,2020-12-28 14:35:03,ElasticSearch query works on dev console but fails in NodeJS instance,<node.js><elasticsearch><graphql>,0,5,0,2020-12-28 12:10:22
65477530,1,,,0,179,"<p>I would like to check if a number is in a specific range dynamically. For example i have a table like:</p>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th style=""text-align: left;"">id</th>&#xA;<th style=""text-align: center;"">value</th>&#xA;<th style=""text-align: right;"">age_range</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td style=""text-align: left;"">1</td>&#xA;<td style=""text-align: center;"">a</td>&#xA;<td style=""text-align: right;"">3-7</td>&#xA;</tr>&#xA;<tr>&#xA;<td style=""text-align: left;"">2</td>&#xA;<td style=""text-align: center;"">b</td>&#xA;<td style=""text-align: right;"">7-10</td>&#xA;</tr>&#xA;<tr>&#xA;<td style=""text-align: left;"">3</td>&#xA;<td style=""text-align: center;"">c</td>&#xA;<td style=""text-align: right;"">3-7</td>&#xA;</tr>&#xA;<tr>&#xA;<td style=""text-align: left;"">4</td>&#xA;<td style=""text-align: center;"">d</td>&#xA;<td style=""text-align: right;"">0-3</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div>&#xA;<p>if the age of the user is 5, i would like to retrieve all rows where age_range is 3-7 without writing the range in the where clause query. For example something like:</p>&#xA;<pre><code>table (where: { 5 in age_range })...&#xA;</code></pre>&#xA;",10160302,,,,2020-12-28 17:55:39,Check if input is in range. HASURA - GRAPHQL,<graphql><hasura>,1,1,0,2020-12-28 12:21:10
65497306,1,65507529,,-1,1098,"<p>I'm using react-admin with Amplify. One of my graphql types has an AWSJSON field containing an array of statuses for a batchJob. I'd like this array to be shown in a datagrid that the user can expand to see result of each item in the batch.</p>&#xA;<p>The data is returned from the API as stringified JSON. How can I JSON.parse the data then pass it to ArrayField to be rendered by Datagrid in my list/show components?</p>&#xA;<p>The contents of the field look like this:</p>&#xA;<pre><code>[{&quot;reference&quot;:&quot;11134&quot;,&quot;status&quot;:&quot;OK&quot;},{&quot;reference&quot;:&quot;10278&quot;,&quot;status&quot;:&quot;OK&quot;}]&#xA;</code></pre>&#xA;<p>UPDATE: the answer below was after I updated the data model a bit to:</p>&#xA;<pre><code>[{&quot;id&quot;: &quot;somerandomuid&quot;, &quot;clientReference&quot;:&quot;11134&quot;,&quot;status&quot;:&quot;OK&quot;}]&#xA;</code></pre>&#xA;<p>My code looks like this:</p>&#xA;<p>Schema:</p>&#xA;<pre><code>  type JobTask&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner }&#xA;      { allow: groups, groups: [&quot;admins&quot;] }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  results: AWSJSON&#xA;  status: String&#xA;  expiryDate: AWSTimestamp! @ttl&#xA;}&#xA;</code></pre>&#xA;<p>Show Component:</p>&#xA;<pre><code>  export const TaskShow = (props) =&gt; {&#xA;    return (&#xA;    &lt;Show title={props.header} {...props}&gt;&#xA;      &lt;SimpleShowLayout&gt;&#xA;        &lt;Datagrid expand={&lt;ResultsPanel /&gt;}&gt;&#xA;          &lt;TextField&#xA;            key={cuid()}&#xA;            fullWidth={true}&#xA;            source=&quot;id&quot;&#xA;            label=&quot;Batch Id&quot;&#xA;          /&gt;&#xA;          &lt;TextField&#xA;            key={cuid()}&#xA;            fullWidth={true}&#xA;            source=&quot;status&quot;&#xA;            label=&quot;Status&quot;&#xA;          /&gt;&#xA;        &lt;/Datagrid&gt;&#xA;      &lt;/SimpleShowLayout&gt;&#xA;    &lt;/Show&gt;&#xA;    );&#xA;</code></pre>&#xA;<p>ResultsPanel Component:</p>&#xA;<pre><code>const ResultsPanel = (props) =&gt; {&#xA;  console.log(props)&#xA;  let resultsArray = JSON.parse(JSON.parse(props.record.results));&#xA;  console.log(resultsArray);&#xA;  return (&#xA;    &lt;&gt;&#xA;      {resultsArray.map((result) =&gt; {&#xA;        return (&#xA;          &lt;ArrayField&gt;&#xA;            &lt;Datagrid&gt;&#xA;              &lt;TextField source=&quot;reference&quot; /&gt;&#xA;              &lt;TextField source=&quot;status&quot; /&gt;&#xA;            &lt;/Datagrid&gt;&#xA;          &lt;/ArrayField&gt;&#xA;        );&#xA;      })}&#xA;    &lt;/&gt;&#xA;  );&#xA;};&#xA;</code></pre>&#xA;<p>But all I get is:</p>&#xA;<p><a href=""https://i.stack.imgur.com/n2MoY.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/n2MoY.png"" alt=""Screenshot of react-admin component "" /></a></p>&#xA;",14326448,,14326448,2020-12-30 13:22:41,2020-12-30 13:22:41,How to parse a stringified JSON field and render results with react-admin,<graphql><aws-amplify><react-admin>,1,9,0,2020-12-29 18:57:49
65500327,1,65514054,,2,1980,"<p>Given the following GraphQL request and variables:</p>&#xA;<p><strong>Request:</strong></p>&#xA;<pre><code>query accounts($filter:AccountFilter, $first_:String, $skip_:Int) {&#xA;  accounts(filter: $filter, first: $first_, skip: $skip_) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><strong>Variables:</strong></p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;filter&quot;: {},&#xA;  &quot;first_&quot;: &quot;3&quot;,&#xA;  &quot;skip_&quot;: 0&#xA;}&#xA;</code></pre>&#xA;<p><strong>Note:</strong> I added underscores to the <code>first_</code> and <code>skip_</code> variable names to help distinguish them from the arguments <code>first</code> and <code>skip</code>.</p>&#xA;<p>I'm getting the following errors:</p>&#xA;<p><code>&quot;Type mismatch on variable $first_ and argument first (String / Int)&quot;</code></p>&#xA;<p><code>&quot;Type mismatch on variable $skip_ and argument skip (Int / Int)&quot;</code></p>&#xA;<p>The first error I created on purpose as a sanity check. The value in the variables should be <code>&quot;first&quot;: 3,</code> and not <code>&quot;first&quot;: &quot;3&quot;,</code>. The second error I don't understand why I'm getting it. How is <code>Int</code> and <code>Int</code> Type mismatched? The <code>first</code> variable/argument error reoprts the same error <code>(Int / Int)</code> when I correctly pass <code>3</code> and change <code>String</code> to <code>Int</code>.</p>&#xA;<p>What am I doing wrong?</p>&#xA;<p><strong>Backend Specs:</strong>&#xA;Ruby on Rails</p>&#xA;<p><strong>Argument Specs:</strong></p>&#xA;<pre><code>&quot;&quot;&quot;&#xA;Interface for the Account model&#xA;&quot;&quot;&quot;&#xA;type Account {&#xA;  friendlyId: String!&#xA;  id: ID!&#xA;  locations: [Location!]!&#xA;  name: String!&#xA;  participants: [User!]!&#xA;  primaryLocation: Location!&#xA;  primarySiteContact: User!&#xA;  siteContacts: [User!]!&#xA;}&#xA;&#xA;input AccountFilter {&#xA;  OR: [AccountFilter!]&#xA;}&#xA;&#xA;type Query {&#xA;  &quot;&quot;&quot;&#xA;  Details for an Account&#xA;  &quot;&quot;&quot;&#xA;  accountDetails(id: ID): Account&#xA;&#xA;  &quot;&quot;&quot;&#xA;  A list of Accounts&#xA;  &quot;&quot;&quot;&#xA;  accounts(filter: AccountFilter, first: Int, skip: Int): [Account!]&#xA;}&#xA;</code></pre>&#xA;",43792,,43792,2020-12-30 01:01:23,2020-12-30 21:55:24,Type mismatch on variable and argument (Int / Int),<graphql><syntax-error><type-mismatch>,1,6,0,2020-12-29 23:59:18
65504355,1,65589825,,1,207,"<p>AWS amplify DynamoDB  Graph QL filter by book title and author name</p>&#xA;<p>i want to search books by book title and author name but my schema allow me to search books by book title and author ID not author name how i can achieve  this.</p>&#xA;<p>following is my graph ql schema</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>type Author &#xA;  @model(subscriptions: null)&#xA;  @auth(&#xA;    rules: [&#xA;      # allow admins to create, update and delete books&#xA;      { allow: groups, groups: [""owner""] }&#xA;      # allow all authenticated users to view books&#xA;      { allow: private, operations: [read] }&#xA;    ]&#xA;  )&#xA;  @key(name: ""authorByCreatedAt"", fields: [""isDeleted"", ""createdAt""], queryField: ""authorByCreatedAt"")&#xA;  {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String!&#xA;  status : Boolean!&#xA;  createdAt: String!&#xA;  image: String!&#xA;  isDeleted: Int!&#xA;  books: [Book] @connection(keyName: ""byAuthor"", fields: [""id""])&#xA;}&#xA;&#xA;type Book &#xA;  @model(subscriptions: null)&#xA;  @auth(&#xA;    rules: [&#xA;      # allow admins to create, update and delete books&#xA;      { allow: groups, groups: [""owner""] }&#xA;      # allow all authenticated users to view books&#xA;      { allow: private, operations: [read] }&#xA;    ]&#xA;  )&#xA;  @key(name: ""bookByCreatedAt"", fields: [""isDeleted"", ""createdAt""], queryField: ""bookByCreatedAt"")&#xA;  @key(name: ""byAuthor"", fields: [""authorId""])&#xA;  {&#xA;    id: ID!&#xA;    title: String!&#xA;    description: String!&#xA;    image: String!&#xA;    age: Int!&#xA;    region: String!&#xA;    isbn: String&#xA;    narrator: String&#xA;    status : Boolean!&#xA;    createdAt: String!&#xA;    isDeleted: Int!&#xA;    book: String!&#xA;    bookType: BookType!&#xA;    authorId: ID!&#xA;    authors: Author @connection(fields: [""authorId""])&#xA;  }&#xA;&#xA;enum BookType {&#xA;  AUDIO&#xA;  EPUB&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",11236202,,,,2021-01-06 03:30:24,AWS amplify Graph QL filter by book title and author name,<amazon-web-services><graphql><amazon-dynamodb><aws-amplify><aws-appsync>,1,0,0,2020-12-30 08:58:24
65519689,2,,65504376,3,,<p>TypeOrm and Postgres have support of <code>jsonb</code> field.</p>&#xA;<pre><code>@Column('jsonb')&#xA;tasks: Foo[];&#xA;</code></pre>&#xA;,5878204,,5878204,2021-08-20 20:01:39,2021-08-20 20:01:39,"",,0,0,0,2020-12-31 10:35:26
65553573,1,,,5,1996,"<p>We have existing database in dynamodb for our application. For one of our new React app, we want to use AWS Amplify and we are trying to use the existing tables.</p>&#xA;<p>I created a skeleton project and went to backend <code>AWS AppSync console -&gt; Data Sources</code> and map the existing table to it. And I added that table definition to my schema.graphql in my react app. When I do an amplify push, I see it creating a new table in dynamodb, rather than pointing to the existing db.</p>&#xA;<p>I also tried to map one of the tables in AppSync Console, and did <code>amplify pull</code> from local project, assuming that will add the definition of the table in my local schema.graphql but that did not happen either. It did not pull down the details of the newly mapped data source from backend app sync console.</p>&#xA;<p>My existing db has lot of data and is shared with other applications as well. I do not want to create a new table.</p>&#xA;<p>Can you pls suggest how to accomplish this?</p>&#xA;<p>Also we have existing lamdba functions which we would want to leverage into this new Amplify project as well. Could you pls suggest pointers for this as well.</p>&#xA;<p>Any help is much appreciated!</p>&#xA;",1426529,,1426529,2021-01-03 18:49:44,2021-09-30 11:17:58,How to use existing dynamo db with AWS Amplify and graphql,<graphql><aws-amplify><aws-appsync><aws-amplify-sdk-js>,2,2,0,2021-01-03 18:43:55
65575347,1,65588266,,1,496,"<p>Good morning,</p>&#xA;<p>I have an Angular WebApp that uses GraphQL codegen with (apollo-angular plugin and all the typescript plugins). Everything works fine but I want to handle Hasura Roles and Hasura User ID. From Hasura Console everything is configured correctly and working.</p>&#xA;<p>Only thing I am missing is how to handle this on the front end. I need to add <code>X-Hasura-Role</code> and <code>X-Hasura-User-Id</code> headers to every request sent to Hasura.&#xA;Is there a way to do this with graphql-codegen?&#xA;What is the right way to do this?</p>&#xA;<p>I know I can add the <code>headers</code> section on the <code>codegen.yml</code>, but obviously the role and userid are dynamic so I cannot hardcode anything there.</p>&#xA;<p>Should I use maybe a <code>customFetch</code> component? This component, thought, should only intercept every request sent to Hasura and add the headers needed. I have no idea how to do this so I hope you can help me (I also hope there is a better solution)</p>&#xA;<p>Best regards</p>&#xA;",1382783,,1382783,2021-01-05 08:40:26,2021-01-05 23:55:44,How to handle X-Hasura-Role with graphql codegen,<graphql><apollo><roles><hasura><codegen>,1,0,0,2021-01-05 08:25:47
65589825,2,,65504355,1,,"<p>If you are coming from the world of relational databases, this might seem like it should be trivial. In the world of DynamoDB it is more complex.  You cannot create a @key that is linked to a @connection ( as far as I understand ). Some solutions to this problem:</p>&#xA;<p><strong>1: Add Author's Name to Book</strong></p>&#xA;<p>The author's name doesn't change typically, so you could do the below. Duplicating data is not frowned upon in DynamoDB/NoSQL world. This will give you a faster query as well.</p>&#xA;<pre><code>type Book &#xA;  @model(subscriptions: null)&#xA;  @key(name: &quot;BooksByAuthorName&quot;, fields: [&quot;authorName&quot;], queryField: &quot;getBooksByAuthorName&quot;)&#xA;  {&#xA;    id: ID!&#xA;    title: String!&#xA;    description: String!&#xA;    image: String!&#xA;    age: Int!&#xA;    region: String!&#xA;    isbn: String&#xA;    narrator: String&#xA;    status : Boolean!&#xA;    createdAt: String!&#xA;    isDeleted: Int!&#xA;    book: String!&#xA;    bookType: BookType!&#xA;    authorId: ID!&#xA;    authorName: String&#xA;    authors: Author @connection(fields: [&quot;authorId&quot;])&#xA;  }&#xA;</code></pre>&#xA;<p><strong>2: Custom Resolvers</strong></p>&#xA;<p>Custom resolvers, like <a href=""https://docs.amplify.aws/cli/graphql-transformer/function"" rel=""nofollow noreferrer"">@function</a> ( Lambda functions ), or the more complex <a href=""https://docs.amplify.aws/cli/graphql-transformer/resolvers#definition"" rel=""nofollow noreferrer"">custom resolver</a> templates can be used for multiple searches, and custom logic, though I would suggest option 1 first.</p>&#xA;<p><strong>3: Exploring @searchable directive</strong></p>&#xA;<p><a href=""https://docs.amplify.aws/cli/graphql-transformer/searchable"" rel=""nofollow noreferrer"">See this for more info</a></p>&#xA;",3238443,,,,2021-01-06 03:30:24,"",,0,0,0,2021-01-06 03:30:24
65596033,2,,65586043,0,,"<p>You should post your question with more details. Like <strong>the actual code making the request to Hasura graphql endpoint</strong></p>&#xA;<p>Here's an example request using the <strong>Browser <code>fetch</code> api</strong></p>&#xA;<pre><code>const query = `query MyQuery {&#xA;  t_user {&#xA;    name&#xA;    id  &#xA;  }&#xA;}`;&#xA;&#xA;fetch('https://lasting-grub-95.hasura.app/v1/graphql', {&#xA;    method: 'POST',&#xA;    headers: {&#xA;        'Content-Type': 'application/json',&#xA;        'x-hasura-admin-secret': 'my-secret'&#xA;    },&#xA;    body: JSON.stringify({&#xA;        query&#xA;    })&#xA;})&#xA;    .then(res =&gt; res.json())&#xA;    .then(res =&gt; {&#xA;        console.log('Hasura response: ', res);&#xA;    })&#xA;    .catch(err =&gt; {&#xA;        console.error(err);&#xA;    })&#xA;</code></pre>&#xA;<p>For the <strong>admin-secret</strong> go to projects page of <strong><a href=""https://cloud.hasura.io/projects"" rel=""nofollow noreferrer"">Hasura Cloud</a></strong>. There you would see your project listed with necessary details including <code>Admin Secret</code></p>&#xA;",13543384,,13543384,2021-01-06 12:52:34,2021-01-06 12:52:34,"",,0,1,0,2021-01-06 12:46:28
65615619,1,,,0,149,"<p>I am using AWS Amplify and DynamoDB and I would like to set a limit from a the nested field &quot;medias&quot;. This is the query on AppSync to get only 4 items :</p>&#xA;<pre><code>{&#xA;  getUser(id: &quot;xxx4e5b-9704-564xxx&quot;) {&#xA;    medias(limit: 4) {&#xA;      items {&#xA;        title&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>It seems to work, this is the result I have on AppSync :</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;getUser&quot;: {&#xA;      &quot;medias&quot;: {&#xA;        [&#xA;          {&#xA;            &quot;title&quot;: &quot;Test 1&quot;&#xA;          },&#xA;          {&#xA;            &quot;title&quot;: &quot;Test Audio&quot;&#xA;          },&#xA;          {&#xA;            &quot;title&quot;: &quot;Test Guitare&quot;&#xA;          },&#xA;          {&#xA;            &quot;title&quot;: &quot;Test lien&quot;&#xA;          }&#xA;        ],&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I would like to know how to do this query on my React application ? I tried this but it didn't work (I should have 4 media items in my response but I get more) :</p>&#xA;<pre><code>const query = await API.graphql(&#xA;        graphqlOperation(getUser, {&#xA;          id: userID,&#xA;          medias: { limit: 4 }&#xA;        })&#xA;      )&#xA;</code></pre>&#xA;<p>I didn't find any help on amplify doc. Could you please help me ?</p>&#xA;",5284379,,,,2021-01-08 13:58:52,How to set a limit for nested field in AWS amplify DynamoDB schema on my React App?,<reactjs><amazon-web-services><graphql><amazon-dynamodb><aws-amplify>,1,0,0,2021-01-07 15:51:23
65636149,1,65636969,,0,247,"<p>I want to make data private (to return null when query is fetched).&#xA;I know that there is graphql_data_is_private filter, but I don't know how to implement my query, there's no example in docs.</p>&#xA;<p>Docs (<a href=""https://www.wpgraphql.com/filters/graphql_data_is_private/"" rel=""nofollow noreferrer"">https://www.wpgraphql.com/filters/graphql_data_is_private/</a>):</p>&#xA;<pre><code>apply_filters( 'graphql_data_is_private', bool $is_private, string $model_name, mixed $data, string $visibility, int $owner, WP_User $current_user );&#xA;</code></pre>&#xA;<p>My query:</p>&#xA;<pre><code>query MyQuery {&#xA;  users {&#xA;    edges {&#xA;      node {&#xA;        lastName&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",13699811,,,,2021-01-20 02:14:22,Wpgraphql- make data private,<wordpress><graphql>,2,0,0,2021-01-08 20:44:38
65636969,2,,65636149,2,,"<p>It's not a query option, it's a BE definition, you should add a filter (in your plugin or theme code) to modify (adapt to your needs) standard BE behaviour. This filter (hook) (for queried object) is used to check if data should be returned.</p>&#xA;<pre><code>add_filter('graphql_data_is_private', 'add_graphql_private_visibility_filter', 10, 6);&#xA;&#xA;function add_graphql_private_visibility_filter($is_private, $model_name, $data, $visibility, $owner, $current_user)&#xA;{&#xA;  if ('UserObject' === $model_name) {&#xA;    // if( is_your_allowed_data_condition ) return false;&#xA;    return true;&#xA;  }&#xA;&#xA;  // return not changed for other objects&#xA;  return $is_private;&#xA;}&#xA;</code></pre>&#xA;",6124657,,,,2021-01-08 22:00:00,"",,0,0,0,2021-01-08 22:00:00
65639389,2,,65594922,1,,"<p>I’ll try to answer on this question as much as I can:</p>&#xA;<ol>&#xA;<li>You don’t loose capability to share permissions with  UI if use default conditions. Conditions are interpreted in js when you run <code>ability.can</code>. So, if mongo query language is fine for you, then no need to change it!</li>&#xA;<li>Graphql shield is a special kind of graphql middleware. If you use casl and graphql middlewares, <strong>you don’t need graphql shield!</strong> use either casl + custom graphql middleware or graphql-shield</li>&#xA;<li>Every graphql type has underlying source type. Source type is basically your domain model or just db model that encapsulates business logic. This is your mapping :) just check permissions on source type and that’s it. But if you share permissions with UI, then you need to transform backend permissions (before sending to UI) which are written for source types, to those that can be applied to graphql type! Alternatively, you can expose some private props (e.g., <code>ownerId</code> of Car) as part of graphql type. But if the only purpose of this is to satisfy permissions sharing, then I’d go with transformation option:</li>&#xA;</ol>&#xA;<pre class=""lang-js prettyprint-override""><code>function defineAbility(user, props) {&#xA;   const { can, rules} = new AbilityBuilder(Ability)&#xA;&#xA;   can('read', 'Post', { [props.authorId]: user.id })&#xA;   // ...&#xA;&#xA;   return rules;&#xA;}&#xA;&#xA;const currentUser = { id: 1 }&#xA;const backendRules = defineAbility(currentUser, {&#xA;  authorId: 'authorId'&#xA;});&#xA;&#xA;const uiRules = defineAbility(currentUser, {&#xA;  authorId: 'author.id'&#xA;});&#xA;</code></pre>&#xA;<p>Alternatively, you can check permissions on backend and share results with frontend by exposing subtype on every graphql type:</p>&#xA;<pre><code>&#xA;{&#xA;   cars {&#xA;     items {&#xA;       permissions {&#xA;         canUpdate&#xA;         canRead&#xA;       }&#xA;     }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>The consequences of this is that your server will spend more time generating response, especially when you retrieve items for pagination. So, check response times before proceeding with that. The good point of this is that you don’t need casl on UI, and permissions checking logic is completely hidden on backend</p>&#xA;",1445507,,,,2021-01-09 04:37:41,"",,0,0,0,2021-01-09 04:37:41
65651712,1,65652788,,2,882,"<p>I have an AppSync GraphQL API defined. The API is using Cognito UserPools as primary authentication. This part works fine.</p>&#xA;<p>I am trying to execute the request from the Nodejs Lambda function using <code>axios</code> and <code>aws4</code>. The mutation I am trying to hit is configure something like this in my schema (omitting most of the schema):</p>&#xA;<pre><code>AppSyncSchema:&#xA;    Type: AWS::AppSync::GraphQLSchema&#xA;    Properties:&#xA;      ApiId: !GetAtt MyApi.ApiId&#xA;      Definition: |&#xA;        type Something {&#xA;          someId: ID!&#xA;        }&#xA;        input SomethingInput {&#xA;          someId: ID!&#xA;        }&#xA;        type Mutation {&#xA;          doSomething(input: SomethingInput!): Something @aws_iam&#xA;        }&#xA;        &#xA;</code></pre>&#xA;<p>I have configure the Lambda function execution role to have <code>appsync:GraphQL</code> permission:</p>&#xA;<pre><code>&quot;Action&quot;: [&#xA;  &quot;appsync:GraphQL&quot;&#xA;],&#xA;&quot;Resource&quot;: &quot;arn:aws:appsync:eu-west-2:xxxx:apis/yyyy/*&quot;,&#xA;&quot;Effect&quot;: &quot;Allow&quot;,&#xA;&quot;Sid&quot;: &quot;AllowAppSyncExecution&quot;&#xA;</code></pre>&#xA;<p>From different articles online, I have put together some request that my Nodejs Typescript function then tries to execute:</p>&#xA;<pre><code> const doSomething = `mutation doSomething($input: SomethingInput!) {&#xA;    doSomething(input: $input) {&#xA;      someId&#xA;    }&#xA;  }`;&#xA;&#xA;  const data = {&#xA;    operationName: 'doSomething',&#xA;    query: doSomething,&#xA;    variables: {&#xA;      input: { someId: 'abc' },&#xA;    },&#xA;  };&#xA;  const body = JSON.stringify(data);&#xA;&#xA;  const signOptions = {&#xA;    method: 'POST',&#xA;    url: 'https://zzzz.appsync-api.eu-west-2.amazonaws.com/graphql, &#xA;    host: 'zzzz.appsync-api.eu-west-2.amazonaws.com',&#xA;    path: '/graphql',&#xA;    region: process.env.AWS_REGION,&#xA;    service: 'appsync',&#xA;    headers: {&#xA;      'content-type': 'application/json',&#xA;    },&#xA;    body, // used by aws4&#xA;    data, // used by axios&#xA;  };&#xA;&#xA;  const creds = {&#xA;    accessKeyId: process.env.AWS_ACCESS_KEY_ID,&#xA;    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,&#xA;    sessionToken: process.env.AWS_SESSION_TOKEN,&#xA;  };&#xA;&#xA;  const signed = aws4.sign(signOptions, creds);&#xA;  delete signed.headers.Host;&#xA;  delete signed.headers['Content-Length'];&#xA;&#xA;  console.log(signed);&#xA;  console.log('Got signed headers');&#xA;&#xA;  try {&#xA;    await axios(signed);&#xA;  } catch (err) {&#xA;    console.error('Fialed to execute AppSync request', err);&#xA;    throw err;&#xA;  }&#xA;</code></pre>&#xA;<p>I am always getting a <code>Request failed with status code 401</code> response back. The AppSync logs don't reveal much more:</p>&#xA;<pre><code>{&#xA;    &quot;logType&quot;: &quot;RequestSummary&quot;,&#xA;    &quot;requestId&quot;: &quot;11111111&quot;,&#xA;    &quot;graphQLAPIId&quot;: &quot;some id&quot;,&#xA;    &quot;statusCode&quot;: 401,&#xA;    &quot;latency&quot;: 7079000&#xA;}&#xA;</code></pre>&#xA;<p>What am I missing in configuring this correctly? Is there something I need to add to allow AWS IAM only for a specific mutation or do you see any issue with the way I am trying to execute the request?</p>&#xA;<p>These are the articles I was referencing:</p>&#xA;<p><a href=""https://medium.com/@barend.bootha/manually-triggering-appsync-apollo-subscriptions-6e78471821ca"" rel=""nofollow noreferrer"">manually-triggering-appsync-apollo-subscriptions</a></p>&#xA;<p><a href=""https://medium.com/@joshua.a.kahn/calling-amazon-api-gateway-authenticated-methods-with-axios-and-aws4-6eeda1aa8696"" rel=""nofollow noreferrer"">calling-amazon-api-gateway-authenticated-methods-with-axios-and-aws4</a></p>&#xA;",4587498,,,,2021-03-01 13:42:50,AppSync with AWS4 and mixed authentication type (UserPools and IAM),<aws-lambda><graphql><amazon-cognito><amazon-iam><aws-appsync>,1,0,0,2021-01-10 09:19:33
65652788,2,,65651712,4,,"<p>Got it working. I had to add additional authentication provider to the <code>AWS::AppSync::GraphQLApi</code>. In CloudFormation, this looks like an additional property:</p>&#xA;<pre><code>  Type: AWS::AppSync::GraphQLApi&#xA;    Properties:&#xA;      Name: !Ref MyApi&#xA;      AuthenticationType: AMAZON_COGNITO_USER_POOLS&#xA;      UserPoolConfig:&#xA;        UserPoolId: !Ref MyPool&#xA;        AwsRegion: !Ref MyRegion&#xA;        DefaultAction: ALLOW&#xA;      AdditionalAuthenticationProviders:&#xA;        - AuthenticationType: AWS_IAM&#xA;</code></pre>&#xA;<p>After making this work, I got a response from AppSync GraphQL but it contained GraphQL errors for all fields in the response object:</p>&#xA;<p><code>Not Authorized to access someId on type Something</code></p>&#xA;<p>To get around this I had to also allow IAM on this type in the GraphQL Schema:</p>&#xA;<pre><code>type Something @aws_cognito_user_pools @aws_iam {&#xA;  someId: ID!&#xA;}&#xA;</code></pre>&#xA;",4587498,,4587498,2021-01-10 11:51:35,2021-01-10 11:51:35,"",,0,0,0,2021-01-10 11:30:25
65659687,1,,,6,3441,"<p>I have been attempting to interact with AppSync/GraphQL from:</p>&#xA;<ul>&#xA;<li>Lambda - Create (works) Update (does not change data)</li>&#xA;<li>Angular - Create/Update subscription received, but object is null</li>&#xA;<li>Angular - Spoof update (does not change data)</li>&#xA;<li>AppSync Console - Spoof update (does not change data)</li>&#xA;</ul>&#xA;<p>Post:</p>&#xA;<pre><code>mutation MyMutation {&#xA;  updateAsset(input: {&#xA;      id: &quot;b34d3aa3-fbc4-48b5-acba-xxxxxxxxxxx&quot;,&#xA;      owner: &quot;51b691a5-d088-4ac0-9f46-xxxxxxxxxxxx&quot;,&#xA;      description: &quot;AppSync&quot;&#xA;    }) {&#xA;    id&#xA;    owner&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Response:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;updateAsset&quot;: {&#xA;      &quot;id&quot;: &quot;b34d3aa3-fbc4-48b5-acba-xxxxxxxxxx&quot;,&#xA;      &quot;owner&quot;: &quot;51b691a5-d088-4ac0-9f46-xxxxxxxxxxx&quot;,&#xA;      &quot;description&quot;: &quot;Edit Edit from AppSync&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The version in DynamoDB gets auto-incremented each time I send the query.  But the description remains the same as originally set.</p>&#xA;<p>Auth Rules on Schema -</p>&#xA;<pre><code>@auth(&#xA;    rules: [&#xA;        { allow: public, provider: apiKey, operations: [create, update, read] },&#xA;        { allow: private, provider: userPools, operations: [read, create, update, delete] }&#xA;        { allow: groups, groups: [&quot;admin&quot;], operations: [read, create, update, delete] }&#xA;    ])&#xA;</code></pre>&#xA;<p>For now on the Frontend I'm cheating and just requesting the data after I received a null subscription event.  But as I've stated I only seem to be able to set any of the data once and then I can't update it.</p>&#xA;<p>Any insight appreciated.</p>&#xA;<p>Update: I even decided to try a DeleteAsset statement and it won't delete but revs the version.</p>&#xA;<p>I guess maybe the next sane thing to do is to either stand up a new environment or attempt to stand this up in a fresh account.</p>&#xA;<p>Update: I have a working theory this has something to do with Conflict detection / rejection.  When I try to delete via AppSync direct I get a rejection.  From Angular I just get the record back with no delete.</p>&#xA;<p>After adding additional Auth on the API, I remember it asked about conflict resolution and I chose &quot;AutoMerge&quot;.  Doc on this at <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/conflict-detection-and-sync.html"" rel=""noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/conflict-detection-and-sync.html</a></p>&#xA;",641470,,641470,2021-01-11 14:49:47,2022-08-15 21:49:37,Amplify and AppSync not updating data on mutation from multiple sources,<graphql><amazon-dynamodb><aws-appsync><amplify>,3,0,0,2021-01-10 23:43:07
65659980,2,,65649383,7,,"<p>Hasura support helped me pinpoint it to the metadata stored in the Graphql console. Hope this helps someone else save a little time.</p>&#xA;<p>&quot;If you make DDL changes to your database from outside Hasura, you must manually reload the Hasura metadata so that Hasura knows that something has changed and it adapts to those changes accordingly.You can reload the metadata by clicking on the settings icon on the top right in console.&quot;</p>&#xA;",13471213,,,,2021-01-11 00:32:07,"",,0,2,0,2021-01-11 00:32:07
65660279,1,65675825,,1,886,"<p>I am using Hasura on top of Postgres to store companies and other information. The source data has the same spelling of records, but in differing cases - for example:</p>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th>name</th>&#xA;<th>country</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td>Reckitt Benckiser (Aust) Pty Ltd</td>&#xA;<td>US</td>&#xA;</tr>&#xA;<tr>&#xA;<td>RECKITT BENCKISER (AUST) PTY LTD</td>&#xA;<td>AU</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div>&#xA;<p>I have an index on the name of the company:</p>&#xA;<pre><code>CREATE UNIQUE INDEX name_company_unique_idx on company (LOWER(name));&#xA;</code></pre>&#xA;<p>When I &quot;upsert&quot; the second record, it throws a uniqueness error, so the index is working correctly. However what I want is for the second record to realise the first record is the same thing, and update the country to AU. If I don't have the index, I get two records for the same entity, in differing cases.</p>&#xA;<p>I don't want to store everything in upper or lower case, but am happy for it to take whatever case the first record that was inserted is.</p>&#xA;<p>How can I make the upsert process case agnostic?</p>&#xA;",1048175,,1367454,2021-01-11 03:00:06,2022-09-14 23:41:15,"case insensitive uniqueness - how to update against the current record, regardless of case?",<postgresql><graphql><hasura>,2,1,0,2021-01-11 01:23:22
65669523,2,,65659687,12,,"<p>After further review I'll note what happened in the hopes it helps someone else.</p>&#xA;<p>Created <code>amplify add api</code>&#xA;This walked me thru a wizard.  I used the existing Cognito UserPool since I had not foreseen I would need to call this API from a S3 Trigger (Lambda Function) later.</p>&#xA;<p>Now needing to grant <code>apiKey</code> or preferably IAM access from the Lambda to AppSync/GraphQL API I performed <code>amplify update api</code> and added the additional Auth setting.&#xA;This asked me how I wanted to solve conflict, since more than one source can edit the data.  Because I just hit &quot;agree&quot; on Terms and Conditions and rarely read the manual; I selected 'AutoMerge' .. sounds nice right?</p>&#xA;<p>So now if you read the fine print, edits made to a table will be rejected as we now have this _version (Int) that would need to get passed so AutoMerge can decide if it wants to take your change.&#xA;It also creates an extra DataStore Table in DynamoDB tracking versions.  So in order to properly deal with this strategy you'd need to extend your schema to include <code>_version</code> not just <code>id</code> or whatever primary key you opted to use.</p>&#xA;<p>Also note: if you delete it sets <code>_delete</code> Bool to true.  This actually still is returned to the UI so now your initial query needs to filter off (or not) deleted records.</p>&#xA;<p>Determined I also didn't need this.  I don't want to use a Datastore (least not now) so: I found the offender in transform.conf.json within the API. After executing <code>amplify update api</code>, GraphQL, I chose 'Disable Datastore for entire API` and it got rid of the ConflictHandler an ConflictDetection.</p>&#xA;<p>This was also agitating my Angular 11 subscription to Create/Update as the added values this created broke the expected model.  Not to mention the even back due to nothing changing was null.</p>&#xA;",641470,,641470,2021-02-21 17:02:36,2021-02-21 17:02:36,"",,0,1,0,2021-01-11 15:17:11
65671999,1,,,0,655,<p>My organisation is implementing a solution that require the information protection from&#xA;microsoft graphql api.</p>&#xA;<p>We're trying to fetch policies and labels in order to:</p>&#xA;<ul>&#xA;<li>add label</li>&#xA;<li>apply/publish label (label policy)</li>&#xA;</ul>&#xA;<p>Is it possible to achieve that with the api?</p>&#xA;,14984340,,,,2021-01-12 05:17:18,Is there a way to work with information protection of office365 in Microsoft APIs? ideally graphql,<graphql><microsoft-graph-api><office365><microsoft-information-protection>,1,0,0,2021-01-11 17:47:12
65682164,1,,,2,184,"<p>I have been trying to deploy a backend api service made with graphql api and express to Amazon web services. This is my folder structure</p>&#xA;<pre><code>Graphql-api&#xA;       -src&#xA;           -index.js&#xA;       -serverless.yml&#xA;       -index.js(this only contains an import statement of the src folder)&#xA;</code></pre>&#xA;<p>The serverless.yml looks like this</p>&#xA;<pre><code>service: graphql-api&#xA;&#xA;provider:&#xA;  name: aws&#xA;  runtime: nodejs12.x&#xA;  lambdaHashingVersion: 20201221&#xA;&#xA;functions:&#xA;  api:&#xA;    handler: src/index.handler&#xA;    events:&#xA;      - http:&#xA;          path: graphql&#xA;          method: ANY&#xA;          cors: true&#xA;            &#xA;</code></pre>&#xA;<p>And I have exported this handler in my src/index.js file</p>&#xA;<pre><code>`const awsServerlessExpress = require('aws-serverless-express');&#xA;const app = require('./app');&#xA;&#xA;const server = awsServerlessExpress.createServer(app);&#xA;&#xA;exports.handler = (event, context) =&gt; awsServerlessExpress.proxy(server, event, context);`&#xA;</code></pre>&#xA;<p>But when I run serverless deploy and get the endpoint url which is: <a href=""https://nir4749aal.execute-api.us-east-1.amazonaws.com/dev/graphql"" rel=""nofollow noreferrer"">https://nir4749aal.execute-api.us-east-1.amazonaws.com/dev/graphql</a>&#xA;I get a message saying internal server error. I can't figure out what I am doing wrong. This is my first time trying to deploy to AWS. Any help or suggestion would help thanks in advance.</p>&#xA;<p>-----UPDATE--------&#xA;This are the logs from lambda</p>&#xA;<pre><code>{&#xA;    &quot;errorType&quot;: &quot;Runtime.UserCodeSyntaxError&quot;,&#xA;    &quot;errorMessage&quot;: &quot;SyntaxError: Cannot use import statement outside a module&quot;,&#xA;    &quot;stack&quot;: [&#xA;        &quot;Runtime.UserCodeSyntaxError: SyntaxError: Cannot use import statement outside a module&quot;,&#xA;        &quot;    at _loadUserApp (/var/runtime/UserFunction.js:98:13)&quot;,&#xA;        &quot;    at Object.module.exports.load (/var/runtime/UserFunction.js:140:17)&quot;,&#xA;        &quot;    at Object.&lt;anonymous&gt; (/var/runtime/index.js:43:30)&quot;,&#xA;        &quot;    at Module._compile (internal/modules/cjs/loader.js:1015:30)&quot;,&#xA;        &quot;    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1035:10)&quot;,&#xA;        &quot;    at Module.load (internal/modules/cjs/loader.js:879:32)&quot;,&#xA;        &quot;    at Function.Module._load (internal/modules/cjs/loader.js:724:14)&quot;,&#xA;        &quot;    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:60:12)&quot;,&#xA;        &quot;    at internal/main/run_main_module.js:17:47&quot;&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;",14989449,,14989449,2021-01-12 13:15:58,2021-01-12 13:15:58,How to deploy a graphql api built with express to AWS serverless?,<amazon-web-services><express><graphql>,0,0,0,2021-01-12 10:32:57
65723084,1,,,1,707,"<p>I have a pipeline resolver that gets data from two datasources sharing the same schema.</p>&#xA;<p>Let's say both of them return a list of 10 items each (a total of 20). How can I merge both outputs into one list and return it to AppSync properly as a Json? One is going to be <code>$context.result</code> and the other is <code>$context.prev.result</code>.</p>&#xA;<p>Any methods/functions that can join both of them in VTL (they are of type <code>List</code> if I'm not mistaken)?</p>&#xA;<p>Edit:&#xA;As of now, this is my only solution; doesn't seem efficient as it iterates through the whole list and add it one by one to the other list:</p>&#xA;<pre><code>#foreach( $item in $context.prev.result )&#xA;    $util.qr($context.result.add($item))&#xA;#end&#xA;&#xA;$util.toJson($context.result)&#xA;</code></pre>&#xA;<p>Thanks</p>&#xA;",7043805,,7043805,2021-01-15 00:46:40,2021-05-06 19:17:30,AppSync Resolver Pipeline - Multiple Outputs Joining,<amazon-web-services><graphql><aws-appsync><vtl>,1,0,0,2021-01-14 16:40:46
65797527,1,,,0,103,"<p>GraphQL Lighthouse polices <code>user-&gt;can('view')</code> not working, I have created policy and registered as well in AuthServiceProvider</p>&#xA;<pre><code>protected $policies = [&#xA;    'App\Model\Post' =&gt; 'App\Policies\MyPostPolicy',&#xA;&#xA;];&#xA;</code></pre>&#xA;<p>But I am not able to access this condition</p>&#xA;<pre><code>($user-&gt;can('update', $post)) {&#xA;    //user is authorized now&#xA;}&#xA;</code></pre>&#xA;<p>the above can is not working in laravel 6, please address me if I have to add any additional step, please thanks</p>&#xA;",10997383,,6632744,2021-01-19 23:18:39,2021-12-01 08:11:19,GraphQL Lighthouse polices user->can('view') not working,<laravel><graphql><authorization>,1,1,0,2021-01-19 18:39:55
65797770,2,,65797769,0,,"<p>Extending GraphQLQuery provides access to the operation name, operation id, and variables, which can be used to build up the url.  I also print out the operation name and variables for the query.</p>&#xA;<pre><code>extension GraphQLQuery {&#xA;&#xA;    func printInfo() {&#xA;    &#xA;        if let variables = self.variables?.JSONString {&#xA;        &#xA;            let cleanedVariables = variables.replacingOccurrences(of: &quot;\\&quot;, with: &quot;&quot;)&#xA;            print(&quot;GraphQL Query: \(self.operationName) \(variables))&quot;)&#xA;        &#xA;            if let operationID = self.operationIdentifier {&#xA;                            &#xA;                let url = &quot;\(GraphQLClient.shared.url)?extensions={\&quot;persistedQuery\&quot;:{\&quot;sha256Hash\&quot;:\&quot;\(operationID)\&quot;,\&quot;version\&quot;:1}}&amp;id=\(operationID)&amp;operationName=\(self.operationName)&amp;variables=\(cleanedVariables)&quot;&#xA;                print(&quot;GraphQL URL&quot;, url)&#xA;            }&#xA;        &#xA;        } else {&#xA;            print(&quot;GraphQL Query: \(self.operationName)&quot;)&#xA;&#xA;            if let operationID = self.operationIdentifier {&#xA;                            &#xA;                let url = &quot;\(GraphQLClient.shared.url)?extensions={\&quot;persistedQuery\&quot;:{\&quot;sha256Hash\&quot;:\&quot;\(operationID)\&quot;,\&quot;version\&quot;:1}}&amp;id=\(operationID)&amp;operationName=\(self.operationName)&quot;&#xA;                print(&quot;GraphQL URL&quot;, url)&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Usage:</p>&#xA;<pre><code>let standingsQuery = GetStandingsForSportQuery(sportID: sportIDInt, season: season)&#xA;standingsQuery.printInfo()&#xA;</code></pre>&#xA;<p>Example output:</p>&#xA;<pre><code>GraphQL Query: getStandingsForSport {&quot;sportID&quot;:7,&quot;season&quot;:&quot;2020&quot;})&#xA;GraphQL URL: https://api.company.com/graphql?extensions={&quot;persistedQuery&quot;:{&quot;sha256Hash&quot;:&quot;932b414fdadb641f95659d6c61aa29d6d6b0ccf1fa704a0ace751187b90b8cac&quot;,&quot;version&quot;:1}}&amp;id=932b414fdadb641f95659d6c61aa29d6d6b0ccf1fa704a0ace751187b90b8cac&amp;operationName=getStandingsForSport&amp;variables={&quot;sportID&quot;:1,&quot;season&quot;:&quot;2020&quot;}&#xA;</code></pre>&#xA;<p>The url format in this example may not be typical as we're using persisted queries.  I used Charles proxy to see the actual url being sent so I'd know the format.</p>&#xA;<p>You could also extend GraphQLOperation instead of GraphQLQuery to get this same info, which would also support mutations and subscriptions.</p>&#xA;",7270493,,7270493,2022-01-27 22:32:40,2022-01-27 22:32:40,"",,0,1,0,2021-01-19 18:57:46
65802148,2,,65636149,0,,"<p>Otherwise, you can use the GraphQL API for WordPress, which has native access control: <a href=""https://graphql-api.com/guides/use/defining-access-control/"" rel=""nofollow noreferrer"">https://graphql-api.com/guides/use/defining-access-control/</a></p>&#xA;<p>Then you can disable the field, or grant access to some users only, and make it private.</p>&#xA;<p>Disclaimer: I'm the author of this plugin.</p>&#xA;",14402031,,,,2021-01-20 02:14:22,"",,0,0,0,2021-01-20 02:14:22
65804982,2,,65644389,0,,"<p>i think its better to use a global error handler widget that you can call with yout Query widget</p>&#xA;<p>here is my example error handler</p>&#xA;<pre><code>final _appstate = getIt.get&lt;AppState&gt;();&#xA;&#xA;class ExceptionBuilder extends StatelessWidget {&#xA;  final OperationException exception;&#xA;  final bool hasData;&#xA;  final VoidCallback refetch;&#xA;  const ExceptionBuilder(&#xA;      {Key key,&#xA;      @required this.exception,&#xA;      @required this.hasData,&#xA;      @required this.refetch})&#xA;      : super(key: key);&#xA;&#xA;  Widget _resolver(BuildContext context) {&#xA;    if ((exception.linkException is LinkException)) {&#xA;      return SliverFillRemaining(&#xA;        hasScrollBody: false,&#xA;        child: Center(&#xA;          child: Column(mainAxisSize: MainAxisSize.min, children: [&#xA;            emptyList(context, icon: Icons.wifi_off, msg: &quot;Network Error&quot;),&#xA;            FlatButton(&#xA;                onPressed: refetch,&#xA;                child: Text(&#xA;                  &quot;retry&quot;,&#xA;                  style: TextStyle(color: accentColor),&#xA;                ))&#xA;          ]),&#xA;        ),&#xA;      );&#xA;    } else if (exception.graphqlErrors.isNotEmpty) {&#xA;      List&lt;String&gt; _errors = exception.graphqlErrors[0].message.split(':');&#xA;&#xA;      if (_errors[1] == &quot; JWTExpired&quot;) {&#xA;        _appstate.refreshToken();&#xA;        return SliverFillRemaining(&#xA;            hasScrollBody: false,&#xA;            child: Container(&#xA;              alignment: Alignment.center,&#xA;              child: masker(context, Loader()),&#xA;            ));&#xA;      }&#xA;      return SliverFillRemaining(&#xA;        hasScrollBody: false,&#xA;        child: Column(mainAxisSize: MainAxisSize.min, children: [&#xA;          emptyList(context,&#xA;              icon: Icons.warning_amber_rounded, msg: &quot;Something went wrong&quot;),&#xA;          FlatButton(&#xA;              onPressed: refetch,&#xA;              child: Text(&#xA;                &quot;retry&quot;,&#xA;                style: TextStyle(color: accentColor),&#xA;              ))&#xA;        ]),&#xA;      );&#xA;    }&#xA;&#xA;    return SliverToBoxAdapter(&#xA;      child: SizedBox.shrink(),&#xA;    );&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return _resolver(context);&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I am using sliver widget because i am calling it in CustomScrollView</p>&#xA;<p>here is the resolver method</p>&#xA;<pre><code>  List&lt;Widget&gt; _resolver(BuildContext context, QueryResult result,&#xA;      FetchMore fetchMore, Refetch refetch) {&#xA;    if (result.isLoading &amp;&amp; isNull(result.data)) {&#xA;      return [&#xA;        SliverFillRemaining(&#xA;            hasScrollBody: false,&#xA;            child: Container(&#xA;              alignment: Alignment.center,&#xA;              child: masker(context, Loader()),&#xA;            ))&#xA;      ];&#xA;    }&#xA;&#xA;    if (!isNull(result.data)) {&#xA;      List&lt;PersonMiniSchedule&gt; _schedule = scheduleMiniJsonToList(&#xA;        result.data['person_max_score_per_schedule'],&#xA;      );&#xA;&#xA;      return [&#xA;        SliverToBoxAdapter(child: SizedBox(height: 30)),&#xA;        _schedule.isEmpty&#xA;            ? SliverFillRemaining(&#xA;                child: Center(&#xA;                    child: emptyList(context,&#xA;                        icon: FontAwesomeIcons.book, msg: &quot;No Schedules Yet.&quot;)),&#xA;              )&#xA;            : SliverList(&#xA;                delegate: SliverChildBuilderDelegate(&#xA;                    (BuildContext context, int index) {&#xA;                return ScheduleCard(&#xA;                  schedule: _schedule[index],&#xA;                );&#xA;              }, childCount: _schedule.length)),&#xA;      ];&#xA;    }&#xA;&#xA;    if (result.hasException) {&#xA;      return [&#xA;        ExceptionBuilder(&#xA;            exception: result.exception,&#xA;            hasData: isNull(result.data),&#xA;            refetch: refetch)&#xA;      ];&#xA;    }&#xA;&#xA;    return [&#xA;      SliverToBoxAdapter(&#xA;        child: SizedBox.shrink(),&#xA;      )&#xA;    ];&#xA;  }&#xA;</code></pre>&#xA;<p>here is the Query widget</p>&#xA;<pre><code>Query(&#xA;            options: QueryOptions(&#xA;                variables: {'id': _appstate.token.hasuraId},&#xA;                document: yourQuery()),&#xA;            builder: (QueryResult result,&#xA;                {VoidCallback refetch, FetchMore fetchMore}) {&#xA;              return RefreshIndicator(&#xA;                  onRefresh: () async =&gt; refetch(),&#xA;                  child: CustomScrollView(&#xA;                    slivers: [&#xA;                      ..._resolver(context, result, fetchMore, refetch),&#xA;                      SliverToBoxAdapter(&#xA;                          child: SizedBox(&#xA;                        height: 200,&#xA;                      )),&#xA;                    ],&#xA;                  ));&#xA;            })&#xA;</code></pre>&#xA;",8312828,,,,2021-01-20 07:35:43,"",,0,0,0,2021-01-20 07:35:43
65809165,2,,65802746,0,,"<p>Here are some concepts that you can try out:</p>&#xA;<p>For the @model directive, try it out without renaming the queries. AWS Amplify gives great names for the automatically generated queries. For example to get a company it will be getCompany and for list it will be listCompanys. If you still want to give it new names, you may change this later.</p>&#xA;<p>For the @connection directive:&#xA;The <code>@connection</code> needs to be set on both tables of the connection. Also if you want many-to-many connections you need to add a third table that handles the connections. It is also usefull to give the connection a name, when you have many connections in your schema.</p>&#xA;<p>Only Scalar types that you have created in the schema, standard schalars like String, Int, Float and Boolean, and AWS specific schalars (like AWSDateTime) can be used as schalars in the schema. Check out this link:&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html</a></p>&#xA;<p>Here is an example for some of what I think you want to achieve:</p>&#xA;<pre><code>type Company @model {&#xA;   id: ID!&#xA;   name: String&#xA;   president: String&#xA;   vicePresident: String&#xA;   secretary: String&#xA;   treasurer: String&#xA;   shareholders: [Shareholder] @connection(name: &quot;CompanySharholderConnection&quot;)&#xA;   address: Address @connection(name: &quot;CompanyAdressConnection&quot;) #one to many example&#xA;   # you may add more connections/attributes ...&#xA;}&#xA;&#xA;# table handling many-to-many connections between users and companies, called Shareholder.&#xA;type Shareholder @model {&#xA;   id: ID!&#xA;   company: Company @connection(name: &quot;CompanySharholderConnection&quot;)&#xA;   user: User @connection(name: &quot;UserShareholderConnection&quot;)&#xA;   numberOfShares: Int #or String&#xA;}&#xA;&#xA;type User @model {&#xA;   id: ID!&#xA;   firstname: String&#xA;   lastname: String&#xA;   company: [Shareholder] @connection(name: &quot;UserShareholderConnection&quot;)&#xA;   #... add more attributes / connections here&#xA;}&#xA;&#xA;# address table, one address may have many companies&#xA;type Address @model {&#xA;  id: ID!&#xA;  street: String&#xA;  city: String&#xA;  code: String&#xA;  country: String&#xA;  companies: [Company] @connection(name: &quot;CompanyAdressConnection&quot;) #many-to-one connection&#xA;}&#xA;</code></pre>&#xA;<p>Each of this type...@model generates a new dynamoDB table. This example will make it possible for u to create multiple companies and multiple users. To add users as shareholders to a company, you only need to create a new item in the Shareholder table, by creating a new item with the ID in of the user from the User table and the ID of the company in the Company table + adding how many shares.</p>&#xA;<p><strong>Edit</strong></p>&#xA;<p>Be aware that when you generate a connection between two tables, the amplify cli (which uses cloudformation to do backend changes), will generate a new global index to one or more of the dynamodb tables, so that appsync can efficient give you data.</p>&#xA;<p>Limitations in dynamodb, makes it only possible to generate one index (@connection) at a time, when you edit a table. I think you can do more at a time when you create a new table (@model). So when you edit one or more of your tables, only remove or add one connection at a time, between each amplify push / amplify publish. Or else cloudformation will fail when you push the changes. And that can be a mess to clean up. I have had to, multiple times, delete a whole environment because of this, luckily not in a production environment.</p>&#xA;<p><strong>Update</strong></p>&#xA;<p>(I also updated the Address table in the schema with som values);&#xA;To connect a new address when you are creating a new company, you will first have to create a new address item in the Address table in dynamoDb.</p>&#xA;<p>The mutation for this generated from appsync is probably named createAddress() and takes in a createAddressInput.</p>&#xA;<p>After you create the address you will recieve back the whole newly createdItem, including the automatically created ID (if you did not add one yourself).</p>&#xA;<p>Now you may save the new company that you are creating. One of the attributes the createCompany mutation takes is the id of the address that you created, probably named as companyAddressId. Store the address Id here. When you then retrieves your company with either getCompany or listCompanys you will get the address of your company.</p>&#xA;<p>Javascript example:</p>&#xA;<pre><code>const createCompany = async (address, company) =&gt; {&#xA;   // api is name of the service with the mutations and queries&#xA;   try {&#xA;      const newaddress = await this.api.createAddress({street: address.street, city: address.city, country: address.country});&#xA;      const newcompany = await this.api.createCompany({&#xA;        name: company.name,&#xA;        president: company.president,&#xA;        ...&#xA;        companyAddressId: newaddress.id&#xA;      })&#xA;   } catch(error) {&#xA;      throw error&#xA;   }&#xA;   &#xA;  &#xA;}&#xA;&#xA;// and to retrieve the company including the address, you have to update your graphql statement for your query:&#xA;&#xA;const statement = `query ListCompanys($filter: ModelPartiFilterInput, $limit: Int, $nextToken: String) {&#xA;   listCompanys(filter: $filter, limit: $limit, nextToken: $nextToken) {&#xA;      __typename&#xA;      id&#xA;      name&#xA;      president&#xA;      ...&#xA;      address {&#xA;         __typename&#xA;         id&#xA;         street&#xA;         city&#xA;         code&#xA;         country&#xA;      }&#xA;   }&#xA;</code></pre>&#xA;<p>}</p>&#xA;<pre><code>`&#xA;</code></pre>&#xA;<p>AppSync will now retrive all your company (dependent on your filter and limit) and the addresses of those companies you have connected an address to.</p>&#xA;<p><strong>Edit 2</strong>&#xA;Each type with @model is a referance to a dynamoDb table in aws. So when you are creating a one-to-many relationship between two tables, when both items are new you first have to create the the 'many' in the one-to-many realationships. In the dynamoDb Company tables when an address can have many companies, and one company only can have one address, you have to store the id (dynamoDB primary key) for the address on the company. You could of course generate the address id in frontend, and using that for the id of the address and the same for the addressCompanyId in for the company and use <code>await Promise.all([createAddress(...),createCompany(...))</code> but then if one fails the other one will be created (but generally appsync api's are very stable, so if the data you send is correct it won't fail).</p>&#xA;<p>Another solution, if you generally don't wont to have to create/update multiple items in multiple tables, you could store the address directly in the company item.</p>&#xA;<pre><code>type Company @model {&#xA;  name: String&#xA;  ...&#xA;  address: Address # or [Address] if you want more than one Address on the company&#xA;}&#xA;type Address {&#xA;   street: String&#xA;   postcode: String&#xA;   city: string&#xA;}&#xA;</code></pre>&#xA;<p>Then the Address type will be part of the same item in the same table in dynamoDb. But you will loose the ability to do queries on addresses (or shareholders) to look up a address and see which companies are located there (or simulary look up a person and see which companies that person has a share in). Generally i don't like this method because it locks your application to one specific thing and it's harder to create new features later on.</p>&#xA;<p>As far as I'm aware of, it is not possible to create multiple items in multiple dynamoDb tables in one graphql (Amplify/AppSync) mutation. So async await with Promise.all() and you manually generate the id attributes frontendside before creating the items might be your best option.</p>&#xA;",5923873,,5923873,2021-01-30 19:04:02,2021-01-30 19:04:02,"",,0,18,0,2021-01-20 12:01:33
65823174,1,,,-1,392,<p>What is the difference between graphql and sql.</p>&#xA;<p>If in graphql we select all the tables and all the columns of each table.</p>&#xA;<p>And sql in the endpoint serve we evaluate the query that does not have sql injected for prevent update or delete.</p>&#xA;<p>Performance is better whit graphql?</p>&#xA;<p>Really safety if it is extremely safe with graphql?</p>&#xA;,712403,,,2021-01-21 07:56:38,2021-01-21 08:08:04,What is the difference between graphql and sql,<sql><controller><graphql><computer-science><webapi>,1,0,0,2021-01-21 07:55:18
65845340,1,,,3,150,<p>Is there a way I can force re-creation of tables with AWS Amplify GraphQL API?</p>&#xA;<p>Accidentally deleted some development tables and have no idea how to re-create them now.</p>&#xA;,2591194,,,,2021-01-22 12:36:57,Force re-create tables with AWS Amplify GraphQL/DynamoDB?,<amazon-web-services><graphql><amazon-dynamodb><aws-amplify><aws-appsync>,0,2,0,2021-01-22 12:36:57
65876535,1,65913922,,0,646,"<p>I have the following attached to a table in my schema:</p>&#xA;<p>@model @auth(rules: [{ allow: owner, operations: [create, delete, update] }])</p>&#xA;<p>When I create a new record using the gui in amplify console api, an owner is added to the record. But when my code creates a new record, the owner is null.</p>&#xA;<p>I am using the graphql query generated by amplify codegen. Am I missing a step that automatically attaches an owner to a new record?</p>&#xA;",5053383,,,,2021-01-27 06:28:38,Amplify @model @auth not adding owner from onCreate,<amazon-web-services><graphql>,1,0,0,2021-01-24 22:12:03
65913922,2,,65876535,1,,"<p>This <em>should</em> just work.</p>&#xA;<p>If you go look at your AppSync API's request mapping template for the mutation that you're using to create a new record, you should see a section like this in the VTL that Amplify generated for you:</p>&#xA;<pre><code>## [Start] Owner Authorization Checks **&#xA;  #set( $isOwnerAuthorized = false )&#xA;  ## Authorization rule: { allow: owner, ownerField: &quot;owner&quot;, identityClaim: &quot;cognito:username&quot; } **&#xA;  #set( $allowedOwners0 = $util.defaultIfNull($ctx.args.input.owner, null) )&#xA;  #set( $identityValue = $util.defaultIfNull($ctx.identity.claims.get(&quot;username&quot;), $util.defaultIfNull($ctx.identity.claims.get(&quot;cognito:username&quot;), &quot;___xamznone____&quot;)) )&#xA;  #if( $util.isList($allowedOwners0) )&#xA;    #foreach( $allowedOwner in $allowedOwners0 )&#xA;      #if( $allowedOwner == $identityValue )&#xA;        #set( $isOwnerAuthorized = true )&#xA;      #end&#xA;    #end&#xA;  #end&#xA;  #if( $util.isString($allowedOwners0) )&#xA;    #if( $allowedOwners0 == $identityValue )&#xA;      #set( $isOwnerAuthorized = true )&#xA;    #end&#xA;  #end&#xA;  #if( $util.isNull($allowedOwners0) &amp;&amp; (! $ctx.args.input.containsKey(&quot;owner&quot;)) )&#xA;    $util.qr($ctx.args.input.put(&quot;owner&quot;, $identityValue))&#xA;    #set( $isOwnerAuthorized = true )&#xA;  #end&#xA;  ## [End] Owner Authorization Checks **&#xA;</code></pre>&#xA;<p>Look at the line toward the bottom: <code>$util.qr($ctx.args.input.put(&quot;owner&quot;, $identityValue))</code> -- this is what's setting the <code>owner</code> property, assuming the input didn't already contain an <code>owner</code> property.</p>&#xA;<p>So, here are the reasons I can think of for why mutations issued from your code might not be ending up with owner:</p>&#xA;<ul>&#xA;<li><p>Are you sure you're logged in to your app and that you're submitting your GraphQL mutation using the AMAZON_COGNITO_USER_POOLS authorization mode? If you're authorizing the request via, say IAM, you won't have an owner come through the identity claims.</p>&#xA;</li>&#xA;<li><p>Are you passing a blank value in for <code>owner</code> in the input you're sending? This would prevent it from being assigned to the cognito username in the mapping template.</p>&#xA;</li>&#xA;</ul>&#xA;",30632,,,,2021-01-27 06:28:38,"",,0,3,0,2021-01-27 06:28:38
65948735,2,,65935735,0,,"<p>Wrap the every <code>Mutation</code> into the <code>State</code> of a <code>StatefulWidget</code> and add a <code>GlobalKey</code> for each one.</p>&#xA;<pre><code>final mutationKey1 = GlobalKey&lt;MutationState&gt;();&#xA;&#xA;// In the build method&#xA;Mutation(&#xA;  key: mutationKey1&#xA;)&#xA;</code></pre>&#xA;<p>Make the same with the second one:</p>&#xA;<pre><code>final mutationKey2 = GlobalKey&lt;MutationState&gt;();&#xA;</code></pre>&#xA;<p>And in the button onPress/onTap callback call the <code>runMutation()</code> method for each one:</p>&#xA;<pre class=""lang-dart prettyprint-override""><code>FlatButton(&#xA;  onPressed: (){&#xA;    //...&#xA;    mutationKey1.currentState.runMutation(mapVariables1);&#xA;    mutationKey2.currentState.runMutation(mapVariables2);&#xA;    //...&#xA;  }&#xA;)&#xA;</code></pre>&#xA;<hr />&#xA;<sup>&#xA;Remember that depending on how you organize your code, the way to access mutationKey1 and mutationKey2, the access will be different.&#xA;</sup>&#xA;",10451311,,10451311,2021-01-29 22:38:27,2021-01-29 22:38:27,"",,0,3,0,2021-01-29 04:19:46
65954886,2,,65906218,0,,"<p>I don't know whether this will fix your issue but it might be an acceptable workaround and have a different outcome. Use this to enforce valid is-logged-in security policy:</p>&#xA;<pre><code>            // Add policy in Startup.cs&#xA;            services.AddAuthorization(options =&gt;&#xA;            {&#xA;                options.AddPolicy(&quot;LoggedInPolicy&quot;, Policies.LoggedInPolicy);&#xA;            });&#xA;</code></pre>&#xA;<p>then add a Policies class</p>&#xA;<pre><code>    public class Policies&#xA;    {&#xA;        /// &lt;summary&gt;&#xA;        /// Requires the user to be logged in&#xA;        /// &lt;/summary&gt;&#xA;        /// &lt;param name=&quot;policy&quot;&gt;&lt;/param&gt;&#xA;        public static void MultiFactorAuthenticationPolicy(AuthorizationPolicyBuilder policy)&#xA;        {&#xA;            policy.RequireAuthenticatedUser();&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;<p>And then decorate the appropriate endpoints with your authorization attribute to apply the policy</p>&#xA;<pre><code>        /// &lt;summary&gt;&#xA;        /// Test 'hello world' endpoint&#xA;        /// &lt;/summary&gt;&#xA;        /// &lt;returns&gt;The current date/time on the server&lt;/returns&gt;&#xA;        [Authorize(Policy = &quot;LoggedInPolicy&quot;)]&#xA;        public string Hello()&#xA;        {&#xA;            return DateTime.Now.ToString(&quot;O&quot;);&#xA;        }&#xA;</code></pre>&#xA;<p>You may also have to add this to the GraphQL configuration</p>&#xA;<pre><code>SchemaBuilder.New()&#xA;  ...&#xA;  .AddAuthorizeDirectiveType()&#xA;  ...&#xA;  .Create();&#xA;</code></pre>&#xA;<p>(from <a href=""https://chillicream.com/docs/hotchocolate/v10/security/"" rel=""nofollow noreferrer"">https://chillicream.com/docs/hotchocolate/v10/security/</a>, don't know how much of this applies to v11)</p>&#xA;<p>That might connect with some different error handlers.</p>&#xA;",119761,,119761,2021-01-29 13:00:30,2021-01-29 13:00:30,"",,0,0,0,2021-01-29 12:54:51
65976104,2,,51047735,1,,"<p>If anyone requires a solution for other systems than Gatsby this can be accomplished using <code>@skip</code> and <code>@include</code>.</p>&#xA;<pre><code>fragment EventSearchResult on EventsConnection {&#xA;  edges {&#xA;    cursor&#xA;    node {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;  totalCount&#xA;}&#xA;&#xA;query Events($organizationId: UUID!, $isSearch: Boolean!, $search: String!) {&#xA;  events(condition: { organizationId: $organizationId }, first: 100)&#xA;    @skip(if: $isSearch) {&#xA;    ...EventSearchResult&#xA;  }&#xA;  eventsSearch: events(&#xA;    condition: { organizationId: $organizationId }&#xA;    filter: { name: { likeInsensitive: $search } }&#xA;    first: 100&#xA;  ) @include(if: $isSearch) {&#xA;    ...EventSearchResult&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Then in your client code you would provide search and isSearch to the query and get your events like:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const events = data.eventsSearch || data.events&#xA;</code></pre>&#xA;",2669591,,,,2021-01-31 05:38:12,"",,0,0,0,2021-01-31 05:38:12
65984524,1,,,1,1159,"<p>If you've used Google Docs, Notion, Figma, etc. One thing they have in common is a robust permissions scheme.</p>&#xA;<p>Using Notion as an example, here are some ways you can share</p>&#xA;<ul>&#xA;<li>Invite everyone who is in the workspace</li>&#xA;<li>Share to the web (fully public)</li>&#xA;<li>Share via email</li>&#xA;</ul>&#xA;<p>Each sharing method has permission levels (<a href=""https://www.notion.so/Sharing-permissions-524c32ac63dc424a842891ace7a99bf8#73fc49683ef64589a1a6ed5fdcb67adc"" rel=""nofollow noreferrer"">https://www.notion.so/Sharing-permissions-524c32ac63dc424a842891ace7a99bf8#73fc49683ef64589a1a6ed5fdcb67adc</a>)</p>&#xA;<ul>&#xA;<li>Full access</li>&#xA;<li>Can edit</li>&#xA;<li>Can comment</li>&#xA;<li>Can view</li>&#xA;</ul>&#xA;<p>In my project, I am using Prisma 2 with GraphQL (GraphQL Nexus). Here is a good guide that I am following <a href=""https://www.prisma.io/blog/graphql-directive-permissions-authorization-made-easy-54c076b5368e"" rel=""nofollow noreferrer"">https://www.prisma.io/blog/graphql-directive-permissions-authorization-made-easy-54c076b5368e</a> it talks about <code>directive permissions</code>.</p>&#xA;<p>My question is how do I create permissions based on the owners desire? It would seem I would need to create a new Table in the DB to manage the permissions.</p>&#xA;<p>This example showcases what to do when you already have a role field on the User model. Meaning a user can either be a <code>Manager</code> or not from directly interacting with the User model.</p>&#xA;<pre><code>const Query = {&#xA;  vehicles: async (parent, args, context, info) =&gt; {&#xA;    const vehicles = await context.db.query.vehicles({&#xA;      where: { dealership: args.id },&#xA;    })&#xA;    const user = getUser(context)&#xA;    return vehicles.map(vehicle =&gt; ({&#xA;      ...vehicle,&#xA;      costBasis: user &amp;&amp; user.role.includes(`MANAGER`) ? vehicle.costBasis : null,&#xA;      numberOfOffers: user ? vehicle.numberOfOffers : null,&#xA;    }))&#xA;  },&#xA;}&#xA;</code></pre>&#xA;<p>In the case where there could be many different access levels on many different documents, it would not make sense to update the <code>User</code> model...</p>&#xA;<p>What would make sense is you create a file with id <code>123</code>, then as the owner you can specify who can access the document and what level their permissions are. So you would want to offload that onto a new Table.</p>&#xA;<pre><code>-------------------------------&#xA;id  | docid | userid | level&#xA;-------------------------------&#xA;909 | 123   | 300    | &quot;Read&quot;&#xA;899 | 123   | 310    | &quot;Write&quot;&#xA;</code></pre>&#xA;<p>Then from here, you would allow the mutation to run from the users' request, check the document id the user is trying to gain access to, then inside the permissions table check to see if the user id exists by looking up all records that match the document id, then you would pull the permissions level and return the appropriate data.</p>&#xA;<p>Am I thinking about this correctly?</p>&#xA;",1971279,,,,2021-02-05 15:05:24,Building a permissions table with Prisma 2 and PostgreSQL to authorize users based on permission level?,<database><postgresql><database-design><graphql><prisma>,1,0,0,2021-01-31 21:37:07
65985274,2,,65972469,0,,"<p>You have <strong><code>AWSTimeStamp</code></strong> with an upper-case <code>S</code>, but the AppSync scalar type is <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html#awstimestamp"" rel=""nofollow noreferrer""><strong><code>AWSTimestamp</code></strong></a> with a lowercase <code>s</code>.</p>&#xA;",695787,,,,2021-01-31 23:17:02,"",,0,1,0,2021-01-31 23:17:02
65998304,1,66022086,,0,663,"<p>I'm getting this error in AppSync while trying to create a mutation:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;sendMessage&quot;: null&#xA;  },&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;path&quot;: [&#xA;        &quot;sendMessage&quot;&#xA;      ],&#xA;      &quot;data&quot;: null,&#xA;      &quot;errorType&quot;: &quot;MappingTemplate&quot;,&#xA;      &quot;errorInfo&quot;: null,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 2,&#xA;          &quot;column&quot;: 3,&#xA;          &quot;sourceName&quot;: null&#xA;        }&#xA;      ],&#xA;      &quot;message&quot;: &quot;Unable to convert {dealId=312321312312, from=312321313, to=312321312312, id=7e7a8ba9-8e68-425a-9352-4421706c728a, type=text, body=Teste 122, status=sent} to Object.&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>The mapping template:</p>&#xA;<pre><code>{&#xA;    &quot;version&quot; : &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot; : &quot;PutItem&quot;,&#xA;    &quot;key&quot; : {&#xA;        &quot;id&quot;: $util.dynamodb.toDynamoDBJson($util.autoId()),&#xA;    },&#xA;    &quot;attributeValues&quot; : $util.dynamodb.toMapValuesJson($ctx.args.input)&#xA;}&#xA;</code></pre>&#xA;<p>And the Mutation:</p>&#xA;<pre><code>mutation MutationTest {&#xA;  sendMessage(input: {dealId: &quot;312321312312&quot;, from: &quot;312321313&quot;, type: &quot;text&quot;, to: &quot;312321312312&quot;, status: &quot;sent&quot;, body: &quot;Teste 122&quot;})&#xA;}&#xA;</code></pre>&#xA;<p>Thoughts? Thanks!</p>&#xA;",486509,,,,2021-02-03 06:03:14,AppSync: Unable to convert to object,<graphql><aws-appsync>,1,0,0,2021-02-01 18:38:30
66012005,2,,65891688,0,,"<p>For GitHub GraphQL API, only scope <code>repo</code> may not be enough.</p>&#xA;<p>Following are scopes requested for reference. <a href=""https://docs.github.com/en/graphql/guides/forming-calls-with-graphql#authenticating-with-graphql"" rel=""nofollow noreferrer"">Authenticating with GraphQL</a></p>&#xA;<pre><code>user&#xA;public_repo&#xA;repo&#xA;repo_deployment&#xA;repo:status&#xA;read:repo_hook&#xA;read:org&#xA;read:public_key&#xA;read:gpg_key&#xA;</code></pre>&#xA;<hr />&#xA;<p><code>The API returns an empty array as if I don't have the required permissions.</code><br>&#xA;I wonder whether you are query under the <code>viewer</code>. <code>viewer</code> can get the private repos he/she <strong>owned</strong>. For repos owned by other people, you can try</p>&#xA;<pre><code>repository(name: &quot;repo-name&quot;, owner: &quot;login&quot;) {&#xA;  name&#xA;}&#xA;</code></pre>&#xA;<p>It will return <code>NOT_FOUND</code> error if you don't have the required permissions.</p>&#xA;<hr />&#xA;<p>Your query works fine for me :)</p>&#xA;",13542937,,,,2021-02-02 14:45:58,"",,0,0,0,2021-02-02 14:45:58
66025313,2,,65976157,3,,"<p>It looks like you maybe just need to pass in <code>authMode</code> as well in your <code>API.graphql</code> call.</p>&#xA;<p>In the <a href=""https://aws.amazon.com/blogs/mobile/ssr-support-for-aws-amplify-javascript-libraries/"" rel=""nofollow noreferrer"">SSR Support for AWS Amplify</a> blog post, inside the section titled <strong>Making an authenticated API request in getServerSideProps</strong> you'll see a code sample that looks like the following (note the addition of <code>authMode</code> below, which I don't see in your code sample above):</p>&#xA;<pre><code>  const { API } = withSSRContext(context)&#xA;  let movieData&#xA;  try {&#xA;    movieData = await API.graphql({&#xA;      query: listMovies,&#xA;      authMode: &quot;AMAZON_COGNITO_USER_POOLS&quot;&#xA;    });&#xA;    console.log('movieData: ', movieData)&#xA;  } catch (err) {&#xA;    console.log(&quot;error fetching movies: &quot;, err)&#xA;  }&#xA;  return {&#xA;    props: {&#xA;      movies: movieData ? movieData.data.listMovies.items : null&#xA;    }&#xA;  }&#xA;}```&#xA;</code></pre>&#xA;",30632,,,,2021-02-03 10:08:18,"",,0,0,0,2021-02-03 10:08:18
66029311,1,66029312,,0,160,"<p>I have set up a <code>select</code> field in KeystoneJS as per the <a href=""https://www.keystonejs.com/keystonejs/fields/src/types/select/#select"" rel=""nofollow noreferrer"">docs</a>:</p>&#xA;<pre><code>const { Select } = require('@keystonejs/fields');&#xA;&#xA;keystone.createList('Order', {&#xA;  fields: {&#xA;    status: { type: Select, options: 'pending, processed' },&#xA;  },&#xA;});&#xA;</code></pre>&#xA;<p>How can I use <a href=""https://graphql.org/learn/introspection/"" rel=""nofollow noreferrer"">introspection</a> to get a list of valid options for this field?</p>&#xA;",2627160,,,,2021-02-03 14:16:38,How do I use GraphQL to query the options for a KeystoneJS select field,<graphql><introspection><keystonejs>,1,0,0,2021-02-03 14:16:38
66038989,2,,53312297,7,,"<p><strong>Command template:</strong> TYPE_NAME values: Mutation, Query and Subscription.</p>&#xA;<pre><code>aws appsync list-resolvers --api-id YOUR_API_ID --type-name TYPE_NAME &gt;&gt; YOUR_FILE.txt&#xA;</code></pre>&#xA;<p><strong>Examples:</strong> With YOUR_API_ID = d5gebysm3 (The original length is 26 in my case)</p>&#xA;<pre><code>aws appsync list-resolvers --api-id d5gebysm3 --type-name Mutation &gt;&gt; Mutation.txt&#xA;aws appsync list-resolvers --api-id d5gebysm3 --type-name Query &gt;&gt; Query.txt&#xA;aws appsync list-resolvers --api-id d5gebysm3 --type-name Subscription &gt;&gt; Subscription.txt&#xA;</code></pre>&#xA;",1116802,,,,2021-02-04 03:32:06,"",,0,1,0,2021-02-04 03:32:06
66042593,2,,58313489,0,,"<p>In addition to making sure you are editing the correct <code>schema.graphql</code>, ensure that you are in the app's root directory when calling any <code>amplify</code> commands like <code>amplify push</code> or <code>amplify pull.</code> You might be editing a different <code>schema.graphql</code> from the one you are pushing.</p>&#xA;",8411122,,,,2021-02-04 09:16:51,"",,0,0,0,2021-02-04 09:16:51
66414754,1,,,0,451,"<p>Today I tried to add a 'name' field to the 'User' type of my AWS GraphQL schema. After running &quot;amplify push&quot; and &quot;code gen&quot;, I received an error from AWS saying that 'owner' was null. After comparing my git history side by side, I found that codegen deleted the autogenerated owner field in my queries while simultaneously adding two new fields, 'createdAt' and 'updatedAt'. Unsure how/why this was happening, I reverted to an earlier git commit where everything was working fine and pushed to amplify. All my files were reverted back to a commit where everything was working perfectly. However, I am still receiving errors that 'owner' is null. GraphQL schema and screenshots of terminal are below. Happy to provide other files (queries, mutations, etc.) if helpful.</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>type Image {&#xA;  bucket: String!&#xA;  region: String!&#xA;  key: String!&#xA;}&#xA;&#xA;type Circle&#xA;@model&#xA;@auth(rules: [&#xA;    { allow: owner, operations: [create, delete] }&#xA;  ]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  username: String!&#xA;  password: String&#xA;  bio: String&#xA;  avatar: Image&#xA;  favors: [CircleFavor] @connection(name: ""CirclesFavors"")&#xA;  users: [CircleUser] @connection(name: ""CirclesUsers"")&#xA;  pendingUsers: [User] @connection&#xA;  tags: [String]&#xA;  admin: User @connection&#xA;  isPrivate: Boolean!&#xA;&#xA;  poster: ID!&#xA;}&#xA;&#xA;&#xA;type Favor&#xA;@model&#xA;@auth(rules: [&#xA;    { allow: owner, operations: [create, delete] }&#xA;  ]) {&#xA;  id: ID!&#xA;  name: String&#xA;  description: String&#xA;  location: String&#xA;  deadline: AWSDateTime&#xA;  circles: [CircleFavor] @connection(name: ""FavorsCircles"")&#xA;  price: Float!&#xA;}&#xA;&#xA;type CircleFavor&#xA;@model(queries: { get: ""getCircleFavor"" })&#xA;@auth(rules: [&#xA;    { allow: owner, operations: [create, delete] }&#xA;  ]) {&#xA;  id: ID!&#xA;  circle: Circle! @connection(name: ""CirclesFavors"")&#xA;  favor: Favor! @connection(name: ""FavorsCircles"")&#xA;  poster: User! @connection(name: ""UsersFavors"")&#xA;}&#xA;&#xA;type User&#xA;@model(&#xA;  queries: { get: ""getUser"" }&#xA;  mutations: { create: ""registerUser"", update: ""updateUser"" }&#xA;  subscriptions: null&#xA;)&#xA;@auth(rules: [&#xA;    { allow: owner, operations: [create, delete] }&#xA;  ]) {&#xA;  id: ID!&#xA;  username: String!&#xA;  bio: String&#xA;&#xA;  email: AWSEmail&#xA;  isRegistered: Boolean&#xA;  orders: [Order] @connection(name: ""UsersOrders"")&#xA;  circles: [CircleUser] @connection(name: ""UsersCircles"")&#xA;  favors: [CircleFavor] @connection(name: ""UsersFavors"")&#xA;}&#xA;&#xA;type CircleUser&#xA;@model(queries: { get: ""getCircleUser"" })&#xA;@auth(rules: [&#xA;    { allow: owner, operations: [create, delete] }&#xA;  ]) {&#xA;  id: ID!&#xA;  circle: Circle! @connection(name: ""CirclesUsers"")&#xA;  user: User! @connection(name: ""UsersCircles"")&#xA;}&#xA;&#xA;type Order&#xA;@model(&#xA;  queries: null&#xA;  mutations: { create: ""createOrder"" }&#xA;  subscriptions: null&#xA;)&#xA;@auth(rules: [&#xA;    { allow: owner, operations: [create, delete] }&#xA;  ]) {&#xA;  id: ID!&#xA;  favor: Favor @connection&#xA;  claimer: User @connection(name: ""UsersOrders"")&#xA;  additional_costs: Float&#xA;  isCompletedByClaimer: Boolean!&#xA;  isApprovedByPoster: ApprovalStatus!&#xA;}&#xA;&#xA;enum ApprovalStatus {&#xA;  PENDING&#xA;  APPROVED&#xA;  DISPUTED&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p><a href=""https://i.stack.imgur.com/DqkuO.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/DqkuO.jpg"" alt=""enter image description here"" /></a></p>&#xA;",10189201,,,,2021-07-31 00:01:47,Field 'owner' suddenly undefined in AWS Amplify GraphQL,<amazon-web-services><authentication><null><graphql>,1,0,0,2021-02-28 23:04:22
66415929,1,,,1,43,"<p>E.g. I mostly have Amplify's pre-generated &quot;Many-to-one&quot; schema, i.e., Blogs with Posts and Comments. I am trying to restrict users from posting (i.e. creating a Post) to another user's Blog. How do I do this?</p>&#xA;<pre><code>type Blog&#xA;@model&#xA;@auth(&#xA;  rules: [&#xA;    { allow: owner, operations: [create, update, read] }&#xA;    { allow: private, operations: [read] }&#xA;  ]&#xA;)&#xA;{&#xA;  id: ID!&#xA;  name: String!&#xA;  posts: [Post] &#xA;    @connection(keyName: &quot;byBlog&quot;, fields: [&quot;id&quot;])&#xA;    @auth(rules: [{ allow: owner, operations: [create, update, delete] }]) // doesn't work!&#xA;}&#xA;&#xA;type Post&#xA;@model&#xA;@auth(&#xA;  rules: [&#xA;    { allow: owner }&#xA;    { allow: private, operations: [read] }&#xA;  ]&#xA;)&#xA;@key(name: &quot;byBlog&quot;, fields: [&quot;blogID&quot;]) {&#xA;  id: ID!&#xA;  title: String!&#xA;  content: String!&#xA;  blogID: ID!&#xA;  blog: Blog @connection(fields: [&quot;blogID&quot;])&#xA;}&#xA;&#xA;// Comments omitted for brevity&#xA;</code></pre>&#xA;<p>Using the AppSync API, I can create a post under the wrong blog, e.g.,</p>&#xA;<pre><code>mutation CreatePostFor22 {&#xA;  createPost(input: {blogID: &quot;47ce4075-6fcd-433f-xyz&quot;, content: &quot;hello world from appsync&quot;, title: &quot;some title&quot;}) {&#xA;    id&#xA;    owner&#xA;    blog {&#xA;      owner // doesn't match the post owner!&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This is replicable from my webapp.</p>&#xA;<p>Thanks!</p>&#xA;",3708167,,,,2021-03-01 02:33:27,How do I restrict creation on a GraphQL object using another object's owner field using AWS Amplify @auth tag?,<amazon-web-services><authentication><graphql><aws-amplify>,0,2,0,2021-03-01 02:33:27
66419295,1,,,0,184,"<p>I am working on <a href=""https://github.com/MetaFam/TheGame"" rel=""nofollow noreferrer"">a project</a> which is backed by Hasura. I am having difficulty creating an <code>enum</code> and getting it to auto-generate the values.</p>&#xA;<p>I've successfully <a href=""https://github.com/MetaFam/TheGame/blob/%40mymeta/colored-personality/hasura/migrations/1614544655501_create-mtg-colors-table/up.sql#L1-L12"" rel=""nofollow noreferrer"">created a migration</a> according to the <a href=""https://hasura.io/docs/latest/graphql/core/databases/postgres/schema/enums.html#enums-in-the-hasura-graphql-engine"" rel=""nofollow noreferrer"">enum spec</a>, and verified it is loading values into the database. Next I ran <code>yarn hasura console</code>, and from the console started tracking both tables I created &amp; set <code>BaseColor</code> to be an enum type. I added a permission for public to <code>SELECT</code> from <code>BaseColor</code>.</p>&#xA;<p>Next I ran <code>yarn hasura metadata export</code>. That generated a tables.yml with <a href=""https://github.com/MetaFam/TheGame/blob/%40mymeta/colored-personality/hasura/metadata/tables.yaml#L7-L8"" rel=""nofollow noreferrer""><code>BaseColor</code>'s table definition having <code>is_enum</code> <code>true</code></a>.</p>&#xA;<p>Then I ran, <code>yarn update-schema</code> (i.e. <code>get-graphql-schema http://localhost:8080/v1/graphql &gt; schema.graphql</code>). The generated file is missing the <code>BaseColor_enum</code> I would expect to be present for an enum.</p>&#xA;",264008,,,,2021-03-05 00:51:21,How to create a get-graphql-schema enum from Hasura?,<enums><graphql><hasura>,1,0,0,2021-03-01 09:09:33
66427296,2,,66426704,0,,<p>Your query name is <code>adminMessageSearch</code> so you can access this by using <code>data.adminMessageSearch</code> as you are using <code>data.website.adminMessageSearch.meta.count</code> There is no <code>data.website</code> which results in getting undefined. So modify</p>&#xA;<pre><code>return (&#xA;        &lt;div className=&quot;list-disc &quot;&gt;&#xA;            &lt;p  &gt; total:  {data.adminMessageSearch.website.adminMessageSearch.meta.count}&#xA;                    &lt;br/&gt;&#xA;            &lt;/p&gt;&#xA;       &lt;/div&gt; &#xA;    )&#xA;</code></pre>&#xA;,12961660,,,,2021-03-01 18:05:26,"",,0,3,0,2021-03-01 18:05:26
66446143,1,,,4,1866,"<p>I am having trouble calling an AppSync GraphQL query via a AWS Lambda function. I have been using the code in this article, specifically the latter part that uses IAM permissions: <a href=""https://docs.amplify.aws/lib/graphqlapi/graphql-from-nodejs/q/platform/js#signing-a-request-from-lambda"" rel=""nofollow noreferrer"">https://docs.amplify.aws/lib/graphqlapi/graphql-from-nodejs/q/platform/js#signing-a-request-from-lambda</a></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const https = require(""https"");&#xA;const AWS = require(""aws-sdk"");&#xA;const urlParse = require(""url"").URL;&#xA;const appsyncUrl = process.env.API_MYAPP_GRAPHQLAPIENDPOINTOUTPUT;&#xA;const region = process.env.REGION;&#xA;const endpoint = new urlParse(appsyncUrl).hostname.toString();&#xA;const graphqlQuery = require(""./query.js"").query;&#xA;&#xA;exports.handler = async (event) =&gt; {&#xA;  const req = new AWS.HttpRequest(appsyncUrl, region);&#xA;&#xA;  req.method = ""POST"";&#xA;  req.path = ""/graphql"";&#xA;  req.headers.host = endpoint;&#xA;  req.headers[""Content-Type""] = ""application/json"";&#xA;  req.body = JSON.stringify({&#xA;    query: graphqlQuery,&#xA;    operationName: ""list"",&#xA;  });&#xA;&#xA;  const signer = new AWS.Signers.V4(req, ""appsync"", true);&#xA;  signer.addAuthorization(AWS.config.credentials, AWS.util.date.getDate());&#xA;&#xA;  const data = await new Promise((resolve, reject) =&gt; {&#xA;    const httpRequest = https.request({ ...req, host: endpoint }, (result) =&gt; {&#xA;      result.on(""data"", (data) =&gt; {&#xA;        resolve(JSON.parse(data.toString()));&#xA;      });&#xA;    });&#xA;&#xA;    httpRequest.write(req.body);&#xA;    httpRequest.end();&#xA;  });&#xA;&#xA;  return {&#xA;    statusCode: 200,&#xA;    body: data,&#xA;  };&#xA;};</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>I am using the Amplify CLI. I used the CLI to create the function and ensure it is given access to the GraphQL API.</p>&#xA;<p>The specific error I get in the Lambda is:</p>&#xA;<pre><code>      {&#xA;  &quot;statusCode&quot;: 200,&#xA;  &quot;body&quot;: {&#xA;    &quot;errors&quot;: [&#xA;      {&#xA;        &quot;errorType&quot;: &quot;UnauthorizedException&quot;,&#xA;        &quot;message&quot;: &quot;Permission denied&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>GraphQL is set-up to use Cognito user pool as authentication and I've added IAM as a secondary authentication mechanism via the Amplify CLI. The AWS GraphQL console shows that I have Cognito as my primary authentication mechanism and IAM as secondary.</p>&#xA;<p>The Lambda function appears to be permissioned okay as it shows 4 resources (create, update, delete, read) corresponding to the API and Allow: appsync:GraphQL as the Action.</p>&#xA;<p>If I run the function locally using <code>amplify mock function myfunction</code> then it executes fine and the result of the GraphQL query is returned correctly.</p>&#xA;<p>I can also run the same query successfully via the AppSync UI when I choose IAM as the authentication mechanism.</p>&#xA;<p>The table I am accessing is defined in my schema.graphql as:</p>&#xA;<pre><code> type Business&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner }&#xA;      { allow: groups, groups: [&quot;Admin&quot;] }&#xA;      { allow: private, provider: iam }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  owner: String!&#xA;  name: String!&#xA;  emailSuffix: String!&#xA;  shortCode: String!&#xA;}&#xA;</code></pre>&#xA;<p>I have removed the Auth from the model and that doesn't make a difference.</p>&#xA;<p>I've deleted the function and re-created it in case the permissions had somehow got messed up.</p>&#xA;<p>So I don't think it is the code, seems to be a permissions error. I'm at a loss as to where the issue could be</p>&#xA;<p><strong>UPDATE</strong>&#xA;I have amended the permissions policy inside IAM Manager for the amplify-lambda-execution policy and that appears to have fixed the issue.</p>&#xA;<p>The permissions policy initially added by Amplify was of the form:</p>&#xA;<pre><code>arn:aws:appsync:MYREGION:MYID:apis/MYAPIID/types/create/*&#xA;arn:aws:appsync:MYREGION:MYID:apis/MYAPIID/types/read/*&#xA;arn:aws:appsync:MYREGION:MYID:apis/MYAPIID/types/edit/*&#xA;arn:aws:appsync:MYREGION:MYID:apis/MYAPIID/types/delete/*&#xA;</code></pre>&#xA;<p>amending this to:</p>&#xA;<pre><code>arn:aws:appsync:MYREGION:MYID:apis/MYAPIID/types/*/fields/* &#xA;arn:aws:appsync:MYREGION:MYID:apis/MYAPIID&#xA;</code></pre>&#xA;<p>allows the lambda function to execute and successfully execute the GraphQL query on my table. So it appears to be a problem with the permissions that Amplify adds to the function. Manually overwriting these isn't a great solution.</p>&#xA;",12510832,,12510832,2021-03-03 01:46:23,2021-09-10 16:21:47,AWS Lambda function unable to access AppSync GraphQL API - permission denied,<amazon-web-services><aws-lambda><graphql><aws-appsync>,1,0,0,2021-03-02 19:47:08
66461897,1,,,2,400,"<p>I'm working with AWS Amplify on a social media platform and I have a graphql API for users <code>Timeline</code>s and <code>Post</code>s.</p>&#xA;<p>The web app subscribes to the creation of <code>Timeline</code>s and I'm trying to filter by the <code>deleted</code> field on <code>Post</code>. I know how to do it client-side but I'm having trouble filtering in appsync (since I don't want users to be able to get access to deleted posts). Would I use a resolver? If so where would that go in Amplify?</p>&#xA;<p>Schema:</p>&#xA;<pre><code>type Post &#xA;  @model(subscriptions: { level: public })&#xA;  @key(name: &quot;SortByTimestamp&quot;, fields:[ &quot;type&quot;, &quot;timestamp&quot;], queryField: &quot;listPostsSortedByTimestamp&quot;)&#xA;  @key(name: &quot;BySpecificOwner&quot;, fields:[ &quot;owner&quot;, &quot;timestamp&quot;], queryField: &quot;listPostsBySpecificOwner&quot;)&#xA;  @auth(rules: [&#xA;    # {allow: owner, ownerField: &quot;owner&quot;, provider: userPools, operations:[read, create, delete]},&#xA;    {allow: private, provider: userPools, operations:[read]},&#xA;    {allow: private, provider: iam ,operations:[create]},&#xA;  ])&#xA;{&#xA;  type: String! # Always `post`&#xA;  id: ID&#xA;  deleted: Boolean&#xA;  title: String!&#xA;  content: String!&#xA;  owner: String&#xA;  likes: Int!&#xA;  downloads: Int!&#xA;  timestamp: AWSTimestamp!&#xA;}&#xA;&#xA;type Timeline &#xA;    @model(subscriptions: { level: public })&#xA;    @auth(rules: [&#xA;      {allow: owner, ownerField: &quot;userId&quot;, provider: userPools, operations:[read, create]},&#xA;      {allow: private, provider: iam, operations:[create]},&#xA;    ])&#xA;    @key(fields: [ &quot;userId&quot;, &quot;timestamp&quot;])&#xA;{&#xA;    userId: ID!&#xA;    timestamp: AWSTimestamp!&#xA;    postId: ID!&#xA;    post: Post @connection(fields: [ &quot;postId&quot;])&#xA;}&#xA;</code></pre>&#xA;",10448861,,174777,2021-03-03 20:53:52,2021-03-03 20:53:52,How do you filter appsync queries on the server-side?,<amazon-web-services><aws-lambda><graphql><aws-amplify><aws-appsync>,0,3,0,2021-03-03 17:23:53
66492245,2,,61560580,2,,"<p>In short, Yes.</p>&#xA;<p>I was just browsing around AppSync limits myself and saw this question was unanswered.</p>&#xA;<p>The limit is an AppSync limit, so no matter your choice of DataSource (VTL directly to Dynamo, Lambda to any data source, etc), AppSync won't allow you to send of receive over 1MB of data. So you'll have to page the results</p>&#xA;",432997,,,,2021-03-05 12:02:20,"",,0,0,0,2021-03-05 12:02:20
66495320,1,,,0,181,"<p>I have added leangen/graphql-spqr as described in the readme.&#xA;Before we had a custom implementation of graphql types like in customtype.types.gql.</p>&#xA;<p>After implementation, everything works fine, except the type which are called e.g. OperatorInput, are named in the autogenerated graphql doc like &quot;OperatorInputInput&quot;.&#xA;I tried to Change it like this in the declaration:</p>&#xA;<pre><code>@GraphQLArgument(name = &quot;OperatorInput&quot;, description = &quot;Required fields for Operator&quot;) OperatorInput operator&#xA;</code></pre>&#xA;<p>But it wasn't applied.&#xA;Do you know any workaround?</p>&#xA;",15337601,,250259,2021-03-06 18:35:08,2021-03-10 00:24:02,Graphql Schema doku displays Input type automatically with Input,<graphql-spqr>,1,0,0,2021-03-05 15:32:01
66496332,1,66563441,,0,538,"<p>Below I have my working function using a normal REST response that I want to try to convert into a GraphQL version, it fetches a JSON doc from my Phoenix Server and stores the object values from the JSON doc into an object. The problem is, here I can use await and then assign the new object values from the object within the JSON document, but using GraphQL I cannot access this data to assign it because there is no await function as its just a Query. (From what I know)</p>&#xA;<pre><code>async function updatePageWithNewCompany(company){&#xA;        const res = await fetch(`http://localhost:4000/${company}`);&#xA;        profile = await res.json();&#xA;        profile = profile.companyProfile &#xA;            DashboardStore.update(currentData =&gt; {&#xA;                return {&#xA;                    id: profile.id,&#xA;                    companyName: `${profile.company_name}`,&#xA;                    averageLength: profile.average_length,&#xA;                    } &#xA;                })&#xA;</code></pre>&#xA;<p>Ultimately I am asking if there is a way to access and assign data from a GraphQL query in JavaScript so I can manipulate it before displaying it in my frontend Svelte app.</p>&#xA;<p>Example of current GraphQL query:</p>&#xA;<pre><code>import { gql } from '@apollo/client'&#xA;import { client } from './apollo';&#xA;import { query, setClient } from &quot;svelte-apollo&quot;;   &#xA;&#xA;setClient(client)&#xA;&#xA;const GET_COMPANY = gql`&#xA;      query{&#xA;        companyProfile(){&#xA;            companyName&#xA;            averageLength&#xA;            }&#xA;        }&#xA;    `;&#xA;const response = query(GET_COMPANY)&#xA;...&#xA;</code></pre>&#xA;",15338000,,15338000,2021-03-10 10:58:56,2021-03-10 11:35:50,Problems accessing data from a GraphQL query in Javascript with Svelte,<javascript><graphql><svelte>,2,0,0,2021-03-05 16:39:59
66498290,2,,66496332,0,,"<p><code>svelte-apollo</code> queries return</p>&#xA;<blockquote>&#xA;<p>a svelte store of promises that resolve as values come in</p>&#xA;</blockquote>&#xA;<p>as stated <a href=""https://github.com/timhall/svelte-apollo#example"" rel=""nofollow noreferrer"">in the example query displayed in the documentation</a>.</p>&#xA;<p>As such, you can exploit that format directly in the script section. Here is an example:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>...&#xA;async function getCompany() {&#xA;  const companyStore = query(GET_COMPANY)&#xA;  const company = (await $companyStore).data.companyProfile&#xA;  return company  // format will be an object with keys { companyName, averageLength } according to your query&#xA;}&#xA;...&#xA;</code></pre>&#xA;<p>On a side-note I would recommend always getting the <code>id</code> of objects in your GraphQL queries as it is usually the key used internally by the Apollo client to manage its cache (unless explicitly stated otherwise).</p>&#xA;",5438616,,5438616,2021-03-05 19:15:43,2021-03-05 19:15:43,"",,0,4,0,2021-03-05 19:10:38
66498531,2,,62497812,2,,"<p>I was wondering the same. As Will says you can omit the operation you wish to forbid for the owners, however if the operation is not listed anywhere then all authenticated users gain access to it I think? If I understand this correct then I one solution might be creating a group 'Forbidden' and assigning that group the delete operation which should prevent owners, and all authenticated users from using the delete operation..</p>&#xA;<pre><code>@auth(rules: [&#xA;  { allow: owner, operations: [create, update, read] },&#xA;  { allow: groups, groups: [&quot;Forbidden&quot;], operations: [delete] }&#xA;])&#xA;</code></pre>&#xA;",15338882,,,,2021-03-05 19:28:59,"",,0,0,0,2021-03-05 19:28:59
66548153,1,,,1,218,"<p>Is there a way to make a rest endpoint public in Hasura?</p>&#xA;<p>Say I have restaurants table and I created a rest endpoint for that,&#xA;say <code>http://localhost:8080/api/rest/restaurants/:id</code>&#xA;How can I make this endpoint public?</p>&#xA;<p>I tried creating a new role on the table and gave it select permissions without any checks but I don't know how to set the role using rest nor there's a mention of that in the docs.</p>&#xA;",8704621,,,,2021-03-09 14:18:21,How to make an rest endpoint public in Hasura (Requires no authentication)?,<rest><graphql><hasura>,1,0,0,2021-03-09 13:49:23
66548529,2,,66548153,1,,"<p>Exposing your REST endpoint in Hasura works the same as a GraphQL endpoint. For public access, you can configure an unauthorised role and you're good to go. You can check out our docs <a href=""https://hasura.io/docs/latest/graphql/core/auth/authentication/unauthenticated-access.html"" rel=""nofollow noreferrer"">here</a> to see how you can set up the unauthorised access.</p>&#xA;",15361567,,1839439,2021-03-09 14:18:21,2021-03-09 14:18:21,"",,0,1,0,2021-03-09 14:12:34
66548989,1,66549400,,0,350,"<p>AWS AppSync charges you for the # of GraphQL operations (each request could be a GraphQL query/mutation).<br>&#xA;Is there a way to protect from malicious users that spam AppSync and GraphQL operations?<br>&#xA;I.E., is it possible to limit the # of GraphQL operations per user (perhaps that every user has a quota).<br>&#xA;Is it also possible to detect this type of user and ban them?</p>&#xA;",7763858,,7763858,2021-03-09 14:50:20,2021-03-09 15:02:38,How to limit AppSync queries for users?,<amazon-web-services><graphql><aws-amplify><aws-appsync>,1,0,0,2021-03-09 14:39:00
66549400,2,,66548989,2,,"<p>You can use <a href=""https://docs.aws.amazon.com/waf/latest/developerguide/how-aws-waf-works.html"" rel=""nofollow noreferrer"">AWS WAF</a> (Web Application Firewall). <a href=""https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-type-rate-based.html"" rel=""nofollow noreferrer"">Rate based rules</a> might be something that you can use.</p>&#xA;",14779069,,,,2021-03-09 15:02:38,"",,0,2,0,2021-03-09 15:02:38
66551140,1,,,-1,95,"<p>Noob question. I'm trying to write an Apollo Server GraphQL resolver that will query and return a user from a MySQL database.</p>&#xA;<p>This is what I have so far:</p>&#xA;<pre><code>const UserQueries = {&#xA;  user: (_, args, { pool }) =&gt; {&#xA;    let data = {};&#xA;&#xA;    pool.query(&#xA;      &quot;SELECT * FROM user_table WHERE `id` = ?&quot;,&#xA;      [args.id],&#xA;      (err, rows) =&gt; {&#xA;        if (err) throw err;&#xA;        else {&#xA;          data.id = rows[0].id;&#xA;          data.name = rows[0].name;&#xA;          data.username = rows[0].username;&#xA;          data.email = rows[0].email;&#xA;        }&#xA;      }&#xA;    );&#xA;    return data;&#xA;  },&#xA;};&#xA;</code></pre>&#xA;<p><code>pool</code> is the mysql2 connection pool. If I console log inside that else statement I am getting the correct data back from the database. The problem is I can't make it go into that variable. If I move the return statement inside the else statement it still doesn't work.</p>&#xA;<p>Definitely a noob question but I'm totally stuck. Thanks.</p>&#xA;",2077034,,2077034,2021-03-09 17:44:48,2021-03-09 20:00:38,Q: Writing GraphQL resolver that uses mysql2 query,<mysql><callback><graphql><apollo-server>,1,0,0,2021-03-09 16:42:23
66561641,1,,,1,177,"<p>I currently have a schema like :</p>&#xA;<pre><code>type RawData&#xA;@model&#xA;{&#xA;  id: ID!&#xA;  controller: Controller @connection(name: &quot;RawDataController&quot;)&#xA;  createdAt: String!&#xA;  notes: String&#xA;}&#xA;&#xA;&#xA;type Controller&#xA;@model&#xA;{&#xA;  id: ID!&#xA;  controller: Controller @connection(name: &quot;RawDataController&quot;)&#xA;  notes: String&#xA;}&#xA;</code></pre>&#xA;<p>This works but I now have so much RawData for each Controller that I end up pulling too much data which causes pagination issues. What I want to do is get all of the Controller's Raw Data for today. I want to change the @connection into a RawSensor ID and createdAt GSI.</p>&#xA;<p>I tried adding a @key&#xA;<code>@key (name: &quot;ByControllerCollectedAt&quot;, fields: [&quot;controller&quot;, &quot;collectedAt&quot;], queryField: &quot;rawDataByCollectedAt&quot;)</code></p>&#xA;<p>but I get an error :&#xA;Expected scalar and got Controller&#xA;An error occurred during the push operation: Expected scalar and got Controller.</p>&#xA;<p>So then I tried to create a key on the rawDataControllerId field which is created in DynamoDB underneath AppSync's abstraction and currently contains the relevant controller id.</p>&#xA;<p>You cannot specify a nonexistent field 'rawDataControllerId' in @key 'ByControllerCollectedAt' on type 'RawData'.</p>&#xA;<p>I'm completely stuck, can anybody tell me how I can turn my current connection into one with a sort key?</p>&#xA;",5133072,,,,2021-03-10 09:15:07,Amplify + Appsync - How do I convert a connection on a field into a connection with a GSI,<graphql><aws-amplify><aws-appsync>,0,0,0,2021-03-10 09:15:07
66569736,2,,66565023,0,,"<p>My solution:</p>&#xA;<ol>&#xA;<li>Allow lambda resolver to query my API using:&#xA;<code>amplify function update</code> -&gt;&#xA;<code>Lambda function</code> -&gt;&#xA;<code>&lt;lambdaResolverfunctionName&gt;</code> -&gt;&#xA;<code>Resource access permissions</code>-&gt;&#xA;<code>api</code> -&gt;&#xA;<code>Query</code></li>&#xA;<li>Fetch data like typical graphQL query:</li>&#xA;</ol>&#xA;<pre><code>const myResolver = async (event) =&gt; {&#xA;  const endpoint = process.env.API_&lt;apiName&gt;_GRAPHQLAPIENDPOINTOUTPUT;&#xA;  const { authorization } = event.request.headers;&#xA;  const query = 'query ...';&#xA;&#xA;  const response = await fetch(endpoint, {&#xA;    method: 'POST',&#xA;    headers: {&#xA;      'Content-Type': 'application/json',&#xA;      authorization&#xA;    },&#xA;    body: query&#xA;  });&#xA;&#xA;  const { data } = await response.json();&#xA;&#xA;  return data;&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>Is there a better way to do this?</p>&#xA;",15222488,,,,2021-03-10 17:17:18,"",,0,0,0,2021-03-10 17:17:18
66598070,2,,66597918,0,,"<p>For this pupose you can use reactive variables. That way you can access clubs array anywhere in your code without rerunning query and perform any array operation on it.&#xA;Visit <a href=""https://www.apollographql.com/docs/react/local-state/reactive-variables/"" rel=""nofollow noreferrer"">this</a> page for more info on it.</p>&#xA;",15370662,,,,2021-03-12 10:19:34,"",,0,0,0,2021-03-12 10:19:34
66602841,1,,,0,11,"<p>We have one appsync instance that execute use two lambdas as data source , the information its requested in this way</p>&#xA;<pre><code>query MyQuery {&#xA;getOrder(userName: &quot;user&quot;, uuid: &quot;some uuid&quot;) {&#xA;status&#xA;  }&#xA;&#xA;  updateTicketNumber(terminalId: &quot;1&quot;, userName: &quot;some user&quot;) {&#xA;    ticketNumber&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>There is way that if the status is <strong>invalid</strong> do not perform second query?</p>&#xA;",15108270,,,,2021-03-12 16:02:33,How to verify if next query should be executed?,<graphql><aws-appsync>,1,0,0,2021-03-12 15:33:27
66607003,1,,,0,137,"<p>I am trying to build a GraphQL query for my keystone server. I want to query inside a relationship. But I can't find anything like that on their GitHub and their documentation.</p>&#xA;<p>To manage the thing through T-SQL I would use the following query.</p>&#xA;<pre><code>SELECT B.*&#xA;FROM Book B&#xA;LEFT JOIN Author A&#xA;ON B.AuthorId = A.AuthorId &#xA; AND A.LastName LIKE &quot;King&quot;&#xA;</code></pre>&#xA;<p>The only thing about relationships I could find is, if an Author is null or not.</p>&#xA;<p>Thanks in advance :)</p>&#xA;",7967140,,,,2021-07-01 21:28:08,Keystonejs V5 search in relationship with GraphQL,<javascript><reactjs><graphql><apollo-client><keystonejs>,1,1,0,2021-03-12 20:47:22
66613547,1,66616135,,-1,234,"<p>I am using Amplify, AppSync, GraphQL, and DynamoDB in a chat-project.<br>&#xA;My aim is to build a chat-app similar to facebook-messenger.<br>&#xA;Is there a way to create access rules to certain DynamoDB documents (similar to Firestore Rules in Firebase)?.<br>&#xA;In other words, is is possible to only show certain documents to certain users in a safe and secure way?</p>&#xA;",7763858,,,,2021-03-14 19:41:55,How to add Access Rules to DynamoDB/AppSync?,<graphql><amazon-dynamodb><aws-amplify><aws-appsync>,1,0,0,2021-03-13 12:35:04
66616135,2,,66613547,2,,"<p>This topic arises from time-to-time, and it's important to realize that security can (and likely should) happen in different layers of your application.</p>&#xA;<p>When working in AWS, it's important you understand <a href=""https://aws.amazon.com/iam/#:%7E:text=AWS%20Identity%20and%20Access%20Management%20(IAM)%20enables%20you%20to%20manage,offered%20at%20no%20additional%20charge."" rel=""nofollow noreferrer"">Identity and Access Management(IAM)</a>.  IAM is what AWS uses to define access policies to resources throughout the AWS ecosystem.</p>&#xA;<p>IAM is extremely powerful, and can even be used to define which DynamoDB partition each of your users has access to!  This may seem like <em>the</em> solution to your problem.  However, it's unlikely your applications users are accessing DynamoDB <em>directly</em>.  Instead, they are invoking an API, which executes a Lambda using a different IAM role than your user.  So, what do you do?</p>&#xA;<p>Remember when I said security should happen at different layers of your application?  Well, this is one of those times!  Your application code should make decisions based on <em>who</em> is accessing the application and take appropriate action to allow/deny that access.</p>&#xA;<p>For example, your application might decide that users can only message people they are friends with.  This is <em>not</em> something IAM is going to help you with.  Instead, <em>you</em> need to implement the logic to enforce this business rule directly in your application code.</p>&#xA;<p>The moral of the story here is that there is no built-in mechanism to enforce all types of business rules your application may have.</p>&#xA;<p>If you are using Amplify, you should start by looking into <a href=""https://docs.amplify.aws/lib/auth/getting-started/q/platform/js"" rel=""nofollow noreferrer"">Cognito for Auth</a>.  Cognito will help you set up permissions for users of your application using IAM roles (e.g. unauthenticated, authenticated, administrators, etc).  These roles will let you define different IAM policies that grant your users a variety of permissions (e.g. access to API Gateway endpoints, specific S3 buckets and DynamoDB tables, etc).</p>&#xA;",13549664,,13549664,2021-03-14 19:41:55,2021-03-14 19:41:55,"",,0,1,0,2021-03-13 16:54:28
66618490,2,,66607469,0,,"<p>Today I really looked into this problem and decided not to use the AppSync client from AWS anymore (which created some depency build problems with every npm update by the way...)&#xA;I choose to go for the Apollo client latest version which doesn't give any npm update issues and is a up-to-date version of the client that AWS uses in the background if I am well informed (read can read fora in a good way ;-))</p>&#xA;<p>I had some issues with the authentication on AppSync but managed to get over this.</p>&#xA;<p>This code totally fixes ALL previous error (for me)</p>&#xA;<pre><code>const gql = require(&quot;graphql-tag&quot;); &#xA;const ApolloClient = require(&quot;@apollo/client&quot;).ApolloClient&#xA;const ApolloLink = require(&quot;@apollo/client&quot;).ApolloLink&#xA;const InMemoryCache = require(&quot;@apollo/client&quot;).InMemoryCache;&#xA;const createHttpLink = require(&quot;@apollo/client&quot;).createHttpLink;&#xA;const {createAuthLink} = require(&quot;aws-appsync-auth-link&quot;)&#xA;require('cross-fetch/polyfill');&#xA;&#xA;const clientGraphQL = new ApolloClient({&#xA;  link: ApolloLink.from([&#xA;    createAuthLink({ &#xA;      url: aws_secrets.AWS_DEV_APPSYNC_ENDPOINT, &#xA;      region:aws_secrets.REGION, &#xA;      auth:&#xA;        {&#xA;          type: &quot;API_KEY&quot;,&#xA;          apiKey: aws_secrets.AWS_DEV_APPSYNC_API_KEY,&#xA;        } &#xA;    }),&#xA;    createHttpLink({ &#xA;      uri: aws_secrets.AWS_DEV_APPSYNC_ENDPOINT &#xA;    }),&#xA;  ]),&#xA;  cache: new InMemoryCache(),&#xA;});&#xA;</code></pre>&#xA;<p>Safe code by hiding all the secrets in a special file.&#xA;createAuthLink is the only thing I need from AWSAppSync (IMHO).&#xA;I didn't manage to get a proper connection with the CreateAuthLink from the Apollo Client.</p>&#xA;<p>Hope this helps some of you...</p>&#xA;",15385504,,,,2021-03-13 21:01:38,"",,0,1,0,2021-03-13 21:01:38
66627129,1,,,0,98,"<p>I want to set up a list of live list of &quot;Move&quot;s so I used this snippet from the amplify docs.</p>&#xA;<pre><code> func createSubscription() {&#xA;        subscription = Amplify.API.subscribe(request: .subscription(of: Move.self, type: .onCreate))&#xA;        dataSink = subscription?.subscriptionDataPublisher.sink {&#xA;            if case let .failure(apiError) = $0 {&#xA;                print(&quot;Subscription has terminated with \(apiError)&quot;)&#xA;            } else {&#xA;                print(&quot;Subscription has been closed successfully&quot;)&#xA;            }&#xA;        }&#xA;        receiveValue: { result in&#xA;            switch result {&#xA;            case .success(let createdTodo):&#xA;                print(&quot;Successfully got todo from subscription: \(createdTodo)&quot;)&#xA;            case .failure(let error):&#xA;                print(&quot;Got failed result with \(error.errorDescription)&quot;)&#xA;            }&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;<p>Schema auth rules</p>&#xA;<pre><code>type Move &#xA;  @model &#xA;  @auth( rules: [&#xA;    { allow: owner, ownerField: &quot;owner&quot;, operations: [create, update, delete, read] },&#xA;  ]) &#xA;{&#xA;</code></pre>&#xA;<p>But since I added auth to the &quot;move&quot; type I get this error. <code>GraphQLResponseError&lt;Move&gt;: GraphQL service returned a successful response containing errors: [Amplify.GraphQLError(message: &quot;Validation error of type MissingFieldArgument: Missing field argument owner @ \'onCreateMove\'&quot;, locations: nil, path: nil, extensions: nil)]</code></p>&#xA;<p>and <code>Recovery suggestion: The list of GraphQLError contains service-specific messages</code></p>&#xA;<p>So everything is working locally but I think I need to pass the authorization to the request but I can't find any way to do it. any Ideas how I might get this request to process properly?</p>&#xA;",12586827,,,,2021-03-14 18:08:47,amplify subscription using auth in swift,<swift><authentication><graphql><amplify>,1,0,0,2021-03-14 16:51:44
66637860,1,,,1,8600,"<p>I am new to GraphQl and learning it. Currently I have single database Table - <code>student_courses</code> as shown below:</p>&#xA;<pre><code>student_id|   student_name   | course_code | course_name&#xA;1              ABC                S-101       DataStructures&#xA;1              ABC                S-150       NLP&#xA;1              ABC                S-250       Machine learning&#xA;2              PQR                S-101       DataStructures&#xA;3              XYZ                S-101       DataStructures&#xA;3              XYZ                S-150       NLP&#xA;</code></pre>&#xA;<p>I have mapped the model to single GraphQL object. So I am getting GraphQL API response as individual json objects for each row in table.</p>&#xA;<p>I wanted to understand how to group the results of this table by <code>student_id, student_name</code> and get results in below format:</p>&#xA;<p><code>student_id, student_name, {course_code : course_name}</code></p>&#xA;<p>For eg: <code>1, &quot;ABC&quot;, {&quot;S-101&quot;:&quot;DataStructures&quot;, &quot;S-150&quot;:&quot;NLP&quot;, &quot;S-250&quot;:&quot;Machine learning&quot;}</code></p>&#xA;<p>My current GraphQL query -</p>&#xA;<pre><code>{&#xA;  student_courses() {&#xA;    data {&#xA;      student_id&#xA;      student_name&#xA;      course_code&#xA;      course_name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",960970,,,,2021-03-25 05:55:20,Grouping in GraphQL query,<api><graphql><graphql-ruby>,1,4,0,2021-03-15 12:17:11
66645254,1,,,2,452,"<p>I am using Graphql within AWS AppSync.  I can create items with no issues but when i try to delete one i get this error.</p>&#xA;<p><strong>ConflictUnhandled - Conflict resolver rejects mutation.</strong></p>&#xA;<p>i am using</p>&#xA;<pre><code>deleteFavorite(input: {id: &quot;ce8dfa4c-ef87-492e-9a87-f17d2f0b06c8&quot;, _version: 1})&#xA;</code></pre>&#xA;<p>from this auto created mutation</p>&#xA;<pre><code>export const deleteFavorite = /* GraphQL */ `&#xA;  mutation DeleteFavorite(&#xA;    $input: DeleteFavoriteInput!&#xA;    $condition: ModelFavoriteConditionInput&#xA;  ) {&#xA;    deleteFavorite(input: $input, condition: $condition) {&#xA;      id&#xA;      productID&#xA;      useremail&#xA;      userID&#xA;      _version&#xA;      _deleted&#xA;      _lastChangedAt&#xA;      createdAt&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;",7669770,,,,2021-03-15 20:55:51,Error when trying to delete in AWS AppSync,<graphql><aws-amplify><aws-appsync>,1,0,0,2021-03-15 20:31:34
66645533,2,,66645254,1,,<p>The answer was to make sure i was passing the same _version back to the delete rewuest</p>&#xA;,7669770,,,,2021-03-15 20:55:51,"",,0,0,0,2021-03-15 20:55:51
66646476,2,,66446143,1,,"<p>The problem started after installed  - amplify cli &quot;4.45.2&quot;.&#xA;The old code for autogenerated permissions in the lambda cloudformation template looked like this.</p>&#xA;<pre><code>            {&#xA;          &quot;Effect&quot;: &quot;Allow&quot;,&#xA;          &quot;Action&quot;: [&#xA;            &quot;appsync:Create*&quot;,&#xA;            &quot;appsync:StartSchemaCreation&quot;,&#xA;            &quot;appsync:GraphQL&quot;,&#xA;            &quot;appsync:Get*&quot;,&#xA;            &quot;appsync:List*&quot;,&#xA;            &quot;appsync:Update*&quot;,&#xA;            &quot;appsync:Delete*&quot;&#xA;          ],&#xA;          &quot;Resource&quot;: [&#xA;            {&#xA;              &quot;Fn::Join&quot;: [&#xA;                &quot;&quot;,&#xA;                [&#xA;                  &quot;arn:aws:appsync:&quot;,&#xA;                  {&#xA;                    &quot;Ref&quot;: &quot;AWS::Region&quot;&#xA;                  },&#xA;                  &quot;:&quot;,&#xA;                  {&#xA;                    &quot;Ref&quot;: &quot;AWS::AccountId&quot;&#xA;                  },&#xA;                  &quot;:apis/&quot;,&#xA;                  {&#xA;                    &quot;Ref&quot;: &quot;myApiGraphQLAPIIdOutput&quot;&#xA;                  },&#xA;                  &quot;/*&quot;&#xA;                ]&#xA;              ]&#xA;            }&#xA;          ]&#xA;        }&#xA;</code></pre>&#xA;<p>But after I moved to  amplify cli &quot;4.45.2&quot; and give lambda permissions for appsync.&#xA;It generated :</p>&#xA;<pre><code>    {&#xA;          &quot;Effect&quot;: &quot;Allow&quot;,&#xA;          &quot;Action&quot;: [&#xA;            &quot;appsync:GraphQL&quot;&#xA;          ],&#xA;          &quot;Resource&quot;: [&#xA;            {&#xA;              &quot;Fn::Join&quot;: [&#xA;                &quot;&quot;,&#xA;                [&#xA;                  &quot;arn:aws:appsync:&quot;,&#xA;                  {&#xA;                    &quot;Ref&quot;: &quot;AWS::Region&quot;&#xA;                  },&#xA;                  &quot;:&quot;,&#xA;                  {&#xA;                    &quot;Ref&quot;: &quot;AWS::AccountId&quot;&#xA;                  },&#xA;                  &quot;:apis/&quot;,&#xA;                  {&#xA;                    &quot;Ref&quot;: &quot;myApiGraphQLAPIIdOutput&quot;&#xA;                  },&#xA;                  &quot;/types/create/*&quot;&#xA;                ]&#xA;              ]&#xA;            },&#xA;            {&#xA;              &quot;Fn::Join&quot;: [&#xA;                &quot;&quot;,&#xA;                [&#xA;                  &quot;arn:aws:appsync:&quot;,&#xA;                  {&#xA;                    &quot;Ref&quot;: &quot;AWS::Region&quot;&#xA;                  },&#xA;                  &quot;:&quot;,&#xA;                  {&#xA;                    &quot;Ref&quot;: &quot;AWS::AccountId&quot;&#xA;                  },&#xA;                  &quot;:apis/&quot;,&#xA;                  {&#xA;                    &quot;Ref&quot;: &quot;myApiGraphQLAPIIdOutput&quot;&#xA;                  },&#xA;                  &quot;/types/read/*&quot;&#xA;                ]&#xA;              ]&#xA;            },&#xA;            {&#xA;              &quot;Fn::Join&quot;: [&#xA;                &quot;&quot;,&#xA;                [&#xA;                  &quot;arn:aws:appsync:&quot;,&#xA;                  {&#xA;                    &quot;Ref&quot;: &quot;AWS::Region&quot;&#xA;                  },&#xA;                  &quot;:&quot;,&#xA;                  {&#xA;                    &quot;Ref&quot;: &quot;AWS::AccountId&quot;&#xA;                  },&#xA;                  &quot;:apis/&quot;,&#xA;                  {&#xA;                    &quot;Ref&quot;: &quot;myApiGraphQLAPIIdOutput&quot;&#xA;                  },&#xA;                  &quot;/types/update/*&quot;&#xA;                ]&#xA;              ]&#xA;            }&#xA;          ]&#xA;        }&#xA;&#xA;&#xA;enter code here&#xA;</code></pre>&#xA;<p>And I got error &quot;permission denied&quot; when trying to reach appsync from lambda.</p>&#xA;<p>I think the new cli has some bug when generating appsync permissions for lambda.</p>&#xA;<p>I manually moved back on the old generated code in the lambda cloudformation file and it worked.</p>&#xA;",7630501,,,,2021-03-15 22:21:08,"",,0,1,0,2021-03-15 22:21:08
66661483,2,,66657518,0,,"<p><code>https://gitlab.com/api/v4/users/&lt;id&gt;</code> did contain createdAt, which was when the user's account was created. I'm not sure why I thought that the user id was in a project context, I think I decided that because the examples on their website used user_ids of 1 and 2.</p>&#xA;",9717991,,9717991,2021-03-17 07:10:09,2021-03-17 07:10:09,"",,0,0,0,2021-03-16 18:43:33
66682938,1,66752603,,0,689,"<p>I am trying to insert number id into primary column of User table using Typeorm to build graphql resolver, but get Error</p>&#xA;<blockquote>&#xA;<p>Cannot insert explicit value for identity column in table 'User' when IDENTITY_INSERT is set to OFF.</p>&#xA;</blockquote>&#xA;<p>I've tried to <code>set identity_insert on</code>, but no luck</p>&#xA;<pre><code>await em.query(&quot;SET IDENTITY_INSERT User ON&quot;)&#xA;await em.create(User, newUser)&#xA;</code></pre>&#xA;<p>Some suggest to combine the two queries into online, but I don't know how to do it in Typeorm.&#xA;I know it may be possible to write raw query to combine them. I am wondering if there is an elegent way to do it?</p>&#xA;",11025517,,1127428,2021-03-18 00:07:15,2021-03-22 19:25:01,Insert number id into primary key column using Typeorm EntityManager API,<javascript><sql-server><typeorm><graphql-js>,2,0,0,2021-03-17 23:58:15
66692348,1,,,0,19,"<p>I am running a graphql server.&#xA;The serer does work fine for me when I deployed using Serverless, but it doesn't work when I deployed with cloudformation.&#xA;Here is my template.yml.</p>&#xA;<pre><code>AWSTemplateFormatVersion: 2010-09-09&#xA;Transform: AWS::Serverless-2016-10-31&#xA;Resources:&#xA;  GraphQL:&#xA;    Type: AWS::Serverless::Function&#xA;    Properties:&#xA;      Handler: src/index.handler&#xA;      Runtime: nodejs12.x&#xA;      Events:&#xA;        AnyRequest:&#xA;          Type: Api&#xA;          Properties:&#xA;            Path: /graphql&#xA;            Method: ANY&#xA;</code></pre>&#xA;<p>Please give me a suggestion.</p>&#xA;",9781325,,,,2021-03-18 13:43:41,Does not the server deployed using Cloudformation work,<lambda><graphql><amazon-cloudformation>,0,2,0,2021-03-18 13:43:41
66698846,1,,,0,237,"<p>we are currently studying the stack: cdk, appsync and amplify to migrate our applications.</p>&#xA;<p>In our initial tests, we were able to upload a graphql api with only appsync wit relationships and it was very smooth, nice and fast.</p>&#xA;<p>When testing to build with cdk, we are having difficulties to create the relationships.</p>&#xA;<p>Here my code:</p>&#xA;<p>Schema</p>&#xA;<pre><code>type Person {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;input PersonInput {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;input UpdatePersonInput {&#xA;  id: ID!&#xA;  name: String&#xA;}&#xA;type Client {&#xA;  id: ID!&#xA;  type: String!&#xA;  personId: String&#xA;  # Person: PersonConnection &#xA;  Person: Person @connection(fields: [&quot;personId&quot;])&#xA;}&#xA;input ClientInput {&#xA;  id: ID!&#xA;  type: String!&#xA;  personId: String!&#xA;}&#xA;input UpdateClientInput {&#xA;  id: ID!&#xA;  type: String&#xA;  personId: String&#xA;}&#xA;</code></pre>&#xA;<p>My function</p>&#xA;<pre><code>const AWS = require('aws-sdk');&#xA;const docClient = new AWS.DynamoDB.DocumentClient();&#xA;async function list() {&#xA;    const params = {&#xA;        TableName: process.env.CLIENT_TABLE,&#xA;    }&#xA;    try {&#xA;        const data = await docClient.scan(params).promise()&#xA;        return data.Items&#xA;    } catch (err) {&#xA;        console.log('DynamoDB error: ', err)&#xA;        return null&#xA;    }&#xA;}&#xA;export default list;&#xA;</code></pre>&#xA;<p>My table</p>&#xA;<pre><code>const clientTable = new dynamodb.Table(scope, 'ClientTable', {&#xA;        billingMode: dynamodb.BillingMode.PAY_PER_REQUEST,&#xA;        partitionKey: {&#xA;            name: 'id',&#xA;            type: dynamodb.AttributeType.STRING,&#xA;        },&#xA;    });&#xA;    clientTable.addGlobalSecondaryIndex({&#xA;        indexName: 'client-by-person-id',&#xA;        partitionKey: {&#xA;        name: 'personId',&#xA;        type: dynamodb.AttributeType.STRING&#xA;        },&#xA;        sortKey: {&#xA;        name: 'createdAt',&#xA;        type: dynamodb.AttributeType.STRING&#xA;        }&#xA;    })&#xA;</code></pre>&#xA;<p>My query</p>&#xA;<pre><code>query MyQuery {&#xA;  listClients {&#xA;    id&#xA;    personId&#xA;    type&#xA;    Person {&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>However, my return to Person connection is null</p>&#xA;<pre><code>&quot;listClients&quot;: [&#xA;      {&#xA;        &quot;id&quot;: &quot;1&quot;,&#xA;        &quot;personId&quot;: &quot;1&quot;,&#xA;        &quot;type&quot;: &quot;PJ&quot;,&#xA;        &quot;Person&quot;: null&#xA;      }&#xA;    ]&#xA;</code></pre>&#xA;<p>I would appreciate it if could point out our mistake</p>&#xA;",15269324,,,,2021-03-20 15:46:39,"Relationships with AwsCdk, DynamoDB and AppSync - Typescript and lambda functions",<graphql><aws-appsync><aws-cdk>,1,0,0,2021-03-18 20:44:00
66699534,2,,63355847,1,,"<p>if anyone is still looking into this:</p>&#xA;<ul>&#xA;<li>remove &quot;all&quot; in the type (so, from &quot;allSitePage&quot; to &quot;SitePage&quot;)</li>&#xA;<li>remove &quot;fields.&quot; in the resolver definitions (so, from &quot;fields.title&quot; to &quot;title&quot;)</li>&#xA;</ul>&#xA;<p>After the changes the code by OP should look like:</p>&#xA;<pre><code>    {&#xA;      resolve: &quot;gatsby-plugin-flexsearch&quot;,&#xA;      options: {&#xA;        languages: [&quot;en&quot;],&#xA;        type: &quot;SitePage&quot;,&#xA;        fields: [&#xA;          {&#xA;            name: &quot;title&quot;,&#xA;            indexed: true,&#xA;            resolver: &quot;title&quot;,&#xA;            attributes: {&#xA;              encode: &quot;balance&quot;,&#xA;              tokenize: &quot;strict&quot;,&#xA;              threshold: 6,&#xA;              depth: 3,&#xA;            },&#xA;            store: true,&#xA;          },&#xA;          {&#xA;            name: &quot;context&quot;,&#xA;            indexed: true,&#xA;            resolver: &quot;context&quot;,&#xA;            attributes: {&#xA;              encode: &quot;balance&quot;,&#xA;              tokenize: &quot;strict&quot;,&#xA;              threshold: 6,&#xA;              depth: 3,&#xA;            },&#xA;            store: false,&#xA;          },&#xA;          {&#xA;            name: &quot;url&quot;,&#xA;            indexed: false,&#xA;            resolver: &quot;path&quot;,&#xA;            store: true,&#xA;          },&#xA;        ],&#xA;      },&#xA;    },&#xA;</code></pre>&#xA;",4508574,,1839439,2021-03-18 21:47:33,2021-03-18 21:47:33,"",,0,0,0,2021-03-18 21:41:31
66701601,2,,57650203,0,,"<p>The solution for me was to include the batch permissions in the IAM role <code>&quot;dynamodb:BatchGetItem&quot; and &quot;dynamodb:BatchWriteItem&quot;</code>. Seems that this operations aren't included by default.</p>&#xA;<p>Final json policy</p>&#xA;<pre><code>{&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Effect&quot;: &quot;Allow&quot;,&#xA;            &quot;Action&quot;: [&#xA;                &quot;dynamodb:DeleteItem&quot;,&#xA;                &quot;dynamodb:GetItem&quot;,&#xA;                &quot;dynamodb:PutItem&quot;,&#xA;                &quot;dynamodb:Query&quot;,&#xA;                &quot;dynamodb:Scan&quot;,&#xA;                &quot;dynamodb:UpdateItem&quot;,&#xA;                &quot;dynamodb:BatchGetItem&quot;,&#xA;                &quot;dynamodb:BatchWriteItem&quot;&#xA;            ],&#xA;            &quot;Resource&quot;: [&#xA;                &quot;arn:aws:dynamodb:&lt;region&gt;:&lt;account_id&gt;:table/&lt;TableName&gt;&quot;,&#xA;                &quot;arn:aws:dynamodb:&lt;region&gt;:&lt;account_id&gt;:table/&lt;TableName&gt;/*&quot;&#xA;            ]&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;",1647238,,,,2021-03-19 02:05:16,"",,0,0,0,2021-03-19 02:05:16
66723504,2,,66698846,0,,"<p>Solution of the problem based on the response of the Thorsten.</p>&#xA;<ol>&#xA;<li><p>First, add resolver to the Person field in Client</p>&#xA;<p><code>export const clientResolvers = [{ typeName: &quot;Client&quot;, fieldName: &quot;Person&quot; },...]</code></p>&#xA;<p><code>clientResolvers.map(((resolver: clientTypeResolver) =&gt; dataSource2.createResolver(resolver)))</code></p>&#xA;</li>&#xA;<li><p>Map function to the Person field in its lambda function</p>&#xA;<pre><code>type AppSyncEvent = {&#xA;    ...&#xA;    source: {personId: string,}&#xA;    ...&#xA;}&#xA;&#xA;exports.handler = async (event:AppSyncEvent) =&gt; {&#xA;    switch (event.info.fieldName) {&#xA;        ...&#xA;        case &quot;Person&quot;:&#xA;        return await getPerson(event.source.personId);&#xA;    }&#xA;}```&#xA;&#xA;</code></pre>&#xA;</li>&#xA;<li><p>Function to solve the person field</p>&#xA;</li>&#xA;</ol>&#xA;<pre><code>async function getPerson(personId: string) {&#xA;    console.log(&quot;CONTEXT\n&quot; + JSON.stringify(personId, null, 2))&#xA;    // console.log(context.source)&#xA;    const params = {&#xA;        TableName: process.env.PERSON_TABLE,&#xA;        Key: { id: personId }&#xA;    }&#xA;    try {&#xA;        const { Item } = await docClient.get(params).promise()&#xA;        console.log(&quot;DATA\n&quot; + JSON.stringify(Item, null, 2))&#xA;        return Item&#xA;    } catch (err) {&#xA;        console.log('DynamoDB error: ', err)&#xA;    }&#xA;</code></pre>&#xA;",15269324,,,,2021-03-20 15:46:39,"",,0,0,0,2021-03-20 15:46:39
66734244,2,,55638965,5,,"<p>If you don't want to pull in <code>apollo-link</code>, you can also get this via the base <code>graphql</code> package (note that I use <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining"" rel=""noreferrer"">optional chaining</a> for convenience:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { getOperationAST } from 'graphql';&#xA;&#xA;&#xA;const operationName = getOperationAST(POST_AUTHOR_QUERY)?.name?.value;&#xA;// Note that this could technically return `undefined`&#xA;&#xA;const upvote = await client.mutate({&#xA;  mutation: UPVOTE_MUTATION,&#xA;  variables: {&#xA;    postId: this.props.post.id&#xA;  },&#xA;  refetchQueries: [operationName]&#xA;})&#xA;</code></pre>&#xA;",3790987,,,,2021-03-21 15:35:20,"",,0,0,0,2021-03-21 15:35:20
66741387,2,,66680731,7,,"<p>I presume you are using <a href=""https://pub.dev/packages/graphql_flutter"" rel=""noreferrer"">flutter_graphql</a>.&#xA;It is bad practice to generate mutation strings using interpolation. You should use <code>graphql</code> variables for sending data with mutations (And, there is no problem in sending a multi-line string).</p>&#xA;<p>Sample:</p>&#xA;<pre><code>String createComments(String postId, var text) {&#xA;  const createCommentMutation = &quot;&quot;&quot;&#xA;      mutation createComment(\$postId: String, \$comment:String) { &#xA;        createComment(postId: \$postId, &#xA;          data:{&#xA;            text: \$comment,&#xA;          }&#xA;        ){&#xA;          _id&#xA;        }&#xA;      }&#xA;  &quot;&quot;&quot;;&#xA;&#xA;  dynamic _resp = await _graphClient&#xA;          .mutate(MutationOptions(&#xA;              document: gql(createCommentMutation),&#xA;              variables: {&#xA;                'postId': postId, //Add your variables here&#xA;                'comment':text&#xA;              },&#xA;          ));&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>The type of <code>\$postId</code> &amp; <code>\$comment</code> should be same as that of in your graphql schema. I have declared them as <code>String</code> on the very first line.</p>&#xA;<p>You can find the documentation of the same <a href=""https://pub.dev/packages/graphql_flutter#mutations"" rel=""noreferrer"">here</a></p>&#xA;",3660991,,534943,2021-03-25 00:18:30,2021-03-25 00:18:30,"",,0,4,0,2021-03-22 06:43:08
66745342,1,,,2,215,"<p>when user click button,&#xA;I want to update A(Stock) DB by using data from B(Account) DB.</p>&#xA;<p>when user click button,&#xA;django get data(company_id and company_secret) From Account DB.&#xA;and then web scraping with data. it makes new data. i want to just save new data to Stock DB.&#xA;I don't want to give data to web.</p>&#xA;<p>below code show error &quot;GetStockMutation fields must be a mapping (dict / OrderedDict) with field names as keys or a function which returns such a mapping.&quot;</p>&#xA;<pre><code>import graphene&#xA;from .types import AccountType, StockType&#xA;from .models import *&#xA;from .crypt import AESCipher&#xA;from graphql_jwt.decorators import login_required&#xA;from .views import getStockNamu&#xA;&#xA;class GetStockMutation(graphene.Mutation):&#xA;&#xA;    @login_required&#xA;    def mutate(self, info, **kwargs):&#xA;        if info.context.user.is_authenticated:&#xA;            user_id = info.context.user.id&#xA;            &#xA;            #data from Account DB&#xA;            account = Account.objects.get(user_id=user_id, company=1)&#xA;            &#xA;            #decrypt&#xA;            company_id = AESCipher().decrypt_str(account.company_id)&#xA;            company_secret = AESCipher().decrypt_str(account.company_secret)&#xA;&#xA;            # web scraping&#xA;            code, amount = getStockNamu(company_id, company_secret)&#xA;           &#xA;            #save it to Stock DB&#xA;            stock = Stock.objects.create(user_id=user_id, code=code, amount=amount, company=1)&#xA;            stock.save()&#xA;            print(stock)&#xA;        else:&#xA;            raise PermissionError(&quot;로그인이 필요합니다.&quot;)&#xA;&#xA;&#xA;&#xA;class Query(object):&#xA;    pass&#xA;&#xA;        &#xA;class Mutation(graphene.ObjectType):&#xA;    get_account = GetaccountMutation.Field()&#xA;    get_stock = GetStockMutation.Field()&#xA;</code></pre>&#xA;",15341772,,,,2021-03-22 11:41:18,"how to make Mutation by graphene-django when there are no input, output?",<python><django><graphql><graphene-django>,0,0,0,2021-03-22 11:41:18
66746771,1,,,4,750,"<p>I am new to Amplify and I am building a simple list of items (votes) with GraphQL. While the items <strong>visibility should be public (read access) without authentication</strong>, creating, updating and deleting should be done authenticated via <strong>Cognito user pool</strong>.</p>&#xA;<p>The model can be seen in following <strong>AWS Amplify Admin UI</strong> screenshot:</p>&#xA;<p><img src=""https://i.imgur.com/tkC1yqs.png"" alt=""AWS Amplify Admin UI Data"" /></p>&#xA;<p>I am not able to set the read access to <code>Anyone</code> (since this option is greyed out). Furthermore following statement in the AWS docs puzzles me a bit:</p>&#xA;<blockquote>&#xA;<p>While the API endpoints are publicly reachable, they never allow unauthorized access.<br />&#xA;<a href=""https://aws.amazon.com/blogs/mobile/graphql-security-appsync-amplify/"" rel=""nofollow noreferrer"">GraphQL API Security with AWS AppSync and mplify</a></p>&#xA;</blockquote>&#xA;<p><strong>Am I on the wrong track when I want to publish a Graph API with Amplify to the public without authentication? Did I misconfigure my API or is there a way to bypass authentication?</strong> Honestly I am not sure if I understand the concept behind this.</p>&#xA;<p>For me it is hardly imaginable that only authenticated users can access the API. Respectively I assume there are many other cases (beside my one) where accessing the API without authentication is a requirement.</p>&#xA;<p>Thanks in advance for your feedback.</p>&#xA;<p>PS: <a href=""https://stackoverflow.com/questions/52601860/authorization-amplify-api"">#52601860</a> seems to be a similar question.</p>&#xA;",5894988,,,,2022-10-11 19:40:09,AWS Amplify Graph API that can be accessed without authorization (login),<amazon-web-services><graphql><aws-amplify><aws-amplify-cli>,2,2,0,2021-03-22 13:11:07
66765713,1,,,0,203,"<p>Is there a way in Hasura to run something such as a <code>having</code> which filters the results after all the data is returned after the where?</p>&#xA;<pre><code>query {&#xA;    applications {&#xA;        permissions {&#xA;            user { &#xA;                id&#xA;                first&#xA;                last&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>I have a query where I want to return an application only if the current user is in the list of <code>applications.permissions.user</code>.</p>&#xA;<p>The below pseudo sql is something that I am looking for.</p>&#xA;<pre class=""lang-sql prettyprint-override""><code>select * from ... where ... having applicaitons.permissions.user in permissions;&#xA;</code></pre>&#xA;<p>As of now I am getting an array that looks something like this:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;applications&quot;: [&#xA;    {&#xA;      &quot;permissions&quot;: [&#xA;        { &quot;user&quot;: null }&#xA;      ]&#xA;    },&#xA;    {&#xA;      &quot;permissions&quot;: [&#xA;        { &quot;user&quot;: {&quot;id&quot;:123,&quot;first&quot;:&quot;Billy&quot;,&quot;last&quot;:&quot;Joe&quot;} }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>What I would like is an array that looks like this (where &quot;id&quot; is the current user):</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;applications&quot;: [&#xA;    {&#xA;      &quot;permissions&quot;: [&#xA;        { &quot;user&quot;: {&quot;id&quot;:123,&quot;first&quot;:&quot;Billy&quot;,&quot;last&quot;:&quot;Joe&quot;} }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;",1778465,,,,2021-03-23 14:56:39,Hasura select items where children contain the current user,<graphql><hasura>,0,2,0,2021-03-23 14:56:39
66782704,2,,66771488,0,,"<p>I managed to get the metadata by changing <code>Item</code> to <code>ItemToPlayer</code> as @Ryan suggested in his answer and changing my query and the resolver.</p>&#xA;<p>new <code>Item</code> resolver</p>&#xA;<pre><code>Item: {&#xA;    players: (parent, args, context, info) =&gt; {&#xA;        return context.db.itemToPlayer.findMany({&#xA;            where: {&#xA;                itemId: parent.id&#xA;            },&#xA;            include: {&#xA;                item: true&#xA;            }&#xA;        });&#xA;    },&#xA;},&#xA;</code></pre>&#xA;<p>I am now querying the <code>ItemsToPlayers</code> table and getting back an <code>ItemToPlayer</code> type which I can then query the <code>Item</code> from</p>&#xA;<pre><code>CORRECT&#xA;query {&#xA;  players {&#xA;    id&#xA;    items {&#xA;      id&#xA;      itemLevel&#xA;      item {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;WRONG&#xA;query {&#xA;  players {&#xA;    id&#xA;    items {&#xA;      id&#xA;      itemLevel &lt;--- This is wrong as itemLevel&#xA;                                    does not exist in Item&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Result</p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;        &quot;players&quot;: [&#xA;            {&#xA;                &quot;id&quot;: 1&#xA;                &quot;items&quot;: [&#xA;                    {&#xA;                        &quot;itemLevel&quot;: 2&#xA;                        &quot;item&quot;: {&#xA;                             &quot;id&quot;: 1,&#xA;                        }&#xA;                    },&#xA;                    {&#xA;                        &quot;itemLevel&quot;: 0&#xA;                        &quot;item&quot;: {&#xA;                             &quot;id&quot;: 1,&#xA;                        }&#xA;                    },&#xA;                ]&#xA;            },&#xA;        ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",2368113,,,,2021-03-24 14:01:12,"",,0,0,0,2021-03-24 14:01:12
66785183,1,,,1,569,"<p>I'm implementing Amplify Flutter and want to connect it to our own custom GraphQL endpoint (i.e. non-AppSync). I am however having trouble getting it to work. The official documentation is not super-clear on this (at least not for those of us who are completely new to Amplify). What I have done:</p>&#xA;<ol>&#xA;<li>In <code>pubspec.yaml</code>, I’ve added and installed the <code>amplify_api</code> package.</li>&#xA;<li>In <code>main.dart</code>, I’ve updated <code>_configureAmplify()</code> to add the <code>AmplifyAPI()</code> plugin.</li>&#xA;<li>In <code>amplifyconfiguration.dart</code>, I have manually added the following snippet:</li>&#xA;</ol>&#xA;<pre><code>&quot;api&quot;: {&#xA;        &quot;plugins&quot;: {&#xA;            &quot;awsAPIPlugin&quot;: {&#xA;                &quot;xxxxxAPI&quot;: {&#xA;                    &quot;endpointType&quot;: &quot;GraphQL&quot;,&#xA;                    &quot;endpoint&quot;: &quot;http://xxxxxxxx.eba-fmuh2afu.eu-north-1.elasticbeanstalk.com/query&quot;,&#xA;                    &quot;region&quot;: &quot;[REGION]&quot;,&#xA;                    &quot;authorizationType&quot;: &quot;AMAZON_COGNITO_USER_POOLS&quot;&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;<p>But I keep getting the error &quot;<em>There is no API configured for this plugin with matching endpoint type.</em>&quot;  What am I doing wrong?  (Note: I presume that I don't have to add any &quot;region&quot; value if I'm pointing to our own custom GraphQL endpoint).</p>&#xA;",15025282,,,,2021-12-14 18:03:52,Amplify Flutter: How to connect to existing GraphQL endpoint,<flutter><graphql><aws-amplify><amplify>,1,0,0,2021-03-24 16:20:46
66801597,2,,66163582,1,,"<p>I have undertaken some research on this issue, and although it is far from complete, I would like to share it.</p>&#xA;<ol>&#xA;<li>Despite <a href=""https://docs.amplify.aws/cli/graphql-transformer/auth#combining-multiple-authorization-types"" rel=""nofollow noreferrer"">amplify docs</a> say, that there is possibility to combine multiple autorization types, they don't specify explicitly, that you can't combine them in one request (my be, it's evident for them, but not for novice like me).</li>&#xA;<li>When you configure your AppSync GraphQL API with <code>amplify update api</code>, you choose default authorization type. All subsequent requests from your front  by <code>await API.graphql()</code> will use this default unless you explicitly specify different type like this <code>await API.graphql(Object.assign(graphqlOperation(listTodos),{authMode: auth_mode}))</code>, where <code>auth_mode</code> can take one of next values: <code>&quot;API_KEY&quot;, &quot;AWS_IAM&quot;, &quot;AMAZON_COGNITO_USER_POOLS&quot;</code> and <code>&quot;OPENID_CONNECT&quot;</code>.</li>&#xA;<li>There are two &quot;true&quot; public authorization types in Amplify - <code>&quot;API_KEY&quot;</code> and <code>&quot;AWS_IAM&quot;</code>. To activate any of them (or both), you should do something like that:</li>&#xA;</ol>&#xA;<pre><code>    type Todo @model   &#xA;     @auth(rules: [&#xA;        { allow: public },&#xA;        { allow: public, provider: iam},&#xA;        ])&#xA;        {&#xA;          id: ID!&#xA;          name: String!&#xA;          description: String&#xA;          owner: String&#xA;          editors: [String]&#xA;          entity: String&#xA;        }   &#xA;</code></pre>&#xA;<ol start=""4"">&#xA;<li><code>{ allow: public }</code> stands for <code>&quot;API_KEY&quot;</code>, <code>{ allow: public, provider: iam}</code> - for <code>&quot;AWS_IAM&quot;</code>.</li>&#xA;<li>For <code>&quot;API_KEY&quot;</code>to work propery you should configure API KEY (for ex - with <code>amplify update api</code>). For <code>&quot;AWS_IAM&quot;</code> you should configure Cognito and enable unauthenticated identities in Cognito Identity Pool.</li>&#xA;<li>After that, any request without prior user sign-in of the form <code>await API.graphql(Object.assign(graphqlOperation(listTodos),{authMode: auth_mode}))</code> with <code>auth_mode=API_KEY</code> or <code>auth_mode=AWS_IAM</code> will succeed (also updateTodo, createTodo and deleteTodo).</li>&#xA;<li>In either case you can't implement your workflow with public field, enabled by user, &quot;out of the box&quot;, because permission evaluation get accomplished <strong>prior</strong> to any database info gets available. For ex, IAM authorization uses unauthenticated role policy, generated for you by <code>amplify update api</code>. You can see it in your AWS console in IAM service.</li>&#xA;<li>To partially implement your private/public workflow I can suggest to use so called dynamic group authorization(We assume &quot;AMAZON_COGNITO_USER_POOLS&quot; auth mode). In that case you implement &quot;public&quot; group in your Cognito User Pool and make any user member of this group (you can automate this by using post signUp hooks).</li>&#xA;<li>Your @auth could be something like that</li>&#xA;</ol>&#xA;<pre><code>    type Todo @model   &#xA;     @auth(rules: [&#xA;        { allow: owner },&#xA;        { allow: groups, groupsField: &quot;groupsCanAccess&quot;, operations: [read] },&#xA;        ])&#xA;        {&#xA;          id: ID!&#xA;          name: String!&#xA;          description: String&#xA;          owner: String&#xA;          editors: [String]&#xA;          entity: String&#xA;          groupsCanAccess: [String]&#xA;        }   &#xA;</code></pre>&#xA;<ol start=""10"">&#xA;<li>When your user decides that it's time to go public, she request updateTodo with <code>groupsCanAccess</code> set to <code>public</code>. As  you can see, this is partial solution because to read todos your &quot;public&quot; user should be registered.</li>&#xA;<li>To partially implement your employee-organization workflow I could suggest next approach (We again assume &quot;AMAZON_COGNITO_USER_POOLS&quot;):</li>&#xA;</ol>&#xA;<pre><code>  type User @model &#xA;  @auth( rules: [&#xA;  { allow: owner },&#xA;  { allow: groups, groupsField: &quot;groupsCanAccess&quot;, operations: [read] },&#xA;  {allow: groups, groups: [&quot;Admin&quot;] }  &#xA;      ]) {&#xA;      id: ID!&#xA;      owner: String! @auth(rules[{allow: groups, groups: [&quot;Admin&quot;] }]) &#xA;      groupsCanAccess:[String] &#xA;      @auth(rules[{allow: owner},{allow: groups, groups: [&quot;Admin&quot;] }])&#xA;      todo: [Todo] @connection(keyName: &quot;byUser&quot;, fields: [&quot;owner&quot;])&#xA;&#xA;  type Todo @model &#xA;   (queries: null)&#xA;   @auth ({allow: owner, operations[delete]})&#xA;   @key [(name: &quot;byUser&quot;, fields: [&quot;owner&quot;, &quot;description&quot;])&#xA;      {&#xA;        id: ID!&#xA;        name: String!&#xA;        description: String&#xA;        owner: String! @auth(rules[{allow: owner}])&#xA;      }   &#xA;</code></pre>&#xA;<ol start=""12"">&#xA;<li><p>Here everybody can create, update and read Todo, but read operation is possible only through User (queries: null), so nobody can get particular id to update particular Todo except owner. There is though some little possibility that someone can guess this id and it's drawback of this approach. It's impossible to create Todo without owner (exclamation sign on field), and nobody can create Todo but owner (nobody can alter owner field but owner). Note that operations[delete] is important, because without that nobody can query Todo through User ( {allow: owner} equivalent to {allow: owner, operations[create,update,read,delete]}).</p>&#xA;</li>&#xA;<li><p>Owner can do everything with User, but she can't create or delete User because she can't alter owner field protected by perfield @auth directive</p>&#xA;</li>&#xA;<li><p>Admins can create User and set owner to particular user.</p>&#xA;</li>&#xA;<li><p>Admins and owner can alter groupsCanAccess field. Every element in this array corresponds to some organization. When Admins or owner add some organization, every member of this group gains access to this User and to all of her Todos through this User. Drawback - owner can forbid access granted by Admins. Because Todos aren't protected from update - every group member can alter Todos of particular User.</p>&#xA;</li>&#xA;<li><p>Operations of adding Cognito User Pool user to group performed by admins and are out of scope of this document. Drawback - only 300 Groups per Cognito Pool.</p>&#xA;</li>&#xA;<li><p>And last - you of course have option to manually adjust resolvers, automatically generated by Amplify. You may for ex use &quot;AWS_IAM&quot; and organize owner check by analyzing $context.identity.cognitoIdentityId inside your rezolver mapping template. As you know - there is one-to-one correspondence between this Cognito Identity Pool paramener and user from User Pool. It's especially convinient when you need to store public and owner's Todos (there is some unique per Identity Pool cognitoIdentityId corresponding to unauthenticated user).</p>&#xA;</li>&#xA;</ol>&#xA;",10324389,,,,2021-03-25 14:28:22,"",,0,0,0,2021-03-25 14:28:22
66804144,2,,66726617,3,,"<p>Thanks to support from FaunaDB</p>&#xA;<p>The following query and UDF does the trick</p>&#xA;<p>Query</p>&#xA;<pre><code>type Query {&#xA;  getMultipleDecors(DecorId: [ID!]): [Decor]&#xA;    @resolver(name: &quot;get_multiple_decors&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>udf named <code>get_multiple_decors</code></p>&#xA;<pre><code>Query(&#xA;  Lambda(&#xA;    [&quot;input&quot;],&#xA;    Let(&#xA;      {&#xA;        data: Map(&#xA;          Var(&quot;input&quot;),&#xA;          Lambda(&quot;x&quot;, Get(Ref(Collection(&quot;Decor&quot;), Var(&quot;x&quot;))))&#xA;        )&#xA;      },&#xA;      Var(&quot;data&quot;)&#xA;    )&#xA;  )&#xA;)&#xA;</code></pre>&#xA;",2949184,,,,2021-03-25 16:56:04,"",,0,0,0,2021-03-25 16:56:04
66816512,2,,57794338,2,,"<p>Looks like it has to do with how the app sync / amplify resolve conflicts. Conflict resolution is active if DataStore is enabled.</p>&#xA;<p>You may need this info when you use GraphQL from NodeJS on server side in addition to DataStore client on client side (for example lambda with IAM auth): <a href=""https://docs.amplify.aws/lib/graphqlapi/graphql-from-nodejs/q/platform/js"" rel=""nofollow noreferrer"">https://docs.amplify.aws/lib/graphqlapi/graphql-from-nodejs/q/platform/js</a></p>&#xA;<p><strong>Including</strong> the <strong>_version</strong> number works. Makes sense.</p>&#xA;<p>See also:&#xA;<a href=""https://github.com/aws-amplify/amplify-cli/issues/3237"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/3237</a> (Update mutations GraphQL for new created models not working), see comment: <a href=""https://github.com/aws-amplify/amplify-cli/issues/3237#issuecomment-584375936"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/3237#issuecomment-584375936</a></p>&#xA;<p><strong>Not working example:</strong>&#xA;<a href=""https://i.stack.imgur.com/584TQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/584TQ.png"" alt=""enter image description here"" /></a></p>&#xA;<p><strong>Working example:</strong>&#xA;<a href=""https://i.stack.imgur.com/1JXC8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1JXC8.png"" alt=""enter image description here"" /></a></p>&#xA;<p><strong>Please note:</strong></p>&#xA;<p><a href=""https://docs.amplify.aws/lib/datastore/how-it-works/q/platform/js#writing-data-from-the-appsync-console"" rel=""nofollow noreferrer"">https://docs.amplify.aws/lib/datastore/how-it-works/q/platform/js#writing-data-from-the-appsync-console</a></p>&#xA;<blockquote>&#xA;<p>Writing data from the AppSync console</p>&#xA;<p>DataStore is designed primarily for developers to not have to focus on&#xA;the backend and let your application code and workflow create&#xA;everything. However, there will be some use cases where you will use&#xA;the AppSync console, a Lambda function, or other out of band processes&#xA;to write data (such as batch actions or data migrations) and you might&#xA;send GraphQL operations without the DataStore client.</p>&#xA;<p>In these cases it’s important that the selection set of your GraphQL&#xA;mutation includes all the required fields of the model, including:&#xA;_lastChangedAt, _version, and _deleted so that the DataStore clients can react to these updates. You will also need to send the current&#xA;object version in the mutation input argument as _version so that the&#xA;service can act accordingly. If you do not send this information the&#xA;clients will still eventually catch up during the global sync process,&#xA;but you will not see realtime updates to the client DataStore&#xA;repositories.</p>&#xA;</blockquote>&#xA;<p><strong>An example mutation:</strong></p>&#xA;<pre><code>mutation UpdatePost {&#xA;  updatePost(input: {&#xA;    id: &quot;12345&quot;&#xA;    title: &quot;updated title 19:40&quot;&#xA;    status: ACTIVE&#xA;    rating: 5&#xA;    _version: 7&#xA;  }) {&#xA;    id&#xA;    title&#xA;    status&#xA;    rating&#xA;    _lastChangedAt&#xA;    _version&#xA;    _deleted&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6499075,,6499075,2021-03-26 12:34:30,2021-03-26 12:34:30,"",,0,0,0,2021-03-26 11:58:30
66822421,1,,,1,96,"<p>The schemas emitted by Hasura <a href=""https://hasura.io/docs/latest/graphql/core/databases/postgres/queries/index.html"" rel=""nofollow noreferrer"">group queries under a <code>query_root</code> type</a>. But <a href=""https://github.com/dotansimha/graphql-code-generator/issues/5758"" rel=""nofollow noreferrer""><code>graphql-codegen</code> expects them grouped under a type named <code>Query</code></a>. How do people bridge that gap?</p>&#xA;",1056174,,,,2021-03-26 18:25:11,How do I use graphql-code-generator with Hasura when they expect differently-named query roots?,<graphql><hasura><graphql-codegen>,0,0,0,2021-03-26 18:25:11
66837156,2,,65061146,9,,"<p>For me it was how I imported <code>DataStore</code>. I copied what the documentation did and imported it <em>incorrectly</em> like this:</p>&#xA;<pre><code>import { DataStore } from  'aws-amplify';&#xA;</code></pre>&#xA;<p>The error went away after I changed the import to this:</p>&#xA;<pre><code>import { DataStore } from  '@aws-amplify/datastore';&#xA;</code></pre>&#xA;<p>Documentation: <a href=""https://docs.amplify.aws/lib/datastore/examples/q/platform/js"" rel=""noreferrer"">https://docs.amplify.aws/lib/datastore/examples/q/platform/js</a></p>&#xA;",1808048,,,,2021-03-27 23:41:51,"",,0,1,0,2021-03-27 23:41:51
66847697,1,66853067,,2,383,"<p>i'm having some problems using lambda enviroment.</p>&#xA;<p>Looking to set a function that make a mutation to Hasura so I can relate Auth users of Cognito with my app information.</p>&#xA;<p>I set the following function Post Authentication in Lamba but it does not work.</p>&#xA;<pre><code>function Add(event, context, callback) {&#xA;  const userId = event.user_id;&#xA;  const hasuraAdminSecret = &quot;xxx&quot;;&#xA;  const url = &quot;xxx&quot;;&#xA;  const upsertUserQuery = `&#xA;    mutation($userId: String!){&#xA;      insert_RegistroAnimal_users(objects: [{ id: $userId }], on_conflict: { constraint: users_pkey, update_columns: [] }) {&#xA;        affected_rows&#xA;      }&#xA;    }`&#xA;  const graphqlReq = { &quot;query&quot;: upsertUserQuery, &quot;variables&quot;: { &quot;userId&quot;: userId } }&#xA;&#xA;  request.post({&#xA;      headers: {'content-type' : 'application/json', 'x-hasura-admin-secret': hasuraAdminSecret},&#xA;      url:   url,&#xA;      body:  JSON.stringify(graphqlReq)&#xA;  }, function(error, response, body){&#xA;       console.log(body);&#xA;       callback(null, user, context);&#xA;  });&#xA;}&#xA;</code></pre>&#xA;<p>Followed this tutorial : <a href=""https://hasura.io/docs/latest/graphql/core/guides/integrations/aws-cognito.html#introduction"" rel=""nofollow noreferrer"">https://hasura.io/docs/latest/graphql/core/guides/integrations/aws-cognito.html#introduction</a></p>&#xA;<p>What do you think is wrong with the code?</p>&#xA;",15502554,,,,2021-03-29 11:08:41,Error using AWS Cognito for authentication with Hasura,<javascript><graphql><amazon-cognito><hasura>,1,0,0,2021-03-29 01:22:20
66853067,2,,66847697,1,,"<p>I don't think anything is wrong with the code, but to make it work with Cognito you'd need to provide your Hasura setup with a JWT claims function as shown in that same guide, <a href=""https://hasura.io/docs/latest/graphql/core/guides/integrations/aws-cognito.html#create-a-lambda-function-to-add-claims-to-the-jwt"" rel=""nofollow noreferrer"">https://hasura.io/docs/latest/graphql/core/guides/integrations/aws-cognito.html#create-a-lambda-function-to-add-claims-to-the-jwt</a>. If you'd like to do it as the guide suggests, you need to create a lambda function like so;</p>&#xA;<pre><code>exports.handler = (event, context, callback) =&gt; {&#xA;    event.response = {&#xA;        &quot;claimsOverrideDetails&quot;: {&#xA;            &quot;claimsToAddOrOverride&quot;: {&#xA;                &quot;https://hasura.io/jwt/claims&quot;: JSON.stringify({&#xA;                    &quot;x-hasura-user-id&quot;: event.request.userAttributes.sub,&#xA;                    &quot;x-hasura-default-role&quot;: &quot;user&quot;,&#xA;                    // do some custom logic to decide allowed roles&#xA;                    &quot;x-hasura-allowed-roles&quot;: [&quot;user&quot;],&#xA;                })&#xA;            }&#xA;        }&#xA;    }&#xA;    callback(null, event)&#xA;}&#xA;</code></pre>&#xA;<p>You then need to pick this function as the <code>PreTokenGeneration</code> trigger from your user pool settings. Then <a href=""https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html"" rel=""nofollow noreferrer"">AWS Cognito will trigger</a> this function before token generation, allowing you to add Hasura required claims to your token.</p>&#xA;<p>The next step is to tell Hasura where to lookup for the JWT claims by providing <code>HASURA_GRAPHQL_JWT_SECRET</code> during the setup, which is essentially an URL pointing to your Cognito setup, generated using the pool id.</p>&#xA;<p>Finally, you can obtain the <code>idToken</code> from your user session after a successful login, and pass that token as an Authentication header for your Hasura requests. Described <a href=""https://hasura.io/docs/latest/graphql/core/guides/integrations/aws-cognito.html#add-access-control-rules-via-the-hasura-console"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>All of these steps were actually described in the guide you linked, but may not be as clear. I believe the reason your current setup does not work is that your Hasura setup is missing the <code>HASURA_GRAPHQL_ADMIN_SECRET</code>, which needs to be the same as the <code>x-hasura-admin-secret</code> you're using in your requests.</p>&#xA;<p>Mind you, if you use <code>x-hasura-admin-secret</code> in your app and expose it to your users which gives them admin access, that creates a potential security issue and anyone with that secret can wipe up your data. <code>x-hasura-admin-secret</code> should be reserved for your admin tasks and not used in an app where AWS Cognito authentication is planned to be used.</p>&#xA;",1505341,,1505341,2021-03-29 11:08:41,2021-03-29 11:08:41,"",,0,1,0,2021-03-29 11:03:26
66864495,2,,61523396,0,,"<p>I was getting similar errors. I used the Blog/Post schema template and customized it. After running amplify push and retyping &quot;@model&quot;, the errors went away.</p>&#xA;",15193789,,,,2021-03-30 03:43:17,"",,0,0,0,2021-03-30 03:43:17
66865567,2,,66860066,1,,"<p>Currently you can use <a href=""https://www.prisma.io/docs/concepts/components/prisma-client/select-fields#select-specific-fields"" rel=""nofollow noreferrer"">select</a> to fetch the fields that you require and omit the ones that need to be private.</p>&#xA;<p>There's a request <a href=""https://github.com/prisma/prisma/issues/3636"" rel=""nofollow noreferrer"">here</a> for the same that will allow to exclude specific fields.</p>&#xA;",8874351,,,,2021-03-30 06:05:57,"",,0,0,0,2021-03-30 06:05:57
66881994,1,,,1,317,"<p>I am trying to fetch records from dynamodb using graphql (AWS amplify reacjs setup). I have created a component CTCards and using this in App.js</p>&#xA;<p>The problem that we are facing is function <strong>fetchTodos</strong> is running in infinite loop though in Database there is only two records and I am getting exactly 2 records but this function is running in infinite loop</p>&#xA;<p>When I comment the fetching code then the program runs as expected</p>&#xA;<pre><code>//== CTCards ( component which is giving issue)  ===&#xA;&#xA;function CTCards(props) {&#xA;    const [todo, setTodos] = useState([]);&#xA;    &#xA;    useEffect(() =&gt; {&#xA;        fetchTodos();&#xA;    }, []);&#xA;    &#xA;    const fetchTodos = async () =&gt; {&#xA;        try {&#xA;// == this-block ===&#xA;            const todoData = await API.graphql(graphqlOperation(listTodos));&#xA;            const todoList = todoData.data.listTodos.items;&#xA;            console.log('To Do List', todoList);&#xA;            setTodos(todoList);&#xA;// == /this-block ===&#xA;        } catch (error) {&#xA;            console.log('error on fetching to do list', error);&#xA;        }&#xA;    };&#xA;&#xA;    return (&#xA;        &lt;div style={{color: &quot;red&quot;}}&gt;&#xA;       &#xA;            {todo.map((todo, index) =&gt; {&#xA;                &lt;div style={{color: &quot;red&quot;}}&gt;&#xA;                 &lt;div&gt;{todo.name}&lt;/div&gt;&#xA;                 &lt;div&gt;{todo.description}&lt;/div&gt;&#xA;            &lt;/div&gt;            &#xA;            })} &#xA;        &lt;/div&gt;&#xA;    )&#xA;}&#xA;&#xA;//== App.js code ===&#xA;&#xA;function App() {&#xA;    return (&#xA;        &lt;div&gt;&#xA;            &lt;CTCards/&gt;          &#xA;        &lt;/div&gt;&#xA;    );&#xA;}&#xA;</code></pre>&#xA;",15075669,,6124657,2021-03-31 08:58:06,2021-03-31 09:42:29,amplify dynamodb graphql fetch function is running infinite in loop,<reactjs><amazon-web-services><graphql><amazon-dynamodb><amplify>,3,1,0,2021-03-31 05:10:33
66884271,1,,,1,746,"<p>I am using GraphQl API in an Amplify project and having some difficulty understanding how to model a many to many relationship between users.  I get how to add a join table between two other tables.  But now sure how to do it for the same table.<br />&#xA;This is what I have but I'm almost certain it's not correct.  I want each user to be able to add other Users as 'relations':</p>&#xA;<pre><code>type User&#xA;    @model&#xA;    @auth(rules: [{ allow: owner, operations: [create, delete, update] }]) {&#xA;    id: ID!&#xA;    cognitoId: ID!&#xA;    username: String!&#xA;    registered: Boolean&#xA;    contacts: [UserContacts] @connection(keyName: &quot;byContact&quot;, fields: [&quot;id&quot;])&#xA;    contactOfOtherUsers: [UserContacts] @connection(keyName: &quot;byContact2&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type UserContacts&#xA;    @model&#xA;    @auth(rules: [{ allow: owner, operations: [create, delete, update] }])&#xA;    @key(name: &quot;byContact&quot;, fields: [&quot;userID&quot;, &quot;contactID&quot;])&#xA;    @key(name: &quot;byContact2&quot;, fields: [&quot;contactID&quot;, &quot;userID&quot;]) {&#xA;    id: ID!&#xA;    userID: ID!&#xA;    contactID: ID!&#xA;    user: User! @connection(fields: [&quot;userID&quot;])&#xA;    contact: User! @connection(fields: [&quot;contactID&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>I'm pretty new to Amplify and not really sure what approach to take.</p>&#xA;<p>What seems very wrong to me is the contactOfOtherUsers field in User.  It is redundant but not sure how else to link the join table.</p>&#xA;",4718413,,,,2022-10-28 22:00:21,How to model Many to Many relationship for Amplify GraphQL Schema on Same Table,<graphql><many-to-many><aws-amplify>,1,3,0,2021-03-31 08:34:36
66889737,1,66903549,,1,446,"<p>I have defined a model in my AWS Amplify like this:</p>&#xA;<pre><code>type Report &#xA;@model &#xA;@searchable&#xA;{&#xA;  id: ID!&#xA;  title: String!&#xA;  location: String!&#xA;} &#xA;</code></pre>&#xA;<p>While I can create items and also list them, however, I cannot get the items using search query:</p>&#xA;<p><a href=""https://i.stack.imgur.com/vwsAO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vwsAO.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Look at above figure, <code>searchReports</code> returns nothing, while I have many reports with title <code>T</code> as it can be seen in the result of <code>listReports</code>.</p>&#xA;",2094548,,,,2021-04-01 11:17:15,Why elastic search does not work in AWS Appsync,<graphql><aws-amplify><aws-appsync>,1,0,0,2021-03-31 14:24:57
66903549,2,,66889737,0,,<p>Elastic search only works on new data. So I needed to truncate the table and refill it again.</p>&#xA;,2094548,,,,2021-04-01 11:17:15,"",,0,4,0,2021-04-01 11:17:15
66907370,1,,,1,21,"<p>For some context i have the following code:</p>&#xA;<pre><code> type Product&#xA;  @model&#xA;  @key(name: &quot;byProductCategory&quot;, fields: [&quot;productCategoryID&quot;, &quot;name&quot;])&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: groups, groups: [&quot;Driver&quot;, &quot;Restaurant&quot;], operations: [read] }&#xA;      {&#xA;        allow: groups&#xA;        groups: [&quot;SuperAdmin&quot;]&#xA;        operations: [read, create, update, delete]&#xA;      }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  productCategoryID: ID!&#xA;  name: String!&#xA;  brand: String!&#xA;  mainImage: Image @connection&#xA;  images: [Image] @connection(keyName: &quot;byProduct&quot;, fields: [&quot;id&quot;])&#xA;  description: String&#xA;  category: ProductCategory @connection(fields: [&quot;productCategoryID&quot;])&#xA;  alternative: [Product]&#xA;  byproduct: [Byproduct]&#xA;}&#xA;</code></pre>&#xA;<p>I want to show a list of Alternative Products of product type but doesn't let me. I try to make a <code>@connection</code> but in some cases GrapQL compiler doesn't let me in others I can see it but can't insert a new alternative via Mutation.&#xA;Also tried to follow the next example. It was possible to Query but no mutate it&#xA;<a href=""https://www.apollographql.com/blog/explaining-graphql-connections-c48b7c3d6976/"" rel=""nofollow noreferrer"">https://www.apollographql.com/blog/explaining-graphql-connections-c48b7c3d6976/</a></p>&#xA;",13206051,,,,2021-04-01 15:27:23,Is possible to make an internal connection with Appsync GrapQL?,<graphql><aws-amplify><aws-appsync><amazon-dynamodb>,0,0,0,2021-04-01 15:27:23
66932433,2,,66931228,1,,"<p>You can use this package <strong>github.com/machinebox/graphql</strong>. Just provide your query in string.</p>&#xA;<pre><code>// create a client (safe to share across requests)&#xA;client := graphql.NewClient(&quot;https://&lt;GRAPHQL_API_HERE&gt;&quot;)&#xA;&#xA;// make a request&#xA;req := graphql.NewRequest(`&#xA;    query ($key: String!) {&#xA;        items (id:$key) {&#xA;            field1&#xA;            field2&#xA;            field3&#xA;        }&#xA;    }&#xA;`)&#xA;&#xA;// set any variables&#xA;req.Var(&quot;key&quot;, &quot;value&quot;)&#xA;&#xA;// run it and capture the response&#xA;var respData ResponseStruct&#xA;if err := client.Run(ctx, req, &amp;respData); err != nil {&#xA;    log.Fatal(err)&#xA;}&#xA;</code></pre>&#xA;<p>[Note] Code borrowed from documentation.</p>&#xA;<p>For your case request must be</p>&#xA;<pre><code>req := graphql.NewRequest(fmt.Sprintf(`&#xA;mutation addAuthor($author: [%s!]!) {&#xA;  addAuthor(input: $author) {&#xA;    author {&#xA;      id&#xA;      name&#xA;     }&#xA;    }&#xA;   }&#xA; `,stringAuthorInput))&#xA;</code></pre>&#xA;",6944080,,6944080,2021-04-03 16:09:34,2021-04-03 16:09:34,"",,0,3,0,2021-04-03 14:46:51
66933388,2,,63513047,0,,"<p>have you tried using the <a href=""https://docs.amplify.aws/cli/graphql-transformer/auth#field-level-authorization"" rel=""nofollow noreferrer"">Field Level Authorization</a>?</p>&#xA;<pre><code>type User @model {&#xA;  id: ID!&#xA;  username: String&#xA;  ssn: String @auth(rules: [{ allow: owner, ownerField: &quot;username&quot; }])&#xA;}&#xA;</code></pre>&#xA;<p>Update: My mistake, in your question it does say you tried this out.</p>&#xA;",834399,,,,2021-04-03 16:23:17,"",,0,0,0,2021-04-03 16:23:17
66942148,2,,65395564,13,,"<p>When using ConflictResolution you also need to include the _version field.</p>&#xA;<pre><code>{&#xA;    &quot;query&quot;: &quot;mutation DeleteNote($input: DeleteNoteInput!, $condition: ModelNoteConditionInput) {↵  deleteNote(input: $input, condition: $condition) {↵    id↵    name↵    description↵    image↵    createdAt↵    updatedAt↵    NoteType {↵      id↵      name↵      createdAt↵      updatedAt↵    }↵  }↵}↵&quot;,&#xA;    &quot;variables&quot;: {&quot;input&quot;: {&quot;id&quot;: &quot;0c5e3ced-ffa3-4de8-9010-40b67d5bab68&quot;, &quot;_version&quot;: &quot;_version value of your note object&quot;}}&#xA;}&#xA;</code></pre>&#xA;<p>I also noticed that after deleting elements that are using ConflictResolution, they are not immediately deleted from the database. Instead, two flags are being added: <code>_deleted</code> is set to true and <code>_ttl</code> is set to expire the object in 30 days.</p>&#xA;",1607494,,,,2021-04-04 14:15:35,"",,0,1,0,2021-04-04 14:15:35
66963405,2,,66803775,0,,"<p>What you have to know is to tell hasura the name of your query with full syntax.&#xA;like this...</p>&#xA;<p>Operation name is =&gt; <code>get_user_by_pk</code></p>&#xA;<p>Operation is</p>&#xA;<pre><code>query get_user_by_pk($id: uuid!) {&#xA;  user_by_pk(id: $id) {&#xA;    id&#xA;    username&#xA;    email&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>the main part is you have to use the exact operation in your code having the operation name.</p>&#xA;<p>now, in your project, you will send the variable (in this case id[uuid]) to the query handler and send this to your hasura server.</p>&#xA;<p>ask me if it is not clear for you.</p>&#xA;",8273210,,,,2021-04-06 06:00:56,"",,0,0,0,2021-04-06 06:00:56
66965093,1,67055584,,1,1151,"<p>I'm running an Angular 11 application that is integrated with AWS Amplify and Appsync using GraphQL and dynamoDB for the backend.</p>&#xA;<p>This is my Graphql schema:-</p>&#xA;<pre><code>type School&#xA;  @model&#xA;  @auth(&#xA;    rules: [{ allow: owner, ownerField: &quot;admins&quot;, operations: [update, read] }]&#xA;  ) {&#xA;  id: ID!&#xA;  name: String!&#xA;  admins: [Member]&#xA;  classes: [Class] @connection(name: &quot;SchoolClasses&quot;)&#xA;  members: [Member] @connection(name: &quot;SchoolMembers&quot;)&#xA;}&#xA;&#xA;type Class&#xA;  @model&#xA;  @auth(&#xA;    rules: [{ allow: owner, ownerField: &quot;admins&quot;, operations: [update, read] }]&#xA;  ) {&#xA;  id: ID!&#xA;  name: String!&#xA;  school: School @connection(name: &quot;SchoolClasses&quot;)&#xA;  admins: [Member]&#xA;  members: [Member] @connection(name: &quot;ClassMembers&quot;)&#xA;}&#xA;&#xA;type Member @model @auth(rules: [{ allow: owner }]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  school: School @connection(name: &quot;SchoolMembers&quot;)&#xA;  class: Class @connection(name: &quot;ClassMembers&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>This is my client definition:-</p>&#xA;<pre><code>const client = new AWSAppSyncClient({&#xA;  url: awsconfig.aws_appsync_graphqlEndpoint,&#xA;  region: awsconfig.aws_appsync_region,&#xA;  auth: {&#xA;    type: awsconfig.aws_appsync_authenticationType,&#xA;    jwtToken: async () =&gt;&#xA;      (await Auth.currentSession()).getAccessToken().getJwtToken(),&#xA;  },&#xA;  complexObjectsCredentials: () =&gt; Auth.currentCredentials(),&#xA;  cacheOptions: {&#xA;    dataIdFromObject: (obj: any) =&gt; `${obj.__typename}:${obj.myKey}`,&#xA;  },&#xA;});&#xA;</code></pre>&#xA;<p>This is my query method:-</p>&#xA;<pre><code>    client&#xA;      .query({&#xA;        query: ListSchools,&#xA;      })&#xA;      .then((data: any) =&gt; {&#xA;        console.log('data from listSchools ', data);&#xA;        console.log(data.data.listSchools.items);&#xA;      });&#xA;  };&#xA;</code></pre>&#xA;<p>This is my query definition:-</p>&#xA;<pre><code>import gql from 'graphql-tag';&#xA;&#xA;export default gql`&#xA;  query ListSchools(&#xA;    $filter: ModelSchoolFilterInput&#xA;    $limit: Int&#xA;    $nextToken: String&#xA;  ) {&#xA;    listSchools(filter: $filter, limit: $limit, nextToken: $nextToken) {&#xA;      items {&#xA;        id&#xA;        name&#xA;        admins {&#xA;          id&#xA;          name&#xA;          createdAt&#xA;          updatedAt&#xA;          owner&#xA;        }&#xA;        classes {&#xA;          nextToken&#xA;        }&#xA;        members {&#xA;          nextToken&#xA;        }&#xA;        createdAt&#xA;        updatedAt&#xA;      }&#xA;      nextToken&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>The output for data in the console looks like this:-</p>&#xA;<pre><code>{&#xA;   &quot;data&quot;:{&#xA;      &quot;listSchools&quot;:{&#xA;         &quot;items&quot;:[],&#xA;         &quot;nextToken&quot;:null,&#xA;         &quot;__typename&quot;:&quot;ModelSchoolConnection&quot;&#xA;      }&#xA;   },&#xA;   &quot;loading&quot;:false,&#xA;   &quot;networkStatus&quot;:7,&#xA;   &quot;stale&quot;:false&#xA;}&#xA;</code></pre>&#xA;<p>As you can see, the items is an empty array. But currently I have 3 items in my dynamoDB table:-</p>&#xA;<p><a href=""https://i.stack.imgur.com/EwMIp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EwMIp.png"" alt=""enter image description here"" /></a></p>&#xA;<p>What am I doing wrong?</p>&#xA;<p>I have checked the regions to see if it is querying a different region, but it is checking the correct region, so I should be seeing the results. Also, wouldn't it throw an error if we're querying the wrong table?</p>&#xA;",7981162,,7981162,2021-04-07 10:26:04,2021-04-12 09:04:59,AWS Appsync Graphql query to get list of items returns empty array even though the dynamodb table has items in it,<amazon-web-services><graphql><amazon-dynamodb><amplify>,1,0,0,2021-04-06 08:23:50
66968115,2,,65102870,1,,"<p>In graphql you can send the needed variable to query handler and build your query using apollo, just like this...</p>&#xA;<pre><code>query get_users_by_role ($role: String!){&#xA;  user(where: {role: {_eq: $role}}) {&#xA;    id&#xA;    username&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>In the above example, I build a query for getting a list of users with the role name is matched with <code>role</code> variable that i will sent.</p>&#xA;<p>I send the query using applo as follows,</p>&#xA;<pre><code>this.$apollo.query({&#xA;  query: gql`&#xA;    query get_users_by_role($role: String!) {&#xA;      user(where: { role: { _eq: $role } }) {&#xA;        id&#xA;        username&#xA;      }&#xA;    }&#xA;  `,&#xA;  variables: {&#xA;    role: &quot;Admin&quot;,&#xA;  },&#xA;});&#xA;</code></pre>&#xA;<p>Ask me if you need further explanation.</p>&#xA;",8273210,,,,2021-04-06 11:50:57,"",,0,0,0,2021-04-06 11:50:57
66983097,2,,44982279,6,,"<p><strong>⚠️Not recommended...</strong></p>&#xA;<p>... but if you want a quick fix (maybe you don't have the time to implement a custom scalar), you can use the <code>Float</code> type instead of <code>Int</code>.</p>&#xA;",8583669,,,,2021-04-07 09:21:30,"",,0,4,0,2021-04-07 09:21:30
67020448,2,,67020265,0,,<ol>&#xA;<li><p>Did you import the type from <code>// in __generated__/Business_business.graphql</code> ?</p>&#xA;</li>&#xA;<li><p>Is there a typo ??  what is $key appended to the typename ?</p>&#xA;<pre><code>type Props = {&#xA;  fragmentRef: Business_business$key&#xA;}&#xA;</code></pre>&#xA;</li>&#xA;</ol>&#xA;,12144149,,,,2021-04-09 11:39:52,"",,0,1,0,2021-04-09 11:39:52
67039064,1,,,2,1306,"<p>I am developing a React project &amp; using AWS Amplify as a tool for serverless backend, in which I have a DynamoDB as my database in AWS Cloud.</p>&#xA;<p>My React app needs to detect realtime data update in DynamoDB. I am using GraphQL API from Amplify.</p>&#xA;<p>The GraphQL API generated by Amplify provides a <code>subscriptions</code> API for subscribing for data changes in real-time. I think that's exactly what I need, so I am using it:</p>&#xA;<pre><code>import React, {useEffect, useState, useRef} from 'react';&#xA;import Amplify, { API, graphqlOperation } from 'aws-amplify';&#xA;import { onCreateData } from './graphql/subscriptions';&#xA;&#xA;// subscribe to listen to new data creation in DynamoDB&#xA;const subscription = API.graphql(&#xA;    graphqlOperation(onCreateData)&#xA;).subscribe({&#xA;    next: (newData) =&gt; {&#xA;      // New data is received here outside 'App' functional component,&#xA;      // how can I render the data then?&#xA;      console.log(`new data: ${JSON.stringify(newData)}`);&#xA;      &#xA;    }&#xA;});&#xA;&#xA;// I can't put the above subscription code inside App component, I don't know why but it just doesn't work unless I move it outside the App functional component.&#xA;&#xA;function App() {&#xA;  const [dataArray, setDataArray] = useState([]);&#xA;   ...&#xA;&#xA;  useEffect(() =&gt; {&#xA;    fetchDataArray();&#xA;    showDataArray();&#xA;    return () =&gt; {&#xA;      //cleanup&#xA;    }&#xA;  }, [dataArra])&#xA;&#xA;  return (&lt;div&gt;&#xA;    &lt;canvas ref={canvasRef}/&gt;&#xA;  &lt;/div&gt;)&#xA;}&#xA;&#xA;export default App;&#xA;&#xA;</code></pre>&#xA;<p>Problem is the <code>subscription</code> for new data insertion in DynamoDB only work if I put it outside the <code>function App(){...}</code> as you can see above. So, when <code>newData</code> is received in the subscription callback <code>next: (newData)</code>, how can I show the new data in <code>App</code> component?</p>&#xA;<p>You can see inside my <code>App</code> component I have state variable <code>dataArray</code>, the ideal solution is to update this <code>dataArray</code> state with <code>newData</code> but I think it is impossible now. So, in general I wonder how can I show the new data in my <code>App</code> component now?</p>&#xA;<p>P.S. <a href=""https://docs.amplify.aws/lib/graphqlapi/getting-started/q/platform/js#enable-queries-mutations-and-subscriptions"" rel=""nofollow noreferrer"">Amplify GraphQL API doc sample code</a> (if you see the &quot;subscription&quot; section) also shows that the subscription code is in the same level as imports.</p>&#xA;",959734,,959734,2021-04-10 20:51:43,2021-05-03 20:28:13,"AWS Amplify in React, how can I render the new data from the subscribed listener",<reactjs><amazon-web-services><graphql><amazon-dynamodb><aws-amplify>,1,3,0,2021-04-10 20:43:59
67041911,1,,,0,147,"<p>I'm new to pg and dbs in general. I found a blog db boilerplate and I'm trying to add some computed columns to return Booleans for whether the currentPerson (the authenticated user) is the author of a post. Basically, a phantom column in the posts table that has a true or false for each post as to whether the currentPerson authored it.</p>&#xA;<p>This function returns the currentPerson:</p>&#xA;<pre><code>SELECT *&#xA;FROM myschema.person&#xA;WHERE id = nullif(current_setting('jwt.claims.person_id', true), '')::uuid&#xA;</code></pre>&#xA;<p>So, I would like to do something like below, but this is not correct. This appears as a mutation in graphiql (I'm using postgraphile to generate my schema).</p>&#xA;<p>Any tips on how to create an <code>isMyPost</code> boolean computed column in a posts table would be awesome.</p>&#xA;<pre><code>CREATE OR REPLACE FUNCTION myschema.is_my_post(&#xA;    )&#xA;    RETURNS BOOLEAN AS &#xA;$func$&#xA;BEGIN&#xA;  SELECT *&#xA;  FROM myschema.post&#xA;  WHERE author_id = nullif(current_setting('jwt.claims.person_id', true), '')::uuid;&#xA;   IF FOUND THEN&#xA;      RETURN TRUE;&#xA;   ELSE&#xA;      RETURN FALSE;&#xA;   END IF;&#xA;END&#xA;$func$ LANGUAGE plpgsql;&#xA;&#xA;</code></pre>&#xA;",1704772,,1048572,2021-04-14 00:40:49,2021-04-14 00:40:49,"PostgreSQL - computed column to return ""is my"" boolean",<postgresql><graphql><postgraphile>,1,2,0,2021-04-11 05:58:26
67055584,2,,66965093,1,,"<p>I figured it out. The issue was in the GraphQL Schema definition where I had set the @auth paramter to only allow a certain admin to access the list, that's why I was getting back an empty array. I removed the @auth parameter and it now gives back the proper list of items.</p>&#xA;",7981162,,,,2021-04-12 09:04:59,"",,0,3,0,2021-04-12 09:04:59
67066369,2,,67066316,0,,"<p>You can use the <a href=""https://docs.mongodb.com/manual/reference/operator/query/eq/#mongodb-query-op.-eq"" rel=""nofollow noreferrer"">$eq operator</a> like this</p>&#xA;<pre class=""lang-js prettyprint-override""><code>await User.deleteMany({ 'products.name': { $e: 'asdasdl' }});&#xA;</code></pre>&#xA;",5589405,,,,2021-04-12 22:17:32,"",,0,0,0,2021-04-12 22:17:32
67066741,1,67066750,,0,940,"<p>I'm new to PostgreSQL and trying to get this function to work. Why am I getting <code>invalid reference to FROM-clause entry for table &quot;post_reactions&quot;</code>?</p>&#xA;<pre><code>CREATE OR REPLACE FUNCTION myschema.post_current_person_has_reacted(&#xA;    post myschema.post)&#xA;    RETURNS boolean&#xA;    LANGUAGE 'plpgsql'&#xA;    COST 100&#xA;    STABLE PARALLEL UNSAFE&#xA;AS $BODY$&#xA;&#xA;DECLARE res BOOLEAN := NULL;&#xA;&#xA;BEGIN&#xA;&#xA;SELECT &#xA;myschema.post_reactions.post_id, &#xA;myschema.post_reactions.person_id, &#xA;myschema.post.id&#xA;&#xA;FROM myschema.post_reactions pr INNER JOIN&#xA;     myschema.post p&#xA;     ON p.id = pr.post_id AND&#xA;     pr.person_id = nullif(current_setting('jwt.claims.person_id', true), '')::uuid;&#xA;&#xA;   IF res IS NULL THEN&#xA;   RETURN FALSE;&#xA;   ELSE&#xA;   RETURN TRUE;&#xA;   END IF;&#xA;   &#xA;END&#xA;$BODY$;&#xA;</code></pre>&#xA;<p><strong>Edited</strong> this fixes the invariant but returns the same value for all rows. i.e. if I react to one post the computed column shows TRUE for all rows.</p>&#xA;<pre><code>CREATE OR REPLACE FUNCTION myschema.post_current_person_has_reacted(&#xA;    post myschema.post)&#xA;    RETURNS boolean&#xA;    LANGUAGE 'plpgsql'&#xA;    COST 100&#xA;    STABLE PARALLEL UNSAFE&#xA;AS $BODY$&#xA;&#xA;DECLARE &#xA;res BOOLEAN := NULL;&#xA;prpostid uuid;&#xA;prpersonid uuid;&#xA;postid uuid;&#xA;&#xA;BEGIN&#xA;SELECT &#xA;pr.post_id, &#xA;pr.person_id, &#xA;p.id&#xA;INTO prpostid, prpersonid, postid&#xA;FROM myschema.post_reactions pr INNER JOIN&#xA;     myschema.post p&#xA;     ON p.id = pr.post_id WHERE&#xA;     pr.person_id = nullif(current_setting('jwt.claims.person_id', true), '')::uuid;&#xA;&#xA;   IF prpostid = postid and prpersonid = nullif(current_setting('jwt.claims.person_id', true), '')::uuid THEN&#xA;   res = TRUE;&#xA;   ELSE&#xA;   res = FALSE;&#xA;   END IF;&#xA;   RETURN res;&#xA;   &#xA;END&#xA;$BODY$;&#xA;&#xA;</code></pre>&#xA;",1704772,,1704772,2021-04-13 01:34:58,2021-04-13 01:34:58,"PostgreSQL - Invalid reference to FROM-clause entry for table ""foo_bar""",<sql><postgresql><graphql>,1,0,0,2021-04-12 23:06:20
67071458,1,,,2,305,"<p>ok, so my tables are like this:</p>&#xA;<pre><code>user {&#xA;  id&#xA;  username&#xA;}&#xA;&#xA;job {&#xA;  id&#xA;  title&#xA;  posted_by&#xA;  applications&#xA;}&#xA;&#xA;application {&#xA;  id&#xA;  applicant_id&#xA;  details&#xA;  status&#xA;}&#xA;</code></pre>&#xA;<p>where:</p>&#xA;<ul>&#xA;<li>every user can post a job</li>&#xA;<li>a user can only edit his own posted jobs (posted_by)</li>&#xA;<li>a user can apply to any job that he didn't post</li>&#xA;<li>a user can delete his own applications</li>&#xA;<li>a job poster can accept (change status) of applications to his own posted jobs</li>&#xA;</ul>&#xA;<p>that means that a user should have different roles based on the application. if he posted the job then he's a &quot;job poster&quot; and if he posted the application then he's an &quot;applicant&quot;.</p>&#xA;<p>I thought that if I define these roles on the applications table, he'll be assigned dynamically, based on the application he's trying to update, but it didn't work. reading through the Hasura docs I see that it's based on <code>X-Hasura-Role</code> that is defined in the JWT token that is generated on login, but the user can have two roles.</p>&#xA;<p>I also tried to defined two rows for the role user, that each will define what he can update, but that's not working too.</p>&#xA;<p>I've read into <a href=""https://hasura.io/docs/latest/graphql/core/auth/authorization/index.html"" rel=""nofollow noreferrer"">https://hasura.io/docs/latest/graphql/core/auth/authorization/index.html</a> without any answer. I'll continue reading through <a href=""https://hasura.io/docs/latest/graphql/core/auth/authentication/jwt.html"" rel=""nofollow noreferrer"">https://hasura.io/docs/latest/graphql/core/auth/authentication/jwt.html</a></p>&#xA;<p>Thanks for reading,&#xA;Chaim</p>&#xA;",681629,,,,2021-04-14 12:29:22,handle different roles in hasura,<graphql><roles><hasura>,1,1,0,2021-04-13 08:40:31
67135617,1,,,1,193,"<p>I'm building an Angular 11 app with AWS Amplify as the backend which uses Appsync, dynamodb and a managed GraphQL API. I'm using the cognito user pools to authenticate. Authentication works neatly, but I am really confused about how to go about doing role-based authorization. I haven't done this using cognito before but I have a strategy in mind that should theoretically work out. I would like advice on if there is a better way to do this:-</p>&#xA;<p><strong>Requirements:-</strong></p>&#xA;<p>The app will be used by members of organisations that we are partnering with. Every member will be tied to an organisation. So organisations have their own table and so do members. Members of an organisation can only access content related to their organisation. So right after authentication, the client app has to get the id of the organisation the current user belongs to and also the role they play in that organisation to show/hide UI resources and filter data. Which UI resources they can access depends on the role they play in that organisation and of course the data they see there has to be restricted to what is related to their organisation.</p>&#xA;<p>This is a controlled beta release of our application, so Cognito user pools uses email and password to login. No other login option is provided for the sake of keeping things simple. User sign up is not possible. Only admins can add new users for now.</p>&#xA;<p><strong>How I plan to do this:-</strong></p>&#xA;<ol>&#xA;<li>Cognito API is integrated to the client and the admin will add the&#xA;new members from the client UI and the client will add them to the&#xA;cognito user pool via the Cognito API</li>&#xA;<li>While adding the new members, the admin will specify which&#xA;organisation they belong to and what role they play in it. But the&#xA;organisation and role are not details that are stored within the&#xA;user pools. There is a separate dynamodb table called &quot;members&quot;&#xA;which stores these information because these can change frequently&#xA;and need to be flexible.</li>&#xA;<li>Additions made to the Cognito user pool trigger a lambda function&#xA;that automatically syncronizes the &quot;members&quot; table in the amplify&#xA;backend in a dynamoDB table with the new additions to the user pool.</li>&#xA;<li>So when the admin adds a new user from the client UI, they&#xA;fill out a form with the email ID, name, organisation and role of&#xA;the new user, and the client UI will create that user with the name&#xA;and email ID in the user pool via the cognito API. Once that request&#xA;returns the user's ID (remember it will also trigger the creation of&#xA;a record in the member's table via the lambda funciton), we create a&#xA;mutation to the member's table adding the organisation and the role to the user's record in the member table.</li>&#xA;<li>Cognito user pool only has the email ID, name and user ID and&#xA;nothing else, all other information is stored in the members table,&#xA;which also has the ID, and name (for human reference) but not the&#xA;Email ID. We will not be holding the same information in&#xA;these two tables to avoid redundancy.</li>&#xA;<li>Updates to the email ID can be made by individual users via the&#xA;client app which will do it in the cognito user pool via the cognito&#xA;API. And no updates need to be made to the member table after email&#xA;update since the member table doesn't have the email ID. All other&#xA;member details can be made to the members table via the client app.</li>&#xA;<li>When the user logs in, as soon as the cognito UI authenticates the&#xA;user and sends over the email ID and user id, we fetch the member&#xA;details from the member table using the user ID and get details such as their name,&#xA;organisation they belong to and their role. And using the&#xA;information on their role, we can restrict UI resources using flags&#xA;in the UI Code. To achieve this, there will be a separate table that&#xA;will let the admin user modify access to the UI resources for each&#xA;role. So we'll need to fetch the role and the associated UI tags&#xA;right after authentication as well.</li>&#xA;<li>And as for how data is filtered as per the organisation, I am not&#xA;sure yet, but I would like to use an authorizer that will be&#xA;specified using a function in the graphql schema itself, that will&#xA;get the organisation ID with each request and use that to filter the&#xA;data before returning to the client.</li>&#xA;</ol>&#xA;<p>Not sure if this process is solid, but this is what I was able to fathom. Please let me know if I am doing this in a sensible way or if there are better ways to achieve what I am doing.</p>&#xA;",7981162,,,,2021-04-17 07:08:25,How to choose the best strategy to configure role-based authorization using AWS Cognito User pools?,<graphql><authorization><amazon-cognito><aws-amplify>,0,5,0,2021-04-17 07:08:25
67160615,1,,,0,76,<p>I Have a problem. I build 2 services graphql with 2 different tables but 2 tables have foreign keys and I want to query from service A( but must check the condition in service B). How I can query/mutation between 2 services. Thanks for your reply</p>&#xA;,11760614,,11760614,2021-04-30 17:43:43,2021-04-30 17:43:43,Query/Mutation in 2 service in @apollo/federation and @apollo/gateway,<mysql><graphql><apollo><prisma>,0,2,0,2021-04-19 10:52:18
67167668,1,67169810,,0,47,"<p>I have create an AppSynch API on AWS. I can easily query it using the console or some AWS specific package. However I would want to query it using a simple package such as e.g. urllib3. Its surprisingly hard to find anyone doing using a direct api call (everyone uses some kind of aws related packages or solutions that i cant seem to get to work). The query I want to do is:</p>&#xA;<pre><code>       mutation provision {&#xA;      provision(&#xA;        noteId:&#xA;        {ec2Instance: &quot;t2.micro&quot;,&#xA;          s3Bucket: &quot;dev&quot;})}&#xA;</code></pre>&#xA;<p>I have tried with different variations of:</p>&#xA;<pre><code>    query = &quot;&quot;&quot;&#xA;    mutation provision {&#xA;      provision(&#xA;        noteId:&#xA;        {ec2Instance: &quot;t2.micro&quot;,&#xA;          s3Bucket: &quot;dev&quot;})}&#xA;    &quot;&quot;&quot;&#xA;    headers = {&quot;x-api-key&quot;: api_key}&#xA;&#xA;http = urllib3.PoolManager()&#xA;&#xA;    data = json.dumps(&quot;query&quot;: query, &quot;variables&quot;: {}, &quot;operationName&quot;: &quot;somename&quot;)&#xA;    &#xA;    r = http.request('POST', url, headers=headers,&#xA;                     data=data.encode('utf8'))&#xA;</code></pre>&#xA;<p>But I somehow cannot get it to work, i keep on getting messages that the API cant understand the POST request</p>&#xA;",11529280,,,,2021-04-19 21:54:05,How to query from AppSynch using e.g. Urllib3,<amazon-web-services><graphql><aws-appsync>,1,0,0,2021-04-19 18:43:47
67169810,2,,67167668,0,,"<p>I found the solution:</p>&#xA;<pre><code>import requests&#xA;import json&#xA;&#xA;    APPSYNC_API_KEY = APPSYNC_API_KEY&#xA;    APPSYNC_API_ENDPOINT_URL = APPSYNC_API_ENDPOINT_URL&#xA;    &#xA;    headers = {&#xA;        'Content-Type': &quot;application/graphql&quot;,&#xA;        'x-api-key': APPSYNC_API_KEY,&#xA;        'cache-control': &quot;no-cache&quot;,&#xA;    }&#xA;    &#xA;    query = &quot;&quot;&quot;&#xA;    mutation provision {&#xA;      provision(&#xA;        inputParameters:&#xA;        {ec2Instance: &quot;t2.micro&quot;,&#xA;          s3Bucket: &quot;dev&quot;})}&#xA;    &quot;&quot;&quot;&#xA;    &#xA;    payload_obj = {&quot;query&quot;: query}&#xA;    payload = json.dumps(payload_obj)&#xA;    response = requests.request(&quot;POST&quot;, APPSYNC_API_ENDPOINT_URL, data=payload, headers=headers)&#xA;    print(response)&#xA;</code></pre>&#xA;",11529280,,,,2021-04-19 21:54:05,"",,0,0,0,2021-04-19 21:54:05
67182287,1,67190805,,0,428,"<p>Hello there :slight_smile:</p>&#xA;<p>I've a little problem related with the @auth.&#xA;(Amplify + React + AppSync)</p>&#xA;<h3>schema.graphql</h3>&#xA;<pre><code>type Ticket @model&#xA;@auth(rules: [&#xA;  {allow: owner, provider: userPools},&#xA;])&#xA;{&#xA;  id: ID!&#xA;  status: String!&#xA;  owner: String!&#xA;  description: String!&#xA;}&#xA;</code></pre>&#xA;<h3>build -&gt; schema.graphql</h3>&#xA;<pre><code>type Subscription {&#xA;  onCreateTicket(owner: String!): Ticket @aws_subscribe(mutations: [&quot;createTicket&quot;])&#xA;  onUpdateTicket(owner: String!): Ticket @aws_subscribe(mutations: [&quot;updateTicket&quot;])&#xA;  onDeleteTicket(owner: String!): Ticket @aws_subscribe(mutations: [&quot;deleteTicket&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>All operations (create update etc.) are working fine:</p>&#xA;<pre><code>const {data: {listTickets: {items: items, nextToken}}} = await API&#xA;                .graphql(graphqlOperation(listTickets, {&#xA;                    owner: user.username                    &#xA;                })) as GraphQLResult;&#xA;</code></pre>&#xA;<p><strong>except</strong> with subscriptions:</p>&#xA;<pre><code>const subClient = API&#xA;  .graphql(graphqlOperation(onUpdateTicket, {&#xA;                    owner: user.username&#xA;})) as Observable&lt;object&gt;;    &#xA;&#xA;subscription = subClient.subscribe({&#xA;                next: (data: any) =&gt; console.log('subscription data:', data),&#xA;                error: error =&gt; console.warn('subscription error: ', error)&#xA;            });&#xA;</code></pre>&#xA;<p>The subscription never trigger.&#xA;(No errors, no warnings)</p>&#xA;<p>Any help would be much appreciated!</p>&#xA;<p>Thanks</p>&#xA;",5816670,,5816670,2021-04-20 19:37:18,2021-04-21 07:03:17,Amplify/React AppSync graphql subscriptions @auth error,<graphql><amazon-cognito><aws-amplify><aws-appsync><react-typescript>,1,0,0,2021-04-20 15:53:26
67190805,2,,67182287,0,,"<p><a href=""https://i.stack.imgur.com/nVkDm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nVkDm.png"" alt=""Screenshot"" /></a></p>&#xA;<p>It was working!!!&#xA;I forgot to check &quot;owner&quot; not only in the input* but also in the fields below.</p>&#xA;<p>#aws-amplify-devs Could you please add this info to the documentation? :)&#xA;Could save many hours.</p>&#xA;",5816670,,,,2021-04-21 07:03:17,"",,0,0,0,2021-04-21 07:03:17
67201435,1,,,4,1522,"<p>I have 2 model with Many-to-Many Relationship. The 2 model is <code>Order</code> and <code>Product</code>. An <code>Order</code> will have many <code>Product</code> and <code>Product</code> will in many Order.</p>&#xA;<p><strong>My Goal is</strong> : Given a <code>orderID</code>, get a list of <code>productID</code> in the <code>Order</code></p>&#xA;<p>So I followed this <a href=""https://docs.amplify.aws/lib/datastore/relational/q/platform/js#many-to-many"" rel=""nofollow noreferrer"">Amplify guide</a> to group the into <code>OrderProducts</code> , <code>Order</code> and <code>Product</code> like this <code>schema.graphql</code></p>&#xA;<pre><code>type Order @model @key(name: &quot;byStore&quot;, fields: [&quot;storeID&quot;]) @auth(rules: [{allow: private, operations: [read, update, create, delete]}]) {&#xA;  id: ID!&#xA;  buyer_name: String&#xA;  order_total_amount: String&#xA;  products: [OrderProducts] @connection(keyName: &quot;byOrder&quot;, fields: [&quot;id&quot;])&#xA;  created_at: AWSTimestamp&#xA;}&#xA;&#xA;type OrderProducts @model @key(name: &quot;byOrder&quot;, fields:[&quot;orderID&quot;, &quot;productID&quot;]) @key(name: &quot;byProduct&quot;, fields:[&quot;productID&quot;, &quot;orderID&quot;]) @auth(rules: [{allow: private, operations: [read, update, create, delete]}]){&#xA;  id: ID!&#xA;  orderID: ID!&#xA;  productID: ID!&#xA;  order: Order! @connection(fields: [&quot;orderID&quot;])&#xA;  product: Product! @connection(fields: [&quot;productID&quot;])&#xA;}&#xA;&#xA;type Product @model @key(name: &quot;byStore&quot;, fields: [&quot;storeID&quot;]) @auth(rules: [{allow: owner, operations: [create, update, delete]}, {allow: public, provider: iam, operations: [read]}]){&#xA;  id: ID!&#xA;  product_name: String!&#xA;  product_price: String!&#xA;  created_at: AWSTimestamp&#xA;  orders: [OrderProducts] @connection(keyName: &quot;byProduct&quot;, fields:[&quot;id&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>But when I query the OrderProduct model like below, in order to get a List of Products by OrderID:</p>&#xA;<pre><code>import {  Product, OrderProducts } from '../models';&#xA;&#xA;export const GetAllProductIdByOrderId = async (order) =&gt; {&#xA;    return await DataStore.query(OrderProducts, op =&gt; op.orderID(&quot;eq&quot;, order.id)) // this is actual orderID&#xA;}&#xA;</code></pre>&#xA;<p>I get this error as a result:</p>&#xA;<pre><code>Error: Invalid field for model. field: orderID, model: OrderProducts&#xA;</code></pre>&#xA;<p>What I tried:</p>&#xA;<p><strong>Attempt 1</strong></p>&#xA;<p>I tried to add a <code>queryField</code> named <code>getOrderByOrderIDByProductID</code> in <code>OrderProducts</code> like this:</p>&#xA;<pre><code>type OrderProducts @model @key(name: &quot;byOrder&quot;, fields:[&quot;orderID&quot;, &quot;productID&quot;], queryField: &quot;getOrderByOrderIDByProductID&quot;) @key(name: &quot;byProduct&quot;, fields:[&quot;productID&quot;, &quot;orderID&quot;]) @auth(rules: [{allow: private, operations: [read, update, create, delete]}]){&#xA;  id: ID!&#xA;  orderID: ID!&#xA;  productID: ID!&#xA;  order: Order! @connection(fields: [&quot;orderID&quot;])&#xA;  product: Product! @connection(fields: [&quot;productID&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>Then <code>amplify push</code>, <code>amplify codegen models</code>, after all this, I cant import <code>getOrderByOrderIDByProductID</code> in my file and get this error</p>&#xA;<pre><code>warn Attempted import error: 'getOrderByOrderIDByProductID' is not exported from '../models' (imported as 'getOrderByOrderIDByProductID').&#xA;</code></pre>&#xA;<p>So I checked my <code>model/index.js</code> , it dont have <code>getOrderByOrderIDByProductID</code> exported. So dont know what else I can do.</p>&#xA;<p><strong>Attempt 2</strong></p>&#xA;<p>I go to AppSync console, I seen <code>getOrderByOrderIDByProductID</code> in my query section, then I tried to run this query:</p>&#xA;<pre><code>query MyQuery {&#xA;  getOrderByOrderIDByProductID(filter: {orderID: {eq: &quot;8649a9da-9ea6-4a30-afe7-6b336a8f853d&quot;}}) {&#xA;    items {&#xA;      order {&#xA;        buyer_name&#xA;        createdAt&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Then I get the following output:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;getOrderByOrderIDByProductID&quot;: null&#xA;  },&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;path&quot;: [&#xA;        &quot;getOrderByOrderIDByProductID&quot;&#xA;      ],&#xA;      &quot;data&quot;: null,&#xA;      &quot;errorType&quot;: &quot;MappingTemplate&quot;,&#xA;      &quot;errorInfo&quot;: null,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 2,&#xA;          &quot;column&quot;: 3,&#xA;          &quot;sourceName&quot;: null&#xA;        }&#xA;      ],&#xA;      &quot;message&quot;: &quot;Expression block '$[query]' requires an expression&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>I cant get any <code>productID</code> from the query and dont know what is the result mean.</p>&#xA;<p>I followed the suggestion mention in this <a href=""https://github.com/aws-amplify/amplify-flutter/issues/264#issuecomment-749838631"" rel=""nofollow noreferrer"">github issue</a> and reported in github  as well, if you wanna to read a more detail version can read it <a href=""https://github.com/aws-amplify/amplify-js/issues/8139"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p><strong>To summarize:</strong></p>&#xA;<p>Only 1 goal: Given an <code>orderID</code>, give me a list of <code>productID</code> inside the <code>Order</code>.</p>&#xA;<p>And tell me what I doing wrong, if possible, give me an example. Cause I followed <a href=""https://docs.amplify.aws/lib/datastore/relational/q/platform/js#many-to-many"" rel=""nofollow noreferrer"">this example in amplify docs</a> and still having this issue</p>&#xA;",4332049,,,,2021-05-02 08:02:49,Unable to query Many to Many relationship in Amplify Datastore,<javascript><graphql><aws-amplify><amplifyjs><aws-amplify-sdk-js>,0,2,0,2021-04-21 18:17:08
67212631,1,,,2,1127,"<p>I'm using the <a href=""https://pub.dev/packages/graphql_flutter"" rel=""nofollow noreferrer"">graphql_flutter</a> package and am having an issue with what seems to be caching. The client passes over cached data from one user to another, even when the <code>FetchPolicy</code> is set to <code>noCache</code>.</p>&#xA;<p>I’ve outlined below what my graphql client setup looks like and then the custom method I use for sending a query to the server (it fetches the items favorited by the user). I’ve looked through the <strong>Policies</strong> in the <a href=""https://github.com/zino-app/graphql-flutter/blob/master/packages/graphql/README.md#policies"" rel=""nofollow noreferrer"">official documentation</a> and believe my setup is correct. The issue (and the steps to reproduce) are the following:</p>&#xA;<ol>&#xA;<li>I sign in to my app with a test user account (using Amplify Cognito&#xA;for authentication) and add some items to the user's favorites list (with a&#xA;mutation request).</li>&#xA;<li>I then navigate to a ‘Favorites’ summary page,&#xA;where I call the below outlined <code>fetchFavoritesData</code> method to fetch&#xA;all the items that were favorited by the user. Works like a charm.</li>&#xA;<li>I then log out and create a completely new user account and log in with this new user (i.e. different&#xA;access token and all).</li>&#xA;<li>Before adding any items to the favorites list for this new user, if I check their ‘Favorites’ summary page, which calls the <code>fetchFavoritesData</code> method and should return null (because this user has yet to add any), the result actually returns the exact items that were favorited by the first user. Odd.</li>&#xA;</ol>&#xA;<p>Been playing around with the <strong>Policies</strong>, tried different fetch policies and so on, but the problem remains. Am I missing something (sorry — totally new to this package) or could this be a bug?</p>&#xA;<pre><code>GraphQLClient client = GraphQLClient(&#xA;  link: link,&#xA;  cache: GraphQLCache(), // declared cache here because I'm using the client for a few different requests, some where caching is preferred.&#xA;  );&#xA;}&#xA;&#xA;Future&lt;void&gt; fetchFavoritesData() async {&#xA;  final QueryOptions options = QueryOptions(&#xA;    document: gql(queryFavoritesData),&#xA;    // only return result from network&#xA;    fetchPolicy: FetchPolicy.noCache,&#xA;    // ignore cache data if any&#xA;    cacheRereadPolicy: CacheRereadPolicy.ignoreAll,&#xA;  );&#xA;&#xA;  final QueryResult result = await GraphQLConfiguration.client.query(options);&#xA;}&#xA;</code></pre>&#xA;<p><strong>26/8/2021 UPDATE:</strong></p>&#xA;<p>I've migrated over to Firebase for authentication and the error is no longer occurring. Not sure whether the authentication package was the causation or just a correlation but this is no longer an issue.</p>&#xA;",15025282,,15025282,2021-08-26 07:42:56,2021-08-26 07:42:56,Flutter: graphql_flutter FetchPolicy.noCache returns cached data from different user,<flutter><flutter-graphql>,0,0,0,2021-04-22 11:45:20
67221855,2,,67207448,1,,<p>Faced similar problem tried deleting that particular permission and adding again worked for me</p>&#xA;,15743449,,,,2021-04-22 23:03:44,"",,0,1,0,2021-04-22 23:03:44
67224463,2,,66853498,0,,"<p><code>Data not found</code> is returned when the server does not found any record.</p>&#xA;<p>basically ActiveRecord::RecordNotFound , so you are probably trying to find the wrong record. check the logs to see what's happening</p>&#xA;",1542304,,,,2021-04-23 05:32:08,"",,0,0,0,2021-04-23 05:32:08
67229139,1,67286687,,1,393,"<p>I have two tables, one has a foreign key to the other. For ease of use let's say I have a table named 'Boy' with a foreign key for iceCreamId to a table called 'IceCream'.</p>&#xA;<p>In hasura the only way I can see how to create an entry in IceCream when I insert into boy is through the query.</p>&#xA;<p>Is there a way I can trigger a default IceCream insert when a 'Boy' is inserted through the backend? Don't like the frontend being relied on to do this.</p>&#xA;",79891,,,,2021-05-17 12:19:03,Create entry in related table when inserting an item into Hasura?,<graphql><hasura>,2,0,0,2021-04-23 11:28:47
67230868,1,,,0,969,"<p><strong>Intro</strong></p>&#xA;<p>I'm following the intro tutorial found <a href=""https://docs.amplify.aws/start/q/integration/react-native"" rel=""nofollow noreferrer"">here</a> to create a Todo List app using Amplify + AppSync + GraphQL. All was working fine until I started testing out queries in the AppSync console on my GraphQL API.</p>&#xA;<p><strong>Problem</strong></p>&#xA;<p>When running my queries on the GraphQL API, the queries timeout randomly. Sometimes they work fine, and sometimes they take a long time and eventually throw an error. <strong>See the image below for a full example with the error.</strong></p>&#xA;<p><strong>Questions</strong></p>&#xA;<ul>&#xA;<li>Has anyone ever had this <em>DynamoDB:ApiCallTimeoutException</em> error message before using AWS AppSync with GraphQL?</li>&#xA;<li>Is there any way to avoid getting a timeout error?</li>&#xA;</ul>&#xA;<p>I'm new to everything AWS, so any help would be greatly appreciated! </p>&#xA;<p><a href=""https://i.stack.imgur.com/7mKr0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7mKr0.png"" alt=""enter image description here"" /></a></p>&#xA;",13110687,,,,2021-04-26 07:28:12,AWS AppSync - GraphQL query timeout when running from AppSync Console,<amazon-web-services><graphql><aws-amplify><aws-appsync>,1,0,0,2021-04-23 13:30:59
67244764,1,,,5,1446,"<p>I'm currently in the process of implementing a subscription mutation within AWS Lambda using AppSync. I want to use IAM and avoid using any other type of AUTH mechanism as I'm calling it within the AWS stack. Unfortunately, I'm receiving the following 403 error:</p>&#xA;<p>(Excerpt from an SQS' CloudWatch log)</p>&#xA;<pre class=""lang-json prettyprint-override""><code> {&#xA;    &quot;errorMessage&quot;: &quot;Response not successful: Received status code 403&quot;,&#xA;    &quot;name&quot;: &quot;ServerError&quot;,&#xA;    &quot;errorType&quot;: &quot;UnrecognizedClientException&quot;,&#xA;    &quot;message&quot;: &quot;The security token included in the request is invalid.&quot;&#xA; }&#xA;</code></pre>&#xA;<p>I've tried following these to no avail, but I don't know what I'm missing:</p>&#xA;<ul>&#xA;<li><a href=""https://medium.com/@jan.hesters/how-to-use-aws-appsync-in-lambda-functions-e593a9cef1d5"" rel=""noreferrer"">https://medium.com/@jan.hesters/how-to-use-aws-appsync-in-lambda-functions-e593a9cef1d5</a></li>&#xA;<li><a href=""https://www.edwardbeazer.com/using-appsync-client-from-lambda/"" rel=""noreferrer"">https://www.edwardbeazer.com/using-appsync-client-from-lambda/</a></li>&#xA;<li><a href=""https://adrianhall.github.io/cloud/2018/10/26/backend-graphql-trigger-appsync/"" rel=""noreferrer"">https://adrianhall.github.io/cloud/2018/10/26/backend-graphql-trigger-appsync/</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/45920986/how-to-send-graphql-mutation-from-one-server-to-another"">How to send GraphQL mutation from one server to another?</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/57611510/aws-appsync-http-datasources-aws-iam"">AWS Appsync + HTTP DataSources + AWS IAM</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/49966633/aws-appsync-invoke-mutate-from-lambda"">AWS Appsync Invoke mutate from Lambda?</a></li>&#xA;<li></li>&#xA;</ul>&#xA;<p>Here's the code that I'm currently calling it from:</p>&#xA;<pre><code>import AWS from &quot;aws-sdk&quot;;&#xA;import { AWSAppSyncClient } from &quot;aws-appsync&quot;;&#xA;import { Mutation, mutations } from &quot;./mutations/&quot;;&#xA;import &quot;cross-fetch/polyfill&quot;;&#xA;&#xA;/**&#xA; *&#xA; */&#xA;&#xA;AWS.config.update({&#xA;  region: Config.region,&#xA;});&#xA;&#xA;export class AppSyncClient {&#xA;  client: AWSAppSyncClient&lt;any&gt;;&#xA;  constructor() {&#xA;    if (!env.APPSYNC_ENDPOINT) {&#xA;      throw new Error(&quot;APPSYNC_ENDPOINT not defined&quot;);&#xA;    }&#xA;&#xA;    /**&#xA;     * We create the AppSyncClient with the AWS_IAM&#xA;     * authentication.&#xA;     */&#xA;    this.client = new AWSAppSyncClient({&#xA;      url: env.APPSYNC_ENDPOINT,&#xA;      region: Config.region,&#xA;      auth: {&#xA;        credentials: AWS.config.credentials!,&#xA;        type: &quot;AWS_IAM&quot;,&#xA;      },&#xA;      disableOffline: true,&#xA;    });&#xA;  }&#xA;&#xA;  /**&#xA;   * Sends a mutation on the AppSync Client&#xA;   * @param mutate The Mutation that will be sent with the variables.&#xA;   * @returns&#xA;   */&#xA;  sendMutation(mutate: Mutation) {&#xA;    const mutation = mutations[mutate.type] as any;&#xA;    const variables = mutate.variables;&#xA;    console.log(&quot;Sending the mutation&quot;);&#xA;    console.log(&quot;Variables is &quot;, JSON.stringify(variables));&#xA;    return this.client.mutate({&#xA;      mutation,&#xA;      fetchPolicy: &quot;network-only&quot;,&#xA;      variables,&#xA;    });&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Here's the current IAM from the Lambda SQS:</p>&#xA;<pre><code>{&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Action&quot;: [&#xA;                &quot;appsync:GraphQL&quot;&#xA;            ],&#xA;            &quot;Effect&quot;: &quot;Allow&quot;,&#xA;            &quot;Resource&quot;: [&#xA;                &quot;arn:aws:appsync:us-east-2:747936726382:apis/myapi&quot;&#xA;            ]&#xA;        }&#xA;    ],&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;&#xA;}&#xA;</code></pre>&#xA;<p>I know it is not an IAM problem from the lambda, because I've tried momentarily giving it full access, and I still got the 403 error.</p>&#xA;<p>I've also verified that AppSync has the IAM permission configured (as an additional provider).</p>&#xA;<p>Do you guys have any ideas? I'm impressed that this is a ghost topic with such little configuraiton references.</p>&#xA;",1057052,,,,2021-04-26 15:37:37,How can I use IAM to invoke AppSync wtihin AWS Lambda?,<amazon-web-services><aws-lambda><graphql><aws-appsync>,1,0,0,2021-04-24 16:00:16
67247534,1,67271009,,0,341,"<p>I am trying to learn how to use AppSync and its DynamoDB integrations.</p>&#xA;<p>I have successfully created an AppSync GraphQL API and linked a resolver to a getter on the primary key and thought I understood what is happening. However, I can not get a putItem resolver to work at all and am struggling to find a useful way to debug the logic.</p>&#xA;<p>There is a cdk repository here which will deploy the app. Lines 133-145 have a hand written schema which I thought should work however that receives the error</p>&#xA;<blockquote>&#xA;<p>One or more parameter values were invalid: Type mismatch for key food_name expected: S actual: NULL (Service: DynamoDb, Status Code: 400</p>&#xA;</blockquote>&#xA;<p>I also have attempted to wrap the expressions in quotes but receive errors.&#xA;Where should I go from here?</p>&#xA;<p>The example data creates a table with keys</p>&#xA;<ol>&#xA;<li>food_name</li>&#xA;<li>scientific_name</li>&#xA;<li>group</li>&#xA;<li>sub_group</li>&#xA;</ol>&#xA;<p>with food_name as the primary key.</p>&#xA;<p><a href=""https://github.com/AG-Labs/AppSyncTask"" rel=""nofollow noreferrer"">https://github.com/AG-Labs/AppSyncTask</a></p>&#xA;<p>Today I have attempted to reimplement the list resolver as</p>&#xA;<pre><code>{&#xA;    &quot;version&quot; : &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot; : &quot;Scan&quot;,&#xA;    ## Add 'limit' and 'nextToken' arguments to this field in your schema to implement pagination. **&#xA;    &quot;limit&quot;: $util.defaultIfNull(${ctx.args.limit}, 20),&#xA;    &quot;nextToken&quot;: $util.toJson($util.defaultIfNullOrBlank($ctx.args.nextToken, null))&#xA;}&#xA;</code></pre>&#xA;<p>with a response mapping of</p>&#xA;<pre><code>$util.toJson($ctx.result.items)&#xA;</code></pre>&#xA;<p>In cloud watch I can see a list of results under log type ResponseMapping (albeit not correctly filtered but i'll ignore that for now) but these do not get returned to the querier. That result is simply</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;listGenericFoods&quot;: {&#xA;      &quot;items&quot;: null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I don't understand where this is going wrong.</p>&#xA;",5466931,,5466931,2021-04-25 15:00:56,2021-04-26 17:15:08,AppSync Dynamodb Resolvers,<amazon-web-services><graphql><amazon-dynamodb><aws-appsync><aws-cdk>,1,2,0,2021-04-24 21:23:08
67258206,1,,,1,137,"<p>I defined schema.graphql within my Flutter app, but another app will use some generated tables (DynamoDB) of this model. I am using the code below, the same of AWS official tutorial (<a href=""https://docs.amplify.aws/lib/datastore/getting-started/q/platform/flutter#data-schema"" rel=""nofollow noreferrer"">https://docs.amplify.aws/lib/datastore/getting-started/q/platform/flutter#data-schema</a>).</p>&#xA;<pre><code>type Post @model {&#xA;  id: ID!&#xA;  title: String!&#xA;  status: PostStatus!&#xA;  rating: Int&#xA;  content: String&#xA;}&#xA;&#xA;enum PostStatus {&#xA;  DRAFT&#xA;  PUBLISHED&#xA;}&#xA;</code></pre>&#xA;<p>Is there a way to share the same GraphQL schema among applications? Or should I somehow export GraphQL models of my DynamoDB tables and update manually the schema.graphql in each app?</p>&#xA;",14057579,,14057579,2021-04-26 03:53:07,2021-04-26 03:53:07,How to share AWS AppSync GraphQL schema?,<amazon-web-services><flutter><graphql><aws-amplify><aws-appsync>,0,0,0,2021-04-25 20:56:00
67269160,1,,,4,357,"<p>I am currently trying to create an interface wherein a user is able to append additional metadata descriptors to an object while in a modal and need to reflect the results of this append elsewhere on the page. I am using react-relay with Hasura automatically creating a graphql schema/functions. I am currently trying to use the @appendNode directive to append the result of the following mutation to an existing edge with other present data so that it can be displayed to the user. The <code>insert_dataset_metadata_one</code> function returns just the metadata node that needs to be appended, so I put the directive between the function call and the fields to be returned from that node.</p>&#xA;<pre><code>export const insertDatasetMetadata = graphql`&#xA;  mutation mutations_InsertDatasetMetadataMutation(&#xA;    $object: dataset_metadata_insert_input!&#xA;    $connectionIDs: [ID!]!&#xA;  ) {&#xA;    insert_dataset_metadata_one (&#xA;      object: $object&#xA;    ) @appendNode(connections: $connectionIDs, edgeTypeName: &quot;dataset_metadataEdge&quot;) {&#xA;      id&#xA;      name: field_name&#xA;      value: field_value&#xA;      datasetMetadataId: dataset_metadata_id&#xA;      normalizedName: normalized_name&#xA;      normalizedValue: normalized_value&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>On the TypeScript side, I call this mutation with the dataset object's relay ID (that is <code>id</code>; <code>datasetId</code> is the foreign key used in postgres to associate the inserted metadata with the object it's describing).</p>&#xA;<pre><code>      const { id, datasetId, metadata } = dataset;&#xA;      // foreach over the metadata to get a data object and an if statement to test what needs updates and what needs inserts skipped for brevity&#xA;      commitMetadataInsert({&#xA;              variables: {&#xA;                object: {&#xA;                  dataset_id: datasetId ?? '',&#xA;                  field_name: data.name,&#xA;                  field_value: data.value,&#xA;                  normalized_name: data.normalizedName,&#xA;                  normalized_value: data.normalizedValue,&#xA;                },&#xA;                connectionIDs: [id],&#xA;              },&#xA;              onCompleted,&#xA;              onError,&#xA;            });&#xA;&#xA;</code></pre>&#xA;<p>Strangely, this insert fails with the following error:</p>&#xA;<pre><code>RRNLRequestError: Relay request for `mutations_InsertDatasetMetadataMutation` failed by the following reasons:&#xA;&#xA;1. unexpected variables in variableValues: connectionIDs&#xA;</code></pre>&#xA;<p>Prior to adding the connectionIDs variable and the @appendNode directive, this mutation worked as expected, i.e. the inserted metadata was present on page reload; however, since I'm trying to avoid reloads, that isn't satisfactory. I've dug around and looked for resources inside/outside of the relay docs which could offer guidance on this directive but couldn't find anything to indicate what the cause could be or what to do in this scenario. I have confirmed that the <code>id</code> variable's value is what I expect it to be (i.e. the relay ID of the dataset.) What am I missing/doing incorrectly?</p>&#xA;",15768846,,15768846,2021-04-26 15:56:07,2021-04-26 15:56:07,How do I use the React-Relay @appendNode directive with Hasura's generated functions/schema?,<graphql><relayjs><hasura>,0,0,0,2021-04-26 15:07:41
67269644,2,,67244764,8,,"<p>I finally nailed it. I went and re-read for third time <a href=""https://adrianhall.github.io/cloud/2018/10/26/backend-graphql-trigger-appsync/"" rel=""noreferrer"">Adrian Hall's post</a>, and it did lead me to the solution.</p>&#xA;<p>Please note that I installed the AWS AppSync client which is not needed but simplifies the process (otherwise you'd have to sign the URL yourself. For that see Adrian Hall's post).</p>&#xA;<p>There are a couple of things:</p>&#xA;<ul>&#xA;<li>You need to polyfill &quot;fetch&quot; by including either <code>cross-fetch</code> (Otherwise you're going to get hit by Invariant Violation from the Apollo Client which AppSync internally uses).</li>&#xA;<li>You need to pass the lambda's internal IAM credentials (Which I didn't even know existed) to the configuration portion of the AppSyncClient.</li>&#xA;<li>You need to add the proper permission to the IAM role of the lambda, in this case: <code>[&quot;appsync:GraphQL&quot;]</code> for the action.</li>&#xA;</ul>&#xA;<p>Here's some code:</p>&#xA;<p>This is the AppSync code.</p>&#xA;<pre><code>// The code is written in TypeScript.&#xA;// https://adrianhall.github.io/cloud/2018/10/26/backend-graphql-trigger-appsync/&#xA;// https://www.edwardbeazer.com/using-appsync-client-from-lambda/&#xA;import { env } from &quot;process&quot;;&#xA;import { Config, env as Env } from &quot;../../../../shared&quot;;&#xA;// This is such a bad practice&#xA;import AWS from &quot;aws-sdk&quot;;&#xA;import { AWSAppSyncClient } from &quot;aws-appsync&quot;;&#xA;import { Mutation, mutations } from &quot;./mutations/&quot;;&#xA;// Very important, otherwise it won't work!!! You'll have Invariant Violation &#xA;// from Apollo Client.&#xA;import &quot;cross-fetch/polyfill&quot;;&#xA;&#xA;/**&#xA; *&#xA; */&#xA;AWS.config.update({&#xA;  region: Config.region,&#xA;  credentials: new AWS.Credentials(&#xA;    env.AWS_ACCESS_KEY_ID!,&#xA;    env.AWS_SECRET_ACCESS_KEY!,&#xA;    env.AWS_SESSION_TOKEN!&#xA;  ),&#xA;});&#xA;&#xA;export class AppSyncClient {&#xA;  client: AWSAppSyncClient&lt;any&gt;;&#xA;  constructor() {&#xA;    // Your AppSync endpoint - The Full URL.&#xA;    if (!Env.APPSYNC_ENDPOINT) {&#xA;      throw new Error(&quot;APPSYNC_ENDPOINT not defined&quot;);&#xA;    }&#xA;&#xA;    /**&#xA;     * We create the AppSyncClient with the AWS_IAM&#xA;     * authentication.&#xA;     */&#xA;    this.client = new AWSAppSyncClient({&#xA;      url: Env.APPSYNC_ENDPOINT,&#xA;      region: Config.region,&#xA;      auth: {&#xA;        credentials: AWS.config.credentials!,&#xA;        type: &quot;AWS_IAM&quot;,&#xA;      },&#xA;      disableOffline: true,&#xA;    });&#xA;  }&#xA;&#xA;  /**&#xA;   * Sends a mutation on the AppSync Client&#xA;   * @param mutate The Mutation that will be sent with the variables.&#xA;   * @returns&#xA;   */&#xA;  // The mutation is a object that holds the mutation in &#xA;  // the `gql` tag. You can ommit this part. &#xA;  sendMutation(mutate: Mutation) {&#xA;    const mutation = mutations[mutate.type] as any;&#xA;    const variables = mutate.variables;&#xA;    // This is the important part.&#xA;    return this.client.mutate({&#xA;      mutation,&#xA;      // Specify &quot;no-cache&quot; in the policy. &#xA;      // network-only won't work.&#xA;      fetchPolicy: &quot;no-cache&quot;,&#xA;      variables,&#xA;    });&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>We need to enable IAM in the AppSync authorization mechanism. Yes, it is possible to have multiple Authentication enabled. I'm currently using OPEN_ID and IAM simultaneously.</p>&#xA;<p><a href=""https://us-east-2.console.aws.amazon.com/appsync/home?region=us-east-2#/myappsync-id/v1/settings"" rel=""noreferrer"">https://us-east-2.console.aws.amazon.com/appsync/home?region=us-east-2#/myappsync-id/v1/settings</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/3tzOh.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/3tzOh.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Here's the Lambda's IAM policy that executes the GQL:</p>&#xA;<pre><code>{&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Action&quot;: [&#xA;                &quot;appsync:GraphQL&quot;&#xA;            ],&#xA;            &quot;Effect&quot;: &quot;Allow&quot;,&#xA;            &quot;Resource&quot;: [&#xA;                &quot;arn:aws:appsync:us-east-2:747936726382:apis/ogolfgja65edlmhkcpp3lcmwli/*&quot;&#xA;           &#xA;            ]&#xA;        }&#xA;    ],&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;&#xA;}&#xA;</code></pre>&#xA;<p>You can further <a href=""https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsappsync.html"" rel=""noreferrer"">restrict here in the following fashion</a>:&#xA;<code>arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/types/${TypeName}/fields/${FieldName}</code></p>&#xA;<p><code>arn:aws:appsync:us-east-2:747936726382:apis/ogolfgja65edlmhkcpp3lcmwli/types/Mutation/field/myCustomField&quot;</code></p>&#xA;<p>Note, we need to better restrict this as we are currently giving it entire access to the API.</p>&#xA;<p>In your .gql file (AppSync GraphQL schema), add the @aws_iam directive to the mutation that is being used to send the subscriptions to, in order to restrict access from the front-end.</p>&#xA;<pre><code>  type Mutation {&#xA;  addUsersMutationSubscription(&#xA;    input: AddUsersSagaResultInput!&#xA;  ): AddUsersSagaResult @aws_iam&#xA;}&#xA;</code></pre>&#xA;",1057052,,,,2021-04-26 15:37:37,"",,0,0,0,2021-04-26 15:37:37
67274692,2,,67273810,0,,"<p>You should be able to use one of <a href=""https://www.apollographql.com/docs/react/caching/cache-field-behavior/#specifying-key-arguments"" rel=""nofollow noreferrer"">Key arguments</a> or the <a href=""https://www.apollographql.com/docs/react/caching/cache-field-behavior/#the-read-function"" rel=""nofollow noreferrer"">read function</a> for the type in question.</p>&#xA;",1911387,,,,2021-04-26 22:45:41,"",,0,0,0,2021-04-26 22:45:41
67282881,2,,67278779,0,,"<p>Cognito supports all the OIDC <a href=""https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims"" rel=""nofollow noreferrer"">standard claims</a> which should cover a wide variety of use cases. For additional attributes that aren't covered consider serializing the data from your signup form and storing it as a single custom attribute in your userpool (if it is under the 2048 character limit). If it requires validation do so in a <a href=""https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-sign-up.html"" rel=""nofollow noreferrer"">pre-signup lambda trigger</a>.</p>&#xA;<p>To make that user data available consider creating another handler as a <a href=""https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html"" rel=""nofollow noreferrer"">pre-token-generation trigger</a>. In the handler you can deserialize the form data and add them as claims in your token for easier use. From this handler you can also push the data to your database to make it available for querying.</p>&#xA;",7211548,,7211548,2021-04-27 12:31:11,2021-04-27 12:31:11,"",,0,0,0,2021-04-27 12:16:44
67284373,1,67288416,,3,454,"<p>I have an AWS Amplify application that has a structure with multi-organizations:</p>&#xA;<p>Organization A -&gt; Content of Organization A&#xA;Organization B -&gt; Content of Organization B</p>&#xA;<p>Let's say we have the user Alice, Alice belongs to both organizations, however, she has different roles in each one, on organization A Alice is an administrator and has more privileges (i.e: can delete content or modify other's content), while on Organization B she is a regular user.</p>&#xA;<p>For this reason I cannot simply set regular groups on Amplify (Cognito), because some users, like Alice, can belong to different groups on different organizations.</p>&#xA;<p>One solution that I thought was having a group for each combination of organization and role.&#xA;i.e: <code>OrganizationA__ADMIN</code>, <code>OrganizationB__USER</code>, etc&#xA;So I could restrict the access on the schema using a group auth directive on the <code>Content</code> model:</p>&#xA;<p><code>{allow: group, groupsField: &quot;group&quot;, operations: [update]},</code></p>&#xA;<p>The content would have a <code>group</code> field with a value: <code>OrganizationA__ADMIN</code></p>&#xA;<p>Then I could add the user to the group using the <a href=""https://docs.amplify.aws/cli/auth/admin#enable-admin-queries"" rel=""nofollow noreferrer"">Admin Queries API</a>&#xA;However, it doesn't seem to be possible to add a user to a group dynamically, I'd have to manually create each group every time a new organization is created, which pretty much kills my idea.</p>&#xA;<p>Any other idea on how I can achieve the result I'm aiming for?&#xA;I know that I can add the restriction on code, but this is less safe, and I'd rather to have this constraint on the database layer.</p>&#xA;",1742659,,,,2021-04-27 18:13:07,AWS Amplify (AppSync + Cognito) Authorization using dynamic groups per organitzation/tenant,<amazon-web-services><amazon-cognito><aws-amplify><aws-appsync><graphql-schema>,1,0,0,2021-04-27 13:48:06
67286687,2,,67229139,1,,"<p>Hasura builds on top of the functionality of your database and works best when you embrace all the functionality that the underlying DB has to offer.</p>&#xA;<p>This can easily be accomplished using a <a href=""https://www.postgresql.org/docs/12/sql-createtrigger.html"" rel=""nofollow noreferrer"">Database Trigger</a> (I am assuming you're using Postgres here)</p>&#xA;<p>Triggers allow you to run additional logic in the backend either for validation or to do create, update, delete etc when records are updated, deleted or created</p>&#xA;",1364771,,,,2021-04-27 16:04:41,"",,0,0,0,2021-04-27 16:04:41
67288416,2,,67284373,2,,"<p>Look into generating additional claims in you <a href=""https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-lambda-pre-token-generation.html#aws-lambda-triggers-pre-token-generation-example-1"" rel=""nofollow noreferrer"">pre-token-generation handler</a></p>&#xA;<p>Basically you can create an attribute that includes organization role mapping</p>&#xA;<p>e.g.</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;// ...&#xA;  &quot;custom:orgmapping&quot;: &quot;OrgA:User,OrgB:Admin&quot;&#xA;}&#xA;</code></pre>&#xA;<p>then transform them in your pre-token-generation handler into &quot;pseudo&quot; groups that don't actually exist in the pool.</p>&#xA;",7211548,,7211548,2021-04-27 18:13:07,2021-04-27 18:13:07,"",,0,3,0,2021-04-27 18:03:51
67291858,2,,67288783,0,,"<p>Encode your headers using <strong>the same</strong> [as in data] <strong>keys</strong>:</p>&#xA;<pre><code>const headers = {&#xA;    &quot;address_line_1&quot;: &quot;Address1&quot;,&#xA;    &quot;address_line_2&quot;: &quot;Address2&quot;,&#xA;    &quot;city_name&quot;: &quot;City&quot;,&#xA;</code></pre>&#xA;<p>later, you can list it</p>&#xA;<pre><code>Object.entries(headers).forEach(([key, value]) =&gt; console.log(`${key}: ${value}`));&#xA;</code></pre>&#xA;<p><code>console.log(data)</code> to see its structure and use <code>const</code> to 'alias' iterable (object with props or array) element:</p>&#xA;<pre><code>// choose the right data source - depends on what logged out&#xA;// console.log(data);&#xA;// if(data) console.log(data.details); //... step by step&#xA;&#xA;// const profile_info = data?.details;&#xA;// const profile_info = data?.data.details;&#xA;const profile_info = data?.details[0]; // object in array here&#xA;</code></pre>&#xA;<p>render values from both <code>headers</code> and <code>profile_info</code></p>&#xA;<pre><code>Object.entries(headers).forEach(([key, value]) =&gt; (&#xA; &lt;Grid&#xA;    key={key}&#xA;    item&#xA;    style={{&#xA;      padding: '0px 4px',&#xA;    }}&#xA;  &gt;&#xA;    &lt;Typography className={classes.profileData} gutterBottom={true}&gt;&#xA;      {value}&#xA;    &lt;/Typography&gt;&#xA;    &lt;Typography className={classes.profileData}&gt;&#xA;      {' ??? use css instead! '}&#xA;      {profile_info[key]}&#xA;    &lt;/Typography&gt;&#xA;  &lt;/Grid&gt;&#xA;</code></pre>&#xA;<p>or you can do the same using <code>.map</code> (you can use <code>index</code> if required)</p>&#xA;<pre><code>  Object.keys(headers).map((key, idx) =&gt; (&#xA;    &lt;Element key={key}&gt;&#xA;       &lt;Name title={headers[key]} /&gt;&#xA;       &lt;Value data={profile_info[key]} /&gt;&#xA;</code></pre>&#xA;",6124657,,,,2021-04-27 23:25:41,"",,0,2,0,2021-04-27 23:25:41
67309098,2,,62457267,0,,"<p>This is another way to do it, this would remove all rows and its dependant rows, also would reset the ids. This way you can iterate over all the tables and order doesn't matter.</p>&#xA;<pre><code>prisma.$executeRaw(`TRUNCATE TABLE ${table} RESTART IDENTITY CASCADE;`)&#xA;</code></pre>&#xA;",4059304,,,,2021-04-28 23:18:08,"",,0,0,0,2021-04-28 23:18:08
67371775,1,,,1,112,"<p>I have added AppSync GraphQL Api for my react application using amplify command <code>amplify add api</code> as mentioned <a href=""https://docs.amplify.aws/lib/graphqlapi/getting-started/q/platform/js"" rel=""nofollow noreferrer"">here</a>.&#xA;<br/>&#xA;I chose the <strong>API Key</strong> as default authorization mode while creating GraphQL API. Now I want to change it to OpenID Connect.&#xA;I know I can change it using AWS console at AppSync &gt; API-Name &gt; Settings as shown in picture.<br/><br/>&#xA;<a href=""https://i.stack.imgur.com/Crz2o.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Crz2o.png"" alt=""enter image description here"" /></a> <br/><br/>But how can I change default authorization mode from API Key to OpenID Connect using <strong>amplify</strong>? Thanks</p>&#xA;",13622084,,13622084,2021-05-04 06:33:28,2021-05-04 06:33:28,How to change default authorization mode for AppSync GraphQL API using amplify,<reactjs><graphql><aws-amplify><aws-appsync><aws-amplify-cli>,0,0,0,2021-05-03 15:39:24
67393811,2,,62520976,0,,"<p>I had this problem recently and it was because of an issue with an async import&#xA;I am using vue-apollo</p>&#xA;<pre class=""lang-js prettyprint-override""><code>    async account () {&#xA;      return {&#xA;        query: (await import('src/modules/accounts/graphql/accounts.list.query.gql')),&#xA;......&#xA;</code></pre>&#xA;<p>I just had to replace that import with a require and it was happy again.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>    async account () {&#xA;      return {&#xA;        query: require('src/modules/accounts/graphql/accounts.list.query.gql'),&#xA;......&#xA;</code></pre>&#xA;",1456666,,,,2021-05-05 00:36:49,"",,0,0,0,2021-05-05 00:36:49
67399232,1,67399508,,-3,353,"<p>I have API result like in this image. I want to get key and value from extraInformation and apply them into a recycler view. What is the best way to do it?</p>&#xA;<p><a href=""https://i.stack.imgur.com/RFmSX.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/RFmSX.png</a></p>&#xA;",7226583,,,,2021-05-05 10:27:07,How to get JSON object elements from GraphQL API call?,<android><kotlin><android-recyclerview><graphql><graphql-java>,1,2,0,2021-05-05 10:09:32
67403511,2,,61913192,6,,<p>Hasura added that feature recently to Hasura 2.0 . By now you can use multiple databases per hasura instance</p>&#xA;,1194821,,,,2021-05-05 14:39:22,"",,0,0,0,2021-05-05 14:39:22
67424658,2,,65723084,0,,"<p>I have the same problem.</p>&#xA;<p>I did not find a &quot;clean&quot; way to solve this problem. I directly edited the final result to merge the lists.</p>&#xA;<p>My &quot;After mapping template&quot; :</p>&#xA;<pre><code>#set( $liste1 = $ctx.prev.result )&#xA;#set( $liste2 = $ctx.result )&#xA;&#xA;#set( $strliste1 = $util.toJson($liste1) )&#xA;#set( $liste1start = 1 )&#xA;#set( $liste1end = $strliste1.length() - 1 )&#xA;#set( $newliste1 = $strliste1.substring($liste1start, $liste1end))&#xA;&#xA;#set( $strliste2 = $util.toJson($liste2) )&#xA;#set( $liste2start = 1 )&#xA;#set( $liste2end = $strliste2.length() - 1 )&#xA;#set( $newliste2 = $strliste2.substring($liste2start, $liste2end))&#xA;&#xA;#set( $result = &quot;[$newliste1 , $newliste2]&quot; )&#xA;$result&#xA;</code></pre>&#xA;",8964081,,,,2021-05-06 19:17:30,"",,0,0,0,2021-05-06 19:17:30
67431189,1,,,4,1563,<p>Prisma generates database tables with uppercase in MySQL. Is there any way to generate tables only in lower case?</p>&#xA;,11501502,,,,2021-11-01 11:20:54,Prisma generates database tables with uppercase in mysql. Is there any way to generate tables only in lowercase?,<mysql><ubuntu-18.04><prisma><prisma-graphql>,1,0,0,2021-05-07 08:08:13
67434185,2,,67419921,-1,,"<p>User should contain some <code>petIds</code> [array] value (internal, DB stored field/column) ...</p>&#xA;<p>... making possible to resolve <code>pets: [Pet]</code> prop/relation - list of <code>Pet</code> ...</p>&#xA;<p>... like <code>starshipIDs</code> explained in <a href=""https://graphql.org/learn/execution/"" rel=""nofollow noreferrer"">https://graphql.org/learn/execution/</a></p>&#xA;<p><strong>Notice</strong>: pets service is asked about records using pet ids.</p>&#xA;<p>... but of course pet can contain some <code>ownerId</code> (only or explicitely visible, DB stored field/column) making possible to resolve <code>owner: User</code> prop [reverse] relation - this way you can:</p>&#xA;<pre><code>query PetWithOwner {&#xA;  pet (id: &quot;someID&quot;) {&#xA;    id&#xA;    name&#xA;    owner {&#xA;      id&#xA;      email&#xA;      # more pets?&#xA;      pets {&#xA;        id&#xA;        name&#xA;        # you can loop it ;)&#xA;        owner {&#xA;          id&#xA;          email&#xA;</code></pre>&#xA;<p><code>pet.owner</code> field resolver can return only <code>{ id: ownerId }</code> object (partial response) ... server will try to resolve 'missing' (required by query) <code>email</code> prop using <code>User</code> (<code>owner</code> is <code>User</code> type) type resolver, passing id as an arg (check/console.log <code>parent</code> and <code>args</code> resolver args). You don't have to do it [the same] 'manually' inside <code>pet.owner</code> field resolver.</p>&#xA;<h2>Query required fields ...</h2>&#xA;<p>... [selection set] can be read from <code>info</code> object - 4th resolver arg - read docs/tutorial for details</p>&#xA;",6124657,,,,2021-05-07 11:30:39,"",,0,1,0,2021-05-07 11:30:39
67439484,2,,67437185,0,,"<p>I have managed to make the code work by removing and refactoring some parts. The final code is as follows:</p>&#xA;<pre><code>/* Amplify Params - DO NOT EDIT&#xA;    API_MOCKBETS_GRAPHQLAPIENDPOINTOUTPUT&#xA;    API_MOCKBETS_GRAPHQLAPIIDOUTPUT&#xA;    API_MOCKBETS_GRAPHQLAPIKEYOUTPUT&#xA;    ENV&#xA;    REGION&#xA;Amplify Params - DO NOT EDIT */&#xA;&#xA;var express = require(&quot;express&quot;);&#xA;var bodyParser = require(&quot;body-parser&quot;);&#xA;var awsServerlessExpressMiddleware = require(&quot;aws-serverless-express/middleware&quot;);&#xA;&#xA;var app = express();&#xA;app.use(bodyParser.json());&#xA;app.use(awsServerlessExpressMiddleware.eventContext());&#xA;&#xA;app.use(function (req, res, next) {&#xA;  res.header(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;);&#xA;  res.header(&quot;Access-Control-Allow-Headers&quot;, &quot;*&quot;);&#xA;  next();&#xA;});&#xA;&#xA;const axios = require(&quot;axios&quot;);&#xA;const gql = require(&quot;graphql-tag&quot;);&#xA;const graphql = require(&quot;graphql&quot;);&#xA;const { print } = graphql;&#xA;&#xA;const createCountry = gql`&#xA;  mutation createCountry($input: CreateCountryInput!) {&#xA;    createCountry(input: $input) {&#xA;      id&#xA;      country_id&#xA;      country_name&#xA;      country_logo&#xA;    }&#xA;  }&#xA;`;&#xA;const listCountries = gql`&#xA;  mutation listCountries($input: CreateCountryInput!) {&#xA;    listCountries(input: $input) {&#xA;      id&#xA;      country_id&#xA;      country_name&#xA;      country_logo&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;const apiURL = &quot;redacted&quot;;&#xA;const apiKey = &quot;redacted&quot;;&#xA;&#xA;app.get(&quot;/leagues&quot;, function (req, res) {&#xA;  axios&#xA;    .get(&#xA;      &quot;redacted&quot;&#xA;    )&#xA;    .then(async (response) =&gt; {&#xA;      for (const countryData of response.data) {&#xA;      &#xA;        await axios({&#xA;          url:apiURL,&#xA;          method: &quot;post&quot;,&#xA;          headers: {&#xA;            &quot;x-api-key&quot;: apiKey,&#xA;          },&#xA;          data: {&#xA;            query: print(createCountry),&#xA;            variables: {&#xA;              input: {&#xA;                country_id: countryData.country_id,&#xA;                country_name: countryData.country_name,&#xA;                country_logo: countryData.country_logo,&#xA;              },&#xA;            },&#xA;          },&#xA;        });&#xA;      }&#xA;    });&#xA;  res.json({&#xA;    body: &quot;successfully created country!&quot;,&#xA;  });&#xA;});&#xA;&#xA;app.listen(3000, function () {&#xA;  console.log(&quot;App started&quot;);&#xA;});&#xA;&#xA;module.exports = app;&#xA;</code></pre>&#xA;",10123373,,,,2021-05-07 17:39:15,"",,0,0,0,2021-05-07 17:39:15
67440222,1,,,0,249,"<p>I am trying to create a web application with aws amplify datastore, where blogs are created, posts and comments are created, when I try to publish a post within a blog, I get an error and the answer that amplify throws me is that the field &quot;blogID&quot; it is null, when in fact if I send it with an ID</p>&#xA;<p>I already tried to follow the instructions of other posts that I saw, and I am following the datastore documentation in amplify, I just don't know what is happening, I think it is something that is badly related in the schema, the strange thing is that the schema is such and how the amplify CLI configuration gave it to me</p>&#xA;<p>This only happens to me when I try to make a request (in this case an Insert) <strong>to a model that is related</strong></p>&#xA;<p>this is what I send to DataStore</p>&#xA;<pre><code>{title: &quot;new post&quot;, blogID: &quot;3e1fdd25-4f63-4d68-ac0b-f84d95ff4951&quot;}&#xA;</code></pre>&#xA;<p>and this give me the response Amplify</p>&#xA;<pre><code>{title: &quot;new post&quot;, blogID: null, id: &quot;6d5efbe0-ea36-41c8-84ce-b4194d7fee30&quot;, _version: undefined, _lastChangedAt: undefined, …}&#xA;</code></pre>&#xA;<p>it says that I send BlogID as null when in fact it is not like that and it throws me the following message: <em><strong>&quot;Variable 'input' has coerced Null value for NonNull type 'ID!'&quot;</strong></em></p>&#xA;<p><strong>This is my schema.graphql</strong></p>&#xA;<pre><code>type Blog @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  posts: [Post] @connection(keyName: &quot;byBlog&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Post @model @key(name: &quot;byBlog&quot;, fields: [&quot;blogID&quot;]) {&#xA;  id: ID!&#xA;  title: String!&#xA;  blogID: ID!&#xA;  blog: Blog @connection(fields: [&quot;blogID&quot;])&#xA;  comments: [Comment] @connection(keyName: &quot;byPost&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Comment @model @key(name: &quot;byPost&quot;, fields: [&quot;postID&quot;, &quot;content&quot;]) {&#xA;  id: ID!&#xA;  postID: ID!&#xA;  post: Post @connection(fields: [&quot;postID&quot;])&#xA;  content: String!&#xA;}&#xA;</code></pre>&#xA;<p><strong>this is the mutation</strong></p>&#xA;<pre><code>export const createPost = /* GraphQL */ `&#xA;  mutation CreatePost(&#xA;    $input: CreatePostInput!&#xA;    $condition: ModelPostConditionInput&#xA;  ) {&#xA;    createPost(input: $input, condition: $condition) {&#xA;      id&#xA;      title&#xA;      blogID&#xA;      blog {&#xA;        id&#xA;        name&#xA;        posts {&#xA;          nextToken&#xA;          startedAt&#xA;        }&#xA;        _version&#xA;        _deleted&#xA;        _lastChangedAt&#xA;        createdAt&#xA;        updatedAt&#xA;      }&#xA;      comments {&#xA;        items {&#xA;          id&#xA;          postID&#xA;          content&#xA;          _version&#xA;          _deleted&#xA;          _lastChangedAt&#xA;          createdAt&#xA;          updatedAt&#xA;        }&#xA;        nextToken&#xA;        startedAt&#xA;      }&#xA;      _version&#xA;      _deleted&#xA;      _lastChangedAt&#xA;      createdAt&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p><strong>and this is my code for create post</strong></p>&#xA;<pre><code>const handleAddPost = async () =&gt; {&#xA;        try {&#xA;            await DataStore.save(new Post({&#xA;                title: title,&#xA;                blogID: blog.id,&#xA;            }))&#xA;            .then(res =&gt; console.log(res))&#xA;            .catch(err =&gt; console.log(err));&#xA;        } catch (error) {&#xA;            console.log(error);&#xA;        }&#xA;        setTitle('');&#xA;    }&#xA;</code></pre>&#xA;<p>I have seen that there are some posts about the same problem here but none have worked for me, I want to believe that it is something from the relational model of the graphQL schema, I hope you can help me</p>&#xA;",14658170,,14658170,2021-05-07 20:28:53,2021-05-07 20:28:53,"error when create a mutation with AWS amplify DataStore and GraphQL: ""Variable 'input' has coerced Null value for NonNull type 'ID!'""",<reactjs><graphql><aws-amplify><aws-appsync>,0,2,0,2021-05-07 18:45:23
67502148,1,67556883,,1,1921,"<p><strong>Which Category is your question related to?</strong>&#xA;DynamoDB, AppSync(GraphQL)</p>&#xA;<p><strong>Amplify CLI Version</strong>&#xA;4.50.2</p>&#xA;<p><strong>Provide additional details e.g. code snippets</strong></p>&#xA;<p>BACKGROUND:&#xA;I'm new in AWS serverless app systems and as a frontend dev, I'm quite enjoying it thanks to auto-generated APIs, tables, connections, resolvers etc. I'm using Angular/Ionic in frontend and S3, DynamoDB, AppSync, Cognito, Amplify-cli for the backend.</p>&#xA;<p>WHAT I HAVE:&#xA;Here is a part of my schema. I can easily use auto-generated APIs to List/Get Feedbacks with additional filters (i.e. score: { ge: 3 }). And thanks to the @connection I can see the User's details in the listed Feedback items.</p>&#xA;<pre><code>type User @model @auth(rules: [{ allow: owner }]) {&#xA;  id: ID!&#xA;  email: String!&#xA;  name: String!&#xA;  region: String!&#xA;  sector: String!&#xA;  companyType: String!&#xA;}&#xA;&#xA;type Feedback @model @auth(rules: [{ allow: owner }]) {&#xA;  id: ID!&#xA;  user: User @connection&#xA;  score: Int!&#xA;  content: String&#xA;}&#xA;</code></pre>&#xA;<p>WHAT I WANT:&#xA;I want to list Feedbacks based on several fields on User type, such as user's region (i.e. user.region: { contains: 'United States' }). Now I searched for a solution quite a lot like, <a href=""https://github.com/aws-amplify/amplify-cli/issues/2311"" rel=""nofollow noreferrer"">#2311</a> , and I learned that amplify codegen only creates top-level filtering. In order to use cross-table filtering, I believe I need to modify resolvers, lambda functions, queries and inputs. Which, for a beginner, it looks quite complex.</p>&#xA;<p>WHAT I TRIED/CONSIDERED:</p>&#xA;<ol>&#xA;<li>I tried listing all Users and Feedbacks separately and filtering them in front-end. But then the client downloads all these unnecessary data. Also because of the pagination limit, user experience takes a hit as they see an empty list and repeatedly need to click Load More button.</li>&#xA;<li>Thanks to some suggestions, I also thought about duplicating the User details in Feedback table to be able to search/filter them. Then the problem is that if User updates his/her info, duplicated values will be out-of-date. Also there will be too many duplicated data, as I need this feature for other tables also.</li>&#xA;<li>I also heard about using ElasticSearch for this problem but someone mentioned for a simple filtering he got 30$ monthly cost, so I got cold feet.</li>&#xA;<li>I tried the resolver solution to add a custom filtering in it. But I found that quite complex for a beginner. Also I will need this cross-table filtering in many other tables as well, so I think would be hard to manage. If that is the best-practice, I'd appreciate it if someone can guide me through it.</li>&#xA;</ol>&#xA;<p>QUESTIONS:</p>&#xA;<ol>&#xA;<li>What would be the easiest/beginner-friendly solution for me to achieve this cross-table filtering? I am open to alternative solutions.</li>&#xA;<li>Is this cross-table filtering a bad approach for a no-SQL setup? Since I need some relationship between two tables. (I thought @connection would be enough). Should I switch to an SQL setup before it is too late?</li>&#xA;<li>Is it possible for Amplify to auto-generate a solution for this in the future? I feel like many people are experiencing the same issue.</li>&#xA;</ol>&#xA;<p>Thank you in advance.</p>&#xA;",5043633,,,,2021-05-16 12:50:46,Filtering List Query By Another Table's Field (a.k.a Cross-Table or Nested Filtering) in AWS Amplify GraphQL DynamoDB,<amazon-web-services><graphql><amazon-dynamodb><aws-amplify><aws-appsync>,3,0,0,2021-05-12 10:48:08
67521157,2,,67510355,0,,"<p>You can't query the cache by <code>otherId</code> for the same reason you don't want to have to search through the record set to find the matching item -- the id is part of the item's key, and without the key Apollo can't directly access the item. Apollo's default cache is a <a href=""https://www.apollographql.com/docs/apollo-server/data/data-sources/#caching"" rel=""nofollow noreferrer"">key-value store</a>, not a database that you can query however you like.</p>&#xA;<p>It's probably necessary to build a query into your data source that allows mapping between <code>otherId</code> and <code>id</code>, obviously it would be horribly inefficient at scale to search through the entire record set for your item.</p>&#xA;",3772771,,,,2021-05-13 14:37:49,"",,0,1,0,2021-05-13 14:37:49
67524631,1,67559266,,0,163,"<p>I have an enum and I'm trying to use the enum to create a GraphQl type. Each property in this new type can be optional. Each type returns the same type.</p>&#xA;<p>Here's an example of the Enum:</p>&#xA;<pre><code>enum AccountTypeEnum {&#xA; AccountType1&#xA; AccountType2&#xA; AccountType3&#xA; AccountType4&#xA; AccountType5&#xA; AccountType6&#xA;}&#xA;</code></pre>&#xA;<p>I'd like to create a type using the enum so I don't need to type out each one. This is a shortened down version, but there's over 20 accountTypes - each returning an array of balances.</p>&#xA;<p>This is what i'd like the type to look like:</p>&#xA;<pre><code>type BalanceList {&#xA; AccountType1: [Balances]&#xA; AccountType2: [Balances]&#xA; AccountType3: [Balances]&#xA; AccountType4: [Balances]&#xA; AccountType5: [Balances]&#xA; AccountType6: [Balances]&#xA;}&#xA;</code></pre>&#xA;<p>Is it possible to create BalanceList without typing out the entire Enum?</p>&#xA;<p>Also, for each Id there might be only a few of the AccountTypes so I would need to account for that. For example: user 1 could have AccountTypes 1 and 3 (only AccountType1 and AccountType3 would appear on the reponse object, none of the other AccountTypes would be exist on the object)</p>&#xA;<p>I couldn't find this in the documentation so I'm not sure if this is possible</p>&#xA;",12744338,,12744338,2021-05-13 19:01:39,2021-05-16 16:46:49,Is it possible create a graphql type using an enum for the property name?,<javascript><graphql><apollo>,1,10,0,2021-05-13 18:50:30
67534173,2,,67533339,0,,"<p>This kind of seems like you're seeing this error on your client-side application? On a side note, you didn't add much details of what you're doing to get this error, where you're seeing it, and what you think is causing it, so I can only go off of what you've provided in terms of what your set up is.</p>&#xA;<p>This seems like you're getting an HTML response from your server where you're expecting JSON. Typically, with GraphQL this may happen because you're sending a GET request (which may bring up the GraphiQL explorer) rather than a POST request.</p>&#xA;<p>Your GraphQL client code should make a POST request and you should ensure that it sends a header to accept <code>application/json</code> responses.</p>&#xA;",1524832,,,,2021-05-14 12:13:07,"",,0,1,0,2021-05-14 12:13:07
67537278,1,,,2,588,"<p>I was finally able to get TypeQL working with Netlify Functions / AWS Lambda after a day of work, going over the docs and examples, and in the end desperate brute force.</p>&#xA;<p>I'm sharing my working code here for others (or for future reference of my own :P ) as it contains some counterintuitive keyword usage.</p>&#xA;<h2>Normal Approach</h2>&#xA;<p>The error I kept getting when using the <a href=""https://github.com/MichalLytek/type-graphql/tree/v1.1.1/examples/simple-usage"" rel=""nofollow noreferrer"">simple example</a> was:</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>Your function response must have a numerical statusCode. You gave: $ undefined&#xA;</code></pre>&#xA;<p>I searched of course in the issues, but none of the suggested solutions worked for me.</p>&#xA;",5037146,,,,2022-10-07 09:41:25,TypeGraphQl: Usage with Netlify Functions/AWS Lambda,<aws-lambda><graphql><netlify><typegraphql><netlify-cli>,2,0,0,2021-05-14 15:57:37
67579250,2,,60338239,4,,"<p>The storefront API and admin API return different format of Id</p>&#xA;<ul>&#xA;<li><p>storefront API: <code>&quot;Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0LzQ3NjA3ODY1MDE3MDM=&quot;</code></p>&#xA;</li>&#xA;<li><p>Admin API: <code>&quot;gid://shopify/Product/4760786501703&quot;</code></p>&#xA;</li>&#xA;</ul>&#xA;<p><strong>But</strong> there is a <strong>convert</strong> way between each other, use function <code>atob</code></p>&#xA;<p><code>atob(&quot;Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0LzQ3NjA3ODY1MDE3MDM=&quot;)</code> will get the Admin API Id</p>&#xA;<p>For NodeJS package: <a href=""https://www.npmjs.com/package/atob"" rel=""nofollow noreferrer"">https://www.npmjs.com/package/atob</a></p>&#xA;",4468648,,4468648,2021-10-29 08:16:13,2021-10-29 08:16:13,"",,0,0,0,2021-05-18 02:39:58
67584562,2,,67292590,0,,<p>I had the same error. My issue was I'd misspelled one of the attribute names in the database. Quick one to check.</p>&#xA;,8669979,,,,2021-05-18 10:36:58,"",,0,0,0,2021-05-18 10:36:58
67588122,1,,,-1,142,"<p>For a project for the municipality we are creating an api.&#xA;We've chosen GraphQL as framework for the API and we've written it in C#.&#xA;The API works for normal data like strings, ints etc.&#xA;However there is a catch. We need to work with Geometry/spatial data as well. So we've 'linked' the GraphQL API to our database, which is a PostGIS/PostgreSQL database.&#xA;We want GeoJSON as output, because that is easily plottable using something like MapBox.</p>&#xA;<p>The view we've created within PostGIS/PostgreSQL is as follows:</p>&#xA;<pre><code>CREATE VIEW pandGeoJSON AS&#xA;select row_to_json(fc)&#xA;from (&#xA;    select&#xA;        'FeatureCollection' as &quot;type&quot;,&#xA;        array_to_json(array_agg(f)) as &quot;features&quot;&#xA;    from (&#xA;        select&#xA;            'Feature' as &quot;type&quot;,&#xA;            ST_AsGeoJSON(geom) :: json as &quot;geometry&quot;,&#xA;            (&#xA;                sor_id,&#xA;                status&#xA;            ) as &quot;properties&quot;&#xA;        from pand INNER JOIN sor as s on pand.sor_id = s.sor_pandid&#xA;        group by sor_id&#xA;    ) as f &#xA;) as fc;&#xA;</code></pre>&#xA;<p>But I can't seem to find anywhere on the internet how we would be able to get that view and use it as output of our GraphQL API. Or are we thinking the wrong way round and should we create that view within GraphQL itself?</p>&#xA;",10352020,,,,2021-05-19 10:00:36,Return a sql/postGIS created view via GraphQL,<sql><postgresql><graphql><postgis><geojson>,1,0,0,2021-05-18 14:17:27
67632709,2,,67631674,1,,"<p>As per the GraphQL implementation in WSO2 API Gateway, we allow only query/mutation operations through the gateway as the gateway provides QOS (operational level security, throttling and analytics) for the operations available at requested query. The above error returns because the provided query has not been included any operations but, gateway validates the operation availability on the query</p>&#xA;<p>Here, the application developer/ API developer already knows what types are available in the GraphQL backend as they already have the type system in the SDL file. Introspection is needed if they haven't idea on the available graphql types in the backend and  hence GraphQL provide introspection capability to retreive them by querying the __schema field.</p>&#xA;",7968071,,7968071,2021-05-21 10:06:39,2021-05-21 10:06:39,"",,0,3,0,2021-05-21 07:45:48
67645543,1,,,1,371,"<p>I have an app where Auth is implemented using Cognito User Pools and API is a GraphQL API implemented using Amplify. In the Schema definitions, is there an easy way to limit the number of records a user can create. For example in the following schema...</p>&#xA;<pre><code>type Product @model @auth(rules: [{ allow: owner }]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;}&#xA;</code></pre>&#xA;<p>I would like to limit the users to a maximum of 100 Products.</p>&#xA;<p>One way is via my front-end. When I detect that a user has reached 100 limit, I can just make the UI stop giving them the ability to add more. But if someone were to bypass the UI, they could create more than 100. Hence, I prefer to enforce this limit in the backend.</p>&#xA;<p>Is there a way to do this in the Schema definition, or elsewhere in AWS / DynamoDB ?</p>&#xA;<p>Thanks!</p>&#xA;",11854352,,,,2021-05-27 21:16:14,Way to limit number of records a user can create in Amplify GraphQL API,<graphql><amazon-dynamodb><aws-amplify>,2,0,0,2021-05-22 02:24:33
67658709,1,,,0,50,"<p>I am using Gatsby and would like to access the following data in GraphQL. I have the following data structure (only showing 2 data).</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;allData&quot;: {&#xA;      &quot;nodes&quot;: [&#xA;        {&#xA;          &quot;schedule&quot;: {&#xA;            &quot;_01&quot;: [&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;05:35 - 06:23&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;06:23 - 08:29&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;08:29 - 23:40&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;05:35 - 20:12&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;20:12 - 23:40&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;05:35 - 23:00&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;23:00 - 23:40&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;&quot;&#xA;              }&#xA;            ],&#xA;            &quot;_02&quot;: null,&#xA;            &quot;_03&quot;: null,&#xA;            &quot;_04&quot;: null,&#xA;            &quot;_05&quot;: null,&#xA;            &quot;_07&quot;: null,&#xA;            &quot;_08&quot;: null,&#xA;            &quot;_09&quot;: null&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;schedule&quot;: {&#xA;            &quot;_01&quot;: [&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;05:35 - 06:23&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;06:23 - 08:29&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;08:29 - 23:40&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;05:35 - 20:12&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;20:12 - 23:40&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;05:35 - 23:00&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;23:00 - 23:40&quot;&#xA;              },&#xA;              {&#xA;                &quot;BoundText1&quot;: &quot;&quot;&#xA;              }&#xA;            ],&#xA;            &quot;_02&quot;: null,&#xA;            &quot;_03&quot;: null,&#xA;            &quot;_04&quot;: null,&#xA;            &quot;_05&quot;: null,&#xA;            &quot;_07&quot;: null,&#xA;            &quot;_08&quot;: null,&#xA;            &quot;_09&quot;: null&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  },&#xA;  &quot;extensions&quot;: {}&#xA;}&#xA;</code></pre>&#xA;<p>As seen, under <code>data.allData.nodes[].schedule</code> the key is totally dynamic and its generated by the server side (It's <code>_01</code> to <code>_09</code> currently but it is totally up to the server side. I'd like to access the list of <code>BoundText1</code> under each key.</p>&#xA;<p>I created the following query that let me query the value I want:</p>&#xA;<pre><code>query MyQuery {&#xA;  allData: allData {&#xA;    nodes {&#xA;      schedule {&#xA;        _01 {&#xA;          BoundText1&#xA;        }&#xA;        _02 {&#xA;          BoundText1&#xA;        }&#xA;        _03 {&#xA;          BoundText1&#xA;        }&#xA;        _04 {&#xA;          BoundText1&#xA;        }&#xA;        _05 {&#xA;          BoundText1&#xA;        }&#xA;        _07 {&#xA;          BoundText1&#xA;        }&#xA;        _08 {&#xA;          BoundText1&#xA;        }&#xA;        _09 {&#xA;          BoundText1&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>However I'm afraid that in the future if there are some new key is added from the server side (e.g. <code>_88</code>), I would miss the new data. Therefore I would like to know if there are some possible way that I can grab <code>BoundText1</code> under all keys?</p>&#xA;<p>Thanks in advance</p>&#xA;",1434847,,5585371,2021-05-24 08:30:16,2021-06-03 01:06:14,Collect content from dynamic key in GraphQL,<graphql>,1,10,0,2021-05-23 10:32:19
67658812,1,67675782,,0,455,"<p>I have a custom GraphQL schema for a blogging application for my ReactJS app. The main model type is Post.</p>&#xA;<p>Post contains a number of properties that have a custom type eg Gallery: [MediaObject]. The majority of these properties with custom types are missing from the automatically generated CreatePostInput by AWS Amplify CLI. This means that I cannot create a Post object that has these properties with custom type.</p>&#xA;<p>The lack of these custom type properties is evident in the AppSync console, under Queries. In the Explorer, go to Mutations, click on CreatePost mutation, and you will see that 6 of the 21 properties for Post are missing. The missing properties are tags, attributes, seo, featuredImage, gallery and createdBy.</p>&#xA;<p>They are also missing in the autogenerated graphql schema in api &gt; build &gt; schema.graphql in the  react app.</p>&#xA;<p>I have made multiple clean projects from scratch, and the problem is reproducible. I have  updated the amplify cli to 4.51.2 and still no luck.</p>&#xA;<p>I would expect the CreatePostInput to have the associated inputs for all of the fields, not just <code>comments</code> (see the autogenerated CreatePostInput below) eg: <code>attribute: AttributeInput</code>, but these are not generated either. This would allow me to create a Post object that has these custom fields populated. However, only the <code>CommentInput</code> has been generated. What am I doing wrong here, or have I misunderstood something?</p>&#xA;<p>Thanks!</p>&#xA;<p>Below is my gql schema and both the autogenerated CreatePostInput and CommentInput:</p>&#xA;<pre><code>type Post @model {&#xA;    id: ID&#xA;    createdBy: User&#xA;    createdAt: AWSDateTime&#xA;    updatedAt:AWSDateTime&#xA;    type: PostType!&#xA;    title: String!&#xA;    status: Status&#xA;    content: String!&#xA;    excerpt: String&#xA;    slug: AWSURL&#xA;    wordpressId: Int&#xA;    wordpressImageURLs: [AWSURL]&#xA;    author: String&#xA;    likes: Int&#xA;    tags: [Tag]&#xA;    attributes: Attribute&#xA;    seo: Seo&#xA;    featuredImage: MediaObject&#xA;    gallery: [MediaObject]&#xA;    comments: [Comment]&#xA;    numberOfComments: Int&#xA;&#xA;}&#xA;&#xA;type User @model {&#xA;    id: ID&#xA;    username: String!&#xA;    firstName: String&#xA;    lastName: String&#xA;    email: AWSEmail!&#xA;    avatar: MediaObject&#xA;    location: String&#xA;    createdAt: AWSDateTime&#xA;    updatedAt: AWSDateTime&#xA;    Posts: [Post]&#xA;}&#xA;&#xA;type Tag @model {&#xA;    id: ID&#xA;    postIds: [ID]&#xA;    name: String!&#xA;}&#xA;&#xA;type Attribute @model {&#xA;    id: ID&#xA;    postId: ID&#xA;    link: String&#xA;    imgUrl: AWSURL&#xA;    ogImage: AWSURL&#xA;    ogDescription: String&#xA;    canonicalLink: AWSURL&#xA;}&#xA;&#xA;type Seo @model {&#xA;    id: ID&#xA;    postId: ID&#xA;    metaRobotsNoIndex: String&#xA;    metaRobotsNoFollow: String&#xA;    canonical: AWSURL&#xA;    metaDesc: String&#xA;    opengraphDescription: String&#xA;    opengraphModifiedTime: AWSDateTime&#xA;    opengraphPublishedTime: AWSDateTime&#xA;    opengraphTitle: String&#xA;    opengraphUrl: AWSURL&#xA;    opengraphImage: AWSURL&#xA;    twitterDescription: String&#xA;    twitterImage: String&#xA;    twitterTitle: String&#xA;    schemaSeo: String&#xA;}&#xA;&#xA;type Comment&#xA;   {&#xA;  id: ID&#xA;  postId: ID!&#xA;  createdBy: ID&#xA;  author: String&#xA;  createdAt: AWSDateTime&#xA;  text: String!&#xA;  likes: Int&#xA;}&#xA;&#xA;type MediaObject @model {&#xA;    id: ID&#xA;    linkedId: ID&#xA;    createdBy: ID&#xA;    mediaItemUrl: AWSURL&#xA;    srcSet: String&#xA;    medium: AWSURL&#xA;    thumb: AWSURL&#xA;    sourceURL: AWSURL&#xA;    description: String&#xA;    bucket: String&#xA;    region: String&#xA;    key: String&#xA;    type: MediaObjectType&#xA;}&#xA;&#xA;type Like @model {&#xA;    id: ID!&#xA;    objectVotedOnID: ID!&#xA;    createdBy: ID&#xA;    createdAt: AWSDateTime&#xA;    likeOn: LikeOnType&#xA;&#xA;}&#xA;&#xA;enum PostType {&#xA;    TOOLS&#xA;    BLOGS&#xA;    INSPIRATIONS&#xA;    NEWS&#xA;    POSTS&#xA;    NEWSLETTERS&#xA;}&#xA;&#xA;enum LikeOnType {&#xA;    POST&#xA;    COMMENT&#xA;}&#xA;&#xA;enum Status {&#xA;    PUBLISH&#xA;    DRAFT&#xA;}&#xA;&#xA;enum MediaObjectType {&#xA;    IMAGE&#xA;    VIDEO&#xA;    AUDIO&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>Autogenerated (only CreatePostInput and CommentInput have been included for brevity), found in amplify &gt; backend &gt; api &gt; build &gt; schema.graphql:</p>&#xA;<pre><code>input CreatePostInput {&#xA;  id: ID&#xA;  createdAt: AWSDateTime&#xA;  updatedAt: AWSDateTime&#xA;  type: PostType!&#xA;  title: String!&#xA;  status: Status&#xA;  content: String!&#xA;  excerpt: String&#xA;  slug: AWSURL&#xA;  wordpressId: Int&#xA;  wordpressImageURLs: [AWSURL]&#xA;  author: String&#xA;  likes: Int&#xA;  comments: [CommentInput]&#xA;  numberOfComments: Int&#xA;}&#xA;&#xA;input CommentInput {&#xA;  id: ID&#xA;  postId: ID!&#xA;  createdBy: ID&#xA;  author: String&#xA;  createdAt: AWSDateTime&#xA;  text: String!&#xA;  likes: Int&#xA;}&#xA;&#xA;</code></pre>&#xA;",6111475,,,,2021-05-24 16:35:56,Object Fields Missing in Autogenerated Mutation Input for GraphQL AppSync,<reactjs><amazon-web-services><graphql><aws-amplify>,2,0,0,2021-05-23 10:43:52
67663082,1,,,0,136,"<p>im using Hasura with Postgres</p>&#xA;<p>Its possible to allow the users to increment a column in a table only by one and not letting them change the whole number ?</p>&#xA;<p>For example im afraid that letting the user &quot;update&quot; the &quot;likes&quot;</p>&#xA;<pre><code>mutation update_likes {&#xA;  update_article(&#xA;    where: {id: {_eq: 1}},&#xA;    _inc: {likes: 1}&#xA;  ) {&#xA;    affected_rows&#xA;    returning {&#xA;      id&#xA;      likes&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>im scared that the user will be able to modify the query and update the likes to the number he wants.</p>&#xA;<p>Thanks!</p>&#xA;<p>P.S the code is an example from the official hasura website:&#xA;<a href=""https://hasura.io/blog/updating-data-using-mutations-on-hasura-graphql-87c7e22503bc/"" rel=""nofollow noreferrer"">https://hasura.io/blog/updating-data-using-mutations-on-hasura-graphql-87c7e22503bc/</a></p>&#xA;",1870648,,1870648,2021-05-23 18:53:45,2021-05-24 23:15:01,Can i give a role only permissions to update a column by +1?,<graphql><hasura>,1,2,0,2021-05-23 18:24:54
67672843,1,,,0,190,"<p>I have 2 entities:</p>&#xA;<pre><code>User&#xA;Book&#xA;</code></pre>&#xA;<p>Both entities are exposed as API resources (I am using DTO)</p>&#xA;<pre><code>//src/Entity/User.php&#xA;#[ApiResource(&#xA;    collectionOperations: [&#xA;    'get' =&gt; [&#xA;        'security' =&gt; 'is_granted(&quot;ROLE_ADMIN&quot;)'&#xA;    ],&#xA;],&#xA;    graphql: [&#xA;    'collection_query' =&gt; [&#xA;        'security' =&gt; 'is_granted(&quot;ROLE_ADMIN&quot;)'&#xA;    ],&#xA;    'item_query',&#xA;],&#xA;    itemOperations: [&#xA;    'get',&#xA;],&#xA;    denormalizationContext: ['groups' =&gt; ['user:write']],&#xA;    normalizationContext: ['groups' =&gt; ['user:read']],&#xA;    output: UserOutput::class&#xA;)]&#xA;...&#xA;&#xA;//src/Entity/Book.php&#xA;#[ApiResource(&#xA;    collectionOperations: [&#xA;    'get' =&gt; [&#xA;        'security' =&gt; 'is_granted(&quot;ROLE_ADMIN&quot;)'&#xA;    ],&#xA;],&#xA;    graphql: [&#xA;    'collection_query' =&gt; [&#xA;        'security' =&gt; 'is_granted(&quot;ROLE_ADMIN&quot;)'&#xA;    ],&#xA;    'item_query',&#xA;],&#xA;    itemOperations: [&#xA;    'get',&#xA;],&#xA;    denormalizationContext: ['groups' =&gt; ['book:write']],&#xA;    normalizationContext: ['groups' =&gt; ['book:read']],&#xA;    output: BookOutput::class&#xA;)]&#xA;...&#xA;</code></pre>&#xA;<p>I want to allow only admins to view the collections of both entities, but I also need to be able to get the nested collection:</p>&#xA;<pre><code>query {&#xA;    user(id: &quot;/api/users/01F63NKKN7DWYB74K6G5N33DPP&quot;) {&#xA;    id&#xA;    books{&#xA;      edges{&#xA;        node{&#xA;          id&#xA;        }&#xA;      }&#xA;    }&#xA;    }&#xA;}&#xA;&#xA;Result: Access Denied.&#xA;</code></pre>&#xA;<p>I can get a collection using REST, but how do I get a collection using GraphQL? I'm confused. What can I do in this situation?</p>&#xA;<p>UPD:</p>&#xA;<pre><code>//src/Dto/UserOutput.php&#xA;final class UserOutput&#xA;{&#xA;    #[Groups(['user:read', 'book:read'])]&#xA;    public Ulid $id;&#xA;&#xA;    ...&#xA;&#xA;    /** @var Book[] */&#xA;    #[Groups(['user:read'])]&#xA;    public iterable $books;&#xA;}&#xA;&#xA;//src/Dto/BookOutput.php&#xA;final class BookOutput&#xA;{&#xA;    #[Groups(['book:read', 'user:read'])]&#xA;    public Ulid $id;&#xA;&#xA;    #[Groups(['book:read'])]&#xA;    public User $user;&#xA;&#xA;    ...&#xA;}&#xA;</code></pre>&#xA;",4846437,,4846437,2021-05-24 13:44:46,2021-05-24 13:44:46,How do I get a nested collection correctly using GraphQL?,<symfony><graphql><api-platform.com>,0,2,0,2021-05-24 13:24:20
67675782,2,,67658812,0,,"<p>To anyone else that notices this strange behaviour: The reason why <code>CommentInput</code> is included in the <code>CreatePostInput</code>, whilst the other custom types are not, is because <code>Comment</code> was the only type that I had forgot to label with an @model directive. I assume that this means that AppSync then views this type on the <code>comments</code> field as a set of nested fields, rather than an object with its own DynamoDB table. I have asked the AWS Amplify team and will update this answer when I hear more from them.</p>&#xA;",6111475,,,,2021-05-24 16:35:56,"",,0,0,0,2021-05-24 16:35:56
67677933,1,,,0,31,"<p>In my project, we plan to implement a progressive disclosure (displaying some part of UI data if the user has permissions). Basically, we are using react + apollo client with hooks + graphqltag.</p>&#xA;<p>But the problem is no that how to hide some part of UI but how to split queries by permissions. So right now for pages, we create a single query containing many &quot;subqueries&quot; for different kinds of data. For example :</p>&#xA;<pre><code>export const GET_DATA_X= gql`&#xA;  query getDataX(&#xA;    $applicationId: ID!&#xA;    $dateFrom: String!&#xA;    $dateTo: String!&#xA;    $displayMode: String!&#xA;  ) {&#xA;    applicationShipDates(&#xA;      applicationId: $applicationId&#xA;      dateFrom: $dateFrom&#xA;      dateTo: $dateTo&#xA;      displayMode: $displayMode&#xA;    ) {&#xA;      periodStartDate&#xA;      dates&#xA;    }&#xA;    graphStatistics(&#xA;      applicationId: $applicationId&#xA;      dateFrom: $dateFrom&#xA;      dateTo: $dateTo&#xA;    ) {&#xA;      totalVisits&#xA;      totalConversions&#xA;      conversionRate&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>And right now each part of this query will be available if the user will have permission. On the backend side, it's already handled. We throw null/empty array and error. But IMO we shouldn't even ask for this part of the data. And that is the question. Do you have any suggestions on how to do this with an apollo client?</p>&#xA;<p>Right now I have two ideas on how to do that:</p>&#xA;<ol>&#xA;<li>Split queries into single and make a few API calls if the user has permission, otherwise skip it</li>&#xA;<li>Write a custom function where I will pass as a prop array of objects, including query definition and query required permissions. I will filter this array by permission and from small query definitions like <code>applicationShipDates</code> or <code>graphStatistics</code> i will create a big query like <code>getDataX</code> which will includes few &quot;subqueries&quot;</li>&#xA;</ol>&#xA;",4475632,,,,2021-05-25 13:50:20,Handle progressive disclosure on frontend with Apollo Client,<reactjs><permissions><graphql><apollo-client><graphql-tag>,1,2,0,2021-05-24 19:31:27
67686362,1,,,1,549,"<p>I use AWS amplify with auth, dynamodb and graphql API for react native app. Now I need to add the existing backend to web react js app. I run the command below and get amplify backend folder with API, auth, and functions. There is a missing graphql folder (GraphQL client ) for queries and mutations. How to get GraphQL client folder for fetching data from db?</p>&#xA;<pre><code>amplify pull --appId someidgoeshere --envName dev&#xA;</code></pre>&#xA;",10601541,,,,2021-05-25 12:05:20,Using existing aws amplify project in react js,<reactjs><graphql><aws-amplify><aws-amplify-cli><amplify>,2,0,0,2021-05-25 10:42:35
67687567,2,,67686362,0,,"<p>You can also use <code>amplify api gql-compile</code> to re-compile your <code>src/graphql/*</code> queries and mutations.</p>&#xA;<p><a href=""https://docs.amplify.aws/cli/graphql-transformer/overview#update-schema"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql-transformer/overview#update-schema</a></p>&#xA;",3149835,,,,2021-05-25 12:05:20,"",,0,0,0,2021-05-25 12:05:20
67726602,1,67728448,,1,144,"<p>I'm following the guide from Hasura on how to optimize my queries found at:</p>&#xA;<p><a href=""https://hasura.io/docs/latest/graphql/core/databases/postgres/queries/performance.html#data-validation-pg-indexes"" rel=""nofollow noreferrer"">https://hasura.io/docs/latest/graphql/core/databases/postgres/queries/performance.html#data-validation-pg-indexes</a></p>&#xA;<p>but my queries still are executing sequential scans instead of index scans and I don't understand why.</p>&#xA;<p>I'm using non-nullable scalar variables and I've created indexes but the problem persists.</p>&#xA;<p>Index:</p>&#xA;<p><code>CREATE INDEX shop_index ON &quot;shop&quot; (shop_origin);</code></p>&#xA;<p>Query:</p>&#xA;<pre><code>query get_storefront_data ($shop_origin: String!) {&#xA;      shop_by_pk(shop_origin: $shop_origin) {&#xA;        app_subscription_type&#xA;        currency_code&#xA;        usage_count&#xA;      }      &#xA;    }&#xA;</code></pre>&#xA;<p>Variables:</p>&#xA;<pre><code>{&#xA;  &quot;shop_origin&quot;: &quot;test.myshopify.com&quot;&#xA;}&#xA;</code></pre>&#xA;<p>Execution plan (generated by the &quot;Analyze&quot; button in the Hasura console):</p>&#xA;<pre><code>Aggregate  (cost=1.05..1.07 rows=1 width=32)&#xA;  -&gt;  Seq Scan on shop  (cost=0.00..1.04 rows=1 width=16)&#xA;        Filter: (shop_origin = 'test.myshopify.com'::text)&#xA;  SubPlan 1&#xA;    -&gt;  Result  (cost=0.00..0.01 rows=1 width=32)&#xA;</code></pre>&#xA;<p>What am I doing wrong and how can I get the query execute Index scans instead of Sequential scans?</p>&#xA;",5131575,,,,2021-05-27 19:03:42,Why isn't my hasura query using an index scan?,<postgresql><indexing><graphql><query-optimization><hasura>,1,1,0,2021-05-27 16:49:22
67730092,2,,67645543,0,,"<p>I think the easiest solution would be processing the API request in a lambda function that validates the request (product count &lt; 100) before having the script write to the DB.  Then you can null out the built-in mutations for the model to prevent unintended access.</p>&#xA;<p><strong>Example Schema:</strong></p>&#xA;<pre><code>type Mutation {&#xA;  addProduct(input: ProductAddInput): ProductAddOutput @function(name: &quot;productLambda-${env}&quot;)&#xA;}&#xA;type Product &#xA;  @model(queries: null, mutations: null, subscriptions: null) /* update these to what you need */&#xA;  @auth(rules: [{ allow: owner }]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;}&#xA;</code></pre>&#xA;<p>In Lambda you can pull the username from the <code>event.identity</code> property and that should correlate to the owner field in the db.  Since the AWS package is automatically loaded you should be looking at very fast script execution as long as your db indexes are set properly.</p>&#xA;<p>For the user product count, I see a couple of options:</p>&#xA;<ul>&#xA;<li>A secondary index set up on the owner field so you don't do a ton of&#xA;scans</li>&#xA;<li>If you have a user table, you could add a field that counts&#xA;the products for each user and just update that table any time you&#xA;update the product table.</li>&#xA;</ul>&#xA;",1073837,,,,2021-05-27 21:16:14,"",,0,0,0,2021-05-27 21:16:14
67741811,2,,67733869,0,,"<p>Group By is not currently exposed by default in the generated GraphQL API. You can extend the API using <a href=""https://hasura.io/docs/latest/graphql/core/databases/postgres/schema/views.html"" rel=""nofollow noreferrer"">Postgres Views</a> or <a href=""https://hasura.io/docs/latest/graphql/core/databases/postgres/schema/custom-functions.html"" rel=""nofollow noreferrer"">Functions</a> to achieve the functionality you are looking for</p>&#xA;",1364771,,,,2021-05-28 15:37:56,"",,0,1,0,2021-05-28 15:37:56
67768889,1,,,0,74,"<p>I am trying to convert the graph structure to json.</p>&#xA;<p>I have the following structure</p>&#xA;<pre><code>CREATE (ui)-[:CONTAINS]-&gt;(graphStyle:SchemaType {id: randomUUID(), name:'graphStyle', type:'array', shape:'star'})&#xA;CREATE (graphStyle)-[:CONTAINS]-&gt;(graphStyleNode:Field {id: randomUUID(), name:'node', type:'object', shape:'star'})&#xA;CREATE (graphStyleNode)-[:CONTAINS]-&gt;(graphStyleNodeSelector:Field {id: randomUUID(), name:'selector', type:'string', value: &quot;node&quot;, shape:'star'})&#xA;CREATE (graphStyleNode)-[:CONTAINS]-&gt;(graphStyleNodeStyle:Field {id: randomUUID(), name:'style', type:'object', value: &quot;node&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleFontFamily:Field {id: randomUUID(), name:&quot;'font-family'&quot;, type:'string', value: &quot;-apple-system, Oxygen-Sans, Ubuntu, Cantarell, Helvetica Neue, sans-serif&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleFontSize:Field {id: randomUUID(), name:&quot;'font-size'&quot;, type:'string', value: &quot;8px&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleWidth:Field {id: randomUUID(), name:'width', type:'function', value: '(ele:any) =&gt; {if (ele.data().shape !== &quot;round-rectangle&quot;) return 60; else return 100}', shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleHeight:Field {id: randomUUID(), name:'height', type:'function', value: '(ele:any) =&gt; {if (ele.data().shape !== &quot;round-rectangle&quot;) return 60; else return 40}', shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleBackgroundColor:Field {id: randomUUID(), name:&quot;'background-color'&quot;, type:'string', value: &quot;#5E6366&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleLabel:Field {id: randomUUID(), name:'label', type:'string', value: &quot;&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleTextHAlign:Field {id: randomUUID(), name:&quot;'text-halign'&quot;, type:'string', value: &quot;center&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleTextVAlign:Field {id: randomUUID(), name:&quot;'text-valign'&quot;, type:'string', value: &quot;center&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleTextMarginY:Field {id: randomUUID(), name:&quot;'text-margin-y'&quot;, type:'string', value: &quot;5px&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleTextWrap:Field {id: randomUUID(), name:&quot;'text-wrap'&quot;, type:'string', value: &quot;ellipsis&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleTextMaxWidth:Field {id: randomUUID(), name:&quot;'text-max-width'&quot;, type:'string', value: &quot;50px&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleColor:Field {id: randomUUID(), name:'color', type:'string', value: &quot;#FFFFFF&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleOverlayOpacity:Field {id: randomUUID(), name:&quot;'overlay-opacity'&quot;, type:'number', value: 0, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleTextBackgroundOpacity:Field {id: randomUUID(), name:&quot;'text-background-opacity'&quot;, type:'number', value: 1, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleBackgroundPositionY:Field {id: randomUUID(), name:&quot;'background-position-y'&quot;, type:'string', value: &quot;30%&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleBorderWidth:Field {id: randomUUID(), name:&quot;'border-width'&quot;, type:'string', value: &quot;2px&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleShape:Field {id: randomUUID(), name:&quot;'shape'&quot;, type:'string', value: &quot;data(shape)&quot;, shape:'star'})&#xA;CREATE (graphStyleNodeStyle)-[:CONTAINS]-&gt;(graphStyleNodeStyleShape:Field {id: randomUUID(), name:&quot;'shape'&quot;, type:'string', value: &quot;data(shape)&quot;, shape:'star'})&#xA;</code></pre>&#xA;<p>And I would like to return:</p>&#xA;<pre><code>{&#xA;  style: [{&#xA;    selector: &quot;node&quot;,&#xA;    style: {&#xA;      &quot;font-family&quot;:&#xA;        &quot;-apple-system, Oxygen-Sans, Ubuntu, Cantarell, Helvetica Neue, sans-serif&quot;,&#xA;      &quot;font-size&quot;: &quot;8px&quot;,&#xA;      width: (ele:any) =&gt; {if (ele.data().shape !== &quot;round-rectangle&quot;) return 60; else return 100},&#xA;      height: (ele:any) =&gt; {if (ele.data().shape !== &quot;round-rectangle&quot;) return 60; else return 40},&#xA;      &quot;background-color&quot;: &quot;#5E6366&quot;,&#xA;      label: &quot;&quot;,&#xA;      &quot;text-halign&quot;: &quot;center&quot;,&#xA;      &quot;text-valign&quot;: &quot;center&quot;,&#xA;      &quot;text-margin-y&quot;: &quot;5px&quot;,&#xA;      &quot;text-wrap&quot;: &quot;ellipsis&quot;,&#xA;      &quot;text-max-width&quot;: &quot;50px&quot;,&#xA;      color: &quot;#ffffff&quot;,&#xA;      &quot;overlay-opacity&quot;: 0,&#xA;      &quot;text-background-opacity&quot;: 1,&#xA;      &quot;background-position-y&quot;: &quot;30%&quot;,&#xA;      &quot;border-width&quot;: &quot;2px&quot;,&#xA;      &quot;shape&quot;: &quot;data(shape)&quot;&#xA;    }]&#xA;},&#xA;</code></pre>&#xA;<p>The problem becomes when using apoc.convert.toJson that I cannot set the json key to be the node name and value to be the node value. The json is a cytoscape js style so that's why it has suck a weird structure.</p>&#xA;",16082225,,,,2021-05-31 06:29:51,Neo4j Cypher Return custom JSON structure,<json><neo4j><graphql><cypher><cytoscape.js>,0,2,0,2021-05-31 06:29:51
67790526,1,,,0,381,<p>I am building an application using AWS AppSync which fetches the Posts from the AWS Appsync and is rendered via the FutureBuilder Widget &gt; ListView.Builder&#xA;Is there a way I can grab it as a stream and use a stream view builder to render the same as there is no official documentation provided by AWS Amplify regarding this?</p>&#xA;,10656137,,,,2021-07-30 11:39:35,Flutter StreamBuilder using AWS AppSync Or DataStore,<amazon-web-services><flutter><graphql><amplify>,1,0,0,2021-06-01 14:16:37
67808735,1,,,0,79,"<p>I have a mutation which has a resolver that simply inserts a record into the database, but the problem is that <code>createPost</code> keeps on returning an empty array and as a result I'm getting this error <code>&quot;message&quot;: &quot;Cannot return null for non-nullable field Post.text.&quot;</code></p>&#xA;<p><code>Mutation/index.js</code></p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { query } from &quot;@/server/db&quot;;&#xA;&#xA;export const createPost = async (_, { post }) =&gt; {&#xA;  const createPost = await query(&#xA;    `&#xA;    INSERT INTO posts (text, user_id)&#xA;    VALUES (?, ?)&#xA;  `,&#xA;    [post.text, post.user_id]&#xA;  );&#xA;  console.log(createPost);&#xA;  return createPost;&#xA;};&#xA;&#xA;&#xA;</code></pre>&#xA;",12870119,,,,2021-06-02 16:38:43,Resolver returning empty array but cause is not identifiable,<javascript><node.js><sqlite><graphql><apollo>,1,7,0,2021-06-02 16:06:18
67809199,2,,67808735,0,,"<p>According to sqlite docs (linked in the comment above), adding a <code>RETURNING</code> clause to the query, like bellow:</p>&#xA;<pre><code>const createPost = await query(&#xA;    `&#xA;    INSERT INTO posts (text, user_id)&#xA;    VALUES (?, ?)&#xA;  `,&#xA;    [post.text, post.user_id]&#xA;    RETURNING *&#xA;  );&#xA;&#xA;</code></pre>&#xA;<p>Will return the newly inserted values from the DB, thus, it will become the value of <code>createPost</code>.</p>&#xA;",3772772,,,,2021-06-02 16:38:43,"",,0,3,0,2021-06-02 16:38:43
67813417,1,,,1,130,"<p>I'm building React App with Amplify and Apollo.<br />&#xA;I'd like to save user setting on Dynamo DB through AppSync. One user has one or no setting record.<br />&#xA;For users without setting record, default setting is applied.</p>&#xA;<p>I tried...</p>&#xA;<ul>&#xA;<li>use userSub as unique key on DynamoDB</li>&#xA;<li>on creating, keep returned value (id) from mutation with useState to specify id to update</li>&#xA;</ul>&#xA;<p>I've got troubles on trying either of two.</p>&#xA;<ul>&#xA;<li>userSub cannot be primary key. Is there any way to update (or create if not exist) record by userSub?</li>&#xA;<li>returned value from mutation is always undefined. It seems to be because of async. How do I keep it with useState?</li>&#xA;</ul>&#xA;<p>Any ideas?</p>&#xA;",14461768,,,,2021-06-03 19:32:02,Create or Update 1:1 record on Dynamo DB related to Cognito User through AppSync with Amplify,<reactjs><aws-amplify><apollo-client><react-apollo><aws-appsync>,1,0,0,2021-06-02 22:47:15
67814189,2,,67658709,0,,"<p>As <a href=""https://stackoverflow.com/users/6124657/xadm"">xadm</a> mentioned, the data source is not GraphQL friendly. I removed the object key and convert the object into list before feeding into GraphQL.</p>&#xA;<p>Now everything works as expected. Seems getting all keys would not be very feasible.</p>&#xA;",1434847,,,,2021-06-03 01:06:14,"",,0,0,0,2021-06-03 01:06:14
67817531,2,,50596390,0,,<p>I had a similar issue.</p>&#xA;<p>for me the problem was lying with the return type of the schema . As i was doing a query with PK on dynamodb table ..it was returning a list of items or data you can say . but in my schema i had a schema define as a singular struct format .</p>&#xA;<p>Error was resolved when i just made the return type in schema as list of items .</p>&#xA;<p>like</p>&#xA;<pre><code>type mySchema { &#xA;[ID]&#xA;}&#xA;</code></pre>&#xA;<p>instead of&#xA;type mySchema</p>&#xA;<pre><code>{ &#xA;id : ID!&#xA;name : String!&#xA;details : String!&#xA;}&#xA;</code></pre>&#xA;<p>This error is thrown for multiple reasons . so your reason could be else but still i just posted one of the scenarios.</p>&#xA;,14462806,,,,2021-06-03 07:52:58,"",,0,0,0,2021-06-03 07:52:58
67827677,2,,67813417,0,,"<p>You could use a normal ID for the relationship, and add a GSI using @key on the Settings table called <code>byOwner</code>. This should give you a new query that lets you find the setting record byOwner. Here are some examples <a href=""https://docs.amplify.aws/cli/graphql-transformer/key#designing-data-models-using-key"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql-transformer/key#designing-data-models-using-key</a></p>&#xA;",3149835,,,,2021-06-03 19:32:02,"",,0,1,0,2021-06-03 19:32:02
67829471,2,,67829074,1,,"<p>you can return the buffer as a base64 encoded string to the frontend.</p>&#xA;<pre><code>data.Body.toString('base64');&#xA;</code></pre>&#xA;<p>then add the image as a data-uri in the html.</p>&#xA;<pre><code>&lt;img src=&quot;data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAUA&#xA;AAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO&#xA;    9TXL0Y4OHwAAAABJRU5ErkJggg==&quot; alt=&quot;sunrise&quot; /&gt;&#xA;</code></pre>&#xA;<p>I have tested the code below and it returns me a base64 string of the image.</p>&#xA;<pre><code>import { S3 } from 'aws-sdk';&#xA;import { GetObjectOutput } from 'aws-sdk/clients/s3';&#xA;&#xA;&#xA;const s3 = new S3({ region: 'ap-southeast-2'});&#xA;&#xA;(async () =&gt; {&#xA;&#xA;  const file: GetObjectOutput = await s3.getObject({&#xA;    Bucket: 'getobject103',&#xA;    Key: 'sample.jpeg'&#xA;  }).promise();&#xA;&#xA;  console.log(file.Body.toString('base64'));&#xA;&#xA;})()&#xA;</code></pre>&#xA;<p>In addition to the code above, I just wanted to illustrate you how I tested it with a screenshot.</p>&#xA;<p><a href=""https://i.stack.imgur.com/VVi48.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VVi48.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Another solution is to use s3-presigned URL. Basically you use AWS credential(that has permissions to access the s3 object) from a backend service(such as express) and generate a pre-signed url. you can use the presigned url as the image url in the html. Remember, each presigned url generated gives access to a single image.</p>&#xA;<blockquote>&#xA;<p>All objects by default are private. Only the object owner has permission to access these objects. However, the object owner can optionally share objects with others by creating a presigned URL, using their own security credentials, to grant time-limited permission to download the objects <a href=""https://docs.aws.amazon.com/AmazonS3/latest/userguide/ShareObjectPreSignedURL.html"" rel=""nofollow noreferrer"">Sharing an object with a presigned URL</a></p>&#xA;</blockquote>&#xA;<p>[how to generate s3 presigned url in nodejs<a href=""https://stackoverflow.com/questions/59426408/accessing-aws-s3-signed-url-via-node-js-express/59426566#59426566"">3</a></p>&#xA;",1448679,,1448679,2021-06-04 04:03:18,2021-06-04 04:03:18,"",,0,4,0,2021-06-03 22:41:17
67847396,2,,67845648,0,,"<p>you can simply send your whole <strong>where</strong> object from your front-end!&#xA;That way you can simply omit the null variables at all. For this, you need to <em>tweak your query</em> a little bit.</p>&#xA;<pre><code>query get_student_organization($wh_frontend: student_organization_bool_exp!) {&#xA;  validation: student_organization(where: $wh_frontedn) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<blockquote>&#xA;<p>In the variables section, add your non-null variables only:</p>&#xA;</blockquote>&#xA;<pre><code>{&#xA;  &quot;where_fe&quot;: {&#xA;    &quot;authorId&quot;: 5455&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>so this time your haven't sent the <strong>schoolId</strong>, <strong>groupId</strong> and <strong>gradeId</strong> which serves your need for a <strong>wild-card</strong>.</p>&#xA;",14529454,,1839439,2021-06-05 07:38:32,2021-06-05 07:38:32,"",,0,1,0,2021-06-05 07:33:06
67847912,1,,,0,419,"<p>I am new to Rest Assured &amp; GraphQL, Please can someone help me to create the body request from the following output:</p>&#xA;<pre><code>{&#xA;&quot;variables&quot;: {&#xA;    &quot;EmployeeName&quot;: &quot;ABC&quot;,&#xA;    &quot;EmployeeDept&quot;: &quot;Computers&quot;,&#xA;    &quot;EmployeeStatus&quot;: false,&#xA;    &quot;employeeRegion&quot;: [{&#xA;        &quot;country&quot;: &quot;USA&quot;,&#xA;        &quot;values&quot;: [&quot;NewYork&quot;]&#xA;    }]&#xA;}&#xA;</code></pre>&#xA;<p>}</p>&#xA;<p>My sample:</p>&#xA;<pre><code>ObjectNode variables = mapper.createObjectNode()&#xA;            .put(&quot;EmployeeName&quot;, EmployeeName)&#xA;            .put(&quot;EmployeeDept&quot;, &quot;EmployeeDept&quot;)&#xA;            .put(&quot;EmployeeStatus&quot;, &quot;EmployeeStatus&quot;)&#xA;</code></pre>&#xA;<p>Not sure how to construct the employeeRegion in variables?</p>&#xA;",16135634,,,,2021-06-19 03:01:09,JSON Array with multiple parameters for POST request using Rest Assured,<graphql><rest-assured><query-parameters><graphql-java>,1,0,0,2021-06-05 08:52:27
67885081,1,,,1,262,"<p>In Postgres, the <a href=""https://www.postgresql.org/docs/9.1/functions-array.html"" rel=""nofollow noreferrer"">overlap (&quot;&amp;&amp;&quot;) operator</a> of arrays are used to check if two arrays have any element in common.</p>&#xA;<p>For example,</p>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th>Query</th>&#xA;<th>Result</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td>ARRAY[1,4,3] &amp;&amp; ARRAY[2,1]</td>&#xA;<td>true</td>&#xA;</tr>&#xA;<tr>&#xA;<td>ARRAY[1,4,3] &amp;&amp; ARRAY[2,5]</td>&#xA;<td>false</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div>&#xA;<p><strong>Is there anything similar in GraphQL?</strong></p>&#xA;<p>Also, is there anything I can use in Hasura for this?</p>&#xA;<hr />&#xA;<ul>&#xA;<li>A more specific real use case I can think of is as follows. (I just made them up just for clarification and did not run or validate the syntax.)</li>&#xA;</ul>&#xA;<pre><code>// Assume a you want to find all restaurants with any of the selected cuisines.&#xA;&#xA;const restaurantA = {..., cuisineType: ['Fusion', 'Chinese', 'Japanese', 'Korean']}&#xA;const restaurantB = {..., cuisineType: ['Vegetarian', 'Thai']}&#xA;const restaurantC = {..., cuisineType: ['European']}&#xA;&#xA;// Assume the data above is stored in Postgres (as an array in column field, not using a bridge table.&#xA;&#xA;const SQL_1 = &quot;SELECT * &#xA;               FROM restaurants &#xA;               WHERE cuisine_type &amp;&amp; ['Korean', 'Japanese']&quot; // Expect restaurantA and restaurantC&#xA;const SQL_2 = &quot;SELECT * &#xA;               FROM restaurants &#xA;               WHERE cuisine_type &amp;&amp; ['Vegetarian', 'European']&quot; // Expect restaurantB and restaurantC&#xA;&#xA;### GOAL: I want to use GraphQL, Apollo, Hasura to have the same effect as SQL_1 and SQL_2&#xA;&#xA;</code></pre>&#xA;",6746457,,6746457,2021-09-06 07:17:57,2022-02-24 17:26:25,What is the equivalent of Postgres' array overlap (&&) function in GraphQL?,<javascript><postgresql><graphql><apollo><hasura>,0,4,0,2021-06-08 09:35:42
67886190,1,67886326,,2,396,"<p>I am using the graphql and batch-loader gems and running into this N+1 query:</p>&#xA;<p>I have a calendar appointment that belongs to an account, and when we display the appointment time we base it on the account's time zone.</p>&#xA;<pre><code>def appointment_time&#xA;  read_attribute(:appointment_time).in_time_zone(self.account.timezone)&#xA;end&#xA;</code></pre>&#xA;<pre><code>calendarAppts {&#xA;  appointmentTime&#xA;}&#xA;</code></pre>&#xA;<p>results in an N+1 query</p>&#xA;<pre><code>POST /graphql&#xA;USE eager loading detected&#xA;  CalendarAppt =&gt; [:account]&#xA;  Add to your query: .includes([:account])&#xA;Call stack&#xA;  /....rb:866:in `appointment_time'&#xA;  /.../app/controllers/graphql_controller.rb:17:in `execute'&#xA;</code></pre>&#xA;<p>And I have many other similar examples of instance methods creating N+1 queries and unsure the best way to tackle this.</p>&#xA;<p>So far I have just seen ways to conquer eager loading associations directly. Do I need to treat each of such method as an association?</p>&#xA;<p>For instance this is how I eager load an account itself, do I need to do something similar when I call this method as well?</p>&#xA;<pre><code>    field :account,&#xA;          AccountType,&#xA;          null: true,&#xA;          resolve: lambda { |obj, _args, _ctx|&#xA;            BatchLoader::GraphQL.for(obj.account_id).batch do |account_ids, loader|&#xA;              Account.where(id: account_ids).each { |account| loader.call(account.id, account) }&#xA;            end&#xA;          }&#xA;</code></pre>&#xA;<p>Also then if we did something like this would it call accounts twice?</p>&#xA;<pre><code>calendarAppts {&#xA;  appointmentTime&#xA;  account {&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4993912,,299774,2021-06-08 13:11:22,2021-06-08 13:11:22,Graphql Ruby N + 1 Queries because of method calling another relationship,<ruby-on-rails><graphql><lazy-loading><graphql-ruby>,1,0,0,2021-06-08 11:39:22
67887972,1,,,0,114,"<p>Now, I'm building a social media website using React + Amplify.&#xA;And article feature is one of the main feature of it.&#xA;But now, I'm facing a difficult issue for me.</p>&#xA;<p>I'm trying to get such kind of JSON object from my API.</p>&#xA;<pre><code>{&#xA;  &quot;Article&quot;: {&#xA;    &quot;id&quot;: &quot;some ID&quot;,&#xA;    &quot;title&quot;: &quot;some String&quot;,&#xA;    &quot;content&quot;: &quot;some Content&quot;,&#xA;    &quot;comments&quot;: [&#xA;      &quot;0&quot;: {&#xA;        &quot;comment&quot;: {&#xA;          &quot;id&quot;: &quot;some ID&quot;,&#xA;          &quot;content&quot;: &quot;some Content&quot;,&#xA;          &quot;owner&quot;: {&#xA;            &quot;id&quot;: &quot;some ID&quot;,&#xA;            &quot;name&quot;: &quot;name&quot;,&#xA;            &quot;avatar&quot;: &quot;avatar&quot;&#xA;          },&#xA;          &quot;replys&quot;: [&#xA;            &quot;0&quot;: {&#xA;              &quot;reply&quot;: {&#xA;                &quot;id&quot;: &quot;some ID&quot;,&#xA;                &quot;content&quot;: &quot;some Content&quot;,&#xA;                &quot;owner&quot;: {&#xA;                  &quot;id&quot;: &quot;some ID&quot;,&#xA;                  &quot;name&quot;: &quot;name&quot;,&#xA;                  &quot;avatar&quot;: &quot;avatar&quot;&#xA;                }&#xA;              }&#xA;            ]&#xA;          }&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>For this, I've created schemas on my backend (Amplify API) like this.</p>&#xA;<pre><code>    type Article&#xA;      @model&#xA;      @key( name: &quot;articleByOwner&quot; fields: [&quot;ownerID&quot;, &quot;createdAt&quot;] queryField: &quot;articleByOwner&quot;)&#xA;      @key( name: &quot;articleByStatus&quot; fields: [&quot;status&quot;, &quot;createdAt&quot;] queryField: &quot;articleByStatus&quot;) {&#xA;      id: ID!&#xA;      title: String!&#xA;      content: String!&#xA;      comments: [Comment] @connection(keyName: &quot;commentByArticle&quot;, fields: [&quot;id&quot;])&#xA;      createdAt: AWSDateTime!&#xA;    }&#xA;    &#xA;    type Comment&#xA;      @model&#xA;      @key(name: &quot;commentByArticle&quot; fields: [&quot;articleID&quot;, &quot;createdAt&quot;] queryField: &quot;commentByArticle&quot;) &#xA;    {&#xA;      id: ID!&#xA;      content: String!&#xA;      ownerID: ID!&#xA;      owner: Userinfo @connection(fields: [&quot;ownerID&quot;])&#xA;      articleID: ID!&#xA;      replys: [Reply] @connection(keyName: &quot;replyByComment&quot;, fields: [&quot;id&quot;])&#xA;      createdAt: AWSDateTime!&#xA;    }&#xA;    &#xA;    type Reply&#xA;      @model&#xA;      @key(name: &quot;replyByComment&quot; fields: [&quot;commentID&quot;, &quot;createdAt&quot;] queryField: &quot;replyByComment&quot; ) &#xA;    {&#xA;      id: ID!&#xA;      content: String!&#xA;      ownerID: ID!&#xA;      owner: Userinfo @connection(fields: [&quot;ownerID&quot;])&#xA;      commentID: ID!&#xA;      createdAt: AWSDateTime!&#xA;    }&#xA;&#xA;type Userinfo @model {&#xA;  id: ID!&#xA;  name: String&#xA;  avatar: String&#xA;  createdAt: AWSDateTime!&#xA;}&#xA;</code></pre>&#xA;<p>But now, I can get only until comments.</p>&#xA;<p>I want this to be done until owner and replyes.</p>&#xA;<p>current state is like this. after executing getArticle query.&#xA;This query is generated when I push my project to the cloud using &quot;amplify push&quot; command.</p>&#xA;<pre><code>{&#xA;  &quot;Article&quot;: {&#xA;    &quot;id&quot;: &quot;some ID&quot;,&#xA;    &quot;title&quot;: &quot;some String&quot;,&#xA;    &quot;content&quot;: &quot;some Content&quot;,&#xA;    &quot;comments&quot;: [&#xA;      &quot;0&quot;: {&#xA;        &quot;comment&quot;: {&#xA;          &quot;id&quot;: &quot;some ID&quot;,&#xA;          &quot;content&quot;: &quot;some Content&quot;,&#xA;          &quot;owner&quot;: { nextToken: null },&#xA;          &quot;replys&quot;: { nextToken : null }&#xA;        }&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Is there any solution for this?</p>&#xA;",14860805,,100297,2021-06-13 15:03:04,2021-06-13 15:03:04,How to Get Multilayer JSON object from Graphql API in Amplify React APP,<json><reactjs><graphql><aws-amplify>,0,7,0,2021-06-08 13:29:38
67927124,1,67931519,,0,672,"<p>I have a quite a interesting problem regarding table primary key when inserting new rows to Postgres DB using Hasura.&#xA;In a short summary this is what happened:&#xA;There was old backend for the app that I am currently developing which used MySql database and my task was to move all of data to new Hasura/Postgress DB, so i wrote scripts that move that data and it went fine. Script inserted all of the users data including their primary keys because of user relationship with other tables.&#xA;Problem occurred when i tried to insert new users with Hasura mutation:</p>&#xA;<blockquote>&#xA;<p>Uniqueness violation. duplicate key value violates unique constraint&#xA;&quot;users_pkey&quot;</p>&#xA;</blockquote>&#xA;<p>What I assume happened is: My PK on users is not default type <strong>integer/auto-increment</strong> ,&#xA;it is:</p>&#xA;<blockquote>&#xA;<p>id - integer, primary key, unique, default: nextval('users_id_seq'::regclass)</p>&#xA;</blockquote>&#xA;<p>and when i try to insert new row it tries to assign it latest PK that Hasura remembers it inserted and user with that PK is already imported from MySql DB.</p>&#xA;<p>Is there some way to edit my table PK so it is integer/auto-increment or someone has some creative solution.&#xA;Thanks in advance!</p>&#xA;",12728201,,,,2021-06-11 05:04:48,Hasura - Postgres database table auto increment PK problem,<mysql><postgresql><graphql><hasura>,1,0,0,2021-06-10 19:05:19
67942151,1,67944107,,0,99,"<p>I want to fetch records of all male or female students from <em>class 5 to class 11</em> who have secured between <strong>x1</strong> and <strong>x2</strong> marks in maths, between <strong>y1</strong> and <strong>y2</strong> marks in science, between <strong>z1</strong> and <strong>z2</strong> marks in english and between <strong>w1</strong> and <strong>w2</strong> marks in social...</p>&#xA;<p>My model looks as follows:</p>&#xA;<pre><code>type StudentMarks&#xA;    @model&#xA;    @key(&#xA;        name: &quot;filterbyClassAndMarks&quot;&#xA;        fields: [&#xA;            &quot;gender&quot;&#xA;            &quot;classCode&quot;&#xA;            &quot;mathsMarks&quot;&#xA;            &quot;socialMarks&quot;&#xA;            &quot;englishMarks&quot;&#xA;            &quot;scienceMarks&quot;&#xA;        ]&#xA;        queryField: &quot;filterbyClassAndMarks&quot;&#xA;    )&#xA;    @auth(&#xA;        rules: [&#xA;            { allow: private, provider: iam, operations: [read] }&#xA;            { allow: public, provider: iam, operations: [read] }&#xA;        ]&#xA;    ) {&#xA;    id: ID!&#xA;    name: String&#xA;    gender: String&#xA;    classCode: String&#xA;    mathsMarks: String&#xA;    socialMarks: String&#xA;    englishMarks: String&#xA;    scienceMarks: String&#xA;}&#xA;</code></pre>&#xA;<p>The GSI created with gender as the partition key(hashkey) and compound sort/range key with classCode, mathMarks, socialMarks, scienceMarks, englishMarks fields <a href=""https://i.stack.imgur.com/5lwUd.png"" rel=""nofollow noreferrer"">is showing item count as 0.</a></p>&#xA;<p>I am trying to query using the following graphql:</p>&#xA;<pre><code>    const listOfStudents = await API.graphql({&#xA;                query: queries.filterbyClassAndMarks,&#xA;                variables: {&#xA;                    gender: &quot;m&quot;,&#xA;                    classCodeMathsMarksSocialMarksEnglishMarksScienceMarks: {&#xA;                        between: [&#xA;                            {&#xA;                                classCode: &quot;05&quot;,&#xA;                                mathsMarks: &quot;06&quot;,&#xA;                                scienceMarks: &quot;07&quot;,&#xA;                                englishMarks: &quot;04&quot;,&#xA;                                socialMarks: &quot;05&quot;,&#xA;                            },&#xA;                            {&#xA;                                classCode: &quot;11&quot;,&#xA;                                mathsMarks: &quot;90&quot;,&#xA;                                scienceMarks: &quot;91&quot;,&#xA;                                englishMarks: &quot;95&quot;,&#xA;                                socialMarks: &quot;92&quot;,&#xA;                            },&#xA;                        ],&#xA;                    },&#xA;                },&#xA;                authMode: &quot;AWS_IAM&quot;,&#xA;            });&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/p9UJe.png"" rel=""nofollow noreferrer"">This table</a> with 11 records should return 4 records as shown in green</p>&#xA;<p>The cloud watch logs are as below:</p>&#xA;<pre><code>{&#xA;    &quot;logType&quot;: &quot;RequestMapping&quot;,&#xA;    &quot;path&quot;: [&#xA;        &quot;filterbyClassAndMarks&quot;&#xA;    ],&#xA;    &quot;fieldName&quot;: &quot;filterbyClassAndMarks&quot;,&#xA;    &quot;resolverArn&quot;: &quot;arn:aws:appsync:ap-south-1:488377001042:apis/4tbr6xolzjfctl5tdbiur7jqnu/types/Query/resolvers/filterbyClassAndMarks&quot;,&#xA;    &quot;requestId&quot;: &quot;5de45e66-1a5d-44dd-80cc-1a5b93a3c3aa&quot;,&#xA;    &quot;context&quot;: {&#xA;        &quot;arguments&quot;: {&#xA;            &quot;gender&quot;: &quot;m&quot;,&#xA;            &quot;classCodeMathsMarksSocialMarksEnglishMarksScienceMarks&quot;: {&#xA;                &quot;between&quot;: [&#xA;                    {&#xA;                        &quot;classCode&quot;: &quot;05&quot;,&#xA;                        &quot;mathsMarks&quot;: &quot;06&quot;,&#xA;                        &quot;socialMarks&quot;: &quot;05&quot;,&#xA;                        &quot;englishMarks&quot;: &quot;04&quot;,&#xA;                        &quot;scienceMarks&quot;: &quot;07&quot;&#xA;                    },&#xA;                    {&#xA;                        &quot;classCode&quot;: &quot;11&quot;,&#xA;                        &quot;mathsMarks&quot;: &quot;90&quot;,&#xA;                        &quot;socialMarks&quot;: &quot;92&quot;,&#xA;                        &quot;englishMarks&quot;: &quot;95&quot;,&#xA;                        &quot;scienceMarks&quot;: &quot;91&quot;&#xA;                    }&#xA;                ]&#xA;            },&#xA;        },&#xA;        &quot;stash&quot;: {},&#xA;        &quot;outErrors&quot;: []&#xA;    },&#xA;    &quot;fieldInError&quot;: false,&#xA;    &quot;errors&quot;: [],&#xA;    &quot;parentType&quot;: &quot;Query&quot;,&#xA;    &quot;graphQLAPIId&quot;: &quot;4tbr6xolzjfctl5tdbiur7jqnu&quot;,&#xA;    &quot;transformedTemplate&quot;: &quot;{\&quot;version\&quot;:\&quot;2018-05-29\&quot;,\&quot;operation\&quot;:\&quot;Query&#xA;\&quot;,\&quot;limit\&quot;:100,\&quot;query\&quot;:{\&quot;expression\&quot;:\&quot;#gender = :gender AND #sortKey &#xA;BETWEEN :sortKey0 AND :sortKey1\&quot;,\&quot;expressionNames\&quot;:{\&quot;#gender\&quot;:\&quot;gender&#xA;\&quot;,\&quot;#sortKey\&quot;:\&quot;classCode#mathsMarks#socialMarks#englishMarks#scienceMarks&#xA;\&quot;},\&quot;expressionValues\&quot;:{\&quot;:gender\&quot;:{\&quot;S\&quot;:\&quot;m\&quot;},\&quot;:sortKey0\&quot;:{\&quot;S&#xA;\&quot;:\&quot;05#06#05#04#07\&quot;},\&quot;:sortKey1\&quot;:{\&quot;S\&quot;:\&quot;11#90#92#95#91\&quot;}}},\&quot;index&#xA;\&quot;:\&quot;filterbyClassAndMarks\&quot;,\&quot;scanIndexForward\&quot;:true}&quot;&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>It is showing the scanned count as 0 in the result:</p>&#xA;<pre><code> &quot;result&quot;: {&#xA;            &quot;items&quot;: [],&#xA;            &quot;scannedCount&quot;: 0&#xA;        },&#xA;</code></pre>&#xA;<p>And the final response is success with empty result as shown below:</p>&#xA;<pre><code>Object { data: {…} }&#xA;​&#xA;data: Object { filterbyClassAndMarks: {…} }&#xA;​​&#xA;filterbyClassAndMarks: Object { items: [], nextToken: null }&#xA;​​​&#xA;items: Array []&#xA;​​​​&#xA;length: 0&#xA;​​​​&#xA;&lt;prototype&gt;: Array []&#xA;​​​&#xA;nextToken: null&#xA;&#xA;Array []&#xA;</code></pre>&#xA;<p>Key conditions on compound sort keys is possible <a href=""https://aws.amazon.com/blogs/database/how-to-use-dynamodb-global-secondary-indexes-to-improve-query-performance-and-reduce-costs/"" rel=""nofollow noreferrer"">as per aws documentation</a>... I do not understand what I am missing exactly. Probably the GSI index is not properly configured/written.</p>&#xA;<p>Since most of the time the result is less than 1% of records in the table and is read intensive, scanning/reading all the records and filtering them is a very naive solution. Need better solution either with indices or otherwise.</p>&#xA;<p>SECOND EDIT:<br />&#xA;<a href=""https://i.stack.imgur.com/Zg2r2.png"" rel=""nofollow noreferrer"">Example of expected behavior of applying hash key and compound sort key before filtering.</a>. The example is given to highlight expected behavior only and does not indicate approximate percentage of records not read due to hash key or compound sort key.</p>&#xA;",16201095,,16201095,2021-06-13 11:39:45,2021-06-13 11:39:45,How to retrieve records efficiently using indices in dynamodb aws,<amazon-web-services><react-native><graphql><amazon-dynamodb><amplify>,1,2,0,2021-06-11 18:47:54
67950415,2,,59414066,1,,"<p><em>operation name</em> required.&#xA;Something like below, required the name.</p>&#xA;<pre><code>query {&#xA;  users {&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",6764514,,,,2021-06-12 15:40:09,"",,0,0,0,2021-06-12 15:40:09
67967163,2,,67937519,0,,"<p>GraphQL is not dynamic. You can either define multiple queries or add a custom scalar that will have a type like <code>any</code>.</p>&#xA;<p>It is somewhat a shame, but it will only allow you static types with no conditions. The only dynamic part is that you can decide what you want to download and what not. Trust me, I looked for it too.</p>&#xA;",3001856,,,,2021-06-14 08:36:19,"",,0,0,0,2021-06-14 08:36:19
67976184,2,,67971639,1,,"<p>No, currently it's not possible, Hasura always makes POST requests to the action handler:</p>&#xA;<blockquote>&#xA;<p>When the action is executed i.e. when the query or the mutation is called, Hasura makes a POST request to the handler with the action arguments and the session variables.</p>&#xA;</blockquote>&#xA;<p>Source: <a href=""https://hasura.io/docs/latest/graphql/core/actions/action-handlers.html#http-handler"" rel=""nofollow noreferrer"">https://hasura.io/docs/latest/graphql/core/actions/action-handlers.html#http-handler</a></p>&#xA;",116206,,,,2021-06-14 19:30:34,"",,0,0,0,2021-06-14 19:30:34
67982243,1,,,0,807,"<p>I was evaluating Hasura GraphQL engine + Postgres on Heroku and have run into a situation. I have 2 simple tables as shown below;&#xA;<strong>Employees</strong>&#xA;<a href=""https://i.stack.imgur.com/vKIgW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vKIgW.png"" alt=""Employees table"" /></a></p>&#xA;<p><strong>Payrolls</strong>&#xA;<a href=""https://i.stack.imgur.com/Yc0fR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Yc0fR.png"" alt=""Payroll Table"" /></a></p>&#xA;<p>Employees table and Payrolls have a foreign key employees.ID -&gt; payrolls.employee_id&#xA;Employees table has a foreign key with itself employees.manager_id -&gt; employees.ID</p>&#xA;<p>I have gone ahead and &quot;auto-tracked&quot; all the relationships in Hasura.</p>&#xA;<p>What I want to calculate is the &quot;sum of salaries&quot; for all employees reporting. But, when I'm using the Hasura explorer to form the GQL query, I'm not able to find the &quot;sum&quot; aggregation under the &quot;managed_employees_aggregate&quot; subquery.</p>&#xA;<p>The expected output is</p>&#xA;<pre><code>[&#xA;{&#xA;    &quot;full_name&quot;: &quot;anuj gupta&quot;,&#xA;    &quot;total_reportee_salary&quot;: 4000&#xA;},&#xA;{&#xA;    &quot;full_name&quot;: &quot;sowmya&quot;,&#xA;    &quot;total_reportee_salary&quot;: 2000&#xA;},&#xA;    ... &quot;total_reportee_salary&quot; for everyone else is 0&#xA;]&#xA;</code></pre>&#xA;<p>Any suggestions or references is really appreciated.</p>&#xA;",12997302,,,,2021-06-16 13:55:39,Hasura aggregation in related tables,<postgresql><graphql><hasura>,1,3,0,2021-06-15 07:56:14
67992205,1,,,0,1140,"<h2>Intention:</h2>&#xA;<p>trying to query from apollo client based on dynamic id. Have successfully checked in server provided interface which is working... and trying to do same from the client.</p>&#xA;<p>From the doc it looks like i need to use variables which i did.</p>&#xA;<h2>Problem:</h2>&#xA;<p>query using variables looks good but i am getting undefined in client.</p>&#xA;<h2>Query which is working in graphql API:</h2>&#xA;<pre><code>query abc {&#xA;    getCategoryProduct(id:&quot;NzI1NDc1MTM1&quot;) {&#xA;      id&#xA;      title&#xA;      description&#xA;      favorited&#xA;      published&#xA;      price_per_day&#xA;      price_per_week&#xA;      price_per_month&#xA;      price_per_weekend&#xA;      picture&#xA;      pictures {&#xA;        id&#xA;        url&#xA;      }&#xA;      createdAt&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<h2>Problematic code in client</h2>&#xA;<pre><code>const GETDETAILS = gql`&#xA;  query abc($id: String!) {&#xA;    getCategoryProduct(id: $id) {&#xA;      id&#xA;      title&#xA;      description&#xA;      favorited&#xA;      published&#xA;      price_per_day&#xA;      price_per_week&#xA;      price_per_month&#xA;      price_per_weekend&#xA;      picture&#xA;      pictures {&#xA;        id&#xA;        url&#xA;      }&#xA;      createdAt&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;const DetailScreen = () =&gt; {&#xA;&#xA;  const { loading, error, data } = useQuery(GETDETAILS, {&#xA;    variables: { id: &quot;NzI1NDc1MTM1&quot; },&#xA;  });&#xA;&#xA;  useEffect(() =&gt; {&#xA;    if (loading == false) {&#xA;      console.log(&quot;=====data=====&quot;, data);  // DATA IS EMPTY DO NOT NOT WHY??&#xA;    } &#xA;  }, [data]);&#xA;</code></pre>&#xA;<p>}</p>&#xA;",2102324,,,,2021-07-02 01:04:36,using useQuery apollo client to get data by id not working,<apollo><apollo-client><react-apollo><apollo-server>,1,1,0,2021-06-15 19:14:16
68003312,2,,48003767,2,,"<p>I want to share my own experience, maybe it adds value to the above nice answers.</p>&#xA;<p>Graphql operations mostly do query a database. Regarding this, a Query can get data with simple select statement which does not modify anything at the db level. But one can also run a stored procedure (spr) or so and get the same data.</p>&#xA;<p>When I use a spr, I also create some log records at db side. Sometimes logging spr parameters is necessery for example. Or logging who made the request at db table.</p>&#xA;<p>If I need the modifications made by a data request (log records etc) to show to the client, the only way of doing it is using a Mutation, this way I can later select log records and show them to the client app.</p>&#xA;<p>If I use a Query the data may be incomplete (log records may be queried before they are created etc.)</p>&#xA;",2146286,,,,2021-06-16 13:09:08,"",,0,0,0,2021-06-16 13:09:08
68029034,2,,68020309,1,,"<p>It's because Postgres marks view columns as explicitly nullable, regardless of the underlying column nullability, for some unknown reason.</p>&#xA;<p>Vamshi (core Hasura server dev) explains it here in this issue:&#xA;<a href=""https://github.com/hasura/graphql-engine/issues/1965"" rel=""nofollow noreferrer"">https://github.com/hasura/graphql-engine/issues/1965</a></p>&#xA;<p>You don't need that view though -- it's the same as doing a query:</p>&#xA;<pre><code>query {&#xA;  talks(&#xA;    where: { activity: { _like: &quot;iosconfig21%&quot; } },&#xA;    order_by: { start_at: &quot;asc&quot; }&#xA;  }) {&#xA;    id&#xA;    title&#xA;    start&#xA;    &lt;rest of fields&gt;&#xA;}&#xA;</code></pre>&#xA;<p>Except now you have a view you need to manage in your Hasura metadata and create permissions for, like a regular table, on top of the table it's selecting from. My $0.02 anyways.</p>&#xA;<p>You can even use a GraphQL alias if you <em>really</em> insist on it being called &quot;schedule&quot; in the JSON response&#xA;<a href=""https://graphql.org/learn/queries/"" rel=""nofollow noreferrer"">https://graphql.org/learn/queries/</a></p>&#xA;",13485494,,,,2021-06-18 03:44:16,"",,0,1,0,2021-06-18 03:44:16
68034313,2,,54046045,0,,"<p>There is also amplify <a href=""https://www.npmjs.com/package/amplify-appsync-simulator"" rel=""nofollow noreferrer"">amplify-appsync-simulator</a> package that is supposed to help with testing appsync, but there is no documentation on how you should use it. It is used by <a href=""https://github.com/bboure/serverless-appsync-simulator"" rel=""nofollow noreferrer"">serverless-appsync-simulator</a> Michael wrote and Amplify itself.</p>&#xA;",3495523,,,,2021-06-18 11:24:44,"",,0,0,0,2021-06-18 11:24:44
68034857,1,,,0,1161,"<p>My problem is maybe trivial, but I can't find the good example or straight answer anywhere...</p>&#xA;<p><strong>My setup:</strong></p>&#xA;<ul>&#xA;<li>Web app client written using Apollo and ReactJS</li>&#xA;<li>Server/API written using Apollo, ReactJS and GraphQL</li>&#xA;<li>Database: Mongoose</li>&#xA;</ul>&#xA;<p><strong>What I want to achieve:</strong></p>&#xA;<p>I want to upload files via browser using my application straight to Amazon S3 bucket and have the ability to later list those files with thumbnails (if those are images) in the app.</p>&#xA;<p>I have everything setup nicely when it comes to uploading to S3. I'm using AWS JS SDK, have setup API key and secret, all in all, good.</p>&#xA;<p><strong>The problem:</strong></p>&#xA;<p>Everything works properly as long as my bucket is completely <strong>public</strong>.&#xA;But of course I don't want it to be public. This app will be for company internal use only, files or anything, can't be available to the public...</p>&#xA;<p>When I switch of public access to the bucket, I'm not longer able to even upload the files through my app, needless to say, I'm not able to see the files in my app...</p>&#xA;<p>I was trying to implement some bucket policy, that would allow files to be uploaded or seen if the referrer came from one of the IP addresses that I use to reach my app in the browser, but that did not work at all... <em>(IP addresses shown in my policy below are not the one I'm using of course, I change them here for privacy)</em></p>&#xA;<pre><code>{&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;    &quot;Id&quot;: &quot;http referer policy example&quot;,&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Sid&quot;: &quot;Allow get requests originating from 1.1.1.1:3000&quot;,&#xA;            &quot;Effect&quot;: &quot;Allow&quot;,&#xA;            &quot;Principal&quot;: &quot;*&quot;,&#xA;            &quot;Action&quot;: &quot;*&quot;,&#xA;            &quot;Resource&quot;: &quot;arn:aws:s3:::escape-dam/*&quot;,&#xA;            &quot;Condition&quot;: {&#xA;                &quot;StringLike&quot;: {&#xA;                    &quot;aws:Referer&quot;: &quot;http://1.1.1.1:3000/*, http://1.1.1.1:4000/*, http://2.2.2.2:3000/*, http://2.2.2.2:4000/*&quot;&#xA;                }&#xA;            }&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p><strong>Dream solution:</strong></p>&#xA;<p>Policy written in such a way, that my app will be able to send and receive files from S3 Bucket, without having to authorise each request. Basically, if you want to upload or request the file through the app you're allowed to, but not when trying to copy and paste the URL into the browser.</p>&#xA;<p><em><strong>As an addition I have to state, that because this is an ReactJS app, it does not ask for the files from S3 Bucket itself. It passes the stored URI from the database to the client side of the app, which later gets rendered with the page itself, so not the server asks S3 for the file, but the user's browser does. I hope this clarify my problem in it's entirety ;)</strong></em></p>&#xA;<p>I hope I'm clear here and do not overstate something trivial, but I'm pretty new when it comes to dealing with S3</p>&#xA;<p>Thank you in advance for any help!</p>&#xA;",5576422,,5576422,2021-06-18 12:40:38,2021-06-18 16:03:20,AWS S3 Bucket policy/access from URL referer - access denied,<reactjs><amazon-web-services><amazon-s3><react-apollo>,3,8,0,2021-06-18 12:04:10
68037217,1,,,-2,53,"<p>I'm working on an app in Ruby on Rails with GraphQL API. Our database is MySQL.</p>&#xA;<p>In my test file, I have a POST request to a staging site for our app: <code>post &quot;https://apistaging.app.com/graphql&quot;</code></p>&#xA;<p>Is there a way to see the database and tables from this request? Like is there a way to execute <code>SELECT * FROM table</code> from this request? Or can I only use queries and mutations defined in my schema? I would like to see the data on the staging site, since my mutations aren't working.</p>&#xA;<p>Thank you.</p>&#xA;",10981110,,,,2021-06-18 14:53:23,How to see database from a POST request?,<mysql><sql><ruby-on-rails><unit-testing><graphql>,1,0,0,2021-06-18 14:45:33
68038066,2,,68034857,0,,"<p>So... Thank you all very much for your input!&#xA;I've found the solution by combining your answers and further digging into the S3 docs.</p>&#xA;<p>What I'm doing in my policy is:&#xA;<em>Blocking any IP other than my server</em> <strong>and</strong> <em>Blocking any referer other than my app URL</em></p>&#xA;<p>Please, check my updated policy below.&#xA;If you also could tell me if this is secure enough, that would be great!&#xA;As an addition, my bucket public access settings looks like this:</p>&#xA;<pre><code>Block all public access&#xA; Off&#xA;Block public access to buckets and objects granted through new access control lists (ACLs)&#xA; On&#xA;Block public access to buckets and objects granted through any access control lists (ACLs)&#xA; Off&#xA;Block public access to buckets and objects granted through new public bucket or access point policies*&#xA; On&#xA;Block public and cross-account access to buckets and objects through any public bucket or access point policies*&#xA; On&#xA;</code></pre>&#xA;<pre><code>{&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;    &quot;Id&quot;: &quot;S3PolicyId1&quot;,&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Sid&quot;: &quot;IPAllow&quot;,&#xA;            &quot;Effect&quot;: &quot;Deny&quot;,&#xA;            &quot;Principal&quot;: &quot;*&quot;,&#xA;            &quot;Action&quot;: [&#xA;                &quot;s3:GetObject&quot;,&#xA;                &quot;s3:GetObjectVersion&quot;&#xA;            ],&#xA;            &quot;Resource&quot;: [&#xA;                &quot;arn:aws:s3:::my-s3-bucket-name&quot;,&#xA;                &quot;arn:aws:s3:::my-s3-bucket-name/*&quot;&#xA;            ],&#xA;            &quot;Condition&quot;: {&#xA;                &quot;StringNotLike&quot;: {&#xA;                    &quot;aws:Referer&quot;: [&#xA;                        &quot;http://1.1.1.1:3000/*&quot;,&#xA;                        &quot;http://1.1.1.1:4000/*&quot;,&#xA;                        &quot;http://2.2.2.2:3000/*&quot;,&#xA;                        &quot;http://2.2.2.2:4000/*&quot;&#xA;                    ]&#xA;                },&#xA;                &quot;NotIpAddress&quot;: {&#xA;                    &quot;aws:SourceIp&quot;: [&#xA;                        &quot;1.1.1.1&quot;,&#xA;                        &quot;2.2.2.2&quot;&#xA;                    ]&#xA;                }&#xA;            }&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;",5576422,,,,2021-06-18 15:47:04,"",,0,0,0,2021-06-18 15:47:04
68038300,2,,68034857,0,,"<p>You can use <a href=""https://aws.amazon.com/cloudfront/"" rel=""nofollow noreferrer"">CloudFront</a> + OAI ( origin access identity) with bubket policy that only allows access to OAI, <a href=""https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html#example-bucket-policies-cloudfront"" rel=""nofollow noreferrer"">check out policy from docs</a>.&#xA;In this way request coming from cloudfront can only access your bucket.&#xA;another benefit cloudfront offer is caching on edge locations, which improves latency and reduce your cost for number of request on s3 bucket.</p>&#xA;<pre><code>{&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;    &quot;Id&quot;: &quot;PolicyForCloudFrontPrivateContent&quot;,&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Effect&quot;: &quot;Allow&quot;,&#xA;            &quot;Principal&quot;: {&#xA;                &quot;AWS&quot;: &quot;arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity EH1HDMB1FH2TC&quot;&#xA;            },&#xA;            &quot;Action&quot;: &quot;s3:GetObject&quot;,&#xA;            &quot;Resource&quot;: &quot;arn:aws:s3:::DOC-EXAMPLE-BUCKET/*&quot;&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;",13126651,,,,2021-06-18 16:03:20,"",,0,0,0,2021-06-18 16:03:20
68043238,2,,67847912,0,,"<p>To make json array, just use List in java.&#xA;Example:</p>&#xA;<pre><code>Region usa = new Region(&quot;USA&quot;, Arrays.asList(&quot;NewYork&quot;, &quot;LA&quot;));&#xA;Region uk = new Region(&quot;UK&quot;, Arrays.asList(&quot;London&quot;, &quot;Manchester&quot;));&#xA;List&lt;Region&gt; list = Arrays.asList(usa, uk);&#xA;&#xA;....&#xA;put(&quot;employeeRegion&quot;, list);&#xA;</code></pre>&#xA;<p>Region.java</p>&#xA;<pre><code>import lombok.Data;&#xA;&#xA;import java.util.List;&#xA;&#xA;@Data&#xA;public class Region {&#xA;    private String country;&#xA;    private List&lt;String&gt; values;&#xA;&#xA;    public Region(String country, List&lt;String&gt; values) {&#xA;        this.country = country;&#xA;        this.values = values;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",7574461,,,,2021-06-19 03:01:09,"",,0,0,0,2021-06-19 03:01:09
68069040,1,,,0,688,"<p>I'm working in the AWS console.&#xA;When I executed the following function on the query screen,&#xA;&quot;Invalid KeyConditionExpression: Attribute name is a reserved keyword; reserved keyword: name&quot; has occurred.&#xA;I'm renaming it with &quot;expressionAttributeNames&quot;, why?</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    &quot;operation&quot; : &quot;Query&quot;,&#xA;    &quot;query&quot; : {&#xA;        &quot;expressionAttributeNames&quot;: {&quot;#abc&quot;: &quot;name&quot;},&#xA;        &quot;expression&quot;: &quot;#abc = :abc&quot;,&#xA;        &quot;expressionValues&quot; : {&#xA;            &quot;:abc&quot; : $util.dynamodb.toDynamoDBJson($ctx.args.name)&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",11576753,,,,2021-09-28 06:24:38,"AppSync with DynamoDB ""Invalid KeyConditionExpression: Attribute name is a reserved keyword; reserved keyword: name""",<graphql><aws-appsync>,1,0,0,2021-06-21 13:42:56
68069378,1,,,0,150,"<p>I want to know if we can query to pluck selected columns and the request to the database to search for only those selected columns not the whole data at the endpoint. If there is any confusion in this question please let me know.&#xA;<a href=""https://i.stack.imgur.com/D5gM2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/D5gM2.png"" alt=""enter image description here"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/ODC6V.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ODC6V.png"" alt=""enter image description here"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/Zkaug.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Zkaug.png"" alt=""enter image description here"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/itjSe.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/itjSe.png"" alt=""enter image description here"" /></a></p>&#xA;",13954388,,13954388,2021-06-22 08:28:14,2021-06-22 08:28:14,How to query in database with GraphQL where to pluck only selected fields not all fields?,<ruby-on-rails-3><graphql>,0,2,0,2021-06-21 14:04:52
68091805,1,,,0,166,<p>I presently have an AWS Amplify project using a graphQL schema and want to track the number of times an object is viewed.  Suppose in the following schema a user creates a blog.  Now I want to track the number of time other users view this blog.  Although users can obviously view it as many times as they like I want to only count a maximum of one view per user.</p>&#xA;<pre><code>type Blog @model {&#xA;  id: ID!&#xA;  name: String&#xA;  views: Int&#xA;  Author: User @connection&#xA;}&#xA;&#xA;type User @model {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;</code></pre>&#xA;<p>At the moment I'm thinking to create an additional table with just the BlogId and UserId and do this in two steps.  Firstly to check that table for whether or not the user has viewed the blog and if not incrementing the blog views.  But wondering if there is a better way to achieve this?</p>&#xA;<pre><code>type BlogViews @model {&#xA;  id: ID!&#xA;  BlogId: ID!&#xA;  UserId: ID!&#xA;}&#xA;</code></pre>&#xA;,4718413,,4718413,2021-06-22 23:59:29,2021-06-22 23:59:29,What is best practice for adding number of views to an object using GraphQL API?,<graphql><aws-amplify>,0,6,0,2021-06-22 23:35:46
68108009,1,,,2,333,"<p>I am using GraphQL API in an amplify project WITHOUT local datastore and conflict resolution off.  I have the following schema:</p>&#xA;<pre><code>type SomeObject&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner, operations: [create, delete, update] }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  version: Int!&#xA;  owner: String&#xA;  name: String&#xA;  media: [Media]&#xA;}&#xA;&#xA;type Media {&#xA;  id: ID!&#xA;  owner: String&#xA;  mediaType: String!&#xA;  order: Int!&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;}&#xA;</code></pre>&#xA;<p>When I perform an Amplify.API.mutate(request: .update ...  on SomeObject, instead of replacing the media field with the new array I pass it appends the new array I pass to the existing array in the table.  I am using the iOS framework but from what I can see online this behavior is similar in other frameworks.</p>&#xA;<p>I am not using local Datastore and so conflict resolution is off so that solution that worked for others is not the solution for me.</p>&#xA;<p>Has anybody found a solution for this?</p>&#xA;",4718413,,,,2021-08-27 01:14:47,"With amplify and graphql, updating array field in table appends update array to existing table array rather than replacing it",<graphql><amazon-dynamodb><aws-amplify><aws-appsync>,0,0,0,2021-06-23 23:27:43
68121088,1,,,0,96,"<p>I have this query, where <code>messageTags</code> is a joining table for a many to many relation between <code>messages</code> and <code>tags</code></p>&#xA;<pre><code>messageTagsByMessageId {&#xA;    __id&#xA;    edges {&#xA;        node {&#xA;            tagId&#xA;            tagByTagId {&#xA;                id&#xA;                name&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>I want to run a <code>deleteTag</code> mutation, and use Relay's <code>@deleteEdge</code> to update the connection automatically. The problem is the mutation returns <code>id</code>, not <code>tagId</code> or <code>tagByTagId.id</code>:</p>&#xA;<p>I tried to do it out of the box:</p>&#xA;<pre><code>mutation TagDeleteMutation($input:DeleteTagInput!, $connections: [ID!]!) {&#xA;  deleteTag(input: $input) {&#xA;    tag {&#xA;      id @deleteEdge(connections: $connections)&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I also tried adding to the payload out of the box:</p>&#xA;<pre><code>mutation TagDeleteMutation($input:DeleteTagInput!, $connections: [ID!]!) {&#xA;  deleteTag(input: $input) {&#xA;    tag {&#xA;      id @deleteEdge(connections: $connections)&#xA;    }&#xA;    messageTag {&#xA;      tagId @deleteEdge(connections: $connections)&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>No luck. Now I'm working on the Postgres function which graphile uses to build the mutation API. Something like:</p>&#xA;<pre><code>CREATE FUNCTION public.delete_tag(tag_id Int)&#xA;RETURNS *&#xA;AS $$&#xA;  DELETE FROM public.tag&#xA;    WHERE id=tag_id&#xA;  RETURNING id, user_id, name, category_id, id as tag_id;&#xA;$$ LANGUAGE sql VOLATILE STRICT;&#xA;</code></pre>&#xA;",11971788,,,,2021-06-25 01:02:08,PostGraphile deleteEdge with many to many relation,<postgresql><graphql><relay><postgraphile>,1,0,0,2021-06-24 18:32:59
68136032,1,,,1,1697,"<p>I'm using Hasura GraphQL to build out a backend for a MVP I'm building. When a user registers a blank profile is created for them via a trigger.</p>&#xA;<p>However, if I try to update the profile I get the error:</p>&#xA;<pre><code>expecting a value for non-nullable variable: id of type: uuid! in variableValues&#xA;</code></pre>&#xA;<p>This is the mutation that is called inside React:</p>&#xA;<pre><code>mutation updateUserProfile(&#xA;        $id: uuid!&#xA;        $user_profile: user_profile_set_input!&#xA;    ) {&#xA;        update_user_profile_by_pk(&#xA;            pk_columns: { id: $id }&#xA;            _set: $user_profile&#xA;        ) {&#xA;            twitter&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;<p>The table an id column with following criteria: uuid, primary key, unique, default: gen_random_uuid()</p>&#xA;<p>I've also set the column presets to use x-hasura-user-id from the session variable but it still complains about it. This id is generated and should never be changed, so I'm not sure why it's asking me to pass it in?</p>&#xA;<p>Thanks all.</p>&#xA;",4502839,,4502839,2021-06-26 10:43:51,2021-06-26 10:43:51,Hasura expecting a value for non-nullable variable,<reactjs><graphql><next.js><hasura>,0,3,0,2021-06-25 19:06:33
68166947,1,68166988,,1,157,"<p>in Shopify store front grahpQL getting issue while calling store name</p>&#xA;<p>Here is the code for it</p>&#xA;<pre><code>      let client: Graph.Client = Graph.Client(shopDomain: shopDomain, apiKey: apiKey, locale: locale)&#xA;      let query = Storefront.buildQuery { &#xA;        .shop { &#xA;            .name()&#xA;        }&#xA;        &#xA;    }&#xA;    let task = client.queryGraphWith(query) { response, error in&#xA;        if let response = response {&#xA;            print(response);&#xA;        }else {&#xA;            print(&quot;Query failed: \(error)&quot;)&#xA;        }&#xA;    }&#xA;    task.resume()&#xA;</code></pre>&#xA;<p>But not getting success response</p>&#xA;",2578552,,,,2021-06-28 16:32:57,Shopify GraphQL using swift not getting response,<ios><swift><graphql><shopify><storefront>,1,0,0,2021-06-28 16:29:31
68166988,2,,68166947,1,,"<p>You are missing the $ sign inside your code you can&#xA;check updated code here&#xA;<a href=""https://github.com/skyclones/ShopifyMobileApp"" rel=""nofollow noreferrer"">https://github.com/skyclones/ShopifyMobileApp</a></p>&#xA;<pre><code>    let shopDomain = &quot;YOUR STORE NAME&quot;&#xA;    let apiKey     = &quot;YOUR STORE KEY&quot;&#xA;    let locale   = Locale(identifier: &quot;en-US&quot;)&#xA;&#xA;    let client: Graph.Client = Graph.Client(shopDomain: shopDomain, apiKey: apiKey, locale: locale)&#xA;    client.cachePolicy = .cacheFirst(expireIn: 3600)&#xA;&#xA;    let query = Storefront.buildQuery { $0&#xA;        .shop { $0&#xA;            .name()&#xA;        }&#xA;        &#xA;    }&#xA;    let task = client.queryGraphWith(query) { response, error in&#xA;        if let response = response {&#xA;            print(response);&#xA;        }else {&#xA;            print(&quot;Query failed: \(error)&quot;)&#xA;        }&#xA;    }&#xA;    task.resume()&#xA;</code></pre>&#xA;",16308684,,,,2021-06-28 16:32:57,"",,0,0,0,2021-06-28 16:32:57
68169815,1,,,1,284,"<p>Following schema can be found similar on <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/designing-your-schema.html"" rel=""nofollow noreferrer"">AWS docs &gt; Designing your schema</a>. What I couldn't find until now is an example where only ToDo's with the Status <code>PUBLISHED</code> are exposed by the GraphQL API.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type Todo {&#xA;  id: ID!&#xA;  name: String&#xA;  description: String&#xA;  status: TodoStatus&#xA;}&#xA;&#xA;enum TodoStatus {&#xA;  DRAFT&#xA;  PUBLISHED&#xA;  DELETED&#xA;}&#xA;</code></pre>&#xA;<p>All AWS Amplify directives are described <a href=""https://docs.amplify.aws/cli/graphql-transformer/directives"" rel=""nofollow noreferrer"">here</a>, also <code>@auth</code> where authorization rules for the ToDo model can be defined but this is not what I am looking for. Furthermore I think that <a href=""https://docs.amplify.aws/cli/function"" rel=""nofollow noreferrer"">functions</a> won't help either in my case, or am I wrong?</p>&#xA;<p>Any Idea how I can make ToDo items with Status <code>DRAFT</code> and <code>DELETED</code> <strong>not accessible via GraphAPI (serverside, not in the frontend via queries)</strong>?</p>&#xA;<p>Respectively is this possible and as easy as it would be with tools like <a href=""https://www.twilio.com/blog/graphql-apis-django-graphene"" rel=""nofollow noreferrer"">Django and Django Graphene</a>?</p>&#xA;",5894988,,,,2021-07-06 21:15:38,How to add server side business logic for a AWS amplify GraphQL API?,<amazon-web-services><aws-lambda><graphql><aws-amplify><aws-serverless>,1,0,0,2021-06-28 20:45:30
68170810,1,,,0,107,"<p>Trying to get &quot;object filtering&quot; to work with apolo-server and vuex-orm-graphql.</p>&#xA;<p>Stack:</p>&#xA;<ul>&#xA;<li>Backend: nodejs, apollo-server</li>&#xA;<li>Frontend: vue/vuex-orm + <a href=""https://vuex-orm.github.io/plugin-graphql/guide/fetch.html#filtering"" rel=""nofollow noreferrer"">vuex-orm-graphql-plugin</a>. The app implements <code>.fetch()</code> according to the &quot;filter object&quot; as described in the docs:</li>&#xA;</ul>&#xA;<pre><code>Comment.fetch({ postId: '15', deleted: false });&#xA;</code></pre>&#xA;<p>I can't get the client to send the query because I don't know how to define the query schema for the &quot;filter object&quot; case.</p>&#xA;<p>Tried several approaches, such as:</p>&#xA;<pre><code>input FilterObject {&#xA;  postId: String&#xA;  deleted: Boolean&#xA;}&#xA;&#xA;type query {&#xA;  comments(filter: FilterObject)&#xA;}&#xA;</code></pre>&#xA;<p>The graphql query request isn't sent, erroring:</p>&#xA;<pre><code>&quot;Cannot query field \&quot;nodes\&quot; on type \&quot;Comments\&quot;.&quot;&#xA;</code></pre>&#xA;<p>If I modify a bit the schema I can get the query to send, however it  errors about the <code>filter</code> field type being wrong.</p>&#xA;<p>How does the schema need to be defined for the filter functionality to work?</p>&#xA;",2756682,,2756682,2021-06-30 17:10:26,2021-07-05 19:40:48,"GraphQL schema for vuex-orm plugin ""filter object"" queries",<graphql><apollo-server><vuex-orm>,1,0,0,2021-06-28 22:54:00
68171194,1,,,0,691,"<p>I am new to graphql. In my Vuejs application, which uses AWS Amplify, I am trying to save a user to my database after a new user signs up for an account. I took care of the AWS Amplify flow to add this new user to our Cognito pool. I wrote this code to store the user data in our database.</p>&#xA;<pre><code>&lt;template&gt;&#xA;    &lt;div&gt;&#xA;        A page for testing graphQl queries and mutations&#xA;        &lt;button @click.prevent=&quot;addUser()&quot;&gt;Execute query&lt;/button&gt;&#xA;    &lt;/div&gt;&#xA;&lt;/template&gt;&#xA;&#xA;&lt;script&gt;&#xA;import { API } from 'aws-amplify'&#xA;&#xA;    export const createUser = `&#xA;    mutation createUser {&#xA;      createUser(input: {&#xA;        firstName: &quot;Tina&quot;,&#xA;        email: &quot;Tina@gmail.com&quot;&#xA;      }) {&#xA;        id firstName&#xA;      }&#xA;    }&#xA;    `&#xA;    export default {&#xA;      name: 'TestGraphQL',&#xA;      data() {&#xA;        return {&#xA;          data: null,&#xA;        }&#xA;      },&#xA;      methods: {&#xA;        addUser() {&#xA;          console.log('executing query')&#xA;          API.graphql({ query: createUser }).then(&#xA;            (response) =&gt; (this.data = response.data.createUser),&#xA;          ).catch(error =&gt; console.log('error: ' + error))&#xA;        },&#xA;      },&#xA;    }&#xA;    &lt;/script&gt;&#xA;</code></pre>&#xA;<p>As you can see, for now I have hardcoded some user data in the function just to make sure I can add a user to the database. After this works, I plan to modify the mutation code to allow input variables that contain real user data.</p>&#xA;<p>I have run into an issue with authorization. Here is the error message I am seeing:</p>&#xA;<blockquote>&#xA;<p>&quot;Not Authorized to access createUser on type User&quot;</p>&#xA;</blockquote>&#xA;<p>If I log into AWS Appsync &gt; Queries with this user account, I can execute this same mutation and see the same error.</p>&#xA;<p>No authorization should be required to add a user to the database. How do I modify my schema or mutation code to not require authorization?</p>&#xA;<p>This documentation describes the effect of the @auth decorator. <a href=""https://docs.amplify.aws/lib/datastore/setup-auth-rules/q/platform/js"" rel=""nofollow noreferrer"">https://docs.amplify.aws/lib/datastore/setup-auth-rules/q/platform/js</a>&#xA;But where can I find this file in my repository? Or is this a file that I can edit through the AWS dashboard? I think it is called the 'schema'.</p>&#xA;",4389737,,785065,2021-06-29 00:59:08,2021-06-29 00:59:08,Not authorized to access mutation in GraphQl,<vue.js><graphql><authorization><aws-amplify>,0,2,0,2021-06-29 00:10:38
68184840,1,68199082,,1,159,"<p>I am using the <code>QueryItemExtensionInterface</code> (with API Platform, GraphQL) to prevent a user from viewing objects they do NOT have access to. In a Query Collection the items are removed from the result as expected, but when querying for a specific object (<code>item_query</code>) the result is an object with a value of <code>NULL</code>.</p>&#xA;<p>I would prefer that I get an 'Access Denied' response instead of a null data value (As I do when using <code>security</code> api-platform attributes). Is there a way I can configure my entity to act this way when the security is being enforced in a Query Extension (implementing <code>applyToItem()</code>)?</p>&#xA;",2216328,,,,2021-06-30 17:17:02,"How can I return ""Access Denied"" for object in GraphQL (API Platform) item query when using security in a Query Extension",<graphql><api-platform.com>,1,5,0,2021-06-29 19:50:37
68185656,1,,,0,456,"<p>My website uses AWS Amplify and Cognito user pools to authenticate users. When someone submits the registration form on the site, they receive an email confirmation link. Their information is automatically added to the Cognito user pool.</p>&#xA;<p>I'd like to add this user's details to our AWS Amplify graphql database and also add them to the &quot;Public&quot; Cognito user group. (I think they must be in this group in order to use features in the website that mutate the graphql database).</p>&#xA;<p>I am considering how to add users to the graphql database. One option is to write a lambda function that does this when the user clicks the confirmation link, as described here: <a href=""https://bobbyhadz.com/blog/aws-cognito-add-user-to-group"" rel=""nofollow noreferrer"">https://bobbyhadz.com/blog/aws-cognito-add-user-to-group</a>. Is this the best approach?</p>&#xA;<p>An alternative idea is to make our front end call this method of the AWS-amplify library when the user clicks submit on the registration form.</p>&#xA;<pre><code>API.graphql(graphqlOperation(createUser, { input: user })) &#xA;</code></pre>&#xA;<p>However, this function is a mutation and therefore requires authorization. Since the user is not yet logged at this registration page, I would need to waive authorization on this function. Is this possible?</p>&#xA;",4389737,,,,2021-06-29 21:08:13,Saving user details to graphql database with AWS Amplify and a Cognito authentication flow,<graphql><authorization><amazon-cognito><aws-amplify>,0,3,0,2021-06-29 21:08:13
68201142,1,,,-1,400,"<p>I have following simple selection query in GraphQL which checks if in <code>dataDictionary</code> table any record exists with name field <code>dataDict101</code>.</p>&#xA;<pre><code>query dataDictionary($where : DataDictionaryWhereUniqueInput!){&#xA;  dataDictionary(where: $where){&#xA;    id&#xA;  }&#xA;}&#xA;,&#xA;variables: {&#xA;data: {&#xA;       &quot;where&quot; : {&#xA;            &quot;name&quot;: &quot;dataDict101&quot;&#xA;            } &#xA;      }&#xA;}&#xA;</code></pre>&#xA;<p>How can I determine if above query returned any row or not?&#xA;<strong>e.g. Similar to SQL query returns SQLCODE=0 or SQL%ROWCOUNT&gt;0 in case of cursor if record found.</strong></p>&#xA;",15914468,,57719,2021-07-01 16:40:13,2021-07-01 16:40:13,Check if GraphQL query returned any row,<graphql><resolver><prisma-graphql>,1,1,0,2021-06-30 20:16:47
68208282,1,,,0,703,"<p>I am using AWS web console. I am trying to create lambda function to run my AppSync GraphQL API mutation query. I have seen many answers on web but they all are trying to create lambda on local machine first and then pushing it to AWS cloud. I can't follow this method. I am working directly on AWS web console.</p>&#xA;<p>Basically I have a dynamodb database table behind the appsync graphql API. I want to update an entry in dynamoDB using lambda function. To update this entry (in DynamoDB) I need to run a mutation query on appsync graphql API. I want to achieve this using lambda function. I want to call mutation query (of appsync) from lambda.</p>&#xA;<p>See the lambda's <code>node.js</code> code below:</p>&#xA;<pre><code>const appsync = require('aws-appsync');&#xA;const gql = require('graphql-tag');&#xA;require('cross-fetch/polyfill');&#xA;&#xA;const graphqlClient = new appsync.AWSAppSyncClient({&#xA;  url: 'APPSYNC_ENDPOINT_URL',&#xA;  region: process.env.AWS_REGION,&#xA;  auth: {&#xA;    type: 'AWS_IAM',&#xA;    credentials: {&#xA;      accessKeyId: process.env.AWS_ACCESS_KEY_ID,&#xA;      secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,&#xA;      sessionToken: process.env.AWS_SESSION_TOKEN&#xA;    }&#xA;  },&#xA;  disableOffline: true&#xA;});&#xA;&#xA;const mutation = gql`mutation Test($value: String!) {&#xA;  test(value: $value)&#xA;}`;&#xA;await graphqlClient.mutate({&#xA;  mutation,&#xA;  variables: {&#xA;    value: 'test'&#xA;  }&#xA;});&#xA;</code></pre>&#xA;<p>I am getting error :</p>&#xA;<p><code>&quot;errorMessage&quot;: &quot;Cannot find module 'aws-appsync'&quot;</code></p>&#xA;<p>The lambda function is trying to use <code>aws-appsync</code> but is unable to find it. How do I 'install' this package on the AWS lambda web console? <strong>I am not using my local development machine. I am writing lambda function directly on web console.</strong></p>&#xA;<p>How do I enable <code>aws-appsync</code> package in lambda using only the web console ?</p>&#xA;",15943787,,,,2021-09-03 16:33:50,Calling AWS AppSync GraphQL API mutation query from lambda,<amazon-web-services><aws-lambda><graphql>,1,0,0,2021-07-01 10:09:10
68208606,2,,68201142,0,,"<pre><code>    export const FIND_DATA_DICTIONARY = gql`&#xA;    query dataDictionary($where : DataDictionaryWhereUniqueInput!){&#xA;      dataDictionary(where: $where){&#xA;        id&#xA;      }&#xA;    }&#xA;    `;&#xA;    const result = await client.query({&#xA;          query: FIND_DATA_DICTIONARY,&#xA;          variables: {&#xA;                where : {&#xA;                     name: data.name,&#xA;                } &#xA;            &#xA;          },&#xA;        });&#xA;        resultData = result;&#xA;&#xA;  if(resultData?.data.dataDictionary != null)&#xA;  console.log('data found');&#xA;</code></pre>&#xA;<p>Checking not null value of data.dataDictionary from result, I was able to determine if row is returned or not.</p>&#xA;",15914468,,,,2021-07-01 10:34:31,"",,0,0,0,2021-07-01 10:34:31
68215944,2,,68109894,1,,"<p>If you have control over what's in your API response, and can change it to just return an array of objects (what's inside <code>data</code>), then something like this should work:</p>&#xA;<pre><code>type Query {&#xA;  doctors(specialty_id: Int, search: String, limit: Int, offset: Int): [Doctor]&#xA;}&#xA;&#xA;type Doctor {&#xA;  name: String&#xA;  id: Int&#xA;  location: String&#xA;  specialty_id: Int&#xA;}&#xA;</code></pre>&#xA;<p>If you don't have control over the API response, you'll need another layer (e.g. a serverless function or another server endpoint to request the data and transform the response into the format Hasura Actions can handle).</p>&#xA;<p>See also:</p>&#xA;<ul>&#xA;<li><a href=""https://github.com/hasura/graphql-engine/issues/4806"" rel=""nofollow noreferrer"">https://github.com/hasura/graphql-engine/issues/4806</a></li>&#xA;<li><a href=""https://hasura.io/docs/latest/graphql/core/actions/types/index.html#custom-graphql-types"" rel=""nofollow noreferrer"">https://hasura.io/docs/latest/graphql/core/actions/types/index.html#custom-graphql-types</a></li>&#xA;</ul>&#xA;",170418,,,,2021-07-01 19:28:44,"",,0,0,0,2021-07-01 19:28:44
68220702,1,,,0,391,"<p>May I please know what is the reason why are items in DynamoDB not being fetched by GraphQL?</p>&#xA;<p>When searching via the DynamoDB console interface, I could easily see and query the item in there but once used in GraphQL, some items are not showing. Mind you, this isn't a connection problem because I could query items its just there's a specific item that is not being returned.</p>&#xA;<p>For example, if I query all Posts, it will return all posts in an array but the item is not showing there. However, when I try to query a Post just by targetting it by its ID, it is working well.</p>&#xA;<p>Example code that is not working:</p>&#xA;<pre><code>listPosts(filter: {groupID: {eq: &quot;25&quot;}}) {&#xA;    items {&#xA;        id&#xA;        content&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>but when I do this, it is working well:</p>&#xA;<pre><code>getPost(id: &quot;c59ce7e9&quot;) {&#xA;    id&#xA;    content&#xA;}&#xA;</code></pre>&#xA;",16170066,,,,2021-08-03 23:32:28,Query does not return some items from DynamoDB via GraphQL,<graphql><amazon-dynamodb><aws-appsync>,1,1,0,2021-07-02 06:45:15
68225760,1,,,1,253,"<p>I've implemented a Dynamic Serialization group via Context Builder for admin users (adding admin:write). And have assigned this group to the property I want only updatable by an admin via GraphQL.</p>&#xA;<p>My implementation at this point is taken directly from <a href=""https://api-platform.com/docs/core/graphql/#changing-the-serialization-context-dynamically"" rel=""nofollow noreferrer"">https://api-platform.com/docs/core/graphql/#changing-the-serialization-context-dynamically</a></p>&#xA;<p>But when attempting to mutate this property I am given an error that reads <code>Field &quot;roles&quot; is not defined by type updateUserInput.</code></p>&#xA;<p>This makes some sense to me as the schema does not contain this property since it is not in the typical <code>write</code> group. However, the documentation suggests this should be doable. If this is the case, what am I not doing correctly?</p>&#xA;<p>Relevant Code:</p>&#xA;<p><strong>Context Builder</strong></p>&#xA;<pre class=""lang-php prettyprint-override""><code>&lt;?php&#xA;&#xA;namespace App\Serializer;&#xA;&#xA;use ApiPlatform\Core\GraphQl\Serializer\SerializerContextBuilderInterface;&#xA;use Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface;&#xA;&#xA;/**&#xA; * Context Builder: Experimental implementation used for constructing what resources are returned.&#xA; */&#xA;final class AdminGroupsContextBuilder implements SerializerContextBuilderInterface {&#xA;  private $decorated;&#xA;  private $authorizationChecker;&#xA;&#xA;  /**&#xA;   *&#xA;   */&#xA;  public function __construct(SerializerContextBuilderInterface $decorated, AuthorizationCheckerInterface $authorizationChecker) {&#xA;    $this-&gt;decorated = $decorated;&#xA;    $this-&gt;authorizationChecker = $authorizationChecker;&#xA;  }&#xA;&#xA;  /**&#xA;   *&#xA;   */&#xA;  public function create(?string $resourceClass, string $operationName, array $resolverContext, bool $normalization): array {&#xA;    $context = $this-&gt;decorated-&gt;create($resourceClass, $operationName, $resolverContext, $normalization);&#xA;    $resourceClass = $context['resource_class'] ?? NULL;&#xA;&#xA;    if (isset($context['groups']) &amp;&amp; $this-&gt;authorizationChecker-&gt;isGranted('ROLE_ADMIN') &amp;&amp; FALSE === $normalization) {&#xA;      $context['groups'][] = 'admin:input';&#xA;    }&#xA;&#xA;    return $context;&#xA;  }&#xA;&#xA;}&#xA;</code></pre>&#xA;<p><strong>User Entity Class property definition</strong></p>&#xA;<pre class=""lang-php prettyprint-override""><code>  /**&#xA;   * @ORM\Column(type=&quot;json&quot;)&#xA;   * @Groups({&quot;read&quot;, &quot;admin:write&quot;})&#xA;   */&#xA;  private $roles = [];&#xA;</code></pre>&#xA;<p><strong>Services Definition</strong></p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>    App\Serializer\AdminGroupsContextBuilder:&#xA;        decorates: 'api_platform.graphql.serializer.context_builder'&#xA;        arguments: [ '@App\Serializer\AdminGroupsContextBuilder.inner' ]&#xA;        autoconfigure: false&#xA;</code></pre>&#xA;",2216328,,2216328,2021-07-02 13:14:12,2021-07-02 13:14:12,Why is the dynamic serialization group I've created not allowing a mutation for the specified property?,<serialization><graphql><api-platform.com>,0,0,0,2021-07-02 13:06:30
68240580,2,,68240131,2,,"<p>Essentially what you need is a function (<code>visitObject</code>) that goes through each key of the a <code>Map</code> and recursively calls itself till all properties have been checked.</p>&#xA;<p>The function should also check for the possible types it can operate on and handle the data so you can call the <code>visitObject</code> function with the right arguments.</p>&#xA;<p>I believe the right data structure here would be a <code>Set</code>. In <code>dart</code> as <code>Set</code> is defined as <em>A collection of objects in which each object can occur only once.</em>&#xA;However <code>Set</code> a set falls back to the dart method of equality which is the <code>==</code> operator, so you would either need to use a calls for Events or use a package like <code>BuiltValue</code> which will generate the <code>==</code> operator for your value types.</p>&#xA;<p>Here is an example that can help you get started, I have left equality checking for you to determine what best and how you want to apply it.</p>&#xA;<pre class=""lang-dart prettyprint-override""><code>final Set&lt;Map&lt;String, dynamic&gt;&gt; items = {};&#xA;&#xA;void main() {&#xA;    visitObject(data);&#xA;}&#xA;&#xA;void visitObject(object) {&#xA;  if (object is List) {&#xA;    for(dynamic item in object) {&#xA;      visitObject(item);&#xA;    }&#xA;  } else if (object is Map) {&#xA;    if (object.containsKey('events')) {&#xA;      var _events = object['events'];&#xA;      if (_events is List &amp;&amp; _events.isNotEmpty) {&#xA;        _events.forEach((e) {&#xA;          if (!items.contains(e)) {&#xA;            items.add(e);&#xA;          }&#xA;        });&#xA;      }&#xA;    }&#xA;    for (dynamic item in object.values) {&#xA;      visitObject(item);&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><strong>Additional Reading for equality:</strong></p>&#xA;<ul>&#xA;<li><a href=""https://api.dart.dev/stable/2.4.0/dart-core/Object/operator_equals.html"" rel=""nofollow noreferrer"">==Operator</a></li>&#xA;<li><a href=""https://api.dart.dev/stable/2.10.5/dart-core/Object/hashCode.html"" rel=""nofollow noreferrer"">hashCode</a></li>&#xA;<li><a href=""https://pub.dev/packages/built_value"" rel=""nofollow noreferrer"">BuiltValue</a></li>&#xA;</ul>&#xA;",11385546,,11385546,2021-07-04 00:23:20,2021-07-04 00:23:20,"",,0,2,0,2021-07-03 23:14:19
68252194,2,,66045793,2,,"<p>In my case, a simple <code>amplify pull</code> updated the <code>aws-exports.js</code> file and added the necessary GraphQL endpoint and other necessary config:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const awsmobile = {&#xA;    //...&#xA;    aws_appsync_graphqlEndpoint: &quot;https://xxx.appsync-api.ap-southeast-2.amazonaws.com/graphql&quot;,&#xA;    aws_appsync_region: &quot;ap-southeast-2&quot;,&#xA;    aws_appsync_authenticationType: &quot;API_KEY&quot;,&#xA;    aws_appsync_apiKey: &quot;xxx&quot;&#xA;};&#xA;&#xA;</code></pre>&#xA;<p>Then in my front-end it worked as normal:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { createUserDataItems } from &quot;../graphql/mutations&quot;;&#xA;import { API, Amplify } from &quot;aws-amplify&quot;;&#xA;import config from &quot;../aws-exports&quot;;&#xA;&#xA;Amplify.configure(config);&#xA;&#xA;</code></pre>&#xA;",956779,,,,2021-07-05 07:29:52,"",,0,1,0,2021-07-05 07:29:52
68277057,1,,,1,535,"<p>I'm trying to work through the <a href=""https://aws.amazon.com/getting-started/hands-on/build-android-app-amplify/module-four/?e=gs2020&amp;p=build-a-react-app-three"" rel=""nofollow noreferrer"">AWS tutorial on Android/GraphQL</a> and failing miserably. My build is failing on an autogenerated piece of code from the following command</p>&#xA;<pre><code>amplify codegen models&#xA;</code></pre>&#xA;<p>The schema used as the source is...</p>&#xA;<pre><code>type NoteData&#xA;@model&#xA;@auth (rules: [ { allow: owner } ]) {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;    image: String&#xA;}&#xA;</code></pre>&#xA;<p>...and the failing part of the generated code is...</p>&#xA;<pre><code>/** This is an auto generated class representing the NoteData type in your schema. */&#xA;@SuppressWarnings(&quot;all&quot;)&#xA;@ModelConfig(pluralName = &quot;NoteData&quot;, authRules = {&#xA;  @AuthRule(allow = AuthStrategy.OWNER, ownerField = &quot;owner&quot;, identityClaim = &quot;cognito:username&quot;, **provider** = &quot;userPools&quot;, operations = { ModelOperation.CREATE, ModelOperation.UPDATE, ModelOperation.DELETE, ModelOperation.READ })&#xA;})&#xA;public final class NoteData implements Model {&#xA;  public static final QueryField ID = field(&quot;NoteData&quot;, &quot;id&quot;);&#xA;  public static final QueryField NAME = field(&quot;NoteData&quot;, &quot;name&quot;);&#xA;  public static final QueryField DESCRIPTION = field(&quot;NoteData&quot;, &quot;description&quot;);&#xA;  public static final QueryField IMAGE = field(&quot;NoteData&quot;, &quot;image&quot;);&#xA;  private final @ModelField(targetType=&quot;ID&quot;, isRequired = true) String id;&#xA;  private final @ModelField(targetType=&quot;String&quot;, isRequired = true) String name;&#xA;  private final @ModelField(targetType=&quot;String&quot;) String description;&#xA;  private final @ModelField(targetType=&quot;String&quot;) String image;&#xA;  private @ModelField(targetType=&quot;AWSDateTime&quot;, **isReadOnly** = true) Temporal.DateTime createdAt;&#xA;  private @ModelField(targetType=&quot;AWSDateTime&quot;, **isReadOnly** = true) Temporal.DateTime updatedAt;&#xA;  public String getId() {&#xA;      return id;&#xA;  }&#xA;</code></pre>&#xA;<p>My build errors are...</p>&#xA;<pre><code>C:\Users\yawbe\AndroidStudioProjects\AndroidGettingStarted\app\src\main\java\com\amplifyframework\datastore\generated\model\NoteData.java:25: error: cannot find symbol&#xA;  @AuthRule(allow = AuthStrategy.OWNER, ownerField = &quot;owner&quot;, identityClaim = &quot;cognito:username&quot;, provider = &quot;userPools&quot;, operations = { ModelOperation.CREATE, ModelOperation.UPDATE, ModelOperation.DELETE, ModelOperation.READ })&#xA;                                                                                                  ^&#xA;  symbol:   method provider()&#xA;  location: @interface AuthRule&#xA;C:\Users\yawbe\AndroidStudioProjects\AndroidGettingStarted\app\src\main\java\com\amplifyframework\datastore\generated\model\NoteData.java:36: error: cannot find symbol&#xA;  private @ModelField(targetType=&quot;AWSDateTime&quot;, isReadOnly = true) Temporal.DateTime createdAt;&#xA;                                                ^&#xA;  symbol:   method isReadOnly()&#xA;  location: @interface ModelField&#xA;C:\Users\yawbe\AndroidStudioProjects\AndroidGettingStarted\app\src\main\java\com\amplifyframework\datastore\generated\model\NoteData.java:37: error: cannot find symbol&#xA;  private @ModelField(targetType=&quot;AWSDateTime&quot;, isReadOnly = true) Temporal.DateTime updatedAt;&#xA;                                                ^&#xA;  symbol:   method isReadOnly()&#xA;  location: @interface ModelField&#xA;C:\Users\yawbe\AndroidStudioProjects\AndroidGettingStarted\app\src\main\java\com\amplifyframework\datastore\generated\model\NoteData.java:28: error: method field in class QueryField cannot be applied to given types;&#xA;  public static final QueryField ID = field(&quot;NoteData&quot;, &quot;id&quot;);&#xA;                                      ^&#xA;  required: String&#xA;  found: String,String&#xA;  reason: actual and formal argument lists differ in length&#xA;C:\Users\yawbe\AndroidStudioProjects\AndroidGettingStarted\app\src\main\java\com\amplifyframework\datastore\generated\model\NoteData.java:29: error: method field in class QueryField cannot be applied to given types;&#xA;  public static final QueryField NAME = field(&quot;NoteData&quot;, &quot;name&quot;);&#xA;                                        ^&#xA;  required: String&#xA;  found: String,String&#xA;  reason: actual and formal argument lists differ in length&#xA;C:\Users\yawbe\AndroidStudioProjects\AndroidGettingStarted\app\src\main\java\com\amplifyframework\datastore\generated\model\NoteData.java:30: error: method field in class QueryField cannot be applied to given types;&#xA;  public static final QueryField DESCRIPTION = field(&quot;NoteData&quot;, &quot;description&quot;);&#xA;                                               ^&#xA;  required: String&#xA;  found: String,String&#xA;  reason: actual and formal argument lists differ in length&#xA;C:\Users\yawbe\AndroidStudioProjects\AndroidGettingStarted\app\src\main\java\com\amplifyframework\datastore\generated\model\NoteData.java:31: error: method field in class QueryField cannot be applied to given types;&#xA;  public static final QueryField IMAGE = field(&quot;NoteData&quot;, &quot;image&quot;);&#xA;                                         ^&#xA;  required: String&#xA;  found: String,String&#xA;  reason: actual and formal argument lists differ in length&#xA;</code></pre>&#xA;<p>So that looks like two undefined symbols and four calls with the wrong number of variables. Taking the latter, the tooltip shows the following usage which does indeed request a single argument.</p>&#xA;<pre><code>public static QueryField field(String fieldName)&#xA;</code></pre>&#xA;<p>I have no idea why the autogenerated code has two but if I remove the first argument so</p>&#xA;<pre><code>field(&quot;NoteData&quot;, &quot;image&quot;) &#xA;</code></pre>&#xA;<p>becomes</p>&#xA;<pre><code>field(&quot;image&quot;)&#xA;</code></pre>&#xA;<p>will that actually fix the problem or will it just sort the build errors while creating me a whole set of new runtime problems?</p>&#xA;<p>Back to the two undefined symbols, they don't appear to be missing imports but an incompatibility between definitions and the generated code. The source for AuthRule doesn't define a provider field so that appears to be an obvious reason for the error but what I don't understand is why amplify is putting it there in the first place and what needs to replace it (presumably something?). Same goes for the isReadOnly, it's not defined so why is amplify trying to use it?</p>&#xA;<p>Hopefully someone can put me straight on this, I pretty much understand all the other code to this point but it's this amplify generated file that's giving me headaches.</p>&#xA;",16378904,,,,2021-12-27 23:07:58,AWS Tutorials: GraphQL build fails on missing symbols and too many arguments,<amazon-web-services><graphql><aws-amplify>,1,2,0,2021-07-06 20:31:04
68277857,1,,,1,431,"<p>I have the following basic list query in GraphQL:</p>&#xA;<pre><code>API.graphql(graphqlOperation(listSomething,{filter: filter})).then(({ data: { something } }) =&gt; {&#xA;// Returns the entire object&#xA;})&#xA;</code></pre>&#xA;<p>This will return an array containing entire objects, but as I've seen on multiple GraphQL tutorials, I'd like to take advantage of the utility of only returning / plucking select fields for obvious reasons. However there isn't a lot of information out there on GraphQL + RN + Amplify. So how would I re-write this query to only return the attribute <code>id</code> for instance? Or is that something that I have to define as a resolver in the <code>graphql</code> / <code>queries.js</code> file? I'm using autogenerated queries so it sort of feels like an anti-pattern to add your own queries to that file — Correct me if I'm wrong.</p>&#xA;<p>Thanks!</p>&#xA;",4451733,,4451733,2021-07-06 22:13:45,2022-06-21 05:06:36,Return selected fields only React Native / GraphQL / Amplify,<react-native><graphql><aws-amplify>,2,0,0,2021-07-06 22:08:21
68296603,2,,68292129,0,,<p>I have Done with code like that thank everyone for help &lt;3</p>&#xA;<pre><code>mutation createDeal(&#xA;    $dealName: String&#xA;    $companyName: String&#xA;    $cargo: String&#xA;    $note: String&#xA;    $status: String&#xA;    $type: String&#xA;    # string (array) argumetns&#xA;    $loading: [String!]&#xA;    $unloading: [String!]&#xA;    $tags: [String!]&#xA;    $input: [cardDetail!]&#xA;) {&#xA;    createDeal(&#xA;        CreateDealInput: {&#xA;            dealName: $dealName&#xA;            companyName: $companyName&#xA;            cargo: $cargo&#xA;            note: $note&#xA;            status: $status&#xA;            type: $type&#xA;            # stirng (Array) arguments&#xA;            loading: $loading&#xA;            unloading: $unloading&#xA;            tags: $tags&#xA;            CreateCardDetailInput: $input&#xA;        }&#xA;    )&#xA;}&#xA;</code></pre>&#xA;<p>`;</p>&#xA;,15059566,,,,2021-07-08 06:27:25,"",,0,0,0,2021-07-08 06:27:25
68299310,1,,,0,155,"<p>I have made changes to my AppSync project on the AppSync web console and I want to pull it onto my local machine.</p>&#xA;<p>I have seen the <a href=""https://stackoverflow.com/questions/60625341/how-can-i-pull-changes-made-on-the-appsync-web-console-with-the-amplify-cli-pul"">similar questions</a>  but there is no proper solution for this issue can anyone help me figure this out.</p>&#xA;",14817832,,,,2021-07-08 09:51:32,How to Pull changes done on the aws appsync console to my local machine?,<amazon-web-services><graphql><aws-amplify><aws-appsync><aws-amplify-cli>,0,3,0,2021-07-08 09:51:32
68319529,1,,,0,1011,"<p>I am new to the AWS world and have been working on an Amplify project for a few months.  Project uses Amplify front-end with Appsync / GraphQL and dynamodb all set up via the console in Cloud9.  Read access to the backend using the graphql queries works great but I simply cannot get any of the auto-generated mutations to work.  All throw &quot;&quot;Request aborted&quot; errors with &quot;&quot;Invalid URI format&quot;.</p>&#xA;<p><a href=""https://i.stack.imgur.com/D8qAj.png"" rel=""nofollow noreferrer"">Here's a snippet of the error</a></p>&#xA;<p>Here's a simple example from my code:</p>&#xA;<pre><code>import { createCategory} from './graphql/mutations';&#xA;&#xA;//Here's the start of our Javascrpt App&#xA;const WriteTestPage = () =&gt; {&#xA;&#xA;//define function to handle submitButton, which is used to create a new customer&#xA;async function handleSubmit ()  {&#xA;    try {&#xA;        //For Customers, the name is required&#xA;        console.log('Called our API - top');&#xA;&#xA;        const categoryDetails = {&#xA;            description: 'My new category'&#xA;        }&#xA;        &#xA;        //Call GraphQL with correct parameters to create in backend &#xA;        const returnedCategory = await API.graphql(graphqlOperation(createCategory, { input: categoryDetails}));&#xA;        &#xA;        &#xA;        console.log('Called our API');&#xA;    } catch (err) {&#xA;        console.log('error creating category', err);&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Here's the corresponding schema.  I've opened up all access and have a user pool as well as an API key.</p>&#xA;<pre><code>type Category &#xA;  @model &#xA;  @auth(&#xA;     rules: [&#xA;       { allow: groups, groups: [&quot;superAdmin&quot;]}  #allow the admin to crud the table&#xA;       { allow: private, operations: [read, update, create, delete]}   #allow the authenticated users to read data from the table&#xA;       { allow: public, operations: [read, update, create, delete]}                    #DEV only - allow the UNauthenticated users to read data from the table&#xA;&#xA;   ]) &#xA;  {&#xA;  id: ID!&#xA;  description: String!&#xA;    &#xA;  conectivity: [Conectivity] @connection(keyName: &quot;byCategory&quot;, fields: [&quot;id&quot;])   #Every Category may have zero or more conectivities&#xA;  &#xA;}&#xA;</code></pre>&#xA;<p>Here's the network trace.  Doesn't appear that the front-end is even issuing a POST to the backend.&#xA;<a href=""https://i.stack.imgur.com/qktyU.png"" rel=""nofollow noreferrer"">Network trace</a></p>&#xA;<p>First post on StackOverflow so appologies for any errors.  Any help would be much appreciated as I'm beating my head against the wall here.  I'm sure it's something simple that I'm overlooking.</p>&#xA;<p>Full code illustrating error:</p>&#xA;<pre><code> import './App.css';&#xA;    &#xA;    //context testing and dev&#xA;    import React, { useEffect, useState } from 'react';&#xA;    import Amplify, { AUTH, API, graphqlOperation } from 'aws-amplify';&#xA;    import { Link } from 'react-router-dom';&#xA;    &#xA;    //Queries and Mutations&#xA;    &#xA;    import { createCategory} from './graphql/mutations';&#xA;    import {AmplifyAuthenticator, AmplifySignOut } from '@aws-amplify/ui-react';&#xA;    &#xA;    &#xA;    //Here's the start of our Javascrpt App&#xA;    const WriteTestPage = () =&gt; {&#xA;        &#xA;        &#xA;      &#xA;        //define function to handle submitButton, which is used to create a new customer&#xA;        async function handleSubmit ()  {&#xA;            try {&#xA;                //For Customers, the name is required&#xA;                console.log('Called our API - top');&#xA;    &#xA;                const categoryDetails = {&#xA;                    description: 'My new catetory'&#xA;                }&#xA;                &#xA;                //Call GraphQL with correct parameters to create in backend &#xA;                const returnedCategory = await API.graphql(graphqlOperation(createCategory, { input: categoryDetails}));&#xA;                &#xA;                &#xA;                console.log('Called our API');&#xA;            } catch (err) {&#xA;                console.log('error creating category', err);&#xA;            }&#xA;        }&#xA;      &#xA;      //Define HTML to return in order to create page&#xA;      &#xA;      return (&#xA;        &lt;div className=&quot;App&quot;&gt;&#xA;            &lt;section&gt;&#xA;       &#xA;            &lt;AmplifyAuthenticator&gt;&#xA;            &#xA;            &lt;section&gt;&#xA;                &lt;h3 className=&quot;sectionHeader&quot;&gt;Write Test&lt;/h3&gt;&#xA;                &#xA;                  &lt;center&gt;&lt;form onSubmit={handleSubmit}&gt;&#xA;                        &lt;div &gt;&#xA;                        &lt;table className=&quot;tableStyle&quot;&gt;&#xA;                        &lt;thead&gt;&#xA;                            &lt;tr&gt;&#xA;                                    &lt;th className=&quot;tableHeaderStyle&quot;&gt;Write Test&lt;/th&gt;&#xA;                                    &#xA;                            &lt;/tr&gt;&#xA;                        &lt;/thead&gt;&#xA;                        &lt;tbody&gt;&#xA;                            &lt;tr className=&quot;tableRowOddStyle&quot;&gt;&#xA;                                &#xA;                            &lt;td className=&quot;tableDataStyle&quot;&gt;&#xA;                                &lt;button className=&quot;btn&quot; type=&quot;submit&quot; className=&quot;buttonStyle&quot;&gt;Add&lt;/button&gt;&#xA;                            &lt;/td&gt;&#xA;                                    &lt;/tr&gt;&#xA;                            &lt;/tbody&gt;&#xA;                            &lt;/table&gt;&#xA;                        &#xA;                            &lt;/div&gt;&#xA;                        &lt;/form&gt;&lt;/center&gt;&#xA;                        &#xA;                            &lt;p&gt;&lt;/p&gt;&#xA;                        &#xA;                     &#xA;                 &#xA;            &lt;/section&gt;&#xA;            &#xA;            &lt;/AmplifyAuthenticator&gt;&#xA;                        &#xA;        &lt;/section&gt;&#xA;        &lt;/div&gt;&#xA;      );&#xA;    }&#xA;&#xA;&#xA;export default WriteTestPage;&#xA;</code></pre>&#xA;",16415505,,16415505,2021-07-09 17:46:58,2021-07-09 17:46:58,AWS Graphql Error - Amplify mutations cannot write to dynamoDB,<amazon-web-services><graphql><aws-amplify><aws-appsync>,0,8,0,2021-07-09 15:48:04
68338873,2,,68314137,1,,"<p>You can define a filter/condition on any GraphQL query such as:</p>&#xA;<pre><code>query {&#xA;  users(permission: 'ADMIN') {&#xA;    ...&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The <code>permission</code> param is passed to your resolver (say DynamoDb VTL template, Lambda etc) to be handled however you want - to GQL this is just another parameter.</p>&#xA;<p>You can carry this concept into nested field by creating an <code>events</code> resolver and you'd then call it like this:</p>&#xA;<pre><code>query {&#xA;  user(id: '123') {&#xA;    name&#xA;    events(minPrice: 200) {&#xA;      nodes: {&#xA;        id&#xA;        eventName&#xA;        eventDate&#xA;      }&#xA;    }&#xA;    dob&#xA;    ...&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>In above case I am using a simple <code>minPrice</code> param but you could do more complex things such price ranges, even pass operators (eq, gt, ...). It's all irrelevant to GraphQL - all gets passed to the resolver.</p>&#xA;<p>How you implement that on backend depends on your setup. I use AppSync without Amplify and write my own VTL templates and build the DynamoDb request using the provided GQL fields.</p>&#xA;<p><a href=""https://stackoverflow.com/questions/54003825/appsync-query-for-all-items-created-within-a-date-range"">Here</a> is an SO post that shows how to create a date filter.</p>&#xA;",856498,,,,2021-07-11 18:10:56,"",,0,0,0,2021-07-11 18:10:56
68356475,2,,68354183,0,,"<p>You should add the <code>ChatService</code> into the <code>context</code> of a resolver, it's the third parameter, NOT the fourth. See <a href=""https://graphql.org/learn/execution/#root-fields-resolvers"" rel=""nofollow noreferrer"">Root fields &amp; resolvers</a></p>&#xA;<blockquote>&#xA;<p><code>context</code> A value which is provided to every resolver and holds important contextual information like the currently logged in user, or access to a database.</p>&#xA;</blockquote>&#xA;",6463558,,,,2021-07-13 04:25:04,"",,0,0,0,2021-07-13 04:25:04
68365558,1,,,0,213,"<p>I have a Graphql query where I want to return particular fields as a list. Is there a way that I can do this? For example:</p>&#xA;<p>Here is my typedef:</p>&#xA;<pre><code>type Identity{&#xA;    First:String,&#xA;    Last:String,&#xA;    Age:String&#xA;    }&#xA;</code></pre>&#xA;<p>Here is my type query</p>&#xA;<pre><code>getIdentityDetails:[Identity]&#xA;</code></pre>&#xA;<p>Here is my resolvers</p>&#xA;<pre><code>getIdentityDetails: async () =&gt;{&#xA;    try {&#xA;        const identity = await Identity_Table.findAll();&#xA;        return identity;&#xA;    }catch(err){&#xA;        console.log(err);&#xA;    }&#xA;},&#xA;</code></pre>&#xA;<p>Now, here is how I query it</p>&#xA;<pre><code>{getIdentityDetails&#xA;   {&#xA;    First&#xA;    Last&#xA;    Age&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>What I want is to retrieve each field as a list in my query result so for the first I want it to come out as <code>[&quot;john&quot;]</code> not &quot;john&quot;.</p>&#xA;<p>How can I accomplish this?</p>&#xA;",16440641,,10794031,2021-07-14 08:46:19,2021-07-14 08:46:19,Return field in a Graphql query as a list,<javascript><node.js><graphql>,0,2,0,2021-07-13 15:42:05
68371545,1,,,1,267,"<p>In what has been the least helpful error message of 2021, my <code>createUser</code> mutation, despite being passed inputs satisfying all requirements, throws this bummer of a message:</p>&#xA;<pre><code>data: {createUser: null}&#xA;errors: [{path: [&quot;createUser&quot;], data: null, errorType: &quot;ConditionalCheckFailedException&quot;, errorInfo: null,…}]&#xA;0: {path: [&quot;createUser&quot;], data: null, errorType: &quot;ConditionalCheckFailedException&quot;, errorInfo: null,…}&#xA;data: null&#xA;errorInfo: null&#xA;errorType: &quot;ConditionalCheckFailedException&quot;&#xA;locations: [{line: 2, column: 3, sourceName: null}]&#xA;0: {line: 2, column: 3, sourceName: null}&#xA;column: 3&#xA;line: 2&#xA;sourceName: null&#xA;message: &quot;The conditional request failed (Service: DynamoDb, Status Code: 400, Request ID: 70BUB7TAU32M7JGGO6324LGR53VV4KQNSO5AEMVJF6ZZ6ZQ9ASUAAJG, Extended Request ID: null)&quot;&#xA;path: [&quot;createUser&quot;]&#xA;</code></pre>&#xA;<p>My schema:</p>&#xA;<pre><code>type ScheduledEmail @model @auth(rules: [{allow: public}]) {&#xA;  id: ID!&#xA;  frequency: Frequency!&#xA;  scheduleHour: ScheduleHour!&#xA;  scheduleStart: ScheduleStart!&#xA;  user: [User] @connection(keyName: &quot;byScheduledEmail&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type User @model @auth(rules: [{allow: public}]) @key(name: &quot;byScheduledEmail&quot;, fields: [&quot;scheduledEmailId&quot;]) {&#xA;  id: ID!&#xA;  email: String!&#xA;  subscriptions: [ID]!&#xA;  name: String&#xA;  scheduledEmailId: ID&#xA;  scheduledEmail: ScheduledEmail @connection&#xA;}&#xA;</code></pre>&#xA;<p>When keys and values have been mismatched, dynamodb has been kind of enough to be specific about it.&#xA;I haven't provided it a condition so I'm not sure how it can be failing.</p>&#xA;<p>Thanks in advance.</p>&#xA;",7234331,,,,2021-07-14 03:41:04,AWS Amplify + Graphql + Dynamodb: ConditionalCheckFailedException error on mutation,<graphql><amazon-dynamodb><aws-amplify>,1,0,0,2021-07-14 03:09:13
68382524,1,68499924,,0,314,"<p>This is the schema for which I have implement business logic</p>&#xA;<pre><code>type Query {&#xA;     getLicenseInformation(localmd5: String): License @aws_cognito_user_pools&#xA;   getUserInformation(username: String!): CognitoUser @aws_iam&#xA;    listUsers(searchString: String): [NamedResource] @aws_iam&#xA;}&#xA;</code></pre>&#xA;<p>I use RestTemplate as my Java client to consume graphql endpoint giving API key as authorization. I ad dthe api key in the header paart as x-api-key.</p>&#xA;<pre><code>        RestTemplate restTemplate=new RestTemplate();&#xA;        HttpHeaders requestHeaders = new HttpHeaders();&#xA;&#xA;        requestHeaders.set(&quot;x-api-key&quot;,api_key.getId());&#xA;        requestHeaders.set(&quot;Content-Type&quot;,&quot;application/graphql&quot;);&#xA;&#xA;        HttpEntity entity = new HttpEntity(requestHeaders);&#xA;        ResponseEntity&lt;String&gt; exchange = restTemplate.exchange(URL, HttpMethod.POST, new HttpEntity(query,requestHeaders),String.class);&#xA;</code></pre>&#xA;<p>The above implementation retrieves the values from the backend.&#xA;But according the schema which is defined by the other team, the authorization mode is not API key rather iam. So I have to configure the rest template accordingly.</p>&#xA;<p>Where in the Client side code in Java I can configure so that aws_iam is used as authorization method to retrieve the information from the endpoint. Dynamodb is the datasource</p>&#xA;",2437771,,,,2021-07-23 13:24:07,AWS Appsync Graphql Java Client - IAM authorisation,<java><amazon-web-services><graphql><amazon-iam><resttemplate>,1,0,0,2021-07-14 17:15:49
68392161,1,,,0,164,"<p>Getting the following <code>Type Error: &quot;cannot find name 'accountId'&quot;</code> when using <code>useLazyQuery</code> with Typescript. Any idea what I'm doing wrong?</p>&#xA;<pre><code>const CustomerSearch: FC = (): ReactElement =&gt; {&#xA;  type customerData = {&#xA;    id: string;&#xA;    email: string;&#xA;    accountId: string;&#xA;  }&#xA;&#xA;  type customerVars = {&#xA;    accountId: string;&#xA;  }&#xA;&#xA;  const [getCustomer, {data, error}] = useLazyQuery&lt;customerData, customerVars&gt;(GET_CUSTOMER), {variables: {accountId: accountId}}})&#xA;}&#xA;&#xA;return (&#xA;  &lt;button onClick={() =&gt; getCustomer({variables: {accountId: &quot;1234&quot;}})}&#xA;)&#xA;&#xA;</code></pre>&#xA;",1676476,,,,2021-07-15 10:29:41,useLazyQuery Typescript Type Error: cannot find name 'accountId',<javascript><reactjs><typescript><apollo>,0,5,0,2021-07-15 10:29:41
68397842,1,69757808,,2,1574,"<p>I'm currently trying to wrap my head around the below issue, and not getting very far. Currently, I'm running an Apollo-Server as my graphQL server, have prisma2 configured with a postgres database, and am utilizing graphql-codegen to generate the types from my schema. Currently, I'm trying to update a model that has a many-to-many relationship and getting really strange typescript errors being thrown. I'm pretty sure I'm doing the update incorrectly, but the errors I'm seeing aren't helpful.</p>&#xA;<p>The following is the pertinent code snippets:</p>&#xA;<p><em>prisma.schema</em></p>&#xA;<pre><code>model Permission {&#xA;  id       Int             @id @default(autoincrement())&#xA;  verb     PermissionVerb&#xA;  resource PermissionModel&#xA;  own      Boolean         @default(true)&#xA;  roles    Role[]&#xA;}&#xA;    &#xA;model Role {&#xA;  id          Int          @id @default(autoincrement())&#xA;  name        String&#xA;  permissions Permission[]&#xA;}&#xA;&#xA;enum PermissionModel {&#xA;  USER&#xA;  ORDER&#xA;  CUSTOMER&#xA;  PERMISSION&#xA;  ROLE&#xA;}&#xA;&#xA;enum PermissionVerb {&#xA;  CREATE&#xA;  READ&#xA;  UPDATE&#xA;  DELETE&#xA;}&#xA;</code></pre>&#xA;<p><em>permission.gql</em></p>&#xA;<pre><code>extend type Mutation {&#xA;  updatePermission(input: UpdatePermissionInput): PermissionResult!&#xA;}&#xA;&#xA;union PermissionResult = Permission | PermRoleNotFoundError&#xA;&#xA;type Permission {&#xA;  id: Int!&#xA;  own: Boolean&#xA;  resource: PermissionModel!&#xA;  verb: PermissionVerb!&#xA;  roles: [Role]&#xA;}&#xA;&#xA;type Role {&#xA;  id: Int!&#xA;  name: String!&#xA;  permissions: [Permission]&#xA;}&#xA;&#xA;type PermRoleNotFoundError {&#xA;  message: String!&#xA;}&#xA;&#xA;enum PermissionModel {&#xA;  USER&#xA;  ORDER&#xA;  CUSTOMER&#xA;  PERMISSION&#xA;  ROLE&#xA;}&#xA;&#xA;enum PermissionVerb {&#xA;  CREATE&#xA;  READ&#xA;  UPDATE&#xA;  DELETE&#xA;}&#xA;</code></pre>&#xA;<p>and finally the offending code in the resolver:</p>&#xA;<p><em>updatePermission.ts</em></p>&#xA;<pre><code>export const updatePermission: Resolver&lt;&#xA;  ResolversTypes['UpdatePermissionInput'],&#xA;  {},&#xA;  Context,&#xA;  RequireFields&lt;MutationUpdatePermissionArgs, never&gt;&#xA;&gt; = async (_parent, args, context, _info) =&gt; {&#xA;  const { id, verb, resource, own } = args.input&#xA;&#xA;  const oldPermission = await context.prisma.permission.findFirst({&#xA;    where: { id },&#xA;    include: { roles: true }&#xA;  })&#xA;&#xA;  const newPermission = await context.prisma.permission.update({&#xA;    where: { id },&#xA;    data: {&#xA;      id: oldPermission.id,&#xA;      verb: verb ? verb : oldPermission.verb,&#xA;      resource: resource ? resource : oldPermission.resource,&#xA;      own: own ? own : oldPermission.own,&#xA;    },&#xA;  })&#xA;&#xA;  return newPermission&#xA;}&#xA;</code></pre>&#xA;<p>I'm getting the following typescript warning:</p>&#xA;<pre><code>Type '(_parent: {}, args: RequireFields&lt;MutationUpdatePermissionArgs, never&gt;, context: Context, _info: GraphQLResolveInfo) =&gt; Promise&lt;...&gt;' is not assignable to type 'Resolver&lt;UpdatePermissionInput, {}, Context, RequireFields&lt;MutationUpdatePermissionArgs, never&gt;&gt;'.&#xA;Type '(_parent: {}, args: RequireFields&lt;MutationUpdatePermissionArgs, never&gt;, context: Context, _info: GraphQLResolveInfo) =&gt; Promise&lt;...&gt;' is not assignable to type 'ResolverFn&lt;UpdatePermissionInput, {}, Context, RequireFields&lt;MutationUpdatePermissionArgs, never&gt;&gt;'.&#xA;Type 'Promise&lt;Permission&gt;' is not assignable to type 'UpdatePermissionInput | Promise&lt;UpdatePermissionInput&gt;'.&#xA;Type 'Promise&lt;Permission&gt;' is not assignable to type 'Promise&lt;UpdatePermissionInput&gt;'.&#xA;Type 'Permission' is not assignable to type 'UpdatePermissionInput'.&#xA;Types of property 'verb' are incompatible.&#xA;Type 'import(\&quot;/Users/jrichardson/Documents/Projects/wsw/node_modules/.prisma/client/index\&quot;).PermissionVerb' is not assignable to type 'import(\&quot;/Users/jrichardson/Documents/Projects/wsw/backend/src/generated/graphql\&quot;).PermissionVerb'.&#xA;Type '\&quot;CREATE\&quot;' is not assignable to type 'PermissionVerb'.&#xA;</code></pre>&#xA;<p>I don't understand why it thinks the PermissionVerb is not assignable - as from what I can see from .prisma/client/index and the generated/graphql, both enums are identical. Not sure what I'm missing here.</p>&#xA;<p>Any help would be greatly appreciated! Thanks</p>&#xA;",14868550,,,,2021-11-29 16:46:58,Enum mismatch between typescript and graphql-codegen,<typescript><graphql><apollo-server><prisma><graphql-codegen>,2,0,0,2021-07-15 16:50:22
68408148,1,,,2,232,"<p>I am new to action handlers in Hasura and can not see a way to return a custom type or an array of a type.</p>&#xA;<p>In a query, the output type below returns <code>&quot;states&quot;: &quot;[\&quot;hello\&quot;, \&quot;world\&quot;]&quot;</code></p>&#xA;<pre><code>type Output {&#xA;  states : [String]&#xA;}&#xA;</code></pre>&#xA;<p>I have found it also isn't possible return custom types, for example the below passes the UI checks in the console but fails when it tries to apply it to the action.</p>&#xA;<pre><code>type Options {&#xA;   value: String&#xA;   name: String&#xA;}&#xA;type Output {&#xA;  states : [Options]&#xA;}&#xA;</code></pre>&#xA;<pre><code>validation for the given custom types failed because the type &quot;Options&quot; of the field &quot;states&quot; in the object type &quot;Output&quot; is object type which isn't allowed&#xA;</code></pre>&#xA;<p>I'm assuming there is a way around this but I can't see it in the docs or on any tutorials. I do use relationships for some parts of my handlers, however there are more times where I want to return custom data to protect the data in the database, or transform it using business logic.</p>&#xA;<p>Is there a way to achieve arrays or custom types in action handlers? I have reached out to Hasura support and created an issue on their repo but without any reply/feedback.</p>&#xA;",10141904,,10141904,2021-07-23 02:07:46,2021-07-23 02:07:46,Custom types and arrays not supported in action handlers,<lambda><graphql><hasura>,0,3,0,2021-07-16 11:20:35
68409211,1,68435202,,0,675,"<p>I was using AWS amplify with React, and GraphQL API.that leverages AWS AppSync. I'm very new to graphQL and my schema currently is like this. This is the schema inside the amplify app:</p>&#xA;<pre><code>type Note @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  title: String&#xA;  movie: String&#xA;}&#xA;</code></pre>&#xA;<p>For example, I want to store an array of objects inside components in the Note type like this:</p>&#xA;<pre><code>type Note @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  title: String&#xA;  movie: String&#xA;  components: []&#xA;}&#xA;</code></pre>&#xA;<p>Iam aware of that I can create a new table and do this:</p>&#xA;<pre><code>type Note @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  title: String&#xA;  movie: String&#xA;  components: [elements!]!&#xA;}&#xA; &#xA; type elements @model {&#xA;  id: ID!&#xA;  item: String!&#xA;}&#xA;</code></pre>&#xA;<p>But, I don't want to create a new table. Is there any possible way to do this?</p>&#xA;<p>And I saw similar questions on our platform, they are suggesting the AWSJSON <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html#example-schema-usage"" rel=""nofollow noreferrer"">AWS Scalar Types</a></p>&#xA;<p>But there is no actual resources for using them. if that's the solution kindly help me with the procedures how can we write mutation for them.</p>&#xA;",14817832,,4420967,2021-07-16 13:18:51,2022-10-09 09:09:30,Store objects into array without creating a new table in AWS AppSync schema,<amazon-web-services><graphql><aws-amplify><aws-appsync><aws-amplify-cli>,3,0,0,2021-07-16 12:42:32
68435202,2,,68409211,0,,"<p>I have found the solution:</p>&#xA;<p>By Using AWSJSON we can able to create an Array with map without creating a new table in DynamoDB</p>&#xA;<p>Procedure to reproduce:</p>&#xA;<blockquote>&#xA;<p>First Add the AWSJSON to the Schema Graphql like below,</p>&#xA;</blockquote>&#xA;<pre><code>type Note @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  title: String&#xA;  movie: String&#xA;  components: AWSJSON&#xA;}&#xA;</code></pre>&#xA;<blockquote>&#xA;<p>While using create mutation, Pass the data in JSON format</p>&#xA;</blockquote>&#xA;<p>Example:</p>&#xA;<pre><code>let input = `[{\&quot;isPending\&quot;:false,\&quot;isAccepted\&quot;:false}]`&#xA;</code></pre>&#xA;<blockquote>&#xA;<p>While using update mutation there was an issue with AWSJSON which will not update the map existing instead, it will create a new map in the Array.</p>&#xA;</blockquote>&#xA;<p>Solution for this issue is Using the <code>_version</code></p>&#xA;",14817832,,,,2021-07-19 04:43:44,"",,0,0,0,2021-07-19 04:43:44
68445701,1,,,2,123,"<p>I have authenticated with Fauna in two ways -</p>&#xA;<ul>&#xA;<li>Logging into the site, which takes you to your <a href=""https://dashboard.fauna.com"" rel=""nofollow noreferrer"">dashboard</a></li>&#xA;<li>Using the CLI - <code>fauna cloud-login</code></li>&#xA;</ul>&#xA;<p>Given that I've logged into both using the same email/password combination, I would expect that they would show the same databases, but it looks like they are somehow scoped as if they are entirely different. Is this expected? Is there something that I'm missing?</p>&#xA;<p>Screenshots of database lists via web UI and CLI's <code>fauna list-databases</code>, respectively -</p>&#xA;<p><a href=""https://i.stack.imgur.com/Tug9V.png"" rel=""nofollow noreferrer"">Fauna web dashboard</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/64o38.png"" rel=""nofollow noreferrer"">CLI list-databases</a></p>&#xA;<p>There is nothing in the docs that indicates that this behavior is expected. I'm stumped.</p>&#xA;",16472160,,16472160,2021-07-20 02:01:23,2021-07-21 16:15:14,Why are different Fauna databases displayed in the dashboard than are created via the CLI?,<graphql><faunadb>,2,0,0,2021-07-19 19:00:59
68446185,2,,68445701,1,,"<p>You are right, this doesn't appear to be working as expected.</p>&#xA;<p>Is your login to the dashboard with Github or Netlify?  The shell <a href=""https://docs.fauna.com/fauna/current/integrations/shell/login"" rel=""nofollow noreferrer"">does not currently support login with Github/Netlify</a>.  In this case, you will need to go to the dashboard, create a key for your database, and use that key to login to the shell instead of username/password.</p>&#xA;<p>If that is not the case, or otherwise does not help solve things for you, then you can send an email (from the one that you used to create the account) to support@fauna.com with the details of your issue.</p>&#xA;",534056,,,,2021-07-19 19:45:23,"",,0,1,0,2021-07-19 19:45:23
68448780,2,,68445701,1,,"<p>I've cracked it. I'm not sure if there are any bugs involved, or if I just don't really understand the auth system, but</p>&#xA;<p><strong>First</strong>, when you sign in to either the UI or the shell, it seems to revoke your (root?) key for the other one. Logging out and back in to the other will refresh your view there.</p>&#xA;<p><strong>Second</strong>, this revocation is only for the applicable domain/region group you signed into. In the case of the UI this is all of them, while in the case of the shell, this is always 'Classic' (I tried <code>fauna cloud-login --domain db.us.fauna.com</code> but doesn't seem to work - <code>~/.fauna-shell</code> still shows <code>domain=db.fauna.com</code> and the key is valid for Classic). This means you are still logged into the dashboard, but all of the 'Classic' databases disappear from view.</p>&#xA;<p><strong>Third</strong>, while in the state mentioned above, you are able to create a new database in the US or EU region group, but not Classic (attempting will result in <a href=""https://i.stack.imgur.com/lRWrZ.png"" rel=""nofollow noreferrer"">this error</a>). You then remain logged into the shell with the Classic databases listed, and logged into the UI but having your Classic access revoked.</p>&#xA;<p>You're now seeing what I saw -&#xA;<code>fauna list-databases</code> shows all databases in the Classic region group, while the dashboard UI shows all databases NOT in the Classic region group.</p>&#xA;<p>Logging out and back into the site will result in all databases being shown. Logging back into the shell will only ever show the Classic region group databases.</p>&#xA;<p>** Edit ** Attempting to login to a region group:</p>&#xA;<pre><code>bash-3.2$ fauna version&#xA;fauna-shell/0.12.4 darwin-x64 node-v16.1.0&#xA;bash-3.2$ fauna cloud-login --domain=db.us.fauna.com&#xA;For email login, ...&lt;truncated&gt;&#xA;&#xA;Email or secret key: &lt;email&gt;&#xA;Password: ***************&#xA;The 'cloud' endpoint already exists. Overwrite? [y/n]: y&#xA;bash-3.2$ fauna list-databases --domain=db.us.fauna.com&#xA; ›   Error: Could not Connect to https://db.us.fauna.com Unauthorized Secret&#xA;bash-3.2$ fauna list-databases&#xA;listing databases&#xA;tsukiyomi&#xA;</code></pre>&#xA;",16472160,,16472160,2021-07-21 16:15:14,2021-07-21 16:15:14,"",,0,4,0,2021-07-20 02:00:26
68450681,1,,,1,48,"<p>I've set up the Amplify Authentication UI in React, so I can register/sign:</p>&#xA;<pre><code>import { useState, useEffect } from &quot;react&quot;;&#xA;import { Auth } from &quot;aws-amplify&quot;;&#xA;import { withAuthenticator, AmplifySignOut } from &quot;@aws-amplify/ui-react&quot;;&#xA;&#xA;const Profile = () =&gt; {&#xA;  const [user, setUser] = useState(null);&#xA;  useEffect(() =&gt; {&#xA;    Auth.currentAuthenticatedUser()&#xA;      .then((user) =&gt; {&#xA;        console.log(&quot;User: &quot;, user);&#xA;        setUser(user);&#xA;      })&#xA;      .catch((err) =&gt; setUser(null));&#xA;  }, []);&#xA;&#xA;  return (&#xA;    &lt;div&gt;&#xA;      {user &amp;&amp; &lt;h1&gt;Welcome, {user.username}&lt;/h1&gt;}&#xA;      &lt;AmplifySignOut /&gt;&#xA;    &lt;/div&gt;&#xA;  );&#xA;};&#xA;&#xA;export default withAuthenticator(Profile);&#xA;&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/zAKKY.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zAKKY.png"" alt=""enter image description here"" /></a></p>&#xA;<p>But when I register a new user, the user is saved into Federated Identities User Pools. Shouldn't it be saved into DynamoDB? I've been trying to figure why it isn't saving in there? In addition, I've created a new User type model, thinking that if I register a new account, there will be data populated:</p>&#xA;<pre><code>type User&#xA;  @model(subscriptions: null)&#xA;  @key(fields: [&quot;userId&quot;])&#xA;  @auth(rules: [{ allow: owner, ownerField: &quot;userId&quot; }, { allow: private, operations: [read] }]) {&#xA;  userId: ID!&#xA;  posts: [Post] @connection(keyName: &quot;postsByUserId&quot;, fields: [&quot;userId&quot;])&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;  following: [Following] @connection(keyName: &quot;followingByUserId&quot;, fields: [&quot;userId&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>Something like this, where userId field will be updated?</p>&#xA;",659751,,,,2021-07-20 06:54:21,React AWS Amplify Authentication Saves To Federated Identities and User Models,<reactjs><amazon-web-services><graphql><next.js><aws-amplify>,0,0,0,2021-07-20 06:54:21
68459619,2,,68284161,0,,<p>You have to select the implementation of the interface in the query</p>&#xA;<pre><code> query {&#xA;  organizationById (organizationId: &quot;00000000-0000-0000-0000-000000000001&quot;){&#xA;     legalName&#xA;     legalAddress {&#xA;       country&#xA;      primaryLine&#xA;      additionalLine&#xA;      ... on UnitedStatesAddress {&#xA;         state&#xA;      }&#xA;    }&#xA;     id&#xA;     registeredOn&#xA;     asResponder {&#xA;       settings {&#xA;         isVisible&#xA;         dataCenterLocation&#xA;       }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;,7188852,,,,2021-07-20 18:16:08,"",,0,0,0,2021-07-20 18:16:08
68465885,1,,,2,3449,"<p>I'm working with React + NextJs and have Amplify Graphql implemented. I'm logged in and set my current user as an Admin group, however, I'm not able to mutate a data based on authorId.</p>&#xA;<p>The logged in userId is <strong>1234</strong> (for example)</p>&#xA;<pre><code>type Xp&#xA;  @model&#xA;  @key(name: &quot;xpsByUserId&quot;, fields: [&quot;authorId&quot;])&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner, ownerField: &quot;authorId&quot; }&#xA;      { allow: public, operations: [read] }&#xA;      { allow: private, operations: [read] }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  authorId: ID!&#xA;  author: User @connection(fields: [&quot;authorId&quot;])&#xA;  name: String&#xA;  visibility: Visibility&#xA;  post: [Post] @connection(name: &quot;XpPosts&quot;)&#xA;  createdAt: String&#xA;}&#xA;</code></pre>&#xA;<p>Trying to mutate:</p>&#xA;<pre><code>mutation MyMutation {&#xA;  createXp(input: {authorId: &quot;1234&quot;, name: &quot;fdsfa&quot;}) {&#xA;    id&#xA;    name&#xA;    author {&#xA;      username&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I get a message: <code>Not Authorized to access createXp on type Xp</code></p>&#xA;<p>This is my user type:</p>&#xA;<pre><code>type User&#xA;  @model(subscriptions: null)&#xA;  @key(fields: [&quot;userId&quot;])&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: groups, groups: [&quot;Admin&quot;] }&#xA;      { allow: owner, ownerField: &quot;userId&quot; }&#xA;      { allow: private, operations: [read] }&#xA;    ]&#xA;  ) {&#xA;  userId: ID!&#xA;  username: String!&#xA;  email: String!&#xA;  posts: [Post] @connection(keyName: &quot;postsByUserId&quot;, fields: [&quot;userId&quot;])&#xA;  xps: [Xp] @connection(keyName: &quot;xpsByUserId&quot;, fields: [&quot;userId&quot;])&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;  following: [Following] @connection(keyName: &quot;followingByUserId&quot;, fields: [&quot;userId&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>What am I doing wrong here?</p>&#xA;",659751,,659751,2021-07-21 18:10:40,2021-07-31 20:45:20,Graphql - Not Authorized to access error message from AWS AppSync Amplify Console,<reactjs><graphql><amazon-dynamodb><next.js><aws-amplify>,1,1,0,2021-07-21 07:55:52
68475946,1,68475947,,1,223,"<p>In my AWS Amplify project I am using a GraphQL API with several <code>@model</code> directives. Therefore, Amplify generated multiple DynamoDB tables in my AWS backend. Now, when removing such a <code>@model</code> or renaming it, the old DynamoDB table will be <strong>permanently deleted with all the contained data</strong>!</p>&#xA;<p>How can this be prevented to avoid production data by mistake?</p>&#xA;",4691862,,,,2021-07-21 20:14:30,How to prevent losing production data when changing my GraphQL schema in AWS Amplify?,<amazon-web-services><graphql><amazon-dynamodb><aws-amplify><aws-amplify-cli>,1,0,0,2021-07-21 20:14:30
68475947,2,,68475946,1,,"<p>To prevent your DynamoDB tables from being deleted you can set the <code>DeletionPolicy</code> to <code>Retain</code>. Unfortunately, Amplify does not do this by default.</p>&#xA;<p>Therefore, you can use the <strong>custom GraphQL directive</strong> <code>@retain</code> like this:</p>&#xA;<ol>&#xA;<li>Install the transformer: <code>npm install --save graphql-retain-transformer</code>.</li>&#xA;<li>Edit <code>amplify/backend/api/&lt;YOUR_API&gt;/transform.conf.json</code> and append <code>&quot;graphql-retain-transformer&quot;</code> to the transformers field:</li>&#xA;</ol>&#xA;<pre><code>&quot;transformers&quot;: [&#xA;    &quot;graphql-retain-transformer&quot;&#xA;]&#xA;</code></pre>&#xA;<ol start=""3"">&#xA;<li>In your <code>schema.graphql</code> file, append the <code>@retain</code> directive to all the <code>@model</code> types that you want to activate the Retain Deletion Policy for:</li>&#xA;</ol>&#xA;<pre><code>type Todo @model @retain {&#xA;  id: ID!&#xA;  title: String!&#xA;  description: String&#xA;}&#xA;</code></pre>&#xA;<p><strong>GitHub repository of the custom directive:</strong> <a href=""https://github.com/flogy/graphql-retain-transformer"" rel=""nofollow noreferrer"">https://github.com/flogy/graphql-retain-transformer</a> (please leave a ⭐️ if you like it )</p>&#xA;<p><strong>A more detailed blog post about it:</strong> <a href=""https://react-freelancer.ch/blog/amplify-retain-dynamodb-tables"" rel=""nofollow noreferrer"">https://react-freelancer.ch/blog/amplify-retain-dynamodb-tables</a></p>&#xA;",4691862,,,,2021-07-21 20:14:30,"",,0,0,0,2021-07-21 20:14:30
68481908,1,,,1,472,"<p>This is my query</p>&#xA;<pre><code>Query(&#xA;            options: QueryOptions(&#xA;                document: gql(query),&#xA;                variables: {&#xA;                  'startIndex': startIndex,&#xA;                  'endIndex': startIndex + 50&#xA;                },&#xA;                fetchPolicy: FetchPolicy.cacheAndNetwork,&#xA;            ),&#xA;            builder: (&#xA;                QueryResult result, { VoidCallback refetch, FetchMore fetchMore }&#xA;                )&#xA;            {&#xA;              if (result.data == null){&#xA;                refetch();&#xA;                print('data is null');&#xA;              }&#xA;              startIndex = repositories.length;&#xA;              print(startIndex);&#xA;              return ListView.builder();&#xA;</code></pre>&#xA;<p>everytime I reload the page, it is showing</p>&#xA;<p>result: null</p>&#xA;<p>when print(result);</p>&#xA;<p>Then I added refetch() if result is null. Now it is showing</p>&#xA;<p>Query is not refetch safe&#xA;I used graphql_flutter ^5.0.0</p>&#xA;",16136920,,,,2021-07-22 08:52:34,Good use of refetch for ListView with graphql_flutter,<graphql-flutter>,0,0,0,2021-07-22 08:52:34
68502878,1,,,0,1100,"<p>I am trying to use GraphQL in Flutter with Hasura. This time, I am using Ferry Flutter but currently my response just returns null even though the endpoint is correct and I can access the data within the <code>hasura/console</code>.</p>&#xA;<p>When I simply curl or web access, it returns&#xA;<code>{&quot;path&quot;:&quot;$&quot;,&quot;error&quot;:&quot;resource does not exist&quot;,&quot;code&quot;:&quot;not-found&quot;}</code></p>&#xA;<p>First here is my client initialization</p>&#xA;<pre><code>Client initClient(String url) {&#xA;  final link = HttpLink(url);&#xA;&#xA;  final client = Client(&#xA;    link: link,&#xA;  );&#xA;  return client;&#xA;}&#xA;</code></pre>&#xA;<p>Next, I assign my endpoint in the <code>main.dart</code></p>&#xA;<pre><code>void main() {&#xA;  WidgetsFlutterBinding.ensureInitialized();&#xA;  GetIt.instance.registerSingleton&lt;Client&gt;(&#xA;    initClient('http://localhost:8081/v1/graphql'),&#xA;  );&#xA;  runApp(App());&#xA;}&#xA;</code></pre>&#xA;<p>And here is my <code>docker-compose.yaml</code></p>&#xA;<pre><code>version: &quot;3.6&quot;&#xA;services:&#xA;  postgres:&#xA;    image: postgres:12&#xA;    restart: always&#xA;    volumes:&#xA;      - db_data:/var/lib/postgresql/data&#xA;    environment:&#xA;      POSTGRES_PASSWORD: pass&#xA;  graphql-engine:&#xA;    image: hasura/graphql-engine:v2.0.3&#xA;    ports:&#xA;      - &quot;8081:8080&quot;&#xA;    depends_on:&#xA;      - &quot;postgres&quot;&#xA;    restart: always&#xA;    environment:&#xA;      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:pass@postgres:5432/postgres&#xA;      ## enable the console served by server&#xA;      HASURA_GRAPHQL_ENABLE_CONSOLE: &quot;true&quot; # set to &quot;false&quot; to disable console&#xA;      ## enable debugging mode. It is recommended to disable this in production&#xA;      HASURA_GRAPHQL_DEV_MODE: &quot;true&quot;&#xA;      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log&#xA;&#xA;      ## uncomment next line to set an admin secret&#xA;      # HASURA_GRAPHQL_ADMIN_SECRET: shouldISetSomething?&#xA;volumes:&#xA;  db_data:&#xA;</code></pre>&#xA;<p>Finally, I tried to define simple StatelessWidget with <code>Ferry Flutter</code> as below.</p>&#xA;<pre><code>class ToDoScreen extends StatelessWidget {&#xA;  ToDoScreen({Key? key}) : super(key: key);&#xA;&#xA;  final req = GFetchToDoListReq();&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return CupertinoPageScaffold(&#xA;      child: CustomScrollView(&#xA;        slivers: [&#xA;          CupertinoSliverNavigationBar(&#xA;            largeTitle: Text('TODO'),&#xA;            trailing: CupertinoButton(&#xA;              padding: const EdgeInsets.all(5),&#xA;              onPressed: () =&gt; Navigator.pushNamed(context, '/new'),&#xA;              child: Icon(&#xA;                CupertinoIcons.plus,&#xA;                size: 30.0,&#xA;              ),&#xA;            ),&#xA;          ),&#xA;          SliverList(&#xA;            delegate: SliverChildListDelegate(&#xA;              [&#xA;                Operation&lt;GFetchToDoData, GFetchToDoListVars&gt;(&#xA;                  client: GetIt.instance&lt;Client&gt;(),&#xA;                  operationRequest: req,&#xA;                  builder: (BuildContext context,&#xA;                      OperationResponse&lt;GFetchToDoData?,&#xA;                              GFetchToDoListVars?&gt;?&#xA;                          response,&#xA;                      error) {&#xA;                    if (response!.loading) {&#xA;                      return Center(&#xA;                        child: CircularProgressIndicator(),&#xA;                      );&#xA;                    }&#xA;                 // HERE, todos are null so I can't pass null operation.&#xA;&#xA;                    final todos = response.data?.recipes;&#xA;&#xA;                    if (recipes!.isEmpty) {&#xA;                      return _buildNoRecipes(context);&#xA;                    }&#xA;&#xA;                    return Column(&#xA;                      children: [&#xA;                       // some codes&#xA;                          ),&#xA;                      ],&#xA;                    );&#xA;                  },&#xA;                ),&#xA;              ],&#xA;            ),&#xA;          ),&#xA;        ],&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I am assuming I have to add admin secret in the client header but I am not sure if it is correct, and also not sure how to define admin secret or whatever I need to access to the endpoint correctly.</p>&#xA;",13765994,,,,2021-08-08 11:50:56,"Error Flutter and Hasura endpoint access returns 'resource does not exist' and ""path"":""$""",<flutter><dart><docker-compose><graphql><hasura>,1,1,0,2021-07-23 17:12:17
68520680,1,,,1,147,"<p>I'm having trouble sorting out <a href=""https://docs.amplify.aws/cli/graphql-transformer/auth#field-level-authorization"" rel=""nofollow noreferrer"">field-level authorization</a>. I would like to have a particular field in a model be read-only.</p>&#xA;<p>Here's a simplified version of the schema:</p>&#xA;<pre><code>type Thing&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      {&#xA;        allow: groups&#xA;        groups: [&quot;Admins&quot;]&#xA;        operations: [read, create, update]&#xA;      }&#xA;      { allow: private, operations: [read]}&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  foo: String&#xA;  bar: String&#xA;  baz: ID&#xA;    @auth(&#xA;      rules: [&#xA;        { allow: groups, groups: [&quot;Admins&quot;], operations: [read] }&#xA;      ]&#xA;    )&#xA;}&#xA;</code></pre>&#xA;<p>My expectation is that all users would be able to read <code>foo</code>, <code>bar</code>, and <code>baz</code>, but only members of <code>Admins</code> would be able to update <code>foo</code> and <code>bar</code>, but that not even Admins would be allowed to update <code>baz</code>. I'm finding, however, that Admins are still able to write to <code>baz</code>, which I do not want.</p>&#xA;<p>I would think that field-level rules would have precedence over model-level rules.</p>&#xA;<p>Is such a thing possible?</p>&#xA;",1974197,,,,2022-02-07 23:05:40,Field-level authorization with Amplify GrraphQL,<graphql><aws-appsync><amplify>,1,0,0,2021-07-25 16:46:55
68537674,2,,68537633,0,,"<p>Those may be <a href=""https://stackoverflow.com/questions/50002518/how-to-add-field-resolver-in-apollo-graphql-server"">field resolvers</a>. When Apollo finishes a query or mutation resolver and is about to return an object, e.g. in your example, Users or accounts, it runs it through any field resolvers that are present for that object. The field resolver can modify or add fields that are part of the object.</p>&#xA;",364966,,,,2021-07-27 00:35:01,"",,0,0,0,2021-07-27 00:35:01
68543600,2,,61799558,0,,"<p>GraphQL allows you to:</p>&#xA;<ul>&#xA;<li>&quot;get what you want&quot;;</li>&#xA;<li>manipulate data on write;</li>&#xA;<li>customize response on read;</li>&#xA;</ul>&#xA;<p>You can of course write a <code>createPerson</code> <strong>mutation resolver</strong> to:</p>&#xA;<ul>&#xA;<li>ask another table for additional data (if missing arg);</li>&#xA;<li>write into DB;</li>&#xA;</ul>&#xA;<p>But it doesn't affect (isn't suitable for) <strong>existing records</strong>.</p>&#xA;<p>You can also use <strong>read resolvers</strong> to update missing fields in records using field resolver - a kind of 'eventual consistency'.</p>&#xA;<p>Write person resolver to read a person record and additional <code>person.gender</code> field resolver to get value for missing <code>gender</code> value. The second one can be used to update the 'main' person [DB table] record:</p>&#xA;<ul>&#xA;<li>read a missing value from other table;</li>&#xA;<li>write a value into person record on the 'main' table;</li>&#xA;<li>return value.</li>&#xA;</ul>&#xA;<p><strong>Next time</strong> person resolver will read <code>gender</code> value at once (from 'main' person table), [additional] <strong>field resolver won't be called at all</strong>.</p>&#xA;<p><strong>This technique can be used to convert DB data</strong> without writing SQL/DB specific code (different syntax/types problems, safer on more complex logic) - it's enough to read each/all person's <code>gender</code> fields. Field resolver (and the other/old table) can be removed after that.</p>&#xA;",6124657,,,,2021-07-27 10:55:12,"",,0,0,0,2021-07-27 10:55:12
68545150,2,,68544844,1,,"<p>What you can do in a &quot;simple&quot; <a href=""https://firebase.google.com/docs/functions/http-events"" rel=""nofollow noreferrer"">HTTP Cloud Function</a> can be done in a <a href=""https://firebase.google.com/docs/functions/callable"" rel=""nofollow noreferrer"">Callable Cloud Function</a>.</p>&#xA;<p>Actually, Callable Cloud Functions are HTTP Cloud Functions with specific request and response formats, see the <a href=""https://firebase.google.com/docs/functions/callable-reference"" rel=""nofollow noreferrer"">Protocol specification</a>.</p>&#xA;",3371862,,,,2021-07-27 12:48:38,"",,0,4,0,2021-07-27 12:48:38
68559311,1,68642107,,4,1825,"<p>I have an Apollo useMutation hook with TypeScript types:</p>&#xA;<pre><code>const MY_MUTATION = gql`&#xA;  mutation($source: String!) {&#xA;    doSomething(source: $source) {&#xA;      result&#xA;    }&#xA;  }&#xA;`&#xA;&#xA;const [myMutation] = useMutation&lt;ReturnPayloadType, MutationVariables&gt;(MY_MUTATION);&#xA;</code></pre>&#xA;<p>Which gives me type safety when I use it:</p>&#xA;<pre><code>myMutation({&#xA;  variables: {&#xA;    source: 'some source',&#xA;    // foo: 'bar' This would error if uncommented. &#xA;  }&#xA;})&#xA;</code></pre>&#xA;<p>This is working but now I need to use the <code>refetchQueries</code> key. How can I add types to it?</p>&#xA;<pre><code>myMutation({&#xA;  variables: {&#xA;    source: 'some source',&#xA;    // foo: 'bar' This would error if uncommented. &#xA;  },&#xA;  refetchQueries: [&#xA;    {&#xA;      query: MY_OTHER_QUERY,&#xA;      variables: {&#xA;        foo: 'bar' // I want to add type safety here&#xA;      }&#xA;    }&#xA;  ]&#xA;})&#xA;</code></pre>&#xA;",467875,,,,2021-09-24 03:13:18,TypeScript type for Apollo useMutation's refetchQueries?,<typescript><apollo-client>,3,0,0,2021-07-28 11:10:40
68562341,1,68581796,,1,411,"<p>I have an AWS Amplify project that has three different user groups in Cognito. An Admin, Instructor, and Student group. I also have a GraphQL Schema that looks like this.</p>&#xA;<pre><code>type DriveTime @model {&#xA;  id: ID!&#xA;  start: AWSDateTime!&#xA;  end: AWSDateTime!&#xA;  openRegistration: AWSDateTime!&#xA;  closeRegistration: AWSDateTime!&#xA;  vehicle: Vehicle @connection(name: &quot;VehicleDriveConnection&quot;)&#xA;  instructor: Instructor @connection(name: &quot;InstructorDriveConnection&quot;)&#xA;  student: Student @connection(name: &quot;StudentDriveConnection&quot;)&#xA;  evaluation: DriveEvaluation @connection(name: &quot;DriveEvaluationConnection&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>Basically Admins or Instructors put in times that the students can then register for.</p>&#xA;<p>I want to create authorization rules that allow for the following:</p>&#xA;<ul>&#xA;<li><p>Admin group can read, write, update, and delete anything anything.</p>&#xA;</li>&#xA;<li><p>Instructor group can read, write, update, and delete anything anything.</p>&#xA;</li>&#xA;<li><p>Student group can only read if (the current date is within the openRegistration and closeRegistration fields) or (the student field matches the logged in student).</p>&#xA;</li>&#xA;<li><p>If the current date is within the openRegistration and closeRegistration fields and the student field is null, then the student can register themself for the DriveTime.</p>&#xA;</li>&#xA;<li><p>If the student field matches the logged in student, and the current date is before the start field, the student can write to the student field to unregister or cancel.</p>&#xA;</li>&#xA;</ul>&#xA;<p>Is Amplify GraphQL @Auth capable of this?</p>&#xA;",12130820,,,,2021-07-29 19:20:42,AWS Amplify GraphQL authorization based on field values,<graphql><amazon-dynamodb><amazon-cognito><aws-amplify><aws-serverless>,1,0,0,2021-07-28 14:32:28
68581796,2,,68562341,0,,"<p>Have a read through the documentation:</p>&#xA;<p>[1] <a href=""https://docs.amplify.aws/cli/graphql-transformer/auth"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql-transformer/auth</a></p>&#xA;<p>[2] <a href=""https://docs.amplify.aws/cli/graphql-transformer/directives#aws-appsync-provided-directives"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql-transformer/directives#aws-appsync-provided-directives</a></p>&#xA;<p>[3] <a href=""https://aws.amazon.com/blogs/mobile/graphql-security-appsync-amplify/"" rel=""nofollow noreferrer"">https://aws.amazon.com/blogs/mobile/graphql-security-appsync-amplify/</a></p>&#xA;<p>Some of your requirements may have no out the box support which means you may have to create custom logic- check out <code>Lambda Resolvers</code>: <a href=""https://docs.amplify.aws/cli/graphql-transformer/function#usage"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql-transformer/function#usage</a></p>&#xA;",5697992,,,,2021-07-29 19:20:42,"",,0,1,0,2021-07-29 19:20:42
68591430,1,,,0,222,"<p>I have a problem figuring out how to update a data shown in the client based on changes in the database. Just a basic dashboard with real-time data. I am using GraphQL and dynamoDB for this project.</p>&#xA;<p>The data itself is coming through IoT, and I am redirecting them to a dynamoDB table. All I want is to update the dashboard whenever new data enters in the dynamoDB table.</p>&#xA;<p>I heard about AppSync and Amplify, and that they have subscriptions already built in. But these subscriptions only work when a mutation is triggered. And thats not what I want, I don't want to fire any mutation, just to trigger an updated when I receive new data.</p>&#xA;<p>I also know there are DynamoDB streams, but I really don't want to use them because I already started using Amplify. (the wiring would be terrible)</p>&#xA;<p>Is there any other approach to this use case? Without using DynamoDB streams..&#xA;Am I missing something from Amplify/AppSync, and there is a way to do it with these frameworks?</p>&#xA;<p>Thank You all for the responses/suggestions.</p>&#xA;",11148124,,,,2021-07-30 13:04:14,GraphQL subscriptions with dynamoDB,<amazon-web-services><graphql><amazon-dynamodb><aws-amplify><subscription>,0,2,0,2021-07-30 13:04:14
68605735,2,,68465885,0,,"<p>Try mentioning auth rules in Xp model like below as per <a href=""https://github.com/aws-amplify/amplify-cli/issues/2926"" rel=""nofollow noreferrer"">link</a>,</p>&#xA;<pre><code>type Xp&#xA;  @model&#xA;  @key(name: &quot;xpsByUserId&quot;, fields: [&quot;authorId&quot;])&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner, ownerField: &quot;authorId&quot;, operations: [create, delete, read, update] },&#xA;      { allow: groups, groups: [&quot;Admin&quot;], operations: [create, delete, read, update]  },&#xA;      { allow: public, operations: [read] },&#xA;      { allow: private, operations: [read] }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  authorId: ID!&#xA;  author: User @connection(fields: [&quot;authorId&quot;])&#xA;  name: String&#xA;  visibility: Visibility&#xA;  post: [Post] @connection(name: &quot;XpPosts&quot;)&#xA;  createdAt: String&#xA;}&#xA;</code></pre>&#xA;",6681284,,,,2021-07-31 20:45:20,"",,0,0,0,2021-07-31 20:45:20
68620114,1,,,0,98,"<p>Our code development team is implementing a GraphQL API to replace the current method for our website to access the AWS RDS Web Edition SQL Server 2017 back-end.&#xA;I have noticed that a query across multiple tables does not use the DB native relations, but loads each table individually and passes filtered parameters of the rows required for each table, derived from the previous table keys.</p>&#xA;<p>Example of TSQL query:</p>&#xA;<pre><code>Select c.Name&#xA;from a&#xA;inner join b on b.b_id = a.b_id&#xA;inner join c on c.c_id = b.c_id&#xA;</code></pre>&#xA;<p>Similar generated through GraphQL. Bit pseudo-codish because it is GraphQL holding the rseults of the SELECTs:</p>&#xA;<pre><code>Select a.b_id [into a table within GraphQL API. Let's call it *b_ids*] &#xA;from a&#xA;&#xA;Select b.c_id [again into a GraphQL table *c_ids*]&#xA;from b&#xA;where b.id IN([list of ids in *b_ids*])&#xA;&#xA;Select c.Name&#xA;from c&#xA;WHERE c.id IN ([list of ids in *c_ids*])&#xA;</code></pre>&#xA;<p>All we see on a trace is:</p>&#xA;<pre><code>Select a.b_id &#xA;from a&#xA;&#xA;Select b.c_id&#xA;from b&#xA;where b.id IN(1, 2, 3, 4 etc..)&#xA;&#xA;Select c.Name&#xA;from c&#xA;WHERE c.id IN (1, 2, 3, 4 etc..)&#xA;</code></pre>&#xA;<p>I am concerned about this method, the performance that may suffer and the threshold of SQL Server queries (64KB) that may be breached on 1 to very many rows in cascades. We have junction tables with hundreds of thousands of rows.</p>&#xA;<p>I would have thought if my concerns were valid then there would be much to find online, but I haven't found anything. Has anyone used these platforms together that can give some indications, warnings or reassurance, particularly in regard to using with a website requiring quick responses. Tips appreciated.</p>&#xA;",7125938,,7125938,2021-08-04 13:34:46,2021-08-04 13:34:46,Can GraphQL break SQL Server when attempting queries with 1 to very high number JOINs? What issues can arise from such JOINs?,<sql-server><performance><graphql>,1,8,0,2021-08-02 10:33:25
68622425,1,,,1,282,"<p>I have the following in my schema for my AWS Amplify project:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type DriveTime @model&#xA;@auth( rules: [&#xA;  {allow: groups, groups: [&quot;Admin&quot;, &quot;Instructor&quot;]},&#xA;  { allow: private, provider: iam }&#xA;]) {&#xA;  id: ID!&#xA;  start: AWSDateTime!&#xA;  end: AWSDateTime!&#xA;  openRegistration: AWSDateTime!&#xA;  closeRegistration: AWSDateTime!&#xA;  vehicle: Vehicle @connection(name: &quot;VehicleDriveConnection&quot;)&#xA;  instructor: Instructor @connection(name: &quot;InstructorDriveConnection&quot;) @aws_cognito_user_pools @aws_iam&#xA;  student: Student @connection(name: &quot;StudentDriveConnection&quot;)&#xA;  evaluation: DriveEvaluation @connection(name: &quot;DriveEvaluationConnection&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>I want to be able to list all drive times where the student connection is empty or null. I am able to get all driveTimes for a single student but not all driveTimes where there is no student.</p>&#xA;<p>Since I dont want students to be able to access drive times that are either not open for registration or already registered to another student I have added this to my schema:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type AvailableDriveTime {&#xA;  id: ID!&#xA;  start: AWSDateTime!&#xA;  end: AWSDateTime!&#xA;  openRegistration: AWSDateTime!&#xA;  closeRegistration: AWSDateTime!&#xA;  instructorFirstName: String!&#xA;  instructorLastName: String!&#xA;}&#xA;&#xA;type Query {&#xA;  listAvailableDriveTimes(limit: Int, nextToken: String): AvailableDriveTimesConnection @function(name: &quot;listAvailableDriveTimes-${env}&quot;) @aws_cognito_user_pools @aws_iam&#xA;}&#xA;</code></pre>&#xA;<p>And this is my current query in the Lambda resolver:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>let currentDate = new Date();&#xA;const listDrives = `query ListDrives($limit: Int, $nextToken: String) {&#xA;  listDriveTimes(limit: $limit, nextToken: $nextToken, filter: {and: {openRegistration: {le: &quot;${currentDate.toISOString()}&quot;}, closeRegistration: {ge: &quot;${currentDate.toISOString()}&quot;}}}) {&#xA;    items {&#xA;      id&#xA;      start&#xA;      end&#xA;      openRegistration&#xA;      closeRegistration&#xA;      instructor {&#xA;        firstName&#xA;        lastName&#xA;      }&#xA;      student {&#xA;        username&#xA;      }&#xA;    }&#xA;    nextToken&#xA;  }&#xA;}`&#xA;</code></pre>&#xA;<p>My current solution is sorting in the lambda resolver then returning the right data but it seems like there has to be a more efficient way.</p>&#xA;",12130820,,,,2021-08-02 13:26:26,AWS Amplify GraphQL Query For Null Connections,<amazon-web-services><aws-lambda><graphql><aws-amplify><aws-appsync>,0,0,0,2021-08-02 13:26:26
68628266,2,,60827105,0,,"<p>Adding on to @BSD's solution:</p>&#xA;<ul>&#xA;<li><p>IAM role:</p>&#xA;<ul>&#xA;<li>should grant Trust relationship to ApiGateway&#xA;<pre><code>{&#xA;  &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;  &quot;Statement&quot;: [&#xA;    {&#xA;      &quot;Effect&quot;: &quot;Allow&quot;,&#xA;      &quot;Principal&quot;: {&#xA;        &quot;Service&quot;: &quot;apigateway.amazonaws.com&quot;&#xA;      },&#xA;      &quot;Action&quot;: &quot;sts:AssumeRole&quot;,&#xA;      &quot;Condition&quot;: {}&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;</li>&#xA;<li>should have policy to allow to access AppSync endpoint&#xA;<pre><code>{&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Action&quot;: [&#xA;                &quot;appsync:GraphQL&quot;&#xA;            ],&#xA;            &quot;Resource&quot;: [&#xA;                &quot;arn:aws:appsync:us-east-1:{AWS-Account-Number}:apis/{AppSync-API-ID}/*&quot;&#xA;            ],&#xA;            &quot;Effect&quot;: &quot;Allow&quot;&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;</li>&#xA;</ul>&#xA;</li>&#xA;<li><p>The format for sending query/mutation through APIGW:&#xA;Let's say your AppSync query is:</p>&#xA;</li>&#xA;</ul>&#xA;<pre><code>query MyQuery {&#xA;  foo(request: {bar: &quot;abc123&quot;, baz: &quot;xyz&quot;}) {&#xA;    a&#xA;    b&#xA;    c&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This query turns into the following JSON:</p>&#xA;<pre><code>{&#xA;  &quot;query&quot;: &quot;query MyQuery {foo(request: {bar: \&quot;abc123\&quot;, baz: \&quot;xyz\&quot;}) {a b c} }&quot;&#xA;}&#xA;</code></pre>&#xA;",5447338,,,,2021-08-02 21:47:00,"",,0,0,0,2021-08-02 21:47:00
68638483,1,69052795,,0,274,<p>I want to build an admin tool based on a Hasura backend.&#xA;Different users will have different level of access based on roles.</p>&#xA;<p>Will I be able to do <strong>introspection per role</strong> and therefore know which fields (from queries) and buttons (for mutations) to show?</p>&#xA;,16586349,,,,2021-09-04 05:57:21,Does Hasura generate Role-based introspection?,<graphql><introspection><hasura>,1,4,0,2021-08-03 15:03:30
68643490,2,,59503969,5,,"<p>I used AWS WAF with a rule that blocks any query containing the string <code>__schema</code>, that I then associated with my AppSync endpoint -- which uses OpenID for authentication (re this page: <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/WAF-Integration.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/WAF-Integration.html</a>)</p>&#xA;<p>The rule if you want to just copy and paste into the console:</p>&#xA;<pre><code>{&#xA;  &quot;Name&quot;: &quot;BodyRule&quot;,&#xA;  &quot;Priority&quot;: 5,&#xA;  &quot;Action&quot;: {&#xA;    &quot;Block&quot;: {}&#xA;  },&#xA;  &quot;VisibilityConfig&quot;: {&#xA;    &quot;SampledRequestsEnabled&quot;: true,&#xA;    &quot;CloudWatchMetricsEnabled&quot;: true,&#xA;    &quot;MetricName&quot;: &quot;BodyRule&quot;&#xA;  },&#xA;  &quot;Statement&quot;: {&#xA;    &quot;ByteMatchStatement&quot;: {&#xA;      &quot;FieldToMatch&quot;: {&#xA;        &quot;Body&quot;: {}&#xA;      },&#xA;      &quot;PositionalConstraint&quot;: &quot;CONTAINS&quot;,&#xA;      &quot;SearchString&quot;: &quot;__schema&quot;,&#xA;      &quot;TextTransformations&quot;: [&#xA;        {&#xA;          &quot;Type&quot;: &quot;LOWERCASE&quot;,&#xA;          &quot;Priority&quot;: 0&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And the CloudFormation definitions:</p>&#xA;<pre><code>  AppSyncIntrospectionWebACL:&#xA;    Type: AWS::WAFv2::WebACL&#xA;    Properties:&#xA;      Name: BlockIntrospectionWebACL&#xA;      DefaultAction:&#xA;        Allow: {}&#xA;      Description: Block GraphQL introspection queries&#xA;      Scope: REGIONAL&#xA;      VisibilityConfig:&#xA;        SampledRequestsEnabled: true&#xA;        CloudWatchMetricsEnabled: true&#xA;        MetricName: BlockIntrospectionMetric&#xA;      Rules:&#xA;        - Name: BlockIntrospectionQueries&#xA;          Priority: 0&#xA;          Action:&#xA;            Block: {}&#xA;          VisibilityConfig:&#xA;            SampledRequestsEnabled: true&#xA;            CloudWatchMetricsEnabled: true&#xA;            MetricName: BlockedIntrospection&#xA;          Statement:&#xA;            ByteMatchStatement:&#xA;              FieldToMatch:&#xA;                Body: {}&#xA;              PositionalConstraint: CONTAINS&#xA;              SearchString: __schema&#xA;              TextTransformations:&#xA;                - Type: LOWERCASE&#xA;                  Priority: 0&#xA;&#xA;  AppSyncIntrospectionWebACLAssociation:&#xA;    Type: AWS::WAFv2::WebACLAssociation&#xA;    Properties:&#xA;      ResourceArn: !GetAtt AppSyncAPI.Arn&#xA;      WebACLArn: !GetAtt AppSyncIntrospectionWebACL.Arn&#xA;</code></pre>&#xA;",2371828,,1824988,2022-05-01 16:23:18,2022-05-01 16:23:18,"",,0,0,0,2021-08-03 22:37:47
68661689,1,,,1,1281,"<ol>&#xA;<li><p>I want to configure the syncing of data in a button click. Now it syncs all data when it online.</p>&#xA;</li>&#xA;<li><p>I have two models <code>Post</code> and <code>Comment</code>. When I am fetching all data from <code>Post</code>, it syncs <code>Comment</code>s data too. I want only <code>Post</code> data for a particular user, but it syncs <code>Comment</code> too.</p>&#xA;</li>&#xA;</ol>&#xA;<p>How could I achieve this? Please help.</p>&#xA;<p>Please see the code</p>&#xA;<pre><code>import { DataStore} from &quot;@aws-amplify/datastore&quot;;&#xA;import { Post } from &quot;../models&quot;;&#xA;import Amplify from &quot;@aws-amplify/core&quot;;&#xA;import awsconfig from &quot;./aws-exports&quot;;&#xA;&#xA;Amplify.configure(awsconfig);&#xA;&#xA;public async findAllPosts() {&#xA;    return await DataStore.query(Post);&#xA;}&#xA;</code></pre>&#xA;",1752012,,8412959,2021-08-05 09:45:40,2021-08-19 20:32:32,How could I control amplify DataStore sync,<reactjs><graphql><aws-amplify><amplify>,1,0,0,2021-08-05 06:33:14
68670909,1,,,0,742,"<p>Suppose I have three user groups: <code>admin</code>, <code>doctor</code>, and <code>patient</code></p>&#xA;<p>I want both <code>admin</code> and <code>doctor</code> to be able to create the type <code>Appointment</code>, but I want to forbid <code>patient</code> to do it. To simplify let's suppose that anyone from the 3 groups can read any <code>Appointment</code>.</p>&#xA;<p>Here's the tricky part:</p>&#xA;<p>For each <code>Appointment</code> already created I want the admin group be able to update it and delete it (even if the <code>admin</code> is not the owner of that <code>Appointment</code>), but for the <code>doctor</code> group I want to only allow access to update if the doctor is the owner of the appointment. <strong>Besides <code>admin</code>, I want to let only users in the <code>doctor</code> group to be able to create <code>Appointment</code></strong>. The part in bold is what I'm being unable to do. In the schema I have below, patients are also able to create appointments.</p>&#xA;<p>How do I change it so that only <code>doctor</code> and <code>admin</code> can create?</p>&#xA;<p>Note: in <code>Appointment</code> the create operation for <code>owner</code> must be there, otherwise, the <code>clientId</code> field doesn't auto-populate with the owner id, and I need that. I think that <code>create</code> operation is actually what's creating my problem, but I see no way around.</p>&#xA;<pre><code>type Doctor&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: private, operations: [read] }&#xA;      { allow: groups, groups: [&quot;admin&quot;], operations: [create, update, delete] }&#xA;      { allow: owner, ownerField: &quot;doctorId&quot;, operations: [update] }&#xA;    ]&#xA;  )&#xA;  @key(fields: [&quot;doctorId&quot;]) {&#xA;  doctorId: ID! # This ID won't be auto-populated (it's the cognito pool ID of the doctor)&#xA;  name: String!&#xA;  appointments: [Appointment]&#xA;    @connection(keyName: &quot;byDoctor&quot;, fields: [&quot;doctorId&quot;])&#xA;  createdAt: String&#xA;}&#xA;&#xA;type Patient&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: private, operations: [read] }&#xA;      { allow: groups, groups: [&quot;admin&quot;], operations: [create, update, delete] }&#xA;      { allow: owner, ownerField: &quot;patientId&quot;, operations: [update] }&#xA;    ]&#xA;  )&#xA;  @key(fields: [&quot;patientId&quot;]) {&#xA;  patientId: ID! # This ID won't be auto-populated (it's the cognito pool ID of the patient)&#xA;  name: String!&#xA;  appointments: [Appointment]&#xA;    @connection(keyName: &quot;byPatient&quot;, fields: [&quot;patientId&quot;])&#xA;  createdAt: String&#xA;}&#xA;&#xA;type Appointment&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: private, operations: [read] }&#xA;      { allow: groups, groups: [&quot;admin&quot;], operations: [create, update, delete] }&#xA;      { allow: groups, groups: [&quot;doctor&quot;], operations: [create, read] }&#xA;      { allow: owner, ownerField: &quot;doctorId&quot;, operations: [create, update] }&#xA;    ]&#xA;  )&#xA;  @key(&#xA;    name: &quot;byDoctor&quot;&#xA;    fields: [&quot;doctorId&quot;, &quot;createdAt&quot;]&#xA;    queryField: &quot;appointmentsByDoctorId&quot;&#xA;  )&#xA;  @key(&#xA;    name: &quot;byPatient&quot;&#xA;    fields: [&quot;patientId&quot;, &quot;createdAt&quot;]&#xA;    queryField: &quot;appointmentsByPatientId&quot;&#xA;  ) {&#xA;  id: ID!&#xA;  doctorId: ID # Auto-populated with cognito pool ID of the doctor&#xA;  patientId: ID!&#xA;  doctor: Doctor @connection(fields: [&quot;doctorId&quot;])&#xA;  patient: Patient @connection(fields: [&quot;patientId&quot;])&#xA;  createdAt: String&#xA;}&#xA;</code></pre>&#xA;<p>And here's an illustration of the problem:</p>&#xA;<pre><code># -- Initially authenticated as a user in `admin` group --&#xA;# Result: initially empty (which is expected)&#xA;query ListAppointments {&#xA;  listAppointments {&#xA;    items {&#xA;      id&#xA;      doctorId&#xA;      patientId&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;# Result: succeeds (which is expected)&#xA;mutation CreateDoctor {&#xA;  createDoctor(input: {&#xA;    doctorId: &quot;66a2b382-952d-4e8d-a25e-b8d1876e8017&quot; # arbitrary&#xA;    name: &quot;Doctor 1&quot;&#xA;  }) {&#xA;    doctorId&#xA;    name&#xA;  }&#xA;}&#xA;&#xA;# Result: succeeds (which is expected)&#xA;mutation CreatePatient {&#xA;  createPatient(input: {&#xA;    patientId: &quot;2d9366cd-165b-4437-a910-647900df0587&quot; # arbitrary&#xA;    name: &quot;Bar Patient&quot;&#xA;  }) {&#xA;    patientId&#xA;    name&#xA;  }&#xA;}&#xA;&#xA;# -- Switching auth to user in `doctor` group --&#xA;# Result: succeeds (which is expected)&#xA;# If we run `ListAppointments` now, the appointment created is there&#xA;mutation CreateAppointmentByDoctor {&#xA;  createAppointment(input: {&#xA;    patientId: &quot;8a2b382-952d-4e8d-a25e-b8d187000000&quot; # arbitrary&#xA;  }) {&#xA;    id&#xA;  }&#xA;}&#xA;&#xA;# -- Switching auth to user in `patient` group --&#xA;# Result: succeeds (which is NOT expected)&#xA;# If we run `ListAppointments` now, there are two appointments there,&#xA;# including this one created by a client&#xA;mutation CreateAppointmentByPatient {&#xA;  createAppointment(input: {&#xA;    patientId: &quot;8a2b382-952d-4e8d-a25e-b8d187001000&quot; #arbitrary&#xA;  }) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1868775,,1868775,2021-08-06 11:13:14,2021-08-13 14:24:08,"AWS Amplify GraphQL - allow owner to create, but only if he belongs to a certain group",<api><graphql><crud><aws-amplify><aws-appsync>,1,0,0,2021-08-05 17:14:38
68691984,1,,,2,99,"<p>I have a schema with two object types that link to each other through a field. What is the canonical way to create them in a mutation?</p>&#xA;<hr />&#xA;<p>Let's take a simple schema with a <code>User</code> and an <code>Account</code> object type. The simplest case of interdependency is a one-to-one relationship, where a user has exactly one account and an account has exactly one user.</p>&#xA;<pre><code>type User {&#xA;    id: ID!&#xA;    name: String!&#xA;    account: Account!&#xA;}&#xA;&#xA;type Account {&#xA;    id: ID!&#xA;    email: String!&#xA;    user: User!&#xA;}&#xA;</code></pre>&#xA;<p>How would we the mutations to create a user and an account look like?</p>&#xA;<p>My first idea was to use separate <code>createUser</code> and <code>createAccount</code> mutations and providing the other object's id. But this doesn't work, since the circular dependency requires the other object to be known.</p>&#xA;<pre><code>type Mutation {&#xA;    createUser(id: ID! name: String! accountId: ID!): User&#xA;    createAccount(id: ID! email: String! userId: ID!): Account&#xA;}&#xA;</code></pre>&#xA;<p>We could make the connection field type in one object optional. Then we could create that object with an empty link to the yet non-existing second object, create the second object (with a link to the first), and then go back to the first and update it with a link to the second.</p>&#xA;<p>But I want to avoid making the connection field type optional.</p>&#xA;<p>The only way I see is to create both in a single mutation.</p>&#xA;<pre><code>type Mutation {&#xA;    createUserAndAccount(userId: ID! userName: String! accountId: ID! accountEmail: String!): UserAndAccount&#xA;}&#xA;&#xA;type UserAndAccount {&#xA;    user: User&#xA;    account: Account&#xA;}&#xA;</code></pre>&#xA;<p>But now assume we have a one-to-many relationship, where a user can have one <em>or more</em> accounts.</p>&#xA;<pre><code>type User {&#xA;    id: ID!&#xA;    name: String!&#xA;    account: [Account!]!&#xA;}&#xA;&#xA;type Account {&#xA;    id: ID!&#xA;    email: String!&#xA;    user: User!&#xA;}&#xA;</code></pre>&#xA;<p>How would we the mutations to create a user and an account look like now?</p>&#xA;<p>When creating a new user, we must create a new account. So, we have to use the previous mutation <code>createUserAndAccount</code>. I'm assuming we don't want to create more than one account initially, and instead go back and make an update mutation to the user when we create additional accounts.</p>&#xA;<p>But when creating a new account, the corresponding user might or might not already exist. It might be the first account for a new user, or an additional account for an existing user. We would want a mutation for both possibilities, to either link the account to an existing user or create a new user with it.</p>&#xA;<p>The only way I can see, is to add a separate mutation <code>createAccount</code> for creating an additional account for an existing user, while keeping the previous mutation <code>createUserAndAccount</code> for creating an account and a new user.</p>&#xA;<pre><code>type Mutation {&#xA;    createUserAndAccount(userId: ID! userName: String! accountId: ID! accountEmail: String!): UserAndAccount&#xA;    createAccount(id: ID! email: String! userId: ID!): Account&#xA;}&#xA;&#xA;type UserAndAccount {&#xA;    user: User&#xA;    account: Account&#xA;}&#xA;</code></pre>&#xA;<p>But let's now look at the general case of a many-to-many relationship, where a user can have one <em>or more</em> accounts and an account can have one <em>or more</em> users.</p>&#xA;<pre><code>type User {&#xA;    id: ID!&#xA;    name: String!&#xA;    account: [Account!]!&#xA;}&#xA;&#xA;type Account {&#xA;    id: ID!&#xA;    email: String!&#xA;    user: [User!]!&#xA;}&#xA;</code></pre>&#xA;<p>How would we the mutations to create a user and an account look like now?</p>&#xA;<p>When creating either object, the corresponding other object might or might not already exist. Again, I'm assuming we initially don't want to link an object to more than one other object, and instead go back and make an update mutation to it when we create additional other objects.</p>&#xA;<p>We would want a mutation for both possibilities, to either link to an existing object or create a new object with it.</p>&#xA;<p>The only way I can see is, to keep the <code>createUserAndAccount</code> mutation like previously for creating both objects at the same time, while adding separate mutations when the linked object already exists.</p>&#xA;<pre><code>type Mutation {&#xA;    createUserAndAccount(userId: ID! userName: String! accountId: ID! accountEmail: String!): UserAndAccount&#xA;    createUser(id: ID! email: String! accountId: ID!): User&#xA;    createAccount(id: ID! email: String! userId: ID!): Account&#xA;}&#xA;&#xA;type UserAndAccount {&#xA;    user: User&#xA;    account: Account&#xA;}&#xA;</code></pre>&#xA;<hr />&#xA;<p>I recognise this touches on the difficult problem of circular dependencies.</p>&#xA;<p>How would you design this API? Would you delete the link in one of the object types to avoid circular dependencies at all cost?</p>&#xA;",2607891,,2607891,2021-08-07 11:38:51,2021-08-07 11:38:51,How to create interdependent objects in GraphQL?,<graphql><schema>,0,0,0,2021-08-07 11:30:48
68712786,2,,68699817,2,,"<p>Along the lines of what @AndersKitson points out - if you're using an EU region group, you'll need to update your endpoint to graphql.eu.fauna.com/graphql</p>&#xA;",9013693,,,,2021-08-09 13:20:18,"",,0,0,0,2021-08-09 13:20:18
68720062,2,,68711479,-1,,"<p>if typedb has an api, which I am not clear on if it does or not after reading their site, then you can use Logstash to get data from it and send to Elasticsearch</p>&#xA;",14000148,,,,2021-08-10 01:08:57,"",,0,2,0,2021-08-10 01:08:57
68722305,1,68792741,,1,857,"<p>I'm having trouble accessing data from Amplify's API Graphql, and it keeps returning</p>&#xA;<pre><code>Server Error&#xA;Error: No current user&#xA;</code></pre>&#xA;<p>I've been following this tutorial: <a href=""https://youtu.be/13nYLmjZ0Ys?t=2292"" rel=""nofollow noreferrer"">https://youtu.be/13nYLmjZ0Ys?t=2292</a></p>&#xA;<p>I know I'm signed into Amplify because if I go into different pages, I can grab user Auth and I can even display the SignOut button. But for whatever reason, I'm not sure why I'm getting this error</p>&#xA;<pre><code>import { API } from &quot;aws-amplify&quot;;&#xA;import { useRouter } from &quot;next/router&quot;;&#xA;import { listActivations, getActivation } from &quot;../../graphql/queries&quot;;&#xA;&#xA;const Activation = ({ activation }) =&gt; {&#xA;  const router = useRouter();&#xA;  if (router.isFallback) {&#xA;    return &lt;div&gt;Loading&lt;/div&gt;;&#xA;  }&#xA;  return &lt;div&gt;{activation.title}&lt;/div&gt;;&#xA;};&#xA;export default Activation;&#xA;&#xA;export async function getStaticPaths() {&#xA;  const SSR = withSSRContext();&#xA;  console.log(&quot;static paths&quot;);&#xA;  const activationData = await SSR.API.graphql({&#xA;    query: listActivations,&#xA;  });&#xA;  console.log(&quot;activationData&quot;, activationData);&#xA;  const paths = activationData.data.listActivations.items.map((activation) =&gt; ({&#xA;    params: { id: activation.id },&#xA;  }));&#xA;  return {&#xA;    paths,&#xA;    fallback: true,&#xA;  };&#xA;}&#xA;&#xA;export async function getStaticProps({ params }) {&#xA;  const SSR = withSSRContext(); // added SSR, but still getting error&#xA;  console.log(&quot;static props&quot;);&#xA;  const { id } = params;&#xA;  const activationData = await SSR.API.graphql({&#xA;    query: getActivation,&#xA;    variables: { id },&#xA;  });&#xA;  return {&#xA;    props: {&#xA;      activation: activationData.data.getActivation,&#xA;    },&#xA;  };&#xA;}&#xA;</code></pre>&#xA;<p>The console log <code>static paths</code> appears, and then after that, I get errors.</p>&#xA;<p>Do you think it has anything to do with my GraphQL schema?</p>&#xA;<pre><code>type User @model @auth(rules: [{ allow: owner, ownerField: &quot;username&quot; }]) {&#xA;  id: ID!&#xA;  username: String!&#xA;  email: String!&#xA;  userType: UserType&#xA;}&#xA;&#xA;type Activation&#xA;  @model&#xA;  @key(&#xA;    name: &quot;activationsByStudentId&quot;&#xA;    fields: [&quot;student&quot;]&#xA;    queryField: &quot;activationsByStudentId&quot;&#xA;  )&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: groups, groups: [&quot;Admin&quot;] }&#xA;      { allow: owner }&#xA;      {&#xA;        allow: owner&#xA;        ownerField: &quot;studentId&quot;&#xA;        operations: [create, update, delete]&#xA;      }&#xA;      { allow: private, operations: [read] }&#xA;      { allow: public, operations: [read] }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  studentId: ID!&#xA;  title: String!&#xA;  student: Student @connection(fields: [&quot;studentId&quot;])&#xA;  teachers: [TeachersActivations] @connection(name: &quot;ActivationTeachers&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>Edit: I've also added User model to see if this could be a cause too.</p>&#xA;",659751,,659751,2021-08-12 15:30:19,2022-06-12 22:36:47,AWS Amplify and Next.JS with GraphQL Server Error No current user from getStaticPaths,<reactjs><graphql><next.js><aws-amplify><aws-appsync>,3,2,0,2021-08-10 07:01:37
68731192,1,,,2,413,"<p>I'm creating an API with AWS Amplify and AppSync GraphQL. I Work on a Tinder like App.</p>&#xA;<p>I would like to search the same value in two fields for a Query. I've tried a lot of solutions, but none seems to work.</p>&#xA;<p>I have a User <code>@Model</code> which is connected to many <code>Match</code> via <code>@connection</code></p>&#xA;<pre><code>type User @model&#xA;  @auth(rules: [{allow: public}])&#xA;&#xA;    {&#xA;      id: ID!&#xA;      email: String!&#xA;      password: String&#xA;      age: String!&#xA;      name: String!&#xA;      description: String&#xA;      pickupLine: String&#xA;      orientation: Orientation!&#xA;      gender: Gender! &#xA;      animal: Animal!&#xA;      profilePicture: String!&#xA;      pictures: [String]!&#xA;      location: Location&#xA;      numberOfSparksAvailable: Int!&#xA;      matchs: [Match]&#xA;        @connection(keyName: &quot;byUser&quot;, fields: [&quot;id&quot;])&#xA;      sparks: [Spark]&#xA;        @connection(keyName: &quot;byUser&quot;, fields: [&quot;id&quot;])&#xA;    }&#xA;</code></pre>&#xA;<p>And I have a Match <code>@Model</code> which have a <code>senderId</code> field and a <code>receiverId</code> field</p>&#xA;<pre><code>type Match @model&#xA;  @auth(rules: [{allow: public}])&#xA;  &#xA;  @key(name: &quot;byUser&quot;, fields: [&quot;receiverId&quot;, &quot;senderId&quot;], queryField: &quot;matchByUser&quot;)&#xA;  @key(name: &quot;bySender&quot;, fields: [&quot;senderId&quot;], queryField: &quot;sparkBySender&quot;)&#xA;  @key(name: &quot;byReceiver&quot;, fields: [&quot;receiverId&quot;], queryField: &quot;sparkByReceiver&quot;)&#xA;    {&#xA;      id: ID!&#xA;      status: MatchStatus!&#xA;      matchType: MatchType&#xA;      sender: User! @connection(fields: [&quot;senderId&quot;])&#xA;      senderId: ID!&#xA;      receiver: User! @connection(fields: [&quot;receiverId&quot;])&#xA;      receiverId: ID!&#xA;      answerFrom: Answer!&#xA;      answerTo: Answer&#xA;      chatRoomId: ID!&#xA;      chatRoom: ChatRoom!&#xA;        @connection(fields: [&quot;chatRoomId&quot;])&#xA;      deletedAt: AWSDate&#xA;    }&#xA;</code></pre>&#xA;<p>And and I don't find any way to make <code>bySender</code> <code>@key</code> look for both <code>senderId</code> and <code>receiverId</code>. I want to be able to have all the <code>Matches</code> for a <code>User</code> whether he's the receiver or the sender.</p>&#xA;<p>But when I make a <code>Query</code> to <code>ListUsers</code> I only get the <code>Matches</code> where the <code>User</code> is a receiver.</p>&#xA;<p>I've also tried to make multiple <code>@connection</code> but it is not allowed by <code>Graphql-transformer</code>.</p>&#xA;<p>I also tried to make an <code>usersId: [ID!]!</code> like that</p>&#xA;<pre><code>type Match @model {&#xA;  ...&#xA;  usersId: [ID!]!&#xA;  users: [User!]!&#xA;    @connection(fields: [&quot;usersId&quot;])&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;<p>But It's also not allowed by <code>graphql-transformer</code>..</p>&#xA;<p>Has anyone a solution to get all the matches for a <code>User</code>?</p>&#xA;<p>Thanks a lot !</p>&#xA;",10088484,,,,2021-08-10 17:30:46,Query multiple fields with same value [GraphQL][Amplify],<javascript><typescript><graphql><aws-amplify><aws-appsync>,0,0,0,2021-08-10 17:30:46
68736886,1,,,1,226,"<p>I'm not sure if I'm doing this correctly with the connections in AppSync GraphQL.</p>&#xA;<p>This is what my graphql models look like:</p>&#xA;<pre><code>type User @model @auth(rules: [{ allow: owner, ownerField: &quot;username&quot; }]) {&#xA;  id: ID!&#xA;  username: String!&#xA;  email: String!&#xA;  userType: UserType&#xA;}&#xA;&#xA;enum UserType {&#xA;  TEACHER&#xA;  CREATOR&#xA;}&#xA;&#xA;type Teacher @model {&#xA;  id: ID!&#xA;  userId: ID&#xA;  name: String!&#xA;  activations: [Activation]&#xA;    @connection(keyName: &quot;activationsByTeacherId&quot;, fields: [&quot;id&quot;])&#xA;  creators: [TeacherCreatorPartnership]&#xA;    @connection(name: &quot;TeacherCreatorPartnership&quot;)&#xA;}&#xA;&#xA;type Creator @model {&#xA;  id: ID!&#xA;  userId: ID&#xA;  name: String!&#xA;  email: String!&#xA;  username: String&#xA;  teachers: [TeacherCreatorPartnership] @connection(name: &quot;CreatorTeacherPartnership&quot;)&#xA;  posts: [Post] @connection(name: &quot;CreatorPosts&quot;)&#xA;  activations: [CreatorActivations] @connection(name: &quot;CreatorActivations&quot;)&#xA;}&#xA;&#xA;type TeacherCreatorPartnership @model(queries: null) {&#xA;  id: ID!&#xA;  teacher: Teacher! @connection(name: &quot;TeacherCreatorPartnership&quot;)&#xA;  creator: Creator! @connection(name: &quot;CreatorTeacherPartnership&quot;)&#xA;}&#xA;&#xA;type CreatorActivations @model(queries: null) {&#xA;  id: ID!&#xA;  creator: Creator! @connection(name: &quot;CreatorActivations&quot;)&#xA;  activation: Activation! @connection(name: &quot;ActivationCreators&quot;)&#xA;}&#xA;&#xA;type Activation&#xA;  @model&#xA;  @key(&#xA;    name: &quot;activationsByTeacherId&quot;&#xA;    fields: [&quot;teacherId&quot;]&#xA;    queryField: &quot;activationsByTeacherId&quot;&#xA;  )&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: groups, groups: [&quot;Admin&quot;] }&#xA;      {&#xA;        allow: owner&#xA;        ownerField: &quot;teacherId&quot;&#xA;        operations: [create, update, delete]&#xA;      }&#xA;      { allow: private, operations: [read] }&#xA;      { allow: public, operations: [read] }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  teacherId: ID!&#xA;  title: String!&#xA;  teacher: Teacher @connection(fields: [&quot;teacherId&quot;])&#xA;  creators: [CreatorActivations] @connection(name: &quot;ActivationCreators&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>The idea is that when user signs in with Amplify, they'll go through an onboarding process and choose whether they're a creator or a teacher.</p>&#xA;<p>This works fine, but the problem is if a signed-in user wants to create a new <code>Activation</code>.</p>&#xA;<p>I'm not sure if the graphql on the Activation model is set correctly, perhaps the auth key is wrong?</p>&#xA;<p>This is how I'm processing create</p>&#xA;<pre><code>const createNewActivation = async () =&gt; {&#xA;  if (!title || !content || !location) return;&#xA;  const newId = uuid();&#xA;  activation.id = newId;&#xA;  const user = await Auth.currentAuthenticatedUser();&#xA;  try {&#xA;    await API.graphql({&#xA;      query: createActivation,&#xA;      variables: {&#xA;        input: {&#xA;          ...activation,&#xA;          teacherId: user.attributes.sub,&#xA;        },&#xA;      },&#xA;      authMode: &quot;AMAZON_COGNITO_USER_POOLS&quot;,&#xA;    });&#xA;  } catch (error) {&#xA;    console.log(&quot;Error: problem creating activation: &quot;, error);&#xA;  }&#xA;};&#xA;</code></pre>&#xA;<p>I've also set up a lambda function so that when user confirms their account from sign up, it will save the user information in DynamoDB with an ID, the username, and email.</p>&#xA;<hr />&#xA;<p>Edit: Got it working but...</p>&#xA;<p>So, I was able to save the data, but I had to change the schema in my Activation model from:</p>&#xA;<pre><code>{&#xA;  allow: owner&#xA;  ownerField: &quot;teacherId&quot;&#xA;  operations: [create, update, delete]&#xA;}&#xA;</code></pre>&#xA;<p>to just</p>&#xA;<pre><code>{&#xA;  allow: owner&#xA;}&#xA;</code></pre>&#xA;<p>Not sure why I can't set the owner to <code>teacherId</code>? Wouldn't I need this so I can make proper connections to Teacher's model with teachId field?</p>&#xA;",659751,,659751,2021-08-11 07:04:08,2021-08-11 07:04:08,GraphQL connections Not Authorized to access in Mutation,<amazon-web-services><graphql><amazon-cognito><aws-amplify><aws-appsync>,0,0,0,2021-08-11 06:16:41
68742943,1,68744963,,2,2061,"<p>If I disable <code>x-hasura-admin-secret</code> in the Dashboard, and add <code>Authorization: Bearer a_jwt_encoded_with_a_HASURA_GRAPHQL_JWT_SECRET_and_the_hasura_custom_claims</code></p>&#xA;<p>Then I keep getting these toast notifications:</p>&#xA;<pre><code>Schema introspection query failed&#xA;x-hasura-admin-secret/x-hasura-access-key required, but not found&#xA;</code></pre>&#xA;<p>What am I missing? How can I test my permissions and such from within the Hasura GraphiQL explorer?</p>&#xA;<hr />&#xA;<p>My <code>HASURA_GRAPHQL_JWT_SECRET</code> might be in the wrong place. I set it in Heroku (per how you used to have to do it).</p>&#xA;<hr />&#xA;<p>I've updated the <code>HASURA_GRAPHQL_JWT_SECRET</code> to be defined in the Hasura project console's env vars, and have updated it to</p>&#xA;<pre><code>{&#xA;    &quot;key&quot;: &quot;01234567890123456789012345678912&quot;,&#xA;    &quot;type&quot;: &quot;HS256&quot;&#xA;}&#xA;</code></pre>&#xA;<p>But when I generate a JWT from that config and try it, it throws the same toast notifications...</p>&#xA;",175825,,175825,2021-08-11 13:45:30,2021-08-11 15:32:13,How do you test out Hasura authorization?,<graphql><authorization><hasura><hasura-jwt>,1,0,0,2021-08-11 13:25:01
68744963,2,,68742943,6,,"<p>In my experience the easiest way to test permissions is to leave the admin secret in place and then just set the relevant headers.</p>&#xA;<p>Generally you just add additional headers for <code>x-hasura-role</code> and <code>x-hasura-user-id</code> and any other session variables that are relevant for your app.</p>&#xA;<p>In the screenshot below you can see that I've explicitly set these values. Any query that  you run will be evaluated based on the permissions associated with the role (in my case its <code>organization-admin</code>)</p>&#xA;<p>This is especially useful if you want to be able to use the <code>Analyze</code> functionality to do query profiles that take permissions into account.</p>&#xA;<p><a href=""https://i.stack.imgur.com/imA4h.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/imA4h.png"" alt=""hasura console"" /></a></p>&#xA;",1364771,,,,2021-08-11 15:32:13,"",,0,0,0,2021-08-11 15:32:13
68749980,1,,,2,659,"<p>I am completely new to Amplify library. I have logged in my user using Cognito User Pool. I have the required access token (jwt token). How should I go about using AWS Amplify APIs for GraphQL using this access token?</p>&#xA;<pre><code>Amplify.API.query&#xA;Amplify.API.mutate&#xA;</code></pre>&#xA;<p>Reading the documentation, it seems to me I have to login user using Amplify Auth only to use these APIs. In other words, how do I let Amplify know that I have access token of an authenticated user and allow me to use GrapQL APIs? Or authentication via Amplify Auth is the only way?</p>&#xA;",14538271,,,,2021-08-13 01:53:26,How to use AWS Amplify GraphQL APIs if I have access token of a logged in user?,<amazon-web-services><graphql><aws-amplify><aws-appsync><aws-amplify-cli>,1,0,0,2021-08-11 23:27:06
68759308,2,,68676647,0,,<p>I think the error is simply that <code>data.viewPermission?.groups</code> can be <code>null</code> or <code>undefined</code>. Therefore you are not allowed to access an(y) index on this property. One way to fix this is by using <code>data.viewPermission?.groups?[0]</code> to access the property.</p>&#xA;<p>You could also make <code>groups</code> non-nullable in your GraphQL schema. Some people like a lot of nullable fields because that allows the server to return as much partial data as possible in the case of an error. But for the developer this means that every field has to be checked for <code>null</code>.</p>&#xA;,3849167,,,,2021-08-12 14:27:35,"",,0,0,0,2021-08-12 14:27:35
68760123,2,,68722305,1,,"<p>Since both <code>getStaticProps</code> and <code>getStaticPaths</code> are called during build time, and on the server when <code>fallback</code> is equal to <code>true</code>, you need to configure Amplify for SSR (Server-Side Rendering). Make sure to take a look at <a href=""https://aws.amazon.com/blogs/mobile/ssr-support-for-aws-amplify-javascript-libraries/"" rel=""nofollow noreferrer"">SSR Support for AWS Amplify JavaScript Libraries</a>.</p>&#xA;<p>The solution: first, configure Amplify for SSR:</p>&#xA;<pre><code>Amplify.configure({ ...awsExports, ssr: true });&#xA;</code></pre>&#xA;<p>Then you need to use <code>withSSRContext</code>, and add the the <code>authMode</code> parameter. As quoted from the link above:</p>&#xA;<blockquote>&#xA;<p>For example, take an AppSync GraphQL API that is backed by an identity provider such as Amazon Cognito User pools, Okto, or Auth0. Some GraphQL types may require a user to be authenticated to perform certain requests. Using the API class, the user identity will now automatically be configured and passed into the API request headers:</p>&#xA;</blockquote>&#xA;<pre><code>const SSR = withSSRContext();&#xA;const activationData = await SSR.API.graphql({&#xA;  query: listActivations,&#xA;  authMode: &quot;AMAZON_COGNITO_USER_POOLS&quot;&#xA;});&#xA;</code></pre>&#xA;",4317297,,4317297,2021-08-12 15:40:20,2021-08-12 15:40:20,"",,0,5,0,2021-08-12 15:18:34
68760861,1,,,1,116,"<p>My data model has a many to one relationship between the TICKETS table and the PLATES table. I built the model out using the AWS Amplify GUI and pulled down the source code generated into my Xcode project. For the relationships that exist in my data model, Xcode throws several errors on this line of the Swift schema file for the PLATES table:</p>&#xA;<pre><code>model.fields(&#xA;      .id(),&#xA;      .field(pLATES.plateState, is: .optional, ofType: .string),&#xA;      .field(pLATES.plateNumber, is: .optional, ofType: .string),&#xA;      .field(pLATES.vehicleMake, is: .optional, ofType: .string),&#xA;      .field(pLATES.vehicleModel, is: .optional, ofType: .string),&#xA;      .field(pLATES.vehicleYear, is: .optional, ofType: .int),&#xA;      .field(pLATES.vehicleColor, is: .optional, ofType: .string),&#xA;      .hasMany(pLATES.TICKETS, is: .optional, ofType: TICKETS.self, associatedWith: TICKETS.keys.platesID),&#xA;      .field(pLATES.usersID, is: .optional, ofType: .string),&#xA;      .field(pLATES.createdAt, is: .optional, isReadOnly: true, ofType: .dateTime),&#xA;      .field(pLATES.updatedAt, is: .optional, isReadOnly: true, ofType: .dateTime)&#xA;    )&#xA;</code></pre>&#xA;<p>Errors all on the .hasMany line:</p>&#xA;<ul>&#xA;<li>Cannot convert value of type 'List?' to expected argument type 'Model.Type'</li>&#xA;<li>Instance member 'TICKETS' cannot be used on type 'PLATES'; did you mean to use a value of this type instead?</li>&#xA;<li>Value of type 'List?' has no member 'keys'</li>&#xA;</ul>&#xA;<p>The GraphQL file on the backend appears to be structured correctly based on the Amplify documentation:</p>&#xA;<pre><code>type TICKETS @model @auth(rules: [{allow: public}]) @key(name: &quot;byPLATES&quot;, fields: [&quot;platesID&quot;]) {&#xA;  id: ID!&#xA;  ticketID: Int&#xA;  reasonCode: Int&#xA;  ticketDateTime: AWSDateTime&#xA;  ticketLocationLong: Float&#xA;  ticketLocationLat: Float&#xA;  platesID: ID&#xA;  USERS: USERS @connection&#xA;}&#xA;&#xA;type PLATES @model @auth(rules: [{allow: public}]) @key(name: &quot;byUSERS&quot;, fields: [&quot;usersID&quot;]) {&#xA;  id: ID!&#xA;  plateState: String&#xA;  plateNumber: String&#xA;  vehicleMake: String&#xA;  vehicleModel: String&#xA;  vehicleYear: Int&#xA;  vehicleColor: String&#xA;  TICKETS: [TICKETS] @connection(keyName: &quot;byPLATES&quot;, fields: [&quot;id&quot;])&#xA;  usersID: ID&#xA;}&#xA;</code></pre>&#xA;<p>How can I remedy those errors?</p>&#xA;",16651765,,,,2022-11-12 21:25:00,hasMany relationship error in Swift using AWS Amplify generated code,<swift><graphql><aws-amplify>,1,0,0,2021-08-12 16:09:09
68761363,1,,,3,1485,"<p>Using @apollo/client 3.4.7</p>&#xA;<p>I have been following this great blog by Dan Reynolds <a href=""https://www.apollographql.com/blog/apollo-client/architecture/redux-to-apollo-data-access-patterns/"" rel=""nofollow noreferrer"">https://www.apollographql.com/blog/apollo-client/architecture/redux-to-apollo-data-access-patterns/</a> which explains moving from a Redux world to an Apollo GraphQL world. A nice part of Redux is the ability to use selectors to select portions of data from your state. In Apollo land you are able to run queries, but sometimes you already have your data and only need a subset of it. The blog goes into some nice detail explaining you can do something akin to:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const schema: TypePoliciesSchema = {&#xA;  typeDefs: gql`&#xA;    extend type Query {&#xA;      readManagers: [Employee!]!&#xA;    }&#xA;  `,&#xA;  typePolicies: {&#xA;    Query: {&#xA;      fields: {&#xA;        readManagers: {&#xA;          read(employees, context) {&#xA;            const employees = readField&lt;Query, 'readEmployees'&gt;(context, 'readEmployees');&#xA;&#xA;            return employees.filter(employeeRef =&gt; {&#xA;              const employeeRole = readField&lt;Employee, 'role'&gt;(context, 'role', employeeRef);&#xA;              return employeeRole === EmployeeRole.Manager;&#xA;            });&#xA;          },&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This is based on a simple GraphQL query:</p>&#xA;<pre><code>query GetEmployees {&#xA;  employees {&#xA;    id&#xA;    name&#xA;    role&#xA;    team&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>My question is how can you get the query results when your query has parameters:</p>&#xA;<pre><code>query GetEmployees($companyId: ID!) {&#xA;  employees(companyId: $companyId) {&#xA;    id&#xA;    name&#xA;    role&#xA;    team&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Suddenly you can't get access to readEmployees because the cache key is now something like <code>readEmployees({&quot;companyId&quot;: &quot;uuid&quot;})</code>?</p>&#xA;<p>I appreciate that you may have to setup the readManagers query to use params too, to get the same ID to be able to make a sub selection. I tried manually fudging the query key to match but it didn't work.</p>&#xA;<p>My work around at the moment is to use the cache from the context and run the same query and many convert them to references with toReference:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const schema: TypePoliciesSchema = {&#xA;  typeDefs: gql`&#xA;    extend type Query {&#xA;      readManagers: [Employee!]!&#xA;    }&#xA;  `,&#xA;  typePolicies: {&#xA;    Query: {&#xA;      fields: {&#xA;        readManagers: {&#xA;          read(employees, context) {&#xA;            const employees = context.cache.readQuery('readEmployees', { variables: { companyId: context.args.companyId || context.variables.companyId } } );&#xA;            return employees.filter(employeeRef =&gt; {&#xA;              const employeeRole = readField&lt;Employee, 'role'&gt;(context, 'role', employeeRef);&#xA;              return employeeRole === EmployeeRole.Manager;&#xA;            });&#xA;          },&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This doesn't feel like the best solution, and feels like a lot of boilerplate for reading a sub selection of the cache.</p>&#xA;",6135647,,,,2021-10-11 16:36:09,How to use readField in apollo client polices for sub selecting a query that has arguments,<typescript><graphql><apollo>,1,2,0,2021-08-12 16:47:10
68767063,2,,68716820,1,,<p>You are missing the <code>return</code> statement:</p>&#xA;<pre><code>return (&#xA;    &lt;div&gt;&#xA;        &lt;div&gt;&#xA;            {data.allShopifyProductVariant.nodes.map(node =&gt; {&#xA;                return &lt;div&gt;&#xA;                    {node.product.title}&#xA;                &lt;/div&gt;&#xA;            &#xA;            })}&#xA;        &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;)&#xA;</code></pre>&#xA;<p>Or using the implicit <code>return</code>:</p>&#xA;<pre><code>return (&#xA;    &lt;div&gt;&#xA;        &lt;div&gt;&#xA;            {data.allShopifyProductVariant.nodes.map(node =&gt; (&#xA;               &lt;div&gt;&#xA;                    {node.product.title}&#xA;                &lt;/div&gt;&#xA;            &#xA;            ))}&#xA;        &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;)&#xA;</code></pre>&#xA;,5585371,,,,2021-08-13 05:08:07,"",,0,0,0,2021-08-13 05:08:07
68770376,1,68770377,,0,220,"<p>We have the following code in an ECS Fargate container however it is constantly returning an error.&#xA;When running identical code in a lambda with IAM authentication and the correct role setup, I am able to successfully run this.</p>&#xA;<h3>Error</h3>&#xA;<pre><code>Network error: Response not successful: Received status code 403&#xA;UnrecognizedClientException&#xA;The security token included in the request is invalid.&#xA;</code></pre>&#xA;<h3>Code</h3>&#xA;<pre><code>import 'isomorphic-fetch';&#xA;import AWSAppSyncClient, { AUTH_TYPE } from 'aws-appsync';&#xA;import AWS from 'aws-sdk';&#xA;&#xA;// Setup variables for client&#xA;const graphqlEndpoint = process.env.GRAPHQL_ENDPOINT;&#xA;const awsRegion = process.env.AWS_DEFAULT_REGION;&#xA;&#xA;const client = new AWSAppSyncClient({&#xA;    url: graphqlEndpoint,&#xA;    region: awsRegion,&#xA;    auth: {&#xA;        type: AUTH_TYPE.AWS_IAM,&#xA;        credentials: AWS.config.credentials,&#xA;    },&#xA;    disableOffline: true,&#xA;})&#xA;</code></pre>&#xA;<h3>Cloudformation</h3>&#xA;<pre><code>  TaskDefinition:&#xA;    Type: &quot;AWS::ECS::TaskDefinition&quot;&#xA;    Properties:&#xA;      ContainerDefinitions:&#xA;        - Ommitted&#xA;      Cpu: !FindInMap [CpuMap, !Ref Cpu, Cpu]&#xA;      ExecutionRoleArn: !GetAtt &quot;TaskExecutionRole.Arn&quot;&#xA;      Family: !Ref &quot;AWS::StackName&quot;&#xA;      Memory: !FindInMap [MemoryMap, !Ref Memory, Memory]&#xA;      NetworkMode: awsvpc&#xA;      RequiresCompatibilities: [FARGATE]&#xA;      TaskRoleArn: !GetAtt &quot;TaskRole.Arn&quot;&#xA;  TaskRole:&#xA;    Type: &quot;AWS::IAM::Role&quot;&#xA;    Properties:&#xA;      AssumeRolePolicyDocument:&#xA;        Statement:&#xA;          - Effect: Allow&#xA;            Principal:&#xA;              Service: &quot;ecs-tasks.amazonaws.com&quot;&#xA;            Action: &quot;sts:AssumeRole&quot;&#xA;      ManagedPolicyArns:&#xA;        - &quot;arn:aws:iam::aws:policy/AWSAppSyncInvokeFullAccess&quot; # Invoke Access for AppSync&#xA;</code></pre>&#xA;",1422679,,,,2021-08-13 10:04:48,Using AWSAppSyncClient inside an ECS Container (Fargate) with AWS_IAM auth mode - Returns 403 UnrecognizedClientException,<amazon-iam><amazon-ecs><aws-appsync><aws-fargate><appsync-apollo-client>,1,0,0,2021-08-13 10:04:48
68770377,2,,68770376,0,,"<p>I eventually discovered that this was a result of AppSyncClient not able to load the credentials in ECS correctly.</p>&#xA;<p>As per AWS Docs on <a href=""https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html"" rel=""nofollow noreferrer"">IAM roles in ECS</a>, credentials are loaded different to other AWS services. Instead of credentials being populated in env vars, the Amazon ECS agent instead populated the <code>AWS_CONTAINER_CREDENTIALS_RELATIVE_URI</code> variable with a path to the credentials. I was able to successfully get <code>AWSAppSyncClient</code> working with <code>IAM</code> authenticaiton in an <code>ECS</code> container by first loading the <code>ECS</code> credentials manually and passing it to <code>AWSAppSyncClient</code>. The below example worked.</p>&#xA;<pre><code>// AWSAppSyncClient needs to be provided ECS IAM credentials explicitly&#xA;const credentials = new AWS.ECSCredentials({&#xA;  httpOptions: { timeout: 50000 },&#xA;  maxRetries: 10,&#xA;});&#xA;AWS.config.credentials = credentials;&#xA;&#xA;// Setup AppSync Config&#xA;const AppSyncConfig = {&#xA;  url: graphqlEndpoint,&#xA;  region: awsRegion,&#xA;  auth: {&#xA;    type: AUTH_TYPE.AWS_IAM,&#xA;    credentials: AWS.config.credentials,&#xA;  },&#xA;  disableOffline: true,&#xA;};&#xA;</code></pre>&#xA;",1422679,,,,2021-08-13 10:04:48,"",,0,0,0,2021-08-13 10:04:48
68806093,1,,,0,46,"<p>I am building a graphql API using HotChocolate on ASP.NET.</p>&#xA;<p>I have two types, <code>role</code> as well as <code>permission</code>. <code>permission</code> consists of an id, a name and a description. <code>role</code> is almost the same, but it contains a list of <code>permission</code>'s.&#xA;I have already figured out how to create a <code>permission</code> together with a <code>role</code>.&#xA;Now I need to create a <code>role</code> without creating another <code>permission</code>, instead using an already existing <code>permission</code> in the list of <code>permission</code>'s attribute of the new <code>role</code>. I can't seem to figure out how to do it.</p>&#xA;<p>Surely there must be a way to do that without creating a whole new mutation for this, right?</p>&#xA;",12479829,,,,2021-08-24 21:17:46,Using existing objects as input in a mutation,<asp.net><graphql><hotchocolate>,1,0,0,2021-08-16 16:11:58
68813000,2,,66130657,1,,"<p>I faced the same problem since I had written a graphql server using <code>apollo-server-express</code> which I had to deploy it to aws lambda so needed to make it use <code>apollo-server-lambda</code>.</p>&#xA;<p>Ever since <a href=""https://github.com/apollographql/apollo-server/blob/main/CHANGELOG.md"" rel=""nofollow noreferrer"">Apollo 3</a>, <code>apollo-server-lambda</code> uses <code>apollo-server-express</code> under the hood.</p>&#xA;<p>So instead of writing a graphql server from scratch using <code>apollo-server-lambda</code>, you can just import <code>ApolloServer</code> from it and then supply your existing express app to it with all the middleware as detailed here: <a href=""https://www.apollographql.com/docs/apollo-server/deployment/lambda/#customizing-http-serving"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/deployment/lambda/#customizing-http-serving</a></p>&#xA;<p>Then you'll need to modify the context to read the <code>req</code> value from the <code>express</code> parameter, instead of directly reading <code>req</code> as it was in <code>apollo-server-express</code>. You can follow this for it: <a href=""https://www.apollographql.com/docs/apollo-server/deployment/lambda/#getting-request-info"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/deployment/lambda/#getting-request-info</a></p>&#xA;<p>The last thing that you would need to do in case you were using some database is to make it reuse the connection in aws lambda, but that's not strictly related to <code>apollo-server</code>.</p>&#xA;<p>In case it helps, you can look at how I did it <a href=""https://github.com/CCExtractor/beacon-backend/blob/49a4785fad610691f8bea99db88ad1b240e55fe8/index.js"" rel=""nofollow noreferrer"">here</a>, all the code from <code>express</code> is commented out so the difference is visible.</p>&#xA;",9044659,,,,2021-08-17 07:07:12,"",,0,0,0,2021-08-17 07:07:12
68814549,2,,68814145,1,,"<p>The lambda could inspect the selectionSetList and decide what to do with the BookReadInput fields.&#xA;See <a href=""https://aws.amazon.com/blogs/mobile/appsync-and-the-graphql-info-object/"" rel=""nofollow noreferrer"">https://aws.amazon.com/blogs/mobile/appsync-and-the-graphql-info-object/</a></p>&#xA;<p>You could also go with pipeline resolvers to first update the user, and then add the book.</p>&#xA;<p>I don't think there is a way to have it automated. You need to set it up, one way or the other.</p>&#xA;",354030,,354030,2021-08-17 09:45:11,2021-08-17 09:45:11,"",,0,1,0,2021-08-17 09:02:57
68824254,2,,68819290,0,,"<p>You can throw your own exceptions, that will allow you to do that. Check <a href=""https://lighthouse-php.com/5/digging-deeper/error-handling.html#registering-error-handlers"" rel=""nofollow noreferrer"">https://lighthouse-php.com/5/digging-deeper/error-handling.html#registering-error-handlers</a>.</p>&#xA;",2522130,,,,2021-08-17 21:30:55,"",,0,4,0,2021-08-17 21:30:55
68854247,2,,68661689,2,,"<p>DataStore is designed to sync all data for an app by default. It will try to keep the entire data set for the app accessible by the current user both in the cloud and locally (in IndexedDB by default).</p>&#xA;<p>You can change the default behavior and sync only a subset of the data using sync expressions when configuring Datastore. An example from the doc:</p>&#xA;<pre><code>import { DataStore, syncExpression } from 'aws-amplify';&#xA;import { Post, Comment } from './models';&#xA;&#xA;DataStore.configure({&#xA;  syncExpressions: [&#xA;    syncExpression(Post, () =&gt; {&#xA;      return post =&gt; post.rating('gt', 5);&#xA;    }),&#xA;    syncExpression(Comment, () =&gt; {&#xA;      return comment =&gt; comment.status('eq', 'active');&#xA;    }),&#xA;  ]&#xA;});&#xA;</code></pre>&#xA;<p>See the Datastore topic documentation for details on <a href=""https://docs.amplify.aws/lib/datastore/sync/q/platform/js/#selectively-syncing-a-subset-of-your-data"" rel=""nofollow noreferrer"">Selectively syncing a subset of your data</a>.</p>&#xA;",16690585,,,,2021-08-19 20:32:32,"",,0,0,0,2021-08-19 20:32:32
68906618,2,,68882243,2,,"<h4>Explaination:</h4>&#xA;<p>Well <code>403</code> error response code corresponds to <code>403 - Forbidden</code>. It means the route that you are trying to access, is simply not allowed to be accessed for your user role.</p>&#xA;<p>Now, looks at your request call, it is clear that you're not an authenticated user as you have not attached any <code>bearer</code> token on the api request. It shows you're probably trying to access a public api. But unfortunately, it's not marked as public in <code>strapi</code> settings.</p>&#xA;<h4>Solution:</h4>&#xA;<p>To get it working, you need to allow this api for the public role. You can do this by visiting the <code>user-permissions</code> module and editing the permissions for <code>public</code> role.</p>&#xA;<p><code>http://localhost:1337/admin/settings/users-permissions/roles</code></p>&#xA;<h4>UI interface:</h4>&#xA;<p>You should see an interface like below, where you can tick mark the <code>apis</code> that you require to be made public.</p>&#xA;<p><a href=""https://i.stack.imgur.com/fXEvd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fXEvd.png"" alt=""enter image description here"" /></a></p>&#xA;<h4>Reference:</h4>&#xA;<p><a href=""https://strapi.io/documentation/developer-docs/latest/development/plugins/users-permissions.html"" rel=""nofollow noreferrer"">Roles &amp; Permissions</a></p>&#xA;",16046521,,,,2021-08-24 11:20:03,"",,0,2,0,2021-08-24 11:20:03
68910644,1,,,0,145,"<p>We have GraphQL APIs that are developed with Spring Boot (Java) and deployed in an EC2 instance.</p>&#xA;<p>Mainly, all tutorials explain Amplify with the AppSync service where the AppSync endpoint has been used in the configuration.</p>&#xA;<p>However, we have GraphQL APIs without AppSync service.</p>&#xA;<p>How can I use the AWS Amplify service to consume GraphQL API on EC2?</p>&#xA;<p>Now, why Amplify service? I want to use Amplify as in near future we may migrate to AppSync service for GraphQL APIs, and during that time we don't want much change in client-side code.</p>&#xA;",7657860,,,,2021-08-24 22:00:46,How to use Amplify for GraphQL API running on EC2 instance?,<amazon-web-services><graphql><aws-amplify>,1,2,0,2021-08-24 16:07:24
68914558,2,,68910644,0,,"<p>I recommend you follow the <a href=""https://docs.amplify.aws/lib/graphqlapi/getting-started/q/platform/js/"" rel=""nofollow noreferrer"">documentation</a>, also activate the console <a href=""https://docs.amplify.aws/console/adminui/start/"" rel=""nofollow noreferrer"">AdminUI</a>, it will help a lot. For queries you can checkout <a href=""https://docs.amplify.aws/lib/datastore/getting-started/q/platform/js/"" rel=""nofollow noreferrer"">DataStore</a> as well. It is an offline/online database and last note, make sure you create the models using <code>aws cli</code> with <code>amplify codegen models</code>. Just follow the tutorial on the docs there, it's pretty straight forward.</p>&#xA;<p>After you have setup the CLI, you can start by doing:</p>&#xA;<pre><code>amplify add api&#xA;</code></pre>&#xA;<p>If you activate the console I mentioned above it helps you by providing the queries, etc.</p>&#xA;",9643655,,,,2021-08-24 22:00:46,"",,0,0,0,2021-08-24 22:00:46
68936165,1,,,5,246,"<p>I've seen that you can create custom subscription that are only triggered if the argument you are giving match the one in the model, for exemple:</p>&#xA;<pre><code>type Post @model {&#xA; id: ID!&#xA; author: ID!&#xA; editors: [ID]&#xA;}&#xA;&#xA;type Subscription {&#xA; onCreatePosteByAuthorId(authorId: ID!): Post @aws_subscribe(mutations: [&quot;createPost&quot;])&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>But is there a way to filter subscriptions based on if the editors array contains a certain ID ?</p>&#xA;",12253566,,,,2021-08-26 09:43:07,AWS Amplify graphQL API : Filter subscription by value in array,<amazon-web-services><graphql><amplify>,0,0,0,2021-08-26 09:43:07
68938221,2,,60235085,0,,"<p>Problem is with the result variable. It should be {result} and it should have the index. Incase you dont have index remove it from the query</p>&#xA;<pre><code>const deleteTodo = /* GraphQL */ `&#xA; mutation DeleteTodo($input: DeleteTodoInput!) {&#xA;  deleteTodo(input: $input) {&#xA;   body&#xA;   hasRead&#xA; }&#xA;&#xA;await API.graphql(graphqlOperation(mutations.deleteTodo, {input: {result}));&#xA;</code></pre>&#xA;",0,user3697484,,,2021-08-26 12:06:29,"",,0,0,0,2021-08-26 12:06:29
68940231,2,,64938956,0,,"<p>This is way late, but for anyone else who needs help setting up AppSync with OIDC, I came up with this after looking at this blog: <a href=""https://aws.amazon.com/blogs/mobile/graphql-security-appsync-amplify/"" rel=""nofollow noreferrer"">https://aws.amazon.com/blogs/mobile/graphql-security-appsync-amplify/</a> . Below is a sample of how to set this up in your <code>schema.graphql</code></p>&#xA;<p>Change the value of <code>groups</code> to be w/e you need, and <code>groupClaim</code> to be the claim on your OIDC token to read. Tailor the operations as needed</p>&#xA;<pre><code>type Foo&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      {&#xA;        allow: groups&#xA;        groups: [&quot;ADMIN&quot;, &quot;USER&quot;]&#xA;        operations: [create, update, delete, read]&#xA;        provider: oidc&#xA;        groupClaim: &quot;role&quot;&#xA;      }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  anotherId: ID!&#xA;}&#xA;</code></pre>&#xA;",3993382,,,,2021-08-26 14:15:25,"",,0,1,0,2021-08-26 14:15:25
69000107,1,,,0,43,<p>I'm using the graphene-python library and google cloud datastore as my database. I can query and get back the correct information on all columns except for the Name/ID column.How do I get information from that column?</p>&#xA;<p>TIA</p>&#xA;,9930748,,,,2021-08-31 19:29:43,How do I go about setting up my scalars and revolvers to retrieve the key/id from Cloud Datastore?,<flask><graphql><google-cloud-datastore><graphene-python>,1,1,0,2021-08-31 13:59:27
69002433,2,,55465466,0,,"<p>Have you tried to use amplify <a href=""https://docs.amplify.aws/cli/usage/mock/"" rel=""nofollow noreferrer"">Mocking and testing</a> to see if it meets your needs?</p>&#xA;<p>There is also a way to <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html"" rel=""nofollow noreferrer"">deploy dynamodb on your computer</a></p>&#xA;",16690585,,,,2021-08-31 16:39:46,"",,0,0,0,2021-08-31 16:39:46
69018532,2,,69012089,2,,"<p>To my understanding of the Hasura docs, there is no way to reference a field within a query like you can do in SQL. But that does not mean, you can't do, what you are trying to do. There are three ways of achieving the result that you want:</p>&#xA;<h3>1. Create a filtered view</h3>&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE VIEW earliest_articles AS&#xA;SELECT Article.*&#xA;FROM Article&#xA;INNER JOIN Category ON Article.categoryId = Category.categoryId&#xA;WHERE Article.publishedDate &lt; Category.createdDate + 3 days&#xA;</code></pre>&#xA;<p>This view should now become available as a query. <a href=""https://hasura.io/docs/latest/graphql/core/databases/postgres/schema/views.html#creating-views"" rel=""nofollow noreferrer"">Docs for views are here</a>.</p>&#xA;<h3>2. Create a view with a new field</h3>&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE VIEW articles_with_creation_span AS&#xA;SELECT&#xA;  Article.*,&#xA;  (Article.publishedDate - Category.createdDate) AS since_category_creation&#xA;FROM Article&#xA;INNER JOIN Category ON Article.categoryId = Category.categoryId&#xA;</code></pre>&#xA;<p>Now you can again query this view and use a filter query on the extra field. This solution is useful if you want to vary the amount of time, that you want to query for. The downside is, that there are now two different <code>article</code> types, it might make sense to hide the regular articles query then.</p>&#xA;<h3>3. Use a <em>computed field</em></h3>&#xA;<p>You can also define computed fields in Hasura. These fields are not only included in the output object type of the corresponding GraphQL type, but they can also be used for querying. Refer to <a href=""https://hasura.io/docs/latest/graphql/core/databases/postgres/schema/computed-fields.html#scalar-computed-fields"" rel=""nofollow noreferrer"">the docs</a> on how to create a computed field. Here you can again, calculate the difference and then use some kind of comparison operator (<code>&lt;</code>) to check if this time is smaller than <code>'3 days'</code>.</p>&#xA;",3849167,,,,2021-09-01 17:52:05,"",,0,1,0,2021-09-01 17:52:05
69039582,1,,,6,203,"<p>I have one big appsync graphql application running on AWS. FE is calling this Appsync as backend interface.</p>&#xA;<p>I also have a few small appsyncs running from other teams. I am thinking to combine them together but not sure how.</p>&#xA;<p>Each smaller appsync has its own schema. One way to do so is to combine all small appsync schemas into the big one appsync. And use datasource resolver to reference to other appsync endpoints. But in this way, do I have to keep duplicate the schemas? The big one schema includes everything and other small schema keep its own.</p>&#xA;<p>The resolvers in other small appsync are private so I can't make the big appsync to point direct to the other appsync's resolver.</p>&#xA;<p>Is there an easier way to do so?</p>&#xA;",5421539,,,,2021-09-03 04:38:53,How can I split one big appsync into multiple smaller ones without changing FE?,<amazon-web-services><graphql><aws-appsync>,0,1,0,2021-09-03 04:38:53
69045014,2,,69043943,1,,"<p>Seems like the right way to set this field on schema is:</p>&#xA;<pre><code>Type(User.self) {&#xA;    Field(&quot;id&quot;, at: \.id)&#xA;    Field(&quot;name&quot;, at: \.name)&#xA;        &#xA;    Field(&quot;record&quot;, at: \.$record, as: TypeReference&lt;Record&gt;?.self)&#xA;} &#xA;</code></pre>&#xA;",1333294,,,,2021-09-03 12:32:06,"",,0,0,0,2021-09-03 12:32:06
69052795,2,,68638483,0,,"<p>After clarification from OP it became possible to answer this question.</p>&#xA;<p>Yes. Hasura generates different schema for different roles.</p>&#xA;<p>How to check them?</p>&#xA;<h2>A. Permissions summary</h2>&#xA;<p>Go in hasura console to <code>https://[hasura address]/console/data/schema/public/permissions</code></p>&#xA;<p>You will see something similar to:</p>&#xA;<p><a href=""https://i.stack.imgur.com/8sUVB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8sUVB.png"" alt=""permissions summary"" /></a></p>&#xA;<p>Note here:</p>&#xA;<ul>&#xA;<li><code>admin</code> role has access to all registered objects and all fields</li>&#xA;<li>other roles have access to different sets of objects and different set of fields with different row security checks.</li>&#xA;</ul>&#xA;<h2>B. Hasura API Explorer</h2>&#xA;<p>Go to: <code>https://[your hasura]/console/api-explorer</code>.</p>&#xA;<p>Set <code>x-hasura-role</code> in Request Headers:</p>&#xA;<p><a href=""https://i.stack.imgur.com/HIBkH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/HIBkH.png"" alt=""Request Headers"" /></a></p>&#xA;<p>Try to do queries and mutations.</p>&#xA;<p>You'll see that sets of  objects and fields are different for different roles.</p>&#xA;<h2>C. Allowed List</h2>&#xA;<p>If you activated Allowed List (which is recommended for production)&#xA;(<strong>and if graphql inspection query is not in your Allowed List</strong> )</p>&#xA;<p>then graphql inspection will be disabled for all roles except <code>admin</code>:</p>&#xA;<p><a href=""https://i.stack.imgur.com/GA2rm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GA2rm.png"" alt=""introspection query"" /></a></p>&#xA;<p>For those who are interested in enabling introspection query - check <a href=""https://github.com/hasura/graphql-engine/blob/master/server/src-rsr/introspection.json"" rel=""nofollow noreferrer"">https://github.com/hasura/graphql-engine/blob/master/server/src-rsr/introspection.json</a></p>&#xA;",1168212,,,,2021-09-04 05:57:21,"",,0,0,0,2021-09-04 05:57:21
69057571,2,,62826168,0,,"<ol>&#xA;<li>Change the schema modal in amplify/backend/API/schema.graphql file as the following example.</li>&#xA;</ol>&#xA;<p>Ex. (one to many relation)&#xA;The single user will have more posts</p>&#xA;<pre><code>type User @model {&#xA;  id: ID!&#xA;  name: String&#xA;  posts: [Post] @connection(keyName: &quot;postsByUser&quot;, fields: [&quot;id&quot;])&#xA;  createdAt: AWSDateTime!&#xA;  updatedAt: AWSDateTime!&#xA;}&#xA;&#xA;type Post @model &#xA;@key(name: &quot;postsByUser&quot;, fields: [&quot;userID&quot;]) {&#xA;  id: ID!&#xA;  description: String!  &#xA;  userID: ID!&#xA;  user: User @connection(fields: [&quot;userID&quot;])&#xA;  createdAt: AWSDateTime!&#xA;  updatedAt: AWSDateTime!&#xA;}&#xA;</code></pre>&#xA;<p>Then save &amp; check this schema model is having any error by run the following command and it will throw error if anything is wrong</p>&#xA;<pre><code>amplify api gql-compile&#xA;</code></pre>&#xA;<p>After checking give amplify push and it will change the schema, data sources, queries &amp; dynamodb tables.</p>&#xA;<p>To update/generate schema.json, queries &amp; other files in frontend use the following command</p>&#xA;<pre><code>amplify add codegen bbp3andl**********  (-&gt;appsync id)&#xA;</code></pre>&#xA;<p>Refer this link to write schema model&#xA;<a href=""https://blog.grandstack.io/graphql-api-configuration-with-neo4j-graphql-js-bf7a1331c793"" rel=""nofollow noreferrer"">https://blog.grandstack.io/graphql-api-configuration-with-neo4j-graphql-js-bf7a1331c793</a></p>&#xA;",11869833,,11869833,2021-09-08 06:55:31,2021-09-08 06:55:31,"",,0,3,0,2021-09-04 17:29:51
69092591,2,,69085557,0,,"<p>It is not possible right now, see <a href=""https://github.com/prisma/prisma/issues/2443"" rel=""nofollow noreferrer"">https://github.com/prisma/prisma/issues/2443</a></p>&#xA;",5650447,,,,2021-09-07 17:48:33,"",,0,1,0,2021-09-07 17:48:33
69105320,2,,69101456,0,,"<p>There is &quot;Variables&quot; tab in the GraphQL HTTP Request sampler:</p>&#xA;<p><a href=""https://i.stack.imgur.com/uGHRC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uGHRC.png"" alt=""enter image description here"" /></a></p>&#xA;<p>where you can define GraphQL variables like:</p>&#xA;<pre><code>{&#xA;  &quot;id&quot;: &quot;${id}&quot;&#xA;}&#xA;</code></pre>&#xA;<p>and this <code>${id}</code> comes from a <a href=""https://guide.blazemeter.com/hc/en-us/articles/207421395-Using-User-Defined-Variables-Using-User-Defined-Variables"" rel=""nofollow noreferrer"">User-Defined Variable</a></p>&#xA;<p>Once you do this you can use it in the &quot;Query&quot; tab like:</p>&#xA;<pre><code>query ($id: ID!){&#xA;  droid(id: $id){&#xA;    id&#xA;    name&#xA;    friends{&#xA;      name&#xA;    }&#xA;    appearsIn&#xA;    primaryFunction&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Without variables:</p>&#xA;<p><a href=""https://i.stack.imgur.com/GdYkW.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GdYkW.gif"" alt=""enter image description here"" /></a></p>&#xA;<p>With variables:</p>&#xA;<p><a href=""https://i.stack.imgur.com/djxGf.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/djxGf.gif"" alt=""enter image description here"" /></a></p>&#xA;<p>More information:</p>&#xA;<ul>&#xA;<li><a href=""https://graphql.org/learn/queries/"" rel=""nofollow noreferrer"">GraphQL Queries and Mutations</a></li>&#xA;<li>GraphQL server instance used for demo:  <a href=""https://github.com/apollographql/starwars-server"" rel=""nofollow noreferrer"">apollographql /&#xA;starwars-server</a></li>&#xA;</ul>&#xA;",2897748,,,,2021-09-08 14:53:02,"",,0,1,0,2021-09-08 14:53:02
69121283,1,,,1,255,"<p>I'm working in the AWS AppSync Queries web client to construct queries to use in a GraphQL Amplify React app and I am getting some unexpected results.</p>&#xA;<p>Please consider the following queries...</p>&#xA;<pre><code>query MyQuery {&#xA;  listDirectoryListings(filter: {location_search_name: {contains: &quot;safe&quot;}}) {&#xA;    items { location_name }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The query above returns 3 records. However, the actual data has 263 records that contain &quot;safe&quot;. I confirmed this locally with an export from DynamoDB.</p>&#xA;",4381332,,4826457,2022-01-03 08:53:28,2022-01-03 08:53:28,GraphQL query with filters doesn't include all expected results,<graphql><amazon-dynamodb><aws-amplify><aws-appsync><dynamodb-queries>,0,1,0,2021-09-09 15:51:56
69135394,1,,,0,138,"<p>In Hasura, I'm trying write a plpgsql based function which should return the t_documents. The function should accept various optional arguments, based on the argument values it should run appropriate SQL (using IF conditional checks) and return the records. This is my goal.</p>&#xA;<p>I've started with simple function with no arguments, the function created and tracked successfully in Hasura, however when try to query it throws <code>&quot;query has no destination for result data&quot;</code></p>&#xA;<p>Any help to achieve the goal is highly appreciated</p>&#xA;<pre><code>CREATE OR REPLACE FUNCTION dms.fngetdocs()&#xA; RETURNS SETOF dms.t_documents&#xA; LANGUAGE plpgsql&#xA; STABLE&#xA;AS $function$&#xA;BEGIN&#xA;SELECT *&#xA;    FROM dms.t_documents;&#xA;END;    &#xA;$function$&#xA;</code></pre>&#xA;",16880212,,,,2021-09-10 23:14:38,Hasura - query has no destination for result data,<postgresql><graphql><plpgsql><hasura>,1,2,0,2021-09-10 16:39:29
69138809,2,,69135394,1,,"<p>Every SQL statement returning rows (like <code>SELECT</code>, but also <code>INSERT</code> with <code>RETURNING</code> etc.) must have a target for the resulting data. That's what the error message tells you. Either assign variables or return to the caller. To <em>discard</em> results instead, use <code>PERFORM</code> instead of <code>SELECT</code>. See:</p>&#xA;<ul>&#xA;<li><a href=""https://stackoverflow.com/questions/37230750/select-raises-exception-in-pl-pgsql-function/37234043#37234043"">SELECT raises exception in PL/pgSQL function</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/67709708/pl-pgsql-perform-vs-call/67711519#67711519"">PL/pgSQL: PERFORM vs CALL</a></li>&#xA;<li><a href=""https://stackoverflow.com/questions/10115806/select-or-perform-in-a-pl-pgsql-function/10117015#10117015"">SELECT or PERFORM in a PL/pgSQL function</a></li>&#xA;</ul>&#xA;<p>But you obviously want to return rows. Your PL/pgSQL function would work like this:</p>&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE OR REPLACE FUNCTION dms.fngetdocs()&#xA;  RETURNS SETOF dms.t_documents&#xA;  LANGUAGE plpgsql STABLE PARALLEL SAFE AS&#xA;$func$&#xA;BEGIN&#xA;   RETURN QUERY&#xA;   SELECT * FROM dms.t_documents;&#xA;END&#xA;$func$&#xA;</code></pre>&#xA;<p>See:</p>&#xA;<ul>&#xA;<li><a href=""https://stackoverflow.com/questions/7945932/how-to-return-result-of-a-select-inside-a-function-in-postgresql/7945958#7945958"">How to return result of a SELECT inside a function in PostgreSQL?</a></li>&#xA;</ul>&#xA;<p>Makes very little sense, of course. Instead of calling that function you would just use <code>SELECT * FROM dms.t_documents;</code> directly.</p>&#xA;<p>Or use a simpler SQL function, where the result of a <code>SELECT</code> is returned automatically:</p>&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE OR REPLACE FUNCTION dms.fngetdocs()&#xA;  RETURNS SETOF dms.t_documents&#xA;  LANGUAGE sql STABLE PARALLEL SAFE AS&#xA;$func$&#xA;SELECT * FROM dms.t_documents;&#xA;$func$;&#xA;</code></pre>&#xA;<p><a href=""https://www.postgresql.org/docs/13/parallel-safety.html"" rel=""nofollow noreferrer"">See the manual about the added <code>PARALLEL SAFE</code>.</a></p>&#xA;",939860,,,,2021-09-10 23:14:38,"",,0,0,0,2021-09-10 23:14:38
69169502,1,,,2,274,"<p>I'm fairly new to Amplify and been playing around with it for a couple of weeks now. I've been incorporating it into Next.js, which is pretty nice.</p>&#xA;<p>I originally created a new User table/record using lambda function: after a user signs up and confirms their email, it should automatically create a new record in the User table with some information. I only did this because I thought Amplify only provided a few attributes, but until recently I found out that you can pretty much create custom attributes.</p>&#xA;<p>So, because of this, would there be an argument to create another User table? I would like to know how people are handling User information in big applications.</p>&#xA;<p>I guess one thing I can think of is making relationships with other tables. I haven't gone too far into figuring this out, but is it possible to still make connections if I don't have User table in my graphql schema?</p>&#xA;",659751,,,,2021-11-29 07:11:39,"AWS Amplify Graphql Creating a new User table, necessary?",<aws-lambda><graphql><amazon-dynamodb><aws-amplify><aws-amplify-cli>,1,0,0,2021-09-13 21:54:04
69175022,2,,69162539,1,,"<p>One common solution to this is the use of operation names. The client can provide an operation name to the server in the request to identify what it is doing.</p>&#xA;<pre><code>{&#xA;  &quot;query&quot;: &quot;{ mutation AddToBasket($myVariable: AddToBasketInput!) { addToBasket(input: $myVariable) { id } } }&quot;,&#xA;  &quot;operationName&quot;: &quot;AddToBasket&quot;,&#xA;  &quot;variables&quot;: { &quot;myVariable&quot;: &quot;someValue&quot; }&#xA;}&#xA;</code></pre>&#xA;<p>I think you can access the operation name from the body like this:</p>&#xA;<pre><code>const server = new ApolloServer({&#xA;  context: ({ req }) =&gt; {&#xA;    if (req.body.operationName === 'AddToBasket') {&#xA;      console.log(&quot;Found it!&quot;)&#xA;    }&#xA;  }&#xA;})&#xA;</code></pre>&#xA;<p>You can also create a plugin for Apollo Server that uses the <a href=""https://www.apollographql.com/docs/apollo-server/integrations/plugins-event-reference/#didresolveoperation"" rel=""nofollow noreferrer"">didResolveOperation</a> event to get the operation name value.</p>&#xA;<pre><code>export class MyPlugin implements ApolloServerPlugin {&#xA;    async requestDidStart() {&#xA;        return {&#xA;            async didResolveOperation(&#xA;                requestContext&#xA;            ) {&#xA;                console.log(requestContext.operationName);&#xA;            },&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Using operation name avoids a need to parse the GraphQL operation to determine which mutation is included in the request, but also requires the client to provide a known operation name value, which may or may not work for your use case.</p>&#xA;",5152001,,,,2021-09-14 09:10:42,"",,0,1,0,2021-09-14 09:10:42
69185296,2,,68687607,0,,"<p>you have to add &quot;auth&quot; rule to your model</p>&#xA;<pre><code>type User @model &#xA;          @auth(&#xA;          rules: [&#xA;&#xA;        #this is for logged-in user. cognito user is default for provider&#xA;       &#xA;        # In order to prevent private users from creating, another rule must be set for creating&#xA;        { allow: private, operations: [read] }&#xA;        # default provider is cognito&#xA;        { allow: private, provider: iam, operations: [read, create, update, delete] }&#xA;        # Only Owner can update its own data&#xA;        { allow: owner, ownerField: &quot;username&quot;, operations: [update] }&#xA;    ]&#xA;)  {&#xA;&#xA;&#xA;      id: ID!&#xA;      name: String!&#xA;      imageUri: String&#xA;      username: String!&#xA;      email: String!&#xA;}&#xA;</code></pre>&#xA;<p>In the above code, I defined two auth rules. One is for Cognito user, he can only read, another one for the &quot;iam&quot; user who has more privileges.</p>&#xA;",10262805,,,,2021-09-14 22:53:53,"",,0,0,0,2021-09-14 22:53:53
69238169,2,,69235769,0,,"<p>connect with aws amplify, then type 'add auth' in console</p>&#xA;",16911900,,,,2021-09-18 20:20:55,"",,0,0,0,2021-09-18 20:20:55
69241326,2,,51788017,3,,"<p>Until Appsync fixes their issues, we are using an Apollo server as a gateway in ECS to stitch the schemas made with Prisma and invokes lambdas directly where our logic is set.</p>&#xA;<p>For your request you can follow up on the feature request in their GitHub repo, which sadly does not have a lot of progress.&#xA;<a href=""https://github.com/aws/aws-appsync-community/issues/51"" rel=""nofollow noreferrer"">https://github.com/aws/aws-appsync-community/issues/51</a></p>&#xA;",2443665,,2443665,2021-10-05 13:22:46,2021-10-05 13:22:46,"",,0,0,0,2021-09-19 07:46:05
69264135,1,,,9,1122,"<p>I am using AWS amplify with graphql and appsync.&#xA;When I do a standard list query, appsync includes deleted items in the list of items it returns.</p>&#xA;<p>What can I do to make it return only items that are not deleted?</p>&#xA;<p>I tried this query, but it throws an error:</p>&#xA;<pre><code>query MyQuery($filter: ModelFrameFilterInput = {_deleted: {ne: true}}) {&#xA;  listFrames(filter: $filter) {&#xA;    items {&#xA;      _deleted&#xA;      name&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Here is the error message:</p>&#xA;<pre><code> &quot;message&quot;: &quot;Validation error of type BadValueForDefaultArg: Bad default value ObjectValue{objectFields=[ObjectField{name='_deleted', value=ObjectValue{objectFields=[ObjectField{name='ne', value=BooleanValue{value=true}}]}}]} for type ModelFrameFilterInput&quot;&#xA;</code></pre>&#xA;",3759011,,,,2022-06-08 10:01:41,AWS amplify graphql appsync - do not return deleted items?,<amazon-web-services><graphql><aws-appsync><amplify>,3,1,0,2021-09-21 06:07:52
69273638,1,,,1,464,"<p>I am trying to query for a user's specific data using AWS Cognito, Appsync, and Graphql. Before I changed my Schema rules to include <code>@auth</code>, I was able to access all data from all users, but that is not what I want. However, when I query for data using Graphql, I am getting an auauthorized error. <code>errorType: &quot;Unauthorized&quot;, message: &quot;Not Authorized to access listMembers on type Query&quot;, … }</code></p>&#xA;<pre class=""lang-js prettyprint-override""><code>// Old Schema.graphql&#xA;type Member {&#xA;  id: ID!,&#xA;  name: String,&#xA;  owner: String&#xA;}&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>// New Schema.graphql&#xA;type Member&#xA;  @model&#xA;  @auth(rules: [{ allow: owner }, { allow: private, operations: [read] }]) {&#xA;  id: ID!&#xA;  name: String&#xA;  owner: String&#xA;}&#xA;</code></pre>&#xA;<p>In my Members.js component, I call for the list of members and ensure I have set that the owner property is available, but I still get the unauthorized error. Additionally, when I go into AWS AppSync Console and try to query for a list of members, I get the same error.</p>&#xA;<p><a href=""https://i.stack.imgur.com/ywEcJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ywEcJ.png"" alt=""enter image description here"" /></a></p>&#xA;<p>I know I have members in my DynamoDB, because they are present, but when I query for them, that's when I get that error.</p>&#xA;<p><a href=""https://i.stack.imgur.com/WbBY7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WbBY7.png"" alt=""enter image description here"" /></a></p>&#xA;<p>This is what my Member.js component looks like:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// Members.js&#xA;&#xA;import { useState, useEffect } from 'react'&#xA;import { API, Auth } from 'aws-amplify'&#xA;import { listMembers } from '../../graphql/queries'&#xA;&#xA;const [members, updateMembers] = useState([])&#xA;const [myMembers, updateMyMembers] = useState([])&#xA;&#xA;export const Members = () =&gt; {&#xA;&#xA;  /* fetch member's when component loads */&#xA;  useEffect(() =&gt; {&#xA;    fetchMembers()&#xA;  }, [])&#xA;&#xA;  async function fetchMembers() {&#xA;    /* query the API, ask for 100 items */&#xA;    let postData = await API.graphql({&#xA;      query: { query: listMemberes, variables: { limit: 100 }},&#xA;      variables: { limit: 100 },&#xA;    })&#xA;&#xA;    let membersArray = postData.data.listMembers.items&#xA;    updateLoading(false)&#xA;&#xA;    /* update the members array in the local state */&#xA;    setMemberState(membersArray)&#xA;  }&#xA;&#xA;  async function setMemberState(membersArray) {&#xA;    const user = await Auth.currentAuthenticatedUser()&#xA;    const myMemberData = membersArray.filter((p) =&gt; p.owner === user.username)&#xA;    console.log('membersArray:', membersArray)&#xA;    updateMyMembers(myMemberData)&#xA;    updateMembers(membersArray)&#xA;  }&#xA;&#xA;}&#xA;&#xA;</code></pre>&#xA;",10769225,,,,2021-10-10 08:09:02,How to query for a signed in user's data in Graphql and AWS Cognito,<reactjs><amazon-web-services><graphql><authorization><aws-appsync>,2,0,0,2021-09-21 18:07:25
69275939,2,,65335048,1,,"<p>You need to provide _version parameter, i.e</p>&#xA;<pre><code>await API.graphql({&#xA;      query: deleteBlogTag,&#xA;      variables: { input: { id: blogTagId, _version: version } },&#xA;      });&#xA;</code></pre>&#xA;<p>But I would suggest to go through <code>amplify update api</code> and remove sync conflict resolution.</p>&#xA;",8041734,,8041734,2021-09-21 22:02:40,2021-09-21 22:02:40,"",,0,0,0,2021-09-21 21:53:16
69276659,1,69280896,,2,76,"<p>I'm using latest version of Postraphile (on its Docker container) and I've installed <code>pg-simplify-inflector</code> plugin, I've noted an improvement respect to names for operations, and I wish to get a simplified format for operations and their results. Example:</p>&#xA;<p>For this operation:</p>&#xA;<pre><code>query MyQuery {&#xA;  iddocTypes {&#xA;    nodes {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>with result:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;iddocTypes&quot;: {&#xA;      &quot;nodes&quot;: [&#xA;        {&#xA;          &quot;id&quot;: 1,&#xA;          &quot;name&quot;: &quot;some 1&quot;&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: 2,&#xA;          &quot;name&quot;: &quot;some 2&quot;&#xA;        },&#xA;        {&#xA;          &quot;id&quot;: 3,&#xA;          &quot;name&quot;: &quot;some 3&quot;&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I wish to get this:</p>&#xA;<pre><code>query MyQuery {&#xA;  iddocTypes {&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>with result:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;iddocTypes&quot;: [&#xA;      {&#xA;        &quot;id&quot;: 1,&#xA;        &quot;name&quot;: &quot;some 1&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 2,&#xA;        &quot;name&quot;: &quot;some 2&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 3,&#xA;        &quot;name&quot;: &quot;some 3&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I'm using these options for Postgraphile in <code>docker-compose.yml</code>:</p>&#xA;<pre><code>      &quot;--dynamic-json&quot;,&#xA;      &quot;--subscriptions&quot;,&#xA;      &quot;--no-setof-functions-contain-nulls&quot;,&#xA;      &quot;--no-ignore-rbac&quot;,&#xA;      &quot;--no-ignore-indexes&quot;,&#xA;      &quot;--show-error-stack&quot;, &quot;json&quot;,&#xA;      &quot;--extended-errors&quot;, &quot;hint,detail,errcode&quot;,&#xA;      &quot;--enable-query-batching&quot;,&#xA;      &quot;--legacy-relations&quot;, &quot;omit&quot;,&#xA;      &quot;--append-plugins&quot;, &quot;@graphile-contrib/pg-simplify-inflector&quot;,&#xA;      &quot;--enhance-graphiql&quot;&#xA;</code></pre>&#xA;<p>What do I need to do to simplify it?</p>&#xA;",955594,,,,2021-10-06 03:32:57,Can GraphQL operations/results format be simplified?,<graphql><postgraphile>,1,3,0,2021-09-21 23:42:24
69277223,1,,,1,58,"<p>I am trying to create a nestjs + graphql API which would pull the data from database based on user's request. I am following code first approach. I have to expose an API which would return the below nested response shape, though the all data are from single table.</p>&#xA;<p><strong>Table Columns:</strong> EmployeeNo, departmentId, DepartmentName</p>&#xA;<p><strong>Expected Response Shape:</strong></p>&#xA;<pre><code>{&#xA;EmployeeNo&#xA;  Department {&#xA;            departmentId, &#xA;            DepartmentName&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>I used TypeORM and trying to figure out how to have nestjs+graphql return response shape like above hen all the fields are available in single table as different columns. Do I need to have two entities pointing to same table? will it work?</p>&#xA;<p>Any suggestion would be helpful. Thanks in Advance!</p>&#xA;",5881068,,5881068,2021-09-22 10:38:21,2021-09-22 10:38:21,nestjs +graphQL - nested response shape for data from same table,<graphql><nestjs><typeorm>,0,0,0,2021-09-22 01:38:18
69298382,1,,,1,97,<p>What is the query syntax for getting the list of all previously created tables?&#xA;And how can I then view selected table fields?</p>&#xA;,5453818,,1054558,2021-09-23 16:08:11,2021-09-23 16:08:11,GraphQL API (Astra DB) - the list of existing tables and fields,<database><cassandra><graphql><datastax-astra><stargate-oss>,1,0,0,2021-09-23 10:35:30
69305581,2,,69273638,1,,"<p>You have to add 2 additional rules:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type Member&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner }&#xA;      { allow: public, operations: [create, read, update, delete] } // New&#xA;      { allow: private, operations: [create, read, update, delete] } // New&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  name: String&#xA;  owner: String&#xA;}&#xA;</code></pre>&#xA;",10769225,,,,2021-09-23 18:57:36,"",,0,0,0,2021-09-23 18:57:36
69310171,1,,,1,285,"<p>I am working on a project where I have completed my website through React JS.&#xA;Now I am working on developing App using flutter. All backend are done using aws amplify.&#xA;While working on flutter I am facing strange issue. When I am querying the aws Table in flutter I am getting empty list, as there are data on that table, query same table on React works and working till now.</p>&#xA;<p>So I planned to create some test file to check what the issue so I create test flutter project and test react project .</p>&#xA;<blockquote>&#xA;<p>I will add the code down below</p>&#xA;</blockquote>&#xA;<p>. After doing the test I came to know that,  data I save from flutter can be only queried using flutter and data saved in react can only queried through react as it is same table, same region ,every thing is same. Why is this strange behaviour .</p>&#xA;<p><a href=""https://i.stack.imgur.com/QK9t0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QK9t0.png"" alt=""Flutter Code"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/nlt2g.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nlt2g.png"" alt=""React Code"" /></a></p>&#xA;<p>As you can see query same table but results are different and flutter created data is not showing up in react app and even here <a href=""https://i.stack.imgur.com/FfYQC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FfYQC.png"" alt=""aws"" /></a></p>&#xA;<p>Code of flutter are as below:&#xA;Main.dart :</p>&#xA;<pre><code>import 'package:amplify_datastore/amplify_datastore.dart';&#xA;import 'package:amplify_flutter/amplify.dart';&#xA;import 'package:flutter/material.dart';&#xA;import 'package:my_app/amplifyconfiguration.dart';&#xA;&#xA;import 'models/ModelProvider.dart';&#xA;import 'screens/homepage.dart';&#xA;&#xA;Future&lt;void&gt; main() async {&#xA;  WidgetsFlutterBinding.ensureInitialized();&#xA;  await configureAmplify();&#xA;  runApp(MyApp());&#xA;}&#xA;&#xA;Future&lt;void&gt; configureAmplify() async {&#xA;  Amplify.addPlugin(AmplifyDataStore(modelProvider: ModelProvider.instance));&#xA;  try {&#xA;    await Amplify.configure(amplifyconfig);&#xA;  } catch (e) {&#xA;    print(&quot;Amplify is alreay configured&quot;);&#xA;  }&#xA;}&#xA;&#xA;class MyApp extends StatelessWidget {&#xA;  // This widget is the root of your application.&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return MaterialApp(&#xA;      title: 'Flutter Demo',&#xA;      theme: ThemeData(&#xA;        // This is the theme of your application.&#xA;        //&#xA;        // Try running your application with &quot;flutter run&quot;. You'll see the&#xA;        // application has a blue toolbar. Then, without quitting the app, try&#xA;        // changing the primarySwatch below to Colors.green and then invoke&#xA;        // &quot;hot reload&quot; (press &quot;r&quot; in the console where you ran &quot;flutter run&quot;,&#xA;        // or simply save your changes to &quot;hot reload&quot; in a Flutter IDE).&#xA;        // Notice that the counter didn't reset back to zero; the application&#xA;        // is not restarted.&#xA;        primarySwatch: Colors.blue,&#xA;      ),&#xA;      home: HomePage(),&#xA;    );&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>HomePage:</p>&#xA;<pre><code>import 'package:amplify_flutter/amplify.dart';&#xA;import 'package:flutter/cupertino.dart';&#xA;import 'package:flutter/material.dart';&#xA;&#xA;import 'package:my_app/models/Person.dart';&#xA;&#xA;class HomePage extends StatelessWidget {&#xA;  Future&lt;void&gt; initTodos() async {&#xA;    final model = Person(name: &quot;runzun&quot;);&#xA;    await Amplify.DataStore.save(model);&#xA;    final persons = await Amplify.DataStore.query(Person.classType);&#xA;    print(persons);&#xA;    print('======================');&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Scaffold(&#xA;      appBar: AppBar(&#xA;        title: Text('Hello'),&#xA;      ),&#xA;      body: Center(&#xA;        child: GestureDetector(&#xA;            onTap: () async {&#xA;              await initTodos();&#xA;              // var todos = Todo(name: &quot;runzun&quot;, description: &quot;this is a blog&quot;);&#xA;              // await Amplify.DataStore.save(todos);&#xA;            },&#xA;            child: Text('Add todos')),&#xA;      ),&#xA;    );&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>models:&#xA;ModelProvider.dart</p>&#xA;<pre><code>/*&#xA;* Copyright 2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.&#xA;*&#xA;* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;).&#xA;* You may not use this file except in compliance with the License.&#xA;* A copy of the License is located at&#xA;*&#xA;*  http://aws.amazon.com/apache2.0&#xA;*&#xA;* or in the &quot;license&quot; file accompanying this file. This file is distributed&#xA;* on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either&#xA;* express or implied. See the License for the specific language governing&#xA;* permissions and limitations under the License.&#xA;*/&#xA;&#xA;// ignore_for_file: public_member_api_docs&#xA;&#xA;import 'package:amplify_datastore_plugin_interface/amplify_datastore_plugin_interface.dart';&#xA;import 'Person.dart';&#xA;&#xA;export 'Person.dart';&#xA;&#xA;class ModelProvider implements ModelProviderInterface {&#xA;  @override&#xA;  String version = &quot;115942e9588e46ca9df7bb771727f5c7&quot;;&#xA;  @override&#xA;  List&lt;ModelSchema&gt; modelSchemas = [Person.schema];&#xA;  static final ModelProvider _instance = ModelProvider();&#xA;&#xA;  static ModelProvider get instance =&gt; _instance;&#xA;  &#xA;  ModelType getModelTypeByModelName(String modelName) {&#xA;    switch(modelName) {&#xA;    case &quot;Person&quot;: {&#xA;    return Person.classType;&#xA;    }&#xA;    break;&#xA;    default: {&#xA;    throw Exception(&quot;Failed to find model in model provider for model name: &quot; + modelName);&#xA;    }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Person.dart:</p>&#xA;<pre><code>/*&#xA;* Copyright 2021 Amazon.com, Inc. or its affiliates. All Rights Reserved.&#xA;*&#xA;* Licensed under the Apache License, Version 2.0 (the &quot;License&quot;).&#xA;* You may not use this file except in compliance with the License.&#xA;* A copy of the License is located at&#xA;*&#xA;*  http://aws.amazon.com/apache2.0&#xA;*&#xA;* or in the &quot;license&quot; file accompanying this file. This file is distributed&#xA;* on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either&#xA;* express or implied. See the License for the specific language governing&#xA;* permissions and limitations under the License.&#xA;*/&#xA;&#xA;// ignore_for_file: public_member_api_docs&#xA;&#xA;import 'package:amplify_datastore_plugin_interface/amplify_datastore_plugin_interface.dart';&#xA;import 'package:flutter/foundation.dart';&#xA;&#xA;&#xA;/** This is an auto generated class representing the Person type in your schema. */&#xA;@immutable&#xA;class Person extends Model {&#xA;  static const classType = const _PersonModelType();&#xA;  final String id;&#xA;  final String? _name;&#xA;  final String? _des;&#xA;&#xA;  @override&#xA;  getInstanceType() =&gt; classType;&#xA;  &#xA;  @override&#xA;  String getId() {&#xA;    return id;&#xA;  }&#xA;  &#xA;  String get name {&#xA;    try {&#xA;      return _name!;&#xA;    } catch(e) {&#xA;      throw new DataStoreException(DataStoreExceptionMessages.codeGenRequiredFieldForceCastExceptionMessage, recoverySuggestion: DataStoreExceptionMessages.codeGenRequiredFieldForceCastRecoverySuggestion, underlyingException: e.toString());&#xA;    }&#xA;  }&#xA;  &#xA;  String? get des {&#xA;    return _des;&#xA;  }&#xA;  &#xA;  const Person._internal({required this.id, required name, des}): _name = name, _des = des;&#xA;  &#xA;  factory Person({String? id, required String name, String? des}) {&#xA;    return Person._internal(&#xA;      id: id == null ? UUID.getUUID() : id,&#xA;      name: name,&#xA;      des: des);&#xA;  }&#xA;  &#xA;  bool equals(Object other) {&#xA;    return this == other;&#xA;  }&#xA;  &#xA;  @override&#xA;  bool operator ==(Object other) {&#xA;    if (identical(other, this)) return true;&#xA;    return other is Person &amp;&amp;&#xA;      id == other.id &amp;&amp;&#xA;      _name == other._name &amp;&amp;&#xA;      _des == other._des;&#xA;  }&#xA;  &#xA;  @override&#xA;  int get hashCode =&gt; toString().hashCode;&#xA;  &#xA;  @override&#xA;  String toString() {&#xA;    var buffer = new StringBuffer();&#xA;    &#xA;    buffer.write(&quot;Person {&quot;);&#xA;    buffer.write(&quot;id=&quot; + &quot;$id&quot; + &quot;, &quot;);&#xA;    buffer.write(&quot;name=&quot; + &quot;$_name&quot; + &quot;, &quot;);&#xA;    buffer.write(&quot;des=&quot; + &quot;$_des&quot;);&#xA;    buffer.write(&quot;}&quot;);&#xA;    &#xA;    return buffer.toString();&#xA;  }&#xA;  &#xA;  Person copyWith({String? id, String? name, String? des}) {&#xA;    return Person(&#xA;      id: id ?? this.id,&#xA;      name: name ?? this.name,&#xA;      des: des ?? this.des);&#xA;  }&#xA;  &#xA;  Person.fromJson(Map&lt;String, dynamic&gt; json)  &#xA;    : id = json['id'],&#xA;      _name = json['name'],&#xA;      _des = json['des'];&#xA;  &#xA;  Map&lt;String, dynamic&gt; toJson() =&gt; {&#xA;    'id': id, 'name': _name, 'des': _des&#xA;  };&#xA;&#xA;  static final QueryField ID = QueryField(fieldName: &quot;person.id&quot;);&#xA;  static final QueryField NAME = QueryField(fieldName: &quot;name&quot;);&#xA;  static final QueryField DES = QueryField(fieldName: &quot;des&quot;);&#xA;  static var schema = Model.defineSchema(define: (ModelSchemaDefinition modelSchemaDefinition) {&#xA;    modelSchemaDefinition.name = &quot;Person&quot;;&#xA;    modelSchemaDefinition.pluralName = &quot;People&quot;;&#xA;    &#xA;    modelSchemaDefinition.addField(ModelFieldDefinition.id());&#xA;    &#xA;    modelSchemaDefinition.addField(ModelFieldDefinition.field(&#xA;      key: Person.NAME,&#xA;      isRequired: true,&#xA;      ofType: ModelFieldType(ModelFieldTypeEnum.string)&#xA;    ));&#xA;    &#xA;    modelSchemaDefinition.addField(ModelFieldDefinition.field(&#xA;      key: Person.DES,&#xA;      isRequired: false,&#xA;      ofType: ModelFieldType(ModelFieldTypeEnum.string)&#xA;    ));&#xA;  });&#xA;}&#xA;&#xA;class _PersonModelType extends ModelType&lt;Person&gt; {&#xA;  const _PersonModelType();&#xA;  &#xA;  @override&#xA;  Person fromJson(Map&lt;String, dynamic&gt; jsonData) {&#xA;    return Person.fromJson(jsonData);&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>backend schema.graphql:</p>&#xA;<pre><code>type Person @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  des: String&#xA;}&#xA;</code></pre>&#xA;<p>React JS app:&#xA;index.js</p>&#xA;<pre><code>import React from 'react';&#xA;import ReactDOM from 'react-dom';&#xA;import './index.css';&#xA;import App from './App';&#xA;import reportWebVitals from './reportWebVitals';&#xA;import Amplify from 'aws-amplify';&#xA;import aws_exports from './../src/aws-exports';&#xA;Amplify.configure(aws_exports);&#xA;ReactDOM.render(&#xA;  &lt;React.StrictMode&gt;&#xA;    &lt;App /&gt;&#xA;  &lt;/React.StrictMode&gt;,&#xA;  document.getElementById('root')&#xA;);&#xA;&#xA;// If you want to start measuring performance in your app, pass a function&#xA;// to log results (for example: reportWebVitals(console.log))&#xA;&#xA;reportWebVitals();&#xA;</code></pre>&#xA;<p>app.js:</p>&#xA;<pre><code>import logo from './logo.svg';&#xA;import './App.css';&#xA;import { useEffect } from 'react';&#xA;import { API, graphqlOperation } from 'aws-amplify';&#xA;import { listPeople } from './graphql/queries';&#xA;import { createPerson } from './graphql/mutations';&#xA;function App() {&#xA;  useEffect(() =&gt; {&#xA;    const test = async () =&gt; {&#xA;      try {&#xA;        await API.graphql(&#xA;          graphqlOperation(createPerson, {&#xA;            input: {&#xA;              name: 'runzun Node',&#xA;            },&#xA;          })&#xA;        );&#xA;        const result = await API.graphql(graphqlOperation(listPeople));&#xA;        console.log(result);&#xA;      } catch (err) {&#xA;        console.log(err);&#xA;      }&#xA;&#xA;      // const peopleList = result.data.listPeople;&#xA;    };&#xA;&#xA;    test();&#xA;  }, []);&#xA;&#xA;  return (&#xA;    &lt;div className=&quot;App&quot;&gt;&#xA;      &lt;header className=&quot;App-header&quot;&gt;&#xA;        &lt;img src={logo} className=&quot;App-logo&quot; alt=&quot;logo&quot; /&gt;&#xA;        &lt;p&gt;&#xA;          Edit &lt;code&gt;src/App.js&lt;/code&gt; and save to reload.&#xA;        &lt;/p&gt;&#xA;        &lt;a&#xA;          className=&quot;App-link&quot;&#xA;          href=&quot;https://reactjs.org&quot;&#xA;          target=&quot;_blank&quot;&#xA;          rel=&quot;noopener noreferrer&quot;&#xA;        &gt;&#xA;          Learn React&#xA;        &lt;/a&gt;&#xA;      &lt;/header&gt;&#xA;    &lt;/div&gt;&#xA;  );&#xA;}&#xA;&#xA;export default App;&#xA;</code></pre>&#xA;<p>graphql Query :</p>&#xA;<pre><code>/* eslint-disable */&#xA;// this is an auto generated file. This will be overwritten&#xA;&#xA;export const getPerson = /* GraphQL */ `&#xA;  query GetPerson($id: ID!) {&#xA;    getPerson(id: $id) {&#xA;      id&#xA;      name&#xA;      des&#xA;      createdAt&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;`;&#xA;export const listPeople = /* GraphQL */ `&#xA;  query ListPeople(&#xA;    $filter: ModelPersonFilterInput&#xA;    $limit: Int&#xA;    $nextToken: String&#xA;  ) {&#xA;    listPeople(filter: $filter, limit: $limit, nextToken: $nextToken) {&#xA;      items {&#xA;        id&#xA;        name&#xA;        des&#xA;        createdAt&#xA;        updatedAt&#xA;      }&#xA;      nextToken&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>graphql Mutation:</p>&#xA;<pre><code>/* eslint-disable */&#xA;// this is an auto generated file. This will be overwritten&#xA;&#xA;export const createPerson = /* GraphQL */ `&#xA;  mutation CreatePerson(&#xA;    $input: CreatePersonInput!&#xA;    $condition: ModelPersonConditionInput&#xA;  ) {&#xA;    createPerson(input: $input, condition: $condition) {&#xA;      id&#xA;      name&#xA;      des&#xA;      createdAt&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;`;&#xA;export const updatePerson = /* GraphQL */ `&#xA;  mutation UpdatePerson(&#xA;    $input: UpdatePersonInput!&#xA;    $condition: ModelPersonConditionInput&#xA;  ) {&#xA;    updatePerson(input: $input, condition: $condition) {&#xA;      id&#xA;      name&#xA;      des&#xA;      createdAt&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;`;&#xA;export const deletePerson = /* GraphQL */ `&#xA;  mutation DeletePerson(&#xA;    $input: DeletePersonInput!&#xA;    $condition: ModelPersonConditionInput&#xA;  ) {&#xA;    deletePerson(input: $input, condition: $condition) {&#xA;      id&#xA;      name&#xA;      des&#xA;      createdAt&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>backend schema.graphql</p>&#xA;<pre><code>type Person @model {&#xA;  id: ID!&#xA;  name: String!&#xA;  des: String&#xA;}&#xA;</code></pre>&#xA;",9860184,,,,2021-12-26 10:48:34,Amplify Flutter and Amplify React same project different result,<reactjs><flutter><graphql><aws-amplify>,1,0,0,2021-09-24 05:55:26
69322647,1,69322962,,0,86,"<p>I'm currently not able to query DynamoDB as a generic user to obtain the user's own details. It's worth noting when given admin privileges the user can execute queries and the work as intended; so it's not a problem with the data but rather the privileges of users.</p>&#xA;<p>I believe the problem is arising due to the nature of &quot;owner&quot; property in graphQL and my means of authentication (which is email &amp; password). I believe the &quot;owner&quot; property might only work with username &amp; password but I cannot find any documentation to back this so it's a stab in the dark. Does anyone have any ideas as to why the user is unable to receive their own data?</p>&#xA;<p>Query:&#xA;<a href=""https://i.stack.imgur.com/ywTSV.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ywTSV.png"" alt=""Query &amp; Result"" /></a></p>&#xA;<p>Admin Privileges:&#xA;<a href=""https://i.stack.imgur.com/sITDz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sITDz.png"" alt=""Admin Privileges"" /></a></p>&#xA;<p>Schema.graphql:</p>&#xA;<pre><code>type User @model &#xA;@auth(rules: [&#xA;{allow: groups, groups: [&quot;Admin&quot;] },&#xA;{allow: owner, ownerField: &quot;username&quot;, operations: [read]}&#xA;])&#xA;{&#xA;  id: ID!&#xA;  email: String!&#xA;}&#xA;&#xA;</code></pre>&#xA;",9627695,,,,2021-09-25 03:47:04,AWS DynamoDB Queries Not Showing user data unless with Admin privileges,<amazon-web-services><graphql><amazon-dynamodb><dynamodb-queries>,1,0,0,2021-09-25 02:13:59
69322962,2,,69322647,1,,"<p>Replace ownerfield &quot;username&quot; with &quot;id&quot;</p>&#xA;<pre><code>type User @model &#xA;@auth(rules: [&#xA;{allow: groups, groups: [&quot;Admin&quot;] },&#xA;{allow: owner, ownerField: &quot;id&quot;, operations: [read]}&#xA;])&#xA;{&#xA;  id: ID!&#xA;  email: String!&#xA;}&#xA;</code></pre>&#xA;",9627695,,,,2021-09-25 03:47:04,"",,0,0,0,2021-09-25 03:47:04
69323222,1,,,2,294,"<p>I am building an app using Ionic, Capacitor and AWS Amplify. I am having some issues</p>&#xA;<p>I have set up federated sign-in for my app using the capacitor plugin <a href=""https://github.com/capacitor-community/facebook-login"" rel=""nofollow noreferrer"">https://github.com/capacitor-community/facebook-login</a> and call <code>Auth.federatedSignIn()</code> as per the below. This logs my user in with a federated identity. This is great, but it means I cannot use <code>@auth(rules: [{ allow: owner }])</code> in my graphql schema. Is there any way to create a user in the userpool when calling <code>Auth.federatedSignIn()</code>? I know that calling <code>Auth.federatedSignIn({ provider: &quot;Facebook&quot; })</code> and using the hosted UI works like this, but I do not want to redirect my user to a browser/chrome tab to sign in. I would like the authentication to be provided by the native functionality provided by the above capacitor plugin.</p>&#xA;<p>Using the federated identity allows me to restrict access to my graphql schema using IAM: <code>@auth(rules: [{ allow: private, provider: iam }])</code> but this is limited to private and public rules. I want to limit the graphql api so that users can see only their own entries with functionality like <code>@auth(rules: [{ allow: owner }])</code>.</p>&#xA;<p>Maybe I am going about this the wrong way? I'm stumped. Any help is appreciated. Thanks.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const FBLogIn = async () =&gt; {&#xA;    const result = await FacebookLogin.login({ permissions: FACEBOOK_PERMISSIONS });&#xA;    const { email } = await FacebookLogin.getProfile({ fields: ['email'] });&#xA;   &#xA;    try {&#xA;      const userDetails = await Auth.federatedSignIn(&quot;facebook&quot;, { token: result.accessToken.token, expires_at: result.accessToken.expires }, { name: result.accessToken.userId, email: email })&#xA;      &#xA;    } catch (error) {&#xA;      console.log(error)&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;",13327580,,,,2021-09-25 04:49:39,Using @auth owner directive with Auth.federatedSignIn() in Amplify/Cognito,<amazon-web-services><graphql><amazon-cognito><aws-amplify><capacitor>,0,0,0,2021-09-25 04:49:39
69330412,1,69458158,,4,568,"<pre><code>type Employee {&#xA;    id: String!&#xA;    name: String&#xA;    lastObservedStatus: String&#xA;}&#xA;&#xA;type Query {&#xA;    employees: [Employee]&#xA;}&#xA;</code></pre>&#xA;<p>This is a fictional schema to illustrate my question. I have two separate data sources that return lists that need to be joined in order to populate the response. The first data source 'employee list api' is an http API I can query to get an authoritative list of employees that I can use to populate the <code>id</code> and <code>name</code> columns. For example, I get a response like this:</p>&#xA;<pre><code>[&#xA;    {&quot;id&quot;: &quot;001&quot;, &quot;name&quot;: &quot;Harry&quot;},&#xA;    {&quot;id&quot;: &quot;002&quot;, &quot;name&quot;: &quot;Jerry&quot;},&#xA;    {&quot;id&quot;: &quot;003&quot;, &quot;name&quot;: &quot;Larry&quot;}&#xA;]&#xA;</code></pre>&#xA;<p>I have a second http API 'employee observation log' I can query to get a list of statuses together with the associated ids. The id allows me to associate the number to an entry in the employee record, and I have a record date. There may be more than one status record, but in GraphQL I want to pick only the most recent one. Example response:</p>&#xA;<pre><code>[&#xA;    {&quot;id&quot;:&quot;002&quot;, &quot;TimeStamp&quot;:&quot;2021-07-01T12:30:00Z&quot;, &quot;status&quot;: &quot;eating&quot;},&#xA;    {&quot;id&quot;:&quot;002&quot;, &quot;TimeStamp&quot;:&quot;2021-07-01T13:10:00Z&quot;, &quot;status&quot;: &quot;staring out the window&quot;},&#xA;    {&quot;id&quot;:&quot;001&quot;, &quot;TimeStamp&quot;:&quot;2021-07-01T16:00:00Z&quot;, &quot;status&quot;: &quot;sleeping in lobby&quot;}&#xA;]&#xA;</code></pre>&#xA;<p>Now, I want the graphQL response to return something like this:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;employees&quot;: [&#xA;      {&#xA;        &quot;id&quot;: &quot;001&quot;,&#xA;        &quot;name&quot;: &quot;Harry&quot;,&#xA;        &quot;lastObservedStatus&quot;: &quot;sleeping in lobby&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: &quot;002&quot;,&#xA;        &quot;name&quot;: &quot;Jerry&quot;,&#xA;        &quot;lastObservedStatus&quot;: &quot;staring out the window&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: &quot;003&quot;,&#xA;        &quot;name&quot;: &quot;Larry&quot;,&#xA;        &quot;lastObservedStatus&quot;: null&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Since 'employee list api' is the authoritative source about which employees exist, all queries to the 'employee' field should always trigger a query to that api, but the 'employee observation log' api should only be triggered if the 'lastObservedStatus' field is selected in the query.</p>&#xA;<p>For a schema like this, where should the resolvers be registered? I've read that the best practice is to always attach resolvers at the leaf nodes, but I'm not sure how that can be done in this situation. I'm not even sure what happens if you attach a resolver on subfields of a list.</p>&#xA;<p>I feel like the correct way to handle this is to attach a lambda resolver to the <code>employees</code> field, and in the lambda resolver check the query's selectionSetList to check whether or not the 'lastObservedStatus' field has been selected. If not, then the lambda only queries 'employee list api', but otherwise the lambda also queries 'employee observation log' and does something similar to a SQL join before returning the result. But is that the correct way to handle this?</p>&#xA;",12930050,,,,2021-10-08 16:30:19,How do you handle lists that require joined data from multiple data sources in AppSync/GraphQL?,<graphql><aws-appsync><aws-appsync-resolver>,1,0,0,2021-09-25 22:12:26
69356746,2,,68069040,2,,"<p>You can use any attribute name in a key condition expression, provided that the first character is a-z or A-Z and the second character (if present) is a-z, A-Z, or 0-9. In addition, the attribute name must not be a DynamoDB reserved word. <strong>The word &quot;name&quot; is already reserved by DynamoDB</strong>. Check all reserved words here: <a href=""https://docs.amazonaws.cn/en_us/amazondynamodb/latest/developerguide/ReservedWords.html"" rel=""nofollow noreferrer"">https://docs.amazonaws.cn/en_us/amazondynamodb/latest/developerguide/ReservedWords.html</a></p>&#xA;",16974000,,,,2021-09-28 06:24:38,"",,0,1,0,2021-09-28 06:24:38
69367052,1,,,4,862,"<p>getServerSideProps is displaying &quot;<strong>No Current User</strong>&quot;, but I'm logged in my app.</p>&#xA;<pre><code>type Post&#xA;  @model&#xA;  @key(&#xA;    name: &quot;postsByUsername&quot;&#xA;    fields: [&quot;username&quot;]&#xA;    queryField: &quot;postsByUsername&quot;&#xA;  )&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner, ownerField: &quot;username&quot; }&#xA;      { allow: private, operations: [read] }&#xA;      { allow: public, operations: [read] }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  username: String&#xA;  image: S3Object&#xA;}&#xA;</code></pre>&#xA;<p>I'm able to use AWS AppSync's website to actually query the posts by username, it returned values. I logged in using the same login I'm in for my app.</p>&#xA;<pre><code>export async function getServerSideProps() {&#xA;  const SSR = withSSRContext();&#xA;  const { data } = await SSR.API.graphql({&#xA;    query: postsByUsername,&#xA;    variables: {&#xA;      username: &quot;username&quot; // checked in dynamodb, same username as signed in. &#xA;    },&#xA;    authMode: &quot;AMAZON_COGNITO_USER_POOLS&quot;,&#xA;  });&#xA;  return {&#xA;    props: {&#xA;      posts: data.postsByUsername.items,&#xA;    },&#xA;  };&#xA;}&#xA;</code></pre>&#xA;<p>I've also added ssr in my <strong>_app.js</strong>:</p>&#xA;<pre><code>import { Amplify } from &quot;aws-amplify&quot;;&#xA;import awsExports from &quot;../../aws-exports&quot;;&#xA;&#xA;Amplify.configure({ ...awsExports, ssr: true });&#xA;</code></pre>&#xA;<p>in <strong>aws-exports.js</strong>:</p>&#xA;<pre><code>const awsmobile = {&#xA;    &quot;aws_project_region&quot;: &quot;xxxxx&quot;,&#xA;    &quot;aws_appsync_graphqlEndpoint&quot;: &quot;https://...&quot;,&#xA;    &quot;aws_appsync_region&quot;: &quot;xxxxx&quot;,&#xA;    &quot;aws_appsync_authenticationType&quot;: &quot;AMAZON_COGNITO_USER_POOLS&quot;,&#xA;    &quot;aws_appsync_apiKey&quot;: &quot;xxx-xxxxxxxx...&quot;,&#xA;    &quot;aws_cognito_identity_pool_id&quot;: &quot;xxxxxx&quot;,&#xA;    &quot;aws_cognito_region&quot;: &quot;xxxxx&quot;,&#xA;    &quot;aws_user_pools_id&quot;: &quot;xxxxx&quot;,&#xA;    &quot;aws_user_pools_web_client_id&quot;: &quot;xxxxxx&quot;,&#xA;    &quot;oauth&quot;: {},&#xA;    &quot;aws_user_files_s3_bucket&quot;: &quot;xxxxxx&quot;,&#xA;    &quot;aws_user_files_s3_bucket_region&quot;: &quot;xxxxxx&quot;&#xA;};&#xA;</code></pre>&#xA;<p>everything in awsmobile were autogenerated.</p>&#xA;",659751,,659751,2021-09-28 19:01:16,2022-01-10 18:17:43,Next.js and AWS Amplify getting Error: No Current User - getServerSideProps,<graphql><next.js><server-side-rendering><aws-amplify><aws-appsync>,1,1,0,2021-09-28 18:47:58
69388390,1,,,0,55,"<p>I am creating an React App with Amplify backend. So far that is working great but I want to forbid that certain user can list some Elements. Let me give an example graphql definition:</p>&#xA;<pre><code>type Customer @model &#xA;@auth(rules: [&#xA;   {allow: public, , operations: [read,create,update]},&#xA;   {allow: groups, groups: [&quot;admin&quot;,&quot;partner&quot;] }])  &#xA;{&#xA;   id: ID!&#xA;   firstName: String&#xA;   lastName: String&#xA;   email: String&#xA;   phone: String&#xA;}&#xA;</code></pre>&#xA;<p>We have Customers that are not logged in so they are public. They know their id (because it is in the url after they created the Customer Entry) and they should be able to update, read and create their own user. Thats working good.&#xA;<strong>Unfortunately they can also use the listCustomers query.</strong> So they can see all the other entries. Can I forbid this in some way? As I understand the operation &quot;read&quot; means &quot;get&quot; and &quot;list&quot;.</p>&#xA;<p>The same should be for cognito groups. &quot;admin&quot; should be able to do everything including &quot;list&quot; and &quot;partner&quot; should only be able to &quot;get&quot;.</p>&#xA;<p>Does anyone has an idea? I have read the docs and googled it but seems like I do not find an answer.</p>&#xA;<p>Best regards</p>&#xA;",8002683,,,,2021-10-12 06:19:17,AWS Amplify AppSync GraphQL @Auth directive: How can I forbid to list of elements for public user,<amazon-web-services><graphql><authorization><amplify>,1,0,0,2021-09-30 07:58:54
69391285,2,,65553573,0,,"<p>You can use <code>amplify import storage</code> to import existing DynamoDB tables or S3 buckets.</p>&#xA;<p>more here:  <a href=""https://docs.amplify.aws/cli/storage/import/"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/storage/import/</a></p>&#xA;<p>Also look at&#xA;<a href=""https://docs.amplify.aws/lib/graphqlapi/create-or-re-use-existing-backend/q/platform/js/#re-use-existing-appsync-graphql-api"" rel=""nofollow noreferrer"">Re-use existing AppSync GraphQL API</a> - it might help with reusing lambda functions, if they are wrapped by an API.</p>&#xA;",518635,,,,2021-09-30 11:17:58,"",,0,0,0,2021-09-30 11:17:58
69392863,1,,,0,591,"<p>Hi I am trying to format my graphql query to json request like this. I want to pass id as string with value &quot;3&quot;, RN when I am sending this as a json request , graphql denies with error. How do I resolve this ?</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>{""query"":""{user(id:3){id,firstName,age}}""}  {&#xA;  ""errors"": [&#xA;    {&#xA;      ""message"": ""String cannot represent a non string value: 3"",&#xA;      ""locations"": [&#xA;        {&#xA;          ""line"": 1,&#xA;          ""column"": 10&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}   </code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>Added schema in edit1:&#xA;`# Exposes a URL that specifies the behavior of this scalar.&#xA;directive @specifiedBy(</p>&#xA;<h1>The URL that specifies the behavior of this scalar.</h1>&#xA;<p>url: String!&#xA;) on&#xA;| SCALAR</p>&#xA;<p>schema {&#xA;query: RootQueryType&#xA;mutation: Mutation&#xA;}</p>&#xA;<p>type Company {&#xA;id: String&#xA;name: String&#xA;description: String&#xA;users: [User]&#xA;}</p>&#xA;<p>type Mutation {&#xA;addUser(firstName: String!, lastName: String, age: Int!, socialSecurity: String, companyId: String): User&#xA;deleteUser(id: String!, companyId: String): User&#xA;editUser(id: String!, firstName: String, lastName: String, age: Int, socialSecurity: String, companyId: String): User&#xA;addCompanies(name: String!, description: String): Company&#xA;editCompanies(id: String!, name: String, description: String): Company&#xA;}</p>&#xA;<p>type RootQueryType {&#xA;user(id: String): User&#xA;company(id: String): Company&#xA;}</p>&#xA;<p>type User {&#xA;id: String&#xA;firstName: String&#xA;lastName: String&#xA;age: Int&#xA;socialSecurity: String&#xA;company: Company&#xA;}&#xA;`</p>&#xA;",15748055,,15748055,2021-10-12 09:30:31,2021-10-19 16:23:40,GraphQL to JSON parsing?,<json><parsing><graphql><formatting><backend>,1,1,0,2021-09-30 13:11:35
69394886,1,,,0,245,"<p>I am developing a chat app with React + AppSync + DynamoDB. I wanted to show the Online/Offline status to other <strong>users</strong> in the App. So I created a field called <strong>isActive</strong> in the <strong>user</strong> table. Whenever the user logs in to the app I change it to <strong>Online</strong>. When the user turns off the internet I need to update the status as <strong>offline</strong>. But this not happening, since I have disconnected from the internet the API call to update offline status is failing.</p>&#xA;",7973386,,7973386,2021-10-02 05:03:09,2021-10-02 05:03:09,Update Online/Offline status in AWS AppSync,<amazon-web-services><graphql><amazon-dynamodb><aws-appsync>,0,5,0,2021-09-30 15:23:43
69408186,2,,69397875,0,,<p>Figured out how to read the result from the output above:</p>&#xA;<pre><code>result.original_hash[&quot;data&quot;][&quot;productByHandle&quot;] &#xA;</code></pre>&#xA;<p>This returns nil and allows me to continue to create a new product.</p>&#xA;,17046411,,3025856,2021-10-01 16:32:17,2021-10-01 16:32:17,"",,0,0,0,2021-10-01 15:09:15
69416481,1,,,1,200,"<p>I am using AWS appsync as grahpql server and I'd like to create a <code>mutation</code> API to response null value. So I need something like:</p>&#xA;<pre><code>mutation{&#xA;   updateUser(name: String!): Void&#xA;}&#xA;</code></pre>&#xA;<p>But <code>Void</code> is not a scalar type in appsync. I have searched some solutions like <a href=""https://stackoverflow.com/questions/44737043/is-it-possible-to-not-return-any-data-when-using-a-graphql-mutation"">Is it possible to not return any data when using a GraphQL mutation?</a> but they are all about using apollo server. Is it possible to achieve null response in appsync?</p>&#xA;",5421539,,,,2022-08-12 02:12:50,How can I create a `mutation` which response void in appsync?,<amazon-web-services><graphql><apollo-server><aws-appsync>,1,0,0,2021-10-02 11:30:09
69426939,2,,67551593,8,,"<p><strong>Cause</strong>: When you exec <code>prisma migrate reset</code> or <code>prisma migrate dev</code> in the remote Supabase database you may need to reset it. Resetting the database drops the whole database and recreates it. <a href=""https://www.prisma.io/docs/concepts/components/prisma-migrate#reset-the-development-database"" rel=""noreferrer"">Source</a></p>&#xA;<p>This clears all the <code>GRANT</code>s that are required for PostgREST to work&#xA;You can find the error in the PostgREST documentation at:</p>&#xA;<p><a href=""https://postgrest.org/en/latest/tutorials/tut0.html?highlight=42501#step-5-run-postgrest"" rel=""noreferrer"">https://postgrest.org/en/latest/tutorials/tut0.html?highlight=42501#step-5-run-postgrest</a></p>&#xA;<p><strong>Solution 1</strong>: Create a brand new project and use only <code>prisma migrate deploy</code> on the remote database.</p>&#xA;<p><strong>Solution 2</strong>: Fix the grants manually by granting access to the tables</p>&#xA;<p>You can check the difference when you run the following SQL on a brand new Supabase project and your damaged database to observe the differences.</p>&#xA;<pre class=""lang-sql prettyprint-override""><code>SELECT *&#xA;FROM information_schema.role_table_grants &#xA;WHERE table_schema='public' and table_name='members'&#xA;</code></pre>&#xA;<p>The following default grants are taken from the supabase github repo at <a href=""https://github.com/supabase/supabase/blob/a2fc6d592cb4ea50fd518b99db199a31912040b9/docker/volumes/db/init/00-initial-schema.sql#L26-L29"" rel=""noreferrer"">https://github.com/supabase/supabase/blob/a2fc6d592cb4ea50fd518b99db199a31912040b9/docker/volumes/db/init/00-initial-schema.sql#L26-L29</a></p>&#xA;<pre><code>grant usage on schema public to postgres, anon, authenticated, service_role;&#xA;alter default privileges in schema public grant all on tables to postgres, anon, authenticated, service_role;&#xA;alter default privileges in schema public grant all on functions to postgres, anon, authenticated, service_role;&#xA;alter default privileges in schema public grant all on sequences to postgres, anon, authenticated, service_role;&#xA;&#xA;alter default privileges for user supabase_admin in schema public grant all&#xA;    on sequences to postgres, anon, authenticated, service_role;&#xA;alter default privileges for user supabase_admin in schema public grant all&#xA;    on tables to postgres, anon, authenticated, service_role;&#xA;alter default privileges for user supabase_admin in schema public grant all&#xA;    on functions to postgres, anon, authenticated, service_role;&#xA;</code></pre>&#xA;<p>Here's a list of default permissions for a sample table <code>members</code></p>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th>grantor</th>&#xA;<th>grantee</th>&#xA;<th>table_catalog</th>&#xA;<th>table_schema</th>&#xA;<th>table_name</th>&#xA;<th>privilege_type</th>&#xA;<th>is_grantable</th>&#xA;<th>with_hierarchy</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>INSERT</td>&#xA;<td>YES</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>SELECT</td>&#xA;<td>YES</td>&#xA;<td>YES</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>UPDATE</td>&#xA;<td>YES</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>DELETE</td>&#xA;<td>YES</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>TRUNCATE</td>&#xA;<td>YES</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>REFERENCES</td>&#xA;<td>YES</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>TRIGGER</td>&#xA;<td>YES</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>anon</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>INSERT</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>anon</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>SELECT</td>&#xA;<td>NO</td>&#xA;<td>YES</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>anon</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>UPDATE</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>anon</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>DELETE</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>anon</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>TRUNCATE</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>anon</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>REFERENCES</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>anon</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>TRIGGER</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>authenticated</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>INSERT</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>authenticated</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>SELECT</td>&#xA;<td>NO</td>&#xA;<td>YES</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>authenticated</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>UPDATE</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>authenticated</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>DELETE</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>authenticated</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>TRUNCATE</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>authenticated</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>REFERENCES</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>authenticated</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>TRIGGER</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>service_role</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>INSERT</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>service_role</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>SELECT</td>&#xA;<td>NO</td>&#xA;<td>YES</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>service_role</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>UPDATE</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>service_role</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>DELETE</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>service_role</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>TRUNCATE</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>service_role</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>REFERENCES</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;<tr>&#xA;<td>postgres</td>&#xA;<td>service_role</td>&#xA;<td>postgres</td>&#xA;<td>public</td>&#xA;<td>members</td>&#xA;<td>TRIGGER</td>&#xA;<td>NO</td>&#xA;<td>NO</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div>",668245,,668245,2021-10-03 17:42:24,2021-10-03 17:42:24,"",,0,1,0,2021-10-03 16:47:04
69458158,2,,69330412,0,,"<p>It sounds like what you need is a resolver on the <code>lastObservedStatus</code> field that uses your second API ('employee observation log') as the data source, where the Query field <code>employees</code> is using the first API as its data source.</p>&#xA;<p>This resolver should do a query using the <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html"" rel=""nofollow noreferrer"">context source field</a> (the 'parent' values, in this case <code>id</code> and <code>name</code> of the <code>Employee</code> which you can reference). You can reference this in the VTL code using <code>$ctx.source.id</code> for example, or <code>$ctx.source.name</code> if you needed the name.</p>&#xA;<p>This resolver should only query the status for a <strong>single</strong> Employee, since it'll be invoked once per <strong>every</strong> result in your Query field <code>employees</code>.</p>&#xA;<p>There is another option as well, which would be to have a 2 function pipeline resolver where each function points at a different data source:</p>&#xA;<ul>&#xA;<li>Step 1 resolves all fields except for <code>lastObservedStatus</code></li>&#xA;<li>Step 2 resolves <code>lastObservedStatus</code> and stitches the results with the <code>$ctx.prev.result</code>.</li>&#xA;</ul>&#xA;<p>This will be messier to implement, but will require fewer API calls if designed properly.</p>&#xA;",7902764,,7902764,2021-10-08 16:30:19,2021-10-08 16:30:19,"",,0,0,0,2021-10-05 23:06:47
69470218,2,,58309814,2,,"<p>TLDR: You cannot tell the exact rules how the type <code>AWSPhone</code> is validated in AppSync. However, if a value passes the test of the regular expression <code>/^\+?\d[\d\s-]+$/</code> or validation by <a href=""https://catamphetamine.gitlab.io/libphonenumber-js/"" rel=""nofollow noreferrer"">libphonenumber-js</a>, then it is likely to be accepted by AppSync.</p>&#xA;<p>In the latest <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html"" rel=""nofollow noreferrer"">AppSync Developer Guide</a> (Oct 6, 2021 UTC), the description was updated to:</p>&#xA;<blockquote>&#xA;<p>A phone number. This value is stored as a string. Phone numbers can contain either spaces or hyphens to separate digit groups. Phone numbers without a country code are assumed to be US/North American numbers adhering to the <a href=""https://en.wikipedia.org/wiki/North_American_Numbering_Plan"" rel=""nofollow noreferrer"">North American Numbering Plan (NANP)</a>.</p>&#xA;</blockquote>&#xA;<p>This doesn't really tell exactly what AppSync expects. E.g. Must country code include <code>+</code> as prefix?</p>&#xA;<p>From AWS's public repositories on GitHub, there are hints:</p>&#xA;<ul>&#xA;<li><p><a href=""https://github.com/aws-amplify/amplify-js/blob/46ee5dd91c61f49bad4da8286b2f97c737d96631/packages/datastore/src/util.ts#L675-L677"" rel=""nofollow noreferrer"">amplify-js datastore util method</a> for frontend validation:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>export const isAWSPhone = (val: string): boolean =&gt; {&#xA;   return !!/^\+?\d[\d\s-]+$/.exec(val);&#xA;};&#xA;</code></pre>&#xA;</li>&#xA;<li><p><a href=""https://github.com/aws-amplify/amplify-cli/blob/08750a6f7f9e9326a81b5d45a7ef31bd9f30595f/packages/amplify-appsync-simulator/src/schema/appsync-scalars/index.ts#L3-L26"" rel=""nofollow noreferrer"">amplify-appsync-simulator</a> for amplify CLI mock features:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>//...&#xA;import { isValidNumber } from 'libphonenumber-js';&#xA;//...&#xA;const phoneValidator = (ast, options) =&gt; {&#xA;   //...&#xA;   let isValid = isValidNumber(value, country);&#xA;   //...&#xA;}&#xA;</code></pre>&#xA;</li>&#xA;</ul>&#xA;<p>Therefore, a value is likely to be accepted by AppSync if it passes the above regex test and validation by <a href=""https://catamphetamine.gitlab.io/libphonenumber-js/"" rel=""nofollow noreferrer"">libphonenumber-js</a> (or <a href=""https://github.com/google/libphonenumber"" rel=""nofollow noreferrer"">libphonenumber</a>, assuming they work equivalently).</p>&#xA;",1089242,,1089242,2021-10-07 03:59:30,2021-10-07 03:59:30,"",,0,0,0,2021-10-06 17:31:07
69482442,1,,,1,114,"<p>I am building a page in React using Apollo Client to make GQL requests to the backend (that I'm also making). I frequently use this pattern for rendering data in tables where I have one query that gets only the Id's of the rows I want to render. I then loop over each Id and give that to a 'Row' to render by making a gql request for it's data. I like this pattern because it allows me to nest tables of data inside the table with no additional tweaking.</p>&#xA;<p><a href=""https://i.stack.imgur.com/Gpk5m.png"" rel=""nofollow noreferrer"">Example table with arrows to show or hide more information</a></p>&#xA;<pre class=""lang-js prettyprint-override""><code>export default function ExTable(){&#xA;    // Get just the ids of the rows that should be rendered&#xA;    const { data } = useGetTableDataIds()&#xA;&#xA;    const rows = data.queryData ?? []&#xA;&#xA;    return (&#xA;        &lt;table&gt;&#xA;            {&#xA;                rows.map(r=&gt;&lt;TableRow key={`row-${r}`} id={r}/&gt;)&#xA;            }&#xA;        &lt;/table&gt;&#xA;    )&#xA;}&#xA;&#xA;function TableRow({id}:{id:number}){&#xA;    // Load data for provided id&#xA;    const { data } = useGetRowData({variables: {id}})&#xA;&#xA;    // Render row using data ...&#xA;    return &lt;tr/&gt;&#xA;}&#xA;</code></pre>&#xA;<p>What I don't like about this is all of the requests for data are made individually. I would prefer  one request for all of the data. The thing I don't like is that if this data request lives at the top of the table it might be more difficult to prevent the whole table from re-rendering.</p>&#xA;<p>Are there any best practices on requesting data that may be frequently mutated for tables? What about when that data has a lot of optionally loaded nested data inside of it?</p>&#xA;",16602276,,,,2021-10-07 13:53:44,I'm looking for a better way to structure Apollo Client Queries when building a table with tabs,<reactjs><apollo-client><react-apollo>,0,0,0,2021-10-07 13:53:44
69505734,1,,,0,55,"<p>I am new to GraphQL and I've been trying to come up with a simple query but I'm not getting the results I need.</p>&#xA;<p>Basically, I am writing a mutation to delete a row when the following conditions are met:</p>&#xA;<p>(A = a AND B = b) OR (A = b AND B = a)</p>&#xA;<p>However, I can't seem to figure out how to write it.</p>&#xA;<p>I tried doing something like:</p>&#xA;<pre><code>delete_links(where: {_or: {_and: {a: {_eq: a}, b: {_eq: b}}}, {_and: {a: {_eq: b}, b: {_eq: a}}}) {&#xA;affected_rows&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I am using Hasura on postgresql.</p>&#xA;<p>Basically I have a table called Links storing:</p>&#xA;<pre><code>link_a | link_b&#xA;</code></pre>&#xA;<p>The problem is a link between item 9 and 2 in link can either be:</p>&#xA;<pre><code>link_a | link_b&#xA;2      | 9&#xA;</code></pre>&#xA;<p>or</p>&#xA;<pre><code>link_a | link_b&#xA;9      | 2&#xA;</code></pre>&#xA;<p>Hence I want my delete mutation to delete BOTH cases. However I cant seem to do a query <code>(A = a AND B = b) OR (A = b AND B = a)</code></p>&#xA;",16971872,,16971872,2021-10-09 11:09:35,2021-10-09 13:23:16,GraphQL (A = a AND B = b) OR (A = b AND B = a),<graphql><graphql-js><hasura>,1,2,0,2021-10-09 10:08:56
69512187,2,,69511468,3,,"<p>If I understand correctly, your issue is revolving around accessing elements at specific indexes from <code>data</code> – where <code>data</code> possibly has a value of <code>undefined</code> (as per your <code>HomeViewer</code> interface);</p>&#xA;<pre><code>export interface HomeViewer {&#xA; user?: User;&#xA; announcements?: Announcement;&#xA;}&#xA;</code></pre>&#xA;<p>To me, it appears that the <code>Announcement</code> type is indicative of an array of some elements (judging by the way you're accessing its data), or <code>undefined</code> (since it's optional).</p>&#xA;<p>Meaning, it will never certainly be an instance of <code>Announcement</code>'s type declaration, so you'll have to chain an optional access operator for accessing array elements that possibly don't exist: <code>?.</code>;</p>&#xA;<pre><code>const { viewer } = useContext(ViewerContext);&#xA;const data = viewer?.announcements;&#xA;&#xA;console.log(data?.[0]) // -&gt; Ok!&#xA;console.log(data[0])  //  -&gt; Err! Object is possibly undefined.&#xA;</code></pre>&#xA;",13120761,,,,2021-10-10 04:02:19,"",,0,0,0,2021-10-10 04:02:19
69513413,2,,69273638,0,,"<p>Probably your default Auth method is API_KEY</p>&#xA;<p>You can see this in aws-export.js file.</p>&#xA;<p><code>&quot;aws_appsync_authenticationType&quot;: &quot;API_KEY&quot;,</code></p>&#xA;<p>So you have to change your request a little bit so that it takes the cognito user with which you are logged in:</p>&#xA;<pre><code>let postData = await API.graphql({&#xA;  query: { query: listMemberes, variables: { limit: 100 }},&#xA;  variables: { limit: 100 },&#xA;  authMode: 'AMAZON_COGNITO_USER_POOLS'&#xA;&#xA;})&#xA;</code></pre>&#xA;<p>Source:&#xA;<a href=""https://docs.amplify.aws/lib/graphqlapi/query-data/q/platform/js/#simple-query"" rel=""nofollow noreferrer"">https://docs.amplify.aws/lib/graphqlapi/query-data/q/platform/js/#simple-query</a></p>&#xA;",8002683,,,,2021-10-10 08:09:02,"",,0,0,0,2021-10-10 08:09:02
69515044,1,69515470,,0,53,"<p>I am very new to aws and I am having a hard time understanding the process between lambda function and the dynamoDB. I followed this <a href=""https://docs.amplify.aws/cli/usage/lambda-triggers/#as-a-part-of-the-graphql-api-types-with-model-annotation"" rel=""nofollow noreferrer"">documentation</a>.</p>&#xA;<p>According to the documentaion this trigger is used to get the records of the tables from dynamodb.</p>&#xA;<pre><code>exports.handler = function (event, context) {&#xA;  console.log(JSON.stringify(event, null, 2));&#xA;  event.Records.forEach((record) =&gt; {&#xA;    console.log(record.eventID);&#xA;    console.log(record.eventName);&#xA;    console.log('DynamoDB Record: %j', record.dynamodb);&#xA;  });&#xA;  context.done(null, 'Successfully processed DynamoDB record');&#xA;};&#xA;</code></pre>&#xA;<p>And the event is coming from the 'event.json' file. Which is this:</p>&#xA;<pre><code>{&#xA;  &quot;key1&quot;: &quot;value1&quot;,&#xA;  &quot;key2&quot;: &quot;value2&quot;,&#xA;  &quot;key3&quot;: &quot;value3&quot;&#xA;}&#xA;</code></pre>&#xA;<p>What I want to accomplished is to retrieve and update the data of my dynamodb 'User' table which is from this graphql model.</p>&#xA;<pre><code>type User @model @auth(rules: [{allow: owner, operations: [create, update]}]){&#xA;    id: ID!&#xA;    coins: Int&#xA;}&#xA;</code></pre>&#xA;",12056369,,,,2021-10-10 13:13:55,How to access dynamodb generated by graphql model in lambda function and perform operations?,<amazon-web-services><aws-lambda><graphql><amazon-dynamodb>,1,0,0,2021-10-10 12:14:14
69515470,2,,69515044,0,,"<p>Not sure amplify docs is the best one to use for learning Lambda. Second, why do you want to use GraphQL to perform CRUD operations on an Amazon DynamoDB table  from within a Lambda function. There are other ways such as using the JavaScript SDK from within a Lambda function as discussed here in the <strong>JavaScript Developer Guide</strong>:</p>&#xA;<p><a href=""https://docs.aws.amazon.com/sdk-for-javascript/v3/developer-guide/scheduled-events-invoking-lambda-example.html"" rel=""nofollow noreferrer"">Creating scheduled events to execute AWS Lambda functions</a></p>&#xA;",1435543,,,,2021-10-10 13:13:55,"",,0,10,0,2021-10-10 13:13:55
69532834,2,,57225861,1,,"<p>In my case api key was expired... really long journey let me to:</p>&#xA;<ol>&#xA;<li>amplify update api</li>&#xA;<li>walk through all</li>&#xA;<li>choose api key</li>&#xA;<li>enter new api key name</li>&#xA;<li>enter 365 days no further changes</li>&#xA;<li>amplify push will not detect changes, so use amplify push --force&#xA;maybe it helps</li>&#xA;</ol>&#xA;",16932102,,,,2021-10-11 21:50:50,"",,0,1,0,2021-10-11 21:50:50
69535902,2,,69388390,0,,"<p>To answer my question:</p>&#xA;<p>You can add { allow: public, queries: [get, list], mutations: [create,update]} for authorization rules. Unfortunately this is deprecated. I have no idea if there will be sth similar in the futur.</p>&#xA;<p>See: <a href=""https://docs.amplify.aws/cli/graphql-transformer/auth/#definition"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql-transformer/auth/#definition</a></p>&#xA;<pre><code>type Customer @model @auth(rules: [&#xA;    { allow: public, queries: [get], mutations: [create,update]},&#xA;    { allow: groups, groups: [&quot;admin&quot;] },&#xA;    { allow: groups, groups: [&quot;partner&quot;], queries: [get],  mutations: []}])  &#xA;{&#xA;id: ID!&#xA;firstName: String&#xA;lastName: String&#xA;email: String&#xA;phone: String&#xA;request: [Request] @connection(keyName: &quot;byCustomer&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;</code></pre>&#xA;",8002683,,,,2021-10-12 06:19:17,"",,0,0,0,2021-10-12 06:19:17
69555237,1,,,2,595,"<p>I use Hasura and I have a social-network like situation.&#xA;In which I have a &quot;User&quot; object and a &quot;Feed&quot; object.&#xA;Every user has a feed.&#xA;I have a relationship from <code>user.id</code> to <code>feed.id</code>.</p>&#xA;<p>The relevant mutation is <code>UpsertUserDetails</code> as follows:</p>&#xA;<pre><code>  mutation UserDetailsUpsert(&#xA;    $email: String!&#xA;    $picture: String&#xA;  ) {&#xA;    insert_users_one(&#xA;      object: {&#xA;        email: $email&#xA;        feed: { data: {} }&#xA;        picture: $picture&#xA;      }&#xA;      on_conflict: { constraint: users_tid_email_key, update_columns: [picture] }&#xA;    ) {&#xA;      id&#xA;    }&#xA;  }&#xA;&#xA;</code></pre>&#xA;<p>So when I create a new user it also creates a feed for it.</p>&#xA;<p>But when I only update user details I don't want it to create a new feed.&#xA;I would like to stop the upsert from going through to relationships instead of the above default behavior.</p>&#xA;<p>and according to this manual I don't see if its even possible: <a href=""https://hasura.io/docs/latest/graphql/core/databases/postgres/mutations/upsert.html#upsert-in-nested-mutations"" rel=""nofollow noreferrer"">https://hasura.io/docs/latest/graphql/core/databases/postgres/mutations/upsert.html#upsert-in-nested-mutations</a></p>&#xA;<blockquote>&#xA;<p>To allow upserting in nested cases, set update_columns: []. By doing this, in case of a conflict, the conflicted column/s will be updated with the new value (which is the same values as they had before and hence will effectively leave them unchanged) and will allow the upsert to go through.</p>&#xA;</blockquote>&#xA;<p>Thanks!</p>&#xA;",3416474,,,,2021-10-13 21:09:19,Nested Hasura GraphQL Upsert mutation is there a way to stop nesting on conflict?,<postgresql><graphql><hasura><graphql-mutation>,1,3,0,2021-10-13 12:04:45
69588157,1,,,0,576,"<p>I have a graphQL schema like this:</p>&#xA;<pre><code>type Post {&#xA;    id: String!&#xA;    title: String!&#xA;    content: String!&#xA;    user: User!&#xA;}&#xA;&#xA;type Query {&#xA;    allPosts: [Post!]&#xA;    singlePost(id: String!): Post!&#xA;}&#xA;&#xA;type User {&#xA;    name: String!&#xA;    posts: [Post!]&#xA;}&#xA;</code></pre>&#xA;<p>The dynamo DataSource handles queries. In the query below, the user will be handled with a different resolver because it depends on different GSI.</p>&#xA;<pre><code>query MyQuery {&#xA;  allPosts {&#xA;    content&#xA;    title&#xA;    user{&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><code>allPosts</code> resolver looks like this:</p>&#xA;<pre><code>{&#xA;    &quot;version&quot; : &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot; : &quot;Query&quot;,&#xA;    &quot;query&quot; : {&#xA;        &quot;expression&quot; : &quot;#t = :sk&quot;,&#xA;        &quot;expressionNames&quot; : {&#xA;          &quot;#t&quot;: &quot;type&quot;&#xA;        },&#xA;        &quot;expressionValues&quot; : {&#xA;            &quot;:sk&quot;: $util.dynamodb.toDynamoDBJson(&quot;post&quot;)&#xA;        }&#xA;    },&#xA;    &quot;index&quot; : &quot;GSI&quot;,&#xA;    &quot;select&quot; : &quot;ALL_ATTRIBUTES&quot;&#xA;}&#xA;</code></pre>&#xA;<p>The resolver for <code>user</code> in the <code>Post</code> type is:</p>&#xA;<pre><code>{&#xA;    &quot;version&quot; : &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot; : &quot;Query&quot;,&#xA;    &quot;query&quot; : {&#xA;        &quot;expression&quot; : &quot;PK = :pk AND SK = :sk&quot;,&#xA;        &#xA;        &quot;expressionValues&quot; : {&#xA;            &quot;:pk&quot;: &quot;NEED TO ACCESS THE Partition KEY FROM ALL_POSTS&quot;,&#xA;            &quot;:sk&quot;: $util.dynamodb.toDynamoDBJson(&quot;profile&quot;)&#xA;        }&#xA;    },&#xA;    &quot;select&quot; : &quot;ALL_ATTRIBUTES&quot;&#xA;}&#xA;</code></pre>&#xA;<p>I need to access the partition key from the post object in each iteration to fetch the user of a specific id, just like the author resolver in this code (<a href=""https://github.com/benawad/graphql-n-plus-one-example/blob/master/src/index.js"" rel=""nofollow noreferrer"">https://github.com/benawad/graphql-n-plus-one-example/blob/master/src/index.js</a>):</p>&#xA;<pre><code>const resolvers = {&#xA;  Book: {&#xA;    author: async parent =&gt; {&#xA;      const author = await knex(&quot;users&quot;)&#xA;        .select()&#xA;        .where(&quot;id&quot;, parent.authorId)&#xA;        .first();&#xA;&#xA;      return author;&#xA;    }&#xA;  },&#xA;  Query: {&#xA;    books: async () =&gt; {&#xA;      const books = await knex(&quot;books&quot;)&#xA;        .select()&#xA;        .limit(10);&#xA;      return books;&#xA;    }&#xA;  }&#xA;};&#xA;</code></pre>&#xA;",9795654,,,,2021-10-15 18:23:27,Get parent object in child resolver AWS AppSync,<amazon-web-services><graphql><aws-appsync><resolver><vtl>,1,0,0,2021-10-15 16:53:48
69624020,1,,,1,147,"<p>I am using AWS Amplify as the backend for my react app. My application uses Amplify Auth and API.</p>&#xA;<p>My project has a model called &quot;Projects&quot; that have a one-one relationship with another model called &quot;Companies&quot;. Every Cognito User has a custom user attribute of 'CompanyID'.</p>&#xA;<p>When the user is logged in, I want to make an API.graphql request to list all projects related to the company that the Cognito User is assigned to. I am having a hard time figuring out how to filter the query so that it only returns the projects that are related to the specified company.</p>&#xA;<p>Is there a way to filter a ListProjects query by passing in the id of the related companies I am wanting to filter by?</p>&#xA;",17187158,,,,2021-10-25 01:05:47,AWS Amplify API/React: Filter a LIST query for Items related to a specific other item,<reactjs><graphql><aws-amplify>,1,0,0,2021-10-19 00:59:34
69625581,2,,68630959,0,,<p>the graphql api doesn't allow doing it friend.</p>&#xA;,2124248,,,,2021-10-19 05:33:43,"",,0,0,0,2021-10-19 05:33:43
69664507,1,,,0,222,"<p>I struggle here with understanding about how to secure my Amplify / Appsync application  without using AWS Incognito Pools.</p>&#xA;<p>I am using an API key for now for connecting from my public apps and from a secured Backoffice. But I still would like to protect my app and users from calling certain queries, mutations etc.</p>&#xA;<p>I know that <a href=""https://docs.amplify.aws/cli/graphql-transformer/auth/#auth"" rel=""nofollow noreferrer"">Amplify</a> allow to use an @auth mode but how can I use it ?&#xA;How would it work knowing that I would make direct graphql calls from my public app and nodejs graphql calls from my lambdas from my backoffice.</p>&#xA;<p>Any guidance here would be super welcome, thanks in advance for your help !</p>&#xA;",10004939,,,,2021-12-10 16:36:49,Appsync authentification with public / private access without AWS Incognito,<amazon-web-services><aws-lambda><graphql><aws-amplify><aws-appsync>,1,0,0,2021-10-21 15:12:22
69665930,2,,53995484,1,,"<p>This problem comes from AWS requiring certain standard values in the dynamoDB table, such as createdAt and updatedAd, just add these fields manually with a timestamp in dynamo db for further testing. A mutation always needs to be requested via id, this somehow was not clear to me when my schema was created by amplify codegen...</p>&#xA;",16932102,,,,2021-10-21 16:52:46,"",,0,0,0,2021-10-21 16:52:46
69680893,1,69681058,,1,720,"<p>Hello I am new user to GraphQL and am trying to create the schema I will use.&#xA;I saw <a href=""https://docs.amplify.aws/cli/graphql-transformer/connection/#many-to-many-connections"" rel=""nofollow noreferrer"">here</a> that the below structure is recommended when you have a many to many relationship.</p>&#xA;<pre><code>type UserCommunity&#xA;  @auth&#xA;  @model(queries: null)&#xA;  @key(name: &quot;byUser&quot;, fields: [&quot;userID&quot;, &quot;communityID&quot;]&#xA;  @key(name: &quot;byCommunity&quot;, fields: [&quot;communityID&quot;,&quot;userID&quot;]{&#xA;  id: ID!&#xA;  userID: ID!&#xA;  communityID: ID!&#xA;  user: User! @connection(fields: [&quot;userID&quot;])&#xA;  community: Community! @connection(fields: [&quot;communityID&quot;])&#xA;  }&#xA;</code></pre>&#xA;<p>However, when I deploy using AWS Amplify I get the following error message:</p>&#xA;<pre><code>GraphQLError: Syntax Error: Expected Name, found @&#xA;</code></pre>&#xA;<p>It is also telling me that it is failing on this line:</p>&#xA;<pre><code>@key(name: &quot;byCommunity&quot;, fields: [&quot;communityID&quot;,&quot;userID&quot;]{&#xA;</code></pre>&#xA;<p>I've tried to find any and all documentation and looked at other stack overflow questions but haven't solved the syntax problem.</p>&#xA;<p>Any help would be super appreciated!</p>&#xA;",5884352,,5884352,2021-10-22 17:31:02,2021-10-22 17:42:47,"GraphQLError: Syntax Error: Expected Name, found @",<graphql><schema><aws-amplify>,2,0,0,2021-10-22 17:22:36
69681058,2,,69680893,4,,"<p>You are missing closing <code>)</code>s on some lines:</p>&#xA;<pre><code>-@key(name: &quot;byUser&quot;, fields: [&quot;userID&quot;, &quot;communityID&quot;]&#xA;+@key(name: &quot;byUser&quot;, fields: [&quot;userID&quot;, &quot;communityID&quot;])&#xA;</code></pre>&#xA;<p>and</p>&#xA;<pre><code>-@key(name: &quot;byCommunity&quot;, fields: [&quot;communityID&quot;,&quot;userID&quot;]{&#xA;+@key(name: &quot;byCommunity&quot;, fields: [&quot;communityID&quot;,&quot;userID&quot;]){&#xA;</code></pre>&#xA;",785065,,,,2021-10-22 17:39:52,"",,0,2,0,2021-10-22 17:39:52
69681093,2,,69680893,2,,"<p>You're actually missing closing parentheses on both of the @key lines. Update to this, and you should be good to go.</p>&#xA;<pre><code>type UserCommunity&#xA;  @auth&#xA;  @model(queries: null)&#xA;  @key(name: &quot;byUser&quot;, fields: [&quot;userID&quot;, &quot;communityID&quot;])&#xA;  @key(name: &quot;byCommunity&quot;, fields: [&quot;communityID&quot;,&quot;userID&quot;]){&#xA;  id: ID!&#xA;  userID: ID!&#xA;  communityID: ID!&#xA;  user: User! @connection(fields: [&quot;userID&quot;])&#xA;  community: Community! @connection(fields: [&quot;communityID&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>Side note: I recommend getting a GraphQL highlighter for your text editor if you don't have one. The keywords will change colors when you have a syntax issue. That's just another thing you can look out for.</p>&#xA;",652728,,,,2021-10-22 17:42:47,"",,0,4,0,2021-10-22 17:42:47
69689590,1,69691106,,0,70,"<p>I was wondering if there is any way to do this in hasura without resorting to creating another service.</p>&#xA;<p>Let me explain, in an api a user sends his token, this is decoded in the backend and and so we know who the user is, this is useful for example to search and return records in the database that only belong to this user.</p>&#xA;<p>Is there any way to do that with Hasura? the only return the records that belong to a certain user using its token?.</p>&#xA;",13435530,,,,2021-10-23 18:48:54,Is there any way that hasura decodes the token and can use its content in a query?,<graphql><microservices><hasura>,1,1,0,2021-10-23 15:35:40
69691106,2,,69689590,3,,"<p>Token data is available as session data so you can use hasura column presets to insert the user id and add permission to only fetch rows that have user id equal to user id from session <a href=""https://hasura.io/docs/latest/graphql/core/databases/postgres/schema/default-values/column-presets.html#column-presets"" rel=""nofollow noreferrer"">https://hasura.io/docs/latest/graphql/core/databases/postgres/schema/default-values/column-presets.html#column-presets</a></p>&#xA;",3478219,,,,2021-10-23 18:48:54,"",,0,0,0,2021-10-23 18:48:54
69701919,2,,69624020,0,,"<p>I figured out what I needed to do. The problem was that I made the parent &quot;Projects&quot; when it should have been &quot;Company&quot;. By making the parent &quot;Company&quot;, I get a singular companyID field inside each project file. This allows me to quickly filter by projects matching the assigned ID.</p>&#xA;",17187158,,,,2021-10-25 01:05:47,"",,0,0,0,2021-10-25 01:05:47
69707140,1,,,1,104,"<p>I have a <code>User</code>, <code>Recipe</code> and the <code>Ingredients</code> table here. The process of my app is when the user viewed the Recipe and then clicked the &quot;finish cooking&quot; button, it will update the <code>totalCooked</code> field.</p>&#xA;<p>What I want to achieve here is to allow the read but deny the users(except the admin) to update all the fields except the <code>totalCooked</code> field.</p>&#xA;<pre><code>type Recipe @model @auth(rules: [&#xA;        { allow: private, operations: [read] }&#xA;        { allow: groups, groups: [&quot;Admin&quot;]}&#xA;    ]){&#xA;    id: ID!&#xA;    name: String&#xA;    description: String&#xA;    totalCooked: Int @auth(rules: [{ allow: private, operations: [update] }]) //Allow the private users to update this field only&#xA;    ingredients: [RecipeIngredients] @connection(name: &quot;RecipeIngredient&quot;)&#xA;}&#xA;&#xA;type User @model @auth(rules: [&#xA;        { allow: owner, operations: [create, update, read] }&#xA;        { allow: groups, groups: [&quot;Admin&quot;] }&#xA;    ]){&#xA;    id: ID!&#xA;    coins: Int&#xA;}&#xA;&#xA;&#xA;type RecipeIngredients @model (queries: null) @auth(rules: [&#xA;        { allow: private, operations: [read] }&#xA;        { allow: groups, groups: [&quot;Admin&quot;] }&#xA;    ]){&#xA;    id: ID!&#xA;    size: String&#xA;    description: String&#xA;    recipe: Recipe @connection(name: &quot;RecipeIngredient&quot;)&#xA;    ingredients: Ingredients @connection(name: &quot;IngredientsRecipe&quot;)&#xA;}&#xA;&#xA;&#xA;type Ingredients @model @auth(rules: [&#xA;        { allow: private, operations: [read] }&#xA;        { allow: groups, groups: [&quot;Admin&quot;] }&#xA;    ]){&#xA;    id: ID!&#xA;    name: String&#xA;    imageURL: String&#xA;    recipe: [RecipeIngredients] @connection(name: &quot;IngredientsRecipe&quot;)&#xA;}&#xA;</code></pre>&#xA;",10468712,,10468712,2021-10-25 12:39:12,2021-10-27 11:54:02,Allow specific field to be updatable in graphql model using amplify auth,<api><graphql><amazon-cognito><aws-amplify>,0,1,0,2021-10-25 11:20:20
69716998,1,70609777,,0,626,"<p>I am trying to do a quick poc between Appsync (graphql) and ElasticSearch(V7.10) but i am getting the below communication error when Appsync(resolver) is trying to invoke ES . Its a simple graphql query.</p>&#xA;<p>i tried following this tutorial for this poc : <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-elasticsearch-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-elasticsearch-resolvers.html</a></p>&#xA;<p>Cloudwatch Logs is enabled for both appsync and elasticsearch, but not much on this error.&#xA;Any help on this is much appreciated.</p>&#xA;<p><strong>Bellow are the details.</strong></p>&#xA;<p>ES : Version 7.10 (also tried with OpenSearch 1.0, but same error), its within the vpc, appsync is created withing the same region as the vpc.</p>&#xA;<p><strong>Error :</strong></p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;      &quot;allPosts&quot;: null&#xA;    },&#xA;    &quot;errors&quot;: [&#xA;      {&#xA;        &quot;path&quot;: [&#xA;          &quot;allPosts&quot;&#xA;        ],&#xA;        &quot;data&quot;: null,&#xA;        &quot;errorType&quot;: &quot;OpenSearch:RuntimeException&quot;,&#xA;        &quot;errorInfo&quot;: null,&#xA;        &quot;locations&quot;: [&#xA;          {&#xA;            &quot;line&quot;: 2,&#xA;            &quot;column&quot;: 3,&#xA;            &quot;sourceName&quot;: null&#xA;          }&#xA;        ],&#xA;        &quot;message&quot;: &quot;Communication error while executing a request to OpenSearch.&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;</code></pre>&#xA;<p><strong>Request Mapping Template (Resolver)</strong></p>&#xA;<pre><code>{&#xA;&quot;version&quot;:&quot;2017-02-28&quot;,&#xA;&quot;operation&quot;:&quot;GET&quot;,&#xA;&quot;path&quot;:&quot;/item_catlog_001/_doc/_search&quot;,&#xA;&quot;params&quot;:{&#xA;    &quot;body&quot;: {&#xA;        &quot;from&quot;: 0,&#xA;        &quot;size&quot;: 50,&#xA;        &quot;query&quot;: {&#xA;            &quot;match_all&quot;: {}&#xA;        }&#xA;    }&#xA;}&#xA;}&#xA;</code></pre>&#xA;<p><strong>IAM's role on Appsync end</strong></p>&#xA;<pre><code>{&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Effect&quot;: &quot;Allow&quot;,&#xA;            &quot;Action&quot;: [&#xA;                &quot;es:ESHttpDelete&quot;,&#xA;                &quot;es:ESHttpHead&quot;,&#xA;                &quot;es:ESHttpGet&quot;,&#xA;                &quot;es:ESHttpPost&quot;,&#xA;                &quot;es:ESHttpPut&quot;&#xA;            ],&#xA;            &quot;Resource&quot;: [&#xA;                &quot;arn:aws:es:ap-southeast-2:*:domain/helloworld/*&quot;&#xA;            ]&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p><strong>Trust relationships</strong></p>&#xA;<pre><code>{&#xA;  &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;  &quot;Statement&quot;: [&#xA;    {&#xA;      &quot;Effect&quot;: &quot;Allow&quot;,&#xA;      &quot;Principal&quot;: {&#xA;        &quot;Service&quot;: &quot;appsync.amazonaws.com&quot;&#xA;      },&#xA;      &quot;Action&quot;: &quot;sts:AssumeRole&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p><strong>Access policy at ES/OS end</strong></p>&#xA;<pre><code>{&#xA;  &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;  &quot;Statement&quot;: [&#xA;    {&#xA;      &quot;Effect&quot;: &quot;Allow&quot;,&#xA;      &quot;Principal&quot;: {&#xA;        &quot;AWS&quot;: &quot;*&quot;&#xA;      },&#xA;      &quot;Action&quot;: &quot;es:*&quot;,&#xA;      &quot;Resource&quot;: &quot;arn:aws:es:ap-southeast-2:*:domain/helloworld/*&quot;&#xA;    },&#xA;    {&#xA;      &quot;Effect&quot;: &quot;Allow&quot;,&#xA;      &quot;Principal&quot;: {&#xA;        &quot;AWS&quot;: &quot;arn:aws:iam::*:role/service-role/appsync-ds-es-57leg5-vpc-helloworld-o53f5&quot;&#xA;      },&#xA;      &quot;Action&quot;: [&#xA;        &quot;es:ESHttpDelete&quot;,&#xA;        &quot;es:ESHttpHead&quot;,&#xA;        &quot;es:ESHttpGet&quot;,&#xA;        &quot;es:ESHttpPost&quot;,&#xA;        &quot;es:ESHttpPut&quot;&#xA;      ],&#xA;      &quot;Resource&quot;: &quot;arn:aws:es:ap-southeast-2:*:domain/helloworld/*&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>thanks<br />&#xA;Vasu</p>&#xA;",9142486,,,,2022-01-06 15:49:55,Appsync + Elasticsearch : Communication error while executing a request to OpenSearch,<amazon-web-services><graphql><aws-appsync><aws-elasticsearch>,1,2,0,2021-10-26 03:02:01
69727164,2,,56319137,2,,"<p>Coming from Flutter here.&#xA;I couldn't find any flutter related solution to this so since my search always brought me here, lemme just add it here.</p>&#xA;<p>The exact error was:</p>&#xA;<blockquote>&#xA;<p>Failure performing sync query to AppSync:&#xA;[GraphQLResponse.Error{message='Cannot return null for non-nullable&#xA;type: 'AWSTimestamp' within parent</p>&#xA;</blockquote>&#xA;<p>So, in my schema (on the AppSync console) I had this:</p>&#xA;<pre><code>type TypeName {&#xA;   id: ID!&#xA;   ...&#xA;   _version: Int!&#xA;   _deleted: Boolean&#xA;   _lastChangedAt: AWSTimestamp!&#xA;   createdAt: AWSDateTime!&#xA;   updatedAt: AWSDateTime!&#xA; }&#xA;</code></pre>&#xA;<p>I got the error from the field <code>_lastChangedAt</code> as <code>AWSTimestamp</code> couldn't be null.</p>&#xA;<p>All I had to do was <code>remove the null-check (!) from the field</code> and it was resolved.</p>&#xA;<p>Now, I don't know the implications of this in the long run but I'll update this answer if necessary.</p>&#xA;<p><strong>EDIT</strong>: The implication of this as I have found out is anything I do, <code>amplify.push</code> that change is reversed. Just go back to your appsync console and change it again while you test. So this isn't a sustainable solution but chatter I've picked up online suggests improvements are coming to amplify flutter very soon.</p>&#xA;",2058547,,2058547,2021-11-09 13:21:25,2021-11-09 13:21:25,"",,0,0,0,2021-10-26 16:57:11
69736683,1,,,1,94,"<p>Here is my stack:</p>&#xA;<ul>&#xA;<li>postgres 12</li>&#xA;<li>GraphQL with api platform</li>&#xA;</ul>&#xA;<p>I have an entity with a coordinates attribute based on point Type from the package longitude-one/doctrine-spatial, and I would like to access to this attribute through a graphQL request, but graphQL ignore this attribute as it doesn't recognize the type...&#xA;How can I make it return my attribute, I tried through a customType but I don't want to loose postgres benefits with the geometryViewer ...&#xA;Does anyone know how to handle this ? Or did it with a different type ?</p>&#xA;",14164349,,,,2022-10-03 07:04:21,Read spatial point type with an api-platform graphql query,<postgresql><graphql><spatial><api-platform.com>,1,0,0,2021-10-27 10:07:15
69745853,1,,,1,2397,"<p>I have a .Net Core GraphQL API deployed outside of AWS cloud. I am trying integrate AWS AppSync with my GraphQL API.</p>&#xA;<p>Schema:</p>&#xA;<pre><code>  type TestData {&#xA;           StduentId: String&#xA;           StduentName: String&#xA;       }&#xA;&#xA;  type Query {&#xA;      TestFunction(&#xA;             departmentId: String,&#xA;             departmentCity: String,&#xA;           ): [TestData]&#xA;    }&#xA;&#xA;  schema {&#xA;           query: Query&#xA;         }&#xA;</code></pre>&#xA;<p>I am running the below query in AWS AppSync Console.</p>&#xA;<pre><code>query&#xA;{&#xA;   TestFunction(&#xA;                 departmentId:&quot;124&quot;,&#xA;                 departmentCity: &quot;Boston&quot;&#xA;               ) &#xA;   {&#xA;       StduentId&#xA;       StudentName&#xA;   }&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>Request Mapping Template:</p>&#xA;<pre><code>    {&#xA;        &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;        &quot;method&quot;: &quot;GET&quot;,&#xA;        &quot;resourcePath&quot;: &quot;/&quot;,&#xA;        &quot;params&quot;:{&#xA;        &quot;query&quot;:$util.toJson($ctx.args),&#xA;         &quot;headers&quot;: {&#xA;                       &quot;Authorization&quot;: &quot;$ctx.request.headers.Authorization&quot;&#xA;                    }&#xA;            }&#xA;       }&#xA;</code></pre>&#xA;<p>Response mapping template.</p>&#xA;<pre><code>#if($ctx.error)&#xA;   $util.error($ctx.error.message, $ctx.error.type)&#xA;#end&#xA;&#xA;#if($ctx.result.statusCode == 200)&#xA;   $util.toJson($context.result),&#xA;#else&#xA;   $utils.appendError($ctx.result.body, &quot;$ctx.result.statusCode&quot;)&#xA;#end&#xA;</code></pre>&#xA;<p>AppSync: Datasource Resource is :</p>&#xA;<pre><code>https://myserver.com/graphql/&#xA;</code></pre>&#xA;<p>I am expecting the nested JSON output from the above query execution.</p>&#xA;<p>Query Response:&#xA;&quot;errorType&quot;: &quot;MappingTemplate&quot;,&#xA;&quot;message&quot;: &quot;Template transformation yielded an empty response.&quot;</p>&#xA;<p>CloudWatch Error:<br />&#xA;&quot;message&quot;: &quot;A custom error was thrown from a mapping template.&quot;,</p>&#xA;",15816368,,,,2021-11-10 19:51:28,AWS AppSync Error: Template transformation yielded an empty response,<graphql><aws-appsync><webapi>,1,0,0,2021-10-27 21:49:29
69746663,1,,,-2,261,"<p>If I wanted the user to take a picture on my ReactNative iOS app and send that to the server, how would it be defined in the graphQL schema?</p>&#xA;",15232316,,,,2021-10-28 08:30:01,How do I define an image being sent from my app to the backend in a graphQL schema?,<react-native><graphql>,1,1,0,2021-10-27 23:40:28
69748019,1,69767528,,0,287,"<p>I have the following entities:</p>&#xA;<pre><code>company&#xA;role&#xA;user&#xA;</code></pre>&#xA;<p>A company has many roles, and a role has many users.  I'm trying to build a GraphQL query which allows someone to query a company by the role Id.  My initial thought is to build a <code>companyByRoleId</code> query, but wanted to double check that this method is best practice.  In the example schema below, is <code>companyByRoleId</code> the best practice, or is there a better way to allow consumers to query the company that the role belongs to?</p>&#xA;<pre><code>type Company {&#xA;  id: ID!&#xA;  name: String&#xA;  roles: Role[]&#xA;}&#xA;&#xA;type Role {&#xA;  id: ID!&#xA;  name: String&#xA;  users: User[]&#xA;}&#xA;&#xA;type User {&#xA;  id: ID!&#xA;  name: String&#xA;}&#xA;&#xA;query($roleId: ID!){&#xA;  companyByRoleId(roleId: $roleId){&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;&#xA;query($companyId: ID!){&#xA;  companyById(companyId: $companyId){&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;&#xA;query($userId: ID!){&#xA;  companyByUserId(userId: $userId){&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",17266793,,17266793,2021-10-28 03:49:40,2021-10-29 10:41:58,GraphQL standard for querying by various IDs,<graphql>,1,2,0,2021-10-28 03:41:00
69748713,2,,69748611,0,,"<p>Use <code>Object.keys</code> to get all the keys of the object. Usage example</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""true"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>var json = document.getElementById(""json"").value;&#xA;var jsonObject = JSON.parse(json);&#xA;&#xA;jsonObject.holidayCalendar.forEach(function(x) {&#xA;  Object.keys(x).forEach(function(key) {&#xA;    console.log(key, x[key]);&#xA;  });&#xA;})</code></pre>&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;textarea id=""json""&gt;&#xA;{&#xA;  ""holidayCalendar"": [&#xA;    {&#xA;      ""IN01"": [&#xA;        {&#xA;          ""2021"": [&#xA;            {&#xA;              ""month"": ""1"",&#xA;              ""value"": ""0101111110111011011111101011110""&#xA;            },&#xA;            {&#xA;              ""month"": ""2"",&#xA;              ""value"": ""1111110111111011111101111110""&#xA;            },&#xA;            {&#xA;              ""month"": ""3"",&#xA;              ""value"": ""1111110111111011111101111110011""&#xA;            }&#xA;          ]&#xA;        },&#xA;        {&#xA;          ""2022"": [&#xA;            {&#xA;              ""month"": ""4"",&#xA;              ""value"": ""0011111101111110111111011011101""&#xA;            },&#xA;            {&#xA;              ""month"": ""5"",&#xA;              ""value"": ""1111101111110111111011111101""&#xA;            },&#xA;            {&#xA;              ""month"": ""6"",&#xA;              ""value"": ""1111101111110111111011111101111""&#xA;            }&#xA;          ]&#xA;        }&#xA;      ]&#xA;    },&#xA;    {&#xA;      ""IN02"": [&#xA;        {&#xA;          ""2021"": [&#xA;            {&#xA;              ""month"": ""1"",&#xA;              ""value"": ""0101111110111011011111101011110""&#xA;            },&#xA;            {&#xA;              ""month"": ""2"",&#xA;              ""value"": ""1111110111111011111101111110""&#xA;            },&#xA;            {&#xA;              ""month"": ""3"",&#xA;              ""value"": ""1111110111111011111101111110011""&#xA;            }&#xA;          ]&#xA;        },&#xA;        {&#xA;          ""2022"": [&#xA;            {&#xA;              ""month"": ""4"",&#xA;              ""value"": ""0011111101111110111111011011101""&#xA;            },&#xA;            {&#xA;              ""month"": ""5"",&#xA;              ""value"": ""1111101111110111111011111101""&#xA;            }&#xA;          ]&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;&lt;/textarea&gt;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",2678802,,,,2021-10-28 05:28:20,"",,0,0,0,2021-10-28 05:28:20
69767528,2,,69748019,0,,"<p>Specific queries along the lines of <code>companyByRoleId</code> and <code>companyByUserId</code> are arguably in the spirit of Graphql. Graphql is meant to be expressive and self-documenting.</p>&#xA;<p>Set against a combined generic alternative, say <code>companyById(roleID: String, userID: String)</code>, your design seems clearer and less error-prone.</p>&#xA;<p>Be that as it may, I believe there is a clearer, more explicit alternative to your current design.  Add a <code>Company</code> field to your <code>Role</code> and <code>User</code> types.  Consumers can access a user's or role's <code>Company</code> using your vanilla user and role queries.  You no longer need either <code>companyByRoleId</code> or <code>companyByUserId</code>.</p>&#xA;<pre><code>type Role {&#xA;  id: ID!&#xA;  name: String&#xA;  users: User[]&#xA;  company: Company&#xA;}&#xA;&#xA;type User {&#xA;  id: ID!&#xA;  name: String&#xA;  company: Company&#xA;}&#xA;&#xA;query($id: ID!){&#xA;  role(id: $id){&#xA;    id&#xA;    company {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;query($id: ID!){&#xA;  user(id: $id){&#xA;    id&#xA;    company {&#xA;      id&#xA;      name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1103511,,,,2021-10-29 10:41:58,"",,0,2,0,2021-10-29 10:41:58
69773467,2,,69756191,2,,"<p>I'd highly recommend that you just make the column a <code>jsonb</code> and then store the array directly. jsonb querying capabilities are significantly improved over json and Hasura doesn't have the greatest support for array columns (of any type).</p>&#xA;<p>When submitting data to an array column with Hasura it expects to receive it as a string using the PG array literal syntax, eg <code>'{1, 2, 3}'</code> for an int[] column.</p>&#xA;",1364771,,,,2021-10-29 18:40:55,"",,0,1,0,2021-10-29 18:40:55
69780771,1,69804081,,0,152,"<p>I need to give separate permissions to separate GraphQL queries. For example, currently I have defined two queries @auth gives permission to Admin group to these two queries. How can I give access to any logged in user(Cognito Pools) to <code>invokeLambda</code> query and only Admin group to <code>invokeGetGroups</code> query ? I can't seem to figure out how it is done.</p>&#xA;<pre><code>type Query {&#xA;  @auth(&#xA;      rules: [&#xA;        { allow: groups, groups: [&quot;Admins&quot;] }])&#xA;  invokeLambda: String @function(name: &quot;pythonLambda-${env}&quot;) &#xA;  invokeGetGroups: String @function(name: &quot;getPatchGroups-${env}&quot;)&#xA;}&#xA;</code></pre>&#xA;",4882428,,,,2021-11-02 00:46:18,How to give separate permissions to GraphQL queries in AWS Amplify,<graphql><amplify>,1,0,0,2021-10-30 17:56:11
69782297,2,,69004669,1,,"<pre><code>const permissions = shield({&#xA;  Query: {&#xA;    users: allow,&#xA;  },&#xA;  Mutation: {&#xA;    login: allow,&#xA;  },&#xA;});    &#xA;</code></pre>&#xA;<p>to</p>&#xA;<pre><code>const permissions = shield({&#xA;  Query: {&#xA;    users: allow,&#xA;  },&#xA;  Mutation: {&#xA;    login: allow,&#xA;  },&#xA;},&#xA;{&#xA;  debug: true&#xA;});&#xA;</code></pre>&#xA;<p>and trace to error messages.</p>&#xA;",13302358,,,,2021-10-30 21:29:56,"",,0,0,0,2021-10-30 21:29:56
69801294,2,,60804372,0,,"<p>You must initialize appsync like the following method.</p>&#xA;<pre><code>const graphqlClient = new appsync.AWSAppSyncClient({&#xA;url: graphqlEndpoint,&#xA;region: process.env.AWS_REGION,&#xA;auth: {&#xA;    type: 'AWS_IAM',&#xA;    credentials: {&#xA;        accessKeyId: process.env.AWS_ACCESS_KEY_ID,&#xA;        secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,&#xA;        sessionToken: process.env.AWS_SESSION_TOKEN&#xA;    }&#xA;},&#xA;disableOffline: true&#xA;</code></pre>&#xA;<p>});</p>&#xA;",4124522,,,,2021-11-01 18:37:00,"",,0,0,0,2021-11-01 18:37:00
69804081,2,,69780771,1,,"<p>You can use the <code>@auth</code> rule within each function as so:</p>&#xA;<pre><code>type Query {&#xA;  invokeLambda: String&#xA;    @function(name: &quot;pythonLambda-${env}&quot;)&#xA;    @auth(rules: [{allow: private, provider: userPools}])&#xA;  invokeGetGroups: String&#xA;    @function(name: &quot;getPatchGroups-${env}&quot;)&#xA;    @auth(rules: [{allow: groups, groups: [&quot;Admins&quot;]}])&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>I haven't tried it with different auth rules, but I did try with the same auth rules on each function when I was following <a href=""https://aws.amazon.com/blogs/database/build-a-graph-application-with-amazon-neptune-and-aws-amplify/"" rel=""nofollow noreferrer"">an AWS tutorial</a>.</p>&#xA;",8787167,,3025856,2021-11-02 00:46:18,2021-11-02 00:46:18,"",,0,1,0,2021-11-02 00:13:53
69805372,2,,69805297,-1,,"<p>There is a simple rule in React-&gt; to update anything on-screen re-render is needed. so, check if that is an issue.&#xA;You can share your React code also to get to know more about what is issue.</p>&#xA;",17291858,,,,2021-11-02 04:21:03,"",,0,0,0,2021-11-02 04:21:03
69824119,1,,,1,50,"<p>Performed a mutation when offline is not throwing the error immediately. AppSync does multiple requests automatically (I guess this is an offline capability) and then after it throws <code>Error: Network error: Failed to fetch</code>.</p>&#xA;<p>I have added <code> disableOffline: true</code> when creating AppSync client in my react app.</p>&#xA;<p>How can I disable this? I want to throw error immediately after the first request fails like traditional REST API calls.(Disable making requests automatically for some time).</p>&#xA;<p>Found a github issue for ios here : <a href=""https://github.com/awslabs/aws-mobile-appsync-sdk-ios/issues/37"" rel=""nofollow noreferrer"">https://github.com/awslabs/aws-mobile-appsync-sdk-ios/issues/37</a>.&#xA;But didn't resolve my issue.</p>&#xA;",13510870,,13510870,2021-11-03 11:36:04,2021-11-03 11:36:04,How disable making auto network requests for mutations when offline in AWS AppSync Client React App?,<reactjs><graphql><aws-appsync><appsync-apollo-client>,0,1,0,2021-11-03 11:33:47
69828016,2,,69819029,1,,"<p>Yes, lists are valid inputs in GraphQl fields.</p>&#xA;<p>The &quot;null&quot; response indicates that (a) Appsync passed your query to the resolver, (b) your resolver returned a result without error and (c) Appsync accepted the result.  If any of these were not true, Appsync would have given you an error message.  In other words, I believe the problem to be your resolver returning a null result, not the schema.</p>&#xA;<p>By the way, in the case of a list field like <code>contains: [ID]</code>, Appsync will accept a list or a scalar value (like your <code>{contains: &quot;VALID-USER-ID-HERE&quot;}</code> above) as valid input.  If you pass a scalar value to a list field, Appsync will helpfully pass it as a list/array value <code>[&quot;VALID-USER-ID-HERE&quot;]</code> in the lambda resolver's handler function arguments.</p>&#xA;",1103511,,,,2021-11-03 15:59:10,"",,0,3,0,2021-11-03 15:59:10
69833658,2,,69833062,1,,<p>Your flutter code is working fine but in lambda from the aws is returning blank string &quot;&quot; to not to print anything</p>&#xA;,15225566,,,,2021-11-04 01:47:51,"",,0,1,0,2021-11-04 01:47:51
69854137,1,69868763,,3,385,"<p>As it can be seen in the following screenshot, the current project database (postgresql)&#xA;named <em>default</em> has these 4 schema - public, appcompany1, appcompany2 and appcompany3.</p>&#xA;<p><a href=""https://i.stack.imgur.com/kpymo.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/kpymo.png"" alt=""Hasura Console"" /></a></p>&#xA;<p>They share some common tables. Right now, when I want to fetch data for customers, I write a query like this:</p>&#xA;<pre><code>query getCustomerList {&#xA;    customer {&#xA;        customer_id&#xA;        ...&#xA;        ...&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>And it fetches the required data from public schema.</p>&#xA;<p>But according to the requirements, depending on user interactions in front-end, that query will be executed for appcompanyN (N=1,2,3,..., any positive integer). How do I achieve this goal?</p>&#xA;<p>NOTE: Whenever the user creates a new company, a new schema is created for that company. So the total number of schema is not limited to 4.</p>&#xA;",8192914,,,,2021-11-06 23:42:14,How to execute graphql query for a specific schema in hasura?,<postgresql><graphql><hasura>,1,0,0,2021-11-05 13:36:19
69860880,2,,55213474,0,,<p>I was having the same issue and struggled a lot to find the cause of the issue. Then I check and found that my API key was expired so I recreated my API key and the error was resolved.</p>&#xA;,7981077,,,,2021-11-06 01:51:04,"",,0,0,0,2021-11-06 01:51:04
69861641,2,,69855558,0,,"<p>Was the old queries in AWS dynamoDB that were blocking it</p>&#xA;<p><a href=""https://javascript.tutorialink.com/aws-cdk-nextjs-graphql-mutation-cannot-return-null-for-non-nullable-type-after-adding-in-new-schema-field/"" rel=""nofollow noreferrer"">https://javascript.tutorialink.com/aws-cdk-nextjs-graphql-mutation-cannot-return-null-for-non-nullable-type-after-adding-in-new-schema-field/</a></p>&#xA;",16581373,,,,2021-11-06 05:19:12,"",,0,0,0,2021-11-06 05:19:12
69862818,2,,57294281,2,,"<p>In <strong>Users Federated Service</strong></p>&#xA;<pre><code>type Users @key(fields: &quot;id&quot;) {&#xA;  id: ID!&#xA;  accountIds: [String]&#xA;}&#xA;</code></pre>&#xA;<p>In <strong>Accounts Federated Service</strong> extend the Users Type</p>&#xA;<pre><code>extend type Users @key(fields: &quot;id&quot;) {&#xA;    id: ID! @external&#xA;    accounts: [Accounts]&#xA;}&#xA;</code></pre>&#xA;<p><strong>Accounts Type</strong> in Accounts Federated Service might look something like this;</p>&#xA;<pre><code>type Accounts @key(fields: &quot;id&quot;) {&#xA;      id: ID!&#xA;      accountHolderId: String!&#xA;      accountType: String!&#xA;      amount: Float!&#xA;    }&#xA;</code></pre>&#xA;<p>After that inside the <strong>Resolver</strong> of <strong>Accounts Federated Service</strong>, write something like this to resolve the <strong>accounts field</strong> in the extended Users Type</p>&#xA;<pre><code>const resolver = {&#xA;  Users: {&#xA;    async accounts(users) {&#xA;&#xA;     // get account ids array of users using users.accountId&#xA;     // you can make a DB call and get Accounts Service Data and filter ids &#xA;     // of those retrieved data with users.accountId data&#xA;     // finally return filtered data&#xA;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>&quot;async accounts&quot; method have a signature like this in the resolver;<br>&#xA;<em><strong>async accounts(parent data, values passed, context, info) {  }</strong></em><br>&#xA;I have used <strong>users</strong> parameter as <strong>parent data</strong> other parameters are optional<br><br>&#xA;Apart from that, you can use the <strong>Resolve Reference</strong> ( __resolveReference(ref) ) Method to attach data from one service to another service.</p>&#xA;",11766440,,11766440,2021-11-06 09:35:32,2021-11-06 09:35:32,"",,0,0,0,2021-11-06 09:30:12
69868763,2,,69854137,2,,"<p>I suspect that you see a problem where it does not exists actually.</p>&#xA;<p>Everything is much simpler than maybe it seems.</p>&#xA;<h2>A. Where all those tables?</h2>&#xA;<p>There are a lot of schemas with identical (or almost identical) objects inside them.</p>&#xA;<p>All tables are registered in hasura.</p>&#xA;<p>Hasura can't register different tables with the same name, so by default names  will be [schema_name]_[table_name] (except for <code>public</code>)</p>&#xA;<p>So table <code>customer</code> will be registered as:</p>&#xA;<ul>&#xA;<li><code>customer</code> (from <code>public</code>)</li>&#xA;<li><code>appcompany1_customer</code></li>&#xA;<li><code>appcompany2_customer</code></li>&#xA;<li><code>appcompany3_customer</code></li>&#xA;</ul>&#xA;<p>It's possible to customize entity name in GraphQL-schema with &quot;Custom GraphQL Root Fields&quot;.</p>&#xA;<h2>B. The problem</h2>&#xA;<blockquote>&#xA;<p>But according to the requirements, depending on user interactions in front-end, that query will be executed for appcompanyN (N=1,2,3,..., any positive integer). How do I achieve this goal?</p>&#xA;</blockquote>&#xA;<p>There are identical objects that differs only with prefixes with schema name.</p>&#xA;<p>So solutions are trivial</p>&#xA;<h3>1. Dynamic GraphQL query</h3>&#xA;<p>Application stores templates of GraphQL-queries and replaces prefix with real schema name before request.</p>&#xA;<p>E.g.</p>&#xA;<pre><code>query getCustomerList{&#xA;   [schema]_customer{&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>substitute <code>[schema]</code> with <code>appcompany1</code>, <code>appcompany2</code>, <code>appcompanyZ</code> and execute.</p>&#xA;<h3>2. SQL view for all data</h3>&#xA;<p>If tables are 100% identical then it's possible to create an sql view as:</p>&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE VIEW ALL_CUSTOMERS&#xA;AS&#xA;SELECT 'public' as schema,* FROM public.customer&#xA;UNION ALL &#xA;SELECT 'appcompany1' as schema,* FROM appcompany1.customer&#xA;UNION ALL&#xA;SELECT 'appcompany2' as schema,* FROM appcompany2.customer&#xA;UNION ALL&#xA;....&#xA;SELECT `appcompanyZ',* FROM appcompanyZ.customer&#xA;</code></pre>&#xA;<p>This way: no need for dynamic query, no need to register all objects in all schemas.</p>&#xA;<p>You need only to register view with combined data and use one query</p>&#xA;<pre><code>query{&#xA;query getCustomerList($schema: string) {&#xA;   all_customer(where: {schema: {_eq: $schema}}){&#xA;     customer_id&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>About both solutions: it's hard to call them elegant.</p>&#xA;<p>I myself dislike  them both ;)</p>&#xA;<p>So decide yourself which is more suitable in your case.</p>&#xA;",1168212,,,,2021-11-06 23:42:14,"",,0,0,0,2021-11-06 23:42:14
69873354,1,,,0,57,"<p>I am new to MongoDB and Express Js ecosystem. I am trying to setup a GraphQL Server using <code>express-graphql</code>. I have a very simple table called <code>Role</code> and it has two columns <code>role_name</code> and <code>role_description</code>. The table currently has only two roles, One is <code>SUPERADMIN</code> and the other is <code>USER</code>. When I try to make the below query, I get the correct GraphQL Response with the valid data.</p>&#xA;<pre><code>Role.findOne({role_name: &quot;SUPERADMIN&quot;});&#xA;</code></pre>&#xA;<p>Whereas if I try to make the below query, I still get the same GraphQL Response. i.e. returns the <code>SUPERADMIN</code> row.</p>&#xA;<pre><code>// There is no column called dummy_column in the roles table&#xA;Role.findOne({ role_name: &quot;SUPERADMIN&quot;, dummy_column: &quot;asd&quot; });&#xA;</code></pre>&#xA;<p>Shouldn't the ORM / DB throw an error ? Even if it is not throwing an error, for invalid column, how is the same row (<code>SUPERADMIN</code>) returned ? Or Am I missing something ? Attached a gif of my issue.</p>&#xA;<p><a href=""https://i.stack.imgur.com/mxPjB.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mxPjB.gif"" alt=""Screen Recording of the Issue"" /></a></p>&#xA;",11111723,,11111723,2021-11-07 14:45:20,2021-11-07 14:45:20,Express Js Mongoose not throwing Invalid Column error,<node.js><mongodb><express><mongoose><graphql>,1,0,0,2021-11-07 14:31:21
69900718,1,,,0,526,<p>How to use Apollo Client to send an asynchronously fetched JWT access token from AWS Amplify (Cognito) to the Apollo server for backend validation.</p>&#xA;<p>Figured it out if anyone else needs it.</p>&#xA;<p>Why not use Appsync? as of 9/11/21 it doesn't implement enough of the GraphQL specification for my use case.</p>&#xA;,3700119,,3700119,2021-11-09 15:26:19,2021-11-09 15:31:36,Sending Amplify access token to server via Apollo Client,<amazon-cognito><apollo-client><apollo-server><amplify>,1,0,0,2021-11-09 15:22:30
69919422,2,,69745853,-1,,"<p>Are you trying to create an http resolver to a REST api? Im not sure why you have a /graphql in your path?</p>&#xA;<p>for HTTP REST resolver in appsync your datasource should end in &quot;.com&quot;. Something like <a href=""https://myserver.com"" rel=""nofollow noreferrer"">https://myserver.com</a></p>&#xA;<p>then in your request template the resource path completes the specified resource:</p>&#xA;<p>{&#xA;&quot;version&quot;: &quot;2018-05-29&quot;,&#xA;&quot;method&quot;: &quot;GET&quot;,&#xA;&quot;resourcePath&quot;: &quot;/v1/api/some-resource&quot;,&#xA;&quot;params&quot;:{&#xA;&quot;query&quot;:$util.toJson($ctx.args),&#xA;&quot;headers&quot;: {&#xA;&quot;Authorization&quot;: &quot;$ctx.request.headers.Authorization&quot;&#xA;}&#xA;}&#xA;}</p>&#xA;<p>response mapping template would look like:</p>&#xA;<pre><code>#if($ctx.error)&#xA;   $util.error($ctx.error`enter code here`.message, $ctx.error.type)&#xA;#end&#xA;&#xA;#if($ctx.result.statusCode == 200)&#xA;   #set($body = $util.parseJson($ctx.result.body))&#xA;    $util.toJson($body) #make it $body.data depending on the return on your rest api&#xA;#else&#xA;   $utils.appendError($ctx.result.body, &quot;$ctx.result.statusCode&quot;)&#xA;#end&#xA;</code></pre>&#xA;",11704310,,,,2021-11-10 19:51:28,"",,0,2,0,2021-11-10 19:51:28
69921078,1,,,0,346,"<p>I am new to GraphQL and have few questions on usage with ElasticSearch. It may not be right platform to ask as it is more like design question. But any pointers to my questions will surely help me to progress.</p>&#xA;<p>We are using ElasticSearch as DB with data spread across multiple indexes. As we evolve with more scenarios, running into cases like joining data like SQL between different indexes. ElasticSearch supports joins only in same index and with a condition on sharding. Hence we ended up having more APIs and data massage after querying the data which is hitting our overall performance of application.</p>&#xA;<p>From GraphQL, I believe this problem can be addressed to some extent using federated GraphQL server like Apollo.</p>&#xA;<p>Please suggest if my understanding is correct. Are there any best practices to use GraphQL with ElasticSearch and search across multiple indexes.</p>&#xA;<p>Thank you in advance</p>&#xA;",3367269,,3367269,2021-11-15 14:20:41,2022-05-10 06:07:04,GraphQL with ElasticSearch and multiple indexes,<spring-boot><elasticsearch><graphql><apollo-federation>,1,0,0,2021-11-10 22:41:55
69941972,1,69952181,,0,379,"<p>I am using <a href=""https://pub.dev/packages/graphql_flutter"" rel=""nofollow noreferrer"">graphql_flutter</a> to load data from the server and I should update moreId for the update page in my server and get more data to load, and I need to use infinite for it.</p>&#xA;<p>How can I do it?</p>&#xA;<pre class=""lang-dart prettyprint-override""><code>class MoreEpd extends StatefulWidget {&#xA;      final String moreId;&#xA;      const MoreEpd({Key? key, required this.moreId}) : super(key: key);&#xA;    &#xA;      @override&#xA;      _MoreEpdState createState() =&gt; _MoreEpdState();&#xA;    }&#xA;    &#xA;    class _MoreEpdState extends State&lt;MoreEpd&gt; {&#xA;      double pageWidth = 0;&#xA;      double pageHeigh = 0;&#xA;      int pageNum = 0;&#xA;    &#xA;      final String leftArrow = 'assets/icons/left-arrow.svg';&#xA;      String getSearchResult = &quot;&quot;&quot;&#xA;     query homeview(\$moreId: ID!, \$page: Int! ){&#xA;        homeview(HM_ID: \$moreId, page: \$page){&#xA;        HM_ID&#xA;        HM_Type_ID&#xA;        HM_Type_Name&#xA;        HM_NAME&#xA;        Priority&#xA;        Details{&#xA;          HM_Det_ID&#xA;          HM_ID&#xA;          Ep_ID&#xA;          Pod_ID&#xA;          Link&#xA;          Image&#xA;          title&#xA;          Pod_title&#xA;          &#xA;        }&#xA;      }&#xA;    }&#xA;    &quot;&quot;&quot;;&#xA;    &#xA;      @override&#xA;      Widget build(BuildContext context) {&#xA;        pageWidth = MediaQuery.of(context).size.width;&#xA;        pageHeigh = MediaQuery.of(context).size.height;&#xA;        return Container(&#xA;          child: Query(&#xA;            options: QueryOptions(&#xA;              document: gql(getSearchResult),&#xA;              variables: {'moreId': widget.moreId, 'page': pageNum},&#xA;            ),&#xA;            builder: (&#xA;              QueryResult result, {&#xA;              Refetch? refetch,&#xA;              FetchMore? fetchMore,&#xA;            }) {&#xA;              return handleResult(result);&#xA;            },&#xA;          ),&#xA;        );&#xA;      }&#xA;     Widget handleResult(QueryResult result) {&#xA;        var data = result.data!['homeview']['Details'] ?? [];&#xA;    &#xA;        return Container(&#xA;            child: ListView.builder(&#xA;                padding: EdgeInsets.only(top: 15),&#xA;                shrinkWrap: true,&#xA;                itemCount: data.length ,&#xA;                itemBuilder: (context, index) {&#xA;                  return InkWell(&#xA;                    onTap: () {},&#xA;                    child: Padding(&#xA;                      padding: EdgeInsets.only(&#xA;                          top: pageWidth * 0.0,&#xA;                          right: pageWidth * 0.08,&#xA;                          left: pageWidth * 0.08,&#xA;                          bottom: pageWidth * 0.0),&#xA;                      child: Container(&#xA;                        child: Stack(&#xA;                          children: [&#xA;                            Column(&#xA;                              children: [&#xA;                                Padding(&#xA;                                  padding:&#xA;                                      EdgeInsets.only(bottom: pageWidth * 0.060),&#xA;                                  child: Row(&#xA;                                    children: [&#xA;                                      Padding(&#xA;                                        padding:&#xA;                                            EdgeInsets.only(left: pageWidth * 0.01),&#xA;                                        child: Container(&#xA;                                          // alignment: Alignment.centerRight,&#xA;                                          width: pageWidth * 0.128,&#xA;                                          height: pageWidth * 0.128,&#xA;                                          decoration: BoxDecoration(&#xA;                                              image: DecorationImage(&#xA;                                                  fit: BoxFit.cover,&#xA;                                                  image: CachedNetworkImageProvider(&#xA;                                                    data[index]['Image'],&#xA;                                                  )),&#xA;                                              borderRadius: BorderRadius.all(&#xA;                                                  Radius.circular(15)),&#xA;                                              // color: Colors.redAccent,&#xA;                                              border: Border.all(&#xA;                                                color: MyColors.lightGrey,&#xA;                                                width: 1,&#xA;                                              )),&#xA;                                        ),&#xA;                                      ),&#xA;                                      Expanded(&#xA;                                        child: Row(&#xA;                                          children: [&#xA;                                            Column(&#xA;                                              crossAxisAlignment:&#xA;                                                  CrossAxisAlignment.start,&#xA;                                              children: [&#xA;                                                Container(&#xA;                                                  width: pageWidth * 0.5,&#xA;                                                  alignment: Alignment.centerRight,&#xA;                                                  child: Text(&#xA;                                                    data[index]['title'],&#xA;                                                    textAlign: TextAlign.right,&#xA;                                                    overflow: TextOverflow.ellipsis,&#xA;                                                    maxLines: 1,&#xA;                                                    // softWrap: true,&#xA;                                                    style: TextStyle(&#xA;                                                      // fontWeight: FontWeight.bold,&#xA;                                                      fontSize: 14,&#xA;                                                    ),&#xA;                                                  ),&#xA;                                                ),&#xA;                                              ],&#xA;                                            ),&#xA;                                          ],&#xA;                                        ),&#xA;                                      )&#xA;                                    ],&#xA;                                  ),&#xA;                                ),&#xA;                              ],&#xA;                            ),&#xA;                          ],&#xA;                        ),&#xA;                      ),&#xA;                    ),&#xA;                  );&#xA;                }));&#xA;      }&#xA;    }&#xA;&#xA;</code></pre>&#xA;",0,user16886755,10157127,2021-11-12 16:05:52,2021-11-13 12:04:00,flutter infinite scrolling data from server in listview builder,<flutter><dart><graphql><infinite-scroll>,1,0,0,2021-11-12 11:09:22
69950724,1,,,0,99,"<p>Working with amplify datastore and edited schema.graphql as following and when I enter &quot;amplify codegen models&quot; I get this error &quot;<strong>Error: Expected scalar and got User</strong>&quot; However the code was generated successfully. How would I be able to fix this error?</p>&#xA;<pre><code>type User&#xA;  @model&#xA;  @key(name: &quot;ByEmail&quot;, fields: [&quot;email&quot;], queryField: &quot;userByEmail&quot;)&#xA;  @auth(rules: [{ allow: owner }]) {&#xA;  id: ID!&#xA;  email: String!&#xA;  gender: String!&#xA;  birthdate: String!&#xA;  faceImage: String&#xA;  favoriteAvatar: [Avatar] @connection(fields: [&quot;avatarId&quot;])&#xA;  totalVideoTransform: Int&#xA;  registerAt: AWSDateTime!&#xA;}&#xA;&#xA;type Avatar&#xA;  @model&#xA;  @key(name: &quot;ByAvatrId&quot;, fields: [&quot;avatarId&quot;], queryField: &quot;avatarByAvatarId&quot;)&#xA;  @auth(rules: [{ allow: owner, ownerField: &quot;favoriteUser&quot;, operations: [create, update, read] }]) {&#xA;  id: ID!&#xA;  avatarId: String!&#xA;  gender: String!&#xA;  favoriteUser: [User] @connection(fields: [&quot;email&quot;])&#xA;  totalVideoTransform: Int&#xA;}&#xA;&#xA;type UserLoginLog&#xA;  @model&#xA;  @key(name: &quot;ByUser&quot;, fields: [&quot;user&quot;], queryField: &quot;userLoginLogByUser&quot;)&#xA;  @auth(rules: [{ allow: owner, operations: [create] }]) {&#xA;  id: ID!&#xA;  user: User @connection(fields: [&quot;email&quot;])&#xA;  loginAt: AWSDateTime!&#xA;}&#xA;&#xA;type VideoTransformLog&#xA;  @model&#xA;  @key(name: &quot;ByUser&quot;, fields: [&quot;user&quot;], queryField: &quot;videoTransformLogByUser&quot;)&#xA;  @auth(rules: [{ allow: owner, operations: [create] }]) {&#xA;  id: ID!&#xA;  user: User @connection(fields: [&quot;email&quot;])&#xA;  avatar: Avatar @connection(fields: [&quot;avatarId&quot;])&#xA;  videoTransformAt: AWSDateTime!&#xA;}&#xA;</code></pre>&#xA;",16752809,,16752809,2021-11-13 01:50:50,2022-10-05 00:38:07,amplify datastore Error: Expected scalar and got User,<graphql><amazon-dynamodb><datastore><amplify>,1,0,0,2021-11-13 01:26:20
69952286,1,,,2,428,"<p>I am going to publish my app in production. Currently, I am trying to disable the database schema introspection in Hasura core. I tried to download the metadata and add the following to the file</p>&#xA;<pre><code>&quot;graphql_schema_introspection&quot;: {&#xA;      &quot;disabled_for_roles&quot;: [&#xA;        &quot;user&quot;&#xA;      ]&#xA;    }&#xA;</code></pre>&#xA;<p>It doesn't work. But I try in Hasura cloud, it's worked. Maybe this feature is only in Hasura cloud, not Hasura core.</p>&#xA;<p>Is there any alternative way to disable the schema introspection in Hasura core?</p>&#xA;",3955338,,,,2021-11-14 17:59:41,How to disable Hasura schema introspection?,<graphql><schema><hasura>,1,1,0,2021-11-13 07:19:48
69965745,2,,69952286,2,,<p>You need to activate AllowList and introspection queries automatically becomes not allowed query.</p>&#xA;<p>You will need to add introspection queries into AllowList to enable them.</p>&#xA;<p>Notes:</p>&#xA;<ul>&#xA;<li>you can't disallow introspection for <code>admin</code> role. That's reasonable:  applications must not work in <code>admin</code> role anyway.</li>&#xA;<li>you can't allow for one role and disallow for another: allow lists are not defined per role</li>&#xA;</ul>&#xA;,1168212,,,,2021-11-14 17:59:41,"",,0,1,0,2021-11-14 17:59:41
69965978,1,,,2,130,"<p>I have the following code in a WordPress site and the response that I get back has <code>429: Too many requests</code>. Has anyone else run into this issue before and found a way around it?</p>&#xA;<ul>&#xA;<li>I'm nowhere near the max of 200 per hour, I've only tried it a few times so that shouldn't be an issue either.</li>&#xA;<li>I'm able to retrieve a response without being authenticated in a private browser when I navigate to <code>https://www.instagram.com/google.com/?__a=1</code> so I know this isn't an authentication issue.</li>&#xA;</ul>&#xA;<pre class=""lang-php prettyprint-override""><code>static function bk_read_count_social( $data, $social_type, $apiKey = '' ) {&#xA;  if($social_type == 'instagram') {&#xA;    $username = 'google';&#xA;    $publicApiUrl = 'https://www.instagram.com/'.$username.'/?__a=1';&#xA;&#xA;    $response = wp_remote_get($publicApiUrl);&#xA;&#xA;    // 429 - Too Many Requests&#xA;    if ($response['response']['code'] !== 429) {&#xA;      $instagramArgs['followers'] = $response['graphql']['user']['edge_followed_by']['count'];&#xA;      $instagramArgs['username']  =  $username;&#xA;    } else {&#xA;      console_log('Unable to retrieve Instagram API');&#xA;      console_log($response);&#xA;      $instagramArgs['followers'] = '';&#xA;      $instagramArgs['username']  =  $username;&#xA;    }&#xA;&#xA;    return $instagramArgs;&#xA;}&#xA;</code></pre>&#xA;",1272404,,1272404,2021-11-14 19:07:15,2021-11-14 19:07:15,Instagram Public API returning error code 429,<php><wordpress><graphql><instagram>,0,4,0,2021-11-14 18:28:46
69981517,1,,,1,13,"<p>I have an RDS database running Aurora (MySQL), and would like to trigger an AppSync GraphQL mutation when a row in an RDS table is either inserted or updated.</p>&#xA;<p>There's an <a href=""https://stackoverflow.com/questions/49966633/aws-appsync-invoke-mutate-from-lambda"">answered question</a> about how to trigger an AppSync mutation from RDS, and I'm able to do that successfully. My question, though, is how do you deal with the transactional nature of RDS? If I trigger an AppSync mutation (via Lambda) on a MySQL <code>AFTER INSERT</code> or <code>AFTER UPDATE</code>, I can do what I need with AppSync and it works great, but the problem is that these triggers run <em>before</em> committing the transaction. Which means, if the transaction is rolled back for any reason, the mutation has occurred but the database state has reverted to what it was previously.</p>&#xA;<p>Any suggestions on how to approach this? How to wait for a transaction to be committed before triggering an AppSync mutation?</p>&#xA;",612580,,,,2021-11-15 22:13:29,RDS MySQL Aurora Update Invoking an AppSync Mutation,<amazon-web-services><graphql><amazon-rds><aws-appsync><amazon-aurora>,0,0,0,2021-11-15 22:13:29
70016857,2,,70010557,2,,"<p>Hasura V2 still uses the <code>hdb_catalog</code> on the connected DBs to run its event trigger system as it depends on database triggers defined on the DB itself to function. Hence you are seeing the tables relevant to event triggers still in the <code>hdb_catalog</code> of the connected DB while the rest of the metadata is stored in the <code>hdb_catalog</code> of the metadata DB. That being said, Hasura V2 only uses the <code>hdb_catalog</code> of the connected DB in case event triggers are defined or else it doesnt interact with it at all, allowing a Hasura V1 instance to work with the same DB.</p>&#xA;<p>To summarize, as of Hasura v2.1.0 <em>(the latest Hasura version at the time of writing this)</em> it would be possible to run a Hasura V2 instance (with its own dedicated metadata DB) alongside a Hasura V1 instance both connected to the same DB <strong>only if</strong> the Hasura V2 instance does not have event triggers configured.</p>&#xA;",1694120,,,,2021-11-18 08:43:34,"",,0,1,0,2021-11-18 08:43:34
70042254,1,,,0,305,"<p>I have an Amplify web app configured with Cognito and API Key for authentication.</p>&#xA;<p>I'd like to have an un-authenticated user call a Lambda resolver, which returns a JSON response. I am able to have the user call the resolver, which then executes. But I receive the following error on the response in my front-end app:</p>&#xA;<pre><code>errorType: &quot;Unauthorized&quot;&#xA;message: &quot;Not Authorized to access score on type FormAssessmentResponse&quot;&#xA;...&#xA;errorType: &quot;Unauthorized&quot;&#xA;message: &quot;Not Authorized to access isInCoverageArea on type FormAssessmentResponse&quot;&#xA;</code></pre>&#xA;<p>My GraphQL schema is as follows:</p>&#xA;<pre><code>type FormAssessmentResponse {&#xA;  score: Int&#xA;  isInCoverageArea: Boolean&#xA;}&#xA;...&#xA;type Mutation {&#xA;  formAssessment(input: FormAssessmentInput!): FormAssessmentResponse @function(name: &quot;formResolvers-${env}&quot;) @auth(rules: [{allow: public, provider: apiKey}])&#xA;}&#xA;</code></pre>&#xA;<p>My Lambda resolver (simplified) is as follows:</p>&#xA;<pre><code>const formAssessment = async (event, context, callback) =&gt; {&#xA;  console.log(event.arguments.input)&#xA;  callback(null, {&#xA;    score: 54,&#xA;    isInCoverageArea: true&#xA;  })&#xA;}&#xA;&#xA;const resolvers = {&#xA;  Mutation: {&#xA;    formAssessment,&#xA;  },&#xA;}&#xA;&#xA;exports.handler = async (event, context, callback) =&gt; {&#xA;  const typeHandler = resolvers[event.typeName]&#xA;  if (typeHandler) {&#xA;    const resolver = typeHandler[event.fieldName]&#xA;    if (resolver) {&#xA;      return await resolver(event, context, callback)&#xA;    }&#xA;  }&#xA;  throw new Error(&quot;Resolver not found.&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>In my frontend, I invoke the resolver as follows:</p>&#xA;<pre><code>import { API } from '@aws-amplify/api'&#xA;import Auth from '@aws-amplify/auth'&#xA;import config from '../src/aws-exports'&#xA;Amplify.configure(config)&#xA;&#xA;const response = await API.graphql({&#xA;        query: mutation,&#xA;        variables: variables,&#xA;        authMode: 'API_KEY'&#xA;      })&#xA;</code></pre>&#xA;<p>If I replace FormAssessmentResponse with simply String or AWSJSON, I can return these types from my Lambda function. Therefore, it seems to be something to do with the use of type FormAssessmentResponse.</p>&#xA;<p>Note, I do not want to @model the type FormAssessmentResponse, as this will create DynamoDB tables, and I do not wish for that.</p>&#xA;",11854352,,,,2021-11-20 03:06:20,GraphQL lambda resolver returning Unauthorized access,<amazon-web-services><aws-lambda><graphql><amplify>,1,0,0,2021-11-20 00:17:59
70042549,1,,,1,84,"<p>I'm trying to set up a Realtime Database. I've used Firebase in the past, specifically web app hosting, but this is my first time with any of the database features. I have a service account set up and I've downloaded the private key JSON. Here's my code for starting a server:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const serviceAccount = require('./../resources/credentials.json');&#xA;&#xA;const firebaseClient = firebase.initializeApp({&#xA;    credential: firebase.credential.cert(serviceAccount),&#xA;    databaseURL: process.env.FIREBASE_DATABASE_URL&#xA;});&#xA;</code></pre>&#xA;<p>I haven't edited credentials.json at all aside from renaming it such, but that shouldn't be a problem. My issue was still occurring before I renamed it anyway. When the database rules are set up to be completely public and I make a GraphQL query, it runs as expected and I get back the requested information from the database. So I know it's not a problem with my queries either.</p>&#xA;<p>When I set the rules to the following:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;rules&quot;: {&#xA;    &quot;.read&quot;: &quot;auth != null&quot;,&#xA;    &quot;.write&quot;: &quot;auth != null&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I expect that <em>any</em> authenticated user should be able to access the database. (I'll set it up for only specific users later.) But when I make the query, the only thing that is returned is <code>{ error: 'Permission denied' }</code>. I thought passing in the service account credentials was <em>how</em> you authenticate, but apparently I'm doing something wrong.</p>&#xA;<p>Also, here's part of resolvers.js, the part of my script that actually makes a query to the database:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const baseURL = process.env.FIREBASE_DATABASE_URL;&#xA;&#xA;const resolvers = {&#xA;    Query: {&#xA;        users: async () =&gt; {&#xA;            const data = await fetch(`${baseURL}/users.json`);&#xA;            const dataJson = await data.json();&#xA;            // etc... converting the data json into the format I need&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>What am I doing wrong, or is there an easier way to do it? If you need any extra information just leave a comment.</p>&#xA;",10481614,,10481614,2021-11-20 03:50:26,2021-11-20 03:50:26,Why does Firebase Realtime Database always return { error: 'Permission denied' }? Why isn't authentication working?,<firebase><express><firebase-realtime-database><graphql>,0,7,0,2021-11-20 01:23:01
70060371,1,,,1,630,"<p>I am trying to trigger a mutation in the aws console. I have linked my resolver function to a None type data source.&#xA;However, when I define my mutation with an input type as a parameter, the error &quot; Error Cannot return null for non-nullable type: 'String' within parent MyModelType' (/createMyModelType/id).&quot; occurs. Everything is fine though if I replace the input type with key word arguments.&#xA;I am certain it has to do with my resolver mapping template.&#xA;Just if you're wondering why I am using a None type, I want to be able to trigger a subscription without making real database changes or mutations.&#xA;I am not sure how to make it work with input types. Here is my code for the template:</p>&#xA;<pre><code>{&#xA;    &quot;version&quot;: &quot;2017-02-28&quot;,&#xA;    &quot;payload&quot;: $util.toJson($context.args)&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>My Schema:</p>&#xA;<pre><code>input CreateMyModelType5Input {&#xA;    title: String&#xA;}&#xA;&#xA;&#xA;type Mutation {&#xA;    createMyModelType5(input: CreateMyModelType5Input!): MyModelType5&#xA;}&#xA;&#xA;type MyModelType5 {&#xA;    id: ID!&#xA;    title: String&#xA;}&#xA;&#xA;&#xA;type Subscription {&#xA;    onCreateMyModelType5(id: ID, title: String): MyModelType5&#xA;        @aws_subscribe(mutations: [&quot;createMyModelType5&quot;])&#xA;}&#xA;</code></pre>&#xA;<p><strong>Query I am trying to run</strong>:</p>&#xA;<pre><code>mutation createMyModelType($createmymodeltypeinput: CreateMyModelTypeInput!) {&#xA;  createMyModelType(input: $createmymodeltypeinput) {&#xA;    id&#xA;    title&#xA;  }&#xA;}&#xA;&#xA;</code></pre>&#xA;<p><strong>Query Variables for the mutation query</strong></p>&#xA;<pre><code>{&#xA;  &quot;createmymodeltype5input&quot;: {&#xA;    &quot;title&quot;: &quot;Hello, world!&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",13000773,,13000773,2021-11-22 16:10:30,2021-12-17 18:03:57,Error Cannot return null for non-nullable type: 'String' within parent MyModelType' (/createMyModelType/id),<graphql><aws-appsync><graphql-mutation><aws-appsync-resolver><appsync-subscription>,1,1,0,2021-11-22 02:44:16
70066946,1,,,0,103,<p>My DynamoDB table 'EventChat' has 'eventId' as the partition key and 'createdOn' as Sort Key. I am using AppSync and Apollo client to query the database.&#xA;I would like to get all items for a certain 'eventId' and items created BETWEEN two createdOn dates.&#xA;What should my Schema and Query and Request Mapping Template look like?&#xA;Thanks</p>&#xA;,2111865,,,,2021-11-22 20:13:16,How do I create a GraphQL query for DynamoDB,<graphql><amazon-dynamodb><aws-appsync>,1,1,0,2021-11-22 13:58:06
70070545,2,,69092547,0,,"<p>Hopefully not too late to help here... I was previously getting a 400 when not providing __typename in the response. AWS documentation on this - <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/interfaces-and-unions.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/interfaces-and-unions.html</a></p>&#xA;",17481677,,,,2021-11-22 18:15:47,"",,0,0,0,2021-11-22 18:15:47
70090416,1,,,0,260,"<p>I am new to Amplify and I am trying to set up a fairly complex schema. When I run amplify push, the only response that I get is ...</p>&#xA;<pre><code>An error occurred when pushing the resources to the cloud&#xA;</code></pre>&#xA;<p>This happens after the notice that it will create the resources and I am asked if I want to continue. I deleted most of the schema and tried again with just one model and it worked, so there is a problem somewhere in my schema ... I guess? I don't see anywhere to check it.</p>&#xA;<p>Here is the schema</p>&#xA;<pre><code>type Article&#xA;  @model&#xA;  @key(name: &quot;bySource&quot;, fields: [&quot;sourceId&quot;, &quot;dateWritten&quot;]) {&#xA;  id: ID!&#xA;  link: AWSURL!&#xA;  title: String!&#xA;  dateWritten: String!&#xA;  createdAt: String!&#xA;  data: AWSJSON!&#xA;  approved: Boolean!&#xA;  admin: Boolean!&#xA;  creatorId: ID!&#xA;  creator: User @connection(fields: [&quot;creatorId&quot;])&#xA;  sourceId: ID!&#xA;  source: Source @connection(fields: [&quot;sourceId&quot;])&#xA;  tagArtCons: [TagArtCon]&#xA;    @connection(keyName: &quot;byArticle&quot;, fields: [&quot;articleId&quot;])&#xA;}&#xA;&#xA;type Tag @model @key(name: &quot;byFrontPage&quot;, fields: [&quot;frontpage&quot;]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  createdAt: String!&#xA;  creatorId: ID!&#xA;  data: AWSJSON!&#xA;  frontpage: String&#xA;  official: Boolean!&#xA;  tagArtConns: [TagArtCon] @connection(keyName: &quot;byTag&quot;, fields: [&quot;tagId&quot;])&#xA;}&#xA;&#xA;type TagArtCon&#xA;  @model&#xA;  @key(name: &quot;byTag&quot;, fields: [&quot;tagId&quot;])&#xA;  @key(name: &quot;byArticle&quot;, fields: [&quot;articleId&quot;]) {&#xA;  id: ID!&#xA;  tagId: ID!&#xA;  articleId: ID!&#xA;  creatorId: ID!&#xA;  createdAt: String!&#xA;  article: Article @connection(fields: [&quot;articleId&quot;])&#xA;  tag: Tag @connection(fields: [&quot;tagId&quot;])&#xA;  parentRelations: [TagRelation]&#xA;    @connection(keyName: &quot;byParent&quot;, fields: [&quot;tagId&quot;])&#xA;  childRelations: [TagRelation]&#xA;    @connection(keyName: &quot;byChild&quot;, fields: [&quot;tagId&quot;])&#xA;}&#xA;&#xA;type TagRelation&#xA;  @model&#xA;  @key(name: &quot;byParent&quot;, fields: [&quot;parentId&quot;])&#xA;  @key(name: &quot;byChild&quot;, fields: [&quot;childId&quot;]) {&#xA;  id: ID!&#xA;  parentId: ID!&#xA;  childId: ID!&#xA;  creatorId: ID!&#xA;  createdAt: String!&#xA;  parentTag: Tag @connection(fields: [&quot;parentId&quot;])&#xA;  childTag: Tag @connection(fields: [&quot;childId&quot;])&#xA;}&#xA;&#xA;type Source @model {&#xA;  id: ID!&#xA;  sourceName: String!&#xA;  sourceUrl: String!&#xA;  sourceImage: String!&#xA;  creatorId: ID!&#xA;  articles: [Article] @connection(keyName: &quot;bySource&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type User @model {&#xA;  id: ID!&#xA;  userName: String!&#xA;  userImage: String!&#xA;  admin: Boolean!&#xA;  createdAt: String!&#xA;  data: AWSJSON&#xA;}&#xA;</code></pre>&#xA;<p>What I am trying to do is have a bunch of articles and a bunch of tags. The tags represent categories, people, etc. I have the following tables</p>&#xA;<p>articles,&#xA;tags,&#xA;a table where each entry ties an article to a tag&#xA;a table of relations between tags where parent/child relationships are held&#xA;a source table that just holds data for the sources of the articles&#xA;a user table</p>&#xA;<p>I've made a mistake somewhere and the schema isn't working and it isn't telling me why. I'm gonna keep simplifying this until I can hope to nail down the problem, but I would really appreciate any help as I am new to this. Thanks.</p>&#xA;",1087990,,,,2021-11-24 04:07:10,AWS Amplify GraphQL Schema is causing an error,<graphql><aws-amplify>,1,0,0,2021-11-24 03:33:05
70090607,2,,70090416,0,,<p>Finally found the problem(s). There is a place where I try to use &quot;articleId&quot; and a place where I try to use &quot;tagId&quot; and both should be &quot;id&quot;.</p>&#xA;,1087990,,,,2021-11-24 04:07:10,"",,0,0,0,2021-11-24 04:07:10
70092770,2,,70084074,1,,"<p>The right way to do that with Neo4jGraphql was :</p>&#xA;<pre><code>type Avatar @auth(rules: [{ operations: [CREATE], isAuthenticated: true }]) &#xA;    {&#xA;       avatarId: ID!&#xA;        ...&#xA;    }&#xA;</code></pre>&#xA;<p>see this doc for more informations :&#xA;<a href=""https://neo4j.com/docs/graphql-manual/current/auth/"" rel=""nofollow noreferrer"">https://neo4j.com/docs/graphql-manual/current/auth/</a></p>&#xA;",16956436,,,,2021-11-24 08:25:04,"",,0,0,0,2021-11-24 08:25:04
70107891,1,70109935,,0,180,"<p>Is there a way to get the Total number of (appsync) api requests made to application for a certain time period?</p>&#xA;<p>I'm testing a module of application and it is generating requests. I want to calculate the total number of requests generated for all the time my module ran.</p>&#xA;<p>In appsync monitoring, I can see the graph. The way I understand it (i'm trying to learn, correct me if wrong) <strong>it is showing the total number of requests system has got at each unit time.</strong></p>&#xA;<p>So, if it has a <strong>peak</strong> at certain unit of time, the next unit of time total requests (till now) are = <strong>PEAK requests + requests at CURRENT Unit of time</strong>.</p>&#xA;<p>So, for the graph below, total number of requests must be way more than 34k. right?</p>&#xA;<p><a href=""https://i.stack.imgur.com/v8ecK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/v8ecK.png"" alt=""graph"" /></a></p>&#xA;<p>Now my question is: <strong>Can I calculate the total number of requests made to the system for this period of time</strong>?&#xA;thanks</p>&#xA;",14981915,,,,2021-11-25 10:59:13,Get Total Number of AppSync requests generated for certain period of time | AWS | APPSYNC,<amazon-web-services><aws-appsync><appsync-apollo-client><aws-appsync-resolver>,1,0,0,2021-11-25 08:26:13
70109935,2,,70107891,0,,"<p>The chart is currently set to show requests from the week, grouped in 5 minute buckets.  The total for a given period is the sum of the dots.</p>&#xA;<p>You can, of course, change the <code>5 minutes</code> dropdown to show fewer, bigger time buckets.</p>&#xA;<p>If that is not precise enough, you could enable request logging (<code>Settings &gt; Logging</code> in the console) and use CloudWatch log insights to aggregate the individual log data.</p>&#xA;",1103511,,,,2021-11-25 10:59:13,"",,0,1,0,2021-11-25 10:59:13
70126054,2,,70125792,1,,<p>The classic problem with inattention:&#xA;You use the <code>res</code> variable for the console. And nowhere are you assigning a value to <code>result</code>.</p>&#xA;<p>And the <code>return result</code> is executed before the query is executed. (out of context where you have data)</p>&#xA;<p>See the documentation for how to use the <code>async / await</code> syntax. You are currently using callbacks - which is not a recommended syntax.</p>&#xA;,1194525,,,,2021-11-26 14:34:53,"",,0,1,0,2021-11-26 14:34:53
70140022,1,,,0,186,"<p>Beginner to AWS trying to use AWS Amplify as a backend for a react native application. I've created an API with a schema using the Amplify wizard. I specified an id field that has value type of ID which becomes the partition key. I would like to set this key myself because when a user creates their profile, I want to store it and be able to fetch it with an id. However, it looks like the query doesn't even expect an id field because the dynamodb automatically assigns an id/partition key upon creation. I don't know how to get this id and I want to if possible specify my own partition key. I tried adding id in the input type of creation but the entries that are getting created in dynamodb still doesn't use the id I pass in.</p>&#xA;",17527853,,,,2021-11-28 02:40:26,How to manually set partition key for AWS Amplify DynamoDB API,<react-native><graphql><amazon-dynamodb><aws-amplify><aws-appsync>,1,0,0,2021-11-28 01:32:43
70150880,2,,69169502,0,,"<p>Yes I have the same issue and was thinking to have a Users table where I enable owner authorization. This Owner-based authorization allows you to tie a data record to a user. Owners can read, create, update, and delete the record.</p>&#xA;<p>Allow the owner to perform these operations on their own records:</p>&#xA;<p>Create</p>&#xA;<p>Read</p>&#xA;<p>Update</p>&#xA;<p>Delete</p>&#xA;",13525605,,,,2021-11-29 07:11:39,"",,0,0,0,2021-11-29 07:11:39
70170480,1,70231326,,6,1619,"<p>I previously used the code below to scrape the search result for a word search, for example book, on <a href=""https://www.walmart.com/"" rel=""noreferrer"">https://www.walmart.com/</a>. They have currently changed their request and response parameters and this code does not get any response again.</p>&#xA;<pre><code>&#xA;        params = {&#xA;            'query': 'book',&#xA;            'cat_id': 0,&#xA;            'ps': 24,&#xA;            'offset': 0,&#xA;&#xA;            'prg': 'desktop',&#xA;            'stores': re.search(r'store/(\d+)', url).group(1)&#xA;        }&#xA;&#xA;        try:&#xA;            data1 = requests.get(api_url, params=params).json()&#xA;&#xA;        except Exception as e:&#xA;            print(&quot;Sleeping for 10 seconds&quot;, e)&#xA;            time.sleep(10)&#xA;&#xA;            try:&#xA;                data1 = requests.get(api_url, params=params).json()&#xA;            except Exception as e:&#xA;                print(&quot;sleeping for 60 seconds&quot;, e)&#xA;                time.sleep(60)&#xA;&#xA;                try:&#xA;                    data1 = requests.get(api_url, params=params).json()&#xA;                except Exception as e:&#xA;                    print(&quot;sleeping for 360 seconds&quot;)&#xA;                    time.sleep(360)&#xA;&#xA;                    data1 = requests.get(api_url, params=params).json()&#xA;&#xA;</code></pre>&#xA;<p>I want to get the json response for a product page for example the product the in this url</p>&#xA;<pre><code>https://www.walmart.com/ip/SKIPPY-Natural-Creamy-Peanut-Butter-Spread-15-oz/37447671&#xA;</code></pre>&#xA;<p>How could i rewrite the code with their current parameters to get the json response?</p>&#xA;",6283073,,6283073,2021-12-04 12:14:37,2021-12-09 04:33:41,how to scrape product data from website pages that uses graphql,<python><web-scraping><graphql>,2,2,0,2021-11-30 13:52:40
70193501,1,,,1,505,"<p>I'm building a server based off typegraphql-prisma like here:  <a href=""https://github.com/prisma/prisma-examples/tree/latest/typescript/graphql-typegraphql-crud"" rel=""nofollow noreferrer"">https://github.com/prisma/prisma-examples/tree/latest/typescript/graphql-typegraphql-crud</a></p>&#xA;<p>I now have a server where different Users can be created and can have different Posts as per in the example code.  Are there instructions or a path I should take to have each user authenticated and unable to delete each others posts?  Cause now, anyone on my consuming client can delete anyone else's posts.  I see some auth stuff in there but I don't see where to add code during a delete mutation like &quot;if (notOwner) {return null}&quot;  Surely there is a way to auth these types of mutations inside the autogen resolvers through some middle ware or something.</p>&#xA;<p>Thanks</p>&#xA;",4585185,,,,2021-12-12 01:51:33,how to protect user data from eachother using typegraphql-prisma,<node.js><authentication><graphql><prisma><typegraphql>,2,1,0,2021-12-02 02:24:05
70197820,2,,53372696,0,,<p>Try running</p>&#xA;<pre><code>amplify codegen models&#xA;</code></pre>&#xA;<p>before doing the</p>&#xA;<pre><code>amplify push&#xA;</code></pre>&#xA;,16406174,,,2021-12-24 15:29:30,2021-12-24 15:29:30,"",,0,0,0,2021-12-02 10:31:40
70199005,2,,68865813,0,,"<p>Didn't get it. what lib do you use - GraphQL.Net?&#xA;Btw, based on GraphQL.net is existed a more elegant solution that allows starting much easier. You just have to define schemas in JSON file and set DB-connection string (<a href=""https://www.nuget.org/packages/NReco.GraphQL/"" rel=""nofollow noreferrer"">NReco.GraphQL</a>)</p>&#xA;",4679729,,,,2021-12-02 11:57:06,"",,0,0,0,2021-12-02 11:57:06
70219440,2,,65659687,5,,"<p>Great information here, Mark. Thanks for the write up and updates.</p>&#xA;<p>I was playing around with this and with the Auto Merge conflict resolution strategy I was able to post an update using a GraphQL mutation by sending the <em>current</em> _version member along.</p>&#xA;<p>This function:</p>&#xA;<pre><code>await API.graphql(&#xA;     graphqlOperation(updateAsset, { &#xA;          input: { &#xA;              id: assetToUpdate.id, &#xA;              name: &quot;Updated name&quot;, &#xA;              _version: assetToUpdate._version &#xA;          }&#xA;    }&#xA;));&#xA;</code></pre>&#xA;<p>Properly updates, contacts AppSync, and propagates the changes to DynamoDB/DataStore. Using the current version tells AppSync that we are up-to-date and able to edit the content. Then AppSync manages/increments the _version/_createdAt/etc.</p>&#xA;",9700687,,9700687,2022-08-15 21:49:37,2022-08-15 21:49:37,"",,0,2,0,2021-12-03 18:57:34
70226051,1,,,1,362,"<p>I am trying to use <a href=""https://pub.dev/packages/graphql_flutter"" rel=""nofollow noreferrer"">graphql_flutter</a> plugin to fetch data from graphql API in this I have pagination using the offset if the offset is 0 it fetches the first 10 items if offset increases by 1 it fetches the next 10 so when I am using <code>fetchmore</code> callback method of graphql query it calls my builder method again which is refreshing my list again which I do not want I want once user scroll at maximum position data loads from that position only it should not reload my list and add data it just adds data to my list below is my query</p>&#xA;<p>my build method code</p>&#xA;<pre><code> Widget build(BuildContext context) {&#xA;    // TODO: implement build&#xA;    MoengageFlutter.getInstance()&#xA;        .trackEvent(StringConstants.loanListingScreen, null);&#xA;    // Analytics().logCustomEvent(StringConstants.loanListingScreen, null);&#xA;    // if (offset == 0) {&#xA;    getLoanProducts =&#xA;        &quot;&quot;&quot;query(\$offset: Int!, \$confKey: String!, \$operator: String!) {&#xA;    user{&#xA;        products(product_id: &quot;&quot;,filter:[{&#xA;            setting_type: &quot;sort&quot;,&#xA;            setting: [&#xA;                {&#xA;                    conf_key: \$confKey,&#xA;                    operator: \$operator&#xA;                },&#xA;            ]&#xA;        }&#xA;        ], limit: 10, offset: \$offset) {&#xA;            total&#xA;            data{&#xA;                id&#xA;                name&#xA;                loan_type&#xA;                partner_id&#xA;                internal_rating&#xA;                playstore_rating&#xA;                interest_rate_min&#xA;                interest_rate_max&#xA;                loan_amount_min&#xA;                loan_amount_max&#xA;                processing_fee_percentage&#xA;                processing_fee_min&#xA;                processing_fee_max&#xA;                required_documents&#xA;                duration_min&#xA;                duration_max&#xA;                duration_min_unit&#xA;                duration_max_unit&#xA;                app_url&#xA;                partner {&#xA;                    id&#xA;                    name&#xA;                    logo&#xA;                    short_description&#xA;                    term_link&#xA;                    support_contact&#xA;                    support_email                    &#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&quot;&quot;&quot;;&#xA;&#xA;    // }&#xA;    // productListingBloc.getProductListingBloc(getLoanProducts).then((value){&#xA;    //   print(value);&#xA;    // });&#xA;    return Query(&#xA;        options: QueryOptions(document: gql(getLoanProducts), variables: {&#xA;          &quot;offset&quot;: offset,&#xA;          &quot;confKey&quot;: confKey,&#xA;          &quot;operator&quot;: _operator&#xA;        }),&#xA;        builder: (QueryResult result,&#xA;            {VoidCallback refetch, FetchMore fetchMore}) {&#xA;          if (result.hasException) {&#xA;            return Container(&#xA;                width: ResponsiveRenderer().widthOfItem(context),&#xA;                child: UnknownErrorState(&#xA;                  errorImage: StringConstants.unknownErrorStateImage,&#xA;                  text: StringConstants.unknownErrorStateText,&#xA;                  titleText: StringConstants.unknownErrorOccurredText,&#xA;                ));&#xA;          }&#xA;&#xA;          if (result.isLoading) {&#xA;&#xA;            return offset == 0&#xA;                ? Center(&#xA;                    child: CircularProgressIndicator(),&#xA;                  )&#xA;                : Center(child: CircularProgressIndicator());&#xA;          }&#xA;          return Scaffold(&#xA;              backgroundColor: Colors.white,&#xA;              appBar: !_isAppBar&#xA;                  ? AppBar(&#xA;                      automaticallyImplyLeading: false,&#xA;                      elevation: 0,&#xA;                      backgroundColor: HexColor(ColorConstants.white),&#xA;                    )&#xA;                  : AppBar(&#xA;                      automaticallyImplyLeading: false,&#xA;                      title: Container(&#xA;                        child: TextCustom(&#xA;                          text: StringConstants.loansText,&#xA;                          textAlign: TextAlign.left,&#xA;                          hexColor: ColorConstants.black,&#xA;                          fontSize: DimensionConstants.textSize18,&#xA;                          fontWeight: FontWeight.w500,&#xA;                        ),&#xA;                      ),&#xA;                      actions: [&#xA;                        InkWell(&#xA;                          onTap: () {&#xA;                            MoengageFlutter.getInstance().trackEvent(&#xA;                                StringConstants.sortButtonLoanListing, null);&#xA;                            Analytics().logCustomEvent(&#xA;                                StringConstants.sortButtonLoanListing, null);&#xA;                            showSortBottomSheet(refetch);&#xA;                          },&#xA;                          child: Container(&#xA;                            margin: EdgeInsets.only(&#xA;                                right: DimensionConstants.margin16,&#xA;                                top: DimensionConstants.margin12),&#xA;                            child: Row(&#xA;                              children: [&#xA;                                Container(&#xA;                                  margin: EdgeInsets.only(&#xA;                                      right: DimensionConstants.margin8),&#xA;                                  child:&#xA;                                      SvgPicture.asset(&quot;assets/loan/sort.svg&quot;),&#xA;                                ),&#xA;                                TextCustom(&#xA;                                  text: StringConstants.sortText,&#xA;                                  hexColor: ColorConstants.black,&#xA;                                  fontSize: DimensionConstants.textSize14,&#xA;                                ),&#xA;                              ],&#xA;                            ),&#xA;                          ),&#xA;                        )&#xA;                      ],&#xA;                      elevation: 0,&#xA;                      backgroundColor: Colors.white,&#xA;                    ),&#xA;              body: BlocBuilder&lt;NetworkBloc, NetworkState&gt;(&#xA;                  builder: (context, state) {&#xA;                if (state is ConnectionFailure) {&#xA;                  return Center(&#xA;                    child: UnknownErrorState(&#xA;                      errorImage: StringConstants.noInternetStateImage,&#xA;                      titleText: StringConstants.noInternetStateText,&#xA;                      text: StringConstants.noInternetStateSubText,&#xA;                    ),&#xA;                  );&#xA;                }&#xA;&#xA;                ProductListing listData = ProductListing.fromJson(result.data);&#xA;                if (listData.user.products == null ||&#xA;                    listData.user.products.data.length == 0) {&#xA;                  return Container(&#xA;                    child: Center(&#xA;                      child: Column(&#xA;                        mainAxisAlignment: MainAxisAlignment.center,&#xA;                        children: [&#xA;                          Container(&#xA;                            child: Image.asset(&#xA;                              &quot;assets/loan/loan_error_state.png&quot;,&#xA;                              width: ResponsiveRenderer().widthOfItem(context) *&#xA;                                  0.8,&#xA;                              height:&#xA;                                  ResponsiveRenderer().heightOfItem(context) *&#xA;                                      0.4,&#xA;                            ),&#xA;                          ),&#xA;                          Container(&#xA;                            margin: EdgeInsets.only(&#xA;                                top: DimensionConstants.margin16),&#xA;                            child: TextCustom(&#xA;                              text: StringConstants.noLoansFoundText,&#xA;                              fontSize: DimensionConstants.textSize16,&#xA;                              fontWeight: FontWeight.w500,&#xA;                            ),&#xA;                          ),&#xA;                          Container(&#xA;                            margin: EdgeInsets.only(&#xA;                                top: DimensionConstants.margin16),&#xA;                            child: TextCustom(&#xA;                              text: StringConstants&#xA;                                  .checkLocationAndPersonalDetails,&#xA;                              fontSize: DimensionConstants.textSize12,&#xA;                              hexColor: ColorConstants.greyDark,&#xA;                            ),&#xA;                          ),&#xA;                          InkWell(&#xA;                            onTap: () {&#xA;                              MoengageFlutter.getInstance().trackEvent(&#xA;                                  StringConstants.editProfileButtonLoanListing,&#xA;                                  null);&#xA;                              Analytics().logCustomEvent(&#xA;                                  StringConstants.editProfileButtonLoanListing,&#xA;                                  null);&#xA;                              Navigator.of(context)&#xA;                                  .pushNamed(MyProfile.routeName,&#xA;                                      arguments: MyProfile(&#xA;                                        phoneNumber: null,&#xA;                                      ));&#xA;                            },&#xA;                            child: Container(&#xA;                              margin: EdgeInsets.only(&#xA;                                  top: DimensionConstants.margin16),&#xA;                              child: TextCustom(&#xA;                                text: StringConstants.editProfileText,&#xA;                                fontSize: DimensionConstants.textSize14,&#xA;                                fontWeight: FontWeight.w500,&#xA;                                hexColor: ColorConstants.blue,&#xA;                              ),&#xA;                            ),&#xA;                          ),&#xA;                        ],&#xA;                      ),&#xA;                    ),&#xA;                  );&#xA;                } else {&#xA;                  _scrollController&#xA;                    ..addListener(() {&#xA;                      if (_scrollController.position.pixels ==&#xA;                          _scrollController.position.maxScrollExtent) {&#xA;                        if (total &gt; current) {&#xA;                          offset++;&#xA;                          FetchMoreOptions opts = FetchMoreOptions(&#xA;                            variables: {&#xA;                              'offset': offset,&#xA;                              &quot;confKey&quot;: confKey,&#xA;                              &quot;operator&quot;: _operator&#xA;                            },&#xA;                            document: gql(getLoanProducts),&#xA;                            updateQuery:&#xA;                                (previousResultData, fetchMoreResultData) {&#xA;                              print(fetchMoreResultData);&#xA;                              final List&lt;dynamic&gt; repos = [&#xA;                                ...previousResultData['user']['products']&#xA;                                    ['data'] as List&lt;dynamic&gt;,&#xA;                                ...fetchMoreResultData['user']['products']&#xA;                                    ['data'] as List&lt;dynamic&gt;&#xA;                              ];&#xA;&#xA;                              fetchMoreResultData['user']['products']['data'] =&#xA;                                  repos;&#xA;                              productList = repos;&#xA;                              return fetchMoreResultData;&#xA;                            },&#xA;                          );&#xA;&#xA;                          fetchMore(opts);&#xA;                        }&#xA;                      }&#xA;                    });&#xA;                  current =&#xA;                      (offset * limit) + listData.user.products.data.length;&#xA;                  total = listData.user.products.total;&#xA;                  return Column(&#xA;                    children: [&#xA;                      // Container(&#xA;                      //   margin: EdgeInsets.only(&#xA;                      //       left: DimensionConstants.margin12,&#xA;                      //       top: DimensionConstants.margin16),&#xA;                      //   child: TextCustom(&#xA;                      //     text: StringConstants.loanListingDescription,&#xA;                      //     textAlign: TextAlign.left,&#xA;                      //     fontSize: DimensionConstants.margin14,&#xA;                      //     hexColor: ColorConstants.black,&#xA;                      //   ),&#xA;                      // ),&#xA;                      // _sortAndFilter(),&#xA;                      Expanded(&#xA;                        child: ListView.builder(&#xA;                            controller: _scrollController,&#xA;                            shrinkWrap: true,&#xA;                            itemCount: listData.user.products.data.length,&#xA;                            itemBuilder: (context, index) {&#xA;                              return Container(&#xA;                                  padding: EdgeInsets.only(&#xA;                                      top: DimensionConstants.margin16,&#xA;                                      bottom: DimensionConstants.margin16),&#xA;                                  child: CardCustomLoanList(&#xA;                                      listData: listData, index: index));&#xA;                            }),&#xA;                      ),&#xA;                    ],&#xA;                  );&#xA;                }&#xA;              }));&#xA;        });&#xA;  }```&#xA;here fetch more calling builder methods again which is refreshing my whole list I don't want to refresh my whole list&#xA;Please anyone knows any better way to do this?&#xA;&#xA;&#xA;  [1]: https://pub.dev/packages/graphql_flutter&#xA;</code></pre>&#xA;",13583903,,18670641,2022-11-20 11:03:07,2022-11-20 11:03:07,Graphql Pagination using flutter fetchmore callback calling builder method again which is refreshing my listview again from index 0,<flutter><dart><graphql><flutter-layout><graphql-flutter>,0,0,0,2021-12-04 13:31:20
70260460,1,,,0,333,"<p>After performing a create mutation, i expect to get the entire response object as shown in&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html</a></p>&#xA;<p>But all i manage to get is the auto generated id (part of the schema) which is of uuid type.</p>&#xA;<p>Below is my schema and response mapping :-</p>&#xA;<p><strong>Schema</strong>:-</p>&#xA;<pre><code>type Apple{&#xA;    id: ID!&#xA;    type: String&#xA;    price: Float&#xA;}&#xA;&#xA;</code></pre>&#xA;<p><strong>Mutation used</strong> :-</p>&#xA;<pre><code>mutation MyMutation {&#xA;  &#xA;  updateApple(input: {id: &quot;0a9aa23f-3017-4b67-8dcd-354ef8f609d8&quot;, type: &quot;green&quot;, price: 10.5}) {&#xA;    id&#xA;  }&#xA;}&#xA;======================================================================&#xA;type Mutation {&#xA;    updateApple(input: UpdateAppleInput!): Apple&#xA;}&#xA;======================================================================&#xA;input UpdateAppleInput {&#xA;    id: ID!&#xA;    type: String&#xA;    price: Float!&#xA;}&#xA;======================================================================&#xA;</code></pre>&#xA;<p><strong>Response mapping template which returns only id</strong></p>&#xA;<pre><code>## Raise a GraphQL field error in case of a datasource invocation error&#xA;#if($ctx.error)&#xA;    $utils.error($ctx.error.message, $ctx.error.type)&#xA;#end&#xA;&#xA;$utils.toJson($utils.rds.toJsonObject($ctx.result)[1][0])&#xA;&#xA;</code></pre>&#xA;<p><strong>Sample response below</strong> (I am expecting the updated &quot;Apple&quot; object):-</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;updateApple&quot;: {&#xA;      &quot;id&quot;: &quot;0b8bb23f-5613-4b67-8dcd-354ef8f617r5&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I am referring the example given in :&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-rds-resolvers.html#run-queries"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-rds-resolvers.html#run-queries</a>&#xA;And i specifically need the entire Apple object as response when i perform create or update mutations..</p>&#xA;<p>EDIT 1: Below response template works fine with a query. Why is it not working with a mutation? :</p>&#xA;<pre><code>$utils.toJson($utils.rds.toJsonObject($ctx.result)&#xA;</code></pre>&#xA;",13548254,,13548254,2021-12-08 16:19:55,2021-12-08 16:19:55,AWS Appsync schema query resolver response mapping,<graphql><amazon-rds><aws-appsync>,0,2,0,2021-12-07 12:50:55
70285308,2,,68520538,1,,"<p>If you want to keep to the <code>Amplify</code> way of doing things, you can use <a href=""https://docs.amplify.aws/cli-legacy/graphql-transformer/auth/#static-group-authorization"" rel=""nofollow noreferrer"">Authorization Rules</a>.</p>&#xA;<h4>Groups</h4>&#xA;<p>If users in an organization are in the same <code>Cognito</code> group, then you could use <code>Dynamic group authorization</code>. For example:</p>&#xA;<pre><code>type Sale @model @auth(rules: [{ allow: groups, groupsField: &quot;org&quot; }]) {&#xA;  id: ID!&#xA;  org: [String]&#xA;}&#xA;</code></pre>&#xA;<p>That way only sales people can only access sales who have a group/org matching their own.</p>&#xA;<h4>Attributes</h4>&#xA;<p>Or otherwise you can also use attributes of your users, with the <code>ownerField</code> directive as well.</p>&#xA;",4033292,,,,2021-12-09 05:54:37,"",,0,0,0,2021-12-09 05:54:37
70286295,1,,,1,35,"<p>It say &quot;Each rule is fallen through until a match is found against the corresponding operation. If no match is found, an error is thrown. You can think of rules as a big OR.&quot; in the documentation of <a href=""https://neo4j.com/docs/graphql-manual/current/auth/auth-directive/"" rel=""nofollow noreferrer"">Neo4j GraphQL Library</a>. But in fact it work as &quot;AND&quot;. My code looks like this:</p>&#xA;<pre><code>extend type Document @auth(rules: [{&#xA;  where: { owner: { id: &quot;$jwt.sub&quot; }}&#xA;}, {&#xA;  roles: [&quot;admin&quot;]&#xA;}])&#xA;</code></pre>&#xA;<p>I can only query using an admin account and comes out results belong to the admin user only. How can I set rules to allow both owner and admin to have access right? I tried to wrap them with a &quot;OR&quot;, but still not working.</p>&#xA;",17633208,,,,2021-12-09 07:48:11,"neo4j @auth directive how to ""OR"" between rules",<neo4j><graphql>,0,2,0,2021-12-09 07:48:11
70307706,2,,69664507,1,,"<p>Ok so I figured out how to do things here, in case it might help others.</p>&#xA;<p>Ftrst of all, we can use IAM without AWS cognito.</p>&#xA;<p>I had to:</p>&#xA;<ul>&#xA;<li>set up IAM as a default authorization from my Appsync app (AWS service)</li>&#xA;<li>set up the rules on the schema graphql:&#xA;such as:</li>&#xA;</ul>&#xA;<p><a href=""https://i.stack.imgur.com/pKc0W.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pKc0W.png"" alt=""enter image description here"" /></a></p>&#xA;<p>so now I can use an API key front-wise and IAM from my AWS Lam</p>&#xA;",10004939,,,,2021-12-10 16:36:49,"",,0,0,0,2021-12-10 16:36:49
70307925,1,,,0,218,"<p>I am using aws appsync and dynomoDB. I have a table called Payment and I want to create each item with an unique sequential number that is <code>PaymentNo</code>.</p>&#xA;<p>If we want to achive this, we have to get last inserted item in order to update the <code>PaymentNO</code> count. Actually, I don't know, &quot;how to get the last inserted item from table in the same resolver?</p>&#xA;<p>could anyone help me to write a resolver for this ?</p>&#xA;<h4>schema</h4>&#xA;<pre><code>type Payment @model(subscriptions: null) {&#xA;    id: ID!&#xA;    paid_amount: Float&#xA;    paid_date: AWSDate&#xA;    description: String&#xA;    PaymentNO: Int&#xA;}&#xA;</code></pre>&#xA;<h4>My request resolver</h4>&#xA;<pre><code>## [Start] Set default values. **&#xA;$util.qr($context.args.input.put(&quot;id&quot;, $util.defaultIfNull($ctx.args.input.id, $util.autoId())))&#xA;#set( $createdAt = $util.time.nowISO8601() )&#xA;&#xA;## Automatically set the createdAt timestamp. **&#xA;$util.qr($context.args.input.put(&quot;createdAt&quot;, $util.defaultIfNull($ctx.args.input.createdAt, $createdAt)))&#xA;&#xA;## Automatically set the updatedAt timestamp. **&#xA;$util.qr($context.args.input.put(&quot;updatedAt&quot;, $util.defaultIfNull($ctx.args.input.updatedAt, $createdAt)))&#xA;## [End] Set default values. **&#xA;&#xA;## [Start] Prepare DynamoDB PutItem Request. **&#xA;$util.qr($context.args.input.put(&quot;__typename&quot;, &quot;FeePayment&quot;))&#xA;#if( $modelObjectKey )&#xA;  #set( $condition = {&#xA;  &quot;expression&quot;: &quot;&quot;,&#xA;  &quot;expressionNames&quot;: {},&#xA;  &quot;expressionValues&quot;: {}&#xA;} )&#xA;  #foreach( $entry in $modelObjectKey.entrySet() )&#xA;    #if( $velocityCount == 1 )&#xA;      $util.qr($condition.put(&quot;expression&quot;, &quot;attribute_not_exists(#keyCondition$velocityCount)&quot;))&#xA;    #else&#xA;      $util.qr($condition.put(&quot;expression&quot;, &quot;$condition.expression AND attribute_not_exists(#keyCondition$velocityCount)&quot;))&#xA;    #end&#xA;    $util.qr($condition.expressionNames.put(&quot;#keyCondition$velocityCount&quot;, &quot;$entry.key&quot;))&#xA;  #end&#xA;#else&#xA;  #set( $condition = {&#xA;  &quot;expression&quot;: &quot;attribute_not_exists(#id)&quot;,&#xA;  &quot;expressionNames&quot;: {&#xA;      &quot;#id&quot;: &quot;id&quot;&#xA;  },&#xA;  &quot;expressionValues&quot;: {}&#xA;} )&#xA;#end&#xA;#if( $context.args.condition )&#xA;  #set( $condition.expressionValues = {} )&#xA;  #set( $conditionFilterExpressions = $util.parseJson($util.transform.toDynamoDBConditionExpression($context.args.condition)) )&#xA;  $util.qr($condition.put(&quot;expression&quot;, &quot;($condition.expression) AND $conditionFilterExpressions.expression&quot;))&#xA;  $util.qr($condition.expressionNames.putAll($conditionFilterExpressions.expressionNames))&#xA;  $util.qr($condition.expressionValues.putAll($conditionFilterExpressions.expressionValues))&#xA;#end&#xA;#if( $condition.expressionValues &amp;&amp; $condition.expressionValues.size() == 0 )&#xA;  #set( $condition = {&#xA;  &quot;expression&quot;: $condition.expression,&#xA;  &quot;expressionNames&quot;: $condition.expressionNames&#xA;} )&#xA;#end&#xA;{&#xA;  &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;  &quot;operation&quot;: &quot;PutItem&quot;,&#xA;  &quot;key&quot;: #if( $modelObjectKey ) $util.toJson($modelObjectKey) #else {&#xA;  &quot;id&quot;:   $util.dynamodb.toDynamoDBJson($ctx.args.input.id)&#xA;} #end,&#xA;  &quot;attributeValues&quot;: $util.dynamodb.toMapValuesJson($context.args.input),&#xA;  &quot;condition&quot;: $util.toJson($condition)&#xA;}&#xA;## [End] Prepare DynamoDB PutItem Request. **&#xA;</code></pre>&#xA;<h4>response resolver</h4>&#xA;<pre><code>#if( $ctx.error )&#xA;$util.error($ctx.error.message, $ctx.error.type)&#xA;#else&#xA;$util.toJson($ctx.result)&#xA;#end&#xA;</code></pre>&#xA;",13542935,,13542935,2021-12-10 17:01:25,2021-12-10 17:01:25,"How to get the last inserted item from dynamodb, after that create new item using Aws appsync",<amazon-web-services><graphql><amazon-dynamodb><aws-appsync>,0,3,0,2021-12-10 16:54:09
70320364,2,,70193501,-1,,"<p>You can use <a href=""https://casl.js.org/v5/en/"" rel=""nofollow noreferrer"">Casl</a> for that, it is a library for authorization. You can restrict than just the owner can manage its resources.</p>&#xA;",10803535,,,,2021-12-12 01:51:33,"",,0,0,0,2021-12-12 01:51:33
70323056,2,,70322621,0,,"<p>I have passed the API key in headers like this, in my case, I am calling APPSync Graphql endpoint which works with API key</p>&#xA;<pre><code>headers: {&#xA;        &quot;x-api-key&quot;: &quot;XXXX-XXXXXXX&quot;, // API key here&#xA;      },&#xA;</code></pre>&#xA;",5664873,,,,2021-12-12 11:16:27,"",,0,0,0,2021-12-12 11:16:27
70323228,2,,70322621,0,,"<p>You need to pass the right headers in your AppSync POST request. The required headers vary by&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/security-authz.html"" rel=""nofollow noreferrer"">authorization mode</a>. API Key auth is the default &quot;default authorization mode&quot;.  Check the AppSync console settings tab.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// API_KEY&#xA;headers: {&#xA;  `x-api-key`:  &quot;da2-the.api.key.from.the.appsync.console&quot;&#xA;}&#xA;&#xA;// AMAZON COGNITO_USER_POOLS&#xA;headers: {&#xA;  Authorization: &quot;ey.jwt.token.a.really.really.long.string.you.get.from.cognito.after.you.login&quot;,&#xA;  host: 'qnwb7jaoxdyky6egh4.appsync-api.us-east-1.amazonaws.com' // the middle bits of the URL&#xA;}&#xA;</code></pre>&#xA;",1103511,,1103511,2021-12-13 07:37:14,2021-12-13 07:37:14,"",,0,3,0,2021-12-12 11:45:01
70324614,1,,,2,231,"<p>I have a full stack amplify app using reactJS, Graphql and aws DynamoDB.&#xA;For customer purpose, i need to have the database host in my country (France). For now i have 30 tables store in aws dynamoDB, and i use GraphQL API in my front to query my data.</p>&#xA;<p>Is it possible to migrate all the tables and data to a server in france and link it to my aws amplify app and still using graphql API and graphQL Schema to query my new database ?</p>&#xA;<p>Kind regards.</p>&#xA;",10909075,,,,2021-12-12 18:17:33,AWS amplify and graphql - External Database,<amazon-web-services><graphql><aws-api-gateway><aws-amplify><aws-appsync>,1,0,0,2021-12-12 14:48:08
70326404,2,,70324614,0,,"<p>Yes.  An AppSync <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html"" rel=""nofollow noreferrer"">lambda resolver</a> is commonly used to &quot;proxy&quot; GraphQL calls to a database, which can be AWS or external.  This means writing lambda code to make client calls on the database and returning the result to AppSync.  Similarly, A <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-http-resolvers.html"" rel=""nofollow noreferrer"">http resolver</a> can return data to AppSync from any arbitrary HTTP endpoint like an external REST API.</p>&#xA;<p>In your case, though, wouldn't it be easier to migrate your DynamoDB tables or your all your app's AWS resources to <a href=""https://aws.amazon.com/local/france/paris/"" rel=""nofollow noreferrer"">AWS's eu-west-3 Paris Region</a>?</p>&#xA;",1103511,,,,2021-12-12 18:17:33,"",,0,0,0,2021-12-12 18:17:33
70333994,1,,,1,39,"<p>I'm using AWS Appsync graphql api.</p>&#xA;<p>Here's my schema:</p>&#xA;<pre><code>type Project @model {&#xA;  id: ID!&#xA;  name: String&#xA;  team: Team @connection&#xA;}&#xA;&#xA;type Team @model {&#xA;  id: ID!&#xA;  name: String!&#xA;}&#xA;</code></pre>&#xA;<p>when I run <code>amplify push</code> or <code>amplify update api</code>&#xA;I get this error <strong>Unknown directive &quot;connection&quot;.</strong></p>&#xA;<p>Error log from <code>amplify update api</code></p>&#xA;<pre class=""lang-sh prettyprint-override""><code> Unknown directive &quot;connection&quot;.&#xA;Error: Unknown directive &quot;connection&quot;.&#xA;    at assertValidSDL (/usr/local/lib/node_modules/@aws-amplify/cli/node_modules/graphql/validation/validate.js:108:11)&#xA;    at buildASTSchema (/usr/local/lib/node_modules/@aws-amplify/cli/node_modules/graphql/utilities/buildASTSchema.js:71:34)&#xA;    at validateModelSchema (/usr/local/lib/node_modules/@aws-amplify/cli/node_modules/@aws-amplify/graphql-transformer-core/src/transformation/validation.ts:145:32)&#xA;    at GraphQLTransform.transform (/usr/local/lib/node_modules/@aws-amplify/cli/node_modules/@aws-amplify/graphql-transformer-core/src/transformation/transform.ts:172:39)&#xA;    at _buildProject (/usr/local/lib/node_modules/@aws-amplify/cli/node_modules/amplify-provider-awscloudformation/src/graphql-transformer/transform-graphql-schema.ts:564:37)&#xA;    at buildAPIProject (/usr/local/lib/node_modules/@aws-amplify/cli/node_modules/amplify-provider-awscloudformation/src/graphql-transformer/transform-graphql-schema.ts:521:24)&#xA;    at transformGraphQLSchema (/usr/local/lib/node_modules/@aws-amplify/cli/node_modules/amplify-provider-awscloudformation/src/graphql-transformer/transform-graphql-schema.ts:394:29)&#xA;    at CfnApiArtifactHandler.updateArtifacts (/usr/local/lib/node_modules/@aws-amplify/cli/node_modules/@aws-amplify/amplify-category-api/src/provider-utils/awscloudformation/cfn-api-artifact-handler.ts:133:7)&#xA;    at Object.executeAmplifyCommand (/usr/local/lib/node_modules/@aws-amplify/cli/node_modules/@aws-amplify/amplify-category-api/src/index.ts:222:5)&#xA;    at executePluginModuleCommand (/usr/local/lib/node_modules/@aws-amplify/cli/src/execution-manager.ts:204:3)&#xA;    at executeCommand (/usr/local/lib/node_modules/@aws-amplify/cli/src/execution-manager.ts:30:5)&#xA;    at Object.run (/usr/local/lib/node_modules/@aws-amplify/cli/src/index.ts:205:5)&#xA;</code></pre>&#xA;<p>Please let me know if any other info is required? I'll edit the question.</p>&#xA;",14800765,,6485881,2021-12-13 12:31:32,2021-12-13 12:31:32,"Unknown directive ""connection"" -- AWS Appsync graphql",<amazon-web-services><graphql><aws-amplify><aws-appsync>,0,3,0,2021-12-13 11:35:54
70342713,2,,62773292,0,,<p>Just use &quot;lambda&quot;. In your case:</p>&#xA;<pre><code>child = graphene.Field(lambda:C.Child)&#xA;</code></pre>&#xA;<p>instead of:</p>&#xA;<pre><code>child = graphene.Field(C.Child)&#xA;</code></pre>&#xA;,8408613,,,,2021-12-14 01:13:57,"",,0,0,0,2021-12-14 01:13:57
70344412,2,,69194845,0,,"<p>This worked for me:</p>&#xA;<pre><code>   String delivery= r'''&#xA;      mutation list($list:[DeliveryTmpInput]){&#xA;      createDeliveryList(&#xA;        deliveryList: $list&#xA;      )&#xA;    }''';&#xA;</code></pre>&#xA;<p>Code:</p>&#xA;<pre><code>List requestedBody= [];&#xA;&#xA;for (var i = 0; i &lt; 4; i++) {&#xA;&#xA;  DeliveryTmpInput deliveryTmp= DeliveryTmpInput(&#xA;      '1234',&#xA;      'Vodka',&#xA;      '28',&#xA;   );&#xA;&#xA;  requestedBody.add(deliveryTmp);&#xA;}&#xA;&#xA;runMutation(&lt;String, dynamic&gt;{&#xA;  &quot;list&quot;: requestedBody&#xA;});&#xA;</code></pre>&#xA;",10448432,,472495,2022-03-13 07:58:30,2022-03-13 07:58:30,"",,0,1,0,2021-12-14 06:03:11
70354974,1,,,-1,160,"<p>In Graphql-Ruby docs, there is way to implement the Authorization such as visibility or accessibility in the arguments field, but i didn't understand clearly to implement myself,How do i do that?</p>&#xA;",14187332,,,,2021-12-15 15:52:05,Arguments Authorization in Graphql Ruby,<ruby-on-rails><graphql>,1,0,0,2021-12-14 20:09:09
70367801,1,,,0,113,"<p>I am practicing Graphql and AWS. I used simple serverless framework also create simple Graphql queries. I successfully create a DynamoDB table and able to make POST request by using Graphql Playground.</p>&#xA;<p>But I am having issue returning DynamoDB query result as a Graphql queries. What ever i am trying queries, I am getting null. Don't know how to fix this issue.</p>&#xA;<p><strong>This is my queries</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>type Query {&#xA;      item(id: ID!): Item&#xA;      allItem: Item&#xA;    }&#xA;    &#xA;    type Mutation {&#xA;      createItem(input: CreateItemInput!): Item&#xA;      updateItem(input: UpdateItemInput!): Item&#xA;      deleteItem(input: DeleteItemInput!): Item&#xA;    }&#xA;    &#xA;    type Item {&#xA;      id: ID!&#xA;      content: String&#xA;    }&#xA;    &#xA;    input CreateItemInput {&#xA;      content: String!&#xA;    }&#xA;    &#xA;    input UpdateItemInput {&#xA;      id: ID!&#xA;      content: String!&#xA;    }&#xA;    &#xA;    input DeleteItemInput {&#xA;      id: ID!&#xA;    }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p><strong>This is Post request. And It works as expected</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>    import AWS from 'aws-sdk';&#xA;    import { CreateItemInput } from '../../generated/schema';&#xA;    import { v4 } from 'uuid';&#xA;    &#xA;    async function createItem(_: unknown, { input }: { input: CreateItemInput }) {&#xA;      const dynamoDb = new AWS.DynamoDB.DocumentClient();&#xA;      const id = v4();&#xA;    &#xA;      const params = {&#xA;        TableName: process.env.ITEM_TABLE ? process.env.ITEM_TABLE : '',&#xA;        Item: {&#xA;          PK: id,&#xA;          SK: 'CONTENT',&#xA;          GSI1PK: 'CONTENT',&#xA;          content: input.content,&#xA;        },&#xA;      };&#xA;    &#xA;      await dynamoDb.put(params).promise();&#xA;    &#xA;      return {&#xA;        ...input,&#xA;        id,&#xA;      };&#xA;    }&#xA;    &#xA;    export default createItem;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p><a href=""https://i.stack.imgur.com/ptPLk.png"" rel=""nofollow noreferrer"">I do post request like this</a></p>&#xA;<p><strong>This is how I am trying to get single data. Where I can see the data in console but in Graphql Playground it returns me null</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code> import AWS from 'aws-sdk';&#xA;        &#xA;    async function item(_: unknown, input: { id: string }) {&#xA;      const dynamoDb = new AWS.DynamoDB.DocumentClient();&#xA;    &#xA;      const params = {&#xA;        TableName: process.env.ITEM_TABLE ? process.env.ITEM_TABLE : '',&#xA;        KeyConditionExpression: 'PK = :hkey AND SK = :skey',&#xA;        ExpressionAttributeValues: {&#xA;          ':hkey': input.id,&#xA;          ':skey': 'CONTENT',&#xA;        },&#xA;        Limit: 1,&#xA;      };&#xA;    &#xA;      const { Items } = await dynamoDb.query(params).promise();&#xA;    &#xA;      console.log(Items);  // ATTACH CONSOLE RESULT BELOW&#xA;    &#xA;      return {&#xA;        Items,&#xA;      };&#xA;    }&#xA;    &#xA;    export default item;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p><a href=""https://i.stack.imgur.com/XypA4.png"" rel=""nofollow noreferrer"">Console result</a>   <a href=""https://i.stack.imgur.com/eY5t1.png"" rel=""nofollow noreferrer"">Play ground result</a></p>&#xA;<p><strong>This is how I am trying to get all the data. Where I can see all the datas in console but in Graphql Playground it returns me null</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>    import AWS from 'aws-sdk';&#xA;        &#xA;    async function allItem() {&#xA;      const dynamoDb = new AWS.DynamoDB.DocumentClient();&#xA;    &#xA;      const params = {&#xA;        TableName: process.env.ITEM_TABLE ? process.env.ITEM_TABLE : '',&#xA;        IndexName: 'GSI1',&#xA;        KeyConditionExpression: 'GSI1PK = :hkey',&#xA;        ExpressionAttributeValues: {&#xA;          ':hkey': 'CONTENT',&#xA;        },&#xA;      };&#xA;    &#xA;      const { Items } = await dynamoDb.query(params).promise();&#xA;    &#xA;      console.log(Items); // ATTACH CONSOLE RESULT BELOW&#xA;    &#xA;      return { Items }; // this returns null&#xA;    }&#xA;    &#xA;    export default allItem;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;&#xA;<a href=""https://i.stack.imgur.com/4PaHA.png"" rel=""nofollow noreferrer"">Console result</a></p>&#xA;",12494839,,,,2021-12-15 17:21:47,How to DynamoDb query result return as Graphql query,<amazon-web-services><graphql><amazon-dynamodb><dynamodb-queries>,0,0,0,2021-12-15 17:21:47
70381428,1,,,1,230,"<p>I am practicing Graphql and AWS. I used simple serverless framework also create simple Graphql schema. I deployed the schema(seems like this <code>graphql.schema</code> file does not deploy), resolvers to AWS. It successfully create a DynamoDB table and lambda. I can able  make POST/GET request via Graphql Playground by using serverless-offline. But the issue is the the api end-point does not work. It's show me <code>internal server error</code>. I was investigating the issue. From cloud watch I found the local schema which I created the Lambda function did find the <code>graphql.schema</code>. This is the error I am getting <code>&quot;ENOENT: no such file or directory, open './src/graphql/schema.graphql'&quot;.</code>&#xA;<strong>This is the lambda error <a href=""https://i.stack.imgur.com/3Xj9c.png"" rel=""nofollow noreferrer"">Image</a></strong></p>&#xA;<p><strong>This is my lambda function</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>import { ApolloServer } from 'apollo-server-lambda';&#xA;import { ApolloServerPluginLandingPageGraphQLPlayground } from 'apollo-server-core';&#xA;import runWarm from '../utils/run-warm';&#xA;import fs from 'fs';&#xA;&#xA;const schema = fs.readFileSync('./src/graphql/schema.graphql', 'utf8'); // This is local my schema &#xA;import resolvers from '../resolvers';&#xA;&#xA;const server = new ApolloServer({&#xA;  typeDefs: schema,&#xA;  resolvers,&#xA;  introspection: true,&#xA;  plugins: [ApolloServerPluginLandingPageGraphQLPlayground()],&#xA;});&#xA;&#xA;export default runWarm(&#xA;  server.createHandler({&#xA;    expressGetMiddlewareOptions: {&#xA;      cors: {&#xA;        origin: '*',&#xA;        credentials: true,&#xA;        allowedHeaders: ['Content-Type', 'Origin', 'Accept'],&#xA;        optionsSuccessStatus: 200,&#xA;      },&#xA;    },&#xA;  })&#xA;);</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p><strong>This is my serverless YAML file</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>service: serverless-aws-graphql&#xA;&#xA;package:&#xA;  individually: true&#xA;&#xA;provider:&#xA;  name: aws&#xA;  profile: ${env:profile}&#xA;  runtime: nodejs14.x&#xA;  stage: ${env:stage}&#xA;  region: eu-north-1&#xA;  timeout: 30&#xA;  apiName: ${self:service.name}-${self:provider.stage}&#xA;  environment:&#xA;    ITEM_TABLE: ${self:service}-items-${self:provider.stage}&#xA;  iamRoleStatements:&#xA;    - Effect: Allow&#xA;      Action:&#xA;        - dynamodb:Query&#xA;        - dynamodb:Scan&#xA;        - dynamodb:GetItem&#xA;        - dynamodb:PutItem&#xA;        - dynamodb:UpdateItem&#xA;        - dynamodb:DeleteItem&#xA;      Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.ITEM_TABLE}'&#xA;&#xA;  apiGateway:&#xA;    shouldStartNameWithService: true&#xA;&#xA;custom:&#xA;  webpack:&#xA;    webpackConfig: ./webpack.config.js&#xA;    includeModules: true&#xA;    packager: 'npm' # Packager that will be used to package your external modules&#xA;  warmup:&#xA;    enabled: true&#xA;    events:&#xA;      - schedule: rate(5 minutes)&#xA;    prewarm: true&#xA;    concurrency: 1&#xA;  prune:&#xA;    automatic: true&#xA;    number: 5&#xA;&#xA;functions:&#xA;  graphql:&#xA;    handler: src/handlers/graphql.default&#xA;    events:&#xA;      - http:&#xA;          path: ${env:api_prefix}/graphql&#xA;          method: any&#xA;          cors: true&#xA;&#xA;resources:&#xA;  Resources:&#xA;    ItemsTable:&#xA;      Type: 'AWS::DynamoDB::Table'&#xA;      Properties:&#xA;        AttributeDefinitions:&#xA;          - AttributeName: PK&#xA;            AttributeType: S&#xA;          - AttributeName: SK&#xA;            AttributeType: S&#xA;          - AttributeName: GSI1PK&#xA;            AttributeType: S&#xA;          - AttributeName: GSI1SK&#xA;            AttributeType: S&#xA;        KeySchema:&#xA;          - AttributeName: PK&#xA;            KeyType: HASH&#xA;          - AttributeName: SK&#xA;            KeyType: RANGE&#xA;        ProvisionedThroughput:&#xA;          ReadCapacityUnits: 1&#xA;          WriteCapacityUnits: 1&#xA;        GlobalSecondaryIndexes:&#xA;          - IndexName: GSI1&#xA;            KeySchema:&#xA;              - AttributeName: GSI1PK&#xA;                KeyType: HASH&#xA;              - AttributeName: GSI1SK&#xA;                KeyType: RANGE&#xA;            Projection:&#xA;              ProjectionType: ALL&#xA;            ProvisionedThroughput:&#xA;              ReadCapacityUnits: 1&#xA;              WriteCapacityUnits: 1&#xA;        TableName: ${self:provider.environment.ITEM_TABLE}&#xA;&#xA;plugins:&#xA;  - serverless-webpack&#xA;  - serverless-offline&#xA;  - serverless-plugin-warmup&#xA;  - serverless-dotenv-plugin&#xA;  - serverless-prune-plugin</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p><strong>This is my webpack.config.js setup</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>const nodeExternals = require('webpack-node-externals');&#xA;const slsw = require('serverless-webpack');&#xA;&#xA;module.exports = {&#xA;  entry: slsw.lib.entries,&#xA;  target: 'node',&#xA;  mode: slsw.lib.webpack.isLocal ? 'development' : 'production',&#xA;  externals: [nodeExternals()],&#xA;  module: {&#xA;    rules: [&#xA;      {&#xA;        test: /\.tsx?$/,&#xA;        use: 'ts-loader',&#xA;        exclude: /node_modules/,&#xA;      },&#xA;    ],&#xA;  },&#xA;  resolve: {&#xA;    extensions: ['.tsx', '.ts', '.js', '.jsx'],&#xA;  },&#xA;};</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p><strong>This my tsconfig setup</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>{&#xA;  ""compilerOptions"": {&#xA;    ""target"": ""esnext"",&#xA;    ""allowJs"": true,&#xA;    ""skipLibCheck"": false,&#xA;    ""esModuleInterop"": true,&#xA;    ""allowSyntheticDefaultImports"": true,&#xA;    ""strict"": true,&#xA;    ""forceConsistentCasingInFileNames"": true,&#xA;    ""module"": ""esnext"",&#xA;    ""moduleResolution"": ""node"",&#xA;    ""resolveJsonModule"": true,&#xA;    ""noEmit"": false,&#xA;    ""jsx"": ""preserve"",&#xA;    ""noUnusedLocals"": true,&#xA;    ""noUnusedParameters"": true&#xA;  },&#xA;  ""include"": [&#xA;    ""src/**/*""&#xA;  ],&#xA;  ""exclude"": [&#xA;    ""node_modules"",&#xA;  ]&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",12494839,,12494839,2021-12-17 10:52:45,2021-12-17 10:52:45,"AWS-LAMBDA: no such file or directory, open './src/graphql/schema.graphql'",<amazon-web-services><aws-lambda><graphql><serverless><graphql-schema>,1,0,0,2021-12-16 15:17:33
70385557,1,,,4,394,"<p>I am creating DataStore Amplify API with several entities having owner authorization rule.&#xA;After starting application I see lots of errors like this:</p>&#xA;<pre><code>31:28.602 DataStore - subscriptionError, Connection failed: {&quot;errors&quot;:[{&quot;errorType&quot;:&quot;Unauthorized&quot;,&quot;message&quot;:&quot;Not Authorized to access onCreateUnit on type Subscription&quot;}]}&#xA;</code></pre>&#xA;<p>I noticed these errors are related to entities with public auth rule.&#xA;After I sign in with created user I still see entities from another user, that means owner authorization rule is not working by some reason.</p>&#xA;<p>Steps to reproduce:</p>&#xA;<p><strong>amplify init:</strong></p>&#xA;<pre><code>Initialize the project with the above configuration? No&#xA;? Enter a name for the environment dev&#xA;? Choose your default editor: IntelliJ IDEA&#xA;? Choose the type of app that you're building javascript&#xA;Please tell us about your project&#xA;? What javascript framework are you using react-native&#xA;? Source Directory Path:  src&#xA;? Distribution Directory Path: /&#xA;? Build Command:  npm build&#xA;? Start Command: npm start&#xA;Using default provider  awscloudformation&#xA;? Select the authentication method you want to use: AWS profile&#xA;</code></pre>&#xA;<p><strong>amplify add auth:</strong></p>&#xA;<pre><code>Using service: Cognito, provided by: awscloudformation&#xA;The current configured provider is Amazon Cognito. &#xA;Do you want to use the default authentication and security configuration? Default configuration&#xA;Warning: you will not be able to edit these selections. &#xA;How do you want users to be able to sign in? Email&#xA;Do you want to configure advanced settings? Yes, I want to make some additional changes.&#xA;Warning: you will not be able to edit these selections. &#xA;What attributes are required for signing up? Email&#xA;</code></pre>&#xA;<p><strong>amplify add api:</strong></p>&#xA;<pre><code>? Select from one of the below mentioned services: GraphQL&#xA;? Here is the GraphQL API that we will create. Select a setting to edit or continue Authorization modes: API key (default, expiration time: 7 days from now)&#xA;? Choose the default authorization type for the API Amazon Cognito User Pool&#xA;Use a Cognito user pool configured as a part of this project.&#xA;? Configure additional auth types? No&#xA;? Here is the GraphQL API that we will create. Select a setting to edit or continue Conflict detection (required for DataStore): Disabled&#xA;? Enable conflict detection? Yes&#xA;? Select the default resolution strategy Auto Merge&#xA;? Here is the GraphQL API that we will create. Select a setting to edit or continue Continue&#xA;? Choose a schema template: Blank Schema&#xA;</code></pre>&#xA;<p>My model in <code>schema.graphql</code>:</p>&#xA;<pre><code>type Exercise @model @auth(rules: [{allow: owner}]) {&#xA;  id: ID!&#xA;  name: String&#xA;  routines: [Routine] @manyToMany(relationName: &quot;RoutineExercise&quot;)&#xA;  muscles: [Muscle] @manyToMany(relationName: &quot;ExerciseMuscle&quot;)&#xA;  Histories: [History] @hasMany(indexName: &quot;byExercise&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Routine @model @auth(rules: [{allow: owner}]) {&#xA;  id: ID!&#xA;  name: String&#xA;  planName: String&#xA;  Exercises: [Exercise] @manyToMany(relationName: &quot;RoutineExercise&quot;)&#xA;}&#xA;&#xA;type Unit @model @auth(rules: [{allow: public}]) {&#xA;  id: ID!&#xA;  name: String&#xA;  isActive: Boolean&#xA;}&#xA;</code></pre>&#xA;<p>Then I did:</p>&#xA;<pre><code>amplify push&#xA;amplify codegen models&#xA;</code></pre>&#xA;<p>Here is how I initialize Amplify in App.js:</p>&#xA;<pre><code>  useEffect(() =&gt; {&#xA;    Amplify.configure({&#xA;      ...config,&#xA;      Analytics: {&#xA;        disabled: true,&#xA;      },&#xA;    });&#xA;    const result = checkAuthState();&#xA;    store.dispatch(fetchRoutines);&#xA;  }, []);&#xA;</code></pre>&#xA;<p>My app authentication looks like this:</p>&#xA;<pre><code>  async function signIn() {&#xA;    try {&#xA;      await Auth.signIn(username, password);&#xA;      updateAuthState('loggedIn');&#xA;      &#xA;    } catch (error) {&#xA;      console.log('Error signing in...', error);&#xA;    }&#xA;  }&#xA;&#xA;  async function checkAuthState() {&#xA;    await Auth.currentAuthenticatedUser()&#xA;      .then((data) =&gt; {&#xA;        setUserLoggedIn('loggedIn');&#xA;      }).catch((error) =&gt; {&#xA;        setUserLoggedIn('loggedOut');&#xA;      })&#xA;  }&#xA;&#xA;  &lt;Provider store={store} &gt;&#xA;      &lt;NavigationContainer&gt;&#xA;        {isUserLoggedIn === 'initializing' &amp;&amp; &lt;Initializing /&gt;}&#xA;        {isUserLoggedIn === 'loggedIn' &amp;&amp; (&#xA;          &lt;AppNavigator updateAuthState={updateAuthState} /&gt;&#xA;        )}&#xA;        {isUserLoggedIn === 'loggedOut' &amp;&amp; (&#xA;          &lt;AuthenticationNavigator updateAuthState={updateAuthState} /&gt;&#xA;        )}&#xA;      &lt;/NavigationContainer&gt;&#xA;    &lt;/Provider&gt;&#xA;</code></pre>&#xA;<p>What am I doing wrong? I was just following Amplify Docs and it's not working, please help...</p>&#xA;",2015948,,,,2021-12-16 20:58:30,Amplify DataStore subscriptionError,<amazon-web-services><react-native><graphql><aws-amplify><aws-amplify-cli>,0,0,0,2021-12-16 20:58:30
70385811,1,,,0,171,"<p>I’m having a trouble with a mutation in my graphql endpoint,</p>&#xA;<p>Endpoint can work fine with queries: listPosts and getPost, and mutation createPost.</p>&#xA;<p>But I can’t do updatePost and deletePost, I’m receiving error “Unsupported element“</p>&#xA;<p>Graphql api was creature using Amplify</p>&#xA;<p>Here is the code and result:</p>&#xA;<pre><code>&#xA;mutation MyMutation {&#xA;    updatePost(input: {&#xA;        id: &quot;c18c389d-f2be-4229-a38e-8de97cf8d601&quot;,&#xA;    titulo: &quot;Sisisisisisi&quot; &#xA;  }) {&#xA;    id&#xA;    titulo &#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Result:</p>&#xA;<pre><code>&#xA;{&#xA;  &quot;data&quot;: {&#xA;    &quot;updatePost&quot;: null&#xA;  },&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;path&quot;: [&#xA;        &quot;updatePost&quot;&#xA;      ],&#xA;      &quot;data&quot;: null,&#xA;      &quot;errorType&quot;: &quot;MappingTemplate&quot;,&#xA;      &quot;errorInfo&quot;: null,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 9,&#xA;          &quot;column&quot;: 2,&#xA;          &quot;sourceName&quot;: null&#xA;        }&#xA;      ],&#xA;      &quot;message&quot;: &quot;Unsupported element '$[operation]'.&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>Can I get help from you?</p>&#xA;<p>Thanks</p>&#xA;<p><a href=""https://github.com/aws-amplify/amplify-cli/issues/9330"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/9330</a></p>&#xA;",2180622,,,,2021-12-16 21:26:28,how can I do update in Amplify GraphQL?,<amazon-web-services><aws-lambda><graphql><amplify>,0,0,0,2021-12-16 21:26:28
70393386,1,70455842,,1,107,"<p>I would like to include the token names in results when querying the <a href=""https://thegraph.com/hosted-service/subgraph/uniswap/uniswap-v3"" rel=""nofollow noreferrer"">Uniswap v3 Subgraph</a>, using the following query:</p>&#xA;<pre><code>{&#xA;    pools (top: 10) {&#xA;      id,&#xA;    feesUSD,&#xA;    token0 {&#xA;      id        // do something like Token(id: token0.id) {symbol, name},&#xA;      },&#xA;    token1 {&#xA;      id&#xA;    }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Renders data like this:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;pools&quot;: [&#xA;      {&#xA;        &quot;feesUSD&quot;: &quot;0.001849193372604300017804758202164034&quot;,&#xA;        &quot;id&quot;: &quot;0x0001fcbba8eb491c3ccfeddc5a5caba1a98c4c28&quot;,&#xA;        &quot;token0&quot;: {&#xA;          &quot;id&quot;: &quot;0xbef81556ef066ec840a540595c8d12f516b6378f&quot;&#xA;        },&#xA;        &quot;token1&quot;: {&#xA;          &quot;id&quot;: &quot;0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2&quot;&#xA;        }&#xA;      },&#xA;</code></pre>&#xA;<p>The token0 and token1 hash IDs are returned and would like to return the Token.symbol values by passing in the token ID.</p>&#xA;<p>I only see single-level type queries on the <a href=""https://docs.uniswap.org/sdk/subgraph/subgraph-examples"" rel=""nofollow noreferrer"">Uniswap Subquery Examples page.</a>  How can this be accomplished?</p>&#xA;",172359,,,,2021-12-22 22:37:38,How to wire nested queries in Graph QL?,<graphql><uniswap>,1,0,0,2021-12-17 12:45:32
70401205,1,,,0,406,<p>On Hasura's GraphQl explore the unbale to find the aggregate option. Manually typing query also resulting in error.</p>&#xA;,9447304,,,,2021-12-18 05:29:44,Unable to find aggregate in Hasura,<sql><postgresql><graphql><hasura>,1,0,0,2021-12-18 05:29:44
70401206,2,,70401205,0,,"<p>The problem is other then admin account for others we have to enable the <strong>Aggregation queries permissions</strong></p>&#xA;<p>For every table <strong><code>Table -&gt; Permissions -&gt; Click select option on that role -&gt; Aggregation queries permissions -&gt; Enable -&gt; Save</code></strong></p>&#xA;<p><a href=""https://i.stack.imgur.com/bpH7f.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bpH7f.png"" alt=""Hasura aggregate permission"" /></a></p>&#xA;<p>Now once you refresh your explorer you will get the aggregate listed in your query console for that table.</p>&#xA;",9447304,,,,2021-12-18 05:29:44,"",,0,0,0,2021-12-18 05:29:44
70403527,2,,70400365,0,,"<p>GraphQL services typically <a href=""https://graphql.org/learn/serving-over-http/"" rel=""nofollow noreferrer"">interact with clients over HTTP</a> with <code>POST</code> requests. Clients send JSON in the request and receive JSON in the response.</p>&#xA;<p>Some use cases benefit from a GraphQL client library like <a href=""https://www.apollographql.com/docs/react/"" rel=""nofollow noreferrer"">Apollo Client</a>, but plain old cURL works fine:</p>&#xA;<pre class=""lang-sh prettyprint-override""><code># request&#xA;curl --location --request POST 'https://swapi-graphql.netlify.app/.netlify/functions/index' \&#xA;--header 'Content-Type: application/json' \&#xA;--data-raw '{&quot;query&quot;:&quot;query Query($filmId: ID) {\n  film(filmID: $filmId) {\n    title\n }\n}&quot;,&quot;variables&quot;:{&quot;filmId&quot;:1}}'&#xA;</code></pre>&#xA;<pre class=""lang-sh prettyprint-override""><code># response&#xA;{&quot;data&quot;:{&quot;film&quot;:{&quot;title&quot;:&quot;A New Hope&quot;}}}&#xA;</code></pre>&#xA;<p>An <a href=""https://docs.aws.amazon.com/lambda/latest/dg/welcome.html"" rel=""nofollow noreferrer"">AWS Lambda</a> (AWS's serverless function service) would be a fine way to implement a scheduled GraphQL api call and apply business logic.  The Lambda service integrates well with <a href=""https://docs.aws.amazon.com/lambda/latest/dg/services-cloudwatchevents.html"" rel=""nofollow noreferrer"">cron-scheduled triggering</a> and <a href=""https://docs.aws.amazon.com/sns/latest/dg/sns-event-sources-and-destinations.html"" rel=""nofollow noreferrer"">results notification</a>.  It's easy <a href=""https://aws.amazon.com/getting-started/hands-on/run-serverless-code/"" rel=""nofollow noreferrer"">to get started</a>.  You can set up the service by pointing-and-clicking in the AWS console. Or use a infrastructure-as-code library like AWS's <a href=""https://aws.amazon.com/serverless/sam/"" rel=""nofollow noreferrer"">SAM</a> (i.e. define your infra in YAML) or <a href=""https://aws.amazon.com/cdk/"" rel=""nofollow noreferrer"">CDK</a> (i.e. define your infra in JS/Python/etc).  Or in a squillion more ways.</p>&#xA;<p>The other cloud providers have similar offerings, take your pick.</p>&#xA;",1103511,,,,2021-12-18 12:43:20,"",,0,0,0,2021-12-18 12:43:20
70412840,1,,,2,341,"<p>On the Server, I defined the enum and query in the schema:</p>&#xA;<pre><code>type Query {&#xA;    hello: String!&#xA;    getData(dataType: DataType!): [DataPoint]&#xA;} &#xA;&#xA;enum DataType {&#xA;        ACCOUNT,&#xA;        USER,&#xA;        COMPANY&#xA;    }&#xA;...&#xA;</code></pre>&#xA;<p>On the Client:</p>&#xA;<pre><code>export const GET_DATA = gql`&#xA;    query($dataType: DataType) {&#xA;        getData(dataType: $dataType) {&#xA;          ...&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;<p>Whenever I try calling the query in the ApolloClient I get a validation error since Apollo expects the value, not as a string, so instead of &quot;ACCOUNT&quot;, it expects ACCOUNT. Trying to pass integer values obviously also doesn't do the trick.</p>&#xA;<pre><code>  const dataResponse = useQuery(GET_DATA, {&#xA;       variables: { dataType: &quot;ACCOUNT&quot; },&#xA;  });&#xA;</code></pre>&#xA;<p>What would I need to change about the server or client-side implementation to be able to correctly pass the Enum value as a variable? Ideally, I would like to have the possibility to pass the string value into the useQuery method.</p>&#xA;",13051961,,,,2022-10-22 20:02:16,GraphQL Apollo Enum in Query,<typescript><graphql><apollo><apollo-client><apollo-server>,1,0,0,2021-12-19 15:34:58
70414504,2,,70411255,9,,"<p>You are mixing dependencies from CDK V1 and the <a href=""https://docs.aws.amazon.com/cdk/v2/guide/migrating-v2.html"" rel=""noreferrer"">newly released CDK V2</a>, which are incompatible.</p>&#xA;<p>To get a valid V2 setup, change the AppSync package to <code>import * as appsync from '@aws-cdk/aws-appsync-alpha'</code>.  In V2, alpha&#xA;APIs have separate packages, stable ones are in a common <code>aws-cdk-lib</code>.  AppSync's L2 constructs are in the alpha category.</p>&#xA;<p>Here is an overview of import patterns for both CDK versions:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// V2&#xA;import { Construct } from 'constructs'; // construct is in a separate package&#xA;import { Stack, StackProps, aws_s3 as s3 } from 'aws-cdk-lib'; // common package for stable construct&#xA;import * as appsync from '@aws-cdk/aws-appsync-alpha'  // alpha constructs in separate packages&#xA;&#xA;// V1 - separate packages core and for each service&#xA;import * as cdk from '@aws-cdk/core';&#xA;import * as appsync from '@aws-cdk/aws-appsync';&#xA;</code></pre>&#xA;",1103511,,,,2021-12-19 19:06:40,"",,0,3,0,2021-12-19 19:06:40
70416761,1,70429820,,0,866,"<p>I'm trying to do some appsync in the console using a userpool user who is a part of the group.</p>&#xA;<p>However, my query is returning <code>null</code> in the response.</p>&#xA;<p>The below PK in my <code>query</code> definitely exists.</p>&#xA;<p>I suspect that the issue is related to cognito. I can't pin it down exactly. The user I am testing is in the <code>customers</code> group and I am not receiving an error there due to cognito group permissions.</p>&#xA;<p>Logs are not helpful.</p>&#xA;<p>If I create a new API in the console (using an API key rather than cognito for auth) and import the dynamodb table (using the same role), the same query returns data.</p>&#xA;<p>Do I need to give my cognito group a role that allows them to interact with appsync?</p>&#xA;<p>My query:</p>&#xA;<pre><code>query MyQuery {&#xA;    getTable(PK: &quot;PRODUCT#cb699976-153c-4852-a455-bc9a7bce6a93&quot;, SK: &quot;PRODUCT#BLEND&quot;) {&#xA;        DK1&#xA;        PK&#xA;        SK&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>The response:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;getTable&quot;: null&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>The Schema:</p>&#xA;<pre><code>type Query {&#xA;    getTable(PK: String!, SK: String!): Table&#xA;        @aws_auth(cognito_groups: [&quot;customers&quot;])&#xA;    }&#xA;&#xA;type Table @aws_auth(cognito_groups: [&quot;customers&quot;]) {&#xA;    DK1: String&#xA;    PK: String!&#xA;    SK: String!&#xA;}&#xA;</code></pre>&#xA;<p>iam role for dynamodb (least permission access is still todo)</p>&#xA;<pre><code>{&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Sid&quot;: &quot;&quot;,&#xA;            &quot;Effect&quot;: &quot;Allow&quot;,&#xA;            &quot;Action&quot;: &quot;dynamodb:*&quot;,&#xA;            &quot;Resource&quot;: [&#xA;                &quot;arn:aws:dynamodb:us-east-1:blah_account:table/blah_table/index/GSI1&quot;,&#xA;                &quot;arn:aws:dynamodb:us-east-1:blah_account:table/blah_table&quot;&#xA;            ]&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>appsync role trust relationship</p>&#xA;<pre><code>{&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;        &quot;Sid&quot;: &quot;&quot;,&#xA;        &quot;Effect&quot;: &quot;Allow&quot;,&#xA;        &quot;Principal&quot;: {&#xA;            &quot;Service&quot;: &quot;appsync.amazonaws.com&quot;&#xA;        },&#xA;        &quot;Action&quot;: &quot;sts:AssumeRole&quot;&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>appsync config (<code>$ aws appsync get-graphql-api</code>):</p>&#xA;<pre><code>{&#xA;    &quot;graphqlApi&quot;: {&#xA;        &quot;name&quot;: &quot;blah_dev_appsync&quot;,&#xA;        &quot;apiId&quot;: &quot;blah&quot;,&#xA;        &quot;authenticationType&quot;: &quot;AMAZON_COGNITO_USER_POOLS&quot;,&#xA;        &quot;userPoolConfig&quot;: {&#xA;            &quot;userPoolId&quot;: &quot;us-east-1_blah&quot;,&#xA;            &quot;awsRegion&quot;: &quot;us-east-1&quot;,&#xA;            &quot;defaultAction&quot;: &quot;DENY&quot;&#xA;        },&#xA;        &quot;arn&quot;: &quot;arn:aws:appsync:us-east-1:blah_id:apis/blah_&quot;,&#xA;        &quot;xrayEnabled&quot;: false&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",6004338,,,,2021-12-21 01:45:30,Appsync Query Returning Null with Cognito Auth,<amazon-web-services><graphql><amazon-cognito><aws-appsync>,2,0,0,2021-12-20 02:09:54
70418324,2,,70416761,1,,"<p>Can you check if there is a resolver attached to your (failing) Appsync API ?</p>&#xA;<p>If you have access to the web console look for this screen:&#xA;<a href=""https://i.stack.imgur.com/Kbcyd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Kbcyd.png"" alt=""Appsync Console UI"" /></a></p>&#xA;<p>If there is nothing attached to <code>getTable</code> then that's probably why you are having null answers.&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/configuring-resolvers.html"" rel=""nofollow noreferrer"">Resolvers Docs</a></p>&#xA;",13273628,,,,2021-12-20 06:57:25,"",,0,1,0,2021-12-20 06:57:25
70428686,1,,,0,20,"<p>Given <a href=""https://github.com/Uniswap/v3-subgraph/blob/main/schema.graphql"" rel=""nofollow noreferrer"">this</a> GraphQL schema, when I get the response using <a href=""https://www.npmjs.com/package/graphql-request"" rel=""nofollow noreferrer"">the GraphQL-Request client</a>, how to I apply it so I can access so response data is cast to a selected object within the schema?</p>&#xA;<pre><code>async function main() {&#xA;&#xA;  const graphQLClient = new GraphQLClient(endpoint, {&#xA;    headers: {&#xA;      authorization: '',&#xA;    },&#xA;  })&#xA;  &#xA;  const query = gql`&#xA;    {&#xA;        pools(first:2, orderBy: txCount, orderDirection: desc) {&#xA;        token0{&#xA;          name,&#xA;          symbol,&#xA;          volumeUSD,&#xA;          totalSupply&#xA;        }&#xA;        token1{&#xA;          name,&#xA;          symbol,&#xA;          volumeUSD,&#xA;          totalSupply&#xA;        }&#xA;        token0Price,&#xA;        token1Price,&#xA;        txCount&#xA;      }&#xA;    }&#xA;  `&#xA;&#xA;  const data = await request(endpoint, query)&#xA;  console.log(JSON.stringify(data, undefined, 2))&#xA;&#xA;  // var json = JSON.parse(data);  // SyntaxError: Unexpected token o in JSON at position 1&#xA;&#xA;  console.log(data.pools.length);&#xA;  &#xA;  &#xA;}&#xA;&#xA;main().catch((error) =&gt; console.error(error))&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/s2juG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/s2juG.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Pool type is defined in the schema:</p>&#xA;<pre><code>type Pool @entity {&#xA;  # pool address&#xA;  id: ID!&#xA;  # creation&#xA;  createdAtTimestamp: BigInt!&#xA;  # block pool was created at&#xA;  createdAtBlockNumber: BigInt!&#xA;  # token0&#xA;...&#xA;</code></pre>&#xA;<p>Response <code>data</code> contains an array of <code>pools</code> I would like to iterate through the array, filter for some value, i.e. poolList[x].token0.name.contains='xxxx'&quot;, cast as an object of type <code>pool</code> and store in a separate array.</p>&#xA;<p>I'm also open to using a different, recommended GraphQL query tool.</p>&#xA;",172359,,172359,2021-12-20 22:48:57,2021-12-20 22:48:57,How do you apply an external GraphQL schema to a JavaScript response object?,<javascript><graphql><schema>,0,0,0,2021-12-20 22:25:08
70429820,2,,70416761,1,,"<p>Thanks to Ivan Caracamo's response, I learned that I needed to properly configure my resolvers.</p>&#xA;<p>I was able to get there with the <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/configuring-resolvers.html"" rel=""nofollow noreferrer"">resolver docs</a> and this <a href=""https://forums.aws.amazon.com/thread.jspa?threadID=278475"" rel=""nofollow noreferrer"">post</a>.</p>&#xA;<p>Here's my request template</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;version&quot;: &quot;2017-02-28&quot;,&#xA;  &quot;operation&quot;: &quot;GetItem&quot;,&#xA;  &quot;key&quot;: {&#xA;    &quot;PK&quot;: $util.dynamodb.toDynamoDBJson($ctx.args.PK),&#xA;    &quot;SK&quot;: $util.dynamodb.toDynamoDBJson($ctx.args.SK),&#xA;  },&#xA;}&#xA;</code></pre>&#xA;<p>And here's my response template</p>&#xA;<pre class=""lang-json prettyprint-override""><code>$util.toJson($ctx.result)&#xA;</code></pre>&#xA;",6004338,,,,2021-12-21 01:45:30,"",,0,0,0,2021-12-21 01:45:30
70434735,1,70463040,,1,239,"<pre><code>type StudentCourses&#xA;  @model(queries: null)&#xA;  @auth(rules: [{ allow: public }])&#xA;  @key(name: &quot;byStudent&quot;, fields: [&quot;studentID&quot;, &quot;courseID&quot;])&#xA;  @key(name: &quot;byCourse&quot;, fields: [&quot;courseID&quot;, &quot;studentID&quot;]) {&#xA;  id: ID!&#xA;  studentID: ID!&#xA;  courseID: ID!&#xA;  student: Student! @connection(fields: [&quot;studentID&quot;])&#xA;  course: Course! @connection(fields: [&quot;courseID&quot;])&#xA;}&#xA;&#xA;type Course&#xA;  @model&#xA;  @auth(rules: [{ allow: public }])&#xA;  @key(name: &quot;bySchool&quot;, fields: [&quot;schoolID&quot;]) {&#xA;  id: ID!&#xA;  courseName: String!&#xA;  schoolID: ID!&#xA;  students: [Student!] @connection(keyName: &quot;byCourse&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Student&#xA;  @model&#xA;  @auth(rules: [{ allow: public }])&#xA;  @key(name: &quot;bySchool&quot;, fields: [&quot;schoolID&quot;]) {&#xA;  id: ID!&#xA;  studentName: String&#xA;  studentEmail: String&#xA;  sisID: Int&#xA;  schoolID: ID!&#xA;  courses: [Course!] @connection(keyName: &quot;byStudent&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>I followed the steps in <a href=""https://docs.amplify.aws/cli-legacy/graphql-transformer/connection/#many-to-many-connections"" rel=""nofollow noreferrer"">docs</a> to create  a many to many relationship between student and courses but i keep getting this error <strong>Key byCourse does not exist for model Student</strong> even thought i created a model to connect school and courses. Thanks in advance</p>&#xA;",16487943,,,,2021-12-23 13:50:25,How to create a many to many relationship in amplify datastore using schema.graphql,<amazon-web-services><graphql><aws-amplify><aws-appsync>,1,0,0,2021-12-21 11:31:24
70437414,1,,,0,14,"<p>Within an AWS Amplify application, a Lambda function has been created to resolve custom GraphQL mutations in AWS AppSync. This Lambda function has been slightly modified from <a href=""https://docs.amplify.aws/guides/functions/graphql-from-lambda/q/platform/android/#mutation"" rel=""nofollow noreferrer"">the example mutation function</a> found in the official documentation. The AppSync API has been using <code>Amazon Cognito User Pool</code> as the default authorization mode until this function was required. This function only mutates the data in DynamoDB if the default authorization mode is changed to <code>API key</code>. When the default authorization mode is set to Amazon Cognito User Pools, the function runs successfully and returns HTTP 200, but the data is not updated in DynamoDB. <code>API key</code> has been configured as an additional authorization provider within the AppSync settings, but the mutation only works if <code>API key</code> is the default authorization mode.</p>&#xA;<p>The function is mutating AppSync instead of writing directly to DynamoDB in order to trigger GraphQL subscriptions when the item is updated.</p>&#xA;<p>How can this function be executed successfully while still using  <code>Amazon Cognito User Pool</code> as the default authorization mode? Is this possible?</p>&#xA;",2149462,,,,2021-12-21 14:55:39,Why does a Lambda function only mutate GraphQL if the default authorization mode is set to API Key,<aws-lambda><graphql><aws-amplify><aws-appsync>,0,0,0,2021-12-21 14:55:39
70439948,1,70440382,,0,188,"<p>This might have been asked before, but I am not able to make my query work even after following the steps mentioned in one of the posts here in Stackoverflow.&#xA;Here is the graphql query I am calling on the button click</p>&#xA;<pre><code>void findUserOnBol() async {&#xA;  try {&#xA;      String graphQLDocument = '''query findUser(\$id: ID!) {&#xA;      findUser(userId: \$id) {&#xA;      id&#xA;    }&#xA;  }''';&#xA;      var operation = Amplify.API.query(&#xA;        request: GraphQLRequest&lt;String&gt;(&#xA;            document: graphQLDocument,&#xA;            apiName: 'API_KEY',&#xA;            variables: {'id': 'USER-14161234567'}));&#xA;&#xA;    var response = await operation.response;&#xA;    Map&lt;String, dynamic&gt; data = jsonDecode(response.data) as Map&lt;String,dynamic&gt;;&#xA;    print(data);&#xA;    print(data['id]);&#xA;  } on ApiException catch (e) {&#xA;    print('Query failed: $e');&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>In the above query the <code>print(data['id'])</code> statement always return null even when there is data returned, below is the result of the operation -</p>&#xA;<pre><code>flutter: {findUser: {id: USER-14161234567}} //printing data returns valid data&#xA;flutter: null //printing data['id'] returns null.&#xA;</code></pre>&#xA;",3826733,,,,2021-12-21 18:59:16,Decode GraphQL query result in dart,<flutter><dart><graphql>,1,0,0,2021-12-21 18:18:31
70442634,1,,,2,242,"<p>I am trying to hit my graph endpoint to get the playground to pop up in my browser. The server shows from serverless that it is running by presenting me with the below figure when I do an <code>npm start</code> .</p>&#xA;<p><a href=""https://i.stack.imgur.com/G99ey.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/G99ey.png"" alt=""serverless terminal display"" /></a></p>&#xA;<p>However, when I actually go to click on that link it gives me a 502 and spits out the following error in my terminal:</p>&#xA;<pre><code>``offline: ANY /dev/graphql (λ: graphql)&#xA;offline: Failure: Cannot find module '/Users/aroe/Desktop/projects/test-serverless-backend/src/functions/graph/graphql'&#xA;Require stack:&#xA; - /Users/aroe/Desktop/projects/test-serverless-backend/node_modules/serverless-offline/dist/lambda/handler-runner/in-process-runner/InProcessRunner.js&#xA; - /Users/aroe/Desktop/projects/test-serverless-backend/node_modules/serverless-offline/dist/lambda/handler-runner/in-process-runner/index.js&#xA; - /Users/aroe/Desktop/projects/test-serverless-backend/node_modules/serverless-offline/dist/lambda/handler-runner/HandlerRunner.js&#xA; - /Users/aroe/Desktop/projects/test-serverless-backend/node_modules/serverless-offline/dist/lambda/handler-runner/index.js&#xA; - /Users/aroe/Desktop/projects/test-serverless-backend/node_modules/serverless-offline/dist/lambda/LambdaFunction.js&#xA; - /Users/aroe/Desktop/projects/test-serverless-backend/node_modules/serverless-offline/dist/lambda/LambdaFunctionPool.js&#xA; - /Users/aroe/Desktop/projects/test-serverless-backend/node_modules/serverless-offline/dist/lambda/Lambda.js&#xA; - /Users/aroe/Desktop/projects/test-serverless-backend/node_modules/serverless-offline/dist/lambda/index.js&#xA; - /Users/aroe/Desktop/projects/test-serverless-backend/node_modules/serverless-offline/dist/ServerlessOffline.js&#xA; - /Users/aroe/Desktop/projects/test-serverless-backend/node_modules/serverless-offline/dist/index.js&#xA; - /Users/aroe/Desktop/projects/test-serverless-backend/node_modules/serverless-offline/dist/main.js&#xA; - /opt/homebrew/lib/node_modules/serverless/lib/classes/PluginManager.js&#xA; - /opt/homebrew/lib/node_modules/serverless/lib/Serverless.js&#xA; - /opt/homebrew/lib/node_modules/serverless/scripts/serverless.js&#xA; - /opt/homebrew/lib/node_modules/serverless/bin/serverless.js&#xA; ``&#xA;</code></pre>&#xA;<p>I believe it is telling me that it can't find my lambda reference in my serverless.yml file BUT, the path I set is correct as shown here:</p>&#xA;<pre><code>service: gamitrak-backend # service name&#xA;provider:&#xA;  name: aws # deploy to AWS&#xA;  runtime: nodejs12.x&#xA;  versionFunctions: false # disable function versioning&#xA;  region: us-west-2 # AWS region&#xA;  apiGateway:&#xA;    shouldStartNameWithService: true&#xA;&#xA;functions:&#xA;  graphql:&#xA;    handler: src/functions/graph/graphql.graphqlHandler # Lambda handler path&#xA;    events:&#xA;      - http:&#xA;          path: graphql # define Lambda endpoint&#xA;          method: any # any HTTP method can access this Lambda&#xA;          cors: true # enable CORS&#xA;plugins:&#xA;  - serverless-offline&#xA;</code></pre>&#xA;<p>Also, here is the graphql.ts file in question for further reference:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>import { ApolloServer, gql } from 'apollo-server-lambda';&#xA;import { usersTypeDefs, usersResolvers } from './schema/users';&#xA;&#xA;// get the GraphQL schema&#xA;&#xA;// resolver functions&#xA;&#xA;const server = new ApolloServer({ typeDefs: usersTypeDefs, resolvers: usersResolvers });&#xA;&#xA;// launch the server when the Lambda is called&#xA;exports.handler = server.createHandler();</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",11858370,,,,2022-07-27 17:59:48,Cannot Find Module using Serverless and apollo-server-lambda/graphql,<typescript><graphql><apollo>,1,0,0,2021-12-21 23:27:22
70444741,1,,,1,28,"<p>I want to delete the whole column at once if there 1000's of data deleting one by one is time consuming so is there any best way to do it</p>&#xA;<p><a href=""https://i.stack.imgur.com/zlkQu.png"" rel=""nofollow noreferrer"">Deleting this column</a></p>&#xA;<p>And my next question is I need to add new column with default value aftering deleting</p>&#xA;<p>i.e :</p>&#xA;<h2>id |  x  | y |  z</h2>&#xA;<ol>&#xA;<li>|  A  | B |  C</li>&#xA;<li>|  A  | B |  C</li>&#xA;<li>|  A  | B |  C</li>&#xA;<li>|  A  | B |  C</li>&#xA;</ol>&#xA;<p>If above is the the table with thousands of data , I want to delete &quot;z&quot; and add &quot;newColumn&quot; with default value of &quot;D&quot; as below</p>&#xA;<h2>id |  x |  y |  newColumn</h2>&#xA;<ol>&#xA;<li>|  A |  B |   D</li>&#xA;<li>|  A |  B |   D</li>&#xA;<li>|  A |  B |   D</li>&#xA;<li>|  A |  B |   D</li>&#xA;</ol>&#xA;",15249921,,,,2021-12-22 05:48:21,Delete column and Add column with default value Amplify graphql DynamoDB Appsync,<graphql><amazon-dynamodb><aws-amplify><aws-appsync>,0,0,0,2021-12-22 05:48:21
70446305,1,70462388,,2,586,<p>I'm using flutter with graphql/client library.&#xA;I'm trying to create a string for a gql query that has a where condition:</p>&#xA;<pre><code>const getUsers = &quot;&quot;&quot;&#xA;query getUsers(\$nameToSearch: String!) {&#xA;   users(where: {name: {_ilike: %\$nameToSearch%}}) {&#xA;      id&#xA;      name&#xA;   }&#xA;}&#xA;&quot;&quot;&quot;;&#xA;</code></pre>&#xA;<p>the problem is that I don't know how to insert the '%' symbol in that string... the example is wrong and I tried all the combinations.&#xA;Online I found only basic examples that doesn't use the '%' symbol</p>&#xA;<p>What is the correct syntax?</p>&#xA;,8830281,,8830281,2021-12-22 09:05:25,2021-12-23 12:51:59,How to use _like with '%' in a graphql string?,<flutter><graphql>,1,1,0,2021-12-22 08:45:30
70462721,1,,,0,48,"<p>I have the following schema for an amplify project using GraphQL API:</p>&#xA;<pre><code>type SomeItem&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner, operations: [create, delete, update] }&#xA;    ]&#xA;  ){&#xA;  id: ID!&#xA;  owner: String&#xA;  version: Int!&#xA;  text: String&#xA;  read: Boolean @auth(rules: [{ allow: owner, operations: [create, delete] }])&#xA;  createdAt: AWSDateTime&#xA;  updatedAt: AWSDateTime&#xA;}&#xA;</code></pre>&#xA;<p>What I want to be able to do is for only the Owner to create/update/delete every field.</p>&#xA;<p>I want to allow anybody to update the read field only.  I have tried the above to make the read field less restrictive but it's not working.  How can I make one field in the model less restrictive than the other fields?  Do I need to set an @auth for each field individually?</p>&#xA;",4718413,,,,2021-12-23 13:23:09,How can I set one field to be less restricted in an Amplify GraphQL API schema?,<graphql><amazon-dynamodb><aws-amplify>,0,2,0,2021-12-23 13:23:09
70463040,2,,70434735,2,,"<p>You need to omit <code>keyName</code> from <code>Course</code>, since in <code>Student</code> model, you have list of courses, so you can't really have <code>@key</code> directive for that.</p>&#xA;<p><a href=""https://docs.amplify.aws/cli-legacy/graphql-transformer/connection/#many-to-many-connections"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli-legacy/graphql-transformer/connection/#many-to-many-connections</a></p>&#xA;<pre><code>type Course&#xA;  @model&#xA;  @auth(rules: [{ allow: public }])&#xA;  @key(name: &quot;bySchool&quot;, fields: [&quot;schoolID&quot;]) {&#xA;  id: ID!&#xA;  courseName: String!&#xA;  schoolID: ID!&#xA;  students: [Student!] @connection(fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;</code></pre>&#xA;",8763264,,,,2021-12-23 13:50:25,"",,0,1,0,2021-12-23 13:50:25
70485844,2,,69310171,0,,"<p>Amplify Datastore is an offline first datastore. And it uses sqlite on flutter. what you need to do is clearly connect to your amplify studio by adding another plugin to your amplify config.&#xA;Add the api plugin to flutter</p>&#xA;<pre class=""lang-sh prettyprint-override""><code>flutter pub add amplify_api&#xA;</code></pre>&#xA;<p>and change the init config so that,&#xA;this:</p>&#xA;<pre class=""lang-dart prettyprint-override""><code>Amplify.addPlugin(AmplifyDataStore(modelProvider: ModelProvider.instance));&#xA;  try {&#xA;    await Amplify.configure(amplifyconfig);&#xA;  } catch (e) {&#xA;    print(&quot;Amplify is alreay configured&quot;);&#xA;  }&#xA;</code></pre>&#xA;<p>becomes this:</p>&#xA;<pre class=""lang-dart prettyprint-override""><code>final store = Amplify.addPlugin(AmplifyDataStore(modelProvider: ModelProvider.instance));&#xA;final api = AmplifyAPI();&#xA; await Amplify.addPlugins([api, store]);&#xA;  try {&#xA;&#xA;    await Amplify.configure(amplifyconfig);&#xA;  } catch (e) {&#xA;    print(&quot;Amplify is alreay configured&quot;);&#xA;  }&#xA;&#xA;</code></pre>&#xA;",16368682,,,,2021-12-26 10:48:34,"",,0,0,0,2021-12-26 10:48:34
70493774,2,,70486558,0,,"<p>DNS information is not currently part of the <a href=""https://developers.cloudflare.com/analytics/graphql-api/features/data-sets#available-data-sets"" rel=""nofollow noreferrer"">GraphQL datasets</a>. But you can use the standard Cloudflare API to retrieve DNS Analytics data: <a href=""https://api.cloudflare.com/#dns-analytics-properties"" rel=""nofollow noreferrer"">here is the documentation (DNS Analytics)</a></p>&#xA;",968570,,,,2021-12-27 09:33:27,"",,0,0,0,2021-12-27 09:33:27
70494312,2,,70438328,2,,"<p>The problem can be with the <code>$utils.appendError</code> VTL method (line 10 of the Response Mapping Template).</p>&#xA;<p>Based on your Response mapping template, if there is an error in the Velocity parsing, AppSync will throw an error (line 2).</p>&#xA;<p>If there is no error, the Velocity parser will evaluate the response (<code>$ctx.result</code>) and send back the <code>body</code> if the <code>statusCode</code> is equal to 200. So far so good. The problem is if the <code>statusCode</code> is different from 200 (line 9).</p>&#xA;<p>In that case, AppSync should also throw an error. But you are using the <code>$util.appendError</code>. In that case, VTL will add error information to the context and will keep working to generate the result template. But because it does not do anything after this step, the generated template is empty (Template transformation yielded an empty response.).</p>&#xA;<p>the info from <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-util-reference.html"" rel=""nofollow noreferrer"">AppSync Resolver Mapping Util docs</a>:</p>&#xA;<blockquote>&#xA;<p>$util.appendError(String)</p>&#xA;<p>Appends a custom error. This can be used in request or response mapping templates if the template detects an error with the request or with the invocation result. Unlike $util.error(String), the template evaluation will not be interrupted, so that data can be returned to the caller.</p>&#xA;</blockquote>&#xA;<p>In GraphQL is possible to have a response that has a part that was successful and a part that was an error. That happens because the response probably is coming from two different resolvers. If one of them worked in the other doesn't, you can get the response both responses in the final GraphQL response. In that scenario, AppSync will add the success response to the expected GraphQL field and add the error to the context.</p>&#xA;<p>To solve your issue, instead of using <code>$util.appendError</code> use <code>$util.error</code> in line 10. With that, if your call failed, AppSync will add the error information and halt the VLT execution instead of try to perform the next steps to yield the result.</p>&#xA;",6471284,,,,2021-12-27 10:31:01,"",,0,1,0,2021-12-27 10:31:01
70516991,2,,70509601,0,,<p>It is possible to export and import Metadata:</p>&#xA;<p><em>Settings--&gt; Metadata Actions --&gt; Export and Import metadata</em>.</p>&#xA;<p>You can easily export and import the JSON file provided that the underlying databases are identical (or you can try to edit manually the JSON).</p>&#xA;<p>Metadata can be found in the Postgres DB (usually in a single Row):</p>&#xA;<ul>&#xA;<li>schema <code>hbd_catalog</code></li>&#xA;<li>table <code>hbd_metadata</code></li>&#xA;</ul>&#xA;,15213074,,15213074,2021-12-29 08:48:22,2021-12-29 08:48:22,"",,0,0,0,2021-12-29 08:38:19
70520076,1,,,3,341,"<pre><code> mutation insert {&#xA;  insert_ArticleType(objects: {id: 10, name: &quot;test&quot;, spaceId: 10, creationDate: &quot;&quot;}) {&#xA;    affected_rows&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>When I run this query with x-hasura-role equals &quot;reader-space&quot;(here the &quot;reader-space&quot; role not configured with insert table permission) I get an error that is given below,</p>&#xA;<pre><code> {&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;extensions&quot;: {&#xA;        &quot;path&quot;: &quot;$&quot;,&#xA;        &quot;code&quot;: &quot;validation-failed&quot;&#xA;      },&#xA;      &quot;message&quot;: &quot;no mutations exist&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>My question is, is it possible to configure this error message? Because here, the role don't have the permission to do mutation. So I want to retrieve a more meaningfull message from mutation. Is it possible?</p>&#xA;",12198981,,12198981,2022-01-02 16:14:21,2022-01-02 16:14:21,Is it possible customize Hasura mutation/query Error messages?,<hasura><graphql-mutation>,0,1,0,2021-12-29 13:25:27
70523375,2,,64140993,8,,"<p>I just spent several hours battling this same issue.  For me, I had to specify the authMode on the graphql request.</p>&#xA;<p>Rather than doing something like this:</p>&#xA;<pre><code>await API.graphql(graphqlOperation(createFamily, {input: family}))&#xA;</code></pre>&#xA;<p>I had to use this:</p>&#xA;<pre><code>await API.graphql({&#xA;        query: createFamily,&#xA;        variables: {input: family},&#xA;        authMode: 'AMAZON_COGNITO_USER_POOLS'&#xA;      })&#xA;</code></pre>&#xA;<p>I did try the solution from user patwords.  However, nothing I did on the schema was effective (including adding @aws_cognito_user_pools as indicated).</p>&#xA;<p>Unfortunately, the Amplify documentation does not do a good job documenting the process.  I hope this helps someone else save a bit of time.</p>&#xA;",1100148,,,,2021-12-29 18:18:23,"",,0,1,0,2021-12-29 18:18:23
70526355,2,,70523096,0,,"<p>If the auth for the API is API Key, Basic, Windows, or AAD, you can use the Web connector.  For other Authentication scenarios you may need a <a href=""https://learn.microsoft.com/en-us/power-query/startingtodevelopcustomconnectors"" rel=""nofollow noreferrer"">custom connector</a>.</p>&#xA;<p>And I would use the Advanced Power Query Editor for this, rather than trying to configure it through the Wizard.</p>&#xA;<p>EG</p>&#xA;<pre><code>let&#xA;    uri = &quot;https://countries.trevorblades.com&quot;,&#xA;    query = &quot;{&#xA;  country(code: &quot;&quot;BR&quot;&quot;) {&#xA;    name&#xA;    native&#xA;    capital&#xA;    emoji&#xA;    currency&#xA;    languages {&#xA;      code&#xA;      name&#xA;    }&#xA;  }&#xA;}&quot;,&#xA;    source = uri &amp; &quot;?query=&quot; &amp; Uri.EscapeDataString(query),&#xA;    resp = Web.Contents(source),&#xA;    json = Json.Document(resp,65001),&#xA;    data = json[data],&#xA;    country = data[country],&#xA;    #&quot;Converted to Table&quot; = Record.ToTable(country),&#xA;    #&quot;Pivoted Column&quot; = Table.Pivot(#&quot;Converted to Table&quot;, List.Distinct(#&quot;Converted to Table&quot;[Name]), &quot;Name&quot;, &quot;Value&quot;)&#xA;in&#xA;    #&quot;Pivoted Column&quot;&#xA;</code></pre>&#xA;",7297700,,7297700,2021-12-30 03:54:24,2021-12-30 03:54:24,"",,0,0,0,2021-12-30 00:34:10
70543410,1,,,0,453,"<p>Looking for some help with sorting my data with Apollo Federation.</p>&#xA;<p>I have built services (Accounts and Users) and a gateway. They are working nice, except I want to be able to filter with a bit more precision.</p>&#xA;<p>I query the accounts service, which uses the external users service to populate the <code>users</code> property of accounts. I want to only send back accounts that actually have users - right now it is fetching all accounts, and displaying the empty array for users (response shown below).</p>&#xA;<p>Here are the typeDefs for the two services.</p>&#xA;<pre><code>// Accounts.ts&#xA;export const AccountTypes = gql`&#xA;  type Account @key(fields: &quot;_id&quot;) {&#xA;    _id: ID!&#xA;    email: String!&#xA;    password: String&#xA;    role: Int!&#xA;    activation: Activation&#xA;    createdAt: Date!&#xA;    updatedAt: Date!&#xA;  }&#xA;  ...&#xA;  extend type Query {&#xA;    getAccounts(getAccountsInput: GetAccountsInput!): GetAccountsResponse!&#xA;  }&#xA;&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>and</p>&#xA;<pre><code>// Users.ts&#xA;  type User @key(fields: &quot;_id&quot;) @key(fields: &quot;account&quot;) {&#xA;    _id: ID!&#xA;    first_name: String&#xA;    last_name: String&#xA;    phone: String&#xA;    address: Address&#xA;    email: String!&#xA;    created_by: User&#xA;    stripe_customer_id: String&#xA;    stripe_connected_account_id: String&#xA;    profile_img: ID&#xA;    createdAt: Date!&#xA;    updatedAt: Date!&#xA;    account: Account!&#xA;  }&#xA;&#xA;  extend type Account @key(fields: &quot;_id&quot;) {&#xA;    _id: ID! @external&#xA;    users(getUsersInput: GetUsersInput!): GetUsersResponse!&#xA;      @requires(fields: &quot;_id&quot;)&#xA;  }&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;<hr />&#xA;<pre><code># Test Query/Variables&#xA;query GetAccounts($getAccountsInput: GetAccountsInput!, $getUsersInput: GetUsersInput!) {&#xA;  getAccounts(getAccountsInput: $getAccountsInput) {&#xA;    Account {&#xA;      _id&#xA;      users(getUsersInput: $getUsersInput) {&#xA;        User {&#xA;          _id&#xA;          email&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;# Variables&#xA;{&#xA;  &quot;getAccountsInput&quot;: {},&#xA;  &quot;getUsersInput&quot;: {&#xA;    &quot;email&quot;: {&#xA;      &quot;filterBy&quot;: &quot;REGEX&quot;,&#xA;      &quot;string&quot;: &quot;ab&quot;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<pre><code>#Current Response&#xA;{&#xA;  &quot;data&quot;: {&#xA;    &quot;getAccounts&quot;: {&#xA;      &quot;Account&quot;: [&#xA;        {&#xA;          &quot;_id&quot;: &quot;61cb980ffc13ae766c0006ab&quot;,&#xA;          &quot;users&quot;: {&#xA;            &quot;User&quot;: [&#xA;              {&#xA;                &quot;_id&quot;: &quot;61cb980ffc13ae766c0006aa&quot;,&#xA;                &quot;email&quot;: &quot;abroganfd@weibo.com&quot;&#xA;              }&#xA;            ]&#xA;          }&#xA;        },&#xA;        {&#xA;          &quot;_id&quot;: &quot;61cb980dfc13ae766c00031b&quot;,&#xA;          &quot;users&quot;: {&#xA;            &quot;User&quot;: []&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<hr />&#xA;<p>Notice how the second account that was returned has an empty array for <code>users</code>. I'd like to only get accounts that the users filter actually populates.</p>&#xA;<p>Any pointers to the right direction with this would be helpful! Thanks!</p>&#xA;",11871449,,,,2021-12-31 14:55:31,Apollo Federation - Require nested object from external service,<graphql><apollo-federation>,0,1,0,2021-12-31 14:55:31
70554364,1,,,0,58,"<p>I am using AWS Appsync with dynamoDB and trying to create a connection between two schema <strong>Course</strong> and <strong>Badges</strong> in which once course can have multiple badges list. While badges list are static (don't change it frequently). I tried this but it doesn't worked.</p>&#xA;<p><a href=""https://i.stack.imgur.com/9pOd5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9pOd5.png"" alt=""enter image description here"" /></a></p>&#xA;<pre><code>type Badge @model @auth(rules: [{allow: private}]) {&#xA;  id: ID!&#xA;  Name: String&#xA;}&#xA;&#xA;type Course @model @auth(rules: [{allow: private}]) {&#xA;  id: ID!&#xA;  badges: [Badge] @connection&#xA;}&#xA;</code></pre>&#xA;",7078805,,,,2022-11-12 21:20:17,AWS AppSync GraphQL one to many relation connection,<amazon-web-services><model><graphql><amazon-dynamodb><aws-appsync>,1,0,0,2022-01-02 07:43:41
70562373,1,70774353,,0,727,"<p>I have AWS AppSync API with DynamoDb and I can create and get data from it with <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-resolvers.html"" rel=""nofollow noreferrer"">DynamoDb Resolvers</a>. (VTL templates)</p>&#xA;<p>I am not sure how can I do the user input validation with VTL templates. I want to make sure the contact's &quot;firstName&quot; is between 2 - 30 characters in length.</p>&#xA;<p>How can I achieve this with VTL? Is there a way to do this kind of validation within the GraphQL schema itself?</p>&#xA;<p>Here's my GraphQL Schema,</p>&#xA;<pre><code>schema {&#xA;   query: Query&#xA;   mutation: Mutation&#xA;}&#xA;&#xA;type Mutation {&#xA;   createContact(contact: ContactInput!): Contact! &#xA;}&#xA;&#xA;type Contact {&#xA;    contactId: ID!&#xA;    firstName: String!&#xA;    lastName: String!&#xA;    email: String!&#xA;}&#xA;&#xA;input ContactInput {&#xA;    firstName: String!&#xA;    lastName: String!&#xA;    email: String!&#xA;}&#xA;</code></pre>&#xA;",5334658,,,,2022-01-19 16:34:34,Validate user input in AppSync DynamoDB Resolvers,<amazon-web-services><graphql><serverless><aws-appsync>,1,0,0,2022-01-03 06:36:17
70564020,1,,,0,200,"<p>I need to use graphQl endpoint for condition based. Exactly what i want, i need to update three parameters accountId, kycStatus and bankAccountStatus. If kycStatus have values need to update otherwise we dont need to pass in graphQl. Similary bankAccountStatus and accountId need to update if its have value. otherwise should not pass in graphQl query. How can i proceed?</p>&#xA;<p>here is graphQl query is</p>&#xA;<pre><code>mutation updateEmployeeDetails {&#xA;    updateStripeStatus(id: 3,&#xA;    accountId: &quot;26&quot;,&#xA;    type: &quot;supported_worker&quot;,&#xA;    kycStatus: &quot;verified&quot;,&#xA;    bankAccountStatus: &quot;verified&quot;&#xA;    ){&#xA;        accountId&#xA;    }&#xA;} &#xA;</code></pre>&#xA;",16896772,,,,2022-01-03 09:54:44,How to use graphQl mutation for update with condition?,<node.js><graphql>,0,0,0,2022-01-03 09:54:44
70568562,1,,,0,1288,"<p>I am using Typescript, ApolloServer, graphql, serverless, and Lambdas to build out my application. When running a <code>sls offline start</code> I am getting the following error:</p>&#xA;<pre><code>offline: Failure: Cannot find module '/Users/aroe/Desktop/projects/test-serverless-backend/functions/graph/graphql'&#xA;Require stack:&#xA;</code></pre>&#xA;<p>Here is my serverless.yml config</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>service: gamitrak-backend # service name&#xA;provider:&#xA;  name: aws # deploy to AWS&#xA;  runtime: nodejs12.x&#xA;  versionFunctions: false # disable function versioning&#xA;  region: us-west-2 # AWS region&#xA;  apiGateway:&#xA;    shouldStartNameWithService: true&#xA;&#xA;functions:&#xA;  graph:&#xA;    handler: /src/functions/graph/graphql.handler # Lambda handler path&#xA;    events:&#xA;      - http:&#xA;          path: graphql # define Lambda endpoint&#xA;          method: any # any HTTP method can access this Lambda&#xA;          cors: true # enable CORS&#xA;plugins:&#xA;  - serverless-offline</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>Under handler: we can see that it's trying to hit my function, here is that file when running a PWD command to show path</p>&#xA;<pre><code>/Users/aroe/Desktop/projects/test-serverless-backend/src/functions/graph&#xA;</code></pre>&#xA;<p>Here is the actual meat of the code that's attempting to be hit:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>import { ApolloServer, gql } from 'apollo-server-lambda';&#xA;import { usersTypeDefs, usersResolvers } from './schema/users';&#xA;&#xA;// get the GraphQL schema&#xA;&#xA;// resolver functions&#xA;&#xA;const server = new ApolloServer({ typeDefs: usersTypeDefs, resolvers: usersResolvers });&#xA;&#xA;// launch the server when the Lambda is called&#xA;export async function handler(_event: any, _context: any) {&#xA;  const handler = server.createHandler();&#xA;  console.log(handler);&#xA;  return handler;&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>My inclination is to think that it cannot hit the file for some reason? However, I am not sure why/how?</p>&#xA;<p>Here is all the version information for my stack in case it's relevant as to what serverless version I'm using.</p>&#xA;<p>Framework Core: 2.70.0&#xA;Plugin: 5.5.2&#xA;SDK: 4.3.0&#xA;Components: 3.18.1</p>&#xA;<p>Thank you all so much in advance!</p>&#xA;",11858370,,,,2022-01-03 16:17:15,Cannot Find Module with Serverless,<typescript><graphql><serverless><apollo-server>,0,1,0,2022-01-03 16:17:15
70572476,1,,,1,377,"<p>Assume the following SQL Server table structure</p>&#xA;<pre><code>dbo.users&#xA;(&#xA;    id int not null,&#xA;    favoriteBook int null --fk&#xA;)&#xA;&#xA;dbo.books&#xA;(&#xA;    id int not null,&#xA;    title nvarchar(max)&#xA;)&#xA;</code></pre>&#xA;<p>Assuming a user exists that has not entered in  their favorite book I'd like to use Hasura's GraphQL engine to search for all users and return the title of their favorite book if one exists, or null if it doesn't.</p>&#xA;<p>I'd expect something like this to work:</p>&#xA;<pre><code>query Users{&#xA;  users {&#xA;    id&#xA;    FavoriteBook {&#xA;      title&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>However when using this query the engine returns the following error:</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;extensions&quot;: {&#xA;        &quot;internal&quot;: {&#xA;          &quot;tag&quot;: &quot;unsuccessful_return_code&quot;,&#xA;          &quot;contents&quot;: [&#xA;            &quot;odbc_SQLExecDirectW&quot;,&#xA;            -1,&#xA;            &quot;[Microsoft][ODBC Driver 17 for SQL Server][SQL Server]JSON text is not properly formatted. Unexpected character '.' is found at position 4.[Microsoft][ODBC Driver 17 for SQL Server][SQL Server]JSON text is not properly formatted. Unexpected character '.' is found at position 4.&quot;&#xA;          ]&#xA;        },&#xA;        &quot;path&quot;: &quot;$&quot;,&#xA;        &quot;code&quot;: &quot;unexpected&quot;&#xA;      },&#xA;      &quot;message&quot;: &quot;sql server exception&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>The SQL generated by Hasura looks something like this:</p>&#xA;<pre><code>select&#xA;  isnull (&#xA;  (&#xA;    select&#xA;      [t_Users1].[id] as [id]&#xA;      ,json_query ( [or_books1].[json] ) as [FavoriteBook]&#xA;    from  [dbo].[users] as [t_Users1]&#xA;      outer apply&#xA;    (&#xA;      select&#xA;        isnull ((&#xA;                  select&#xA;                    [t_Books1].[id] as [id]&#xA;                  from  [dbo].[books] as [t_Books1]&#xA;                  where&#xA;                    (([t_Books1].[id]) = ([t_Users1].[favoriteBook]))&#xA;                  for json path, include_null_values, without_array_wrapper&#xA;                )&#xA;                ,'null'&#xA;               )&#xA;    ) as [or_Booksr1]([json])&#xA;    order by&#xA;      (&#xA;        select  null&#xA;      ) /* ORDER BY is required for OFFSET */ offset 0 rows fetch next 1000 rows only&#xA;    for json path, include_null_values&#xA;  )&#xA;  ,'[]'&#xA;         )&#xA;;&#xA;</code></pre>&#xA;<p>Ideally the output would look something like this:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;users&quot;: [&#xA;      {&#xA;        &quot;id&quot;: 254,&#xA;        &quot;favoriteBook&quot;: {&#xA;          &quot;id&quot;: 1,&#xA;          &quot;title&quot;: &quot;book about foo&quot;&#xA;        }&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: 892,&#xA;        &quot;favoriteBook&quot;: null&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",14986948,,13302,2022-01-04 05:17:47,2022-01-04 05:17:47,Hasura query that works similar to a SQL Left join,<sql-server><graphql><left-join><hasura>,0,5,0,2022-01-03 23:19:51
70577447,1,70643637,,7,241,"<p><strong>I am not using AWS AppSync for this app</strong>. I have created Graphql schema, I have made  my own resolvers. For each create, query, I have made each Lambda functions. I used DynamoDB Single table concept and it's Global secondary indexes.</p>&#xA;<p>It was ok for me, to create an Book item. In DynamoDB, the table looks like this: <a href=""https://i.stack.imgur.com/K9WSL.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/K9WSL.png"" alt=""enter image description here"" /></a>.</p>&#xA;<p>I am having issue with the return Graphql queries. After getting the <code>Items</code> from DynamoDB table, I have to use Map function then return the <code>Items</code> based on Graphql <code>type</code>. I feel like this is not efficient way to do that. Idk the best way query data. Also I am getting null both author and authors query.</p>&#xA;<p>This is my <a href=""https://gitlab.com/alak/aws-book-schema-graphql"" rel=""noreferrer"">gitlab-branch</a>.</p>&#xA;<p><strong>This is my Graphql Schema</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>import { gql } from 'apollo-server-lambda';&#xA;&#xA;const typeDefs = gql`&#xA;  enum Genre {&#xA;    adventure&#xA;    drama&#xA;    scifi&#xA;  }&#xA;&#xA;  enum Authors {&#xA;    AUTHOR&#xA;  }&#xA;&#xA;  # Root Query - all the queries supported by the schema&#xA;&#xA;  type Query {&#xA;    """"""&#xA;    All Authors query&#xA;    """"""&#xA;    authors(author: Authors): [Author]&#xA;    books(book: String): [Book]&#xA;  }&#xA;&#xA;  # Root Mutation - all the mutations supported by the schema&#xA;  type Mutation {&#xA;    createBook(input: CreateBook!): Book&#xA;  }&#xA;&#xA;  """"""&#xA;  One Author can have many books&#xA;  """"""&#xA;  type Author {&#xA;    id: ID!&#xA;    authorName: String&#xA;    book: [Book]!&#xA;  }&#xA;&#xA;  """"""&#xA;  Book Schema&#xA;  """"""&#xA;  type Book {&#xA;    id: ID!&#xA;    name: String&#xA;    price: String&#xA;    publishingYear: String&#xA;    publisher: String&#xA;    author: [Author]&#xA;    description: String&#xA;    page: Int&#xA;    genre: [Genre]&#xA;  }&#xA;&#xA;  input CreateBook {&#xA;    name: String&#xA;    price: String&#xA;    publishingYear: String&#xA;    publisher: String&#xA;    author: [CreateAuthor]&#xA;    description: String&#xA;    page: Int&#xA;    genre: [Genre]&#xA;  }&#xA;&#xA;  input CreateAuthor {&#xA;    authorName: String!&#xA;  }&#xA;`;&#xA;export default typeDefs;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p><strong>This is I created the Book Item</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>import AWS from 'aws-sdk';&#xA;import { v4 } from 'uuid';&#xA;import { CreateBook } from '../../generated/schema';&#xA;&#xA;async function createBook(_: unknown, { input }: { input: CreateBook }) {&#xA;  const dynamoDb = new AWS.DynamoDB.DocumentClient();&#xA;  const id = v4();&#xA;&#xA;  const authorsName = &#xA;    input.author &amp;&amp;&#xA;    input.author.map(function (item) {&#xA;      return item['authorName'];&#xA;    });&#xA;&#xA;  const params = {&#xA;    TableName: process.env.ITEM_TABLE ? process.env.ITEM_TABLE : '',&#xA;    Item: {&#xA;      PK: `AUTHOR`,&#xA;      SK: `AUTHORS#${id}`,&#xA;      GSI1PK: `BOOKS`,&#xA;      GSI1SK: `BOOK#${input.name}`,&#xA;      name: input.name,&#xA;      author: authorsName,&#xA;      price: input.price,&#xA;      publishingYear: input.publishingYear,&#xA;      publisher: input.publisher,&#xA;      page: input.page,&#xA;      description: input.description,&#xA;      genre: input.genre,&#xA;    },&#xA;  };&#xA;&#xA;  await dynamoDb.put(params).promise();&#xA;&#xA;  return {&#xA;    ...input,&#xA;    id,&#xA;  };&#xA;}&#xA;&#xA;export default createBook;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p><strong>This is how query the All Book</strong></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>import AWS from 'aws-sdk';&#xA;&#xA;async function books(_: unknown, input: { book: string }) {&#xA;  const dynamoDb = new AWS.DynamoDB.DocumentClient();&#xA;&#xA;  const params = {&#xA;    TableName: process.env.ITEM_TABLE ? process.env.ITEM_TABLE : '',&#xA;    IndexName: 'GSI1',&#xA;    KeyConditionExpression: 'GSI1PK = :hkey',&#xA;    ExpressionAttributeValues: {&#xA;      ':hkey': `${input.book}`,&#xA;    },&#xA;  };&#xA;&#xA;  const { Items } = await dynamoDb.query(params).promise();&#xA;&#xA;  const allBooks =  // NEED TO MAP THE FUNcTION THEN RETURN THE DATA BASED ON GRAPHQL //QUERIES.&#xA;    Items &amp;&amp;&#xA;    Items.map((i) =&gt; {&#xA;      const genre = i.genre.filter((i) =&gt; i);&#xA;      return {&#xA;        name: i.name,&#xA;        author: i.author,&#xA;        genre,&#xA;      };&#xA;    });&#xA;&#xA;  return allBooks;&#xA;}&#xA;&#xA;export default books;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p><strong>This my Author query and Image of the console result</strong></p>&#xA;<p><a href=""https://i.stack.imgur.com/l1lgS.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/l1lgS.png"" alt=""enter image description here"" /></a></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>import AWS from 'aws-sdk';&#xA;import { Author, Authors } from '../../generated/schema';&#xA;&#xA;async function authors(&#xA;  _: unknown,&#xA;  input: { author: Authors }&#xA;): Promise&lt;Author&gt; {&#xA;  const dynamoDb = new AWS.DynamoDB.DocumentClient();&#xA;&#xA;  const params = {&#xA;    TableName: process.env.ITEM_TABLE ? process.env.ITEM_TABLE : '',&#xA;    KeyConditionExpression: 'PK = :hkey',&#xA;    ExpressionAttributeValues: {&#xA;      ':hkey': `${input.author}`,&#xA;    },&#xA;  };&#xA;&#xA;  const { Items } = await dynamoDb.query(params).promise();&#xA;&#xA;  console.log({ Items }); // I can see the data but don't know how to returns the data like this below type without using map function&#xA;&#xA;  // type Author {&#xA;  //   id: ID!&#xA;  //   authorName: String&#xA;  //   book: [Book]!&#xA;  // }&#xA;&#xA;  return Items; // return null in Graphql play ground. &#xA;}&#xA;&#xA;export default authors;</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>Edit: current resolver map</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// resolver map - src/resolvers/index.ts&#xA;const resolvers = {&#xA;  Query: {&#xA;    books,&#xA;    authors,&#xA;    author,&#xA;    book,&#xA;  },&#xA;  Mutation: {&#xA;    createBook,&#xA;  },&#xA;};&#xA;</code></pre>&#xA;",12494839,,1103511,2022-01-09 17:12:56,2022-01-09 17:12:56,AWS Graphql lambda query,<amazon-web-services><aws-lambda><graphql><apollo-server>,1,5,0,2022-01-04 10:36:50
70593242,1,70597036,,4,635,"<p>For my project, I need to be able to query and change my data offline, syncing the changes whenever the connection is restored. Therefore, DynamoDB with Amplify Appsync and Datastore seems like the best option, but we are struggling with some conflicting recommendations.</p>&#xA;<p>Our data is structured around Items, which have Locations that should be changed and synced in real-time. As a Location could contain multiple Items and an Item could have multiple Locations, we deal with many-to-many relations. We should be able to query all Items, all Locations, all Locations for a single Item, all Items for a Location. This is the base requirement of the data structure, but we should be able to add queries for things like last modified items etc. Next to this, we have a multi-tenant setup, so there should be a way to authorize users to parts of the data. We will probably use user groups to filter the data.</p>&#xA;<p>Most resources online state that in order to take full advantage of DynamoDB, a single table design approach is the way to go. This would mean that we could use a structure as shown in this <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/bp-adjacency-graphs.html"" rel=""nofollow noreferrer"">documentation</a>, adding sortkeys to make additional queries.</p>&#xA;<p>The Datastore documentation says the @model directive should be used to be able to set up all mutations, queries and subscriptions. In order to make the relations between the Items and Locations, we should use the @manyToMany directive as stated <a href=""https://docs.amplify.aws/lib/datastore/relational/q/platform/js/#many-to-many"" rel=""nofollow noreferrer"">here</a>. All together this would result in the following schema:</p>&#xA;<pre><code>type Item &#xA;    @model&#xA;    @auth(rules: [{ allow: groups, groupsField: &quot;groups&quot; }])&#xA;    {&#xA;        ID: ID!&#xA;        groups: String!&#xA;        locations: [Location] @manyToMany(relationName: &quot;ItemLocation&quot;)&#xA;        ...&#xA;    }&#xA;&#xA;type Location &#xA;    @model&#xA;    @auth(rules: [{ allow: groups, groupsField: &quot;groups&quot; }])&#xA;    {&#xA;        ID: ID!&#xA;        groups: String!&#xA;        items: [Item] @manyToMany(relationName: &quot;ItemLocation&quot;)&#xA;        ...&#xA;    }&#xA;</code></pre>&#xA;<p>When we deploy this schema using the Amplify CLI, all resources are generated without problems. However, if we look at the DynamoDB tables, we find that there are multiple tables generated: Item, Location and ItemLocation. The @model directive automatically deploys a table, as does the  @manyToMany directive. Dynamodb documentation does not use these directives, so it should be possible to make a single table from the given requirements. I am not able to find how to do this from the Datastore/Amplify side, or how to connect Datastore to an existing DynamoDB as Datastore relies on the @model directive to store data locally (or that is what I suspect). This is not in line with the DynamoDB standard, and we would like to change this setup to a single table design.</p>&#xA;<p>I have been looking in the Amplify, Datastore and DynamoDB documentation and in online rescources, but was not able to find any guidance or solutions. Hopefully someone can push me in the right direction, thanks!</p>&#xA;",17840424,,,,2022-01-05 17:23:05,How to setup Amplify Datastore schema for single table design,<amazon-web-services><graphql><amazon-dynamodb><aws-amplify><aws-appsync>,1,0,0,2022-01-05 12:55:56
70597036,2,,70593242,5,,"<p><strong>TL;DR</strong>  Amplify's backend tools create the DynamoDB and Appsync boilerplate for you.  This high-level convenience comes at the cost of low-level control, including control over how many tables your app has.</p>&#xA;<p>You are right that the terminology can be confusing.  Here are some clarifications for you:</p>&#xA;<blockquote>&#xA;<p>For my project, I need to be able to query and change my data offline, syncing the changes whenever the connection is restored. Therefore, DynamoDB with Amplify Appsync and Datastore seems like the best option</p>&#xA;</blockquote>&#xA;<p>Datastore is not a constraint.  The <a href=""https://github.com/aws-amplify/amplify-js"" rel=""noreferrer"">Amplify js client</a>, including the client-side DataStore offline-synching magic works directly with AppSync.  You can build DynamoDB and AppSync resources yourself (without Amplify's backend abstractions) and <a href=""https://docs.amplify.aws/lib/datastore/sync/q/platform/js/#existing-backend"" rel=""noreferrer"">still use DataStore in the client</a>.</p>&#xA;<blockquote>&#xA;<p>Most resources online state that in order to take full advantage of DynamoDB, a single table design approach is the way to go.</p>&#xA;</blockquote>&#xA;<p>Often, not always.  Single-table design can have an efficiency payoff for many uses cases and is a solid default choice.  However, there are also <a href=""https://www.alexdebrie.com/posts/dynamodb-single-table/#when-not-to-use-single-table-design"" rel=""noreferrer"">cases in which the pattern is less helpful</a>.</p>&#xA;<blockquote>&#xA;<p>The @model directive automatically deploys a table, as does the @manyToMany directive. Dynamodb documentation does not use these directives, so it should be possible to make a single table from the given requirements</p>&#xA;</blockquote>&#xA;<p>Only when you ditch Amplify backend for a DIY solution.  The <code>@model</code> and <code>@manyToMany</code> directives are Amplify backend syntax that hints to the Amplify CLI how it should build the AppSync schema and DynamoDB tables.  Single-table designs use sophisticated compound key structures, which are beyond even the great powers of the Amplify backend CLI.</p>&#xA;<blockquote>&#xA;<p>how to connect Datastore to an existing DynamoDB as Datastore relies on the @model directive</p>&#xA;</blockquote>&#xA;<p>It connects via AppSync.  DataStore is a client-side tool (think Apollo Client) that works with AppSync.  DataStore has no instantiation in the Cloud.  AppSync resolvers call DynamoDB to read/write data.</p>&#xA;<blockquote>&#xA;<p>This is not in line with the DynamoDB standard, and we would like to change this setup to a single table design.</p>&#xA;</blockquote>&#xA;<p>In sum, your choice is between Amplify backend convenience + multiple tables or DIY flexibility + single table.  DataStore works with either option.</p>&#xA;",1103511,,,,2022-01-05 17:23:05,"",,0,2,0,2022-01-05 17:23:05
70609777,2,,69716998,3,,"<p>If you have ElasticSearch behind a VPC you'll see this error. Check this out</p>&#xA;<blockquote>&#xA;<p>AWS AppSync supports using Amazon OpenSearch Service from domains that you have provisioned in your own AWS account, provided they don’t exist inside a VPC</p>&#xA;</blockquote>&#xA;<p><a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-elasticsearch-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-elasticsearch-resolvers.html</a></p>&#xA;<p>This is an issue that has vexed me as well - the best solution I've managed is to create a lambda  proxy behind the same VPC as elastic search; have the lambda accept your ES search string pass it along and return the results to your AppSync resolver - AppSync can  use lambdas behind a VPC  (but for some reason not  OpenSearch)</p>&#xA;",2716330,,,,2022-01-06 15:49:55,"",,0,0,0,2022-01-06 15:49:55
70609932,2,,70609439,0,,"<p>The use of the junction table takes your data to its lowest possible normalised level, it should be used where there is something that could be duplicated across multiple entires such as a date or a time.</p>&#xA;<p>I cannot think of a specific example with a Chat and Chat User table, but one ive come across a lot is in relation to addresses.</p>&#xA;<p>As individuals both you and myself could live at the same address, but at different times. It wouldnt be appropriate to hold a date of when I lived at an address in a user table (as I could live at multiple addresses). It also wouldnt be appropriate to record a date in the address table (as this could lead to multiple address lines), as such you should end up with tables with the following design and data.</p>&#xA;<p>User_Table</p>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th>User_Id</th>&#xA;<th>User_Name</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td>U1</td>&#xA;<td>John Smith</td>&#xA;</tr>&#xA;<tr>&#xA;<td>U2</td>&#xA;<td>Jane Smith</td>&#xA;</tr>&#xA;<tr>&#xA;<td>U3</td>&#xA;<td>Rebecca Smith</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div>&#xA;<p>Address_Table</p>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th>Address_Id</th>&#xA;<th>Address</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td>AD1</td>&#xA;<td>1 High Street</td>&#xA;</tr>&#xA;<tr>&#xA;<td>AD1</td>&#xA;<td>2 High Street</td>&#xA;</tr>&#xA;<tr>&#xA;<td>AD1</td>&#xA;<td>3 High Street</td>&#xA;</tr>&#xA;<tr>&#xA;<td>AD1</td>&#xA;<td>4 High Street</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div>&#xA;<p>Address_History_Table</p>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th>Add_His_ID</th>&#xA;<th>User_Id</th>&#xA;<th>Address_Id</th>&#xA;<th>Start_Date</th>&#xA;<th>End_Date</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td>AH1</td>&#xA;<td>U1</td>&#xA;<td>AD1</td>&#xA;<td>01/09/2000</td>&#xA;<td>01/01/2019</td>&#xA;</tr>&#xA;<tr>&#xA;<td>AH2</td>&#xA;<td>U1</td>&#xA;<td>AD2</td>&#xA;<td>02/01/2019</td>&#xA;<td>31/08/2022</td>&#xA;</tr>&#xA;<tr>&#xA;<td>AH3</td>&#xA;<td>U2</td>&#xA;<td>AD1</td>&#xA;<td>02/01/2019</td>&#xA;<td></td>&#xA;</tr>&#xA;<tr>&#xA;<td>AH4</td>&#xA;<td>U3</td>&#xA;<td>AD2</td>&#xA;<td>01/08/1965</td>&#xA;<td>31/08/2022</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div>&#xA;<p>In this example U1 (John Smith) and U2 (Jane Smith) have both lived at address AD1(1 High Street) but not at the same time. In this example Jane moved in (02/01/2019) the day after John moved out (02/01/2019).</p>&#xA;<p>U1 (John Smith), then moved into AD2 (2 High Street) from the 02/01/2019 with no end date. U3 (Rebecca Smith) lived in this address already (start_date of 01/08/1965) and lived there until 31/08/2022.</p>&#xA;<p>From this we can identify that John and Jane havent lived together, while John and Rebecca did (From the 02/01/2019 to 31/08/2022).</p>&#xA;<p>The use of the junction table will very much depend on your data. In your chat example if two users were in the same chat for the exact same time, could lead to a duplication if a time for example was recorded.</p>&#xA;<p>A juntion table can sometimes just be three columns</p>&#xA;<ul>&#xA;<li>Primary Key of the table</li>&#xA;<li>Foreign Key of the user table</li>&#xA;<li>Foreign Key of the chat table</li>&#xA;</ul>&#xA;<p>The junction table would then just be used to denote which chat linked to which user, and dosent need to contain any other information.</p>&#xA;",9606612,,,,2022-01-06 16:00:46,"",,0,1,0,2022-01-06 16:00:46
70613359,1,,,0,42,"<p>Let's say I have the following Type in my GraphQL schema:</p>&#xA;<pre><code>module Types&#xA;  class CarType &lt; Types::BaseObject&#xA;    field :id, ID, null: true&#xA;&#xA;    field :owner, Types::OwnerType, null: true&#xA;</code></pre>&#xA;<p>When I execute this Schema it's still performing a SQL Query to find the <code>owner</code>.</p>&#xA;<p><strong>How can I cache the owner Query here, to prevent this query on subsequent queries?</strong></p>&#xA;",2639304,,,,2022-01-06 20:37:05,GraphQL cache DB-query,<ruby-on-rails><graphql>,0,0,0,2022-01-06 20:37:05
70614511,1,,,0,157,"<p>I have a view that I'm tracking in Hasura. I essentially query one table and left-join additional data from other tables onto it:</p>&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE&#xA;OR REPLACE VIEW &quot;public&quot;.&quot;user_summary&quot; AS&#xA;SELECT&#xA;  u.id AS user_id,&#xA;  u.display_name AS user_display_name,&#xA;  s.display_name AS subscription_display_name&#xA;FROM&#xA;  user u &#xA;    LEFT JOIN subscription s ON (u.id = s.user_id)&#xA;        &#xA;</code></pre>&#xA;<p>However, the GraphQL schema that Hasura generates for this view looks like this:</p>&#xA;<pre><code>type userSummary {&#xA;  user_id: Int&#xA;  user_display_name: String&#xA;  subscription_display_name: String&#xA;}&#xA;</code></pre>&#xA;<p>Specifically, all of the types are optional. It might make sense for <code>subscription_display_name</code> to be missing — I'm using a left join because not all users have subscriptions — but a user ID and display name are always present and don't show up as optional in the types Hasura generates for them.</p>&#xA;<p>Is it possible to provide better types to Hasura for this view? Or separately, is there something I'm missing that causes all of these properties to be marked as optional?</p>&#xA;",444912,,330315,2022-01-07 07:41:04,2022-01-07 07:41:04,How can I specify custom GraphQL types for a Postgres view in Hasura?,<postgresql><graphql><hasura>,0,2,0,2022-01-06 22:44:04
70616125,2,,70614190,0,,<p><strong>Admin API</strong> is only allowed to use with admin api token.<br>&#xA;You can only access to store front api in your theme.</p>&#xA;,17857821,,,,2022-01-07 03:03:43,"",,0,0,0,2022-01-07 03:03:43
70623737,1,70651398,,0,335,"<p>I am developping an application using AWS Amplify.&#xA;I am using the Graphql API to manage my Dynamodb tables.</p>&#xA;<p>I need some advices to know the best way to mutate multiple Items in a table.&#xA;I read that Qraphql and dynamodb are able to mutate 1000 items per second, but actualy this performance is not working on my way :(.</p>&#xA;<p>To mutate multiple items i have an array with all my queries and input parameters, and i am using Promise.all function like :</p>&#xA;<pre><code>await Promise.all(&#xA;  options.data.map(  item =&gt; &#xA;     API.graphql(&#xA;       graphqlOperation(&#xA;          item.query, &#xA;          { input: item.input }&#xA;       )&#xA;     )&#xA;   )&#xA;);&#xA;</code></pre>&#xA;<p>Is it the good way to do that ? it's working but with 1000 items it tooks 4/5 seconds.&#xA;Could you advice me how to improve the performance of multiple item mutation using Amplify graphQl API ?&#xA;Thank you very much</p>&#xA;",13640421,,,,2022-01-10 11:04:07,Need advices on multiple query Amplify QraphQL,<api><graphql><mutation><amplify>,1,0,0,2022-01-07 15:44:26
70656385,2,,70626423,1,,"<p>I have added the req, res to the context in <code>GraphQLModule.forRoot()</code> So after creating Graphql execution context I am able to get the required data in the return statement <code>{ req: ctx.req, res: ctx.res }</code>.</p>&#xA;<pre><code>GraphQLModule.forRoot({&#xA;  autoSchemaFile: 'src/graphql-schema.gql',&#xA;  context: ({ req, res }) =&gt; ({ req, res }),&#xA;}),&#xA;</code></pre>&#xA;",11386870,,,,2022-01-10 17:16:39,"",,0,0,0,2022-01-10 17:16:39
70666181,2,,65231013,0,,"<p>Add in Note user_id</p>&#xA;<pre><code>type Note {&#xA;  id: ID!&#xA;  user_id: ID!&#xA;  text: String!&#xA;}&#xA;</code></pre>&#xA;<p>and resolve to   notes: [Note] by $ctx.source.id&#xA;In postgres this appier</p>&#xA;<pre><code>{&#xA;    &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;    &quot;statements&quot;: [&#xA;        &quot;select * from notes where user_id = '$ctx.source.id'&quot;&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>where $ctx.source.id link to User -&gt; id</p>&#xA;",7689772,,,,2022-01-11 11:41:25,"",,0,0,0,2022-01-11 11:41:25
70667939,1,70668962,,0,196,"<p>I'm using Hasura to provide a GraphQL interface to a PostgreSQL table. If I have a table with an <code>integer[]</code> column, the command <code>apollo schema:download</code> is generating a <code>schema.json</code> with:</p>&#xA;<pre><code>      {&#xA;        &quot;name&quot;: &quot;distances&quot;,&#xA;        &quot;description&quot;: null,&#xA;        &quot;type&quot;: {&#xA;          &quot;kind&quot;: &quot;SCALAR&quot;,&#xA;          &quot;name&quot;: &quot;_int4&quot;,&#xA;          &quot;ofType&quot;: null&#xA;        },&#xA;        &quot;defaultValue&quot;: null&#xA;      }&#xA;</code></pre>&#xA;<p>which is unfortunate because it doesn't convey the information that this field is an array. Naturally, when I use <code>apollo codegen:generate</code> the type is either morphed into <code>String</code> or just <code>_int4</code> if using the <code>--passthroughCustomScalars</code> flag.</p>&#xA;<p>Is there a way to configure my graphql server (Hasura) or the apollo CLI to preserve the array type information?</p>&#xA;",3935325,,,,2022-01-11 15:02:01,Apollo GraphQL schema + codegen converting Hasura/PostgreSQL scalar array to scalar,<graphql><apollo><hasura>,1,0,0,2022-01-11 13:50:53
70673086,1,,,0,282,"<p>My issue is that I need to have a connection between two schema models where each links to an array of the other. The scenario here is I have multiple <code>Location</code>, each <code>Location</code> has multiple <code>Staff</code>. Each <code>Staff</code> can also have multiple <code>Location</code> that they are authorized at.</p>&#xA;<p>I don't see a way to do this in the documentation. Originally I have each <code>Location</code> with multiple <code>Staff</code>, but this limits each <code>Staff</code> to 1 <code>Location</code>. I'm toying with the idea of <code>altLocationNames</code> as an array of strings with each <code>Staff</code>, but this would require me to perform an extra query of all <code>Staff</code> or all <code>Locations</code> if the <code>altLocationNames</code> is needed.</p>&#xA;<p>Does anybody know a clever way to do this, or even just the best way for me to get all <code>Staff</code> at <code>Location</code> as well as all <code>Locations</code> for a specific <code>Staff</code>?</p>&#xA;<p>Schemas:</p>&#xA;<pre><code>type Staff&#xA;  @model&#xA;  @auth(rules: [{ allow: private, provider: iam }, { allow: private, provider: userPools }])&#xA;  @key(fields: [&quot;email&quot;])&#xA;  @key(name: &quot;byId&quot;, fields: [&quot;id&quot;], queryField: &quot;listStaffsById&quot;)&#xA;  @key(name: &quot;byLocation&quot;, fields: [&quot;locationName&quot;, &quot;recordedAt&quot;], queryField: &quot;listStaffsByLocation&quot;)&#xA;  @key(name: &quot;byRole&quot;, fields: [&quot;role&quot;, &quot;recordedAt&quot;], queryField: &quot;listStaffsByRole&quot;)&#xA;  @key(name: &quot;byStatus&quot;, fields: [&quot;status&quot;, &quot;recordedAt&quot;], queryField: &quot;listStaffsByStatus&quot;) {&#xA;  email: AWSEmail!&#xA;  altEmails: [AWSEmail]&#xA;  id: ID!&#xA;  locationName: String!&#xA;  location: Location @connection(fields: [&quot;locationName&quot;])&#xA;  altLocationNames: [String]&#xA;  firstName: String&#xA;  lastName: String&#xA;  role: StaffRole&#xA;  status: StaffStatus&#xA;  recordedAt: AWSDateTime!&#xA;  createdAt: AWSDateTime!&#xA;  updatedAt: AWSDateTime!&#xA;}&#xA;&#xA;type Location&#xA;  @model&#xA;  @auth(rules: [{ allow: private, provider: iam }, { allow: private, provider: userPools }])&#xA;  @key(fields: [&quot;name&quot;]) {&#xA;  name: String!&#xA;  subdomain: String&#xA;  address: String&#xA;  phone: String&#xA;  email: AWSEmail&#xA;  staff: [Staff] @connection(keyName: &quot;byLocation&quot;, fields: [&quot;name&quot;])&#xA;  createdAt: AWSDateTime!&#xA;  updatedAt: AWSDateTime!&#xA;}&#xA;</code></pre>&#xA;",8605878,,1103511,2022-01-12 09:54:07,2022-01-13 12:53:25,AWS AppSync Schema - Arrays of Connections Both Directions,<amazon-web-services><graphql><aws-amplify><aws-appsync>,1,4,0,2022-01-11 20:29:38
70677989,1,,,0,295,"<p>I have the following setup in my schema.graphql:</p>&#xA;<pre><code>type TrainingInfo @model @auth(rules: [{allow: public}]) {&#xA;  id: ID!&#xA;  title: String!&#xA;  description: String!&#xA;  rating: Int&#xA;  trainingInfoID: [AssigneeList] @connection(keyName: &quot;byTrainingInfo&quot;, fields: [&quot;id&quot;])&#xA;  creator: Users @connection&#xA;  trainingVideos: [TrainingVideo] @connection(keyName: &quot;byTrainingInfo&quot;, fields: [&quot;id&quot;])&#xA;  groups: [TrainingInfoGroups] @connection(keyName: &quot;byTrainingInfo&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Users @model @auth(rules: [{allow: public}]) @key(name: &quot;byCompany&quot;, fields: [&quot;companyID&quot;]) {&#xA;  id: ID!&#xA;  firstname: String!&#xA;  lastname: String!&#xA;  email: AWSEmail&#xA;  username: String&#xA;  confirmed: Boolean&#xA;  companyID: ID&#xA;  groups: [UsersGroups] @connection(keyName: &quot;byUsers&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>When I add a new TrainingInfo data in the Amplify DB with properly set fields I get the following error on iOS when adding the data:</p>&#xA;<p><code>{&quot;onCreateTrainingInfo&quot;:{&quot;id&quot;:&quot;96902155-b5d8-4765-a8de-f5692e456989&quot;,&quot;description&quot;:&quot;haha&quot;,&quot;rating&quot;:100,&quot;title&quot;:&quot;ADADADADADA&quot;,&quot;creator&quot;:null,&quot;__typename&quot;:&quot;TrainingInfo&quot;,&quot;_version&quot;:1,&quot;_deleted&quot;:null,&quot;_lastChangedAt&quot;:1640897426788}},&quot;errors&quot;:[{&quot;message&quot;:&quot;Cannot return null for non-nullable type: 'String' within parent 'Users' (/onCreateTrainingInfo/creator/firstname)&quot;,&quot;path&quot;:[&quot;onCreateTrainingInfo&quot;,&quot;creator&quot;,&quot;firstname&quot;]},{&quot;message&quot;:&quot;Cannot return null for non-nullable type: 'String' within parent 'Users' (/onCreateTrainingInfo/creator/lastname)&quot;,&quot;path&quot;:[&quot;onCreateTrainingInfo&quot;,&quot;creator&quot;,&quot;lastname&quot;]},{&quot;message&quot;:&quot;Cannot return null for non-nullable type: 'Int' within parent 'Users' (/onCreateTrainingInfo/creator/_version)&quot;,&quot;path&quot;:[&quot;onCreateTrainingInfo&quot;,&quot;creator&quot;,&quot;_version&quot;]},{&quot;message&quot;:&quot;Cannot return null for non-nullable type: 'AWSTimestamp' within parent 'Users' (/onCreateTrainingInfo/creator/_lastChangedAt)&quot;,&quot;path&quot;:[&quot;onCreateTrainingInfo&quot;,&quot;creator&quot;,&quot;_lastChangedAt&quot;]}]}}</code></p>&#xA;<p>It seems like only 'creator' field is the problem and it is the only one with hasOne relationship.</p>&#xA;<p>When I tried running the same code on Android I got similar error where all creator fields are null while id != null.</p>&#xA;<p>I've tried renaming, deleting and adding the field again but I keep getting the same error.</p>&#xA;<p>I am using the version 0.2.10 for amplify_flutter and amplify_datastore.</p>&#xA;",15923491,,15923491,2022-01-13 19:25:49,2022-01-13 19:25:49,Amplify query reads null fields when hasOne relationship,<flutter><graphql><schema><aws-amplify><flutter-aws-amplify>,1,0,0,2022-01-12 07:52:46
70685060,2,,51788017,2,,"<p>AWS just made batching size for AWS AppSync Lambda resolvers configurable (<a href=""https://aws.amazon.com/blogs/mobile/introducing-configurable-batching-size-for-aws-appsync-lambda-resolvers/"" rel=""nofollow noreferrer"">official blog post</a>).</p>&#xA;<blockquote>&#xA;<p>Now developers can easily enable batching on their Direct Lambda resolvers, and configure the maximum batching size (up to 2000 instead of the previous fixed default of 5) for their resolver. The same functionality is available for AppSync pipeline functions that use a Lambda function data source.</p>&#xA;</blockquote>&#xA;<p>The <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-lambda.html#direct-lambda-resolvers"" rel=""nofollow noreferrer"">official documentation</a> has been updated with:</p>&#xA;<blockquote>&#xA;<p>You can enable batching for your Direct Lambda Resolver by configuring the <code>maxBatchSize</code> on your resolver. When <code>maxBatchSize</code> is set to a value greater than 0 for a Direct Lambda resolver, AWS AppSync sends requests in batches to your Lambda function in sizes up to <code>maxBatchSize</code>.</p>&#xA;<p>Setting <code>maxBatchSize</code> to 0 on a Direct Lambda resolver turns off batching.</p>&#xA;</blockquote>&#xA;<h2>Using the console</h2>&#xA;<p>You can configure it via AWS console for each resolver:</p>&#xA;<p><a href=""https://i.stack.imgur.com/0eH1u.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0eH1u.png"" alt=""AWS AppSync Lambda resolvers configurable batching size in console"" /></a></p>&#xA;<h2>Using CLI</h2>&#xA;<p>Using <code>--max-batch-size</code> parameter in <a href=""https://docs.aws.amazon.com/cli/latest/reference/appsync/update-resolver.html"" rel=""nofollow noreferrer"">AWS CLI V2</a> or <a href=""https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/update-resolver.html"" rel=""nofollow noreferrer"">AWS CLI V1</a></p>&#xA;<pre class=""lang-sh prettyprint-override""><code>aws appsync update-resolver \&#xA;  --api-id &lt;value&gt; \&#xA;  --type-name &lt;value&gt; \&#xA;  --field-name &lt;value&gt; \&#xA;  --max-batch-size &lt;value&gt;&#xA;</code></pre>&#xA;<h2>Using CloudFormation</h2>&#xA;<p>The property name is <code>MaxBatchSize</code> and it can be set on <code>AWS::AppSync::Resolver</code> and <code>AWS::AppSync::FunctionConfiguration</code>.</p>&#xA;<pre class=""lang-yaml prettyprint-override""><code>MyResolver:&#xA;  Type: AWS::AppSync::Resolver&#xA;  Properties:&#xA;    ApiId: MyApiId&#xA;    DataSourceName: MyDataSourceName&#xA;    TypeName: MyTypeName&#xA;    FieldName: MyFieldName&#xA;    MaxBatchSize: 100&#xA;</code></pre>&#xA;<p>The official CloudFormation doc update will be out this week</p>&#xA;",1480391,,1480391,2022-01-12 17:12:30,2022-01-12 17:12:30,"",,0,0,0,2022-01-12 16:29:39
70697378,1,,,1,49,"<p>I am using Graphql queries to access our Orchard CMS api to receive content for my web page</p>&#xA;<p>In my case I have three different part I need to access from a page lets call them table1, table2 and table3</p>&#xA;<p>If I wanted to fetch the content form these three tables it would look something like this: see picture&#xA;<a href=""https://i.stack.imgur.com/RVQIw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RVQIw.png"" alt=""enter image description here"" /></a></p>&#xA;<p>My question now is: Is it possible to group the objects in the queries response together like:</p>&#xA;<pre><code>&quot;data&quot;:{&#xA;  contentArray:[&#xA;    table:{&#xA;       tableOne: {}&#xA;       tableTwo:{}&#xA;       tableThree:{}&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;",5946072,,,,2022-01-13 13:24:48,Modifiy response from GraphQL & Orchard,<graphql><orchardcms><graphiql>,0,1,0,2022-01-13 13:24:48
70707260,1,,,0,91,"<p><code>react-admin with graphql hasura datasource 'ra-data-hasura'</code></p>&#xA;<p>i need a custom <code>CreateComponent</code> for a resource that when a user click on save&#xA;it makes a double request:</p>&#xA;<p>The first request to a mutation (to upload a file on S3) and if the query returns a result (the path of the uploaded file) it makes a second request (mutation) to insert the form data into hasura normaly</p>&#xA;<p>I don't know how to develop the <code>CreateComponent</code>, can you give me sone suggestion please?</p>&#xA;",1820422,,,,2022-01-14 07:25:46,React-admin call 2 query/mutation on form submit - CreateComponent - ra-data-hasura,<reactjs><graphql><react-admin><hasura>,0,0,0,2022-01-14 07:25:46
70736874,1,,,2,66,"<p>I thought that the _version field should auto create when we create a record using graphql api, but when I am trying to fetch the record after creating it is getting fetched with no problem but when I am trying to list the record with _version field it is giving me error.</p>&#xA;<p><code>&quot;message&quot;: &quot;Cannot return null for non-nullable field MyModel._version.&quot;,</code></p>&#xA;",2655250,,,,2022-01-17 05:26:20,Amplify API - Cannot return null for non-nullable field Model._version,<javascript><amazon-web-services><graphql><aws-amplify>,0,0,0,2022-01-17 05:26:20
70750459,1,,,0,533,"<p>I am trying to update a query in AWS Dynamo using AWS Amplify on top of Next.js.</p>&#xA;<p>My scenario is simple.</p>&#xA;<p>On page load, if there exists a user and the user has not visited a page before, a new object will be created with set values using SWR.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const fetchUserSite = async (owner, code) =&gt; {&#xA;  try {&#xA;    // Create site object if no site exists&#xA;    if (userData == null) {&#xA;      const siteInfo = {&#xA;        id: uuidv4(),&#xA;        code: parkCode,&#xA;        owner: user?.username,&#xA;        bookmarked: false,&#xA;        visited: false,&#xA;      }&#xA;&#xA;      await API.graphql({&#xA;        query: createSite,&#xA;        variables: {input: siteInfo},&#xA;        authMode: 'AMAZON_COGNITO_USER_POOLS',&#xA;      })&#xA;&#xA;      console.log(`${code} added for the first time`)&#xA;    }&#xA;    return userData || null&#xA;  } catch (err) {&#xA;    console.log('Site not added by user', data, err)&#xA;  }&#xA;}&#xA;&#xA;&#xA; // Only call the fetchUserSite method if `user` exists&#xA;  const {data} = useSWR(user ? [user?.username, parkCode] : null, fetchUserSite)&#xA;</code></pre>&#xA;<p>Currently, this works. The object is added to the database with the above attributes. HOWEVER, when I click a button to update this newly created object, I get an error of <code> path: null, locations: (1) […], message: &quot;Variable 'input' has coerced Null value for NonNull type 'ID!'&quot;</code></p>&#xA;<p>This is my call to update the object when I click a button with the onClick handler &quot;handleDBQuery&quot;.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const handleDBQuery = async () =&gt; {&#xA;  await API.graphql({&#xA;    query: updateSite,&#xA;    variables: {&#xA;      input: {&#xA;        id: data?.id,&#xA;        bookmarked: true,&#xA;        owner: user?.username,&#xA;      },&#xA;    },&#xA;    authMode: 'AMAZON_COGNITO_USER_POOLS',&#xA;  })&#xA;  console.log(`${name} Bookmarked`)&#xA;}&#xA;</code></pre>&#xA;<p>My hunch is that the updateSite query does not know about the createSite query on page load.</p>&#xA;<p>In short, how can I update an item after I just created it?</p>&#xA;",10769225,,,,2022-01-19 05:14:17,How to update an item after being newly created in AWS DynamoDB and Amplify,<amazon-web-services><graphql><next.js><aws-amplify><swr>,1,9,0,2022-01-18 04:56:32
70760781,1,71386386,,1,285,"<p>We deploy backend services with GraphQL API in multiple AWS regions. The GraphQL schema is the same for each region, but the services serve region specific data. Apollo federation does not seem to address this topic, because we do not want to merge different schema. Our problem is also not about choosing the closest region. Clients choose a specific region to access data served by that region.</p>&#xA;<p>With REST, a reverse proxy could forward a request to the target region based on path parameters. In GraphQL however, all requests are targeting the same endpoint.</p>&#xA;<p>What is a good practice to route GraphQL requests to different regions, which are using the same schema but serving different content?</p>&#xA;<p><strong>EDIT</strong>: maybe it is also important to note that we are using GraphQL subscriptions as well. It would be nice avoiding connections to multiple endpoints in the client - if possible.</p>&#xA;",2283260,,2283260,2022-01-19 14:59:24,2022-03-07 19:38:17,Route GraphQL requests to APIs in different regions serving different content but using same schema,<amazon-web-services><graphql><reverse-proxy><apollo-federation><graphql-schema>,2,0,0,2022-01-18 18:39:47
70771814,2,,59414066,5,,"<blockquote>&#xA;<p>Apollo does not support anonymous operations</p>&#xA;</blockquote>&#xA;<p>You should give your query/mutation operation a name :</p>&#xA;<p>This will work:</p>&#xA;<pre><code>query SOME_NAME {&#xA;  users {&#xA;    age&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This will <strong>NOT</strong> work (note that query name is missing):</p>&#xA;<pre><code>query {&#xA;  users {&#xA;    age&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Also you can check this thread:&#xA;<a href=""https://github.com/apollographql/apollo-tooling/issues/184"" rel=""noreferrer"">https://github.com/apollographql/apollo-tooling/issues/184</a></p>&#xA;",6141675,,,,2022-01-19 13:51:36,"",,0,0,0,2022-01-19 13:51:36
70774353,2,,70562373,2,,"<p>I can't find a nice way of doing this in GraphQL, but you can do it easily in VTL using either <code>$util.validate</code> or <code>$util.error</code> (see <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-util-reference.html"" rel=""nofollow noreferrer"">the AWS documentation</a>). They both have the same result of adding an item to the <code>errors</code> array.</p>&#xA;<p>Here's a demo of <code>$util.validate</code>:&#xA;<a href=""https://mappingtool.dev/app/appsync/bee55bd607e2166091451e7a7959318e"" rel=""nofollow noreferrer"">https://mappingtool.dev/app/appsync/bee55bd607e2166091451e7a7959318e</a></p>&#xA;<p>Here's a demo of <code>$util.error</code>:&#xA;<a href=""https://mappingtool.dev/app/appsync/006d6c05e8bb7257c6cebce34494994c"" rel=""nofollow noreferrer"">https://mappingtool.dev/app/appsync/006d6c05e8bb7257c6cebce34494994c</a></p>&#xA;",964514,,,,2022-01-19 16:34:34,"",,0,1,0,2022-01-19 16:34:34
70798685,1,,,0,97,"<p>I don't know why the variables are not valid numbers. I use flutter with graphql_flutter plugin.</p>&#xA;<p>Somehow I get this error message:&#xA;<a href=""https://i.stack.imgur.com/r7ne0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/r7ne0.png"" alt=""enter image description here"" /></a></p>&#xA;<p>The query:</p>&#xA;<p><a href=""https://i.stack.imgur.com/W5KuA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/W5KuA.png"" alt=""enter image description here"" /></a></p>&#xA;<p>The generated API classes:</p>&#xA;<p><a href=""https://i.stack.imgur.com/5gXjq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5gXjq.png"" alt=""enter image description here"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/zwgeT.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zwgeT.png"" alt=""enter image description here"" /></a></p>&#xA;<p>The &quot;service&quot; function:</p>&#xA;<p><a href=""https://i.stack.imgur.com/0trc4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0trc4.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Function in repo:</p>&#xA;<p><a href=""https://i.stack.imgur.com/YLv7H.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YLv7H.png"" alt=""enter image description here"" /></a></p>&#xA;<p>The function call:</p>&#xA;<p><a href=""https://i.stack.imgur.com/pXIdt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pXIdt.png"" alt=""enter image description here"" /></a></p>&#xA;",6366153,,,,2022-01-21 08:57:20,"The filter value for ""_lt"" is not a valid number",<flutter><graphql><double><graphql-flutter>,0,2,0,2022-01-21 08:57:20
70822220,2,,70818805,0,,"<p>To create a new relationship you need to create new record in <code>UsersInvestments</code> relation table. So you cannot connect to existing row, but you need to create new one. And <code>data.users</code> represent exactly this table, so you need to do following:</p>&#xA;<pre><code>prisma.investment.create({&#xA;  data: {&#xA;    users: {&#xA;      // this creates new row in `UsersInvestments`&#xA;      create: [{&#xA;        // Here we say that this new row user will be one of existing users&#xA;        user: {&#xA;          connect: {&#xA;            id: 1&#xA;          }&#xA;        }&#xA;      }]&#xA;    }&#xA;  }&#xA;});&#xA;</code></pre>&#xA;",5650447,,,,2022-01-23 12:51:45,"",,0,0,0,2022-01-23 12:51:45
70826790,1,,,0,216,"<p>Our company uses Hasura Cloud with a React js front end with gQlApollo.&#xA;I recently added a new column &quot;myString&quot; to type &quot;myType&quot; in our database and was able to successfully update our Hasura Cloud instance by resetting the Metadata within settings.</p>&#xA;<p>I know this worked because when I use the API on Hasura Cloud I am able to successfully return the new column and its value.</p>&#xA;<p>I also see that the graphQl Engine metadata is green as shown here <a href=""https://i.stack.imgur.com/tQMuM.png"" rel=""nofollow noreferrer"">status of graphQl engine metadata</a></p>&#xA;<p>The problem is when I try to query this new column locally it seems that this metadata is not successfully being updated there. I have no local hasura core so the suggestion online to preform a <code>hasura metadata clear</code> does not apply to me.</p>&#xA;<p>I have tried:</p>&#xA;<ul>&#xA;<li>resetting my browser history</li>&#xA;<li>run <code>hasura init</code> and reset the meta data after which did not fix my problem</li>&#xA;</ul>&#xA;<p>Any idea how I can accomplish resetting the metadata locally?</p>&#xA;",17743030,,,,2022-01-24 01:38:40,Metadata Does Not seem to update correctly,<metadata><react-apollo><hasura>,1,0,0,2022-01-23 21:37:53
70828122,2,,70826790,0,,<p>Solved my issue! It was because I had not changed the permissions for the newly created column in cloud.hasura.io. Now that I have added that it works without needing to reset the Metadata at all.</p>&#xA;,17743030,,,,2022-01-24 01:38:40,"",,0,0,0,2022-01-24 01:38:40
70828456,1,,,0,270,"<p>Guys I'm at my wits end here, need some help. I'm trying out Appsync and building out a GraphQL where the resolver for one of my fields pulls data from an external API.</p>&#xA;<p>Here's a brief structure of the raw API response from the server:</p>&#xA;<pre><code>{&#xA;  total: 1000,&#xA;  result: [&#xA;     {address: 'xyz', name: 'abc'}, {address: 'def', name: 'uvw'}&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>I have a GraphQL Type defined as:</p>&#xA;<pre><code>Address @model {&#xA;address: String! @primaryKey&#xA;name: String!&#xA;}&#xA;</code></pre>&#xA;<p>I created a resolver on &quot;address&quot; based on a HTTP endpoint data source. I believe that is configured properly.</p>&#xA;<p>Here is my request mapping functions that are part of the resolver:</p>&#xA;<pre><code>#**&#xA;Make an arbitrary HTTP call when this field is listed in a query selection set.&#xA;The &quot;relativePath&quot; is the resource path relative to the root URL provided when you&#xA;created the HTTP data source. Pass a &quot;params&quot; object to forward headers, body,&#xA;and query parameters to the HTTP endpoint.&#xA;*#&#xA;{&#xA;  &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;  &quot;method&quot;: &quot;GET&quot;,&#xA;  &quot;resourcePath&quot;: &quot;/dev/v2/${context.args.address}&quot;,&#xA;  &quot;params&quot;:{&#xA;      &quot;headers&quot;: {&#xA;          &quot;x-api-key&quot;: &quot;xxxxxx&quot;&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>And response mapping:</p>&#xA;<pre><code>## Raise a GraphQL field error in case of a datasource invocation error&#xA;#if($ctx.error)&#xA;  $util.error($ctx.error.message, $ctx.error.type)&#xA;#end&#xA;## If the response is not 200 then return an error. Else return the body **&#xA;#if($ctx.result.statusCode == 200)&#xA;    $util.toJson($ctx.result.body.result)&#xA;#else&#xA;    $utils.appendError($ctx.result.body, &quot;$ctx.result.statusCode&quot;)&#xA;#end&#xA;</code></pre>&#xA;<p>For the life of me, I cannot figure out why this does not work in returning query data from the graphQL. I've spent 8 hours trying to figure it out and pretty sure it's something really obvious. Can someone please help?</p>&#xA;",3785667,,,,2022-01-25 01:09:02,AppSync HTTP API,<amazon-web-services><graphql><aws-appsync>,1,0,0,2022-01-24 02:44:29
70857362,1,,,0,257,"<p>I have a react application connected to AWS Cognito for authentication, AWS Amplify for hosting (connected to Github repo), and AWS AppSync for graphql operations with AWS Lambda Function (node js backend).&#xA;Keeping my react application same, I tried to recreate the environment (amplify) for testing purposes. I try to create them with amplify-cli.&#xA;Following are the commands/steps that I use to run.</p>&#xA;<ol>&#xA;<li>git clone </li>&#xA;<li>cd </li>&#xA;<li>amplify configure</li>&#xA;<li>amplify init</li>&#xA;<li>amplify add auth</li>&#xA;<li>amplify add codegen --apiId </li>&#xA;<li>amplify push</li>&#xA;<li>git add .</li>&#xA;<li>git commit -m 'message'</li>&#xA;<li>git push</li>&#xA;</ol>&#xA;<p>After all those steps I manually connect github repo to AWS Amplify console and host a successful build. The flow of my app is as follows:</p>&#xA;<ol>&#xA;<li>When user clicks login button, he is authenticated through AWS Cognito.</li>&#xA;<li>After successfull response from cognito, the graphql request is sent to appsync for registering/logging in a user.</li>&#xA;</ol>&#xA;<p>This is where the error occurs and here's what it says <a href=""https://i.stack.imgur.com/MbgAi.png"" rel=""nofollow noreferrer"">attachment</a>&#xA;ApolloError Invalid AUTH_TYPE: undefined</p>&#xA;<p>aws-exports.js file is as follows:</p>&#xA;<pre><code>const awsmobile = {&#xA;&quot;aws_project_region&quot;: &quot;us-east-1&quot;,&#xA;&quot;aws_cognito_identity_pool_id&quot;: &quot;us-east-1:409c9031-8289-4404-a73b-74a5bde94485&quot;,&#xA;&quot;aws_cognito_region&quot;: &quot;us-east-1&quot;,&#xA;&quot;aws_user_pools_id&quot;: &quot;us-east-1_0gjFNkBSD&quot;,&#xA;&quot;aws_user_pools_web_client_id&quot;: &quot;44bqtl52gvul99qpm3vo9me6at&quot;,&#xA;&quot;oauth&quot;: {&#xA;    &quot;domain&quot;: &quot;palatar-dev-dev.auth.us-east-1.amazoncognito.com&quot;,&#xA;    &quot;scope&quot;: [&#xA;        &quot;phone&quot;,&#xA;        &quot;email&quot;,&#xA;        &quot;openid&quot;,&#xA;        &quot;profile&quot;,&#xA;        &quot;aws.cognito.signin.user.admin&quot;&#xA;    ],&#xA;    &quot;redirectSignIn&quot;: &quot;https://www.palatar.life/&quot;,&#xA;    &quot;redirectSignOut&quot;: &quot;https://www.palatar.life/&quot;,&#xA;    &quot;responseType&quot;: &quot;code&quot;&#xA;},&#xA;&quot;federationTarget&quot;: &quot;COGNITO_USER_POOLS&quot;,&#xA;&quot;aws_cognito_username_attributes&quot;: [&#xA;    &quot;EMAIL&quot;&#xA;],&#xA;&quot;aws_cognito_social_providers&quot;: [&#xA;    &quot;FACEBOOK&quot;,&#xA;    &quot;GOOGLE&quot;&#xA;],&#xA;&quot;aws_cognito_signup_attributes&quot;: [&#xA;    &quot;EMAIL&quot;&#xA;],&#xA;&quot;aws_cognito_mfa_configuration&quot;: &quot;OFF&quot;,&#xA;&quot;aws_cognito_mfa_types&quot;: [&#xA;    &quot;SMS&quot;&#xA;],&#xA;&quot;aws_cognito_password_protection_settings&quot;: {&#xA;    &quot;passwordPolicyMinLength&quot;: 8,&#xA;    &quot;passwordPolicyCharacters&quot;: []&#xA;},&#xA;&quot;aws_cognito_verification_mechanisms&quot;: [&#xA;    &quot;EMAIL&quot;&#xA;],&#xA;&quot;aws_appsync_graphqlEndpoint&quot;: &quot;https://bjgxmcfcerh2zmbgjn3n7ikrdi.appsync-api.us-east-1.amazonaws.com/graphql&quot;,&#xA;&quot;aws_appsync_region&quot;: &quot;us-east-1&quot;,&#xA;&quot;aws_appsync_authenticationType&quot;: &quot;API_KEY&quot;,&#xA;&quot;aws_appsync_apiKey&quot;: &quot;da2-wogh2ce7b5aylekgsmr3rvtsk4&quot;&#xA;</code></pre>&#xA;<p>}</p>&#xA;",18031235,,,,2022-01-26 00:21:54,Having trouble integrating AWS AppSync with AWS Amplify CLI,<reactjs><amazon-web-services><apollo><aws-amplify><aws-appsync>,0,0,0,2022-01-26 00:21:54
70860768,2,,70849602,0,,"<p>This is a litle problem hehe, yesterday was not focusing what i do.</p>&#xA;<p>So in user.findmany that you find the user and then</p>&#xA;<p>just call user.isverified === boolean and adding a if statement and it working fine.</p>&#xA;",16928688,,,,2022-01-26 08:54:37,"",,0,0,0,2022-01-26 08:54:37
70862048,1,,,0,114,"<p>I have two different AppSync APIs and two different awsconfiguration.json files.&#xA;and I'm using AWSMobileClient(configuration: configuration) instead of AWSMobileClient.default() to create two instances of AWSMobileClient.</p>&#xA;<p>But it didn't work as expected. the first initialized instance of AWSMobileClient works fine but the second instance never works and returns &quot;Unauthorized&quot; when running the fetch query, but works fine if I initialized it first.</p>&#xA;<p>my question is: is there any way to run different instances of AppSync APIs in iOS</p>&#xA;<p>here's how I initialize each instance:</p>&#xA;<pre><code>private lazy var firstAwsMobileClient: AWSMobileClient = {&#xA;        if let data = JsonReader().readLocalJSONFile(forName: &quot;awsconfiguration1&quot;), let json = try? JSONSerialization.jsonObject(with: data, options: []), let object = json as? [String: Any] {&#xA;            return AWSMobileClient(configuration: object)&#xA;        }&#xA;        return AWSMobileClient.default()&#xA;    } ()&#xA;    &#xA;    private lazy var secondAwsMobileClient: AWSMobileClient = {&#xA;        if let data = JsonReader().readLocalJSONFile(forName: &quot;awsconfiguration2&quot;), let json = try? JSONSerialization.jsonObject(with: data, options: []), let object = json as? [String: Any] {&#xA;            return AWSMobileClient(configuration: object)&#xA;        }&#xA;        return AWSMobileClient.default()&#xA;    } ()&#xA;&#xA;let serviceConfigCognito = try AWSAppSyncServiceConfig(forKey: &quot;key&quot;)&#xA;let cacheConfigCognito = try AWSAppSyncCacheConfiguration(useClientDatabasePrefix: false, appSyncServiceConfig: serviceConfigCognito)&#xA;let clientConfigCognito = try AWSAppSyncClientConfiguration(appSyncServiceConfig: serviceConfigCognito,userPoolsAuthProvider: firstAwsMobileClient, cacheConfiguration: cacheConfigCognito)&#xA;clients[AppSyncClientMode.cognito] = try AWSAppSyncClient(appSyncConfig: clientConfigCognito)&#xA;</code></pre>&#xA;",6278745,,,,2022-01-26 10:34:07,Use 2 different AWS AppSync APIs in swift,<ios><swift><amazon-web-services><graphql><aws-appsync>,0,0,0,2022-01-26 10:34:07
70869644,1,,,1,246,"<p>I’m currently developing the Backend for my iOS - App with AWS Amplify Studio. Everything works fine so far, I can create the models in Studio and pull the structure in my Swift Environment. But while I can create new Input for my Database, I cannot update it, the console gives me this Error:</p>&#xA;<p><strong>Amplify.GraphQLError(message: &quot;Value for field '$[_version]' must be a number.&quot;</strong></p>&#xA;<p>I know that Amplify needs a Version because of the enabled conflict detection. When I disable it, it would just work fine, but then Amplify Studio breaks and I cannot edit anything until I reenable it.</p>&#xA;<p>So noow I’m trying to provide the version number with following function:</p>&#xA;<pre><code>func updateUser(user: User) {&#xA;        Amplify.API.mutate(request: .updateMutation(of: user, version: 1)) { event in&#xA;                    switch event {&#xA;                    case .success(let result):&#xA;                        switch result {&#xA;                        case .success(let user):&#xA;                            print(&quot;Successfully updated user: \(user)&quot;)&#xA;                        case .failure(let error):&#xA;                            print(&quot;Got failed result with \(error.errorDescription)&quot;)&#xA;                        }&#xA;                    case .failure(let error):&#xA;                        print(&quot;Got failed event with error \(error)&quot;)&#xA;                            }&#xA;                    }&#xA;    }&#xA;</code></pre>&#xA;<p>The problem is, that if you wanna update a field, you need to provide the correct current version number on the serverside, otherwise the entry won’t get overwritten. So you need to fetch the current version entry from the database.</p>&#xA;<p>And now to the core of my question:</p>&#xA;<p>When I check my Schema in the AppSync Console, every models already has the field ‚_version‘. But when I pull the the whole Backend into my App, neither the schema.graphql file doesn’t contain the fields, nor my Amplify Models in Swift get updated. So I cannot fetch the current version and in the aftermath cannot update the entry at all.</p>&#xA;<p>Does anybody have a solution for this? All i could found until now is to just disable the conflict detection, but that’s not the best option. Also writing the '_version' field into the Swift model by hand, which would actually would work, isn't suitable, as the file gets overwritten every time when the Backend got pulled.</p>&#xA;<p>Thank you very much for any help in advance!</p>&#xA;<p>Have a great day!</p>&#xA;",10881065,,,,2022-01-26 20:10:13,Swift AWS Amplify get ‚_version‘ - field in Amplify Models,<ios><swift><amazon-web-services><graphql><amplify>,0,0,0,2022-01-26 20:10:13
70872333,1,,,0,236,"<p>I am trying to have amplify sort my users by updatedAt date, so when I use listUsers.limit(20) it returns 20 of the most recent ones. I added a sortkeyfield to the primaryKey:</p>&#xA;<pre><code>id: ID! @primaryKey(sortKeyFields: [&quot;updatedAt&quot;])&#xA;</code></pre>&#xA;<p>But when I ran this I received the error: <code>An error occurred during the push operation: The primary key on type 'User' must reference non-null fields.</code></p>&#xA;<p>This was the only change on amplify, so I am not sure why it threw this error. Most of the docs online and problem shooting revolve around the old @key directive, so any help is appreciated.</p>&#xA;",17834286,,,,2022-01-27 02:25:44,Sorting a User type by updatedAt using PrimaryKey and sortFieldKey throws error: The primary key on type 'User' must reference non-null fields,<graphql><aws-amplify><aws-appsync>,1,0,0,2022-01-27 01:42:01
70876888,1,,,0,42,"<p><a href=""https://i.stack.imgur.com/a4gM6.png"" rel=""nofollow noreferrer"">This is the GraphQL and I just want to access the character names</a></p>&#xA;<p>Even tho,I could access the movie names with the code&#xA;<code>var films: [AllFilmsQuery.Data.AllFilm.Film] = []</code>&#xA;and I can easily display the movie names on table cell with this&#xA;<code>cell.textLabel?.text = film.title</code> , I have no idea how to display characterConnection&gt; Characters &gt; names for a specific movie on tableView.&#xA;Here is how I retrieve data with Apollo</p>&#xA;<pre><code>      let query = AllFilmsQuery()&#xA;      Apollo.shared.client.fetch(query: query) { result in&#xA;        switch result {&#xA;        case .success(let graphQLResult):&#xA;          if let films = graphQLResult.data?.allFilms?.films?.compactMap({ $0 }) {&#xA;            self.films = films&#xA;            self.filmsTableView.reloadData()&#xA;          }&#xA;&#xA;        case .failure(let error):&#xA;          print(&quot;Error loading data \(error)&quot;)&#xA;        }&#xA;      }&#xA;&#xA;  }```&#xA;  &#xA;&#xA;</code></pre>&#xA;",14663661,,14663661,2022-01-27 10:26:19,2022-01-27 10:26:19,I am having problem with fetching data from GraphQL,<ios><swift><xcode><graphql>,0,0,0,2022-01-27 10:20:18
70883345,1,,,0,577,"<p>I need the token list on pancakeswap. I couldn't find an official graphql api.</p>&#xA;<p>Actually what I want is this; A list of parities with at least 20 bnb in the pool. (or it could be busd which equates to 20 bnb in the pool)</p>&#xA;<p>I am writing a graphql query as follows in the link. But I am getting an error while returning the query result.</p>&#xA;<p><a href=""https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2"" rel=""nofollow noreferrer"">https://bsc.streamingfast.io/subgraphs/name/pancakeswap/exchange-v2</a></p>&#xA;<pre><code>{&#xA;  pairs(first: 1000, skip: 0, orderBy: reserveBNB, orderDirection: asc, where: {reserveBNB_gt: 20}) {&#xA;    token0 {&#xA;      symbol&#xA;      id&#xA;      name&#xA;      decimals&#xA;    }&#xA;    token1 {&#xA;      symbol&#xA;      id&#xA;      name&#xA;      decimals&#xA;    }&#xA;    exchangeAddress: id&#xA;    reserveBNB&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Error:</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Failed to get entities from store: canceling statement due to conflict with recovery, query = \&quot;/* qid: cc8d3536241ec9a0-6dc8c4ef99f8cc6a */\\nselect 'Pair' as entity, to_jsonb(c.*) as data from (select  * \\n  from \\\&quot;sgd1\\\&quot;.\\\&quot;pair\\\&quot; c\\n where c.\\\&quot;block_range\\\&quot; @&gt; $1 and (\\\&quot;reserve_bnb\\\&quot; &gt; $2::numeric)\\n\\n order by \\\&quot;reserve_bnb\\\&quot; asc, \\\&quot;id\\\&quot; asc\\n limit 1000) c -- binds: [14737244, \\\&quot;20\\\&quot;]\&quot;&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>Is there any other site other than this address where I can get this information? I would be glad if you help.</p>&#xA;",5752086,,5752086,2022-01-27 17:52:57,2022-01-27 17:52:57,How can I get the first 2000 tokens by liquidity on pancakeswap?,<json><graphql><binance-smart-chain><pancakeswap>,0,0,0,2022-01-27 17:47:10
70886337,1,,,3,249,"<p>we're developing an AWS AppSync API and want to use a custom lambda resolver.</p>&#xA;<p>We created a simple lambda function for testing purposes (Reference: <a href=""https://aws.amazon.com/de/blogs/mobile/appsync-lambda-auth/"" rel=""nofollow noreferrer"">https://aws.amazon.com/de/blogs/mobile/appsync-lambda-auth/</a>):</p>&#xA;<pre><code>// This is sample code. Please update this to suite your schema&#xA;&#xA;exports.handler = async (event) =&gt; {&#xA;  console.log(`event &gt;`, JSON.stringify(event, null, 2));&#xA;  const {&#xA;    authorizationToken,&#xA;    requestContext: { apiId, accountId },&#xA;  } = event;&#xA;  const response = {&#xA;    isAuthorized: authorizationToken === 'custom-authorized',&#xA;    resolverContext: {&#xA;      userid: 'user-id',&#xA;      info: 'contextual information A',&#xA;      more_info: 'contextual information B',&#xA;    },&#xA;    deniedFields: [&#xA;      // `arn:aws:appsync:${process.env.AWS_REGION}:${accountId}:apis/${apiId}/types/Event/fields/comments`,&#xA;      // `Mutation.createEvent`,&#xA;    ],&#xA;    ttlOverride: 300,&#xA;  };&#xA;  console.log(`response &gt;`, JSON.stringify(response, null, 2));&#xA;  return response;&#xA;};&#xA;</code></pre>&#xA;<p>... configured lambda as the API's authorization mode:</p>&#xA;<pre><code>xxx % amplify update api&#xA;? Select from one of the below mentioned services: GraphQL&#xA;&#xA;General information&#xA;- Name: drivebuddy&#xA;- API endpoint: https://xxxx.appsync-api.eu-central-1.amazonaws.com/graphql&#xA;&#xA;Authorization modes&#xA;- Default: Lambda&#xA;&#xA;Conflict detection (required for DataStore)&#xA;- Disabled&#xA;&#xA;? Select a setting to edit Authorization modes&#xA;? Choose the default authorization type for the API Lambda&#xA;? Choose a Lambda authorization function Use a Lambda function already added in the current Amplify project&#xA;? Choose one of the Lambda functions graphQlLambdaAuthorizer516a27b2&#xA;? How long should the authorization response be cached in seconds? 300&#xA;? Configure additional auth types? No&#xA;GraphQL schema compiled successfully.&#xA;</code></pre>&#xA;<p>... and created a type with custom auth rule:</p>&#xA;<pre><code>type DrivingRecord @model @auth(rules: [{ allow: custom }]) {&#xA;      id: ID!&#xA;      userID: ID&#xA;      vehicle: String!&#xA;      dateTime: AWSDateTime&#xA;    }&#xA;</code></pre>&#xA;<p>After <code>amplify push</code> we can query the API without any problem:</p>&#xA;<pre><code>curl -XPOST -H &quot;Content-Type:application/graphql&quot; -H &quot;Authorization:custom-authorized&quot; -d '{&quot;query&quot;: &quot;query { listDrivingRecords { items { id } } }&quot;}' https://xxxxx.appsync-api.eu-central-1.amazonaws.com/graphql&#xA;</code></pre>&#xA;<p>Response:</p>&#xA;<pre><code>&quot;data&quot;:{&quot;listDrivingRecords&quot;:{&quot;items&quot;:[{&quot;id&quot;:&quot;9686ac34-f4c9-4ca3-91ae-af4ee00a75c3&quot;}]}}}&#xA;</code></pre>&#xA;<p>But locally (<code>amplify mock</code>) we get the following error</p>&#xA;<pre><code>curl -XPOST -H &quot;Content-Type:application/graphql&quot; -H &quot;Authorization:custom-authorized&quot; -d '{&quot;query&quot;: &quot;query { listDrivingRecords { items { id } } }&quot;}' http://192.168.0.133:20002/graphql&#xA;</code></pre>&#xA;<p>Response:</p>&#xA;<pre><code>{&quot;errors&quot;:[{&quot;errorType&quot;:&quot;UnauthorizedException&quot;,&quot;message&quot;:&quot;UnauthorizedException: Invalid JWT token&quot;}]}&#xA;</code></pre>&#xA;<p>Does amplify mock support lambda resolvers for AppSync?</p>&#xA;<p>Is there a workaround for local development?</p>&#xA;<p>BR Stefan</p>&#xA;",15233636,,,,2022-09-04 22:24:43,"AWS AppSync amplify mock lambda resolver ""Invalid JWT token""",<amazon-web-services><aws-lambda><graphql><authorization><aws-amplify>,0,0,0,2022-01-27 22:01:09
70892526,1,72688756,,4,407,"<p>I work with Amplify/<code>graphQl transformer V2</code>, I try to do the same things like the official documentation of Amplify : <a href=""https://docs.amplify.aws/cli/graphql/data-modeling/#many-to-many-relationship"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/data-modeling/#many-to-many-relationship</a></p>&#xA;<p>So in the part of <code>@manyToMany</code> relationship, I understand that the relational Table generated automatically and in amplify studio I found all queries and mutaions... of this table.</p>&#xA;<p>My question is how can I add some fields in this table (relationalTable).</p>&#xA;<p>N.B : I'm using the same example of the documentation : <a href=""https://docs.amplify.aws/cli/graphql/data-modeling/#many-to-many-relationship"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/data-modeling/#many-to-many-relationship</a> so how can I add for example the field <em><strong>City</strong></em> in the <code>PostTags</code> table ?</p>&#xA;<pre><code>type Post @model {&#xA;  id: ID!&#xA;  title: String!&#xA;  content: String&#xA;  tags: [Tag] @manyToMany(relationName: &quot;PostTags&quot;)&#xA;}&#xA;&#xA;type Tag @model {&#xA;  id: ID!&#xA;  label: String!&#xA;  posts: [Post] @manyToMany(relationName: &quot;PostTags&quot;)&#xA;}&#xA;</code></pre>&#xA;",12525162,,12525162,2022-06-20 14:38:38,2022-06-27 12:06:23,GraphQl @manyToMany usage?,<aws-lambda><graphql><relational-database><backend><aws-amplify>,1,0,0,2022-01-28 10:52:48
70895123,2,,59272819,0,,<p>I ended up here because I use the AWS CDK and the NodejsFunction Construct. I was also using bundling with <code>minify: true</code>.</p>&#xA;<p>Toggling minify to false resolved this for me.</p>&#xA;,3149835,,,,2022-01-28 14:11:11,"",,0,0,0,2022-01-28 14:11:11
70897415,1,,,2,286,"<p>I am trying to set up GraphQL via AWS Amplify so that all users can see part of a Member object (e.g. the name), but only members in certain groups can see other parts (e.g. the e-mail address).</p>&#xA;<p>I have set up my <code>schema.graphql</code> as follows (note this is a truncated version):</p>&#xA;<pre><code>type Member @model(subscriptions: { level: off }) @auth(rules: [{allow: groups, groups: [&quot;MANAGER&quot;]}, {allow: private, operations: [read]}]) {&#xA;  membershipNumber: Int! @primaryKey&#xA;  firstName: String!&#xA;  lastName: String!&#xA;  email: String! @auth(rules: [{allow: groups, groups: [&quot;MANAGER&quot;]}, {allow: groups, groups: [&quot;COMMITTEE&quot;], operations: [read]}])&#xA;  dietaryRequirements: String @auth(rules: [{allow: groups, groups: [&quot;MANAGER&quot;]}, {allow: groups, groups: [&quot;COMMITTEE&quot;], operations: [read]}])&#xA;}&#xA;</code></pre>&#xA;<p>As I understand it, all logged in users should be able to read <code>membershipNumber</code>, <code>firstName</code> and <code>lastName</code>. Users in the COMMITTEE group should also be able to read <code>email</code> and <code>dietaryRequirements</code>, and users in the MANAGER group should be able to read/write all fields.</p>&#xA;<p>When I try to run a query as a logged in user with no groups though, I get an unauthorized error on <code>dietaryRequirements</code> (which is good) but I am able to read <code>email</code> without an error (which is bad).</p>&#xA;<p>The only difference I can see is that <code>email</code> is a required field, whereas <code>dietaryRequirements</code> isn't. What am I doing wrong? Do required fields override the authorization rules?</p>&#xA;",701867,,,,2022-01-28 16:59:39,AWS Amplify - Field Level GraphQL Auth on Required Fields,<graphql><authorization><aws-amplify><aws-appsync>,0,0,0,2022-01-28 16:59:39
70911083,2,,70911065,0,,"<p>Yes, do this, and you can replace the <code>1</code> with whatever index you want (remember, indexing starts at 0, so this <code>1</code> means the second value. if you want the first, replace it with 0).</p>&#xA;<pre><code>&lt;p&gt;{data.items[1].amount}&lt;/p&gt;&#xA;</code></pre>&#xA;",12101554,,,,2022-01-30 01:14:35,"",,0,0,0,2022-01-30 01:14:35
70916267,2,,70906149,-2,,"<p>Expanding from <a href=""https://stackoverflow.com/a/70912797/17996051"">@Manuel Spigolon</a> original answer, where he stated that one of the pitfalls of his implementation is that it doesn't work on nested queries and 'multiple queries into one request' which this implementation seeks to fix.</p>&#xA;<pre><code>function formFilter(context:any) {&#xA;    let filter:any = {};&#xA;&#xA;    let getValues = (selection:any, parentObj?:string[]) =&gt; {&#xA;        //selection = labelSelection(selection);&#xA;&#xA;        selection.map((selection:any) =&gt; {&#xA;            // Check if the parentObj is defined&#xA;            if(parentObj)&#xA;                // Merge the two objects&#xA;                _.merge(filter, [...parentObj, null].reduceRight((obj, next) =&gt; {&#xA;                    if(next === null) return ({[selection.name?.value]: 1});&#xA;                    return ({[next]: obj});&#xA;                }, {}));&#xA;&#xA;            // Check for a nested selection set&#xA;            if(selection.selectionSet?.selections !== undefined){&#xA;                // If the selection has a selection set, then we need to recurse&#xA;                if(!parentObj) getValues(selection.selectionSet?.selections, [selection.name.value]);&#xA;&#xA;                // If the selection is nested&#xA;                else getValues(selection.selectionSet?.selections, [...parentObj, selection.name.value]);&#xA;            }&#xA;        });&#xA;    }&#xA;&#xA;    // Start the recursive function&#xA;    getValues(context.operation.selectionSet.selections);&#xA;&#xA;    return filter;&#xA;}&#xA;</code></pre>&#xA;<p>Input</p>&#xA;<pre><code>{&#xA;  role(id: &quot;61f1ccc79623d445bd2f677f&quot;) {&#xA;        name&#xA;    users {&#xA;      user_name&#xA;      _id&#xA;      permissions {&#xA;        roles&#xA;      }&#xA;    }&#xA;    permissions&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Output (JSON.stringify)</p>&#xA;<pre><code>{&#xA;   &quot;role&quot;:{&#xA;      &quot;name&quot;:1,&#xA;      &quot;users&quot;:{&#xA;         &quot;user_name&quot;:1,&#xA;         &quot;_id&quot;:1,&#xA;         &quot;permissions&quot;:{&#xA;            &quot;roles&quot;:1&#xA;         }&#xA;      },&#xA;      &quot;permissions&quot;:1&#xA;   }&#xA;}&#xA;</code></pre>&#xA;",17996051,,,,2022-01-30 15:46:44,"",,0,0,0,2022-01-30 15:46:44
70916711,2,,70911950,0,,"<p>GraphQL has the concept <a href=""https://graphql.org/learn/schema/#interfaces"" rel=""nofollow noreferrer"">interfaces</a> for this.  Appsync, AWS's GraphQL implementation, <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/interfaces-and-unions.html"" rel=""nofollow noreferrer"">supports interfaces</a>.</p>&#xA;<p>[Edit:] GraphQL does not support &quot;...spread&quot; syntax for interfaces.  Fields are defined explicitly.  Spread syntax does figure in GraphQL, but in the form of <a href=""https://graphql.org/learn/queries/#fragments"" rel=""nofollow noreferrer"">Fragments</a>, resuable units of fields for reducing repetition in queries.</p>&#xA;<pre><code>interface Character {&#xA;  id: ID!&#xA;  name: String!&#xA;  friends: [Character]&#xA;  appearsIn: [Episode]!&#xA;}&#xA;&#xA;type Human implements Character {&#xA;  id: ID!&#xA;  name: String!&#xA;  friends: [Character]&#xA;  appearsIn: [Episode]!&#xA;  starships: [Starship]&#xA;  totalCredits: Int&#xA;}&#xA;&#xA;type Droid implements Character {&#xA;  id: ID!&#xA;  name: String!&#xA;  friends: [Character]&#xA;  appearsIn: [Episode]!&#xA;  primaryFunction: String&#xA;}&#xA;</code></pre>&#xA;<p>Amplify, which automagically creates AppSync schemas, resolvers and data sources, is apparently a more difficult story.  The <code>amplify-cli</code> repo has an open feature request, <a href=""https://github.com/aws-amplify/amplify-cli/issues/202"" rel=""nofollow noreferrer"">Does the GraphQL Transformer support interfaces?</a>.  I am no Amplify expert, but a quick look at the loooong feature request comment thread suggests the answer for Amplify is <em>&quot;not out-of-the-box&quot;</em>, but <em>&quot;maybe works in narrow circumstances or with advanced customization&quot;</em>.</p>&#xA;",1103511,,1103511,2022-02-02 08:32:38,2022-02-02 08:32:38,"",,0,4,0,2022-01-30 16:38:50
70926722,1,,,0,42,"<p>Currently, I have one project and two code sets, Production and staging. We mostly faced a human error while merging code. I know how to bifurcate code by project flavor but in this project, we have used <strong>AWS amplify</strong> and <strong>GraphQL</strong>. And both have different AWS projects. So we need to pull from Amplify every time whenever changed in dynamo DB. We were confused about how to manage it in one code set?</p>&#xA;",18080935,,,,2022-01-31 13:24:38,How can I manage productFlavors while I use amplify in the android project?,<android><graphql><aws-amplify><android-productflavors><android-build-flavors>,0,0,0,2022-01-31 13:24:38
70930612,1,70930879,,0,305,"<p>I am trying to do a multiple insert using a REST API exposed by Hasura (written in GraphQL).&#xA;This is my mutation:</p>&#xA;<pre><code>mutation insertMultipleMeasurements2($payload: [measurements_insert_input!]!) {&#xA;  insert_measurements(objects: $payload) {&#xA;    returning {&#xA;      time&#xA;    } &#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>and this is the definition of <em>measurements_insert_input</em> in the Actions tab:</p>&#xA;<pre><code>input measurements_insert_input {&#xA;  device: String!&#xA;  value: numeric!&#xA;  variable: String!&#xA;}&#xA;</code></pre>&#xA;<p>(which btw is the only way I found to insert an object of numeric type in a bulk insert).</p>&#xA;<p>When I try to insert something like:</p>&#xA;<pre><code>[&#xA;    {&#xA;        &quot;device&quot;: &quot;TEST&quot;,&#xA;        &quot;value&quot;: 5630,&#xA;        &quot;variable&quot;: &quot;Length&quot;&#xA;    },&#xA;        {&#xA;        &quot;device&quot;: &quot;TEST&quot;,&#xA;        &quot;value&quot;: 5631,&#xA;        &quot;variable&quot;: &quot;Length&quot;&#xA;    }&#xA;]&#xA;</code></pre>&#xA;<p>I get:</p>&#xA;<pre><code>{&#xA;    &quot;path&quot;: &quot;$&quot;,&#xA;    &quot;error&quot;: &quot;expecting a value for non-nullable variable: \&quot;payload\&quot;&quot;,&#xA;    &quot;code&quot;: &quot;validation-failed&quot;&#xA;}&#xA;</code></pre>&#xA;<p>I tried many different ways to rewrite my mutation but looks like none worked.&#xA;Thanks in advance</p>&#xA;",15213074,,504554,2022-03-21 19:07:10,2022-03-21 19:07:10,Null value in bulk insert Hasura GraphQL,<javascript><graphql><apollo-client><hasura>,2,0,0,2022-01-31 17:54:30
70943271,1,,,6,593,"<p>We are developing micro-services in NestJS-typescript.</p>&#xA;<p>Each of them exposes a GraphQL schema. In order to expose a single graph, we are using a federation service, also in NestJS.</p>&#xA;<p>I was trying to integrate with '@graphql-eslint/eslint-plugin'.</p>&#xA;<p>The plugin's roles are divided into 2:</p>&#xA;<ol>&#xA;<li>Roles that don't have any requirements - work great.</li>&#xA;<li>Roles that require schema/operation file - failure.</li>&#xA;</ol>&#xA;<p>Section 2# roles require additional information regarding the schema files.&#xA;As I said before, there are many schema &amp; operation files that are located across the monorepo.</p>&#xA;<p>As mentioned in the <a href=""https://github.com/dotansimha/graphql-eslint"" rel=""noreferrer"">documentation</a>, in order to allow those roles the &quot;parserOptions.schema&quot; should be defined.&#xA;No matter what I have done, I am failing to set the field and I get the following error:</p>&#xA;<blockquote>&#xA;<p>Error: Rule 'unique-argument-names' requires 'parserOptions.schema' to be set and schema to be loaded. See <a href=""https://github.com/dotansimha/graphql-eslint#extended-linting-rules-with-graphql-schema"" rel=""noreferrer"">https://github.com/dotansimha/graphql-eslint#extended-linting-rules-with-graphql-schema</a> for more info</p>&#xA;</blockquote>&#xA;<p>In my POV, I just want the linter to access all of the <code>.graphql</code> files across the whole project and I have no clue why is this not working and why this field is required at all since I have already defined the linter to lint only <code>*.graphql</code> files.</p>&#xA;",9180710,,,,2022-02-01 15:37:15,"@graphql-eslint/eslint-plugin ""parserOptions.schema"" error",<typescript><graphql><eslint><graphql-js><nestjs-config>,0,1,0,2022-02-01 15:37:15
70943339,1,,,0,125,"<p>I'm working with a dataset that contains multiple fields. I need to conduct searches on several fields simultaneously. Is Weaviate compatible with fielded search? If that is the case, I'd appreciate it if you could instruct me on how to combine many search queries.</p>&#xA;<p>This is a scheme:</p>&#xA;<pre><code>  schema = {&#xA;        &quot;classes&quot;: [{&#xA;                &quot;class&quot;: &quot;Post&quot;,&#xA;                &quot;vectorizer&quot;: &quot;none&quot;, # explicitly tell Weaviate not to vectorize anything, we are providing the vectors ourselves through our BERT model&#xA;                &quot;properties&quot;: [{&#xA;                    &quot;name&quot;:&quot;pmid&quot;,&#xA;                    &quot;dataType&quot;: [&quot;int&quot;],&#xA;                },&#xA;                {&#xA;                    &quot;name&quot;:&quot;title&quot;,&#xA;                    &quot;dataType&quot;: [&quot;text&quot;],&#xA;                },&#xA;                {&#xA;                     &quot;name&quot;: &quot;body&quot;,&#xA;                    &quot;dataType&quot;: [&quot;text&quot;],&#xA;                }, &#xA;                {&#xA;                    &quot;name&quot;:&quot;summary&quot;,&#xA;                    &quot;dataType&quot;: [&quot;text&quot;],&#xA;                }]&#xA;        }]&#xA;    }&#xA;</code></pre>&#xA;<p>I'd want to do a simultaneous search on the body and summary. For instance, it identifies publications that have the term &quot;HIV&quot; in their body and summary.</p>&#xA;",9120020,,1501285,2022-02-02 16:43:54,2022-02-02 16:47:21,Is Weaviate compatible with fielded search?,<graphql><weaviate>,1,2,0,2022-02-01 15:42:39
70959513,2,,70943339,0,,"<p>This is certainly possible. Check out the <a href=""https://www.semi.technology/developers/weaviate/current/graphql-references/filters.html#where-filter"" rel=""nofollow noreferrer""><code>where</code>-filter</a> in the Weaviate docs :-)</p>&#xA;<p>Example based on your example schema.</p>&#xA;<pre><code>{&#xA;  Get {&#xA;    Post(&#xA;      nearVector: {&#xA;        vector: [0, 0, 0] # &lt;== your custom vector&#xA;      }&#xA;      where: { # &lt;== searching for a pmid &gt; 12&#xA;        operator: GreaterThan&#xA;        valueInt: 12&#xA;        path: [&quot;pmid&quot;]&#xA;      }&#xA;    ) {&#xA;      pmid&#xA;      title&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1501285,,,,2022-02-02 16:47:21,"",,0,5,0,2022-02-02 16:47:21
70976493,1,,,0,225,"<p>I have a endpoint which I am hitting to get data..The endpoint is</p>&#xA;<pre><code>api.openweathermap.org/data/2.5/weather?q={city name}&amp;appid={API key}&#xA;</code></pre>&#xA;<p>The response it sends is below</p>&#xA;<pre><code>{&#xA;  coord: { lon: 73.2145, lat: 34.1469 },&#xA;  weather: [&#xA;  { id: 801, main: 'Clouds', description: 'few clouds', icon: '02n' }&#xA; ],&#xA; base: 'stations',&#xA; main: {&#xA; temp: 277.91,&#xA; feels_like: 277.91,&#xA; temp_min: 277.91,&#xA; temp_max: 277.91,&#xA; pressure: 1011,&#xA; humidity: 85,&#xA; sea_level: 1011,&#xA; grnd_level: 871&#xA;  },&#xA; visibility: 10000,&#xA; wind: { speed: 0.33, deg: 168, gust: 0.44 },&#xA; clouds: { all: 20 },&#xA; dt: 1643912333,&#xA;sys: {&#xA;type: 2,&#xA;id: 2007435,&#xA;country: 'PK',&#xA;sunrise: 1643853796,&#xA;sunset: 1643891911&#xA;},&#xA; timezone: 18000,&#xA; id: 1185056,&#xA;</code></pre>&#xA;<p>}</p>&#xA;<p>If I am to send a graphQL query to just get the main and wind.How would It be done I am using nestJs a nodeJs framework.</p>&#xA;",14233497,,,,2022-02-03 19:03:35,How to send a graphQl query to third party api,<node.js><graphql><nestjs>,1,0,0,2022-02-03 18:29:59
70976899,2,,70976493,0,,"<p>Return the whole response of the API from the resolver and query it from the frontend</p>&#xA;<pre><code>query {&#xA; fetchWeather {&#xA;   main&#xA;   wind&#xA; }&#xA;}&#xA;</code></pre>&#xA;<p>If you are Using AWS, you can use app sync and its response mapping template.</p>&#xA;",11864502,,,,2022-02-03 19:03:35,"",,0,0,0,2022-02-03 19:03:35
70982528,1,71077655,,0,266,"<p>I'm using Hasura for this.</p>&#xA;<p>Say for example I have a <code>users</code>, <code>tags</code> and <code>users_tags</code> table in a many-to-many relationship.</p>&#xA;<p>User's can define multiple tags (like a persons hobbies) and each tag can belong to multiple people.</p>&#xA;<pre><code>Table users {&#xA;  id int [pk increment]&#xA;}&#xA;&#xA;Table tags {&#xA;  id int [pk increment]&#xA;  name text&#xA;}&#xA;&#xA;Table users_tags {&#xA;  id int [pk increment]&#xA;  user [ref: - user.id]&#xA;  tag [ref: - tags.id]&#xA;}&#xA;</code></pre>&#xA;<p>The <code>users_tags</code> table is a many-to-many table.</p>&#xA;<p>When a new user is created, I can create new tags and associate them with users just fine.</p>&#xA;<p>But when a user is deleted, what GraphQL mutation can I use to remove tags from both <code>tags</code> and <code>users_tags</code> if they don't point to other users.</p>&#xA;",1203580,,,,2022-02-11 09:17:53,Remove user while also removing unused tags in many-to-many relationship in GraphQL?,<graphql><hasura>,1,0,0,2022-02-04 06:59:48
70997814,1,70998778,,0,123,"<p>I deployed a few instances of the same Hasura server unto AWS ECS, I added a CRON job that I wanted to test out, and apparently the job is run only once (which is the ideal situation).</p>&#xA;<p>I was worried I'd have to figure out how to make sure jobs are run only once when I scale an instance horizontally, I'm not complaining, I would just like to know how that works, because I couldn't find it in the documentation.</p>&#xA;",16461234,,,,2022-02-05 14:07:46,How do graphQL engines like Hasura know to trigger jobs once even when they're scaled to multiple instances?,<amazon-web-services><graphql><devops><apollo><hasura>,1,0,0,2022-02-05 12:02:06
71009491,2,,57152911,0,,"<p>So according to the Amplify docs you would have to add an <code>@index</code> on the field you'd like to query on.  I've updated your Project model to have an index on the <code>project_number</code> field.</p>&#xA;<pre><code>type Project &#xA;  @model &#xA;  {&#xA;    id: ID!&#xA;    project_number: String! @index(name: &quot;byProjectName&quot;, queryField: &quot;projectByNumber&quot;, sortKeyFields: [&quot;id&quot;])&#xA;    name: String!&#xA;    architect: String!&#xA;    interfaces: [Interface] @connection(name: &quot;ProjectInterfaces&quot;)&#xA;  }&#xA;</code></pre>&#xA;<p>Then to query by project_number, use the query name set in the queryField (projectByNumber) in the index:</p>&#xA;<pre><code>query projectByNumber($projectNumber: String!) {&#xA;  projectByNumber(project_number: $projectNumber) {&#xA;    items {&#xA;      id&#xA;      project_number&#xA;      name&#xA;      architect&#xA;      ...&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Please checkout the docs under <em>Query employee details by employee name</em> to get a better understanding: <a href=""https://docs.amplify.aws/cli/graphql/examples-and-solutions/#2-query-employee-details-by-employee-name"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/examples-and-solutions/#2-query-employee-details-by-employee-name</a></p>&#xA;",1956540,,,,2022-02-06 16:53:13,"",,0,0,0,2022-02-06 16:53:13
71020842,1,,,0,87,"<p>I am having trouble in fetching data from dynamodb. And my console is showing following error:</p>&#xA;<pre><code>errors: Array(1)&#xA;0: GraphQLError: No graphql endpoint provided. at GraphQLAPIClass.&lt;anonymous&gt; &#xA;  (http://localhost:3001/static/js/bundle.js:1510:23) at step &#xA;  (http://localhost:3001/static/js/bundle.js:986:17) at Object.next &#xA;  (http://localhost:3001/static/js/bundle.js:917:14) at fulfilled &#xA;  (http://localhost:3001/static/js/bundle.js:871:24)&#xA;length: 1 &#xA;</code></pre>&#xA;<p>I have checked aws-exports.js and there is a graphqlEndpoint. The code is below:</p>&#xA;<pre><code>&quot;aws_appsync_graphqlEndpoint&quot;: &quot;https://cezlnqwy4jcypfp7rq2ulaa57e.appsync-api.us-east-1.amazonaws.com/graphql&quot;,&#xA;&quot;aws_appsync_region&quot;: &quot;us-east-1&quot;,&#xA;&quot;aws_appsync_authenticationType&quot;: &quot;AMAZON_COGNITO_USER_POOLS&quot;&#xA;</code></pre>&#xA;<p>I have below pasted code for accessing my list of songs and the code is just going to catch part!</p>&#xA;<pre><code>const [songs, setSongs] = useState([]);&#xA;&#xA;  useEffect(() =&gt; {&#xA;    fetchSongs();&#xA;  }, []);&#xA;&#xA;  const fetchSongs = async () =&gt; {&#xA;    try {&#xA;      const songData = await API.graphql(graphqlOperation(listMusic));&#xA;      const songList = songData.data.listMusic.items;&#xA;      console.log(&quot;song list&quot;, songList);&#xA;      setSongs(songList);&#xA;    } catch (error) {&#xA;      console.log(&quot;error on fetching songs&quot;, error);&#xA;    }&#xA;  };&#xA;</code></pre>&#xA;<p>Can someone please help me out? I am not sure what am I doing wrong here.</p>&#xA;",18142962,,446477,2022-02-19 14:24:38,2022-02-19 14:24:38,"The code is throwing ""No graphql endpoint provided"" error in console",<graphql><dynamodb-queries>,0,0,0,2022-02-07 15:11:20
71025483,1,,,0,217,"<p>How can I tell Apollo to not merge fields that are not related to parent's primary key?</p>&#xA;<p>I have the following schema :</p>&#xA;<pre><code>type Query {&#xA;  account: Building&#xA;}&#xA;&#xA;type Building {&#xA;  id&#xA;  number&#xA;  address&#xA;  units: [Unit]&#xA;}&#xA;&#xA;type Unit {&#xA;  id&#xA;  number&#xA;  description&#xA;}&#xA;</code></pre>&#xA;<p>I tried at first to return only the incoming units by setting :</p>&#xA;<pre class=""lang-js prettyprint-override""><code>Building: {&#xA;      fields: {&#xA;        units: {&#xA;          merge: false,&#xA;        },&#xA;      },&#xA;    },&#xA;</code></pre>&#xA;<p>No success! the <code>merge</code> returns all the units of the building even if they are related to different accounts.&#xA;The idea is to get only the units of a building associated to a unique account.</p>&#xA;<p>then I tried to disable normalization by doing :</p>&#xA;<pre class=""lang-js prettyprint-override""><code>    Building: {&#xA;      keyFields: false,&#xA;    }&#xA;</code></pre>&#xA;<p>with this approach I got a new problem which is the <code>data</code> is <code>undefined</code> !</p>&#xA;<p>Is there a way to access the parent primary key (accountId) on the <code>merge</code> function to only get the units that are linked to the same account and not the building?</p>&#xA;<p>thank you!</p>&#xA;",6260759,,6260759,2022-02-07 21:45:35,2022-02-07 21:45:35,how to disable merge on Apollo Client when there is no unique identifier between parent and child object?,<graphql><apollo><apollo-client>,0,0,0,2022-02-07 21:14:48
71049004,2,,70996219,3,,"<p>It solved with authMode</p>&#xA;<p><code>        const newTodo = await API.graphql({ query: mutations.createClient, variables: {input: inputData}, authMode: &quot;AMAZON_COGNITO_USER_POOLS&quot; });</code></p>&#xA;",5581707,,,,2022-02-09 11:44:26,"",,0,2,0,2022-02-09 11:44:26
71066689,1,,,0,46,"<p>I have some jsonb data in my database:</p>&#xA;<pre><code>[&#xA;  {&#xA;    &quot;a&quot;: 10&#xA;  },&#xA;  {&#xA;    &quot;a&quot;: 2&#xA;  },&#xA;  {&#xA;    &quot;a&quot;: 34&#xA;  }&#xA;]&#xA;</code></pre>&#xA;<p>I am using graphQL to fetch the data. I want to get the item if a is greater 10.&#xA;Could someone please help me achieve thid?</p>&#xA;",17865345,,,,2022-02-10 14:15:18,Compare values jsonb graphql,<postgresql><graphql>,0,1,0,2022-02-10 14:15:18
71083021,1,,,0,81,"<p>I'm trying to grant access so that users can access all user information about themselves + non-sensitive information about others in the user table.</p>&#xA;<p>I thought user would inherit permissions from anonymous user which would give them access to the non-sensitive data of all users. This doesn't seem to be the case.</p>&#xA;<p>Is there a simple way to do this?</p>&#xA;<p><a href=""https://i.stack.imgur.com/BlaJx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BlaJx.png"" alt=""screenshot of user permissions"" /></a></p>&#xA;<p><a href=""https://i.stack.imgur.com/o2CNE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/o2CNE.png"" alt=""Screenshot of anonymous permissions"" /></a></p>&#xA;",5410576,,,,2022-02-14 23:22:21,Hasura User Role Inherited Permissions from Anonymous,<graphql><roles><hasura>,1,0,0,2022-02-11 15:57:56
71103537,2,,65950407,0,,"<p>Explicit many-to-many create/update existing tags <a href=""https://www.prisma.io/docs/concepts/components/prisma-schema/relations/many-to-many-relations#explicit-many-to-many-relations"" rel=""nofollow noreferrer"">read more here</a>&#xA;<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>let args =[1,2,3,4]&#xA;tags: {&#xA;      create: args.tags?.map(tagId=&gt;({&#xA;          tag:{&#xA;              connect:{&#xA;                  id:tagId&#xA;              }&#xA;          }&#xA;      }))&#xA;    },&#xA; }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",8186238,,,,2022-02-13 18:08:29,"",,0,0,0,2022-02-13 18:08:29
71113950,2,,71113467,1,,"<p>If you GraphQL implementation polls Cloud Function, you indeed will get charged for each call to Cloud Functions once they're deployed. There is never a charge for calls to the Cloud Functions emulator.</p>&#xA;",209103,,,,2022-02-14 15:05:26,"",,0,0,0,2022-02-14 15:05:26
71116309,1,,,0,114,"<p>I'm making multiple selectable checkboxes using React, GraphQL, Apollo.</p>&#xA;<p>I would like to make a query if it is selected, insert query and unselected, delete query(I want to generate a query only for selected/removed items)</p>&#xA;<p>Right now I'm making it using mutation but I have a problem where everything is deleted and then inserted.</p>&#xA;<p>I would like to generate a query only for selected/removed items. How can I fix it?</p>&#xA;<p>My code is as follows.</p>&#xA;<pre><code>const [updateNoteMutation] = useUpdateNoteMutation();&#xA;const updateLogic = (key: string, value: string | number | Condition[]) =&gt; {&#xA;  const noteVariables = {&#xA;     variables: {&#xA;       id: noteData.id,&#xA;       noteAttributes: {&#xA;         [key]: value,&#xA;       },&#xA;     },&#xA;  };&#xA;  updateNoteMutation(noteVariables).then(({ errors }) =&gt; {});&#xA;});&#xA;</code></pre>&#xA;<p>const handleCollection = (name: string, arr: Array) =&gt; {&#xA;//arr: List of selected checkboxes.&#xA;const noteArr = [];&#xA;diff.map((val) =&gt; {&#xA;noteArr.push({ name: val });&#xA;});&#xA;updateLogic(name, noteArr);&#xA;};</p>&#xA;<pre><code>&#xA;updateNoteMutation&#xA;&#xA;</code></pre>&#xA;<p>mutation UpdateNote($id: ID!, $noteAttributes: FemappNoteInput!) {&#xA;femappUpdateNote(input: {id: $id, noteAttributes: $noteAttributes}) {&#xA;note {&#xA;id&#xA;checkboxList {&#xA;name&#xA;}&#xA;}&#xA;}&#xA;}</p>&#xA;<pre><code>&#xA;Please let me know if there is a source code that I can refer to&#xA;&#xA;Thanks for reading my question.&#xA;</code></pre>&#xA;",8229332,,,,2022-02-14 18:36:00,"how to make multipe selectable checkboxes using React,GraphQL,Apollo",<reactjs><graphql><react-apollo>,1,0,0,2022-02-14 18:04:20
71119407,2,,71083021,1,,<p>Figured out to create an SQL view for the private user info and set permissions for those columns. Set the remaining columns as public.</p>&#xA;,5410576,,,,2022-02-14 23:22:21,"",,0,0,0,2022-02-14 23:22:21
71123324,1,,,1,91,"<p><a href=""https://i.stack.imgur.com/VsZmg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VsZmg.png"" alt=""enter image description here"" /></a></p>&#xA;<p>This is hasura console environment variable screenshot,</p>&#xA;<p>Is it possible to assign <code>multiple user role</code> in hasura console?&#xA;right now its not working for me,</p>&#xA;<p>only public_user is working, its avoiding everything after space.&#xA;when I do query with admin_user role, I am getting error like <code>tablename</code> not found in <code>query_root</code>.</p>&#xA;<p>Also If I move <code>admin_user</code> before <code>public_user</code>, then <code>public_user</code> will stop working.</p>&#xA;<p>Or is there any other way we can have <code>2 unauthorized role</code> in hasura.</p>&#xA;",5895830,,5895830,2022-02-15 08:49:23,2022-02-16 21:44:29,Assign multiple user to HASURA_GRAPHQL_UNAUTHORIZED_ROLE,<javascript><reactjs><graphql><hasura>,1,0,0,2022-02-15 08:38:10
71124999,1,,,2,413,"<p>I work with Amplify/<code>graphQl transformer V2</code>, I try to do the same things like the official documentation of Amplify : <a href=""https://docs.amplify.aws/cli/graphql/data-modeling/#many-to-many-relationship"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/data-modeling/#many-to-many-relationship</a></p>&#xA;<p>So in the part of <code>@manyToMany</code> relationship, I understand that the relational Table generated automatically and in amplify studio I found all queries and mutaions... of this table.</p>&#xA;<p>My question is how can I add some filds in this table (relationalTable).</p>&#xA;<p>N.B : I'm using the same example of the documentation : <a href=""https://docs.amplify.aws/cli/graphql/data-modeling/#many-to-many-relationship"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/data-modeling/#many-to-many-relationship</a> so how can I add for example the fild <em><strong>City</strong></em> in the <code>PostTags</code> table ?</p>&#xA;<pre><code>type Post @model {&#xA;id: ID!&#xA;title: String!&#xA;content: String&#xA;tags: [Tag] @manyToMany(relationName: &quot;PostTags&quot;)&#xA;}&#xA;&#xA;&#xA;&#xA;type Tag @model {&#xA;id: ID!&#xA;label: String!&#xA;posts: [Post] @manyToMany(relationName: &quot;PostTags&quot;)&#xA;}&#xA;</code></pre>&#xA;",18212326,,,,2022-10-18 19:36:08,How can I add a field to relational table in amplify graphql?,<amazon-web-services><aws-lambda><graphql><amazon-dynamodb><aws-amplify>,2,0,0,2022-02-15 10:40:06
71134951,1,,,0,12,"<p>According to <a href=""https://docs.nestjs.com/graphql/extensions"" rel=""nofollow noreferrer"">Nest.js docs</a>, in GraphQL apps, field based authorization can be performed using <code>FieldMiddlware</code> and <code>Extensions</code> combination. Consider following simplified schema:</p>&#xA;<pre><code>@ObjectType()&#xA;export class Profile{&#xA;    @Field((type) =&gt; ID)&#xA;    id: string;&#xA;&#xA;    @Field((type) =&gt; Settings )&#xA;    settings: Settings ;&#xA;}&#xA;&#xA;@ObjectType()&#xA;export class Settings {&#xA;    @Field({ middleware: [checkRoleMiddleware] })&#xA;    @Extensions({ role: Role.ADMIN })&#xA;    sensetiveField: string;&#xA;}&#xA;</code></pre>&#xA;<p>In this case only <code>ADMIN</code> role can access <code>Profile.settings.sensetiveField</code>.</p>&#xA;<p>But now I have additional requirement: I need to give access to <code>sensetiveField</code> to <code>ADMIN</code> and to <code>Profile</code>'s <em>owner</em> as well (i.e. users should also see their sensetive fields).</p>&#xA;<p>So basically question is it possible somehow to allow to give access to <code>sensetiveField</code> for profile owners?</p>&#xA;<hr />&#xA;<p><strong>Not important, just my thoughts</strong>: I could create another <code>FieldMiddeware</code>, where I could compare <code>ctx.req.user.id === Profile#id</code>, but I can't access from middleware to parent type (i.e. <code>Profile</code>) to retrieve <code>Profile.id</code> (<code>info.parentType</code> in field middleware points to <code>Settings</code> object, not to root <code>Profile</code>).</p>&#xA;<p>I'm thinking that I need to refuse using FieldMiddleware and use custom <code>Interceptor</code> instead. It will await for response being generated and then will delete sensetive fields according to current user permissions. What do you think?</p>&#xA;<p>Thanks.</p>&#xA;",2900817,,2900817,2022-02-16 10:49:27,2022-02-16 10:49:27,Nest.JS | GraphQL: field based authorization using FieldMiddleware - allow access both to ADMIN and profile owner,<graphql><authorization><nestjs>,0,0,0,2022-02-16 00:13:00
71139584,2,,70695974,1,,"<p>When I tried to query my GraphQL API on Heroku with Postman, at first it said &quot;restricted access&quot; or something like that. Then I realised that, unlike with MongoDB, when you deploy PostgreSQL on Heroku, the latter creates it's own database, different from the one created in dev environment</p>&#xA;<p>So, in prod, Strapi content-types are saved, but naturally some things are wiped, like the entries in collections and <strong>permissions settings</strong>. I had &quot;find&quot; and &quot;findOne&quot; checkboxes unchecked there, so I checked them back on. Prod API still shows &quot;GET query missing&quot;, but the data appeared in Postman and the app worked as expected</p>&#xA;<p>If you have PostgreSQL deployed, check your Strapi settings (Settings -&gt; Users &amp; Permissions Plugin -&gt; Roles -&gt; Permissions -&gt; name of your collection type) and see if the checkboxes are unchecked and try to check them back. That did the trick for me</p>&#xA;",10489004,,,,2022-02-16 09:54:08,"",,0,0,0,2022-02-16 09:54:08
71146860,1,,,3,731,"<p>I am using AWS AppSync GraphQL and am trying to filter a list by a nested object's value.</p>&#xA;<p>My schema looks like this:</p>&#xA;<pre><code>type Post @model {&#xA;    id: ID&#xA;    title: String&#xA;    content: String&#xA;    hidden: Boolean&#xA;}&#xA;&#xA;type PinnedPost @model&#xA;{&#xA;  id: ID!&#xA;  userID: ID @index(name: &quot;byUser&quot;, sortKeyFields: [&quot;postID&quot;])&#xA;  user: User @hasOne (fields: [&quot;userID&quot;])&#xA;  postID: ID&#xA;  post: Post @hasOne (fields: [&quot;postID&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>I would like to run a query to list the PinnedPost for a user, but filter out the hidden ones, like so:</p>&#xA;<pre><code>const pinnedData = await API.graphql(graphqlOperation(             &#xA;  listPinnedPosts, {&#xA;     filter: {&#xA;      userID: {&#xA;        eq: userInfo.attributes.sub&#xA;      },&#xA;      post: {&#xA;        hidden: {&#xA;         eq: false&#xA;      },&#xA;     }&#xA;    }&#xA;  }&#xA;))&#xA;</code></pre>&#xA;<p>I have updated the filterinput in my Schema through the AppSync Console to:</p>&#xA;<pre><code>input ModelPinnedPostFilterInput {&#xA;    id: ModelIDInput&#xA;    userID: ModelIDInput&#xA;    postID: ModelIDInput&#xA;    post: ModelPostFilterInput&#xA;    and: [ModelPinnedPostFilterInput]&#xA;    or: [ModelPinnedPostFilterInput]&#xA;    not: ModelPinnedPostFilterInput&#xA;}&#xA;</code></pre>&#xA;<p>There are no errors associated with it, but the nested filter is not being applied as it will return both true and false values for hidden.</p>&#xA;<p>This question was sort of answered before:</p>&#xA;<p><a href=""https://stackoverflow.com/questions/55132782/appsync-graphql-how-to-filter-a-list-by-nested-value"">Appsync &amp; GraphQL: how to filter a list by nested value</a></p>&#xA;<p>but it is not clear to me where I am supposed to edit the mapping template to allow this. How can I achieve this result?</p>&#xA;",14055274,,,,2022-02-16 17:51:44,How to query a list on AppSync GraphQL by a nested object,<amazon-web-services><react-native><graphql><amazon-dynamodb><aws-appsync>,0,0,0,2022-02-16 17:51:44
71160797,1,,,0,17,"<p>I defined a type that relies on two different API endpoints. Let's call them A and B. For the query <code>getObjects</code> I want to return an array with objects of type <code>SomeType</code></p>&#xA;<pre><code>type SomeType{&#xA;   id: String // this comes from A&#xA;   url: String // this comes from B&#xA;  }&#xA;&#xA;type Query{&#xA;       getObjects: [SomeType]&#xA;    }&#xA;</code></pre>&#xA;<p>I have a resolver for getObjects that retrieves data from <code>endpoint A</code> and feeds in <code>SomeType</code> to return an array. But I need to resolve the url separately, because the url comes from a <code>endpoint B</code>, right? Thus I write a resolver for the field <code>url</code>. But I don't want to make a request inside of resolver for url as it would mean that I make a request for each object from <code>endpoint A</code> (in my case ~ 18k). endpoint B returns an object with key-value pairs. The key is the <code>id</code> I get from <code>endpoint A</code>, and the value has the <code>url</code>.</p>&#xA;<pre><code>const resolvers = {&#xA;        SomeType: {&#xA;            url: (parent, {}, context) =&gt; {&#xA;                console.log(parent.id); // parent.id is needed to index the &#xA;                return someurl;&#xA;            } &#xA;        },&#xA;        Query: {&#xA;            getObjects: async () =&gt; {&#xA;                const mainResponse = await fetch(&quot;endpoint A&quot;);&#xA;                const responseForLogo = await fetch(&quot;endpoint B&quot;)&#xA;    &#xA;                const mainData = await mainResponse.json();&#xA;                const secondaryData = await responseForLogo.json();&#xA;    &#xA;                return mainData['data'];&#xA;            },&#xA;        }&#xA;    }&#xA;</code></pre>&#xA;<p>But how can I efficiently get the Url for each object? One way I imagined was to make the request inside the <code>getObjects</code> resolver and store the response object and access it in the resolver for <code>url</code>.</p>&#xA;<p>Hope someone can help me with that.</p>&#xA;",12171521,,,,2022-02-17 15:19:53,"GraphQL type needs information from two APIs, don't want to make unnecessary many requests in resolver",<javascript><graphql><graphql-js><resolver>,0,0,0,2022-02-17 15:19:53
71194402,1,,,0,125,"<p>I have a query in AppSync that works and I now want to add this to my Vue app:</p>&#xA;<pre><code>query MyQuery {getOrder(id: &quot;704ffe56-f975-4068-b736-664a8f7fd7c3&quot;) {&#xA;id&#xA;orders {&#xA;  items {&#xA;    createdAt&#xA;    order {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>}&#xA;}</p>&#xA;<p>The query is protected by incognito user pool (am logged into Appsync with a valid user).</p>&#xA;<p>I have this, but get complaints:</p>&#xA;<pre><code> async getOrder() {&#xA;&#xA;    const { data } = await API.graphql(&#xA;         graphqlOperation(getOrder, {&#xA;      input: { id: &quot;704ffe56-f975-4068-b736-664a8f7fd7c3&quot;,&#xA;       },&#xA;       authMode: 'AMAZON_COGNITO_USER_POOLS'&#xA;    })&#xA;    );&#xA;   &#xA;      console.log(data);&#xA;    &#xA;  }&#xA;</code></pre>&#xA;<p>The error:&#xA;message: &quot;Variable 'id' has coerced Null value for NonNull type 'ID!'&quot;</p>&#xA;<p>There seems to be various ways/styles to call Graphql operations but I cannot see a Vue JS example similar to the the one I am trying to execute.</p>&#xA;<p>Thanks</p>&#xA;",10520725,,10520725,2022-02-21 08:45:02,2022-02-21 08:45:02,AWS Graphql with Vue JS - pass parameter to a query,<vue.js><graphql><aws-appsync>,0,0,0,2022-02-20 12:28:45
71203172,2,,66746771,1,,"<p>For me, restricting the public access to read operations <em>in the schema file</em> (<code>amplify/backend/api/&lt;name&gt;/schema.graphql</code>) was sufficient:</p>&#xA;<pre><code>type SomeModel @model @auth(rules: [{allow: public, operations: [read]}]) {&#xA;  id: ID!&#xA;  # ...&#xA;}&#xA;</code></pre>&#xA;<p>You can check those permissions via <code>amplify status api -acm SomeModel</code>.</p>&#xA;<p>Do not forget to provision those changes by running <code>amplify push</code>.</p>&#xA;",66981,,,,2022-02-21 08:24:13,"",,0,0,0,2022-02-21 08:24:13
71214066,1,,,0,123,"<p>I know this has been asked before but I've tried everything from previous posts and still couldn't find a solution for my problem. I can query the table from DynamoDB no problem but can't from lambda. I deleted and created the table with the same name to get rid of a sort key hoping to fix my issue but it did not fix it too. So here is my code</p>&#xA;<h2>Params</h2>&#xA;<pre><code>  const queryParams = {&#xA;    TableName: tableName,&#xA;    KeyConditionExpression: 'postId = :postId',&#xA;    ExpressionAttributeValues: { &quot;:postId&quot;: postId }&#xA;  };&#xA;</code></pre>&#xA;<h2>Schema</h2>&#xA;<pre><code>   type LikeRelationship&#xA;      @model(&#xA;        mutations: {&#xA;          create: &quot;createLikeRelationship&quot;&#xA;          delete: &quot;deleteLikeRelationship&quot;&#xA;          update: null&#xA;        }&#xA;        timestamps: null&#xA;      )&#xA;      @auth(&#xA;        rules: [&#xA;          {&#xA;            allow: owner&#xA;            ownerField: &quot;likerId&quot;&#xA;            operations: [read, create, delete]&#xA;          }&#xA;          { allow: public, provider: iam, operations: [read] }&#xA;        ]&#xA;      )&#xA;      @key(fields: [&quot;postId&quot;]) {&#xA;      postId: ID!&#xA;      postOwnerId: String!&#xA;      likerType: String&#xA;      likerName: String&#xA;      likerId: ID!&#xA;      timestamp: Int!&#xA;    }&#xA;</code></pre>&#xA;<h2>Full Lambda Code</h2>&#xA;<pre><code>/* Amplify Params - DO NOT EDIT&#xA;    API_GROOVESECONDED_GRAPHQLAPIIDOUTPUT&#xA;    API_GROOVESECONDED_LIKERELATIONSHIPTABLE_ARN&#xA;    API_GROOVESECONDED_LIKERELATIONSHIPTABLE_NAME&#xA;    ENV&#xA;    REGION&#xA;Amplify Params - DO NOT EDIT */&#xA;&#xA;exports.handler = async (event, context, callback) =&gt; {&#xA;  &#xA;const AWS = require('aws-sdk');&#xA;const docClient = new AWS.DynamoDB.DocumentClient({ apiVersion: '2012-08-10' });&#xA;&#xA;const tableName = 'LikeRelationship-76mphdcsf5cijbgq5kkcny3xpe-staging';&#xA;async function deleteItems(tableName, postId ) {&#xA;&#xA;  const queryParams = {&#xA;    TableName: tableName,&#xA;    KeyConditionExpression: 'postId = :postId',&#xA;    ExpressionAttributeValues: { &quot;:postId&quot;: postId }&#xA;  };&#xA;  &#xA;  const queryResults = await docClient.query(queryParams).promise();&#xA;&#xA;  if (queryResults.Items &amp;&amp; queryResults.Items.length &gt; 0) {&#xA;    &#xA;    const batchCalls = chunks(queryResults.Items, 25).map( async (chunk) =&gt; {&#xA;      const deleteRequests = chunk.map( item =&gt; {&#xA;        return {&#xA;          DeleteRequest : {&#xA;            Key : {&#xA;              'partitionId' : item.partitionId,&#xA;              'sortId' : item.sortId,&#xA;&#xA;            }&#xA;          }&#xA;        };&#xA;      }&#xA;      );&#xA;&#xA;&#xA;      const batchWriteParams = {&#xA;        RequestItems : {&#xA;          [tableName] : deleteRequests&#xA;        }&#xA;      };&#xA;&#xA;await docClient.batchWrite(batchWriteParams).promise();&#xA;&#xA;    });&#xA;&#xA;await Promise.all(batchCalls);&#xA;&#xA;&#xA;    &#xA;  }&#xA;}&#xA;    &#xA;    if (event.body !== null &amp;&amp; event.body !== undefined) {&#xA;        let data = JSON.parse(event.body);&#xA;&#xA;        if (typeof data.postId === 'undefined') {&#xA;            return sendRes(404, '{ error: true, message: &quot;postId undefined.&quot; }');&#xA;        }&#xA;        try {&#xA;         await deleteItems(tableName, data.postId );&#xA;        } catch (e) {&#xA;           return sendRes(404, '{ error: true, message: &quot; ' + e + data.postId + typeof data.postId + ' &quot; }');&#xA;        }&#xA;         &#xA;        return sendRes(200, '{ &quot;error&quot;: false, &quot;message&quot;: &quot;Success&quot; }');&#xA;    }    &#xA;    &#xA;    return sendRes(404, '{ error: true, message: &quot;Event body null or undefined.&quot; }');&#xA;};&#xA;const sendRes = (status, body) =&gt; {&#xA;    var response = {&#xA;        statusCode: status,&#xA;        headers: {&#xA;            &quot;Content-Type&quot; : &quot;application/json&quot;,&#xA;            &quot;Access-Control-Allow-Headers&quot; : &quot;Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token&quot;,&#xA;            &quot;Access-Control-Allow-Methods&quot; : &quot;OPTIONS,POST&quot;,&#xA;            &quot;Access-Control-Allow-Credentials&quot; : true,&#xA;            &quot;Access-Control-Allow-Origin&quot; : &quot;*&quot;,&#xA;            &quot;X-Requested-With&quot; : &quot;*&quot;&#xA;        },&#xA;        body: body&#xA;    };&#xA;    return response;&#xA;};&#xA;&#xA;&#xA;// https://stackoverflow.com/a/37826698/3221253&#xA;function chunks(inputArray, perChunk) {&#xA;  return inputArray.reduce((all,one,i) =&gt; {&#xA;    const ch = Math.floor(i/perChunk); &#xA;    all[ch] = [].concat((all[ch]||[]),one); &#xA;    return all;&#xA; }, []);&#xA;}&#xA;</code></pre>&#xA;<h2>IAM Role</h2>&#xA;<pre><code>{&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Sid&quot;: &quot;VisualEditor0&quot;,&#xA;            &quot;Effect&quot;: &quot;Allow&quot;,&#xA;            &quot;Action&quot;: [&#xA;                &quot;dynamodb:BatchGetItem&quot;,&#xA;                &quot;dynamodb:BatchWriteItem&quot;,&#xA;                &quot;dynamodb:Delete*&quot;,&#xA;                &quot;dynamodb:Get*&quot;,&#xA;                &quot;dynamodb:Scan&quot;,&#xA;                &quot;dynamodb:Query&quot;&#xA;            ],&#xA;            &quot;Resource&quot;: [&#xA;                &quot;arn:aws:dynamodb:eu-central-1:382762466424:table/LikeRelationship-76mphdcsf5cijbgq5kkcny3xpe-staging&quot;,&#xA;                &quot;arn:aws:dynamodb:eu-central-1:382762466424:table/LikeRelationship-76mphdcsf5cijbgq5kkcny3xpe-staging/index/*&quot;&#xA;            ]&#xA;        },&#xA;        {&#xA;            &quot;Sid&quot;: &quot;VisualEditor1&quot;,&#xA;            &quot;Effect&quot;: &quot;Allow&quot;,&#xA;            &quot;Action&quot;: [&#xA;                &quot;dynamodb:List*&quot;,&#xA;                &quot;dynamodb:Describe*&quot;&#xA;            ],&#xA;            &quot;Resource&quot;: [&#xA;                &quot;arn:aws:dynamodb:eu-central-1:382762466424:table/LikeRelationship-76mphdcsf5cijbgq5kkcny3xpe-staging&quot;,&#xA;                &quot;arn:aws:dynamodb:eu-central-1:382762466424:table/LikeRelationship-76mphdcsf5cijbgq5kkcny3xpe-staging/index/*&quot;&#xA;            ]&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;",17473197,,17473197,2022-02-22 08:56:24,2022-02-22 08:56:24,NodeJS ValidationException: The provided key element does not match the schema,<node.js><amazon-web-services><aws-lambda><graphql><amazon-dynamodb>,0,7,0,2022-02-21 23:09:15
71219444,2,,68630986,0,,"<p>Answer by @epopisces is to the point , I was also looking for the same thing. Now addition to what he said. Checking the status of Dependabot security updates is possible via GET request (GET /repos/{owner}/{repo}) to a particular repo , which can have security and analysis tag in response(only if we have Advanced security license). No other way to know the status yet via API.</p>&#xA;<p><a href=""https://docs.github.com/en/rest/reference/repos#get-a-repository"" rel=""nofollow noreferrer"">https://docs.github.com/en/rest/reference/repos#get-a-repository</a></p>&#xA;",11813875,,,,2022-02-22 10:16:48,"",,0,0,0,2022-02-22 10:16:48
71249807,2,,71249327,2,,"<p>This is very unintuitive, but Fauna seems to be returning a paginated result. Read more about it <a href=""https://docs.fauna.com/fauna/current/tutorials/graphql/pagination"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<p>The best thing would be to GraphiQL to have a look at the schema of the Fauna GraphQL endpoint. Autocomplete should also work when you look for fields to query. The error basically says that you can't query the id directly. Try this:</p>&#xA;<pre><code>{ users { data { id } } }&#xA;</code></pre>&#xA;",3849167,,,,2022-02-24 09:31:00,"",,0,2,0,2022-02-24 09:31:00
71272023,2,,64281594,1,,"<p>I think we're in a bit of a transition or gray area here.  I'm very new to Amplify and have been investigating moving to a single-table design as there are sources (below) that indicate that it's always be there but you'd have to write everything in VTL templates.  But in 2020 they released direct lambda resolver support: <a href=""https://youtu.be/EOQqi6Yun7g?t=960"" rel=""nofollow noreferrer"">https://youtu.be/EOQqi6Yun7g?t=960</a> (clip)</p>&#xA;<p>However, it seems like you lose access to the <code>@auth</code> directive (and probably others because you're no longer going to use <code>@model</code>) along with a lot of the nice out-of-the-box functionality that's available with Amplify's multi-table approach.</p>&#xA;<p>At this point, being that I'm developing a new app, I'm going to stick with the default multi-table design to hasten the process of getting the app functional.</p>&#xA;<p>Trying to implement the single-table design seems to go against what the Amplify team recommends and requires more manual work. You'd have to manually create custom lambda functions (AppSync) and code queries to DynamoDb for each data access element and manage authorization through some other means which I'm not aware of at this time.  Maybe someone can chime in here...</p>&#xA;<hr />&#xA;<h2>Single table vs multi table info</h2>&#xA;<p>Using Amplify with single table:&#xA;<a href=""https://youtu.be/EOQqi6Yun7g"" rel=""nofollow noreferrer"">https://youtu.be/EOQqi6Yun7g</a></p>&#xA;<p>Single vs Multi Clip:</p>&#xA;<ul>&#xA;<li><a href=""https://youtu.be/1WF_wped808?t=1251"" rel=""nofollow noreferrer"">https://youtu.be/1WF_wped808?t=1251</a> (clip)</li>&#xA;<li><a href=""https://www.alexdebrie.com/posts/dynamodb-single-table/"" rel=""nofollow noreferrer"">https://www.alexdebrie.com/posts/dynamodb-single-table/</a> (towards bottom)</li>&#xA;<li><a href=""https://youtu.be/EOQqi6Yun7g?t=1288"" rel=""nofollow noreferrer"">https://youtu.be/EOQqi6Yun7g?t=1288</a> (clip)</li>&#xA;</ul>&#xA;<p>Example single table design by Alex Debrie:&#xA;<a href=""https://gist.github.com/dabit3/96dc51e688b18a7d40fc534331758c56"" rel=""nofollow noreferrer"">https://gist.github.com/dabit3/96dc51e688b18a7d40fc534331758c56</a></p>&#xA;<p>More Discussion:&#xA;<a href=""https://stackoverflow.com/a/56438716/1956540"">https://stackoverflow.com/a/56438716/1956540</a></p>&#xA;<h2>Basic Setup steps</h2>&#xA;<p>I setup a single table by following the below instructions.  Again, you don't use <code>@model</code>s for this. Also, I <em>think</em> you have to include a <code>type query {}</code> in your schema for it to compile, but I could be wrong here.</p>&#xA;<p>So the basic steps are:</p>&#xA;<ul>&#xA;<li>Create a single table (amplify add storage)</li>&#xA;<li>amplify push</li>&#xA;<li>Create your schema in the <code>schema.graphql</code> file.</li>&#xA;<li>Create supporting lambda function (amplify add function)&#xA;<ul>&#xA;<li>Note: if you look at the example here, I believe you can create an entry point to routes to all other methods: <a href=""https://gist.github.com/dabit3/96dc51e688b18a7d40fc534331758c56#lambda"" rel=""nofollow noreferrer"">https://gist.github.com/dabit3/96dc51e688b18a7d40fc534331758c56#lambda</a></li>&#xA;</ul>&#xA;</li>&#xA;<li>Add the DynamoDb query code in the function.</li>&#xA;<li>amplify push</li>&#xA;</ul>&#xA;<p>Complete steps for Setting up a single Table:<br />&#xA;<a href=""https://catalog.us-east-1.prod.workshops.aws/workshops/53b10bf8-2271-4ab4-bfd2-39e878a90dc8/en-US/lab2/1-vtl"" rel=""nofollow noreferrer"">https://catalog.us-east-1.prod.workshops.aws/workshops/53b10bf8-2271-4ab4-bfd2-39e878a90dc8/en-US/lab2/1-vtl</a> (both &quot;Connecting to an existing DynamoDB table&quot; and &quot;Direct Lambda Resolver&quot; steps)</p>&#xA;<hr />&#xA;<p>Not trying to be negative about Amplify, it is awesome, I love what they are doing with this product.  I just think it's very new to everyone and I'm hoping this post is no longer valid next year and we continue to see great progress from the team.</p>&#xA;",1956540,,,,2022-02-25 21:44:48,"",,0,0,0,2022-02-25 21:44:48
71309050,2,,71306981,1,,"<p>You could potentially do something like the following at the top of your root <code>.htaccess</code> file to block all URLs, except for those that start <code>/graphql/</code>, <code>/wp-admin/</code> or <code>/wp-content/</code>.</p>&#xA;<p>For example, try the following:</p>&#xA;<pre><code>RewriteEngine On&#xA;&#xA;RewriteRule !^(graphql|wp-admin|wp-content)/ - [F]&#xA;</code></pre>&#xA;<p>If anything else is requested then a 403 Forbidden is served.</p>&#xA;<p>However, I suspect there will be other URLs/files that still need to be accessible for this to work?</p>&#xA;",369434,,,,2022-03-01 13:15:29,"",,0,1,0,2022-03-01 13:15:29
71322940,2,,70967730,2,,"<p>Try this:</p>&#xA;<pre><code>export const permissions = shield({&#xA;    Query: {&#xA;        _service: allow,&#xA;    },&#xA;    _Service: {&#xA;        sdl: allow&#xA;    }&#xA;},{&#xA;    fallbackRule: deny,&#xA;    debug: true,&#xA;    allowExternalErrors: true,&#xA;});&#xA;</code></pre>&#xA;<p>This seems to be what Apollo uses when performing the introspection. You might also need to allow: &quot;Query._entities&quot;, &quot;Query._service&quot;, &quot;_Entity.*&quot;, &quot;_Service.*&quot;, &quot;_Any.*&quot; since these are also used by Apollo.</p>&#xA;<p>You should probably implement some form of security rather than using &quot;allow&quot; for these, but I hope this answers your question...</p>&#xA;",7729462,,,,2022-03-02 12:46:09,"",,0,0,0,2022-03-02 12:46:09
71329183,2,,62921739,1,,"<p>You need to override the generated resolver for <code>update</code> mutation.</p>&#xA;<p>Just copy the content of the autogenerated resolvers and make some changes.</p>&#xA;<p>File name may look like this:</p>&#xA;<pre><code>&lt;project-root&gt;/amplify/backend/api/&lt;api-name&gt;/build/resolvers/&lt;TypeName&gt;.&lt;FieldName&gt;.&lt;req/res&gt;.vlt&#xA;</code></pre>&#xA;<p>To override, copy this file to:</p>&#xA;<pre><code>&lt;project-root&gt;/amplify/backend/api/&lt;api-name&gt;/resolvers/&lt;TypeName&gt;.&lt;FieldName&gt;.&lt;req/res&gt;.vlt&#xA;</code></pre>&#xA;<p>For example: <code>amplify/backend/api/blog/build/resolvers/Mutation.updatePost.req.vtl</code></p>&#xA;<p>Then remove these line:</p>&#xA;<pre><code>## Begin - key condition **&#xA;#if( $ctx.stash.metadata.modelObjectKey )&#xA;  #set( $keyConditionExpr = {} )&#xA;  #set( $keyConditionExprNames = {} )&#xA;  #foreach( $entry in $ctx.stash.metadata.modelObjectKey.entrySet() )&#xA;    $util.qr($keyConditionExpr.put(&quot;keyCondition$velocityCount&quot;, {&#xA;  &quot;attributeExists&quot;: true&#xA;}))&#xA;    $util.qr($keyConditionExprNames.put(&quot;#keyCondition$velocityCount&quot;, &quot;$entry.key&quot;))&#xA;  #end&#xA;  $util.qr($ctx.stash.conditions.add($keyConditionExpr))&#xA;#else&#xA;  $util.qr($ctx.stash.conditions.add({&#xA;  &quot;id&quot;: {&#xA;      &quot;attributeExists&quot;: true&#xA;  }&#xA;}))&#xA;#end&#xA;</code></pre>&#xA;<p>That part of vtl code checks that the id on update mutation should exists.</p>&#xA;",7348878,,,,2022-03-02 21:11:11,"",,0,0,0,2022-03-02 21:11:11
71334771,2,,69554576,1,,"<p>You could try allowing the following branches:</p>&#xA;<pre><code>export const permissions = shield({&#xA;    Query: {&#xA;        _service: allow,&#xA;    },&#xA;    _Service: {&#xA;        sdl: allow&#xA;    }&#xA;},{&#xA;    fallbackRule: deny,&#xA;    allowExternalErrors: true,&#xA;    ...&#xA;});&#xA;</code></pre>&#xA;<p>When Apollo performs the introspection, it uses these two branches initially. Also note the &quot;allowExternalErrors&quot; flag. When encountering an error, graphql-shield absorbs them, which can hide issues which you are trying to debug. This <em>might</em> also be a problem, although your code seems fine otherwise.</p>&#xA;<p>Apollo also uses &quot;Query._entities&quot;, &quot;Query._service&quot;, &quot;_Entity.*&quot;, &quot;_Service.*&quot;, &quot;_Any.*&quot; but I haven't found this to be used by the initial introspection.</p>&#xA;<p>You mentioned that you can't generate a token for your build process but it is probably a good idea to protect these endpoints rather than use allow.</p>&#xA;",7729462,,,,2022-03-03 09:25:17,"",,0,1,0,2022-03-03 09:25:17
71344929,1,,,0,522,"<p>I've currently been handling batch operations with a for loop, but obviously, this is not the best approach, especially as I'm adding an 'upload by CSV' option, which will take 1000+ putItems.</p>&#xA;<p>I searched around for the best ways to implement this, specifically this link:&#xA;<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-batch.html</a></p>&#xA;<p>However, even after following those steps mentioned I'm not able to achieve a batch operation. Below is my code for a 'batch delete' operation.</p>&#xA;<p>Here is my schema.graphql file:</p>&#xA;<pre><code>type Client @model @auth(rules: [{ allow: owner }]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  company: String&#xA;  phone: String&#xA;  email: String&#xA;}&#xA;&#xA;type Mutation {&#xA;  batchDelete(ids: [ID]): [Client]&#xA;}&#xA;</code></pre>&#xA;<p>I then create two new files. One <strong>request mapping template</strong> and one <strong>response mapping template</strong>.</p>&#xA;<pre><code>#set($clientsdata = [])&#xA;#foreach($item in ${ctx.args.clients})&#xA;    $util.qr($clientsdata.delete($util.dynamodb.toMapValues($item)))&#xA;#end&#xA;&#xA;{&#xA;    &quot;version&quot; : &quot;2018-05-29&quot;,&#xA;    &quot;operation&quot; : &quot;BatchDeleteItem&quot;,&#xA;    &quot;tables&quot; : {&#xA;        &quot;Clients&quot;: $utils.toJson($clientsdata)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>and then as per the tutorial a &quot;simple pass through&quot; response mapping template:&#xA;<code>$util.toJson($ctx.result.data.Posts)</code></p>&#xA;<p>However now when I run the batchdelete command, I keep getting nothing returned.&#xA;Would really appreciate guidance on this!</p>&#xA;",8304719,,,,2022-05-08 15:51:10,"Creating Batch Operations with AWS Amplify [GraphQL, DataStore, AppSync]",<amazon-web-services><graphql><next.js><aws-amplify><aws-appsync>,1,0,0,2022-03-03 23:22:24
71349772,2,,53372696,1,,"<p>DynamoDB is schema-less, and doesn't care about your application schema as long as you don't try to change its <em>hash key</em> or <em>range key</em></p>&#xA;<p>Therefore, nothing really happens on the datastore side. If you drop a key and add a new one in your schema, then your <em>application</em> will start to search and write data to the new key. Old key will simply be ignored from now on, but existing data will be kept in the datastore.</p>&#xA;<p>If you want to rename a key, then you would have to migrate the data by yourself through mass update on the table. There are many ways to do it, the simpliest one being scaning the table and performing updates on found items.</p>&#xA;",1103340,,,,2022-03-04 10:09:40,"",,0,0,0,2022-03-04 10:09:40
71357329,1,,,0,165,"<p>I have access to my blog data via GraphQL, which I have no experience with. I have an endpoint for posts but not for images. I can't change this API.</p>&#xA;<p>Each post can have between 0 and N pictures. This is a simplified query for posts:</p>&#xA;<pre><code>query {&#xA;  posts {&#xA;    title&#xA;    pictures {&#xA;      uri&#xA;      width&#xA;      height&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I want to fetch all the pictures of all the posts with pagination (offset and limit).</p>&#xA;<p>In essence, I want to replicate the result of doing this in MySQL:</p>&#xA;<pre><code>SELECT * FROM pictures LIMIT 0, 10&#xA;</code></pre>&#xA;<p>And ideally I'd like to retrieve the total number pictures too.</p>&#xA;<p>For example, if I have two posts with 7 pictures each, and I set the limit to 10 and the offset to 0, I should be able to fetch all the pictures of the first one and 3 of the second one. Then I could do a second request with an offset of 10, and that should return the 4 remaining pictures of the second post.</p>&#xA;<p>Is this at all possible with GraphQL? Thanks a lot!</p>&#xA;",8871987,,,,2022-03-04 21:29:57,How can I fetch and paginate all the pictures of all the posts with GraphQL?,<graphql>,1,0,0,2022-03-04 21:21:12
71379364,1,,,-1,71,"<p>I've already made an <code>action</code> of type <code>query</code> that calls an http endpoint and return a list of results.</p>&#xA;<p>Then i should insert this resut into the postgresql (i suppose through a mutation).&#xA;So, how can i join this insert mutation to the previus query result, and eventually apply some custom logic (eg: not insert the already present records)</p>&#xA;",1820422,,,,2022-03-09 01:47:05,hasura - to call an http service api and insert the response into postgresql,<graphql><hasura><hasura-docker>,1,0,0,2022-03-07 10:03:14
71390956,1,,,1,708,"<p>I noticed in the new Amplify Graphql transformer v2, <strong>AppSync Conflict Resolution</strong> is enabled for all tables by default (<a href=""https://docs.aws.amazon.com/appsync/latest/devguide/conflict-detection-and-sync.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/conflict-detection-and-sync.html</a>), I wonder if it will bring any harm if I disable conflict resolution for my API?</p>&#xA;<p>I'm building a yelp like rating app, and if two clients try to mutate the same object, I think it's fine just let them mutate concurrently and the request comes later overrides the previous one. So I don't really understand what this conflict resolution is useful for?</p>&#xA;<p>I feel it's really inconvenient that I need to pass in a <code>_version</code> field when mutating an object and when deleting, it will not delete immediately, instead it will have <code>_deleted</code> field set to true and schedule to delete after <code>ttl</code> time</p>&#xA;<p>Thanks very much!</p>&#xA;<p>Pro tip: to disable conflict resolver in amplify, run <code>amplify update api</code>, and you will be prompt to a choice to disable conflict resolver</p>&#xA;",7392639,,7392639,2022-03-08 07:35:36,2022-03-08 07:35:36,When to disable aws Amplify or AppSync conflict resolution,<graphql><amazon-dynamodb><aws-amplify><aws-appsync><aws-amplify-cli>,1,0,0,2022-03-08 06:41:39
71391009,2,,71390956,-1,,"<p>Versioned Data Sources&#xA;AWS AppSync currently supports versioning on DynamoDB data sources. Conflict Detection, Conflict Resolution, and Sync operations require a Versioned data source. When you enable versioning on a data source, AWS AppSync will automatically:</p>&#xA;<p>Enhance items with object versioning metadata.</p>&#xA;<p>Record changes made to items with AWS AppSync mutations to a Delta table.</p>&#xA;<p>Maintain deleted items in the Base table with a “tombstone” for a configurable amount of time.</p>&#xA;<p>Versioned Data Source Configuration&#xA;When you enable versioning on a DynamoDB data source, you specify the following fields:</p>&#xA;<p>BaseTableTTL&#xA;The number of minutes to retain deleted items in the Base table with a “tombstone” - a metadata field indicating that the item has been deleted. You can set this value to 0 if you want items to be removed immediately when they are deleted. This field is required.</p>&#xA;<p>DeltaSyncTableName&#xA;The name of the table where changes made to items with AWS AppSync mutations are stored. This field is required.</p>&#xA;<p>DeltaSyncTableTTL&#xA;The number of minutes to retain items in the Delta table. This field is required.</p>&#xA;<p>Delta Sync Table&#xA;AWS AppSync currently supports Delta Sync Logging for mutations using PutItem, UpdateItem, and DeleteItem DynamoDB operations.</p>&#xA;<p>When an AWS AppSync mutation changes an item in a versioned data source, a record of that change will be stored in a Delta table that is optimized for incremental updates. You can choose to use different Delta tables (e.g. one per type, one per domain area) for other versioned data sources or a single Delta table for your API. AWS AppSync recommends against using a single Delta table for multiple APIs to avoid the collision of primary keys.</p>&#xA;<p>The schema required for this table is as follows:</p>&#xA;<p>ds_pk&#xA;A string value that is used as the partition key. It is constructed by concatenating the Base data source name and the ISO8601 format of the date the change occurred. (e.g. Comments:2019-01-01)</p>&#xA;<p>ds_sk&#xA;A string value that is used as the sort key. It is constructed by concatenating the IS08601 format of the time the change occurred, the primary key of the item, and the version of the item. The combination of these fields guarantees uniqueness for every entry in the Delta table (e.g. for a time of 09:30:00 and an ID of 1a and version of 2, this would be 09:30:00:1a:2)</p>&#xA;<p>_ttl&#xA;A numeric value that stores the timestamp, in epoch seconds, when an item should be removed from the Delta table. This value is determined by adding the DeltaSyncTableTTL value configured on the data source to the moment when the change occurred. This field should be configured as the DynamoDB TTL Attribute.</p>&#xA;<p>The IAM role configured for use with the Base table must also contain permission to operate on the Delta table. In this example, the permissions policy for a Base table called Comments and a Delta table called ChangeLog is displayed:</p>&#xA;",17041537,,,,2022-03-08 06:46:30,"",,0,0,0,2022-03-08 06:46:30
71391382,1,71401087,,0,282,<p>I'm using the hasura data provider in react-admin <code>ra-data-hasura</code> (but i'm sure its more or less the same thing of <code>ra-data-graphql</code>)</p>&#xA;<p>My entity has their primary keys that are named differently from <code>id</code>&#xA;Is it possible to set a field as primary that is not named <code>id</code>  Eg: <code>MyEntityId</code></p>&#xA;<p>Is it possible to specifiy it resource by resource (because each table could have its own name pattern) or  globally</p>&#xA;,1820422,,,,2022-03-08 22:01:44,"react-admin dataprovider specify a custom field as primary key - a field that is not named ""id""",<graphql><apollo-client><react-admin>,2,0,0,2022-03-08 07:27:23
71391451,2,,69264135,1,,"<p>One thing you can do is to disable Conflict Resolver, if it's not necessary for you, &quot;after deleting elements that are using ConflictResolution, they are not immediately deleted from the database. Instead, two flags are being added: <code>_deleted</code> is set to true and <code>_ttl</code> is set to expire the object in 30 days.&quot; see: <a href=""https://stackoverflow.com/questions/65395564/error-conflict-resolver-rejects-mutation-when-delete-in-amplify"">Error &quot;Conflict resolver rejects mutation.&quot; when Delete in Amplify</a></p>&#xA;<p>To disable it, run <code>amplify update api</code>, and you will be prompt to a choice to disable conflict resolver</p>&#xA;<p>But if you are using DataStore, then it is must to enable conflict resolver. in that case, I don't know how to solve it.</p>&#xA;",7392639,,4564505,2022-03-08 08:22:00,2022-03-08 08:22:00,"",,0,0,0,2022-03-08 07:33:57
71404264,2,,71402142,1,,"<p>Yes you are right, looks like this was missed in the change log. You can raise a GitHub <a href=""https://github.com/graphql/graphql.github.io/issues"" rel=""nofollow noreferrer"">issue</a>.</p>&#xA;<p>This particular Mutation docs reference is auto generated from the code I think <a href=""https://docs.github.com/en/graphql/reference/input-objects#archiverepositoryinput"" rel=""nofollow noreferrer"">ArchiveRepositoryInput</a></p>&#xA;",1749403,,,,2022-03-09 04:21:15,"",,0,1,0,2022-03-09 04:21:15
71406565,1,,,0,91,"<p>I have three tables in my database that are connected as a many to many relation.&#xA;They are called Asset, MeterPoint and AssetMeterPointMember.</p>&#xA;<p>When performing this query I get an unexpected result:</p>&#xA;<pre><code>query&#xA;{&#xA;    meterPoints&#xA;    {&#xA;        id,&#xA;        eic,&#xA;        assetMeterPointMembers (79 keys)&#xA;        {&#xA;            asset (80 keys)&#xA;            {&#xA;                id,&#xA;                assetMeterPointMembers (13 keys)&#xA;                {&#xA;                    meterPoint (46 keys)&#xA;                    {&#xA;                        id,&#xA;                        eic&#xA;                    }&#xA;                }&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/hbePU.png"" rel=""nofollow noreferrer"">Overview of query results</a></p>&#xA;<p>The image shows relations when fetching from the database and fetching with GraphQl.</p>&#xA;<p><strong>Database</strong></p>&#xA;<p>There are 79 MeterPoints.</p>&#xA;<p>53 of those have Assets connected through AssetMeterPointMember.</p>&#xA;<p>There are 88 Assets and 80 of those are connected to a MeterPoint.</p>&#xA;<p><strong>GraphQl</strong></p>&#xA;<p>Keys = primary keys for the database.</p>&#xA;<p>-&gt; = Are sent to GroupDataLoader.</p>&#xA;<p>79 keys -&gt; AssetMeterPointMember GroupDataLoader in MeterPoint (Correct)</p>&#xA;<p>80 keys -&gt; Asset GroupDataLoader in AssetMeterPointMember (correct)</p>&#xA;<p>13 keys -&gt; AssetMeterPointMember GroupDataLoader in Asset (Incorrect)</p>&#xA;<p>The 13 keys are always fetched from the newest data, but there are some keys left out, so no logic there.</p>&#xA;<p>46 keys -&gt; MeterPoint GroupDataLoader from AssetMeterPointMember (Incorrect)</p>&#xA;<p><strong>Expected</strong></p>&#xA;<p>I would expect to have at least the same amount of keys going up again in the hierarchy.</p>&#xA;<p>Can someone please explain what might cause this.</p>&#xA;",3454448,,3454448,2022-03-09 09:24:59,2022-03-09 09:24:59,"Hotchocolate C#, down and up same hierarchy does not give correct keys to the GroupDataLoaders",<graphql><hotchocolate>,0,0,0,2022-03-09 08:48:19
71407102,1,,,1,126,"<p>I'm trying to return a list of my model sorted by date. But I run into a vague error.</p>&#xA;<p>Here is my graphql.schema</p>&#xA;<pre><code>type Vote @model(timestamps: { createdAt: &quot;created_at&quot;, updatedAt: &quot;updated_at&quot; }) {&#xA;    id: ID!&#xA;    name: String!&#xA;    date: AWSTimestamp @index(name: &quot;date-index&quot;, sortKeyFields: [&quot;name&quot;], queryField: &quot;getVotesByDate&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>Here is the request:</p>&#xA;<pre class=""lang-dart prettyprint-override""><code>Future&lt;List&lt;Vote?&gt;&gt; recentVotes() async {&#xA;  const getRecentVotes = &quot;getRecentVotes&quot;;&#xA;  String document = &quot;&quot;&quot;&#xA;    query getRecentVotes {&#xA;      listVotes(limit: 5) {&#xA;        items {&#xA;          date&#xA;          id&#xA;          name&#xA;        }&#xA;        nextToken&#xA;      }&#xA;    }&#xA;  &quot;&quot;&quot;;&#xA;&#xA;  try {&#xA;    final request = GraphQLRequest(&#xA;      document: document,&#xA;      modelType: Vote.classType,&#xA;      decodePath: getRecentVotes,&#xA;    );&#xA;&#xA;    final response = await Amplify.API.query(request: request).response;&#xA;&#xA;    List&lt;Vote?&gt;? votes = response.data?.items;&#xA;&#xA;    if (votes == null) {&#xA;      return [];&#xA;    }&#xA;&#xA;    _voteLength = votes.length;&#xA;&#xA;    return votes;&#xA;  } catch (err) {&#xA;    debugPrint(err.toString());&#xA;  }&#xA;&#xA;  return [];&#xA;}&#xA;</code></pre>&#xA;<p>The error I get back is pretty terrible:</p>&#xA;<pre><code>flutter: ApiException(message: The HTTP response status code is [400]., recoverySuggestion: The metadata associated with the response is contained in the HTTPURLResponse.&#xA;flutter: For more information on HTTP status codes, take a look at&#xA;flutter: https://en.wikipedia.org/wiki/List_of_HTTP_status_codes, underlyingException: null)&#xA;</code></pre>&#xA;<p>As best I can tell, it's just a standard bad request error but with no message of what makes it bad. The graphql syntax is valid and tested.</p>&#xA;<p>*<em>Edit</em></p>&#xA;<p>I've managed to restart the app which provided more details about the error. With the same code, I now get</p>&#xA;<pre><code>flutter: type 'Null' is not a subtype of type 'String'&#xA;</code></pre>&#xA;<p>My first thought after this is that there's some returned field that is null that cannot be. I've checked the name and the id of all the records in the database and they are not null so I'm not sure how that's possible.</p>&#xA;",3162553,,3162553,2022-03-09 09:52:42,2022-03-09 09:52:42,How to debug Flutter Amplify Graphql requests?,<dart><graphql><aws-amplify>,0,0,0,2022-03-09 09:32:55
71414147,2,,69264135,0,,"<p>This is a known issue when using ConflictResolution. I have also faced this issue in the past. My solution was to use DynomoDB Streams Trigger with AWS Amplify to listen for DynamoDB update events and then delete the record via Lambda.</p>&#xA;<p>Here's the official documentation for AWS Amplify GraphQL Lambda Triggers</p>&#xA;<p><a href=""https://docs.amplify.aws/cli/usage/lambda-triggers/#as-a-part-of-the-graphql-api-types-with-model-annotation"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/usage/lambda-triggers/#as-a-part-of-the-graphql-api-types-with-model-annotation</a></p>&#xA;<p>DynamoDB triggers are almost real time so this works really well even with 128MB Lambda</p>&#xA;",17117328,,,,2022-03-09 18:13:53,"",,0,0,0,2022-03-09 18:13:53
71418801,1,,,2,60,"<p>I am new to graphql and currently learning it while trying to use it in android. SO I am trying to write a query for 'balloon' from following API and execute it but it's giving me an error. So I am attaching the error picture and query picture below.<a href=""https://i.stack.imgur.com/5gk2K.png"" rel=""nofollow noreferrer"">Query that I am writing and error that I am receiving</a></p>&#xA;",18425220,,,,2022-03-10 04:58:26,I am facing an error while writing a query in Graphql in graphql playground,<android><graphql>,1,1,0,2022-03-10 04:20:51
71442293,1,,,2,483,"<p>I'm working on a serverless app with amplify and angular on AWS. and I'm trying to get information from a DynamoDB table. I'm following a very basic tutorial from AWS to run a simple query using GraphQL from a frontend app using angular. I have a problem with the next imports:</p>&#xA;<pre><code>import * as queries from '../graphql/queries';&#xA;&#xA;import { ListRestaurants } from '../graphql/queries.graphql';&#xA;</code></pre>&#xA;<p>I getting this error:</p>&#xA;<blockquote>&#xA;<p>Error: src/app/app.component.ts:9:33 - error TS2307: Cannot find&#xA;module '../graphql/queries.graphql' or its corresponding type&#xA;declarations.</p>&#xA;</blockquote>&#xA;<p>This is the image of the error:</p>&#xA;<p><a href=""https://i.stack.imgur.com/CsDrU.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CsDrU.png"" alt=""enter image description here"" /></a></p>&#xA;<p>any advice would be great.</p>&#xA;",18441207,,9676887,2022-03-13 18:35:33,2022-10-09 11:12:01,How to solve the Error: Cannot find module '../graphql/queries.graphql' or its corresponding type declarations' in an angular project,<angular><typescript><amazon-web-services><import><graphql>,1,1,0,2022-03-11 17:16:28
71454910,1,,,0,98,"<p>i'm using <code>ReactAdmin</code>(3.19.6) with <code>ra-data-hasura</code>(0.2.0) dataprovider&#xA;it works for tables but don't for Actions</p>&#xA;<p>when the ReactAdmin  start a message appears</p>&#xA;<p><code>Unknown resource apikeyReceived. Make sure it has been declared on your server side schema. Known resources are comunicazioni, comunicazioni_aggregate, ping, ping_aggregate, profiles, profiles_aggregate</code></p>&#xA;<p><code>apikeyReceived</code> is an action resource and probably it isn't in the aspected shape from ReactAdmin (it miss some property or metadata that reactadmin needs)</p>&#xA;<pre><code>&lt;Admin dataProvider={dataProvider} &gt;&#xA;      &lt;Resource name=&quot;comunicazioni&quot; list={ListGuesser} /&gt;&#xA;      &lt;Resource name=&quot;apikeyReceived&quot; list={ListGuesser} /&gt; &#xA;&lt;/Admin&gt;&#xA;</code></pre>&#xA;<p>i think this message is popped out when react admin execute the introspection query.&#xA;Is there a way i can intercepr this &quot;event&quot; and override or add something?</p>&#xA;",1820422,,,,2022-03-13 08:04:36,React-admin - how should be the exposed data from the backend - hasura/graphql,<graphql><react-admin><hasura>,0,0,0,2022-03-13 08:04:36
71462464,2,,70309356,5,,"<p>I found the solution on <a href=""https://www.graphql-shield.com/docs/shield"" rel=""noreferrer"">shield documentation</a>:</p>&#xA;<pre><code>const permissions = shield({&#xA;    Query: {&#xA;        ...&#xA;    },&#xA;    Mutation: {&#xA;        ...&#xA;    },&#xA;}, {allowExternalErrors: true});&#xA;</code></pre>&#xA;<p>The <em><strong>allowExternalErrors</strong></em> option is defaulted to be false according to the documentation.</p>&#xA;",18458325,,1839439,2022-03-14 02:44:20,2022-03-14 02:44:20,"",,0,0,0,2022-03-14 02:38:26
71518878,1,,,0,28,"<p>Im learning <strong>GraphQL</strong> and i typically stumble upon <strong>Apollo</strong> being mentioned with it, what is Apollo and how is it related to GraphQL, is the relation same as NodeJS and express, dart and flutter ? thank you</p>&#xA;",14337918,,,,2022-03-18 21:21:13,"GraphQL and Apollo, how are they different? is it a relationShip same as NodeJS Express, Dart Flutter ...ect",<graphql><apollo>,1,0,0,2022-03-17 20:49:48
71528554,1,71530916,,1,649,"<p>I am currently playing around a bit with AWS AppSync and I am trying to use the Lambda authoriser feature to do some custom auth for the GraphQL API.</p>&#xA;<p>I have the Lambda function set up with the correct resource-based policy to allow AppSync to invoke the function and I have AppSync's <code>Default authorization mode</code> set to invoke my Lambda.</p>&#xA;<p>This is my lambda code:</p>&#xA;<pre><code>exports.handler = (event) =&gt; {&#xA;  console.log(JSON.stringify(event));&#xA;  const response = {&#xA;    isAuthorized: true,&#xA;  };&#xA;  console.log(JSON.stringify(response));&#xA;  return response;&#xA;};&#xA;</code></pre>&#xA;<p>Now I am facing the issue that the Lambda authoriser is always giving me the following error when I attempt to run a GraphQL quarry:</p>&#xA;<pre><code>Error: Request failed with status code 401&#xA;</code></pre>&#xA;<p>After debugging this problem for two hours I can say the following things:</p>&#xA;<ul>&#xA;<li>The GraphQL endpoint is working fine, because if I set the <code>Default authorization mode</code> to <code>API key</code> or <code>Amazon cognito user pool</code> without changing anything else my Query executes successfully.</li>&#xA;<li>The lambda function is definitely being invoked whenever I make a request to the API and the lambda also receives the correct event from AppSync.</li>&#xA;<li>The Lambda returns <code>{&quot;isAuthorized&quot;:true}</code> which means no <code>Authorization Token</code> would result in a <code>401</code>.</li>&#xA;</ul>&#xA;<p>So as far as I can tell everything is as it should but I am still getting the <code>401</code> no matter what I do and im getting pretty frustrated.</p>&#xA;",5719079,,,,2022-11-10 07:26:53,"AWS AppSync Lambda authoriser always results in ""Error: Request failed with status code 401""",<amazon-web-services><aws-lambda><graphql><aws-appsync>,2,0,0,2022-03-18 14:27:19
71530916,2,,71528554,0,,"<p>After some very frustrating debugging I finally figured out that the problem was the Lambda handler function. As it turns out a Node.js lambda handlers should be async.</p>&#xA;<p>So changing the lambda to the following code fixes the issue:</p>&#xA;<pre><code>exports.handler = async (event) =&gt; {&#xA;    console.log(JSON.stringify(event));&#xA;    const response = {&#xA;        isAuthorized: true,&#xA;    };&#xA;    console.log(JSON.stringify(response));&#xA;    return response;&#xA;};&#xA;</code></pre>&#xA;<p>I didn't know this, since until no I only used Python for Lambdas, and the problem was hard to spot since the <code>console.log</code>'s where still running correctly so I though the function was returning the correct data where as in fact it was returning <code>null</code>.</p>&#xA;",5719079,,,,2022-03-18 17:22:46,"",,0,0,0,2022-03-18 17:22:46
71539988,1,,,0,376,"<p><a href=""https://i.stack.imgur.com/j6oaB.png"" rel=""nofollow noreferrer"">What the list object looks like</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/NpmZE.png"" rel=""nofollow noreferrer"">What the Retool table looks like</a></p>&#xA;<p>I am creating a Retool dashboard and allowing a user to edit rows of an organization table and once the user makes changes I would like to update the database with a Graphql mutation query.</p>&#xA;<p>I am trying to map this array (2 rows were edited in this case) in a mutation query to update my database for these two organizations only.</p>&#xA;<p>So far I have tried something like this but I keep on getting an error that this is not a valid Graphql query.</p>&#xA;<pre><code>mutation edit_org_details { &#xA;  {{&#xA;    orgs_table.recordUpdates.map(updates =&gt; (`\n&#xA;        update_orgs_by_pk(\n&#xA;      _set: {\n&#xA;        name: &quot;${updates.name}&quot;,\n&#xA;        legal_entity_name: &quot;${updates.legal_entity_name}&quot;,\n&#xA;        industry: &quot;${updates.industry}&quot;,\n&#xA;        country: &quot;${updates.country}&quot;,\n&#xA;        status: &quot;${updates.status}&quot; \n&#xA;      },\n&#xA;      pk_columns: {\n&#xA;        id: &quot;${updates.id}&quot;\n&#xA;        } { \n&#xA;        name \n&#xA;      })\n`)&#xA;    )&#xA;    }}&#xA;}&#xA;</code></pre>&#xA;<p>The update_orgs_by_pk query is fine as it works on hasura when I tried using info to mutate one organization, but I can't seem to figure out how to map a list and do multiple mutations.</p>&#xA;",18513879,,,,2022-06-23 12:58:53,How to map a list in a graphql mutation query,<javascript><json><graphql><retool>,1,0,0,2022-03-19 16:30:09
71563075,2,,71561556,0,,"<p>Answering</p>&#xA;<blockquote>&#xA;<p>Cannot see data in view page source even though Cache of Apollo Client have data</p>&#xA;</blockquote>&#xA;<p>These are client side methods, value will not be visible in view source but in evaluated source, look in the elements panel in chrome.</p>&#xA;",13749957,,,,2022-03-21 19:26:50,"",,0,0,0,2022-03-21 19:26:50
71567917,2,,69247990,0,,"<p>Please use the authorization API from Type-GQL to get the headers into the context and write business logic to further use them.</p>&#xA;<p>You can add as a function or a class level.</p>&#xA;<p><em>Example for function</em></p>&#xA;<pre><code>export const customAuthChecker: AuthChecker&lt;ContextType&gt; = (&#xA;  { root, args, context, info },&#xA;  roles,&#xA;) =&gt; {&#xA;  // here we can read the user from context&#xA;  // and check his permission in the db against the `roles` argument&#xA;  // that comes from the `@Authorized` decorator, eg. [&quot;ADMIN&quot;, &quot;MODERATOR&quot;]&#xA;&#xA;  return true; // or false if access is denied&#xA;};&#xA;</code></pre>&#xA;<p>In the above ContextType is the object that you can create and use like a POJO etc.</p>&#xA;",16144366,,,,2022-03-22 06:49:18,"",,0,0,0,2022-03-22 06:49:18
71612777,1,,,2,302,<p>we are trying rxdb as local database and postgresql as a server database and through graphql end point we are able to push and pull data from local to server and vice-versa but how to update and delete data so that it can replicate in both databases .</p>&#xA;,17439948,,,,2022-04-27 08:59:27,How to update local data from rxdb to server database postgrasql through graphql in react,<reactjs><postgresql><graphql><rxdb>,1,1,0,2022-03-25 06:02:52
71622252,1,,,0,144,"<p>Hello guys I am using urql for GraphQL. I have one mutation and its response is being displayed on &quot;Network&quot; tab of devtools, however I cannot get the result in the code.</p>&#xA;<p><strong>here is my request code</strong></p>&#xA;<pre><code>choosePlan({&#xA;            accountId: parseInt(id),&#xA;            plan: plan&#xA;            })&#xA;.then((res) =&gt; { console.log(res) })&#xA;.catch((err) =&gt; { console.log(err) })&#xA;</code></pre>&#xA;<p>either <code>console.log(res)</code> or <code>console.log(err)</code> is not displaying smth to console.</p>&#xA;<p>This choosePlan function is coming from custom hook called useChoosePlan</p>&#xA;<p>here its code</p>&#xA;<pre><code>export type ChoosePlanVariables = Exact&lt;{&#xA;    accountId: Scalars['Int'];&#xA;    plan: Scalars['String'];&#xA;}&gt;&#xA;&#xA;export type choosePlanMutation = {&#xA;    __typename?: 'Mutation';&#xA;    choosePlan: {&#xA;        accountId: number;&#xA;        plan: string;&#xA;    }&#xA;}&#xA;&#xA;export const ChoosePlanDocument = gql`&#xA;    mutation choosePlan($accountId: Int!, $plan: String!){&#xA;        choosePlan(accountId: $accountId, plan: $plan) {&#xA;            redirectLink&#xA;        }&#xA;    }&#xA;`&#xA;&#xA;export function useChoosePlan() {&#xA;    return Urql.useMutation&lt;choosePlanMutation, ChoosePlanVariables&gt;(ChoosePlanDocument);&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/6nVso.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/6nVso.png"" alt=""Here is the result from network tab"" /></a></p>&#xA;<p><em>I am getting the result from graphql playground btw</em></p>&#xA;",15047068,,,,2022-03-25 19:35:48,Using response of URQL,<reactjs><graphql><urql>,0,0,0,2022-03-25 19:35:48
71626317,1,,,-2,108,"<p><img src=""https://i.stack.imgur.com/3TsNu.png"" alt=""code"" /></p>&#xA;<p><img src=""https://i.stack.imgur.com/nNXzo.png"" alt=""nuxt"" /></p>&#xA;<p>I am trying to get my data with APOLLO and show them on the page with v-for. However, i can access the data, even though i can see them in the vue console. What am i missing?</p>&#xA;<p>I also tried v-for=&quot;post in data.posts.nodes&quot;, with no luck..</p>&#xA;",13523535,,,,2022-03-27 14:23:12,How do I get data with VUE v-for?,<vue.js><graphql><nuxt.js><apollo>,1,2,0,2022-03-26 08:06:35
71653915,1,,,0,270,"<p>I'm querying for a list of objects but want to filter out some of the fields if the object is not owned by the caller.</p>&#xA;<p>I've tried multiple different approaches but I'm not quite there yet.</p>&#xA;<p>I know of the @include or @skip directive.. So for instance if I have the following model :</p>&#xA;<pre><code>type Blog @model @auth(rules: [{allow:owner}{allow:private}])&#xA;{&#xA;  id: ID!&#xA;  name: String @auth (rules: [{allow:owner}])&#xA;  posts: [Post] @hasMany&#xA;}&#xA;</code></pre>&#xA;<p>I'd like to query for a list of all &quot;Blogs&quot; but if the user is not the &quot;Owner&quot; then @skip the name field in the response.</p>&#xA;<pre><code>query MyQuery ($isOwner:Boolean = (owner == ${user}){&#xA;  listBlogs {&#xA;    items {&#xA;      id&#xA;      name (@include:$isOwner)&#xA;      owner&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This is obviously bad code as it doesn't like the $isOwner:Boolean ...&#xA;But I think I'm close. Now I think I may need something in the VTL code. This is the autogenerated code but I'm not with VTL. But I'm guessing this is where I need to put some bit of code so I can use it in the GraphQL query above...</p>&#xA;<pre><code>## [Start] List Request. **&#xA;#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )&#xA;#set( $limit = $util.defaultIfNull($args.limit, 100) )&#xA;#set( $ListRequest = {&#xA;  &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;  &quot;limit&quot;: $limit&#xA;} )&#xA;#if( $args.nextToken )&#xA;  #set( $ListRequest.nextToken = $args.nextToken )&#xA;#end&#xA;#if( !$util.isNullOrEmpty($ctx.stash.authFilter) )&#xA;  #set( $filter = $ctx.stash.authFilter )&#xA;  #if( !$util.isNullOrEmpty($args.filter) )&#xA;    #set( $filter = {&#xA;  &quot;and&quot;:   [$filter, $args.filter]&#xA;} )&#xA;  #end&#xA;#else&#xA;  #if( !$util.isNullOrEmpty($args.filter) )&#xA;    #set( $filter = $args.filter )&#xA;  #end&#xA;#end&#xA;#if( !$util.isNullOrEmpty($filter) )&#xA;  #set( $filterExpression = $util.parseJson($util.transform.toDynamoDBFilterExpression($filter)) )&#xA;  #if( !$util.isNullOrBlank($filterExpression.expression) )&#xA;    #if( $filterExpression.expressionValues.size() == 0 )&#xA;      $util.qr($filterExpression.remove(&quot;expressionValues&quot;))&#xA;    #end&#xA;    #set( $ListRequest.filter = $filterExpression )&#xA;  #end&#xA;#end&#xA;#if( !$util.isNull($ctx.stash.modelQueryExpression) &amp;&amp; !$util.isNullOrEmpty($ctx.stash.modelQueryExpression.expression) )&#xA;  $util.qr($ListRequest.put(&quot;operation&quot;, &quot;Query&quot;))&#xA;  $util.qr($ListRequest.put(&quot;query&quot;, $ctx.stash.modelQueryExpression))&#xA;  #if( !$util.isNull($args.sortDirection) &amp;&amp; $args.sortDirection == &quot;DESC&quot; )&#xA;    #set( $ListRequest.scanIndexForward = false )&#xA;  #else&#xA;    #set( $ListRequest.scanIndexForward = true )&#xA;  #end&#xA;#else&#xA;  $util.qr($ListRequest.put(&quot;operation&quot;, &quot;Scan&quot;))&#xA;#end&#xA;#if( !$util.isNull($ctx.stash.metadata.index) )&#xA;  #set( $ListRequest.IndexName = $ctx.stash.metadata.index )&#xA;#end&#xA;$util.toJson($ListRequest)&#xA;## [End] List Request. **&#xA;</code></pre>&#xA;<p>Am I on the right track? What would be the VTL and/or GraphQL code? Somehow I need to get the $context.identity I think into the VTL using a #set in the VTL code I think? Then use it in the GraphQL?</p>&#xA;",1790578,,,,2022-03-28 21:28:17,AppSync GraphQL Skip Field if Not Owner,<graphql><aws-amplify><aws-appsync><vtl>,0,0,0,2022-03-28 21:28:17
71664224,1,,,0,394,"<p>When using Amplify add api it automatically installs the new GraphQL Transformer v2, but I want to use V1.</p>&#xA;",11332525,,,,2022-03-30 20:20:46,How to migrate from GraphQL Transformer v2 to v1?,<amazon-web-services><graphql><aws-appsync>,1,0,0,2022-03-29 14:47:43
71673840,1,,,0,60,"<p>We are running an add state in graphql. But before this statement is called, would like to check if the value already exists.</p>&#xA;<p>Any way to create a query that checks existence and then adds?</p>&#xA;",18629643,,,,2022-03-30 08:20:58,Check before calling add in Graphql,<graphql><graphql-java>,0,0,0,2022-03-30 08:20:58
71679445,1,,,0,33,"<p>When I create an item, the item has created and I can get the item by id but when i get the list items doesn't  contain the item created.</p>&#xA;<pre><code>type Order @model @searchable{&#xA;  id: ID! @primaryKey&#xA;  ref: String!&#xA;  user: User @belongsTo&#xA;}&#xA;&#xA;// first query works!!&#xA;query MyQuery {&#xA;  getOrder(id: &quot;idxamplee&quot;) {&#xA;    id&#xA;    ref&#xA;  }&#xA;}&#xA;&#xA;//second query not work&#xA;query MyQuery {&#xA;  listOrders() {&#xA;    items {&#xA;      id&#xA;      ref&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>amplify appsync dynamodb synchronization&#xA;<a href=""https://i.stack.imgur.com/MEjZP.png"" rel=""nofollow noreferrer"">schemaUrl</a></p>&#xA;",11870434,,11870434,2022-03-31 10:06:26,2022-03-31 10:06:26,Amplify Graphql appsync data return illogic bug,<amazon-web-services><graphql><amazon-dynamodb><aws-appsync><amplify>,0,2,0,2022-03-30 14:46:56
71683873,1,,,0,154,"<p>I have an iOS app using AWS AppSync through GraphQL, setup through Amplify, using DataStore for the local/offline cache and DynamoDB in the backend.</p>&#xA;<p>The use case is that the user creates an &quot;entity&quot; and in that entity they can have multiple groups such as &quot;admins&quot;, &quot;authors&quot;, &quot;readers&quot;, etc.. Each of those groups have different permissions that exist within the realm of the &quot;entity&quot;.</p>&#xA;<p>Each User could create multiple &quot;entities&quot; and therefore there are multiple groups that may have the same name but are separately related to &quot;entities&quot; and are only permissions for that entity.</p>&#xA;<p>To put it another way. A user creates a blog. That user is the Owner of that blog. That user then invites a friend to be an &quot;Admin&quot; of that blog. That friend is now a part of the &quot;Admin&quot; group for that blog. That &quot;Admin&quot; group is only pertinent to that blog. Other users may create blogs of their own and add their friends to be &quot;Admins&quot; of their blogs. But each of these &quot;Admins&quot; are actually in different groups (even if the group names are all called &quot;admin&quot;).</p>&#xA;<p>So I don't think Cognito User Pool groups will work since there is a limit of 500 groups I believe? (Assume we can make more than 500 blogs and therefore more than 500 groups would be needed).</p>&#xA;<p>Preferably there would be the option for the Blog owner to create groups and give them any kind of name. But if needed the groups could be all named the same (admin, author, readers, etc). But as such, I see one of three options but don’t know how to proceed.</p>&#xA;<ol>&#xA;<li><p>A table within my schema that handles the groups. I actually have this concept ready but am uncertain how to implement it with the @auth tag in the GraphQL schema.</p>&#xA;</li>&#xA;<li><p>Some way to link the “entity” with the Cognito group. So that user is related to group and group is related to entity and there is a check for all three using @auth in the GraphQL schema.</p>&#xA;</li>&#xA;<li><p>Some sort of custom code for authorization. I thought using lambda as the authentication method would work but <code>@auth (rules: [{allow:custom}]</code> is not supported by <strong>DataStore</strong>. Therefore am I looking at having to write custom VTL code? (Which I'm completely unfamiliar with).</p>&#xA;</li>&#xA;</ol>&#xA;<p>I'm hoping there's a solution through standard auth means and working within the GraphQL schema. If not, sample code on how to achieve this would be much appreciated.</p>&#xA;",1790578,,,,2022-03-30 20:38:37,AWS AppSync GraphQL with DataStore Custom Groups AUTH Linked to Objects,<amazon-web-services><graphql><amazon-cognito><aws-amplify><aws-appsync>,0,0,0,2022-03-30 20:38:37
71685143,1,,,1,63,"<p>I am using Apollo in my Kotlin Multiplatform Android application. I write requests like this:</p>&#xA;<pre><code>apolloClient.query(query).execute().onEach{ response -&gt;&#xA;    // Here we access data via response.data&#xA;}&#xA;</code></pre>&#xA;<p>The problem is that the responses to some requests from the server contain non-standard root fields along with the &quot;data&quot; field.&#xA;An example of such a response:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;user&quot;: {&#xA;       &quot;name&quot;: &quot;John&quot;,&#xA;       &quot;surname&quot;: &quot;Smith&quot;&#xA;    }&#xA;  },&#xA;  &quot;other_data&quot;: {&#xA;    &quot;some_field&quot;: &quot;blah blah blah&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>How do I access the <code>other_data</code> field in the server response?</p>&#xA;",18636949,,18636949,2022-03-30 23:25:01,2022-03-30 23:25:01,How to access non-standard root field in Apollo Client (GraphQL)?,<android><kotlin><graphql><apollo-client>,0,0,0,2022-03-30 23:17:04
71685532,1,71687306,,0,274,"<p>I have my app connected to graphql using ferry and pagination working. Right now it fetches the first 25 results when the page loads and then when I scroll to the bottom it fetches the next 25. Below is the code that does that.</p>&#xA;<pre><code>final getAllPartnerOrganizationsReq = GGetAllPartnerOrganizationsReq(&#xA;    (b) =&gt; b&#xA;      ..requestId = 'MyReviewsReq'&#xA;      ..vars.offset = 0&#xA;      ..vars.limit = 25,&#xA;  );&#xA;&#xA;  void getNextPartnerOrganizations(int offset, int limit) {&#xA;    final nextGetAllPartnerOrganizationsReq =&#xA;        getAllPartnerOrganizationsReq.rebuild((b) =&gt; b&#xA;          ..requestId = 'MyReviewsReq'&#xA;          ..vars.offset = offset&#xA;          ..vars.limit = limit&#xA;          ..updateResult = (previous, result) {&#xA;            if (previous == null) {&#xA;              return result;&#xA;            }&#xA;            return previous.rebuild((b) =&gt; b&#xA;              ..partnerOrganizations&#xA;                  .addAll(result!.partnerOrganizations!.asList()));&#xA;          });&#xA;    client.requestController.add(nextGetAllPartnerOrganizationsReq);&#xA;  }&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    super.initState();&#xA;    client.request(getAllPartnerOrganizationsReq).listen((response) {&#xA;      for (var i = offset;&#xA;          i &lt; response.data!.partnerOrganizations!.length;&#xA;          i++) {&#xA;        partners.add(response.data!.partnerOrganizations![i]);&#xA;      }&#xA;      offset += 25;&#xA;      setState(() {});&#xA;    });&#xA;&#xA;    _scrollController.addListener(() {&#xA;      if (_scrollController.position.pixels ==&#xA;          _scrollController.position.maxScrollExtent) {&#xA;        getNextPartnerOrganizations(offset, 25);&#xA;      }&#xA;    });&#xA;  }&#xA;</code></pre>&#xA;<p>THE QUESTION:&#xA;I want to have a function that resets this list view completely. I have two needs, one will be a simple refresh icon that resets the list back to the initial 25 and the other will be as part of a search, so if the user searches using a term it removes the list and refetches using those terms. I dont need to know how to use search, I basically need a way to just remove everything from the ListView and get back to a blank slate. Below is the the code relating to where the ListView lives.</p>&#xA;<pre><code>@override&#xA;  Widget build(BuildContext context) {&#xA;    final model = Provider.of&lt;RetailerDetailsModel&gt;(context, listen: false);&#xA;&#xA;    return Scaffold(&#xA;      appBar: AppBar(&#xA;        title: const Text('Data Management System'),&#xA;      ),&#xA;      body: LayoutBuilder(&#xA;        builder: (context, constraints) {&#xA;          if (partners.isNotEmpty) {&#xA;            print('partners');&#xA;            return ListView.separated(&#xA;              controller: _scrollController,&#xA;              itemBuilder: (context, index) =&gt; Card(&#xA;                child: Column(&#xA;                  mainAxisSize: MainAxisSize.min,&#xA;                  children: &lt;Widget&gt;[&#xA;                    ListTile(&#xA;                      leading: kIsWeb&#xA;                          ? FadeInImage.assetNetwork(&#xA;                              width: 100,&#xA;                              height: double.infinity,&#xA;                              imageErrorBuilder: (context, index, error) =&gt;&#xA;                                  const Text('Failed to load'),&#xA;                              image: 'https://${partners[index].logo}',&#xA;                              placeholder: 'assets/logo.jpg',&#xA;                            )&#xA;                          : CachedNetworkImage(&#xA;                              imageUrl: 'https://${partners[index].logo}',&#xA;                              placeholder: (context, url) =&gt;&#xA;                                  const CircularProgressIndicator(),&#xA;                              fit: BoxFit.contain,&#xA;                              width: 100,&#xA;                              height: double.infinity,&#xA;                            ),&#xA;                      title: Text(partners[index].companyName),&#xA;                      subtitle: Text(&#xA;                        partners[index].ogDescription ?? 'No Description Set',&#xA;                        maxLines: 3,&#xA;                      ),&#xA;                      trailing:&#xA;                          Text(partners[index].ecommTechnology ?? 'Unknown'),&#xA;                    ),&#xA;</code></pre>&#xA;",11977031,,,,2022-03-31 05:29:52,Reset ListView in flutter,<flutter><dart><listview><graphql><ferry>,1,0,0,2022-03-31 00:19:13
71716007,1,71725529,,0,275,"<p>I'm experiencing issues when using aws amplify to generate a graphql API</p>&#xA;<p>My model has mainly two objects (User and messages):</p>&#xA;<p>User object:</p>&#xA;<pre><code>type User&#xA;  @model(subscriptions: null)&#xA;  @auth(rules: [{ allow: owner, ownerField: &quot;id&quot; }]) {&#xA;  id: ID!&#xA;  email: String!&#xA;  username: String!&#xA;  avatar: S3Object&#xA;  name: String&#xA;  conversations: [Conversation] @manyToMany(relationName: &quot;UserConversations&quot;)&#xA;  messages: [Message!]! @hasMany(indexName: &quot;byAuthor&quot;, fields: [&quot;id&quot;])&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;}&#xA;</code></pre>&#xA;<p>Message object:</p>&#xA;<pre><code>type Message&#xA;  @model(subscriptions: null)&#xA;  @auth(&#xA;    rules: [&#xA;      {&#xA;        allow: owner&#xA;        ownerField: &quot;authorId&quot;&#xA;        operations: [create, update, delete]&#xA;      }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  author: User @belongsTo(fields: [&quot;authorId&quot;])&#xA;  authorId: ID! @index(name: &quot;byAuthor&quot;, sortKeyFields: [&quot;content&quot;])&#xA;  content: String!&#xA;  conversation: Conversation! @belongsTo(fields: [&quot;messageConversationId&quot;])&#xA;  messageConversationId: ID!&#xA;    @index(name: &quot;byConversation&quot;, sortKeyFields: [&quot;createdAt&quot;])&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;}&#xA;</code></pre>&#xA;<p>There's a <code>hasMany</code>/<code>belongsTo</code> relationship between the two and auth rules on both.</p>&#xA;<p>After I signin to the API and try to create a user object through the JS API, i'm getting the following error</p>&#xA;<p><code>'Not Authorized to access messages on type ModelMessageConnection'</code></p>&#xA;<pre class=""lang-js prettyprint-override""><code>        await AuthAPI.graphql(&#xA;          graphqlOperation(createUser, {&#xA;            input: {&#xA;              id,&#xA;              username,&#xA;              email,&#xA;              name,&#xA;            },&#xA;          })&#xA;        );&#xA;</code></pre>&#xA;",3746418,,,,2022-04-03 11:39:00,Authorization error when updating a GraphQL object using aws-amplify,<graphql><aws-amplify><graphql-js><amplify><amplifyjs>,1,0,0,2022-04-02 08:36:25
71725529,2,,71716007,1,,"<p>This is actually due to the <code>message</code> rule that was missing the <code>read</code> action. Changing the object model to the code below fixed it</p>&#xA;<pre><code>type Message&#xA;  @model(subscriptions: null)&#xA;  @auth(&#xA;    rules: [&#xA;      {&#xA;        allow: owner&#xA;        ownerField: &quot;authorId&quot;&#xA;        operations: [create, update, delete, read]&#xA;      }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  author: User @belongsTo(fields: [&quot;authorId&quot;])&#xA;  authorId: ID! @index(name: &quot;byAuthor&quot;, sortKeyFields: [&quot;content&quot;])&#xA;  content: String!&#xA;  conversation: Conversation! @belongsTo(fields: [&quot;messageConversationId&quot;])&#xA;  messageConversationId: ID!&#xA;    @index(name: &quot;byConversation&quot;, sortKeyFields: [&quot;createdAt&quot;])&#xA;  createdAt: String&#xA;  updatedAt: String&#xA;}&#xA;</code></pre>&#xA;",3746418,,,,2022-04-03 11:39:00,"",,0,0,0,2022-04-03 11:39:00
71726832,1,,,1,138,"<p>I'm building a simple chat app with aws amplify but when I tried to add graphql subscribe to onMessageCreate it is throwing an error &quot;Not Authorized to access onCreateMessage on type Subscription&quot;, I have added auth rule {allow: private}</p>&#xA;<p>type Message @model @auth(rules: [{ allow: private, provider: userPools }]) {&#xA;id: ID!&#xA;owner: String!&#xA;message: String!&#xA;}</p>&#xA;",18692304,,,,2022-04-03 14:33:04,"I'm try to add subscription with graphql but it is throwing an error ""Not Authorized to access onCreateMessage on type Subscription""",<node.js><amazon-web-services><graphql><amazon-cognito><aws-amplify>,0,2,0,2022-04-03 14:33:04
71761818,1,,,0,43,"<p>I am working on graphql thing in Ruby. i am getting the response in the below format. But I would like to log the <code>status</code>, <code>accountId</code> from entire response. Can you please tell me how?</p>&#xA;<p>Response is:</p>&#xA;<pre><code>#&lt;GraphQL::Client::Response:0x000000010e536d08 @original_hash={&quot;data&quot;=&gt;{&quot;provisioningAddEntitlementToAccounts&quot;=&gt;{&quot;result&quot;=&gt;[{&quot;accountId&quot;=&gt;11571809, &quot;status&quot;=&gt;&quot;SUCCESS&quot;}, {&quot;accountId&quot;=&gt;11571810, &quot;status&quot;=&gt;&quot;SUCCESS&quot;}, {&quot;accountId&quot;=&gt;11571811, &quot;status&quot;=&gt;&quot;SUCCESS&quot;}]}}}&#xA;</code></pre>&#xA;<p>I tried in the below formats</p>&#xA;<pre><code>logger.info(&quot;Respoonse is: #{response.inspect}&quot;)&#xA;&#xA;logger.info(&quot;Respoonse is: #{response.original_hash.inspect}&quot;)&#xA;</code></pre>&#xA;",18616772,,421705,2022-04-06 14:00:09,2022-09-08 03:58:53,How to log data from response,<ruby><graphql>,1,0,0,2022-04-06 06:13:02
71780371,2,,71772079,1,,"<p>You have to create two relationships between users table and connections table,&#xA;<a href=""https://i.stack.imgur.com/GL23M.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GL23M.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Then query :</p>&#xA;<pre><code>query MyQuery {&#xA;  user(where: {id: {_eq: 104}}) {&#xA;    connections {&#xA;      user1&#xA;      user2&#xA;      status&#xA;    }&#xA;    connectionsByUser2 {&#xA;      user1&#xA;      user2&#xA;      status&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Output:&#xA;<a href=""https://i.stack.imgur.com/fjWwP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fjWwP.png"" alt=""enter image description here"" /></a></p>&#xA;",4506183,,,,2022-04-07 10:20:37,"",,0,1,0,2022-04-07 10:20:37
71798996,2,,71798378,0,,"<p>You don't want to duplicate that data. That's the whole idea of a relational database that different data is kept in different tables.<br />&#xA;You can create a view if you want to avoid typing a query with a JOIN each time.<br />&#xA;For example you might create the view below:</p>&#xA;<pre><code>CREATE VIEW userPosts AS&#xA;SELECT&#xA;  user.id,&#xA;  user.name,&#xA;  COUNT(posts.id)&#xA;FROM users&#xA;LEFT JOIN posts ON user.id = posts.user_id&#xA;ORDER BY  user.id;&#xA;</code></pre>&#xA;<p>Once you have created the view your can query it as if it were a table.</p>&#xA;<pre><code>SELECT * FROM userDate WHERE id = '0001';&#xA;</code></pre>&#xA;<p>Of course I don't have your table definitions and data so you will need to adapt this code to your tables.</p>&#xA;",0,user18098820,,,2022-04-08 14:45:50,"",,0,0,0,2022-04-08 14:45:50
71812179,2,,65316214,0,,"<p>GRAPHQLAPIKEYOUTPUT is only generated if you add API Key as an authorization mode to your api category.</p>&#xA;<p>Once you do that, add apikey as the auth mode for the GraphQL Model you're trying to access. Update the function and it will re-create the variables including a new one called GRAPHQLAPIKEYOUTPUT.</p>&#xA;<p>Then the sample code should work.</p>&#xA;",15193789,,,,2022-04-09 21:54:33,"",,0,0,0,2022-04-09 21:54:33
71836081,1,,,0,99,"<p>Using AWS AppSync GraphQL, I want to be able to have the @auth ownership of one type of document to be based on another. For example, let's say my schema looked like this:</p>&#xA;<pre><code>type Course&#xA;@model&#xA;@auth(rules: [{ allow: owner, ownerField: &quot;contributors&quot;, operations: [read, create, update, delete] }])&#xA;{&#xA;  id: ID!&#xA;  title: String!&#xA;  contributors: [String!]!&#xA;  questions: [Question!]! @hasMany&#xA;}&#xA;&#xA;type Question&#xA;@model&#xA;@auth(rules: [{ allow: private, operations: [read, create] }, { allow: owner, operations: [read, create, update, delete] }])&#xA;{&#xA;  id: ID!&#xA;  title: String!&#xA;  owner: String!&#xA;  course: Course! @belongsTo&#xA;}&#xA;</code></pre>&#xA;<p>Notice in the above schema, a Course has many Questions, and a Question belongs to a Course. I want to allow the &quot;contributors&quot; of a Course to also have update/delete access on its child Questions, but in the above schema <strong>only</strong> the creator of the Question (which is any random signed-in user) will have update/delete access.</p>&#xA;<p>Is there a way that the Question type could set it's update/delete @auth access to allow not just the owner of the Question, but also of its parent Course &quot;contributors&quot;?</p>&#xA;",7217872,,,,2022-04-12 01:43:34,Can the 'ownerField' of an @auth directive be based on the field of a different document?,<graphql><aws-amplify><aws-appsync><aws-appsync-resolver>,0,0,0,2022-04-12 01:43:34
71836951,1,,,2,148,"<p>Is there any way that I could insert data from single table multiple row's by using a single query as follows in Hasura.</p>&#xA;<p>Where the data1 and point1 are dynamic.</p>&#xA;<p>Input Example:</p>&#xA;<pre><code>&#xA; &#xA;{ &#xA;  &quot;table1&quot; : {&#xA;  &#xA;  id: &quot;&quot;,&#xA;  name : &quot;&quot;,&#xA;  value : &quot;&quot;.&#xA;  result:&#xA;  {&#xA;    data1: &quot;&quot;,&#xA;    point1: &quot;&quot;,&#xA;&#xA;    data2: &quot;&quot;,&#xA;    point2: &quot;&quot;,&#xA;&#xA;  }&#xA;  &#xA;  &#xA;&#xA;}&#xA;&#xA;&#xA;</code></pre>&#xA;",4734842,,4734842,2022-04-12 06:52:34,2022-08-05 15:33:53,Single Table Row Data fetching in Hasura,<graphql><hasura>,1,1,0,2022-04-12 04:02:11
71877498,1,71880381,,0,83,"<p>I am trying to add some logging to my graphene server utilizing a middleware. As per the documentation (<a href=""https://buildmedia.readthedocs.org/media/pdf/graphene-python/stable/graphene-python.pdf"" rel=""nofollow noreferrer"">Docs - 3.2.3</a>), I can view some limited path info from the parent by pulling out the name from the root's meta node (<code>root._meta.name</code> which will result in Ex. <code>Three.Four</code>), but I am looking to get the full path of the current node being resolved (<code>One.Two.Three.Four</code>). Is there any way to access this info through the middleware?</p>&#xA;",18806972,,,,2022-04-15 05:20:34,Accessing node's full path in graphene middleware,<graphql><graphene-python><graphene-django><graphql-python>,1,0,0,2022-04-14 20:53:02
71881650,2,,71848300,1,,"<p>DynamoDB reads up to 1MB of data at a time. DynamoDB applies filters after reading up to 1MB of data. DynamoDB applies filters after applying any limits.</p>&#xA;<p>If you attempt to list and filter, and the items you want to find are not in the first 1MB of data read, no data will be returned. If you attempt to list and filter with a limit, and the items you want to find are not in the first $Limit items, no  data will be returned.</p>&#xA;<p>If you want to find items by a particular value, and that value is not a table key, you should create an index and query on that index.</p>&#xA;",16995190,,16995190,2022-04-15 16:12:00,2022-04-15 16:12:00,"",,0,1,0,2022-04-15 08:15:25
71889548,1,,,1,494,"<p>I am working on a project where users can upload files into a S3 bucket, these uploaded files are mapped to a GraphQL key (which was generated by Amplify CLI), and an aws-lambda function is triggered. All of this is working, but the next step I want is for this aws-lambda function to create a second file with the same ownership attributes and POST the location of the saved second file to the GraphQL API.</p>&#xA;<p>I figured that this shouldn't be too difficult but I am having a lot of difficulty and can't understand where the problem lies.</p>&#xA;<p><strong>BACKGROUND/DETAILS</strong></p>&#xA;<p>I want the owner of the data (the uploader) to be the only <em>user</em> who is able to access the data, with the aws-lambda function operating in an <em>admin</em> role and able to POST/GET to API of any owner.</p>&#xA;<p>The GraphQL schema looks like this:</p>&#xA;<pre><code>type FileUpload @model &#xA;@auth(rules: [&#xA;  { allow: owner}]) {&#xA;  id: ID!&#xA;  foo: String&#xA;  bar: String&#xA;}&#xA;</code></pre>&#xA;<p>And I also found this seemingly-promising AWS guide which I thought would give an IAM role <em>admin</em> access (<a href=""https://docs.amplify.aws/cli/graphql/authorization-rules/#configure-custom-identity-and-group-claims"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/authorization-rules/#configure-custom-identity-and-group-claims</a>) which I followed by creating the file <code>amplify/backend/api/&lt;your-api-name&gt;/custom-roles.json</code> and saved it with</p>&#xA;<pre><code>{&#xA;  &quot;adminRoleNames&quot;: [&quot;&lt;YOUR_IAM_ROLE_NAME&gt;&quot;]&#xA;}&#xA;</code></pre>&#xA;<p>I replaced &quot;&lt;YOUR_IAM_ROLE_NAME&gt;&quot; with an IAM Role which I have given broad access to, including this appsync access:</p>&#xA;<pre><code>{&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Effect&quot;: &quot;Allow&quot;,&#xA;            &quot;Action&quot;: [&#xA;                &quot;appsync:*&quot;&#xA;            ],&#xA;            &quot;Resource&quot;: &quot;*&quot;&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>Which is the role given to my aws-lambda function.</p>&#xA;<p>When I attempt to run a simple API query in my aws-lambda function with the above settings I get this error</p>&#xA;<pre><code>response string:  &#xA;{&#xA;    &quot;data&quot;: {&#xA;        &quot;getFileUpload&quot;: null&#xA;    },&#xA;    &quot;errors&quot;: [&#xA;        {&#xA;            &quot;path&quot;: [&#xA;                &quot;getFileUpload&quot;&#xA;            ],&#xA;            &quot;data&quot;: null,&#xA;            &quot;errorType&quot;: &quot;Unauthorized&quot;,&#xA;            &quot;errorInfo&quot;: null,&#xA;            &quot;locations&quot;: [&#xA;                {&#xA;                    &quot;line&quot;: 3,&#xA;                    &quot;column&quot;: 11,&#xA;                    &quot;sourceName&quot;: null&#xA;                }&#xA;            ],&#xA;            &quot;message&quot;: &quot;Not Authorized to access getFileUpload on type Query&quot;&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>my actual python lambda script is</p>&#xA;<pre><code>import http&#xA;API_URL = '&lt;MY_API_URL&gt;'&#xA;API_KEY = '&lt;&gt;MY_API_KEY'&#xA;HOST = API_URL.replace('https://','').replace('/graphql','')&#xA;&#xA;def queryAPI():&#xA;    conn = http.client.HTTPSConnection(HOST, 443)&#xA;    headers = {&#xA;        'Content-type': 'application/graphql', &#xA;        'x-api-key': API_KEY,&#xA;        'host': HOST&#xA;    }&#xA;&#xA;    print('conn: ', conn)&#xA;    &#xA;    query = '''&#xA;            {&#xA;          getFileUpload(id: &quot;&lt;ID_HERE&gt;&quot;) {&#xA;            description&#xA;            createdAt&#xA;            baseFilePath&#xA;          }&#xA;        }&#xA;    '''&#xA;    graphql_query = {&#xA;        'query': query&#xA;    }&#xA;    query_data = json.dumps(graphql_query)&#xA;    print('query data: ', query_data)&#xA;    conn.request('POST', '/graphql', query_data, headers)&#xA;    response = conn.getresponse()&#xA;    response_string = response.read().decode('utf-8')&#xA;    print('response string: ', response_string)&#xA;</code></pre>&#xA;<p>I pass in the API key and API URL above in addition to giving AWS-lambda the IAM role. I understand that only one is probably needed, but I am trying to get the process to work then pare it back.</p>&#xA;<p><strong>QUESTION(s)</strong></p>&#xA;<p>As far as I understand, I am</p>&#xA;<ol>&#xA;<li>providing the appropriate @auth rules to my GraphQL schema based on my goals and (2 below)</li>&#xA;<li>giving my aws-lambda function sufficient IAM authorization (via both IAM role and API key) to override any potential restrictive @auth rules of my GraphQL schema</li>&#xA;</ol>&#xA;<p>But clearly something is not working. Can anyone point me towards a problem that I am overlooking?</p>&#xA;",12696881,,,,2022-04-17 09:51:03,Cannot give aws-lambda access to aws-appsync API,<amazon-web-services><aws-lambda><graphql><aws-appsync>,1,0,0,2022-04-15 22:37:47
71899872,1,71899917,,0,204,<p>I have a graphql api running on a firebase function and I develop locally for the most part.</p>&#xA;<p>Before when I called the firebase functions directly I would use the <code>connectFunctionsEmulator</code> function to conditionally connect to my local emulator and when I called the functions using <code>getFunctions</code> it would know to call my localhost endpoint.</p>&#xA;<p>However I'm trying to use Apollo client and I'm not sure how to determine when the local emulators have been connected and when they have not as well as how to determine the absolute url when calling the function like the way firebase does when I call it using the firebase functions helpers.</p>&#xA;,10237430,,,,2022-04-17 07:23:25,How to get the current https functions endpoint for firebase when using/not using emulator,<firebase><google-cloud-functions><apollo-client>,1,0,0,2022-04-17 06:45:08
71899917,2,,71899872,0,,"<p>I went snooping through the code and when I call the <code>connectFunctionsEmulator</code> function it updates a variable called <code>functionsInstance.emulatorOrigin</code>.</p>&#xA;<p>This is not present in the functions typing but I'm still able to access the value by doing <code>getFunctions().emulatorOrigin</code>.</p>&#xA;<p>If the value is not set to null that means firebase will be talking to my emulators and not to the live endpoint.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>function getGraphQLUri(): string {&#xA;  const functions = getFunctions();&#xA;  const app = getApp();&#xA;&#xA;  const { projectId } = app.options;&#xA;  const { region } = functions;&#xA;&#xA;  // emulatorOrigin is not defined in the typings but it exists&#xA;  // @ts-ignore&#xA;  const emulator = functions.emulatorOrigin;&#xA;&#xA;  let url: string = &quot;&quot;;&#xA;&#xA;  if (emulator) {&#xA;    url = `${emulator}/${projectId}/${region}/graphql`;&#xA;  } else {&#xA;    url = `https://${region}-${projectId}.cloudfunctions.net/graphql`;&#xA;  }&#xA;&#xA;  return url;&#xA;}&#xA;</code></pre>&#xA;<p>I would appreciate if someone at Google can confirm whether this approach might continue to be supported in the future.</p>&#xA;",10237430,,10237430,2022-04-17 07:23:25,2022-04-17 07:23:25,"",,0,0,0,2022-04-17 06:55:32
71900881,2,,71889548,0,,"<p>I had similar problem just yesterday.&#xA;It was not 1:1 what you're trying to do, but maybe it's still helpful.</p>&#xA;<p>So I was trying to give lambda functions permissions to access the data based on my graphql schema. The schema had different @auth directives, which caused the lambda functions to not have access to the data anymore. Even though I gave them permissions via the cli and IAM roles. Although the documentation says this should work, it didn't:</p>&#xA;<blockquote>&#xA;<p>if you grant a Lambda function in your Amplify project access to the GraphQL API via amplify update function, then the Lambda function's IAM execution role is allow-listed to honor the permissions granted on the Query, Mutation, and Subscription types.&#xA;Therefore, these functions have special access privileges that are scoped based on their IAM policy instead of any particular @auth rule.</p>&#xA;</blockquote>&#xA;<p>So I ended up adding <code>@auth(rules: [{ allow: custom }])</code> to all parts of my schema that I want to access via lambda functions.</p>&#xA;<p>When doing this, make sure to add &quot;lambda&quot; as auth mode to your api via <code>amplify update api</code>.</p>&#xA;<p>In the authentication lambda function, you could then check if the user, who is invoking the function, has access to the requested query/S3 Data.</p>&#xA;",15941642,,,,2022-04-17 09:51:03,"",,0,0,0,2022-04-17 09:51:03
71908570,1,,,0,208,"<p>I'm creating APIs on the Azure APIM with GraphQL. This is still on preview so until now I only can create them clicking in the portal or using the Azure API Rest with a PUT request.</p>&#xA;<p>I'm trying to migrate all of this to Terraform but I don't find any website with information about if there is any way to create GraphQL APIs with Terraform or even using a module.</p>&#xA;<p>What I'm trying to do is something like this:</p>&#xA;<pre><code>resource &quot;azurerm_resource_group&quot; &quot;example&quot; {&#xA;  name     = &quot;example-resources&quot;&#xA;  location = &quot;West Europe&quot;&#xA;}&#xA;&#xA;resource &quot;azurerm_api_management&quot; &quot;example&quot; {&#xA;  name                = &quot;example-apim&quot;&#xA;  location            = azurerm_resource_group.example.location&#xA;  resource_group_name = azurerm_resource_group.example.name&#xA;  publisher_name      = &quot;My Company&quot;&#xA;  publisher_email     = &quot;company@terraform.io&quot;&#xA;&#xA;  sku_name = &quot;Developer_1&quot;&#xA;}&#xA;&#xA;resource &quot;azurerm_api_management_api&quot; &quot;example&quot; {&#xA;  name                = &quot;example-api&quot;&#xA;  resource_group_name = azurerm_resource_group.example.name&#xA;  api_management_name = azurerm_api_management.example.name&#xA;  revision            = &quot;1&quot;&#xA;  display_name        = &quot;Example API&quot;&#xA;  path                = &quot;example&quot;&#xA;  protocols           = [&quot;https&quot;]&#xA;&#xA;  import {&#xA;    content_format = &quot;graphql-file&quot;&#xA;    content_value  = &quot;schema.graphql&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I'm kind of newbie at Terraform and I'm a little lost as I can't find any doc about this on the official page or anywhere.</p>&#xA;<p>EDIT: What I'm trying to find is to automate with Terraform this process:&#xA;<a href=""https://learn.microsoft.com/en-us/azure/api-management/graphql-api"" rel=""nofollow noreferrer"">GraphQL Import</a></p>&#xA;<p>Thanks.</p>&#xA;",18630819,,18630819,2022-04-21 06:56:20,2022-04-21 06:56:20,Azure Terraform API Management Graphql Support,<azure><graphql><terraform><azure-api-management>,1,0,0,2022-04-18 06:58:50
71919573,1,71933332,,0,967,"<p>Running into a problem with the API generated with aws amplify.</p>&#xA;<p>Basically, I keep getting the following warning whenever I try to create one entity and it is not being persisted in DynamoDB.</p>&#xA;<p><code>Variable 'input' has coerced Null value for NonNull type 'String!</code></p>&#xA;<pre><code></code></pre>&#xA;<p>The following are the pertinent parts of the Graphql schema I used to create the backend.</p>&#xA;<pre><code>enum EntityStatus {&#xA;     ACTIVE&#xA;     INACTIVE&#xA;     ARCHIVED&#xA;    }&#xA;&#xA;type Address {&#xA;  streetAddress1: String!&#xA;  streetAddress2: String&#xA;  city: String!&#xA;  state: String!&#xA;  zipCode: String!&#xA;  country: String!&#xA;  location: Location!&#xA;}&#xA;&#xA;type Location {&#xA;  lat: Float&#xA;  lng: Float&#xA;}&#xA;&#xA;type Tenant&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: groups, groups: [&quot;Admin&quot;, &quot;Coordinator&quot;, &quot;Employees&quot;], operations }&#xA;      { allow: groups, groups: [&quot;Auditor&quot;], operations: [read] }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  name: String!&#xA;  address: Address!&#xA;  phone: AWSPhone!&#xA;  email: AWSEmail!&#xA;  status: EntityStatus!&#xA;  locale: String!&#xA;}&#xA;</code></pre>&#xA;<p>The code to create one of the <code>Tenant</code> entities is a simple call</p>&#xA;<pre class=""lang-js prettyprint-override""><code>    try {&#xA;      return await DataStore.save(new Tenant({ ...values }));&#xA;    } catch (error) {&#xA;      console.error(error);&#xA;    }&#xA;</code></pre>&#xA;<p>The payload going sent by Datastore is as follows:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;  &quot;name&quot;: &quot;Tenant 1&quot;,&#xA;  &quot;phone&quot;: &quot;1234567890&quot;,&#xA;  &quot;email&quot;: &quot;tenant@tenant.com&quot;,&#xA;  &quot;status&quot;: &quot;ACTIVE&quot;,&#xA;  &quot;address&quot;: {&#xA;    &quot;city&quot;: &quot;Anytown&quot;,&#xA;    &quot;state&quot;: &quot;TAB&quot;,&#xA;    &quot;zipCode&quot;: &quot;12345&quot;,&#xA;    &quot;country&quot;: &quot;US&quot;,&#xA;    &quot;location&quot;: { &quot;lat&quot;: 123.12, &quot;lng&quot;: 123.12 }&#xA;  },&#xA;  &quot;locale&quot;: &quot;en-US&quot;,&#xA;  &quot;id&quot;: &quot;f8be53bd-b1cb-4cbd-9b64-01fdf930da8a&quot;&#xA;}&#xA;</code></pre>&#xA;<p>Here is the full Warning message</p>&#xA;<pre><code>[WARN] 40:26.787 DataStore &#xA;Object { localModel: {…}, message: &quot;Variable 'input' has coerced Null value for NonNull type 'String!'&quot;, operation: &quot;Create&quot;, errorType: undefined, errorInfo: undefined, remoteModel: null }&#xA;errorInfo: undefined&#xA;errorType: undefined&#xA;localModel: Object { id: &quot;f8be53bd-b1cb-4cbd-9b64-01fdf930da8a&quot;, name: &quot;Tenant 1&quot;, phone: &quot;1234567890&quot;, … }&#xA;_deleted: undefined&#xA;_lastChangedAt: undefined&#xA;_version: undefined&#xA;address: Object { city: &quot;Anytown&quot;, state: &quot;TAB&quot;, zipCode: &quot;12345&quot;, … }&#xA;createdAt: undefined&#xA;email: &quot;tenant@tenant.com&quot;&#xA;id: &quot;f8be53bd-b1cb-4cbd-9b64-01fdf930da8a&quot;&#xA;locale: &quot;en-US&quot;&#xA;name: &quot;Tenant 1&quot;&#xA;phone: &quot;1234567890&quot;&#xA;status: &quot;ACTIVE&quot;&#xA;updatedAt: undefined&#xA;&lt;prototype&gt;: Object { … }&#xA;message: &quot;Variable 'input' has coerced Null value for NonNull type 'String!'&quot;&#xA;operation: &quot;Create&quot;&#xA;remoteModel: null&#xA;&lt;prototype&gt;: Object { … }&#xA;react_devtools_backend.js:3973:25&#xA;</code></pre>&#xA;",8285597,,,,2022-04-20 02:07:35,AWS Amplify - Graphql + Datastore: Variable 'input' has coerced Null value for NonNull type String,<reactjs><graphql><aws-amplify>,1,1,0,2022-04-19 04:09:18
71944330,1,71957769,,1,116,"<p>Is there a Django GraphQL ACL? Like you can't access the Query/Mutation if the user has no permission.</p>&#xA;<p>For Example, the login user has a only permission on products Query/Mutation but no permission on human resources Query/Mutation. How can I return a error message like &quot;Permission Denied!&quot;?</p>&#xA;",13383625,,,,2022-04-21 16:30:55,Django GrahpQL ACL?,<django><graphql><graphene-django>,1,0,0,2022-04-20 18:11:10
71954288,1,,,-1,215,"<p>I was trying to implement a chat feature that has three models; message, user and conversation.&#xA;A user can have many conversations, a conversation can have many users and a conversation can have many messages.</p>&#xA;<p>I tried using @manytomany between the user and conversation models with authenticated rules set to owner, this however fails because of &quot; Not Authorized to access on type error&quot;. Im using graphql API (Not Datastore) with cognito user pool.</p>&#xA;<p>If I set the allow rule to private then it works but then that would mean that the users in a conversation would have access to each others user model and through that access to other conversations that the users might have.</p>&#xA;<p>One could maybe use a query filter and only show the relevant conversations but it would still mean that the user data is accessible to all signed in users. Maybe one could use a lambda function.</p>&#xA;<p>The simple explanation however is that my model is incorrect. My question is as follows, how can we create a simple chat with the above three models where the users in a conversation would only have access to the relevant data (messages in a conversation) and not have have access to each others, other conversations and messages.</p>&#xA;<p>The chat schema</p>&#xA;<pre><code>type User @model @auth(rules: [{ allow: owner }]) {&#xA;id:ID!&#xA;username: String!&#xA;conversations: [Conversation] @manytomany(relationName: &quot;ConversationUser&quot;)&#xA;}&#xA;&#xA;type Conversation @model @auth(rules: [{ allow: owner }]) {&#xA;id: ID!&#xA;users: [User] @manytomany(relationName: &quot;ConversationUser&quot;)&#xA;Messages: [Message] @hasmany(indexName: &quot;byConversation&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Message @model @auth(rules: [{ allow: owner }]) {&#xA;id: ID!&#xA;author: ID!&#xA;content: String!&#xA;conversationID: ID! @Index(name: &quot;byConversation&quot;, sortKeyFields: [&quot;createdAt&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>Using Amplify CLI version 8.0.2, with appsync and cognito userpool</p>&#xA;",18880155,,,,2022-05-17 23:49:29,How can I implement a chat schema with @manyToMany using Amplify GraphQL with non private/public auth rules?,<database-design><graphql><aws-amplify><aws-appsync>,1,0,0,2022-04-21 12:13:30
71957433,1,,,0,9,"<p>I have a SwiftUI application which is making use of Amplify for the backend.</p>&#xA;<p>I have a problem however. I've created 2 user accounts and created a DataStore.save on one of the accounts. When I switch accounts, and run a DataStore.query I can see the post from the other account.</p>&#xA;<p>I've set up owner-based scopes for read write update &amp; delete and removed any public scope. So I can't see why this is working. Below is my GraphQL model with the authorisation set on it:</p>&#xA;<pre><code>type Note @model @auth(rules: [{allow: owner}]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;  anotherField: String&#xA;}&#xA;</code></pre>&#xA;",6394307,,12299030,2022-04-21 16:23:13,2022-04-21 16:23:13,AWS Amplify GraphQL authorisation rules on model not working as expected,<swift><amazon-web-services><graphql><datastore><amplify>,0,0,0,2022-04-21 15:55:52
71976722,1,71980961,,0,651,"<p>I have two tables in my Strapi, one is <code>question</code> and another one is <code>question_option</code>.&#xA;I have <code>question_id</code> in <code>question_option</code> table. I want to select all questions with their option. The problem is there that in Strapi we must query from <code>question_option</code>, we can't do it from <code>question</code>. According to every option, for example, if I have 30 option, it brings question 30 times. So how can I select a question that brings its options?</p>&#xA;<pre><code>query{&#xA;  questionOptions(filters: { question_id:{for : { contains: &quot;owner&quot; }}}){&#xA;  data{&#xA;     id&#xA;     attributes{&#xA;      option,&#xA;      score,&#xA;      status,&#xA;      question_id{&#xA;        data{&#xA;          id&#xA;          attributes{&#xA;            title&#xA;          }&#xA;        }&#xA;      }&#xA;    }  &#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><strong>The result is like:</strong></p>&#xA;<pre><code>{&#xA;&quot;data&quot;: {&#xA;&quot;questionOptions&quot;: {&#xA;  &quot;data&quot;: [&#xA;    {&#xA;      &quot;id&quot;: &quot;44&quot;,&#xA;      &quot;attributes&quot;: {&#xA;        &quot;option&quot;: &quot; 0-10&quot;,&#xA;        &quot;score&quot;: &quot;1&quot;,&#xA;        &quot;status&quot;: &quot;1&quot;,&#xA;        &quot;question_id&quot;: {&#xA;          &quot;data&quot;: {&#xA;            &quot;id&quot;: &quot;5&quot;,&#xA;            &quot;attributes&quot;: {&#xA;              &quot;title&quot;: &quot;Client Base&quot;&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;45&quot;,&#xA;      &quot;attributes&quot;: {&#xA;        &quot;option&quot;: &quot;11-50&quot;,&#xA;        &quot;score&quot;: &quot;1&quot;,&#xA;        &quot;status&quot;: &quot;1&quot;,&#xA;        &quot;question_id&quot;: {&#xA;          &quot;data&quot;: {&#xA;            &quot;id&quot;: &quot;5&quot;,&#xA;            &quot;attributes&quot;: {&#xA;              &quot;title&quot;: &quot;Client Base&quot;&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;46&quot;,&#xA;      &quot;attributes&quot;: {&#xA;        &quot;option&quot;: &quot;51-100&quot;,&#xA;        &quot;score&quot;: &quot;1&quot;,&#xA;        &quot;status&quot;: &quot;1&quot;,&#xA;        &quot;question_id&quot;: {&#xA;          &quot;data&quot;: {&#xA;            &quot;id&quot;: &quot;5&quot;,&#xA;            &quot;attributes&quot;: {&#xA;              &quot;title&quot;: &quot;Client Base&quot;&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;47&quot;,&#xA;      &quot;attributes&quot;: {&#xA;        &quot;option&quot;: &quot;101-200&quot;,&#xA;        &quot;score&quot;: &quot;1&quot;,&#xA;        &quot;status&quot;: &quot;1&quot;,&#xA;        &quot;question_id&quot;: {&#xA;          &quot;data&quot;: {&#xA;            &quot;id&quot;: &quot;5&quot;,&#xA;            &quot;attributes&quot;: {&#xA;              &quot;title&quot;: &quot;Client Base&quot;&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;48&quot;,&#xA;      &quot;attributes&quot;: {&#xA;        &quot;option&quot;: &quot;over 200&quot;,&#xA;        &quot;score&quot;: &quot;1&quot;,&#xA;        &quot;status&quot;: &quot;1&quot;,&#xA;        &quot;question_id&quot;: {&#xA;          &quot;data&quot;: {&#xA;            &quot;id&quot;: &quot;5&quot;,&#xA;            &quot;attributes&quot;: {&#xA;              &quot;title&quot;: &quot;Client Base&quot;&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;49&quot;,&#xA;      &quot;attributes&quot;: {&#xA;        &quot;option&quot;: &quot;Bohemian    &quot;,&#xA;        &quot;score&quot;: &quot;1&quot;,&#xA;        &quot;status&quot;: &quot;1&quot;,&#xA;        &quot;question_id&quot;: {&#xA;          &quot;data&quot;: {&#xA;            &quot;id&quot;: &quot;6&quot;,&#xA;            &quot;attributes&quot;: {&#xA;              &quot;title&quot;: &quot;Style Identity&quot;&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;50&quot;,&#xA;      &quot;attributes&quot;: {&#xA;        &quot;option&quot;: &quot;Casual    &quot;,&#xA;        &quot;score&quot;: &quot;1&quot;,&#xA;        &quot;status&quot;: &quot;1&quot;,&#xA;        &quot;question_id&quot;: {&#xA;          &quot;data&quot;: {&#xA;            &quot;id&quot;: &quot;6&quot;,&#xA;            &quot;attributes&quot;: {&#xA;              &quot;title&quot;: &quot;Style Identity&quot;&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;51&quot;,&#xA;      &quot;attributes&quot;: {&#xA;        &quot;option&quot;: &quot;Clean  &quot;,&#xA;        &quot;score&quot;: &quot;1&quot;,&#xA;        &quot;status&quot;: &quot;1&quot;,&#xA;        &quot;question_id&quot;: {&#xA;          &quot;data&quot;: {&#xA;            &quot;id&quot;: &quot;6&quot;,&#xA;            &quot;attributes&quot;: {&#xA;              &quot;title&quot;: &quot;Style Identity&quot;&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;52&quot;,&#xA;      &quot;attributes&quot;: {&#xA;        &quot;option&quot;: &quot;Classic  &quot;,&#xA;        &quot;score&quot;: &quot;1&quot;,&#xA;        &quot;status&quot;: &quot;1&quot;,&#xA;        &quot;question_id&quot;: {&#xA;          &quot;data&quot;: {&#xA;            &quot;id&quot;: &quot;6&quot;,&#xA;            &quot;attributes&quot;: {&#xA;              &quot;title&quot;: &quot;Style Identity&quot;&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;53&quot;,&#xA;      &quot;attributes&quot;: {&#xA;        &quot;option&quot;: &quot;Colorful    &quot;,&#xA;        &quot;score&quot;: &quot;1&quot;,&#xA;        &quot;status&quot;: &quot;1&quot;,&#xA;        &quot;question_id&quot;: {&#xA;          &quot;data&quot;: {&#xA;            &quot;id&quot;: &quot;6&quot;,&#xA;            &quot;attributes&quot;: {&#xA;              &quot;title&quot;: &quot;Style Identity&quot;&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  ]&#xA;}&#xA;}&#xA;}&#xA;</code></pre>&#xA;<p>As you see, it brought for me the question for every option.</p>&#xA;",11283695,,5468463,2022-04-23 04:10:02,2022-04-23 15:19:15,How to query data from strapi by relation using grqphql?,<graphql><strapi>,1,0,0,2022-04-23 04:03:15
71988132,1,,,0,102,"<p>I have defined by AWS amplify follow table:</p>&#xA;<pre><code>type NotificationPost&#xA;@model&#xA;@auth(&#xA;    rules: [&#xA;        # allow full access to admin&#xA;        { allow: groups, groups: [&quot;Admin&quot;] }&#xA;        # owner can create delete&#xA;        { allow: owner, identityClaim: &quot;username&quot;, ownerField: &quot;user&quot; }&#xA;    ]&#xA;) {&#xA;id: ID!&#xA;post: Post @hasOne(fields: [&quot;postId&quot;])&#xA;typeNotification: Int!&#xA;seen: Int!&#xA;postId: ID!&#xA;createdAt: String!&#xA;user: ID&#xA;    @index(&#xA;        name: &quot;notificationsPostByUser&quot;&#xA;        queryField: &quot;notificationsPostByUser&quot;&#xA;        sortKeyFields: [&quot;createdAt&quot;]&#xA;    )&#xA;</code></pre>&#xA;<p>}</p>&#xA;<p>I would update the field seen to 1 in all rows  that meet a condiction i.e. user=='user1'&#xA;At moment the only way that I found is to update with a separate query any row by id. There is a metod to update all of them at once?</p>&#xA;",9177336,,,,2022-04-24 11:55:31,AWS api grapQL update multiple items by a condiction,<amazon-web-services><graphql><amazon-dynamodb><amplify>,0,0,0,2022-04-24 11:55:31
72020645,2,,72020476,0,,<p>Try this:</p>&#xA;<pre><code>return (&#xA;    &lt;div className={style.hero}&gt;&#xA;        Home123&#xA;        {/* &lt;Table /&gt; */}&#xA;        &#xA;        {data &amp;&amp; &lt;TableOne columns={columns} data={data}  /&gt; }&#xA;        &#xA;    &lt;/div&gt;&#xA;  )&#xA;</code></pre>&#xA;,11726149,,,,2022-04-26 21:18:32,"",,0,3,0,2022-04-26 21:18:32
72028455,1,72260337,,1,944,"<p>I was working on an existing project using amplify with GraphQl API.</p>&#xA;<p>The query shows issues with @Key as <code>Your GraphQL Schema is using &quot;@key&quot; directive from an older version of the GraphQL Transformer</code> . Since I am new to graphQL, what should I change to make this work?</p>&#xA;<p>Thanks</p>&#xA;<p><strong>Error:</strong></p>&#xA;<pre><code>✖ An error occurred when pushing the resources to the cloud&#xA; An error occurred during the push operation: Your GraphQL Schema is using &quot;@key&quot; directive from an older version of the GraphQL Transformer. Visit https://docs.amplify.aws/cli/migration/transformer-migration/ to learn how to migrate your GraphQL schema.&#xA;&#xA;</code></pre>&#xA;<p><strong>Query:</strong></p>&#xA;<pre><code>type KeyValuePair {&#xA;    key: String!&#xA;    value: String&#xA;}&#xA;&#xA;type Template&#xA;  @model&#xA;  @auth(rules: [ {allow: owner } ]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  description: String&#xA;  provision_style: String!&#xA;  status: String!&#xA;  params: [KeyValuePair]&#xA;  resources: [KeyValuePair]&#xA;}&#xA;&#xA;type Asset&#xA;  @model&#xA;  @auth(rules: [ {allow: owner } ]) &#xA;  @key(name: &quot;categoryTypeIndex&quot;, fields: [&quot;category&quot;, &quot;type&quot;], queryField: &quot;assetsByCategoryAndType&quot;)&#xA;  @key(name: &quot;categoryNameIndex&quot;, fields: [&quot;category&quot;, &quot;name&quot;], queryField: &quot;assetsByCategoryAndName&quot;)&#xA;  @key(name: &quot;categoryStatusIndex&quot;, fields: [&quot;category&quot;, &quot;status&quot;], queryField: &quot;assetsByCategoryAndStatus&quot;) {&#xA;  id: ID!&#xA;  parent: ID&#xA;  category: String!&#xA;  type: String!&#xA;  name: String!&#xA;  description: String&#xA;  status: String&#xA;  template: String&#xA;  details: [KeyValuePair]&#xA;}&#xA;&#xA;type Contract&#xA;  @model&#xA;  @auth(rules: [ {allow: owner } ]) &#xA;  @key(name: &quot;tenantAssetIndex&quot;, fields: [&quot;tenantId&quot;, &quot;assetId&quot;], queryField: &quot;contractsByTenantAndAsset&quot;)&#xA;  @key(name: &quot;tenantNameIndex&quot;, fields: [&quot;tenantId&quot;, &quot;name&quot;], queryField: &quot;contractsByTenantAndName&quot;)&#xA;  @key(name: &quot;tenantStatusIndex&quot;, fields: [&quot;tenantId&quot;, &quot;status&quot;], queryField: &quot;contractsByTenantAndStatus&quot;) {&#xA;  id: ID!&#xA;  type: String!&#xA;  tenantId: String!&#xA;  assetId: String!&#xA;  name: String!&#xA;  description: String&#xA;  status: String&#xA;  details: [KeyValuePair]&#xA;  resources: [KeyValuePair]&#xA;}&#xA;&#xA;type PlatformEvent&#xA;  @model&#xA;  @auth(rules: [ {allow: owner } ]) &#xA;  @key(name: &quot;contractTypeIndex&quot;, fields: [&quot;contractId&quot;, &quot;type&quot;], queryField: &quot;eventsByContractAndType&quot;)&#xA;  @key(name: &quot;contractSourceIndex&quot;, fields: [&quot;contractId&quot;, &quot;sourceId&quot;], queryField: &quot;eventsByContractAndSource&quot;)&#xA;  @key(name: &quot;sourceTypeIndex&quot;, fields: [&quot;sourceId&quot;, &quot;type&quot;], queryField: &quot;eventsBySourceAndType&quot;) {&#xA;  id: ID!&#xA;  type: String!&#xA;  contractId: String!&#xA;  sourceId: String!&#xA;  content: String!&#xA;  details: [KeyValuePair]&#xA;}&#xA;</code></pre>&#xA;",8424582,,,,2022-05-17 06:05:50,I have a graphQL query and wanted to convert it GraphQL Transformer v1 to v2,<graphql><aws-amplify><graphql-js><typegraphql><aws-amplify-sdk-js>,2,0,0,2022-04-27 12:08:50
72043334,1,72056065,,-1,136,"<p>I have small SQLite database with products, that have relative paths to images.&#xA;I'd like to include these images to my page. I'm trying to use this query:</p>&#xA;<pre><code>query {&#xA;  allContent {&#xA;    nodes {&#xA;      Category&#xA;      Description&#xA;      Price&#xA;      ProductID&#xA;      Title&#xA;      ImageURI {&#xA;        childImageSharp {&#xA;          gatsbyImageData(width: 200)&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But I have this error:</p>&#xA;<pre><code>&#xA;      Field &quot;ImageURI&quot; must not have a selection since type &quot;String&quot; has no subfields.&#xA;&#xA;      This can happen if you e.g. accidentally added { } to the field &quot;ImageURI&quot;. If you didn't expect &quot;ImageURI&quot; to be of type &quot;String&quot; make sure that your input source and/or plugin&#xA; is correct.&#xA;      However, if you expect &quot;value&quot; to exist, the field might be accessible in another subfield. Please try your query in GraphiQL and use the GraphiQL explorer to see which fields&#xA;you can query and what shape they have.&#xA;&#xA;      It is recommended to explicitly type your GraphQL schema if you want to use optional fields. This way you don't have to add the mentioned&#xA;      &quot;dummy content&quot;. Visit our docs to learn how you can define the schema for &quot;undefined&quot;:&#xA;      https://www.gatsbyjs.com/docs/reference/graphql-data-layer/schema-customization#creating-type-definitions&#xA;&#xA;</code></pre>&#xA;<p>As I understand, I should convert String to File in my query. Is it right? If yes, how to do that?</p>&#xA;<p>Full code &amp; repo to reproduce: <a href=""https://github.com/vladd11/gatsby-test/blob/master/src/pages/index.js"" rel=""nofollow noreferrer"">https://github.com/vladd11/gatsby-test/blob/master/src/pages/index.js</a></p>&#xA;",9344945,,,,2022-04-29 09:50:57,How to load image in Gatsby GraphQL query,<graphql><gatsby>,1,1,0,2022-04-28 12:02:32
72086063,1,,,0,233,"<p>I am currently working on a project, where the amplify folder having the configs is missing and the AWS Account in which the backend was deployed has been closed. The only file present with the frontend code is <code>aws-exports.js</code> (having graphQL endpoint from the old account) along with CDK config files for deployment.</p>&#xA;<p>If I try to rebuild the project in a fresh AWS account, do I need to provide specific graphQL schema for API usage using Amplify as the file <code>schema.graphql</code> is not present in the current repository, however, I see graphQL dependencies as shown in the code below?</p>&#xA;<pre><code>import { listAssets, assetsByCategoryAndType } from &quot;./api/platform-assets-graphql/queries&quot;&#xA;import { GraphQLResult } from &quot;@aws-amplify/api&quot;;&#xA;import { PlatformAssetsComponent } from &quot;./PlatformAssetsComponent&quot;&#xA;import appConfig from &quot;../config/appConfig&quot;;&#xA;&#xA;//const PlatformAssetsContainer = () =&gt; {&#xA;export default function PlatformAssetsContainer() {&#xA;    const [assets, setAssets] = useState&lt;GraphQLResult&lt;AssetsByCategoryAndTypeQuery&gt; | undefined&gt;(undefined);&#xA;    const [error, setErrors] = useState(false);&#xA;    const queryParams = useParams();&#xA;    const location = useLocation();&#xA;</code></pre>&#xA;<p>Once Amplify backend build is done can I edit/add the cdk config files for frontend deployment ?</p>&#xA;<p>Thanks</p>&#xA;",8424582,,,,2022-05-02 11:32:17,Amplify and graphql query: Amplify config and schema.graphql files are missing,<amazon-web-services><graphql><aws-amplify><aws-cdk><amplify>,0,0,0,2022-05-02 11:32:17
72116464,1,,,-1,340,<p>I am trying to make a Hotel website backend that allows users to reserve rooms using GraphQL and prisma. I want to make sure that the reservation will be cancelled after the check-in time if no one has checked in. To do this I wanted to set up a ttl index that will delete the reservation.</p>&#xA;<p>If there is any alternative way of doing this you can help me.</p>&#xA;,8654504,,,,2022-05-21 01:51:59,Is there a way to set up MongoDB ttl indexes using prisma,<mongodb><graphql><prisma><ttl>,1,1,0,2022-05-04 16:32:53
72145781,1,72210179,,0,123,"<p>I am trying to define two roles in Hasura:</p>&#xA;<ul>&#xA;<li><code>role_1</code>: In <code>my_table</code>, can update: <code>column_A</code> and <code>column_B</code></li>&#xA;<li><code>role_2</code>: In <code>my_table</code>, can update: <code>column_C</code></li>&#xA;</ul>&#xA;<p>I want an end user to be able to update <code>column_A</code>, <code>column_B</code> or <code>column_C</code> without specifying a role, so I combine these into an inherited role: <code>user</code>.</p>&#xA;<p>I receive the following error when uploading the metadata to Hasura:</p>&#xA;<pre><code>{&#xA;  &quot;internal&quot;: [&#xA;    {&#xA;      &quot;reason&quot;: &quot;Could not inherit permission for the role 'user' for the entity: 'update permission, table: my_table, source: 'my_source''&quot;,&#xA;      &quot;name&quot;: &quot;user&quot;,&#xA;      &quot;type&quot;: &quot;inherited role permission inconsistency&quot;,&#xA;      &quot;entity&quot;: {&#xA;        &quot;permission_type&quot;: &quot;update&quot;,&#xA;        &quot;source&quot;: &quot;my_source&quot;,&#xA;        &quot;table&quot;: &quot;my_table&quot;&#xA;      }&#xA;    }&#xA;  ],&#xA;  &quot;path&quot;: &quot;$.args&quot;,&#xA;  &quot;error&quot;: &quot;cannot continue due to inconsistent metadata&quot;,&#xA;  &quot;code&quot;: &quot;unexpected&quot;&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>The <code>my_table</code> permissions in my metadata:</p>&#xA;<pre><code>&quot;update_permissions&quot;: [&#xA;  {&#xA;    &quot;role&quot;: &quot;role_1&quot;,&#xA;    &quot;permission&quot;: {&#xA;      &quot;filter&quot;: ...(check if I can update column_A and column_B)&#xA;      },&#xA;      &quot;columns&quot;: [&#xA;        &quot;column_A&quot;,&#xA;        &quot;column_B&quot;&#xA;      ]&#xA;    }&#xA;  },&#xA;  {&#xA;    &quot;role&quot;: &quot;role_2&quot;,&#xA;    &quot;permission&quot;: {&#xA;      &quot;filter&quot;: ...(a different check if I can update column_C)&#xA;      },&#xA;      &quot;columns&quot;: [&#xA;        &quot;column_C&quot;&#xA;      ]&#xA;    }&#xA;  }&#xA;],&#xA;</code></pre>&#xA;<p>Inherited roles config:</p>&#xA;<pre><code>&quot;inherited_roles&quot;: [&#xA;    {&#xA;      &quot;role_name&quot;: &quot;user&quot;,&#xA;      &quot;role_set&quot;: [&#xA;        &quot;role_1&quot;,&#xA;        &quot;role_2&quot;&#xA;      ]&#xA;    }&#xA;  ]&#xA;</code></pre>&#xA;<p>If I include all three columns in update permissions / roles, it works fine. However this isn't what I want </p>&#xA;",169164,,,,2022-05-12 04:34:54,Hasura inherited role permission inconsistency,<postgresql><graphql><hasura>,1,0,0,2022-05-06 18:12:57
72147317,2,,72062178,2,,"<p>I believe what you are asking for is to be able to execute GraphQL operations against a PostGraphile schema from other routes/middlewares in Express without needing to make additional http requests. This is called <a href=""https://www.graphile.org/postgraphile/usage-schema/"" rel=""nofollow noreferrer"">schema only usage</a> and you will specifically want to use <a href=""https://www.graphile.org/postgraphile/usage-schema/#api-withpostgraphilecontextoptions-callback"" rel=""nofollow noreferrer""><code>withPostGraphileContext</code></a> to execute your request and process results:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import type { Express } from &quot;express&quot;;&#xA;import type { Pool } from &quot;pg&quot;;&#xA;import {&#xA;  gql,&#xA;  makeProcessSchemaPlugin,&#xA;  postgraphile,&#xA;  withPostGraphileContext,&#xA;} from &quot;postgraphile&quot;;&#xA;import PgSimplifyInflectorPlugin from &quot;@graphile-contrib/pg-simplify-inflector&quot;;&#xA;import type { GraphQLSchema } from &quot;graphql&quot;;&#xA;import { graphql } from &quot;graphql&quot;;&#xA;&#xA;// Register your middlewares with express&#xA;const schemaOnlyUsageApp = (app: Express, pool: Pool) =&gt; {&#xA;  let schema: GraphQLSchema;&#xA;&#xA;  // This plugin will execute a callback each time the PostGraphile&#xA;  // GraphQl schema is rebuit.&#xA;  const schemaProcessorPlugin = makeProcessSchemaPlugin((newSchema) =&gt; {&#xA;    schema = newSchema;&#xA;    return schema;&#xA;  });&#xA;&#xA;  // Register the PostGraphile middleware as normal for requests on /graphql (and /graphiql)&#xA;  app.use(&#xA;    postgraphile(pool, &quot;my_schema&quot;, {&#xA;      simpleCollections: &quot;omit&quot;,&#xA;      dynamicJson: true,&#xA;      legacyRelations: &quot;omit&quot;,&#xA;      setofFunctionsContainNulls: false,&#xA;      appendPlugins: [PgSimplifyInflectorPlugin, schemaProcessorPlugin],&#xA;      watchPg: true,&#xA;      graphiql: true,&#xA;      enhanceGraphiql: true,&#xA;      showErrorStack: true,&#xA;      allowExplain: true,&#xA;    })&#xA;  );&#xA;&#xA;  // custom route that will execute a predefined gql query directly against the schema&#xA;  app.get(&quot;/posts&quot;, async (req, res) =&gt; {&#xA;    // arbitrary gql query&#xA;    const query = gql`&#xA;      query posts {&#xA;        posts {&#xA;          edges {&#xA;            node {&#xA;              id&#xA;              title&#xA;              body&#xA;              likeCount&#xA;              createdAt&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    `;&#xA;&#xA;    const result = await withPostGraphileContext(&#xA;      {&#xA;        // Reuse your pool to avoid creating additional connections&#xA;        pgPool: pool,&#xA;      },&#xA;      async (context) =&gt; {&#xA;        // execute your query directly and get results without making&#xA;        // an additional http request!&#xA;        const queryResult = await graphql({&#xA;          schema,&#xA;          source: query.loc?.source || &quot;&quot;,&#xA;          contextValue: { ...context },&#xA;        });&#xA;        return queryResult;&#xA;      }&#xA;    );&#xA;&#xA;    res.send(result);&#xA;  });&#xA;};&#xA;&#xA;export default schemaOnlyUsageApp;&#xA;</code></pre>&#xA;",878272,,,,2022-05-06 21:01:30,"",,0,0,0,2022-05-06 21:01:30
72150011,1,72150795,,0,429,"<p>I am using <code>graphQl</code> with <code>Strapi</code>, I have one <code>question</code> table and one <code>question-option</code> table, and I write a query to bring data for me by relation. All things working correctly except those questions that have more than 10 options. it just brings 10 options not more.</p>&#xA;<p><strong>My query:</strong></p>&#xA;<pre><code>query {&#xA;    questions(filters: {for: {contains: &quot;owner&quot;}}) {&#xA;      data {&#xA;        id&#xA;        attributes {&#xA;          number&#xA;          mode&#xA;          for&#xA;          description&#xA;          title&#xA;          question_options {&#xA;            data {&#xA;              id&#xA;              attributes {&#xA;                option&#xA;                score&#xA;                status&#xA;              }&#xA;            }&#xA;          }&#xA;          style_template {&#xA;            ... on ComponentQuestionerImageWithTitleColor {&#xA;              imageType&#xA;              color&#xA;              image {&#xA;                data {&#xA;                  attributes {&#xA;                    url&#xA;                  }&#xA;                }&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p><strong>This is my table:</strong>&#xA;<a href=""https://i.stack.imgur.com/Rb2bd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Rb2bd.png"" alt=""enter image description here"" /></a></p>&#xA;",11283695,,11283695,2022-05-07 09:43:46,2022-05-07 09:43:46,Why Strapi bring limit data for relations?,<graphql><strapi>,1,1,0,2022-05-07 06:23:05
72160604,1,,,0,147,"<p>My resolver template</p>&#xA;<pre><code>{&#xA;   &quot;version&quot; : &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot; : &quot;Query&quot;,&#xA;    &quot;query&quot; : {&#xA;        &quot;expression&quot; : &quot;receiverusername = :receiverusername and createdat &gt; :createdat&quot;,&#xA;        &quot;expressionValues&quot; : {&#xA;            &quot;:receiverusername&quot; : $util.dynamodb.toDynamoDBJson($context.identity.username),&#xA;            &quot;:createdat&quot; : $util.dynamodb.toDynamoDBJson($ctx.args.input.lastDate),&#xA;        }&#xA;    },&#xA;    &quot;index&quot; : &quot;receiverusername-createdat-index&quot;,&#xA;}&#xA;</code></pre>&#xA;<p>I am trying to query the date and username but I keep on getting this error</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;listMyMessages&quot;: null&#xA;  },&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;path&quot;: [&#xA;        &quot;listMyMessages&quot;&#xA;      ],&#xA;      &quot;data&quot;: null,&#xA;      &quot;errorType&quot;: &quot;DynamoDB:DynamoDbException&quot;,&#xA;      &quot;errorInfo&quot;: null,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 2,&#xA;          &quot;column&quot;: 3,&#xA;          &quot;sourceName&quot;: null&#xA;        }&#xA;      ],&#xA;      &quot;message&quot;: &quot;One or more parameter values were invalid: Condition parameter type does not match schema type (Service: DynamoDb, Status Code: 400, Request ID: 7I18ODEK46H52NMBSF99OTNSQ7VV4KQNSO5AEMVJF66Q9ASUAAJG)&quot;&#xA;    }&#xA;  ]&#xA;</code></pre>&#xA;<p>How do I query this ?</p>&#xA;<p>I tried to learn from documentations but nothing gives me any clue!</p>&#xA;",10462295,,,,2022-05-11 00:30:56,How to query two values from index? Appsync Query Dynamodb,<graphql><amazon-dynamodb><aws-appsync>,2,0,0,2022-05-08 11:37:45
72160752,2,,72160604,0,,"<p>Querying 2 values at the same time is not possible for DynamoDB, since every GSI creates a duplicate table with different index. A good solution I can think of is querying indexes in parallel and returning their intersaction.</p>&#xA;",9025202,,,,2022-05-08 11:56:57,"",,0,2,0,2022-05-08 11:56:57
72162720,2,,71344929,0,,"<p>When it comes to performing DynamoDB batch operations in tandem with Amplify, note that the table name specified in the schema is actually different per environment, i.e. your &quot;Client&quot; table wouldn't be recognized as &quot;Clients&quot; as you have stated it in the request mapping template, but rather the name it is given on Amplify push, per environment.&#xA;E.g. <code>Client-&lt;some alphanumeric number&gt;-envName</code></p>&#xA;<p>Add the full name of the table to your request and response mapping templates.</p>&#xA;<p>Also your foreach statement should read:&#xA;<code>#foreach($item in ${ctx.args.clientsdata})</code> wherein you iterate through each of the items in the array that is passed as the argument to the context object.</p>&#xA;<p>Hope this helps.</p>&#xA;",5434213,,,,2022-05-08 15:51:10,"",,0,0,0,2022-05-08 15:51:10
72170759,2,,72160604,0,,"<p>I just did this and it worked.&#xA;And yes I am not touching or investigating why.</p>&#xA;<pre><code>{&#xA;    &quot;version&quot; : &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot; : &quot;Query&quot;,&#xA;    &quot;index&quot; : &quot;receiverusername-createdat-index&quot;,&#xA;    &quot;query&quot; : {&#xA;        ## Provide a query expression. **&#xA;        &quot;expression&quot;: &quot;receiverusername = :receiverusername and createdat &gt; :createdat&quot;,&#xA;        &quot;expressionValues&quot; : {&#xA;            &quot;:receiverusername&quot; : {&#xA;                &quot;S&quot; : &quot;${context.identity.username}&quot;&#xA;            },&#xA;            &quot;:createdat&quot;: {&#xA;                &quot;S&quot;: &quot;${ctx.args.lastDate}&quot;&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>I did not use sort key but just index keys</p>&#xA;<p><a href=""https://i.stack.imgur.com/cPmhL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/cPmhL.png"" alt=""enter image description here"" /></a></p>&#xA;",10462295,,10462295,2022-05-11 00:30:56,2022-05-11 00:30:56,"",,0,3,0,2022-05-09 10:48:55
72175584,1,,,0,53,"<p>I am working on Ruby programming. Getting graphql client call response in the below format.</p>&#xA;<p>response is</p>&#xA;<pre><code>[#&lt;GraphQL::Client::Response:0x00000001169729a0 @original_hash={&quot;data&quot;=&gt;{&quot;provisioningAddEntitlementToAccounts&quot;=&gt;{&quot;result&quot;=&gt;[{&quot;accountId&quot;=&gt;11571824, &quot;status&quot;=&gt;&quot;SUCCESS&quot;}, {&quot;accountId&quot;=&gt;11571825, &quot;status&quot;=&gt;&quot;SUCCESS&quot;}]}}}, @data=#&lt;#&lt;Module:0x000000011537e220&gt;::RootMutationType provisioningAddEntitlementToAccounts=...&gt;, @errors=#&lt;GraphQL::Client::Errors @messages={} @details={}&gt;, @extensions=nil&gt;]&#xA;</code></pre>&#xA;<p>In some rare cases there is a chance to get &quot;Account Not Found&quot; response for some account Id's and &quot;SUCCESS&quot; for some account Id's.</p>&#xA;<p>So I would like to store all the account Id's which are getting &quot;SUCCESS&quot; response only into some variable.</p>&#xA;<p>Can you please someone help me on this.</p>&#xA;",18616772,,1978251,2022-05-09 20:30:49,2022-05-09 20:30:49,How to log the Graphql success response in ruby,<ruby-on-rails><graphql>,0,0,0,2022-05-09 16:50:47
72205628,2,,72158384,0,,"<p>This is a duplicate of a question on Fauna's forums: <a href=""https://forums.fauna.com/t/find-and-update-in-auto-generated-graphql-api/3205"" rel=""nofollow noreferrer"">https://forums.fauna.com/t/find-and-update-in-auto-generated-graphql-api/3205</a></p>&#xA;<p>To copy that answer here:</p>&#xA;<hr />&#xA;<p>GraphQL does let you make multiple queries in a single request.</p>&#xA;<pre><code>query {&#xA;  thing1: findThingByID(id: &quot;1234&quot;) { _id, _ts, field }&#xA;  thing2: findThingByID(id: &quot;5555&quot;) { _id, _ts, field }&#xA;}&#xA;</code></pre>&#xA;<p>That's not a Fauna thing, rather it is part of how GraphQL works.  <a href=""https://graphql.org/learn/queries/#aliases"" rel=""nofollow noreferrer"">https://graphql.org/learn/queries/#aliases</a></p>&#xA;<p>These are run at the same time, though.  If you need to use the response from one request in the body of the next request then GraphQL does not have a mechanism for this.  You can, however, create a UDF and call it with a customer resolver.</p>&#xA;<pre><code>type Query {&#xA;  myAdvancedQuery(thing1: ID, thing2: ID): [SomeResultType] @resolver&#xA;}&#xA;</code></pre>&#xA;<pre class=""lang-js prettyprint-override""><code>CreateFunction({&#xA;  name: &quot;myAdvancedQuery&quot;,&#xA;  role: Role(&quot;myAdvancedQueryFnRole&quot;) // https://docs.fauna.com/fauna/current/security/abac&#xA;  body: Query(&#xA;    Lambda(&#xA;      [&quot;thing1&quot;, &quot;thing2&quot;],&#xA;      Let(&#xA;        {&#xA;          step1: /* Do something with thing 1 */&#xA;          step2: /* Do something with thing 2 */&#xA;          step3: /* Do something with the results of steps 1 and 2 */&#xA;        },&#xA;        /* create and return the payload that GraphQL expects */&#xA;      )&#xA;    )&#xA;  )&#xA;})&#xA;</code></pre>&#xA;<p><a href=""https://docs.fauna.com/fauna/current/api/graphql/directives/d_resolver"" rel=""nofollow noreferrer"">https://docs.fauna.com/fauna/current/api/graphql/directives/d_resolver</a></p>&#xA;",534056,,,,2022-05-11 18:01:12,"",,0,0,0,2022-05-11 18:01:12
72210179,2,,72145781,0,,"<p><em>(Thanks to jmart on Hasura Discorf for the answer):</em></p>&#xA;<p>As far as I understand the feature, it's a cascade of checks, not a combination of checks.</p>&#xA;<p>So it looks to see if the user has permission to select columns ABC from the first role it has access to, and if not, checks if it has access via any of the other roles.</p>&#xA;<p>If none of the roles are inclusive of all requested columns, it will be considered a clash because they are competing permission rules.</p>&#xA;",169164,,,,2022-05-12 04:34:54,"",,0,0,0,2022-05-12 04:34:54
72223848,1,,,0,269,"<p>i'm using strawberry to great success. however, there is one scenario that i would like to achieve:</p>&#xA;<pre><code> @strawberry.mutation( permission_classes=[ IsAuthenticated, IsAuthorized ] )&#xA;</code></pre>&#xA;<p>works great; however, i also want to add a <code>IsAdmin</code> permission class. Unfortunately, i can't just add it to the list of <code>permission_classes</code> as the permissions work as an AND rather than an OR (since normal users are not admins, the permission checks will fail).</p>&#xA;<p>is there someway i that OR can be implemented in the processing of <code>permission_classes</code>?</p>&#xA;",624724,,523612,2022-05-13 02:36:09,2022-05-13 02:36:09,How can I combine permissions in `strawberry` with logical OR rather than AND?,<python><graphql><permissions><strawberry-graphql>,0,0,0,2022-05-13 02:28:03
72225911,1,,,0,554,"<p>I have a simple NestJS + Apollo Server + GraphQL project.</p>&#xA;<p>You can find the project here: <a href=""https://github.com/GabeShin/nestjs-graphql-sample"" rel=""nofollow noreferrer"">https://github.com/GabeShin/nestjs-graphql-sample</a></p>&#xA;<p>Here's the issue:</p>&#xA;<ul>&#xA;<li>I want to deploy my sample project using AWS CDK, but queries at AppSync is not working properly.</li>&#xA;<li>I searched web for similar implementation, but I'm having difficult time finding a project that is using NestJS framework with AppSync.</li>&#xA;<li>When I send a GraphQL query from deployed AppSync API, I'm getting Error Type  <code>UnableToAssumeRoleValidationError</code></li>&#xA;</ul>&#xA;<p>I think my lack of knowledge of AWS infrastructure is causing issue and I need some help.</p>&#xA;<p>Here's the CDK code:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>        const dependenciesLayer = new LayerVersion(this, 'DependenciesLayer', {&#xA;            code: new AssetCode('modules/nestjs-graphql-template/node_modules'),&#xA;            compatibleRuntimes: [Runtime.NODEJS_14_X, Runtime.NODEJS_16_X],&#xA;        });&#xA;&#xA;        const testLambda = new Function(this, 'TestHandler', {&#xA;            runtime: Runtime.NODEJS_16_X,&#xA;            code: new AssetCode('modules/nestjs-graphql-template/dist'),&#xA;            handler: 'index.handler',&#xA;            layers: [dependenciesLayer],&#xA;        });&#xA;&#xA;        const api = new CfnGraphQLApi(this, 'TestApi', {&#xA;            name: 'TestApi',&#xA;            authenticationType: 'API_KEY',&#xA;        });&#xA;&#xA;        const schemafile = fs.readFileSync(&#xA;            'modules/nestjs-graphql-template/schema.graphql'&#xA;        );&#xA;&#xA;        const schema = new CfnGraphQLSchema(this, 'MyGraphqlSchema', {&#xA;            apiId: api.attrApiId,&#xA;            definition: schemafile.toString(),&#xA;        });&#xA;&#xA;        const dataSource = new CfnDataSource(this, 'TestDataSource', {&#xA;            apiId: api.attrApiId,&#xA;            name: 'TestDataSource',&#xA;            type: 'AWS_LAMBDA',&#xA;            lambdaConfig: {&#xA;                lambdaFunctionArn: testLambda.functionArn,&#xA;            },&#xA;        });&#xA;</code></pre>&#xA;<h3>index.ts</h3>&#xA;<pre class=""lang-js prettyprint-override""><code>import { Server } from 'http';&#xA;import { Context } from 'aws-lambda';&#xA;import { createServer, proxy, Response } from 'aws-serverless-express';&#xA;import * as express from 'express';&#xA;import { createApp } from 'src/main';&#xA;&#xA;let cachedServer: Server;&#xA;&#xA;async function bootstrap(): Promise&lt;Server&gt; {&#xA;  const expressApp = express();&#xA;&#xA;  const app = await createApp(expressApp);&#xA;  await app.init();&#xA;&#xA;  return createServer(expressApp);&#xA;}&#xA;&#xA;export async function handler(event: any, context: Context): Promise&lt;Response&gt; {&#xA;  if (!cachedServer) {&#xA;    const server = await bootstrap();&#xA;    cachedServer = server;&#xA;  }&#xA;&#xA;  return proxy(cachedServer, event, context, 'PROMISE').promise;&#xA;}&#xA;&#xA;</code></pre>&#xA;<h3>Result</h3>&#xA;<p><a href=""https://i.stack.imgur.com/cSnfu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/cSnfu.png"" alt=""enter image description here"" /></a></p>&#xA;",7906354,,,,2022-05-26 04:55:11,Deploying NestJS project using AWS CDK,<aws-lambda><graphql><nestjs><aws-cdk><aws-appsync>,1,0,0,2022-05-13 07:31:43
72232524,1,72239986,,0,65,"<p>Subgraph query returns results to console, but my javascript module can't access any values from it, returning an error:</p>&#xA;<pre><code>TypeError: Cannot read properties of undefined (reading 'symbol')&#xA;</code></pre>&#xA;<p>According to everything I read online, this is how to access object properties.</p>&#xA;<p>quni.mjs:</p>&#xA;<pre><code>import axios from 'axios'&#xA;export async function quni() {&#xA;  const uniData = async () =&gt; {&#xA;    var result;&#xA;    try{&#xA;      result = await axios.post(&#xA;        'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-polygon',&#xA;        {   &#xA;          query:`&#xA;          {&#xA;            pools(&#xA;              first: 2,&#xA;            where: {&#xA;              liquidity_gt: 100&#xA;            }&#xA;          )&#xA;            {&#xA;              id&#xA;              token1{symbol}&#xA;              token0{symbol}&#xA;            }&#xA;          } &#xA;          `&#xA;        }    &#xA;      );&#xA;    } catch(error){&#xA;      console.error(error);&#xA;    }&#xA;    const unipairs = result.data.data.pools;&#xA;    //console.log(unipairs);&#xA;    return result.data.data.pools;&#xA;  }&#xA;  return uniData();&#xA;}&#xA;quni();&#xA;</code></pre>&#xA;<p>quniparse.mjs:</p>&#xA;<pre><code>    import { quni } from './quni.mjs';&#xA;    async function unicheck() {&#xA;    var uni = await quni();&#xA;    var unitoken0 = uni.token0.symbol;&#xA;    var unitoken1 = uni.token1.symbol;&#xA;    var ticker = toString([unitoken0+&quot;/&quot;+unitoken1]);&#xA;    console.log(ticker)&#xA;    };&#xA;    unicheck();&#xA;</code></pre>&#xA;<p>Solutions I've tried:</p>&#xA;<p><code>JSON.stringify(unipairs)</code> to try accessing using JSON objects in quniparse.mjs, but that yields identical results.</p>&#xA;<p><code>fs.writeFile('./unipairs', JSON.stringify(unipairs), null, 2)</code> to see if accessing properties from .json file might help.</p>&#xA;<p>All yield identical results (cannot read 'symbol').</p>&#xA;",19079275,,19079275,2022-05-13 16:35:29,2022-05-14 12:00:33,Cannot access object from GraphQL query (JavaScript),<javascript><import><module><graphql><graphql-js>,1,0,0,2022-05-13 16:11:27
72236719,1,72400388,,0,194,"<p>Is it possible to have auth rules requiring authenticated users to belong to multiple groups? For example &quot;allow  users who are in 'Tenant N' AND who are 'Editors'&quot;.</p>&#xA;<p>Our models are currently similar to this:</p>&#xA;<pre><code>type MyModel&#xA;  @model&#xA;  @auth(rules: [&#xA;    { allow: owner },&#xA;    { allow: groups, groupsField: &quot;tenantID&quot; },&#xA;  ])&#xA;{&#xA;  id: ID!&#xA;  tenantID: String!&#xA;}&#xA;</code></pre>&#xA;<p>So using static group auth doesn't work for us:</p>&#xA;<pre><code>type MyModel&#xA;  @model&#xA;  @auth(rules: [&#xA;    { allow: groups, groups: [&quot;DynamicTenantId&quot;, &quot;Editor&quot;] }&#xA;  ])&#xA;{&#xA;  id: ID!&#xA;  tenantID: String!&#xA;}&#xA;</code></pre>&#xA;<p>Because tenantID is a dynamic value, we need to use dynamic group auth instead:</p>&#xA;<pre><code>type MyModel&#xA;  @model&#xA;  @auth(rules: [&#xA;    { allow: owner },&#xA;    { allow: groups, groupsField: &quot;tenantID&quot; },&#xA;    { allow: groups, group: &quot;Editor&quot; },&#xA;  ])&#xA;{&#xA;  id: ID!&#xA;  tenantID: String!&#xA;}&#xA;</code></pre>&#xA;<p>But this doesn't work because it's an &quot;OR&quot;, saying &quot;allow anyone in the tenant OR anyone with the 'Editor' group&quot;.</p>&#xA;<p>Updating our models to use single dynamic group auth field doesn't work either:</p>&#xA;<pre><code>type MyModel&#xA;  @model&#xA;  @auth(rules: [&#xA;    { allow: owner },&#xA;    { allow: groups, groupsField: &quot;allowGroups&quot; },&#xA;  ])&#xA;{&#xA;  id: ID!&#xA;  allowGroups: [String] # ['DynamicTenantId', 'Editor']&#xA;}&#xA;</code></pre>&#xA;<p>Because this an &quot;OR&quot; too, saying &quot;allow anyone in the tenant OR anyone with the 'Editor' group&quot;.</p>&#xA;<p>Are there any other options, aside from a custom authenticator, to require multiple group membership?</p>&#xA;",1909498,,1909498,2022-05-14 02:47:37,2022-05-27 04:11:37,AWS Amplify @auth rule require multiple group membership,<amazon-web-services><graphql><aws-amplify>,1,0,0,2022-05-14 01:37:13
72246833,2,,70294008,0,,"<p>MDN explains a <a href=""https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/403"" rel=""nofollow noreferrer"">403 Error</a> (Not Authorized) with the following:</p>&#xA;<blockquote>&#xA;<p>The HTTP 403 Forbidden response status code indicates that the server&#xA;understands the request <strong>but refuses to authorize it</strong>.   The access&#xA;is permanently forbidden and tied to (...) insufficient rights to a&#xA;resource.</p>&#xA;</blockquote>&#xA;<p>This means that you need to set up your API Access configuration in GraphCMS;</p>&#xA;<ol>&#xA;<li>Visit <a href=""https://app.graphcms.com/"" rel=""nofollow noreferrer"">GraphCMS</a></li>&#xA;<li>Visit settings (navbar should be on your right)</li>&#xA;<li>Under &quot;Access&quot;, select &quot;Public Content API&quot;</li>&#xA;<li>Select &quot;Create Permission&quot;, then select the rules required for your query to run properly.</li>&#xA;</ol>&#xA;<p>Now you can use the content API URL, for example, to run your queries.<br />&#xA;It should be in the follwoing format;<br />&#xA;<strong>https://&lt;zone&gt;.graphcms.com/v2/&lt;identifier&gt;/master</strong></p>&#xA;",19119922,,,,2022-05-15 08:51:55,"",,0,0,0,2022-05-15 08:51:55
72250098,2,,67245560,1,,"<p>You can avoid returning the password, by setting <code>select</code> Prop option to false.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>@Prop({ ..., select: false })&#xA;password: string;&#xA;</code></pre>&#xA;<p>If you don't want to return the password on operations other than a simple select (API create/update/login etc.), you can change the document's toJSON transform method as following :</p>&#xA;<pre class=""lang-js prettyprint-override""><code>//&#xA;UserSchema.set('toJSON', {&#xA;    transform: (doc, ret, opt) =&gt; {&#xA;        delete ret.password;&#xA;        return ret;&#xA;    }&#xA;});&#xA;</code></pre>&#xA;",8704112,,8704112,2022-05-15 16:54:10,2022-05-15 16:54:10,"",,0,0,0,2022-05-15 16:20:56
72250209,2,,72250121,1,,<p>In Strapi v4 you can do it like this:</p>&#xA;<ol>&#xA;<li>Go to &quot;Settings&quot;;</li>&#xA;<li>Open &quot;Roles&quot;;</li>&#xA;<li>Click on the &quot;Public&quot; role;</li>&#xA;<li>Expand the desired model in the &quot;Permissions&quot; section;</li>&#xA;<li>Specify which endpoints you want to give rights.</li>&#xA;</ol>&#xA;<p>In your case it is &quot;create&quot;.</p>&#xA;,17108710,,,,2022-05-15 16:34:34,"",,0,1,0,2022-05-15 16:34:34
72252899,2,,72249553,1,,"<p>Creating a record in the junction table should relate both entities:</p>&#xA;<pre><code>await prisma.favouritesOnUsers.create({&#xA;  data: { userId, postId },&#xA;});&#xA;</code></pre>&#xA;",10759647,,,,2022-05-15 23:32:35,"",,0,0,0,2022-05-15 23:32:35
72254902,2,,72248573,0,,"<p>Will something like this work?</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// First we group the views, with pagination&#xA;const groupedViews = await prisma.view.groupBy({&#xA;    take: 10,&#xA;    skip: 0,&#xA;    by: ['postId'],&#xA;    where: { createdAt: dateFilter },&#xA;    _count: { postId: true },&#xA;    orderBy: { _count: { postId: 'desc' } },&#xA;});&#xA;&#xA;// Fetch the posts from the grouped views&#xA;const _posts = await prisma.post.findMany({&#xA;    where: {&#xA;        id: { in: groupedViews.map(({ postId }) =&gt; postId) },&#xA;    },&#xA;    include: {&#xA;        _count: { select: { views: true } },&#xA;        views: { where: { createdAt: dateFilter } },&#xA;    },&#xA;});&#xA;&#xA;// Map the fetched posts back for correct ordering&#xA;const posts = groupedViews.map(({ postId }) =&gt;&#xA;    _posts.find(({ id }) =&gt; id === postId)&#xA;);&#xA;</code></pre>&#xA;<p>Model:</p>&#xA;<pre><code>model Post {&#xA;  id    String @id @default(cuid())&#xA;  views View[]&#xA;}&#xA;&#xA;model View {&#xA;  id        String   @id @default(cuid())&#xA;  createdAt DateTime @default(now())&#xA;  postId    String&#xA;  post      Post     @relation(fields: [postId], references: [id])&#xA;}&#xA;</code></pre>&#xA;<p>This uses 2 separate queries, but does not require raw sql</p>&#xA;",10759647,,,,2022-05-16 06:25:42,"",,0,0,0,2022-05-16 06:25:42
72263267,1,,,0,72,"<p>I am using ApolloProvider with two authorizations, one for guests and the other for signed-in users. The default client is with the guest authorization and on sign-in, I create a new client with special specific tokens. However, queries that require user authorizations I make soon after sometimes return <code>401 Permission Denied</code> error. How can I ensure I am using the correct client for my query?</p>&#xA;<p>Here is some sample code:</p>&#xA;<pre><code>const CustomApolloProvider = ({ children }) =&gt; {&#xA;  const [client, setClient] = useState(getGuestClient());&#xA;&#xA;  // gets called when user signs in&#xA;  const onUserSignIn = () =&gt; {&#xA;    setClient(getUserClient());&#xA;  });&#xA;&#xA;  return &lt;ApolloProvider client={client}&gt;{children}&lt;/ApolloProvider&gt;;&#xA;};&#xA;</code></pre>&#xA;<p>Another file that throws an error:</p>&#xA;<pre><code>const [&#xA;  checkUserExists, // needs special permissions&#xA;  {&#xA;    data: checkUserExistsData,&#xA;    loading: loadingCheckUserExistsData,&#xA;    error: checkUserExistsError,&#xA;    },&#xA;] = useLazyQuery(gql(getUser), { fetchPolicy: 'network-only' });&#xA;&#xA;// gets called when user signs in&#xA;const onUserSignIn = () =&gt; {&#xA;  await checkUserExists();&#xA;});&#xA;</code></pre>&#xA;",6811893,,6811893,2022-05-17 15:54:49,2022-05-17 15:54:49,Race condition in ApolloProvider when using multiple clients with different authorizations,<javascript><reactjs><apollo><apollo-client><react-apollo>,0,6,0,2022-05-16 17:26:57
72268875,1,72268876,,0,258,"<p>I recently added the @index annotation to my GraphQL schema in my Amplify backend and am now getting the following error:</p>&#xA;<p><code>SchemaValidationError: Your GraphQL Schema is using &quot;@index&quot; directive from the newer version of the GraphQL Transformer</code></p>&#xA;<p>I've followed the migration guide referenced in the error: <a href=""https://docs.amplify.aws/cli/migration/transformer-migration/"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/migration/transformer-migration/</a> but it doesn't actually indicate how to perform the migration itself</p>&#xA;",3368558,,,,2022-05-17 06:02:17,AWS Amplify migrate GraphQLTransformer to V2,<graphql><aws-amplify><aws-appsync>,1,0,0,2022-05-17 06:02:17
72268876,2,,72268875,3,,"<p>The GraphQL Transformer version is managed in <code>amplify/cli.json</code></p>&#xA;<p>You simply need to edit the file and set the following two properties:</p>&#xA;<pre><code>  &quot;features&quot;: {&#xA;    &quot;graphqltransformer&quot;: {&#xA;      ...&#xA;      &quot;useexperimentalpipelinedtransformer&quot;: true,&#xA;      &quot;transformerversion&quot;: 2,&#xA;      ...&#xA;    },&#xA;</code></pre>&#xA;<p>From there you can do an <code>amplify push</code> or a <code>amplify codegen models</code> and assuming all changes referenced in the guide (<a href=""https://docs.amplify.aws/cli/migration/transformer-migration/"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/migration/transformer-migration/</a>) have been catered for all will work.</p>&#xA;",3368558,,,,2022-05-17 06:02:17,"",,0,0,0,2022-05-17 06:02:17
72281836,2,,71954288,0,,"<p>You can add a dynamic user based auth rule that would work for group chats as well and dynamically add the id of this in in the conversation users to the authors array:</p>&#xA;<pre><code>type Todo @model @auth(rules: [{ allow: owner, ownerField: &quot;authors&quot; }]) {&#xA;  content: String&#xA;  authors: [String]&#xA;}&#xA;</code></pre>&#xA;<p>As per documentation:</p>&#xA;<p><a href=""https://docs.amplify.aws/cli/graphql/authorization-rules/#per-user--owner-based-data-access"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/authorization-rules/#per-user--owner-based-data-access</a></p>&#xA;",4718413,,,,2022-05-17 23:49:29,"",,0,0,0,2022-05-17 23:49:29
72293909,2,,65313392,0,,"<p>There is no freedom when you have to supply all fields in an update or else they are set to NULL when using GraphQL.  There is no freedom when you have a table such as below:&#xA;TABLE1 ( ID NUMBER PK NOT NULL, FIRSTNAME VARCHAR2(20), LASTNAME VARCHAR2(20), COMPANY VARCHAR2(25), STATUS VARCHAR2(10) )</p>&#xA;<p>and in Oracle or any other database I could easily update the status of all records meeting conditions&#xA;UPDATE TABLE1&#xA;SET STATUS  = 'DONE'&#xA;WHERE COMPANY = 'XYZ CORP';</p>&#xA;<p>but in GraphQL I have to supply the ID in the update or get an error &quot;ID required...&quot; or having to include all the columns within the table&#xA;That is very inefficient.</p>&#xA;",19032838,,,,2022-05-18 17:58:05,"",,0,0,0,2022-05-18 17:58:05
72314277,1,73326917,,0,411,"<p>I'm using an amplify stack and need to perform some actions to my graphql api which has dynamodb behind it. The request in my lambda function returns an Unauthorized error: &quot;Not Authorized to access getSourceSync on type SourceSync&quot;, where getSourceSync is the gql query and SourceSync is the model name.</p>&#xA;<p>My schema.grapqhl for this particular model is set up as following. Note auth rule allow private provider iam:</p>&#xA;<pre><code>type SourceSync @model (subscriptions: { level: off }) @auth(rules: [&#xA;    {allow: private, provider: iam}&#xA;    {allow: groups, groups: [&quot;Admins&quot;], provider: userPools},&#xA;    {allow: groups, groups: [&quot;Users&quot;], operations: [create], provider: userPools},&#xA;    {allow: groups, groupsField: &quot;readGroups&quot;, operations: [create, read], provider: userPools},&#xA;    {allow: groups, groupsField: &quot;editGroups&quot;, provider: userPools}]) {&#xA;    id: ID! @primaryKey&#xA;    name: String&#xA;    settings_id: ID @index(name: &quot;bySettingsId&quot;, queryField: &quot;sourceSyncBySettingsId&quot;)&#xA;    settings: Settings @hasOne(fields: [&quot;settings_id&quot;])&#xA;    childLookup: String&#xA;    createdAt: AWSDateTime!&#xA;    updatedAt: AWSDateTime!&#xA;    _createdBy: String&#xA;    _lastChangedBy: String&#xA;    _localChanges: AWSJSON&#xA;    readGroups: [String]&#xA;    editGroups: [String]&#xA;}&#xA;</code></pre>&#xA;<p>My lambda function's role has the following inline policy attached to it. (Actual ID values have been omitted for security purposes on this post):</p>&#xA;<pre><code>{&#xA;    &quot;Version&quot;: &quot;2012-10-17&quot;,&#xA;    &quot;Statement&quot;: [&#xA;        {&#xA;            &quot;Action&quot;: [&#xA;                &quot;appsync:GraphQL&quot;&#xA;            ],&#xA;            &quot;Resource&quot;: [&#xA;                &quot;arn:aws:appsync:us-east-1:111myaccountID:apis/11mygraphqlapiID/*&quot;&#xA;            ],&#xA;            &quot;Effect&quot;: &quot;Allow&quot;&#xA;        },&#xA;        {&#xA;            &quot;Action&quot;: [&#xA;                &quot;appsync:GetType&quot;&#xA;            ],&#xA;            &quot;Resource&quot;: [&#xA;                &quot;*&quot;&#xA;            ],&#xA;            &quot;Effect&quot;: &quot;Allow&quot;&#xA;        }&#xA;    ]&#xA;}&#xA;</code></pre>&#xA;<p>And finally my lambda function is set up as follows with a simple query test:</p>&#xA;<pre><code>/* stuff */&#xA;&#xA;&quot;use strict&quot;;&#xA;const axios = require(&quot;axios&quot;);&#xA;const awsAppSync = require(&quot;aws-appsync&quot;).default;&#xA;const gql = require(&quot;graphql-tag&quot;);&#xA;require(&quot;cross-fetch/polyfill&quot;);&#xA;const { PassThrough } = require(&quot;stream&quot;);&#xA;const aws = require(&quot;aws-sdk&quot;);&#xA;&#xA;aws.config.update({&#xA;    region: process.env.AWS_REGION,&#xA;&#xA;});&#xA;&#xA;const appSync = new aws.AppSync();&#xA;&#xA;const graphqlClient = new awsAppSync({&#xA;    url: process.env.API_GRAPHQLAPIENDPOINTOUTPUT,&#xA;    region: process.env.AWS_REGION,&#xA;    auth: {&#xA;        type: &quot;AWS_IAM&quot;,&#xA;        credentials: aws.config.credentials,&#xA;    },&#xA;    disableOffline: true&#xA;});&#xA;&#xA;exports.handler = async (event, context) =&gt; {&#xA;    &#xA;    console.log('context :: '+JSON.stringify(context));&#xA;    &#xA;    console.log('aws config :: '+JSON.stringify(aws.config));&#xA;    &#xA;          const sourceSyncTypes = await appSync&#xA;          .getType({&#xA;            apiId: process.env.API_GRAPHQLAPIIDOUTPUT,&#xA;            format: &quot;JSON&quot;,&#xA;            typeName: &quot;SourceSync&quot;,&#xA;          })&#xA;          .promise();&#xA;          console.log('ss = '+JSON.stringify(sourceSyncTypes));&#xA;    &#xA;    try {&#xA;    const qs = gql`query GetSourceSync {&#xA;  getSourceSync(id: &quot;ov3&quot;) {&#xA;    id&#xA;    name&#xA;  }&#xA;}`;&#xA;    const res = await graphqlClient.query({query: qs, fetchPolicy: 'no-cache'});&#xA;    console.log(JSON.stringify(res));&#xA;    &#xA;    }&#xA;    catch(e) {&#xA;        console.log('ERR :: '+e);&#xA;        console.log(JSON.stringify(e));&#xA;    }&#xA;    &#xA;};&#xA;</code></pre>&#xA;",3212715,,,,2022-08-12 06:02:06,Unable to auth into AppSync GraphQL api from Lambda using IAM and AppSyncClient,<amazon-web-services><aws-lambda><aws-appsync><appsync-apollo-client>,1,2,0,2022-05-20 06:10:42
72343017,1,,,2,222,"<p>Graphql mutation operation fails in android but works in AppSync console</p>&#xA;<p>Error:</p>&#xA;<p>GraphQL mutate operation failed&#xA;E/amplify:flutter:api( 4899): NonRetryableException{message=OkHttp client request failed., cause=null, recoverySuggestion=Irrecoverable error}&#xA;E/amplify:flutter:api( 4899): at com.amplifyframework.api.aws.AppSyncGraphQLOperation$OkHttpCallback.onResponse(AppSyncGraphQLOperation.java:145)&#xA;E/amplify:flutter:api( 4899): at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:519)&#xA;E/amplify:flutter:api( 4899): at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)&#xA;E/amplify:flutter:api( 4899): at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)&#xA;E/amplify:flutter:api( 4899): at java.lang.Thread.run(Thread.java:920)&#xA;W/AtomicResult(mutate)( 4899): Attempted to send success value after initial reply&#xA;I/flutter ( 4899): ApiException(message: OkHttp client request failed., recoverySuggestion: Irrecoverable error, underlyingException: null)</p>&#xA;<p>code:</p>&#xA;<pre><code>&#xA;Product product = Product(&#xA;    name: 'Product1',&#xA;    description: &quot;description&quot;,&#xA;    price: 20,&#xA;    type: ProductType.fruit,&#xA;    postType: PostType.sell,&#xA;    userID: user.userId);&#xA;&#xA;try {&#xA;  final req = ModelMutations.create(product);&#xA;  var res = await Amplify.API.mutate(request: req).response;&#xA;  print(res.data);&#xA;} catch (e) {&#xA;  print(e.toString());&#xA;}&#xA;</code></pre>&#xA;<p>Schema:</p>&#xA;<pre><code>type User @model @auth(rules:[{allow:owner,operations:[create,update]}]){&#xA;id: ID!&#xA;name: String!&#xA;email: String!&#xA;product: [Product] @hasmany(indexName:&quot;byUser&quot;,fields:[&quot;id&quot;])&#xA;}&#xA;&#xA;type Product @model @auth(rules:[{allow:owner,operations:[create,delete]}]) {&#xA;id: ID!&#xA;name: String!&#xA;description: String!&#xA;price: Int!&#xA;type: ProductType! @Index(name:&quot;byProductType&quot;)&#xA;postType: PostType! @Index(name:&quot;byPostType&quot;)&#xA;userID: ID! @Index(name:&quot;byUser&quot;)&#xA;}&#xA;&#xA;enum PostType{&#xA;sell&#xA;buy&#xA;}&#xA;&#xA;enum ProductType{&#xA;vegetable&#xA;fruit&#xA;spice&#xA;other&#xA;} ```&#xA;</code></pre>&#xA;",9148670,,,,2022-05-23 03:35:32,"GraphQL mutate operation failed. NonRetryableException{message=OkHttp client request failed., cause=null, recoverySuggestion=Irrecoverable error}",<flutter><graphql><aws-amplify><aws-appsync>,0,1,0,2022-05-23 03:35:32
72346471,1,,,0,94,"<p>how can i make this query in the screenshot from the client side.&#xA;<a href=""https://i.stack.imgur.com/w17Qo.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/w17Qo.jpg"" alt=""this is the query i want to perform."" /></a></p>&#xA;<p>this is how i tried to do the query, but i don't know what to do next</p>&#xA;<pre><code>const CategoriesProducts = async ()=&gt;{&#xA;const fetchData = await API.graphql({&#xA;    query: listProductCategories, variables: {id: '1cb76030-0ee0-432a-b3ee-4087d33eaaf3'}&#xA;})&#xA;setCategoryProduct(fetchData.data.listProductCategories.items)}&#xA;</code></pre>&#xA;<p>this is my schema</p>&#xA;<p><a href=""https://i.stack.imgur.com/Do0UI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Do0UI.png"" alt=""enter image description here"" /></a></p>&#xA;<p>and this is the getProductCategories queries</p>&#xA;<p><a href=""https://i.stack.imgur.com/W65h5.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/W65h5.jpg"" alt=""enter image description here"" /></a></p>&#xA;<p>and this is the listProductCategories queries</p>&#xA;<p><a href=""https://i.stack.imgur.com/Nc1Yi.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Nc1Yi.jpg"" alt=""enter image description here"" /></a></p>&#xA;<p>i get the result when i make the query in te aws console, but i can't perform the same query in visual studio code</p>&#xA;<p>thank you for your support</p>&#xA;",9275381,,,,2022-05-23 11:24:47,how can i query one to many relationship query aws,<amazon-web-services><graphql><amazon-dynamodb><schema><aws-amplify>,1,0,0,2022-05-23 09:47:20
72355725,2,,64018456,0,,<p>Nothing but <strong>changing the region</strong> helped me after spending hours.</p>&#xA;,2873992,,,,2022-05-23 23:24:25,"",,0,0,0,2022-05-23 23:24:25
72358101,1,,,1,97,"<p>I have a existing graphql server provied by 3rd party. I also have my own backend running on EC2 to provide APIs.</p>&#xA;<p>I'm trying to build the appsync with <strong>aws-cdk</strong> for connecting to both 3rd party graphql and my backend instance also.&#xA;With the graphql server, appsync will act as proxy to forward queries only. My questions are:</p>&#xA;<ol>&#xA;<li><p>Do we have anyway to load remote schema and populate it in appsync along with its schema?</p>&#xA;</li>&#xA;<li><p>How can we forward the requests to another graphql server using aws-cdk? I'm trying something like this:</p>&#xA;</li>&#xA;</ol>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>  private get _requestMappingTemplate(): string {&#xA;    return `&#xA;        {&#xA;          ""version"": ""2018-05-29"",&#xA;          ""method"": ""GET"",&#xA;          ""resourcePath"": $util.toJson(""/graphql""),&#xA;          ""params"": {&#xA;            ""headers"": {&#xA;              ""Authorization"": ""Bearer $ctx.request.headers.Authorization""&#xA;            },&#xA;            ""body"": {&#xA;                ""query"": ""$util.escapeJavaScript($ctx.info.getSelectionSetGraphQL())""&#xA;            }&#xA;          }&#xA;        }`;&#xA;  }</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>But from the aws <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-context-reference.html"" rel=""nofollow noreferrer"">doc</a>, <strong>getSelectionSetGraphQL</strong> returns string representation of the selection set, formatted as GraphQL schema definition language (SDL). Although fragments aren't merged into the selection set</p>&#xA;<p>Is that possible to setup AppSync for forwarding request to another GraphQL servers? Any best practice to follow?</p>&#xA;",4185729,,,,2022-10-19 21:15:26,Appsync as Proxy to another Graphql server,<amazon-web-services><graphql><aws-appsync>,1,0,0,2022-05-24 06:26:31
72366449,2,,72225911,0,,"<p>Per <a href=""https://github.com/aws-samples/aws-cdk-examples/blob/master/typescript/appsync-graphql-dynamodb/index.ts"" rel=""nofollow noreferrer"">their example</a> and the code documentation (node_modules/aws-cdk-lib/aws-appsync/lib/appsync.generated.d.ts):</p>&#xA;<pre><code>/**&#xA; * The AWS Identity and Access Management service role ARN for the data source. The system assumes this role when accessing the data source.&#xA; *&#xA; * Required if `Type` is specified as `AWS_LAMBDA` , `AMAZON_DYNAMODB` , `AMAZON_ELASTICSEARCH` , or `AMAZON_OPENSEARCH_SERVICE` .&#xA; *&#xA; * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appsync-datasource.html#cfn-appsync-datasource-servicerolearn&#xA; */&#xA;readonly serviceRoleArn?: string;&#xA;</code></pre>&#xA;<p>you need to add a serviceRoleArn to your dataSource.<br />&#xA;For instance:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const lambdaRole = new Role(this, 'LambdaRole', {&#xA;    assumedBy: new ServicePrincipal('appsync.amazonaws.com'),&#xA;});&#xA;lambdaRole.addManagedPolicy(&#xA;    ManagedPolicy.fromAwsManagedPolicyName('AWSLambda_FullAccess'),&#xA;);&#xA;const dataSource = new CfnDataSource(this, 'TestDataSource', {&#xA;    apiId: api.attrApiId,&#xA;    name: 'TestDataSource',&#xA;    type: 'AWS_LAMBDA',&#xA;    lambdaConfig: {&#xA;        lambdaFunctionArn: testLambda.functionArn,&#xA;    },&#xA;    serviceRoleArn: lambdaRole.roleArn&#xA;});&#xA;</code></pre>&#xA;",12293650,,1131954,2022-05-26 04:55:11,2022-05-26 04:55:11,"",,0,0,0,2022-05-24 16:34:58
72381212,1,,,0,109,"<p><strong>The problem</strong>:&#xA;Unlike a relation db, Dynamo only provides a unique constraint on the primary key. I have a situation where I would like to ensure that in the case multiple insertions (create mutation) should also check for uniqueness in 2 other fields in this model before executing. My knowledge of graphql &amp; appsync is not good enough to implement something custom such as this..</p>&#xA;<p>I found an article that explains the way to do this is through something called <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/transactions.html"" rel=""nofollow noreferrer"">DynamoDB transactions</a>, where essentially I can bundle multiple queries/mutations and ensure all pass or all fail, however I am not clear how I would implement this to be executed at the graphql/appsync level for my case when following this <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-dynamodb-transact.html"" rel=""nofollow noreferrer"">article</a>.</p>&#xA;<p>Essentially if I have this schema model (created via amplify cli)</p>&#xA;<pre><code>type Post @model {&#xA;  id: ID! @primaryKey&#xA;  type: String&#xA;  reference_id: String&#xA;}&#xA;</code></pre>&#xA;<p>So per the first article, how do I implement a dynamodb transaction resolver that does the following 2 actions at same time, and fails the entire transaction if one of these fails?</p>&#xA;<ol>&#xA;<li>Insert into Post a record with id value &quot;reference_id#myValue&quot;</li>&#xA;<li>Insert into Post a record with id value of uuid &quot;141fa913241-asdfasdf&quot;, reference_id of &quot;myValue&quot;</li>&#xA;</ol>&#xA;",3212715,,16895640,2022-07-05 05:38:02,2022-07-05 05:38:02,How to implement a dynamoDB transaction (mutli query all pass or all fail TOGETHER) in appsync graphql?,<amazon-web-services><graphql><amazon-dynamodb><aws-appsync><multi-query>,0,0,0,2022-05-25 16:21:38
72384295,1,,,1,140,"<p>I have an Appsync API generated by Amplify from a basic schema. On the SocialMediaDocument model, a ctr field is nested within a stats field. I want to build a Query that provides a list of SocialMediaDocument sorted by ctr. Is this possible ? Or should I sotre the ctr on my SocialMediaDocument ?</p>&#xA;<pre><code>type SocialMediaDocument&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner, operations: [create, read] }&#xA;      { allow: groups, groupsField: &quot;organizationGroupName&quot; }&#xA;      { allow: groups, groups: [&quot;Admin&quot;], operations: [create, read, update, delete] }&#xA;    ]&#xA;  )&#xA;  @key(&#xA;    name: &quot;socialMediaDocumentsByCustomerID&quot;&#xA;    fields: [&quot;customerID&quot;, &quot;createdAt&quot;]&#xA;    queryField: &quot;socialMediaDocumentsByCustomerID&quot;&#xA;  )&#xA;  @key(&#xA;    name: &quot;socialMediaDocumentsByRequestStatus&quot;&#xA;    fields: [&quot;requestStatus&quot;]&#xA;    queryField: &quot;sociaMediaDocumentsByRequestStatus&quot;&#xA;  )&#xA;  @key(&#xA;    name: &quot;socialMediaDocumentsByOrganizationID&quot;&#xA;    fields: [&quot;organizationID&quot;, &quot;createdAt&quot;]&#xA;    queryField: &quot;socialMediaDocumentsByOrganizationID&quot;&#xA;  ) {&#xA;  id: ID!&#xA;  stats: [SocialMediaDocumentStats!]&#xA;}&#xA;&#xA;type SocialMediaDocumentStats {&#xA;  date: AWSDate&#xA;  ctr: Float!&#xA;  engagementRate: Float!&#xA;  postClicksLifetime: Float!&#xA;  postEngagedUsersLifetime: Float!&#xA;  postImpressionsLifetime: Float!&#xA;}&#xA;</code></pre>&#xA;",7503322,,,,2022-05-25 21:18:46,Appsync & GraphQL: how to sort a list by nested value,<graphql><aws-amplify><aws-appsync>,0,0,0,2022-05-25 21:18:46
72400921,1,,,2,362,"<p>AWS makes a case to create a lambda resolver for AppSync that will perform different operations. Since a single query may result in calls to multiple operations, AppSync will invoke the lambda resolver multiple times. I think each invocation will contribute to the overall latency for the request. How does this compare to serverless implementation of Apollo or Express GraphQL Server (GraphQL Server and Resolvers running inside a single lambda function).</p>&#xA;<p>Ref. <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/tutorial-lambda-resolvers.html</a></p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>exports.handler = (event, context, callback) =&gt; {&#xA;    switch(event.field) {&#xA;        case ""operation_1"": {/* ... */}&#xA;        case ""operation_2"": {/* ... */}&#xA;        case ""operation_3"": {/* ... */}&#xA;        ...&#xA;        default: {/* ... */}&#xA;    }&#xA;};</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",10789645,,10789645,2022-05-27 05:45:53,2022-05-27 05:45:53,AppSync vs Apollo GraphQL Performance,<lambda><graphql><apollo><aws-appsync><resolver>,0,0,0,2022-05-27 05:40:21
72402070,1,72403949,,0,512,"<p>I'm playing with the AWS Amplify GraphQL console and I've noticed that updating a boolean field is not working and I'm not sure exactly why. This is also not working from my React Native app. Basically, what I'm trying to do, is at onPress, change the isOnline to true or false (see full code below):</p>&#xA;<pre><code>isOnline: !car.isOnline&#xA;</code></pre>&#xA;<p><strong>schema.graphql</strong></p>&#xA;<pre><code>type Car @model &#xA;@key(name: &quot;byUser&quot;, fields: [&quot;userId&quot;]) &#xA;{&#xA;  id: ID!&#xA;  type: String!&#xA;  latitude: Float&#xA;  longitude: Float&#xA;  heading: Float&#xA;&#xA;  plate: String&#xA;&#xA;  isOnline: Boolean&#xA;  isActive: Boolean&#xA;&#xA;  orders: [Order] @connection(keyName: &quot;byCar&quot;, fields: [&quot;id&quot;])&#xA;&#xA;  userId: ID!&#xA;  user: User @connection(fields: [&quot;userId&quot;])&#xA;}&#xA;</code></pre>&#xA;<p><strong>mutations.js</strong></p>&#xA;<pre><code>export const updateCar = /* GraphQL */ `&#xA;  mutation UpdateCar(&#xA;    $input: UpdateCarInput!&#xA;    $condition: ModelCarConditionInput&#xA;  ) {&#xA;    updateCar(input: $input, condition: $condition) {&#xA;      id&#xA;      type&#xA;      latitude&#xA;      longitude&#xA;      heading&#xA;      plate&#xA;      isOnline&#xA;      isActive&#xA;      userId&#xA;      _version&#xA;      _deleted&#xA;      _lastChangedAt&#xA;      createdAt&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p><strong>index.js</strong></p>&#xA;<pre><code>try {&#xA;  const userData = await Auth.currentAuthenticatedUser();&#xA;            &#xA;  const input = {&#xA;    id: userData.attributes.sub,&#xA;    isOnline: !car.isOnline,&#xA;  }&#xA;&#xA;  const updatedCarData = await API.graphql(&#xA;     graphqlOperation(&#xA;        updateCar, { &#xA;          input &#xA;        })&#xA;  )&#xA;&#xA;  console.log(&quot;Updated car: &quot;, updatedCarData.data.updateCar)&#xA;            &#xA;  setCar(updatedCarData.data.updateCar);&#xA; } catch (e) {&#xA;   console.error(e);&#xA; }&#xA;</code></pre>&#xA;<p>From the app, every time I get the isOnline field set to true, even if I tried setting it to false instead of !car.isOnline.&#xA;I also tried creating a new field called isActive which was null initially, I created a mutation on AWS AppSync GraphQL console and was able to set it to false, but then, when trying to set it to true, updating is not working, it's always returning false.</p>&#xA;<p>As a note, updating the other fields, for example String fields, is working.</p>&#xA;<p>Can you please guide me into this issue?</p>&#xA;",13879188,,13879188,2022-05-27 07:57:44,2022-05-27 10:22:57,AWS Amplify GraphQL mutation is not updating a boolean field,<amazon-web-services><react-native><graphql><amazon-dynamodb><aws-amplify>,1,0,0,2022-05-27 07:41:08
72403949,2,,72402070,1,,"<p>I was able to solve this issue by:</p>&#xA;<p>Running the below command:</p>&#xA;<pre><code>amplify update api&#xA;</code></pre>&#xA;<p>Select <strong>GraphQL</strong>, then <strong>Disable Conflict Detection</strong></p>&#xA;<p>Last, but not least, run:</p>&#xA;<pre><code>amplify push&#xA;</code></pre>&#xA;<p>I haven't found any explanation for this on the Amplify Docs, but if you're running into this issue, make sure to follow the above steps.</p>&#xA;",13879188,,,,2022-05-27 10:22:57,"",,0,2,0,2022-05-27 10:22:57
72418070,1,74235681,,0,427,"<p>I'm working with <strong>Amplify</strong>, I added the authentication to my application and my graphQL schema is with rule private, all things work good in my local, each graphQl api called, It contains the <em><strong>access token</strong></em> and appSync accept my request.&#xA;But when I deploy my App, I get an error because all my graphQl request still with <strong>api-key</strong> not with access token.</p>&#xA;<p><strong>my schema.graphQl</strong>&#xA;<a href=""https://i.stack.imgur.com/g2jjy.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/g2jjy.png"" alt=""enter image description here"" /></a></p>&#xA;<p><strong>My AWSAppSyncClient</strong>&#xA;<a href=""https://i.stack.imgur.com/QLCOS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QLCOS.png"" alt=""enter image description here"" /></a></p>&#xA;<p><em><strong>In the console I use this configuration</strong></em>:&#xA;<a href=""https://i.stack.imgur.com/lHHpW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lHHpW.png"" alt=""enter image description here"" /></a></p>&#xA;<p><em><strong>In my local :</strong></em> all thins work good after authentication.</p>&#xA;<p><a href=""https://i.stack.imgur.com/PsAWR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PsAWR.png"" alt=""enter image description here"" /></a></p>&#xA;<p><em><strong>In production :</strong></em> graphQl still with api-key after authentication</p>&#xA;<p><a href=""https://i.stack.imgur.com/3krNH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3krNH.png"" alt=""enter image description here"" /></a></p>&#xA;",12525162,,12525162,2022-05-28 22:56:44,2022-10-28 12:49:17,How to change AWS Amplify Appsync default authorization mode form API KEY to cognito user pool?,<graphql><amazon-cognito><aws-amplify><aws-appsync>,1,0,0,2022-05-28 18:00:00
72424345,2,,72407126,0,,"<p>I added tables manually and added some rows after creating a Heroku PostgreSQL database, linking it to my hasura app, and putting this line in <code>.env</code>:</p>&#xA;<pre><code>GRAPHQL_URI=&quot;https://definite-XXX-XX.hasura.app/v1/graphql&quot;&#xA;</code></pre>&#xA;",18372785,,584676,2022-05-29 18:59:32,2022-05-29 18:59:32,"",,0,0,0,2022-05-29 14:04:59
72428586,2,,70539062,1,,"<p>I found the answer to this problem.</p>&#xA;<p>PutItem returns a successful HTTP 200 response when you write a record to the table. However, when I try to fetch an item from a read request, Amazon DynamoDB doesn't return the updated record.</p>&#xA;<p>This usually happens when an item is finally accessed using a Eventually Consistent Reads immediately after writing it to the table.</p>&#xA;<p>getItem basically gives you eventually consistent reads.&#xA;To get the latest data as soon as the write request succeeds, set the ConsistentRead parameter to true. This allows for strong consistent reads.</p>&#xA;<p>ex)&#xA;type Query {&#xA;getSites(filter: SiteFilter, ConsistentRead: Boolean): Sites&#xA;}</p>&#xA;<p>await API.graphql(graphqlOperation(getSites,{&#xA;filter: SiteFilter, ConsistentRead: true&#xA;})&#xA;)</p>&#xA;",17238656,,17238656,2022-07-05 09:11:17,2022-07-05 09:11:17,"",,0,0,0,2022-05-30 02:25:45
72429330,1,,,1,156,"<p>I'm currently having issues deleting an object that a user owns even when I open up all of the permissions. I am able to create the objects just fine but attempting to delete the object results in an error saying <code>&quot;Not Authorized to access deleteJobPost on type Mutation&quot;</code>.</p>&#xA;<p>Here's my model:</p>&#xA;<pre><code>type JobPost&#xA;@model&#xA;@auth(&#xA;    rules: [&#xA;        { allow: public, operations: [read] }&#xA;        # { allow: private, operations: [read, create], provider: userPools }&#xA;        { allow: owner, operations: [create, read, update, delete] }&#xA;    ]&#xA;) {&#xA;id: ID!&#xA;companyName: String!&#xA;positionTitle: String! }&#xA;</code></pre>&#xA;<p>Here's the code that's doing the delete operation:</p>&#xA;<pre><code>const deleteJobHandler = useCallback(&#xA;    async (job: JobPost) =&gt; {&#xA;        console.log(await Auth.currentSession());&#xA;        try {&#xA;            await API.graphql(graphqlOperation(deleteJobPost, { input: { id: job.id }}));&#xA;        } catch (ex: any) {&#xA;            console.log(ex);&#xA;        }&#xA;    },&#xA;    [jobs]&#xA;);&#xA;</code></pre>&#xA;<p>Relevant backend config:</p>&#xA;<pre><code>&quot;output&quot;: {&#xA;    &quot;authConfig&quot;: {&#xA;      &quot;defaultAuthentication&quot;: {&#xA;        &quot;authenticationType&quot;: &quot;AMAZON_COGNITO_USER_POOLS&quot;,&#xA;        &quot;userPoolConfig&quot;: {&#xA;          &quot;userPoolId&quot;: &quot;&lt;redacted&gt;&quot;&#xA;        }&#xA;      },&#xA;      &quot;additionalAuthenticationProviders&quot;: [&#xA;        {&#xA;          &quot;authenticationType&quot;: &quot;API_KEY&quot;,&#xA;          &quot;apiKeyConfig&quot;: {&#xA;            &quot;apiKeyExpirationDays&quot;: 7,&#xA;            &quot;apiKeyExpirationDate&quot;: &quot;2022-06-05T16:51:50.439Z&quot;,&#xA;            &quot;description&quot;: &quot;app api key&quot;&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>I have a valid Cognito session and also see the session token being used as the authorization header within the delete request. I've read many guides that are doing the exact same thing and this should be fairly trivial but i'm not having much success. I have ran <code>amplify codegen model</code> after every backend update so I know my mutation/queries are all up to date. Anyone else run into something similar or see what i'm doing wrong here?</p>&#xA;<p><a href=""https://i.stack.imgur.com/qQ3ed.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qQ3ed.png"" alt=""enter image description here"" /></a></p>&#xA;",5199303,,5199303,2022-05-30 05:28:16,2022-05-30 05:28:16,AWS Amplify: Unable to delete object,<typescript><graphql><amazon-cognito><amplify>,0,1,0,2022-05-30 04:59:19
72431743,2,,72390243,0,,"<p>•   I would suggest you to please <code>enable the setting for bypasscache:true by modifying the code for amplify</code> as below: -</p>&#xA;<pre><code> Auth.currentAuthenticatedUser({ bypassCache: true}).then(&#xA; (user: CognitoUser) =&gt; this.setUser(user),&#xA;  _err =&gt; {&#xA; console.error(_err)&#xA; this._authState.next(initialAuthState)&#xA; }&#xA;</code></pre>&#xA;<p>As per above, the first instruction in <strong>setUser</strong> might be <strong>localstorage.clear()</strong> which got removed by the above command post which you should be able to get user info with Microsoft authentication.</p>&#xA;<p>•   Once the above has been done successfully, then you can surely get the <code>user info as follows which can further be passed on to the graphQI APIs</code>: -</p>&#xA;<pre><code>function getUser() {&#xA;return Auth.currentAuthenticatedUser()&#xA;  .then(userData =&gt; userData)&#xA;  .catch(() =&gt; console.log('Not signed in'));&#xA; }&#xA;&#xA;function getSessionInfo() {&#xA;Auth.currentSession().then(res=&gt;{&#xA;  debugger&#xA;  let access_token = res.getAccessToken()&#xA;  let id_token = res.getIdToken()&#xA;  let refresh_token = res.getRefreshToken();&#xA;&#xA;  setAccessToken(access_token);&#xA;  setIdToken(id_token);&#xA;  })&#xA;  }&#xA;</code></pre>&#xA;<p>For more information regarding this, kindly refer to the documentation link below for amplify: -</p>&#xA;<p><a href=""https://docs.amplify.aws/lib/auth/manageusers/q/platform/js/#retrieve-current-authenticated-user"" rel=""nofollow noreferrer"">https://docs.amplify.aws/lib/auth/manageusers/q/platform/js/#retrieve-current-authenticated-user</a></p>&#xA;<p><a href=""https://github.com/aws-amplify/amplify-js/issues/5167"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-js/issues/5167</a></p>&#xA;",16526895,,16526895,2022-06-02 19:11:06,2022-06-02 19:11:06,"",,0,0,0,2022-05-30 09:01:19
72437763,2,,54540045,0,,"<p>I've the same issue and fix it by updating the admin setting for checkout, as the screenshot.&#xA;The reason is that the customer accounts is set by default with &quot;Don't use accounts&quot;.  You should change it to &quot;Accounta are optional&quot; or &quot;Accounts are required.&quot;</p>&#xA;<p>offical link: <a href=""https://help.shopify.com/en/manual/checkout-settings/customer-accounts"" rel=""nofollow noreferrer"">https://help.shopify.com/en/manual/checkout-settings/customer-accounts</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/7v0bE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7v0bE.png"" alt=""enter image description here"" /></a></p>&#xA;",11717910,,,,2022-05-30 16:57:05,"",,0,0,0,2022-05-30 16:57:05
72459876,2,,64140993,0,,"<p>The problem is that the auth mode for the model does not match the configuration.</p>&#xA;<p>If you have a model which is not &quot;public&quot; (available to anyone with the API key) then you need to use the correct mode to authorize the requests.</p>&#xA;<p>If you're using amplify Authorization module you're probably relaying in <code>aws_cognito_user_pools</code>.&#xA;In that case you should specify &quot;Cognito User Pool&quot; as default authorization method.</p>&#xA;<p>To change the API Authorization default mode you need to go to the data modeling tool of aws amplify and from there (below the title) there's the link to &quot;Manage API authorization mode &amp; keys&quot;.&#xA;<a href=""https://i.stack.imgur.com/FLa5l.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FLa5l.png"" alt=""Manage API authorization mode &amp; keys"" /></a></p>&#xA;<p>When using the &quot;Cognito User Pool&quot; as default authorization method you can use the API as usual for private methods correctly.&#xA;<a href=""https://i.stack.imgur.com/O4dJG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/O4dJG.png"" alt=""enter image description here"" /></a>&#xA;This also fixed the subscriptions for me.</p>&#xA;",4995249,,4995249,2022-06-01 10:02:48,2022-06-01 10:02:48,"",,0,0,0,2022-06-01 09:57:04
72478601,2,,72467259,1,,"<p>Hasura supports columns comparison operators only when setting permissions.  To accomplish what you need you have to create a view.</p>&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE OR REPLACE VIEW users_books_by_age AS &#xA;  SELECT * from users_books&#xA;</code></pre>&#xA;<p>Set the relationships between the view, user and books table. In the Hasura view permission builder filter the age comparing the columns. Something like</p>&#xA;<pre><code>{&#xA;  user: {&#xA;    age: {&#xA;     _ceq: recommended_age&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This way you can run your query like:</p>&#xA;<pre><code>query getUserBooks($uuid: uuid!) {&#xA;  users_by_pk(uuid: $uuid) {&#xA;    uuid&#xA;    name&#xA;    age&#xA;    users_books_by_age {&#xA;       book_id&#xA;       recommended_age&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Another solution would be to create a computed field. Something like:</p>&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE FUNCTION author_full_name(user_row user)&#xA;RETURNS SETOF users_books AS $$&#xA;  SELECT * FROM users_books where recommended_age = user_row.age&#xA;$$ LANGUAGE sql STABLE;&#xA;</code></pre>&#xA;<p>I hope that helps.</p>&#xA;",2297718,,2297718,2022-06-02 15:28:54,2022-06-02 15:28:54,"",,0,0,0,2022-06-02 15:20:56
72480032,1,,,0,18,<p>I'm a beginner at AWS Amplify and GraphQL.<br />&#xA;I came here because I couldn't find it no matter how hard I looked.</p>&#xA;<p>My GraphQL code is as follows:</p>&#xA;<pre><code>type User @model @auth(rules: [{ allow: owner }]) {&#xA;  id: ID!&#xA;  assets: [Asset]! @hasMany&#xA;}&#xA;</code></pre>&#xA;<p>I don't want 'Asset' model to be duplicated.<br />&#xA;So I thought to make 'assets' as a set (non-duplicated list).<br />&#xA;But is that possible to implement?</p>&#xA;,3331802,,,,2022-06-02 17:20:26,Can I implement fields as a set (non-duplicated list) in AWS Amplify Datastore?,<amazon-web-services><graphql><datastore><amplify>,0,0,0,2022-06-02 17:20:26
72481954,2,,54976589,1,,"<p>If you're still having trouble, make sure to double check that the resolver is mapped to a data source in AppSync. Mine wasn't attached for some reason, and resulted in the same error.</p>&#xA;",7748707,,,,2022-06-02 20:24:10,"",,0,0,0,2022-06-02 20:24:10
72518193,1,,,0,203,"<p>I am trying to use python to automation common <a href=""https://monday.com"" rel=""nofollow noreferrer"">Monday</a> tasks. I am able to create an item in the board but the column (type=tag) is not updating.</p>&#xA;<p>I used this tutorial:&#xA;<a href=""https://support.monday.com/hc/en-us/articles/360013483119-API-Quickstart-Tutorial-Python#"" rel=""nofollow noreferrer"">https://support.monday.com/hc/en-us/articles/360013483119-API-Quickstart-Tutorial-Python#</a></p>&#xA;<p>Here is my graphql code that I am executing:</p>&#xA;<pre><code>query = 'mutation ($device: String!, $columnVals: JSON!) { create_item (board_id:&lt;myboardid&gt;, item_name:$device, column_values:$columnVals) { id } }' &#xA;vars = {'device': device,&#xA;        'columnVals': json.dumps({&#xA;            'cloud_name6': {'text': cloudname}  # this is where i want to add a tag. cloud_name6 is id of the column.&#xA;        })&#xA;        } &#xA;data = {'query' : query, 'variables' : vars}&#xA;&#xA;r = requests.post(url=apiUrl, json=data, headers=headers) print(r.json())&#xA;</code></pre>&#xA;<p>I have tried changing id to title as key in the Json string but no luck. I fetched the existing item and tried to add exact json string but still no luck. I also tried below json data without any luck</p>&#xA;<pre><code>'columnVals': json.dumps({&#xA;            'cloud_name6': cloudname&#xA;        })&#xA;</code></pre>&#xA;<p>Any idea what's wrong with the query?</p>&#xA;",3497293,,3497293,2022-07-05 15:51:30,2022-09-21 15:35:20,Not able to put tag column value on monday item,<api><automation><graphql><monday.com>,1,0,0,2022-06-06 13:10:13
72522361,2,,68722305,0,,"<p>I had the same problem. Changing the <code>authMode</code> to <code>'API_KEY'</code> enabled it to work for me. See example below:</p>&#xA;<pre><code>export async function getStaticPaths(context) {&#xA;  const SSR = withSSRContext();&#xA;  const { data } = await SSR.API.graphql({ &#xA;    query: listArticles,&#xA;    authMode: 'API_KEY' &#xA;  });&#xA;  const paths = data.listArticles.items.map((article) =&gt; ({&#xA;    params: { id: article.id },&#xA;  }));&#xA;  &#xA;  return {&#xA;    paths,&#xA;    fallback: true,&#xA;  };&#xA;}&#xA;  &#xA;export async function getStaticProps({ params }) {&#xA;  const SSR = withSSRContext();&#xA;  const { data } = await SSR.API.graphql({&#xA;    query: getArticle,&#xA;    variables: {&#xA;      id: params.id,&#xA;    },&#xA;    authMode: 'API_KEY' &#xA;  });&#xA;  &#xA;  return {&#xA;    props: { &#xA;      article: data.getArticle&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",19284934,,10871073,2022-06-12 22:36:47,2022-06-12 22:36:47,"",,0,0,0,2022-06-06 19:02:14
72523763,1,,,2,163,"<p>In my <code>schema.graphql</code> file I have the following:</p>&#xA;<pre><code>type Floorplan @model @auth(rules: [&#xA;        { allow: private, operations: [read], provider: userPools },&#xA;        { allow: owner, provider: userPools }&#xA;    ]) @aws_cognito_user_pools {&#xA;    id: ID! @primaryKey&#xA;    name: String!&#xA;    bedrooms: Int!&#xA;}&#xA;&#xA;input FloorplanInput {&#xA;    id: ID!&#xA;    name: String!&#xA;    bedrooms: Int!&#xA;}&#xA;&#xA;type Mutation {&#xA;    floorplanLambda(input: FloorplanInput): Floorplan &#xA;    @function(name: &quot;floorplanLambda-${env}&quot;)&#xA;    @aws_cognito_user_pools&#xA;}&#xA;</code></pre>&#xA;<p>I created the lambda function to perform custom validation before updating.&#xA;The problem is that any authenticated user can update other users' floor plans. I thought adding <code>@aws_cognito_user_pools</code> would resolve this, but it doesn't.</p>&#xA;<p><strong>Question:</strong> What do I need to add to lock down the <code>floorplanLambda</code> function so that it can only be successfully called by the owner of the Floorplan model?</p>&#xA;<p>When calling <code>floorplanLambda</code> I receive the error: &quot;Not Authorized to access floorplanLambda on type Floorplan&quot;.  I'm making the call with authMode <code>AMAZON_COGNITO_USER_POOLS</code>.</p>&#xA;<p>For some more context, I followed this tutorial to create the custom mutation lambda function: <a href=""https://www.theclouddeveloper.io/use-lambda-resolvers-in-your-graph-ql-api-with-aws-amplify"" rel=""nofollow noreferrer"">https://www.theclouddeveloper.io/use-lambda-resolvers-in-your-graph-ql-api-with-aws-amplify</a></p>&#xA;",1956540,,1956540,2022-06-09 00:07:42,2022-06-16 21:09:33,Restrict lambda resolver to owner for GraphQL API using Amplify,<graphql><aws-amplify>,1,0,0,2022-06-06 21:44:18
72532147,2,,72528303,0,,"<p>Yes, you can use AWS AppSync as a GraphQL server on AWS. AWS AppSync is an AWS service for creating your fully managed GraphQL API layers. Since, it is a managed service, which means you don't need to worry about provisioning a server for your backend.</p>&#xA;<p>I would suggest you to use Serverless framework to manage and deploy your AppSync application. Here is the link for you to get started and will probably give you a good idea how to use Serverless for AppSync applications.</p>&#xA;<p><a href=""https://www.serverless.com/guides/aws-appsync"" rel=""nofollow noreferrer"">https://www.serverless.com/guides/aws-appsync</a></p>&#xA;",1819065,,,,2022-06-07 13:33:36,"",,0,1,0,2022-06-07 13:33:36
72538105,2,,72247125,1,,"<p>Without making the filter a generic argument on the client side, There are two server-side options for filter operator customization in the <code>postgraphile-plugin-connection-filter</code> (v2.3.0) plugin. Both require you to create an additional plugin that registers a build <a href=""https://www.graphile.org/graphile-build/hooks"" rel=""nofollow noreferrer"">hook</a>.</p>&#xA;<h2>Option 1: Use <code>addConnectionFilterOperator</code></h2>&#xA;<p><code>addConnectionFilterOperator</code> is a build extension function added by <code>ConnectionFilterPlugin</code> that is meant to allow you to add a new operators for custom functionality.</p>&#xA;<h2>Option 2: Modify Connection Filter Operators Directly</h2>&#xA;<p>It's also possible to directly change the SQL output of a given operator by modifying the <code>OperatorSpec</code> values for each GraphQLType. These specs can be found in the following <a href=""https://github.com/graphile-contrib/postgraphile-plugin-connection-filter/blob/v2.3.0/src/PgConnectionArgFilterOperatorsPlugin.ts#L574-L579"" rel=""nofollow noreferrer"">fields</a> on the <code>Build</code> object:</p>&#xA;<pre><code>connectionFilterArrayOperators,&#xA;connectionFilterEnumOperators,&#xA;connectionFilterRangeOperators,&#xA;connectionFilterScalarOperators&#xA;</code></pre>&#xA;<p>Below is an example of a combined Plugin implementation for Options 1 and 2 that omit SQL generation when the argument value array for the operator is empty - effectively nullifying the operator and resulting in full data returns. This implementation allows for easy switching between modifying the <code>in</code> operators directly and adding new <code>expansiveIn</code> operators to each connection filter's scalar fields.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import type { Build } from &quot;postgraphile&quot;;&#xA;import type { Plugin, Options } from &quot;graphile-build&quot;;&#xA;import type { AddConnectionFilterOperator } from &quot;postgraphile-plugin-connection-filter/dist/PgConnectionArgFilterPlugin&quot;;&#xA;import type { PgType, SQL } from &quot;graphile-build-pg&quot;;&#xA;import type { GraphQLInputType } from &quot;graphql&quot;;&#xA;import type { OperatorSpec } from &quot;postgraphile-plugin-connection-filter/dist/PgConnectionArgFilterOperatorsPlugin&quot;;&#xA;&#xA;export interface InOperatorEmptyArrayCustomizationPluginBuildOpts {&#xA;  inOperatorEmptyArrayCustomizationPlugin?: {&#xA;    /**&#xA;     * Add new &quot;expansiveIn&quot; operators with custom empty array instead of&#xA;     * modifying existing &quot;in&quot; operators&#xA;     */&#xA;    addNewOperator?: boolean;&#xA;  };&#xA;}&#xA;&#xA;/**&#xA; * Implements custom empty array handling either by registering a new &quot;expansiveIn&quot;&#xA; * operator for each connection filter or by modifying the existing &quot;operators&quot;.&#xA; * This plugin must be appended AFTER postgraphile-plugin-connection-filter&#xA; * as it depends on its build extensions.&#xA; */&#xA;const InOperatorEmptyArrayCustomizationPlugin: Plugin = (builder, options) =&gt; {&#xA;  const { inOperatorEmptyArrayCustomizationPlugin } = options as Options &amp;&#xA;    InOperatorEmptyArrayCustomizationPluginBuildOpts;&#xA;&#xA;  const addNewOperator =&#xA;    inOperatorEmptyArrayCustomizationPlugin?.addNewOperator === true;&#xA;&#xA;  // create a build hook to access ConnectionFilterPlugin build extensions.&#xA;  builder.hook(&quot;build&quot;, (build) =&gt; {&#xA;    const {&#xA;      pgSql: sql,&#xA;      graphql: { GraphQLList, GraphQLNonNull },&#xA;&#xA;      // this function is added as a build extension by the ConnectionFilterPlugin&#xA;      // and allows for the addition of custom filter operators.&#xA;      addConnectionFilterOperator,&#xA;      gql2pg,&#xA;&#xA;      // this contains all existing ConnectionFilterPlugin scalar operators&#xA;      // by GraphQL type&#xA;      connectionFilterScalarOperators,&#xA;    } = build as Build &amp; {&#xA;      addConnectionFilterOperator: AddConnectionFilterOperator;&#xA;      connectionFilterScalarOperators: Record&lt;&#xA;        string,&#xA;        Record&lt;string, OperatorSpec&gt;&#xA;      &gt;;&#xA;    };&#xA;&#xA;    // Generate &quot;in&quot; SQL fragment from argument input values if values are&#xA;    // present in the array. Otherwise, return null.&#xA;    const resolveListSqlValue = (&#xA;      input: unknown,&#xA;      pgType: PgType,&#xA;      pgTypeModifier: number | null,&#xA;      resolveListItemSqlValue: (&#xA;        elem: unknown,&#xA;        pgType: PgType,&#xA;        pgTypeModifier: number | null&#xA;      ) =&gt; unknown&#xA;    ) =&gt;&#xA;      (input as unknown[]).length === 0&#xA;        ? null&#xA;        : sql.query`(${sql.join(&#xA;            (input as unknown[]).map((i) =&gt;&#xA;              resolveListItemSqlValue&#xA;                ? resolveListItemSqlValue(i, pgType, pgTypeModifier)&#xA;                : gql2pg(i, pgType, pgTypeModifier)&#xA;            ),&#xA;            &quot;,&quot;&#xA;          )})`;&#xA;&#xA;    // checks whether value is present before adding the sql filter fragment.&#xA;    const resolve = (i: SQL, v: SQL) =&gt;&#xA;      v != null ? sql.fragment`${i} IN ${v}` : null;&#xA;&#xA;    // Find all the scalar GraphQLTypes that have an &quot;in&quot; operator.&#xA;    const typesWithScalarInOperators = Object.entries(&#xA;      connectionFilterScalarOperators&#xA;    )&#xA;      .filter(([, operations]) =&gt; operations.in)&#xA;      .map(([typeName]) =&gt; typeName);&#xA;&#xA;    // modify existing &quot;in&quot; operators for every scalar type.&#xA;    if (!addNewOperator) {&#xA;      // The graphile build engine will emit a warning if you create&#xA;      // a new build object using the standard javascript mechanisms.&#xA;      // It will also throw an error if the existing&#xA;      // connectionFilterScalarOperations field is replaced in the extension&#xA;      // object...&#xA;      const extendedBuild = build.extend(build, {});&#xA;&#xA;      // ...so we merge in the new operators in a separate step.&#xA;      typesWithScalarInOperators.forEach((typeName) =&gt; {&#xA;        extendedBuild.connectionFilterScalarOperators[typeName].in = {&#xA;          // see https://github.com/graphile-contrib/postgraphile-plugin-connection-filter/blob/v2.3.0/src/PgConnectionArgFilterOperatorsPlugin.ts#L80-L85&#xA;          // for existing &quot;in&quot; operator configuration&#xA;          ...extendedBuild.connectionFilterScalarOperators[typeName].in,&#xA;          resolveSqlValue: resolveListSqlValue,&#xA;          resolve,&#xA;        };&#xA;      });&#xA;&#xA;      return extendedBuild;&#xA;    }&#xA;&#xA;    // Otherwise add a new operator called &quot;inExpansive&quot; that implements the custom&#xA;    // empty array argument handling.&#xA;    // see https://github.com/graphile-contrib/postgraphile-plugin-connection-filter/blob/v2.3.0/__tests__/customOperatorsPlugin.ts&#xA;    // for `addConnectionFilterOperator` usage examples.&#xA;    addConnectionFilterOperator(&#xA;      // add the new operator to any type that has an &quot;in&quot; operator.&#xA;      typesWithScalarInOperators,&#xA;      &quot;inExpansive&quot;,&#xA;      &quot;Included in the specified list -unless list is empty in which case this operator is not applied.&quot;,&#xA;      // list of non-null element type&#xA;      (fieldInputType: GraphQLInputType) =&gt;&#xA;        new GraphQLList(new GraphQLNonNull(fieldInputType)),&#xA;      resolve,&#xA;      {&#xA;        resolveSqlValue: resolveListSqlValue,&#xA;      }&#xA;    );&#xA;&#xA;    return build;&#xA;  });&#xA;};&#xA;&#xA;export default InOperatorEmptyArrayCustomizationPlugin;&#xA;</code></pre>&#xA;<p>Append plugin after <code>ConnectionFilterPlugin</code> in the Postgraphile middleware options:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// ...&#xA;appendPlugins: [&#xA;  // ..&#xA;  ConnectionFilterPlugin,&#xA;  AddInExpansiveFilterOperatorPlugin&#xA;],&#xA;// ...&#xA;</code></pre>&#xA;<p>To enable the <code>expansiveIn</code> operator (Option 1) add the relevant configuration to `graphileBuildOptions in the Postgraphile middleware options:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>graphileBuildOptions: {&#xA;  inOperatorEmptyArrayCustomizationPlugin: {&#xA;   addNewOperator: true&#xA;  },&#xA;  // other plugin options&#xA;}&#xA;</code></pre>&#xA;<p>You can use <code>inExpansive</code> operator the same way as the <code>in</code> operator:</p>&#xA;<pre><code>query Products($categories: [String]){&#xA;  products(&#xA;    filter: {&#xA;       category: { inExpansive: $categories } &#xA;    }) {&#xA;    id&#xA;    name&#xA;    category&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",878272,,878272,2022-06-09 22:47:17,2022-06-09 22:47:17,"",,0,3,0,2022-06-07 22:20:38
72560959,2,,71714576,0,,"<p>I encountered this a while back when GraphQL Transformer version 2 came out and my schema stopped working.</p>&#xA;<p>I found this article helpful to understand how the new keywords worked.&#xA;<a href=""https://aws.amazon.com/blogs/mobile/aws-amplify-announces-the-new-graphql-transformer-v2-more-feature-rich-flexible-and-extensible/"" rel=""nofollow noreferrer"">https://aws.amazon.com/blogs/mobile/aws-amplify-announces-the-new-graphql-transformer-v2-more-feature-rich-flexible-and-extensible/</a></p>&#xA;<p>This link is also very helpful for modeling in the current version: <a href=""https://docs.amplify.aws/cli/graphql/data-modeling"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/data-modeling</a></p>&#xA;<p>I think your schema should probably work as follows in the current version:</p>&#xA;<pre><code>type User @model @auth(rules: [{ allow: public }]) {&#xA;  id: ID!&#xA;  email: String!&#xA;  name: String&#xA;  image: String&#xA;  networth: Float!&#xA;&#xA;  portfolioCoins: [PortfolioCoin] @hasMany&#xA;}&#xA;&#xA;type PortfolioCoin @model @key(name: &quot;byUser&quot;, fields: [&quot;userId&quot;]) {&#xA;  id: ID!&#xA;  amount: Float!&#xA;  user: User @belongsTo&#xA;&#xA;  coin: Coin @hasOne&#xA;}&#xA;&#xA;type Coin @model {&#xA;  id: ID!&#xA;  cgId: String!&#xA;  name: String!&#xA;  symbol: String!&#xA;  image: String&#xA;  currentPrice: Float!&#xA;  valueChange24H: Float!&#xA;  valueChange1D: Float!&#xA;  valueChange7D: Float!&#xA;  priceHistoryString: String&#xA;}&#xA;</code></pre>&#xA;",3311765,,,,2022-06-09 13:15:39,"",,0,0,0,2022-06-09 13:15:39
72561630,1,,,0,32,"<p>Are there any GraphQL clients which allows the developer to type-safely select what data to pull from GraphQL? All clients I have used so far I have had to construct the query in something like GraphiQL, and then paste it into e.g. a <code>*.graphql</code> file in my project.</p>&#xA;<p>I have heard that one of GraphQL's main selling points is to solve over- and underfetching. However, by having a workflow where you have to copy the query from a GraphQL IDE to your main IDE, this would gradually lead to the contrary.</p>&#xA;<p>I have tried Apollo's codegen for Angular <a href=""https://www.graphql-code-generator.com/plugins/typescript-apollo-angular"" rel=""nofollow noreferrer"">TypeScript Apollo Angular</a> and it works great for dynamically populating variables like filter, order, skip, take, etc. But I can't find a way to dynamically selecting the data I want back.</p>&#xA;<p>In terms of API i'm thinking something like this:</p>&#xA;<pre><code>interface User {&#xA;    firstName: string;&#xA;    lastName: string;&#xA;    dateOfBirth: Date;&#xA;    isActive: boolean;&#xA;    role: Role;&#xA;}&#xA;&#xA;interface Role {&#xA;    name: string;&#xA;    users: User[];&#xA;}&#xA;&#xA;const users = this.client&#xA;    .query({&#xA;        where: {&#xA;            firstName: {&#xA;                neq: &quot;John&quot;&#xA;            },&#xA;            isActive: {&#xA;                eq: true&#xA;            },&#xA;            role: {&#xA;                name: {&#xA;                    eq: &quot;Admin&quot;&#xA;                }&#xA;            }&#xA;        },&#xA;        select: {&#xA;            lastName: {},&#xA;            dateOfBirth: {},&#xA;            role: {&#xA;                name: {}&#xA;            }&#xA;        }&#xA;    })&#xA;    .execute();&#xA;</code></pre>&#xA;<p>A single user in <code>users</code> would be:</p>&#xA;<pre><code>{&#xA;    lastName: string;&#xA;    dateOfBirth: Date;&#xA;    role: { name: string };&#xA;}&#xA;</code></pre>&#xA;<p>Is this achievable with Apollo's client or are there any other clients where this is possible?</p>&#xA;",7728361,,,,2022-06-09 13:57:03,Are there GraphQL clients which allows selecting fields?,<typescript><graphql><apollo><apollo-client>,0,0,0,2022-06-09 13:57:03
72565420,1,,,0,23,"<p>I have already created a <code>hasRole</code> directive. I only want to include certain input parameters if the user has the admin role:</p>&#xA;<pre><code>const typeDefs = gql`&#xA;&#xA;  type Article {&#xA;    id: ID!&#xA;    title: String!&#xA;    content: String!&#xA;    sponsor: String&#xA;  }&#xA;&#xA;  input CreateArticleInput {&#xA;     title: String!&#xA;     content: String!&#xA;     sponsor: String // include if @hasRole(role: &quot;admin&quot;)&#xA;&#xA;  type Mutation {&#xA;    createArticle(input: CreateArticleInput!): Article!&#xA;    publishArticle(articleId: ID!): Boolean! @hasRole(role: &quot;editor&quot;)&#xA;&#xA;  }&#xA;`&#xA;</code></pre>&#xA;<p>The goal is to provide the sponsor input parameter optionally if the user has the role &quot;admin&quot;, otherwise, do not let the user include a &quot;sponsor&quot;. I wonder if the native <code>@include</code> or <code>@skip</code> directives can be used in tandem with my custom <code>@hasRole</code> directive to achieve this? ..just a thought.</p>&#xA;<p>Is something like this possible? I am not even sure if this is allowed in the <code>input</code> type.</p>&#xA;",7055858,,,,2022-06-09 19:05:29,Is it possible to have schema directives for input parameters?,<javascript><graphql><apollo><apollo-server>,0,0,0,2022-06-09 19:05:29
72575026,1,72575415,,0,21,"<p>I'm playing with Apollo/GraphQL on a neo4j DB</p>&#xA;<p>In Neo4j there is the 'Movies &amp; Persons' Dataset</p>&#xA;<p>Is there something similar for GraphQL (ie Schema, Data, Queries, Mutations, ...) which I could use to play around in my demo app / connected to apollo studio sandbox explorer?</p>&#xA;",5011027,,,,2022-06-10 13:49:27,Is there a dataset for GraphQL?,<graphql><apollo><apollo-server>,1,0,0,2022-06-10 13:21:01
72596885,1,,,0,94,"<p>I have a Lambda function that makes calls to the Stripe API. Both calls to the Stripe API return an object response. After that, I am returning an object I created with info I need, however, it only expects the response from the second API call (accountLinks).</p>&#xA;<p>The Error I am getting: &quot;Validation error of type FieldUndefined: Field 'object' in type 'signUpResponse' is undefined @ 'signUpUser/object'&quot;</p>&#xA;<p>The error is for all four fields of the response object (created_at, expires_at, url).</p>&#xA;<p>I have tried to return outside the try/catch block with the same error.</p>&#xA;<p>Here is my Schema:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>type signUpResponse {&#xA;  accountId: String&#xA;  signUpURL: String&#xA;}&#xA;&#xA;input SignUpUserInput {&#xA;  username: String!&#xA;  email: String!&#xA;  userId: String!&#xA;}&#xA;&#xA;type Mutation {&#xA;  signUpUser(input: SignUpUserInput!): signUpResponse&#xA;    @function(name: ""createStripeConnectAccount-${env}"")&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>My Lambda:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>exports.handler = async (event) =&gt; {&#xA;    const tableName = process.env.tableName&#xA;&#xA;    try {&#xA;&#xA;        const {username, email, userId} = event.arguments.input&#xA;&#xA;        const account = await stripe.accounts.create({&#xA;            type: 'express',&#xA;            email: `${email}`,&#xA;            business_type: 'individual',&#xA;            metadata: {user: `${username}`}&#xA;        });&#xA;&#xA;        let ddbParams = {&#xA;            Key: {&#xA;                userId: {S: `${userId}`}&#xA;            },&#xA;            UpdateExpression: ""set stripeId = :accountId"",&#xA;            ExpressionAttributeValues: {&#xA;                "":accountId"": {S: `${account.id}`},&#xA;            },&#xA;            TableName: tableName,&#xA;        }&#xA;        &#xA;        try {&#xA;            await ddb.updateItem(ddbParams).promise()&#xA;            console.log(""Successfully updated stripeId field"")&#xA;        } catch (err) {&#xA;            console.log(""Storing to DB error: "", err)&#xA;        }&#xA;&#xA;        const accountLink = await stripe.accountLinks.create({&#xA;            account: account.id,&#xA;            //Swap for live website&#xA;            refresh_url: 'http://localhost:3000/profile',&#xA;            return_url: 'http://localhost:3000/listingform',&#xA;            type: 'account_onboarding',&#xA;          });&#xA;&#xA;          return {accountId: account.id, signUpURL: accountLink.url}&#xA;&#xA;    } catch (err) {&#xA;        throw new Error(err)&#xA;    }&#xA;&#xA;};</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>The response object from accountLinks call that my Schema expects:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>{&#xA;  ""object"": ""account_link"",&#xA;  ""created"": 1655066978,&#xA;  ""expires_at"": 1655067278,&#xA;  ""url"": ""https://connect.stripe.com/setup/s/acct_1J22KpGBmWPuX4VC/i3rC5M8AuaB2""&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>Why can't I return my own response from the Lambda function?</p>&#xA;<p>UPDATE:</p>&#xA;<p>Explanation in comments</p>&#xA;<p>updated schema:</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>type signUpResponse {&#xA;  accountId: String&#xA;  object: String&#xA;  created: Int&#xA;  expires_at: Int&#xA;  url: String&#xA;}</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>Updated response object:</p>&#xA;<pre><code>return {accountId: account.id, object: accountLink.object, created: accountLink.created, expires_at: accountLink.expires_at, url: accountLink.url}&#xA;</code></pre>&#xA;",17518888,,17518888,2022-06-14 07:49:24,2022-06-14 07:49:24,AppSync GraphQL Schema expects a different response from the one I am returning?,<aws-lambda><graphql><aws-appsync>,0,1,0,2022-06-13 01:01:02
72601309,2,,43087914,0,,"<p>For the AWS users, I personnaly had the same issue, for an accounting system. The risk with reading and then updating the value is that if several users call your script, some issues of concurrencies might happen. (A user can read the curent value just before it's being updated by another user, so he will arase this other user incrementation).&#xA;What I did is :</p>&#xA;<ol>&#xA;<li>Create a queue request table where I explicitly write that I want to increment my variable.</li>&#xA;<li>Create a lambda that is triggered on that table events (this lambda will fire anytime something happens in this table)</li>&#xA;<li>Limit this lambda concurrency to 1 to avoid reading a value that is being changed</li>&#xA;<li>Read the value from the request queue table, increment my final element and remove the request queue from the queue table. All this has to be done in the unique concurrency lambda that you just created.</li>&#xA;</ol>&#xA;",19329274,,19329274,2022-06-13 10:30:44,2022-06-13 10:30:44,"",,0,0,0,2022-06-13 10:27:55
72602447,1,,,0,459,<p>I have a table with 2.3 millions of data in Postgres DB. While I do the search for user email Id using '_ilike' in Hasura GraphQL console - API explorer tool. Its took too long time to load after 30 seconds its thrown 504 error(Gateway Time-out).Its happens 3/4 times. If I use the same in API in React Application its shown the correct search output within 30 Seconds.</p>&#xA;,14711412,,,,2022-06-13 11:58:58,Hasura GraphQL 504 error(Gateway Time-out) while run the query in GraphQL console - API explorer tool,<database><postgresql><graphql><hasura>,0,4,0,2022-06-13 11:58:58
72609430,2,,72559654,0,,"<p>You cannot use a single record query without passing an identifying attribute (i.e. record ID). If you want to get a list of records, use the <code>item_registrationsList</code> operation. Or update your query to be:</p>&#xA;<pre><code>query($id: ID!) {&#xA;  item_registration(id: $id) {&#xA;    product_Name&#xA;    type&#xA;    description&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",5763672,,,,2022-06-13 21:50:43,"",,0,0,0,2022-06-13 21:50:43
72611948,1,,,0,62,"<p>While I was uploading my project to amplify.&#xA;I got this error while using amplify push Idk why this is happening.&#xA;If anyone knows it would be a great help.</p>&#xA;<p>WARNING: Some types do not have authorization rules configured. That means all create, read, update, and delete operations are denied on these types:&#xA;- User&#xA;- Post&#xA;- Song&#xA;Learn more about &quot;@auth&quot; authorization rules here: <a href=""https://docs.amplify.aws/cli/graphql/authorization-rules"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/authorization-rules</a>&#xA;✖ An error occurred when pushing the resources to the cloud&#xA; An error occurred during the push operation: /&#xA;Your GraphQL Schema is using &quot;@connection&quot;, and &quot;@key&quot; directives from an older version of the GraphQL Transformer. Visit <a href=""https://docs.amplify.aws/cli/migration/transformer-migration/"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/migration/transformer-migration/</a> to learn how to migrate your GraphQL schema.</p>&#xA;<p>✅ Report saved: /tmp/TikTok/report-1655184426383.zip</p>&#xA;<p>✔ Done</p>&#xA;",17030148,,,,2022-06-14 05:32:29,Problem with using @connection @key in react native,<amazon-web-services><react-native><graphql><aws-amplify>,0,0,0,2022-06-14 05:32:29
72634576,2,,72566230,0,,"<p>Unfortunately, you cannot <code>update</code> multiple records by ID in 1 mutation section.</p>&#xA;<p>There are 2 approaches I typically use for this issue.</p>&#xA;<p>1: use an <code>insert</code> mutation with an <code>on_conflict</code> <code>constraint</code> for the table ID and supply all columns you wish to <code>update</code> if they conflict to the <code>update_columns</code> parameter. You just declare a single variable of the <code>[table]_insert_input</code> type and pass in the updated record as a JS object (instead of passing in each value separately). You can nest child records here as well. You will need to declare conflict constraints and columns to update for the children as well. Messing around with the graphiql interface should help you figure out how to do this. This has the benefit of using the same query for both <code>insert</code> and <code>update</code> operations. It has the same downside as well... (permissions)</p>&#xA;<p>2: using code (presumably) you can generate as many <code>update</code> graphql sections as you'd like. Like so:</p>&#xA;<pre><code>const MUTATION = `mutation UpdateRecipe {&#xA;  update_recipes(_set: {title: &quot;lets change title&quot;, image: &quot;https://upload.wikimedia.org/wikipedia/commons/thumb/5/5e/Vytautas_the_Great_Bridge_from_hill%2C_Kaunas%2C_Lithuania_-_Diliff.jpg/1280px-Vytautas_the_Great_Bridge_from_hill%2C_Kaunas%2C_Lithuania_-_Diliff.jpgs&quot;, description: &quot;new description&quot;, Date: &quot;1991-06-09&quot;}, where: {id: {_eq: 10}}) {&#xA;    affected_rows&#xA;  }&#xA;${&#xA;ingredients.map((ingrd, i) =&gt; `&#xA;update_ingredient_${i}: update_ingredient(_set: {name: ${ingrd.name}}, where: {id: {_eq: ${ingrd.id}}}) {&#xA;  returning { ... }&#xA;}&#xA;`).join(&quot;\n&quot;)&#xA;}&#xA;  &#xA;}`&#xA;&#xA;&#xA;</code></pre>&#xA;<p>Notice I prefixed each section because 1 query cannot have multiple sections of the same name.</p>&#xA;<p>While option 2 certainly feels &quot;icky&quot;er it has the single benefit of using the correct permission for the operation...&#xA;Hope this helps</p>&#xA;",10290918,,,,2022-06-15 16:09:29,"",,0,0,0,2022-06-15 16:09:29
72635793,1,,,0,161,"<p>I am new to using graph ql and am trying to setup a unique key for one of my tables.</p>&#xA;<p>For context, the tables key will be determined on the combination of part_number + organization_id. So each organization id can only have one part_number, but different organizations can have the same part_number.</p>&#xA;<p>The issue I am running into is that organization_id is a nullable field. When null, this represents global data. So essentially I want it to act the same as a organization_id.</p>&#xA;<p>IE if I had the part_number: ABC123 I want to enforce that only one of those exist for each organization_id AND only one of those exists for a row with no organization_id.</p>&#xA;<p>Currently I have a unique key set to product_pn_organization_id, and everything works fine for products with an organization id, but as soon as the organization id is null graph ql completely ignores the unique key constraint. So when I run an insert mutation with the product_pn_organization_id constraint on a part_number: ABC123 organization_id: null (assuming this already exists) instead of updating the row it creates a new row.</p>&#xA;<p>If I run the same insert with a organization_id (part_number: ABC123, organization_id: 1, again assuming this row already exists) it will update the columns instead of creating a new row.</p>&#xA;<p>Right now the only solution I can think of is creating a organization that represents 'global' and having that as the default organization_id so that organization_id is never actually null. However, I would rather avoid that if possible.</p>&#xA;<p>Hoping someone has some advice on how to move forward here. Thanks!</p>&#xA;<p>Per request, here are the mutations:</p>&#xA;<p>This mutation inserts a new row with organization_id set to null.</p>&#xA;<pre><code>mutation MyMutation {&#xA;  insert_products(objects: {pn: &quot;ABC123&quot;, manufacturer_pn: &quot;MANABC123&quot;}, on_conflict: {constraint: products_pn_organization_id_key, update_columns: manufacturer_pn}) {&#xA;    returning {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Ideally this query would update the row from the first query, but instead creates a new row.</p>&#xA;<pre><code>mutation MyMutation {&#xA;  insert_products(objects: {pn: &quot;ABC123&quot;, manufacturer_pn: &quot;MANABC124&quot;}, on_conflict: {constraint: products_pn_organization_id_key, update_columns: manufacturer_pn}) {&#xA;    returning {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This query inserts the same PN but with an organization_id.</p>&#xA;<pre><code>mutation MyMutation {&#xA;  insert_products(objects: {pn: &quot;ABC123&quot;, manufacturer_pn: &quot;MANABC123&quot;, organization_id: &quot;00000000-0000-0000-0000-000000000000&quot;}, on_conflict: {constraint: products_pn_organization_id_key, update_columns: manufacturer_pn}) {&#xA;    returning {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Unlike the second query, this query actually updates the row belonging to the organization_id/pn combination instead of creating a new row.</p>&#xA;<pre><code>mutation MyMutation {&#xA;  insert_products(objects: {pn: &quot;ABC123&quot;, manufacturer_pn: &quot;MANABC124&quot;, organization_id: &quot;00000000-0000-0000-0000-000000000000&quot;}, on_conflict: {constraint: products_pn_organization_id_key, update_columns: manufacturer_pn}) {&#xA;    returning {&#xA;      id&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",4414362,,4414362,2022-06-15 21:21:41,2022-06-15 21:21:41,GRAPH QL allow unique key column to use null value as key instead of ignoring it,<database><graphql><constraints><hasura><unique-key>,0,3,0,2022-06-15 17:51:52
72644662,1,,,0,33,"<p>I have this code file that loads audio playlist files to the media player direct from the internet. So, I want to change instead of loading audio playlist files direct from the internet I want it to fetch from my GraphQL API using graphql_flutter 5.1.0 (<a href=""https://pub.dev/packages/graphql_flutter"" rel=""nofollow noreferrer"">https://pub.dev/packages/graphql_flutter</a>) package from zino.company.</p>&#xA;<p>My question is how can I query the list of episodes to populate the _playlist AudioSource before the page loads completely?</p>&#xA;<p>I tried to use didChangeDependencies but the playlist was not populated after the page loaded. Also, the Tested hard code that I commented on the file works but still it is hard coded. When the playlist is loaded, the audio files are playable and all the buttons work. I have attached the media_player.dart file and snapshot of the app.</p>&#xA;<p>My GraphQL API request and response for the episodes is as follow;</p>&#xA;<p>graphql request</p>&#xA;<pre><code>{&#xA;  episodeByPodcast(podcast: 1){&#xA;    id&#xA;    title&#xA;    synopsis&#xA;    duration&#xA;    filePath&#xA;    host&#xA;    guest&#xA;    podcast {&#xA;      id&#xA;      podcastTitle&#xA;    }&#xA;    recorded&#xA;    posted&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>graphql response</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;episodeByPodcast&quot;: [&#xA;      {&#xA;        &quot;id&quot;: &quot;1&quot;,&#xA;        &quot;title&quot;: &quot;Episode 1&quot;,&#xA;        &quot;synopsis&quot;: &quot;Hello World&quot;,&#xA;        &quot;duration&quot;: &quot;18:59&quot;,&#xA;        &quot;filePath&quot;: &quot;podcasts/episode_1.mp3&quot;,&#xA;        &quot;host&quot;: &quot;John Doe&quot;,&#xA;        &quot;guest&quot;: &quot;Jane Doe&quot;,&#xA;        &quot;podcast&quot;: {&#xA;          &quot;id&quot;: &quot;1&quot;,&#xA;          &quot;podcastTitle&quot;: &quot;Season 1&quot;&#xA;        },&#xA;        &quot;recorded&quot;: &quot;2022-05-27&quot;,&#xA;        &quot;posted&quot;: &quot;2022-05-27&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: &quot;4&quot;,&#xA;        &quot;title&quot;: &quot;Episode 2&quot;,&#xA;        &quot;synopsis&quot;: &quot;Hello World&quot;,&#xA;        &quot;duration&quot;: &quot;18:59&quot;,&#xA;        &quot;filePath&quot;: &quot;podcasts/episode_2.mp3&quot;,&#xA;        &quot;host&quot;: &quot;John Doe&quot;,&#xA;        &quot;guest&quot;: &quot;Jane Doe&quot;,&#xA;        &quot;podcast&quot;: {&#xA;          &quot;id&quot;: &quot;1&quot;,&#xA;          &quot;podcastTitle&quot;: &quot;Season 1&quot;&#xA;        },&#xA;        &quot;recorded&quot;: &quot;2022-05-27&quot;,&#xA;        &quot;posted&quot;: &quot;2022-05-27&quot;&#xA;      },&#xA;      {&#xA;        &quot;id&quot;: &quot;5&quot;,&#xA;        &quot;title&quot;: &quot;Episode 3&quot;,&#xA;        &quot;synopsis&quot;: &quot;Hello World&quot;,&#xA;        &quot;duration&quot;: &quot;41:02&quot;,&#xA;        &quot;filePath&quot;: &quot;podcasts/episode_3&quot;,&#xA;        &quot;host&quot;: &quot;John Doe&quot;,&#xA;        &quot;guest&quot;: &quot;Jane Doe&quot;,&#xA;        &quot;podcast&quot;: {&#xA;          &quot;id&quot;: &quot;1&quot;,&#xA;          &quot;podcastTitle&quot;: &quot;Season 1&quot;&#xA;        },&#xA;        &quot;recorded&quot;: &quot;2022-05-28&quot;,&#xA;        &quot;posted&quot;: &quot;2022-05-28&quot;&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The media_player.dart file</p>&#xA;<pre><code>import 'package:audio_service/audio_service.dart';&#xA;import 'package:audio_session/audio_session.dart';&#xA;import 'package:flutter/material.dart';&#xA;import 'package:flutter/services.dart';&#xA;import 'package:just_audio/just_audio.dart';&#xA;import 'package:just_audio_background/just_audio_background.dart';&#xA;import 'package:provider/provider.dart';&#xA;import 'package:rxdart/rxdart.dart';&#xA;import 'package:app/screens/podcast/widgets/common.dart';&#xA;&#xA;import 'widgets/control_buttons.dart';&#xA;&#xA;&#xA;// Tested hard code&#xA;&#xA;// const pathPrefix = MediaEndpoint.url;&#xA;&#xA;// final List&lt;Map&lt;String, dynamic&gt;&gt; episodes = [&#xA;//   {&#xA;//     &quot;id&quot;: &quot;1&quot;,&#xA;//     &quot;title&quot;: &quot;Episode 1&quot;,&#xA;//     &quot;synopsis&quot;: &quot;Hello World&quot;,&#xA;//     &quot;duration&quot;: &quot;18:59&quot;,&#xA;//     &quot;filePath&quot;:&#xA;//         &quot;podcasts/episode_1.mp3&quot;,&#xA;//     &quot;host&quot;: &quot;John Doe&quot;,&#xA;//     &quot;guest&quot;: &quot;Jane Doe&quot;,&#xA;//     &quot;podcast&quot;: {&quot;id&quot;: &quot;1&quot;, &quot;podcastTitle&quot;: &quot;Season 1&quot;},&#xA;//     &quot;recorded&quot;: &quot;2022-05-27&quot;,&#xA;//     &quot;posted&quot;: &quot;2022-05-27&quot;&#xA;//   },&#xA;//   {&#xA;//     &quot;id&quot;: &quot;4&quot;,&#xA;//     &quot;title&quot;: &quot;Episode 2&quot;,&#xA;//     &quot;synopsis&quot;: &quot;Hello World&quot;,&#xA;//     &quot;duration&quot;: &quot;18:59&quot;,&#xA;//     &quot;filePath&quot;:&#xA;//         &quot;podcasts/episode_2.mp3&quot;,&#xA;//     &quot;host&quot;: &quot;John Doe&quot;,&#xA;//     &quot;guest&quot;: &quot;Jane Doe&quot;,&#xA;//     &quot;podcast&quot;: {&quot;id&quot;: &quot;1&quot;, &quot;podcastTitle&quot;: &quot;Season 1&quot;},&#xA;//     &quot;recorded&quot;: &quot;2022-05-27&quot;,&#xA;//     &quot;posted&quot;: &quot;2022-05-27&quot;&#xA;//   },&#xA;//   {&#xA;//     &quot;id&quot;: &quot;5&quot;,&#xA;//     &quot;title&quot;: &quot;Episode 3&quot;,&#xA;//     &quot;synopsis&quot;: &quot;Hello World&quot;,&#xA;//     &quot;duration&quot;: &quot;41:02&quot;,&#xA;//     &quot;filePath&quot;: &quot;podcasts/episode_3.mp3&quot;,&#xA;//     &quot;host&quot;: &quot;John Doe&quot;,&#xA;//     &quot;guest&quot;: &quot;Jane Doe&quot;,&#xA;//     &quot;podcast&quot;: {&quot;id&quot;: &quot;1&quot;, &quot;podcastTitle&quot;: &quot;Season 1&quot;},&#xA;//     &quot;recorded&quot;: &quot;2022-05-28&quot;,&#xA;//     &quot;posted&quot;: &quot;2022-05-28&quot;&#xA;//   }&#xA;// ];&#xA;&#xA;// final ConcatenatingAudioSource _playlist = ConcatenatingAudioSource(&#xA;//   children: [&#xA;//     for (var episode in episodes)&#xA;//       AudioSource.uri(&#xA;//         Uri.parse('$pathPrefix${episode['filePath']}'),&#xA;//         tag: MediaItem(&#xA;//           id: episode['id'].toString(),&#xA;//           album: episode['podcast']['podcastTitle'].toString(),&#xA;//           title: episode['title'].toString(),&#xA;//           artUri: Uri.parse(&#xA;//               &quot;https://mywebsite.com/uploads/2021/04/cover-art.png&quot;),&#xA;//         ),&#xA;//       ),&#xA;//   ],&#xA;// );&#xA;&#xA;// - End of Tested hard code -&#xA;&#xA;class MediaPlayer extends StatefulWidget {&#xA;  static const routeName = '/media-player';&#xA;&#xA;  @override&#xA;  _MediaPlayerState createState() =&gt; _MediaPlayerState();&#xA;}&#xA;&#xA;class _MediaPlayerState extends State&lt;MediaPlayer&gt; {&#xA;  var _isInit = true;&#xA;  var _isLoading = false;&#xA;&#xA;  @override&#xA;  void didChangeDependencies() {&#xA;    if (_isInit) {&#xA;      setState(() {&#xA;        _isLoading = true;&#xA;      });&#xA;&#xA;&#xA;      setState(() {&#xA;        _isLoading = false;&#xA;      });&#xA;    }&#xA;    _isInit = false;&#xA;    super.didChangeDependencies();&#xA;  }&#xA;&#xA;  static int _nextMediaId = 0;&#xA;  late AudioPlayer _player;&#xA;&#xA;  final _playlist = ConcatenatingAudioSource(&#xA;    children: [&#xA;      ClippingAudioSource(&#xA;        start: const Duration(seconds: 60),&#xA;        end: const Duration(seconds: 90),&#xA;        child: AudioSource.uri(Uri.parse(&#xA;            &quot;https://mywebsite.com/podcasts/episode_1.mp3&quot;)),&#xA;        tag: MediaItem(&#xA;          id: '${_nextMediaId++}',&#xA;          album: &quot;Science Friday&quot;,&#xA;          title: &quot;A Salute To Head-Scratching Science (30 seconds)&quot;,&#xA;          artUri: Uri.parse(&#xA;              &quot;https://mywebsite.com/uploads/2021/04/cover-art.png&quot;),&#xA;        ),&#xA;      ),&#xA;      AudioSource.uri(&#xA;        Uri.parse(&quot;https://mywebsite.com/podcasts/episode_2.mp3&quot;),&#xA;        tag: MediaItem(&#xA;          id: '${_nextMediaId++}',&#xA;          album: &quot;Science Friday&quot;,&#xA;          title: &quot;A Salute To Head-Scratching Science&quot;,&#xA;          artUri: Uri.parse(&#xA;              &quot;https://mywebsite.com/uploads/2021/04/cover-art.png&quot;),&#xA;        ),&#xA;      ),&#xA;      AudioSource.uri(&#xA;        Uri.parse(&#xA;            &quot;https://mywebsite.com/podcasts/episode_3.mp3&quot;),&#xA;        tag: MediaItem(&#xA;          id: '${_nextMediaId++}',&#xA;          album: &quot;Science Friday&quot;,&#xA;          title: &quot;From Cat Rheology To Operatic Incompetence&quot;,&#xA;          artUri: Uri.parse(&#xA;              &quot;https://mywebsite.com/uploads/2021/04/cover-art.png&quot;),&#xA;        ),&#xA;      ),&#xA;      AudioSource.uri(&#xA;        Uri.parse(&#xA;            &quot;https://mywebsite.com/podcasts/episode_4.mp3&quot;),&#xA;        tag: MediaItem(&#xA;          id: '${_nextMediaId++}',&#xA;          album: &quot;Public Domain&quot;,&#xA;          title: &quot;Nature Sounds&quot;,&#xA;          artUri: Uri.parse(&#xA;              &quot;https://mywebsite.com/uploads/2021/04/cover-art.png&quot;),&#xA;        ),&#xA;      ),&#xA;    ],&#xA;  );&#xA;&#xA;  final int _addedCount = 0;&#xA;&#xA;  @override&#xA;  void initState() {&#xA;    super.initState();&#xA;    _player = AudioPlayer();&#xA;    SystemChrome.setSystemUIOverlayStyle(const SystemUiOverlayStyle(&#xA;      statusBarColor: Colors.black,&#xA;    ));&#xA;    _init();&#xA;  }&#xA;&#xA;  Future&lt;void&gt; _init() async {&#xA;    final session = await AudioSession.instance;&#xA;    await session.configure(const AudioSessionConfiguration.speech());&#xA;    // Listen to errors during playback.&#xA;    _player.playbackEventStream.listen((event) {},&#xA;        onError: (Object e, StackTrace stackTrace) {&#xA;      print('A stream error occurred: $e');&#xA;    });&#xA;    try {&#xA;      await _player.setAudioSource(_playlist);&#xA;    } catch (e, stackTrace) {&#xA;      // Catch load errors: 404, invalid url ...&#xA;      print(&quot;Error loading playlist: $e&quot;);&#xA;      print(stackTrace);&#xA;    }&#xA;  }&#xA;&#xA;  @override&#xA;  void dispose() {&#xA;    _player.dispose();&#xA;    super.dispose();&#xA;  }&#xA;&#xA;  Stream&lt;PositionData&gt; get _positionDataStream =&gt;&#xA;      Rx.combineLatest3&lt;Duration, Duration, Duration?, PositionData&gt;(&#xA;          _player.positionStream,&#xA;          _player.bufferedPositionStream,&#xA;          _player.durationStream,&#xA;          (position, bufferedPosition, duration) =&gt; PositionData(&#xA;              position, bufferedPosition, duration ?? Duration.zero));&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    final playerData = ModalRoute.of(context)!.settings.arguments as Map;&#xA;&#xA;    return _isLoading&#xA;        ? const CircularProgressIndicator()&#xA;        : Scaffold(&#xA;            appBar: AppBar(&#xA;              title: Text(&#xA;                playerData['title'],&#xA;              ),&#xA;            ),&#xA;            body: SafeArea(&#xA;              child: Column(&#xA;                crossAxisAlignment: CrossAxisAlignment.center,&#xA;                mainAxisAlignment: MainAxisAlignment.center,&#xA;                children: [&#xA;                  Expanded(&#xA;                    child: StreamBuilder&lt;SequenceState?&gt;(&#xA;                      stream: _player.sequenceStateStream,&#xA;                      builder: (context, snapshot) {&#xA;                        final state = snapshot.data;&#xA;                        if (state?.sequence.isEmpty ?? true) {&#xA;                          return const SizedBox();&#xA;                        }&#xA;                        final metadata = state!.currentSource!.tag as MediaItem;&#xA;                        return Column(&#xA;                          crossAxisAlignment: CrossAxisAlignment.center,&#xA;                          children: [&#xA;                            Expanded(&#xA;                              child: Padding(&#xA;                                padding: const EdgeInsets.all(8.0),&#xA;                                child: Center(&#xA;                                    child: Image.network(&#xA;                                        metadata.artUri.toString())),&#xA;                              ),&#xA;                            ),&#xA;                            Text(metadata.album!,&#xA;                                style: Theme.of(context).textTheme.headline6),&#xA;                            Text(metadata.title),&#xA;                          ],&#xA;                        );&#xA;                      },&#xA;                    ),&#xA;                  ),&#xA;                  ControlButtons(_player),&#xA;                  StreamBuilder&lt;PositionData&gt;(&#xA;                    stream: _positionDataStream,&#xA;                    builder: (context, snapshot) {&#xA;                      final positionData = snapshot.data;&#xA;                      return SeekBar(&#xA;                        duration: positionData?.duration ?? Duration.zero,&#xA;                        position: positionData?.position ?? Duration.zero,&#xA;                        bufferedPosition:&#xA;                            positionData?.bufferedPosition ?? Duration.zero,&#xA;                        onChangeEnd: (newPosition) {&#xA;                          _player.seek(newPosition);&#xA;                        },&#xA;                      );&#xA;                    },&#xA;                  ),&#xA;                  const SizedBox(height: 8.0),&#xA;                  Row(&#xA;                    children: [&#xA;                      StreamBuilder&lt;LoopMode&gt;(&#xA;                        stream: _player.loopModeStream,&#xA;                        builder: (context, snapshot) {&#xA;                          final loopMode = snapshot.data ?? LoopMode.off;&#xA;                          const icons = [&#xA;                            Icon(Icons.repeat, color: Colors.grey),&#xA;                            Icon(Icons.repeat, color: Colors.orange),&#xA;                            Icon(Icons.repeat_one, color: Colors.orange),&#xA;                          ];&#xA;                          const cycleModes = [&#xA;                            LoopMode.off,&#xA;                            LoopMode.all,&#xA;                            LoopMode.one,&#xA;                          ];&#xA;                          final index = cycleModes.indexOf(loopMode);&#xA;                          return IconButton(&#xA;                            icon: icons[index],&#xA;                            onPressed: () {&#xA;                              _player.setLoopMode(cycleModes[&#xA;                                  (cycleModes.indexOf(loopMode) + 1) %&#xA;                                      cycleModes.length]);&#xA;                            },&#xA;                          );&#xA;                        },&#xA;                      ),&#xA;                      Expanded(&#xA;                        child: Text(&#xA;                          &quot;Playlist&quot;,&#xA;                          style: Theme.of(context).textTheme.headline6,&#xA;                          textAlign: TextAlign.center,&#xA;                        ),&#xA;                      ),&#xA;                      StreamBuilder&lt;bool&gt;(&#xA;                        stream: _player.shuffleModeEnabledStream,&#xA;                        builder: (context, snapshot) {&#xA;                          final shuffleModeEnabled = snapshot.data ?? false;&#xA;                          return IconButton(&#xA;                            icon: shuffleModeEnabled&#xA;                                ? const Icon(Icons.shuffle,&#xA;                                    color: Colors.orange)&#xA;                                : const Icon(Icons.shuffle, color: Colors.grey),&#xA;                            onPressed: () async {&#xA;                              final enable = !shuffleModeEnabled;&#xA;                              if (enable) {&#xA;                                await _player.shuffle();&#xA;                              }&#xA;                              await _player.setShuffleModeEnabled(enable);&#xA;                            },&#xA;                          );&#xA;                        },&#xA;                      ),&#xA;                    ],&#xA;                  ),&#xA;                  SizedBox(&#xA;                    height: 240.0,&#xA;                    child: StreamBuilder&lt;SequenceState?&gt;(&#xA;                      stream: _player.sequenceStateStream,&#xA;                      builder: (context, snapshot) {&#xA;                        final state = snapshot.data;&#xA;                        final sequence = state?.sequence ?? [];&#xA;                        return ReorderableListView(&#xA;                          onReorder: (int oldIndex, int newIndex) {&#xA;                            if (oldIndex &lt; newIndex) newIndex--;&#xA;                            _playlist.move(oldIndex, newIndex);&#xA;                          },&#xA;                          children: [&#xA;                            for (var i = 0; i &lt; sequence.length; i++)&#xA;                              Dismissible(&#xA;                                key: ValueKey(sequence[i]),&#xA;                                background: Container(&#xA;                                  color: Colors.redAccent,&#xA;                                  alignment: Alignment.centerRight,&#xA;                                  child: const Padding(&#xA;                                    padding: EdgeInsets.only(right: 8.0),&#xA;                                    child:&#xA;                                        Icon(Icons.delete, color: Colors.white),&#xA;                                  ),&#xA;                                ),&#xA;                                onDismissed: (dismissDirection) {&#xA;                                  _playlist.removeAt(i);&#xA;                                },&#xA;                                child: Material(&#xA;                                  color: i == state!.currentIndex&#xA;                                      ? Colors.grey.shade300&#xA;                                      : null,&#xA;                                  child: ListTile(&#xA;                                    title:&#xA;                                        Text(sequence[i].tag.title as String),&#xA;                                    onTap: () {&#xA;                                      _player.seek(Duration.zero, index: i);&#xA;                                    },&#xA;                                  ),&#xA;                                ),&#xA;                              ),&#xA;                          ],&#xA;                        );&#xA;                      },&#xA;                    ),&#xA;                  ),&#xA;                ],&#xA;              ),&#xA;            ),&#xA;          );&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>App screenshot&#xA;<a href=""https://i.stack.imgur.com/hoSC6.png"" rel=""nofollow noreferrer"">media player app screenshot</a></p>&#xA;",5681339,,5681339,2022-06-16 10:57:08,2022-06-16 10:57:08,How to load a list of AudioSource from GraphQL API in Flutter,<flutter><api><graphql><graphql-flutter>,0,0,0,2022-06-16 10:53:03
72651078,1,,,2,336,<p>Do you know where and how can i use a graphiql explorer to to see my schema and do some graphql request with Supabase ?</p>&#xA;,11472299,,,,2022-07-19 22:17:52,Where can i find the graphiql explorer in Supabase?,<graphql><supabase>,2,0,0,2022-06-16 19:37:06
72651918,2,,72523763,0,,"<p>So according to the response to my GitHub issue, this workflow is not currently supported. You can follow it here: <a href=""https://github.com/aws-amplify/amplify-category-api/issues/528#issuecomment-1157894170"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-category-api/issues/528#issuecomment-1157894170</a></p>&#xA;<p>A workaround was provided by:</p>&#xA;<blockquote>&#xA;<p>...setting the auth rule to private and then perform&#xA;validation in the lambda function...</p>&#xA;</blockquote>&#xA;<p>I was thinking to create a custom auth function and then chain it in front of my custom mutation.  Not sure if that will work but I'll report back once I've made some progress.</p>&#xA;",1956540,,,,2022-06-16 21:09:33,"",,0,0,0,2022-06-16 21:09:33
72657142,1,72676774,,0,77,"<p>The goal of the following piece of code is to create a dictionary that is populated with data received from GraphQL query responses.</p>&#xA;<p>Manager list is constructed as the following: managers_list: ['manager1@email.com', 'manager2@email.com']</p>&#xA;<p>The &quot;get_employees_per_manager&quot; function takes a list of managers and a token, then it returns a list of employees and their actions.</p>&#xA;<p>&quot;execute_query&quot; function executes the given query and extracts all the necessary data.</p>&#xA;<pre><code>def get_employees_per_manager(managers_list, token):&#xA;        result = dict()&#xA;        for manager in managers_list:&#xA;            query = &quot;&quot;&quot;&#xA;            query {&#xA;                details(managersEmailAddress: &quot;##manager_email##&quot;){&#xA;                    employeeId&#xA;                }&#xA;            }&#xA;            &quot;&quot;&quot;&#xA;            print(&quot;Manager&quot;, manager)&#xA;            # Get the current index of managers list element&#xA;            index = managers_list.index(manager)&#xA;&#xA;            # Replace the query attribute with current manager value&#xA;            query = gql(query_query.replace(&quot;##manager_email##&quot;, managers_list[index]))&#xA;&#xA;            # Execute the query&#xA;            list = obj.execute_query(query, token)&#xA;&#xA;            for employee in employee_list:&#xA;                query = &quot;&quot;&quot;&#xA;                query {&#xA;                    details(employeeId: ##employeeId##){&#xA;                        Name&#xA;                        Surname&#xA;                        category{&#xA;                        categoryName&#xA;                        rating&#xA;                        action&#xA;                        }&#xA;                    }&#xA;                }&#xA;                &quot;&quot;&quot;&#xA;                print(&quot;Employee: &quot;, employee)&#xA;                # Get the current index of current employeeId list element&#xA;                index = employee_list.index(employee)&#xA;&#xA;                # Replace the query attribute with current employee value&#xA;                query = gql(query.replace(&quot;##employeeId##&quot;, str(employee_list[index])))&#xA;&#xA;                # Execute the query&#xA;                actions = obj.execute_query(query, token)&#xA;                &#xA;                # In here I intend to create a dictionary with dynamically appended data.&#xA;                # The first two lines below do not work and they trigger a KeyValue error.&#xA;                result[manager].append(employee)&#xA;                result[employee].append(actions)&#xA;                print(result)&#xA;                 &#xA;        return(employee_list, actions, result)&#xA;</code></pre>&#xA;<p>Here's the fragment of data that I currently have after extracting all everything I need from the response:</p>&#xA;<pre><code>Manager:  manager.one@email.com&#xA;Employee: 122345&#xA;([{'category': 'Category1', 'rating': 1, 'action': 'Action 1 for this employee'}, {'category': 'Category1', 'rating': 1, 'action': 'Action 2 for this employee'}, ], 'NameSurname')&#xA;Employee: 126541&#xA;([{'category': 'Category1', 'rating': 1, 'action': 'Action 1 for this employee'}, {'category': 'Category1', 'rating': 1, 'action': 'Action 2 for this employee'}, ], 'NameSurname')&#xA;Manager:  manager.two@email.com&#xA;Employee: 122346&#xA;([{'category': 'Category1', 'rating': 1, 'action': 'Action 1 for this employee'}, {'category': 'Category1', 'rating': 1, 'action': 'Action 2 for this employee'}, ], 'NameSurname')&#xA;</code></pre>&#xA;<p>I imagine that the final structure of the dictionary should look like this:</p>&#xA;<pre><code>result = {&#xA;    &quot;manager&quot;: {&#xA;       &quot;employee&quot;: {&#xA;        &quot;Name&quot;: &quot;Name 1&quot;&#xA;        &quot;Surname&quot;: &quot;Surname 1&quot;&#xA;        &quot;Action&quot;: &quot;Action 1&quot;&#xA;       },&#xA;       &quot;employee&quot;: {&#xA;        &quot;Name&quot;: &quot;Name 2&quot;&#xA;        &quot;Surname&quot;: &quot;Surname 2&quot;&#xA;        &quot;Action&quot;: &quot;Action 2&quot;&#xA;       }&#xA;    },&#xA;    &quot;manager&quot;: {&#xA;       &quot;employee&quot;: {&#xA;        &quot;Name&quot;: &quot;Name 1&quot;&#xA;        &quot;Surname&quot;: &quot;Surname 1&quot;&#xA;        &quot;Action&quot;: &quot;Action 1&quot;&#xA;       }&#xA;    },&#xA;    ...&#xA;}&#xA;</code></pre>&#xA;<p>So far I've tried to assign received results as new keys by using the append() function but that did not do the job. I'm not sure what would be the most 'pythonic' way to handle that.</p>&#xA;",11464100,,11464100,2022-06-17 09:29:22,2022-06-20 14:11:27,Dynamically generate a dictionary with GraphQL response values as key names,<python><dictionary><graphql>,1,0,0,2022-06-17 09:23:47
72669627,1,,,4,363,"<p>By default the Amplify GraphQL APIs return deleted items.</p>&#xA;<p>Worse, as near as I can tell there is apparently no way to filter them: Neither <code>syncXYZTable</code> nor <code>listXYZTable</code> queries accept the <code>_deleted</code> field as a parameter. Fortunately the generated code in the DataStore SDK filters out these items, and (somewhat confusingly) the Amplify Studio does not display them (in the Contents tab); but this only highlights the inconsistency: For example as a developer I don't see deleted items anywhere, but as a data scientist or manager using the GraphQL API, I have (it seems) no way of avoiding them.</p>&#xA;<p>Am I missing something. Is there really no way to filter out deleted items using the Amplify GraphQL API?</p>&#xA;",656912,,,,2022-08-08 21:41:53,How do I prevent deleted records from appearing in my AWS Amplify GraphQL results?,<graphql><aws-amplify>,1,0,0,2022-06-18 13:25:52
72672854,1,,,0,80,"<p>I have a time triggered lambda function in amplify and it works fine:</p>&#xA;<pre><code>            url: process.env.API_P2PCHAKRA_GRAPHQLAPIENDPOINTOUTPUT,&#xA;            method: 'post',&#xA;            headers: {&#xA;                'x-api-key': process.env.API_P2PCHAKRA_GRAPHQLAPIKEYOUTPUT&#xA;            },&#xA;            data: {&#xA;                query: print(listorderstatuss ),&#xA;                variables: {&#xA;                    limit: 100,&#xA;                    nextToken: nextToken&#xA;                }&#xA;            }&#xA;        }) ; &#xA;</code></pre>&#xA;<p>my question is do I have to worry about api-key expiration ? Or is amplify/AWS doing something in the background I don't understand.</p>&#xA;",3417672,,3417672,2022-06-18 22:18:18,2022-06-18 22:18:18,does the amplify graphql api-key inside a lambda function expire?,<graphql><amazon-cloudwatch><api-key><amplify>,0,0,0,2022-06-18 21:24:13
72673114,1,,,0,73,"<p>i'm trying to create a simple leaderboard table, i would like to execute a query to insert or update entry if the new score is higher than the previous one, is it possible to achieve this using graphql ? My upsert mutation look like this</p>&#xA;<pre><code>mutation addEntry {&#xA;  upsertRankentry(&#xA;    upsert: {&#xA;      create: {id: &quot;111&quot;, score: 125110},&#xA;      update: {id: &quot;111&quot;, score: 125110}}&#xA;    where: {id: &quot;111&quot;}&#xA;  ) {&#xA;    id&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>edit : I'm using graphCMS to generate my API and i use it in a javascript app with fetch()</p>&#xA;",19366588,,19366588,2022-06-19 18:33:31,2022-06-19 18:33:31,Graphql upsert with condition,<javascript><graphql><graphcms>,0,7,0,2022-06-18 22:14:53
72676774,2,,72657142,1,,"<p>You need to assign a dictionary to <code>result[manager]</code> first. Also, you need to assign the actions to <code>result[manager][employee]</code>:</p>&#xA;<pre class=""lang-py prettyprint-override""><code>def get_employees_per_manager(managers_list, token):&#xA;        result = dict()&#xA;        for manager in managers_list:&#xA;            result[manager] = {}  # &lt;---------------&#xA;&#xA;            query = &quot;&quot;&quot;&#xA;            query {&#xA;                details(managersEmailAddress: &quot;##manager_email##&quot;){&#xA;                    employeeId&#xA;                }&#xA;            }&#xA;            &quot;&quot;&quot;&#xA;            print(&quot;Manager&quot;, manager)&#xA;            index = managers_list.index(manager)&#xA;&#xA;            query = gql(query_query.replace(&quot;##manager_email##&quot;, managers_list[index]))&#xA;&#xA;            list = obj.execute_query(query, token)&#xA;&#xA;            for employee in employee_list:&#xA;                query = &quot;&quot;&quot;&#xA;                query {&#xA;                    details(employeeId: ##employeeId##){&#xA;                        Name&#xA;                        Surname&#xA;                        category{&#xA;                        categoryName&#xA;                        rating&#xA;                        action&#xA;                        }&#xA;                    }&#xA;                }&#xA;                &quot;&quot;&quot;&#xA;                print(&quot;Employee: &quot;, employee)&#xA;                index = employee_list.index(employee)&#xA;&#xA;                query = gql(query.replace(&quot;##employeeId##&quot;, str(employee_list[index])))&#xA;&#xA;                actions = obj.execute_query(query, token)&#xA;                &#xA;                result[manager][employee] = actions  # &lt;---------------&#xA;                print(result)&#xA;                 &#xA;        return(employee_list, actions, result)&#xA;</code></pre>&#xA;",542196,,542196,2022-06-20 14:11:27,2022-06-20 14:11:27,"",,0,1,0,2022-06-19 12:09:33
72694754,2,,65659687,0,,"<p>Adding <code>_version</code> to my mutation worked very well.</p>&#xA;<pre><code>API.graphql({&#xA;    query: yourQuery,&#xA;    variables: {&#xA;        input: {&#xA;            id: 'your-id',&#xA;            ...&#xA;            _version: version,&#xA;        },&#xA;    },&#xA;});&#xA;</code></pre>&#xA;",8156575,,,,2022-06-21 02:33:11,"",,0,0,0,2022-06-21 02:33:11
72695567,2,,68277857,0,,"<p>This worked for me. Making a custom queries file was pretty simple and I was able to limit the object to just returning the <code>_version</code>.</p>&#xA;<pre><code>export const getUserVersion = /* GraphQL */ `&#xA;    query GetUserVersion($id: ID!) {&#xA;        getUser(id: $id) {&#xA;            _version&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;<p>Then in my <code>.js</code> file I could call the function this way:</p>&#xA;<pre><code>const getUserVersionResponse = await API.graphql(&#xA;    graphqlOperation(getUserVersion, { id })&#xA;);&#xA;</code></pre>&#xA;",8156575,,,,2022-06-21 05:06:36,"",,0,0,0,2022-06-21 05:06:36
72705982,1,,,0,64,"<p>How to execute a GraphQL query to my Amplify data store using Python?</p>&#xA;<p>I've tried</p>&#xA;<pre class=""lang-py prettyprint-override""><code>usr = os.environ.get('AWS_GRAPHQL_USER').encode('utf-8')&#xA;pwd = os.environ.get('AWS_GRAPHQL_PASSWORD').encode('utf-8')&#xA;resp = requests.post(url, json={'query': query}, auth=requests.auth.HTTPBasicAuth(usr,pwd))&#xA;</code></pre>&#xA;<p>but get <code>401</code>.</p>&#xA;<p>What is the correct way to make a query to my GraphQL endpoint using as an Amplify Auth (Cognito) user?</p>&#xA;<hr />&#xA;<p>I have no issues with</p>&#xA;<pre class=""lang-py prettyprint-override""><code>resp = requests.post(url, json={'query': query}, headers={'x-api-key': os.environ.get('AWS_GRAPHQL_API_KEY')})&#xA;</code></pre>&#xA;",656912,,,,2022-06-21 19:07:52,How to execute a GraphQL query to my Amplify data store using Python?,<python><authentication><graphql><amazon-cognito><aws-amplify>,0,0,0,2022-06-21 19:07:52
72715753,2,,72715467,0,,<p>we need to change</p>&#xA;<pre><code>select graphile_worker.add_job&#xA;</code></pre>&#xA;<p>to</p>&#xA;<pre><code>perform graphile_worker.add_job&#xA;</code></pre>&#xA;,10468789,,,,2022-06-22 12:43:34,"",,0,1,0,2022-06-22 12:43:34
72719384,1,72721295,,0,175,"<p>I need to get some data from this subgraph that uses GraphQL:&#xA;<a href=""https://v4.subgraph.polygon.oceanprotocol.com/subgraphs/name/oceanprotocol/ocean-subgraph/graphql"" rel=""nofollow noreferrer"">https://v4.subgraph.polygon.oceanprotocol.com/subgraphs/name/oceanprotocol/ocean-subgraph/graphql</a></p>&#xA;<p>In order to achieve this, I run a script from selenium that execute the following query:&#xA;<a href=""https://v4.subgraph.polygon.oceanprotocol.com/subgraphs/name/oceanprotocol/ocean-subgraph/graphql?query=%7B%0A%20%20poolSnapshots(orderBy%3A%20baseTokenLiquidity%2C%20orderDirection%3A%20desc%2C%20block%3A%20%7Bnumber%3A%2029357051%7D)%20%7B%0A%20%20%20%20id%0A%20%20%20%20baseTokenLiquidity%0A%20%20%7D%0A%7D"" rel=""nofollow noreferrer"">https://v4.subgraph.polygon.oceanprotocol.com/subgraphs/name/oceanprotocol/ocean-subgraph/graphql?query=%7B%0A%20%20poolSnapshots(orderBy%3A%20baseTokenLiquidity%2C%20orderDirection%3A%20desc%2C%20block%3A%20%7Bnumber%3A%2029357051%7D)%20%7B%0A%20%20%20%20id%0A%20%20%20%20baseTokenLiquidity%0A%20%20%7D%0A%7D</a></p>&#xA;<p>And then convert the output shown in the div placed on the right from text to JSON.&#xA;Do you know a lighter/faster method than selenium that allow me to get the same output? I would use BS but be aware that sometimes in order to get the entire response I need to scroll the output-div.</p>&#xA;<p>This is the code I actually use:</p>&#xA;<pre><code>def find_datasets():&#xA;    datasets = []&#xA;&#xA;    s=Service(ChromeDriverManager().install())&#xA;    options = Options()&#xA;    options.headless = True&#xA;    options.add_argument(&quot;--start-maximized&quot;)&#xA;    options.add_argument('window-size=2560,1440')&#xA;    driver = webdriver.Chrome(service=s, options=options)&#xA;    urls = [&quot;https://v4.subgraph.polygon.oceanprotocol.com/subgraphs/name/oceanprotocol/ocean-subgraph/graphql?query=%7B%0A%20%20pools(orderBy%3A%20createdTimestamp%2C%20orderDirection%3A%20desc)%20%7B%0A%20%20%20%20id%0A%20%20%20%20datatoken%20%7B%0A%20%20%20%20%20%20address%0A%20%20%20%20%7D%0A%20%20%20%20publishMarketSwapFee%0A%20%20%20%20liquidityProviderSwapFee%0A%20%20%7D%0A%7D%0A&quot;, &quot;https://v4.subgraph.mainnet.oceanprotocol.com/subgraphs/name/oceanprotocol/ocean-subgraph/graphql?query=%7B%0A%20%20pools(orderBy%3A%20createdTimestamp%2C%20orderDirection%3A%20desc)%20%7B%0A%20%20%20%20id%0A%20%20%20%20datatoken%20%7B%0A%20%20%20%20%20%20address%0A%20%20%20%20%7D%0A%20%20%20%20publishMarketSwapFee%0A%20%20%20%20liquidityProviderSwapFee%0A%20%20%7D%0A%7D%0A&quot;]&#xA;&#xA;    &#xA;    for url in urls:&#xA;        driver.get(url)&#xA;        sleep(20)&#xA;        &#xA;        driver.find_element(by=By.XPATH, value=&quot;//button[contains(@class, 'execute-button')]&quot;).click()&#xA;        sleep(20)&#xA;        &#xA;        polygon = json.loads(driver.find_element(by=By.XPATH, value=&quot;//div[contains(@class, 'result-window')]&quot;).text.replace('\n,', '\n'))&#xA;        print(polygon)&#xA;        for pool in polygon['data']['pools']:&#xA;            if url == urls[0]:&#xA;                datasets.extend([[pool['id'],  pool['datatoken']['address'], 'polygon', pool[&quot;liquidityProviderSwapFee&quot;], pool[&quot;publishMarketSwapFee&quot;]]])&#xA;            if url == urls[1]:&#xA;                datasets.extend([[pool['id'], pool['datatoken']['address'], 'ethereum', pool[&quot;liquidityProviderSwapFee&quot;], pool[&quot;publishMarketSwapFee&quot;]]])&#xA;&#xA;    return datasets  &#xA;</code></pre>&#xA;",15485514,,15485514,2022-06-22 19:05:32,2022-06-22 19:55:37,Get JSON response from GraphQL queries,<selenium-webdriver><web-scraping><graphql>,1,1,0,2022-06-22 17:01:47
72725926,2,,68212971,-1,,<pre><code>companies(&#xA;  where:{&#xA;    company: {&#xA;      offices: {&#xA;        some: {IsActive: {eq: true}}&#xA;      }&#xA;    }&#xA;  }&#xA;)&#xA;</code></pre>&#xA;<p>If filter is boolean then query doesn't work if Offices has IsActive bool field</p>&#xA;,15376350,,10196369,2022-07-02 15:33:13,2022-07-02 15:33:13,"",,0,0,0,2022-06-23 07:08:00
72730583,2,,71539988,0,,"<p>Actually, what you are looking for is Retool - MongoDB bulkWrite query, I am using this approach to update edited records from table component.</p>&#xA;<p><strong>My handler, (bulkUpdateHandler)</strong></p>&#xA;<pre><code>if (myTable?.recordUpdates.length == 0) return;&#xA;&#xA;let records = myTable?.recordUpdates?.map((r) =&gt; ({&#xA;    updateOne: {&#xA;        &quot;filter&quot;: {&#xA;            &quot;_id&quot;: {&#xA;                $oid: r._id&#xA;            }&#xA;        },&#xA;        &quot;update&quot;: {&#xA;            $set: {&#xA;                &quot;name&quot;: r.name,&#xA;                &quot;year&quot;: r.year,&#xA;                &quot;month&quot;: r.month,&#xA;                &quot;day&quot;: r.day&#xA;            }&#xA;        }&#xA;    }&#xA;}));&#xA;&#xA;return records;&#xA;</code></pre>&#xA;<p><strong>Resource query</strong>,</p>&#xA;<p><a href=""https://i.stack.imgur.com/jKddu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jKddu.png"" alt=""Resource query from retool"" /></a></p>&#xA;",5955138,,,,2022-06-23 12:58:53,"",,0,0,0,2022-06-23 12:58:53
72733260,1,,,0,65,"<p>I have developed a java-graphql service that accepts a payload in the below format:</p>&#xA;<pre><code>query GetBook {&#xA;  book {&#xA;    title&#xA;    author&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I want to call this from the apollo client-based app which always generates payload as below:</p>&#xA;<pre><code>{&#xA;  &quot;operationName&quot;: &quot;GetBook&quot;,&#xA;  &quot;variables&quot;: {},&#xA;  &quot;query&quot;: &quot;query GetBook {\n  book { \n    title \n    author\n  }\n}&quot;&#xA;}&#xA;</code></pre>&#xA;<p>Clearly, my service can’t understand this. Is there any library/utility which I can use to transform this payload to the one accepted by my service? if I do this manually, I will also have to do the variable substitution, etc. manually. hence, looking for a cleaner solution here.</p>&#xA;",3061903,,3061903,2022-06-24 03:18:52,2022-06-24 03:18:52,Query payload mismatch between java-graphql server and apollo graphql JS client,<java><graphql><apollo-client><graphql-java>,0,0,0,2022-06-23 16:01:12
72733635,1,,,0,179,"<p>I am new to GraphQL.  I would like to create an application where <code>Users</code> are able to create custom fields  for a <code>Person</code>.  For example, <code>User A</code> may want to track <code>name</code>, and <code>age</code>, and <code>User B</code> may want to track <code>name</code>, <code>favorite_color</code>, and <code>food_allergies</code>.</p>&#xA;<p>I am planning to store these custom fields in a Postgres JSONB column, and have another table(s) <code>field_schema</code> that defines the fields for a <code>User</code> (where the schema is enforced at the application level).</p>&#xA;<p>I would like the client to be able to filter <code>People</code> with GraphQL with filters like <code>age &gt; 5</code> or <code>food_allergies includes 'peanuts'</code>.  Since these fields are dynamic based on the <code>User</code>, I was afraid that GraphQL may not be the best solution.  Can anyone provide some insight in resources or guidance regarding what I am trying to do here in GraphQL?  Or would you advise me to abandon it and go with a REST approach?</p>&#xA;",3418011,,3418011,2022-07-29 11:32:41,2022-07-29 11:32:41,Custom Fields in GraphQL,<graphql>,0,1,0,2022-06-23 16:31:06
72735963,2,,64296700,1,,"<p>Docs don't mention it, but you can simply do this. Works for me.</p>&#xA;<pre><code>      await API.graphql({&#xA;        ...graphqlOperation(createTodo, { input: todo }),&#xA;        authMode: &quot;AMAZON_COGNITO_USER_POOLS&quot;,&#xA;      });&#xA;</code></pre>&#xA;",5561737,,,,2022-06-23 19:59:00,"",,0,0,0,2022-06-23 19:59:00
72739281,2,,72738210,3,,"<p>The way you have written that there, the return value of your <code>query</code> function would be fed into <code>graphqlRequestBaseQuery</code>, which in turn calls <code>graphql-request</code> - but you already have made your request and everything by using the amplify client.</p>&#xA;<p>If you want to use the amplify client, you don't need the graphqlRequestBaseQuery.</p>&#xA;<p>In that case, just use <code>queryFn</code> instead of <code>query</code>:</p>&#xA;<pre><code>endpoints: (builder) =&gt; ({&#xA;  fetchSurveyTitles: builder.query({&#xA;    async queryFn ({ limit = 2147483647, ...params }) {&#xA;      try {&#xA;      const data = await API.graphql({&#xA;        query: listSurveyTitles,&#xA;        variables: { limit, ...params },&#xA;        authMode: GRAPHQL_AUTH_MODE.API_KEY,&#xA;      });&#xA;      // it is important that the object you return either has the form `{data}` or `{error}`&#xA;      return { data }&#xA;    } catch (error: any) {&#xA;      return { error }&#xA;    }&#xA;</code></pre>&#xA;",2075944,,2075944,2022-10-26 18:09:20,2022-10-26 18:09:20,"",,0,8,0,2022-06-24 05:17:29
72759062,2,,72750543,0,,<p>You have created song type and need to pass in your root query it will work for you.</p>&#xA;<pre><code>type RootQuery {&#xA;songs: [Song!]!&#xA;}&#xA;</code></pre>&#xA;,19415920,,,,2022-06-26 05:16:56,"",,0,0,0,2022-06-26 05:16:56
72766303,2,,72566418,3,,"<p>This message &quot;Mutation failed due to permission errors&quot;&#xA;It means that you gave permission to write content, but right after writing, you are trying to read the return, but the return you are trying to read is likely to be read as PUBLISHED.</p>&#xA;<p>Give your Model another permission to read as DRAFT</p>&#xA;",17047654,,,,2022-06-27 01:42:56,"",,0,0,0,2022-06-27 01:42:56
72796789,1,,,0,36,"<p>I am using Amplify in a simple use case to mock an existing frontend.   I have a cutdown schema.graphql as follows:</p>&#xA;<pre><code>input AMPLIFY { globalAuthRule: AuthRule = { allow: public } }&#xA;&#xA;schema {&#xA;  query: Query&#xA;}&#xA;&#xA;type Query {&#xA;  getAirports: [Airport]&#xA;}&#xA;&#xA;type Airport @model {&#xA;  id: Int! @primaryKey &#xA;  code: String!&#xA;  city: String!&#xA;  country: String!&#xA;}&#xA;</code></pre>&#xA;<p>The getAirports query is intended to return all the airports.    I run <code>amplify mock api</code> and it generates all the resolvers.</p>&#xA;<p>When I navigate to http://localhost:20002, I can see the option to use getAirports, however it returns null even when data is present in the mocked database.   The response is</p>&#xA;<pre><code>{&quot;data&quot;:null,&quot;errors&quot;:[{&quot;message&quot;:&quot;Cannot return null for non-nullable field Query.getAirports.&quot;,&quot;locations&quot;:[{&quot;line&quot;:2,&quot;column&quot;:3}],&quot;path&quot;:[&quot;getAirports&quot;]}]}&#xA;</code></pre>&#xA;<p>I'm curious how I can write the schema to have a getAirports query in a way that it returns data a full list of Airports similar to listAirports which is created by default.</p>&#xA;",427995,,427995,2022-06-29 06:58:54,2022-06-29 06:58:54,Querying all objects in Amplify mock api and getting null,<graphql><aws-amplify>,0,0,0,2022-06-29 06:37:08
72806357,1,,,0,17,"<p>I have this query here:</p>&#xA;<pre><code>export const econStatusUpdate = (&#xA;  groupRequestId: string,&#xA;  status: AnforderungEconStatusT&#xA;) =&gt; {&#xA;  console.log(status);&#xA;  return axios({&#xA;    url: envs.graphqlApiEndpoint!,&#xA;    method: &quot;post&quot;,&#xA;    headers: {&#xA;      &quot;x-api-key&quot;: envs.graphqlKey!,&#xA;    },&#xA;    data: {&#xA;      query: print(gql(updateGrouprequest)),&#xA;      variables: {&#xA;        input: {&#xA;          id: groupRequestId,&#xA;          [status]: true,&#xA;        },&#xA;      },&#xA;    },&#xA;  }).then((res) =&gt; console.log(res?.data.data));&#xA;};&#xA;</code></pre>&#xA;<p>And this is how the update looks like:</p>&#xA;<pre><code>export const updateGrouprequest = /* GraphQL */ `&#xA;  mutation UpdateGrouprequest(&#xA;    $input: UpdateGrouprequestInput!&#xA;    $condition: ModelGrouprequestConditionInput&#xA;  ) {&#xA;    updateGrouprequest(input: $input, condition: $condition) {&#xA;      id&#xA;      requesterId&#xA;      groupId&#xA;      accepted&#xA;      message_received&#xA;      consent_granted&#xA;      get_degree&#xA;      createdAt&#xA;      updatedAt&#xA;      _version&#xA;      _deleted&#xA;      _lastChangedAt&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>For some reason this does not update it. It also throws no error. My response what i get is always:</p>&#xA;<pre><code>get_degree&#xA;{&#xA;  updateGrouprequest: {&#xA;    id: '327647e7-c267-4514-ba0e-5bb7fbefe586',&#xA;    requesterId: 'b54807ef-3b53-42ee-a559-0c1042d7a121',&#xA;    groupId: '32cdcbe8-646d-4680-bb64-8172452a46ca',&#xA;    accepted: false,&#xA;    message_received: false,&#xA;    consent_granted: false,&#xA;    get_degree: false,&#xA;    createdAt: '2022-06-29T18:16:31.766Z',&#xA;    updatedAt: '2022-06-29T18:16:31.766Z',&#xA;    _version: 17,&#xA;    _deleted: null,&#xA;    _lastChangedAt: 1656527657777&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Only the time and version changes, what i am i doing wrong?</p>&#xA;<p>Here is also my graphql schema:</p>&#xA;<pre><code>type Grouprequest&#xA;  @model&#xA;  @auth(rules: [{ allow: private }, { allow: public, provider: apiKey }]) {&#xA;  id: ID!&#xA;  requesterId: ID!&#xA;  groupId: ID!&#xA;  accepted: Boolean @default(value: &quot;false&quot;)&#xA;&#xA;  message_received: Boolean @default(value: &quot;false&quot;)&#xA;  consent_granted: Boolean @default(value: &quot;false&quot;)&#xA;  get_degree: Boolean @default(value: &quot;false&quot;)&#xA;}&#xA;</code></pre>&#xA;",10990737,,,,2022-06-29 18:43:40,AWS graphql does not update,<amazon-web-services><graphql><aws-amplify>,0,0,0,2022-06-29 18:43:40
72810995,1,,,0,124,"<p>I have been following a YouTube tutorial to create and sell books online. In the tutorial, there has been a case of designing a GraphQL scheme for the orders. I have seen that the migrate details have been updated and have tried to adhere to the new regulations,I have faced a lot of errors. I tried solving most of them but some remain persistent. As this is my first time working with Graphql and AWS, I cannot progress any further. Youtube Link is provided below:</p>&#xA;<p><a href=""https://youtu.be/cWDJoK8zw58"" rel=""nofollow noreferrer"">https://youtu.be/cWDJoK8zw58</a></p>&#xA;<pre><code>type Book&#xA;  @model(subscriptions: null)&#xA;  @auth(&#xA;    rules: [&#xA;      #allow admins to create, update and delete books&#xA;     { allow: groups, groups: [&quot;Admin&quot;] }&#xA;      # allow all authenticated users to view books&#xA;      { allow: private, operations: [read] }&#xA;      # allow all guest users (not authenticated) to view books&#xA;      { allow: public, operations: [read] }&#xA;    ]&#xA;  )&#xA;   {&#xA;  id: ID!&#xA;  title: String!&#xA;  description: String&#xA;  image: String&#xA;  author: String&#xA;  featured: Boolean&#xA;  price: Float&#xA;  orders: [BookOrder] @hasOne(keyName: &quot;byBook&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type BookOrder&#xA;  @model(queries: null, subscriptions: null)&#xA;  #@key(name: &quot;byBook&quot;, fields: [&quot;book_id&quot;, &quot;order_id&quot;])&#xA;  #@key(name: &quot;byOrder&quot;, fields: [&quot;order_id&quot;, &quot;book_id&quot;])&#xA;  @auth(&#xA;    rules: [&#xA;      # allow admins to create bookorders for customers by using customer email in lambda&#xA;     { allow: owner, identityClaim: &quot;email&quot;, ownerField: &quot;customer&quot; }&#xA;      { allow: groups, groups: [&quot;Admin&quot;] }&#xA;    ]&#xA;  )&#xA;  {&#xA;  id: ID!&#xA;  book_id: ID! @index(name: &quot;byBook&quot;, sortKeyFields: [&quot;book_id, order_id&quot;])&#xA;  order_id: ID! @index(name: &quot;byOrder&quot;, sortKeyFields: [&quot;order_id, book_id&quot;])&#xA;  book: Book @hasOne(fields: [&quot;book_id&quot;])&#xA;  order: Order @hasOne(fields: [&quot;order_id&quot;])&#xA;}&#xA;&#xA;type Order&#xA;  @model(subscriptions: null)&#xA;   @auth(&#xA;   rules: [&#xA;      # only owner can see his orders&#xA;      { allow: owner, identityClaim: &quot;email&quot;, ownerField: &quot;customer&quot; }&#xA;       #allow admins to view orders&#xA;      { allow: groups, groups: [&quot;Admin&quot;] }&#xA;    ]&#xA; ) &#xA;  #@key(name: &quot;byUser&quot;, fields: [&quot;user&quot;])&#xA;  {&#xA;  id: ID!&#xA;  user: String! @index(name: &quot;byUser&quot;, sortKeyfields: [&quot;user&quot;])&#xA;  date: String&#xA;  total: Float&#xA;  books: [BookOrder] @manyToMany(keyName: &quot;byOrder&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;enum OrderStatus {&#xA;  SUCCESS&#xA;  FAILED&#xA;}&#xA;&#xA;input CartItem {&#xA;  id: ID!&#xA;  title: String&#xA;  image: String&#xA;  price: Float&#xA;  amount: Int&#xA;}&#xA;&#xA;input ProcessOrderInput {&#xA;  id: ID!&#xA;  cart: [CartItem]&#xA;  total: Float!&#xA;  token: String!&#xA;  address: String&#xA;}&#xA;&#xA;type Mutation {&#xA;  processOrder(input: ProcessOrderInput!): OrderStatus&#xA;    @function(name: &quot;processPayment-${env}&quot;)&#xA;    @function(name: &quot;createOrder-${env}&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>The error message being shown is as follows:</p>&#xA;<pre><code>n error occurred when pushing the resources to the cloud&#xA; An error occurred during the push operation: /&#xA;Schema validation failed.&#xA;&#xA;Unknown argument &quot;keyName&quot; on directive &quot;@hasOne&quot;.&#xA;&#xA;GraphQL request:21:31&#xA;20 |   price: Float&#xA;21 |   orders: [BookOrder] @hasOne(keyName: &quot;byBook&quot;, fields: [&quot;id&quot;])&#xA;   |                               ^&#xA;22 | }&#xA;&#xA;Unknown argument &quot;sortKeyfields&quot; on directive &quot;@index&quot;. Did you mean &quot;sortKeyFields&quot;?&#xA;&#xA;GraphQL request:56:40&#xA;55 |   id: ID!&#xA;56 |   user: String! @index(name: &quot;byUser&quot;, sortKeyfields: [&quot;user&quot;])&#xA;   |                                        ^&#xA;57 |   date: String&#xA;&#xA;Unknown argument &quot;keyName&quot; on directive &quot;@manyToMany&quot;.&#xA;&#xA;GraphQL request:59:34&#xA;58 |   total: Float&#xA;59 |   books: [BookOrder] @manyToMany(keyName: &quot;byOrder&quot;, fields: [&quot;id&quot;])&#xA;   |                                  ^&#xA;60 | }&#xA;&#xA;Unknown argument &quot;fields&quot; on directive &quot;@manyToMany&quot;.&#xA;&#xA;GraphQL request:59:54&#xA;58 |   total: Float&#xA;59 |   books: [BookOrder] @manyToMany(keyName: &quot;byOrder&quot;, fields: [&quot;id&quot;])&#xA;   |                                                      ^&#xA;60 | }&#xA;&#xA;Directive &quot;@manyToMany&quot; argument &quot;relationName&quot; of type &quot;String!&quot; is required, but it was not provided.&#xA;&#xA;GraphQL request:59:22&#xA;58 |   total: Float&#xA;59 |   books: [BookOrder] @manyToMany(keyName: &quot;byOrder&quot;, fields: [&quot;id&quot;])&#xA;   |                      ^&#xA;60 | } &#xA;⚠️ Review the Amplify CLI troubleshooting guide for potential next steps: https://docs.amplify.aws/cli/project/troubleshooting/&#xA;</code></pre>&#xA;<p>How do I resolve this error? Following the newly updated was-amplify docs, it seems right. But it is not working</p>&#xA;",19449237,,,,2022-07-01 04:30:19,Amplify push GraphQL schema error @connection and @key,<amazon-web-services><graphql><schema><aws-amplify>,1,0,0,2022-06-30 06:06:11
72824398,2,,72810995,0,,"<p>It seems like your schema is missing a few logic statements, there is no need of putting up @manyTomany statements there. The updated Schema can be done as shown below</p>&#xA;<pre><code>type Book&#xA;  @model(subscriptions: null)&#xA;  @auth(&#xA;    rules: [&#xA;      #allow admins to create, update and delete books&#xA;     { allow: groups, groups: [&quot;Admin&quot;] }&#xA;      # allow all authenticated users to view books&#xA;      { allow: private, operations: [read] }&#xA;      # allow all guest users (not authenticated) to view books&#xA;      { allow: public, operations: [read] }&#xA;    ]&#xA;  )&#xA;   {&#xA;  id: ID!&#xA;  title: String!&#xA;  description: String&#xA;  image: String&#xA;  author: String&#xA;  featured: Boolean&#xA;  price: Float&#xA;  orders: [BookOrder] @hasMany(fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type BookOrder&#xA;  @model(queries: null, subscriptions: null)&#xA;  @auth(&#xA;    rules: [&#xA;      # allow admins to create bookorders for customers by using customer email in lambda&#xA;     { allow: owner, identityClaim: &quot;email&quot;, ownerField: &quot;customer&quot; }&#xA;      { allow: groups, groups: [&quot;Admin&quot;] }&#xA;    ]&#xA;  )&#xA;  {&#xA;  id: ID!&#xA;  book_id: ID! @index(name: &quot;byBook&quot;, sortKeyFields: [&quot;order_id&quot;])&#xA;  order_id: ID! @index(name: &quot;byOrder&quot;, sortKeyFields: [&quot;book_id&quot;])&#xA;  book: Book @belongsTo(fields: [&quot;book_id&quot;])&#xA;  order: Order @belongsTo(fields: [&quot;order_id&quot;])&#xA;}&#xA;&#xA;type Order&#xA;  @model(subscriptions: null)&#xA;   @auth(&#xA;   rules: [&#xA;      # only owner can see his orders&#xA;      { allow: owner, identityClaim: &quot;email&quot;, ownerField: &quot;customer&quot; }&#xA;       #allow admins to view orders&#xA;      { allow: groups, groups: [&quot;Admin&quot;] }&#xA;    ]&#xA; )&#xA;  {&#xA;  id: ID!&#xA;  user: String! @index(name: &quot;byUser&quot;)&#xA;  date: String&#xA;  total: Float&#xA;  books: [BookOrder] @hasMany(fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;enum OrderStatus {&#xA;  SUCCESS&#xA;  FAILED&#xA;}&#xA;&#xA;input CartItem {&#xA;  id: ID!&#xA;  title: String&#xA;  image: String&#xA;  price: Float&#xA;  amount: Int&#xA;}&#xA;&#xA;input ProcessOrderInput {&#xA;  id: ID!&#xA;  cart: [CartItem]&#xA;  total: Float!&#xA;  token: String!&#xA;  address: String&#xA;}&#xA;&#xA;type Mutation {&#xA;  processOrder(input: ProcessOrderInput!): OrderStatus&#xA;    @function(name: &quot;processPayment-${env}&quot;)&#xA;    @function(name: &quot;createOrder-${env}&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>You should not be facing the issue now.</p>&#xA;",6996465,,,,2022-07-01 04:30:19,"",,0,0,0,2022-07-01 04:30:19
72828680,2,,64018456,3,,"<p><a href=""https://github.com/aws-amplify/amplify-codegen/issues/311#issuecomment-978026336"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-codegen/issues/311#issuecomment-978026336</a></p>&#xA;<p>removing old graphql api by using <code>amplify remove codegen</code> then select the old one (amplify doesn't support multiple Graphql as of the moment)</p>&#xA;",16778673,,,,2022-07-01 11:37:21,"",,0,0,0,2022-07-01 11:37:21
72829487,1,,,0,41,"<p>I am a bit confused about how authentication works using AWS Amplify (Cognito and AppSync bundle).</p>&#xA;<p>I have setup my authentication method to Cognito and I designed a datamodel using GraphQL API schema.</p>&#xA;<p>It looks almost like this (I skipped some elements has they are not relevant to my question):</p>&#xA;<pre><code>type Grower @model &#xA;@auth(rules: [&#xA;{ allow: owner, ownerField: &quot;admins&quot; },&#xA;{ allow: owner, ownerField: &quot;members&quot;, operations: [read, update, create]},&#xA;{ allow: owner, ownerField: &quot;guests&quot;, operations: [read]}&#xA;]) {&#xA;  code: String!&#xA;  name: String!&#xA;  admins: [String]&#xA;  members: [String]&#xA;  guests: [String]&#xA;  workers: [Workers] @hasMany&#xA;  orchards: [Orchard] @hasMany&#xA;}&#xA;&#xA;type Orchard @model &#xA;@auth(rules: [&#xA;{ allow: owner }&#xA;]){&#xA;  name: String!&#xA;  location: String&#xA;  grower: Grower! @belongsTo&#xA;  harvests: [Harvest] @hasMany&#xA;  visits: [Visit] @hasMany&#xA;}&#xA;</code></pre>&#xA;<p>Given this schema, will a user declared in the Grower.admins field be able to access an Orchard and its fields if it belongs to the Grower?&#xA;And, the opposite, will a user not declared as a member of this Grower (neither guests, member or admins) be able to see the Orchard?</p>&#xA;<p>Basically, I would like to understand if my authentication rules 'propagate' throught nested models.</p>&#xA;<p>Any comment about this datastructure is welcomed.</p>&#xA;",9178078,,,,2022-07-01 12:47:01,"Amplify, Cognito authentication and GraphQL API",<graphql><amazon-cognito><amplify>,0,0,0,2022-07-01 12:47:01
72836212,1,,,0,289,"<p>I have this graphql query to create a new item. This query has worked for months, then I left the app for a while, and suddenly it doesn't work now. It gives me the error above which is off for a creation request as it should create the ID.</p>&#xA;<p>Error:</p>&#xA;<pre><code>Variable 'input' has coerced Null value for NonNull type 'ID!'&#xA;</code></pre>&#xA;<p>Code:</p>&#xA;<pre><code>  const addArticle = async (event) =&gt; {&#xA;    const input = { ...article, data: JSON.stringify(article.data) };&#xA;    return await API.graphql({&#xA;      query: createArticle,&#xA;      variables: { input: input },&#xA;      authMode: &quot;AMAZON_COGNITO_USER_POOLS&quot;,&#xA;    });&#xA;  };&#xA;</code></pre>&#xA;<p>GraphQL:</p>&#xA;<pre><code>type Article&#xA;  @model&#xA;  @key(name: &quot;byTag&quot;, fields: [&quot;tagId&quot;, &quot;dateWritten&quot;])&#xA;  @key(name: &quot;bySource&quot;, fields: [&quot;sourceId&quot;, &quot;dateWritten&quot;]) {&#xA;  id: ID!&#xA;  link: AWSURL!&#xA;  title: String!&#xA;  dateWritten: String!&#xA;  articleDate: AWSDateTime&#xA;  data: AWSJSON!&#xA;  approved: Boolean!&#xA;  admin: Boolean!&#xA;  tagId: ID!&#xA;  creatorId: ID!&#xA;  creator: User @connection(fields: [&quot;creatorId&quot;])&#xA;  sourceId: ID!&#xA;  source: Source @connection(fields: [&quot;sourceId&quot;])&#xA;}&#xA;</code></pre>&#xA;",1087990,,,,2022-07-02 13:01:52,AWS Amplify GraphQL Variable 'input' has coerced Null value for NonNull type 'ID!',<graphql><aws-amplify>,1,0,0,2022-07-02 03:19:46
72837165,2,,72827599,1,,<p>Looks fine to me. You probably inserted an expired token. Have you tried turning on the create permission for authenticated role?</p>&#xA;,19465515,,19465515,2022-07-02 07:11:43,2022-07-02 07:11:43,"",,0,1,0,2022-07-02 07:10:06
72838577,2,,72827599,0,,"<p>Finally I solved the issue by allowing &quot;find&quot; method in user permission tab.<a href=""https://i.stack.imgur.com/SI3jd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/SI3jd.png"" alt=""enter image description here"" /></a></p>&#xA;",15389957,,,,2022-07-02 11:11:14,"",,0,0,0,2022-07-02 11:11:14
72880085,1,,,1,236,"<p>I have a variety of use cases where I'm trying to determine whether to go with SSR (Server-Side Rendering), or ISR (Incremental Static Regeneration) with Next.js, AWS DynamoDB, and Graphql.</p>&#xA;<p>My website is a job board.</p>&#xA;<p>Use cases:</p>&#xA;<ol>&#xA;<li>Fetching a job listing with dynamic routes <code>[id]</code>. URL example <code>/jobs/[id]</code></li>&#xA;<li>Fetching an employer public profile with dynamic routes.  <code>[id]</code>. URL example <code>/employer/[id]</code></li>&#xA;<li>Populating the job board with lists of jobs. URL example <code>/jobs/</code></li>&#xA;<li>Fetching the &quot;Applications&quot;, on the logged in employer's account. URL example <code>/employer/manage-applications</code>.</li>&#xA;<li>Fetching all the job listings of the logged in employer's account. URL example <code>/employer/manage-vacancies</code>.</li>&#xA;<li>Fetching the logged in users account profile information for them to edit and update. URL example <code>/employer/manage-profile</code>.</li>&#xA;</ol>&#xA;",19206079,,,,2022-07-06 08:35:13,NextJS Server-Side Rendering vs Incremental Static Regeneration with AWS Amplify,<next.js><graphql><amazon-dynamodb><aws-amplify><server-side-rendering>,1,0,0,2022-07-06 08:20:27
72902413,2,,68257815,0,,"<pre class=""lang-py prettyprint-override""><code>import requests import json import os&#xA;&#xA;user = os.getenv(&quot;USERNAME&quot;) &#xA;key = os.getenv(&quot;KEY&quot;) &#xA;pwd = os.getenv(&quot;PASSWORD&quot;)&#xA;&#xA;endpoint = f&quot;https://pkg-graphql-api.*****.com/{user}&quot; &#xA;headers = {&quot;Authorization&quot;: f&quot;Basic {key}&quot;}&#xA;&#xA;query = {&#xA;    IPublications(abstract: &quot;metabolics&quot;) {    &#xA;        ICitedBy(filterByYear_lte: 2020) {&#xA;            isbn&#xA;            count&#xA;            pkgId&#xA;            normalizedTitle&#xA;            IPublishedInConferenceInstanceIds&#xA;        }&#xA;    } &#xA;}&#xA;&#xA;r = requests.post(endpoint, json={&quot;query&quot;: query}, headers=headers) &#xA;if r.status_code == 200:&#xA;    print(json.dumps(r.json(), indent=2)) &#xA;else:&#xA;    raise Exception(f&quot;Query failed to run with a {r.status_code}{r.text}.&quot;)&#xA;</code></pre>&#xA;",19505132,,14353529,2022-07-15 01:05:32,2022-07-15 01:05:32,"",,0,1,0,2022-07-07 18:06:54
72914819,1,,,1,46,"<p>My project is in nestjs/graphql. I have a similar enum type to the following:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>enum UserRoles {&#xA;    admin = 'admin',&#xA;    superAdmin = 'super admin'&#xA;}&#xA;&#xA;registerEnumType(UserRoles, { name: 'UserRoles' })&#xA;</code></pre>&#xA;<p>In the database, user roles are stored as the values of this enum i.e. <code>'admin'</code> and <code>'super admin'</code>. However graphql takes enum elements from enum keys and has generated</p>&#xA;<pre class=""lang-js prettyprint-override""><code>enum UserRoles {&#xA;    admin&#xA;    superAdmin&#xA;}&#xA;</code></pre>&#xA;<p>However, then I'm getting conflicts between <code>'superAdmin'</code> and <code>'super admin'</code>.</p>&#xA;<p>I tried rewriting my enum as</p>&#xA;<pre class=""lang-js prettyprint-override""><code>enum UserRoles {&#xA;    admin = 'admin',&#xA;    'super admin' = 'super admin'&#xA;}&#xA;</code></pre>&#xA;<p>But then, as you can guess, graphql could not parse this and throwed an error while building.</p>&#xA;<p>How can I handle this kind of situations. What are the possible solutions except changing every document in the database from <code>'super admin'</code> to <code>'superAdmin'</code>.</p>&#xA;",13379374,,,,2022-07-08 17:12:57,Handling enums whose values contain a white space in GraphQL,<node.js><typescript><mongoose><graphql><nestjs>,0,0,0,2022-07-08 17:12:57
72932874,1,73050313,,0,299,"<p>I'm working with existing amplify graphql api that is in production, the task I was given was to move the amplify to different aws account for development purposes. I've spent about 3 days to get things right but when I do update the schema for graphql I got an error on my cli stated</p>&#xA;<pre class=""lang-bash prettyprint-override""><code>✖ An error occurred when pushing the resources to the cloud&#xA; An error occurred during the push operation: [&quot;Index: 1 State: {\&quot;deploy\&quot;:\&quot;waitingForDeployment\&quot;} Message: Resource is not in the state stackUpdateComplete&quot;]&#xA;</code></pre>&#xA;<p>looking more in cloud formation event log, it said</p>&#xA;<pre class=""lang-bash prettyprint-override""><code>Circular dependency between resources: [BuildingAdminBuilding, BuildingAdmin, ConnectionStack, CustomResourcesjson]&#xA;</code></pre>&#xA;<p>the mentioned resources are defined as</p>&#xA;<pre class=""lang-js prettyprint-override""><code>type BuildingAdminBuilding @model(subscriptions: null) @aws_cognito_user_pools @auth(rules: [&#xA;  {&#xA;    provider: apiKey, allow: public, operations: [read, create, update, delete]&#xA;  },&#xA;  {&#xA;    # TODO TEMP ONLY - FOR TESTING UNTIL PROPER GROUPS ARE SETUP&#xA;    provider: userPools, allow: private, operations: [read, create, update, delete]&#xA;  },&#xA;]) {&#xA;  id: ID!&#xA;  buildingAdmin: BuildingAdmin! @auth(rules: [&#xA;    {&#xA;      provider: apiKey, allow: public, operations: [read, create, update, delete]&#xA;    },&#xA;    {&#xA;      # TODO TEMP ONLY - FOR TESTING UNTIL PROPER GROUPS ARE SETUP&#xA;      provider: userPools, allow: private, operations: [read, create, update, delete]&#xA;    },&#xA;  ]) @connection(name: &quot;BuildingAdminBuilding&quot;)&#xA;  # building: Building! @connection(name: &quot;BuildingBuildingAdmin&quot;) @auth(rules: [&#xA;  #   {&#xA;  #     provider: apiKey, allow: public, operations: [read, create, update, delete]&#xA;  #   },&#xA;  #   {&#xA;  #     # TODO TEMP ONLY - FOR TESTING UNTIL PROPER GROUPS ARE SETUP&#xA;  #     provider: userPools, allow: private, operations: [read, create, update, delete]&#xA;  #   },&#xA;  # ])&#xA;}&#xA;&#xA;type BuildingAdmin&#xA;@model(subscriptions: null)&#xA;@aws_cognito_user_pools @auth(rules: [&#xA;  {&#xA;    provider: apiKey, allow: public, operations: [read, create, update, delete]&#xA;  },&#xA;  {&#xA;    provider: userPools, allow: private, operations: [read, create, update, delete]&#xA;  }&#xA;]) {&#xA;  id: ID!&#xA;  user: User @connection(name: &quot;BuildingAdminUser&quot;)&#xA;  buildings: [BuildingAdminBuilding] @auth(rules: [&#xA;    {&#xA;      provider: apiKey, allow: public, operations: [read, create, update, delete]&#xA;    },&#xA;    {&#xA;      # TODO TEMP ONLY - FOR TESTING UNTIL PROPER GROUPS ARE SETUP&#xA;      provider: userPools, allow: private, operations: [read, create, update, delete]&#xA;    },&#xA;  ])  @connection(name: &quot;BuildingAdminBuilding&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>I'm not sure why it triggers circular dependency, at first I thought it was the attributes type but other model works ok. do you guys have any ideas?</p>&#xA;",7022122,,7022122,2022-07-11 01:41:55,2022-07-20 10:50:07,Amplify API GraphQL Circular Resources Dependency,<typescript><amazon-web-services><graphql><aws-amplify><aws-amplify-cli>,1,0,0,2022-07-11 01:10:54
72933332,2,,68242168,0,,"<p>I was getting the same error message, this worked for me:</p>&#xA;<p>There is a good example within the Hasura Console (not available on the Hasura website to my knowledge) --<strong>see image</strong>. <em>It's much easier to implement the many-to-many with SQL</em>.</p>&#xA;<p>Take the SQL in the example and modify to your needs (my mods at the bottom for example). You may get an error appear once you execute your own SQL, that's okay.</p>&#xA;<p>Refresh and navigate to your new schema (in this case I created a 'public' schema in the same SQL query). Then click <strong>track</strong> for 'Untracked tables or views' then <strong>track</strong> again for 'Untracked foreign-key relationships'.</p>&#xA;<p>You should now be able to add rows without any issues.</p>&#xA;<p><a href=""https://i.stack.imgur.com/0n2dt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0n2dt.png"" alt=""enter image description here"" /></a></p>&#xA;<p>My example:</p>&#xA;<pre><code>    CREATE SCHEMA public;&#xA;&#xA;-- Create Tables&#xA;CREATE TABLE public.products (&#xA;    id serial PRIMARY KEY,&#xA;    name text NOT NULL,&#xA;    price numeric NOT NULL&#xA;);&#xA;&#xA;CREATE TABLE public.orders (&#xA;    id serial PRIMARY KEY,&#xA;    title text NOT NULL,&#xA;    author_name text NOT NULL&#xA;);&#xA;&#xA;CREATE TABLE order_product (&#xA;    id serial PRIMARY KEY,&#xA;    order_id integer REFERENCES public.orders(id) NOT NULL,&#xA;    product_id integer REFERENCES public.products(id) NOT NULL&#xA;);&#xA;</code></pre>&#xA;",13724437,,,,2022-07-11 03:13:26,"",,0,0,0,2022-07-11 03:13:26
72943284,1,,,0,197,"<p>hope you are doing great,</p>&#xA;<p>I created a query with an optional parameter, a list of ids, such list was described as an array and acted as a filter, which only retrieves the data that contains any of the ids included in the array.</p>&#xA;<p>Now if I call the query only with the required parameter it works fine, but when I include the array in the request it throws a type error. I am not sure how can I fix this situation.</p>&#xA;<p><em>graphQL file:</em></p>&#xA;<pre><code>items(&#xA;    padId: ID!&#xA;    locationIds: [ID]&#xA;  ): [item] @http(url: &quot;https://api-${env}/item&quot;)&#xA;</code></pre>&#xA;<p><em>appSync request</em></p>&#xA;<pre><code>&#xA;items(query: {&#xA;  padId: &quot;63879aed-8f7a-4230-8215-921333ba198d&quot;, &#xA;  locationIds: [&quot;2b3a5532-73b1-4248-95d9-c91506d73493&quot;]&#xA;})&#xA;</code></pre>&#xA;<p><em>appSync answer</em></p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;items&quot;: null&#xA;  },&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;path&quot;: [&#xA;        &quot;items&quot;&#xA;      ],&#xA;      &quot;data&quot;: null,&#xA;      &quot;errorType&quot;: &quot;MappingTemplate&quot;,&#xA;      &quot;errorInfo&quot;: null,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 2,&#xA;          &quot;column&quot;: 3,&#xA;          &quot;sourceName&quot;: null&#xA;        }&#xA;      ],&#xA;      &quot;message&quot;: &quot;Value for field '$[params][query]' not a valid type.&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;&#xA;</code></pre>&#xA;",13229482,,,,2022-07-11 18:47:39,How to pass an array as an argument for appSync query?,<graphql><aws-appsync>,0,0,0,2022-07-11 18:47:39
72946136,2,,54707877,1,,"<p>I ran into this problem because my <strong>jest.config.js</strong> had an incorrect transform. Per the <a href=""https://www.npmjs.com/package/babel-jest"" rel=""nofollow noreferrer"">babel-jest docs</a> add:</p>&#xA;<pre><code>&quot;transform&quot;: {&#xA;  &quot;\\.[jt]sx?$&quot;: &quot;babel-jest&quot;&#xA;},&#xA;</code></pre>&#xA;",10302179,,,,2022-07-12 01:27:19,"",,0,0,0,2022-07-12 01:27:19
72953340,1,,,0,241,"<p>Category: <code>API.graphql</code> mutation</p>&#xA;<p>Amplify Version: 8.0.1</p>&#xA;<p>Service: <code>AppSync</code></p>&#xA;<p><strong>Research</strong></p>&#xA;<p>I've come across <a href=""https://github.com/aws-amplify/amplify-category-api/issues/443"" rel=""nofollow noreferrer"">this documentation</a> that notes batch is not supported, and thus requires a custom resolver.</p>&#xA;<p>I've also come across <a href=""https://github.com/aws-amplify/amplify-category-api/issues/273"" rel=""nofollow noreferrer"">this feature request</a> for cascading delete with DynamoDB Streams and Lambda.</p>&#xA;<p>I see <a href=""https://docs.amplify.aws/cli/graphql/examples-and-solutions/#batch-put-custom-resolver"" rel=""nofollow noreferrer"">there is an example</a> for a batch put custom resolver.</p>&#xA;<p><strong>Problem:</strong></p>&#xA;<p>There is a <code>@model</code> for <code>JobListing</code>, and one for <code>Image</code> within the Amplify Graphql Schema. They have a <code>ManyToMany</code> Relationship. When I delete an <code>Image</code> record from DynamoDB, all <code>JobListingImage</code> records for that image need to be deleted as well.</p>&#xA;<p>I've considered looping through the <code>JobListingImage</code> records, but there could be a possiblity where there are 100,000 records to query and then delete.</p>&#xA;<p><strong>Code Snippet of failed attempt</strong></p>&#xA;<pre><code>   const handleDelete = async (id, name) =&gt; {&#xA;     try {&#xA;       await API.graphql({&#xA;         query: deleteJobListingImages,&#xA;         variables: {&#xA;           input: {&#xA;             imageID: id,&#xA;             imageemployerID: Auth.user.attributes[&quot;custom:id&quot;],&#xA;           },&#xA;         },&#xA;         authMode: &quot;AMAZON_COGNITO_USER_POOLS&quot;,&#xA;       });&#xA;       await Storage.remove(name, {&#xA;         level: &quot;protected&quot;,&#xA;       });&#xA;       await API.graphql({&#xA;         query: deleteImage,&#xA;         variables: {&#xA;           input: {&#xA;             id: id,&#xA;             employerID: Auth.user.attributes[&quot;custom:id&quot;],&#xA;           },&#xA;         },&#xA;         authMode: &quot;AMAZON_COGNITO_USER_POOLS&quot;,&#xA;       });  &#xA;     } catch (err) {&#xA;       console.log(err);&#xA;&#xA;     }&#xA;   }; &#xA;</code></pre>&#xA;<p><strong>Question</strong></p>&#xA;<p>How do I delete all the <code>JobListingImages</code> that refer to the <code>Image</code> id I am deleting?</p>&#xA;",19206079,,,,2022-07-12 13:43:41,AWS Amplify Graphql Mutations - Batch Delete Join Table Item When Original Item Is Deleted,<amazon-web-services><graphql><amazon-dynamodb><aws-amplify><aws-appsync>,0,2,0,2022-07-12 13:43:41
73039545,1,,,0,76,"<p>I have created a basic AWS AppSync API. The schema looks like below:</p>&#xA;<pre><code>type Account {&#xA;    id: Int&#xA;    name: String&#xA;    accountType: String&#xA;}&#xA;&#xA;type Query {&#xA;    getListOfAccounts: [Account]&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;}&#xA;</code></pre>&#xA;<p>The data-source for my API is AWS lambda. I have created resolver for the field &quot;getListOfAccounts:[Account]. The resolver template looks like below:</p>&#xA;<p>Request Mapping:</p>&#xA;<pre><code>{&#xA;  &quot;version&quot; : &quot;2017-02-28&quot;,&#xA;  &quot;operation&quot;: &quot;Invoke&quot;,&#xA;  &quot;payload&quot;:  {&#xA;        &quot;field&quot;:&quot;getListOfAccounts&quot;&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Response Mapping:</p>&#xA;<pre><code>$util.toJson($context.result)&#xA;</code></pre>&#xA;<p>When I executed the the following Query:</p>&#xA;<pre><code>query MyQuery {&#xA;  getListOfAccounts {&#xA;    accountType&#xA;    id&#xA;    name&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>I get the following response:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;getListOfAccounts&quot;: [&#xA;      {&#xA;        &quot;accountType&quot;: null,&#xA;        &quot;id&quot;: null,&#xA;        &quot;name&quot;: null&#xA;      },&#xA;      {&#xA;        &quot;accountType&quot;: null,&#xA;        &quot;id&quot;: null,&#xA;        &quot;name&quot;: null&#xA;      },&#xA;      {&#xA;        &quot;accountType&quot;: null,&#xA;        &quot;id&quot;: null,&#xA;        &quot;name&quot;: null&#xA;      },&#xA;      {&#xA;        &quot;accountType&quot;: null,&#xA;        &quot;id&quot;: null,&#xA;        &quot;name&quot;: null&#xA;      },&#xA;      {&#xA;        &quot;accountType&quot;: null,&#xA;        &quot;id&quot;: null,&#xA;        &quot;name&quot;: null&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>In the logs, I see that the entire json is returned correctly from the lambda, where none of the properties are null. Looks like I'm missing something in the resolver mapping template. Please advise/help.</p>&#xA;<p>Thanks</p>&#xA;",19580671,,,,2022-07-19 15:17:29,Appsync Queries - Returns correct number of items in Array but all array elements are null,<json><aws-lambda><graphql><aws-appsync><resolver>,0,1,0,2022-07-19 15:17:29
73041694,1,,,0,54,"<p>I am trying to set up a Lambda RIE (Run Lambda locally inside a Docker container).</p>&#xA;<p>This Lambda basically contains and Apollo server.</p>&#xA;<p>I am trying to create a Graph Ql based server inside a Lambda and deploy that into a docker container.</p>&#xA;<p>I have used the following approach which is failing. Any help is appreciated.</p>&#xA;<p><strong>Approach</strong></p>&#xA;<ol>&#xA;<li>Create an apollo-server-lambda(npm module) based lambda function that exposes an Apollo Server for graphQl queries.</li>&#xA;<li>Dockerize this Lambda function for local testing using the concept of Lambda Runtime Interface Emulator(RIE)</li>&#xA;<li>Run and Test the container locally for GraphQl queries.</li>&#xA;</ol>&#xA;<p>PFB the lambda handler file code and the dockerfile.</p>&#xA;<p><strong>Dockerfile</strong></p>&#xA;<pre><code>FROM amazon/aws-lambda-nodejs:12&#xA;COPY index.js package*.json ./&#xA;RUN npm install&#xA;CMD [ &quot;index.handler&quot; ]&#xA;</code></pre>&#xA;<p><strong>Lambda handler file - index.js</strong></p>&#xA;<pre><code>  const server = new ApolloServer({&#xA;    typeDefs,&#xA;    resolvers,&#xA;    context: ({ event, context, express }) =&gt; ({&#xA;      headers: event.headers,&#xA;      functionName: context.functionName,&#xA;      event,&#xA;      context,&#xA;      expressRequest: express.req,&#xA;    }),&#xA;    debug: true,&#xA;  });&#xA;&#xA;exports.handler = (event, context, callback) =&gt; {&#xA;  console.log(&quot;EVENT v1\n&quot; + JSON.stringify(event, null, 2))&#xA;  console.log(&quot;CONTEXT v1\n&quot; + JSON.stringify(context, null, 2))&#xA;&#xA;  // tell AWS lambda we do not want to wait for NodeJS event loop&#xA;  // to be empty in order to send the response&#xA;  context.callbackWaitsForEmptyEventLoop = false;&#xA;&#xA;  // process the request&#xA;  // return handler(event, context, callback);&#xA;  console.log(&quot;\n ********************* EVENT v2 *************\n&quot; + JSON.stringify(event, null, 2))&#xA;  console.log(&quot;\n ********************* CONTEXT v2 **********\n&quot; + JSON.stringify(context, null, 2))&#xA;&#xA;  if (!event.requestContext) {&#xA;    event.requestContext = context;&#xA;  }&#xA;  const graphQlHandler = server.createHandler({&#xA;    cors: {&#xA;        origin: &quot;*&quot;,&#xA;        // credentials:true,&#xA;        methods:[&quot;POST&quot;,&quot;GET&quot;],&#xA;        allowedHeaders: [&quot;Content-Type&quot;, &quot;Origin&quot;, &quot;Accept&quot;]&#xA;    }&#xA;});&#xA;  return graphQlHandler(event, context, callback);&#xA;&#xA;};&#xA;</code></pre>&#xA;<p>The <strong>issue</strong> is that I constantly receive the following error with the above code:&#xA;<a href=""https://i.stack.imgur.com/c619X.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/c619X.png"" alt=""Error"" /></a></p>&#xA;<p>My postman query is as follows:&#xA;<a href=""https://i.stack.imgur.com/poa5Y.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/poa5Y.png"" alt=""Postman query"" /></a></p>&#xA;<p>Regards,&#xA;Aarushi</p>&#xA;",7604176,,,,2022-07-19 18:10:45,Dockerize an Apollo Server Lambda to server Graph Ql query,<node.js><docker><aws-lambda><graphql><apollo-server>,0,1,0,2022-07-19 18:10:45
73075346,1,,,0,15,"<p>I am working on a project using AWS Amplify that roughly mirrors Google Classroom: there are classrooms with students and teachers where only students and teachers within the classroom can create, read, update, or delete classroom data.</p>&#xA;<p>I've looked into using groups as a way to split permissions within the Cognito user pool, but I can't see an efficient way of doing this on a fluid scale of classrooms (i.e. would there have to be a new group for every classroom created? and how would one go about implementing that?). Creating the groups &quot;Teachers&quot; and &quot;Students&quot; seems to split the entire userbase into two, whereas the real power that teachers have is only in the realm of their own classroom over their students.</p>&#xA;<p>I've also considered implementing the Cognito users as their own types in the GraphQL schema, but I'm not sure how to go about linking the two and whether it would be efficient since Amplify and AppSync already seem to have a connection between the two.</p>&#xA;<p>Any potential solutions or workarounds would be appreciated :)</p>&#xA;",8167400,,8167400,2022-07-22 05:07:05,2022-07-22 05:07:05,How to implement Google Classroom type CRUD privileges using AWS Amplify and Cognito,<amazon-web-services><graphql><amazon-cognito><aws-amplify>,0,0,0,2022-07-22 05:06:41
73075564,1,,,0,102,"<p>With the following type:</p>&#xA;<pre><code>type Task {&#xA;    id: ID&#xA;    owner: String&#xA;    title: String&#xA;    description: String&#xA;    taskStatus: String&#xA;    priority: Priority&#xA;    department: String&#xA;    classification: Int&#xA;    ownerIds: [String]&#xA;}&#xA;&#xA;enum Priority {&#xA;    none&#xA;    lowest&#xA;    low&#xA;    medium&#xA;    high&#xA;    highest&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>Below Subscription filter does't seem to work with a property of <code>ownerIds: [String]</code>.&#xA;If I add a record with ownerIds <code>foo</code> it will not show me the result.</p>&#xA;<pre><code>#set($userId = $ctx.identity.claims[&quot;cognito:username&quot;])&#xA;$extensions.setSubscriptionFilter({&#xA;&quot;filterGroup&quot;: [&#xA;  {&#xA;    &quot;filters&quot; : [&#xA;      {&#xA;        &quot;fieldName&quot;: &quot;ownerIds&quot;,&#xA;        &quot;operator&quot;: &quot;in&quot;,&#xA;        &quot;value&quot;: [&quot;foo&quot;]&#xA;      }&#xA;    ]&#xA;  }&#xA;]&#xA;})&#xA;$util.toJson($context.result)&#xA;</code></pre>&#xA;<p>When I change the filter fieldName to <code>priority</code> and the value is <code>high</code>, it works as expected.</p>&#xA;<p>Does the <code>in</code> operator only work with Enums and not String arrays?</p>&#xA;",806094,,,,2022-07-22 05:40:25,Appsync subscription filtering issue when filtering lists using IN operator and dynamic values,<aws-appsync><graphql-subscriptions><aws-appsync-resolver><subscription-filtering>,0,0,0,2022-07-22 05:40:25
73083108,1,,,0,43,"<p>I am using Stepzen for GraphQL queries. I signed up with my GitHub account, ran npm install -g stepzen, then stepzen login, then provided my account name and my admin key but getting this error:&#xA;<code>Error: We are unable to verify your account details. Could you please check them? (Error: An unexpected error occurred. FetchError: request to  https://bourne.stepzen.io/cli/admin/account failed, reason: Hostname/IP  does not match certificate's altnames: Host: bourne.stepzen.io. is not in  the cert's altnames: DNS:*.fortinet.com)</code>&#xA;I am SUPER sure I am copying my admin key correctly but it's still not working. Any ideas?&#xA;<a href=""https://stepzen.com/docs/quick-start/install-and-setup"" rel=""nofollow noreferrer"">https://stepzen.com/docs/quick-start/install-and-setup</a></p>&#xA;",16537918,,,,2022-07-22 16:00:50,Fail to use Stepzen admin key,<graphql>,0,0,0,2022-07-22 16:00:50
73085910,1,,,0,155,"<p><br />&#xA;I've the next GraphQL schema:</p>&#xA;<pre><code>type A {&#xA;    field1: [B!]&#xA;}&#xA;&#xA;type B {&#xA;    field2: C&#xA;}&#xA;&#xA;type C {&#xA;    field3: String&#xA;}&#xA;&#xA;type Query {&#xA;    getAll() [A!]&#xA;}&#xA;</code></pre>&#xA;<p>The query <code>getAll</code> get all types <code>A</code> from the database, <code>type A</code> has a <code>field1</code> that is an array of <code>type B</code>. Then <code>type B</code> has a field that is the <code>type C</code>.</p>&#xA;<p>I have set a field resolver for <code>field1</code> of <code>type A</code>, it is a direct lambda resolver using batch invoke. Also, I created another field resolver for <code>field2</code> of <code>type B</code>, which is another direct lambda resolver that also uses batch invoke.</p>&#xA;<p>he problem is that when the execution of the second direct lambda resolver finishes, the response is not matched.<br />&#xA;The execution of the function is done correctly and I know that the result list&#xA;should match the size and order of the request payload entries, in fact in the&#xA;execution I check that the length of the event array is the same that the array&#xA;of results, but in the logs of the AppSync API when viewing the <code>ResponseMapping</code>&#xA;type log there is no result, and it also does not show errors.</p>&#xA;<p>Here's the response log of <code>field2</code> of <code>type B</code> (<code>type C</code>):</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    &quot;logType&quot;: &quot;ResponseMapping&quot;,&#xA;    &quot;path&quot;: [&#xA;        &quot;getStudents&quot;,&#xA;        &quot;0&quot;,&#xA;        &quot;enrollments&quot;,&#xA;        &quot;0&quot;,&#xA;        &quot;status&quot;&#xA;    ],&#xA;    &quot;fieldName&quot;: &quot;status&quot;,&#xA;    &quot;requestId&quot;: &quot;9c5233f8-2072-43da-8209-7f2bb9183f12&quot;,&#xA;    &quot;context&quot;: {&#xA;        &quot;arguments&quot;: {},&#xA;        &quot;source&quot;: {&#xA;            &quot;id&quot;: 2,&#xA;            &quot;sub&quot;: &quot;104c1b76-a409-11ec-8872-02485b184267&quot;,&#xA;            &quot;studentId&quot;: 4,&#xA;            &quot;syllabusId&quot;: 1,&#xA;            &quot;statusId&quot;: 1&#xA;        },&#xA;        &quot;stash&quot;: {},&#xA;        &quot;outErrors&quot;: []&#xA;    },&#xA;    &quot;fieldInError&quot;: false,&#xA;    &quot;errors&quot;: [],&#xA;    &quot;parentType&quot;: &quot;Enrollment&quot;&#xA;}&#xA;</code></pre>&#xA;<p>The response of <code>field1</code> of <code>type A</code> (array of <code>type B</code>):</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    &quot;logType&quot;: &quot;ResponseMapping&quot;,&#xA;    &quot;path&quot;: [&#xA;        &quot;getStudents&quot;,&#xA;        &quot;0&quot;,&#xA;        &quot;enrollments&quot;&#xA;    ],&#xA;    &quot;fieldName&quot;: &quot;enrollments&quot;,&#xA;    &quot;requestId&quot;: &quot;9c5233f8-2072-43da-8209-7f2bb9183f12&quot;,&#xA;    &quot;context&quot;: {&#xA;        &quot;arguments&quot;: {},&#xA;        &quot;source&quot;: {&#xA;            &quot;id&quot;: 4,&#xA;            &quot;sub&quot;: &quot;328b683a-612a-4052-b9ef-6d858cd1ceeb&quot;,&#xA;            &quot;curp&quot;: &quot;AEML980426HDFRRN05&quot;,&#xA;            &quot;name&quot;: &quot;Leo&quot;,&#xA;            &quot;paternalSurname&quot;: &quot;Arellano&quot;,&#xA;            &quot;email&quot;: &quot;leo@gmail.com&quot;,&#xA;            &quot;institutionId&quot;: 4,&#xA;            &quot;nationalityCode&quot;: &quot;MX&quot;&#xA;        },&#xA;        &quot;result&quot;: [&#xA;            {&#xA;                &quot;id&quot;: 2,&#xA;                &quot;sub&quot;: &quot;104c1b76-a409-11ec-8872-02485b184267&quot;,&#xA;                &quot;studentId&quot;: 4,&#xA;                &quot;syllabusId&quot;: 1,&#xA;                &quot;statusId&quot;: 1&#xA;            }&#xA;        ],&#xA;        &quot;stash&quot;: {},&#xA;        &quot;outErrors&quot;: []&#xA;    },&#xA;    &quot;fieldInError&quot;: false,&#xA;    &quot;errors&quot;: [],&#xA;    &quot;parentType&quot;: &quot;Student&quot;,&#xA;    &quot;transformedTemplate&quot;: &quot;[{id=2, sub=104c1b76-a409-11ec-8872-02485b184267, studentId=4, syllabusId=1, statusId=1}]&quot;&#xA;}&#xA;</code></pre>&#xA;<p>Could someone help me to know if I can chain or nest (I don't know what is the right word to say it) the batch invoke.&#xA;Or if maybe I have to do some extra configuration, until now the configuration that I have done to the resolvers has been to check &quot;Enable batching&quot; option and set the batch size to 200.&#xA;Or if I have to add some mapping template (the two lambdas are direct resolvers) but that doesn't seem to me to be the cause of it failing since the first resolver is correctly matched to response.</p>&#xA;<p>Another question would be if it is better deploy pipeline solver to the query <code>getAll()</code>? (For some reason that can't nest or chain the batch invocation in direct lambda resolvers)</p>&#xA;<p>Thanks for your time and support!</p>&#xA;",10043149,,10043149,2022-07-23 01:55:17,2022-07-23 01:55:17,AWS AppSync chain or nest batch invoke in direct lambda resolvers,<amazon-web-services><aws-lambda><graphql><aws-appsync><aws-appsync-resolver>,0,0,0,2022-07-22 20:48:56
73087062,1,,,0,18,"<p>I have a DynamoDB table with a list of comments. I have two columns in the table for likes and dislikes (both integers denoting the number of likes or dislikes each comment has garnered).</p>&#xA;<p>I recently learned how to mutate an item. That kind of mutation just changes the updatedAt column in my table.</p>&#xA;<p>But what if I want to write a function that increases the like count by 1 or decreases it by 1?</p>&#xA;<p>Is this possible with GraphQL and DynamoDB?</p>&#xA;<p>I'm pretty new to this but this link it seem like maybe such a simple operation is not possible? <a href=""https://github.com/aws-amplify/amplify-cli/issues/3681"" rel=""nofollow noreferrer"">https://github.com/aws-amplify/amplify-cli/issues/3681</a></p>&#xA;",3807846,,,,2022-07-22 23:48:56,Incrementing/decrementing mutation using GraphQL and DynamoDB?,<graphql><amazon-dynamodb>,0,1,0,2022-07-22 23:48:56
73093714,1,,,0,211,"<p>The schemas are as follows:</p>&#xA;<pre><code>type User @model @auth(rules: [{allow: public}]) {&#xA;  id: ID!&#xA;  userEmail: AWSEmail!&#xA;  userName: String!&#xA;  userPassword: String!&#xA;  userGoals: [Goal] @hasMany(indexName: &quot;byUser&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type Goal @model @auth(rules: [{allow: public}]) {&#xA;  id: ID!&#xA;  goalStart: AWSDateTime!&#xA;  goalEnd: AWSDateTime&#xA;  goalCategory: CategoryTypes!&#xA;  goalCurrentDuration: DurationBeat!&#xA;  goalTargetDuration: DurationBeat!&#xA;  goalPercentage: Float&#xA;  userID: ID! @index(name: &quot;byUser&quot;)&#xA;  goalActivities: [Activity] @hasMany(indexName: &quot;byGoal&quot;, fields: [&quot;id&quot;])&#xA;  goalOfUser: User! @belongsTo&#xA;}&#xA;</code></pre>&#xA;<p>I save a Goal using:</p>&#xA;<pre><code>  Future&lt;void&gt; createGoal(String userID, CategoryTypes category,&#xA;      DurationBeat targetDuration) async {&#xA;    final Goal goal = Goal(&#xA;        userID: userID,&#xA;        goalCategory: category,&#xA;        goalTargetDuration: targetDuration,&#xA;        goalCurrentDuration: DurationBeat(&#xA;            durationHours: 0, durationMinutes: 0, durationSeconds: 0),&#xA;        goalPercentage: 0,&#xA;        goalStart: _today, //Local datetime variable&#xA;        goalEnd: null, //Null when the goal is current. Date assigned when the user sets new goal.&#xA;        goalOfUser: global.currentUser //Globally accessible user instance&#xA;);&#xA;    await Amplify.DataStore.save(goal);&#xA;  }&#xA;</code></pre>&#xA;<p>When this function runs, nothing shows up in the database. <strong>(It saved correctly when I omit goalOfUser, but I made it a required field to establish a bi-directional relationship)</strong></p>&#xA;<p>Finally, I request the data back using this function</p>&#xA;<pre><code>  Future&lt;Goal&gt; getLatestGoal(CategoryTypes category, String userId) async {&#xA;    final record = await Amplify.DataStore.query(Goal.classType,&#xA;        where: Goal.USERID&#xA;            .eq(userId)&#xA;            .and(Goal.GOALCATEGORY.eq(category))&#xA;            .and(Goal.GOALEND.eq(null)),&#xA;        sortBy: [Goal.GOALEND.ascending()]);&#xA;    return record.first;&#xA;  }&#xA;</code></pre>&#xA;<p>Surprisingly, this function returns the data that I &quot;saved&quot;.</p>&#xA;<pre><code>Goal {id=710ddbeb-89b5-4bcd-9623-8232b4e8a545, goalStart=2022-07-23T04:00:00.000000000Z, goalEnd=null, goalCategory=FITNESS, goalCurrentDuration=DurationBeat {durationSeconds=0, durationMinutes=0, durationHours=0}, goalTargetDuration=DurationBeat {durationSeconds=0, durationMinutes=5, durationHours=1}, goalPercentage=0.0, userID=190c7bd1-02ad-4ab1-970d-49b8e6f7a9f8, goalOfUser=User {id=190c7bd1-02ad-4ab1-970d-49b8e6f7a9f8, userEmail=charlesrichardsonusa@gmail.com, userName=Charbo, userPassword=password, createdAt=2022-07-19T20:23:09.797000000Z, updatedAt=2022-07-23T05:06:18.321000000Z}, createdAt=null, updatedAt=null}&#xA;</code></pre>&#xA;<p>I noticed that the attribute <code>createdAt</code> is null. I assume this means that it is only saved locally, but I do not understand why it wont sync remotely.</p>&#xA;<p>My question is:&#xA;How can I debug the Amplify.DataStore.save() function to determine exactly what is going wrong?&#xA;OR&#xA;Point out what I did wrong. I cant find the typo.</p>&#xA;",14193416,,14193416,2022-07-23 21:21:43,2022-11-15 02:08:24,Amplify Datastore not saving but correctly querying relational model,<amazon-web-services><graphql><aws-amplify><aws-appsync><datastore>,0,0,0,2022-07-23 19:36:48
73107145,2,,73078632,0,,"<p>The answer was not so hard:</p>&#xA;<pre><code>auth_data = {'USERNAME': username, 'PASSWORD': password}&#xA;&#xA;# auth the user on cognito&#xA;&#xA;def auth_cognito_user():&#xA;  provider_client = boto3.client(&#xA;    'cognito-idp', region_name=os.environ.get('region_name'))&#xA;  resp = provider_client.admin_initiate_auth(&#xA;    UserPoolId=userpool_id, AuthFlow='ADMIN_NO_SRP_AUTH', AuthParameters=auth_data, ClientId=client_id)&#xA;  # print(&quot;RESPONSE COGNITO&quot;, resp['AuthenticationResult']['IdToken'])&#xA;  return resp['AuthenticationResult']['IdToken']&#xA;</code></pre>&#xA;",11961746,,,,2022-07-25 09:44:46,"",,0,0,0,2022-07-25 09:44:46
73107153,2,,67551593,1,,"<p>Run this SQL script in Supabase SQL editor.</p>&#xA;<p>source: <a href=""https://supabase.com/docs/guides/integrations/prisma#troubleshooting"" rel=""nofollow noreferrer"">https://supabase.com/docs/guides/integrations/prisma#troubleshooting</a></p>&#xA;<pre><code>CREATE SCHEMA IF NOT EXISTS &quot;auth&quot;;&#xA;CREATE SCHEMA IF NOT EXISTS &quot;extensions&quot;;&#xA;create extension if not exists &quot;uuid-ossp&quot;      with schema extensions;&#xA;create extension if not exists pgcrypto         with schema extensions;&#xA;create extension if not exists pgjwt            with schema extensions;&#xA;&#xA;grant usage on schema public to postgres, anon, authenticated, service_role;&#xA;grant usage on schema extensions to postgres, anon, authenticated, service_role;&#xA;alter user supabase_admin SET search_path TO public, extensions; -- don't include the &quot;auth&quot; schema&#xA;&#xA;grant all privileges on all tables in schema public to postgres, anon, authenticated, service_role, supabase_admin;&#xA;grant all privileges on all functions in schema public to postgres, anon, authenticated, service_role, supabase_admin;&#xA;grant all privileges on all sequences in schema public to postgres, anon, authenticated, service_role, supabase_admin;&#xA;&#xA;alter default privileges in schema public grant all on tables to postgres, anon, authenticated, service_role;&#xA;alter default privileges in schema public grant all on functions to postgres, anon, authenticated, service_role;&#xA;alter default privileges in schema public grant all on sequences to postgres, anon, authenticated, service_role;&#xA;&#xA;alter default privileges for user supabase_admin in schema public grant all on sequences to postgres, anon, authenticated, service_role;&#xA;alter default privileges for user supabase_admin in schema public grant all on tables to postgres, anon, authenticated, service_role;&#xA;alter default privileges for user supabase_admin in schema public grant all on functions to postgres, anon, authenticated, service_role;&#xA;&#xA;alter role anon set statement_timeout = '3s';&#xA;alter role authenticated set statement_timeout = '8s';&#xA;</code></pre>&#xA;",9175712,,,,2022-07-25 09:45:26,"",,0,1,0,2022-07-25 09:45:26
73111230,2,,73084745,1,,"<p>The best way to accomplish this with Hasura is to create either a view or a computed function that hides this complexity/implementation detail from consumers of your API.</p>&#xA;<p>Eg:</p>&#xA;<pre class=""lang-sql prettyprint-override""><code>CREATE VIEW user_products AS SELECT u.id, p.* FROM users u &#xA;    JOIN transactions t ON t.user_id = u.id &#xA;    JOIN products p ON t.product_id = p.id&#xA;</code></pre>&#xA;<p>Once the view has been created, you can track it in Hasura and then join the relationship manually between the <code>users</code> table and the new view by linking on <code>user_id</code></p>&#xA;<p>Then you'd be able to query it something like this:</p>&#xA;<pre><code>query {&#xA;  user {&#xA;    id&#xA;    name&#xA;    products {&#xA;       name&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",1364771,,,,2022-07-25 14:51:15,"",,0,1,0,2022-07-25 14:51:15
73111646,1,,,0,239,"<p>This is my Graphql schema:</p>&#xA;<pre><code>type Ticket @model&#xA;  @auth(rules: [&#xA;    {allow: public, provider: apiKey},&#xA;    {allow: groups, groups: [&quot;Admins&quot;,&quot;Moderators&quot;], operations: [create, update, delete, read]},&#xA;    {allow: owner, ownerField: &quot;authorizations&quot;, operations: [create, update, read]}&#xA;  ]){&#xA;  id: ID! @primaryKey&#xA;  createdBy: String!&#xA;  authorizations: [String]!&#xA;  emailCreatedBy: String!&#xA;  title: String!&#xA;  description: String!&#xA;}&#xA;</code></pre>&#xA;<p>With Amplify CLI I've set the GraphQL resource with &quot;Amazon Cognito User Pool&quot; as default authorization mode and API Key as second mode.</p>&#xA;<p>When I perform a POST request following this guide:&#xA;<a href=""https://docs.amplify.aws/guides/functions/graphql-from-lambda/q/platform/js/#query"" rel=""nofollow noreferrer"">https://docs.amplify.aws/guides/functions/graphql-from-lambda/q/platform/js/#query</a></p>&#xA;<p>I receive this response:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;listTickets&quot;: null&#xA;  },&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;path&quot;: [&#xA;        &quot;listTickets&quot;&#xA;      ],&#xA;      &quot;data&quot;: null,&#xA;      &quot;errorType&quot;: &quot;Unauthorized&quot;,&#xA;      &quot;errorInfo&quot;: null,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 2,&#xA;          &quot;column&quot;: 3,&#xA;          &quot;sourceName&quot;: null&#xA;        }&#xA;      ],&#xA;      &quot;message&quot;: &quot;Not Authorized to access listTickets on type ModelTicketConnection&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>I perform a POST request to the AWS AppSync Endpoint with this body:</p>&#xA;<pre><code>{&#xA;    &quot;query&quot;: &quot;query ListTickets{listTickets{items{id}}}&quot;,&#xA;    &quot;authMode&quot;: &quot;API_KEY&quot;&#xA;}&#xA;</code></pre>&#xA;<p>and the &quot;x-api-key&quot; header with my api key value.</p>&#xA;<p>With a Cognito authenticated user instead works properly.</p>&#xA;<p>I receive the same error if I try with the Queries tool in the AWS AppSyncConsole in the browser.</p>&#xA;<p>I tried also with the &quot;@aws_api_key&quot; directive.</p>&#xA;<p>Thank you for the help!</p>&#xA;",16592093,,,,2022-10-24 07:32:31,"""Not Authorized"" error on GraphQL query call - AWS Amplify",<amazon-web-services><graphql><aws-amplify>,1,0,0,2022-07-25 15:21:58
73114161,2,,73077356,1,,"<p>The Hasura Query log is probably a good place to start. Do you have <a href=""https://hasura.io/docs/latest/deployment/logging/"" rel=""nofollow noreferrer"">these logs</a> enabled for your Hasura installation?</p>&#xA;<p>If you look for logs of type <code>query-log</code> you'll get a structured JSON object with properties that will have the <code>operation</code> name as well as the GQL <code>query</code> that was submitted to Hasura and the <code>generated_sql</code> that was produced.</p>&#xA;<p>You'd be able to match on the <code>generated_sql</code> and then find the actual GQL that caused it using that approach</p>&#xA;",1364771,,1364771,2022-07-26 14:55:20,2022-07-26 14:55:20,"",,0,0,0,2022-07-25 19:04:21
73117783,1,73119888,,0,31,"<p>I am trying to create a Python project that is able to both query and update tables in my AWS Dynamo database.</p>&#xA;<p>My query is as follows:</p>&#xA;<pre><code>query = &quot;&quot;&quot;query {&#xA;    listTodos {&#xA;    nextToken&#xA;    startedAt&#xA;    items {&#xA;      createdAt&#xA;      name&#xA;      description&#xA;    }&#xA;  }&#xA;}&quot;&quot;&quot;&#xA;&#xA;&#xA;Headers = {'X-API-KEY': 'myKey'}&#xA;url = 'https://example.amazonaws.com/graphql'&#xA;r = requests.post(url, json={'query': query}, headers=Headers)&#xA;print(r.status_code)&#xA;print(r.text)&#xA;</code></pre>&#xA;<p>I get an expected 200 response that gives me the name, createdAt (time), and description.</p>&#xA;<p>What I am trying to do is pass in a mutation, but there is no documentation for this when not using boto3. For simplicity, I am curious to know how I would mutate this table while just using requests.post</p>&#xA;<p>I have tried the following with no success:</p>&#xA;<pre><code>query = &quot;&quot;&quot;&#xA;    mutation {&#xA;        updateTodo (id: 80e1a712-0053-436c-ba73-9182a7cca67f, name: &quot;Paul&quot;) {&#xA;            name&#xA;        }&#xA;    }&#xA;&quot;&quot;&quot;&#xA;</code></pre>&#xA;<p>From this I recieve MalformedHttpRequestException</p>&#xA;<p>What is the best way to accomplish this? Thank you in advance, as I am new to the AWS platform.</p>&#xA;",19366265,,19366265,2022-07-26 13:05:26,2022-07-26 13:05:26,Mutate table in DynamoDB without using boto3,<python><amazon-web-services><graphql><amazon-dynamodb>,1,0,0,2022-07-26 04:35:51
73123622,1,,,0,36,"<p>I recently added a value which is an array with a string called &quot;postLikes&quot; to my model (&quot;User&quot;) in the graphql Schema, this is what I added:</p>&#xA;<pre><code>postLikes: [String]&#xA;</code></pre>&#xA;<p>Now every time I query and mark this item (postLikes) I get back an error (when I don't mark 'postLikes' everything is fine):</p>&#xA;<pre><code>&quot;Validation error of type SubSelectionNotAllowed: Sub selection not allowed on leaf type null of field postLikes @ 'listUsers/items/postLikes'&quot;&#xA;</code></pre>&#xA;<p>This is the model in my Schema:&#xA;<a href=""https://i.stack.imgur.com/4IBmo.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4IBmo.png"" alt=""enter image description here"" /></a></p>&#xA;<p>And this is the error I get back when I query in AppSync for my User table and check the &quot;postLikes&quot;:</p>&#xA;<p><a href=""https://i.stack.imgur.com/9rdqU.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9rdqU.png"" alt=""enter image description here"" /></a></p>&#xA;",9005666,,,,2022-07-26 12:46:14,Can't query a certain value in graphql in my dynamoDB database,<javascript><amazon-web-services><aws-appsync><graphql-js><amplify>,0,0,0,2022-07-26 12:46:14
73149622,1,,,0,25,"<p>type User @model(mutations: null) {</p>&#xA;<p>id: ID!</p>&#xA;<p>email: String!</p>&#xA;<p>name: String</p>&#xA;<p>image: String</p>&#xA;<p>networth: Float!</p>&#xA;<p>portfolioCoins: [PortfolioCoin] @connection(keyName: &quot;byUser&quot;, fields: [&quot;id&quot;])&#xA;}</p>&#xA;<p>type PortfolioCoin&#xA;@model(mutations: null)&#xA;@key(name: &quot;byUser&quot;, fields: [&quot;userId&quot;]){</p>&#xA;<p>id: ID!</p>&#xA;<p>amount: Float!</p>&#xA;<p>userId: ID!</p>&#xA;<p>user: User @connection(fields: [&quot;userId&quot;])</p>&#xA;<p>coinId: ID!</p>&#xA;<p>coin: Coin @connection(fields: [&quot;coinId&quot;])</p>&#xA;<p>}</p>&#xA;<p>type Coin @model(mutations: null) {</p>&#xA;<p>id: ID!</p>&#xA;<p>cgId: String!</p>&#xA;<p>name: String!</p>&#xA;<p>symbol: String!</p>&#xA;<p>image: String</p>&#xA;<p>currentPrice: Float!</p>&#xA;<p>valueChange24H: Float!</p>&#xA;<p>valueChange1D: Float!</p>&#xA;<p>valueChange7D: Float!</p>&#xA;<p>priceHistoryString: String</p>&#xA;<p>}&#xA;<a href=""https://i.stack.imgur.com/CiBUk.png"" rel=""nofollow noreferrer"">visual is given in this image</a></p>&#xA;<p>what to slove this error?</p>&#xA;",11565701,,11565701,2022-07-28 11:23:12,2022-07-28 11:23:12,"Graphql scheme is not working, what to use instead @connection and @key",<amazon-web-services><graphql>,0,0,0,2022-07-28 08:31:32
73157396,1,,,0,54,"<h1>The situation</h1>&#xA;<p>I have inherited a project that pulls from a GraphpQL API hosted somewhere on AWS.<br />&#xA;I knew nothing about GraphQL yesterday morning, and I feel like I'm missing something obvious.</p>&#xA;<p>I have <em>almost</em> all of the queries I need working, except one that looks odd.<br />&#xA;<code>Query -&gt; pullUserData</code> accepts no arguments, and returns the <code>UserData</code> type.</p>&#xA;<p>Nothing I try can get a record from this query. Even though the UserData seems to be pulled elsewhere in the project.</p>&#xA;<p>All of my searching for an answer just gets results for how_to(pass_args:to_a_query).</p>&#xA;<h1>What I've tried.</h1>&#xA;<p>I have attempted many variations of the following.<br />&#xA;I'm using <code>__typename</code> in the examples because (I think?) every field has a typename.</p>&#xA;<p><code>{ pullUserData(id:&quot;known_id&quot;) { __typename } }</code><br />&#xA;And I get back a validation error &quot;unknown field argument&quot;, which makes sense, the schema said it accepts no args.</p>&#xA;<p><code>{ pullUserData }</code><br />&#xA;Validation Error, subselection required. Again, kindof what I was expecting.</p>&#xA;<p><code>{ pullUserData { __typename } }</code><br />&#xA;This get some more information:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: null,&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;path&quot;: [&#xA;        &quot;pullUserData&quot;&#xA;      ],&#xA;      &quot;data&quot;: null,&#xA;      &quot;errorType&quot;: &quot;Lambda:Unhandled&quot;,&#xA;      &quot;errorInfo&quot;: null,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 1,&#xA;          &quot;column&quot;: 3,&#xA;          &quot;sourceName&quot;: null&#xA;        }&#xA;      ],&#xA;      &quot;message&quot;: &quot;Unable to parse event&quot;&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<h1>In summary</h1>&#xA;<p>I'm trying to pull data from a query that accepts no args, and can't figure it out.</p>&#xA;<p>I think I inherited this from someone who left on bad terms. Either way, they will not communicate with me or the company.</p>&#xA;<p>I learned what little I know of GraphQL on this project, yesterday, and I feel like I'm missing something that will be obvious to anyone who has used it before.<br />&#xA;I'm starting to suspect it's just broken, too.</p>&#xA;<p>Thanks for any help y'all can give.</p>&#xA;",10033855,,,,2022-07-28 20:22:07,How to get information from a GraphQL query that accepts no arguments,<graphql>,1,0,0,2022-07-28 18:10:41
73192097,1,,,0,52,"<p>I'm using a type GraphQL service that I have no control over. They have separate mutations which create/update/delete a single entity with something like</p>&#xA;<pre><code>mutation DeleteThing($personId: ID!, $input: DeleteInput!) {&#xA;  deleteThing(personId: $personId, input: $input) {&#xA;    ...ClientFragment&#xA;  }&#xA;}&#xA;&#xA;variables: { personId:'SomeId', input: { id: 'ThingId'}} &#xA;</code></pre>&#xA;<p>Now I may need to change 10-40 of this type of entity per request and I want to return only the final ClientFragment after every query has ran. What is the best way to go about this?</p>&#xA;<p>I know I can do something like:</p>&#xA;<pre><code>mutation DeleteThing($personId: ID!, $input1: DeleteInput!, $input2:DeleteInput!) {&#xA;  d1:deleteThing(personId: $personId, input: $input1) {&#xA;    ...ClientFragment&#xA;  }&#xA;  d2:deleteThing(personId: $personId, input: $input2) {&#xA;    ...ClientFragment&#xA;  }&#xA;  d3:...&#xA;}&#xA;&#xA;variables: { personId:'SomeId', input1: { id: 'ThingId'}, input2: { id: 'OtherThingId'}} &#xA;</code></pre>&#xA;<p>But I may not care if one of these mutations throws a 404, since I just want them gone. I also would have to query after the mutation to get the final ClientFragment as these mutations may run asynchronously. Perhaps there is a more elegant solution?</p>&#xA;",19561679,,19561679,2022-08-01 10:08:56,2022-08-01 10:08:56,Graphql combine multiple identical mutations,<graphql><typegraphql>,0,0,0,2022-08-01 10:06:42
73222941,2,,73222837,1,,"<p>What you're missing is the explicit return statement in your arrow function [1]:</p>&#xA;<pre><code>return (&#xA;    &lt;&gt;&#xA;      {data?.topBattles?.length &gt; 0&#xA;        ? data.topBattles.map((battle) =&gt; {&#xA;            return &lt;div&gt;Foo&lt;/div&gt;; // &lt;== Should have an explicit return&#xA;          })&#xA;        : &quot;bar&quot;}&#xA;    &lt;/&gt;&#xA;  );&#xA;</code></pre>&#xA;<hr />&#xA;<pre class=""lang-js prettyprint-override""><code>// Implicit return (no {})&#xA;()=&gt; &lt;div&gt;Foo&lt;/div&gt;&#xA;&#xA;// Explicit return (with {})&#xA;()=&gt; { return &lt;div&gt;Foo&lt;/div&gt; }&#xA;</code></pre>&#xA;<p>[1] <a href=""https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions#function_body"" rel=""nofollow noreferrer"">Arrow Function Body</a></p>&#xA;",4861760,,4861760,2022-08-03 15:57:16,2022-08-03 15:57:16,"",,0,2,0,2022-08-03 14:02:40
73241349,1,,,0,154,"<p>I am trying to perform the <a href=""https://docs.amplify.aws/lib/datastore/real-time/q/platform/js/#observe-query-results-in-real-time"" rel=""nofollow noreferrer"">ObserveQuery</a> function of AWS Datastore in my react native project.</p>&#xA;<p>For matter of simplicity, here is what models looks like in the GraphQL schema:</p>&#xA;<pre><code>type A @model @auth(rules: [{allow: public}]) {&#xA;    id: ID!&#xA;    isExpired: Boolean&#xA;    B: B @hasOne&#xA;}&#xA;&#xA;type B @model @auth(rules: [{allow: public}]) {&#xA;    id: ID!&#xA;    isRejected: Boolean&#xA;    cID: ID! @index(name: &quot;byC&quot;)&#xA;    C: C @belongsTo(fields: [&quot;cID&quot;])&#xA;}&#xA;&#xA;type C @model @auth(rules: [{allow: public}]) {&#xA;    id: ID!&#xA;    isAccepted: Boolean&#xA;}&#xA;</code></pre>&#xA;<p>Here is the Datastore.observeQuery function that I execute :</p>&#xA;<pre><code>const subscription = DataStore.observeQuery(A).subscribe(snapshot =&gt; {&#xA;    const { items, isSynced } = snapshot;&#xA;    console.log(items)        &#xA;});&#xA;return () =&gt; subscription.unsubscribe();&#xA;</code></pre>&#xA;<p>The resolut of the items returned by the initial query is the following :</p>&#xA;<pre><code>{&#xA;    &quot;id&quot;: &quot;XXX&quot;,&#xA;    &quot;isExpired&quot;: false,&#xA;    &quot;createdAt&quot;: &quot;2022-08-04T17:57:12.187Z&quot;,&#xA;    &quot;updatedAt&quot;: &quot;2022-08-04T17:57:12.187Z&quot;,&#xA;    &quot;_version&quot;: 1,&#xA;    &quot;_lastChangedAt&quot;: 1659635832211,&#xA;    &quot;_deleted&quot;: null,&#xA;    &quot;B&quot;: {&#xA;        &quot;id&quot;: &quot;XXX&quot;,&#xA;        &quot;isRejected&quot;: false,&#xA;        &quot;createdAt&quot;: &quot;2022-08-04T17:57:11.535Z&quot;,&#xA;        &quot;updatedAt&quot;: &quot;2022-08-04T17:57:11.535Z&quot;,&#xA;        &quot;_version&quot;: 1,&#xA;        &quot;_lastChangedAt&quot;: 1659635831568,&#xA;        &quot;_deleted&quot;: null,&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>As you can see, the initial query of the ObserveQuery function doesn't return the nested object C that is in B.</p>&#xA;<p>According to the documentation, the initial query that is performed is equivalent if I do a Datastore.query(...) call.</p>&#xA;<blockquote>&#xA;<p>observeQuery(...) returns an initial data set, similar to query(...), and also automatically subscribes to subsequent changes to the query.</p>&#xA;</blockquote>&#xA;<p>Does anyone know how or what needs to be modified in order to get the C model in the initial query?&#xA;I tried to modify mutations, queries and subscriptions model generated by Codegen but no success.</p>&#xA;<p>Here is the output I am looking for :</p>&#xA;<pre><code>{&#xA;    &quot;id&quot;: &quot;XXX&quot;,&#xA;    &quot;isExpired&quot;: false,&#xA;    &quot;createdAt&quot;: &quot;2022-08-04T17:57:12.187Z&quot;,&#xA;    &quot;updatedAt&quot;: &quot;2022-08-04T17:57:12.187Z&quot;,&#xA;    &quot;_version&quot;: 1,&#xA;    &quot;_lastChangedAt&quot;: 1659635832211,&#xA;    &quot;_deleted&quot;: null,&#xA;    &quot;B&quot;: {&#xA;        &quot;id&quot;: &quot;XXX&quot;,&#xA;        &quot;isRejected&quot;: false,&#xA;        &quot;createdAt&quot;: &quot;2022-08-04T17:57:11.535Z&quot;,&#xA;        &quot;updatedAt&quot;: &quot;2022-08-04T17:57:11.535Z&quot;,&#xA;        &quot;_version&quot;: 1,&#xA;        &quot;_lastChangedAt&quot;: 1659635831568,&#xA;        &quot;_deleted&quot;: null,&#xA;        &quot;C&quot;: {&#xA;            &quot;id&quot;: &quot;XXX&quot;,&#xA;            &quot;isAccepted&quot;: false,&#xA;            &quot;createdAt&quot;: &quot;2022-08-04T17:57:11.535Z&quot;,&#xA;            &quot;updatedAt&quot;: &quot;2022-08-04T17:57:11.535Z&quot;,&#xA;            &quot;_version&quot;: 1,&#xA;            &quot;_lastChangedAt&quot;: 1659635831568,&#xA;            &quot;_deleted&quot;: null,&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",5675992,,13302,2022-08-04 19:39:06,2022-08-04 19:39:06,How to modify AWS Datastore ObserveQuery model result,<amazon-web-services><react-native><graphql><amazon-dynamodb><aws-appsync>,0,1,0,2022-08-04 19:29:11
73246070,1,,,0,139,"<p>I am using a lambda as a resolver for a GraphQL Query from AppSync. When I run the Query from AppSync Console, the lambda works fine and returns the requested data, but on the AppSync console, the results show null values on the defined query arguments.</p>&#xA;<p>This is the schema:</p>&#xA;<pre><code>type usersData {&#xA;    email: String&#xA;    photos: photos&#xA;}&#xA;&#xA;type photos {&#xA;    profile_photo: String&#xA;    background_photo: String&#xA;}&#xA;&#xA;type Query {&#xA;    getUsersData(email: String!): usersData&#xA;}&#xA;&#xA;schema {&#xA;    query: Query&#xA;}&#xA;</code></pre>&#xA;<p>This is the query:</p>&#xA;<pre><code>query getUsersData {&#xA;  getUsersData(email: &quot;lambda10@test.com&quot;) {&#xA;    email&#xA;    photos {&#xA;      profile_photo&#xA;      background_photo&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This is the result from the lambda resolver:</p>&#xA;<pre><code>{&#xA;    &quot;email&quot;: &quot;lambda10@test.com&quot;,&#xA;    &quot;photos&quot;: {&#xA;        &quot;profile_photo&quot;: &quot;./test1/test1&quot;,&#xA;        &quot;background_photo&quot;: &quot;./test1/test1&quot;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>This is the result from the query on AppSync Console:</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;getUsersData&quot;: {&#xA;      &quot;email&quot;: null,&#xA;      &quot;photos&quot;: null&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Any idea why is that?</p>&#xA;",7698694,,,,2022-08-05 07:20:22,AppSync Query displays null values,<aws-lambda><graphql><aws-appsync><aws-appsync-resolver>,0,0,0,2022-08-05 07:20:22
73296809,1,,,0,212,"<p>I have a table that shows the ID and title from my data. I had to pull the Title from a json which is saved in the database as a string. Now I want to filter/search in this table. I can search the IDs but not the title.&#xA;I tried everthing that google showed me, but it didn't work. What Am I doing wrong?</p>&#xA;<p>I'm new in Vue, can anybody help me?</p>&#xA;<p>Code:</p>&#xA;<pre><code>        &lt;v-text-field&#xA;            v-model=&quot;search&quot;&#xA;            append-icon=&quot;mdi-magnify&quot;&#xA;            label=&quot;Search&quot;&#xA;            single-line&#xA;            hide-details&#xA;        &gt;&lt;/v-text-field&gt;&#xA;       &#xA;        &lt;v-data-table&#xA;          :headers=&quot;headers&quot;&#xA;          :items=&quot;showActivatedOnly()&quot;&#xA;          :search=&quot;search&quot;&#xA;          sort-by=&quot;id&quot;&#xA;          class=&quot;elevation-1&quot;&#xA;        &gt;....&#xA;&#xA;    showActivatedOnly: function(){&#xA;      if(!this.search){&#xA;        if(this.showActivatedSurveysOnly===true){&#xA;          return this.adminSurveys&#xA;        }else{&#xA;          return this.adminSurveysOnlyActivated;&#xA;        }&#xA;      }&#xA;      return this.getAllSurveysFiltered();&#xA;    },&#xA;    getAllSurveysFiltered() {&#xA;            const surveys = this.adminSurveys;&#xA;      &#xA;      const child = surveys.filter(item =&gt; {&#xA;        let json = JSON.parse(item.json)&#xA;        return json.title.toString().toLowerCase().includes(this.search.toLowerCase())&#xA;      });&#xA;      &#xA;      console.log(child + &quot;CHILD&quot;)&#xA;      console.log(surveys + &quot;ALL_SURVEYS&quot;)&#xA;      &#xA;      return(child)&#xA;&#xA;    },```&#xA;      &#xA;&#xA;The Method getAllSurveysFiltered() response the right list but the elements aren't showing in my table.&#xA;</code></pre>&#xA;",19729059,,19729059,2022-08-10 11:48:37,2022-08-10 11:48:37,"search/filter data from table vuejs, graphql, json",<vue.js><graphql><apollo>,1,0,0,2022-08-09 18:54:28
73299597,1,,,0,159,"<p>I'm trying to send the groupId value I'm getting as a string from Hasura/Apollo without any modifications as a uuid parameter for a mutation in order to basically create a relation.</p>&#xA;<p>The table has groupID defined as uuid!, but I can't seem to send a valid UUID back.</p>&#xA;<p>UPDATE: the data is saved in the database but I am still getting the error.</p>&#xA;<p>The error I'm getting is:</p>&#xA;<pre><code>TypeError [ERR_INVALID_ARG_TYPE]: The &quot;string&quot; argument must be of type string or an instance of Buffer or ArrayBuffer. Received an instance of Object&#xA;</code></pre>&#xA;<p>Query:</p>&#xA;<pre><code>export const ADD_GROUP_MEMBER_MUTATION = gql`&#xA;  mutation addGroupMember(&#xA;    $personId: String!&#xA;    $groupId: uuid!&#xA;    $groupLocationId: uuid&#xA;  ) {&#xA;    insert_GroupMembers_one(&#xA;      object: {&#xA;        personId: $personId&#xA;        groupLocationId: $groupLocationId&#xA;        groupId: $groupId&#xA;      }&#xA;    ) {&#xA;      id&#xA;      groupId&#xA;      groupLocationId&#xA;      personId&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>Sending params:</p>&#xA;<pre><code>const { data, errors } = await client.mutate&lt;&#xA;    addGroupMember,&#xA;    addGroupMemberVariables&#xA;  &gt;({&#xA;    mutation: ADD_GROUP_MEMBER_MUTATION,&#xA;    variables: {&#xA;      groupId: groupId as string,&#xA;      personId,&#xA;    },&#xA;  });&#xA;</code></pre>&#xA;",8115275,,8115275,2022-08-10 18:03:45,2022-08-10 18:03:45,How to send UUID string back as UUID param? ApolloGraphql - Hasura - Postgres,<javascript><postgresql><next.js><apollo-client><hasura>,0,0,0,2022-08-10 01:03:40
73303992,1,,,0,85,"<p>I am trying to call a lambda function using GraphQL mutation in Amplify. Unfortunately I am getting <code>Unauthorized error</code> when I call it.</p>&#xA;<p>This is the schema:</p>&#xA;<pre><code>type Mutation {&#xA;  createPaymentIntent(amount: Int!, currency: Currency!): PaymentIntent! @function(name: &quot;CreatePaymentIntent-${env}&quot;)&#xA;  createPaypalPayment(amount: Int!, currency: Currency!): PaypalPayment! @function(name: &quot;StartPaypalPayment-${env}&quot;)&#xA;}&#xA;&#xA;type PaymentIntent {&#xA;  clientSecret: String!&#xA;}&#xA;&#xA;type PaypalPayment {&#xA;  value: String!&#xA;}&#xA;</code></pre>&#xA;<p>When I call it using IAM it is working fine. But with Cognito pool (after signing in) it throws error. I also tried to turn off auth for the full api (but didn't help):</p>&#xA;<pre><code>input AMPLIFY {&#xA;  globalAuthRule: AuthRule = { allow: public }&#xA;} &#xA;</code></pre>&#xA;",15866058,,,,2022-08-10 09:36:56,Authorization error when trying to call Amplify Graphql Mutation with Function,<graphql><aws-amplify>,0,0,0,2022-08-10 09:36:56
73308052,2,,68198503,2,,"<p>In my case, it was because of using plural name for entity.</p>&#xA;<p>I had an entity named <code>Analytics</code>, the build and deployment were all successful, but when I sent a query as the following, I got the exact same error message:</p>&#xA;<pre><code>analytics {&#xA;  id&#xA;}&#xA;</code></pre>&#xA;<p>I renamed entity to <code>Analytic</code> and the error was gone.</p>&#xA;<p>I guess subgraph automatically pluralize the entity name but seems like there is a conflict when entity name is already pluaralized.</p>&#xA;",11792577,,,,2022-08-10 14:25:42,"",,0,0,0,2022-08-10 14:25:42
73318126,1,73318127,,0,26,<p>I have 2 tables <code>User</code> and <code>Activity</code> with a <strong>Many to Many</strong> relationship:</p>&#xA;<pre><code>type User @model @auth(rules: [{allow: public}]) {&#xA;    id: ID!&#xA;    activities: [Activity] @manyToMany(relationName: &quot;UserActivity&quot;)&#xA;}&#xA;&#xA;type Activity @model @auth(rules: [{allow: public}]) {&#xA;    id: ID!&#xA;    users: [User] @manyToMany(relationName: &quot;UserActivity&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>From Dynamo DB how should I add my JSON data to connect these 2 tables?</p>&#xA;,4458531,,,,2022-08-11 09:10:49,How Dynamo DB manages Many to Many relationship?,<graphql><amazon-dynamodb><aws-amplify>,1,0,0,2022-08-11 09:10:49
73326917,2,,72314277,2,,"<p>Found the solution, there seems to be an issue with triggering a rebuild of the resolvers on the api after permitting a function to access the graphql api. However there is a distinction to note:</p>&#xA;<ol>&#xA;<li><p>If the graphql api is part of an amplify app stack, then only functions created through the amplify cli for that app (ex: <em>amplify add function</em>) and that are given access to the api through there will be able to access the api.</p>&#xA;<ul>&#xA;<li>additonally during the update when you either create, or update the function to give it permissions, you must ensure that during the amplify push operation, the api stack will also be updating. you can trigger this by simply adding or removing a space in a comment inside of your amplify/backend/api//schema.graphql file.</li>&#xA;</ul>&#xA;</li>&#xA;<li><p>If the function was created &quot;adhoc&quot; directly through the aws console, but it is trying to access a graphql api that was created as part of an amplify app stack, then you will need to put that function's role in amplify/backend/api/&lt; apiname&gt;/custom-roles.json in the format</p>&#xA;<pre><code>{ &#xA;  &quot;adminRoleNames&quot;: [&quot;&lt;role name&gt;&quot;, &quot;&lt;role name 2&gt;&quot;, ...] &#xA;}&#xA;</code></pre>&#xA;</li>&#xA;</ol>&#xA;<p>Documentation references <a href=""https://docs.amplify.aws/cli/graphql/authorization-rules/#grant-lambda-function-access-to-graphql-api"" rel=""nofollow noreferrer"">here</a>.</p>&#xA;<ol start=""3"">&#xA;<li>If neither your api or lambda function were created with the amplify cli as part of an app stack, then just need to give access to the graphql resources for query, mutation and subscription to the lambda's role in IAM, via inline policies or a pre-defined policy.</li>&#xA;</ol>&#xA;",3212715,,8721930,2022-08-12 06:02:06,2022-08-12 06:02:06,"",,0,0,0,2022-08-11 21:10:31
73327256,1,,,0,77,"<p>Hello and thanks in advance for any help.</p>&#xA;<p>I would like to write a simple query to find out Loopring NFT (non-fungible token) data using the Loopring subgraph, given a user account number. (Note the account number is the Loopring address, similar to an Ethereum address, a hexadecimal as string type)</p>&#xA;<p>The subgraph playground for Loopring is here: <a href=""https://thegraph.com/explorer/subgraph?id=7QP7oCLbEAjejkp7wSLTD1zbRMSiDydAmALksBB5E6i1&amp;view=Playground"" rel=""nofollow noreferrer"">https://thegraph.com/explorer/subgraph?id=7QP7oCLbEAjejkp7wSLTD1zbRMSiDydAmALksBB5E6i1&amp;view=Playground</a></p>&#xA;<p>Here is my code:</p>&#xA;<pre><code>query accountNFTSlotsQuery(&#xA;  $skip:Int&#xA;  $first:Int&#xA;  $orderBy: AccountNFTSlot_orderBy&#xA;  $orderDirection:OrderDirection&#xA;  $where:AccountNFTSlot_filter&#xA;    ) {&#xA;  accountNFTSlots(&#xA;    skip : 0&#xA;    first: 100&#xA;    orderBy: createdAt&#xA;    orderDirection: asc&#xA;    where: {&#xA;      account: &quot;0x08F06d44D6D3e35a3790392571194d86090C863539277&quot;&#xA;        }&#xA;  ) {&#xA;    id&#xA;    account {&#xA;      id&#xA;    }&#xA;    balance&#xA;    nft {&#xA;      id&#xA;      nftType&#xA;      nftID&#xA;      mintedAt&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The playground is returning...</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;accountNFTSlots&quot;: []&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Which I interpret as returning NULL, or &quot;no data found&quot;. For the address above, one can verify NFTs exist using lexplorer:&#xA;<a href=""https://lexplorer.io/account/39277"" rel=""nofollow noreferrer"">https://lexplorer.io/account/39277</a></p>&#xA;<p><strong>Variations:</strong></p>&#xA;<ul>&#xA;<li><p>I have tried several accounts which I know have NFTs.</p>&#xA;</li>&#xA;<li><p>I have tried replacing the &quot;account&quot; string with an &quot;id&quot; in the 'where' filter thus:</p>&#xA;<p>where: {&#xA;id: 39277&#xA;}</p>&#xA;</li>&#xA;</ul>&#xA;<p><strong>Model:</strong>&#xA;I used this github repo as a model for my queries: <a href=""https://github.com/fudgebucket27/Lexplorer/blob/master/Shared/Services/LoopringGraphQLService.cs"" rel=""nofollow noreferrer"">https://github.com/fudgebucket27/Lexplorer/blob/master/Shared/Services/LoopringGraphQLService.cs</a></p>&#xA;",19746500,,19746500,2022-08-11 21:55:42,2022-08-11 21:55:42,"Query Loopring NFTs using the GraphQL ""Playground""",<api><graphql><blockchain><ethereum><nft>,0,0,0,2022-08-11 21:55:05
73334106,2,,73308411,0,,"<p>In your GraphQL schema, first you need to create input type AlbumUpdateInput as follows:</p>&#xA;<pre><code>input AlbumUpdateInput {&#xA;    name: String!&#xA;}&#xA;</code></pre>&#xA;<p>Then only you can access this input type.</p>&#xA;",19601405,,,,2022-08-12 12:20:00,"",,0,0,0,2022-08-12 12:20:00
73335929,1,73442629,,2,147,"<p>I'm not sure if passing the schema name as an argument in the GraphQL query will work for JoinMonster or not. Following is the query example:</p>&#xA;<pre><code>{&#xA;  configuration_queries(table: 'xyz', where: 'some condition') {&#xA;     data {&#xA;        col1&#xA;        col2&#xA;     }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>so here it is expected to create a dynamic query on &quot;xyz&quot; table using JoinMonster.</p>&#xA;",1175102,,1175102,2022-08-12 14:53:26,2022-08-22 09:05:39,Can we pass dynamic schema details in GraphQL query which can be used by JoinMonster?,<graphql>,1,0,0,2022-08-12 14:47:48
73339544,1,,,0,12,"<p>Here is how got the data,Iam still new to Graphql and ReactJS</p>&#xA;<p>componentDidMount(){&#xA;const query = gql`&#xA;{&#xA;categories {&#xA;name</p>&#xA;<pre><code>  }&#xA; &#xA;</code></pre>&#xA;<p>}&#xA;`&#xA;request('http://localhost:4000/graphql', query).then((data) =&gt;&#xA;console.log(data)&#xA;and this the data in console:</p>&#xA;<p><a href=""https://i.stack.imgur.com/cOucc.jpg"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;",17869941,,,,2022-08-12 20:36:46,How can I put received data from a GRAPHQL endpoint into state so that I can display in my Navbar Component dynamically?,<graphql-js>,0,0,0,2022-08-12 20:36:46
73353030,1,,,0,21,"<p>I try make a post to Hasura. But I have an exception. What I do wrong?</p>&#xA;<p><a href=""https://i.stack.imgur.com/5xtBN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5xtBN.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Mutation:</p>&#xA;<pre><code> mutation UpsertOperations($objects: [operation_insert_input!]!) {&#xA;    insert_operation(objects: $objects, on_conflict: {constraint: operation_operationKey_serviceId_key}) {&#xA;      returning {&#xA;        id&#xA;      }&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>Model 1:</p>&#xA;<pre><code>const factory Operation.insert({&#xA;required int contragentId,&#xA;required int accountId,&#xA;required int serviceId,&#xA;required double amount,&#xA;required String operationKey,&#xA;required OperationType direction,&#xA;required int entityId,&#xA;required bool payInOneTransaction,&#xA;@JsonKey(name: 'external_invoice') ExternalInvoice? externalInvoice,&#xA;  }) = OperationInsert;&#xA;</code></pre>&#xA;<p>Model 2 (relation to ExternalInvoice):</p>&#xA;<pre><code>const factory ExternalInvoice.insert({&#xA;required final String name,&#xA;required final String number,&#xA;required final String url,&#xA;required final String mimeType,&#xA;}) = ExternalInvoiceInsert;&#xA;</code></pre>&#xA;<p>How I make Operation:</p>&#xA;<pre><code>final operation = OperationInsert(&#xA;          contragentId: _contragent.id,&#xA;          amount: payout.valuePositive,&#xA;          operationKey: payout.id.toString(),&#xA;          accountId: _currentAccount.id,&#xA;          serviceId: OfferStoreData.serviceId,&#xA;          entityId: OfferStoreData.entityId,&#xA;          direction: OperationType.outcome,&#xA;          payInOneTransaction: true,&#xA;          externalInvoice: _externalInvoice,&#xA;        );&#xA;</code></pre>&#xA;",16151756,,,,2022-08-14 15:51:22,Exception while I make mutation in Hasura (Dart),<dart><graphql><hasura>,0,0,0,2022-08-14 15:51:22
73359464,1,,,0,50,"<p>When I use <code>DataStore.query</code> to retrieve data, I am getting conflicting data types from my linter. Contrived example:</p>&#xA;<p><strong>schema.graphql</strong></p>&#xA;<pre><code>type Card @model @auth(rules: [{ allow: private }]) {&#xA;  id: ID!&#xA;  input: AWSJSON  &#xA;}&#xA;</code></pre>&#xA;<p><strong>react component javascript:</strong></p>&#xA;<pre class=""lang-js prettyprint-override""><code> const originalCard = await DataStore.query(Card, cardid);&#xA; // originalCard.input is of type string | undefined | null according to my linter&#xA; if(!originalCard.input) return; // Ignore non-string cases&#xA; await DataStore.save(&#xA;   Card.copyOf(originalCard, (updated) =&gt; {&#xA;     updated.input = JSON.stringify(originalCard.input);&#xA;   })&#xA; );&#xA;</code></pre>&#xA;<p>The above should simply save the same input as it has already received. And this is accepted by my linter. The problem is that when I run the code, I get an error, which advises that the <code>originalCard.input</code> value is actually an object. So it seems that <code>DataStore.query</code> is parsing the <code>input</code> value for me, which is great, except that the linter is being given the wrong information.</p>&#xA;<p>The cheap and dirty fix is just to tell typescript that the <code>input</code> value is in fact an object: <code>...as unknown as Record&lt;string,any&gt;</code>, but I suspect there's a better way and/or I'm doing something wrong?</p>&#xA;",11664580,,,,2022-08-15 10:49:36,"Using AWS DataStore.query returns an object whose properties are parsed objects, but linter expects a string",<reactjs><typescript><graphql><aws-amplify><aws-datastore>,1,0,0,2022-08-15 10:01:20
73360735,1,73388322,,0,126,"<p>I´m using strapi V4 with the graphql extension. When i´m use filters with variables in the graphql Playground there are no problems.</p>&#xA;<pre><code>query getOrdersFilterList($searchstring: String!) {&#xA;orders(filters: { customer: { contains: $searchstring } }) {&#xA;    data {&#xA;      attributes {&#xA;        number&#xA;        customer&#xA;        name&#xA;        article&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Query Variables:</p>&#xA;<pre><code>    {&#xA;  &quot;searchstring&quot;: &quot;zi&quot;&#xA;}&#xA;</code></pre>&#xA;<p>When i use filters with Postman no problems.</p>&#xA;<pre><code>query getOrdersFilterList($searchstring: String) {&#xA;    orders(filters: {customer: { containsi:  $searchstring}}) {&#xA;        data {&#xA;            attributes {&#xA;                number&#xA;                customer&#xA;                name&#xA;                article&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Graphql Variables :</p>&#xA;<pre><code>{&#xA;    &quot;searchstring&quot;: &quot;zi&quot;&#xA;}&#xA;</code></pre>&#xA;<p>The result is like expected:</p>&#xA;<pre><code>{&#xA;   &quot;data&quot;: {&#xA;       &quot;orders&quot;: {&#xA;           &quot;data&quot;: [&#xA;               {&#xA;                   &quot;attributes&quot;: {&#xA;                       &quot;number&quot;: &quot;30072&quot;,&#xA;                       &quot;customer&quot;: &quot;Stauder Zimmerei&quot;,&#xA;                       &quot;name&quot;: &quot;Hagmann Habsburgerstr.&quot;,&#xA;                       &quot;article&quot;: &quot;Stahlteile &quot;&#xA;                   }&#xA;               },&#xA;               {&#xA;                   &quot;attributes&quot;: {&#xA;                       &quot;number&quot;: &quot;22-02-015 A&quot;,&#xA;                       &quot;customer&quot;: &quot;Ziebarth Wolfgang&quot;,&#xA;                       &quot;name&quot;: &quot;Austr. 1 a&quot;,&#xA;                       &quot;article&quot;: &quot;Aussengeländer &quot;&#xA;                   }&#xA;               },&#xA;               {&#xA;                   &quot;attributes&quot;: {&#xA;                       &quot;number&quot;: &quot;30013&quot;,&#xA;                       &quot;customer&quot;: &quot;Ziser&quot;,&#xA;                       &quot;name&quot;: &quot;Bürklinstraße 7, Lahr&quot;,&#xA;                       &quot;article&quot;: &quot;Geländer mit Mlichglas &quot;&#xA;                   }&#xA;               }&#xA;           ]&#xA;       }&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>Now my nextjs app code:</p>&#xA;<pre><code>export const getOrdersFilterList = async (page, pageSize, searchstring) =&gt; {&#xA;   const data = await client.query({&#xA;    query: gql`&#xA;    query getOrdersFilterList($searchstring: String) {&#xA;    orders(filters: {customer: { contains:  $searchstring}}){&#xA;          data {&#xA;          attributes {&#xA;            number&#xA;            customer &#xA;            name&#xA;            article&#xA;          }&#xA;        }&#xA;      }&#xA;    }`,&#xA;        variables: {searchstring}&#xA;  })&#xA;</code></pre>&#xA;<p>Variables same as above ( searchstring come from the call of the function )</p>&#xA;<pre><code>{&#xA;    &quot;searchstring&quot;: &quot;zi&quot;&#xA;}&#xA;</code></pre>&#xA;<p>this is what i get on the console (Firefox):&#xA;&quot; Object { data: {…}, loading: false, networkStatus: 7 } &quot;</p>&#xA;<p>I spend days to search. I can´t find a clue</p>&#xA;<p>Anyone can help ?</p>&#xA;",19767685,,1870780,2022-08-15 21:56:47,2022-08-17 12:15:35,Using strapi V4 graphql and nextjs - filters not work,<javascript><next.js><graphql><strapi>,1,0,0,2022-08-15 12:01:15
73366894,1,,,0,107,"<h2>source code:</h2>&#xA;<pre><code>type Query {&#xA;    getAccounts: [Account]!&#xA;    getAccountById(accountId: ID!): Account&#xA;}&#xA;&#xA;type Customer {&#xA;    id: ID!&#xA;    email: String!&#xA;    accounts: [Account]!&#xA;}&#xA;&#xA;type Account {&#xA;    id: ID!&#xA;    balance: Float!&#xA;    customer: Customer!&#xA;}&#xA;</code></pre>&#xA;<p>Controller:</p>&#xA;<pre class=""lang-kotlin prettyprint-override""><code>@Controller&#xA;class AccountController {&#xA;    @QueryMapping&#xA;    fun getAccounts(): List&lt;Account&gt; = getAccounts()&#xA;&#xA;    @QueryMapping&#xA;    fun getAccountById(@Argument accountId: String): Account? = getAccount(accountId)&#xA;&#xA;    @SchemaMapping(typeName = &quot;Account&quot;, field = &quot;customer&quot;)&#xA;    fun getCustomerFromAccount(source: Account): Customer? = getCustomer(source.customerId)&#xA;}&#xA;&#xA;data class Account(&#xA;    val id: UUID,&#xA;    val balance: BigDecimal,&#xA;    val customerId: UUID&#xA;) &#xA;data class Customer(&#xA;    val id: UUID,&#xA;    val email: String&#xA;)&#xA;</code></pre>&#xA;<h2>Issue Statement</h2>&#xA;<p>When I try to query</p>&#xA;<pre><code>query {&#xA;    getAccountById(accountId:&quot;2e7a7e62-10fe-4d42-8806-889e7e7a1fa4&quot;){&#xA;      balance&#xA;      customer {&#xA;          email&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>it works because the <code>getCustomerFromAccount</code> method's <code>source</code> argument is resolved as an <code>Account</code> type.</p>&#xA;<p>But if I try this,</p>&#xA;<pre><code>query {&#xA;    getAccounts{&#xA;      balance&#xA;      customer {&#xA;          email&#xA;      }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>This does not work as  <code>getCustomerFromAccount</code> method's <code>source</code> argument is expected as an <code>LinkedHashMap</code> type.</p>&#xA;<p>What am I doing wrong?</p>&#xA;<h2>Stacktrace:</h2>&#xA;<pre><code>java.lang.IllegalStateException: Parameter [0] in public org.dripto.banking.graphql.aggregator.Customer org.dripto.banking.graphql.aggregator.AccountController.getCustomerFromAccount(org.dripto.banking.graphql.aggregator.Account):  does not match the source Object type 'class java.util.LinkedHashMap'.&#xA;    at org.springframework.graphql.data.method.annotation.support.SourceMethodArgumentResolver.resolveArgument(SourceMethodArgumentResolver.java:75) ~[spring-graphql-1.0.1.jar:1.0.1]&#xA;    at org.springframework.graphql.data.method.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:83) ~[spring-graphql-1.0.1.jar:1.0.1]&#xA;    at org.springframework.graphql.data.method.annotation.support.DataFetcherHandlerMethod.getMethodArgumentValues(DataFetcherHandlerMethod.java:170) ~[spring-graphql-1.0.1.jar:1.0.1]&#xA;    at org.springframework.graphql.data.method.annotation.support.DataFetcherHandlerMethod.invoke(DataFetcherHandlerMethod.java:115) ~[spring-graphql-1.0.1.jar:1.0.1]&#xA;    at org.springframework.graphql.data.method.annotation.support.AnnotatedControllerConfigurer$SchemaMappingDataFetcher.get(AnnotatedControllerConfigurer.java:514) ~[spring-graphql-1.0.1.jar:1.0.1]&#xA;    at org.springframework.graphql.execution.ContextDataFetcherDecorator.lambda$get$0(ContextDataFetcherDecorator.java:74) ~[spring-graphql-1.0.1.jar:1.0.1]&#xA;    at org.springframework.graphql.execution.ReactorContextManager.invokeCallable(ReactorContextManager.java:104) ~[spring-graphql-1.0.1.jar:1.0.1]&#xA;    at org.springframework.graphql.execution.ContextDataFetcherDecorator.get(ContextDataFetcherDecorator.java:73) ~[spring-graphql-1.0.1.jar:1.0.1]&#xA;    at graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:279) ~[graphql-java-18.2.jar:na]&#xA;    at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:210) ~[graphql-java-18.2.jar:na]&#xA;    at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:60) ~[graphql-java-18.2.jar:na]&#xA;    at graphql.execution.ExecutionStrategy.completeValueForObject(ExecutionStrategy.java:667) ~[graphql-java-18.2.jar:na]&#xA;</code></pre>&#xA;<h2>Versions</h2>&#xA;<p>Kotlin Version: 1.7.10&#xA;Spring Boot: 2.7.2&#xA;JDK: 17 (temurin)</p>&#xA;",1847184,,,,2022-08-15 22:09:45,Spring-GraphQL: Source is sometimes resolved as object and other times as LinkedHashMap,<java><spring-boot><graphql><graphql-java><spring-graphql>,0,1,0,2022-08-15 22:09:45
73382580,1,,,0,60,"<p>I have queried graphql apis in jupyter notebooks with python before, however those apis were open and did not have any API keys. I am experimenting with a new api provider and it uses keys, this is the message that it shows:&#xA;&quot;API key must be included as HTTP header in every GraphQL request. Header name is X-API-KEY&quot;</p>&#xA;<p>this is the current code that I have for querying graphql apis:</p>&#xA;<pre><code>request = requests.post('https://graphql.bitquery.io''', json={'query': query})&#xA;if request.status_code == 200:&#xA;    return request.json()&#xA;else:&#xA;    raise Exception('Query failed. return code is {}.      {}'.format(request.status_code, query))&#xA;</code></pre>&#xA;<p>Any help would be greatly appreciated!</p>&#xA;",19772362,,,,2022-08-17 03:31:12,How to query a graphql api with api key from jupyter notebooks?,<python><api><jupyter-notebook><graphql>,0,1,0,2022-08-17 03:31:12
73388322,2,,73360735,0,,"<p>solved !&#xA;The Problem was the Variable</p>&#xA;<pre><code>{&#xA;    &quot;searchstring&quot;: &quot;zi&quot;&#xA;}&#xA;</code></pre>&#xA;<p>In every Tutorial or example i find it like above.&#xA;But the only thing your Variable must contain is</p>&#xA;<pre><code>zi&#xA;</code></pre>&#xA;<p>let´s explain in the code :</p>&#xA;<pre><code>export const getOrdersFilterList = async () =&gt; {&#xA;  // this is the variable&#xA;  const searchstring = &quot;zi&quot;&#xA;  // thats all&#xA;  const data = await client.query({&#xA;    query: gql`&#xA;    query getOrdersFilterList($searchstring: String) {&#xA;    orders(filters: {customer: { containsi:  $searchstring}}){&#xA;          data {&#xA;          attributes {&#xA;            number&#xA;            customer &#xA;            name&#xA;            article&#xA;          }&#xA;        }&#xA;      }&#xA;    }`,&#xA;        variables: {searchstring}&#xA;  })&#xA;</code></pre>&#xA;",19767685,,,,2022-08-17 12:15:35,"",,0,0,0,2022-08-17 12:15:35
73405822,1,,,2,56,"<p>I am using <a href=""https://github.com/99designs/gqlgen"" rel=""nofollow noreferrer"">github.com/99designs/gqlgen</a> to create my GraphQL in Go. I have a directive in there called hasRole for authorization purposes. The thing is that I want to make this directive apply to every field in Query/Mutation, in case a developer forgets adding it when creating new Query/Mutation. E.g.:</p>&#xA;<p><code>createUser(name: String): String @hasRole(role: [Admin])</code> - this is ok</p>&#xA;<p><code>createUser(name: String): String</code> - not ok</p>&#xA;<p>Any way to prevent the query/mutation from happening is acceptable. Is there any way to make this possible? Doesn't matter if it is done during generation, starting of the program, etc.</p>&#xA;",19795235,,18102554,2022-08-18 15:42:48,2022-08-18 15:42:48,Making a directive mandatory for every query/mutation,<go><graphql><authorization><directive>,0,0,0,2022-08-18 15:34:37
73409934,1,,,1,51,"<p>I'm using Nodejs Express to call a GraphQL endpoint that gets rendered in an ejs table.</p>&#xA;<p>My data is being displayed in the table horizontally (only 1 row)...</p>&#xA;<p>| Datasource  | Field    |</p>&#xA;<p>| ds-title1   | f-title1 | f-title2  | f-title3  | f-title4  |...</p>&#xA;<p>I want it to display vertically with the 1 same datasource seen over multiple rows for each different field...</p>&#xA;<p>| Datasource  | Field    |</p>&#xA;<p>| ds-title1   | f-title1 |</p>&#xA;<p>| ds-title1   | f-title2 |</p>&#xA;<p>| ds-title1   | f-title3 |</p>&#xA;<p>| ds-title1   | f-title4 |</p>&#xA;<p>Here is my code</p>&#xA;<p><strong>server.js</strong></p>&#xA;<pre><code>  app.get('/gql', async (req, res) =&gt; {&#xA;    var options = {&#xA;      'method': 'POST',&#xA;      'url': 'site.com/graphql',&#xA;      'headers': {&#xA;        'Auth': 'abc-123',&#xA;        'Content-Type': 'application/json'&#xA;      },&#xA;      body: JSON.stringify({&#xA;        query: `query {&#xA;                publishedDatasources (filter: {name: &quot;Datasource_Model&quot;}) {&#xA;                      name&#xA;                      fields (orderBy: {field: NAME, direction: ASC}) {&#xA;                              name&#xA;                              }&#xA;                        }&#xA;                  }`,&#xA;        variables: {}&#xA;      })&#xA;    };&#xA;    try {&#xA;    request(options, function (error, response, body) &#xA;    {&#xA;      if (error) throw new Error(error);&#xA;      const publishedDataSource = JSON.parse(body);&#xA;      const pubDataSource = publishedDataSource.data.publishedDatasources.map(item =&gt; item );&#xA;      &#xA;      res.render('gql.ejs', {pubDataSource});&#xA;      console.log(pubDataSource);&#xA;    });&#xA;  } catch(e) {&#xA;    console.log(&quot;Something went wrong&quot;, e)&#xA;  }&#xA;  });&#xA;</code></pre>&#xA;<p>I have no issues with getting and displaying data.</p>&#xA;<p>The data is returned in this format...</p>&#xA;<pre><code>{&#xA;  &quot;data&quot;: {&#xA;    &quot;publishedDatasources&quot;: [&#xA;      {&#xA;        &quot;name&quot;: &quot;ds-title1&quot;,&#xA;        &quot;fields&quot;: [&#xA;          {&#xA;            &quot;name&quot;: &quot;f-title1&quot;&#xA;          },&#xA;          {&#xA;            &quot;name&quot;: &quot;f-title2&quot;&#xA;          },&#xA;          {&#xA;            &quot;name&quot;: &quot;f-title3&quot;&#xA;          },&#xA;          {&#xA;            &quot;name&quot;: &quot;f-title4&quot;&#xA;          },&#xA;          {&#xA;            &quot;name&quot;: &quot;f-title5&quot;&#xA;          },&#xA;          {&#xA;            &quot;name&quot;: &quot;f-title6&quot;&#xA;          },&#xA;          {&#xA;            &quot;name&quot;: &quot;f-title7&quot;&#xA;          },&#xA;          {&#xA;            &quot;name&quot;: &quot;f-title8&quot;&#xA;          },&#xA;          {&#xA;            &quot;name&quot;: &quot;f-title9&quot;&#xA;          }&#xA;        ]&#xA;      }&#xA;    ]&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The ejs table is structured like this</p>&#xA;<p><strong>gql.ejs</strong></p>&#xA;<pre><code>                        &lt;table&gt;&#xA;&#xA;                            &lt;tr&gt;&#xA;                                &lt;th&gt;Datasource-Title&lt;/th&gt;&#xA;                                &lt;th&gt;Field-Title&lt;/th&gt;&#xA;                            &lt;/tr&gt;&#xA;                            &#xA;                            &lt;% pubDataSource.forEach(function(pds){ %&gt;&#xA;                            &lt;tr&gt;&#xA;                                &lt;td&gt;&#xA;                                    &lt;%= pds.name %&gt;&#xA;                                &lt;/td&gt;&#xA;&#xA;                                &lt;% pds.fields.forEach(function(field) { %&gt;&#xA;                                    &lt;td&gt;&#xA;                                        &lt;%= field.name %&gt; &#xA;                                    &lt;/td&gt;  &#xA;                                &lt;% }) %&gt;&#xA;                               &lt;/tr&gt;&#xA;                            &lt;% }) %&gt;&#xA;                            &#xA;                        &lt;/table&gt;&#xA;</code></pre>&#xA;<p>I'm guessing the horizontal display has something to do with how my table is structured with the ejs tags, but I've tried many different configurations and cannot get it to display in the desired vertical display. Ultimately, I will need to display even further nested children and grandchildren in the same table, but if I can get this 2-level version to work, I'm hoping the solution can be applied to 2+-levels.</p>&#xA;<p>Thank you for any help you can provide.</p>&#xA;",1597177,,1597177,2022-08-19 15:05:50,2022-08-19 15:05:50,How To Display Nested Data in Table in EJS Vertically,<node.js><html-table><graphql><ejs>,0,0,0,2022-08-18 22:06:54
73417244,1,,,0,42,<p>When i delete child content in amplify studio it will deleted the parent content to(AWS AMPLIFY)</p>&#xA;<p>here's my schema</p>&#xA;<pre><code>type Business @model @auth(rules: [{allow: public}]) {&#xA;id: ID!&#xA;businessName: String!&#xA;country: String!&#xA;userSub: String!&#xA;}&#xA;&#xA;type Category @model @auth(rules: [{allow: public}]) {&#xA;id: ID!&#xA;createdByUserSub: String!&#xA;name: String!&#xA;businessId: ID! &#xA;business: Business @hasOne(fields: [&quot;businessId&quot;])&#xA;}&#xA;</code></pre>&#xA;<p>when i deleted category content from amplify studio it also deleted the business content data</p>&#xA;<p>i want to know how to delete only category data not the business data</p>&#xA;<p>thanks</p>&#xA;,19802220,,,,2022-12-02 21:32:33,When i delete child content in amplify studio it will deleted the parent content to(AWS AMPLIFY and GRAPHQL),<amazon-web-services><graphql><aws-amplify>,0,0,0,2022-08-19 13:03:56
73420172,1,73462241,,0,57,"<p>I was following a tutorial for a full stack web application with NextJS GraphQLNexus and Prisma along with Apollo server to handle the api.</p>&#xA;<p>Everything was working until I changed an enum type somewhere and now the linter is yelling at me for types that seem to be the same but are nonetheless diffrent.</p>&#xA;<p>The exact error is super wordy but here it is in it's entirety</p>&#xA;<pre><code>  Type 'PrismaPromise&lt;Tickets[]&gt;' is not assignable to type 'MaybePromise&lt;{ active?: boolean; broken_item?: string; creator?: number; id?: number; issue_desc?: string; loc?: string; prio?: &quot;Low&quot; | &quot;Medium&quot; | &quot;High&quot; | &quot;Critical&quot; | &quot;Very Low&quot;; }[]&gt;'.&#xA;    Type 'PrismaPromise&lt;Tickets[]&gt;' is not assignable to type 'PromiseLike&lt;{ active?: boolean; broken_item?: string; creator?: number; id?: number; issue_desc?: string; loc?: string; prio?: &quot;Low&quot; | &quot;Medium&quot; | &quot;High&quot; | &quot;Critical&quot; | &quot;Very Low&quot;; }[]&gt;'.&#xA;      Types of property 'then' are incompatible.&#xA;        Type '&lt;TResult1 = Tickets[], TResult2 = never&gt;(onfulfilled?: (value: Tickets[]) =&gt; TResult1 | PromiseLike&lt;TResult1&gt;, onrejected?: (reason: any) =&gt; TResult2 | PromiseLike&lt;...&gt;) =&gt; Promise&lt;...&gt;' is not assignable to type '&lt;TResult1 = { active?: boolean; broken_item?: string; creator?: number; id?: number; issue_desc?: string; loc?: string; prio?: &quot;Low&quot; | &quot;Medium&quot; | &quot;High&quot; | &quot;Critical&quot; | &quot;Very Low&quot;; }[], TResult2 = never&gt;(onfulfilled?: (value: { active?: boolean; ... 5 more ...; prio?: &quot;Low&quot; | ... 3 more ... | &quot;Very Low&quot;; }[]) =&gt; TRes...'.&#xA;          Types of parameters 'onfulfilled' and 'onfulfilled' are incompatible.&#xA;            Types of parameters 'value' and 'value' are incompatible.&#xA;              Type 'Tickets[]' is not assignable to type '{ active?: boolean; broken_item?: string; creator?: number; id?: number; issue_desc?: string; loc?: string; prio?: &quot;Low&quot; | &quot;Medium&quot; | &quot;High&quot; | &quot;Critical&quot; | &quot;Very Low&quot;; }[]'.&#xA;                Type 'Tickets' is not assignable to type '{ active?: boolean; broken_item?: string; creator?: number; id?: number; issue_desc?: string; loc?: string; prio?: &quot;Low&quot; | &quot;Medium&quot; | &quot;High&quot; | &quot;Critical&quot; | &quot;Very Low&quot;; }'.&#xA;                  Types of property 'prio' are incompatible.&#xA;                    Type 'prio_level' is not assignable to type '&quot;Low&quot; | &quot;Medium&quot; | &quot;High&quot; | &quot;Critical&quot; | &quot;Very Low&quot;'.&#xA;                      Type '&quot;Very_Low&quot;' is not assignable to type '&quot;Low&quot; | &quot;Medium&quot; | &quot;High&quot; | &quot;Critical&quot; | &quot;Very Low&quot;'. Did you mean '&quot;Very Low&quot;'?ts(2322)&#xA;definitionBlocks.d.ts(158, 5): The expected type comes from property 'resolve' which is declared here on type 'NexusOutputFieldConfig&lt;&quot;Query&quot;, &quot;tickets&quot;&gt;' &#xA;</code></pre>&#xA;<p>Here is the resolver it errors on:&#xA;in graphql/types/Ticket.ts</p>&#xA;<pre><code>export const TicketQuery = extendType({&#xA;    type: 'Query',&#xA;    definition(t) {&#xA;      t.list.field('tickets', {&#xA;        type: Ticket,&#xA;        resolve(_parent, _args, ctx) {&#xA;          return ctx.prisma.tickets.findMany()&#xA;        },&#xA;      })&#xA;    },&#xA;  })&#xA;</code></pre>&#xA;<p>The query is called tickets because I was following tutorial but it seems to be in the schema.graphql:</p>&#xA;<pre><code>type Query {&#xA;  tickets: [Ticket]!&#xA;}&#xA;</code></pre>&#xA;<p>Here is everywhere I could find that the Enum is defined:</p>&#xA;<p>In graphql/types/Ticket.ts:</p>&#xA;<pre><code>const PrioEnum = enumType({&#xA;    name: 'PrioEnum',&#xA;    members: {&#xA;        Very_Low: 'Very_Low',&#xA;        Low: 'Low',&#xA;        Medium: 'Medium',&#xA;        High: 'High',&#xA;        Critical: 'Critical',&#xA;    },&#xA;  })&#xA;</code></pre>&#xA;<p>In graphql/schema.graphql:</p>&#xA;<pre><code>enum PrioEnum {&#xA;  Very_Low&#xA;  Low&#xA;  Medium&#xA;  High&#xA;  Critical&#xA;}&#xA;</code></pre>&#xA;<p>Finally in prisma/schema.prisma :</p>&#xA;<pre><code>enum prio_level {&#xA;  Very_Low @map(&quot;Very_Low&quot;)&#xA;  Low&#xA;  Medium&#xA;  High&#xA;  Critical&#xA;}&#xA;</code></pre>&#xA;<p>Originally I thought it was just not recognizing updates to the enum because Very_Low used to be mapped to @map(&quot;Very Low&quot;) but I made the current change and the did <code>npx prisma db push</code> which warned me that I was changing the enum value for Very_Low in the database (I hadn't written anything to it yet) and then confirmed the change with no further warnings or errors.</p>&#xA;<p>I think maybe swapping all the enums to &quot;Very Low&quot; might fix it but I shouldn't have to.</p>&#xA;",19730434,,19730434,2022-08-19 17:15:46,2022-08-23 16:32:58,GraphQL Nexus Prisma cannot resolve resolver to correct type?,<next.js><graphql><apollo><nexus><prisma-graphql>,1,0,0,2022-08-19 17:13:52
73420921,1,,,0,41,<p>I am trying to access data from grandparent in a grandchild resolver. How do I achieve this?</p>&#xA;<pre><code>{&#xA;    field1&#xA;    field2 {&#xA;        child1 {&#xA;            grandchild1&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>I want to access field1 in grandchild1. How to go about that?</p>&#xA;,14152751,,,,2022-08-19 18:29:13,How to access data from grandparent in apollo graphql server?,<graphql><apollo-server><resolver>,0,0,0,2022-08-19 18:29:13
73447887,2,,55793390,0,,"<p>Most probably too late but I had the same issue and figured out.</p>&#xA;<p><strike>You cannot use <code>BETWEEN</code> for types that are not integers (whether <code>String</code> or Scalars like <code>AWSDate</code>).</strike></p>&#xA;<p>EDIT: Sorry I'm wrong, you actually can use <code>BETWEEN</code> for <code>String</code> or Scalars like <code>AWSDate</code>. <strong>But you need a dedicated secondary DynamoDB index (like <code>userId-userInfoDate-index</code>) with a hash key on another field like <code>userId</code> where you would look for the exact key, and the range key on <code>userInfoDate</code></strong>. The resolver would then look like:</p>&#xA;<pre><code>{&#xA;    &quot;version&quot; : &quot;2018-05-29&quot;,&#xA;    &quot;operation&quot; : &quot;Query&quot;,&#xA;    &quot;index&quot; : &quot;userId-userInfoDate-index&quot;,&#xA;    &quot;query&quot;: {&#xA;        &quot;expression&quot;: &quot;userId =:userId AND userInfoDate BETWEEN :start AND :end&quot;,&#xA;        &quot;expressionValues&quot;: {&#xA;            &quot;:userId&quot;: $util.dynamodb.toDynamoDBJson($ctx.args.userId),&#xA;            &quot;:start&quot;: $util.dynamodb.toDynamoDBJson($ctx.args.start),&#xA;            &quot;:end&quot;: $util.dynamodb.toDynamoDBJson($ctx.args.end),&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>}</p>&#xA;<p>That means of course you need another criteria in your query, like <code>userId</code>.</p>&#xA;<p>If you can't, you can also use a <code>Scan</code> query with two filters on the same key. But a <code>Scan</code> would probably be way slower than a <code>Query</code> since it would search on the whole table not using indexes.</p>&#xA;<pre><code>{&#xA;    &quot;version&quot; : &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot; : &quot;Scan&quot;,&#xA;    &quot;filter&quot;: {&#xA;        &quot;expression&quot;: &quot;userInfoDate &gt;= :start AND userInfoDate &lt;= :end&quot;,&#xA;        &quot;expressionValues&quot; : {&#xA;            &quot;:start&quot; : $util.dynamodb.toDynamoDBJson($ctx.args.start),&#xA;            &quot;:end&quot; : $util.dynamodb.toDynamoDBJson($ctx.args.end)&#xA;        }&#xA;    }&#xA;}&#xA;</code></pre>&#xA;",4417586,,4417586,2022-08-24 10:27:11,2022-08-24 10:27:11,"",,0,0,0,2022-08-22 15:54:21
73466982,1,,,0,72,"<p>Is it possible to limit GraphQL mutation requests towards AWS AppSync to be made through POST requests only?</p>&#xA;<p><a href=""https://www.apollographql.com/blog/graphql/basics/making-graphql-requests-using-http-methods/"" rel=""nofollow noreferrer"">Making GraphQL Requests using HTTP Methods - Apollo GraphQL Blog</a> shows that for Apollo GQL servers, mutation requests don't work on the GET method. But for AWS AppSync API endpoint, I have tested and verified that mutation requests can be made through GET calls like below (redacted).</p>&#xA;<pre><code>https://xxxxxxxxx.appsync-api.us-west-2.amazonaws.com/graphql?query=mutation%20xxxxxxxxxx&#xA;</code></pre>&#xA;<p>This is particularly problematic because my CSRF prevention mechanism works for POST calls only. If &quot;mutation on GET&quot; is allowed by AppSync, it could be exploited by malicious CSRF attacks.</p>&#xA;<p>A brute-force method I can think of is to add an <a href=""https://docs.aws.amazon.com/waf/latest/developerguide/waf-rule-statement-fields-list.html#waf-rule-statement-request-component-http-method"" rel=""nofollow noreferrer"">AWS WAF rule</a> to match the <code>POST</code> method only for requests towards AppSync. Is there a better solution?</p>&#xA;",4993386,,,,2022-08-24 03:00:16,AWS AppSync - Allow mutation from POST request only,<amazon-web-services><graphql><aws-appsync>,0,0,0,2022-08-24 03:00:16
73486592,1,,,0,8,"<p>I am working for this company where we need to get some data out of GraphQL into our Snowflake environment. I would like to first get the data using SQL syntax. I've found this <a href=""https://www.cdata.com/kb/tech/graphql-python-pandas.rst#Execute-SQL-to-GraphQL_ovggkbjep"" rel=""nofollow noreferrer"">article</a> that shows how to use the <code>create_engine</code> function from <code>sqlalchemy</code> but it's using Basic auth. I have an API key (Bearer auth) which I've successfully used with the <code>request</code> module but can't figure out how to use it with the <code>sqlalchemy</code> engine. All I have is the URL and token.</p>&#xA;<p>Would you know what libraries I'd need and how can I achieve this?</p>&#xA;<p>This is what I tried so far</p>&#xA;<pre class=""lang-py prettyprint-override""><code>from sqlalchemy import create_engine&#xA;engine = create_engine('graphql://graphql.myorg.com/graphql')&#xA;df = pd.read_sql('select col1 from table', engine)&#xA;</code></pre>&#xA;<p>But I get an error</p>&#xA;<pre><code>KeyError: 'graphql'&#xA;</code></pre>&#xA;",9972301,,,,2022-08-25 11:21:55,How to get graphql data in pandas using sqlalchemy?,<python><pandas><sqlalchemy><graphql>,0,0,0,2022-08-25 11:21:55
73490646,2,,72649704,1,,"<p>Session in your Image schema doesn't tell through which field it should connect to.&#xA;Updated schema:</p>&#xA;<pre><code>type Image @model @auth(rules: [{allow: public}]) {&#xA;  id: ID!&#xA;  sessionID: ID! @index(name: &quot;bySession&quot;)&#xA;  Session: Session @belongsTo(fields: [&quot;sessionID&quot;]) &#xA;}&#xA;&#xA;type Session @model @auth(rules: [{allow: public}]) {&#xA;  id: ID!&#xA;  Images: [Image] @hasMany(indexName: &quot;bySession&quot;, fields: [&quot;id&quot;])&#xA;  cartridge_id: ID&#xA;  device_id: ID&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://docs.amplify.aws/cli/graphql/data-modeling/#belongs-to-relationship"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/data-modeling/#belongs-to-relationship</a></p>&#xA;",19846619,,,,2022-08-25 16:05:42,"",,0,0,0,2022-08-25 16:05:42
73506280,1,,,0,12,"<p>I am kind of new to aws amplify and I don't understand where I can create a new mutation of type &quot;create&quot;.</p>&#xA;<p>I would like to do the following:</p>&#xA;<ul>&#xA;<li>I have one house model (GraphQL) that has a name and can have multiple people assigned to it (one to many).</li>&#xA;<li>When I create the house, I want to automatically assign the user who is connected (cognito) to be the owner of the    house. From the serverside so on the mutation because i don't want to assign this in the api call since it could be modified.</li>&#xA;</ul>&#xA;<p>Any tips where I can create this mutation or a link to a tutorial on how to accomplish this?</p>&#xA;",10155317,,10155317,2022-08-26 23:48:14,2022-08-26 23:48:14,AWS Studio create new mutation,<amazon-web-services><graphql><aws-amplify>,0,0,0,2022-08-26 20:41:05
73506531,1,73530398,,0,40,"<p>I have two models in my graphql schema and the one I am trying to query on, Sessions, has two @belongsTo directives (read on a forum this matters). I can successfully save these models and view them on the AWS AppSync Queries Tab where I can query getSessions successfully BUT when I try to the exact same query locally following these docs:</p>&#xA;<p>(<a href=""https://docs.amplify.aws/lib/graphqlapi/advanced-workflows/q/platform/flutter/#combining-multiple-operations"" rel=""nofollow noreferrer"">https://docs.amplify.aws/lib/graphqlapi/advanced-workflows/q/platform/flutter/#combining-multiple-operations</a>)</p>&#xA;<p>I get an error locally:</p>&#xA;<pre><code>type &quot;Null&quot; is not a subtype of type 'string'&#xA;</code></pre>&#xA;<p>What am I doing wrong and how do I fix this so I can successfully retrieve my nested query:</p>&#xA;<p>Here are my models as a reference:</p>&#xA;<p>Sessions:</p>&#xA;<pre class=""lang-html prettyprint-override""><code>type Session&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: public }&#xA;      { allow: owner }&#xA;      { allow: groups, groups: [&quot;Admin&quot;] }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  name: String&#xA;  numPeoplePresent: Int&#xA;  notes: String&#xA;  eIdReader: String&#xA;  weighTiming: String&#xA;  cows: [Cow] @manyToMany(relationName: &quot;CowSession&quot;)&#xA;  proceduresID: ID&#xA;  procedures: Procedures @hasOne(fields: [&quot;proceduresID&quot;])&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>Cow:</p>&#xA;<pre class=""lang-html prettyprint-override""><code>type Cow&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: public }&#xA;      { allow: owner }&#xA;      { allow: groups, groups: [&quot;Admin&quot;] }&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  name: String!&#xA;  RfId: String&#xA;  weight: [Float!]!&#xA;  temperament: [Int]&#xA;  breed: String&#xA;  type: String&#xA;  dateOfBirth: AWSDate&#xA;  sessions: [Session] @manyToMany(relationName: &quot;CowSession&quot;)&#xA;  procedures: [Procedures] @manyToMany(relationName: &quot;CowProcedures&quot;)&#xA;}&#xA;</code></pre>&#xA;&#xA;<p>This is the query that is causing the error:</p>&#xA;<pre class=""lang-html prettyprint-override""><code>const getSession = 'getSession';&#xA;      String graphQLDocument = '''query getSession(\$id: ID!) {&#xA;        $getSession(id: \$id) {&#xA;          numPeoplePresent&#xA;          notes&#xA;          name&#xA;          eIdReader&#xA;          id&#xA;          owner&#xA;          proceduresID&#xA;          updatedAt&#xA;          weighTiming&#xA;          cows {&#xA;            items {&#xA;              cow {&#xA;                RfId&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }''';&#xA;      final getSessionRequest = GraphQLRequest&lt;Session&gt;(&#xA;        document: graphQLDocument,&#xA;        modelType: Session.classType,&#xA;        variables: &lt;String, String&gt;{'id': sessID}, //parameter of the current session can hardcode to whatever you need here &#xA;        decodePath: getSession,&#xA;      );&#xA;      final response =&#xA;          await Amplify.API.query(request: getSessionRequest).response;&#xA;      print('Response: ${response.data}');&#xA;</code></pre>&#xA;&#xA;",18786160,,12567365,2022-08-26 23:21:54,2022-08-29 14:31:36,Querying Many-To-Many Relationships in AWS Amplify,<graphql><aws-amplify><flutter-aws-amplify><amplify-flutter>,1,0,0,2022-08-26 21:14:14
73511481,1,,,0,3,"<p>I have a Data Model on Aws Amplify&#xA;I wanna change something but it's about four days I can't do it and always fails&#xA;I hope someone can help me</p>&#xA;<p>there is a screenshot of my Model&#xA;<a href=""https://i.stack.imgur.com/4G4DO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4G4DO.png"" alt=""enter image description here"" /></a></p>&#xA;<p>So what it does Now&#xA;Users can create tickets&#xA;Only the Owner can see his ticket and edit it and anyone on the Admin Group</p>&#xA;<p>each Ticket has some messages&#xA;so what I want to do there&#xA;I want user and Admins can add Messages to a Ticket (user for owned tickets only )&#xA;Only Ticket Owner can see Ticket Messages ether its owner's message or message from admin</p>&#xA;<p>there is a built-in Owner-based Scope&#xA;but when I use it user can see messages from Admin&#xA;Thanks</p>&#xA;",16517653,,,,2022-08-27 13:42:09,Graphql Permessions for Ticket Only And Admins Group,<amazon-web-services><graphql><amplify>,0,0,0,2022-08-27 13:42:09
73524565,1,73561189,,0,50,"<p>I have research it for several days but could not find a definitive answer for it.</p>&#xA;<p>My use case is I have a PostgreSQL database hosted on AWS EKS and I want to expose it using GraphQL, which generally leads to AWS AppSync.</p>&#xA;<p>I understand that AppSync can be auto imported from DynamoDB only however I am not using that. From several articles it suggested a Lambda Function to connect between AppSync and PostgreSQL. Which I tried, but I need the two feature which is:</p>&#xA;<ul>&#xA;<li>Auto Generated Schema</li>&#xA;<li>Hot reload of the schema whenever there is changes in the database</li>&#xA;</ul>&#xA;<p>Currently I am using PostGraphile for these two features however I am not sure AppSync can be connected to that, as I understand we need to push the schema generated by PostGraphile to AppSync, but I need it to be automatic.</p>&#xA;<p>Eg: I create a new table in PostgreSQL -&gt; PostGraphile Lambda Function reload the schema -&gt; Reflects on AppSync schema automatically -&gt; User call new table via AppSync</p>&#xA;<p>Can this flow be achieved? Is there anything I can use as reference?</p>&#xA;<p>Thank you!</p>&#xA;",7739171,,,,2022-08-31 19:50:05,How to connect self hosted PostgreSQL on AWS EKS to AWS AppSync with auto schema generation and hot reload?,<postgresql><amazon-web-services><graphql><aws-appsync><postgraphile>,1,0,0,2022-08-29 05:48:28
73530398,2,,73506531,1,,<p>The wonderful people at amplify answered this quickly so I will relay the information here:</p>&#xA;<p>the problem was the intermediary ids were not included in my local query so it was unable to retrieve the nested Cows. Updated query looks like this:</p>&#xA;<pre><code>getSession = 'getSession';&#xA;  String graphQLDocument = '''query getSession(\$id: ID!) {&#xA;    $getSession(id: \$id) {&#xA;      numPeoplePresent&#xA;      notes&#xA;      name&#xA;      eIdReader&#xA;      id&#xA;      owner&#xA;      proceduresID&#xA;      updatedAt&#xA;      weighTiming&#xA;      cows {&#xA;        items {&#xA;          id &lt;-- needed this one&#xA;          cow {&#xA;            id &lt;-- and this id too&#xA;            RfId&#xA;            breed&#xA;            dateOfBirth&#xA;            name&#xA;            type&#xA;            weight&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }''';&#xA;</code></pre>&#xA;,18786160,,,,2022-08-29 14:31:36,"",,0,0,0,2022-08-29 14:31:36
73538659,1,,,0,18,"<p>I'm trying to add some custom logic to one of my tables on Hasura Postgre.</p>&#xA;<div class=""s-table-container"">&#xA;<table class=""s-table"">&#xA;<thead>&#xA;<tr>&#xA;<th>id : PK</th>&#xA;<th>user_id : FK</th>&#xA;<th>tag_id : FK</th>&#xA;<th>is_active : bool</th>&#xA;</tr>&#xA;</thead>&#xA;<tbody>&#xA;<tr>&#xA;<td>1</td>&#xA;<td>abc</td>&#xA;<td>xyz</td>&#xA;<td><strong>true</strong></td>&#xA;</tr>&#xA;<tr>&#xA;<td>2</td>&#xA;<td>abc</td>&#xA;<td>xyz</td>&#xA;<td>false</td>&#xA;</tr>&#xA;<tr>&#xA;<td>3</td>&#xA;<td>abc</td>&#xA;<td>xyz</td>&#xA;<td>false</td>&#xA;</tr>&#xA;</tbody>&#xA;</table>&#xA;</div>&#xA;<p>Allow <strong>only one row</strong> with same pair of FK's but column <strong>is_active == true</strong>;</p>&#xA;<p>Allow <strong>multiple rows</strong> with same pair of FK's but column <strong>is_active == false</strong>;</p>&#xA;<p>...</p>&#xA;<p>How can I set Hasura up to in case of an insert or update, Hasura would update the old value with <strong>is_active = false</strong> and keep only the new one with <strong>is_active = true</strong> automatically.</p>&#xA;<p>Thanks!!!</p>&#xA;",12561837,,12561837,2022-08-30 07:33:42,2022-09-02 14:34:47,hasura unique keys + bool condition,<graphql><hasura>,1,2,0,2022-08-30 07:28:30
73545235,2,,50571442,0,,"<p><a href=""https://github.com/uladkasach/sql-code-generator"" rel=""nofollow noreferrer"">sql-code-generator</a> is another option.</p>&#xA;<p>It does:</p>&#xA;<blockquote>&#xA;<ul>&#xA;<li>generating type definitions from SQL resources (e.g., tables, views, functions, procedures)</li>&#xA;<li>generating type definitions from SQL queries (e.g., select * from table)</li>&#xA;<li>generating typed functions that execute SQL queries from SQL queries (e.g., const sqlQueryFindAllUsersByName = async ({ input: InputType }): Promise)</li>&#xA;</ul>&#xA;</blockquote>&#xA;",132208,,,,2022-08-30 15:50:07,"",,0,0,0,2022-08-30 15:50:07
73561189,2,,73524565,0,,"<p>If anyone still wondering, I found a resource from AWS seems to be able to achieve this with some tweaks and changes:&#xA;<a href=""https://github.com/aws-samples/appsync-with-postgraphile-rds"" rel=""nofollow noreferrer"">https://github.com/aws-samples/appsync-with-postgraphile-rds</a></p>&#xA;",7739171,,,,2022-08-31 19:50:05,"",,0,0,0,2022-08-31 19:50:05
73566536,1,,,0,45,"<p>I am consuming a GraphQL endpoint from a c# application, this is my current code which returns data nicely:</p>&#xA;<pre><code>public async Task&lt;List&lt;UkClient&gt;&gt; GetAllUkClients(int[] accounts)&#xA;{&#xA;    var query = new GraphQLRequest&#xA;    {&#xA;        Query = @&quot;&#xA;        query {&#xA;              ukClients(where:{ accountId:{ in: [101,102]}, inactive: {eq:true}}) {&#xA;                inactive,&#xA;                company{&#xA;                  companyName,&#xA;                  postalCode&#xA;                }&#xA;              }                    &#xA;        }&quot;,&#xA;        Variables = new { accounts = accounts }&#xA;&#xA;    };&#xA;    var response = await _graphQlClient.SendQueryAsync&lt;ResponseAccountCollectionType&gt;(query);&#xA;    return response.Data.UkClients;&#xA;}&#xA;</code></pre>&#xA;<p>As you can see the account IDs are currently hard coded in the query, but I have defined a variable below which will be populated from the calling code.</p>&#xA;<p>How do I update the query to swap out the hard coded array of accounts and instead take the array of accounts being passed in?</p>&#xA;",1025915,,,,2022-09-01 08:44:57,How to consume GraphQL endpoint with parameters in C#,<c#><graphql>,0,0,0,2022-09-01 08:44:57
73577086,1,,,0,92,"<p>I'm trying to use a GraphQL Input Type inside another Input Type (AKA a nested Input Type) for a GraphQL mutation via aws-appsync's Apollo Client, inside my React-Native app.</p>&#xA;<pre><code>input S3ObjectInput {&#xA;    bucket: String!&#xA;    key: String!&#xA;    region: String!&#xA;    localUri: String&#xA;    mimeType: String&#xA;}&#xA;&#xA;input UpdateUserInput {&#xA;    cognitoId: ID!&#xA;    firstName: String&#xA;    lastName: String&#xA;&#xA;    ...&#xA;&#xA;    profilePictureInput: S3ObjectInput&#xA;}&#xA;&#xA;type User @aws_cognito_user_pools {&#xA;    cognitoId: ID!&#xA;    firstName: String!&#xA;    lastName: String!&#xA;    &#xA;    ...&#xA;    &#xA;    profilePicture: S3Object&#xA;}&#xA;&#xA;type S3Object @aws_cognito_user_pools {&#xA;    bucket: String!&#xA;    key: String!&#xA;    region: String!&#xA;}&#xA;&#xA;type Mutation {&#xA;    updateUser(input: UpdateUserInput!): User&#xA;        @aws_cognito_user_pools&#xA;}&#xA;&#xA;const updateUser = gql`&#xA;  mutation updateUser($input: UpdateUserInput!) {&#xA;    updateUser(input: $input) {&#xA;      cognitoId&#xA;      firstName&#xA;      lastName&#xA;      &#xA;      ...&#xA;      &#xA;      profilePicture {&#xA;        bucket&#xA;        key&#xA;        region&#xA;      }&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>Finally, here's the TypeScript code I use to execute the mutation:</p>&#xA;<pre><code>const appSyncClient = new AWSAppSyncClient({&#xA;  url: Amazon.graphQLEndpointUrl,&#xA;  region: Amazon.region,&#xA;  disableOffline: true,&#xA;  auth: {&#xA;    type: Amazon.graphApiAuthentication,&#xA;    jwtToken: async () =&gt;&#xA;      (await Auth.currentSession()).getIdToken().getJwtToken(),&#xA;  },&#xA;  complexObjectsCredentials: () =&gt; Auth.currentCredentials(),&#xA;});&#xA;&#xA;&#xA;static async updateUser(user: User) {&#xA;    try {&#xA;      let response = await appSyncClient.mutate({&#xA;        mutation: mutations.updateCaptain,&#xA;        variables: {&#xA;          input: {&#xA;            cognitoId: user.cognitoId,&#xA;            profilePictureInput: {&#xA;                bucket: user.bucket,&#xA;                key: user.key,&#xA;                region: user.region,&#xA;                localUri: user.localUri,&#xA;                mimeType: user.mimeType,&#xA;            }&#xA;          },&#xA;        },&#xA;      });&#xA;&#xA;      return User.getUserFromAppSyncResponse(response, 'updateUser');&#xA;    } catch (error) {&#xA;      console.log('Api.updateUser error', error);&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>This returns the following error:</p>&#xA;<p><strong>[Error: Network error: GraphQL error: Invalid attempt to iterate non-iterable instance.&#xA;In order to be iterable, non-array objects must have a Symbol.iterator method.]</strong></p>&#xA;<p>This only happens when attempting to nest the S3ObjectInput inside the UpdateUserInput type. If I remove that nested field the error goes away, and everything else in the update mutation works fine.</p>&#xA;<p>So, my question is, how is the nesting of Input Types achieved, for GraphQL mutations, to an AWS AppSync API, from a React-Native app?</p>&#xA;",608578,,,,2022-09-02 01:58:27,AWS AppSync GraphQL -- Nested Input Tyes,<typescript><react-native><graphql><aws-appsync><appsync-apollo-client>,0,0,0,2022-09-02 01:58:27
73582604,1,,,0,41,"<p>I am new to graphql and I am having this anycodings_mutation issue and don't know how to solve it.</p>&#xA;<p>for example, I have two tables: book and anycodings_mutation book_author;</p>&#xA;<p>the book has book_id and name book_author has anycodings_mutation book_author_id, book_id, author_name</p>&#xA;<p>that two tables need to be inserted values anycodings_mutation at a single request but the book_author anycodings_mutation table needs the book_id which from the book anycodings_mutation table itself with be generated.</p>&#xA;<p>can someone help me with this? help is much anycodings_mutation appreciated.</p>&#xA;<p>the expected result is when calling post request anycodings_mutation or upon inserting.</p>&#xA;<p>for ex. the system generated book_id bk123, anycodings_mutation the book_id in the table book_author should anycodings_mutation be the same too.</p>&#xA;",17508957,,,,2022-09-02 12:29:01,"Is there a way how to insert two tables at the same time, but the second table is dependent on the return of from the first table",<graphql><hasura>,0,1,0,2022-09-02 12:29:01
73582878,1,,,0,11,"<p>I have AWS AppSync mutation in form of a pipeline(VTL template). In this pipeline, i need to invoke function in pipeline config twice with different parameters. Parameters for this function, i am setting in requestMappingTemplate of my mutation.</p>&#xA;<p>Example of mutation:</p>&#xA;<pre><code>appsync.Resolver('mutationName', {&#xA;  pipelineConfig: [fun.myFunction],&#xA;  requestMappingTemplate: appsync.MappingTemplate.fromString(`&#xA;    $util.qr($ctx.stash.put(&quot;parameters&quot;, data1))&#xA;&#xA;    ## Here i need to invoke this function again  &#xA;    $util.qr($ctx.stash.put(&quot;parameters&quot;, data2))&#xA;  `)&#xA;});&#xA;</code></pre>&#xA;<p>Is it possible to invoke myFunction twice with different parameters?</p>&#xA;",12326985,,,,2022-09-02 12:52:41,AWS pipeline how to invoke function twice,<function><graphql><aws-appsync><mutation><vtl>,0,0,0,2022-09-02 12:52:41
73600684,1,,,0,21,"<p>I'm almost newbie with Android and AWS, so I tried to follow the AWS Tutorial to create a simple App to store User's Notes, this tutorial is:</p>&#xA;<p><a href=""https://aws.amazon.com/it/getting-started/hands-on/build-android-app-amplify/"" rel=""nofollow noreferrer"">https://aws.amazon.com/it/getting-started/hands-on/build-android-app-amplify/</a></p>&#xA;<p>Everything is working fine (I can create, update and delete notes) except the query used to retrieve all User's notes.&#xA;More in details, below the GraphQL schema</p>&#xA;<pre><code>type NoteData&#xA;@model&#xA;@auth (rules: [ { allow: owner } ]) {&#xA;    id: ID!&#xA;    name: String!&#xA;    description: String&#xA;    image: String&#xA;}&#xA;</code></pre>&#xA;<p>and the code used to retrieve notes</p>&#xA;<pre><code>fun queryNotes() {&#xA;        Log.i(TAG, &quot;Querying notes&quot;)&#xA;&#xA;        Amplify.API.query(&#xA;            ModelQuery.list(NoteData::class.java),&#xA;            { response -&gt;&#xA;                Log.i(TAG, &quot;Queried&quot;)&#xA;                if (response.hasErrors()) {&#xA;                    Log.i(TAG, response.errors.toString())&#xA;                } else if (response.hasData()) {&#xA;                    for (noteData in response.data) {&#xA;                        Log.i(TAG, noteData.name)&#xA;                        UserData.addNote(UserData.Note.from(noteData))&#xA;                    }&#xA;                }&#xA;            },&#xA;            { error -&gt; Log.e(TAG, &quot;Query failure&quot;, error) }&#xA;        )&#xA;    } &#xA;</code></pre>&#xA;<p>When I try to retrieve notes using the code above I get the following error:</p>&#xA;<pre><code>GraphQLResponse.Error{message='Validation error of type FieldUndefined: Field 'listNoteDatas' in type 'Query' is undefined @ 'listNoteDatas'', locations='[GraphQLLocation{line='2', column='3'}]', path='null', extensions='null'}]&#xA;</code></pre>&#xA;<p>The User management with Cognito is working fine, I'm able to login, logout, create and delete notes, so I think that there is a problem in the list method.</p>&#xA;<p>Any idea on how to solve this problem?</p>&#xA;<p>Thanks in advance for your help!</p>&#xA;",4745775,,,,2022-09-04 15:38:03,AWS Amplify GraphQL - Error when I query full list,<android><amazon-web-services><graphql><aws-amplify>,0,0,0,2022-09-04 15:38:03
73606700,1,73633938,,0,74,"<p>I'm using <code>@neo4j/graphql</code> library to define my graphql API interface. I've got my Todo model and I would like anyone to read it, but I'd like only admin role to be able to edit it. I'm using NestJS as backend. Type definition is as follows:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// type-defs.ts&#xA;export typeDefs = gql(`&#xA;type Todo {&#xA;    id: ID! @id&#xA;    owner: String!&#xA;    title: String&#xA;  }&#xA;&#xA;  extend type Todo&#xA;    @auth(&#xA;      rules: [&#xA;        { operations: [READ], allowUnauthenticated: true }&#xA;        { operations: [CREATE, DELETE, UPDATE], allow: { roles: [&quot;ADMIN&quot;] } }&#xA;      ]&#xA;    )&#xA;`);&#xA;&#xA;&#xA;// gql.module.ts&#xA;&#xA;const neoSchema = new Neo4jGraphQL({&#xA;  typeDefs,&#xA;  driver,&#xA;  plugins: {&#xA;    auth: new Neo4jGraphQLAuthJWKSPlugin({&#xA;      jwksEndpoint: `https://cognito-idp.${process.env.COGNITO_REGION}.amazonaws.com/${process.env.COGNITO_USER_POOL_ID}`,&#xA;    }),&#xA;  },&#xA;});&#xA;&#xA;@Module({&#xA;  providers: [],&#xA;  imports: [&#xA;    GraphQLModule.forRootAsync&lt;ApolloDriverConfig&gt;({&#xA;      driver: ApolloDriver,&#xA;      useFactory: async () =&gt; {&#xA;        const schema = await neoSchema.getSchema();&#xA;        await neoSchema.assertIndexesAndConstraints({&#xA;          options: { create: true },&#xA;        });&#xA;        return {&#xA;          playground: true,&#xA;          schema,&#xA;          // // change property `cognito:groups` to `roles` in the jwt.payload passed to Neo4jGraphQLAuthJWKSPlugin&#xA;          context: authContextFunction,&#xA;        };&#xA;      },&#xA;    }),&#xA;  ],&#xA;})&#xA;export class GqlModule {}&#xA;</code></pre>&#xA;<p>I'd expect all users to be able to read it, but only logged in and admins to be able to perform any CUD operation.&#xA;If I run this without token, I get <code>Unauthenticated</code> error, which is perfect.&#xA;However, when I use token generated by hand, it allows me to create content. Here is the token passed to the auth plugin:</p>&#xA;<pre class=""lang-json prettyprint-override""><code> {&#xA;  sub: '10',&#xA;  email: 'bob@example.com',&#xA;  iat: 1562061850,&#xA;  exp: 1562065450,&#xA;  roles: [ 'B' ]&#xA;}&#xA;&#xA;</code></pre>&#xA;",411806,,,,2022-09-07 10:28:58,@neo4j/graphql and @auth directive usage for CRUD operations,<neo4j><graphql><nestjs><neo4j-graphql-js>,1,0,0,2022-09-05 08:40:32
73617172,1,,,0,71,<p>I just want to avoid use of custom/manual resolvers in appsync completely. So I'm using Amplify to  setup GraphQL appsync API in my app. I'm doing all the stuffs  by changing <code>schema.graphql</code> and <code>amplify push</code>.</p>&#xA;<p><strong>I have 2 questions :</strong></p>&#xA;<p><strong>1.</strong> What are the limitations and what problems I'm going to face in future?</p>&#xA;<p><strong>2.</strong> Can graphql subscriptions get update when app is not running(like user should be notified)?</p>&#xA;,19709318,,,,2022-09-10 21:03:58,What are the limitations of using AWS appsync api(GraphQL) through Amplify?,<amazon-web-services><api><graphql><aws-amplify><aws-appsync>,2,0,0,2022-09-06 05:41:22
73628713,1,,,0,37,"<p>In order to develop my application, I am trying to get dashboard data using GraphQL from Tableau Server.&#xA;My sample GraphQL is like below,</p>&#xA;<pre><code>{&#xA;    dashboard {&#xA;        id&#xA;        luid&#xA;        name&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>From GraphQL, I get a result like below.</p>&#xA;<pre><code>{&#xA;    “data”: {&#xA;        “dashboards”: [&#xA;            {&#xA;                “id”: “0001a27e-6429-c8b7-0d29-644b2ca00e76”,&#xA;                “luid”: “8291u72j-9281-c9d8-0r83-098i2jx82i00”,&#xA;                “name”: “TestDashboard”&#xA;            }&#xA;        ]&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>Can I get dashboard id “0001a27e-6429-c8b7-0d29-644b2ca00e76” (not luid) from PostgreSQL in Tableau Server?&#xA;If possible, what table in PostgreSQL do I check?</p>&#xA;<p>Thank you for your help.</p>&#xA;",6725768,,6725768,2022-09-07 02:13:27,2022-09-07 20:22:40,Mapping dashboard id between GraphQL and PostgreSQL in Tableau Server,<postgresql><graphql><tableau-api>,0,0,0,2022-09-06 23:41:54
73632204,1,,,0,19,"<p>I'm using DynamoDB of AWS and i'm trying to insert item with relations (hasMany).&#xA;When i'm trying to create item with relations it returns error:</p>&#xA;<p>&quot;The variables input contains a field name 'contacts' that is not defined for input object type 'CreateBookingInput' &quot;</p>&#xA;<p>Here is the definition of my models where you can see the relations</p>&#xA;<pre><code>    type Traineeship @model @auth(rules:[{allow:public}]){&#xA;  traineeshipID: ID! @primaryKey&#xA;}&#xA;&#xA;type Booking @model @auth(rules:[{allow:public}]){&#xA;  bookingID: ID! @primaryKey&#xA;  traineeship: Traineeship @hasOne&#xA;  contacts:[BookingContact] @hasMany&#xA;}&#xA;&#xA;type BookingContact @model @auth(rules:[{allow:public}]){&#xA;  bookingContactID: ID! @primaryKey&#xA;}&#xA;</code></pre>&#xA;<p>And here is the mutation use to insert</p>&#xA;<pre><code>    export const createBooking = /* GraphQL */ `&#xA;  mutation CreateBooking(&#xA;    $input: CreateBookingInput!&#xA;    $condition: ModelBookingConditionInput&#xA;  ) {&#xA;    createBooking(input: $input, condition: $condition) {&#xA;      bookingID&#xA;      traineeship {&#xA;        traineeshipID&#xA;        title&#xA;        description&#xA;        fulldesc&#xA;        place&#xA;        from&#xA;        to&#xA;        price&#xA;        img&#xA;        horaire&#xA;        garderie&#xA;        age&#xA;        full&#xA;        createdAt&#xA;        updatedAt&#xA;      }&#xA;      email&#xA;      tel&#xA;      firstname&#xA;      name&#xA;      birthdate&#xA;      address&#xA;      zipcode&#xA;      city&#xA;      Remark&#xA;      submitedDate&#xA;      validatedDate&#xA;      validated&#xA;      contacts {&#xA;        items {&#xA;          bookingContactID&#xA;          firstname&#xA;          name&#xA;          phone&#xA;          parent&#xA;          createdAt&#xA;          updatedAt&#xA;          bookingContactsId&#xA;        }&#xA;        nextToken&#xA;      }&#xA;      createdAt&#xA;      updatedAt&#xA;      bookingTraineeshipId&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>As you can see contacts is define in createBooking. If i remove this property it works correctly.</p>&#xA;<p>THanks for your help</p>&#xA;",1898765,,,,2022-09-07 08:20:29,Call a GraphQL mutation with @hasMany,<amazon-web-services><graphql><mutation>,0,0,0,2022-09-07 08:20:29
73633938,2,,73606700,2,,"<p>The issue with your Schema is how it used the property&#xA;<a href=""https://neo4j.com/docs/graphql-manual/current/auth/authorization/allow/"" rel=""nofollow noreferrer"">allow</a>&#xA;that should be used to perform a match with a property in a Node,&#xA;to perform a check using the JWT field roles, then you should use the property <a href=""https://neo4j.com/docs/graphql-manual/current/auth/authorization/roles/"" rel=""nofollow noreferrer"">roles</a>.</p>&#xA;<p>Using your example:</p>&#xA;<pre><code>type Todo {&#xA;  id: ID! @id&#xA;  owner: String!&#xA;  title: String&#xA;}&#xA;&#xA;extend type Todo @auth(&#xA;  rules: [&#xA;    { operations: [READ], allowUnauthenticated: true }&#xA;    { operations: [CREATE, DELETE, UPDATE], roles: [&quot;ADMIN&quot;] }&#xA;  ]&#xA;)&#xA;</code></pre>&#xA;",5189038,,,,2022-09-07 10:28:58,"",,0,1,0,2022-09-07 10:28:58
73643577,2,,71761818,0,,<pre><code>logger.info &quot;accountId is: #{@original_hash['data']['provisioningAddEntitlementToAccounts']['result']['accountId']}&quot;&#xA;&#xA;logger.info &quot;status is: #{@original_hash['data']['provisioningAddEntitlementToAccounts']['result']['status']}&quot;&#xA;</code></pre>&#xA;,252071,,,,2022-09-08 03:58:53,"",,0,0,0,2022-09-08 03:58:53
73644990,1,,,0,76,"<p>I'm running into the error: <code>Variable 'input' has coerced Null value for NonNull type 'SaveCardInput!'</code> when I try to run the following simple graphqlOperation:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { API } from &quot;aws-amplify&quot;;&#xA;import { graphqlOperation } from &quot;@aws-amplify/api-graphql&quot;;&#xA;import { requestApproval } from &quot;../src/graphql/mutations&quot;;&#xA;&#xA;export async function saveCardLambda(id: string) {&#xA;  try {&#xA;    const lambdaResponse = await API.graphql(&#xA;      graphqlOperation(requestApproval),&#xA;      {&#xA;        input: {id}&#xA;      }&#xA;    );  &#xA;    return lambdaResponse&#xA;  } catch (error) {&#xA;    throw error; // Error: Variable 'input' has coerced Null value for NonNull type 'SaveCardInput!'&#xA;  }&#xA;}&#xA;&#xA;// ../src/graphql/mutations&#xA;export const requestApproval = /* GraphQL */ `&#xA;  mutation RequestApproval($input: SaveCardInput!) {&#xA;    requestApproval(input: $input)&#xA;  }&#xA;`;&#xA;&#xA;// schema.graphql&#xA;input SaveCardInput {&#xA;  id: ID!&#xA;}&#xA;</code></pre>&#xA;<p>I suspect the problem is with the <code>input:{id}</code> line, but I can't figure it out. My problem appeared to be similar to this: <a href=""https://stackoverflow.com/questions/51999721/aws-graphql-variable-input-has-coerced-null-value-for-nonnull-type-input"">AWS GraphQL: Variable &#39;input&#39; has coerced Null value for NonNull type &#39;Input!&#39;</a> but the fix didn't work.</p>&#xA;",11664580,,11664580,2022-09-08 07:46:38,2022-09-08 07:55:34,"""Variable 'input' has coerced Null value for NonNull type XXX"" - aws-amplify & graphql & react",<reactjs><graphql><aws-amplify>,1,0,0,2022-09-08 07:08:54
73648746,2,,63277827,0,,"<p>@SlackGadget's solution was essentially correct.</p>&#xA;<p>The default expiration time of the AppSync API key is 7 day, meaning if you do not set this in your initial congif of your Amplify build or use a different type of authentication, then your API will expire after 7 days. If you deploy within this timeframe then a new key is generated, but there is no real warning without checking AppSync.</p>&#xA;<p><strong>To check follow these steps:</strong></p>&#xA;<ol>&#xA;<li>Go to AWS AppSync</li>&#xA;<li>Click on the app in question</li>&#xA;<li>Click Settings in the side nav</li>&#xA;<li>Check the key against what appears in your <code>aws-exports.js</code> file, if it has expired this will be the issue.</li>&#xA;</ol>&#xA;<p><strong>Solution:</strong></p>&#xA;<ol>&#xA;<li>To initially fix it, re-deploy you app from the Amplify console to get it up and running an prevent the 401 error</li>&#xA;<li>Then update the API locally, go to your <code>&lt;project-root&gt;/amplify/backend/api/&lt;api-name&gt;/parameters.json</code> file and add a <code>APIKeyExpirationEpoch</code> key. This take an expiration time in seconds of the key. You can then deploy this and the new key will have a new expiration date.</li>&#xA;<li>You can also update the expiration key in the AppSync setting</li>&#xA;</ol>&#xA;<p>Here are the docs for overwriting the Amplify parameters: <a href=""https://docs.amplify.aws/cli-legacy/graphql-transformer/resolvers/#custom-resolvers"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli-legacy/graphql-transformer/resolvers/#custom-resolvers</a></p>&#xA;",8893810,,,,2022-09-08 11:58:45,"",,0,0,0,2022-09-08 11:58:45
73651004,1,,,1,212,"<p>How do I get the order of items in a board view column from the API? I found the <code>sortBy</code> object in the <code>ProjectV2</code> <code>views</code>, but I'm struggling querying the <code>items</code> ordered by <code>fieldValue</code> (position?).</p>&#xA;<p>Would you mind helping me construct a query for the JSON equivalent of the data in the picture, please?</p>&#xA;<p><img src=""https://user-images.githubusercontent.com/79609/189149895-b30fd6fd-1983-47b9-8281-a2d502bec84f.png"" alt=""image"" /></p>&#xA;",3455297,,3455297,2022-09-09 07:19:52,2022-09-09 07:19:52,How do I query a GitHub Project V2 Item Order by Custom Field from GraphQL?,<github><graphql><github-api><github-graphql>,0,4,0,2022-09-08 14:45:52
73663868,1,,,0,166,"<p>#gql #flutter  Hi everyone, I am using graphQL with flutter and would like to pass boolean expression to my graphQL query.&#xA;I am using the QueryOption object type of the graphQL flutter package to pass the query to graphql and to define my query parameters.&#xA;The problem I have is that I don't know how to tell flutter that I am passing a boolean expression to the variable parameter of the QueryOption object. Is there a way to do that?</p>&#xA;<pre class=""lang-dart prettyprint-override""><code>Future&lt;QueryResult&gt; FilteredQuery(&#xA;    final GraphQLClient client,&#xA;    final FilterModel filter,&#xA;    final bool isAvailable,&#xA; &#xA;  ) async {&#xA;    final QueryOptions options = QueryOptions(&#xA;      document: gql(queryCreationsFiltered),&#xA;      variables: &lt;String, dynamic&gt;{&#xA;&#xA;        'condition1': isAvailable== false ? {false}:{is_available: {_eq: true}} &#xA;&#xA;      }&#xA;</code></pre>&#xA;<p>Usually to be able to match the right type of the query variable I pass the associated dart type in flutter!&#xA;The idea behind that is to apply conditional filtering.&#xA;Any help will be welcomed!&#xA;Thanks :slight_smile:</p>&#xA;",19958728,,19958728,2022-09-09 14:53:46,2022-09-09 22:10:12,How to pass boolean expression to variable parameter of QueryOptions of GraphQL package in flutter?,<flutter><variables><types><graphql><boolean-expression>,1,0,0,2022-09-09 14:41:52
73668470,2,,61583460,0,,"<p>I had to resort to using <code>AND</code> for something similar - hope this helps!</p>&#xA;<pre class=""lang-js prettyprint-override""><code>const tagIds = [9,6];&#xA;&#xA;where: {&#xA;  // ...&#xA;  AND: tagIds.map(tagId =&gt; ({&#xA;    tags: {&#xA;      some: {&#xA;        id: {&#xA;          equals: tagId,&#xA;        },&#xA;      },&#xA;    },&#xA;  })),&#xA;}&#xA;</code></pre>&#xA;",6206411,,,,2022-09-10 00:12:28,"",,0,0,0,2022-09-10 00:12:28
73684471,1,,,5,64,"<p>For a Chat app I am trying to update the Apollo cache for a nested array, so that when a message is received for any conversation, the user can see the latest message in real time.</p>&#xA;<p><a href=""https://i.stack.imgur.com/ikU66.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ikU66.png"" alt=""Example of chat app and messages to show in real time"" /></a></p>&#xA;<p>I have the following AppSync schema.</p>&#xA;<pre><code> type Conversation&#xA;   @model&#xA;   @auth(rules: [&#xA;     { allow: owner, ownerField: &quot;users&quot;, operations: [create, read, delete, update] }&#xA;     { allow: private, provider: iam, operations: [read, create, update, delete] }&#xA;   ]) {&#xA;     messages: [Message] @hasMany(indexName: &quot;messagesByConversation&quot;, limit: 1)&#xA;     users: [String]&#xA;     createdAt: AWSDateTime&#xA;     updatedAt: AWSDateTime&#xA;}&#xA;&#xA;type Message&#xA;   @model(mutations: { create: &quot;createMessage&quot;, update: &quot;updateMessage&quot; })&#xA;   @auth(rules: [&#xA;     { allow: groups, groups: [&quot;Users&quot;] }&#xA;     { allow: owner, operations: [read, create, update], ownerField: &quot;users&quot; }&#xA;     { allow: private, provider: iam }&#xA;   ]) {&#xA;     conversationId: ID! @index(name: &quot;messagesByConversation&quot;, sortKeyFields: [&quot;createdAt&quot;], queryField: &quot;messagesByConversation&quot;)&#xA;     text: String&#xA;     users: [String]!&#xA;     receiver: ID!&#xA;     sender: ID!&#xA;     createdAt: AWSDateTime!&#xA;     updatedAt: AWSDateTime&#xA;}&#xA;&#xA; type Subscription {&#xA;   onCreateMessageForSenderUser(sender: String!): Message @aws_subscribe(mutations: [&quot;createMessage&quot;])&#xA;   onCreateMessageForReceiverUser(receiver: String!): Message @aws_subscribe(mutations: [&quot;createMessage&quot;])&#xA; }&#xA;&#xA;</code></pre>&#xA;<p>Which has the nested model <code>messages: [Message]</code></p>&#xA;<p>In the Apollo Cache, I can see a new typename is created called <code>__ ModelMessageConnection</code> to facilitate the connection</p>&#xA;<p><a href=""https://i.stack.imgur.com/q6TpG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/q6TpG.png"" alt=""typename __ ModelMessageConnection"" /></a></p>&#xA;<p>I have a subscription that listens for new messages (in this case when my user is the sender).</p>&#xA;<p>The trouble I am facing, is how can I update the cache so when the subscription for a new message is received, it updates for the conversation (the ModelMessageConnection)</p>&#xA;<pre><code>const { data: senderMessageData } = useSubscription(&#xA;    gql(SENDER_MESSAGE_SUBSCRIPTION),&#xA;    {&#xA;      skip: !subData?.sub,&#xA;      variables: {&#xA;        sender: subData?.sub&#xA;      },&#xA;      onSubscriptionData: (options) =&gt; {&#xA;        options.client.cache.modify({&#xA;          //TODO: do something here?&#xA;        });&#xA;      }&#xA;    }&#xA;  );&#xA;</code></pre>&#xA;",6791970,,6791970,2022-09-19 14:34:05,2022-09-19 14:34:05,AppSync / Apollo - Subscription - Update nested array within a model,<apollo-client><aws-appsync>,0,0,0,2022-09-12 04:24:12
73687365,1,,,-1,17,<p>How can I conditionally use graphql such that when address is given it returns Account and when it isn't it retunrs the authenticated user?&#xA;accountByAddress(address: String! @where(operator: &quot;like&quot;)): [Account!]! @all</p>&#xA;,15858883,,,,2022-09-12 10:03:59,Graphql Conditional Query,<php><graphql>,1,0,0,2022-09-12 09:48:03
73696456,1,,,0,46,"<p>Been building an app using Flutter and calling to GraphQL database. At the moment, I have just been accessing data by wrapping the following in a stateless widget:</p>&#xA;<pre><code>return Query(&#xA;        options: QueryOptions(&#xA;          document: gql(exampleGraphQL),&#xA;        ),&#xA;        builder: (QueryResult result, {fetchMore, refetch}) {&#xA;          if (result.hasException) {&#xA;            return Text(result.exception.toString());&#xA;          }&#xA;          if (result.isLoading) {&#xA;            return const Center(&#xA;              child: CircularProgressIndicator(),&#xA;            );&#xA;          }&#xA;&#xA;          var exampleData = result.data?['example'];&#xA;&#xA;          return Scaffold(...&#xA;</code></pre>&#xA;<p>But now, I am attempting to make a sortable DataTable, and I need to access the data in a stateful widget (or access it in a simple class) that cannot return a scaffold and just returns the data I want to access. I have looked for hours and cannot find how to access GraphQl data without returning a widget. Any help would be greatly appreciated.</p>&#xA;",19981120,,19981120,2022-09-13 00:50:45,2022-09-13 03:41:47,Flutter & GraphQL Returning Data in Stateful Widget,<flutter><graphql>,1,1,0,2022-09-13 00:26:02
73708440,1,,,0,52,"<p>I want to run a query that fetches a specific user. As the id of the user is auto-generated on creation, I cant figure out a way to know what user has what ID without pulling in all the users and then finding the id of that user - that defeats the point in just querying 1 user.</p>&#xA;<p>Here is the schema:</p>&#xA;<pre><code>type Users @model @auth(rules: [{allow: public}]) {&#xA;  email: AWSEmail!&#xA;  access_token: String&#xA;  refresh_token: String&#xA;  company: String&#xA;  role: String&#xA;}&#xA;</code></pre>&#xA;<p>The query I need to use is:</p>&#xA;<pre><code>query MyQuery {&#xA;  getUsers(id: &quot;&quot;) {&#xA;    email&#xA;    id&#xA;    refresh_token&#xA;    role&#xA;    company&#xA;    access_token&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>The query asks for the id, but I wont know what the id is, so is there a way to use email? Also if I wanted to update a specific user (by there email address) how could I do that?</p>&#xA;<p>I hope this question makes sense, this is the first time I am using graphQL so I'm still trying to get my head around it.</p>&#xA;<p>Thank you</p>&#xA;",1528400,,,,2022-09-13 19:36:19,AWS Amplify GraphQL Query without knowing the ID,<amazon-web-services><graphql><aws-amplify><aws-appsync>,0,0,0,2022-09-13 19:36:19
73716679,1,,,0,61,"<p>i Have following response that needs to go under GraphQL Query:</p>&#xA;<pre><code>{&#xA;  '0xF7446f0...9a496aE94Cf9d42': { balances: [ [Object], [Object] ] },&#xA;  '0xc01679F6496...95c86f9DEc63a': { balances: [ [Object], [Object] ] }&#xA;}&#xA;</code></pre>&#xA;<p>Using nestjs together with <code>graphql-type-json</code> and my code looks like this</p>&#xA;<pre><code>@ObjectType()&#xA;export class BalancesResponse {&#xA;  @Field({ nullable: true })&#xA;  error?: string;&#xA;&#xA;  @Field((type) =&gt; JSON)&#xA;  balances: any;&#xA;}&#xA;&#xA;</code></pre>&#xA;<p>but when i try to execute the requests i got this error:</p>&#xA;<p><code>&quot;message&quot;: &quot;Cannot return null for non-nullable field BalancesResponse.balances.&quot;</code></p>&#xA;<p>Any idea how to return it, i want to return all of the key-value pairs in the object and my key to be dynamic</p>&#xA;",10223815,,,,2022-09-14 13:40:17,How to use graphql-type-json with NestJS,<graphql><nestjs>,1,0,0,2022-09-14 12:14:45
73717890,2,,73716679,0,,"<p>GraphQL <a href=""https://github.com/graphql/graphql-spec/issues/101"" rel=""nofollow noreferrer"">does not support</a> dictionary types. You can only query defined (i.e. known in advance) fields.</p>&#xA;<p>You could, however, refactor the response object to be an array:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>[&#xA;  { key: '0xF7446f0...9a496aE94Cf9d42', balances: [ ... ] },&#xA;  { key: '0xc01679F6496...95c86f9DEc63a', balances: [ ... ] }&#xA;]&#xA;</code></pre>&#xA;<p>The corresponding type definition would be:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>@ObjectType()&#xA;export class BalanceResponse {&#xA;  @Field()&#xA;  key: string;&#xA;&#xA;  @Field({ nullable: true })&#xA;  error?: string;&#xA;&#xA;  @Field((type) =&gt; JSON)&#xA;  balances: any;&#xA;}&#xA;&#xA;...&#xA;@Query(() =&gt; [BalanceResponse])&#xA;async getBalance(): Promise&lt;BalanceResponse[]&gt;&#xA;</code></pre>&#xA;<p>Alternatively, you are free to lose the typing by declaring the whole response object as a GraphQL JSON. Then you can return your original response from the endpoint:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// not a GraphQL class anymore&#xA;export class BalancesResponse {&#xA;  error?: string;&#xA;  balances: Balance;&#xA;}&#xA;&#xA;...&#xA;@Query(() =&gt; JSON)&#xA;async getBalance(): Promise&lt;Record&lt;string, BalancesResponse&gt;&gt;&#xA;</code></pre>&#xA;",577167,,,,2022-09-14 13:40:17,"",,0,0,0,2022-09-14 13:40:17
73730254,2,,71024081,0,,"<p>There is the official documentation from AWS to inspect an AppSync GraphQL schema and prototype queries from a local machine leveraging a local GraphiQL instance in the browsers.</p>&#xA;<p>Link: <a href=""https://aws.amazon.com/blogs/mobile/appsync-graphiql-local"" rel=""nofollow noreferrer"">https://aws.amazon.com/blogs/mobile/appsync-graphiql-local</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/q17DW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/q17DW.png"" alt=""Your generated GraphiQL Playground will look like this."" /></a></p>&#xA;<p>You can also maintain the proper security of the AppSync by just following the documentation.</p>&#xA;",6282932,,,,2022-09-15 11:23:34,"",,0,0,0,2022-09-15 11:23:34
73730951,1,,,0,143,"<p>I am a little bit confused on why a GraphQL query returning a list of items does not get updated. Say I have a list of three items, then I add another item and rebuild the widget. The widget still only shows the first three items, even though I can see that new item has been created in the database. I am unsure if this is a cache problem. I have tried to fetch data from the network only, but that does not work either.</p>&#xA;<p>The client used in the GraphQLProvider is instantiated like this:</p>&#xA;<pre><code>Future&lt;ValueNotifier&lt;GraphQLClient&gt;&gt; _getClient() async {&#xA;    final HttpLink httpLink = HttpLink(&#xA;      Constants.apiURL,&#xA;      defaultHeaders: {&#xA;        'X-Parse-Application-Id': Constants.kParseApplicationId,&#xA;        'X-Parse-Client-Key': Constants.kParseClientKey,&#xA;      },&#xA;    );&#xA;&#xA;    // initialize Hive and wrap the default box in a HiveStore&#xA;    Directory directory = await pathProvider.getApplicationDocumentsDirectory();&#xA;    final store = await HiveStore.open(path: directory.path);&#xA;    return ValueNotifier(&#xA;      GraphQLClient(&#xA;        cache: GraphQLCache(store: store),&#xA;        link: httpLink,&#xA;      ),&#xA;    );&#xA;  }&#xA;</code></pre>&#xA;<p>And the page looks like this. When a new forum post is created, setstate() is called and the widget rebuilds. However, the line <code>List&lt;dynamic&gt; forumEntries = result.data?[&quot;getForumEntries&quot;];</code> still returns the old list of data without the new entry. I have the same problem in a few other places as well.</p>&#xA;<pre><code>class FeedWidget extends StatefulWidget {&#xA;  const FeedWidget({Key? key}) : super(key: key);&#xA;&#xA;  @override&#xA;  State&lt;FeedWidget&gt; createState() =&gt; _FeedWidgetState();&#xA;}&#xA;&#xA;class _FeedWidgetState extends State&lt;FeedWidget&gt; {&#xA;  final TextEditingController controller = TextEditingController();&#xA;&#xA;  void _createForumPost() async {&#xA;    Map&lt;String, dynamic&gt; inputVariables = {&#xA;      &quot;questionText&quot;: controller.text,&#xA;    };&#xA;&#xA;    GraphQLClient client = GraphQLProvider.of(context).value;&#xA;    await client.query(&#xA;      QueryOptions(&#xA;        document: gql(GraphQLQueries.createForumPost),&#xA;        variables: inputVariables,&#xA;      ),&#xA;    );&#xA;&#xA;    setState(() {&#xA;      controller.text = &quot;&quot;;&#xA;    });&#xA;  }&#xA;&#xA;  @override&#xA;  Widget build(BuildContext context) {&#xA;    return Query(&#xA;      options: QueryOptions(&#xA;          fetchPolicy: FetchPolicy.networkOnly,&#xA;          document: gql(GraphQLQueries.getForumEntries),&#xA;      ),&#xA;      builder: (QueryResult result,&#xA;          {VoidCallback? refetch, FetchMore? fetchMore}) {&#xA;        if (result.hasException) {&#xA;          return Text(result.exception.toString());&#xA;        }&#xA;        if (result.isLoading) {&#xA;          return const Center(child: CircularProgressIndicator());&#xA;        }&#xA;&#xA;        List&lt;dynamic&gt; forumEntries = result.data?[&quot;getForumEntries&quot;];&#xA;&#xA;        return Column(&#xA;          crossAxisAlignment: CrossAxisAlignment.end,&#xA;          children: [&#xA;            Row(&#xA;              children: [&#xA;                Expanded(&#xA;                  child: TextField(&#xA;                    controller: controller,&#xA;                    keyboardType: TextInputType.multiline,&#xA;                    maxLines: null,&#xA;                    autocorrect: false,&#xA;                    decoration: InputDecoration(&#xA;                      fillColor: Theme.of(context).colorScheme.surface,&#xA;                      labelText: &quot;Content&quot;,&#xA;                      filled: true,&#xA;                      border: InputBorder.none,&#xA;                    ),&#xA;                  ),&#xA;                ),&#xA;                const Padding(padding: EdgeInsets.symmetric(horizontal: 3)),&#xA;                CustomIconButton(&#xA;                  padding: EdgeInsets.zero,&#xA;                  icon: const Icon(Icons.send),&#xA;                  onPressed: () =&gt; _createForumPost(),&#xA;                ),&#xA;              ],&#xA;            ),&#xA;            const Padding(padding: EdgeInsets.only(bottom: 10)),&#xA;            Expanded(&#xA;              child: ListView.builder(&#xA;                shrinkWrap: true,&#xA;                itemCount: forumEntries.length,&#xA;                itemBuilder: (BuildContext context, int index) {&#xA;                  Map&lt;String, dynamic&gt; entry = forumEntries[index];&#xA;                  return ForumEntryWidget(entry);&#xA;                },&#xA;              ),&#xA;            ),&#xA;          ],&#xA;        );&#xA;      },&#xA;    );&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",11487803,,,,2022-09-15 12:14:22,Flutter GraphQl query does not return current data,<flutter><graphql><flutter-graphql>,0,0,0,2022-09-15 12:14:22
73737928,2,,73711886,0,,"<p>DynamoDB doesn't have a <code>count</code> function in the API, and therefore, it is also not available in the VTL of AppSync. The concept of DynamoDB is to have scalable LOOKUP queries that are hitting a small number of records, and if you need to SCAN many records, it is possible however, not efficient.</p>&#xA;<p>The best way to achieve the counters you are after is to prepare them for a LOOKUP. On every <code>addComment</code> event, you can increase the comment counter, and on every <code>deleteComment</code> event, you can decrease that counter.</p>&#xA;<p>Here is an example of the <a href=""https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.UpdateExpressions.html#Expressions.UpdateExpressions.SET.IncrementAndDecrement"" rel=""nofollow noreferrer"">CLI command to increase a counter</a>, which you can include in your <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/resolver-mapping-template-reference-dynamodb.html#aws-appsync-resolver-mapping-template-reference-dynamodb-updateitem"" rel=""nofollow noreferrer"">resolver VTL code</a>.</p>&#xA;<pre><code>aws dynamodb update-item \&#xA;    --table-name Posts \&#xA;    --key '{&quot;Id&quot;:{&quot;N&quot;:&quot;789&quot;}}' \&#xA;    --update-expression &quot;ADD CommentCounter :q&quot; \&#xA;    --expression-attribute-values '{&quot;:q&quot;: {&quot;N&quot;: &quot;1&quot;}}' \&#xA;    --return-values ALL_NEW&#xA;</code></pre>&#xA;",179529,,,,2022-09-15 22:10:17,"",,0,1,0,2022-09-15 22:10:17
73753252,1,,,0,43,"<p>My Report @model is below.  I am trying to retrieve the latest items back by 'CreatedAt' date.  I have 15 records in Report table.  If I execute my request and ask for all 15 records (by 'ASC', for instance), then I get the order by date correctly (latest records -&gt; earliest records).  However, if i limit the number of records to be retrieved at any one time, e.g 5, then what happens is, the order of the records by date is correct, but instead of delivering the latest (the 5 most currently created records), I receive the earliest 5 records back (but in the correct 'ASC' order).  Please can someone advise? <a href=""https://docs.amplify.aws/guides/api-graphql/query-with-sorting/q/platform/js/"" rel=""nofollow noreferrer"">aws documentation</a></p>&#xA;<pre><code>type Report @model @auth(rules: [&#xA;{ allow: owner, operations: [create, read] },&#xA;{ allow: private, operations: [read] }&#xA;])&#xA;{&#xA;  id: ID!&#xA;  author: String! @index(name: &quot;byAuthor&quot;, queryField: &quot;reportByAuthor&quot;, sortKeyFields: [&quot;createdAt&quot;])&#xA;  submissionID: ID! @index(name: &quot;bySubmissionID&quot;, queryField: &quot;reportBySubmissionID&quot;)&#xA;  submission: Submission @hasOne(fields: [&quot;submissionID&quot;])&#xA;  result: String!&#xA;  createdAt: String!&#xA;  type: String! @index(name: &quot;reportByDate&quot;, queryField: &quot;reportByDate&quot;, sortKeyFields: [&quot;createdAt&quot;])&#xA;  customComment: String&#xA;  &#xA;}&#xA;</code></pre>&#xA;<p>Get Reports by 'ASC' orderbut limit to 5 records at a time</p>&#xA;<pre><code>const result = await API.graphql({&#xA;            query: reportByDate,&#xA;            variables: {&#xA;                type: SubmitType.REPORT,&#xA;                sortDirection: 'ASC,&#xA;                limit: 5,&#xA;                nextToken: nxtToken&#xA;            }&#xA;        });&#xA;</code></pre>&#xA;",8537200,,8537200,2022-09-17 08:26:38,2022-09-17 08:26:38,Amplify GraphQL order by CreatedAt,<graphql><aws-amplify>,0,0,0,2022-09-17 08:12:32
73758933,1,,,0,25,"<p>I got a AWS amplify app with datastore categorie. Also user can login and add notes (<em>AWS Cognito for authentication and GraphQL as API in order to insert data to the table</em>). I coded the login function and further Backend services on ios plattform while using swift.</p>&#xA;<p>Those notes are created by different user. Now I want to provide those data for a user which only has read access and din't has to be logged in.<a href=""https://i.stack.imgur.com/8p1Z5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8p1Z5.png"" alt=""enter image description here"" /></a></p>&#xA;<p>Question is, how to access to this data via a REST interface. Unfortunately I can't find any API address listed in the Table details. Does anyone has experience with this stack and can advice here ?</p>&#xA;<p>My goal is to provide all data to a usual visitor of the app. So he should be able to see all data, published by all users.</p>&#xA;<p>Appreciate your help.</p>&#xA;",8004182,,,,2022-09-17 22:21:49,Fetching data from DynamoDB Table after adding data from different user into that,<amazon-web-services><api><graphql><amazon-dynamodb>,0,1,0,2022-09-17 22:21:49
73779055,2,,73271414,0,,"<p>don't think a solution w/ cloudfront here is possible, nor does it make much sense for graphql anyways because cloudfront can't actually cache these queries (to my knowledge).</p>&#xA;<p>an alternative solution i implemented to serve the lambda function over a custom subdomain was to use an application load balancer which pointed to a target group associated with the lambda function.  i then created a route53 alias record to forward <code>graphql.website.com</code> requests to the load balancer url which provided the functionality i was looking for.</p>&#xA;",5869121,,,,2022-09-19 20:39:35,"",,0,0,0,2022-09-19 20:39:35
73782929,1,,,0,10,"<p>What happens if I set ownerField to email(the email of the user) in GrahQL  API Amplify Data model?&#xA;How can I see what happens in dynamoDB or where should I check?</p>&#xA;<pre><code>type Todo @model @auth(rules: [{ allow: owner, ownerField: &quot;email&quot; }]) {&#xA;  content: String                             #^^^^^^^^^^^^^^^^^^^^&#xA;  email: String # record owner information now stored in &quot;email&quot; field&#xA;}&#xA;</code></pre>&#xA;",6026151,,,,2022-09-20 07:19:37,What happens if I set ownerField to email(the email of the user) in GrahQL API Amplify Data model?,<amazon-web-services><graphql><aws-amplify><amplify>,0,0,0,2022-09-20 07:19:37
73783406,2,,73781761,0,,"<p>Turns out that the schema needed to know about my depedencies, so</p>&#xA;<pre class=""lang-scala prettyprint-override""><code>val api = graphQL(resolver)&#xA;</code></pre>&#xA;<p>became</p>&#xA;<pre class=""lang-scala prettyprint-override""><code>val api = graphQL[DatabaseService, Queries, Unit, Unit](resolver)&#xA;</code></pre>&#xA;",56050,,,,2022-09-20 08:03:05,"",,0,0,0,2022-09-20 08:03:05
73794787,1,,,1,134,"<p>I am working with AWS amplify for the first time by following the docs. Everything is working except deletion of the data. Whenever I try to delete data from any of my table it gives the error</p>&#xA;<blockquote>&#xA;<p>DOMException: Failed to execute 'index' on 'IDBObjectStore': The specified index was not found.&#xA;at Proxy. (http://localhost:3000/static/js/bundle.js:34280:22)&#xA;at IndexedDBAdapter. (http://localhost:3000/static/js/bundle.js:25458:82)&#xA;at step (http://localhost:3000/static/js/bundle.js:23678:17)&#xA;at Object.next (http://localhost:3000/static/js/bundle.js:23609:14)&#xA;at fulfilled (http://localhost:3000/static/js/bundle.js:23563:24)</p>&#xA;</blockquote>&#xA;<p>I have tried using all the ways mentioned in the amplify datastore docs, but I always get this error. Following is my graphql schema</p>&#xA;<pre><code>type Profile @model @auth(rules: [{allow: groups, groups: [&quot;SME&quot;], operations: [read]}, {allow: owner}]) {&#xA;  email: String!&#xA;  name: String&#xA;  birthDate: String&#xA;  photo: String&#xA;  answers: [Answer!] @hasMany&#xA;}&#xA;&#xA;type Questionnaire @model @auth(rules: [{allow: private, operations: [read]}, {allow: groups, groups: [&quot;SME&quot;], operations: [create, read, update, delete]}]) {&#xA;  detail: String!&#xA;  fields: [Field!] @hasMany&#xA;  next: Questionnaire @hasOne&#xA;  previous: Questionnaire @hasOne&#xA;}&#xA;&#xA;type Field @model @auth(rules: [{allow: private, operations: [read]}, {allow: groups, groups: [&quot;SME&quot;], operations: [create, read, update]}]) {&#xA;  question: Questionnaire! @belongsTo&#xA;  label: String!&#xA;  options: [String!]!&#xA;  units: [Units]&#xA;  answers: [Answer!] @hasMany&#xA;}&#xA;&#xA;type Answer @model @auth(rules: [{allow: groups, groups: [&quot;SME&quot;], operations: [read]}, {allow: owner, operations: [create, read, update]}]) {&#xA;  field: Field! @belongsTo&#xA;  answers: [String!]!&#xA;  unit: Units&#xA;}&#xA;&#xA;enum Units {&#xA;  cm&#xA;  in&#xA;  ft&#xA;  kg&#xA;  lb&#xA;  sec&#xA;  min&#xA;  hrs&#xA;  days&#xA;  weeks&#xA;  months&#xA;}&#xA; &#xA;</code></pre>&#xA;<p>I have set cognito userpool as default authorization type and conflict resolution to &quot;merge&quot;.</p>&#xA;",17767577,,17767577,2022-09-21 02:37:09,2022-09-21 02:37:09,Cannot delete data from datastore in aws-amplify,<reactjs><amazon-web-services><graphql><amazon-dynamodb><aws-amplify>,0,0,0,2022-09-21 02:35:47
73804746,1,73827365,,0,68,"<p>I am currently writing a Lambda authorizer for an AWS AppSync API, however the authorization depends on the target resource being accessed.&#xA;Every resource has their own ACL listing the users and conditions for allowing access to it.</p>&#xA;<p>Currently the best I could find would be to get the identity of the caller, look at all the ACLs, and authorize the call while denying access to all the other resources, what's not only highly inefficient, but also extremely impractical, if not impossible.</p>&#xA;<p>The solution I had originally came up with was to get the target resource, retrieve the ACL and check if the user fits the specified criteria. The problem is that I am unable to reliably define what's the target resource. What I get from AWS is a request like this:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>{&#xA;    &quot;authorizationToken&quot;: &quot;ExampleAUTHtoken123123123&quot;,&#xA;    &quot;requestContext&quot;: {&#xA;        &quot;apiId&quot;: &quot;aaaaaa123123123example123&quot;,&#xA;        &quot;accountId&quot;: &quot;111122223333&quot;,&#xA;        &quot;requestId&quot;: &quot;f4081827-1111-4444-5555-5cf4695f339f&quot;,&#xA;        &quot;queryString&quot;: &quot;mutation CreateEvent {...}\n\nquery MyQuery {...}\n&quot;,&#xA;        &quot;operationName&quot;: &quot;MyQuery&quot;,&#xA;        &quot;variables&quot;: {}&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>So, I only have the query string and variables, leaving the actual parsing of this to me. I got to convert it to an AST using <code>graphql-js</code>, but it's still extremely verbose and most importantly, it's structure varies greatly.&#xA;My first code to retrieve the target worked for the AppSync console queries, but not the Amplify Front-End, for example. I also can't rely on something as simple as the variable name, as an attacker could quite easily craft a query with an arbitrary name, or even not use variables at all.</p>&#xA;<p>I thought about implementing this authorization logic within Lambda Resolvers, what should be simpler in a way, but would require me to use resolvers as authorizers, what doesn't seem ideal, and implement the entire resolver logic when I just want the most trivial possible resolvers.</p>&#xA;<p>Ideally I'd like something like this:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>/* Schema:&#xA;type Query {&#xA;    operationName(key: KEY!): responseType&#xA;}*/&#xA;&#xA;/* Query:&#xA;query abitraryQueryName($var1: KEY!) {&#xA;  operationName(key: $var1) {&#xA;    field1&#xA;    field2&#xA;  }&#xA;}*/&#xA;&#xA;/* Variables:&#xA;{ &quot;var1&quot;: &quot;value1&quot; } */&#xA;&#xA;parsedQuery = {&#xA;    operation: &quot;operationName&quot;,&#xA;    params: { &quot;key&quot;: &quot;value1&quot; },&#xA;    fields: [ &quot;field1&quot;, &quot;field2&quot; ]&#xA;};&#xA;</code></pre>&#xA;<p>Is there any way to resolve/simplify the queries from GraphQL to JSON/similar in a way that this information can be easily extracted?</p>&#xA;",7432363,,,,2022-09-23 11:59:41,NodeJS - Simplify/Resolve GraphQL query,<node.js><amazon-web-services><aws-lambda><graphql><aws-appsync>,1,0,0,2022-09-21 17:23:30
73806062,1,,,1,50,"<p>I have a running cloud-based application that uses AWS Amplify, S3, SageMaker, Dynamodb, etc.  Every other time I go to make an update to my graphql schema, it results in the error &quot;resource is not in the state stackUpdateComplete&quot;.  Sometimes it takes hours to fix itself, and others it takes days.  The other solutions to this problem are removing authorization and reinstalling, or viewing the status reason in CloudFormation.  Unfortunately, I already have triggers set up for the project and removing the resource is not an efficient solution.  Also, the &quot;status reason&quot; is empty, so that is no help.</p>&#xA;<p>There needs to be a way to make multiple updates at once in graphql without it breaking the system.  I hope this reaches the right person because I do like the AWS resources, but this makes development very tedious for no reason.</p>&#xA;",8934621,,,,2022-09-21 19:31:26,Resource is not in the state stackUpdateComplete,<amazon-web-services><graphql><amazon-cloudformation><aws-amplify>,0,0,0,2022-09-21 19:31:26
73820295,2,,73819795,0,,"<p>Either the function isn't being recognized in the return, or sdk isn't being recognized having that function member. Console log to double check &quot;sdk&quot; and &quot;HasuraAdapter(args)&quot; actually have a function attached. Generally, to call a function in the return of a function, you would do something like this:</p>&#xA;<p><a href=""https://i.stack.imgur.com/eUtbd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eUtbd.png"" alt=""Example generic solution"" /></a></p>&#xA;",19989557,,19989557,2022-09-22 20:35:24,2022-09-22 20:35:24,"",,0,1,0,2022-09-22 20:25:25
73826043,1,,,0,30,"<p>I am using AWS AppSync and DynamoDB with Amplify. It has generated listUserChatRooms query where I can get all chatrooms by userID, and all users by chatRoomID but... I have to get all chatrooms where user A and user B apears in.</p>&#xA;<p>Here is my GraphQl Schema</p>&#xA;<pre><code>type User @model @auth(rules: [&#xA;    {allow: owner, operations: [create, read, update, delete]},&#xA;    {allow: private, operations: [read]}&#xA;]) {&#xA;  id: ID!&#xA;  name: String!&#xA;  chatRooms: [ChatRoom] @manyToMany(relationName: &quot;UserChatRoom&quot;) &#xA;}&#xA;&#xA;type ChatRoom @model @auth(rules: [{allow: private}]) {&#xA;  id: ID!&#xA;  name: String&#xA;  topic: String&#xA;  Users: [User] @manyToMany(relationName: &quot;UserChatRoom&quot;)&#xA;  Messages: [Message] @hasMany(indexName: &quot;byChatRoom&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;</code></pre>&#xA;",19872622,,,,2022-09-23 10:00:08,How to get ChatRooms where user A and user B apears in ? GraphQl many to many relation,<graphql><amazon-dynamodb><aws-amplify><aws-appsync>,0,1,0,2022-09-23 10:00:08
73843565,1,73862369,,0,63,"<p>I am using GraphQL for Cassandra database operation. The following search query work perfectly when filtering the column with partition key:</p>&#xA;<pre><code>query oneUsers{&#xA;  users(value: { username:&quot;username&quot; }) {&#xA;    values {&#xA;      id&#xA;      name&#xA;      username&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>But getting following errors when trying to search other columns:</p>&#xA;<pre><code>graphql: Exception while fetching data (/users) : org.apache.cassandra.stargate.exceptions.InvalidRequestException: Cannot execute this query as it might involve data filtering and thus may have unpredictable performance. If you want to execute this query despite the performance unpredictability, use ALLOW FILTERING&#xA;</code></pre>&#xA;<p>What is the best way to search columns in Cassandra using GraphQL?</p>&#xA;",6225426,,4269535,2022-09-27 04:14:06,2022-09-27 04:23:19,How can I query Cassandra with GraphQL using a non-primary key column?,<cassandra><graphql><nosql><datastax-astra><stargate-oss>,1,0,0,2022-09-25 09:51:59
73847260,1,,,0,15,"<p>I am using <code>graphql_flutter: ^5.1.0</code> from pub.dev. Its very easy and helpful. I am able to make queries and mutations easily in it. The only problem is now I am in a situation where I am supposed to call a search query again and again everytime the user enters something in search box. The way I am trying is I have created a separate query method for query widget. In that I am passing different variable value. But it doesnt work. And it gives me same result as before. I am just not sure how I make fresh query call with fresh variable values again and again.</p>&#xA;<p>My current code:</p>&#xA;<pre><code>      @override&#xA;      Widget build(BuildContext context) {&#xA;        nameSearch = NameSearch(edgesList, (String s) {&#xA;          print(&quot;searched letter $s&quot;);&#xA;    &#xA;          if (s != null &amp;&amp; !s.isEmpty) {&#xA;            allFilmsQuery(value: ++count);&#xA;          }&#xA;        });&#xA;    &#xA;        return Container(&#xA;          child: GraphQLProvider(&#xA;              client: GraphqlConfig.initializeClient(),&#xA;              child: Column(&#xA;                mainAxisAlignment: MainAxisAlignment.center,&#xA;                children: [&#xA;                  ElevatedButton(&#xA;                      onPressed: () async {&#xA;                        final result = await showSearch&lt;Edges&gt;(&#xA;                          context: context,&#xA;                          delegate: nameSearch,&#xA;                        );&#xA;    &#xA;                        print(&quot;searched result $result&quot;);&#xA;                      },&#xA;                      child: Text(&quot;Search&quot;)), &#xA;                      allPeopleQuery()&#xA;                ],&#xA;              )),&#xA;        );&#xA;      }&#xA;</code></pre>&#xA;<p>Query method that I have created:</p>&#xA;<pre><code>Query allPeopleQuery({int value = 1}) {&#xA;    var map = MyQueries.getMap(value);&#xA;&#xA;    print(&quot;allFilmsQuery called:$map&quot;);&#xA;&#xA;    return Query(&#xA;      options: QueryOptions(&#xA;        fetchPolicy: FetchPolicy.networkOnly,&#xA;        document: gql(MyQueries.allPeople),&#xA;        // this is the query string you just created&#xA;        variables: map,&#xA;        pollInterval: const Duration(seconds: 10),&#xA;      ),&#xA;      builder: (QueryResult result,&#xA;          {VoidCallback? refetch, FetchMore? fetchMore}) {&#xA;        if (result.hasException) {&#xA;          return Text(result.exception.toString());&#xA;        }&#xA;&#xA;        if (result.isLoading) {&#xA;          return const Center(child: CupertinoActivityIndicator());&#xA;        }&#xA;&#xA;        var response = result.data;&#xA;        if (response != null) {&#xA;          print(&quot;allpeople result:$count ${result.data}&quot;);&#xA;&#xA;          AllPeopleResponse allPeopleResponse = AllPeopleResponse.fromJson(&#xA;              response[&quot;allPeople&quot;]);&#xA;          edgesList = allPeopleResponse.edges!;&#xA;&#xA;          if (nameSearch != null) {&#xA;            nameSearch.updateList(edgesList);&#xA;          }&#xA;&#xA;          return Center(child: Text(result.data.toString()));&#xA;        }&#xA;&#xA;        return const Center(child: CupertinoActivityIndicator());&#xA;      },&#xA;    );&#xA;  }&#xA;</code></pre>&#xA;<p>As you can see the query method is being called once in beginning in build method. And it works perfectly fine. And gives me the result that I need the first time. But on recalling it on every search letter entered its not working. And keeps giving the same result it returned the first time.  Can anyone help me on this, how can I make repeated graphql query calls with fresh variable values and get fresh/update results?</p>&#xA;",10074964,,,,2022-09-25 19:20:54,How to call graphql query X number of times with different variable values in flutter?,<flutter><flutter-state><flutter-graphql>,0,0,0,2022-09-25 19:20:54
73848869,2,,73840722,0,,"<p>If I understand your question correctly you should be able to use the Authorized decorator in TypegraphQL. With this solution you should be able to add it to the email field in your User model. This should also be able to work with the sid field as well</p>&#xA;<p><strong>Have a look here:</strong> <a href=""https://typegraphql.com/docs/authorization.html"" rel=""nofollow noreferrer"">https://typegraphql.com/docs/authorization.html</a></p>&#xA;<p>For example your User model could look something like this:</p>&#xA;<pre><code>class User {&#xA;  @Field()&#xA;  id: ID;&#xA;&#xA;  @Authorized(&quot;LOGGEDINUSER&quot;)&#xA;  @Field({nullable: true})&#xA;  email: string;&#xA;&#xA;  @Field()&#xA;  username: string;&#xA;}&#xA;</code></pre>&#xA;<p><strong>You will have to allow the email field to be nullable</strong></p>&#xA;<p>You will also need to define an authChecker, with this you can run your logic to check if the user is the owner of the data, therefore granting them access to the data.</p>&#xA;<p>An authChecker can look something like this:</p>&#xA;<pre><code>export const customAuthChecker: AuthChecker&lt;Context&gt; = (&#xA;  { args, context, info, root },&#xA;  roles&#xA;) =&gt; {&#xA;  // roles is an array of string which contains the authorization required to access the current resource&#xA;  // this is specified in the @Authorized decorator&#xA;  if (roles.includes(&quot;LOGGEDINUSER&quot;)) {&#xA;    // here check if the user is actually logged in and if they are allowed to access the resource&#xA;    // return true if they are allowed to access the resource&#xA;  }&#xA;  return false;&#xA;};&#xA;</code></pre>&#xA;<p>You will also need to change your call to the buildSchema to include the custom authChecker and authMode.&#xA;For example:</p>&#xA;<pre><code>  const schema = await buildSchema({&#xA;    resolvers: [UserResolver],&#xA;    authChecker: customAuthChecker,&#xA;    authMode: &quot;null&quot;,&#xA;  });&#xA;</code></pre>&#xA;<p><strong>Note</strong> this will still return an email field but instead of returning the actual email it will return null when the user does not meet the authentication requirements</p>&#xA;",11938089,,,,2022-09-26 01:24:40,"",,0,13,0,2022-09-26 01:24:40
73862369,2,,73843565,1,,"<p>You can only retrieve records from Cassandra by specifying (a) the partition key, or (b) the primary key column(s).</p>&#xA;<p>If you would like to filter by non-primary key columns, you will need to <a href=""https://docs.datastax.com/en/astra-serverless/docs/develop/dev-with-graphql-cql-first.html#_create_an_index"" rel=""nofollow noreferrer"">create an index</a> on the column. For example if you want to filter by <code>id</code>, create an index with:</p>&#xA;<pre><code>mutation createIndexes {&#xA;  users: createIndex(&#xA;    keyspaceName:&quot;myks&quot;,&#xA;    tableName:&quot;users&quot;,&#xA;    columnName:&quot;id&quot;,&#xA;    indexName:&quot;id_idx&quot;&#xA;  )&#xA;}&#xA;</code></pre>&#xA;<p>You should then be able to query by <code>id</code>.</p>&#xA;<p>For details and more examples, see <a href=""https://docs.datastax.com/en/astra-serverless/docs/develop/dev-with-graphql-cql-first.html"" rel=""nofollow noreferrer"">Developing with the Astra DB GraphQL API</a>. Cheers!</p>&#xA;",4269535,,,,2022-09-27 04:23:19,"",,0,0,0,2022-09-27 04:23:19
73878354,2,,73836178,0,,"<p>The way I ended up solving this problem was to pair any child graph node with an ID property.</p>&#xA;<p>Example:</p>&#xA;<pre><code>type Person {&#xA; &#xA;  addressId: String&#xA;  address: Address&#xA;&#xA;  occupationId:String&#xA;  ocupation: Ocupation&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>This way, my resolver function for <code>Person</code> would always resolve <code>addressId</code> and <code>occupationId</code> but the child resolvers would kick in for <code>address</code> and <code>occupation</code>. Inside these resolvers, <code>parent</code> would be <code>Person</code> and I would be able to read the <code>addressId</code> and <code>occupationId</code>.</p>&#xA;",192729,,,,2022-09-28 08:27:36,"",,0,0,0,2022-09-28 08:27:36
73891191,1,,,0,55,"<p>I have these two tables, the <code>owner</code> field in NFT table has a belongsTo relationship with the User, but the query is returning null even tho the User exists in the DB. What am I doing wrong here</p>&#xA;<pre><code>type User&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      {allow: public, provider: apiKey, operations: [read]}&#xA;      {allow: public, provider: iam, operations: [read]}&#xA;      {allow: private, operations: [read]}&#xA;      {allow: owner}&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  username: String&#xA;    @index(&#xA;      name: &quot;usersByUsername&quot;,&#xA;      queryField: &quot;usersByUsername&quot;,&#xA;      sortKeyFields: [&quot;createdAt&quot;]&#xA;    )&#xA;  email: String&#xA;    @index(&#xA;      name: &quot;usersByEmail&quot;,&#xA;      queryField: &quot;usersByEmail&quot;,&#xA;      sortKeyFields: [&quot;createdAt&quot;]&#xA;    )&#xA;  address: String&#xA;  gender: String&#xA;  interest: [String]&#xA;  profileImage: String&#xA;  firstName: String&#xA;  lastName: String&#xA;  OwnedNfts: [Nft] &#xA;    @hasMany(&#xA;      indexName: &quot;nftsByOwnerId&quot;,&#xA;      fields: &quot;id&quot;&#xA;    )&#xA;  createdAt: AWSDateTime!&#xA;  updatedAt: AWSDateTime!&#xA;}&#xA;&#xA;type Nft&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      {allow: public, provider: apiKey, operations: [read]}&#xA;      {allow: public, provider: iam, operations: [read, update]}&#xA;      {allow: private, operations: [read, update]}&#xA;      {allow: owner}&#xA;    ]&#xA;  ) {&#xA;  id: ID!&#xA;  private: Boolean&#xA;  mediaUrl: String!&#xA;  mediaUrlCompressed: String&#xA;  thumbnail: String&#xA;  category: String!&#xA;    @index(&#xA;      name: &quot;nftsByCategoryCreatedAt&quot;,&#xA;      queryField: &quot;nftsByCategoryCreatedAt&quot;,&#xA;      sortKeyFields: [&quot;createdAt&quot;]&#xA;    )&#xA;  ownerId: ID&#xA;    @index(&#xA;      name: &quot;nftsByOwnerId&quot;,&#xA;      queryField: &quot;nftsByOwnerId&quot;&#xA;      sortKeyFields: [&quot;createdAt&quot;]&#xA;    )&#xA;    @index(&#xA;      name: &quot;nftsByOwnerIdRating&quot;,&#xA;      queryField: &quot;nftsByOwnerIdRating&quot;,&#xA;      sortKeyFields: [&quot;rating&quot;]&#xA;    )&#xA;    @index(&#xA;      name: &quot;nftsByOwnerIdLikes&quot;,&#xA;      queryField: &quot;nftsByOwnerIdLikes&quot;,&#xA;      sortKeyFields: [&quot;likes&quot;]&#xA;    )&#xA;    @index(&#xA;      name: &quot;nftsByOwnerIdReported&quot;,&#xA;      queryField: &quot;nftsByOwnerIdReported&quot;,&#xA;      sortKeyFields: [&quot;reportedCount&quot;]&#xA;    )&#xA;  owner: User&#xA;   @belongsTo(&#xA;     fields: [&quot;ownerId&quot;]&#xA;   )&#xA;  createdAt: AWSDateTime!&#xA;  updatedAt: AWSDateTime!&#xA;}&#xA;</code></pre>&#xA;",10569660,,,,2022-09-29 06:32:01,Amplify graphql @belongsTo returning null,<graphql><amazon-dynamodb><aws-amplify>,0,0,0,2022-09-29 06:32:01
73892509,1,,,0,17,"<p>I'm getting the following error when I try to update a &quot;Card&quot; object on my front-end (React with NextJS): <code>POST https://&lt;myAppId&gt;.appsync-api.eu-west-2.amazonaws.com/graphql 401</code></p>&#xA;<p>The issue arose after I updated my <code>amplify/backend/api/&lt;myAppName&gt;/schema.graphql</code> schema with the following:</p>&#xA;<pre><code>type Card&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: private, provider: iam }&#xA;      { allow: private, provider: userPools, operations: [create] }&#xA;      { allow: groups, groupsField: &quot;canRead&quot;, operations: [read] }&#xA;      { allow: groups, groupsField: &quot;canUpdate&quot;, operations: [update] }&#xA;    ]&#xA;  ) {&#xA;  approvedTime: AWSTimestamp&#xA;  canRead: [String]&#xA;  canUpdate: [String]&#xA;  id: ID!&#xA;  input: AWSJSON&#xA;  name: String&#xA;  scheduledTime: AWSTimestamp&#xA;  status: Status!&#xA;  type: String&#xA;}&#xA;</code></pre>&#xA;<p>Everything generally works fine. I've tested create, read, and update operations in the AppSync Console, and things similarly work on the front-end for the most part. I've configured Amplify as per the <a href=""https://docs.amplify.aws/lib/datastore/setup-auth-rules/q/platform/js/#configure-multiple-authorization-types"" rel=""nofollow noreferrer"">amplify.aws/lib/datastore docs</a>. The front end can get and render the Card objects.</p>&#xA;<p>What I'm finding most confusing is that AWS is allowing me to update the Card object on the AppSync console. It also seems to be allowing me to update the Card.input field on the front end, but not the Card.type field? I update the Card as follows:</p>&#xA;<pre class=""lang-js prettyprint-override""><code> await DataStore.save(&#xA;        Card.copyOf(initialCardDetails as Card, (updated) =&gt; {&#xA;          (updated.approvedTime = undefined),&#xA;            (updated.input = JSON.stringify({foo:&quot;bar&quot;})),&#xA;            (updated.name = &quot;exampleName&quot;),&#xA;            (updated.scheduledTime = null),&#xA;            (updated.type = &quot;exampleType&quot;);&#xA;        })&#xA;      );&#xA;</code></pre>&#xA;",11664580,,,,2022-09-29 08:27:07,Adding groupsField @auth rules to schema.graphql causes errors when trying to update with AWS DataStore,<reactjs><graphql><aws-appsync><aws-datastore>,1,0,0,2022-09-29 08:27:07
73892510,2,,73892509,0,,"<p>I realised as I was typing out this questions that I was trying to set:</p>&#xA;<pre class=""lang-js prettyprint-override""><code> (updated.approvedTime = undefined),&#xA;</code></pre>&#xA;<p>For some reason, trying to set approvedTime as <code>undefined</code> throws a 401 error. If I try to set it as <code>null</code> I don't get a problem. It's very confusing that I never got this error until I changed my <code>schema.json</code>. I never had the error with the same code when I had this set up:</p>&#xA;<pre><code>@auth(&#xA;    rules: [&#xA;      { allow: private, provider: iam }&#xA;      { allow: private, provider: userPools }&#xA;    ]&#xA;</code></pre>&#xA;<p>It seems like this could have saved me a lot of hours if the error gave a better clue than a 401 Unauthorized...</p>&#xA;",11664580,,,,2022-09-29 08:27:07,"",,0,0,0,2022-09-29 08:27:07
73905199,1,73905524,,0,49,"<p>I am trying to pass a key for navigation, which specifies to show the query/page after the current query call.</p>&#xA;<p>useform.ts</p>&#xA;<pre><code>...&#xA;...&#xA;&#xA;export const useupdateSurveyForm = () =&gt; {&#xA;  const queryClient = useQueryClient();&#xA;  return useMutation({&#xA;    mutationFn: updateSurveyForm,&#xA;    onSuccess: (data) =&gt; {&#xA;      queryClient.invalidateQueries([&quot;searched-public-survey&quot;]);&#xA;    },&#xA;  });&#xA;};&#xA;&#xA;</code></pre>&#xA;<p>here added &quot;invalidateQueries([&quot;searched-public-survey&quot;]&quot; directly then the code is working properly, but I want to make this dynamic. like,</p>&#xA;<blockquote>&#xA;<p>queryClient.invalidateQueries(navigationqueryKey);</p>&#xA;</blockquote>&#xA;<p>For that I made some changes</p>&#xA;<p>plans.ts</p>&#xA;<pre><code>...&#xA;...&#xA;  const {&#xA;    mutate: updateArchiveSurveyStatus,&#xA;    navigationqueryKey: &quot;searched-public-survey&quot;,&#xA;  } = useupdateSurveyForm();&#xA;&#xA;...&#xA;...&#xA;&#xA;</code></pre>&#xA;<p>pass &quot;navigationKey: &quot;searched-public-survey&quot;, but it shows an error</p>&#xA;<blockquote>&#xA;<p>Property 'searched-public-survey' does not exist on type 'UseMutationResult&lt;any, unknown, SurveyUpdatePayload, unknown&gt;'.</p>&#xA;</blockquote>&#xA;<p>Give me some solution to fix this problem.</p>&#xA;",15361826,,15361826,2022-09-30 07:25:41,2022-09-30 07:44:57,rect-query: Pass additional key for navigation,<reactjs><typescript><react-hooks><graphql><react-query>,1,0,0,2022-09-30 07:14:15
73924912,1,,,0,55,"<p>I'm using <a href=""https://help.tableau.com/current/api/metadata_api/en-us/reference/embeddeddatasource.doc.html"" rel=""nofollow noreferrer"">tableau metadata API</a> to try to get a query field for each embeddedDatasource.</p>&#xA;<p>Here's the query</p>&#xA;<pre><code>{&#xA;  embeddedDatasourcesConnection {&#xA;    nodes {&#xA;      id&#xA;      name&#xA;      fields {&#xA;        ... on ColumnField {&#xA;          columns {&#xA;            table {&#xA;              ... on CustomSQLTable {&#xA;                query&#xA;              }&#xA;            }&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>which results in</p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;        &quot;embeddedDatasourcesConnection&quot;: {&#xA;            &quot;nodes&quot;: [&#xA;                {&#xA;                    &quot;id&quot;: &quot;1&quot;,&#xA;                    &quot;name&quot;: &quot;data_source&quot;,&#xA;                    &quot;fields&quot;: [&#xA;                        {&#xA;                            &quot;columns&quot;: [&#xA;                                {&#xA;                                    &quot;table&quot;: {}&#xA;                                }&#xA;                            ]&#xA;                        },&#xA;                        {&#xA;                            &quot;columns&quot;: [&#xA;                                {&#xA;                                    &quot;table&quot;: {&#xA;                                        &quot;id&quot;: &quot;query_id&quot;,&#xA;                                        &quot;name&quot;: &quot;Custom SQL Query&quot;,&#xA;                                        &quot;query&quot;: &quot;SELECT * FROM test&quot;,&#xA;                                        &quot;connectionType&quot;: &quot;snowflake&quot;,&#xA;                                        &quot;database&quot;: {&#xA;                                            &quot;name&quot;: &quot;dev&quot;&#xA;                                        }&#xA;                                    }&#xA;                                }&#xA;                            ]&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>I'm struggling here to filter out empty dicts where columns -&gt; table -&gt; onCustomSQLTable do not exist. like below...</p>&#xA;<pre><code>                       {&#xA;                            &quot;columns&quot;: [&#xA;                                {&#xA;                                    &quot;table&quot;: {}&#xA;                                }&#xA;                            ]&#xA;                        },&#xA;</code></pre>&#xA;<p>I just want the dict where the query actually exists.</p>&#xA;<p>I tried <a href=""https://www.geeksforgeeks.org/graphql-query/"" rel=""nofollow noreferrer"">@skip/include</a> false at different nesting levels, but I'm unable to generate dicts where only customSQLTable is filled. Tried cascade but that doesn't seem to work with tableau API.</p>&#xA;<p>All help is greatly appreciated here.</p>&#xA;<p>Final Expected response -&gt;</p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;        &quot;embeddedDatasourcesConnection&quot;: {&#xA;            &quot;nodes&quot;: [&#xA;                {&#xA;                    &quot;id&quot;: &quot;1&quot;,&#xA;                    &quot;name&quot;: &quot;data_source&quot;,&#xA;                    &quot;fields&quot;: [&#xA;        &#xA;                        {&#xA;                            &quot;columns&quot;: [&#xA;                                {&#xA;                                    &quot;table&quot;: {&#xA;                                        &quot;id&quot;: &quot;query_id&quot;,&#xA;                                        &quot;name&quot;: &quot;Custom SQL Query&quot;,&#xA;                                        &quot;query&quot;: &quot;SELECT * FROM test&quot;,&#xA;                                        &quot;connectionType&quot;: &quot;snowflake&quot;,&#xA;                                        &quot;database&quot;: {&#xA;                                            &quot;name&quot;: &quot;dev&quot;&#xA;                                        }&#xA;                                    }&#xA;                                }&#xA;                            ]&#xA;&#xA;}&#xA;</code></pre>&#xA;",19437636,,5615778,2022-10-02 10:01:01,2022-10-02 10:01:01,GraphQL inline fragments only when value exists?,<python><rest><graph><graphql><tableau-api>,0,0,0,2022-10-02 09:56:34
73954901,2,,69950724,0,,"<p>In your types &quot;UserLoginLog&quot; and &quot;VideoTransformLog&quot;, remove &quot;user&quot; from the @key(... fields).&#xA;So don't place names that correspond to a type in fields[].</p>&#xA;",16661536,,,,2022-10-05 00:38:07,"",,0,0,0,2022-10-05 00:38:07
73974440,1,,,0,46,"<p>I am trying to type the event object coming from my AWS Amplify/NextJS front-end. It is sent via Amplify/GraphQL and being received in a NodeJS AWS Lambda. The typescript interface contained in <code>import { AppSyncResolverEvent } from &quot;aws-lambda&quot;;</code> - but this doesn't quite match the event object that's being received. Can someone please advise what I'm doing wrong?</p>&#xA;<p><strong>Details:</strong></p>&#xA;<p>I'm successfully firing an event from my front-end (NextJS) with <code>aws-amplify</code> and <code>@aws-amplify/api-graphql</code> packages:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { graphqlOperation, GraphQLResult } from &quot;@aws-amplify/api-graphql&quot;; // &quot;version&quot;: &quot;2.3.11&quot;,&#xA;import { API } from &quot;aws-amplify&quot;; // &quot;aws-amplify&quot;: &quot;^4.3.28&quot;,&#xA;&#xA;...&#xA;    // Retrieve schemas from Lambda&#xA;    const response = (await API.graphql&lt;{ myAppSyncFunctionResponse: any }&gt;(&#xA;      graphqlOperation(myAppSyncFunction),&#xA;      { input: &quot;foo&quot; }&#xA;    )) as GraphQLResult&lt;{ myAppSyncFunctionResponse: string }&gt;;&#xA;</code></pre>&#xA;<p>The event is being successfully received in my Serverless Lambda and resembles the following:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>{&#xA;  typeName: &quot;Mutation&quot;,&#xA;  fieldName: &quot;myAppSyncFunction&quot;,&#xA;  arguments: { input: { ... } },&#xA;  identity: {...},&#xA;  source: ...,&#xA;  request: ...,&#xA;  prev:...&#xA;}&#xA;</code></pre>&#xA;<p>However, when I try to use <code>aws-lambda</code> in my nodejs Lambda environment:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { AppSyncResolverEvent } from &quot;aws-lambda&quot;;&#xA;&#xA;export async function eventBridgeResolver(&#xA;  event: AppSyncResolverEvent&#xA;) {...}&#xA;</code></pre>&#xA;<p><code>AppSyncResolverEvent</code> contains different properties:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>// node_modules/@types/aws-lambda/trigger/appsync-resolver.d.ts&#xA;{&#xA; arguments: TArguments;&#xA;    identity?: AppSyncIdentity;&#xA;    source: TSource;&#xA;    request: {&#xA;        headers: AppSyncResolverEventHeaders;&#xA;    };&#xA;    info: {&#xA;        selectionSetList: string[];&#xA;        selectionSetGraphQL: string;&#xA;        parentTypeName: string;&#xA;        fieldName: string;&#xA;        variables: { [key: string]: any };&#xA;    };&#xA;    prev: { result: { [key: string]: any } } | null;&#xA;    stash: { [key: string]: any };&#xA;}&#xA;</code></pre>&#xA;",11664580,,,,2022-10-06 13:12:28,How to type the event of a serverless resolver sent from an Amplify GraphQL call,<amazon-web-services><aws-lambda><graphql><aws-amplify><serverless>,0,0,0,2022-10-06 13:12:28
73979592,2,,73971901,0,,"<p>This is possible. I once wrote a query like this. I needed to search the database using some search terms.</p>&#xA;<pre><code>query ($title: String!, $company: String!, $city: String!, $investor: String!) {&#xA;    jobs(&#xA;      where: {&#xA;        and: [&#xA;          { title: { ilike: $title } },&#xA;          { company: { name: { ilike: $company } } },&#xA;          { city: { ilike: $city } },&#xA;          {company: {company_investors:{investor:{name: {ilike: $investor}}}}}&#xA;          &#xA;        ]&#xA;      }&#xA;    ) {&#xA;      id&#xA;      title&#xA;      city&#xA;      company {&#xA;        name&#xA;        id&#xA;        company_investors {&#xA;          investor {&#xA;            name&#xA;            id&#xA;          }&#xA;        }&#xA;      }&#xA;    }&#xA;  }&#xA;&#xA;</code></pre>&#xA;",7811351,,,,2022-10-06 20:17:26,"",,0,2,0,2022-10-06 20:17:26
73990049,2,,70150882,0,,"<p>I ran straight into this, my app (NextJS) uses Amplify and was crashing with &quot;Amplify not correctly configured&quot; and so on in the unit tests.</p>&#xA;<p>Mocked it like this:</p>&#xA;<pre><code>jest.mock('aws-amplify');&#xA;&#xA;describe('Index', () =&gt; {&#xA;  beforeEach(() =&gt; {&#xA;    Amplify.configure({&#xA;      Auth: {&#xA;        identityPoolId: 'abc',&#xA;        region: 'def',&#xA;        userPoolId: 'ghi',&#xA;        userPoolWebClientId: 'jkl',&#xA;      },&#xA;    });&#xA;  });&#xA;</code></pre>&#xA;<p>This allowed the test to pass. Note that you could use this without the jest.mock line, but then Amplify validation will kick in and if your arguments don't pass, Amplify will throw all kinds of errors. Mocking the module this way skips that validation.</p>&#xA;<p>I'd assume whatever else you were trying to mock could be handled this way by adding the functions you need to the jest.mock line per the usual module mock overrides.</p>&#xA;",4768968,,,,2022-10-07 16:26:04,"",,0,0,0,2022-10-07 16:26:04
73992116,2,,65608067,1,,"<p>You can also use definite assignment assertion to make typescript aware that the &quot;secret&quot; is certainly there by using an '!'. As the above answer mentions, process.env is of type string | undefined,  which is an invalid type for jwt.Secret.</p>&#xA;<pre><code>company.accessToken = jsonwebtoken.sign({ company }, secret!, {&#xA;           expiresIn: &quot;30 days&quot;&#xA;         })&#xA;</code></pre>&#xA;",18693692,,,,2022-10-07 20:01:46,"",,0,0,0,2022-10-07 20:01:46
74001645,1,,,1,90,"<p>NextJs Application is working perfectly fine locally but after pushing the fronted to AWS I'm getting the run time error,  <strong>No Credentials</strong> in <em><strong>callback.js</strong></em> api</p>&#xA;<p>No Build time error, so I assume aws-exports.js file is built correctly during the build but I don't know if it is built with the required details like API key on AWS.</p>&#xA;<p>I'm using API key authentication by default. I'm not using amplify add auth because I've a requirement to use custom auth. I know amplify auth is the recommend way but I still need to use my custom method.</p>&#xA;<p>I have already tried multiple suggestions like disable Analytics: true  as suggested in couple of other discussions but none of them worked for me. Build my project multiple times from scratch by re-installing all the dependencies but no luck.</p>&#xA;<p><strong>callback.js API</strong></p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { API, graphqlOperation } from 'aws-amplify';&#xA;import {getAuth} from &quot;../../../../src/graphql/queries&quot;&#xA;import {createAuth} from &quot;../../../../src/graphql/mutations&quot;&#xA;&#xA;export default async function callback(req, res) {&#xA;      const record = await API.graphql(graphqlOperation(getAuth, {emailId: &quot;abc@gmail.com&quot;}))&#xA;      res.status(200).json({ record });&#xA;}&#xA;</code></pre>&#xA;<p><strong>aws-exports.js</strong></p>&#xA;<pre class=""lang-js prettyprint-override""><code>/* eslint-disable */&#xA;// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.&#xA;&#xA;const awsmobile = {&#xA;    &quot;aws_project_region&quot;: &quot;us-east-1&quot;,&#xA;    &quot;aws_appsync_graphqlEndpoint&quot;: &quot;https://dummyUrl.appsync-api.us-east-1.amazonaws.com/graphql&quot;,&#xA;    &quot;aws_appsync_region&quot;: &quot;us-east-1&quot;,&#xA;    &quot;aws_appsync_authenticationType&quot;: &quot;API_KEY&quot;,&#xA;    &quot;aws_appsync_apiKey&quot;: &quot;da2-************&quot;&#xA;};&#xA;&#xA;export default awsmobile;&#xA;</code></pre>&#xA;<p><strong>_app.js</strong></p>&#xA;<pre class=""lang-js prettyprint-override""><code>&#xA;import {Amplify} from 'aws-amplify';&#xA;import config from &quot;../aws-exports&quot;&#xA;Amplify.configure(config)&#xA;&#xA;function MyApp({ Component, pageProps: { session, ...pageProps } }) {&#xA; // App logic&#xA;&#xA;})&#xA;&#xA;</code></pre>&#xA;<p><strong>GraphQL Schema</strong></p>&#xA;<pre class=""lang-js prettyprint-override""><code>type Auth @model @auth(rules: [{ allow: public }])  {&#xA;  emailId: ID! @primaryKey&#xA;  name: String&#xA;  screen_name: String&#xA;  profile_img: String&#xA;  userSession: String&#xA;  tokenType: String&#xA;  accessToken: String&#xA;  accessSecret: String&#xA;  refreshToken: String&#xA;  accessScope: String&#xA;}&#xA;</code></pre>&#xA;<p><strong>Package.json</strong></p>&#xA;<pre class=""lang-js prettyprint-override""><code>&quot;dependencies&quot;: {&#xA;    &quot;@emoji-mart/data&quot;: &quot;^1.0.6&quot;,&#xA;    &quot;@emoji-mart/react&quot;: &quot;^1.0.1&quot;,&#xA;    &quot;aes256&quot;: &quot;^1.1.0&quot;,&#xA;    &quot;aws-amplify&quot;: &quot;^4.3.37&quot;,&#xA;    &quot;emoji-mart&quot;: &quot;^5.2.2&quot;,&#xA;    &quot;formidable&quot;: &quot;^2.0.1&quot;,&#xA;    &quot;js-cookie&quot;: &quot;^3.0.1&quot;,&#xA;    &quot;next&quot;: &quot;12.3.1&quot;,&#xA;    &quot;react&quot;: &quot;18.2.0&quot;,&#xA;    &quot;react-datepicker&quot;: &quot;^4.8.0&quot;,&#xA;    &quot;react-dom&quot;: &quot;18.2.0&quot;,&#xA;  },&#xA;</code></pre>&#xA;<p>Amplify.yml</p>&#xA;<pre class=""lang-js prettyprint-override""><code>version: 1&#xA;backend:&#xA;  phases:&#xA;    build:&#xA;      commands:&#xA;        - '# Execute Amplify CLI with the helper script'&#xA;        - amplifyPush --simple&#xA;frontend:&#xA;  phases:&#xA;    preBuild:&#xA;      commands:&#xA;        - yarn install&#xA;    build:&#xA;      commands:&#xA;        - yarn run build&#xA;  &#xA;  artifacts:&#xA;    baseDirectory: .next&#xA;    files:&#xA;      - '**/*'&#xA;  cache:&#xA;    paths:&#xA;      - node_modules/**/*&#xA;&#xA;</code></pre>&#xA;",15156497,,,,2022-10-11 02:36:37,Amplify GraphQL No Credentials Error in NextJs Application,<amazon-web-services><graphql><aws-amplify><aws-amplify-cli>,1,0,0,2022-10-09 01:51:42
74001894,2,,74001645,0,,"<p><strong>Edited</strong><br />&#xA;I've found how the server side process work with amplify and graphql. Please refer to <a href=""https://docs.amplify.aws/lib/graphqlapi/graphql-from-nodejs/q/platform/js/"" rel=""nofollow noreferrer"">this</a>. On the server side, you need to pass the API KEY explicitly into the graphql request as that page writes.</p>&#xA;<p>==========<br />&#xA;I'm using appsync, but appsync pure directives. So just let me provide the reference below. Please confirm the rule follows <a href=""https://aws.amazon.com/blogs/mobile/graphql-security-appsync-amplify/"" rel=""nofollow noreferrer"">this way</a>.</p>&#xA;<p>{ allow: public, provider: apiKey }</p>&#xA;",19622195,,19622195,2022-10-11 02:36:37,2022-10-11 02:36:37,"",,0,5,0,2022-10-09 03:12:37
74007107,1,,,0,31,"<p>I have created a site where an user can login and do things with a GraphQL table. That works fine. But now there is a need to have a public read access to that table.</p>&#xA;<p>schema.grapql:</p>&#xA;<pre><code>type Garden @model @auth(rules: [{allow: public, operations: [read]}] {&#xA;    id: ID!&#xA;    name: String&#xA;}&#xA;</code></pre>&#xA;<p>I am aware that allow: public means only Authorized users can access this. So public is not <em>true</em> public.</p>&#xA;<p>With the following call (Javascript):</p>&#xA;<pre><code>await API.graphql({ &#xA;    query: listGardens,&#xA;    authMode: 'API_KEY',&#xA;    authToken: 'token_from_amazon_aplify_backend'&#xA;})&#xA;</code></pre>&#xA;<p>But this call only returns <strong>_deleted</strong> items. What am I missing here?</p>&#xA;<ul>&#xA;<li>GraphQL is installed and working.</li>&#xA;<li>Auth is installed and working with login with users.</li>&#xA;</ul>&#xA;",4421627,,,,2022-10-09 17:44:25,Amazon Amplify GraphQL call with API_KEY,<graphql><aws-amplify><aws-amplify-cli>,0,0,0,2022-10-09 17:44:25
74007807,1,74013259,,0,41,"<p>I am trying to use Graphql to export test cases and their execution results for any test case in a specific Test Plan.  I was able to write the Graphql script to get all the details from the test execution I need, but the one problem is that the defect value returned is a string of numbers rather than the actual defect key.   I tried using jira fields in the code for &quot;links&quot; and &quot;linked issues&quot;, but that didn't work.   Does anyone know how to just get the specific defect key associated with the test case?  Here is my code:</p>&#xA;<pre><code>{&#xA;    getTestExecutions(jql: &quot;key = Demo-123&quot;, limit: 100 start:0) {&#xA;        results{&#xA;          jira(fields: [&quot;key&quot;, &quot;summary&quot;])&#xA;    &#xA;          testRuns(limit: 100 start: 0){&#xA;              total&#xA;            results{&#xA;                test{&#xA;                  jira(fields: [&quot;key&quot;, &quot;summary&quot;, &quot;description&quot;])  &#xA;                }&#xA;              status{&#xA;                name&#xA;              }&#xA;              comment&#xA;              defects&#xA;              &#xA;&#xA;              steps {&#xA;                  status{&#xA;                    name&#xA;                  }&#xA;                  action&#xA;                  result&#xA;                  actualResult     &#xA;                  customFields {&#xA;                   value&#xA;                    }&#xA;                    defects&#xA;                                  &#xA;              }&#xA;              &#xA;            }&#xA;        }&#xA;&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;",8815571,,,,2022-10-10 10:36:34,Locating defects from Jira Xray using Graphql,<graphql><jira><jira-xray>,1,0,0,2022-10-09 19:29:05
74033310,2,,66746771,1,,"<p>This is achievable in AppSync. I think what you are looking for is a way to use different authentication mode for different API. So some API like query can be done by any unauthenticated users(i.e open to public) while others ike mutation is guarded behind the authentication.</p>&#xA;<p>One simple approach would be to enable authentication via <code>Cogntito Identity Pool</code></p>&#xA;<p><a href=""https://docs.aws.amazon.com/cognito/latest/developerguide/identity-pools.html"" rel=""nofollow noreferrer"">Identity pool</a> can be configured with two roles, one authorized role and another unauthorized role. Unauthorized role policy can be updated to, default ALLOW permission on AppSync query endpoint.</p>&#xA;<hr />&#xA;<p>Here is a sample guide by Daniel Bayerlein which you can follow to achieve this: <a href=""https://dev.to/danielbayerlein/aws-appsync-without-authentication-3fnm"" rel=""nofollow noreferrer"">https://dev.to/danielbayerlein/aws-appsync-without-authentication-3fnm</a></p>&#xA;<p>It has detailed step and configuration change that is needed.</p>&#xA;<hr />&#xA;<p>One more references for your help, in case if you just want to manually update the Cognito identity pool permission manually from AWS console: <a href=""https://dev.to/sedkis/setting-up-aws-appsync-for-unauthenticated-users-1879"" rel=""nofollow noreferrer"">https://dev.to/sedkis/setting-up-aws-appsync-for-unauthenticated-users-1879</a></p>&#xA;<hr />&#xA;<p>I hope this would be useful. Please feel free to reach out in case if you get stuck. Would be more then happy to assist in your configuration.</p>&#xA;<hr />&#xA;",3549742,,,,2022-10-11 19:40:09,"",,0,0,0,2022-10-11 19:40:09
74037280,1,74043012,,0,31,"<p>I have the following situation in Hasura. A table with articles, a table with tags and one mapping table called articles_tags. What I'm trying to achieve is to get all the articles that have certain tags assigned to them. The query that comes to my mind is the following:</p>&#xA;<pre><code>query SomeQuery {&#xA;   articles(where: {&#xA;    articles_tags: {&#xA;      _and: [&#xA;         tagId: { _eq: 1 },&#xA;         tagId: { _eq: 2 },&#xA;         ...&#xA;      ]&#xA;    }}) {&#xA;     id&#xA;   }&#xA;}&#xA;</code></pre>&#xA;<p>The problem with this query is that the number of items in the _and condition is hardcoded and the only way I can make it dynamic is by string operations, which as I know are marked as bad practise in GraphQl. So my question is do you know some way to pass an array of the tag ids instead of the hardcoded ones and to build the same Hasura condition? Also what are the best practises in this situation?</p>&#xA;",10033104,,,,2022-10-12 17:01:56,How can I build query with multiple _and conditions from array in Hasura,<graphql><hasura>,1,0,0,2022-10-12 06:20:59
74040269,1,,,0,35,"<p>Just starting to learn GraphQL and probably making silly mistake.</p>&#xA;<p>On <a href=""https://graphql.org/learn/schema/#interfaces"" rel=""nofollow noreferrer"">https://graphql.org/learn/schema/#interfaces</a> they have the two below interfaces;</p>&#xA;<pre><code>type Human implements Character {&#xA;  id: ID!&#xA;  name: String!&#xA;  friends: [Character]&#xA;  appearsIn: [Episode]!&#xA;  starships: [Starship]&#xA;  totalCredits: Int&#xA;}&#xA;&#xA;type Droid implements Character {&#xA;  id: ID!&#xA;  name: String!&#xA;  friends: [Character]&#xA;  appearsIn: [Episode]!&#xA;  primaryFunction: String&#xA;}&#xA;</code></pre>&#xA;<p>the below works fine</p>&#xA;<pre><code>query HeroForEpisode($ep: Episode!) {&#xA;  hero(episode: $ep) {&#xA;    name&#xA;    ... on Droid {&#xA;        primaryFunction&#xA;    }&#xA;    ... on Human {&#xA;      starships {&#xA;        name&#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>but if I try totalCredits;</p>&#xA;<pre><code>query HeroForEpisode($ep: Episode!) {&#xA;  hero(episode: $ep) {&#xA;    name&#xA;    ... on Droid {&#xA;        primaryFunction&#xA;    }&#xA;    ... on Human {&#xA;        totalCredits&#xA;    }&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://i.stack.imgur.com/1gBDS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1gBDS.png"" alt=""screen shot of error"" /></a></p>&#xA;<p>it error with;</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Cannot query field \&quot;totalCredits\&quot; on type \&quot;Human\&quot;.&quot;,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 8,&#xA;          &quot;column&quot;: 4&#xA;        }&#xA;      ]&#xA;    }&#xA;  ]&#xA;}&#xA;</code></pre>&#xA;<p>What mistake am I making or is it not me?</p>&#xA;<p>Cheers in advance</p>&#xA;",12726632,,,,2022-10-12 12:43:55,GraphQL official learn section Interfaces - raises cannot query field “totalCredits” on type “Human”,<graphql>,1,0,0,2022-10-12 10:22:57
74041970,2,,74040269,0,,"<p>I highly doubt their documentation website has bugs or confusing.</p>&#xA;<p>This is the <a href=""https://github.com/graphql/graphql.github.io"" rel=""nofollow noreferrer"">code repository</a> of the website. From the <a href=""https://github.com/graphql/graphql.github.io/blob/4a919d3a0d009976797ce42e95432cee134e10c3/src/components/Marked/swapiSchema.tsx#L86"" rel=""nofollow noreferrer"">source codes</a>, the <code>Human</code> schema actually is :</p>&#xA;<pre><code># A humanoid creature from the Star Wars universe&#xA;type Human implements Character {&#xA;  &#xA;  # The ID of the human&#xA;  id: ID!&#xA;&#xA;  # What this human calls themselves&#xA;  name: String!&#xA;&#xA;  # Height in the preferred unit, default is meters&#xA;  height(unit: LengthUnit = METER): Float&#xA; &#xA;  # Mass in kilograms, or null if unknown&#xA;  mass: Float&#xA;  &#xA;  # This human's friends, or an empty list if they have none&#xA;  friends: [Character]&#xA;  &#xA;  # The friends of the human exposed as a connection with edges&#xA;  friendsConnection(first: Int, after: ID): FriendsConnection!&#xA;  &#xA;  # The movies this human appears in&#xA;  appearsIn: [Episode]!&#xA;  &#xA;  # A list of starships this person has piloted, or an empty list if none&#xA;  starships: [Starship]&#xA;}&#xA;</code></pre>&#xA;<p>It only has fields called <code>height</code> and <code>mass</code> but no fields called <code>totalCredits</code>. You can also verify it from the auto-suggest feature of that GraphQL query editor by clicking <kbd>Ctrl + Space</kbd> after typing <code> ... on Human {</code></p>&#xA;<p><a href=""https://i.stack.imgur.com/FjNWJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FjNWJ.png"" alt=""enter image description here"" /></a></p>&#xA;<p>You can also consider to report this issue to them at <a href=""https://github.com/graphql/graphql.github.io/issues"" rel=""nofollow noreferrer"">here</a> telling that it is confusing for you to learn.</p>&#xA;",339637,,339637,2022-10-12 12:43:55,2022-10-12 12:43:55,"",,0,0,0,2022-10-12 12:38:43
74045944,2,,69105024,2,,<p>Try adding <code>filterOption={false}</code> to your code. Worked for me</p>&#xA;,8935347,,,,2022-10-12 17:36:03,"",,0,0,0,2022-10-12 17:36:03
74075902,1,,,1,34,"<p>Given some knowledge about single table design in DynamoDB, I would like to have generic attribute names.</p>&#xA;<hr />&#xA;<h2>What I'm trying to create:</h2>&#xA;<pre><code>   PK     |         SK         |    LSI1    | ...&#xA;---------------------------------------------------&#xA; PRODUCT  | ?id=1234-1234-1234 | ?type=shoe | ...&#xA;---------------------------------------------------&#xA;</code></pre>&#xA;<p>Rather than the default:</p>&#xA;<pre><code>        id       |  type1  | type2 |  ...&#xA;------------------------------------------------------&#xA; 1234-1234-1234  | PRODUCT | shoe  | ...&#xA;------------------------------------------------------&#xA;</code></pre>&#xA;<hr />&#xA;<h2>My question:</h2>&#xA;<p>How can I specify the type for SK in the first example? I would like to specify that it's a <code>String</code> of format <code>?id=</code> and <code>ID!</code></p>&#xA;",1487102,,,,2022-10-24 08:53:57,How to create an AppSync GraphQL prefixed / complex type `?id=ID` rather than just `ID!`,<graphql><amazon-dynamodb><aws-appsync>,1,0,0,2022-10-15 00:37:54
74083977,1,,,0,32,"<p>Say I have a query <code>getUser($id)</code> but I'm finding I mostly call it for the currently authenticated user.  Using Apollo client, how would I define a client side only query, say <code>getMyUser()</code> who's implementation would do the following:</p>&#xA;<ol>&#xA;<li>check currently logged in user, get their id (could be from wherever, in my case it would be the indexedDB)</li>&#xA;<li>call the getUser($id) query</li>&#xA;<li>respond with result of <code>getUser($id)</code></li>&#xA;</ol>&#xA;<p>Note: This is just one use case, ultimately, I need a way to define a whole set of queries and mutations that wrap more low level queries and mutations in order to avoid having to implement all new endpoints on the server.</p>&#xA;",500270,,,,2022-10-16 01:00:42,Client only graphql query with Apollo Client,<graphql><apollo><apollo-client>,0,3,0,2022-10-16 01:00:42
74121944,1,,,0,57,"<p>I'm trying to run <code>amplify push</code> after creating a resolver. The initial error is:</p>&#xA;<ul>&#xA;<li>CREATE_FAILED ; BatchAddTodosResolver ; AWS::AppSync::Resolver ;  The specified key does not exist. (Service: Amazon S3; Status Code: 404; Error Code: NoSuchKey;</li>&#xA;</ul>&#xA;<p>This is followed by these errors:</p>&#xA;<ul>&#xA;<li>UPDATE_FAILED ; CustomResourcesjson ; AWS::CloudFormation::Stack ; Embedded stack arn:aws:cloudformation:eu-west-2::stack/amplify--dev-153155--1BXI79QFMXX10-CustomResourcesjson-8BPZCI05LJ2U/cdd9bb90-1729-11ed-8fd7-06e957346298 was not successfully updated. Currently in UPDATE_ROLLBACK_IN_PROGRESS with reason: The following resource(s) failed to create: [BatchAddTodosResolver].</li>&#xA;<li>UPDATE_FAILED ; CustomResourcesjson ; AWS::CloudFormation::Stack</li>&#xA;</ul>&#xA;<p>I've done the following (following <a href=""https://medium.com/@jan.hesters/creating-graphql-batch-operations-for-aws-amplify-with-appsync-and-cognito-ecee6938e8ee"" rel=""nofollow noreferrer"">this tutorial</a>):</p>&#xA;<ul>&#xA;<li>Create Amplify app with <code>amplify init</code> and <code>amplify add api</code>; <code>amplify add auth</code>;</li>&#xA;<li>Create mutation in <code>schema.graphql</code>:</li>&#xA;</ul>&#xA;<pre><code>input CreateTodoInput {&#xA;  id: ID&#xA;  title: String!&#xA;  description: String&#xA;  completed: Boolean&#xA;}&#xA;&#xA;type Mutation {&#xA;  batchAddTodos(todos: [CreateTodoInput]): [Todo]&#xA;}&#xA;</code></pre>&#xA;<ul>&#xA;<li><code>amplify update api</code></li>&#xA;<li>Add <a href=""https://medium.com/@jan.hesters/creating-graphql-batch-operations-for-aws-amplify-with-appsync-and-cognito-ecee6938e8ee#file-customresources-json-LC1"" rel=""nofollow noreferrer"">this code</a> to <code>amplify/api/&lt;your-api-name&gt;/stacks/CustomResources.json</code></li>&#xA;<li>Create <code>amplify/backend/api/&lt;your-api-name&gt;/resolvers/Mutation.batchAddTodos.req.vtl</code> (as per <a href=""https://medium.com/@jan.hesters/creating-graphql-batch-operations-for-aws-amplify-with-appsync-and-cognito-ecee6938e8ee#file-mutation-batchaddtodos-req-vtl-LC1"" rel=""nofollow noreferrer"">the example</a> and <code>amplify/backend/api/&lt;your-api-name&gt;/resolvers/Mutation.batchAddTodos.res.vtl</code> (as per the example below the req.vtl example)</li>&#xA;<li>Update the references to the DynamoDB table in the <code>req.vtl</code></li>&#xA;<li><code>amplify push</code></li>&#xA;</ul>&#xA;<p>There was an item in the instructions that I could not follow:</p>&#xA;<blockquote>&#xA;<p>Note: You need to run amplify add api without the batchAddTodos mutation first and then add it via amplify update api.</p>&#xA;</blockquote>&#xA;<p>I assumed that <code>amplify update api</code> was wrong, since we'd already set up the API and the article provided no further instructions to indicate why we would want to run <code>amplify update api</code>. I think the author meant that the we would add the changes by running <code>amplify push</code> - but perhaps this is where I've gone wrong and am getting the</p>&#xA;",11664580,,11664580,2022-10-19 08:37:27,2022-10-20 08:35:36,CREATE_FAILED ; <name> ; AWS::AppSync::Resolver ; The specified key does not exist. (Service: Amazon S3; Status Code: 404; Error Code: NoSuchKey;,<amazon-web-services><graphql><aws-amplify><aws-appsync>,1,0,0,2022-10-19 08:10:23
74124585,1,,,0,95,"<p>I am having trouble with</p>&#xA;<pre><code>&quot;message&quot;: &quot;Not Authorized to access createMerchant on type Merchant&quot;&#xA;</code></pre>&#xA;<p>I'm executing this on the AWS AppSync Request tab.</p>&#xA;<p>I'm able to list (this one too), create other types but just not this one.</p>&#xA;<pre><code>input CreateMerchantInput {&#xA;    id: ID&#xA;    pass: AWSURL&#xA;    validated: Boolean!&#xA;    _version: Int&#xA;}&#xA;</code></pre>&#xA;<pre><code>type MerchantType @aws_iam&#xA;@aws_cognito_user_pools {&#xA;    id: ID!&#xA;    role: String!&#xA;    merchantSpotMerchantTypes(&#xA;        filter: ModelMerchantSpotMerchantTypeFilterInput,&#xA;        sortDirection: ModelSortDirection,&#xA;        limit: Int,&#xA;        nextToken: String&#xA;    ): ModelMerchantSpotMerchantTypeConnection&#xA;    createdAt: AWSDateTime!&#xA;    updatedAt: AWSDateTime!&#xA;    _version: Int!&#xA;    _deleted: Boolean&#xA;    _lastChangedAt: AWSTimestamp!&#xA;}&#xA;</code></pre>&#xA;<p>Not sure how to fix this. Rights seem ok to me and I don't know where to look else.</p>&#xA;",10155317,,10155317,2022-10-21 07:59:36,2022-10-25 23:36:02,Not authorized to access type creation GRAPHQL,<amazon-web-services><graphql><amazon-cognito><aws-amplify><aws-appsync>,1,0,0,2022-10-19 11:31:25
74131450,1,,,0,25,"<p>I'm trying to set-up AppSync to forward certain resolvers to a Lambda which already exposes a GraphQL interface. For this I need to construct the query or mutation which the user submitted to AppSync, and submit it to my service. While I'm able to get the field names, and the selection part of the query is available as GraphQL from <em>$context.info.selectionSetGraphQL</em>, I only found <em>$context.arguments</em> which gives the arguments as JSON.</p>&#xA;<p>So far my AppSync VTL template can reconstruct queries with no arguments as:</p>&#xA;<pre><code>&quot;$util.str.toLower($context.info.parentTypeName) $operationName { $context.info.fieldName $context.info.selectionSetGraphQL }&quot;&#xA;</code></pre>&#xA;<p>(Excerpt from <a href=""https://stackoverflow.com/a/74129300/1268949"">the answer I shared here</a>).</p>&#xA;<p>How do I reconstruct the arguments as GraphQL?</p>&#xA;",1268949,,,,2022-10-19 20:20:59,Extracting GraphQL arguments as GraphQL in AppSync mapping templates,<aws-lambda><graphql><velocity><aws-appsync><graphql-schema>,0,0,0,2022-10-19 20:20:59
74134881,1,74160557,,0,82,"<p>In the <a href=""https://docs.sst.dev/constructs/AppSyncApi#schema"" rel=""nofollow noreferrer"">SST AppSyncApi</a> it is clearly mentioned that schema can have type of string | string[], but when i am useing an array of graphql schema source as string i am getting this error</p>&#xA;<p>Getting this error becouse of multiple graphql source in Stack Configuration.</p>&#xA;<p>Is there any way i can use seperate graphql schema for each section so that it will be easy to manage large applicatios.</p>&#xA;<h3>Project Link</h3>&#xA;<p><a href=""https://github.com/SonuKumar81800/AWS_Backend"" rel=""nofollow noreferrer"">AWS_Backend Project</a></p>&#xA;<h2>Error</h2>&#xA;<pre class=""lang-bash prettyprint-override""><code> TypeError: mergeTypeDefs is not a function&#xA;    at AppSyncApi.createGraphApi (file:///E:/aws_projects/backend/node_modules/@serverless-stack/resources/dist/AppSyncApi.js:240:42)&#xA;    at new AppSyncApi (file:///E:/aws_projects/backend/node_modules/@serverless-stack/resources/dist/AppSyncApi.js:48:14)&#xA;    at EmptyStack.MyStack (file:///E:/aws_projects/backend/.build/lib/index.js:3386:15)&#xA;    at stack (file:///E:/aws_projects/backend/node_modules/@serverless-stack/resources/dist/FunctionalStack.js:15:35)&#xA;    at App.stack (file:///E:/aws_projects/backend/node_modules/@serverless-stack/resources/dist/App.js:336:16)&#xA;    at Module.main (file:///E:/aws_projects/backend/.build/lib/index.js:3437:7)&#xA;    at file:///E:/aws_projects/backend/.build/run.mjs:99:22 &#xA;</code></pre>&#xA;<h2>folder structure</h2>&#xA;<pre><code>.&#xA;├── lib&#xA;│   ├── MyStack&#xA;│   ├── Resolvers&#xA;│   ├── Schemas&#xA;│   └── DataSources&#xA;├── src&#xA;│   ├── feature1&#xA;│   |  ├── feature1.graphql&#xA;│   |  ├── feature1.handler&#xA;│   |  ├── feature1.resolver&#xA;│   ├── feature2&#xA;│   |  ├── feature2.graphql&#xA;│   |  ├── ...&#xA;│   ├── ...&#xA;│   └── ...&#xA;└── ...&#xA;</code></pre>&#xA;<p>this is my stack configuration</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { StackContext, AppSyncApi, Cognito } from '@serverless-stack/resources';&#xA;import dataSources from './dataSources';&#xA;import resolvers from './resolvers';&#xA;import { AuthorizationType, UserPoolDefaultAction } from '@aws-cdk/aws-appsync-alpha';&#xA;import { Duration, Expiration } from 'aws-cdk-lib';&#xA;&#xA;export function MyStack({ stack }: StackContext) {&#xA;  // Create the AppSync GraphQL API&#xA;  const auth = new Cognito(stack, 'Auth');&#xA;&#xA;  const api = new AppSyncApi(stack, 'AppSyncApi', {&#xA;    schema: ['src/feature1/feature1.graphql','src/feature1/feature1.graphql'],&#xA;    defaults: {&#xA;      function: {&#xA;        timeout: 20,&#xA;        environment: {&#xA;          DATABASE:&#xA;            process.env.DATABASE ||&#xA;            `mongodb+srv://${process.env.MONGO_USERNAME}:${process.env.MONGO_PASSWORD}@atlascluster.sr2q4hg.mongodb.net/${process.env.DATABASE_NAME}?retryWrites=true&amp;w=majority`,&#xA;          GRAPHQL_API_URL: process.env.GRAPHQL_API_URL || '',&#xA;          GRAPHQL_API_KEY: process.env.GRAPHQL_API_KEY || '',&#xA;        },&#xA;      },&#xA;    },&#xA;    cdk: {&#xA;      graphqlApi: {&#xA;        authorizationConfig: {&#xA;          defaultAuthorization: {&#xA;            authorizationType: AuthorizationType.USER_POOL,&#xA;            userPoolConfig: {&#xA;              userPool: auth.cdk.userPool,&#xA;              defaultAction: UserPoolDefaultAction.ALLOW,&#xA;            },&#xA;          },&#xA;          additionalAuthorizationModes: [&#xA;            {&#xA;              authorizationType: AuthorizationType.API_KEY,&#xA;              apiKeyConfig: {&#xA;                expires: Expiration.after(Duration.days(365)),&#xA;              },&#xA;            },&#xA;          ],&#xA;        },&#xA;      },&#xA;    },&#xA;    dataSources: dataSources,&#xA;    resolvers: { ...resolvers },&#xA;  });&#xA;  api.attachPermissions(['s3']);&#xA;&#xA;  // Show the AppSync API Id in the output&#xA;  stack.addOutputs({&#xA;    ApiId: api.apiId,&#xA;    APiUrl: api.url,&#xA;    UserPoolId: auth.userPoolId,&#xA;    UserPoolClientId: auth.userPoolClientId,&#xA;  });&#xA;}&#xA;&#xA;</code></pre>&#xA;",14180618,,14180618,2022-10-20 06:28:32,2022-10-22 01:45:52,How can I break apart a GraphQL Schema into multiple files in AWS-CDK (SST -> AppSyncApi),<amazon-web-services><graphql><aws-cdk><aws-config>,1,0,0,2022-10-20 05:37:38
74145926,1,,,0,20,"<p>I'm trying to get a SQL query to return it's data as JSON using appsync and RDS as data source.&#xA;In appsync I'm passing something like this:</p>&#xA;<pre><code>&quot;statements&quot;:  [ &quot;Select * from user WHERE uuid = '001'&quot;]&#xA;</code></pre>&#xA;<p>I have as response mapping $ctx.result but I'm getting as a reply</p>&#xA;<pre><code>{sqlStatementResults=[{records=[[{stringValue=001}, {stringValue=nonemail@none.no}, {stringValue=Nully}, {longValue=62761} ... }&#xA;</code></pre>&#xA;<p>I was expecting to get values the same way that is described on the rds helpers doc from amazon <a href=""https://docs.aws.amazon.com/appsync/latest/devguide/rds-helpers-in-util-rds.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/rds-helpers-in-util-rds.html</a> where you can see the return from the SQLStatement records is formatted in JSON</p>&#xA;<pre><code>                    {&#xA;                        &quot;stringValue&quot;: &quot;Mark Twain&quot;&#xA;                    },&#xA;                    {&#xA;                        &quot;stringValue&quot;: &quot;Adventures of Huckleberry Finn&quot;&#xA;                    }&#xA;</code></pre>&#xA;",20295351,,,,2022-11-16 21:38:13,Appsync RDS SQL not returning JSON format,<sql><json><graphql><amazon-rds>,1,0,0,2022-10-20 20:23:22
74150739,1,,,1,73,"<p>I have the following code.</p>&#xA;<pre><code>import { useQuery } from &quot;@vue/apollo-composable&quot;;&#xA;&#xA;const ACCOUNTS_QUERY = gql`&#xA;  {&#xA;    accounts {&#xA;      id&#xA;      name&#xA;      number&#xA;    }&#xA;  }&#xA;`;&#xA;&#xA;interface Accounts {&#xA;  accounts: [&#xA;    {&#xA;      id: number;&#xA;      name: string;&#xA;      number: string;&#xA;    }&#xA;  ];&#xA;}&#xA;&#xA;export default defineComponent({&#xA;  name: &quot;AccountsView&quot;,&#xA;  setup() {&#xA;    const { result, loading, error } = useQuery&lt;Accounts&gt;(ACCOUNTS_QUERY);&#xA;&#xA;    return {&#xA;      accounts: result.accounts,&#xA;    }&#xA;</code></pre>&#xA;<p>Here I get TS2339: Property 'accounts' does not exist on type 'Ref&lt;Accounts | undefined&gt;' in the return.</p>&#xA;<p>Now if I swap the return statement for:</p>&#xA;<pre><code>    return {&#xA;      result,&#xA;    }&#xA;</code></pre>&#xA;<p>I can access <code>result.accounts</code> in the template and iterate over it with <code>v-for</code>. Why can't I return <code>result.accounts</code>?</p>&#xA;",424586,,424586,2022-10-21 09:39:48,2022-10-21 14:12:40,Typescript says property doesn't exist though it does?,<typescript><vue.js><graphql><apollo-client>,3,2,0,2022-10-21 08:21:23
74154974,2,,74150739,0,,"<p>Ultimately, I went with another solution.</p>&#xA;<pre><code>  data() {&#xA;    const accounts: Account[] = [];&#xA;&#xA;    return {&#xA;      accounts,&#xA;    };&#xA;  },&#xA;  beforeMount() {&#xA;    useQuery&lt;Accounts&gt;(ACCOUNTS_QUERY).onResult(&#xA;      (handler) =&gt; (this.accounts = handler.data.accounts)&#xA;    );&#xA;  },&#xA;</code></pre>&#xA;<p>Thank you for pointing me in the right direction.</p>&#xA;",424586,,,,2022-10-21 14:12:40,"",,0,0,0,2022-10-21 14:12:40
74157822,1,74236101,,0,49,"<p>I followed AWS's AppSynch tutorial and successfully setup the sample Todo project from the tutorial. Now I'm trying to apply the same steps with a different schema to work with my project. I edited the schema, deployed the API and was able to make several test queries and mutations with both the AppySynch console and a mock API. I'm running into problems with connecting my API to my front end though. I'm getting errors for all of my API request. The only thing that I changed in my process was that I edited the schema so I'm not sure if that is where I made a mistake. Since the test quieries/mutations were successful does that mean my API is likely fine and the issue exist within my code? Is it necessary that I pay for an AWS support plan to work through this issue?</p>&#xA;<p>I'm new to AWS and GraphQL so some of the information that I provided below might be overkill. If I need to add any additional information I will be happy to. I appreciate your help and thank you for your time!</p>&#xA;<p><strong>listEntries ERROR:</strong></p>&#xA;<p>TypeError: Cannot read properties of undefined (reading 'items')</p>&#xA;<p><strong>createEntry ERROR:</strong></p>&#xA;<p>&quot;The variables input contains a field name 'entry' …defined for input object type 'CreateEntryInput'</p>&#xA;<p><strong>Tutorial Reference:</strong></p>&#xA;<p><a href=""https://docs.amplify.aws/start/getting-started/data-model/q/integration/react/#optional-test-your-api"" rel=""nofollow noreferrer"">https://docs.amplify.aws/start/getting-started/data-model/q/integration/react/#optional-test-your-api</a></p>&#xA;<p><strong>mutations.js:</strong></p>&#xA;<pre><code>   export const createEntry = /* GraphQL */ `&#xA;  mutation CreateEntry(&#xA;    $input: CreateEntryInput!&#xA;    $condition: ModelEntryConditionInput&#xA;  ) {&#xA;    createEntry(input: $input, condition: $condition) {&#xA;      id&#xA;      content&#xA;      title&#xA;      topic&#xA;      createdAt&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p><strong>queries.js:</strong></p>&#xA;<pre><code>     export const listEntries = /* GraphQL */ `&#xA;  query ListEntries(&#xA;    $filter: ModelEntryFilterInput&#xA;    $limit: Int&#xA;    $nextToken: String&#xA;  ) {&#xA;    listEntries(filter: $filter, limit: $limit, nextToken: $nextToken) {&#xA;      items {&#xA;        id&#xA;        content&#xA;        title&#xA;        topic&#xA;        createdAt&#xA;        updatedAt&#xA;      }&#xA;      nextToken&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p><strong>schema.graphql:</strong></p>&#xA;<pre><code>  type Entry @model {&#xA;  id: ID!&#xA;  content: String!&#xA;  title: String&#xA;  topic: String!&#xA;}&#xA;</code></pre>&#xA;<p><strong>React.js Code:</strong></p>&#xA;<pre><code>import React, { useRef, useState, useEffect } from 'react';&#xA;import { Editor } from '@tinymce/tinymce-react';&#xA;import awsExports from &quot;../aws-exports&quot;;&#xA;import { withAuthenticator} from '@aws-amplify/ui-react';&#xA;import '@aws-amplify/ui-react/styles.css';&#xA;import { Amplify, API, graphqlOperation } from 'aws-amplify'&#xA;import { createEntry} from '../graphql/mutations.js';&#xA;import { listEntries } from '../graphql/queries.js';&#xA;    Amplify.configure(awsExports);&#xA;    const initialState = { id: 0, entry: '', title: '', topic: '', date:''}&#xA;    export default function App() {&#xA;    const [formState, setFormState] = useState(initialState) &#xA;    const [entryContent, setEntry] = useState([]&#xA; &#xA;    useEffect(() =&gt; {&#xA;        fetch()&#xA;      }, [])&#xA;   &#xA;      async function fetch() {&#xA;        try {&#xA;          const entryData = await API.graphql(graphqlOperation(listEntries))&#xA;          const entryContent = entryData.data.list.items&#xA;          setEntry(entryContent)&#xA;        } catch (err) { console.log(err) }&#xA;      }&#xA; &#xA;      function setInput(key, value) {&#xA;        setFormState({ ...formState, [key]: value })&#xA;      }&#xA; &#xA;      async function addEntry() {&#xA;        try {&#xA;          const entry = { ...formState }&#xA;          setEntry([...entryContent, entry])&#xA;          setFormState(initialState)&#xA;          await API.graphql(graphqlOperation(createEntry, {input: entry}))&#xA;        } catch (err) {&#xA;          console.log(err)&#xA;        }&#xA;      }&#xA;    &#xA;    const editorRef = useRef();&#xA;    const [entryArray, setEntryArray] = React.useState(); // ORIGINAL&#xA;    //const updatedList = [...entryArray]&#xA;    const log = () =&gt; {&#xA;      if (editorRef.current) {&#xA;        setEntryArray(editorRef.current.getContent());&#xA;            setInput('entry', entryArray )&#xA;            addEntry()&#xA;      }&#xA;    };&#xA; &#xA;    return (&#xA;    &lt;&gt;&#xA;    &lt;Editor&#xA;        onInit={(evt, editor) =&gt; editorRef.current = editor}&#xA;        initialValue='&lt;p&gt;This is the initial content of the editor.&lt;/p&gt;'&#xA;        disabled = {false}&#xA;        inline = {false}&#xA;        init={{&#xA;          selector: &quot;#entryEdi&quot;,&#xA;          height: 500,&#xA;          menubar: false,&#xA;          placeholder: &quot;Whats on your mind?&quot;,&#xA;          plugins: [&#xA;            'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',&#xA;            'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',&#xA;            'insertdatetime', 'media', 'table', 'code', 'help', 'wordcount'&#xA;          ],&#xA;          toolbar:  'undo redo | blocks | ' +&#xA;                'bold italic forecolor | alignleft aligncenter ' +&#xA;                'alignright alignjustify | bullist numlist outdent indent | ' +&#xA;                'removeformat | help',&#xA;          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'&#xA;        }}&#xA;        /&gt;&#xA;        &lt;button onClick={log}&gt;Log editor content&lt;/button&gt;&#xA;      &lt;/&gt;&#xA;    );&#xA;  }&#xA;</code></pre>&#xA;<p><strong>Test Queries:</strong></p>&#xA;<p><a href=""https://i.stack.imgur.com/fBlbb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fBlbb.png"" alt=""enter image description here"" /></a></p>&#xA;<p><strong>Amplify mock api:</strong></p>&#xA;<p><a href=""https://i.stack.imgur.com/IQvI3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IQvI3.png"" alt=""enter image description here"" /></a></p>&#xA;",18943330,,18943330,2022-10-22 13:12:51,2022-10-28 13:25:16,AWS AppSynch GraphQL Connecting API to Front End setup error: undefined,<reactjs><amazon-web-services><graphql><aws-amplify><aws-appsync>,1,0,0,2022-10-21 18:28:16
74166712,2,,70412840,0,,<p>On the client do:</p>&#xA;<pre><code>export const GET_DATA = gql`&#xA;    query($dataType: String) {&#xA;        getData(dataType: $dataType) {&#xA;          ...&#xA;        }&#xA;    }&#xA;`;&#xA;</code></pre>&#xA;<p>This is because your enum is an enum of strings.</p>&#xA;,2805154,,,,2022-10-22 20:02:16,"",,0,0,0,2022-10-22 20:02:16
74177834,2,,73111646,0,,<p>Have you grant AWS Cognito Groups enough permissions to access your DynamoDb resources?</p>&#xA;,3101813,,,,2022-10-24 07:32:31,"",,0,0,0,2022-10-24 07:32:31
74180073,1,,,1,30,"<p>I am using a headless Wordpress with ACF, WP-GraphQL and WPGraphQL for Advanced Custom Fields installed. In ACF I created a field group with some fields and set the condition to <code>User Role == All</code>. The Goal is to add some fields to the regular WP-User.</p>&#xA;<p>When I now want to use the GraphQL-IDE to click together a mutation to register a new user, the ACF fields I created aren't there as inputs. So I can't register a user using those fields. I wonder if I've done anything wrong because, it seems, that GraphQL does not update its schema. I still can see CPTs that I've created and deleted earlier.</p>&#xA;<p>Under <code>registerUser</code> I can find a node <code>user</code> and under that I can find the field group I have created. But not as inputs.</p>&#xA;<h3>Here are some screenshots:</h3>&#xA;<p><a href=""https://i.stack.imgur.com/8BnZq.png"" rel=""nofollow noreferrer"">ACF field group</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/60H6F.png"" rel=""nofollow noreferrer"">GraphQL Settings</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/RFSig.png"" rel=""nofollow noreferrer"">GraphQL-IDE Query Composer</a></p>&#xA;",14440270,,,,2022-11-19 09:08:51,Headless Wordpress GraphQL & ACF-Pro registerUser fields not showing,<wordpress><graphql><advanced-custom-fields><acfpro>,1,0,0,2022-10-24 10:57:00
74181637,1,,,0,28,"<p><strong>Use-case</strong></p>&#xA;<p>I want to create an async graphQL endpoint which accepts the params from SQS and runs the query from the input of SQS params. Since the query is long running and lambda might timeout hence using the below approach</p>&#xA;<p>I have an SQS queue where I have input in below format</p>&#xA;<ol>&#xA;<li>RequestID</li>&#xA;<li><strong>GraphQL query</strong></li>&#xA;<li>Request Status</li>&#xA;</ol>&#xA;<p>Now when SQS triggers graphql lambda, I want to use this <strong>param 2</strong>. and execute that query</p>&#xA;<p><strong>Solutions found</strong></p>&#xA;<ol>&#xA;<li>Using some requestDidStart <a href=""https://www.apollographql.com/docs/apollo-server/integrations/plugins-event-reference/#requestdidstart"" rel=""nofollow noreferrer"">plugins</a> to somehow grab <strong>param 2.</strong> and pass it to execute to graph server</li>&#xA;<li>Use apollo-server handler</li>&#xA;<li>Use <a href=""https://www.apollographql.com/docs/apollo-server/v2/testing/testing/#executeoperation"" rel=""nofollow noreferrer"">executeOperation</a></li>&#xA;</ol>&#xA;",11844300,,,,2022-10-24 13:14:32,How can we execute graphQL query which is read from SQS input in Async Lambda?,<amazon-web-services><lambda><graphql><apollo><apollo-server>,0,0,0,2022-10-24 13:14:32
74193175,2,,67551593,1,,"<p>@kachar's answer almost worked for me, below let me share the grants SQL that worked for me today</p>&#xA;<pre><code>grant usage on schema local to postgres, anon, authenticated, service_role;&#xA;alter user supabase_admin SET search_path TO public, local, extensions; -- add all schemas to search path but don't include the &quot;auth&quot; schema&#xA;&#xA;grant all privileges on all tables in schema local to postgres, anon, authenticated, service_role, supabase_admin;&#xA;grant all privileges on all functions in schema local to postgres, anon, authenticated, service_role, supabase_admin;&#xA;grant all privileges on all sequences in schema local to postgres, anon, authenticated, service_role, supabase_admin;&#xA;&#xA;alter default privileges in schema local grant all on tables to postgres, anon, authenticated, service_role;&#xA;alter default privileges in schema local grant all on functions to postgres, anon, authenticated, service_role;&#xA;alter default privileges in schema local grant all on sequences to postgres, anon, authenticated, service_role;&#xA;&#xA;alter default privileges for user supabase_admin in schema local grant all&#xA;    on sequences to postgres, anon, authenticated, service_role;&#xA;alter default privileges for user supabase_admin in schema local grant all&#xA;    on tables to postgres, anon, authenticated, service_role;&#xA;alter default privileges for user supabase_admin in schema local grant all&#xA;    on functions to postgres, anon, authenticated, service_role;&#xA;</code></pre>&#xA;",1742820,,,,2022-10-25 11:11:58,"",,0,0,0,2022-10-25 11:11:58
74197340,1,,,0,23,"<p>I have an enum in my schema in the following way:</p>&#xA;<pre><code>type Item {&#xA;  name: String!&#xA;}&#xA;&#xA;enum ItemType {&#xA;    Simple&#xA;    Advanced&#xA;}&#xA;&#xA;input ValueSimple { simple: Int }&#xA;&#xA;input ValueAdvanced { advanced: Int }&#xA;&#xA;input InputItemSchedule {&#xA;  type: ItemType!&#xA;&#xA;  valueSimple: ValueSimple&#xA;&#xA;  valueAdvanced: ValueAdvanced&#xA;}&#xA;&#xA;&#xA;mutation Mutation {&#xA;  addItem(name: String!, schedule: [InputItemSchedule]!): Item&#xA;}&#xA;</code></pre>&#xA;<p>I am trying to do conditional checks in the AppSync resolver template (data source id DynamoDB) but I don't know how to get the value for the item type:</p>&#xA;<pre><code>#set($schedule = {})&#xA;#foreach($item in $context.args.schedule)&#xA;    #set($scheduleItem = { })&#xA;    #if($item.type == &quot;Simple&quot;)&#xA;        #set($scheduleItem.value = $item.valueSimple)&#xA;    #elseif($item.type == &quot;Advanced&quot;)&#xA;        #set($scheduleItem.value = $item.valueAdvanced)&#xA;    #else&#xA;        ## Set the type value to value for testing purposes &#xA;        #set($scheduleItem.value = $util.dynamodb.toDynamoDBJson($item.type))&#xA;    #end&#xA;    $util.qr($schedule.add($scheduleItem))&#xA;#end&#xA;&#xA;{&#xA;    &quot;version&quot; : &quot;2017-02-28&quot;,&#xA;    &quot;operation&quot; : &quot;PutItem&quot;,&#xA;    &quot;key&quot; : {&#xA;        &quot;id&quot;: $util.dynamodb.toDynamoDBJson($util.autoId()),&#xA;    },&#xA;    &quot;attributeValues&quot; : {&#xA;        &quot;name&quot;: $util.dynamodb.toDynamoDBJson($ctx.args.name),&#xA;        &quot;schedule&quot;: $util.dynamodb.toDynamoDBJson($schedule)&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>When I make a request that triggers the resolver regardless of the enum value, I keep getting the following in DynamoDB:</p>&#xA;<pre class=""lang-json prettyprint-override""><code>...&#xA;&quot;value&quot;: {&#xA;  &quot;S&quot;: &quot;null&quot;&#xA;}&#xA;</code></pre>&#xA;<p>How am I supposed to read the GraphQL enum value from the resolver template?</p>&#xA;",816116,,,,2022-10-25 16:28:39,How to read GraphQL enum values in AppSync resolver template?,<graphql><velocity><aws-appsync><aws-appsync-resolver>,0,0,0,2022-10-25 16:28:39
74201201,2,,74124585,2,,"<p>The solution <em>might</em> depend on how you're authenticating the call - are you using Cognito? IAM?</p>&#xA;<p>&quot;Rights seem ok&quot; ... well, they might seem ok to you but still not be correct :) If it's IAM then you should probably post your policy.</p>&#xA;<p>But you don't seem to have any explicit <code>@auth</code> directives, so -- in the absence of other info -- I'm going to guess that you're perhaps using Cognito and that you might have some <a href=""https://docs.amplify.aws/cli/graphql/custom-business-logic/#vtl-resolver"" rel=""nofollow noreferrer"">custom VTL resolvers</a> in your amplify project that are affecting <code>createMerchant</code> (perhaps accidentally). But it is hard to say for certain without more detail on your project.</p>&#xA;",58549,,,,2022-10-25 23:36:02,"",,0,0,0,2022-10-25 23:36:02
74217622,1,,,1,116,"<p>When I try to make a call from my front-end (NextJS) I get the following error <code>Error: Body must be a string. Received: undefined.</code></p>&#xA;<p>I can successfully make a call from my AppSync console, but not from my front-end. I have pushed the following <code>schema.graphql</code> file with <code>amplify push</code>:</p>&#xA;<pre><code>type Mutation {&#xA;...&#xA;  cancelCard(input: CancelCardInput!): AWSJSON&#xA;    @function(name: &quot;myp-service-prod-cancel-stepfunction-lambda&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>I'm seeing logs in CloudWatch when I trigger the Lambda from the Lambda and AppSync consoles, but something is blocking the calls from my javascript:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>import { cancelCard } from &quot;../src/graphql/mutations&quot;;&#xA;&#xA;    const lambdaResponse = await API.graphql(&#xA;      graphqlOperation(cancelCard, {&#xA;        input: { id: cardId },&#xA;      })&#xA;    )&#xA;</code></pre>&#xA;",11664580,,,,2022-10-27 07:30:21,"Error: Body must be a string. Received: undefined. - When using Amplify, AppSync, and GraphQL from React/NextJS client",<javascript><graphql><aws-amplify><aws-appsync>,1,0,0,2022-10-27 06:24:11
74223591,1,,,0,59,"<p>I need a GraphQL query returning hardcoded informations as JSON response.</p>&#xA;<p>In the AppSync GraphQL schema, I added the following query:</p>&#xA;<pre><code>type Query {&#xA;  getHealthCheck: AWSJSON&#xA;}&#xA;</code></pre>&#xA;<p>My response mapping template where the values are hardcoded is the following:</p>&#xA;<pre><code>$util.toJson({&quot;version&quot;: &quot;0.1.0&quot;})&#xA;</code></pre>&#xA;<p>However, as the response of the query, I get a string instead of a proper JSON, i.e.:</p>&#xA;<pre><code>{&#xA;    &quot;data&quot;: {&#xA;        &quot;getHealthCheck&quot;: &quot;{\&quot;version\&quot;:\&quot;0.1.0\&quot;}&quot;&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<p>How can I modify the response mapping template to get a proper JSON? I tried several utils but I'm a bit lost with the data structures in VTL.</p>&#xA;",4417586,,4417586,2022-10-27 14:43:34,2022-10-29 21:00:54,AWS AppSync - formatting hardcoded JSON data in response mapping template,<graphql><aws-appsync><vtl>,1,0,0,2022-10-27 14:15:52
74235681,2,,72418070,1,,"<p>Based on this <a href=""https://docs.amplify.aws/lib/graphqlapi/authz/q/platform/ios/#aws-lambda"" rel=""nofollow noreferrer"">documentation</a> I ran <code>amplify update api</code>:</p>&#xA;<p>From there the command line prompts you to select the API type:</p>&#xA;<pre><code>? Please select from one of the below mentioned services:&#xA;    &gt; `GraphQL`&#xA;? Select a setting to edit:&#xA;    &gt; `Authorization modes`&#xA;? Choose the default authorization type for the API&#xA;  API key&#xA;  Amazon Cognito User Pool&#xA;❯ IAM&#xA;  OpenID Connect&#xA;</code></pre>&#xA;<p>I updated the default authorization type for the API to be <code>Amazon Cognito User Pool</code> instead of <code>API key</code>.</p>&#xA;<p>Then I had to run <code>amplify push --appId YOUR_APP_ID --envName YOUR_STAGING_ENV</code> to sync up the changes.</p>&#xA;",6417947,,,,2022-10-28 12:49:17,"",,0,0,0,2022-10-28 12:49:17
74236101,2,,74157822,1,,"<ol>&#xA;<li><p>For the listEntries ERROR:&#xA;Instead of what you have it should be :</p>&#xA;<p><code>const entryContent = entryData.data.listEntries.items</code>&#xA;.The items are usually stored in an object with a similar name to the query so if you check Appsync you'll see it looks like</p>&#xA;<p>{data{lisEntries{items{....}}}}</p>&#xA;</li>&#xA;<li><p>For the createEntry ERROR:&#xA;Your initalState has a field entry, which isn't really in the schema, you can only add or get items from fields defined in the schema&#xA;So your either update your schema to add the entry field or make it look like what is in the schema like this:</p>&#xA;<pre><code>const initialState = { id: &quot;, content: '', title: '', topic: ''}&#xA;</code></pre>&#xA;<p>Any field you want to send back to your DB should already be present in the schema. You can update the schema by adding the fields you want to add. Then run <code>amplify push api</code>. That will fix it</p>&#xA;</li>&#xA;</ol>&#xA;",14122134,,,,2022-10-28 13:25:16,"",,0,2,0,2022-10-28 13:25:16
74241309,2,,66884271,0,,"<p>Maybe too late but this might work. Disclaimer: This would apply to Amplify GraphQL Transformer v1, which still works but it is deprecated as it was replaced by <a href=""https://aws.amazon.com/blogs/mobile/aws-amplify-announces-the-new-graphql-transformer-v2-more-feature-rich-flexible-and-extensible/"" rel=""nofollow noreferrer"">GraphQL Transformer v2</a></p>&#xA;<pre><code>type User&#xA;    @model&#xA;    @auth(rules: [{ allow: owner}]) {&#xA;    id: ID!&#xA;    cognitoId: ID!&#xA;    username: String!&#xA;    registered: Boolean&#xA;    contacts: [UserContact] @connection(keyName: &quot;byContact&quot;, fields: [&quot;id&quot;])&#xA;}&#xA;&#xA;type UserContact&#xA;  @model&#xA;  @auth(&#xA;    rules: [&#xA;      { allow: owner }&#xA;      {&#xA;        allow: owner&#xA;        ownerField: &quot;contacts&quot;&#xA;        operations: [update, delete, read]&#xA;      }&#xA;    ]&#xA;  ) @key(name: &quot;byContact&quot;, fields: [&quot;contactOneID&quot;, &quot;contactTwoID&quot;]){&#xA;  id: ID!&#xA;  contactOneID: ID! &#xA;  contactTwoID: ID!&#xA;  contactOne: User! @connection(fields: [&quot;contactOneID&quot;])&#xA;  contactTwo: User! @connection(fields: [&quot;contactTwoID&quot;])&#xA;  contacts: [ID]&#xA;}&#xA;</code></pre>&#xA;",8781399,,,,2022-10-28 22:00:21,"",,0,0,0,2022-10-28 22:00:21
74243890,1,,,0,55,"<p>Currently i have a graphql query deployed in aws appsync&#xA;<a href=""https://i.stack.imgur.com/LsWEP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LsWEP.png"" alt=""image"" /></a></p>&#xA;<p>I want to execute and get the graphql result from webapi.</p>&#xA;",13318892,,,,2022-10-29 08:34:40,How to get aws appsync graphql response from dotnet web api,<asp.net><.net-core><graphql><aws-appsync><graphqlclient>,0,0,0,2022-10-29 08:34:40
74259164,1,,,0,14,"<p>I am working on a project in AWS-amplify and i'm new to AWS platform and my project file are all in the form of Graphql v1 transformer when i try to run amplify thorws an error even after downgrading amplify version to 8.0.6<a href=""https://i.stack.imgur.com/yXmgU.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yXmgU.png"" alt=""enter image description here"" /></a> #Your GraphQL Schema is using &quot;@key&quot;, &quot;@connection&quot; directives from an older version of the GraphQL Transformer.&#xA;and it is mandatory to use Graphql v1 Transform in my organization any one kindly give me a solution for this query</p>&#xA;<p>trying to run graphql V1 transformer&#xA;and i dont want to migrate my code to graphql v1 to v2</p>&#xA;<p>expecting a solution to deploy amplify graphql v1 or downgrade grapqlv2 to v1<em>your text</em></p>&#xA;",20376212,,,,2022-11-08 06:31:57,Graphql migration for older version,<python><reactjs><graphql><aws-appsync><amplify>,0,1,0,2022-10-31 05:43:55
74263476,2,,73786014,0,,<p>I got the same error and resolved it by giving permission to the auth token I was using.</p>&#xA;<p>Visit your graphql project dashboard. Then</p>&#xA;<pre><code>Project Settings &gt; ACCESS &gt; API Access &gt; Endpoints&#xA;</code></pre>&#xA;<p>Update permissions of the Auth Token</p>&#xA;,14928212,,14928212,2022-10-31 12:46:54,2022-10-31 12:46:54,"",,0,0,0,2022-10-31 12:44:42
74264836,2,,74231889,1,,"<p>Don't think it is possible. It uses Hasura to generate the GraphQL API and Hasura generates a GraphQL type for each table such that the records in that table can be filtered by using GraphQL query.</p>&#xA;<p>But the data type of sprites is just a String type but not a GraphQL type. There are no tables that stores sprites and so it cannot generate a GraphQL type for it. You best bet is to parse the sprites and filter it by yourself.</p>&#xA;<p>There is also an <a href=""https://github.com/PokeAPI/pokeapi/issues/614"" rel=""nofollow noreferrer"">issue</a> in their Github talking about it , mainly are :</p>&#xA;<blockquote>&#xA;<p>It's a bug. Currently, the sprites are the only non-working thing in&#xA;the graphql engine. It's because we don't have a Postgres table for&#xA;them.</p>&#xA;</blockquote>&#xA;<blockquote>&#xA;<p>Any update on these being parsed? I added some code on my side to&#xA;parse the sprites object and then choose a specific one that I want,&#xA;but it would be nice to handle that in the GQL query</p>&#xA;</blockquote>&#xA;<blockquote>&#xA;<p>No. sorry, updates here will require some actual work and nobody can&#xA;right now</p>&#xA;</blockquote>&#xA;",339637,,339637,2022-11-01 04:24:17,2022-11-01 04:24:17,"",,0,0,0,2022-10-31 14:29:39
74265540,1,,,0,20,"<p>So I have a graphql query that fetches all accounts in our API. The resolver fetches the data from our postgres db using a SQL query that joins multiple tables because I need to know which account belongs to what entity (department) and funding (like a loan or grant).&#xA;We're using the json operator to create an entity and funding object columns and all the fields are there. However in the response, the id field specifically is returning null. Accounts.id is there but accounts.entity.id and accounts.funding.id return null. However if I query entity.id and funding.id  it returns the correct value. We don't know why. Our schema defines id as a String.</p>&#xA;<p>Here is the response:</p>&#xA;<p>``&#xA;`</p>&#xA;<pre><code>&#xA;  &quot;data&quot;: {&#xA;    &quot;accounts&quot;: {&#xA;      &quot;docs&quot;: [&#xA;        {&#xA;          &quot;name&quot;: &quot;*******************&quot;,&#xA;          &quot;slugName&quot;: &quot;*************************&quot;,&#xA;          &quot;id&quot;: &quot;635********6d1&quot;,&#xA;          &quot;entity&quot;: {&#xA;            &quot;id&quot;: null,&#xA;            &quot;slugName&quot;: &quot;**************&quot;,&#xA;            &quot;address&quot;: &quot;0x****************************71C&quot;,&#xA;            &quot;name&quot;: &quot;*****************&quot;,&#xA;            &quot;type&quot;: &quot;*********&quot;&#xA;          },&#xA;          &quot;funding&quot;: {&#xA;            &quot;id&quot;: null,&#xA;            &quot;slugName&quot;: &quot;********************************&quot;,&#xA;            &quot;type&quot;: &quot;********&quot;,&#xA;            &quot;name&quot;: &quot;**********&quot;&#xA;          }&#xA;        },&#xA;</code></pre>&#xA;<p>and here is the SQL query:&#xA;``&#xA;`</p>&#xA;<pre><code>`select&#xA;    account.*,&#xA;    to_json(entity.*) as &quot;entity&quot;,&#xA;    to_json(funding.*) as &quot;funding&quot;&#xA;  from account&#xA;  left join entity on entity.id=account.&quot;entityId&quot;&#xA;  left join funding on funding.id=account.&quot;fundingId&quot;`&#xA;</code></pre>&#xA;",20352788,,,,2022-10-31 15:27:12,GraphQL response returning null for specific field in a json object when all other fields have values,<postgresql><graphql><apollo-server><graphql-js>,0,2,0,2022-10-31 15:27:12
74272297,1,,,0,8,"<p>Let's say I have a GraphQL schema:</p>&#xA;<pre><code>type MyModel {&#xA;  canUpdate: [String]&#xA;}&#xA;</code></pre>&#xA;<p>If it already contains values, eg <code>[&quot;value1&quot;,&quot;value2&quot;]</code> and I want to update to an empty list: <code>[]</code>, how do I achieve this?</p>&#xA;<p>When I use the AppSync console it only lets me enter a string:</p>&#xA;<p><a href=""https://i.stack.imgur.com/9armR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9armR.png"" alt=""enter image description here"" /></a></p>&#xA;<p>But this just replaces <code>[&quot;value1&quot;,&quot;value2&quot;]</code> with <code>[&quot;?&quot;]</code></p>&#xA;",11664580,,,,2022-11-01 06:31:20,How to update a field value to an empty list [] using AWS AppSync,<graphql><aws-appsync>,1,0,0,2022-11-01 06:31:20
74286230,1,74286413,,1,31,"<p>I need to return following object to client:</p>&#xA;<pre><code>{&#xA;      id: &quot;be49e436-1da0-463e-91fc-e53695cee00b&quot;,&#xA;      groupName: &quot;Maintainance Workers&quot;,&#xA;      groupId: &quot;c0fc9f0c-af0e-43d8-b896-560dc389b506&quot;,&#xA;      groupDescription: &quot;Lorem ipsum Description&quot;,&#xA;      accessPoints: {&#xA;        &quot;e1274504-b471-427c-a63b-dd9aba46a118&quot;: [&#xA;          &quot;89d9ef1c-7781-498b-a2ef-e0a107ad24e9&quot;,&#xA;          &quot;fd9fe18e-f67a-42b3-b44c-cfa264532ffd&quot;,&#xA;        ],&#xA;      },&#xA;    }&#xA;</code></pre>&#xA;<p>for this I created following schema:</p>&#xA;<pre><code>type Group {&#xA;   groupName: String!,&#xA;   groupDescription: String!,&#xA;   id: String!,&#xA;   groupId: String!,&#xA;   accessPoints: AccessPointsByBuilding&#xA;}&#xA;&#xA;type AccessPointsByBuilding {&#xA;   String: [String!]&#xA;}&#xA;</code></pre>&#xA;<p>I know the problem is with <code>AccessPointsByBuilding</code> but I am unable to find the solution of this. Any help will be appreciated. TIA.</p>&#xA;",7808346,,,,2022-11-02 09:34:11,How to return ID as a key in AppSync GraphQL schema?,<graphql><schema><aws-appsync><graphql-schema>,1,0,0,2022-11-02 08:24:20
74286413,2,,74286230,2,,"<p>Use <strong>AWSJSON</strong> type to dynamically return any JSON object.</p>&#xA;<pre><code>type UserGroup {&#xA;    userGroupName: String!,&#xA;    userGroupDescription: String!,&#xA;    siteId: String!,&#xA;    userGroupId: String!,&#xA;    accessPoints: AWSJSON&#xA;}&#xA;</code></pre>&#xA;<p><a href=""https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/appsync/latest/devguide/scalars.html</a></p>&#xA;",14055946,,7808346,2022-11-02 09:34:11,2022-11-02 09:34:11,"",,0,0,0,2022-11-02 08:40:06
74309504,1,,,-2,20,<p>Is there any way to convert a GraphQL schema into Postgres Tables Or SQL queries ?</p>&#xA;<p>I am working in a task where I need to automigrate database tables as GraphQL schema changes.</p>&#xA;,18113554,,,,2022-11-03 21:01:12,GraphQL schema into Postgres Tables,<postgresql><go><graphql>,0,0,0,2022-11-03 21:01:12
74312744,1,,,0,17,"<p><a href=""https://i.stack.imgur.com/cXCZb.png"" rel=""nofollow noreferrer"">This is the full endpoint</a><a href=""https://i.stack.imgur.com/FcxQ5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FcxQ5.png"" alt=""This is the response iam sending through the postman for excel upload through Graphql&#xA;"" /></a></p>&#xA;<p><strong>com.fasterxml.jackson.databind.exc.MismatchedInputException: Cannot construct instance of <code>java.util.LinkedHashMap</code> (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('{')&#xA;at [Source: (String)&quot;&quot;{ &quot;query&quot;: &quot;mutation ($file: Upload) {uploadRegionData(file: $file)}&quot; , &quot;variables&quot;: {}}&quot;&quot;; line: 1, column: 1]</strong></p>&#xA;<p>iam getting this error!!!</p>&#xA;<p>any idea to resolve it</p>&#xA;",20376345,,20376345,2022-11-04 05:55:51,2022-11-04 05:55:51,excel upload in springboot qraphql,<spring><graphql>,0,1,0,2022-11-04 05:53:11
74314348,1,,,2,77,"<p>I want to require django's user authentication in order to access the <code>graphql</code> view.</p>&#xA;<p>My first attempt was to decorate the view with <code>login_required</code>:</p>&#xA;<pre class=""lang-py prettyprint-override""><code>from django.contrib.auth.decorators import login_required&#xA;from django.urls import path&#xA;&#xA;urlpatterns = [&#xA;    path(&quot;graphql/sync&quot;, login_required(GraphQLView.as_view(schema=schema))),&#xA;    path(&quot;graphql&quot;, login_required(AsyncGraphQLView.as_view(schema=schema))),&#xA;]&#xA;</code></pre>&#xA;<p>It work for the sync view but not for the async one since login_required does not async aware.</p>&#xA;<p>For now I endend-up to write my own view which copy the login_required behavior:</p>&#xA;<pre class=""lang-py prettyprint-override""><code>&#xA;from urllib.parse import urlparse&#xA;&#xA;from asgiref.sync import sync_to_async&#xA;from strawberry.django.views import AsyncGraphQLView&#xA;&#xA;from django.conf import settings&#xA;from django.contrib.auth.views import redirect_to_login&#xA;from django.shortcuts import resolve_url&#xA;from django.utils.decorators import method_decorator&#xA;from django.views.decorators.csrf import csrf_exempt&#xA;&#xA;class LoginRequiredAsyncGraphQLView(AsyncGraphQLView):&#xA;    @method_decorator(csrf_exempt)&#xA;    async def dispatch(self, request, *args, **kwargs):&#xA;        is_authenticated = await sync_to_async(lambda: request.user.is_authenticated)()&#xA;        if not is_authenticated:&#xA;            path = request.build_absolute_uri()&#xA;            resolved_login_url = resolve_url(settings.LOGIN_URL)&#xA;            # If the login url is the same scheme and net location then just&#xA;            # use the path as the &quot;next&quot; url.&#xA;            login_scheme, login_netloc = urlparse(resolved_login_url)[:2]&#xA;            current_scheme, current_netloc = urlparse(path)[:2]&#xA;            if (not login_scheme or login_scheme == current_scheme) and (&#xA;                not login_netloc or login_netloc == current_netloc&#xA;            ):&#xA;                path = request.get_full_path()&#xA;&#xA;            return redirect_to_login(path, resolved_login_url)&#xA;            &#xA;        return await super().dispatch(request, *args, **kwargs)&#xA;&#xA;&#xA;# urls.py&#xA;urlpatterns = [&#xA;&#xA;    path(&quot;graphql&quot;, LoginRequiredAsyncGraphQLView.as_view(schema=schema)),&#xA;]&#xA;</code></pre>&#xA;<p>But it seems to not be a nice solution and I bet there is something cleaner.</p>&#xA;<p>There is a better solution to have a <code>login_required</code> decorator compatible with async view ?</p>&#xA;",1216183,,,,2022-11-07 15:27:18,How to require django's authentication on strawberry-graphql,<django><django-authentication><strawberry-graphql>,1,0,0,2022-11-04 08:49:59
74322569,1,,,1,42,"<p>I am trying to create a project for internal employees to give permission based on groupsField.</p>&#xA;<p>I have referred the AWS documentation for dynamic permission, but it's not working in my case.</p>&#xA;<p>Here's relevant part of graphql schema</p>&#xA;<pre><code>type something&#xA;@auth(&#xA;  rules: [&#xA;&#xA;             { allow: groups, groups: [&quot;Admin&quot;] }&#xA;             { allow: groups, groupsField: &quot;groupRead&quot;, operations: [read] }&#xA;             { allow: public }&#xA;&#xA;&#xA;&#xA;]&#xA;)&#xA;  @model&#xA;  @searchable&#xA;{&#xA;  id: ID!&#xA;  phone: String&#xA;  email: String&#xA;  groupRead: [String!]&#xA;&#xA;}&#xA;</code></pre>&#xA;<p>If I try to search the result from my front-end side and in AppSync,  it's not allowing me search anything and give back empty array of items.</p>&#xA;<p>Two errors:</p>&#xA;<ol>&#xA;<li>Not authorized to access the list</li>&#xA;<li>gives back empty result</li>&#xA;</ol>&#xA;<p>But if I change to</p>&#xA;<p>groupRead: String!</p>&#xA;<p>Then it works for front-end as well as in AppSync. But In this case, for dynamoDB I can not assign more than one value to groupRead. As an admin I want to give them more than one department read permission.</p>&#xA;<p>All static group permissions are working perfectly fine, for instance Admin.</p>&#xA;<p><strong>Goal: groupRead should be type of list, so in DynamoDB I can pass multiple value to groupRead.</strong></p>&#xA;",14677255,,,,2022-11-04 20:20:56,GraphQL dynamic groupsField not working if type of group is list,<javascript><graphql><amazon-dynamodb><amazon-cognito><aws-appsync>,0,1,0,2022-11-04 20:20:56
74355196,1,,,0,6,"<p>currently i'm creating a GraphQL implementation of an existing API.</p>&#xA;<p>i want to create Search Function not with primary column, which is not id, but id_position.</p>&#xA;<p>here is my scheme :</p>&#xA;<pre><code>type Query @guard {&#xA;    subordinate(&#xA;        positionId: ID&#xA;    ): [Employee!]! @all&#xA;}&#xA;&#xA;type Position @key(fields: &quot;id&quot;) {&#xA;    id: ID&#xA;    name: String&#xA;}&#xA;&#xA;&quot;Account of a person who utilizes this application.&quot;&#xA;type Employee @key(fields: &quot;id&quot;) {&#xA;    id: ID&#xA;    name: String&#xA;    id_position: Int&#xA;}&#xA;</code></pre>&#xA;<p>but, when I run this :</p>&#xA;<pre><code>  query EmployeeSubordinate($id: ID) {&#xA;    subordinate(positionId: $id) {&#xA;      name&#xA;    }&#xA;}&#xA;</code></pre>&#xA;<pre><code>{&#xA;    &quot;id&quot; : 93&#xA;}&#xA;</code></pre>&#xA;<p>I ve got result all rows of employee, not employee with <code>id_position = 93</code></p>&#xA;<p>how to solve this?</p>&#xA;",7102816,,,,2022-11-08 02:51:01,Search By Column in Laravel/Lighthouse GraphQL API,<graphql>,0,0,0,2022-11-08 02:51:01
74357470,1,,,0,16,"<p>I'm trying to implement AWS Appsync in my React-native code for creating graphQL environment.</p>&#xA;<p>I have added the following code in my index.ts file:</p>&#xA;<pre><code>const client = new AWSAppSyncClient({&#xA;  url: awsconfig.graphqlEndpoint,&#xA;  region: awsconfig.region,&#xA;  auth: {type: AUTH_TYPE.API_KEY, apiKey: awsconfig.apiKey}&#xA;});&#xA;</code></pre>&#xA;<p>But in most of the docs, I've seen they are using Lambda or something else. I am using simple API to get and post the data.</p>&#xA;<p>What should be the code after this to get connected?</p>&#xA;",7008582,,,,2022-11-08 18:34:14,How to implement AWS Appsync (using HTTP method) in React-native code?,<typescript><react-native><graphql><apollo-client><aws-appsync>,0,0,0,2022-11-08 08:07:24
74360273,1,,,0,17,"<p>I am new to coding and monday.com Qraph QL. I have the following parse error when trying to compile my graph ql code to connect to monday.com and return values from a certain column:</p>&#xA;<p>Error:</p>&#xA;<pre><code>{&#xA;  &quot;errors&quot;: [&#xA;    {&#xA;      &quot;message&quot;: &quot;Parse error on \&quot;function\&quot; (IDENTIFIER) at [1, 1]&quot;,&#xA;      &quot;locations&quot;: [&#xA;        {&#xA;          &quot;line&quot;: 1,&#xA;          &quot;column&quot;: 1&#xA;        }&#xA;      ]&#xA;    }&#xA;  ],&#xA;  &quot;account_id&quot;: //my board ID is mentioned here&#xA;}&#xA;</code></pre>&#xA;<p>My Code:</p>&#xA;<pre><code>function requestMonday(){&#xA;  var base_url = 'https://api.monday.com/v2';&#xA;  var api_key = 'Added my API key here'&#xA;  boards(limit:1, ids:[added my board ID here]) {&#xA;    name&#xA;    id&#xA;    items {&#xA;      name&#xA;      group {&#xA;        id&#xA;      }&#xA;      &#xA;      column_values(ids:[location]) {&#xA;        id&#xA;        value&#xA;        text&#xA;        &#xA;      }&#xA;    }&#xA;  }&#xA;}&#xA;&#xA;}`&#xA;  &#xA;  var headers = {&#xA;    &quot;Authorization&quot;: api_key, &#xA;    &quot;Content-Type&quot;: &quot;application/json&quot;&#xA;  }&#xA;&#xA;  var options = {&#xA;    headers: headers,&#xA;    method: &quot;POST&quot;,&#xA;    payload: JSON.stringify ({&#xA;      query: query&#xA;    })&#xA;    &#xA;  }&#xA;    &#xA;    var response = UrlFetchApp.fetch(base_url, options).getContentText();&#xA;    var result = JSON.parse(respone);&#xA;    &#xA;    console.log(&quot;result::&quot;, result.data.boards[0]);&#xA;</code></pre>&#xA;<p>I would appreciate any feedback on how to resolve this issue. TIA</p>&#xA;",18630139,,,,2022-11-08 11:51:50,"How can I resolve monday.com parse error: ""Parse error on \""function\"" (IDENTIFIER) at [1, 1]"",?",<javascript><html><graphql><monday.com>,0,0,0,2022-11-08 11:51:50
74385448,2,,71528554,1,,"<p>Whenever you receive an <code>Error: Request failed with status code 401</code> in your <code>AWS AppSync Console</code> and you were using <code>Lambda Authorizer</code> as your <strong>custom Authorizer</strong> for your API. Irrespective of what are the frameworks you used to create the Infrastructure i.e., <code>CDK or SAM or Serverless Framework</code>. Check whether you have added these correctly for your <code>Lanbda Authorizer</code></p>&#xA;<ul>&#xA;<li>Check you have added proper policystatement to your Lambda Authorizer</li>&#xA;<li>Check you have added permission for your <code>Lambda Authorizer</code> to your <code>API</code>&#xA;<strong>Eg:</strong>&#xA;If you are using <code>AWS CDK</code> to create all your AppSync and Lambda Authorizer, Add these two things to solve the above error</li>&#xA;</ul>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-html lang-html prettyprint-override""><code>    lambdaAuth.addToRolePolicy(""your policy statement""),&#xA;    lambdaAuth.addPermission(""appsync"",{&#xA;     principal:  new ServicePrincipal(""appsync.amazonaws.com""),&#xA;     action: ""lambda:InvokeFunction""&#xA;    })</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;",20465988,,,,2022-11-10 07:26:53,"",,0,0,0,2022-11-10 07:26:53
74409046,1,,,0,22,"<p>I'm working with a React App, using Heroku and Hasura.</p>&#xA;<p>After creating the column &quot;apellido&quot; in my table &quot;profesor&quot; in Hasura, i have been getting randomly this error whenever i'm trying to retrieve the &quot;apellido&quot; data from &quot;profesor&quot;</p>&#xA;<pre><code>field 'apellido' not found in type: 'profesores'&quot;&#xA;</code></pre>&#xA;<p>in, for example, this subscription.</p>&#xA;<pre><code>subscription GetProfesor2($profesorKey: uuid!) {&#xA;                profesores(where: { key: { _eq: $profesorKey } }) {&#xA;                    key&#xA;                    nombre&#xA;                                        apellido&#xA;                    editor&#xA;                }&#xA;            }&#xA;</code></pre>&#xA;<p>For some reason, my react SPA sometimes throws this error, getting stuck randomly because of it.</p>&#xA;<p>If i spam f5, sometimes it works and i'm able to navigate and do stuff, but if i reload again or change users, there's a chance for the error to appear and i'm forced to just spam f5 until it dissapears.</p>&#xA;<p>I tried to run yarn-codegen after creating the column &quot;apellido&quot; in my table before uploading the code, &quot;reload&quot; the metadata in hasura and trying to find if there's a setup in hasura but was unable to find anything. [<img src=""https://i.stack.imgur.com/UcDN0.png"" alt=""hasura"" />]</p>&#xA;<p>Sorry about the info but i'm a novice at this so it's hard to know what or where i should look.</p>&#xA;",18031372,,,,2022-11-11 23:10:11,"Randomly graphql error ""field 'apellido' not found in type: 'profesores'""",<reactjs><heroku><graphql><hasura>,0,3,0,2022-11-11 23:10:11
74415591,2,,74409919,0,,"<p>I contacted the contributors and they gave me the solution on <a href=""https://github.com/aws-amplify/amplify-js/issues/10664"" rel=""nofollow noreferrer"">github</a> which is not currently in their documentations. Basically we have to pass the <code>_version</code> in the request. We first have to query to get the <code>_version</code> and the send it back when we want to update the database.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>try {&#xA;      const result = await API.graphql({&#xA;        query: updatePersonalInfo,&#xA;        variables: {&#xA;          input: {&#xA;            ...&#xA;            _version: data._version&#xA;          }&#xA;        }&#xA;      });&#xA;</code></pre>&#xA;<p>Just in case if you need to know how to get the _version value, here is the sample code:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>  const _getPersonalInfo = async () =&gt; {&#xA;    try {&#xA;      const currentUser = await Auth.currentAuthenticatedUser();&#xA;      return await API.graphql({&#xA;        query: getPersonalInfo,&#xA;        variables: {id: currentUser.attributes.sub}&#xA;      });&#xA;    } catch (err) {&#xA;      console.log(err);&#xA;      return err;&#xA;    }&#xA;  };&#xA;&#xA;&#xA;_getPersonalInfo().then((response: any) =&gt; {&#xA;    const _version = response.data.getPersonalInfo._version;&#xA;}&#xA;</code></pre>&#xA;",1575639,,1575639,2022-11-12 18:47:17,2022-11-12 18:47:17,"",,0,0,0,2022-11-12 18:40:30
74416654,1,,,0,29,"<p><strong>The Task:</strong>&#xA;Imagine a large-ish company or product that has many microservices run by separate teams. Each microservice exists in a separate repo. You want to build a single unified Apollo GraphQL API which collates all the subgraphs from the separate microservice APIs. And you want to build it using Serverless technologies. The Unified API should be authenticated using Cognito but the underlying subgraph APIs shouldn't be exposed to the public internet.</p>&#xA;<p><strong>Ideal Scenario:</strong> AWS-AppSync would support federation natively.</p>&#xA;<p><strong>In reality Scenario:</strong> Since this can't be done easily we have to run the Apollo Federation Server in a lambda which is fronted by API Gateway. The setup of the Federation server knows where the endpoints are for the subgraph.</p>&#xA;<p><strong>Question:</strong> How to we construct the subgraphs using AppSync or further Lambda servers for each microservice, or something else? What techniques have people used to deploy Apollo Federation within AWS?</p>&#xA;<p><strong>Design Considerations:</strong></p>&#xA;<p><em>Resources Based Policies:</em>&#xA;What I would prefer is the API-Gateway to be authenticated with Cognito but the App Sycn subgraphs to be given full access to the Lambda. However because App Sync doesn't support Resource Based Policies this isn't possible.</p>&#xA;<p><em>API-Key:</em>&#xA;I can use API-Key auth on the subgraphs but since AppSync has publically accessible endpoints this feels like a security risk.</p>&#xA;<p><em>Cognito:</em>&#xA;A possibility - would need to pass through Cognito auth from API-Gateway, to Lambda, then to subgraphs. Feels icky.</p>&#xA;<p><em>Lambda Authorization:</em>&#xA;Add Lambda auth for subgraphs and use request context(?) to determine the request was coming internally. A hack for resource-based policies.</p>&#xA;<p><em>Out to Internet and Back Subgraph:</em>&#xA;AppSync provides a pubilc url for the endpoint and composing the federated graph pulls the schemas to build the supegraph schema. This feels like internal services going out to the internet and then back in.  The best solution would be some internal ip addresses / urls and hosting all the subgraphs within a private VPC.</p>&#xA;<p>Conclusion:&#xA;Building a secure federated graph feels hacky with serverless technologies. It feels like I should avoid AppSync all together and use a subgraphs (Private API Gateways in private VPC - powered by Lambdas) feeding info to a Public API Gateway authenticated by Cognito.</p>&#xA;<p>Interested in thoughts.</p>&#xA;",695921,,695921,2022-11-13 20:36:07,2022-11-13 20:36:07,How to build an AWS serverless Apollo Federation API which is constructed from subgraphs in separate microservices?,<amazon-web-services><aws-appsync><apollo-federation>,0,0,0,2022-11-12 21:16:23
74431097,1,,,2,23,"<p>I get the exception ValidationException: One of the required keys was not given a value&#xA;when I click on the Play button as instructed in an <a href=""https://amplify-sns.workshop.aws/en/30_mock/20_post_back_end.html"" rel=""nofollow noreferrer"">AWS workshop page</a>. Any advice would be really helpful!</p>&#xA;<pre><code>AppSync Mock endpoint is running at http://192.168.20.3:20002&#xA;Error while executing Local DynamoDB&#xA;{&#xA;    &quot;version&quot;: &quot;2018-05-29&quot;,&#xA;    &quot;operation&quot;: &quot;PutItem&quot;,&#xA;    &quot;attributeValues&quot;: {&#xA;        &quot;type&quot;: {&#xA;            &quot;S&quot;: &quot;post&quot;&#xA;        },&#xA;        &quot;content&quot;: {&#xA;            &quot;S&quot;: &quot;test&quot;&#xA;        },&#xA;        &quot;timestamp&quot;: {&#xA;            &quot;N&quot;: &quot;1668425585&quot;&#xA;        },&#xA;        &quot;owner&quot;: {&#xA;            &quot;S&quot;: &quot;7d8ca528-4931-4254-9273-ea5ee853f271::user1&quot;&#xA;        },&#xA;        &quot;__typename&quot;: {&#xA;            &quot;S&quot;: &quot;Post&quot;&#xA;        }&#xA;    },&#xA;    &quot;condition&quot;: {&#xA;        &quot;expression&quot;: &quot;attribute_not_exists(#id)&quot;,&#xA;        &quot;expressionNames&quot;: {&#xA;            &quot;#id&quot;: &quot;id&quot;&#xA;        }&#xA;    },&#xA;    &quot;key&quot;: {}&#xA;}&#xA;ValidationException: One of the required keys was not given a value&#xA;&#xA;</code></pre>&#xA;<p>Schema file</p>&#xA;<pre><code>input AMPLIFY {&#xA;  globalAuthRule: AuthRule = { allow: public }&#xA;} # FOR TESTING ONLY!&#xA;type Post&#xA;  @model(&#xA;    mutations: { create: &quot;createPost&quot;, delete: &quot;deletePost&quot;, update: null }&#xA;    timestamps: null&#xA;    subscriptions: { level: public }&#xA;  )&#xA;  @auth(&#xA;    rules: [&#xA;      {&#xA;        allow: owner&#xA;        ownerField: &quot;owner&quot;&#xA;        provider: userPools&#xA;        operations: [read, create, delete]&#xA;      }&#xA;      { allow: private, provider: userPools, operations: [read] }&#xA;    ]&#xA;  ) {&#xA;  type: String! # always set to 'post'. used in the SortByTimestamp GSI&#xA;  id: ID!&#xA;  content: String!&#xA;  owner: String&#xA;  timestamp: Int!&#xA;}&#xA;</code></pre>&#xA;<p>(I tried adding and removing the exclamation to the <strong>ID</strong> here)</p>&#xA;<p>Screenshot&#xA;<a href=""https://i.stack.imgur.com/z63MH.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/z63MH.jpg"" alt=""enter image description here"" /></a></p>&#xA;",951984,,,,2022-11-16 11:58:22,How to fix the ValidationException with AWS amplify mock api,<amazon-web-services><graphql><amplify>,0,0,0,2022-11-14 11:44:09
74434314,2,,74423510,0,,"<p>In the end what I had to do is this:</p>&#xA;<pre><code>const response = await API.graphql(graphqlOperation(createNotification, {input:{...data, storeNotificationsId:'someValidStoreId'}}));  &#xA;&#xA;                       &#xA;</code></pre>&#xA;",14351825,,,,2022-11-14 15:44:51,"",,0,0,0,2022-11-14 15:44:51
74444682,2,,74444474,0,,"<ol>&#xA;<li><p>Convert response json to dart  from this site : <a href=""https://javiercbk.github.io/json_to_dart/"" rel=""nofollow noreferrer"">https://javiercbk.github.io/json_to_dart/</a></p>&#xA;</li>&#xA;<li><p>ClassName classObject = ClassName.fromJson(jsonEncode(mutationResult.data));</p>&#xA;</li>&#xA;<li><p>You can access like this :  <code>classObject.data.signup</code> and so on.</p>&#xA;</li>&#xA;</ol>&#xA;",4373661,,,,2022-11-15 11:13:53,"",,0,1,0,2022-11-15 11:13:53
74457681,1,,,0,54,"<p>I use <code>NestJj</code>,<code>PostgreSQL</code> and <code>Graphql</code> for Back-End,&#xA;<code>Flutter</code>,<code>graphql_flutter</code> for Front End.</p>&#xA;<p>I have a <code>collection store</code> like this :</p>&#xA;<p><a href=""https://i.stack.imgur.com/PxRu0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PxRu0.png"" alt=""enter image description here"" /></a></p>&#xA;<p>I want to get the following result:</p>&#xA;<pre class=""lang-js prettyprint-override""><code>[&#xA;    {&#xA;        type:'A',&#xA;        details:[&#xA;            {name:'Food1'}    &#xA;        ]&#xA;    },&#xA;    {&#xA;        type:'Expense',&#xA;        details:[&#xA;            {name:'gym'},&#xA;            {name:'Dinner'}&#xA;        ]&#xA;    },&#xA;    {&#xA;        type:'Revenue',&#xA;        details:[&#xA;            {name:'Revenue'}    &#xA;        ]&#xA;    }&#xA;]&#xA;</code></pre>&#xA;<p>For show on the device :&#xA;<a href=""https://i.stack.imgur.com/Ey1H1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ey1H1.png"" alt=""enter image description here"" /></a>&#xA;How can I query?&#xA;Could you help me?</p>&#xA;",10459359,,10459359,2022-11-16 15:27:55,2022-11-16 15:27:55,How to query data from `PostgresSql`?,<postgresql><flutter><nestjs><graphql-flutter>,1,5,0,2022-11-16 08:58:47
74458217,1,,,0,16,<p>I would like to be able to use custom headers in queries and mutations.&#xA;Basically it would be some context that all the queries and mutations should take into account.</p>&#xA;<p>I cannot find a way to do it. Is it even possible with the the current (v2.15.0 as of writing) version of Hasura?</p>&#xA;<p>Tried searching the web</p>&#xA;,20518460,,,,2022-11-16 09:41:03,Hasura - Use custom headers in queries and mutations,<graphql><hasura>,0,1,0,2022-11-16 09:41:03
74463737,1,,,0,17,"<p>I need my queries to be executed only depending on the role with which I enter</p>&#xA;<pre><code>@Query(() =&gt; String)&#xA;ping(){&#xA;    return &quot;ping&quot;;&#xA;}&#xA;</code></pre>&#xA;<p>If for example I have 3 roles, admin, seller, and customer. If I want this query to be executed only with the administrator role, how can I do it with casl?</p>&#xA;",15764087,,,,2022-11-16 16:45:58,RBAC applied to a query with casl,<typescript><graphql><casl>,0,0,0,2022-11-16 16:08:30
74467544,2,,74145926,0,,"<p>Yeah, so AppSync VTL resolvers are split into 2 parts, the request mapping template and the response mapping template.</p>&#xA;<p>After we execute the request mapping template part, the results of it get stored into the context object, the <code>$ctx</code>, as <code>$ctx.result</code>, so this result key has the result of the previous step, which is the request mapping template execution.</p>&#xA;<p>Well, looks like you've got the request mapping template set up correctly, where you execute SQL statements by utilizing the <code>&quot;statements&quot;</code> kind of key, that would be executed against your attached data source, which is in that case, the RDS.</p>&#xA;<p>Here's the bit, the SQL statements execution results coming back from RDS (called using the Data API when using AppSync) when executing the request mapping template, are in fact these plain results:</p>&#xA;<pre><code>{sqlStatementResults=[{records=[[{stringValue=001}, {stringValue=nonemail@none.no}, {stringValue=Nully}, {longValue=62761} ... },&#xA;</code></pre>&#xA;<p>So, unlike what you'd expected, this <code>$ctx.result</code> needs to be parsed back to the right key/value pairs that are configured according to the RDS db schema.</p>&#xA;<p>So you would just need to have the response mapping template, parse the results from the request mapping template execution, by simply instead of just returning the <code>$ctx.result</code>, you would do this:</p>&#xA;<pre><code>$util.rds.toJsonObject($ctx.result)[0]&#xA;</code></pre>&#xA;<p>This would give you back your data, formatted correctly in JSON, with the correct keys.</p>&#xA;",20524153,,,,2022-11-16 21:38:13,"",,0,0,0,2022-11-16 21:38:13
74469304,1,,,1,19,"<p>While using a Lambda function to update using the mutation in GraphQL, the data gets updated but on subscribing it the data shows up as NULL. This Issue happens only when i make a change in the schema by adding a new Field / Column. This issue does not happen when i don't make any changes in the existing schema.</p>&#xA;<p><a href=""https://i.stack.imgur.com/as8Yt.png"" rel=""nofollow noreferrer"">Subscription error after adding new Field to an existing schema</a></p>&#xA;<p>Note: We are using amplify</p>&#xA;<p>when i make a change in the schema by adding a new Field / Column and I use a Lambda function to update data using the mutation in GraphQL, the data gets updated and on subscribing it the updated new data must show.</p>&#xA;<p>if we try adding a new field to the schema and try updating the new field using a Backend Lambda function using mutation. the new field gets updated. Now Try getting the updated data using Subscription / Query from any Frontend/ Amplify. I think there is a problem with the resolver which is sending the data as NULL.<a href=""https://i.stack.imgur.com/imayI.png"" rel=""nofollow noreferrer"">Schema where new field address added</a></p>&#xA;",20525493,,,,2022-11-23 22:24:25,Cannot Return null for non-nullable type: 'String' within Parent (Error while adding a new field in the Schema),<aws-amplify-cli><graphql-mutation>,1,0,0,2022-11-17 01:59:59
74479337,2,,65649383,0,,"<p>you have to update the metadata, from the console it would be:</p>&#xA;<pre><code>hasura metadata reload&#xA;</code></pre>&#xA;",1272368,,,,2022-11-17 17:00:06,"",,0,0,0,2022-11-17 17:00:06
74500500,1,,,0,33,"<p>I am new to AWS and trying to deploy a GraphQL API written in NodeJS as an AWS Lambda using Serverless. I have followed several tutorials that are close to what I am doing but cannot get the handler to work. The closest tutorial to what I am doing was using JavaScript, where I am using TypeScript. I followed closely but using TypeScript. I am getting errors that it cannot find the handler module (Error: Cannot find module 'lambda').</p>&#xA;<p>My handler file is named lambda.ts looks like this&#xA;`</p>&#xA;<pre><code>import {app} from './app';&#xA;import {serverless} from 'serverless-http';&#xA;&#xA;export const handler = serverless(app);&#xA;</code></pre>&#xA;<p>`</p>&#xA;<p>My serverless.yml looks like this&#xA;`</p>&#xA;<pre><code>service: graphql-api&#xA;&#xA;frameworkVersion: '3'&#xA;&#xA;provider:&#xA;  name: aws&#xA;  runtime: nodejs12.x&#xA;  region: us-east-1&#xA;functions:&#xA;  serverlessApi:&#xA;    handler: lambda.handler&#xA;</code></pre>&#xA;<p><code>app.ts</code></p>&#xA;<pre><code>import express from 'express';&#xA;import cors from 'cors';&#xA;import { graphqlHTTP } from 'express-graphql';&#xA;import { schema, resolvers } from './api-schema/';&#xA;import { loginMiddleware } from './login-middleware';&#xA;&#xA;const app = express();&#xA;app.use(cors());&#xA;app.use(express.json());&#xA;app.use(express.urlencoded({ extended: true }));&#xA;app.use(loginMiddleware);&#xA;app.use(&#xA;    '/graphql',&#xA;    graphqlHTTP({&#xA;        schema: schema,&#xA;        graphiql: true,&#xA;        rootValue: resolvers,&#xA;    })&#xA;);&#xA;&#xA;export default app;&#xA;</code></pre>&#xA;<p>`&#xA;The lambda.js, app.ts, and serverless.yml files are all in the same root directory.</p>&#xA;<p>I have tried to convert the code to JavaScript and get errors that it cannot find the 'app' module. (Cannot find module './app')</p>&#xA;<p>lambda.js and looks like this&#xA;`</p>&#xA;<pre><code>const app = require('./app');&#xA;const serverless = require('serverless-http');&#xA;&#xA;module.exports.handler = serverless(app);&#xA;&#xA;</code></pre>&#xA;<p>`</p>&#xA;<p>I have also tried to export 'app' as default or named getting the same result. I am out of ideas. Any help is much appreciated.</p>&#xA;",3349255,,,,2022-11-22 21:29:05,How to configure Serverless Lambda for Graphql API with Typescript,<node.js><typescript><aws-lambda><serverless><express-graphql>,2,0,0,2022-11-19 13:36:29
74503487,1,,,0,15,"<p>I have datamodel (users table with id,lastName,firstName) I created in amplify studio. the appsync api was created and works as expected.</p>&#xA;<p>I added index on that same table with lastName key. I want to search by lastName on that index using appsync graphql api. what do I need to do to add this new index to the graphql schema in order to query it by lastName?</p>&#xA;<p>I can query the index by lastName in dynamoDB dashboard (on aws) no problem.</p>&#xA;",5063972,,,,2022-11-19 20:31:58,appsync graphql query target index on specific dynamodb table instead of table itself,<amazon-web-services><graphql><amazon-dynamodb><aws-appsync>,0,0,0,2022-11-19 20:31:58
74518845,1,,,0,17,"<p>I'm trying to run a simple mutation using AppSync with <code>aws-sdk</code> in a NodeJS environment. I'm making an error but I can't figure it out. This query works in my AppSync console:</p>&#xA;<pre><code>mutation MyMutation {&#xA;  createApiKey(input: {key: &quot;testconsole2&quot;}) {&#xA;    id&#xA;    key&#xA;  }&#xA;}&#xA;</code></pre>&#xA;<p>Then when I try it in NodeJS I can't get it work (despite all of my other similar queries working):</p>&#xA;<pre class=""lang-js prettyprint-override""><code> async function createApiKey({ encryptedKey }: { encryptedKey: string }) {&#xA;    const createApiKeyQueryString = `mutation createApiKey(&#xA;      $key: String!,&#xA;    ){&#xA;      createApiKey(&#xA;        input: {&#xA;          key: $key&#xA;        }&#xA;      ){&#xA;        key&#xA;      }&#xA;    }`;&#xA;    try {&#xA;      const runMutation = await appSyncClient.mutate({&#xA;        mutation: gql(createApiKeyQueryString),&#xA;        variables: {&#xA;          key: encryptedKey,&#xA;        },&#xA;      });&#xA;&#xA;      console.log({&#xA;        response: runMutation // Throws error before we reach here&#xA;      });&#xA;      return (runMutation as { data }).data;&#xA;    } catch (error) {&#xA;      console.log(error); //  ApolloError: GraphQL error: Validation error of type FieldUndefined: Field 'createApiKey' in type 'Mutation' is undefined @ 'createApiKey&#xA;    }&#xA;  }&#xA;</code></pre>&#xA;<p>I'm making a silly error, but I can't figure out what I'm doing wrong, or what the error message means?</p>&#xA;",11664580,,,,2022-11-21 15:07:45,ApolloError: GraphQL error: Validation error of type FieldUndefined: Field '<my query name>' in type 'Mutation' is undefined @ '<my query name',<node.js><graphql><aws-sdk><aws-amplify><aws-appsync>,1,0,0,2022-11-21 12:21:22
74520973,2,,74518845,0,,"<p>I was using the wrong AppSync URL (eg, &quot;https://.appsync-api.eu-west-2.amazonaws.com/graphql&quot;).</p>&#xA;<p>This meant that the schema name for my ApiKey table didn't exist, which is what the following was trying to tell me:</p>&#xA;<pre><code>ApolloError: GraphQL error: Validation error of type FieldUndefined: &#xA;Field 'createApiKey' in type 'Mutation' is undefined @ 'createApiKey&#xA;</code></pre>&#xA;<p>Basically, because I hadn't deployed my ApiKey schema from my <code>amplify.graphql</code> file, Amplify hadn't generated the relevant AppSync calls (ie, 'createApiKey'). So when I tried to invoke the call with my NodeJS code, AppSync told me that it was undefined.</p>&#xA;",11664580,,,,2022-11-21 15:07:45,"",,0,0,0,2022-11-21 15:07:45
74524291,1,,,0,28,"<p>I have a series of forms that collects data into a form object, and on submit pushes that formdata to a dynamodb table via graphql query. For some reason I'm getting the following error.</p>&#xA;<pre><code>The variables input contains a field name 'kidney infection' that is not defined for input object type 'CreateFormsInput'&#xA;</code></pre>&#xA;<p>I'm not sure what information is relevant to solving the issue, but here's my schema</p>&#xA;<pre><code>type Forms @model @auth(rules: [{ allow: public }]) {&#xA;  ...&#xA;  substances: [String]&#xA;  medications: [AWSJSON]&#xA;  condition_history: [AWSJSON]&#xA;  allergies: [AWSJSON]&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;<p>and here's how I'm pushing</p>&#xA;<pre><code>const formResponse = await API.graphql(graphqlOperation(createForms, { input: tempForm }));&#xA;</code></pre>&#xA;<p>When I'm building the form, the <code>condition_history</code> value is an object, but i do stringify it because that's what aws wants. An example value would be a stringified <code>{problem: &quot;kidney infection&quot;}</code>, turned into <code>&quot;{\&quot;problem\&quot;:\&quot;kidney infection\&quot;}&quot;</code>. Of course, this is an array item, and multiple of these stringified objects can be in it.</p>&#xA;<p>And the thing is, I'm doing similar processes for things like <code>medications</code> and <code>allergies</code> but those aren't throwing any similar issues.</p>&#xA;<p>The issue does not persist if <code>condition_history</code> value is an empty array.</p>&#xA;<p>Am I missing something?</p>&#xA;<p>Edit to add more information.</p>&#xA;<p>The full(ish) createForm mutation autogenerated by graphql (adding ... to just cut out several irrelevant variables; just more of the same):</p>&#xA;<pre><code>export const createForms = /* GraphQL */ `&#xA;  mutation CreateForms(&#xA;    $input: CreateFormsInput!&#xA;    $condition: ModelFormsConditionInput&#xA;  ) {&#xA;    createForms(input: $input, condition: $condition) {&#xA;      id&#xA;      facility_id&#xA;      ...&#xA;      medications&#xA;      condition_history&#xA;      ...&#xA;      createdAt&#xA;      updatedAt&#xA;    }&#xA;  }&#xA;`;&#xA;</code></pre>&#xA;<p>and the tempForm object that is sent to the API, also similarly trimmed to show relevant information:</p>&#xA;<pre><code>{​&#xA;allergies: [ &quot;{\&quot;allergy\&quot;:\&quot;\&quot;,\&quot;details\&quot;:\&quot;\&quot;}&quot; ],&#xA;...&#xA;condition_history: [ &quot;{\&quot;problem\&quot;:\&quot;kidney infection\&quot;}&quot; ],&#xA;date_of_birth: &quot;1966-01-04&quot;,&#xA;medications: [ &quot;{\&quot;medication\&quot;:\&quot;\&quot;,\&quot;dose\&quot;:\&quot;\&quot;,\&quot;frequency\&quot;:\&quot;\&quot;}&quot; ]​,&#xA;smoking_history: &quot;{\&quot;has_smoked\&quot;:\&quot;false\&quot;,\&quot;currently_smokes\&quot;:\&quot;\&quot;,\&quot;cigarettes_per_day\&quot;:\&quot;\&quot;,\&quot;year_quit_smoking\&quot;:\&quot;\&quot;}&quot;,&#xA;}&#xA;</code></pre>&#xA;<p>and unstringified:</p>&#xA;<pre><code>{&#xA;    ...&#xA;    &quot;smoking_history&quot;: {&#xA;        &quot;has_smoked&quot;: &quot;false&quot;,&#xA;        &quot;currently_smokes&quot;: &quot;&quot;,&#xA;        &quot;cigarettes_per_day&quot;: &quot;&quot;,&#xA;        &quot;year_quit_smoking&quot;: &quot;&quot;&#xA;    },&#xA;    &quot;medications&quot;: [&#xA;        {&#xA;            &quot;medication&quot;: &quot;&quot;,&#xA;            &quot;dose&quot;: &quot;&quot;,&#xA;            &quot;frequency&quot;: &quot;&quot;&#xA;        }&#xA;    ],&#xA;    &quot;allergies&quot;: [&#xA;        {&#xA;            &quot;allergy&quot;: &quot;blah&quot;,&#xA;            &quot;details&quot;: &quot;sdsds&quot;&#xA;        }&#xA;    ],&#xA;    &quot;condition_history&quot;: [&#xA;        {&#xA;            &quot;problem&quot;: &quot;kidney infection&quot;&#xA;        }&#xA;    ],&#xA;    &quot;kidney infection&quot;: true #this might be the problem...&#xA;}&#xA;</code></pre>&#xA;",5556670,,5556670,2022-11-22 20:16:33,2022-11-22 20:16:33,AWS Amplify The variables input contains a field name that is not defined for input object type,<reactjs><graphql><aws-amplify>,0,7,0,2022-11-21 20:00:46
74537392,2,,74535214,1,,"<p>It looks like you wrote your query correctly. You will get a GraphQL error if you provide the <code>_size</code> argument where it is not allowed.</p>&#xA;<p>If there are only 50 results showing up when providing a size greater than 50, then there most likely exactly 50 matches.</p>&#xA;<p>The GraphQL query you shared will be compiled to FQL that works roughly like the following, and return the result of paginating the nested relationship with the size that you provide.</p>&#xA;<pre class=""lang-js prettyprint-override""><code>Let(&#xA;  v0: Paginate(Match(Index(&quot;groups&quot;)), { size: 100 }),&#xA;  {&#xA;    groups: {&#xA;      data: Map(&#xA;        Var(&quot;v0&quot;),&#xA;        Lambda(&#xA;          &quot;ref&quot;,&#xA;          Let(&#xA;            {&#xA;              v1: Paginate(&#xA;                Match(Index(&quot;group_users_by_group&quot;), Var(&quot;ref&quot;)),&#xA;                { size: 500 }&#xA;              )&#xA;            },&#xA;            {&#xA;              users: Map(Var(&quot;v1&quot;), /* ... select fields for users */),&#xA;              /* ... select other fields for group */&#xA;            }&#xA;          )&#xA;        )&#xA;      )&#xA;    }&#xA;  }&#xA;)&#xA;</code></pre>&#xA;<p>If you are still concerned that there is an issue, please contact Fauna support at support.fauna.com or by emailing support@fauna.com, using the email you used to sign up. Then we can take a closer look at your account.</p>&#xA;",534056,,,,2022-11-22 18:21:44,"",,0,0,0,2022-11-22 18:21:44
74565114,2,,74563095,0,,"<p>I noticed that new cards that I add are returned, but ones that were added before adding the @searchable directive don't get returned.</p>&#xA;<p>There's a grey info paragraph in the docs <a href=""https://docs.amplify.aws/cli/graphql/search-and-result-aggregations/"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/search-and-result-aggregations/</a>:</p>&#xA;<blockquote>&#xA;<p>Once the @searchable directive is added, all new records added to the model are streamed to OpenSearch. To backfill existing data, see Backfill OpenSearch index from DynamoDB table.</p>&#xA;</blockquote>&#xA;<p>It looks like any previous items that I've created on the database won't be streamed to OpenSearch, and therefore won't be returned by 'search' AppSync calls.</p>&#xA;<p>We're directed here: <a href=""https://docs.amplify.aws/cli/graphql/troubleshooting/#backfill-opensearch-index-from-dynamodb-table"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/troubleshooting/#backfill-opensearch-index-from-dynamodb-table</a></p>&#xA;<p>We are instructed to use the provided python file with this command:</p>&#xA;<pre><code>python3 ddb_to_es.py \&#xA;  --rn 'us-west-2' \ # Use the region in which your table and OpenSearch domain reside&#xA;  --tn 'Post-XXXX-dev' \ # Table name&#xA;  --lf 'arn:aws:lambda:us-west-2:&lt;...&gt;:function:amplify-&lt;...&gt;-OpenSearchStreamingLambd-&lt;...&gt;' \ # Lambda function ARN, find the DynamoDB to OpenSearch streaming functions, copy entire ARN&#xA;  --esarn 'arn:aws:dynamodb:us-west-2:&lt;...&gt;:table/Post-&lt;...&gt;/stream/2019-20-03T00:00:00.350' # Event source ARN, copy the full DynamoDB table ARN&#xA;</code></pre>&#xA;<p>(I've tried this with my region, ARN's, and DynamoDB references but when I hit enter in my CLI it just goes to the next command line and nothing happens? I've not used python before. Hopefully someone here has more luck?)</p>&#xA;",11664580,,,,2022-11-24 18:47:32,"",,0,0,0,2022-11-24 18:47:32
74565212,1,,,0,10,"<p>TLDR: I'm trying to execute a <code>ddb_to_es.py</code> file in order to backfill OpenSearch index on my DynamoDB table. But when I run the command in the terminal nothing happens.</p>&#xA;<p>I've made an update to my Amplify/GraphQL schema and added a @searchable directive.</p>&#xA;<p>I need to backfill OpenSearch index on my DynamoDB table, as per the grey info paragraph in the docs <a href=""https://docs.amplify.aws/cli/graphql/search-and-result-aggregations/"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/search-and-result-aggregations/</a>:</p>&#xA;<blockquote>&#xA;<p>Once the @searchable directive is added, all new records added to the model are streamed to OpenSearch. To backfill existing data, see Backfill OpenSearch index from DynamoDB table.</p>&#xA;</blockquote>&#xA;<p>The docs direct to these docs: <a href=""https://docs.amplify.aws/cli/graphql/troubleshooting/#backfill-opensearch-index-from-dynamodb-table"" rel=""nofollow noreferrer"">https://docs.amplify.aws/cli/graphql/troubleshooting/#backfill-opensearch-index-from-dynamodb-table</a></p>&#xA;<p>We are instructed to use the provided <a href=""https://raw.githubusercontent.com/aws-amplify/amplify-category-api/main/packages/graphql-elasticsearch-transformer/scripts/ddb_to_es.py"" rel=""nofollow noreferrer"">python file</a> with this command:</p>&#xA;<pre><code>python3 ddb_to_es.py \&#xA;  --rn 'us-west-2' \ # Use the region in which your table and OpenSearch domain reside&#xA;  --tn 'Post-XXXX-dev' \ # Table name&#xA;  --lf 'arn:aws:lambda:us-west-2:&lt;...&gt;:function:amplify-&lt;...&gt;-OpenSearchStreamingLambd-&lt;...&gt;' \ # Lambda function ARN, find the DynamoDB to OpenSearch streaming functions, copy entire ARN&#xA;  --esarn 'arn:aws:dynamodb:us-west-2:&lt;...&gt;:table/Post-&lt;...&gt;/stream/2019-20-03T00:00:00.350' # Event source ARN, copy the full DynamoDB table ARN&#xA;</code></pre>&#xA;<p>I've tried this with my region, ARN's, and DynamoDB references but when I hit enter in my CLI it just goes to the next command line and nothing happens? I've not used python before. There are import statements at the top of the file, but I'm only trying to run the file in isolation. Is there an environment I need to set up?</p>&#xA;",11664580,,,,2022-11-28 08:58:00,Trying to execute a `ddb_to_es.py` file in order to backfill OpenSearch index on my DynamoDB table (for @searchable Amplify directive),<python><amazon-web-services><graphql><amazon-dynamodb><aws-appsync>,1,0,0,2022-11-24 18:58:09
74595129,1,,,0,18,<p>Currently I'm on aws amplify and I have several authorizers (graphql lambda authorizer) but I can't specify the name of the one I want to use for my user table.</p>&#xA;<p>Anyone have an idea how to do it?</p>&#xA;<pre><code>type User&#xA;  @model&#xA;  @auth(rules: [{ allow: custom }])&#xA;{&#xA;  id: ID!&#xA;  first_name: String&#xA;  last_name: String&#xA;}&#xA;</code></pre>&#xA;,13289397,,13289397,2022-11-28 23:01:03,2022-11-28 23:01:03,Amplify - Specify the Graphql Authoriser lambda on Amplify schema,<graphql><aws-amplify><aws-appsync>,0,0,0,2022-11-28 01:29:22
74597896,1,,,0,19,"<p>i made some app and connected that with GraphQl to the mongodb , and now everything is fine Except reloud part. the app does mutation and get data from database but when update the database dont update in my App Although the database is updated.i put the code's picture, thanks.</p>&#xA;<p><a href=""https://i.stack.imgur.com/0RZT0.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/ahk9E.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;",20621281,,20621281,2022-11-28 08:33:17,2022-11-28 08:33:17,Flutter graphQl Can't update,<node.js><flutter><graphql><flutter-dependencies><flutter-web>,0,0,0,2022-11-28 08:31:24
74598167,2,,74565212,0,,"<p>I have got it working. It seemed to respond this morning where it didn't on Friday. This is what I did today:</p>&#xA;<p>Install file dependencies:</p>&#xA;<pre><code>pip3 install boto3&#xA;</code></pre>&#xA;<p>Execute file in cli (I changed the file name to the pathname):</p>&#xA;<pre><code>python3 /Users/myName/myPythonExecution/ddb_to_es.py \&#xA;  --rn 'eu-west-2' \&#xA;  --tn '&lt;DynamoDB table name from console&gt;-dev' \&#xA;  --lf 'arn:aws:lambda:eu-west-2:&lt;AWS Account number&gt;:function:amplify-&lt;name of app&gt;-OpenSearchStreamingLambd-&lt;id of lambda, found in Lambda Console&gt;' \&#xA;  --esarn 'arn:aws:dynamodb:eu-west-2:&lt;AWS account number&gt;:table/&lt;DynamoDB table name from console&gt;/stream/&lt;date/time of table creation, found in DynamoDB console table information&gt;'&#xA;</code></pre>&#xA;",11664580,,,,2022-11-28 08:58:00,"",,0,0,0,2022-11-28 08:58:00
74605196,1,,,-1,41,"<p>I'm exporting the Monday.com dashboard via their API in Power Bi.&#xA;My problem is that I can't extract the detail from the Time Tracking column. It only shows me the total number of hours of the task (which is what the board shows, but when entering the cell it gives me the detail). Do you know how to do, to export that detail? Thanks</p>&#xA;<p><a href=""https://i.stack.imgur.com/IIEnT.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;<p><a href=""https://i.stack.imgur.com/fwmve.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;<pre><code>&#xA;</code></pre>&#xA;<p>The query:</p>&#xA;<pre><code>let&#xA;    Source = Web.Contents(&quot;....&quot;,&#xA;    [&#xA;        Headers=[&#xA;            #&quot;Method&quot;=&quot;POST&quot;,&#xA;            #&quot;Content-Type&quot;=&quot;application/json&quot;,&#xA;            #&quot;Authorization&quot;=&quot;Bearer ....&quot;&#xA;            ],&#xA;            Content=Text.ToBinary(&quot;{&quot;&quot;query&quot;&quot;: &quot;&quot;{ boards (ids: ...) { items {  id name column_values {       title text  } } } }&quot;&quot;}&quot;)&#xA;            ]&#xA;    ),&#xA;    #&quot;JSON&quot; = Json.Document(Source,65001),&#xA;    data = JSON[data],&#xA;    boards = data[boards],&#xA;    boards1 = boards{0},&#xA;    items = boards1[items],&#xA;    #&quot;Converted to Table&quot; = Table.FromList(items, Splitter.SplitByNothing(), null, null,    ExtraValues.Error),&#xA;    #&quot;Expanded Column1&quot; = Table.ExpandRecordColumn(#&quot;Converted to Table&quot;, &quot;Column1&quot;, {&quot;name&quot;, &quot;column_values&quot;}, {&quot;Column1.name&quot;, &quot;Column1.column_values&quot;}),&#xA;    #&quot;Expanded Column1.column_values&quot; = Table.ExpandListColumn(#&quot;Expanded Column1&quot;, &quot;Column1.column_values&quot;),&#xA;    #&quot;Expanded Column1.column_values1&quot; = Table.ExpandRecordColumn(#&quot;Expanded Column1.column_values&quot;, &quot;Column1.column_values&quot;, {&quot;title&quot;, &quot;text&quot;}, {&quot;Column1.column_values.title&quot;, &quot;Column1.column_values.text&quot;}),&#xA;    #&quot;Changed Type&quot; = Table.TransformColumnTypes(#&quot;Expanded Column1.column_values1&quot;,{{&quot;Column1.column_values.title&quot;, type text}}),&#xA;    #&quot;Pivoted Column&quot; = Table.Pivot(#&quot;Changed Type&quot;, List.Distinct(#&quot;Changed Type&quot;[Column1.column_values.title]), &quot;Column1.column_values.title&quot;, &quot;Column1.column_values.text&quot;),&#xA;    #&quot;Tipo cambiado1&quot; = Table.TransformColumnTypes( #&quot;Pivoted Column&quot;,{{&quot;Tipo&quot;, type text}, {&quot;Estado&quot;, type text}, {&quot;Prioridad&quot;, type text}, {&quot;Column1.name&quot;, type text}, {&quot;Subelementos&quot;, type text}, {&quot;Item ID&quot;, Int64.Type}}),&#xA;    #&quot;Errores quitados&quot; = Table.RemoveRowsWithErrors(#&quot;Tipo cambiado1&quot;, {&quot;Subelementos&quot;}),&#xA;    #&quot;Columnas con nombre cambiado1&quot; = Table.RenameColumns(#&quot;Errores quitados&quot;,{{&quot;Esfuerzo HS.&quot;, &quot;Esfuerzo        Hs&quot;}, {&quot;Asignado A&quot;, &quot;Asignado a&quot;}}),&#xA;    #&quot;Personalizada agregada&quot; = Table.AddColumn(#&quot;Columnas con nombre cambiado1&quot;, &quot;Tablero&quot;, each 1)&#xA;</code></pre>&#xA;<pre><code>&#xA;</code></pre>&#xA;<p>This query brings me everything that is seen on the dashboard</p>&#xA;<pre><code></code></pre>&#xA;",20626014,,,,2022-11-28 18:45:00,How to extract the detail of the Monday.com Time Tracking column through its API in Power Bi,<api><graphql><powerbi><powerquery><monday.com>,0,1,0,2022-11-28 18:45:00
74607671,1,,,0,17,"<p>I am working on a project with <code>GraphQL Mesh</code>.</p>&#xA;<p>With one of the use cases I have one <code>openapi</code> endpoint. In there, I need to handcraft a resolver that is using types from that openapi schema definations. I tried using different <code>handlers</code>, but types are not sharing across. I also tried to add multiple sources inside one handler, but the customised one (in 2nd place) is not showing in the schema.</p>&#xA;<p>If anyone know how to deal with this case, lease help me out. Thank you.</p>&#xA;<p>I am expecting to use types from the <code>openapi</code> spec in the custome handler.</p>&#xA;",20627991,,,,2022-11-28 23:45:36,GraphQL Mesh sharing types across handler or different sources,<node.js><swagger><openapi><graphql-mesh>,0,0,0,2022-11-28 23:45:36
74611245,2,,74599040,0,,"<p>For anyone else that has use cas for having the relation-column information.</p>&#xA;<p>We are using Hasura for our GraphQl server so use meta data endpoints for relation information.</p>&#xA;<p>I was using introspection to determine also the relations but it does not give the information.</p>&#xA;<p><a href=""https://hasura.io/docs/latest/migrations-metadata-seeds/manage-metadata/"" rel=""nofollow noreferrer"">https://hasura.io/docs/latest/migrations-metadata-seeds/manage-metadata/</a></p>&#xA;",7829481,,,,2022-11-29 08:43:44,"",,0,0,0,2022-11-29 08:43:44
74615645,2,,74609491,1,,"<p>Storefront API is NOT the same as the Admin API. To delete a customer you would be needing to make calls to the Admin API endpoint, with a valid token that has permission to delete customers. So the answer for you is to get yourself an Admin API token to use that mutation.</p>&#xA;",210841,,,,2022-11-29 14:30:18,"",,0,0,0,2022-11-29 14:30:18
74619363,2,,74606728,0,,"<p>Answer: it was because my Users collection restricted read access to admins. Setting the <code>Users.access</code> to:</p>&#xA;<pre><code>  // access: {&#xA;  //   read: Collection.isAdminOrSelf, // blocks access to nested graphql&#xA;  // },&#xA;  access: {&#xA;    read: () =&gt; true, // allows access&#xA;  },&#xA;</code></pre>&#xA;",7268341,,,,2022-11-29 19:35:27,"",,0,0,0,2022-11-29 19:35:27
74622338,1,,,0,7,"<p>I have a problem in posts query, I want to add a new key <strong>likes</strong> to the existing posts query to count total number likes to the particular post.</p>&#xA;<p>Is there any hooks to do it??</p>&#xA;<p>I have tried with another custom query to get post like by post id but need to add that key to that existing posts query.&#xA;<a href=""https://i.stack.imgur.com/qwbYH.png"" rel=""nofollow noreferrer"">enter image description here</a></p>&#xA;",18800090,,,,2022-11-30 02:47:39,How to add a custom field to wpgraphql existing query,<wordpress><plugins><wp-graphql>,0,0,0,2022-11-30 02:47:39
74623099,1,,,0,23,"<p>I have a table with a enum type field &quot;A&quot;</p>&#xA;<p>I create a view from that table field &quot;A&quot;, but then type of field &quot;A&quot; in view is not enum anymore</p>&#xA;<p>How can i make field &quot;A&quot; in view is enum like in table</p>&#xA;",20320613,,20320613,2022-11-30 05:58:50,2022-11-30 05:58:50,View in hasura and table field type not match,<postgresql><graphql><hasura>,0,1,0,2022-11-30 05:02:02
74630975,2,,67442802,0,,"<p>You should consider using <code>Schema Directives</code> for this use case.&#xA;That basically allows you to only resolve some specific field if the user has permission for it. Otherwise you can return null or throw an error.</p>&#xA;<p>So in the end you would have a single type User like this:</p>&#xA;<pre><code>directive @hasRole(role: String) on FIELD_DEFINITION&#xA;&#xA;type User {&#xA;  id: ID!&#xA;  username: String!&#xA;  avatarUrl: String!&#xA;  email: String! @hasRole(role: &quot;USER&quot;)&#xA;  mailingAddress: Address! @hasRole(role: &quot;USER&quot;)&#xA;  team: Team! @hasRole(role: &quot;USER&quot;)&#xA;  lastLogin: DateTime! @hasRole(role: &quot;USER&quot;)&#xA;}&#xA;</code></pre>&#xA;<p>Then you can have a directive resolver kinda like this:</p>&#xA;<pre><code>const directiveResolvers = {&#xA;  ...,&#xA;  hasRole: (next, source, {role}, ctx) =&gt; {&#xA;    const user = getUser()&#xA;    if (role === user.role) return next();&#xA;    throw new Error(`Must have role: ${role}, you have role: ${user.role}`)&#xA;  },&#xA;  ...&#xA;}&#xA;</code></pre>&#xA;<p>If you have a field that only <code>ADMIN</code> can query, you would just use the <code>@hasRole(role: &quot;USER&quot;)</code> directive.</p>&#xA;<p>Then your service layer (or your resolver if you don't have a service layer) would be responsible to define <em>which</em> User to fetch (if your own user or some user based on ID as long as you have permission).</p>&#xA;<p>You can use directives for a lot of different use cases. Here are a few good references:&#xA;<a href=""https://www.prisma.io/blog/graphql-directive-permissions-authorization-made-easy-54c076b5368e"" rel=""nofollow noreferrer"">https://www.prisma.io/blog/graphql-directive-permissions-authorization-made-easy-54c076b5368e</a>&#xA;<a href=""https://www.apollographql.com/docs/apollo-server/schema/directives/"" rel=""nofollow noreferrer"">https://www.apollographql.com/docs/apollo-server/schema/directives/</a></p>&#xA;",9655043,,,,2022-11-30 16:19:48,"",,0,0,0,2022-11-30 16:19:48
74634310,2,,66045793,0,,"<p>&quot;aws_appsync_graphqlEndpoint&quot;: &quot;https://xxx.appsync-api.ap-northeast2.amazonaws.com/graphql&quot;,&#xA;&quot;aws_appsync_region&quot;: &quot;ap-northeast-2&quot;,&#xA;&quot;aws_appsync_authenticationType&quot;: &quot;AMAZON_COGNITO_USER_POOLS&quot;,&#xA;//if you use API key</p>&#xA;<p>&quot;aws_appsync_apiKey&quot;: &quot;xxxxxxxxxxxxxxxxxxxxxxxx&quot;,<br />&#xA;&quot;aws_appsync_dangerously_connect_to_http_endpoint_for_testing&quot;: true</p>&#xA;",19894800,,19894800,2022-11-30 21:57:03,2022-11-30 21:57:03,"",,0,1,0,2022-11-30 21:22:13
74635843,1,,,0,14,"<p>Amplify allows <a href=""https://docs.amplify.aws/lib/datastore/setup-auth-rules/q/platform/js/#configure-multiple-authorization-types"" rel=""nofollow noreferrer"">specifying multiple authorization strategies</a> on persistence operations. I want to use Lambda authorization for some operations (mutations), and Cognito owner-based authorization for other operations (queries).</p>&#xA;<p>In my tests, Cognito conflicts with the Lambda authorization and Lambda execution gets skipped entirely. Is there a way around this?</p>&#xA;<p>I read that Lambda authorization <a href=""https://docs.amplify.aws/lib/datastore/setup-auth-rules/q/platform/js/#configure-custom-authorization-logic-with-aws-lambda"" rel=""nofollow noreferrer"">expects a custom auth token to be provided</a>. Can I just pass the auth token of the signed-in Cognito user to the Lambda as a &quot;custom&quot; token? The end goal is to have both the Lambda authorizer and the auto-generated VTL resolvers execute.</p>&#xA;",1831004,,,,2022-12-01 01:07:26,AWS Amplify: possible to use Cognito with Lambda authorization?,<authentication><graphql><authorization><aws-amplify><aws-appsync>,0,0,0,2022-12-01 01:07:26
74644999,2,,62953062,0,,<p>use Table name as camelCase in prisma Client to make Queries</p>&#xA;<p>Example:&#xA;Table Name is: <code>StudentData</code></p>&#xA;<p>then use camelCase according to table name&#xA;prisma.<code>studentData</code>.findMany();</p>&#xA;,15020191,,,,2022-12-01 16:18:48,"",,0,0,0,2022-12-01 16:18:48
74656461,1,,,0,16,"<p>I have an AWS Amplify App using Cognito auth</p>&#xA;<p>These are the affected Models/Schemas:</p>&#xA;<pre><code>type Objective&#xA;@model&#xA;    id: ID!&#xA;    ..&#xA;    employee: Profile @belongsTo&#xA;    tenant: String&#xA;}&#xA;</code></pre>&#xA;<pre><code>type Profile&#xA;@model&#xA;    id: ID!&#xA;    ..&#xA;    objectives: [Objective] @hasMany&#xA;    tenant: String&#xA;}&#xA;</code></pre>&#xA;<p>When I try to Query for list or get, the API returns the objective with all fields except employee (set to null) and also the following error message:</p>&#xA;<p>GraphQLResponseError&#xA;message:&#xA;&quot;Not Authorized to access employee on type Objective&quot;</p>&#xA;<p>Any Idea what I am missing?</p>&#xA;<p>I use tenant-based custom logic using customized .vtl templates in amplify which uses the authfilter (similar to the owner based approach generated by amplify). This works great with the Exception of trying to get the employee (Profile) field.</p>&#xA;<p>the logic looks a bit like the following:</p>&#xA;<pre><code>## [Start] Authorization Steps. **&#xA;$util.qr($ctx.stash.put(&quot;hasAuth&quot;, true))&#xA;#set( $isAuthorized = false )&#xA;#set( $primaryFieldMap = {} )&#xA;#if( $util.authType() == &quot;User Pool Authorization&quot; )&#xA;    #if( !$isAuthorized )&#xA;        #set( $authFilter = [] )&#xA;        #set( $ownerClaim0 = $util.defaultIfNull($ctx.identity.claims.get(&quot;sub&quot;), null) )&#xA;        #set( $currentClaim1 = $util.defaultIfNull($ctx.identity.claims.get(&quot;username&quot;),&#xA;        $util.defaultIfNull($ctx.identity.claims.get(&quot;cognito:username&quot;), null)) )&#xA;        #if( !$util.isNull($ownerClaim0) &amp;&amp; !$util.isNull($currentClaim1) )&#xA;            #set( $ownerClaim0 = &quot;$ownerClaim0::$currentClaim1&quot; )&#xA;            #if( !$util.isNull($ownerClaim0) )&#xA;                $util.qr($authFilter.add({&quot;owner&quot;: { &quot;eq&quot;: $ownerClaim0 }}))&#xA;            #end&#xA;        #end&#xA;        #set( $role0_0 = $util.defaultIfNull($ctx.identity.claims.get(&quot;sub&quot;), null) )&#xA;        #if( !$util.isNull($role0_0) )&#xA;            $util.qr($authFilter.add({&quot;owner&quot;: { &quot;eq&quot;: $role0_0 }}))&#xA;        #end&#xA;        #set( $role0_1 = $util.defaultIfNull($ctx.identity.claims.get(&quot;username&quot;),&#xA;        $util.defaultIfNull($ctx.identity.claims.get(&quot;cognito:username&quot;), null)) )&#xA;        #if( !$util.isNull($role0_1) )&#xA;            $util.qr($authFilter.add({&quot;owner&quot;: { &quot;eq&quot;: $role0_1 }}))&#xA;        #end&#xA;        ## begin custom auth with tenantId&#xA;        #if( $groupsInToken.contains(&quot;tenant-admin&quot;) )&#xA;            #foreach( $group in $groupsInToken )&#xA;                $util.qr($authFilter.add({&quot;tenant&quot;: { &quot;eq&quot;: $group }}))&#xA;            #end&#xA;        #end&#xA;        ## end custom auth&#xA;        #if( !$authFilter.isEmpty() )&#xA;            $util.qr($ctx.stash.put(&quot;authFilter&quot;, { &quot;or&quot;: $authFilter }))&#xA;        #end&#xA;    #end&#xA;#end&#xA;#if( !$isAuthorized &amp;&amp; $util.isNull($ctx.stash.authFilter) )&#xA;    $util.unauthorized()&#xA;#end&#xA;$util.toJson({&quot;version&quot;:&quot;2018-05-29&quot;,&quot;payload&quot;:{}})&#xA;## [End] Authorization Steps. **&#xA;</code></pre>&#xA;<p>The 'groupsInToken' will contain the corresponding tenant (id) supplied by a pretoken generation lambda.</p>&#xA;<p>This exact approach works fine for all Queries.</p>&#xA;<p>Just this Profile Object within the Objective payload seems to not be working with this approach and i can't figure out why.</p>&#xA;",20230883,,20230883,2022-12-02 13:26:44,2022-12-02 13:26:44,AWS Amplify Graphql Unauthorized Error - Not Authorized to access [...] on type [...],<graphql><amazon-dynamodb><aws-amplify><aws-appsync>,0,0,0,2022-12-02 13:22:37
74659826,1,,,1,23,"<p>We have two services exposing two sets of schemas, merged in a gateway using <a href=""https://the-guild.dev/graphql/tools/docs/schema-stitching/stitch-combining-schemas"" rel=""nofollow noreferrer"">Graphql Tools Schema Stitching</a></p>&#xA;<p>Is it possible to merge queries from two services in such a way that it returns combined results?&#xA;Example case:</p>&#xA;<p><strong>Book service</strong> contains data for books</p>&#xA;<pre><code>interface Searchable {&#xA; id: ID!&#xA;} &#xA;&#xA;type Book implements Searchable {&#xA;  id: ID!&#xA;  name: String&#xA;  # other fields&#xA;}&#xA;&#xA;type Query {&#xA; _search( term: String ): [Searchable]&#xA;}&#xA;</code></pre>&#xA;<p><strong>User Service</strong> has the data for authors</p>&#xA;<pre><code>interface Searchable {&#xA; id: ID!&#xA;} &#xA;&#xA;type Author implements Searchable {&#xA;  id: ID!&#xA;  name: String&#xA;  # other fields&#xA;}&#xA;&#xA;type Query {&#xA; _search( term: String ): [Searchable]&#xA;}&#xA;</code></pre>&#xA;<p><strong>Gateway</strong></p>&#xA;<pre><code>&#xA;interface Searchable {&#xA; id: ID!&#xA;} &#xA;&#xA;type Book implements Searchable {&#xA;  id: ID!&#xA;  name: String&#xA;  # other fields&#xA;}&#xA;&#xA;&#xA;type Author implements Searchable {&#xA;  id: ID!&#xA;  name: String&#xA;  # other fields&#xA;}&#xA;&#xA;type Query {&#xA; search( term: String ): [Searchable]&#xA;}&#xA;</code></pre>&#xA;",3599251,,3599251,2022-12-02 18:31:59,2022-12-04 08:42:23,How to merge results from two gql queries in to one array of results?,<graphql><typegraphql><graphql-tools>,1,0,0,2022-12-02 18:06:32
74667049,1,,,0,10,"<p>I am currently using a lambda function attached to my graphql createUser.</p>&#xA;<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">&#xD;&#xA;<div class=""snippet-code"">&#xD;&#xA;<pre class=""snippet-code-js lang-js prettyprint-override""><code>schema.graphql&#xA;&#xA;    type User&#xA;      @model(queries: { get: null }, mutations: null, subscriptions: null)&#xA;      @auth(rules: [&#xA;        { allow: groups, groups: [""ADMIN""] }&#xA;      ])&#xA;    {&#xA;      id: ID!&#xA;      first_name: String!&#xA;      last_name: String!&#xA;      email: String!&#xA;    }&#xA;  createUser(input: CreateUser!): User&#xA;    @function(name: ""createUser-${env}"")&#xA;    @auth(rules: [&#xA;      { allow: groups, groups: [""ADMIN""] }&#xA;    ])</code></pre>&#xD;&#xA;</div>&#xD;&#xA;</div>&#xD;&#xA;</p>&#xA;<p>I'm trying to return a 401 status code from my lambda but it's not working, how can I do that ?</p>&#xA;",13289397,,,,2022-12-03 13:09:26,Amplify - Custom status code from Graphql lambda function,<aws-lambda><aws-amplify><graphql-js>,0,0,0,2022-12-03 13:09:26
